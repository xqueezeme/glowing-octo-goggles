{
    "title": "The Shepherd of Ashburn Court Pt. 05",
    "pages": [
        "Author's Notes:\n\nIn Part 5 Ben deals with the twins, meets the new neighbors from Texas, and a moment in Ben's past catches up to him in a rather disturbing way.\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nChapter 21\n\nBen sat comfortably in his living room reviewing online engineering forums on his tablet while he waited for Catherine to pick him up for their date. He'd wrapped a tensor bandage around his calf and with it he found he didn't need to use the cane. He'd take the bandage off as soon as they left the dinner but he didn't want to be carrying the cane on the date. Catherine might want to dance and he didn't want her to feel like she couldn't ask.\n\nHe glanced across the room at Tina who was using a tablet as well as she curled up on the sofa. He wasn't sure what she was doing on it but he felt her glancing over it at him from time to time. She put it on the surface of the couch while she spun around to adjust the pillows behind her. He looked over and saw a couple of chat windows open with names above them, LisaM &amp; LoriM.\n\nSo Tina was in communication with her friends, likely trying to do damage control from their poor drunken decision making. He looked away before she turned back.\n\nBen shook his head and sighed to himself. He thought back on the near catastrophe the morning had almost turned into.\n\nWhen he discovered the twins and Tina naked in his bed with Rochelle and himself, he'd been furious. He'd given Tina a heads up that Rochelle was staying the night and he'd closed his bedroom door. That should have been enough to give them privacy. Instead it was an invasion and Rochelle was going to be in for an unpleasant surprise.\n\nHe managed to slip out of the bed and pull the sheet up over Rochelle before he carefully woke her. She smiled and gave him a very nice kiss before he could let her know about their company who luckily remained asleep. He got Rochelle out of the bed and situated in the guest washroom in the hall so she could get dressed without waking the others. The woman was grateful to Ben for giving her the discrete escape. She gave him another kiss which tingled both of them to their toes then she slipped out the door for home.\n\nBen went back to his room and got his workout clothes and changed in the washroom. He did his routine in the gym then got cleaned up and dressed in the guest bathroom. Then he went to the kitchen to make himself breakfast. He made coffee for his guests.\n\nHe was just finishing up his morning meal when Tina stumbled into the kitchen with her dressing gown on. She had her head in her hands as she was obviously nursing a bad hangover. She tried to smile at him but her look was confused.\n\n\"Good morning Ben.\" she whispered. \"How did I end up in your bed?\"\n\nBen held up his hand to stop her questions. \"Let's hold off on that until your guests are awake.\"\n\nTina pulled her hands from her face and her eyes went fully open. She spun in place and ran for the bedroom. Her equilibrium wasn't up to the demands of that action so she careened off the door jamb and bounced off the walls on the way. Ben knew when she got there as she began to yell in Korean in her dismay. The twins yelled back in pain because of her loud voice and the noise settled into mutual moans of pain from their hangovers.\n\nBen poured three cups of coffee and put three bottles of water next to them on the kitchen table. He heard the zombies shambling their way towards him so he waited. A very contrite Tina entered first. She made her way to Ben and knelt at his feet. She pressed her forehead to the floor in shame. Ben reached down and lifted her to her feet and sat her in front of a mug.\n\nThe twins watched and shuddered in relief when Ben picked Tina up. They assumed this indicated he wasn't expecting the same from them. When they looked at him their smiles were met by an angry scowl. Nervously they made their way to the other mugs. The three drank their coffee and sipped at their water in silence. Tina finally felt human enough to begin to apologize but Ben immediately stopped her with a gesture. He hadn't taken his eyes off of the twins who were becoming very nervous.\n\nHe waited for them to apologize but they showed no sign of remorse at all for their behavior. Tina was an innocent in this, he was sure. Certainly she had been in his bed and he would talk with her about this but the twins obviously had far more experience with clubbing than she did. Yet they appeared oblivious to the reason for his ire.\n\nThe two ladies were wearing their party clothes from the previous night so Ben was treated to expanses of glitter covered skin. He sighed as he realized he was going to have to throw out his sheets. There was no way he was going to infect his washing machine, and subsequently every piece of fabric he ran through them, with the Herpes of the Craft World. God, he hated glitter!\n\nTheir nervousness was reaching a critical point where they were trading glances with each other and Tina to determine what to do next. Ben had had enough.\n\n\"Lisa. Lori. It's clear to me that you have no idea why I'm upset. The fact that you don't understand is unsettling in itself. It's time you headed home. You're not welcome back until you fully grasp what you did wrong and what you should have done. Out. Now!\"\n\nThe ladies jerked to their feet like he'd hit them with a cattle prod and scurried to the front door, Ben at their heels. They yanked on their jackets, slipped on their shoes and were out the door in seconds. Ben turned back to the kitchen and saw Tina standing in the doorway with a sad look on her face.\n\n\"I'm so sorry, Ben.\" she cried.\n\nBen opened his arms and she was against his chest in a blink. She cried and he stroked her hair until he smelled the scent of smoke coming from her. He held her back and she blinked up at him in alarm.\n\n\"Sorry, you need a shower. You smell of cigarettes. Do the twins smoke?\"\n\n\"No, but we stood close to the smoking deck at the club as there were some young men Lisa and Lori were dancing with who smoked.\"\n\n\"Another strike against their good judgement.\" Ben grumbled and considered what to do next. He was very concerned about the twin's inability to grasp personal responsibility. They'd be taking care of children for Pete's sake! He got a grim look on his face.\n\n\"Please go wash that stink out of your hair.\" he said gently to Tina and she scurried away.\n\nBen picked up the phone in the kitchen and called Daphne.\n\n\"Hello Daphne? It's Ben.\"\n\n\"Hi Ben!\" she said with a smile in her voice.\n\n\"I just sent your daughters home.\"\n\n\"They are just coming in... oh, they look very unhappy. What did they do this time?\" she said with genuine concern.\n\n\"They're there? Good. Listen, I'm having concerns about their watching over Christopher.\"\n\n\"What?!? Oh my god! What did they do?\" she shrieked.\n\n\"No, it wasn't what they did. That was just something stupid and potentially very embarrassing which I was luckily able to avoid. The problem is they don't seem to be able to understand they need to take ownership of their mistakes. Twice they've done something irresponsible and afterwards they had no clue that they did anything wrong so they made no efforts at all to apologize. Their actions have consequences. They have to understand that. I get that they're young but they're going to be watching over children, Christopher included. I'm not comfortable knowing they have trouble accepting personal responsibility.\" There was silence at the other end of the phone so Ben continued. \"I'm sorry if I've offended you. I just have to put Christopher's safety first.\"\n\n\"Thank you for expressing your concerns Ben. I'll keep the position for Christopher open in case you change your mind. I'll also have a talk with the girls this morning and get to the bottom of this.\" Daphne made an uncomfortable sound in her throat. \"I'm so sorry, Ben.\"\n\n\"Me too, Daphne. Me too. Good bye.\" He hung up.\n\nHe turned and saw Tina standing in the doorway with a nervous look in her eye. Her hair was still damp from the shower. He gestured her to come in and she immediately rushed in to sit on his knee. He'd intended for her to sit on the chair next to him so they could talk but she looked like she needed the physical contact. She looked in his eyes for confirmation that they were still good. He took her beautiful face between his hands and tenderly kissed her. He felt her tension melt away as she leaned into his kiss. He pulled back and she swayed a little until her eyes reopened. They smiled at one another.\n\n\"What will we do for daycare for Christopher?\" she asked.\n\n\"If Daphne can't work out a way to get her daughters to understand then we find another daycare. This will not affect your going to University. I promise you that.\" Ben said firmly.\n\nThey'd spent the rest of the day mostly in silence. Ben didn't need Tina to explain herself and her actions from the previous night. She knew what she did was wrong and she owned up to it. It was done. They moved on. He let her know that his decision to bar the twins from his home shouldn't impact her remaining friends with them. She was certainly free to have any friends that she wanted. He just hoped she would be a better influence on them and keep them from influencing her like they had. He expected better judgement from her in the future. She agreed.\n\nSo now he sat waiting for Catherine while Tina worked on her friends. Ben hoped Daphne was getting serious about them as well.\n\nThere was a honk from the driveway so Ben got up and walked to the front door. Tina followed and gave him a kiss as he stepped outside.\n\nCatherine popped the trunk and he put his overnight bag inside then got into the passenger side. She leaned over and he gave her a kiss. \"Ready for some fun?\" she said with a twinkle in her eye.\n\n\"Ready and raring to go!\" he smiled back.\n\nIt didn't take long to drive downtown to the hotel. They parked and checked in. After dropping the bags off in the room, they resisted the urge to 'try out the bed' and made their way down to the banquet room. The charity dinner was to begin at 8PM and Catherine's assistants had done most of the preparation work. She just needed to check in with them by 7:30 to ensure there weren't any surprises. They poked their heads in the banquet hall and were stunned to see how beautifully decorated it was. Elegant, opulent, and classic, the d\u00e9cor spoke of wealth and success. Ben and Catherine shared impressed looks and made their way to the small office next to the banquet room. Ben saw three ladies leaning over a desk reviewing some kind of checklist. They looked up with bright smiles as Catherine swept into the room. She immediately gave them all big hugs and congratulated them on the fabulous job they'd done on making the room look stunning. They turned to Ben and Catherine made the introductions.\n\nThe tall very slim blonde hiding behind her oversized glasses was Ingrid. Catherine explained that logistics was her specialty. Her yellow blond tresses fell a little past her shoulders and she wore a pretty pale green dress with matching shoes. When Ben shook her hand she was blushing and trembling so he immediately recognized her shyness. He'd been the same way through high school. He gave her hand a sympathetic squeeze before he moved to the next introduction.\n\nDarcy was just a little taller than Tina. Catherine said she was in charge of the finances for the dinner and tracking the donations as well. The woman wore her brown hair very short and she carried a little too much weight on her small frame. Her eyes positively gleamed as she ran them over Ben's body. She boldly asked Ben to save a few dances for her and Ingrid blushed at her audacity to say such a thing in front of their boss. Darcy just laughed at Ingrid's expression and straightened her low cut strapless blue dress to more favorably present 'the girls' for Ben's enjoyment. Ben blushed too which surprised Ingrid.\n\nAshanti was a lovely woman in her mid-thirties with skin the color of dark chocolate. She accentuated her skin with a gorgeous ivory colored dress which seemed to sweep around her slim body. She was apparently the designer of the group and had been primarily responsible for the look of the event. She rolled her eyes at Darcy's antics. Both Darcy and Ashanti wore wedding bands though Ingrid did not.\n\nAfter Catherine thanked them again Ashanti pulled her aside to whisper something in her ear. The smile dimmed on Catherine's face but she patted her assistant's hand. She and Ben returned to the reception area in the hall outside of the banquet room.\n\nShe looked at Ben's questioning glance and smiled. \"It's fine. Ashanti was just telling me about a last minute guest. An old nemesis of mine come to gloat over how her charity collected more in pledges than mine. The woman is tiresome. The charities are not a competition but she always finds a way to spoil the mood. Not this time! I don't care what she made. We had a very good year and with tonight's turn out we surpassed last year's pledges. Oh! Pardon me Ben, I have to go speak with that couple. I'll introduce you to them later, I just need have a private word with them.\"\n\nBen nodded and watched her move quickly and gracefully across the room to catch the eye of an older, white haired couple. Left to himself he looked around and saw the three assistants coming into the hall. He wanted to have a quick word with them so he caught their eye.\n\nCatherine was glowing with happiness. Dinner had been delicious and well received by everyone she spoke with. She'd circulated during dinner to see how everyone was doing and once the meal was over she introduced Ben to a number of her favorite patrons. She'd even managed to avoid her nemesis. The dancing began shortly afterwards and Ben had practically swept her off her feet on the dancefloor. She was having a marvelous time. Their last dance was a slow number and Ben felt so good pressed up against her. Especially when he started to react to her.\n\nAs they returned to their table their path was suddenly blocked by a tall raven haired woman in an elegant black and white striped cocktail dress. Her smile was as fake as her breasts which appeared to be attempting to escape by floating up out of her dress.\n\nCat sighed and resigned herself to listening to the pompous airbag's gloating. It didn't really matter as nothing was going to spoil this night for her.\n\n\"Catherine, darling! So good to finally catch you as you scurry around your little fundraiser.\" the woman said with a light but condescending tone.\n\nShe saw Ben's hackles go up and placed a hand on the big man's arm. He immediately relaxed.\n\n\"Hello Jacqueline. So glad you could come.\"\n\n\"Oh I wouldn't miss it for the world, dear! And who is this fine fellow escorting you tonight? He's new! I don't believe I've ever met him at any of your previous parties or mine for that matter.\" The woman was devouring Ben with her eyes and he found it more than a little disturbing. Wait... did she just suggest he was a male escort?\n\n\"Ben Shepherd, this is Jacqueline Forrester. She heads up the Heaven's Heralds Foundation. Their fund raising sponsors the building of Christian churches and schools in villages in Africa. Ben is my neighbor and very good friend.\" Catherine said with a smile.\n\nJacqueline had been unabashedly enjoying the view of Ben's physique and her eyes widened with excitement when she caught the outline of his prominent bulge. She looked back up to Ben's eyes and her smile trembled a little as Catherine's words finally sunk in. \"Your... neighbor?\"\n\n\"Right next door. For years.\" he said, his tone making it clear he wasn't pleased with her assumption.\n\nJacqueline's face flushed and her mouth worked as she tried to think of a way out of her gaff. It was Catherine who came to her rescue.\n\n\"I understand congratulations are in order. You're charity is poised to be nominated as top fundraiser again this year. That will be ten years in a row! Very impressive!\" she said with a genuine smile.\n\nJacqueline seized the lifeline and gushed her thanks to the woman.\n\nAshanti arrived at Catherine's elbow and whispered something in her ear.\n\n\"I'm sorry, I have to go speak with Darcy. If you will excuse me for a minute.\" She squeezed Ben's hand then slipped away.\n\nBen was left facing the woman whose face had returned to a look of embarrassment. The music started again and though he didn't recognize the piece Ben thought he had a way out of the awkwardness. \"Would you care to dance?\"\n\nJacqueline smiled and Ben led her to the floor. Just as they arrived the music's beat slowed and they realized it was going to be a slow number. Once more the woman's face flushed. Ben just took her hand, pulled her in and they moved with the others.\n\nThe dancefloor was full so they had to stay fairly close. This led to unintentional brushes against each other's body. Jacqueline's large breasts pressed against Ben's chest and occasionally her leg would bump into Ben's straining erection. More people joined the dancefloor and Ben found himself holding Jacqueline up against his body to avoid bumping into the other dancers. The woman was beginning to look a little glassy eyed and her breathing was getting heavier though she tried to maintain her poise.\n\nBen was getting worried that Jacqueline might pass out so he made to lead them from the dancefloor but the woman pulled him back with an almost frantic shake of her head and a quick smile to show she was fine. She began to grind against his erection subtly as they danced. Her face was flushed and her breathing was rough.\n\nThen the music stopped and the lights brightened slightly. Ben pulled away and Jacqueline made an unconscious whining sound. A spot light lit up the stage and Catherine's assistants were standing together.\n\nDarcy had the microphone. \"Excuse me everyone, excuse me? We just have one brief announcement then everyone can get back to the dancing. We have the final results of this year's fund raising. Due to tonight's excellent turnout and a last minute anonymous donation of $300,000 we have surpassed last year's record. We've also catapulted into first place amongst all local charities! Thank you so much!\"\n\nThere was a huge surge of applause and the crowd parted as Catherine walked up to Ben with tears in her eyes. Ben picked her up in his arms and hugged her tight. She burst into tears and laughter and kissed him. She knew who the anonymous donor was.\n\nJacqueline was stunned. The delicious tingle of her imminent orgasm suddenly vanished and her face lost all expression. She watched the woman she had come to crush steal away her victory. She struggled to control her emotions. She desperately wanted to scream and attack the blonde in the big man's arms but instead she forced a gracious if trembling smile on her face and joined the applause.\n\nBen gently set Catherine back on her feet and they turned to face the people around them. She shook the hands of many of her guests until she was facing Jacqueline.\n\n\"I guess congratulations are actually owed to you tonight Catherine.\" Jacqueline ground out through her teeth and fake smile.\n\n\"Thank you so much Jacqueline! Sorry for breaking your winning streak but there's no shame in being number 2.\" she replied with a giggle. Ben was behind her and wrapped his arms around her to give her another huge hug and Catherine's eyes lit up as she felt his stiffness pressed against her ass. She gasped and smiled at Jacqueline. \"I guess I should thank you for keeping Ben all charged up for me. I'm going to enjoy that, all night long.\" she said with a wicked grin as she pressed back against him.\n\nIt was too much for Jacqueline whose smile finally cracked. She nodded, spun and stiffly marched away.",
        "Catherine spun around in Ben's arms and kissed him deeply. \"Ben, you are the absolute best!\"\n\nThe band started playing one of their favorites so Ben pulled her out onto the dancefloor.\n\nThree songs later Ben was sitting one out at their table. His calf had begun to ache so he let Catherine know that fast numbers were out for the rest of the night for him. She found some other dance partners and he was pleased to see her happily dancing the evening away.\n\nIngrid was passing by and Ben reached out to snag her hand. He'd seen her watching people dance but she never joined in. She jumped when she felt someone touch her. She looked down and saw Ben smiling up at her. She blushed and sat in the chair Ben pulled out for her.\n\n\"How are you enjoying the party?\" he asked her.\n\n\"It's fine.\" she said with a shy smile.\n\n\"I was wondering if you would dance with me on the next slow number. I'm afraid I've strained my calf a little too much with the fast dancing so I'm down to slow dancing only.\"\n\nIngrid's eyes were wide and her face flushed. \"I- I- I don't think that's such a good idea. I don't dance.\"\n\n\"Everyone can dance a slow dance. I'd really like it if you would share one with me. Please?\" he looked into her eyes and she nodded.\n\n\"What happened to your calf?\" she asked to change the topic.\n\n\"I was stabbed.\"\n\n\"STABBED?\" she exclaimed.\n\n\"Yeah, a neighbor of mine dated a man who didn't like being told he wasn't worthy of another date. He got rough with her and I stopped him. He managed to stab me in the calf before I incapacitated him.\"\n\n\"Are you always this heroic?\" she asked.\n\nBen winced. \"No, I used to be crippled with shyness. I'm actually still pretty shy but I'm learning to speak up when it's important.\"\n\nThe next song began and Ben recognized a nice long slow number. He stood up and held out his hand for Ingrid's. She timidly placed hers in his and he led her to the dancefloor. He caught Catherine's eye and she gave him a big grin when she saw who he was with.\n\nOnce more the dancefloor was full so he pulled Ingrid up against his body and they began to move with the slow steady beat. He felt the woman trembling in his arms.\n\n\"Ingrid, it's alright. You're doing beautifully! You can relax.\" Ben said gently.\n\n\"I'm so nervous!\" she gasped.\n\n\"Why? I'm not a scary man, am I?\" he asked\n\n\"God no! You're beautiful-\" she blurted then realized what she said and tried to escape in her mortification. Ben wasn't letting her go and kept her pinned to his chest.\n\n\"That was a very nice compliment. Thank you. I think you are beautiful as well.\" he smiled.\n\nShe looked up and blinked at him. \"You think I'm beautiful?\"\n\n\"Ingrid, a man would have to be blind to not see that. You've had several admirers watching you all night. The bass player in the band, the bartender, the man wearing the blue pinstripe jacket sitting at the table next to mine. All of these men watch you every time you pass by. Avoid the man with the pinstripes as I believe he's married but the other two are potential dating material.\"\n\nShe wore a look of shock as she tried not to turn her head to look at the men he was talking about.\n\n\"Next time you pass them by, if you like what you see give them a smile and see where it takes you. If you don't care for their look just keep walking. Trust me there are people who think you're hot! You just have to be open to the possibility of new relationship. Maybe it will work or maybe it won't. You have SO much to offer you should ensure they are worthy of it.\"\n\nBy this point their rubbing and touches were working their magic on Ben and he was beginning to press against Ingrid in intimate ways. She suddenly realized what the wonderful pressure was coming from.\n\n\"Oh my god!\" she gasped.\n\n\"I'm so sorry! When we're dancing this close I can't help it.\" he blushed. \"Maybe we should sit down.\"\n\n\"NO! I mean I- I've never felt that before. I don't mind. It- it's kind of flattering! But won't Catherine get upset?\"\n\n\"Over this? No, she knows my body well enough to know I was bound to get excited dancing with you.\" Ben smiled.\n\n\"So... you and Catherine are... lovers?\" Ingrid couldn't believe she'd had the nerve to speak with Ben like this. He just made her feel so comfortable, like she could say anything without fear of being ridiculed. She wasn't aware that she'd fallen into an easy pattern of dancing with Ben, their bodies pressed firmly together, slowly moving across the floor\n\nBen nodded. \"She's a very special woman! I'm honored she's part of my life.\"\n\nIngrid began to feel a little flushed and the tingling in her body was intensifying. She was afraid to say anything about it as she didn't want it to stop. They continued to dance and Ingrid rested her cheek on Ben's shoulder. She remembered seeing couples on the dancefloor in high school. How were they holding each other? Oh right. She moved her arms around Ben's back and after a little pause he did the same to her. His hands felt so good on her body. They swayed to the music and Ingrid's body ground against Ben's. God, she was in heaven! If only she'd had the nerve to dance with the boys way back then. She'd missed out on so much pleasure.\n\nSuddenly her body went stiff and Ben continued to sway to keep up the illusion they were dancing for the people around them. He felt her gasping into his collar as she'd turned her face inwards to hide the look on her face as a sweet release swept through her.\n\nAfter she returned to her senses her mind slowly cleared until she realized what she'd just done. Her face went red and she tried to push away but Ben knew she'd have this reaction so he was prepared. He held her close and whispered in her ear that it was fine, she was beautiful, and he was very happy she was able to feel so comfortable in his arms. The song was ending so he led her from the dancefloor and sat with her at his table. When she was finally able to look at him he smiled gently.\n\n\"You were remembering your high school dances weren't you?\" She nodded hesitantly. \"I remember mine too. I didn't dance very much as I was always too shy. I'd watch the others and wish I had the nerve to ask a girl to dance. I had no idea they were just as nervous. We don't have to feel like that anymore. If you want to dance with someone ask them. If you'd like to get to know someone, speak with them. You're an amazing woman! Men are going to want to spend time with you. Just be careful you don't collect too many. Start with one.\" She grinned at that. She was looking at him with genuine affection and he leaned over and kissed her forehead.\n\n\"That's my signal to sweep in and collect my boyfriend before he's completely smitten.\" Catherine said as she stepped up to the table between the two. Ben looked up with a loving smile. Ingrid looked up with a guilty expression and Catherine chuckled. \"Not to worry Ingrid, I know Ben's a physically affectionate man but I also know he loves me and that's all I really need to know.\" Ingrid's face showed her relief.\n\nCatherine looked at Ben. \"The party is winding down and I'd like to make a quick exit before I get roped into helping clean up.\" she grinned, knowing full well that they'd hired a crew for that task.\n\n\"Oh! Sure.\" Ben said. He turned to Ingrid. \"Thank you for the dance! It really was lovely to meet you. Enjoy the rest of the party!\"\n\nShe nodded and blushed looking at him.\n\nCatherine pulled him up and led him through the dancers to the exit. As they walked through the lobby she occasionally stopped to say a few words to a departing guest. The general consensus was the party was a roaring success. As they passed the bar in the lobby Catherine stopped and stared at the figure slumped at the bar. The distinct black and white striped cocktail dress was a dead give-away. She looked at Ben in concern and they immediately went inside.\n\nCatherine approached from her right side while Ben went left.\n\n\"Jacqueline? Are you alright?\" she said gently.\n\nThe woman lifted her head from her arm on the bar and looked unsteadily towards the sound of the voice calling her name. Unfocused eyes swung around trying to see who was bothering her in her misery. When they finally locked on Catherine they went wide with exaggerated anger.\n\n\"YOU! You BITCH! You ruined EVERYTHING!\" Jacqueline roared drunkenly.\n\n\"What?\" Catherine pulled back from the blast of rum breath and spittle.\n\n\"Greg fired me! ME!\" the woman squealed and tears burst forth.\n\nBen looked questioningly at Catherine. \"Greg Masters. Head of the Ministry of Heaven's Voice.\" She explained.\n\n\"Yes, Greg Masters, bitch!\" Jacqueline growled dragging a bar napkin across her eyes to dry the tears. \"I told him you sabotaged our tenth consecutive win and he fired me!\"\n\n\"Why?\" Catherine asked.\n\n\"He had millions of dollars of sponsorship deals locked into our winning that tenth annual award. Now he has to pay them all back and there's no money! He called me an incompetent cunt!\" More tears followed the confession.\n\nBen started the recorder app on his phone.\n\n\"Where is the money the Heaven's Herald Foundation raised Jacqueline?\" Catherine said gently.\n\n\"It's invested.\" she mumbled.\n\n\"In what?\"\n\n\"A casino! Okay? Greg is building a casino in Las Vegas.\" Jacqueline growled. She suddenly got this desperate look on her face like she had to justify herself.\n\n\"We used the foundations money and most of the sponsorship money to purchase the land and pay for construction costs. The remaining sponsorship money would have covered the minimal needs of the charity until the casino was built and income started flowing in from that. No one sees how many churches and schools we build! They're in fucking Africa! This year we were only planning on building one of each. Now we can't afford to do even that! We would have generated far more income from the casino than we would have squeezing those fossils for donations.\"\n\n\"If Greg fired you, his chief fundraiser, how is he going to pay the foundation and sponsors back?\"\n\n\"I DON'T KNOW! YOU RUINED EVERYTHING!\" Jacqueline raged and made to grab Catherine but Ben caught her wrists from behind and crossed them over her chest as he pinned her back against his body.\n\n\"Wha-\" Jacqueline gasped as she looked down at the big arms encircling her. She looked up and saw Ben's stern face. \"Oh god it's you! Why? Why couldn't you have been an escort? I would have hired you immediately and taken you home and done things to you that would curl your hair. I felt you. I know you have a huge cock. I would have taken that monster in my ass. This bitch could never do that for you!\"\n\nJacqueline tried to hump her ass back against Ben's groin as he held her tight against her body. She almost fell off of her stool when Ben tried to angle his body away from her. To catch her he had to jerk forward to squeeze her to his body. The woman moaned loudly as she felt his hardening cock slam against her ass.\n\n\"Oh Catherine, please let me take him in my ass. I need it so bad. Greg only fucks me once a week and now he won't do it anymore.\n\n\"Greg's married to Helen.\" Catherine gasped, stunned by this additional confession.\n\n\"Yes, shhhh, don't tell her I'm getting some of her husband's wiener. Oh god, it's so small compared to this one. I could live without Greg's if I could have this one in my ass on a regular basis. Even once a week. Please!\"\n\nBen's face was bright red but his erection was loving the attention from Jacqueline's ass.\n\nCatherine was all grins at Ben's embarrassment but took pity on him and reached for his phone to turn off the recording as he couldn't reach it. She saved the file, mailed a copy to herself and one to Helen then walked a few steps away to make a call.\n\nJacqueline started to pull at her arms but Ben discovered she wasn't trying to escape. She was dragging Ben's knuckles over her stiff nipples. He held her tighter to stop that and she moaned in raw pleasure as his cock ground between her butt cheeks and his hands flattened her tits.\n\nCatherine returned and saw Ben's discomfort and Jacqueline's agitated state. Sighing she looked around and saw they were alone in the bar. She reached between the woman's legs and rubbed quickly and firmly over the woman's clit through wet panties. She put her other hand over the woman's mouth as she was moaning too loudly. Seconds later, between the heat and pressure of Ben's cock wedged between her ass cheeks, his crushing grip on her tits, and Catherine's aggressive rubbing the woman screamed into Cat's palm and passed out.\n\nCatherine went to wash her hands and was by Ben's side again when the police arrived.\n\nThree hours later Ben and Catherine left the precinct where Jacqueline was recuperating in her cell. The police brought Greg Masters in as well. They found him in his driveway stuffing his suitcase in the trunk of his car. He was carrying his passport, fifty thousand in cash, and an e-ticket for a one way flight to Rio de Janeiro, Brazil. Officers from the fraud division had taken a copy of Ben's recording and statements from both of them. Catherine sent messages to several of her very wealthy and influential patrons who were also patrons of Jacqueline's charity to let them know what had happened.\n\nBy the time they got back to the hotel it was almost 4AM and they were both exhausted. They promised each other that first thing when they woke up they'd make up for lost time. They stripped naked and slipped under the sheets. Catherine tucked herself back against Ben so they were spooning.\n\n\"Uh Catherine, that's not such a good idea.\" Ben said sleepily.\n\n\"Mmmm.\" she murmured, half asleep already.\n\nBen's cock wasted no time in waking up and snuggling up between Catherine's legs. She lifted her top leg and his cock swung up to slap against her pussy.\n\n\"OH!\" she jumped and dropped her leg to capture him in place. \"Oh Ben, that's nice!\" she said, feeling the heat of him trapped between her thighs and pressing against her pussy. Her hips began to twitch unconsciously, rubbing against the top of his shaft. Ben pumped his hips forward and back, sliding himself between her thighs and strongly rubbing across her now wet pussy. \"Oh Ben, that feels so good!\" she moaned. She moved her hands down and rubbed the head of his cock when it emerged from between her thighs. Ben gasped. He pulled back once more and she positioned him to enter her. As Ben pushed forward he slid smoothly into her wetness and Catherine sighed with contentment.\n\nBen put his hands on her hips and set up a nice slow long stroke which soon had Catherine crooning her pleasure. He felt his release quickly approaching so he slid his top hand up her side and around to her breast. He cupped the flesh in his palm and gently tugged on her nipple.\n\nCatherine gasped and pushed down harder on his cock signalling it was time for him to increase his speed. Soon he was slamming into her, her ass making wet slapping sounds on his pelvis. The pounding sensation on her ass made Catherine think of Jacqueline's confession of her dark desire to have Ben large cock deep in her ass. This thought triggered her orgasm and her pussy clamped down on Ben's cock. His orgasm quickly followed and he drove in deep one last time and held himself there. They rode out their orgasms together.\n\nBen kissed her shoulder and made to roll away but Catherine's hand stopped him. He moved back sliding deep once more and Catherine moaned through an aftershock.\n\nThey fell asleep spooning with Ben's cock stiff and deep inside her.\n\nChapter 22\n\nBen walked in his front door a little after lunch time. When they'd woken up at 11AM Catherine immediately climbed on him and rode him through three orgasms for her and two for him. They left the hotel feeling well satisfied if a little worn out. They hadn't used any of their precious time for eating so Ben was famished.\n\nTina rushed to the front door and Ben gave her a big hug and a kiss. She smiled up at him then took his overnight bag from him and put it in his bedroom. When he walked into the kitchen to make himself something to eat Tina came rushing back into the room and directed him to the kitchen table. He grinned at her eagerness. He asked for a sandwich and she immediately moved to make him one.\n\nWhile she prepared him lunch the phone rang and he got up to get it. He had to direct Tina back to the counter as she leapt to get to the phone first.\n\n\"Hello?\"\n\n\"Hello, Mr. Shepherd. This is Lisa McKellan.\"\n\n\"Hi Lisa.\" Tina looked over curiously\n\n\"Lori and I were wondering if it would be alright for us to come speak with you today.\"\n\n\"I'm just sitting down to lunch so how about 1PM?\" he said.\n\n\"Thank you. That would be great! See you then.\" She hung up.\n\n\"Do you have any idea what Lisa and Lori will be coming over to say? I hope there is an apology in there somewhere. If they think they can seduce their way out of this mess then nothing's improved. Did you talk to them about what they'd done wrong? Did they seem to get it?\"\n\n\"I did tell them I was very disappointed in myself for letting them convince me that it would be a good thing to get in bed with you and Mrs. King. I told them I wanted to stay friends with them but they were never to do such things again. I do not know what they want to speak about today. I hope they have learned to be better.\" Tina said nervously as she brought Ben his lunch.\n\nHe kissed her forehead and tucked into his lunch.\n\nOne o'clock found him sitting in the living room reviewing the online engineering forums to see if any of the requests he'd flagged had been answered. He saw two had been so he cleared them from his list. Three others remained outstanding and one had an update from the frustrated author pleading for assistance. He updated the item with a note indicating he was on it.\n\nThe doorbell rang and Tina answered it. Soon the twins were being ushered into the living room and they took a seat on the couch facing Ben.\n\n\"Good afternoon ladies.\" Ben said.\n\n\"Good afternoon, Mr. Shepherd.\" they replied. They looked at each other and it seemed that Lisa was voted to speak for them both.\n\n\"We just wanted to let you know that we are very sorry for getting into bed with you and Mrs. King.\" Lisa said contritely.\n\nBen waited but there didn't seem to be anything more. He sighed inwardly. \"Why?\" Ben asked.\n\nLisa blinked and glanced quickly at Lori. \"Why?\" she asked him.\n\n\"Why are you sorry?\" he said calmly.\n\nLisa was starting to look very nervous. \"Because we weren't invited to get in your bed.\" Lori blurted.\n\nBen looked at the two young women and wondered how they'd grown up to be such lovely and pleasant women without a better grasp of how their actions might be seen by others and how they'd need to take responsibility for those actions.\n\nLisa was looking very nervous now. Bordering on panic. That triggered Ben's curiosity.\n\n\"What did your mother say to you?\" he asked.\n\nThen the panic definitely kicked in.\n\n\"Never mind. Is your mother home?\" Ben asked and Lisa nodded. \"Stay here. I'll be right back.\" he growled and they nodded meekly.\n\nBen slipped his coat and boots on and walked over to Daphne's house. She answered the door and ushered him in. They sat on the couch in the playroom.\n\n\"Your girls came over to apologize but they still don't seem to grasp their part in this. What did you tell them?\" Ben asked.\n\nDaphne looked like she'd had a bad night's sleep and was still a little shaken up. She looked up at Ben with pleading eyes. \"I'm so sorry Ben. Scott was the disciplinarian in the house. I was never good at it so I wasn't allowed to punish the girls. That was Scott's job but once they got old enough they knew they had their father wrapped around their little finger, most of the time. There was only one thing I had left that I could use to control them. It's their dream to run a daycare. I told them that you were my silent partner and that you told me they couldn't work here until they understood the ramifications of their actions.\"",
        "\"Dammit Daphne! You know how I feel about lying! I can't be part of this!\" Ban growled.\n\nDaphne clung to Ben's arm desperately. \"It isn't a lie! It isn't! You're not a financial silent partner. You're a moral silent partner. You're absolutely right. Until they can grasp why what they did was wrong and their responsibility for it they can't work here. I didn't know what else to do! I'm not equipped to discipline them and they're adults now. They've needed a strong hand in their upbringing and I can see now that they didn't have it. Please help me!\" she begged with tears in her eyes.\n\nBen rocked back. \"I- I've never been a parent! I'm no expert when it comes to disciplining!\" he muttered uncomfortably.\n\n\"You have done an amazing job with Tina! They need the same firm hand. You know they listen to you!\" Daphne pleaded.\n\n\"Only because they want to have sex with me!\" he shouted.\n\nShe seemed to collapse in on herself and began to cry. Ben reached his own breaking point. He pulled her up against his chest and she gasped then clung to him as she cried. Ben rocked her gently and eventually her tears stopped and she just cuddled against him.\n\n\"I'm so sorry Ben.\" she mumbled against his chest.\n\nHe hushed her and thought about what he was going to do. He really wanted to speak with Gabriella but her flight wasn't getting in until 10PM. In the meantime, he needed to help Daphne. He sighed.\n\n\"Ok, I'll play the moral silent partner. I agree the daycare was the best leverage you have for controlling them. I seriously believe you did the right thing telling them they were out. Now that I know what they were after and why I can work with this. However, I can't promise they will cooperate. You're right, they aren't kids any longer. You say they need a firm hand. I can do that but understand one thing. We have to be unified in our efforts. You can't cave in when they come whining to get their way and you know they will.\"\n\nDaphne looked at Ben with a worried expression.\n\n\"If it makes it easier for you, you can tell them it's my decision. If they were my daughters this is exactly what I would be telling them.\" he growled and Daphne sighed with relief.\n\n\"Ben if they were your daughters they wouldn't be like this.\" Daphne replied.\n\nHe took Daphne's chin between his fingers and looked her in the eye. \"Tell me you are going to support me in this. If you aren't going to do your part I might as well walk away.\" he said sternly.\n\n\"Yes Ben, I will support you. Thank you!\" she said timidly.\n\n\"Don't thank me until it works. I have to go back to my place and set the girls straight on where they stand. They may just tell me to go to hell but that will be their choice.\" Ben thought for a minute. \"I want you to write up an ad looking for two daycare staff to replace them. Do it now so it will be ready when they get home. Leave it on the counter here so they'll see it. They need to know how seriously they are jeopardizing their future with their behavior.\"\n\nDaphne's eyes were wide with surprise but she nodded.\n\nBen left and went back to his house. The twins were still on the couch when he walked back into the living room. They sat up straight and looked at him hopefully when he dropped himself into the chair across from them. That hopeful look faded quickly when they saw Ben's annoyed look.\n\n\"So you thought you could just drop by and say a few apologies and your mother would hear that I was satisfied and you'd get to work in the wonderful new daycare we built? Sorry, that's not going to happen. As of this moment neither of you has proven you won't be a bad influence on the children of the daycare.\" Ben said firmly.\n\n\"That's not fair! We worked so hard for this!\" Lisa yelled.\n\n\"You want it so you should have it? Is that what you're saying?\" Ben asked.\n\n\"Yes! No, I mean we deserve it\" Lisa blurted.\n\n\"Would you smoke in front of these kids? Curse? Take drugs?\" Ben said.\n\n\"Of course not!\" Lori barked.\n\n\"Why not?\" he immediately asked.\n\n\"Because they have young impressionable minds and they shouldn't be exposed to those things!\" Lisa explained.\n\n\"What about stealing? Lying? Bullying? Sharing hurtful gossip? Would you do those things in front of the kids?\" Ben asked.\n\n\"No, for the same reason!\" Lisa growled.\n\n\"Yet you'll do things that hurt and embarrass people and not grasp you've done anything wrong or owe them an apology. How are you going to protect their impressionable minds against your selfish thoughtless actions?\" He saw the twins take a moment to process that.\n\n\"We- wouldn't do that around them.\" Lisa stumbled.\n\n\"Do what?\" he pressed.\n\n\"Thoughtless stuff!\" Lisa mumbled.\n\nBen sat back, waiting for them to think it through. Lori was almost in tears. She was looking at her sister and hearing, maybe for the first time, how weak the case was in their defense. She looked at him and he saw comprehension in her eyes at last. He nodded to her.\n\nLisa looked like she was just getting angrier until Lori took her hand and pulled her to her feet. Lisa took one look at her sister's tear filled eyes and froze in confusion. With a final look back at Ben Lori pulled her sister from the room and they made their way home.\n\nBen hoped Lori could help Lisa make that cognitive leap. Now, if Daphne had done her part and written the ad for the ladies to see the severity of their situation it may just be enough of a catalyst to drive home the point. Ben doubted it would cure them from years of getting away with whatever bad behavior they desired but it would plant a seed at least. Vigilance would be required to ensure they didn't slip back to their old ways. Daphne said they needed a firm hand. He could do that.\n\nHe felt a gentle touch between his eyes and looked up to see Tina using her fingertip to smooth away the crinkled skin there caused by his frown.\n\n\"You looked too serious.\" Tina said with a sweet smile as she stood beside his chair.\n\nBen scooped her into his arms and pulled her over the arm of the chair to lie across his lap.\n\n\"What should I do to you to make me happier?\" he growled playfully.\n\n\"Anything! Anything you want!\" she gasped, loving the feel of his arms around her body.\n\nJust then Christopher woke from his nap and began to call out for his mom. It was Tina's turn to frown and Ben kissed away the little wrinkles it made between her eyes. \"Motherhood cares not for the needs of the woman.\" Ben teased. \"I will make it up to you later. Can you arrange babysitting for a night next week?\"\n\nShe nodded quickly with a big grin on her face then dashed off to see to her son.\n\nBen looked at the clock and saw there were hours left in the afternoon he could use to work on that engineering project. He planned on picking up Gabriella at the airport but he'd promised her to pick up Miriam and Daniel first. He took out his cell and sent a quick text to both to get them to send him the addresses of their friend's houses. Then he headed down to his workshop.\n\nThree hours later Ben looked up from his drafting table. His head was filled with the work and it took him a moment to realize someone was knocking on the door to his workshop. He got up and answered. Tina was standing there with Christopher on her hip.\n\n\"Dinner is ready. I knocked but you did not answer. It made me worried.\" she said with a sad look.\n\n\"I'm sorry Tina. I'll leave the door open when I'm in here in the future. Old habits.\" He gave her a kiss on the lips and Christopher a kiss on the forehead and followed them upstairs after locking his workshop.\n\nThe boy was a delight through dinner but by the end he was yawning and nodding so Tina took him to his crib. The moment she was out of the room Ben quickly gathered up all of the dishes and put them in the dishwasher. He tidied the kitchen and washed and dried the casserole dish after putting the leftovers in the fridge. When Tina returned Ben was standing with his back to the counter with a big smile. Tina looked around and walked past Ben to wipe down the counters.\n\n\"Damn it! I knew I missed something!\" he grinned.\n\nShe arch a brow at him and gave him a small smile. She went back to cleaning and Ben admired her pert ass cheeks in the tight yoga pants. That was something he was very grateful the twins introduced Tina to.\n\nWhen she reached the island Ben slipped up behind her and pinned her to the counter with the hard ridge in his pants. She gasped and went still. \"I have an hour before I have to head out to pick up Gabriella's kids then her from the airport. Since we both seem to have some free time I thought it might be nice to give you a little preview of our next date night. He slid his hands up from her waist under her shirt, around her torso and cupped her breasts.\n\nTina sighed and wiggled ass against Ben's cock. He rubbed his stiffness up and down the crack of her ass and she began to breathe heavily. Ben felt her nipples stiffen under his fingers. He gave them a gentle squeeze and tug and Tina moaned and bent forward over the island following the pull of his hands.\n\nBen moved his hands back down and pulled her yoga pants down in one tug. Tina sucked in her breath then moaned as she felt his breath on her ass cheeks. He slipped the pants completely off then slid her panties down her legs following them with kisses.\n\nTina squirmed and tried to thrust back but Ben held her against the island with one hand while the other pulled the panties past her feet. He stood and lifted her until her stomach was lying on the island and her ass was perched on the edge. This lifted her feet from the ground so she was trapped over the edge of the island and completely at his mercy. A deep shiver went through her body as his left hand rested on her lower back pinning her to the surface.\n\nShe yelped when she felt his teeth on her ass. Not painful but surprising and she felt herself beginning to get very wet. She jolted again as Ben ran his finger through the wetness on her pussy lips. His touch sent sparks through her body and she moaned loudly. He moved the wet finger up her crack to rub circles around the sensitive spot between her pussy and her anus. She laid her forehead against the cool stone of the island's top and began to pant in anticipation as his fingertip brushed closer and closer to her ass. Soon his finger would rub her tingling rosebud! She wanted that so much!\n\nWhen Ben's tongue pressed against it instead her surprise was so great she cried out in Korean and her legs attempted to lift up but Ben had her trapped in her current position. He kept up the lapping, flicking, and probes with his tongue until Tina thought she'd go mad. Ben slipped two fingers into her drenched pussy and began to pump them in and out slowly, stroking her clit at the bottom of every thrust. His fingers began to make wet sucking noises and Tina stopped making coherent words aside from his name.\n\nWhen he pulled them out and stopped licking Tina cried out for him to keep going as she was getting so close. She couldn't see what he was doing so when the heat from the head of his cock slid into her wet pussy she squealed and jolted against the hard surface once more.\n\nBen had wiped his slippery fingers all over his cock so he was well lubricated from her juices. Still, he took it slow and used short strokes to gradually force his thick cock deeper into her pussy while rubbing his thumb over her slick anus.\n\nTina was becoming frantic. She wanted to push back against him but she could only lay there while Ben held her down against the surface of the island and took his pleasure from her. His control over her body was complete and she loved it! When she thought she couldn't take any more Ben slammed his cock all the way in and pushed his slick thumb into her ass at the same time. Tina opened her mouth in a silent scream and began to shake uncontrollably as an intense orgasm rocked her body and overloaded her senses. Ben slapped his pelvis against her ass with quick little strokes while his thumb mirrored the motions in her ass. Finally he slipped his thumb from her and began to pump his cock with long fast strokes to reach his own orgasm. Tina wailed as peak after peak surged through her.\n\nWhen Ben's cock erupted inside her she collapsed against the cool surface of the island and felt her body shudder through its aftershocks. Ben's thick cock filled her up completely as he pressed himself tight against her ass. God she loved the feel of him stretching her pussy and she loved being completely under his control! She purred with satisfaction.\n\nWhen he lifted her from the surface of the island she realized he wasn't done. He held her pinned to his chest and carried her down the hall to his bedroom. He pulled her shirt off and socks off all while holding her against him with one arm and his cock buried deep in her pussy. His movements were starting a new cycle of tingles down below. He tugged his shirt off over his head as his pants, underwear, and sock were back on the kitchen floor.\n\nBen stepped into the shower and got the water going nice and hot. He stepped in with Tina and lifted her up and off of his cock. She gasped and shook and when she recovered she was being lifted into his arms facing him. The head of Ben's cock found its way back to her wet opening and he slid it all the way in to the base in one stroke causing her to cry out. His hands gripped her ass cheeks tightly and she sighed at the feel of his hands on her again.\n\nHe lifted her up until just the head was inside. Tina's lips were captured by Ben's mouth as he hungrily kissed her. Her mind spun from the raw sensuality. His tongue dipped into her mouth and caressed hers. She immediately began to suck on his tongue feverishly as Ben began to make short shallow strokes on the top half of his cock. He moved his right hand to the middle of her ass and slid his left up to the back of her head and into her hair. He took a good grip on her long black locks and gently pulled her back from the kiss.\n\nThen he began to lift and drop her on his hard cock.\n\nTina curled her legs around his body and braced her heels over his ass. She could feel the strength there as he pounded into her. Her clit was slapping into Ben on each down stroke bringing her to another orgasm quickly. She felt Ben's muscles begin to tighten signalling his imminent release.\n\nThen he was exploding within her and he slipped a finger into her ass as he lifted her up for another stroke. Tina's teeth clenched and she bared them as her body vibrated from another titan orgasm ripping through her.\n\nBen felt Tina shake in his grip, her pussy gripping his cock tightly before her muscles went limp.\n\nHe slid her up his body and his spent cock popped free of her gushing pussy.\n\nBen rested her head on his shoulder and turned her back to the main spray while his right hand cleaned her as best he could. He stepped out of the shower and grabbed a couple of the big towels and wrapped Tina's resting body in one. He placed the other one out on the bed and laid the woman out on it. Then he hustled back to the shower and quickly washed up.\n\nAfter he dried off he tossed his towel on the floor next to the bed to dry off the floor where he dripped and saw Tina was still resting. He quickly brushed his teeth and got dressed. Looking at the clock he saw he still had a few minutes so he breathed a sigh of relief.\n\n\"That was a 'little preview'? I do not think I will survive the date.\" Tina said sleepily from the bed.\n\n\"Yeah, sorry, I got carried away a little but you bring that out in me.\" Ben apologized. He leaned over and gently kissed her lips. \"I have to go pick up the kids now. Then I'm off to the airport to pick up Gabriella. I'll probably be back late tonight.\"\n\n\"Or not until the morning.\" Tina said sweetly. \"Go!\"\n\nHe kissed her again and headed out.\n\nOnce he was in his truck he punched in the location for Miriam's friend's house. It was the closer of the two and only took twenty minutes to reach the house. He sent a quick text to Daniel saying he was on his way and punched in the address of his friends place. Then he walked up to the door and rang the doorbell.\n\nSeconds later the door opened and Ben was looking down into the wide eyes of a pretty young woman with beautiful chocolate brown skin.\n\nBen smiled. \"Hi, I'm Ben. You must be Karleen. Is Miriam ready to go?\"\n\nKarlene didn't say a word. She just stood there gaping.\n\n\"Karlene! Where are your manners, let the man in.\" a woman's voice said from the living room. Karlene came out of her daze at the sound of her mother's voice and stepped back. Ben smiled and followed her inside.\n\nWhen the mother stepped around the corner into the foyer she froze as she took in the big man standing in her hallway.\n\n\"Hello, I'm Ben. Miriam's neighbor.\" he said.\n\nThe woman visibly gathered herself and stepped forward with a broad smile and shook his hand. \"I'm Michelle. Her neighbor?\"\n\n\"Yes. I've lived next door to the Wallace's for years.\"\n\n\"I'll be right down Ben!\" Miriam's voice called out from somewhere upstairs.\n\n\"Would you like to sit down while you wait?\" Michelle asked.\n\n\"Sure.\" Ben said and slipped off his boots. They sat in the living room, Ben in a chair and Michelle beside her daughter on the sofa. The young woman still hadn't said anything but also hadn't taken her eyes off Ben for a second. \"Is your daughter always this quiet?\" he asked.\n\nMichelle laughed and Karlene looked flustered.\n\n\"I'm sorry. I didn't mean to tease.\" Ben apologized to the young woman.\n\n\"It's OK. Miriam described you but she didn't say you were so...\" the girl suddenly stopped as she realized she was talking herself into a corner.\n\n\"Tall?\" Ben offered.\n\n\"Yes!\" Karlene gushed in relief.\n\n\"I've heard that a few times.\" he smiled.\n\n\"So what do you do Ben?\" Michelle asked.\n\n\"I'm a semi-retired Mechanical Engineer.\"\n\n\"Semi-retired?\" her brows rose.\n\n\"I like to solve puzzles so I keep an ear to the ground for interesting projects and create solutions for them. I'm an independent so I work whatever hours I deem are required.\" Ben said and stopped when he caught himself staring at the two women on the couch. It was uncanny how closely they looked alike. \"I'm sorry for staring but I don't think I've ever seen such a close resemblance between and mother and daughter in my life! You could be twin sisters!\"\n\nBoth woman brightened significantly with Ben's comment. Karlene for being compared with a more mature woman and Michelle for being seen as someone so young. Ben thought they looked even more similar when they smiled and his appreciation must have shown on his face as their smiles just got bigger. Then he realized that what he'd said sounded a lot like flirting and he blushed.\n\nMiriam came to Ben's rescue as she arrived in the doorway with her overnight bag. \"All ready to go!\" she said and saw her friend and friend's mom beaming at Ben who had a fierce blush on his face. She sighed and turned to the mother. \"Thank you so much for letting me stay over Mrs. Bennett.\"\n\nBen stood up and the two ladies did as well.\n\n\"You are more than welcome to stay over anytime Miriam. And feel free to bring your charming neighbor along next time as well.\" she smiled at the big man.\n\nMiriam just smiled and pulled Ben's arm to lead him back to the front door. He slipped his boots on while Miriam gave her friend a hug. Whispers and giggles ensued. Then she was ready and they left waving.\n\nOnce they were on their way to Daniel's friend's place Miriam turned to Ben. \"Thanks for picking us up. Later than I expected.\"\n\n\"I thought your mother would appreciate it if we all met her at the airport.\" Ben said.\n\n\"Oh! I thought you were dropping us off at home first.\" she said, surprised.\n\n\"I could but don't you think she'd like to see more smiling faces?\" Ben smiled. She returned it.\n\nMiriam waited in the car while Ben went to the door to pick up Daniel. This time the door was answered by a woman, Rick's mom he assumed. He saw her eyes widen then narrow as she looked at him.",
        "\"Hi, I'm Ben. Daniel's neighbor. I'm picking him up for his mom.\" he said.\n\nThe woman was likely in her forties and super buff. Obviously she'd put in a lot of hours on hardening her muscles and losing body fat. There wasn't an ounce of it on her and she was displaying quite a bit of that toned body wearing her spandex workout clothes. Her short brunette hair hung down and curled in at her neck. She had piercing but lovely pale blue eyes and a strong nose, definitely the most prominent features on her face.\n\n\"Ah yes, he mentioned that you'd be by. Please come in. I'm Gwen.\" the woman said. Ben stepped inside and immediately felt the heat. The furnace must have been cranked up so she could walk around the house dressed semi-naked like that. He slipped his jacket off of his shoulders and held it in one hand.\n\nShe passed her eyes hesitantly over his chest muscles filling his shirt so well then turned her head and yelled down the hall. \"Boys! Pack up your stuff Daniel, Jr! It's time to go, honey.\"\n\n\"We call him Daniel now.\" Ben said.\n\n\"What?\" Gwen asked.\n\n\"We don't say Jr. anymore. Just Daniel.\" Ben corrected her gently.\n\n\"His name when he was born was Daniel, Jr. Why isn't that good enough now?\" she pushed.\n\n\"Since the passing of his father, his and his mother's wishes are to call him Daniel. So that is what we do. It's about respect.\" Ben explained quietly. He was becoming a little annoyed with her belligerence.\n\n\"His father now there's a piece of work!\" she growled.\n\n\"Whoa, whoa, whoa! Let's start over. Hi, my name is Ben. I am here to pick up my neighbor's son Daniel. Not to be disrespectful. Not to speak ill of the dead. Just a friendly little visit while he collects his stuff.\" Ben said exasperatedly.\n\n\"Sorry, I've been a little on edge this weekend. Daniel told me all about your... situation and I gotta tell you I'm not impressed.\" she began with the apology but ended with aggression again.\n\n\"My situation?\" Ben asked, puzzled.\n\n\"You're dating his mom. And your other neighbor. And you have a live in slave.\" she said jabbing him in the chest with a finger as her face flushed with anger.\n\n\"WHOA! Hold on there! I DO NOT HAVE A SLAVE!\" Ben growled back. Daniel showed up with his friend Rick with at that moment. Both were wide eyed. Ben turned to Daniel. \"Did you call Tina a slave?\" he asked incredulously.\n\n\"No, I said you live with a submissive.\" Daniel replied calmly.\n\n\"Oh. Ok, thank you. Please go sit in the car. I'll be right out.\" Ben said and heard Gwen choke on her anger.\n\n\"Rick, go to your room!\" she said and he left. The moment he was gone she was back in Ben's face. \"What kind of example are you setting for those kids? Isn't it bad enough that they lost their scumbag father? Now you have to treat their mother like a whore?\"\n\nBen was rocked back by the venom in her anger. His own anger swelled but he realized a shouting match would help no one and he really didn't have time. He took a deep cleansing breath and released his tension on the exhale.\n\n\"Gabriella is NOT a whore. She is a strong, intelligent, independent, and loving woman who loves me. I cherish her with all of my heart. I show her utmost respect because she deserves it. The woman I live with is a submissive. It wasn't Daniel's place to disclose her nature as that was disrespectful to Tina. She also deserves and gets my love and respect. Don't mistake submissiveness to slavery. She has complete freedom to do as she pleases and love who she pleases and has chosen to grace my life for now. She also has a brilliant mind and a loving heart. I'm not about to waste my time trying to enlighten your closed mind. I can see you already have hate and pain in your heart. I doubt very much I was the cause that put it there but I'm very sorry you have to bear it. Good night!\" He turned to leave and made it as far as the front door.\n\nBen's genuine words and calm tone hit Gwen harder than his fists could have. She'd been prepared if he got physically violent. It was why she'd been working out before he arrived. Daniel had mentioned Ben relationships shortly after he'd arrived on the Friday afternoon and she'd had all weekend to build her anger. The picture she'd formed of him in her mind and the words she planned on using to confront him had raced through her head for days. She'd been expecting to confront a misogynistic bastard like her ex had been. When Ben showed up looking like her fantasies come true it had thrown her off her game a little. She rallied and had just begun her attack when he derailed her again with his sincere words. When he got to the part of being sorry about the pain in her heart it was too much for her and she collapsed to the floor and began to cry as he walked away.\n\nBen wanted to just leave the house but the tears of a woman had always been his Achilles heel. He turned around and walked back to the woman and knelt down beside her.\n\n\"Please don't cry. I'm sorry if I've hurt your feelings.\" he said and her tears just got worse. Not knowing what else to do he did what he always did. He gathered the woman up against his chest and held her while she cried.\n\nGod, she'd missed this! To be held in the strong arms of a man who genuinely cared. She let it all out and clung to him like a life line. Five minutes later there was a gentle tap on the outer door. Ben and Gwen looked over to see Miriam looking at them curiously. Gwen rubbed her eyes and apologized as she gathered herself. Ben stood up and easily pulled Gwen to her feet. She marvelled at his strength then saw the tear stains on the shoulder of his shirt.\n\n\"Oh! I'm so sorry about your shirt! Let me get you a replacement.\" she hustled away and returned in seconds with a red flannel work shirt. \"It should fit. My ex was a big man too.\"\n\nBen undid the buttons on his shirt and took it off. He wiped his shoulder with it and thanked the dazzled woman as he took the red shirt from her nerveless fingers and put it on. It fit well though he couldn't button the few top buttons.\n\n\"Let me wash that for you.\" she said plucking his tear stained shirt from his fingers. \"Listen, sorry about the things I said. You're right, there is a lot of pain and hate in my heart. Put there by the man whose shirt you're now wearing. But he's out of my life and you aren't him so you didn't deserve the anger. I don't understand your relationships with these women but I shouldn't have judged you.\"\n\n\"It's ok. Sorry, I have to go now as I'm picking up Gabriella from the airport. Are you going to be alright?\" he asked.\n\nShe smiled putting a hand on the hard muscles of his arm and relaxed. \"Yes, thank you. I'll get this back to you this week, ok?\"\n\n\"Sure. No rush.\" Ben smiled and left.\n\nAs they pulled out of the driveway Miriam saw the woman standing in the front window clinging to Ben's shirt close enough to get his scent. She recalled her mother behavior with Ben's sweater and she gave Ben a quick worried look which he thankfully didn't see.\n\nThey got to the arrivals area ten minutes after Gabriella's plane arrived but she still had to go through customs.\n\n\"Daniel?\" Ben said to get his attention.\n\n\"Yes, Ben.\"\n\n\"Why were you discussing my relationships with Rick's mother?\"\n\n\"She asked who was picking me up so I told her that you were going to do it. She asked me who you were and I said that you were my mother's boyfriend. And my neighbors boyfriend. And you lived with Tina who is a submissive.\" the boy said in a matter of fact tone.\n\n\"I see. May I request that you refrain from mentioning Tina's submissive nature in future conversations? It wasn't respectful to her to mention it to someone she doesn't know. People form incorrect opinions of Tina before they get to know her if you apply a label that most people don't understand.\"\n\n\"Oh! I'm sorry! That makes sense. Thank you, Ben!\"\n\n\"While we are discussing social etiquette, perhaps it will be easier for people if you conclude your description of who I am by just mentioning my relationship with your mother. I'm certainly not ashamed of any of the relationships I'm in but once again misunderstandings can be easily avoided if you restrict your descriptions to those which you are directly related to, in this case your mother. It's much more polite as well because describing relationships you are not related to can be construed as gossip.\" Ben saw the young man absorb this and nod.\n\n\"Again, this makes sense to me. Thank you, Ben!\"\n\n\"No, thank you, Daniel.\"\n\nThe boy smiled back at him and Ben couldn't help think of the two cartoon gophers Mac and Tosh whose conversations were ever so polite. He was getting used to speaking with Daniel this way.\n\nMiriam suddenly started to jump up and down and Daniel joined in. There was Gabriella walking through the doors towards them with her small suitcase and garment bag. Her face lit up with joy to see her children with Ben and she rushed forward to gather them into her arms after Ben snagged the bags from her.\n\n\"Oh Ben, this is a wonderful surprise! Thank you so much!\" she gushed.\n\n\"I thought you might like to see their smiling faces tonight.\" he smiled.\n\n\"Yes, I did! Now let's get them home as they have school tomorrow.\" she said and got groans from the two.\n\nThe drive home was filled with the kids telling their Mom about their weekend. Just before they got to their neighborhood Miriam mentioned Mrs. Bennett's invitation and spotting Mrs. Adams crying on Ben.\n\nBen understood she was protecting her mother so he wasn't offended. Before Gabriella could chastise Miriam for telling on Ben he spoke up.\n\n\"I mentioned to Mrs. Bennett how closely she resembled her daughter. Have you seen those two side by side? It's uncanny. I didn't realize that would be construed as flirting. As for Mrs. Adams, she was informed about our unique relationship by Daniel. I guess she had a bad experience with her ex-husband and said some angry things when I got there. She's carrying some bad emotional damage so I explained why she was wrong and that I was sorry for her pain and she began to cry. I didn't know what else to do so I hugged her.\"\n\n\"She has his shirt.\" Miriam added. Gabriella looked over the seat at her daughter and saw the girl mimicking the woman smelling it. Ben couldn't see this as Miriam was seated behind him.\n\n\"She cried all over mine and it was soaked. Luckily her ex was almost the same size as me and she had a spare shirt.\" Ben explained, oblivious to the looks passing between mother and daughter. Gabriella finally just smiled at Miriam who was satisfied that all was still well between her mother and Ben so she smiled back at her mother.\n\nBen drove into Gabriella's driveway. Gabriella asked Ben to come inside so she could fill him in on the business trip. Once inside she directed her kids to brush their teeth then get to bed immediately afterwards. She gave them kisses. Miriam stopped in front of Ben and he bent down so she could kiss his cheek. He kissed her cheek back and she blushed. Not to be outdone by his sister Daniel stopped for a handshake from Ben then the kids raced upstairs. Gabriella watched them go with a loving smile. They walked into the living room and she grabbed him in a tight hug.\n\n\"Ben! You are such a genius! Arriving on the personal jet was perfect! I got the contract! I put on my big movie star shades and stepped off the plane in my sharpest business dress with a bored look on my face and they were practically kissing my feet. I looked like money so they definitely wanted to do business with me. I played it professional and cool like I was flying in for a number of business meetings and just squeezed them in. My commission on the sales of their items is 5% better than I was getting from the previous supplier! My distribution chain was thrilled by the replacement products when I contacted them from the jet. Oh yes, they were VERY impressed when they saw I was video conferencing them from a private jet. They agreed to expand the territory for the products from just the west coast to include their east coast stores as well! I was able to amend the contract and get the signed contracts while I flew back!\" She leapt in his arms and they laughed.\n\n\"That's amazing news! I knew you could save your business deal and it sounds like you made it even better!\" Ben gushed.\n\n\"All because of you!\"\n\n\"No! Be fair! All I did was put you on a plane. You did everything else. The deal would NOT have happened unless you were driving it forward. You took the opportunity and made it pay off!\" Ben insisted.\n\nGabriella just looked up in his earnest face in adoration. She put her hand on the back of his neck and pulled him down for a kiss. He captured her lush lips with his and her tongue slipped into his mouth. He gently sucked on the tip of her tongue and pulled her body tight against his. She moaned and pushed him back to catch her breath.\n\n\"Can you stay tonight?\" she asked.\n\nBen thought of Tina's earlier comment and smiled. \"Yes.\"\n\nGabriella took his hand and led him upstairs. The kid's bedrooms were at the opposite end of the hallway so they had some privacy. Their doors were closed and their lights were off so Ben followed Gabriella into the master bedroom. She closed and locked the door behind herself. Ben raised an eyebrow and she grinned wickedly at him.\n\n\"We didn't get to finish our date on Friday.\" she said seductively.\n\n\"Yes, it was rather rudely interrupted.\" he agreed with a smile.\n\nGabriella prowled up to stand before Ben. She reached up and began to undo the buttons on his shirt. \"Ben I want to do something special for you. The last time we made love you kissed me down there and I'd never experienced that before. It was incredible! This time I'd like to return the favor but I have to warn you. I've never done it before. You'll have to tell me if I'm doing anything wrong and let me know what you like. Would that be ok?\" She looked up in his eyes as she leaned forward to kiss his nipples as she pushed his shirt off of his shoulders.\n\nAll Ben could do was nod.\n\nHe let the shirt fall to the floor as the tip of her tongue teased his nipples. She took one between her lips as her hands worked on his belt. His breath was hissing between his teeth as she moved to his other nipple and gently bit it, bringing a groan from him. Gabriella kissed her way down his hard stomach as she slid his pants, underwear, and socks down his legs. He stepped out of his clothes as she knelt before him and she tossed them aside.\n\nGabriella looked at Ben's hard cock and trembled nervously. She had no idea where to start. She looked up at him questioningly.\n\n\"Take it in your hands.\" he said.\n\nShe took a grip down near the base and gently cupped his balls in her hand. She marvelled at the heat of his cock and the weight of his sack. She gently rolled his balls between her fingers feeling their shape and texture. Curiously she ran her tongue across the surface and felt movement within. A little thrill zinged up her spine as she sucked one of his balls into her mouth.\n\n\"Be careful of your teeth. Sharp teeth and men's parts are not friends.\" Ben gasped as he watched her roll his testicle around on her tongue. Gabriella's beautiful green eyes twinkled with joy as she realized she really enjoyed this. She loved feeling his cock jump in her hand in response to her tonguing him. She switched to the other one and felt his cock become even harder in her hand. It was so sexy she moaned causing Ben to moan as the vibrations felt wonderful.\n\nBen's eyes closed as she worked on his balls. No one besides Shelly had spent this much time on that area. While Shelly was incredibly talented he put Gabriella at the top of this class.\n\nGabriella released his testicle and saw it was covered with her spit. She ran the flat of her tongue across both balls licking up towards his shaft. She moved her hand upwards as her tongue licked its way up the hot underside of his cock. Ben's breath was coming out in gasps and she took that to mean he was enjoying what she did. She turned her head sideways and kissed the bulging ridge running along the underside of his cock. She slid her lips up and down, rubbing the ridge against the flat smooth surface of her teeth. Nothing sharp there except the intake of Ben's breath as her lips caressed his cock.\n\nShe took a grip at the base again as she kissed and licked her way upwards to the thick mushroom cap on top of his cock. She was fascinated by its appearance, its softness and firmness, and its taste. She teased the ridge of the head with the tip of her tongue and felt his cock twitch again in her hands. Ben was moaning almost continuously now, running his hands though her thick, soft hair but not trying to direct her actions in any way. She loved the control she had over him and how much pleasure she was giving him. Her pussy was drenched and it took everything she had to keep her hands away from herself.\n\nFinally she positioned her mouth over the head of his cock. It would be a tight fit but she thought she could do it. Her mouth began to water in anticipation.\n\n\"Remember, teeth.\" he said between pants.\n\nGabriella pressed her lips to the tip of his cock and was surprised to feel a wet sticky substance beaded at the opening. She smeared it across her lips then slowly slid them over the head taking the cap into her mouth. She moaned with the head resting on her tongue and Ben reacted to the vibrations with a shiver that ran through his body. She didn't know what to do with her tongue so she just ran it back and forth across his skin on the underside of the head. Ben gasped once more.\n\nShe began to slide her lips over the head and down the shaft a little more with each stroke. She was able to get almost half of his cock into her mouth. Ben was breathing very hard by this point. She looked up at him with his cock deep in her mouth and he groaned at how sexy that looked.\n\nBen reached down and took her hand which was gripping the bottom of his shaft and he directed her to begin pumping the bottom half of his shaft as she sucked the top half. She caught on immediately and got into a pattern. The spit running down the shaft made her hand slide more easily over his flesh and he began to make an involuntary pumping motion with his hips to get more of his cock into her mouth. She tried to go further down his shaft but her gag reflex kicked in. She tried again and gripped his cock where her lips would reach before the gagging began. She pulled completely off and looked at where her fingers ringed his shaft. She was amazed to see that she was past the halfway point, not much but some.\n\nGabriella looked up at him with a fierce joy in her eyes and saw the feverish look in his. He was close and that sent a definite thrill through her. She immediately slid her lips over his cock and began to make fast strokes from the head down to where her hand rested. She pumped her mouth over him faster and faster.\n\n\"Gabriella, oh my god! Gabriella, you're going to make me come!\" Ben moaned deeply with his hands tangled in her hair. She felt tremors running through his legs so she increased her pace.\n\n\"Oh god! I'm coming!\" Ben groaned and the first shot fired as she pulled up to the head of his cock. She froze as she hadn't considered what to do when he actually came. Jet after jet splashed into her mouth and coated her tongue as she squealed.\n\nGabriella kept her mouth over the throbbing head of his cock and she used her hands to pump the last few surges from him until he calmed. She pulled the head of his cock out between her closed lips carefully and got one last drop from it. She looked up at him and wondered what she should do with the large load she had in her mouth.\n\n\"You can go into the ensuite to spit that out if you like.\" he suggested pointing to the bathroom then watched her swallow a few times. Her face made some odd expressions as he watched her with surprise.",
        "\"A little saltier than I was expecting but I think I could get used to that.\" she smiled at Ben.\n\nBen lifted her to her feet and undressed her quickly. As the clothes fell his lips found and kissed the exposed skin. He paid special attention to her stiff nipples and returned the favor until she was moaning and pulling at his hair. He moved downwards.\n\nAs he slid her sodden panties down he pressed his mouth to her pussy and she grabbed the back of his head pushing his mouth against her more firmly.\n\nBen stood up and carried Gabriella to the bed. He laid her on her back then pushed her legs up so he could get his mouth on her pussy more easily. He ran the flat of his tongue over her lips and each time he stroked across her stiff nub of flesh her legs jolted. He dipped his tongue deeply into her, fucking her with his tongue and she began to whimper.\n\n\"Ben, please! God I need you inside me! Please!\" she moaned.\n\nKeeping her legs braced back Ben moved up until his stiff cock was positioned at the opening of her wet pussy. He slid himself across her lips dragging himself across her clit. Gabriella dropped her head back on the mattress as shocks went through her body and she moaned deeply.\n\n\"Please, please, please, put it innnnn!\" she begged.\n\nBen's cock was well lubricated so he lined himself up and pushed forward. The head popped in and Gabriella squeaked which turned into a deep groan as he pushed deeper and deeper into her. As he almost reached bottom she began to shake.\n\n\"Fuck, oh, oh, oh, so big! Sooooo deep!\" she whispered with her eyes closed in concentration.\n\nBen couldn't recall hearing Gabriella swear before and it made him grin.\n\nHe pulled out to the head and pushed in again all the way to the base. Gabriella's breath gusted out.\n\n\"Ooo! Oh god, so good!\" she cried.\n\nBen hooked her legs behind his arms and began to pound into her in long fast strokes. The impact at the end of each stroke made her squeal as her clit was slapped.\n\n\"Yes! Ben! That's good! Like that! Oh, oh, oh god!\" Gabriella was becoming quite vocal and Ben loved it! He increased his pace until he was slamming into her like a machine.\n\n\"Yeeeeesssssssss! Oh my god! I'm gonna- I'm COMING!\" Gabriella suddenly yelled as a huge orgasm swelled over her unexpectedly. \"Ahhh god! Coming!\" she squealed as her body went into convulsions. Ben's rhythm was broken by her jerking and her clamping down on his cock was all he needed to push him over top. He drove himself deep one last time and rode out his second orgasm with Gabriella grinding against him to prolong her pleasure. He felt her shake and jolt through a few mini orgasms after her major one. He rested atop the woman braced on his elbows after letting her legs back down.\n\n\"Oh Ben, that... that was wonderful!\" Gabriella sighed. Ben saw her eyes begin to close and she made a mighty yawn.\n\nHe chuckled. \"I'm glad you didn't do that during.\"\n\nHer yawn broke into giggles and she playfully swatted his arm. Ben could see she was really exhausted. The jet lag from her whirlwind weekend had finally caught up to her. He pulled his softening cock from her and her eyes went wide as she trembled and smiled. \"I'm just going to close my eyes for a bit.\" she murmured and was out.\n\nBen padded over to the ensuite and cleaned himself off. He made a damp facecloth with warm water then went back to the bed. Gabriella was still out so he gently cleaned her and pulled the blanket up. He considered going home but she'd asked him to stay so he slipped under the sheets and tucked her up against him.\n\nGabriella's sleeping face was so beautiful and peaceful he gently kissed her temple and closed his eyes. Sleep took him quickly.\n\nThe next morning Ben awoke to beautiful green eyes looking into his. Gabriella had a sweet smile on her lips.\n\n\"Good morning.\" she said.\n\n\"Good morning beautiful!\" he replied.\n\n\"Will you stay for breakfast?\" she asked.\n\n\"Sure.\"\n\nShe gave him a quick kiss then slipped out of bed. He headed over to the ensuite to freshen up a little and Ben got dressed. She came out in a big fluffy housecoat and he scooped her up in a hug. Once she was back on her feet they headed down to the kitchen. The kids weren't up yet.\n\nGabriella made a pot of coffee and Ben sat at the kitchen table watching her move around preparing breakfast for her kids and themselves.\n\n\"How went your evening with Rochelle?\" she asked out of the blue.\n\n\"She was still having trouble with the emotional intimacy so I told her to just have fun. She seemed really relieved once I said that.\" He paused thinking how it almost ended very badly. Gabriella caught his frown.\n\n\"But...\" she prompted.\n\n\"No, the evening was really nice and she slept over but when I woke the next morning at my back was Tina, Lisa, and Lori in that order, all naked.\" Gabriella gasped in concern for Rochelle. \"They'd been out clubbing and got drunk and thought it would be a good idea to get into bed with Rochelle and I. Don't worry, I managed to get Rochelle out of the bed and house without waking the others. She's fine.\" Gabriella breathed a sigh of relief.\n\n\"Tina was immediately apologetic for her mistake but, again, the twins had no clue as to why I was upset. I kicked them out and told them they weren't welcome until they understood. I called Daphne and told her what they'd done and told her I didn't want Christopher in their daycare because of their issue with accepting personal responsibility. This is where the issue goes sideways. Daphne doesn't have the skills to discipline her kids so as a last resort punishment she told the twins I was her silent partner and I didn't want them working at the daycare until they shaped up.\"\n\nGabriella gasped again. She knew Ben wouldn't participate in a lie.\n\n\"The twins called me yesterday and came over to apologize. They still didn't have a clue. I went to speak with Daphne which was when she dropped that bomb on me. She broke down when I told her I couldn't be part of that and she begged me to help her with her kids.\"\n\nGabriella looked concerned as she knew how Ben had a weakness for the damsel in distress.\n\n\"So now I'm her moral silent partner. I spoke with the twins again and tried to get them to understand that their behavior isn't something the impressionable kids in the daycare should be exposed to.\" he said with a sigh.\n\n\"Did they get it then?\" she asked putting breakfast on the plates.\n\n\"These are young adults who got away with this bad behavior for years so I don't expect them to change overnight but I think Lori got it. I'm hoping she'll be able to teach her twin.\" he replied.\n\n\"So the daycare won't be opening?\" she asked.\n\n\"No, it will. I asked Daphne to create an ad for two replacement daycare certified workers. If she followed through the twins should see that and realize how serious the issue is and hopefully that will drive the point home. They desperately want to work in this daycare. If they don't turn their behavior around we place the ad and they don't get to work there. That would be a terrible shame for Daphne who I think was primarily doing this for them and to be with them. She recognizes that the made mistakes with the twins. Of course, Daphne might just cave in under the pressure of their whining. If that happens I walk away from the whole mess.\"\n\n\"What mess?\" Miriam asked as she entered the kitchen.\n\n\"Good morning sweetie!\" Gabriella greeted her daughter. \"Can you go wake up your brother?\"\n\nThe young girl frowned. \"OK, but I want to know about the mess when I get back.\" She looked at Ben and he smiled and nodded. She smiled back and scooted back upstairs.\n\nGabriella stepped over to Ben's side to whisper. \"Are the twin's still trying to... be with you?\" She glanced at the doorway.\n\n\"Yes.\"\n\n\"Have you considered using that as a reward?\" she asked\n\nHe looked at her earnest face in surprise. \"Uh, no. I hadn't considered that. I was hoping to avoid adding that complication to an already messy situation.\"\n\n\"What mess, Ben?\" Daniel asked as he preceded his sister into the kitchen. Miriam rolled her eyes.\n\n\"We are having some philosophical / behavioral issues with getting the new daycare open. If they don't follow a policy I feel is safest for the children I will walk away from participating in any way.\" Ben explained.\n\n\"Seems reasonable to me.\" Daniel agreed and sat down to eat.\n\nMiriam had an unsatisfied look on her face then glared at her little brothers for sucking all the juicy adult stuff out of the answer. She looked plaintively at Ben who just smiled and shrugged.\n\nThey enjoyed their breakfast together then the kids got ready and were off to school.\n\n\"I think Miriam won't settle for the kid answers for much longer.\" Ben said to Gabriella who nodded and sighed. \"I have some work to do so I have to go as well.\" he said.\n\n\"You found another project?\" she asked.\n\n\"Yup and it's tickling my brain so I have to go scratch it!\" he smiled.\n\n\"Thank you again Ben for everything!\" Gabriella hugged him tight.\n\n\"Thank you for a wonderful date and breakfast!\" he grinned.\n\nWith a lingering kiss Ben stepped outside and drove his truck over to his driveway. When he got inside he heard Christopher's excited chattering in the living room. He went in saw Tina playing with the boy on the carpet.\n\n\"Dada!\" Christopher squealed reaching for Ben.\n\nTina's face showed shock then nervous embarrassment.\n\nBen sunk down to his knees and picked up the happy boy who squealed with excitement.\n\nBen looked at Tina who was trying not to look him in the eye.\n\n\"You've been teaching Christopher to call me that?\" his voice trembled as he was conflicted. Half of him was horrified that she might be attempting to manipulate him while the other half wanted very much to be called Daddy. \"Look at me, Tina.\"\n\nTina brought her eyes up to his and she had tears in hers. \"Christopher will not know his true father and for that I am very happy for his father was a very bad man. But to know no father is a terrible thing for a young boy. A boy learns what it is to be a man from his father. I can think of no other man who could set a better example than you. I have not taught him to call you that. I have called you that when he is in my arms so that he will grow up knowing he is loved by both a mother and a father.\"\n\nBen looked into her eyes and saw the truth there. He nodded accepting her answer. \"When he is old enough you will tell him the truth but for now Dada is fine.\" Ben pretended to bite the boy's nose and Christopher giggled.\n\nTina had tears pooling in her eyes as she gazed at Ben with love swelling her heart.\n\nThe three played in the living room for an hour then Ben felt the familiar pull of an unsolved puzzle tugging at him. He gave Christopher a kiss on the forehead then Tina was in his arms planting a very passionate kiss on him that left his head spinning. He smiled at her then went down to his workshop. As promised he left the door open and got back to work.\n\nThe next few days were pretty uneventful and he didn't hear back from Daphne or the twins. He put that in the back of his mind. The challenge had been issued and if it was going to work it would work.\n\nTina arranged for Trish to watch Christopher for them on Friday night so Ben turned his attention back to his work.\n\nThe engineering puzzle really got his juices flowing and he tackled it with everything he had. Tina had to drag him out of his workshop to eat and to sleep.\n\nFinally he had his eureka moment and quickly modeled a prototype on his computer and ran it through a slew of virtual stress tests. It passed these so he contacted his custom milling shop and sent them the specs file for making a physical prototype. They said they'd have it ready for him on the following Wednesday.\n\nFeeling confident of the design, Ben submitted his documentation to the Patent Office. He'd done it so frequently he had a script prepared to collect and submit the appropriate forms automatically. They Patent Office clerks knew him well.\n\nHe sent a quick note to the requester stating he had a solution in the physical prototyping stage and asked if they had a test bed. Moments later he received an excited response indicating they had one at their factory in Austin, Texas and would love to see the prototype ASAP. They sent him their corporate info now that they had reached the stage where they were no longer working through the anonymous forum. Ben saw the company was STURN Enterprises headquartered in Austin, Texas. Ben knew they dealt with oil as that was what one of the fluids the prototype was designed to deal with. He sent a reply that he would fly down with the prototype the following week once he confirmed the milling of the piece was successful. The immediate response indicated that they would send the corporate jet to pick him up and return him home. Once he'd indicated he was on the task they'd done their research on him. They'd looked up his forum ID on the engineering boards and found case after case where he'd provided successful solutions. They were thrilled he'd taken their task as their usual avenues wanted exorbitant advances just to look into the issue.\n\nBen wasn't surprised. You say 'oil company' you think 'money'. The point of the engineering forum was to strip away everything but the pure engineering puzzle. Someone anonymous posts a request for a solution, providing all of the known technical specs. If you had a solution and could provide one THEN you made arrangements to meet face to face or to just send them the digital file for the solution. Ben always made his own prototypes. These filled the cases lining the wall beside him. The new one was going to be rather large. He looked over at the wall and spotted an empty spot in one case that might fit.\n\nBen leaned back and enjoyed that lovely feeling of anticipation he got when he reached this phase of a project.\n\nHe made sure he had a backup of his work, locked up the workshop, and headed upstairs. Tina was in the living room on her tablet while Christopher played with his activity centre in the playpen. Ben realized his back was stiff from sitting in his chair for too long. He decided to soak in the hot tub.\n\nTina looked up from her tablet. \"Ben, are you done working on your project today? If so, Lori would like to speak with you when you have a moment.\"\n\nBen turned back and felt his lower back muscles tweak. He grimaced and rubbed at the spot. \"Uh, ok but tell her to bring a swimsuit because I'm heading for the hot tub. My back is hurting.\" He'd gotten into the habit of preparing the hot tub when he did these projects as he typically spent too many hours curled over either his drafting table or his keyboard.\n\nTina's eyes brightened and she tapped out a chat message on the table while Ben walked to his bedroom and put on his swimsuit. He headed outside onto the deck with his robe on over his trunks. The evening was clear and while the day had been unseasonably warm the air was now pretty cool. He lifted the lid on the hot tub and found the water temperature was perfect. He hung up his robe on the warming rack he'd built next to the tub and climbed into the steamy bubbling water. He instantly started feeling better. A few minutes later he heard a noise and opened his eyes to see Lori standing and shivering next to the tub in her robe.\n\n\"Don't just stand there! Put your robe on the rack and get in the hot water!\" he scolded the young woman.\n\nShe pulled off the robe and Ben got a look at the tiny bikini she was almost not wearing. His eyes widened and he looked away as she climbed into the tub.\n\n\"I'm decent once more.\" she said with a smile once she was under the water.\n\nBen looked back at her and she had tied her long red hair up in a bun on the back of her head to keep it out of the water. This just accentuated her long slim neck. She gave him a brilliant smile when she noticed he was staring. He cleared his throat and looked away. \"So you wished to speak with me?\"\n\nLori's face took on a serious expression and she cast her eyes down at the bubbling water as she collected her thought. \"Yes, I've done a lot of thinking about what you said and I thought about the times we've upset you and how we acted. It seemed so odd to us that there could have been a negative outcome to those events but I realized that was because we were only seeing it from our own perspective. Seeing things from the eyes of another isn't something we've had a lot of experience with. Understanding there was an issue has been a little easier for me as I've typically deferred to Lisa so I subconsciously already see from her perspective but it so closely matches mine the difference is almost meaningless. So I replaced Lisa with you and tried to consider your perspective on our touching you inappropriately and climbing into your bed uninvited then Rochelle's view on us being there too. I see now how uncomfortable it must have been for you and awkward for Rochelle. I'm sorry.\"\n\nBen was smiling at Lori when she looked up. \"Learning to see the effect of your actions through the eyes of others is exactly what I was hoping would happen. I'm so relieved to hear you've managed to do it! The question is, have you been able to share your epiphany with your sister? Does she understand yet?\"\n\nLori looked back down sadly. \"She's fighting it. I think she understands but she's always gotten what she wants in the past, even with me, and she's trying to keep that.\"\n\nBen had a bad feeling about that. \"She's been pressuring your mother to let her work at the daycare hasn't she.\"\n\n\"Yes, and it hasn't been easy on Mom. Now I can see what a struggle it's been for her. I let her know I support her decision. That really shocked her because Lisa and I have always been a team. For now she's standing firm.\"\n\n\"Then there has to be something else Lisa wants desperately that we can withhold from her until she is willing to listen.\" Ben said thoughtfully.\n\nLori smiled seeing Ben so clueless to the answer before him. \"Ben.\"\n\n\"What?\"\n\n\"It's you. You're what she wants the most, next to working at the daycare.\" Lori explained.\n\n\"Oh!\" Ben's eyebrows rose. \"But I'm already denying her that!\"\n\n\"So she thinks it's an impossibility. That's what you have to change. She has to think it's possible, just not for her.\" Lori was grinning broadly by this point as Ben struggled to decipher the clues Lori was giving him.\n\nShe reached around her back and undid the knot on her bikini top. She then lifted it over her head and dropped it on the deck outside of the tub.\n\nBen's eyes widened as he finally caught on to what she was suggesting. Lori's smile faltered as she looked at him nervously, fearing his rejection once more. She could see his mind ticking over but his next words surprised her.\n\n\"Lori, this could put a serious rift in your relationship with your sister. Jealousy is an ugly, bitter thing and she might react very badly.\"\n\nLori looked at Ben, amazed at how easily he put himself in the place of others. Truthfully, while Lori could now see how it done it wasn't easy for her at all.\n\n\"Ben, I love my sister above all others and I know she loves me but you're right, she may react badly. But I won't let that sway me from helping her see what she needs to see. I won't lie to you. It's going to be a struggle. I truly feel that she will not fully appreciate the benefits of putting others first until she's felt your firm hand guiding her.\" she finished with a hopeful expression.\n\nBen looked at Lori and struggled with the decision but he knew she was right. He couldn't just let Lori lie to her sister that she'd been with him as he couldn't participate in such a lie. Decision made he reached out of the tub and pushed a button on a panel on the side of the tub. A privacy curtain descended from the outer edge of the awning over the deck. Soon the deck had complete privacy on all sides though much of the light still got through. Lori was surprised by the curtains and watched them enclose the deck. When she looked back at Ben she saw him dropping his trunks on the deck outside of the tub. She suddenly realized she was in a hot tub with a very large naked man. She trembled as she realized her dream was actually coming true.",
        "He moved closer, his eyes on hers and she felt the knots on her bikini bottom come undone. His large hand lifted her under the water and she felt the bikini bottom tugged away. Ben dropped it over the side with the bikini top. Now they were both naked in the hot tub.\n\nLori was trembling and Ben took her chin between his fingers and looked into her eyes.\n\n\"It's not too late to stop. We haven't done anything yet we can't take back.\" he said firmly.\n\n\"I- I don't want to stop.\" she said, her voice quavering.\n\n\"May I assume you're not a virgin but you haven't been with a man as large as me?\" he asked.\n\nShe nodded her eyes widening with her memory of the size of him.\n\n\"So we'll take it slow. I'll set the pace. Understood?\" he said and she nodded, not trusting herself to speak she was so nervous. The dates she and Lisa had played with before had just been playthings. Good for fun but ultimately disposable. Ben was in a completely different category! He had experience!\n\nBen smiled and leaned in for a kiss. Softly at first. Just lips pressing and nibbling on lips. Lori leaned forward to kiss more urgently but Ben gently pushed her back.\n\n\"I set the pace.\" he said firmly and she nodded submissively.\n\nHe began again and Lori was feeling little sparks of pleasure tingling within her pussy but she dared not touch herself. When Ben's tongue caressed her lips and slipped between them she moaned and squeezed her thighs together as the tingle became maddening.\n\nBen sucked her tongue into his mouth and placed his hand of the back of her neck to better control the kiss. The fingertips of Ben's other hand slowly trailed down the skin of her chest and her breathing grew erratic as they approached her breasts. When she involuntarily thrust her chest up to reach his descending fingers he stopped and gently pushed her back. He lifted his fingers and began again. She got the lesson this time.\n\nWhen his fingers met her breast this time it was all Lori could do to keep from screaming 'YES'! She couldn't stop from moaning into his kiss as he filled his palm with her tit and squeezed it. Lightning shot between her nipple and clit. He slid his tongue into her mouth more aggressively and moved his fingers to tug on the stiff pink nipple. Another shot of lightning fired and she whimpered with need.\n\nBen moved his mouth to Lori's throat and kissed his way downwards. His hand left her breasts and slid around to support her back as he lifted her to the surface of the bubbling water. Lori's head rested back on the pillowed edge of the hot tub as her stiff nipples broke the surface of the water into the chilled air. Ben took her right nipple between his lips and slowly sucked more and more of her tit into his mouth as he ran his tip of his tongue across the sensitive nipple.\n\nLori couldn't take any more and moved her hands behind Ben's head into his hair. She stopped herself from pulling him tighter against her tit. Ben gently scraped his teeth on the flesh around her nipple and Lori cried out arching her back. With a final kiss Ben moved to her left tit and repeated the process only slower.\n\nBen's hands were on her back, supporting her floating body just under the surface of the water. For his next move he had to make sure Lori took a more active role in supporting her body. He release her nipple with a pop and let her torso dip just below the surface once more. The hot water reached her overly stimulated nipples and her breath hissed through her teeth.\n\nHe looked up at her flushed face and locked eyes with her. \"Get a grip on the rails on either side of your headrest and hold tight.\"\n\nLori's eyes widened and she quickly moved her hands into place. \"Good girl.\" Ben growled playfully and a shiver went through her body.\n\nBen dipped under the surface while holding Lori's body up horizontally just under the surface. When he resurfaced he came up slowly with his head between her legs his hands cupping her firm ass cheeks. He gave her a quick squeeze and she moaned at the feel of the strength in his hands. He lifted her ass upwards until the small red triangle of pubic hair surfaced. Ben smiled down at this and pressed his lips to the patch and kissed it. Lori's hips jolted from the sensation but Ben had a good grip on her ass so he controlled her motions. Ben kissed down in the direction the triangle pointed and soon he was brushing his lips across her pink, stiff little clit. She cried out and he moved on leaving her with the aching need for his touch. He could tell she was a moments from her orgasm.\n\nBen ran his tongue from just above her anus up across the engorged pussy lips and circled her clit.\n\n\"Fuck! Fuck! Fuck! Suck it please! Suck my clit!\" Lori finally gushed as the tingling exploded into a lightning storm inside her pussy.\n\nBen sucked her pussy lips into his mouth and thrashed them with his tongue until she began to gush juices. He moved his left hand to the center of her ass and rubbed two fingers of his right over her gushing pussy getting them nice and slippery. Then he slammed them deep into her as he clamped his mouth over the top of her pussy. Lori began to wail and thrash as her body rocked through an intense release. He began to pump his fingers in and out of her twitching channel.\n\n\"BEN! Oh Ben! FUUUUCK! FUUUUUUUUCK!\" she began to squeal and make unintelligible sounds as her shaking increased. Ben could see she was deep into her orgasm so he slipped his thumb into her pussy with his fingers for a few strokes to get it nice and slick then he pressed it firmly against her anus.\n\n\"AAAAAAAAAAAAAAAAAAAAAAAHHH!\" Lori screamed as her orgasm soared to new heights. Her whole body went stiff and her eyes rolled back. When he felt her body going slack he moved his hands up to support her shoulders as her grip on the bars released and her head rolled. He pulled her against him and rested her head on his shoulder. A few seconds later he felt her beginning to come around.\n\n\"Wha- what? What happened?\" Lori slurred against his shoulder. She felt like she was outside of her body. Everything tingled.\n\n\"You just had a little rest after your orgasm.\" Ben said gently.\n\n\"Oh. My. God. Ben! I feel so good! You feel so good against me! The water feels so good!\" she gushed as she tried to get her muscle coordination back.\n\n\"I think we'd better get out of the hot water.\" he said. He scooped her legs up and carried her from the tub. The air trapped within the privacy curtain was warmer than outside but it was considerably cooler than the water. He set her down and steadied her as he pulled her robe from the warmer and put it around her. Then he grabbed his own and they went inside. There was a towel on the floor inside the patio door and a note from Tina saying she and Christopher were staying with Trish tonight. Lori was still a little wobbly so Ben sat her down at the kitchen table while he went back outside and put the cover on the tub and raise the privacy curtain. He went inside and locked the patio door. He saw Lori watching him with wide eyes from the chair.\n\n\"It's never felt like that before.\" she said.\n\n\"The sensations are there, you just have to be patient enough to build them up.\" Ben explained.\n\n\"But you didn't...\" she said looking at him.\n\n\"No, and I don't every time. Sometimes it just works out that way.\" Ben said with a smile.\n\n\"I'd like you to. May we continue?\" Lori asked, biting her lip.\n\n\"We may.\" he said and held out his hand to lift her to her feet. As they left the kitchen they heard pounding on the front door. They looked at each other then went to see who it was. Ben opened the door. Lisa was on the step and she was sobbing.\n\n\"You BITCH! How COULD YOU!\" she screamed past Ben at her sister. Ben reached out and pulled her inside the house. Lori grabbed her arms so Ben could close and lock the door.\n\n\"Let go of me you back stabber!\" Lori screamed as the tears poured down her face. \"I saw your chat with Tina on your tablet. Then I saw Tina take Christopher to Trish's place. When I came over I heard your scream! I heard you screaming Ben's name! You had sex with Ben!\"\n\nShe whipped around to look at Ben. \"Why? Why would you have sex with Lori but not me?\" she sobbed as she threw her jacket to the floor. Her blouse was showing a lot of cleavage.\n\n\"For one she doesn't act like a spoiled little brat when she doesn't get her way!\" Ben growled deeply.\n\nLisa rocked back from Ben's anger.\n\nLori stepped in front of her sister. \"I get it. I understand why Ben was so upset with us. I've been trying to tell you but you won't fucking listen!\"\n\nLisa roared and reached for her sister with claws out but Ben caught her wrists and spun her around. He marched her into the living room and set her across his knees as he sat on the ottoman. He held her arms together behind her back with one hand and looked at Lori. \"If you would do the honors please.\"\n\n\"Certainly.\" Lori said and pulled Lisa's yoga pants down to her knees. Ben saw she was wearing a thong so her ass was bare. All the better.\n\nLisa screamed and thrashed in anger until Ben's palm cracked solidly against her ass cheek. Then she screamed in surprise and pain but her body froze in shock. Without giving her time to recover he landed a second blow on the opposite cheek.\n\n\"You're not a teenager any more so stop\" SMACK! \"acting like one!\" CRACK!\n\nLori knelt in front of her sister face and took it between her palms. \"We have to start thinking about how OTHER people would feel before we do something. We kissed and groped Ben because we wanted to and we knew we would like it but we never stopped to think about if Ben wanted that.\"\n\nLisa screamed in anger again. CRACK! went Ben's palm on her already red ass. Lisa screamed and tried to thrash so CRACK! across the other cheek. She started crying in earnest now.\n\n\"Stop being so stubborn! We love you! We want you to feel better but you have to stop being so damn selfish! Mom needs our help and you are jeopardizing that by not accepting responsibility for being a self centered little brat! I admit I was one too! Then I saw what Ben was trying to tell us. We just have to be aware how other people's feeling might be affected by our actions BEFORE we do them. I know we've never really had to do that before but like Ben said, it's time to grow up. We aren't spoiled little teenagers anymore. Daddy would let us get away with almost anything but Ben won't. He will help guide us with a firm hand so we can be better people and have our dream job and make love with our dream man. But only if you are willing to admit you and I have been behaving badly and we need to change.\"\n\nBen placed his hand gently on the red flesh of Lisa's ass and she hissed through her teeth. Then he began to lightly caress the skin and Lisa started squirming as the pain started to change into something different. Then he stopped and she whimpered.\n\nLori lifted Lisa's face again and looked into her tear filled eyes. \"You know it's true. I can see it in your eyes. I can feel you resisting. But that's only going to keep you from being happy. You have to understand that. We can't keep up this selfish behavior. It's hurting Mom and it hurts us. It will wreck our entire future if you keep it up. Please! Be the loving sister I know you are!\"\n\nLisa burst into tears and Lori hugged her sister. Ben released her arms and she hugged Lori back. He lifted her to the couch and Lori sat with her wrapped up in each other's arms. After they had a good long cry Lisa sat back sniffing and winced. \"My ass is on fire.\" she whined.\n\n\"Stop!\" Lori said holding a finger up. \"You know you deserved that! You have some things to say to Ben now.\"\n\nLisa glanced at Ben who waited patiently.\n\n\"Ben, I- I'm really sorry I didn't consider your feelings when we first kissed you in the car and when I got into your bed while you were sleeping with Rochelle. I was only thinking about what I wanted. Then you got angry and I didn't know why because I was only thinking of myself. I should have stopped and thought about how you'd feel before I did those things. I'm sorry.\"\n\nBen watched Lisa's face for any signs of her pretending to be remorseful but he saw it was genuine.\n\n\"I'll be expecting you both to be each other's watchdog. No sliding back to bad behavior.\"\n\nLori brightened up. \"Does this mean we can work in the daycare?\"\n\n\"On probation. Seriously, the first case I hear about one of you, just one of you behaving in that manner, and you will both he fired. Is that crystal clear?\" he growled and they both froze.\n\n\"Yes sir.\" they said.\n\nBen didn't know where to go from here. He was feeling incredibly stupid and horrified at himself for having spanked a grown woman but he knew to show that to Lisa now would undermine the work he and Lori had done to help her have the change of heart.\n\nIt was Lori who rescued the situation. She turned to her sister.\n\n\"It's true that Ben and I were in the hot tub together but we didn't have sex. Well, not fully. He just teased my body then gave me the most exquisite oral sex I've ever had in my life. I actually believe I left my body when I came. I passed out!\" Lisa looked at Ben desperately.\n\n\"Ben didn't get to have an orgasm. I'd really like to help him with that.\" She turned to him. \"Would it be alright if my sister joined us, please?\" Lori really poured on the charm as she pleaded with Ben to include Lisa.\n\nBen turned his eyes to Lisa looking for signs of her old selfish attitude but only saw submissive pleading in her eyes. \"Are you going to behave?\" he asked her, his voice a deep rumble in his chest.\n\nLisa trembled and the heat in her eyes kicked up a few notches. \"Yes!\" she breathed. \"But Ben?\" He looked at her again and her eyes dropped as she bit her lip. \"Please... don't be gentle with me. How- how you took me just now... it was so fucking hot!\" She squeezed her thighs together as her pussy dripped and her ass burned.\n\n\"God yes! I want that too!\" Lori moaned.\n\nBen looked across at the two lustful beauties gazing hungrily back at him and sighed to himself. Another big shove out of his comfort zone. He'd never been with more than one woman at a time and certainly not twin sisters. He also didn't consider himself to be a rough sex kind of guy but that's what they needed him to be. He'd just have to give them his version of it.\n\nHe stood up and they watched him approach with anticipation. He reached behind Lori's head and released her hair from the bun. He ran his fingers through her hair to make it cascade over her shoulders like Lisa's did. Then he put his hand in her hair at the back of her head and took a grip. He forced her head back and she gasped before his mouth was on hers in a hungry, deep kiss. She moaned into his mouth. He pulled back and looked into her glassy eyes as she panted with her excitement. Ben turned his eyes to Lisa who fidgeted on the couch worried that he was going to reject her. When his hand slid around her neck into the hair on the back of her head he felt her actually relax as he took his grip. He ran his tongue across Lisa's lips and she desperately tried to capture it with her lips but his grip wouldn't let her move. He sucked her lower lip into his mouth and ran his teeth over it. Lisa whimpered with need and she wasn't prepared for him when he suddenly kissed her deeply. She grunted in surprise as his tongue caressed hers. He pulled back and a string of her spit clung to their lips.\n\nHe released their hair, stood up and stepped back. \"Stand up.\" he growled. They stood quickly and faced him.\n\nLori was only wearing the robe but Lisa was fully dressed. He looked her up and down and saw her blush. \"Get undressed.\" Her eyes snapped to his then glanced over to her sister. \"Now.\"\n\nLisa's blush got deeper but she quickly pulled her sweater and shirt off. Her yoga pants were already around her ankles so she kicked them off then her socks. Soon she was just standing in her bra and panties.\n\n\"I said undress.\" Ben said looking at her underwear. Lisa's eye widened. She reached around and undid her bra then pushed her panties down. She was deeply embarrassed at being the only one naked but her pussy was dripping and he saw the lips were glistening.\n\nBen looked at Lori. \"Drop the robe.\"\n\nSoon he was standing before two identical naked women. He stepped forward and heard them suck in a breath in unison. He reached out and placed a hand on each of their bodies on a shoulder. He tracked his fingers down their chests and cupped a tit which brought gasps from them. He rolled and pinched their nipple a little harder than he normally would and they both went a little weak in the knees. Their eyes were getting glassy again. When he slid his hands to their other tit and gave them a firm squeeze Lori moaned and Lisa whimpered unconsciously pushing her tit into his hand. He squeezed hers harder and she moaned. He picked up that Lisa might need harder sensations than Lori did. He slid his fingertips down their tight, trembling stomach muscles and both wobbled on their feet as he got closer to their heat. He cupped Lori and pulled up slightly and she gave him an 'Ahhh!' while he slapped Lisa's pussy three timed quickly making her squeak. Both were breathing heavily and trembling by this point.\n\nBen took a step back and considered them. So far they seemed to be enjoying his 'performance'. Quite frankly he was enjoying the view and he'd begun to feel the beginnings of that familiar rise. Before it grew he wanted them to see it so they'd know what they were dealing with.\n\n\"On your knees.\" his voice rumbled and they immediately dropped down before him. \"You need to see what I'm going to fuck you both with. Open my robe.\" Their trembling increased with his coarse words.\n\nWith a glance at each other they both reached a hand forward and undid the loose knot on the belt. They took a side and pulled the robe open. Their eyes widened when they saw his thick cock hanging down and twitching between his legs. He pushed the robe off of his shoulders and let it fall behind him. The twins released the robe.\n\n\"It's still sleeping so it's not as big as it's going to be when I'm driving it into you. I'm still not sure you can take someone my size. I want to fuck you hard but I don't want to ruin you. Lisa! Don't touch yourself!\" he scolded her harshly and her hand snapped back to her side. She looked up at him desperately. He ignored her and turned to her sister.\n\n\"Lori, cup my balls in your hand. Feel their weight.\"\n\nLori reached forward and lifted his cock up to hold his heavy sack in her other hand. Her mouth dropped opened as she felt the heft and heat of them.\n\nBen was enjoying the feeling of her hands and this cock began to twitch more as blood began to engorge the flesh. Lori's eyes locked onto the stiffening flesh as she felt it move in her hand.\n\n\"Let go Lori.\" She did reluctantly. \"That weight is either going to be slapping against your ass... or your clit if I choose to take you from behind.\"\n\nLisa began to whimper at the image of Ben slamming into her from behind. She couldn't take her eyes from his rising flesh. It was only half mast and already looking monstrous. The fat mushroom head was darkening and beginning to point right at them.\n\n\"Lisa, open your mouth and stick out your tongue.\" Ben growled.\n\nShe quickly licked her lips and opened her mouth tongue extended. Lori whined as she wanted him in her mouth.\n\nBen stepped forward and tapped his bobbing cock on her tongue. Lisa tried moving forward to capture it but Ben gripped her hair and held her back. \"Patience.\" he said quietly. She nodded.\n\nHe moved forward again and laid the thick head on the tip of her tongue. Then he slowly slid it forward until it reached her lips. Ben was exercising every ounce of his self-control to not just shove his cock into her mouth until he reached the back of her throat. Lisa was trembling and moaning as the heavy meat slowly forced its way into her mouth. Ben stopped and held it there for a few seconds while Lisa felt it throbbing on her tongue. He slowly pulled it out of her mouth and she leaned forward unconsciously to get it back but he gently pulled her away.",
        "\"Lori, your turn.\" he said and she was already in position when he turned to her. He took a grip of her hair as well though he knew she'd already learned the lesson about pacing. The thick head touched her tongue and he slid it deep into her mouth, further than Lisa had been able to accommodate and he was definitely larger now. Interesting difference noted. She hummed and the vibrations went through his cock making it jump. She looked up with a twinkle in her eyes. He slid himself out of her mouth and stepped back. A few more throbs and it reached full size.\n\n\"Stand up.\" he said and they scrambled to their feet. Both were looking at his cock and the worried looks were back.\n\n\"Follow me.\" he said as he walked to his bedroom. When they were all standing next to the bed he looked at them like he was trying to gauge the possibility of his cock fitting inside them. He stepped up to Lisa and slid two fingers into her pussy with no warning. He knew she was wet enough as he saw her dripping down the insides of her thighs as her sister was. Lisa gasped and fell forward against him as his fingers slid in and out a few times. He pulled out abruptly and rubbed his slick fingers against his thumb as if testing her juices then he put the fingers deep in his mouth as he looked Lisa in the eyes and sucked her nectar from them. Her eyes were glassy and she was panting.\n\nBen set Lisa back on her feet and walked behind Lori. He wrapped an arm around her chest under her tits and slid two fingers from his other hand deep into her sodden pussy. Only his grip around her chest kept her on her feet as her legs immediately gave out. As he pumped his fingers she felt the heat of his cock pressing against the back of her leg.\n\nHe removed the fingers and repeated the thumb test and slurping her juices from his fingers. Lori regained her footing.\n\nBen turned to the end table and brought out a tube of lubricant. He turned to the two swaying women.\n\n\"Lisa, I got to eat your sister's delicious pussy in the hot tub. Now I'm going to start by eating your pussy while Lori rides my cock. When she's done and I've had my fill of eating you I'm going to fuck you.\" Ben knee walked to the center of the bed and the twins hurried to follow. He poured some lube on Lori's hand and told her to rub it on his cock. She began stroking him and made it nice and slick.\n\nBen laid down on the bed and directed Lori to squat over his cock. \"Lisa, hold my cock in position for Lori.\" She swooped in and took a grip of him at the base and pointed him up.\n\n\"Oh God, it's so big!\" Lisa moaned as she realized her fingers didn't quite make it all the way around. She looked at her sister with a worried expression. Lori had a determined look on her face as she lowered herself onto the thick head. The lubricant and her excitement helped ease the way for the cock to slide into her pussy.\n\n\"Go slow!\" Ben growled recalling Tina's misadventure with rushing.\n\nLori froze then nodded at Ben and slowed her decent. She started to make little up and down motions to slowly introduce the thickness to her tight pussy. She began to whine as her legs were getting tired and she hadn't reached a depth where she could drop to her knees yet.\n\n\"Lisa. Stand behind your sister and hold her under her arms to take some of the load off her legs.\" Ben instructed and Lisa got into place. Lori immediately felt the reduced effort and smiled up at her sister. The smile turned into rolling eyes, biting lips, and groans as Lisa began to bounce Lori up and down on the end of Ben's cock. When he saw she was deep enough he directed Lori to slide her legs back and rest on her knees. Once she was there Lisa released her and Lori sank the rest of the way down. Lori threw her head back in a silent scream as he completely filled her.\n\nBen watched her face to make sure she wasn't going to pass out but she just wobbled for a bit and seemed to come around. \"Just sit still for a while getting used to it. Lisa, bring your pussy down here.\"\n\nLisa eagerly moved to straddle Ben's chest finally about to get some relief for the maddening tingling in her pussy. She moved her pussy up towards his waiting mouth but she flashed back to a memory of how she used to tease her old boyfriend Scott by keeping herself just out of reach. For reasons even she didn't fully understand she reverted to this behavior for a moment pulling back twice until Ben gave her a stern look and sunk his strong fingers into the stinging flesh of her ass cheeks. She tried to move but he had her in unbreakable grip and she hissed in pain.\n\n\"Are we playing childish games or are we enjoying each other?\" Ben growled deeply.\n\n\"No games! Sorry, no games! Please, please, please! It hurts!\" she whined. Ben lifted her the remaining distance to his mouth and ran his tongue broadly across the surface of her wet pussy. She shrieked at the pleasure spiking through her. Then he spanked her ass and she shivered deeply at the delicious and confusing mix of sensations.\n\nLori's pussy was finally relaxing with his cock buried to the hilt. It felt so hot and she could feel it throbbing deep within her. Ben hadn't been kidding when he'd told her to go slow. She pushed with her thighs and raised herself slowly up then dropped herself down on him. It felt so incredible she had to stop and wait for her senses to return to her. Then she raise herself again and drop down. And pause while her brain spun.\n\nBen was fucking Lisa's wet channel with his tongue while he reached up and roughly played with her tits. He squeeze them, pinch and roll the nipples. Every so often he's slowly tug the nipples outwards as he thrashed her clit with his tongue. He'd counted two orgasms so far and she was quickly moving in on her third.\n\nLisa grabbed the headboard of the bed and ran her pussy over Ben's talented mouth. He was ripping the orgasms from her faster than she'd ever had and she felt a big one coming. As it rushed up on her Ben slid a well lubricated finger deep into her ass and she screamed. Her pussy began to squirt and drench Ben's face while he latched onto her clit, strumming it with this tongue.\n\n\"FUCKFUCKFUCKFUCKFUUUUUUUUUUUUUUUCK!\" Lisa wailed as her muscles shook and locked.\n\nLisa lost muscle coordination and began to fall sideways. Ben moved his hands and gently laid her back on her back beside Lori but with her feet up by the headboard.\n\nWith Lisa blissfully coming down from Heaven, Ben could now concentrate on Lori who had built up some speed with her thrusting. Time to take it up a few notches.\n\nLori was now well lubricated and accommodating his girth so there wasn't any real obstacle to increasing the pace. He pulled her down on top of his chest and took her face between his hands and kissed her deeply. She was surprised by the taste of her sister on his tongue then the only thing she had in her mind was the explosion of pleasure in her pussy as Ben began to bounce her on his hips. He grabbed her hips and pounded up into her at a brutal pace. She felt his balls slapping her ass as he's said they would and this just added to her pleasure. She was on hands and knees over Ben's prone body with her head thrown back and her eyes closed as Ben pounded her pussy without mercy. Her mouth was open but nothing more than little squeaks and moans were coming out of it. His left hand moved to her perfect ass cheeks and slid down between them to massage her rosebud. His right hand was busy squeezing her tits and playing with her nipples.\n\nLori crashed through her orgasm and Ben picked up the pace of his thrusting lifting Lori off her knees with each impact. She shrieked and wailed as her pleasure just kept increasing. She was having trouble catching her breath and started to see spots before her eyes.\n\nBen rolled over away from Lisa and pulled Lori under himself. He made three more brutal thrusts and he was buried to the base when his orgasm struck. She felt the jets of liquid heat filling her. Lori looked up at Ben's rapturous expression and felt a deep satisfaction she'd never felt before. She'd brought this incredible man, her fantasy man, intense pleasure! She closed her eyes and rode the bliss her body was flooded with.\n\nBen looked down at Lori's happy expression and slowly pulled his cock from her trembling body. Lori was watching him with a hunger in her eyes and she glanced down at his hard cock.\n\n\"Is that for me?\" she whispered.\n\n\"Yes, I told you I was going to fuck you and I will. I'm going to warn you though. We're not making love. This is going to be a hard fucking. But you need it hard, don't you.\" he rumbled at her.\n\nHer trembling increased and she was staring at the monster that was about to be deep inside her. \"Oh God yes! I need you to fuck me!\"\n\n\"Have you ever had it that way before?\" Ben asked.\n\n\"No.\" she whined.\n\nBen leaned down to put his head next to hers. \"They you don't know what it feels like to be truly fucked. Two people ripping their pleasure from each other's bodies, no romance or softness, just pure animalistic sex. It's amazingly intense but it can leave bruises. Are you sure you can take it Lisa?\" he snarled in her ear.\n\nLisa was almost coming from the images Ben was planting in her mind and the anticipation. This was what she wanted more than anything. \"YES! FUCK YES! TAKE ME HARD-\" she finished with a squeak as Ben flipped her onto her stomach and lifted her ass in the air. Her eyes flew open then she shrieked again as Ben drove his tongue into her ass.\n\n\"GAAAAWWWDD! FUCK MEEEEE!\" she screamed as her body jolted from the sudden intense sensations. Her legs splayed out and shook as he rimmed her little rosebud. Before she could recover he lined up the head of his cock with her dripping pussy and slammed it in down the base in one even stroke.\n\n\"AAAAAAAAAAAHHHHHHHH!\" Lisa screamed again, feeling her pussy stretched wide by the thick intruder. Ben pulled out and slammed it back to the depths by pulling her hips back to meet his thrust. His balls slapped up against her clit and she gasped.\n\n\"FUCKFUCKFUCKFUCK! SO BIG!\" she cried as Ben set up a steady pounding against her ass. Her reddened ass cheeks were being slapped again and the pain was mingling with the intense pleasure of the clit slaps his balls were making.\n\nBen reached forward and gathered up her red locks in his hand and pulled her head up as he increased his pace. Lisa started to whimper and squeal within a steady stream of breathy 'Fuck!', 'Yes!', and 'Ben!'\n\nHe placed his right hand on the top of her ass and slid his thumb down her crack until it was pressing on her anus.\n\n\"Yes! My ass! Please! Oh, oh, oh god, Ben!\" she wailed as he circled his thumb over her little hole.\n\nHe picked up the pace once more and hammered away at her as he pushed his thumb into her tight ass.\n\n\"AAAAAAAAAAAAIIIIIIIIIIIEEEEEEEEEFFFFFUUUUUUUUUCCCCKKKK! YEEEEEEEESSSSSSSSAAAAHHHhhh!\" Lisa's orgasm overloaded her senses and she whited out. Ben released her hair as he felt her body go slack and she slumped to the mattress pulling free of his cock.\n\nBen looked down at the unconscious woman. \"Damn!\" He'd timed that badly. He was only halfway to his second orgasm. He wasn't going to fuck her now.\n\n\"Ben?\" came a tremulous voice. He looked over at Lori. She was lying on the bed with wide eyes. She'd watched the entire thing. \"Do- do you want me to finish that for you?\"\n\nHe saw she was frightened that he would be as rough on her as he'd been with Lisa. \"No, it's fine. I'll just stroke it off in the shower.\"\n\nHer eyes lit up. \"I could do that for you! Or... you could fuck my titties?\" She saw his cock twitch at the suggestion and she grinned. She scooched over on the bed and Ben straddled her torso. He looked down and recalled fucking Rochelle's prodigious breasts. In comparison Lori was positively flat. That didn't stop her from squeezing her soft tits around his shaft. It felt good and the lubrication and the pussy juices made for a very slick stroke. At the height of each stroke the head of his cock entered Lori's mouth and she'd swirl her tongue around it. That felt very good! Finally Ben just fucked Lori's mouth with the head of his cock and unloaded in her mouth. She squealed and swallowed as quickly as she could. She sucked the last drops out of him and he sat back on the mattress between the two sisters. Lori gave him a brilliant smile and allowed her eyes to close.\n\nLisa was still out and probably would be until morning. It had been an emotional roller coaster evening for her. Lori's eyes were closed and her breathing was slowing as she slipped into sleep. Ben scooped Lisa up and set her down head to headboard and crawled into the bed between the two ladies. He pulled up the blanket, set his alarm (doctor's appointment in the morning), and turned off the light. He'd wait until the morning to see what new difficulties tonight's events added to his life.\n\nChapter 23\n\nBen was the first one to wake (before his alarm) and he managed to get out of the room without waking the twins. He grabbed his workout clothes on the way and made his way to the basement to get his day started.\n\nHe pushed himself hard and was careful of his injured calf which seemed a little better every day.\n\nHe used the guest bathroom to shower and slipped into his room to get his clothes. After he'd dressed he heard noises from the kitchen so he slipped back out of the bedroom and went to investigate.\n\nTina looked up from the stove and smiled at him when he entered the kitchen. Christopher stood up in his playpen and raised his arms to he picked up so Ben scooped him into his arms before moving over to give Tina a kiss.\n\n\"Good morning!\" he said.\n\n\"Good morning Ben. How many eggs would you like?\" she replied with twinkling eyes.\n\n\"Two please.\" he smiled back. He sat at the kitchen table and played with the boy who giggled with his antics.\n\nSoon Tina brought their plates over to the table and picked up her son from his arms. He went back into the playpen and immediately went for the activity center. Happy dings, chirps, and clicks soon followed.\n\nTina sat next to Ben and looked at him expectedly.\n\n\"Thank's for a lovely breakfast!\" he said, ignoring her real question.\n\nShe pouted and he gave in with a grin.\n\n\"The evening went well. Lisa showed up shortly after Lori and I got out of the hot tub and she was more than a little upset with her sister.\"\n\n\"We heard Lori's screaming.\" Tina said with a wicked smile and Ben froze.\n\n\"Who's 'we'?\" he croaked.\n\n\"Trish opened the door for me and we heard it then. Trish's eyes were so big!\" Tina smiled at the memory. \"Mrs. King was arriving home with her son and they were standing by their car and heard it as well. She looked over at us and laughed but her son seemed upset.\"\n\nBen put his head in his hands, mortified. \"That's the last time I have sex in the hot tub.\" he moaned.\n\n\"I hope not! I would like to try one day!\" Tina said with an upset look.\n\n\"Good morning Tina, Ben!\" Lori said from the doorway as she hobbled into the room.\n\n\"Good morning Lori.\" Ben said with an embarrassed glance.\n\nTina was amazed that he could tell the difference between the sisters so quickly. She had trouble doing it at all. \"Good morning Lori. Would you like some breakfast?\"\n\n\"No thank you, just coffee if you've made some.\" she said and Tina pointed to the freshly brewed pot.\n\nLori joined them at the table with her mug of coffee and tenderly sat on a chair. Ben looked concerned but Lori just waved it off. \"It was worth it Ben.\"\n\n\"I'm afraid our activities in the hot tub weren't only heard by Lisa.\" he said to the young woman whose only response was to look up with an interested expression.\n\n\"Trish, Tina, Rochelle and her son Jayden also heard us... you.\" Ben said.\n\n\"The only one in that group that causes me any discomfort is Jayden. The kid seriously thinks he's charming but comes across as a total skeez.\" Lori grimaced.\n\nAt Ben's blank look Lori explained. \"A slimy little player. He's tried hitting on me, then Lisa, then suggested the both of us could party with him. He looks at women like they're already naked. Ugh!\"\n\nBen looked sad. \"Rochelle mentioned her son was emulating his father's behavior.\" He shook his head then looked up at Lori. \"Is your sister awake?\"\n\nLori grimaced. \"Yeah but she's giving herself a little extra time as she's pretty sore this morning.\"\n\nBen frowned and got up from the table. He went to the bedroom and saw Lisa sitting on the edge of the bed. He knelt down in front of her and saw she was breathing heavily. \"Are you ok?\"\n\nShe opened her eyes and took in his concerned expression. \"Morning Ben. I'm ok. Just some cramping and bruises. They'll go away.\"\n\nBen got angry with himself for hurting her and she saw it on his face. \"No! Please Ben! I wouldn't change a second of our night last night. It was everything I dreamed of... more than I dreamed it would be. I- I learned things about myself. I feel... better about myself. More complete. Please don't regret something so special to me! Please!\" she begged.\n\nBen wanted to apologize. To beg her for forgiveness. But he knew she would take that as a rejection of what they'd experienced together the night before. So instead he put his hands on her head and kissed her hard. She moaned and clung to him. He pulled back and his face showed his emotional turmoil. Finally he gave her a small smile and nodded.\n\nHe grabbed his dressing gown and draped it over her shoulders. Then he scooped her up and carried her back to the kitchen and gently set her on a chair. Lori got her a mug of coffee and they sat in companionable silence for a while.\n\nHe looked at the clock and realized he had to leave for his doctor's appointment so he gave each woman a kiss and headed out.\n\nBen sat in the comfortable chair across from Dr. Granger and contemplated integrity. She had asked him where he thought his difficulty with lying came from.\n\n\"There were people in my childhood who lied to me. Foster parents who said they'd take good care of me but didn't. Other foster kids who said they were my friends but weren't. Girls and women who said they loved me but didn't. I promised myself I wouldn't be like them. I promised myself I'd be someone others could depend upon.\" He paused and thought of his activities with the twins the previous night. Was he lying to them?\n\n\"Were you successful? Are you that person?\" Granger asked.\n\n\"I thought I was. But after last night I'm not sure.\" Ben said.\n\n\"What happened last night?\" she asked.\n\n\"I pretended I was someone I'm not.\" Ben said quietly.\n\n\"Can you expand upon that?\" she pressed gently.\n\nBen sighed and squirmed a little in his chair. He had hoped to avoid speaking about sex with the councillor but he saw no other choice. \"In my neighborhood there are two young women, twins who are 22 or 23. They've been... wooing me. No, it's not romantic. They've been trying to get me to have sex with them. Their mother and I have been trying to teach them to be less selfish, to take responsibility for their actions. During this effort one of the twins had an epiphany and came around. The other one had more difficulty as she was used to getting her way and didn't want to give that up. As a last resort I used sex as a bargaining tool to get them to change their ways. The problem is, they're attracted to the dominant persona I use for Tina, the submissive who lives with me.\"\n\n\"You have a separate and distinct persona for dealing with different people?\" the doctor asked.\n\n\"Well... no, I guess persona is the wrong term. It's... it's more that for Tina I know that she needs me to be more dominant so I allow myself to be more dominant. The twins saw that a short time ago and found it... appealing. The thing is they needed a more extreme form of that dominance. The sex was... a little rough. This morning I wanted to apologize but they were so happy they would have taken an apology as a rejection of the evening before.\""
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "mature",
        "interracial",
        "group sex",
        "romance",
        "domination",
        "spanking",
        "mile high club",
        "oral sex"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-shepherd-of-ashburn-court-pt-05"
}