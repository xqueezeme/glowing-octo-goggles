{
    "title": "A Nude Troubadours Production",
    "pages": [
        "The following story has been entered into the Nude Day contest for 2019. Thank you to everyone who has voted or commented in support of my stories. It is very much appreciated!\n\n***\n\nIt was a Wednesday afternoon when Kate had her fateful encounter with a simple slip of paper. She had been sitting in Jane's on Main, her favorite coffee shop, nursing an iced coffee and savoring the earthy scent of freshly ground beans. The cafe was bustling as usual, full of all kinds of people, young and old. She liked to sit and eavesdrop on conversations buzzing all around her, floating with ease from one to the other, catching small fragments of strangers' lives, their worries, their joys, or even just their plans for the weekend.\n\nOn that day, however, such a simple pleasure seemed miles away.\n\nKate sat there alert and erect, chewing nervously on a straw that was slowly turning white with teeth marks. Her eyes were burning holes into the community board across the room; the one that she had happened to take a peek at on her way to place her order. She hadn't expected to find what she spotted there, it caught her by surprise, but it also filled her with intrigue, even now after pondering it for so long.\n\nThe bright yellow flyer was for the whimsically-named Nude Troubadours.\n\nIt looked like any other community board posting except for the one scandalous word that arrested her attention. \"Help us celebrate our 5th season in New Haven!\" it had said, reeling Kate in further. She had to stop and read more. It went on to say: \"We're holding an open casting call for new members to join our ensemble and participate in our annual Shakespeare production. This year we'll be performing the comedy, 'Three Gypsies of Bracciano.'\"\n\nKate couldn't help but be intrigued. She was a theatre graduate, after all, fighting the good fight to find steady work like the rest of her peers. But... nude? Come again? \"We strive to be inclusive and seek a culturally and racially diverse group of actors to help us promote a message of body positivity. All genders, sexual orientations, et cetera, are welcome. Experimental theatre experience strongly advised.\" All good so far. Then it said, \"It goes without saying that the Nude Troubadours perform in... well... the nude! So come be comfortable in your own skin and help us make this year's summer theatre season the most exciting one yet!\"\n\n\"A nude theatre troupe? Here? In New Haven?\" she had asked herself, bewildered by what she'd just read. It listed a date, time, and location for the upcoming open call along with pull-away strips containing a web site URL for more information, none of which had been plucked off yet.\n\nKate had never heard of the Nude Troubadours, however, that wasn't surprising. It had been less than a year since she had returned home from New York. After graduating from the NYU theatre program, she found it hard to afford to stay in the city on the meager earnings from the odd off-off-Broadway shows she managed to land. Even sharing an apartment in Astoria with two other girls seemed to be an insurmountable arrangement to maintain. At least for the time being, she reasoned, it would be wise to head home to nearby New Haven where she could find a less expensive apartment and get by on some additional financial assistance from her family.\n\nAt some point during her struggles, it seemed that this little experimental theatre group promoting body positivity and the normalization of nudity had sprung up out of nowhere... and it intrigued her. However, Kate wasn't sure it was for quite the right reasons. Sure, she was a theatre grad. Sure, she was looking for work. But as she sat there in that coffee shop her mind drifted back to one specific point and place in time.\n\nIt was sophomore year and she had signed up for the experimental theatre class. Kate had heard the gossip; that at some point the class would confront one of the most notorious features of experimental theatre: nudity. She had heard that part of the class' curriculum involved the students confronting their bodies together in an intimate class setting, removing their clothing and performing exercises in the buff. Frankly, she had been terrified but also, excited. It seemed so taboo to her -- but to have a squeaky-clean, school-sanctioned, culturally-acceptable reason to be around a bunch of naked, potentially-cute college guys? For that, she was willing to at least try to set aside her own fear of exposure.\n\nWhen the class started, the topic of nudity was indeed introduced as part of the course curriculum but wouldn't happen until later in the semester. She imagined that was to dissuade anyone from taking the class just for the naked experience before dropping it immediately thereafter. The teacher hinted that it was a \"popular\" topic, a fact that triggered some knowing giggles throughout the room.\n\nBy the time the naked movement sessions actually occurred, Kate had gotten to know her classmates well. Not that she wasn't still nervous, just as they were, but at least it would happen amongst friends and not complete strangers. However, a couple of the guys made her especially nervous, on account of her growing interest in them, but she sucked it up and accepted that it was happening and went in that day with a stubborn determination to get through it with as little trauma as possible.\n\nTo say that it had been an awkward experience would be an understatement. However, it was also every bit as exciting as Kate secretly wanted it to be. She remembered it vividly: They'd all worn unrestrictive, comfortable clothing, just as they did when reporting to class on any other day. Only now, it seemed like a pointless, mechanical measure, completely unnecessary given the day's agenda. She remembered having to stand in a ring with her classmates, doing movement exercises at first, followed by breathing exercises. Her teacher had altered the routine a little, forcing them to face each other in this manner and spending more time on relaxation techniques, for reasons that seemed obvious.\n\nThe teacher had broken the circle briefly at one point to go and dim the lights until the room was filled with a soft orange glow rather than flooded with bright white light. It wasn't as if that would prevent anyone from seeing her body but It had an immediate calming effect, nevertheless. When the teacher returned, she instructed them all to begin undressing when they were ready. Kate remembered everyone's eyes; the way they zipped back and forth, connecting first with this person and then that one, silently communicating the same anxieties over and over as if they all needed to get it off their chests.\n\nAnd then it started. Just like that. The floor suddenly felt cold and dusty against bare feet. Shirts went up, revealing bras. Other shirts sailed upward to reveal bare, muscular chests. Shorts and pants shot down to the floor. There was an assortment of boxers, panties, and briefs in alternating colors sweeping across her field of vision. A colorful wheel of undergarments breaking up an astonishing amount of bare flesh.\n\nKate recalled seeing, out of the corner of her eye, a bra pop off and a pair of naked breasts set free. She quickly looked over. The girl was looking down at the floor, unable to make eye contact with anyone. All heads seemed to be turned in her direction. The silence was deafening. The girl's first step set off a chain reaction. Across from Kate, to her left and to her right, more bras came off, underwear slipped quickly down legs.\n\nHeavy breathing surrounded her as nervous students braved their first baby steps together, exploring the unique challenges of a genre of theatre that was best suited to confront social taboos.\n\nKate's heart was pulsating in her chest as she unhooked her bra and felt her boobs bounce free. She didn't want to look up for fear of catching someone's eyes but she couldn't help it. She looked up and saw the boy across from her standing back up, having just dropped his boxers. Her heart stopped as she saw his body. There were his penis and testicles, just dangling and swinging about as he stood back up. She wanted to shriek, both out of excitement and fear.\n\nHe looked up at her and she quickly looked away. There was nowhere safe to look! There were boobs everywhere. Penises flopping out around the room. Hairy vulvas all over. Kate quickly dropped her panties and stood back up. Her chest heaved in and out.\n\nEveryone was looking at her in amazement. She was looking at them in amazement. Bewildered students frantically assessed each other's body out of curiosity and youthful sexual awareness. Kate's senses were overwhelmed. So much naked flesh. So much pubic hair. So many naked, exposed genitals.\n\nMost of all, it was shocking to see what each one looked like. Kate discovered that each classmate's nudity seemed to possess its own personality, either representing or defying the person those private body parts belonged to... these people she thought she had gotten to know so well. She could feel a swelling of emotion all around her.\n\nSomething amazing was building within her, in the air throughout the room, expanding eyes, minds being blown. She experienced a brazen excitement, innocent, naked bodies sending a thrill up her spine, and another kind of thrill emerging somewhere else down below...\n\nKate snapped out of her daydream when a young woman asked if she could share her table.\n\nAs Kate nodded, she realized she was still faced with a question. Should she go to the open call? Did she want to? Could she manage to get by without her parents or brother ever finding out? If they did, what would she tell them? What would she tell her hometown friends? She felt for sure her life would become a sudden scandal; the talk of the town. However, something inside her was still yearning for that sense of freedom and liberation that she experienced back in college, as fleeting as it had been.\n\nKate left the cafe that day not quite in the state she usually did, but there was something strangely satisfying about being the first person to tear off one of those little strips and leave a sign of her brave interest behind, in the form of a single gap torn from the bottom of the flyer.\n\n***\n\nThe day of the open call seemed a day like any other. The sun was shining. Young couples strolled in the park with overly-excited puppies dragging them across the grassy expanses. The food trucks were out and generating long lines. Booksellers set up shop in the streets to catch the daily foot traffic.\n\nHowever, Kate was focused solely on the butterflies in her stomach. It was sophomore year all over again, she was a giddy college girl about to take off her clothes and hang out with naked boys, only it was worse because she had no idea who she would encounter there or what kind of experience she was in for.\n\nShe made her way across town to the performance space. Towering like a red brick behemoth, she arrived at one of the old, defunct mill buildings down along the railroad tracks outside of the city center, in a gritty neighborhood that was historically sketchy. However, in recent years it had started to get some cozy cafes, bookstores, and vintage clothing shops as a younger crowd moved in looking for cheap rentals and more space.\n\nKate got out of the car and startled herself unexpectedly, merely by slamming the door shut. She took a deep breath, preparing herself to go inside. In fact, she'd already done a good deal of preparation, starting with multiple readings of Three Gypsies of Bracciano.\n\nThe play was one she admittedly hadn't read since high school but Kate remembered it as being one of Shakespeare's funniest comedies. Civilization and order existed inside the walls of a medieval city, surrounded by a dark forest where chaos and lawlessness were thought to have reigned. The city folk didn't trust the gypsies that lived in the forest on the outskirts of Bracciano and the gypsies didn't trust the city folk inside.\n\nThe play opened with Prince Felix, who one day defied his father's wishes and went hunting in the forest alone. He fell asleep and was discovered by a band of gypsy girls masquerading as monsters to scare away anyone who ventured into their domain. Needless to say, one of the gypsies, Eutropia, fell in love with the sleeping prince and hatched a plan to violate the century-long boundary between two worlds to make him her husband.\n\nWhat ensued was a madcap affair. Eutropia and her two closest friends dressed as city folk in order to leave the forest and drug the fair prince with a magical herb... only they administered the powerful aphrodisiac to the wrong man. As the gypsies continued to court the prince and his two closest friends, using their altered identities, everything went wrong that possibly could. One disaster after the next left nearly everyone drawn into the matter a victim of this ill-conceived plan, whether tricked, robbed, humiliated, or in one case, murdered. In the end, only the three young men from the city and the three young gypsy girls received an undeservedly happy ending... albeit none of them with the person that they originally pined for.\n\nIt was a raucous, whimsical narrative that Kate recalled had inspired many debates in school. Were the men depicted as representative of order, dominating the gypsy girls who represented chaos in a show of male dominance? Did the gypsy girls represent the powerful feminine source of life, before it became tainted by the world of men? Were they alone capable of rescuing mankind from its folly? There were no answers and it depended on your perspective.\n\nOne thing remained constant: young love could be impulsive, haphazard... and fucking hilarious.\n\nKate did her best to put her fears out of her head and strolled into the performance space, preferring to think about how interesting it might be to take part in a more loose and innovative interpretation of that famous comedy. She hoped that there would at least be photos of past performances on display, so she'd know exactly what she was getting into, but she found herself crossing a silent, empty foyer toward a door with a sign indicating entry into the theatre itself.\n\nWhen she got inside and made her way down the aisle toward the stage, Kate found various performers milling about and socializing as if they knew one another. She gathered that they were the ones returning for another season. A small handful of people like her were also standing about, looking mildly disoriented, albeit enthusiastic. The turnout of new faces seemed very low but she didn't find that strange, given the obvious taboo surrounding nudity. However, the situation also increased her likelihood of achieving membership and it felt like any option for turning back was swiftly vanishing.\n\nThe founder of the Nude Troubadours, Gwen Perkins, was an impressive woman in her late thirties. She seemed determined, knowledgeable, wise, and creative. Kate got the sense immediately that she'd like to work with her and hear more about her vision. She soon did, as Gwen welcomed the new faces that had arrived, offered them bottled water, and brought them into the fold. Kate listened to her detail the exegesis and origin of the theatre company; how it started on a personal level when she was a victim of abuse, how that experience stayed with her and impacted her ideas, influenced her passion for the theatre, and led her to an idea that she hoped would empower men and women alike. Kate was intrigued by this offering of an alternate way to think about topics she felt were often viewed through a negative lens.\n\nFrom the get-go, Kate was hooked and felt a strong desire to be a part of it all. Although she had a strong sexual affinity toward the act of performing in the nude, she felt equally inspired by Gwen's message. Kate reminded herself that there was no reason the two could not coexist, provided she never confuse the two or forget when one or the other was appropriate to engage.\n\nGranted, there were certainly persons of interest that emerged as Gwen began calling on current members and newbies alike to introduce themselves. When the guys spoke up, Kate found herself secretly trying to figure out which ones were gay and which were straight. A mystery man had caught her eye from the start. When he introduced himself as Dan Watts, she added him instantly and excitedly to her straight list.\n\nDuring his introduction, Dan responded to one of Gwen's ice-breaker suggestions that his favorite performance to have taken part in so far was \"The Fall of Icarus,\" a popular Greek tragedy in which he had played the lead role. Kate grew excited. It had been many years ago, and her part was small, but she had been in a performance of the same play and loved it.\n\n\"I'm Kate Bowman,\" she announced cheerfully when Gwen called on her.\n\nAs heads turned her way, she glanced briefly at Dan, scanning for his attention. She quickly noted that she was happy to hear \"The Fall of Icarus\" mentioned as it was one of her own personal favorites. Kate paused for a moment, observing Dan's expression from afar. He had smiled at her. She went on to give her background and did her best to hide any nervousness that she felt about the frank embrace of nudity that was about to occur. Kate received a hearty welcome from all those present and felt at home.\n\nAs Gwen went around the room, she watched Patricia introduce herself, who had graduated from NYU as she did. She met Nicholas and Brittany who were some of the longest-running members. There were other head-turners like Josh and Terrence, who were both newbies like her, along with Jenny, a short Asian girl with pigtails. A woman named Paige seemed delightful and friendly and Kate immediately saw her as someone she might like to be fast friends with.\n\nAs orientation went on, she felt increasingly less like these were strangers and more like people who could understand her, who had similar interests, who knew what she had been through in her struggle to forge a budding career in theatre.\n\nAfter various clothed exercises, they broke for lunch, where Kate had a chance to get to know Paige a little better, and they quickly hit it off. Gwen seemed blas\u00e9 about the fact that they'd be getting naked after lunch. In a way, that made Kate feel a little better. If it was no big deal for Gwen, maybe she might feel that it was no big deal for her.\n\nDuring lunch, however, her eyes frequently wandered over to Dan. Dan with the big brown eyes, the strong jaw, and high cheekbones...\n\nAfterward, Kate felt her panic really begin to rise. It was as if all her mental preparation for the undressing went out the window. Too nervous to stand by Dan, Kate made her way to the back of the stage where she could hide next to Josh, who seemed equally uneasy. The task proceeded quite unlike her previous experience in college. The returning performers were clearly used to being naked together. Clothes flew off quickly and with ease.\n\nKate stared in amazement at the apparent comfort that Brittany had, pulling off her t-shirt, unhooking her bra, and bearing her two perky breasts within seconds of receiving the invitation. Her pants and underwear quickly followed and suddenly she seemed proud to flash her neatly groomed lady bits to the room. She chatted excitedly with Nicholas the whole time, apparently unfazed as he removed his shirt and then slipped down his shorts and boxers in a single go. Kate shivered at the startling appearance of his long, pendulous cock.\n\n\"Oop-- there's a naked penis,\" she thought to herself, casting her eyes downward toward the floor for a moment to recover. She glanced back up and took a second look at his body, now completely unclothed. She marveled at how casually he managed to stand there with his privates visible.\n\nIt didn't occur to Kate that Gwen, too, would join them in the buff. She had stepped off to the side to carefully remove and fold her clothing, then returned to the stage without a stitch of clothing on. Kate found herself obsessively examining everyone's body. Gwen had small, firm breasts, perfectly round, like two apples, which wiggled in a way that seemed to reflect her cheerful personality. She was pretty hairy, with a fair bit of course black thatch between her pasty legs and small tufts nestled into her armpits. As Kate looked around the room, she felt excited to see so many different types of bodies represented.",
        "Standing so close to Josh, Kate mirrored his own speed of undressing, which lagged considerably behind everyone else in the room. The slow removal of shoes and socks seemed to exist as a means to delay the inevitable. When he was bare-chested, she made sure to have her shirt off as well. Josh glanced up at her out of the corner of his eye as if cautiously aware that she would remove her bra momentarily. Kate's heart was thumping, having observed his subtle awareness. Still, she reached back and did the deed.\n\nKate looked down at her chest as she felt her boobs springing free. The sight of her own raised, blushing nipples startled her. Then she caught the flash of Josh's eyes. She began to feel excited by his curious sideways glances, so full of wonder and curiosity. She recognized in him the same emotions she felt herself. Josh fumbled with his belt a little, then finally removed his shorts. She noticed the faint outline of his cock wagging back and forth within his boxers, its shadowy outline flapping against the loose navy blue fabric. He seemed semi-excited but still within a safe range of arousal.\n\nKate couldn't help but stall and discreetly observe him, struggling to remove the last article of clothing on his body. She, too, stood there, wearing only a pair of panties that fit snugly between her legs, obscuring the final frontier of her own body. He seemed to be aware that she was pausing and began to breathe deeply under the weight of so much pressure. However, seeing his anxieties come forth caused her a mixture of excitement and relief.\n\nFinally, and without warning, Josh bent in half and thrust the waistband of his boxers to the floor. He stepped out of his underwear and stood back up. Kate glanced down and suppressed a smile when she saw his plump, peachy balls hanging there with a mildly swollen cock drooping down over them, crowned with a big, beautiful ridged head. Josh seemed to be frequently checking the state of his manhood out of nervousness, then glanced up to catch Kate's eyes and offer her a sheepish smile.\n\nKate wanted to laugh. She felt a sudden flush of excitement at the fact that the two of them were clearly standing there examining his penis. Realizing that it was now or never and that she didn't want to be the very last person to be completely naked, Kate innocently smiled back at Josh and then began to slide her panties down her legs. When she reached the bottom, she took a deep breath and stood back up.\n\nJosh was still looking straight at her. Kate thrust her chest out proudly and did her best to project absolute comfort at the presentation of her naked body. Josh seemed to be just as startled as she was. He quickly scanned her sloping, weighty breasts and rosy nipples which inevitably began to wag as she turned her body. His eyes quickly shot down to her pubic area, where he briefly acknowledged the sight of her smooth, closely-cropped black pubic hair and the two shadowy but distinct lips of her outer labia that had already started to become puffy with growing arousal.\n\nTheir eyes briefly met again and expressed so much. Nervousness. Excitement. Attraction.\n\nStill, as exciting as it was to see his gorgeous body, it was Dan that continued to intrigue Kate the most. Having positioned the entire crowd between them, Kate suddenly felt frustrated that she could not see his body yet. She shifted back and forth, trying to catch a glimpse through the sea of now-naked bodies, but there was always some pair of tits in her way, or the thick biceps of a naked man to distract her.\n\nThen, suddenly, there he was.\n\nIt was as if the clouds had cleared and a ray of sunshine broke through. There was an aura about Dan, standing there like a sculptural sensation that Rodin might have chiseled from raw marble. His body was fit and lean, well-toned, with broad shoulders and a flat stomach. A handsome, hopelessly-masculine cock sprouted triumphantly between his legs and fell in a smooth arc over his tight, round balls. She scratched her chin, admiring him, deeming the length and girth of his penis to be as perfectly suited to her taste. She caught herself imagining the bulbous, reddish head of his cock, swollen with wild arousal, parting her sweet folds and plunging its way through her body, making space for itself within the wet cavity of her body.\n\nAs soon as the tingling started, Kate quickly reprimanded and distracted herself, not wishing to allow herself to become quite so aroused, at least until she got home and had some privacy. However, she didn't tear her eyes away before Dan's own attention found his way over to her.\n\nAcross the broad space of the stage, through the tangle of naked bodies, past the many distractions around them, they briefly found a perfect connection. One she imagined was composed of admiration, curiosity, longing...\n\nGwen split everyone up into pairs and assigned a rotating series of improv scenarios. Due to proximity, Kate and Josh partnered up and began exploring challenges such as a \"hypochondriac at the doctor's office,\" or \"delivering a presentation on a topic they knew nothing about,\" and \"sharing a first date as their favorite cartoon characters.\"\n\nThe scenes were playful and humorous, and they provided Gwen an opportunity to observe each person's skill sets as she strolled around the room as an observer. Kate did a fair bit of observing too, amused by the ludicrous and whimsical activities going on around her, as well as being secretly entertained by the undeniably comical swinging of dicks throughout the room.\n\nPartners were cycled every so often, giving Kate a chance to interact with different people, both men and women, and to get to know them better. As she neared Dan, however, she became easily distracted, observing how he interacted with Jenny, his present partner. They seemed to be having a blast together and Kate felt a mild pang of jealousy, even though she'd barely talked to him yet.\n\nObserving the two of them together, Kate's insecurities got the better of her. She wondered if Dan was normally attracted to bodies like that. She examined Jenny's body, from her sexy curves to the wispy black hair covering her mons like a strip of silky fur. Kate wondered if he had a thing for spunky, large-breasted Asians with lengthy nipples. Then she reminded herself that the pairings were randomized and, with any luck, she'd have a turn with him that afternoon and that he would find her body just as sexy.\n\nIn time, the stars did align.\n\nKate tensed up as she saw Dan approach, their naked bodies facing each other squarely and coming within an arm's length of one another. Suddenly, she could see every detail; every freckle, every hair, every revealing inch of his gorgeous body. After all the time that had passed, in which she had become increasingly comfortable being unclothed, Kate felt she had returned to square one all over again.\n\nDan made her feel astoundingly naked and vulnerable as she stood there cowering in his presence, her sprightly breasts displayed audaciously beneath his soft gaze, the brazen reveal of her vulva, just barely covered in a soft layer of pubic hair and privately burning with secret urges. She saw in him only a glimmer of the anxieties that she felt but took comfort in the knowledge that at least on some level he might be similarly vulnerable, grappling with the frank display of his cock in her presence.\n\n\"Hi, Kate!\" he had said, expressing both a sense of enthusiasm and his remembrance of her name.\n\n\"Hey!\" she exclaimed, offering him an embarrassingly goofy grin.\n\n\"I was excited to work with you. You know... given our mutual interests,\" he continued. She could hear from his voice that he seemed mildly intimidated and it calmed her nerves a little.\n\n\"Oh, good-- me too!\" She was elated that her mention of his favorite play was a tactic that was already bearing fruit.\n\n\"Shall we get started then?\" he asked with a grin, before extending his hand.\n\nShe grabbed it and followed him as he led them both to a spot on the stage with a little more space. Then he turned around and they faced each other. Kate's chest was already sore from the pounding of her heart.\n\nShe felt as if a heat was building between their bodies. Mild dizziness swept through her body and then passed.\n\n\"Yes, let's,\" she replied, finally giving him an answer, along with a smile that stretched from ear to ear.\n\n***\n\nSeveral days later, Kate sat under the shade of a tree in a small park downtown sipping a latte, watching the cyclists zip by on the bike path. She closed her eyes and leaned back, enjoying the breeze as it softly toyed with her hair. Kate reveled in quiet moments to herself, especially when recent days were filled with so much brooding.\n\nThe moment her cell phone started ringing, Kate somehow immediately knew it was Gwen on the other end and that the answer she would receive held the potential of changing her life forever.\n\nNeedless to say, it didn't come as a surprise that Kate was accepted into the Nude Troubadours, although the idea that she would be performing in the nude in her hometown, potentially in front of people she knew, still gave her cause for great alarm. Regardless, she forged ahead with the development of their next performance, Shakespeare's Three Gypsies of Bracciano.\n\nThe casting process couldn't have been more advantageous for Kate. Dan received his part early as one of Prince Felix's closest confidants. Kate immediately began vying for the role of Phryne, one of the three gypsy girls whose plan goes awry. The reason was simple: her character ended up with Dan's in the end, making for the perfect opportunity to see if there was indeed something brewing between them.\n\nHowever, as rehearsals went on, it was already apparent that chemistry was building rapidly between them. If Kate wasn't grabbing lunch with Paige on a particular day, it was with Dan. They always started discussing the work that they were doing but soon veered into quasi-date territory that would have threatened to get them back to the studio in a tardy fashion if it weren't for the fact that a quick return meant being naked together again.\n\nGranted, romping about nude on the stage with a real-life love interest offered a multitude of distractions that took Kate some time to negotiate and manage. It never got easy, per se, but there was progress as each day went by, despite the constant challenges.\n\nOne of the most disorienting things about rehearsing for a nude theatrical performance was the intense awareness of the body. Not just the nudity itself but the ways in which the body expressed itself. Kate became acutely familiar with the manner in which her body, and others' bodies, were completely unfettered and subject to a range of free movement that was frequently startling and distracting at first. In particular, prancing around stage as a band of gleeful, spritely gypsy girls resulted in a spirited display of fiercely animated, bouncing breasts. She imagined future audiences rendered hypnotized by the motley assortment of jostling boobs, wiggling and wagging and wobbly; playful, vivacious mounds of flesh with dancing, rubied nipples.\n\nIt wasn't just the girls' job to push through and ignore this distraction. The guys' had a similar obstacle. They couldn't take one step, one passionate crossing of the stage without bringing attention to their swinging, flaccid penises, flopping about between their legs like limber sausages. It was as hilarious as it was sexy-- but it was also a challenge unique to the performance and not one that Kate was used to dealing with.\n\nKate remained skeptical. Could the audience really get into the story when they were otherwise engrossed in the jarring movement of so many naked breasts and penises? She began to laugh, thinking about how the program may as well list Brittany as \"Lead Boobs\" instead of Eutropia, or Nicholas as \"Penis #1.\" Was she just going to be viewed as one of the members of Eutropia's merry band of hairy pussies? Despite the comic appeal of the thought, she truly had no idea whether they would or not.\n\nPerhaps the theatre-goers would surprise her and really get past all the nakedness. Maybe Gwen and the returning cast members knew something she didn't.\n\nAll things considered, the only bit of the play that seemed questionable was the gag in which one of the male actors, Terrence, walked onto the stage, sporting an erection. In her role as Phryne, one of the gypsy girls, it had been suggested that she might giggle and give it a playful brush after making a sarcastic remark. When the suggestion was first made, it took Kate by surprise.\n\n\"You mean... you actually want me to... touch him there?\" Kate asked in a low-voice, seeking perfect clarity.\n\nGwen had calmly replied, \"I'm going to leave that up to you and Terrence. There are only a few really bawdy moments in this play but this is the big one. Why don't you workshop the idea and start there, then find where you both stand in terms of comfort level.\"\n\nIn the original Shakespeare, the scene was bawdy, yes, but much less explicit. Terrence's character, Tiberius, was actually sporting a bulge and Phryne had merely tapped his manhood discreetly through his clothing with an ornate fan. Kate had to chuckle at the fact that it fell on her shoulders to execute the shocking interpretation that had been suggested in a group discussion. Terrence was cute enough but she wished it were Dan that she had to \"interact\" with.\n\nWorkshop they did and once she had gotten to hear Terrence's take and privately discuss it with him, she felt comfortable moving forward with the suggestion. They had a good, respectful rapport, after all, and he made her feel reassured about the idea. She also couldn't deny that his handsome, athletic body made her feel at least a little intrigued with the idea of wrapping her fingers around the impressive schlong he sported between his muscular thighs.\n\nMost of all, she found it impressive how he seemed to have some technique to be able to excite himself just moments prior to coming onto the stage and the ability to force it to go away after he quickly left it soon thereafter. She observed this over the many times they rehearsed it, although it wasn't until the \"dress rehearsals,\" as they still jokingly called them, that she was required to actually touch his erect penis.\n\nWhen the moment arrived, they had gone off to the corner together, both aware that it was time to face the task head-on. They sat there cross-legged on the floor, calmly discussing what they were about to do. She had hesitantly asked him what his inspiration was for becoming hard on cue, so long as he was comfortable sharing it. Without getting into too much detail, he summarized his first sexual experience.\n\nIt was with a young white girl that he cared deeply for senior year of high school. Unfortunately, her parents didn't approve of their relationship and it had troubled him. When they lost their virginity together, it had been something so beautiful and profound for both of them, breaking through what had seemed like an unnecessary taboo of the conservative community they grew up in.\n\nKate found it to be a touching story and understood how recalling their tender lovemaking might have the desired effect for him. Terrence shifted nervously as his cock began to rise from his lap; thick, shiny, and glorious. She took a deep breath and asked him how he'd like her to proceed. They briefly discussed how and where she would touch him for the purposes of the performance. Then, upon having a formal agreement, she reached forward and felt the stiff shaft beating back against her fingers as they wrapped around his profoundly-engorged manhood.\n\nFor a short while, Kate and Terrence shared a tender and quiet moment. Holding his erect penis in her soft hands, she took her time allowing him to become familiar with her touch as she took her time becoming familiar with the sensation of his sturdy arousal, his revealing scent, his slow, heavy breathing. After a while, she looked up at him and they shared a smile that instantly calmed both their nerves.\n\nIn the distance, Kate caught sight of Dan's expressionless but attentive looks. She smiled to herself, wondering if she'd just detected a hint of jealousy. He looked hot and motionless. Vulnerable. Adorably so.\n\nIn the end, Kate decided it all made sense, in a way. Throw the audience a bone, or in this case, a boner. Something they wanted to see that was sexy and daring. Thus, in giving them that one concession, the rest of the play's stark nudity would be received as rather mundane and not designed merely for pornographic expression. It was a lesson in the various modes that nudity could find expression.\n\nAs rehearsals continued, time seemed to fly by, each day bringing her closer and closer to a new identity, a vivacious gypsy girl who lived deep in the forest and lived by her own rules.\n\nAt the same time, it brought her closer to having to make a tough decision. A very tough one, about the fate of her decisions as it related to those closest to her who had not yet learned of the secret new world to which she now belonged.\n\n***\n\nKate saw the writing on the wall. There was no avoiding it. Eventually, her family would find out what she was doing. All her old friends would hear about it. Heck, some of them would surely come to see her! After running lines one day, Paige had talked to her about it. She suggested getting ahead of the situation, that way Kate herself would be in control of the messaging from the get-go.\n\nUnfortunately, Paige was right.\n\nBeer and burgers seemed to be as good a setting as any to drop the bombshell news to her family; beer to help her get the confession out and slabs of meat to make the rest of them sluggish and less emotional about the whole thing. She had suggested they grab lunch at one of their favorite restaurants and Kate soon found herself surrounded by the comfortable hiss of a flat top where a perfect grid of beef patties scented the air with fat and smoke.\n\nThe moment Kate introduced the fact that she'd joined a local theatre company her family started building obstacles, however, she knew that filling them in on the latest events in her life would be no easy task.\n\n\"That's great! How much are they paying you?\" her father rejoiced.\n\n\"Dad...\" she groaned.\n\n\"No really, we're so proud of you honey... good job!\" her mom said, patting her hand. \"How cool is that? We'll get to see your sister in another show!\" she added, turning to Tim, Kate's brother, who was recently home from college for the summer.\n\nTim was still busy stuffing his face with fries. \"Uh huh,\" he mumbled.\n\n\"Uh... well...\" Kate began.\n\n\"Are you in a production yet? When do we get to see?\" her mom continued, enthusiastically.\n\n\"Well, I'm not sure that you'll want to--\"\n\nHer father chimed in, \"Why, is it a controversial topic?\"\n\n\"Um... you might say that...\" Kate said, suddenly realizing she needed to wrestle control of the conversation back again. \"See, it's like this. And hear me out, before you react.\" The whole family perked up. Her mom and dad's faces turned to mild concern. She decided to play the desperation card.\n\n\"Basically, you know I've been looking for work for a while and struggling financially. Someone told me to start going after bolder opportunities where I might have a better chance of getting things rolling. So, like, I've been thinking about that and trying to cast a wider net and looking for more types of productions. And... well... there's a performance here in New Haven coming up that I auditioned for and got the part. It's Shakespeare.\"\n\n\"Okay... this doesn't sound like a nightmare to me yet...\" her mom uttered, her joke only thinly veiling the growing concern in her voice.\n\n\"Well... this group... they... uh...\" Three faces stared back at her, just a few words away from the shocking news. \"... perform plays in the nude.\"",
        "Kate stopped talking and watched her words smack her parents in the face like a soggy burger someone might have tossed in a middle school cafeteria. Tim gawked at her silently, with a single half-eaten french fry still clinging to his lips. Kate cringed inside.\n\n\"Nude...\" her mom repeated in disbelief.\n\n\"Yeah...\"\n\n\"Honey... what--\" her dad started to say before his eyebrows tried to criss-cross and he became stuck on his words.\n\n\"Wait, wait, wait, I have so many questions...\" her mom said, flabbergasted and waving her hands in the air.\n\n\"Are you a nudist?\" her dad asked. It sounded almost like a joke someone would make but he was serious.\n\n\"Dad-- no,\" she gasped.\n\n\"We sent you to New York City, not Vermont or San Francisco...\" he added.\n\n\"No, no... I mean, there are lots of nudists in New-- well, that's not the point,\" Kate fumbled.\n\n\"How exactly did you come to this decision?\" her mom asked sternly.\n\n\"Well, as I said, the opportunity was there, I checked it out, saw that it was legit...\" Kate answered, trying to shrug it off. Out of the corner of her eye, she could see Tim's head ping-ponging back and forth between them, following the discussion and very wisely staying out of it.\n\n\"But honey... other opportunities will come along. Heck, we're happy to support you until you get things going. We know how hard it is. You don't have to resort to this.\"\n\n\"It's not like I'm performing sexual favors, mom. This is a group formed to promote healthy attitudes toward nudity and--\" Kate snapped back, becoming defensive.\n\n\"But honey, think of all the people that will find out. People you know might see you in this...\"\n\n\"I know, I know. But if I believe in their mission, then so what? Maybe I can educate people. Besides, as I said, you don't have to go, obviously.\"\n\nThere was total silence for a while.\n\n\"Well... we'll have to talk about this,\" was the last thing Kate's mom said.\n\nKate wondered what that meant. Talk about what? It was her decision and she'd already made it. Or did she mean talk about whether they'd come to see? \"God, no...\" she thought. Honestly, she didn't know what to think. She just wished the whole thing had gone down smoother.\n\nThe conversation didn't really find its conclusion until a couple of days later on a phone call Kate received from her mom.\n\n\"Well, we all talked about it...\" her mom had said.\n\n\"Okay...\" Kate said, cautiously.\n\n\"Your dad was, um... understandably uncomfortable with the whole idea. I told them that I was willing to go on everyone's behalf to support you so that you don't feel hurt that none of us came. That way they're not put in an awkward position.\"\n\nKate felt trapped in a brief silence, during which a reply was expected, however, she had none. Fortunately, her mom went on.\n\n\"Dad asked if you actually wanted him to go. To be honest, I didn't really have an answer for him. I wasn't clear on that in the first place. Would you... want your father to... see that? I can't imagine you'd want him to actually see you... um... without any clothes on...\"\n\nAgain, there was dead silence on the line. Kate was torn. Her head had recently become crowded with visions of a brave new world, full of normalized, respectful, non-sexualized nudity. However, here she was, put to the test and faced with the reality of what that actually entailed.\n\nShe reasoned that he probably wasn't intending to go in the first place, so she cautiously admitted, \"I'm not entirely against it. You know how it is. Women are constantly body shamed, objectified, and made to feel inferior in so many ways. There's not exactly anything wrong with fighting back against that and changing attitudes. Not that it wouldn't be totally weird, but the whole point is to change how we think about nudity.\"\n\nKate stopped herself there, worried she might be laying it on too thick, so she reigned it in and quickly emphasized, \"But if he's uncomfortable, then he doesn't have to go. I certainly won't be offended. This is the fight I choose for myself and I would never force him to be drawn into it.\" She concluded with this, deciding that she might successfully be able to have it both ways.\n\n\"Oh-okay, honey...\" her mom said with a stutter after several moments of silence. \"... Because I was going to say that he decided to leave it up to you. He said if you felt strongly that what you're doing is for a good reason, then he'd not judge you for it and keep an open mind and go.\"\n\nKate realized that she'd just talked herself into a corner and now she may have to face her father naked on stage. At least, she thought, her brother couldn't possibly go. She rushed to ensure that was the case.\n\n\"Okay... so should I... um... reserve two tickets then?\" she replied, hearing her own voice breaking on the line.\n\nKate heard her mom sigh. \"Well... your brother... he didn't seem to have a problem either way with the idea. I guess he's like you. So he said he'd do whatever your dad ultimately decided.\" Kate's heart sank.\n\n\"I mean... I can't tell him to go or not to go, Kate. He's an adult now,\" her mom added, suddenly sounding mildly defensive and not wishing to be blamed for Tim's attendance. \"If you're going to be parading yourself naked on a stage for all of New Haven, then people are going to see you. Whether it's your parents, or friends that you know, or your teachers from school, or even your brother. You have to learn to take responsibility for that.\" Now she sounded somewhat upset.\n\nKate couldn't let her win the argument. \"I know, I know, mom. I've thought about it and that's part of the hurtle of repairing our concept of nudity in this country...\"\n\n\"Okay honey... I just hope you know what you're getting into...\" her mother relented.\n\nThe conversation left Kate stressed and dissatisfied. Her whole family would be there on opening night to see her romping around the stage in her birthday suit. It got worse in the days that followed. An old schoolmate posted a link to the Nude Troubadours site on their high school class Facebook page, pointing out that Kate was going to be in a new production. He made no mention of her being nude but the intent of the jerk who posted it was more than obvious to her. The news spread like wildfire and she soon found out that more than a few people she knew from high school had bought tickets.\n\nKate had no choice but to take the final step; a full embrace of her new identity. Was she a nudist? She wasn't quite sure. But she was all-in on whatever her membership in the Nude Troubadours made her.\n\nIt could have been worse. She could have disagreed with the whole idea of it philosophical grounds-- but in truth, she did not. What Gwen was doing with this group was special. She was promoting something good and right. As long as she kept reminding herself of that, Kate knew she could power through it.\n\nThis was now a path forward in life for her and it needed to feel good.\n\n***\n\nNeedless to say, opening night finally arrived and tensions still rode high between Kate and her family. She paced back and forth backstage, listening to the murmur of gathering crowds outside, feeling the cool, flat floor beneath her bare feet, a stark reminder of the nudity that she had become so accustomed to, only to have to face the same fears all over again. Kate told herself that all would settle down afterward and focused on the task at hand: to put on a top-notch performance that would sweep all the drama under the carpet.\n\nOnly it was not so easy. The jitters were undeniably there as the big night finally commenced.\n\nEyeing them secretly through the curtains of the stage as soon as she had the chance, Kate saw her family file into their row and begin to take their seats. They each had a program. It read, \"Shakespeare's 'Three Gypsies of Bracciano' - a Nude Troubadours Production.\"\n\nAs Kate scanned the room, she began to spot one familiar face after the other until she had recognized an alarming number of old high school friends and acquaintances. Some of them sat there by themselves, glancing around the room nervously as if afraid to be caught demonstrating an interest in the affair. Others sat together, whispering occasionally to each other and nodding rapidly. Kate couldn't help but wonder what they were saying.\n\nBackstage, she began to rev herself up, performing vocal exercises and jumping in place like a lunatic, just to get her energy up and distract her mind from nervous thoughts. However, the resulting bounce and wiggle of her breasts only served as a reminder of what she was about to do.\n\nThe lights began to dim and Kate heard the audience begin to settle down. There was an electric feeling in the air. She imagined it was the same feeling both for her and for the audience as it began to sink in that the spectacle of full-frontal nakedness they were awaiting was about to arrive. She began lining up with the other gypsies at the edge of the stage, fueled by nervousness and excitement.\n\nThe lights went fully dark. Nicholas slipped by, then headed out onto the stage in the dark to recline on the floor and assume his role as the sleeping Prince Felix. Moments later, the lights faded back on and the audience found themselves observing a nude man fast asleep alongside an artistic stand-in for a horse. While Kate could not see the audience, nor their faces, she heard the audible gasps. For many, they were not used to seeing such extreme nudity in a theatrical performance. Even though they had been expecting it, she imagined it must have been quite a shock to see him there, bare as the day he was born, with his thick, flaccid penis resting comfortably on a pair of sturdy thighs.\n\nKate felt a queasy feeling in her stomach as she saw the gypsies in front of her begin their movement and creep outward onto the stage. There were always some nerves before a show, especially on opening night, but she never experienced it quite to this degree. However, this was a whole new territory for her and she knew it was coming.\n\nThe play opened with the band of gypsy girls slowly advancing upon the prince, each of them masked to obscure their true identity. They fashioned themselves like strange creatures; hissing, evil spirits to spook the man and send him fleeing out of their domain, back to the world from which he came. As such, out they paraded, one after the other.\n\nFor a moment, Kate found herself comfortably hidden by a magical world, protected by a grinning, toothy mask before a backdrop of sinister trees, reaching up like creepy skeletal hands. However, it would only be for a brief time that Kate's family and friends would not recognize her, so she made use of it as best she could in order to swallow the initial shock. She wanted to laugh when she saw the expressions of those gathered in the audience, wide-eyed, innocent and scandalized, taken aback by the stark display of raw female nudity.\n\nKate and the other girls ambled out onto the stage performing crab-like walks, hyper-aware of the pendulous swing of their loose breasts and protruding nipples. Their yawning, hairy pussies, split by pink gashes, left absolutely nothing to the imagination. Their vicious snarling was in full effect and they flexed their fingers like claws as they approached the sleeping prince. For a while, she avoided looking at her family but she couldn't help herself. There they were, doing the same thing everyone in the audience was doing, frantically absorbing the sight of the gypsy girls, their eyes darting from body to body, assessing breasts, sheepishly examining female genitals, and shifting nervously in their seats.\n\nShe saw Tim struggling to maintain his composure, frequently switching which side of his body he leaned to, then finally placing his hands in his lap. Kate cringed, not wishing to think about what he was experiencing. She caught her dad's eyes momentarily as he cast a bewildered expression at each girl, no doubt realizing that he'd just seen his daughter naked but unsure which one she was. His eyes lingered on her just long enough to cause Kate alarm.\n\nDid he somehow know? She reminded herself that she had no tattoos that he would recognize. The tree branches woven up into her hair seemed to sufficiently obscure any clues in that regard. He looked away and she breathed a sigh of relief.\n\nThe gypsies slowly descended upon Felix, having completed their whimsical dance across the stage. They fawned all over his youthful body, studying it, reaching out toward it curiously, fighting over it. One of them, thinking him deceased, teasingly made as if she wanted to nurse him back to life with her breast. This signaled the moment when all would be revealed.\n\nKate took a deep breath.\n\nPaige ripped off her mask first. \"This youth is no more dead than I! See how gentle sleep weighs upon his pale eyelids,\" she announced, giving the first line of the play.\n\nThe rest of the gypsy girls tore off their masks, seeing that the occasion for scaring away a wayward hunter had become momentarily unnecessary. They all tossed the masks toward the backdrop; a painted curtain depicting a wall of dense forest. And just like that, Kate stood there trembling, her identity finally revealed.\n\nKate thought that the staging of the gypsies entrance was brilliant. Gwen was well aware that there were those in the audience that would only focus on the actress they knew, especially if they were seeing her nude for the first time. By being masked, the audience was initially confronted with bodies that were just bodies. And Gwen didn't shy away from that either. The way they came out, bearing themselves from every angle, without shame, without hiding a breast or obscuring a vulva, she wanted to show the world the authentic and uncensored physicality of the female form and, throughout the play, declare that it was worth revering and celebrating.\n\nAs true as that was, it still left Kate standing there in a half-squat, her hands still outstretched like a tigress ready to strike, with the heavy weight of her breasts somehow feeling exaggerated as she thrust her chest forward. She felt the deep wellspring of embarrassment as she wrestled with the awareness of her parted knees, cringing at the fact that she was basically spread beaver, her vagina slightly agape in front of the entire audience.\n\nKate's family was quiet and stone-faced. Their eyes became penetrating the moment they identified her and became fixated on the shocking reveal of her body and all of its intimacies. However, she knew their struggle was something that they would have to own. It was on them to see her differently than they might normally see a naked person. That was the mission after all. It had transformed her and now the challenge they faced was to let it transform them. She repeated this like a mantra.\n\nStill, it was challenging to see her friends here and there throughout the audience. Unlike her family, they had received no explanation. She was just this girl they knew from high school, standing there, completely naked on stage. The ones that came together became flushed and whispered to each other, smirking and nodding. The guys that had attended, people she knew, some of them so well, had red faces, gazing at her in wonder with startled or joyous expressions. For a moment, this filled her with confidence. She clung at that. Due to her family's presence, Kate had almost forgotten that her friends' sexual excitement was secretly one of the things she wanted to privately enjoy for herself...\n\nKate dug her heels in and grew determined. She had to carry on. She had a mission to complete.\n\nFor all her brooding, the production began to move along smoothly. Eutropia fell in love with Felix on the spot. She began seeking the assistance of her closest friends, Livia and Phryne, to aid in his pursuit. It wasn't long before Kate found that she could easily dismiss the various familiar faces in attendance and embrace her role exactly as she was supposed to; the wonderful, wicked glee of the mischievous Phryne who always seemed to be one step ahead of the others and with a keen eye on the goings-on about her.\n\nEverything seemed to lead up to Kate's shining moment; the one that would place all focus entirely on her.\n\nThe stage was empty except for Kate, playing Phryne, as she wandered the deep forest alone, hunting for the magical herb that would be used to intoxicate Price Felix and make him susceptible to the power of Eutropia's suggestion. Only it was Phryne's secret plan to use it instead of another; a young stud she once spotted passing through the forest.\n\nKate plucked an imaginary herb from the ground... then turned to face the audience, laying bare all her femininity with nothing and no one else to distract the attention of the vigilant crowd.\n\nThere she stood on stage, feeling the cool, hard floor beneath her bare feet, knowing that all eyes at that moment were upon her body and hers alone. She felt her nipples hardening, poking outward toward the audience with feverish excitement as she prepared to deliver her lines. She even caught a brief whiff of her own personal fragrance, knowing full well of her secret arousal, the subtle wetness beginning to make itself known only to her. Kate wondered if the women in the audience would realize just how tickled she was, if they were aware of the way her fuzzy labia had swelled in front of everyone's prying eyes. She could feel the hunger of the men in the audience as they grappled with their own sexual instincts, on their journey to learn how to control them.\n\nKate began her monologue as the audience watched and listened attentively. Her body shone bright and hot under the theatre lights, illuminating her nakedness in all its glory. The shadowy faces before her remained partly obscured by the tunnel of the spotlight, however, their shifting, curious eyes could be seen making their way across the landscape of her body, delighting in every nook and cranny. She became an anatomy lesson: her plump breasts and the thickened lips of her hairy pussy, a study in the body of a real woman.\n\nBut not only that, she felt beautiful and desired by everyone present.\n\nKate gave her long, yearning account of that time she had stumbled upon the object of her affection, in secret. It was an account of a deep, painful desire. A woman's desire, more revealing and genuine than was typically expected in a lighthearted work of Shakespeare. The audience seemed to empathize with her craving, observing how her body transformed along with her words, lighting up from the inside as much as from the powerful lights. They watched her body swell and burn with a real and honest lust as she projected her voice across the room.\n\nThe monologue gave Kate the experience she didn't realize she was looking for. It was a confession, not just by Phryne, but by Kate herself. It was just her and them and the thick cloud of sexual desire forming between spectacle and spectator, which they would have to work through together.\n\nAnd together they did exactly that until the very last words of her speech dripped from her mouth like the juice of a forbidden apple.\n\nEventually, however, Kate came to the scene that she'd been dreading. It stood as the final personal challenge of the performance for Kate to get through. If the management of sexual arousal so far had been a personal matter for herself and for each person watching, this was the one moment that it would finally come fully to the forefront.\n\nSexuality exposed. Confronted. Honest and laid bare. The floodgates were about to open and consume everyone, all together.\n\nTime seemed to slow as she watched Terrence preparing to enter from stage right. He stood in the shadows, doing his private ritual, working himself up into a state of arousal. Kate's heart pulsed in her chest as she focused on what she was about to do. Right on cue, Terrence waltzed back onto the stage with the thick, meaty projection of his swollen penis extending outward and upward from his body in dramatic fashion.",
        "Kate was taken aback by the way the audience reacted to his proud reentrance. They were animated and shrieking with laughter. There were also several whistles. Kate wanted to laugh at their response. She found herself thriving on it as she turned to face him and reflected their excitement in the character of Phryne. She was a vessel for their carnal delight and arousal.\n\n\"Who is this that calls out my name, ruining a perfect dream?\" Terrence asked sleepily as his bold erection bobbed cheerfully in front of his body.\n\nKate strolled over to him with catlike movements and a keen interest to inspect the goods he was peddling. With one smooth movement, she curled her hand along his soft face, slipped it down his body, and then cupped his balls, just as they had choreographed together. Then she slid her hand outward along the shaft of his impressive erection, wrapped her fingers around it to give it a brief squeeze, and strolled off again, batting her eyelids innocently.\n\n\"Twas my tongue's sweet melody that did the deed! How I wished that you would rise at the sound of my voice -- alas, you have already risen!\" she exclaimed.\n\nThe room gave a collective gasp and then howled. When Kate turned back around, she realized that she'd accidentally dragged his cock a little too far. She'd left it ricocheting back and forth with a wild, stiff swinging that was still exhausting itself of kinetic energy several moments later. She hadn't rehearsed that and wondered whether Gwen would see it as an unfortunate misstep or a worthy flourish on her part.\n\nKate began to turn red as she saw her mother several rows out, turning a similar hue before briefly covering her face with the program. She saw her brother's grin, her father's uneasy smirk. Her friends were all in hysterics. But the enthusiastic clapping of the audience gave her power. They were eating it right up. Suddenly Kate felt on fire. She felt empowered, strangely in control. Brazen, audacious, and powerful.\n\nIt was the turning point she needed. She felt like she was fully in control of everything. She could turn on the sex and then make it seem to vanish at will, like turning a spigot. With this second wind, she embraced the rest of the performance with everything she had.\n\nNow feverish and intoxicated by her own experience, Kate discovered just how distinctly one could smell bodies while performing on stage. Sweaty bodies, yes, but also the faint hints at subtle arousals, ebbing and flowing. One wondered who's body it was. Where, why, and when a passing flush of excitement might have secretly threatened to blossom. Perhaps it was only hers, her own familiar scent filtered and transformed through the proximity of flesh acting upon flesh. She felt like she, herself, had taken Phryne's magical herb.\n\nSoon, the play was coming to a close. Phryne had found and drugged her secret flame, only to instead fall in love with Dan's character, who initially threatened to expose her plan after catching her in the act. The two became unlikely lovers, just as the other gypsies found their own unexpected mates, all the while leaving a comedic trail of destruction in their wake.\n\nThe audience loved it and gave them a standing ovation. As Kate stood there in a line, bowing for the audience in the buff, sending her breasts dangling about beneath her chest, she reflected on the complex kind of enjoyment she just experienced. Kate was finding a balance between the mission to support a positive public view of the body and the private experience of her own thrilling sexuality. She was finding the right way to channel her arousal inward and savor it while presenting to the world a more normalized experience of nudity, respectful and controlled. Even showing herself nude in front of her own family was a thrill. Not a sexual one, per se, but the thrill of empowerment, of defiance of shame, of strength and resilience in a world of sexual objectification.\n\nBut there was still a deep thirst lingering in the back of her mind. It had a name: Dan Watts.\n\nAll at once the audience was rising and beginning to leave, carrying with them a cacophony of voices. Kate found them to be amused, scandalized, and excited. Personally, she felt victorious. Peeking out, she watched her family packing up and filing out of the row. At first, they said nothing and she became nervous, then she saw her mom turn back and say something to her father. He nodded enthusiastically and his expression suggested that he was impressed, despite any discomfort he had felt. She breathed a sigh of relief. Kate hoped that they'd enjoyed it so much that they'd even forgotten their daughter was naked the whole time.\n\nIt was one thing to see your child perform naked on stage but another one entirely for her to have come out and see them off personally. Surprisingly, that's exactly what some of the other performers did. Kate watched them interact with their own family and friends with complete confidence and no shred of shame about remaining in their birthday suits. She wanted to be like that someday. Maybe she would, the next time around. For now, she watched her family and friends leaving, knowing that it wouldn't be until the following day, at the very least, that she'd confront them again and discuss what they had seen.\n\n***\n\nBackstage, it was an ebullient affair. Gwen arrived with sparkling wine, cheese, crackers, and a bowl of fresh strawberries. The entire cast scrambled to the table, energized and ravenous. Gwen toasted them.\n\n\"Go easy on the wine!\" she had joked, \"We've got another packed house tomorrow night!\"\n\nFor a long time, they celebrated together until finally it grew late and most of the cast members began to leave to get dressed and head home for a good night's sleep. Kate and Dan, however, were still riding a high, fueled by their first performance together as well as plenty of sparkling wine. As much as they enjoyed reviewing how the first performance went, Kate felt that they were circling the elephant in the room. However, Dan finally mentioned Kate's little faux pas as if he'd been thinking about it all evening.\n\n\"So...\" he began, cautiously. \"You certainly added some flair to the morning wood scene tonight...\"\n\n\"Oh my god,\" Kate groaned, hiding her face from him.\n\nDan chuckled. \"I take it that wasn't planned...?\"\n\n\"No...\" she whimpered, slowly venturing to meet his eyes again in a full display of her embarrassment. \"At first I was jazzed with the audience reaction but then it became apparent what I had done, and I saw my mom's reaction...\"\n\nDan seemed mildly relieved that it was just an accident and not something she and Terrance had planned together. \"I don't think it's that big a deal, honestly,\" he reassured her. \"No pun intended.\"\n\n\"I hope so... I need to apologize to Terrance but I don't know how to go about doing it.\"\n\n\"Just be straight with him and let him know it wasn't intentional. I don't think he's feeling anywhere near the level of embarrassment that you are, though.\"\n\n\"Well, at least I gave 'em a show!\" Kate exclaimed.\n\nDan high-fived her, then added, \"I think they'll remember the show you gave them from the moment you stepped out onto the stage...\" Kate grinned at him and felt a rush of endorphins flooding her body.\n\nGwen came by and interrupted them, asking, \"Oh-- Dan, can I entrust you with closing up tonight? Apparently, my son woke up feeling sick and I need to run home to check on him.\"\n\n\"Sure, no problem,\" he replied. She handed him the keys, thanked him, and headed off. \"Well, I guess we should start winding down now,\" Dan added, turning back to face Kate.\n\n\"Yeah, I guess so,\" she said.\n\n\"Do you want to help me close up for the night?\"\n\n\"Sure!\"\n\nTogether they set about doing the evening duties before noticing that the changing room had gone empty. Finding that everyone had left, they did a final walkthrough while reflecting on how the evening's performance had gone.\n\n\"Can we go back on stage before we leave? I just want to stand there one more time and take it all in...\" Kate requested with a smile.\n\n\"Of course,\" Dan said, happy to follow her back out onto the stage, before the wide rows of empty seats.\n\nKate gazed out across the silent banks of chairs which, earlier in the evening, had been full of twinkling, greedy eyes and uproarious laughter. The finality of the evening and all that they had accomplished began to sink in and it quieted her. She sighed and rested her head on Dan's shoulder. Kate felt him looking down at her. His warm breath flowed over her neck. It felt soothing to have his naked skin pressed up alongside her body. Then she felt his fingers slip through her hair and gently pull her closer.\n\nShe knew that her actions were controlled partly by the wine that she'd been gulping down since the moment the performance ended but she didn't care. All of a sudden she had turned to face him, leaned in, and felt the gentle brush of his lips upon hers. Then Kate felt both their bodies relax together and meld, focusing all their energy, excitement, and passion toward a hungry kiss that had been slowly building for weeks.\n\nIt began to evolve as their hands slipped over each other's body, drawing one another closer, crossing the boundaries between performers and turning them into something more. She felt her breasts softly compressing against his hard chest, his curious fingers moving down her back, the firm, muscular contour of his butt as she bravely wrapped her arms around him and grasped him tightly.\n\nSuddenly, Kate felt Dan's body changing; the distinct arrival of his masculine arousal making itself known between her legs where their hips had squared and connected. \"Sorry...\" she heard him whisper.\n\nKate smiled shyly into his neck and said, \"That's okay...\" She slipped her hand down between their bodies until she discovered the long, hard object developing there. As she returned her lips to his, she gently cupped his balls, slid her fingers over his hardened shaft, then slid them back down again, riffing on the brief contact she had made with Terrance during the show.\n\n\"Mmm...\" Dan sighed.\n\nGrinning, Kate took a step back and observed his body. For the first time, she viewed Dan in this new light. His body seemed to have come alive at her touch. Dan's balls were drawn up tightly against his body, swollen and plump. His firm cock expanded into the space between them, becoming elongated and thick, pulsing with excitement. She casually admired it, then gently caressed him again, exploring his robust masculinity from the base to the swollen, bulbous tip.\n\nKate giggled, then turned to face the empty seats, presenting Dan's body to the room. \"Ladies and gentleman, allow me to introduce your erection for this evening,\" she jokingly announced.\n\nDan laughed. He looked out at the imaginary audience and sighed dramatically. \"Not to be a dick about it... but tonight's performance might run a little 'long',\" he added.\n\nThey both burst out laughing. \"We're a couple of first-rate bards, aren't we?\" Kate snickered.\n\n\"You don't have to be such a boob about it,\" Dan joked.\n\nKate groaned with amusement. \"Touch\u00e9.\"\n\n\"Don't mind if I do!\" he laughed, imagining what the word looked like if read as English.\n\nKate giggled and sheepishly thrust her chest forward. Dan accepted the invitation happily, reaching out to caress her breasts in wonder. She felt her stiff, excited nipples grazing his palms, indicating the intense arousal she felt at their playful banter and erotic touches. Being able to imagine standing before an audience only magnified the excitement.\n\n\"Can I tell you something?\" she asked.\n\n\"Sure.\"\n\n\"I'll confess... I was a little turned on. I mean... performing nude in front of so many people...\"\n\nHe grinned at her. \"Obviously one has to learn how not to show it on stage... but yes, there are certainly perks to the job,\" he replied.\n\nKate's excitement continued to grow as he seemed to be admitting the same enjoyment. She wrapped her arms around him again and welcomed him back to her body. Dan collapsed into her chest, burying his face in her cleavage and inhaling deeply within the warm chasm between her soft mounds of flesh. Then she felt his lips and tongue begin to delight her nipples.\n\n\"Ah! How you nurse my bosom-- all men are but aging infants!\" she cried out as if it were a line in the play.\n\n\"The things I would do but for the safety of thy breast...\"\n\n\"But we mustn't! ... Unless...\" she replied.\n\n\"Yes! I would give up my crown for your love!\" Dan exclaimed, choosing a kinky role to play. \"Never has a better bargain been made between lovers!\"\n\nKate skipped away from him, allowing her naked breasts to bounce freely before his eyes in an exaggerated attempt to increase his temptation. Then she pretended to hide her body in shame.\n\n\"We mustn't... we mustn't...\" she repeated. \"It is forbidden...\"\n\nGetting further into the act, Dan lurched forward and thrust his finger into the air with gusto. \"Nay! I wish to die here, a prisoner to your bed, mired in depravity... but awash in the sweetest of honey!\" He threw his hand across his chest dramatically.\n\n\"But I am just an innocent gypsy girl whose home is the wilderness,\" Kate cried out, holding the back of her hand to her forehead as if ready to faint.\n\nDan stood proudly before her, his pronounced erection still thrusting outward from his body. \"And yet, should I not then be familiar to you? Here I stand, in possession of the smoothest of stones, sporting the sturdiest of wood, awaiting thy sweet cherry lips!\"\n\n\"Aha!\" Kate laughed, gleefully eying his brandished manhood. \"Then we shall see! There is no stone that cannot be polished smoother by my wicked tongue!\"\n\nKate charged forward, taking Dan by surprise. She found herself swept up into their erotic parody. Something compelled Kate to confront her innermost desires. Something pushed her into the extraordinary embrace of fantasy, one in which she found herself surrounded by an audience of strangers waiting breathlessly for her to act upon her secret urges before their very eyes.\n\nKate gave in to those urges, assaulting Dan's body and sliding downward until she came face-to-face with the object of her craving. As she gazed briefly at his distended cock, Kate's mind flashed with images of her co-performers' bodies, images of stark, physical masculinity that had haunted her day after day, working their way into her dreams and unraveling her mind.\n\nShe remembered the moment that Josh had so intimately revealed himself to her. The moment she first saw the other men romping about on the stage, their secret assets suddenly pendulate and exposed. The tender session she held with Terrance when he allowed himself to become electrified by her soft touch as she further inflamed his desire with her curious fingers.\n\nDizzy at the prospect of finally being able to act upon her bottled-up desires, Kate grasped for Dan's body, wrapping her fingers around his pulsing shaft and drawing him to her lips. She heard him moan as she plunged him into her mouth, feeling him glide smoothly over her tongue and awaken all her senses.\n\nKate found herself awash in Dan's musk as he pulsed and throbbed against her soft tongue. She drove her head forward and back with a steady rocking motion, relaxing into a smooth rhythm, filling the air with the tantalizing, wet sounds of flesh enjoying flesh. As Dan's legs began to buckle under the growing pleasure, Kate took a firm grasp of his body, anchoring herself and sucking his cock with increasing intensity.\n\n\"Holy... fuck... Kate...\" he gasped, frantically attempting to steady himself against her body as he grew weaker and shaken by the incredible indulgence she caused him to suffer.\n\nAfter a few minutes, Kate withdrew from Dan's cock, letting it bob in the air, agitated and wet. She flashed her eyes upward and took note of his extreme disarmament, then she ran her hands up his body as she gradually rose to meet his eyes. They slowly reopened upon her body and then met her gaze.\n\nKate whispered more sweet, Shakespearian nothings into Dan's ear. \"Drink deeply from my lips, and when those are spent, seek the ones below, for the waters there run deeper still.\"\n\nDan grinned. He moved in aggressively and they began kissing madly. Kate suppressed a gasp as she felt his hand suddenly slipping over her lower abdomen. His fingers reached her soft patch of pubic hair, then slipped into the intimate crevice below. Dan began stroking her pussy as she frantically searched for his tongue, desperate and eager to communicate the electric feelings he sparked throughout her body.\n\n\"Ohh god... Dan...\" she whimpered as she adjusted her stance wider to give him greater access to her slick mound.\n\nPrompted by her plaints, Dan lowered himself down until he could kneel on the floor, face to face with Kate's starkly divulged femininity. Enchanted, he continued to stroke his fingers through her pubic hair and over her dewy labia. Finding her increasingly lubricated, he slipped his fingers into her satiny pink tunnel.\n\nDan seemed surprised at the ease with which his fingers quickly sunk into her body. Kate's body shivered with the sensation of pure pleasure. As he drew his fingers out and then plunged them into her body again, she listened to the softly viscous sound of moist flesh audibly separating. Kate looked down and found him gazing at his own glistening fingers as they exited her body, emerging with fragrant proof of her anticipation and craving. She moaned as she watched him pause for a moment, bring his fingers to his nose, then smoothly suck each finger with enthusiasm, like a greedy child whose hands were still messy from a sweet treat.\n\nKate gazed down lovingly at Dan's handsome face, ravenous with craving and bowing before her body as if in a gesture of worship. Then her eyes darted over his head toward the rows of empty seat cushions.\n\n\"W-wait... Dan...\" she moaned, breathlessly. He quickly looked up, afraid he had done something wrong. \"No one can see... I want them to see what you do to me...\"\n\nDan chuckled then glanced over his shoulder toward a phantom audience. He then helped her to the floor. Kate felt her bare cheeks compress against the hard stage as she plopped herself down. She put her two feet on the floor with her knees up in the air. Dan slowly moved them apart. Kate felt dizzy as she felt the air rush between her legs and over her vulva as it widened before the room. She closed her eyes and imagined an audience there; strangers aroused and delighted by the sight of her unveiled intimacy.\n\n\"Ngh... yes...\" she continued to moan, drunk on the fantasy.\n\nDan slipped his fingers between her legs again, then circled them over her clit with a gentle pressure. Kate began to shudder and writhe in his embrace as they reconnected, mouth to mouth, tongue to tongue. Kate felt herself burning with pleasure, imagining herself messy and exposed for all the world to observe her pleasure.\n\n\"Fuck... yes...\" she mumbled. \"Everyone can... see us...\"\n\nDan smiled at the whimsical fantasy playing out in Kate's mind, her desperate craving to celebrate her sexuality in public, to be desired by so many watching eyes.\n\nHe continued to skate his fingers back and forth over her budding clit and whispered, \"Yes... everyone's watching. They can see how aroused you are...\"\n\n\"Mmm... Dan... You're making my pussy so wet...\"\n\nDan laughed. \"I know! You're such a sloppy mess already. Look at all the poor, helpless guys squirming in their seats... They bought a ticket to pure suffering!\"\n\nLaughing with uncontrolled excitement, Kate suddenly snapped back to reality as if waking from a dream. Her eyes sharpened and she gave Dan a devious look.\n\n\"Oh-- get thee between my legs!\" Kate protested. \"Thy cruel dawdling is like torture!\"\n\nDan reacted quickly, scrambling around one of her raised knees and crawling between her thighs. Kate rose onto her elbows and flung her legs open further, inviting Dan into what she imagined as a humid, Shakespearean grotto, flooded with enchanted waters. He began to sweetly kiss her labia, taking deep breaths in between to intoxicate himself on the intimate perfumes of her body. Then she felt the warm lash of his tongue driving up through her creamy slit, aching for another taste of her body, this time straight from the source.",
        "Kate cried out loudly, finding herself in a state of heightened sensitivity, swimming with visions of wild public sex. The fantasy twisted about in her head until she imagined herself as Phryne again, surrounded by all her gypsy friends; naked and feminine, hairy and wild, oozing with sexuality and power. She imagined a throng of innocent men from Bracciano, having wandered into the forest, their clothes freshly torn off by her clawed hands, their stiff phalluses overwhelmed with the sight of the gypsies' unrestrained sexual prowess.\n\nShe imagined Dan was one of those men, buried between her legs as a groaning orgy erupted all around her.\n\nShe imagined being on the stage again. Brittany and Nicholas were fucking. Paige was riding Josh. Jenny was helping herself to Terrance's delicious, shiny cock. The sights and sounds of raw, uninhibited lust flashed through her mind, as did the expressions of a shocked audience, sitting there with painful bulges in their pants or hardened nipples poking at their shirts, scandalized and delighted by an imaginary, choreographed cornucopia of sex devised to spice up the performance.\n\nKate laughed out loud at the thrill of her own fantasy. She scooped up her breasts and squeezed them, throwing her head back and groaning as she played with her nipples. Suffering the delirious enjoyment of Dan's efforts, she felt herself virtually losing a sense of what was real and what was pure imagination.\n\n\"Ngh... yeah... eat my pussy...\" she whimpered as Dan's appetite grew more voracious. He sucked at her labia, circled her clit and flicked his tongue over it as he continued to work her into a frenzy with his playful tongue. She discovered herself to be absolutely soaking, so much so that the floor beneath her felt damp.\n\n\"Jesus... you're coming so much...\" Dan said out of bewilderment, his face and hands now thoroughly coated in Kate's juices.\n\nKate continued to whine with pleasure as she listened to the wet, squelching sound of her body. She imagined that the people in the front row could hear her body's liquid delight, that they would suddenly experience a phantom savory taste on their lips, a distinct feminine odor wafting past their noses, swept up into her beautiful anguish as if they were participants themselves.\n\nUnable to take anymore, Kate blurted out, \"Dan... I want them to see us fuck...\"\n\nKate quickly laid down on the floor with her head near the edge of the stage. She watched Dan face the audience, reaching down to clutch at his fiercely erect cock with a trembling hand. Kate wrapped her legs around his body, ensnaring him between her limbs and drawing him closer. Dan frantically angled his penis at the entrance of her vagina, then rubbed his thick cockhead back and forth through the loose flesh of her labia.\n\n\"Do it... I want everyone to see you penetrate my body...\" she continued, struggling to form words.\n\nFinally, Dan eased his cock forward, driving it snuggly into the innermost reaches of Kate's body. Her head rolled from side to side as she sharply inhaled, listening to his deep, guttural groans. She lifted her head briefly, anxious to view their interconnected bodies. She watched her own, fuzzy labia splitting wide, the flash of bright pink, his thick shaft forcing its way deep into her body as his swollen cockhead tunneled its way to her core, forcing her to expand and stretch to maximum capacity.\n\nDan quickly began thrusting forward and back, gazing down at her body in wonder as it eagerly received him. Soon he was sweaty, grunting, and frantic with desire. Kate was driven wild by the distinctly heady scent of his arousal as he fucked her, mixed with the familiar scent of her own body. She imagined the audience watching them, passionately entwined, full of sexual vigor and excitement. It was wild, aggressive, and scandalous. In her head, they were still performing a show for an entire crowd of curious onlookers.\n\n\"Fuck! Fuck!\" she repeated, feeling his body pounding against hers, his hard cock slipping through the slick, creamy tunnel of her body. She reached down and began rubbing her clit furiously to heighten the sensation. The sight of her own breasts jostling back and forth on her chest drove her wild if only because she imagined the tantalized men in the audience watching them bounce and sway.\n\n\"Dan-- I'm coming!\" she cried out, arching her back in agony.\n\nHe groaned loudly at the sensation of her body quaking with a sudden orgasm. Dan seemed to be exerting himself so frantically that exhaustion already began to set in.\n\nAfter recovering, Kate threw him off her body and wrestled him to the floor with a mischievous grin. She quickly climbed onto his body, grasping for his upright cock and guiding it to the entrance of her body. She sunk her hips down and felt him fill her once again. With a firm scooping motion, she began to rock her hips forward and back, easing into a steady rhythm.\n\nDan observed Kate's wide grin as her eyes darted back out over the room. Now completely in tune with what lit Kate's fire, he joked, \"Shakespeare was right-- all the world's a stage and we are quite the players!\"\n\nKate laughed happily at his corny joke. She threw her hands behind her head and opened her elbows wide, presenting her chest to the room. \"Alas, I may look like an innocent flower, but there be a serpent under it!\" She shook her chest, sending her breasts into a spirited wobble as if attempting to hypnotize the room with the playful dance of her pink nipples.\n\nExcited by their merriment and emotion, Kate began riding Dan faster, thundering up and down on his swollen cock with glee. Alternating between Dan's eyes and the swath of seats, Kate resumed scanning the room, pretending it was still full of anxious, straining, aroused bodies unable to do anything to relieve their secret excitement. When she reached the seats that had been occupied by her family, she quickly replaced them with some of her old school friends; guys she suddenly wanted to be sitting there, watching her being fucked, jealously imagining being in Dan's place.\n\nShe imagined them watching her joyously bouncing breasts as her body rebounded off Dan's. She imagined their eyes affixed to his steely, upright cock, dripping with her cum, driving upward through her tight, pink hole that stretched wide to receive his enormous girth.\n\nThey fucked passionately, Kate anxious to maximize the intense pleasure from Dan's aching member, Dan frantically coaxing his hips against hers in an attempt to do the same. He reached up and grasped at her quivering, full breasts, warm and full of intrepid animation.\n\n\"Ugh... Kate... I can't... I'm almost there...\" he eventually began to groan.\n\nKate threw herself off him with excited anticipation. She sat on her knees, alert with anticipation as she watched him suddenly begin to stroke himself.\n\n\"Come in my mouth!\" she exclaimed. \"I want everyone to watch you come for me!\"\n\nDan rose to his knees and thrust his cock forward. Kate lunged for it and took him back in her mouth. She began to suck him furiously, running her hands over his muscular glutes as she plunged him deeper and deeper.\n\n\"Nggh, Kate... Shit... Kate!\" he exclaimed as she worked him with desperate vigor.\n\nThen she heard a long, deep groan rent the air. All of a sudden, Dan exploded in her mouth. As if she had released a valve, Kate felt a warm flood of semen dart across her tongue and shoot toward the back of her mouth. Another warm jet launched from his cock, and another. She felt him spasming with pleasure over and over as he continued to groan and squirt wildly, emptying himself with desperation into the wet cavity of her mouth. She swallowed eagerly, enamored and fascinated by his forceful emissions and the intimate pleasures that had inspired them.\n\nDan fell backward to sit on his knees and then leaned back onto his hands. His chest swelled and contracted rapidly as he tried to catch his breath, still dizzy from the intense crisis his body had just suffered. Kate wrapped her arms around him and laughed. He squeezed her tight and then moved to the edge of the stage. Exhausted and spent, they sat side by side to catch their breath and process the wild venting of erotic energy that had just taken place.\n\nFor a brief moment, they sat there glassy-eyed and still provoked by their own unexpected boldness. An abrupt and staggering silence surrounded them in the barren room, given the raucousness of their recent activity.\n\nThen... out of the blue, a slow clapping emerged from the shadows on the far side of the theatre.\n\nA few more unseen hands began to clap, sending a small flurry of applause rattling off the walls.\n\nKate gasped and stood up, flush with horror and squinting toward the back of the room. She felt like she had that vicious spotlight on her, obscuring her vision. Surprised, Dan also hurried to his feet and cast a bewildered look across the room. The two of them gawked at the sight of a shadowy figure stepping gradually out of the shadows beyond the fleet of empty seats. It ambled into the aisle, rapping two hands together with a certain sadistic glee.\n\nMoments later, Jenny's familiar figure came into view as she waltzed down the aisle with a smirk on her face. Her curvy, naked body moved with a devilish sass. Even her breasts, with their swollen, thick nipples seemed to exhibit a kind of mirthful swagger.\n\nJosh and Terrence emerged behind her, each of them clapping, their faces flooded with a sense of wonder and disbelief. Kate looked down and discovered them both to be at the peak of physical arousal, seemingly unashamed at the fact that their engorged penises wavered stiffly before their bodies, side by side, as they approached the stage.\n\nJenny skipped forward and clasped her hands together. \"That - was - fucking - amazing!\" she exclaimed. \"We're going to need to add a sex scene to one of our performances,\" she added with a wry grin.\n\nKate and Dan stared at them in shock. \"How long have you been there?!\" Kate blurted out. \"Did... you see...\"\n\n\"... Everything,\" Jenny said, finishing Kate's sentence. \"We came in to pick up some extra programs but hid when we saw you walk in and start to... uh... you know.\"\n\n\"We were gonna try to slip out, but...\" Terrence added.\n\nJosh interjected, \"Don't worry, we won't tell anyone what you did -- if you won't tell anyone that we had fun watching!\" He began to chuckle.\n\n\"But... we thought everyone had left...\" Kate said, still processing the fact that her friends had seen and heard everything that had just transpired between her and Dan on the stage.\n\n\"Nah, we just went out back for a smoke,\" Josh explained.\n\n\"Naked?!\" Kate exclaimed, still exasperated.\n\nJenny laughed. \"Brittany taught us to prop the fire exit open. It's safe once everyone leaves.\"\n\n\"Jesus...\" Dan muttered.\n\n\"Anyway, thanks for the encore!\" Jenny concluded with a wide grin.\n\n\"Um... you're welcome?\" Kate replied, bashfully. Terrence smirked and turned to leave. He tugged at Jenny's arm as if to suggest that they still ought to offer some privacy.\n\n\"Well, see you guys tomorrow!\" Terrance said, waving back at them as he made his way off to the changing rooms. Josh turned to follow him. Jenny gave Kate and Dan a wink and headed out, seeming pleased with her discovery of their secret tryst, like a teenager who'd just acquired some juicy gossip.\n\nKate stood there stunned. She waited in perfect silence for the unexpected visitors to exit and then threw her head in her hands, whining, \"Oh my god, I'm so fucking embarrassed...\"\n\nDan started chuckling. Kate looked up at him, astonished at his response.\n\n\"What?...\" he asked before giving a shrug.\n\nKate was red and fighting back nervous laughter, prompted by the amusement on Dan's face. \"How can you be so cool about it? The things I said...\" she muttered. \"... what we did...\"\n\nKate thought about all the dirty things that had come out of her mouth, how she had begged for an audience without realizing one was there, how she had flaunted her desires so openly and the aggressive way they had just fucked, believing themselves to be alone. She couldn't believe that their friends had seen everything she and Dan had just done together.\n\n\"Oh - yeah... because it's sooo shocking to think that a member of an all-nude performance company might actually have a little exhibitionist streak in her...\" Dan laughed.\n\nKate was taken aback. An exhibitionist! She'd never considered that before. Suddenly it made a little sense. That word felt like a seed that he had planted in her mind. It began to grow...\n\nDan began to pace back and forth on stage. His eyes seemed electric with activity. His smirk seemed to reveal a wish to relish in that moment of realization of what had just happened. Kate watched him pause at the edge of the stage, standing there proudly, feeling confident in what they had just shared, having no regrets. There he was, profoundly sexy, talented and sharp-witted, eager to embark on wild adventures with her. She felt a swell of emotion inside.\n\nDan contemplated something in silence for a moment, then grinned and announced, \"Well, you know what Shakespeare would have had to say about this...\"\n\nKate looked up at him, a small smirk forming on her face. She knew he was about to say something hilariously corny and stupid. It was already well-established that each was always vying to out-pun the other. Kate wanted nothing more than to be reckless and silly with him, day in and day out.\n\n\"What's that?\" she said, cautiously.\n\nDan chuckled, \"He would have called it...\"\n\n\"... Much Ado About Nothing!\" they shouted in unison as Kate threw her hands up in the air, accenting the gesture with an impish eye roll. They exchanged wicked smiles.\n\nWith nothing left to do but finally abandon her embarrassment and embrace the evening for what it was, Kate tackled Dan with a barrage of kisses.\n\nThe frisky sounds of their affections echoed through the empty theatre and skittered across the walls. Kate closed her eyes and listened, content to receive the quiet reverberations like sweet applause.\n\n***\n\n\"A Nude Troubadours Production\" was submitted to the 2019 Nude Day contest. If you enjoyed this story, please consider voting by clicking a star! Also, remember to check out the other great submissions by your favorite Lit authors. Thanks for reading -- and here's to a Happy Nude Day!"
    ],
    "authorname": "SolarRay",
    "tags": [
        "being watched",
        "cfnm",
        "embarrassed",
        "enf",
        "exhibitionism",
        "exposed",
        "female exhibitionist",
        "public nudity",
        "voyeurism"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-nude-troubadours-production"
}