{
    "title": "Lisa Ch. 08c: Evil",
    "pages": [
        "\"Maybe we should all have a pill.\" Angus said observing Jessica with a calmness he didn't feel. She was terrified. Absolutely terrified. \n\n\"Maybe.\" Jessica agreed. \"Sean and the others.\" She began when silence had dragged on for too long, \"Should leave. I know it's not fair to you ... it decreases our odds of fighting Earl, but Earl will follow the boys. If Sean and everyone else go back home now Earl will never even know to look for them.\" She looked around at the men as the suggestion sank in, \"There would be less of us to protect the boys though. I don't know what's better.\"\n\n\"I've never seen you so worried about something Jess.\" Jim said.\n\n\"If we were dealing with Daryl or Paul, or anyone whose only interest was in having a gunfight,\" Jessica shrugged, \"It would be easy. But Earl. He doesn't come to kill, he comes to capture, and torture. I mean, poisoned wells and gassing? How can you ever be sure you've accounted for the right things ... or everything?\"\n\n\"You and the boys should go with Sean.\" Riley said.\n\n\"No!\" Jessica almost yelled, bolting up on Josh's lap. \"I'm staying with you no matter what. Please ...\" she said looking around at the men, \"Please don't ever even consider sending me away for any reason. Please.\"\n\n\"Okay, okay Jess, shhhh, it's okay.\" Josh said in a soothing tone and pulled her back against him. She looked between Riley and Angus. \n\n\"Promise me!\" she demanded.\n\nIt took a few minutes but eventually they nodded. Relief had her collapsing against Josh.\n\n\"But the boys, I don't know. I want them as far from danger as possible but if Earl is chasing them he'll chase them to Sean's place. I think we can limit the number of people who get hurt if we keep the boys with us.\"\n\n\"Okay.\" Riley said, \"I'll talk to Sean about it.\"\n\n\"And I think we have to learn more about Earl.\" Scott said, \"If we want to cover all possibilities we need to know how he operates.\"\n\n\"I'll go through the videos.\" Jim said, \"Here in the studio so no one else needs to hear or see them. I'll start tonight.\"\n\n\"We'll help you.\" Scott said indicating Riley with his head.\n\nJessica shook even harder.\n\n\"I think that's enough for tonight.\" Angus caressing Jessica's head with his hand.\n\n\"Two more things.\" Jessica managed. Her teeth were chattering so hard it was getting hard to understand her. \"The boys have a lot of energy that needs to be directed.\"\n\n\"You don't say ...\" Riley said managing a smile in an attempt to calm Jessica. \n\nJessica smiled back. \"Yes, I do. Working out, training, chores, all help but we should do things with them. Dog training, horseback riding, working on the cars, motorbiking, going to the pond ... definitely going to the pond. They need a chance to be kids again, and have some happiness even for a little while.\"\n\n\"In case things go horribly, horribly wrong?\" Angus asked in a quiet voice.\n\nJessica nodded. \"I was thinking that maybe tomorrow we could go into town with them. Buy them some new clothes. What they have now barely rates as rags.\"\n\n\"That'll make the girls happy.\" Josh said, \"More dolls to dress up.\"\n\nThat brought on some laughter and helped decrease the tension a lot.\n\n\"Was there something else?\" Riley asked but his tone and expression implied that he wasn't sure he could handle anything else.\n\nJessica nodded with a mischievous gleam in her eye. \"Will you sing for me?\"\n\n\"Hell yeah.\" Riley said in pleasant surprise. He looked back at the instruments and microphones.\n\n\"Just here, with me.\" Jessica said motioning Riley, Angus, Scott and Jim closer. \"I want to be close to you. Oh, before that ...\" Jessica said looking at Angus, \"You had issues you wanted to discuss ...\"\n\nAngus nodded. \"But they can wait. They're not that important.\"\n\n\"You're sure?\" Jessica asked.\n\n\"Positive.\" Angus said. \n\nThe men moved as close to her as they could get and sang.\n\nAn hour later Jessica had stopped shaking and they were all more relaxed than they had been in what seemed like days.\n\nWhen Jessica's phone rang there was momentary panic but when Jessica dug her phone out of her back pocket and heard calmness in Leah's voice the unexpected phone call seemed less ominous. \n\n\"Hey.\" Leah said, \"I didn't want to walk in on anything so I thought I'd call. The boys are ready for bed and want to say goodnight to you and the guys.\"\n\n\"Oh, okay, we'll be right over.\" Jessica said.\n\nShe smiled at the men, \"The boys want to say goodnight. You know, if you're going to be out here all night.\" Jessica said to Riley, Scott and Jim, \"maybe the boys should all sleep in the bedrooms. I won't be able to sleep until you come to bed. We can sleep in the living room.\" She looked at Angus and Josh, \"You guys should sleep because of patrols but if a small light won't bother you I'll just do my homework on the couch or something.\"\n\nAngus nodded, \"I think Chris went into town today and picked up extra air mattresses. I think boys were falling out of bed there were so many packed in there. So, I guess you're not planning on taking any meds?\"\n\n\"Give them to the boys. I'd prefer that they sleep.\"\n\nBack in the house it took a half hour extra to get the big mattress out of Jessica and the men's room, blow up the mattresses for the boys and get them all arranged in the rooms. And then Tom kept insisting that Jessica take the med he was supposed to take. The dark rings under her eyes and paleness of her skin seemed to be affecting everybody, But his repeated pleas were met by steadfast refusal from Jessica. Finally Angus had to step in and although he spoke incredibly gently ... for Angus, the affect was immediate. With a 'yes sir, sorry sir' Tom swallowed the pill and went to bed.\n\nAngus smiled when Jessica rolled her eyes at him, \"I guess being scary has some advantages.\" She said. \n\n\"Scary? Me?\" Angus asked with such a great mixture of mock innocence and hurt that Jessica slid into his arms and laughed into his chest.\n\nScott and Jim went on patrol and to no one's surprise Jessica went for a shower.\n\nDespite feeling guilty about hogging the shower for so long, Jessica stood under the boiling hot water for at least half an hour. When she finally made her way back into the living room she was shocked to see that all of her men and the others were quietly waiting, getting up when she arrived. No one was on patrol which brought immediate panic.\n\n\"What happened?\" Jessica asked.\n\n\"What happened,\" Sean said, \"Is that Riley just finished bringing us up to speed on your conversation in the studio. We appreciate you looking out for us ...\" he said sweeping his eyes around the room, \"But there's no way in hell that we're leaving you, the men and the boys to deal with Earl. No way.\" \n\nSean's tone was forceful. He was clearly angry that she'd suggest such a thing.\n\n\"No, don't say anything.\" Sean continued, \"I know you can't help yourself, it's your nature, it's you. But if we're really a family like you say then you have to stop looking out for everyone else and start letting us look out for you. You said that family members, this family's members don't kill one another. Leaving you on your own against Earl would be the same as killing you ... or worse. So none of us, me or anyone else here ...\" he said looking around again and when Jessica did also she was sad to see that everyone looked mad at her, \"are going anywhere. Now or ever. Is that clear?\" Jessica nodded and felt tears coming to her eyes. Her men stood off to the side and seemed to be in agreement with Sean.\n\n\"Good.\" Sean said but his voice wavered. Jessica wiped her eyes and worked hard to not cry. Sean looked around the room. He hadn't intended on making Jessica cry and it seemed that seeing Jessica so upset was diminishing everyone's resolve. Even his was starting to go, but they'd agreed that an impression had to be made. She was too quick to sacrifice for everyone but herself and given how things turned out with Daryl the consequences of such a sacrifice with Earl were beyond what any one of them could handle.\n\n\"Sean, isn't that enough?\" Leah asked when Sean looked back at Jessica and it was clear that Sean had no intention of letting it go. \n\n\"I don't know Leah. You know Jessica as well as we do, do you think it's enough?\"\n\nLeah grabbed some tissues and went to Jessica. Lifting her face she wiped Jessica's eyes. \"What Sean is trying to make very clear.\" Leah said, \"Is that we're all in this together. All of us. Do you understand?\"\n\nJessica nodded. \"I'm sorry.\"\n\n\"You better be.\" Abe said. Jessica looked up at him in surprise. He looked at Jessica like he wanted to strangle her and like he wanted to say more but instead he shook his head and turned away in frustration.\n\n\"On the upside, your other ideas were great.\" Corey said.\n\n\"Even the one about the cyanide.\" Mark said.\n\n\"But especially the one about going shopping tomorrow.\" Sara said in a light tone, going to wrap an arm around Jessica.\n\n\"Yes, that's my favorite too.\" Justine added.\n\n\"Do you think they have anything pretty for boys?\" Amanda asked and succeeded in making Jessica laugh but only for a moment.\n\nJessica cast furtive glances at Sean not sure what to say, if she was allowed to say anything. He studied her at the same time and finally sighed.\n\n\"No more hair brain ideas okay?\" he asked.\n\nJessica nodded.\n\n\"I'll take patrol.\" Abe said heading for the door.\n\n\"I'll join you.\" Chris said casting a 'don't ever do that again' look at Jessica as he followed Abe out the door.\n\n\"How about some warm milk?\" Leah asked, rubbing Jessica's arms. \"I'd offer something stronger but honey you just don't look like you could handle it.\" She said gently tilting Jessica's face up by her chin.\n\n\"Milk is great, thanks.\"\n\n\"Come sit on the sofa.\" Justine said directing her toward the sofa, \"I have some catalogs we can look through for some ideas for boys clothes.\"\n\n\"Back in a second,\" Justine said once Jessica settled on the sofa. \n\n\"Are you okay?\" Riley asked. Jessica looked up as Riley sat beside her, Angus on the other side, Josh, Jim and Scott crouching in front of her.\n\nJessica nodded. \"I didn't mean to make everyone mad.\" Jessica flicked her eyes up and saw the remaining people in the room watching her.\n\n\"We know. They know.\" Scott said, \"But now you know where everyone stands. You can stop trying to protect everyone.\"\n\n\"They're not mad at you Jessica,\" Jim added when Jessica looked sad and kept stealing glances at everyone, \"They're ... disturbed that you'd think they would actually opt to run away and leave us to defend ourselves. And it's good that they are because it proves that they are truly committed to us. So don't be upset. They'll get over it soon enough.\"\n\n\"I wasn't trying to insult anyone.\" Jessica said to the others in the room suddenly realizing that they may have took it as an indication of what she thought of them. She looked at Sean, Corey, Rick, Mark, Don, Caleb, Quinn, the girls and wished that Abe and Chris were still in the room. \"I don't think that you'd abandon us, not at all and I'm so sorry if that's how it came across. I was just trying to minimize the damage. I know you'd do anything for us. You already have, helping us after Daryl, the fight with Anthony ... I have no doubt in your commitment. I just want you to be safe. That's all.\"\n\n\"It's okay Jessica.\" Sean said moving between Riley and Scott who stood to make room. Sean crouched down to be eye level with her, \"We know that's not what you were thinking. We know exactly what you were thinking and we appreciate that you care that much about us. But we care about you too and we're big boys and girls. We're not in accidental danger. We've chosen this, just like you have. Every last one of us. Between your men and us, we outnumber you by a lot. Not only physically but with experience. So stop trying to protect us.\" Sean couldn't say this next part without smiling, \"And make it easier for us to protect you, okay?\"\n\nJessica nodded and was pleasantly surprised when Sean cupped the back of her head and pulled her forward for a kiss on the forehead. Letting her go he searched her eyes for a moment, grunted with satisfaction and got up.\n\n\"So we're going to review the videos?\" he asked Riley.\n\nRiley smiled at Jessica when she glanced at him still clearly surprised by Sean's kiss.\n\n\"Yeah. We can setup in the studio.\" Riley said to Don. \"We should take notes, bring paper and pens.\" And in a flurry of activity the living room was empty except for Angus, Josh and the girls.\n\n\"Here's your milk,\" Leah said handing Jessica a steaming mug of milk, \"Do you two want some too?\" she asked Angus and Josh.\n\n\"No, thanks.\" Angus said, \"I'm going for something stronger.\"\n\n\"Me too.\" Josh said. Both kissed Jessica and headed to the kitchen.\n\n\"Okay, I have a million magazines.\" Sara said settling beside Jessica with an armful of magazines. \"And conveniently ...\" Sara said as Leah, Justine and Amanda settled around her and Jessica, \"They're not all for boy clothing.\"\n\nHours passed. Angus and Josh rotated out on patrols. The girls finished with the magazines and moved on to homework and reading.\n\n\"What's wrong Jess?\" Amanda asked when Jessica kept looking toward the door.\n\n\"They've been up there for so long. We should take them some food.\" Jessica said getting up.\n\n\"I've got it.\" Leah said heading to the kitchen.\n\n\"I'll help.\" Justine said.\n\nAngus and Josh came in from patrol. Jessica's heart dropped. They looked so tired. It was three in the morning, definitely time for bed. She met them at the gun rack as they were putting away their rifles.\n\n\"Jess ...\" Josh said as she slipped into his arms. He pulled her close and kissed the top of her head.\n\n\"Leah and Justine are going to take some food to the studio and then I think we should go to bed. You guys are exhausted.\" She added, leaning back to cup both Josh and Angus' faces in her hands.\n\n\"I won't argue.\" Angus said, eyes drooping.\n\nSara and Amanda said good night and moved down the hallway to the bedroom they were sharing with Sean and Corey.\n\nWhile Leah and Justine took the food to the studio Jessica, Angus and Josh setup the mattress and Jessica tucked Angus and Josh in. \"Just need to go to the bathroom.\" Jessica said. When she came back, Leah and Justine had just come in the door.\n\n\"What's wrong?\" Jessica asked when they both looked sick.\n\n\"Those videos ...\" Leah said.\n\n\"You're not supposed to see them ...\" Jessica gasped.\n\n\"They didn't know we were coming.\" Justine explained, \"They couldn't pause it fast enough.\" She fixed her eyes on Jessica's, \"I hope you're right about the prison thing Jessica because those ... those ... animals shouldn't be allowed to live.\"\n\nWith that she slouched down the hallway. From behind it looked to Jessica like Justine's body was sagging.\n\n\"That was a great insult to animals everywhere ...\" Leah said looking after Justine. \"There's no word to describe them.\"\n\n\"Evil?\" Jessica asked.\n\n\"I guess there is. Good night Jess, I hope you can get some sleep.\" Leah hugged Jessica, kissed her cheek and followed Justine down the hallway.\n\nJessica turned off the lights and stood thinking. She highly doubted she'd be able to sleep. Everyone needed sleep so waking them with nightmares wasn't an option. She decided to sit on the sofa and contemplate all the angles to the situation. She ran through everything they knew and tried to determine what they were missing. She thought of one thing for sure that had to be rectified as soon as possible. \n\nJust then the door opened. \n\n\"Jess?\" Riley whispered.\n\n\"Yes?\" she saw the outlines of several people file in.\n\n\"We're calling it a night.\" He said appearing beside her on the sofa. \"Rick, Abe and Mark are going to sleep in the studio. Why aren't you in bed with Angus and Josh?\"\n\n\"I'm not tired.\" She said, \"Really.\" She added when Scott grumbled her name while appearing on the other side of her on the sofa. \"Go to bed, all of you.\" She said leaning back to look at the others, her eyes adjusting enough to be able to guess who was who. \"I can help with patrols if someone wants a break.\" \n\n\"No way.\" Chris said leaning forward to try and see her better, \"Patrols are fine and we're so tired we could sleep through a nuclear war. Your nightmares won't be a problem Jessica, go to bed.\" Planting a kiss on her forehead he stumbled toward the hallway. \n\n\"Night Jess.\" Sean said, kissing her forehead and following Chris. Don, Corey, Caleb and Quinn did the same.\n\n\"You heard them. Let's get to bed.\" Jim said scooping Jessica up and carrying her to the mattress. Within a few minutes they were all arranged and asleep. But not even half an hour later the nightmares began. This time they weren't restricted to dreams related to the battle with Anthony. Now they included all of her loved ones being killed, or worse, sexually tortured by Earl and his clan. Not ever completely waking Jessica was vaguely aware of people coming and going at intervals for patrol. \n\nBy the time ten o'clock rolled around and everyone was getting up for training Jessica was practically delusional. She tried to drag herself out of bed.\n\n\"No.\" Jim said firmly, \"You and I are staying here.\" But Jessica wasn't in her right mind. She just kept trying to get up.\n\n\"She's sleep walking.\" Caleb said, \"She can't hear you.\"\n\n\"Jessica!\" Jim shouted when she nearly made it out of bed. He grabbed her and shook her which led to a tears and protests from the boys. \"Get them out of here.\" He barked at Riley.\n\n\"Let's go, come on.\" Riley started herding the boys out. It took a person on each boy to finally shove them out the door, \"Jim's not going to hurt her.\" Riley kept saying. \"She needs sleep. In a couple of hours she'll be her old self, just wait and see.\"\n\nAlone, Jim wrestled Jessica onto the bed, wrapped his arms and legs around her so she couldn't move and held tight. After a few minutes of struggling Jessica fell to sleep and slept for two straight hours.\n\n\"Feeling better Jess?\" Scott asked. Jessica was at the table eating when he came in and kissed her.\n\nShe nodded. \"Where is everyone?\"\n\n\"Riley's hosing them off.\" Scott said just as a chorus of protests and screams intermingled with laughter erupted from outside. \"We want to go to the pond later but figured that we should make the run into town first. Those boys are pretty good fighters.\" He added dropping into the seat beside her.\n\n\"Yeah?\" Jim asked from his seat on Jessica's other side.\n\n\"Need some towels out here ...\" Riley said poking his head in the door.\n\n\"Got it.\" Jim said and went to the bathroom.\n\nJessica and Scott went outside to see everyone except Riley dripping wet.\n\n\"Jessie!\" Brett yelled when he saw Jessica. He and Nathan hurled themselves on her getting her wet but laughing.\n\n\"Guys, you're drenching her.\" Don said but didn't interfere when it was obvious Jessica didn't care.\n\n\"Are you better?\" Nathan asked peering up at Jessica.\n\n\"Yes, tons.\" She said bending down and kissing the top of his head, and then Brett's.\n\n\"Are we really going to town?\" Reese asked.\n\nJessica nodded. \"Better dry up fast so we can get going.\" She said when Jim showed up with the towels.\n\nIt took a few chaotic hours to finish their business in town. And then a tense hour at home explaining the cyanide pills. It was clear that the boys were not willing to entertain the notion of failure. But after admitting that the adults in their own clan were over powered time and again by Earl, the boys began to appreciate the little pills that they were to carry in their pockets a lot more.\n\n\"But you only take it if you're certain, certain that Earl has you and there's no way out.\" Jessica said for the thousandth time. And the boys nodded for the thousandth time.\n\n\"And if Earl comes, you do what?\" Jessica repeated also for the thousandth time. \n\n\"Run away ...\" the boys droned. The adults exchanged glances. It was ironic that Jessica was the one trying to hammer it into the boys. ",
        "\"Well, one things for sure.\" Rick said when Jessica took a bathroom break, \"She can dish it out. Too bad she doesn't listen.\" \n\nThere was a general murmur of agreement from the adults. \n\nReturning Jessica looked around. \"Something that we learned from our Anthony adventure is the need for some code words.\" \n\n\"Funky chicken sauce with duck isn't sufficient?\" Corey asked which led to a round of laughter from the boys. That caught everyone by surprise. The boys generally refrained from laughing.\n\n\"It's okay.\" Jessica said, \"But I think we need something more refined. Something that differentiates between the need for help and the need to run.\"\n\nThey played around with some ideas for a while but weren't getting far quickly.\n\n\"When can we go to the pond?\" Max finally asked.\n\n\"Right now.\" Riley said. \"Go change.\" The boys ran to the bedrooms, anxious to try on their new swimming suits. \"We'll work on the code words at the pond.\" He said. \"And ladies ...\" he added when the adults started to disperse to change as well, \"I think you should all stick to shorts and t-shirts as your bathing suits. I don't think those bikinis are appropriate around a bunch of boys, especially teenage boys.\"\n\nNo one argued that.\n\nIt wasn't long before there was a screaming mass of people in or around the pond.\n\nIf the code words had elicited a bit of joy out of the boys the pond found the rest. For the first time ever they looked and acted like kids. They loved being taught how to somersault into the pond. Speeding down the slides was a hit too. Between the exertion of fooling around, the hot sun, and the lack of sleep Jessica began to drag.\n\n\"What's wrong?\" Jessica asked in surprise when Scott scooped her into his arms.\n\n\"You and I have a date with a lawn chair and the sandman.\" Scott said.\n\n\"I'm okay, really.\" Jessica began to protest.\n\n\"No you're not.\" Scott said, \"I think the only way you're going to get any kind of sleep is taking cat naps here and there. When you're ready to drop, like you are now, you need to sleep. You usually get a solid couple hours out of it.\"\n\n\"Okay.\" Jessica muttered unable to fight the fatigue that was already consuming her. By the time Scott got her to a lawn chair she was already asleep.\n\n\"You can sleep too.\" Mark said to Scott having followed him and Jessica, rifle in hand. \"I'll keep an eye out.\"\n\nScott nodded and passed out too.\n\nWhen they woke up, Abe brought out some sandwiches, fruit and beverages. All the adults skipped the usual alcohol and stuck to bottled water or pop.\n\n\"I was thinking about the code words.\" Rick said while they ate. \"And I think we should stick with funky chicken sauce. We already know it, the boys find it hilarious so they won't forget it.\" And the boys erupted into another round of laughter to prove the point. \"We could say funky chicken sauce if he need help, funky chicken hold the sauce if we want people to run. It's the easiest thing we could do.\"\n\n\"And if we need to forget the whole pig plan we could say 'funky chicken sauce no bacon'.\" Angus said.\n\n\"Pig plan?\" Jessica asked.\n\n\"With the cops.\" Angus said, \"If we should kill Earl then say no bacon, if we're tasering him, then 'funky chicken with sauce and bacon'.\"\n\n\"Oh.\" Jessica said finally getting the gist of what they meant when everyone else was laughing hysterically.\n\n\"Get it, cops, pigs?\" Leo asked doubling over with laughter.\n\n\"I get it.\" Jessica said but truly failed to see why everyone found it so funny.\n\n\"Can we go swim again?\" Erik asked as soon as they were done eating. But none of the boys waited for an answer before barrelling down to the pond and jumping in.\n\n\"They're going to get cramps.\" Amanda said.\n\n\"They'll be fine.\" Quinn said while wrapping an arm around her.\n\n\"Okay, well when they cramp up and sink to the bottom of the pond you can go save them.\" Amanda said semi-seriously.\n\n\"They won't drown Jess,\" Caleb said when Jessica looked toward the boys with concern, \"Probably not that funny ...\" he added looking at Amanda and Quinn.\n\n\"We were just joking,\" Amanda said and took Jessica's hand in reassurance.\n\n\"Oh, okay.\" Jessica said but she was pretty sure that her parents used to warn her about cramps when swimming too soon after eating. \"Now that they can't hear us.\" She added nodding at the boys, \"What did you find out from the videos?\"\n\nThat wiped the smiles off of everyone's faces.\n\n\"It seems that the guesses about drugs, gas and other means of subduing the adults was right.\" Jim said. \"In a lot of the videos the adults and even the kids sometimes, seem drugged.\"\n\n\"We asked Tom and Leo this morning and they confirmed that often they were drugged somehow. Gassed a few times.\" Scott said, \"sometimes they used needles, stun guns. But sometimes ... I don't know, sometimes the adults looked completely normal.\"\n\n\"It was like Earl was using something else to control them.\" Don agreed. \"They would just let Earl or whomever do whatever to them. No drugs, no restraints, nothing.\"\n\n\"I think ...\" Riley began before clearing his throat. \"I think they made an agreement. To save someone else. In those videos there was almost always some kid made to sit and watch. But Earl and his men never did anything to the kid.\"\n\nScott, Jim, Don, Corey, Sean, Rick, Abe, Caleb, Quinn, Mark and Chris were all nodding agreement.\n\n\"And that was odd because Earl definitely had a thing for kids. Always going on about how they were virgins and how he, or sometimes their father's or brothers were going to teach them what it was to be a woman ... or a man.\"\n\n\"Jess?\" Angus asked when she suddenly fell into him and pressed her face against his chest. \n\n\"You can throw up if you need to.\" Josh said rubbing her back, \"I think I'm going to.\"\n\nJessica shook her head. \"I'm fine.\" She said sitting up. \"Keep going.\"\n\n\"We won't withhold anything from you Jessica, even if you puke.\" Sean said when Jessica was clearly struggling to look in control.\n\n\"As much as we'd want to.\" Josh said quietly.\n\nJessica nodded and started turning green.\n\n\"You know, we've heard your oath.\" Quinn said, \"And you've made the whole truth and trust thing abundantly clear to all of us. Even though we haven't formally made that oath to one another I think we're all living by it and although our instinct is to protect you ... protect each other, we won't lie to you. If you want to know all the horrible details we'll tell you.\"\n\n\"Even if it keeps you up screaming all night.\" Angus said.\n\n\"So go ahead and puke.\" Corey said.\n\nSo Jessica did. She just barely had time to turn away from Angus and projectile all over the ground. Leah knelt beside her rubbing her back while the vomit kept coming and then the dry heaves.\n\n\"I'll get her some water.\" Riley said going to the pool house.\n\n\"Is she okay?\" Elliot asked beating the other boys to move around Angus and the lawn chair and watch Jessica wretch.\n\n\"She will be.\" Angus said.\n\n\"Can I?\" Elliot asked when Riley arrived with the bottle of water. He didn't wait for an answer. He grabbed the bottle from Riley crouched down in front of Jessica and lifted the bottle to her lips. \"Here Jessie ...\" he said, \"I mean ma'am ...\" he stuttered clearly embarrassed.\n\n\"Jessie!\" Brett yelled at Elliot. \"It's Jessie!\"\n\n\"Jessie is perfect.\" Jessica managed after a few mouthfuls of water, \"I like it, okay?\" she asked Elliot who, though bright red, nodded. She looked at the other boys and they nodded too. \n\n\"We have a ton of things to do back at the house.\" Riley said, \"We should head back.\"\n\nThe initial groans from the younger boys were silenced by elbow jabs from the older ones. Jessica saw Tom inclining his head toward her and understanding settling on the other boys' faces.\n\n\"I'm fine.\" Jessica said looking around. \"Really. We don't have to leave.\"\n\n\"Yes we do. But we'll come back tomorrow.\" Angus said. \n\nA flurry of activity got everything packed up. No one argued when Jessica insisted on helping but to her chagrin things kept disappearing out of her hands. Anything she touched someone would swoop by with a 'got it' snatch it from her and leave. By the time they were on the horses riding back ... the boys double riding with the adults, Brett and Nathan arguing about riding with Jessica, Jessica had essentially helped with nothing.\n\nBack at the house they did chores, Jessica finally giving up on even trying to help. She had to settle for keeping everyone company. After the chores were done there was still enough time for some fun. So Riley went to train the dogs, taking a few boys with him, Angus went to work on his car, taking a boy or two as well. Horseback riding was the big draw so the bulk of the boys were with Scott, Jim, Josh and everyone else. Jessica rotate between all three areas, Brett and Nathan glued to her wherever she went.\n\nAs the sun started setting everyone headed back to the house. Angus, Jessica, Erik, Chad, Brett and Nathan had just turned to the house when a car pulled in the driveway.\n\n\"Go ...\" Jessica said pushing the younger boys toward the barn. Erik and Chad took them by the arms and started running to the barn. As all the adults started converging toward the car, the other boys ran unwittingly around playing. It wasn't until Paul got out of the car that the boys noticed the strangers, turned around and fled.\n\nThe adults relaxed at the sight of Paul, Mason and Oliver. The absurdity of finding Paul's presence a relief wasn't lost on any of them. \n\n\"What are you doing here?\" Riley demanded.\n\n\"Are those Daryl's kin?\" Paul asked in surprise.\n\n\"Thanks for directing them our way.\" Riley said, \"I repeat, what are you doing here?\"\n\nPaul glared at Riley and seemed to be thinking.\n\n\"Since my phone calls have been ignored I decided to stop by.\" Paul said in a controlled voice, \"Stasia's home and is in the process of healing. She is not quite ready to go in public, but she was hoping that Jessica, oh.\" He stated. On arrival he'd glanced at Jessica but now looking at her more closely he was thrown off by her appearance. Dark rings under her eyes, pale, she even looked thinner than before which he thought wouldn't have been possible. \"Are you sick?\" \n\n\"She's ... tired.\" Angus replied. \"You should go, she needs to rest.\"\n\n\"I'll send Doc.\" Paul said clearly disturbed by Jessica's appearance.\n\n\"Okay.\" Riley said, \"But you should go.\"\n\n\"Jessica, Stasia really wants to see you and thank you for everything you've done for her.\" Paul said.\n\n\"Send her over when she's ready.\" Jim said.\n\n\"Alone.\" Josh added.\n\nPaul looked around at everyone, their tension very apparent.\n\n\"When I call, answer the phone.\" He said and got into his car.\n\nWatching Paul drive away Sean said, \"I think Earl just found us.\"\n\n\"What?\" Jessica demanded and looked like she was going to faint. Angus wrapped his arm around her waist.\n\n\"Paul will tell him that the boys are here, that's guaranteed.\" Angus said.\n\n\"Too bad his apparent fondness for Jessica can't outweigh his greed.\" Abe said.\n\n\"We're too many now, a huge threat to him. He'll have to do something and you may be right Sean, he may go to Earl.\" Riley said.\n\nA moan signified the return of the boys. Brett wrapped himself around Jessica.\n\n\"Hey, we don't know anything for sure.\" Leah said trying to sound upbeat and unworried. \"Let's go get cleaned up for dinner.\"\n\nLeah, Justine, Sara and Amanda corralled the boys into the house, including Brett who finally accepted Jessica's promises of coming in momentarily too.\n\n\"We should double our patrols.\" Corey said. Everyone agreed.\n\n\"How long do you think we have?\" Caleb asked.\n\nSean shrugged. \"Who knows. We'll have to be extra vigilant.\"\n\nAngus swept Jessica into his arms. \"You look like you could use another cat nap.\"\n\n\"I'll save some food for you.\" Abe said, \"Take the nap.\" When Jessica looked unsure.\n\nAngus started heading toward the studio, Jessica still tucked under his arm. \n\n\"I promised the boys I'd come in.\" Jessica said.\n\n\"They'll understand.\" Scott said, \"Get some sleep.\"\n\nJessica had to admit that she was tired. She barely made it up the ladder into the studio. Angus picked her up again at the top and carried her to the sofa. No sooner had he arranged her on top of him on the sofa than she was fast asleep.\n\nAnother two solid hours of sleep resulted in a far more energetic yet starving Jessica. In the house Brett and Nathan were all over her when she ate but she insisted she didn't mind so everyone let them be. After she ate the boys dragged her into the living room.\n\n\"Let's play charades!\" Nathan insisted. \n\n\"Okay, let's make teams.\" Leah said as the door opened and Corey, Don, Caleb and Rick came in. Angus, Riley, Chris and Quinn were getting ready to go out, hoisting rifles on their shoulders.\n\n\"Aren't you lucky.\" Leah said to the men who'd just come in, \"you get to play charades with us.\"\n\n\"Oh yay.\" Corey muttered but laughed.\n\n\"Enjoy,\" Angus said starting to head to the door with Riley, Chris and Quinn.\n\n\"Who picks the teams?\" Erik asked.\n\n\"I get mommy!\" Nathan yelled and threw himself at Jessica, looking up at her with a big smile. It was obvious that he didn't realize what he said but everyone else did.\n\n\"You mean Jessie.\" Reese said quietly.\n\nBrett leaned in to his brother and whispered, \"You said mommy.\"\n\nNathan didn't say anything, just looked at Jessica.\n\n\"You're a lot like our mom.\" Reese said, \"She protected us too.\"\n\n\"Tried to.\" Tom added.\n\nJessica looked around at the other boys, then back at Brett and Nathan.\n\n\"You miss your mommy, don't you?\"\n\nThe boys nodded and tears sprang to their eyes.\n\n\"You know what?\" she said crouching down to eye level. \"I miss my mommy too. All the time. And it's okay. No one can ever replace her though. But I'd love to be something like an aunt maybe, if that's okay?\"\n\nThe boys nodded, \"Aunt Jessie?\"\n\n\"Sure.\" Jessica said. \"Now,\" she said standing back up and looking around. \"Who's picking those teams?\" \n\n\"I'm a captain!\" Erik yelled.\n\n\"I'm the other!\" Elliot yelled. As the boys scrambled to organize themselves Jessica suddenly realized that the adults had been silent and still. As Jessica made eye contact they seemed to awaken and continue on with what they'd been doing. Except her men. They stood staring at her and they looked worried.\n\n\"It's okay.\" Jessica said moving to them, going into Josh's arms, \"They miss their mom, that's all. They'll be okay.\"\n\n\"Well, that's a relief.\" Angus said in a tone that implied it was anything but. When Jessica looked at him in confusion he sighed, \"And how are you?\" he asked in an exasperated tone. \n\n\"Oh.\" Jessica said suddenly realizing how it must have felt for the men to hear her saying that she missed her mom. \"I'm sorry!\" she exclaimed moving into Angus' arms. \"I don't miss her like that. I just meant in general ... you know.\"\n\n\"I know, I know.\" Angus said when she looked up at him . \"Of course you do, I didn't mean ...\"\n\n\"Angus, just get out of here.\" Scott said. Jessica looked from Scott, who looked mad to Angus who looked sad. Angus nodded, kissed Jessica, mumbled \"Sorry.\" And went out the door.\n\nChris and Quinn kind of nodded at her before following Angus.\n\n\"Go kick some ass at charades.\" Riley said pulling her in for a kiss and left.\n\n\"Why were you so mean to Angus?\" Jessica asked turning to Scott.\n\nScott studied Jessica for a few minutes before pulling her into his arms, \"I shouldn't have said that. I'm sorry, and yes, I know.\" He added when Jessica pulled back to look at him opening her mouth so speak, \"I'll go apologize to him right now.\" Kissing her on the forehead he went out the door.\n\nJessica looked at Jim and Josh. \n\n\"The boys are ready to play.\" Jim said, come on.\n\nOnce the game began Jessica relaxed and had fun. The boys seemed to find it incredibly funny to see the adults acting silly. The only person who was laughing as much if not more than the boys was Jessica. The men in particular seemed to really set her off. Every man played, rotating in at different times from patrol, and to see them loosening up enough to cluck like chickens or pretend to be women had Jessica rolling on the floor.\n\nBy the time the boys went to get ready for bed everyone was in a good mood and Jessica was glad to see that Scott and Angus had made up.\n\n\"Sorry about earlier.\" Angus said, pulling her onto his lap.\n\n\"I am too.\" Jessica said kissing him, \"I love you.\"\n\n\"Me too.\"\n\n\"I think I'm going to take a shower.\" Jessica said. \n\nAngus nodded, \"See you in a bit.\"\n\nWhen she came back into the living room the house was silent. \n\n\"They've gone to do some work in the studio.\" Mark said from the kitchen, \"Sorry I didn't mean to scare you.\" He said when Jessica jumped. \"The boys want you to go say good night.\" He added hitching his thumb toward the hallway.\n\n\"Thanks.\" Jessica said and went to say good night to the boys most of whom were already asleep.\n\nWhen Jessica returned to the living room it was still quiet and Mark was walking around in circles, punching on hand into the other.\n\nHe waited until she was sitting on the sofa before moving toward her.\n\n\"We never get any time alone.\" He started before sitting down next to her.\n\n\"That's true, we don't.\" Jessica said, surprise by the realization. \n\n\"Look, I don't have a lot of time.\" Mark said suddenly leaning forward. \"I used to be part of Daryl's clan.\"\n\n\"What?\" Jessica asked, startled.\n\n\"When I was a kid. Before any of these boys' were born or at least old enough to remember me ...\" \n\n\"Oh ... I'm so sorry.\" Jessica said when the pain on Mark's face made it clear that he'd suffered the same fate as the boys. Mark looked at Jessica's hand when she laid it on his arm. \"This must all be so hard for you.\"\n\nMark looked at the door and then back at Jessica, \"The thing is, one of the women that Earl sold got away. She knows where most of the other kids and women are.\"\n\n\"What?\" Jessica said standing. \"We have to tell the others ...\" she started toward the door. Mark moved in front of her and it wasn't until she and he danced around for a few minutes before Jessica realized he wasn't letting her by. \"What are you doing? We have to go talk to her. We can get those people back!\"\n\n\"I know, I know, but only a few people know she's back. She's terrified of being caught. She doesn't want to see just anyone.\"\n\n\"But, she can help ...\"\n\n\"I know. She doesn't want to see anyone but you.\" Mark said.\n\n\"Me?\" Jessica asked, startled.\n\n\"She's heard about you. She trusts you. You're the only one she'll talk to.\"\n\n\"How can she trust me? She doesn't know me.\"\n\n\"I've told her about you. And so have others. Apparently you're getting quite a reputation in the clan.\" Mark said and looked at the door again, \"She'll only see you. Alone, tomorrow. Will you go?\"\n\n\"Of course I will.\" Jessica said just as the front door opened and Angus came in followed by Riley, Scott, Jim, Josh, Abe, Rick, Don, Quinn, Leah, Justine, Amanda, and Sara.\n\n\"What's going on?\" Angus demanded moving to stand between Mark and Jessica.\n\n\"Everything's okay.\" Jessica said taking Angus' arm.\n\n\"The hell it is!\" Angus thundered. Jessica looked between Angus, face red and twisted with fury, and Mark, white as a ghost. He appeared both surprised and worried. \n\n\"Angus please.\" Jessica said moving between him and Mark, \"We were just talking, that's all.\"\n\n\"That's not what it looked like to me.\" Angus growled, flicking his eyes down to look at Jessica for a second before glaring back at Mark. \"To me it looks like you were trying to leave and he was stopping you.\" \n\nMark took a step back and Jessica couldn't blame him. Angus hadn't looked this mad in a really long time. The vein on his forehead bulged, his body was tense, muscles straining to reach out and pound Mark. Judging by the expressions on everyone's face when Jessica looked around for help, Angus' anger seemed to surprise everyone except Mark.",
        "\"What are you doing?\" Riley asked moving closer to Angus. \n\n\"This freak is hassling Jessica.\" Angus growled.\n\n\"Angus!\" Jessica exclaimed in complete shock. \"Mark is part of our family. Don't talk to him like that!\"\n\nJessica's disappointment caught Angus' attention. He blinked down at her for a second before leveling his eyes on Mark again. \"Then explain what was going on.\" He demanded from Mark. \"I thought so!\" he snarled when Mark, unable to answer, looked to Jessica. Moving so fast that no one had time to react Angus picked Jessica up, moved her aside, and punch Mark in the stomach and before Mark could recover Angus punched him on the face.\n\n\"No!\" Jessica and Justine yelled at the same time both moving to step between Angus and Mark, Jessica foiled at the last second by Jim grabbing her by the waist. Jessica flailed her arms and legs as she hung from Jim's arms. Justine made it between Angus and Mark just as Angus pulled back for another punch. \"Mark knows one of the women who was sold by Earl!\" Jessica shouted, \"She wants to tell me where to find the others! Stop please Angus!\"\n\n\"Stop!\" Don yelled, grabbing Angus' fist before he landed the punch. \n\n\"Put me down Jim.\" Jessica begged over her shoulder. Jim hesitated but put her down.\n\n\"Angus listen.\" Jessica went to Angus, pressed against him, rubbing his chest. \"We can find the women and children that Earl sold. We can bring them home.\"\n\nAngus stood staring down at Jessica, trying to catch his breath. Eventually his anger seemed to dissipate a little as he focused on Jessica.\n\n\"Okay, let's go get them.\" He grumbled.\n\n\"It's not that easy.\" Jessica said and explained about Mark's friend.\n\n\"That's convenient.\" Angus growled, \"Only Mark has ever heard of this woman and only Jessica can talk to her ...\"\n\n\"What exactly are you accusing me of?\" Mark demanded his fear suddenly turning into a fury to rival Angus'. Dropping his forearm from where it had been stemming the flow of blood from his nose Mark stalked toward Angus. \"I know you have a problem with me. Ever since you found out about my sexual orientation you've taken every opportunity to let me know exactly what you think of me ...\" Mark thundered, \"But insinuating that I'd hurt Jessica in any way is way out of line. You don't have exclusive rights to caring about Jessica, Angus. There's a room full of people here who have feelings for her, would do anything for her. So don't you dare accuse me of something like that unless you're ready for a real fight.\"\n\nJessica turned, planting one hand on Angus' chest and holding the other to block Mark. But he never got close enough to her, Abe and Don holding him back.\n\n\"Is that true?\" Jessica asked turning back to Angus, \"Have you been mean to Mark?\" As much as she was upset with Angus she was equally upset with herself for never noticing that there was a problem.\n\n\"Yeah, I have a problem with you. It's one thing to be a fag.\" Angus growled at Mark. \"Something's wrong with a man wanting another man's dick up his ass. It's not natural. But at least these two ...\" he said pointing at Rick and Abe, \"keep it quiet. I mean, you can hardly tell they're gay. And, they pick a fucking side and stick to it. How can anyone trust somebody who looks like a ladies man but would just as easily fuck you up the ass than look at you. What you did to Chris was wrong. Just so we're real clear, no one is fucking me up my ass, least of all you. And you're not pulling a fast one on me either.\" Angus added, \"You say you care about Jessica. How do you think dragging her off, alone, to some unknown place to meet a complete stranger, is safe for her? Someone who cares about Jessica wouldn't do that!\"\n\nAngus finally ran out of steam and just stood glaring at Mark, trying to catch his breath. Silence hung in the air. \n\n\"I don't care what you think about me or my sexual orientation.\" Mark said, \"I don't even care what you think quite frankly. But I do care that Jessica knows I would never hurt her. Jessica, \" Mark said ignoring Angus, \"I trust Elsie. I'll take you there and bring you back. I promise to die before ever letting anything happen to you. I just thought ... I knew you'd want to save those people if you could.\"\n\n\"She's not going. No way.\" Angus said. \n\n\"Abe, can you take care of Mark's nose please?\" Jessica asked.\n\n\"No way Jessica!\" Angus repeated more forcefully.\n\n\"Thanks.\" Jessica said to Abe as he went to get his first aid kit. \n\nJessica hesitated before turning to Angus. Angus had steeled himself, to deflect the pleas that he was sure were to come. But she looked so fragile he lost his resolve as well as the anger that had consumed him.\n\n\"Jess, I'm sorry.\" Angus said.\n\n\"Let's go talk in the studio.\" Jessica said, taking his hand.\n\n\"Alone?\" Angus asked. He felt like shit and couldn't fathom how he was going to explain himself.\n\n\"No.\" Jessica said but it was easy to see that she was hurt that he didn't want to be alone with her, \"Riley, Scott, Josh and Jim too.\"\n\nJessica started for the door, pulling Angus behind her.\n\nJessica didn't look around and no one said anything so she wasn't even sure that the other men had followed her and Angus until they got in the studio and she turned around.\n\nAngus was watching Jessica. The other men stood near the entrance, looking between Jessica and Angus.\n\n\"Jess ...\" Angus started, \"I don't know what happened. When I saw Mark and you, I just lost it.\"\n\nJessica moved into his arms. \n\n\"You've always had issues with homosexuality.\" Jessica said looking up at him. \"You've really done your best to deal with Abe, Rick and Mark. It's not fair for us to expect you to be any more tolerant than you have been. I guess not all family members always get along or particularly like one another.\" She shrugged. \"You may not trust Mark, but I do. I do and in truth even if I didn't this opportunity is too big to pass up. Think of all those people that Earl sold. We can direct the police to them ... we can save them. Bring the boys' family back.\"\n\n\"What do the other guys think?\" Angus asked, hoping fervently that the other men would insist on someone else going.\n\n\"What do you think?\" Jessica asked looking past Angus at the other men.  \n\n\"About what?\" Scott asked, \"There're like five things going on here.\"\n\n\"Do you trust Mark?\" Jessica asked.\n\n\"Yes.\" Scott said right away. \n\n\"Without a doubt.\" Riley said.\n\n\"Absolutely,\" Josh said.\n\n\"He saved our asses numerous times during that whole gun battle with Anthony.\" Jim said, \"I trust him completely.\"\n\nJessica nodded.\n\n\"When are you going to ask us how we feel about you going to meet some stranger?\" Riley asked moving closer to Angus and Jessica.\n\n\"I'm not.\" Jessica said watching the other men move closer too. \"Because I know you don't like it. But I have a suggestion.\" Jessica said, signalling the men closer. Soon she was pressed up against part of Angus and part of Riley with Josh's hand in one of hers, and a finger of Jim's and finger of Scott's in her other hand. \"Angus, you said no way. If after you hear my suggestion, you still feel that way, then of course I won't go. Does that sound fair? Angus?\" she prompted when he was the only one to not nod his agreement.\n\n\"What's your suggestion?\" Angus asked in a weary tone.\n\n\"I think you should come with us. Not directly with us.\" She added when the men looked overly eager, \"I don't think Elsie will see all of us. But you could follow us, in case anything goes wrong.\"\n\n\"I don't understand why this woman wants to see you.\" Jim said.\n\nJessica shrugged, \"Mark says she's heard about me. He said the whole clan has.\"\n\n\"Probably that whole thing with Anthony.\" Scott said, \"Everybody probably knows about that. I guess I can see how this Elsie might find Jessica trustworthy.\"\n\nThe other men were nodding, except for Angus who shook his head. \n\n\"Something about this feels wrong.\" Angus said.\n\n\"That's because you don't trust Mark.\" Jessica said. \"Despite the fact that he's proven himself trustworthy over and over again.\" And Jessica couldn't help but remember that Angus had been afraid to be alone with her. \"And Angus,\" she added unable to keep the hurt out of her voice, \"Why didn't you want to be alone with me?\"\n\n\"Oh my God Jess,\" Angus said and the way he was looking at Jessica left little doubt that he was miserable. He pulled her closer. \"I was so mad at myself, afraid of what you were going to say to me. I was afraid to be alone with you.\"\n\nJessica turned to look up at Angus and brought her hand to his cheek, \"What could I possibly say that would scare you so much?\"\n\n\"That I'm not the person you thought I was. That you're disappointed in me, mad at me, don't love me anymore. That's how you were looking at me. Like I'd done something that changed your mind about me.\"\n\n\"Angus, I will always love you. Just like I'll always love Riley, Jim, Scott and Josh. I was taken so off guard. I'm not sure how I missed the fact that there was a problem between you and Mark. I guess I was disappointed in both of us.\" She paused and looked confused, \"But you get along okay with Rick and Abe, right?\"\n\nAngus nodded, \"I guess I don't feel as hoodwinked by them as I do by Mark. What he did to Chris ... it could've happened to any one of us.\" He said looking at the other men, \"by any one of us. We trusted that we were all straight, just like Chris trusted Mark. And then, he wasn't. If Mark had touched me or kissed me like he did Chris, I probably would have killed him.\"\n\nJessica nodded. \"But it didn't happen to you. It happened to Chris and he dealt with it. They seem to be doing okay ... unless there's something else I'm missing. You can't hold that against Mark forever, or define him by it. Like Jim said, he was with us in the woods with Paul and Anthony. He covered us ... you, more times than I could count that night. I know you had a gut reaction, nothing can help those. But maybe if you started being nicer to him on a regular basis, you wouldn't react like that. And as an fyi, Mark used to belong to Daryl's clan. He was abused by Earl and his men just like the boys have been. Who knows what that did to him.\"\n\n\"Oh shit.\" Jim muttered. \n\nAngus closed his eyes.\n\n\"He could have been on one of those videos we watched.\" Scott said.\n\n\"No wonder he passed on watching the videos.\" Riley said.\n\n\"I wonder if his family's been sold too.\" Josh muttered.\n\n\"I don't know if I can feel any shittier than this.\" Angus grumbled.\n\n\"The boys were too drugged up to wake up during your tirade.\" Riley said, \"That ought a make you feel better.\"\n\n\"There's that I guess.\" Angus said.\n\n\"So what do you say?\" Jessica asked, \"If anything goes wrong you will be there. This is a great chance to help a lot of people. Get the boys' family back.\"\n\nThey were all nodding, even Angus, though far less enthusiastically.\n\n\"I don't think we should tell the boys about Elsie yet.\" Jessica said, \"I don't want to get their hopes up too soon.\"\n\n\"Okay. Look. While we're gone the others can take the boys to the pond. That should distract the boys, keep them from wanting their mommy..\" Riley said, stating the last part slowly.\n\nThere was something in his tone, his expression. Jessica looked at the other men and they were looking at her the same way Riley was. Apprehension shot through her.\n\n\"That was just a slip of the tongue.\" Jessica said.\n\nRiley nodded, \"I'm sure it was. But Jess, you do know that there are limits to what you can or should do for other people. Even children.\"\n\n\"Limits?\" Jessica asked.\n\n\"Yes. You're not supernatural ... there are human limitations that make it impossible for you to defend ... save, everyone.\" Riley said.\n\nJessica looked at the men in confusion.\n\n\"What Riley's saying ...\" Scott said, \"Is that you have to take care of yourself too, when you do things for others ... even if they're little boys who look at you like their mother.\" \n\n\"We should go to bed.\" Angus said. Jessica looked even more confused and she had to fight to keep her eyes open.\n\n\"After we talk to Mark. And tell him the plan.\" Jessica mumbled, flopping against Angus.\n\n\"Come on sweetie.\" Angus said scooping her up. At the ladder he dropped her down to Scott who carried her back to the house. She fought sleep the whole way there. In the house they found Mark sitting on the sofa holding an ice pack to his nose. Everyone was still up. Sean, Rick, Caleb and Chris were back from patrol, replaced by Corey, Quinn, Don and Abe. \n\nMark stood up when Angus went toward him. \n\nChris stepped between Angus and Mark. \"Thanks for your concern.\" He said, \"But Mark and I will work out our own differences.\"\n\n\"I know. I'm here to say sorry. For everything.\" Angus said looking past Chris to Mark. \n\n\"What about Elsie?\" Mark asked.\n\n\"We'll follow you and Jess ... at a distance. Not because we don't trust you ... just in case Earl attacks.\" Angus said.\n\nMark nodded. \"Sounds fair. Is she okay?\" he asked looking at Jessica, head lolling, in Scott's arms.\n\n\"Exhausted.\" Scott said.\n\n\"Did you talk to her about the boys?\" Leah asked. \n\n\"We mentioned it.\" Jim said, \"But she just got confused.\"\n\n\"She would.\" Sean said with a laugh, \"Unbelievable.\"\n\n\"I hope she gets some sleep.\" Amanda said, moving closer to Scott and looking down at Jessica finally passed out. \"Maybe she'll be less confused tomorrow.\"\n\n\"No amount of rest is going to fix it.\" Caleb said. \"It's her, the way she is. She couldn't think of herself first if it meant her life.\"\n\n\"That's what I'm afraid of .\" Scott said looking down at her too.\n\n\"Like we discussed.\" Riley said, \"We have to keep an eye on her. Mark, you missed the meeting ... I guess you didn't have to go to the bathroom so much as accost Jessica ...\" \n\n\"I can explain ...\" Mark said, raising his hands.\n\n\"Don't. I know. Jessica is the best tool of persuasion in the world.\" Riley said, \"What I wanted to say is that at the meeting we determined that the only way to keeping Jessica from being a hazard to herself is close monitoring. By all of us. We have to anticipate where she'll sacrifice and as we all know the boys are without doubt the largest sword she'll fall on.\"\n\nAs Riley spoke Mark nodded. \"That's obvious. Don't worry, I'll keep her safe. I promise.\"\n\n\"Good night then.\" Scott said and headed down the hall with Jessica. The other men followed.\n\nThat night was considerably better. Jessica still had nightmares but they were fewer and farther between. And she'd fully awaken, realize she was having a dream, and fall back to sleep quickly. A couple of times with the help of an orgasm or two that were gladly administered by the hungry mouths and fingers of the men.  \n\nThe atmosphere the next morning was one of relief. Jessica looked good. She ate well, had energy. They trained, did chores, some hobbies. The bonds between Jessica and the boys were even more evident as she rotated through the garage, dog kennel, barn and worked with the boys. But what took everyone by surprise was the realization that the other adults were also forging relationships with the boys. Closer and stronger relationships then the adults had ever imagined.\n\nAfter lunch the boys were elated to hear they were going to the pond. But far less happy that Jessica, Mark and her men weren't going to be there until later.\n\n\"Was your family sold too?\" Jessica asked Mark as they drove into town. The men were a discrete distance behind them.\n\n\"Yeah. My mother, two sisters and younger brother.\"\n\n\"How did you end up in Sean's clan?\"\n\n\"Riley's dad. They used to be one clan ... Riley's dad found me hiding in the barn.\" Mark said, \"He didn't ask a lot of questions. Just took me in.\"\n\n\"How did Elsie get away?\"\n\n\"I'm not sure exactly. She doesn't say much these days.\"\n\nJessica nodded. \"Mark, I'm sorry about Angus. Sorry that I didn't realize there was a problem earlier.\"\n\n\"Don't worry about it Jess.\" Mark said. \"It's what I get for losing control. I don't know if Chris will ever trust me in the bedroom again.\" \n\nJessica nodded. \"But things with you and Justine are okay, right?\"\n\n\"Oh yeah. Her and I are fine. Her and Chris are fine. We just won't be all together.\" Mark said. \"And I meant what I said to Angus. About caring about you, about doing anything to protect you.\"\n\n\"Thanks.\" Jessica said, \"Me too ... \"\n\n\"Yeah, I know.\" Mark said. \"That's what you do.\" He added when Jessica looked at him in surprise. \n\n\"Just don't do anything stupid, okay?\"\n\n\"Is there a way to care about someone stupidly?\" Jessica asked.\n\n\"That's not what I meant ...\" Mark said.\n\n\"Right there.\" Jessica said when the GPS indicated they'd reached their destination. \"One oh five. Ready?\" she asked when Mark pulled into the driveway and cut the engine.\n\n\"You have the recorder?\" Mark asked. Jessica nodded and held up the device.\n\nThey went to the door to be greeted by the saddest woman Jessica had ever met. Her heart broke as this woman, who by Mark's account was no older than twenty five, shuffled to the kitchen. She could hardly move. And she looked at least two times older than she really was. Her hair was stringy, and body odor filled the room. Despite the heat the woman was covered from head to toe in clothing. She wore a sweat shirt and jogging pants.\n\nDead eyes settled on Jessica once they were all seated around the kitchen table.\n\n\"Um, Elsie, is it okay if we record this conversation?\" Jessica asked showing her the recorder. Elsie shrugged. Not much seemed to matter to her anymore.\n\n\"So, um, \" Jessica said looking to Mark for help. He nodded encouragement. \"Where are the women and children that were sold by Earl?\"\n\nAt the mention of Earl's name, Elsie's body convulsed. Both Jessica and Mark reached out to help her but she avoided both their hands clearly not comfortable being touched. Unsure what to do, they waited a few minutes and the convulsions stopped but by that point Jessica had begun shaking. She feared convulsions were next.\n\n\"Serbia.\" Elsie suddenly said and Jessica was taken aback to realize that Elsie had no teeth. No teeth. Jessica remembered Tom and Leo saying how Earl and his men would knock the teeth out of anyone who so much as grazed their cocks with them. There were a lot of people missing a lot of teeth. Jessica's shivers turned into tremors. Mark looked at her with concern, slid his arm around her and rubbed her back.\n\n\"Serbia?\" Mark asked but at the sound of his voice Elsie flinched.\n\n\"Serbia?\" Jessica said for him. \"How did you get out?\"\n\nElsie shook her head. \"I don't talk about that.\"\n\nJessica looked around the house. It was sparse and dirty just like Elsie was. \"Does anyone help you Elsie? Do you have any help?\"\n\nInstead of answering Elsie slipped a piece of paper across the table to Jessica.\n\nJessica and Mark studied it. \"These must be places in Serbia.\" Mark said.\n\n\"Names of people too. Do you think these are the people who bought them?\" Jessica asked.\n\n\"Police.\" Elsie said.\n\n\"Yes.\" Jessica said looking up at Elsie, \"We'll give this information to the police and they'll find your family and friends.\"\n\n\"No ...police.\" Elsie said and stabbed her finger at the paper Jessica held.\n\n\"Yes, the police.\" Jessica said, \"We have to give this to the police.\"\n\nElsie stood up, leaned across the table and stabbed the paper with her finger. \"Police.\"\n\nJessica and Mark looked from the paper to Elsie and back again.\n\n\"Do you think ...\" Mark began but Elsie flinched and fell back onto her chair.\n\n\"These are the names of police?\" Jessica asked, but Elsie wasn't responding. Jessica looked at Mark. \"Do you think these are Serbian police? Involved in the buying of sex slaves from Earl?\"\n\n\"I think so.\" Mark said. The sound of Mark's voice seemed too much for Elsie this time. She pulled her feet up on the chair and grabbed her head.\n\n\"Leave!\" she screeched.\n\n\"Elsie ...\" Jessica said but Elsie lost it.",
        "\"Leave, leave, leave, leave, leave!\" she started screaming.\n\nMark took Jessica's elbow and guided her out of the house. Outside they stood looking back at it. \n\n\"We have to get her some help.\" Jessica said.\n\n\"There are some people helping her.\" Mark said and pulled Jessica toward the car.\n\n\"No Mark, I mean real help.\" Jessica got into the passenger seat, Mark behind the wheel and they were on the road in seconds. \"She lives in filth. She's clearly not mentally well, and she needs new teeth. How can she eat without teeth?\"\n\nMark glanced at Jessica. \"I'll talk to them. They'll help her better. I promise. I know it's not what you want to hear but there's not much else that can be done. If Earl finds her ... She has to stay hidden. This is the best we can do.\"\n\nJessica nodded and distracted herself from her concern over Elsie by studying the paper Elsie gave them. Pulling her cell phone out she began entering the names and phone numbers on the paper into it.\n\nMark threw her a couple of looks but concentrated on driving.\n\nJessica's cell phone rang.\n\n\"It's Jim.\" Jessica told Mark before answering. \"Hi.\"\n\n\"Hey. That was quick.\" Jim said.\n\n\"Yeah. She's not so good Jim.\" Jessica said, tears threatened to come but Jessica fought them back.\n\n\"Are you okay?\" Jim demanded.\n\n\"Oh yeah, we're fine.\" She said glancing at Mark who was stealing worried looks at her. \"And we got what we came for, that's what's important.\"\n\n\"Good. We're right behind you ... well a few cars behind let's pull over and you can come with us.\"\n\nJessica wiped a tear that escaped despite her attempts to banish it. She took a deep breath. \n\n\"I'm okay, really. We're almost home, right?\"\n\n\"Okay. We'll see you in a few.\" Jim said, \"Love you.\"\n\n\"Love you too.\" Jessica said and hung up.\n\n\"Jess, I promise that Elsie will be okay. I'll make sure if it myself. Okay?\" Mark said. \n\nJessica nodded and sniffed while she wiped away her tears.\n\nWhen they pulled into the driveway Jessica opened her phone again.\n\n\"I'll call Leah and let her know we're back and that we'll be at the pond soon.\"\n\nAs they got out of the car Jessica slipped the paper from Elsie into her jean pocket and noticed just as Leah's voicemail picked up that things weren't right. Something felt off. Mark felt it too, he pulled his gun.\n\nAnd then from the house, the barn, the garage, the kennel, men appeared and moved toward them, guns pointed at them. \n\n\"Earl ...\" Mark gasped. \n\n... to be continued"
    ],
    "authorname": "JadenL",
    "tags": [
        "group sex",
        "stockholm syndrom"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/lisa-ch-08c-evil"
}