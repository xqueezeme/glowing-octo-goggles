{
    "title": "My Best Friend Katie Pt. 01",
    "pages": [
        "This is the first part of this series. Enjoy!\u2028\u2028Part 1\n\n*****\n\nChapter 1\n\n'Can you believe she's wearing that???'\n\nThe note slid onto my desk, scrawled in the margin of a map of 1600s Asia. I looked over at Katie Perkins, my best friend and the note's author, and back to the note's subject. Alicia Smith was sitting three rows in front of us, her miniskirt so short we could practically tell what underwear she was wearing. I looked back at Katie, who raised her eyebrows like she usually did when we were sharing a private joke. Katie liked to predict the skankiness of Alicia's outfits, and today she was on the mark.\n\n'Good guess,' I scribbled back. 'Maybe it helps her grades?' The map slid back to Katie's desk. We were paired up, working on our history project. Our teacher, Mr. Andrews, was once again hung over, so he had us pair up and work 'as quietly as possible.' This let Katie and me write as many notes as we wanted. In other classes, we had to be more clandestine.\n\n'Grades, not so much,' Katie replied on the note. 'Guys staring, definitely.'\n\n'Jealous? That doesn't seem like you...' I wrote back. She looked at me and rolled her eyes.\n\n'THAT kind of attention, I don't need. Thanks, dick.'\n\nKatie took her map back, and started to work quietly. I had clearly touched a nerve. I took my own map, scrawling a poorly executed attempt at apology and flattery. She read it, rolled her eyes again, and replied on the corner of my map.\n\n'You are clueless about girls, Jimmy, so I'll let it pass this time.'\n\nBy the end of our lesson, we had finished out work and spent the last ten minutes passing more notes about other topics. When the bell rang, Alicia Smith stood up, to the silent appreciation of every guy in class, and attempted to straighten her skirt. As she tugged it lower, she exposed more of her waist and a hint of ass crack. I turned, dreamy-eyed, to find Katie's eyebrows furrowed at me.\n\n\"Really?\" she said, exasperated.\n\n\"Katie, I'm an eighteen-year-old virgin. You put a half-dressed girl in front of me, it's like putting a ham sandwich in front of a starving man,\" I said defensively as we filed out of the room.\n\n\"I just thought someone who claims to be as smart as you do would be less shallow.\" There wasn't a hint of anger or hurt in her voice, but I could tell I was in hot water. Twelve years of friendship and Katie was in many ways still a mystery to me. I could tell, however, when she was pissed; that, at least, I could detect.\n\n\"You know that I wouldn't be that shallow,\" I said, trying to get her to smile. Katie looked at me reproachfully with her light blue eyes. We paused in the hallway, the crowd going around us, looking pissed that we stopped and blocked the way.\n\n\"Come on, Katie-Just because I took a look doesn't mean I'd want to date a moron like that. It's just my inner primate reacting.\"\n\n\"Fine,\" she said coolly. I couldn't see why she was mad. Katie and I were both single, and so it didn't seem like I should have to defend myself. But before I could continue, she spoke.\n\n\"Are you still coming over tonight for dinner? Your mom has some big announcement, right?\" She pushed her long, black hair behind her ear, tossing the other side of her hair behind her back.\n\n\"Yeah, I'm coming. I still don't know what she's up to. You never know with our moms.\" Our moms were friends, and when Katie and I were introduced in kindergarten, they were ecstatic that we took to each other as well as we did. So Katie was not only my best friend, but also I saw her most nights of the week; whether we were studying or hanging out trying to play guitar. Over the years we had started finishing each other's sentences and knew everything about the other. She punched me on the arm, her usual goodbye, and walked off to her last class of the day. It was the only class we didn't share, and it always felt like an odd parting as she headed to AP French and I headed to AP Spanish. A minute later I took my seat near the back of the room. Our Spanish teacher, Se\u00f1or Reynolds, also had us work in groups. We were preparing a skit about buying a car-in Spanish, of course. I was working with two of my other friends, Denny and Harry. Denny was the drummer in my non-existent band with Katie. She and I played guitar-poorly. We were lacking a bass player, and also songwriting talent. \n\n\"Holy crap, did you guys see Alicia Smith today?\" Harry asked. Denny nodded, grinning. I just nodded. They both paused, setting their pens down and looking at me seriously for a moment. \n\n\"What, you didn't like the skirt?\" Harry asked. \"Or did Katie give you shit again?\"\n\n\"Why would Katie give me shit?\" I asked, a little too defensively. Sensing the truth behind my words, they pounced.\n\n\"Hmm, good question, Jim,\" Denny said. \"Maybe it's because every time I hang out with you two, and you see some girl walk by, she gives you shit about it.\"\n\n\"Totally, Jimbo,\" Harry nodded wisely. \n\n\"You two are full of shit, you know that,\" I said. \"Besides, Katie is my best friend, she just doesn't want to see me act like a tool, like you two,\" I said with a smirk.\n\n\"Laugh if you want, dude,\" Harry said. \"I'm just saying that if I had a best friend like Katie, and she pouted every time I looked at another girl, I'd...\" he trailed off, breaking into Spanish as Se\u00f1or Reynolds walked by.\n\n\"Cuando por la coche?\" he asked in Spanish. Se\u00f1or Reynolds nodded in approval as Denny replied, \"Como coche quierres, se\u00f1or?\" When our teacher was out of earshot, Denny added. \"Harry is right, Jim.\"\n\n\"About what,\" I asked, getting annoyed as we started the same circular conversation I had been having them with for four years. \n\n\"I'd be all over Katie if I had the chance. No offense, no offense!\" he chortled as I shot him a look. \"I'm just saying-and don't get all protective of her again-but Katie's pretty hot. Shit she's drop dead beautiful, and if I even suspected I had a chance I'd be on that ass in a second. I mean, she's smart and all, which is cool, but she has an amazing body. Remember last year at your birthday party? That bathing suit she wore?\"\n\n\"Yeah that was amazing. I still dream about that,\" Harry chimed in. \n\n\"I mean she has that amazing ass and...well, I could go on but I'm going to get overexcited. Bottom line, she's hot, and she probably likes you. If it were me, I'd be all over her. Am I right, Harry?\"\n\n\"In a heartbeat, Jim,\" Harry said seriously. \"Why don't you just ask her on a date? You two hang out by yourselves so much anyway, what would be the difference? I mean, you might actually get some.\"\n\n\"Nah, not Katie,\" Denny said. \"She's too virtuous. You might at least get to touch her tits, but that's it.\"\n\n\"Alright, knock it off,\" I said in a tone that ended the conversation. \"I'm not asking her on a date. We're friends, that's it. And no more talking about her like she's a piece of meat.\"\n\n\"You mean like Alicia Smith?\" Harry asked, breaking into laughter.\n\n\"Excelente!\" Harry said. \"Cuando por el coche azul?\" he said as Sr. Reynolds walked by again. As the subject changed to the buying and selling of cars in Spanish, I couldn't help but think about what Denny and Harry said, and about Katie, and about what it would be like to...\n\n\"Jim, pay attention!\" Harry said, shutting his book loudly. I snapped out of my reverie. Class was ending, and everyone was getting up except me. Harry chortled and Denny gave me a \"he's hopeless\" look as they said goodbye. \"Have fun with Katie tonight,\" Harry said, and Denny made a rude gesture indicating he hoped I'd get some as they left me to pack up by myself.\n\nKatie and her family didn't come over until seven o'clock. By that time, I was already finished with homework and was trying to figure out a song on my guitar. I was in the middle of playing when I heard a knock and then Katie slipped into my room.\n\n\"I don't think it's a seventh chord,\" she said, picking up an electric guitar and showing me what how she thought the song should go.\"\n\n\"Thanks, Katie,\" I said. She beamed at me, then her face took a more serious look.\n\n\"About today,\" she began. \"I wanted to...\" but I finished her sentence for her.\n\n\"It's no big deal, Katie.\"\n\n\"No it is. You shouldn't have been ogling Alicia but I shouldn't have overreacted. After all, we're friends...\" her voice trailed off and she looked away for a moment before continuing. \"So how are Denny and Harry?\"\n\n\"Same as always. You know, they drooled over Alicia...\"\n\n\"Typical,\" she said.\n\n\"And they talked about all the things they'd do to you if you were their girlfriend. The usual.\"\n\n\"Figures,\" she said, still avoiding eye contact with me. \"At least someone notices.\"\n\n\"Plenty of people notice you, you're beautiful,\" I said. She looked at me but her eyes pierced into me. I flinched and tried to change the subject. \n\n\"Anyway, any idea what your mom is up to?\" I said. \n\n\"I have no idea, still. And, for the record, I wasn't apologizing earlier. I was just going to say that I think you shouldn't objectify women like that.\"\n\n\"How about objectifying them by mocking their skanky clothes?\" I asked in as non-confrontational a voice as I could muster.\n\n\"That's different. We're mocking, not turning them into sexual trinkets.\"\n\n\"Sexual Trinkets. That, Katie dear, is an awesome song name. Let me write it down,\" I said. She busted out laughing, almost letting the guitar slip out off her lap as she covered her face with one hand, giggling.\n\n\"That is a good name. Okay, okay,\" she said, panting for breath, \"I'll drop it.\"\n\n\"Well, I'll just say that my eyes mean no intent as far as girls like Alicia go. Besides, you're much prettier than she is.\" As I said this she looked at me quizzically, her eyebrows arched. \n\n\"Oh, really? You finally noticed?\" she said sarcastically. She was sitting very close to me, I could almost feel the warmth of her body. Her shorts were very short and showed a lot of her toned legs. They were so short that they almost revealed the gently curve of her ass, and I looked her up and down and realized how much I'd like to do some of the things Denny and Harry had mentioned in Spanish class. I leaned toward her slightly, not sure of what to say, but Katie suddenly straightened up, her eyes narrowed to slits.\n\n\"Let's get back to this song,\" she said, but before she could start playing again, there was another knock on my door. In walked our parents, the four of them looking as upper-middle class as they could get. \n\n\"Hey kids!\" our moms chimed. Katie rolled her eyes covertly. \"We've got some good news. Next week is Spring break, and we're all heading to Cedar Bay for the week! No phones, no work, no school, just sun and fun!\" her mom said, sounding like a travel agent. Our parents all beamed at us. Our moms, having been friends for years, always tried to vacation together, so this was nothing unusual. Our dads grinned as they imaged uninterrupted golfing and our moms imagined uninterrupted shopping in all of the quaint shops.\n\n\"What do you think?\" My dad asked. \n\n\"Sounds, great,\" Katie said, sounding deflated. I couldn't figure out why the idea had appealed to her so horribly. I wasn't thrilled about a fun-filled weekend with our parents, but Katie looked like a girl heading to the gallows.\n\n\"Everything alright?\" I asked her when our parents headed out the door to say goodbye. Katie set the guitar down, stretching her arms and yawning. Her shirt rode up a bit, exposing her firm midriff. Her tits, while not as ridiculously large as some of the girls at school, where still very nice and I was getting an erection while looking at them. This was a continuing problem-the only problem-with my friendship with Katie. The guys were right that she was incredibly hot. I had noticed this when we were fourteen, and had been hiding erections when I was around her since. She finished her stretch, and turned to look at me.\n\n\"I'm fine,\" she said. \"Just, a week with the family, how much fun will that be?\"\n\n\"Hey, I'll be there!\" I said defensively. \"I think it will be fun.\"\n\n\"You won't mind being seen with me? Because I don't want to sit on the beach and stare at girls.\"\n\n\"Katie, I promise I'll only stare at you. Um, what I meant was...\" I began, but she giggled. \n\n\"Stop there, before you ruin it,\" she said, still giggling. \"I've gotta go, come here,\" she said, moving in for a goodnight hug. She hugged me close so that our bodies pressed together, and I was acutely aware that I was still erect. I don't know if Katie felt it or not, but I was embarrassed enough to blush.\n\n\"See you tomorrow, Jimmy,\" she said, and walked out the door. She turned just before she left my line of sight, and smiled, her blue eyes sparkling.\n\nThe following day passed as any usual school day would, although Katie was more talkative than usual. Since Katie loved to talk, it was not lost on anyone that she was very excited. That evening she and I attended a church youth group activity. We always paired up, much to the snarky delight of our friends in the youth group. Tonight we were split into pairs, with one person holding a Styrofoam cup of water.\n\n\"Okay, everyone,\" our youth director called out. \"They idea is to negotiate. One of you will pick up the cup of water, the other will try and convince you to give it to them. If you spill the water, you lose. You'll need to share with the group what you did to get your cup of water, so don't cheat. And no bribing with actual money, folks,\" she added as she surveyed us. \n\n\"There is no way you are getting this cup,\" Katie said playfully. She held it up level with her face, taunting me with it. I made to grab it but she backed away.\n\n\"You're going to spill it and then we'll lose. And we've never lost one of these stupid games,\" she added. We knew each other so well that our inside language let us use code words to get around most word games, and we worked so well together that every team game was a cinch. Pitting us against each other was a new tactic, and I suspected that we might lose this time. Katie was grinning, waiting for me to say something.\n\n\"May I have the cup, please?\" I asked, knowing it wouldn't work. She shook her head, stepping close to me. Around us, people were trying to cajole their partners into relinquishing their cup.\n\n\"I could say something embarrassing about you out loud,\" I said casually, checking my watch.\n\n\"You could, but I could say something equally embarrassing, and I'd still have the cup. Like the time you got an erec-\"\n\n\"Okay, okay!\" I said quickly, and she laughed, almost spilling the water. She was referring to the time I had an erection at the movies, and at the end, when I stood up, it was obvious to Katie and anyone else nearby. She had teased me, saying I had a crush on the actress on screen, but really it was because Katie had lifted the armrest between us and was snuggled up against me. Even though we were best friends, I couldn't keep my physical reactions at bay, much to her amusement. Katie had never threatened to tell anyone that story before, and I was surprised by her boldness. Around us people were getting no further than me.\n\n\"Well, if you want to win this, then you can just give me the cup,\" I said. \"Then we'd be finished.\"\n\n\"A very compelling argument, Jimmy, but I don't think so,\" she said, looking mischievous. \"Try again.\"\n\n\"Okay,\" said, stepping closer. We were standing much closer than anyone else, only inches apart. \"There's no way you're going to just give it to me to win this?\" I asked. She shook her head. \"But you want to win, right?\" This time she nodded, cocking her head to one side and smiling.\n\nAnd I have no idea why, but I reached my hand around her waist, pulled her close to me, and kissed her on the lips. It was just a quick one, but it was something I had never done before. Her eyes opened wide and she let go of the cup, which I caught in my hand. Several people around us noticed and stopped talking, staring at us both. \n\n\"Well, we have our winners, although I will remind you that this is a church youth group,\" our youth coordinator declared as she walked over to us. I was grinning, Katie stood there in shock, her mouth open as if to say something, but she didn't move. It was only after youth group wrapped up, and she was driving me home, that she brought it up.\n\n\"Jimmy,\" she said quietly. Her face was somber, reflective. \"What was that about? The kiss.\"\n\n\"Well, I admit it was a flash of inspiration,\" I said, trying to sound calm, but wondering if I had pissed her off or not. \"You did, after all, want to win. And, you wouldn't just hand it over to me.\"\n\n\"And you thought kissing me would distract me.\" She said quietly, her eyes glued to the road.\n\n\"Katie, I'm sorry if I upset you, I wasn't trying to. I just thought...\" but I didn't know what I thought, and I could tell Katie was upset. \"I mean, it's not like I wanted to. Well, no, I mean I did want to, I've always wanted to...\" and I trailed off, realizing what I just said and how much of my inner desires had just escaped into the car and the space between us.\n\n\"You've always wanted to kiss me?\" she said, still not looking at me. Her voice wavered. She broke her gaze on the road to look at me for a split second before slowing down to pull into my driveway. \"Well, you better get going,\" she said as she pulled to a stop in my driveway.\n\n\"Katie, I...\" I began, but she cut me off.\n\n\"I'll see you tomorrow, okay?\" she said quietly, still not looking at me directly. I started to get out of the car, but she leaned forward, pulling me toward her. Our lips met for a split second before she pulled away, looking awkward. \n\n\"See you tomorrow,\" she said, and this time did not try and pull me back in as I got out of the car-as confused as she must have been-and headed inside.\n\nChapter 2\n\nWe left the next day later for our vacation. It was Saturday. My mom and dad drove ahead, and Katie and I were sitting in the back seat of her parents' car. When we went on trips with both of our families, they had long ago let us ride together rather than listen to use talk on the phone. Katie sat with her feet curled up on the seat, reading a magazine and occasionally looking over at me and smiling. We were almost there, and Katie's mood toward the trip had improved after her initial reaction. She reached up absentmindedly, playing with a lock of her jet-black hair as she read. And that's when I saw it; her bracelet.\n\nKatie and I went to a church that was moderate in their views, but really promoted abstinence. Katie had, years ago, attended a youth camp for girls that talked about sexual education. When she came back, she told me she was going to forgo sex until she met her future husband. I had shelved the information under \"irrelevant\" at the time. Now, when I was truly starting to appreciate Katie as a blossoming young woman, I was reminded that, like Harry and Denny said, nothing was going to happen.\n\n\"What're you staring at, Jimmy?\" she asked, looking up from her magazine. \n\n\"Oh, nothing,\" I said. She smiled and slid over toward me until she was sitting next to me, leaning on me. It was her favorite way to sit, with her legs curled up and leaning on me. It was how she watched every movie with me, much to the delight of my teasing friends. I couldn't help but notice how soft her skin felt next to me.\n\n\"Come on,\" she whispered, \"you've been in space for days. What gives?\"\n\n\"Just excited about the trip,\" I said quickly.\n\n\"Mmmm, me too,\" she said quietly.\n\n\"Why the change of heart? I thought you were going to be bored out of your mind,\" I said in a whisper.\n\n\"No, you're right. You're here, I'm bound to have fun. Besides,\" she added, \"have you seen the place we're staying? It's a bed a breakfast. We've got a whole floor to ourselves, and it's on the beach.\"\n\nWe sat like that for the rest of the trip, my body taking notice of her proximity. After a while she nodded off to sleep, and as I looked down I noticed her knit shirt was partly open. I could just see a hint of cleavage, which made my shiver with excitement. While Katie's ass and legs commanded most of my sexual attention, I appreciated her pert breasts as well, and my body was reacting instinctively. Although I had always appreciated Katie's physical appearance, our long-standing friendship muted many of the normal teenage desires other girls stirred in me. I always thought she was beautiful, but also felt that she was off limits, in a way. How had I gone on so long under-appreciating her?",
        "'Because,' said a small voice in my head, 'you're an idiot.'\n\nWe arrived thirty minutes later in Cedar Bay. It was hot and sunny, and the salt in the air made everyone smile a little more. Katie's description of the bed and breakfast was accurate, except for one thing.\n\n\"Three bedrooms?\" Katie's mom said as we stood in the lobby. \"We asked for the floor with four bedrooms.\"\n\n\"I know, ma'am,\" said the young girl working the lobby, probably the owner's daughter. \"But we had some rowdy college kids stay last week, and we're still fixing the mess they made. This is all we have left. I can try and help you find another place, but I can't promise anything with it being Spring break and all.\"\n\n\"It's not a big deal,\" Katie said to her mother. \"Jim and I can share a room, it says this one has two twin beds.\" I was about to open my mouth and say something, but Katie stepped on my foot gently. \"We won't have to try and find another place. Besides, this view is perfect,\" she said, gesturing to the beach rolling behind the french doors.\n\n\"I don't know, Katie, honey,\" her dad began. He was trying, it seemed, to not offend my parents or say anything about me. Her father had always liked me. In fact, when either of our parents were gone out of town, we stayed at the other house, but never in the same room. This seemed to stretch her father's limit of comfort.\n\n\"Katie's right,\" her mother said. \"We can trust these two, can't we?\" Everyone nodded, and in five minutes, we were hauling our bags up to the second floor.\n\n\"Thanks for stopping them from spending five hours searching for another hotel,\" I said, lugging my bag up the stairs.\n\n\"No problem. Besides, this will be more fun, anyway,\" she said, then quickly added, \"I mean, we're right on the beach, you can't get any better than that.\" She set her bag down on one of the twin beds and stepped out onto the balcony. Just then, my father stepped into the room, waving to Katie outside and coming over to me and talking in a low voice so Katie couldn't hear.\n\n\"Listen, kiddo,\" he said-I hated when he called me that-\"your mom and I are going out on a limb, here, letting you and Katie share a room. I want you on your best behavior.\" \n\n\"Don't worry, dad,\" I said. He smiled, looking out at Katie again, then added, \"We've been friends with the Perkins's for years, and we trust you two, but still...\" he trailed off. \n\n\"Dad, trust me,\" I said, \"We're just friends.\" He looked at me skeptically, then patted me on the shoulder and left the room.\n\n\"What was that about?\" Katie asked when she returned from the balcony. The wind had swept her hair back; she looked radiant, like I had never seen her before.\n\n\"Just the 'don't do anything' speech.\"\n\n\"I got that, too, when I was unloading the trunk,\" she said with a smirk. \"Oh well, a week of depravity out the window,\" she said, gesturing nonchalantly out the open french doors. She then rummaged through her bag on the bed, pulling out a swimsuit and marching toward the bathroom connected to our room. When she emerged a few minutes later, I was stunned. I had seen Katie in a bathing suit hundreds of times, but it felt like I was seeing her for the first time. She wore a bikini that showed off her flat stomach. I looked her, my mouth open, taking in the sight of her. Her long, black hair fell in curtains down her shoulders. She had a few freckles on her face, which made her blue eyes sparkle even more. I was slowly getting an erection as I noticed her breasts, which were rarely on display like this. They were small but firm, matching the athletic tone of the rest of her body. Her bikini bottom, while not r-rated, showed a good deal of skin.\n\nMy best friend happened to be one of the hottest girls on earth, and we were sharing a room. The nature of the situation took hold and I stared at her in silence for a moment.\n\n\"Well?\" she said, looking at me with raised eyebrows.\n\n\"Wh...what?\" I asked, lost in my own thoughts. She rolled her eyes and sighed.\n\n\"I'm going for a swim,\" she announced, and left the room. I watched as her as swayed left and right as she walked. Her firm, round ass with the dimples on her lower back\u2014it had always been a source of interest for me. I tried to push all of the depraved thoughts I was having out of my head. She was, after all, my best friend. I changed into my own bathing suit with difficulty (since I was sporting an erection). Five minutes later, I joined her on the beach. She was already in the water, and waved at me. As I approached the water, something else occurred to me, something Harry had said two days ago.\n\n'...if I had a best friend like Katie, and she pouted every time I looked at another girl...'\n\nWas Harry right? Harry, who knew about as much about girls as I did, which was close to zero? And if he was right, then several other things I failed to notice at first made a lot of sense. When I was about waist deep in the cool water she swam to meet me. \n\n\"Sorry I took so long,\" I said. \"How long have you been waiting?\"\n\nShe looked at her watch and frowned. \"Aw, crap,\" she said, dangling her wrist in the air. \"I forgot that this one isn't waterproof. Oh well.\" She looked at the useless watch one last time, then swam closer to me.\n\n\"Isn't this great?\" she asked, splashing me to get me wet. I took a deep breath, sinking into the water and going under. When I emerged, she was right next to me, her hair slicked back from the water, droplets of seawater on her eyelashes.\n\n\"Katie,\" I said, aware that there were other people near us in the water. We bobbed up and down in the surf as I said as quietly as I could. \"You shouldn't get down on yourself. You look totally amazing. Really.\"\n\n\"Thanks, Jimmy,\" she said. She had called me Jimmy since we were five, and was the only one I let call me that. \"Took you long enough to notice,\" she said.\n\n\"I just can't believe I never noticed before,\" I said. The words came out and I knew I had said the wrong thing.\n\n\"Never, really? It took this bathing suit to make you realize that I was, indeed a girl.\"\n\n\"I spoke too quickly,\" I said, \"I meant that, you know, you're my best friend, Katie. I would never ogle you like that. Of course I notice, but I've tried to keep in mind you're my best friend. I mean, I try not to stare, but I won't tell you I haven't noticed...\"\n\n\"I've said it before, Jimmy, you're pretty thick for a nerd,\" she said.\n\n\"What's your deal? I mean, you're getting mad at me for acting like a normal teenager. What did I do to piss you off?\" I asked a little too harshly.\n\n\"Never mind,\" she muttered. But I was confused by her mood. I caught her gently by the hand as she tried to swim away.\n\n\"Katie,\" I said quietly. \"Come on, what's wrong?\" She knew by the tone of my voice that I was really concerned. She sighed, then pointed to a top-heavy blond walking down the beach.\n\n\"See that girl?\" she asked. \"What do you think of her? The truth.\"\n\n\"Ok, the truth. She's attractive. I mean, just from a superficial glance.\"\n\n\"Is that all guys care about?\" she asked.\n\n\"No. Well, some do, I guess. Harry and Denny do, anyway.\" She laughed, and I kept going. \"But I'm not so easily influenced.\"\n\n\"So you're telling me that you would date some total hag, because she had a great personality?\" Katie asked, her eyes boring into mine.\n\n\"That's not fair. I mean, I really want a girlfriend who's more than a barbie doll. I want someone smart, and funny. And, I admit it, cute.\"\n\n\"Someone like Alicia Smith?\" Katie asked.\n\n\"No, someone smart AND cute. Someone like you.\" I said the words and then realized two things. First, I meant them. Second, I stood a good chance of having freaked her out. She didn't say anything for a few seconds, looking at me with her sparkling eyes, boring into my brain to try and figure out what I was saying to her.\n\n\"Am I to assume...\" she began, but I interrupted her.\n\n\"Katie, when are you going to realize that you're really beautiful?\"\n\n\"I've always assumed you didn't think so, that you only saw me as your friend since kindergarten,\" she said.\n\n\"Maybe that's why I've never said anything. What if I freaked you out and then we weren't best friends anymore?\" I said.\n\nShe opened her mouth, as if to say something, then closed it and said nothing for another few seconds. \"Come with me,\" she finally said, and led me by the hand out of the water. We passed the sunbathers, and waved to our sunbathing parents as we trudged up the wooden stairs to the bed and breakfast. She led me up the balcony stairs and straight into our shared room. She shut the door, a look of determination in her eyes I had never seen before.\n\n\"Explain what you meant by 'someone like me.'\" she said in a quiet voice.\n\n\"Katie, I wasn't trying to creep you out-\" I began, but she interrupted me.\n\n\"Just explain,\" she said, her voice still small.\n\n\"Okay, okay. I just meant that, you know, if you were interested, and I were-well, no I mean I am interested...but not if it were to ruin our relationship...but, I mean...\" and I trailed off, because I just realized Katie was walking toward me. She put a finger to my lips and gestured for me to sit down. I sat on a chair, my damp bathing suit uncomfortable against my skin.\n\n\"You mean it?\" she said quietly.\n\n\"Did you understand what I was saying?\" I asked. She raised her eyebrows and countered \"don't talk so much, Jimmy.\" She then stepped back from me, and did the last thing I expected her to do. She reached behind her back and unhooked her bikini top, exposing her breasts. She stood there for a second, just breathing and looking at me. Her breasts were magnificent, and were everything I imagined them to be. I took a deep breath. I had never seen a real woman like this, and I was instantly erect, my wet bathing suit even more uncomfortable. She stood, her hands on her hips, looking at me.\n\n\"Katie-\" I began, not sure what I was going to actually say.\n\n\"I've been trying to get you to notice me for years,\" she said. \"I've tried everything short of making a pass at you while I've watched you drool over dumb girls.\" She paused, her hands on her waist. \"Well, what do you think? The truth.\"\n\nI swallowed, my eyes darting between her eyes and her breasts. Then, without thinking, I said \"I think you are the most beautiful girl I've ever met.\"\n\nShe smiled, walking toward me, \"I'm also the smartest.\" I nodded, and she continued to walk toward me, saying \"why has it taken you this long to notice.?\" She stepped closer, and then, slowly, sat on my lap. Her body was surprisingly light as she rested on my lap, her bare breasts inches from me, her wet hair dripping onto my lap. She kissed me gently, and took my hand in hers. She then surprised me again, and placed my hand gently on one of her exposed breasts. And suddenly, without warning, I climaxed. The stimulation of her topless form, combined with the subtle pressure of her sitting on my lap, had taken over my body and put it into autopilot. Her eyes widened briefly as she felt my penis pulse under my bathing suit, flooding it. Surely she felt it, because she was sitting right on it as it happened. When I stopped climaxing, she looked at me quizzically. I blushed, embarrassed by my reaction, but she giggled and beamed at me.\n\n\"Well, at least some parts of you notice me,\" she said. She started to giggle, her breasts bouncing, her body warmer than ever. I laughed too.\n\n\"This is embarrassing,\" I said, not meeting her eyes. The first half-naked girl I see and I have an orgasm in my pants. She laughed again, but in a sweet way. Then she did another unexpected thing, and leaned in and kissed me on the lips briefly, then slid her tongue into my mouth. My hand was still on her breast, and I was aware of the mess oozing in my pants. She then stood up, reaching down for her bikini top and putting it back on.\n\n\"Don't worry about it,\" she said. \"I'm flattered, really.\" She then looked around, realizing as I was that this would be a bad situation for our parents to stumble in on.\n\n\"I'm going swimming,\" she said. \"You may want to clean up.\" She smiled at me, then turned to talk out the doors back to the beach. As she was almost out the door, I blurted out \"wait, Katie...\"\n\nShe paused, looking over her shoulder at me. \"Let's keep this to ourselves, Jimmy. In the mean time, you should probably take a shower or something. You look cute when you're flustered, but our parents might suspect something if they saw you right now.\"\n\nBy the time I finished showering and was in some dry clothes, Katie had returned from the beach. She was sitting on her bed as I emerged from the bathroom, reading a book. She was wearing a pretty sundress that was knee-length. My mind returned to the sight of her bare breasts. Even in a sundress, she was stunningly pretty. She smiled at me as I entered the room.\n\n\"Hi,\" she said, beaming and putting down her book. \"All set?\"\n\n\"Set?\" I asked, my mind still registering how pretty she was, and how I had missed the pertness of her nose and the line of her neck. She smiled again, then stood up.\n\n\"Come on,\" she said. \"We're meeting our parents at six for dinner. We have time to walk around the town. Let's go.\" With that she took my hand and we walked out of the room. The town was on a small island, with few cars and narrow streets designed for walking. We exited the hotel, and she let go of my hand. As we walked, we said little, occasionally pointing out someone dressed like an idiot or something else she found amusing. People watching was one of our favorite hobbies, and I was relieved to partake in it with her. With our brief kiss, and my hand on her breast, I didn't know what was what anymore. How long had she liked me? And why didn't I realize it? Katie was, as Harry and Denny had said hundreds of times, very sexy, but also very smart. I guess that somehow I expected someone as cute as Katie to be dumb. Or not interested in me. I was still amazed that she had waited this long for me to realize it. She could have had another guy. But did she wait for me? Did I have her? I looked over at her, and she flashed me another grin and blushed.\n\n\"Katie,\" I said suddenly, stopping in front of a vintage clothing store. \"About before...\" I began.\n\n\"A little forward, I know,\" she said, blushing again. \n\n\"No, it's not that,\" I said. \"I mean, what...\" I couldn't finish my sentence. We had been friends forever, and now for some reason my tongue was tied.\n\n\"I don't know,\" she said, looking puzzled, too. \"I mean, I wanted to get your attention, but I didn't really intend for that to happen.\"\n\nMy heart sank. Was she referring to my accidental climax, or the whole thing? She read my facial expression and added \"I mean, physically, you know?\" I brightened my mood suddenly, then took her hand and led her into a vintage clothing store. We looked among the racks of moldy clothes for a few minutes before I added.\n\n\"Katie, look. I'm sorry I've been too thick to notice you,\" I said quietly. \n\n\"You have been, she said calmly. \"It took me taking my top off to convince you I was a real girl.\"\n\n\"That was a bit extreme, though, wasn't it?\" I asked with a laugh. She laughed too, punching me in the arm.\n\n\"My one moment of impetuousness, combined with years of you not noticing me. I spent my adolescence wondering if you'd notice.\"\n\n\"Katie,\" I began, but she put a finger to my lips.\n\n\"Jimmy, I'm a girl,\" she said.\n\n\"I know, but\" I said, but she cut me off again.\n\n\"And you're a boy. And we've been together for years. When are you going to stop thinking and do something?\"\n\nI don't know what made me do it, but I put one arm around her waist and pulled her close, so our bodies were touching, and kissed her on the lips. She relaxed in my arm, kissing me back. Suddenly, the shop keeper cleared her throat, clearly not amused by our display of affection.\n\n\"Come on,\" she said, \"let's get some ice cream.\" We walked down the street, and she took my hand in hers.\n\n\"Katie, can I ask you something?\" I asked tentatively.\n\n\"You're cute when you're unsure of yourself,\" she said. \"And, yes, fire away.\"\n\n\"What's happening right now?\"\n\n\"Do I really need to articulate it? You know, you're pretty smart, except when it comes to girls,\" She kissed me briefly, pressing herself against me. \"Makes sense now?\"\n\nI nodded, dumbstruck.\n\n\"But don't let our parents know, or you'll be out on the hotel couch in a flash. Anything else?\" she asked, looking at me and grinning.\n\n\"Can we still be friends at the same time?\" I asked. This was the real question on my mind.\n\n\"Of course. You're still my best friend,\" she said, kissing me again quickly after making sure no one was around on the street. \n\n\"And, about the flashing thing?\" I asked. \n\n\"I'm sorry about leading you on like that. You know I'm not ready for...for that.\" she said quietly.\n\n\"No, I know,\" I said. \"And I'm fine with waiting. What I wanted to know was, would you ever let me see them again?\"\n\n\"See what?\" she asked, playfully. \n\n\"Your breasts,\" I said as quietly as possible. She giggled, punching me on the arm again.\n\n\"I was expecting 'boobs' or 'tits' or something like that. Ah, Jimmy, your vocabulary is so much better than the other boys. It's one of the things I like about you,\" she said, putting her arm around my waist and squeezing. My mind was in a whir. Katie, my best friend and amazingly hot girl, was actually interested in me. I had seen her breasts-and climaxed in my pants because of it. I was still reeling from all of this new information when she added, \"maybe, if you're good.\" She then smiled devilishly as we walked on. \n\nBy the time we got to the ice cream shop a cloud had rolled by and a small shower broke out. Typical of any Florida day, the light rain lasted about an hour. We bade our time by sitting in the ice cream shop, telling jokes and talking about our band, which we both agreed needed an overhaul.\n\n\"Neither of us can play that well,\" she said in defeat, \"it's time to give it up and retool our music,\" she said. She was drumming her fingers on the table, prodding her sundae with her spoon with the other hand. I was thinking about Katie's views on premarital sex. I was a typical sex-obsessed eighteen year old, and my new girlfriend would not be having any sex for a while. I was wondering if this would be a long-term problem for me, when I remember that I had already had a more intense sexual experience with my pants on that I had ever had before. The thought cheered me up. Katie was just starting to ask me what I was smiling about when our moms came into the ice cream shop, their shopping bags over their heads to protect from the waning drizzle.\n\n\"Hey you two,\" my mom said. Katie moved a few inches away from me without missing a beat. Her eyes were on our parents, but her expression was impossible to read. Our moms ordered and joined us, immediately derailing our conversation. Katie was her usual self at least, which was a relief. By the time we finished, our moms were still gabbing and eating their dessert. Katie stood up, smoothing out her sundress and addressing them both.\n\n\"Well, I was thinking about checking out the used bookstore before heading back to the hotel. The sun's out, and everything will be pretty dry soon. Are we will meeting for dinner at six?\" she asked, not looking at me. Our moms nodded in agreement, and she turned and started to walk out of the shop when I stood up, announced I was going to go, too, and said goodbye to our moms. We met in the street, walking together but not daring to hold hands.\n\n\"Nice move,\" I said. She smiled, bumping into me once on purpose.\n\n\"You too,\" she said. \"I knew you'd pick up on it.\"\n\n\"What now, Katie?\" I asked, surveying the busy street.\n\n\"The bookstore. I did want to check it out, actually,\" she said. We wound our way through small shops and finally made it to the used bookstore. It was a two-story victorian house someone converted with endless bookshelves. It was a maze of books, and after saying good afternoon to the owner we were quickly lost in the stacks. The shop had books on every subject, some of them very old. Katie pulled an old cookbook off of the shelf and flipped through its contents. I found one nearby on cold war journalism, then quickly put it back. We moved toward the back of the store, taking an hour or so to flip though books as we went. After exhausting the first floor, we headed to the front again. The shop owner barely acknowledged us as we ascended the staircase to the second floor. The book stacks were crammed a little closer together on the second floor, and a whole new range of subjects were marked by fading signs.",
        "\"This place is amazing,\" Katie said as she slipped between two narrow bookcases. \"I mean, look at these old maps, I could spend days in here.\"\n\n\"We've got a week,\" I said, \"we actually could.\" We moved to another bookshelf, looking at books about gardening (boring) and another shelf containing books about cars (also boring). The sun was starting to march across the western sky, and long shadows filled the second floor of the book store.\n\n\"So what were you smirking about, before our moms came into the ice cream place?\" Katie asked as she slipped a book back into its place on the shelf. \"You looked like you had an idea of some kind. Perhaps you'd like to share?\" She stepped closer to me, so that there was less than an inch between us. I was about eight inches taller than her, so her head was upturned to mine; her eyes sparkled in the sunlight.\n\n\"Nothing,\" I said. She playfully stood on her toes to reach my eyes directly. \n\n\"Hmm, I don't buy it,\" she said in a whisper. She turned, reaching up for a book behind me. I stared at her ass as she stretched, and realized I was getting aroused again. I tried to will myself dormant, to avoid another spontaneous climax. It would be harder to conceal out in public. \"Ooooh, look at this one,\" she said, pulling a medium sized book down and opening it. My eyes widened. It was a book about photography, but the subject matter was bikini-clad women from the 1960s.\n\n\"I love these old-style bathing suits,\" she said, turning pages as she propped the book against the bookshelf. \"Look at this one,\" she said, pointing to a long-hair brunette with curvy hips and enormous breasts. Katie and I had looked at her dad's playboys and things like that before, joking around. It seemed different now that Katie was my girlfriend. I wasn't sure if I was supposed to say anything, when she suddenly prodded me gently and said \"lost, Jimmy? I was asking you what you thought. Or do you prefer this one?\" \n\nKatie flipped a few pages and found a blond with very large breasts, sporting the smallest bikini I had seen. I tried to keep my expression neutral, and she laughed. \n\n\"Come on, your honest opinion,\" she chided.\n\n\"Katie,\" I began, but she giggled, snapping the book shut and setting it on the bookshelf next to her.\n\n\"Admit it,\" she said, \"you're just like every other guy out there. The bigger the chest, the better.\" I couldn't tell if she was mad or not. I looked at her, her face set it determination, just as it was when she took off her top. And that was when it hit me; it was then that I finally made the connection with the hurt look on her face from class a few days ago.\n\n\"Katie,\" I said tentatively. \"If you're worried about...about your breasts. You don't need to think twice about it. I mean, they are amazing.\"\n\nShe blushed, then laughed quietly. \"You're just saying that,\" she said with a sheepish grin.\n\n\"No. They are amazing, trust me. Besides, I don't go for the huge breasts thing.\"\n\n\"A butt man, huh?\" she said playfully. \"How do I compare?\"\n\n\"Isn't it obvious,\" I said, thinking of my unannounced climax from earlier in the day.\n\n\"No,\" she said, laughing. \n\n\"Katie, all I can say is that you are perfect. You have the perfect body, the best smile. But it's more than that. You're perfect for me. We've been friends for so long, it took looking past that to realize that you are it.\" \n\nKatie stepped up on her tip toes and kissed me. I pulled her closer to me, so that our bodies were pressed together. I was aroused as much as I had been that morning, and I was worried about losing it again, but I kissed her anyway. She kissed me back, her arms wrapping around my neck. We fell backward a bit, her back landing gently on the bookshelf, supporting her. Katie pressed herself closer, lifting her leg and pressing herself even closer to me. I ran one hand up her exposed thigh, savoring its smoothness. She slipped her tongue into my mouth as my hand moved all the way along her leg and had now cupped her ass. I squeezed it gently, our tongues exploring each other, when I realized she was slowly pressing herself against my thigh. Her right leg was raised and almost wrapped around me, and I felt her muscles contract as she pressed herself against me again and again. I was on fire, expecting to climax in my pants again at any minute, trying to keep control as my other hand slowly traced up her stomach. I was an inch from her breast, my hand on her ass pulling her closer to me each time she pressed against me. I was about to place my hand on her breast when we both heard an \"ahem,\" behind us.\n\nIn a split second we had disentangled from each other. Katie took a step away from me and smoothed out her dress. Her face was flush and small beads of sweat were forming on her neck. I was as erect as I ever had been, on the verge of losing it. We looked at the store owner, who had just come up the stairs and caught us.\n\n\"I thought you two were up to no good,\" she said sullenly. Katie picked up the book, muttered a low \"sorry\" to the woman, then proceeded downstairs. I followed Katie, and the owner followed me, giving both of us reproachful looks. When we reached the cash register, Katie set the book down and said \"I'd like to buy this, ma'am.\"\n\nThe woman frowned at her. Clearly, she was debating the book sale, or the satisfaction of throwing us out for making out in the bookshelves. Money seemed to win the debate, and she grudgingly took Katie's money and put the book in a small bag for us. On the way out, Katie turned and said \"we love your store, by the way.\" When we got a few stores down the street, we both burst into laughter.\n\n\"I thought we were toast,\" I said, grinning. I could still feel blood rushing through my ears. Katie looked flush, too. She ran her fingers through her hair, looking around the street.\n\n\"Well, now what do we do?\" she asked. Our physical arousal was still evident, although probably only to me and Katie. I blushed, she grinned. Then, without speaking, we started walking down the road toward the hotel. The sun was getting low in the sky, it's shape and size distorted in the evening air. We walked a few blocks toward the hotel. We were supposed to meet our parents for dinner. Neither Katie nor I spoke for a while, until we got close to the hotel.\n\n\"That, back there in the book store, was awesome, Jimmy,\" she said with a smile. I grinned back, both of us blushing. \n\nDinner was awkward, to say the least. Katie and I sat on opposite sides of the table, omitting the fun parts of our day as we relayed our exploration of the island to our parents. Our dads had gone boating, and were planning on taking our moms as well. Katie expertly got us out of it. Our parents were thrilled, as always, that we were willing to entertain ourselves. I spent the entire dinner thinking about Katie, and about how she felt in my arms. I realized that I was getting an erection again, and looked up from my plate to see Katie smiling devilishly at me, raising her eyebrows for a second before asking her dad a question about their boat trip. I wanted nothing more that to kiss her again, to hold her in my arms, but instead we were pretending like nothing had happened. I was fine with this, because I suspected our parents would not be so keen to leave us unsupervised once they figured out we were now much more than best friends.\n\n\"How smart am I, getting us out of that boring boating trip? Like I want to watch my dad fish,\" she said when we were back in our room. I was sitting on my bed, already in my pajamas. Katie had just emerged from the bathroom, wearing a tank top and pajama bottoms. She was brushing her hair as she walked over to her bed. \"And now, we have the whole day to ourselves tomorrow,\" she said as she sat down next to me. It was late, and our parents were already in bed, and Katie was sitting very, very close to me. She nudged closer, grinning. I wasn't sure what to do. Sure, we had made out twice that day. Sure, she had taken off her top, causing me to climax in my pants. But, as far as I knew, Katie was committed to maintaining her virginity as long as possible. Still, I thought, there were plenty of things we could do. And with that, I leaned in to kiss her, resting my hand on her thigh. Katie leaned forward, almost pushing me back with the force of her kiss. My hands found her waist, and I pulled her toward me gently. \n\nKatie stood up, making sure the door was shut, then straddled my leg. Her warm thighs were on either side of me, and she bent down to kiss me as I half-sat, half-laid on the bed. My hands quickly found her ass, gently holding her while she started to rock back and forth along my leg. It only took a few seconds for me to register that Katie was grinding herself against my leg like she had at the book store. Now that she was sitting on my thigh, she had complete control of the rhythm, and was steadily rocking, grinding against me. I sat up more, pressing myself closer to her, one hand finding her left breast and gently squeezing her areola. She gasped, almost inaudibly, as she rocked against me faster, now almost gliding against me as she started to shudder against my thigh, and Katie had an orgasm. She was quiet through it, but threw her head back, grinding even harder as her whole body shook. She kept grinding, arching her back a second time as she climaxed again. Her body hung limp for a moment as she took shallow breaths, her eyes locked on mine. And then, without warning, she straightened up, looking at me with a fiery look in her eyes, and repositioned herself slightly. She pressed her knee, gently, slowly, against my erect penis. She pressed it there, watching my facial expressions, as she slowly rode my thigh again. This time she rode deliberately, reaching a third orgasm as she gently pressed, repeatedly, against my penis. She reached a fourth orgasm, falling forward a little bit, and pressed her knee against me one last time as I climaxed in my pants again. My erect penis pulsed against her knee as I ejaculated, my pants quickly filling with hot semen. She smiled, her hair tussled and beads of sweat forming on her neck.\n\nKatie said up, and laughed quietly before leaning in to kiss me once more. She stood up, surveying the wet mess that used to be my pajama pants. \n\n\"You better clean up, Jimmy,\" she said. She smiled, and shooed me toward the bathroom. I stripped off my clothes, cleaning my still-tender penis with care. I couldn't believe the intensity of my orgasm-so much better than with my hand!-or how easily she herself climaxed. I had always heard that it took girls forever to have an orgasm, but Katie was proof that the myth wasn't true. When I emerged from the bathroom with a new set of pajama bottoms, the lights were off and only the moonlight shone through the window. My heart sank, as I wanted to kiss Katie goodnight, until I realized she was in my bed, not hers.\n\n\"Come here,\" she said sweetly, making room for me. It was a cramped single bed, but we managed to snuggle close to make room for each other. \n\nChapter 3\n\nIt was only when the sun pierced my eyelids that I realized Katie was still in my bed. \"Shit,\" she muttered, waking with me. She leapt out of my bed and into hers. I watched in amazement as her perfectly toned butt flexed as she rocketed into her bed. Her timing was perfect, as a few seconds later my mom knocked on the door, coming to wake us.\n\n\"Wake up, you two,\" my mom chimed as she entered the room, Katie's mom right behind her. \"We're taking off early for the boat, so you're on your own for breakfast and lunch.\"\n\n\"We'll be back around four o'clock,\" Katie's mom said. \"I trust you two can find some things to do while we're gone?\"\n\n\"Oh, yeah,\" Katie said, stretching slowly. \"We've got more window shopping to do, and we'll probably hit the beach.\"\n\n\"Great, we've left some money for you two to grab some breakfast and lunch. Have a good time, you two,\" My mom said, leaving the room. Katie waited a few moments before looking at me and grinning. She stood up, walking over to the french doors that led out to the balcony. She opened them both, stepping out and watching the surf. I lay in bed, watching her. She turned to look at me, and started to grin and blush again. She stepped back into our room, letting the warm ocean breeze fill the room behind her. She hooked her thumbs into her waistband, nonchalantly tugging her pajama bottoms lower, exposing more skin. I sat, transfixed, my erection throbbing in my pajama pants. Katie picked up the phone and ordered breakfast, then turned to look at me.\n\n\"Are you going to sit in bed all day?\" she asked with a small laugh.\n\n\"I can't get up,\" I said. It was true. Standing up would reveal my erection, which was threatening to form a tent in my pajama pants as it was.\n\n\"Ah,\" she said, surveying me. \"You know, you do that all the time, it's hard not to notice. It's too bad,\" she said, and peeled off her tank top. She wasn't wearing a bra underneath; once again I was treated to the sight of her bare breasts. Every part of my body took notice of the display, and my face was flush within seconds. She hooked her thumbs in her waistband, nudging her waistband even lower. It was clear she wasn't wearing any underwear, because each movement of her hands exposed skin and nothing else.\n\n\"Come on,\" she said, \"stand up.\" She did a little spin. Then, with her back to me, she peeled off her pajama bottoms so that they fell by her knees. Her exquisite ass was so perfect and round that I wanted to climax in my pants right then. Deep dimples ran down the small of her back, and I realized that this was a view I could never tire of. She began to turn around. My eyes widened as she turned around to face me. Katie kept a neat triangle of black pubic hair, unlike most of the pictures of girls that I had seen online. I had to admit, I liked the bush. It wasn't out of control, and it was very sexy. She stood there, with her hands on her hips, and laughed.\n\n\"Well,\" she said. I grinned, blushing even more, and stood up. I figured it was only fair to share. I took off my shirt, then awkwardly stepped out of my pants and boxers. It was a difficult operation, but when I finally stood up I because very self conscious of my penis. It was erect, pulsing gently, and an angry shade of red. I was embarrassed. Would it be the right size? Like every other boy I had measured myself from every possible angle, but Katie's mental measure was what was going to make or break me.\n\n\"I've never seen one before,\" she said, staring at my penis. I was staring too, dumbstruck. She stepped forward, kissing me. As I kissed her back she moved closer, until my penis poked her in the stomach.\n\n\"Oh,\" she said, surprised. \"I forgot,\" she added. I blushed even more, but she kissed me again, pressing her body against mine. I cupped her ass gently. Were we actually going to do it? I didn't know. Katie seemed to be calling all the shots, and the shots so far had been very agreeable. She pressed against me even more. The sound of the waves flooded the room. Katie started to rub against my leg, and at the same time slid her hand down my chest.\n\n\"You know I want to wait, right?\" she said in a small voice. I nodded. \"But still,\" she said, \"that doesn't mean we can't have some fun.\" Her hand slid further down and wrapped around my penis. I gasped, and she giggled, stroking me gently. I had stroked myself hundreds or thousands of times, but the feeling of Katie's hand was unlike any of my own sessions. Katie's move had given me an idea. I took one hand off her ass and slid it over her labia, feeling her wetness. She gasped, and her movements became uneven as I stroked her labia. I was so close to orgasm, that any second I was going to. Katie seemed close too, her breathing ragged and her heart racing. One or two more strokes, I could feel pressure building. \n\nAnd then we heard a knock at the door.\n\n\"Crap,\" Katie said, letting go of me. The pressure was almost painful, but also pleasurable. She too looked flush, sweat running down her stomach. She took several deep breaths, calming herself down before throwing on a robe. \n\n\"I'll be right back, can you set us up at the balcony table?\" she said sweetly before disappearing. When she returned, she was carrying a tray laden with food. I wasn't sure if we were going to pick up where we left off, but she set the food on the table and beckoned me over. I pulled my pajama pants on with difficulty before joining her. \n\n\"Don't look so disappointed,\" she said. \"I mean, if you think about it, you've gotten to see a naked girl, and she put her hands on you. Not bad, in my book. Besides, we've got a whole day to ourselves.\" She looked at my face, studying my mood, then smiled. She took a piece of toast and bit into it. She looked at me as she chewed, then when she swallowed, she added, \"what do you want to do?\"\n\n\"I don't know,\" I said, trying not to sulk. What I really wanted was to finish what we had started. She frowned slightly, clearing thinking of the best thing to say. She took a sip of her orange juice, then set it down, before speaking.\n\n\"Jimmy, I don't want this relationship to be nothing but a string of groping. We've been friends forever, and I don't want to ruin that. Now, just because we were interrupted by the breakfast delivery, doesn't mean the fun is over. But,\" she added, stopping me before I said anything, \"I also like the spontaneity. So why don't we head out today and see what the day has in store for us.\"\n\n\"You're right, I didn't mean to sulk. Let's go down to the beach, then grab some lunch. My dad said there's a neat place down the beach that has tables right on the sand,\" I said.\n\n\"I like that plan,\" she said. \"Besides, even though we might be banned from that bookstore doesn't mean there aren't more hiding places on this island.\"\n\nI grinned, taking a bite out of my breakfast. My appetite had returned. \n\nA short while later we were walking down the beach holding hands. I was trying to keep my erection upright so it didn't poke outward. Katie wore a small black bikini that I had never seen before. As we walked we people watched and laughed, deeming the water too cold to swim that early in the day. We walked for about half and hour before testing the water again. We braved it, taking our time getting in. There were a lot of people in the water, and we swam a little bit away from the crowd. When we were far enough away, Katie swam close to me and kissed me. We were soon tangled in a wet embrace, the gentle waves buffeting us in the water. My erection was pressed right against her labia, our swimsuits the only thing keeping us apart. We pressed against each other, each of us panting. I had my hands cupped on her ass, and quickly slid my hands under her bikini bottom, cupping her bare butt. She panted, pressing against me. We were both close again, when we heard a woman's voice nearby.\n\n\"Do you two mind? There are kids swimming on this beach.\" It was a woman in her forties or fifties, eyeing us with disdain. We broke apart, blushing and grinning. We made our way out of the water, each of us embarrassed and annoyed.\n\n\"I was so close,\" she muttered, \"if that old lady hadn't opened her mouth.\"\n\n\"What now,\" I asked. \"We could always head back to our hotel; no pressure, of course.\"\n\n\"That's one option, but I have another one,\" she said with a grin, and took my hand. We kept walking, back to our hotel. We reached the room, and she quickly stripped off her bikini. I took off my clothes, and began to pull her toward me, when she resisted gently.\n\n\"No, get dressed. I have an idea. Trust me, it will be worth it,\" she said. She put some jeans and a tank top, and I pulled on some jeans and a t-shirt, and minutes later we were out strolling the streets. We passed the same bookstore from before, and she grinned sheepishly at the owner, who was standing outside of the store and glaring at us. We walked a bit further, holding hands and knowing our parents were on a boat somewhere. Katie led me into the vintage clothing store we saw earlier. Like the bookstore, it was a converted house that was full of racks of old clothes. It was empty, except for a college-age student type who ran the register. She was reading a gossip magazine and didn't even look up when we walked in.",
        "\"Come here,\" Katie whispered, and led me through the clothing racks. The racks in the back were taller, and obscured us completely. She stepped close to me, kissing me. I kissed her back, and she immediately wrapped her leg around me and began to rub against me as she had before. I kissed her fiercely, my hand running up her bare thigh. She was breathing hard, and very quickly had an orgasm. I guessed she was climaxing by the way her breathing changed and she melted against me. She continue to grind against me until she came a second time. She then paused, catching her breath, and looked around the rack to see the student still reading.\n\n\"I'd better not press our luck,\" she said. I took that, with hidden disappointment, to mean we had to stop, but instead she kissed me again, then unzipped my jeans. \n\n\"Tell me when you're close,\" she said, and reached a soft hand down my pants, finding my erect member and stroking it. I was in heaven, and held her tightly as she stroked me, until at last I felt my whole body tense up.\n\n\"Katie,\" I said in a whisper, and she took it as her cue. She suddenly, without warning, dropped to her knees and put her lips to the head of my penis as I started to ejaculate. My knees trembled, and I grabbed some clothing to keep from collapsing as I came inside her mouth. She kept only the tip inside her mouth, forming a seal and catching all of my semen in her mouth. When I finished, she stood up quickly, and I stuffed myself back into my jeans. She smiled, then said \"Well, that was new.\"\n\nSo she swallowed, I thought.\n\n\"Come on,\" she said, \"I think that will tide us both over for a while.\" She brushed her hair back with one hand and wiped her lips with the other. I followed her as she walked to the front of the store, pausing to examine something on a rack. I was too dazed to even register what she was looking at. It wasn't a blowjob, but she had stroked me and let me come in her mouth. In all my years of knowing Katie, I had never expected her to do something like that. It almost made me wonder if she'd done it before; it was an unsettling thought.\n\nIt was so unsettling that a minute later, when she had purchased whatever it was she found and we were back outside, I asked \"Katie, have you...have you done that before?\"\n\n\"Jimmy, you know very well I haven't. You are the first boy I've even kissed. I was just, I don't know, I just figured that you were going to make a mess. After all the interruptions today I figured it would be a big one. Either a mess in your pants or on those clothes. It seemed like the best thing to do with the evidence.\"\n\n\"It was,\" I said in a dreamlike tone. She giggled, then kissed me while other tourists gawked. \n\nWe met out parents that night for dinner, this time at a rooftop restaurant that overlooked the water. The sun was setting, and our parents were exhausted from a long day of boating. Katie and I sat next to each other as close as we could without being obvious. A few times Katie reached under the table and squeezed my hand, and once her leg rubbed up against mine. She was enjoying distracting me, and often waited until someone asked me a question before doing something like that. \n\nAfter dinner I stepped out without Katie to run a small errand. When I returned, she was sitting on the bed, still in her dress, reading a book. She looked up and beamed at me.\n\n\"Where've you been?\" she asked playfully.\n\n\"Nowhere,\" I said, and embraced her as she stood up and stepped toward me. We kissed deeply, then she paused.\n\n\"Our parents are down the hall,\" she whispered between kisses. We could hear them talking in the kitchen, wrapping up their plans for tomorrow, which thankfully omitted us again.\n\n\"I don't care,\" I panted, my hands reaching up and gently massaging her breasts. She moaned, then slid the straps off her sundress and let it slide down, giving me access. I pushed her bra down, exposing the tops of her breasts. She gasped as I leaned forward and kissed one. One of her hands wrapped around the back of my neck and pushed me close as my tongue pressed against her nipple. Her other hand slid up her dress, where she began to rub herself as I pressed her erect nipple against the roof of my mouth with my tongue. I switched to her other breast as my hand took over rubbing the nipple that had just exited my mouth, and I heard Katie's breath rattle as she came. She was rubbing furiously, but also pressed me closer to her breasts as she stifled a cry. I was suddenly aware of how our parents were no longer talking in the kitchen, but just as I started to panic Katie came a second time, her body shivering as she did, and then she released me. \n\nKatie pulled her bra and dress up just as there was a knock on the door and a second later her mother popped her head in the room. We were standing together, maybe an inch apart, but at least Katie was fully dressed again. We stepped apart from each other, but Katie's face was flush and I tried my best to hide my erection, which was unfortunately sticking out. I sat down awkwardly on the bed and Katie stood in front of me. Katie's mom eyed us quizzically for a second before speaking.\n\n\"Am I interrupting anything?\" she asked, giving a closer look. Katie blushed even redder and I shifted nervously.\n\n\"Um, no mom,\" Katie said quickly. Katie's mom watched us for another second before adding.\n\n\"Well, we're off on another boating trip tomorrow. I take it you two will want to stay on the island.\"\n\n\"Yeah, I think so,\" Katie said. I decided that saying anything, bringing attention to myself, would be a bad idea.\n\n\"You'll be on your own again,\" she said, then added. \"Alone.\"\n\nThis last word hung in the air, as if she was testing us.\n\n\"Sounds great,\" Katie said in as nonchalant a tone as she could muster. \n\n\"Okay then,\" her mom said, still eyeing us as she shut the door.\n\n\"Shit,\" I whispered.\n\n\"She knows something is up,\" Katie said. \"I know that look.\"\n\nKatie sat on her bed, her cheeks still red. She looked at me, her eyes narrowed.\n\n\"I wonder if they'll make us have separate rooms,\" she said. \n\n\"I don't know, but until they do, we should be more careful.\"\n\n\"It was worth the risk, though,\" Katie said, patting her thigh contentedly. \n\nA half hour later we were in our pajamas, ready for bed. I didn't dare make a move of any kind, for fear of getting caught. But as Katie sat on her own bed, she turned and asked me, \"By the way, where did you go earlier?\"\n\nI had forgotten about my errand. \"Oh, I meant to tell you before we got...\"\n\n\"...interrupted?\" Katie said with a smile. I turned, reaching on my bed for the small bag I had thrown there when I first returned, and handed it to Katie. She took it, puzzled, and opened it to find a small leather box.\n\n\"What is it?\" she asked.\n\n\"Just open it,\" I said. \"I wanted to get you something nice, and I saw this early this afternoon.\"\n\nShe opened the box to find a Mickey mouse watch. I had seen it in one of the antique shops, and I knew she liked them. \n\n\"It's not waterproof,\" I added as she realized what made me get it for her, \"so you can't take it swimming like the last one.\" Katie laughed, and slipped it on.\n\n\"I love it,\" she said, admiring her wrist. \"That was really sweet.\"\n\n\"Well, I saw it and I thought you needed a new one...\" I began, but she cut me off.\n\n\"I'd like to repay you,\" Katie said.\n\n\"Katie, it's a present,\" I said, but she shook her head and stood up, switching off the light as she stepped over the my bed.\n\n\"No, I mean repay you for earlier.\" She then bent over to kiss me, and gently pushed me back against the bed. She then tugged gently on my pajama bottoms, sliding them down until my erection was exposed. I was not sure what she was going to do, but then she turned, sliding her own pajama bottoms down to reveal her ass. She wore tiny cotton underwear, not too slutty but still hot.\n\n\"Follow my lead,\" she whispered, then lowered herself until she was sitting on my penis, her ass cheeks on either side of it so I was nestled right against her. I had never seen her like this before. While I longed to glimpse her completely naked, I was entranced by the sight of her firm, round ass sitting on my erection.\n\n\"I hope this is okay,\" she said, slowly sliding so that my penis rubbed up and down her ass. \"I'm not ready to...\" she began.\n\n\"No, this is perfect,\" I gasped as she rocked back and forth, straddling me and gripping me with her ass. I put my hands on her ass to guide her movement, and she responded by rubbing herself as she rubbed against me.\n\n\"Oh god,\" she whispered, and I knew she was coming. She gasped and I grabbed her ass, pushing against her as my penis slid in and out of her ass cheeks, until I felt myself ready to orgasm. She sensed it, and pushed down hard, so that the head of my penis popped out of her cheeks and I splattered semen all over my stomach. She looked over her shoulder at me, her sexy body shining in the moonlight, and stood up. She stepped over to her bed and slid into the covers.\n\n\"I don't want them checking on us at night,\" she explained. \"Goodnight, Jimmy.\"\n\nChapter 4\n\nI woke up the next morning a sticky mess, but was surprised to see Katie's bed empty. After fumbling for my glasses, I found a note on the bedside table that read 'On beach, parents gone already.' It was nine o'clock, my explosive orgasm from the night before had worn me out. I pulled my bathing suit on and grabbed some toast Katie had left on the balcony before heading down the steps toward the water. Few people were swimming, as the water wasn't warm enough yet. I scanned the beach for Katie, but didn't see her. I took the last bite of toast as I stepped onto the sand, still looking for her. It was another half-minute or so before I did; and when I did, my jaw dropped. Katie was wearing a two-piece that was clearly vintage, from the 1960s. It must have been what she had grabbed on her way out of the vintage clothing store the day before. It fit her perfectly, her toned body and hips accentuated by the style of the bikini. I wasn't the only one noticing, either. Most of the guys on the beach had their eyes on Katie as she walked up to me, wrapping her arms around my neck and kissing me fiercely.\n\n\"Wow,\" was all I could say, and she laughed, twirling once on the spot.\n\n\"You like the suit, I take it?\" she said, laughing again.\n\n\"Yes,\" I said feebly, my eyes glued to her.\n\n\"Well, it's your present,\" she said. Her hair was up, her natural curls accentuated since they weren't weighed down. She looked like a goddess to me, the smooth line of her neck drawing my eyes downward. I struggled to concentrate on her, there was so much to take in.\n\n\"Come on,\" she said, leading me by the hand. \"Let's go for a walk.\"\n\n\"About last night,\" she said, her eyes scanning the beach as we walked. \"That was close.\"\n\n\"I know, I thought our parents might have walked in a second sooner, and we'd be in trouble.\"\n\n\"Not that,\" she said, blushing. \"The other thing. It was close to, you know, actually doing it.\"\n\n\"Oh,\" I said, not sure if she meant that to be a good thing or a bad thing.\n\n\"Well, I mean it was fun, and you certainly enjoyed it,\" she added with a wink. \"I just want to be careful. I mean, I was an impulse away from, well you know. I know you weren't trying to, but I...I wanted to. Really, really bad. But, I don't think it's a good idea yet. I mean, I'm on the pill, and I know neither of us have been with anyone else, so it would have been safe. But I feel like going completely into it would change things. But at the same time, we're doing practically everything else, and I don't know what's right and what's not and...\"\n\nI cut her off with a gentle squeeze of her hand. She looked grateful; she was confused and it showed in the plaintive look she gave me.\n\n\"Katie, it's okay,\" I said. \"I am on board, really. I know it's confusing. If you want to back it down, even by a lot, I am fine. We could just kiss and hold hands. Really, don't give me that skeptical look. I'm serious! I mean, it's amazing and wonderful and I love you, but I don't want to jeopardize anything. I can wait as long as it takes.\"\n\n\"What about what we've been doing? Do you think it will ruin things?\" she asked.\n\n\"No,\" I said, \"but if you do, then I'm fine backing down.\"\n\n\"No, I don't want that. I just didn't want you to feel like I'm stringing you along.\"\n\n\"Katie, I'd never think that,\" I said, and she smiled and kissed me. \"Now, about the other close call, I still can't believe that we almost got caught.\"\n\n\"I know,\" she said with a grin, \"it was fun, wasn't it?\" She raised her eyebrows quizzically at me. Suddenly inspired, I led her up the side street away from the beach. We took the shorter path to our hotel, because I knew our parents would be back around lunch time, and I didn't want to spoil the opportunity. We were heading up the stairs to our room in 20 minutes, both of us giddy; she with the excitement of the unknown, I with anticipation. I shut the door and pulled her to me. She leapt into me, straddling me and almost knocking me over. With difficulty I stumbled toward her bed. The sheets were white linen, soft and glowing in the sunlight. We fell onto the bed gently, laughing and kissing. With little difficulty I stripped off my bathing suit, my erection bobbing in the air. Katie sat up, peeling off her bikini top, then laid back and lifted her ass so I could take off the bottom. \n\nShe looked at me, a fire in her eyes, waiting to see what my grand idea was. I laid next to her, but instead of facing her I was inverted into a sixty-nine position. She grinned, and moved closer, taking my erect penis in my hand and stroking it gently. She lifted one of her legs, giving me free access to the curls of pubic hair and her vagina. I ran a finger up and down her labia, parting them gently, taking in the sights as she stroked me, occasionally licking me. I moved closer, until I was able to gently lick her labia and small clitoris. She sighed as I explored her with my tongue, my fingers stroking her labia. She was already wet but within minutes she was panting and close to her first orgasm. She took her time with me, playfully licking me and putting me in her mouth for a second, all the while keeping a strong pressure on me with her hand. \n\nI felt Katie starting to cum, her whole body starting to tense up. I moved a finger to the entrance of her vagina, feeling her warmth and wetness as she started to cum. As she did, I felt her vagina contract over and over in short spasms. As I licked her more, I gently pushed into her, using the movements of her contract vagina as a guide. I was careful, waiting for her to stop me if it hurt. She offered no resistance, and indeed seemed to push against me, and before I knew it my finger was inside her. I could feel her vaginal walls tighten around me as I continued to lick her. I withdrew a little bit and she whimpered, my penis now in her mouth. She started to suck me with greater intensity and I pushed into her slowly again, this time with two fingers. \n\nAgain, it was slow going, but she started to orgasm and I slowly worked into her until I was slowly penetrating her with my fingers while I licked her. She came again, this time I could feel her vagina clamping down on my fingers, and she took me out of her mouth to sigh, all the while stroking me faster. When her orgasm faded, I started to lick her again but she moved away, making my fingers come out of her. They were sticky with her own lubrication, and I tasted them tentatively as she turned her attention to my penis, which she was now sucking and stroking at the same time. And within a minute I felt my whole body tense up and I started to spasm with orgasm. She kept me in her mouth, swallowing my semen as I emptied myself into her. When she was sure I was finished she let me out of her mouth, and sat up to face me. She was grinning, her face flush, her shoulders relaxed. The sunlight streaming through the window illuminated her freckled face, and I looked up at her in wonder, realizing how lucky I was.\n\n\"Well, we won't get to do that too often when we get back home,\" she said, wiping her lips on her arm. \"But we'll try and sneak it in when we can. She looked down at her pubic hair, now completely wet, and tenderly touched her labia, examining them.\n\n\"I thought it would hurt more,\" she said to herself. \"I had read that everyone's different, but I had expected it to hurt the first time something went inside me. I mean, in a sexual way. Not that I'm complaining,\" she added. blushing, then laid down to face me this time. We faced each other for a while, saying nothing, until Katie finally spoke. \"Well, now what?\"\n\n\"Maybe we should get ready for our parents,\" I said. \"Race you to the shower?\"\n\n\"Nah, let's take one together. We won't get to when we leave, not easily anyway.\"\n\nOur shower was full of groping but nothing beyond that. We didn't dare lose track of time and get caught in a situation we could not explain away. Later that afternoon, while our parents were relaxing in their rooms, Katie and I had walked down to the local ice cream shop to get away. We were walking back, each of us nibbling away at our ice cream, when Katie finally said something I truly feared she would say.\n\n\"We have to tell them, you know,\" she said, her eyes locked ahead of her on the road. It was the same, determined look she had when I had kissed her unexpectedly the week before. We were leaving tomorrow, heading back home, and our vacation and our shared room were going to come to an end soon.\n\n\"Everything?\" I asked in mock surprise. She punched me lightly on the arm, laughing. \n\n\"Just the G-rated version. I don't know how to break it to them, and I don't know what will happen afterward.\"\n\n\"We'll figure out. With our two brains, I'm sure we'll think of something.\"\n\nIt turned out that we didn't have time to put our considerable brain power to work. When we got to the hotel no one was there. Expecting our parents any minute, we sat on the couch on the main porch, watching the high tide recede. \n\n\"It's beautiful here,\" Katie whispered, nudging closer. I put an arm around her shoulder, and she put a hand on my knee. In a split second we were kissing, the roar of the waves were the soundtrack. My hand found its way to her stomach, and I was about to move north toward her breasts when the crashing of the waves was interrupted by a light \"ahem.\"\n\nKatie and I disentangled and jumped off the couch. We were both panting from surprise when my eyes focused after a second or two to find our moms standing behind the couch, their arms folded.\n\n\"Having a good time?\" Katie's mom asked, her eyebrows furrowed. \n\n\"Mom!\" Katie exclaimed. \n\n\"Katie,\" my mom said softly, hoping to avoid an altercation. I was too, and I wasn't sure what was about to happen, when suddenly a plan hit me, and I lightly stepped on Katie's foot to let her know.\n\n\"I'm sorry,\" I said sheepishly, looking at Katie, then our mom's. \n\n\"I'd like you to explain,\" Katie's mom said, \"just what you two think you were doing.\n\n\"Oh, god,\" Katie said, sitting on the couch, her face in her hands. I knew she wasn't crying, but I still thought it was a nice touch.\n\n\"This is embarrassing,\" I said, then added \"I can't believe our first kiss turned out this embarrassing.\" Katie looked up, her eyes red but not crying. She was remarkably quick, because she stood up next to me and addressed our moms.\n\n\"I'm sorry, mom, I'm sorry, Mrs. Cooper, it just happened.\" She looked mortified. Our moms, however, looked suddenly worse for the wear. They, in their act of discovery, had ruined our first kiss-or so they thought, anyway. They both looked strained. Clearly, there was a conflict going on in each of their heads.\n\n\"Well,\" Katie's mom said at last, \"I have to admit that I always hoped you two would find each other.\"",
        "\"We all did, for years now,\" my mom added. \n\n\"But, still,\" Katie's mom said. \"This changes things.\"\n\n\"Oh, Lisa,\" my mom said, \"they just kissed. And for the first time! And what did we do? We barged in and ruined the moment.\"\n\nBoth of our moms started laughing now. They hugged and laughed, seemingly unaware that we were still on the porch. Deep laughs that soon brought them to tears. Katie and I exchanged a quick look as our moms composed themselves.\n\n\"I assume that I can still trust you two,\" Katie's mom said, wiping tears of laughter from her eyes.\n\n\"Yes,\" we said in unison. We stepped closer, and held hands. The intimate gesture was not lost on our moms, who both welled up with tears again. This time, I suspected, tears of joy and relief.\n\n\"When did this happen?\" my mom asked.\n\n\"Just now,\" we both said. Then Katie added. \"It just sort of materialized. I think, deep down, we always knew. And I'm so happy, mom. I can't believe it.\" Again, our moms looked like they might burst into tears, and instead they both hugged each other.\n\n\"Well, your fathers might not be too keen to let you two stay in the same room,\" my mom said. I looked surprised; they were okay with it. They really thought of us as responsible, trustworthy teenagers. I exchanged a look with Katie, and she winked at me. \n\nDinner that night was an extraordinary celebration. Apparently the \"will they, won't they?\" discussion had been going on for years between our parents. Several hours later, as Katie and I were brushing out teeth, and one of our parents had popped into our room for the eighth or ninth time, Katie leaned over to me and whispered.\n\n\"I can't believe they let us stay in this room, still,\" she said, her toothbrush sticking out of her mouth. She looked impossibly cute like that.\n\n\"I know, I actually feel a little bit guilty.\"\n\n\"Well, we'll have to play it extra safe,\" Katie said. \"But still, I bet you won't feel so guilty the next time you put your fingers someplace special.\" She then finished up and headed into the bedroom. I followed her, and her dad stuck his head in the door to say good night. Katie kissed me lightly on the cheek and got into her bed, and I got into mine, and her dad, satisfied, shut the door after beaming at both of us.\n\nNeither of us dared anything that night, afraid that our parents might check on us. The next morning we loaded the cars enjoying breakfast together before leaving. As Katie and I loaded the last few things into the cars, she spoke quietly, so as not to be overheard.\n\n\"I guess your friends' stupid betting pool is over,\" she said with a sigh. \"Still, it will be nice to have a boyfriend, especially one as nice as you.\"\n\n\"And good looking,\" I added with a chuckle. Katie laughed and kissed me quickly on the lips. \"I'm looking forward to going back, too. I mean, I am going to promoted to alpha male of the smart kids, because I've got a hot girlfriend. Still, though. I'm going to miss this place.\"\n\n\"Me too, but we can always visit, Jimmy. Now, come on, we've got a few minutes before our parents realize where we are.\" And she stepped forward, kissing me fiercely, pressing herself so close to me that I could feel her heart beat, and she could feel my erect penis stirring against her.\n\n\"I love you, Katie,\" I said between kisses.\n\n\"I love you, too,\" she said, and pressed herself against me."
    ],
    "authorname": "TxAuthor",
    "tags": [
        "best friend",
        "bikini",
        "blowjob",
        "beach",
        "teen"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/my-best-friend-katie-pt-01-1"
}