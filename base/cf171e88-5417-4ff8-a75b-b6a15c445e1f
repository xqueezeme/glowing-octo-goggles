{
    "title": "M Club Ch. 19",
    "pages": [
        "The first rule of M Club is: You don't talk about M Club. The second rule of M Club is: You don't talk about M Club. Third rule of M Club: No touching anyone but yourself. Fourth rule: No recording devices. Fifth rule: No clothing below the waist. Sixth rule: If this is your first time at M Club, you must masturbate. \n\n* * *\n\nLisa looked at her phone and hesitated. She finally fired off a text to Denby: Can we talk?\n\nIt had been two days since the incident and her best friend was still a mess over the whole thing. Den wasn't talking to Sean at all and had only made a few, curt replies to Lisa by text. Hadn't even taken a phone call. She was getting worried and it hurt to be shut out.\n\nWaiting for a reply, she turned her attention to the television. Camron, her younger sister, had turned on some travel show, but it was impossible to focus on it given her current state of mind. She ended up staring absently at the screen.\n\n\"Hello! Earth to Lisa!\" Camron waved her hand in front of Lisa's face. At some point, she'd gotten up and was now standing over her shoulder.\n\nLisa flinched and flipped her phone upside down. \"What?\"\n\nCamron gave her a skeptical look. \"I asked you if you wanted something from the kitchen.\"\n\n\"Oh, no, thanks.\"\n\nCamron looked about to blow her off, but hesitated. \"Problems with your BFF?\"\n\nLisa grumbled. \"Reading over my shoulder?\"\n\nHer sister rolled her eyes. \"Not intentionally. Much. But it doesn't take a genius to figure out something's wrong with you. You've been like a zombie all weekend, and that's my job.\"\n\nLisa sighed. \"She's been in a funk and won't even talk.\"\n\n\"Boy troubles?\" Camron perked up at the prospect with which she had no small amount of familiarity.\n\n\"Something like that.\"\n\nCamron shook her head. \"Well, of course she won't want to talk to you about it. She needs someone who can relate, and you've never had a serious boyfriend.\"\n\nLisa held her reflex to lash out. Her sister was right, at least on the one count. Denby had never been shy about talking boy issues with her before, though, and there was no one else who she could confide in over this one. Well, maybe Vida, but they weren't exactly friends.\n\nHer phone chimed, and Lisa waived her sister off.\n\nThe reply came: Not ready.\n\nLisa fired off another: You need to say something to Sean. He's bugging me to get through to you.\n\nThere was a pause before the reply came. Talk to him yourself. Hell, you've been wanting him since we started dating. He's all yours. Go suck his cock. Bet he wouldn't hesitate.\n\nThat hit Lisa right in the gut. She knew her friend was still lashing out emotionally, but Den didn't have to go there.\n\nShe took the high road: Just think about it.\n\nCamron returned to the room and gave her a look - part \"I told you so\" and part sympathetic. The latter was unusual from her, but still welcome.\n\nAfter several minutes without any further reply coming, she fired off a text to Sean: Can we meet? Need someone to talk to.\n\nThe reply came quickly: Yeah. Where? I'm at home right now.\n\nShe sent back: I'll be right over.\n\nLisa stood and let her sister know she'd be back later.\n\n\"Where ya going?\" Camron asked in her nosey, digging-for-gossip tone.\n\n\"Out. To save some friendships, I hope.\"\n\n#\n\nSean opened the door before Lisa had a chance to ring the bell. He didn't look haggard, exactly, but certainly lacked the usual sparkle in his eye. She knew him well enough to be able to read in him the same tension she felt.\n\nHe let her in and she wrapped him in a hug before the door was even closed. He tensed for a moment before relaxing and holding her tight. They just held each other in silent support for a while.\n\n\"Guess she's still not talking to you, then?\" He said when they finally separated.\n\n\"Not exactly, no,\" she said. \n\nThe house felt empty. Sean must have picked up on her looking around for his family. \"They're all gone for the afternoon. I stayed to get some homework finished.\"\n\nShe nodded. Unlike Denby, she wasn't terrified at the prospect of facing Sean's mom again, but there was still that uncertainty of what it would be like. There was no getting around how many intimate things she knew about her.\n\n\"How've you been?\" she said.\n\nHe shrugged. \"Surviving. Frustrated that Den won't talk, but I can't do much about that.\"\n\n\"I hear ya. She's taking some of it out on me, too.\"\n\nSean cocked an eyebrow at that. \"Why? Pressure for all the club stuff?\"\n\nLisa shook her head. \"No. Well, not that she's said. Just taking cheap shots at me and you since I'm trying to be a go-between.\"\n\nSean frowned. \"That's hardly fair. Like what?\"\n\nLisa wasn't sure she wanted to go into it, but she couldn't deny the appeal of having someone to talk with. \"Well, she seems to think I've been crushing on you since you two started dating. Suggested I should come over here and...service you.\"\n\n\"Oh.\" He looked sheepishly uncomfortable. \"You, uh, wanna go upstairs and talk? And by that, I actually mean talk.\"\n\nShe nodded and followed him up the stairs to his room. She'd only seen it twice before, both times just a quick in and out with Denby, so it was still somewhat new to her - an insight into his personality. Every surface was piled with books and games, old science projects and school awards, and miscellaneous knickknacks from vacations and elsewhere. Despite the quantity of stuff, his floors were relatively tidy and there seemed to be a sense of order to everything.\n\nHis laptop was open on the desk, a paper in progress still visible, and subdued music she didn't recognize was playing softly from its speakers. He gestured toward the made bed or desk chair, and she settled in on the latter. Sean sat on the edge of the bed closest.\n\n\"So, uh, was she right?\"\n\n\"About what?\"\n\nSean pursed his lips. \"About you having a crush on me.\"\n\nLisa closed her eyes. She hadn't expected him to latch onto that. Was the feeling mutual? \n\n\"Probably,\" she said, cracking her eyes in time to see his nod. \"I don't know. I guess I was always a bit jealous of her dating life, especially since I wasn't really comfortable dating. It wasn't that I didn't want to, but I could always find a reason not to with every guy. Until you. And by the time I realized that, she'd already snatched you up. I think she knew it, too, but knew I wouldn't do anything about it. I was never a threat.\"\n\n\"Yeah, I can't see you being that kind of friend. Andy was kinda the same way with Denby, I think.\"\n\nLisa nodded. \"I've seen the way he looks at her. I think it's more than just checking out her b's.\"\n\n\"B's?\"\n\nLisa chuckled. \"Boobs and booty.\"\n\nSean sighed. \"Yeah. I know he'd never have hit on her, but then the club thing happened. He still wouldn't make a move, but I doubt it did anything to quell his interest.\"\n\nLisa kicked her legs out and propped them up on the edge of the bed beside Sean. \"When you and Den tried to hook me and Andy up, whose idea was it?\"\n\nSean pondered for a bit. \"Honestly, I don't really remember. It just seemed to make sense.\"\n\n\"Ever wonder if it was a subconscious thing, a way to protect yourselves from your friends?\"\n\nSean smiled and patted her leg. \"That's...wow,\" he said. \"I never thought of it that way, but maybe deep down there's something to it. I think we'd just hoped to include our friends in double dates. Less guilt in spending time away from you and Andy.\"\n\nLisa smiled. \"Keep your friends close and your enemies closer?\"\n\nSean playfully slapped her knee. \"No. You two were never our enemies. Not even subconsciously.\"\n\nLisa nudged him with her toes. \"Don't be so sure. The mind is crafty, always doing things for you you're not aware of.\"\n\n\"You sound like a psych major in waiting.\"\n\nShe shrugged. \"Can I ask you something personal?\"\n\nSean chuckled. \"I'm pretty sure we're well past having to ask if that's okay.\"\n\n\"Did you ever have a thing for me?\"\n\nSean's eyes widened. \"Wait. You actually have to ask that?\"\n\nLisa blushed. Apparently, that was a yes. \"Not just a physical attraction?\"\n\nSean rubbed her bare leg. She liked his touch, even something simple like this.\n\n\"I've liked you on some level pretty much since we started Highland together,\" he said. \"I mean, sure, you're attractive, but I always thought of you more in terms of your mind - your intelligence and kindness. I might have asked you out if I knew you a little better. I don't know. I guess I just was a bit intimidated by you.\"\n\nLisa gawked. \"Me? I'm hardly intimidating.\"\n\n\"It's more of a fear of the unknown. Like I was afraid you'd already analyzed me and would find a reason to reject me. I don't know how to explain it. It's silly.\"\n\nLisa leaned forward and patted his hand on her leg. \"It's not silly. It's pretty much the same reason I didn't date. Afraid of what the boys would think of me, how I'd been written off for one reason or another, or they'd have already asked me out.\"\n\nSean shook his head. \"If we ever told people what we really thought, it'd be so much easier to start relationships.\"\n\nLisa nodded. \"So, after you started dating Denby?\"\n\n\"I like her. I really do. But I also got to know you. I wouldn't have acted on it, but then you asked me to jerk off for you two that one night.\"\n\nLisa groaned in fond reminiscence. \"I still can't believe I did that.\"\n\n\"I can't either, but that changed everything. I was totally into you and Den. And then she started the whole thing with wanted both of us to play together - with and without her. I still don't know what to think about all that. I couldn't say no, because I totally wanted to, but a small part of me was terrified that it couldn't possibly last without someone getting hurt.\"\n\nHe saw it exactly as she had. The collapse hadn't been what she'd expected, but the end result was pretty close to her worst fears. Now she only could hope things smoothed over with her friend.\n\n\"I'm the same way,\" she said. \"I like the things we've done, you and me, but every time Den gets us together, I'm afraid I'll get too close, that I won't want to give you up. And it's already affecting my other potential relationships.\"\n\n\"Andy?\"\n\nShe nodded. \"He's nice and all, and interested, but I'm judging him against you. Any guy would be judged against you.\"\n\n\"Sorry.\" He didn't sound too sorry, but Lisa didn't mind. She'd meant it to be flattering.\n\n\"Andy and I got things straightened out. It'll never happen as a relationship, but we've agreed to be friends.\"\n\nSean smiled. \"Friends or friends? I'm guessing the latter.\" \n\nLisa respected his open-mindedness about the intimate nature of her relationship with Andy. After all these confessions, he could've been upset or possessive. It didn't stop her from feeling like she'd almost been cheating on Sean behind his back, despite their lack of any relationship status.\n\n\"I can't expect Den to invite me along on all your dates,\" Lisa countered, matching his grin.\n\nShe got up from the chair. \"Gotta use the girls' room.\"\n\n\"Need a drink or anything?\"\n\nLisa declined and found the bathroom across the hall. While taking care of business, her mind was mired in wondering what could have been. How would things have been different if she and Sean had started dating? Would Denby have ever been a factor, a threat? Or would Den and Andy have hooked up in the way they'd hoped she and Andy would? The M Club, almost certainly, would never have happened.\n\nWith the club on her mind as she returned to Sean's room, she asked, \"Did you keep the journal after your mom found it?\"\n\nSean cocked an eyebrow. \"Yeah. I stopped adding anything to it, though. That was just after Vida joined us.\"\n\nLisa nodded. That left more than enough salacious details for his mom to have read. \"Can I see it?\"\n\nSean hesitated for a moment, probably worried about the insight she'd get into his perception of events, but he soon rose and dug through a pile of books on the back corner of his desk. He pulled out a battered old notebook and handed it to her, then sat back down the edge of the bed. She waved at him to scoot over and she sat and then laid back on his bed with her head on his pillow. It smelled of him, which brought many pleasant memories front and center. He laid down beside her, his bed small enough that he couldn't help brushing arm to arm.\n\nLisa flipped open the book and found the fantasy football notes he'd previously mentioned. His mom had to have been really nosey to dig this far into his personal stuff. How badly had Sean screwed up to raise her suspicions?\n\nShe finally found the first entry and skimmed through it. His writing was good and for the most part the story was accurate to the best of her recollection. He did include some of his own personal thoughts and feelings, including his concerns, all of which served to make it more intimate. She skipped ahead until finding the entry about the day she'd hosted the M Club while her family was away:\n\n\"I arrived at Lisa's place in the afternoon, about the time Denby said she and Andy should be back from their solo and ensemble competition. It's safe to say I was shocked to find Lisa answering the door completely naked. She said she'd wanted to spend an entire day naked and this was the first chance she'd ever had. Needless to say, I enjoyed her efforts. Of course, things got a little awkward when Den and Andy ended up being a few hours late thanks to bus problems.\n\n\"Since what happened in those few hours were not part of M Club business, I'll only say that I had a good time. Very good time. And it was all with Denby's blessing. That either makes her the best girlfriend ever, or the most baffling.\"\n\nLisa could feel Sean's tension in the way he scarcely moved or breathed.\n\n\"You skipped over the best bit,\" she said, turning her head. He turned his own head until they were almost nose to nose.\n\n\"It wasn't official,\" he said. \"And even though Den wanted us to...fool around...I wasn't sure she'd take it well if she ever read this.\"\n\n\"Probably not.\"\n\n\"I don't think I could have written it without revealing how I felt. About you.\"\n\nLisa swallowed the lump in her throat. \"That was the first and only time I've felt like I knew what it was like to really connect with a guy. It felt like you were my boyfriend.\"\n\nSean nodded. \"Scared the hell out of me, too. It was more than just fooling around.\"\n\n\"So, it wasn't just me?\"\n\n\"No.\" His voice was a whisper.\n\nIn that moment, she desperately wanted him to kiss her. She wanted not just to taste those lips, but to regain that feeling of being in love and sharing it. She could kiss him, and he almost certainly would kiss back. Regardless who initiated, however, it would almost certainly eat at them, the feeling of having betrayed Denby.\n\n\"So, what do we do?\" The words coming from her mouth were so soft, she barely heard them herself.\n\n\"I know what I want to do, but...\"\n\n\"I know.\"\n\nThey laid together in silence, lips and noses almost touching, eyes gazing into the other's. Lisa felt Sean's fingers brush the back of hers, and soon they interlocked. Her heart pounded and she licked her lips.\n\n\"That night, after we made out, when Den and Andy got back?\"\n\nSean nodded. \"Yeah?\"\n\n\"Den and I talked. I don't know how much she told you about her and him in the library, but I guess he really got her all turned on. In ways you don't, supposedly.\"\n\nSean's expression darkened slightly. \"Okay.\"\n\nLisa tightened her grip on his hand. \"Not like she wanted him over you. Just, I think they connected in a way like we did that afternoon. I even asked her later, if she'd swap you for him if there were no hard feelings.\"\n\n\"And?\"\n\n\"She never answered.\"\n\nSean considered her revelation silently. She wasn't sure why she was telling him this, other than to perhaps make him aware that things weren't so clear cut as to where it should or could stand between he and Denby. Maybe she was just being selfish, trying to justify taking what she wanted.\n\nWhen he didn't say anything, she continued. \"And she was really excited about what you and I had done, even when I told her I was worried about how kissing you made me feel. She wanted me kissing and making out with you.\"\n\n\"You think it helped her feel less guilty about what happened between her and Andy?\"\n\n\"Maybe.\"\n\nHe closed his eyes, but his fingers continued to intertwine with hers. His thumb gently rubbed the soft spot between her thumb and forefinger.\n\n\"Den also asked me who I'd want for my first lover - you or Andy.\"\n\nHe gulped but said nothing.\n\nLisa's heart pounded. \"I told her it was you. She already knew and it's what she wanted, too.\"\n\nHis eyes were her entire world in that moment - rich brown flecked with green, intelligent, wise, caring, and always on the brink of twinkling. They were probing her very soul and she did everything in her power to let him in, laying herself bare in a way she couldn't possibly accomplish by removing her clothing. There was nothing she wanted to keep hidden from him.\n\n\"I don't know what to say,\" he finally said, whispering.\n\n\"You don't need to say anything.\"\n\nThey kissed. She wasn't sure who started it but it didn't matter. It began softly, lip to lip, a question posed to one another. They kissed again, as if to ask, \"Are you sure?\" Lips parted, tips of tongues met halfway, and they melted into one another.\n\nLisa had kissed Sean on a couple occasions, but nothing was like this. Never had it carried such emotional inertia. It was a revelation that flipped her world upside down. Was it real or just hormones? It felt more real that breathing and she latched on as if he were a life raft after she'd spent her life drowning.\n\nSean wrapped her in his arms and she snuggled into the solidity of his chest. She caressed his cheek and ran her fingers through his hair, holding his face close lest he change his mind and withdraw. Her fears were unfounded as he met her kiss for kiss, touch for touch.\n\nFor some time, that's all they did - kiss and hold each other. It felt to Lisa like she was trying to convince him of the sincerity of her feelings, and perhaps he was doing the same for her. At some unspoken point, the softness of their intimacy took an edge of urgency, with kisses becoming aggressive as their tongues dueled in foreign territory, lips got playful nibbles, and bodies pressed harder together.\n\nSean must have read her mind, because his hand cupped her breast just as she was about to beg him to touch her. It was outside her shirt, but she still trembled at the contact and moaned through their kissing. She wrapped a hand around his ass, squeezing hard and pulling his hips into hers.\n\nHe got the hint and soon his hand was under her shirt, bunching it up, and then digging under her bra. She desperately wanted him to just get her clothes out of the way but understood the unwillingness to break off their kissing. It was as if taking a breath, even for a second, might give them a moment to come to their senses and reconsider this course of action. Her body shook as his fingers slid across bare skin and then contacted her hard nipple.\n\nShe threw a leg over his and pressed her crotch against his. There was no mistaking the erection under his shorts and she tried, unsuccessfully, to grind her clit against it. The angle wasn't quite right, and it frustrated her. Only the overwhelming number of other sensory inputs gave her a shred of patience.\n\nSean's lips separated from hers, only to trace a line of kisses along her cheek and under her ear. He then nibbled on her earlobe and she let out an audible squeak. She felt his smile.\n\nWithout warning, he rolled onto his back and pulled her along. She managed to end up straddling his crotch and finally had a good angle of contact between his erection and her clit. She kissed him fiercely while beginning to grind pelvis to pelvis.\n\nSean's hands pulled at her shirt and she pushed herself up just enough to let him lift it off. She paused for a moment to pull her long, red hair back into a fresh ponytail, secured with a scrunchy, after his efforts had set it all askew.",
        "Looking down, she saw in him the same unrestrained passion that surged through her body. He met her gaze, serious and determined and hungry.\n\nWhen he reached up, Lisa realized one of her breasts was still hanging out awkwardly from her bra. She relieved herself of the uncooperative garment and tossed it on the floor beside her shirt. Having the girls hanging free felt so much better. The last thing she needed coming between her and Sean was something as banal as clothing.\n\n\"Better?\" \n\nHis smile said it all and he reached up to cup both. \"Much.\"\n\nShe bent over and kissed him while his fingers went to work on her nipples. \"Still too much clothing in the way.\"\n\nHe moaned and thrust his hips up to meet her steady grinding. \"I'm open to suggestions.\"\n\nLisa scooted forward just enough to allow one of her breasts to dangle in front of Sean's face. He lifted it to his mouth and licked and then gently sucked the nipple into his mouth. Bliss.\n\n\"How long do we have?\" She hated the small part of her that had to remain pragmatic in a moment like this.\n\n\"Not sure,\" he said between licks and kisses. \"Maybe half an hour, maybe two or three.\"\n\nSo, they had to be a little careful. Ideally, she wouldn't even be here when they returned. She didn't fear facing Sean's mom in the aftermath of the incident at school but being here alone with Sean and no Denby could raise questions. That line of thinking caused her a brief pang of guilt.\n\nSean's mouth working over her nipples quickly overwhelmed her reservations. She reached down between them and grasped his cock through his shorts. He thrust into her hand in response. After rubbing him for a bit, she one-handedly worked open the button and zipper, then slid her hand in underneath his underwear. The tip of his cock was slick with pre-cum and she rubbed it around with her thumb while wrapping the rest of her fingers along the shaft. He thrust even harder against her touch.\n\nLisa rose to her knees, taking her breasts out of range of Sean's capable mouth. Given the attention he was getting, he didn't seem to mind. Nor did he appear bothered when she removed her hand from his cock to pull his shorts and underwear down his legs. His long cock pointed toward his knowing grin and he simply laid there waiting to see what she would do next.\n\n\"You did say Den told you to do this, right?\"\n\nThere it was - the same hint of wrongness about what they were doing. She didn't want to keep worrying over it. There would be regrets either way. Neither deserved the ongoing cold shoulder Denby was giving them.\n\n\"Need to see the text?\" She ran her fingertips up his legs and inner thighs, stopping just before reaching his scrotum.\n\n\"I'll take your word for it.\"\n\nLisa smiled and bent over, laying kisses up his thigh along the same trail her fingers had just blazed. When her lips grazed his balls, his cock twitched. She loved the way he responded to her touch. It was empowering to know she had his complete and utter attention, that he was beholden to her whims.\n\nShe brushed her cheek against the length of his shaft. Heat radiated off it, like a poker removed from the fire. She repressed a giggle at the mental imagery and resisted the urge to ask him if he'd like to poke her with his poker.\n\nIt had been a week and a half since the first time she sucked Sean's cock. That experience had been transformative for her, fueling nearly all her fantasies and leading to an insatiable urge to repeat it as soon as possible. Andy, thankfully, had been a very willing partner just a few days later following their club meeting turned hot tub party turned chaste movie night at Vida's. They'd found a quiet place to park on the drive home and she had been quick to fish his cock out and suck him dry. That second time had felt dirty, in a good way, compared with the touching sweetness of the first time in the park with Denby urging her on. The boys' cocks were different, their cum tasted different, and she loved everything about each experience. She needed more.\n\nLisa opened with a long lick up his scrotum, feeling through her tongue the way his balls shifted under the pressure. He had a unique scent about him, particularly around his cock, that she couldn't quite describe but which heightened her arousal. His trimmed hairs tickled her lips and cheeks as she continued upward with her tongue along the length of his shaft in a single lick.\n\nSean moaned appreciatively and ran his fingers along her head and the back of her neck - a gentle caress rather than an attempt to direct her actions. Lisa savored that simple gesture.\n\nShe licked the length of his shaft several more times before realizing another drop of pre-cum had formed on the tip. She took the head of his cock in her mouth, sealing it with her lips, and indulged in the sweet delicacy. He throbbed in response but did not thrust or try to rush her.\n\nLisa made him keep waiting. After gently sucking the tip for a bit, she returned to kissing and licking the shaft, occasionally moving it by hand to gain access to the other side. She then went back to work on his balls, massaging them gently with her fingers before taking one and then the other in her mouth. She was surprised to feel his erection extended through his scrotum and went into his body almost near his sphincter. \n\nShe sensed a rising urgency in Sean at her teasing and she was eager to get him off, so she returned to his shaft and took him into her mouth. She moistened the tip until he was slippery enough to bob up and down on, taking perhaps half his length into her mouth. With her hands, she both fondled his balls and stroked the bottom half of his cock. The feel of him filling her mouth was the marvel she'd been consumed with and she was content to continue as long as it took.\n\nSean's hand reached down her shoulder and around her side until he cupped one of her breasts. She wanted to focus on his pleasure but didn't mind his efforts to return the favor. It didn't take much tweaking of her nipple to get her wanting more from him. \n\nShe glanced up at Sean and he gave her a wink. Without removing his cock from her mouth, she smiled. He held his free index finger up and twirled it around a couple times. She got the hint.\n\nReluctantly, Lisa relinquished Sean's cock long enough to stand up and remove her shorts and panties. There was nothing playful or seductive in the act as she was in a hurry to get back to the blowjob. Sean, meanwhile, stripped his shirt, leaving them both naked. She loved the way his eyes roamed over her curves.\n\n\"Better?\" She gave him a quick hip-cocked pose.\n\nHe curled a finger, beckoning her back to the bed. \"Better.\"\n\nShe knelt at his side and then straddled his chest. His hands rose to her hips and she lowered her pussy to his face, letting him guide her to the ideal spot. When she felt his tongue slide up the length of her slit, she knew they'd achieved proper alignment.\n\nSean went to work on her pussy while she bent over and took his cock back in her mouth. The intense stimulation made it difficult to give him her full attention, but she was not going to complain. Given the urgency of not knowing how long they had, they didn't necessarily have the luxury of taking their time. She went at his cock like it was a race, earnestly sucking away while stroking the base.\n\nBefore long, they'd settled into a sort of groove, riding the waves of attention provided by the other. Lisa was pleased with herself when Sean warned her he was nearing climax. His licking became understandably distracted and she doubled her efforts, giving him not a moment's respite. She felt his cock swell as he thrust his hips up, and a moment later the warm, salty gush filled her mouth. Each time she tasted cum, it became more appealing, and she held him firmly to avoid losing any of it.\n\nHe remained hard in her mouth while she milked out another smaller spurt followed by a few dribbles. After a little more attention, however, his hips pulled back, perhaps signaling a heightened sensitivity going beyond pleasure. Reluctantly, she let him out of her mouth, wiping her mouth on the back of her hand before bending down to plant a soft kiss on his balls.\n\nSean, recovered, pulled her hips back down and resumed his enthusiastic licking. While pleasurable, he wasn't quite getting the right spot, so she slid forward and then off him. He looked disappointed until she laid down beside him and gave him a heated kiss on the lips.\n\n\"You may continue now,\" she said, teasing him. He got the message and moments later was kneeling between her spread legs.\n\n\"Yes,\" she said between sighs. \"Much better that way. Use your fingers, too.\"\n\nSean obliged, remembering what she and Denby had taught him previously about hitting her g-spot. Soon, he had her on edge with a multi-pronged assault on her sex, and she couldn't help but lift her hips to his mouth. She absently pulled at her nipples while her eyes rolled back behind closed lids.\n\nTime lost any meaning as her climax slowly but surely built. Her breathing became labored and just as the peak was imminent her head began to buzz to the point where she couldn't even hear, like suffering from a massive head-rush. Incoherent words and moans surely left her mouth, probably loud enough that anyone else in the house would surely have heard, but she was beyond caring. All that mattered was his tongue and the way it played her like an instrument.\n\nFinally, she had to push his head back. As he sat up, grinning wildly, her body collapsed on his bed, every muscle going limp. They couldn't have been going at it for more than fifteen minutes, but she felt like she'd just run a marathon.\n\n\"I needed that,\" she said.\n\nHe nodded. \"Me too. Glad we could help each other out.\"\n\nAs she laid there, spent, he kissed his way up her tummy, between her breasts, and then took a side trip to playfully kiss and suck each nipple. After her ticklishness kicked in and she pushed him back, he resumed his journey up her neck to her earlobe, again nibbling despite her laughing protests, and finally arrived at her waiting lips. She could smell herself on his lips but didn't mind, savoring the passion embedded in each kiss.\n\nHe eventually settled in on the bed beside her, legs intertwined, and they continued to kiss softly and touch and hold each other. There was an intimacy to it, more so than their oral sex, that left Lisa feeling like she was betraying her friend. The sex could be a physical need and response, but this was a touching of souls. How could Denby completely shut out Sean after having shared a connection like this? She wouldn't even let him try to apologize.\n\nMaybe they never really had connected like this. Lisa knew about their making out and the things Denby had told her about her feelings for Sean, but how much of it was real and how much was just new relationship excitement? For that matter, Lisa could question her own feelings toward Sean. She had no real relationship experience to compare against. Was it real or just hormones? She wanted to believe she could tell the difference, that her respect for him as a person over the course of years counted for something.\n\nSean must have sensed her introspective moment. \"Something on your mind?\"\n\nShe rolled onto her side, pressing into his body and draping a leg over him. \"Just processing how I feel about this.\"\n\nSean looked concerned. \"That sounds serious. Same second thoughts I'm having?\"\n\nLisa didn't want to hear that. \"I'm sorry. I shouldn't have taken advantage of you.\"\n\n\"Wait, what? Advantage of me? No, no, no...\"\n\nSo, he didn't regret what they'd just done for her sake. \"Den?\"\n\nHe groaned. \"Yeah. Still. You too?\"\n\n\"Her. You. Me. Us. You two. Everything.\" She paused and ran a hand over his chest, feeling his heartbeat. \"This, you and me, felt very right. Scarily so.\"\n\nHe nodded. \"Yeah. Exactly.\"\n\n\"I used to imagine you and me and Den, spending a day or weekend together. Lots of naked fun time. Making love to each other, sharing everything with my best friends.\"\n\nSean paused before saying anything. \"Used to?\"\n\nShe sighed. \"Well, if I try to picture it now, it's all weird. It's how I feel about you and seeing you and her together. Before, it was just fun and friends. Now, I don't know.\"\n\n\"Fun as it's been, playing with both of you, it is awkward. I always worried that Den would get jealous if I did something the wrong way.\"\n\nLisa propped herself up on an elbow. \"Exactly. She seemed so good with you and me, with the three of us. I just can't get my head around that, no matter how open-minded I try to be.\"\n\nHe looked up at her and she knew he got it completely. They had the exact same thoughts and fears. At least with him, she didn't have to wonder where she stood. Den, despite all the shared, felt increasingly distant.\n\nSean said, \"You think she was trying to get us together...?\"\n\n\"So she could date Andy?\" Sean nodded, but she shook her head no. \"Well, at least not at first. I think she felt bad for me not having a boyfriend or any experience. At first, it might have been innocent. Later, maybe. Maybe.\"\n\nLisa settled her head back down, this time on Sean's shoulder. Their cheeks brushed, and he turned just enough to kiss her. She ran her hand over his chest and rubbed her leg up his thigh until bumping into his cock. It didn't take long before she felt him begin to harden under her.\n\nShe wanted nothing more than to bury her concerns and live in the moment. Why worry about what she couldn't control? That was part of the problem - she did have some measure of control over what she did or didn't do with Sean, and she really did worry about things with Denby.\n\nHer body told her brain to take a flying leap. She reached down and took his erection in her hand and stroked him the rest of the way back to full hardness. Sean responded with harder kisses and a hand upon her breast.\n\nShe threw her leg the rest of the way over Sean's waist, then climbed up until straddling his cock. He smiled up at her and slid a hand up her side back to her breast. She loved the way he looked at her - lustful, sure, but also respectful and adoring.\n\nShe pressed her pussy into his cock, the length of the shaft engulfed by her labia. The contact with her clit sent a pleasant buzz throughout her body. He pushed gently up into her, a natural response to this position.\n\nLisa wanted to take him, feel him inside her, give him her virginity. Tapping the brakes, though, she instead slid forward and backward along his shaft. He was soon slick with her juices and the action created an intense form of stimulation. Sean was clearly getting as much from it, as he thrust up into her with each pass.\n\nShe leaned forward and kissed him hard, shoving her tongue into his mouth. He pulled her in tight and kissed just as hard back. All the while, she slid her hips back until she felt the tip of his cock poking into her...right there. As slick as she was, it would only take a small shift on her part or a tiny thrust on his and he'd be inside her. They both knew it and she wondered if he would make the move. Or would she be the weak one?\n\nHe didn't push, but neither did he pull away. The feel of his cock's head nudging up against her, nearly inside, driving her to the brink. How did he have such self-control?\n\n\"I want you,\" she whispered. \n\nSean froze under her. Had she ruined it? Then he nudged against her just a fraction of an inch. This was it, they were really going to do it.\n\nThen he pulled back that same fraction of an inch and his held breath came out. He shuddered under her body.\n\n\"I want you more than anything, right now,\" he said. \"But...\"\n\nFuck. He was right, and she hated herself for being disappointed. \n\n\"We both have to be sure.\"\n\nLisa sighed. \"Fuck Denby.\" She said it without malice, however, just resignation.\n\n\"I'd rather fuck you.\" He met her eyes and she knew it was truth.\n\n\"She won't hear that from me,\" she said, managing a little smile.\n\n\"Or me.\"\n\nLisa kissed him again, then pushed her pussy against his cock. She made sure the angle was such that instead of sliding inside her, his shaft pressed along her clit. It was still good...very good. She pushed herself back up to a vertical position and set her full weight on him.\n\n\"Guess we'll just have to use our imaginations,\" she said.\n\nBetween her lust and frustration, she went after Sean with abandon. She slid her pussy back and forth along his cock, hard and fast. She could almost imagine him being inside her, going in and out rather than through her labia, but the sheer intensity of stimulation across her clit soon had her wondering if this might not be the more intense experience. Finding the answer could wait for another day.\n\nSean couldn't thrust up in time with her rapid pace, so instead he laid back and let her lead while holding onto her breasts for dear life. Lisa savored the expression of pure bliss on his face and focused all her efforts on changing that to one of orgasmic ecstasy. \n\nHis hands moved to her hips, pulling her in tighter still. She could read the change in his face moments before he climaxed. Lisa watched as a modest spurt splattered across his chest, milked out by her actions. \n\nLisa was so close to a climax of her own that she didn't slow her pace. She hoped he would stay hard long enough for her to finish and wouldn't be so sensitive after his climax as to have to push her away. Leaning forward, bracing her arms on his shoulders, she dug deep and ground into him even harder and faster.\n\nFinally, she reached her peak and savored every moment of it, clenching around his cock and squeezing so hard with her legs he'd probably have bruises on his hips. When she could open her eyes, she found Sean looking up at her with blissful contentment. She lowered herself on shaky arms until her sweaty tummy and breasts mashed into his sticky mess, their mouths meeting in soft, calming kisses.\n\nAfter some time, with their intertwined heartbeats settling, Sean smiled. \"I have trouble imagining going all the way being much better than that.\"\n\nLisa smiled back. \"Guess we'll have to find out, one way or the other.\"\n\nSean's smile slipped just a notch, but he nodded in agreement. \"One way or the other. Soon.\"\n\nThe sound of a car door shutting just outside the house caused them to both jump. Lisa was off Sean with feet on the floor faster than she thought possible. They were both a mess and there would be no hiding what they'd just done if someone came straight upstairs. Her face felt flush and sweaty, and both were covered in his semen. The room probably reeked of sex.\n\nShe took a quick look around the room but found no box of tissues or anything else suitable for quickly wiping up. What'd he do when he jerked off alone? For lack of anything better, she picked up her discarded panties and wiped the worst of it from her chest and then Sean's. He looked startled for a moment, then shook his head in amusement.\n\n\"Bathroom,\" Sean said, reaching for his own shorts. \"Go, quick. Take your time to clean up.\"\n\nLisa scooped up the rest of her clothes, peeked out into the hallway to make sure it was still clear, then darted across to the bathroom and locked herself inside. Her heart was pounding almost as hard as it had at the end of their not-quite-fucking, but with a few long breaths it calmed down. \n\nAs the craziness of the moment settled, she looked at herself in the mirror. Her reflection was still the outline of the girl she'd known all her life - slightly softer and curvier than she'd have preferred, but pretty in her own way. The details, however, had taken on new characteristics. The pasty white, freckled skin was flush and blotchy red with exertion - that freshly fucked look. Her eyes smoldered with confident energy. She felt older, worldly, mature. Maybe a little silly and childish, too. There was no denying they'd just about been caught by his parents and were desperately trying to avoid suspicion, like teenagers breaking the rules.",
        "She was stark naked in her boyfriend's house with his parents, at this very moment, walking in through the front door. She ran a hand across her breasts. Crazy, empowered, sexually potent. This was the Lisa she'd known lurked, deep beneath her prim and self-conscious fa\u00e7ade.\n\nWait, boyfriend? How'd that idea cross her mind? The very notion slipped right into her chaotic mix of emotions - what she had, what she wanted, and what she feared.\n\nVoices came up the stairs, reminding her she needed to focus on making herself decent. She quickly blotted as much of the mess from her panties as she could with toilet paper, then flushed it away. Even hearing muted voices coming from downstairs, Lisa found herself procrastinating getting dressed. She felt so deliciously naughty being naked. What would it be like to get caught?\n\nShe shook her head. Enough. She and Sean, and the rest of the M Club, had done more than enough flirting with risk recently. Hell, they'd gone past flirting and right to the whole enchilada when the principal caught them in the most compromising of positions. If she wasn't careful, this willingness to indulger her fantasies could get her in a lot more trouble than it already had.\n\nLisa dressed, almost reluctantly, and washed her hands and face. Over the last few minutes, her complexion had returned to something resembling normalcy. She felt as ready as she could to face his family.\n\nShe opened the bathroom door and found Sean's mom standing in his bedroom doorway. They'd been talking softly enough she hadn't even been aware of Mrs. Gregg's presence. At Lisa's appearance in the hallway, she turned and gave a nod of acknowledgment.\n\n\"Hello, Lisa,\" she said. \"Hope you're doing alright. Sean mentioned that Den isn't exactly on speaking terms with you, either, right now.\"\n\nHow much else had they shared since the incident? Lisa thought she probably should have asked, but at this point she also trusted Sean enough to do the right thing. It shouldn't have been any surprise that his mom would know about Sean and Den not talking.\n\nLisa shrugged. \"Doing okay, I guess. She's at least responding to a couple of my texts once in a while. Maybe with a little more time.\"\n\nMrs. Gregg opened her mouth to say something, then hesitated. \"I hope so.\"\n\nThere was a hint of something unsaid in her voice, like Lisa was being judged but Mrs. Gregg was going out of her way to hide that fact. Did she suspect something more in Lisa's presence here? She'd certainly have every right to. It made Lisa feel guiltier for what she and Sean had just done. Why had she been so foolish as to think coming over here was a good idea? Because she wanted Sean and her best friend, the only one she'd ever felt comfortable unloading on, was shutting her out.\n\nLisa changed gears. \"I never got a chance to thank you for the other day. I'm not sure what you said to Principal Weimer, but...\"\n\nShe didn't want to open that can of worms, but unlike Denby she felt openly acknowledging it was the best way to move on. And she did feel grateful to Sean's mom.\n\nMrs. Gregg's mouth tightened just a bit, but she still made a small smile. \"We all make mistakes. As long as we learn from them, I think that's enough.\"\n\nLisa got the hint. \"Yeah.\"\n\n\"I was about to start dinner,\" Mrs. Gregg said, thankfully ending that line of conversation. \"Will you be staying to join us?\"\n\nLisa appreciated the invitation, but knew she'd feel incredibly awkward. It wasn't like she was Sean's girlfriend, nor had she even been much of any kind of friend until recently. She'd just spend the entire dinner wondering what Sean's mom was thinking. Denby's stance made a little more sense to Lisa, even if she was taking it to unhealthy extremes.\n\n\"Thanks, but I have to pass,\" she said. \"Should be getting back home soon, anyway.\"\n\nMrs. Gregg backed out of Sean's bedroom doorway toward the stairs. \"Well, you're welcome any time.\"\n\nLisa wondered if she could ever be as cool of a mom as Mrs. Gregg. The revelations and other crap she'd had to go through with Sean and then the entire club lately? How many moms could handle that without blowing up, let alone taking it in stride?\n\nOnce Mrs. Gregg was down the stairs, Lisa poked her head around Sean's doorway. Almost instantly, she could smell the tangy odor of their sexual escapades. Shit, shit, shit. His mom had to know and once again just calmly stood there as if nothing was amiss.\n\n\"You okay?\" Sean sat, dressed, on the chair at his desk. He'd managed to tidy up his bedsheets and there were no other obvious signs of their make out, but it hardly mattered.\n\n\"She knows,\" Lisa whispered as she slipped into the room, leaving the door open.\n\nSean's face lost a shade. \"You're sure? How?\"\n\n\"You can smell it from the doorway.\"\n\nSean sniffed the air, but probably couldn't smell it from having been in the room all along. \"Crap.\"\n\n\"I can't imagine what she's thinking.\" In truth, Lisa could imagine a whole bunch of things.\n\nSean sighed. \"Well, she seems to have been pretty open-minded about everything so far. I'm guessing she'll just let me deal with my own mistakes. Live and learn.\"\n\n\"Am I a mistake, then?\" Lisa felt a flash of annoyance at his words but tried not to overread them.\n\nSean's eyes went wide. \"What? No! No, of course not. I just...you know how everything is. You're right in the middle of it with me.\"\n\nLisa stepped forward and took his hands. \"Yeah, I know.\"\n\n\"If you were a mistake, I could only be so lucky to keep making them.\" Sean gave her a little smile that melted her heart.\n\nShe leaned down until they were almost nose to nose. \"Care to make one more poor life choice?\"\n\nHe grinned. \"Is it with you?\"\n\nShe kissed him, and he kissed back. It lingered but was no longer a desperate prelude to more. Rather, it sealed a level of understanding. At least between the two of them, they knew where they stood.\n\n\"I really should get going,\" she said as she stood. \"I'm still going to keep working on Den. She has to break and come to her senses eventually. She's still my best friend and I can't let any of this change that.\"\n\nSean nodded. \"Getting between you two is the last thing I want. Even if that means I have to step aside from both of you.\"\n\nLisa knew he meant it, though she didn't like hearing it. On one hand, a small part of her wanted to know he put her above everything else. But that was silly. And then on the other hand, she wanted to see Denby happy, even if that meant finding a way to reconcile things between her and Sean.\n\n\"Hopefully it won't come to that. Walk me out?\"\n\nSean took her hand while they walked down the stairs, letting go just before they came into view of anyone in the living room. It turned out to be empty, but she understood the hesitation to publicly show any affection when his relationship status with Denby was still up in the air. Even if Denby had officially dumped him, it would be a bad look. She was very relieved not to face Sean's mom again just yet.\n\nFor the same reason, they didn't kiss on the porch, though Lisa could see the desire to on Sean's face. Instead, he just smiled and waved as she parted ways.\n\n\"Thanks for coming over,\" he said.\n\nLisa turned back and caught his wink. She rolled her eyes. \"Uh huh. See you at school. And if I can get anything out of Den before then, I'll let you know.\"\n\nSean waited and watched until she was in her car and down the street. It was going to be a very long last week of school, between finals and the maelstrom of emotions pulling her in every direction at once. She was supposed to be the innocent, smart, got-her-shit-together girl. This wasn't supposed to happen to her. How could the best and worst of her life all happen at the same time, stemming from the same series of events?"
    ],
    "authorname": "WatchingCloud",
    "tags": [
        "friends",
        "blowjob",
        "cunnilingus",
        "oral sex",
        "grinding",
        "cheating",
        "makeout",
        "bedroom",
        "urges",
        "teens"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/m-club-ch-19"
}