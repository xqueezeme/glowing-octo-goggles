{
    "title": "Haunting of Palmer Mansion Pt. 13",
    "pages": [
        "This will make more sense if you read the earlier parts. Don't worry, they're fun, action packed, and build the tension. Read them first! Also, all characters in sexual situations are 18 years or older. Enjoy.\n\n*\n\nA cool autumn breeze blew yellow and red leaves through the air, rustling gently as they passed Daniel down the sidewalk. Daniel's shoulders tensed as he turned down his brother's street. A pit formed in his stomach as he imagined Brad's truck parked in the driveway. But it wasn't there.\n\nDaniel walked up the drive, down the little path to the front door, and knocked.\n\n\"Danny!\" Penelope squealed when she opened the door. \"I'm so happy to see you. Come in.\" She wanted to play it cool with her brother-in-law, but that wasn't as easy as it sounded. A great big, bright smile wouldn't leave her face. She wiped her palms on her yoga pants to remove the sweat. \"Want something to drink?\"\n\n\"Actually, I was thinking ...\" Daniel stepped inside and she closed the door behind them. She watched him closely with expectant, blue eyes. \"I want to ... um ...\" He reached up and pushed back his messy, blond hair. \"Do you want to go back to the mansion? We could spend some time there.\"\n\n\"What's wrong?\" Her smile fell. \"Brad won't be back anytime soon, I promise.\"\n\n\"It's not that.\" He didn't want to tell her the truth. That a ghost had asked him to have sex with her back at the Palmer House. Despite what they'd already done, he didn't think that would fly. \"It's just, I think it'd be exciting to ... do stuff ... in my room.\"\n\n\"Are your parents home?\"\n\n\"Yeah, but they'll never know. It's a big place.\" Again, he didn't add that a ghost would help keep their noises concealed from the rest of the house while they fucked like bunnies.\n\n\"You really want to do this?\" Penelope raised an eyebrow, hoping he'd say no. She restlessly adjusted her blouse and looked down into his sweet eyes. She'd waited all weekend for this moment, of course she was going to do whatever he asked. But she had to try to keep him at her place. She wasn't a teenager anymore to be sneaking behind the backs of her boyfriend's parents. Good God, she now thought of Daniel as her boyfriend.\n\n\"Yes, please.\"\n\n\"Okay, sure. Not a problem. If it's what you really want.\" She grabbed her purse and car keys and shepherded him into the garage. \"But don't expect me to do this all the time. It's a little crazy. Even for this ....\" She kissed him on the cheek. \"This thing we have, whatever it is.\"\n\nAbout a half hour later, Penelope sat cross-legged on Daniel's bed making eyes at him. She really felt like an awkward teenage girlfriend at that moment, sending all the signals for him to make a move. She'd had many moments like this over at some boy's house years ago. Some of those moments, in fact, were with Brad in a different Anderson home. Her heart beat fast and her palms clammed up. Was she really so close to feeling that amazing cock again? Was it really as good as she remembered?\n\n\"And Cassini went right past Ceres here.\" Daniel stood by his space exploration poster and was pointing out the various probe courses. He never had girls in his room and it was fun to show off his interests.\n\n\"Uh huh.\" Penelope nodded her head and smiled.\n\n\"Of course, it was on its way to Saturn.\" He traced its voyage with his index finger.\n\n\"Of course.\" She was growing impatient. This boy liked to make her wait.\n\n\"Speaking of Saturn --\"\n\n\"Danny?\" Penelope gave him a mock grumpy look and put her fists on her hips as she gazed up at him from the bed. \"Get over here.\"\n\n\"Oh, okay.\" Daniel hopped on the bed and let Penelope remove his shirt. \"Sorry about that.\" She gave him little kisses on his meager chest. \"It's just, I get excited about ... oh ...\" He watched her head move lower and lower and he felt her tugging off his pants and underwear. \"That feels ... really good.\" She swallowed his dickhead and quickly worked him deeper and deeper down her throat. Daniel praised God for the invention of yoga pants. The flare of her hip as she leaned over was perfect. Of course, it would be even better without the pants.\n\nPenelope gagged a little and reached for Daniel's enormous balls. Her fingers curled around them. Such powerful, precious things. And she felt powerful holding them. Before all this insanity started, she never would have believed she could deep-throat a dick, especially one as monstrous as Daniel's. But the teenager had a way about him, and she wanted to do whatever she could to make him feel good.\n\nA little while later, Daniel stripped his sister-in-law and placed her on her back on the bed. She spread her legs for him, showing off her gorgeous, blonde pussy. It was spectacular, but it wasn't what Daniel had in mind. \"Put your legs together.\"\n\n\"But you won't be able to reach if I do that.\" She closed her legs and let him mount her with his knees on either side of her thighs. \"Ooooohhhhhhh.\" She looked down past the rolling hills of her boobs and watched him stick it in her. \"I was wrong ... ugh ... you can reach from there ... so deep.\" She had to stop thinking about what was possible with Brad in mind. Daniel had changed the paradigm. \"Oh ... God ... it hits a spot ... like that ... oooohhhhhhhh.\" She was already cumming.\n\n\"I wanna try something new.\" Daniel then spread her legs and put his hands under her, cupping her butt cheeks.\n\n\"That ... wasn't new?\" Penelope looked on in shock as he pulled her upright, and then carried her off the bed, still speared on his dick. She circled her arms behind his neck as he stood next to his bed, holding her up in the air. \"How ... uuugggghhhhhh ...\" She felt his hands clutching her butt as he pulled her up that long cock and back down. She was so open and exposed to him like that. \"How are you ... lifting me? I'm so much ... bigger than you.\" She hated to admit it, but she did outweigh the teenager by a lot. Especially since her boobs had grown.\n\n\"I've ... been ... working ... out.\" Daniel bounced her on his dick in the air and watched her eyes roll back in her head. It wasn't a believable answer, but Daniel didn't think she was listening to him anymore anyway.\n\nPenelope's boobs shook and rocked back and forth. Her head rolled side to side. \"Daaaannnnyyyyyyyyy.\" Her brother-in-law gave Penelope her first orgasm while being carried by a man. He was giving her so many firsts.\n\nA couple hours later, Penelope rode Daniel backwards with her knees up and her feet planted on the bed. Each stroke was so ridiculously long. When she looked down between her sweaty, hanging boobs, she could see her belly bulging every time she hit bottom. She felt like a sex goddess. They were sex gods. This was a religion that spoke to her with more force than anything she'd ever learned in church.\n\nDaniel slapped her left butt cheek and listened to the little cry of pleasure Penelope made in response. He decided to try some of Eloise's dirty talk on Penelope. \"Are you ... a slut, Pen?\" He slapped her again, and enjoyed the red handprint on her pale butt.\n\n\"Ugh ... ugh ... ugh ... I didn't think so ... until you ... showed me your cock, Danny.\" She moved her hands in the air, unsure where to put them. Eventually she gave up, and just held her hands out above her shoulders, her fingers making odd gestures, her ring bright and obvious on her left hand. \"But now ... I'll be your slut, Danny. I'm a slut ... only ... uh ... uh ... uh ... for you.\"\n\n\"Really?\" Daniel hadn't expected that answer. He looked at the frothy mess on his dick from their combined cum. He admired the wiggly way her hips moved and the way her thighs tensed with her effort. She was right. She was a slut. And she was his. He had her now in a way Brad never had. \"What about Brad?\"\n\nPenelope looked over her shoulder at Daniel with an expression that contained either pain, or lust, or both. \"I love Brad. But ... but ... but ... ooooohhhhhhhh.\" She shook and came on that magic dick again.\n\nThe thought that she was cumming on him while thinking about his stupid brother sent Daniel over the edge. \"I'm cummmminnnngggg.\" He unloaded his balls in her tight pussy for the third and final time.\n\nA minute later, she shuddered, leaned forward, and kissed him on his sweaty thigh. \"There is ... nothing else ... like that.\" She rolled off him, turned around, and they lay shoulder to shoulder panting. She turned her head to look at his youthful face. She was smiling like an idiot. Penelope gave up trying to play it cool. \"When do you want to ... get together again?\"\n\n\"Later this week?\" Daniel sighed and gave her left boob a friendly little smack. \"We don't want ... Brad to figure out what we're up to.\"\n\n\"Right.\" Penelope nodded and pulled herself off the bed. The thought of Brad catching them sobered her up a little. They both dressed, and Daniel led her back to the front door. She could hear Julie working in the kitchen as they passed the main hall. Penelope didn't know what she'd do if her in-laws caught her. Say she was tutoring Daniel? But no one stopped her, and soon she was driving home with a great big, stupid grin on her face.\n\n~~\n\n\"Pen, why isn't dinner ready?\" Brad dropped his work jacket on the dining room table and looked around the dark kitchen. There was no reply so he walked around the house until he found his wife stepping out of the shower in the upstairs bathroom. \"Pen? Dinner?\" He had to admit, even if she was on her way to being a fatty, she looked damn good at the moment.\n\n\"Oh, hello, Bradley.\" Penelope smiled at him. In fact, she couldn't stop smiling. \"I'm sorry, I'm running a little late. I'll throw something in the microwave.\" She snatched a towel and dried off.\n\n\"Okay.\" Brad nodded. It was good to see how happy she was to see him, but something about that smile unsettled him. He looked around the bathroom and noticed her little circle of pills sitting under some makeup on the bathroom counter. \"I've been meaning to ask you. Are you taking your pills? That case hasn't moved in a while.\"\n\n\"Well, aren't you observant.\" Her smile faded. \"Um ... I switched to a different kind of pill, so I don't need those anymore.\" Panic set in. She had forgotten to take them. How could she forget something like that? She counted her cycle days in her head.\n\n\"Good. Because we're not starting a family until it's time.\"\n\n\"When will it be time?\" Penelope finished counting. It might already be time.\n\n\"When we're ready.\" He reached a hand out to her and took her by the wrist. \"Dinner can wait, I want to spend some time with my wife.\" Brad led her to their bed. While they fucked that night, her pussy felt extra wet and sloppy to him. He figured she was just happy to see him.\n\n~~\n\n\"What's wrong, pumpkin.\" Julie found her daughter in the main living room. She was sitting on the sofa and trying to read, but it was clear she'd been crying.\n\n\"It's just ...\" Brittney looked up at her mother with tears in her eyes. \"Ted and I broke up.\"\n\n\"Oh, sweetie.\" Julie sat next to Brittney and patter her thigh.\n\nBrittney put her head on Julie's shoulder and then melted into a hug. Sometimes she just needed a little TLC from her sweet mother.\n\n\"Tell me about it.\" Julie stroked her daughter's long, brown hair with one hand and hugged her around the shoulders with her other.\n\n\"Things were going good.\" Brittney sniffled. \"And then he started acting so crazy. And he said he saw Danny do something horrible. Which wasn't true. And I told him to shove it.\"\n\nJulie's blood froze. \"What ... um ... what did he say about Danny?\" Her hand stopped in her daughter's hair.\n\n\"He said that he saw Danny having sex in our house with a woman.\" Brittney wiped her tears on her mom's dress and nuzzled into her side.\n\n\"What woman exactly?\" Had Ted somehow seen Daniel with Julie. That would be a disaster of biblical proportions.\n\n\"I don't know. Some black woman. Does it matter? It isn't true. Danny's a virgin.\"\n\n\"Did the woman have a hijab?\" She stroked Brittney's hair, slower this time. \"You know, a head scarf?\"\n\n\"I know what a hijab is, Mom. Mrs. Samatar wears one.\" Brittney craned her neck and looked up at her mother. \"Why do you ask? Do you think Ted was telling the truth?\"\n\n\"No, no.\" Julie shook her head and caressed Brittney's smooth cheek. She looked into Brittney's eyes and did her best to lie. \"Our Daniel would never do something like that. Ted is a bad apple, Britt. You deserve better.\"\n\n\"Thanks, Mom.\" Brittney snuggled into Julie's side again and sighed. Her tears dried up. \"There's plenty more fish in the sea. Right?\"\n\n\"Right, pumpkin.\"\n\n~~\n\nA clock struck eleven somewhere in the house. \"Before I take care of this.\" Julie squeezed Daniel's thick penis. She sat on the edge of the tub in Daniel's bathroom and looked up at her naked son. \"I have a question.\" She didn't mean to, but her hands started moving along the shaft. She could feel his protruding veins under her fingertips. She wanted to keep his focus on the conversation, but it was just such a nice penis. So hard not to play with when it was right in front of her.\n\n\"What's up, Mom?\" Daniel looked down at Julie and reveled in the sight. She wore that powder blue corset and chemise for him. She looked lovely. The corset pressed her cleavage together and accentuated her curves.\n\n\"Well ...\" Julie looked down at his thing, and then back up to his blue eyes. \"Have you been having sex with other women? You promised me that you and Penelope wouldn't happen again, and I trust you. But other women?\"\n\n\"Um ...\" He didn't want to lie. \"In 2 Samuel 12, God says to David I anointed you king over Israel, and I delivered you from the hand of Saul. I have given you your master's house and your master's wives into your bosom. King David had eight wives, Mom.\"\n\n\"So, that's a yes?\" Julie wanted to take a firm stand with her eighteen-year-old son, but that was hard to do that while she pleasured him with her hands. She should have had this conversation elsewhere. But it was a private conversation, and anywhere the two found privacy these days her hands found his monster.\n\n\"Sorry, Mom.\" Daniel nodded. He figured he wasn't going to get in too much trouble, the way Julie stared at his dick.\n\n\"Well, I did say you could try out other women.\" Julie sighed and her face inched toward the flared head as she worked him. \"Was it a girl from school?\"\n\n\"No.\"\n\n\"Was it a black woman?\" Julie knew Brittney's ex-boyfriend had been telling the truth.\n\n\"Mrs. Samatar.\" Daniel put his hand on the back of Julie's brown hair, but she resisted his gentle push toward his dick.\n\n\"How is that even possible?\" Julie licked some precum off him. \"She's married. And ... her religion and everything.\"\n\n\"My winning personality?\" Daniel flexed his penis in her hands.\n\n\"I'll get you some of those condoms we talked about.\" She breathed in deeply, his scent was so disarming. \"Until then ...\" She finally let the pressure from his hand guide her mouth onto his penis. She sucked eagerly. A little while later, she rose, lifted her chemise, dropped her panties, and put her hands on the edge of the sink. \"Go ahead, Danny.\"\n\n\"Remember what you said about your butt?\" Daniel got behind her.\n\n\"Yes, I remember.\" She grabbed a little bottle she'd brought with her into the bathroom and reached behind her to hand it to Daniel. \"Use this oil.\"\n\n\"Why do you have lube, Mom?\" Daniel squeezed some out and spread it all over his dick.\n\n\"Sometimes, my vagina doesn't respond to your father the way it used to.\" She felt him place his penis at her rear entrance. She was tense with expectation. \"So, your father and I use that oil to ... ow ... ow, ow, ow.\" She had never felt so invaded and stretched. Her poor butthole strained as he sank into her. She willed herself to relax. \"Is it all the way ... in?\"\n\n\"Almost.\" Daniel basked in the glorious sight of his mom giving him her ass. She'd told George never in a million years, and yet she'd given it up to Daniel in a few days. The whole thing was spectacular. \"There, it's in.\"\n\n\"Go ... ow ... ow ... slowly, pumpkin.\" Julie's knuckles turned white on the edge of the sink. She looked up into the mirror and wondered at the sight of this hedonistic woman surrendering to her infidelity.\n\n\"Okay.\" Daniel accelerated gradually, until he was humping her with about half his normal ferocity. Her butt squeezed his dick perfectly. \"How's ... uh ... uh ... that, Mom? Does it hurt?\"\n\n\"No. It ... ugh ... ugh ... doesn't hurt.\" Julie's own words surprised her. But she was correct. In fact, a completely new kind of pleasure had started emanating from her once tight butthole. \"Oh, gosh. You're doing me ... doing my ... Oh, my ... It feels good, Danny. Really, really good.\" The Julie Anderson in the mirror looked like a wild harlot, humping her rump back at her own skinny son. Her hair fell about her face and she grimaced as a powerful orgasm swept through her. She knew in the future she'd give him her backside anytime he asked.\n\nThey humped like that for a good long while. Neither of them noticed Eloise open the bathroom door a crack and check in on them. The redheaded woman wore a long nightgown and cradled her pregnant, swollen belly. She watched for a few minutes and then closed the door.\n\n\"Mom ... I'm going to cum ... in your butt.\" Daniel smashed into his mother with long powerful strokes.\n\n\"Yes ... yes ... please.\" Julie heard his soft grunts and then felt the first splash of heat inside her. \"Oooohhhhhh.\" She had her third anal orgasm as Daniel unloaded in her. It was pure magic.\n\nWhen he finished, Daniel pulled out of her with a plop. He watched the cum run from her asshole. \"It's beautiful, Mom.\"\n\n\"Really?\" Julie stayed bent over for him, since he seemed to like what he was seeing. \"I thought it might be ... gross or something.\"\n\n\"It's perfect.\" He gave her butt a light slap to let her know he was done.\n\n\"Thanks, sweetie.\" Julie took off the lingerie, and they got in the shower and cleaned each other off. Then they both returned to their respective bedrooms.\n\n~~\n\nIn Julie's dream, she fed and fed Eloise Palmer. She prepped, cooked, and presented meal after meal. The pregnant woman sat at Julie's dining table and ate but was always hungry for more. Eloise would finish a steak, or some blanched greens, dab her pink lips with a napkin, and say, \"More, please.\"\n\nAlways more. The larder ran low on provisions. Soon, Julie would need to go to the neighbors to see what they had to offer. Julie's bustled dress rustled as she moved hurriedly around the kitchen. She could hear Eloise's belly grumble with hunger. Julie needed to prepare more food. Soon, the whole kitchen shook with Eloise's hunger.\n\n\"Wake up, Mrs. Anderson.\" Eloise stood over the sleeping beauty in the master bedroom. She shook Julie on the shoulder. \"Hurry.\"\n\n\"What?\" Julie woke from the dream, shot up in bed, and looked around with wide eyes. The whole bedroom shook. She could hear the metallic rattling of the bedside lamp as a rumbling moved through the house. She saw Eloise and automatically pulled the sheet up over her exposed boobs.\n\n\"Your children are in danger.\" Eloise's pale face had none of its usual warmth. She looked frightened. \"Your daughter caught the interest of Frederick when she allowed that boy inside her. Hurry.\" She offered her left hand to Julie and the housewife took it.\n\n\"My husband?\" Julie looked over at George as he snored next to her, oblivious to the chaos in the house.\n\n\"Frederick has no interest in him.\" Eloise nodded earnestly even though it was not the full truth. \"Come quickly.\"\n\n\"Right.\" Without thinking, Julie rose from bed, clasped hands with Eloise, and rushed out into the hall. \"What do we do?\" She could feel the quaking vibrations travel through the hardwood floor with her bare toes.\n\n\"Go to your daughter's room, Julie.\" Eloise led her down the hall. \"There is a sachet from the Samatars by the door. Lock the door behind you and bar it with the sachet.\"",
        "\"What about Danny?\" Julie held her boobs with her free arm as they walked quickly.\n\n\"I will protect your son.\" Eloise waddled a bit with her pregnant belly, but she moved surprisingly fast.\n\n\"Really?\" But Julie knew it was true. They passed the railing to the grand stairway and a black shadow rose toward them from the floor below. Julie couldn't spot the shadow's source, but the penumbra had a masculine aspect and a malevolent bearing.\n\n\"And she invites the vile seed into her very bed.\" A dark booming voice called up from below. It was Frederick. \"Villainy.\"\n\nJulie didn't wait to see the shadow's source. She ran faster. Clad only in her panties, the house's midnight chill seemed to clutch at her bare skin.\n\n\"Do not deviate.\" Eloise gave Julie's hand a squeeze and a little spark moved between them. The women parted outside Daniel's door. Eloise slipped into his bedroom, and Julie lunged up the stairs to the east tower.\n\n\"I will drive these sins from you, woman.\" Frederick's voice followed Julie.\n\nJulie opened Brittney's door, stepped through, and locked it behind her. She found the sachet and went to lift it, but it felt like a bowling ball. Heavy footfalls sounded on the stairs outside the door. Julie bent her legs, strained herself, and dragged the sachet in front of the door. Panting with excursion and fear, she stood there for a moment as the heavy, lumbering gait grew louder and then stopped.\n\n\"King David had eight wives.\" Frederick hissed through the door's solid wood planks. Clearly, he was just on the other side of the door now. The house continued to shake. \"And his son, Solomon, had 700 and 300 concubines. They were not men of God.\" A loud bang rattled the door.\n\n\"Oh, no.\" Julie turned and ran to her daughter's bed. She dove under the blankets and hugged Brittney close. Another bang shook the door. The house's quake subsided. The presence outside the door grew quiet. Soon, all seemed normal.\n\n\"Mom?\" Brittney opened her eyes in bewilderment at finding her naked mother under the covers with her. \"What's going on?\"\n\n\"It's okay, pumpkin.\" Julie hugged her daughter against her breasts. \"Go back to sleep. I'm just keeping an eye on you tonight.\" She trembled as her fear and adrenaline subsided.\n\n\"Okay.\" Brittney's mind was slow with sleep. It was weird having her mom in bed with her, but it was also cozy. She drifted back to sleep in Julie's arms.\n\n~~\n\nThe masonry around the fireplace in Daniel's room gave a loud crack as the mansion trembled. Daniel sat wide-eyed in bed. Relief washed over him when Eloise walked through his door and closed it behind her.\n\n\"Quick, into the fireplace passageway.\" She moved across the bedroom, her large belly swaying before her. She moved to the fireplace, flipped a switch, and the hearth swiveled open.\n\n\"What's going on?\" Daniel wanted to ask about her pregnancy, but it clearly wasn't the time. He got out of bed and felt the cold floor with the bare soles of his feet as he raced toward Eloise.\n\n\"Frederick is cross with your sister.\" Eloise beckoned him, her freckled face half lit with silver moonlight. \"But I do not anticipate a confrontation this time.\"\n\n\"Is Britt okay?\"\n\n\"Yes.\" Eloise nodded. \"I sent your mother to watch over her. Along with one of the Samatar sachets.\"\n\n\"Good. Are we going to the basement again?\" Daniel stepped into the black entryway and shivered at the cold. He was glad for his flannel pajamas. He hugged himself tight against the chill that emanated from those secret stairs.\n\n\"Not this time, dearie. But don't worry, you'll be safe.\" She did not follow him into the black. Instead she flipped a switch, and the hearth swiveled to shut him in.\n\n\"Mrs. Palmer?\" Daniel felt around the cold stone in the dark. \"Eloise?\" He raised his voice and banged on the wall, but got no answer. There was a faint light behind him. He turned and waited, trying to make out what the light was. After a time, he cautiously walked toward it, one hand on the wall for guidance. He felt with each step for the stairs, but they never came. Instead, his toes touched something warm, and grainy. Daniel looked down in confusion. Sand? He looked up and the world was suddenly bathed in warm light.\n\nStretching out before him, a long sandy beach arched against some unknown coastline. Ahead of Daniel, a wooden bench sat in the sand. A flock of ducks waddled around the bench, quite out of place on the sunny beach. Even more out of place, a man in a tweed suit sat on the bench and tossed bread to the ducks. Daniel couldn't see the man's face. His hair was blond, longish, and combed in an old-fashioned sweep to the side.\n\n\"Excuse me?\" Daniel walked over the uneven sand, wiggling his toes in the warmth. \"Where am I?\" Daniel stepped around the bench and looked down at the man.\n\n\"You are in the stairway, of course. It's your home.\" The man smiled up at Daniel with a kindly face. He had deep gray eyes and a noble, if somewhat faded, demeanor. \"Which is also my house, not coincidentally.\"\n\n\"Who are you?\" Daniel took in the man's finely crafted suit and the brown paper bag of bread crumbs the man held on his lap.\n\n\"I am Day Star. Also called Son of the Morning.\" Day Star smiled helpfully. He tossed some more bread to the gathered ducks that waddled around. \"Such lovely creatures. Do you know their mating habits?\"\n\n\"No.\" Daniel shook his head. \"I don't think you're supposed to feed them bread. It's bad for their stomachs or something.\"\n\n\"We've only just met and you're already giving me rules.\" Day Star's smile faded. \"Humans.\" He shook his head. \"But I suppose you're right.\" He folded up the bag and put it beside him on the bench. He then stretched his arms and stood. \"Come, walk with me.\" Day Star had a slight frame and stood a few inches shorter than Daniel. He meandered down the beach.\n\n\"What's wrong with rules? Rules are good.\" Daniel jogged to catch up with him and fell into step a few feet to Day Star's right. \"And I know the Latin for Day Star.\"\n\n\"Of course you do.\" Day Star nodded. \"You're a smart boy. Now, why did you bring me all this way to your secret stairway?\"\n\n\"I didn't bring you here.\" Daniel looked up as they passed under some coconut trees. Up ahead, there was a makeshift shelter made from broken fiberglass and wood.\n\n\"No?\" Day Star shrugged. \"Well, since we're here on this lovely beach, we might as well get to know each other.\"\n\n\"Will you answer my questions honestly?\" Daniel regarded Day Star carefully. \"You have a reputation for ... um ... prevarication.\"\n\n\"That's a very nice way to put it. Don't worry, I love questions, Daniel. And I respect those with the courage to ask them.\" He glanced at Daniel with an appraising look. \"I was banished from my home for asking too many questions. I wouldn't want to be a hypocrite.\"\n\n\"I made the deal with you, didn't I?\" Daniel eyed the shelter as they passed. There was a firepit outside half covered in sand. The place looked abandoned.\n\nDay Star laughed, a bright clear sound. \"Yes, indeed. Eloise Palmer is my friend and partner.\"\n\n\"And now you own my soul or something?\" For the first time, Daniel felt some fear around this little man.\n\n\"No, no, no.\" Day Star shook his head. \"Souls are beyond me. They're beyond Him, too, you know. He didn't create all this like he'd have you believe. He wandered into it. He's a sad little man sitting on a hill, yelling at humanity to love him. Vanity is His biggest flaw.\"\n\n\"Yours too, right?\" Daniel stepped a little to his right and walked into the lapping waves. The cool water felt so good.\n\n\"Maybe.\" Day Star nodded. \"Jesus said that he who lives by the sword, dies by the sword. And Jesus was a carpenter who died nailed to some lumber.\" A sad smile flitted across Day Star's face. \"By that logic, I will surely die breaking a rule. But it will be well worth it. There are too many people telling us what to do, Daniel. It is up to us to decide what's right and make what we deserve.\"\n\n\"What do you get out of our deal?\" Daniel looked out over the horizon and was surprised to see the reds and purples of a setting sun. It had been midday just minutes before.\n\n\"Did you not hear how I feel about His rules?\" Day Star arched an eyebrow. \"You know, He breaks his own rules all the time. Hypocrisy is easy from atop the hill.\" Day Star stopped their walk and looked at Daniel. \"Our time is up. Nice talk. Thank you for the questions.\"\n\n\"Wait.\" Daniel stepped toward him. \"I have more questions.\" But even as he said it, the beach faded and he found himself walking out of the fireplace in his room. He looked around, but he was alone. The menacing sounds of Frederick had turned to silence. Daniel checked his door, to make sure it was locked, and then climbed back into bed. He found that his pajama bottoms were wet around the cuffs, so he took them off and tossed them on the floor. He lay awake the rest of the night, thinking about his conversation with Day Star. Or, in the Latin, Lucifer.\n\n~~\n\nIt was still dark outside when Julie woke in Brittney's bed. She was under the covers, laying on her side, and felt the most wonderful feeling in her right breast. As she came to her senses, she realized that she was still holding her daughter tightly, and there was a faint smacking sound nearby. Was her ...? It couldn't be. Was her daughter sucking on her nipple?\n\n\"Mmmmmmmmmm.\" Brittney sighed. Her mother's milk was so sweet and warm, she gulped it down as she suckled from Julie's right boob.\n\n\"Britt?\" Julie cradled Brittney's head in her hands. She was holding her there and abetting this perverted act, but she couldn't let her go. \"Not you, too. You have to stop, sweetie.\" She didn't want Brittney to stop. That would be a terrible loss.\n\nBrittney took her mouth off the nipple and licked the underside of Julie's boob. \"It's just a dream, Mom. Don't worry about it. You don't have milk in real life anymore.\"\n\n\"This isn't a dream.\" Julie reached for her other boob and squeezed her own nipple. Her fingers came away wet. \"I do have milk. How is this possible?\"\n\n\"It's magic,\" Brittney said dreamily. She lowered her mouth and went back to sucking her mom's tit. \"Mmmmmmmmmm.\"\n\n\"Oh, pumpkin.\" Julie cradled Brittney against her and cooed. Feeding her eighteen-year-old daughter that way was another step in her journey with perfidy, but it felt so right. They cuddled under the covers and Brittney rhythmically sucked. Eventually, the girl's hand meandered across the gentle curve of her mom's belly. \"Britt, what are you doing?\"\n\n\"Mph mmm mph mph.\" Brittney's words were unintelligent.\n\n\"No. You can't.\" Julie felt Brittney's fingers slide under Julie's panties and move past her triangle of hair. \"You really can't do ... oooooohhhhhhhh.\" A new pleasure surged through Julie as Brittney's finger slipped inside her wet vagina. \"Sweetie ... nnnnooooooooooo ...\" But Julie hunched her hips back and forth as the finger worked her.\n\nBrittney spit the nipple out of her mouth, but kept fingering her mother. \"This feels real. This isn't a dream, is it?\" She wanted to stop, but she couldn't find the will. \"Are we ...?\" She felt her mom trembling. \"Are you going to ...? Then she felt Julie convulse and squeal and Julie's vagina contracted around her finger. She had just given her mom an orgasm. Brittney's own pussy was incredibly wet. This was so much hotter than anything she'd done with Ted. Her mother was so soft, warm, and pliable. She tried to regain her composure. \"I'm sorry, Mom.\" It was an awkward thing to say with one's finger in another's pussy. \"I thought this was a dream, and ...\" She felt Julie's delicate hand move inside her pajama bottoms and under Brittney's panties. \"Ooohhh, Mom.\" Brittney shivered as two of Julie's fingers massaged Brittney's clit in little circles.\n\n\"Drink some more, sweetie.\" With one hand she pressed Brittney's mouth back to her breast, with her other, she stimulated her daughter's clitoris. \"Just a little more, and then we'll stop.\"\n\n\"Mmmmpphhhh.\" Brittney gulped down more milk, and her hand went back to work on her mom's pussy. She inserted another finger. And then another. She plunged them in and out while Julie rubbed Brittney's pussy. \"Oppphhhhh Mmmmoooommmppphhh.\" Brittney groaned around the nipple in her mouth. Her nerve endings sparked with the first orgasm given to her by someone else. Improbably, her own mother.\n\nThe Anderson women fingered each other for over an hour, before they removed their hands from each other's pussies and snuggled in closer together. Brittney went to sleep with her mouth clamped on Julie's breast, just as she had some eighteen years before. Julie cooed and shushed her to sleep, cradling her in her arms. She was right back where she started with her daughter. She knew this would have to be one-time thing, but she loved that moment with all her heart.\n\n~~\n\nJulie woke just before dawn and snuck out of Brittney's bed as her daughter dreamed away. She tip-toed through the cold room and bent down to move the sachet. It was hard work getting it out of the way, but she managed. She checked outside the door for any looming shadows. The stairs were empty. Quiet pervaded the house.\n\nNaked, but for her panties, she walked the long walk of shame down the hall back to her bedroom. She had somehow corrupted both her twins. At least with Brittney, it wasn't too late to turn back. With Daniel, there was nothing she could do.\n\nThe sheets were cold on her side of the bed as she slipped in. She rested her hand over her eyes and could faintly smell her daughter's sex. Julie moved her hand below the blanket. She was too tired to get up and wash her hands. George snored next to her, and Julie closed her eyes. Maybe she would find a way to rein in the relationships that were careening all about her life. Maybe."
    ],
    "authorname": "rawlyrawls",
    "tags": [
        "brother",
        "ghost",
        "haunted",
        "magic",
        "mom",
        "mother",
        "sister",
        "son"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/haunting-of-palmer-mansion-pt-13"
}