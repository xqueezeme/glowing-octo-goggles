{
    "title": "Busy Fingers Ch. 02",
    "pages": [
        "I didn't go round to see Hayley on the Sunday even though I generally called on her most days. The reason was that my mind was still in turmoil over our very unexpected playtime the day before. I can't say that I never masturbate, but it's not exactly an everyday occurrence. What I can say is that I'd never masturbated in front of anyone else before, let alone in front of another woman, and I hadn't quite got my head around the idea.\n\nThe problem was that I'd enjoyed it. In fact I'd enjoyed it so much that Paul didn't stand a chance that night. I was so horny that I pretty much raped him. Not only that, but when he went down to see a friend on Sunday morning I took the chance and went into the bedroom for another quick wank, fantasising all the time about doing it with Hayley beside me again. I couldn't get it out of my mind, I wanted to do it again, and again, but I couldn't understand why. Perhaps I'd enjoyed it too much.\n\nBut what confused me was that I'm straight, genuinely straight. I don't find women sexually attractive at all, and I certainly don't fancy Hayley that way, good friend though she is. I think that what I enjoyed was the naughtiness, the fact that I was doing something I shouldn't, like a boy scrumping cooking apples that he can't eat and doing it just for the thrill of doing it. Even so, though I very much wanted to do it again, I was a bit scared of where it might lead. I knew I wasn't bi, but could I be really sure of Hayley?\n\nI spent most of Sunday mooching about, looking like a dog that's lost his bone and being generally down in the dumps. Even Paul noticed it.\n\n\"What's the matter, babe?\" He asked me.\n\n\"Nothing, sweetheart.\" I answered absently.\n\n\"You've not been round next door today. You and Hayley didn't fall out yesterday, did you?\"\n\n\"No.\" I told him, trying very hard not to smile at how far from the truth his idea was. \"Nothing like that. I'm just feeling a bit quiet today, that's all.\"\n\n\"Okay.\" He accepted my answer with ill disguised relief. \"You'd tell me if anything was wrong, wouldn't you?\"\n\nI nodded and that was the end of that as far as he was concerned. Typical male, sweep it under the carpet and it doesn't exist. Although he must have been at least a little bit surprised when I fucked the arse off of him again that night.\n\nIn the end I persuaded myself that I wasn't about to lose a friend like Hayley if I could help it, especially over such an exciting experience as the one we'd enjoyed together, so on Monday, just as soon as everyone had gone to school or work, I steeled myself and went around to talk to her.\n\n\"Oh Sue, I am pleased to see you.\" She smiled happily as she opened the door. \"When you didn't come around yesterday I thought that you didn't want anything more to do with me.\"\n\n\"But you didn't come round to mine either.\" I pointed out, very relieved that I was still welcome.\n\n\"No. Sorry.\" She looked guilty. \"I meant to, but I was a bit busy.\"\n\n\"Liar.\" I told her bluntly, taking the sting out of it with a smile.\n\n\"Yes I am, aren't I\" She giggled. \"I didn't know what treatment I'd get and, like you I suppose, I didn't have the nerve to find out.\"\n\nWe gave each other a quick hug in her hall and things were back to normal, except for... well except for neither of us being sure what to say about Saturday. But that didn't matter, because as soon as we'd seated ourselves at her kitchen table with a mug of coffee each, Hayley found a way to bring up the subject.\n\n\"Did you say anything to Paul?\"\n\nI knew instantly what she was talking about.\n\n\"No. Did you tell Mike?\"\n\n\"No. I was too embarrassed.\"\n\n\"Good.\" I told her, adding hurriedly. \"Not good about you being embarrassed, but good that you didn't tell him. I'd sooner keep it that way, if you don't mind. God knows what they'd say.\"\n\n\"Me too.\" She looked at me carefully. \"How do you feel about it yourself?\"\n\n\"You mean do I regret it happening?\"\n\n\"Yes, and do you? Because I don't.\" This was said almost defiantly.\n\n\"Nor do I.\" I told her truthfully. \"It gave me one hell of a kick, and it kept me buzzing all weekend.\"\n\n\"Me too. Mike wondered what had hit him.\" She paused and I sort of knew what was coming. \"Would you like to do it again?\"\n\nMy mouth answered before my brain got started.\n\n\"Yes, I would.\"\n\nI felt myself colour up at my immediate response, but Hayley just beamed at me and giggled excitedly.\n\n\"Oh Sue, I'm so glad to hear you say that. I've been hoping ever since Saturday that we could.\"\n\nShe was grinning with delight, her impish little face lighting up like a delighted schoolgirl.\n\n\"God, I'm feeling horny now just thinking about it.\"\n\nI hadn't realised it until she said that, but my own pulse was racing and I could feel that lovely feeling you get when your pussy says 'yes please'. Without even realising it I'd been hoping for a repeat session ever since knocking on her door. I only had one reservation.\n\n\"How far do you want us to go?\" I asked her.\n\nShe looked puzzled and so I explained.\n\n\"Last time you grabbed hold of my thigh, do you remember? And I was a bit worried in case you wanted to go any further.\"\n\nShe thought about it for a moment and then nodded her understanding.\n\n\"Don't worry.\" She said eventually. \"I don't go for women, so I don't fancy you like that. What I fancy is the fun we can have together.\" \n\nShe giggled nervously before going on.\n\n\"I must say though. Your leg felt nice, and it was lovely feeling with you sitting so close to me when I was cumming. I'm sorry if I worried you, I just sort of reached out without thinking. I wasn't going to touch you up.\"\n\nI remembered my half acknowledged urge to feel her hand closer to my pussy.\n\n\"It didn't worry me. It's just that I'm straight and I didn't want you to get the wrong idea.\" The second part of my sentence was more truthful. \"I liked us being skin against skin though, it was kind of sexy, but I couldn't let things go too far and I'm not very sure where 'too far' actually is.\"\n\n\"That's okay. If I get the sudden urge to snog you, I promise not to use tongues.\"\n\nShe burst out laughing as I sat back in alarm and then I saw the mischievous twinkle in her eye.\n\n\"You bastard.\" I told her, smiling myself now. \n\n\"But seriously.\" She looked serious too. \"I'm not a lesbian any more than you are, I just like being naughty.\"\n\nI drew a deep breath and jumped right in. \"Then let's be naughty and do it again.\"\n\nShe smiled that mischievous and wickedly sexy smile again and headed off into the lounge.\n\n\"Come on then.\"\n\nMy heart suddenly went pitter-patter inside my chest and I felt all moisture transfer from my mouth to my pussy. I followed her through into the lounge on legs that were rapidly turning into jelly, and stood gazing down at the soft leather sofa that we had used on Saturday. My God, how I wanted to do this, but how the idea scared me.\n\n\"We don't need to be so shy this time, do we?\" She said as we stood there gazing down.\n\n\"Why? What do you want to do?\" \n\nShe smiled. \"I just thought we could strip off before we start this time, that's all. It would be easier than trying to wriggle out of our things sitting down.\"\n\nI blushed with embarrassment at my nervousness, and she giggled at me. \n\n\"Silly girl, come on let's have some fun.\"\n\nWe stood facing each other and simultaneously removed one article of clothing each until we were down to our panties. We hadn't arranged to do it like that, it just naturally fell into place, both of us pausing to smile reassuringly at the other after each item. Then at last we stood in just that last flimsy covering and looked frankly at each other's nearly naked bodies, mentally comparing, or at least I was. I was wishing I could look as good as Hayley did. So trim and pert, just like a girl of twenty instead of a woman of thirty-seven. \n\n\"You do look after yourself, don't you?\" She asked me rhetorically, making my day with that compliment and echoing the one I was silently applying to her.\n\n\"Maybe, but I could do with looking as trim as you do.\" I replied, causing her to chuckle self-consciously.\n\n\"Come on, let's start.\" She swiftly hooked her thumbs into her waistband and bent down in one lithe movement. Before I had even moved, her panties were being kicked from the ends of her toes.\n\n\"Come on, slowcoach.\" She chided me, sitting herself down at one end of the sofa.\n\nI had to use the arm of the sofa as a support as I hopped around in a most unladylike way to unhook my own briefs from around my ankles. Her tinkling giggle at least made me laugh at myself and my ungainly antics.\n\nWhen I sat down next to her I couldn't help but notice that we'd placed ourselves closer together this time, so close that our knees were touching the moment we spread our legs even a little bit. I suppose we had automatically sat nearer so that we could link our thighs like before, with mine over the top of hers and my foot resting on the seat between her legs. I was very conscious of our naked thighs touching together again, and even more so of the fact that my heel was only inches in front of her freshly shaven pussy. It had been more spontaneous and less noticeable last time.\n\n\"Ready?\" There was a slightly shy note to her voice, so perhaps she was thinking the same as me.\n\nI reached down between my legs, resting my hand lightly to cover my pussy, and gave Hayley what was intended to be an eager smile, but one that in fact I know must have looked slightly crooked and rather embarrassed.\n\n\"I think so.\" I told her.\n\n\"Me too.\" \n\nShe cupped her breasts with her hands and then let one slide down the length of her body until she found her pussy. Her eyes closed and she sighed softly as her fingers went to work, two of them parting her labia while the third sought out her clit.\n\n\"I've been wanting this.\" She whispered, opening her eyes to glance down to where my own fingers were beginning to play. \"I love it with you there.\"\n\n\"Yes, me too. It is good, us doing it together, isn't it?\" I asked, looking rather anxiously across at her.\n\nShe didn't speak; she didn't have to, she just looked into my face, gave me a quirky little smile and a nod of agreement, and then turned her gaze to where my two fingers were hooked over my pubic mound to rub at my clit. For some reason that smile made me feel more relaxed and at ease than anything else could. I felt glad that she was watching what I was doing.\n\nFor a few minutes we played in silence, the only sounds those of busy fingers and the little sighs and whimpers that we both made as arousal began to kick in. Hayley was kneading and squeezing her pert little breast with that one hand, pulling at her nipple until it slipped from her grip. My breasts are larger and heavier than Hayley's but I started to do the same, tugging at my nipple so that my boob was pulled to a peak and the delicious little hurt added to the thrill. We looked and smiled at each other, her grin spreading over her face as I winced and gasped from a particularly nice dart of pain in my nipple.\n\n\"I bet you like being spanked too?\" She asked with a little chuckle.\n\n\"I already admitted that last time.\" I reminded her.\n\n\"So you did.\" She smiled.\n\nWe lapsed back into comparative silence once again, each of us watching the others eager knuckles and, from my side at least, wishing we could see a little more. Maybe we could sit opposite each other next time so that everything was on show.\n\n\"Do you use a vibrator?\" Hayley asked me suddenly.\n\n\"No.\" I told her. \"I've never even tried one.\"\n\nIn fact the idea of pushing a lump of plastic up myself had never really appealed, but in the context of our naughtiness the idea sounded worth trying.\n\n\"Would you like to?\"\n\nI wondered for a moment if she was going to produce one and offer it to me, and I felt a mixture of excited anticipation and delicious embarrassment at the thought. If she had gone and fetched one at that moment I think I would have used it, loved it, and gone as red as a beetroot.\n\n\"Maybe.\" I hedged my bets. \"Sometimes I would.\"\n\nThere was a little pause before she said anything else. She looked as if she was feeling an orgasm starting to build and her voice was breathless with stimulation when she did speak.\n\n\"I'll buy you one for your birthday.\"\n\nI felt twin pangs of relief and disappointment, my birthday was way off yet. The idea of having a vibrator was getting to me and I also felt the first signs of an orgasm gather inside me.\n\n\"Do you have one?\" I asked her, anxious to keep the subject alive.\n\n\"I've got three.\" She gasped, fingers flying over her clit and her voice thickening. \"But I want to get another. I want a really big one, just to see if I can take it.\"\n\nI was surprised at that. Hayley has such a slender, petite frame that I didn't think she would cope with anything over natural sized. She must have seen the surprise on my face.\n\n\"I love feeling overfull and being stretched.\" She shot me a strange little grin. \"It really gets to me. Sometimes I cram as many fingers into myself as I can and then I even pull myself open.\"\n\nShe'd mentioned that on Saturday, but I must admit it isn't something that I fancy and I'd ignored it. Then, as if to demonstrate, she let go of her breast and reached over the top of her pussy and the fingers that still played with her clit to find her vagina with her other hand. \n\nOnce again I wished I could see more of her. It looked as if she was finger fucking herself with two fingers, but I couldn't be sure from the way we sat. Even so, just what I could see was wonderful and made my climax come closer, that lovely hot pressure inside my pelvis that I knew would soon explode out. I wondered which of us would cum first, but even as the thought went through my mind I heard Hayley gasp loudly and her hips began to jerk wildly.\n\n\"God, I'm cumming already.\" She told me, confirming in a tight little voice what I could see happening before me.\n\nI was tempted to lean forward to see over her pubic mound and just stare openly at her pussy as she came, but my own needs kept me lying back so that my own fingers could carry on playing.\n\nJust like before, she gazed wide eyed into the distance as she cried out her pleasure, her body shuddering and jolting, the wonderfully sexy sensations passing to me where our legs and shoulders touched. I could see by the movements of her wrist that she was plunging her fingers deep into herself time and again, sending shock waves of pleasure through herself. Her climax was a long one, uncontrolled and uninhibited, but eventually it slowly died away and the thrusts of her hips against her probing fingers lessened and her cried subsided into little whimpers, until they too ended and Hayley sprawled beside me, sweating and panting, totally spent.\n\nOnce again she gave me that dreamy, languid smile of contentment, but this time I was not close enough for her happiness to trigger my own orgasm, even though her obvious ecstasy had brought it ever closer. I was still rubbing my clit, little involuntary twitches the only clue as to how my pleasure was building.\n\n\"That was bloody marvellous.\" She told me lazily, her hands still cupped over her pussy and her legs still spread out wide in relaxed abandon.\n\nI just nodded, my face muscles tight from my own play. I looked across at her, seeing her now just resting and watching me, and for a brief moment I felt both shy and happily exhibitionistic at the same time. It giving me a strange thrill of delight to be so blatantly watched, and the fact that she was doing nothing but sitting there was somehow adding to it. It didn't take long to tip me over the edge.\n\nJust like the first time, Hayley's presence made my orgasm so much stronger than usual. It rolled over me like a series of hot waves breaking inside my pelvis to send ripples of pure joy right through me. My back arched, my muscles tightened and I let out one long cry of pure bliss, a cry that finally subsided with my orgasm into a kind of half coherent, half animal, long drawn out whimper. I fell back against the back of the sofa and just sat there, shuddering from occasional aftershocks and gasping for breath, my chest heaving and my heart racing.\n\nFor several minutes we sat side by side in silence, that is to say, silence except for my panting as I waited for normality to return. \n\n\"Wow!\" I said when I eventually regained control of myself, completely unable to articulate my pleasure in any other way.\n\n\"I take it you enjoyed that?\" \n\nHayley was smiling a kind of happy beatific smile that showed just how pleased she was at my enjoyment. I smiled back and took her hand in mine, our entwined fingers resting pleasantly on the bare flesh of my thigh. \n\n\"I loved it.\" I told her. \n\n\"What could have made it better?\"\n\nI thought at first the question was rhetorical, but the look on her face said otherwise. She was looking for suggestions and that meant she wanted us to do it again sometime, and I was all for that. I tried to come up with something that might help.\n\n\"Nothing that I can think of, it was bloody stupendous as it was.\" I frowned with concentration. \"Unless...\"\n\n\"Unless?\" She prompted me.\n\nI hesitated, not sure how she would take my suggestion. Maybe it would be going a step in the wrong direction.\n\n\"Unless we could somehow sit facing each other. Then we could see so much more of what we were doing.\"\n\n\"Yep! That's just what I thought.\" To my surprise she was grinning as she spoke. \"I wanted to look at you properly, but I couldn't see, and I thought you wanted to see more of me, you kept leaning over a bit to try and look at my pussy.\"\n\nI hadn't even realised that I had, and I certainly hadn't thought Hayley would pick up on my thoughts.\n\n\"Sorry, I hadn't noticed that I did.\"\n\n\"No. Don't be sorry. I wanted to see everything you've got as well, and what you were doing to it.\"\n\n\"So, if we do it again...\" I paused, wanting to see her agree that we would.\n\n\"We will, or I hope we will -- and more than once.\" She told me solemnly, making me smile with joy.\n\n\"Then, when we do, should I sit on the sofa opposite? We can pull it up closer and then we'll see each other completely.\" I said 'when' deliberately.\n\n\"We don't need to. Watch!\" \n\nHayley stood up, and then put one foot on the sofa before she sat down again in the corner, facing diagonally along the length of the seat. With one foot on the floor she then bent her other leg and leaned her knee on the back of the chair, opening herself up to my gaze completely.\n\n\"Now you do the same.\"\n\nShe waited patiently while I gathered the strength to follow suit, my recent orgasm had robbed me of all energy. At first we were an uncomfortable tangle of legs, but after a little experimentation we got ourselves sorted out. Hayley's sofas are not long, and when we sat facing each other our legs overlapped almost their entire length, but we found that by sitting facing directly along the seat and with her legs resting over the top of mine we could sit very comfortably, our upper backs and heads on the fairly high arms of the sofa, our legs wide apart and our pussies in full view and only about eighteen inches apart. My left foot was on the floor and my right leg threaded past hers to lie alongside her body, whereas her slender limbs were both resting either side of my torso with her knees bent over my thighs. It was a very intimate and open position to be in, much more so than being on opposite sofas, and we could both see every detail of each other.\n\n\"Well? Will this do?\" She asked me, putting her hand down between her legs and pulling her labia apart with scissoring fingers. \n\n\"Oh yes!\" I said, staring at her opened pussy.\n\nHayley's pussy is neat, that's the only way to describe it. She does not have the puffy outer lips that I have, even when she was as aroused as she was at that moment, and her inner lips are small and firm, hidden for the most part until her pussy is opened. She shaves, but even if she didn't I'm sure that her blonde fuzz would still look good against the pale pink that shaded to the deep rose of her vagina. It is, if there is such a thing, a beautiful pussy, and I couldn't take my eyes from it.",
        "She looked directly into my face, watching me watching her, and then using one finger between the two that held her open, she began to play once more with her clit, stroking the little button as it peeped from its hood. She knew just what she was doing, exhibitionistic arousal was painted all across her face as she deliberately displayed herself to me. I watched in fascination, seeing her fingertip rubbing so lightly over her clit that it hardly seemed to touch, though touch it did, for her eyes revealed the pleasure it generated. \n\nAs I watched, her other hand reached for her breast, once again squeezing and massaging it, rolling the nipple between her fingers, while all the time she looked straight into my eyes. She was, it seemed, intent on taking herself to orgasm once more, and my own hand found its way back between my legs when I realised that I was still turned on enough to cum again.\n\n\"This is lovely, isn't it?\" Once again Hayley asked for my input.\n\n\"Beautiful -- and so are you. You look absolutely fantastic.\" I told her, meaning every word of it, but in the purely physical sense.\n\n\"Thank you, so do you.\" She smiled and turned her gaze to where my fingers were sliding up and down the length of my slit. \"You're wet through. I can see your nectar running out of you.\"\n\nI'd never heard my wetness described as nectar before, and I think I actually blushed slightly at the unexpected pronouncement. I looked at where her own entrance was just as slick and shiny as mine.\n\n\"Yours too.\" I told her.\n\n\"Mmmm! I bet it looks nice.\"\n\n\"I've already told you that.\" I reminded her.\n\nShe was still gently playing with her clit and I was watching intently, happily aware that just as I was watching her, so she was watching my fingers rubbing my own.\n\n\"Do you like doing it with somebody else there?\"\n\n\"Yes.\" I couldn't deny the enjoyment of having her present. \"It turns me on -- a lot!\"\n\n\"Me too.\"\n\nShe wriggled a little to get herself more comfortable, and in doing so she slid along the sofa a little, so that her pussy was now only about a foot or so away from mine. Her legs were alongside me with her feet nearly level with my breasts, so that I was almost enclosed between her thighs. If I hadn't been wet before, I was then; it seemed so very sexily wicked that we were so close. I laid my free hand on her knee and gently massaged it as I played with my clit. Hayley smiled in approval.\n\nI had been tracing the length of my slit with my first two fingers, spreading my wetness from top to bottom, but now I concentrated on my clit, just as Hayley was doing. We sprawled there facing each other, each staring openly at the other's pussy while our fingers rubbed and caressed our clits. It wasn't long before I started to feel that wonderful warm feeling again and my breathing began to deepen. I'd cum once and I knew from past experience that my second one would be slower than my first, so I just lounged back and played gently with myself, luxuriating in the wonderful sensations and the proximity of my best friend, watching her through lazily hooded eyes.\n\nAt first she was still holding herself open and playing with one finger, but as she became more aroused she started to us two fingers on her clit, trapping it between them and rubbing not so gently up and down and side to side. Her breathing became quicker and her entrance ran with her juices -- her nectar.\n\n\"Now you're really flowing too.\" I told her in a voice tight with arousal.\n\n\"Am I?\" She gasped. \"Good, I like it when I'm really wet.\"\n\nShe released her nipple and reached down over the top of her other hand to explore her own vagina just like before.\n\n\"Mmm. I am aren't I?\"\n\nI watched as first one and then two of her fingers slid inside her, pushed deep into tunnel and then pulled out accompanied by a gorgeous sucking sound. I felt my climax loom closer as she breathed deeply through her nose and closed her eyes in enjoyment of her own sensations. \n\nTwice more she plunged her fingers into herself, quietly gasping each time. But then she took her hand away and disappointment welled up in me. I had been so enjoying her display and it was bringing my reluctant orgasm closer and closer. \n\nStopping was not her intention, though, and she now twisted slightly to the side, raising one buttock and reaching under to finger herself from below. God, if someone had told me that I would see such an erotic sight so close before my eyes, I would have told them not to be so ridiculous, but there it was. I could see her clit being pushed from side to side, swollen and red, and her slit shining wet from her juices. Then, as I looked I realised I could actually see right up inside her sodden tunnel, the lovely glistening tube of her vagina, displayed because her thrusting fingers were entering partly from the side and were pulling her wide open.\n\n\"Oh God, I'm going to cum.\" She announced in a tiny voice, her bottom beginning to bounce on the sofa from little involuntary thrusts of her hips.\n\nThis time, when she came she stared directly into my eyes, her mouth open and emitting a high keening sound as if the orgasm was too intense for her to cope with. Every muscle tightened in her body and then she cried out, the sound turning to a series of incoherent words spoken explosively each time her fingers were rammed deep into her pussy. It was a fierce orgasm, as strong as I ever believed possible, and when it was over Hayley simply sat there for a while panting for breath, her eyes still locked on mine. Then she blinked, smiled, and returned to the real world from the planet of ecstasy that she had been transported to.\n\n\"Fucking hell, Sue.\" She exclaimed. \"I've never had one that good before.\"\n\nMy own orgasm was approaching now, its arrival imminent and unavoidable, and I just nodded and smiled my understanding as my fingers rubbed my clit. Hayley looked at me for a minute or so, her eyes travelling all the way from my face to my pussy and back, and then she relaxed back, as if to await my climax. Slumping back in her seat she took her hands from over her pussy and studied them, looking, as I was, at the wetness still clinging to her fingers. Then, making sure that I was watching, she slowly raised two wet fingers to her lips and licked her own juices from them, running her tongue lasciviously along them before putting them right into her mouth and sucking on them.\n\nI was shocked at this behaviour, but it gave me an unexpected and very strong buzz to see her do it. I suppose my surprise must have shown on my face.\n\n\"I love doing that, don't you do it?\"\n\nI shook my head, unable to answer for my approaching orgasm. She repeated her action, reaching between her legs to gather more of her juices and then placing her fingers directly into her mouth. I couldn't repress the groan as I thrilled to what she was doing. She reached down once more, and then held her fingers up as if to inspect their wetness.\n\n\"Try it.\" She suggested.\n\n\"I will.\" I gasped out, little darts of pleasure shooting through me as I got closer to cumming.\n\nI had meant it, when I said I would try it. I mean, I'd tasted myself on Paul's cock before now and I hadn't found my taste unpleasant, I'd just never thought of doing it when I masturbated. Now, suddenly, the idea appealed and I fully intended to lick my own fingers after my impending orgasm had run its course. But that wasn't what Hayley had in mind.\n\n\"I'm going to cum soon.\" I told her by way of clarification, my voice sounding breathless from my fingers flying faster and faster over my clit.\n\n\"Try it.\" Hayley suggested again, but this time she made her meaning clear by presenting me with her two wetted fingers, holding them a couple of inches from my mouth.\n\nNormally I would have been offended and horrified at such a thing, but this time, as if hypnotised, I opened my mouth and leaned forward slightly to take her proffered digits. My lips closed around them and my tongue ran over their tips, tasting her very intimate essence and I shivered from the beautiful thrill of it. \n\nShe tasted like me, but not like me. It was like two bottles of good wine, they both taste good, but in different ways, and I loved the taste of her pussy juice. Perhaps because it wasn't mine, perhaps because it tasted slightly different, and probably because I shouldn't have been tasting it in the first place, it tasted wonderful, and I almost wanted more. I felt genuinely deprived when eventually she gently withdrew her fingers and smiled at me. \n\n\"Did you like that?\" She asked.\n\nA thrill went through me and I shuddered, nodding silently and instinctively licking my lips. I couldn't speak, my orgasm was there, triggered by Hayley's behaviour and the taste of her nectar, I just looked at her wide eyes as the first surge of pleasure flooded through me. \n\nI don't think I cried out this time. The sensations were so strong that my eyes and mouth shut tight, my muscles fighting each other to contract, preventing the wail of pure enjoyment that my mind wanted to release. Maybe I moaned a little, deep in my throat, and maybe not, but if I didn't then my silence did not indicate a weak climax. I came like the proverbial express train, my hips and pelvis lunging at my hand wanting to make it squeeze my clit harder, wanting to be entered, and wanting really to be fucked. It did eventually subside and I did eventually open my eyes and stop rubbing at my clit, letting my hand drape limply over my pussy.\n\nI rested for a minute or so, gulping air into my heaving chest and listening to my heart pounding against my ribcage, but then I felt something touch the back of my hand and I looked down. What I could feel against the back of my hand was the back of hers. Our orgasms had made us jerk and jolt until we had moved to within a couple of inches of each other, our pussies very nearly touching. My God, what would have happened if one of us had jerked just that couple of inches further?\n\n\"If we're going to do that again.\" Hayley told me, smiling gleefully. \"Perhaps I'd better buy a double ended dildo?\"\n\nFor a moment a jolt of alarm shot through me again, but then that mischievous twinkle was back in her eyes. Even so, the situation was so silly that I couldn't help but burst into laugher, giggling uncontrollably at Hayley until she had to giggle too. It must have been quite a sight. Two naked women, half sitting half lying on a sofa with their legs entwined, and giggling like madwomen.\n\nI hadn't agreed to her dildo proposal, but then, I hadn't said no either."
    ],
    "authorname": "Otazel",
    "tags": [
        "female masturbation",
        "mutual masturbation"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/busy-fingers-ch-02"
}