{
    "title": "Might Have Been Ch. 08: Conclusion",
    "pages": [
        "I'm on a roll, I'm on a roll<br>This time, I feel my luck could change<br>Kill me Sarah, kill me again with love<br>It's gonna be a glorious day\n\n-- Radiohead, Lucky\n\nNew York - August 25, 2012\n\nCentral Park moved past at a five mile per hour pace. I played my game of Pekingese Slalom, dodging dogs, their leashes, and owners. My feet padded through the park, with Green Day's Basket Case as my personal soundtrack.\n\nI enjoyed running. I dropped twenty pounds in the past ten months, and am back in fighting trim. New York is a better place to run than Chicago. Central Park is an island of green surrounded by a sea of skyscrapers. I don't forget where I am, and that this is where I want to be.\n\nThe sights and sounds of New York lack the emotional baggage of Chicago. The city Sandburg called the \"hog butcher for the world\" can take its big shoulders and go fuck itself. Here, I am not constantly reminded of the things I would prefer to forget, but can instead remember only what I choose.\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>Batavia, Illinois - October 19, 2011\n\n<br>The world dissolved into my project room at Fermilab.\n\nThe floor was hard against my back. I blinked twice and stood, still clutching the resonance array in my hands -- one of which had a painful electrical burn.\n\n\"Lance! Are you alright?\"\n\nI looked for the voice and saw Dr. Nguyen at the door, striding toward me with concern on his face. \"Yes. I... uh... just found a gap in the safety procedures and shocked myself. I'm fine.\"\n\nHis concern didn't disappear. \"Very good. Very good. Was the experiment damaged?\"\n\n\"I haven't checked, but I can't see why it would be. I was just getting ready to run the final diagnostic of the software.\"\n\n\"Don't let me get in your way.\" He had spent two years of his life on this experiment, and tomorrow was the day it would start, so I didn't blame him for staying until we were certain nothing was damaged. In fact, given how much of his blood and sweat he poured into this, I was touched he only asked about the experiment once he knew I was alright. Nice guy.\n\nCertain the power was off this time, I placed the array where it belonged in the containment unit. I also made a quick modification to the software to automatically cut power to the array when its hatch was open, to prevent my accident from occurring to anyone else.\n\nEverything checked out. \"We're ready for tomorrow.\"\n\nProfessor Nguyen had been concealing his concern, and an expression of vast relief rolled across his face. \"Oh, thank God. How about your accident? How do we prevent that from happening to anyone else?\"\n\n\"I already took care of it.\"\n\nHe nodded, and pulled up a chair. \"I already knew about your smarts and work ethic, and you show initiative as well. So what's the deal with you? The rumor around the building is that you had a lot of talent, but lacked the ambition to get your doctorate.\"\n\nI had heard the same rumors before, but hadn't disputed them. \"It wasn't lack of ambition. I had some personal problems, which took some time to resolve. I'm planning to re-apply for some schools for next fall.\"\n\n\"Good. Science will be better for it. If you need a recommendation letter, let me know. Now go home. It's late.\"\n\nI took his advice and left work.\n\nSitting in my car in the parking lot, I sent Tasha a text. Worked late. Too tired for the drive. Crashing in a hotel.\n\nTasha liked living and working downtown, so I had a long reverse-commute out to Batavia every work day. She would be asleep and wouldn't see the text until tomorrow morning. Tomorrow was Thursday. I had to work, but she was on a late shift. If things went as planned I could leave work early, and wouldn't even see Tasha until she returned home around ten at night.\n\nI checked into the nearest Super 8, and slept like a baby.\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>New York -- August 25, 2012\n\n<br>I finished my run through Central Park, and returned to my new apartment, only two blocks away from Columbia on the Upper West Side.\n\nA few boxes were still strewn throughout the apartment, left over from yesterday. My books were all neatly on the shelf, and my computer and wireless were hooked up, but most of my clothes and personal items sat in boxes or suitcases. I grimaced at my own skewed priorities as I headed to the shower.\n\nThe rest of my gear would have to wait a little longer. I had other plans today.\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>Chicago -- October 20, 2011\n\n<br>My stuff was already packed and in the car, and I waited for Tasha to return. The clocks ticked slowly, allowing ample time to imagine worst-case scenarios, which made for a long evening. This wouldn't be the dress-rehearsal, but the opening night of a one-performance show.\n\nWould she cry and beg? If so, I was certain I could resist her, as I already resisted her a universe away. Would she hurt herself or threaten suicide? If that happened, my plan was to leave immediately and call 9-1-1. Knowing my response, however, didn't diminish the dread shredding my abdomen.\n\nTasha finally returned just before ten. She immediately noticed the changed appearance of the apartment, but her expression was one of curiosity, not anxiety.\n\nI told her our relationship had run its course. I wasn't happy, and was moving out immediately.\n\nShe sighed. \"It's probably for the best.\"\n\nThat was the one reaction I hadn't expected. I had stayed with her several years longer than had been good for me, under the belief she needed me. She had said so many times.\n\nWhen had been the last time? The last serious meltdown had been almost three years ago. I had been strenuously avoiding conflict since then. Was there anything more recent? I drew a blank. Was it a ploy? Was she pretending to not care in order to draw me back? I didn't think so. Tasha was not that kind of manipulator.\n\nWe talked for an hour, mostly over material things. I hadn't packed any items that we had purchased together, or any of the gifts I had given her, but she didn't want some of them. We stowed them into two more boxes, for which I said I would return at a later date.\n\nTasha was relieved when I told her I would pay my half of the rent through the end of our lease in December. She didn't think she would be able to keep the apartment on her own, and she didn't want a roommate. The extra time would allow her to find something cheaper and smaller.\n\nI didn't offer to help her move when the time came.\n\nTasha's lack of reaction perplexed me. Where was the tantrum? Where was the threat of suicide?\n\nMy inner optimist wondered if I had saved her after all. My reliability over the years had provided the stability she needed, and she could now stand on her own.\n\nThe cynical part of me believed she let me go without a fight because I had nothing more to give her. I had sacrificed everything. Why would a spider care if a dry husk of a fly happens to fall out of its web?\n\nNeither interpretation was completely satisfying. This had been hard for me because I still loved her. I was leaving because she was killing me, but I still cared deeply about her. Maybe that wasn't the case with her -- maybe Tasha no longer loved me -- maybe she knew all I had sacrificed for her, and hadn't had the heart to end it herself. If so, the intent of staying with me wasn't cruel, even if the effect was. If I had known her reaction would be this mild, I could have ended it years earlier.\n\nIf... if...if. Fuck it. I was done with regret and second-guessing.\n\nI held her in my arms one last time, and gave her a kiss on the forehead. I wished her well, and meant it.\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>New York -- August 25, 2012\n\n<br>My destination was two miles south. I worked my way there slowly, walking down Columbus. I stopped by Bernstein Brothers and picked up bagels, cream cheese, and two cups of coffee. Saturday mornings in Manhattan were comparatively relaxed, with the hustle-bustle of work life replaced by the slightly relaxed urgency of Manhattanite leisure. I enjoyed my walk.\n\nI expected to feel the tightening screw of anxiety as I approached, but instead I felt anticipation, curiosity, and hope. Having made better time than I planned, I loitered outside for two minutes until the clock on my phone read 8:18 AM. I walked toward the building and reached the front door just as an elderly man left it -- successfully skirting the security system, which had been my goal -- the better to enhance the surprise.\n\nHeading up the stairs, one flight, two, down the hall to apartment 3C, I breathed deep and knocked on the door -- two firm taps.\n\n\"I'll be right there,\" said a woman's voice from inside.\n\nShe had kissed me once, several universes away, but in this one I had wronged her, and she was one of the most formidable creatures I had ever met. My heart was in my throat as she opened the door.\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>San Francisco -- March 10, 2012\n\n<br>Zoe was the most beautiful thing I had ever seen -- an absolute angel. I held her gently in my arms for another minute, lost in the trust and love I saw in her eyes.\n\nShe opened her lips, as if to speak deep philosophical truths to me, but instead spat milk on my shirt.\n\nDave accepted her back while I cleaned up. \"Getting puked on is a badge of honor for an honorary uncle.\" He threw a burp cloth over his own shoulder and held his daughter against his chest. She was three months old.\n\n\"I hope she honors you even more than she just did me.\" We were already falling back into old patterns.\n\nDave's wife Colby had ducked out to get dinner. I wasn't sure if the question I wanted to ask was one I should ask in her presence, so I saw this as a good opportunity.\n\n\"I've lost touch with a lot of people over the past six years,\" I said.\n\n\"You haven't heard of Facebook?\"\n\n\"Not everyone is on it, and some of them don't post their situation.\"\n\n\"Who in particular?\"\n\n\"The Exquisite Sarah.\"\n\nDave nodded, unsurprised. \"She broke my heart, you know.\"\n\n\"I know.\"\n\nHe held up his daughter, and kissed her on the cheek. \"Best thing she ever did.\"\n\nI looked at the girl in his arms, the smile on his face, and at his nicely furnished house, with its state of the art Alienware gaming rig, home theater, and the various Game of the Year, and Designer of the Year software awards lining his shelves, all of them for a steampunk MMO that had won rave reviews two years ago. I had just met Colby for the first time, and liked her tremendously. She was the type of highly organized, upbeat field marshal that Dave needed to keep him focused, and he was madly in love with her.\n\n\"Best thing she ever did,\" I agreed.\n\nDave stood, taking on an air of self-importance. \"Thou seekest Sarah,\" he stated, sounding like a quest giver in his newest medieval adventure game.\n\n\"It is so.\"\n\n\"Knowest thou where she resideth?\"\n\n\"The great wizard Google hath told me.\"\n\n\"Havest thou a plan?\"\n\n\"Hast, numbnuts, hast.\" \n\n\"Hast thou a Cunning Plan, asswipe?\"\n\n\"It begin...eth with thee.\"\n\nDave nodded. The conspiracy had begun.\n\n\"Last, and most significant,\" he asked with an aura of solemnity I didn't think was part of his act, \"art thou worthy?\"\n\nI thought about that one. \"I'm working on it.\"\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>New York -- August 25, 2012\n\n<br>Step One: Surprise Sarah at her apartment with breakfast.\n\n\"Oh my God, Lance!\" Sarah threw her arms around me. She was dressed, but had that fresh-out-of-the-shower look. Her black hair was damp and smelled of residual shampoo.\n\nI hadn't been sure she would recognize me, or what her welcome would be if she did. \"Careful, you will squish breakfast.\" I briefly regretted picking up the coffee and bagels, as they prevented me from returning her hug.\n\nSarah released me. \"You brought me breakfast! It's like you read my mind. I was just going to get a bagel and coffee.\"\n\n\"I was in the neighborhood...\"\n\nSarah rolled her eyes, but it was benign. \"Come in, come in!\" She motioned me into her apartment, still excited. She performed what she called her \"happy dance\", where she held her arms in a boxing stance and ran in place, rapidly bouncing from foot to foot. She was wearing red shorts, and a tight black tank top displaying a Banksy silkscreen -- a doctor applying a stethoscope to \"I \u2665 NY\". Sarah had always had a nice figure, but now she had the efficient and sinuous physique of a professional dancer.\n\nHer apartment was a reflection of her. A Matisse Jazz print was prominent over her sofa. There was a black and white photograph of an athletic young man who looked vaguely familiar, but I couldn't place him until I noticed the photo was next to a movie poster of It's Always Fair Weather. (It looked like an original -- Sarah was doing well.)\n\n\"Michael Kidd?\" I asked, feeling lucky -- the only two choreographers I knew were him and Bob Fosse.\n\nShe nodded, impressed. \"You must still watch a lot of movies.\"\n\n\"That's one of my favorites,\" I said, pointing to the poster. \"An eidetic Cyd Charisse dancing in the gym, Gene Kelly on roller skates, the trashcan lid dance, what's not to like?\" I set out the bagels and handed her a cup of coffee -- skim milk, no sugar. \n\nShe took a sip, and smiled. \"Perfect.\"\n\n\"I just moved in yesterday. I figured if I didn't see you first thing after moving to Manhattan, and you heard about it, you would track me down and kick my ass.\"\n\nSarah's generous red lips parted in a half-smile. \"You figured right.\" She then raised her eyebrows. \"You moved here?\" Was that a sparkle of hope? Or apprehension?\n\n\"I live on 110th Street.\"\n\nI watched her do the geography in her head before she spoke. \"A little bird told me you might be coming. And you can sit down, you know.\"\n\nWe both sat at the table. Sarah angled away from me, showing a profile and a slightly cool shoulder.\n\n\"I wondered why you weren't too surprised, and Dave isn't a bird.\"\n\n\"He sure sang like a canary.\"\n\n\"What did he say?\"\n\nSarah spread a small amount of cream cheese on a wheat bagel, and spoke in a casual tone. \"You were in a horrible six-year relationship, had some sort of epiphany that had something to do with me, and you finally dumped the bitch. You were waiting to hear back from Columbia and Stanford about grad school. Despite not contacting me in ten years after writing a nasty message, you were planning on wooing me.\" She was carefully watching my reaction. \"Same old, same old.\"\n\n\"That fucking bastard,\" I said without malice. I paused, then asked, \"He said 'woo'?\"\n\n\"Our dear Dave always had one foot in the Nineteenth Century. It's probably good for you he warned me. I was furious when he first told me, but I had some time to think about it.\"\n\n\"That's why I asked him to tell you.\"\n\nSarah's eyes widened at the revelation.\n\n\"I'm glad you two are talking again,\" I added.\n\n\"Me too.\" She frowned, still processing the knowledge I was obviously enacting a plan.\n\nI changed subjects. \"What have you been up to, Sarah?\"\n\nShe leaned forward with a beatific smile on her face. \"I love my job! I was a good dancer, but I was never going to make a career out of that alone. It turns out I'm awesome at choreography.\"\n\n\"You always have been. What are you working on?\"\n\n\"There is a musical version of Jaws opening this winter on Broadway. I'm an assistant choreographer. On Monday, I'm supposed to present some ideas for Sheriff Brody's big dance with the shark.\" She gestured over to a desk, where I saw what looked like sheet music, only marked with boxes containing stick figures and symbols.\n\n\"He dances with the shark?\"\n\n\"It's symbolic and artsy, you know, for the critics.\" Her eyes raised to the heavens at the ridiculousness of her task. \"Or at least it's written that way. Get this! The musical number is called We're Gonna Need a Bigger Boat!\"\n\n\"Of course it is.\"\n\n\"I think I can make it less preposterous than it sounds.\"\n\n\"What, make it ironic?\"\n\n\"I don't think it's fair to your material to make fun of it, but I think it can work if we play up humor as a defense against fear.\"\n\n\"Via dance?\"\n\n\"That's what I do.\" She was getting excited again, and I couldn't help but share her enthusiasm.\n\n\"Have they cast the shark yet?\" I was joking. It would surely be mechanical, or played by a team of stagehands.\n\n\"Nathan Lane,\" she said.\n\nI love Broadway. \"I'll be there opening night.\"\n\n\"Please do!\" She had turned to face me now, obviously warming to my presence.\n\nI sipped my coffee for dramatic effect, before confessing, \"I missed you, Sarah.\"\n\nShe pursed her lips and arched an eyebrow, saying nothing for a moment. \"Lance, you were one of my best friends, and were always talented with words. You used that talent to hurt me worse than I have ever been hurt by someone I viewed as a friend, and then you ignored me for ten years.\" There wasn't as much malice in her voice as there could have been. It had the feel of rehearsal. \"What should I make of you saying now that you missed me?\"\n\n\"I'm trying to reconnect with the people who I cast aside, and you were at the top of my list.\"\n\n\"After Dave,\" she corrected sweetly.\n\n\"No, you were ahead of Dave.\"\n\n\"You talked to him months ago.\"\n\nSarah was on high alert for bullshit, and I wanted her no other way. \"Yes, and you seem to know the reason I talked to him.\" I left unspoken another reason, that I wanted Dave's permission before I made a play for Sarah. Yes, he was married and hadn't dated her for ten years, but guys could be weird about such things.\n\n\"Ah, yes,\" Sarah said, \"the wooing thing. When you changed the subject, I assumed it made you uncomfortable.\"\n\n\"No, it just wasn't the right time. Now it is. Does it make you uncomfortable?\"\n\nHer smile was wary. \"I haven't decided yet.\"\n\n\"Understandable.\"\n\nShe raised an eyebrow. \"That girlfriend of yours really did a number on your head. The Lance I knew would have been offended I didn't view him as a gift from God.\"\n\n\"Was I really such an arrogant bastard?\"\n\n\"More of a son-of-a-bitch than a bastard, but we loved you for it.\"\n\n\"Ha! No, I have my mojo back. I just understand why you would be cautious about a guy recovering from a six-year dysfunctional relationship -- particularly one who hasn't said a word to you since writing a despicably insulting email you in no way deserved.\"\n\nShe blinked rapidly at that and looked away, but not before I noticed her eyes had misted.\n\n\"Sarah?\"\n\nThe mist was gone when she looked back at me again. \"What's your Cunning Plan?\"\n\n\"Plan?\" I removed all sincerity from my smile of innocence.\n\n\"If you knew I would be cautious, you concocted one of your Cunning Plans.\"\n\n\"I have learned a lot about improvisation.\"\n\n\"As a fallback for when your plans go tits-up.\"\n\nI laughed. Ten years, and she still knew me. \"Yes, I have a Cunning Plan.\"\n\nShe rested her face in her hands, blue eyes wide open, preparing to listen. \"Spill.\"\n\n\"The groundwork was having Dave act as my herald, which I thought would initially piss you off, but then intrigue you. Now we're onto the plan itself. Step One was to surprise you at your apartment by bringing you bagels and coffee for breakfast. Step Two is to convince you I have my shit together and am worth the effort. Step Three: seduce you. Step Four: have wild sex with you on that couch, and then again in your bedroom...\" I checked the time on my phone. \"...All by ten o'clock this morning.\" I was Babe Ruth in the 1932 World Series, calling my home run shot. I couldn't guarantee it would work, but I was fucking certain she would want to witness the attempt.\n\nSarah's jaw dropped with a mix of offense and delight. \"Maybe I was wrong, and you are still an arrogant son-of-a-bitch.\"\n\nI took a bite of my bagel. \"Maybe. You said a few minutes ago that you used to love me for that. I don't think you were entirely joking.\"\n",
        "Sarah blushed, but her smile dimmed. \"Didn't some guy say no plan survives first contact with the enemy?\"\n\n\"General Moltke, I think. Good thing you and I are old friends.\"\n\nSarah wasn't convinced. \"You really hurt me, you know. I don't waste time on grudges, but regaining trust is another thing altogether. You have your work cut out for you.\" Sarah took a sip of coffee, appraising me over the rim with a blue steel glint in her eyes. I had her attention. \"I've eaten my bagel. I guess it's time for you to move to Step Two.\"\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>Evanston, Illinois -- April 7, 2012\n\n<br>\"Good morning, Mrs. Pugacheva.\"\n\n\"You are... Lance, no? You used to be big shot student who worked with my husband.\" She was older, with a hint of gray in her hair now. Her eyes were reddened, indicating she hadn't stopped trying to fill the emptiness inside with alcohol. She was still beautiful, even with a morning cocktail in her hand.\n\n\"Yes, Mrs. Pugacheva.\"\n\n\"Call me Irina. Please to come in and have drink.\"\n\n\"No, thank you. I can't explain why, but I owe you a favor.\"\n\nShe gave me the once over. \"I am having ideas on how you could repay.\"\n\n\"I'm flattered, Irina, but if I accept, you won't believe what I have to say.\" Uncomfortable truths are always better spoken by someone who behaves with honor.\n\n\"Yes?\" She frowned. I had piqued her curiosity.\n\n\"Let go of the hate. Find a good immigration lawyer and get your divorce, or move back to Ukraine to be with your family. Get your degree again at an American university. You're better than the life you are leading.\"\n\nHer hands shook slightly as she took a long drink from her martini glass. I saw tears of shame and anger in her eyes as she slammed the door on me.\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>New York -- August 25, 2012\n\n<br>Step Two: Convince Sarah I have my shit together and am worth the effort.\n\n<br>Sarah crossed her arms, and a sad expression darkened her face. \"Ten years ago, Lance, you would have never needed to convince me you were worth the effort.\"\n\n\"No?\" She had steered the conversation away from where I wanted to lead it, but I knew she needed to say this. She was still afraid I was a desperate man on the rebound, and was trying not to hurt me.\n\n\"Never. But I'm not looking for a project. People change only slowly, or not at all. I'm not a nurse to put Band-Aids on your romantic wounds, or a guru who will help you find yourself. I live in one of the world's centers of fashion, but I buy my clothes off the rack, because I like to know what I'm getting.\"\n\n\"I left Tasha almost a year ago. I'm not on the rebound. I had some shit to work through, and I did it. That's why I didn't contact you earlier. I wanted to bring my A-game, not baggage.\"\n\nThat earned a brief smile. \"Here's a question, Lance. Did you come to New York for me, or for you?\"\n\nThe question was laced with traps. Telling her it was for me sounded like a lie. Saying it was for her had the stench of desperation. I chose the truth. \"I applied to Stanford and Columbia because they were the two programs I wanted most. I did that for me. I was accepted to both. I chose Columbia because I love New York City, I have some academic contacts and friends here who will help me, and because it would give me a chance with you I would never otherwise have.\"\n\n\"You're idealizing me. You just got out of a nasty relationship, and you seem to give me credit for it, even though I haven't seen you in ten years, and we didn't part on the best of terms. You're putting me on a pedestal.\" Her eyes pleaded with me to prove her wrong.\n\nI shook my head. \"I know exactly who you are.\"\n\n\"Oh?\"\n\n\"You're someone who had the courage ten years ago to sacrifice her own happiness for a man who was willing to pay any price and follow her anywhere to be with her. You had the compassion to do what needed to be done to protect Dave from himself, and the fortitude to stick with your decision, even when vilified by people who should have known better, like Dave himself. And me.\"\n\nSarah's eyes were misting again, and she pulled her lower lip into her mouth to conceal a quiver.\n\n\"Do you want to know how I got my shit together? By finally realizing what a beautiful thing you did. You're the strongest woman I know.\"\n\nShe swallowed as she looked away, and her hands dropped to her lap. \"What time is it?\" she asked, with a slight choke to her voice.\n\n\"Almost nine o'clock.\"\n\nSarah nodded. \"I think you're clear for step three.\"\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>Indianapolis -- May 21, 2012\n\n<br>I pulled over and parked a hundred yards away from the gray ranch-style house at 7 AM. I sat in my car, reading the New York Times on my phone while I waited, keeping one eye on the house.\n\nA little before seven thirty, the garage door opened and a Ford Explorer backed out of the driveway, and drove past me, heading toward downtown. I glimpsed the driver -- a thin, weaselly man with a receding hairline. Weaselly Man looked to be the right age.\n\nOnce I had driven my car around the corner and parked it again, my nerves tightened. I'm not a criminal, I reassured myself. I walked toward the back of his house, but made a point of acting like I belonged there. I wore a Chicago Cubs cap and had grown a week of beard to make me harder to recognize. Once out of sight, I donned leather gloves, and searched the ground. That landscaping rock should do nicely.\n\nThe black paint on the basement windows did not escape my notice.\n\nI pulled out a towel, wrapped it around the rock, and approached the sliding glass door to Weaselly Man's patio. The cushioned rock hit the glass with a muffled crack, punching a hole big enough for my hand to reach inside and unlock the door.\n\nNo sign or sound of an alarm system. I wasn't surprised. If I were right, I didn't think Weaselly Man would want authorities responding.\n\nAs expected, a quick check of the rooms on the main floor revealed nothing. I swallowed as I opened the basement door, and headed down the stairs, trying to push away thoughts of Silence of the Lambs. The basement was finished, but not in any normal way. The windows were sealed off, covered by a material I didn't immediately recognize. The same material covered the walls and ceiling. Looking back up the stairs, I saw it also covered the basement door. I guessed it was some sort of acoustical panel to mute sound.\n\nA small unenclosed toilet and shower stood in one corner, where the floor was nothing but exposed concrete and a drain. The shower had no curtain.\n\nIn the adjacent corner, I noticed a room with concrete blocks for walls, sealed with a steel door.\n\nOh fuck. I had hoped I was wrong, and I would just be leaving a hundred bucks on Weaselly Man's table to pay for the door damage, but the knot in my stomach, and the evidence in the basement were screaming I wasn't wrong.\n\nAn assortment of S&M gear lined the wall, each well-maintained and kept in its own special niche. Weaselly Man showed these instruments lots of care and love.\n\nAnger and bile rose in my throat, and I swallowed both.\n\nThe steel door was secured with three deadbolts, plus a drop bolt sending a bar of steel deep into a drilled hole in the concrete. Whatever was inside wasn't coming out through the door, at least without permission.\n\nI pulled all the bolts and opened the door. The air inside had the stagnant smells of mildew and desperation.\n\nA figure stirred on a bed. She was naked, and restrained by a sophisticated system that put silk scarves to shame. She was tied face down and couldn't see me.\n\nWelts marred her back.\n\nI heard a tremulous whisper. \"Master?\"\n\nOh, Crystal, I'm so sorry. I masked my voice. \"No, it's not. I'm going to get you some help.\"\n\n\"No, it's you. You're testing me again, but there's no need. Your whore has learned its place.\"\n\nFuck. One year. Her parents hadn't seen her in one year. She had supposedly dumped her boyfriend and moved to Cincinnati. Her parents had received a few letters and emails for the next six months but then those stopped. They had filed a missing persons report and the police could find nothing. She had vanished in Cincinnati six months ago without a trace.\n\nHer parents told me that story when I tried to track her down. Given what I knew about her boyfriend, I had suspected she had never made it to Cincinnati, and that the communications from her had been forged to deceive.\n\n\"Oh, sweetheart, you don't deserve this,\" I whispered. She flinched when I gently touched her leg in a failed attempt at reassurance.\n\n\"Master?\" There was doubt in her voice now.\n\nThere could be no help for her this way, at least not without having to answer uncomfortable questions about how I found her. I climbed the stairs, and punched three numbers into the telephone with my gloved hands. The line picked up quickly. \"Indianapolis 9-1-1. What is your emergency?\"\n\n<br>Indianapolis Star -- May 22, 2012\n\n<br>Burglar Discovers Enslaved Woman in Basement\n\nA 9-1-1 call by a burglar lead to the discovery of a woman reported missing in Ohio six months ago. Neighborhood residents were shocked by the revelation Michael Tracy, of Indianapolis, had allegedly imprisoned the woman in his basement. The victim (whose identity is being withheld) has been hospitalized, and her family has been contacted. An Indianapolis Metropolitan Police Department spokesman said the alleged crime was reported by an unidentified burglar, who had broken into the house Monday morning, discovering the woman tied to a bed. In an apparent twist of conscience, the burglar called the police, but left before authorities arrived.\n\nTracy was arrested at his place of work, and is being charged with kidnapping, multiple counts of sexual assault, and false imprisonment. If convicted, he will face life in prison.\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>New York -- August 25, 2012\n\n<br>\"How are you going to seduce me, Lance?\"\n\n\"That's up to you. You get to set me three tasks. If I complete them, I win.\"\n\n\"You win?\"\n\n\"Your heart, or at least a chance at it.\"\n\nSarah considered. \"Any task?\"\n\n\"Yes.\"\n\n\"So I could tell you to climb the Empire State Building and swat down airplanes?\" Her smile was sufficiently wicked that I knew she was considering it.\n\n\"You can indeed set a task you know I'll fail, which will tell me I can't hope to win your heart. At least not today.\"\n\nSarah pursed her lips in mock disapproval. \"This seems a lazy seduction, Lance. All the creativity is on me.\"\n\n\"Which is why it's brilliant. I set a creative challenge in front of you that will be irresistible, and make you complicit in your own seduction, which you will find kind of hot.\"\n\n\"You haven't seen me for ten years, and you think you know me well enough to make very specific predictions about what I find irresistible, and what makes me hot?\"\n\n\"Yes.\"\n\n\"You don't think making such presumptuous predictions will make me say otherwise, even if you're right?\"\n\n\"Honesty is too important to you.\"\n\nSarah screwed up her lips as she considered that, but I could see the laughter in her eyes even before she spoke. \"Alright, Lance. Game on.\"\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>Mankato, Minnesota -- June 16, 2012\n\n<br>Snazzy Pete was chatting up Red Madison at the bar under the park pavilion. Scott the Hoople had grown his hair long, had developed the perpetually-wide eyes of the paranoid, and had been socially ostracized after trying to convince everyone at the reunion that 9/11 had been an inside job. Sumbeech Carl had turned into three hundred pounds of disgruntled ex-jock who drank whiskey like water. Heather had hugged me when she saw me, and made a point of introducing her husband, who was six inches taller than me, and treated me with the false friendliness of someone who was pretty sure I was going to ravage his wife on the picnic table, and wanted an excuse to stay close so he could kick my ass if I even looked at her crosswise.\n\nThis is fun. I should come to reunions more often.\n\nI had spent time with my parents for the first time in years. For six years, they had avoided telling me what they really thought of Tasha, as they had been smart enough to recognize it would probably drive me even further away, but now that Tasha was gone, the knives came out, and for the past twenty-four hours they had been telling me how much they had disliked her. It was therapeutic, but relentless. The reunion was a welcome respite.\n\nI had missed my five-year reunion because of Tasha, but made a point of attending my ten-year to reconnect, and get leads on a few people. I saw one of my targets from across the room, and walked over to say hello.\n\n\"Amy! You won't understand what this means, and I won't explain, but I need to say thank you.\"\n\n\"Um, hi Lance. You're welcome?\"\n\n\"How have you been?\" She had put on fifty pounds, but appeared happy, and had a big smile on her face.\n\n\"I have been wonderful since I married a good Christian man, and accepted Jesus Christ as my personal savior.\"\n\n\"Oh hey, is that Brittney over near the bar?\" I asked, departing with as much alacrity as I deemed polite. \"I haven't seen her in ten years!\"\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>New York -- August 25, 2012\n\n<br>Step 3: Seduce Sarah\n\n\"Your first challenge,\" she began, \"should you choose to accept it, is to name the seven sexiest words in the English language. One bad choice, and challenge two is peace in the Middle East. You have five minutes.\"\n\nShe wanted to see if I still had any sense of whimsy, or whether Tasha had sucked all the fun out of my life. \"Child's play.\"\n\n\"You may begin.\" Sarah sipped her coffee, watching me with her Mona Lisa smile.\n\n\"There are layers to this challenge,\" I said. \"You will roll your eyes and scoff if I choose pretentiously obscure words like 'callipygian', or 'euphonic', or if I choose something nonsensically pseudo-intellectual like 'cellar door'. My best bet is to stick with humor and heart, which is also what I find sexiest.\"\n\nSarah was bemused. I could tell she enjoyed listening to me think aloud. \"What is 'callipygian'\"?\n\n\"Having a nice ass.\" I gestured toward hers with my coffee cup.\n\nSarah bobbed her head from side to side, considering. \"That one might have worked.\"\n\n\"Alas, we'll never know.\"\n\nSarah's half-smile turned into a half-laugh. \"Tick-tock, Lance.\"\n\n\"Chocolate.\"\n\n\"Ha! That's one.\"\n\n\"Breasts.\"\n\nShe peered down at her own, stretching the limits of the fabric of her tank top. \"I can't imagine why that word would jump to your mind. You're such a guy. That's two.\"\n\n\"Tulgey.\"\n\n\"'Tulgey'? What the fuck is 'tulgey'?\" She was frowning.\n\nI suppressed a smirk at her disappointment. Was she revealing a desire for me to succeed? \"Have you forgotten Lewis Caroll's Jabberwocky, the single most erotic poem in the English language?\"\n\n\"Erotic? Jabberwocky?\" She was smiling now, anticipating a punchline.\n\n\"Don't you remember how the Jabberwock came through the tulgey wood?\"\n\nShe laughed. \"I thought he burbled as he came.\"\n\n\"That too! You see? The poem is downright pornographic.\"\n\nSarah smiled with delight. She had missed our banter, and reminding her was the true point of these challenges. \"So, 'tulgey'. Use it in a sentence.\"\n\n\"A good man's wood is always tulgey for his lady love.\"\n\n\"Points for originality. That's three.\"\n\n\"Love.\"\n\n\"From any other guy, I would call shenanigans. But from you? Four.\"\n\n\"Cock.\"\n\n\"Bold and vulgar, contrasting with the arguably effeminate romanticism of 'love' -- which is smart, dear, because if you had tried two girly words in a row, I would have kicked you in your vagina.\"\n\nI laughed.\n\nSarah continued. \"You're also subtly reminding me of what swings between your legs. I approve. Five.\"\n\n\"My sixth word is Yes.\"\n\n\"A short, classic word, of ancient vintage with notes of cherry and some sort of peel. Orange peel? No. Lemon? No. I have it -- Vincent Peale. Your Power of Positive Thinking is accepted.\"\n\n\"Adlai Stevenson said he found the Apostle Paul appealing, and the Apostle Peale appalling. Please don't lump me in with either.\"\n\nShe blew a raspberry with her tongue, but her smile was wider when she stopped. \"Quit showing off. Can he stick the dismount? What is your seventh word?\"\n\n\"First word. I was working my way to the sexiest. It is 'Sarah'.\"\n\n\"You've still got it, Lance!\" She raised her hands over her head in a cheer, and leaned over for a brief hug. I returned it, inhaling her scent and absorbing her soft warmth. I could get used to this.\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>Mankato -- June 16, 2012\n\n<br>Dwayne was evidently an apologetic drunk. \"I'm sorry. I'm so, so, sorry.\" He was sitting on a bench next to Scott the Hoople.\n\n\"It's okay, man, it was twelve years ago. I got a war wound. Chicks dig the war wound.\"\n\n\"Coach always said we was supposed to check the field before we threw the javelin, but why were you even on the field, you dumb shit?\"\n\n\"I don't know, man, I was baked.\"\n\n\"Your poor foot. I'm so sorry.\"\n\nScott stretched out his foot and flexed it, as if to show there was no harm done. He seemed pleased. As he should be. He had waited twelve years for an apology from Dwayne the Impaler, and finally got it.\n\nI returned my attention to Brittney. \"So where in hell is Courtney? I haven't heard from her in ten years.\" It was getting late, and she was my only lead.\n\nBrittney didn't like my question. Half of my former classmates were as drunk as Dwayne, and she was not one of the exceptions.\n\nShe pouted and asked, \"Are you still holding a torch for Courtney? Forget about her. You know something? There was this computer dating thing in high school and you were my number four.\" She stood too close to me, running her hand down the front of my shirt.\n\nNumber four for Brittney? I hadn't hacked that! \"A computer once told me I had ten million dollars in a Nigerian bank account.\"\n\n\"Really! Let's get it!\" Her reddened eyes were wide with bleary excitement.\n\n\"I'll forward you the email. Courtney was my best frenemy ever. Where is she?\"\n\nBrittney huffed. \"Fine. She got an economics degree in Minneapolis, and went to work for a company in New York, as a financial analyst. The last I talked to her was... four years ago? She was engaged to some hot shot securities trader, and was bragging about the great jobs they both had, and how much money they were making.\" Brittney's tone was critical -- she clearly resented her old friend.\n\n\"Which company?\" I watched Madison and Pete duck off into the trees together, trying to undo ten years of regret. Good luck, guys.\n\n\"I don't remember,\" she slurred. \"A name like a sixties girl group. The Lemon Sisters or something.\"\n\nLemon? \"Lehman? Lehman Brothers?\"\n\n\"Yeah, that was it.\"\n\nOh, Courtney...\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>New York -- August 25, 2012\n\n<br>Sarah was having fun, and I had been right -- making her complicit in her own seduction was getting her hot. Her cheeks were flushed, and she struck a provocative position in her chair after she stopped hugging me. \"Your next task is a tough one. I heard about this from Heather, that you had some mysterious ability to undo a woman's bra strap without her noticing.\"\n\nThat earned a grin. \"Some have alleged the power is psychic in origin.\"\n\n\"You dated some girls dumb enough to fall for that?\" She tsked with her tongue. \"Your challenge is to undo mine without me catching you. Good luck getting that done by ten o'clock. What do you want to discuss in a futile effort to distract me?\"\n\nI flashed my predator smile.\n\n\"What?\"\n\nI kept showing my teeth, waiting for her to catch on.\n\n\"Oh, you didn't!\" She reached behind her back to check her bra, and blushed. \"How the fuck...\"\n\nI raised my palms in mock helplessness. I had done it during our last hug, but keeping the aura of mystery would work in my favor.",
        "<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>Minneapolis -- July 15, 2012\n\n<br>\"Lance?\" Amber was surprised, and did not appear happy to see me. I had obtained the address from her father, and found her in Uptown, in an apartment building overlooking Lake Calhoun.\n\n\"I was in town and thought I would check up on some old friends.\"\n\n\"My apartment isn't clean. You should have called first, and we could have met somewhere.\" She stepped outside her apartment door, and began shutting it, when a voice inside called, \"Amber, who is it?\"\n\nI recognized the voice -- Sidney.\n\nBefore the door could shut, I called inside. \"Hey Sidney, I was looking for you too.\"\n\n\"Oh wow, Lance?\" Sidney came to the door, and encircled her arm absent-mindedly around Amber's waist. Amber shoved it away, then fidgeted when she realized she hadn't been subtle about it.\n\nI broke out laughing. My meddling in the alternate universe had only brought them together a little sooner. Some things were just going to happen anyway, and that thought made me happy.\n\nAmber frowned at me while Sidney took offense. Sidney reacted first. \"What the fuck are you laughing at?\"\n\nShe was shushed by Amber. \"Lance, you can't let my father know.\"\n\nI raised my hands in a placating gesture. \"I won't tell a soul without your permission, and I'm laughing because, oddly enough, I was certain you two should be together, and I'm pleased to be right.\"\n\nMollified, Sidney put her hand back around Amber's waist. \"See, Amber, most people back home won't care.\"\n\n\"Most people aren't my father.\"\n\nI changed the subject. \"I need to hear how you two got together. How about I buy you both lunch, and you tell me the story?\"\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>New York -- August 25, 2012\n\n<br>Sarah glared at me with mock disapproval as she left the bathroom after reattaching her bra. The tone of her voice was more encouraging. \"So far, so good, Lance. One last hurdle.\"\n\nThe second challenge had been obviously intended to make it impossible to meet my self-imposed deadline, but Sarah must have known I would eventually succeed. She had just been stalling for time, and would be a good sport about her failure, particularly since she had one more challenge left. For her third task I was expecting something subjective -- something that allowed her to decide whether or not she had been seduced. I wasn't wrong.\n\n\"Your final challenge is to explain why I should date you, when I'm already seeing someone else.\"\n\nI showed no surprise or disappointment. Women like Sarah were only single when they wanted to be, and she was too sociable to stay single for long. \"Who are you seeing?\"\n\n\"A former classmate from Julliard -- an orchestra geek.\"\n\nI set down my cup of coffee. I wanted to watch this. \"Does he think he can know the dancer from the dance?\"\n\nSarah impersonated an old song, turning a whiter shade of pale. She had stopped breathing, and was silent for several seconds as her eyes gazed far away. \"What did you say?\"\n\n\"You used to have that couplet in your locker. I already said that your breakup with Dave was beautiful, but I didn't say why I thought so. Your dreams were heading in different directions. He needed to go to Madison. He had a rare combination of talents in visual art and computer programming, and is now one of the hottest game designers in Silicon Valley. You have loved dance ever since you were fourteen, and needed to be here. The two of you had to choose between love and your own identity, and you were strong enough to choose identity. Isn't that what the Yeats quote means to you? Without the dance -- the dancer might as well not even exist?\"\n\nSarah was silent, her face haunted. Breaking up with Dave had been one of the toughest things she had ever done, and I was giving her what she had sought from me so desperately in the pool parking lot, several universes away -- absolution and understanding.\n\nI kept talking. \"If someone you love won't allow you to be the person you are meant to be, the relationship is doomed. Tasha taught me that.\"\n\nSarah's lips were starting to move, but no words came. Her eyes welled with tears, which she didn't brush away.\n\nI could never decline a chance to monologue. \"Ten years ago, we were both strongly interested in each other. To me, you were a force of nature, the walking epitome of everything I thought was sexy and cool. But because you were dating my best friend, we only loved each other as friends. After the breakup, you and I were never possible for the same reason you and Dave couldn't work out. But that has changed -- I'm here. We're both pursuing our dreams while living only a couple miles apart.\" I took a deep breath. \"I think you will break up with your boyfriend because you were always curious about what was possible between us. The two of us connected in a way you have only experienced one other time in your entire life. You're a woman who makes opportunities and seizes them, and I think there is no way in hell you will let this one escape. We can dance with each other, and I won't step on your feet.\"\n\nThe last line bordered on the maudlin, but I was betting Sarah would take it with the sweetness I intended.\n\nSarah finally spoke, gaining a measure of control over her emotions. Tears were flowing freely. \"My first dance teacher in Rochester had that Yeats quote up as a poster in her studio. I asked her what the answer was. She said, 'the dance never tells you it's pregnant two days before you go on tour'.\"\n\nI laughed at that.\n\nSarah smiled briefly, before continuing. \"I had forgotten something I hadn't thought of in years. You just brought it all back.\"\n\n\"What?\"\n\n\"Um... I never told anyone this.\" She had grabbed a handful of Kleenex, and was cleaning up her brightly blushing face.\n\n\"Yes?\"\n\n\"The night before I flew to New York, I went looking for you.\"\n\nIt was my turn to say nothing.\n\n\"Dave hated me for breaking up with him. I felt like shit, and I was scared.\"\n\n\"Scared of what?\"\n\n\"Scared I had lost you both. You were my best friends ever.\" Her expression was cute and sad.\n\n\"Why did you look for me?\"\n\n\"I thought maybe...\" Her voice faded into reminiscence.\n\n\"Yes?\"\n\nShe closed her eyes in annoyance, and opened them. \"Fuck this. I'm not a tongue-tied teenager. You said we were interested in each other. Hell, yes. The sexual tension between us would have fueled a dozen years of sitcoms.\"\n\n\"Why do you think I'm here, Sarah?\"\n\n\"I loved both you guys. I kept thinking I would have been happy spending the rest of my life with Dave, if only we weren't heading in different directions, but you...\"\n\n\"Yes?\"\n\n\"I felt guilty about this through the last two years of high school. I always wondered if I had chosen wrong when Dave asked me out the night we made all the snowmen. I wondered if I should have held out for you. You were so talented, creative, and smart, and you knew it. Nothing would stand in your way. You were going to be a comet, and I wanted to watch you blaze through the sky.\"\n\nIt was my turn to blush.\n\n\"It was impossible,\" Sarah said. \"Still, I always wondered.\"\n\n\"So what happened the night before you went to New York?\" I prompted.\n\n\"I stopped by the pool searching for you. I was stupid, depressed, and half-drunk. I wanted you to help me. I couldn't see a way for us to be together. I was going to New York. You were going to Chicago. But you were so smart and I wanted you to find a way to make it work anyway. I wanted you to find a way where we could be together and still share our dreams. The Yeats poem kept coming to mind that night. It meant to me what you said.\"\n\n\"I remember that night. There was a storm. We closed early that day and I went home. I wasn't there when you stopped by.\"\n\n\"Yes, and I got too drunk in the parking lot and passed out. I never told you what I wanted to say.\"\n\nNot in this universe.\n\nSarah grew more animated. \"Don't you see, Lance? Everyone else has regrets in their life. They spend their time wondering what things would have been like if they had made different decisions. But that's not me.\"\n\n\"No.\"\n\n\"I don't have regrets in life. I'm proud of that. I'm proud of what I have tried, and my failures are just fertilizer that help me grow.\"\n\n\"No regrets at all?\"\n\n\"Just one. Just you.\" Sarah's smile was radiant, powered by the exultant release of a confession.\n\nIn all my inter-temporal wanderings, I had realized I never had a real chance with Sarah -- there was no moment in the past I could change to convince her to be with me. She was not my Might-Have-Been.\n\nI was hers.\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>Chicago -- August 4, 2012\n\n<br>Once or twice, Tasha and I tried to socialize as friends, but there was too much history and pain. I did still check up on her from time to time. She had no close friends or family in the area, and if she were heading to a bad place, I wanted to know. I didn't plan on intervening personally, but I would call her father or mother, who had always liked me. If I told them she was in trouble, they would believe me, and hopefully help her out. So I had been calling her once a month. This would be the last time.\n\n\"Tell me honestly, how are you doing?\" I asked.\n\n\"Lance, you weren't indispensable. I can live without you.\"\n\n\"I always knew that, but I wasn't sure you did.\"\n\n\"Don't patronize me. If you must know, I have a new job in pharmaceutical sales, and I'm dating a doctor.\"\n\nMaybe he will have more luck getting you to take your Zoloft, I didn't say. \"I'm happy for you. I'm moving to New York at the end of the month.\"\n\n\"Well, good luck, Lance. I know it's what you wanted.\" I heard resentment in her voice. Tasha always resented anyone who made her feel guilty.\n\n\"Good bye, Tasha.\"\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>New York -- August 25, 2012\n\n<br>Sarah pulled out her phone and punched a number. After a few seconds, I heard, \"Hey John.\"\n\n...\n\n\"Yeah, um, I had fun too. I need to talk to you. We need to break up.\"\n\n...\n\n\"Well, there's not someone else, but there will be soon. An old friend showed up in town and I want to give this a try, but I need to do the right thing with you first.\" She waggled her eyebrows at me.\n\n...\n\n\"We only had five dates. Phone breakups are fine for anything less than ten dates.\" She sounded defensive.\n\n...\n\n\"Says me, that's who. Look on the bright side -- your next girlfriend might not conspicuously wear earplugs when your orchestra plays Schoenberg.\"\n\n...\n\n\"OK, I need to go. Best of luck!\"\n\nShe hung up, and leaned forward. \"There is more about that night before I left for New York. I remember promising to myself that if you figured out a way for us to share our dreams, I would grab it. I gave up after you sent that email, and I had forgotten, but this is a promise I would love to keep.\" She paused, letting her words sink in.\n\nSarah always had a sense for drama. Her half smile was back, projecting anticipation and mischief, and her eyes were shining. \"Step Four, Lance. I want you to Step Four me, hard.\"\n\n<br>Step Four: Have wild sex with Sarah.\n\n<br>\"Sarah, I just want to say--\"\n\nShe interrupted me with an exasperated laugh, throwing her hands up in the air. \"God, you don't know when to shut up. Just kiss me, dumbass.\" I rose, and suddenly she was in my arms, melting into me -- lips as soft and yielding as I remembered from that day at the pool. I was improvising now, my careful planning only took me this far.\n\nSarah's hands caressed my back, shoulders, waist, and ass. She kneaded my flesh, as if assuring herself of the reality of my presence.\n\nHer mouth pulled away from mine, and I opened my eyes to see her smiling at me. Her full lips were stretched wide over perfect teeth. This was no half-smile -- no Mona Lisa smile -- this was Sarah with joy unchained. Her hands clutched at my belt as she stepped backwards, pulling me toward the couch, with my weight pressing down on her.\n\nUnfortunately, she had pulled before I was ready, and my foot caught the table leg, tipping bagels and cream cheese onto the floor, and the remnants of hot coffee onto my leg. \"Ow!\"\n\nSarah saw the stain on my pant leg. \"Oh shit!\" she said. \"I'm sorry. I got too excited. Do you need ice?\"\n\n\"No, the pain is already fading. It wasn't that hot. If you want my pants off, you need but ask.\"\n\nSarah laughed into my ear as she kissed it. \"We will clean up the food later. This is more important.\" Her white neck swanned back as she pulled my face down to kiss her flesh. The skin of her neck was soft and warm in my mouth. She sighed in pleasure as she ran her fingers through my hair -- nails raking my scalp and running down my spine, causing me to shiver and press my hips against her.\n\nShe felt my stiffness, and thrust herself against it. \"Yes,\" she sighed.\n\nI started to lift her shirt, but she stopped me. She pulled my face to meet hers and said, \"We have had a dozen years of foreplay, Lance. We can practice that later. Right now I want you inside me, looking at my face. I want to see you. I want you to make me believe this is real.\" As she spoke, her hands unbuckled my belt, and tried to unzip my fly -- but it was stuck.\n\nHer fingers worked with futility for several seconds before she threw up her hands in bemused frustration. \"You have fifteen seconds to find a way to get them off, or I'm fetching a crowbar. I'll be getting in them -- now. Chop chop. We have a schedule to keep.\"\n\nI stood, and quickly shimmied out of them -- I would fix the zipper later. Sarah started working at the waistband of her own shorts, then stopped. \"Don't forget your condom,\" she said.\n\n\"Umm...\" Fuck.\n\nSarah was dumbfounded. \"You planned every step of getting in my pants within an hour of seeing me for the first time after ten years, and you didn't bring protection?\"\n\n\"Sorry,\" I said, feeling sheepish, \"I seem to have had the most amazing run of luck where every woman was on some other method of birth control.\"\n\n\"What, they don't have diseases in Chicago? Eww. There's some on the coffee table. Get one.\" Sarah pointed behind me, looking almost as embarrassed as I was.\n\nI found one and put it on. \"If you pass the one-month test,\" she said, \"I'll go back on the pill, but you ain't riding bareback, cowboy, until I see some test results.\"\n\nFinally satisfied at my prophylactization, Sarah grappled me again, and in a flurry of hands and kicks we were both naked from the waist down. Anticipation lit her eyes as her hands embraced my face, pulling my mouth to hers. We shifted our hips, and her smile opened into an expression of rapture as I slid into her. I exulted as a hot, tight wetness enveloped me. She closed her eyes only briefly, fastening her gaze on mine once more.\n\nI touched Sarah's face, exploring her soft warmth. Her skin counterfeited porcelain, but surrendered on contact, just like her lips. I lost myself in the uncanny texture of her skin, and the luxuriant black waves of her hair.\n\nHer mouth bit down gently on my hand, tasting it. Sarah's eyes roamed over my face, drinking in my features. Flickers of disbelief, passion, and joy played out across her face.\n\nA thrust of my hips opened her eyes wide as she gasped. Her own hips pushed back fiercely against mine, and her dancer's legs wrapped themselves around my thighs. I had wanted to see if she preferred it slow or hard, and I had my answer.\n\nI watched her expression change with each thrust. Her smile, as she felt me slide within her, was an aphrodisiac undreamt of by gods and men. Every parting of the lips, every roll of the tongue, every flare of the nostrils, every moan and sigh, screamed to me how she felt to be in my arms, with me inside her.\n\nMy feet found purchase on the arm of the couch, providing leverage for my hips. I pushed my legs against the furniture, and Sarah cried my name. I pushed against the armrest again -- and flinched at the harsh sound of snapping wood.\n\nI looked behind me to see how much trouble I was in.\n\n\"Did you just break my couch?\" Sarah peeked over my shoulder to survey the damage. The armrest was jutting out at a thirty degree angle, with exposed upholstery and splintered wood making it resemble a compound fracture. \"Impressive. That's one we can tell stories about.\"\n\n\"I'll buy you a new couch.\"\n\n\"Don't worry about it. The wood in the couch wasn't tulgey enough, unlike yours.\" She squeezed me with her inner muscles. I seized her face and brought it forward to my mouth. I breathed her scent as my kisses devoured her lips and tongue. I thrust harder, faster, each movement bringing forth a moan from the depths of Sarah's throat.\n\nShe pushed my face back so she could look me in the eyes as she spoke between my thrusts. \"This... I have wanted this... for years. I have wanted... to feel you... inside me.\"\n\nAt my next thrust, her sexual fervor drove her to spin underneath me, spilling us off the couch and onto the floor.\n\nSomething sharp stabbed my side. The pain was excruciating and I couldn't stop the expletive. \"Motherfucker!\"\n\nSarah was giggling uncontrollably. \"Your pillow talk could use some work, Lance.\"\n\nI torqued my back, and fished out a solitary black stiletto heel. \"I think I ruptured a kidney.\"\n\nSarah covered her face with her hand. \"I need to clean better.\"\n\n\"I'm only disappointed you weren't wearing them when I knocked this morning.\" The heel was going to leave a bruise, but the pain was fading at Sarah's touch.\n\n\"Someday soon I'll wear them and nothing else, just for you.\" Sarah was grinding hard onto me as she spoke. She shifted her hips to change the angle of my thrusts to one she preferred, and she cried my name again -- only this time the vowel rose an octave and she held it as her thighs tightened around me. Sarah used her legs to bring me deep inside her.\n\nMy own pleasure, and the waves of Sarah's climax coursing through her body, brought me to the same place. Her blue eyes were my entire world as we felt the culmination of our long contentious relationship. Love and fire, truth and victory, exaltation, imagination, mischief, wit and wisdom all danced together in the depths of her eyes.\n\nAs my shudders subsided, she stayed on top of me, smiling and caressing my face. I saw her eyes fill with tears, which fell and rained on my own cheeks. Sarah blushed but did not look away. She was happy to display her joy.\n\nMake her laugh. \"I have made a woman cry once before during sex, but it involved chili peppers.\"\n\nShe only chuckled. \"I don't think you would understand.\"\n\n\"Try me.\"\n\n\"Take me to the bedroom.\"\n\nI rolled out from underneath her, lifted her in my arms, and navigated our way toward her bedroom. The apartment proved to be an obstacle course. I reached her bed only by leaving a swathe of destruction in my wake. I bonked her elbow on the door frame, stubbed my toe, dinged my shin, and capsized a potted plant, which I righted with my foot while balancing Sarah in my arms. Sarah just laughed at every misstep and accident, and held my face in her hands.\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>Batavia, Illinois -- August 6, 2012\n\n<br>\"When are you leaving?\" Dr. Nguyen asked.\n\n\"The twenty-second is my last day, then I'm driving to New York. I wanted to thank you for the letter of recommendation.\"\n\n\"I wish you the best of luck, Lance, but that isn't why I asked you to come to my office. We have an unusual situation, and I wanted your input.\"\n\nI sat.\n\n\"As you may know, we've already posted the opening for your position. One of the applicants put you down as a reference, and frankly, she needs one.\"\n\nUh oh. \"Who is it?\"\n\n\"Irina Pugacheva.\"\n\n\"Ah.\"\n\n\"'Ah', indeed. Frankly, I wasn't even aware she had a hard science background. It's impressive, but out of date. She wants to use this as a stepping stone to American academia, and to pay her way now that she is divorcing her husband.\"\n\nI hadn't heard that. I suppressed a smile.\n\nDr. Nguyen continued. \"However, Mrs. Pugacheva has a certain... reputation.\" Fermilab was affiliated with the University of Chicago, and sexual gossip was the only thing that could travel faster than light.",
        "I thought she deserved a defense. \"People sometimes make poor choices in life and need a second chance.\"\n\n\"Please don't take this the wrong way, but I feel obligated to ask whether your recommendation is biased by other factors.\"\n\n\"Did she sleep with me in order to curry a recommendation?\"\n\n\"That's more blunt than I would prefer.\"\n\n\"She didn't. I made mistakes that derailed my life for a few years. Irina was a kindred spirit, and I encouraged her to get her life back on track. That's it. She must be going through a tough time right now, and could use some support.\"\n\nProfessor Nguyen leaned back, and smiled like a Cheshire cat. \"Viktor Pugachev is an asshole, who took credit for some of my research back when I was a postgrad. If I can get a promising replacement for you, and piss him off at the same time, it's all good.\"\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>New York -- August 25, 2012\n\n<br>Tasha and I once went to a comedy club in downtown Chicago. We arrived late and received seats off to the side. The opening act was a magician, who specialized in performing his tricks from behind a velvet-covered podium. The audience oohed and ahhed every trick, but because of our vantage point, we could see how everything was done.\n\nFrom the front, it appeared as if he were holding up a curtain held in two gloved hands, behind which objects would magically appear and disappear at his will. From the side, I could see one of the gloved hands was a fake -- physically attached to the baton that supported the curtain -- this freed his right hand to manipulate objects in a completely mundane fashion.\n\nTasha thought the act was ruined -- the mystery was gone. She was in a sour mood which had us leaving before the magic act was even complete.\n\nHer reaction was unfathomable to me. I was fascinated, and thought the mystery had deepened. Did he make the curtain with the fake hand or did he buy it? How much did he have to practice to keep the illusion? Could I move objects the way he did without letting the audience see my shoulder move? How had he concealed the switch between the real and fake hand? As a result, I studied magic as a hobby for months. While the mechanics of a trick were often simple, creating a convincing illusion took extraordinary artistic skill, and I had great respect for talented magicians.\n\nI thought of magic when I beheld Sarah's naked form for the first time. Denudement. Amy's malapropism flashed through my head as I laid Sarah down on her bed, stripping off her tank top and sports bra. She removed my shirt, and after discarding the condom, I joined her on the bed. Hidden behind clothes, Sarah's body had been a mystery, but now, Sarah was like the exposed magic act -- the mystery was not diminished, but enhanced. Her form was now a foreign, beautiful landscape, calling out for exploration.\n\nHow responsive would her nipples be to my fingers and tongue? Did she like to have them pinched or pulled, or just lovingly touched? Did she want them suckled and squeezed during sex, or did she find it a distraction? Was her skin there as soft as the rest of her, or even softer?\n\nShe still had the ruby belly button piercing, with matching studs in her ears. Did she like her navel played with and kissed, or did it tickle? Sarah's dancing had left her stomach, hips, and legs in the best shape I had ever seen -- her ass was well and truly callipygian. How flexible was she? How far could she spread those legs? Her bikini line was neatly trimmed, but she didn't shave, presenting a thatch of beautiful and natural black hair. How did she like to be touched? Directly, or only after gentle and circuitous preparation? How did she taste?\n\nI would find the answers to some of those questions today. For the rest, I hoped for a lifetime to answer -- as well as the answers to the questions those answers would themselves raise, ad infinitum -- world without end.\n\nWe roamed across each other's bodies, familiarizing ourselves, testing responses. She lingered on my chest and shoulders, with her fingers tracing the definition of my muscles. She toyed with my chest hair and ran her fingernails down my stomach. Her hands traced the outline of my legs, and when she finally grasped my cock, she raked the shaft with the backs of her nails. She seemed to like the way it felt, as she cupped me in her hand, and nestled her face against my chest.\n\nI began to speak, but the phone rang.\n\n\"The machine will take it,\" she muttered, snuggling closer.\n\n\"You still have a land line?\"\n\nShe shrugged as her answering machine activated. The caller was her new ex-boyfriend. \"Sarah, I'm really upset about this, and don't know what went wrong. Things were going so well last night after the concert. You taught me things about my body--\"\n\nSarah rose quickly, and her hand moved as if she still practiced Taekwondo. The answering machine was muted with extreme prejudice, falling off her bed stand. I doubted it would ever work again.\n\nShe bared her teeth at me in a rictus of embarrassment.\n\nI chuckled. \"It's okay, I kind of guessed from the condoms and the lonely stiletto heel on the floor next to the couch.\"\n\nShe still looked sheepish.\n\nThe phone rang again, and her expression changed to annoyance. \"Sorry, let me yell at him and he will stop calling.\"\n\nI gestured assent.\n\nSarah answered her phone. \"Listen, just because we slept together once doesn't give you the right--\" Her face suddenly fell. \"Oh, hi mom.\"\n\nI doubled over in silent laughter, and she kicked me -- twice.\n\n\"Don't ask,\" she said to her mother.\n\n...\n\n\"Hey, guess who's here? Lance!\"\n\n...\n\n\"Yeah, from Monroe.\"\n\nI waved.\n\n\"Lance says 'Hi'.\"\n\n...\n\n\"Hi Lance,\" Sarah relayed.\n\n...\n\n\"Yes, he did have a cute butt, and still does.\"\n\n...\n\nShe grinned at me. \"Yes, he did hear me say that.\"\n\n...\n\n\"Maaaybe. We were just discussing that now.\" She turned to me, and covered the phone, speaking in an aside. \"Mom always liked you.\" She uncovered the phone. \"Can I call you back tonight?\"\n\n...\n\n\"Thanks, love you, bye.\" Sarah hung up, waited a few seconds, and removed the phone from the hook. She collapsed back on the bed.\n\n\"Have I told you today how awesome you are?\" I asked.\n\n\"No more interruptions!\" she declared. \"Where were we?\" She resumed her position, with her head on my chest, and her hand between my legs. \"Much better.\"\n\n\"You were going to tell me why you were crying,\" I reminded her.\n\n\"No, you asked, and I said 'take me to the bedroom'.\"\n\nI remembered something else about the evening we spent in front of the swimming pool, several universes away. Sarah had been morose over her breakup with Dave. She had defended her decision, but she had voiced doubts. What else did I know about her? Sarah had lived in New York for ten years now and hadn't found anyone special. I had just watched her dump her last boyfriend over the phone, with not a single sign of regret.\n\nI knew why she was crying.\n\n\"Sarah, you have this tough, porcelain exterior, but you're softer than you let anyone know.\"\n\nShe kissed my chest.\n\nI slid my arm underneath her to hold her close, and let my thumb trace the line of her spine. \"You second-guessed yourself when you left Dave. You loved him, and feared you threw away your only chance at love.\"\n\n\"I'm a stupid-head. I know I did the right thing, but still...\"\n\n\"So now you're afraid you're too high maintenance, demanding, or bitchy for anyone worthy of you.\"\n\nShe looked up at me, with her eyes widened. I had voiced her thoughts almost exactly.\n\nI took her face in my hands, and kissed her. \"You're not too high maintenance.\" I kissed her again, and the taste of salt told me her tears had resumed. \"And you're not too demanding.\" I left the sentence off on a tone that conveyed I was going to continue, but I said nothing more.\n\nWhen she realized I was stopping there in my defense of her, she punched me in the arm. (One of the upsides of multiple universes, I had found, was getting more mileage out of my jokes.)\n\nSarah spoke her mind. \"Sometimes I thought that. You don't know how many times I have considered settling.\" She looked at me with mock accusation. \"Somewhere along the line, I developed a taste for smart men, with confidence bordering on arrogance. In New York, most men fitting that profile are materialistic Wall Street assholes.\" Her smile reappeared. \"But you're here now. I hate regret, and now I have a chance to see what can happen. Yes, that makes me happy.\" Her hand squeezed my cock for emphasis. When it responded to her touch, she continued her squeezes, and began kissing my neck.\n\n\"It's my turn to tell a story,\" I said as my body responded to her hands and lips. \"I recently rethought every major decision in my adult life. And I couldn't think of any decision I could have made differently that would have brought us together, no matter how much I wanted it. I would have had to betray who I was to do it, and I knew you would never let me do that.\" I paused as her mouth moved down my neck to lick my nipples.\n\nSarah evidently had a thing for a man's chest muscles. She was kissing all around my pecs, and she got more into it when I flexed them, kissing harder, and increasing the rate at which her hand pumped my cock.\n\n\"But I also realized I was comparing almost every woman I dated to you. Was she as beautiful as you? Was she as clever? As quick? Did she have your decency and common sense?\"\n\nSarah had moved her kisses down to my stomach. She licked my belly button and headed south.\n\n\"I think half the reason Tasha sucked me in so deeply was that she was the only woman I had met who could hold a candle to you. But her virtues came with mental illness.\"\n\n\"It takes a lot of effort not to go crazy when you're as awesome as I am,\" she said, just before her mouth embraced me.\n\n\"I'll tell you the full story someday,\" I said through a moan, \"but you really did help me get my life back together. Mostly just by example.\"\n\nSarah used both her hands and mouth as she fellated me. Her hand rapidly stroked the base of my shaft, while her lips swallowed the glans. As soon as she had me back to full strength, she climbed up on top to straddle me. \"Just a sec, I want to try something,\" she said, producing another condom and placing it on me. She then wrapped one leg around my thigh, but extended the other into a front split that placed her foot right next to my face. Using her hands for balance, she brought herself down on top of me, still very wet and slick from our earlier bout, and I entered her. The happy smile on her face flowered into euphoria.\n\n\"If we can handle each other as lovers--\" I began.\n\nSarah interrupted. \"Speaking of sexual compatibility, I need to confess something. I have a mild foot fetish. I've always said the perfect man would be one who could have their cock in me, and suck my toes while I did a front split. And I think you just... might... have... the perfect torso length.\" She adjusted the position of her legs, and wiggled her toes in front of me.\n\nSuddenly, she stopped, her face contorted in agony. \"Ow! Ow! Ow!\" She quickly flipped her legs around, and dismounted, laying back on the bed. \"Stupid amateur.\"\n\n\"What's wrong?\" I asked, concerned.\n\n\"I didn't stretch. Cramp.\" Her jaw was clenched tight in pain.\n\n\"Where?\"\n\nShe pointed to her left calf. I took it in my hands -- her sinews were knotted into a ball of steel cords. I worked it with my fingers until it relaxed.\n\n\"Oh, bless you. It serves me right for wanting to rush things.\"\n\n\"Rush things? I've known you for twelve years.\"\n\nShe grinned while performing a calf stretch on her sore leg. \"Yeah, you have.\" She switched to her other calf. \"Sorry, I'd promised no more interruptions and now I'm stopping to stretch.\"\n\n\"I'm watching a nude dancer perform calisthenics, and you think you need to apologize?\"\n\nShe just smiled, and worked her way through quad, hamstring, and groin stretches, all of which did amazing things to her body and to my libido.\n\nI idly ran my fingers down her back. \"What were you saying about my perfect torso? I liked the sound of that.\"\n\n\"If I can mount you properly, after I stretch, I think you might have the perfect length to kiss my toes while you're inside me.\"\n\n\"I don't know. I have tied up a woman and tortured her with chili sauce. Another girlfriend liked having sex in a closet with another man in the room. Yet another loved having a finger up her ass. I even did a threesome once. But toe-sucking? That's just weird.\" I knew Sarah would take this as open communication rather than a boast.\n\n\"You're talking about your sex life now? You have changed. I'm going to have to get all the filthy secrets you wouldn't tell me in high school. Heather told me your turn-ons were listening to a woman talk dirty and watching her orgasm.\" Sarah had completed her stretches and flipped her legs to perform her split on top of me. \"Suck my toes and I promise you'll get both. We can discuss some of the things you did with those other girls, and I'll have my own ideas, but I draw the line at chili sauce.\"\n\n\"I don't know...\" I felt a squeeze of hot velvet as she enveloped me again.\n\nSarah was not to be denied. \"How about if I feed you chocolate with my toes?\" She wiggled them again.\n\nI thought I knew where she was going. I thrust up inside her, and kissed her toes. \"I would prefer to play with your breasts.\" She leaned over, allowing me to cup them both. Her nipples were pink diamonds on skin the color and texture of white rose petals. I felt them tighten between my fingers, pinched them still tighter, and felt Sarah quiver and clench around me in response.\n\n\"Just fuck me with your tulgey wood. Fuck me hard.\" She laughed as she spoke.\n\nI took each toe into my mouth, tasting them. It really did arouse her. Her inner muscles still massaged me, and she was grinding herself against my pelvic bone. I could feel she was close to orgasm already.\n\n\"You love my cock in you, don't you?\" I asked, using two of the words at once.\n\n\"Yes!\"\n\nI cried her name, finishing the septet. I took all five of her toes in my mouth, and ran my tongue across them like they were a xylophone.\n\nThat brought her over the brink. She yelped, then sighed. Her hands grabbed onto my chest, and her pelvis pushed down to shove me deep. She screamed again, then held herself still as her body shook with tremors and aftershocks.\n\nShe finally spoke, laughing again. \"Oh wow, I think you're right! Those are the seven sexiest words in the English language. The only words that might compete were when you told me earlier you were wrong.\"\n\nMaintaining our most intimate point of contact, Sarah abandoned her split, and her hands drew me into a sitting position, where she now straddled atop me, with both legs wrapped around my waist, placing her breasts directly in front of my face. I kissed her nipples for the first time, as she slowly rocked on top of me.\n\nHer mouth hissed encouragements down toward my ears. \"You've been wondering for years what those taste like, haven't you Lance?\"\n\nI answered by clasping a nipple between my teeth, and flicking it with my tongue.\n\n\"Oh, that's it. I like how you use your tongue. I have wondered what it would be like to have you suck them. I still sometimes get myself off at night imagining it's you.\"\n\nI swirled my tongue around her nipples, as her inner heat caressed me.\n\n\"I cheated on our deal. I said that if you sucked my toes, I would talk dirty for you. You bought what I would give freely. I can't help myself. When you're near me, I just turn into a dirty-mouthed slut, who badly needs to be fucked.\"\n\nMy hands grazed her flanks and thighs, savoring soft warm skin stretched taut over muscles as hard as rock from dancing. This woman would never tire out.\n\nSarah's words continued to push me to the brink. \"You're going to get spoiled,\" she said. \"My tits are in your mouth, my pussy is about to suck the cum out of your cock again, and now you're grabbing my ass. Are you going to see how deep inside me you can go? Please? I want to feel you in deep. Fuck me deep.\"\n\nShe spread her legs wide, undulated her hips, and I was completely engulfed.\n\n\"Does shoving that spear of yours into me get you all hot? Are you going to come? Are you going to shoot your cum inside my hot... wet... pussy? I want it! I need to feel you come inside me!\" A sly smile crossed her face. \"Fuck me with your tulgey wood!\"\n\nThat did it, and like the Jabberwock, I burbled as I came.\n\nSarah collapsed next to me on the bed, and I held her in my arms. She was as full of delight and promise as a spring morning. With her cuddling next to me, I was elated, and optimistic.\n\nDr. Nguyen's experiments would be a success, and they would need to be replicated and expanded, opening whole new vistas in physics. I was starting grad school next week knowing more about the ramifications of the theory than any man alive. I had a wonderful woman in my arms, and a universe of futures was spread out before me, with each possible path more beautiful than the next. I didn't know whether my life could stay as perfect as this moment, but I relished the challenge.\n\n\"It's 9:56 AM,\" Sarah said.\n\n\"Yeah? How about that.\"\n\n\"Everything happened like you said it would.\" She was just realizing I had hit my called shot. \"How the hell does anyone plan anything that well?\"\n\n\"You thought that was all planning? I burnt myself, took a stiletto heel in my kidney, forgot to bring condoms, broke your couch, and almost gave you a concussion on the door frame. I think I killed your plant, and I gave you a muscle cramp.\"\n\nSarah propped up her head with her elbow to look at me, drawing lines on my chest. \"What world do you live in? When you said you planned to have me in bed by ten this morning, I thought you were being audaciously arrogant, knowing I've always found that hot. I'd been planning to string you along for a few weeks to ensure you weren't a basket case, before trying to jump your bones. I didn't think you had a chance of actually succeeding today. The bumps, mishaps, and interruptions are just normal. The only place stuff like that doesn't happen during sex is in porn movies.\"\n\n\"Or fantasies. Or dreams.\"\n\n\"No difference. How did you pull this off?\"\n\n\"You won't believe me, but I promise I'll tell you all about it someday.\"\n\nSarah was satisfied by that, and lay on her back, leaning her head on my shoulder, and beaming at me with contentment. \"Did you have any other plans for today?\" she asked.\n\nI started to trace a sideways figure eight on her stomach -- then thought better of it, and drew a line instead, extending it onward and downward. I answered her question with my fingers and lips, knowing I could kiss and touch her for eternity.\n\n<br>\u221e\u221e\u221e\u221e\u221e\u221e\u221e\u221e\n\n<br>Epilogue\n\nChicago -- August 22, 2012\n\n<br>It was my last day in the lab. Tomorrow morning, I would drive to New York, and sell my car on arrival. I had spent most of the day showing Irina how to do my job. She was indeed a fast learner, but seemed scared of me. She hadn't asked me why I had given her the advice I did. Instead, she asked questions about work, and she made sure she understood her role.\n\nShe had wandered off somewhere while I reviewed my software documentation in the experiment room, where work still continued. The data required months of analysis, and every day they tweaked the settings and teleported more particles.\n\nI observed progress closely. When I hadn't been chasing down old almost-girlfriends or packing for New York, I had been reading everything I could find about Everett's theories, and Dr. Nguyen's experimental design. I planned on expanding them as part of my studies at Columbia.\n\nThe secrets of the resonance array were still mine. I hadn't told anyone what it could do if it were connected to a twelve volt power supply and you thought about a decision from your past.",
        "I wasn't sure why I had kept it a secret -- maybe I was worried how it might be used. One of the reasons why I had returned to my own timeline rather than stay in another, was that it felt wrong to permanently take over the consciousness of a version of me from another universe. If that alternate-me had made better choices, he deserved to enjoy the benefits.\n\nI also wasn't sure what would happen if everyone knew. Would everyone want to find a universe where they had made better decisions, and abandon this one? Would they all find worlds where they were elected President, or were Hollywood stars, or had won the lottery? What would happen to this one if they never came back? I wasn't entirely convinced of my own arguments, but because there was so little I understood, it felt right to be cautious, to reside permanently in my own universe, keeping my secret.\n\nThe array stared at me from its containment unit. I extracted it, holding it in my hand. I pulled my portable power supply from my pocket, and thought to myself, decision time.\n\nShould I use the array to visit an alternate universe where I can travel to New York a couple days early, and watch Sarah's morning routine for this upcoming Saturday? I could see what she wanted for breakfast, choose a time when I could get inside her building, and then surprise her. I could also perform a trial run or two, test my plan, and modify it if I didn't get the desired results. Once I had a plan that worked, I could leave before the seduction was complete, so the first time with Sarah would be in my real timeline. I could then return to my \"home\" timeline, knowing the plan was successful to a certain point. I would have to trust to improvisation from there.\n\nAlternatively, I could just go home and eat dinner.\n\nI decided to go home and eat dinner. Let the future take care of itself.\n\nOf course, having made the decision, I could regret it, and use the array to change it. I rotated the array in my hands and smiled.\n\nSome things were too important to be left entirely to chance.\n\n<br>--------\n\n<br>The End\n\nAuthor's Note:\n\nOne thing I enjoyed doing in my writing is re-using characters in other stories. For those who are interested in what happened to some of these characters outside the novel: Tasha has an off-screen cameo in Words With Friends with Benefits and is the main character in Hope in Hell, where she finally confronts her demons; Amber is the title character in Trapped in Amber; and Courtney is the central character in Shell Game, and has a brief appearance in Thirteenth Seduction.\n\n<br>Thank you very much for reading, and I hope you enjoyed a story that soaked up about a year of my free time in the telling, causing me to neglect work, house-cleaning, my ever-growing unconsumed backlog of books and movies, and personal hygiene. But don't take that as any pressure to vote or write a comment saying you enjoyed the damned thing. Nope, no pressure at all."
    ],
    "authorname": "Ironiclaconic",
    "tags": [
        "time travel",
        "multiverse",
        "seduction",
        "literary",
        "romance",
        "apartment destruction",
        "humor",
        "do over",
        "friends become lovers",
        "general awesomeness"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/might-have-been-ch-08-conclusion"
}