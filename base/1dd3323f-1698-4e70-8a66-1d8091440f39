{
    "title": "A New Way of Seeing Things Pt. 03 Ch. 07",
    "pages": [
        "Standard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this. . Also, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\nCricket looked over at her riding companion as Marvin picked his way up the trail in the mid-afternoon heat. \"So dinner last night was okay?\" \n\nGwen smiled. \"It was better than I expected. I only met them once before\u2014\"on a nude beach, the Lady huffed\u2014\"but Tim did some work for them and they wanted to get together with us for some reason. They're both very nice people.\" Bob McCallum's gregariousness had ensured there was no shortage of conversation, and his wife Yvette's easygoing nature had convinced Gwen to temporarily relax her normally guarded nature around strangers. The couples had agreed to get together again for dinner as well as an outing on the lake \"sometime soon.\" \n\n\"And Atlanta?\" \n\nGwen looked at the rider to her left. \"It was good,\" she offered, smiling and continuing to look up the trail. She had been deliberately vague about the details of her trip beforehand, only telling Cricket that she was spending the weekend away with a friend. The young woman had rightly guessed it was the \"special\" friend she had been told about before but had not pressed for any further details, and had not seemed upset that Gwen was spending the weekend with her. Cricket had been more inquisitive when they had talked earlier in the week and had been promised more information when she came to ride on Saturday. \n\nThe young rider politely waited for Gwen to add details, but none appeared to be coming and her curiosity would not wait any longer. \"So, what did you do there?\" \n\nGwen reined Dart in and studied the young woman, a thoughtful smile on her face. \"Cricket, if I tell you, you'll keep it a secret, right? I can trust you?\" She knew she could, but it was important she hear it again. \n\n\"Of course you can, you know that.\"\n\n\"Alright...have you ever heard of a Naughty Nightie Party?\"\n\n\"Yeah, one of the girls at the bank invited me to one. I didn't go because I don't have any money to spend on that kind of stuff and nobody to wear it for anyways. Did you go to one?\"\n\n\"I was a model in one.\"\n\nThe young woman's expression was one of shock. \"No way! You modeled lingerie? In front of other people?\"\n\n\"Complete strangers.\" Gwen omitted anything more specific about the location and attendees. Cricket knew who Sylvia Danning was, and it had been made very clear that the party's hostess and her guests took their privacy very seriously. \n\n\"I can see why they would want you to...did your friend model, too?\"\n\n\"Yup.\"\n\n\"I can't believe how brave you are!\" \n\n\"I don't know about brave...I was very nervous, at least at first. It ended up being a lot of fun, though.\"\n\n\"Wow...did you have to wear anything really racy?\" \n\n\"It was lingerie...and the later it got, the more revealing it got...but I'm sure everybody there had seen a nearly-naked woman before.\"\n\n\"You make it sound like it's no big deal! I would have died of embarrassment!\"\n\n\"I doubt they even noticed me\u2014there were much more interesting things to look at. One of the other models was a very well-built man\u2014I think he's the one everybody was looking at.\" Except the ones who preferred something a little more feminine, the Slut reminded her. \n\n\"A male model? Really? Did you see, uhh, everything? Did he see you?\"\n\n\"We were all changing in the same room, so....\"\n\nThe young woman was shocked, but clearly interested. \"When you say well-built, do you mean muscular, or...you know...well built?\" She glanced meaningfully down to where her riding breeches met the saddle, then back up again. \n\n\"Muscular and big, not that I'm an expert in the sizes they come in.\" Gwen hesitated, then threw caution to the wind and decided to share a bit more. \"They played this silly party game with it--, I mean, him, and, well, they had this thing that looked like a flashlight with a very realistic-looking part of the female anatomy inside\u2014honestly, it reminded me very much of how they collect sperm from stallions\u2014you know, the AV they put in a phantom mare? \n\n\"No way! I would have loved to see\u2014\" Cricket stopped and blushed at her admission. \"Sorry, I mean, I mean I haven't seen many guys naked, and I've definitely never seen one get off like that. One of the guys in college played with himself a little bit when I was getting undressed, but I've never seen a man actually, well, you know. I have this really weird fascination with men's bodies. Maybe it's because I haven't seen many in real life, but they just seem so different, so weird,\" she sighed. \"Sorry, guess I'm just weird little pervert.\" \n\n\"You're not a pervert, you're just curious. If you want to look, look. I think most men like to show off, so I'm sure there are a lot that would be very happy to show you anything you want. Just ask.\"\n\nCricket laughed. \"THAT would be a very interesting conversation. Excuse me, sir? Could you take your clothes off? I'd like a closer look at your naughty parts. Daniel definitely didn't like to show off, at least not his body, and the guys in college were in too much of a hurry to get busy to let me see much. I'm really hoping there's a horny guy out there who'll get drunk enough to hop in bed with me and keep coming back for more until I figure out what I'm doing. Don't see that happening, though. Maybe if I put the flag over my face he can tell himself he's doing it for his country.\"\n\n\"Okay, that's it,\" Gwen said sternly. \"No more self-pity. I don't want to hear it. You're smart, you're beautiful, and you're not bad in bed, you're just inexperienced.\" She smiled to soften her words. \"You certainly learned what little I've been able to teach quickly. We're going to do something about that self-confidence of yours. I know it's in there; I see plenty the minute you're around a horse. We're going to bring that out in you when you're not.\" She smiled \"As for your lack of experience, well, if you're really that anxious to get some time in that particular saddle then we're going to have to do something about that, too.\"\n\n\"We?\" The young rider asked with a smile. \"What are we going to do about it?\"\n\n\"We,\" Gwen repeated, her jaw set. \"And I'm not sure what, but...something.\" She smiled to soften her tone. \"Maybe find you a riding partner with a different set of equipment...\"\n\nCricket smiled back and the two rode on in silence for a bit. \"Speaking of riding partners, did you and, uhh, your friend, do anything else last weekend?\" She finally asked.\n\nGwen guessed what anything meant and decided that most of the truth was safe, although she was not ready to discuss her decadent threesome yet. \"If you mean after the show, we were both a little worked up, so yes, we helped each other take the edge off. Is that what you meant?\" The young rider blushed and nodded. \"Are you alright with that?\"\n\n\"I'm fine\u2014you two are friends, just like you and me, and like you said, that's what some good friends do. Is she, uhh, better at...that...than me?\"\n\n\"Better? No!\" Gwen quickly replied. \"Just a little...different. Note better, not worse, just more experienced I'd guess you'd call it, like I'm a little more experienced than you. She gets me to push myself to do things I never thought I'd do, like model at a naughty nightie party. She has so much confidence about the things she does; I really admire that.\n\nBut you're different, too. You're young and willing to trust and take chances, things I wasn't when I was your age and something I admire very much in you.\" \n\nThe young woman snorted. \"I don't take chances anything like the one you and Tim on me\u2014I'd like think you trust me, and I hope that means he does too. He's really special\u2014I mean, he puts up with me and Marvin\u2014and, umm, us. I'm really glad that things between you two are still good despite that,\" Cricket said quietly, looking down at the back of the horse beneath her. \"I have to believe most men would not be so understanding.\"\n\nGwen smiled. \"It took me a long time to get to that point in my life that I would take a chance like that, and yes, we both have complete trust in you. Tim really does like having you around. I was not particularly smart when I was younger, but thankfully I was smart enough to realize that he's not most men. I do think spending time with you and\u2014\" Gwen stopped herself from mentioning Natalie by name\u2014\"my friend has made me more, well, let's just say open to trying new things, and he seems to be liking that a lot. I'm very lucky,\" she agreed. \"I love being with him now more than I ever have,\" she said truthfully. \"It's really hard to describe the feeling...you'll see what I mean when you find the right guy.\"\n\n\"With enough booze and dim lighting\u2014\" The young woman caught her mentor's stern glare and stopped. \"Sorry, I hope I get to see what you mean. You and Tim seem so in love; I can only imagine what it must feel like to be with a guy who wants to make you happy. At least, it sounds like he's making you happy...\" The young woman gave a bashful grin, remembering the sounds that came from her friends' bedroom. \"But it also sounds like you make him happy, too.\" \n\nCricket spent the rest of the ride peppering her friend for more details about her weekend, Gwen answering vaguely in some cases, in detail in others. The young woman kept returning to Neal, obviously fascinated with the thought of a naked man being almost close enough to touch. \n\nThe late-afternoon sun was still above the trees when they returned to the barn, the muffled sound of metal grinding on metal in the shop competing with the songbirds and cicadas. \n\n\"Swim before dinner?\" \n\n\"Definitely,\" Cricket groaned. \"It was so muggy today! My shirt is soaked!\" \n\n\"It was pretty hot today. Let's go get something to drink and grab some towels.\" Gwen pulled her own sodden shirt away from her skin in a vain attempt to let the sweat beneath dry. She smiled to herself, remembering the first time Natalie had solved the problem by stripping off both shirt and bra, and how shocked and impressed she had been with the casual self-assuredness her sister-in-law had seemed to exude. Gwen's smile widened, and she unceremoniously pulled off her own sweat-soaked top and jog bra while her young friend watched in amazement. \"Much better,\" Gwen announced, heading off towards the house. \"Even a little breeze feels so nice on sweaty skin!\"\n\n\"Aren't you afraid somebody will see you like that?\" Cricket asked breathlessly, hurrying to catch up.\n\n\"Nobody here but you, and you've seen my breasts before,\" Gwen replied. \"I hate the feel of wet clothes.\"\n\n\"Isn't Tim in the shop?\"\n\n\"He's seen them before, too.\" \n\nCricket giggled. \"If you're the cautious one, I can only imagine how much self-confidence your friend has! Got any you can spare?\"\n\n\"You have to grow some yourself, just like I've been doing.\" \n\nJuice and water were more deemed more appropriate than wine for hydration before they retreated to their rooms to change. Gwen stripped off her soaked breeches and stood looking at the bikini on the back of the bathroom door, lost in thought, absentmindedly biting at her lower lip. There was another moment's deliberation before she came to a decision, emphasizing it with a firm nod. She grabbed two towels from the linen closet and knocked on Cricket's door. \"Are you decent?\" \n\n\"You've seen them before,\" Cricket joked. \"Come on in.\"\n\nGwen stepped into the room and Cricket froze, her threadbare one-piece bunched around her hips. \"Are we going to swim?\" the young woman asked in confusion, wondering if her friend's lack of clothing meant she had something else in mind before they went up to the pool. The dangerous excitement of an orgasm here and now, with Tim so close, overrode common sense. \n\n\"Uh-huh. I'd rather not wear a suit, if that's alright with you. But only if you don't wear yours, either,\" she added hurriedly. I don't want to be the only one like this.\"\n\n\"Now? Tim's here! If he comes up while we're swimming he'll see us--me!\" \n\n\"He's seen naked women before,\" Gwen reassured her. \"I promise he'll be a perfect gentleman.\"\n\n\"I don't want to embarrass him...\"\n\n\"I really don't think you will, but I understand,\" Gwen said quietly. \"I'll go get my bikini.\"\n\n\"No, don't,\" Cricket replied. \"It's your house. You should be able to swim however you want. Are you sure he really won't mind?\" \n\nTell you what,\" Gwen said, handing the young woman one of the towels. \"I'll go talk to Tim and if he doesn't think it's a good idea then we can come back and get our suits. But I'm sure he'll be fine. There's nothing to be embarrassed about.\" The Lady snorted derisively.\n\nCricket took the offered towel. \"I don't know...\" She took a deep breath and pushed the suit down around her ankles. \"God, I can't believe I'm doing this.\" \n\n\"Meet you up there,\" Gwen said with a smile and headed across the yard. \n\nShe waited in the shop doorway until he had turned off the grinder so as not to interrupt his concentration while his fingers were so near the spinning machinery. \"Tim?\"\n\nThe ceiling fans above the bay were turning at full speed but that still not enough to keep the space cool, and his gray shirt was dark with sweat. He continued to scowl at the piece of metal he held, obviously not satisfied with his progress. \"Yeah?\" Tim turned and froze at the sight of his wife in the doorway, naked save for the towel slung over her shoulder. \n\n\"Cricket and I just got back. We're going for a swim.\"\n\nHis eyes widened. \"Uhh, okay? Both of you? Like that?\"\n\n\"Yes. I just wanted to warn you in case you were thinking of joining us\u2014Cricket didn't want to embarrass you.\"\n\n\"Oh, uh thanks, yeah,\" he mumbled. \"So you want me to stay down here then?\"\n\n\"You look pretty hot,\" she replied, kissing the cheek of the stunned man before turning away. \"Come up and swim with us. Or if Cricket was right you can go up after we come down to make dinner. Up to you.\" \n\nThe young woman was primly sitting on the edge of one of the deck chairs, her towel wrapped about her. \"Did you tell him?\" She said anxiously, eying the naked woman.\n\n\"I did,\" Gwen replied, tossing her towel on the table, \"He might come up after he finishes what he's working on, if that's alright with you.\" She descended the pool's stairs, finally diving forward when she was waist deep. The young woman stood and looked about anxiously, dropping her towel as she hurried to the water's edge and over the side in on motion. The water would offer at least some concealment if and when Tim did come up, and she alternated between treading water and hanging on the concrete lip should he appear unannounced. \n\nHe did appear five minutes later, cautiously climbing the hill, carefully looking about as his eyes came even with the pool deck. Cricket saw the top of his head bob into view and dropped lower in the water, her chin just above the surface, as the bare chest beneath the head appeared. Another few steps and his waist and the blue swim shorts he wore were now visible. The young woman was disappointed that he was wearing a suit, not wanting to admit that she had hoped for just a peek of him, just a peek\u2014anything more would be rude\u2014but the thought of seeing what Gwen got to play with every night had her interest. Her own body was not much to look at, but it was all she had to offer in return for seeing a naked man up close and now it seemed he was not going to fulfill his part of the imagined deal. \n\nTim willed himself to concentrate on Gwen as he stepped through the gate. \"I, uhh, wasn't sure what the dress code was...\"\n\n\"Your choice, right Cricket?\"\n\nTim used this excuse to look to the young woman for confirmation, struggling not to appear as though he was staring. The fading light and rippling water made seeing what was below the surface difficult, but it was clear enough for his active imagination to be convinced that she was nude. \n\n\"You shouldn't have to be the only one wearing something,\" she said with as much calm as she could muster. \"It's your pool.\" He looks as nervous as I am. I don't know how Gwen can be so calm.\n\nTim hesitated, looking at his wife one more time, Gwen just looking back and smiling patiently. Cricket's nerve failed her at the last moment and she averted her stare in a reflexive nod to his modesty as he hooked his thumbs into the waistband of his shorts. Tim was somewhat relieved by the young woman's sudden interest in the fence to her left as he pushed them down and dove into the pool in one motion, hugging the bottom before surfacing next to Gwen. \n\nThere was awkward silence as the trio did their best to appear nonchalant while treading water, Cricket and Tim both concentrating on keeping their sneak peeks at each other to a minimum. Tim failed at this more often, and he occasionally caught glimpses of little bullseyes atop pert mounds of flesh and a dark smudge between kicking legs. The head bobbing between his own legs has no such concerns and fought to come up for a better look, and its owner was thankful for the cool water both aiding and hiding his battle to restrain it. Tim clearly saw Cricket's bare back and pale buttocks break the surface as she kicked off one end of the pool and the battle was renewed. You saw all those naked women on the beach last year\u2014hell, you saw Yvette jerk Bob off\u2014 and managed not to get a hard on, why is this so different, he admonished himself. Because you've jacked off imagining that naked woman sixty-nining with your naked wife, he answered truthfully.\n\nGwen was more nervous than her friend had assumed, but she was still the most relaxed of the trio. She watched both her husband and friend sneaking glances at the other before studying the deck furniture intently when they had to surface for breath or ran out of pool to swim away in. \"I was thinking steaks and a salad for dinner,\" Gwen announced, and the others, each at opposite edges of the pool, quickly gave her their complete attention. \"Tim, could you go start the grill? We'll be down in a couple of minutes and we can do the rest.\" \n\n\"Uhh, sure,\" he said, thankful his cock had taken a short break from its efforts become the center of attention. He pushed himself up from the water and on to the pool deck in one fluid motion. Cricket could not resist watching his muscular legs and buttocks emerge, thighs spreading as he put a knee on the warm concrete to climb out before standing, and she was rewarded with a glimpse of the backside of his drawn-up testicles. He hurried to his towel and wrapped it about him, grinned sheepishly at Gwen after another surreptitious glance at Cricket, then disappeared through the gate. \n\n\"Hungry?\" Gwen asked, making her way to the pool steps. \n\n\"Very.\" \n\nThe pair stood on the deck, drying themselves. \"If we keep going without suits,\" Gwen said casually as she toweled her hair, \"you're going to have to look at him sometime.\" \n\n\"What? I wasn't\u2014\"\n\nThe older woman laughed softly. \"I know. You both were doing everything you could to avoid looking at each other. It's alright to look\u2014it's just Tim. I thought you wanted to see what men looked like without so many clothes?\" \n\n\"I do, but that's your husband!\"\n\n\"Yes, he's my husband, but I trust you and he's still a naked man. Not a bad looking one if I say so myself, although I'm a bit prejudiced.\" Gwen smiled innocently and wrapped the towel about her, a blushing Cricket doing the same. Smoke was already wafting from the grill by the time they got to the deck, and glasses of wine were sitting on the kitchen table for them. ",
        "\"Be right back\u2014I'm going to get some shorts and a t-shirt,\" Gwen said helpfully after taking a sip, sensing the young woman was uncertain about post-skinny-dipping etiquette. Their past swims had usually gone from pool other naked activities...\n\nTim was waiting in their room for her, towel still wrapped about his waist, uncertain as well. He followed her lead as she pulled out something loose and comfortable, foregoing underwear, and were back in the kitchen when Cricket joined them similarly attired. He noted the young woman's lack of a bra and smiled at the thought. There wasn't even a shirt over them a few minutes ago and you were still too much of a pussy to look.\n\nThe air cooled rapidly as the sun set, and they sat down to dinner on the deck. It was a quiet affair and there was an all-around feeling of fatigue and well-being, but a tinge of awkwardness remained. \"I'll tuck the horses in tonight, if that's alright,\" Cricket finally volunteered, rousing herself from her chair and collecting dishes. \"Marvin got a little cut on his forelock today\u2014probably a stick or rock or something\u2014and I want to make sure it's alright. \n\n\"Of course,\" Gwen answered quietly. \"Go ahead--we'll get the dishes.\" \n\nTim was already at the sink, rinsing out glasses when Gwen set down the last of the bowls. \"I love you,\" she said simply, coming up behind her husband and hugging him about the waist. He smiled and continued to rinse; another benefit of his wife's transformation had been her willingness to show physical affection. More gentle touches, more hugs, more quick kisses...the old more proper Gwen had kept physical affection to the required minimum. He liked this Gwen a lot better. \"Love you too, beautiful.\" He turned his head to gently kiss the top of hers, then returned his attention to the glass in his hands. \n\nShe laid her head on his shoulder blade. \"Were you alright swimming like that today?\"\n\n\"Yeah, I got used to it,\" he bluffed with a laugh. \"But I hope she didn't think it's always that size, though. You know how cold water makes it shrink up some.\"\n\n\"I'd be surprised if she saw anything. I think she was afraid to look at you.\" \n\nThat made two of us, then. I didn't want to look like I was checking her out. You think she was okay with being naked in front of me?\" \n\nGwen giggled. \"I think she was a little shy, but it's alright to look at her. I know it's what men do when there's an attractive woman around, right? Don't you think she's attractive? I think she is.\"\n\nTim laughed. \"It's what men do when there's a woman around, period. And why do you keep trying to get me into trouble like that? Yeah, she's pretty, just not as pretty as you. I just don't want either her or you to think I'm a dirty old man.\"\n\n\"I won't think that, but you are a man, and I understand that men look.\" Gwen smiled. \"This will sound a little crazy, but she might even be a little flattered if you do. She doesn't think men find her at all attractive.\"\n\n\"Then she's crazy. She's very cute. Just not as cute as you.\" \n\nGwen slid both hands down under the waistband of his shorts to cradle his balls and shaft. \"You say the sweetest things. Maybe you can say some dirty things for me later?\"\n\n\"How dirty?\" Tim put down the last glass, happy to stay where he was and let her continue to play with his rapidly-stiffening cock. \"And how loud?\" There was the sound of footsteps on the deck and he waited for the hands to withdraw. Tim cautioned himself not to turn around until the beast Gwen had awakened quieted.\n\nThe screen door squeaked opened and the hands retreated deliberately. \"Oh, sorry, didn't mean to interrupt anything,\" Cricket chirped, making no effort to go back out. \n\n\"It's alright,\" Gwen said dreamily, her head still on Tim's shoulder. \"Everything alright out there?\"\n\n\"Well, I really hate to bother you, but, umm, I'm not sure about that cut. It looks bigger than when I turned him out this afternoon.\n\nGwen lightly patted her husband's rear. \"I'll go take a look. Be right back,\" she told him, letting the young woman lead the way to the barn.\n\n\"It's a clean cut,\" Gwen said, kneeling next to the big horse. \"Some antibiotic cream and a couple layers of gauze to keep the flies out while letting it breathe. Want me to wrap or hold his head?\"\n\n\"You hold I'll wrap,\" Cricket replied, rising and heading for the tack room for the necessary supplies. Marvin proved to be a brave patient if a bit melodramatic, allowing Cricket to work without interference while resolutely staring forward, occasionally snorting and trembling. \n\n\"That'll work,\" Gwen said as she again knelt and examined the bandage. \"We'll change it in the morning.\"\n\n\"Thank you,\" Cricket said. \"I'm going to stay with him a little bit longer until he calms down. You should go back to whatever I interrupted. You are going back to whatever I interrupted, right?\"\n\nGwen smiled and turned to leave. \"We'll keep it down.\"\n\n\"Please don't on my account.\" \n\n\"Everything okay?\" Tim asked, looking up from the TV weather report at the sound of feet in the kitchen. \n\n\"Everything's fine,\" she reassured him, \"just a clean cut. You know how Cricket worries about that horse.\"\n\n\"Yup. She's just like you that way,\" Tim said with a grin, rising from his easy chair. \"Coming to bed?'\n\nHe led the way, looking back and noting the door Gwen had left half open. She stripped, lay down and let him pull her to his body. Their kiss was relaxed and lingering, a sign to each other that both had needs but neither was urgent. The screen door slowly screeched open and shut at the other end of the house, followed by the muffled thud of the kitchen door. Tim removed his lips from her breast and looked up, wanting to make sure the naked woman he held was not having second thoughts about privacy now that her friend was almost certainly in the hallway. She didn't seem to even hear the doors, gently pulling him back to her nipple before reaching between their bodies to lightly drag her fingernail up his length. \n\nCricket cursed the creak of the screen door as she slowly opened and closed it. Only the light over the stove remained on, a sure sign Gwen and Tim had gone to bed ahead of her as she had hoped. She removed her boots as quietly as she could manage, turned off the light and headed for her bedroom, hopeful that Tim and Gwen would make love tonight and that she was in time if they did. The sound of their lovemaking was so incredibly erotic, so primal and passionate, and she loved the feelings listening in produced . That she was listening at all was both mildly disturbing and wildly exciting, and she rationalized that Gwen's tacit approval of her sexual peccadillo made it not quite so perverse. \n\nCricket stopped to survey the situation after she turned the corner. Their bedroom door was partly open, most likely intentionally and as an invitation, she told herself. She started quietly down the hallway while reviewing her plan. Stop at her door for to see if anything could be heard and perhaps escape unseen if one of them came out, only move a bit closer if absolutely necessary. \n\nCricket moved slowly, curbing her impatience, not wanting to risk detection. The corner of their bed was visible this time from where she stopped by her own room, their door open wider than last time but still screening her from the bodies on the bed. It was safe enough here; She could hear them talking but their murmurs were indistinct. The door was still mostly closed, she convinced herself, she could get closer and hear a little more clearly...if you're going to be a deviant, be committed to it, she thought grimly and shucked off her clothes, tossing them in her room while cursing her definitely abnormal libido for getting her into these situations. Cricket took a deep breath, held it, and crept closer. \n\nThe door was open wider than the time before, enough so she could see the edge of the dresser against the far wall and the mirror above it. Another small step forward and she was less than a foot from the door, being careful not to bump it and reveal her presence. The gap between the jamb and door was wide enough so that the entire dresser could now be seen. There was movement in the mirror's reflection, and Cricket recoiled as she realized the tilt and width of the glass afforded a partial view of the bed and the two bodies on it. She thought about moving back a little, both to leave them at least a little privacy while also avoiding detection herself. I've already invaded their privacy, she countered, and the hallway's dark, so they probably can't see me, and besides, they're kinda busy...she stayed where she was. \n\nShe justified her decision by telling herself the view wasn't that great anyways. The mirror's angle only showed the upper halves of the two naked bodies, but the sensual curves of the part she could see were obviously Gwen, lying on her side with her back to the mirror, visible from her midsection on down to her knee. A hand attached to a hairy arm lay across her hip, alternating between caresses and squeezes of a visible buttock. Gwen placed her thigh over Tim's and the hand retreated between the two bodies. Cricket could guess where it had gone. \n\nThe young woman was close enough to clearly hear Tim's bass rumble. \"You're really wet. Is that from swimming?\"\n\n\"We went swimming a few hours ago. I'm wet because of you. And you're rock-hard. I thought you said cold water had the reverse effect?\"\n\n\"We went swimming a few hours ago,\" he laughed softly. \"I'm hard because of you. You make me that way even in cold water.\"\n\n\"I saw it trying to rise to the occasion once or twice while we were up there,\" Gwen said with a smile as she began to delicately stroke the shaft with just thumb and index finger. \n\nThe news alarmed Tim, especially with their guest most likely listening in. \"You did? Shit! I'm sorry, I was really trying to keep it under control. You don't think she saw it, do you?\"\n\nGwen laughed. \"Don't worry, like I said, I don't think Cricket saw much of anything, and if she did, well, she's seen one or two before. If she hasn't learned yet that thing has a mind of its own, then I'm sure she will, just like I did. Maybe you should just let her see it so she doesn't get the wrong idea about its size. Or would you rather I just tell her how big and hard it gets?\" \n\nThe young woman listened with amazement, intrigued by the thought of his erection in plain sight for all to see. Gwen had obviously been the cause of it, he had said so, but it would have been interesting to see it all puffed up regardless. She doubted he would take Gwen up on her offer to openly display it, but it was fun to imagine. Her finger dipped to her slit. Wet, and definitely not from the pool, Cricket mused. She silently begged Gwen to move and let her see what she had missed earlier. \n\nThe conversation lapsed and the only sounds were the couple's kisses along with occasional groans and sighs of pleasure. She could see the top of Gwen's hips beginning to undulate against the finger that was surely inside her in a way Cricket had seen before, when she had been the cause of it. Her friend laid back and disappeared below the bottom of the mirror, revealing the man by her side. Much to Cricket's disappointment the mirror cut him off at mid-hip as well, his manhood frustratingly just out of sight. \n\n\"Lick me first?\" Gwen asked softly, and Cricket saw a knee come up and out to open the way. \n\n\"Love to.\" Cricket saw Tim roll to his knees and crouch between his wife's unseen legs, his cock hidden behind his thigh. \"You have a beautiful pussy, I ever tell you that?\" He bent to gently kiss it. \n\n\"You have,\" Gwen admitted, \"but I think Cricket's is prettier.\" \n\nTim hesitated for just a second, unsure how to respond, very aware of what she had seen, touched and tasted. He wouldn't mind comparing the two side by side before officially declaring Gwen the winner. Maybe even throw in Natalie's for the sake of competition...\"Then she's got one hell of a pussy,\" he finally offered, \"because this one is a ten.\" He lay flat to allow his tongue full access, and his body disappeared behind her raised knee and beneath the mirror's edge. \n\n\"How did you get so good at that?\" Gwen hissed in pleasure as her hands massaged her breasts. \n\n\"Inspiration,\" came the muffled reply. \"I get serious about the things I like to eat. Didn't you see me demolish that steak at dinner?\"\n\n\"Keep eating,\" Gwen breathed, \"please don't stop.\"\n\nCricket's finger was turning circles on her clit as she listened in. The young woman was both pleased to know that Gwen thought her sex was pretty and embarrassed that the man between her friend's legs now knew as well. She had never blamed the boys in college or even Daniel for not going down on her; it was a pretty scary part of the body after all, even to those who had been born with one. Cricket remembered how she had paused the first time Gwen's had been inches from her face, and it was both lust and a sense of obligation that had compelled her to kiss it. She smiled as her finger continued to strum. I don't stop and think about it first any more, she thought. The feel of her tongue gliding over warm, wet, pliant flesh and the hard nub above was thrilling, and Tim was right\u2014Gwen did taste good. To her, it was the taste of sex itself.\n\nThe woman on the bed was drawing close, the lazy twitching of her knee becoming more spastic and her breathing becoming more labored. \"Tim, don't stop, please don't stop, so good,\" Gwen babbled, her words flowing from the certainty Cricket was listening, loving the thrill of performing. \"I'm coming-coming-coomminng,\" she chanted, and the orgasming woman's knee flopped on over on the head beside it. She coo'd through her climax, for Cricket's benefit as much as her own, then announced its completion with the sigh of a course well run. Her leg dropped to the mattress as Tim came up for air behind it. Gwen's fingers lazily played in his hair. \"That was wonderful,\" she murmured. \n\n\"Maybe you could give the little guy a kiss?\" Tim suggested as he rose and flopped over her outstretched leg and on to his side. Cricket caught just a frustrating glimpse of his shaft and pink tip before it disappeared below the edge of the mirror. He lay back as Gwen rose and moved down his body. Her head dipped to his waist, and the young woman knew what she was about to do. She had overheard the older girls in school and the riding academy talk about blowjobs. Nothing she had ever heard about them had been good. There had been several not-so-private conversations about the odious task of giving them, and more importantly, what had been expected in return. Her classmates had used them as a form of currency, demanding rides to the mall or party invitations in exchange for even putting \"that nasty-looking thing\" between their lips and nothing Cricket had ever heard since had dispelled that notion. Gwen appeared to be happy to accommodate her husband's request though; it must be true love to say yes to that, she thought. Either that or she owes him for something. The idea that Marvin's continued stay might be paid for this way briefly crossed her mind. She could see the top of Gwen's head gently bobbing up and down, occasionally stopping and holding still. At least he's not gagging her, the young woman thought. One of the girls at school had complained about nearly throwing up on an overzealous partner. Tim's contented groans turned to sharper hisses and grunts during these breaks, and Cricket guessed her friend was not idle during these breaks.\n\n\"Come on up for air and let me fuck that perfect pussy,\" Tim finally groaned. \"You got me pretty close to poppin'.\"\n\nGwen removed his cock from her mouth. \"Would it be alright if I finished you this way?\"\n\n\"You sure? Everything okay?\"\n\n\"Everything's fine. I want to taste you.\"\n\n\"No way. Really?\"\n\n\"Really.\"\n\n\"Huh. What do you know about that. Then hell yeah, have at it.\" Gwen resumed her bobbing, a bit more energetic this time. \n\nCricket listened on in shock, understanding what her friend was about to do and that she had actually volunteered for it. Some of the girls in school had described how they would take pity on their partners and finish him with her hand; other boys were brought to the edge and left to finish themselves. But as bad as their cocks, looked, they tasted worse. To actually let them do that in their mouth required much more in return--concert tickets or a ride to the mall AND a new pair of shoes, at the very least. Their \"cock-snot\" had a nasty consistency to it and tasted vile, the girls had commiserated, laughing about how many pairs of shoes it would take to actually swallow it, not that they ever would do such a thing, the girls always assured each other. And yet Gwen had asked for it. Maybe this is a trade after all, the young woman mused, and wondered if the expense and effort that was Marvin's unpaid room and board was temporarily forgiven via this type of transaction. I'd do it myself if she let me, Cricket decided, not that Gwen would ever in a million years allow that. It would definitely be a dreaded and unpleasant task, but it would be a small price to pay for Marvin's food and shelter. Her finger moved faster, occasionally dipping to spread more wetness over and around her already-soaked labia as she imagined forcing herself to perform such a task. \n\nShe could still see the top of her friend's head as Tim gently held it. Gwen was bobbing in a steady cadence and Cricket imagined the older woman's lips sliding up and down her husband's shaft. \"Jesus, you suck cock so good. You been practicing on somebody else?\"\n\nShe removed him from her mouth long enough to answer, and Cricket got a glimpse of her face as she came up for air. \"Just you. Practice what you love, love what you practice\n\n\"Hell, you can practice as much as you want. You ready for me?\" Tim groaned as she returned to the waiting length, his hands tightening their grip ever so slightly.\n\n\"Mm-hmm.\" Gwen kept up her efforts until the hands stopped her efforts and his primal urges took over.\n\n\"Here it comes,\" he announced with a grunt, careful to keep his thrusting controlled so as not to gag her. Make it a good experience, at least as good as taking a load down your throat can be... \"Shit, here it comesssss...\" \n\nCricket heard him give out a long, strangled groan followed by grunts clearly in time to his pulses, exhaling to announce the end of his orgasm. All was silent for a moment and she saw Gwen rise from her task, her cheeks flushed as she moved up to lay next to her recovering husband. What did she do with it? The young woman wondered. I didn't hear her spit it out\u2014maybe she used her hand at the very end, although the fact her head remained so close to the \"barrel of the gun\" might have been dangerous as well. Taking that in the face would not be pleasant! She couldn't have swallowed it, right? Hay and feed aren't cheap, she reminded herself. I wonder how many of those equal a month's worth of room and board? Swallowing would certainly add value. The young woman could sense her own climax approaching and felt the need to finally give the couple some privacy now that their performance was over. She retired to her room and waiting Magic Wand to continue hers.\n\nGwen snuggled under Tim's left arm and wrapped herself around her man. He makes me feel so good, she thought, basking in his warmth and security. Why the hell did I wait so long to find all this out? \n\n\"Gawddamn, you are so good at that,\" Tim finally murmured, hugging her tight. \"You make it hard to decide which way to come.\"\n\n\"Take turns,\" she replied sensibly, returning his embrace. \"Nothing says you have to stick to one way. You can do whatever you want whenever you want.\" \n\n\"Be careful when you say that,\" he said with a chuckle. \"I have a hell of an imagination.\" Tim lowered his voice to a murmur. \"Think our friend heard us?\"",
        "\"I'm pretty sure she did, yes.\" \n\n\"Think she's still listening?\"\n\nGwen hopped off the bed and swung the door open to reveal an empty hallway. She could hear a soft buzzing. \"No.\" \n\nTim shook his head at the open doorway and chuckled. \"Don't you think she might see us that way?\"\n\n\"She'll be busy for a little bit.\"\n\n\"Busy? Doing what?\"\n\n\"You know. Relieving an urge. Taking care of business.\" She lay down next to him and lowered her voice. \"Masturbating.\"\n\nHer husband's eyes flickered in surprise. \"Yeah, I guess that's why she was listening, huh?\" He hesitated, thinking his next sentence over carefully. \"You can go help her if you want,.\" \n\nIt was Gwen's turn to show surprise. \"Really?\"\n\nTim's expression remained calm. \"Mm-hmm.\" \n\nGwen rose from the bed, never taking her eyes from him. \"You sure?\"\n\n\"Go on ahead. Just come back when you're done. Sorry, but you still have to sleep with me. House rules.\" \n\n\"I'd be very happy to do that,\" Gwen said with a smile. \"I'll go check on her\u2014I'm sure she's got things well in hand\u2014\" she blushed at her choice of words and Tim smiled. \"Are you sure?\"\n\n\"Yup. Go check on our houseguest.\" \n\nGwen continued to look back for some sort of recall even as she knocked on the young woman's partially closed door. \"Cricket? Are you decent?\" \n\nThe buzzing stopped. \"Oh, uhh, hold on...\" she paused and there was the sound of rustling sheets. \"Come in.\" \n\nGwen peeked around the door before entering. The young woman lay under the covers, only her head showing. An electrical cord was visible in the dim light, running from a nearby outlet and under the blankets. \"Sorry to interrupt,\" she said with a nervous smile, moving to the woman's side, \"but, umm, I could give you a hand with that, if you want\u2014unless you'd rather not, of course!\" \n\nCricket looked up at the nude woman in astonishment. \"But you and Tim...just... does he know you're here?\" She asked in a harsh whisper. \n\n\"He thought that I should come check on you.\" Gwen gently dropped to one knee and kissed the young woman. Cricket knew where those lips had just been and thought she could taste something different, a hint of saltiness maybe... \"Unless you'd rather have some privacy.\"\n\n\"No, I'd like you here, but...Tim really doesn't mind?\" \n\nGwen replied by kissing her again and slipping a hand under the covers, gliding down over her breasts and stomach as Cricket's legs opened to greet her. Wet flesh surrounded her middle finger as it slid down and found the young woman's opening, her hips bucking urgently in response. \"Are you close?\"\n\n\"Uh-huh...\" \n\nGwen's hand renewed its efforts as she pushed the blanket back a little further and began to bathe a nipple with her tongue.\n\n\"Oh...\" \n\nGwen was in no hurry, but Cricket was and came five minutes later, legs trying to squeeze the hand between them while she let out a soft wail. The older woman gently kissed the spent woman's nipple and cheek before pulling the covers back up over her. \"Good night. Sleep well. See you in the morning.\" \n\nTim had waited until she had disappeared into the guest room before grabbing his resurgent cock. I thought only teenagers could get it up again so quick, he mused with no small sense of pride, casually stroking as it returned to its full glory. He was tempted to leave his spot on the bed, to creep closer and perhaps listen in as Cricket had done to he and Gwen, but decided not to push his luck. He was content to remain there, the door open as Gwen had left it, imagining what the young woman's reaction would be if she came out of her room now and saw how big he really was. He was rewarded with Cricket's high-pitched cry a few moments later, and Gwen returned a moment after that. \n\n\"Everything alright?\"\n\n\"Everything's fine now.\" \n\nGwen lay down and began to stroke her husband's fresh hardness. Tim shrugged apologetically. \"Sorry, told ya it's got a mind of its own.\"\n\n\"And where does it have a mind to go this time?\" \n\nCricket smiled as she stumbled across the hall to the bathroom, the unmistakable sound of two people having sex coming from behind the partially-closed door. I guess Tim was alright with her coming to check on me. She lingered, not needing to move any closer\u2014the light was off now anyways, probably not much to see\u2014as the sounds of Tim's thrusts and Gwen's answering gasps were perfectly clear from where she stood. She could imagine him between her friend's widespread legs, taking her, owning her, and his orgasm was the exclamation point to his claim of ownership. Cricket's second climax that evening was slower in coming, but that was by choice. The day and evening and all the what-ifs played over and over in her head until she could hold off no longer. "
    ],
    "authorname": "BusyBadger",
    "tags": [
        "skinny-dipping",
        "listening",
        "voyeur",
        "blowjob",
        "cunnilingus"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-03-ch-07"
}