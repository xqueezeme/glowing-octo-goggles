{
    "title": "In The Gallery",
    "pages": [
        "In the Gallery - An Erotic Encounter.\n\nBy Vitorio \u00a9\n\n~~~\n\nHi,\n\nThis was published around 2008. It was prompted by a young woman I did actually bump into at a gallery in Sydney where my brother's pal was exhibiting! She was as I describe below but, regrettably, it was a bump, a smile, and an apology but she was gorgeous!\n\nI will include here my usual caveat. This story contains ANAL SEX, amongst other things so, if ANAL SEX is not your thing do not read this or, if you feel you need to, stop at the chapter whereafter it is discussed and described -- in some detail. I will point out that ANAL SEX in my stories is almost always gentle and loving -- as it should be - and happens with the consent of the recipient.\n\nThanks,\n\nVitorio\n\n~~~\n\n1. The Meeting:\n\nIn which we meet, go to the 'Opera', and the die is cast!\n\n~\n\nShe stood 5'9\", possibly more, on thick heels about 3\" high. She had blonde shoulder length hair atop a pleasant, open, slightly Asiatic face. Standing sideways on to me, her gorgeous figure drew my attention. She must have had some empathetic sense because she turned and met my eyes, giving me a little half smile. Full face on I could see her high cheekbones and eyes with a very slight slant which pointed to a, possibly, Eastern European or Eurasian origin. I supposed she was 20-ish and, for me anyway, stood out amongst all the beautiful young things floating about the exhibition.\n\nIn Australia for a longish stay, I was visiting the gallery with my brother who lived in Sydney. He was a friend of one of the photographers exhibiting and had dragged me along for some moral support. I didn't mind for I had booked in for three nights at one of the hotels near the Opera House that overlooked the harbour and bridge. He was going back to the suburbs where he lived, leaving me to explore.\n\nI'm afraid I stared! She had turned away now, chatting with two girlfriends, and I set eyes on the most beautiful pair of hips and a delightfully broad and shapely bottom. I can honestly say that she took my breath away! Her high-heeled shoes thrust her bottom out provocatively below the swell of her flowing hips. I should add that her legs, bare I thought, were also strong and shapely. She was, indeed, a delight; particularly for a devout 'bottom' man like myself. The short skirted dress she wore accentuated her shape as it hung from her hips, barely reaching past her shapely thighs. Yes! I stared and she caught me! It didn't seem to faze her however, as, looking over her shoulder, she flashed me another shy half smile.\n\nHmm? I thought? Perhaps? I must admit I would be surprised but, as I had already been described as 'distinguished', I might at least have fun talking to her. Look - I'm no oil painting and at what I thought was three times her age didn't expect she'd be interested. I was divorced, so single, and free to 'play' so - here goes!\n\nShe turned back sideways as people mingled and again - a third time - flashed a half smile, more confident this time. I smiled back a greeting. She didn't turn away but responded with a fulsome smile and turned to face me. Seeing her full on wasn't a disappointment! Small breasted, with lovely feminine sloping shoulders, she was bloody gorgeous and, I suspected, perhaps a few years older than I had first thought.\n\nI stood and walked over. She didn't turn away but met my eyes with hers as her friends noticed me. \"Hi,\" I said smiling and, I'm sorry to say, exaggerating my English accent, \"some nice pictures?\" OK, not the most original line but it was a gallery and it was an exhibition of photographs.\n\nShe smiled back, \"Mmm. You're English!?\"\n\nI laughed and bowed my head in acknowledgement. \"Yes,\" I said, \"for my sins, I am. And you are Australian!\"\n\nShe laughed back, playing the game. \"Funny place to find someone all the way from England!\" So I explained that I was on holiday visiting my brother and that he was a friend of one of the exhibitors. I was quite surprised really for she seemed genuinely interested. Her eyes didn't seem to leave mine and I felt a definite 'jolt' of attraction as we spoke.\n\nI went on to explain that I was staying in Sydney over the weekend in one of the hotels overlooking Circular Quay. I suppose that that told her I was pretty wealthy. No problem, I was!\n\nI managed to prise her away from her friends to introduce her to my brother. I could see from the old reprobates face that he fully appreciated her beauty. He helped me out by dragging us both further away from her two friends to meet his photographer pal then they drifted off together leaving us alone.\n\nWell, faint heart never fucked a pig, as we used to say at home so, \"Look, I know we have only just met but would you do me the honour of allowing me to buy you dinner?\" She hesitated, not surprising really as we had only just met but I suppose my brother and knowing an exhibitor worked in my favour. I breezed on throwing caution to the winds. \"I can assure you of sparkling wit and repartee, and pleasant conversation. And you can choose the very best restaurant.\" She laughed.\n\n\"Mmm . . . OK,\" she said after a slight hesitation and quite shyly I thought. Perhaps she wasn't that experienced. Then she smiled, \"When does the sparkling wit start?\"\n\nI laughed in response, \"Touch\u00e9!\" I said then, \"shall we go now?\" I wanted to get going as soon as I could - I didn't want this lovely young woman to change her mind.\n\nShe smiled again, \"Mmm, OK. As soon as I know your name!\"\n\n\"There!\" I said with a smile, \"I'm so overwhelmed by your beauty that I'm forgetting the common courtesies. My name is Mike Watson. Fair's fair,\" I laughed, \"now tell me yours!\"\n\nAnother smile, \"Dana, Dana Ventakova.\"\n\n\"Is that Russian?\"\n\n\"Mmm, way back though.\"\n\n\"It suits you.\" It did!\n\n\"I must tell my friends,\" she said, \"we were supposed to be going out together!\"\n\n\"I'm flattered,\" I smiled. She smiled back, again shyly I thought.\n\n\"I don't usually give in so easily,\" she said with a nervous laugh then, \"but . . .\"\n\n\"I know,\" I laughed, \"I told you - it's the sparkling wit! Shall we find your friends. You can introduce me - and make them jealous,\" I added with a big smile.\n\nShe laughed again and we made our way through the crowded room where I was 'put on show'. I could see two pairs of eyebrows raise as Dana told them I was taking her out to dinner and then one said abruptly, \"Heck Dana, you've only just met him!\"\n\nDana flashed me an embarrassed smile and shrugged her shoulders. \"I like him,\" she said.\n\n\"But . . .!\"\n\nI laughed, \"Ladies - please. Dana will be perfectly safe with me! I can offer my passport as surety if you wish!\"\n\n\"Don't be daft Megan,\" said Dana, \"you two go on.\"\n\n\"But Jake's expecting us all!\"\n\n\"He'll have to 'un-expect' me then won't he!\" Dana responded curtly. She took my arm, \"I know just the place for dinner! 'Bye you two!\" She led me out of the gallery into the street.\n\n\"Who's Jake?\" I asked softly. I didn't want to be the cause of a broken relationship nor catch her on the rebound.\n\n\"He's Megan's fianc\u00e9,\" she said. \"Bloody pain!\"\n\n\"OK,\" I said, relieved, \"where to?\"\n\n\"Anywhere?\"\n\n\"Of course. It's your evening.\" She raised her eyebrows. I said, \"- anyway wherever you choose will be immensely improved by your presence!\"\n\nShe blushed and laughed nervously, \"Flatterer. Can we go to Aria?\" she asked quickly.\n\nWell I knew that Aria was a very expensive restaurant near the Opera House but decided to play ignorant. \"Aria?\"\n\n\"Mmm, I've always wanted to go there.\"\n\n\"Then you shall!\" I hailed a taxi and off we went. The evening was a delight. Dana's personality was both sophisticated and na\u00efve at the same time. I turned on all the 'gentlemanly' attributes treating her like a princess. The restaurant was charming and the food excellent. By the end of the meal I had found out all about her. She was almost 22 and at Sydney University studying Art. I gathered that she didn't have a current boyfriend but her tone and manner, particularly her dress, made me think she wasn't completely inexperienced in bedroom arts!\n\nWe left the restaurant to mingle with the Friday night crowds milling around the Quay and the Opera House finally stopping for coffee at the Opera bar.\n\n\"What time do I have to get you home?\" I asked with a smile.\n\n\"Well . . .\" she responded hesitantly, \"I was staying with Megan so I wasn't expected back tonight. Any time I suppose . . .\" Was she hinting at something here? I wasn't sure.\n\n\"Well there's plenty going on here.\" There was: plenty of people milling about in bars and restaurants after the opera.\n\n\"Mmm. I like it here.\"\n\nTime to try and charm! Not difficult for sitting opposite her crossed legs left little to the imagination. \"I like it here too,\" I said smiling, \"the view is superb!\"\n\nShe blushed, \"Oh!\" and uncrossed her legs.\n\nI laughed, \"Sorry,\" I said, \"couldn't resist it! Seriously though,\" I added quietly, \"this evening has been a delight; made so by your presence!\"\n\nShe blushed and she smiled. Perhaps she wasn't used to such fulsome praise? We chatted for quite a while as I told her something of England and London. It must have been close to midnight and crowds were thinning when I finally decided to 'take the plunge'.\n\n\"Dana,\" I said softly putting my hand on hers, \"Dana - would you like to come back to my room for a final nightcap before I get you home?\" The look on her face clearly showed she realised exactly what I was suggesting. If she agreed she wouldn't leave the room 'til morning and she knew it! She hesitated long enough for me to realise this would be something new for her. Her eyes had widened in surprise at the blatant suggestion and I quickly decided to back off.\n\n\"Dana love, let's get you a taxi. I'm sorry!\" I made to stand.\n\nHer hand stopped me. \"I haven't decided,\" she said quietly, \"I might not go home!\" I took a very deep breath. Men of my age didn't often get to this position with a delectable 22 year old student. Particularly one with a figure to die for.\n\nI felt that now was the time. She would or she wouldn't! \"There is a couch!\" I laughed.\n\n\"OK!\" she said and stood. My eyes ranged up and down her body taking in her gorgeous hips and bottom. She watched as I admired her and I don't think I imagined her slight preen!\n\n\"Sure?\"\n\n\"Certain,\" she smiled. \"Lead the way!\" So we made our way back to my hotel.\n\n~\n\n2. At the Hotel:\n\nIn which we make love, discuss anal sex, and make plans for the rest of the weekend:\n\n~\n\nThe 'apartment' consisted of a kitchen next to a dining area: then a lounge leading to a balcony overlooking the Quay and the Harbour Bridge. The separate bedroom adjoined the spacious bathroom with Jacuzzi and walk-in shower. I had been impressed and Dana was as well.\n\n\"There,\" I said as we entered, \"you can have the bed, I'll take the couch!\"\n\nShe laughed seeming at ease now as she realised I was giving her an 'out'. \"That doesn't seem fair,\" she said, \"it is your room!\"\n\n\"OK,\" I said laughing, \"I'll take the bed, you take the couch!\"\n\nShe laughed in response then looked around the doorway into the bedroom. \"It's a very big bed!\"\n\nI took another deep breath. \"Coffee?\" I asked, not wanting to push too hard. Her response was to move very close.\n\n\"No,\" she whispered quietly, \"not just now!\" Her eyes looked up into mine and her lips parted. Hands pulled my head downwards and we kissed. I'd felt a jolt before - now it was stronger.\n\nMy hands roamed her back and shoulders as I kissed her whilst hers held me close. Heart beating I allowed my hands to follow the soft curve of her hips then the bold swell of her bottom. This brought a sigh in her kiss. We broke and my lips kissed her neck and shoulders, easing aside the straps of her dress. Moving slightly apart then we kissed and stroked. Her hands crept inside my shirt and stroked my chest.\n\nKisses became more passionate and tongues entwined - she was, literally, taking my breath away! Moving away again she continued to unbutton my shirt and run her fingers through the hairs on my chest - very stimulating.\n\n\"Turn round,\" I whispered. She didn't demur and turned slowly pushing back into me. I moved away, my hands slipping to her thighs below her short dress. I heard a sharp intake of breath as my hands felt the warmth of her skin. I began to lift the dress, hands following the gorgeous curve of her hips. I felt her panties as my hands continued their journey and the dress was lifted higher. Looking down I could see her skimpy lilac knickers -- not quite a thong and clearly insufficient to cover the marvellous reach of her bottom, disappearing between her fulsome cheeks. At her waist now, and back to warm flesh, my hands continued the journey. It seemed the dress would come off like this so I carried on. Dana sighed as I reached her bra straps then raised her arms upward. The dress slipped over her head easily and was thrown to the floor. God she was/is gorgeous. I stood back feasting my eyes on a skimpy lilac bra and even skimpier panties.\n\n\"Oh my god!!\" I managed as she turned back to face me.\n\n\"Not fair,\" she murmured as she removed my shirt then started on my pants. These quickly joined shirt on the floor and my cock, as hard as it had ever been, was free to tent my boxers. She must have felt it - I certainly felt her! We were still standing, kissing and stroking. It was time to move to the bed! Slipping hands around her body I lifted her up and carried her into the bedroom. Laying her gently on the bed I stood looking down at this beautiful young woman.\n\nI smiled, \"You're beautiful,\" I whispered softly a I lay beside her. She blushed appealingly. Shifting head on elbow I bent and kissed her lips. \"Sure?\" I whispered. She nodded in reply.\n\nMy hand cupped her smallish breasts then crept under the bra and teased her nipples. A soft sigh escaped her lips. \"Turn over,\" I whispered. I wanted to undo the bra but, even more, I wanted to look at her bottom like this. Eyes widened in question. \"Bra,\" I said with a smile.\n\nShe smiled back and languidly turned face down. I undid her bra and drew it off over her shoulders then I knelt up. As before, she took my breath away! Her hips, wide and shapely, flowed into her bottom. An almost perfect shape. 'Bubble butts' are nice but Dana has the bottom of a goddess - wide with perfect curves. Cheeks firm with a slight up curve as they met her legs. Her panties, trapped between her gorgeous cheeks, made the whole scene even sexier. The slight wetness as the material cupped her pussy showed her arousal. My hands on her hips, I gently eased her panties down revealing her most private place. As I slipped them completely off, Dana opened her legs slightly, wriggling sinuously to get comfortable. The valley between her cheeks was open now, her tiny star on view - available. Her sex also completely on view in this position. She was an absolute delight.\n\nI must have been quiet for a while simply taking in the view for Dana, turning slightly and breaking my reverie, said, \"What . . .?\"\n\n\"I'm sorry,\" I said with a smile, \"but you have the most wonderful bottom! I was just admiring the view!\" She blushed and smiled.\n\n\"I haven't done that,\" she said meeting my eyes. My mind stuttered! What did she say? Heart pounding and, incidentally cock beginning to throb even more, I raised my eyebrows in question.\n\n\"Sorry?\"\n\n\"I haven't done that,\" she said again, \"you know. I'm sure you do!\"\n\nI was beginning to become extremely excited because, if she meant what I thought she did she was an 'anal virgin'. So I decided to be careful. \"Dana love, I'm not sure what you mean?\"\n\nShe laughed, seeing through me I think. \"I think you do, \"she said, \"look and she nodded at my cock which was standing even prouder. Time to come clean [or dirty?].\n\n\"You mean you've never had sex in your bottom,\" I said holding my breath.\n\n\"Mmm. I haven't. Have you?\" she asked suddenly, \"I bet you have!\"\n\n\"Well,\" I answered slowly, \"if you mean have I ever done that to a woman then yes.\"\n\n\"A lot?\" God this conversation was raising my blood pressure!\n\n\"Quite a bit,\" I replied honestly.\n\n\"Is it nice?\"\n\nI laughed, \"I enjoyed it.\"\n\n\"No! You know what I mean. I've seen it [that I just had to explore!]. It seems nice but . . .?\"\n\n\"Well,\" I said slowly and carefully, \"most of my partners have enjoyed it.\"\n\n\"Does it hurt? It doesn't look as if it hurts the girls in the films [Wow!?] but it must? Surely?\"\n\n\"Dana love, you are destroying me!\" She laughed. I laughed in return.\n\n\"Tell me! Does it hurt?\"\n\n\"Well,\" I answered with a cheeky smile, \"to be honest I've never had it actually done to me! I have had toys in there and, if it's done gently, it didn't hurt that much.\"\n\nShe pouted, \"Oh you! You know what I mean!\"\n\nI laughed, bent, and kissed her cheek. \"Well . . . It seems that sometimes it does the first time or two but most of the women I've had there have enjoyed it. I know I have!\" As I said this I ran my finger down her spine sending a shiver across her body. Obviously not wanting to discuss it further she rolled onto her side and pulled me close.\n\n\"Kiss me,\" she demanded as our lips met. My cock, rock hard now after the previous discussion, was pressing into her stomach. I felt her hand reach down inside my boxers and encircle it, stroking slowly. \"It feels big,\" she breathed breathlessly. I smiled.\n\n\"Lay back Dana. It's time?\" A statement and a question. She could back off now [and leave me bloody frustrated] but I wanted to give her a final opportunity. If I fucked her I wanted her to want it. Her response was a big smile and a movement on to her back. Her eyes answered me!\n\nSlipping my boxers off finally, I eased her legs apart, knelt between, and gazed down at her beautiful young body. She was smiling, somewhat nervously I thought, and her tongue was flicking out and licking her lips. Stiff cock in one hand, I leant forward and took my weight on the other. With unerring accuracy my cockhead found her soft warmth. As she felt the first pressure she let out a soft sigh, surprise and pleasure mixed. Lodged slightly inside I took my weight on both hands and pushed slowly forward feeling her hot wetness.\n\n\"Oh god!\" she moaned softly as my cock began to fill her vagina. She was tight, bloody tight, and unbelievably marvellous! Obviously excited by our limited foreplay, she was very wet and I slid inside easily. I had to stop for a moment and take a few deep breaths to calm down. Regaining a measure of control I began to press deeper until half my erection was caressed in her velvety tightness. This is close to heaven. Her eyes were wide in surprise I think as I stopped again.\n\n\"OK?\" I asked smiling down at her.\n\n\"Oh god yes! Big! It's big,\" she added breathlessly.\n\nI smiled, \"Too big?\"\n\n\"Oh no! No! Don't stop. Please!\" Well I wasn't going to! OK not true. I would have had she said so - always believed in a woman's right to say no at any time. Now she was saying yes so I began to move slowly back and forth, pushing a little deeper each time and prolonging her feeling of being filled.\n\n\"Oh god! Oh please! I never . . . . Ooooohhhhh!\" Her whole body seemed to shudder. Her vagina gripped like a vice as I looked down into the eyes of a young woman in orgasm. Wide-eyed, she reached up and pulled me down, mouth covering mine in a desperate kiss. I managed, finally, to pull myself away from her embrace and regain my position, weight on my arms. Then, shifting upright, I lifted her legs a little and began to fuck her right through her first orgasm. She seemed surprised that I was still hard and her eyes widened further as my cock slid back and forth inside her. Slowly at first then quicker, harder, I filled her pussy, thighs slapping against hers.\n\nHer groans grew louder and her legs came up around my waist and gripped my body. Staring into her eyes, I could see her orgasm rising again. Her gasps grew louder as I bent my head and drew my teeth gently along her hard nipples. Her gasps turned to, \"Oh god! Yes! Please . . .\"",
        "Seeing this gorgeous young woman in the throes of orgasm for the second time brought my own close. That I could do this for her! I increased both depth and speed of thrust as my body began to respond. My balls tightened and I felt that tense sensation in the base of my spine.\n\n\"Oh fuck Dana,\" I moaned as spunk began to flow into her.\n\nShe must have felt the pulses, three or four I think, for she moaned, \"Yes, yes! Fill me!\" I did gasping as my cock pulsed inside her delectable cunt.\n\nAs ever, it didn't last long! My cock softened - not completely but enough to let me know I needed a rest and time to 'recharge'. Cialis [I had taken one earlier] is an excellent assist but rest is needed between - especially at my age - and I very much wanted to recharge. I had not tasted her pussy yet or her tight anus nor had she my cock! Then there was the idea of her gorgeous arse and the possibility of taking that virginity.\n\nI shifted from over her as my cock slipped from the heaven of her cunt and lay beside her, head on hand gazing down. I smiled as she turned her head and looked into my eyes. \"OK?\" I whispered.\n\nShe reached up and pulled my lips to hers. \"Oh yes!\" she smiled, \"oh yes. It hasn't been like that before.\" I raised my eyebrows. She blushed as she wriggled her bottom comfortably into the bed. \"I've never . . . you know . . . twice like that.\" I smiled. \"It's always been over so quickly.\" She giggled. \"Sometimes it didn't happen at all! Thank you,\" she whispered.\n\nI kissed her. \"I haven't finished!\"\n\nShe moved her hips and thighs, rolling to face me. Her eyes met mine with a worried look. \"You came inside me!\" It wasn't a question - she must have known. I nodded. \"I'm not . . . you know . . . taking anything.\"\n\nHer meaning was clear. \"I have had a vasectomy,\" I smiled, \"too many years ago to want to remember. So,\" I laughed, \"no babies!\" She still looked concerned.\n\n\"I've never . . . you know, done it without a condom. I didn't, don't, want to catch anything!\"\n\nAaaagh, I thought, now I know what she is asking. I, being moderately promiscuous, had always been careful about STD's. I usually wore a condom myself and I had to admit to the stupidity of not wearing one now. I suppose that I had been overtaken by the situation - the opportunity to fuck such a lovely young woman made me throw caution to the winds [a standing prick has neither conscience nor fear!]. In my defence I had also decided that Dana didn't seem the type to sleep around. Of course that rationalisation may have been both self delusion and poor judgement but I didn't think so. Time to put her mind at rest. I am something of a fatalist!\n\n\"I am careful Dana love. I was checked a couple of months ago,\" I smiled and kissed her cheek, \"and you are the first.\" She smiled approvingly.\n\nNow her hand reached up and pulled my lips to hers. \"You said we haven't finished,\" she giggled flirtatiously.\n\n\"No,\" I laughed back. \"Let's explore the shower.\" Her eyebrows raised but she didn't demur as I took her hand and led her to the bathroom. She entered first. I stood at the door. I am afraid I stared! She was as close to perfection as I could wish to imagine. Her gently sloping, feminine shoulders seemed to accentuate the fulsome flow of her hips. She walked straight, upright and, even in bare feet, her arse was both proud and petulant. My cock began to stir at the remotest possibility of taking her there.\n\n\"You like my bottom?\" she said suddenly.\n\nCaught off guard I quickly noticed that she could see all of me in the large mirror. She must have watched my eyes and noted my cock. Time to come clean. \"Dana love, I won't lie to you.\" I smiled my lop-sided smile. \"You are a beautiful young woman,\" she began to blush - it was glorious. \"And you have the most perfect arse!\" Did she stand just a little straighter?\n\nI moved closer. \"I am afraid, Dana, angel, that that part of a woman is the part that attracts me most. It's not the be all and end all but, for me, it is the absolute; the icing on the sexual cake I suppose you could say.\"\n\nShe turned. \"I've never done it, I said.\"\n\n\"I know,\" I whispered taking her in my arms, \"and, for now, let's not mention it. Let's shower.\"\n\nShe gave me a strange look. Surprise, disappointment, pleasure? I wasn't sure but she turned into the shower. I followed. I quickly adjusted the shower heads, two, and the wall jets and we both gloried in the flow of hot water. She was the epitome of loveliness. A water nymph seemingly completely at ease naked with me in the shower. My eyes worshipped her. She was breathtakingly lovely. She seemed to bask in my admiration too and, after a while, reached for the soap and sponge provided.\n\n\"I've never showered with a man before,\" she said innocently.\n\n\"Well,\" I said returning her smile, \"time you found out how much fun it can be!\" She giggled in response as I took the soap and sponge.\n\nI began to wash her, running the sponge over her soft curves: her shoulders, her hips, her thighs, and the glorious cheeks of her bottom. I soon lost the sponge and used my hands, concentrating on her tits, capturing her large nipples between my fingers. She began to moan softly then louder as my hand wandered across her tummy and stroked her mount of Venus. My other hand caressed her bottom cheeks.\n\nSoon my hand covered her sex completely, my middle finger gently pressing on her entrance and teasing her clit. Her moans increased as I drew my hand back and forth pressing a little harder. My other hand, which had been gently squeezing those gorgeous arse cheeks, now found the valley between. As I stroked her cunt, the middle finger of this hand stroked gently across her anus.\n\n\"Ooooohhh,\" she sighed softly, \"oooohhh yesssss!\"\n\nI could feel her legs beginning to weaken. \"Put your arm around my neck,\" I whispered. \"It'll help.\" Languidly her arm snaked around my neck. Now two fingers gently probed her cunt the softly pressed inside. Another finger very gently teased the tight star of her anus. I quickly located the soft flesh of her 'G' spot and began to stroke it.\n\n\"OH FUCK YES!!!\" she moaned. \"Oh god!\" It didn't take long before I felt her liquid flow. As it did I pressed harder on her anus which seemed to encourage a heightened orgasm. Her legs almost collapsed now and I felt her weight against my body so I gently sat us both on the bench provided. She rested her head on my shoulder for a moment then kissed my neck.\n\n\"That was nice,\" she whispered then giggled, \"I think I like showering with a man!\" I laughed. \"My turn,\" she said then she took the sponge, pulled me up, and began to wash me. She seemed to enjoy running first the sponge then her hands over my body. Heck, I'm no Adonis but it appeared that she was 'exploring' the male. She seemed particularly to like exploring my cock and balls and it wasn't long before I was pretty hard again. She held my cock in her hand, turned, and sat on the bench pulling me with her. Bending her head, she flicked her tongue across the tip of my cock then sucked the head inside her mouth.\n\n\"Oh fuck Dana!\" I managed as I felt her warm mouth engulf my cock head and her lips caress the sensitive area just below. She looked up at me, mouth smiling around my cock, as she sucked gently on the head. It was clear she was fairly experienced in this department! Now she began to stroke my cock with one hand whilst the other cradled my balls.\n\n\"Shit Dana love, I can't take much of this!\" She managed to pout around my cock! \"Oh you darlin',\" I laughed, \"if I were 20 you could but I'm not! I want to fuck you again!\" Now she smiled up at me and sucked more of my cock inside. I could feel her tongue on the sensitive tip - I had to pull away!\n\n\"I want to taste that later!\" she said with a sultry smile. It seemed the whole situation was bringing out the 'beast' in her!\n\nI took a deep breath as I lifted her to her feet and kissed her on the mouth. \"I am yours to command,\" I laughed. Rinsing off finally, we dried each other with the warm fluffy towels and slipped on the white towelling dressing gowns and slippers the hotel provided. She even looked wonderful in that!\n\n\"Would you like a drink?\" I asked, \"I'm pretty thirsty.\"\n\n\"Mmmm, that would be nice,\" then with a sultry smile, \"are we finished?\"\n\nI pulled her to me and kissed her mouth, \"Oh no Dana darling, certainly not. I haven't eaten yet!\" She looked puzzled as I grinned at her then blushed as she realised what I meant.\n\n\"Oh! Oh I see!\"\n\nI kissed her again as we entered the kitchen area. I made the drinks and we sat quietly drinking.\n\n\"It was wonderful,\" she finally whispered softly, eyes meeting mine over the rim of her glass.\n\nTime to push my luck. \"Dana love,\" I said softly kissing her cheek, \"do you have to be anywhere tomorrow?\" I glanced at the clock, \"today I mean,\" I laughed. It was 2.30!\n\n\"No,\" she said smiling, \"why?\"\n\n\"What about the rest of the weekend?\"\n\n\"No. I was supposed to be staying with Megan.\"\n\n\"Stay with me?\" I asked taking a deep breath and fixing her with my eyes.\n\n\"I don't have any clothes,\" she said with a smile, \"but if I did, I would!\" She kissed my lips, \"I'm sure there is a LOT more to do!\"\n\n\"Clothes are definitely not a problem,\" I laughed, \"I like you naked!\" She laughed back. \"But it really isn't a problem. We can go out in the morning and buy you some.\"\n\n\"Buy me some?\"\n\n\"Mmmm. It will be fun!\"\n\n\"But . . .\"\n\nI laughed, \"'But me no buts'\" I said. \"It will be fun, I can assure you. We can buy some nice sexy stuff!\"\n\n\"For you to take off?\" she asked coquettishly.\n\n\"Now that would be fun as well!\"\n\n\"OK,\" she said with a smile, \"I'll stay.\" She made the decision quickly.\n\nI leaned over and kissed her cheek. \"Good.\"\n\n~\n\n3. Making Love to Dana for the Second Time:\n\nIn which I explore Dana with my tongue, we make love again, and anal sex is discussed and offered:\n\n~\n\nShe held me. \"Make love to me again,\" she asked softly, \"I want you again!\" I slipped off the couch and knelt at her feet. My hands caressed her ankles then calves and finally, slipping the robe aside, her knees.\n\nMoving into her I whispered, \"Open Dana love, open for me!\" She looked shocked but my smile brought one to her face as she completely uncovered herself and eased her legs apart. I moved closer.\n\n\"Slide forward,\" I said helping her until her bottom rested on the edge of the couch. Then I lifted her feet to the couch. She was completely open to me now. Her gorgeous pussy atop her tight anus. She looked puzzled but that look disappeared as my mouth found her cunt and covered her clit.\n\n\"Ohmygod!\" she exclaimed as I sucked, \"oh god, don't stop!\" I wasn't about to. She tasted wonderful, fresh and fruity. I sucked some more, tongue flicking her clit. Dana continued to moan, her hands finding my head. I licked, sucked and bit gently then moved my mouth to her sex, sucking her cunt lips and biting gently, my tongue pushing deep into her vagina. Dana writhed as my tongue and mouth pleasured her. \"Oh fuck, yesssssss! Harder. Please!\" she cried over and over as I continued to eat her delectable pussy. I enjoyed her for what seemed like an age and then I pushed deeper and tasted her liquid flow as she shuddered.\n\nLooking up as her orgasm receded I could see her mouth slightly open, eyes closed. Bending back I continued my 'assault' on her pussy sucking her nether lips before I my tongue down across her perineum to the tight little star of her anus.\n\n\"Oh! Oh! Oh!\" she cried as I began to lick her tiny rosebud. I lapped back and forth across it, pushing a little harder each time, sometimes returning to suck her clit. Finally I concentrated on the backdoor to pleasure itself. I rimmed her arsehole, coating it with saliva, then pushed the tip of my tongue against the tight muscle. Dana groaned and muttered a subdued, \"Yes, yes, yes! Do it!\" I did! I licked round and round the tiny muscle, my tongue finally pushing past the natural resistance of her sphincter and slipping inside. She was so tight! Not surprising for an anal virgin I suppose. I enjoyed the sensation of my tongue tip gripped in the vice of her sphincter, my nose pressed to her cunt. I could taste her, soap, freshness: the essence of her. I slipped out of her backdoor and continued coating her anus with saliva to ease entry. A little harder, a little deeper each time, until I was tongue-fucking her arse. It was fantastic - especially as I heard her loud cry of, \"Oh fuck, yes!\", felt her anus contract seeming to try to trap my tongue, and had my face covered in her liquid for the second time.\n\nQuickly standing, I slipped off my robe and gripped my cock: a cock rock hard from my ministrations to Dana's cunt and arsehole. She looked at me, then at my cock, and smiled. \"Fuck me!\" she mouthed. Hands around her ankles, I lifted her legs up and apart, pulling her almost on to her shoulders. Leaning forward my cock found her wet vagina and slipped inside. I was hot for her, the lingering taste and smell of her acting like an animal aphrodisiac. With little finesse I drove inside her filling her depths with my cock. I felt my balls slapping her arse as my own passion rose.\n\nDana was moaning a constant, \"Yes, yes, yes! Fuck me!\" as I drove back and forth into her. Such passion couldn't last for too long and, as I felt yet another shudder across Dana's body, I began to cum inside her. Only two or three pulses but intense. I drove deep, held, and coated her insides with my warm spunk. She must have felt it for she mumbled, \"Oh yes! Cum inside me!\"\n\nAs we both came down from our respective highs I eased Dana back down on the sofa and, sitting beside her, took her into my arms. She turned her head and we kissed.\n\n\"Oh Mike,\" she whispered, \"that was wonderful. I never felt like that.\"\n\n\"I'm glad,\" I said with a smile, \"glad I could please you.\"\n\n\"I want to please you,\" she said softly.\n\n\"You do, exquisitely.\"\n\n\"No! I want to do it!\"\n\n\"Do it?\" I repeated quizzically.\n\n\"There,\" she said, \"in my arse!\" I must have looked surprised. \"When you licked . . . Your tongue . . . It was heaven. You made me cum there! I want to . . . See if that,\" smiling, she nodded towards my slowly awakening cock, \"feels as good. But you need to be gentle\" she added quickly.\n\nI smiled, \"Well Dana you angel, I would love to do that but,\" she looked concerned, \"but I am a bit 'worn out' just now and, whilst the spirit is exceedingly willing, the flesh is, unfortunately, weak.\" Dana looked disappointed.\n\n\"You are staying tomorrow night,\" I said with a smile, \"so plenty of time for recovery!\"\n\n\"Yes,\" she said brightly, \"I want to do it.\" My cock, spent after two glorious cums, stiffened slightly. She noticed. \"See,\" she giggled, \"he is interested!\" and she reached down and began to masturbate my soft cock.\n\n\"Dana, Dana love! Please!\" There was no way I could manage another round and my cock head was so, so tender after my last orgasm. \"Tomorrow,\" I laughed, \"tomorrow I will do anything you want!\"\n\n\"Mmm, I like the idea of that. Promise?\"\n\n\"I promise,\" I laughed, \"wild horses couldn't stop me!\" With that she let go of my cock and kissed me.\n\n\"I will hold you to that!\" she whispered as we hugged each other.\n\n\"Bed I think,\" I whispered then added laughing, \"I need my rest if I am going to keep up with a young filly like you!\" Dana laughed in return and poked out her tongue.\n\n\"OK, if you have had enough, let's go to bed,\" and she finished with a big yawn.\n\nI laughed, \"I reckon YOU have had enough young woman!\" I stood and pulled her gently to her feet then led her into the bedroom. Dana quickly visited the bathroom and was back in a couple of minutes. The enormous bed looked exceedingly inviting and she quickly joined me and we snuggled under the covers.\n\nIts not often now that I go straight to sleep but holding this beautiful young woman in may arms seemed to settle me completely and I was off to sleep in a trice.\n\n~\n\n4. The Morning After:\n\nIn which I explore Dana's arse and we make love again:\n\n~\n\nI hadn't set the alarm or anything so light shining in the window woke me sometime the next morning. As is normal, we had drifted apart during the night and Dana was still asleep. I shifted onto one elbow and looked down at her. God she was lovely! Her blonde hair framed her face. Her lips were slightly open as she lay almost on her back. If I am not sleeping alone I almost always awake with a pretty solid erection despite any previous exercise and this morning was the same. Its part desire and part 'piss-proud'. Doesn't matter really, it's still fun!\n\nI shifted the sheet just a bit to reveal her pert breasts and, bending my head, ran my tongue over her nipple. This elicited a soft groan from Dana and a movement onto her back. I continued to lick first one nipple then the other as they hardened. Dana squirmed her bottom into the bed, still apparently asleep. It was very warm in the room so she didn't seem to notice as I pulled the covers right back revealing her nakedness. Leaving her lovely breasts, my tongue travelled across her stomach to the soft hair of her mount then to her pussy. A pussy slightly wet already! My tongue delved into her wetness and must have found her clit immediately for she groaned, shuddered, and muttered, \"Oh yes!!!\"\n\nI raised my head and smiled down at her. She was awake. \"Don't stop,\" she said with a smile, \"it's nice!\" I continued, moving down the bed and between her legs. I licked up and down her sex, delving into her vagina before concentrating on her clit. Rolling my tongue around I used my lips to bite the swollen pleasure centre. More moans from Dana as I continued to pleasure her. After a while, she shuddered and liquid flowed. I used my tongue on the end of her clit right through her orgasm then moved down to lick and suck her pussy lips. I could taste her freshness, taste the night, on her. Then to her anus. I lifted, parted her legs then probed her tight muscle with my tongue, pushing hard to see what happened.\n\n\"Oh yes, yes! Do that! I want you to. Please!\" I pushed harder at the muscle and she relaxed, letting my tongue inside. I could feel her gripping tightly and had a minor crisis as I imagined her sphincter griping my cock. I used my thumb to tease her clit again as I tongue fucked her tight arsehole. Dana was moaning a soft litany of, \"Yes, yes, yes,\" over and over again. I was enjoying this invasion of her most private place and thought it was time to probe some more so I replaced my tongue with my middle finger after coating it with saliva and pussy juice.\n\n\"Oh god! What . . . .?\"\n\n\"My finger,\" I whispered smiling. \"Tell me to stop if it is too much.\" I pushed my finger tip inside her. It slipped into her saliva lubricated arsehole with surprising ease.\n\n\"OH MY GOD!\"\n\n\"OK?\"\n\n\"It feels so big,\" Dana said breathlessly. \"And that's only your finger?\"\n\nI laughed softly as I pushed more inside. \"More?\"\n\n\"I don't know!\"\n\nI stopped and pulled my finger back. \"OK, stop now.\"\n\n\"No, no! I want to try it. Well,\" she continued with a shy laugh, \"your finger anyway!\"\n\n\"Relax then Dana love,\" I said as I pushed against the muscle again and my finger slipped back inside to the first joint. \"OK?\" I asked as I moved it back and forth gently fucking her tight arsehole.\n\n\"YES!\" Dana responded breath-lessly, \"Yes! I like that. Ooooohhhhh!\" I had pushed almost all of my middle finger into her arse and now began to fuck her slowly with the whole length. \"Oh dear! Oh Fuck! Yes!\" Raising my head I looked into her eyes. She smiled, \"You are a bad man! Ohhhhhhh!\" She was taking my finger deep in her arse and seemed to be enjoying it. I bent my head and, continuing to finger fuck her, nipped her clit with my lips.\n\n\"YES!\" Dana cried as another orgasm washed over her body. Her anus gripped my finger tightly as she came and her liquid flowed. Time for me now. I withdrew my finger from her arse and knelt, gripped my cock and slipped the head into her sopping pussy. My eyes locked on hers. She smiled and nodded. I thrust forward and filled her with one drive causing a loud gasp of pleasure to escape from her lips.",
        "Piss-proud means lasting just a bit longer so I began to pound her pussy long and hard. I was hot with the idea of her tight arse around my cock so I must admit I did go to town. Dana didn't seem to mind, her legs coming up and gripping me around the waist. I bent my head and kissed her, our tongues dancing together as my cock drove in and out of her willing body. I was varying my pace now, bringing her on and controlling my own orgasm. Time to experiment! How long? 10, 15, 20 minutes I suppose.\n\n\"Turn over,\" I said wanting a change then pulling back and kneeling, \"and kneel.\" Dana looked apprehensive. I smiled, \"No, not that -- yet anyway -- just some variety,\" I said raising my eyebrows.\n\nDana smiled, turned over and stuck her gorgeous arse in the air. I quite like doggy for obvious reasons and I just stroked my cock gently as I gazed at the wonderful sight before me. Dana knew of course and looked back over her shoulder with a smile.\n\n\"Come on then Mike, do your worst! OH NO!\" she exclaimed as she realised what she had just said -- and intimated.\n\n\"I won't do anything like that Dana love, not 'til later anyway,\" and I moved slightly planting my cockhead at her pussy.\n\n\"MMMMMMM, I like that,\" she whispered as I drove home. I fucked for a little while then she turned her head again. \"Touch me!\" she said with a smile, \"touch me there!\" 'Mmm' I thought, she likes it! I wetted my thumb and collected some juice from the rear of her wet pussy and stroked it over her anus. This brought a soft sigh and a shudder. I pushed harder, not entering her anus, but just teasing. I was close now, the idea of filling her arse with my cock causing increased tension. I fucked her harder and harder: one hand on her hip pulling her on, the other with thumb stroking her sphincter.\n\nIt didn't take long! \"Oh yes Mike! Please! Please!\" Dana's body shuddered and her pussy gripped my cock. I felt the usual tension in my lower back, my balls tightened, and my load -- pretty small unfortunately -- left my body and jetted deep into Dana. Just a couple of pulses as her body reacted to my swelling and spurting cock.\n\nI was spent pretty quickly and rocked back on my heels, my softening cock slipping from the heaven of her vagina. Dana fell forward on the bed sighing. As she rolled onto her back I lay on one elbow beside her. I smiled, \"Well?\"\n\n\"Mmm, that was nice,\" she murmured and pulled my lips to hers. We kissed then lay holding each other. After a while she lifted herself up and went to the bathroom. I watched her gorgeous naked figure stroll across the room. Her hips were so delightful and her bottom a dream. She stopped at the door and looked back over her shoulder. \"Well? Like what you see?\" she smiled coquettishly, standing on one leg and leaning against the door frame.\n\n\"Oh yes!\" I laughed, \"didn't I just show that?\"\n\nShe laughed back, \"Come on you -- shower. I want you to wash me!\"\n\n\"Always a pleasure,\" I said then, \"I'll order breakfast.\"\n\n\"Mmm, I'm starving!\"\n\n~\n\n5. A Short Shopping Interlude:\n\nIn which we shop for Dana's outfits:\n\n~\n\nWith that I followed her into the shower and we spent the next 20 minutes soaping and washing each other. Dana still seemed fascinated by the male body and spent an age playing with my spent cock and balls. She also seemed to like the shape of my arse! Now I am not in magnificent shape and I thought how much fun she might have with a really healthy young body -- didn't mention it though! Breakfast was delivered to the room shortly after and we sat on the balcony in the late morning sunshine and ate. Then it was time to go out and get some clothes for Dana. She was embarrassed at first but, I must admit, I enjoyed seeing her choose things. We started in her evening dress which wasn't really appropriate for shopping but quickly purchased some jeans, a top, and some tennis shoes. She used one of the shop changing rooms to put on the more suitable 'street' clothes. She looked delectable in the tight jeans! I knew I was going to enjoy watching her take them off!\n\nAs we hadn't got out until just before lunch most of the afternoon was spent shopping. I brought her some everyday clothes, though she objected to me spending too much on her. I knew we would be going to 'posh' restaurants -- I wanted to show her off after all -- so I insisted she have evening clothes. I also brought her jewellery and paid for underwear which she chose -- not letting me see it! She had, however, questioned me about what I liked so I anticipated that I would be suitably impressed.\n\nSo, you say, why buy her all these things? Well, to be honest, I enjoyed shopping with her. I enjoyed the looks we got from the staff in the various shops, looks that tried to figure out what was going on. We 'flirted' with each other constantly, Dana seeming to enjoy being the centre of attention as clothes were selected and tried on. She particularly seemed to enjoy modelling them for me -- I know I enjoyed it! The only cloud on the horizon occurred as we sat having a coffee some way through the afternoon.\n\nDana seemed rather pensive for a moment. \"What is it Dana love?\"\n\nShe fixed me with her eyes, \"I don't know,\" she said, \"is it right you should buy me all these things? I feel . . . I don't know. I'm sorry!\"\n\nI guessed what was going through her mind. Softly I said, \"You worry that I am 'buying' you?\" She seemed close to tears suddenly. My hand covered hers, \"I am not 'buying' you or your favours.\"\n\n\"I am sorry but . . . it just seemed like it: especially the necklace and earrings.\"\n\n\"Hey,\" I smiled, \"did I buy you anything yesterday other than dinner?\"\n\nShe looked into my eyes. \"No.\"\n\n\"And look what happened,\" I smiled. \"I didn't 'buy' you yesterday and I am not today. These things are because you stayed with me and you don't have any clothes - functional only. I bought you the jewellery because you are beautiful and beautiful women should have beautiful things. Nothing that has happened today is conditional on you staying tonight.\"\n\n\"You mean that?\"\n\n\"Of course I do. If you stay, if you go -- it's your decision.\"\n\nShe smiled, \"I am being silly but I've never been treated like this.\"\n\nI smiled back, \"Well, enjoy it Dana love, we still have a few things to get!\"\n\nShe laughed, \"Yes, some more underwear!\" We finished the coffee and set off again for the shops. Although we had returned to the hotel to leave some things there we still had a considerable bundle of packages when we finally got back in the late afternoon.\n\n~\n\n5. Back from Shopping:\n\nIn which Dana sucks, I lick, and we make love again:\n\n~\n\nWe got into the room and dropped everything in the lounge. Dana turned to me, \"Oh Mike! I don't know what to say: all these lovely things. Thank you!\" and she came into my arms. We kissed and my hand ran over the curves of her hips and arse squeezing gently. \"Mmm,\" she murmured into my mouth, \"Make love to me!\"\n\nI smiled down at her. \"My pleasure,\" I replied as I kissed her neck then began to undo her blouse. Buttons released, it disappeared to a heap on the floor as I kissed down her shoulder and to her gorgeous breasts. \"Turn round,\" I whispered then. I wanted to feel her arse pressing into me. I left her bra on but enjoyed kissing her naked shoulders and back as my hands cupped her breasts, the fingers gripping both nipples through the brassiere. I could also feel her gorgeous arse pressed again my increasingly growing erection. She must have felt it too for she began to grind her body back into me.\n\nI continued to kiss her neck and shoulders as I gently squeezed her tits and nipples. Dana rested her head back on my shoulder as her arse gyrated on my cock. \"You are something else Dana love,\" I whispered, \"your arse is wonderful!\"\n\n\"Mmm,\" she murmured, \"I know how much you like it!\" I moved my hands down and began to undo her jeans. Didn't take long to see them slipping around her ankles. She stepped out of them and away from me then turned. She took my breath away as she stood there dressed in plain panties. Panties that already showed a tiny wet patch.\n\n\"Don't move,\" she said quietly then knelt at my feet. Her hands reached up and stroked my erect cock through my slacks. She seemed to enjoy the feel of its hardness through the material. Then she unzipped the fly and, rummaging into my underpants, managed with some difficulty I might add, to get my cock out. She smiled up, \"I've fantasized about doing this,\" she laughed. \"You've got all your clothes on and I'm nearly undressed.\"\n\nNow she stroked my cock back and forth gripping it hard as she masturbated me. Her hands delved inside again and, with a bit of wriggling on my part, got my balls out as well. Her eyes looked up into mine and she smiled sexily before bending her head and covering my cock head with her mouth. Isn't this one of the most wonderful experiences in an out of the bedroom? This gorgeous blonde 22 year old anal virgin is, almost naked, kneeling at my feet sucking my cock! I knew I would have to be very, very careful here because it would be easy to fill her mouth with cum -- and I wanted to save that for her arse. Her mouth was hot and wet, her lips soft as they slid back and forth along my cock. It seemed she had a dozen tongues as she washed the head, probing the tiny hole every now and then. One hand gently caressed my balls; the other masturbated the base of my cock. Dana obviously didn't 'deep throat', not that it bothered me for she was doing a pretty good job anyway!\n\nOccasionally she would look up into my eyes, usually with my cock deep in her mouth. Another great feeling and almost too much.\n\n\"Dana, Dana love,\" I had to say finally, \"you'll have to stop! I can't take much more of this!\" Her mouth left my cock but her hands remained.\n\n\"Don't you like it?\" she pouted causing another crisis.\n\n\"Dana, I love it! You could do that for Australia!\" I laughed. She smiled back. \"But I will cum -- and I want to save that for . . . . .\"\n\n\"My arse?\" she said quietly.\n\n\"Yes,\" I replied, \"for your arse -- if you want it.\"\n\nShe stood then lay back on the bed. \"I want you to make love to me,\" she said as she looked up at me. First job -- get rid of my clothing! Dana had a soft smile on her face as she watched me undress. This was quickly done and I knelt at the end of the bed looking down at her.\n\n\"Your turn,\" I said with a smile, 'bra first. She rolled over face down -- on purpose I reckon, unhooked her bra then rolled back. \"Mmm,\" I murmured, \"you have lovely tits!\" And she did! Not too big and perfectly formed. Nice, large brown, nipples atop small hillocks. She smiled back up at me. I could see the wet patch between her legs. \"Panties now!\" She rolled face down again and stuck her bottom up in the air. I am pretty sure that she knew what she was doing to me as she reached back and wiggled out of her panties then turned back.\n\n\"You are a minx!\" I said with a smile then, reaching for a couple of pillows, lifted her hips and placed them underneath. Dana still had that quiet, almost possessive, smile on her lips. I am sure she knew I was going to eat her so she was quite happy to lay back and enjoy.\n\nI opened her legs, held them up and apart, and crawled between. \"Hold your legs back Dana love, let me get at your gorgeous pussy!\" Still smiling she did as I asked and opened herself completely to me. Her pussy was wet, from her fellatio I assumed, and her clit was swollen so I started there! I sucked and bit with first my lips then my teeth -- tenderly of course -- and, after a few minutes of this attention, she came! Liquid gushed. I moved down to her cunt lips, sucking those and tasting her juice before probing deep with my tongue. I sucked and licked pussy and clit until she came again, body shuddering in orgasm. I enjoyed hearing her moans, her words of encouragement and the feeling of her hands holding my head in place -- not that she needed to!\n\nAfter her second orgasm I lifted my head and looked down at her. She was covered in a soft glow of perspiration that was so sexy it wasn't true. I wanted to fuck her then but first I wanted to tease her arsehole a little to see if she was still interested in taking my cock there.\n\nBack down again, I lifted her legs a little more so her anus was completely available to mouth and fingers then ran my tongue from the base of her spine to the back of her wet pussy. Dana groaned and a soft, \"YESssss,\" escaped her lips. After half a dozen passes, each bringing another soft, \"Yesss,\" from her, I stopped and concentrated on her anus. A beautiful star with just a shadow of the sphincter muscle around it. She was tight there -- not surprising for an anal virgin -- although she seemed to relax as I rimmed her arsehole. Covering the whole area with saliva, I finally probed directly at the centre with my tongue, using a fucking motion to try to tempt her to relax and let it in. After a little coaxing she did and, heaven, the tip of my tongue slipped past the muscle.\n\n\"OOOOHHHHH Fuck!' she cried as her body shuddered. She obviously liked this! I tongue fucked her arsehole for a couple of minutes, enjoying every moment, then moved and sucked my middle finger into my mouth and coated it with saliva. Time to see how she really felt about her arse being entered!\n\n\"Gonna use my finger again Dana?\" I phrased this as a statement and a question to give her the option to refuse.\n\n\"OH god!\" was her only reply so I took that for a yes! I used my finger tip to stroke around the tight rosebud for a few moment then pushed it gently at the centre of her anus. I sensed a tension in her body, not unusual in this situation. She was going to have something pushed in her arse for only the second time -- well I thought so at that time.\n\n\"Relax Dana love. Just relax if you want to feel it.\" I felt her take a deep breath then her whole body lost its tenseness. Her sphincter relaxed and my middle finger slid into her arsehole to the first joint.\n\n\"OH MY GOD! That feels soooooo big!\"\n\n\"It's only my finger,\" I laughed then added, more seriously, \"are you OK?\"\n\n\"Yes! It feels strange. It doesn't hurt, just feels so big!\" There was almost an unanswered question here -- how big would my cock feel? I didn't answer, just gently moved my finger in and out. I had no intention of finger fucking her arse properly, this was just to see if she could deal with a gentle insertion again.\n\n\"Oooooohhhhhhhhhh! Oh My God!\" Dana was breathing deeply but was very still until this point when she pushed back and took almost all my finger in her arsehole. \"OH WOW! That's . . . interesting! OOoooooh! Do that!\" I moved my finger back and forth. \"Oh GOD! Gently . . . Yessssssssss!\"\n\nHer body spasmed in orgasm. Her rectum clenched my finger and her sphincter gripped like a vice. Slowly I withdrew my finger, moved into her, and placed my cockhead at her vagina. Pushing slowly inside, I bent forward and whispered, \"You like my finger in your arse Dana?\" My cock was halfway inside before she realised I think!\n\n\"OH FUCK yes. Oh fuck me -- please!\" This was soooooo difficult! I filled her quickly then, hands gripping her legs for leverage as I began to fuck her hard and deep. Dana seemed to have an almost continual orgasm as I thrust into her. Moans, soft 'Yes's', and shouted 'oh god's' filled the room as my cock rammed into her soft heaven of a cunt. It seemed an almost animal passion that crept over her. Her eyes were wide, her lips parted, and a soft sheen of perspiration on cheek and lip. She looked good enough to eat. Me? Well I had to think of anything other than what was happening here. To be honest, it was all I could do not to pull out, turn her roughly over, and bugger her. I didn't however; perish the thought for even thinking about it almost made me cum.\n\nAfter a number of shudders, her cunt gripping my cock throughout, Dana calmed. I pulled back and lay down beside her. She rolled towards me and I took her into my arms. We just lay there quietly, next to each other in that wonderful after sex glow -- though I had held off cumming - Dana resting her head on my shoulder. I think we may have dozed for a few minutes.\n\n~\n\n6. A Discussion on Anal Sex:\n\nIn which Dana makes the final decision:\n\n~\n\nI became conscious again of this beautiful young woman in my arms and I turned my head to kiss her cheek. Awake now, and apparently recovered, she smiled up at me. It was a wickedly mischievous smile but with a slight hint of question in her eyes. I understood pretty quickly for she wriggled from my arms and rolled onto her front. Her eyes watched for my reaction.\n\nIn truth, I was speechless. I have waxed lyrical about the beauty of Dana's bottom and now she lay before me again. Her legs were slightly parted and I could see the bulge of her delectable pussy - lips still swollen from our earlier tryst. Above those sensuous lips was the cleft of her bottom, her anus - that tiny star - clearly visible.\n\nI took a deep breath to try to control my heart rate - and my desire. I did not - absolutely not - want to think too long about Dana in this position. I could also feel the effect elsewhere in my body for my cock, close to orgasm when I fucked her pussy, was now as hard as an iron bar - the Cialis was working!\n\nI moved my eyes from the wonderful sight of her bottom and looked into hers. A soft smile formed on her mouth. \"Now?\" she asked quietly.\n\nDana must have guessed the effect that lying face down like this would have on me because she knew that my particular 'thing' was the female bottom. Although she could not possibly know that this position was my favourite for anal sex! Not that I would take her that way for the first time. Later perhaps, if she really enjoyed the experience.\n\nI smiled back at her catching her mood. \"You are a cruel woman Dana!\" I said.\n\nShe suddenly became serious. \"You want me?\" I raised my eyebrows not wanting to consider the possibility that I might have read too much into the question. She saw my hesitation. \"My bottom, my bum? You want me there?\"\n\n\"Dana! Dana darling,\" I said slowly then took a deep breath. I would be useless to lie for I had told Dana earlier how much I would love to have her in that manner. She knew. \"Yes Dana, very much but . . . only if you want to. I would never do it without my partners consent.\"\n\n\"You know I've never done it\" she said quietly. \"I'm puzzled though, \"she added with a soft smile, \"why a lot of my friends, and some of the books we read, say negative things about it? Like it's un-natural; it hurts; it's not enjoyable?\"\n\nI wasn't sure about where Dana was going with this. Was she teasing? It seemed unlike her. I decided to play it straight. \"I can't give you definite answers Dana. Un-natural? Perhaps it is from one perspective but, if two people agree? I think not - but that is just an opinion.\" I smiled, \"Men have been using that alternate route for an awfully long time.\"\n\nDana smiled and nodded. \"As to the facts that it hurts and they don't enjoy it? Well I honestly reckon that's because it wasn't 'done' properly the first time.\" Dana nodded as if in agreement. I stroked her hair. \"This is killing me,\" I said laughing.\n\n\"I know,\" she laughed back, \"explain!\"\n\n\"Minx! The man has to be considerate. You can't just 'stick it in' with pussy juice and spit!. Lube is essential, very essential. As is tenderness, care, and patience.\" Now Dana was looking at me wide-eyed. She was so lovely! \"And,\" I continued smiling, \"the lady has to be relaxed as well. Say a couple of orgasms - and she must really want to try it because it can be uncomfortable, even painful, the first few times. Not necessarily but it can. That's why plenty of lube is required!\"\n\n\"But women don't . . you know . . have . . . what is it you men have? Oh! A prostate.\"\n\n\"No, I know!\" I laughed. \"I couldn't explain to you why they enjoy it - you would have to ask someone who does,\" I said with a smile then, \"Dana . . . are you playing with me?\"",
        "She smiled up at me and wriggled her bottom. My cock grew an inch - a fact that wasn't lost on Dana as she glanced down! \"No, not really,\" she said softly, \"I want . . . I want you to do it!\" My heart almost stopped. Dana, this gorgeous young woman, was offering herself. \"I want to . . . like you said,\" she added quietly. \"I want to know. To know what it feels like and I know you will be . . . I don't know . . . gentle. I'll get to know properly.\"\n\nI bent and kissed her lips. To be given the opportunity to introduce a beautiful young anal virgin to the pleasures of that route! \"Sure?\" I asked almost not wanting to believe my ears.\n\n\"Yes,\" she smiled, \"very sure! 22 and never been fucked up the bum!\" She laughed, \"Time to change that!\" Her mood had suddenly lightened as if the decision had removed any doubt. \"Come here and kiss me!\"\n\nMy cock was hard now as she rolled back over and pulled me down. We kissed and her hands began to stroke my erection, growing stronger by the moment as my body began to realize exactly what Dana was implying. \"Dana,\" I said quietly, \"are you . . \"\n\n\"Sure?\" she interrupted. \"Yes. Sure, very sure. I've seen it in porn movies.\" I raised my eyebrows. She smiled, \"We girls watch them sometimes you know and, well, felt fingers in there. Now's the time,\" she looked at me and smiled brightly, \"especially when I have a man who knows what he is doing!\" Now she laughed, \"And you get to prove my girlfriends and the books wrong!\"\n\n\"I do?\"\n\n\"Yes! If I enjoy it and ask you to do it again!\"\n\nI laughed, \"Dana! You are priceless!\"\n\n\"I guess so,\" she laughed back. \"Now,\" she continued seriously after a quick kiss, \"what do I have to do?\"\n\n\"Well,\" I answered quietly, \"if you are not 'prepared' it can be messy and uncomfortable.\" She raised her eyebrows then blushed and nodded in agreement. \"You have to be empty,\" I continued.\n\n\"You mean . . . the bathroom?\"\n\nI nodded smiling, \"Yes, the emptier the better! The first few times it's good if you can be completely empty though.\"\n\n\"I don't understand?\"\n\n\"You use an enema to empty your bowels completely.\" I smiled, \"Sorry to be a bit 'crude' but 'prep' is all for anal sex Dana. The more prep early on the better. If you like it then less prep is OK when you are used to having your bottom filled.\" She blushed but nodded.\n\n\"How do I do that?\"\n\nI smiled. \"I was a bit presumptuous after what you said last night,\" I answered. \"While you were in the changing room for that long while I popped next door to the pharmacy and got an enema kit.\"\n\nShe gave me an 'old-fashioned' look then smiled. \"Good,\" she said, \"so I get to do that?\"\n\nI laughed, \"Yes, if you would like. Or I could do it for you?\"\n\nShe blushed bright red. \"Are there instructions?\"\n\n\"On the box.\"\n\n\"I'll do it then.\" She reached down to my cock and gently massaged it. \"Looks like you want it now?\"\n\nI took a deep breath. \"Yes,\" I said, \"Dana love, your bottom is gorgeous and, well to put it crudely, fucking your arse would be wonderful but only if you are ready and want it.\"\n\n\"Well,\" she said with a smile, \"I want it -- now I have to get ready. Keep that,\" she nodded towards my erection, \"ready for me!\" She left and headed for the bathroom, posing at the door and saying, over her shoulder, \"Is it in here?\" I nodded and she carried on into the bathroom with a sway of hip. The door closed and, a couple of minutes later, I could hear the running water.\n\nI laid back on the bed enjoying the idea of what was happening in the bathroom and what was going to happen shortly. It's not every day that a guy my age gets to do this so I intended to savour every moment. Even more importantly, I wanted Dana to leave having enjoyed her first experience of anal sex. I hoped that I would take her there more than once over the next two nights for, as I have said over and over, she has a delectable arse that seems to be made to fuck!\n\nShe came out again after about 15 minutes and stood, naked, in the doorway. \"That was . . . interesting,\" she said with a big smile. Then, noticing that my cock was a little deflated, pouted and continued, 'You don't want my arse?\"\n\nI smiled, \"Oh yes Dana, love, very much indeed. Just needs a little stimulation!'\n\n\"Oh, I can do that,\" she smiled then, crossing to the bed, knelt between my legs. Both hands stroked cock and balls before her mouth closed on my cock. Her sucking and tongue washing soon brought me back to full strength and she raised her head and smiled down at me. \"You said a couple of orgasms before . . .?\"\n\nI laughed, \"You've already had those,\" I responded raising my eyebrows.\n\n\"Well . . . I just thought that, before that big thing there goes into my arse.\" Wow, she had certainly learned quickly how to light my fire! \"I think I would like a couple more!\"\n\nI laughed again, \"My pleasure,\" I said, 'climb on board!\" She giggled and she did. The soft velvet of her cunt encompassed my erection as she slid her body down onto me. Leaning forward she began to buck back and forth and up and down. \"Your cock feels so good in me,\" she whispered, \"I wonder what it will feel like in my arse?\" Well, or course, this was dangerous territory for my mind to wander into so I just smiled and thrust up into her trying not to think of her tight arse and rectum around my cock. Dana rocked around for a while, moaning and breathing deeply, then leaned right back and pumped hard. I felt her cunt grip my cock and had another crisis as her orgasm peaked. Helping her on her way, I thrust up into her again and again.\n\nFinally she leaned forward and kissed me. \"Wow that was good! You want my arse now,\" she asked with a wicked smile as she wiggled her bottom on my groin.\n\nI smiled back, \"In a minute,\" I responded, \"turn round and face away.\" Dana raised her eyebrows. \"Different position,\" I explained, \"and I get a really good look at your arse!\"\n\n\"OH.\" She mouthed and then turned. She managed without actually getting off of my cock -- that was good in itself! \"Oh yes! I like this,\" she said looking back at me and beginning to bounce up and down on my cock. \"It feel sooooo different!\" I left her to it for a while then eased my finger into her cunt with my cock. \"Whaaaat?\"\n\n\"Just getting some lubrication,\" I said then dragged my finger back along her anal cleft. Like this her arse was spread wide, her anus completely available. I wasn't about to waste the moment. I circled the muscle getting more of her juice on and off until she was moaning loudly and pushing both back and down on my cock. This is an interesting feeling, cock bent forward into her [fantastic for anal too -- as I hoped I might experience later]. Now my fingertip was at her anus, right at the centre of her star and, each time she pushed back, it entered a tiny fraction until, finally, she pushed back harder and took half inside. She came immediately. Her cunt gripped my cock and her anus gripped my finger. Didn't stop me from fucking her arsehole gently right through her, seemingly, prolonged orgasm.\n\nShe finally came down from her high and laid, face down, beside me. There was a soft smile on her face as she said quietly, 'That was fantastic. I'm ready. I want to feel what it's like!\" I knelt up and looked down at this beautiful young woman who was offering her most private place to me. You can do one of two things in this position. You can bugger her. Take her for your pleasure and enjoy the experience immensely. Odds are you won't ever get to do it to her again! Or you can do as I was going to do, take her gently, carefully, and slowly so that she had every opportunity to enjoy it. OK -- selfish. If she enjoyed it she would want it again -- that was the plan! I had this night, all day Sunday, and tomorrow night with her. I wanted to take advantage of that -- what red-bloodied man wouldn't?\n\n~\n\n7. Her First Anal Experience:\n\nIn which Dana gives up her anal cherry:\n\n~\n\nWhile Dana was getting ready in the bathroom I had found my supply of lubrication [it was a long time since I had been a boy scout but I never forgot the motto!]. I had a bottle of Astroglide -- the best as far as I am concerned, and some small, one shot, capsules with a long, thin, nozzle designed to be inserted and squeezed. Together these would ensure she would have the best chance to enjoy my cock in her arse.\n\n\"Open your legs,\" I whispered in her ear. She did and I knelt between. Isn't this one of the most wonderful sights that mother nature has provided us guys [and some gals as well!]. Dana's hips were broad and they spread above the glorious rise of her bottom cheeks, full and round. Between, her cunt was dripping juice from her orgasms and above that the tiny, oh so tiny, star of her anus beckoned.\n\nI stroked, caressed, and massaged the cheeks of her arse, running my thumbs along the sides of the valley containing her anus. Dana was moaning in pleasure and encouraging me with a continuous, \"Yes!' Finally I bent my head to her bottom and ran my tongue from the back of her cunt, up and across her anus. Over and over again, reveling in the taste and the effect on her. Then stopping and rimming her sphincter with my tongue, probing the tight muscle and, as she relaxed, pushed past and inside her virgin arsehole.\n\nGripping her hips I eased her into a kneeling position -- the best I think for the first experience -- and moved her to the edge of the bed. I wanted to stand, to be in control not bouncing on the bed, for this first time. It was going to be difficult enough to hold off my orgasm as I entered her and I didn't want to be thrown off by the effect of the soft bed. I knew from our early doggy that standing I was just the right height for my cock to slip inside her arse.\n\n\"Head down, Dana love,\" I said quietly, \"knees a little apart and stick that gorgeous bum out!\" Always a slightly different position for anal than vag!\n\n\"You're terrible!\" then, \"Like this,\" she smiled looking over her shoulder. WOW -- difficult then not to just do it. Take her. Didn't though -- and that is important. I wanted to enjoy her arse for a while and, hopefully, ease her into her first anal. I began again to caress and stroke her then bent my head to arse and licked along the valley between her cheeks. What is wonderful about this is hearing the positive groans, comments, moans from the lady -- and Dana was certainly enjoying things so far!\n\nTime to move on so I reached for the lube and twisted the tip off the small tube. \"I'm going to use some lube Dana,\" I whispered leaning forward, \"inside so just relax.\"\n\nI could see her body visibly relax as I place the tiny application tube at her anus then pushed it inside. \"Ooooooooooh! Feels funny.\" Then, \"Oh dear! That's straaaange!\" as I squeezed to lube into her rectum. Lube is so, so important, especially the first few times, so I wanted to make sure there was plenty inside her tight rear entrance.\n\n\"All OK still?\" I asked leaning forward again.\n\n\"Oh yes! Don't you dare stop now!\" Well I wasn't going to -- unless she told me to of course. I eased the tiny applicator tube out and squirted some lube around her anus and then some onto my cock, stroking it along my iron hard erection. Using my middle finger I began to work the lube around and into her sphincter. \"Mmmm, that feels good,\" she said softly as I teased her anus. \"Oh GOD!\" that was my finger pushing inside. \"That feels big -- your finger? Oh yes, do that. Ooooooohhhhh!\" I was sliding my finger in and out. So much easier than before due to the lube. As Dana got used to this I added my index finger initially under the middle.\n\n\"Oh my god! That's even bigger!\"\n\n\"Two fingers!\"\n\n\"OH FUCK!\" I was slowly fucking her arse with these two fingers now. Anticipation was making my cock almost burst with desire to be in there but, from experience, I knew not to rush this. Dana seemed to be relaxing and taking my fingers easily so now I set them side by side and let her have the whole length.\n\n\"OH MY GOD! That's so bloody big!\"\n\n\"Shall I stop?\"\n\n\"NO! Don't stop now! It's OK.\"\n\n\"Does it hurt?\"\n\n\"Nooo . . . . a little. Stings and I feel so stretched. But . . . it's strange. It almost feels good -- very good. Don't stop. Ooooooooooooo!\" Harder, faster and deeper now before the final breach. Then I began to turn my fingers inside her to loosen her sphincter even more. \"Jesus Christ! Oh Fuckkkkkkk! Ooooooooooooh! Yes!\" Her body shuddered.\n\n\"Dana, OK?\"\n\n\"Oh fuck yes. That was . . . funny! Strange. Oohhhhh, keep doing . . . THAT!\"\n\n\"Time Dana, do you want my cock in your arse?\"\n\nA breathless, 'Yes,\" answered me, \"put your cock in my arse!\" Gripping my cock tightly, I placed the tip at her anus and pushed gently forward. This is a dangerous time and I dare not look down and see my cock spearing her arse cheeks -- I would either cum or drive deep inside in one stroke and neither option was really good at this moment.\n\n\"Relax Dana,\" I said softly. 'let me in.\" I saw tension flow from her back and my cock slipped past the muscle only to be gripped tightly just below the head where there is a natural depression from the circumcision.\n\n\"OH GOD!\" she exclaimed breathlessly, \"Fuck Mike. OH MY GOD -- that feels so bloody big!\" Well it was to be honest -- bigger than the two fingers certainly.\n\n\"OK? Does it hurt?\" I asked.\n\nDana took a deep breath. \"OK. Yes. No. It's big! A little.\"\n\nI wasn't quite sure what she was saying. \"Too big? Shall I stop?\"\n\n\"No -- I don't think so. It feels funny. Do some more -- slowly please.\" I pushed another two inches into her. My cock is pretty much the same size as the head until just over half way down so all Dana would feel now would be fullness, no more stretching. \"Oooooooooo! It's so big. Full, so full.\" The latter almost to herself, then, \"It doesn't hurt -- too much! Oh god you feel so big and I feel so full!\" I pulled out then to ease the muscle and let her feel me leaving. This brought another round of self-comment but she did not tell me to stop. Almost out then back in slowly enjoying the feel of her sphincter sliding along my cock and the hot slippery velvet grip of her lubed rectum. This is a glorious feeling made all the better for knowing I was the first there. What is it about that that makes it so special for us guys? I don't know but I do know that it is special. I squeezed some more lube onto my cock and her anus.\n\nI was fucking her arsehole now -- only half my cock sliding in and out -- and it didn't seem to be too painful for Dana. I wanted to be sure however so I leaned forward, still gently stroking, and whispered, \"Is that OK Dana? Do you like it?\"\n\nShe took a deep breath. \"I . . . I don't know! Oh god it feels so big inside me. Oooooooooooh!\" She was loosening and I had pushed just a little deeper. I was almost halfway in now and beginning to move just a bit faster. For me the feeling as exquisite. Hot: slippery from the lube: and tight, oh so tight!\n\n\"Oh dear! Oh my god! FUCK!\" I was sliding just a tiny bit deeper on each forward stroke and now she was feeling the full width of my cock, stretching her anus and rectum. Still, Dana seemed to be able to cope and wasn't telling me to stop. I raised my body back up and gripped her hips. I was going to fill her completely now -- I couldn't hold back much longer. My cock felt as though it would burst, held so tightly as it was in her glorious arse.\n\n\"I'm going to fuck your arse now Dana,\" I said breathlessly.\n\n\"Oh god! Please! OH FUCK! Yessssssssss!\" Her reply was also breathless but I was rewarded with a slight backwards push as I pushed into her. The first sign that, perhaps, it was getting good for her. I had almost all my 7 inches in her arsehole now and had to control myself for I wanted to cum so badly but I hadn't really fucked her arse, buggered her, just yet.\n\n\"Here it comes Dana, all 7 inches!\" Verbal play is so, so important in sex and now I gave her it all. My thighs met the cheeks of her arse as I thrust home and held her there.\n\n\"OH FUCK!\" was her breathless response. \"Oooooowwww! So fucking BIG!!!!\" she shouted then, \"oh god, it hurts!\"\n\nHolding my hips very still, I leaned forward and bit the back of her neck gently and kissed her shoulders, holding her on my buried cock. \"Shall I stop, pull out, Dana love?\"\n\nI felt her take a deep breath then her body relaxed. \"I want it!\" she said softly. \"Please -- just take it slow. I want you to fuck my arse!\"\n\nAfter that I needed just a moment to control and get ready for a more prolonged fucking of her arsehole. More kisses on shoulder and neck finally ended when Dana turned her head and offered her lips. Mouths met in a frenzy of passion. I forced my tongue into her mouth, almost fucking her with it, as my excitement was beginning to peak.\n\nPulling lips apart Dana, passion writ large on her face, said softly, \"That feels strange now. It hurts but it sort of doesn't!\" I began to move my hips, sliding just a couple of inches of cock in and out -- bringing her on. \"Oh my god! That feels . . . Oh fuck I don't know how it feels but . . . . . oooooooooh . . . don't stop!\" That was what I needed to hear!\n\nThis was her first anal experience so I knew that I couldn't pound her too hard -- that might come later as she became more experience. I leaned back up, gripped each hip with a hand, and held her fast. Drawing my cock almost all the way out, I drove, slowly and gently at first, all the way into her. Dana cried out, then again as I pulled out and drove back. Each thrust resulted in a loud cry -- seemingly of pleasure for she didn't tell me to stop. I was fucking her gorgeous arsehole, buggering her, sodomising her. I looked down at my cock spearing her cheeks, watched it slide into her arsehole, watched her sphincter disappear then reappear as if clinging desperately to the fleshy invader. It must have been OK for her because, after a while, she began to meet my forward thrusts with a push back. I wasn't driving too hard, just slowly fucking her arse deeply.\n\nUsing my thumbs, I opened her cheeks even more allowing the last millimeters of my cock to enter her. Another loud groan. \"OH fucking hell!\" she cried in an extreme Australian accent that was music to my ears. Then, \"Oh fuck but I like this MIKE! Do it! Do it!\" Well I was but I didn't think I could do it for much longer. My balls were at bursting point and my cock felt as though it was going to explode inside the gripping walls of her rectum.\n\n\"I'm gonna cum in your arse Dana,\" I said loudly, \"fill your arse with cum. You want that?\"\n\n\"Oh fuck yes! DO IT!\" I am not too sure what I would have done had she said no but she hadn't so now I took off the brakes for just a couple of thrusts -- that's all it took! The whole 7 inches of my cock sank into her arsehole as I pulled her on. Suddenly it was there! My cock swelled in her rectum then pulsed spunk into her.\n\n\"YESSSSSSS! I can feeeeeeelllllll it! Oh my god!\" Her whole body convulsed and her rectum and anus squeezed my cock. It felt as though she never wanted to let it out as I pulsed jet after jet of semen into her bowels. Holding her tightly against my thighs, it was pretty soon over, however, after four strong pulses into her. I continued to fuck her arse through both our orgasms until my cock was too soft to make the return journey into her. We both fell onto the bed, Dana face down, me on my back. A few moments to recover then I leaned up on one hand and looked down at her.\n\n\"Well?\"\n\n\"Oh god Mike! I don't know. It hurt like blazes halfway through then, suddenly, it felt . . . well not exactly good but exciting.\"\n\nConcerned, I responded, \"Dana, love, I'm sorry. I didn't want to hurt you.\"\n\nShe smiled languidly. \"You didn't at the end,\" she said, \"at the end, just before you came, it was great! I never felt anything like that before and when I felt you cum in me. Oh my god! I could feel it, feel you cum inside me, hitting me inside. All warm.\" She giggled, \"Made me cum again!\"",
        "\"Did you cum,\" I asked after a soft kiss.\n\n\"Three times.\"\n\n\"Three?\" I said incredulously for I thought it had hurt her.\n\n\"It's hard to explain,\" she responded with a puzzled look. \"Anyway -- you should know. You've done it enough!\" She laughed, \"At least that is what you said!\"\n\n\"I have Dana love, but it's different for each woman. When did you cum?\" I was intrigued.\n\n\"You only want to know so you can do it again,\" she laughed.\n\nI bent and kissed her cheek, \"Oh yes Dana, you angel, I want to do that over and over but only if you want to.\"\n\nShe was quiet for a moment, \"I think I do,\" she said with a smile. \"At the end it was fabulous!\"\n\n\"Good! Now tell me, three orgasms?\"\n\n\"It's funny,\" she responded with a giggle. \"You made me cum when you got right in at the beginning.\"\n\n\"I thought you said it hurt then -- like the blazes?\"\n\n\"It did but it made me cum. I was funny -- a funny cum,\" she giggled. \"Can't explain it. Then, after a little while of you fucking me . . .\" I had to take a deep breath here. I loved the way she didn't mind using the correct language. \". . . then the hurt went away. No,\" she said hesitantly, \"didn't go away, changed and got good! I started to want it in me deeper so I pushed back and I came when you got even deeper. Then your spunk! WOW. And you got bigger!\" She suddenly giggled. \"Isn't this terrible. Talking about you fucking my arse like this?\" I am sure it was a rhetorical question but I answered it anyway.\n\n\"No, not at all Dana love. It's good to talk about it.\" I smiled lecherously and she laughed.\n\n\"Only so you can do it again you dirty old man!\" The sting was taken out of that by her great big smile. \"Anyway, I think I want you to,\" then she added softly and hesitantly, \"but . . . errm . . . I'm a little tender.\"\n\nNot unusual. That's why I had added some soothing lotion to my purchases. \"I didn't want to hurt you any more than I had to Dana love so I will put some of this on.\"\n\nShe seemed embarrassed as she rolled on her side to face me. \"I have to go . . . you know. Oh heck! Sod it! Your cum's running out.\" Her ingenuous manner was certainly enticing and I decided to have a little fun.\n\n\"Nice,\" I said with a smile. \"I like to see it running out.\"\n\n\"Don't,\" she gave an embarrassed laugh, \"you'll make me blush!\"\n\n\"And that will make you even more desirable,\" I responded with a great big smile. \"Lay back down.\" She did. I knelt up and looked down at her arse. So bloody gorgeous I was already beginning to harden thinking of the next time! I reached forward and parted her cheeks. Her anus was distended, not too much, and very red. A tiny dribble of spunk and lube appeared as I watched. I guess some people with find this rather off-putting. Well, it's my spunk after all and she was happy to let me see it running out.\n\nI patted her arse cheeks. \"You go and clean up Dana love,\" I said softly bending to kiss her. \"Call me when you've done and we can shower together.\"\n\nShe smiled another of her languid and sensual smiles, \"That will be nice -- won't it?\" she added sexily.\n\nI laughed, \"You are an insatiable minx,\" I responded.\n\nWith that she stood and walked to the bathroom stopping at the door and looking back over her shoulder. \"Well, do you like what you see?\" she asked with a wickedly knowing smile.\n\nI could see a thin trail of my cum running from between the cheeks of her arse down her leg. Very sexy indeed! I laughed and gripped my cock, which had decided to harden again at her sexy behavior, \"Very much minx!\"\n\n\"Good.\" She disappeared into the bathroom. I laid there contemplating how this lovely young woman had, apparently very suddenly, become extremely sexual. Was she normally like that or was it the effect of my love making? I didn't know but I guessed that the next couple of nights were going to be very exciting indeed! I waited for a few more minutes then knocked on the bathroom door.\n\n~\n\n8. Interlude -- Dinner:\n\nIn which we deal with the aftermath of her first anal and go out on the town:\n\n~\n\n\"OK,\" she called and I entered to find her in the shower. \"I'm hungry!\" she said with a big smile, \"so I thought a shower would be quicker. Don't know what you have planned for the bath -- and I don't want to rush,\" she added coquettishly. I laughed and joined her in the shower -- I was hungry too nor did I wish to hurry the 'bath' fun! The washing, stroking, and caressing continued in the shower but this time it was fun rather than sexual. Of course there was lots of soaping of cock and balls on her part and much the same of her tits and arse by me. She seemed completely at ease now, naked and in the shower -- almost proud of her body and how she could affect me with it. I just gloried some more in her smooth curves, her firm breasts, the sweep of her hips, her strong thighs, and her wonderful arse.\n\n\"You really do like my arse don't you,\" she smiled halfway through the shower after I had spent several minutes soapily caressing her cheeks.\n\nI smiled wanly, \"Dana, Dana love, you have a wonderful arse and, for my sins, it has captured me!\" I ran my hand over her hips and then her cheeks. \"These curves are so, so sensuous. You are so 'tight' and here,\" I ran my finger along the join between upper thigh and bottom, \"so pert. Look,\" I said nodding at my cock which was beginning to notice what my fingers were doing, \"see!\"\n\nShe laughed, pleased at her power I think. I don't know whether anyone had treated her like this before but I was guessing she was enjoying it! Her hand caressed my cock, \"You want me there again don't you?\" she asked with a smile.\n\n\"Yes,\" I answered honestly, \"yes I do -- and, to be honest, as often as you would let me! You are so, so lovely there.\" I smiled, \"That isn't to say, of course, that you are not lovely everywhere else,\" I added moving my hand to her pussy then up to her pert breasts.\n\n\"You,\" she said with an immense pout that softened the words, \"are a dirty old man!\"\n\nI laughed, \"For my sins, yes I will admit to that! You, on the other hand, are a very sexy young lady.\" I continued to wash her, moving her hand from my cock, \"Who will, undoubtedly have your wicked way with me later!\" She laughed. \"Now, however, I hunger for food. Sustenance to help me deal with the welcome demands you will make of me later tonight -- well I hope so at least,\" I added laughing.\n\nShe pulled my head down and kissed me, \"Mmmm! certainly am,\" she laughed dancing out of the shower.\n\nWe dried each other -- more fun touching and stroking. When we were both dry and into the bedroom I turned to Dana. \"Face down on the bed Dana love,\" I said with a smile.\n\nShe looked surprised and apprehensive. \"Again -- already?\"\n\n\"No,\" I responded. \"I want to use this,\" and I showed her the cream I had bought at the same time as lube. \"It will ease the soreness and take any swelling down pretty quickly.\"\n\n\"So we can do it again you crafty man!\" she said with a big smile.\n\n\"Only if you want to do it again you sexy lady?\"\n\n\"I do,\" she said laying face down on the bed with her legs slightly apart. Phew! No doubt now that she knew exactly what she was doing. \"It feels a little sore,\" she said looking back at me.\n\n\"I'm sorry,\" I said quietly, \"but it isn't unusual. Remember, only if YOU want to.\"\n\n\"I said, I do. It was funny but nice in the end.\" She giggled, \"That's because that's where you were!\"\n\n\"Minx,\" I laughed, \"now lay still for a minute while I put this on.\" So I gently eased her cheeks apart and applied the cream to her still tight anus. I was red and slightly swollen. \"I'm going to put some inside,\" I said, 'just relax!\"\n\n\"Mmmm,\" she moaned as I used my index finger to work some of the cream past her sphincter.\n\n\"OK?\"\n\n\"Mmm! A bit . . .OOOOOOOOhhhhh!\"\n\n\"Sorry!\"\n\n\"\"It's OK -- really. Quite nice actually!\"\n\nI laughed. \"Don't tell me you are getting a taste for something in your bottom!'\n\nShe laughed back. \"Now wouldn't YOU like that,\" she responded. \"I don't know,\" she added pensively, \"but I think I like it quite a lot!\"\n\nI eased more cream into her anus, cleaned up with a hand towel, then planted a kiss on each cheek. I will be honest here and admit that I found it extremely difficult not to press ahead and take her there again. I don't think she would have averred and my cock was certainly up for it but I really did want her to leave on Monday with a good feeling about her first experiences of anal sex.\n\nTime to get ready for dinner. Dana wore an 'evening' dress that I had chosen. Not dissimilar to that which she was wearing when I saw her in the Gallery. A dark, vibrant, blue: still fairly short to show off her lovely legs, and cut very tight -- to show off her arse! For me, she wore stockings with the sexiest suspenders. Not a 'garter belt' but a much wider, very thin fabric, which sat up around her waist and had long suspender, also very thin, which didn't show under the dress. She wouldn't let me see her put them on. \"It's a surprise for later,\" she said with a wicked grin. She also wore four inch heeled shoes which made her almost as tall as me - she looked fantastic. The dress was cut low at the back and just enough at the front to just suggest her cleavage. In a word, she was sex on legs! It was fantastic to know that she was doing it, not only for herself [she said how good it felt to 'show herself off' like this] but for me. To have a young woman as delectably attractive as Dana on my arm as we ate, wandered, and drank around the harbor was a great morale booster.\n\nI had decided to take her to 'Aria' again for I didn't want to get too far from the hotel and there was so much going on around the Opera House. To be honest, I just wanted her to be seen -- seen on MY arm! Goodness knows what people would think but I didn't care and, after our discussion earlier, Dana didn't care either.\n\nIt was a lovely warm late summer evening. I just wore a shirt and slacks not wanting to be anything other than the guy on the arm of this beautiful woman. It was busy. Saturday night found the harbor and opera house area full of both locals and tourists enjoying the sights, sounds, and ambiance of this heart of Sydney. There were lots of young guys about, prowling in search of company, and Dana got considerable attention.\n\nThe table was booked [a necessity on Saturday evening] for 8pm so I suggested we pop into a bar for an aperitif before dinner. There are numerous bars about and we decided on a higher class place.\n\n\"Let's sit at the bar,\" Dana whispered. I raised my eyebrows and smiled. \"I feel sexy,\" she added smiling back. So we did and I asked for punt e mes without much hope. They didn't have it so I ordered two glasses of sweet Vermouth with ice, half a dash of bitters, and a slice of orange -- as close to punt e mes as I could get. I chatted with the bar keep about the drink then turned to Dana as she picked up her glass. \"Sip Dana love. Taste -- then swallow!\" I had a big smile on my face as I said this and it was returned as she bent forward and whispered, \"Am I practicing for later?\"\n\n\"Could be,\" I laughed with a glance at the barman who had heard the exchange, \"but just now savour the drink!\"\n\n\"Mmm, OK,\" and she sipped the aperitif then, after swallowing, \"heck! That's bitter!\"\n\nI laughed, \"That's why I said sip! It gets better!\" It does and we enjoyed the drink before adjourning to the restaurant for a pleasant meal. Leaving there we walked to the Opera House where I was lucky enough to secure a couple of tickets to a concert performance on Sunday evening. That was important for I had bought a very special dress for Dana to wear. Very similar to a dress worn in a picture by Alberto Vargas in the Esquire Calendar of December 1946 -- my favourite of many Vargas pictures. That dress is almost transparent -- Dana's was not, just hung the same and showed off her figure -- again, particularly because of the four inch heels she would wear with it.\n\n~\n\n9. The Evening\n\nIn which Dana poses and we make love again:\n\nWe stopped at the Opera Bar for a coffee where Dana shone and was much admired. As we finished she leaned over and whispered, \"Let's go back!\"\n\n\"It's not that late,\" I responded with a smile.\n\n\"I know,\" she said smiling back, \"more time in bed!\"\n\n\"Suits me!\" We were quickly back at the hotel and into the room. Just inside, after I closed the door, she turned and melted into my arms.\n\n\"Touch me,\" she said before we kissed, \"run your hands over my body.\" I really didn't need much persuading for her contours are wonderful. From her bare shoulders, down her back, across the expansive reach of her arse cheeks to her thighs. Back and forth, up and down, ranged my hands as we kissed. Moving into the room, I started to unzip her dress. \"No,\" she said moving away slightly, \"let me undress you then you can watch.\" My shirt quickly disappeared to the floor followed immediately by my slacks, socks, and underpants. She stood there running her hands over my body seeming to enjoy the feeling of my hair through her fingers. One hand cupped my balls; the other gently masturbated my cock.\n\n\"Is that all for me?\" she asked with a coy look.\n\n\"Of course,\" I managed to reply croakily. She was so hot, so desirable -- and dangerous just now. Much more of this and she would get a handful of cum -- not quite where I wanted to deposit it!\n\n\"Sit,\" she said pushing me gently back onto the couch, \"and enjoy!\" Well I knew I would do that as she reached behind and unzipped the dress. It fell to the floor revealing her underwear. The stockings seemed to lengthen her legs and the gap between their top and the high suspender belt framed her cunt and, when she turned, her arse. She was wearing skimpy panties underneath the suspenders and she now began to take the off. Bear in mind she still had her four inch heels on. Putting one foot on the coffee table, making sure I could see her cunt, she undid one side's suspenders, then the other, and slid her panties off. Then, turning away showing her gorgeous arse, she did them up again. A clear message that they should be left on -- not surprising for I had told her how much I enjoyed sex with underwear still on -- and shoes come to that. She looked so -- words do fail me her -- sexy it was amazing. I think that many women don't realize that they are as attractive dressed in good lingerie as they are naked. She walked up and down, her arse cheeks firm and proud atop her lovely legs. Poses accentuated by the heels. Finally coming to rest directly in front of me.\n\n\"Well!?\" she said with the sexiest smile.\n\n\"Turn,\" I said throatily -- she did and I was faced with her sumptuous arse. The flesh coloured suspender belt sat high on her body, around her waist; the suspender on each side forming a wonderful frame for those lovely cheeks.\n\nI ran my hand from waist -- and the silky material of the suspender belt -- over her hips, then thighs, and finally, calves. Over and over I caressed her bare arse, my thumbs parting her nether cheeks.\n\n\"You want my arse again don't you?\" she asked quietly looking back over her shoulder as she bent her legs and pushed her arse towards me.\n\n\"Yes, Dana, I do: very much.\" I could see, however, that her anus was still red and looked a trifle sore. \"Not tonight Dana. I don't want to hurt you -- and put you off,\" I added with a smile. \"Tomorrow?\"\n\n\"Yes,\" she said with a smile. \"I want try again!\" At that, of course, my cock got even harder and I just had to get it inside her. That must have been in her mind as well for she turned back to face me and knelt at my feet, taking my erection in hand.\n\n\"Mmm, time to taste!\" Well she would for there was a copious amount of pre-cum leaking out.\n\n\"Dana love, be careful -- you might get a mouthful of cum!\"\n\nShe looked into my eyes and said, intently, \"I want it. I've felt you cum in my pussy and in my arse, now I want to feel it in my mouth,\" she smiled, \"and, if you are up to it tomorrow, in my arse again!\" Well that was almost too much. I had to take her hand off my cock.\n\n\"Easy Dana! Oh fuck but you are some young lady! You need to take it slow or it will be over too soon -- and I do want to fuck you!\"\n\n\"Yes please -- but you cum in my mouth!\" I reached forward and pulled her lips to mine -- god she was so lovely.\n\nI slid forward on the couch. My cock stood proud and eager. I reached up and gripped the cheeks of her arse and pulled her towards me. \"Legs each side Dana love, you're going to sit!\"\n\n\"Mmm,\" she murmured as she moved into place, \"that sounds interesting!\" Her cunt was over my cock now and she gently lowered herself until her lips kissed the tip of my cock. \"OH YES!\" she groaned as she bore down and took three inches inside her soft, velvety, vagina.\n\n\"Oh fuck Dana!\" was about all I could manage as she slid down the rest of the way and my cock lodged fully inside her. I was faced with a pair of brassiere covered tits that I just had to suck so, as Dana settled herself down on my erection, I reached behind and undid the clasp and slipped it off. Her nipples were swollen and hard. I began kissing, licking, and biting gently. Dana was sighing and rolling her body on my cock seeming to enjoy the differing sensations of my cock buried deep in her cunt. I focused on her nipples -- something which she seemed to enjoy -- and dragged my teeth along each one. Dana stiffened, shuddered, and groaned my name as orgasm racked her body.\n\n\"Oh my! That was fun,\" she murmured as she leaned forward into my body. She was still bouncing gently on my cock while moving her arse back and forth but, in this position, I couldn't really get going.\n\n\"Let's shift Dana love,\" I whispered. \"I need to fuck you!\" She smiled a seductive smile.\n\n\"How?\"\n\n\"Hard?\"\n\n\"Yes! Hard! Make me cum again!\"\n\n\"Over the arm of the sofa Dana,\" I said with a smile.\n\nShe looked surprised but didn't demur as I helped her off my cock and into position. The arm was well padded but too high for her to kneel so her legs were stretched out, her head resting on the sofa seat. This presented her cunt and arsehole for the almost perfect position to be fucked! I couldn't resist kneeling between her spread legs and feasting on her wet cunt then using my tongue on her tight arsehole. She shuddered when it touched her anus and let out a loud sigh. I didn't probe too hard there -- too much and I doubt I could have controlled my mounting desire to sodomise her again and I didn't want to do that now: didn't want to hurt her.\n\n\"Oh Mike, Mike please!?\"\n\n\"Please?\"\n\n\"Oh fuck me -- please!\"\n\nI closed her legs and stood astride her gorgeous thighs. Pointing my cockhead down, I ran it across her pussy lips then over her anus. Another sigh. \"Oh my god! Can't you? Oh god that feels so . . . wonderful!\" It seemed that Dana had enjoyed her first anal experience and was ready for more but not tonight. I shifted my cockhead back to her cunt and slid two inches into her.\n\n\"FUCK! Oh yessss! Fuck meeeee!\" I did! Driving my cock into her velvet heaven, I started to fuck her in earnest. This position has all the elements of power. Driving down into her body felt tremendous. Dana was encouraging, groaning my name, moaning \"Fuck me!\" over and over. With my hands on her arse I drew the cheeks apart, seeing my cock sliding in and out of her; watching her anus contract slightly as I filled her the loosen as I pulled out. I couldn't resist touching that second heaven so, as before, I drew some of her liquid from the back of her cunt with my thumb and dragged it over her arsehole.\n\n\"Oh fucking hell! Oh my god! Aaaaggghhhhh!\" That, I thought with a smile, is an orgasm! Leaving my thumb covering her anus I continued to fuck her hard and deep. Not close to coming myself -- I had promised her a mouthful -- I knew I could carry on for a while and I was enjoying the sounds of pleasure leaking from Dana's lips. I pushed harder on her anus with my thumb having dragged some more liquid up. She was still making appreciative noises so I pushed harder until her sphincter opened and the tip of my thumb slipped inside.",
        "\"FUCKKKKKKKK!\" she cried as her whole body convulsed. I held my cock deep inside her then and started to, very gently, fuck her arse with just the very end of my thumb. Shudder after shudder rocked her body as I worked her arsehole gently then, as she seemed to calm, I put one leg up on the sofa seat, withdrew my thumb, and returned to fucking her pussy hard and deep. I could see her anus now, more open than before, and I knew that I had to take her there, in this position, tomorrow. These thoughts began to raise my temperature and my orgasm was slowly approaching.\n\nLeaning forward with my cock buried inside her I whispered, \"Gonna cum soon Dana.\"\n\n\"I want it in my mouth,\" she responded breathlessly, \"in my mouth!\"\n\nI pulled my cock from her cunt as she moved to sit on the sofa. She reached for me and sucked my erection deep into her mouth, one hand cupping my balls, the other stroking the base. My hand gripped her head and I began to fuck her mouth -- gently I must say for I didn't know how she would react to this. I didn't seem to faze her as she gazed up into my eyes and sucked.\n\nIt didn't take long, particularly as I thought of her lovely tight arsehole and of fucking it later. \"Shit Dana! Here . . . . . . aaaggggghhhhhh!' I moaned then began to swell and pulse cum into her mouth. She timed her sucking well, managing to pull spunk from my cock. I gave her four pulses before she pulled away and smiled up at me.\n\n\"Mmmm! 'ice!\" she smiled then swallowed. \"Very nice! You've got nice tasting cum!\" With that her mouth covered my cock again and she continued sucking the remains of my spunk from my now softening cock.\n\n\"Fuck Dana, that's good but you -- phew! No more -- please!\" My post cum cock was so, so sensitive. She seemed to be amused and finally stopped sucking but still washed the head with her tongue.\n\n\"Good?\" she asked after swallowing again.\n\n\"Good!\" I said with a smile then I lifted her and we kissed, my tongue probing into her mouth and tasting the remains of my cum on hers. \"Satisfied?\" I asked with a smile.\n\n\"Yes,\" she said quietly. \"I thought you were going to . . . you know . . . back there.\"\n\nI smiled, \"I wanted to Dana love . . .\"\n\n\"I wanted you to,\" she interrupted.\n\n\". . . but you might not have enjoyed it. Tomorrow,\" I whispered with a smile, \"as often as you want me to -- and I can.\"\n\n\"Good,\" she smiled sexily, \"I think I am going to enjoy that!\"\n\n\"I know I will,\" I replied laughing and hugging her then, running my hands over her glorious arse, added, \"because you have a fabulous arse Dana.\" She giggled provocatively. \"You, minx, are a devil woman!\"\n\n\"Mmm,\" she replied, \"I've never really felt like this before. It's . . . I don't know . . . you, this hotel room, the situation. I feel like a vamp. You know,\" she laughed, \"a loose woman. I want to do everything, experience everything. I feel so . . . so sexual!\"\n\n\"That's because you are,\" I smiled. \"No holds barred?\"\n\n\"No,\" she replied softly, \"no holds barred!\" Well! I guessed that she wasn't really aware of what her reply could forfend but, in truth, I wanted nothing more than for her to enjoy me enjoying her body. That would, almost certainly, mean that tomorrow would see her arse well and truly fucked but only if she wanted it.\n\n\"Shall we shower or bed?\" I asked with a smile.\n\n\"Bed, I think,\" she replied yawning, \"I'm tired!\"\n\nI laughed, \"You do need some rest to prepare for tomorrow.\"\n\n\"Now why would that be?\" she laughed back as I led her into the bedroom and to bed.\n\n\"Because, Dana you minx, tomorrow will be full of great sex!\"\n\n\"Mmm, I know,\" she said softly, then, \"thank you Mike. Thank you for all this,\" she swept her arm around the bedroom, \"and the clothes, everything,\" she kissed me, \"and for the sex!\n\nI smiled, stroked her cheek, and kissed her back. \"It's me who should be thanking you,\" I said softly. \"Taking off with an old codger like me!\"\n\n\"You might be a bit older,\" she responded, \"but I have never been treated like this,\" she giggled, \"and I've certainly never been fucked quite so well!\"\n\n\"Good! Now snuggle up and let's go to sleep.\" So she did, and we did!\n\n~\n\n10. Sunday Morning:\n\nIn which Dana goes 'riding', has her arse explored, and has her arse filled again:\n\n~\n\nI woke with the dawn, the sun streaming in through the curtains that we had left open. It was too early to rise however, so I turned over and nodded off back to the half-awake, half asleep, world of the early morning. My mind wandered over the previous day, enjoying the remembrance of Dana and her gorgeous body. That, of course, raised my morning erection but it was too early to rouse Dana who was peacefully sleeping. She looked so lovely, so innocent, so desirable laying there beside me.\n\nTime passed and I must have fallen into a shallow sleep for I dreamt of hands on my cock and balls. I wasn't dreaming of course for Dana had awoken and was already checking out my package!\n\n\"Mmm,\" she murmured with a smile, \"do you always wake up like this!\" You know, women can be pretty demanding at times -- nice though!\n\nI smiled back, \"Almost always when a beautiful young woman is stroking my cock and balls,\" I responded dryly.\n\nShe giggled -- a delightful sound that made her seem even younger. \"I haven't seen many -- cocks I mean,\" she clarified with a grin, \"but I do like yours! How big is it?\"\n\nThat was a surprise question. \"Big enough,\" I joked as she masturbated me.\n\nShe giggled again, \"I know that. How long, how wide?\" She looked at me coyly. \"I'd like to know how big a thing is going in my arse!\" This, of course, caused a serious twitch in my cock. Her arse! Well you can imagine.\n\n\"You, Dana, are a minx! An Australian minx!\"\n\n\"Is there such a thing?\" she laughed back, \"anyway, answer!\"\n\n\"OK,\" I responded, \"about 7 inches long and 2 inches wide at the widest. Don't know how far round.\"\n\n\"Mmmm, it feels big but I haven't had many,\" she added with another coy glance in my direction. \"Is it, you know, big?\"\n\n\"You mean in comparison?\" She nodded. \"I don't really know,\" I laughed back, \"I have been told it's a little longer and fatter that average.\"\n\n\"I thought so,\" she murmured pensively, still idly masturbating my solid erection and stroking my balls. \"It's the biggest I've had! Can I ride?\" she continued suddenly.\n\nI laughed, \"Be my guest you sweet angel. Climb on board and fuck me!\"\n\nShe looked at me askance then smiled as she saw my grin. Bending her head, she planted a kiss on the tip of my cock then moved to squat over my loins. Slowly she lowered her body down onto me. I sighed as her nether lips caressed my cockhead then groaned as she sank down and took me completely inside. A devilish smile formed as she looked down at me and began to rock back and forth.\n\n\"Mmmm,\" she murmured absently, \"this is GOOD!\"\n\nI laughed, \"Yes,\" I responded, \"very good indeed!\" She laughed with me and started to bounce up and down as well as sliding back and forth. I could feel the tip of my cock rubbing inside her vagina and I assumed that it must have been her 'G' spot because she began to sigh and groan. Her eyes closed and she moved faster and faster, shouting a continuous, \"Yes, yes, yes!\" Finally, after a couple of minutes of extreme action, she threw back her head, squeezed her hands in front of her body, and shuddered. Her orgasm must have gone on for almost a minute before her eyes opened and she smiled. I smiled back, pulled her body down onto mine, and began to drive my cock into her. Eyes widening, she shuddered again and again at this renewed pressure on her 'G' spot. I fucked her hard for a while, right through her second orgasm, and then lifted her body.\n\n\"Kiss!' I said smiling. It was a passionate kiss with tongues meeting and entwining.\n\n\"I want to turn round,\" she whispered after several kisses, \"so you can see my arse!\" she ended breathlessly.\n\nI raised my eyebrows, my cock twitching at the idea of her arse. \"Why?\" I asked softly.\n\n\"I want you there again,\" she replied, \"so -- see if . . . you know! I don't feel sore,\" she added softly.\n\nWell, of course this was causing me a minor concern as my cock was still encased in the soft velvet clasp of her vagina. Morning erections are always easier to control but, heck, I was buried balls deep in a gorgeous 22 year old blonde and she was talking about having her arse fucked! Taking a deep breath, and remaining completely still, I said softly, \"Dana, love, I want you there again too. Turn then but slowly,\" I added with a smile, \"I certainly don't want to cum just now. Saving that for later!\"\n\nShe laughed then, a giggle that almost sent me over the top, but she was obviously aware of my problem for, instead of turning round on my cock, she raised herself off, stood and turned around. She wasn't to know, of course, that that was almost as bad for I now had the view of her gorgeous arse and, as she sat back, the spread of her cheeks and her tiny anus! I watched mesmerized as she lowered herself onto my cock, reaching back as she did so to guide it into her wet pussy. It was almost too much! To see it disappear inside her snug vagina with her tiny anus flexing slightly between her spread cheeks as she sat back made any control difficult! I closed my eyes and tried to think of anything rather that that wonderful body sitting on my cock. Thankfully I managed as she was crushing my balls slightly and, being rather tender there since the infection after my vasectomy, that had the effect of switching me off! Still hard though but no danger of losing it!\n\nDana, meanwhile, had settled right down but remained still before looking back over her shoulder with a wicked smile on her face. \"Like what you see?\" Gone was the apparent ing\u00e9nue and in her place was a woman who knew what she wanted; confident in her sexuality and her power over us poor men.\n\n\"I like it very much,\" I replied with a smile, \"and just to show you how much I am going to play!\"\n\n\"Mmmm,\" she murmured then gasped as my thumb entered her vagina from behind my cock. I had coated it with saliva and now dragged her juices up and across her tight little back door. No sign of yesterday's attention remained and the tiny star looked as fresh as before. I ran my thumb up and down over her sphincter, pushing slightly harder each time until, finally, the tip entered, her anus apparently ready to take it.\n\n\"Oh god!\" she moaned, \"oh yes! Do that!\" I didn't want to go too far now, both for her and for me so I just pushed and inch of thumb into her up to the first joint then began to fuck her arsehole slowly. I could feel her cunt gripping my cock tighter and was thankful for the pressure on my balls. Dana began to sigh, to groan, and to murmur quietly, \"Right there, yes!\" over and over. She started to bounce on my cock and push back a little as if wanting more in her arse but I stuck to just an inch. If she wanted more in there today it would be 7 inches of cock! It didn't take long before I felt another shudder and a flood of her liquid over my cock and balls. She came down from her high quicker this time, eased her body off my cock, and lay down beside me.\n\nHer hand gripped my erection and slowly stroked. \"I want this in my arse you know,\" she whispered, \"deep in my arse!\" She had certainly learned quickly how to turn me on!\n\nI reached for her wrist and stopped her movement. \"You are a minx Dana, an angelic minx. I know and I am going to fuck your arse -- long, hard, and deep but first we need to eat, to shower, and get you ready!\"\n\nShe smile, \"Mmmm, I am hungry,\" she replied then slid down and took my cock into her mouth!\n\n\"Dana, Dana love. Oh shit! You're gonna have to stop that!\"\n\n\"I like it,\" she said raising her head and smiling.\n\n\"I guess Dana. So do I but I want your arse, you want it in your arse, so you need to give it a rest!' She pouted.\n\n\"Oh all right!\" she said with a grudging smile then giggled. \"Oh Mike, this is fun!\"\n\n\"I know,\" I replied laughing with her. And it was. She stood and walked to the bathroom. My eyes followed her gorgeous form.\n\nAt the door she turned, \"I can feel your eyes from here.\"\n\nI laughed, \"I'll order breakfast. We can shower after we eat.\"\n\n\"I hope you will eat after we shower,\" she responded with a bright smile and slipped into the bathroom. I remained still for a few minutes listening to the sounds from the bathroom then phoned down for breakfast before going in and doing my own thing. I was surprised that Dana just stood there watching me as I stood ready to pee.\n\n\"I haven't seen a man pee before,\" she said with a smile.\n\n\"Wanna hold it?\" I asked laughing as I reminded myself of the old joke about Adam and Eve in the Garden of Eden.\n\n\"Can I?\" she responded laughing back. I nodded and she joined me then took my cock, soft now, and pointed it at the bowl. \"OK, go now!\" I laughed and began. \"Ooooh! That feels strange!\"\n\n\"Feels bloody strange for me as well,\" I laughed, \"certainly not used to this!\"\n\n\"It's fun!\" She moved my cock slightly, watching the stream into the bowl. When I had finished she turned and kissed me. \"I don't know,\" she said quietly, \"it's so different with you. No hang ups. No rules. It's so easy to be with you.\"\n\nI held her close. \"There are 'rules' Dana love but they're pretty easy. Anything goes basically. It must be fun, however, and both or however many there may be, must agree. It's not fun if someone is forced to partake in an activity they don't like.\" I ran my hands over her gorgeous arse cheeks. \"That's why it's up to you if my cock goes in your arse!\" I said with a smile.\n\n\"Mmm, I know,\" she replied quietly, somber for a moment. \"I think that's it you know Mike. With you I don't feel any pressure to do anything I don't want to do,\" she giggled then, \"and that seems to make me want to do things!\" There was a loud knock on the door. \"Sounds like breakfast,\" I said and donned my housecoat. Dana followed me into the bedroom; I went to the door and got breakfast.\n\nShe came out dressed only in the plainest pair of white panties. The sight took my breath away because for some reason I can't explain [other than the fact that she is gorgeous] she looked so fuckable it wasn't true. Her firm breasts, uncovered like this, were lovely and the white material, pulled tight across her pussy, showed the proverbial 'camel toe'. When she turned the gorgeous expanse of her arse was somehow highlighted by the simple white cotton panties.\n\n\"FUCK Dana,\" I said as she stood in front of me, \"you are a bloody dream!\" She smiled wistfully, said nothing, and sat beside me. Then she turned and kissed me.\n\n\"I know,\" she whispered quietly, \"I like being your dream. I'm hungry!\"\n\nI laughed and we ate breakfast together. All through the meal I was conscious of her sitting beside me -- almost naked. My mind ran over what was coming next. What position would I introduce her to? How hard would I take her arse? How long could I last? Would she be able to cope with several bouts of arsefucking today? Of course, all this contemplation made me quiet -- and made my cock twitch constantly. Towards the end of the meal Dana turned to me.\n\n\"Are you OK Mike? You're very quiet.\"\n\nI turned towards her and smiled. \"Just contemplating Dana love, just contemplating.\"\n\n\"Contemplating what?\" she asked coyly for I believe she knew!\n\n\"Contemplating you,\" I said with a wan smile, \"your gorgeous body, your lovely face and eyes . . .\"\n\n\". . . and my arse!\" she interjected laughing.\n\nI sighed in mock seriousness. \"Caught out again! Yes Dana. Contemplating your arse, your delightful arse.\"\n\n\"What were you contemplating?\" she asked playing the game.\n\n\"You want me to be honest?\"\n\n\"Yes,\" she nodded, \"I think you have been since Friday.\"\n\n\"OK,\" I smiled, \"I hope you're ready for this! I was trying to figure out which position for your second anal experience.\" She raised her eyebrows with a coy smile.\n\n\"Have you figured it out?\"\n\nI laughed, \"No, not yet. We will talk about it.\"\n\n\"Mmm,\" she murmured, \"I am looking forward to it you know.\" I smiled. \"What else?\"\n\nI met her sparkling eyes. \"I was wondering how 'hard' I could fuck you,\" I said softly. \"I don't want to hurt you -- and I don't want to put you off having my cock in your arse!\" I added laughing.\n\n\"You were gentle yesterday. I want you to be gentle today but I want to experience everything -- I told you!\"\n\n\"I know,' I replied, \"and I will be gentle -- until you tell me otherwise. As I said, the only rule is that it should be fun!\"\n\n\"OK,\" she laughed, \"it will be fun for both of us! What else?\"\n\n\"You are an inquisitive minx,\" I laughed.\n\n\"It's a trait of the Australian variety,\" she laughed back.\n\n\"Weeeeellll,\" I replied hesitantly, \"I was pondering how many times we would be able to do that today and tonight.\"\n\n\"Mmm, now there's a thought!\" She laughed, \"It does depend on how well you please me! And how many times we can get this,\" her hand reached down and grabbed my cock through my underpants [all I was wearing].\n\n\"True,\" I laughed, \"and the Cialis will be working off!\" Dana looked disappointed. \"Don't worry,\" I added, \"I have Viagra as well and that works wonders! It does depend on you as well you know. This is pretty new to you and, well, you may not be able to deal with several 'intrusions' in your arse,\" I ended laughing.\n\n\"I want to,\" she said quietly. \"I want to very much. It has been so much fun being with you. Like nothing I have ever experienced and I want to go on experiencing it as often as I can.\"\n\nI smiled and hugged her to me. Could there be even more? I put that thought to the back of my mind. \"And I do as well,\" I said quietly. \"To be with a woman as beautiful as you has been wonderful. I shall treasure the memories.\"\n\nShe smiled. \"Good. Can we shower now because I am getting awfully horny!\" she said coquettishly.\n\n\"You want me to wash you?\" I said with a smile.\n\n\"Of course: what girl wouldn't -- especially your 'special' wash!\" She said as she made for the bathroom.\n\nI laughed and followed her. I washed her 'properly' the only difference being that this time she took two fingers in her arse -- and enjoyed it! The sybaritic experience of washing each other certainly increased my libido and readied me for the coming 'trials'!\n\nCompletely dry, she turned to me and said, \"Shoo!\" I raised my eyebrows quizzically. \"I need to get ready -- dunce!\" she said laughing, \"unless you don't want my arse?\"\n\nI smiled for I did! I reached for her and pulled her close, my hands running down her back and across her cheeks. \"More than you can know Dana. This is a dream for me! You are so lovely it is breathtaking!\"\n\nShe stroked my cheek. \"I am glad,\" she said, \"because it has been like a dream for me as well.\" She laughed, \"I didn't really think that it would be like this when I said yes at the Gallery,\" she said. \"I thought, well that you were just after a quickie! Glad you weren't! Now go and let me get ready for you. I do expect a few orgasms first,\" she said smiling, \"just like you said!\"\n\n\"Mmm,\" I smiled. \"Seems I have some exploring to do!\" I stroked one finger along the crease between the cheeks of her arse then, with the other hand, along her pussy. \"Gonna eat you out!\" I whispered.\n\nShe blushed. \"Go!\" she said. I did and, closing the bathroom door, laid on the bed.\n\nShe was gone almost half an hour and I was beginning to wonder whether she had got 'cold feet' but, just as I began to stroke my flaccid cock in expectation, the door opened and she stood in the opening. I hadn't noticed her taking anything in there but she was wearing just 4inch high heeled shoes. The bright red ones I we had got yesterday. She stood, one arm on the doorframe, and smiled.\n\n\"Well?\" she said, pirouetting and thrusting her arse out provocatively.\n\nI took a very deep breath for she was lovely! \"Words fail me,\" I said and began to rise.",
        "\"No! Stay there.\" She smiled, \"It looks like you need a little help,\" she said nodding at my soft cock.\n\nI laughed and held it up as it began to stiffen. \"Just needed a little nudge,\" I said. \"You were a long time -- is everything OK?\"\n\nShe looked just a little embarrassed then smiled sexily as she crossed to the bed. \"I wanted to make sure that . . . now you are going to make me blush!\" I laughed, \"No! Stop it! I wanted to make sure that . . . well when you . . . you know, that it was good because you said . . . you know, that you wanted me a lot that way!\"\n\nI smiled as she knelt on the bed next to me. \"You're babbling.\"\n\n\"I know,\" she smiled back, \"I think I ought to concentrate on you for a while!\"\n\n\"Suits me,\" I said as I looked up at her. Her breasts were perfect hillocks, nipples proud [probably hardened by her enema], the slight dome of her tummy swooping down to the blonde fuzz covering her mons. I made to touch her.\n\n\"No!\" she said firmly, 'no touching -- yet anyway! My turn!\" With that she began to run her fingers through the hairs on my chest, catching them between her fingers. \"I like your hair,\" she whispered almost to herself, then to me, \"the guys I've been with don't have much hair. Yours tickles,\" she giggled. \"I like it!\" She continued, briefly circling my nipples with her fingers before bending her head and gently sucking each one. Then her hands wandered over my stomach [no 'six pack' there unfortunately but she didn't seem to mind], and continued to tease the hair around my cock and balls. Finally one hand circled my cock and the other cradled my balls.\n\nShe looked rather pensive as she slowly masturbated me and gently squeezed my balls. She bent her head and began to lick around the base of my cock then down across my tightening balls to my perineum. She looked up then and smiled before bending again and running her tongue from under my balls right to the tip of my cock, licking the tiny drop of pre-cum that had crept out. She swallowed and looked at me. \"I like your cock,\" she said with a smile. \"I haven't, well you know, I haven't actually taken a long look at one.\" She laughed, \"The boys I have been with want to stick it in somewhere quickly. I like this: messing about!\"\n\nI laughed, \"It's called 'foreplay' Dana love -- and it is bloody marvelous! You just carry on -- don't worry about me!\"\n\nShe looked pensive again as her finger traced all around my balls. \"It's nice when you, you know, put your finger in my arse,\" she said, \"do you like that?\"\n\n\"A finger in my arse?\" She nodded. \"Yes,\" I said, \"feels good.\"\n\n\"Shall I do that?\"\n\n\"If you want.\"\n\n\"I do!\" She laughed, \"After all, you are going to put a lot more into my arse so I suppose I ought to!\" She looked at my cock as it twitched at the thought of her arse. Her finger pressed gently on my anus then harder. I relaxed and it slid inside. \"Oooo, that feels funny,\" she said.\n\n\"Feels funny for me,\" I laughed then, \"FUCK!\" as she began to gently fuck my arsehole with her finger. \"SHIT! Dana love, not too much!\" She raised her eyebrows quizzically. \"I'll cum then you'll have to wait!\"\n\n\"Oh! You like it then?\" I nodded. \"Good, I can do it some more later!\" With that she removed her finger then bent her head to kiss and lick the tip of my cock. \"Your turn!\" she laughed as she lay back on the bed.\n\nI rolled to my side, head on one arm, and looked down at her. Her endeavours with my cock and balls had obviously 'warmed her up' for her nipples were standing hard and proud. I traced a finger down her cheek, her chin, her shoulder and onto her breast and circled first one nipple then the other again and again. I pinched a little and tweaked before lowering my mouth onto her tits. I sucked; bit gently, teased, licked, and nipped her nipples for an age until finally rewarded by a soft, low moan and a shudder as she came.\n\nI lifted my head and smiled down at her. \"Lick me,\" she whispered, \"please!\"\n\n\"I just did!\" I teased.\n\n\"Oh,\" she said breathlessly, \"don't tease! Please! Lick me!\"\n\nI bent and whispered, \"Of course, you angel!\" She sighed and opened her legs in invitation. I moved between and spent a few moments gazing down at her gorgeous body. \"You have a very pretty pussy,\" I said with a smile -- for she did! She blushed. I don't suppose anyone had ever said that to her before! Bending my head, I sucked her swollen labia one side then the other, before probing as deep as I could with my tongue and sucking her juices out. Dana moaned and pushed her loins upwards into me. I tongue fucked her then, enjoying the almost animal sounds that came from her as she sailed close to orgasm. After a while I just moved up and found her tiny swollen clit: just big enough for me to nip with my lips then tease the tip with my tongue. It was enough! Dana screamed then, quite loudly, and thrust upwards even harder as her body shuddered in orgasm. I kept her clit trapped as she rode the path of pleasure, prolonging it as much as I could.\n\nAs she came down I moved back to her vagina, licking deep inside again a few times, before dragging my tongue down. Lifting her bended legs then, my tongue found he tight anus and flicked at it. Dana groaned a soft, \"Oh yes!\"\n\nI lifted my head, \"Turn over Dana,\" I said quietly. She opened her closed eyes. \"I want to lick your arse!\" I said bluntly. She smiled an almost knowing smile then languidly rolled face down as I moved out of her way. She immediately opened her legs again and I moved back between. Here is the most wonderful sight in the bedroom -- well for an arse man like me anyway. I could enjoy the gentle slope of her shoulders and lithe back down to the swell of her broad hips below which sat the gorgeously provocative cheeks of her delicious arse. No bubble butt her but the sweep of a mature woman's arse. Broad and fulsome with no surplus fat, just that necessary to create the soft curves. Like this her cheeks were open, her tiny rosebud on display above the sensuous wetness of her vagina -- both holes almost begging to be filled.\n\nI enjoyed the sight for a short while before bending my head to her vagina and licking up towards her anus. Then to the glorious globes of her arse. Stroking, caressing, sometimes squeezing. Kissing, licking, gently biting bringing soft moans of pleasure from Dana. Then to her anal cleft. I ran my tongue up and down, flicking her rosebud as I did so, then concentrated there. My tongue probed then rimmed her arsehole then probed again. Over and over until I felt yet another shudder from Dana and a low, breathless, 'Yessssssss!\" I pushed harder and the rosebud opened and my tongue slipped inside. I could taste the flavoured lube I had got for her to use, the taste of her juices that had run from her pussy, and the taste of her. It's all a powerful aphrodisiac! Finally, lifting my head, I replaced tongue with finger and, circling a few times, pushed in easily to the first joint. Reaching across the bed, I got the lube from the side table and squeezed some onto my finger, pulled out a little, then back in. I did this a few times, pushing up to the second joint and adding lube each time.\n\nDana looked back at me smiling. \"You naughty man,\" she laughed, \"you are getting my arse ready . . . to fuck?\"\n\nI smiled, \"You, young woman, are a vamp!\"\n\n\"What's a 'vamp'?\"\n\n\"A seductively attractive woman who eats men!\"\n\nShe laughed, and moaned softly [I was fucking her arse slowly with two thirds of my middle finger after all!]. \"I thought it was you who ate me!\"\n\n\"And very nice it was too,\" I laughed back then knelt up, keeping my finger in her arsehole. \"Is this good?\" I asked still laughing.\n\nThe answer was pretty obvious as she groaned and answered with a breathless, \"Yessssss!\" I continued to finger fuck her arse until, finally, it was completely inside, then I added a second finger watching to see that she was OK with the intrusion. Her eyes were closed and she slowly began to push back onto my fingers then, \"I want you in my arse again Michael,\" she said softly, \"please!\" I slipped down beside her and kissed her lips. \"I want to see your face,\" she said softly again. \"I want to see your eyes when you do it!\"\n\n\"Mish is a bit harder,\" I whispered.\n\n\"I don't care,\" she responded, \"I want to see your eyes!\" Anal in true missionary can be something of a struggle for the lady, especially early in her anal experience. \"I want it all you know, everything!\" I took a deep breath for it was difficult to hold off but I knew this was her post orgasm desire speaking. My fingers were still in her arse, moving slowly back and forth but now I took them out and whispered.\n\n\"Turn over then Dana love.\" Again she did languidly as I moved aside. She opened her legs for me but I just stroked her cheek. \"We need to raise your arse Dana if you want it like this?\" It was a statement and a question. \"Lift up your bum!\" She did and I piled up a couple of firm pillows under her fulsome cheeks. This lifted her arse and would make entry easier for her.\n\n\"It feels strange!\" she said with a smile but she settled down into the pillows.\n\n\"Pull your legs back,\" I said as I lifted and parted her legs. She did and was now completely open. Her pussy was soaking wet, her juices dribbling down across her glistening anus. I bent my head and sucked her vaginal lips again, reveling in the taste and odour of her arousal. Dana groaned loudly as I found her clit again and sucked it hard.\n\n\"Oh god!' was all I heard as she shuddered again. I quickly knelt up and pushed my cock gently between the swollen lips of her vagina. \"I thought . . .!\"\n\n\"Yes,\" I whispered, \"oh yes Dana but this first -- to bring you on!\" I filled her cunt then in one drive deep into her body. Thighs clashed again and again as I fucked her pussy long, hard and deep. It didn't take long before she was calling my name again and shuddering in another climax. I fucked her through it then, withdrawing my cock and anointing it with copious amounts of lube, introduced the tip to her trembling arsehole.\n\n\"OH MY GOD!\" she exclaimed as I pushed gently into her. Her anus, that sensuous rosebud, opened and accepted the head of my cock. Her eyes were wide open, focused on my face as the glorious initial pleasure of her sphincter gripping me registered.\n\n\"Yessss!\" she sighed softly, \"yessss!\" I was still, watching her face for the reaction to my irregular intrusion. Slowly a smile crossed her features. \"Go on Mike -- please! I want it!\" I pushed forward and two inches of my cock entered further into her tight arsehole. Her eyes widened even more and her mouth formed an almost perfect 'O' of surprise [although she must have remembered the feeling from the first time]. I looked down and saw my cock spearing her cheeks, her anus had disappeared, driven in by my erection.\n\n\"More?\" I asked quietly.\n\n\"Oh yes, yes! More!\" Another two inches -- she had well over half my cock in her arse now, just before I widened. She gasped and I saw a flash of discomfort cross her features, wiping the smile away. I quickly withdrew. It's necessary to do this to ease the discomfort on the sphincter muscle. I stopped with just the tip of my erection breaching her anus. \"Don't stop Mike,\" she said, \"please. It's OK now -- really. It just . . . for a bit. Please,\" she smiled up at me sexily, \"fuck my arse.\" She knew!\n\nI reached for the lube and squeezed some more onto my cock then pushed back into her arsehole. It was exquisite! Tight, hot, and slippery. A velvet heaven that seemed to caress my cock. I was soon moving slowly in and out, just fucking her arse with 5 inches of cock; saving the wider part and the rest until she was really into taking my cock in her arsehole.\n\nDana was smiling, her eyes now closed, and muttering a soft series of \"Yesss! Do that. Oh yessss!\" It seemed that all the discomfort had, for the moment, abated. After a few minutes of this it was time to give her all of me so I slide my full 7 inches into her willing rectum. Her eyes opened and a loud gasp escaped from her lips as my thighs met her cheeks.\n\n\"OH FUCK! Owwwwww! Big, so bloody big!\" I was still, frantically trying to hold on to my desire to fuck her hard and fast. Obviously, however, this was hurting her again.\n\n\"Dana! Dana!\" She seemed not to be hearing me, lost in the mixture of feelings emanating from her arsehole. \"Dana -- are you OK?\"\n\n\"Oh god! Yes, yes. It just . . . You're so big!\"\n\n\"Not really,\" I said softly, \"it just feels that way!\"\n\n\"I know. I know. Don't stop now -- please. I know it will be OK.\" She smiled again and I felt her rectum squeeze my cock. She noticed my expression of surprise. \"See! Now do what you did yesterday -- make me cum! I want to feel it again!\"\n\nI smiled down at her and began to move. Slowly at first. Long, deep strokes that almost took my cock out of her then back. All the time watching her face as she grew used to the invasion of her rectum. This was slow seduction. I wanted to last now, last for long enough to give her orgasm after orgasm. To let her feel the pleasure of a cock in her arse -- to make her want it again and again. I switched my view to my cock leaving then entering her arsehole. Watched the tight ring of her sphincter appear to not want me to leave as I withdrew then disappear as I pushed back. I teased her anus with my cockhead, bringing low, soft moans from Dana and a languid smile.\n\nI began to speed up as I noted her orgasm approaching, fucking her harder now, my thighs slapping hers. Suddenly her whole body shuddered. Her anus and rectum held my cock deep inside in a rippling grasp.\n\n\"Oh fuck -- YES! YES! YES!\" she cried as her eyes opened and gazed into mine. \"OH YES! Fuck me Mike. Please fuck me. I want it again. Please!\" I knew then that anal sex was always going to be a special thing for Dana. I knew women like that. Women whose anal orgasms were more intense than vaginal and some women who actually preferred their arses fucked.\n\nI slowed again, giving her time to come down from her high, then bent and kissed her lips. \"Good?\" I asked softly.\n\nBreathing heavily she whispered her reply. \"Oh yes, yes. It was better than yesterday. Oooooohhhhhhh -- yes do that!\" I was moving my cock in her arsehole very slowly, gently, letting her feel the whole length sliding over her anus and into her hot and tight rectum.\n\n\"Dana, Dana, your arse is heaven!\" I whispered, my whole body reacting to the smooth clasp of her arsehole. \"Again?\"\n\n\"Yes, oh yes -- but can we do a different position?\"\n\nI smiled, \"Anything in particular.\"\n\n\"Oh dear! Oh keep dong that -- please!\" Now I was just using my cockhead to tease her anus -- a wonderful feeling that I really couldn't see. Probably a good thing because, I must admit, control was somewhat difficult. \"I don't know -- ooooooooo! You're the expert!\" I eased my cock from the heaven of her arsehole, lay beside her and whispered. \"Spoon!\" She smiled then rolled on her side.\n\nSpoon is good because you can caress and kiss back and shoulder as well as breasts but you can't get quite as deep. I moved close to her and, cock in hand, pressed the tip at her anus. She reached back and lifted the cheek of her arse to ease entry. \"You've seen this before,\" I asked with a laugh.\n\n\"Mmmm,\" she murmured, \"it looks like fun!\" I began to gently fuck her arse in this position, only half my cock sliding across her anus and into her rectum. Dana moaned softly, \"Yessss! Oh that is GOOD. More!\" I pushed deeper as she lifted her leg to facilitate even deeper entry and fucked her hard. It was becoming too much for me.\n\n\"I want you face down,\" I whispered breathlessly, the animal close to the surface. I wanted to ravage her arse. She looked back at me surprised.\n\n\"Face down?\" I wanted her so much like that -- my favourite position -- but it was a struggle for the recipient! I felt the conflict inside -- to just 'take' her with no thought for her or consider her comfort. \"Oh god -- keep on doing that. Aaaagggghhh!\" The latter won and my solution was to cum!\n\n\"You want my cum in your arse Dana? Tell me. Tell me how much you want it!\" Language is so, so important and I knew that, if she began to talk like this, it wouldn't take long. \"I want to Dana, I want to cum in your arse. Deep in your body. Tell me!\"\n\nDana moaned loudly and turned her head back. \"Fuck me Mike, fuck me in the arse. Aaaaaaaggggghhhhh! Yes, yes! Cum in me. Cum in my arse. Fill me! OH GOD!\" It was enough. I drove into he arsehole and held my cock there. There, swollen in desire, it pulsed cum into her bowels. Her anus and rectum, seeming to react to my orgasm, rippled and squeezed, milking cum from my body. Dana shuddered and screamed softly. My whole body tingled as I felt mr essence shoot aloing my cock and into her.\n\n\"Dana,\" I called loudly, \"oh fuck! Dana, Dana, Dana!\" Each call of her name was mirrored by a pulse of spunk into her arse. It was intense. I needed to kiss her shoulder, bite even, take possession of the gorgeous young woman whose body was taking my cock and my spunk.\n\nFinally it was over.\n\nI held her close as she recovered from what seemed to have been as intense an orgasm as mine. My cock, softening slowly, was not immediately expelled from the velvet heaven of her rectum snuggled up close to her as I was. I was happy to just hold this gorgeous young woman who had willingly given so much of herself to me. I was a little distressed with myself for almost losing control and abusing her trust but now I kissed her neck and shoulders running my hand over the curves of her body, enjoying the smooth skin. After a while Dana moved away an rested on her back looking up at me.\n\n\"What is it?\" she asked quietly apparently sensing something was disturbing me. \"You didn't hurt me.\" She smiled, \"It was good, so good. Much better than yesterday.\"\n\nI smiled wanly down at her. \"I guessed,\" I said softly. \"It was fantastic Dana love.\"\n\n\"What's wrong then. You seem upset.\" I believe that honest is always best in the bedroom so I sighed and told her.\n\n\"Dana love, that position . . . well it's easily turned into my favourite . . .\"\n\n\"Your FAVOURITE!\" she interjected.\n\nI smiled, \". . . yes, my favourite. Face down on the bed, legs together.\"\n\n\"Oooooooo!\" she said with a wicked smile, \"that sounds very interesting!\"\n\n\"It is,\" I laughed wryly, \"but, Dana love, it is not easy -- would not be easy -- for you. It's quite a trial for the lady and,\" I added with a touch of embarrassment, \"I do tend to get a bit carried away.\"\n\n\"Why isn't it easy?\"\n\n\"Well, with legs closed you would be tighter and the angle is different, down and in . . . heck,\" I laughed, \"this is strange -- discussing this with you&gt;\n\n\"But we can, we are -- and that's good because I want to do that for you!'\n\n\"Dana, Dana, love, you don't have to.\" I smiled, \"You've given me so much pleasure since we met and I don't want to hurt you. Dana,\" I reached and held her, \"I don't want you to leave tomorrow and feel . . . I don't know . . . used I suppose. I want you to leave having enjoyed everything we did. Leave and want to explore even more.\"\n\nShe reached up and pulled my lips to hers. \"You have you know. I have enjoyed everything -- and I want more. You are so kind and gentle that I'm not afraid. Even if you hurt me a little,\" I shook my head. \"No, no, even if you do it doesn't matter because I know you only do what you have to for me to enjoy it. So I want that -- I want YOU to enjoy it and I know that, if you do, I will as well.\" She kissed me again. \"You have taught me so much about pleasure. Not to be shy in here,\" he arm swept around the bedroom, \"and I know that, when I leave tomorrow, I will have had the best weekend of my life!\" I must admit to a burst of sadness -- she was leaving tomorrow!\n\n\"I think you have grown in the last couple of days?\"\n\nShe sighed, \"Yes Mike darling, I think I have,\" then she laughed, \"for the better I think. I was a fairly innocent young thing on Friday -- now I feel like a woman!\"",
        "I laughed, \"I don't think things happen that fast!\"\n\n\"Oh but they do Mike. I've seen everything we've done -- and some things we are going to do,\" she added with a wicked smile, \"at our 'girls DVD' nights when we watch porn but I never did anything other than straight sex and a little . . . you know sucking. Nobody ever did that to me like you do -- not my pussy or my arse. It's so heavenly. And my arse! I never knew, never realized, how good it could be. No Mike love,\" she ended solemnly, \"I feel 'grown up' now.\"\n\n\"Well,\" I said with a smile, \"you certainly look it laying there with my spunk in your arse!\"\n\n\"You are a terrible man!\" she laughed sitting up. \"Now I have to go and clean up.\" She stood and walked to the bathroom. I watched her gorgeous arse sway as she walked and saw a tiny trickle of spunk as she did so. She stopped at the doorway and looked back over her shoulder. Completely at ease with the situation she smiled, \"Like what you see?\" and she wiggled her arse provocatively.\n\n\"Oh god Dana,\" I laughed, \"would that I were 40 years younger and I would fuck you there again right now!\"\n\n\"Mmmm, now there's a thought,\" she responded with a great big pout, \"but I suppose I will have to wait til this afternoon!\" She giggled and disappeared into the bathroom.\n\n~\n\n11. A Short Interlude:\n\nIn which we lunch, visit the park and the Conservatory\n\n~:\n\nI followed a few minutes later and we enjoyed a shower together -- just a shower this time although it was always a pleasure to soap Dana's curvaceous body! After drying off and donning robes we sat on the balcony overlooking the harbor drinking and chatting, trying to decide what to do with the rest of the day.\n\n\"I suppose YOU need a rest,\" she asked jokingly with a big smile.\n\nI laughed in response. \"Well, yes I probably do. That's one of the problems us old guys face.\"\n\n\"Quality not quantity,\" she laughed in response.\n\n\"I like to think so but only you can judge!\"\n\n\"Oh well,\" she said with a coy expression, \"not quite sure yet --we will have to see how things go!\"\n\n\"Minx, I should tan your arse!\"\n\n\"Mmm, that sounds like fun but I think I would rather you fucked it,\" she added with a sexy grin.\n\n\"You make me wish I were 30 years younger,\" I laughed.\n\n\"But then we wouldn't have met would we!?\"\n\n\"Minx! Now, what shall we do?\"\n\n\"It's such a lovely day,\" she answered, \"why don't we just go to the park and the Conservatory?\" Well, they were both only a short walk away and I was sure that we would both enjoy the early summer sunshine.\n\n\"Good idea!\"\n\nI dressed quickly in slacks and a golf shirt and waited for Dana to get ready. I guessed that she would want to look her best so I wasn't surprised that she took some time but there was no hurry. When she finally came out my eyes nearly popped out of my head.\n\n\"FUCK Dana . . .\"\n\n\"Hope so!\" she interjected.\n\n\"You can't go out like that -- you'll cause a riot!\"\n\n\"Good,\" she laughed, \"but I bet I'm wearing a lot more than most of the girls out there!\" Well! She was 'dressed' in a long-sleeved, bolero type top of a darkish pink chiffon which left her midriff, from breast to tummy, bare. Her lovely breasts only just covered and, I assumed, supported by an almost invisible bra. Her pants, blue denim hot pants with frayed cut-offs, sat low on her hips almost emphasizing the soft dome of her bare stomach. Her open sandals had 6 inch heels with 2 inch platforms. Her one piece of jewellery was the black choker I had bought her with a small diamond pendant which sat just below. She looked STUNNING! I hadn't seen everything we had bought together and I knew that she had intended to surprise me with most of the clothes.\n\n\"Heck Dana, you look bloody fabulous!\" How would it feel, I thought then, wandering through the park with this vision of loveliness?\n\n\"I like looking good,\" she said. \"Ma always said, 'if you've got it, flaunt it!' so I do when I can.\"\n\n\"Well you certainly do and you are,\" I laughed.\n\n\"You don't mind?\"\n\n\"Mind, how could I possibly mind. Every guy in the park is going to be wondering whether I have an enormous cock or an enormous bank balance or both,\" I laughed.\n\n\"Well, I am sure you don't have either and I am VERY happy with what you do have!\" She stood close and kissed me, her shoes bringing her up to my height. I held her tightly and we almost didn't get to go out as she pressed into me.\n\n\"Naughty!\" she giggled as she pulled away, \"I thought we were going out!\"\n\n\"OK, OK, yes -- we're going out!\" I said with mock reluctance, \"but when we get back . . .!\" She raised her eyebrows and smiled provocatively. \". . . when we get back I am going to fuck the arse off you!\"\n\n\"Mmmmmm! Yes please,\" she laughed and led the way out, her gorgeous arse, accentuated by the high heels and the hot pants, swaying sensuously. We walked around the Opera House and sat watching the harbor and the bridge highlighted by the early summer sun. It was crowded with locals and sightseers -- a pretty normal Sunday. After a while we had some lunch at one of the cafes around the harbor then wandered across to the park. She was right! She was wearing more than many of the young women on display -- and I use the word 'display' on purpose! I have to say though, that none compared to the lovely woman I had on my arm! And she was 'on my arm'. She made it abundantly clear that she was 'with' me despite all the admiring glances that her sensual appearance engendered. It's funny but many women do not realize that clothed they are sexier than naked -- and I mean women with great bodies as well. Dana stood out because she was dressed -- but dressed provocatively.\n\nAfter sashaying around the park we visited the Conservatory and saw the wonderful collection of orchids that they have there. I really did miss my camera just then for I could have got some wonderful pictures of Dana with them. I got some later but I didn't know that then.\n\nThe afternoon passed pretty quickly and we decided to eat dinner before returning to the room. \"We don't have to go out anymore then,\" Dana said with a wicked grin, \"and you can pay attention to me!\"\n\nI laughed, \"I can't think of anything I would rather do!\" So we had dinner, fairly light to be honest, and were back at the hotel around 7. As soon as we got through the door Dana turned, held me tight, and kissed me long and hard.\n\n~\n\n12. Back at the hotel:\n\nA semi-public fuck; some fun and Dana gets arse-fucked face down:\n\n\"I want you!\" she whispered quietly, \"I want you!\" and she pushed her body against mine provocatively. I ran my hands down her back, chiffon first then bare skin: soft, sensuous bare skin. Then over the swell of her arse cheeks and the tight material of her denim hot pants. There is no doubt in my mind that this outfit was sexy as hell because now my hands found the soft skin of her thighs. Dana was pushing against me, her tongue meeting mine, almost consuming me.\n\nI felt I needed to calm her down a little -- the hot pants had obviously been rubbing in interesting places. \"Balcony,\" I said with a smile. She raised her eyebrows quizzically. \"You'll see. Just a little experiment!\" She smiled, turned, and sashayed to the balcony, her arse swinging provocatively. We were three floors up so could look down on the harbor, the bridge, and the opera house easily. We could also see the crowds below -- I wondered whether they could see us up here!\n\nShe turned and again melted into my arms. My cock was standing at full attention having been tempted by her glorious arse and the definite possibility of filling it later on: a fact which she obviously noticed as it pressed into her tummy. \"Mmmm! I think I want that!\" she whispered with a sexy smile.\n\nMy hands enjoyed the soft skin of her back and then wandered over the wonderful curves of her bottom cheeks as I whispered in return, \"Turn, lean over the balcony and stick out your arse!\"\n\nHer eyes widened in surprise. \"Out here! People will see!\"\n\nI laughed. \"No. The panels are opaque glass so nobody will be able to see anything -- but you will be able to see them! Interested?\"\n\nShe giggled -- and nearly got fucked there and then with no finesse! Her giggle has that effect on me! \"It will be exciting,\" she said as she turned and leaned on the waist high balustrade -- and she did stick her arse out. I almost took my breath away as she seemed to naturally dip her back. I didn't want to fuck her arse just now, she had not prepared, but it was a great temptation!\n\nI reached round to her front, unzipping her hot pants and easing them down. She looked back at me as I did so, her eyes heavy with desire, then lifted a leg so I could take them off. I just had to kneel and pay homage to her wonderful arse. I kissed the cheeks, licked and stroked them, then delved between. She had on the skimpiest of thongs which just cupped her pussy with only a thin line of material between her cheeks. Shifting it to one side I had access to her gorgeous pussy. It was like a flower waiting to open -- already slightly wet! Above the tiny opening of her anus, just a little reddened by my previous intrusions, but still tight and unbelievably desirable. Dana gasped as my tongue found her vagina, sucking and licking, probing as deep as I could. Her gasps and noises of approval continued as I licked and sucked for a while then ran my tongue up and over her tender anus. Then another gasp, even louder than before, as she pushed her arse back into my face.\n\n\"Oh god Mike! Lick my arse! Please!\" It was clear that Dana had become very sensitive and had quickly learned to enjoy the attention I paid to her tight anus. I wasn't about to pull away, wanting her to be really ready for her arse to be fucked later. Not now; now just her pussy! As I licked and probed her tight sphincter I reached down and undid my slacks, easing my erection out gently. I stood and presented the tip of my cock to her nether lips.\n\nShe looked back over her shoulder, eyes heavy, and with a wicked smile. \"Pussy?\"\n\nI smiled back keeping still. \"Mmmm! I'm saving your arse for later.\"\n\nShe smiled then her eyes widened as I drove home. Dana bent her legs slightly and thrust her bottom back into me. We quickly got into a rhythm so that I could get as deep as possible. She was making a lot more noise than in the bedroom and I wondered whether it was the excitement of knowing there were people about [although three stories down]. With my hands on her shapely hips I controlled the wonderful standing fuck. I held her still and fucked her hard and deep then pulled her onto my cock for an even harder pounding. I think she came twice and, I am sure, the people below must have heard her scream as the second massive orgasm hit. I was saving my, probably last, cum delivery for her arse so I controlled my own feelings by ensuring that she enjoyed every inch of cock.\n\nAs she finally came down from her high she looked back over her shoulder. \"Oh you are a bastard!\" she smiled. I laughed; her Aussie accent could never make that an insult.\n\n\"True,\" I laughed, for it was, then added, \"And you are a sexy minx Dana. More?\" I asked mischievously as continued to fuck her pussy.\n\n\"No, not just now!\" she said with a laugh. \"Don't want you wearing yourself, or that . . .\" she nodded to her rear, \". . . down. I want it in my arse again. I don't know why,\" she added pensively, \"it's just that it felt so . . . good!\"\n\n\"And you will get it there,\" I smiled, stroking her hips and arse. Pulling back from her pussy I laid the length of my cock between her cheeks and began a fucking movement, sliding the length across her sensitive anus.\n\n\"Oh you bugger. Oh yes, do that. God I want you there!\" To be honest the feeling was wonderful and it was all I could do not to bugger her totally and completely like this. Standing anal is fabulous but she was not prepared and, despite how much she appeared to enjoy a cock in her arse, it was early days for her. I didn't want to spoil her future enjoyment by pushing too hard early on. I could wait and, anyway, I was going to take her in my favourite position [and hope that she enjoyed it as much as I did].\n\nI pulled away and turned her. We kissed: a passionate and lengthy kiss that left my heart pounding. I didn't want to let this young woman go! \"Do you want to shower?\" I whispered as we broke the kiss.\n\n\"Mmmm! I need to get ready for this lovely thing . . .\" she gripped my cock, \". . . to go in my arse!\" So we showered together, just rinsing the dust of the day away, before drying each other. She followed me out of the bathroom smiling and fetched a carrier from the wardrobe. \"For you,\" she said with a wicked grin as I stretched out in the bedroom. \"A surprise!\" and she disappeared into the bathroom.\n\nI could hear her in there singing softly to herself as she prepared for me. I took a deep breath: for ME! Just one more night with her! My mind was ranging over possibilities. Divorced, I had no real ties back in the UK. My business, primarily concerned with financial dealing in the City of London, could be managed by those I left in charge with monitoring by me from afar. I knew that, as a visitor, I could only stay in Australia for 6 months at the most but why not do that? If I did would she stay with me? She was old enough although, at 22, she still lived with her parents there would be no particular objections should she decide to leave them for a while. Would the age difference put her off?\n\nI knew that I could rent an apartment on a short lease [or a long one if I left Dana there] without much of a problem. I tossed the possibilities around in my mind. She was so lovely! To be with her for that length of time! There could be no long term commitment, I knew that, but for a short time we could have a lot of fun! I knew she would have a long recess in the 6 month period so we could travel -- the possibilities seemed endless!\n\nI made my decision; I would broach the subject with Dana and see what she said. After all, faint heart never won fair lady! That would wait, however, until this evenings 'entertainment' had finished. So now I just lay there and contemplate this wonderful young woman. I was in the middle of a reverie when the bathroom door opened. I turned me head to look and was struck dumb, openmouthed, in surprise!\n\nShe was wearing a corset, dark pink in colour with clips at the front. Sus-penders held up black stockings. Her breasts were free, nipples erect. Her blonde hair fell to her shoulders loosely. 5 inch heels increased her height and showed off her lithe figure. She smiled and turned slowly waving the pink thong in her hand. Her arse was bare, framed by the base of the corset, the suspenders, and the stocking tops. Goodness knows how she had laced up the back but she had! Then she was facing me. I could see the soft blonde hair of her sex between her legs. Her smile was broad and enticing. She said nothing, just stood by the door.\n\n\"Oh my god!' I managed finally as I moved off the bed. \"You are a dream, an angel!\" She smiled at that and turned again, looking back over her shoulder. I had to take several deep breaths to control my racing pulse. \"Dana, Dana love. You are truly beautiful!\"\n\n\"It's for you Mike, all for you!\" she said and smiled invitingly. \"Take me!\" she whispered and held open her arms.\n\nI took another deep breath and she came to me, her soft curves pressing against my naked body. I could feel the silky cloth of the corset against my chest, the nylon of her stockings against my legs, and her hair brushing my face. We kissed. A soft, gentle kiss which turned more passionate as heat filled both our bodies. My cock pressed into her and seemed to break to romance of the situation. Her hands delved between us and captured my erection.\n\n\"Mmmmm!\" she murmured then added, smiling, \"is this for ME?\"\n\n\"OH FUCK Dana, yes. Every bloody inch!\"\n\n\"Good,\" she said softly as she began to stroke me with one hand, the other cupping my already tightening balls. Slowly she knelt before me and, eyes fixed on mine as I looked down at her, took my cock into her mouth. Her tongue washed my cock head as her lips formed an 'O' around its girth. She seemed to revel in the taste of me for I was leaking copious amount of pre-cum into her mouth. For me? I was close to heaven. A beautiful young woman kneeling at my feet offering all -- I would not abuse that offering! Dana was moving her head now, her lips sliding along my cock. Her tongue continued to wash the whole length. I had to stop her: much as I would have liked to fill her mouth with cum again I knew that I would not be able to 'rise' again. Viagra cannot work miracles!\n\n\"Dana, Dana love. You will have to stop.\" Her eyes found mine again and her eyebrows raised. \"Christ Dana, your mouth is heaven . . . FUCK!\" She sucked hard and licked, smiling around my cock. \"Dana! Stop, please! I want to fuck you!\"\n\nShe pulled her mouth from my cock and stood. \"Mmm, I want you to -- so I had better stop.\" She gazed into my eyes. \"Make love to me!\"\n\n\"There is nothing that I would rather do,\" I whispered as I led her to the bed. \"lay back!\" Dana languidly fell back onto the bed then moved to the middle.\n\n\"Make love to me!\" Her eyes were full of desire as I moved to comply with her desires. I knelt beside her and kissed her lips, her cheeks, her eyes, her neck. Dana sighed softly as I made love to her wonderful body. Slowly I kissed down to her breasts, licking and sucking her erect nipples.\n\n\"Oh god! Yessss!\" she cried as I sucked her nipples and my hand found her sex. I stroked her pussy gently, feeling the wetness already seeping from her vagina. \"Please! Please! I want you so much!\"\n\n\"Soon,\" I whispered as I moved down her body. My mouth found her mount, sucking the soft fur gently, before tasting her sex. I opened her legs, knelt between, then bent my head to her cunt. My tongue found her clit, already swollen in her increasing passion. I licked her clit, sucked it inside my lips, used my tongue to tease it over and over as I heard her moaning in pleasure. A long, low groan escaped her lips as she shuddered in passion; liquid flowed. I relished the taste of her as my mouth moved down to her cunt lips. Sucking them inside, I probed deeply with my tongue: again and again, washing her nether lips with my saliva, tasting the very essence of her. She shuddered again as my tongue moved down further to her anus: her still tight sphincter. I probed, licked, tasted her, and pushed against the muscle with the tip of my tongue. She opened and took me inside.\n\n\"Oh please! I want to feel you inside me Mike: deep inside me! Please!\" I moved up and took my solid erection in hand, pointing the tip of my cock at her vagina and sliding into her.\n\n\"YES!!! Oh yes! Fuck me Mike, please fuck me!\" I did, delving deep inside her, thrusting a full 7 inches of cock into her. She shuddered as I began to fuck her hard and deep: all out, all in. Our eyes met and she smiled in her passion. \"It's wonderful! Do it please. Don't stop.\"\n\nSlow. Fast. Shallow. Deep. Despite the velvety heaven of her soft wetness, I had almost shut off my desire to cum, holding on for the final act deep in her arse but I wanted to last as long as possible so that she would remember this last for a long time. I lost track of time then, making love to this lovely young woman. I watched her face, her eyes, as orgasm after orgasm rocked her body. I gloried in this ability to do this for and to her: to give her pleasure and show her the power of her body.\n\nI sat back finally, the tip of my cock still in her pussy, and smiled down at her. A soft sheen covered her breasts. She licked her lips enticingly then smiled back. \"Take my arse,\" she said softly, \"any way you want!\"\n\nI took a deep breath as my cock twitched. \"Then kneel, Dana love, kneel at the edge of the bed.\" I shifted back to allow her to move which she did, languidly, and knelt with her arse thrust back.",
        "\"Like this,\" her smile was full of coy wickedness. \"Take my arse,\" she said again, \"any way you would want!\" A woman like this is very dangerous. It can bring out the beast in a man and I was having trouble holding back the demon that told me to 'use' her without thought. I stroked my cock, only inches from her face and she smiled up at me. \"Please! I want you so much!\"\n\nThis last seemed to calm me and I smiled back at her. \"Yes,\" I replied, \"but only as you would like as well.\" I moved off the bed and knelt, my face level with her arse. I worshipped her than, my tongue and mouth working over her wet pussy and tight arsehole. I could hear her soft groans of pleasure as my tongue pushed into her. Standing, I reached for the lube and squeezed a goodly amount onto her sphincter using my finger to work it inside. More lube and two fingers brought a loud groan from Dana's lips: a sound which increased as I rotated my fingers in her arsehole.\n\nI leaned forward. \"Yes? Dana love.\"\n\n\"Oh fuck yes! Fuck my arse Mike. Fuck my arse hard!\" I coated my erection with lube then my cock was at her tight ring. I pushed gently into her, breaching the constricting muscle. Dana gasped then relaxed. I fed her more of my cock, slowly, oh so slowly, until she had 5 inches inside her tight rectum. Hot: hot and silky. Tight along the whole length of my cock: her sphincter gripping. Out, then gently back: back and forth. My hands found her hips and I moved her with me. Dana didn't seem to mind: to be in any discomfort. I thrust home feeling my thighs hit the cheeks of her arse.\n\n\"Oh my god, YES. It feels so funny. Aaaggghhhh!\" I was sliding in and out now, fucking her tight arsehole slowly. As before, I enjoyed watching the tight muscle of her anus sliding along my cock. I was holding myself in control for this was only the beginning! I filled her completely then, holding her on my cock, leaned forward.\n\n\"Do you want it Dana? Want it all?\" She bent her head backwards and our lips met.\n\n\"Yes,\" she said breathlessly, \"yes! Everything! Fill my arse. Oh god this is so wonderful! I never knew, never realized, it could be like this. FUCK MY ARSE!\" This was almost too much. I nearly lost it then and filled her bowels with spunk but managed, by staying absolutely still, to hold on.\n\n\"What?\" she said feeling me completely still and buried inside her arse.\n\nI took a deep breath as the crisis passed. \"Your arse is heaven Dana love, absolute heaven. I just had to stop for a minute. I want it to last!\"\n\n\"So do I,\" she responded with a big smile. \"It feels so big. Big and funny. Funny but good.\" I began to pull out slowly. \"Oh god but that feels unbelievable. Please don't stop Mike. Make love to my arse slowly.\" I did, pulling almost all of my cock from her slowly, watching her anus slide along my cock. Then back, over and over, slowly and gently.\n\n\"Oh yes, harder now Mike love. Harder.\" I reached for the lube and added more on my cock as it slid inside her then, hands on her hips, I began to fuck her hard, fast and deep. It didn't take long before she screamed softly and her body shuddered. I thrust deep and held still as her rectum and anus gripped my cock tightly through her orgasm. As she came down I leaned forward again.\n\n\"Ready?\" I whispered.\n\nShe turned her head, \"Yes, Yes, ready! Do it Mike love, take me how you want!\"\n\nI pulled out of her wonderful arsehole. \"Forward Dana, in the middle of the bed, face down, legs together.\" She looked back over her shoulder and smiled.\n\n\"Yes sir,\" she said with a giggle.\n\n\"Minx! If you really want to play,\" I said as she lay face down, \"you can reach back and hold yourself open!\"\n\n\"Mmm, you are a dirty old man!!\" she laughed but she did reach back and hold the cheeks of her arse apart. \"Like this?\"\n\nI knelt in position astride her closed legs. My cock felt like an iron bar as I looked down at her laying there. I don't suppose she realized how much she had come to trust me for, like this, she was completely at my mercy. Not that I wanted to do anything other than fuck her arse like this. \"Ready?\"\n\n\"Yes! Yes please.\"\n\nI bent my cock down to her reddened arsehole and pushed gently forward. For me, this position is the absolute. I could see clearly the tip of my cock breaching her still tight ring. She groaned as the head slipped inside the cried out softly as I pushed a couple of inches down into her.\n\n\"OK Dana love? Is it hurting?\"\n\nShe took a deep breath. \"I don't know! It feels different. Bigger. I feel so full!\"\n\n\"I can stop.\"\n\n\"No! No! I don't want you to. I want to do it like this. For you.\"\n\nI eased my cock back and forth very gently and slowly the squeezed more lube onto my cock. Dana groaned softly as I pushed more into her arsehole. It was so, so difficult to hold back here. For me this is as close to perfection as one can get. The angle is so, so different and the feeling tremendous. I am not at all dominant in the bedroom -- I believe that sex is a partnership -- but I must admit that there is something of the 'control' element about this position. As I fed more cock into her tightness I leaned forward and took my weight on my arms altering the angle of my cock in her arse: driving down rather than along.\n\n\"Oh my god!\" she groaned softly. \"So big -- it feels so big!\"\n\n\"Too much?\" I whispered softly then kissed her neck.\n\n\"No! No! Don't stop. I like it -- really!\"\n\nI began to fuck her arse now, almost all my cock in her rectum although it is not possible to get quite as deep like this. My thighs hadn't met her arse cheeks yet but I was thrusting inside her. My passion was increasing now. \"Hold yourself open Dana, open your body to me!\" Her hands had slipped to the side. Slowly they moved up between us and pulled her cheeks apart. I covered her now, my body resting on hers and my hips thrusting my cock down into her. She was taking almost every inch and I was losing it now in the passion of the moment, losing sight of her pleasure. My whole being was focused on my cock in her arse. So tight, so hot around my erection: she was totally mine now and I was using her. Again and again I drove my cock down into her. I could hear her moaning and sighing then an immense shudder rocked her body underneath mine. Her rectum gripped my cock. It was enough. I drove deep and held my cock there as it pulsed and shot spunk into her bowels. Again and again, swell, pulse, swell, pulse. Each jet seemed to raise Dana's orgasm to another level as her body rocked.\n\nFinally it was over. I was spent. I rolled sideways off Dana and lay there almost regretting my behaviour. It is so, so difficult to consider the lady in that position and I immediately regretted that I hadn't. Dana rolled on her side and faced me. She did not seem bothered.\n\n\"Oh fuck Mike, that was . . . fantastic! Better than anything before.\" She reached out and pulled my lips to hers. \"Thank you! Thank you for teaching me how good this can be. When you . . . you know . . . came inside me it was as if my whole body was on fire: n fire with pleasure.\" She looked down at my spent cock. \"I suppose HE is past recovery?\"\n\nI laughed quietly. \"Dana love that was so, so intense. Yes. I am sorry but I think I have shot my bolt -- both literally and figuratively!\"\n\nShe giggled, \"Mmm, and some bolt it was. I felt it. I can still feel it inside me. Ooooohhhhh!\"\n\n\"What?\"\n\n\"I'm leaking!\" She quickly moved to the bathroom returning a couple of minutes later. She still looked fantastic and I immediately regretted my age and inability to continue. Viagra can only do so much. In truth, however, I did want to slow down now and talk to Dana.\n\n\"Shall we shower? I am all sweaty.\"\n\nShe giggled, \"I'm not surprised after that!\"\n\n\"You are OK Dana?\" I asked softly.\n\n\"Sore,\" she said softly.\n\n\"Oh shit! Dana, I'm sorry.\"\n\nShe smiled. \"I don't mind. I enjoyed every moment. I won't forget this weekend Mike, for a long time.\"\n\n\"I didn't want to hurt you. I wanted you to enjoy everything we did.\"\n\n\"I did Mike, really. It'll go away, I know. I wouldn't have missed this for anything.\"\n\n'Come here,\" I said softly, \"let me hold you.\"\n\nShe came into my arms and we lay together on the bed. Time to see how she felt. \"Dana love,\"\n\n\"Mmm,\" she murmured quietly.\n\n\"I'm here for three weeks.\"\n\n\"Oh, where are you staying?\"\n\n\"With my brother. Well I was.\"\n\nShe sat up, \"You were?\"\n\n\"Yep, I was.\" I turned towards her, fixing her eyes with mine, \"but after this weekend I'm thinking of staying for six months!\"\n\n\"Why?\" she asked coyly for I am sure she knew the answer.\n\n\"Because I bumped into you Dana.\"\n\nShe giggled, \"I think you did more than 'bump' into me!\"\n\n\"OK,\" I laughed, \"I guess I did! Well . . .\" I continued hesitantly, \"I don't really know how to say this Dana . . .\"\n\nShe smiled softly, \"You haven't had that problem up 'til now.\" Her eyes stayed fixed on mine.\n\n\"If I did, would you stay with me?\" It came out in a rush but at least it was out!\n\n\"Stay with you . . . Where? How?\" Well, she didn't say no!\n\n\"I was just thinking,\" I smiled, \"and imagining . . . I could rent an apartment near the college so . . .\" I was strangely hesitant considering what had happened over the weekend.\n\nShe thought for a few moments. \"I don't know Mike. I'm not sure how mum and dad would take it.\"\n\n\"It wouldn't be permanent,\" I continued, \"no commitment.\" I laughed, \"I'm to old for you Dana love. Just six months of fun like we just had.\" She raised her eyebrows quizzically and smiled. \"OK! OK! Perhaps not quite so much sex, I need recovery time! Seriously though Dana . . . I would take as 12 month lease and pay for it. You could stay on after. Give you a chance to be on your own.\"\n\nShe looked pensive then she smiled. \"I like the idea of lots more of this . . .\" her arms described to arc of the bed, \"I have enjoyed myself so much. I would like to think about it Mike but I do like the idea.\"\n\n\"Good!\" I said with a smile, \"I can't really ask for more. Shall we shower now?\"\n\n\"Yes,\" she replied with a soft smile, \"I think I need a rest!\"\n\nI laughed, \"As do I! You go and tidy up, call me when you are done.\" I watched her arse sway enticingly as she walked to the bathroom.\n\nAt the doorway she looked back over her shoulder, \"I think I will you know!\" and she disappeared inside. I followed when she called and we showered and only showered. No play for we were both a little spent after the weekend. After the shower, to bed. It felt great to go to sleep with this beautiful young woman in my arms.\n\nI woke with the sun again and turned to see Dana still sleeping. I moved and kissed her cheek. It must have woken her for she smiled, reached up, and pulled my lips to hers. I knew that I had to get her to college by 10 am so I quickly checked the clock. Mmmm, 8.15. \"Time to get up Dana love.\"\n\n\"Make love to me again,\" she whispered, \"I don't care about the time!'\n\nEver the gentleman, I began by kissing down her neck to her breasts, throwing off the covers as I did so. God, she is beautiful! My mouth roamed the firm hillocks and nibbled at each nipple, biting gently as I passed over each one. Then down across her stomach to the soft hairs of her pubic mound. As I did so I felt Dana's hands caressing my hard cock. I heard a soft murmur of appreciation as she noted my erection then a groan as my mouth found her clitoris and sucked gently. I continued eating this gorgeous pussy for breakfast until I felt a soft shudder rock her body. I moved then to between her legs and, bending my head to her sex, sucked on her nether lips. I pushed my tongue as deep as I could into her wet vagina and licked. Then down to her anus. Red and a little sore I thought from the thorough pounding of the face down anal of the previous evening. I tried to sooth her there, washing the swollen muscle with my tongue, until another soft shudder rocked her body.\n\nAfter a few moments I raised my head and looked into her eyes. \"Make love to me. Please!\" I smiled and shifted my cock to her sex and pushed gently inside.\n\n\"Oh god yes!\" I pushed deeper. \"Oh yes, yes, yes. Please. Do that! Harder!\" This continued as I began to fuck her deeper. Slow at first but deep getting that marvelous feeling when my cock bottomed out inside her, thighs tight to hers. Our eyes locked then as I held myself deep inside. \"Fuck me Mike. Fuck me hard.\" I did then, pulling back and driving deep over and over. It wasn't long before she shuddered again, her legs gripped my waist, and she groaned aloud. I continued to fuck her through her orgasm then, as she came down, bent forward and whispered to her.\n\n\"Kneel Dana love. Doggy!\" I saw a look of apprehension cross her features and I guessed that she was sore at the back. I had no intention of taking her there unprepared. I may do that in the future -- if she stayed with me -- when she was used to anal sex. \"Not there Dana love: you need a rest from that.\"\n\nShe smiled. \"I want it again you know. I liked it a lot. I want you there.\" I took a deep breath. Dana had obviously enjoyed her introduction to anal sex. If she stayed I was sure that lots of fun would be had in her back door!\n\n\"And I want you there again,\" I said softly, \"over and over!\" She smiled, obviously happy that she had captured me with her bottom! Then she rolled face down, looked back and smiled.\n\n\"Like this?\"\n\nI laughed, \"Dana, you are a minx!\"\n\n\"I know,\" she said, \"but I do know you like minxes!\" With that she knelt up and thrust her bottom back. \"It's all yours!\" I guessed she was being provocative for she knew I wouldn't fuck her arse unprepared. I moved up to her and fed my erection into her vagina and thrust home.\n\n\"FUCK!\" she cried then, \"yes -- fuck me!\" as I did fuck her: hard, fast, and deep for some time. I think she came twice before I finally filled her sex with my last cum deposit of the weekend.\n\nWe both fell back somewhat spent and lay together for a few minutes. Then I was finally time to wind up the weekend. I ordered breakfast and we ate together, discussing the weekend all the time. Dana was full of what we had done, how much she enjoyed herself, and with the things I had brought for her. She decided not to take anything with her to her parents but would pick up some clothes from her friends after college. I would look after all the other stuff.\n\n\"I guess it will take some explaining when I get to my brother's,\" I laughed.\n\n\"I suppose so but I expect I shall need it!\" she said softly. I took a deep breath.\n\n\"Is that a 'yes',\" I asked holding that breath.\n\n\"Yes,\" she smiled, \"it is: a definite yes!\"\n\n~\n\n~~~\n\n~\n\nFini\n\n \n"
    ],
    "authorname": "Vitorio",
    "tags": [
        "anal",
        "cream pie",
        "oral",
        "straight sex",
        "swallow",
        "young"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/in-the-gallery-1"
}