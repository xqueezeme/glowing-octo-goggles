{
    "title": "The Second Booth at Horseshoe Diner",
    "pages": [
        "I would like to thank Francois101 for the editing. It is a tremendous help. \n\nFor newcomers, this is the 6<sup>th</sup> installment of what I'm calling the Criminal Affair Series, which started with the ten-part Criminal Affair. Order of stories for continuity is as follows. \n\nCriminal Affair (ten-part series) \n\nThe Sorority \n\nThe Irishman at the End of the Bar \n\nA Shoulder to Cry On \n\nA Perfect Match \n\nThe Second Booth at Horseshoe Diner \n\n- \n\nIf you have the time, stop by the message forums and check out the nominees for 2019 Novel/Novella of the year. Voting ends at the end of May, so make sure your voice is heard. \n\n- \n\nFriday - July 24, 2026 \n\n-Billie White- \n\nIt is a small miracle when both Nathan and I wake up before Daisy. A typical morning is me greeted with the big blue eyes of my four-year-old. I would blink a few times, and she will ask for breakfast before saying good morning. This morning I open my eyes and see my closet door. What an incredible change of pace. \n\nI roll to my side, and see Nathan lying flat on his back. He had kicked the blanket off in his sleep, but the edge of the sheet was resting on his stomach. I watch his chest rise and fall, and the outlines of the muscles on his abs. I see the morning stubble he will likely shave within the next hour. His infuriatingly long eyelashes. \n\nIn high school and college, I hated men like Nathan. Something about the testosterone infused nature of a guy like that rubbed me the wrong way. That was mostly my young feminist mind after reading Simone de Beauvoir's The Second Sex when I was a high school sophomore. Simone started a tidal wave of feminist reading material. I experimented plenty, but my sexual urges always defaulted to men against my best efforts. \n\nWhen I conceded that I was straight during my freshman year of college, I tended to date less than masculine men. Vegan men in skinny jeans with man buns who ask for soymilk in their lattes. In retrospect, I should have reevaluated my dating choices when I have been cheated on twelve times.. I did not learn the lesson as fast as I should have, but the last one I dated like that was my ex Leslie. I think it made me feel stronger to be around men who I felt were weak. Then I realized it was camouflage for assholes. \n\nWhat started my transition was meeting Jill, the kind of woman I thought I was. She never pretended to be someone else, and she always exuded authenticity. I was not surprised in the least when the first time we really talked in any significant way she was asking to borrow clothes because she did not have anything professional. She was a uniformed police officer, so never had to worry about that. I would see her leave her apartment looking like an undergraduate going to a frat party. I had a good idea of what she was doing, and she looked rather pleased with herself. \n\nMy mind shifted when I saw that her being with Derek, did not make her look weak. If anything, it made her stronger. Derek was not someone she needed; she just wanted him. They are both such dominating forces, I am still amazed how they could ever agree on anything. I could not comprehend how they did not make each other feel inferior. Then I met Nathan and started to understand. \n\nNathan was the very thing I had intentionally avoided dating my entire life. Oozing charisma, physically in shape, more traditionally dressed and groomed, with a pinch of liberally inserting the word fuck into every other sentence. Basically, a frat boy. My worst nightmare. Or was it my darkest desire? \n\nWe met at the courthouse. I was there for the sixth public defender case of the day. He was exiting the courtroom after testifying for a drug case. He was the first person who interacted with the suspect who attempted to shoot him. Nathan threw the guy into a wall and out the next room. His statement went well enough and he loosened his tie before sitting down to check his phone outside of the courtroom. \n\nI looked up from my case, then back down at the folder. I somehow always got stuck with the gangbangers. When I met him, I saw the face tattoos and the charge, and immediately said to myself, \"This mother fucker better plead guilty.\" \n\n\"You representing the gang I rolled up last week?\" Nathan asked, and I raise my eyes to him. I knew Nathan was SWAT when he asked that, because the case stated who the arresting unit was. \n\n\"Some of them,\" I said, then look back down at my folder. \"I'm trying to go over the case.\" \n\n\"No you're not,\" Nathan said, and I look up fully this time. \"You made up your mind the moment you saw them. Clean arrest, clean warrants, unlicensed weapons, prior arrests, and fucking face tattoos. They're pleading guilty for the street cred.\" \n\nWe looked at each other and say nothing for long enough to blink five times. \n\n\"Nathan,\" he said to introduce himself. \n\n\"Lawyer. Busy lawyer,\" I said, then went back to pretending to look at my file. He was one hundred percent correct. He knew he was. Nathan walked across the hall and sat next to me. I was so accustomed to men who ask to kiss me, right before they all cheated on me, that I did not know how to react to his forwardness. \n\n\"Let's try that again. I'm Nathan,\" he said, holding out his hand for a shake. \n\n\"Still a busy lawyer,\" I said. \n\n\"Named?\" That natural charisma did not take long to break me. \n\n\"Billie,\" I said, and shook his hand. \"Billie Brooks.\" \n\n\"Nathan White,\" he said. \"Pleasure to meet you.\" \n\nThat is not when we started dating, or even when he asked me out. It was a year before we even had coffee. It set the foundation. Sometimes we saw each other at the courthouse. Sometimes I saw him at the Police HQ. I had been single for two years and incredibly horny for something not a dildo, that I ended up asking him for coffee, which he happily agreed. Was that his plan all along? Make me ask him? \n\nI learned Nathan was former Air Force Pararescue and left the military after six years. He was a patrol officer for three years, before he was selected for SWAT where he had been for the last eight years. He was thirty-five, and I was thirty-six. He did not look it, but he had a bachelor's degree in Education he finished in the Air Force. Like me, he had never been married, and did not have any kids. That he knew about at least. \n\nWe still did not start dating, but we did become friends. Shortly after our first coffee, we both attended a party to congratulate Derek being promoted to Lieutenant. Jill saw me looking at him and told me to stop putting it off. We arrived at the party separately, but we left together. \n\nWe did the deed at my apartment. It was a fun balance of being controlled and being in control. It did not feel like a power imbalance either way. I told him I was on birth control, but he still pulled out and jerked himself off on my stomach and bush. He told me to keep the bush because he preferred it. In truth I had just been single for too long. \n\nFive months into dating, we needed to have a serious conversation, because I was pregnant. Jill had been telling me for years to get the shot. She said I was too busy, and too scatterbrained from my career that I would forget a pill or get out of cycle. I should have listened, if only because Jill is nearly always right. \n\nThis was a true test for him though because this was not my first time. Very few people know I had an abortion when I was in college. Not because I have any guilt. It is just not anyone else's business. I told that guy, and he ghosted me, so fuck him. He tried to come back after I had the procedure, but I kicked his ass to the curb. What did Nathan do with this news? \n\nNathan smiled and asked how I felt about certain names? I declared Daisy Jillian for a girl, no discussion. Boy I was open to names. The news did not scare him in the slightest. I was not ghosted. If anything, he became more affectionate. Nathan was something I was not used to; Nathan was a real man. \n\nWe decided to not rush a wedding, but we did get married when Daisy was nearly one. We have been married for over three years now. \n\nBecause I wake up and do not see Daisy staring at me, I assume it must be early in the morning. When I check my phone on the nightstand, I see it is seven. Daisy is usually here by now. I will not complain. I roll back over and look at Nathan, and run my finger down his abs. He is very ticklish, so he wiggles in his sleep. I go a little further and grip his morning wood. \n\nThis snaps him awake, and he turns to me, drowsy, but rapidly becoming aware. \n\n\"We have minutes,\" I say, and he immediately notices Daisy is absent. He looks toward the door, which is still shut. \n\nNathan lifts the blanket so I can straddle him. Taking off my underwear would take too long, so I tug it to the side while Nathan licks his fingers and moistens me. I lower myself onto his dick. His hands grab my hips so he can thrust up harder to get the most of the time we have. \n\n\"Pull out, I have court and I don't want you dripping out of me all day,\" I say. \n\nNathan's thumb is rubbing my clit, and I can feel it getting close. Just a little bit more. \n\n\"Mommy?\" Nathan and I flinch, and we see Daisy at the foot of the bed. The door is now wide open. Our daughter is a ninja. \"What are you doing?\" \n\n\"We're, uh...\" I say, stalling to think of something asexual. \"...wrestling.\" \n\n\"Can I play?\" she asks, then starts climbing on the bed. \n\n\"No!\" We both say at the same time, and she freezes. She looks about ready to cry, but I think she is more confused. \n\n\"You want breakfast?\" I ask, and she nods. \"Meet me in the kitchen, I'll get you breakfast.\" \n\n\"Okay,\" she says, and leaves the room quickly. \n\n\"Good save,\" Nathan says, and I lift myself off him, and reset my panties. \"And the defense, does not rest.\" After I orgasm and roll of his dick, I sometimes say 'and the defense rests'. \n\n\"I'm a prosecutor now.\" I say, picking up a pair of shorts next to the bed and sliding them on. \"And the prosecution rests, doesn't feel the same.\" \n\n\"No, it doesn't,\" Nathan says, and we both laugh a little. \"To be continued?\" \n\n\"God, I hope,\" I say, then make sure our daughter is fed. \n\nNathan says I can shower first because he is teaching a combatives class this morning. It does not make much sense to shower before he exercises. After I make Daisy breakfast, Nathan stays with her while I bathe and get ready for work. Today I will be in court, so I take extra care to make myself presentable. I wear pants at the office, but skirts in court. I do not wear jewelry in the office, but I wear a necklace with a matching bracelet in court. Today is a grey Yunclos single button blazer that will be left open with a matching skirt. White shirt with my gold necklace and bracelet. Lastly, my pair of go-with-anything heels. \n\n\"What kind of court do you have today?\" Nathan asks when I find him getting Daisy dressed for daycare. \n\n\"Shouldn't take long, just an arraignment. I am hoping it doesn't go to trial because it's a mess of a case. I don't know what Daniel was thinking with trying to prosecute this,\" I say, placing my heels on the ground and using the doorframe to help me balance as I put them on. \n\n\"Scare the defendant into pleading guilty?\" Nathan asks, Daisy kicking her feet as he is trying to tie her shoes. \"Stop.\" \n\n\"Why do you think we have you guys kick down doors?\" I ask. We talk plenty of shop around the kid, we just leave some words out. Much of the legal process happens before you ever appear in court. Everything up until you submit a plea, is to encourage you to plead guilty. Having a SWAT team raid you, very much included. \n\n\"Stop kicking,\" Nathan repeats, and she finally listens. \"Thank you.\" \n\n\"You got her?\" I ask, and he nods. \n\n\"The combatives gym is at Precinct One. It's like three blocks from her daycare,\" Nathan says, giving her shoelaces one last tug. \"Ready?\" \n\n\"Mmhmm,\" Daisy says with an exaggerated nod. \n\n\"I need to go. Hugs,\" I say, Daisy wrapping herself around my legs. \"See you later, love you.\" I kiss Nathan and whisper into his ear. \"To be continued, don't forget.\" \n\n\"I won't,\" he says, and I bite his ear to make sure he knows I am serious. \n\n- \n\nBy eleven in the morning I am sitting next to Senior DA Daniel Huddleston, and across from the defendant and her lawyers. Because of the law firm she hired, I know there is no way this woman is pleading guilty. Not when you hire Hugh Willard and Zillah Calvin. These two defend white collar criminals and the mob. This woman is not fucking around. \n\nThe room is stifling as we wait for the judge. Hugh is whispering something to his client. I sigh, looking over at Daniel who is not reading anything or talking to me. He is quiet because he already knows what is about to happen. She will plead not guilty, and off we go. \n\n\"All rise, the Honorable Judge Davenport presiding,\" the bailiff says, and we all stand up. \n\nJudge Lisa Davenport appears mid-fifties and has had some cosmetic work done. Botox on her forehead at a bare minimum. Horrid case of resting bitch face and is unpleasant to prosecutors. Her reputation is a criminal's favorite judge. She is not guaranteed to be the judge for the trial, and I hope she is not. \n\n\"Be seated,\" the Judge says. She opens a folder, then reaches into her robes to find her glasses. \"How are we all doing this Friday?\" We all say we are well in some form. \"Good to hear. Let's begin. \n\n\"Ms. Black,\" she says, her eyes tilting up to the defendant. \"This is your arraignment for, by the looks of it for several interconnected allegations. I see you have acquired legal representation. Please state your names, and then I will have the state do the same.\" \n\n\"Hugh Willard your honor, this is my co-counsel Zillah Calvin,\" Hugh says. He is a billboard lawyer. 'Hurt on the Job? You are owed money, and I will fight for you!' I would not be surprised if he literally bribes ambulance drivers. His suit is expensive and tacky. Perfectly shaped hair combed to the side. I swear he got a tan just so his teeth would appear whiter. \n\n\"Morning your honor,\" Zillah says. Zillah is gorgeous the same way a porn star is. She looks good doing her job but is still sucking dick with both hands. Perky fake breasts, tight suit and skirt, fuck me pumps, with the haircut Marcia Clark had at the end of the trial. \n\n\"State,\" Judge says. She knows who we are, as it is not our first time in her courtroom. This is a formality for the record. \n\n\"Daniel Huddleston, Senior District Attorney. Co-prosecutor Billie White,\" Daniel says, and I say good morning. \n\n\"Thank you all. Let's get into it...\" the Judge begins, but Hugh stands up for a moment. \n\n\"Before we begin your honor, I would like the consideration of a motion to dismiss,\" he says, and Daniel remains silent with his arms crossed. \n\n\"Very well. What's your argument?\" \n\n\"My client is no longer a resident of this state and hasn't been for nearly a year. These are unsubstantiated allegations against my client that are quite frankly defamatory. The state has provided no material evidence to the courts...\" \n\n\"...as far as I can see here,\" the Judge interrupts. \"This case was seen by a Grand Jury who did indict your client, who was then extradited from the state of North Carolina. This ruling was met with a writ of Habeas Corpus, which my counterpart in North Carolina dismissed. Due to this, I believe there is grounds for this case to move forward, and your motion of dismissal, is hereby, denied.\" \n\nDaniel smirks a little as Hugh sits down with his pride bruised. She cut him off and did not let him monologue. So much for the criminal's favorite judge. \n\n\"Moving on with the accusations. Is your client aware, the accusation includes the pursuance of a conviction on seven charges? One charge of violation of state penal code two-nine-o-three point zero-one, aggravated murder. One charge of violation of penal code two-nine-o-three point zero-two, murder. Three separate charges of violation of criminal code two-nine-o-five point eleven, extortion. This is extortion in the context of compelling others to commit a crime, so assume special circumstances as a third-degree felony. Lastly, the indictment included violation of code two-nine-o-three point two-eleven, menacing by stalking. \n\n\"I shouldn't have to tell you Ms. Black, these are serious allegations, but for now, that's what they are. Allegations. You have the right to be tried by your peers, who must find you guilty beyond a reasonable doubt. The allegations of aggravated murder and murder carry a sentence of twenty years and fifteen years, respectively. Minimum. The extortion carries thirty-six months as a third-degree felony. The stalking charge is being pursued as a fifth-degree felony, or twelve-months. \n\n\"These charges are interwoven. The lesser charges are alleged to have been committed in pursuit of the greater charges. Does the defendant understand these charges?\" \n\n\"She does, your honor,\" Hugh says. \n\n\"Very well. Is the defendant ready to make a plea to the charges?\" \n\n\"Yes.\" \n\n\"What is the defendant's plea for the charge of aggravated murder?\" \n\n\"Not guilty.\" \n\n\"What is the defendant's plea for the charge of murder?\" \n\n\"Not guilty.\" \n\n\"What is the defendant's plea to the charges of extortion?\" \n\n\"Not guilty on all charges.\" \n\n\"What is the plea for the charge of menacing by stalking?\" \n\n\"Not Guilty,\" Hugh replies. \n\n\"Ms. Black, I am going to now ask you, are you entering these pleas with full understand of the consequences and with a sound mind?\" \n\n\"Yes, your honor,\" the defendant says. \n\n\"Very well, the plea is accepted. A court date will be scheduled. Are you the legal representatives just for this hearing, or will you continued to be employed by the defendant?\" \n\n\"As of right now, she is retaining the services of Calvin &amp; Willard,\" Hugh says, and we wrap this thing up after a discussion on discovery. \n\nHugh and Zillah give us a courteous smile and escort their client from the room. Daniel uncrosses his arms and sighs. \n\n\"We need to start prepping Detective Kramner. I'm not sure he's ready to go up against Zillah,\" he says. \n\n\"She barely said anything here?\" I ask. \n\n\"I've gone up against her a few times. It is Calvin &amp; Willard for a damn good reason. She's a mean fucking cross examiner. Thomas Mesereau caliber,\" he says. \n\n\"Thomas who?\" \n\n\"Mesereau. He got Michael Jackson acquitted,\" he explains. \"How were you a defense attorney and you've never heard of Mesereau?\" \n\n\"I don't follow celebrity bullshit,\" I say, and he laughs. \"What do we need from discovery?\" \n\n\"Correspondence as far back as we can go. Bank statements, taxes, anything travel related, and her work emails. Anything the cops could not get. They're about to find out we have the picture of her in the mustang.\" \n\n\"I'm surprised they didn't just argue that because the stalking crossed state lines it was a federal crime, so not prosecutable at the state level,\" I say, and he nods. \n\n\"That's a good point, which is why I downplayed that to a fifth-degree felony, though I could have charged as a fourth. The problem is, the victim had no knowledge she was ever stalked, so any measure of harm is negligible. Considering Chase's connections in DC, I don't think they want to risk it going federal.\" \n\nDaniel and I leave the courtroom to head upstairs and get to the work. This case is going to be a headache. \n\n- \n\nMonday - July 27, 2026 \n\n-Chase Kramner- \n\nI guess I own a cat now. On Sunday, I enjoy reading on my balcony with a cup of coffee. I did a little bit of shopping, and before I returned to my apartment, it started to downpour. One of those storms that come out of nowhere. I rushed back inside and opened my sliding glass door to retrieve the book I left outside. The moment I opened the door, a stray cat jumped onto my balcony and dove into my apartment. ",
        "\"Out, out, out,\" I said as I tried to block him with my foot, but he wiggled around and ran into my living room. \"Come on, dude!\" \n\nThe cat shook itself dry on my coffee table, then looked up at me. I took one step toward him, and he fled into my office. \n\n\"Get out,\" I said, following it. It had perched itself on the top of my bookcase in the corner of the room. \"Out.\" When it was clear he was not going anywhere, anytime soon, I sighed and just let him be. I had a couple single serving bags of tuna I eat as a post workout snack, so put that into a bowl and left it for him. Later I went shopping again and bought a litterbox. I was hoping he was already house broken and would not turn my office into a shit box. \n\nI open my eyes this morning, and he is sitting on my nightstand, staring at me as I slept. My alarm startles both of us seconds later, and he bolts to my door, but stops shy of leaving. He cautiously returns, jumping onto my bed to stare up at me from my feet. \n\n\"Creepy little bastard,\" I say, and he takes a seat. \"Hungry?\" \n\nI move my sheet off my torso, and the cat jumps backwards off the bed. He stops at the door, then runs out when he sees I am still moving. The cat had jumped onto the cabinet by the time I arrive in the kitchen. This is the first time since his arrival he is not skittish. I use this opportunity to examine him more closely. \n\nShort and wiry multicolored coat. Mostly white around the legs and belly, with a blend of browns, and metallic grays everywhere else. His most notable trait are his golden eyes. When I raise my hand he meows, and it is soft. No collar or tag, and he does appear skinny like he was hungry. I hold my hand out, and he flinches away from it, then gingerly leans toward it. His nose touches my finger, and he pulls back, then slowly touches again. \n\n\"I guess you need a name,\" I say, and he starts playfully nibbling my fingertip. I keep thinking the cat is male, so I lean over and confirm that. I remember the cat my mother used to own, who died when I was around ten years old. She named him after her favorite literary lawyer. \"How do you feel about Atticus?\" \n\nI make sure he has food and water before I grab my keys and leave for work. I fight traffic a little but push through and park in the garage. I activate the elevator with my security badge and arrive at the seventh floor. My security badge gets me through the secure door, and I drop my bag next to my desk and boot up my computer as I sit. \n\nMy phone says I have one missed call, and because I recognize the number, I call it back immediately. \n\n\"Appletree, homicide,\" Midge says from the other end. \n\n\"You called?\" I ask, holding the phone to my ear with my shoulder as I take the first folder off the stack for 2011 case review. I am at homicide now, looking over a few of Leo's cases. I asked Lieutenant Eastland to take these because of a potential conflict of interest, but she said I was fine to do them. \n\n\"Hear about the plea?\" she asks. \n\n\"I've kept my head in the sand on purpose. What happened?\" \n\n\"Not guilty across the board.\" \n\n\"Shocker,\" I say, and hang up after we exchange minor pleasantries. \n\nTime for 2011 homicide case review. First up is Jason Boatman, arrested in 2011 for the murder of Alexandra Sailor. Strangled her to death with dock line. His semen was found in her vagina, and his DNA was already on file from a different investigation. At this point, I am looking for something that could put this into question and open this case up to an appeal or a new trial. Boatman has submitted for an appeal several times, but the judge says there is no new evidence. \n\nThe DNA evidence provided from his DNA on the line was instrumental in the conviction, so that is what I will focus on. From Leo's notes, it looks like he interviewed - polite word for interrogate - him for three hours and did get a confession, but I see all the signs of a false confession. Leo downplayed the importance of getting a lawyer, built rapport then created justifications to coax it from him. Something about this bothers me. I will pressure you into a confession like any other cop, but I do not like to do this shady style of interview. \n\nSome of these files were sent over to the DA when they picked up the case. I type the case number into my computer to pull it up. Mostly so I can see what we turned over, to who, when, and what was then turned over to the defense. The file on my desk is two hundred and seventeen pages. Leo sent over two hundred and one. Sixteen pages were not sent over. There is often a valid reason for this, like additional interviews with alibied suspects. What pages did not make the cut, and why? \n\nThe only good way to do this is to flip the pages on my desk and the screen in sequence, make sure they are the same pages, and flag the missing ones. They stop matching at one hundred and fifteen. This portion contains the information of the DNA collection from that prior investigation. There was a sexual assault case in 2007, of which Jason was a suspect. He provided a DNA sample that cleared him. A DNA sample, that should have been purged before 2011. There is no way this was an accident; Leo suppressed evidence. \n\n\"Goddammit Leo,\" I mutter to myself. Doll told me to flag the cases and that she will do a supplemental review so we can run it like a conveyor belt. I write a note on the folder, so she knows what the issue with it is. \n\nI start to open the next folder, but the last one has bothered me so much I close it. Goddammit Leo. \n\nLeo was my first partner when I became a detective. He was my Sergeant, my Lieutenant, my mentor, and is my friend. I have been in a fire fight with him. I know him intimately, and love him like he is my brother, even though he is nearly old enough to be my father. He was never a lifer who reaches his twenty and retires. He has already been in twenty-five years. Leo could file a retirement packet tomorrow. \n\nLeo is a good cop. I know he is, so what the hell is he doing suppressing evidence? Fifteen years ago, maybe he was not, but this is not the kind of thing you stop doing once you start. I must look for a pattern of misconduct and pray this was a one off. \n\nI work through lunch, Doll asking me if I want anything from the food trucks. I decline, but she still brings me back a salad. After I have dug through all the Leo cases from 2011, I want to the throw the files against the wall and scream. Four other cases with highly questionable handling. I take a moment to breathe and use the salad as the excuse to let myself think without looking at it. \n\n\"You look about ready to kill something,\" Doll says from my door. \"You good?\" \n\n\"I don't know,\" I say, and she gestures for me to continue. \"I found five.\" \n\n\"Geez, just today?\" \n\n\"Just one person,\" I say, and she points to the stack I made, and I nod. \n\nDoll reads the top of the stack. \"Leo?\" I nod. \"What's the trend?\" \n\n\"Mostly withholding evidence, ignoring it, failure to hand off interview notes,\" I say, then flip to another case examined. \"Example, Jason Boatman. Convicted for the rape and murder of Alexandra Sailor. Strong alibi, not even in the city when she was killed. His semen was found in her vagina, though the ME report stated no trauma. The DA got some expert witness to extend the time of death half a day because of the rate of food digestion in her stomach, which is bullshit. Jason Boatman was on file, but that DNA sample should have been purged years before.\" \n\n\"What did Leo not hand off to the defense?\" Doll asks. \n\n\"The necessity to purge, and portions of his interview notes were redacted. He interviewed him for hours because he already had the DNA hit, and the fact they had a circumstantial meeting on Tinder of all places a few months before. He swiped right, she swiped left. What he didn't share in the interview notes was them discussing his corroborated alibi at length. He only sent over and I quote. 'Yeah, she looks kinda familiar.' End quote\" \n\n\"Not that big of a deal. I've seen plenty of cases where the prosecution can pick and choose what from the interview is let in and the defense can't object or bring in the rest to apply context,\" Doll explains. \n\n\"True. But he didn't hand it off, at all. He didn't take a chance,\" I say. \n\n\"Was this a Leo decision, or was this somewhat more executive?\" she asks, and I think. Leo's name is on everything, but it does not mean he was the one who made these evidentiary disclosure decisions. That could have been the Sergeant or his Lieutenant. \n\n\"Who was the homicide lieutenant in twenty-eleven?\" I ask. \n\n\"How old do you think I am?\" she asks with a laugh. \"I was a traffic cop.\" \n\n\"I'll find out, I'm sure the name is here somewhere,\" I say, gesturing to the pile of cases. \n\n\"Do you want me to talk to Leo about this?\" Doll asks. She has only known him from being in the same building. I worked for and with him for two years. \n\n\"It should be me,\" I say, looking at the Boatman file still spread out on my desk. \"I'm going to do a little more research, go in fully armed and see how he reacts.\" \n\n\"You sure? He can't pull rank on me.\" \n\n\"I'll be fine.\" \n\n- \n\nI spent the rest of the workday going over the cases, but I spent most of the time on the Boatman case. It was the most egregious. By the end of my research, it was potentially criminal. \n\nI knock on Leo's door with the folder under my arm. He looks up from his computer, and smiles, waving me in a moment later. I close the door after I enter. Leo finishes typing something, then turns to me as I take a seat. \n\n\"Door closed? What's up?\" Leo asks, and I place the folder on my lap. \"You're doing case review right now, aren't you?\" \n\n\"Afraid so,\" I say, and he groans, but nods in understanding. \n\n\"Where was my discrepancy?\" he asks. I open the Jason Boatman file and extend it across his desk. \"This fucker, I remember this one. Raped and strangled her to death. Open shut, found his semen inside of her, case closed.\" \n\n\"How did you rectify the fact there was no evidence of rape?\" I ask, and he looks up at me, confused. \n\n\"No, he raped her.\" \n\n\"Go to the ME report,\" I say, and wait for him to flip to it. \"No evidence of vaginal trauma, or recent sexual encounter. There was evidence of insertion of a near perfectly cylindrical object, like a dildo, or something else phallic. Not a penis.\" He does not say anything as he reads it. \n\n\"What about his alibi?\" I ask. \n\n\"Bachelor party with his friends?\" Leo asks, and I nod. \"Fell apart.\" \n\n\"Really?\" I ask incredulously. \"Receipts from the hotel. Pictures of him at the event. Corroborating statements from five of his friends, two strippers, and the bartender?\" \n\n\"A doctor came in and explained how the food digesting in her stomach made our initial time of death inaccurate.\" \n\n\"Oh, come the fuck on with that junk science bullshit,\" I say. \n\n\"Watch it Sergeant,\" he says. Leo is cool up until the point he does not like what you are telling him. Disrespect or question him, and he will hide behind rank. \"He confessed.\" \n\n\"And immediately retracted it and pled innocent.\" \n\n\"It wasn't a false confession.\" Leo is crossing his arms and leaning into his seat now. He is on the defensive now. \"Get out of my office.\" \n\n\"You do not have authority over me. My duty as a Special Investigator supersedes yours, and you know it,\" I say, standing up and leaning over his desk. \n\n\"Stop sucking your own dick,\" Leo says. \n\n\"How did the semen get there?\" I ask, and he scoffs. \n\n\"Because he raped her.\" \n\n\"Does that explain why the semen had traces of glycerol and sucrose mixed?\" I ask, and he tilts his head. \n\n\"And?\" Leo asks. \n\n\"Those are used in cryoprotectants for freezing sperm. Jason Boatman donated his sperm for a few bucks in twenty-ten. What will I find out when I call the bank and ask for the status of that sample Leo?\" \n\nLeo is pale white and takes a shallow breath. \n\n\"Did you submit the evidence to the lawyers?\" I ask, and he slowly shakes his head. \"Who?\" \n\n\"My old Lieutenant. Hank,\" he says, and leans forward with his hands in his face. \"Henry Silverlake. Should I get a lawyer?\" \n\nOne look at Leo and I can tell, this is not corruption. It was incompetence. He received a few convenient answers and ran with it. This is a failure of due diligence. \n\n\"I'd recommend it,\" I say, and he nods. \"I have to call IA.\" \n\n\"I know. Thanks for not a being a bitch and coming to me first,\" he says. \n\nWe have nothing left to say, and I leave his office, and call Lieutenant Jennifer Ito in Internal Affairs in the stairwell. \n\n- \n\nWednesday - July 29, 2026 \n\n-Summer Pillsbury- \n\nI enter the Horseshoe, an old diner with a customer base of burnouts and old school journalists who are meeting their sources. If cholesterol has a scent, it smells like this place. The constant sound of clattering silverware and the sizzle of the grills and fryers. Mopped floors with streaks. Tables moist from the wet rag likely more germ covered than the table it was cleaning. \n\nExactly the kind of place you will find Joshua Winters. In the second booth from the door. \n\nJoshua is the kind of reporter who would have wiped his ass with a Pulitzer. To him it became too politicized to hold any real meaning. Too many journalists in his view want to be on television. They want to be the story, instead of reporting on it. If you need a teleprompter to report the news, you are not a journalist. Joshua calls broadcasts anchors mouthpieces. \n\nJoshua is like a crazy uncle. He is harmless, but your parents would still dismiss everything he says as 'that's your crazy uncle for you'. Only Joshua is usually correct. It takes some time to prove he is, but that proof does eventually arrive. It does not help that he has Einstein hair and a hippy heard. Do not call him a hippy though, he will throw the nearest thing he can reach at you and shout, \"I wasn't a fucking pussy! I volunteered for the jungle! Unlike those peace-loving activists who loved to firebomb shit!\" \n\nDuring Vietnam, he was a combat correspondent. Just like Joker in the film Full Metal Jacket. That was fifty years ago. Now Joshua is a retired journalist who no one will publish. At least knowingly. He does have a popular website, but it is written off as conspiratorial. Regardless of how often he is proven right in the end. \n\nWhen Joshua was still relevant, he was my editor at the Tribune. He was ultimately let go because he did not approve of the editorialization of our stories. He refused to approve click-bait articles and refused to go to print with conjecture. The justification for his firing was him throwing a stack of papers at the face of a fresh journalism graduate who had embellished one too many stories. I remember it like it was yesterday. \n\n\"How about you print out the fucking transcript and highlight where the fuck he actually said that!\" Joshua said to the crying reporter. \n\n\"It's assumed...\" she started to stammer. \n\n\"...you don't make assumptions! You report the news. Fucking period! This isn't a fucking tabloid! You want to write like this, go work for Huffpo!\" Joshua shouted. When she started to make excuses, he threw her article into her face and told her to get out of the office he was packing the next day. Six years later he still apologizes for nothing. \n\nThat fresh journalism graduate was me. I have been learning what it means to be a real journalist ever since. \n\n\"What are you ordering?\" Joshua says as he pulls out his glasses to read the menu he has memorized. \n\n\"I already ate,\" I say, and he chuckles. He always asks, and I always say I already ate. He knows I will never eat here. \"You mentioned you had a story?\" \n\nJoshua sent me a text at three in the morning. Horseshoe was the only word in the message. That is how he lets me know he has something too important to be buried because it is coming from him. \n\n\"Jason Boatman,\" he says, and I put a digital recorder between us, and ask him to start over. \"Jason Boatman.\" \n\n\"Who is that and why do I care?\" I ask. \n\n\"He was convicted of rape and murder in twenty-eleven. Lot of shady police and prosecution behavior. I followed his case closely as it was ongoing. While the Nancy Graces of the world were ignoring everything wrong with the case, I was reporting on it. Boatman had an airtight alibi corroborated by nearly a dozen unimpeachable witnesses. Expert witness, and I use that term loosely, helped the prosecution move the goalpost on time of death. He failed a second appeal two years ago.\" \n\n\"Why should he be in the news again?\" I ask. \n\n\"Some of those misdeeds are now coming to light. I asked my contact in the police. They tell me, this case was just internally reviewed by the police Special Investigations office. This case should have been reviewed ten years ago.\" \n\n\"Police investigate police and clear police?\" I ask. \n\n\"Usually the case, but not with this detective. He's a legit reformer, and some cops hate him for it. He's the one who likely reviewed it and reported the numerous inconsistencies.\" \n\n\"Name?\" I ask. \n\n\"Chase Kramner. Sergeant type.\" \n\n\"Kramner? Why does that sound familiar?\" I ask. \n\n\"He's the one who arrested that dirty narcotics cop late last year. Texada,\" Joshua explains, and I remember now. \"He's Chief Whitaker's attack dog. If there is a case he doesn't trust just anyone to do, he'll give it him. No matter how uncomfortable it makes people.\" \n\n\"What did he find on Boatman's case?\" I ask. \n\n\"Enough to warrant his lawyer filing a motion to vacate the judgement,\" Joshua says. He must have found something significant. \n\n\"You talk to him?\" I ask. \n\n\"Chase?\" he asks, and I nod. \"I've tried, but he doesn't do press. He's damn near antagonistic toward us. I did look at his background. Georgetown Prep, elite family, rich kid, but decided to do something different. Likely has a trust fund, but as far as I can see, doesn't touch it. Can't be bought.\" \n\n\"Who's the story? Boatman or Kramner?\" I ask. \n\n\"Don't ask me how to write your story, just write it,\" he says, and I roll my eyes. \"If you could get a comment from him, you'd officially gotten further with him than I have.\" \n\n\"Who is your contact in the police?\" I ask, and he laughs at me. I knew he would, but I still needed to ask. \"You said some in the police don't like him. Let me find out if your source is one of them.\" \n\n\"How about, I ask her if she's okay with meeting you?\" he asks. Does he realize he just slipped? \"If we fuck this up, good luck ever getting a source in the police.\" \n\n\"How long has she been your source?\" I ask. \n\n\"I didn't say it was a she...fuck,\" he says, and I laugh. \"That's your freebee.\" \n\n\"Jason Boatman murder conviction could be vacated. I'll look into it,\" I say and stop the recorder. \"You ever going to apologize?\" \n\n\"For what?\" he asks, and I shoot him a smirk, because he knows damn well. \n\n- \n\nSaturday - August 1, 2026 \n\n-Chase Kramner- \n\nAtticus is curled up on the couch next to me as I read my book. In a few short days, I have accepted the fact I now own a cat. He has a relaxed temperament and is content to just lounge on my lap when I am home. I researched his breed and found out he is likely an American Wirehair. Apparently, his breed is a big deal. I scheduled vet appointments to get him checked out, but for now, we are just chilling. \n\nMy phone rings on the coffee table. I place the open book on my knee, and see it is Jennifer Ito calling. \n\n\"Lieutenant?\" I ask. \n\n\"Sorry to bother you on the weekend. Just wanted to let you know, we cleared Leo on the charge,\" she says, and I sigh in relief. I figured he did not do it, but there is always that chance. \n\n\"That's good to hear,\" I say, petting Atticus who softly meows and stretches awake. \"Sorry buddy.\" \n\n\"What?\" \n\n\"Nothing, my cat just woke up,\" I say, and she laughs. ",
        "\"Boatman is likely getting a new trial. I wouldn't be surprised if the DA just dismisses the case,\" Jennifer says, and I agree that is likely to happen. They would rather not have that in a trial. Not after the Helga Texada debacle. \n\n\"The whole thing was insane. Boatman kills Sailor with deck line. You can't make this shit up,\" Jennifer says, and I say the coincidence was astounding. \n\n\"I didn't ask, was the sample at the sperm bank missing?\" I ask, and she confirms it was. \"Who framed him then?\" \n\n\"Not Leo,\" she says. \n\n\"What about Silverlake?\" \n\n\"Who?\" \n\n\"The Lieutenant for Homicide in twenty-eleven.\" \n\n\"No evidence anyone in the police were involved,\" she says. \n\n\"So, that killer is still out there?\" I ask, and she says it is possible. \n\nWe talk for a minute about Atticus before I hang up. I place the book on the coffee table then stand up, Atticus rolling off my leg and looking up at me in betrayal. \n\nI go to my office and turn on my laptop. Once it boots up, I immediately search for Henry Silverlake. I see his Private Investigator credentials and read some of the information on his LinkedIn. He does not have an official website. Defense Investigator by the looks of it. A cop who suppressed evidence to put people in jail, now works for defendants. \n\nBoatman and Sailor? That is still bothering me. What were the other cases? Eric Woolworth murdered Darcy Lane? Nothing matching there. \n\nI search for the surname Lane. Nothing seems to work with Woolworth. English name seems to be geographical for someone living along roads or narrow hedges. Then I see it also derives from the French word Laine, meaning wool. \n\n\"Fuck me,\" I say aloud. How did Woolworth kill Lane? Strangled her to death with several overlapping strands of wool rope. \"Fuck me.\" \n\nOccupational surname strangled to death with a correlating material by someone with a related surname. Are you shitting me? How many of these are there? \n\nAtticus jumps on my desk and walks his front paws up my arm to nuzzle my face. I flinch away, and pet him with the opposite hand. \n\n\"We may have found a serial killer buddy.\" \n\n- \n\nMonday - August 3, 2026 \n\n-Midge Appletree- \n\nThis is the first week where I will be placed on official light desk duty. I am about three months pregnant, give or take a week, and I have a slight baby bump. I was expecting to not show at all because I am a freak of nature, but I did start showing. I actually look like I am pregnant. I even weigh one hundred and twenty pounds. \n\nGianna hates me because I did not get morning sickness. She said she was an open fire hydrant all three times and completely bed ridden for the last month of her pregnancy with Preston. Something about a woman who has an easier time doing something makes women angry. \n\nLieutenant Sweeney took a sudden leave of absence, so Will is the acting Lieutenant. He asked me what I would say if he suggested I get moved to Property Crimes for the duration of my pregnancy, and I my stare was all the words he needed in reply. Graham was waiting for a detective position to open, and it finally did in Property Crimes when Lauren Hill was recruited by the Secret Service. I miss Graham, but I do not miss wondering how he magically appears in a room. \n\nIt is early in the morning, and I see our office door open, but no one enter the room. \"Hello?\" I ask. I hear wheels rolling on the ground, and the side of a whiteboard being rolled into the office. \"What the fuck?\" When it is all the way in, I see the person pushing it is Chase. \n\n\"He brought the whiteboard,\" Will says from his desk in an awe-inspiring tone. \n\n\"Is that supposed to mean something to me?\" I ask. \n\n\"When Chase brings the whiteboard, he is not fucking around. Get ready for information overload,\" Will says, and wheels his chair over to my desk. \"What is this about?\" \n\nChase had put a thin curtain on the board, that he flips over the back. On the board is information related to five interrelated cases that were investigated separately in 2011. Fifteen years old already. To the far left of the board are all the similarities. He has dates, possibilities of relationships, theories. All he is missing are strings connecting people with events and a tin foil hat. \n\n\"Sweet baby Jesus,\" I say. \n\n\"You guys interested in potentially finding a serial killer?\" Chase asks as he picks up a dry erase marker. If any other cop said that, I would say he had shiny object syndrome. The cop sees a sparkle on a case, thinks it will make their career when it is just bullshit. Chase is ambitious, but he does not waste his time digging rabbit holes. \n\n\"Five cases, seemingly unrelated. Victims all had occupational surnames,\" he says, directing our eyes to them. \"The accused, all have surnames, related to the victim's name.\" \n\n\"Related how?\" I ask. \n\n\"Sailor was killed by Boatman. Lane was killed by Woolworth,\" he says, and I open my mouth. \"Lane is French for wool.\" Chase is annoying efficient at preempting questions. \"Visscher was killed by Pike.\" He lets me know that is Dutch for fisherman. \"Ryder was killed by Heyward. Lastly, Leatherman was killed by Hyde.\" \n\n\"Lot of coincidences, but that's all I'm seeing so far,\" Will says to him. His favorite role on a team is the Devil's Advocate. If there is a case, he will question it. Just not his own. \n\n\"All of them were strangled to death by material used in that occupation. Sailor with deck line. Lane with wool. Visscher with deep sea fishing line. Ryder with horse reins. Leatherman with, well leather. All over the span of March to October twenty-eleven,\" Chase explains, and Will and I both silently digest that. Fucking weird. How the hell did no one notice this? \n\n\"Convictions?\" I ask. \n\n\"All were convicted. Three pled guilty for reduced sentencing, two fought it in court and lost. Jason Boatman might be released soon because I found reason to believe the DNA evidence found was planted.\" \n\n\"By us?\" Will asks. \n\n\"Thankfully, no. Most likely the killer,\" Chase replies, and we both let out a sigh of relief. Please God, not another Helga Texada. \n\n\"Is planting evidence how he got the other men convicted?\" I ask, and Chase nods. \n\n\"Each had a different form of DNA or forensic evidence against them as the linchpin of the prosecution. Used in order: semen; blood; saliva; fingerprints; skin.\" \n\n\"Each different?\" I ask, and he nods. \"Why a correlation with the rest, but not that?\" \n\n\"Good question,\" Chase says, looking at the board. \"What's the message?\" \n\n\"Assuming this is real?\" Will asks, and Chase nods. \"Hahaha, I'm smarter than you by the looks at it. This almost comes across like this guy wanted to get caught. He's nearly flaunting it,\" Will says. \n\n\"Why does it have to be a dude?\" I ask. \n\n\"He has the strength to strangle five people and most murderers are male any way,\" Will says, and I roll my eyes dismissively. \n\n\"A woman would have better access to gather the evidence to use against the men,\" I say, and Chase agrees that is a legitimate possibility. \n\n\"Why did he stop?\" Will asks. \"Why do this five times, then just stop. Did he stop? Or is this just the ones we know about?\" \n\n\"All good questions. So, you guys in?\" Chase asks. Will and I look at each other, and kind of shrug. We have no active cases right now. Beats additional duties. \n\n\"I'm in,\" Will says, and I nod to say I am in too. \n\n- \n\nWednesday - August 5, 2026 \n\n-William Kaiser- \n\nChase giving us a weirdly compelling case just when we had nothing else to do, is exactly what we needed. We spent a day going over priorities and creating a list of people to interview. It is a rather long list of people. One of the men had died in prison and two were released because of their reduced sentences. The other two are still incarcerated. The two who did not take a plea deal. \n\nMidge and I track down the two men who are already released. Aaron Pike still lives in the city. He was nineteen when he was arrested and was released two years ago. He is still on probation, so does not really have much of a choice if he was going to talk to us or not. I ask Midge to wait in the car, but she tells me to fuck off and joins me for the interview. \n\nAaron Pike looks like a completely defeated man. Slumped shoulders, unkept facial hair, nervously twitching, and I can smell alcohol from him. We are interviewing him at his mother's house where he has been living since his release. Unemployed with no prospects or future. \n\n\"What do you want?\" Aaron ask, sniffing a little, rubbing his nose. Maybe cocaine too. This event turned him into an addict to cope. \n\n\"Talk about the Patty Visscher murder,\" I say, and he looks away. \n\n\"What about it? I did my time,\" he says, and Midge leans over to look at him better. \n\n\"What if we told you, we think you might have been wrongly convicted?\" she asks. She is skipping to the end. I guess it does make some sense to establish the rapport first. Make sure he knows were here to investigate his potential innocence. \n\n\"What do you mean?\" \n\n\"Where were you when Patty was murdered?\" Midge asks. \n\n\"I already told the cops everything. You guys railroaded me,\" he says. \n\n\"We,\" Midge says, pointing between the two of us. \"We didn't do anything to you. We're relooking at this case, because our predecessors made some mistakes,\" Midge says, and Aaron is started to get the point of why we're here. \"Where were you?\" \n\n\"I was at my girlfriend's. In the interview, I said I was out with my girlfriend, so they charged me with lying to police because I was slightly mistaken as to where,\" he says. \n\n\"Let me guess, you said that without the lawyer the cop said you didn't need?\" Midge asks, and he nods. \"Who was the detective?\" \n\n\"Detective Leonard Sweeney,\" he says. We already knew these were Leo's cases, but it is still shocking to hear he was that kind of detective. Ignoring evidence and digging for those kinds of linguistical loopholes. \n\n\"Did you have any relationship with the victim?\" I ask. \n\n\"None. Never even heard of her. We had no relationship, what-so-ever. I didn't know her. I don't even own a fucking fishing pole, or a boat, let alone go deep sea fishing in the mid fucking west,\" he rants. She was strangled with deep sea fishing line. On the surface, that does sound stupid to insinuate. \n\n\"But they had your DNA at the scene,\" Midge says. \n\n\"They had my saliva on a fucking toothpick and a business card for where I worked in her purse,\" he says dismissively. \"When he interviewed me, he asked if I'd provide a sample. I said fine because I had nothing to do with it. Fucking matched.\" \n\nAaron worked at a loading dock while attending community college. Aaron loaded boxes into FedEx trucks, while Patty Visscher was a substitute math teacher. She had not sent or received a FedEx package for years, so why would she go to FedEx for a business card? They had no crossover in stores visited. No relation, tangential or otherwise. \n\n\"Did you ever notice, someone stalking you? Immediately before?\" Midge asks. \n\n\"Why?\" \n\n\"To know your routine, your work, the best means to incriminate you,\" she explains, and he shakes his head. \n\n\"No. Guys don't really worry about that shit,\" he says. Point taken. \n\n\"You pled guilty? Why?\" I ask. \n\n\"They had my DNA and accused me of lying to police. My lawyer said twenty-years, or ten years. I was going to jail regardless. I plead down. Maybe get out before I'm thirty. I got thirteen years.\" \n\n\"Who was your lawyer?\" Midge asks. \n\n\"Some public defender. He wasn't there long, I don't remember,\" he says, and I write down that we'll look into that. \"Are you guys serious though?\" he asks, and we look at him. \"That you're looking into this case again?\" \n\n\"We found new evidence,\" I say, and he is not sure what to believe. The last time police asked him to talk and told him to trust them, he ended up in prison for thirteen years. For a crime he likely did not commit. \n\n\"But I could be, proven innocent?\" he asks, and we both hesitate to answer him. \n\n\"I'm not going to promise anything,\" Midge says, \"But the case is reopened.\" \n\nMidge and I leave the home a few minutes later, both agreeing we did not get much from him. It was too long ago. We did however learn plenty about the way Leo handled this case. He just followed what was convenient and played lazy entrapment games by what I can figure. \n\n\"Who's next?\" Midge asks, and I open my notebook and hand it to her as I start the car. \"Marvin Hyde\" \n\n\"The last one, that we know of,\" I say, and asks for the address so he can type it into his dashboard. He doesn't live in the city, but he does live just outside of the metropolitan area. A good two-hour drive. Midge reminds me to make a stop for the bathroom before we hit the highway. \n\n- \n\n-Chase Kramner- \n\nThe Kaiser and Midge are interviewing the two men who were framed and have already been released. Tomorrow, I have the two still in prison to interview. Today, I am going to interview former detective Lieutenant Henry Silverlake. \n\nHis home office is downtown, in an apartment on the second floor above a used bookstore. I buzz the door on the first floor, while standing next to a sign that says 'Silverlake Investigations'. His apartment just happened to be on Silverlake Boulevard. He saw that street, and just could not resist. \n\n\"Silverlake Investigations, how may I help you?\" a female voice asked from the intercom. \n\n\"Detective Kramner with the police. Can I speak with Mr. Silverlake for a minute?\" I ask. \n\n\"Do you have an appointment?\" she asks. \n\n\"No,\" I say. \n\n\"Appointment only. Please call the number and come back at your appointment time,\" she says, and I groan. \n\n\"When's the next appointment available?\" I ask. \n\n\"Use the number sir.\" Are you kidding me? I read the number on the sign and call while leaning against his door. \"Silverlake Investigations, how may I help you?\" \n\n\"Still me,\" I say, and she asks me if I want to make an appointment. \"Sure.\" \n\n\"Nature of investigation?\" she asks. \n\n\"Not hiring services. Just need to talk to him,\" I say. \n\n\"I'll put down consultation for now. Next appointment available is tomorrow at three in the afternoon. Is this a good time for you sir?\" she asks, and I want to kick the door down. I only tap my toes against it. \n\n\"How can I get in today?\" I ask. \n\n\"You can't. Is three okay sir?\" \n\n\"Fine,\" I say, kicking the door again. \n\n\"Name?\" \n\n\"Chase Kramner,\" I say, and I hear her typing. \n\n\"You are inked in for tomorrow. Have a great day sir,\" she says, and hangs up. That was one of the most annoying conversations I have ever had. I was going to go in there on good faith but fuck this guy. I check my contacts and call Jennifer again. \n\n\"What is it this time?\" she asks. \n\n\"Feel free to tell me if I'm out of line, but can you get me information if a former detective has a file with IA?\" I ask, and she is cautious. \n\n\"I can if it exists. I'll send you some paperwork to justify the request and cover both of our asses. Don't tell me who until you fill it out,\" she says, and I thank her in advance. I guess I will interview the guys in prison today. \n\nI call the prison warden to arrange an interview. He says he will get back to me shortly, so until that goes through, I do not have much to do. I return to the station and fill out the forms for Lieutenant Ito. With that out of the way, I read over a few of the cases again. \n\nJason Boatman and Eric Woolworth are the two still in prison, and Jeremy Heyward was the one who died in prison. The Jason and Eric are in the same prison, so I hope to spend an hour with both. The prison is going to be four-hour drive, both ways, but seeing how I am interviewing Silverlake tomorrow, I can make the time. The warden gets back to me around noon. \n\nThis is the first time I have to think about this kind of thing, but I ask Doll if she could go into my apartment and feed Atticus for me. Seeing how I likely will not be back until almost midnight. Doll cannot do it. I would call my landlord if he was not such an asshole. I cannot call The Kaiser or Midge because they will be getting back late as well. \n\n\"You know Lieutenant Ito lives in your building, right?\" Doll asks, and I honestly did not know that. \"How did you not know that?\" \n\n\"I'll give her a call, thanks.\" \n\nI call her a moment later and she answers, \"Lieutenant Ito.\" \n\n\"It's Kramner,\" I say. \n\n\"What's up?\" she asks. \"I'm still looking over the request form if that's why you're calling.\" \n\n\"It's not. Do you live in Juniper Tower?\" I ask, and she confirms she does in a confused tone. \"I'm going to get home late, could you possibly feed my cat Atticus?\" I ask, and she laughs. \"What?\" \n\n\"Like To Kill a Mockingbird?\" she asks, and I say yes. \"Sure, I guess. Hand the key off to Dolly and I'll swing by before I leave. What number?\" Do not call Doll, Dolly. \n\n\"Four-O-three,\" I say, and she says she will take care of it. I thank her and hand my apartment key off to Doll before I leave to drive to the prison. \n\n- \n\n\"No handing off anything to the inmate. No physical contact. No knifes, no guns, no weapons of any kind. You will be searched before you enter, and upon leaving. Do you understand officer?\" the prison guard asks me as we walk from my car to a gate. \n\n\"Detective,\" I say, and he looks over his shoulder at me. \"Sergeant Detective.\" \n\n\"Not in here you're not,\" he says, then unlocks the first gate door and holds it open for me. We both step through, after which he relocks it and we resume walking. \n\nUpon reaching a security checkpoint, I see a reception window, more guards, an x-ray machine, and a metal detector. I sign in with my name, reason of visit, time of visit, and person I am meeting. I am then instructed to hand off my firearm to the guard, which I do. I place the folders in x-ray, and step through the metal detector once motioned to. It does not go off, but I am still frisked. They confiscate my pen, and I watch them remove a paper clip from the case folders. \n\n\"I need something to write with,\" I say, and they hand me a floppy pen that almost feels like a noodle. \"Thanks.\" \n\n\"Right this way,\" the guard says, and escorts me through three secure doors, then sits me in a room with several tables and chairs that are bolted to the floor. There is a guard at each door, and an additional guard above me on the catwalk. \n\nI hear the buzzing sound and see a man in a white shirt tucked into orange pants being escorted to me in wrists and ankle restraints. It has been fifteen years, but I can still recognize him as Jason Boatman. Short black hair, gray eyes, sharp pointy chin with a small goatee at the tip. He is prison buff with large chest and biceps, but scrawny legs. He was thirty-seven when he was incarcerated, and he certainly looks early fifties. \n\n\"Mr. Boatman?\" I ask, and he looks at the guard who nods. \n\n\"Yeah,\" he says, then is helped into a seat. I sit across from him and open his file. \"I'm getting a lot of visitors this week.\" \n\n\"Take it your lawyer already told you?\" I ask, and he nods. \"That you might be getting out.\" \n\n\"I ain't gonna hold my breath, but that's what he told me. That someone finally believes me when I said they planted my jizz in that chick,\" he says, and I nod. \n\n\"I'm the reason this is happening. I was assigned to review the case and found that it wasn't passing a sniff test. You want to get out of here, sooner rather than later, helping me, help you, is what you want,\" I say, and he does not reply. \"Mr. Boatman?\" \n\n\"That's what that cock sucker Sweeney said. Help me, help you,\" he says. \n\n\"I'm not Sweeney,\" I say, and open the folder. I spread out a few documents and point out the information from the sperm bank. \"Did you donate your sperm in twenty-ten?\" \n\n\"It looks like you know I did. Yeah. I was between jobs, and that money was a week of groceries,\" he says. ",
        "\"That sample is missing. Someone took it, and used it to frame you,\" I say, and he looks flabbergasted. It is one thing to think you were framed. It is another thing entirely to be vindicated in that belief. \n\n\"I fucking knew it. I always fucking knew it,\" Jason says. \n\n\"Do you know of anyone who would?\" I ask. \n\n\"Frame me for murdering a stranger? I ain't a saint, but no one hated me that much,\" he says. \"I do remember, like right before I was arrested, some dude poking around my apartment.\" \n\n\"Could you describe him?\" I ask. \n\n\"Fifteen years ago, man,\" he says, and I nod. \"I did describe him to Sweeney. He didn't seem to care.\" I search the folder for his interview notes, and see he wrote down something about Jason saying that but did not write down the description. Goddammit Leo. \n\n\"Let's go vague then. Old or young?\" \n\n\"Old. Older than me. Later fifties,\" he says, and I write that down. \"Whitehaired grandpa looking fucker.\" \n\n\"Where around the apartment?\" I ask. \n\n\"Near the parking lot. Saw him near my car once, like he was looking for stuff, casing it out,\" Jason explains. \n\n\"Besides your DNA being on file from an unfounded allegation, is there another way the police would have found you?\" I ask, and he nods. \n\n\"Yeah. They found a business card in her shoe under her foot. Low and behold, it was my card. I was an executive assistant for a market research firm,\" he says, and I scan the paperwork until I find a picture of the card. \"That's it.\" \n\n\"I thought you said you were between jobs?\" \n\n\"I was when I jerked off into a cup, I wasn't when I was arrested.\" \n\nThis is fifteen years in the past for him, so I never expected to get much of value. I reconfirm his alibi and ask if he had given his card to anyone. He says when he was unemployed, he would leave the card in tip jars, or pin it to board in public areas. Twenty-eleven, several parts of the economy were still recovering, so he was advertising his expertise anywhere he could. \n\nThe hour I have with him zooms by, but I find it very productive, and he legitimately thanks me for talking to him. He certainly left with a good feeling about his chances of getting out of here. \n\n- \n\nEric Woolworth does not help much either, but I am starting to a see a trend of the killer's modus operandi. Besides leaving behind one form of DNA or forensic evidence, he leaves behind a business card. In the event the man he is framing is not in a database, the business card will lead the police to that person. I am sure there are other correlating things. This killer seems to be trying to prove something. \n\nI scroll through my phone in the elevator, and see I have a missed call. It must have come in when I was interviewing Jason and Eric. When I click the app, I see it is a voice mail from a number I do not recognize. I hit play and put it to my ear. \n\n\"Detective Kramner, this is Summer Pillsbury with the Tribune. I would like to ask you a few questions regarding the Jason Boatman case. Please call me back...\" she says and leaves me her phone number. Delete. \n\nI exit the elevator with my backpack over my shoulder. My notes are in a secure travel bag I can lock with a key. I walk to my apartment and jiggle the doorknob. It is open and I assume Jennifer is still here. \n\nI drop my keys in the bowl and look toward the living room to see Jennifer coiled up on the couch with Atticus. The television is on, and she is watching Netflix and chilling with my cat. Before she came over, she had changed from her business casual work attire to pajama shorts and her police physical fitness shirt. Her long black hair is free and spread out on her shoulders. \n\n\"You could have told me he was an unsufferable cuddle bucket,\" Jennifer says, rolling him on his back and rubbing his belly. He retaliates by kicking his back paws into her hand. What the hell is a 'cuddle bucket'? I think about that phrase for a moment and come to a rational conclusion of the cat liking to cuddle. \n\n\"He's a pathetic sellout,\" I say, kicking my shoes off. \"Drink?\" I ask as I walk toward the kitchen. I see an open beer on the table next to the couch. \"You seem to be situated.\" \n\n\"Call it my fee,\" she says, continuing to battle the cat. \n\n\"Thanks for doing that,\" I say, grabbing a glass from my cabinet and filling it with water from the faucet. \n\n\"I don't like drinking alone, have a beer,\" she says, and I put the water to my lips. \n\n\"It's midnight,\" I say, then take a sip. \n\n\"And?\" she asks, taking a sip of hers. Every time I have ever interacted with her, she has been nothing but an adamant professional. A badass professional even. I remember us arresting Helga Texada together, and her aggressiveness leading up to it. Like her ambushing me in the elevator for information. Now she is popping a beer at midnight with an American Wirehair on her lap. I guess those things are not mutually exclusive. \n\n\"I decline, I got a case,\" I say, taking the water with me to the couch. \"Thanks for the offer of my own beer.\" \n\n\"Anytime,\" she says, leaning deeper into the couch, then blowing the hair that landed on her eye. \"I might catnap this little guy.\" \n\n\"Feel free. Barely even my cat,\" I say, putting my feet up on my coffee table. \n\n\"How's that?\" \n\n\"Bastard broke into my apartment last week,\" I say, moving my hand to pet him, and he playfully attacks my wiggling fingers. \n\n\"How?\" \n\n\"I opened my patio door when it rained, and he bolted inside,\" I say, motioning my hand to the sliding glass door. \n\n\"We're on the fourth floor,\" she says. \n\n\"I know. I think I was impressed,\" I say, and she laughs. \n\n\"Ninja,\" Jennifer, picking him up, moving on the couch a little. I see the side of her breast through her sleeve. She is not wearing a bra. She adjusts to put her back against the arm rest and extend her feet toward me. As I watch her do this, I see her slit through her shorts and snap my head forward. She is not wearing panties. \"You okay?\" \n\n\"Mmhmm,\" I say, and sip my water. It is not enough. \"I think I will get a beer.\" \n\n\"That's the spirit,\" she says, playing with the cat more. I found her sexy last year. Now she is on my couch in pajamas without underwear. Playing with a pussy. This is the kind of shit that always happens when I am in a relationship. I am not that guy, so I do not do it when presented an opportunity. This is the time I would be misreading things. \n\n\"I did find a file on that Silverlake guy,\" she says from the couch as I remove a beer bottle from the fridge. \n\n\"Really?\" I ask, and she confirms. \"What's the skinny?\" \n\n\"I didn't look at them, just found them. Seven files in total. You'll get them tomorrow,\" she says as I pop the beer with a bottle opener she left on the counter. \n\n\"How'd you end up in IA?\" I ask, as she is taking a gulp. \"If you don't mind me asking.\" \n\n\"Believe it or not, Internal Affairs is not actually recruited through the police. Most of us aren't even cops. Only two people in the department have arrest authority,\" she explains as I sit down. \"I'm one of the two actual cops, which was some kind of deal between the DA and the Police union way back when. To have at least a few officers so it isn't perceived as a cop hunting unit.\" \n\n\"Yeah, because the force absolutely loves IA,\" I say, and she giggles. \"How'd you get stuck with the job. I know Doll used to.\" \n\n\"Dolly was my Sergeant when I was recruited,\" she says. \n\n\"I'm going to tell her you called her that,\" I say, and Jennifer sticks her tongue at me. Never call Doll, Dolly. \n\n\"For this job, they look for integrity, minimum complaints, what you'd expect.\" \n\n\"Who is they?\" I ask. \n\n\"City council review of recommendations from the DA's office. I was voluntold,\" she says, and I laugh. Voluntold, a derogatory term for someone else volunteering you for something, but you have no opinion on the matter. \n\n\"How long?\" \n\n\"Two years. Then I can go back with a lovely stigma of a snitch,\" she says, and I nod. \"You caught the dirtiest cop in history and look what happened to you. Imagine being the person who processed her.\" \n\n\"I'd do it again. The blue wall is bullshit,\" I say, and take a sip. \n\n\"Says the guy who didn't turn in Dolly for failure to report,\" Jennifer says, and I pretend I have no idea what she is talking about. \"You know I have a file on you, right?\" she asks. \n\n\"What?\" \n\n\"I had to investigate you when you recused yourself from the Hopkins case. Automatic investigation. I think your ex is guilty as fuck,\" she says. I appreciate the sentiment. \"It was the right thing to get away from that. I imagine it was frustrating.\" \n\n\"It still is,\" I say, and take several gulps. I goes down the wrong pipe, and I cough it up a little, wiping the small spillage on my sleeve. \n\n\"You good?\" \n\n\"Wrong pipe,\" I say, and she laughs. \n\n\"You still with Hill? I know she moved, but you still a thing?\" she asks, and I finishing coughing while shaking my head. \"Shame, I liked her. Good cop. A little ditzy, but a decent investigator.\" \n\n\"We still talk, but we're both realistic,\" I say, and she reaches over, takes the beer from my hand, and places it on the coffee table. \"What's up?\" \n\n\"Just wanted to make sure I wasn't a home wrecker,\" she says, then quickly straddles me. \n\n\"Whoa,\" I say, and she kisses me. \"What are you...\" I start to ask before she shoves her tongue into my mouth. \n\n\"Exactly what you think I'm doing,\" she says. \"We're two single adults, don't overthink this.\" \n\n\"Turning brain off, right, about, now,\" I say, and she laughs while kissing me. \n\n\"Not all the way off, just the douchebag,\" she says. Ouch. \n\nWhile she is straddling me, I grip the bottom of her shirt and slide it off her body. It takes an extra moment to pull all her hair out of it. Lauren turned me into a tit man, so I do not know how to feel about Jennifer's much smaller breasts. One touch of my hand to her soft skin, coupled with the feeling of her nipples hardening as I rub my thumb over them, alleviates my dissatisfaction. \n\nI pick her up as I stand, gripping her butt to support her weight. Her arms wrap around my neck, and I carry her across the apartment and into my bedroom. I drop her on the he bed, and start kissing down her body, pausing longer at her breasts to suckle her nipples. She grips my hair, and I feel her push my head down. \n\nI pull her shorts down, revealing her fully naked body. I thought I saw a trimmed black bush earlier. My lips trace down her torso and abdomen, then begin servicing her properly. Her fingers lock in my hair, and I take my cues of pacing based on the tightness of her squeeze. \n\nJennifer's body spasms, her back arching upward, then collapsing as I slow down. I can hear her gasping. She leans up, pushing me backwards until I am standing upright. She pulls up my shirt until I take over, then she starts on my belt. My pants drop the floor, and she slithers down the side of the bed. I feel her hot mouth on my dick. I moan as I move her hair from her face and watch her suck my dick. \n\nOnce I am erect, Jennifer lays back on the bed and spreads her legs. \n\n\"Protection?\" I ask. \n\n\"Don't worry about it,\" she says. \n\nI push into her pussy, and goddamn she is tight. Her legs wrap around me, and I bury myself in her. She pulls me onto the bed, and I place my body on top of her as I push my hips down. Her hands grip my ass, and I feel her nails in my skin. I never noticed how tiny she was until I wrap one arm around her back. The opposite hand is behind her head so I can kiss her. \n\n\"Slow down, slow down,\" she says, but I can tell it was not from discomfort. \"Enjoy it, take your time.\" \n\nI slow down. I grind into her slowly, but our kissing intensifies. I can feel heat coming from our bodies. The sweat is beginning to run down her face, and I can taste the salt on her lips. Her pelvis is pushing up against me, and that effort on her part pays off when she releases my mouth to grunt out her climax. She hiccups, and I feel her body convulse, but not the from the orgasm. I reach over to my nightstand lamp and click it on. \n\n\"Are you alright?\" I ask, and immediately see she is crying. \"We can stop.\" \n\n\"No, I cry when I come,\" she says, laughing a little from embarrassment. That is a first for me. \"Lights off.\" \n\n\"Why? I like it on. You're goddamn sexy,\" I say, and she shakes her head. \n\n\"I'm not. No one likes to watch a girl cry when you fuck her,\" she says, then flicks the light off. \n\n\"Okay, this is what we're doing,\" I say, and roll over so she is on top. I sit all the way up. \"Extend your legs out, wrap your arms around my neck.\" \n\n\"What are we doing?\" she asks, but still does as requested. Our position is now deeply intimate, close contact, and face to face. I then turn the light back on. \"Stop,\" she says, then reaches for the switch, but I do not let her. \n\n\"We are going to look right at each other,\" I say, and she shakes her head, still struggling for the light. \n\n\"I look disgusting when I cry.\" \n\n\"You look beautiful,\" I say, and she puts her forehead on the pocket of my shoulder to hide her face. I have never understood beautiful women who are self-conscious. I probably never fill. \"Look at me.\" \n\n\"Not when I'm crying,\" she mumbles into my shoulder. I thrust up hard, making her gasp and jump back. \"Keep your eyes, right here.\" \n\nWe resume. I gently lift her off my dick and glide her back down. We alternate between heavy kissing, and unblinking eye gazing. My hand drifts up her back, wiping away her sweat, and I feel her pussy tightening around me. She starts to reach for the light, but I grab her hands. \n\n\"Don't look,\" she says, and I see the tears starting. She grips my back, and exhales all the air in her lungs, then rests her teary face on shoulder. I tilt her head back and kiss her, and it is right back to the hard kissing. She falls backward so I am on top, and I keep my slow pace to enjoy it as instructed. \n\nJennifer cries two more times and is nearing a third when I say I am getting close. \n\n\"Look at me as you come,\" she says, and I say I will. I pump faster at the very end, and grunt inside of her, trying to maintain eye contact as I do. It makes her cry again, and our lips embrace. We both lose track of time as we resume kissing. \n\nI reach down to my pants to grab my phone and ready an alarm for work in the morning. I wear Jennifer like a comforter, her arm draped over my chest. She falls asleep well before me. I smell her hair and kiss her head, her twitching with every warm touch of my lips. Just before one in the morning, I turn the lamp off, and join her in sleep. \n\n- \n\nWednesday - August 5, 2026 \n\n-Midge Appletree- \n\nWill and I both get home late after conducting interviews. We tried to sit down with Marvin Hyde, the other man who has already been released from prison. He immediately told us he had no intention of speaking to us. The last time he talked to police to clear up a few things, he spent a decade in prison. With him out of the way, we spoke with more people on our interview list. At least the ones were could immediately talk to in person. We called at least three dozen family members and friends of the victims. \n\nWhat we both found incredibly strange, was the fact two of the victims had an immediate family member who told us they did not think the person convicted of the crime committed it. Patty Visscher's father did not believe Aaron Pike murdered his daughter. Nor did Helen Ryder's sister, and she even went as far as hiring a private investigator and was on the witness list for the defense before he took a plea deal the day before trial. She forwarded us the contact information for the PI she used. \n\nThe house is going to be quiet. Gianna is driving the boys to spend time with their father for the week and will not be back until Thursday evening. Wendy likes to pretend I am the reason her parents are divorced, but it is really telling she refused to go and visit him. Unlike her brothers, she is old enough to remember her father being a cheating dirtbag who blew their money on gambling and prostitutes. Wendy is too cool to talk to me, so it is essentially like having the house all to myself. \n\nI plan on catching up on my violent television shows at the very least. \n\n\"I'm home,\" I say, just to give Wendy a head start if she is doing something stupid. I pause for a moment to listen. There is the faint sound of music coming the upstairs. Just where I left her. \n\nI place my gun in the safe above the fridge and toss my shield on the counter. Wendy left a tub of ice cream open next to the fridge. I groan as I put it away, mostly because I have barred myself from eating it during the pregnancy. Do not tempt the pregnant lesbian with the gun. \n\nI drop the ice cream scoop into the sink, and see two bowls, two spoons, and two plates from a separate meal. I wipe my hand over the counter where the ice cream was, and do not feel condensation. This was not that long ago. Looking toward the stairs, I see her shoes that I always tell her to put next to the door. I also see a pair of boy's tennis shoes. \n\n\"Oh, fuck no young lady,\" I say, and stomp up the stairs as loud as I can. \"Wendy!\" \n\nI do not hear a reply by the time I noisily arrive at her room. The door is locked, so slam the side of my hand into it. \"Young lady, open this door, right now!\" \n\nI hear her muttering for someone to leave. Unlucky for her Gianna and I specifically chose this house because it came with doors that I can easily unlock with a small tool. I would like to thank my time in Property Crimes for the skill set. I pop her lock with the tool I keep on the top of her door frame, and barge in. \n\n\"What the fuck M!\" Wendy says, trying to block me, nearly slamming the door on my stomach. She realizes what she almost did and flinches back like I was about to pistol whip her. \"I'm sorry, I...\" \n\nWendy keeps stammering as I glare at a startled young man still in her bed looking for clothes. \"We didn't do anything...\" \n\n\"...because I came home. Do your parents know where you are?\" \n\n\"That's none of your business,\" he says, and Wendy starts to step between us. Her and her brothers get an earful for a lot less than that. \n\n\"The fuck did you just say to me?\" I ask. \n\n\"He's leaving,\" Wendy says. \n\n\"No shit,\" I say, and turn to her. \"Not before his parents know.\" \n\n\"Like I'd give you their number,\" he says with a tone if I heard come out of my kid's mouths, dental records would be required to identify them. \n\nThe young man's pants on the floor. I grab them and feel the back pocket for a wallet. \n\n\"Hey that's mine...\" \n\n\"...don't fucking talk,\" I say. In his wallet I finding a student ID card. \"Jesse Whitaker...are you fucking kidding me?\" \n\n\"I'll call the cops...\" \n\n\"...I am a cop. Right now, the only thing making this not trespassing is me,\" I say before I toss his pants to him. \"Get dressed.\" \n\n\"You're a cop?\" he asks. \"You might want to let me go.\" \n\nI know you did not just try hiding behind your daddy's rank. That might scare a rookie patrol officer, but not a detective on the job for over a decade. Certainly not one who knows his mother on a first name basis. \n\n\"Let's play that game,\" I say, and call Jill. It starts ringing. \n\n\"Who are you calling?\" he asks. \n\n\"You had your chance,\" I say, and it connects. \n\n\"Do you have any idea what time it is?\" Jill asks. \n\n\"So, funny story, let me skip to the end. I just got home, and someone wants to say hello,\" I say, then hand Jesse the phone. \n\n\"Hello?\" Jesse asks, and I watch him go deathly white. \"I can...mom I...but...no I...I know I lied, but...\" \n\nWendy is mortified, but maybe she should reconsider putting out for guys who cry when I call their mother. \n\nJesse hands the phone back to me. \n\n\"Jill?\" I ask. \n\n\"Oh, I am very awake now. I will be there, very soon. You have my permission to fucking handcuff him if needed,\" Jill says, and I let her know I will see her soon. ",
        "\"Get dressed,\" I say to Jesse, who is too shocked to respond. \"Young lady, downstairs, now.\" \n\n\"But...\" \n\n\"...You only know two phrases right now. Yes ma'am, no ma'am. That's it,\" I say, and she appears to lose her will to fight me. \"We got a problem?\" \n\n\"No ma'am,\" she says. \n\n\"Good. Downstairs,\" I order. \n\n\"Yes ma'am.\" \n\nI get the kids downstairs and have them sit on opposite ends of the couch while I sit on a chair with my legs crossed watching them. I have had to pee for ten minutes, but I suffer in silence. These two will feel my glare for as long as I can muster. \n\n\"If you need to go to the bathroom...\" Wendy begins to say, but my eyelashes fluttering speaks for me. \"No ma'am, yes ma'am.\" \n\nIt is an agonizing half hour before we hear a car pull up on front of the house. I see Jesse flinch each time a sound is heard. The car door closing. The key fob locking the door. The gate in front of the house swinging closed. He is a ball of nerves right now. I know Jill well, so I understand what is about to happen to him. \n\nI leave the chair and answer the door before she knocks. Jill steps inside in pajama pants and slippers. Is there anything this woman could wear that would not make her look like an assassin? \n\n\"Mom...\" \n\n\"...Car. I'll deal with you later,\" she says, too angry to even look him. Jesse looks at Wendy, tries to say something but does not, then quietly leaves my house. I can tell Jill wanted to slap him in the back of the head but managed not to. \n\n\"Sorry about this,\" I say. \n\n\"No, he's at your house, I'm sorry,\" Jill says, sighing while pinching the bridge of her nose. \"You are a remarkably poised pregnant woman.\" \n\n\"I'm barely pregnant,\" I say, touching my stomach on reflex. \n\n\"I was a crier,\" Jill says with a grin. \"You are doing great. Stepmom to stepmom.\" \n\n\"Thanks,\" I say. \n\n\"Other than the obvious, how did he behave?\" \n\n\"He tried to threaten me with his dad,\" I say, and her face is beyond description. \n\n\"Derek has made it perfectly clear what happens if he does that. Hope you didn't like him too much sweetie, because he's going to military school,\" Jill says, and Wendy sinks her face into her palms. \"Have a nice night. Or morning.\" \n\n\"Later,\" I say, and close the door after she leaves. \n\nI take this opportunity to go to the bathroom. When I return, Wendy has not moved an inch from her spot on the couch by the time I sit down. \n\n\"I'm going to ask you, point blank. Don't fuck with me. Yes or no?\" I ask, and she knows what I am asking. She shakes her head. \"No ma'am, yes ma'am.\" \n\n\"Fuck you,\" she mumbles. \n\n\"What was that?\" \n\n\"Fuck you,\" she says louder, and leaves the couch. I stand up as well and block her route to the stairs. \"You're not my mom.\" \n\n\"I am giving you the opportunity to have her not know,\" I say, and she pauses. \"Did you tell her you were considering starting to have sex?\" \n\n\"No,\" she says, and attempts to push her way through me. \"I don't want to talk to you about this. I don't want to talk to mom about this. It's my business.\" \n\n\"Not in my fucking house it isn't,\" I say. \n\n\"It's always your house.\" \n\n\"Because it is my house. Your mom couldn't be on the mortgage because your dad left her so fucked a co-loan could have raised the interest rate fifteen percent. You need to understand this young lady, you are in my house,\" I say, and she pushes me hard to clear a path. I have had enough and grab her by her collar and shove her into the side table next to the stairs. \"I will not hit you first, but if you put your hands on me like that again, I will fuck you up. Pregnant or not. Do you understand me?\" Wendy is seething in rage and does not reply to me. \"Young lady, do you understand me?\" \n\n\"Yes ma'am,\" she says, though her tone sounded an awful lot like fuck you. \n\n\"Will you please, just talk to me?\" I ask, and she looks away from me. \"Wendy.\" \n\n\"Why would I talk to my lesbian stepmother about sex with a man?\" she asks. \"Or my lesbian mother?\" That boy in her bed was not a man. \n\n\"Just because I am not sexually attracted to men, doesn't mean I don't understand them, or can't help you understand what's going on with you,\" I say. \n\n\"I'm not going to take advice on men from someone who hates men.\" \n\n\"Hates men? My best friend is a man. My partner, who I unambiguously trust with my life, is a man. I love your brothers with every fiber of my being,\" I say, and she realizes that was a stupid accusation. \n\n\"You need to tell us these things. As much as we don't like it, we know you're going to anyway. You can at least let us help you be safe about it,\" I say, and Wendy is starting to calm down. She is still angry, so much in fact that a tear rolls down her cheek. When it slithers to her chin she wipes it away with her thumb. \n\n\"I went to a clinic and got birth control last week,\" Wendy says. \n\n\"I am proud that you did that,\" I say, and I am serious. At least she had some foresight. \"I am. Just don't make yourself easy.\" \n\n\"What is that supposed to mean?\" she asks. \n\n\"I mean leaving the house looking like a prostitute,\" I say, and she scoffs at me. \n\n\"My body...\" \n\n\"...my choice, yes I understand you're reading sophomoric feminist theory. I'm not saying don't convict the guy who takes advantage of that. I say castrate and crucify him, but the reason he thought he could, doesn't exist in a vacuum.\" \n\n\"What would you know about any of that?\" Wendy says. What would I know about men taking advantage of a situation? Too much. I think about when I was raped, and I know the memory must have slapped my face because Wendy saw the change in my demeanor immediately. \"M?\" \n\n\"Just,\" I say and then start crying because I am thinking about it. \"Be more careful than I was.\" \n\n\"Did something happen to you?\" she asks. I walk to the couch and sit down. \"M?\" \n\nI have been doing so well at not being an emotional pregnant woman. I never thought it would be an off handed comment from Wendy that sets me off. Wendy sits down next to me and wraps her arms around me, and I flinch hard, but she pulls me closer. She puts her cheek on my shoulder, and I tilt my head onto hers. \n\n\"How did I never think about the fact you don't like being touched?\" Wendy asks herself out loud. \"You don't have to say anything right now. I promise to talk to you, about my stuff, if you promise to talk to me about yours.\" \n\n\"Promise,\" I say with a sniff, but do not have it in me to tell her right now. I think she already knows what I would tell her if I did. We both know that is enough. \n\n- \n\nThursday - August 6, 2026 \n\n-Chase Kramner- \n\nJennifer is gone when I wake up, but she left me a handwritten note. She lets me know last night was fun, and that she was open to a real date, or a second evening. \n\nI shower, and while getting dressed I constantly push Atticus back with my foot to keep his fur of my pants. A tie is forming around my collar when my phone rings. Leaning over, I look straight down and see that number from last night is calling. That journalist. I let it go to voicemail. \n\nAfter brewing a to-go coffee, I drive to work and make my way to the Homicide Department office to see the progress of the board. The first thing I see is someone I do not know examining it. \n\n\"Who the fuck are you?\" I say as I enter the office. The Kaiser looks displeased, his arms folded across his chest while Midge looks more tired than usual. I will chalk that up to the pregnancy. \n\nAt our case board is a blond woman looking at all our work. Her back is to us, and she keeps looking at it like we are not in the room. All I see is a formal black Nine West suit and three-inch heels. Her long blond hair is contained by a single hair tie, hanging over her back in a ponytail. \n\n\"Excuse me?\" I ask, and she keeps ignoring me. I wait for a moment, and I think I hear music. I lean a little, and see she has white air pods blasting music. I put my hand in front of her, and snap once. She turns her head to me, seemingly surprised that other people are now in the room. \"How's it going? Who are you?\" \n\nWithout saying anything, she removes the air pods from her ears, and returns them to her case. She inserts the case into her pocket, then flicks her hair behind her ears. \n\n\"Yvonne Grimsdotter, Special Agent with the FBI,\" she says with a soft smile and a firm handshake. She is taller than me without the heels and her skin is icy pale. Her eyes resemble frost. Her last name sounds Nordic, maybe Icelandic. She is a smirking angel with a Glock. \n\n\"Why is the FBI here?\" Midge asks. \n\n\"Who are you?\" Yvonne asks. \n\n\"Detective Midge Fucking Appletree,\" she says. \n\n\"Something tells me that isn't your real middle name,\" Yvonne says with a giggle. \n\n\"Why is the fed here?\" Midge asks. \n\n\"Because we received a call you are investigating the possibility of a serial killer,\" Yvonne says, and we all look at each other to discern who made that call. I do not think it was either of them. My money is on Doll. The one time the FBI does not have a response that is measured by a glacier. \n\n\"We do not know that yet,\" I say. \n\n\"Are you a profiler?\" she asks, and I sigh. \n\n\"No.\" \n\n\"Well, I am. What's your name? Detective?\" \n\n\"Kramner. Sergeant,\" I say, and she grins. \n\n\"Well, Sergeant Kramner, I am a trained FBI profiler, and I will determine if what you have is a serial killer,\" she says, and looks at the board again. It is like we are not in the room. \n\n\"What do you think so far?\" The Kaiser asks. His tone is inviting and pleasant. The Kaiser felt the room and decided someone needed to play good cop. \n\n\"I think you're on the right track,\" she says, and turns to him. \"You are?\" \n\n\"Will,\" he says. He is playing the diplomat, leaving out his rank and title. \n\n\"Hello Will. I'm Yvonne,\" she says, shaking his hand and sitting on his desk. She is noticeably warmer to him. \"If you guys are worried about credit, don't be. My boss is already talking to your boss, and if we do have a serial killer, this will be joint. Joint statements, joint information, joint credit. You guys would likely benefit from our resources.\" \n\n\"Right track?\" Midge asks. \n\n\"That's what I said. These cases are connected. Why, is the question,\" she says. \n\n\"Don't you mean how?\" I say. \n\n\"No, I mean why. I think you all figured out the how. Or are close to having a half decent guess. Why is more important. Why did they do it? Why did they stop?\" \n\n\"Did they stop?\" The Kaiser asks, and she points at him to concur. \n\n\"The cases were brought to your attention because of an internal review, right?\" she asks me. \n\n\"Yeah.\" \n\n\"Just convictions?\" \n\n\"That's accurate.\" \n\n\"Did you guys tear open your cases to see if anyone was acquitted or had charges dismissed for murder or attempted murder by strangulation in twenty-eleven?\" she asks, and we all look at each other. \"Maybe ask different jurisdictions to see if the killer isn't moving hunting grounds?\" \n\n\"We wanted to examine the cases directly in front of us before we dove headfirst into a rabbit hole,\" Midge says. \n\n\"I went ahead and did that for you,\" she says, and points to a case folder on the table. \"Don't worry, it matches all of your other similarities. Victim has occupational surname, strangulation with a related material. Kobbler strangled with bootlaces. Variant spelling with a K instead of a C.\" \n\n\"Cobbler?\" Midge asks. \n\n\"Shoe repair person is a cobbler,\" I say. \n\n\"I noticed you said, victim has occupational surname, not had. Was that misspeaking?\" The Kaiser asks. \n\n\"I like him,\" she says, and hands him the file. \"Venessa Gray, maiden name Kobbler. Attacked by a man who attempted to strangle her to death in twenty-eleven. Only our girl here, was packing and shot him over her shoulder and in the face.\" She demonstrates the action, holding her left hand like someone had something wrapped around her neck. Her right hand takes the shape of a gun, and she pulls the trigger next to her left ear. \n\n\"Perp?\" I ask. \n\n\"Fredrick Aimer,\" she says. \"No priors. Guess what was found in his car?\" \n\n\"DNA or forensic evidence of some hapless fuck?\" Midge asks. \n\n\"Ding ding ding,\" Yvonne says. \"And a business card for a law firm where a Mr. Lacer worked. The evidence was a few strands of hair Mr. Aimer kept in a glass vial. Couldn't match it, because Lacer refused to cooperate, and the judge refused to sign a warrant to make him.\" \n\n\"Aimer is our killer?\" I ask. \n\n\"Assumed,\" Yvonne says, closing the folder, then handing it over to me. \"I still want to know, why? Why these people? Why frame people for it in the way he did? Did he have an accomplice?\" \n\n\"Midge,\" I say then hand her the Aimer file. \"You got Aimer.\" \n\n\"Because I'm pregnant?\" she asks. \n\n\"You shouldn't have been doing interviews yesterday anyway. Don't push it,\" I say, and she groans, but accepts the task. \n\n\"Congratulations,\" Yvonne says. \n\n\"Up yours, fed,\" Midge says without looking at her. \n\n\"Will, I want you to hunt down all the material evidence of this case. Fine tooth comb it with Jill or whoever she delegates it too,\" I say. \n\n\"What about you?\" Will asks. \n\n\"I'll make sure we don't have any more cases to follow, and then I'm going to interview Hank Silverlake later this afternoon,\" I say, and Will asks who that is. \"He was the Lieutenant for Homicide in twenty-eleven.\" \n\n\"Speaking of,\" we all hear from the door, and we turn to see Jennifer. \"I tried your office, figured you were down here. Those investigations regarding you know who are on your desk.\" \n\n\"Thanks,\" I say as she trails her finger down my arm as she walks away. I hope no one saw that. I turn to the room, and it is apparent everyone saw that. \"Shut it. Let's get to work.\" \n\n- \n\nThursday - August 7, 2026 \n\n-Jill Whitaker- \n\nI picked up my son past midnight from what I presume is his girlfriend's house. His girlfriend just happened to be my friend's stepdaughter, and they were likely doing something they should not be doing. I feel like I cannot lecture him in good conscious considering I have been having sex since I was fourteen. I was simply better at not getting caught. \n\nWhen I get to work, I am greeted with one of the strangest requests I have ever received. Detective Kaiser from Homicide is asking for us to dig out the material evidence from several cases, each around fifteen years old. What the hell is this about? \n\n\"You know, no one was here when these cases were done?\" I ask Will after he enters my office and asks us for assistance. \"This lab wasn't a thing back then.\" \n\n\"I figured as much,\" he says and hands me one of the cases. \"Humor me.\" \n\n\"Some of this shit is probably in storage downstate,\" I explain, and he says that is fine. We do not have a high case volume right now, so I guess we do have the time. \n\n\"What do you need from us?\" he asks. \n\n\"We'll get the stuff, but the mileage costs will come from your department, not mine,\" I say, and he says he will cover any overtime costs or travel expenses. That is not his decision to make. \"Since when are you the LT?\" \n\n\"Since Chase got Leo suspended,\" he says, and I am not sure I follow. \"Chase starts case review, and suddenly we're investing five of Leo's old cases and he's taking a sabbatical? It might not be recorded as a suspension, but let's call it what it is.\" \n\n\"I'll send Frankie and Heath when they get in,\" I say, and start a search in our online archives for the evidence we have on station. Which is none of it. \"It's all in storage. I can't promise we'll start looking at it today, but definitely tomorrow. Ted!\" \n\n\"Boss lady?\" I hear him shout back. \n\nTedman Puthera came from a recommendation by my nearly retired friend Frank Blanchard. He was rolled up in that Property Crime bust that got Lauren the recommendation for the Secret Service. A perfectly cooperating witness who is tech savvy and had potential to be our digital forensic analyst. I was concerned because of his history, but it was ruled as duress and his record is squeaky clean. \n\n\"Don't call me that,\" I say, and he laughs. \"Makes me feel old.\" \n\n\"Sorry, Chief,\" he says, and I smile. \"What do you need?\" \n\n\"While the material evidence for these cases are downstate, some of the electronic stuff isn't. Do a full scrub on the victims and the suspects in these cases. Full social media scrub, LinkedIn, everything,\" I say and hand him the first folder. \"Start with this one.\" \n\n\"You got it,\" he says, looking at the cover. \"Twenty-eleven?\" \n\n\"Is that a problem?\" \n\n\"The iPhone four was old in twenty-eleven,\" he says. \n\n\"Was Myspace still a thing?\" I tease. \n\n\"What's Myspace?\" Ted asks, and both Will and I look at him. I forget Ted is twenty-three sometimes. \"I'm kidding.\" I am not sure he is. \n\n\"Get to work, give me a report within six hours, then I'll give you the next folder,\" I say, and Ted nods and begins his process. \n\n\"How's he working out?\" Will asks me. \n\n\"He is enthusiastic to not be in Sri Lanka,\" I summarize. \"He is one of my most diligent workers.\" \n\n\"Let me know when the old evidence gets here. Send me your mileage costs, we'll take the hit,\" Will says, and I say he will definitely cover my budget. \n\nNow it is quiet in my office, and I have a moment to think about Jesse. I did him a massive favor by not telling his father what he did last night. Derek was deadly serious when he said Jesse would go to military school if he used his authority to threaten a police officer. \n\nJesse was doing so well. I thought we were beyond this pattern of behavior. After he told us he felt worried the girls would make it feel neglected, we made sure he never felt left out. Derek gets out of work early at least one night a week for boardgame night. No exceptions. That is what deputies are for, and Derek has two. \n\nEven with that, he came back full circle. He is lying again. He is bullying again. He still thinks his dad being chief of police is a get out of jail free card. These are just the things we know he has done. Is he stealing again? What else is he doing? That phone call from Midge is not the way I wanted to find out he had a girlfriend. I thought we had gotten to a point where he could share that with me. \n\nIf I tell Derek this happened, Jesse is going to a boarding school. He has lied to Derek too many times for this to end a different way. I do not want that to happen. That would be outsourcing the problem. We have not even diagnosed the problem. \n\nMy phone rings. \"CSI Chief, Whitaker.\" \n\n\"Hey Jill, front desk. Someone is here to see you. Can I send him down?\" the desk officer asks. \n\n\"Who is it?\" \n\n\"Your son,\" he says. I sigh into the phone. \"Jill.\" \n\n\"I'll get him,\" I say, and leave my desk. I take the elevator to the first floor and walk to the reception area where Jesse is sitting in the chair next to the reception window. \"You know I have a cellphone, right?\" \n\n\"I wanted to call a number you wouldn't ignore,\" Jesse says, and my face scrunches together. \n\n\"It's the last week of summer. You asked for freedom, and you got it. You abused it, and now you should be at home. Why are you here?\" I ask, and he looks down at the floor. \"Young man, what have I said about eyes?\" \n\n\"Her name is Wendy,\" Jesse says, then looks at me. \"I'm sorry I threatened her mom.\" \n\n\"You shouldn't be telling me that,\" I say, and he nods. \n\n\"I know, I was hoping I could tell her. Does she work in this building?\" Jesse asks, and I smile at him. \n\n\"She works here,\" I say, but I know she is working that case with Will and Chase. She could be too busy, and I do not want to interrupt her with an apology from a fifteen-year-old. \"She's busy though. How about I call her after work, and we'll drive over to her house. You can properly introduce me to Wendy.\" \n\n\"Okay,\" Jesse says. \n\n\"How'd you get here?\" I ask, and he says he took the bus. \"You too cool to get coffee with you mom?\" ",
        "Jesse shakes his head, and we leave to get some breakfast. \n\n- \n\nThursday - August 6, 2026 \n\n-Chase Kramner- \n\nYvonne follows me straight to my office and I can tell she had already been here. Doll must have let her in after she called the FBI to let them know about our investigation. She had been busy, because my previously clean floor is now covered in case files some poor uniformed officer likely was shuttling from records for her all night. Yvonne does not address me before placing her air pods into her ears and starting her music again. She sits on the floor like a schoolgirl, her body swaying side to side as she listens. \n\n\"Doll!\" I shout as I sit at my desk, and I hear her coming. When her head pokes around my door, I direct my eyes to Yvonne. \n\n\"You know I had to,\" she says. \n\n\"I know, but give me a heads up,\" I say. \n\n\"You don't say anything about this, and I don't say anything about you fucking Jenn,\" she says, and I try to maintain a poker face in case she was phishing. Something on my face gave it away. \"Jenn told me she had a crush on you. Did she show up in pajama's shorts with no bra?\" \n\n\"Message received, thank you,\" I say, and she snickers as her face ducks out of my door. \n\nI open the first of seven folders Jennifer gave me on Hank Silverlake. Technically six, the first one is just his service record. \n\nHenry Silverlake. Goes by Hank. Born in Cleveland, Ohio, in 1964. Associates degree at a community college before the academy. Graduated in 1985, assigned to the city, fourth precinct. First IA investigation is 1988. Cited for excessive force, IA ruled the complaint valid, one-month suspension, transfer to second precinct. In the folder is a picture of bruises on the face of a man he allegedly beat with a baton. \n\nPromoted to Patrolman First Grade, three times in four years because of demotions from 1988 to 1991. Two of those have correlating IA investigations and the third demotion was for general poor performance. IA investigation two was for his ex-wife filling domestic assault charges, ultimately unfounded, but it was enough pressure to demote him. IA investigation three was for alcohol abuse and drunk on duty. He was forced to enroll in counseling. \n\n\"How the hell did this guy become a lieutenant?\" I ask aloud, then remember I have a guest. I turn my eyes to Yvonne, who is still doing her thing. \n\nFinally promoted to Patrol Sergeant in 1993. In 1999 he passes the detectives exam and is assigned to Narcotics. IA investigation number four is 2001 for allegedly planting evidence. Unfounded, but the drugs missing from evidence were never recovered. IA investigation number five is in 2002, violating scope of warrant. IA report substantiated the accusation, and he was suspended for a week. The case he was pursuing was thrown out, with prejudice. IA report number six was in 2005 for witness intimidation. Substantiated, suspended for a month. \n\nHis record reflects a hot heated, short fused loudmouth. Several citations for actions not enough to generate an IA investigation, but does not reflect positively on him. Harassing statements to female officers. Multiple sexual harassment inquiries. Racially insensitive remarks. He is the living embodiment of why people hate cops. His record began to clean up in 2005 after the last investigation, so someone finally got through to him. Promoted to Sergeant in 2006 for Homicide, then lieutenant in 2011, before retiring in 2017. \n\nI set a phone alarm to remind me of my meeting with him in case I got distracted, which goes off just as I am wrapping up the second to last page of his record. I close the folder and turn off my alarm. When I stand up Yvonne lifts her hair and pulls her air pod out. \n\n\"Interviewing the old homicide LT. You coming?\" I ask. \n\n\"Why?\" \n\n\"Some of these guys went to jail because he suppressed evidence. You coming or not?\" I ask. \n\n\"I have these cases to look over, so you have fun with that,\" she says. \n\n\"Suit yourself.\" \n\nI leave without another word and stop by Doll's office. She is at her desk and looks up from her keyboard. \n\n\"Interviewing Silverlake,\" I say. \n\n\"I asked around to some of the veterans. He was a polarizing officer. People either loved or hated him. Careful with him, I heard he has a temper,\" she warns. \n\n\"Thanks,\" I say and turn around, nearly running into Yvonne. I flinch back a little because she honestly startled me. \"What?\" \n\n\"I'm coming,\" she says. I stare at her, trying to figure out why she changed her mind. \"Problem?\" \n\n\"No,\" I say, and she grins. \"Let's go.\" \n\n- \n\n\"Welcome Detective, please have a seat and he will be with you shortly,\" the secretary from the buzzer and the phone says to me upon entrance to Silverlake Investigations. Which is an apartment, the living room being his office space. I am not entirely sure this is even legal. \n\nYvonne and I have a seat on separate chairs you would find for thirty dollars at Walmart or Target. I check my phone for the time and see my meeting should be happening right now. \n\n\"Ma'am...\" \n\n\"...he'll be with you shortly,\" she says, and I look at Yvonne, who is in her own musically created world. \n\nTen minutes pass before I say something again. \n\n\"He'll be with you...\" she starts to say before I stand up. \"Sir, please have a seat.\" \n\n\"This is a powerplay,\" I say, and she tilts her head. \"Establish that I am on his time, build him up as this uber important person whose time is critical. It's not. His office is a fucking apartment. Tell him to get his dick out of his hand,\" I say, and I hear a door open down the hall to my right. \n\n\"He's ready to see you now,\" she says, and I look at Yvonne who is already standing and ready to proceed. \"Have a nice day.\" \n\n\"Chase?\" Hank asks as I walk down the hall. He does not move, and I have to walk the full distance for the handshake. It is firm, but parts of it are exaggerated. He pulls me toward him, nearly taking me off balance. His other hand slaps your shoulder. That smile is an unholy combination of a used car salesman, a politician, a Baptist minister, and Patrick Bateman. \n\n\"Good shake there, nice solid shake,\" Hank says and gestures for me to enter his office. I just want the conversation to start, so enter, not caring about power moves like the most important person entering last. \"You?\" \n\n\"Special Agent Grimsdotter, FBI,\" she says, showing her badge and shaking his hand. I notice she offset her feet to anticipate his pull. Her presence is cold and calculated now. She read his personality and is making him off center by playing to her own power. \n\n\"FBI? Woah, shit, what I do?\" he says playfully, but I did hear him stutter, just a little. \"Wish you would have told me. I would have flushed my coke.\" \n\n\"We have a schedule to maintain Mr. Silverlake...\" Yvonne says. Our time is more important now. \n\n\"...please, just call me Hank...\" \n\n\"...and we would just like to get to the interview so we can carry on with our day,\" Yvonne says, not even addressing the attempted interruption. Cold blooded. I am grateful she came with me. \n\n\"Let's get to it,\" Hank says, and holds the door for her. Yvonne does not budge, and Hank is forced to enter before it devolves into being more apparent than it already is. \"Leo's told me about you.\" \n\n\"Funny, he's never mentioned you,\" I say, and Hank chuckles a little as he walks behind his desk. The desk is disproportional to the size of the room. His computer chair has a cushioned back rest, but the two in front of the desk do not. \n\n\"What is this about?\" Hank asks. \n\n\"Five cases you had final authority on in twenty-eleven,\" I say, and he laughs. \n\n\"What in the world makes you think I remember five cases from that long ago with the case volume I had in my career?\" he asks with a laugh. \n\n\"I'd figure you'd remember five consecutive investigations being strangulations,\" Yvonne says, and I do not turn to her. I will play along and let her talk. I want to look like we came here with a plan. \"Patterns like that are alarming to say the least.\" \n\n\"I might remember something like that,\" he says. I am not sure if he does remember, or he is trying to save face for not noticing something so bizarre. \n\n\"Do you remember the Jason Boatman case?\" I ask. \n\n\"Doesn't ring a bell.\" \n\n\"You don't remember intentionally suppressing the fact his DNA file should have been purged prior to the investigation?\" I ask and watch his face. What will he do when I blatantly accuse him? \n\n\"His semen was found in the victim. I wasn't letting him off with a technicality,\" Hank says. \n\n\"I thought you said you didn't remember?\" I ask. \n\n\"I believe I said, it didn't ring a bell. You asking the question rang it for me,\" he says. \n\n\"Are you admitting you suppressed evidence?\" Yvonne asks. \n\n\"Considering I know what statute of limitations are, yeah, I absolutely did. Sometimes cops, we gotta do what we gotta do to keep the streets safe. I'm sure you understand,\" Hank says with a grin. The grin someone who is guilty shines when they are acquitted. \n\n\"Can't say I do,\" I say. \n\n\"Leo did say you were a boy scout. That you don't have the stones to do what needs to be done,\" he says. Now he is provoking me. \n\n\"Believe me, turning in a bad cop takes more stones than you could carry in both hands,\" I say, and I see Yvonne's lip curl for a second from my peripheral. \n\n\"I arrested criminals, not cops,\" he says. \n\n\"Those two are not exclusive,\" I say, and Hank rolls his eyes. \n\n\"Anything else? Or is this fishing expedition done?\" \n\n\"Did you know a Fred Aimer?\" Yvonne asks. That is fishing. \n\n\"That's a name I remember. Because he took a swing at me in court,\" he explains. Yvonne asks why. \"I was testifying at his son's trial. His son murdered his own fianc\u00e9.\" \n\n\"How did that trial go?\" Yvonne asks. \n\n\"Guilty. Solid case. We had everything. Semen, blood, fingerprints,\" he says, and that sounds eerily familiar. \n\n\"Saliva, skin, and hair?\" I ask, and Hank thinks for a moment. \n\n\"As a matter of fact, yeah. I think that's what we had. Like so many dipshit parents, he couldn't fathom his son being guilty,\" Hank says. \n\n\"Thank you for your time. We'll see ourselves out,\" Yvonne says, and leaves quickly without a handshake. I follow her, not shaking as well, and we depart, neglecting to even look at the receptionist. \n\n\"You thinking what I'm thinking? Yvonne asks as I unlock my car. \n\n\"The why, is Aimer's son,\" I say, and she nods to agree. Now we just need to fit all the pieces together. \n\n- \n\nThursday - August 6, 2026 \n\n-Midge Appletree- \n\nPregnancy brain is firing on all cylinders. Chase handed me the Fredrick Aimer part of this case because I have been benched. Within an hour, I think it is the most crucial part of this entire investigation. \n\nWhat does Fredrick have to do with any of these men? Nothing at first glance. When you dig deeper into his family, you start to see a connection. That connection was his son Lance Aimer. His son Lance who was convicted of murdering his fianc\u00e9 by strangulation. A conviction his father was so utterly convinced was wrong, he tried punching the detective on the witness stand during testimony. \n\nSo much of this case was wrong. The victim was his fianc\u00e9, he lived with her, and she was murdered in their home. Meaning nearly every form of DNA evidence is incidental, including the semen in her vagina. Her friend testified to the fact they were attempting to get pregnant. \n\nI CTRL-F the court documents for keywords and come away with some interesting things. Six different forms of DNA or forensic evidence were used to convict Lance Aimer. Semen; blood; saliva; fingerprints; skin; hair. They were presented in court in that precise order. That is the same order of evidence Aimer used to frame the men, assuming he was planning the same for Mr. Lacer. \n\nWhat other correlations can I find? Dates? Alexandra Sailor was murdered on February 16, 2011. I CTRL-F that date into the Aimer trial, no results. I simplify the search to only February, and I get a hit. February 16, 2006 was the day Lance Aimer's fianc\u00e9, Stella Archer, was murdered. The occupational surname hits me like a punch. \n\n\"Holy shit,\" I say aloud, and write that onto the blank area of Chase's whiteboard. Darcy Lane was murdered on March 3, 2011. Lance Aimer was arrested on March 3, 2006. \"Holy shit.\" \n\nMarch 29, 2011, Patty Visscher was murdered. March 29, 2006, Aimer pleads innocent to the charges. \n\nMay 8, 2011, Helen Ryder was murdered. May 8, 2006, opening statements are made. \n\nJune 27, 2011, Tabitha Leatherman was murdered. June 27, 2006, verdict is read. \n\nSeptember 5, 2011, Venessa Gray, maiden name Kobbler, survives attempted murder by Fredrick Aimer. I do not see a correlating date in the court case or investigation. I move the search to prison records. September 5, 2008, Lance Aimer commits suicide by strangulation in prison. \n\nEvery murder was committed on the date of a significant event in Lance Aimer's arrest and conviction. The evidence used against him, is the same type of evidence used against the men his father framed, used in the same order it was presented in court. \n\n\"You've been busy,\" I hear Chase say. I turn to the door and see him dropping his bag off on a chair. I look at the whiteboard and see everything that I have added. \n\n\"I think I know the why,\" I say, and the Fed enters after Chase. \"Lance Aimer.\" \n\n\"Fred Aimer's son who he believed was wrongfully convicted,\" Chase says, taking a seat. \"What did you find?\" \n\n\"The dates Fred committed the murders, correlated perfectly with the dates of his son's conviction,\" I say, and point out the dates and how they line up. \"The evidence he framed them with, was the same evidence used to convict his son. In the same order it was presented in court.\" \n\n\"Goddamn,\" Chase says. \n\n\"That's what I've been up to. How'd that interview go? What was his name?\" \n\n\"Silverlake. Total cock bag,\" Chase says as the Fed moves to the board. \n\n\"Impressive,\" the Fed says, looking at the new information. \"This is good. Insane level of premeditation. This amount of precision does not come without exhaustive research on his targets. I also don't think this is a serial killer.\" \n\n\"Why not?\" I ask. \n\n\"There is no relief. The killing itself doesn't serve a need or desire. Mass murderer without a doubt, serial killer, no,\" the Fed explains. \n\n\"Seeing how it's not a serial killer, that makes it a local case,\" I say, and she turns to me with a grin. \"When do you leave?\" \n\n\"When the case is over,\" she says, and I groan. \n\n\"Midge,\" Chase says to me, and then shakes his head. \"Good work but bring the tone down.\" \n\n\"Fine,\" I say, and sit at my desk. I look at the case board the Fed is now examining and look at the victim's names. To make room on the board, I erased the names and realigned them. They were now arranged last name, first name, top to bottom in order of events. \n\nSailor, Alexandra \n\nLane, Darcy \n\nVisscher, Patricia \n\nRyder, Helen \n\nLeatherman, Tabitha \n\nKobbler, Venessa \n\n\"The fuck?\" I ask as I squint at the names. \"You said, Silverlake, right?\" \n\n\"Yeah, why?\" Chase asks. \n\nI walk to the board and pick up the dry erase marker on the rack. I circle the first letter of the last names. I then write them below the list. \n\nSLVRLK \n\n\"Hey, Sajak,\" the Fed says, and reaches out for me to hand her the marker. I release it, and she starts filling in the blanks. \"I would like to buy a vowel.\" She adds a few letters to spell Silverlake. \n\n\"I already know the answer to this, but who was the investigating officer for the Lance Aimer case?\" I ask. \n\n\"Henry Fucking Silverlake,\" the Fed says and slaps the cap back on the marker. \"And I know that isn't his middle name.\" \n\n- \n\nFriday - August 7, 2026 \n\n-Chase Kramner- \n\nI gently push Jennifer off my chest and rest her on a pillow. I stretch with my arms above my head, her body twitching from the adjustment. Atticus jumps onto the bed and pushes his face into hers. Jennifer wakes up and starts petting him. \n\n\"Hey cuddle bucket,\" she says, then looks up at me. \"Morning.\" \n\n\"Morning,\" I say, and start getting ready for an early morning interview. She looks at her phone, and sees it is earlier than she thought it was. \n\n\"Why are you up so early?\" she asks. I am usually awake at seven, and it is currently six thirty. \n\n\"I have an interview early today,\" I say. We tracked down Venessa Gray. Not too surprisingly, she is a gun lobbyist. \n\nJennifer's phone rings, so she picks it up off the side table. \"Recognize that number?\" She holds the phone out to me. It is the correct area code and the number you would expect someone from the HQ to call on their desk phone. \n\n\"It's definitely the office,\" I say, and she answers. \n\n\"Lieutenant Ito,\" she says, and she listens to someone. \"I'm doing well Chief; how may I help you?\" Chief Whitaker? \"Okay...okay...absolutely sir. Thank you.\" She hangs up the phone and begins to tremble. \n\n\"You okay?\" \n\n\"I only had a month left in IA,\" she says, and puts her phone on the side table. \"Next week, Chief Whitaker is implementing his plan to merge Homicide, Violent Crime, and Missing Persons into a single unit. Captain Queen is going to command the unit, with two Lieutenants as deputies. There is going to be some reshuffling. Long story short, I'm going to be one of the Lieutenants.\" \n\n\"Congrats,\" I say, as she leaps from the bed. I catch her, and she immediately begins kissing me. I tip us toward the bed and fall on top of her. Her ankles lock around my waist and pull me toward her. \"I...\" I start to say, then playfully tap my fist on the bed in frustration. \"...have to get to work.\" \n\n\"Oh, come on, I just need a little bit. Just the tip,\" she teases with a giggle. Her feet push against my sides, and I can tell she is trying to tug my shorts off with them. \n\n\"I really don't...\" \n\n\"...I don't need to come. Good news gets me so horny,\" Jennifer says, and I nearly laugh. I cannot believe I got an Asian woman to say me so horny. \"Give me a little now, and I'll give you a lot later.\" \n\n\"What's a lot?\" I ask. \n\n\"You'll have to find out,\" she says. I am curious enough. \n\nI finish getting my shorts off, as she licks her fingers and rubs them on her pussy. The conversation alone got me hard enough to get in, a few thrusts finished the job. I slow down, and only insert the head of my dick in before pulling out again. \n\n\"Oh, come on.\" \n\n\"You said just the tip,\" I say, and she pulls me toward her with her heels on my ass cheeks. I try to make this as fast as possible, but every time in my life I have intentionally tried to have a quickie, I just could not come. I look at my clock, and groan in frustration after five minutes. \n\n\"That's not the usual problem men have\", Jennifer says with a laugh. \"Fine, go to work.\" \n\n\"Flip over,\" I say, and she rolls to her stomach. I lift her left right leg and put her knee on the bed. I grab her hair and start hammering her pussy. \n\n\"Oh yeah, right there. Pull it harder,\" Jennifer says, and I watch her hand start to play with herself. \"Right there. Right there...fuck!\" I feel her body shake, and her pussy grip my dick. \"Come. Fill my pussy up!\" \n\nI am going to be late for the interview when I finally come. I slip out of her pussy, and watch the semen leak out. She collapses to the bed, laughing a little, while wiping the tears from her face. \n\n\"I really need to go,\" I say. \n\n\"I know, see you later,\" she says, gasping as she rolls over. \"You better hydrate!\" she shouts as I leave. \n\n- \n\nThe first thing you notice about Venessa Gray are the burn marks from the bootlaces that were used in the attempt to murder her. The second thing you notice is the piece of her left ear that was blown off when she fired the gun into his face. Other than those startling things, she is conventionally attractive. She is schoolgirl cute with hair styled short like a boy but presents herself as a heterosexual woman. Imagine if Tinkerbell met guests in a room with a gunrack. "
    ],
    "authorname": "CaffeineFetish",
    "tags": [
        "asian",
        "creampie",
        "crime",
        "criminal affair",
        "detective",
        "police",
        "straight"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-second-booth-at-horseshoe-diner"
}