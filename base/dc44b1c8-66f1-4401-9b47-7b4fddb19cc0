{
    "title": "Free Fall",
    "pages": [
        "Plenty of students take a year off from school, either after high school or between undergraduate and graduate schools. Some use it to work and save money; some use it to work and gain experience; some travel because they know they won't be able to later; some volunteer to better themselves, the world, and their resumes; and some have nervous breakdowns because they suddenly realize they've been preparing all their life for something they no longer care about, and now they don't know what the hell they're doing with their life. \n\nI was the last sort of student. \n\nI come from a family of very bright, very capable and successful people. People who value hard work and perseverance, focus and determination, and achievement above all other things. My parents are geniuses, and I mean that in a literal, documented sense, not just because I love them. They're both doctors, each very gifted and renowned in their chosen fields, and highly respected and admired by everyone who works with them. Amongst neurosurgeons, my dad is actually quite famous. \n\nI have two brothers who are cut from the same cloth. They were naturally gifted students before they were even in school, born with a genuine love of learning and a strong drive to excel, each top of their class in every grade, graduating with highest honors and each with a clear idea of what they wanted to do with their gifts and talents. \n\nI'm no slouch myself, as my collection of academic awards and competitive trophies will attest. I'd always been told I would strive high and achieve greatly, so I did, but I lacked one thing my brothers had. The same thing my parents had, the same thing my friends, and fellow students seemed to all have, the thing that keeps a person focused and engaged and madly in love with whatever they're doing: passion. My grades had always been perfect, my work exemplary, but after a few years of college, I began to realize how little I cared for those achievements. \n\nI'd more or less gotten past the nervous breakdown stage by the time I moved in with my grandparents in their central New York home, but I was left with a terrible ennui, an overwhelming lack of interest in anything, but especially in the things I was supposed to love. I was depressed, to put it simply. As someone who had grown up wanting for nothing, grown up loved and cheered on and believed in, someone who had always been told she could do anything she set her mind to (and had), it was just embarrassing. So, when my grandmother said she'd found me the perfect summer job, I was equal parts excited and relieved. I needed a distraction but I also needed to feel like I was doing something productive, even if in reality I was just killing time until I had to make the next big decision about my future. \n\nMy breakdown started in the middle of my junior year of college at Christmas. I was home, in Connecticut, at the local Starbucks with JD and Tabitha, my two best friends. I had been enjoying that sense of belonging I always got when we were together. It felt like coming home. It literally was home, but in the company of these two friends, home could be anywhere. We'd been friends since second grade, and despite the different directions our interests and personalities took us, we had remained as close as ever. I'd made good friends in college, but those friends barely knew me compared to JD and Tabitha. \n\nIt felt good to be with them again, but there was something else, as we discussed college life, relationships, and our plans for grad school, something unsettling at the edges of my awareness, something I couldn't put my finger on right away. At first, I didn't recognize it as the same something I'd been trying not to see since the start of the semester: doubt about my chosen career path. \n\nJD and Tabitha were both doing well. They were in serious relationships with partners they loved who loved and supported them in turn, and they already had a clear idea of where school would take them next. \n\nJD was the creative one in our trio. Art was in his blood, and there had never been any doubt he'd end up using his talents to make beautiful and interesting things. It had taken him until college to find his medium, but now that he had, he was in heaven. It warmed my heart to see his face light up as he described a project he was working on. It was exactly the same enthusiasm he'd always had, and it was so much a part of what made JD a great person. \n\nTabitha's major was history, but she'd developed an interest in government and law and was considering law school a little further down the road. She was a natural leader and had a strong sense of moral justice. Even as a little kid she couldn't tolerate injustice. Once, she put a playground bully two grades above us in his place just using her words. There was no doubt she'd end up in a position of power some day; she was born to lead. \n\nAs for me, becoming a doctor had been my dream for as long as I could remember, but as I got closer to the reality of medical school, that dream seemed less and less appealing. I was still looking at med schools like I'd always planned, but my interest was waning. Without that dream, I wasn't sure what I wanted to do with my life. \n\nI admitted my uncertainty and fear to my friends. It was the first time I'd said anything about it out loud, though if I was honest with myself, the doubt had been nagging at the back of my mind for more than a year already. We'd known each other so long, and I had no doubt they knew me better than anyone in my life. I'd expected wisdom from them, but they were just as baffled as I was. \n\n\"Aww Zoe, that sucks.\" JD's expression was pure sympathy. \"But maybe it's just fear of the unknown. Med school is intense, maybe you're just feeling anxious about that.\" \n\n\"But you know I don't get nervous, JD. I've always kind of thrived on stressful situations.\" \n\n\"So maybe you're just burnt out,\" offered Tabitha. I could tell I'd really surprised her. \"I mean, you're doing a double major, Z. Maybe you just need a little break from school to get your energy back.\" \n\n\"I definitely need a break, but I don't think that's all I need. I think I need...well, I don't actually know what I need. Something different.\" \n\nI sighed and twirled my empty latte cup on the table absently. I felt miserable, even with my two best friends by my side, in the Starbucks where we'd spent countless hours after high school, in the town where I'd grown up. It was home, but I didn't feel like me. \n\n\"I feel like I'm missing something,\" I admitted. \"Inside me, I mean. When I look back at this fantasy I've always had, it feels fake. Like I was just following a script, someone else's script for me. I mean, I believed it at the time. I believed I wanted to be a doctor, but now...I don't know. \n\n\"I know I could do it. I could handle the pressure and the pace, and all the competition and demands. I feel like that's just part of me genetically. I'd rise to the challenge, you know? It's the O'Reilly way. But I wouldn't love it.\" I looked at my friends across the glass-topped table. They knew everything about me. I trusted them. \n\n\"What do I like doing? What do I love?\" I didn't even try to hide the desperation in my voice. \"If not medicine, then what?\" \n\nThey were at a loss to answer. \n\nIt had always been science, always been medicine, there had never been another goal but becoming a doctor. I was well and truly lost if they couldn't help me. I didn't know what I loved, but it felt more and more true that I didn't love the idea of going into medicine. The one path I'd been following had come to a dead end. So where exactly did that leave me? Freaking out, that's where. \n\nI made it through that year, but only barely, and spent my summer in denial, cagily avoiding med school conversations with my parents while going through the motions of preparing the applications. I ignored the dread in my stomach when I thought of going back for my senior year of college, but when no better plan formed in my head, I told myself it would all work out. I'd get it together, it was just a challenge, I'd push through. I wasn't raised to be a quitter; I'd beat this uncertainty. \n\nBy Thanksgiving break, none of my internal pep talks had managed to change my attitude, and I knew I was sunk. I couldn't imagine going to school the following year. I could barely imagine finishing the rest of the semester. I knew I would, but the next six months looked like the longest uphill battle of my life. \n\nMy depression was so bad I couldn't sleep. I buried myself in studying, trying to find a spark of interest inside me for the subjects I'd always loved, but nothing came. Without enough sleep, I became emotional. I cried all the time, for reasons I couldn't even name. By the time I arrived at my grandparents' house for Thanksgiving, I was a sleep-deprived mess of a girl. \n\nMy parents had always been supportive and encouraging in all areas of education and personal achievement. They were good, loving, attentive parents, but they were less comfortable in the arena of emotion. When I came to them toward the end of the break, in tears, almost inconsolable, they were so shocked, at first they just stared, mouths open, trying to find words. \n\nI'd rehearsed what I wanted to say to them. I'd even written it out, just to get my thoughts in order. I'd been careful and analytical in my reasoning and arguments, and was especially careful to detail alternate plans, to reassure them I wasn't just giving up. I just needed a break to figure some things out. I wanted a year to think about it seriously, after which I fully expected I'd be back on track. There was serious doubt in my heart about that part, but I knew my parents would need to hear it. And, I desperately wanted to believe it could happen. \n\nWhat I blurted out, half in sobs, to my dear, speechless parents was far less articulate than I'd been in my practice speech. I babbled and whined and contradicted myself. And I cried, a lot. It had to be shocking for them, especially coming from their always practical daughter who'd never given them a moment's difficulty or reason for concern. I really challenged their parenting skills that weekend. \n\nI am so lucky my grandmother was there when it happened. She and I shared a special closeness, a bond even closer than the one I had with my friends. I'd been told I was a lot like her, and I'd always hoped it was true because I thought she was the smartest, most beautiful, most compassionate person in the world. And I'd always suspected she understood me\u2014really understood me\u2014so when she stepped in to help my parents figure out what was happening, I knew I would somehow be OK.  \n\nWe talked for hours, the four of us. Hours. And as horrible as it was, seeing my unprepared parents struggling to comprehend this news, I felt relieved just to have it out in the open. I was exhausted from lack of sleep and from my intense crying session. I hadn't even realized how much my depression and anxiety had been tied up in telling my parents how I felt, how I'd dreaded disappointing them. Having finally admitted it, I felt so much better. \n\nBefore we left at the end of that weekend, we made some plans. I'd finish my last year, go to graduation, and then move in with my grandparents for a year. I agreed to revisit the grad school conversation in the spring, and my parents agreed to let me have until then to not talk about it. It was a fair plan, though I could tell it was causing my parents real anxiety. I think knowing I'd be staying with my grandparents gave them some sense of ease, though. \n\nI was very close to both my grandparents, and had spent many happy summers at their big house when I was a kid. They were the kindest, most generous and patient people I'd ever known, and I hoped sincerely\u2014as did my parents\u2014they could help me figure myself out again. Turns out, they did, indirectly, though they had no idea they were doing it. \n\n// \n\n\"I found you a summer job,\" my grandmother said, the morning after I arrived. I joined her at the big butcher block table with a cup of coffee. She was already dressed, her white shoulder-length hair shining bright in the morning sun. \"If you still want one. I know you said you might look at the hospital for something, but if you want something in the meantime...\" \n\n\"I do. What kind of job?\" \n\n\"Childcare. Four days a week. Three kids, 8 and under. Might be a nice break from academics, something fun.\" \n\n\"God, yes,\" I said. \"Sounds great. It it someone from the church?\" \n\nMy grandmother wasn't religious, but she was involved with her local Unitarian church and did a lot of volunteer work and community outreach through it. She knew everyone in town, it seemed, and was usually up to date on anything going on of interest. She was also the kind of person everyone liked. She was generous and unassuming, and genuinely interested in people and their stories. People tended to trust her, and so she came by personal information without having to resort to gossip, which she never would no matter how curious she might be. \n\n\"No, actually. One of the young men who's tearing up our backyard right now.\" She nodded in the direction of the back door. I'd heard voices out there when I was still in bed, but hadn't peeked out the window to see who it was. \"He's looking for daytime childcare for his daughter and his two nephews.\" \n\n\"Well, sure. Sounds perfect. I'd love that.\" \n\n\"I don't know the family, but Nico is a dear. Such manners. I'll introduce you once you get dressed and you can ask him about it. They might have found someone already, it was a few days ago he mentioned it.\" \n\n\"Well, we can ask and see.\" \n\nWe chatted for a few minutes about the plans for the backyard, the weather so far that month, the things going on at the community center\u2014safe topics that had nothing to do with me or my current emotional state. I knew she was concerned about me, and I was grateful to her for trying to help me get out of my funk. I was also grateful to her for not trying to talk to me about it yet. There would be plenty of time for that in the next year, but I really just wanted a break. \n\n\"I'll go change,\" I said after I'd finished my coffee. \n\nIf I'd known the man I was about to meet would be the one I'd end up wanting more than anyone I'd ever met before, I would have given more than ten seconds thought to what I put on. I hadn't fully unpacked, so I grabbed the first things I saw from the pile of clothes in my suitcase: a light blue Yale t-shirt and a pair of white shorts. Probably not the best outfit to showcase my pale, freckled legs and arms, but I didn't give it much thought. I brushed my red hair and put it up in a ponytail, brushed my teeth, and headed back downstairs. \n\nI followed my grandmother out to the porch and took in the scene. A couple of men were digging up the back flower bed and another was spray painting lines on the grass, marking the borders of another bed. Closer to us, the biggest man I had ever seen in my life not standing outside a nightclub checking ID's was making quick work of the cement sidewalk with a massive sledgehammer. \n\nMy grandmother explained what the plans were, where the path was going to be, how far out the patio would go, what stones they'd chosen, what perennials were planned for the flower beds, but I barely heard her. I could not take my eyes off the man with the hammer. I had no idea how heavy that hammer was, but I bet I wouldn't be able to even lift it. He, however, was swinging it with practiced ease, making it look as light as a toy. When he'd broken up the cement slab he'd been pulverizing, he tossed the chunks into a waiting wheelbarrow and then straightened up and saw us watching. \n\nHe leaned the sledgehammer against the wheelbarrow and headed toward us, wiping his hands on a cloth he'd pulled from his back pocket. He wore dirty jeans, a pair of brown battered work boots, and a dark blue t-shirt that had a small bloom of sweat right in the center of his ample chest. Somehow, it wasn't an unattractive look on him. \n\nHe pulled off the well worn baseball cap he'd been wearing as he approached us. It seemed like a very old fashioned gesture, removing his hat like that to talk to us, and I guessed that was part of why my grandmother liked him so much; she was a sucker for old-fashioned courtesy. The hair that sprang out once his hat was removed was dark brown and made up of the most beautiful curls I'd ever seen on a man. \n\n\"How are you, Mrs. O'Reilly?\" he said by way of greeting to my grandmother. His voice was soft and low. \n\n\"Hello, Nico. You're doing well today?\" \n\n\"Yes, ma'am,\" he said. \n\n\"The forecast said it would get up to 88 this afternoon. It's already so hot out here. Too hot for me.\" \n\n\"Ah, it's not so bad.\" He smiled again and it was obvious to me that he really liked my grandmother, which made me like him, too. \"I don't mind it.\" \n\n\"You're made of tougher stuff than me,\" she said. He managed to look a little shy. \"Must be your Greek blood. Well, make sure you get out of the sun if you need to. You know you can always take a break up here on the porch where it's cooler.\" \n\n\"I do. Thank you, ma'am.\" \n\nShe turned to me then and said, \"I wanted to introduce you to my granddaughter, Zoe.\" \n\nHe stepped forward and put out a hand the size of a spade. He gave me a big smile. It was a very nice smile, generous and warm, the kind of smile that makes you smile back automatically. \"Nice to meet you,\" he said. I let him take my hand, expecting him to crush it in his strong grip. He pumped it twice in a rough palm, with a firm but gentle pressure. \n\n\"Nice to meet you too, Nico. Gran said you might be looking for childcare for the summer?\" \n\nHe nodded. \"We need someone during the day, from about 9:00 to 3:00, though we need someone flexible, someone who can stay later without much notice if one of us gets stuck at work. It's only through August, until school starts again.\" \n\n\"Well, I'm definitely flexible this summer,\" I said. \n\n\"That's great. Let me give you Rose's number, she's home right now, maybe you can set up a time to meet.\" \n\nMy grandmother had already ducked back into the house and produced a notepad and pencil, which she handed to Nico. I watched him write, fascinated by the muscles that moved in his arm. When he lifted his head and handed me the pad and pencil, he leaned into the light for a second and I took in his features while we finished our conversation. His eyes were deep brown, even with the sun in them they were dark. I noticed there were grey hairs all through his curls. Not many, but they showed up bright silver in the sunlight. My grandmother had called him a 'young man', and I'd expected someone my age, but Nico was clearly older than that. \n\nHe had a very pleasant face, square, with big, soft features that made his broad shoulders and big arms less intimidating. His smile was easy and generous. It spread across his tanned face and creased the corners of his eyes. I observed all this without really examining how it made me feel. He was at least 15 years older than me, married, a dad, and not the kind of guy who normally turned my head anyway, so I certainly wasn't checking him out as a potential boyfriend, just admiring a very attractive man. \n\nI phoned the number Nico gave me right away and made plans to come by their house at noon. Over the phone Rose seemed very friendly, and excited I'd called. I found myself looking forward to meeting her. Nico had been so warm and comfortable when I met him, I imagined his wife would be just the same. \n\nI drove to the house and pulled into the driveway. It was a small house in a nice, tree-lined neighborhood. The yard had kids' toys scattered around it, and modest but pretty flower beds planted along the front of the house. I could hear the kids' voices when I got out of the car and walked around the house to the back where Rose had told me to meet her. ",
        "The moment I met her, I realized I'd been wrong. She wasn't Nico's wife, she was clearly his sister. She had the same big, dark eyes, the same curly hair, and the same generous smile that put me at ease right away. After chatting for a few minutes I decided I liked her a lot. She poured me a glass of iced tea and we sat on the deck while the kids played in a plastic kiddy pool on the lawn. \n\n\"So, there's Will and Jack, my boys. Eight and six. And Lena is Nico's daughter. She's five. I know I'm biased, but they're just great kids. They play really well together and apart from an endless supply of energy that will wear you out, they're pretty easy to manage. They don't fight, and they don't whine. They're just...really reasonable.\" She laughed. \n\n\"Nico and I were the same way as kids, just really well behaved for whatever reason. And then my mom had my brother Miles and oh boy, what a shocker he was. He got in so much trouble.\" She laughed again. It was a great laugh, natural and unrestrained. \"Just goes to show you can't predict what your kids will be like; they just come out how they come out.\" \n\nI'd only expected to stay a few minutes, but I ended up sitting with her for over an hour, talking. I hadn't realized how lonely I was since leaving school. I texted with JD and Tabitha daily, and stayed in touch with my friends from college on Facebook, but it wasn't the same as having a friend in the flesh. And Rose was so easy to like. She was easy-going, unassuming, and refreshingly open and honest. She told me about her parents, her other brothers, their wives and kids, her job as a nurse, her husband, and the complicated work schedules of the household. \n\n\"My schedule is pretty predictable, but sometimes I have to stay late. Mike's been on a job over in Summit. It's an hour and a half's drive, so he's gone before the kids are up. Nico, too. He tries to get an early start before it gets hot out. And, his work is seasonal, so it just makes sense for him to work as much as he can during the summer. He's been really busy this summer.\" \n\nShe dropped her voice slightly to explain Nico's situation. \"Nico's wife Jackie died about three years ago. Cancer. It was such a shock. She wasn't even 30.\" \n\n\"Oh, that's so awful.\" I'd only met Nico that morning, but my heart ached for him. \n\n\"It was horrible,\" Rose went on. I saw her eyes zero in on Lena, who was busy in the yard with some plastic toy ponies. \"So sad. They were such a cute couple, and totally crazy about each other. He was a totally devoted husband to her, just worshiped the ground she walked on, but well, that's also just how Nico is, but they were so close. And then, just like that, he was on his own with a toddler to raise. \n\n\"He moved back down here not long after she passed. He used some of the money from selling their house to start his own business. Last year was his first really good year with it, but this year he's been at least twice as busy. He's actually had to turn down jobs this year.\" \n\nShe told me he was also renovating a house a few miles away, but it still had a long way to go before he could move in. \n\n\"To be honest, I just want him to stay here until he gets married again, or at least meets someone. I hate the idea of him moving into that big house on his own. It's been three years...I don't know, it just seems like it's time for him to think about meeting someone, but he doesn't have any interest.\" \n\nIt was obvious she adored her older brother, and I could hear the concern in her voice. \"I just want him to be happy. He's such a great guy, he shouldn't be alone.\" \n\n// \n\nThe job ended up being the exact thing I needed. Rose and her family were so much fun, so warm and welcoming, I fell in love with them immediately. Especially the kids, who were bright and funny, and just as reasonable as Rose had described them. They were game for anything, enthusiastic about learning new things, and never gave me any trouble. Within a few weeks, my depression lifted, and I almost forgot about school entirely. It helped that the kids kept me so busy I went home exhausted and slept like the dead every night. But it also helped that they made me feel like part of their family. \n\nI worked Monday through Thursday from 8:45 to 3:30, and even on the hottest days, the hours flew by. Sometimes I stayed a little longer, sitting on the back deck with Rose after she'd gotten home from work. She was so relaxed, and so easy to talk to, she felt like the big sister I'd never had or known I wanted. \n\nWhen she found out my grandparents went to dinner and then bridge club with their friends every Wednesday, she insisted I stay for dinner on those nights. She didn't have to twist my arm, but I did feel a little funny letting her feed me. I knew they weren't poor, but I also knew they had a tight budget. And while I didn't really need the money she paid me, I couldn't ask her not to pay me. So I tried to do a little housework around the house during the day just to lend a hand and ease her workload without drawing attention to it. I put towels in the wash and folded the kids' clothes, and made sure the kitchen was always spotless when she came home. On Wednesdays, I decided I would be in charge of dessert and made sure to pick something up the night before, even if it was just a couple of cartons of ice cream I could leave in their freezer. It was the least I could do for someone who'd more or less rescued me from depression. \n\nDinners were always a bit of a circus. The kids got hyper and silly when their parents came home, and with three more adults in the house, it was pretty noisy. I helped Rose cook while Nico and Mike watched the kids in the back yard. The house was so hot in the afternoons, even with the big box fans circulating the air through the house, so we usually ate on the deck at a big picnic table. \n\nSome nights there were other family members, too. Their brother Miles had two kids, a 6 year old daughter Ellen, and an 8 year old autistic son, Lucas, who came over for dinner a few times. And once, Rose and Nico's mom joined us, so I found out where they got their generous smiles and easy-going personality. It was always lively, and a little overwhelming at times, but I loved every minute of it. Wednesday quickly became my favorite day of the week. \n\nIt was fun for me to observe the dynamics around the table. Rose was sassy with Mike, and Nico was silly with the kids. Everybody teased everyone else, and no feelings were hurt. The three adults would trade turns as the designated grown-up-in-charge, juggling requests for more helpings, or issuing reminders to eat some broccoli so that at least one of them could enjoy the meal uninterrupted. When I got elected to help cut the kids' chicken or Lena climbed into my lap once she'd finished eating, I felt like I belonged. I loved it more than I ever could have predicted. \n\nI also loved being around Nico. I was curious about him, and more than a little attracted. On the Fridays I didn't work I would watch him in my grandparents' backyard. I'd tell myself I was just checking on the progress of the patio, but my eyes tended to linger on things other than the stones he was laying out. The way his body moved and the power in his arms and shoulders did something to me I'd only experienced from the blonde haired biology majors in my classes who somehow managed to look attractively windblown and tan even first thing in the morning. Nico was nothing like that\u2014he was tan, but he was always a little dirty and a little sweaty, too\u2014more than once, though, I found myself noticing how his jeans hung on his hips, snug in all the right places. \n\nIt was ridiculous for me to have a crush on him, but I did. I sometimes caught him watching me at dinner or teasing me in ways that made my heart race. Mike teased me, too, but it was different. At least, it felt different, like big brother teasing. Nico's comments, and the way he held my gaze, did something to my insides that felt like anxiety, but wasn't entirely unpleasant. \n\nI did my best not to let my crush show, but sometimes I caught myself asking too many questions of Rose about Nico. If she noticed, she didn't say anything, and if she didn't know how I felt, she unintentionally set something into motion when she asked if I'd help Nico watch the kids one Friday night. \n\n\"The kids will think it's Christmas if you can do it. They probably won't even care that we're leaving and not taking them along. If you have plans, I totally understand. Nico will be fine on his own, I just know it's been a long week for him. And, last time\u2014\" She started to laugh. \"Last time we went out, we came home to find the four of them sound asleep on the couch. The DVD player was still going, all the lights were on. Poor guy, he said he just passed out. He felt so bad. \n\n\"I hate asking him when he's so tired, but God, I just need a night away.\" Rose was always so full of energy and she never complained, but I knew she felt overworked and stressed a lot of the time. It's hard not to when you have a full time job and kids. \"If you were there on Friday night, too I wouldn't feel so bad. You don't have to stay long, just make sure the kids are in bed at least by 8:30.\" \n\n\"Of course I'll help,\" I said. \"You guys deserve a real date night. I'll make sure everybody gets to bed on time and in their pajamas.\" \n\nI got Rose's at 6:00. She was running around the house, half dressed, putting in an earring, looking beautiful, but frantic. \n\n\"Nico's running late,\" Rose said apologetically when I walked in. Jack was following her around, carrying a book, oblivious to his mom's preoccupation. \"I forgot about dinner entirely, and the kids are starving, but I told Nico to pick up something on his way home.\" \n\n\"It's OK,\" I said. \"Don't worry about it. Just get yourself ready and go.\" I scooped up Jack and he snuggled against me automatically. \"Where's your brother? And Lena? Should be read some books until Uncle Nico gets home?\" \n\nI got the three kids on the couch with me while we read a couple of picture books. I had half an eye on Rose and Mike as they dashed around the house getting ready. I envied their messy, busy relationship. They were obviously in love, and they got along so well, even when they were stressed and feeling harassed. \n\nNico showed up just as they were making their way out the door. I saw him maneuver through the back door with a couple of pizzas in his hands. He and his sister exchanged a few quick words and then she was out the door with a wave. He left the pizzas in the kitchen and came and stood in the entrance to the living room for a few seconds, watching me with the kids. A slow smile curled the corner of his mouth when I looked up. \n\nHe was dirty and sweaty and looked unbelievably sexy at that moment. \"Sorry I'm late.\" \n\n\"Long day?\" \n\n\"Chatty client.\" He fished his keys and wallet out of his jeans pockets and set them on the corner of a bookshelf next to a framed picture of Rose and Mike from their wedding. \"Are we hungry?\" \n\nThe question was directed at the kids, who were delighted to know pizza was on the menu. There were cheers from all three. \n\n\"Sounds like a yes.\" \n\n\"I need a shower, but I'll be fast.\" \n\nI had the kids help me empty the dishwasher and set the table while he showered. I was more excited than I should have been about having dinner with just Nico and the kids, but it gave me a thrill to think of us as a little family. \n\nHe emerged from the bathroom smelling like soap and minty toothpaste, his curly hair damp. He'd looked sexy in his work clothes, but he was even sexier now, in a clean white t-shirt and spotless jeans. His feet were bare, which made me realize I'd never seen him in anything but his brown work boots. I realized I was witnessing a rare sight\u2014Nico in relaxed mode\u2014and I really liked what I saw. \n\nHe was his usual silly self with the kids at dinner, but he looked so tired. He had dark circles under his eyes and seemed weary in the moments he wasn't interacting with the kids. It wasn't difficult to imagine him falling asleep on the couch as soon as he sat down. \n\nAfter dinner I sent the kids outside with popsicles, while I cleaned up the kitchen. \"Go sit down,\" I told Nico when he tried to help me tidy up. \"You're exhausted.\" \n\n\"I am, but you don't have to do all the work.\" \n\n\"Yes, I do.\" I took a plate from his hand and shooed him away from the sink. I rinsed it and put it in the dishwasher. \"That's why I'm here.\" \n\n\"I thought you were here to keep me from falling asleep on the job,\" he said. He was pulling two bottles of beer from the fridge when I looked at him. For a second I thought he was offended, but then he grinned as he straightened up. Damn, that smile did things to my body. \n\n\"Do you want one?\" He held up the two bottles. \n\nI wasn't really a beer drinker. I wasn't really a drinker at all, apart from the occasional glass of wine at family dinners, but I wasn't going to turn down an offer of anything from Nico. \n\n\"You can only have it if you stop cleaning up and come sit with me on the deck.\" His grin returned, a little impish. \"If you don't, I'll drink them both myself and fall asleep on the lawn.\" \n\nI laughed and relented, leaving the dishes in the sink and the empty pizza boxes on the kitchen table, then followed Nico outside. He sat on the steps, leaving room for me, and opened both bottles with the opener he'd grabbed on his way out the door. \n\n\"Cheers,\" he said, raising his bottle to mine. His arm brushed mine as he lifted it and a shiver passed right through me, leaving a flush of heat behind. \n\nIt was a mild summer night, still hot, but the humidity had broken with an afternoon thunderstorm. We sat for a while watching the kids and chatting about nothing in particular. There were long silences that didn't feel uncomfortable, but I was keenly aware of how close we were sitting and it made my heart beat a little faster than usual. \n\nI was also aware of him looking at me when my attention was on the kids in the yard. I wanted so much to believe he was looking at me, really looking, and that it meant something, but it seemed unlikely. Rose had told me he hadn't dated at all since his wife passed away. She'd tried to introduce him to a woman she knew with a daughter Lena's age, but he'd insisted he wasn't ready to start seeing anyone. It seemed unlikely I would catch his eye, given the difference in our ages, even if he was ready to date, but I still wanted to believe he was as attracted to me as I was to him. And there had definitely been moments in the past where his attention had felt more than just big brother friendly. \n\nIt was just starting to get dark when Nico left the deck steps and started chasing the kids around the yard. I watched as the four of them dashed around in a chaotic game of tag, the kids breathless and giggling, staying just out of his long arm's reach. He would catch one and scoop them up, then lumber around the yard for a few seconds, letting their bare legs dangle until he set them down and they dashed off again, ready for another chase, their faces bright with joy. He did it again and again until they were all worn out and he was able to catch them one at a time and hold them, all three of them panting and giggling in his arms. \n\nThe sight of it made me ache inside. I wanted to be in his arms, too. But I wanted more than that. I wanted to be part of that scene, part of his life. It wasn't just a sexual attraction, it was a longing to be part of his family. I'd done a lot of babysitting throughout middle and high school, and I'd always known I would have kids someday, but suddenly I ached for it. I ached for him, and the fantasy of sharing a life with him\u2014sharing parenthood\u2014made my stomach knot with desire. It was an unsettling revelation, and I had to push it aside once Nico finally chased the kids back inside for their baths. \n\nIt was ridiculous, I was too young to be thinking like that, but I couldn't deny it now that I'd identified it. I helped him get the kids ready for their baths. The bathroom was too small for all of us to be in there at once, so I wandered back to the kitchen and finished cleaning up the table. I wasn't sure what to think of how I felt. It was pleasant in that way sexual attraction makes you feel a little dizzy, but it was a much more complex feeling than I'd ever felt before, and it tugged from deep inside me in a way that was more disorienting than dizzying. \n\nOnce they were out of the bath, I helped the kids get their pajamas on while Nico supervised tooth brushing, and then I was elected to read the bedtime books. We piled into Lena's bed and I read a few short books, slightly distracted by the fact that Nico was watching from the doorway. I could just see him out of the corner of my eye, his arms folded over his broad chest, leaning against the doorjamb. I couldn't imagine what he was thinking. \n\nI tucked the kids in and turned out the light, leaving the door just slightly ajar. I found Nico in the living room, picking up the toys that were scattered across the floor. \n\n\"Success?\" he asked as I entered the room. \n\n\"All tucked in.\" \n\n\"No requests for extra books, drinks of water, or questions about how airplanes work?\" He dropped the toys into a toy bin in the corner of the room and crossed toward me. \n\n\"Nope. Right to sleep.\" \n\n\"Wow. You're a miracle worker.\" He stifled a yawn. \n\n\"You look dead on your feet,\" I said. \"I should go, so you can-\" \n\n\"No,\" he said quickly, cutting me off. His voice was softer when he spoke again. \"No, don't go. Unless your grandparents are expecting you soon.\" \n\n\"No, they're at their friends' house for dinner. I doubt they'll be home before midnight.\" \n\n\"I'd love it if you could stay a little longer,\" he said. \"I never get a chance to talk to you without distractions.\" My heart surged pleasantly thinking he enjoyed my company as much as I enjoyed his. \n\n\"You're sure you're not too tired?\" \n\n\"I'm fine. Tired, but not too. Besides, I'd like to see you sitting down, relaxed, and not waiting on anyone else for once. I'm not convinced you can do it.\" \n\nHe stepped toward the couch and made a grand gesture with his hands. \"Have a seat,\" he said. I did, of course, and he nodded enthusiastically, like I was a little kid. \"That's perfect. Nice work.\" He backed away slowly. \"Good, good. Now, just stay there, OK? Don't get up. Resist the urge to tidy up...\" \n\nI laughed and watched him back his way into the kitchen. A moment later he appeared with two more beers. He opened them and handed me one, then sat down next to me on the couch. It was such a treat to have him all to myself, and I was so thrilled to think he'd wanted the same thing, I could barely swallow my first sip of beer. \n\nTalking to Nico was like talking to an old friend\u2014granted, a really attractive old friend whose shy smile and quiet voice made me more than a little wet\u2014but a comfortable friend with whom I had no trouble being myself. It didn't take long for me to relax, and the second beer helped ease my nervous excitement at having all his attention. \n\nI checked him out while we talked, and decided I didn't care if he noticed. After a while I noticed he was doing the same thing. I was looking at his body language as much as his body, noticing his open posture and the little gestures he made as he talked. When he was thinking, he ran his hand through his hair, and I loved watching the curls slip over his fingers. \n\nHe was surprisingly open with his emotions, willing to admit to his faults, and humble when I complimented him on the artistic work he'd done at my grandparents' house. He was intelligent and thoughtful, too, but I'd seen that in him when I'd watched him interact with my grandfather. After years of being surrounded by smart boys who knew exactly how smart they were, it was a refreshing and exciting change to meet someone who'd never given it much thought. ",
        "He was also very funny. He had a dry humor that caught me off guard and made me laugh hard and long, in ways only my best friends could. As the evening wore on I added a feeling of love and admiration to the complex cocktail of emotions Nico stirred up. \n\nWe talked for almost two hours, moving from topic to topic without any obvious path. We talked a lot about family, and eventually the conversation led us to Jackie, his wife. I'd been intensely curious about her since I'd learned about her. Rose hadn't mentioned her more than a few times, and there was only one photo of her\u2014a group picture of the whole family\u2014on display in the house. I knew it was a delicate subject, and I wasn't sure he'd want to talk, but I asked anyway. At first he was surprised, but he also seemed glad to spend some time describing her and the twelve years they'd known each other. \n\nIt was obvious he was tired, even when we were deep in conversation, he had to stifle a couple of yawns. I kept looking for cues that he was ready for me to leave, but I didn't see any. I didn't really want to leave. I didn't want to cut my exclusive access to Rose's handsome brother short, but I worried he needed sleep more than I needed to be in his company. \n\n\"I should go,\" I said after a particularly long yawn. \"You should get to bed.\" \n\nHe followed me into the kitchen with the empty beer bottles and put them next to the sink. I found my purse and phone on the breakfast bar, and glanced around the room to make sure it was cleaned up. \n\n\"Are you working tomorrow?\" I asked. \n\nHe shook his head and covered a yawn with his hand. \"Not this weekend. But I've got the kids, so...\" \n\n\"How many hours do you work in a week?\" \n\n\"Sixty? Sixty-five?\" He ran his hand through his hair, thinking. When he pulled his hand away, his hair was messed up in a most attractive manner. I had an urge to reach up to fix it, or maybe mess it up more. \"Mmm...maybe more like seventy if you add in work at the house.\" After seeing my shocked expression he added, \"It's not that bad. I don't work half that in the winter, summer's just busy. The worst part of it is not seeing Lena.\" \n\n\"How do you keep going, though? You must be exhausted all the time.\" \n\n\"Sometimes I am. It depends on the work. This week was a lot of physical labor, and it was a hot week. Monday and Tuesday I put in a couple of hours of work at the house after Lena was in bed, so I'm more tired than usual.\" \n\n\"I really admire your work ethic,\" I said. He laughed. \"I'm serious. You have such a passion for what you do. My best friend JD is the same way. He's an artist, and he's so passionate about his work, he can work for hours on end in the studio and never get tired of it. I really envy that.\" \n\n\"You're not passionate?\" \n\n\"I don't know,\" I said. \"I was. For a long time, all I could imagine was being a doctor. I was so excited about the idea of going to med school. It was all I thought about. But then I stopped loving it. And now...I don't know. When I think about it, it's just...there's nothing there.\" \n\n\"It sounds like you realized medicine isn't your real passion.\" \n\n\"Yeah. But what is?\" I sighed. I hadn't thought about my school dilemma for a while, I'd been so happy hanging out with my grandparents on the weekends, and pleasantly distracted by Rose and Mike, the kids, and of course, enjoying my crush on Nico, I'd successfully set it aside. \"I really have no idea what I love doing anymore. I could go into so many different science fields, but I lack a...a special thing. A focus. A passion.\" \n\nHe looked at me for a long time. \"You're kidding, right?\" \n\n\"What?\" \n\n\"Your passion.\" I waited and watched a smile creep across his face. It wasn't an amused smile exactly, so I knew he wasn't laughing at me, but I felt a little annoyed that I didn't get the joke. \"You don't know what it is?\" \n\n\"No.\" \n\n\"Your passion is people, Zoe.\" \n\n\"People?\" \n\n\"God, yes. I've never met anyone so tuned in to others.\" \n\n\"I don't think I'm any better with people than you, or Rose. She knows everybody in town, she's got like a million friends.\" \n\n\"That's just because she's lived here her whole life and she loves being in everybody's business. But, it's not about knowing people, it's about getting them. You get people, you understand them in ways most people don't. I'd have to work hard at it, but it's just second nature to you.\" \n\nWhen I didn't reply\u2014I was too busy trying to make sense of his words and decide if they really described me\u2014he went on. \n\n\"The first time you met Lucas, you were right there, right on his level. Without hesitation. You didn't think about it, you just knew what he needed. \n\n\"And Lena...well, maybe you don't know this, but she takes a long time to warm up to people. She tends to hang back in new situations and just wait and watch. She's shy around people she doesn't know, but she was never shy with you, was she?\" I shook my head, remembering the first days I spent with the kids, how bubbly and sweet Lena was. I would have never called her shy. \"She climbs right up in your lap. She never does that, Zoe. Except with me and sometimes her grandpa, but she has never once crawled into my sister's lap. Not once. She loves her Auntie Rose, but she's choosy about who she really bonds with.\" \n\nI could tell this was a big deal. I could tell it meant more to him than the sum of the words. And something in the look on his face made my heart race. \n\n\"She's never bonded with someone as fast as she did with you. Or as completely. That's your talent, right there. That's your passion.\" \n\nI stared at him. Was he right? \"I don't know,\" I said. I wasn't convinced. \n\n\"You're not afraid to talk about hard stuff either. Earlier, when you asked me about Jackie, you knew exactly what to ask. You asked me things I always wish people would ask me about her. You made me feel OK about missing her. People don't bring her up, not even my family. I guess they're worried about reminding me of her, but...\" \n\n\"You already think about her all the time,\" I said after a few seconds, finishing the sentence he left hanging. \n\n\"See, that's what I mean. That's exactly it. You get it. What are you\u201422? There's no way you should be that wise, Zoe. But you are. You're wise and you're unafraid.\" He was leaning against the sink with his arms crossed over his chest. He looked so tired, but he smiled. \"You're...amazing. And you don't even know it, which just makes you even more fantastic.\" \n\n\"I don't know what I am,\" I said. \"I just know I don't have any specific talents, or none that I love the way you love what you do, or Rose loves what she does.\" \n\n\"I wasn't born with a trowel in my hand. I had to train, and my passion for it came later, but I could just as easily be a carpenter. I could do that, I'm skilled enough, and I have the ability to learn a new trade. But with you\u2014it's not so much what you do, it's who you are. You couldn't stop being like this if you tried. You can't not be awesome.\" \n\nI laughed. It was a funny thing to say, but it was also sweet and it made my face go hot. \n\n\"I admire you, Zoe. I wish I had a little bit of your courage. I wish I wasn't such a coward.\" \n\n\"You're not a coward.\" There were a lot of things I'd call Nico, but 'coward' wasn't one of them. \n\n\"Oh, you don't know that. There are so many things I haven't done because I'm just too scared.\" \n\n\"Like what?\" \n\nHe looked away for a second then back again. His face changed in that moment. He'd been smiling when he'd called himself a coward, and the whole thing had felt light and silly, just friendly banter. I'd asked my question in the same casual tone, but it was clearly anything but casual to him, his expression became so serious. It took him a long time to answer, but when he did it felt like all the air left the room. \n\n\"Like, telling you how attracted to you I am. Or how often I think about you.\" \n\nI stared at him, unable to reply. This was what I'd wanted. It didn't seem real. \n\n\"You have no idea,\" he continued, \"how many times I wanted to lean over and kiss you this evening.\" \n\n\"What are you afraid of?\" \n\nHe didn't answer right away. When he did finally speak, he was obviously embarrassed. \"It's irrational.\" \n\n\"Fear usually is, isn't it?\" \n\n\"I guess so, but this is...it's stupid.\" He laughed softly to himself and closed his eyes for a second before he admitted, \"I think my heart might stop. I know. It's ridiculous, but it's...it feels that scary. I really think it might stop. I guess it's the fear of feeling too much, you know? After losing Jackie...\" \n\n\"Of course,\" I said softly. Somehow I managed a joke even though my heart was pounding and my head was throbbing. \"I'm not that bad a kisser.\" \n\nHe laughed softly again, and didn't look away. \n\nI waited, trying not to hold my breath as he continued to look at me. I desperately wanted something to happen, but I waited while he considered the situation. \n\n\"So, you're saying...\" His eyebrows rose slowly, hopefully. His face was a mix of embarrassment and amusement. \"I should try it? See what happens?\" \n\n\"I took a CPR class a couple of years ago. I'm pretty sure I can revive you if your heart stops.\" \n\nHe smiled at me and I thought I saw the moment when he made up his mind, but he continued looking at me for a few more seconds. When he finally moved across the room toward me, I had to remind myself to breathe. It was much harder now that he was close, closer than we'd ever been face to face. He took my hand in his, his palm was so hot on my skin. I realized it was the first time he'd ever intentionally touched me. We'd bumped elbows or brushed up against each other in passing before, but he'd never reached out and touched me before. It was such a thrill. \n\nHe had to bend to bring his mouth to mine, he was so much taller than me. I closed my eyes as I saw him draw nearer. I was so afraid I was dreaming. And then his lips touched my lips. They were soft and warm and the sensation made my thumping heart stop for just a second. Maybe this was dangerous after all. \n\nIt wasn't an entirely chaste kiss, but it wasn't passionate either. It was an uncertain kiss, a questioning kiss. He drew back slightly. I opened my eyes. We were face to face, his dark eyes were searching mine, and he looked so unsure. \n\n\"That was very brave,\" I said. I kept my voice quiet, like he was a wild animal I was trying not to spook. \"How's your heart?\" \n\nHe lifted my hand and laid it on his chest over his heart. I could feel the strong thump against my palm. \"Still beating. A little fast, though.\" \n\n\"Mine, too,\" I admitted. \"I think that's normal.\" \n\nHe let go of my hand and reached out, moving in for another kiss. He touched my cheek gently. It was the lightest touch, telling me he was still unsure. But the second kiss was less hesitant. It lasted longer, and felt more relaxed. He lifted his mouth from mine again, but only for a second before he kissed me a third time. I felt his hand make real contact, sliding along my neck and into my hair to cradle the back of my head. His other hand found my waist and rested there lightly. I relaxed into the kiss, pleasure rippling through my whole body. \n\nWe kissed for a few long minutes. Our mouths parted and met repeatedly, finding different ways to fit together. I felt dizzy with pleasure and achy all over when he finally drew back. I throbbed inside for more. I wanted him to touch me, really touch me. I wanted his hands to touch me in all the places that longed for heat and pressure. \n\n\"Is this OK?\" \n\nI wasn't sure what he meant, but there was nothing about the situation that wasn't OK with me. I nodded and slid my hands up to his neck. I wanted to pull him to me, but I waited for him to decide. He did, and a moment later he was kissing me again, this time with no hesitation. We kissed for a long time. Long, slow kisses that gradually deepened as we each grew bolder. It became difficult to breathe, I was so turned on. I could feel my pulse everywhere. In my neck, my fingertips, between my legs. \n\nWhen he drew back again, I was a little breathless. So much had happened in the last ten minutes my head was spinning. I'd been on my way out the door, and now I didn't want to leave ever again. It had been there all evening, his desire and uncertainty, and now that he'd voiced it, everything was different. So different, and so good. \n\n\"Is this real?\" I could feel his hands on my waist and the ghost of his kiss on my mouth, but it didn't seem real. \"I'm not dreaming.\" \n\nHe shook his head and let a slow smile creep across his face. \"It's real. I can't believe it either, but it's real, Zoe.\" He slid the straps of my purse from my shoulder and put the bag on the counter without taking his eyes from mine. Then he slid both hands to my waist and pulled me closer. He kissed me again and I felt my knees go weak. Our kisses quickly became intense, almost needy kisses. I slipped one hand into his hair, thrilled by the softness of those curls I'd long admired, while the other hand clung to his neck. His hands were finding their way beneath the fabric of my tank top. His fingers spread out over my bare back. I knew I was sweaty, but I didn't even care. \n\nWe kissed until I couldn't breathe. I turned my face from his, and his mouth dropped to my neck. I let out a moan of desire that sounded so wrong in Rose's clean kitchen. I think the voicing of my arousal was what spurred us on at that point. He responded with a soft moan of his own and buried his face in my neck, pressing kisses from my ear to my collarbone. His hands worked their way higher and higher up my back, pushing the fabric of my shirt so it began to bunch up. The already hot room seemed stifling to me. \n\n\"Take it off,\" I gasped, drawing back from his body. I took my arms from around his neck and pulled my shirt up and off. He backed away slightly to give me room to do it, but then closed in again once the garment had been dropped to the floor. He wrapped his arms around me then, lifted me and turned in one motion, setting me down on the kitchen counter. We were closer to eye to eye this way. He reached behind him, his arm arcing over his head, and pulled his own shirt off his back in one swift movement, dropping it on the floor to join mine. It was an action that had no right being sexy, but it was. \n\n\"I'm glad I'm sitting down,\" I said, running my eyes over his now bare torso. Never once in my life had I found a man his size attractive, and while wasn't at all chiseled, he had muscles to go with his wide shoulders and big build. My friend JD tended to like his men on the beefy side. He had an athletic build himself, and had always been drawn to football players and guys who worked out, but personally, I'd never seen the appeal. I saw it now. And the shy, slightly uncertain smile Nico gave me just made him even sexier. \n\nWe resumed our kissing, now with our bodies pressed tight, skin on skin. He was hot and sweaty like me, and I could feel the thump of his heart as he crushed me against him. His hands roamed my back, eventually landing on the closure of my bra. I felt the elastic tighten and then go slack and released my hold on his neck to let him slip my bra down my arms. He sighed an appreciative sigh and dropped the bra on the floor. Then he bent and kissed me again, one hand straying to my breast, but only grazing the skin with fingertips. I shivered with pleasure and anticipation, then groaned against his mouth when his teasing fingers finally landed directly on my nipple. He drew back and looked down when I jumped, only half from pleasure. \n\n\"I'm sorry,\" he said. \"My hands are so rough.\" \n\n\"It's OK,\" I said quickly. \"Don't stop. Don't stop, it feels so good...\" \n\nI saw him smile slightly and then he traced my nipple with the back of a knuckle bumping the sensitive flesh as he circled it, making me jump again, this time entirely from pleasure. Then he worked a nipple between two fingers where his skin wasn't so worn, and when that made me whimper in pleasure, he gave my other nipple the same treatment using his other hand. It was an exquisite sensation of pressure and heat and friction, both my nipples trapped between his fingers. \n\nHe lifted his eyes and watched me, his expression somewhere between curiosity and amusement. He was clearly enjoying watching me moan and squirm under his touch, but it was clear, too, that it was turning him on as well, and gradually the curl at the corner of his lips lessened as his expression became more intense. I saw him swallow with effort and it was obvious how much he wanted me. \n\nIt was that look, almost more than his physical touch, that really affected me. Knowing his desire matched mine made my whole body ache for him. When he leaned toward me to kiss me again, I reached for his neck and wrapped my legs around his waist, simultaneously pulling him closer and pulling myself to the very edge of the counter. His hands moved from my breasts to my back and he pulled me tight against his body. The sensation of his damp, hot chest pressed against my bare breasts was almost more than I could take. I moved closer, as close as I could until my weight shifted and he had to slip his hands to my ass to catch me. I held on with my arms and my thighs and groaned against his mouth as the weight of my body pressed my sex against the rough front of his jeans. \n\nHe stepped back, his big hands spread out over my backside, supporting my weight, and broke the kiss. \"Is this too fast?\" His breathing was quick, and there was obvious conflict in his expression. I shook my head, but watched his face, wondering if he was actually asking the question of himself. It stood to reason, since he hadn't dated in the last 3 years, the last person he had sex with was his wife, and I guessed that had to be weighing on his mind. \n\n\"We can slow down,\" I said. I didn't want to slow down, but my respect for him trumped the need I had to have the ache between my legs soothed. I watched his face. His eyes darted back and forth for a few long seconds, searching mine. Then, his face relaxed and the smallest smile stretched his lips. \n\n\"Maybe just a little,\" he said. He turned and walked out the kitchen door, carrying me easily, the small smile on his face growing by the second. \n\nI'd never been in his bedroom. It was the one room in the house I'd never been in. The door was always closed, and I'd always felt funny about going in even to put folded laundry on his bed, so I never had. But, of course, I'd been curious. Nico hit the light switch on his way in, turning on a small lamp on a small table by the bed. I glanced around before he sat me on the edge of the bed, noting there was barely enough room for the bed, a long chest of drawers, and another small bedside table. It was definitely the smallest bedroom in the house. \n\nNico lowered me all the way to the bed's surface and climbed on next to me. I rolled onto my side and reached for him, and for the next few minutes we kissed. They were long, luxurious kisses, and despite my desire to slip my hand down the front of his jeans, I relaxed into the sensations of his fingers in my hair, his soft lips on mine, the occasional scrape of his rough chin against my skin as he moved to kiss my neck or throat. It was a different kind of arousal than I'd felt earlier in the kitchen. Arousal mixed with contentment. \n\nThat's not to say I wasn't also extremely turned on. When his hands started to roam and his kisses grew more passionate, the throb of desire in my belly was immediately renewed. It only took his hand slipping under my skirt and sliding down my bare thigh to get my heart racing again. I rolled onto him and sat up. I sank down over his hips, letting my body come to rest on his, and leaned over to kiss him. His hands went to my breasts and I moaned and pressed myself against him, moving my hips in slow circles, gently grinding my pussy against the bulge in his jeans. His hands left my breasts and eventually found their way to the zipper of my skirt. He lowered it while we continued to kiss and then slid his hands under the fabric and into the material of my panties. The feeling of his hot hands spreading out over my bare ass was so exciting. ",
        "I moaned his name, breaking our kiss. I looked down into his face. \"I've wanted this for so long,\" I admitted. I thought back to the times I would peek through my grandparents' kitchen window at him while he worked, and how intrigued I was by his strong body as he worked. I hadn't been willing to admit I found him sexy then, but I couldn't deny my curiosity. \"You're so exciting, Nico.\" \n\nI flexed my hips and pushed my sex against him a little harder. My swollen labia shifted and stretched all around my clit, massaging it. Knowing his cock was directly beneath it was almost more than I could stand, and by the look on his face, he was feeling just as much pleasure as I was. After a few long minutes, he moaned and gently rolled me off of him. He tugged at my skirt as he sat up and then slid from the bed to stand beside it. \n\n\"Take off your skirt,\" he breathed. I finished what he started, pausing for a second when I heard the zipper of his jeans. I slid my legs from my skirt and panties while he pushed his jeans and underwear to his ankles and stepped out of them. \n\nI'd only had one long-term boyfriend and a handful of dates that had led to sex, and while I'd found my sexual partners exciting, and sex had been good, I'd never really felt that deep down animal attraction my friends had described experiencing with their partners. I'd wondered many times if I just didn't have much of a libido, but watching Nico climb back on the bed and crawl toward me, his erect penis bobbing in front of him, his deep brown eyes focused on mine, I felt something deep inside me stir. It was lusty and wild and undeniable. It was like hunger, and I became keenly aware of a need that went beyond sexual desire. My eyes dropped to his cock and I shivered, thinking of it filling me up. \n\nNico slid onto the bed beside me and pulled me into his arms. The sensation of skin on skin was incredible. He kissed me with new passion, open mouthed and eager. He slid a hand into my hair and worked the elastic of my ponytail off, then ran his fingers through my long hair. Pleasure traveled through me in ripples as we kissed. I slid a hand between us in search of his cock, and was rewarded with a groan when my fingers finally curled around it. It was hot and hard and filled my palm in a way that made me realize all the boys I'd been with had been just that: boys. I ran my fingers up and down the length of it, tracing the shape and girth, thrilled by the sounds Nico made as I explored. We continued to kiss while I stroked him slowly, getting to know just how much pressure to apply and where. It wasn't long before Nico's breathing became labored. He closed his hand over mine, stopping it, and drew back, looking agonized. \n\n\"Slow down, slow down,\" he breathed. I hadn't been moving that quickly at all, but it was clear how close to an orgasm he was already. \"I won't last.\" \n\n\"I'm sorry.\" \n\n\"Oh God, don't apologize, baby. It's just been so long, and I am so turned on. You're fantastic, Zoe. I'm so...I just...need to slow down.\" \n\n\"OK. We can go as slow as you want.\" I could feel his pulse in his rigid cock. I didn't want to let it go. \"Tell me what you want me to do.\" \n\nHe considered for a second then relaxed his hand. \"Lie back,\" he said finally. He shifted and slid an arm under my neck, giving me his bicep as a pillow. I reluctantly lifted my sticky palm from his cock and relaxed into the bed's surface. \"I want to touch you.\" He kissed my cheek softly and put his lips next to my ear. \"I want to explore,\" he said, sending the heat of his breath and the vibration of his voice right inside me, \"your beautiful body.\" \n\nHis touch was light at first, dancing in slow motion over my skin, puckering my already hard nipples, and sending goosebumps popping down my arms. I shivered and felt my pussy respond with a dull throb. He was in no hurry, and though it was kind of maddening how indirect his touch was, I felt a delicious tension building inside me and I knew when he did finally touch me enough, and in the right places, the pleasure would be unlike anything I'd experienced before. I knew it would be more than worth the wait. \n\n\"I can't believe you're really here,\" he said. He'd trapped my nipple between two fingers again and was stroking it gently, applying light pressure and only the slightest movement back and forth. \"I've been fighting my attraction to you for so long. Trying not to notice how beautiful you are, or how sweet you are, or how smart you are, or how happy you make me.\" \n\n\"Really?\" I turned my head to look at him and found him smiling faintly. \n\n\"Every time I looked at you, I felt overwhelmed. I wanted you, but I didn't want you. I didn't want to want you.\" \n\n\"Because it's scary?\" My question came out in a sigh as his fingers lifted, tugging gently at my nipple before releasing it. \n\n\"Terrifying,\" he admitted. I watched his eyes as they followed his hand. It drifted down my torso in no hurry at all. I was so aroused. There were little ripples of pleasure moving through me, anticipation of what was coming next. When he lifted his eyes to meet mine, he raised an eyebrow. \"You remember?\" he said, \"I'm kind of a coward?\" \n\nI laughed, but it came out breathy and light as another ripple of pleasure moved through me. \"You're not. You got over that already.\" \n\nHis hand had reached my sex and was moving in a lazy circle through my pubic hair. I sighed and bent one knee, bringing my leg off the bed and parting my thighs a little. A second later he his laid his whole palm on my belly and slid it down over my sex. I groaned and my hips left the bed's surface in response. \n\n\"Oh, I'm still a coward,\" he said softly. \"I'm a coward. But I'm willing to work on it.\" \n\n\"I do admire your work ethic,\" I said. He smiled and began to massage my sex with his hand flat, stirring the hot folds of my pussy, stimulating everything at once, but nothing so much I was in danger of coming. I closed my eyes and bent my other leg, letting my thighs part even more. \n\n\"Ohh that's good...\" \n\n\"Mmm,\" he purred. He leaned and kissed my cheek again. \"Like this?\" He continued making slow circles, pressing against my sex without penetrating the outer lips. \"Too slow?\" \n\n\"No, no, it's perfect.\" This was my favorite warm-up to intercourse, one I'd never really gotten with my previous partners, who'd always been in such a hurry to get their cocks inside me. When I masturbated, it was always the best part, the long, slow climb to the desperate peak. \"It's amazing. Don't stop...\" \n\n\"I won't,\" he whispered. I closed my eyes and sighed, thrilled that he wasn't rushing things. I felt the heat of his breath as he pressed soft kisses along my cheek. \"God, you're so wet, sweetheart. Your body is so sexy. I love your perfect little nipples and your creamy white skin. I love your auburn hair and I love the way you respond when you're excited.\" \n\n\"I've never been so turned on,\" I moaned. \n\n\"Never?\" \n\n\"Not like this...this is incredible. You're incredible.\" I groaned. My hips were circling now, searching for more of his touch. I could feel my wetness coating his fingers and palm and it was thrilling. \"You're so good to me...\" I sighed. I opened my eyes to find him watching my face. \n\nHe smiled and kissed me, just a soft kiss, but I lifted my head, inviting a deeper kiss and groaned as he slipped his tongue between my lips. My hips lifted and for a second his hand stilled, pressed against my sex. \n\n\"Tell me what to do, when you're ready. Teach me how to please you.\" \n\nThat request was at least as exciting as the sensation of his hand on my sex, possibly more. He made it sound like he had all the time in the world and no other agenda than to turn me on. I'd never asked for anything during sex before. I'd never felt comfortable making requests of my previous partners, but I feel perfectly comfortable telling Nico what I wanted. What surprised me was how much it thrilled me when I did. \n\n\"Touch my pussy,\" I whispered. I slid a hand down over his and pressed on his fingers. \"Inside. Spread me open.\" \n\n\"Show me,\" he said in a hoarse voice. His eyes locked on mine and I pushed his fingers apart with my own. He looked as turned on as I felt. \n\n\"Open me,\" I whispered. His fingers dipped between my wet pussy lips and I arched my back and groaned. \"Ohh yes, yes. Like that.\" I pushed his hand, wanting him inside me, and groaned again as one rough finger dipped between my inner lips. I was so wet, it slid in without any resistance. \n\n\"You're so hot inside,\" he moaned. I continued pressing my hand over his, and he responded by entering me deeper, and we both moaned together as he filled me up. \"So hot and wet...\" \n\nI slid my hand from his, trailing my own wetness over the back of his hand and slipped my fingers beneath his palm. I found my clit and gasped. Nico responded by lifting his hand, drawing his finger out a little, then entering me again, very slowly. His eyes dropped from mine and for a few seconds he watched as he repeatedly entered me with luxuriously slow strokes. I sighed, getting very turned on very quickly, and moved my fingers faster, circling and teasing my sensitive clit. \n\n\"Not too fast,\" he whispered when I started sighing and squirming with excitement. \"Enjoy the show.\" \n\nI lifted my head a little and groaned with pleasure at the sight of his big hand between my pale thighs. He moved his wrist, drawing his finger from inside me. I only had a second to see that it was glistening with my juices before he filled me again. \n\n\"Ohhh God,\" I groaned. I let my head fall back onto his supporting arm and made an effort to slow down my stroking fingers. \"That's amazing...feels so good...\" \n\n\"I love this. You're so wet and sensitive.\" I saw his eyes were still following the motion of his own hand as he continued to fill me with his rough finger again and again. I arched my back and let my own fingers dance around my clit, looking for a little more pleasure, but trying not to orgasm. But when he introduced a second finger, the pressure was so pleasurable it put me close to the edge and I had to move my own fingers away from my clit. \n\n\"Oh God,\" I groaned. \"Nico, that's going to make me come.\" I wasn't sure I wanted to come, but I wasn't sure I wanted to stop. My head was spinning with pleasure, so much I couldn't make a decision to stop or keep going. I writhed, half avoiding his plunging fingers, but pushing my hips up at him, too, craving the sensation of them filling me up. \n\n\"I'm going to come!\" There was panic in my voice. I met his eyes, not sure if I wanted permission or what. \"Nico\u2014\" \n\n\"Yes, Zoe,\" he gasped. \"Come. I want to feel you come, sweetheart.\" His voice was a hoarse whisper. I could see the tension in his arm muscles as he continued fucking me with his fingers. \n\nI couldn't respond, except to gasp his name as my arousal cranked higher and higher. I was practically chanting it. \"Nico. Nico. Oh God, Nico.\" \n\n\"I want to feel your pussy when you come on my fingers,\" he groaned. His dark brown eyes were holding mine. His brow was furrowed in arousal, and there was a sheen of sweat on his handsome face. He bumped my clit with his thumb and his expression almost became pleading. \"Come, Zoe. Come, sweetheart.\" \n\nI gasped. My hand flew to my breast, my fingers busy on my nipple, and everything inside me tightened. I closed my eyes. It hurt. I held my breath, knowing there was another side to the pain. \n\n\"Don't close your eyes,\" Nico gasped. \"Look at me, baby.\" \n\nI did, and the next second I came. I gasped and my hips bucked as Nico buried his fingers inside my spasming pussy. He said something, his face contorting with excitement, but the buzzing in my head drowned out his voice. I couldn't catch my breath as my orgasm rippled through me. It was incredible. I felt the thickness of his two fingers inside me as my muscles contracted and, once I was able to draw a breath, groaned his name. He answered me, whispering my name in response. \n\n\"Zoe, Zoe,\" he whispered, \"Oh, Zoe...\" \n\nHe pressed his fingers deep inside me and held them there while my pussy throbbed a few more times. \n\n\"That was unbelievably sexy,\" he said. He kissed my open mouth as I tried to catch my breath. I stared up into his intense dark eyes and my pussy pulsed weakly a few more times. I could tell by his expression he'd felt it, too. \"So sexy,\" he groaned. He watched my face for a few seconds and then kissed my cheek. \"Can I move?\" His hand flexed and I managed a weak, \"Yes.\" \n\nI sighed and he slid his hand from my pussy. His palm was soaking wet. I felt it as he laid his hand on my belly, then smelled my own aroused fluids when he lifted his hand to turn my head toward his. He kissed me deeply, making my pussy pulse again, an echo of my powerful orgasm. I shivered with pleasure and threw an arm around his neck. I rolled toward him, though my body was exhausted from the relief of coming, and he pulled me close, pulling me on top of him. We kissed and kissed, deep, passionate kisses that escalated quickly and soon had both of us breathing fast again. \n\nI slid my hands to his chest and pushed, sitting up astride him again. My knees met the surface of the bed and I rocked my hips until my soaked pussy was over his thick cock. I only had to shift a little to part my labia, I was so wet and open from arousal, and soon felt his penis nestle between the lips of my pussy. He felt so hot against my bare sex. \n\n\"Oh...fuck.\" He groaned out both words and his eyes fluttered closed for a second. \n\nIt was the first time I'd ever heard him swear. It sounded extraordinarily obscene and thrilled me to my core. \n\n\"Such language,\" I said in mock disappointment. He managed a half smile, but was clearly too overwhelmed with pleasure to respond. \n\nI shifted my hips and slid my hands up his chest, tracing the curves of his muscles and slipping my fingers through his chest hair. I began a slow rocking motion forward and back. My own fluids lubricated my motions, so my swollen sex slid easily over the thickness of his shaft. I'd just recovered from my orgasm, but with each forward slide, when the flared head of his cock bumped my clit, I felt tension building inside me again. \n\nI leaned forward and ran my hands through his hair then brought my mouth to his, kissing him softly. \"How's your heart doing?\" I asked, bringing one hand to rest on his chest. I could feel the strong beating under my palm. \"Hanging in there?\" \n\n\"Oh, Zoe, I don't know,\" he sighed. He looked serious at first, and then he laughed. His eyes crinkled at the corners and his smile spread across his whole face. When he relaxed, he was still smiling, but his eyes were bright with tears. \"I really don't know.\" \n\n\"Are you OK?\" \n\n\"I'm more than OK, Zoe.\" I watched the tears spill over and trail down the sides of his face. \n\n\"Nico?\" \n\nHe lifted his hands to my face, pulling me down to kiss him again. \"I'm OK,\" he said, then kissed me again. When I drew back, his eyes were still wet, but no more tears were coming. \"Promise. Don't worry.\" \n\nWhen he kissed me next, it was more passionate, and soon his hands were urging my hips back to his. I rocked back and forth, turning both of us on, while he held my mouth to his, kissing me deeply. When I lifted my hips and reached for his cock, he broke the kiss. I shifted, wanting him inside me, but his hand went to my waist. \n\n\"I don't have a condom,\" he said in warning. His expression was so pained. I could tell he wanted it, too, he wanted to be inside me. I was thrilled to be able to give it to him. \"I'm sorry. I didn't plan on this happening...\" His words faded out as I angled him toward my sex and moved to take him inside. \"Zoe?\" \n\n\"I'm on birth control,\" I said. \"It's OK.\" \n\nI sank down and shifted and the first inch of his cock slid inside me. He groaned, I groaned, and I let my legs relax, bringing myself down slowly until our bodies met and his thick cock was fully inside my body. His hands slid to my waist and he held me there, just gently applying pressure, holding my gaze. \n\nI think that first moment of penetration is the most exquisite. Even better than any of the thrusting and fucking, better than the orgasm itself, maybe. That moment when my pussy wraps around the thickness of a cock, before repeated penetration makes the pleasure more about friction and intensity than precision. Even after my powerful orgasm, I felt it, the tight grip of my hole around Nico's penis, a pure ring of pleasure. \n\nI stared down at him. He took a big breath that expanded his chest, and sighed. It was part satisfaction and part anticipation. \n\n\"You are fantastic, Miss Zoe O'Reilly,\" he breathed. \"Just fantastic.\" \n\nI began to move, drawing my hips up as slowly as I could, and only an inch or two before lowering them again. I did it once, twice, and the third time his eyes closed for a heartbeat and he sighed again. I felt like the world slowed down for the next few minutes. Nico's hands wandered over my thighs and hips, but his eyes stayed focused on mine, and that connection was turning me on as much as the sensation of his cock inside me. I was still very wet, but I could feel my pussy getting wetter as arousal started to build. I felt a bead of sweat trickle down my back. \n\n\"You feel so good inside me,\" I said, looking down at him. I sat up straighter and found my balance. Then I started to move again, lifting my hips and dropping them. The new position stimulated my clit each time I lowered myself, and I felt tension building inside me again. I'd never had more than one orgasm during sex, and I'd done most of the work to get those. Nico had already made me come so easily, and I was starting to think I might just come again. \n\nI started moaning at the thought of it and he met my eyes again. He lifted his hands and let my hair slip through his spread fingers. \n\n\"Your hair is such a beautiful color,\" he breathed. \"Foxy red. Mmm and you are so very foxy, Zoe.\" \n\nI laughed breathlessly, losing my rhythm for a second. I swirled my hips in tight circles, thrilled to hear him sigh with pleasure. His hands dropped to my breasts and cupped them gently, his palms brushing against my erect nipples. \n\n\"Ride me,\" he whispered. \"Just like you were. It feels so good. And you are so damned beautiful right now.\" \n\nThe look on his face was so erotic, equal parts admiration and lust. I lifted my hips and lowered them, slowly at first, but gradually increasing my pace. A smile had been playing at the corners of his lips, but it was gradually fading as the tension in his face began to grow. I watched his chest rise and fall, watched it jump when he gasped, and leaned forward, supporting my weight with both hands on his hot, damp chest. He gripped my waist and began to push up against me, thrusting into my pussy even as I drove myself down on his cock. His face was knotted with tension, but it was sexual arousal, not whatever had troubled him a moment before. I held myself still and let him thrust into me from below. He wasn't rough, but his hips met mine with force, our bodies making a slapping sound when they met. \n\n\"Switch me places,\" he said suddenly. He took me by the waist and lifted me off his cock. I dropped onto the bed next to him and he moved over me immediately, pushing my thighs apart as he climbed between them. He was inside me again in half a second, pushing deep, his hips pressing me down into the mattress. He shifted forward and my knees parted more, making room for his hips. He propped himself on his fists, one on either side of my head, and looked down at me with an expression of lust and longing. \n\n\"I won't last long,\" he admitted. \"I could come right now, you feel so good.\" \n\nHe pulled his hips back and began to move slowly. He only penetrated me a little bit at first, one or two slow, shallow thrusts and then he slid himself deep, his hips coming to rest on mine. I wrapped my fingers around his tight biceps and lifted my legs higher, spreading myself more for him. I looked up into his eyes and he sighed, then began to fuck me in earnest, slowly at first, but deeply each time, and with each deep penetration I grew more tense inside. ",
        "\"Nico, that's fucking amazing,\" I moaned. I slid one hand down between us and started rubbing my clit. I was instantly rewarded with a zing of pleasure that made my pussy pulse. \"You're deep inside me.\" \n\nHe gasped and then groaned. \"Oh, sweetheart...\" His eyes were intense, but he managed a grin and shook his head. \"You have no idea how good this feels.\" \n\nHe continued filling me deeply again and again and I stroked my clit, still staring up at him. The openness of his facial expressions was so exciting. He looked at me with lusty eyes that melted into something like disbelief, then his brow tensed and he whispered my name as he pushed himself deep. He pressed his hips against mine, trapping my stroking fingers on top of my clit, and then drew himself out again. Again and again, his face transformed until he stopped pausing with his cock deep inside me. His hips rose and fell in a relentless rhythm of solid fucking thrusts. \n\nAfter a few minutes he asked, \"Could you come again?\" His voice was hoarse with excitement. I could tell he was close to coming himself. \"Like this?\" \n\n\"I think so.\" I gasped and increased the pressure on my clit, feeling my pussy tightening in response. \n\n\"Do you want something different?\" He dropped his eyes to my stroking fingers and groaned. \"Do you want me to stop until you\u2014\" \n\n\"No, don't stop. Don't stop, Nico.\" I stared up at him watching his rapturous expression as I pleasured myself. \"Oh God, don't stop.\" \n\n\"Talk to me,\" he whispered. \"Tell me what you want. Tell me how to make you come.\" \n\n\"Fill me up, Nico. All the way. Fill my pussy.\" \n\nHe groaned, obviously thrilled by my request. He shifted and slid his hands under my hips. He lifted them and began fucking me in long, powerful thrusts. The bed protested with a rhythmic squeaking as he fucked me with effort. That was just what I needed, and I realized a moment later, just what he needed, too. He was watching my face, trying to hold off his orgasm. \n\n\"Are you going to come?\" I gasped. I crushed my clit under my fingers and felt my pussy tensing around his thrusting cock. Realizing we were about to come together was all I needed. \n\n\"Should I wait?\" His face was flushed and the look in his eyes was wild. \n\n\"God, no. Come inside me.\" \n\nHe gasped, bucking hard. \"Oh baby, are you sure?\" \n\n\"Yes! Yes, Nico. Come deep inside me.\" \n\n\"Come with me,\" he growled. He closed his eyes tight and his thrusts became rougher, more powerful. My breasts bobbed and my legs jerked in the air with each forward thrust. \"Come with me, Zoe.\" \n\n\"Fill me up. Don't stop. Don't stop!\" \n\nI reached the peak a moment before he did. My pussy clenched and I held my breath, waiting for the release. Nico felt me tighten. His eyes flew open. \"Oh God, I can feel it, Zoe,\" he gasped. My tightened muscles released, then tightened again and again. I barely heard him over my own keening cry. \"I'm gonna come, too,\" he gasped. His hips paused, his cock halfway inside me, and then he groaned again from deep in his chest, a growl of intense pleasure, and pushed himself deep. He thrust two more times, his hips shaking, and I knew he was filling my throbbing pussy with cum. He trembled while his cock pulsed deep inside me, his face red and sweaty, his expression completely unguarded and raw. \n\nI reached up and ran my hands through his hair. He was breathing too fast to kiss me, but he looked down at me and managed a shaky smile. \"Oh my God,\" he said breathlessly. \"Oh. My. God.\" His whole body was rigid as he held himself inside me. The muscles in his arms strained and his shoulders bulged with tension. \"Oh sweetheart,\" he breathed. \"Zoe. Baby. You are amazing.\" \n\nHe took a full minute to relax and then pulled himself out with agonizing slowness. I felt his cock slip from my body and the sensation of fluid leaking out of my pussy. It made me shiver and I let out a soft moan that made Nico smile weakly. \n\n\"Oh God, me, too,\" he said breathlessly. \"Zoe, you are...I don't even know what to say. I can't believe this\u2014you. I can't believe how lucky I am.\" \n\nHe sat for a moment, eyes moving over my body, and I watched his broad chest rise and fall rapidly. He wiped the sweat from his face and sighed, then laid down on the bed next to me. I turned and he shifted his arm to give me room to press myself close to him. His skin was so hot, but I slid my arm over his chest anyway and let my palm rest over his heart. It was still thumping hard, but after a while it started to slow. \n\nHe laid his hand over mine, pressing my palm to his skin. \n\n\"Still ticking,\" I observed. \n\n\"No,\" he said. He was still a little out of breath. He closed his eyes. He had to be completely exhausted, after all that and on top of his long work week. \"It's just an illusion. It has to be. I have obviously died and gone to heaven. It's the only explanation.\" \n\nI laughed and pulled myself closer to him, snuggling up against his hot torso. I slid my knee over his thigh and felt my pussy throb distantly. \"I don't think so. I think it's real.\" \n\n\"It can't be. It's too good to be true.\" He craned his neck to look down at me. \"It's just a dream, isn't it? I'm going to wake up in a minute and realize I'm late for work.\" \n\n\"Not a dream. And you don't have to work tomorrow.\" \n\nHe sighed and let his head fall back onto the bed. \"Thank God for that.\" \n\n\"Although you do have to get up with the kids and get their breakfast.\" \n\n\"Ohh God.\" He groaned, but it turned into a laugh. \"I am going to be a wreck tomorrow.\" \n\nI sat up on my elbow and looked around the room for a clock. There was a digital alarm on the table on Nico's side of the bed, but I couldn't see the time on its front. Reluctantly, I sat up and reached across his prone body to turn it toward me. It read: 11:40. I sighed. I'd need to leave soon. I slid back to his side and draped my arm over him again. \n\n\"Do you have to go?\" \n\n\"Not yet. Soon.\" \n\nHe turned on his side to face me and slid his hand into my hair. \"I don't want you to go,\" he said. I tilted my face up to his and he kissed me softly. He looked at me for a long time without speaking. I watched his face change again and again, registering different emotions I couldn't pin down and guessed there was a lot going on in his head. He was silent so long I started to feel nervous. \n\n\"You OK?\" \n\n\"I am.\" When he smiled it was natural and sweet and eased my concern. \"I'm really, really happy right now. You make me so happy.\" \n\nHe kissed me once more and then I snuggled against his neck, enjoying the slow expansion of his chest and the sight of my pale hand on his light brown skin. I ran my fingers over his sweaty side and felt him sigh. \n\n\"I wish you could stay. I want to wake up in the morning just like this,\" he said. \n\n\"Glued to the bed with our bodily fluids?\" \n\nHe laughed, a deep rumble in his chest. \"Maybe not just like this.\" I looked up at him to see he'd closed his eyes. He looked so content. After a few seconds, he mumbled, \"Maybe just like this, after a shower.\" \n\n\"A shower sounds good.\" \n\nHe mumbled something about laundry, but it was clear he was falling asleep. I watched him for a few seconds as his body relaxed and his breathing grew slow and even. I sat up on my elbow and studied his face. When I ran my hand up his hairy chest, he didn't stir. I laid my palm on his rough cheek just to feel the heat of his skin, and then traced the shape of his mouth with a fingertip. How many fantasies had I had about that mouth? It thrilled me to think I'd kissed it tonight. \n\nThere were creases at the corners of his eyes, the ones that sprang to life when he smiled. I'd loved those from that first moment he'd smiled at me. I traced those, too, and then the soft fringe of his eyelashes. He twitched slightly, but didn't wake. \n\nHe had a very attractive face, even sweaty and worn out and overheated, he was good looking. But it was the way he looked when he was animated that really made him handsome. He didn't hide his emotions. They played out on his face and in his body language, and it was the most genuine and real thing I'd ever seen. \n\nI pressed one more soft kiss on his sleeping lips and sat up. I had to get home before my grandparents worried. It was possible they weren't home yet themselves, but if they were, they would wonder why I wasn't. I slid from the bed and pulled my skirt on, trying to smooth down the wrinkles in the front. I slipped my panties on next. They were soaked and unpleasantly cool, but necessary unless I wanted to leak all over my skirt on the drive home. \n\nI whispered his name, but he didn't even stir. I spoke it, and then gently shook his arm. I thought of letting him sleep, but I didn't want to leave and have him wake up and feel bad he'd fallen asleep. \n\n\"Nico?\" His eyes fluttered open. \"I have to go.\" \n\nHe shifted and sat up and rubbed his eyes. He looked like he'd been asleep for hours, not just a few minutes. \n\n\"Mmm. I'm sorry.\" \n\n\"Don't be. You're exhausted. I just didn't want to go without saying goodbye.\" \n\nI slid from the bed and he followed me sleepily. \"Besides, you haven't brushed your teeth yet, and I'd be remiss in my duties if I left without reminding you do that.\" \n\nI heard him chuckle and then yawn as he followed me out into the dark house and to the kitchen. I picked up my clothes and began to dress, trying not to feel the guilt at the sight of my discarded bra on Rose's clean kitchen floor. This probably wasn't what she'd imagined happening when she asked me to help Nico tonight. \n\nI put my bra on, tugged my tank top into place, and smoothed it down. I looked rumpled and wrinkled and guessed my hair was a mess, too. I combed my fingers through my sweaty, tangled hair, but I knew there wasn't much I could do without a comb. And maybe a shower and some shampoo. \n\nI picked up my purse and slipped my feet into my sandals, and faced Nico again. He was leaning against the counter, still naked, where he'd leaned earlier in the evening just before he'd kissed me. His voice was low and sleepy. \n\n\"Are you busy on Sunday? Maybe we could take Lena to the park or something.\" \n\n\"I'd love that.\" \n\n\"I don't know what time. I'll figure it out and call you.\" He rubbed his tired eyes and gave me a weak smile. Then he reached both hands out. \"Come and kiss me again before you go.\" \n\nI crossed the room without hesitation and let him take me in his arms. He fit his mouth to mine with care and I was taken back to the first kisses we'd shared, how gentle he'd been. He'd been unsure of himself, or maybe of me, and I'd felt it in his body. But this kiss wasn't unsure, it was content. It was slow and soft and made me sigh. When he lifted his mouth from mine he straightened and looked down at me, slipping his hand into my loose hair. \n\n\"This all happened so fast,\" I said. \"Are you doing OK?\" \n\nHe slid his hand from my hair and cradled my face in his palm. His expression was so affectionate it made my heart ache. It took him a few seconds to answer me, though. \n\n\"I feel like maybe I shouldn't be, but I am.\" A sleepy smile stretched his mouth. \"I didn't expect this to happen. I never thought I'd fall in love again.\" \n\nMy heart surged at his words. I couldn't hide my surprise. \n\n\"I think I've been in a kind of free fall for weeks, and tonight I finally hit the ground.\" \n\n\"That long?\" \n\n\"Since that first time you stayed for dinner. Seeing you with the kids...with Lena. I'm not ashamed to say, what I felt scared the crap out of me.\" \n\nI slid a hand up his chest to feel the beat of his heart, remembering his confession of fear earlier. He smiled weakly and his eyes closed for a few heartbeats. He was clearly worn out. \n\n\"Because when I saw you that night, out in the yard after dinner, it wasn't just, Oh, she's cute, it was like, Look at her, look at this gorgeous, brilliant, perfect woman. I never thought I'd feel that way again.\" \n\nI stretched to kiss his mouth. His words were so thrilling I wasn't sure how to respond. \n\n\"I'm still not convinced this is real,\" he said after a few seconds. \n\n\"Should I pinch you?\" \n\n\"Hmm. Maybe kiss me instead?\" He pulled my face to his and we kissed softly. I closed my eyes, but he kept his open. He sighed. \"That was a very convincing kiss.\" \n\nI reluctantly moved from his arms and backed away. \"Call me tomorrow?\" \n\nHe nodded. \n\n\"Lock the door behind me. And promise me you'll make it back to your bed before you fall asleep.\" \n\nHe laughed softly and yawned. I stepped out onto the deck into the damp August night and headed for my car. I knew it had really happened. I knew from the way my pussy ached and from the stickiness inside me. I knew from the way my heart beat faster each time I thought of something he'd said, or the way he'd carried me to his bed, or his facial expressions when he watched me orgasm. I knew it had happened, but it felt like a dream. \n\nI'd gone to Rose's excited to spend a few hours with Nico, and for the chance just to be around him again, to see his handsome face and hear his deep voice. I'd almost left him in his sleepy state at 10:30. I'd been almost to the door\u2014my sandals on, my purse on my arm\u2014and then he'd confessed and kissed me. And then... \n\nIt wasn't just that he was attracted to me, too. It wasn't even that we'd had sex\u2014amazing sex like I'd never imagined was possible\u2014it was bigger than that. If he really felt the way he'd said, it hadn't just been the sex for him either. It was everything, and everything was different now. \n\nI was relieved to find the driveway empty. My grandparents were very liberal-minded people, and since I'd moved in, they had given me all the freedom I wanted\u2014not that I'd needed it, with no social life to speak of\u2014but I loved them dearly and didn't want to feel like I'd abused their trust. I was glad I didn't have to sneak in past them looking the way I looked. \n\nI took a quick shower and put my wet hair in a loose braid. I put on a t-shirt and clean panties, switched off the light, and slid into bed. I lay awake for a long time, long after I heard my grandparents' car pull in, long after their hushed voices found their way up the stairs to me, and long after the house grew silent again. \n\nI thought about Nico asleep in his bed. I thought about how the kids would get him up before seven, and how tired he would be on just a few hours of sleep. I thought about everything he'd said and wondered if he'd meant it. \n\nWas he really in love with me? Was I in love with him? \n\nI wondered when I would see him again, and I wondered, particularly, what would happen when I did see him next. Where would things lead? \n\nI thought, too\u2014but only vaguely\u2014of the choices I needed to make about school and my career. It seemed like such an abstract thing, a far off idea I couldn't quite grasp. I realized I didn't want to try. Anxiety waited just at the edges of my consciousness, threatening to upset my drowsy, blissful state, but I filled my head with images of Nico's smiling face, and drifted off to sleep into the most fantastic dream of his brown-skinned arms full of red-headed babies."
    ],
    "authorname": "angel_grant",
    "tags": [
        "older man",
        "younger woman",
        "romantic"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/free-fall-2"
}