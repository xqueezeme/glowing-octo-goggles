{
    "title": "The Magician's Assistant",
    "pages": [
        " Author's Note:\n\nI submitted this story within the Erotic Horror category for two reasons. First, there is at least one scene involving violence and bloodshed. Second, the explicit scenes are intended to be as disturbing as they are arousing, if not more so. Although there are several other possible categories, it is my hope that the majority of readers will agree Erotic Horror is the most appropriate choice for this story. Also worth noting, at over twenty-five thousand words this tale runs eight Literotica pages. For all the above reasons, those looking for a quick wank might be better served looking elsewhere. \n\n*\n\nSeptember 24, 1955\n\n\"Presenting Fantasma Scuro, the greatest magician in the world.\"\n\nI chuckled; as if the greatest magician of any place would be caught dead on Coney Island. Within the humble auditorium, my eyes wandered to the peeling paint of the ceiling, down the tattered red curtains, to the worn wood of the stage, across the dresses and coats of the audience, to the pile of peanut shells at my feet.\n\nPeanuts. At least the day wasn't a total loss. I turned my attention to my sister at my side. Sarah flashed a wide grin. Forcing a smile in return, I reached into the bag in her lap and fished out another handful.\n\n\"I'm sorry you're not having fun,\" she offered.\n\nI shrugged and let the smile go. \"Maybe I'm just getting too old for this kind of thing.\"\n\n\"You went trick or treating with me just last...\" Sarah paused, cutting her eyes from me to the stage. \"Oh, look. Here he comes.\"\n\nI turned to see a tall mustached man in a classic black cape and hat. He strolled to the center of the stage and bowed, then waited for what applause there was to subside before he motioned with a sweep of his hand toward the curtain. \"May I present my assistant, the lovely Christine!\"\n\nFrom behind the hanging fabric, a young woman strode waving and smiling. I gasped as I beheld her figure, an ideal hourglass constrained by a costume that was little more than a white swimsuit with red sequins. My attention traveled upward along her golden tresses to her movie-star face. She was everything I'd always wanted to be. I sat upright and lamented that I could not trade places with her, experience her glamour, know what it was like to be beautiful, if only for a moment.\n\nMy gaze dropped beyond a pair of pouting lips to my own pudgy frame. Beneath the frayed ends of my mousy-brown hair I watched my chest expand with a breath, then collapse through a sigh. I would never be her, or anyone like her. My fingers went to work on the peanuts. Their subtle oily scent wafted to my nose and I managed a little grin before popping the first into my mouth.\n\n\"Ladies and gentlemen,\" the magician bellowed. \"I shall now saw Christine in twain!\"\n\nI laughed again; ladies and gentlemen didn't come to Coney Island either.\n\nMy attention was more on the peanuts than the performance until the man began to saw and the assistant loosed a blood-curdling scream. A gasp swept the audience. The child in front of me leapt for his mother. In the near silence that followed I could hear the sound of the saw for the first time. My eyes darted to the blade, half expecting to see a red stain upon it.\n\n\"Stop it, Christine!\" the magician commanded. \"You're scaring the children.\"\n\n\"But it hurts!\" the young woman gasped.\n\nThe man stopped sawing and looked up to the crowd with a grin worthy of a theater melodrama. \"Of course it does,\" he said. \"After all, I am cutting you in half.\" Still wearing the same grin he waited for a ripple of amusement to sweep the audience before his hand, and the saw, once again moved. \"Try to bear it like a trooper,\" he yelled. \"I'll have you back together in a few moments!\"\n\nMy attention leapt back to the assistant's head where it protruded from one end of the box. With her contorted face, her clenched teeth, her shaking arms, and tears pouring from her blinking eyes, if she wasn't in genuine pain, she was sure doing a good job of faking it.\n\nThe magician spun the two halves of the box so that the girl's head and wiggling feet were toward us. He looked down at the supposedly severed ends of the girl and grimaced. \"Oh,\" he said, turning his eyes back to the audience. \"It's worse than I thought. I'll be right back.\"\n\nWith that, he turned and disappeared behind the curtain. The girl's arms continued to wiggle, but her feet stopped moving. Where her severed abdomen should have been, a red fluid began dripping from the box onto the stage. Several seconds later, her arms went limp and head fell back, revealing to everyone her closed eyes and open mouth.\n\nAnother gasp swept the crowd, followed by a few whispers.\n\nThe little boy in front of me looked up to his mother. \"Did he really cut her in half?\"\n\nThe woman looked down and smiled. \"No. It's just an act.\"\n\n\"But what about the blood?\"\n\nThe woman cradled her son's head to her bosom. \"It's just ketchup, Sweetie, that's all. It's just pretend. You'll see.\" \n\nWe heard footsteps. The magician dashed through the curtains and stood for several seconds panting. Then, wearing the same wide grin, he held aloft a tiny pink and white strip. \"Let's just hope I'm not too late!\" \n\nI laughed with everyone else. It was an oversized Band-Aid.\n\nThe performer rushed to the box and, with mock diligence, pretended to apply the adhesive strip. \"I think that's done it!\" he announced. The dripping ceased. Another ripple of laughter swept the crowd.\n\n\"Time to put her back together!\" the magician announced. With that he spun the box portions until they were again adjacent, then secured them together with a pair of hooks. He clenched his teeth and threw open the lid.\n\n\"Dear me!\" he said, looking down and scratching his head. \"I think this goes here.\" He reached into the box and pretended to reassemble the girl, much to everyone's continued amusement. \n\nA dozen seconds later the girl's head rose. Turning her face to the audience, she yawned and stretched as if she might be waking from a long night's sleep. Then she wiggled back into the box before alighting to stand clear of the container. With her ankles crossed in the most dainty of fashions, she smiled and threw her arms wide.\n\nInstead of applause, there was silence. Everyone's eyes gravitated to the assistant's midsection where a section of her costume appeared to have been torn away, revealing the lower portion of her abdomen, including her navel.\n\n\"Darn, Christine,\" the magician said. \"We seem to have ruined another of your outfits.\"\n\nThe girl looked down, then gasped. Her mouth and eyes both widened in the same moment. She looked back to the audience for a full second before she pulled her arms inward, covering her tummy.\n\n\"I agree, Christine!\" the man called above the laughter. \"You should go change!\"\n\nA roar of amusement followed the young lady as she turned and ran. My admiring eyes followed her too, until she had disappeared behind the curtain.\n\n\"And now,\" the magician proclaimed, \"I shall pull a rabbit out of my hat.\" \n\nHe removed the top hat from his head and placed it on the end of the box just above where Christine's head had been.\n\n\"Pocus di Hocus,\" he said, waving his hands and fluttering his fingers over the upturned hat. \"Venuto avanti dal mio manicotto poche lepri\"\n\nA white bunny leapt from the man's sleeve onto the box top.\n\nThe magician put a hand to his chest, then turned his wide eyes to the audience. Everyone laughed as he hurried to stuff the bunny into the hat only to have it leap from his other sleeve. A larger roar of amusement swept the crowd.\n\n\"Bear with me,\" he pleaded, putting the rabbit into the hat for the second time. \"I've never done this without my assistant.\" At once the bunny fell from his trouser leg onto the stage.\n\nThough he continued to put the rabbit into the hat, it continued to appear elsewhere until at last it poked just its head from the box.\n\n\"I should have sawed you in half instead!\" the magician cried. Amid yet more laughter, he thrust the bunny into the hat then threw his headgear into the audience. Without looking back, he turned and stalked toward the curtain. \n\nThe laughter ceased. Everyone's eyes turned to a man in the third row as he examined the hat. There were whispers. He passed the hat to another man who proceeded to push and pull the black material, but there was no sign of any compartment, much less a rabbit.\n\nThis man passed the hat along, then stood and directed his hearty applause toward the stage. Within seconds, the rest of us joined him.\n\nAfter a quarter-minute of such ovation, the magician's head poked from between the slit in the curtains. His wide eyes roamed the audience in the few seconds it took for the clapping to subside. \n\n\"So,\" he called, \"am I to understand you wish to give me a chance to redeem myself after the rabbit fiasco?\"\n\nAnother round of laughter, and applause, swept the crowd. \n\nWearing a wide smile, the magician emerged. Christine followed, wearing a costume similar to her first, except this one was blue and silver. \n\nWe applauded again. With a start, I turned my empty palms to my face, then glanced past my hands to the floor, trying to remember when I had dropped my peanuts. Looking back to the stage, I began to wonder what the world's greatest magician was doing on Coney Island.\n\n* * *\n\n\"I thought you didn't like this place,\" said Dad, victorious sarcasm evident in the raised pitch of his voice. \"It's getting late. We should get a couple dogs at Nathan's and head home.\"\n\n\"No!\" Sarah squealed, wrinkling her nose and pulling on our father's arm. \"I don't want anything from Nathan's.\"\n\n\"You have to see him,\" I added. \"He's the best.\"\n\n\"Then why is he free?\" Dad asked.\n\n\"He's only free today,\" I explained. \"Something about it being the first day of fall.\"\n\nOur father smirked. \"Equinox special, is it? How good can he really be if he performs for free? We could ride the Thunderbolt instead, you've always like that...\"\n\n\"We've ridden the coasters before,\" I said. \"All three of them.\"\n\nDad stopped. A grin spread across his face. \"You've seen the magician before too, haven't you? At least you haven't ridden a roller coaster today.\" \n\n\"Please!\" My sister and I begged in unplanned unison.\n\nOur father looked to each of us, then to our mother. This last look sealed his fate.\n\n\"We drove two hours to get here,\" Mom said. \"We can stay for one more show.\"\n\nThus the four of us filed into the modest show hall for the final performance of the evening. The act went much as before. First, the magician sawed his assistant in half. Then he had trouble with the renegade rabbit. Next, Christine locked him in a chest suspended on a pair of wooden chairs and he escaped, appearing with a puff of smoke amid the audience.\n\nFinally, he threw seven daggers at his assistant while she spun on a wheel. Though he appeared to toss the knives in every direction except toward the assistant, each blade flew true, popping one of the seven balloons nestled near her body.\n\nWatching the performance again, knowing what would happen, I was even more amazed; I could find not a hint of how he accomplished his tricks. Even the volunteers from the audience were different. After the knife throwing I applauded with everyone else, expecting the magician to issue his thanks, but he tricked me once again.\n\nHe and his assistant wheeled a pair of dark wooden booths onto the stage. Wearing broad grins the duo then walked to the forward edge of the platform where he again spoke.\n\n\"For the final performance of the final show of the final day of the summer, I'd like to perform a special trick. I'll need another assistant from the audience, but not a burly gentleman like last time. This time, I'll need the loveliest lady in the crowd, one even lovelier than Christine.\"\n\nThe assistant looked to the magician, then back to the spectators, affecting a dramatic pout in the process. Of course, everyone laughed at her mock lament.\n\n\"But who is this damsel?\" The magician paused to smile and raise one index finger aloft. \"I know not. It is for you,\" he directed that finger toward us, \"to decide. That's right, everyone look around and when you've decided who is the most beautiful maiden amongst you, close your eyes and picture her.\"\n\nThe spectators began swiveling their heads, looking every direction. I looked first to my dad, hoping he might look my way; but he looked to my mother instead and clamped his eyes closed at once. She blushed, then smiled. \n\nI grinned as well, then turned my attention back to the other spectators, hoping against hope just one gentleman might look my way, but none did. With a sigh, I sank into my seat.\n\nThe magician walked to the center of the stage while his assistant departed the platform and stood adjacent to the first row. \"Now,\" he began, \"through the mystical power of the mind, I will guide Christine to the fairest maiden on the island.\" \n\nWith that, he spun, facing away from us. His arms rose above his head. He turned his upturned left palm toward us, and flapped it once.\n\nThe assistant moved up a row. The magician motioned again. The assistant took several steps. And so it went, until the young lady reached, and then passed, my row. Within my chest, my heart sank. I turned and looked to my sister. She looked back and shrugged. A moment later, I swallowed and glanced to my feet, wishing for a handful of peanuts.\n\nHearing the sounds of shuffling, I glanced over my shoulder to see Christine sliding through the row behind me. I snapped my focus forward again until a round of giggles swept the audience. Turning, I saw the assistant standing just behind and above me, in front of a trio of men. Her eyes and upturned palms spread wide, she motioned to the men, then hunched her shoulders about her neck and shook her head.\n\nI smiled. The giggles from the audience turned into a roar. Christine's exaggerated focus snapped back to the stage, taking our attention with it. The magician raised a single forefinger in the air and then stabbed downward with it. A few seconds of silence followed before he spun, smiled, and thrust his splayed hands toward the audience. \n\nWithin the crowd, every head save one swiveled a direction I could never have ever anticipated. The one head that did not move with the others was mine. Naive in my ignorance I bounced my eyes about the faces turned toward me until I looked at last to my father.\n\nWearing a wide grin, he motioned upward with his eyes. I kinked my neck backward to see the assistant smiling down at me.\n\nI felt a touch on my forearm and looked to my right. Sarah beamed back. \"I knew it was you!\" she squealed. \"It had to be. I picked you!\"\n\n\"Thanks,\" I managed, feeling a bit guilty I had not done the same for my sibling.\n\n\"The necklace, Christine,\" the magician roared from the stage, diverting my attention from my sister. \"Our gift to Coney Island's Autumn Queen of 1955!\"\n\nA round of applause followed while the assistant removed one of the pair of identical necklaces she wore. My mouth fell open as her hands descended with the ribbon of jewels stretched between them. My eyes followed the string of glistening gems. A gift? I mused. Is it really mine? Do I have to give it back? The gold of the necklace settled upon my neck. Amid yet more applause, a shiver of excitement swept from my shoulders to my hips. \n\n\"Stand please,\" the magician beckoned. \"Tell us your name.\"\n\nWith my knees trembling, I rose. I could feel my cheeks grow warm. \"Megan,\" I said.\n\n\"Louder, please!\"\n\n\"Megan!\"\n\n\"Megan,\" the magician called back, \"I should like to bring you upon the stage, with your parents' permission of course, for the climax of our show. No knives or saws, I promise!\"\n\nAnother round of laugher swept the crowd, but I barely heard it. My eyes leapt to my father. \"Can I?\"\n\n\"Yes, Sweetie, of course.\"\n\nLooking up, I saw Christine smiling at me from the aisle at the end of my row. She extended an upturned palm and gestured by curling her fingers back and forth. Then she turned and strolled toward the stage. I all but tripped over my own feet scurrying after her. With my shoulders tight about my neck, I followed her onto and then across the stage.\n\nThere I found a magician younger than I had expected, and taller too. The wild hair and mustache I could see were fake, though not the swarthy complexion and hawk-like nose. \"Well, Megan,\" he said, \"the audience certainly outdid themselves today. You are lovely.\"\n\nMy cheeks bulged to make room for my smile. Outside of my family, no one had ever called me lovely before, least of all a strapping young man. Again the audience applauded. A tingle swept from my shoulders to my toes. I could get used to this! I decided.\n\n\"Now, Megan,\" the magician continued, \"are you ready to participate in our final magical act of the day?\"\n\nI nodded my enthusiasm.\n\n\"Very good!\" From out of nowhere the man produced a pair of wooden shafts, each a couple feet long and the diameter of my thumb. \"I want you to take this rod and poke it beneath whichever booth you want.\"\n\nEyes wide, I accepted one of the sticks and then looked to the two vertical black boxes. They looked the same to me, so I went to the nearest, knelt, and shoved the rod beneath the booth into the space created by the wheels.\n\n\"Wiggle it around a bit,\" the magician said.\n\nThis I did, tapping the wheels on either side.\n\n\"And now,\" he said, \"put your rod anywhere on the stage where you'd like your box to be.\"\n\nI wandered the platform for several seconds before deciding no place looked better than any other. Turning back to the magician, I dropped the stick.\n\n\"Now for Christine's box,\" he said, extending the second staff toward me. \"Same thing.\"\n\nAs I repeated the procedure a second time, the assistant pushed the first box until it rested atop the first rod I had placed. Less than a minute later, the magician wheeled the second box atop the second stick.\n\n\"And now,\" the magician said, opening the door to the second booth. \"Check the interior.\"\n\nI peered inside, uncertain what I was meant to be checking for. The box was lined with a grey metal. Aside from the door itself, and the dozen or so holes the diameter of a pencil drilled through it, there was no sign of any opening. \n\n\"Do you see any way for Christine to escape the box other than through the door?\" \n\nBiting my upper lip I gave the box one last look, then turned my eyes to the magician and shook my head.\n\n\"Very well then,\" he said, turning to his assistant. \"Christine?\"\n\nWith a smile and a curtsey, the young lady stepped into the booth. The magician closed the door behind her and latched it with the simple twist of a wooden block. He turned to me with a smile. \n\n\"This way, Megan.\" \n\nHe motioned with a wave of his hand and I walked to take my place in the other cabinet. Darkness surrounded me the instant the magician closed the door, aside from the streams of light entering from the holes just above my eyes.\n\n\"And now,\" the magician bellowed, \"as most of you may have guessed, I'm going to cause Megan and Christine to trade places within these two booths. I need absolute quiet, please.\"\n\nI stood on my tiptoes and peered through the tiny openings, wondering how in the world he was going to move me into the other box and if I was meant to do anything to help him.\n\nOutside, between the booths, the magician began to chant, \"Fantasma di inferno, sentire me. Trasferire dentro corpi ... \"\n\nA flash of blue glow played across the audience. The illuminated faces gaped in unison, then issued a collective gasp. The magician continued to chant. A tingling crept over my body. A hissing, crackling sound like that of a roaring fire enveloped me. My nose sampled that peculiar scent that precedes rainfall. I became dizzy. My legs wobbled. I collapsed. The cold of the metal floor greeted my knees, but I hardly felt it. For a moment, I would swear I felt absolutely nothing, then my head warmed as sensation returned.",
        "I stood and scrunched my neck to look out of the holes. For a moment, I saw my father, but then a shadow covered the opening. \n\n\"Are you alright in there?\" \n\nI smiled, recognizing the magician's voice. \"Yes!\" I called back. With a start, I brought a hand to my throat. What's wrong with my voice? \n\nThe magician's voice again came, but this time as a whisper. \"Say nothing else, do nothing else except breathe, until I open the door.\"\n\nExpecting him to open the door, I started to lean away, but found I could not move, not even a budge. A panic struck me, but I couldn't even tremble, much less scream. Even my eyes were locked with but a narrow view out of one of the holes.\n\nThe sound of the magician's footfalls moved away from my box. \"And you, Megan,\" he called. \"Are you alright?\"\n\nOf course I tried to answer that I was not alright, to no avail. \n\n\"Yes, I'm fine!\" \n\nMy eyes tried to widen as I heard the words. That's Sarah! What's she doing on stage? My attention leapt to my sister's seat only to find she was still there. Who's on the stage that sounds like Sarah?\n\n\"Ladies and Gentleman,\" the magician yelled. \"May I present again to you, Megan, Coney Island's Autumn Queen of 1955!\"\n\nI heard another gasp from the crowd, then a thunderous ovation. What are they applauding for? I wondered. I'm still in here. \n\n\"Don't say a word,\" the magician whispered from just beyond my door. \"Come out and wave to the crowd.\"\n\nI heard a scraping and a click. The door opened. Without so much as a thought, I stepped out of the booth. My palm leapt upward, pivoting in the wave one sees from the queens on floats at parades. Then I saw it. Or her. No, not her, me, Megan, walking across the stage right in front of my eyes. \n\nMy blinking eyes snapped down to my body. Except it wasn't mine. \n\n\"Keep looking at the audience,\" the magician demanded, still in a whisper. \"And smile too.\"\n\nMy focus leapt upward to the crowd. I tried to turn my head, but I could not. I tried to open my mouth to demand an explanation, but instead my lips curved upward in a grin. All I could do was stare, smile, and wave as the imposter walked back up through the still-cheering crowd and hugged my parents. \n\nIn spite of my terror, I was still looking, smiling, and waving minutes later when I watched my family leave with her instead of me.\n\n* * *\n\nThe magician threw the door open and stood aside. \"Welcome home.\" \n\nI looked to him, but otherwise did not move.\n\nHe cast a glance each way down the corridor before motioning with his head. \"Inside.\"\n\nMy feet started to move so quickly I almost lost my balance. They carried me into a simple parlor with a leather sofa, a mirror above it, a coffee table, and two matching chairs. Opposite the couch stood a huge wooden bookshelf, a shade darker than the wood of the floor. Out a pair of French doors was a balcony, and beyond them, a glimpse of the moonlit ocean. \n\nBehind me, I heard the door close, then felt his fingers on my shoulders. With a gasp, I cut my eyes downward and watched while his hands slid the black overcoat down my arms. He tossed the garment across the back of a chair. His top hat followed, landing upright on the cushion.\n\nMy eyes leapt from the chair to the magician's face. The close-lipped grin set my stomach churning. My eyes fell from his face, back to the hat. \"Where do you keep the cute little rabbit?\" I asked, seeking any distraction.\n\nHe laughed. \"There is no rabbit. Go sit on the sofa.\"\n\nWithout a thought I obeyed.\n\n\"First, the rules,\" he said, walking to stand over me. \"These rules are always in force, for the rest of your days. You will not touch the necklace. Repeat the rule.\"\n\nMy mouth moved without me willing it. \"I won't touch the necklace.\"\n\n\"You will not remove your necklace, nor engage anyone else to remove it, nor do anything you know will cause the necklace to be removed. Say it.\"\n\n\"I won't take off the necklace, or have anyone else take it off, or do anything that I know will make it come off.\"\n\nThe magician nodded. \"Good enough. You will not harm any person, especially me, nor engage anyone else to do so, nor shall you do anything that you know will achieve that end without my permission. Repeat it.\"\n\n\"I'm not going to hurt anyone else, especially you. I won't ask anyone else to do it either and I won't do anything I know will cause someone else harm unless you say so.\"\n\n\"You will not leave this apartment or the theater without me. When outside, you'll not leave my sight without my permission. Say it.\"\n\n\"I will not leave the apartment or the theater or your sight without permission.\"\n\n\"Good. What's your name?\"\n\n\"Megan.\"\n\n\"Wrong,\" he said. \"Your name is Christine. Say it.\"\n\nI looked up to him and swallowed. A tear slid down my face. \"Christine is my name.\"\n\n\"You will never say your old name again, nor inform anyone else you have ever been anyone besides Christine. Say it.\"\n\n\"I'll never say...\" My tongue fluttered between my open lips. I was unable to say the name I knew to be mine. \"I'll never say my old name again. I won't tell anyone I was ever someone besides Christine.\"\n\n\"You won't attempt to communicate with anyone without my permission.\"\n\n\"I won't communicate with anyone without permission.\"\n\n\"My real name is Giancarlo, but my friends call me Gino. You will address me as the latter; starting now, understand?\" \n\n\"Yes, Gino.\"\n\n\"Very good.\" The man produced a notepad and a pencil, then sat beside me upon the davenport. \"Now tell me about this Megan person. What was her last name?\"\n\nMy eyes wandered. \"Miller.\"\n\n\"Seems I forgot another rule,\" he said. \"Don't lie to me again. Ever. What is Megan's last name?\"\n\n\"O'Reilly.\"\n\nHe jotted the information down. \"How old is she?\"\n\n\"Eighteen.\"\n\n\"Perfect. I was afraid we'd have to wait. Where does she live?\"\n\n\"Kensington.\"\n\n\"Long Island?\"\n\nI shook my head. \"New Jersey.\"\n\n\"I see,\" the magician said, recording this as well. \"Megan did come a long way. All the better. What's her address?\"\n\nWith a gulp and a tear, I told him, certain I was nothing less than a traitor. He continued recording my answers to questions about my family for several minutes before his inquiry again took a turn that set my heart racing, and not in a good way.\n\n\"Is Megan a virgin?\"\n\n\"Yes,\" I said with a gulp.\n\n\"Does she have a boyfriend?\"\n\nI wasn't really sure of the true answer to this, but my mouth said, \"Yes,\" just the same.\n\n\"And what's his name?\"\n\nA smile crossed my face. \"Ricky Hallmar.\"\n\n\"And what makes him your boyfriend if he hasn't fucked you?\"\n\nMy eyes widened, then fell from his, taking my face with it. \"I think he likes me.\"\n\n\"You think he likes you?\" the man gasped. \"And this makes him your boyfriend?\"\n\nMy eyes shot back to my captor. \"I know he likes me. He's just shy.\"\n\nThe magician shook his head. \"He doesn't like you. He doesn't even know you. And if he does like Megan, poor Ricky is in for heartbreak.\"\n\nMy jaw fell. \"Why?\"\n\n\"Megan is going to marry Thomas Collard.\"\n\nMy head fell to one side. Over my eyes my brow formed a line. \"Who?\"\n\n\"He owns a chain of hardware stores, mostly in Brooklyn. His wife of twenty years just died last year. A tragic accident, so I hear. As soon as he collected on her life insurance, he hired me to find him another wife, you see. Wants a nice, plump, young virgin to serve his every need. Or his one need.\" \n\nThe fiend paused to laugh. \"Of course, he prefers a blonde, but I'm sure Megan and a bottle of peroxide will make him very happy. She'll have to of course, she was the best I could do.\"\n\n\"But I don't want to marry him!\"\n\nThe man only laughed. \"That's good, because you aren't Megan. Besides, Christine, you're already married.\"\n\n\"What?\"\n\nThe magician leaned away from me and delved into his pocket. His hand appeared a second later with a gold ring pinched between his fingers. \"May as well put this back on now that the show's over,\" he said, extending a wedding band to me.\n\nMy eyes darted to the ring, then back to his face.\n\n\"That's right,\" he said. \"You're my wife.\"\n\nI swallowed. My lips quivered. \"No. I ... \"\n\n\"Take it,\" he insisted. \"Put it on.\"\n\nWith my chest shuddering through my first sob, I took the ring and donned it. \n\nThe man stood and extended his hand. \"Come, wife.\"\n\nEven with my sheltered upbringing, I had a good idea where we were going. \"Please,\" I begged, even as my hand slipped into his.\n\nGiancarlo yanked me to my feet. \"Don't worry, soon enough, I'll have you begging for it. Come.\"\n\nHe led me down the hallway. We passed a pair of doors, the second of which opened unto a washroom. A sob shook my chest when we went through the third and last door, entering the man's bedroom. No, I corrected myself. Our bedroom. I began to weep in earnest.\n\nGino turned. \"Quit your bawling, girl. I know your body, and how to please it.\" His arms encircled me. His fingers fumbled betwixt my shoulder blades. I felt a tug on the fabric and heard the sound of a zipper. \n\nI inhaled a quick breath and closed my eyes, praying when I opened them I would awake in my bed, the nightmare over. My prayer, of course, went unanswered. \n\nThe zipper bottomed near the small of my back. The man's hands moved to my shoulders where his fingers grasped the straps of my costume. I felt the fabric slide from my shoulders, then down my arms. Releasing my breath, I opened my eyes.\n\n\"What are you worried about?\" He paused to snicker through a grin. \"I bet you're as anxious to see them as I am; after all, I've seen them plenty.\" He released his hold and took a step backward. \"Go ahead. Finish what I started.\"\n\nUnder his leering eyes, I grasped the top edge of the cloth and began to peel the fabric from my body. My own eyes fell to Christine's exposed breasts. Or were they mine? Regardless of to whom they belonged, they were perfect; a bit smaller than I had expected, but round, firm, symmetrical, with tiny centers of pinkish brown topped by a pair of perky nubs.\n\nOnward my hands pushed the cloth, over a taut tummy, beyond a set of feminine hips and down a pair of muscular legs that bent while the fabric cleared them. Leaving the garment pooled about my ankles, I stood.\n\nGino took a step forward. One arm encircled my body, his palm finding the small of my back. The other palm rushed upward to grasp one of my breasts.\n\nWith a gasp, I leaned away from the unwelcome sensation. For years I had wondered what it would be like to be with a man. Now one was touching me. Soon, I knew, he would do more than touch me. Or was it me? \n\n\"I know this body well,\" he said, massaging the flesh of my bosom. \"I can give you pleasure through it; and I will, whether you want me to or not.\"\n\nHis lips found my neck and there suckled my tender flesh. I closed my eyes and tried to send my mind somewhere else, but the lack of vision only seemed to increase the sensation his lips imparted unto my skin. I opened my eyes and pursed my lips, determined above all else not to enjoy myself.\n\nIn spite of my best intentions, I soon began to writhe beneath the feel of his lips upon my neck and the groping of his hand upon my bosom. \n\nGino pulled his mouth from my neck and issued a subtle chuckle. \"Do you like your new body?\" he whispered. \"Feels nice to be beautiful, doesn't it? Christine wasn't too happy about spending the rest of her days in Megan's body. Who can blame her?\"\n\nWithout waiting for a response he whirled and shoved me onto the bed. \"Roll over,\" he demanded, \"on all fours like a dog, like the little bitch in heat you're about to be.\"\n\nMy body spun, assuming the position he had specified. Behind me I heard the rattle of a belt buckle, then the subtle rubbing of cloth over flesh. I buried my face in a pillow, trying to steel my nerves, wanting neither to suffer nor relish what was to follow, not quite knowing which I feared more.\n\nSeconds later, the mattress shifted and I knew he had joined me. One of his palms found the cheeks of my ass, first caressing, then groping it in the same manner he had my bosom, only harder.\n\nThe muscles of my loins clenched. I told myself I was trying to close myself to him, make myself unavailable, but I knew the spasms were not voluntary. His other hand found one of my dangling breasts. He squeezed the tender flesh to the point of pain, then drew his digits along the taper until his five fingers came together to pinch my nipple.\n\nI whimpered, though it was certainly not from any discomfort.\n\n\"You will learn to like it,\" he said. His fingers slid across my ass until the tips found the union of limb and torso. There he petted my tender crease at the edge of my bottom. \"I've been teaching little bitches to like it since long before you were born. Everyone thinks she'll be different, but they all learn. Nature calls, and the animal within then responds. You're feeling it now, aren't you, my little slut in the making?\"\n\nWith that he moved his hand over my sex. His fingers found my folds, rubbing slow circles in my softness. Beneath his churning digits I felt a warming in my loins. To my shame, I found my hips wanting to rotate as well, to emulate his motion. The muscles of my nether regions clenched again. This time there was no pretext beyond the truth. As much as I hated him, this body liked what his hands were doing. A second later my lips opened; both pair. \n\nThrough my open mouth I inhaled a crisp breath. Through my lower lips I felt his fingers play into the valley of my sex. Therein he drew the tip of his digit back and forth, teasing my entryway at the bottom of each stroke, teasing something else at the top. \n\nMy delicate flesh warmed under his petting until it seemed I could feel every ripple of his fingerprints teasing my wetness. For a moment, my ass tried to move backward to meet his pressure; the next moment it succeeded.\n\n\"Yes, little slut,\" my tormentor hissed. He shifted his body. His hand left my sex, only to be replaced by the one that had stroked my bosom. This time, instead of teasing my entry, one of his fingers pressed within. \n\nI gasped and leaned away from the unwelcome intrusion.\n\n\"Stay still!\"\n\nMy body froze. I closed my eyes.\n\nHe started petting the walls of my passage, much as he had my nether lips, only now the sensations were too much for me to resist. My hips began to squirm their want. A sob shook my chest. I knew his member would soon take the place of his finger. How many long nights had I lain awake, looking at the ceiling wondering what it would be like to have a man between my legs? Had I wondered it last night? I couldn't remember, but I was certain I would never have to wonder again.\n\nIn spite of my sobs, the warmth began to spread across my abdomen in waves. Within seconds, the whole of my torso undulated. A tear left my eye, a droplet of shame more than sadness.\n\n\"Yes, slut,\" he whispered. \"It's true. Smell your want.\" His free hand, the one that had first petted me, rose before my nose. \n\nI blinked, then breathed, sampling the primal muskiness of my arousal.\n\n\"All women want it,\" he said. \"Society may try and tell you otherwise, but your body knows better. You want the feel of a man in you. Admit the truth!\"\n\nI shook my head. \"Never. I will never want it.\"\n\n\"You may think so, but I know better. Soon, you will too.\" \n\nIn the same moment, his hands left both my face and my sex. I felt a palm upon each hip. A rubberiness touched my sodden crease; prodding, probing, then finding my entry.\n\nI swallowed, then gasped. Clenching my muscles, I tried to stop it, imagining I could close myself to him.\n\nHe pushed. My muscles resisted for but an instant before they surrendered, allowing his crown to ease beyond my entryway. \n\nThis is really it, I thought with a gasp. I had no additional time to reflect upon the moment before the remainder of his shaft slid within me. Expecting pain, I tensed, but I only felt myself stretch to accept him. My head sank. A shudder traversed my chest. Even if it didn't hurt, he had still taken that which was not his, crushing in an instant all my girlish dreams of what my wedding night might have been.\n\nShowing not the slightest care for my sorrow, Gino's hands moved to my shoulders. Pulling my body to him, he impaled me upon his length. I grunted, but not from discomfort. With a deliberate slowness, he withdrew only to bury himself within me again. My eyes bulged with each thrust. His cock rubbed my insides much the way his fingers had, except instead of the ripples of his fingerprints I felt the ridges of his member grinding against the walls of my passage.\n\n\"See slut,\" he said. \"Your body was made for fucking. All women are, you know. Why not enjoy it?\"\n\nThere was no denying it. I was being fucked. And whether I wanted to or not, I didn't hate it. I might even like it, if I let myself. Did I want to let myself? Did I dare let myself?\n\nAs if to answer my question, one of the man's hands left my hip. His hand slid over my buttock, between our bodies, then down, beneath where his cock still plunged in and out of my core. There his fingers first found, then rubbed slow circles in the apex of my nether lips.\n\nAt once, my ass clenched, then pushed back to meet both the pressure of his cock and that of his fingers. Within me, the two sensations attempted to merge, the warmth spreading from his rubbing fingers and the tendrils of pleasure scattering from the pounding of his cock within my channel.\n\nWhere the sensations merged I felt a pressure build within me, almost a swelling, slowly at first, but then it grew; like the urge to urinate, only with an intensity and urgency I had never before felt. I tried to hold it, to contain whatever it was that sought to break free within me, yet at the edges of my psyche I felt my control slipping.\n\nMaybe it's some magic, I told myself. That's it! He's making you like it. You're not liking it yourself. It's not your fault. My breaths grew short, crisp, almost urgent. Perhaps he's controlling your mind. It's not your fault. No matter what happens, it's not your fault.\n\nMy body stiffened. Whether it was my fault or not something was happening. My thighs shuddered. My fingers clawed at the mattress. My knees joined them. The muscles of my ass pulsed, then tightened. My teeth ground against one another. My toes curled to the point of pain, but I barely felt it. \n\nThe sides of my channel collapsed upon his cock as if trying to expel it. My eyes fluttered in their sockets. Something between a moan and a whimper escaped my upper lips. From my lower lips, something escaped too; something wet, something wicked, something all too wonderful.\n\n\"Yes,\" the magician said, the tone of his voice mimicking the hiss of whatever liquid I had just ejected. \"Again, slut. Do it again.\"\n\nI did. Because he told me to, I tried to believe. But not for long. Soon I moaned my delight, and my tortured agony for being so delighted. I lost myself in it all, the grinding, the moaning, the sweating, the panting, the absolute savage passion. How many times did my body convulse, I cannot say; I only know that it would have continued doing so had not his own climax arrived. \n\nOf course, I didn't know what it was at first. All I knew was his hand left my shoulder and wrapped itself in my tresses. He pulled my head back and my body with it. His other hand left my loins and shot under my bosom to grasp my shoulder from beneath. His sweaty chest met my back. The hot acrid scent of his manliness swept over my face. \n\nOur skins slid along one another as his body shuddered, then tensed. Within my channel, his already engorged member swelled, then made one final push, rutting the ridges of his crown within my core. A groan escaped his lips in the same moment the first tangible portion of his lust escaped his cock.",
        "His fingers tensed then relaxed only to tense again, the tips biting into the flesh of my shoulder in a pattern that matched his belabored grunts. Some dozen or so seconds later his body relaxed, beginning with a long, slow exhale near my ear. \n\n\"How was it?\" he managed to gasp.\n\n\"Awful,\" I said at once, knowing the word had several meanings.\n\n\"You wait,\" he said with a subtle snicker. \"Within a fortnight, you will beg for the pleasure of my cock between your legs.\"\n\n\"May I beg for something else just now?\"\n\n\"What?\"\n\n\"I need to pee.\"\n\n\"You might,\" he said, rolling from atop me. \"Though I doubt it. Hurry up, regardless. Then come back to bed like a good little wife.\"\n\nAnxious for even a moment to myself, I leapt from the mattress and rushed into the washroom, closing the door behind me. My hand sought and found the light switch. A glare burst across the room. With a gasp, I stopped. There in the mirror was Christine's naked body; her consummate round breasts capped by perfect brown disks; her taut rippled abdomen. Her face looked right back at me with that dainty princess nose, those movie-star cheekbones, lush lips; rich blue eyes; and hair the color of the sun flowing over her shoulders in curls. She was beautiful, everything I'd always wanted my body to be. And now that it was my body, I hated it.\n\n* * *\n\nConsciousness returned to me in bitter morsels the next morning, each one bringing an unwelcome memory of the day before. Unwilling to wake up and face reality, I tried to roll over and resume the bliss of slumber, and renew the hope that it was all but a bad dream. \n\nWhen at last I did open my eyes, one scan about the room confirmed my memories did not come from a nightmare. Feeling my captor's body next to mine, I closed my eyes and cursed myself, for having taken pleasure of own ravishment, and for having slept so soundly afterward. That he had left me no choice in either matter did little to abate my self-loathing.\n\nI pried myself from beneath his arm and slid from the bed linen, then headed for the washroom. At the threshold, my foot refused to move forward, as if gravity had somehow turned sideways to pull at me from behind. At once, my words from the previous night rushed to the forefront of my psyche.\n\n\"I will not leave the apartment or the theater or your sight without permission.\" \n\nWith a sigh I looked over my shoulder. Giancarlo lay in the bed amidst the sheets, his arm still draped across the bed where I had been, his eyes closed.\n\nHis eyes are closed! I reasoned. I'm not in his sight, therefore I can't leave it.\n\nWith that simple thought, I eased my toe forward, then my foot. A second later I sprang into the washroom wearing a broad smile. What else did I promise? \n\nBefore I had even settled onto the toilet seat the first of my own words echoed through my head exactly as I had said them.\n\n\"I won't touch the necklace.\"\n\nMy fingers rushed for the necklace, but never made it. He wouldn't make that rule number one if it wasn't important. I concluded. I tried to sneak up on the necklace, to think of other things, but nothing worked. My shoulders sank in the seconds that followed; I could find no way to circumvent the rule.\n\nI emerged from the washroom more dejected than I had entered. Looking to the bedroom, I saw him still asleep, his eyes still closed. I turned and walked down the corridor as if on eggshells, wondering which would be the step I could not take. \n\nThis I found at the door. I could open it, but I could only look at the newspaper in corridor beyond. Standing there, inches from what appeared to be freedom, the urge to scream, \"Help!\" beckoned, but words came to my brain rather than my tongue.\n\n\"I won't communicate with anyone without permission.\"\n\nI sighed and shook my head. Maybe I can just stand here naked until someone wanders by. At that thought, my hand pushed the door closed. I turned my wide eyes to where my closed fist refused to return to the handle. Yes, I admitted with another sigh, Standing there naked would be communicating.\n\nI shook my head and wandered back into the parlor. There I looked into the mirror over the sofa, once again admiring and abhorring my new body. I looked at my fingers as they petted, then pinched my nipples, remembering how the man's hands had felt upon my breasts the evening before. \n\nIs he really controlling what I like and dislike? I wondered. Am I even still me? My mind flew back, to where Megan lived. I remembered her; being her. Yes, I decided. No matter this body, I am still me.\n\nAs if to expel any notion I might not still be Megan, I gave my head a firm shake and looked away from the image in the mirror. My eyes landed on the bookshelf and I began perusing the titles. The Scarlet Letter, The Dubliners, Moby Dick.\n\nThe list went on, all classics, all with weathered, faded covers, until my focus landed on a bright new tome at the end of the first shelf, Sexual Behavior in the Human Female.\n\nWith a gasp, my eyes widened. I never knew there were such books. I extended my fingers, only to withdraw them again. What are you afraid of? I asked myself. You've been fucked. You may as well learn why you liked it.\n\nI reached again, but a low moan down the corridor drew my attention. Except for my spinning head, my body froze. Stupid! I scolded myself. If he catches you out of his sight, he'll fix the rule!\n\nOn my toes I scurried down the corridor to the foot of the bed just in time to see Gino open his eyes.\n\nHe smiled at once. \"And what have you been up to?\"\n\n\"Just waiting for you to wake up.\" My eyes pulsed once as I realized I had uttered a half-truth at best. Hadn't he told me not to lie? \n\n\"You must stay in bed like a good little wife,\" he said.\n\nI nodded, hoping he wouldn't make me say it, then sought an additional distraction. \"I need to pee.\" My eyes swelled as I recognized this statement was one hundred percent false.\n\nGino laughed. \"Looks like you do. Better go ahead.\"\n\n\"Thanks.\" I sprang for the washroom, shutting the door behind me.\n\n\"No!\" he bellowed. \"We are married. You don't close the door.\"\n\nFor an instant I tried to disobey, but my hand would have none of it. With the door open, I retreated to the john and pretended to urinate. All the while my mind churned. I can't close the door, but I can lie. Why? Is there a time limit... \n\nGino entered the tiny room, interrupting my thoughts. My thighs pinched together at once, but a second later I persuaded them to relax. Not like you have anything to be modest about.\n\nWith a swallow, I brought my gaze back to my captor and got my first eyeful of a man. Seeking a flaw, my eyes roamed his flesh, from his broad shoulders down his muscled back to the trim tightness of his ass, onward to his lean and rippled legs. I sighed. There was no imperfection to be found. My lips formed a pout as I loathed myself for continuing to admire his physique.\n\nGino moved the door just enough to reach behind it and grab a robe. \"Yours is the other one,\" he noted.\n\n\"Thank you,\" I said with a nod.\n\n\"Did I tell you about that room?\" he asked, pointing beyond the washroom to the closed door across the hallway.\n\n\"No.\" I said with a shake of my head.\n\n\"You won't even open that door, let alone go into the room. Say it.\"\n\n\"I will not open the door or go into that room.\"\n\nHe smiled and donned the housecoat. \"What do you know how to cook?\"\n\n\"Nothing.\"\n\n\"Nothing? You've never helped your mother cook?\"\n\n\"Yes,\" I said. \"I've just never cooked anything myself.\"\n\n\"Time to start learning. There's more to being a good wife than just being a slut. Bacon and eggs. Over medium. With toast. Make some for yourself too, if you're hungry. And coffee. Make the coffee first tomorrow, before you pee.\"\n\nFifteen minutes later Gino ate his breakfast in silence, his hand appearing once in a while from behind the spread newspaper to snag a bite or a sip of his coffee. I also said nothing, spending most of the meal wondering why I had hoped he might have something nice to say about my cooking. When he did speak, it had nothing to do with food.\n\n\"Go. Draw a bath for me. Warm but not hot. We've just enough time to bathe before rehearsal.\"\n\nI discovered that a bath constituted me kneeling beside the tub and scrubbing him. In spite of my desire to look anywhere else, my eyes kept finding their way back to his shrunken member. It looked so different than I expected, rather like a fat little earthworm peeking from within a black hedge. Every time I caught my eyes lingering upon his cock, my attention leapt to his face. Each time, he was looking back, smiling.\n\n\"Go ahead,\" he said at last. \"You can touch it if you want to.\"\n\nDamn him! I did want to. It angered me more that he wouldn't order me to touch it. Of course, I reasoned, if I refuse, he'll just tell me to do it anyway, no point in angering him.\n\nWith a swallow, I extended my open hand and petted him with my fingertips. \n\n\"Go ahead,\" he said with a chuckle. \"Give it a good squeeze. You won't hurt it.\"\n\nFolding my fingers into a fist, I did just that. He felt rather like a worm too, soft and rubbery, but he didn't stay that way long. Within seconds, he began to swell, hardening within my grasp.\n\nI'd never seen one hard before, of course. My eyes roamed the length of his brown, rippled shaft as he grew. He was larger than I had expected. That was in me? I marveled. My nether lips twitched as I recalled the feel of him there, between my legs, pounding. I realized I had begun to smile. Pursing my lips, I looked to his face. \n\n\"We don't have time for that,\" he said through a grin. \"For now, go ahead and wash him, then you can have the bath.\"\n\nWithout another thought, I obeyed. By the time I had finished, his cock was a rigid pole lying against his belly. Trying to be subtle, I measured him against my hand, then held my palm up, imagining his length within me. I felt a subtle warming in my loins, and had to admit, to my added disquiet, that I did want to do more than wash it.\n\n* * * \n\nAn hour later we were in the dressing room of Gino's modest theater.\n\n\"This is your costume for the first act,\" he said, pointing toward two pieces of white fabric hanging upon the wall amid a half-dozen other outfits. \"Go ahead, put it on.\"\n\nI waited for a few seconds, then my chest shuddered with my subtle laugh. Why did you expect him to leave? Doing my best to ignore the unwelcome audience, I removed my blouse and skirt, then plucked up one of the sections of the sequined garment from the hook.\n\n\"No,\" Gino said. \"It's like a swimsuit. Nothing underneath.\"\n\nWith a nod and a sigh, I sent my arms behind my back to the clasps of my bra. Seconds later, I stepped from my panties, my heart heavy in my chest with the realization I wasn't even embarrassed to have his eyes upon my form. That I wasn't yet willing to admit it was my form did little to ease my guilt. Determined not to look at him, I turned my own eyes to the mirror and pulled the taut costume over my equally taut form. \n\nA minute later I puffed out my chest and smoothed the elastic beneath my bosom, then ran my fingertips over my exposed tummy before doing the same with the snug seam at my waist.\n\n\"It is a nice body,\" Gino said. \"Too bad you don't get to keep it. Don't worry though, I'm sure I'll easily be able to find you something better than Megan's\"\n\nI cut my narrowed eyes his way.\n\nThe magician smiled through a chuckle, which only served to drive my eyelids a shade tighter. \"This is the middle piece,\" he said, reaching behind me for the red section of fabric. \"Stand up straight.\"\n\nThis I did, holding my breath as he tucked the third section of the costume between and then beneath the other two, thus concealing my abdomen \"Elastic is all that holds it in place,\" he noted. \"The tassels hide the seams. You must be sure and straighten it before going on to stage.\"\n\nWith a sigh, I nodded my understanding.\n\n\"Good,\" he said, pointing to the floor beneath the counter. \"Shoes too.\"\n\nI had squeezed my feet into the pair of slippers, then looked up to find Gino standing before me with a set of wires dangling from one hand. The cables reminded me of the sort one uses to start a car with a dead battery, except they were miniature, maybe a foot long overall with clamps smaller than tweezers.\n\nMy lower lip hanging limp, I kinked my head to one side and looked to the magician's face.\n\n\"One foot on the counter,\" he demanded.\n\nStretching my leg, I placed my sole at the edge of the countertop. I was still marveling at the limberness of Christine's form when, without a word, Gino knelt and grasped the strip of fabric at the lowest point in my costume, the part that covered my sex.\n\nI gasped, then tensed, turning my gaze downward as he pulled the cloth toward one of my thighs.\n\nHe looked up at me with a wry grin. \"Do you know what this is?\" I'd barely time to absorb his question before his fingers first found, then rubbed, the delicate nub hidden at the apex of my folds. An instant later, I jerked away from the unwelcome ticklish sensation.\n\nHis smile only broadened. \"That's your clit. Sensitive, no? Don't move again.\"\n\nIn spite of my desires my body remained rigid as his fingers returned to my sex, tickling me again. Within seconds, the severity of the sensations drove me to the point of tears. \n\n\"Please stop,\" I begged.\n\n\"As you wish. But don't move.\" Still holding the fabric of my costume so as to expose me, he brought his other hand, the one with the wires, upward.\n\nMy eyes had but a moment to widen before I felt the cold of metal clasp the flesh of my tender button. My body tensed with the shock and I emitted a whimper.\n\n\"Another one,\" he said and I felt the chilly pinch of a second clamp upon my sex, this one lower on my lips.\n\nLeaving one hand on my loins, the magician stood and slid behind me. His other palm found my horizontal thigh. I had but a moment to imagine his intent before he lifted me and thrust my exposed sex toward the mirror. His fingers shifted to my lips and pulled them apart. \"See how you attach the wires?\"\n\nWith a gulp, my wide eyes fell to my splayed folds. I'd never before had such a view. My eyes roamed the glistening pink of her sparsely furred lips. My sparsely furred lips, I conceded with a gulp. \n\n\"Do you see where the clamps go?\" Gino asked again, his voice deeper and louder.\n\nMy eyes jumped to his reflection. \"Yes,\" I said with a bob of my head.\n\n\"Good.\" He dropped me to the floor. \"Now tuck the other end between your ass cheeks and follow me.\"\n\nI suppose I should have been alarmed, but at least some part of me was still naive and he had not as yet caused me pain. Blissfully unaware that was about to change, I pushed the balance of the wires beyond my sex and in between my buttocks before scurrying along after him.\n\n\"Steeplechase is closing for the season today,\" Gino explained as he walked. \"That'll cut down the crowds, so this will be our last performance on a Sunday. After this, we'll only have two performances per week on Saturday; you can spend the rest of your time learning to be a good wife.\" He stopped at one of the two halves of the sawing box. \"We'll start with this on stage. I'll push, you steer.\"\n\nThus the two of us pushed the props for the first act between the curtains and onto the stage. \n\n\"Stay here,\" said Gino. \"I forgot the lights.\"\n\nWith his footsteps echoing in the quiet of the auditorium, he strode back toward the curtains. The instant he disappeared, I turned to look over the two pieces of the box. \n\nThe torso section was essentially empty, with but a few wires, a small red bottle, and the three holes for my head and arms. The foot portion was packed with a dozen automotive batteries, a motor and a pair of fake feet with slippers that matched those on my feet. On the sides of the box that would be away from the audience I found on each section what looked like a light switch and, adjacent to where the box sections would join, a short electrical cable.\n\nI had just put my fingers to the wires when I heard a click. An instant later a blinding glare illuminated the stage. Thinking I had touched something I should not have, I jumped back. Then I sighed through a smile, remembering why Gino had gone backstage.\n\nStepping forward, I again picked up the ends of the wires and saw how they would plug into one another much like an extension chord. I followed the cables into the portion of the box where I would be. Looking inside I saw the ends of the power lines ran toward a pair of tiny metal screws, one to each side of the red bottle next to where my ass would be.\n\n\"It really is a bottle of ketchup,\" I muttered. My eyes drifted again to the cables. All thoughts of condiments evaporated. My mind and hand both rushed to my ass cheeks and the wires tucked therein. I gasped and spun, hoping against hope the magician was nowhere in sight, but I was not in luck; my gaze landed less than a dozen paces distant on his dark eyes.\n\nAn even darker grin spread across his lips while he covered the remaining few steps between us. \"Figured it out, did you? You're smarter than most. Pity. I'll have to remember to get the lights first next time.\"\n\n\"Please...\"\n\n\"Get in!\"\n\n\"No,\" I begged even as my leg lifted. \"Please. I'll...\"\n\n\"Shut up and get in.\"\n\nI did as instructed, climbing to sit in the box. My eyes darted to the two metal screws at my feet then back to the face of my captor.\n\n\"Now,\" the magician continued. \"All you have to do is lie down and pull your knees up, then put your head and arms out the holes.\"\n\nWith a gulp, I did just that. \n\nThe instant I was in position, I felt his hand again on my loins, pulling aside the fabric and fishing the wire from between my ass cheeks. Though convinced I knew the answer, I still tried to ask what he meant do, yet I could not stir my tongue to speak.\n\n\"Your legs need to go towards your sides, like this.\" He adjusted my position with a pressure to each knee. \"That way I can close the top.\"\n\nHe dropped the lid, then leaned. The tendons of my hip and upper legs squealed in protest, but all I could utter was a slight grunt.\n\nGino's head appeared above the edge of the box. \"Oh, did that hurt? Well, I promise it won't in a second.\" He paused to bounce his eyebrows and issue a broad, closed-lip grin. \"Electricity's so much better than the old ways. If one does it right, there's no marks. During the performance I will say, 'Wiggle your feet,' but, of course you don't need to since the feet are mechanical. That's why we need to make sure everyone is looking at your face. Now close your mouth and put your teeth together. We don't want you biting your tongue.\"\n\nHis face disappeared. Even knowing it would fall upon deaf ears, I attempted to beg one final time, but even this I could not do. Instead I closed my mouth and set my teeth against one another. Surrendering hope, I closed my eyes and awaited the inevitable.\n\n\"Wiggle your feet.\"\n\nI heard a click. Then a whirring. Then another click. An abominable tickling fire poured into my being through the most sensitive route imaginable. My entire body quaked all the way to my fingertips. Tears poured from my eyes. My mouth flew wide. A wail emerged. \n\n\"Quiet, Christine. You're frightening the children.\"\n\nMy lament ceased, but only because he had ordered it. I still wept. My body still shuddered. \"Please,\" I whispered.\n\n\"No,\" he said. \"Don't you remember the performance? You will say, 'But it hurts.' \"\n\n\"But it hurts!\"\n\n\"I know Christine,\" he replied. \"I am sawing you in half. Try and bear it like a trouper. \"\n\n\"It's not funny,\" I whined. \"It really does hurt.\"",
        "\"I know, but you'll shut up just the same when I say so. Be sure and turn your face to the audience. We can't have them looking at your feet.\"\n\nWith my lips pressed into a line, I turned to look toward the empty seats. My eyes landed where my family had sat so recently. Was I there only last night; Mom, Dad, Sarah and me, right there? The pain was such that I could not even answer my own question. I tried to turn my gaze to the heavens and perhaps ask why God had allowed this to come to pass, but even this I could not do. Constrained by Gino's words, I could but look at the rows of benches, suffer, and weep.\n\nThree hours later, I endured it all again, my agony magnified by the presence of a crowd that found it all so amusing. After the torture of the box, having Gino throw knives at me was a blessing of sorts. I found myself praying he would miss the balloons that surrounded my body and thus end my misery but, just as in the rehearsal, the blades flew true, curving to find their target no matter what direction he tossed them.\n\nAfter we took our bows, I had some hope we might just go home, but I soon discovered whose job it was to clean the peanuts and other assorted refuse left on the floor by discourteous patrons. \n\n\"Good job,\" the magician said when we at last we slid between the curtains. \"You deserve a little reward.\"\n\nI closed my eyes and sighed. \"I don't suppose it's a Hershey bar?\"\n\nGino issued that subtle chuckle, the one I was already sick of. \"We can get you one of those too, but for now to the dressing room. Take off your costume and prop one leg up on the counter just like before.\"\n\nMy feet started carrying me toward the dressing room. \"Aren't you worried I'll get pregnant?\" I protested over my shoulder. \"I won't be able to fit in the box.\"\n\nThe magician's chuckle turned into a laugh. \"Those ovaries exhausted their egg supply long ago.\"\n\nMy brow fell. \"What?\"\n\n\"Better quit asking questions and ... \"\n\nMy lungs emptied with a grunt as I walked into the edge of the dressing room door. Staggering back a step, I shook my head and clutched my shoulder.\n\n\"... and watch where you are going,\" Gino continued in a tone that reminded me all too much of my father's sarcasm. \"A good wife doesn't ask so many questions. Now shut up and do what I said.\"\n\nUnder his leering eyes, I disrobed in silence. Once naked, I put one foot on the floor, the other and both hands on the counter top. Wearing that same sickening smirk, Gino dropped his trousers and moved behind me. I could only stare at the red eyes and pouty lips of my reflection while the magician stroked the rubbery head of his cock over my moistening sex. I closed my eyes and awaited his penetration, almost hoping it would hurt; but it didn't even though he plowed the length of his member into me with but a single thrust.\n\nMy eyes snapped open. I grunted, then looked into my wanton eyes while I savored the fullness of having him inside. Grasping my shoulder, he began to fuck me in earnest, long, powerful strokes; nothing gentle about it. I watched as my eyes widened in time with his thrusts. Beads of sweat broke out on my forehead. I told myself it was heat from the light bulbs surrounding the mirror, but I knew better. Soon, my breathing came in bursts, my chest matching the bulging of my eyes and the movement of his cock within me.\n\nGino moved his lips near my ear. My eyes shifted from my face to his. His right hand left my shoulder, snaking under my arm to find my bosom. His groping was like his fucking- hard, urgent, primal. The warmth of his breath reached my ear a moment before his words.\n\n\"Repeat after me, slut. I will not masturbate without permission.\"\n\nI wasn't sure what the word meant, but I repeated the sentence just the same. \n\n\"Go ahead,\" Gino whispered. \"I give you permission when I'm fucking you. Touch yourself. You know where.\"\n\nMy hand slid across his groping fingers and over my tummy, then down to the apex of my crease. There, my fingers turned slow circles in my supple flesh. At once, my abused clit responded to their caress, sending tendrils of warmth coursing through my loins, and beyond. Breaths exited my nose in labored bursts. The muscles of my ass began to flex in a rhythm that matched the movement of my fingers. Soon all of my body quaked and relaxed in time with my fucking. \n\nI swallowed as I recognized the hot tingling spreading within me, more powerful than any electrical current. If I'm going to be tortured, I reasoned, I may as well enjoy what I can. And I did.\n\nAn hour later I sat on the davenport and devoured the chocolate bar Gino had purchased for me on the way home. Home. I shook my head, loathing myself for thinking in those terms though one glance at my surroundings confirmed it was simply the truth. \n\nI stopped eating and glanced to my body. It's you now, I admitted with a sigh. Your body. Your life. You better learn to make the best of it. My chest rose and fell through a second, larger sigh. \n\nMy eyes again found the Hershey bar. Him giving it to you doesn't make it taste bad, does it? I took another bite, confirming that it did not. Maybe his cock is just like the candy, I reasoned. Yes! It's just like that, a gift; separate from him. My eyes widened. The ends of my lips curved upward. It's ok to enjoy it. You can like his gift and still hate him.\n\nStill sporting a broad grin, I moved my mouth back toward my chocolate treat.\n\n* * * * * \n\nOver the following few weeks my life continued in a surreal fashion, me serving my husband's needs in both the classic ways, in the kitchen and the bedroom. Except it was often not the bedroom. He fucked me in every room of the apartment, save the one I was not allowed to enter. But that was in the evening. Except when we had a performance, he left me alone during the day.\n\nI cooked and swept and scrubbed, but even after I had cleaned everything twice, I still had too much time on my hands. Finding I could still not open the front door nor go upon the balcony, I but stood and looked out the windows of the French doors. Hours I must have spent staring at the distant waves, wondering what Christine was doing in my body, and what my parents might be thinking of her strange behavior.\n\nMy new body exhibited some strange behavior of its own. My loins seemed always to be tingling, like a simmering fire waiting to be stoked. This stoking I did often with my own fingers, discovering I did not need a man to take myself into the realm of quaking pleasures, as I had come to think of it.\n\nAt the beginning of the second week, I made what I thought at the time to be a mistake. After several days, I forced myself to do something that seemed productive; read. One book beckoned above all others and I finished the massive tome on sex in but three days.\n\nI had hoped to learn why my body responded to his touch in the manner it did, but much of the text focused instead on demographics and social norms. What I learned mostly was that I wasn't alone amongst women in my lust for the feel of a man upon me and within me. Far from it, my desires were common, shared by most. Society may have told us we weren't supposed to like it as men did, but our bodies knew better. \n\nTo my chagrin, I also learned in no uncertain terms what masturbation was, and in that instant, my own words bound me. After that, I could no longer satisfy my wants with my fingers; I had to wait for my husband's return. Soon my heart raced and my sex warmed at the sound of the door handle in the evening. I loved the way he served my carnal hunger. And I hated him for making me love it.\n\nAfter finishing the book on sex, I continued reading the classics, and also the newspaper. The latter garnered most of my attention, but even the death of James Dean and the Dodgers victory over the Yankees could not eclipse a tiny article Gino found one Friday morning.\n\n\"Look at this,\" he said, sliding the folded newspaper across the breakfast table.\n\nMy eyes fell to where his finger tapped an article. My brow dropped with my heart as I read of the upcoming nuptials of Megan O'Reilly and Thomas Collard.\n\n\"I like how she's already dyed her hair for him,\" Gino added. \"Although, I confess I did like her pigtails the way they were. Rather cute and innocent, but I guess that wouldn't be appropriate any longer, would it?\"\n\nI barely heard him. It was the date, not the color of the girl's hair that had caught my eye. \"November eighth,\" I muttered. \"That's barely a month.\"\n\n\"Yes. Thirty-two days to be exact. Our dear Megan is moving fast. I like how the announcement doesn't come from Megan's parents.\"\n\nMy mind flew to my family. \"I'm sure my father is appalled. I bet he won't even give me away.\"\n\nGino chuckled. \"Interesting, that. A century ago, most fathers would have been thrilled to have their daughter marry a successful businessman.\" He paused for a lengthy, sarcastic sigh. \"Ah, the good old days.\"\n\nMy eyes dropped to the picture beside the article, the picture of me and an old man, both smiling. I looked away, my thoughts going to my family. A tear crept out, and down my cheek.\n\n\"Now, now,\" Gino chortled. \"You needn't be unhappy. I asked Thomas not to wed on a Saturday. I knew you wouldn't want to miss the happy occasion.\"\n\nWith a gasp, my mouth fell open. \"I don't want to go.\"\n\nHe smiled. \"Sure you do. It'll be good for you; help set things straight in your mind. Tell you what. Don't make dinner tonight. Put on that red sweater and the tan skirt. A little makeup too. We'll go someplace nice and celebrate.\"\n\nMy lips set into a line. There was only one thing I needed to get straight in my mind; I was still Megan, no matter where he took me, no matter what he made me say or do.\n\n\"I know what you need.\" He stood, and loosened the sash of his robe. \"Lean over the table.\"\n\nTen minutes later, when his body stiffened and he spent himself within me, I found a wry, satisfied grin on my face. For the first time, I hadn't enjoyed it.\n\n* * *\n\nThat evening, 'someplace nice' turned out to be a Chinese restaurant in Flatbush. Though it was pleasant enough and was a welcome change from sweating in the kitchen, I had been expecting something more.\n\nAfterward, Gino and I strolled hand in hand along the sidewalks in the cool of an early autumn evening. In spite of being so obviously accompanied, almost every man I passed gave me a look. I knew it didn't help that Gino had insisted I don one of those sweaters like movie vixens wore. Some men but cast a glance until my eyes met theirs; others downright gawked. I confess I found the first few ogles a thrill; guys had never looked at me before. Soon though, the attention grew tiresome, even a bit scary. I knew what they wanted, and it wasn't me. \n\nWith my eyes fluttering to the concrete, my mind rushed to the only boy who'd ever looked at me, Ricky. He'd always looked me in the face and smiled. My eyes moistened. He liked me. I knew he did. He had to. I clamped my eyelids closed and I started to ask for his forgiveness, that I hadn't saved myself for him. Then I realized he couldn't forgive me. He didn't even know. I opened my now-clouded eyes. All Ricky would ever know was that Megan had married some old man. \n\nUnless I find a way to stop it! My teeth found my lower lip. Yes, I determined with a puissant breath. I won't give up.\n\n\"Wind the clock,\" Gino instructed later as we settled into bed. \"And set the alarm for eight.\"\n\nI rolled toward the bed stand and extended my hand toward the clock. \"Eight?\"\n\n\"Yes,\" he replied. \"No more sleeping late. It's time for the next stages of your instruction.\" \n\nI picked up the clock and began winding the spring. Me eyes wandered. Though I hadn't enjoyed my earlier fuck, I still found my body craving his touch. My touch would have done just as well, but this was now forbidden. Beneath the sheets, my loins clenched their want. I slid my fingers down, but they only got to my navel. \n\nPassing a sigh through clenched teeth, I rolled and sent my hand to the genitals I was allowed to touch, his.\n\nGino grunted. His hand found mine and shoved it back to my side of the bed. \"That's a nice enough way for a wife to ask,\" he said, \"but not tonight. I've something special in mind for tomorrow and the waiting will make it all the better.\"\n\nI swallowed and opened my mouth to ask, but in that moment, he continued, \"I grew up when women didn't wear makeup, so I often forget how contemporary men like it. After you get dinner in the oven tomorrow, put some makeup on and some nice clothes too, just like you wore tonight. It's time you learned how a good wife greets her husband when he gets home from a long day's work. Now shut up and go to sleep.\"\n\nWith that, he rolled over, leaving me with but the ticking clock and my own anxieties for company.\n\n* * * \n\nAs instructed, I wore a blouse, skirt, and makeup when my husband arrived home the following evening.\n\n\"Good,\" Gino noted. \"Except you must meet your husband at the door. Let him know you were waiting for him. That makes a man feel important.\"\n\nI nodded, and walked toward the door.\n\n\"And say,\" he continued, \"something like, 'Welcome home, can I do anything to ease your tension?' \"\n\n\"Welcome home. Can I ...\"\n\n\"Wait,\" Gino interrupted. \"When you're saying it, lick you lips and look to my cock. Let me know just how you intend to relieve my tension.\"\n\nWith a swallow, I nodded, then spoke the words, licking my lips and looking to his loins.\n\n\"Very good,\" he said. \"Your husband will almost always agree. Then you come forward and snuggle your body to his, then rub your palm along his cock and ask him what he wants. Do it.\"\n\nI stepped toward him, then leaned my body unto his. Between our forms, I brought my hand to his member. He was already hard, and my own loins warmed and clenched their want in response to his. \n\nI forced my eyes to his. \"What did you have in mind?\"\n\n\"A blowjob would be nice.\"\n\nMy head fell to one side.\n\n\"You don't know what that is?\" he asked.\n\nMy mind reviewed what I could recall from the sex tome. Unable to recall the term, I shook my head.\n\n\"Good. It's always better that way.\" He strode past me to the davenport and unfastened his belt. Thinking to undress as well, I reached for the buttons of my blouse, but he stopped me. \"You don't need to take anything off. Just get on your knees.\"\n\nAt once I leaned forward, coming to rest on my haunches. His hands moved to his belt and my eyes followed. My attention remained fixed on his fingers while he loosened his pants and freed his member. I inhaled a crisp breath the instant his rampant form sprang into view. \n\n\"Still have no idea what a blowjob is?\"\n\nThe question snapped me from my trance. I looked up to his face and shook my head.\n\nHe smiled. \"It's the best way to relieve your husband's stress. You'll do it often, maybe more than fucking. Come here, hold me in your hand.\"\n\nI sidled forward and extended my right hand. Forming a fist about his shaft, I squeezed. He was hard, much like a broom handle surrounded by a thin sponge, but also hot in the way only a living thing can be. I squeezed harder and moved my fist, feeling the skin slide over his shaft within my grip.\n\n\"Nice,\" he whispered. \"You are quite the little slut already. Now, lick the side toward you, right along the bulge, all the way from my balls to the head.\"\n\nMy face contorted. My lower lip fell. Surely he can't mean... His acrid flavor assaulted my tongue. My eyes widened. I had already started! \n\n\"Yes,\" he said. \"That's right. All the way to the top. Run your tongue all over the head, especially lick the hole, then do it again.\"\n\nLick the hole! That's where he pees! Before I had time to be revolted, my tongue was already there, exploring the tiny slit. I did it, over and over, licking him up and down, his shaft growing harder and hotter with each pass of my tongue. In spite of everything I thought I ought to feel, there was something enticing about feeling his want of me grow thus.\n\nSoon his hips began to move upon the cushions. \"Good,\" he whispered. \"Now give me a nice slutty moan when you taste my salt.\"\n\nTaste his salt? I barely had time to wonder what he meant before my tongue encountered a saline droplet at the apex of his crown. A moan resonated within my throat. Below, my stomach clenched its revulsion.\n\n\"Good, little slut,\" he said. \"Now go ahead, take my head between your lips.\"\n\nBefore I could even think, I had done it. His thing was in my mouth! \n\n\"Yes,\" he hissed. \"Just pinch the head with your lips.\"\n\nI obeyed, clamping my lips about his rubbery crown and massaging it. Yet more of his flavor seeped into my mouth.\n\n\"Lick the end,\" he said. \"Get used to the feel of a man in your mouth.\" \n\nMy tongue roamed the smoothness of his head, pushing at his supple skin, teasing his aperture, sampling the fluid it produced. Soon I found a smooth spot just below his cleft, one that induced both moans from him and additional seepage from his aperture. \n\n\"Good, slut,\" he whispered. \"You are learning things you will never forget. That's the beauty of the human mind. You'll remember how to suck cock long after you've forgotten all about fat little Megan. Now, take more of me in your mouth. Slide your lips back and forth over me just like your mouth was a cunt.\"\n\nI complied, of course.\n\nHe inhaled a crisp breath through his teeth, then continued, \"Use your tongue too. Lick all over the end, and underneath. Oh! And watch your teeth. Cover your uppers with your lip and keep your tongue over the lowers.\"\n\nThis I did, moving my mouth back and forth over several inches of his length. My tongue explored the bulge of his head, the folds of his foreskin, the smooth underside, all of it hot with his want of me. \n\n\"Don't forget your hand. Squeeze me a bit. Move it in time with your mouth. And keep looking at me, just like that.\"\n\nI barely had time to comply before he dispensed additional instruction. \"It's called cocksucking for a reason. Start sucking on it as you pull your mouth back. Let me see your cheeks flexing in and out.\"\n\nAt once, I started drawing on the outstroke. What had been but a seepage became a steady flow. But seconds later I could taste nothing other than his subtle saltiness.\n\n\"Oh yeah,\" he said. \"I can tell you're already going to be a great cocksucker. Keep it up. Just like that.\"\n\nHearing his praise, I felt my chest swell with a breath of pride. At once I hated myself for it. What is he doing to me? I wondered. I can't like this too! \n\nBut I did. The subtle flavor of him touched something in my soul. The heat of him within my mouth stirred a similar heat within my own loins. Before I knew it, my hips were moving, undulating. My free hand fell to linger just below where I longed to put my fingers.\n\nI looked up, hoping he would grant me permission to touch myself. Instead, one of his hands found my head. He wrapped his fingers in my hair and pulled, urging me to take more of him into my mouth. \"I'm ready. Suck it harder. Faster.\"\n\nI had no clue what being ready meant, but I did his bidding just the same, increasing the tempo and force of my suckling. His hips soon joined his hand in motion, compelling my mouth to accept yet more of him.\n\n\"Oh, yeah,\" he gasped. The force from his grip within my hair increased. His ass slid back and forth on the sofa, taking his cock with it, compelling me to follow. \"Keep sucking. Here it comes. Lick the bottom as I'm coming, but as soon as you taste my seed, the rest of your mouth must remain still. Keep all of it in your mouth; don't swallow or spill any.\"\n\nSeed? I wondered. What's that? \n\nMy answer came in the form of a wad of goo deposited upon the length of my tongue. Unlike his previous subtle flavor, this was a sharp, sour, pungency; a taste that was no way appealing. My impulse was to gag, to spit, but my body obeyed his orders instead of my instincts. ",
        "Following my instructions, my mouth froze, surrounding his girth. I licked the bottom. Along my tongue I felt a pulse traverse the length of him. My eyes widened with my cheeks as pulse after pulse traveled the length of his shaft, depositing load after load within my mouth. \n\nA dozen such pulses later Gino's fingers relaxed within my hair. He began combing my locks, almost petting my scalp in the process. \"That's a good little slut. Slide your lips off my cock now, but keep them tight, don't lose any.\"\n\nI drew my lips along his length until his crown slipped from within my mouth. Several inches of filament stretched like a spider web before me, from my lips all the way back to the head of his glistening member. My wide-eyed gaze remained on this strand until I pulled far enough away that it broke.\n\n\"How do you like your first mouthful of sperm?\"\n\nLooking up, I shook my head in the negative.\n\n\"Stand,\" Gino commanded. \"Arms crossed on the back of the couch. Look at yourself in the mirror with your ass out to me.\"\n\nThis I did, looking right into a pair of blue eyes framed by my smudged mascara, some of which had run down my puffed cheeks in black streams toward a mouth covered with smeared lipstick.\n\n\"Yes,\" Gino hissed. \"Want to know what's in there? Open up. Let's have a look.\"\n\nMy lips parted and my eyes leapt to milky-white between them.\n\n\"Yes,\" he whispered directly into my ear. My attention darted to his face as he continued, \"Now you know why I saved up for you, so I could give you a nice big mouthful your first time. Tastes good, doesn't it?\"\n\nTaste good? It was a putrid slime; like one part seawater, one part white school glue, and one part snot. I clamped my mouth closed and shook my head.\n\n\"Oh,\" he said, \"but sluts have to learn to like it, to want it. You keep it all in your mouth. Don't you dare swallow it until I tell you to.\"\n\nSwallow it? My stomach clenched again. My eyes bulged. I mumbled my protest.\n\nGino laughed. \"You're all the same. This time next week, you won't think a thing of it.\" I felt my skirt tossed upon my back. A moment later, his fingers pushed aside my panties and found my sex. My mind flew to my tightening loins as he first massaged, then parted my lips. Feeling my folds moisten under his touch, I wanted to close my eyes so as not to look at myself, but this was forbidden. I was compelled to watch my expression grow taut, then relax, as he pushed his longest finger within me. \n\nThough his digit did not fill me in the manner of his cock, I discovered size was less important than I had imagined. His finger turned swirls within my entryway, teasing me until my ass began to gyrate, mimicking his motion albeit in the opposite direction.\n\n\"That's right, slut?\" My eyes wanted to leap to his, but they could not, even as he continued. \"You're a good cocksucker. You earned a little treat. Why not enjoy yourself?\"\n\nI had only a moment to look to my mouth, my traitorous smiling mouth before he pushed his finger farther within, still turning slow circles with it. Tiny tinglings erupted in my loins, sending shivers through my tummy. My abdomen began to move too, clenching, writhing, turning.\n\n\"I told you I knew how to please this body,\" he bragged. \"The sooner you accept it, the happier you'll be.\"\n\nNever! My brain screamed, but my body had other ideas.\n\nHis finger ceased rotating and began to pet the forward wall of my channel. Meanwhile his thumb slid up the furrow between my lips, teasing the tender flesh until I felt myself pushing back against his pressure.\n\n\"Yes,\" he whispered. \"You're going to come for me again, just like you always do. This time, when you do, you get to eat your little treat.\" His thumb leapt to the apex of my lips, caressing the sensitive knot of flesh there. On the inside, his finger mimicked the motion.\n\nI emitted a chirp through still-curved and closed lips. My eyes widened as the sensation intensified. Then it hit me. Like an unstoppable wildfire, the tingling spread within me until my entire form shuddered. A second later, every muscle in my body contracted, from my forehead, to the cheeks of my ass, all the way to my curling toes. \n\nMy expression was one of agony, features taut, cheeks bulging, lips quivering, eyelids drawn wide over glazed orbs. The look lasted for several seconds, then collapsed along with the tension in my muscles. My eyelids dropped, my eyes fluttering behind them. My shaking knees bowed toward one another. With my eyes closed, I emitted an elongated moan as I savored the soul cleansing euphoria of my release.\n\nThe next instant my eyes flew as wide as my mouth. My empty mouth. I'd eaten his seed in my moment of rapture, just as he had told me to. Though the substance was gone, the flavor lingered, though it was not nearly so unpleasant as it had been only a minute before. I had but a moment to look at, and loathe, my reflection before Gino's fist found my hair.\n\n\"On your knees, slut,\" Gino demanded, yanking my head downward. I acquiesced, my knees finding the wood of the floor the same instant his next command found my ears.\n\n\"Rub my cock over your face.\" \n\nI closed my eyes and moved his member to my cheek, stroking it in the manner a cat does its owner's leg.\n\n\"Yes,\" he said. \"Just like that. Breathe deep. Smell it?\"\n\nI did smell him. Before I knew it I had put his sticky, semi-hard shaft across the bottom of my nose and took a deep breath. Subtle was his scent; sour, in an almost sickly way, yet in no way revolting. \n\n\"I can see it in your eyes,\" he hissed. \"You like that smell. Soon you'll be a perfect slut, salivating at the chance to suck cock. I bet you want to right now, don't you?\" \n\nI stopped rutting my cheek upon his hardening member. My eyes wide, I looked upward, but gave no answer.\n\n\"Go ahead,\" he said. \"You're a nasty slut now. You can suck it if you want to. You know how. But only if you want to.\"\n\nI could not deny there was something in his pungency I now found enticing, something seductive about the sticky feel of his seed upon my skin. Upon my tongue I detected a layer of my own saliva. Below, my warming lips clenched their approval. Oh, God, I am nasty! He's making me like this too.\n\nMy eyes blinked twice. I swallowed. Maybe he's right, maybe you should just give up; accept it, enjoy it. But a second later, I pushed my lips together in a purse. Never, I swore. He can make me enjoy it, but he'll have to; I won't enjoy it on my own!\"\n\nGino did not move; his black eyes bore down into my blue ones as he awaited my answer. \n\nMy throat flexed in a swallow. Beneath his steady gaze, my resolve wavered. He'll make you suck it anyway, I reasoned. You may as well do it on your own and pretend you like it. \n\nWith a nod to myself, I steered his shaft horizontal and slid my lips over the end. My tongue played again across his head, scouring a sample of his flavor, a taste I hated and loved all at the same time.\n\n* * *\n\nTwo blowjobs per day were the norm for the next few weeks; one first thing in the morning, another when he came home. More often than not, the nasty slut that I had become got a good fucking too, just before bed.\n\nIn between these moments of fervor, my routine was still a tedium of cooking and cleaning and praying for someone or something to stop the upcoming wedding. \n\nI did some additional reading too, from the sexual tome, paying particular attention to the references to oral sex, now that I knew it to be something other than kissing. To my surprise, many women had taken a man in their mouth, more than had not. \n\nFar more troubling were the references to anal play. When I had first read the book, I hadn't paid close attention to those sections either, assuming anal sex was simply being fucked from behind in the manner of dogs; something Gino had done to me the first night. With a gulp, I put two and two together and realized this was something else entirely. A moment later I felt my little butthole clench its concern. \n\nEven given that anxiety, I had a greater worry: would I really forget who I was? I pondered this question for a handful of days before I dared inquire about it over breakfast. \n\n\"What did you mean,\" I asked, \"when you said I'd remember how to give a blowjob even after I'd forgotten who I am?\"\n\nGino smiled. \"Eventually, you're going to forget all about Megan, her family. Everything. Even me. Much in the way Christine will start to remember.\"\n\nMy eyes widened.\n\n\"That's right. She's going to become you, except she'll remember her training, how to please her husband. My words will become part of who she is. It's already happening, I'm sure. That's how the magical stones work. The magic will seep out of the gems and into her. When it's done, she will be you. The person she was will be gone. Of course, then she can take the necklace off, but she probably won't.\"\n\nI swallowed. \"How long?\"\n\n\"Several months. Year at most. Some can resist it longer than others, but it will happen. \n\nMy mind wandered. Could I really forget all about Megan? My eyes bolted wide, realizing that I had thought of her as Megan instead of me. I turned my gaze back to my captor. \"What happened to the real Christine?\"\n\nHe chuckled. \"Which one?\"\n\nI looked down at my form. \"The one that belongs to this body?\"\n\n\"Oh. She's long dead now.\"\n\nMy brows dropped to hang over my eyes as I looked up. \"What?\"\n\nHis head bobbing in a slow nod, he looked at me. His own eyes narrowed as his head began to shake just a shade faster. \"You don't need to know just now. Better eat up. Eggs get cold so fast.\"\n\nHis words were still with me after he had departed for the day. Why is the original Christine dead? I wondered. Did she kill herself? Is that why he forbade my killing myself?\n\nWith my brow again low, my gaze wandered. Or did he? My words came back to me quicker than recalling the alphabet.\n\n\"I'm not going to hurt anyone else, especially you. I won't ask anyone else to do it either and I won't do anything I know will cause someone else harm.\"\n\nSomeone else! My eyes bolted wide. I rushed to the kitchen and grabbed my sharpest knife, then headed for the washroom. There I brought the edge of the blade to my left palm and drew it across the flesh near my thumb. At once I gasped, feeling the sting. I dropped the knife and looked upward.\n\n\"You can do it,\" I told my smiling reflection. \"You can beat him.\"\n\nI second later, I wasn't smiling. Would killing myself really solve anything? He'd just capture some other girl, I was sure. My shoulders fell as I concluded it would just doom another to take my place. \n\nMy eyes widened. \"You have to kill him,\" I whispered to my reflection. \"Him. Not yourself.\"\n\nMy shoulders and my spirit slumped again. Of course the necklace prevented that. The damned band of gems prevented everything. I wondered how many other girls had struggled to find a way free, only to fail and lose everything, including themselves, to the magic of the stones.\n\nMy mind drifted back to when I had allowed Christine to put it about my neck. In the mirror, I saw my lips part, exposing a mouthful of clenched teeth. My attention dropped, to the knife in the sink.\n\nA second later, the reflection showed the knife against the necklace. I moved the blade to the band, but found I could move it no farther; the prohibition against removing the necklace prevented my cutting it. My head fell to one side. \n\nMaybe I don't have to remove it, I thought. He said the magic was in the gems. What if I just break them?\n\nTrying not to think, I reversed the blade and whacked the stones with the handle. The necklace bounced beneath the blow. I blinked away my disbelief, and struck again. And again.\n\nMy eyes bulged. Could it be that simple? Why hadn't I thought of it sooner? I spun to look about me, certain I would find Gino there, ready to tell me never to do that again. My chest rose and fell with a sigh of relief. I was still alone.\n\nI looked back to the mirror, and the necklace. Would it work, damaging it without removing it? Could I break the magic thus? My eyes shifted upward from the diamonds to something brighter; my smile. \n\nI tried to use the knife to pry the gems from their settings, without the slightest hint of success. For the remainder of the morning, I was a whirlwind about the apartment, trying anything I could think of. With noon approaching, my glee faded. Nothing even scratched the gold, let alone the gems.\n\nSeveral times I looked to the room he had forbidden me to enter. Deep inside, I felt sure there was something just beyond the simple wooden panel, but my hand could not even touch the handle. My palm shifted to the wallpaper near the door. \n\nCan I break through the wall? I wondered. I knew it would be the greatest of risks, there would be no turning back. Instead of taking that risk, I chose to take care of my domestic duties while I considered my options.\n\nI soon had cause to regret my delay. The next morning, instead of disappearing through the front door, Gino vanished into the mysterious room. I heard behind the door strange chanting and often a hissing, like the sound of air leaving a balloon; and a smell, like rotten eggs. \n\nHe mentioned nothing of it when he emerged. After dinner, he left the apartment without so much as a word. \n\nNear midnight, I went to sleep without him.\n\n* * *\n\n\"Who said you could go to bed!\"\n\nMy eyelids snapped open, then fluttered in rapid succession, trying to somehow allow me to see and still keep out the light. \"I, uh, ...\"\n\n\"Nevermind!\" he snapped, taking a stride toward the side of the bed. \"I teach you where a good wife is supposed to be when her husband comes home, and where do I find you?\" With that he grabbed me by my hair and yanked my head to the edge of the mattress. His other hand reached for his belt. \n\nWith a sigh, I scooted forward and put my open mouth next to his loins.\n\n\"No,\" he said. \"You don't get the honor of sucking it tonight.\" \n\nInstead of giving a blowjob, I received a beating, one during which I was not even allowed to cry; some forty lashes on my bare ass I should think, though I didn't count. Whatever the number, it was enough that my butt cheeks were still sore the next morning. \n\nThe following evening, I was dressed and waiting when he came home. In spite of my compliance and my efforts, he was still cross with me, although this time the punishment was confined to a berating of my performance. \n\nThe next day was a Saturday, but we did not go to the theater. Again Gino disappeared into the room for the bulk of the day and then vanished into the night.\n\nOn the fourth evening, I steeled myself when I heard the door rattle, then prayed. To my pleasant surprise, my prayer was at once answered. He came through the door smiling.\n\n\"Hello, my lovely little wife,\" he said, shutting and latching the door. \"And how have you been tonight?\"\n\nMy eyes wandered for a moment before I reined them in. \"Fine,\" I managed, then recovered. \"Welcome home. Can I...\"\n\n\"Yes, you can. I met someone special tonight. I thought you might want to meet her too.\"\n\nMy brow dropped. I looked about, confirming what I was already certain was true; we were alone.\n\nWhen I looked back, Gino smiled and closed the door. \"Megan,\" he said. \"I went to see her. And Thomas. She seems very excited. The perfect happy bride.\" He paused to smile through a chuckle, then strode past me. \"Well, maybe she's not quite the perfect bride any longer, by conventional standards anyway.\"\n\nWith my jaw hanging limp, I turned to watch him walk to the davenport. There he pushed his trousers to his ankles before turning to sit.\n\nI followed and knelt, preparing to do my wifely duties, but when my face neared his cock I smelled it; or rather I smelled her. I had smelled myself often enough, so I knew the scent at once. My mind raced backward, confirming I had bathed him before his departure. With a gasp, I realized whose aroma must cover his cock. My face melted. A shudder shook my chest. My eyes overflowed.\n\n\"I guess I fibbed,\" Gino chortled. \"You don't really get to meet Megan, but you do get to taste her.\"\n\n\"No,\" I whimpered between sobs.\n\n\"There, there,\" Gino said, petting my head like a dog. \"It had to happen sometime and our little slut Megan, she tried to be good, but she just couldn't wait. Fucked and sucked us both, she did. Go ahead, be a good little wife and do the same, at least the sucking part.\"\n\nStill weeping, I parted my lips and followed his instructions. At once, the flavor of another woman's pussy filled my mouth.\n\n\"Now,\" he continued, still stroking my scalp. \"It may happen your husband does come home with the smell of another woman on him. Of course, you won't mention a thing. You'll just smile and clean her stink off for him.\" He paused to sigh and pet my head again. \"Yes, just like that.\"\n\nI wanted so much to bite him, to emasculate him, but my words bound me. Similar words bound Christine, I was certain, in my body. Does she still remember her name, I wondered, or has the necklace already taken whoever she was from her?  \n\nThe damn necklace! Somehow I knew the infernal neckpieces were what really bound us to the words. Closing my eyes, I pictured myself, my pleasantly plump little form ravaged by the two beasts; not in Niagara Falls or someplace special on her wedding night, but right there in the bastard's hardware store, between the rat traps and the plumbing fixtures.\n\nStill sucking, I noticed my breaths through my nose increasing in intensity with my ire. I hoped Christine hadn't enjoyed it, but I knew the power of his magic. She probably thought an aisle between the tools was better than a proper honeymoon.\n\nTools!\n\nMy eyes bolted open. I slid my mouth from Gino's cock and waited for him to turn his narrowed eyes down to me.\n\n\"You're not going to make me suck Thomas too?\" I asked. \"Are you?\"\n\n\"Who told you to stop?\"\n\n\"No one,\" I said. \"But you're not going to make me suck Thomas in some grody hardware store, are you? I have to know.\"\n\n\"Suck!\" \n\nMy mouth was back on his cock before I could utter another word. \n\n\"Damn straight you're going to suck Thomas, you sorry little slut! You're going to learn to keep your stupid mouth shut and where it belongs.\" \n\nA second later, his hands were on my head, forcing my head downward. His crown surged past my mouth and into my throat. I gagged. I wretched. I wept. And I reveled, happier than I had been in weeks, my spirit buoyed as I pictured how I might escape.\n\n* * * \n\nIn my foolishness, I expected Gino would take me to see Thomas the following day, but he didn't so much as mention it, choosing instead to spend every waking hour in his secret chamber. I heard a stray word and an occasional humming. Once I saw a blue glow beneath the door and thought I smelled roses.\n\nMy hopes dropped as the hours passed, yet I dared not bring up the issue of visiting Thomas lest Gino imagine I wanted to go. Consoling myself that it was the Sabbath and the hardware store was closed, I decided I could wait another day.\n\nThe next day, however, was no different. Over dinner my curiosity finally got the better of me. \"Have you changed your mind about me meeting Thomas?\" I asked, trying not to sound hopeful.\n\nHe smiled. \"Not at all. I was thinking to go tomorrow, or maybe the day after. I've been a bit busy, haven't had a chance to contact him. But don't worry, I shan't forget. We've something more important to do tonight.\"\n\nWith a sigh, my gaze and thoughts both strayed. Relax. You've waited this long. You can wait two more days. Considering my own advice, my mind raced forward. Two days? I only have eight left! Only seven really if... \n\n\"You do know what tonight is?\" Gino prompted, breaking my trance.",
        "I looked to him and shrugged. \"Monday?\"\n\n\"No. The date.\"\n\nI glanced to the newspaper. \"The thirty-first.\"\n\n\"It's Halloween!\"\n\nI shrugged again. \"Are we handing out candy?\"\n\n\"Oh, no,\" he said. \"Far from it. You won't even think of opening that door tonight.\"\n\nThe magician once again departed after supper. I went and dressed, then sat on the sofa and read. And read. It was much closer to midnight than dusk when I heard the rattle of the door handle.\n\nI set my book aside and stood. \"Welcome home. Can I...\"\n\n\"Come. We're going for a walk on the beach.\"\n\nA half-hour later we strolled along the darkened beach on the southern edge of Coney Island. \n\n\"It's a full moon tonight,\" Gino noted. \"And a blue moon as well. Conditions couldn't be better! Won't be this good again this century.\"\n\nI looked to the luminescent disc in the sky. \"It is pretty,\" I agreed. \"But it doesn't look blue.\"\n\n\"You're right.\" Gino chortled his amusement. \"It's not blue in color, but a full moon on Samhain is always a lovely sight.\"\n\nMinutes later, I was still wondering what he meant when I encountered the same invisible barrier that prevented me leaving the apartment or walking onto the balcony. My head wheeled, but Gino was behind me. I'm not leaving his sight, I reasoned. What rule am I breaking?\n\n\"Come,\" he said, grasping my hand. \n\nTogether we passed into a layer of warmth; just as if we had walked into a heated room. Except there was no room. The beach ahead wavered, much like a highway seen in the distance on a hot day. A blurry light came into view. At first I thought it was just a candle, but it grew. Then another light. And another. Five in all, huge wavering fires, torches sticking up from the sand. How had I missed them before? \n\nSoon I could make out a form, nearly the color of the sand, lying between the lights just above the tide. Two steps later, I could discern that it was a young lady without a stitch of clothing. She was spread eagle, each of her limbs and her head pointed toward one of the torches.\n\nWith a gasp, I stopped in my tracks. \"Who's that?\" \n\n\"She's some prostitute,\" Gino said. \"A runaway, probably. Who cares?\"\n\n\"I care!\"\n\n\"Well, that is your mistake. No one else will miss her.\"\n\n\"Miss her?\"\n\n\"Your rules about others are suspended for this woman.\"\n\n\"What?\"\n\n\"You'll see. For now, take off your clothes. Quickly. We don't want any stains.\"\n\n\"Stains?\"\n\n\"Shut up and do it!\"\n\nGino walked to stand over the prone figure, looking down and smiling while I all but threw my clothes unto the sand.\n\n\"Good,\" he noted when I was as naked as she. \"Rub her body with the olive oil.\"\n\nAgainst my will, my head moved, my eyes seeking the named liquid. \"Where?\"\n\n\"In the bowl,\" he said, pointing to a basin near her head. \"Not another word until we're done.\"\n\nI knelt beside the other woman and commenced my appointed task. \n\nShe was young, my age, but shorter, a bit on the skinny side. My eyes were drawn to her elf-like face. Her eyes looked back, wide, gleaming. I wondered for a moment why she just lay there, but then I saw it, about her neck; another necklace, just like mine.\n\n\"Her stomach,\" Gino said, kneeling across from me on the other side of her torso. \"Oil her stomach first.\"\n\nThis I did. As my hand passed, his followed laying a dozen other necklaces over her greased midsection. When my hands neared her breastbone, I felt it, her heart, pounding within her chest. My eyes leapt to her face. Her beautiful, innocent face. Pudgy little cheeks with a dainty pug nose to match; all framed by a short crop of hair as black as her eyes. My hands slowed, but only for a moment.\n\n\"Hurry! The closer to midnight we do this, the better.\" \n\nWith the magician's command, my hands moved again. They did not stop until every exposed inch of the girl's form shimmered in the torchlight.\n\n\"Perfect,\" the magician said. \"Now poor the last of the oil over her and put the necklaces in the bowl and the bowl under her neck.\"\n\nThese instructions too I performed. After I had wedged the basin into a hollow beneath her neck I looked up to see Gino's extended hand. Upon his open palm rested one of the blades from the set we used during our knife-throwing act.\n\n\"Take this,\" he said. \n\nWithout thought, my hand moved to his and clasped the knife's hilt.\n\n\"When I clap my hands,\" he continued. \"you will kill her, cut her throat all the way to her spine. Get ready.\"\n\nMy mouth fell open. No! my brain screamed,Please, but my tongue could not form the words. I could only watch as my hand and the knife slid over her torso to hover above her throat.\n\nGino looked to the moon and began to chant, throwing flower petals into the air.\n\nWith my lips quivering in their attempt to protest, my eyes followed the fluttering bits of flower downward to where they landed upon the girl's oiled skin only to sizzle and melt, leaving the subtle fragrance of rose upon the air.\n\nGino's chanting grew louder. I looked up. He had closed his eyes and clasped his hands above him. Uttering something akin to a howl, his hands parted, his arms folding downward, much like a blossom opening.\n\nWith a gasp, I snapped my gaze to the girl's face. Her hair began to float. Her lips quivered just like mine. We lost a tear at the same moment. My chest shuddered with a sob. She began to weep in earnest.\n\nI'm sorry, I mouthed. \n\nI'm still not sure she heard or could have heard it, even had I spoke. In that moment Gino's hands slammed together, issuing a concussion that sounded more like a clap of thunder than a clap of palms.\n\nI felt my hand move. Her eyes widened. A sickening gurgle reached my ears. I felt a spray of moisture strike my throat, chin, and cheeks. A splattering of crimson droplets shot across her face.\n\nI screamed. Her body shuddered. Her eyes darted to the heavens. I threw my body atop hers. With my mouth to her ear, I whispered, \"I'm sorry,\" over and over, praying she heard me. Not that it mattered. My sorrow changed nothing. Beneath our adjacent bosoms, the beating of her heart slowed, then stopped.\n\n\"Good, Christine.\"\n\nMy fist tightened about the knife. I brought the blade about, intent on stabbing Gino. Of course, the swing slowed in mid motion, but that didn't stop him jumping back just the same.\n\nHe recovered to laugh, \"Silly girl. Look at the sand.\"\n\nI did.\n\n\"Drop the knife,\" he continued.\n\nMy fingers relaxed at once. The blade did not so much fall as shoot from my grasp, striking the grains of sand beneath my gaze rather than those beneath my hand. My mouth flew open, and my eyes with it. I turned my gaze upward, intent on asking why the blade had behaved in such a manner.\n\nI saw Gino's scowl, then the blur that was his moving hand. I felt the sting of the impact just in front of my ear. My head snapped sideways. I fell backward, even my teeth aching from the force of the blow.\n\n\"I see I have been remiss in my training,\" he said. \"Too polite perhaps.\" His hand moved to the dead girl's feet. \"Get the other foot. Do as I do.\"\n\nI scrambled to follow his command. Together we lifted her feet until we stood, each of us clasping a heel to our sternum. Below, I heard a drip turn into a trickle. I closed my eyes, but there was no way I could close my ears.\n\nThe sound of the blood draining from the young girl's body assaulted my senses for but minutes I am sure, but how long a minute can be when you want it to end. \n\n\"That's enough,\" Gino said at last. He dropped her feet and then strode to her head, where he stooped and grasped her hair. Yanking her limp form to one side, he retrieved the bowl and knelt beside her.\n\nI turned and looked about. Beyond the torches, I could see the lights of Brooklyn. Dozens of lights. Hundreds even. Why doesn't anyone see? I wondered. Why doesn't anyone help?\n\nWith a sigh, I looked back to Gino as he pulled the necklaces from the bowl and laid them again upon her abdomen. His grin sickened me, as did the flexing of his fingers and the rubbing of his palms. \"Yes,\" he squealed. \"Twelve. All twelve!\"\n\n\"Why did you kill her?\" I asked.\n\nHe looked to me. The fiendish grin broadened. \"I didn't kill her. You did, but don't fret over it. You did her a favor, you know; she'd only have lived a couple dozen miserable years anyway. We'll probably each live that much longer for her sacrifice. \n\nI shook my head. \"I don't understand?\"\n\n\"We killed her for these,\" he said, sweeping his hand over the necklaces still lying on her tummy. \"And this.\" His eyes and hands both went the basin. My jaw fell and my eyes widened as I watched him lift the bowl to his mouth. Big gulping sounds reached my ear, each accompanied by the pulsing of his throat. \n\nMy nose wrinkled. A whimper resonated within my throat. I fell to my knees. \"Oh, God,\" I gasped. \"You're a vampire.\"\n\nGino pulled his mouth away from the basin. He threw his head back. A rivulet of red ran from the corner of his mouth over his cheek a moment before a hearty, villainous laugh rolled over the beach. \n\n\"No,\" he said, turning to me. \"And lest the full moon lead you astray, I'm not a werewolf either; though my kind is the source of both legends.\"\n\n\"Your kind?\" \n\nHe smiled. \"The less you know, the better for both of us.\"\n\nMy skin tingled as I considered the extent of the evil before me. \"Are you going to kill me too?\" I wondered aloud.\n\nGino kicked his head backward and sent another howl of laughter at the moon. \"Just the opposite,\" he said, bringing his eyes back to me. \"Your turn.\" He thrust his hand and the bowl toward me. \"Drink.\"\n\n\"No!\" I gasped, but that single word was all I had time to speak before my hands had brought the basin to my lips. A moment later the warm, salty taste of blood filled my mouth.\n\n\"Her death is our life,\" Gino whispered as I drank. \"You and I, Christine. We've been together for centuries.\" He chuckled through a grin. \"Ever since you said I wasn't good enough for you.\"\n\nWith a metallic aftertaste lingering on my tongue, I dropped the empty bowl upon the sand. How old am I? I wondered, looking to my body. It doesn't matter, I concluded with a sigh, it won't be my body for long. My eyes narrowed as I brought them up. What if this body is the key? Maybe if I kill myself, he can't enchant...\n\nGino's brow dropped. \"What are you smiling about?\"\n\nMy brain scrambled. \"Why don't you keep me?\" I asked, hoping he thought I couldn't lie. \"I can make you happy. You don't need anyone else.\"\n\nHis chest shuddered with yet another laugh. \"Oh,\" he gasped. \"That's rich. Now that you know you can live forever, you want to stay. You really are the perfect slut.\"\n\n\"If I'm perfect, keep me.\" \n\n\"No.\" He sighed and shook his head. \"You'll be gone by Christmas.\"\n\n\"Christmas?\"\n\n\"The winter solstice to be exact. After that, I've been thinking of going south. Maybe to that new Disneyland place. I could work...\"\n\nThe magician continued to talk, but I wasn't listening. Inside my head I put two and two together. Literally. Two solstices and two equinoxes. Four girls per year. My eyes fell to the beach, and the dead girl's feet. No. Make that five. Five girls per years for hundreds of years. I shuddered, but a hint of the rage boiling within me.\n\nGino stood and brushed the sand from his clothes. \"We best get going.\" He reached down and scooped up the necklaces. \"Drag her out in the ocean while I gather the rest of our things.\"\n\nWith a sigh, I stood and dragged her by the hands into the water. \n\n\"Farther,\" Gino said as he hurled a torch into the ocean. \"As far as you can. With any luck, they'll never find her. Oh, and that necklace on her neck, the magic's gone from those stones, take it off and leave it in the water too. Drop it anywhere.\"\n\nI looked down at the shadows of her face and the water lapping over it. Her facade was a peaceful one, as if she slept. For a moment, I envied her that, but a moment later my eyes slipped from her face to the necklace still about her neck. His words echoed within my brain. The magic's gone from those stones. Leave it in the water. Drop it anywhere.\n\nTrying to remain calm, I moved my shaking fingers to the clasp.\n\nWith the necklace firmly between my fingers, I dragged the girl until only my head was above the waves, then I turned and shoved her toward the sea. \"I'm sorry,\" I whispered as she floated away.\n\nWith my lips set into a firm line, I spun and began to march back toward the shore. Below the waves my busy fingers fed another piece of the necklace into myself with every step. Yeah, I thought. I'm going to drop it in the water alright, just like you said.\n\n* * *\n\nMy plan was almost over before it began.\n\n\"To the bed with you,\" Gino commanded the instant we were back in the apartment. \"On your hands and knees.\"\n\nWith a gulp, I did his bidding; my eyes widening as he flipped my skirt upon my back.\n\n\"I have to pee,\" I protested.\n\n\"You always have to pee. It can wait.\"\n\nI felt his fingers on my sex. My heart raced. I can't let him find the necklace! \n\nHis belt buckle rattled. I heard the rustle of his trousers, then the creak of his knees upon the mattress. He began to rub his cockhead among my folds. My anxiety became a panic. \n\nI spun my head over my shoulder. \"I thought you were going to teach me new stuff. Isn't that what you said at the beach?\" Just from the corner of my vision, I saw his eyes wander and decided to press my point. \"Why don't you put it in my butt? Or are you afraid it's so small I won't even notice?\"\n\nHis inhale was more snarl than breath. Less than a second later his fingers wrapped themselves in my locks. He leaned, pushing me prone upon the bedding. \"Stay there.\"\n\nI wiggled, but found myself unable to move anything other than my head. This I turned to watch Gino walk down the hallway.\n\nSeconds later he returned with an urn of olive oil. \"How handy I left this out,\" he said, pouring some of the liquid into his cupped palm. With a wide grin breaking across his lips he moved his hand to his shaft and ran his fist up and down, lubricating the length.\n\nI snapped my eyes to the pillow just beneath my nose. What have you done?\n\n\"You want it up your ass, little slut?\" he asked, straddling my hips.\n\nImagining he didn't expect an answer, I remained silent and awaited the inevitable. I felt a hand on my ass cheek. Once again, he pulled my panties aside. His cockhead pushed into the valley of my ass, rubbing up and down, seeking the tender aperture therein. He found it in short order.\n\n\"Be sure and let me know if it's too small for you to feel!\"\n\nWith that, he leaned, putting his weight upon his shaft, and through it upon my sensitive anal rings. At once, my little butthole became the source of a deep, stabbing pain. I issued a long, irregular grunt. My muscles clenched, a matter of instinct rather than will, as if to keep him out.\n\nFor a moment I feared I had done just that, but I found he had only withdrawn to gain momentum for a second assault. With another dose of misery, my tiny muscles absorbed the impact, surrendering to allow a pinch of his crown within. My subsequent exhale was more like a cough than a breath.\n\n\"Liking it yet, slut?\" Gino snarled. \n\n\"No!\" I cried, guessing this would only ensure he continued.\n\n\"You'll learn to like it,\" he said. \"But not tonight. Tonight you learn what happens to wives who don't keep their mouths shut.\"\n\nHe pushed again. And again. Each time the rubbery head of his cock pried my anus a little wider until, a pair of long minutes later, my exhausted rings gave up their struggle. In that instant, his cock plunged several inches into me. The pain that had been confined to my sphincter surged inside with him. \n\nMy mouth flew open. My fingers clawed at the sheets. So intense was the hurt that I could barely feel his cock sliding out for another thrust, but when that thrust came it was like a hammer pounding my ass. My chest shuddered. An elongated moan passed through my still parted lips.\n\nGino yanked my head back and brought his lips near my ear. \"Pity this isn't the first time for your body too, but don't worry, you'll learn what that's like. I'm going to find you a nice virgin body and a husband that likes sodomizing his woman.\"\n\nMy eyes widened, but not because of his threat; I realized the pain was such I couldn't feel anything else. Even though I expected it would only hurt more, I squeezed my muscles tight lest the necklace somehow slip from within me.\n\n\"Oh, yes,\" he gasped. \"That's nice. Are you already liking it?\"\n\n\"No,\" I gasped. \"I hate it.\"\n\n\"Don't worry little slut,\" he snarled. \"It'll feel better soon.\"\n\nI didn't believe him, but his words proved true just the same. Within a matter of seconds, the pain abated. The sensation shifted form one of agony to something familiar, like a prolonged bowel movement. Picturing his cock plowing through my lower tract less than an inch from my smuggled band of jewels, I could not keep from smiling.\n\nThis respite lasted for but a few minutes before discomfort returned in a different form. My ass, my rings in particular, began to burn. I closed my eyes and prayed for it to end. \n\nSoon enough, it did. \n\nGino plowed into my depths. His chest found my back. Even through several layers of clothing I could feel his heart pounding. A shallow grunting reached my ears, each tiny rumble timed with a tiny thrust from his cock.\n\nAfterward he lay atop me, panting into my ear for half a minute before he spoke. \"I know you're angry about the dead whore, but you must learn to control your temper no matter what your husband does. Even your holy book specifies the wife is to obey her husband, does it not?\"\n\n\"It does,\" I admitted.\n\nHe stood. \"Very well then, wife. Let that be the last disrespect you show me or any other husband. Go and draw me a bath while you're peeing.\"\n\nClutching my skirts to my privates I gained my feet and raced for the washroom. There I sat, but kept my muscles tight. I looked to the door; the door I wasn't allowed to close. My eyes wandered while my ears searched.\n\nHearing nothing, my fingers rushed to my loins and fished the necklace from within. With but a glance toward the corridor, I turned and put one hand to the reservoir lid, lifting it a hair. Into the crack the fingers of my other hand pushed the necklace. A moment later I heard the splash. Wearing a broad smile, I eased the lid back on the tank and looked back to the bedroom. I dropped it in the water, just like you said.\n\n* * * \n\nAs if a murder was nothing unusual, Gino and I resumed our typical schedule the following day. Neither of us said a word about the girl and neither did the newspaper, yet this did not stop her from dominating my thoughts. It was not until Wednesday evening over supper that I was again able to refocus on my own dilemma, starting with an inquiry regarding our planned trip to the hardware store.\n\n\"When are we going to see Thomas?\"\n\n\"Oh, that,\" Gino said, not even looking up from his meal. \"It'll have to wait. We're going to see him at the wedding next week anyway.\"\n\n\"But I thought...\" I stopped myself, hoping not to appear eager.\n\nThis time he did look. A second later, he laughed. \"Don't look so disappointed. I'm going to find you a nice old man to fuck. What do you think I'm doing all day?\"\n\nGino left me after breakfast, as had become his habit. With the wedding only four days away and my plans for getting my hands on a tool thwarted, I became frantic. I tried again to open the front door, to no avail. The balcony doors I could at least open, but when I attempted to throw myself through them, I came up short on the floor. Lying there, I pounded the wood with my fists and began to weep.\n\n\"Why?\" I muttered between sobs. \"Why me?\"\n\nGet a hold of yourself! I counseled. With a sigh, I sat upright and wiped my eyes. I sniffled back a tear and looked to the sunlight beyond the doors. ",
        "\"I can still kill myself,\" I recalled. But I still wasn't sure that would thwart him. Only as a last resort, I reasoned a moment later. Give yourself a chance to find another way.\n\nI stood and began to pace. \"Talk yourself through it,\" I said. \"You've found holes in his words before.\" My mind went to the toilet, where the necklace rested, then to the sink where I had discovered I could cut myself, and finally to the bathtub where I had masturbated before I knew what the word meant.\n\nWhat are my rules again?\n\nIn the manner they always did, the words that bound me, my words, rushed to the forefront of my consciousness. I went over them again and again, seeking weakness, wiggle room, but every time I did so, my shoulders and my spirit sank just a shade lower.\n\nMy lowered eyes found the balcony, but a step away, yet a step I could not take without his permission. In that moment, my head jerked upright. \n\nDoes it have to be his permission? My mind raced to my words. Maybe I can get someone else to give me permission! I shook my head. My shoulders sagged. I sighed. No. I'd have to communicate first, and I'm not allowed to do that either. \n\nFor a few seconds I just sat, breathed and looked out the door. Then my eyes came up, wide. I looked out the door, but my focus was well beyond the balcony. Standing, I walked to the edge of the threshold. There I cycled a huge breath and said in the firmest voice I could muster, \"I give myself permission to leave this apartment anytime I please.\"\n\nChewing my lower lip, I extended my toes outward, certain any moment would be the last moment I could move them. But that moment never came. My foot came down outside of the door. I yanked it back as if I had been burned. Eyes wide, I repeated the experiment. This time my other foot followed and I danced on the balcony, freer than I'd ever felt before.\n\nMy hands were shaking when I walked back into the living room. \"Calm down,\" I said, \"You don't have time to panic.\" I looked to the clock. It was almost noon. I looked to the front door. The freedom of pure flight beckoned.\n\n\"But where would I go?\" I wondered aloud. A second later I shook my head and attempted to steady my nerve with yet another huge breath. \"I'm going to the goddamn hardware store. That's where I'm going.\"\n\nFive minutes later I was dressed and in the elevator, holding my breath that the doors would not part to reveal Gino. With no sign of my captor, I exhaled a sigh and strolled across the lobby.\n\nThe doormen gave me a polite nod as I approached. \"Good afternoon, Miss,\" he said, holding the portal for me.\n\nI opened my mouth to thank him, but my tongue would not move. My eyes angled downward toward my treasonous tongue, then I laughed and shook my head. \"Of course,\" I mumbled. \"I give myself permission to communicate with anyone I want.\"\n\n\"Beg your pardon, Miss?\"\n\n\"Nothing,\" I said, snapping my eyes to the doorman. \"I was just thinking out loud. Can you please tell me where the nearest hardware store would be?\"\n\n\"Certainly!\" He led me to the sidewalk and pointed. \"Go to James Street and take a right. It's between Eighth and Ninth, if memory serves.\"\n\n\"Is it close? I only have an hour.\"\n\n\"It's a dozen blocks maybe. Should take you twenty minutes each way. \"\n\n\"Thank you,\" I said before scurrying away.\n\n\"My pleasure, Miss.\" he called after me.\n\nWith my lean legs churning over the concrete, I made the trip in fifteen minutes. \n\nThe modest store was empty and I browsed less than a minute before the young clerk came from behind the counter. \"May I help you find something?\" he asked.\n\n\"No,\" I replied. \"Just looking.\" Having no money, my intention was to pocket whatever tool I did find. I wandered away from him hoping that would be the end of it and he would leave me be.\n\nInstead, he followed. \"Perhaps if you'd give me a hint I can point you in the right direction?\"\n\nI spun to face him and pointed to my necklace. \"Ok. I want something to crush one of these diamonds.\" \n\nHis eyes widened. \"You want to smash one of your diamonds?\"\n\n\"That what I said.\"\n\nHe shrugged. \"I should think a hammer would work.\" He started to turn. \"They're over...\"\n\n\"No,\" I said, stopping him in his tracks. \"It has to stay on my neck while I do it. And I can't break the gold band either.\"\n\nHis brow fell. His head tilted to one side. \"Excuse me?\"\n\nMy eyes strayed. I cycled a breath, then snapped my focus back to him. \"It's for a wager.\"\n\n\"Oh,\" he said with a nod. \"I see.\" He brought his fist to his face and chewed the end of his thumb. His eyes drifted upward. He began to nod. \"Yes!\" he said, snapping the thumb from his lips and his forefinger to the air. \"I know just the thing. Follow me.\" \n\nHe turned and strode down the aisle with me in tow. Stopping some dozen paces later he stooped to retrieve an item from the lowest shelf. When he stood, he presented a curved metal jaw closed by a threaded rod. \"How about this?\"\n\n\"What is it?\"\n\n\"A C-clamp.\"\n\nI took the tool and spun the handle with my finger. My eyes followed the rod as it slid toward the jaw. \"It just might work.\"\n\n\"I think it might.\"\n\nMy eyes darted back to the clerk. An instant later my hand and the clamp therein shot toward him as well. \"Will you try it?\"\n\n\"Me?\"\n\n\"Yes?\"\n\n\"Here?\"\n\nI smiled and nodded. \"Yes, please.\"\n\n\"I thought you said it was for a bet?\"\n\n\"It is,\" I insisted. \"And I want to be sure I'll win.\"\n\nThe lad's throat pulsed with a swallow. \"Ok,\" he said, accepting the clamp. \"You really want me to smash your diamonds?\"\n\n\"I do!\"\n\nHe gulped again. \"Ok.\" His eyes locked on my neck, he brought the clamp upward. \n\nWith my heart pounding within my chest, I looked down in time to see one of his hands disappear beneath my chin, bringing the chill of the metal to my neck. Please, I begged, Please let it work.\n\nI watched his other hand I could see spin the handle for a few seconds, then tighten into a fist about the rod. With a grunt and he looked back to my face. \"You're sure?\"\n\n\"Yes! Do it.\"\n\n\"Ok.\" His eyes went back to my neck. His tongue parted his lips. His features twisted. He issued another grunt. I heard a grinding, yet another grunt, and then a crunch. \n\nHe backed his head an inch farther away, then nodded and pulled the clamp from my neck. \"I think that's got it.\" \n\nMy finger rushed to necklace, but still I could not touch it. I exhaled a sigh of disgust through my nose. \"Do you have a mirror?\"\n\n\"In the washroom.\" \n\n\"Where?\" \n\nHe pointed. \"Back corner.\"\n\n\"Thank you!\" \n\nI ran to the tiny room. Facing the mirror, I lifted my jaw and looked at the neckpiece, focusing on the mangled setting containing but a few shards of a once-beautiful gem. My lips curved upward, but I didn't see them; I was already rushing back to the clerk.\n\n\"Please do the rest!\" I insisted.\n\n\"But ... \"\n\n\"Please!\"\n\n\"Ok,\" he stammered. \"Ok.\"\n\nOnce again, he brought the clamp to my throat. I closed my eyes and listened to the exquisite crunch of gemstones shattering. Upon crushing the third diamond, my shoulder crept upward- not even an inch, but I noticed it. I moved my hand to the necklace, inhaling a crisp breath as my fingers met the jewels. Unable to believe what was happening, I withdrew shaking hand and watched while the clerk continued his work.\n\nSeveral stones later I found I could touch the latch, but not open it. This changed after he'd shattered half the gems, but I could only open the necklace, I was still unable to lift the band from my throat.\n\nOnly when the lad had crushed every stone did the enchantment at last relent; the necklace slid from my neck into my waiting fingers. With a smile, I relaxed my grip and watched the mangled gold band fall to the wooden floor. I moved my foot over the remnants of the necklace. My nose wrinkled. With my teeth clamped upon my lower lip, I brought my shoe down, grinding the gold into the planks.\n\nWhen I removed my foot several seconds later, my teeth and lower lip parted form a broad smile. My eyes closed. I sighed. My hands rushed to my neck where ,y palms sampled the warmth of my naked flesh. Thank you,\" I whispered. \"Thank you.\"\n\n\"It was nothing,\" the clerk replied. \"You want it, then?\"\n\nMy eyes snapped open. I looked down to the crushed pieces of gold scattered about my feet. \"Want it?\"\n\n\"The clamp?\"\n\n\"Oh,\" I said, looking back to the tool with a grin. I considered my options. High on the list was running, running fast and never looking back. But as my eyes wandered the shelves of tools and nails and plumbing fittings, my thoughts went to another hardware store. Running ceased to be an option.\n\nWith my lips pressed against one another, I determined to go back to the apartment and don the second necklace, the gemstones of which I might also need to crush. \"Yes,\" I said. \"I better take it.\" \n\nThe clerk flipped the tool over in his hand. His eyes went to the tag, then to mine. \"Forty-nine cents.\"\n\nI inhaled and held a breath, then closed my eyes and laughed at myself. Of course, I still didn't have a penny. A moment later my eyes opened. My tongue played across my lips, then the ends of those lips curved upward. I bounced my eyebrows. \"Do you know what a blowjob is?\"\n\nThe young man's eyes widened. His head moved in a slow nod.\n\nI snatched the clamp and held it before him. \"I'll give you one in trade for this clamp.\"\n\nHis jaw fell. His eyes all but popped out of his head.\n\n\"And a quarter,\" I added.\n\nTen minutes later I skipped my way back to the apartments, a smile on my face, a clamp in one hand, and a Hershey bar in the other. I may have been the worst paid whore in all of New York, but I was certainly the happiest.\n\n* * * \n\n\"Found the hardware store, Miss?\"\n\n\"Yes,\" I said with a smile, waiting for the doorman to hold the portal open for me. \"Thank you.\"\n\nHe bowed his head. \"My pleasure, Miss.\"\n\nI had taken but two steps into the lobby before I stopped and turned \"Oh,\" I prompted, waiting for the man to look my way. \"I'm planning a special surprise for my husband, so please don't mention seeing me.\"\n\nHe smiled. \"Your secret's safe with me.\"\n\nBack in my washroom I looked to the mirror, watching my chest rise and fall with my breathing while I gathered my courage. Then I watched my hands creep upward, taking a cold, wet string of jewels toward my neck.\n\nWith my new necklace secured, I ran to the balcony doors. There I again chewed my lower lip and pushed my toe beyond the threshold, with the same result. I afforded myself a few minutes on the terrace, savoring the view of the oceans, the wind in my hair, and the blessed feeling that the body in which I found myself was at least mine to do with as I wished. \n\nThen I went back inside and started dinner.\n\nWhen I afforded Gino his privileges that evening, he gave not the slightest hint that he noticed I wore a different necklace. I spent the following day searching the apartment for anything I could use, my mind turning over the many ways I might kill him. \n\nMy quest included a trip into the magician's secret room. I expected to find something akin to Frankenstein's lab but instead a tidy library greeted my eyes when I opened the door. There was a table in the middle, an old oaken one, but it was covered by a few scattered papers rather than test tubes and Bunsen burners. \n\nI glanced over the papers and then pulled several books from the shelves, but to my dismay not one of them was in English. I did find some test tubes in a cabinet, but the labels were also in a foreign language and their contents resembled spices rather than bat wings and newt eyes. The neatness of the chamber convinced me to disturb it no further lest the magician notice my trespass and realize I was no longer his pawn.\n\nBy Friday afternoon, I had decided to kill Gino in his sleep Monday night and then Thomas the following day before the wedding. The details of how I would accomplish this were far from clear, and I hadn't even begun to imagine how I might escape the law afterward; not that I cared, so long as Megan was free. In the end, I had too many options and I had yet to settle upon a firm plan when Saturday, and our performance, arrived.\n\n* * *\n\n\"I agree, Christine!\" the magician called above the audience's laughter. \"You should go change!\"\n\nClasping my palms over my navel, I feigned embarrassment and dashed for the curtains. Just beyond the fabric divider, I stopped to catch my breath. Though my sex still tingled from voltage of the sawing box, my mind was already looking ahead to Monday night.\n\n\"And now,\" Gino announced to the crowd. \"I shall pull a rabbit out of my hat.\" \n\nI paused and looked to the curtain. By that time, I'd come to know every line of the performance, but I still didn't know where the rabbit came from. Deciding I had a moment to spare, I parted the fabric enough to bring my eyes to bear on the magician.\n\n\"Pocus di Hocus,\" he continued. \"Venuto avanti dal mio manicotto poche lepri\"\n\nA white bunny leapt from his sleeve onto the box top. He put his hand to his chest, then turned to the audience. Everyone laughed as he hurried to stuff the bunny into the hat only to have it leap from his other sleeve. A larger roar of amusement swept the crowd.\n\n\"Bear with me,\" he stammered. \"I've never done this without my assistant.\" He stuffed the bunny back in the hat, only to stand erect, leaving the headgear sitting on the box. Oh, wait, what have we here? A new assistant perhaps?\"\n\nMy brow dropped upon hearing the unfamiliar words. \n\nGino stalked away from the sawing box, his hands waving before him as he chanted. \"Tiro, ragazza insensata. Tiro!\"\n\nI heard the audience gasp in unison. Adjusting the curtains, I shifted my attention in the direction the magician gestured. What I saw caused me to gasp as well.\n\nNot five feet from Gino, just visible above the edge of the stage, I saw a face. I recognized it at once in spite of the surrounding frame of limp blanched strands. It was my face; Megan's O'Reilly's lovely round face. In spite of my astonishment, my eyes did not long linger on the girl's countenance or her locks, for there was a bigger surprise in her shaking hands; a revolver, its wavering barrel aimed at the magician.\n\nWithout a word, Christine squinted. Her hand jerked. The weapon discharged. A woman in the audience screamed. The back of Gino's coat rippled. A small hole appeared.\n\nBut the magician did not stop his hand waving. Or his chanting. \n\nChristine's eyes widened. She shot again. \n\nGino unleashed that same laugh I had heard upon the beach. \"Le pallottole non possono ucciderle!\"\n\n\"No!\" Christine screamed. \"No. You have to die.\" Again she shot. Again the bullet went right through him.\n\nBehind her, a chuckle came from the crowd.\n\nThey think it's part of the act, I realized. \n\nIn a fit of weeping hysteria, Christine emitted an elongated \"No!\" and pulled the trigger again. And again. And again. With each shot the audience only laughed louder until the gun clicked in her hand.\n\nAbove the crowd's amusement I heard Gino's chanting. \"Venuto a me. Ho nuovi gioielli per il vostro collo..\"\n\nChristine's face went from distraught to featureless. Her hands relaxed as well, falling from my view. The thump of the gun striking the floor reached my ears. She turned. With methodical, deliberate paces, she began to walk toward the side of the stage. \n\nGino's attention, his waving hands, and his chanting followed her.\n\nI gasped, then held my breath. My mind raced. I turned from the spectacle. Bullets can't harm him! What can? Silver bullets? A stake through the heart? Burning at the stake? What can beat his magic? \n\n\"Magic,\" I whispered, recalling how he had reacted when I had swung the knife toward him at the beach. \"Of course!\"\n\nMy eyes darted to the box holding the implements for our final act. I closed the three steps to the container and threw open the lid. Each of my hands rushed inside and found one of the magician's knives. I turned and rushed through the curtains, intent on ramming both blades into Gino's back. \n\nBy then, Christine was climbing the steps to the stage and the magician had turned to face her. His back was no longer to me. I had two choices; rush him directly where he might see me, or run to my left all the way around the sawing box. \n\nI chose the latter course and forced myself to walk the first several steps. If he saw me out of the corner of his eye, he paid me no heed. The instant both of his eyes were beyond my sight, I raced again. \n\nI rounded the end of the box with knives in hand. A murmur swept the crowd and some of their heads turned my way. \n\nA second later, so did Gino's, his focus coming to rest on me. His eyes widened. His brow dropped. His lips set into a line. His torso spun toward me. Over his rotating shoulder, I saw the splayed, waving fingers of his hand rise with wisps of blue trailing from their tips.\n\nI stopped. There was no way I could reach him in time. I set my lips together and issued a silent prayer to all things holy. With my eyes locked on his neck, I hurled the knife from my right hand. \n\nThe blade flew to the left and downward, then curved back toward where my eyes still bored holes in the magician's throat. He had only time to gape before the melon-like sound of metal penetrating flesh issued from his neck. There was a half-second of near silence before the audience released a huge collective gasp.\n\nThe wide-eyed magician teetered, then stumbled as he spun to fully face me. His still-splayed hand began to rise in my direction. I know not to this day whether his motion was a plea or the start of another enchantment. My vision locked on his forehead, I launched the other knife.\n\nWith a sickening crunch, the blade buried itself within Gino's skull. Within the spectators, I heard a tumult grow, but only for a second. In that second, the magician dropped. His knees hit the floor. He began to fall toward me. I heard a humming. A blue glow surrounded him. My flesh on my scalp began to tingle. My tresses floated from my shoulders.\n\nA tendril of the blue luminescence reached toward me. I felt lighter, as if gravity had weakened. I saw another blue tentacle reach from Gino's limp form toward the far end of the stage. The tingling crept all over my body. The hissing, crackling sound of a roaring fire enveloped me. I caught a whiff of that subtle scent one smells just before it rains. I became dizzy. Gravity returned. My legs wobbled. I collapsed. The splintery wood of the stage greeted my knees, but I hardly felt it. For a moment, I heard absolutely nothing and felt less. \n\nMy head warmed as feeling rushed back along with my consciousness. The roar of applause reached my ears. I looked to the audience to see every member standing, slamming their palms together. Many looked at me, but some looked toward the other end of the stage. \n\nMy gaze followed theirs. Where Gino should have been, only his clothes remained, yet my focus did not long linger there. Beyond the crumpled garments my eyes found a beautiful blonde with long, toned legs, her feminine curves constrained by a costume that was little more than a white swimsuit with red sequins. With her upturned palm, she beckoned that I rise.\n\nInstead my eyes fell. To my body. My round, beautiful body. Tears welled in my eyes. I hugged myself, making sure it was really me, chubby little Megan, the only person in the world I would ever again wish to be. With rivulets rolling down my face, I lifted my gaze again to Christine. \n\nAgain, she beckoned that I rise.\n\nThis time I did so.\n\nWith a smile and a nod, she turned toward the audience and bowed. A second later, so did I, though the crowd was but a blur through my tears. \n\n\"That's our show,\" Christine yelled. \"We hope you've enjoyed it.\" ",
        "The audience increased their applause, as if we might have some encore in store for them, but the two of us simply stood, smiled, and waved until the last of the spectators had finally departed.\n\nThe instant the auditorium was clear, Christine jumped off the stage and grabbed the gun.\n\nI walked over to Gino's clothes and poked his trousers with my toe, examining what looked to be ashes spilling from the cuffs. \"Where'd he go?\"\n\nChristine flipped her nimble body again onto the stage. \"Hell. I hope.\"\n\nI kicked the magician's crumpled black coat across the wood. \"He's really dead?\"\n\n\"Yeah. He's dead.\"\n\n\"How do you know?\"\n\n\"You're back where you belong, aren't you?\"\n\nStill unwilling to believe it was true, I looked down again. \"Yeah,\" I said with a smile. \"I am.\" My eyes lost another tear as I looked back to Christine.\n\nA droplet ran down her face as well, but it ran toward lips pushed into a purse rather than a grin. With a swallow, she looked away.\n\n\"What about you?\" I asked. \"Are you really Christine?\"\n\nThe blonde shook her head. \"My real name is Shirley.\" She closed her eyes, squeezing out a single droplet. \"Shirley Hayes.\" She opened her eyes and brought them back to my face. \"God, I can finally say my name.\"\n\nGuilt overcame my glee and I shared her tears. \"Why didn't you go back too?\"\n\n\"It's too late,\" she said. \"That necklace has done its job.\" She paused to swallow. This time, she neither blinked, nor wept. Her lips formed a hard line. \"I'll never really be Shirley again.\"\n\nShe reached down and picked up a knife. \"But I can free her. I'm going to kill the bastard that bought her. At least then my family will have their daughter back, even if it isn't me.\"\n\nWith my lips as firm as my resolve, I stooped and grasped a blade of my own. \"I'm with you.\"\n\nShirley shook her head. \"No. After I'm done there I'm going to find the rest of these monsters. Gino wasn't the only one, you know. Eventually, I'll fail, or the cops will nab me, but that's my life now. You have your life back. Go live it.\"\n\nI spread my left hand. My eyes fell to my empty ring finger.\n\n\"Don't worry,\" she said. \"I gave Thomas his ring back first; just in case I couldn't kill Gino.\"\n\nTeeth clamped together, I passed several breaths through my nose. \"Thomas deserves a bit more than his ring back.\"\n\nShirley nodded. \"He'll get it. But not today. And not from you. Go home. Your family's waiting. I believe there's a boy waiting too.\"\n\nWithin my chest, my heart bounced, mimicking the motion of my eyebrows. \"A boy?\"\n\n\"Kinda skinny. Rusty hair. Freckles. Glasses. Bit of an over-bite.\"\n\n\"Ricky?\"\n\nShirley nodded. \"Yes. He seems really nice. You're so lucky.\"\n\nI looked away, across the empty seats of the auditorium, in what I imagined was the direction of New Jersey. \"Is he mad at me?\"\n\n\"I don't think so. Just confused.\"\n\n\"What about Dad?\"\n\n\"Oh Yeah. He's plenty mad, but only because he loves you.\"\n\n\"Wouldn't blame him for hating me,\" I said, turning back to Shirley, \"what with me fucking a man my grandpa's age.\"\n\nHer head fell to one side. \"Fucking? I didn't fuck anyone.\"\n\nWithout a second thought, I thrust my hand downward, beneath the hem of my skirt and into my panties. I teased my entry with the tip of my finger before easing the end of the same digit inside, seeking and finding a delicate layer of flesh. \n\n\"Oh,\" I said as an elongated gasp. \"Thank you.\"\n\nShirley smiled. \"But I didn't do anything.\"\n\n\"Exactly! Gino lied.\"\n\nShirley grinned. \"Imagine that. What about?\"\n\n\"He came home one night with the taste of a woman on him. Said it was me.\" I pointed to myself. \"This me,\" I continued turning my finger to her, \"not that me.\"\n\nShe moved her shoulders in a single exaggerated shrug. \"Probably some hooker.\"\n\nMy jaw fell. I gasped. \"I know who.\"\n\n\"Who?\"\n\nI shook my head. \"It doesn't matter.\"\n\nShirley smiled. \"If you say so, but speaking of hookers, I'm afraid your mouth isn't quite as virginal as the rest of you.\"\n\n\"What?\"\n\n\"I had to get the gun. The owner of the sporting good store in Mendham is right fond of you.\"\n\nTo my own surprise, I giggled.\n\nShirley's brow dropped. Her head fell to one side. \"What's funny?\"\n\nMy giggle became a grin. \"There's a hardware store clerk in Brooklyn that likes you too, but all I got for my whoring was a clamp and a candy bar.\"\n\nWe shared a bigger laugh, then she looked to my skirt and nodded. \"Check your pocket.\"\n\nI stuck my hand in and fished out a handful of bills. \"What's this?\"\n\n\"Ok,\" she said. \"I blew more than one guy over the last few days. Sorry, but I had to, didn't know how much money I'd need.\"\n\n\"Last few days?\" I muttered.\n\n\"Yeah,\" she said with a nod. \"I don't know why, but my necklace just fell off. At first, I thought it meant the magic was done, but then I realized I could still remember. Soon enough, I discovered I was free.\"\n\nI smiled. \"Thursday just before noon?\"\n\n\"What?\"\n\n\"Did the necklace fall off Thursday, just before noon?\"\n\n\"How'd you know?\"\n\n\"That's when I got mine off.\"\n\nHer eyes dropped to my throat. \"But...?\"\n\nMy fingers leapt to the band still encircling my neck. \"Oh,\" I began, \"this is a fake. I broke the real one.\" \n\n\"You broke it?\" \n\n\"Yeah. Sort of, anyway. If you break the diamonds, it breaks the magic. You don't have to take it off.\" \n\nShirley looked into the distance and nodded. \"Of course. So simple.\" She snapped her eyes back to the money in my hand. \"That should be enough to get you home. Take the subway into Manhattan and call your dad from there. Tell him you gave Thomas his ring back and you just want to come home.\"\n\nWe just stood for a couple seconds.\n\n\"That's it,\" I said, bringing my eyes back to Shirley's face. \"Goodbye?\"\n\nShe nodded. \"Yeah. The less we're seen together, the better.\" \n\nWe exchanged one long hug. Then I just turned and walked away.\n\n* * *\n\nI never saw Shirley again. The week before Christmas, I received a box via special delivery. At once, I recognized the address of origin, a Brooklyn apartment that had once been my prison. Inside the carton, I found stacks of hundred-dollar bills beneath a handwritten note.\n\nMerry Christmas Megan,\n\nFrom Gino's books I've learned more about him than I ever wanted to know. Magic is the ultimate power, and the ultimate corrupter. Fortunately he trusted magic more than banks. You'll find enclosed a little over twenty thousand dollars. That's what Thomas paid for you. Seems fitting you should have it. I know it's no fortune, but it should buy you a nice little house somewhere. Enjoy your life. For both of us.\n\nFarewell, \n\nShirley\n\nP.S. Burn this letter. And the box. \n\nOn the first Sunday of January, while I was in church a hundred miles away, Shirley killed Thomas Collard. At least, I assumed she did; the newspapers reported his 'grisly murder' the next day. Afterwards, I never had the slightest hint of what became of her.\n\nBy Groundhog Day, I grew tired of waiting for Ricky to make the first move, so I asked him out. We were engaged by mid-spring and my father gave me away on the last day of June. \n\nThough I already carry Ricky's child, I wonder if I will ever be the wife he deserves. I love him dearly and still enjoy the physical aspects of sex, but too often when he arouses me in an intimate way I think of the magician and weep. I tell my husband they are tears of joy, but I have my doubts that he believes my word. \n\nEven so, my memories of Gino are not my foremost concern; I beat the magician in life and, given time, I will also defeat him in death. Already there are days when he does not cross my mind. There is another specter, however, that visits me every night, one that causes me to wake in a cold sweat screaming a pair of words. I tell Ricky it is my father I dream of and, considering the two words I cry upon waking, I am not surprised my husband accepts this story.\n\nBut, of course, it a face other than my father's I see in my sleep. This other haunting visage draws me on a chilly autumn afternoon to a Yonkers cemetery and the grave of Mary Alice Simmons. My eyes are wet before I've finished reading her name. The date on her tombstone is wrong, but I'm not surprised. I'm the only one left alive that knows when she died, and how. \n\nI sit with her for longer than I knew her; crying, mourning, remembering, reading her name time and again, trying to think of something to say. Only two words come to mind. \n\nSniffing back tears, I use my garden trowel to dig a small hole in front of her headstone. Into the earthen cavity I drop my tears, a few flower seeds, and a necklace; the last of these a once-magical band that was instrumental in the taking of her life, and the saving of mine.\n\n\"I'm sorry,\" I mumble over and over as I fill the tiny hole, praying with each breath that she will forgive me, and that I will forget enough of her to keep some of my sanity. I've had enough prayers answered to believe these will be too, though I have little hope it will be anytime soon. \n\nWith a final sniffle, I rise and walk away, back to what is left of my life, still unsure which of us is truly the magician's last victim.\n\nTHE END \n\nL'Assistente Del Mago\n\nCopyright 2005 by Penelope Street\n\nPosted with permission at Literotica.com\n\nAll other rights reserved.\n\nSpecial thanks to Sarah and Rob for their editing assistance.\n\nIn an effort to add flavor to the tale, I used a simple online translator to produce the non-English phrases. Kindly forgive me if the translations are less than ideal.\n\nThis is a work of fiction. To the best of the author's knowledge, none of the events depicted ever occurred. All characters are the author's creation. Their views, opinions, and experiences are invented as well and are not meant to promote anyone's personal beliefs or agenda. "
    ],
    "authorname": "Penelope Street",
    "tags": [
        "mind control",
        "supernatural",
        "nonconsent",
        "m/f",
        1950,
        "magic",
        1955
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-magicians-assistant"
}