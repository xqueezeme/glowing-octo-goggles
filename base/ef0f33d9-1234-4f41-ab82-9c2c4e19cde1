{
    "title": "Collared and Claimed",
    "pages": [
        "I wake with a jolt, the dream that pulled me from sleep already fading into the cool dark comfort of reality. His hand on my hip tightens protectively even as he sleeps and I smile at that. The comfort of his awareness of me, and of his strength, wrap around me as tightly as his grip and I sink into it momentarily. When I settle, he does too and the weight of his sleeping body against mine is all the temptation I need to stay here just a little longer. My eyes close and for a moment, I think I may drift off again, but the pull of my waking responsibilities has sleep dancing just out of my reach. I glance at the clock- it's late, nearly midnight, and I've lost too much time already. We didn't intend to fall asleep, but this certainly wasn't the first time we'd lost track of both the time and our energy reserves in favor of getting wrapped up in one another for an hour or six, especially when time together had seemed so fleeting lately. The last tendrils of relaxation unwind, replaced instead by the vice of stress that seems to linger in every waking moment these days. \n\nWith a soft sigh, I begin to extract myself from our nest. I glance at his sleeping form as I pull away, checking to ensure I've not disturbed him as I shifted away. In his sleep, he is relaxation personified. All the careful control of his waking hours has given way to softness in every feature and line. I kiss his cheek lightly before slipping off the bed and grabbing his shirt from the floor where we'd discarded it in a rush as we'd fallen into bed hours before. I shrug it on, not bothering with the buttons and instead using it like a robe as I pad quietly down the stairs toward coffee and my waiting mountain of work. \n\nThere's just enough light streaming in through the kitchen window to make a pot of coffee by so I don't bother turning one on. Normally, I'd busy myself around the kitchen while I waited but in an effort to keep the house quiet so he stays asleep, I lean against the sink and stare out the window at the stars. They're bright here, where the light pollution is low and at this hour, the dark of night is thick enough to make out some of the lighter stars in the constellations I've almost learned by now. \n\nWhen the coffee pot chimes its completion, I reluctantly pull my gaze from the endless wonder of the sky and pour myself some liquid brainpower. Returning the carafe to the counter, I grab my mug and begin analyzing my to-do list. \n\n\"It's too late for coffee.\" \n\nHis voice is playful and velvet-soft with sleep but entirely unexpected. I don't even register the mouthwatering sight of him leaning casually against the doorframe in nothing but his sleep pants as I whirl to face him. Instead, the momentum of my shock is enough for the steaming mug to slip from my hands. As it falls to the floor with a jarring crack, the splash of hot liquid against bare skin freezes me in place amid broken ceramic and spilled coffee. \n\nBut the same crack that stopped me in my tracks has him springing into action, all traces of sleep gone from his posture as alertness brightens his eyes. He is across the room before I can react, and stopping just short of the mess. \n\n\"Stay right there,\" he commands softly as he scans my body analytically. I wasn't planning to move but his tone and tenderness hold me in place. His gaze lingers on my calves, tracking over the worst of the coffee splash there. He crouches, navigating the broken mug as he reaches for a tea towel on the counter behind me and carefully dabs the liquid away to reveal tender pink skin. When he seems satisfied I'm mostly alright, he turns his attention to the mess. Luckily, the cup seems to have only broken in a couple places and the pieces are large enough to be picked up and discarded quite easily. \n\n\"I'd have let you drink the coffee, you know,\" he says teasingly with a glance at me as he reaches for the largest mug fragment, \"You didn't have to quite literally throw it away.\" \n\nThough I'm fully aware he's joking, my eyes go wide and I can't stop the rush of tears that well in them. His expression softens immediately and he reaches out, arms wrapping around me as he pulls me into his chest. I tuck my cheek against his heart and my arms wind around his waist, clutching him as the threat of tears becomes a reality and they rush down my cheeks. I'm not even really sure why I'm crying. Perhaps the adrenaline of the dropped mug, the startle of his sudden appearance or the lingering sting of the coffee. It's certainly not his words, but perhaps a mix of those things compounded on the stress of life and my general lack of sleep lately. \n\n\"Shhh, no no, it's alright. You're alright,\" he soothes, his lips against my forehead dropping a trail of tiny kisses as one hand runs through my hair gently, \"I've got you.\" \n\nAnd I know he does so I stop resisting and let the misplaced tidal wave of emotion pour out of me in the safety of his embrace. I cry, hard, amid the shards of ceramic and spilled coffee. He takes audible, even breaths, hands moving gently over my hair and spine in time with them. He holds me just like this until my silent sobs become soft sniffles and my breaths come in time with his. \n\nHe brings both hands to my jaw, tipping my face up to look at him as he drags the pads of his thumbs over my cheeks to wipe away the remaining tears with a reassuring smile, \"Isn't there a German proverb or something that says breaking a cup is a good omen? I think I read that somewhere, anyway.\" \n\nI smile, shrugging because I don't know a single German proverb. But of course he does. He's read most things somewhere, and I'm sure it's a proverb of some sort. My heart swells at the comfort he offers me, both physically and with his words. I reach up on tiptoe to kiss him, an impulsive wordless thank you that's just a gentle touch of my lips to his. Or it's meant to be anyway, but I am still clinging to his kiss when he gently nips my lower lip and my nails bite into his bare back in response. He groans into my mouth at the sharp sensation, and I'm gasping in the same instant so the deepening of the kiss is nearly involuntary as his tongue slides against mine. One of his hands still cups my jaw, holding me to him, but his pinky finger rests over my pulse and the other hand has found its way to my hair once more, tangling my curls around his fingers and tugging with a gentle, silent command- give in to me. \n\nMy response is nearly involuntary. The room has narrowed now to the two of us. His kiss suspends both my breath and reality in that moment, just briefly, as it always does before I slip into him. The perpetual undercurrent of his hold over me rushes to the surface, from a thing of being to a thing of doing. Just before it can pull me under though, he senses it. He pulls back, breaking the intensity of the kiss with a smaller one as he takes me in. My cheeks and chest are flushed, pupils dilated. \n\n\"Hey, kitten,\" his voice is light but his gaze is heavy on mine, as much a call back to reality as his words, \"Not yet. Stay here a little longer, okay?\" \n\nI close my eyes and nod. I will give in to him, he wants me to, but not yet. Not yet. \n\nThe whirlwind weight of reality and my emotions settle back over me, and the mess we are standing amidst snaps back into focus. Once more I am aware that it's the middle of the night, my to-do list is a mile long, and I'm painted in coffee that's drying on my skin. \n\nHe takes me in, all the disheveled mess and tear stains. All the stress and tangled hair from his hands in it, both now and hours before. If he looks close enough, he'll find the remnants of his earlier orgasm, dried on the insides of my thighs. But he isn't looking for that. He smiles softly, fingertips running lightly down my arms to take my hands in his. He squeezes them as he seems to consider what he wants to do next. \n\n\"Come back upstairs with me,\" he decides. \n\nI gesture vaguely at the mess with a weak, \"But-\" \n\n\"It's not going anywhere. It can wait. But this can't. Come upstairs with me.\" He cuts me off with certainty that leaves no room for my continued protests. \n\nReleasing my hands, he grips my waist and lifts me clear of the mess before returning me to my feet and dry ground to lead me up the stairs and back to the bedroom. It's dark and warm there, and still smells like sex. Moonlight barely illuminates the mess we made of the bed, the reminder of our earlier playtime sparking the embers of lust still glowing from that kiss just a few minutes prior. Well, truly from the heat always simmering when I'm with him, the slow burn he ignites in me that never quite goes out and catches like wildfire when he... \n\n... looks at me exactly as he is now. Fuck. \n\nMy breath catches first, on the heat in his eyes, and then the fire. He stands just a few paces away, gaze tracing my curves that are barely concealed beneath the open lapels of his dress shirt. \n\n\"Come here, kitten,\" the words aren't quite a growl but it's clear they're to be obeyed, and my body moves on autopilot toward him as he continues, \"On the bed.\" \n\nI move toward the bed and sit, pulling my feet beneath me to cross my legs, but he's shaking his head already. \n\n\"No. Not sitting. On all fours and take that shirt off. I want to see you.\" \n\nWithout hesitation, I adjust my position and do as he indicates. I push the open shirt down my arms with a brief shimmy and roll until my hands and knees are on the soft mattress, my bare ass in the air and my head turned to peek over my shoulder at him. Waiting for confirmation, or the next instruction, but already giddy at whatever is to come. Already feeling the slick, hot build of that pleasure between my thighs. \n\n\"Good girl,\" he praises, and he's closer to me now, close enough to touch me as he continues, \"Look at you. Bare for me already.\" His hands are warm and gentle as he palms my ass, and I fight the urge to purr at the contact. But the fight doesn't last when his hands continue down the backs of my thighs and a whimpering sound of pleasure escapes me as he pushes them apart gently. He runs one finger over my already aching pussy and I hear his answering growl when he finds me wet and swollen. His touch does not linger there and instead continues down the backs of my thighs to my calves. The warmth of his touch grazes over the coffee-pinkened marks first before he kneels at the edge of the bed to kiss them gingerly. \n\nThe touch of his lips to that sensitive skin melts me, and I begin to slip once more into that soft space where the world falls away until it contains only us. Only his touch, his voice, his command. He kisses up my calves, first one and then the other, taking extra care with the tender places as he moves toward my thighs. His hands map his intended journey and once more, he spreads my legs. I inch my knees apart, giving him space to work and the access he's silently requesting. My thighs shake when I do, but I am not unstable. This is the way it begins. The shiver in my muscles, the resistance of letting go. My body knows what's coming, the state of my mind always precedes it, and often it fights the loss of control even as I anticipate it. \n\nHis mouth moves further up the back of my legs, and then between them to the soft skin on the inside of my thigh. He nips me there. A calculated lick, suck and then captured skin between teeth until the tremors in my muscles stop, unraveling and relenting. A step closer to the surrender we both seek. I always assumed submission worked by way of force or command, but it's never been that way for us. My submission is a mental game, one he starts often without either of us realizing it, and it is whole when my mind and body are blank of anything beyond this moment with him. And we are rushing headlong toward that moment as his breath, hot with his own anticipation, fans over the apex of my thighs and still manages to cool the burn there. \n\n\"Oh love,\" he laughs softly, and my thighs spread of their own accord, \"You're soaked. I can almost taste you already.\" \n\nMy hips shift, rolling toward his mouth. I know he's close enough to do just that, and I want him to. I want his mouth on me. I need his mouth on me. \n\n\"But not yet. Wait here.\" \n\nHis words are a low growl, a taunting tease laced with all his desire and restraint. I bite back a whimper but he hears the effort, and when I peek back at him, his cocky grin tells me that's exactly what he wants. To break my efforts. To break me. \n\nHe retreats, and the ache from the withdrawal of his breath against my wanting skin a loss I almost cannot bear as he gets to his feet and towers over me. Anticipation rolls up my spine. Uncertainty and excitement war for dominance in the wake of that thrill, but I'm not sure why they bother. The dominance in this equation is his, and soon it will belong solely to him, just as I will. As I do. \n\nHe turns away from me and walks toward the closet. Or maybe the bedroom door, I can't quite tell. When I turn to look, his back is to me and he is rummaging with something on a shelf between the two. My brow furrows. It's not often there is anything that can take his attention off our game once we've begun and I am briefly annoyed at whatever interruption has done so. \n\nVery briefly, though, because as he seems to find what he's looking for and he's returning to me, the look on his face is one I've not quite seen before. One that turns my blood from hot to molten. \n\n\"My beautiful girl,\" he says as he approaches the bed once more.\n\nMy pulse kicks up, the intensity matching the heat burning through my body. He sits next to me, one hand tucked out of sight as the other gestures toward his lap. I meet his gaze, and when he nods slightly, I crawl toward him until my thighs are draped over his. I can feel his hard cock through his sleep pants against the softness of my bare thigh and as much as I'd like to shift against him to try for a reaction, I remain still. Watching. Waiting. But once more, he does not keep me waiting long. One arm wraps around my waist, his knuckles dragging up my spine with aching deliberation. The other goes to my cheek, and then into my hair. \n\n\"You've worked so hard lately and been so stressed. You're not taking care of yourself very well but you've been such a good girl. And good girls get rewarded. This isn't precisely what I'd planned, but I think you need a special reward tonight.\" \n\nHis eyes search mine, gauging my response and curiosity, and in his searching, I sense a bit of nervousness. Hesitancy. Whatever he's up to means something to him, and butterflies take flight in my tummy. The knuckles he's dragged so slowly up my spine stop at the base of my skull and when his hand opens, I feel something cool and unfamiliar against my skin. The sensation drags across the back of my neck, over my collarbones until his fingertips rest on my throat briefly before he pulls his hand back. He opens his palm entirely and I see for the first time what he holds. \n\nA collar. \n\nA supple, rich leather and fine silver collar lay curled in his palm. A thin chain hangs from the sturdy but elegant clasp, and a decorative but functional loop adorns the center. \n\nMy breath catches, and tears spring to my eyes once more, but this time they are tears of shock and joy, and they do not fall. \n\n\"Oh,\" I say. Or at least I think I say. I'm not sure if sound comes out, but I feel my mouth take on the shape of the word and when it does, I see him relax. The nerves fall away and the game is in play once more. \n\n\"You haven't been taking care of yourself lately, but that's alright because I'll take care of you. Can I put this collar on you, kitten?\" his voice is low and dripping with intention. \n\n\"Yes.\" \n\nHis satisfaction at my acceptance is as palpable as his excitement. One hand holds the collar and the other grips my shoulder, turning me just slightly on his lap before he tenderly brushes my hair to the side. He gathers and twists it out of his way as best he can before slipping the delicate but deceptively strong leather across my skin slowly. \n\n\"There,\" he says softly as he fastens the clasp, securing the collar around my neck with the same certainty he's secured his claim over me. He is grinning now, joy briefly overtaking his other emotions as he grips my head and pulls my mouth to his. He kisses me deeply, sweetly at first, but when he murmurs, \"Mine\" against my lips, the fire that seemed sated in our tender moment comes roaring back to the forefront. I shift in his lap to meet his kiss, thighs splaying so I'm straddling him and the press of his cock is aligned with my ache for him. \n\nThat word, in combination with his actions and the careful intention of this moment, unravels the last of my grip on my control and my tumble into submission is abrupt and entire. The shift in me is palpable in the air around us as it grows thick and heavy with my need- both for him, and to please him. \n\n\"Daddy,\" I whisper, and when he registers the word, his need matches mine with a predatory growl. He breaks the kiss and hooks a finger into the ring on my new collar in one fluid motion and he tugs lightly. \n\n\"Yes, kitten.\" he replies. \n\nMy only response is to grind against him, my hips pressing my needy bare pussy against his cock through the single layer still separating us. I whimper at the friction, and he laughs. \n\n\"I can feel how wet you are through this fabric,\" he teases, \"So before you soak it, what do you say we get it out of the way?\" \n\nMy wordless enthusiasm is conveyed by the spark in my eyes, the nod of my head and my knees pressing into the mattress to lift myself off him so he can remove the offending barrier. He does so, and in my haze of need, I waste no time reaching for his now freed cock. My grip is light but certain as I stroke him and angle my hips once more, prepared to sink myself down onto his hard length. He groans, eyes closing briefly as he twitches in my hand, but shakes his head. \n\n\"Not yet, kitten. I want to play with you.\" His hand closes over mine and he slides them both down his shaft, brushing his thumb over the tip of his cock as he goes and bringing our joined hands up to press his thumb against my lips lightly, \"But you can taste the mess you're making already.\" \n\nI do so, greedily sucking it into my mouth and lapping at it with tiny flicks of my tongue so I don't miss a moment of the salty rush of him. I pull my cheeks in, the force of it pulling his thumb all the way into my mouth and sucking it just like I would his cock. He growls softly, hand framing my jaw and fingers splayed across the side of my neck. The kick of my pulse is apparent beneath his middle finger, and I feel the flex of it there when I make a sound of pleasure around his finger. My eyes are closed, heart pounding with need and all my senses focused on the lingering taste of him on my tongue.\n\nNeed rushes through me, seeping into every cell of my body until I am nothing else. Until I am consumed by the drive to touch and be touched. By the pleasure that exists only when I give myself over to him like this. My hips are still raised and I lower them, not seeking to pull his cock inside me- no, I want to be a good girl, and he told me to wait- but looking for a tease he has not yet forbidden. I bring my body down on his slow and deliberate, the dripping folds of my pussy settling along the underside of his cock that I've trapped between us like this. I roll my hips slowly upward, the tease of my wetness on him an equal match for the friction of his hardness against me. We both groan, and he drops his head to my shoulder to suck in a sharp breath before he begins kissing a path across my neck and shoulder. Messy short kisses, peppered with nips and sucks designed to heighten sensation and leave the lightest of marks across my sensitive skin. The kinds of kisses that I love, that have me throwing my head back, grinding against him a little harder and running my hands through his hair with short, sharp tugs. ",
        "He pulls his thumb from my mouth with an audible pop, and the sound combined with the slick slide of our bodies against one another is a gloriously filthy precursor of what's to come. It brings a fresh wave of desire spiraling through me, hot and urgent as his hands run through my hair before settling on my hips. His iron grip stills me immediately and the loss of friction in the stillness combines with the absence of his thumb in my mouth to pull a whimper from somewhere deep inside me. My desperation only steels his resolve and he lifts me off him, setting me on the bed next to him and pressing me back gently. He shifts as he gently guides me up the mattress until he's hovering over me, eyes flashing with the same need I know he sees in mine. \n\n\"You got to taste me, so I think it's only fair I'm afforded the same, don't you?\" He's asking, but it isn't a question. He kisses his way down my body, lingering at my collarbones briefly before licking a trail of hot-tongued desire toward my breasts. He palms one, rolling a nipple between his fingers and tugging as his mouth closes over the other. He spends time lavishing attention before switching breasts and continuing his sweet torture. When he tugs my nipple with his teeth, my back arches as a gasp tears from my lungs. My entire body is hyper focused on the places he's touching me. On the building need, and the slow burn inferno of his tease. \n\nMy patience is waning, not that I ever have much to begin with, but the intensity of this moment feels like too much for me. I close one hand over the back of his neck, holding his mouth to my nipple. With the other, I reach down and dip it into my drenched pussy. I touch myself briefly, biting my lip at the sharp wave of pleasure when my fingertips trail over my clit before I bring my hand up once more and tug his hair, pulling his head up and away from my breast. His gaze flashes with irritation as he meets mine, and I hold my wet fingers up toward his lips, ever so slightly swollen from his attention to my body. \n\n\"Here, taste me\" I say urgently, my voice barely a whisper and rough with desperation, \"while you fuck me.\" \n\nI feel his body tense at the raw need in my words, his eyes going impossibly darker. It's a challenge, a bratty move I'll likely pay for but I'm nearly out of my mind with want and unconcerned with the consequences. I watch him, breath and fingers each held still in anticipation, and I think at first that he might deny my offering. But then I feel a drop of precum fall from his cock onto my thigh and I have some hope. His control is good, but the tautness of the effort is apparent in every line of his body, and I hope his desire for me will win. \n\nIt does. His grip wraps around my wrist, hot and abrupt as he tugs my fingers into his mouth and sucks them clean as greedily as I had his. He runs his tongue up between them, nips at their tips before kissing them as he pulls them from his lips with a soft hum of appreciation. His eyes open, glazed with wild desire just like mine for a brief moment before he regains his control. \n\n\"If you're in a hurry, kitten, I can certainly make this quicker,\" he tells me with a casualness that belies his tension. He sinks back on his heels, and my gaze falls to his cock. He is hard and dripping, visibly throbbing even from where he kneels between my splayed legs. \n\nHis hands rest on his thighs briefly before he reaches for me, gently letting his fingers roam over my hips and down the outsides of my supple thighs before he hooks them behind my knees and presses my legs forward toward my chest. As he does so, he leans forward as well and I can feel the heat of the head of his cock brushing softly against my pussy before he speaks.\n\n\"But quicker means rougher. Harder. Relentless. Is that what you want?\" he growls as he strokes himself, pausing at the end of the question to tap his cock against my clit once. \n\nI shudder with the contact, and nod without a moment's hesitation, \"Yes. That's what I want.\" \n\n\"Then, kitten, that is what you shall have.\" he says with an evenness that seems to use up the last of his restraint. The last word has barely left his lips when he presses forward into me, the thick tip of his cock spreading me open. I am slick, hot and beyond ready for exactly that though, and my body welcomes him. My pussy clenches around him, every muscle working to pull him into me as my nails drag down his back with just enough bite to encourage the same. \n\n\"Fuck,\" he swears as his hips meet my ass, his cock as deep inside me as he can go, and he stills for a moment, dragging in a ragged breath. \n\n\"Yes please,\" I whisper teasingly, and it only spurs him on.\n\nMy words land as a challenge and his stillness becomes a frenzy as he pulls back just to slam into me once more. With one hand, he holds my knees up, thighs firmly pressed together so that there is little give with his cock filling me, and he must push hard with every thrust to get deep. With his other, he toys with first one breast and then the other. He fucks me hard, my whimpered moans mixing smoothly with the sounds of his hips slapping against my ass and the slick slide of our skin and filling the room with the obscene soundtrack of our pleasure. \n\nThe only thing more relentless than the bruising pace of his fuck in this moment is the force of my desire for just that. When my whimpers turns to desperate begging, my breath a ragged symphony of pleases falling from my lips, the hand at my breast moves to my throat, two fingers hooked in the loop of my collar as he applies pressure. He pushes my knees just a bit harder into my chest and when he does, we both catch the telltale clenching of my imminent orgasm. I worry briefly if he's going to make me hold it back, deny me release given my bratty commentary, but when the rhythm of his hips against mine stutters just a bit, I know he's too close to ask me to hold back. I know he won't come first, and I'm not sure how much longer he can wait. \n\n\"Come for me, kitten. Come now.\" He commands, his words a gasp punctuated with a couple tugs on my collar and that's all the encouragement I need. \n\nI come, my hips grinding of their own accord against his, muscles clenching wildly as I cry out his name and soak his cock. My orgasm seems to drag on for a small eternity, my cunt gripping and milking his cock, my body both shouting its own ecstasy and begging for his. I don't have to wait long for the second, though, as I have barely caught my breath when his rhythm changes, sharpens, and he groans. \n\n\"Fuck, fuck, fuck,\" he swears, voice strained and muscles tense. \n\n\"Come for me, daddy,\" I gasp, and that pushes him over the edge. His cock swells and jumps inside me, his hips slamming into me hard and fast as he pours his possession into me with every thick rope of cum. He comes hard, my body still spasming lightly to milk every drop of his pleasure and claiming it as my own. \n\nHe releases my knees, my still-quivering thighs splaying automatically so he can lower himself between them. He keeps his weight off me just barely as his body comes down on mine, sweaty chest pressed against my still heaving one as he reaches for my mouth and kisses me. His fingers are still hooked through my collar, as we catch our breath in one another. \n\nWhen he breaks the kiss, he trails tiny ones over my cheeks and the bridge of my nose before bringing his forehead to rest against mine. We are both still breathing heavily, but our bodies are slowing and stilling in one another. \n\n\"That,\" he tells me, \"was fucking fantastic.\" \n\nI laugh at the simplicity- and the accuracy- of the statement as he pulls his fingers gently from beneath the collar and reaches for my hand. He twines our hands together and, with one more kiss, he rolls off me, bringing me along with him by way of our conjoined hands until he's on his back, and I'm on my side, poured into the contours of his body. He wraps his arms around me, kissing my neck as he smooths my hair and looks me over. He meets my gaze, seemingly searching for something. \n\n\"You alright?\" he asks softly, and I nod. Of course I'm alright. In fact, I'm not sure I've ever been more alright, but I can feel sleep tugging at me once more and the weight of responsibility feels a thousand miles away in the warmth of this afterglow.  \n\n\"Good,\" he smiles softly and cuddles in closer. We lay like this in quiet serenity, the most notable sound being that of our breath evening out until it becomes an effortless matched rhythm. I am content to take him and this moment in, letting them both wrap me up.\n\nIt's a long while before either of us speak again, but when he does, his words are a soft reminder that adds to the cozy cocoon we've created for ourselves. \n\n\"Can I get you anything?\" his fingertips trace lazy patterns down my arms and his brow furrows with concern when I don't answer immediately, \"Water? Tea? Anything you want, beautiful, I've got you.\" \n\nI sigh, both with pleasure at his words and the awareness of what we should be doing. We should get up. I should work. We should clean the mess in the kitchen. There are a thousand answers I should give, but really only one thing that I want: him. I just want him to stay right where he is, with the steady beat of his heart beneath my head and the comfort of his arms wrapping me up in the softness of night where nothing matters but being right here, right now. \n\n\"No,\" I say softly, my voice already taking on a dream-like quality as I begin to succumb to the sleep that eluded me earlier, \"Just stay with me.\" \n\nI feel his smile against my skin, and it makes me smile too. \n\n\"Your wish,\" he brings two fingers under my jaw and lifts my chin to kiss me softly. As he settles into the mattress, I settle into him, \"is my command.\""
    ],
    "authorname": "Lemonletters",
    "tags": [
        "aftercare",
        "collar",
        "d/s",
        "daddy",
        "dominant",
        "female sub",
        "kitten",
        "male dom",
        "restraint",
        "submissive"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/collared-and-claimed"
}