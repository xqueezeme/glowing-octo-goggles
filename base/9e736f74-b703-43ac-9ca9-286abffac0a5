{
    "title": "The Christmas Curse",
    "pages": [
        "I deliberately went in a completely different direction here, just to try some things. This has no connection to any other stories, and I probably should have held it to Christmas, but, what the hell, I could get run over by a bus or eaten by zombie armadillos before then. I typically don't write graphic sex into most of my story lines, but that is not true of this particular one. This story contains a lot of very graphic solo, exhibitionism, toys, lesbian, straight, group and a bit of fantasy. It could fit in a lot of categories, but I think humor is the most consistent theme. Special thanks to Sbrook for the editing and Beta reading it for me. Any remaining errors are entirely mine -- probably added after his assistance. And thanks to everyone for the encouragement and support.\n\nThe Merry Misadventures of the Christmas Cursed\n\nThe Curse\n\nJoAnne forced her way brusquely through the dense crowd toward the Thai place on the corner. Lord, she hated holiday shopping -- screaming brats, the jarring sounds of ringing bells, the constant fucking \"gimme, gimme, gimme\" of the damn \"charity\" workers. As if they weren't really there to guilt you into forking over the goddamn money. And all these fucking people just kept on bumping against her, wrinkling her $2000 black skirt and jacket power suit. Didn't they have somewhere to be, didn't people work anymore?!\n\nJust as she broke free of the crowd, she half-ran-into and half-plowed-over a diminutive blonde girl in some kind of Christmas outfit, sending packages skittering across the frozen ground and knocking the mini-skirted kid on her ass. Great, what the fuck was a kid doing out in the middle of the day anyway... JoAnne stopped. From the size of her boobs, this was no kid -- a midget?\n\nCrap, they used something else now, like small person or some shit....\n\nThe blonde glared at her through her skewed hair while she straightened her tilted elf hat for a second, then caught herself and smiled, although, honestly, it looked a little more like she was gritting her teeth. \"Merry Christmas, huh?\"\n\nJoAnne rolled her eyes and started to walk on.\n\n\"Hey! Aren't you going to help me get all this shit picked up?\"\n\nJoAnne looked over her shoulder at the flustered little blonde. \"Fuck off, I'm busy\" and pushed her way into the Restaurant. Finding her way to her usual seat, as she brushed her short, platinum blonde hair back, she sat and pointed at the waitress who immediately ran to the kitchen to get her order started and get her a damn drink. JoAnne pulled out her blackberry and started to pull up her emails -- about 10 seconds later her system froze. Shit.\n\nThe chair across from her pulled out.\n\nWithout looking up, JoAnne growled. \"I don't need any company, and I need space to work. Fuck off.\" Even with her cold demeanor, her pale skin, white blonde hair and blue eyes drew more attention than she'd ever wanted.\n\nNothing happened. When she looked up, the tiny honey blonde from outside was leaning back in the chair, staring at her with her arms crossed under her outsized boobs. She looked a like a distinctly adult-oriented version of an elf -- long blonde hair, pointy ears, a micro-miniskirt and a huge rack that barely stayed in her costume. Despite the rosy cheeks and turned up nose, though, the twinkle in her eyes looked extremely icy.\n\nJoAnne sighed. Oh well, if the little bitch wanted to be a problem, she'd have her thrown out. She started to look around for a waiter, then realized nobody was moving. Nobody at all. Inside or in the vast crowd outside. No sound. Everything was frozen. She looked back at the girl, who slowly arched her left eyebrow in an overly dramatic fashion.\n\n\"Look Sister, I'd tell you not to do anything stupid, but that would be wasted effort. You can't do anything, you're stuck in that chair until I say otherwise. Elf. Christmas. Magic. Bitch.\"\n\nJoAnne started to protest, but her mouth simply froze as the Elf raised her hand.\n\n\"Don't bother. This isn't a dream. You didn't fall and hit your head. You haven't even had a drink today yet. And it sure as fuck-all wasn't that nasty bran concoction you had for breakfast. On your salary you eat sawdust for breakfast? Fuck, eat a good breakfast and spend five more minutes on the damn elliptical.\"\n\nShe waved her hand and JoAnne found she could speak again. \"Look if you want an apology...\"\n\nThe Elf cut her off again \"It wouldn't be sincere and you wouldn't learn a god damn thing. Don't bullshit me, Baby, I'm a whole lot older than I look. Besides, I have your file.\"\n\nShe leaned back, reached two fingers into her ample cleavage and pulled out an ornate, gilt edged scroll, untied it and began to read over it: \"Let's see... JoAnne Steadmann, age 32. No personal relationships. Wow, that sucks. You seem to have a severe case of Greed, brought on by a Self-Centered Nature and a Lack of Human Empathy, which seems to have developed around puberty....\" Her voice trailed off as she read more.\n\nThen: \"Damn!? You're Frigid? No Orgasms? No wonder you're a grade-A Bitch! Hell, I wouldn't wish that on anyone! Got your cherry popped in High School, but didn't enjoy it at all. And you didn't even experiment at Wellesley? Damn that's like the lickety-slit capitol of the world. You missed out on a whole lot of the sweet stuff there, Baby.\"\n\nJoAnne just glared at her. Whatever the hell this was about, the little blonde bitch had no right digging into her personal life.\n\n\"On the bright side you're not entirely freaked out by this, and that's rarer than you think. Too many people have lost belief in Christmas magic; they can lose it completely when shit like this happens. You're pretty enough in platinum-blonde-career bitch sort of way. And, according to Records Division, you never developed any real sex aversions, so that's good....\"\n\nShaking her head, the Elf hastily re-rolled the scroll, tucked it back between her oversized boobs, then leaned forward looking intently into JoAnne's eyes. \"I can fix this -- but I have to follow the rules. I'm not allowed to just go around helping humanity -- free will and all that shit. But I can inflict a Christmas lesson on you because you denied the True Meaning of Christmas. You were rude. To an Elf. Within the Fortnight of Christmas.\"\n\nJoAnne leaned back in shock. \"Is this going to be one of those ghosts things? I...\"\n\nThe Elf shook her head \"Ghosts wouldn't help you at all.\" She paused. \"God, I love that one, it's a classic but it won't work here. I am giving you the gift of Lust. I am removing most of your inhibitions -- the sexual ones anyway and 'cursing' you so that at least once a day until Midnight on Christmas Eve, you're going to find yourself in a situation that ends up in sex of some kind or other. Nothing dangerous, nothing that will destroy your life. You may end up feeling a little used and a bit humiliated, but you'll like it. Besides, a little humility would do you a lot of good, Sunshine.\"\n\nJoAnne felt her anger flare \"Nobody uses...\" And just as quickly found herself muted as the Elf stood up.\n\n\"Alright, let's get this show on the road, I've got some fucking Joy to spread by the end of the day. Gimme the panties, you won't be needing them.\"\n\nJoAnne tried to resist, but found herself standing, reaching under her skirt and pulling off her black silk underwear and handing them over.\n\nShe watched in disgust as the little Elf held them up to her nose and breathed in deeply. The Elf shook her head sadly and looked at JoAnne. \"Nothing. Just Fabric softener and soap. You really are Frigid. I'm fixing that right now.\"\n\nShe stepped over to JoAnne and reached up under her skirt. JoAnne felt the Elf's very warm hand cup her crotch.\n\nThe Elf looked her in the eye \"Damn. Closed up tighter than a bank vault.\" She rubbed her palm back and forth for a second. \"Ah, there it is!\" JoAnne's knees nearly gave out and she almost fell to the ground as she felt something hot surge through her whole body, but the Elf steadied her and guided her back into her seat.\n\nAs Joanne watched, the Elf licked her fingertips delicately. \"Much better.\"\n\n\"That was your First Orgasm. It's been sort of stuck in the gate for a damn long time. It was a little weak from the time attenuation, so the next time it will feel better.\"\n\nJoAnne stiffened. \"B...better?\"\n\n\"More powerful, longer.\"\n\nJoAnne couldn't even imagine that. The Elf continued on without really noticing JoAnne's reaction.\n\n\"Here's the deal, you get a little something every day, each day gets a little more extreme and a little more intense. I've used this one a lot -- it was practically standard in Vicki's day -- Queen Victoria. It will be a real experience, but you can handle it. Still, if it gets to be too much, call my name three times -- its 'Holly Mistletoe\" and I'll pop in to help. If you really need it.\"\n\nSuddenly, with a sound like a balloon popping in reverse, Holly was gone and everything was in motion. The waitress rushed up with her drink -- which she drank in one gulp - and her food arrived almost immediately. She managed to catch her breath and tried to act normal, although she just didn't have it in her to bitch at the waitress for being too slow like she usually did. She even caught herself leaving a much larger tip than usual. She must be shaken up.\n\nThe Tattoo\n\nJoAnne slipped into her desk -- the walk back had been weird. She'd been so damn conscious of not wearing any underwear, and she normally never thought about... that. And she felt almost feverishly warm, with everybody bumping into her. She kept wondering if they somehow knew she was panty-less. Worse yet, she guiltily realized she kind of liked the idea. She had practically run by her new red-headed secretary and locked herself in the office. She started to buzz the secretary. With a start she realized she couldn't remember her secretary's name. She had just gotten rid of Samantha, the brunette -- JoAnne never kept a secretary very long. She was concerned about secretaries learning too much about her -- shuffling them back into the secretarial pool after 6 weeks or two big deals.\n\nWhat was the name of the name of the new one... thin, red hair, pixie cut, pointy nose... Lori? No. Lisa? No. Lil... Lillian.\n\nThat was it.\n\nShe punched the intercom on her phone. \"Lillian, could you bring me a glass of water please?\" A somewhat puzzled, \"Yes, Ma'am,\" came back. Which made sense, after all, JoAnne never asked for anything, she ordered things, and she never, ever said please. Lillian quietly and efficiently brought her the water, then stepped out. As she left JoAnne watched her butt sway under her cream colored skirt. It was awfully perky and cute.\n\nJoAnne squeaked.\n\nShe never, ever thought about things like that. She felt warmth growing between her thighs, more and more intense, like an itch that needed a scratch, but much, much more... personal. She shifted and tried to concentrate on work, but the only emails she had were autoreplies informing her that the recipients would be back after Christmas break. A curious tingling was growing just above her privates. She frantically pulled her skirt up and looked down. All her pubic hair was gone, except for a neatly trimmed patch just above her slit in the shape of a holly leaf. Even more of a shock, just to the left of it was a tiny incredibly intricate tattoo of a mistletoe ball on crossed candy canes. She could just make out the words \"Christmas Magic. Bitch.\" woven into the mistletoe. Shit. Shit. Shit. How the hell do you explain that to your gynecologist?\n\nMaybe it was one of those stick on tattoos, she could just rub it...\n\nThe second she started rubbing, she knew she'd made a mistake. The feeling shot over her like arcs of electricity -- she felt her lips go numb, her legs began to shake and her nipples grew achingly hard -- she could make out the tips through the fabric of her blouse.\n\nShe wanted to stop, she really did, but she couldn't -- her fingers were playing with her lips and clit almost instantly. Without stopping, she managed to pull her skirt up around her waist and pull open her jacket and shirt. She couldn't get the fucking bra off, but while she massaged her clit she reached inside the bra and began to pinch and tweak her rock hard nipples. She was so wet that her fingers slipped inside without her even realizing it. First one, then a second. She felt her orgasm hit like a train, then a second, then a third, leaving her gasping, barely able to move in her slowly rotating chair. After a few minutes she rearranged herself into some semblance of order, although her shirt and her jacket were each missing a button. No surprise there. Still, she felt better than could ever remember feeling; relaxed, warm and comfortable. She managed to make it through the next few hours, before she decided to leave. Lillian was watching her curiously; not too surprising since she never left before 5:00.\n\nJoAnne heard herself say, \"Go ahead and take a couple hours, you probably have some Christmas shopping to do or something.\"\n\nThat got a warm smile and a \"Thank you\". The rest of the evening was normal, although she did finger herself -- just a little -- in the shower.\n\nThe Package\n\nThe next morning, as JoAnne dressed for work, a number of things became obvious. First off, most of her clothing was missing -- not one bra or panty was in the condominium. Even the bra she'd had on yesterday had disappeared from the hamper. There was a card sitting on the kitchen island -- from Holly -- advising her that she would \"get those Manhattan Career Bitch costumes back later\" if she still wanted them. All her severe black suits were gone as well; they were replaced with very expensive looking red silk suits of a similar type with slightly shorter skirts and sheer white silk blouses with decidedly more \"decisive\" necklines. Her shoes had changed too -- color and about an inch more heel, although they proved surprisingly comfortable. The morning passed fairly productively -- with only a couple of odd glances from Lillian. To be on the safe side, she decided to order lunch in the office, but it was almost two in the afternoon before anything happened.\n\nLillian buzzed: \"Miss, there's a bike messenger with a package; he says I can't sign for it.\"\n\n\"Send him in.\"\n\nA tall, muscular, dark haired guy with a small, brightly colored box walked in. \"Sorry, instructions were explicit, you'll have to sign for it.\"\n\nJoAnne sighed and reached for the box -- as soon as she touched it, one end popped open and something fell out onto the desk. A vibrator. An enormous, brightly colored vibrator. And of course it hit right on the on/off button. She and the messenger watched it buzz around in a circle on her desktop for a long second before she grabbed it and fumbled it off.\n\n\"I, uh, this friend...\"\n\n\"No problem. Short blonde woman -- she looked like a joker, all dressed up like an elf. Had a hell of a smirk. I figured it was some kind of practical joke.\"\n\nJoAnne watched his firm butt as he left. Lillian followed her gaze as he walked out.\n\n\"Just want to bite that and hang on.\"\n\nInstead of admonishing her to be more professional, JoAnne found herself nodding and smiling like an idiot. She suddenly caught herself, then hastily shut the door and retreated to her office.\n\nThe vibrator stared at her from the center of her desk. It was red and white striped, of course. About 8 inches long, had little gumdrop-like rubber nobs all over it and a bullet like tip of gold metal. She decided to stick it in a desk drawer. Another mistake. As soon as she picked it up, the tingling between her thighs began again, and she couldn't physically put the vibrator down.\n\nShe reached with her empty hand and clicked the intercom on the phone.\n\n\"Lillian. Hold my calls.\"\n\n\"Yes, Miss.\" There was something in Lillian's voice, but JoAnne realized she didn't have time to deal with it -- the tingling was so intense it was almost painful -- and she felt like she was suffocating in her suit -- it seemed like her clothes were lined with lead weights. She fumbled her skirt off and opened her blouse and shirt, exposing her tits to the cool office air. Her nipples were standing out like fucking spikes and she could feel wetness between her thighs.\n\nGood Lord. Her pussy was absolutely dripping. JoAnne clicked on the vibrator and began to run the tip over her excited nipples. She moaned loudly -- it was a damn good thing the office was soundproof. Fuck, that felt amazing. She licked her fingers and got her nipples really wet so they stiffened even more with the cold and the vibrator. Damn, how long could they get?! Her breath was coming in short pants as she slumped in the chair, and hooked each leg over a chair arm, spreading herself wide open.\n\n\"F-F-F-Fuck, fuck, fuck!\"\n\nPinching her nipples with her free hand she ran the vibrator all over her inner thighs, eliciting more hot juice from an already wide open and steaming pussy. When she couldn't wait any longer, she began to run the tip of the vibrator over her pussy lips -- she planned to do it for a while, but when the tip hit her swollen clit, she spilled over into orgasm, screaming as quietly as she could.\n\n\"Yes. Yes. Yes. YES!\"\n\nAs the spasms died away she meant to put the vibrator down and get dressed but her hands seemed to have minds of their own - her free hand spread her pussy lips wide open while she danced the vibrator in and out, just an inch or so -- then she plunged it into the gaping hole, screaming loudly as the orgasms exploded through her. Even then, as she pulled the wet shaft out of herself, her hand seemed to slip and the tip slipped down below her slit, resting against her butthole. The vibrations felt good. Surprisingly good... almost... she felt another orgasm building. This time she did it -- she began to frantically rub her clit with her free hand while she gently pushed the tip of the vibrator into her butt. By the time this orgasm settled, she realized had three fingers up her twat and had shoved the vibrator into her ass almost four inches. Still though, she felt in command enough to stop. She switched off the vibrator and shakily dressed herself, thanking God for soundproofing.\n\nAfter she caught her breath, she dropped the vibrator into her purse and clicked the intercom.\n\n\"Lillian, you, uh, can resume forwarding my calls.\"\n\n\"Yes, Miss.\" Very definitely a smile in her voice. Fuck her, all she could do would be to spread rumors, and if she did she would be back in the secretarial pool without the executive bonus pay.\n\nThe rest of the day passed quietly and she decided that on her way out she would feel out if Lillian was going to say anything. As she stepped out the door she watched the cute redhead suppress a wicked little smile.\n\n\"Lillian, I thought it would be a good idea...\"\n\nLillian intercepted the thought \"...to remind me that secretaries do not discuss their bosses activities with anyone at all. It's in the confidentiality agreement we sign when we get sent up from the pool.\"\n\nAt first JoAnne was appalled that Lillian would cut in like that, but she decided to try to be nice; a very different tack for her.\n\n\"Ummm, yeah. I just didn't want any rumors to, you know, start.\"\n\nLillian smiled mischievously. \"I won't say anything to anyone, but maybe next time you might want to completely shut your blinds. And maybe turn off the intercom. Luckily, I was on headset. I don't mind sharing, yesterday sounded great. Today sounded exquisite and looked even better... but if you want privacy...\"\n\nJoAnne stared at the communication window to the office -- it was open nearly a foot. She was sure it had been closed yesterday -- and she was the only one with a remote for it. Even the intercom could only be turned on from inside the office. She must have left it on when she... she began to turn bright red, then raced from the office.",
        "The Glass Elevator\n\nThe next day was Saturday, her only real day off this week -- Sunday was a teleconference with Japan from the office, so she had to go in. She stayed burrowed into her bed almost until noon -- she just couldn't figure out what to do about the office. If she stayed in her apartment, she might end up masturbating, but at least she would be doing it without an audience. Just the thought of Lillian listening to her and watching her made her feel... uncomfortable, but somehow it didn't feel as bad as it should have, which worried her even more. She finally had to get out of bed to pee -- and of course, her pajamas had disappeared overnight. She went to put on a robe at least, but the only thing in the apartment was a red skirt and white shirt combo that looked like they might be made of tissue paper, and a dark red overcoat, a bit too warm for the apartment, but suitable for the snow outside. And of course, red fuck-me shoes. After a moment of irritation she pulled on the skirt and shirt -- she might as well have been walking around topless for all the shirt covered her tits, and the skirt was about one centimeter below her ass cheeks. She went over to the refrigerator -- not one stick of food. Damn. Her cell battery was dead -- she'd apparently forgotten to plug it in. By the time she lifted the receiver on her house phone, she wasn't surprised to find the line dead. She sat down in her easy chair and turned on the TV. She would just wait it out -- the phone line would be back soon. Four hours later, with her stomach complaining, and only cooking shows on, she gave up. If she just zipped downstairs, she could grab some food at one of the trendy-take out joints and be back up in fifteen minutes. She looked in the mirror. A class A slut stared back at her -- nipples obvious through the shirt, skirt so short it should be illegal. Looked kind of yummy in a way though. She grabbed the bulky wool overcoat and buttoned it completely. Key card. Wallet. She headed out. The internal elevators were out, so she took the glass elevator on the outside of the building -- she could see the whole city -- the crowds of people looking up at the elevator as it came down. It didn't take long to get her Cuban sandwich and head back. Which was good, the coat was a little warm, even with snowy weather. As she neared the elevator, she heard a familiar voice.\n\n\"Trying to hide today?\"\n\nJoAnne whirled. Holly was perched on a concrete stanchion toying with an oversize Santa hat.\n\nJoAnne started to speak, but a wave of Holly's hand cut her off mute.\n\n\"Take the hat, you'll need it.\" JoAnne grabbed the hat -- and with the same odd reverse pop, Holly simply vanished. JoAnne sprinted for the elevator -- this couldn't be good.\n\nGet home. Get home. Get... <br >\n\nThe now familiar tingling almost overwhelmed her as the elevator door closed.\n\nShe jammed the oversize hat on her head and slipped a hand inside the overcoat to push the skirt up and found... nothing. No skirt, no shirt -- her clothes had evaporated. She couldn't stop to fight it -- she began fingering herself furiously, three fingers slipping into her hole almost instantly. As the elevator crept up, she realized her coat was evaporating like smoke. She felt tears form as the elevator ground to a halt just three floors up -- she was fully visible to the crowd. A crazy naked woman masturbating in an elevator wearing nothing but a hat -- a hat, she was relieved to note, that obscured her hair and face completely. People were stopping to stare -- to her horror she realized she liked it -- hell, she loved it! A middle aged man pulled out a cell phone and snapped her picture as she managed to fit a fourth finger up her gaping pussy. Hot cunt juice flowed over her hand -- she began to cum, over and over, thinking about all those people watching her. At some point the elevator began to move upward -- just in time as an old lady dragged the building's doorman around to see. Snow thickened around the building, obscuring the ascending elevator. It stopped a floor below hers and refused to move further. She grabbed her purse and food and crept up the stairs -- the security camera lights were dark -- probably thanks to Holly. She managed to slip into her apartment, although she had had to hide in the stairwell while three people walked by. Once in her apartment, she collapsed on the bed, just in time to hear her email ping on the computer. She almost ignored it, but the timing...\n\nThe email was from  -- and it was a video entitled \"Mystery woman puts on Christmas show.\" With a sinking heart, she opened the file and watched herself masturbating in front of hundreds of men and women, wearing just a Santa hat. According to the file, nearly 500,000 people had watched the video. Half a million people watching her?! This time, she was pretty sure it wasn't Elf magic, but either way, she spent the next hour with her new vibrator buried in her pussy, pumping it like a jack hammer. She wasn't sure how many orgasms she had -- one helluva lot. She managed to eat her food, then sank into a deep sleep.\n\nTeleconference\n\nSunday morning, she woke late and ended up rushing to the office -- the red outfits were miraculously back, although she noticed the skirts were shorter. She decided on a businesslike demeanor. Ignore everything with Lillian.\n\nBlame it on medication if she had to.\n\nBy the time she arrived, a harassed-looking Lillian was already there, clicking cables into position.\n\n\"Thank god you're here. The main video teleconference is down so I'd setting up your desk so you can have both slides and video feed. The partners have called three times already. We are good on this end, but Japan is having problems with dual video. They will be able to hear you, but only see the slides and the video, not you. The partners will be listening in on the phone.\"\n\nJoAnne slipped into her chair just in time to hear the chime of the video teleconference coming on line.\n\n\"Mister Nakamura...\" her foot kicked a cable and the video feed went dark. She signaled to Lillian while she continued her spiel. Lillian looked under the desk, grabbed some tape and crawled under. After a few mumbled curses from Lillian, the video feed from Japan came back on.\n\nShe started to push back to let Lillian out, but the video flickered again and she felt Lillian pull her back.\n\nA few seconds later Lillian pushed a note into her hand.\n\n\"Your chair hooked on cables, if you push back, lose whole VTC.\"\n\nJoAnne finished her spiel, then turned on the 40 minute auto presentation and muted her own audio.\n\n\"Okay, it's on autopilot. And mute.\"\n\nLillian pushed her head up on JoAnne's thigh and eyed the control critically\n\n\"Good, it really is on mute. You haven't had a good record with mute lately, just wanted to check. The chair clipped a wire, I will replace it tomorrow, but don't try to push back right now or the VTC will go down for good, I wouldn't be able to reroute without a whole new set of cables. You seem stressed.\"\n\nJoAnne sighed. \"You have no idea.\"\n\n\"I can fix that.\"\n\nJoAnne started to respond, but Lillian's meaning became clear as she spread JoAnne's knees apart and began to settle in between them. JoAnne tried to resist, but her thighs seemed to drift even further apart on their own, and she even lifted as Lillian unzipped her skirt and slid it off. She stopped even trying to resist, just leaning back and letting Lillian's quick and talented tongue slide her up one orgasm after another. Lillian had slid her own clothes off and was fingering herself as she ate JoAnne. She seemed to orgasm in time with her. After a few minutes, she heard Lillian's fingers pumping in and out of her hot wet tunnel. All too soon, the autoplay pinged and JoAnne had to return to her speech, although Lillian continued tonguing her gently throughout. The response to the presentation was more than good -- the order from Japan was at least three times larger than she had anticipated in her best case scenario, so it was no surprise when the partners called her and told her to come on down to the office. After one more good cum, she untangled herself from the desk, the chair, and Lillian.\n\n\"Look, I have to go down there...\"\n\nLillian smiled cheerfully, but with a wicked edge \"It's okay -- I have to go to a family thing anyway. At least now it will be easier to put up with. By the way, I love the landscaping and that is the cutest little tattoo -- I never heard you like Christmas that much.\" She gave JoAnne a warm kiss -- which tasted of candy canes.\n\nAs JoAnne Walked out, she could hear Lillian putting things up -- and whistling a cheery Christmas tune.\n\nThe meeting with the partners went particularly well -- and Nobert, the older brother commented that he had never seen her more relaxed and in control.\n\nThat night she fell asleep wondering what it would be like to return the favor to Lillian. While she used her now-indispensable vibrator on herself.\n\nHard Dictation\n\nThe next morning, in the shower, JoAnne realized her little tuft of designer pubic hair hadn't grown out at all -- in fact, it looked kind of, well, glittery, like gold glitter along the edges of the naughty holly leaf. All the red clothes were still there, although the skirts seemed even shorter, and there were little emerald holly pins on each lapel. As she picked up her purse, she found a small scroll on top. In shining gilt letters it said: \"Sometimes it is better to give than receive. Be sure to give a Lil' something.\"\n\nJoAnne actually smiled at the blunt hint, as if she hadn't been thinking about Lillian already. She was waking up hornier every damn morning. Still though, the office was mayhem -- frantic arrangements to make sure the Japan orders were completed on time, after action reports and a hasty lunch meeting with the partners combined to keep her from even talking to Lillian for more than a second or two, and that about work.\n\nJust as she sat down at her desk from the lunch meeting, the intercom buzzed.\n\n\"Messenger service again, Miss.\"\n\n\"Send him in.\"\n\nThe same bike messenger walked in, carrying another Christmas-y package. Even though she knew the package would pop open, she didn't bother to try to stop it; she had a suspicion that if she tried to stop the Elf curse, it would up the ante. This time, the packages contents hit the desk with a thud and didn't move. Some kind of black leather belt contraption attached to a huge candy-cane striped dildo. She rolled her eyes \"My friend is a little...\"\n\n\"Smart ass? Yeah, little blonde chick in some kind of Christmas elf get up -- kept giggling to herself.\"\n\n\"Just like last time\"\n\n\"I'll take your word on that.\"\n\nAs he left, JoAnne watched his muscular butt and puzzled over his words - he'd been there, how often to vibrators fall out of packages anyway?\n\nAfter he left, she grinned wickedly -- give a Lil' something? She had just the thing. She tucked it into her top drawer. Then cleared the top of her desk off completely.\n\n\"Lillian? I need you to come in and take dictation for me.\"\n\n\"Yes, Miss.\"\n\nLillian entered. \"Your schedule is cleared until tomorrow morning. Both your afternoon appointments just called in and cancelled.\"\n\nJoAnne glanced at the closed office door. Locked, and the blinds were fully closed. She stood up and looked out the office window into the flurries.\n\n\"Lillian, we need to talk about a performance reward.\"\n\n\"Actually, I'm maxed out this year; I was on the CBN team earlier this year. I can't get any more cash awards until next year.\n\nJoAnne turned around and backed Lillian up against the desk. \"That isn't exactly what I had in mind.\"\n\nPinning Lillian against the desk, Joanne kissed her hungrily, forcing her tongue into Lillian's mouth. She had Lillian's skirt unzipped and dropped to the floor and her blouse and bra off in seconds. She gently pressed Lillian back until she was lying back on the desk, clad in only a mint green thong. JoAnne slid the thong down Lillian's long legs, eyeing Lillian's obviously wet slit with its little topping of strawberry blonde hair. Without thinking, she brought the panties to her face and breathed in deeply. They were filled with a musky, heady scent that made her mouth water.\n\nShe looked right into Lillian's eyes and said, \"Aren't you just a horny little thing!\"\n\nLillian let her legs fall open. \"You have no idea...\"\n\n\"I can fix that.\"\n\nShe dropped the thong onto the skirt and slid in between Lillian's creamy thighs, dropping her own skirt and jacket as she did so. She didn't hesitate at all -- her mouth closed over Lillian's swollen pink pussy and she began to tongue and suck with abandon. She must have been doing something right, because Lillian's sighs turned to moans, then outright screams of ecstasy. She fingered herself to orgasm, and only after Lillian had practically passed out did she let up.\n\nLillian breathed heavily, \"God, that was fucking fantastic!\"\n\nJoAnne reached into her drawer and pulled out the strap-on dildo and slipped the straps on while Lillian watched wide-eyed.\n\n\"Your reward isn't over yet.\"\n\nDespite the size of the rubber cock, Lillian was so wet it slipped into her easily. JoAnne began to thrust slowly in and out.\n\n\"You like that?\"\n\nLillian breathed in deeply, then brought her legs up around JoAnne, \"Yes. But... you can do it harder if you want.\"\n\nJoAnne thrust deeper and faster. Lillian hissed and grabbed JoAnne's tits in a tight grip.\n\n\"God yes. Harder... please... harder\"\n\nJoAnne began to really pump hard-- Lillian seemed to have no problem taking in the big fake cock.\n\n\"Fuck. Yeah. Give it to me. Harder. Harder. HARDER!\"\n\nJoAnne began to slam it into her as hard as she could. Lillian began to make a weird keening sound.\n\n\"Don't fucking stop. Oh fuck. Don't stop. Please don't stop!\"\n\nJust as JoAnne was sure her legs were going to give out, Lillian's eyes shot open, and she arched her back and screamed incredibly loud. JoAnne felt a huge gush of hot pussy juice squirt around the dildo and drench her. Lillian collapsed so suddenly she slid off the giant dildo.\n\n\"Holy. Shit.\"\n\nAs JoAnne slid the strap-on off, Lillian rolled over onto her stomach obviously trying to marshal the strength to get up. JoAnne eyed her perky ass -- particularly the little pink asshole. She was almost ready to reach for the strap-on when the phone rang. Lillian grabbed the phone without getting up.\n\n\"JoAnne Steadmann's office. Lillian speaking. Uh huh, yes...\"\n\nAs Lillian talked on the phone, JoAnne reached down and parted her ass cheeks. She knew she shouldn't but she just couldn't resist bending over and tonguing the little pink rosebud. Lillian squirmed, but didn't try to get away -- in fact she brought her knees up a little to help JoAnne. After she had the little pink butthole dripping with saliva, she continued tonguing while gently inserted her forefinger and began to pump it gently in and out. Lillian was slowly thrusting her ass back on the finger and into her face while talking on the phone. But as soon as she finished the phone call, she came up on all fours and began fucking her ass back against JoAnne's face and finger, grinding until she came. This time when they broke apart, she slid to the other side of the desk, eyeing JoAnne warily, but with a wide smile.\n\n\"Okay, you're just plain kinky. And something about you just turns my inner slut on full power. Still, we have to stop; you have a meeting in 30 minutes. You'd better wash your face and get dressed.\"\n\nScowling and smiling at the same time, JoAnne struggled into her clothes as did Lillian. Still, Lillian was absolutely glowing, and walking a little slowly, which made JoAnne smile. The meeting lasted until well after business closing, so Lillian was gone when she went back to get her purse and coat. But the mint green thong was carefully arranged in the middle of JoAnne's desk -- with a candy cane sitting on it.\n\nReceived\n\nIn the morning, JoAnne only found one skirt and jacket -- with a remarkable short skirt. And the only shoes had six inch spike heels. Fortunately the long wool overcoat was back, so at least she could (probably) make it to the office without being ravished, although as horny as she was waking up, any ravishing was more likely to be her doing anyway.\n\nJoAnne shrugged off her coat as she walked past Lillian's desk, the super-short skirt eliciting an appreciative \"ooh\" from Lillian.\n\nThen, Lillian said, \"Um, shit. JoAnne, the secretary offsite is today, so I have to leave in like five minutes -- we're supposed to head out to some lame team building exercise thing.\"\n\nJoAnne flinched. Lillian, cute as ever, stood up and stepped into the inner office with her.\n\nLillian continued. \"I, um, was really hoping to finish all that, um, dictation we started yesterday, but I just got a call saying there are no excused absences. Human Resources is adamant.\"\n\nJoAnne forced a smile on her face. \"Not your fault. I was really hoping we could; um, go over that last part again today. Maybe you could read it back to me tomorrow though.\"\n\nShe felt Lillian's warm hand slide up the back of her skirt and gently grab her bare ass, a fingertip just pressed against her butthole. Lillian smiled sweetly as if butter wouldn't melt in her mouth.\n\n\"I hate to wait that long, but I'll go over my notes so I can read it back exactly right.\"\n\nJoAnne shivered, glanced out the door to make sure nobody was in the outer office, then whispered into Lillian's ear, \"God, I was so looking forward to dragging you in here this morning. You'd better run while you still have some clothes on!\"\n\nLillian gave her a chaste peck on the cheek, then slipped out the door.\n\nShit. Alone. Horny as hell.\n\nJoAnne settled in to get some work done. The morning dragged by, Joanne having to find every file, and never quite sure where to look. She was surprised at how much she actually had undervalued her secretaries -- the byzantine filing system used by company for hard copy files was certainly not designed for amateurs. By late afternoon she found herself frustrated sorting through file cabinets looking for a 10 year old file. She was looking in the second lowest cabinet when she heard someone behind her clearing their throat.\n\nJoAnne whirled. The same bike messenger as usual stood with a package and gilt edged green envelope in hand. From where he had been standing, he must have had a clear view of her as she bent over the files. With the super-short skirt and no panties, it didn't take a genius to figure out what he'd seen. She glanced down at his spandex shorts surreptitiously -- yep. Giant hard on.\n\n\"How long have you been standing there.\"\n\n\"About 20 seconds, I just came... in. I mean came in.\"\n\n\"I'll bet.\" She snatched the envelope from his hand. Ripped it open and read the gilt and ivory card.\n\nAll it said was, \"He's all yours.\" She felt the now familiar tingling surge through her. The package had a very nice Christmas bath towel with ivory and gold trim.\n\nShe stared at the muscular bike messenger, stepped around him and closed and locked the office door.\n\n\"Three questions. No bullshit.\"\n\nHe raised an eyebrow, \"Yes?\"\n\n\"You married?\"\n\n\"No.\"\n\n\"Steady girlfriend?\"\n\n\"No.\"\n\n\"Straight?\"\n\n\"Yes.\"\n\n\"Fine. I can see you're horny.\" She gestured at his monstrous hard-on. \"You've eyed me every time you've come in here, and if I don't get laid in the next few minutes, I'll go insane.\"\n\nHer skirt and blouse hit the floor, and before he could even respond, she was on her knees and pulling the spandex shorts to his ankles. Her mouth was on his massive cock before he could even finish stepping out of his shoes and pull his shirt off. The taste was amazing, she felt like she couldn't get away -- every lick made her crave him even more. She could barely get her hand around the shaft, so she began stroking his massive pole with both hands -- spreading as much of her saliva on his cock as she could manage, then she began pumping his cock in and out of her mouth, getting a little deeper with each stroke. She felt his hands grip her hair and he slowly began to take over the rhythm, and driving in a little deeper each time. She felt a flash of anger as she realized he was just fucking her mouth, just using her! The feeling of anger flashed into heat that seemed to center on her pussy. She groaned around the thrusting pole. His cock went in deeper and she sucked harder, slurping as he pulled back. Fuck, it felt great just to act like a total slut! She moved her hands back to grab his muscular butt, and began pulling him in harder. She should have been gagging and choking on his cock; it was going halfway down her damn throat! But apparently Holly had also turned off her gag mechanism or something. He must think she was a total whore to be able to deep throat him like that. The more she thought about it, the more it turned her on. She grabbed his ass hard and pulled him right up to her, feeling his cock slide down her throat until her lips were all the way down. She held him that way, listening to him groan, then she very slowly slid him out of her burning mouth, looking up at him and making hard eye contact. Just as he was almost out of her mouth, she let her teeth touch the head -- then sucked him all the way in again. After four times, his eyes were starting to lose focus, so she finally let him slide all the way out, his cock glistening with her saliva.",
        "\"You're not getting off that easy -- I said I need to get laid. I need to get fucking pounded.\"\n\nJoAnne led him over to the desk then she laid down on with ass right at the edge she pulled her knees up until they were right at her tits. The bike guy didn't hesitate at all, plunging his steel rod in all the way to the hilt. Even as wet as she was, the huge pole filling her induced a gasp.\n\n\"Oh yeah! Now just fucking hammer that pussy.\"\n\nHe complied without a word, his balls slapping against her ass with each drive. Moaning loudly, she stretched her legs up, then rested her heels against his collar bone and began tweaking her hard nipples. With all her frustration earlier, her orgasms didn't take long to arrive, gushing hot juice as her inner muscles contracted on the giant cock. Feeling the force of her orgasm, he started to slow.\n\nShe snarled through gritted teeth, \"Keep fucking, goddammit! Don't stop or I'll slap the shit out of you!\"\n\nHe grinned and continued ramming into her steaming hole; it took two more hard cums before she could feel herself relax. He began to pick up speed and she could see from his face he was nearly there. Suddenly the desk slid -- and his cock popped out, pointed right at her just as a fountain of sticky white cum erupted. JoAnne felt it splattering across her stomach, tits and her face. Since her mouth was open, she got a good taste of the hot jism. That bitch! She was sure she could hear Holly giggle.\n\nHe staggered back. \"Shit, I'm sorry, the damn desk slid... I, uh...\"\n\nShe waved him off, licking the cum off her lips. \"Don't worry about it; furniture has a mind of its own sometimes.\"\n\nHe dressed hurriedly while she toweled herself off. After he was gone, she checked her hair one last time for cum droplets and headed home.\n\nThat night, her vibrator was buzzing pretty late....\n\nThree on a match\n\nThe next morning one of the red outfits was hanging in the closet -- see through white blouse, red skirt, red jacket -- and the now normal high heel red shoes. Not a stitch of underwear of any type, of course. The skirt seemed longer than they had the last few days, and the neckline was a little less obvious. With the jacket closed she could probably be seen in public without getting arrested. Another Christmas card lay on her counter, all it said was, \"Be Helpful! Helping Others Can be Fulfilling.\"\n\nLillian wasn't in the outer office. Just as JoAnne settled into her chair, Lillian, wearing a cute little gray skirt outfit, came in leading a small young woman with light brown hair and huge glasses into the room.\n\n\"JoAnne, this is Mouse, from the IT office. She is going to replace the VTC set-up this morning -- a lot more than the cable was bad.\"\n\n\"Mouse\" -- what a name -- gave a weak smile, which clearly showed where she had picked up her nickname. The resemblance to a friendly, cute, cartoon mouse was uncanny -- two prominent front teeth and her ears even stuck out enough to make the image perfect. Well, as long as she was here, there was no way JoAnne was going to get Lillian alone.\n\nJoAnne moved to Lillian's desk while Lillian and Mouse struggled with the connections, Mouse working on in the secure comms closet while Lillian kept reconnecting cables under the desk. JoAnne watched Lillian's cute round ass wiggling around as she swapped out yet another piece of the system while Mouse adjusted settings on the master board in the closet, occasionally closing the door to see the whole panel.\n\nGoing down to Security to sign for a new badge and computer token that would work with the new VTC system was a relief.\n\nAs she walked back into her office, closing the outer door behind her, the first thing she saw was Lillian's yummy ass still wiggling from under the desk. Looking around, she noted that Mouse was still in the comms closet with the door shut. Grinning evilly, she slid up behind Lillian and slid one hand up her inner thigh -- slowly -- whispering, \"As soon as we're alone, I'm eating that sweet pussy until you scream, then I'm fucking your brains out!\"\n\nLillian didn't say anything, but spread her legs further. JoAnne let her fingers cruise up the soft inner thigh. Much to her excitement, Lillian wasn't wearing any panties -- and she was very, very wet. JoAnne began to finger her in earnest, massaging the rapidly swollen clit and dripping pussy rapidly. Lillian was thrusting back against her hand, so she quickly slipped two fingers into her, pumping in and out until she heard a soft moan and felt Lillian's pussy muscles contacting rhythmically on her fingers.\n\nHearing the rattling at the comms closet door, she rapidly stood up and acted as if she was in the middle of a conversation with Lillian: \"...so we may have to stay later tonight until we get this sorted out.\"\n\nLillian stepped out of the comms closet. Stunned Joanne looked down at the desk as Mouse slipped out from underneath it, with a huge mousey grin, flushed face and a great deal of hair out of place. Belatedly, Joanne realized Mouse was wearing a gray skirt just like Lillian's.\n\n\"I'll stay as late as you want, Ma'am! Gosh Lily, you said she was great to work for, but I didn't know she was this great!\"\n\nLillian looked confused.\n\nMouse's grin got even wider. \"She didn't know you had problems with the relay box and we switched places; she thought I was you. It was great! I haven't gotten laid since the last time we did the amateur night strip club thing, you know? The time you and me had too much tequila, ended up in the oil wrestling pit, and went home together? And she was really good -- normally I'd scream if someone just slid their hand up my skirt, but it was so obvious she thought it was you, and I thought it would be funny -- she promised to fuck my brains out as soon as we were alone. So I was going to say something, but her fingers felt soooo good going up my thigh, and I kept putting off saying anything. And I've been soooo horny all week. I mean you can masturbate, but it just isn't the same as having someone else do it to you. And she knows just how to use her fingers... I came so hard, I thought I would pass out. Gosh Lily, you need to learn to share!\"\n\nMouse said the entire thing in one breath which made Lillian begin to giggle, then Mouse joined in and finally JoAnne broke down and began to laugh.\n\nBreathlessly, JoAnne gasped out, \"I'm so sorry, I've just been so crazy horny for the last week.\"\n\nMouse giggled, \"You should jump the bike delivery guy -- makes me wet every time he walks through the office. I end up fingering myself under the desk!\"\n\n\"I jumped him yesterday and screwed his brains out.\"\n\n\"Omigosh! Is he as good as he looks? I'll bet he's hung like a horse!\"\n\n\"Huge -- he's just huge. But I'm still horny as hell!\"\n\nAfter they finally managed to stop laughing, Mouse looked thoughtfully at the outer office door. Her wicked mouse-grin got wider. She pulled a doorknob sign out of her bag. It said \"Tech Support. Sensitive Hardware Installation -- Keep Out.\" She walked to the outer office door, pulled it open, hung the sign on the outer knob, then closed and locked it with an evil mousey leer. \"Looks like later to me!\"\n\nJoAnne felt Lily reach around her and begin unbuttoning her blouse, pausing for a moment to gently tease JoAnne's hard nipples. Mouse dropped her skirt to the floor and walked towards the cleared off desk.\n\n\"So Miss Jo, you said something about making me scream?\"\n\nJo shivered as Lily pulled her blouse down off her shoulders while tracing up the nape of her neck with the hot tip of her tongue.\n\nLily whispered in her ear. \"I'm holding you to that, too. You may have said it to her, but you thought you were promising it to me. Looks like double duty for you.\"\n\nIt was over two hours later when JoAnne finally walked out on wobbly legs. She was even a little sore -- Mouse, it turned out, had a fondness for wearing the strap-on and her compact little body had more strength than anyone would expect. JoAnne was also very glad she'd been using the vibrator on her ass so regularly -- her earlier attack on Lily's ass had brought a rather delightful but slightly over the top retribution from Lily.\n\nMouse and Lily seemed very comfortable with each other, and it was pretty clear they were a lot fonder of each other than either of them really realized. To be honest JoAnne wondered why she'd noticed.\n\nDropping off to sleep was easier than ever. After a few minutes with her vibrator of course.\n\nThe Third Package\n\nWhen JoAnne woke the next morning, naked as usual, she glanced in the mirror -- her little holly leaf was very much edged in gold now -- and the hair seemed to be turning a dark green. At least her closet was looking a little more benign this morning -- the ever present red jacket, a regular white silk blouse -- hardly transparent at all -- her now-perpetually-excited nipples poked through, but she was getting used to that. And the skirt was actually just a little shorter than her usual choice. The heels were almost an inch higher than before, but that was a pretty easy trade-off. The shoes, at least, were comfortable.\n\nAs she strolled into her kitchen, she found Holly, and another incredibly busty elf perched on the counter, looking over a couple of scrolls. Both were drinking coffee from her coffee machine.\n\n\"A black elf?\"\n\nHolly and the new elf looked up at her. The black elf threw her a sharp look.\n\n\"What, is she racist, too?\"\n\nHolly shook her head, and held up her scroll. \"Nope. Just ignorant.\"\n\nHolly looked over at JoAnne. \"Elves aren't born, we're recruited.\"\n\n\"From where?\n\n\"Everywhere. I was recruited in Germany over 900 years ago. Koko here was recruited from Harlem about 80 years ago.\"\n\nJoAnne really wanted to know what the hell they were doing in her kitchen, but pushing Holly had proven to be a really bad idea, so she tried to be conversational.\n\n\"So what's the recruitment model? I mean you'd have to have some kind of criteria.\" She looked at the two of them critically for a second. \"Cause If I was going to guess, I'd assume it had something to do with having tits like honeydew melons.\"\n\nKoko gave a lopsided grin. \"That's part of the 'elf upgrade package.' The Big Guy has a thing for giant knockers, so you lose a little height and gain half dozen cups sizes.\" She reached up with her hands and jiggled her boobs. \"They're really sensitive, too. Definitely worth the trade.\"\n\n\"Doesn't that make your back hurt?\"\n\nHolly laughed. \"Christmas Magic, Baby.\"\n\n\"The Big Guy is...?\"\n\n\"Santa Claus, Pere Noel, Father Christmas. Yep, he's real.\"\n\n\"And he likes big knockers. Do you guys...?\"\n\nKoko shook her head, eyes wide. \"Nope, He's a one woman guy and Lady Winter isn't somebody you'd want to piss off. She doesn't mind skin and jiggle all around him, doesn't mind looking at it herself, but I'd hate to think what would happen if anyone was stupid enough to go after him.\"\n\nHolly nodded. \"She actually does the upgrades, I think the giant ta-tas are her idea anyway.\"\n\nShe suddenly looked a little serious. \"So, anyway, Koko here is from the Legal Oversight office. She's responsible for making sure all the legal criteria are met for this kind of stuff. Christmas Lesson Curses, you know.\"\n\n\"She's a lawyer?\"\n\nKoko stiffened. \"I can't be a lawyer now?\"\n\nJoAnne flinched. \"No, I mean, I guess, I just never thought of Elves as needing lawyers.\"\n\nKoko relaxed a bit. \"We have divisions to do everything: management, logistics, manufacturing, recruiting, and, of course, the elves who go out and spread Christmas cheer, the 'Jingle Girls,' that's by far our biggest division.\"\n\nHolly caught Jo's eye. \"She has to make sure that I'm not misusing power, make sure you deserve the Curse, all that kind of stuff.\" There was an almost pleading look in her eye.\n\nKoko nodded sipping her coffee and picking up a scroll from the counter. \"Somebody, who I won't name, but who's initials are 'Holly Mistletoe' is kind of sloppy with paperwork and has gotten her ass in trouble before for overreacting. In fact she's on probation. One more misuse and she's back in the toy factory putting eyes in those creepy little dolls.\"\n\nHolly shuddered.\n\nJo shrugged. \"So what do you need to know?\"\n\n\"Okaaaayyyy. Let's see. Were you knowingly and deliberately rude to her contrary to the Spirit of Christmas?\"\n\n\"Yeah, I kinda was. More than 'kinda.' I knocked her on her butt.\"\n\n\"On purpose?\"\n\n\"I don't know. More not giving a shit.\"\n\nKoko's eyes slid sideways accusingly towards Holly, who looked a little stricken.\n\nJo suddenly felt a little sorry for Holly even though she'd started this whole thing. \"Oh yeah, I did tell her to 'Fuck off.' Twice. And definitely I meant that. I tried to get her thrown out of the restaurant.\" She saw relief cross Holly's face.\n\nKoko looked placated. \"Okay. So let's see if it the response was appropriate...\"\n\nKoko scanned the scroll. \"Maybe a little over the top, but not too much. No permanent damage or anything. Not like that sheep incident in Scotland.\"\n\nHolly suppressed a snicker and Koko glared at her. \"It wasn't funny, you know. A whole country gets a bad reputation because some drunk highlander pinched your ass without your permission.\"\n\nShe looked over at JoAnne. \"Have you learned your lesson?\"\n\n\"Yes. I think I have. I'll sure as hell remember this for the rest of my life.\"\n\n\"Okay then, we can go ahead and turn it off.\"\n\nJoAnne thought fleetingly of Mouse and Lillian. \"Wait, doesn't it end at midnight tonight anyway? Until Midnight of Christmas Eve and all that?\"\n\nKoko looked a little confused. \"Well, yes, but it isn't necessary to continue; you're clearly contrite...\"\n\n\"No, it's okay, I don't want to put you guys through any trouble or anything. I've made it so far, I'll make it through the day.\"\n\nKoko shrugged, but JoAnne thought Holly looked a bit smug as the two of them disappeared with that bizarre reverse popping sound.\n\n###\n\nUnfortunately for JoAnne, Lily had called out -- her car had broken down. Just as bad, when JoAnne made up an excuse to call down to Tech Support to \"ask Mouse a question about this VTC,\" she'd been told that Mouse had called out to go help someone whose car had broken down. Obviously Lily. JoAnne reflected that the two of them seemed to be a little more than just a couple friends who slept together once in a while. In a way, she wished Lily had called her for help instead of Mouse.\n\nShe lasted only half the day in the nearly deserted office -- everyone had taken Christmas Eve off, and she could have sprinted through the building naked and not run into anyone. By noon, only her and the old man at the security desk were left.\n\nGrumbling, she walked out of the building and started home. Nobody to care for, nobody to visit. As she walked past a still open jewelry store, she noticed charm necklaces proudly displayed. Not very expensive things -- just little gold charms. But one was a little cartoon mouse and one of the others was a lily. After a flash of inspiration, she walked down the street to a delivery service, filled out the forms, and paid a ridiculous fee to have the necklaces delivered. With a self-satisfied smile, she sent the mouse necklace to Lily and the lily necklace to Mouse, along with a note that she hoped they had a wonderful Christmas.\n\nAt 6,tired of waiting for the shoe to drop and more than a little disappointed, JoAnn took a shower, and wearing her very expensive white bathrobe, pulled a bottle of chilled white wine out of her walk-in wine cellar and put it on the counter\n\nHer earlier joy at finding the right gifts for Lily and Mouse was fast fading and in the back of her mind, she was seriously considering drinking enough wine to pass out for the first time since college. That is, until she heard a knock on her Penthouse apartment door.\n\nThat in itself should have been impossible -- nobody entered the building without being rung up in the first place. She walked over and looked out the peephole. The bike messenger.\n\nShe smiled to herself, feeling a surge of lust. \"Holly, you clever, sneaky little bitch.\"\n\nShe tossed her robe over on the easy chair and threw the door open with a smile.\n\n\"Just what I was waiting for! Come on in.\"\n\nThree faces stared at her in shock. Well, two were in shock the third was starting a knowing grin. She looked from face to face to face, stunned.\n\nThe Bike Messenger. The Bike Messenger. And the Bike Messenger.\n\n\"Triplets? Identical Triplets.\"\n\nThe grinning one stepped in, pulling the other two with him. \"I'm Derrick, this is Devlin and that is Dain. Triple D Messenger Service.\"\n\nThe one he'd called Devlin stared at her for a second, then blinked and shook his head. \"You dropped off a couple packages to be delivered and the addresses got smeared.\" He held up the packages for Lily and Mouse. \"Since we had deliveries in this building we figured we'd drop by and get...\" his voice trailed off as Joann reached over and grabbed his shirtfront and Dain's arm and began dragging them towards the living room.\n\n\"I really hope you three don't have anywhere to be for the next couple of hours.\"\n\nShe felt Derrick's hands slide up her bare body to cup her tits, and Dain started kissing her deeply.\n\nAn hour later, moaning her way through yet another shivering orgasm, she noticed movement in the doorway. Lily and Mouse, both in long winter coats watched open mouthed from the doorway. Each one was clutching a wine box with a bow on it.\n\nShe pulled her mouth off the head of the cock she'd been happily sucking on. Dain - or was it Derrick -- looked over at them, then back down at JoAnne. \"You need to get that lock looked at.\"\n\n\"Come in and close the door.\"\n\nMouse looked at her wide-eyed at the men stroking in and out of JoAnne. \"Miss Jo, you look a little ... busy, maybe we should go.\"\n\n\"I think maybe 'Miss-I-Get-Wet-and-Finger-Myself-Whenever-the-Bike-Messenger-Comes-Through' and 'Miss-I-Want-to-Take-a-Bite-of-His-Ass' should lose their clothes and give me a hand before I suffocate. This whole 'airtight' thing is fun at first, but a girl needs to be able to breathe.\"\n\nLily and Mouse exchanged looks and giggled as they dropped their coats. The only thing either one was wearing was their shoes.\n\nAs the men slowly let her loose, JoAnne said. \"Mouse, Lily, this is Derrick, Devlin and Dain of Triple D Messenger Service.\"\n\nLily reached out and grabbed the nearest. \"Dibs on Devlin.\"\n\n\"Um, actually, I'm Dain...\"\n\n\"Yeah, whatever. Just get that rock hard ass over here.\"\n\nThe one nearest Mouse smiled at her. \"I'm...\"\n\nMouse solemnly cut him off, grabbing his hard shaft and leading him over towards an easy chair. \"Don't care. You name wasn't the important part of the fantasy.\"\n\nJoAnne looked at the remaining brother. Whatever his name was. \"Thank God, now I can move how I want to.\"\n\nIt was another hour before they paused. While the guys recovered, JoAnne gave the charm necklaces to Mouse and Lily and watched their smiles light up. Especially when they realized who got which necklace.\n\nMouse reached over and pulled her and Lily into a hug. \"You guys are the best!\"\n\nLily grabbed the wine boxes, handing one to Mouse. \"We got you gifts too.\"\n\nMouse opened the box with a crazy mousey leer, pulling out an enormous strap-on, while Lily did the same. Her grin wasn't as mousey, but the leer was just as crazy.\n\nThey began strapping them on, and over their shoulders, JoAnn could see the guys' hard-ons returning already.\n\n\"Holly Mistletoe. Holly Mistletoe. Holly Mistletoe!\"\n\nEverything froze with a snap. Holly, her elf cap askew, was standing in the middle of the room. She looked around at the three lean bike messengers, who'd just been starting to get up, then at Lily and Mouse frozen with their giant strap-ons at the ready and lust-filled eyes.\n\n\"Wow. I'm impressed. Helluva party.\"",
        "\"It's getting a little wild.\"\n\n\"Okay, you definitely need help. Do you want me to make them go to sleep, send some home, send all of them home?\"\n\n\"Oh, no. Don't do that.\"\n\nHolly looked around. \"Then what?\"\n\n\"I wasn't really calling for help. I just figured, that if you weren't busy you might want to... you know.\"\n\n\"Join in?\" Holly looked at her disbelievingly.\n\nJoAnne shrugged. \"Sorry, I just thought you might want a little fun. But I guess being an Elf on Christmas Eve, you're probably busy.\"\n\nHolly looked over at the three guys and grinned. \"Fuck it, they can get by without me.\"\n\n\"How are you going to get them to not freak out when you just show up, I doubt all of them believe in Christmas Magic?\"\n\n\"The magic of Pizza. Everybody believes in pizza.\"\n\nA sudden snap with that strange reverse-popping sound and everyone was in motion again. Just as they had her encircled, there was a loud knock and the door popped open.\n\nHolly, in a ridiculously tight, red and white, cleavage-baring parody of a pizza delivery costume was standing at the door holding a two huge pizza boxes.\n\n\"Pizza delivery for Miss Jo Steadmann. Looks like a 'Crowd Pleaser Combo', One 'Double Sweet and Spicy' and one extra large, extra hot Triple Sausage.\n\nLily shook her head. \"You really need to get that lock looked at.\"\n\nHolly looked around as if seeing everything for the first time and her eyes widened. \"OOoooOOOoo, triplets!\"\n\n###\n\nJo relaxed dreamily, eyes closed, laying on her side on her bed as Mouse and Lily thrust slowly, gently, in and out of her in perfect rhythm. Their legs were tangled together. Lily, behind her, and Mouse, in front, used their hands to hold JoAnnes' upper leg up at the knee, while they both kissed and nibbled her neck. She listened to far more intense noises from the next room. Somewhere around midnight, Holly had finally dragged the three bike messengers off with a lascivious grin.\n\nJoAnne didn't have to make any effort, just enjoyed the sensations, the slow build until a last, slow wave of orgasm slid through her.\n\nAs she opened her eyes, she realized that Lily and Mouse were gently kissing each other, the golden charms on their necklaces tapping together, making tiny bell-like sounds, while the two of them looked into each other's eyes as if they were in a world all their own.\n\n###\n\nThe next morning, JoAnne slipped quietly off the bed -- Lillian and Mouse were nestled together on the other side. Mouse was snoring quietly, little, squeaky contented sounds. It was clear just from the way they were holding each other that they had crossed from occasional Friends with Benefits to something much more serious, and that made JoAnne smile a little.\n\nHolly was sitting lazily in one of the easy chairs, dressed in one of JoAnne's robes. She raised a mug up.\n\n\"The boys had to leave, remembered they had a Christmas family thing. That's good, 'cause I'm gonna walk funny for a few days. Damn, they had some serious stamina. Must be all that bike riding. Hey, I've got some hot chocolate for you on the counter.\"\n\nJoAnne scooped the steaming mug off the counter. \"I thought you'd be busy today.\"\n\n\"No, Christmas Day is a pretty quiet day for me, just a couple things to do.\" She waved at the penthouse apartment. \"Is this worth it? Your job, I mean, it obviously makes a shit-ton of money, but it seems pretty stressful.\"\n\n\"I thought so, but honestly, over the last few days, I've had more fun than I can remember.\" She paused. \"I could work my ass off for the rest of my life and it would never get me what Lily and Mouse have.\"\n\n\"I saw that too, they just didn't realize it until last night. They just figured out that they're a forever couple, I could see it in their eyes last night. You saw it before they did, didn't you?\"\n\nJoAnne nodded. \"I even kind of gave a hint to them.\" She told Holly about the necklaces, realizing that the whole thought that she wasn't going to get something she'd never even thought of wanting was depressing. JoAnne decided to change the subject. \"So, do you like your job?\"\n\n\"It's amazing. I get to travel all over the world, all the time. And I really am the best at it.\"\n\n\"I can tell, last night was insane, you outdid yourself.\"\n\nHolly shook her head. \"The curse ended at Midnight. Since we operate all over the world, all our stuff is set to work on Greenwich mean time, so that'd be about 6 PM here.\"\n\n\"So what was last night?\"\n\n\"That was all you -- and, let me tell you, you are one crazy, horny, bitch. You just needed to be unleashed.\"\n\n\"Oh. My. God. I thought that was part of your 'spreading Christmas cheer' job.\"\n\nHolly leaned back grinning. \"That's a blast, one of the best jobs out there; but I'm not a Jingle Girl, that's not what I do.\"\n\n\"Well, what do you do?\"\n\nHolly put the mug down on the small table next to her and pulled a scroll out of the thin air and unrolled it, then held a quill pen out to JoAnne, arching an eyebrow.\n\n\"I'm in Recruiting.\"\n\nPost Production Notes\n\nJust had to write something a different, something out of character. I heard somewhere that's how writers avoid falling into a rut. "
    ],
    "authorname": "Todd172",
    "tags": [
        "christmas",
        "lesbian",
        "straight",
        "group",
        "pizza",
        "elf",
        "lesbian group",
        "magic",
        "curse",
        "solo"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-christmas-curse"
}