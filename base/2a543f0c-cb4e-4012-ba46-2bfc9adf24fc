{
    "title": "The Twelve Zenati Pt. 19",
    "pages": [
        "Authors note: Hello everyone. Please be aware that this is the third series in the world of the Twelve Tables. It is heavily set in the BDSM lifestyle of Dominant men and submissive women although that can, and does, vary from time to time, the concept is constant. \n\nI am, as always, grateful to David and Kate for being my second sets of eyes. I hope those of you who enjoy this series continue to do so. ~ellie. \n\n*****\n\n\"The agreement states clearly that I will follow your lead and do whatever you ask, as long as we stay together,\" Noah said calmly, even though a small tic in his jaw showed his irritation at the argument he had to have with Marcella.\n\n\"My contact won't meet with me if you are hanging around. I need to go on my own. You can wait nearby, but you can't come with me!\" Marcella said in slow, angry, measured words, as if talking to an imbecile.\n\n\"If I don't go with you to meet your contact, then you wear a tracker,\" Noah said, nearing the end of his patience with her.\n\n\"I will not!\" she gasped, colour creeping up her neck with her anger. \n\n\"You will, or you can pack your bags and get ready to go back to the safety of being surrounded by all the people who care about you and are worried sick about where you are and what you're doing,\" Noah ground out through clenched teeth.\n\n\"If I'm wearing a tracker, then you are wearing a tracker!\" Marcella snarled defiantly, not believing for one moment that he would agree to such a thing himself.\n\n\"Fine with me,\" he shrugged. \"Unlike you, I've got nothing to hide,\" he challenged her. \"We can both wear one for the remainder of the agreement.\"\n\n\"So, you don't trust me at all, then?\" Marcella glared at him. She'd already told him what she was doing and hoping for from this contact. What more did he expect from her? Yet she couldn't fault him for his honesty with her questions when they made their agreement.\n\n\"I trust you about the same amount as you trust me,\" Noah said, unfazed by her outburst, and pulled a small leather satchel from his belongings then began rifling through the contents. \"How squeamish are you?\" he asked, so casually that Marcella frowned at the change of topic.\n\n\"Not at all,\" she said, as if dismissing the comment.\n\n\"Good. Because subdermal trackers are better. I'll do you, then you can do me. Then I'll help you download the app to track me,\" he said, standing up with two small blue capsules in his hand, a small scalpel blade sealed in a sterile packet, a few swabs and some small flesh coloured bandages. \n\n\"Subdermal?\" Marcella's eyes widened as they went from the items in his hands to his face. \"You're not slicing me open!\"\n\n\"It's a nick, Stevie, and the only way that you are going to that meeting tomorrow without me by your side. Well, me or a couple of watchmen ready to take you back to the hospital to be checked over after your accident,\" he said, trying to hold back a smirk. \n\n\"What if I am squeamish about being sliced and diced?\" she questioned, not wanting to admit that she was baulking at this.\n\n\"You said you weren't. 'Not at all' were your words,\" Noah said and raised an eyebrow.\n\n\"That was before I knew that you planned to give me a new scar!\" she said, incredulously.\n\n\"Well, this is the best and most foolproof way, but if you want to be a girl about it,\" he turned back to his satchel, hiding his smirk as he reached for the alternative trackers. He knew that he could halve the fighting time by offering the worst scenario, and then giving her a softer alternative. He turned and showed her a small gold slave bracelet in its box with the small tool to fix it onto her arm and ensure it couldn't be removed unless he removed from her. There was a similar platinum one that could sit beside his watch, unobtrusively, that she could put on him.\n\n\"You may not have noticed, but I happen to be a girl. It's not a sign of weakness to not want someone slicing my skin open, like foreplay from a serial killer.\" She rolled her eyes. \"I'll take the bracelet,\" she sighed, trying not to shudder as she forced away the horrific memories, while she looked at the scalpel blade still lying on the table like a snake ready to strike.\n\n\"Alright,\" Noah nodded, seeing the look on her face and putting the other items out of sight. He was relieved as she visibly relaxed once he had returned the offending items to the satchel. The idea that her doctor uncle may have harmed her in some way with a similar blade made him feel ill and an uneasy silence developed between them as he calmed his own angry, stomach-twisting nausea so that he didn't say something he would regret. \n\n\"I wish that you would just trust me,\" Marcella sighed as she sank into the chair at the small dining table he indicated.\n\n\"Would you believe that I do trust you? It's these contacts of yours that I have concerns about,\" he said in a serious, quiet voice, as he picked up her hand and placed the two halves of the bracelet around her wrist, before proceeding to tighten the specialised screws in place. He felt as if an electrical charge skittered and crackled in the air around them as he held her hand, but if she felt anything at all besides frustration with his lack of trust, she didn't show it. Once it was done, he placed the tool back into the box and slid the second box, holding his bracelet, across the table and held out his wrist to her.\n\n\"You're squeamish?\" she asked acerbically, picking up the box and looking at the plain platinum band. It wasn't that she wanted to use the scalpel blade on Noah but more that she wanted him to admit that he wasn't happy about being cut either. \n\n\"This agreement of ours is all about being fair and staying together. What's good enough for you is good enough for me, and I will do what you want within those parameters. Why? Do you want to practise some serial killer foreplay on me?\" he asked with a smirk, using her own words back at her. \n\n\"No!\" she snapped, a little too quickly, and pulled the two halves of the bracelet from the box and proceeded to fumble through the procedure of trying to hold the halves together as she used the tool to tighten the screws, making the bracelet whole. \n\nNoah didn't offer to help or hold the bracelet together for her, allowing her to do it alone unless she asked for his assistance, which he knew that she wouldn't. After yesterday and last night, he knew that he still had a long way to go to win this woman over and see him as more than a thorn in her side, born of miscommunications and friendly rivalries. \n\nIt took a few minutes to download the app to her phone and punch in the numbers that would allow her to see not only his tracker but her own. The fit of the bracelet was firm, and to get it off, she would have to cut her hand off or use bolt cutters or a similar tool, and he smiled. This was always his preferred method of tracking. The subdermal ones were not as reliable and were surprisingly easy to remove, if the subject wasn't squeamish.\n\n\"I need to get ready. He won't be expecting me to look like this and I'd like to keep my secret identity secret for a little while longer. At least from my contact,\" Marcella said and stood to move to the bathroom. \"It will take a while to straighten my hair. If you want to go and swim or whatever,\" she shrugged.\n\n\"Yeah, alright. I might do that. You want me to trust you, after all, so I know you won't leave without me,\" Noah said, giving Marcella a pointed look and watching the colour rise in her neck, as it did so often when he challenged her. \n\n\"I'll be at least an hour,\" she sighed, realising that leaving without him would be useless anyway, with the tracker on her wrist now. \"Go do whatever it is that you're doing when you're not stalking me like a serial killer.\"\n\n\"Well, I'm not talking to my family at the moment, so stalking you has become my full-time gig. I'm sure that I can find something to do. This place has a gym, after all, and you did disparage my flab and ask me to do a sit-up now and then,\" he chuckled, remembering her acerbic comment as he undressed in front of her.\n\n\"True, you're disgusting. A little time in a gym wouldn't hurt you at all.\" Marcella rolled her eyes at him and moved toward the bathroom. \"Try and work out more than just your eyes while you're there, this time,\" she sighed.\n\n\"What's that supposed to mean?\" he said, as he frowned at her.\n\n\"Half of the reason that men join gyms is to ogle the pretty girls and women as they bounce and gyrate all over the place. Don't act so innocent, Noah. You know you do it. All men do. It's like programmed into your DNA, to appreciate every woman with a half-decent figure,\" she said flippantly, as if it didn't bother her at all. She walked into the bathroom and closed the door before he could say anything to confirm or deny that he ogled the gym bunnies, just like every other guy.\n\nNoah stared at the closed door and chuckled. Since he had accepted who she was and that he could love her if only she would let him, the idea of ogling other women didn't appeal to him at all. Still, he could use a swim, and he had to at least try to show her that he trusted her. So, he changed, grabbed a towel and headed down to the pool. While he was there, he could call Xavier and check on Dom without her listening in, which he didn't mind for the short general conversations, but he wanted a fuller update on the happenings of the family, particularly his brothers.\n\n*****\n\n\"I think I've worked out why Apollo didn't let Marcella know that he was coming, either to Perth or following her up here,\" Zanto said as he sat once again in the hospital staff break room that they had taken over for table business. He looked at his brothers and cousins who had gathered to hear what he had to say or explain. His report had been accurate but factual, rather than detailed, and a meeting had been called.\n\n\"Go on,\" Dominic encouraged.\n\n\"I believe that she has another phone account that she uses for work and when she is at home in Perth. There may well be two accounts, from the amount of time that she spends calling the message bank to retrieve messages. I could dig a bit harder and find out for sure, but she hasn't agreed to this invasion of privacy, and so far, she has done nothing to any of us, except try to help her sister. We can't treat her like a criminal who waved his rights the moment he committed a crime against us,\" Zanto said, feeling bad for invading her life as much as he had already.\n\n\"That's easily discovered,\" Xavier said, pulling out his phone and googling her profile in the company that she worked for and comparing the numbers with her current ones. \n\n\"I already did that, but as I said, I don't know if she is accessing one or two accounts because she doesn't have the passwords saved on her phone and, as much as I could hack them, is that really a line you want to cross for a second time?\" Zanto asked.\n\n\"We, or more importantly you, have already crossed the line. May as well keep going. Besides, you already know what the codes are or you wouldn't have mentioned a second account,\" Dominic said, trying not to use an accusatory tone.\n\n\"Fine. I have the codes, but I haven't gone into it, yet. It feels wrong,\" Zanto said, again. \"We aren't the Suebi. We don't just ignore the laws. Fuck, we add to the law, if anything. Noah would say the same. You know that he wouldn't like this,\" Zanto said, staring his older brothers down and trying to win an argument with them for the first time in his life.\n\n\"He's right,\" Gideon agreed. \"Noah wouldn't agree to this, but he isn't here. So let me call Papa and fill him in. He and Noah think with the same mind more often than not when it comes to legal issues. We have to tell the old men, anyway. Like you said, when was the last time we could ever keep a secret from them?\"\n\n\"I can work with that,\" Zanto said, grateful that Gideon had taken his side in the battle of wills.\n\n\"Let's say that's Plan B and see if we can't get it from the horse's mouth first,\" Xavier said, tapping on his phone as he talked. \"Give him time to answer if he can. What else do we know?\"\n\n\"I'm guessing that you heard about the bet Emma made with Olivia?\" Genesis asked. When Xavier raised a questioning eyebrow, he filled him in on the bet where Olivia had revealed about why Marcella had left the safety of the hospital and their family.\n\n\"So, she doesn't trust any of us now,\" Dominic said sadly.\n\n\"Add to that invading her privacy by hacking into her personal accounts,\" Zanto said meaningfully, glad that he hadn't delved any further than he had so far.\n\n\"I think our baby brother might be right, X,\" Dominic said. \"Noah has got a hard enough battle to win her over without us putting more roadblocks in his way.\"\n\n\"I don't know about that. I still think that there is more to what is going on with Apollo and her family than meets the eye. The sisters were both so sure that he wouldn't hurt her, but the fact is that he did and in front of witnesses,\" Genesis reminded them all. \"We're not just doing this to be nosey. It's to keep her safe and, in turn, Noah safe. This isn't as black and white as Zanto is making it out to be. We have reason to be concerned about their welfare, particularly hers, and her sister's by association. Apollo probably tried to call and left messages on one of those message bank accounts, and it might just explain why he did what he did to her.\"\n\n\"He's got a point,\" Xavier said as he considered all points of view. He listened to the men discuss the pros and cons of invading Marcella's privacy for her own sake, rather than the fact that they were just snooping on her, for a further ten minutes before his phone buzzed in his hand and he smiled seeing Noah's name.\n\n\"Hey,\" Xavier greeted his cousin.\n\n\"Hey, what's up? I was planning on calling in this morning, anyway.\" Noah returned the greeting.\n\n\"It was her, I take it,\" Xavier stated rather than asked.\n\n\"You knew it was,\" Noah said guardedly, not liking the strange tone to his cousin's voice.\n\n\"Then why not bring her back?\" Xavier asked. \"Your brothers think it's because the Battaglia were here and she thought they came for her. You could tell her otherwise and smooth this shit out back here, with us to back you up.\"\n\n\"Because there is more going on than we know, and I think she has a key to discovering it. She says that she has something to do here which is why she didn't leave the city. Trust me, I'll bring her back soon,\" Noah said, sounding sure of himself despite being uncertain about if he could ever make her stop taking risks and endangering herself.\n\n\"Gen thinks the same thing. He wants to...\" Xavier began to explain their current dilemma.\n\n\"Don't tell me. I need deniability if it's one of Gen's ideas. I trust his instincts. If he thinks there is something to be found by doing whatever you called to ask me about, then chances are there is. If Gen can convince Dom that it's the right thing to do, then I'll agree, no matter the fallout. Good enough?\" Noah asked.\n\n\"Good enough,\" Xavier replied. \"Stay safe. We'll catch you up on everything soon.\"\n\n\"Thanks,\" Noah chuckled dryly and hung up. \n\n\"Well,\" Xavier said to Dominic, over the click sounding from the speaker of his phone, when he raised his head to face the small group gathered before him. \n\n\"He trusts Gen's instincts so maybe we should too, in this case,\" Dominic shrugged and looked at Zanto who sighed and nodded. They all understood the undercurrent of Noah's words about Marcella being the key to something bigger. Something that could put their own family at risk as it played out in their city.\n\n\"If you don't want to do it, I can take it from here,\" Orlando said gently, hearing his younger brother sigh heavily. \n\n\"We can do it here,\" Zanto said, picking up the backpack he had dropped to the floor when he arrived and dumping the contents onto the desk. Once he set up his equipment, he used the same pathways to get into the service provider's message banks and access the first of Marcella's accounts.\n\nThe first message bank had several messages from her colleagues and assistant at the law firm in which she worked which dealt with the company business. There were several cordial and polite messages from an aunt, asking her to return the call and, strangely, her mother who didn't seem to hold any affection for Marcella, using a strained and polite tone to leave a message, asking her to call her father immediately. \n\nThe second message bank, however, held what they had suspected. Calls from Apollo telling her of his planned visit, which became increasingly angry as she didn't return his calls. There were two other messages from a man who didn't identify himself. It could have been her father, but Genesis was sceptical about that, as her mother had used the other number. The two other messages were possessive and threatening, rather than affectionate, reminding her that he could ruin her life if she did not return to Perth immediately.\n\n\"It's as if they expect her to obey their orders,\" Gideon said. \"Marcella doesn't obey anyone's orders.\" He shook his head.\n\n\"Maybe they were holding something over her, to coerce into doing what they wanted?\" Genesis said thoughtfully. \"Threatening her mother, perhaps?\" \n\n\"There was no love in the mother's message, no affection or terms of endearment, considering it had been months since she left Perth. She didn't ask about Marcella's welfare or how her sister was recovering from her ordeal,\" Xavier added. \"We could try to match the voice. Gen called him when he first discovered Olivia.\"\n\n\"We could,\" Gen nodded, \"but I have a feeling that it's not him. I think it's more likely to be her abuser, the doctor figure. It felt like a lot was going on in those messages, and none of it good.\"\n\n\"I'll touch base with Nathanael and Massimo and see if they discovered anything. We can meet back later this afternoon,\" Xavier said, thinking it was time that he caught up with his friends.\n\n\"Yeah, alright. I have a few avenues that I'd like to investigate as well,\" Genesis said, scratching at his cheek. \"I can stick around here if you want updates,\" he offered, when, in fact, he was the one who wanted updates from his cousins' friends.\n\n\"I'll stay, too,\" Gideon said. \"You have the hotline to Noah, and if anything goes down, I want to be in the loop as soon as possible.\"\n\nXavier nodded but said nothing, as the men in the room all decided to stay and work at unravelling the mystery surrounding Marcella Gambaro. They could piece together why she had left the safety of the hospital and their family now. What they didn't know was why she had stayed in town and why Noah was indulging her plans, rather than bringing her home.\n\n*****\n\nNoah had walked back into the suite to find Marcella leaning over the bathroom vanity putting the finishing touches to her make up. That, in itself, would have been fine, except that she had only been half dressed. The sight of her leaning forward, her firm round ass high and begging to be spanked, clad only in a black lace thong, was enough to scramble his brain, but she also had a suspender belt of the same colour and sheer stockings, sans shoes. Her shapely legs looked even more so as she stood on tip-toe, the stockings moulding to the contours of her muscles. The matching bra pushed her perky breasts up, and despite himself, he let out a low groan as his cock hardened at the sight of her.\n\nMarcella heard the groan and stifled the smile that threatened to break free. He wasn't as immune to her charms as he made out, and she did another little victory dance inside her head. She turned her head to look at him and raised an eyebrow.\n\nThe raised eyebrow and barely-hidden smile, reeking of smugness, brought him back to reality. Walking further into the bathroom, he pulled off his shirt and turned to stand directly behind her. His hand smacked her ass lightly, and then caressed the cheek slowly, as he watched her eyes grow wider in the mirror.",
        "\"Keep parading around like this and see what happens next,\" he chuckled in warning. \"I'm only human, Marcella, and I think that you proved already just how you affect me.\" He bent over her to growl softly into her ear and was pleased by the shiver he felt run down her body. He pushed his hips up against her ass to prove his point, and then stepped back and turned on the shower before he continued getting undressed. He needed a cold shower before he did something that they might both regret. He knew that he needed her to come to him, for it to be her decision, spoken or explicitly implied. He didn't regret spanking her the night before. She had deserved it. Anything further than a little light punishment for being a bitch, however, needed to come from her. He would not be yet another man to take advantage of her. Or, at least, he hoped that he wouldn't. If she continued to parade around in lingerie, all bets were off. He wasn't a eunuch, after all. \n\nMarcella watched Noah strip down to nothing, her eyes still wide as he seemed unconcerned that she was ogling his reflection in the large mirror. Tall, lean and beautiful, he was a walking wet dream, and very few men, to her knowledge, ever managed to look that good naked, but Noah pulled it off with ease. He hissed through his teeth as he stepped under the shower spray and she realised that it was cold, and unable to help herself, she grinned widely before turning back to what she was doing.\n\nWhatever was going on between them was going to happen eventually, she admitted, if only to herself. The question was, did she take the bull by the horns and take control of their inevitable fuck, or did she make him suffer until he lost all control and took her the way he needed? Both scenarios held some appeal. She had to admit that the idea of making Noah lose his shit, and all the control he held over every aspect of his life, thrilled her. She'd seen him lose it for a few brief minutes last night in the car, but he was quick to regain the upper hand and exert his control. If she wanted a bigger and much more satisfying result, she was going to have to push him even harder. \n\nThe challenge of it excited her, but she would have to play her cards right. She didn't want Noah thinking that he could lay claim to her. As soon as she got what she wanted from Vince and found the evidence that Olivia needed to prove her story, she would be gone. Gone to wherever daredevil nature lovers dwelt and enjoyed life. Maybe she would start at Byron Bay or, better yet, Nimbin. If it was good enough for Chris Hemsworth and his family, it would be good enough for her. She could be neighbours with him or a host of other celebrities that lived there.\n\nMarcella moved into the bedroom to continue getting dressed the moment that she heard the water turn off in the shower. She, too, was only human, and her recent thoughts left her on edge and horny enough to agree to a quickie before they left the room, if she wasn't careful. She slipped on the black sheath dress and her heels, before taking a seat to watch him dress surreptitiously as she thumbed through a tourist magazine supplied by the hotel.\n\nNoah wasted no time dressing after his cold shower, trying to rub the chill from his body with the towel, not that the heat of desire had faded from the intensity Marcella had sparked with her lingerie show. He pulled out a dark suit, to match the professional look of her dress, and a white shirt. She stood as he was almost dressed and helped him with his tie, standing close without touching him, so that it was his turn to raise an eyebrow at her.\n\n\"Just trying to play nice with my fianc\u00e9,\" she laughed lightly and scooted away before he decided to take advantage of their proximity.\n\n\"Play... I believe. Nice... is another matter entirely.\" He gave her a knowing look. \"Let's go or else you will be late.\"\n\n\"We have plenty of time to get there,\" she said, checking her watch with a frown. \n\n\"We won't if you keep playing nice with me,\" he growled, leaving her in no doubt that she was winning this battle of seduction.\n\n\"What happened to the unflappable lawyer who always gave as good as he got?\" she teased, as they left the suite.\n\n\"He's on vacation, and I'm not nearly as calm and restrained as he usually is,\" Noah admitted, making her turn and eye him sceptically. He grinned at her in return but said nothing else as they walked to the entrance and waited for his car to be brought around.\n\nMarcella sat deep in thought during the short drive. She knew that she could ruffle the usually- unruffled Noah Zenati, but she hadn't expected it to be so easy, or for him to admit defeat so soon. They had flirted and fought with equal energy in the past, knowing that it wouldn't go any further than that. He had turned her down, after all, so his warning that he would make her late for her appointment if she didn't back off, while pleasing, had surprised her. She tried to put it out of her mind but the more she attempted to ignore the man beside her, the more he loomed large in her mind, and in the car he drove with such ease. Neither of them spoke until they approached the Sailing Club.\n\n\"Promise that you'll be careful in there. No unnecessary risks,\" Noah cautioned Marcella, as he pulled into a partially-shaded space near the fence.\n\n\"You'll know where I am the whole time,\" she sighed dramatically and lifted her arm, waving it to jingle the bracelet holding the tracker.\n\n\"Promise,\" he said again, reaching out to take her hand.\n\n\"I don't know who you are any more. What did you do with the arrogant, uptight Noah that always took over all of my plans?\" she sniped at him, feeling frustrated with the Mr-Nice-Guy version of Noah that she had been dealing with for the last two days. He didn't let go of her hand when she tried to tug it away, reminding her that he could overpower her if he wanted. \"Fine, I promise. Happy now?\"\n\n\"No, but it will have to do,\" he grumbled. He let go of Marcella's hand and took a deep breath as she climbed out of the car. \"I guess I'll wait right here,\" he grumbled, wondering if it was worth going against her wishes and plans and following her in. He knew that if he wanted his turn to be in control he had to play her game, so he pulled out his phone as soon as she closed her door and pretended not to watch her walk inside as he pulled up the app to track her.\n\n*****\n\nMarcella stepped into the cool, air-conditioned interior of the small club. She signed in at reception, tearing off the small paper tag from the book, and got directions to the sports bar. She couldn't see the woman described to her behind the bar, so she sat on a stool and ordered a drink. When the bartender came back with her drink and change, she placed her hand over his on the bar, stopping him from moving away.\n\n\"Can you tell me where I might find Bea?\" she asked in a sweet, inquisitive tone.\n\n\"I'll let her know you're here. Your name is?\" he asked in return.\n\n\"Selena Seabrook.\" Her smile stiffened on her face as his eyes widened in recognition of the name. She wondered if she had just walked into the missing Suebi headquarters, as he turned away and went to a phone hanging from the wall at the far side of the bar.\n\n\"You're not Selena.\" An older, large woman said, after approaching her and crossing her arms over her large bosom. \"And you didn't come alone.\"\n\n\"My bodyguard is in the car. A necessary evil since I parted ways with the Zenati a few days ago. Though I am sure that you and the people you work for are fully aware of that, too. So, let's get on with this, shall we? You have an answer for me?\" Marcella stood her ground in the face of the formidable woman.\n\n\"True enough,\" the woman chuckled. \"Why don't you call Noah in to join us, and we can ask him about this mysterious leave of absence from his family first, Marcella?\" she said, then raised an eyebrow when Marcella didn't move, almost frozen in shock that the woman knew exactly who she and Noah were.\n\n\"Hey, they know you're not my bodyguard. You should go, now,\" Marcella said quietly into her phone.\n\n\"Over my dead body. I'm coming in,\" Noah snapped and ended the call.\n\n\"Nice try,\" Bea said. \"Those Zenati men are all too misogynistic to believe that a woman can look after herself. I would bet that he will be in here in three, two, one,\" and she pointed to the entry of the bar, where Noah stood scanning the almost empty space for Marcella.\n\n\"Bea,\" Noah nodded, as he approached the two women.\n\n\"I wish that I could say it's good to see you again, Noah, but we both know that isn't true, now don't we?\" she chuckled again. \"Let's all find somewhere comfortable to sit while we talk, shall we?\" she asked, but was already leading them into the backroom before she had finished her invitation.\n\nNoah reached out and took Marcella's hand, squeezing it reassuringly. She knew that she should be mad at him for not leaving like she had told him to, but that one small gesture, to tell her that she wasn't in this alone, meant the world to her. The only other person who had made her feel like she wasn't totally alone to suffer her miserable life had been Apollo, but he had issues of his own and they had been much better friends than lovers. She wondered briefly what Noah's agenda was, and decided, at that moment, that she didn't care, and she could worry about it later. She had to deal with one crisis at a time.\n\n\"If you would be so good as to put your phones and watches on the table,\" she said. \"It just leaves any mistrust that we have of each other at the door,\" she said without emotion, as she laid her own phone on the table, turning it off. \"It seems...\" Bea said with a dramatic pause, as they followed her lead with their phones and Marcella dropped her apple watch onto the table beside her phone, \"that we both want the same thing for now,\" Bea said, without preamble, once she was sure they weren't recording the conversation.\n\n\"Oh, and what might that be?\" Marcella asked, raising an eyebrow.\n\n\"Don't play coy with me, Marcella. You can't seduce me the way that you did Vincent, to get what you want. So, I suggest that you play it straight with me today, and you might be pleasantly surprised by the outcome,\" Bea said.\n\nNoah stiffened but said nothing. This was Marcella's show, and he was determined to keep to their bargain, even if he felt sick at the thought of Marcella using sex and her body as a bargaining chip with the manager of the marina, Vinnie Vegas. What she had expected from this meeting, and what price had she been trying to renegotiate with him, drove Noah to distraction as he sat listening to the women.\n\n\"You'd give us the location of Hermione's?\" Marcella asked, sceptically. \"Because that's what he was going to give me.\"\n\n\"Perhaps, though there would be conditions, which would include orchestrating a raid on the premises on a particular night and time to coincide with the information I give you. You see, some of the people who were key players in Remington Royce's death frequent Hermione's and are trying to lay claim to his legitimate empire, as well as the scraps of his more-criminal establishments. It should be enough for me to see them go down with everyone else, but I want something only your sister can give me, once the dust settles. I want my home returned to me.\"\n\n\"Why didn't you just tell the AFP when you were in custody?\" Marcella asked, not quite understanding this woman. \"They would have taken care of the people and the place, just by your say-so alone.\"\n\n\"And admit that I knew more about what was really going on?\" Bea chuckled. \"I was a housekeeper, a cook. How could I know anything about the inner workings of Remy's organisation? I imagine they will let Kairos go too, once they are convinced that he knows very little, because he was kept out of any sensitive meetings,\" she shrugged. \"Truth be told, I didn't know exactly who had betrayed him and why, until I had the freedom to pull our network back together. Besides, I want my home back and telling them every little secret would leave me nothing to bargain with.\"\n\nNoah doubted that Kairos would ever be freed. He was Remy's right-hand man, and his only chance at freedom was to turn on those arrested with him. He would have to lay it all out for the authorities but he hadn't. He had steadfastly clung to the story that he was chauffeur and bodyguard and nothing more. Noah didn't voice his opinion though, allowing Marcella the time to put it all together, and just sat close by her side, so that she knew she wasn't alone in this bargaining.\n\n\"I can't promise anything on behalf of my sister, but tell me what you can give her or me, in return for the house, in excruciating detail and I will set up a meeting with her,\" Marcella offered.\n\n\"Noah can make those assurances. He is her lawyer, after all. You are assisting him with the case, are you not?\" Bea challenged, surprising them both. \"Do you honestly think that I would expose myself like this to you alone, Marcella? That Patriarchal society you belong to will never listen to you alone, but with him to back up what you say...\" she indicated the silent Zenati, and Noah broke the silence.\n\n\"You're right, as far as the family goes. However, I think that you underestimate the woman who sought you, and this bargain, out at high risk to herself and her sister. I am here, just as Kairos always was, just a driver and bodyguard.,\" Noah said quietly, allowing a small smirk to escape. \"If Marcella asks for my advice, which I am doubtful of, I would tell her what she already knows. The meeting she proposed would need to be with Genesis, as well as Olivia, because he is more than a little overprotective of her, and he won't be happy to let her agree to anything that he doesn't know the details of, even if she insisted.\"\n\n\"I imagine that the jealous prick would like nothing more than to be rid of the house where Selena or Olivia,\" she waved her hand, as if annoyed by the change in names, \"lived and loved Remy,\" she challenged. \"Ignoring that bonus to him and the girl, there is a gathering of the remaining power brokers set to occur in a few days at Hermione's. You have two days to get a written assurance from Olivia Royce, and I will hand you Hermione's and most of the missing people from her story, including the girl, April, whom I know you have been searching for, as well as a few other unknown important players,\" Bea said.\n\n\"What about my deal with Vincent? How is it that you are here, and he isn't?\" Marcella asked, her brow furrowing. \"How did you know that I was contacting him?\"\n\n\"Vincent, like many others, is part of an intricate information-gathering network that Kairos put together, to warn those of us who stayed in the shadows if the bright shining stars were about to explode and become black holes in our universe,\" she chuckled. \"Those of us who served those stars probably know more about their world than those who dwelled in it. Vinnie is at the bottom of that network. He had to ask questions to get the information you wanted and, once found out, explain why he wanted that information. The legal contracts you Table men force on your staff is probably the only smart thing that you do. I imagine they would be harder to sway and gather information from than those who served the elite of the Northern Clans,\" she chortled happily.\n\n\"You run this network now?\" Marcella asked carefully.\n\n\"Not at all, but I am far further up the chain of command than Vincent, who I trust about as far as I can throw. He has his uses, however, as you well know,\" she grinned and winked at Marcella, who shot a glance at Noah and blushed deeply.\n\n\"Alright, I'll take your proposal to Olivia, and meet you in two days with the written assurance. Where?\" she asked, letting Bea set the rules, as she was holding all the cards that Marcella wanted right now.\n\n\"Wait,\" Noah said quietly. \"Can I ask Bea a quick question before you agree?\" Noah deferred to Marcella, surprising Bea, who raised an eyebrow at them both.\n\nMarcella masked her own surprise and slowly turned to look at Noah. In the past, he would have just jumped in and taken over the negotiations, such as they were, but he was giving her a choice this time. He had told Bea in no uncertain terms that he was the driver and bodyguard and that she was in charge of this negotiation. She found herself nodding slowly, curious as to what he would ask the woman.\n\n\"If Marcella does this and gets you the assurance you want, then when she alerts the AFP, how would we know if she is alerting those in your network, and thus endangering the whole arrangement and putting not only herself but her sister in danger of retaliation,\" Noah asked, looking directly at Bea. He watched her, looking for any sign that she was laying a trap for them by dangling the bait of what Marcella wanted so close that she could almost taste it, before snatching it away and making her a suspect, as well as her sister.\n\n\"I am sure that your family has as many men they trust within the AFP. If you leave it to the last minute, then there will be no chance to alert the agents who may well be attending the meeting, along with the small number of powerbrokers who remain free and want the wealth and power that goes along with Remy's estate. Of course, none of them was prepared for the announcement that the marriage to Olivia was made official, and that she had a legal claim to the wealth they wanted for themselves. If they had found out earlier, they never would have left her alone in the hospital, and your brother would never have gotten close to her. When April failed to reach her, they let it go. If they aren't taken down this time, Olivia will always be in danger of retaliation.\" Bea pulled no punches about the situation now that she was dealing with Noah. He would want and expect the hard truth from her.\n\n\"Are you threatening Olivia?\" Marcella growled, hearing the threat in the words just spoken.\n\n\"Not me, but the men who seek to own her, and all the wealth and prestige she holds as the widow of Remington Royce, are a threat whether you recognise it or not. Genesis knows this much. Those bodyguards he has dogging your sister's every step are not for decoration,\" she chuckled.\n\nMarcella frowned, and Noah took her hand, squeezing it. He wanted nothing more than to wade into this conversation and take over, shielding Marcella from the ugly truth that her sister was still in danger despite his family, led by Genesis, and their influence over the situation. He said nothing else, letting Marcella come to terms with what she was doing and who she was trusting. \n\n\"Alright, you've given me a lot to consider. I'll meet you in two days. You can name the place and time.\" Marcella had begun playing this game with the Suebi weeks ago, and knew the risks inherent in it, but she needed this information. If this woman was being truthful, she could negate at least part of the threat that her sister faced, while gaining the information she needed to ensure Olivia's freedom.\n\n\"Mindil Beach Night Markets, after six,\" Bea answered, without much thought. \"The Roadkill Cafe.\"\n\n\"Sounds portentous,\" Marcella agreed with a nod of her head, then rose to her feet. \"Don't get up, I can show myself out.\" She gathered her belongings from the table.\n\nNoah followed her lead, his mind working quickly over the situation. This meeting held more than he expected, and he needed time to consider all the angles before trying to talk to Marcella about what she wanted and hoped for from this bargain. He knew that he couldn't just take over the plan. She had worked hard to get to this point but he had more than just a few concerns about her safety, and now the safety of Genesis, as the colleagues who had turned on Remington Royce fought over the scraps of his criminal empire.\n\n\"Don't say anything just yet,\" he said in a quiet voice, as he unlocked her door and looked over the car meaningfully. He doubted that they would have bugged his car, but better to be safe than sorry, especially as they had made sure that he was in the building with her. \"I need to have Val check it out. Would you like me to drop you off at our room first?\" he asked, as he helped her into the car using the same quiet voice. ",
        "\"I'm starved. Is there somewhere close that does a nice lunch?\" Marcella asked, as he slid into the other side of the car.\n\n\"I've got an idea, if you'll trust me,\" he asked tentatively, as he fished his phone out of his pocket and turned it on again, before pulling out of the carpark. \n\n\"Trust you?\" Marcella turned to look at him. \"Like I have a choice right now,\" she sighed, but she couldn't deny that he had given her no reason to mistrust him during the last few days. When he remained silent, she waved her hand. \"Fine. I'll trust you as far as lunch goes.\"\n\n\"Not quite an unequivocal yes, but I'll take it,\" he chuckled and drove to an old-fashioned American- style diner near the boardwalk. \"It doesn't look like much, but the food is great, trust me.\"\n\n\"You're asking me to trust you a lot today,\" she laughed. \"I don't think it's going to be that easy.\"\n\n\"Where you lead, I follow.\" He swept his arm ahead of them as he held the door open for her. She chose a booth in the back corner and studied the menu, making a quick decision about the food as the waitress appeared, placing iced water in a retro-style bottle and small glasses.\n\n\"That was a quick decision,\" Noah chuckled.\n\n\"I wasn't joking when I said I was starving,\" she shrugged, pouring herself a glass of water as she waited for her burger and shake to arrive. \"So, you think they bugged our car?\"\n\n\"I wouldn't put it past them,\" Noah shrugged, \"It's probably what I would do if I had enemies on every side. If she gets caught making deals with us, instead of siding with one of the power-hungry wannabe leaders of the clan, then she's in more trouble than just dealing with us. The flip side is that it is very likely that Vinnie Vegas will rat her out because he didn't get to exact his price from you for the information,\" he said, hoping that she would tell him that he got the wrong impression of that price from Bea.\n\n\"So we leave the car here for Val to pick up and check over, and Uber it back to StarCity,\" Marcella said, as if it was the most logical response to what Noah had said.\n\n\"You don't have to be afraid of me seeing my family. I promise that I won't do anything to compromise you or your plans. You're in control until we finish this plan of yours, but to get what you need without exposing you or your alter ego, we are going to need help. Help from the one person I trust above all others with this information.\" He paused and looked at her. \"My Dad.\" \n\n\"Your Dad!\" she exclaimed, nearly knocking her water flying.\n\n\"He would never betray me, and he is Olivia's lawyer in my absence, so he is in the best place to advise her. We don't have to tell him the whole story, but we do have to talk about whether what Bea is asking for is even possible. Think about it from a purely legal point of view of a deceased estate. If Olivia is exonerated and can claim the estate that Remington left behind, even if no one else contests it, how would she explain gifting the mansion to a housekeeper who allowed Remington to abuse her for a year or more?\" Noah reasoned, his professional mind racing through all of the possible obstacles in their way.\n\n\"Fine,\" Marcella grumbled, acknowledging that he had some good points, and doing it this way could negate having to deal with Genesis, Gideon and Vivienne when she tried to talk to Olivia herself. She hated that he was rescuing her again though, instead of sitting back and waiting for her to make the decisions. He was supposed to be following her lead, and once again, she felt like he was taking over.\n\n\"Look, we don't have to meet him today. You have time to think and come up with a different plan. I was just trying to help, not take over or tell you what to do. I wasn't sure you realised that I had handed over Olivia's case to my Dad when I asked for some time away from all the family bullshit,\" Noah said as he tried to smooth over what he realised was his mistake, when he had tried so hard not to take over her plans. \"I won't suggest anything else unless you ask first,\" he said sincerely, even though he that knew he was right. She had got this far on bravado alone, which was more than he had done, even with the help of the Tatar.\n\n\"Why does it have to be your Dad?\" Marcella sighed. She knew the older generation of the Tables all too well and had no doubt that she wouldn't like what Armando wanted to do with the information. She would almost prefer going head to head with Genesis, again. \n\n\"I understand that your family was...\" he paused, fumbling for the right words.\n\n\"Messed up?\" Marcella added to help him.\n\n\"Yeah, messed up. But not all families are like that. My Dad won't force you to do anything that you don't want to do. He wouldn't do that to you, or me for that matter. We're close, friends more so than father and son. We hang out sometimes. If anyone can convince Gen to do the right thing here, he can,\" Noah offered. \"He never sent my sister or us away to do our trials and gave us choices as well as steering us in the right direction. Your father is the outlier. Table families don't do the things he did to you. You can trust us. You can trust me, Marcella.\"\n\n\"Next thing you'll tell me is that Santa Claus is real,\" Marcella laughed. \"Just let it go. I'll meet with your Dad but don't try to psychoanalyse me. You won't enjoy what you find if you dig too deep,\" she said and became suddenly serious, leaning back as the waitress placed her burger and shake in front of her.\n\nSeeing the light die in her eyes as she spoke about her family, and was obviously reminded of all she had left behind when she came here for Olivia, was like a physical slap to Noah, and he cursed himself for bringing up her family when she was just questioning why he would call his Dad rather than his brothers. Unable to come up with a way to break through the dark cloud that he had pulled down over them, they ate in silence, both lost in their own thoughts, or so Noah thought.\n\n\"I know that not every family was like mine.\" Marcella finally broke the silence in a small voice, as if reluctant to speak. \"I know people tried to help me, us...\" she sighed. \"I just...\" \n\n\"I know.\" Noah cleared his throat, knowing what he was about to say might push a wedge between them that he might never overcome.\n\n\"Apollo called in his mentor from the Battaglia when we put him under house arrest for hurting you, accidental or not.\" He held up his hands. \"They filled us in on most of your story. Some other parts were in Olivia's file, and she filled in some blanks herself. Most of the reason that she hasn't wanted you close to her is that she feels guilty about what she did to you. She knows she made it harder for you at home, when you only tried to help her. I know about your father and your uncle. I know,\" he said again, unable to read any emotion in her face.\n\n\"Do they all know?\" she asked quietly, in a robotic voice.\n\n\"Not all, and not everything, but Gen and Gideon do, which is another reason that Gideon yelled at me the morning I left. He and Vivienne were... are pretty desperate to find you,\" he said. \"Dominic pointed out to us both that you have obviously dealt with it all. You have a career, a home of your own. You are hardly a basket case wallowing in the past or the injustices you've suffered. You've also made it your work to protect women in dire situations, much like Vivienne, but in different ways for different reasons. You're amazingly strong and resilient.\" Noah spoke quietly and looked her in the eye as he spoke. \n\n\"Fine. Call your Dad. The sooner I make sure Olivia is safe and protected, the sooner I can get back to my life.\" She gave a half-hearted smile.\n\n\"You wouldn't consider staying here? Making Darwin home?\" he asked. \"You could take over my practice, when I finally have to hand it over or close it for good.\"\n\n\"No, I think I will take Stevie West on an adventure or two between checking in on my mother. She wasn't much of a mother, but I can't blame her for that,\" Marcella shrugged.\n\n\"What sort of adventure?\" Noah asked, tilting his head and thinking fast. What would he do if she was determined to leave? Could he let her go so easily? Maybe he could negotiate smaller adventures throughout the year that they could do together? Fuck, he hadn't even ... He needed to... Fuck, he needed more time. Time that he knew he didn't have if he didn't make things happen fast between them. He may have finally come to terms with what he was feeling for her but, after keeping her at arm's length for so long, he doubted that she would believe he was sincere if he told her how his feelings for her had grown and intensified.\n\n*****\n\n\"Hello?\" Armando answered his phone, unsure of who would be calling him from an unknown number. He waited for a few beats, listening to the quiet breaths on the other end of the phone. \"Hello?\" he said again. \"This is Armando Zenati. Do you need help?\" he asked the silent person that he knew was on the other end.\n\n\"Yes, I think so,\" Marcella whispered into the phone. \"Could you meet me, tonight, by yourself, no watchers. It could be somewhere public if you want,\" she said, in a hurry. She listened to a beat of silence on his end and added, \"This is Marcella Gambaro.\"\n\n\"Marcella! Where are you now? I could come to you. Everybody has been very worried about you since you left the hospital. Are you well? Do you need a doctor?\" He immediately stood up and gathered his wallet and keys. \n\n\"I'm perfectly healthy, thank you, but I think I need your advice. Your speciality is family law, right?\" she asked tentatively and looked at the pool where, once again, Noah burned off his frustration by swimming laps.\n\n\"I can leave right now. Tell me where you are,\" Armando said, feeling like she might change her mind and disappear on him again.\n\nShe considered his question and wondered how much time she would have, between leaving this lounger and Noah realising that she had gone without telling him. The fall-out of that decision, and the price of breaking the rules of their agreement, could be more than she wanted to pay. Still, it was a big place. She could do this without actually leaving the premises.\n\n\"Can you meet me at the StarCity Casino, at the Lagoon Bar?\" she asked quietly. \"How soon could you get there?\"\n\n\"I'm leaving now. I can be there in fifteen minutes or less, if I'm lucky,\" Armando said, as he walked with purpose to his car.\n\n\"Armando, please don't tell Noah that I called you, not yet anyway. I need to decide some things on my own,\" she stated. \"He doesn't get that, I don't think,\" she sighed, as she heard his car start and shift into gear.\n\n\"I understand, Marcella. I'll be there soon, okay? Just hang tight,\" Armando said. \"I'm glad that you called me, for what it's worth,\" he said gently and ended the conversation before she could change her mind. Of course, she could always fail to meet him, even though she had been the one to call. He hoped she wouldn't. Reaching out to him could be the start of her trusting his family again, after the debacle of the last few days.\n\nMarcella waited by the pool, finishing her iced pineapple juice and staring at Noah's phone, as if daring his father to call it with the news that she had contacted him. Pleasantly surprised that he hadn't broken her confidence, she rose and went to the side of the pool, splashing the water to get Noah's attention.\n\n\"What's up?\" he asked, coming to the edge of the three-lane lap pool. \n\n\"I'm off to the Spa to get a massage. They had a late cancellation and can fit me in if I head over now. I'll be about an hour, so I'll drop your phone and wallet back in the room while you finish your swim,\" she said cheerily, dangling a room key from her fingers for him. \"Maybe we can try one of the restaurants here, tonight, for dinner?\" she asked, letting him know that he didn't have to worry about her returning after her imaginary massage.\n\n\"Sure,\" he nodded, looking at his watch. \"Meet you back in the room in an hour and we can decide where to eat from there?\" he asked.\n\n\"Sounds like a plan,\" she said, then stood and gathered her things, leaving him with a room key he could tuck into his swim shorts. She walked casually inside and toward their room. When she was sure that she couldn't be seen, she hurried her pace, changing quickly and running a brush through her hair, glad that she had spent the time straightening it this morning before going to meet with her contact, when her phone chimed with a text.\n\n4:29 Armando: I'm here. I don't see you.\n\n4:30 Marcella: On my way. Two minutes.\n\nPutting her hair up in a ponytail and checking her reflection, she left the room and headed towards the Lagoon Bar, where the spa was also conveniently located. She watched her pathway ahead for any sign that Noah was returning to the room early, but wasn't brave enough to skirt close enough to the lap pool to ensure he was still there. She'd lied. She'd given him no reason to trust her since he found her, yet he seemed to just accept what she said. That made her more suspicious than if he had have questioned her. It was too late now to change her plans, and she began to feel bad that she had lied to him because she wanted to meet Armando alone and judge him for herself before telling him the whole story.\n\nTyping a text as she walked, she let Noah know that the cancellation hadn't materialised, but she had decided to stay at the Lagoon Bar, to take some time to think over what had happened earlier that day, and she would still meet him back at their suite. When she looked up, it was into the soft smile and warm brown eyes of Armando, and Marcella couldn't quite get over how much Noah resembled his father. She swallowed nervously and walked over to where he stood.\n\n\"You do look well,\" Armando said as he leaned down and kissed her cheek. \"You worried us with that disappearing trick of yours,\" he admonished her, but held a cheery tone in his voice, lessening the impact.\n\n\"Usually, people don't think twice about calling me hard-headed but I get one bump and everyone forgets how many times they described me like that,\" she joked. \"I was fine in the emergency room. There was no reason to get Junie to emotionally blackmail me into staying.\"\n\n\"Is that what happened?\" Armando chuckled. \"I wondered, when I found out how determined you had been to leave before being taken to your room.\"\n\n\"Did you tell anyone that I called you and asked for this meeting?\" she asked, glancing around the lagoon area, as if Watchmen were close by.\n\n\"No, I assumed you left for a reason, though no one is quite sure what the reason might be, and I didn't want to get here just to have you run away again. You don't have to worry about watchmen. I am partially-retired and what I do is of no interest to anyone, although meeting a beautiful young woman, half my age, at a bar might raise a few eyebrows at home,\" Armando assured her, keeping his tone light. \"You know if you'd have called Noah, or any of his brothers, they would have come to your aide in a heartbeat,\" Armando said.\n\n\"Gideon and Genesis helped organise my imprisonment in that hospital, and Noah didn't come near me after my accident, so excuse me if I remain a little sceptical about your sons' motives,\" she rolled her eyes.\n\n\"I can understand that, I guess,\" he nodded thoughtfully. \"Does the ring on your hand mean that Apollo was telling the truth?\" The cheeriness fell from Armando's voice as he noticed the ring on her left hand.\n\n\"No!\" she gasped and withdrew her hand, hating that she had forgotten that it was there so soon after putting it on. \"It's um... part of the disguise. An engaged or married woman doesn't garner as much attention as a single one, and I don't need that sort of bullshit, or the complications that go along with it,\" she sighed, telling a partial truth. \n\n\"No offence, but I didn't have much trouble recognising you just now,\" he said, as the bartender approached. \"Can I buy you a drink?\" he asked.\n\n\"Did you tell anyone that you were meeting me?\" she asked.\n\n\"Not even my wife, to tell her I might be late for dinner,\" he said sincerely.\n\n\"Then yes, a vodka, lime and soda, thanks,\" she nodded to the bartender.\n\n\"I'll have a lite beer, thanks,\" he said, and placed a twenty on the bar and turned his focus back to Marcella. Surprising her, he fished his phone from his jacket pocket and held it up to her with the log of his most recent calls showing that hers was the last call he had received or made. Once she nodded in acknowledgement, he brought up the log of his text messages, showing names and times, and again there was nothing since she had called him.\n\n\"You didn't have to do that, but thank you,\" she said quietly, and accepted the drink from the barman. \"Would you mind if we grabbed that table over there before I tell you why I called?\"\n\n\"Lead on,\" he saluted her with his beer after taking a sip.\n\nMarcella positioned them at the small table so that only she could be seen from inside the building, with Armando falling into the deep shadow of a large tropical plant. Once she was sure of not being interrupted by the untimely appearance of Noah, she swallowed and looked at Armando.\n\n\"Tell the truth, do you know where Noah is?\" she asked quietly, watching him carefully.\n\n\"Truthfully, I thought he might have been with you. He's not one to shirk his duty, and leaving while Dominic was still recovering would have taken something...\" he shrugged, \"Significant.\"\n\n\"And you think that I would be significant enough to make him turn his back on his duty to the Table?\" she asked, frowning, thrown off kilter slightly by Armando's words.\n\n\"Yes,\" Armando answered, without reservation.\n\n\"No,\" she shook her head. \"He's made it more than clear, on several occasions, that he has no interest in me, romantically or otherwise. Except to tell me how to live my life and take over all my investigations to prove that he is better than me,\" Marcella grumbled, but she no longer felt the same anger and resentment about the words that she had just spewed out. Things had been different between them over the last two days, but not so different that she would fool herself into thinking that he was here for any other reason than knowing her plans and taking credit for the arrests and information that they would gather towards the investigation into Olivia.\n\n\"I think you could be wrong about that,\" Armando stifled his smile. \"Noah can come across as cool and aloof, but he's always been a bit of a loner. The number of times he went off to do things that...\" His voice trailed off as if he was saying too much.\n\n\"Things that got him in trouble?\" Marcella laughed. \"He told me about being rescued from a cliff edge, after trying to make a hang glider. You were right, by the way. He's here. Well, he's swimming laps or back in our room. He said that I could trust you. That he trusted you more than anyone else and that you would help me if I asked,\" she said, trying to keep to her plan, despite finding Armando easy to talk to, and wanting to know more about the real Noah.\n\n\"And you need my help now?\" Armando asked carefully wondering what sort of help she would need that Noah couldn't give her.\n\n\"For reasons of my own, I need to make sure that Olivia will be able to live her life as she wants to. Not the way the Tables, or circumstances, dictate. I need to make sure that she will be free to make those choices for herself,\" Marcella tried to explain then took a large breath and rushed on. \"I made some contacts who could help me prove her version of events with Remington Royce. I knew what I was doing, and I took those risks because, well, I have my reasons. I knew what I was doing, I have a plan, and an escape plan if I need it, but...\"\n\n\"But Noah came along and interfered with your plans,\" Armando finished for her.\n\n\"Not just Noah. There have been a series of events, Apollo coming here being a catalyst for disaster,\" she sighed, and looked up at the man who seemed genuinely interested in what she was saying and unconcerned by her revelations so far as he sipped his beer. \"But yes, Noah. He blackmailed me into agreeing to let him help me with my plan,\" she paused, and was pleased that Armando's eyebrows rose in surprise. \"We have this agreement that we both signed. It wouldn't hold up in a court of law, but it might hold up under Table law, or so he tells me.\"",
        "\"I see,\" Armando's voice was deeper and more serious now.\n\n\"Today I went to meet with my contact and got blindsided by something that I didn't expect, and Noah got dragged into danger because I hadn't considered the possibility that the strays would be picking at the remains of Remington's empire and be ready to rip each other apart for a small corner of it. What I'm doing has become somewhat more dangerous now, and I don't want Noah in the line of fire. I need you to order him to go home. Take him with you tonight,\" Marcella said as she got to the point of why she had called him and asked him to meet her here.\n\nArmando leaned back in his chair, tilted his head back and laughed heartily. A genuine good-humoured laugh that shocked Marcella. She had been serious. Surely this man would want his son's safety, above everything else. Why the hell was he laughing as if she had just told a joke? He must have noticed the look on her face, because he finally sobered and looked at her.\n\n\"You're serious, aren't you?\" he asked, and when she nodded, his eyes widened. \"What makes you think that I have that sort of power over my son?\" he asked, truly perplexed by the request, and wondering if she had gotten to know his son at all.\n\n\"Respect your elders. Obey your parents. Trust me, I know Table law,\" she grumbled.\n\n\"But you obviously don't know my son if you think that he will leave you to face whatever danger you're in alone just because I tell him to,\" Armando chuckled and shook his head in disbelief.\n\n\"You don't understand. Noah's in real danger and I can give you a reason to use to make him see why he needs to return with you,\" Marcella said, hating that this conversation was not going the way that she expected.\n\n\"I think that you had better tell me the whole story, don't you? Based on what you have said so far, the only way I can see that my son will come with me is, if I insist you accompany us because you are possibly in greater danger than him, if you stay here alone.\" Armando dropped any semblance of affability then and spoke seriously while pinning her with a dark gaze.\n\n\"Fuck!\" she swore quietly. \"I should have known better than to believe that I could trust anyone associated with the Tables.\" She sagged. \"Do what you want, then.\" She made to get up and move away from him.\n\n\"What I want is to help you and my son, but I can't if you don't tell me the whole story. No one knows I am here, not even my wife. Sit down and talk to me. Nothing that you say will go any further than the two of us, if that is what you want, but I can't make an informed decision about Noah unless I know the danger that he is in.\" He had reached out and grabbed her wrist loosely as he spoke, guiding her back down to her seat. \"Please, Marcella, you can trust me. I would never do anything to harm you. I know that words from my brothers and I are cheap right now, but my actions in coming here alone must count for something.\"\n\n\"Noah knows it all anyway, now,\" she sighed. \"Or, at least, the highlights.\" So, she proceeded to tell him the story of her investigation, her seduction of Vinnie Vegas and finding Olivia's boat, of the deal they had struck for more information, none of which Noah knew the details about. Then of the meetings with the first messenger and her meeting today that had blindsided her. When she had finished she sat back, feeling exhausted, and sighed.\n\n\"Me taking Noah home wouldn't matter now. They have involved him,\" Ambrose said, as he thought through what she had told him. This young woman had to have balls of steel, so to speak, and he had no doubt that she could, and would, carry on alone if she could, but Noah had gotten himself embroiled in the deal now, and he had to play it out with her. \"Besides, Olivia hasn't been exonerated yet, so she can't promise to give them something that is not hers to give.\"\n\n\"If the AFP make this bust, she will be exonerated. The people and places that populate her story will be discovered. She can prove that she was nothing more than a toy to that man,\" she said, angrily.\n\n\"What does Noah think you should do?\" Armando asked softly, reaching out to place his hand over hers on the table.\n\n\"He thinks we should call you and ask for help,\" she sighed, and even though he tried to hold it in, Armando let out a chuckle of delight. \"He's swimming laps, probably trying to work out the best way of getting me to do things the way he wants, even though he has promised to follow my lead until this is done,\" she grumbled.\n\n\"And the first thing you do this afternoon is take his advice and do what he wants?\" Armando couldn't help the small smile that turned the corners of his mouth up.\n\n\"Not exactly. I called you so that you could come and take him home, away from the danger,\" she said petulantly, knowing how this looked now and how it would look to Noah. \"Fuck!\" Marcella swore again.\n\n*****\n\nNoah paced the room. It had been well over the hour that she had asked for, and he checked his tracking app again, to make sure that she was exactly where she said she would be. He wanted to go and find her, but she had asked for the time alone to think. He had done his thinking in the lap pool, not that it had helped him very much. He still believed that they needed help from someone in his family, and his father would be the best person to confide in. Hating that he had become the needy one in their relationship, or whatever it was between them, he called her number and sat on the couch.\n\n\"Hey,\" Marcella said, sounding amused.\n\n\"Hey, you've been in that bar a while now. Maybe we should get some food?\" he asked tentatively.\n\n\"Maybe but...\" She paused for effect. \"I met this man, and he's been buying me drinks for the last hour. Do you mind if he comes to dinner with us?\" she asked.\n\n\"You're supposed to be engaged, Marcella! To me! You're not supposed to be at a bar flirting with another guy and letting him buy you drinks all afternoon!\" His temper flashed.\n\n\"Don't get your panties in a twist. He's married with a brood of bratty kids like you,\" she said, and he could tell that she was rolling her eyes at him. \"We've just been talking, and he held my hand a few times, on top of the table. Honestly, I doubt that anyone will question the disguise, especially as my fianc\u00e9e will join us for dinner,\" she laughed lightly.\n\n\"Stay where you are. I am on my way,\" Noah growled into the phone and ended the call. What the hell was she thinking, drinking and flirting with another man while he paced their suite, worried about her and the dangerous situation that they found themselves in today? He was angry. He hadn't felt this much anger and frustration with her since she had left the hospital. If she truly thought that this was just a game, then she was about to find out that he was playing for a totally different prize, and he wouldn't put up with her bullshit anymore.\n\nMarcella saw him arrive in the Lagoon area. He was mad. She could tell by the way he looked and stalked towards her like an avenging angel, flawless in his perfection, as his eyes zeroed in on hers and held her gaze as he moved closer. She held her breath as he came close and stood beside her. It was as if everything else ceased to exit around her for that moment, then his hands clamped over her wrists, and he pulled her up and into his body, using his hands on her back to press her flush against him, as he took her mouth in a brutal kiss that both shocked and aroused her.\n\nNoah ran his hands down her body and cupped her ass, uncaring of who was watching, or the man sitting with her and buying her drinks. As if the thought of her companion poured ice water on his need, he broke the kiss and moved to take her chair, pulling her into his lap, making sure that whoever it was knew that she had been claimed by a man who would not ever want an open relationship. Wrapping his arms around her so that she couldn't move from where he had placed her, he finally looked up at the man sitting, watching the show.\n\n\"Dad?\" Noah blinked, then he turned to Marcella, his arms loosening. \"You called my Dad?\"\n\n\"Neanderthal,\" Marcella accused and struggled free of his now-lax arms to move to another chair. Shocked, Noah could only blink between the two of them in silence.\n\n\"So, you're getting along well, I see?\" Armando chuckled.\n\n\"It's the disguise. I explained that.\" Marcella lifted her left hand and wriggled her fingers, making the ring flash at him.\n\n\"That's a pretty believable disguise,\" Armando smirked, as his son continued to stare between them.\n\n\"Yeah, well, he takes it a bit far sometimes,\" Marcella grumbled. \"I told Armando everything, so if you two want to discuss the situation, I will go change for dinner. Do you want me to make a reservation at one of the restaurants here?\"\n\n\"I think this conversation is best kept private,\" Noah grumbled back at her. \"We can order room service, or go somewhere else. Somewhere more intimate.\"\n\n\"Whatever,\" she said flippantly, as she stood. \"I'm going to shower and change anyway, while you boys talk.\" She winked at Armando, hoping that, despite his protests, he could talk some sense into Noah about their agreement. No matter how you looked at it, blackmail or coercion voided any agreement, even in Table Family law.\n\n\"Actually, I'm keen to do some checking before I give advice based on what Marcella has told me. Give me say two hours and meet me at Wharf One,\" Armando said, with mirth filling his eyes. \n\n\"Good idea,\" Noah nodded and let his eyes rove to Marcella, who stood uncertainly now. \n\n\"Fine, but at least give him your version of events before he leaves,\" she sighed. \"Thanks, Armando, for listening. I'll see you later on.\" With that, she turned and went back to the room.\n\nArmando watched Marcella leave through the door that Noah had emerged from, and then turned back to study his son. As the silence lengthened, he raised an eyebrow but said nothing.\n\n\"It's complicated.\" Noah finally broke the silence with a sigh.\n\n\"Blackmail, signed agreements, coercion? Complicated seems about right. Care to explain it to me?\" he said in a disapproving voice. \"Be aware, I believe her account of everything so far.\"\n\n\"Fine, it's true.\" Noah slumped in his seat and began to explain everything that had happened, since his arrival here, to force her into letting him help and protect her.\n\n\"You don't think that girl has been forced into enough corners in her life, so far?\" Armando asked.\n\n\"You don't know her like I do. She gave me no choice but to do it this way.\" Noah defended his decisions.\n\n\"You know why she called me?\" Armando asked. \n\n\"I suggested that you could help us with coordinating the raid and getting Olivia's agreement to hand over the house,\" Noah shrugged.\n\n\"No.\" Armando shook his head. \"She brought me here so that I would order you to break the agreement and return home. She doesn't want you in danger with her. She asked me here to keep you safe, not to help, or save herself.\"\n\n\"She what?\" Noah looked up, confused. \"Why would she do that?\"\n\n\"Why indeed? How about you think about that before you return to your room,\" Armando counselled, before standing and leaving his son at the table.\n\n\"Dad, wait.\" Noah stood to pursue him, finding him only a step away. \"She fucking cares,\" he said quietly. \"She cares that I'm now in danger too, because of the risks she takes,\" he said incredulously.\n\n\"She does. But she also cares about Vivienne, and blasted your mother in that initial meeting to take the heat from her friend onto her own shoulders, so that Vivienne could leave the lunch with grace and dignity. She cares about her sister, whom she has been protecting her whole life, from what I understand. Of course, she cares that you're now in danger too, but... she cares because that is her nature. What she doesn't like, and what will always stop her from truly caring about you the way you care about her, is that you have proven to be yet another man from one of the twelve Families that backed her into a corner, and made her agree to something she never would have, otherwise.\" Armando lectured.\n\n\"It's done. I can't take it back.\" Noah frowned, realising that his plan, which he had believed would give them the time and proximity they needed to begin a relationship, may be the thing that drove her away even further. \"She still cares though, right? It's not a total fuck up?\"\n\n\"Only she can answer that. I'm telling you that she sees you as her blackmailer more than her friend right now,\" Armando said sadly, wishing that he didn't have to say anything at all, but for Noah to make things right, he had to know that forcing this woman to do anything was not the way to win her heart.\n\n\"I can change that. I'm trying to get Marcella to trust me. She wouldn't have talked to me at all without the agreement,\" Noah almost pleaded for his father's understanding. \"I had to do it this way.\" \n\n\"It's not me that you have to convince, Noah. I will always see the very best in you and your intentions. I do understand why you have chosen to force her hand. She doesn't, though, and until you are both honest with each other, things between you will never progress to a better place.\" Armando clapped his hand on his son's shoulder. \"We Zenati have always had to fight for the women we love, some more than others.\" He just hoped that his son didn't lose the battle because the woman he was destined to love might just be one of the very few to walk away.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "secrets",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-19"
}