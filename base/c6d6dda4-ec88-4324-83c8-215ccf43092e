{
    "title": "Occupational Hazards Ch. 04",
    "pages": [
        "When I woke, it was dusky above the palm trees I could see outside through the open door of the bedroom. Turning my head, I stared up at the ceiling. At the linen canopy that draped in an arch over the bed.\n\n\"Mmm.\"\n\nI heard the moan just as a warm, feminine body moved against my side. I realized a knee rested over my thigh. A hand on my chest, the narrow fingers splayed out across my skin.\n\nFollowing the line of her wrist up her arm, I bit back a groan as I stared at the swell of her creamy white breast nestled between us. At the faded but still present scars marking her skin like a tribal tattoo.\n\nThen my gaze moved up to the angelic face nestled on my shoulder...my pillow. Her dark hair was spread out; some of it cascading down her bare back like a waterfall, the rest pooling on another pillow behind her head. A few tendrils had fallen across her cheek in a stark contrast of color, fluttering slightly with her even breathing.\n\nNo, I hadn't dreamt it. I\u2014Ben Hoskins\u2014was with Nikki Talmadge on a remote island in the Indian Ocean. And we'd just had amazing, mind-blowing sex.\n\nShe was on her stomach...on top of the sheets. The dying light still allowed me to see the graceful curves of her back. Her legs. Her ass. In her sleep, her fingers briefly kneaded my skin before relaxing again. She let out a soft sigh that tickled my chest, giving me goosebumps.\n\nMy cock stirred as I remembered how it had felt to be under her. On top of her. Finally inside her. Bringing us both so much pleasure.\n\nI reached my right hand over to brush back her hair from her face. She moaned again, nuzzling her face deeper into my shoulder. Her body shook. Then she lifted her head, her tongue licking her lips as her eyes slowly opened.\n\nShe stared at me for a second before she gave me a sleepy smile. \"Hey, there.\"\n\n\"Hey, yourself. Are you cold?\"\n\nShe glanced down then giggled, as if realizing we were still naked. \"No, are you?\"\n\nI was tempted to get under the covers and hold her tight, but my stomach chose that moment to growl. When she rose up on her right and cringed, I frowned. \"How bad is it?\"\n\n\"It's tolerable. The pain pills help.\"\n\nBeing away from Hunter probably didn't hurt, either.\n\nShe sat up looking around. \"What time is it?\"\n\nI checked my watch\u2014the only thing I was still wearing\u2014and was glad I had adjusted the time on the plane. \"Looks like it's about seven. Why don't we get dressed and grab something to eat?\"\n\nForty minutes later, we were seated in the pavilion of the Lighthouse Restaurant. The waters of the ocean gently lapped at the floor beneath our feet as we shared an entr\u00e9e of a sea scallops salad. It had taken some convincing her to ignore the prices, but she had finally relented and ordered the Angus beef medallions to go with my choice of lobster medallions.\n\nAfter the waiter removed the empty salad plates and we sat back to wait for our main courses, Nikki kept her eyes down or out over the water. She alternated between sipping her glass of wine and worrying her lower lip.\n\n\"Is everything okay?\"\n\nShe turned her head back to me, but she was looking at the table. \"I don't know.\"\n\n\"Talk to me.\"\n\nHer shoulders lifted then fell, hunching forward.\n\nEver since we'd left our villa, I'd noticed that she was slowly withdrawing. Becoming less talkative. Keeping her gaze away from mine. I was almost certain she was having second thoughts...about being here with me. About what we'd done.\n\nI reached out my hand across the tablecloth, my palm open to her. \"Please? I want to help.\"\n\nAfter several long seconds of complete silence, she let out a shaky breath. Her head remained downcast, but she did speak. \"You and I...it was always a daydream, you see? The more time that passed, the more I knew it would never happen. No matter how much I wanted it to be real. Maybe I had a bit of wishful thinking last Friday. A little more when you showed up at the club again on Wednesday...\"\n\nI clamped my mouth shut. Though I was confidant I knew where she was going with this, I needed to give her the benefit of the doubt. To at least hear her out.\n\n\"Ever since...it's hard to explain. I guess I feel like I've been walking around in someone else's body. That this isn't happening to me.\" She shook her head and let out a dry laugh. \"Getting rescued by your high school crush then flown to an exotic island to have the best sex of my life?\"\n\nWarmth filled my chest, and I sat up straighter though I resisted the urge to smile. She'd enjoyed it as much as I had. At least neither of us had regrets about that.\n\nShe waved her hand through the air. \"All of this? It's the stuff of fairytales. And I stopped believing in them a very long time ago.\"\n\nIf Nikki had been overwhelmed with my loft, I couldn't imagine what she was feeling right now, at least internally. I suddenly wished I had the means to get us back on a plane and take her elsewhere. Anywhere. Just so she would feel more at ease.\n\n\"I'm sorry.\"\n\nShe looked up at me then, frowning. \"What for?\"\n\nI flinched. \"Well, as you just said...all of this. My boss got a little carried away. Trust me, I was more than a little awestruck myself when we arrived. I just wanted...I thought that maybe getting away from the city...I don't know. I realize now this is just a temporary fix. It doesn't make it all better back home. You came to me for help, and I've failed.\"\n\nNikki fingers squeezed mine on the table. A tear slid down her cheek as she blinked. \"Stop it. I don't know anyone who would have done what you have for me. My coworkers suspect that Hunter is abusive. I see their looks. I hear their whispers. But I've never admitted anything outright. Amy is the only one who knows now. When she took me to the hospital, she said I should go to the police. She's kind of protective of me.\"\n\nThis Amy sounded like the blonde I'd encountered in the office. She'd been very hesitant to let me see Nikki. It was probably safe to assume that she drove a red two-door and played chauffeur every morning, too.\n\nProtective? Maybe of her own self-interests. Nikki's advice-and-ride-giving guardian angel had not only completely ignored her at the club, she'd also high-tailed it out of there after dumping Nikki at the hospital. Not exactly qualities for friend-of-the-year in my book.\n\n\"No one has gone out of their way to get me away from him,\" she continued. \"I wish I'd had the strength to leave him without help. I just didn't know where else to go. Who to turn to. Then you came along. I took a leap of faith that you meant what you'd said. Even after I pushed you away. Repeatedly. You have not failed, Ben. You've given me hope.\"\n\nI rolled my eyes at her. \"Next thing, you'll be calling me your hero.\"\n\n\"I wouldn't go that far.\" She let out a soft snort but gave me a partial smile.\n\n\"In all seriousness, I still feel bad. So please, accept my apology?\"\n\nShe nodded then sighed. \"I guess...I just wanted you to understand why I may seem a little spacy at times. I'm still trying to get used to the fact that I took that first step away from Hunter. I'm glad to take a break from the mundane chaos that's been my life for so long. If that makes any sense. I want to be here. I really do. Especially with you.\"\n\nI squeezed her hand this time. \"Thank you. I enjoy your company, too. And I'm glad that you feel comfortable being around me. If you're having any reservations about what we did back at the villa, I completely understand. I don't want you to\u2014\"\n\n\"Ben? I said I was still trying to convince myself this was real. Not that I didn't want to sleep with you again.\" She sat back and cupped her wine goblet in both hands. After a long sip, she kept the glass raised, partially hiding behind it. \"Although...I do have one concern.\"\n\nMy emotions were on a rollercoaster. One second, she was raising me up with compliments. Then my heart was taking a nosedive out of fear for what she may say next. Swallowing was difficult, and the wine did not make it any easier as I took another drink. If anything, it made my mouth feel drier. \"Don't worry about hurting my feelings. Please, just be honest with me.\"\n\nShe squeezed her eyes closed, cringing a little. \"Did you bring condoms?\"\n\nI choked on my next sip. When I could breathe again, I started chuckling. So hard it made my chest hurt.\n\nNikki stared at me, slack-jawed. \"Do you think that was easy for me to ask?\"\n\nI shook my head and leaned toward her, coughing. \"No. I'm sorry. But honey, if you're worried about getting pregnant, rest assured. It's not going to happen.\"\n\nThat lower lip came out as her eyebrows knit together. \"Nothing is guaranteed.\"\n\n\"It is in this case. I'm sterile.\"\n\nShe blinked at me. \"Oh.\"\n\n\"And I'm clean, too, so you don't have to worry about asking that one, too. I haven't had a partner in a very long time. Not even casually.\"\n\nI failed to mention that the status of not being able to father a child naturally had been voluntary: I'd had a vasectomy twenty years ago. Ever since, I'd had regular checkups to ensure that I was still shooting blanks, among remaining healthy overall.\n\nIf her face had been pink from embarrassment a moment ago, it was deep red now. The waiter returned right then with our food. Nikki busied her hands with spreading her napkin on her lap again, her smile faltering.\n\nSterility had actually been a requirement for men to sign on with the agency if they were going to work in the field. Going undercover at a moment's notice was a given. Dedicated agents were expected to go all-in with any new identity if need be unless it endangered their own lives or the lives of others. This included having sex if deemed necessary for the role. Taking drugs and willfully killing someone not in self-defense were the two exceptions.\n\nThe agency was not sexist. Women were welcome to apply. Some did. But in all my years there, only one female was ever an agent on the frontline or sent undercover. And she'd had an accident at a young age that left her unable to bear children. I'd never worked with her personally, but I'd been told she was a very good agent. However, injuries sustained in a car accident during a mission forced her to retire early.\n\nThe rest of the females employed were all office staff. Maybe because they hadn't liked that sterility clause\u2014or whatever it was on their form that they had to do to prevent unwanted pregnancies as a field agent. I didn't know, and I'd always been too scared to ask.\n\nI'd never had a desire to be a dad\u2014maybe out of fear that I'd turn out like my own\u2014so it had been an easy decision. I had been young, and some would say stupid. But I'd never regretted my choice. I figured now that if I ever settled down, I hoped my partner would understand why I had made the choice I had.\n\nWe ate in silence, but I kept my eyes on Nikki. Still trying to figure out what it was about her that captivated me so much. Every now and then, she would glance up at me. If she caught me watching her, she blushed deeper and dipped her eyes back to her plate.\n\nWhen our hunger was satisfied, we walked down the pier back to the shared beach. On our arrival and the way to dinner, we had taken the most direct route to and from our side of the island. Past the beach villas. A couple of public buildings. The other restaurants and bars.\n\nOur feet on solid ground again, I automatically steered Nikki in the opposite direction. I told myself it was so we would have more time to relax. But in all truth, I was delaying our return to the villa. Staving off my desire to take her to bed again because I needed to think.\n\nAs we walked along the sand, Nikki slipped her hand in mine. In my head, I was discussing the right way to approach the topic of her submission. How best to suggest we deal with it. And I did mean 'we.' She had asked for help; I aimed to give it to her one-hundred-percent.\n\nI slowed my pace at the jetty where we'd arrived by speedboat. That seemed like so long ago, yet it had only been a few hours. Time really did seem to drag here in paradise. We followed the path past the spa and the marine center, winding between walls of palm trees that rustled in the evening breeze.\n\nThe air was full of the sounds of the ocean ebbing and flowing. Night insects. The occasional but unintelligible conversation from another section of beach villas. There were a good number of guests at the resort, according to our waiter, but most had already eaten and retired to their villas by the time we'd ventured out of ours. Which explained why we mostly saw staff at the restaurant and hadn't encountered anyone on our walk.\n\nWe paused when the path branched off toward the water. Nikki leaned her head on my shoulder, and I wrapped my arm around her. For several minutes, we just stood there watching the ocean at the far end of two flanks of tropical flora.\n\nI could easily imagine that we were here on vacation. A honeymoon, even. But I would be lying to myself. Denying reality. Because the only reason we were here was due to her abusive ex-boyfriend being in a dangerous drug gang.\n\nA question rose up in my mind of whether I would have still pursued her if that had not been the case. But a deep sigh of content by my side told me it didn't matter. The situation was what it was. And my only concern right now was to make sure Nikki was safe. Whatever happened when we returned, we would deal with it then.\n\nLights from the pool villas\u2014the rental huts built directly over the water with a horseshoe-shaped pier connecting them\u2014shone against the night sky. Reminding me of my view back home. I had thought I'd had it made. This? This was heaven on earth.\n\nWhen Nikki shivered, I proceeded along our original path. A few minutes later, we were turning down the narrow lane that led to our private pool. I finally released her to allow her to go ahead of me into the main dwelling. I stopped on the patio, waiting to see what she would do.\n\nShe didn't hesitate this time but walked straight through to the bathroom across from the bed. I wondered if it was a conscious decision. Which would mean she was making progress. And if she could overcome that small step in just a few days\u2014to not freeze when entering a building with a man present\u2014that showed promise for other areas.\n\nI continued through the bedroom and living room to the other side where our private garden was broken only by a tunnel in the lush foliage that led to the dark beach and ocean beyond. For a moment, I considered going back inside to the fully stocked wet bar for a bourbon. But then I reasoned that I didn't really want the drink. Maybe I was making progress as well.\n\nNikki joined me a few minutes later and sat on the other chaise lounge. She stared ahead for a while, her arms and legs crossed. Her eyes shone when she finally turned her head to me. \"I'm going to go out on a limb here and ask if you want to discuss the elephant in the room.\"\n\n\"That being?\"\n\nShe let out a light laugh. \"My uh, unorthodox...sexual predilections.\"\n\nWell. So much for all my waffling on how to bring up that subject. But I still considered my words carefully. \"They are not as unusual as you may think. At least not to me.\"\n\nThat earned me a soft snort. \"I'm not really surprised to hear you say that. You strike me as someone who's used to being in control. Of your own life. Possibly others. Look at how you took charge with whisking me away. Plus you don't have the typical bachelor pad. It's very neat...tidy.\"\n\n\"As was yours.\"\n\n\"True. But that's only because he forces me to keep it like that. Once, when he was away, I told myself I wouldn't wash any dishes or clothes for the whole weekend. It felt so strange leaving a single bowl in the sink. I only lasted a few hours. I could see him in my mind, watching me. That sneer of disapproval. Even if he hadn't known, I still would have felt guilty when he returned. I would have confessed. And then he would have punished me. Not that he didn't anyway...\"\n\nI wished our chairs were closer together. I wanted to reach out and take her hand. To comfort her. To let her know I understood more than she knew. But I found myself unable to speak.\n\nIn my situation, it had been my father with that look. Usually after a loss at another card game. It kept my brother and me in line, though that never mattered much to Dad. He would still find a reason to smack us around. I'd learned early not to fight him off; it only made him madder, and he'd go after David or Mom.\n\nMom had held the same fears then as Nikki did now. At least until the day she found out her husband had gotten the life beat out of him because he couldn't pay his debts. Or so we assumed that's why he'd been kicked and punched so hard a broken rib had punctured his lung. His attacker had left him to suffocate in a back alley. The police hadn't put much effort into solving his murder when they couldn't find any leads or witnesses. The night we'd gotten the news was the first time I could remember having a sound sleep. I had been seventeen.\n\nNikki's head tipped back toward the starry sky above. \"It's been years of 'do this,' and 'don't do that.' I can't even begin to explain the relief I felt when you told me you had no rules. Do you know how long I've waited to hear those words? To know I could choose something for myself? Especially without fear of the consequences?\"\n\nShe didn't wait for me to answer. \"I knew who you were. Where I was. But it just didn't seem real. Like you said, I was in shock.\"\n\nI finally found my voice. \"Nikki, I am here for you. I want you to feel comfortable talking to me. About anything. But I have to know... Why are you suddenly being forthcoming? You've been so reserved ever since I ran into you last week. But a couple of days alone with me and...poof? You're an open book? I don't\u2014\"\n\n\"Because you've shown me you really do care.\" Her shoulders moved up and down in the moonlight as she rolled her head, turning her face away. \"And you can see right through me. I didn't need to tell you what my relationship was like with Hunter. You just knew. I don't only mean the abuse. You've had personal experience in this other...world, haven't you?\"\n\n\"Yes. But it's been a long time.\"\n\n\"I feel like I'm stuck, Ben. I don't want to act the way I do around him. To feel the way he makes me feel. But I don't know how to stop. How to say no. Maybe because part of me doesn't want to. There are things that I do like about what he does. The problem is, the things I don't like outweigh what I do. And I know I can't get one without the other, so it keeps on going. It's a vicious cycle. It's hopeless.\"\n\n\"No, it's\u2014\"\n\n\"Forgive me, I'm rambling.\"\n\n\"Ramble all you want, Nikki. But please know, it's not hopeless. You took the initiative to end the abuse. Letting it all out will help. And so will I.\"\n\nWhen she looked at me again, her cheeks were wet, her eyes shiny. \"I don't know if you can help me in the way I really need to be helped. Mostly because I don't know what needs to be fixed.\"\n\n\"I understand.\" I took a deep breath. She'd opened the door. No more hesitating; I was walking through. \"What parts did you like in your relationship with...him?\"\n\nShe was quiet again. Looking away. I feared I'd scared her back into her shell. But then she said, \"I guess letting someone else be in charge. For a while, at least. But I want the ability to be in control again. It's just...\"\n\n\"That time has never come?\"\n\n\"In the beginning, it did. But somewhere along the line, he's taken more and more control to the point that I no longer have any at all. He lords it over me. Constantly reminds me he has all of the power. That I wouldn't be able to survive without him. You saw the scars.\"\n\n\"Yes, I did. And I'm sorry.\"\n\n\"I don't fight him anymore. I put up with the hard parts so I can feel that little bit of pleasure submitting to him.\"\n\n\"Oh, Nikki.\" I swung my legs over the side of my chair and leaned my elbows on my knees. But I remained sitting as much as I wanted to go to her. To draw her into my arms.",
        "She sniffled. \"He hasn't hit me in over a month. But you bringing me home last week? He saw that as an act of defiance. Not that it was done intentionally to rile him. Or that he would have come pick me up if I'd called. He'd rather see me walk home in the rain than lift a finger for me. But because I didn't ask permission\u2014which is his second rule besides, well...\"\n\n\"Shutting down in his presence?\"\n\n\"Yeah, I guess that's a good way of putting it.\"\n\n\"Be honest, would you still follow this path if you were with someone else?\"\n\nThere was a sad but hopeful tone in her voice when she said, \"Like you?\"\n\nMy chest grew tight. \"Like anyone but him.\"\n\n\"I don't know. He introduced me to it. Plus, he supports me financially. I don't have the means to try to live without him. How would I even go about finding someone who\u2014\"\n\n\"Nikki, first things first. Submission in Hunter's mindset is not true submission. If it's not mutually consensual, it's called abuse. Do you understand that? Be honest.\"\n\nShe nodded.\n\n\"Please say it out loud so\u2014\"\n\n\"Yes, I understand.\"\n\n\"Good. A true Dominant partner also respects his sub. He does not beat or commit violence against her. Even for minor infractions. Especially ones out of her control...like the weather.\"\n\n\"But I\u2014\"\n\n\"Honey, without you realizing it, he has enslaved you and stripped away your right to stop at your own will. To take back control when you need it. If you still had that right, we wouldn't be here right now, would we?\"\n\n\"No, I guess not.\" She sniffled again, turning on her side to face me fully. \"You talk about submitting and dominating. But doesn't BDSM represent other things?\"\n\n\"Yes. It breaks down into bondage and discipline; dominance and submission; and sadism and masochism. It covers all of them, some overlapping into each other.\"\n\n\"So it's all about being tied up? Spanked and flogged? Causing or enduring pain? Depending on which area you focus on, of course. If Hunter is into inflicting pain\u2014\"\n\n\"No. The art is about the power exchange. One person willingly giving up control to another with trust, and the other accepting that gift with great consideration. As a result, both receive pleasure. Most importantly, though, the players need to be in a mutual relationship. The one inflicting pain should only be with one who has agreed to receive it. And only at their agreed-upon limits.\"\n\n\"I think I see.\"\n\n\"What you mentioned? Those are just different ways to achieve pleasure for the parties involved. Including delaying or completely withholding the results of said actions for a set time. Like telling the sub she will not have an orgasm during a scene where she is being spanked. Or not letting her touch herself when not in her Dom's presence. It heightens the arousal and can result in a more powerful release on the receiver's end when it's finally allowed.\"\n\nShe scowled. \"Sorry, not allowing me release was never pleasurable for me. The orgasm usually was subpar when I eventually got it. And the delay? No. Not enjoyable at all.\"\n\n\"Because he's not executing the method properly. He's probably just a selfish bastard who only cares about his own desires. But I'm guessing there's more to it. That instead of arousing you by denying something you want\u2014like an orgasm\u2014he uses it against you as punishment. Blackmail. If you want Y, you have to go along with X, even though you hate it or it brings you harm. Then he reluctantly gives you Y to ensure you'll comply the next time. That's sadistic. It doesn't work, though, because you're not masochistic. Not to mention, he's gone overboard into the realm of abuse. Your feelings aren't even a part of his equation.\"\n\n\"That's freaky. It's like you can read my mind.\"\n\nI shrugged. \"I'm observant. And I've seen it before. It's no different than the boy who tells the girl, if she really loves him, she'll sleep with him. He doesn't really want proof of her love. He just wants to have sex. He knows the exact carrot to dangle before her: the risk of losing him. So she gives in, even though she wasn't ready for sex yet...and she usually regrets her decision afterwards at some point.\"\n\n\"Trust me. I know exactly how she feels.\" Nikki wiped her hand at her eyes. \"I live with regret every day.\"\n\n\"I'm not saying these things to upset you. I just want everything to be clear, because it obviously was not explained properly\u2014if at all\u2014when he introduced you to all of this. And for that, I am truly sorry for all that you have endured at his hands.\"\n\nShe stood suddenly. I thought she was going to run back inside, or maybe down to the beach. Instead, she surprised me by saying, \"To answer your earlier question, I don't know. I think I would have to experience real submission before deciding if I'd still like to be a sub with the right partner.\"\n\nI nodded. \"Wise words.\"\n\nShe stared back at me. When I didn't move, she said, \"Well?\"\n\n\"Well, what?\"\n\n\"I'm ready when you are.\"\n\nIt took all of my strength to tell her calmly that while I was more than willing to show her, I first wanted to explain more of the submissive role in BDSM. Of the Dominant side. That without understanding both, she could not make an informed decision. To my pleasant surprise, she slowly lowered herself to her chair again without an argument.\n\nAn hour later, I ended our t\u00eate-\u00e0-t\u00eate on the basics of giving and receiving control properly, hoping I hadn't confused her more. I then insisted we continue our discussion in the morning. We'd had a very long day, and I was still feeling a bit of jet lag.\n\nMy final words to her as I held her\u2014both of us clothed under the sheets of the king-sized bed with the tropical breezes blowing in through the open doors on either end of the building\u2014were a reiteration that she needed time to think about what she was asking me to do.\n\nI would never admit it to her, but I was procrastinating for selfish reasons. I needed time to get my head back in the game. Because without the proper mindset, I would be no better than her recent ex when it came to dominating her.\n\n###\n\nTwo nights later...\n\nI touched my lips against the dip just above her waist on her backside. Eased my tongue out, barely touching her skin with the tip.\n\nNikki gasped, her body undulating on the bed beneath where I held myself over her.\n\nSlowly\u2014lightly\u2014I continued along the gentle curve of her spine. Eliciting coos, soft moans, and the occasional shiver from her. My chest grazed over her ass as I moved further up towards her head, my knees straddling hers now.\n\nShe lifted her hips, making me hiss as the tip of my cock tapped against the back of her legs.\n\nI smirked, wondering if it had been a conscious gesture on her part.\n\nThe torture I'd warned her about thirty minutes ago\u2014when she'd persisted that I show her the true pleasure of orgasm denial\u2014resumed. I lingered at the valley between her shoulderblades. Licking in languid strokes now, like a cat lapping at milk in slow motion. I closed my eyes as I kissed her. Tasted her.\n\nShe raised her ass again, this time with a sexy moan when my cock pressed harder against her legs. The sound broke my concentration. Made my arms quaver.\n\nI laid my forehead against her back, trying to regain a semblance of control. When I inhaled, I drank in the freshness of soap mingled with the sweetness of fruit and maybe flowers. I nuzzled my nose in the locks of hair resting over her sore shoulder. Breathed deep again. And growled.\n\nShe must have used the shampoo the resort had provided when she'd cleaned up earlier after spending the day swimming and sunbathing on the beach. I hadn't mentioned my unexplained aversion for her jasmine-scented one. But I had been pleased to see the bottle in the trash this evening before we left for dinner.\n\nI arched my own hips in gratitude. My cock throbbing as it nestled higher up between her thighs. Feeling the heat radiating from her core.\n\nNikki whimpered, wiggling under me now.\n\n\"Shh. Be still, honey.\"\n\nShe whimpered again but didn't move.\n\nKnowing she was going to feel a whole lot more of my cock on her backside, I hesitated. Mostly for her, partly for me. I counted to ten in my head. Just like I'd been trained to do if I was losing focus in a scene.\n\nTendrils of those long sessions slipped back into my consciousness. Hours in a basement with the blonde. A straight-back chair in the center of the main room. Graduating to a smaller, private room with a bed. Toys. My dark, longhaired instructor observing from the sidelines all the while. The irony of it? He was a math teacher when he wasn't instructing men how to master kinky sex with their partners.\n\n\"A Master of Masters,\" the blonde had called him. With much reverence.\n\nYet, she wasn't his partner. At least not sexually. They'd never offered an explanation, and I'd known better than to ask.\n\nStill, I wondered what had become of them. Had they found happiness in this lifestyle where everything shunned by the mainstream world was acceptable as long as it was consensual? Had they continued to thrive in a world entirely of its own where pleasure was the main goal while keeping the scales of power carefully balanced? I hoped so. They'd both deserved it.\n\nNikki's soft groan pulled me back from my memories.\n\n\"Forgive me.\" My eyes trailed up to where her arms rested on the pillow above her head. Where her wrists were bound together by my belt and then to the headboard with one of my ties. \"Is it your shoulder?\"\n\n\"No, that's fine.\"\n\nI felt the slight movement of her neck muscles as she swallowed. Heard that brief intake of breath one makes before starting to speak. But she remained silent.\n\n\"Tell me, honey,\" I breathed against her ear.\n\nShe shivered. Her voice was lower, raspier, when she answered. \"It's your...um...cock...\"\n\nMy grin returned, widening as I realized the object of her concern now lay flush against her labia. I felt the evidence of her arousal. She was swollen. Damp.\n\n\"You're being very good about this.\" I planted a kiss against her good shoulderblade. Breathed a soft sigh, which made her shudder again.\n\nShe started to say something, but I chose to rise up at that moment. The sound she emitted was a gasp that morphed into a low moan as I dragged my cock over her ass. I acknowledged both of our reactions, mine being a further flow of blood to my neither regions.\n\nI no longer had any reservations about leading her down this path with the exception that I feared I was no longer the Dom I had once been. Born out of necessity to complete a mission, I'd grown to enjoy the times when I was holding control of another. That, I remembered.\n\nThe rest? Why I had ceased being a Dom? What had caused me to come out of my undercover status? It was all still a blur in my head. Like temporary amnesia, even after six years. The only part that was clear is I'd used Director Davenport's emergency line for the first time. But I couldn't remember why.\n\nTeasing us both, I settled my cock between us along her lower back and rocked gently. Above me, her hands fisted. When her hips pressed up, I was ready and rose as well. I smiled at her groan of disappointment.\n\nI kept it up for a few more minutes. Pressing my lips against her arms. The side of her revealed face. Her neck. Sometimes using my tongue...my teeth. Watching her mouth and eyes as they did that silent dance I'd first witnessed on the day of our arrival. She was so...sensitive.\n\n\"Nikki, do you want some relief?\"\n\nShe nodded then gasped sharply as I lifted my weight off her.\n\n\"Words. Use words, honey.\"\n\n\"Uh...yes...yes, please.\" She gulped audibly. \"S\u2014\"\n\n\"Shh.\" I kissed her beside her lips. \"Remember, no titles yet.\"\n\nShe nodded again but also whispered, \"Okay.\"\n\nI was so tempted to flip her over and repeat the slow torture on her front side. But I didn't know if I'd last another half-hour. I was a little rusty. It would take more time to build up my stamina again. If I recalled correctly, I could last for almost ninety minutes. Then again, I'd had a cock ring to aid in stemming my release. Maybe I should look into ordering a few toys to prolong our pleasure...if only I knew how long we'd be staying here.\n\n\"Please...\" Another loud gulp. \"Please...Ben.\"\n\nA smile stretched across my face at the sound of her desperate plea. At the vision of her hands clawing at the pillow. I lowered myself on her again. Then I began to move in reverse.\n\nHer breaths came in shallow gasps as my mouth trailed over her shoulders then along her spine. She remained still this time. Though her legs parted slightly when my cock grazed her ass. I let my erection nestle between her thighs for a moment before I continued south.\n\nI spent some time kissing her rear checks. Licking. Nipping my teeth at the soft flesh. She cried out at that but did not buck her hips. I rewarded her by laving my tongue over the slight indentations I'd created.\n\nThen I cupped her ass. Caressed it. Squeezed it.\n\nThe last I'd held it was two days ago. While she'd flaunted it on several occasions since\u2014usually in the white bikini I'd convinced her to buy in London\u2014this was the first I'd see it up close. It was as glorious as I'd originally thought. Not too round or wide. Just enough to give her a slight bump in the back. To give me something to grab onto.\n\nDespite her appeals to have sex again\u2014to show her how to be a real submissive\u2014I'd held off. Encouraging her instead to take advantage of the amenities as a way of distraction. We'd snorkeled. Had lunch on a sandbar. Did a little deep-sea diving along the reef. Gotten lava rock massages. Swam in both our pool and the ocean. Took walks along the beach and around the island at both sunrise and sunset.\n\nBut a man can only be so strong. When she'd stripped out of her sundress tonight after dinner to reveal that she'd gone commando, my cock had threatened to bust out of my pants. I'd given into both of our desires.\n\nNow, my hands spread her cheeks up and apart. My tongue darted out and licked at the gathering wetness seeping from her entrance buried between her swollen labia. I moaned at my first taste of her sweetness.\n\nHer body shivered beneath me. Her breathy cry was music to my ears.\n\nI proceeded with drawing her essence into my mouth, my nose pressing against her ass. Teasing her while arousing her further. My cock hardened painfully between my thighs and stomach as I knelt. I abandoned her briefly so I could adjust my position and stretch out between her legs, receiving a very loud whimper on her part. Then I continued my slow assault on her tantalizing and delicious womanhood.\n\nThe sounds Nikki made drove me on. Guided me where to touch her. A melody of sharp breaths, soft coos, and muffled moans filled the air. And there was something I was sure was a purr when I lingered between her lips by brushing my tongue back and forth.\n\nMy fingers continued to knead her skin until I felt her legs tense on either side of me. Then I held her cheeks apart while I finally tongued her entrance, inserting and withdrawing quickly. The shudders that suddenly rippled across her back lifting her ass pushed me further into her.\n\nA new sound...crying...met my ears. I stilled. Started to pull away.\n\n\"Oh, God! Please don't stop now!\"\n\nI smiled and returned to the onslaught. Spreading her cheeks further apart. Drinking of her nectar. Moaning at the heat wafting off her skin. Trying to build that need twisting inside of her until she was just at the edge.\n\nHer rapid begging increased in volume. An incoherent rambling that made me think she wanted me to end the torture. But when I let up again, they changed to groans and pants of frustration as her body writhed beneath mine. Both trying to pull away and push against my mouth.\n\nWhen she lay still, moaning softly, I started the cycle once more.\n\nI lost count of how many times I built her up and let her back down. My tongue and jaw ached. Her lips were so swollen and bright pink. A spot had gathered on the bed from my saliva and her natural lubrication.\n\nAt least once, I thought I heard her say something about killing me when I was done, which made me laugh and my tongue sweep back against her tender entrance. That caused her to let out a string of cuss words and jerk on her restraints. I was glad her outburst was partly muffled in the pillow. We may be in a private villa, but there were still other guests nearby.\n\nOne more time, I let her rest for a couple of minutes. She had to be wound so tight she was ready to break. I waited until her breaths grew more even, then I went in for the kill.\n\nGripping her ass tighter, I lifted her hips up so my tongue slid down and flicked against her clit. When I sucked it into my mouth, she screamed and thrashed beneath me. Suddenly, my nose was coated with her thick cream. The scent of her made me dizzy.\n\nWhen she stopped shaking, I ran my tongue back and forth over her swollen lips. Kissing them softly before I released my hold on her. My face was covered in sweat and her essence as I pulled away.\n\nShe shuddered against the bed, moaning long and loud. Then I heard her whisper, \"Fuck you.\"\n\nI chuckled and wiped my hand at my mouth, licking my fingers. \"God, you taste amazing.\"\n\n\"I could have gone longer,\" she mumbled against the pillow.\n\n\"Really?\" I rested my hand over her closed lips, feeling her damp heat still throbbing.\n\nShe gasped and pressed into the bed away from my touch. \"Enough! I was wrong!\"\n\n\"Thought so.\" I crawled up beside her and released her hands. Kissed her neck. Her sweaty cheek. \"Do you see what you've been missing, honey?\"\n\nShe curled into my embrace, her body still trembling from aftershocks. \"Oh, hell yeah.\"\n\n###\n\nSomething had been niggling at the back of my brain for a while, but we had been here for five days before it occurred to me what exactly it was.\n\nWe'd been snorkeling this morning. Any time in the water seemed to tire Nikki out, so the rest of the day was spent around the villa sunbathing and having small talk in between having our butler deliver our meals. He had just cleared away our dishes from an early dinner when I moved to recline on the daybed lounger situated under the shade of the trees surrounding the patio. Nikki was only a few feet away at the infinity pool's steps, pulling her T-shirt over her head to uncover her bikini.\n\nI lay there, riveted as she revealed her body. Once more, I remembered the lines I'd traced with eyes, lips, and fingers. The hidden areas I'd explored, drawing such wonderful sounds from her as if she'd finally come alive in this paradise. Her creamy skin was just dark enough not to be washed out by the white swimsuit. And the color of the fabric was great for her brown hair. It also drew your attention away from her scars.\n\nScars. I propped myself up on one arm. What had caused them? I'd assumed a cane or riding crop. But I'd not seen any of those in the bedroom closet. Unless they were stashed under the bed or elsewhere in the house. Still...\n\n\"Hey, Nikki?\"\n\n\"Hmm?\" She took a step down into the pool.\n\n\"I know we've haven't talked much about your history with submission. Can you tell me what you dislike about it?\"\n\n\"The mindless control, obviously. And the whippings.\" She paused on the next step and cocked her head but didn't look back at me. \"I'm not a 'pain slut.' He likes to call me that. But I don't like being hurt. Or humiliated.\"\n\nMy throat felt tight suddenly. \"Does he hit you often?\"\n\nShe took another step, deep enough now that she could touch the water with her hand. Her fingertips grazed over the top, causing ripples. \"Depends on if he thinks I'm disobeying. Or if he is in a bad mood. Or even just because.\"\n\nI held my breath, kicking myself for bringing this up. But we did need to discuss this if we were going to move forward with repairing the mental and emotional damage Hunter had caused. Plus I personally wanted to quell my curiosity. \"What does he hit you with?\"",
        "\"Usually, it's a flogger. One of those with soft suede strips. I don't mind that. It's very arousing if he teases me by dragging it all over my body. But even suede hurts with the right force, and this last year, he's increased the momentum in his swing and not backed down. Sometimes, it's his belt or a riding crop.\"\n\nMy eyes closed against my will to keep watching her. And suddenly, I imagined her bent over her bed. Naked, at least from the waist down. I couldn't picture Hunter, but I saw the implement being brought down again and again. Slowly at first. Then increasing in speed. On her ass. Her legs. Saw how her body tried to jerk away from the impact. How her skin reddened.\n\nIf I touched her, would I feel the heat emanating from her skin? The throbbing trying to escape from within? The moisture between her thighs?\n\nI could almost hear her gasps. Her cries. But instead of anger, I felt...\n\n\"He used to use a shortened bullwhip,\" Nikki said, breaking me from my daydream. I blinked and saw her shake her head as she took another step down into the water. \"That was when he was really pissed. Something about work. He used to practice with that thing for hours until he got the right flick of his arm and wrist to fling that whip out to strike just right. To hit the target multiple times in the same place.\"\n\nI literally felt the color drain from my face. \"Is that how you got\u2014\"\n\n\"The ones on the front, no. Those were a cane. He was too afraid of striking my face by mistake. But the rest? Yes. He'd gotten so good, he could hit the same spot three or four times. I always screamed so hard. Even after the welts bled and I became numb.\" She was up to her waist now, both hands trailing through and across the water, as if spreading it around her. Her voice lowered to a whisper, but I still heard her clearly. \"The closer you are to the target when you strike, the more pain she feels. That's what he'd tell me. He was just giving his pain slut what she wanted.\"\n\n\"I'm so sorry.\" My voice sounded strained. And as tormenting as this experience must have been for her, my cock was straining as well in my shorts. I swallowed heavily, trying to word my next question right. \"Nikki? If you were screaming, why didn't the neighbors report it or at least come make sure you were okay?\"\n\n\"Oh, we were always in the basement. It's soundproofed.\"\n\nI was sitting upright now. \"You have a basement? I didn't see any\u2014\"\n\n\"There's a door in the kitchen. Hunter hung the baker's rack on it, so it's easy to miss.\" And with that, she dove under the water, drifting halfway across the pool.\n\nI stared blankly at where she'd stood a second ago. A basement? A fucking basement with a probably not-so-innocently disguised entrance? And it had been designed to restrict noise? Bad intel, my ass. That guy was hiding something. How could I have second-guessed the team?\n\nNikki continued to swim idly, as if the information she'd just given me was trivial. Well, I guess it would be, according to her. How was she to know we were investigating her boyfriend for federal crimes?\n\nI tried to act casual as I watched her sleek body glide back and forth through the water. But inside, I was anxious. Counting the seconds until I could get my cellphone to send this new information to Director Davenport.\n\nWhen I'd thought enough time has passed, I stood and walked into the bedroom. Then I stared at my phone in my hand. What were the international rates to call from the Maldives? Maybe I should text. No, I didn't want any evidence of actual details.\n\nI scrolled between two numbers on my screen: Brother and Dad, as I'd aptly named them. Davenport's emergency line? That was under Mom. For all three, it would give you a generic voicemail message if you didn't press the five key at the first ring. I closed my eyes and pressed down then held the phone to my ear. After the first ring, I pressed five. Three more rings later, I heard the faint static click that indicated the line was being picked up.\n\n\"Ben? Do you know what time it is? Some people sleep.\"\n\n\"It's midnight there, Patrick, and you're never asleep before one on a weekend.\"\n\n\"Very true.\" He whispered something that sounded like 'be right back' before he let out a grunt. And I swear I heard the soft squeak of bedsprings.\n\nI sighed. \"Were you in bed with a girl?\"\n\n\"Nope.\" There was a long groan, as if he were stretching. \"Two girls.\"\n\n\"Damn it, Patrick. You need to grow up.\"\n\n\"Killjoy. So, to what do I owe this privilege? Paradise not living up to your expectations?\"\n\n\"No, it's great.\"\n\n\"Good. Got a great view from your room?\"\n\nI stared out the doorway to where Nikki was ascending from the water. Her breasts bobbed on the surface as she tilted her head back and dragged her hands through her wet hair, her mouth open but eyes closed. My cock twitched in delight. Then she went under again.\n\n\"Yeah, the view is to die for. But we can talk about that when I get home. I've got some new information I think you can use. Can you pass it along to Davenport?\"\n\n\"Absolutely. Let me grab a pencil.\" Patrick's voice sounded serious, for once. I heard a drawer scraping open then a rustling sound. \"You know, your little rescue has caused quite a stir.\"\n\n\"Oh?\"\n\n\"Michaels came back from his trip\u2014which we did verify was a drug run\u2014and blew a gasket when he found his chick was gone.\"\n\n\"Her name is Nikki.\"\n\n\"Yes, sorry. By the way, have you two\u2014\"\n\n\"Patrick, focus. What happened?\"\n\nHe cleared his throat after I heard another weak apology. \"Grant was at our house doing surveillance. He heard Michaels screaming and yelling across the street. Saw him slam the front door so hard the window in it broke. Grant got it all on tape. Michaels must have called a pow-wow that night. At least ten cars were parked there over the weekend. Cops showed up Sunday morning after one of the neighbors complained because someone was blocking his drive and no one would answer the door. All those people in that shack and no one heard someone knocking?\"\n\n\"That's why I'm calling. I know where they were.\"\n\n\"Are you sure you're not still secretly on the team and they've got you running intel from a remote location?\"\n\n\"I am definitely at a remote location, but I'm not on the team. Now shut up and listen. I don't have much time.\" I saw Nikki had gotten out of the water and was drying off. When she bent down to pick up her T-shirt off the deck, exposing a good portion of her breasts to me, I stifled a moan and walked further into the villa towards the other deck. Confidant I was out of earshot in our tropical garden, I relayed the information Nikki had given me.\n\nPatrick confirmed he had gotten the keys I'd left, but they had not yet breached the house. Nothing had indicated there was any need after my quick walkthrough. But now...\n\n\"I'm not asking you to keep me informed. I wouldn't have called if I didn't think it was important. Just...uh...don't hold it against Nikki, whatever you see, okay?\"\n\n\"What the hell are you expecting us to find?\"\n\n\"Ben?\" Nikki's voice travelled through from inside our rooms.\n\n\"I have to go. Please. Be safe, okay?\"\n\n\"Always am, man. Always am.\"\n\n###\n\nI turned around to see Nikki walking through the villa toward me, still in just her bikini. Her smile brightened, and she tossed the T-shirt in her hand to the couch as she passed it. Then she joined me outside.\n\n\"Hey, there. Have a good swim?\"\n\nShe nodded.\n\n\"Good.\" I slid a hand behind her head and drew her mouth to mine, sighing softly at the taste and feel of her. For a brief second, I thanked Hunter Michaels for being a world-class asshole.\n\nNikki's moan was contagious, and soon we were holding each other, hands sliding everywhere. Mouths opened. Tongues intertwined. Rapid heartbeats pounding against chests pressed together.\n\nThere was something magnetic between us. I couldn't deny it. And as much as I tried to fight it, we kept being drawn together.\n\nThe wind picked up as we made out. I paid it no mind until I felt a drop of water on my shoulder. Then another. Heard the bedroom door on the other side of the villa slam shut. Over the treetops, I could see the sky darkening. It was still too early for the sun to set. A storm was brewing.\n\n\"We should go inside.\"\n\nShe just moaned and pulled my mouth back to hers.\n\nI started to walk her backwards. We paused in the living room as I shut the door, and then my hands found their way down to her ass. Gripping her supple skin, I ground against her hips. She slid her arms behind my neck as she did a little jump that let her wrap her legs around my waist. I groaned as her mound landed right over my hardening cock. Then she wiggled a little.\n\n\"Woman, I swear.\" I pulled my hand back, intending to swat her ass playfully.\n\nAs if reading my mind\u2014at the simple loss of one hand holding her\u2014she let out a loud whimper and started to arch away from me, her back tensing.\n\nIt was enough to break through the cloud in my head. To remind me that hitting her was the last thing I should do, even if no malice was intended. I replaced my hand, gently squeezing her cheek and whispering apologies in her ear before kissing her again until she relaxed.\n\nAt the bed, I lowered her to sit down. But she kept her feet locked behind my hips. As she broke our kiss, her body curved back seductively.\n\nMy hands took on a life of their own, caressing her exposed skin between the top and bottom of her suit. I leaned down and planted a kiss at her navel. Darted my tongue out to tease her, which made her giggle then sigh.\n\nKeeping my feet on the floor, I braced my hands on either side of her. Then I kissed and licked my way up her stomach. When her fingers stroked my arms, I pulled back.\n\n\"Put your hands behind your head. Don't move them.\"\n\nHer gasp and the wide-eyed look she gave me told me she wasn't expecting a command. I saw hesitancy in her eyes. A tinge of trepidation.\n\n\"It's me, Nikki. It's Ben. You are safe.\"\n\nShe remained unmoving.\n\n\"Do you trust me?\"\n\nA blink finally. A flick of her tongue at her lips. Then a slight nod. After a moment, she whispered, \"Yes.\"\n\n\"Hands behind your head.\"\n\nSlowly, her arms rose, and she lifted her head a little, sliding her palms behind it.\n\n\"Don't speak, unless you need to say the safeword, which is 'red.' But you can make as much noise as you want. Nod if you understand.\"\n\nHer lips pressed together, and then she gave me another slight nod.\n\nMy fingers continued stroking the soft skin of her belly as I spoke in a low, even tone. \"I had plans for this evening. A little fun in bed but no release for you. I was going to take you to play pool down at the lounge. We've done orgasm delay. I wanted to try withholding it indefinitely. To see how long you could go without breaking down.\"\n\nHer eyes grew wide at that.\n\n\"But the weather is not on our side. And I fear I won't be able to resist you if I build you up and we stay cooped up in here.\"\n\nNikki let out a whimper of a sigh. From relief? From arousal?\n\nI raised an eyebrow and gave her a smirk. \"But that doesn't mean we can't still work on some other areas. If you are willing?\"\n\nHer eyes closed, and her chest expanded for a moment. When she looked up at me again\u2014as she exhaled slowly\u2014her body shuddered. Then she nodded at me.\n\n\"Good girl.\" I lowered my mouth to her navel, lingering with my tongue as I teased the dip in her smooth abs. Noticed she had no scars there. As if Hunter had feared damaging that part of her. Had the bastard intended on her having his children some day?\n\nI tried not to think about that as I continued my path upwards. At her bikini bra, I ran my tongue along the bottom hem of the fabric. I smiled at her up through the valley of her breasts to see her watching me, her eyes dark. She started to pull her arms out from under her, her chest rising slightly as I licked the tip of my tongue along the exposed skin between her cleavage and planted a soft kiss there. Slowly, as our eyes locked together, she relaxed against the mattress.\n\n\"Good girl.\" I whispered it this time, just before I shifted my mouth to suck on her nipple right through the damp cup enclosing her breast.\n\nHer whole body lifted off the bed as she cried out.\n\n\"Mmm. Very nice.\"\n\nI closed my lips once more, holding onto her nipple as I ran my tongue back and forth over it. I tasted the water from the pool. Smelled the coconut sunblock she'd put on earlier. And felt her feet tighten their grip. Could she feel my cock throbbing?\n\nUsing my teeth, I tugged the cup to the side. Then I suckled her puckered nipple again, pressing my face against her soft mound with a moan. Her whimpers grew louder, sounding much like the wind I could hear outside. When her nipple was red and wet, I nipped lightly then released it to give her some relief.\n\nHer chest was heaving now. A sheen of sweat covered her brow. She gave me a slight shake of her head when I moved toward her left breast.\n\n\"Red?\"\n\nShe froze, then her head shook faster.\n\nI smiled. Teased her through the fabric before I pulled it aside, again with my teeth. Then I repeated the sweet torture on her other nipple.\n\nBy the time I'd thoroughly suckled both sides, she was panting and writhing beneath me. I could see the tension in her neck. In her bent arms as she now fisted her hands beside her head.\n\nBehind her head...next to it. I would ignore that minor infraction. It still accomplished my goal.\n\nShe'd done well with denial when her hands were physically bound. I wanted to see how she reacted when her only restraints were a verbal command. It was a different type of mental bondage than what she was used to. One where she had the control to stop it if uncomfortable.\n\nI stared at her partially exposed breasts. At her taut peaks. The darker skin around them was swollen and shiny. The rise and fall of the swells slowed as her breaths evened out.\n\nNikki flexed her back a little with a soft whimper. Lifting her breasts toward me. Begging. She'd found a way around my commanded silence: body language. It only added to my growing arousal and made me growl.\n\nI watched her for what seemed like several minutes. From her bikini-clad womanhood. Up to her narrow hips. Settling again on the enticing globes I'd been worshipping only moments before. Then I pinched her tortured nipples between my fingers and thumbs.\n\nNikki's jaw dropped as she audibly sucked in her breath, but no other sound\u2014no expectant scream\u2014met my ears.\n\nOur gazes locked. Hers was such a brilliant green. Calling to me. Drawing me in further. I felt a sense that she was trying to dig into my mind. To read my thoughts. It felt like an invisible hand was pulling us closer together, although our bodies remained several inches apart. Her soul seemed to connect to mine. Communicating in another language.\n\nFor a brief moment, I wanted to tell her everything from my past. All of my own secrets. Including why we were here.\n\nBut then, she tilted her head back. A brief cry finally escaped as her eyes clenched.\n\nI gasped, blinking rapidly as the bond broke. As I released her nipples. As I stared back at the unfocused look in her eyes as they opened again. Her brown eyes.\n\nWhat the hell...?\n\nAfter counting to ten twice and taking deep breaths, I refocused. Pushed up the bikini top. My mouth salivated from the sight of her.\n\nShe moaned openly as I finally cupped her naked breasts in my hands.\n\nFor a moment, I just held her. Felt her warmth. Her quickening heartbeat.\n\nWhen I licked the flat of my tongue across both swollen nipples, she convulsed as she cried out louder. I laved her breasts languidly one at a time with my mouth as I held her sides, my thumbs stroking the soft skin next to her breasts.\n\nHer feet eventually released their lock, her legs falling away. As I continued worshipping her up above, I felt a slight, foreign pulsation. Realized my erection lay against her clit. I could feel her heat increase. Her dampness.\n\nHer soft pants and mewls drove me on. I knew she was at the edge. I thought again about denying her release. To leave her hanging...maybe have her suck my cock so I could think straight. But we had not broached the subject of blowjobs yet. And her continued obedience\u2014despite the increasing strain I saw on her face\u2014convinced me to keep going as I was. Right now, she must be in that headspace I know she'd longed for but had probably never achieved.\n\nI concentrated on sucking her nipples again. Squeezing her breasts. And soon, she began to buck and moan with her orgasm. I ground my hips against hers. A loud growl ripped from my throat as I felt her pulsing harder, my cock responding in turn.\n\nShe was still quivering and emitting soft noises as I stepped back from the bed.\n\nMy knees felt weak for a moment as I took in the picture of her lying there, breasts swollen and red, marked by my teeth. I hoped she wouldn't bruise. Then my eyes rose to her face where those pink-tinged lips were now red and swollen with self-inflicted markings, and her soft eyelids hid whatever thoughts or emotions I had hoped to find there. Her arms lay bent beside her head, her hands loosely tangled in her hair. She looked like she was sleeping.\n\nI stripped, groaning as I freed my cock. It had become painfully hard. Was leaking precum. The throbbing within echoed my heartbeat above as it thumped within my ribcage.\n\nHer head lolled to the side with a soft sigh as I tugged down her bikini bottoms. The fabric stuck a little from her release, and I could smell her essence wafting up to me once I'd pulled the bottoms free. I contemplated leaving her top bunched above her breasts, but I decided she'd be more comfortable without it. Her eyelashes flickered open then closed again as I slid the material over her head.\n\nBoth of us fully naked now, I lay down on my stomach at the end of the bed and positioned her knees over my shoulders. Like a football player driving against the tackling dummy\u2014but with a little more finesse\u2014I crawled forward, using my shoulders to push against her ass until we'd moved further up the bed. Then I positioned her arms against the pillow, her palms behind her head again.\n\nShe whimpered a little but didn't try to resist me. That could be because she was probably still drifting back to earth, though I had only played with her breasts. As soon as I breathed against her naked sex, though, she cried out and lifted her head, her eyes wide.\n\nI slithered my tongue out, tasting her sweetness. Watching her until her eyelids lowered to half-mast. Then I dragged my tongue up to flick against her clit.\n\nHer hips thrust up sharply as she cooed.\n\nWhen I rubbed the tip of my finger through her heated folds, her bottom lip rolled inward as she closed her mouth. I stroked her so very lightly. Yet it probably touched a million different nerves. Her neck flexed as she pressed her head back into the pillow. She swallowed then relaxed her jaw, rolling her head back and forth, her eyes closing.\n\n\"Do you want me to stop?\" I stilled my hand, unable to hide my smirk. \"You may speak.\"\n\nShe wet her lips, drawing in a heavy breath. Her right eye cracked open. When she spoke, her voice was raspy. \"I will kill you if you stop now. Ah!\"\n\nI watched her face contort as I slipped my finger up inside her. The temperature increased around the digit. Her body held it tight in a contraction that made me groan. I returned to relishing her sweet honey as I twisted my hand against her. The taste on my tongue\u2014the smell infiltrating my nose\u2014sent me into a trace. I added another digit, fucking her slowly. \n\nHer breaths became louder\u2014more shallow\u2014with each inward stroke. Shaking as I withdrew. She was slicker, too. Outside, the rain was coming down hard, the sound competing with hers as I tormented us both.\n\nSoon, her hips arched hard against my face, her shrieks ending abruptly as she froze mid-air. She had clamped down so tightly inside, I had to amp up the effort behind my thrusts. I stroked my other hand along her thigh as she quivered around my shoulders.",
        "\"That's it honey. Come for me.\"\n\nI continued licking her, building the storm within her as she rode the waves. And through it all, her hands remained just where I'd placed them. Which only urged me to keep going.\n\nI lost track of how many times she came. By the time I'd decided to give her some relief, I was delirious myself. I managed to extract myself from her legs. Gently, I turned her over and positioned her knees under her. Then I slid into her with one stroke, both of us moaning as her spasms dragged me in deeper.\n\nIt didn't take long before my balls tightened and I was releasing myself with a guttural roar inside her hot, slick channel. I'd taken her from behind to avoid rubbing against her overly sensitized clit. Yet her body still responded to my ministrations, undulating as she moaned weakly.\n\nExhausted, I crawled up behind her and pulled the covers over us. Silently thanking her for telling the butler not to make the bed today. I wouldn't have had the energy to move the both of us to pull back the sheets.\n\nTo the sound of the steady rain and Nikki's slowing breathing as I held her back to my chest and she relaxed, I drifted off into another paradise.\n\n~H"
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "bdsm",
        "dominance",
        "submission"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/occupational-hazards-ch-04"
}