{
    "title": "The Lazy Lemon Sun Ch. 02",
    "pages": [
        "INTRODUCTION: If you're still with me, much of the set up is done. Now it's time to really introduce the conflict or, more accurately, conflicts. Plural. Thus, since I'm too busy getting the stage all set, there was no room for sex in this part. None. Also, since this is being posted on consecutive days and I haven't yet read your blistering comments, I just want to point out a few other things, too.\n\nFirst, I know my character is kind of unsure and befuddled much of the time. In his defense, though, he's the younger, more unworthy son and he's always been in the shadows of his father and brother. Also, I'm generally befuddled and confused myself, so there you have it.\n\nSecond, I really do look forward to reading your comments on the moral dilemma I am creating here. This one isn't so black and white, pretty much right up to the end. I'd be interested to hear your take on it. What would you do? The dilemma spills out over the remaining chapters, and I'm almost giddy to see whether any of your positions change.\n\nThus, I beg of you all, if I could take weeks to write this, please do me the kindness of taking a few minutes to at least post a comment or drop me a line with your thoughts.\n\nCHAPTER THREE\n\nThe Tennessee Governor's Mansion is this really pretty red-brick number in Nashville. One of the bonuses of being the boss, I guess, is that you can reside in that colossal joint if you want to. The downsides? Well, I'm not sure how I'd take to all the tourists traipsing through on their little guided tours. Doesn't seem to make much sense to live such a big place if you can't have sex on the stairways whenever you want, right?\n\nAnyway, Sandy and I were amongst a group of family staying with her folks at the Mansion. The other people there?\n\nWell, gathered around the table were her folks and two younger brothers and my folks. That's it. And that's how I knew something big was up.\n\nDarlene, the busty, frumpy, perpetually frowning middle-aged maid, wheeled in a tray laden with dessert just as Pat stood at the head of the table.\n\n\"I'd like to thank y'all for coming this weekend,\" he said, raising his glass of wine.\n\nHere, here, we all echoed, raising our glasses and taking a sip. I waved off the bread pudding for dessert, and Pat smiled at me. \"Darlene, dear, why don't you get him a glass of bourbon instead.\" I looked at him, and his face was strangely nervous. \"And me, too, if you don't mind.\"\n\nShe nodded and scurried to the kitchen to fetch the bourbon.\n\n\"I'm not really sure how to say it,\" he continued, putting the glass down in front of him but remaining on his feet.\n\n\"Just say it, Pat,\" Dad said evenly. His sly grin said he knew what was coming.\n\n\"Yeah, Daddy, say what you've got to say,\" Patrick Junior said, bored with the theatrics.\n\n\"I'm gonna be puttin' my hat in for the Presidency,\" he said, his eyes scanning our faces for our reactions.\n\nI'd like to say I was stunned, but I wasn't. That's what politicians do; they run for higher office and higher office. Once you're Governor, the legislature no longer holds any allure. You're no longer the boss, the head honcho, the big cheese getting his ass kissed everywhere by everybody. Therefore, the only higher office for Pat Truelson was the White House.\n\n\"Uhm . . . well . . . Debra and I have talked it over, and we've decided that it's now or never. The Republican field's weak right now, and I've got a real shot.\"\n\n\"Southern politicians dominate at this level,\" Dad agreed with him.\n\nPat gave a nervous smile. \"Let's hope so.\"\n\nHe sat, looking around the table before his eyes settled on me.\n\n\"What,\" I said. Not a question, but a statement.\n\n\"I'm gonna need everyone here to be with me on this, Mark.\"\n\nI nodded. \"And you suspect I won't be because . . .?\"\n\nHe fidgeted. \"You and my little girl. Everything good there?\"\n\nI was surprised. I looked at Sandy, who just gave a nervous smile in return, then around the table at the other faces. They all looked at me as if they didn't know the answer.\n\n\"Why wouldn't it be?\"\n\n\"You two haven't had any babies yet,\" Debra finally said.\n\n\"Not my call. I can assure you I'm doing my part.\"\n\nPat gave a big grin. \"So I can count on y'all tagging along to events. Holding hands and smiling and looking the loving young couple?\"\n\n\"Of course.\" I turned to Sandy. \"Right?\"\n\nShe beamed. \"Absolutely.\"\n\n* * * * *\n\n\"What was that all about tonight?\" I asked a couple of hours later as I slipped beneath the covers in the guest room allotted to us.\n\n\"What?\" Sandy said, yawning.\n\n\"That whole 'How's your marriage doing' routine?\"\n\n\"High stakes, hon. I guess they don't need any bumps in the road before the primaries or\u2013if he makes it that far\u2013the general election.\"\n\n\"And why would they think there'd be problems?\"\n\nShe gave a tired shrug. \"Not a clue.\"\n\n\"You didn't say anything to them?\"\n\n\"Not a word. I told them we were all in.\"\n\n\"So you already knew about this?\"\n\n\"They told me when we got here.\"\n\n\"And you didn't tell me?\"\n\nShe gave a lazy smile. \"Didn't want to spoil the surprise.\"\n\n\"They ask you about our marriage?\"\n\n\"Yeah.\"\n\n\"And you said . . .?\"\n\n\"That we were in it for the long haul.\"\n\nShe snuggled in and curled up close to me. I was flat on my back, staring at the ceiling. After a moment, I said, \"Sandy?\"\n\n\"Hmm.\"\n\n\"Why haven't we had any children yet?\"\n\nShe propped her head up in her hand, laying on her side and staring at me. \"Because we've never discussed it?\"\n\n\"Is that the only reason?\"\n\n\"You want kids?\"\n\n\"I don't know. I mean, we're so busy all the time, I guess. Still, I'd've thought we'd have at least talked about it sometime.\"\n\n\"Why?\"\n\n\"Isn't that how most marriages go?\"\n\n\"But we're not most marriages.\"\n\nI turned my head and stared at her. Her expression was unreadable. She seemed confused by my questions, and I couldn't figure out why.\n\n\"You think we could talk about it sometime? Sometime soon?\"\n\nHer eyes narrowed, then a bright smile came over her face. A look of unbridled joy.\n\n\"Sure,\" she said. \"When we get out of here\u2013get back to our own place when I get back from this Denver trip\u2013we'll have a nice long discussion and figure it all out.\"\n\n\"Maybe next Sunday?\"\n\n\"It's a date.\"\n\nShe hugged me, whispering into my ear, \"I really do love you.\"\n\n\"Really?\" I whispered back.\n\nShe hugged me tighter. \"Really.\"\n\nAn hour later, her professions of love\u2013and my entire understanding of what love really is\u2013were shattered like a crystal goblet flung at a fireplace.\n\n* * * * *\n\nSandy was no longer cuddled into me. Instead, she was curled into a ball on the far side of the bed, breathing in light, even patterns that told me she was out like a light.\n\nMe? I was wide awake. Nothing about the whole evening made any sense. And for not the first time, I was struck by Sandy's curious responses to what should've been simple questions.\n\nGiving up on getting to sleep anytime soon, I slid out of bed and pulled on a robe. Maybe another bourbon would help me get to sleep.\n\nWalking softly so as not to wake anyone, I crept down the stairs and was surprised to see light sneaking through the almost-closed door to the study. Drawing closer, I heard voices.\n\n\"You mean you never told him?\" Pat Truelson said.\n\n\"Of course not,\" Mom replied.\n\n\"Why not?\"\n\n\"Because he was never the hard sell on this. Sandy was.\"\n\n\"How so?\"\n\n\"The boy's been in love with her since he was almost out of diapers,\" Debra Truelson explained. \"Sandy, on the other hand, was always a bit of a wild one. And independent as hell.\"\n\n\"So how'd you get Sandy to go along with it?\" Dad asked.\n\nI felt a deep chill run through my nerve endings, a chill of anger and embarrassment.\n\nDebra gave a low, throaty chuckle. \"Truth be told, we didn't. I begged her to just go out with him. See if maybe there's something there. She didn't want to. Thought it was creepy, what with him being Stevie's little brother and all. But I told her she needed to at least try for her daddy. If everything worked out right\u2013the timing and all\u2013it would all but sweep him into the Governor's Mansion. And she'd benefit from that. Her career would benefit.\"\n\nSomeone snorted, and Pat said, \"Well, it did that all right.\"\n\n\"She was hesitant for the first week or so, their first couple of dates,\" Debra continued. \"But that Christmas she came home with a grin from ear to ear. I'm thinking she slept with him, and he delivered the goods.\"\n\n\"That's it?\" Pat laughed.\n\n\"I'm not sure, but she came into my dressing room that night and said she figured she'd be able to stick with him long enough to get married and maybe for at least a year or so after the marriage.\"\n\n\"And poor little Mark just played right into her hands,\" Dad said, amusement in his voice.\n\n\"She's a pretty girl,\" Mom said. \"Besides, he's really been in love with her from day one. This was his dream come true.\"\n\nThere was silence for a moment, silence during which I felt my hands going numb from the ferocity with which I clenched my fists.\n\nAfter the brief lull, Pat said, \"So what's kept her with him all these years? You think she's really in love with him now? I mean, she doesn't have any male friends on the side, does she? We don't need that now.\"\n\nDebra snickered. \"Not a clue. She seems content. I suppose it's just inertia.\"\n\n\"They've both been pretty busy with their careers and all,\" Mom said. \"Probably not enough time for either of them to really find someone else and go through the whole rigamarole of divorce and all.\"\n\n\"So you're sure? That they'll stay together, I mean?\" Pat asked.\n\n\"Mark's not going anywhere,\" Mom said.\n\n\"And Sandy said everything's just fine so far as she's concerned,\" Debra said.\n\nI heard glasses get laid on tabletops, then Dad said, \"Well, let's hope so, Pat, because you've got a really good shot at this. The slightest bump in the road can upend the whole damned cart.\"\n\n\"You think?\"\n\nI heard their footsteps as they all moved toward the door. Ducking back, I pressed up against the wall deep in the shadows. It was all I could do to keep from confronting them all as they came into the hallway, but something told me that wouldn't go very well. In my current state of rage and confusion, I'd probably end up beating them all half to death.\n\nI was still pressed against the wall five minutes later, well after my folks and Sandy's had made their way up the stairs to their respective bedrooms. Now my mind was racing with thoughts.\n\nSandy's curious answers were all explained now. Her reactions to my moods and her facial expressions when professing love and devotion and planning our marriage and on and on. She'd thought it was all this great big marvelous game, and the notion enraged me.\n\nThen another thought struck me: She'd always acted as if I'd known about the game. As if I, too, knew ours was a marriage of political expediency and little else. If she'd known I was in the dark on this, she'd have played her cards closer to her vest.\n\nNow, though, the thoughts really came tumbling out, crashing back and forth inside my skull with such force and rapidity that I became dizzy. If it had been a game to her, then did she really have a stable of boyfriends? If she didn't really love me, then why had she been so upset when I'd had the Bonaroo appeal a few years before? And why had she seemed so relieved when I'd finished and come back to her?\n\nI couldn't answer any of the questions. Not a single damned one. If she'd been fucking around on me, she'd been doing it during work hours. Still, except for those few months during the Bonaroo appeal, our bedroom antics hadn't seemed to suffer more than the biologically-necessitated ebb and flow, and the lull during the appeal was as much attributable to my long hours as to hers.\n\nStill, it was an arranged marriage. A marriage predicated on political necessity rather than love and devotion. Had it grown to more since then? On my side it had. Then again, I'd loved her from almost the beginning.\n\nBut had Sandy ever loved me? Had she grown to love me? Or was she just fond of me. Or did she just tolerate me. Or did she resent me and mock me.\n\nWithout warning, my questions about Sandy were cast aside with the sudden realization that my own parents had sold me out. Without telling me, they'd played me like a fiddle for their own reasons. Both of them.\n\nHow the fuck do you do that to your own son?\n\nI mean really, how the fuck?\n\n* * * * *\n\nSunday had been spent dropping Sandy off at the airport for a two-day business conference in Denver before driving myself back to Memphis and getting last-minute shopping and laundry done. I turned in early and spent most of the night tossing and turning, wishing the whole time I'd said something to Sandy before seeing her off. Maybe the bed wouldn't have seemed so . . . so . . . so goddamned transient all of a sudden.\n\nDragging into the office on Monday morning, I looked and felt like death warmed over. Emotionally, I wasn't up to being there. Physically, my energy was just sapped. Gone.\n\nMy problem was that I had no clue what to do. Do I confront Sandy? What would I say? 'Hey, it's come to my attention this is all just an arranged marriage kind of thing. You sure you don't want out?'\n\nThen, of course, she'd look at me like I was a fucking idiot. 'Well fucking duh, moron.' Worse, she'd then insist we stay together, at least until after the elections down the road. And how do I say no? If I'm happy, do I really care if she's truly and deeply in love with me, or do I just keep playing along wondering if and when the hammer's going to fall?\n\nSandy seemed happy enough. Hell, we both were happy. Did it matter whether it was love? Did it really matter how it had started out? Arranged marriages happened all the time, both in politics and in Third World countries. Hot though she was, you really think Jack Kennedy married Jackie because of a deep, abiding love? Hell no. He married her to get rid of the rumors that he spent his whole life chasing skirts. Then, after they got married, he still spent the rest of his life chasing skirts.\n\nBut Jack Kennedy had gone into it with eyes wide open; I didn't. Then again, neither had Jackie, and the history books all said she'd been in love with him. Just like I thought I was in love with Sandy. Now, though, I was wondering if I still loved her.\n\n\"Mister Roberts?\"\n\nI looked from the wall and my eyes focused in on my secretary, Thelma Sanderson. Her arms were holding a tall pile of thick, heavy binders.\n\n\"Yes, Miss Sanderson.\"\n\n\"You mind if I find room for these here?\"\n\nI waved around the office. \"Sure. What are they?\"\n\n\"All the books for your daddy's campaign committee. Mister Parker's got no room left and told me to find someplace to park 'em for now. Being as he's you're daddy, I figured this was as good a place as any.\"\n\n\"How long?\"\n\nShe shrugged as she bent over and stacked them against the wall next to boxes of appellate records I was in the middle of ploughing through. \"Couple of days, I suppose.\"\n\n\"Whatever,\" I said, turning back and facing the walls.\n\nI'm not sure why I did it. I stared at the walls for another ten or fifteen minutes or so. Those books, though. They just kind of called to me. Beckoned me over to have a peek. Jim Parker's people\u2013along with a troop of weary looking accountants in rumpled suits\u2013were always poring over those books. I'd seen them all gathered around the massive mahogany table in the main conference room every few weeks, arguing back and forth and jotting figures and notes. I'd always thought myself well rid of being called in on that crap, but my mind was tired of worry and I decided to sneak a peek at the books.\n\nHauling two of them over to my tiny round work table, I flipped over the book containing the most recent entries for the first quarter. It was filled with copies of Federal Election Commission filings and disclosures and all manner of esoterica required to be reported for others to pore over and look for irregularities. In short, it was Greek to me.\n\nPushing aside book one and flipping over book two, I saw something completely different. These were a series of memoranda on different campaign finance issues. This was more like it, I thought. Boring trivialities that make up the sum and substance of the law. How to categorize this donation and that expenditure, how to say what you had to say without really saying anything at all. This was major stuff, I thought. Campaigns try to be as discreet as possible. No sense in letting some expenditure sloppily labeled come back to bite you in the ass when some bastard from the New York Times does his homework on a slow news day.\n\nAlmost an hour later, my problems and the piles of real work on my desk forgotten, I came across a curiously titled memorandum. Staff Support or Consultant. It was brief, just short of three pages. It was the first three paragraphs, though, that burst from the page and knocked the wind from my lungs.\n\n\"Question Presented: How best to label expenditures of child support so as to facially comply with FEC regulations, but avoid revealing the true nature of the payments?\"\n\nReading on, I discovered that child support payments were being made on a regular basis to one Clarice Talbott. They'd been paying them for seven or eight years, but the regulations had changed on how to label campaign staff payments. The Finance Committee wanted to continue making the payments from its coffers, but it didn't want to raise any red flags on how it was labeled under the new guidelines.\n\nGoing back to my desk, I typed in the Google search for Clarice Talbott. There were dozens, but one name popped out from an old Washington Post article. My father. In a picture at his desk. With a very young, very pretty Clarice Talbott, his secretary, leaning over his shoulder as he signed something in his Senate office.\n\nI clicked into my father's Senate website. Nothing on a Clarice Talbott. I went back to the ledgers. Twenty minutes of frantic skimming later, I found an address. The checks were being mailed to some town in Illinois. Grant City. I'd heard of it. Someplace an hour or so outside of Chicago.\n\nBack on Google, I confirmed through a White Pages search that Clarice Talbott still lived at the Grant City address. There was nothing more. Not in the ledgers and not on my internet searches.\n\nThen I sat back and rubbed my temples, trying to ward off the crashing that was building in my brain.\n\nDad's campaign was paying child support. To Dad's former secretary. A pretty secretary, at that.\n\nThere was only one explanation: I had a brother.\n\nA brother I'd never known existed.\n\nAnd he was in Grant City, Illinois.\n\nGradually, the throbbing in my head subsided and a peace settled over me. A peace brought on as my plan gradually coalesced and took shape.\n\nWith a smile, I leaned forward and typed. Once done, I printed the document, then picked up the phone to call Human Resources.\n\n\"Yeah, Marcia,\" I said. \"Mark Roberts here. Just checking to make sure you're in.\"\n\n\"What can I do for you, Mark?\" she said.\n\n\"Just need to drop off my letter of resignation,\" I said, and hung up before she could say more.\n\nI was out of there before any of the partners returned from lunch.\n\n* * * * *\n\nAnd that's how I ended up on that balcony eight hours later. Back where this whole story started.\n\nMy car had been sold, checking account closed, clothes packed into a single suitcase, and Amtrak ticket bought.\n\nI watched the sun swallow up that shrinking golden band, gave one last look at the Mighty Mississippi trudging away four floors below, then picked up my guitar and suitcase, turned, and left.\n\nI was off to find my brother and have a nice long talk with Clarice Talbott.\n\nI was taking the City of New Orleans to start a new life somewhere else.",
        "Somewhere away from the cold betrayals of those who'd supposedly loved me.\n\nI was so down, I couldn't even hum the damned tune as I sat on that train.\n\nCHAPTER FOUR\n\nWhen I got off the Amtrak train in Chicago, I made a beeline out the doors of Union Station and down the street to the Atrium Building. There was a train to Grant City leaving in twenty minutes, and I damned sure wanted to be on it.\n\nAn hour and a half later, my body swaying to the rhythm of the train, I looked out the windows and took in the passing scenery. I hadn't been back to Chicago since graduating law school, and I now regretted not taking in at least lunch in the city. I could've dropped by my old haunts, maybe stopped in to see one of my old professors, looked up an old classmate, anything. Anything to ground me again. Ground me in the feeling that I still had a past and people in that past that really gave a shit about me.\n\n\"Grant City next stop,\" the tinny voice said over the intercom. \"All exit Grant City. Last stop, Grant City.\"\n\nJesus, we get it already, I thought, looking at the other four people scattered throughout the car. People I'd never seen and would probably never see again.\n\nAnd that's when the thought struck me. I couldn't go back to Chicago and see the people I'd known. This was the White House we were talking about. And Dad's Senate career, too. They'd be looking for me, trying to find out where I'd gone off to and what I was doing. They'd want to talk me into coming back and just playing it all out sweet and easy as pie.\n\nI smiled, picturing them all squirming. I was surprised no one had dropped by my place yesterday afternoon. I know there had been calls, but I'd let them all go to voicemail. Now, though, they'd know I was gone. If not now, then as soon as Sandy came home and saw my clothes and my favorite guitar gone. They'd be scrambling, that's for damned sure, and the whole image satisfied me as I hadn't been satisfied since before Pat Truelson had given his little dinnertime speech. Since before they'd all unknowingly spilled the beans with their little late night brandies and bourbons.\n\nFuck 'em. Fuck 'em all.\n\n* * * * *\n\nLet's cut the bullshit on the next couple of days. The major parts are pretty simple: I got into Grant City; found out it was too small for cabs, but not too big that I couldn't lug my stuff to a hotel a mile and half out on the edge of town; walked next door for a quick lunch, then next door to that to use the cash from my accounts and the sale of my Lexus to buy a decent used car; then went off in search of a realtor and an apartment to rent.\n\nThe morning of day two was spent moving a suitcase and a guitar into a furnished one-bedroom apartment, getting a new driver's license, and driving around looking for a job.\n\nQuarter to eleven, I pulled into the parking lot of a tavern on the edge of town. Help Wanted Bartender, the sign read. I hadn't tended bar since law school, but how the hell hard could it be? A gin and tonic's a gin and tonic, and judging by the looks of the place, that would be an upscale drink for this neck of the woods.\n\nIt took a moment after walking in for my eyes to adjust to the dark barroom.\n\n\"Help you?\" a voice to my right said, and I turned. A big dude, late thirties, early forties, maybe six four and at least three hundred pounds, was mopping the floor inside the horseshoe-shaped bar.\n\n\"You still hirin'?\" I asked.\n\nHe motioned me to a barstool, then leaned against the mop and said, \"Name's Ferlin Fargo.\"\n\nI hesitated, unsure whether to give my real name. \"Mark Roberts.\"\n\n\"Really,\" Ferlin said. His eyes flickered to my wrist. To the gold Rolex my parents had bought for a law school graduation present. \"You sure about that?\"\n\nI nodded. \"Last time I checked.\"\n\n\"And you know how to tend bar, Mark Roberts?\" The tone of his voice made clear he didn't believe either part of that one, that I could tend bar or that I'd given my real name.\n\nI smiled. \"Last time I checked.\"\n\n\"Ever do it before? Tend bar?\"\n\n\"Some.\"\n\n\"What d'ya mean, 'some?'\"\n\n\"I did it for awhile in college.\"\n\n\"You know how to make a Rob Roy? A Manhattan? Old Fashioned, Margarita, Daquiri?\"\n\nI nodded.\n\n\"Then make me one,\" Ferlin challenged.\n\n\"Which one?\"\n\n\"Old Fashioned.\"\n\nI stood, made my way to the back bar, looked around at the set up, nodded, and reached for a high ball glass.\n\n\"Just tell me what goes in it,\" he said. \"No sense wasting perfectly good booze.\"\n\n\"Muddle some sugar with bitters, stir in a shot of bourbon, fill with ice, top with soda.\"\n\n\"Garnish?\"\n\n\"Cherry and orange slice if you've got 'em.\"\n\nHe gave a grudging smile. \"We've got 'em, all right.\"\n\n\"In the cooler still?\" I asked, nodding toward the small refrigerator beneath the cash register.\n\n\"Yep. 'Cept we use bar sugar.\"\n\n\"No prob.\"\n\nHis eyes narrowed. \"Where you from, Mark Roberts?\"\n\n\"South.\"\n\n\"Where exactly?\"\n\nI didn't say anything, just looked at him.\n\n\"You running from the law?\"\n\n\"No.\"\n\n\"Ex-wife?\"\n\n\"Not yet.\"\n\nHe looked at me for a moment, trying to gauge my truthfulness. Then he shrugged, apparently satisfied or no longer giving a damn, and reached his hand out. \"Ten bucks an hour. Ten thirty to six, Monday through Friday. Maybe some weekend hours if you want 'em or if someone calls in sick or something. Think you can handle that?\"\n\n\"Policy on tips?\"\n\n\"Your tips are your own. You work with someone, you split the tips while you're working together. You may want to tip out the waitresses if they help you out or something, or maybe the busboy if he gets you beer or ice. Your decision. How you handle it decides how much they help, I s'pose.\"\n\n\"Fair enough. Prices?\"\n\n\"There's a list next to the register. If there's a drink special\u2013and there usually ain't unless it's a Friday or Saturday with a band or somethin'\u2013they don't change.\"\n\nI shrugged. \"Seems easy enough.\"\n\nHe snorted. \"We'll see.\"\n\n\"So am I hired?\"\n\n\"S'pose so.\"\n\n\"When you want me to start?\"\n\n\"Is now too soon?\"\n\n\"I'm dressed okay?\" I asked, looking down at my jeans, loafers with no socks, and long sleeved white dress shirt with cuffs rolled to mid-forearm.\n\n\"Overdressed if anything. Need time to go change or something?\"\n\n\"This works for me if it works for you.\"\n\n\"Works for me.\"\n\nI extended my arm. \"Thanks.\"\n\nHe took my hand in his great big beefy paw on the end of his arm and held me. \"Don't steal from me, Mark Roberts. I'll know, okay?\"\n\n\"Not gonna happen.\"\n\n\"Don't let it.\"\n\nHe gave my hand a squeeze while eyeing me closely, then let go and gave the barest hint of a smile.\n\n\"Welcome to The Hitching Rail.\"\n\n\"Glad to be here.\"\n\nHe tipped the mop to me. \"See if you can get this area all clean before they start showing up in ten minutes, huh?\"\n\nI took the mop and went to work.\n\n\"Thank you, Jesus,\" I heard Ferlin say to himself as he disappeared to the other side of the building, presumably the kitchen.\n\n* * * * *\n\nI waited all of no time before the first customers started rolling in, seven of them before some tall gangly chick with frizzy bleach blonde hair ran in all frantic at fifteen past eleven.\n\n\"Sorry I'm late,\" she said, handing me her purse before reaching over the bar and snatching up a black apron and ticket pad.\n\n\"We seem to have it covered,\" I said, placing the rest of the drinks on a tray.\n\n\"I'll take this,\" she said, her eyes going from the drinks to the dining room and back again. \"Two cherries in this one,\" she said, pointing to a glass of Coke. \"Levon always wants two cherries.\"\n\nI skewered two cherries and laid them across the top.\n\n\"I'll take it from here,\" she said with a bright smile, hefting the tray to her shoulder.\n\n\"Go for it.\"\n\nTwo and a half hours later, I was washing up the rest of the dirty glasses from the lunch crowd when the frizzy haired chick plopped down with a huge sigh. \"Wednesdays can get pretty nutso, y'know?\"\n\n\"Not really.\"\n\nHer head twitched and her eyes narrowed. \"Who're you?\"\n\n\"Mark.\"\n\n\"When did you start?\"\n\n\"This morning.\"\n\nShe gave a bright, bouncy smile and thrust her arm straight across the bar. \"Well, Mark, nice ta meetcha.\"\n\nI shook her hand and said, \"And you are?\"\n\nShe rolled her eyes like it was the dumbest question she'd heard in ages. \"Debbie.\"\n\n\"Debbie who's always late and still hasn't cleaned up the rest of her tables,\" Ferlin said as he waddled toward the bar.\n\n\"That's the one,\" she agreed, then hopped up and turned to Ferlin. \"Jeez, just trying to be friendly and all.\"\n\n\"Be friendly when you've got your tables clean.\"\n\nFerlin Fargo sat at the bar looking like a man who'd just played a football game. His thick black hair was damp and all akimbo, his face dripping sweat, his shoulders sagging beneath his sweat soaked shirt. \"Water,\" he croaked.\n\nI got a tall glass, filled it with water, and placed it in front of him. He drank it in one long pull, put the glass down, and nodded for me to do it again. I did, and he chugged this one down in one fell swoop, also.\n\n\"Thanks,\" he said, his breath now returning to normal and the spring returning to his limbs. \"Wednesdays can be a real bitch.\"\n\n\"How so?\"\n\n\"Fuckin' Italian day. Spaghetti and meatballs, ravioli, sausage and peppers. The kitchen's full of pots of boiling water. Like a goddamned steam bath back there.\"\n\n\"Sure seems to pack 'em in, though. Must be good.\"\n\nHe looked at me and I saw the glint of a smile playing over his stubbly face. \"Course it's good. More important, it's pretty cheap. That's why it's such a pain in the ass.\"\n\n\"So every day isn't this busy?\"\n\nHe gave a chortle. \"Oh, they're all pretty much like this. Right down to Debbie always being between ten and twenty minutes late for work.\"\n\n\"Always?\"\n\n\"I s'pose sometimes she's later, but not by much.\"\n\n\"Never early?\"\n\n\"Never.\"\n\nI looked at the waitress in the other room, stacking dishes on her arms and humming to herself. \"Crowd loves her. They don't love you. She can get away with it. You can't. Understand?\"\n\n\"Yet,\" I said, trying to hide my smile.\n\n\"Yet? What d'ya mean, 'yet?'\"\n\n\"The crowd don't love me yet. But they will.\"\n\nHe looked at me, then threw his arms up. \"Great. Another prima donna. Just fucking great.\"\n\nI stifled my laugh and went back to cleaning.\n\nThis sure beat researching and writing appellate briefs.\n\n* * * * *\n\nAfter work, I drove slowly past 714 Madison Street. It was a tiny little bungalow, no more than thirty-five feet wide, painted white with yellow shutters and a green shingled roof. It was neat, though, and the yard was kept up and trimmed. Behind the gauzy white curtains in the front picture window, I saw the shadow of a person moving toward the back of the house. Kitchen, probably.\n\nPulling over to the curb, I parked and shut off the car. Now what? I'd found where Clarice Talbott lived with her son\u2013with my brother\u2013but I didn't know how to proceed from here. My plans had been to leave and find them. Well guess what? I'd left and now I'd found them. But I couldn't just go up and knock on the door, could I?\n\nAs I pondered it, a car drove past me and swung into her driveway. Almost before it was fully stopped, the rear passenger door opened and a little kid in an impossibly bulky football uniform got out. Reaching back in, he pulled out a football helmet, gave a wave, backed away, and slammed the car door.\n\nThe front door opened, spilling warm light across the front lawn of autumn. A woman stood in the doorway, a tired smile on her pale face. The little boy ran to her, gave her a hug, and pushed past her and into the house. Without another look, she closed the door and followed him inside.\n\nSo that was her. That was Clarice Talbott. Looking much as she'd looked in the eight-year old picture with my father, except now she seemed more tired and worn and sad. Even her smile for the little boy was tired, though it seemed to exude genuine warmth.\n\nWhat the fuck had Dad done? How could he just so callously do this?\n\nI felt my anger building again, and I slammed the steering wheel in frustration at my years of ignorance.\n\nGoddamn them all to hell. Right straight to hell.\n\n* * * * *\n\nAbout two weeks later, I walked into The Hitching Rail to be met by the burly figure of my boss, the ever grumpy and grousing Ferlin Fargo.\n\n\"Take your shirt off and come with me.\"\n\n\"Take my shirt off?\"\n\n\"You keep wearing those damned white dress shirts. Don't know how you haven't ruined them all by now, but you'll sure as shit ruin one now.\"\n\n\"Doing what?\"\n\n\"Helping me move some chairs and tables up from the basement.\"\n\n\"Something special?\"\n\n\"Lincoln County Women's Bar Association meeting. They meet once a month, bouncing from place to place. They're here three times a year. Today's our turn again.\"\n\nI smiled. \"I've gotta wait on a bunch of women lawyers?\"\n\n\"You won't be smiling in a couple of hours. Demanding as hell and lousy tippers.\"\n\nI shrugged, unbuttoning my shirts.\n\nHalfway through lugging up extra tables and chairs, Ferlin grunted, \"So why do you always wear the same thing?\"\n\n\"All I got.\"\n\n\"You ain't got no other shirts?\"\n\n\"Not appropriate for workin' in, I don't.\"\n\n\"You ever thinking of just maybe buying some? Something cheap at Wal Mart or something?\"\n\n\"Nope.\"\n\n\"Wierdo.\"\n\n\"Whatever.\"\n\nFerlin was like that. Too young to be a father figure, too old to be like an older brother. Still, he treated pretty much everyone the same. Grousing, bitching, complaining, and then a shy smile and a quiet thanks or simple pat on the back. Debbie seemed to worship him, though he easily weighed a buck eighty more than her and had fifteen years on her. She just glowed whenever he was around. All the employees seemed used to him and comfortable with his gentle pokes at everyone.\n\n\"So anybody find you yet?\" he asked, leaning against a table and catching his breath now that we were done.\n\n\"What d'ya mean?\"\n\n\"This soon-to-be-ex-wife you seem to be running from.\"\n\n\"No one knows where I am.\"\n\nHe nodded, his face troubled.\n\n\"What?\" I prompted.\n\n\"None of my business,\" he said, shaking his head.\n\n\"Fine,\" I said, smiling. \"So it's none of your business. So what? What were you gonna say?\"\n\n\"Must be hard, is all. Just leaving and now you're surrounded by total strangers. Don't know anyone. No family.\"\n\nI smiled, grabbing a dry bar rag and wiping the perspiration off my chest and from under my arms. \"My brother's dead. Killed in a car accident awhile back. And my Mom and Dad . . . well, let's just say they were in cahoots with the soon-to-be-ex, okay?\"\n\n\"Taking her side?\"\n\n\"A little more complicated than that.\"\n\nHe nodded, then left it alone as I pulled on my shirt.\n\n* * * * *\n\nI helped Debbie serve the women of the Bar Association, then spent an hour and a half fetching drinks and refilling water glasses. Most of them ignored me and treated me like a cockroach beneath their feet. Four of them, though, gave me the smile, light brush, and eyelash batting that indicated they may be available.\n\nOne was about fifty, full figured in a too tight sweater and too short skirt for both her age and her figure, but she seemed carnivorous whenever I was nearby. I was afraid she'd trip me and beat me to the floor.\n\nToward the end of the row of tables sat a platinum blonde, maybe in her late twenties, who kept gazing at me and, once I made eye contact, kept giving a gentle tilt of the head to indicate she was curious. When she got up to go to the restroom, though, I noticed she was tall and skinny verging on anorexic. Also, the foam domes and flat ass didn't help things much. I suppose she was pretty if you're turned on by lanky models who look like a pipe cleaner with big tits.\n\nThe other two sat next to each other. One of them was short and slim, early to mid thirties, with a pale complexion and tired eyes. Her hair seemed limp, too, which matched the rest of her posture. She reminded me of Ally McBeal, sort of wan and weary in a business suit. She didn't really give the flirtatious smile or the light arm brush so much as she kept looking at me, then turning away with embarrassment when our eyes met. Her smile seemed forced, and she seemed just all broken and insecure.\n\nTo her left, though, was the hottest one of the group. My eyes had latched onto her the moment she'd walked in, unable to look away until she was seated and my duties suddenly thrust upon me. She had it all: Pale olive complexion on smooth, flawless skin; lustrous mane of thick, black hair framing the face of a Latina goddess; a beautiful body with high, perky breasts complemented by a round, perfectly squeezable booty and long, slim legs. She was like Pocohantas in those old paintings from grade school. Classic dark beauty, tall and proud and stacked perfectly. She was dressed neither sexily nor conservatively, her eyes and smiles not promising untold delights so much as appraising and considering the possibilities. Her dark eyes were direct and unflinching. She was the bowl of porridge that was just right, and I spent half of lunch imagining how that bowl would taste.\n\nAll too soon, they were all gone.\n\nAnd Ferlin was right. They were lousy tippers.\n\nThe fifty-year old left me her phone number, though.\n\n* * * * *\n\nMy back was to the bar at five twenty that afternoon, reaching into the cooler for three Budweisers and a Leinenkugel.\n\n\"When you have a moment,\" I heard a voice say to my right.\n\nTurning, I was surprised to see the two women from the Bar Association. No, not the pipe cleaner and the cougar. Pocohantas was the one who had spoken, and Ally McBeal was sitting beside her trying to slink down and hide on her barstool.\n\n\"Just a sec, ladies,\" I said.\n\nI delivered the beers in my hands, then came back.\n\n\"Gin and tonic,\" Pocohantas said. \"Lime.\"\n\nI nodded, then turned to her companion. \"And you?\"\n\nShe looked to Pocohantas, then back to me. \"The same, please.\"\n\nI turned to make their drinks, delivered them, got the money and gave the change, and went about my business, all without another word.\n\n\"Mark,\" Ferlin called a few minutes later from the corner of the bar.\n\nI walked over and leaned against the inside of the bar, my eyes sweeping the bar top for empty drinks as Ferlin talked in that low, gravelly rumble of his.\n\n\"Think you can pull a double tomorrow?\" he asked. \"Terry's kid's got a game.\"\n\nI shrugged. \"Sure.\"\n\n\"It's a Friday, and they're our busiest days around here. The fish fry keeps us scrambling from lunch until closing time.\"\n\n\"I'm in.\"\n\nI stood to move back to the center of the bar to better keep an eye on things when Ferlin locked his hand around my forearm.\n\n\"Don't look now,\" he said, his voice getting lower, \"but I think those two over there are giving you the serious once over.\"\n\n\"You think?\"\n\n\"Doesn't hurt business none to maybe sidle over and say hey once in awhile. Know what I mean?\"\n\nI tensed, then gave a curt nod. The slight smile left my face.\n\n\"I'm not saying you need to be a gigolo or something,\" Ferlin said, backpedaling. \"I'm just sayin' that bein' friendly don't hurt things, y'know?\"\n\nI tried to force the smile back and whispered, \"Don't worry. I'll do my best.\" Spotting an empty beer bottle hit the bar across the way, I muttered, \"Excuse me,\" and escaped.\n\n\"Ladies,\" I said a few moments later, standing in front of them and giving a brief smile before again sweeping the bar with his eyes. \"We set for drinks okay?\"\n\n\"We're fine on drinks,\" the taller one said, managing to make that simple response suggestive with the way she emphasized 'drinks.' \"We're actually wondering about you.\"\n\nI looked at them and gave a smile. The tall one raised an eyebrow, but the smaller one seemed to shrivel in embarrassment.\n\n\"And what, may I ask, were you wondering about me?\"\n\n\"You hear that, Whitney? A Southern gentleman.\" She faced me and said, \"I just love a nice soft Southern drawl.\"",
        "\"We were wondering what your name is,\" Whitney said.\n\n\"Mark,\" I said, wiping my hands on the bar towel before reaching across and offering my hand. \"Mark Roberts.\"\n\nShe shook my hand. Her hand was damp and the shake timid and too quick.\n\n\"And I'm Rebecca,\" the other one said.\n\nHer handshake was, as i suspected it would be, firm and held for enough time to convey intimacy.\n\n\"Well, Whitney, Rebecca, it's a pleasure to meet you.\"\n\n\"Thanks,\" Whitney said, her voice barely audible.\n\n\"The pleasure's ours,\" Rebecca said. \"Where you from, Mark?\"\n\n\"South of here.\"\n\n\"We know that,\" she continued. \"But where south of here?\"\n\n\"Way south of here.\"\n\n\"And when did you move to Grant City?\"\n\n\"Couple weeks back.\"\n\n\"Where do you live?\"\n\n\"In an apartment.\"\n\n\"Are you going to play this game all night?\"\n\n\"What game?\"\n\nShe gave me a long look, as if she were trying to make up her mind about something. She clearly wasn't used to men who didn't fawn all over her, but she didn't seem to fall back from the challenge, either. Her face softened into a grin of her own.\n\n\"Fair enough,\" Rebecca said. \"I'm sorry for prying. We're just wondering if you're available.\"\n\n\"He's married,\" Whitney said, her eyes on my left hand where the dent from the ring was still visible.\n\nFor some reason, I was unable to look away from the pale woman. The look on her face said she expected it; disappointment and relief at the same time. But also sadness and a touch of blueing at the gills, like she was nauseous almost.\n\n\"That true? You married, Mark?\"\n\nI held up the ring finger in response. \"It's a dent, not a ring.\"\n\n\"Divorced then?\"\n\n\"Something like that.\"\n\n\"Done with it, or still going through it?\"\n\nI shrugged.\n\nWhitney surprised me when she said, \"Sucks, don't it?\"\n\nI turned to her and looked hard. \"I would say, 'More than you can possibly imagine.' But I'm suspectin' I'd be wrong about that, right?\"\n\nIf possible, she paled further, then gave a barely perceptible nod. Rebecca reached her arm around Whitney's shoulders and gave a brief squeeze on her upper arm. \"Buck up, kiddo. There's lots more life to live.\"\n\nShe gave a weak smile in response and mumbled, \"Sorry.\"\n\nI tilted my head. \"For what? Being in the same sinking boat I'm in?\"\n\n\"My boat sank a little over a year ago.\"\n\n\"And you're still down?\"\n\n\"She's just having problems getting back on her feet again,\" Rebecca explained. \"The few guys she's seen since have pretty much been pigs. You a pig, Mark?\"\n\nI gave a broad grin at both of them and laid on the accent a bit thick. \"Of course not. I'm a Southern gentleman, remember?\"\n\n\"Exactly,\" Rebecca said, smiling back at me. Whitney managed to get some color back and give a bit of a smile.\n\n\"'Scuse me, ladies,\" I said, spotting some empty beer bottles hitting the bar and moving off to take care of business.\n\nWhen I turned back, they were leaving.\n\n\"See ya 'round,\" Rebecca said with a little wave.\n\nI gave a wave back and watched them go.\n\nAnd tried to hide the first real hard on I'd had in weeks.\n\nThey were both intriguing in different ways, and images of a threesome filled my suddenly adolescent mind.\n\nCan't blame a guy for fantasizing, can you?\n\n* * * * *\n\nThe rest of the night was spent like most of the fourteen before it. Park down the street from Clarice Talbott's home, watch my little brother get dropped off and charge inside, go home and make a soup and sandwich, and play guitar while watching television.\n\nI still couldn't figure out how to proceed. By now there was no doubt that little Schuyler Talbott was my brother; he looked exactly as I'd looked\u2013and presumably my father had looked\u2013at that age. Yet, just approaching Clarice and injecting myself into her life\u2013and my little brother's life\u2013seemed too jolting. On the other hand, I needed to get off dead center. In the meantime, I was satisfied to just watch the little mini me in the uniform that weighed nearly as much as he did.\n\nThen my thoughts turned, as the usually did just before I got ready for bed, to Sandy. My folks and hers were banished to a dark place I kept suppressed lest my mood turn sour. I still had mixed feelings about Sandy, though.\n\nOnce the whole shock of everything had worn away, I was able to analyze our history more clinically. For example, her mood and absence for those three months I was busy righting the wrongs inflicted upon Napoleon Bonaparte Bonaroo. I now suspected\u2013and was pretty much outright convinced\u2013that she'd had an affair. The problem? I wasn't really sure how I felt about that. If she'd viewed the entire marriage as a scam\u2013a scam she was convinced I was about ready to put an end to at the time\u2013then how culpable was she? I mean, we weren't really married, were we? This one kept me going back and forth. I mean, hell, she'd apparently not hesitated even a second to end the probable affair once she'd seen the news reports carrying the coverage of Nap's newfound freedom. She'd immediately come back to me with sorrow and contrition written all over her face. And from there, our marriage had been fun and (I thought) loving and, at the very least, mutually satisfying.\n\nI'd also spent hours upon hours replaying our marriage in my mind and couldn't come up with any clues that she'd had a passel of boyfriends on the side. To the contrary, our love life, her moods, our work hours, all of it was pretty even keel and steady the whole time we'd been together. If anything, it was better than ever after those three months of misery during the big appeal.\n\nThe final thing with which I endlessly wrestled was whether Sandy was aware of my ignorance. Looking back on it all\u2013all the way to day one\u2013I could recall hundreds of comments and expressions that, in hindsight, indicated she assumed I was fully aware of our parents' arrangement for us. Then again, she'd never really come out and said it. She'd never said, 'You know, I'm glad our parents talked us into getting married to help Daddy's campaign along, and I'm glad we gave it a go for more than a couple of years.' Thus the conundrum: Were her comments an assumption that I was in it with eyes wide open, or were her comments sly digs at my ignorance and the whole situation in which she found herself?\n\nFor the umteenth night in a row, I crawled under the sheets and stared at the ceiling wondering about the answers.\n\nCHAPTER FIVE\n\nThe following Thursday saw me surprised twice. First, Rebecca dropped by for a drink after work sans Whitney.\n\n\"Gin and tonic with lime?\" I said as she sat.\n\n\"Very good,\" she said, her smile a dazzling row of straight, bright teeth that almost buckled my knees.\n\nOnce the drink was in front of her and paid for, she said, \"So, Mark, you got a last name?\"\n\n\"Roberts.\"\n\nHer eyes narrowed. \"I've heard that name somewhere before. You famous?\"\n\nI swept my arms around the horseshoe-shaped bar. \"Monday through Friday from eleven til six.\"\n\nHer expression remained thoughtful, her lips pursed in concentration.\n\n\"Excuse me,\" I said after a moment, rushing off to get some beers for a gang of construction workers flooding through the door.\n\nWhen I was done with that, I heard Ferlin swearing into the phone behind me. Turning, I saw him slam down the phone.\n\n\"Problem?\"\n\n\"Fucking band,\" he said. \"Golden Rodeo was supposed to play here tomorrow night. Nine to one. But their singer and bass player were in an accident last night. Banged up pretty good. They've gotta cancel.\"\n\nI frowned. \"Not good.\"\n\n\"No shit, Sherlock.\"\n\nHis blood pressure\u2013never very low in the first place\u2013seemed dangerously high and set to pop through the top of his head like a geyser. \"Management company says the rest of their acts are fully booked. No replacements.\"\n\nI nodded, gave it less thought than I should have, and said, \"I can play if you want.\"\n\nHis eyes went narrow, then wide, then he laughed. \"Yeah, right. You.\"\n\nThat hurt more than a touch. \"I'm not kidding.\"\n\n\"Play what?\"\n\n\"Guitar. And sing, too.\"\n\n\"Ever done it before?\"\n\n\"Yeah. I was in a band all through college and law school.\"\n\n\"You still in a band?\" he said, his eyes again narrowing and his face getting serious as he thought it over.\n\n\"Nope.\"\n\n\"Any chance of getting them back together on a day's notice?\"\n\nI shook my head, then said, \"But I don't need to. I can just play guitar and sing along.\"\n\n\"What kinda music?\"\n\n\"Whatever you wanna hear.\"\n\n\"None of that rap shit, right? Or heavy metal?\"\n\n\"Little tough to do with one guy and a guitar.\"\n\nHe nodded, crossing his arms and scratching the stubble on his chin with his stumpy, thick-as-a-sausage forefinger. \"Equipment?\"\n\n\"I've got an acoustic. No amps, no mic, no electric guitar, no mixing board.\"\n\n\"And the acoustic plugs in? You can run it through speakers?\"\n\nI nodded. \"Built in.\"\n\n\"And you say you can do this?\"\n\nI smiled. \"What've you got to lose?\"\n\nThat settled it. \"Let me make some calls.\"\n\n\"For what?\"\n\n\"I think I can get you some equipment. All of it.\"\n\n\"If an electric's coming along for the ride, I prefer a Telecaster,\" I said.\n\n\"You'll take what I can scrounge up,\" he said, turning his back to me and picking up the phone.\n\nTurning around, a broad grin spread across my face, I saw Whitney sliding into the barstool next to Rebecca. Her eyes were on Rebecca's cell phone, and Rebecca was saying something to her. Then they both looked at me, Whitney's eyes wide.\n\nFucking technology, I thought, picking up a glass to make another gin and tonic.\n\n\"And you're an attorney, Mark Roberts,\" Rebecca said. \"Apparently a pretty goddamned good one. And you were married to the Governor's daughter.\"\n\n\"And a Senator's son,\" Whitney shot in, continuing the broadside.\n\n\"So what's a Senator's son married to the Governor's daughter doing here tending bar instead of practicing law in Tennessee?\" Rebecca said, then sat back to await my answer.\n\nMy lips tightened.\n\n\"Well?\" Whitney prodded when it became clear I wasn't going to answer.\n\nI looked from one to the other, unsure whether to answer. \"Long story,\" I muttered.\n\nRebecca raised her eyebrows, and Whitney said, \"Your marriage fell apart and you ran away up here?\"\n\n\"Something like that.\"\n\n\"They know where you are?\"\n\nI hesitated, then shook my head.\n\n\"That's a pretty prickish thing to do, dontcha think?\"\n\nNot just the words, but the tone in her voice as well. Snippy and catty and judgmental. I saw red. Me? Prickish? After all the shit my family and wife had put me through?\n\n\"I don't know,\" I said through gritted teeth. \"Wanna tell me all about your divorce and how you were perfect and it was all his fault?\"\n\nI almost regretted it before the words were out of my mouth. Whitney looked like I'd punched her in the solar plexus. Her mouth hung open, her skin blanched, and she seemed on the verge of tears.\n\nRebecca, too, was stunned, her eyes shooting from Whitney to me then back to Whitney again. \"Jesus,\" she said, putting her arm around the object of my venom, \"settle down. Both of you.\"\n\nRebecca recovered enough to shoot me a look that could've vaporized me on the spot. Fortunately, I wasn't backing down. Instead, I was struggling to control my anger. After only a few seconds, I turned my back on them and went to the other side of the bar, making busy cleaning dirty glasses in the washing sinks.\n\nA few minutes later, I saw the door swing open and watched them both leave. This time there was no boner. Instead, my measured breathing was an effort to keep from throwing something and killing some poor schmuck on the other side of the bar. Given that the other side of the bar was mostly construction workers, I figured I'd only survive the first thrown bottle by about twenty seconds.\n\nAfter a few minutes, someone called hey, and I turned to see who needed a drink.\n\n\"For fuck sake, Mark,\" one of the workers said with a lopsided grin, \"what the hell you have to go and do that for? They were the only good lookin' tail in the whole fuckin' joint.\"\n\nI tried to grin and shrug, failed and managed only to look like a brain dead spastic, and walked around the bar to refresh drinks.\n\nWhen I got to the half-finished drinks left by Rebecca and Whitney, I almost swept up the napkin without seeing what she'd written there.\n\n\"You're right. I'm sorry.\"\n\nNow I really felt like an asshole, something the construction workers didn't let me forget as I finished my shift and left for home.\n\n* * * * *\n\nLate the next afternoon I was still in a funk waiting for my shift to end so I could go home and crawl into a hole somewhere. I was snapped out of my thoughts at two thirty when Ferlin rapped his knuckles on the bar.\n\n\"Yeah?\"\n\n\"Come on,\" he said. \"Debbie'll watch the bar while we're gone.\"\n\n\"Where we going?\"\n\n\"Pick up that equipment you need.\"\n\nAw fuck, my brain said to the rest of my body. I'd totally forgotten.\n\n\"You comin'?\" he prodded when I stood there like an idiot.\n\nI tossed the bar rag on the counter and followed him.\n\nTen minutes later, we turned onto a long gravel driveway and made our way toward a house that was neither new nor old, huge nor small. It was just nice. Off to the right was a field of mowed lawn with a few ancient oaks rustling their dying leaves in the breeze, at the end was a simple pole barn.\n\nAs we pulled up around the back of the house, the back door opened and a man walked out and toward us. A man I thought I'd seen before. He was walking toward us with a wide smile and stuck his arm out at Ferlin ten paces before reaching him.\n\n\"Hey Ferlin.\"\n\n\"Coop.\"\n\nThey shook hands, then the other fellow threw his arms around Ferlin's massive frame and gave him a tight hug. Once they broke, he turned to me and smiled.\n\n\"Hey. I'm Teddy Cooper.\"\n\nI smiled and nodded. Of course, Teddy Cooper. Singer and guitarist for General Beauregard.\n\n\"Mark Roberts,\" I said, shaking his hand.\n\n\"Come on,\" he said, walking off toward the pole barn and calling back to Ferlin, \"why don't you back the Jeep up to the shed?\"\n\nI followed him while Ferlin got back in the vehicle.\n\n\"Pretty much got your pick,\" he said when we entered. Flipping a switch, the big room was illuminated by harsh lighting that revealed a traveling band's full instrumental equipment register. Drums, bass guitars, keyboards and two pianos, acoustic and electric guitars, effects pedals, sound boards, mics, cables, wires, every goddamned thing except the light show.\n\n\"We practice here a lot before touring.\"\n\n\"We're not putting you out or anything?\"\n\nHe smiled. \"Not a bit. Just got back 'bout a month ago. We're all taking a break while Nick and Will and I work out some new songs and new arrangements.\"\n\nI nodded. \"You got any idea what I need?\"\n\n\"Sure. I've played there before. Come on, give me a hand.\"\n\nTeddy, Ferlin, and I loaded up a few amps, some patch cords, a small mixing board, and a mic with telescoping stand.\n\n\"Which guitar you want?\" he said as we caught our breath.\"\n\n\"Whatever you got.\"\n\n\"Preference?\"\n\n\"Telecaster.\"\n\nHe nodded his head toward the row of guitars to the side. \"Pick one.\"\n\nI looked. There were three Fender Telecasters amidst some Les Pauls, Stratocasters, a Paul Reed Smith, a Gretsch, and two Rickenbackers.\n\n\"These all yours?\" I said, envying the hell out of him.\n\n\"Some are Nicks.\"\n\n\"Does it matter?\"\n\n\"What he don't know won't hurt him.\"\n\nI looked at him. \"Still, if it's all the same to you . . . .\"\n\nHe gave a chuckle. \"Fine. Take this one.\"\n\nHe grabbed a white Telecaster from the row and walked over to a row of hardshell cases. He flipped the catches on one labeled \"Nick,\" laid the guitar in, and closed it up.\n\n\"I'd really rather not\u2013 \"\n\n\"Really,\" Teddy interrupted. \"He won't give a shit. And that's the best one of the lot. Tons of special specs built in at his request, and easily the most playable. You're gonna do a one-man show, might as well have something with some teeth, right?\"\n\nI hesitated, then gave a curt nod. \"Thanks.\"\n\n\"So you gonna be there tonight?\" Ferlin asked as I loaded the guitar into the Jeep.\n\n\"Probably 'bout eight thirty. Gives me plenty of time to set him up.\"\n\n\"You don't have to\u2013 \"\n\nHis look strangled the words in my throat. He was about the tenth person in the past twenty-four hours to look at me like I was daft. \"You'll never get it right in that goddamned barn. I've played there before. I'll have you set up in no time.\"\n\n\"Fair enough.\"\n\nHe smiled and stuck out his arm. \"Good. I'll see you then.\"\n\n\"Thanks.\"\n\n\"Don't mention it.\"\n\n* * * * *\n\nFerlin chuckled to himself half the drive back to work.\n\n\"What's so funny?\" I finally said.\n\n\"You. Jesus, Mark. I know you recognized him, but you didn't even react. Like it was no big deal.\"\n\n\"I've met famous people before,\" I explained.\n\n\"Yeah? That famous? Like who?\"\n\nOh, I don't know, I thought. People like the President and all manner of legislators and governors and entertainment bigwigs and shit like that. Hell, I got to play a guitar duet with Alan Jackson once, and he's pretty big, I wanted to say. But I didn't.\n\n\"Just famous people,\" I finally said.\n\n\"But after all that time\u2013the whole time actin' like it's no big deal\u2013you get all flustered when he offers to come help you get it all set up.\"\n\n\"Just didn't expect it is all,\" I said. \"I mean, I'm sure he's got better things to do, right?\"\n\n\"Nah,\" Ferlin replied. \"Jenny and the kids are outta town. He's probably bored stiff 'bout now.\"\n\nI was silent for much of the rest of the ride back. As we pulled into the parking lot, though, I said, \"How do you know him? Teddy?\"\n\n\"Everyone around here knows him. Most of the band, actually, but especially Teddy and Nick. I graduated a year ahead of them both. We all go way back.\"\n\n\"And they both still live here?\"\n\n\"Teddy never left. Nick moved back around the time LeadFoot broke up and General Beauregard got formed.\"\n\n\"Wow.\"\n\nHe put the Jeep in park, shut it off, and turned to me. \"You keep your eyes open and you'll see more than just them.\"\n\n\"What d'ya mean?\"\n\n\"We're not that far from Chicago,\" he explained. \"Far enough to be in the country, not so far that it's a major pain in the ass to get into the city. So there's a lot of pretty famous and powerful folks that live out this way.\"\n\n\"Like?\"\n\nHe rattled off the names of a movie director, two writers, some coaches and players for the Bears, Cubs, and White Sox, and a few others.\n\n\"They all live around here?\"\n\n\"All within ten miles.\"\n\n\"Where?\"\n\nHe smiled. \"You drive down a country road and see a long driveway disappearing into trees, chances are one of 'em's occupied by one of them folks.\"\n\nWow, I thought. This was almost like living in Nashville again. No wonder no one took it all too seriously.\n\nStill, I had to admit that Teddy Cooper was about as down to earth as you can get.\n\nAnd I was more than a bit nervous about him critiquing my playing and singing.\n\n* * * * *\n\nTeddy was as good as his word. Twenty minutes after he showed, the equipment was all hot and the amps all in balance. He ran me through the effects pedals taped to the floor next to the microphone stand, then gave a nod, wished me luck, and waded into the growing crowd to get a beer. Almost everyone clapped him on the back as he passed, and he stopped to chat with more than a few of them.\n\nI heard a thunk on the tiny stage to my right and Ferlin said, \"Move over, son.\"\n\nI did.\n\nHe reached under the mic, flipped the switch, and tapped to make sure it was life. \"Okay,\" he said to the crowd in his gravelly voice, \"here's the deal. Couple of the fellas in Golden Rodeo went out and hurt themselves, so they can't play here tonight. Mark here said he could take their place.\"\n\nThere were some jeers and whistles, and I couldn't tell if it was derision or good natured teasing. Probably a mixture of both. A few faces were genuinely upset when they heard Golden Rodeo wasn't going to be playing.",
        "\"You just hold tight, Lou,\" Ferlin called out to a heavyset man with a crew cut leading his wife toward the door. The man stopped. \"Give him at least two or three songs before you decide that my original instincts were correct on 'ole Mark's talents, huh?\"\n\nThe man nodded and cried out, \"I'll give him two.\"\n\n\"Fair enough. So if you'd all please put your hands together for a man making his debut in our fine little establishment.\"\n\nThe tepid clapping was better than I expected. Ferlin stepped back from the mic and leaned over and whispered in my ear. \"I want you to drop these fuckers, got it? Drop 'em.\"\n\nThen he gave me a big grin and a sharp smack on the back. I grinned in response, watched him step off the stage and disappear into the crowd, then looked over the sixty or so expectant faces waiting for me to try and fail.\n\nInstead, I smiled and slowly started playing the intro to what I figured would be a decent opening number. Twenty seconds later, I stepped to the mic and hit the key perfectly with the opening lyrics.\n\n\"Well I left Oklahoma/Drivin' in my Pontiac/Just about to lose my mind.\n\nI was going to Arizona/Maybe onto California/Where the people all live so fine.\"\n\nThe crowd hesitated at first, then I saw some foot stomping, and by the time I hit the instrumental break after the first chorus of Tulsa Time, they were cheering and whistling. Even Lou Whatsisname moseyed up to the bar and got him and little Missus Lou a couple more beers.\n\nThat's when I knew they wouldn't ride me outta there on a rail.\n\n* * * * *\n\nI took my only break at ten to eleven, and the place was wall to wall.\n\n\"Need a beer?\" Ferlin shouted above the din to my right.\n\nI shook my head. \"No thanks. Just water.\"\n\nHe smiled, gave me a thumbs up, and pushed his way through the crowd toward the bar.\n\nThe crowd pretty much parted for me as I made my way toward the front door to get some fresh air. There was the occasional pat on the back, head nod, nice job, and such, but mostly they were talking and drinking and waiting for the break to end so they could get back onto the dance floor.\n\n\"You're a man of many talents,\" I heard someone almost shout into my ear as a hand fell on my shoulder.\n\nIt was the short, washed out one, Whitney.\n\nI gave a tired smile. \"Thanks.\"\n\n\"Goin' outside?\"\n\nI nodded.\n\n\"Mind if I tag along?\"\n\n\"Sure.\"\n\nShe pushed through the crowd lining the bar and put her drink on the bartop, then turned to follow me out.\n\nI stepped out and looked up at the stars, enjoying the sharp, icy air as it cooled me down.\n\n\"I was serious,\" she said, her voice louder than normal. Welcome to sudden quiet after a roomful of noise. \"I really am sorry about that comment yesterday.\"\n\n\"Me, too,\" I said. \"I was way out of line.\"\n\n\"I had it comin'.\"\n\nI didn't say anything, just tried to cool down. The lull in conversation seemed to make her nervous.\n\n\"You . . . uh . . . you're really good. Seem to know a ton of songs and all.\"\n\n\"Used to play in a band back when I was still in school.\"\n\n\"Why'd you quit?\"\n\n\"Marriage and a career kinda got in the way.\"\n\n\"They'll do that to you sometimes, I guess.\"\n\n\"I guess.\"\n\nWe were both silent for a few moments, and I turned to sneak a peek at her. She was looking up at the stars, her face lost in thought.\n\n\"I was right, wasn't I?\" I asked.\n\nShe turned and looked at me. She gave me a hard look, her lips pressed with hesitation, then nodded. \"I'm divorced and it was pretty much all my fault.\"\n\n\"How so?\"\n\n\"The short answer or the long one?\"\n\nI looked at my watch. \"Whatever you feel like tellin' in the next nine minutes.\"\n\nShe sighed, then turned back to the inky sky with its millions of pinpricks of light. \"The short answer is I cheated on him. The long answer? We never should've gotten married.\"\n\n\"Why not?\"\n\n\"Because I'm not sure I ever really loved him.\"\n\nThat was like a slap to the face. I felt my arms start to goosebump in the cold, and a deep shiver ran from head to toes.\n\n\"I loved him, of course. But it was more respect and admiration. He was\u2013he is\u2013a good man. A great man. Solid, dependable, smart, good looking. He was everything a husband should be.\"\n\n\"But?\"\n\n\"But there was never any spark.\"\n\n\"Then why did you marry him?\"\n\n\"At the time, it seemed like the thing to do. I was mid-twenties; marriage seemed the thing to do.\"\n\n\"But why him?\"\n\n\"He was comfortable. Easy to get along with.\"\n\n\"And it never blossomed into anything more?\"\n\nShe turned and gave me a look of unbearable anguish. \"It got worse. For me, at least. We had a little boy.\" She gave a bleak smile at the of him. \"That kept me focused for a long time. Then my career, too. Between those, they kept me pretty busy.\"\n\n\"And?\"\n\n\"And it just reached a point where I dreaded going home. It wasn't Luke, it was me. I just . . . other than a son, we really had nothing in common. We didn't want the same things, no shared hobbies, interests. Nothing.\"\n\n\"Except your son.\"\n\n\"Except Kyle,\" she agreed.\n\n\"You ever tell him this?\"\n\nShe shook her head. \"It's better that he thinks I was just cheating. That another man came between us.\"\n\n\"That's bullshit.\"\n\nHer face took on a determined edge. \"If I told him the truth\u2013told Luke I'd been miserable almost since the get go, before we got married even\u2013he'd lose all those memories.\"\n\n\"What?\"\n\n\"Think about it, Mark. You look back on your marriage, you have happy memories, right? Memories where you were both in love and had fun and it was all roses and sunshine, right?\"\n\nI didn't say anything. Truth be told, I was seeing it all differently now. Sandy's motives and emotions were now all jumbled and murky.\n\n\"As it stands,\" Sandy continued, her eyes again on the stars, \"Luke has memories of ten years of happiness while we dated and were married and only the last five or six months of pain and misery. I don't want to take that away from him. It's the one thing I can do. I don't need to shit all over his perceptions.\"\n\n\"And he doesn't suspect?\"\n\n\"Occam's razor. He took the easiest, most direct explanation.\"\n\nI pondered this, figuring she was right, at least insofar as she and Luke were concerned. The problem for me was that I was already questioning every memory I'd previously cherished. It was like someone had flipped the lens of the kaleidoscope, and now the daisies were dandelions. I didn't know what the real picture was.\n\n\"Time for you to get back,\" she said, bringing me back to the present.\n\nI looked at my watch. \"Yeah,\" I said, then leaned in and kissed her on the cheek. \"Sorry again.\"\n\nShe tried her best to smile, then turned back to the stars as I went inside.\n\n* * * * *\n\nTeddy Cooper stopped me on my way back to the stage.\n\n\"You're doin' real good up there, man.\"\n\n\"Thanks,\" I said, pleased with myself.\n\n\"You got anything original?\"\n\n\"Like something I wrote myself?\"\n\n\"Yeah.\"\n\nI shrugged. \"Sure.\"\n\n\"Why don't you play a couple?\"\n\nI looked from him, then back to the crowd already clearing the dance floor. \"I'm not sure they'll want to\u2013 \"\n\n\"Just one or two. Mix 'em in. Don't announce 'em as your own, they'll never know.\"\n\n\"Unless they really suck,\" I said.\n\nHe laughed. \"Yeah, there could be that.\"\n\nI shrugged. \"I'll see what I can do.\"\n\n* * * * *\n\nOnce I was back onstage and plugged in again, I looked over the crowd and saw Whitney come back in and look around for her drink. Rebecca handed it to her, and they both turned to look toward the stage.\n\nKeeping my eyes on Whitney, I picked up the Taylor acoustic, popped a capo on the second fret, and leaned into the microphone. \"There's a couple of really pretty ladies over there toward the bar with no guys around 'em buggin' 'em for a dance. I'm gonna play a little belly bumper here in about ten seconds, and I'm hopin' someone'll ask 'em to the dance floor before I get started.\"\n\nI saw Rebecca laugh and take the first arm thrust her way. Whitney, on the other hand, seemed to shrink. Then a slim man in his early forties stepped toward her and extended his arm and, with only a slight hesitation, she took his hand and followed.\n\nI plucked the strings with my fingers, and most everyone recognized the song right off. Her head on the man's shoulder, I could see her lips moving along by the time I reached the chorus:\n\n\"Winter, Spring, Summer, or Fall/now all you've got to do is call.\n\nAnd I'll be there, yes I will/you've got a friend.\"\n\n* * * * *\n\n\"That was just friggin' outstanding, son,\" Ferlin was gushing as he stood behind the bar counting the receipts and putting stacks of cash into a small bank bag. \"You packed 'em in and kept 'em here. Just amazing.\"\n\nI was sipping a beer, my first of the night, while Marla and Denise swept and mopped and dragged a huge garbage can around to collect the empty bottles and cans strewn throughout the place. I took another chug and gave a weary smile. It felt good. I hadn't done this in a long time, and now I realized that I missed it. A lot. The playing, the crowd, the energy. Even just playing for bar crowds was fun if you could get in their groove and play what they wanted to hear and get them all happy and forgetting about their worries for awhile. I'd done that tonight. I hadn't wanted to stop, and Ferlin finally had to come on stage at twenty to two to announce one final song, then everyone had to start clearing out before the cops got there and shut him down.\n\n\"You hear me?\" he said, suddenly standing directly across from me.\n\n\"Sorry,\" I said, turning to face him.\n\n\"I said, 'How much you want for playin' tonight?'\"\n\nI shook my head. \"Nothing.\"\n\n\"Don't work that way,\" he replied, his voice going low and getting serious. \"You made me a lot of money. Got me out of a jam, too. You hadn't been here, this place would've been dead.\"\n\nI shrugged. \"No biggie. Don't worry about it.\"\n\nHe slid four hundred dollar bills across the bar toward me. \"That's a little less than I'd have paid Golden Rodeo, but they're a whole band.\"\n\nI looked at the money, then back to him. \"I don't want it, Ferlin.\"\n\n\"You're taking it.\"\n\n\"No I'm not.\"\n\n\"Yes you are.\"\n\n\"Take the goddamned money,\" Denise called out. \"He ain't leaving 'til you do, and we need to get home.\"\n\nI looked back and forth between Denise and Ferlin, a broad smile splitting my face. \"Shut up,\" Ferlin said.\n\n\"So the two of you?\" I asked.\n\n\"Used to be married,\" he said, his voice barely a whisper.\n\n\"Trying to get back together?\" I asked, keeping my voice down.\n\n\"I can hear you two,\" she snapped. \"And no, we're not trying to get back together. Just need to get laid is all. The both of us.\"\n\nI laughed.\n\n\"What's so goddamned funny?\" Ferlin said.\n\n\"Nothing. I just think it's . . . I don't know.\"\n\n\"What?\"\n\n\"Really, Ferlin. I don't know. Just strange, I guess.\"\n\n\"Why?\"\n\nHe was serious: He didn't think anything was even remotely strange about going home with his ex-wife to knock off a piece.\n\n\"You really don't see it?\"\n\n\"No, I don't.\"\n\nI chuckled, then reached toward the money. \"Tell you what, I'll take this much. You keep the rest, but you're responsible for getting that equipment back to Teddy in the morning, okay?\"\n\nI left two of the bills sitting there, and Ferlin looked at them for a moment before shrugging and stuffing them into his pocket. \"Fair enough. Which reminds me. Teddy wants you to call him tomorrow.\"\n\n\"What for?\"\n\n\"Didn't say.\"\n\n\"You got his number?\"\n\n\"In the book. Under Jenny's name. Jenny Cooper.\"\n\nI finished my beer. \"Okay then,\" I said. I stood, picked up my Taylor acoustic in its hard shell case, and went home to collapse."
    ],
    "authorname": "Rehnquist",
    "tags": [
        "cheating",
        "running away"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-lazy-lemon-sun-ch-02"
}