{
    "title": "My Only Talent Ch. 36",
    "pages": [
        "Mikey Likes It! Robbie Doesn't!\n\n*\n\nNote: The descriptions and accounts in these stories are fictional and do not portray any actual people or events.\n\n*****\n\nMei Ling had worn her Vietcong Full Metal Jacket movie hooker outfit to the Horseshoe Bay condo, and when she smiled at all four of us and said \"Hi, GI! Suckey Fuckey?\" you could have heard a pin drop. Mei Ling may have had a submissive side, but things sure weren't starting out that way.\n\nShe smiled again. \"Hello Boys. First Rule Number One. What are you going to say about tonight to anyone? Robbie?\"\n\nI smiled. \"Nothing!\" \n\nShe smiled. \"And if anyone asks you about Mei Ling?\"\n\nI smiled again, and delivered my standard line. \"She is a wonderful young lady and I am proud to call her my friend. That is all any of us should ever say.\" Heads nodded all around.\n\nMei Ling smiled, and carried in her ESU logo gym bag and put it in the downstairs bathroom. I guess she was planning a workout.\n\n\"Very good. We are going to start with a little game of \"Mei Ling Says\". It's like \"Simon Says\" except I am cuter and I give much better head.\" She shot out a hip in a pose and I noticed her nipples pointing through the tight red halter top. The black leather hot pants crinkled. \n\nI am sure at least three of us made an audible gulp, and perhaps all four.\n\nHer Suzie fired up, like someone starting a cold chain saw, just after they pushed the little rubber button that primed it with a rich mixture. It rumbled and popped, but was not yet at full RPM. I was the only one that noticed her Suzie signal, as far as I knew. \n\nShe smiled again, almost in a predatory way. \"If I say Mei Ling says to do something, you do it or you get slapped for despoiling my virtue. If I just tell you to do something, without the enabling phrase, and you do it, you also get slapped. If you get slapped twice, you are out of the game for the rest of the evening. Does it make sense?\"\n\nHusky, Ralph, Kevin and I all nodded. Whatever Mei Ling wants, Mei Ling gets. There was something about a hot girl on her knees that held our attention. \n\nHer little Suzie chain saw began to idle and purr. It sounded like it could handle a lot of wood. I was pretty sure that's what Mei Ling had in mind. Suddenly her carrier wave waxed strong, and images began to pop into my head. \n\n\"Mei Ling says put both hands on top of your head and keep them there.\"\n\nImages of Mei Ling taking all of us in her mouth one after the other bubbled into my Suzie receiver. We stood in a circle around her and gave her our full and undivided attention.\n\nWe hurried to put our hands on our heads. It looked like we were being arrested by the cops and waiting for the handcuffs to be applied. \n\nShe looked very obviously at our crotches and licked her lips. \"If you take your hands off your head, I stop what I am doing. But as long as you keep your hands up there and don't try to grab me, I think you will really like this little game.\" \n\nShe moved over right in front of Kevin, so that her face was about three inches from his crotch.\n\n\"Hi, Kevin. Suzanne says you have a nice dick.\" Kevin made some sort of snorting sound, and a big grin spread across his face. Husky and Ralph laughed. I couldn't breathe.\n\nShe leaned over and just brushed the front of Kevin's jeans with her cheeks, first the right and then the left, keeping her eyes up on him. He groaned. She gave him a series of little kisses through his jeans, and he took a gasping breath. The Suzie chain saw revved up and stayed running faster.\n\nShe licked up and down, slowly and theatrically, tracing his outline through the jeans. Then she bared her teeth and grabbed his zipper with them and tugged it down slowly. Kevin was paralyzed, except for his legs vibrating. \n\nShe reached up and pulled his pants down, then his underwear. He sprang to attention.\n\nMei Ling, in her best Texas accent, pronounced, \"Yep. That's nice!\" Kevin's grin got even wider. After that, she didn't talk with her mouth full, but she did make a variety of appreciative noises. After a while, Mei Ling's neck motions synchronized with the slight forward thrusting of Kevin's hips, and Kevin began to groan. \n\nMei Ling pulled back and smacked her lips loudly, drew a big breath, and said, \"Come for me!\" with a mischievous grin. \n\nKevin groaned, and screwed his face up into a weird expression, but did not follow her command, since it lacked the specified enabling phrase.\n\nMei Ling smiled up at him, frantically licking the underside of his cock. Now Husky groaned.\n\nShe took another big breath, and said, \"Mei Ling says, come in my mouth!\" and engulfed Kevin's cock again, imploring him with her eyes. Her tongue moved frantically inside her mouth and under his dick, and Kevin's groan turned into sort of a whimper. His hips thrust forward one more time and then his motions stopped.\n\nMei Ling's did not. Her throat oscillated and her cheeks hollowed, her eyes still smiling. She synchronized her breathing through her nose with the obvious vacuum waves her lungs were applying to Kevin. Kevin gave and she took, both of them obviously enjoying each other. She kept working until there was apparently nothing else left to get. Kevin's expression said he was grateful, but sad it was over.\n\nMei Ling smacked her lips one last time, and broke out in a huge grin. \"'rank you, GI!\" Very politically incorrect, but hot as hell, plus nobody cared about micro-aggressions at this juncture.\n\nShe stood up and walked over to me, still smiling. \"Mei Ling says, take off your shirt, Robbie!\" \n\nI did it, hoping that wasn't all she wanted. She made eye contact with me, and then began to play with my nipples. Oh man!\n\nShe teased me and tantalized me with her fingers and fingernails, just barely touching my nipples but sending waves of excitement through me. She smiled wickedly. She knew exactly what that did to me. She stared obviously at my now rock-hard cock, and smiled again.\n\nShe pulled her little red halter top over her head. The chain saw revved a little higher. Her nipples looked like the bullets protruding from the AK-47 rounds that Big Un favored for short range point and shoot targets: tapered, pointed, red-brown, hard, and deadly. Then she slipped out of the black leather hot pants, too. She was wearing some incongruously pure white silk panties, tight and sheer. The sight of them lit me up. She stood up to her full height, grabbed my head, and shouted, \"Mei Ling says, Robbie, lick my nipples, tongue only!\"\n\nI did my best. Suddenly I was plugged into her Suzie, listening to the nuances of that chain saw note, and I knew what she wanted almost before she did. I also sensed a little trap. \n\n\"Bite them!\" she screamed. I smiled up a her and kept licking, gently.\n\nShe smiled back, then backed away from me. \n\n\"Smart boy! To be continued.\"\n\nShe moved over in front of Husky. \"Hi, football guy. Mei Ling says get naked!\"\n\nHe did, with a big smile on his face. Mei Ling pleasured herself through those thin white panties, the slipped them off, maintaining perfect balance and making eye contact with each of us. \n\nShe held the panties under each of our noses in turn. \"You like?\" \n\nIt was like my whole body lit up with lust. Her smell was intoxicating, demanding.\n\nShe threw the panties on the floor and then walked around behind Husky and grabbed his buttocks with both hands. \"Hey, you work out!\" She kneeled behind him. Her Suzie revved a little higher still. \"The weight room has been very, very good to you!\" \n\nShe kneaded his ass checks like bread dough, then used her hands to stroke up and down along the front and back of his legs while she kissed his buttocks fervently. She moved her hands around to the front of his thighs and rubbed her rock hard little bullet nipples along the back of his legs. Husky made a funny whooshing sound as her tongue began to part his buttocks. \n\nHer mouth roamed all over his butt and lower legs. One hand snaked round and teasingly stroked his cock while the other grabbed the front of his thigh and pulled his ass toward her mouth. She was obviously thrusting her tongue into his butt with glee. Her hand began to jack his cock faster and faster. Husky made a high-pitched kind of sound effect noise.\n\n\"Mei Ling says tell me when you are about to come!\" She moved around in front of him and held his cock up with one hand and sucked on his balls. Her Suzie revved even higher, and the other hand frantically jacked his cock, then guided it into her mouth. \n\nHusky drew in a huge breath. \"I'm gonna come!\"\n\nMei Ling's Suzie sounded like a chain saw right next to my head. She deep throated his cock, and grabbed a butt cheek with each hand, pulling him into her with both arms. Husky made a high pitched little shriek, and obviously struggled to keep his hands up on his head. Any guy would have wanted to grab her head and fuck her face, but that would have meant she would stop what she was doing, and that was unthinkable. \n\nHer cheeks began to puff and hollow, and Husky made a deep rumbling noise. He kept his arms on his head, but began flexing his elbows forward, like he was finishing one of the crunch exercises Saskia made me do at the gym. Based on Mei Ling making a deep throated \"yum\" noise, each elbow motion was accompanied by an ejaculation. After five or so he stopped moving his arms, but Mei Ling kept sucking hard, smiling up at him and fully aware we were all looking at her. Her Suzie revved. She was in her element. \n\nShe pulled back and blew him a theatric kiss, then turned back to me.\n\n\"Robbie, Mei Ling says kiss my nipples! Lips and tongue but no biting!\"\n\nI was happy to comply. Her Suzie told me she wanted me to bite them, but she was waiting and anticipating. Two could play that game. Her Suzie told me exactly how to drive her nipples wild, and she began to chant a little bit as I got very creative with them, but stopped short of biting. She shivered.\n\n\"Me Ling says, Robbie kiss my right, Ralph my left.\" \n\nRalph had been staring at her like a puppy. My dick was so hard it hurt. Husky had fully recovered, too, but at this point could only watch. Ralph made a noise sort of like our dogs made when Grandma fed them boiled liver on top of their normal dry food. \n\nMei Ling leaned back slightly, and put one hand under each breast, offering them up for us to kiss. This went on for some time, and then her Suzie note changed, taking on another overtone. \n\n\"Mei Ling says, Ralph, take off your clothes!\"\n\nRalph would have happily gone on nuzzling her breasts forever, but he stood and stripped quickly. Mei Ling had already inspired him to new lengths, so to speak. She theatrically looked at Ralph's giant dick, and then made specific eye contact with each of the rest of us. She repeated the cycle again. I could hear her Suzie signal saying, \"watch this, boys!\"\n\nShe took Ralph's cock in both hands and gently toyed with it. Her small hands made it seem even bigger. Their motions made it get even bigger. \"This GI big boy!\" she said, and paused for effect. She put her tongue on her upper lip and looked right at me until I made eye contact. It had the same effect on me as when Suzanne did it.\n\nShe closed her eyes and licked the big lollipop. She knew we were all watching. I think that was just as big a turn on for her as actually doing the four of us. She spent a long time covering every square millimeter of Ralph's cock with kisses. He was in a trance. Then she seemed to push her tongue down into the opening in the front, and waited for Ralph to look at her. He finally did, wondering why the magic motions had ceased.\n\nShe smiled wickedly, now looking at the three of us instead of Ralph. \"Mei Ling says don't come until Mei Ling says!\"\n\nShe almost attacked Ralph' dick, stuffing as much of it as she could in her mouth and making gargling noises. She would pause with as much in her mouth as she could and look up at Ralph. Then she would gobble down a little more. When she got a little more than half of it in, we could see it moving in her throat. She stopped trying to take more, and began moving her throat up and down on it, faster and faster. Drool dribbled down her chin. \n\nRalph's legs began to synchronize with her motions. She changed pace and nibbled his cock side to side like an ear of corn. Ralph neighed like a horse. Mei Ling giggled. \"Big Boy like?\"\n\nShe then grabbed it with both her little hands and began working them up and down, staring down at it like she was looking down the barrel of a gun. Ralph gritted his teeth and made a funny sound through them. \n\nShe stopped and asked. \"Is the entire universe really expanding?\"\n\nRalph was not expecting a cosmological question, and was hardly able to concentrate fully on astrophysics at this point. But Ralph was Ralph. \"The part we can observe is. I think it all is. The multiverse may or may not be.\"\n\nMei Ling smiled. \"Mei Ling says come!\" She devoured his dick. \n\nRalph came. You could almost see the shock wave pulse along Mei Ling's cheeks. She worked her hands on him like she was squeezing toothpaste from tube. Her Suzie signal revved wildly like the chain had broken on her chain saw. \n\nRalph's face went white and his head traced a path like the precession of a spinning top. Mei Ling used one hand on his butt to steady him but kept the other hand on his dick, and kept her mouth sealed on it. She then pulled back, smacked her lips, and triumphantly announced \"Mei Ling got it all!\"\n\nKevin, ever thoughtful, had retrieved an orange and white hand towel from the bathroom, and offered it to Mei Ling. She used it wipe a little perspiration from her brow, but did not need it for anything else. She was efficient and effective. \n\nRalph began to huff and puff to catch his breath. Husky looked like he was in shock. Kevin was probably thinking about casting Mei Ling in a combination martial arts and porn film. \n\nMei Ling sat on the big round coffee table and held up her breasts again, looking right at me. \n\n\"Robbie, Mei Ling says kiss my breasts and nipples!\"\n\nI knelt in front of her and bent to my task. She began to make little cooing noises. \"Robbie, can you really give me a nipple orgasm?\" Her Suzie swelled in time to my kisses, and I knew I could. I answered only with my tongue, getting rougher and rougher, then being almost too tender, then rougher again. As her Suzie began to peak, I added little bites to the mix.\n\nMei Ling put her legs around my waist and locked them together. I suppose it might be some kind of martial arts submission move, but if she squeezed too hard I would have to stop kissing her to breathe. \n\n\"Mei Ling says don't stop, don't stop, don't stop!\" No worries then.\n\nTwo more complete cycles put her right over the edge. She squeezed me so hard with her legs that I did have trouble breathing, and then groaned and screamed. Her Suzie blasted and a wave of exotic pussy smell pulsed at the same time. She was incredible.\n\nShe motioned for me to stand up and then knelt on the table, her eyes on my long-suffering erection. \"Mei Ling says GI get first crass A1 bro job!\" She was really into this Asian hooker thing, and I wasn't about to argue. I was glad Cisco wasn't here to watch. \n\nShe proceeded to give me the most amazing head I have ever had. I thought Janet was great that first week of school, and Lara and Suzanne improved on that, but this from another planet! Fast and slow, deep and shallow, strong and gentle, lips and tongue, throat and teeth, nose and chin, and even ears and eyes, alternated and switched and morphed and pushed and pulled and sucked and blown. I was soon in such a state that it all began to merge together. I lost contact with her Suzie and retreated into my own little sensual world. \n\nCisco had told us that one of her martial arts skills was being able to hold her breath longer than he could believe. He had never officially mentioned the sensual implications of that skill, but it was certainly apparent to me now! She took me all the way down her throat, and looked me right in the eye. Her Suzie broke through my fog. She was enjoying this more than I was! She knew she was in control. She pulled all the way back, give me a quick little flick on the head of my cock, and plunged me back down. Again, and again.\n\nAbout the tenth time, she stopped and said, \"Mei Ling says give it all up for Mei Ling!\" \n\nHer timing was excellent, because I couldn't hold out anymore. She sucked me so hard I through there might be some permanent damage, then stopped, and started again. She owned me. If was de facto submission, if not de jure. When I had completely emptied out, I almost passed out.\n\nMei Ling sat back on the coffee table and smiled contentedly, and dropped the Vietcong hooker patois. \"Okay boys, your responses and sensitivities are now properly calibrated and I know just how this party should proceed.\"\n\nShe motioned to Kevin and Ralph. \"Mei Ling says Kevin, you kiss and lick my left breast, shoulder and armpit, and Mei Ling says Ralph you take the right. I want to feel it, boys.\" She then spread herself out across the table, grabbing the top edge with both arms. \n\nThen she did one of the stretches that Saskia had favored for our conditioning class. Her left leg went up over her center and then all the way over to the table on her right, up near her shoulder. Talk about flexibility. The she moved it back about to the center, pointed it straight up, and then bent it slightly and held it in place effortlessly. \n\n\"Husky, Mei Ling says worship my pussy!\" She didn't have to tell him twice. Her exotic aroma had been filling the room of the last ten minutes, and it was acting directly on our brains. \n\nShe looked at me, tongue on upper lip until I looked, and then crooned, \"Mei Ling says, Robbie, worship my ass!\"\n\nShe didn't have to ask me twice either. I've had several technicolor dreams about Mei Ling's hot little ass, but it was even better than I imagined. Every muscle was a perfect specimen beneath her cinnamon skin. Soon her Suzie was screaming again. It had gone beyond the chain saw stage, and was now more like a single jet turbine. As strong as it was, it was sweet and pure, with no hint of discord, distortion, or Melanie meltdown. \n\nShe disengaged from us all and turned over onto all fours on the big round coffee table. She motioned for Ralph and Kevin to approach her face and began sucking them both alternatively. If Keven felt intimidated by the comparison, he didn't show it. \n\n\"Mei Ling says Husky, lie on your back so I can mount you.\" He slipped under her like a defensive line stunt to avoid a pulling guard. He was a little uncomfortable with the resulting view of her sucking Ralph and Kevin while she rode his rod, but he simply turned his head and closed his eyes. \n\nMei Ling found a rhythm quickly and the phrase 'fuck like a snake' came immediately to mind. Husky did a good job of moving up to meet her, and I could hear her Suzie signal accelerate.\n\n\"Mei Ling says Robbie fuck my ass!\" I stood over her like a was going to drop onto a horse in a rodeo chute, timing her motions. She bent forward even further. I put one leg on each side of her and squatted like one a Saskia's difficult modified lunges. I held my position and her perfectly muscled ass moved up to meet me. I made one final adjustment to get the optimum angle, and then thrust forward. \n\nAs my depth of penetration increased, she began to chant. \"Yes, yes, yes!\"\n\nI took that as an invitation to proceed, bending my legs another ten degrees, and using Saskia's special glut thrust and cat back arch exercises to push my pelvis forward at just the right time. I was suddenly uncomfortably aware of Husky's efforts on her behalf. \n\nOur frequencies of thrusting moved and beat like two aircraft engines trying to synchronize. Sometimes we would both thrust at maximum depth at the same time, sometimes one was all in as the other was all out, and we moved through every possible state in between. As far as I could tell from her Suzie, Mei Ling liked it all.",
        "She was switching her mouth back and forth between Kevin and Ralph frequently, and her pussy juice was beginning to drip on the coffee table. If I was a coffee table, I think I would like that much better than linseed oil for a moisturizer. \n\nHer moisture was a sign of coming events, and soon she paused between Ralph and Kevin, bent her head down, grunted, and came. Her Suzie rang like someone had struck a big cast metal bell with a ball peen hammer.\n\n\"Mei Ling says thank you, boys, and don't you dare stop!\"\n\nShe took Kevin back in her mouth, and if anything thrust back against us even more. It almost felt like she had one set of muscles meeting me and another meeting Husky, and they could work independently. A few more minutes and another bell tolled. She took her mouth off Kevin and drew in a big whistling breath.\n\n\"Mei Ling says switch! Robbie and Husky in front, Ralph underneath, and Kevin on top!\"\n\nWe all looked a little sheepish and uncoordinated, except for Kevin, who moved into his designated position like a fast point guard leading a basketball play, and was watching and waiting impatiently as Ralph crawled underneath her. \n\nMei Ling accommodated Ralph like she was designed and built for it, as she was. Kevin sheepishly hesitated a moment as he watched Ralph's dick disappear into her pussy. Then he focused on his task, and took up about the same stance I had used, and plunged into her ass.\n\nA huge breath hissed through her clenched teeth, and then she sucked Husky into her mouth. I noticed that Ralph, unlike Husky, was looking up from his under perch and actively watching Mei Ling's oral ministrations to Husky and me. This seemed to spur him further on, and Mei Ling's Suzie signal promptly went to afterburners. \n\nShe grunted and came again, and again. She began to chant in some unknown language, but it sounded hot. Then she drew another deep rattling breath and said, \"Mei Ling says come in me boys, all three of you.\"\n\nOur motions didn't change, but our intentions did. At least mine did. I wanted to explode in her ass with such force, heat and volume that she would never forget it. Ralph must have had similar thoughts, and I found it a little off-putting when I felt his dick swell up inside her with only a centimeter of so of her perfect little musculature separating us. I put it aside and raced forward. \n\nKevin's head moved left and right and he began to pant. Husky looked like the odd man out, with no place to go, er , ah, come. \n\nMei Ling's Suzie pounded into my head as she had another shuddering orgasm. It triggered me, and a knew I was just about to come. Ralph reached up from underneath her and grabbed her waist, trying to get even further into her. She snorted through her nose and seemed to suck Kevin even harder.\n\nI felt myself let go. It was like a hoard of bees buzzed up out of my balls and flew into Mei Ling. Ralph must have let go too, as I felt a wave of pressure pulse through Mei Ling's little muscle wall. Kevin grunted, and broke the rules, grabbing Mei Ling's head and lustily fucking her mouth as he shot into it. Her Suzie signaled that she liked it. She sure didn't slap him.\n\nMei Ling grunted as if she was coming with each ejaculation into her. Her pelvic muscles rippled like the wake of a boat passing by. \n\nWe all paused, frozen in time, then I pulled out of her ass. She slowly moved up and off Ralph, and let Kevin out of her mouth. She flipped over 180 degrees, and facing Husky with her legs wide open, her pussy seemed to beam heat right at him.\n\n\"Mei Ling says Husky is first for seconds, but they are going to be anything but sloppy, yet!\" she said, calmly and confidently.\n\nShe reached out and put her hands on each side of Husky's waist, and guided his erection into her. \"Oooohhhh!\" she crooned. Once he was almost all the way in, she grunted, and I inferred from his facial reaction that she had clamped down on him. I am not sure if pussy grip was a martial arts skill you could train for, but apparently, she had it in spades.\n\nHusky pulled out slowly, and apparently with great effort, then plunged back in. Mei Ling grunted, \"Gotcha!\" and smiled as he seemed to be held immobile. \n\nHusky got a funny look on his face and groaned. \"You gotta let me move!\"\n\nMei Ling laughed. \"I'm waiting, cowboy!\"\n\nHusky reached up and grabbed her legs, using them to steady his balance and grip, and began to slowly push into her. I was reminded of the blocking sled on the football practice field at Prosperous High: lots of grunting and effort for some slow forward movement.\n\nMei Ling smiled. \"That's a good boy! Can you fuck me harder?\"\n\nHe could. He worked hard at it. She pushed back. \"Good boy, good boy, good boy...\"\n\nNow he was pounding her for all he was worth. Her Suzie raced again, after a few minutes of calm. Husky was beginning to sweat and grunt copiously, and Mei Ling's pussy scent once again dominated the room. I looked up to see Kevin and Ralph staring slack jawed at Mei Ling and Husky. But their jaws were the only thing slack: they were both obviously ready to go again.\n\nMei Ling began to toss her head from side to side. \"Fuck me, fuck me!\"\n\nHusky couldn't do anything else, so he just kept pounding.\n\nMei Lings whispers grew to a shout: \"Yes, yes ...\" She came in a chorus of grunts, and for me, a huge Suzie wave front. Husky kept pounding.\n\nMei Ling laughed maniacally. \"Okay, football guy! Fourth quarter! Time to shoot and score!\" Husky was a machine. He was a robot, calibrated and delivering fast and deep strokes. His face took on a strange pink color and a grimacing expression, and then he slowed his motions, stopped at the point of maximum penetration, and roughly put all his weight onto Mei Ling's small frame. \n\nMei Ling took it all. \"That's it. Fill me up!\" After about five deep penetrating deliveries, Husky stood up. \n\nMei Ling stretched her legs out farther and smiled. Kevin stepped up to the plate, entering her immediately. \"Oh, Kevin! Give it to me, baby. I want it. Fuck me.\"\n\nIt's a good thing Kevin had given up pot and booze earlier in the semester, or he would not have been able to keep up with Mei Ling. If anything, he was pounding her even faster than Husky had, if perhaps not as forcefully. He lasted a long time. \n\nMei Ling praised him lavishly. \"Kevin, give it to me!\" Ralph looked on longingly. Then Kevin, with a display of double breathing and frantic lunging, quite obviosity gave her everything he had. She grabbed his ass checks and urged him all the way to the finish. \"That's so fucking good, Kevin!\"\n\nKevin stepped back unsteadily. Mei Ling was flushed all over, sort of a red patina on her cinnamon skin. She was breathing hard and stretching happily across the coffee table. Her pussy was a wet, steaming river in the air-conditioned living room, but frankly, it still looked quite inviting.\n\nShe made eye contact with Ralph, who stared at her intensely. \"How 'bout it, Ralphie Boy? Can you expand my universe?\"\n\nI knew from middle school that Ralph absolutely hated being called the 'Ralphie' diminutive or any variant of it with a purple passion. He must have channeled that emotion into the frenzy that he now approached Mei Ling in. He slapped the insides of both of her thighs with his now erect and once again huge cock. He then slammed it into Mei Ling mercilessly. It looked like the punishment fucks that Kevin had shown me on some of the German kink porn websites he sometimes favored. \n\nIt didn't bother Mei Ling at all. She must have planned on it. She laughed wickedly, and languidly stretched, grabbing each ankle with a hand and stretching her hamstrings in a fashion that would have made even Saskia jealous. It looked like two big wings hovering at forty-five-degree angle, flanking Ralph's frantically moving butt. \"I thought you were going to fuck me, Ralphie? \n\nThat drove him nuts. Ralph went insane. He began slamming into her, crunching his abdomen and trying to spit her in half with his dick. He pounded her, shifting his weight from left to right, thrusting it all right into her pelvis, and then off of her onto his knees and arms, and then bombing and strafing her hips again. \n\nMei Ling smiled and looked over Ralph's shoulder to make eye contact with me, touching her upper lip with her tongue and waiting until I did a double take. \"That's it Big Ralph! Fuck me hard! Show me what you've got.\"\n\nRalph didn't play any sports, unless you consider string theory a sport. \n\nBut he had been sleeping with both Big Liz and Little Marilyn all semester, and I would guess that meant doing a lot of crunches most nights. He did leave it all out on the field, or at least between Mei Ling's legs. He pounded her, increasing his pace. I was standing behind him, and was a little awed by the depth of penetration he was achieving.\n\nMei Ling came again. Her Suzie reaching a whole new level, like giant multi-engine aircraft hovering right above us. She grabbed Ralph's butt and squeezed him into her. She slipped on finger between his cheeks and into his ass, and that was apparently the trigger than shot him into space. He screamed and convulsed, seemingly managing to get all his weight and momentum through his dick and into her pussy.\n\nMei Ling was all praise now. \"Oh, so good, Ralph! Fill me up big boy!\" \n\nRalph made almost a dozen more thrusts, then collapsed onto her. After about ten rasping breaths, he rolled off onto the floor, spent.\n\nMei Ling stretched her legs again and looked me right in the eye, my gaze slightly distorted by the heat waves rising from her pussy. \"You are the anchor on this little relay team, Robbie. Can you bring it home?\"\n\nThe phrase 'sloppy seconds' again occurred to me, but pheromones and Mei Ling's droning Suzie outvoted any reservations I might have had. I also decided not to be intimidated by Ralph's having preceded me. Just do your best Robbie. I touched Mei Ling's face and was suddenly locked into her Suzie signal. Images paraded past my consciousness like flashcards on speed. Fleeing impressions were all I could catch as they went by.\n\nThe first thing I noticed was they were all males chasing Mei Ling. No females at all in any of her erotic dreams. How did she end up pledging Bi Phi? Next, there were no generic males or disembodied dicks like I had seen in Suzanne's images. They were all specific guys. Some of them I recognized from UDP or classes at school, some of them where obviously much younger guys she knew from high school or middle school. Third, there were no 'strong reactions' to any of them except Cisco. Besides him, the others were 'chase me' guys, Cisco was the only 'right now' kind of guy. No girls made her list at all. I guess I wasn't the only one who was excessively heteronormative. \n\nI had seen several of Suzanne's bi or gay soccer team girls veritably swoon when introduced to Mei Ling, so I assumed lots of women had made passes at her, but as far as I could tell, none ever scored. Then it hit me. Her Suzie was currently focused on me, and she actively wanted me to fuck her. I was honored.\n\nI smiled at her and gingerly entered her, wondering how it would feel. I made it about halfway into my modest length, and then she grabbed me, pulsing her vaginal muscles like she was sending Morse code. Talk about control! I needn't have worried about anything being sloppy. The phrase that now occurred to me was 'jam up and jelly tight'. \n\nI leaned down and kissed her neck, still sheepish about kissing her mouth. Her Suzie responded to each touch of my lips on her neck. I tuned into her Suzie and pumped it like a swing on the playground, letting swing free when it was moving fast, and giving it a little nudge at the right time when it slowed, to then send it swinging a little higher. \n\nI was achieving resonance. When she got a little further along, I got harder and more determined. Soon I could sense she was just about to come. I was John Henry. She bent her head down and sank her teeth gently into my shoulder and popped off an orgasm, her Suzie signal ringing and reverberating. I tried to get even further into her. I'm not sure I did physically, but the Suzie connection felt stronger. I found a new rhythm and pumped her swing again. She came again, and it was like a big beautiful bell ringing in my head. \n\nShe clasped her arms around my neck and pulled herself up closer to me, and hooked her legs behind mine. I wasn't sure if I was fucking her more than she was fucking me, but we were certainly fucking each other. She put her lips right next to my ear.\n\n\"I want to feel your hot come again Robbie. Give it to me, please!\"\n\nI could never refuse a lady. Especially one in a complete state of rut over little ol' me. What an ego boost. It felt like the seas parted and I came in a flood, hoping it was strong enough to ring her bell again. It did.\n\nBut the bell just kept ringing. Perhaps she had achieved that primitive state from eons ago when our ancestors had several partners each night. I got back to my feet, but the Suzie connection remained. I felt her pure need and lust, deeper and more urgent than I had ever understood before.\n\nShe stretched back out on the table, languid and relaxed. Her Suzie was a giant machine sucking the air out of the room. \n\n\"Fuck me boys, anything you want, any way you want it!\"\n\nHusky didn't hesitate. He walked around to her front, pulled her head over the side of the coffee able, and began to fuck her mouth with long strokes. She slithered up to meet his thrusts, breathing loudly through her nose. Kevin put his arms under her knees, and ready for the third time (abstinence doth have it benefits) entered her and began to pound her now well-oiled pussy. Judging from the tone and volume of her Suzie signal, it was also a very happy pussy.\n\nKevin snarled and came, perhaps sooner than he wanted. Ralph took Kevin's place and pounded away, his cock disappearing into her infinitely accommodating snatch. \n\nWhen Ralph finished, Husky popped out of her happy mouth and into her even happier pussy. Kevin moved around to her mouth in the hope that she could revive him for a fourth try. I was held captive by her Suzie signal - harmonious and pure, loud and proud, jam up and jelly tight.\n\nFinally, my three brothers in arms or dicks, or whatever one says in this situation, were fully spent. \n\nI entered her one more time. I was suddenly plugged into that giant vibrating Suzie signal machine. It was a very different connection than the one I got with Nora. I had no idea where Mei Ling was in her cycle and whether she even had any eggs, much less their location or condition. I didn't really care, either. But I was plugged into her orgasms, and she was on the verge of a continuous one. I rocked, she rolled. She came about every fifth stroke. My ego knew no bounds, my id was ascendant, testosterone tornado in progress.\n\nWith Husky, Kevin and Ralph looking on in wonder, I flipped her over and plunged into her ass. Soon we established another rhythm. She only came about every 15 stokes or so. Robbie ass fucking Roberts is in control again! After several more shuddering comes, I was finally ready for my swan song, at least where Mei Ling was concerned. I moved around to her face and stuck my dick as far down her throat as I could get it, and came in waves. I may not have produced much volume, but whatever I did feed her she sucked down and made it disappear. \n\nI tried to stand and ended up in a heap on the carpet, joining the other three guys surrounding the coffee table. We had given her our best, and she had taken it all. \n\nThere was no sound in the condo but rapid breathing and the whoosh of the air conditioner for several minutes, then \"Mei Ling says thank you boys. You are all wonderful. I will never forget what just happened.\" \n\nHer Suzie began to descend from its heights, it's screaming urgency replaced with a wide wave of contentment. She did a few stretches to limber up and then rose gracefully. \"Mei Ling says dibs on the bathroom.\" I was still connected to her Suzie, but the only images were of Cisco. Wow!\n\nWe all watched her walk away, able to move only our eyes. The sound of the shower running added to the gentle noise of the air conditioner. \n\nHusky was the first to try to stand, perhaps testament to the hydration and conditioning routines imposed on an ESU linebacker. Luckily there was another bathroom in the condo, upstairs, and Husky made his way toward it. I drew enough breath to say, \"I call second on the bathroom\", then waited for Husky to vacate it. \n\nHusky had wisely brought a pair of shorts and tee shirt, and he emerged from the bathroom with wet hair and a pale face. I had a spare pair of jeans and a collared shirt, so I thought I looked pretty spiffy by comparison. \n\nRalph was next. He showered and found a big orange and white track suit hanging in the upstairs closet, which he donned. \n\nKevin teetered unsteadily up the stairs and then hit the shower too, emerging in his ZZZ intramural touch football togs. What a motley crew we were.\n\nMei Ling strutted out of the downstairs bath. Her hair and makeup were perfect, and she had on a modest light blue long dress and moderate blue heels. She looked like the model next door, but tired after a long shoot, so to speak. She primly picked up those magic white panties, the black leather hot pants, and the red halter top and put them in her gym bag. She smiled at all us. \n\n\"Kevin, would you please drive me in my car back to the Bi Phi house?\"\n\nWe were all in the habit of refusing her nothing, so he jumped up and took her arm to steady her outside and down the stairs to the parking garage. He yelled over his shoulder, \"Robbie, would you please lock up when y'all leave?\"\n\nHusky and Ralph and I piled into my car and followed Kevin and Mei Ling. The condo was at the end of the road near the yacht club, and I turned left onto 2147 following Kevin toward Austin. \n\nRalph was the first to speak. \"I wonder how Cisco feels about this?\"\n\nI thought I knew. \"He said beforehand he was okay with it. Told her to go for it!\"\n\nRalph gulped. \"Not sure I could do that.\"\n\nWe both nodded. \n\n+++++++++++++++++++\n\nKevin drove in silence back toward Austin, getting used to Mei Ling's hybrid and its almost noiseless acceleration. Finally, his curiosity got the better of him.\n\n\"So, Mei Ling, how does Cisco feel about what just happened?\"\n\nShe laughed. \"He insisted that I go forward with it if I wanted to try it. I love Cisco, I always will. I just wanted to fuck four guys at once, for once. You guys were perfect for that. Cisco has some stuff he wants to try and I want him to explore himself like I just did.\"\n\nKevin looked thoughtful for a minute. \"Was it what you expected?\"\n\nShe laughed. \"No, it was much better. I knew I could trust you guys so I could just let myself go, and I sure did. I'll never do it again, but I'll never forget it either!\"\n\nThere was mostly silence the rest of the way back. They crossed the river at Marble Falls and turned on the 1431 for the trip back to Austin. Kevin preferred the scenic route to the faster highway route. They twisted and turned through the Hill County terrain. They finally arrived at the Bi Phi house south of campus some time later. \n\n+++++++++++++++++++\n\nWe kept up with Mei Ling's car. I didn't know why Kevin took the long and winding road back, and my nav system kept doggedly suggesting route changes, but we followed out of sense of duty, plus not making Kevin walk to the ZZZ house, although it wasn't far. \n\nWe watched as Kevin, uncharacteristically chivalrous, jumped out and opened Mei Ling's door, then walked her up the steps at the front of the Bi Phi house like an escort at a prom. Several of the Bi Phi's peered out the window at them, and then someone opened the door. Kevin gave Mei Ling a chaste little hug, and then she disappeared inside. ",
        "Kevin walked back down the stairs and got in my car and then we dropped him at the ZZZ house. I grabbed his shoulder before he stepped out, and he looked at me. \"Mums the word, Kevin, okay?\"\n\nHe snorted. \"Yeah, I know. Nothing about tonight. I can't tell the best fucking brag story of my life to anyone, but I knew that going in. Mei Ling is a wonderful young lady, blah, blah, blah.\"\n\nWe all nodded in agreement. When we got back to the UDP port, there were only a few guys on hand, as most members had already departed for the summer. With no classes in session, there was lots of Netflix and a few card games going on. \n\nCisco was nowhere to be seen, but Oiler was there. \"So, what was happening tonight guys?\"\n\nI took the lead. \"Just went for a drive out to Horseshoe Bay and back to see Kevin' dad's condo.\" I thought that was innocuous enough.\n\nOiler looked interested. \"Oh, did you see Big Bones Jones? I saw some tweets about him signing autographs at the pool somewhere near Horseshoe Bay.\"\n\nHusky remained admirably silent, and I spoke. \"I think we might have seen some commotion around the pool, so maybe that's what it was. Well I am tired. I am going to catch up on my sleep.\"\n\nOiler looked disappointed. \"So early? Man, you guys just have no energy. These should be your wild college days! Where's your sense of adventure?\"\n\nWe all shared a look, but kept our mouths shut.\n\n+++++++++++++++++++\n\nBack at the Bi Phi house, and unbeknownst to all of us at the time, my roommate Kevin K. Kretzman was on his way to becoming a Greek society legend. When he brought Mei Ling back to the house, every girl in the sorority could tell at a glance that she had that unmistakable glow that meant she had just had her brains fucked out. It was a state they all aspired too. As Kevin had gently escorted her to the door, and treated her so sweetly, his stock soared with all observers. The Bi Phi's knew that Mei Ling dated Cisco, and Kevin was with Lou Baby, but they didn't suspect Kevin and Mei Ling were a thing at all. Mei Ling, when questioned, was coy, but her understated smile spoke volumes. \n\nThe next day a few calls to boyfriends who belonged to ZZZ or girls known to party at ZZZ produced the remarkable result that the normally braggadocios Kevin had said nothing about Mei Ling to anyone, and when questioned about her specifically, would only say that she was a wonderful young lady and a good friend, but with no gossip or other information at all. \n\nKevin thus became a shining example of the kind of boyfriend that all the girls desperately desired: ready willing and able to fuck their brains out, and unwilling to gossip about it. His fame soon spread to other sororities and dorms, and literally hundreds of girls were hoping that Kevin might call. His reputation was now every bit the equal of what his roommate, the Master, had gained from the Halloween and Addicted to Austin parties. \n\n+++++++++++++++++++\n\nI was just about to drift off to sleep at the UDP house in the bed that Ralph's frat brother roommate had recently vacated because he was spending the summer in Fort Worth rather than Austin, when my phone rang. \n\nIt was Suzanne. My heart stopped beating for a second. \"Robbie, are you there?\"\n\n\"Yes.\"\n\n\"I'm still in San Antonio. Mike is still awake. It' a miracle. They said there was less than a 1% chance he would ever wake up. His parents were just about to let them turn off the machines.\"\n\nI knew I should say something encouraging, but I just couldn't do it.\n\n\"They are running some tests on him now. They say he will be in rehab for months before he can walk again. But it's a miracle that he even has a chance!\"\n\nI gulped. \"So, what happens now?\"\n\n\"They do 30 days of rehab here in the hospital, do an evaluation, and then send him to Warm Springs or someplace like that for long term rehab.\" She missed my meaning, I guess.\n\nI tried again. \"So, what are you going to do?\" \n\n\"I am going to stay here today and tomorrow. Mike's parents went home to pack up some clothes and stuff for him. I'll stay with him tonight while they are gone, and then tomorrow until they get back.\"\n\nAll her focus was on Mike. Her relationship with me was not mentioned. I guess that told me something. I guess Lara was right about things were going to work. \n\nShow her you are thinking about her, Robbie. \"So, what about your dissertation?\"\n\nShe sighed. \"Luckily I can do some work on things here. Mike mostly sleeps right now. I will have to hustle when I get back to Austin.\"\n\nWell, at least she was coming back. What would happen when she did?\n\n+++++++++++++++++++\n\nDwight was finished packing up his apartment and office in San Mateo. It seemed like he had just moved in, and he was already moving out. Things felt very different, though. His marketing director lunch buddy MJ had submitted her letter of resignation, and was looking for another job. \n\nEven though the product turned out to cost much more than forecast, 3 to 10 times the CEO's original estimates, he insisted that was good enough to win in the market. The CEO directed the celebrity Marketing VP to do his job and sell the product and make the sales and profits happen. Since shit flows downhill, the VP had ordered MJ to change her market requirements pitch to assure everyone that the costly product would still sell, and still generate big margins. She told him it just wasn't true, and she wouldn't put her name on a ridiculous forecast like that. He knew he would have to find some other marketing sucker to write that document if he was going to continue to collect his inflated salary, so he fired her on the spot. \n\nThe CEO was overheard yelling at the VP that \"his job was to sell, so bribe people or sleep with them or whatever you idiots are supposed to do to sell my product! My design is perfect, so fucking sell it!\"\n\nMJ said the whole thing would soon collapse. The next financing, which was needed in six months or less, would be a massive down round, or they would have to find a rich but clueless Asian conglomerate to invest at an inflated valuation. But unless a way was found to reduce costs, the end was inevitable. \n\nDwight was glad he was leaving. This afternoon in fact. He went to SFO early, went through security, and settled into the Admiral's Club.\n\nA red text popped in, from HQ, from woman who was Roger Sherman's boss's boss. Someone Dwight had never talked to. He had seen her in the hall once. She was a very high-ranking field ops manager, and everything she did was compartmented and very hush hush, even within the agency. He was directed to call her immediately.\n\nShe answered her own phone. \"Your sequence is 'sierra', 'alpha', 'zulu', and wave-off 'echo'. Where are you?\"\n\nDwight looked at the front of his phone, noting the GMT date and time. He decoded her phonetics in his head. It authenticated. \"SFO. Admiral's club.\"\n\n\"Turn in your ticket. Go over to Signature Flight Support on the North access road. Ask for Ken. Tell him you need to meet with Smith and Jones. Smith is the pilot. Jones will brief you en route.\"\n\nDwight's heart rate doubled. She had invoked his primary activation sequence, and she now owned him and every minute of his time until she released him. He couldn't even contact Carmencita to update her. \n\nSomething big was up.\n\n+++++++++++++++++++\n\nI lay in bed and stared at the frat house ceiling, dinged and scarred with all sorts of marks from who knows what bouncing off it. I felt cold, despite all the recent heat generated by Mei Ling. \n\nI was scared, and scarred too, I guess, from Suzanne bouncing off me and back to Mike. Should I just pile in the car and retreat to Prosperous tomorrow morning? I could avoid Suzanne entirely.\n\nBut that meant I would also avoid Nora and Lara. No way. I had to get on top of Lara right away and ride her hard. That would make me feel better. I also needed to plug back into Nora and feel that bond. It would make me feel much better.\n\nI'm not sure how long I lay there, but Ralph woke me up. \"I'm making a run to Torchy's for breakfast tacos\" The UDP kitchen staff had a few days off until summer session classes started. \"What can I get you?\"\n\nI needed some heat. \"A Crossroads with extra jalapeno, and a Trailer Park, trashy, with four containers of the hottest salsa they have today!\" \n\nI had slept in the clothes I put on at the condo last night. No worries. A quick brush through my hair and I was ready to rock. Life is currently simple, and simple is good.\n\nI went down to the dining hall. Most folks were sleeping in, or not there at all. Ralph was up early to report to his summer job as an RA in a supercomputer lab, working on something called the \"P versus NP problem\", and I had no clue what that was, other than Ralph's blah blah about 'soluble' versus insoluble' (I thought that was chemistry) and something about deterministic versus non-deterministic polynomials. At least I knew what a polynomial was.\n\nThe tacos hit the spot, and they had that super-hot red green mixed salsa with the seeds in it, too. I finished off with a Snickers bar from the frat freezer to make sure my Suzie talents would be tuned up enough to top Lara in style. I was feeling pretty good.\n\nThen Suzanne called. \n\n\"Hi, Robbie. Mike just went to sleep and his parents won't get back for a few hours, so I thought we could talk.\"\n\nI wasn't sure I could. \n\n\"I guess we have a situation here, don't we?\" she began. I never knew how much I hated that phrase until now.\n\nShe gulped. \"You know I love you, but...\"\n\nI knew it. I just fucking knew it.\n\n\"... but I can't leave Mike now. The first thing he did when he woke up was ask for me.\"\n\nShut up, Robbie. She just needs to talk about it, even though the last thing you need is to hear it.\n\n\"So, now you look prescient. You told me from the start that if Mike woke up you would understand, and I love you for it, even more now.\"\n\nGreat. Just fucking great.\n\n\"Let's talk more when I get back to Austin. I texted Lara and Nora, so they know the situation. Have to go now.\"\n\nA deal is a fucking deal, right? Only this is no joke, and this time I am the fuckee, not the fuckor. I realize my leg is shaking, and I am fidgeting with my hands the way Ralph used to do in middle school. I guess I am regressing. \n\nI finished packing up all my stuff, and put everything in the trunk of my car except my overnight bag and two changes of clothes, which I put it the little well behind the Recaros in front. \n\nI got the email from Abelard Peters' office with my e-ticket and employment agreement, and instructions on where to report for work and to the company provided quarters 10 days hence. \n\nI had completed a negotiation with my mother and had agreed to spend at least 5 of those days at home in Prosperous as a dutiful son, now with one year of college under my belt. I didn't realize until now that my getting into ESU, and the engineering school to boot, was a status symbol for my junior college professor mother. So, I had to go around with her for a day or two so she could proudly introduce me as such to her circle of friends and acquaintances. At least I wasn't spending the summer working for Warren Buffet (at Dairy Queen) like one of my high school buddies, now an ESU dropout, was. \n\nI was scheduled to have dinner tonight with Nora and Lara, at Lara's apartment, where the two of them were currently having their own cooking party, and I suspected a little pussy party, too, while their culinary creations rose, marinated, stewed, and/or baked. I was ready to taste anything and everything they had to offer. \n\nNora was leaving Austin on the same day I was. She was going to Bermuda for a week with her folks, then back to Boston to find a place to live, then London until mid-August when she would return to the Boston area and remain in Cambridge for two years of student life at HBS. \n\nLara would go into intense summer school mode, taking three regular classes to finish her revised degree plan and three online courses to satisfy pre-requisites for her Wharton/Penn gig. \n\nI would have to display supreme confidence to them both, in order to stay on top of Lara, and stay connected to Nora. Suzanne may have told them more about her situation and plans than she told me, so I would have to keep my ear to the ground for the next few days. \n\n+++++++++++++++++++\n\nLara put down her cell phone, and looked at Nora. \"Mei Ling says it was a magic carpet ride!\"\n\nNora smiled. \"That's all? No details?\"\n\nLara continued. \"Robbie was the perfect Not a Gentleman, and so were the other guys.\" She smiled. Robbie was still a top. Her top. Nora smiled too. If Robbie could weather the Suzanne storm, she could, too.\n\nSuzanne and Mei Ling had talked at length (nudge, nudge, wink, wink) about getting four men all to themselves. They were convinced that if they didn't try it they would regret it forever. Suzanne got all economist on it, talking about opportunity cost and probability distributions. Mei Ling said that was bullshit - sometimes the pussy just wants what the pussy wants. Mei Ling lamented that she would never get the chance that Suzanne had, with guys she knew were good guys she could trust. \n\nNo one expected Suzanne to get that call from Mike, but Mei Ling reacted instantly, with one perfunctory \"oh that's great news\" that transitioned immediately into \"since you won't be going to the condo...\" Suzanne told her to go for it. Cisco did too.\n\nNora and Lara had talked about it. Nora said it was exciting to think about, but she could never actually do it. She thought the other guys were nice, but she didn't trust them yet, and she had such a connection with Robbie that she just couldn't do it. Lara said it was exciting to think about. Too exciting. She was afraid she would crave the thrill too much. Like heroin. You knew it was terrible for you, but it was too hard to stop doing it just one more time. Asa had advised her to keep it a fantasy. Lara and Nora sometimes talked about it to get each other hot, but that was about as far as it was going to go. \n\nNevertheless, Nora was getting a lot of new sexual experiences in a short time in her last few weeks in Austin, and nowhere was the training more accelerated than when she was on the trapeze in Lara's apartment. Lara had assured her that the bolts that held the chains that held the trapeze were installed with a prodigious safety factor, so she didn't worry about it crashing to the floor, even when there were three people hanging on it and gyrating about. \n\nShe did worry about being driven insane by the intensity of the feelings that were often produced on that gilded trapeze. During one of her first times alone with Lara she had been tied, spanked, tickled, teased and tantalized for what seemed like days, until she screamed and cried in frustration. Lara had just smiled coldly and said, \"You may be ready now.\"\n\nLara had then pulled out a small modern Bluetooth remote-control vibrator and a big old vintage Panasonic \"Reach Easy\" model and proceeded to make Nora come at least twenty-five times. It bordered on torture. It also bordered on ecstasy. She didn't know she could come so many times and so many ways. She had been so exhausted that she could barely breathe, and Lara later told her that her synapses were probably too worn out to fire anymore. She was blubbering and bewildered by her own body and feelings.  \n\nThen Lara had taken her down from the trapeze and carried her like a baby to the bed. She cradled her and cuddled her, and told her she loved her. She cleaned her gently with a wash cloth, kissed her cheeks, stroked her hair, and told her how beautiful and wonderful she was. Nora felt an acceptance and a bond she still didn't fully understand, but she knew she could trust Lara with her life.\n\nShe had also learned how to treat Lara roughly, the way she needed it. Nora had to create and grow her own artificial reservoir of cruelty to love Lara properly. Lara could come from the pain, something Nora could not do. Nora wanted to make Lara beg for that ecstasy and then give it to her, but she could not bear damaging Lara's beautiful skin any more than necessary to get her off. She had studied Lara's considerable collection of BDSM books, and found on the web many of the references that Robbie had accidently shown her in the dining hall at Jester months ago. She was getting pretty good at it.\n\nBut this afternoon, while waiting for Robbie to arrive for dinner, Nora was the sub and Lara was the top. Lara had received a package from Japan with what she called \"some new and very edgy stuff.\" \n\nLara didn't open the box until Nora was completely trussed up and helpless on the trapeze, then she slowly and theatrically conducted an unveiling of her new toys. Nora was afraid it was a collection of acupuncture needles, or flaying tools, or worse. She supposed that was the plan, to let her speculate and get all worried about it. It was working.\n\nWhen Lara finally cut the plain brown wrapping paper and took the lid off the box, Nora couldn't tell what it was. There were some little silk straps in several colors, and what looked almost like a collection of guitar picks. Robbie had taken Nora dancing at the Broken Spoke once, and the steel guitar player in the band used an assortment of plastic and metal picks that attached to his fingers in several ways rather than just being held like regular guitar picks. The ones Lara had seemed longer and more ornate, some metal, some plastic, some wood. Some had straight tips, some blunt ends, and some had fanciful curved tips. Lara began to put them all into slots in a green lacquered holder with strange characters on it, seeming to put them in a definite sequence based on the characters. \n\nLara laughed evilly. \"Now I'm ready for you, my pretty!\" Nora felt a chill pass through her.\n\n+++++++++++++++++++\n\nDwight took a taxi from Terminal 2 to the FBO. He waited for a moment in very plain lobby, and was then led back through a door marked 'employees only', down a level, and out to a hangar. A guy in his 50's with a decidedly military bearing looked at his phone for an instant and then motioned for him to follow.\n\n\"I'm Smith. Let's walk across to the ER.\"\n\nDwight wondered if he would need a hospital. Then he saw the sleek looking and almost unmarked Gulfstream sitting off by itself in the corner of the hanger. There were three guys in suits and dark glasses stationed around it and looking about watchfully. Smith led him up the little air stairs and beckoned for him to go aft into the cabin, while Smith went forward and joined another very military looking guy in the cockpit. One of the guys in suits came into the cabin and pulled in the stairs, and a little tug towed the aircraft outside.\n\nIt was cold inside the aircraft. The cabin had a conference table arrangement on one side. A woman in her 50's with almost black eyes and a steely look beckoned for Dwight to join her at the table. She looked even more intimidating than she had when Dwight had passed her in the hallway almost a year ago. She had on a grey suit with a green blouse and some pearls. Dwight could just make out the outline of a pistol under her suit coat. The guy in the suit slid down the plastic covers on all the windows, and then took the seat farthest forward. \"I'm Jones.\" She said.\n\nDwight waited her out. He knew that wasn't her real name, but maybe the other guys didn't. Actually, the one he heard before may not have been her real name either. \n\n\"We had to divert you from your administrative tour for a special situation.\" \n\nDwight knew that was a euphemism for an assignment that was risky as hell, but important enough that someone had to try it. It also meant he was the best choice the agency could find, or he wouldn't be here. By this time, they had already taxied to the runway and begun their takeoff roll. ",
        "With all the windows screened Dwight couldn't see what direction they were climbing out. Based on his internal inertial navigation sense, they were turning North. \n\nShe handed him some printed manuals. \"Review that stuff while I get an update on our target, and then we'll talk about your mission goals.\"\n\nDwight was surprised to find operations and service manuals on a line of cardiac pacemakers, with some supplemental data on the encryption algorithms used for the monitoring and control links. This was a very new and expensive system that monitored and modulated the patient's heart in real time, and reported everything back to a medical database via the cloud. The next document was an internal manual on the technical operations of a big British telecom company. Another was an incredibly detailed map of a ritzy high-rise apartment building near Canary Wharf in London, and finally, a big agency report on the Russian embassy in London. \n\nDwight would need a long flight to absorb all this new stuff. Could this plane make it London direct from SFO?\n\n+++++++++++++++++++\n\nLara had used some Japanese phrase to describe the instruments she was now using on Nora. She said it meant something like 'little body dancers'. Nora at first thought of them as 'guitar picks', but then they became 'pussy picks' and then 'clit picks'! Lara was playing Nora's pussy like a steel guitar, but she would never get to the end of a song! Nora kept getting horny and hornier with no end in sight. It was somewhere between awful torture and delicious anticipation. It would be delicious if she finally got off, but it was torture until then. \n\nNora turned and strained on the trapeze, but she was so fully restrained it was only isometric exercise, which was frustrating in its own way. Lara would wrap a different color of silk thread around her hands, and switch to a different variety of pick attached to her fingers and then work on Nora again. They looked like little Kabuki dancers, and through her sensual fog, Nora had noticed a repetitive pattern to their application. Lara would circle her snatch again and again, getting closer and closer to her clit but never actually touching it. Nora had to force herself not to beg for it. The touches would get more and more forceful, bordering on painful, and then anther color thread and dancer would repeat the cycle. \n\nFinally, Lara dramatically donned two wide pink scarves, one on each wrist, and took out a set of the biggest and bluntest of the picks, which seemed to be bamboo painted with little plastic 'spoons' on the ends with pink designs that looked like high-end nail parlor art. She put three picks on each hand, and then she paused with them hovering over Nora's pussy, and said breathlessly, \"You may not come without permission!\"\n\nNora was encouraged that she was talking about coming at all! She was getting desperate to have her clit touched, and strongly and deliberately and smoothly rather than teased and pricked and worked around. All this flitting and fluttering was also giving her a burning desire for some penetration: hard and deep please! She supposed Robbie would supply that when he arrived. \n\nIn the back of her mind, she knew Lara was trying to distract them from the Suzanne issue. They all felt a painful hole in their lives, and she wasn't looking forward to getting it all out on the table, but she knew they had to do it. \n\nSuddenly the curled lacquer ends of the wooden picks began to brush her outer lips, teasing them open like an anthropologist gently brushing soil back from a potentially valuable find. They teased, but encouragingly progressed to moving them back further and further. Nora knew that her alabaster skin was red and inflamed looking, and had been for some time.\n\nLara moved on to her inner lips, which was even more encouraging. She treasured every touch, and felt them get engorged and heavy. Lara then began gently teasing just inside her pussy, using the curve of the little spoons to open and distend it slightly. She felt her wetness expand and flow. Just a little further inside! Just some pressure on her clit was what she needed. But then Lara laughed gently, and put the picks down! On no!\n\n\"Just hang loose there for a minute, my lovely. I have to go put a couple of our culinary creations in the oven, then I might drop back by!\"\n\nNora bucked in the clutches of the trapeze, but there was nothing else she could do. The air conditioning came on, and she could feel the gentle breeze on her damp pussy like a blue norther on the plains. Damn but she was worked up!\n\nShe heard Lara moving things about in the kitchen, and knew she would probably delay deliberately just to tease her. By the time she heard Lara's high heels tap tapping back across the floor, she was desperate. Lara sat down primly and patiently, put the finger dancers back on, and repeated the entire sequence again. Nora was insane by this time, frantic. \n\nLara laughed. \"My hands are getting a little tired, so I guess you may come now.\" Lara grabbed the bar of the trapeze and swung Nora towards her, and began to lick Nora's already dripping pussy gently. Nora came almost immediately like a string of firecrackers going off. It felt so good.\n\nBut Lara did not stop. Gentle turned to strong and she came again and again. Then suction was applied and Nora slipped into delirium. Waves of orgasm passed through her, but still Lara did not let up. She sealed her mouth to her pussy and sucked harder, and tongued her clit wildly. Nora rocked with another storm of orgasms. \n\nFinally, Lara seemed to be trying to suck her clit right off its little stalk, and she saw white lights and passed out. \n\nWhen she awoke Lara was holding her in the bed, and gently touching her hair. \"You winked out on me there Upman. I'll let you gather your strength at dinner, and then I'll help Robbie administer the coup de grace!\"\n\nNora smiled. Dessert was her favorite!\n\n+++++++++++++++++++\n\nMei Ling showed up at the UDP port a few days later, with some circular boxes wrapped with pink bows. Ralph, Husky and I were all there, but Cisco was too. I felt sheepish, but Cisco hung back and just watched her approach us, like he knew the plan.\n\nI noticed the boxes had a little logo that said \"Wolf's Houston\". Husky opened his box first, and he just about freaked. \"A Stetson silver belly, white 100X felt!\" I didn't know that much about western hats, but from his tone I inferred it was a good one. He slipped it on. \"Perfect fit, too!\" He smiled contently.\n\nMei Ling smiled impishly. \"You boys were a perfect fit for me! I got your hat sizes from the frat pres. Everyone knows the good guys wear white hats.\"\n\nI looked at mine at noticed a burnt orange outside cloth band with a silver and gold Longhorn ornament. Very cool.\n\nRalph tried his on, and it looked weird on him.\n\nI looked inside mine and noticed something amazing. It had a custom liner. A very special one. It was a combination of white silk, red halter top, and black leather hot pants material. Wow. Instant hard on. One of my girlfriend hall of fame moments memorialized in top shelf custom hat. I remembered Mei Ling had put a lot of effort into the little party favor dolls to commemorate Veronica Tappert's prank rodeo, but she had really outdone herself on this one. I slipped my new hat on and smiled at her. \n\n\"Oh, Robbie, you look good in that hat! Some guys don't but you do.\" \n\nShe held up one more hat box. \"Well, I've got to drop by ZZZ for a moment.\" She leaned around us and waved to Cisco. \"See you at 9, my love!\" And she was back out the door.\n\nI couldn't help but take off the hat and sniff the lining. Yep. Very authentic. Sprong!\n\n+++++++++++++++++++\n\nDwight's internal clock said he had been reading for almost three hours, but he had gotten through a first pass at everything. It seemed to him that the pacemaker was very sophisticated medically, and it had plenty of fallbacks and failure mode workarounds, but it's encryption protocols were elementary. Like UAVs ten years ago. And it had been further compromised so it could work with lots of different telephone system protocols. \n\nHe got up and did his little stretching routine, which reminded him of Suzanne Pliskin, which had a predictable but embarrassing effect, given his current work environment. \n\nHis taskmaster \"Jones\" laughed. She was in her fifties but looked to be in excellent condition, and she was staring unabashedly at Dwight's obvious bulge. \"It's good to see a man who so obviously enjoys his work!\" PC she was not.\n\nDwight blushed. He had been away from Carmencita for too long, and he was on edge as a result.\n\nHe said nothing, and his new temporary boss continued. \"What do you think your mission is?\"\n\nDwight made some quick inferences based on what he just read and his own skill set. He was one of the most skilled hackers in the agency and was also trained to kill and disappear, although he was nowhere near the top ten in that specialty. There were lots of more skilled assassins, but none with his technical chops, nor his acting and disguise skills, nor his breadth of training and experience. \"Give someone a heart attack over the British phone system, and make it look like it was the Russians?\"\n\nShe smiled again. \"Not a bad guess, but let's wait until we pick up your shooters to brief you further.\"\n\nShe slid open the two window covers nearest her, and Dwight saw that they were descending. Lots of green trees, and a clearing of reddish brown soil in the distance. The aircraft turned on a downwind leg and Dwight spotted a paved runway with no painted direction numerals. There were huge staging areas around the runway, and about a dozen grey Air Force C-130's, the new \"J\" version? Pope Field?\n\nThey landed and taxied to a plain building on a ramp on the side of the runway opposite all the C-130's and near the control tower. Two young and fit guys in street clothes carrying two big duffel bags each came out of the building and boarded the aircraft, which had only remained stationary for about two minutes' total. \n\nThey stowed their gear in balanced fashion, half in the rear and half in the front of the aircraft, and secured to little pop up tie downs in the floor and cabin walls. \n\nMs. Jones gestured for them to take a seat at the conference table. By the time they sat down, the aircraft was rolling out again. \"I'm Miss Jones, your briefer.\" \n\nShe pointed at Dwight. \"This is Ben Franklin, your team leader.\" Dwight tried to look competent. \"You two are here because you grew up in London and have cross trained with SOG. I will lay out the parameters of the mission, and you three will plan it and carry it out.\" \n\nShe gave them each a little zippered notebook. \"This is everything you need to take with you.\"\n\nShe spent ten minutes going over their target, and why he needed to have a severe heart attack, but not die. How it had to be traced to the Russians eventually, but at first look like an accident, and then look like someone else had arranged it. Then she told them why. \n\nDwight almost wished she hadn't. He was a naturally curious type, but this was a \"need to know\" list he would rather not be on. Then he realized the most likely reason he had been chosen: it must be list he was already on. \n\n+++++++++++++++++++\n\nI knocked at the door to Lara's apartment, like I had dozens of times before, but it felt different. Suzanne would not be there, at least in person. \n\nLara opened the door in her 'hot Texan' outfit - skin tight jeans with a sheer but starched white cotton \"Ritter Shirt\" with shiny burnt orange snaps. Nora was just emerging from the bedroom, still drying her hair and wearing only purple panties and a thin grey tee shirt. They both looked wonderful. I enjoyed their subtle aromas for a few seconds, then I smelled dinner cooking, and my mood improved even more. Two hugs and kisses made me feel even better.\n\n\"We're having a bit of a cooking contest tonight, Robbie.\" Lara began. \"I'm making traditional Southwestern and Tex-Mex courses, and Nora is alternating with some fancy French cuisine.\"\n\n\"I'm sure I will love them all.\"\n\nWe sat at the little kitchen table. Nora served us each a small plate with two bite size appetizers: one a little puff pastry, surrounding a center made up of several kinds of mushrooms and cheese; the other was a big mushroom cap stuffed with onions, more cheeses, and some other crunchy stuff I couldn't identify. They both melted in my mouth. Lara made appreciative noises. Nora smiled.\n\nLara must have made note of my devotion to cabrito, because she then served us some fat little tortas: miniature puffy taco sandwiches with cabrito, a vinegar and lime based habanero avocado pico, queso blanco, and some chopped cilantro. They were perfect.\n\nNora countered with incredible onion soup, which Lara followed with little mini queso flameada, with hot fresh tortillas and sliced pickled jalapenos on the side.\n\nA glass of Perrier water cleared our pallets a bit, and then the main courses were served.\n\nNora served tender coq au vin with green beans almandine. It was fantastic.\n\nLara outdid herself with grilled Red Snapper Encarcelado stuffed with a sweeter but still hot habanero pico, plus tomatillos, jicama, and little baby shrimp. Unbelievable. \n\nBut desserts were their favorite, and they rocked it. Nora served what she called Rhubarb Clafouti, which somehow combined a pan cake, a custard, and a sweet omelet, which was laced with tart rhubarb and dusted with powdered sugar. I could almost feel my Suzie signal powers morph and expand as I chewed.\n\nLara groaned in pleasure. \"Nora has produced the perfect dessert!\" She then gave Nora a very hot look. \"I think she may also be the perfect dessert for this evening.\" Nora blushed hotly, and I felt her Suzie signal reach out and grab my brain. \n\nLara then took the cover off her little fryer and produced piping hot little churros, dusted with cinnamon and drizzled with dark chocolate sauce. They topped off my glucose tank, and put me in an altered state. \n\nPerhaps it was a mix of the rich food, exotic spices, the sugar hit, and the company, but I felt like I had opened and whole new chapter in my \"Book of Suzie Signals\". It had now been almost a full year since my 18th birthday, and my Dad's advice that I would get better at reading the signals as I spent time with more women had certainly been correct. I was not being immodest to say that I had spent some time with some incredible women, in incredible ways, over the last year. Not the least of which were here with me tonight, but with perhaps the most incredible one sorely missing.\n\nLara's comment about Nora caused me to reach out the read her Suzie. It told an amazing story.\n\nNora was craving penetration, from me and only me! That was a welcome contrast to my most recent experience with Mei Ling. I also realized, in one of those Eureka moments, that I could never consider setting up a scene for Nora or Lara the way I had for Suzanne. The very thought of anyone else's sperm getting anywhere near Nora's eggs was an existential threat. I simply could not allow it to happen. My subconscious did not trust any methods of birth control, except perhaps the prophylactic beheading of any prospective sperm supplier other than me. I realized that such a threat scenario could produce a Suzie blast many times more powerful than my almost unconscious interruption of G\u00fcnter's chance at Suzanne, or my stunning of ponytail boy in the British airplane with Elizabeth. \n\nWas that because my ability to generate a blast was getting stronger, or that my feelings for Nora were so much stronger? And what about Lara? That felt different. Lara was mine, and I wasn't about to let any other guys anywhere near her, but it was determination and motivation, not a spinal imperative the way it was with Nora. What did that mean?\n\nI locked into Nora, and felt her love and desire for me directly. I felt Lara's devotion to her too, as some kind of harmonizing Suzie signal. These two were my world, and they were welcome to it.\n\n+++++++++++++++++++\n\nDwight needn't have worried about making a hop all the way to London, because after they took off from North Carolina, they traveled only a little more than an hour, then landed at someplace else he recognized: the little airstrip south of Fort Meade. One not so fit looking young guy with a backpack, and a very fit looking woman with a Pelican case came out of the nearby hangar and boarded, while the line truck topped of the plane with Jet A. \n\nSoon they were in the air again. Jones briefed the new arrivals, who were apparently the techie complement to the two shooters. But they were not privy to the information from the first briefing. Basically, there were to do whatever Dwight, who they knew as \"Ben Franklin\" told them to do, without question or hesitation. And of course, later, it never happened and none of them were ever there. Dwight gave them the pacemaker manuals and telephone stuff to study, and then went to sleep. His body was still on California time, and if London was the destination, he could use a little nap on the way. \n\nIf he could sleep, because some worrying questions occurred to him. He could do the hack himself, so why the extra techies? And why did they need the shooters at all? What were they not telling him?\n\n+++++++++++++++++++\n\nLara was incredible that night. Apparently, she had been tuning up Nora all day, prepping her for my entrance, so to speak. She was excited about being in control of that process, and joyously sympathetic to the fucking she expected Nora to get. As was our tradition, I cleared all the dishes and loaded the dishwasher, and cleaned up all the surfaces in the kitchen. \n\nBy the time I got back to the living room, Lara was doing a phase two tune-up on Nora - kissing her shoulders and gently brushing her breasts, while whispering in her ear. Both of their Suzie signals trilled and harmonized, and burned their hypnotic patterns into my brain. \n\nLara was seated behind Nora on the couch, cuddling and caressing her. I kneeled on the carpet just in front of them and took in the show. Lara began kissing Nora's neck and slowly pulling off her tee shirt, while dramatically 'rittering' her own white Ritter shirt one shiny burnt orange button at a time. Soon Lara's hands were dipping into the front of Nora's panties, and each motion sent a little Suzie crescendo my way. Music to my, er, receiver!\n\nLara whispered in Nora's ear again, and Nora lifted her hips, allowing Lara to slip off those now pungent purple panties. The sight of Nora's platinum bush triggered an avalanche in both my brains. The brain between my legs exhibited its favorite choice from a very limited set of behaviors, and I got hard.\n\nMy limbic system went into overdrive, trying to absorb all the messages from my Suzie array. Nora missed me. Lara missed me. Hooray! Nora wanted me inside her. Lara wanted me inside Nora. Lara wanted me inside Lara. Life is good. Nora had no egg in place ready to be fertilized. Practically speaking, that was good, right? Why did it make me sad? Not just a little regretful, but profoundly sorrowful.\n\nLara hooked her right arm under Nora's left knee and spread her legs apart, and used her legs to push Nora's pelvis forward. She hooked the other leg the same way and lewdly displayed Nora's platinum pubes very effectively. For the first time, I was sure she felt my emotions through our Suzie connection. Her face showed shock and surprise. She now knew for sure that I really wanted to get her pregnant. She was truly embarrassed that there was no egg in place! She felt she had failed me, and had not done her duty. If that's not excessively heteronormative, I don't know what is! \n\nI sent her a blast message. I love you, and I'll knock you up as soon as it's practical. What the heck? Where did that come from?",
        "She broke down in tears, surprising Lara for a moment. But Lara then reached around with both hands and spread Nora's pussy lips apart, massaging them gently. I could sense Nora's blood flowing to engorge and enlarge them in concert with her Suzie notes. Her perfect alabaster skin developed what looked like a sunburn, but only on her 'lady parts.' The red skin drew me in like a monkey to fruit. \n\nI entered her as swiftly and deeply as I could, and suddenly all was right with the world. Ying and Yang were balanced, and we sang each other the music of the spheres.\n\nI kissed her right shoulder and neck, and Lara kissed the left. We three melted together. Nora's brain connected to mine like a giant electrical cable. It was almost like I was fucking myself. My motions matched her desires perfectly. We were pelvis to pelvis and moving together in a perfect mirror image. Suddenly Lara was in the meld, too. She rubbed her mons against one of Nora's buttocks, stimulating herself.\n\nIt was slow motion perfection. I didn't want it to end. But some part of my autonomic nervous system did. My thrusts increased in frequency, and I felt the buzz begin to build. Nora came, drawing in a racking sob of a breath. \n\nSuddenly she switched places, urging me into Lara. Perfect fit. Our connection grew to include Lara, like the two of us were fucking her together. \n\nMy buzz was still on the build. Nora, knowing that Lara liked it a little rough, began to pinch her nipples, and Lara came, crying out and grabbing at us both. That triggered me, and I drove into Lara with everything I had. Suddenly I knew there was no egg ready there either. The sense of despair almost terminated by buzzing orgasm. What was happening to me?\n\nSuddenly all conscious thought was blasted from my brain. I came in such a wild wave that I passed out.\n\nWhen I awoke, the girls had moved me to the bed. I was lying naked on my back between them, and they were both playing with my nipples. I considered for a moment that I might have died and gone to heaven, but finally decided it was real. A state I could achieve. Something I had to achieve again and again.\n\nWe slept soundly until the sunlight began to intrude through the bedroom window. I was feeling great. A new day, a new dawn. \n\nThen Nora spoke. \"Before we get up, we have to talk about Suzanne.\"\n\nSuddenly, I was not feeling so great. Life sucks and then you die, etc. I couldn't think of anything I wanted to say.\n\nNora could. \"Let's try to be dispassionate and analytical. There's really nothing we can do but wait and see what happens, is there?\"\n\nLara laughed. \"If there was ever someone that you can't analyze that way, it's Suzanne!\"\n\nNora begged to differ. \"She has a very logical mind, as demonstrated by her grasp of economics. And she certainly has a sense of loyalty and judgement, as demonstrated by her feelings of duty to Mike!\"\n\nLara looked serious. \"But isn't the she also the same woman who told us all, at the addicted to Austin party, that sometimes the pussy just wants what the pussy wants?\"\n\nYep. Unfortunately, her pussy just doesn't want me anymore. I think I'll keep that to myself.\n\nLara went on. \"It's going to take Mike several months before he can even walk, right? So how long can Suzanne shut down that perfect pussy?\" \n\nLeave it to Lara to get right down to it.\n\nNora looked shocked, and sounded defensive. \"She did nothing for two years, until she met Robbie!\"\n\nLara laughed. \"And she was practically bat shit crazy until she got laid! What's the over and under on how long she can hold out now? 90 days?\"\n\nThat was the under, at least for me. I would be working the Chunnel for that long. \n\nNora looked confused. \"Maybe she will want a booty call with just us girls?\"\n\nI hadn't thought of that. Would that meet Suzanne's twisted sense of loyalty? It's not betraying Mike to fuck my girlfriends, but it would be to be with me? Would Lara and Suzanne be betraying me if they took care of Suzanne's needs? Wait a minute! Nora wouldn't be here; she was leaving when I did. But Lara would be in Austin, at least for the summer.\n\nLara looked funny. \"I'm not gonna do her if she deserts Robbie. I know Mike was first, and I agree he gets to keep his starting job, and Robbie just has tough that out and live with it, but I won't betray Robbie with her. If she's not doing Robbie, I'm not gonna do her!\"\n\nI felt good and bad at the same time. I suppose I would have to get used to that. \n\nBut then I remembered that I had offered Suzanne to continue to do her even after she went back to Mike, if she wanted, no questions asked, and it was up to her. Could I do it? Would I die afterward? How would that make Lara or Nora feel it I did? I guess I had at least 3 months to worry about it. I would always love Suzanne, I guess, but could I stand the pain of seeing her and then losing her all over again?\n\n+++++++++++++++++++\n\nMy mom had a sequence of events all set up for my time in Prosperous. It made me feel like I was back in my junior year in high school, touring my list of close to home backup schools in case I didn't get admitted to ESU. She had professor friends at Easy Field in Mesquite, UT Arlington, UT Dallas and U Dallas. SMU was on my list, because my Dad said if you can pay the tuition, they will let you in, but she didn't want to visit anyone there, nor TCU in Cowtown, nor UNT in Denton. Thanks for small favors. \n\nAt least she let me drive her to all these visits in my car, but I was a captive audience for her attempts to find out what my future plans were with regards to Nora, Lara and Suzanne. I did not want to talk about Suzanne. I told her about Lara and Nora and where they were going, and she was overjoyed. I did not want to tell her about Nora's plan to get me into HBS. She would consider that the Holy Grail and insist I sit for a CPA and become a management consultant. I love ya' mom, but not that much. I did have to listen to her solicit career advice for me from all her friends, though. I smiled a lot. They may have thought me daft.\n\nAfter making the required rounds with my mother, I went to visit Big Un, who was now finished with his Associates Degree, and firmly ensconced as the manager of one of Alley's dad's pawnshops. He was showing the best profit margin of any store, and the other store managers hated him. He was excited about his prospects there. \n\nI couldn't get excited about anything. My dad sent me some articles from the business magazines he read about problems with Chunnel security on both ends, smuggling, labor unrest, potential terror attacks, and the effect of Brexit on operations. He made sure to keep them away from my mother, but he advised that I keep my head on a swivel and not go anywhere alone. I told him about my Moroccan TA warning me away from Calais. \n\nI passed the time in a fog until I boarded the plane for England. It was foggy when I got there, too."
    ],
    "authorname": "conanthe",
    "tags": [
        "bdsm",
        "longhorn",
        "gang bang",
        "austin",
        "fraternity",
        "chunnel",
        "sorority",
        "oral",
        "texas",
        "kabuki"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-36"
}