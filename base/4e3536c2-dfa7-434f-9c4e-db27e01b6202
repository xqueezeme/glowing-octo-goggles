{
    "title": "Cat Fight Ch. 28: Return of the King",
    "pages": [
        "Terms\n\ntinton - 2 1/2 seconds\n\nspecton - 2 1/2 minutes\n\nToton - 2 1/2 hours\n\nminton - 2 1/2 days\n\ndaycon - 2 1/2 weeks\n\nMalant - 2 1/2 months\n\nquant - 2 1/2 years\n\ngalant - 2 1/2 centuries\n\nMetson - 2 1/2 inches\n\nmaclon - 2 1/2 feet\n\nheckson - 2 1/2 miles\n\ntetson - 2 1/2 acres\n\nunit - 2 1/2 ccs\n\nTac - 2 1/2 pounds\n\nMayan Terms\n\np'uchik - spank\n\nnohchil - Chief\n\nAhau - King\n\nk'aat - Claim\n\nk'iimil - Death\n\ntaak'in - gold\n\nCharacters\n\nBill Axor (AKA Ambrose) - Lion clan, Cit-Chac-Coh\n\nKing Tomco Traxor - Bill's dead father, Lion clan\n\nKing Tobias Traxor - Bill's dead brother, Lion clan\n\nQueen Trianna Axor - Bill's dead mother, Lion clan of Mandria\n\nQueen Niaco Traxor - Tiger clan, Tobias mate, now Bill's\n\nTwitty Glax - Grey Tabby clan, bill's body guard and mate\n\nGlenna Nox - Bengal clan, Bill's body guard and mate\n\nMikos Glac - Chartreux clan\n\nSkylos - Captain of Xendran star fleet - Wire hair clan\n\nHenna Glac - Chartreux clan, Mikos mate, Xendran Doctor\n\nTheta Panadon - Cheetah clan\n\nCornelius Glax - one of Bill's Uncles, Grey Tabby clan\n\nConrad Nox - Bill's other Uncle Bengal clan\n\nAssassin group - Jaguar clan\n\nsecond assassin group - Ocicat clan\n\nTypree Maxor - Sub King of Mandria, Lion clan\n\nAdina Maxor - Paladin Princess of Xendra, Sub-princess of Mandria, Lion clan\n\nTimora - The great mother of the feline people, mate of first tribal leader\n\nHippacamp - Timora's father, father of modern Xendran doctors\n\nKindra - The Female half of the start of Ambrose's line\n\nKnights\n\nGeneral Roth - Leopard clan\n\nGregor - Cougar clan\n\nGwayne - Panther clan\n\nThomas - Lynx clan\n\nPaladins - Female Knights\n\nWrena - Leopard clan, Roth's mate\n\nCetana - Cougar clan, Gregor's mate\n\nDawney - Panther clan, Gwayne's mate\n\nMileen - Lynx clan, Thomas's mate\n\n----------------------------------------------------------------------------------------------------------------\n\nTen pairs of familiar eyes were staring at Ambrose after his declaration. \"By the great feline, \"Twitty whispered her eyes wide her whiskers twitching. \"Without her not only would the royal line vanished, I also think that not many would have survived!\"\n\nThe other nine were staring at her when Glenna's paw also went to her mouth. \"By the twelve worlds! She's one of the most important people of ancient legend. It has been often said that she actually met the great feline!\" Turning toward Ambrose a toothy smile lit up her face as her tail twitched. \"It appears that the legend was true.\n\nAmbrose groaned as he looked at the smirk of satisfaction on both Glenna and Twitty's faces. Throwing his paws up he shook his head walking away, no point in arguing. They would be at it for a long time plus the fact he felt he'd lose no matter his argument.\n\nLooking at his knights he saw all of them smile as they nodded. Leaning over Roth whispered, \"You are indeed far more wise than I sire. I wouldn't have been able to resist the ensuing argument.\" He then looked over to his mate Wrena. \"Then again I always relish a fight with her.\"\n\nAmbrose shook his head in disbelief, \"At times I find all eight of you a complete mystery.\"\n\nRoth was nodding as were the other three knights. \"We are really no mystery sire,\" Thomas spoke up his arm now healed. \"We are your loyal servants willing to die defending you.\" Then Thomas's brow furrowed. \"Sorry sire the female mind, by the great feline! You're right sire! There is nothing there but mystery.\"\n\nThe other three knights and Ambrose started to chuckle at Thomas's realization just before Mileen walked to Thomas. \"What seems to have all of you so happy?\" She asked which promptly quieted all of them. \"Ah I see discussing us are you?\" She said indicating the other females. Here she gave Thomas a scathing look causing him to cringe a bit. Then a bright smile lit up her face.\n\nLeaning over Thomas whispered in her ear causing her mouth to drop open then she was nodding.\n\nAs soon as she walked to the others Ambrose started to discuss with his knights what they would do after they landed.\n\nIt was a mere twenty one spectons later when all three ships touched down on Xendra. As all three ships dispersed their cargo Ambrose breathed a sigh of relief. Finally things felt more like they should, almost. Shaking his head Ambrose started thinking they would never get things right.\n\nFor a week Ambrose and the others showed all there everything that they knew in order to help them survive. Though things were almost completely as they felt they should be, something was nudging Ambrose at the back of his mind. What in the hell had he forgotten now?\n\nGoing through everything they had shown, the many things that the now Xendran people were doing Ambrose was at a loss. They had all they needed didn't they? Shelter, understanding of the land especially the food they needed. What was missing? He had been standing there for almost a whole toton not noticing a young girl walk to him then sit waiting to talk to him.\n\nSighing Ambrose shook his head at a loss when he noticed Kindra sitting nearby. \"Hello Mister Kitty. I was told not to bother you unless it is important. I missed talking to you though many told me you are a god. Does it hurt? Being a god I mean?\" She asked innocently.\n\nA huge smile lit up Ambrose's face as he knelt down to lift Kindra off the ground. Laughing she threw her now cat paws and arms around his neck kissing his cheek.\n\n\"No my dear Kindra,\" he said causing her eyes to grow wide. \"It is only lonely. When no one thinks of a god they can grow sad. It is a sad thing when no one remembers what that god did for its people it...\" Ambrose stopped suddenly realizing almost exactly what was missing. They were safe, they had all they needed even a sense of hope. That was it, they had not much else to go on. No belief in what he and the others had about Xendra.\n\nKindra was staring at Ambrose him having stopped amid sentence. \"Mister Kitty god? Are you alright?\"\n\nAmbrose suddenly looked at Kindra then started to laugh. Holding her close he kissed her cheek, \"I am now Kindra much, much better! What do you say that we go talk to everyone? I have a feeling they are waiting to hear from me, what do you think?\"\n\nKindra's eyes went large then she nodded. \"That would be good they are lonely for you also I think.\" Kindra said with a little giggle as Ambrose kissed her cheek again.\n\nAmbrose walked back to where all his Knights, Paladins, and his two mates were. After discussing it with them they all readily agreed with his idea. Ambrose let Hippacamp and Timora know what he was going to do. They also agreed and spread the word as quickly as possible.\n\nNodding to Skylos as soon as he was ready, Skylos adjusted a machine then nodded. Ambrose stepped forward taking a deep breath.\n\n\"Good people of the old city of Tikal.\" Ambrose started nodding his approval as his voice could be heard by all. \"For a long time I denied that I was a god to you. That stops as of today we have to leave soon to return. Always remember that I and we are with you always.\" Even as he spoke Ambrose could feel the tension he'd felt before start to ease.\n\n\"Though I cannot be here as I am now in the coming times, remember, I am with you in all other ways. I wish for you to always continue and prosper. Always watch out for your kin as I hope this will become a place beauty and justice. I will return again one day always remember that I love all of you. Be well the people of Xendra, live well.\"\n\nA huge cheer went up from the multitude there that continued for quite a while. They were still cheering when Skylos suddenly looked up from a piece of equipment then ran for Ambrose whispering in his ear.\n\nAmbrose's eyes went wide then he nodded whispering to Kindra. Kindra's eyes went wide then she hugged Ambrose tighter as she started to cry. Ambrose handed her to her mother whispering to her then Hippacamp and Timora. All three nodded sadly then moved back as Ambrose and his people moved to the three ships.\n\nAs the ships lifted off the people on the ground grew quiet. Hippacamp and Timora spread the word that the god and his helpers had to return.\n\nAs they rapidly made orbit Skylos had a look of concern on his face. Finally free of the planet's gravity the three ships were suddenly buffeted roughly.\n\n\"Stay as close to us as you can.\" Skylos was telling the other two ships. \"Sire are you feel...\" Skylos started as he saw that Ambrose was almost pale.\n\n\"Damn it cousin!\" They all heard Adina shouting. \"Don't let it over take you. You have to fight it this time!\"\n\n\"NO!\" Ambrose shouted. \"If I fight it WILL kill me I have to embrace it again. The power is growing again, not sure I have much of a choice this time like last.\"\n\nAdina was hurrying toward Ambrose when the ship lurched to the side. \"I'm reading a massive build up of the same energy that we encountered the first time.\" Skylos was shouting above the strain of the engines.\n\nAmbrose felt the beginnings of the sickening weakness that he'd experienced before. Reaching out he tried to grasp the icy cold energy that he was feeling. Pulling it to him he could see another spinning energy tunnel open outside the view screen. Skylos was shouting more though Ambrose couldn't hear a thing.\n\nAdina picked herself off the deck trying to edge her way to Ambrose as the deck began to pitch to and fro. [Cousin!] Ambrose heard in his head. [Please don't try to use it all. Like before only half!] Adina's thoughts came to him.\n\n[I don't have much choice as to how much I use. I just hope that the fact I have used it three times now will prepare me more for this.] Replied Ambrose's thoughts.\n\nWith a huge lunge and shake all three of the ships entered the swirling energy tunnel. Ambrose smiled as he felt the drain on his body not nearly as bad as before though it was bad enough. As the ships accelerated Ambrose could feel the years slipping away before them. It was in that moment that Ambrose realized that he still had no way of turning this off!\n\nAdina was still struggling to reach Ambrose when the ship lurched a final time. Propelled straight toward Ambrose she wrapped her arms around him in a near death grip. Feeling her arms lock around him again Ambrose smiled. He'd have to thank her again when she woke up; already he could see the massive energy as it encompassed her then him.\n\n[Like last time I have to save you my lo... king] Came her thoughts as her body started to shake and convulse. Her mouth opened to scream though nothing came out. Finally she forced herself to look at him as she smiled promptly passing out.\n\nAmbrose was fighting to stay awake as he felt the power start to recede then fade. A moment later he thought he heard Skylos yell that they were coming out of it. His legs shaking Ambrose fought harder to stay on his paws. Growling he found that he was losing the battle quicker than he thought he would.\n\nEven as he felt his body start to waver he felt several strong arms lower him and Adina to the deck. Sighing he saw that all four of his Knights were around him trying to pry Adina's paws from around him.\n\n\"Forget it,\" he heard Roth's voice state. \"She has a near death grip on him.\" He then felt several blankets cover the both of them. Strange he hadn't noticed how cold he was 'til that moment. Adina groaned beside him as she felt her grip him even tighter. \n\nTrying to rise his head proved futile as Ambrose groaned. There was a sudden lurch as the ship exited the tunnel. Skylos was shocked to see that they were almost in the same position they had been in when this all started.\n\nThere was a sudden multitude of voices over the com. \"King Typree? Is that you Sire?\" Skylos heard several voices of his cousins.\n\n\"For now,\" he heard King Typree respond. \"We might need assistance as it appears we are almost powerless.\"\n\n\"Yes Sire. Moving to intercept now. Uh Sire? Is that the King Ambrose's ship?\"\n\n\"It is, I suggest you assist him first.\" They heard Typree respond. \"He and his crew have had a harder time of it than our crews have.\"\n\n\"Yes Sire we are moving to intercept all of you. The battle is going our way. The new shielding has proved invaluable, we have them on the run as we speak,\" returned the voice that had been speaking to Typree.\n\n\"I suggest all of you hurry the power levels are dropping on all three ships. I apologize King Typree we are all in a desperate situation.\" Ambrose heard Skylos's voice break into the conversation.\n\n\"Who is this? How dare you break into a...\" The other voice started.\n\nTypree suddenly spoke up, \"I suggest you amend your tone. You are speaking to the Captain of the Xendran space fleet. I owe the Captain my life as does King Ambrose.\"\n\nThere was silence a moment then the voice stated, \"I apologize Captain. Please tell us what we can do to assist you.\"\n\nAmbrose tried to smile as he could see the young Mandrian fleet member gulp. He just hoped that it didn't go to Skylos's head with his new position.\n\nIt was four spectons later that Skylos finished talking. Then there were several ships docking with the three failing ships.\n\nA young panther clan commander strode through the airlock a moment later a container under his arm. Stopping short his mouth gaped open when he saw both Ambrose and Adina apparently unconscious on the deck covered with blankets.\n\nBowing to Queens Twitty and Glenna he asked, \"Do they require a healer? We have one on the medical ship.\" Looking at them on the deck again, a more concerned look crossed his face.\n\nThere was a groan as Ambrose's eyes flickered open, \"No they do not. The thought is much appreciated though.\" Ambrose said in an almost whisper.\n\n\"MATE!\" Both Twitty and Glenna shouted as they advanced upon him and Adina.\n\n[Ugh!] Ambrose heard in his head. [Do they have to shout?]\n\nBoth Twitty and Glenna stopped short looking around with a confused look on their faces. \"Did you hear that?\" They both said at the same time to each other.\n\n[Wait your mates heard what she said?] Came Typree's thoughts. [How is that possible?]\n\n[Brother shut up.] Came Adina's pained thoughts. [You are so loud!]\n\n[Ha! Even unconscious she can be a pain!] Typree's thoughts returned.\n\n[You are going to pay...] Started Adina's thoughts.\n\n[Enough the both of you. We have to get through this.] Ambrose thought as he looked over to an even more confused pair of Twitty and Glenna. [Cousin is it possible that the claim and my blood has made this occur?]\n\nThere was a pause for a few moments then Typree answered. [It is a great possibility though if it is true not sure just how it will affect them in the end.]\n\nAmbrose had finally sat up with a groan pulling Adina up with him her arms still locked around him. Both Twitty and Glenna were shaking their heads then they both were checking both Adina and Ambrose for injury.\n\nBoth breathed a sigh of relief, the young panther clan male had already went to meet Skylos. \"As far as I can see they are both just weak.\" Glenna said. \"Though I only have basic first aid. I would feel far better if Henna was here.\"\n\n\"I agree, she is after all the Royal Doctor. That is if our mate can convince her to remain on in that position.\" Twitty said also looking over the both of them.\n\n[Please tell them to stop!] Adina's thoughts said causing both of the females to quickly remove their paws as if burned.\n\nBoth turned toward each other again stating, \"Did you hear that?\"\n\n[By the great feline! They can almost hear me! So it is true.] Adina's thoughts stated.\n\nAmbrose weakly turned toward the two females, \"We'll discuss it soon. For now know you are touching the outside of something that is unique to the royal family.\"\n\nBoth Twitty and Glenna's mouth's dropped open as they could only nod. Ambrose could hear a slight giggle from Adina then all was quiet.\n\nA moment later the young panther clan male was making his way back toward the airlock. His mouth gaping open again he was bowing almost to the deck drawing a groan from Ambrose. \"Thank you commander for your assistance.\"\n\n\"I am glad to help the Xendran King. If there is nothing else Sire, I am needed back on board. It appears that the enemy still has a great contingent of ships on the surface.\" The young officer stated with a growl.\n\nAmbrose was nodding when an idea struck him. Grabbing his com. he started a conversation with his cousin. Then they added Jankuis. All of his Knights also joined into the conversation leaving the panther clan male standing there with his mouth still open his whiskers twitching with excitement.\n\nAmbrose looked over all gathered seeing how they shook, their tails swishing, and their own whiskers twitching. He had to admit this plan he had was raising his own excitement to new levels. Nodding then confirming the plans everyone got in position.\n\n----------------------------------------------\n\nConrad smiled with sadistic glee as he watched his nephew's ship disappear. A moment later his smile grew larger as he watched the two lead ships of the Mandrian also disappear right behind his nephew's ship. Shouting several orders the same small female was brought before him with a cover on her head.\n\n\"So you little whore, the king was going to kill me huh? He and his bastard cousin are both gone.\" Here Conrad started to laugh as the cover was removed from the small female's head.\n\nThe small female blinked then stared at Conrad. \"So you have covered all of your men. You are finally using that useless piece of grey matter between your ears. Too bad it won't save you in the end, I still see you dead at my paws. I can't wait!\"\n\nConrad's face twisted into a mask of rage as he raked his claw across her face. \"Shut your whore mouth! You are a blight upon a noble family, much like that piece of trash nephew of mine!\"\n\nA light sound of laughter caused Conrad to whirl back toward the female. \"Enjoy your little plan. I can feel they both are back, with a vengeance!\" Conrad's fury was growing higher when there was an alert from his equipment.\n\nRunning to a console Conrad's eyes suddenly went huge as it confirmed what the female had just said. \"I should kill you right now!\" Conrad hissed at her. A smile crossed her face as she felt her power suddenly increase. So it was true he was here after all, good! This was going to be greatly enjoyable watching this ass die!"
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien",
        "body modification",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/cat-fight-ch-28-return-of-the-king"
}