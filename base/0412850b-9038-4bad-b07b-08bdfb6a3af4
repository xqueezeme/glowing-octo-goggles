{
    "title": "Such a Little Thing Ch. 02",
    "pages": [
        "This is part two of a lesbian romance. I've split the story into three parts to keep each one a reasonable length but it is a continuous story so you'll need to read part one first, which can be found at:\n\n\n\nMany thanks must go to EarthlyRose for her help editing this story. In addition, gratitude and thanks also to Winterreisser for his further editorial comments and suggestions.\n\nIf you enjoy this story please rate and leave a comment.\n\n++++++++++++++++++++++++++++++++++++++++++++++++++\n\nCHAPTER 6 -- Still Looking for Mr Right\n\nThe weeks passed and we settled into each other's lives. My shop was doing well; Uncle Graham came to visit and check over the books (the keeping of which was a Sunday afternoon chore I detested with a passion) and declared that I was doing better than predicted. That did allow me to persuade him to upgrade the shop's PC so the bookkeeping wasn't quite so tedious. \n\nI took him for a coffee next door where Milla was at a table in the corner. I called across, \"Hi Milla, this is my Uncle Graham who owns the shop.\" I turned to Uncle Graham, \"And this is Milla, my very close friend and maker of exquisite coffee.\" Milla came up behind me and, placing one hand affectionately on my shoulder, shook Graham's hand. I barely noticed Milla's hand but, looking back, I realize now that Uncle Graham didn't miss it; at the time he simply looked intently at the two of us.\n\n\"Hello, Milla, love,\" said Uncle Graham. \"I ought t' thank thee for helping our Amber out, with that oval glass and the like, and being such a right good neighbour and friend to her.\"\n\n\"Thank you, Mr, um, Uncle Graham. Amber has spoken about me then?\"\n\n\"Aye. She don't email or phone as often as she might, but I reckon your name crops up in all of 'em.\" He and Milla smiled at my flaming cheeks.\n\nNot surprisingly he was completely charmed by Milla and seemed genuinely pleased that she and I were such good friends. He was also impressed with the leaflets for 'In the Frame' that were on the counter with their discount voucher. \"I wish some of t' other shop managers would show t' same initiative as thee, Amber,\" he praised, \"I'd be fair minted by now!\" Milla overheard and gave me a big smile and two thumbs up.\n\nI would frequently spend most of every Wednesday in the Caff\u00e8 helping out and just being with Milla. On one occasion I was wiping down tables when I heard a thickly accented voice behind me. \"Hey, Camilla! Da quando abbiamo impieghiato una nuova ragazza?\"\n\nI turned to see an old man in a worn, brown jacket, grey trousers and white shirt open at the collar, and whom, despite being much older, I recognised from the photographs as Nonno Carluccio. Although not understanding a word he'd said, I held out my hand to shake as Milla hurried over to introduce us. \"Nonno, lei non \u00e8 un dipendente; she's not an employee. This is Amber; she runs the framing shop next door and she did the framing of all the photographs.\" She turned to me, \"Nonno asked, 'Since when did we employ a new girl?'\" she explained.\n\nI nodded. \"Pleased to meet you, Nonno Carluccio,\" I said as we shook hands. \"I'm just helping Milla out as my shop's shut today,\" I explained.\n\n\"And for this helping she pay you?\" he asked.\n\n\"Of course not; she's my best and closest friend and we help each other out from time to time.\" He nodded and thanked me before walking slowly over to behind the counter where he proceeded to inspect everything. \n\nMilla looked at me, her eyes shining. \"Amber, that was so sweet to call me your 'best and closest friend' and the way you called him Nonno too.\"\n\n\"It just sort of slipped out.\"\n\n\"If Nonno wasn't here I'd give you such a big hug!\" she told me as she surreptitiously took my hand and squeezed it.\n\nMilla passed the inspection as, apparently, did I along with the photos I'd framed. Milla told me Nonno had declared me \"A very nice young lady,\" but probably in Italian -- or with an Italian accent at least.\n\nThough there was no hug that day, there was generally a great deal of physical contact between us: Milla would link her arm through mine when we walked, would touch or hold my hand or arm when we were close and talked, put her hand on my hip or waist as she slipped past me. Initially, I was a bit uncomfortable with this and I didn't reciprocate but I gradually found myself doing the same with her. And following an afternoon bent over the workbench it was wonderful to feel Milla's fingers on my neck and shoulders kneading away the ache and stiffness and after that, I was always happy to repay in kind.\n\nI suppose I should mention the dreams. They weren't every night but the warm and humid summer nights that year often made my sleeping restless and so I would wake in the dark, the memory of a dream still vivid. Milla featured frequently: kissing her; us naked in the Caff\u00e8 or in my workshop or in her flat; touching each other; massages that went further... There was one I struggled to remember, but white dresses were involved so I suspect it was something to do with a wedding. I never again came in my sleep but I was usually very wet afterwards and my fingers and little vibe got lots of use relieving me. I absolutely needed that release; without it, I'm quite sure that the temptation to do something inappropriate with Milla or of leading her on would have been too great.\n\nAh yes, then there was my one date. It was in mid-August with a young guy, Kieron, who had brought in several of his watercolour pictures for framing over a number of days. He was friendly and good looking and, as I handed him his third completed frame, he asked me out. I hesitated for a moment and, though I wasn't really attracted to him, agreed to go; I'd been single for months, I reasoned, so I needed to get out there again.\n\nAt seven o'clock the following Saturday night, our agreed time, Kieron picked me up in his little Ford Whatever car (it was red, anyway, and quite old). My first warning should have been when we drove into the car park of The Maid and Dragon pub. The evening Milla and I had spent there had been wonderful, only becoming more magical in my memory, so it was going to be hard for this date to match that.\n\nHe escorted me into the pub where he'd booked a table in the restaurant area. We sat and chatted before the waiter arrived, small talk about ourselves: how I came to be running the shop (an abridged and less embarrassing version), his hobby of watercolour painting.\n\nThe waiter came and we ordered. We continued talking but it became more and more stilted and uncomfortable. I kept imagining what it would be like with Milla; the easy conversation, the laughter, our legs brushing under the table, the warmth of her hand on mine that could still burn right through me.\n\nWe ate our food but we didn't offer each other tasters from our own plates. I drank but the alcohol numbed rather than relaxed me. In the end, I found myself declining dessert and apologising. \"I'm sorry Kieron. You're a really nice guy but this isn't going to work.\"\n\n\"You mentioned splitting up with someone. Are you still, like, not over him?\" he asked, anxiously.\n\nI hesitated, Milla's face in my mind's eye. \"I... well sort of. There is someone and I'm definitely not over them.\" I told him. \"I don't know if I ever will be,\" I added to myself.\n\nHe was gallant to the last: he insisted on paying, taking me home and then, finally, he even thanked me for the evening. All I could do was to apologise for being such crap company.\n\nI had barely closed my door when there was a soft knocking and I opened it to find Milla there. She came in and I made us some hot chocolate. \"Are you alright, Amber? You looked sad as you came back. Was your date okay?\"\n\n\"Let's put it this way: he was definitely not Mr Right.\" I tried to laugh. \"I'm not sure that there is a Mr Right anymore,\" I muttered. It was mainly frustration talking but maybe subconsciously I meant more. Whatever it was, there was no mistaking the hopeful gleam that twinkled in Milla's eye when she heard it.\n\nCHAPTER 7 -- 'She's not my girlfriend!' \n\nIt was now late-August and I had just finished serving a customer. As she left the shop, the postman came in and handed me several letters.\n\n\"Thanks, Joe,\" I said, looking through the boring bills and circulars. There were two more interesting letters at the back but when I looked they were for Milla, one with an Italian stamp. \"Hang on, Joe, these letters are for Milla.\"\n\nHe came over and took them. \"Ah yes, they'll be her birthday cards.\"\n\n\"They're a bit early, aren't they? Her birthday's next week.\"\n\n\"I don't think so; it's probably tomorrow or Saturday.\" He saw the look of concern on my face. \"What's the matter? Did you forget your girlfriend's birthday? And it's her quarter century too.\"\n\n\"She's not my girlfriend,\" I replied automatically, checking the calendar on my phone.\n\n\"Yeah, right, if you say so,\" he said sarcastically. \"See you tomorrow,\" and left the shop.\n\nI found the calendar entry: \n\n<blockquote> Friday 01 September: Milla B'day (25).</blockquote> \n\nHad I entered it a week late? If so: shit!\n\nI took an early coffee break and popped next door. I had to wait while Milla served the customers at the counter so I fell to my usual habit and cleared and cleaned the few tables and refilled the sugar sachets in the pots. Eventually, Milla was done and she gave me a quick hug as she handed me my ubiquitous skinny latte. I had decided on a sneaky approach to checking Milla's birthday.\n\n\"What do you have planned for your twenty-fifth birthday tomorrow?\" I asked.\n\n\"I was hoping you'd surprise me,\" she replied. Damn: it was tomorrow. \"Though, that meal we had at the pub was lovely,\" she smiled at the memory.\n\n\"It was great, wasn't it? So let's go there -- but with or without the run?\" I asked.\n\n\"Yeah, why not? Let's run there; we've not had a run this week and I always like seeing you in Lycra!\" she grinned.\n\n\"Okay,\" I replied, trying desperately to work out what I was going to give her and when I could buy it.\n\nAnd so it was that, for once, I closed the shop at lunchtime and headed into the town centre. I vaguely recalled a jewellery shop that I thought might have something. I found it eventually: Kaufmann Jewellery. The window display had a huge range on show and I was a little overwhelmed by the choice available. Earrings? Bracelet? Necklace? I wanted something just right, but what? Then I noticed something: an orange stone in a pendant. No, not just orange: amber, real amber. Her eyes, my hair: perfect! I looked closely. It was a slightly irregular teardrop shape on a gold chain and at the bottom of the amber was a tiny, dark speck, like a little seed. I couldn't see a price so I went in.\n\nThere was a large older woman behind the counter. \"Good afternoon, can I be of help to you?\" she had a slight but noticeable German accent.\n\n\"Um, yes. There's an amber pendant in the window; I wondered if I might look at it and find out how much it costs?\"\n\n\"Certainly,\" she replied and she went round to take the pendant from the window. She reached out the pendant and passed it to me. \"It is for you, perhaps, to match your hair?\"\n\n\"It's a present, actually.\"\n\n\"Ach, I remember: you are from the Caff\u00e8 on the North Road, no? I get coffee there sometimes and you I have seen there, with Milla.\"\n\n\"No, well yes. I actually run the framing shop next door but I give Milla a hand when I'm in there. I'm looking for a birthday present for her.\"\n\n\"Ach, yes, and you are a couple, nein?\"\n\n\"What? No! We're just friends, not a couple!\" I answered. Two people making the same mistake on the same day was getting to me.\n\n\"Really? Perhaps you should be. I think you love each other much; you are sweet with each other.\"\n\n\"Well, she is my best friend so I do love her. But we can't be a couple, we're just friends,\" I finish, but I cannot help a slight note of sadness in my voice.\n\n\"Hmm. You are not so sure of this, I am thinking.\"\n\n\"Look, why do you care? What's it to you?\" my frustration making my voice harsh.\n\n\"Maybe I am just a busy-body old lady. Or maybe I know someone, many years ago who knew a girl whom she loved and this girl loved her also... but there were lots of reasons, sensible reasons, why this love could not be and so her head decided and the heart... the heart was disappointed, yes. Maybe I should not want you to make the same mistake as Hanna and Liesel did, perhaps?\" She handed me the pendant but I was sorely tempted to flee the shop and this strange woman with her gnomic comments. Only my desperate need to find Milla a gift kept me there.\n\nThe pendant close up looked beautiful; the colour, slightly darker than my hair, would be a perfect match for her eyes. Close up I could see the dark speck is actually a tiny ant, perfectly preserved \"It's lovely; how much does it cost?\"\n\nShe looked at the price tag in the box. \"\u00a3160. The chain is gold, fourteen carat old and quite long.\" I swallowed hard; that was much more expensive than I'd expected. \"However,\" the woman continued as she saw my reaction, \"it has been on display such a long time and not sold, so it is overpriced, I am thinking now. Perhaps \u00a390 is more the right price, no?\"\n\n\"I can't, I mean that's far too generous of you.\"\n\n\"Nonsense, I insist! I know Milla also, though not so well as you: she is a very kind woman. Perhaps I will be kind too.\"\n\n\"Thank you, you are very kind. It's perfect for her.\"\n\n\"Because of your hair, ja?\"\n\nI blush slightly as I confess, \"No, well, maybe a bit, but mainly for her eyes.\"\n\nThe woman smiled broadly, \"Would you like me to wrap it for you?\" she offered and I accepted, watching as she arranged the pendant carefully in the little box then wrapped it in gold paper, tying it up with red ribbon. The wrapping was almost a work of art in itself. She placed the present in a little bag and I paid her. I saw her writing something on the receipt which she placed in the bag before handing it to me. \"F\u00fcr Ihre sch\u00f6ne Freundin,\" she said and when I looked blankly at her she translated, \"I said: 'for your beautiful girlfriend.' You wish her a happy birthday from me too, please?\"\n\nI bowed my head in embarrassment but managed to thank her and say goodbye before hurrying out. Walking back I reached into the bag and took out the receipt, unfolding it to see what she had written on it:\n\n<blockquote>Remember to listen to your heart and not just your head.\n\nLiesel Kaufmann </blockquote>\n\nCHAPTER 8 -- 'I can't take it anymore!'\n\nWe had agreed that birthday celebrations would have to wait until after both the Caff\u00e8 and my shop closed so we wouldn't have to worry about customers. It was sensible but I was so excited all afternoon and I'm sure Milla was worse! \n\nI had phoned the pub earlier and, with a lot of whining and wheedling, managed to persuade them to reserve the table in the beer garden at which we'd sat previously. That would give us some privacy, so I resolved to keep Milla waiting a bit longer and wait until we were at the pub before giving her the present.\n\nWe set off on our run just after six, the present secure in my running belt pouch. Though Milla's running fitness had improved greatly (much more than my sprinting!) we were going to take it very gently, not least because it had been such a hot day. However, as The Maid and Dragon came into view, Milla again decided on a sprint finish. I immediately pushed off hard, determined to give her a good run for her money. Pain shot up the inside of my right thigh and I gave a little cry as I fell sideways onto the grass bank.\n\nI saw Milla turn at my cry and hurry back, her face full of concern. \"What's the matter, Amber? What happened?\"\n\n\"I think I pulled a muscle or something,\" I told her as I rubbed the inner thigh that remained acutely painful.\n\n\"Here, let me,\" she offered and I lay back on the grass as her fingers massaged the aching area. The pain eased a little as her fingers worked their magic, pressing and rubbing, long strokes and little circles. She worked from the knee upwards and by the time her fingers were at the top of my leg, most of the pain had gone. I became aware of the gentle tingle of arousal beginning within me and when, suddenly, the back of her hand brushed over the mound of my pussy I squealed and sat up.\n\n\"Is that nice?\" she asked and she continued to massage a little lower.\n\n\"A bit too nice, if you know what I mean.\"\n\n\"Oh, God, Amber I'm sorry! I didn't mean to...\"\n\n\"Hey, it's okay, Milla; no harm done. And my leg feels a lot better, thank you. Here, help me up.\" With Milla's help, I stood. \"It feels a bit sore still but I can walk, I think.\" I limped slightly so Milla put her arm around me to help support me as I hobbled to the pub.\n\nWe entered the pub and I gave my name to the landlord who led us through to the reserved table in the beer garden and gave us menus. \"Your girlfriend's very persuasive,\" he said to Milla, \"we don't normally reserve tables in the garden. I hope this isn't a dangerous precedent.\"\n\n\"She's not my girlfriend...\" Milla began but he'd already turned and headed off.\n\n\"Don't worry about it,\" I advised, \"I've had comments like that twice in the last couple of days.\"\n\n\"Really?\" she asked. \"Are... are you okay with that?\"\n\n\"I don't know,\" I admitted. \"People will think whatever they think and I guess we are pretty, well, close and tactile. It's a bit awkward and uncomfortable though. What about you? You're sort of being outed without even being in a relationship.\"\n\n\"Perhaps it's meant to be and I should stop pretending. I just worry about Mama, Papa and Nonno finding out, that's all,\" she said in a tired voice.\n\n\"Hey, come on, it's your birthday!\" I said as I reached into the pouch and took out the present. She smiled as I placed it on the table between us. \"Happy birthday my lovely Milla -- your quarter century.\"\n\n\"Don't remind me... oh, wow!\" she exclaimed as she looked at the present happily and began carefully untying the ribbon and opening the paper. She held the little box in her hand and hesitated a moment before slowly opening it. \"Oh Amber!\" she gasped, \"It's gorgeous: Amber from Amber!\" she laughed.\n\n\"No, amber for your beautiful eyes,\" I corrected her.\n\n\"It's the most wonderful gift I've ever received, and the most special,\" tears welled in her eyes and she wiped them away. \"Thank you so much. Will you help me put it on?\"\n\nShe half stood and leaned across the table as I opened the chain and placed it around her neck. As I reclosed the clasp I kissed her hair. \"Happy birthday, my darling,\" I whispered. She looked at me and I saw again that glimmer of hope in her eyes, making me regret speaking those words out loud, however true they might be.\n\nShe sat back and the pendant shone against her skin: it was perfect. She reached up and touched it. \"Well,\" she asked, \"how does it look?\"\n\n\"It's beautiful and looks perfect on you!\" I said.\n\nJust then the waiter came up. \"Are you ready to order?\" We hadn't even opened the menus so we simply ordered a bottle of wine and the same food as we'd had the previous time so we could be alone again.\n\nWhen we came to dessert, chocolate fudge cake, of course, I cut the first piece and offered it to Milla, who laughed as I slipped it into her mouth. I felt her leg rub against mine under the table and recalled the meal with Kieron and how I'd imagined her doing just this. Her touch felt wonderful and being her with her so right. Oh God, this was so difficult but I wasn't gay I reminded myself once again.\n\nAfter the meal, we made our way home in the peaceful evening. The alcohol had banished the pain, though my leg was still stiff and we were both a little tipsy. We walked arm in arm, snuggled as close as any lovers might do.",
        "\"Thank you for such a lovely evening Amber, and for my beautiful present. I don't think I ever want to take it off.\"\n\n\"I'm really happy you liked it, Milla.\"\n\nWe were almost home when Milla gave a deep sigh. \"I don't want this evening to end so soon. Can I ask you to do something Amber?\"\n\n\"Certainly, especially as it's your birthday.\"\n\n\"I asked before but it never happened: will you draw me, wearing this pendant? This evening?\"\n\n\"I did promise before, didn't I? Yes, of course I will.\"\n\n\"I mean, um, wearing only this pendant.\"\n\nI swallowed hard and nodded; I had more than half expected her to say that. \"I'll need to go and get my sketchpad and stuff and I ought to change.\"\n\n\"Don't worry about changing, just grab your art stuff and come up to me. Okay?\"\n\nTen minutes later I knocked on her door; paper, pencils and drawing pastels in hand. Milla opened the door in her bathrobe but made no attempt to keep it closed. The pendant hung down to the start of her cleavage. She was stunningly sexy and I felt my body respond as it had in my dreams. \"Hi,\" I managed to say, my heart thumping.\n\nWe went through to the sitting room where Milla had thrown a cream sheet over the sofa and moved the coffee table aside to place the armchair facing the sofa. She let the bathrobe fall from her and she lay back on the sofa, one arm under her head, as I simply gazed at her. The setting sunlight bathed her body making it glow like gold, the amber pendant a little shining, fiery ember against her skin. \n\nMesmerised by the sight of her I moved the armchair slightly to make a better angle and to avoid blocking the light from the window.\n\nI sat, opened my sketchpad and began to draw, lightly outlining her form. I was entranced. \"You are so fucking beautiful!\" I sighed and Milla smiled. I had never drawn with such utter focus before as I did then, switched to the pastels. Desperate to capture her beauty at this instant I worked quickly but my line was sure and confident. She was so much part of my life I'm certain I could have drawn her perfectly from memory. \n\nAfter her beautiful face and the fall of her hair across her shoulder, my hand brought the swell of her breasts to life on the page, the hard nubs of her nipples, then the faint line of the pendant's chain and the bright spark of amber resting where the swell of her breast began. I continued with the smooth curve of her hips, the dark dimple of her belly button, her slim, shapely thighs and legs, the hairless mound of her pubis and the top of the soft cleft of her pussy just visible... \n\nFinally, I added my signature -- just 'Amber' in dark pencil in the corner -- and sat back, looking at the drawing in front of me. I knew I had drawn it but the sight of it surprised me. If my other drawings of women had shown a love and affection, then this showed a raging passion bordering on worship of this beautiful woman.\n\n\"Can I see it?\" Milla asked, her hand caressing my thigh at the same time. Tentatively I held it up for her. \"Wow, that's just ... amazing; Amber, you make me look like a goddess! I love it so much! You're such a brilliant artist, thank you.\" \n\nPutting the picture carefully to one side, she came over and sat on my lap and, putting her arms around me, gave me a big hug. My arms went around her, and the feel of her, naked against me turned me on immensely. I could feel my nipples harden and my pussy start to tingle and moisten in instant response.\n\nMilla noticed the hard bulge of my nipple and twisted to check the other. She smiled. \"Hmm is having me naked in your arms turning you on, Amber?\" she teased.\n\nIt was too much, \"I can't take it anymore!\" I sobbed. Tears started and I broke down, crying uncontrollably. \"Oh Milla,\" I wailed, \"I'm sorry!\"\n\nShe put a hand to my cheek. \"What is it my precious one?\" she asked. \"I didn't mean to upset you.\"\n\n\"No, it's me.\" I gasped breaths, trying to regain control. She stroked my hair, waiting for me to calm. \"It's not you, Milla, it's me. I'm so screwed up.\"\n\n\"You? What about?\" she asked gently.\n\n\"About us!\" Milla looked worried. \"I, I love you.\"\n\n\"And I love you too. What is it, Amber?\"\n\n\"No, not just 'you're my friend' I love you... I, I think I want to, to be with you, to,, you know, to be your girlfriend, to make love... to have sex with you, Milla! I've been dreaming about it for weeks!\" I was almost shouting.\n\n\"Really?\" Milla asked in surprise.\n\n\"Yes, really. At least, I want to try making love to you, But that's the problem,\" tears were flowing again, \"I can't be like your first girlfriend. I can't and I won't make you my bi-curious experiment!\"\n\n\"Amber, I love you with all my heart. The first time I met you was, like, ka-pow! And you were so friendly, and you've accepted me as I am. I'm so sorry, I didn't realize; my flirting has been really hard on you, hasn't it?\"\n\n\"A bit, at times.\" I nodded, adding, \"There were so many times when I just wanted to let you kiss me on the mouth, or to lean over and kiss you, or press my bum back against you when you squeeze past me in the Caff\u00e8...\"\n\n\"I didn't know. Oh, Amber my darling! I didn't mean to but I put you in an impossible position, didn't I?\" She paused and thought for a moment. \"Amber, would you come to bed with me? We can just kiss and cuddle. We'd both enjoy that.\"\n\nI nodded. \"Oh I would but... oh, Milla, if I were in bed with you I'm sure that I want to do more than just cuddle and kiss, I'd want to go further; the dreams I've had... but then, if it didn't work out...\"\n\n\"Then we'd know you weren't bi or lesbian and I would stop flirting with you. It wouldn't stop me being your friend any more than my being gay stopped you being my friend. I can't let you carry on the way you are or you could end up hating me. I, we, need to take a chance and find out the truth. What do you think?\"\n\nI thought and I remembered Liesel Kaufmann. \"The woman in the jewellery shop, where I bought your pendant, she comes into the Caff\u00e8 sometimes apparently. She wishes you a happy birthday, by the way,\" I chuckled at my need to tell her that. \"Anyway, she was also the second person who thought we were a couple already. I told her we weren't and she said, 'Well, perhaps you should be.' She also gave me another piece of advice: to listen to my heart and not just my head.\"\n\n\"And what does your heart say?\" Milla whispered.\n\nI reached round, behind her head, pulling her gently down. Our lips met softly, pressing gently together. Oh, it felt so good and I opened my mouth slightly. Milla gave a slight sigh as the tip of my tongue caressed her top lip. Her mouth now opened too and I slid my tongue between her lips till it met her tongue. The kiss deepened as we opened to each other. My heart exalted; this was what it wanted: Milla, my beautiful, perfect friend.\n\nSlightly breathlessly we finally broke apart. She was radiantly happy until she noticed my tears. \"Amber...\" she began, her voice worried.\n\n\"No, no, my darling: these're happy, joyful tears! That was just so wonderful!\" I laughed. \"Can we... \" I hesitated, suddenly shy. \"Can we go to bed?\" I whispered.\n\nShe stood and took my hand and led me through the darkening room to her bedroom. My heart was beating hard and quick with excited anticipation. She helped me undress; my fingers, so confident and sure as I drew her, now made trembling and inept. Naked, we lay down on the bed together.\n\n\"Whatever you want to do, my darling Amber: that much and no further, I promise.\"\n\n\"I think I want to go a long way,\" I assured her. \"I want us to be lovers, for tonight at least.\" She smiled and we kissed again, my hands caressing her soft skin. Part of my brain panicked: 'Oh God! I'm naked in bed and making out with another woman, what's got into me?' and for a moment I froze. Then I thought, yes, this is what I choose: to accept my sexuality, whatever that is, and to express my love for Milla physically, fully and completely, if only for this one night.\n\nMy hand moved to cup her breast, soft and firm, the hard nipple pressing into my palm as I gently squeezed. Her hand found my breast too, her thumb circling the nipple and rubbing it. We were both moaning and sighing into our kiss.\n\nI put my arm around her and rolled so Milla was lying on top of me. I loved the feel of her weight on me, her naked body pressing down on mine. My hands travelled down to grasp both cheeks of her lovely arse before pulling her tight against me; our legs interlocked and our pussies pressed into each other's thighs. I could feel my labia, hot and wet against her skin, even as hers were against mine.\n\nMilla arched her back, grinding against me and making her nipples sway, brushing back and forth over my boobs. \"Mmm that feels so good,\" Milla purred.\n\nI steadied one swaying breast with a hand before raising my head and tracing my tongue around her nipple. Then I began to suck it and nibble it. The feel of it in my mouth, my lips on my friend's breast, was fantastic. I began giving her other boob the same treatment. \"Milla,\" I gasped, releasing her nipple, \"I want to touch and kiss and taste every part of you my darling.\"\n\n\"Good, because I want to do the same to you!\" and with that, she slid back to kneel between my legs. She bent forward, placed her hands on either side of my shoulders and bent to kiss me. She kissed my lips and cheeks and chin. She ran her tongue along the line of my jaw and began nibbling and sucking my earlobe before moving down to my neck. I had never felt as loved as I did then, nor so hot and wet as her little licks and kisses were joined by gentle nips with her teeth. After my neck, her tongue trailed wetly down my sternum, between my breasts. These now received the same loving attention. \n\n\"Oh God, Milla, I feel like I could cum right now!\" I gasped, my hand reaching down to my pussy. \n\nShe intercepted my hand. \"Be patient and enjoy it; your Milla's not ready for you to cum just yet,\" she teased.\n\nHer mouth moved onto kissing and licking my tummy and the imminent orgasm receded a little. Before very long, however, I felt her move backwards and her hands rested on my hips. I could feel her hot breath on my mound as this now received the kiss-lick-nip treatment, making me moan and cry out. Her lips brushed my labia and I couldn't help my lips bucking at the intensity of the feeling. There was a pause and then her mouth closed over my pussy. Her tongue swirled over it and then slid inside; dipping between my inner lips as she French kissed my pussy. It felt exquisite.\n\n\"Oh yes!\" I cried, \"My best friend has her tongue up my cunt and I fucking love it!\" I wanted her, and that small, still-nervous part of me, to understand how much my body was enjoying this.\n\nI felt her fingers enter me as her mouth moved up to suck and lap at the hood of my clitoris. Her fingers slid deep and began to pump gently. When the tip of her tongue touched the clit itself I finally came, the release and pleasure crashing through me as I gave a long cry of orgasmic joy.\n\nShe crawled up to lie beside me as I came back to earth. \"I've wanted to do that to you since the day you walked into the Caff\u00e8 and asked for your first skinny latte. You are so gorgeous.\" We kissed deeply and I relished the taste of myself on her mouth. \n\n\"I am so going to do that to you when my legs start working again!\" I told her before licking my wetness from her chin.\n\nShe laughed. \"You don't mind the taste of your pussy then?\" she observed.\n\n\"Hell, no: I like it. That's why I so want to taste yours.\" I rolled her onto her back, me on top this time. I knelt, straddling her hips. \"Now, where to start?\" I wondered aloud as I took the piece of amber that has slipped on to the bed by her neck and placed it in the centre of her chest.\n\nI bent forward and nuzzled into her neck, kissing then licking and biting. When I encountered the chain of the pendant I traced my tongue along it then back up to the other side of her neck. \n\nI moved down to give some attention to her breasts as my hand went down to her pussy. As I kissed her boobs my fingers delighted in her smooth hairlessness, trailing over the soft skin. As they moved across her pussy I could feel her lips were swollen, very warm and wet. I traced them with my finger.\n\n\"Ooooh, that's nice: don't stop!\" Milla begged and so I continued. However, I was becoming impatient to taste her for the first time. My fingers continued their caresses as I shimmied down and knelt between her knees. I gazed at her sex and saw her pussy was open, the lips deep red against her olive skin. Nervously I bent forward, inhaling her scent. It was lighter than mine, not so musky but it seemed perfect. I moved my hand and edged closer. I felt this was a moment of destiny, that if I did this -- if I enjoyed this -- I could no longer call myself straight. \n\nI glanced up, directly into Milla's loving eyes. Her cheeks were flushed, her lips very red with her arousal, yet in her love, she understood my hesitation and whispered, \"Only if you want to, Amber.\" And then it became easy, my lips covering her labia and my tongue tasting her. How could I not want this with someone I loved and who loved me so totally? Perhaps it was simply the perfect taste, perhaps it was just that it was because the taste of her; I hadn't expected her to taste quite like me but I never dreamt it could be so good!\n\nAnd more than the taste was the feeling of her opening herself to me, my mouth and tongue exploring her most intimate places, my fingers entering her. Her vaginal walls were tight, smooth, hot and wet. I slipped first one, then two then a third inside her, easing them back and forth as my thumb pressed her hard little clit.\n\nI couldn't resist pulling my fingers out and raising my hand. As in my dream, they were slick with Milla's love juice but unlike my dream, there was no sudden awakening as I sucked them clean. \"You don't know how long ago I first dreamt of doing that!\" I told Milla and she smiled as my fingers re-entered her.\n\nI curled my fingers deep and began rubbing her g-spot, knowing how much I enjoyed that. Her hips began to buck in time with my finger thrusts, each time giving a sharp cry. My thumb was now rubbing the clit itself when, with a long wail, Milla went rigid, her back arched off the bed. I felt liquid landing on my tummy and thighs. I looked down as another squirt from her pussy caught the bottom of my boobs.\n\nI dived forward, jamming my open mouth over the top of her slit in time to receive a third, weaker and final squirt over my tongue. Milla held for a few more seconds before collapsing back onto the bed, my fingers slipping from her.\n\nI sucked them clean once more as I lay down beside her, my arm over her as her breathing calmed. Her eyes opened and we smiled at each other. \"You know, she said, \"for a straight girl, you certainly know how to make a woman cum!\"\n\n\"Whatever I am,\" I replied smiling, \"I'm definitely not a straight girl, not anymore. In truth, I suspect I haven't been straight since I met you.\" I lifted my head and began kissing her face and neck between words, \"You know -- I said -- about -- being lovers -- tonight?\" She nodded and I continued, \"I think it might be tomorrow night too...\"\n\n\"Just tomorrow night?\" she asked, laughing.\n\n\"Every tomorrow night, for as long as you want me.\"\n\n\"That'll be a lot of tomorrow nights,\" Milla murmured and we snuggled close, enjoying the closeness. I felt completely and totally loved and in love as we drifted to sleep.\n\nCHAPTER 9 -- A Weekend Break\n\nThe next morning I had the delight of waking up with Milla spooned around me. I snuggled back and Milla whispered, \"Morning, Amber my love.\" Her hands stroked my tummy, sending little shivers through me. I reached back, my hand caressing her thigh. \"I need to get up very soon, I'm afraid, my darling.\"\n\n\"Not fair!\" I complained, \"I so want to eat you again!\"\n\n\"Mmm that would be lovely, but what if I want to eat you?\"\n\n\"You went first last time!\" I said as I turned to face her and we kissed gently. The kiss deepened, my hands caressing her back. I felt her hands slide over my stomach, slipping lower. One hand slipped between my legs and I couldn't resist opening them for her. Her fingers found my pussy, making me gasp. I rolled onto my back, opening my legs for her. Milla knelt beside me, her fingers never leaving my sex. \"Oh, Milla, yes: sixty-nine, please!\"\n\n\"My thoughts exactly,\" she replied as she straddled my head, looking towards my feet. I had the delightful view looking up at her pussy and, just beyond, the cute dark pink bud of her anus. She laid herself on top of me bringing her pussy over my nose so I nodded, rubbing my nose the length of her slit. She began kissing all over my vulva and I raised my knees, opening them as wide as possible.\n\nI began running my tongue along Milla's pussy, delighting as I felt her lips swelling under the caresses. I used my fingers to spread her pussy lips, allowing my tongue to lap deeper inside her. At the same time, Milla began doing the same to me, making me moan with delight.\n\nFingers slid inside me as Milla began to finger fuck me, each stroke rubbing across my clit. I slipped two fingers into her pussy as my tongue continued to lick as deeply as it could. My nose accidentally brushed her anal bud and she gave a squeal. \"Sorry,\" I gasped.\n\n\"Don't be!\" she replied, \"It was different -- but nice,\" she whispered.\n\nI could feel my orgasm building and felt so aroused and sexy. On impulse, I trailed my tongue up across her perineum and flicked it across her bud.\n\n\"Mmmm, you can keep doing that!\" Milla squeaked; so I obliged, each flick bringing a gasp or moan. I suddenly thought about what I was doing but that just made me even more excited. I was getting close when Milla's fingers found my g-spot. To my surprise, I didn't cum immediately but felt things step up another level.\n\nI placed my thumb on Milla's clit as I fingered her harder and faster. I felt her vaginal walls contract and her orgasm began. I started lapping at her pussy, where her juices were flowing but without yesterday's spectacular squirting. My God, she tasted so good and I felt my own climax begin, short and sharp. It peaked quickly but Milla now placed her mouth over my clit and began sucking and licking. Within moments I was heaving and bucking under a second, longer orgasm.\n\nWe were both spent as Milla rolled off me, sweat glistening on our bodies. We lay there, top-to-tail, recovering. \"I think we need a shower or every one of our customers will know exactly what we've been up to!\" Milla giggled and rolled off the bed.\n\n\"I think I need some clothes,\" I replied as I followed her.\n\n\"Shit, yes! You could borrow my robe, just to go next door, would that be okay?\"\n\n\"Yeah, I can go round the back. Do you think we'd fit under the shower together?\" We tried and it sort of worked but it would have been more fun with a bigger bath. And more time too, of course.\n\nBack home I dressed and, as there was a little time before opening, I checked my email for the first time in two days. Spam, spam, newsletter, junk, 'Your credit card statement...', spam, ah, something from Uncle Graham:\n\n<blockquote>Amber,\n\nI meant to email you just after I visited but other things came up and I forgot. I'm so glad that you've settled in so well and, I have to say, the shop is doing brilliantly and far better than my business plan predicts at this point. We both know that I offered you the job because of the situation you were in and you being my niece and all, though I know you're a bright lass. However, Amber love, you've more than repaid the chance I took on you.\n\nI wanted to say thank you and thought you might like a break this Bank Holiday weekend so I've taken the liberty of booking a hotel room in London for Saturday and Sunday nights. It's booked for two people, so you can take a friend. I reckon your friend Milla could do with a break too. There's breakfast included and a meal Sunday night.",
        "All the details are in the attachment, so have a good time.\n\nLove,\n\nUncle G xx.</blockquote>\n\nOf course: this weekend was the Summer Bank Holiday weekend -- the shop and Caff\u00e8 would be closed on Monday. That meant the hotel was booked for tonight! I immediately looked up the hotel on the Internet: it was a stunning five star hotel near Covent Garden and the room was a luxury suite, complete with king size bed and a Jacuzzi! But that -- and his mention of Milla -- meant he knew or guessed about our relationship. Then I remembered his look when I introduced Milla and she shook his hand and, yes, her hand affectionate yet possessive, on my shoulder. Oh yes, just like Joe the Postman and Frau Kaufmann, he knew.\n\nDespite the early hour, I immediately rang him, bombarding him with 'thank yous' as soon as he answered.\n\n\"Tha's very welcome, lass: you deserve it. And,\" he hesitates, \"will tha be takin' Milla with thee?\"\n\n\"Yes, if she wants to. I'm sure she will.\"\n\n\"There's a pullout bed too, if... if you two...\" I could tell he didn't quite know how to ask if Milla and I were sleeping together.\n\n\"Um, I, er Uncle, I don't think we'll need it, um not since last night.\" \n\n\"Er, yes, spare me t' details. I don't know: it didn't happen in my day. Or perhaps it did but nowt was said about it. Still, I could see how close both of you are and how happy together. I'm glad she makes thee happy, Amber. Better than that git of a boyfriend tha had at university, any road up, eh?\"\n\n\"Oh, she does, Uncle, very happy indeed. Thank you so much. But Uncle, you won't mention Milla and me to Mum or Dad will you?\"\n\n\"Nay lass, I'll not. But tha'll have to at some point if the two of you stay together.\"\n\n\"I know, but it's too soon yet. I must go and tell Milla. Thank you again and I love you, Uncle! Bye,\" and I rang off.\n\nI grabbed a holdall I'd used at university and began some lightning-fast packing. I knew that, for once, we were due a bank holiday weekend with some decent weather, though there was the slightly ominous warning of possible thunderstorms that always seems to come with any decent spell of hot weather here in Britain, especially when it coincides with any public holiday. So in went underwear, a short summer dress, a pair of shorts and a short skirt, a crop top and a couple of t-shirts. Okay, I thought, what else? Deodorant, makeup, hairbrush and a pair of sandals; that should do it. Then I recalled dinner in a five-star hotel. Shit! I had a couple of suitable dresses but they were both at my parents' house. I wondered whether Milla had anything suitable she could wear. Sod it: we could always go shopping in London, I thought. Hmm, actually, that could be really cool and the thought of Milla and I walking into a posh restaurant arm in arm in complimenting dresses gave me butterflies of excitement.\n\nIt was now nine o'clock and was just about to go when I remembered something. I reached over into the drawer of the bedside table and retrieved my little silver friend and tucked it into my makeup bag in the holdall. The three of us could have some fun together, I thought, giving my pussy a little tingle of anticipation. Rushing downstairs, I dumped the holdall in the workshop and opened the shop just a few minutes late.\n\nBeing Saturday I was busy. Fortunately, when I managed to pop next door to grab a coffee, there was only one customer, sat with his back to the counter, so I took a chance and leaned across the counter to kiss Milla as she handed me the coffee. As we separated I lifted the holdall onto the counter.\n\n\"What's that?\" Milla asked with a disapproving look at the battered and slightly grubby bag on her nice clean counter.\n\n\"That, Milla my darling, will be our luggage for our weekend away in London; if you want to come with me, that is,\" I told her and explained about Uncle Graham's gift. In reply, she leant across and put her arms around my neck and kissed me, hard on the mouth. Her mouth opened and I was just responding when the door opened behind me. We hastily broke apart and I glanced back to see Joe the Postman walking towards us, a huge 'I know what you've been up to' grin on his face.\n\n\"Morning ladies,\" he said, and then, more quietly, \"I'm not interrupting am I?\" making us both blush. He looked at me, raising an eyebrow. \"Just friends, eh?\" he teased softly.\n\n\"Perhaps Amber's just a very good friend,\" Milla retorted.\n\nJoe nodded, \"You know, that's what Amber said last Thursday.\" He thought for a moment as he looked at me. \"Have things changed for you since last Thursday?\"\n\nI hesitated and then nodded. \"Milla is now my very, very good friend, okay?\"\n\n\"Don't worry,\" he smiled and, after a brief hesitation and glance at the lone customer, added quietly, \"my sister has a very, very good friend like that. They've been together for a couple of years now. I guess I should offer the two of you congratulations. You might want to be a bit more discreet in future though.\"\n\nI felt a huge wave of relief that Joe understood and was sympathetic. I nodded. \"It was just a particularly happy moment and we got a bit, um, carried away,\" I explained and I looked at Milla.\n\n\"Yeah,\" she agreed, \"And we do need to be careful.\"\n\n\"Don't worry, though: your secret's safe with me,\" and with that he handed us our post and said goodbye.\n\nWe looked at each other and started giggling. The chap at the table by the window turned and gave us an odd look, which just made us giggle more.\n\n\"Look, I'd better get back to the shop,\" I said to Milla. \"Get some stuff packed and meet me next door as soon as you can. I'll shut up bang on five and I think there's a London train at about five-thirty. Okay?\"\n\n\"More than okay; oh Amber, this is wonderful. I'm sooo excited!\"\n\n\"Me too,\" I replied as I left.\n\nSeveral hours later we sat on the virtually empty train as it headed towards London Waterloo station, facing each other across the table and holding hands. \"Amber, are you all right with, you know, not being straight? Alright about us?\" asked Milla.\n\n\"Mmmm, yes; making love last night and this morning was wonderful! I love you so much, Milla.\"\n\n\"I love you too and I'm glad you enjoyed the lovemaking; I certainly did! That's not what I meant though. I mean, well, you told me you were straight and now you're a lesbian -- or a bisexual at least. Are you happy with thinking of yourself like that?\"\n\nI wanted to just say 'of course I am' but I knew that, after her experience with Jenny, she was nervous. She had taken a chance, out of her love and concern for me, and allowed me to experiment with loving a woman. She needed to know the result: not just whether I had enjoyed the sex part but if I could or would commit to a lesbian relationship.\n\n\"Yes, I... I am, Milla, though it's still very new and a bit scary.\" I thought for a moment. \"Milla, I think you were right; I guess I've always been bisexual, I just didn't want to admit it. And I know I love you; I have for a long time. You said it was 'ka-pow' when you first saw me. I think, for me, it was when you took my hand that first day to give me the money back. I couldn't stop thing about my hand in yours.\"\n\n\"So,\" Milla hesitated, \"so are you my girlfriend? Properly and for real?\"\n\n\"Oh, Milla yes; with all my heart, yes!\" Relief and joy filled her beautiful face. \"Now, tell your bisexual girlfriend: what shall we do in London? Assuming we're not just going to spend the whole time in bed!\"\n\n\"I don't know; I've never been to London before. Have you?\" she asked.\n\n\"Er, yes! I was at University there,\" I laughed, \"but then I never mentioned which university threw me out, did I?\"\n\n\"So, you get to be the guide, Little Miss Metropolis. What can we do?\" she asked and we spent the rest of the journey planning the next two days.\n\nFrom Waterloo we caught the Underground train to Leicester Square, ticking off one of the things Milla wanted to do: ride on the Tube. As we walked north through Chinatown and the edge of Soho then turned east towards Covent Garden, our hands met and clasped and nobody seemed to give us a second glance. London at its best can be a wonderfully open and tolerant city. \n\nWe checked in to the hotel and were shown to our room where we spent the next fifteen minutes exploring and gasping in awe and appreciation at the room. Heading back out we explored Covent Garden, where many of the shops remained open and the buskers and street performing were still about. We ate in a little Chinese restaurant we found. I really fancied Indian but Milla said she'd never tried curry; with a passionate night on the cards, I didn't push it. The Chinese food was good though. During the meal, we tried feeding each other with chopsticks but had to stop when our giggles and laughter attracted too many disapproving stares.\n\nWe returned to the hotel and, in the lift to the sixth floor, we were so excited: like two kids on Christmas Eve. We hurried from the lift to our room before tumbling through the door. Our lips were on each other even before the door had fully closed and we began tugging and pulling at each other's clothes. It would have been quicker had we undressed each other carefully but we were too impatient and full of passion for that. I'm sure it was more fun the way we did it anyway!\n\nI headed towards the king-sized bed, pulling Milla by the hand but she apologised and went into the bathroom. I had a sudden idea and reached into the holdall that we'd simply dumped on the bed earlier. A quick rummage and I'd retrieved the little silver vibrator from my makeup bag. I moved the holdall off the bed and went round to slip the vibe under the pillow: Milla was in for a surprise. I turned down the covers and climbed onto the bed where I lay on my side facing the bathroom. I raised one knee, spreading my legs; from my rock-hard nipples to my wet, puffy pussy, Milla would see exactly how hot and horny I was when she came out of the bathroom.\n\n\"Come to bed my beautiful lesbian lover,\" I purred.\n\n\"Oh Amber,\" she sighed as she emerged from the bathroom naked and joined me. We kissed and caressed, relishing the space to roll, twist and rub together that the huge bed allowed us. Suddenly Milla sat up and, facing me, interlaced our legs. \"Sit up, darling and lean to your right,\" she said as she shuffled closer. She put her hands on my hips me and I wondered what she was up to when, with a final scoot forward and turn of her hips, she brought her pussy against mine.\n\nThe feel of our sexes touching sent a bolt of electric pleasure through me. \"Oh God Milla: our cunts are kissing!\" I gasped as our wet labia mashed and slithered together. The feeling was intense and intimate, more so even than having a guy's cock in me. I reached my hands around Milla's gorgeous, soft, slim hips and pulled her tighter to me. I couldn't help moaning as her pussy was now rubbing my clit. I looked at Milla, her beautiful face flushed with pleasure and excitement as we ground against each other. \n\nI was getting close and I began rubbing and tweaking my nipples to increase the stimulation, copying Milla. We were both breathing heavily but I just needed a bit more to peak. I twisted my hips slightly and my clit pressed against Milla's pelvic bone; one, two hard grinds and that was enough. I felt my muscles spasm as the climax took me. I wanted to keep going for my lover, to ensure Milla climaxed too but didn't seem to be able to, my orgasm robbing me of control of my body.\n\nWhen I opened my eyes our pussies were still pressed together and saw Milla's smiling face. \"Did you cum too, my love?\" I asked.\n\nShe shook her head gently. \"I just couldn't quite get there and then you moved and started to cum. It was wonderful though.\"\n\nI immediately felt guilty that I had deprived Milla of her climax by moving to obtain mine. \"Oh Milla, I'm so sorry!\" I said, my voice full of regret, but she told me not to worry. \"Lay back and let me make it right,\" I told her. She complied, her head now at the foot of the bed. My hand surreptitiously slipped under the pillow; I was definitely going to make it up to her.\n\nI softly spread her legs and looked at her pussy. The hairless flesh glistened, lathered in our comingled juices. Her inner labia were very red and swollen and I could see inside her vagina where they had gaped from her arousal. 'You are going to touch and finger, to kiss and lick this girl's pussy' I thought to myself, 'and that makes you bisexual, maybe a lesbian, a dyke, a queer...' Did I care? Did it matter? I inhaled Milla's scent, the aroma of our shared arousal and thought of how much she loved me and I loved her. Maybe I would get called all those things and worse, but I would be with the woman I loved, emotionally and physically, so it didn't matter, certainly not right here and right now. \n\nI took another look at her hot, wet pussy and realized how much I wanted, no, needed to make love to Milla. My tongue lapped over her outer lips and I savoured the taste -- the taste of us mixed to perfection. I moved in and lapped her inner lips before sucking on them, making Milla gasp.\n\nI pushed her thighs up and she got the hint, raising her knees and opening herself to me. I continued my licking and sucking but began dipping my tongue between the soft folds of her hot flesh as my hand grasped the little silver vibe I had retrieved from under the pillow. I gently kissed the top of her pussy and caressed her hood with my tongue and I thumbed the button on the back of the vibrator. I began to hum quietly and unheard over Milla's sighs, moans and gasps. I brought the vibe up and touched it to her perineum before sliding it up the length of her slit.\n\n\"Holy shit! What the fuck was that?\" Milla practically yelled. She raised herself on her elbows and looked down at me as I lifted the little vibrator for her to see. \"You sneaky, sexy girl, Amber,\" she said, smiling as I grinned back. \"That felt bloody amazing!\"\n\n\"Shall I continue?\" I asked.\n\n\"Oh God, yes!\"\n\nI played the vibe over her labia, slipping it between them from time to time. Meanwhile, my mouth worked on her hard little nub at the top. The dual assault worked wonders and Milla was soon writhing beneath me as she orgasmed. However, I didn't let up, and as she started to calm slightly I pushed the vibe deep into her pussy where I wiggled it gently.\n\nShe gave several short cries before a long \"Aiiiiiiieeee!\" wail. I kept the vibrator moving side to side and up and down until she was gasping, \"Enough, enough.\" I thumbed the button immediately and withdrew the vibrator, licking it and my fingers clean of her love fluids before ever so gently cleaning her now very red pussy in the same way. \n\nI moved down the bed to lie beside her and we kissed contentedly. \"I love making love to you,\" I told her.\n\n\"You are a wonderful lover,\" she replied. \"Where did that little vibrator come from?\"\n\n\"Oh, it's mine. I wanted to surprise you with it.\"\n\n\"You certainly did that!\" she laughed. \"I've never used one before; I, well, I 've always been too embarrassed to buy one,\" she confessed, \"but I definitely want to use it again. Let me get my strength back and your cute little puss is on the menu!\"\n\nCHAPTER 10 -- Shopping for Fun and Excitement\n\nWe woke late next morning, both a little tender down below. Not surprising given how little we'd left each other alone last night. We showered together, luxuriating in the spacious walk-in multi-head shower as we soaped and rinsed one another.\n\n\"So, are you up for some shopping?\" I asked Milla as I buttered a piece of toast at breakfast half an hour later.\n\n\"Ooo yes!\" she replied. \"Is there anything you want to buy or shall we just window shop?\"\n\n\"Well, we have dinner here tonight, in the main restaurant, so I thought we ought to buy a suitable posh outfit each so that we can dress appropriately.\"\n\n\"Good idea. Maybe you should look for something in green: it would look stunning with your hair.\"\n\n\"And for you... perhaps deep pink or yellow maybe, with your skin; and one that shows off your fabulous legs.\"\n\nWe took full advantage of the breakfast and left feeling very full. We headed out and northward to Oxford Street, opting to walk on such a warm, sunny day. Despite being Sunday, London was still bustling and I found it slightly disorientating as people hurried and swarmed. I could tell Milla found that too, but this was her first time in London and so not too surprising; I had only been away a few months but found myself looking forward to the relative quiet of our town. I smiled.\n\n\"What is it?\" Milla asked, seeing my smile.\n\nI slipped my arm through hers and snuggled close. \"I love being here but I was just looking forward to being home with you in our quiet little town.\"\n\nIt would be nice to say we visited the chicest designer shops to buy our dresses but we only managed the visiting part; one look at the price tags told us that we'd have to set our sights lower. Neither of us were extravagant in our spending day to day, but then we didn't earn mega bucks either. I struck lucky first with a deep pastel green backless A-line dress, mid-thigh length. I loved it and so did Milla. I also bought a pair of strappy green sandals that matched the dress perfectly.\n\nMilla proved more difficult to buy for. We were going from shop to shop when Milla suggested a detour. I looked across at the shop she was pointing out. \"A sex shop?\" I asked, a little surprised.\n\n\"I'm sure they prefer the term 'Adult Store' -- see, it says so on the sign! Well, shall we?\"\n\n\"Sure,\" I agreed. \"Did you have something in mind or is this just browsing out of curiosity?\"\n\n\"Well,\" her voice dropped to a whisper, \"after the fun we had when you ambushed my pussy with your little vibrator, I wondered if there might be other, er, toys we might like.\"\n\n\"Ooo yes! Let's go and see.\"\n\nThe shop seemed like any other shop -- until you looked at the things on the racks and shelves! We moved through the shop looking at the items on display.\n\n\"A 'butt plug'?\" Milla exclaimed, \"What's that for?\"\n\n\"I guess it does what it says on the tin: it goes up your bum!\" I replied, laughing. \"Hmm, could feel kinda nice...\" I mused, remembering the feel of my vibe against my little pucker.\n\n\"Do you... want to get one?\" \n\n\"Maybe another time,\" I smiled as we moved on.\n\nWe found ourselves stood before a huge display of dildos and vibrators; the range of colours, sizes, shapes and designs was bewildering. Then I caught sight of some items at the right-hand end of the display: strap-on dildos. An image of Milla wearing one and penetrating me, filling me, fucking me filled my mind, making me shiver. Milla felt my tremble. \"Are you all right?\" she asked and I pointed dumbly. She picked up the first one she came to, a large, realistic looking pink penis.\n\n\"I would love you to fuck me with something like that!\" I managed to say.\n\nShe shook her head, a slight look of distaste on her pretty face. \"I don't think I could wear something like that -- it'd make me look like a guy.\" I couldn't help the look of disappointment I gave and she turned back to the rack, replacing the phallus. She continued to look for a few moments before reaching and picking up something else. \"Now this; I think I could wear this for you, if you wanted.\"\n\nI looked at what she held: It was purple, curved with some circular ribs over the surface for stimulation and made no attempt to look like a cock beyond its basic shape. It was also double-ended and had a harness in the same purple colour. The 'outer' end was some six or seven inches long while the one that would go inside the person wearing it was shorter. \"Oh wow,\" I sighed, my mouth dry in anticipation, something that my puss wasn't. \"Would you, my love?\" I hesitated. \"Milla, is it wrong that I want you to fuck me like that? You know, like a guy might.\"",
        "She looked doubtful and replied quietly, \"Amber, do you wish I was a bloke? Would you like it better if I had a cock?\"\n\nI took her hands and held them tightly. \"God, Milla, no, no, no! No, not for a moment! I love you, my wonderful friend and lover, with your beautiful, perfect, sexy, female body,\" I dropped my voice, \"and your gorgeous, delicious pussy. It's just that I do enjoy the feeling of being fucked, penetrated, and the thought of you doing that to me... it would be, oh shit, I'd be in heaven!\"\n\n\"Oh Amber, thank you,\" she said in relief. \"Okay, let's get this.\" It was quite expensive but as we saw the price Milla's only comment was, \"Heaven obviously doesn't come cheap.\" Despite the cost, I did pick up one more item: a little vibrator similar to mine, a little larger and gold coloured.\n\n\"Emergency backup?\" Milla asked.\n\n\"Possibly... or maybe we might want to use them on each other at the same time,\" I suggested mischievously. As we paid for the items the girl looked at us as we stood hand in hand and gave us a knowing smile. \"Have fun, you two,\" she said as she handed us the bag with our new toys.\n\nI went bright red but Milla surprised me by putting her arm around me and saying, \"Oh, we intend to!\" making the shop girl and me laugh.\n\nWe resumed our search for a dress for Milla. Eventually, we found a gorgeous cherry red dress with a tight, short skirt that hugged her hips and legs while the bodice was sleeveless and cut to leave her lower back and sides bare. The satin-like fabric had a wonderful shimmer. Milla wanted to buy a pair of high heeled red pumps to match but I managed to talk her round to a pair of flats: she was already so much taller than me that, with her in heels, I'd feel like a munchkin!\n\nWe stopped in a bar: we were thirsty and more than ready for some time out of the sun and heat and off our feet. It was late afternoon so the bar was relatively quiet. We sat and chatted as we sipped white wine spritzers.\n\n\"Milla, are you really okay with what we bought in that shop?\"\n\n\"You mean the purple one?\" I nodded. \"Yes I am; I'm kind of flattered and turned on that you want me to use it on you. I just, well, I've never done anything like that so I might not be so good at it.\"\n\n\"Just as long as it's you doing it, it'll be magical,\" I reassured her earnestly. \"Shall we head back after this?\"\n\n\"Keen, aren't you?\" she teased.\n\nI laughed. \"Oh, very! But I thought we could try out the Jacuzzi and then have an early dinner and then,\" I leaned in close to kiss her neck and whisper, \"a long, passionate night.\"\n\nMilla said nothing but picked up her glass and downed the remainder in one long gulp. \"Ready?\" she asked, grinning.\n\nIn our room, hot and sweaty from our walk back to the hotel, I headed straight into the bathroom to begin filling the Jacuzzi bath whilst Milla said she'd unpack and hang our new dresses to let any creases drop out. I was sitting on the edge of the Jacuzzi, swirling my hand in the water to make sure the temperature was perfect, when Milla walked in, completely naked save for the amber pendant hung around her neck. I looked at her as she stood completely relaxed.\n\n\"You love being naked, don't you darling?\" I observed.\n\n\"Mmm, yes I do. It feels so free and natural. And right now I want you equally free and natural,\" she smiled as she walked over and began pulling my top off. I stood and enjoyed her undressing me and was soon topless. I turned to turn off the taps and Milla took the opportunity to pull my shorts down, taking the panties with them. Turning back, I stepped out of my clothes to embrace Milla, our bodies fitting together perfectly as I savoured the feel of her skin against mine.\n\nWe separated and I climbed into the bubbling water where I lay back at one end as Milla followed me in. She cuddled up beside me and we began kissing and caressing; her touch was barely perceptible above the tingle of the water jets and bubbles all over my body, but the feel of her slick, wet skin under my fingers was exquisite. We continued like that for some considerable time, content to be close and touch and kiss deeply but our hands gradually but inexorably explored lower, seeking each other's hot, wet pussies. \n\nFingers brushed gently, traced and explored, each mapping the other's intimate contours before slipping inside. Our actions mirrored those of our beloved, our arousal and excitement rising apace. Our breathing became ragged as we panted into our kissing, breath shared. \n\n\"I love you -- so much!\" I gasped, breathlessly and I started to peak as Milla's fingers strummed across my engorged clit.\n\n\"Oh, darling!\" Milla squealed, my fingers plunging deep inside her as I felt her vaginal muscles contract and quiver. We rode our orgasms, holding tight to each other till we arrived in the satiated tranquillity beyond. \n\nWe lay together, happy and content until hunger began to stir within us. We left the Jacuzzi and showered together to wash hair and rinse ourselves clean before dressing. We stood together before the full-length mirror, admiring ourselves.\n\n\"Amber, we make a stunning couple, don't we?\" she laughed and I couldn't help but agree. \"May I take my girlfriend to dinner?\"\n\n\"Certainly not!\" I replied, indignantly and to Milla's confusion. \"I am taking my girlfriend to dinner; my uncle -- my treat!\" I smiled as I offered her my arm. \n\n\"Why, thank you, my darling,\" she said demurely as she slipped her arm through mine and I led the way to the restaurant. As we approached, however, my nerve failed for the first time. Though we had wandered through London unselfconsciously holding hands or arm-in-arm, here in this place I shied from such open affection. Quite simply, I was intimidated and felt guilty for being so.\n\nI let go of Milla's arm. \"I'm sorry,\" I whispered in shame, \"I can't walk in there arm in arm with you. I'm so sorry, it's not you, it's me...\"\n\n\"Hush,\" Milla replied gently, \"It's not you, it's this place: it's a bit overwhelming, isn't it? Don't worry, let's just enjoy our meal.\" I sagged with relief and thanked her before the Ma\u00eetre d' led us to our table. I felt good walking in with Milla, noting the looks we received but wishing I'd had the courage to hold her hand.\n\nThe restaurant and the dinner were spectacular, both the surroundings and the food. We tried new things, often having to ask the waitress for advice, explanation and, for several dishes, translation. She indulged us as a pair of young ing\u00e9nues, always polite and never patronising, even having the Sommelier come over to recommend a wine to accompany the main course. \n\nWonderful as the meal was, we both knew that the highpoint of the evening waited back in our room. As we finished dessert I was becoming more and more aroused in anticipation and without thinking I leant forward, eyes locked onto Milla's. \"I am so wet and horny thinking about you fucking me when we get back upstairs my puss is a complete, soggy mess!\" I told her. Milla's eyes went wide as she looked over my shoulder. I turned and saw that the waitress had come up behind me and was standing close, leaning in to ask if we were finished. The blush on her face told me clearly that she had overheard. \"I'm sorry,\" I blurted out, mortified, \"I didn't mean you to hear...\" \n\nShe smiled at me, recovering her poise. \"Not to worry, Miss,\" she said gently, \"if I had a girlfriend like yours, I'm sure I'd be in the same state.\" I loved her for that reply and immediately mentally doubled the tip I planned. \"Or like you, for that matter,\" she added, tripling her tip!\n\nWe didn't stay much longer after that. As we rose to leave the waitress came over to begin clearing our table and found the tip I had left. \"Have a wonderful night, ladies,\" she said quietly to us with the subtlest of winks that made my cheeks burn but delighted me at the same time.\n\nThe trip up to our room had the same breathless anticipation of the day before and it was all I could do to stop myself from leaping on Milla in the lift and stripping her on the spot. Knowing Milla, part of her would probably have enjoyed that immensely.\n\nOnce in our room, after a brief, passionate kiss, Milla again excused herself to go to the bathroom and so, as on the previous night, I began to undress. I noticed the gold vibe had been placed next to the silver one on the bedside table and hoped that room service hadn't been in and seen them. Just as I climbed onto the bed Milla came out of the bathroom but tonight I was disappointed to see her still dressed. She saw my pout of annoyance. \"Now, now, Amber, she said smiling, \"fair's fair; I undressed you earlier so now I want you to undress me.\"\n\nI didn't need a second invitation and bounced across the bed to stand in front of her, enfolding her in my arms as we kissed. The soft satin touch of her dress against my skin was deliciously sensuous. I was tempted to grind my sopping pussy into her thigh but realized what a mess it would make of the dress so I restrained myself as I reached down to grasp the hem of the dress and drew it up over her head. Neither of us had worn a bra to dinner, so her boobs popped free of the dress with a delightful jiggle.\n\nI moved in to kiss her again. \"No, not yet,\" she warned, \"panties too.\"\n\nI glanced down to her skimpy, dark pink briefs and my eyes widened at the huge bulge inside them. \"You didn't have that on while we were at dinner did you?\" I asked incredulously as I hooked my fingers into the waistband of her panties.\n\n\"Don't be daft you silly girl, of course not! I'm surprised you didn't notice the bulge in my dress just now when you took it off. Oh my god, that looks obscene!\" she exclaimed as I eased her panties down and the purple dildo stood out erect from her pussy.\n\n\"It looks fucking hot! Does the other end feel good inside you?\" I asked as my fingers traced the thin purple straps of the harness as they wrapped around her hips.\n\n\"Mmm, actually it does,\" she replied and squirmed slightly making the dildo -- no, damn it -- making her erection sway and bob. \"Oh! It feels even better when this bit,\" she touched the shaft, \"moves; it makes it wriggle inside me!\"\n\n\"Does it now?\" I asked, a saucy grin on my face, \"Milla, your beautiful erection needs some attention -- and I have had some experience...\" I sank to my knees and kissed the top end of the shaft, pressing it down gently. My tongue extended and I rolled it around the end and moving it in a little circle, hopefully making the end inside Milla do the same. My hope was proved right when she gasped.\n\n\"Oh Amber that feels so nice inside me; don't stop!\"\n\nI took the shaft in my mouth. It was too smooth and too hard to be a guy's cock but not unpleasant and Milla's reaction as I began to face fuck her erection would have made any unpleasantness worthwhile. I glanced up to see her staring down, a look of pleasure on her face. \"I've never been given a blow job before,\" she smiled. \"But nice as this is I want your sexy arse on that bed now; let's fill my darling girl's hot pussy with this!\"\n\nI leapt onto the bed and lay back, my shoulders and head raised up on the pillows, allowing me to watch as Milla climbed on after me and moved between my open legs. She shuffled closer and held the shaft, still wet with my saliva, to the hot willing lips of my pussy. I saw nervous excitement in her eyes and I nodded to her. She placed her hands on my hips then slowly and with an infinite gentleness she entered me. I saw my labia stretch and engulf the tip of the phallus, its colour vivid against the pinks and reds of my pussy. It was thicker than any guy's cock I had encountered but I was so wet that my pussy seemed to take it easily. She glided it deeper and I welcomed her penetration with a contented sigh. She was fully home now, our mounds pressed together and our bodied conjoined by the length of purple plastic.\n\n\"Fuck me, Milla darling,\" I begged, \"Fuck your adoring girlfriend.\"\n\nShe withdrew, hesitated to check how far out she'd come, then drove back firmly, making me gasp at the sensation. She repeated the action, then again, each time becoming more confident. \"Ooo, can you angle up a bit more, darling?\" I asked and she shifted slightly. \"Mmm, just a bit... yes... Oh God yes! Keep doing that!\" I gasped as Milla's thrusts now drove the ridges on the dildo's tip right across my g-spot at each stroke.\n\nA smile grew on her face as she saw the pleasure she was giving me. And such pleasure! The girth of the dildo gave a feeling of fullness and the ribs on my g-spot -- wow! But oh so much more was the sight of Milla doing this to me. No one had ever mattered more or been dearer to me than this beautiful woman and here she was making love to me perfectly as I felt my orgasm building steadily and I found myself panting at each thrust.\n\nHer eyes shining now, Milla moved her right hand so her thumb rested above my clit and began to massage it firmly in time with her strokes. Within a minute my panting had become first gasps and then squeals of pleasure. Milla too was giving little moans and sighs.\n\n\"Oh, Milla -- that's -- so good!\" I cried, \"How is it -- for -- you?\"\n\n\"It's wonderful... The shaft inside me... and a ridge on the harness... right on my clitty.\" \n\n\"Oh fuck!\" I yelled, \"I'm cummmming!\"\n\n\"That's right Amber... Cum for me... squirt for me.\" She cooed as my hips started to buck uncontrollably and my spasming cunt gushed like never before. She thrust hard and deep then began grinding her pussy against me, rubbing her little nub against the harness. A second, smaller orgasm tore through my body as Milla's head went back and her eyes closed. \"Nnnnnn... yessss!\" she wailed, riding her own orgasm, before slumping forward on top of me. \n\nWe slowly recovered. \"Milla, you are the best, sexiest lover in the world; that was the most fantastic fuck ever, do you know that?\" Milla rolled off of me, the dildo pulling from my dripping, mushy pussy with a soft slurping sound. My thighs were sopping, the bed below me was wet and Milla's thighs and abdomen glistened with droplets. \"I have never, ever, cum as hard as that or squirted like that before. You are so, so much better than Max or any boy ever, my darling Milla.\"\n\n\"Thank you; I loved doing that for you, I loved fucking my little Amber. I didn't expect it to be such a workout though!\"\n\n\"Would you like to swap places?\" I asked as my fingers traced circles around her nipple.\n\n\"I think I'd like that my love,\" she replied and we began taking the harness off her. I pulled the inner dildo from her pussy that was now very red and puffy. I bent forward and licked it gently, my tongue caressing it, savouring her flavour. She helped me as I slipped into the harness after which I knelt on the bed looking at my new appendage. Milla was right; every movement was echoed inside me, weirdly making it feel like part of me, despite its lurid colour.\n\nI moved between her legs. I saw Milla biting her lip. \"It looks so big on you,\" she murmured, \"too big...\"\n\n\"We don't have to do this, love,\" I told her, \"but if you want to I'll be as slow and gentle as you were with me, I promise.\"\n\n\"I know you will; it's just... very new. I do want you, though, to... to take me with that.\"\n\nI held the phallus and gently brushed it against her swollen nether lips, starting at the bottom and sliding up to caress the clitoral hood at the top. \"Mmmm that feels nice,\" she said. I repeated the movement several times then began easing the end deeper between the lips at each pass.\n\n\"Are you ready, darling?\" I asked and she gave a short nod. I sought to be as wonderfully gentle as she had been with me. I opened her so softly, her complete wetness allowing my new appendage, my purple cock, to insinuate itself ever further inside. I was ready to stop at any moment but she just smiled as she watched me slip ever deeper in small steps.\n\n\"Oh wow! I feel so full,\" she told me as our mounds finally met. I paused there as we kissed, giving her vaginal muscles time to relax. \"I'm ready,\" she whispered and I began to gently to make love to her with slow strokes, alternating shallow thrusts with deeper ones. Milla squirmed her hips before wrapping her legs around my waist \"Mmm, you can go faster and harder, Amber: I'm ready for it.\"\n\nAnd so I did and we fucked, hard and fast. Milla began to thrust back against me and I heard her breathing become ragged gasps. Her legs clamped hard around me and her head thrashed from side to side as the waves of her orgasm rippled through her. I continued to pump more slowly but, \"No more!\" she begged and I bent forward to hug and kiss her face and neck.\n\nThe strap-on lay discarded at the end of the bed as we lay together, asleep in each other's arms and content in our love. "
    ],
    "authorname": "ScattySue",
    "tags": [
        "romance",
        "bi-curious",
        "flirtation",
        "toys",
        "dildo",
        "seduction",
        "vibrator",
        "anal",
        "lesbian"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/such-a-little-thing-ch-02"
}