{
    "title": "Duplicity Ch. 06",
    "pages": [
        "Hey!\n\nI know I know it's been a while... so sorry for the wait. I swear I try to churn these chapters out quickly but sometimes it just doesn't happen. True, we're all busy and all that jazz but sometimes it just doesn't come to me. I'll stare at my computer screen for hours not knowing how in the hell to start. And then I'll get a little note from an anonymous person saying, \"Where are you?\" or \"Update soon\". And that gives me the little extra boost I need to continue. So whoever you are, out there encouraging me... thank you!\n\nIf you want to know the progress of the next chapter, I'll always leave little updates on my profile page and/ or as a comment at the end of the last chapter (got the idea from Mimirose- hope you don't mind if I borrow it girl!). On that note, I'm SOOO glad to be back... missed you guys. Please let me know what you think of this chapter. Thanks again to honeybree for her awesome editing... I'd be lost without ya!\n\n*\n\nIt must have been a dream.\n\nEverything was quiet and still. The sunlight peeked through the blinds as an intruder enticing her to rise. She was in a drunken haze of sleep, where her eyelids were heavy as bricks.\n\nIt must have been a dream.\n\nThe folds of the rumpled sheets mimicked her confused state of mind, going in every direction but the straight one. She'd slept so soundly, without any disturbance from her unconscious past. She had forgotten what that was like, to sleep so soundly.\n\nIt was the most delicious dream. Merle was there but she couldn't see him. She recognized his voice, his smell, his touch. The way his breath seemed shallow every time he caressed her. The way his full lips traveled down her neck. The way his hands seemed to always find her most sensitive spots.\n\nShe couldn't see him but she just knew it was him.\n\nMerle.\n\nLayla stirred not quite ready to get up. It was then that she felt it, the tell-tale ache between her thighs. Her sensitive breasts softly rubbed the silk sheet covering her. Her pussy still twitched from last night's performance. She let out an involuntary moan as she touched herself. Softly rubbing in slow small circles. She felt a little raw, knowing it was because of the spectacular fucking she had.\n\nShe smiled, enjoying the euphoric aftermath of last night's events.\n\nBeing blindfolded and tied was something she thought she'd never do. To give up control and completely put faith in another; was terrifying and exhilarating. Layla didn't even know it was something she longed for.\n\nShe licked her lips relishing the memory.\n\nHe tamed her body in ways she couldn't understand but always yearned for. In and out he entered her as he made her body sing. In and out he tortured her, stoking her deepest desires to life. The way his hot breath peppered kisses up her inner thighs. How he firmly held her waist down when she thought she couldn't take anymore unrestrained pleasure. In and out his hot pulsing cock seared into her and claimed her as his. Layla let out an involuntary shudder of ecstasy.\n\nIt was more than pleasure she received last night.\n\nIn and out, Merle wove his way inside her body, heart and soul. And with it, left a feeling she never thought possible. She felt...\n\nFree.\n\nLayla smiled. It wasn't a dream after all.\n\nShe stretched and extended her arm expecting to find him still there. But there was no one there, just the lonely expanse of a cold bed.\n\nShe expected to start her day with one of Merle's delicious kisses. She stepped out of the bed and gingerly walked towards the bathroom.\n\nEmpty.\n\nThat's... unexpected.\n\nLayla's hands ran through her hair. There she was, being silly as always, overthinking things. Surprisingly she brushed those negative thoughts away and she got ready for her day.\n\nLanguidly she took a shower, got dressed and headed downstairs.\n\nWhen Layla arrived in the kitchen, she realized there was a flurry of activity in the house. She could hear laughter and muffled conversation coming from the courtyard. The families weren't set to arrive for another week. So it must be the maid of honor Nicole and the best man John.\n\nDay dreaming about Merle would have to wait; there was a long list of things she had to do today.\n\nShe walked toward the voices with her iPad handy. She wanted to meet Nicole and John and go through some pertinent wedding details with them.\n\n...\n\n\"Yo, this place is amazing. Look at the size of this thing. For fucks sake Jason, no wonder you don't wanna come back to New York.\"\n\n\"Thanks man. But you'd be surprised how much we miss the City. Sienna and I will probably head back a couple weeks after the wedding. We want the baby to be born there.\"\n\nSienna linked her arm with Nicole's and skipped a little ahead of them. They stopped and looked at each other and let out an excited squeal. They were both grinning from ear to ear.\n\nNicole sighed and said, \"Oh my God! I can't believe I'm finally here with you. It feels like I haven't seen you in forever.\"\n\n\"I know I'm so happy you're here. I feel like I'm complete now.\" Sienna was elated her best friend had finally arrived. \"Come; let me show you what's been done so far.\"\n\nThey walked around as Sienna gestured. \"So here where we'll be standing, this will be where the cocktails are served. And over there we'll have the ceremony with the backdrop of the sea. And the reception will be under this big tent.\"\n\n\"Oh, very nice.\"\n\nJust then Sienna saw Layla walking out toward them. She smiled at her and called her closer.\n\n\"Nic, John, this is Layla our fabulous wedding planner. She's been a God-send and you are required to do as she says.\" Sienna said as she pointed at John.\n\n\"Hey, I got no problem with that.\" John rang out. \"Mm-hmm. Hello there, gorgeous. I have to say, there's beauty all around this island but you... are by far the most stunning creature I have ever seen.\" John took her hand and kissed the back of it.\n\n\"Whatever you need, I'm available...\" He whispered as his lips hovered over her hand.\n\nNicole muttered something indistinguishable in Spanish. She turned on her heels and walked away with her camera. She busied herself by snapping shots of the view.\n\nLayla forced a smile but it was really a grimace. This guy doesn't waste any time, does he? Ugh, he was barking up the wrong tree.\n\nHe was handsome enough, with his bright blue eyes and blond hair. But he wasn't even close to the man branded in her mind. She didn't want to be rude but she felt like making a puke face and letting him have it.\n\nBut of course she instead said in a professional tone, \"Yes well, there will be plenty to do. I'll need both the best man and the maid of honor help with-.\"\n\nLayla inhaled and exhaled and counted to three. \"Can-I-have-my hand back please?\" She said through clenched teeth. He was really testing her nerves.\n\n\"Oh sure, sure whatever you say sweetheart.\"\n\nAt John calling her sweetheart, Layla straightened herself and unconsciously glanced around for Merle. She wished he was there; he'd probably tell this guy to fuck off.\n\nSienna chuckled and walked over to Jason.\n\n\"What the hell has gotten into John?\"\n\n\"No clue. He doesn't even say shit like that.\"\n\n\"Well apparently he does. Layla is looking at him like he has the plague and Nicole looks like she's about to strangle him.\"\n\n\"My boy just got here and he's already leaving an impression with the ladies.\" Jason chuckled. \"Now all that's left is for Merle to gang up on him. Where is my dear cousin by the way?\"\n\n\"Not sure, I haven't seen him since last night. I hadn't had a chance to tell him Nicole was coming in a little early.\"\n\nSienna and Jason showed Nicole and John their respective rooms. Since they were jetlagged, they agreed to let them rest and meet up again for dinner.\n\nAfter leaving them Sienna decided to go look for Merle and make sure he was ok. He'd been increasingly distant from her. It seemed that spark of excitement of having him back had dwindled. And Sienna, the ever worrisome one, was on edge about the whole thing.\n\nShe walked towards his room and softly knocked once.\n\nNo answer.\n\nShe knocked a second time.\n\nNo answer.\n\nShe knocked again and whispered through the door, \"Please... let me in.\" She didn't know why but she just knew he was in there.\n\nAfter 2 minutes of waiting, Sienna was about to knock again but the door opened. There was no one on the other side which meant he was tucked behind it.\n\nWhen she walked through, she was surprised to see he was just Sean. In broad daylight.\n\nNo disguise.\n\nNot a hint of Merle on him.\n\nJust Sean.\n\nHe looked flushed and was breathing heavy like he'd been working out. He wore a white tank top and black sweats. His forehead had tiny beads of sweat forming and his strong arms glistened.\n\n\"Hey.\" She quietly said.\n\n\"Hey.\"\n\n\"How are you doing?\"\n\nSean nonchalantly shrugged.\n\n\"You want to talk about it?\"\n\n\"Nope.\"\n\n\"Listen I'm sorry I didn't get a chance to tell you Nicole was coming in today. We got a late night call they were on their way here because they caught a more direct route.\"\n\nSean sighed. \"It was bound to happen sooner or later.\"\n\nSilence.\n\nSienna smirked. \"So where is Merle this fine morning? You sent him into early retirement?\"\n\nHe rolled his eyes.\n\n\"Then...\"\n\n\"Needed a little break, that's all. But we'll be ready to go by dinnertime.\"\n\nWordlessly he turned and walked towards the large window. He pulled out a cigarette from a pack on the nightstand and lit up. The agility in which he lit it, took a long drag, and exhaled; surprised Sienna. It was another reminder of how much had changed in the years they'd been apart.\n\n\"Since when do you smoke?\"\n\n\"I don't.\"\n\nThe smoke gently floated from his mouth and nose towards the window breeze.\n\nSienna observed as a turbulent storm brewed in Sean's cloudy turquoise eyes. His eyebrows tightly gathered as he focused on his guarded thoughts.\n\n\"You know the last time I smoked I was with my buddy Mikhail.\" He bitterly chuckled. \"That fucker would smoke in his sleep if he could. I stopped 2 years ago, tried to convince him to do the same but... some things can never change.\"\n\nSienna looked at her brother with concern but felt frustration as he was always so vague. She wished she could just rip this shit he's carrying inside out of him! Being completely powerless to help him was something she wasn't ready to admit. Unfortunately for him, that just renewed Sienna's campaign to get through to him.\n\nShe would not lose him again.\n\nThat was not an option.\n\nIn Sienna's oblivious world, there wasn't a problem that couldn't be fixed and every story should have a happy ending.\n\nSlowly she raised her left hand towards him. The back of it touched his warm cheek but continued and swiftly plucked the cigarette out of his mouth.\n\nSean's eyes flickered towards her impassively; un-phased by her actions.\n\nShe smashed the end and threw the butt out of the window.\n\n\"It's not good for the baby.\" She huffed.\n\nSean shrugged, \"Fuck it.\"\n\nHis blank stare was fixated out of the window. Seemingly out of habit, he played with the lighter, striking it on and off. The clicking noise echoed in the room. She never noticed his room had a perfect view of the courtyard below. It was tucked away so you couldn't tell from looking up. Surely he'd seen Nicole and John arrive.\n\nFinally Sean turned and grabbed the shiny silver flask from his bedside table. As he raised it to his lips, his defiant gaze pierced hers... daring her to say something about it. He chugged some drink down, grateful for its bitter strength.\n\nThey seemed to be in a silent battle. One that Sean was currently winning.\n\n\"Just talk to me Sean... Let me in.\"\n\nSilence.\n\n\"When is the last time you saw him... your friend Mikhail?\" She asked, trying to get him talking again.\n\n\"I went to see him just before meeting you in Athens. He lives in a little town called Oymiakon in Siberia.\" Sean grinned. \"The temperatures there get so cold, your ass tingles even through the thickest layers. I got injured on the way to see him but luckily there are still some decent people in this world. They took care of me and helped me get to where I needed to go.\"\n\nSean briefly smiled at the memory.\n\nSuddenly his eyebrows furrowed. Small droplets of sweat quickly fell down his cheek, one after the other. He softly shook his head from side to side as his eyes widened. \"No!\"\n\nHe roughly grabbed her by the shoulders and Sienna gasped. There was a haunted way in which he looked that unnerved her. His eyes drilled into hers.\n\n\"Listen, if something happens to me he is the only person you can trust. These people that are after me, they're really bad people Cece. They'll stop at nothing to get to me. Mikhail Popov and 423267. Remember that name and that code. He is the only one you talk to. You'll be safe knowing that code. Got it? Tell me. Tell me you'll remember!\"\n\nSienna looked at him in confusion and disbelief.\n\nHe looked... completely helpless.\n\nNot to mention he was almost squeezing her too hard. His strong grasp had his arms' veins throbbing while his right temple ticked in the most distracting way.\n\n\"Ok I got it. Mikhail Popov... 4-2-3-2-6-7.\"\n\nSean deeply sighed. \"Ok. Ok good, good.\"\n\nSienna wiggled herself still in his tight grip. \"Sean...\" She said quietly.\n\nSean's expression quickly changed to embarrassment and fear. He didn't even realize he was holding her tightly. \"Fuck Cece, I'm sorry. I-I-\"\n\nShe forced a bright smile and brushed his comment off; while she quickly rubbed her arms in relief. There was a sliver of fear that coursed through her. Not of him but for him.\n\n\"It' ok Sean. I know this is important. I'm glad to see you're not a skinny little wimp anymore but I can still take you.\" She said to lighten the mood.\n\nSean gazed out the window deep in thought not really listening to her. He wanted to be alone.\n\n\"I'm tired. I think I'm gonna take a nap.\" He gave Sienna the most exhausted look he could muster, hoping it would do the trick and compel her leave.\n\n\"Oh ok.\" She turned on her heels and started walking away. But instead of continuing towards the door she stopped at his bed. She was not leaving him alone.\n\nOh no, the fuck she is not, he groaned inwardly. His dear sister sat right down on his bed, put her feet up and made herself comfortable.\n\n\"You can take your nap while I watch a movie.\" She said grabbing the TV remote while wiggling herself into a perfect spot. Watching movies was always their favorite pastime.\n\n\"The fuck? How am I supposed to fucking rest with that shit on?\"\n\nSienna snorted, \"Please... You can sleep through a hurricane. You won't even know I'm here.\"\n\nSean ran his hands over his face partly in frustration, mostly in surrender. \"Don't you have some wedding shit to do?\"\n\nSienna rolled her eyes. \"That 'wedding shit'... can wait. You're not getting rid of me that easy.\"\n\nSean knew Sienna was as stubborn as they come; a signature family trait.\n\nSean sighed, \"You're annoying as fuck, you know that?\"\n\nSienna smiled and shrugged, \"It's my job. Now go take a shower... you stink.\"\n\nSean couldn't help but chuckle. \"Do I now?\"\n\n\"Yep, you do.\"\n\nSean took a sniff at his armpits and exaggeratedly said, \"I fucking smell like roses.\" His smile got wider as he stepped closer and closer to her.\n\n\"Sean, what are you doing? No, get away from me.\"\n\n\"Don't you dare, Sean.\"\n\n\"I'm warning you! I'm going to kick your ass... if you step any closer to me!!\"\n\nBut Sean just laughed as he reached her. He closed his armpit over her face in a fake chokehold; a move he would often do when they were kids. His soft armpit hairs tickled her nose. Sienna let out a disgusted scream. Her frustration made him laugh even harder.\n\n\"You wanna stay here now, Mmm?\"\n\nHe finally let her go and she gasped for breath. \"Ugh!! You asshole. You're fucking disgusting!\" She said in between breaths.\n\nSean tutted disapprovingly, \"Such language.\"\n\nIn frustration, she punched him in the stomach but flinched when her hand met with what seemed to be a solid wall. Sean shook his head and chuckled.\n\n\"Ouch. Stop. You're hurting me.\" Sean said in a deadpanned voice.\n\nHe started to walk away and said, \"Geez Cece, you used to pack more punch than that. This baby is turning you into a wimp.\"\n\nWith a grunt Sienna threw a pillow that landed directly between his eyes. The pointy edge of the pillow narrowly missed his right eye. With a surprise, he stumbled to the floor and let out a \"Fuck!\"\n\n\"Take that.\"\n\nFrom the floor Sean slowly raised his arms in surrender, similar to how he would when he was 10.\n\n\"Ok ok I give. Truce?\"\n\nSienna mischievously grinned, \"Truce... but you have to kiss my feet.\"\n\n\"Pfff! Please... yea right.\"\n\n\"Well at least go take a shower...\"\n\nSean rolled his eyes and sighed. He mumbled something about her being worse than mom and walked towards his bathroom.\n\n\"Don't forget to scrub... with lots of soap.\"\n\nSean shot her his middle finger before going in the bathroom.\n\nSienna chuckled and a flutter of happiness ran through her. Ok this was progress. This was her Sean; crazy lovable annoying Sean.\n\nAimlessly she flipped through the channels for a movie while she waited for him to come out. She stopped at one where there was a man who ran through the woods in a very cold looking place. There was thick white snow everywhere. The man had been shot and he was running for cover. His white snow boots crunched the hard snow as he ran to a safe place by a frozen river. The man looked tired and was losing energy.\n\nWithin minutes Sienna's eyelids fluttered closed. Before she slipped into a peaceful slumber, she heard the man asking for help to find someone he was looking for.\n\nWhen Sienna woke some hours later, the movie had finished and she was alone. She sighed. What was she going to do with him? She flicked through the channels and briefly thought of the movie she'd been watching. It seemed familiar. But those action flicks were basically all the same.\n\nShe got up and looked for Sean. She checked the gym, the kitchen, the courtyard... and he was nowhere to be found. She asked the housekeepers if they had seen Merle. They hadn't.\n\nThat uneasy feeling was back.\n\nSienna shook her head. Maybe her baby hormones were making her more paranoid than she needed to be... She was sure he was fine.\n\n_________________\n\nLayla walked around surveying the area. She needed to visualize the event in her mind to make sure she covered all her bases. But the truth was she was distracted.\n\nWas Merle regretting their time together? Layla's thoughts ran wild and then she realized she was being unreasonable. As far as she could tell nothing had changed. Merle probably just had some important things to tend to that morning. She concentrated at her task on hand. In the distance she saw a figure moving about in the bar area.\n\n\"Oh, hello!\" Layla called out. \"Eleni, would you mind coming here a minute?\"\n\nThe short plump woman came towards her without hesitation. A permanent smile always graced her softly wrinkled face. Her jet black hair streaked with gray was tightly secured in a low bun. Eleni enjoyed her job as a housekeeper. She was good at it and her employers were kind and fair; nothing like her old job.\n\n\"Yes, Ms. Layla?\" Eleni lightly accented voice was soft and motherly.\n\n\"Would you happen to know where the long measuring tape is?\"\n\n\"Oh no! I'm so sorry Ms. Layla. I borrowed it and forgot to bring it back.\"\n\n\"That's alright, please tell Takis to pick another one up on his way into town this afternoon.\"\n\n\"Ok I'm so sorry for the inconvenience, Ms. Layla.\"\n\nLayla softly shook her head and waved her hand to halt her apology, \"It's ok, really. Not a problem at all.\"\n\nEleni sighed in relief. Suddenly she lifted her index finger as an idea came to her. Her hands were well-worn but feminine. \"But you know... I'm going to ask Mr. Merle if by chance he brought it back.\"",
        "Layla's eyebrows wrinkled, \"Merle?\"\n\n\"Yes, Mr. Merle was kind enough to come to my house and help reinforce some kitchen cabinets. He knows my Kostas had a stroke a couple years back and can't do much around the house. So one day, I mentioned that my cabinet door had fallen off and that my cabinets looked a little loose. Well after that he insisted on coming and taking a look. I begged him not to go through the trouble but he would not listen; he just grabbed the tools he needed and was on his way.\"\n\nLayla was deep in thought. Yea, she could see Merle doing that.\n\nKnowing him, at first he probably threw some things around in frustration. Probably cursed and grumbled at how badly the cabinets were installed in the first place. Then efficiently and patiently, he'd set it right. He probably talked to Kostas for a bit. And knowing Eleni, she probably insisted on feeding him.\n\nThe corners of her mouth couldn't help but twitch; ending in a coy smile.\n\nShe felt her body warm and her breath quicken as she imagined Merle's strong hands securely tightening the wood pieces. She quickly remembered how adeptly those rough hands massaged her thighs and caressed her sweet spot. Unconsciously she licked her lips.\n\n\"He's such a good man. Now I don't have to worry about that heavy wood falling on my Kostas.\"\n\nLayla cleared her throat and uncomfortably shifted her feet. \"Well I'm glad he was able to help.\"\n\n\"Did you need anything else Miss?\"\n\n\"No that's all Eleni, thank you.\"\n\nAnd with that she walked away unsuspectingly leaving Layla hot and bothered.\n\nDinnertime came around and Layla was on her way to the dining room. She walked down the hall and heard some arguing coming from what she knew was Nicole's room. The voices were muddled but distinguishable.\n\n\"... what you wanted... make up your fucking mind!\" John's voice boomed.\n\n\"Such an ASSHOLE!!\" Nicole screamed.\n\nLayla shook her head and chuckled but kept walking. As she approached the dinner table, she realized she was the first to arrive. She walked around the large table, idly running her hands on the backs of the chairs.\n\nShe shook her head. She had to snap out of it, this couldn't be healthy. She was currently residing in La La land. As she chastised herself, Sienna and Jason arrived.\n\n\"You hungry?\" Jason asked.\n\n\"I am. Did you cook?\" Layla jokingly asked.\n\n\"Yea right. Let me tell you, this man would cook these amazing meals in New York. I'm talking... take a picture-and- ask for the recipe- good. But here? He barely makes his own sandwich.\"\n\nSienna's eyes twinkled as she looked at Jason. She'd talked to him earlier about Sean's behavior. Jason wisely told her to not rush him. It was important to let Sean take his time opening up and that she should have faith that everything would be ok. Sienna smiled. Jason always knew what to say to make her feel better.\n\n\"Hey what can I say? In New York I had to pull out all the stops to impress my lady, right?\"\n\nThey all chuckled and Jason whispered something in Sienna's ear. She gasped and smacked his shoulder. \"You're so bad.\" She replied. Jason brought her close and gave her a deep kiss momentarily forgetting Layla was there.\n\nLayla smiled and tried to give them privacy. This was why she became a wedding planner.\n\nA subdued but tense John and Nicole arrived and they all took their seats. John sat next to Jason and Nicole sat next to Sienna and Layla sat towards the end next to the empty seat.\n\nImmediately Angela the head cook and her assistant brought out several piping hot dishes and carefully set them on the table. The food smelled so good. There was rack of lamb, shish-kabobs, mousaka, rice, steamed vegetables, salad and pita bread.  \n\n\"I hope my cousin makes it down in time for dinner. I don't know if I wanna save his ass any of this good food.\"\n\n\"Oh that's right; you said your cousin was here already. What's his name again?\" Nicole asked.\n\n\"His name would be Merle.\" A deep voice said as it approached them.\n\n\"Merle! Oh thank goodness! You made it just in time.\" Sienna's voice still held traces of worry.\n\nMerle came up and gruffly took a seat next to Layla at the end of the table. Layla looked at him and smiled but he looked straight ahead. Layla could almost feel the chill coming from his direction.\n\n\"John, Nicole, this is my cousin Merle.\"\n\n\"Nice to meet you.\" Nicole said. John nodded in greeting.\n\nMerle was silent and wore a bored expression.\n\nAs everyone dug into the food and lightly chatted; Layla and Merle were quiet. Layla felt her frustration build. What was his problem? Such an ass. She could just as easily ignore his moody behind.\n\n\"How come I've never heard about this cousin of yours?\" John quietly asked Jason.\n\nJason already had an explanation ready for him. \"I never kept in touch with the Bane side of the family, hadn't seen him since I was little. But we recently reconnected after my father's conviction. If anyone from that side will be at the wedding, I'm glad it'll be him.\"\n\nSeemingly content with his answer, John nodded. But after a while he asked, \"I thought your father was an only child.\"\n\nOh crap, Jason thought. \"Huh? Oh he is. Merle's mother is my grandfather's youngest sister. She had him late in life. So I guess Merle would technically be my second cousin.\" John pondered on his words and slowly nodded again.\n\nNicole silently observed Merle while she intermittently chatted with Sienna. He had this familiarity to him she couldn't quite place. Maybe she'd run into him somewhere in the City.\n\n\"So Merle, what do you do for a living?\"\n\nMerle slowly looked towards the voice that asked the question and smirked. He knew where this was going. His old friend Nicole was so predictable... not to mention a pain in the ass.\n\n\"Why, you hiring?\"\n\n\"Just curious. You seem so familiar to me.\"\n\nNo one noticed Sienna stiffen or how Jason's eyes widened.\n\nBut Merle noticed. He chuckled and took a long drink from that trusty flask. He perused Nicole's features. It was surreal seeing and talking to her again. Her piercing brown eyes and pouty mouth never held back on what she thought of you. She sported that familiar look, intently looking at him as if figuring out a puzzle.\n\nMemories flooded back into him, some good and some bad. And surprisingly, he was ok with it.\n\nHe cleared his throat. \"I'm a retired Marine.\"\n\n\"Really?\"\n\nHe raised his flask in salute towards her. \"Really.\" He took another drink.\n\nJohn snickered under his breath but covered it up with a cough.\n\nThis motherfucker... \"You got something to say pal?\"\n\n\"Merle...\" Sienna warned.\n\n\"No but I'll be sure to let you know as soon as I do.\" John quickly countered.\n\n\"Just say what you wanna say with your pussy ass. Nobody's stopping you.\" Merle coolly answered.\n\n\"Calm the fuck down... both of you.\" Jason interjected.\n\n\"The fuck did you just call me?!\"\n\n\"You heard me, you-\"\n\n\"Just seem soo familiar to me... You sure we haven't met before?\" Nicole asked, ignoring the tense interchange.\n\n\"The City is a big place, Nic.\" Sienna remarked.\n\n\"No, I know. I can't think of it now but it'll come to me.\"\n\nMerle looked at Nicole and grinned as a thought came to him. \"Well, I do work part-time security at an adult super store on Mercer and 8<sup>th</sup> Street called Naw-T by Nature.\"\n\nSilence.\n\nEveryone erupted in laughter.\n\nNicole's face flushed red in embarrassment. She covered her face and chuckled. \"Yep that's probably it.\" Merle laughed quietly because he recalled from his home surveillance check-ins she was a frequent customer.\n\nAfter a content moment of silence, they resumed eating their food. Everyone except John, who was still pissed and deep in thought.\n\n\"No fucking way this guy was a Marine.\" He said under his breath.\n\nIt was so quick; if you blinked you would've missed it. With swift agility Merle grabbed his sharp steak knife and hurled it towards John. The offending object stabbed a wedge of pita bread on the tray that lay a few inches in front of him. There was a collective gasp.\n\n\"You mind passing me a slice?\" Merle smiled innocently.\n\nThe color on John's face momentarily drained but was quickly replaced with a light pink color... as he became completely enraged. His fists vibrated and his knuckles turned white.\n\nSilence\n\n\"Let's go for a walk John.\" Jason's voice sliced through the tension. \"Come on. Let's walk it off.\"\n\nSienna silently bit her nails observing the scene while Nicole polished off the rest of her dinner as if nothing had happened.\n\nJohn roughly got up, slammed his chair and stalked out of the room.\n\nJason shot a warning glare and pointed at Merle. \"That... was unnecessary. You need to calm the fuck down.\" His tone brokered no argument. He kissed Sienna on the cheek, whispered something in her ear and walked after John.\n\nMerle's fists clenched as he tried to compose himself. He breathed deeply and evenly. Through the haze of his anger, he felt a soft touch.\n\nHe looked down and realized Layla's delicate hand rested on top of his.\n\nFor the first time all day, he looked into her eyes. Everything slowed down and blurred around them.\n\nThis is why he needed to ignore her.\n\nIt was so easy to be rendered powerless in her presence. Her beautiful bright eyes held his in concern and silent strength. She squeezed his hand and he felt himself calm for the first time all day. Merle's thumb lightly rubbed hers in appreciation.\n\nSienna shook her head in disgust. \"Have you lost your damned mind?! You better change your attitude and quick. You hear me?\" Her voice was stern. She didn't even flinch as she stared Merle down. In that moment Sienna was the spitting image of their mother Sharon, when they'd finally gotten on her last nerve.\n\nMerle pursed his lips, slightly nodded in acknowledgement and finally looked away.\n\nNicole looked at Sienna in admiration and was taken aback. Her best friend was not usually so direct with people. Maybe it was true what they said about baby hormones and Mama Bear instincts.\n\nNicole gave Merle a toothy grin. \"Welcome to the family.\"\n\n_______\n\nOutside in the courtyard, John furiously stalked from side to side like a tiger in a cage. Jason observed him while he poured them a drink from the bar.\n\n\"What the fuck Jay! Are you sure this guy is your cousin?\"\n\nJason sighed, \"Yes John. Why the fuck do you keep asking that?\"\n\n\"Listen man, I'm your best friend. It's my job to watch your back. And something just ain't right with that dude.\"\n\n\"You worry too much.\"\n\n\"I worry too much? It seems like you don't worry enough. If you haven't noticed you're fucking rich, man. It would be too easy for some joker to pose as a long lost family member to swindle money out of you.\"\n\nJason slowly exhaled. This was what he was afraid of. John was fiercely protective and knew everything about him. He would have to make some shit up and quick... before Merle's identity was compromised.\n\n\"John man, I appreciate your concern. But do you think I'm stupid? When Merle and I were reunited, I told him I wanted to research our lineage to complete our family tree or some shit like that and I would need his DNA. So I swabbed him and sent it to the lab; to make sure we were really related. You're my best friend man, my brother. So I need you to get along with little family I have left.\"\n\nJohn looked surprised and his features softened. He inhaled and exhaled. \"I'm sorry man... I guess I was totally off-base. I've just been on edge lately.\"\n\nJason clasped his shoulder. \"It's alright man.\"\n\nThey drank their Scotch in silence.\n\n\"So does little Miss Nicole have anything to do with you being on edge lately?\"\n\nJohn's guilty expression and silence was enough of an answer.\n\n\"Right. Ok well all I'm gonna say is, be careful with that one. You need to chill out man, relax; always on edge and shit. I'm getting married, you're my best man, and we're on a beautiful island. Just enjoy it. Tomorrow I'm gonna take you to the beach so your pasty ass can get a tan.\"\n\nJohn laughed. \"Alright man. That sounds good.\"\n\n__________________\n\nAfter a little while Merle felt his lonely hand cool. He looked to his side and realized Layla was gone. He'd been thrown off base with Nicole's welcoming him to the family. Merle sighed and silently left the table.\n\nHe shot a glance towards Sienna. \"Good night Merle. We'll talk tomorrow,\" was all she said.\n\nMerle stopped outside Layla's door and hesitated in knocking. He paced up and down the hall, muttering to himself, pondering on what to say.\n\nHe knew she was probably angry at him but he needed to explain. Give her some kind of an explanation. He needed to tell her how much last night meant to him. Tell her the truth. He laid his forehead on the door seemingly conflicted. But there was no way he could tell her everything now, there was too much going on.\n\nHe had to tell her. All or nothing.\n\nAfter a couple of minutes, he braced himself and knocked on the door.\n\nNo answer.\n\nHe knocked again. \"Come on Layla, open up. I just want to talk.\"\n\nNo answer.\n\nWas she that mad at him? If she would only open the door, he would tell her.\n\nHe banged on the door. \"Open up sweetheart.\"\n\nHuh.\n\nNo answer.\n\nShe obviously didn't want anything to do with him.\n\nMaybe it was best this way.\n\nThis whole situation was already so fucked up. What did he think? He would tell her the truth. Oh hey sweetheart, guess what? I've been pretending to be a completely different person the whole time we've been together. I'm actually the bride-to-be's dead brother... who is running from the U.S. government... and Al Qaeda terrorists. Oh and I think I might be I'm falling in-.\n\nMerle shook his head and bitterly chuckled. So fucked up.\n\nNo. This was good. The less she knew the better, the less danger she would be in.\n\nHe didn't need another distraction. He would never forgive himself if something happened to her. That was it, he made up his mind. He'd just have to make a clean break. Merle sadly looked at the unresponsive door; this would obviously be harder on him than her.\n\nHe knocked again.\n\nNo answer.\n\n\"Fuck it!\" He huffed. He walked away and slammed his bedroom door.\n\n...\n\nFive minutes later Layla walked down the hall.\n\nShe'd decided to make a stop at the kitchen before going to bed. Her arms were full of bounty of junk food... a necessary companion tonight. She had ice cream, whipped cream, chocolate bars, marshmallows, gummy bears and potato chips.\n\nThere was enough to feed an army. And she didn't have a twinge of remorse about it either.\n\nShe didn't know why she felt the need to put her hand on Merle's at dinner. She couldn't help it. When she realized what was happening, it was too late.\n\nIt was just like two magnets that got a little too close. Kind of like them.\n\nLayla shook her head. She didn't want to think about that now. Tonight she would have a good old fashioned pig out.\n\nShe shrugged. Tomorrow morning she'd just work it off in the small gym she'd found down the hall."
    ],
    "authorname": "partial2passion",
    "tags": [
        "interracial romance",
        "black woman",
        "disguise",
        "siblings",
        "secrecy",
        "travel",
        "drama",
        "white man"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/duplicity-ch-06"
}