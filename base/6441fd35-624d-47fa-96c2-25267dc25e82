{
    "title": "An Innocent Connection Pt. 02",
    "pages": [
        "Story picks up where Part I leaves off. (For background, read Part I first.) \n\nCopyright 2020 \n\nAll rights reserved \n\nConstructive comments appreciated. \n\n****************************** \n\nSamantha drove on for the next couple of hours. Both Brittany and Sarah woke up naturally as the sky brightened. \n\n\"How's the drive going Mom,\" asked Sarah. \n\n\"It's been fine, Honey. How did you sleep,\" asked Samantha. \n\n\"Pretty good, I guess. Britt, did you sleep okay,\" Sarah asked. \n\n\"Yeah, actually. I don't feel too bad. I'm kind of hungry,\" said Brittany. \n\n\"I'm hungry too, and I need to get one of you awake enough so you can take over driving,\" said Samantha. \n\nThey pulled off at the next exit and got a booth at a little diner. Samantha smiled at the two friends with their typical banter, sharing one side of the booth, each looking properly disheveled after a night sleeping in a moving car. \n\n\"Sam, I can take the next shift in driving, if you want,\" said Brittany and the color immediately drained out of Samantha's face. \n\n\"OH MY GOD BRIT, you just called my mom Sam! You're SO random,\" exclaimed Sarah. \n\n\"Uh, sorry, Mrs. G. Not sure why I called you Sam,\" said Brittany and looked up at Samantha embarrassed and with a confused look on her face. \n\n\"It's no problem, Brittany, don't worry about it. And yes, it would be great if you could drive,\" said Samantha and then tuned out as the girls resumed their conversation. \"She called me Sam,\" thought Samantha, \"Oh shit...\" \n\nSamantha subtly brought her right hand to her nose and took a tentative sniff. The unmistakable scent of Brittany's vagina was still evident. The suppressed memories of the previous night came flooding back. Had she really fondled and fingered a sleeping girl to orgasm? What was wrong with her?!? She felt sick to her stomach. \"Excuse me, girls, I need to go wash up,\" said Samantha. \n\nShe closed and locked the restroom door, and then looked at herself in the mirror. She called me Sam. Does she remember what I did to her? Was she looking at the reflected image of a rapist? Was she any better than some dude slipping roofies into a girl's drink and taking advantage of her? She brought her fingers back to her nose and again inhaled Brittany's scent. God help her, it smelled GOOD. It smelled sexy, and she felt a stirring in her loins. Samantha closed her eyes and inhaled again, remembering the feel of the girl's slippery twat as she fingered it. She put her fingers in her mouth and sucked them, remembering how drenched they were after bringing her off. \n\nThen a knock at the bathroom door broke her out of her reverie. She stared at her reflection sucking on her own fingers like some kind of fiend. \"Just a minute,\" she called and quickly washed her hands with soap and water. \n\nTheir food had arrived when she returned to the table. As she ate her own meal, her eyes were drawn to Brittany as she ate. She was mesmerized by her, especially her beautiful little mouth as she ate her pancakes. How her tongue slipped out to lick the syrup from her lips. What would it be like to kiss those full lips? She could almost taste the maple flavor on her own tongue as she watched the young girl eat. What would those lips, and those teeth feel like on her nipples? Would she suckle them or nip and bite at them? Samantha's nipples became hard at the thought. \n\n\"Earth to Mom, come in, Mom,\" said Sarah, shaking Samantha out of her daydream. Samantha involuntarily moved her arm across her check to hide her hardened nipples. \"I was talking to you, and you were just staring off into space.\" \n\n\"Sorry, girls. I'm a little out of it. I need a little sleep, and I'll be fine,\" said Samantha. \n\nThey finished their meals and gassed up the car. Brittany got behind the wheel, and Samantha got in the back seat and promptly fell asleep. \n\n# \n\nSamantha awoke with a start when she sensed the car's engine turn off. She sat up to see they had arrived at the budget motel where they would be spending the night before the girls could move in the next morning. \n\n\"I'll go see if we can check-in. We're a little early, but hopefully our room is already available,\" said Samantha as the girls wandered off to explore. \n\nTheir room was available, and as Samantha returned to the car, the girls walked up. \n\n\"There is a tiny pool and a few deck chairs over there. At least it's warm out, maybe we can just go hang out for a while and nap outside,\" said Sarah. \n\n\"Good idea. Let's just grab whatever we need from the car for tonight, and then get changed,\" said Samantha. \n\nThe room was small, and a little run down, as one would expect from a budget motel just off the interstate, but the two double beds were firm enough. Samantha laid back on her bed, the one closest to the door, as the girls chatted and pulled out their swimsuits. \n\nBrittany went into the bathroom first and came out in a small but tasteful black bikini that contrasted nicely with her blond hair and white skin. When Sarah went in to change, Brittany studied herself in the mirror. Samantha picked up a tourist pamphlet and pretended to read it. Brittany's eyes first checked her front, and she pulled the swimsuit bra up a little to help accentuate her chest. Then Brittany turned to the side for a look at her profile and finally looked over her shoulder to check out her butt. Samantha thought she looked terrific. Fantastic in face, in a way that only young women could, with no sag anywhere, and no inkling that anything would ever sag. \n\nAs Samantha surreptitiously watched, Brittany spread her stance, bent at the waist, and grabbed her ankles to stretch. First straight down, then to the left, then to the right, then again straight ahead. Samantha couldn't take her eyes away from where Brittany's legs met as she stretched. She really wanted to see what she looked like without those bottoms on. Sam remembered the sensation of running her fingers through her wet, protruding lips, but what did they look like? Were her lips the same light color or were they a darker pigment? She felt her nipples twitch at the prospect. \n\nSarah came out of the bathroom in her conservative one-piece suit. \"It's about time, let's go,\" said Brittany. \n\n\"Don't forget the lotion,\" said Samantha, now back in Mom Mode. \n\n\"I already got it. Are you going to come out, Mom,\" asked Sarah as she and Brittany grabbed oversized t-shirts to wear as cover-ups. \n\n\"Yeah, I'll be out shortly. You guys go ahead, I'll meet you there,\" said Samantha as the girls headed out. \n\nSamantha took her time, putting her things in order. She laid out a white sundress and thong underwear with matching bra that she was planning to wear to dinner that night and then pulled out her own bathing suit. \n\nShe kept herself in good shape and could still pull off a two-piece suit, just maybe not as skimpy as the one Brittany was wearing. Samantha pulled off her shorts and underwear and stepped into her bottoms and pulled them up, nice and snug against her crotch. As she checked her look in the mirror, she checked her bikini line and was glad she remembered to schedule her Brazilian wax before they left. Next, she pulled off her top and unhooked her bra, and her large breasts were released. Her mind flashed to the previous night with Brittany's pale breasts exposed in the moonlight. She looked at her own and lifted them slightly to account for gravity and then turned to the side to check herself in profile. Her husband liked to teasingly call her a MILF, but she would be lying if she didn't approve of what she saw. She was pretty hot for a mom, even if she did say so herself. \n\nSamantha glanced down to see Brittany's duffle bag on the floor. Sitting just inside the unzipped bad were the crumpled panties the girl had been wearing the night before. As Sam stared at the undergarment, she absentmindedly brought her right had to nose and sniffed, but all of Brittany's scent had disappeared. Samantha's mouth watered, and her tongue felt thick as she reached down and plucked the underwear from the bag. She tentatively brought them to her face and inhaled. Brittany's aroma was strong. Her other hand stroked her slit over her bikini bottom as she took another sniff. Delicious! \n\nThen she heard the motel room door rattle and quickly dropped the panties back into the duffel bag. Samantha stood there guiltily as Brittany came through the door. \n\nBrittany looked up to see the topless Samantha standing in front of the mirror. Brittany's eyes were naturally drawn to Samantha's chest. She looked back up at Samantha's face and said, \"Sorry, Sam- er, a Mrs. G. I forgot my earbuds and just came back to get them.\" \n\n\"No problem Brittany, I was just getting changed,\" said Samantha, still standing there topless, daring Brittany to look at her. \n\n\"Yeah, I see. You may want to put a top on. There's a creepy old guy out there who would enjoy the view, but I don't think it's a clothing-optional kind of place,\" chided Brittany. \n\n\"Yes, of course. Sorry,\" said Samantha as she reached for her top. \n\nBrittany watched the graceful pendulum swing of Samantha's large breasts as she bent over to get the bikini top. \"Okay, I'll see you out there in a few,\" said Brittany as she turned and left the room and Samantha fixed her top. \n\n\"What in the actual fuck has gotten into me,\" Samantha asked herself. \"I was literally standing here sniffing panties. I should be locked up.\" \n\nShe shook her head in disgust, then grabbed her sunglasses and pool bag with a magazine and headed to the pool. \n\nThe girls had saved a chair for her and were chatting idly as she sat down. \"Did you remember the sunscreen,\" asked Samantha as she opened her magazine. \n\n\"Yeah, Mom, Britt just did my back, and I'm about to do hers,\" said Sarah. \n\nSamantha's eyes hidden behind sunglasses, peered over her magazine as Brittany lay face-down on her lounge chair. She watched as Sara rubbed the lotion into Brittany's back and then up to her shoulders. Sarah was careful to slide her hand under Brittany's bra strap. She got more cream and rubbed it onto her lower back, sliding her hands slightly under the waist of her bottoms. Samantha glimpsed the start of the crack of Brittany's tight little butt as the lotion was applied. Samantha was mesmerized. \n\n\"All done,\" said Sarah. \n\n\"Could you do the backs of my legs, please? It's hard for me to reach,\" said Brittany. \n\nSarah sighed and grabbed the bottle of lotion. She ran a thin trail of lotion from Brittany's ankle up the back of her leg to her thigh and then did the same to the other leg. Then Sarah worked from bottom to top, massaging the lotion in. When Sarah got to Brittany's thighs, she worked the sunscreen down the outside of her leg. And then the inside. Samantha could hardly breathe as she watched this innocent display of friendship, and projecting onto it her own growing sexual infatuation with this girl. \n\nAs Sarah moved to the other leg, Samantha imagined her own hands on young Brittany, sliding her hands up the inside of her thigh. Brittany would part her legs slightly to give her better access. She would push her hands ever closer and see the outline of the young woman's labia through her swimsuit. Maybe she would slide a finger inside the back of the swimsuit and stroke those lips. Maybe Brittany's body would react, pushing back against her hand to get more contact. Maybe... \n\n\"Mom, do you want lotion,\" asked Sarah, breaking the trance. \n\n\"Thanks, Honey, yes, please,\" replied Samantha, and took the bottle. \n\n\"I've got to get ahold of myself,\" Samantha thought to herself. She applied her own lotion to her legs, stomach, and chest, wondering (hopefully?) if Brittany was watching her do it behind her own sunglasses. \n\nThe three of them enjoyed a leisurely afternoon by the pool. As Samantha laid on her back, the sun warmed her. Despite the lingering guilt she felt about the night before and her subsequent flights of sexual fantasy, Samantha felt newly invigorated and free. Sam had never felt sexually repressed, but realizing she still had sexual fantasies (new ones at that) was exciting. She never would have guessed she would be so turned on by another woman. \n\n\"Mom, we're going to head in and get cleaned up for dinner,\" said Sarah as the girls packed up. \n\n\"Okay, I'm going to stay a bit longer, then I'll be in,\" said Samantha. \n\nSamantha gave the girls 45 minutes to sort themselves out, then joined them back at the room. \"Hurry up, Mom, we're starving,\" said Sarah as soon as she walked in. \n\nBoth girls looked fresh and clean with a bit of a glow about them from an afternoon in the sun. Each wore tight jeans shorts, with Sarah in a v-neck blouse and Brittany sporting a cute cropped top, showing offer her taut tummy. \n\n\"I won't be long,\" said Samantha as she dropped her sunglasses and bag and went into the bathroom to shower. The bathroom was still steamy from the girls' showers and even more so when she was finished. Samantha cracked the door when she had finished and started to dry off with the last of the small, cheap motel towels. As she put one leg up on the toilet, she glanced out of the bathroom through the door crack and saw Brittany watching her. Brittany quickly looked away. \n\nSamantha finished drying off and wrapped the towel around her as best she could and then walked out of the bathroom to where she had laid her clothes for the evening. She knew very well that her butt was barely covered, and she had to keep one hand holding the towel to keep it in place. Samantha wondered if Brittany was checking her out as she stood there, barely covered. She reached down for her thong underwear with her free hand, but quickly realized she wouldn't be able to gracefully put them on while keeping the towel in place. She stood with her back to the girls and let the towel drop, then bent to step into her thong, and pulled it up snugly. She knew she wasn't as flexible as Brittany, but anyone watching her from behind would have gotten the full view of her waxed slit. \n\nSamantha glanced at the girls as she bent to pick up her bra. Brittany seemed to be concentrating very hard at the same tourist brochure Samantha had (not) been looking at earlier in the day. Samantha made of point of walking in front of the girls before she put on her bra. The bathroom door was still ajar, and the mirror on the door was a perfect angle so that Samantha could see the girls sitting on their bed. Samantha decided to do a little test. Still topless, she raised her arms over her head and then back, as if to stretch out her back, and thereby forcing her chest forward. As she went through the stretch, she watched Brittany watch her, her mouth opened slightly. \n\nSamantha continued with her hair and a bit of makeup. She was sure to subtly bend and contort, all the while watching for Brittany's involuntary reactions. She couldn't help but notice Brittany's foot nervously tapping the longer the show went on. \n\nFinally, she slipped her sundress over her head. \n\n\"Okay, girls, I'm ready,\" asked Samantha, grabbing her purse. \n\nSamantha enjoyed a few glasses of wine with dinner, allowing the girls to help themselves as well. All three of them were a little giggly by the time a shared dessert arrived. \n\nAfter they finished their meal, Samantha excused herself, grabbed her purse, and stood to go to the restroom. Samantha felt good. She felt a little buzzed and she felt good about being the object of desire. She felt eyes upon her as she made her way through the restaurant. She made eye contact with an attractive dad having a meal with his family and then the man's son who couldn't have been more that 16-years-old. Their leering gaze only enhanced her excitement. \n\nAs she sat in the stall, she looked into her bag and then pulled out the wadded up napkins and remembered where they came from. She carefully opened up each and then brought them to her face. One was her own well-known scent. The other had also started to become familiar. It was an exciting smell, a taboo smell. \n\nShe dropped her own napkin in the toilet and flushed, then neatly folded the other and put it back in her purse...for later. \n\nUpon getting back to the room, their girls put on pajamas and crawled into bed, winding down on their smartphones. Sarah in her standard baggy t-shirt and shorts, and Brittany in her big sweatshirt and oversized sweatpants. Samantha grinned to herself, remembering pulling up that sweatshirt and exposing Brittany's beautiful breasts to the moonlight. She was making herself horny thinking about it. Oh, what she wouldn't give for another opportunity with Brittany! \n\nSamantha got up to put on her own sleepwear but realized she had forgotten them in the car and didn't feel like going back out to get them. Instead, she grabbed an old undershirt from her pool bag and went into the bathroom. After brushing her teeth, Samantha pulled off her bra and slipped on the t-shirt. In the small bathroom mirror, she could see her face and upper body. Her breasts were on full display through the worn white shirt. She looked down and could see her tummy was showing above the waistband of her thong. As she checked herself out by looking over her shoulder, she thought she looked good, looked sexy. More importantly she FELT sexy. She knew she would have hesitated to wear this little outfit to bed with her husband, but it excited her to think Brittany might enjoy seeing her in it. She left the bathroom light on and walked out into the darkened room to her bed. The girls had turned off the reading light over their bed. Sarah got up and went into the bathroom as Samantha came out. \n\n\"You're wearing that,\" asked Sarah. \n\n\"Yeah, my pjs are in the car. I'm wearing this unless you want to go out and get them for me,\" replied Samantha. \n\n\"No thanks,\" said Sarah as she went into the bathroom and closed the door. \n\nSamantha sat on the side of her bed, temporarily alone in the room with Brittany, and repeated her 'back stretching' exercise, purposely not looking at Brittany while she did it. Then she stood up and made a big production of bending at the waist to get her magazine from the pool bag. Sam felt the thong stretch across her slit as she did it. When she stood up, she glanced at Brittany who appeared to be a little red-faced. \n\nThen Sarah came out of the bathroom and Samantha climbed into bed with her magazine, and Brittany went to the bathroom to brush her teeth. \n\nWhen Brittany returned, both girls put their phones down and appeared ready to sleep. Samantha turned off her own reading light so as not to disturb them, even though she wasn't yet ready to sleep. Not even close. It was her turn to feel pent up and frustrated. \n\nSamantha pulled the folded napkin from her purse and pretended to dab her nose with it as she revisited the sweet musk. She contemplated going into the bathroom for a quick wank. \n\nShe looked over at the girls, faintly illuminated by the moon shining through a small opening in the window curtain. Samantha was undeniably aroused but wasn't sure what to do about it. There was a certain excitement in the freedom of being away from home. Tonight, she didn't feel like a mom, she felt more like a sex maniac. She had used her ESP power to discover Brittany's desires for her. Then she used it to safely fondle a sleeping girl, and she felt guilty about that. But she also wanted more, and that's all there is to it. She wanted to explore Brittany's body again, but also really wanted Brittany to study hers as well. \n\nShe quietly slipped from her bed and stood in front of the window, carefully opening the curtains to spill the moonlight across her bed. She looked out on the motel parking lot, lost in thought. Brittany is off to college tomorrow. Maybe just one more time. Perhaps that would be enough. She again brought the napkin to her nose. Maybe just one more time. ",
        "# \n\nSamantha got back into bed and pulled the sheet and blanket up to her chin. Then she took a deep breath to quiet her mind. Then she reached out to Brittany, trying to make the subconscious connection. But there was no response. She heard Brittany turn over, so she must not yet be asleep. She reached out to Sarah instead. \n\nSamantha: Hi, Sweetheart, how are you doing. \n\nSarah: I'm fine, Mom. It feels good to be sleeping in a bed. \n\nSamantha: Yes, it does, doesn't it? Is anything bothering you? \n\nSarah: No, not really. It seemed like Britt was staring at you a lot today. I mentioned it to her once, but she said she wasn't, so I dropped it. But it was a little weird. She's always paid attention to you, but I always thought it was because you are the 'cool mom'. But she seemed to be watching you really intently when you were getting dressed for dinner. It just seemed different, that's all. \n\nSamantha: I'm sure it's nothing, Honey. Don't let it bother you. Certainly, don't let it interfere with your friendship. You two will be off on your college adventure starting tomorrow, and this broken down 'cool mom' will be back home. \n\nSarah: Oh, please. Broken down? I can only hope to be as hot as you are when I'm your age. Seriously. \n\nSamantha: That's sweet of you to say, Honey. \n\nSo Brittany WAS checking her out, even her daughter caught it. Maybe she shouldn't feel so guilty about last night's encounter after all. \n\nSamantha again tried to reach out to Brittany, this time connecting with her subconscious: \n\nSamantha: Brittany. Love, are you there? \n\nBrittany: Ah, Sam, you came back! I'm so happy. You excited me SO much today, I can't even tell you. \n\nImages swirled into Samantha's mind. She could see herself through Brittany's eyes, standing topless in the motel room. Then to the pool deck where she saw herself rubbing sunscreen into her chest and her glistening tummy as she lay in the Sun. Then dropping the towel to put on her underwear, and her 'back stretches'. And then to an image of Samantha walking away at the restaurant with eyes trained at her ass and with her dress appearing much shorter than it was in reality. And the images culminating with seeing Samantha bend at the waist and seeing her prominent slit outlined against the stretched gusset of her thong. Brittany viewed Samantha as an object of true sexual desire. On that score, they were even. \n\nSamantha: So you like my body, huh? \n\nBrittany: Oh my god, yes! I want to touch you all over. With my hands and my mouth. It gets me SO hot to think about. \n\nSamantha: You know what? I would really like that too. I really loved playing with you, but I would love to feel your touch. \n\nBrittany: Really? I wouldn't know what to do. I'm sure I would be bad at it. I would disappoint you. \n\nSamantha: I don't believe that for a minute. I had never touched a woman before last night, but I seemed to do okay, didn't I? \n\nBrittany: Oh yeah, you did great. \n\nSamantha: I think it's a matter of knowing what you like for yourself and trying that for your partner. And then judging their reaction. After all, we have the same 'equipment,' just in different proportions. \n\nBrittany: Yeah, I guess so. \n\nSamantha: If you really want this to happen, it should probably be now. \n\nBrittany: Really? Now?!? \n\nSamantha: Yes. Now. Brittany, you are safe. Wake up right now and come to my bed. Now. \n\nIt was a gamble, but it seemed to be working. Sam had never attempted to plant an idea with her ESP that would be carried out by her target's conscious mind. Samantha's eyes widened in the darkness when she heard the sheets rustle in the bed next to hers. She quickly reached back out to her sleeping daughter: \n\nSamantha: Sarah, you will now sleep very deeply. You will not wake until the sun is streaming through the window. \n\nSarah: Okay, Mom. I'll sleep deeply now. \n\n# \n\nSamantha could barely make out the shape of a groggy Brittany as she shuffled slowly around the far side of the other bed and toward her. Brittany stopped next to Samantha's bed, now illuminated by the moonlight from the open curtains. She absentmindedly scratched her leg and whispered, \"Sam, can I come in?\" \n\n\"Get in here,\" replied Samantha \n\n\"Are you sure,\" asked Brittany rhetorically, and Samantha just nodded and pulled back the sheet slightly. \n\nBrittany tugged at a sleeve of her sweatshirt, pulling her arm out, then dragging it entirely off and dropping at her feet. Then she did the same with the pants, pulling them down to her ankles and stepping out of them. And there she stood with her perfect young, mostly-naked body in the moonlight. She looked literally good enough to eat. \n\nSamantha pulled back the blanket the rest of the way, and Brittany crawled into bed and then climbed directly on top of her, her body still warm from sleep. Samantha's hands went naturally to Brittany's back as the young woman nestled into her. \"Hi,\" whispered Brittany with her face inches from her own. \n\n\"Hi,\" whispered Samantha in return, and Brittany's mouth met hers for the couple's first real kiss. Brittany's lips were parted, and her tongue swept across Samantha's lips. Samantha could taste the girl's minty toothpaste as her tongue probed. \n\nBrittany broke the kiss and looked down at Sam and smiled. \n\nSamantha slid one hand up Brittany's back to the back of her head and pulled her face to her, kissing her more deeply. It was an incredibly sensual kiss. Soft and tender, but with an underlying need. \n\nBrittany pulled back and again looked into Samantha's eyes. \"Are you gonna fuck me,\" asked Brittany. \n\nSamantha slid her hands down Brittany's back and into the back of her underwear and gripped her ass with both hands. Brittany automatically spread her legs, now straddling the older woman. Samantha reached down with one hand tracing her crack, then further to brush her pussy lips with her fingertips. \"Is that what you want,\" Samantha asked, \"For me to fuck you?\" \n\n\"Yes, please. Please fuck me,\" replied Brittany. \n\n\"Then yes, Brittany, I'm going to fuck you,\" said Samantha. \n\n\"What about Sarah,\" Brittany asked. \n\n\"Sarah is sleeping. She won't wake up,\" replied Samantha confidently. \n\nBrittany leaned in close. \"What are you going to do to me?\" \n\n\"For starters, I'm going to make you cum by fingering that tight little snatch of yours while I play with your nipples,\" said Samantha, and then rolled over, moving the girl onto her back. Samantha sat up and pulled her t-shirt off, freeing her breasts. Samantha lay on her side and offered Brittany her right nipple as she slid her hand into the girl's panties. \n\nBrittany latched onto Samantha's nipple, licking and suckling and then bucked her hips as Samantha's fingers slipped into her pussy. Samantha pulled her tit away from Brittany and lowered her mouth to the young woman's breasts and kissed them, then ran her tongue over each while her fingers slipped easily in and out of the girl's gash. Samantha flicked the girl's nipples with her tongue and nipped at them with her teeth. Brittany's body reacted with even harder nipples and arching her back to meet Samantha's pressure, aching for more. \n\nThe pace of Samantha's hand increased, as did Brittany's hips struggling for deeper penetration. \n\n\"Yeah, finger my pussy. Make me cum. Make me cum,\" said Brittany. \n\nSamantha raised her head from Brittany's chest and looked into the girl's eyes. \"Are you ready to cum Baby Girl? Are you? Are you ready to cum for me?\" Samantha focused on working her fingers on Brittany's sloppy clit, making a squishy, liquid sound. \n\n\"Yes. Yes. YES,\" hissed Brittany as she struggled to maintain eye contact with the older woman and then thrust her hips up off of the bed and against Samantha's fingers as her body shook. Then dropping back down to the bed, spent and out of breath. \n\nSamantha took her fingers out of the girl's pants and slid them down into her own, mixing Brittany's wetness with her own. She could feel herself already open and waiting to take something inside. She needed to cum, badly. Her slick fingers stroked her clit. \n\n\"Let me help with that,\" said Brittany and sat up, stacking pillows behind her and leaning back and spreading her legs wide. Samantha sat up, turned around, and leaned against the girl, feeling the warmth of her body against her back. Samantha caressed each of Brittany's legs as the girl nuzzled her neck. Brittany kissed her from earlobe down to collarbone and reached to the older woman's breasts. \n\nBrittany kneaded Samantha's chest, exploring, just as Samantha had done the night before in the car. Samantha watched as the girl's hands covered her aureoles, her fingers pale in the moonlight against her darker skin. \n\nBrittany gently sucked on Samantha's earlobe as she pinched her nipples between her fingers and then pulled them forward. Samantha ached for more as her breathing increased. She couldn't wait any longer and took one of Brittany's hands and slid it into the front of her damp underwear. \n\nCheek to cheek, each woman watched as Brittany's hand started to manipulate Samantha's sex. Brittany's fingers tentatively explored the folds in Samantha's slit, mentally comparing the plumpness of this crotch to her own. Then she worked her finger between the lips and was greeted by slick, warm wetness. \n\n\"Fuck, Sam, you're so wet,\" whispered Brittany. \"Take those off, I want to see you.\" \n\nSamantha raised up and slid off her thong, and again sat back into Brittany's arms, legs splayed wantonly. Brittany's hand went immediately back to its exploration. \n\nSamantha could feel her orgasm building, it was going to be a big one. Brittany pushed her fingers DEEP into her sloppy snatch for the first time. Samantha's breath hitched, and she made a little whining sound and moved her face to the side to meet Brittany with a passionate kiss. Their tongues sparred and swirled in one another's mouths. \n\nWhen Samantha broke the kiss, she leaned further back and enjoyed as the sensations continued to build. Brittany reached down with her other hand and spread Sam's lips apart as she focused on her clit with the other. Samantha involuntarily lifted one leg, trying to open herself up even more. \n\nAnd then it was upon her. Samantha grabbed Brittany's hand and forced her fingers back inside as she bucked her hips forward and cried out. \n\nSamantha held Brittany's hand firmly in place as she came down from the aftershocks. When she finally released her, it was Brittany's turn to examine her wet fingers. Then Brittany tentatively stuck out her tongue and tasted. Then she stuck all three fingers in her mouth, savoring the tangy taste of another woman for the first time. \n\n\"Fuck, girl, I needed that. Thank you.\" sighed Samantha. \n\n\"Are we done now,\" asked Brittany. \n\n\"Done with what,\" asked Sam. \n\n\"Done with making love,\" replied Brittany. \n\n\"Not unless you want to be,\" said Samantha. \n\n\"No, I want more. Do you want more,\" asked Brittany. \n\n\"Yes, I do,\" answered Samantha. \n\n\"What are you going to do to me now,\" asked Brittany and then leaned her face to Samantha's for a kiss. \n\n\"What do YOU want to do,\" returned Samantha. \n\n\"I've never been with a woman before, so I don't know how to do anything,\" said Brittany and then kissing Samantha again. \n\n\"Well, my dear, we're even because I've never been with one either, but I would give us an A+ so far.\" said Samantha. \n\n\"For real,\" asked Brittany, pulling back and looking into Samantha's eyes, \"You've never been with a girl before?\" \n\n\"For real,\" replied Samantha. \"But there are more things I want to do with you. I want to use my mouth between your legs.\" \n\n\"I'd like to try that too, but how do I do it,\" asked Brittany. \n\n\"I think we'll both figure it out,\" said Samantha and then switched her body around. \n\n\"Turn on your side, like me. Like a sideways 69,\" said Samantha and, as she did, moved her face closer to Brittany's crotch. She lifted Brittany's upper leg, and her sweet slit was revealed. She could see the bit of moisture on the lips of her cunny. Samantha's mouth watered in anticipation of putting her mouth on Brittany's sweet puss. Brittany's snatch looked delicious. Samantha pulled Brittany's bottom leg closer to her, and she used it as a pillow for her head as she nestled in, within an inch of her sweet slit. Samantha inhaled the girl's now-familiar scent. She reached around behind Brittany's raised leg. She gently traced an outline around the outside of her lips, mesmerized by watching her own fingers explore. \n\nMeanwhile, Brittany moved her own face toward Samantha. Sam opened herself up to the girl and felt a slight breeze on her wet sex as her legs parted. Brittany gingerly reached out her hand to run her finger just inside Samantha's labia. Then she gently parted the lips, exposing Samantha's engorged clit. Brittany tentatively stuck out her tongue and touched her button. Then tongued it again, this time with more force, finding it spongy yet firm. Next, she used the flat of her tongue to lick across, which elicited a soft moan and a flex of the older woman's hips. \n\nThe feeling in Samantha's loins was terrific. She could feel Brittany's sweet breath on her wet crotch and then felt her mouth exploring her sensitive nubbin. Samantha refocused her attention on the meal in front of her and licked the length of Brittany's cleft, top to bottom. She parted the girl's labia with her tongue and feeling her slick wetness enter her mouth. She couldn't get enough and pressed her face into Brittany's sex, coating her face from nose to chin in the girl's juices. She kissed the girl's lips like she would kiss her face and then 'frenched' by sticking her tongue as far into Brittany's opening as she could go. Then she tongue-fucked the girl while her slick chin rubbed against her clit. \n\nShe felt Brittany's need building as her own grew from the girl's mouth between her legs. She started to concentrate on teasing Brittany's clit with her mouth, using a finger to penetrate her as she did. One finger was all Sam felt she could safely insert the young woman's tight vagina. She also ran her fingers back and forth along Brittany's butt crack and gently rubbed her pucker hole, eliciting a groan from the young girl. \n\nThe pace and pressure of Brittany's tongue on Sam's clit increased. She could feel as well as hear the \"Mmmmmmm,\" as Samantha pressed her slick finger into the girl's asshole and gently worked it back and forth. \n\nAnd then, Samantha began to lose herself to their passion. She felt Brittany part her butt cheeks and probe her ass with her mouth. She could feel Brittany's chin on her cleft as she felt her tongue first rim and attempt to push against her anus. \n\nThe two women pulled one another even closer as their orgasms were built, brick by brick. It seemed neither could get close enough to the other as the smells and sounds of wet sex filled the room. \n\nBrittany was first to erupt as Samantha flicked her tongue relentlessly over the girl's clit. Her legs clamped down around Sam's head, followed quickly by Samantha's orgasm as she felt her own hips involuntarily buck against Brittany's face. \n\nAt the climax, each woman was very loud. Loud enough to get a bang from the wall next door, but Sarah slept on, oblivious to the sapphic encounter in the next bed. \n\nSamantha and Brittany continued to cling to one another as their orgasms began to subside. Each woman feeling the other's 'aftershocks' as their pussies continued to spasm and as their breathing returned to normal. \n\nFinally, each unclenched their legs, allowing them to separate. They sat up and looked at one another. Each of their faces still shiny with the intimate fluids of the other. Brittany wiped her hand across her face and then looked at the moisture on her hand and smiled. Then each woman began to giggle. They tried to stifle their laughter, but that only made it worse. They fell together, giggling uncontrollably, laying in one another's arms. As the laughter died down, they relaxed into one another, with Brittany's head on Samantha's shoulder. \n\nAs they lay there, Samantha could feel the slickness on her upper thighs start to dry and become tacky. Normally after sex, this would be the time her husband's seed would be dripping out of her, but not this time. \n\nBrittany sighed deeply, then looked up at Samantha's face and said, \"Thank you, Sam. That was perfect.\" Then she raised up and kissed Samantha gently on the lips. \n\n\"The pleasure was all mine, believe me,\" said Samantha after they broke their kiss. \"Can you believe we just did that?: \n\n\"Did what? What do you mean? I'm just lying here naked and in bed with my friend's mom. Completely innocent. No big deal,\" teased Brittany. \n\n\"Sorry to break it to you, but your face smells like my pussy,\" said Samantha, and both women laughed. \n\n\"Yeah, I guess there's that,\" said Brittany smiling. \n\nThe women nestled more deeply and drifted off to satisfied sleep. \n\n# \n\nThe moon shifted during their slumber and was no longer streaming into their room. When she awoke, Samantha could see the first lightening of the sky to the East. Samantha sat up to see the clock, disturbing the sleeping girl at her side. The clock read 5:23. \"Brittany Love, Sarah will wake up in about a half-hour. Should we sort ourselves out?\" \n\n\"Ummm...Not quite yet,\" said Brittany and then quickly turned around and laid on top of Samantha in a 69. Samantha's legs instinctively opened as Brittany lowered her head and started with a gentle kiss to her sex. This most intimate gesture immediately reignited Samantha's desire. She looked at the incredible sight before her. Brittany's pale, beautiful, strong, 18-year old ass with her cute little asshole. Her hands gripped the girl's cheeks and squeezed. She parted her cheeks more and licked the length of her crack. And then she did it again. \n\nShe went lower and licked Brittany's perfect little, pouty pink lips. And then slowly and gently worked the girl's clit back and forth with her tongue, with her nose buried in the girl's vag. The smell of her sex was everywhere, only enhanced Sam's desire. \n\nThis time it was Samantha's turn to cum first, with Brittany gently sucking her bud while flicking her tongue against it. It was gentle, but powerful -a beautiful way to wind down her first experience with a woman. \n\nAs Sam came down from her orgasm, Brittany unexpectedly sat up and switched her position. \"I want to watch you lick me,\" and then lowered herself above Samantha's face. Their eyes were locked as Samantha gripped the girl's butt and pulled her onto her face and went to work to bring her off one last time before her daughter awoke. Samantha knew she was getting close as Brittany's hips coiled forward as her tongue stroked her clit. Brittany reached down and held Samantha's head and looked into her eyes as she climaxed, coating her face again with intimate liquids. \n\n\"Fuck yeah,\" said Brittany dismounting Samantha's face and leaning down for one last kiss. \"Your face smells like my pussy too!\" Then she stood, grabbed her clothes, and headed to the bathroom to clean up, shaking her hot little ass as she went. \n\nSamantha lay in bed in post-coital bliss. She remained amazed at herself. Never could she have imagined the desire she could have for another woman. Never would she have imagined a world of sex for her which didn't at some point involve her taking a penis into her mouth or vagina. Oh, she knew she still liked dick, but she couldn't help but wonder when, or if, she would get to experience lesbian sex again. \n\nBrittany emerged from the bathroom, back in her sleeping sweats, and again approached Samantha's bed. She leaned in for another kiss, no longer smelling of Samantha's vagina, but rather soap and toothpaste. \"Do you think you'll come and visit during Parent's weekend,\" Brittany asked with raised eyebrows? ",
        "\"I think that could be arranged,\" said Samantha smiling coyly. Brittany arose and returned to the bed she shared with Sarah. \n\nSamantha got up, grabbed her discarded clothes from the floor, and headed for the bathroom. She couldn't help but notice the subtle smile on the face of the woman looking back at her in the bathroom mirror. She thought to herself, \"That's the look of a woman who knows when she's next going to get some pussy!\""
    ],
    "authorname": "SallysMom78",
    "tags": [
        "anal",
        "lesbian",
        "mind control",
        "oral",
        "lesbian sex"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/an-innocent-connection-pt-02"
}