{
    "title": "Make Big Bucks Selling Fiction",
    "pages": [
        "So, you're a popular writer on Lit. You get up to 16 even 30 thousand readers for your stories sometimes. You get positive reader feedback. Some readers say you turned them on, some readers say you changed their life. You get pretty good ratings and even the occasional red H, green E or blue W.\n\nSo how do you turn this knowledge into money?\n\nThe best way I have seen from Literotica, is to write erotic fiction and sell it through one of the many on line publishers that are available. So that's the path I have chosen here. There are other 'how to sell' articles on here but this is the one that will focus on the E publishing process.\n\n1. You have to do it. \n\nThis is always the hardest, most annoying thing about making money. You have to do it. That is, you have to do some work. Making money selling E books isn't easy. We know you already write erotic fiction, and this article is about getting paid for those efforts. But if you do have a couple of stories on Lit already, you will know that it is not easy to write decent stories. \n\nSo be prepared to put time in, and be prepared to tailor your work to what the market wants. I know, I know, you are a creative genius and people should be on their knees thanking you for your gifts. But, just in case they are not throwing money at you YET, tailoring your work will help bring them to you.\n\n2. Research. \n\nUGH! The R word. But yes. You will have to do some research. You have to take a look at the several publishing houses that sell erotica, and buy some of the books and read them. Now, the place that erotic fiction is at just now, is erotic romance. Please don't be put off. \n\nWhen I first became interested in erotica, all you could get was romance with a HEAE (happy ever after ending). Now they have moved into HFNE (Happy for now ending) and I know of two writers who have been asked to write straight erotica that does not necessarily involve romance at all. \n\nThe genre is evolving. However, like all these things you're better to get in on the ground floor and start building a profile now. What you do have to do is read who else is out there. \n\nGo to Ezines and check what is selling. Look for the latest lists on major book selling websites, and keep tabs on more mainstream Best Seller lists. \n\n3. Decide which publisher to go for. \n\nThis is a more difficult part of your preparation work and requires some hunting around. \n\nLiterotica sell work through this site and you may want to start there. Also check out the other publishers. They sell different kinds of work -- some are more edgy and less mainstream. \n\nIt's not cool to name the websites here, but there are sites and informaiton around for you to do proper research into the publisher that you chose.\n\nHave they been around for a long time? Does the publisher have a good reputation? Have they nurtured some big names in the publishing world? \n\nThere are sites that compare publishers, royalties, first time sales annual sales and so forth. If you're interested in cash, this is a good place to get some stats. \n\nThere is the option of self publishing and some of the E sites will let you do that. \n\nWhile you are reading all those e romance books, find out which ones you like, find favourite authors and decide where you fit in and see where they are published. \n\nRemember, the money will roll in when you have several books out there.\n\n4. Read Submission Guidelines. \n\nNow that you have decided on the publisher, you must must MUST read the submission guidelines. I can't stress how deeply important this is. If you think that getting published in the erotic romance world is easier than main stream romance world, you are kidding yourself. \n\nIt is tough, but there is still plenty of room.\n\nThey will tell you, very clearly, what they are looking for in a submission. This will give you a huge advantage over many of the other submissions. \n\nGoogle 'synopsis' and learn how to do them properly. \n\nMost of the publishers accept unsolicited manuscripts and they will tell you in their submission guidelines if they do or don't. \n\nAlso, if you are fortunate enough that the publisher you have chosen has a call for submissions, then follow through on that as your first choice if you can. That is specifically what they're looking for, but they're desire may only last a month or so. \n\nI fell for this problem. I took too long to write a manuscript that happens to be quite good (she says modestly) for a submission request. By the time my submission got in there, they decided it was good enough to be passed on immediately to an editor, however, because they'd stopped running the special I had submitted for, my book is sitting in a 'waiting pile' till they decide to run the theme again. I was too late to make the deadline and now I have a good novel sitting in a half selected pile that I can't sell to anyone else. Its been there for three months now. \n\nI could have sold it to many places in that time, and probably seen it published by name and out there making money for me. \n\nRead the guidelines and submit fast. Most of the in house authors have been told a month before you what the publisher is looking for. \n\nDo everything the submission guidelines say. It is very important.\n\n5. Submit. \n\nThat's the moment when you know that everything is in order. You have your synopsis complete, your first page of the email cover letter, the first three chapters and the final. \n\nYou have had it read by a good writing friend who will be honest with you. You have every typo removed. (When I sent my first manuscript out, an editor on Lit who had helped me a little with some stories happily read over it for me. I wouldn't' have gotten published without her valuable assistance.) \n\nYou have checked grammar and spelling twice and then again. You click the send button on your email, and it's in the lap of the gods. \n\nIf they want to see the entire novel, they will email you and ask for the whole manuscript to be sent.\n\n6. Immediately start work on the next one. This is a trick I've learnt the hard way. I almost went mad waiting for my first novel to come back. It took three months and it was a rejection. \n\nIn that time I could have written another novel and had it out there collecting its own rejections. \n\nYou will ease the pressure if you get going on the next one. Write for Lit, get another novel up, do everything you need to do. \n\nIt is likely that your first reply will be a rejection, so be ready with the next proposal to go out, so you can fix up the rejected one when it comes back. You will feel more like doing it, if you have a couple of novels on the boil. If you don't, all your eggs will be in one basket and that basket will be awful heavy and terribly important. \n\nAlso, try a different publisher with your second. That's another way to keep your work fresh and interesting.\n\n7. Rejected? \n\nA rejection is a normal part of publishing and can happen at any level. I have written work that was outright rejected and I have written work that was rejected with long notes on how to fix it up. \n\nWhen I received the long notes, I followed them to the letter, worked hard on the manuscript and sent it back to the same publisher. It was rejected again, with another set of notes. I followed them again, and re worked the whole thing just as they suggested, and my third submission was accepted. That was Double Crossed. \n\nIt took me a year to get that novel written and accepted, after its rejections. \n\nI now have 2 more in the pipeline that were accepted on a 1 page synopsis. But you see, I had established myself as a 'stop at nothing' writer, and they trust me. They trust me because of the hard yards I put in and the way that I improved myself and honed my craft. \n\n8. Accepted! \n\nFantastic! You will get a very exciting email with all the details, as well as a series of contracts and other paraphernalia. Accepted doesn't mean, however, that you should stop writing the next ones and stop submitting. Keep going with that project. It will make your work on the edits more powerful. \n\nNow, read your contract very carefully. Some publishing houses are willing to compromise. Do you want to give them digital rights but not hard copy rights? Think about this, it is your baby. So read the contract carefully and decide if it is really what you want. \n\nGet yourself a bank account that will accept cheques in US dollars, because there will be plenty of them soon as you are paid royalties. Most of the publishers will only send out a cheque in US dollars, so you have to be ready to accept them. \n\nAnd on that, the standard payment is 35% of the cover price which is very high for writers. You will find most publishers list royalties in the submission guidelines that you read very closely. \n\nFind out about tax laws in your own country. This is important as you will be earning foreign income.\n\n9. Get your paperwork done right away. \n\nFill your contract in, sign it and send it back. You will also have to fill in paperwork for the blurb, the cover art and tax details. \n\nIf you need to get a US tax number get one. \n\nDo all the things that you are asked to do and get them done promptly and in an efficient manner. Show at all times that you are a professional.\n\n10. Start Editing. \n\nOk, so this is a bit of a tough one. Editing is not an easy process. They will try to curb you to 'in house style' and they will work with you to create what they want from your novel. Your job is to be as flexible as possible and try to make the process work. Your editors' job is NOT to fix anything you can't be bothered to go back and fix. \n\nIn theory, you should be very surprised by your first round of edits because you had sent them what you thought was a perfect product when you submitted it the first time. Editing is pretty hard, and a very good editor will be particularly tough. Where possible, take direction. You do get paid by royalties after all, and the publishing house is giving you this professional to make sure you sell as many copies as possible. \n\nIt also goes toward selling your future novels, so do what you are told and learn from the process. It gets easier as you go along. Even the most prolific writers have to undergo rigorous editing process.\n\n11. Review book covers you like. \n\nWhile your novel is with the editor, and you are working on the next submission, go through book covers that you like and make some notes. You will be asked to contribute to your book cover, and the more skilled you are at recognition, the better.\n\n12. Send in all your paperwork. \n\nMake sure everything they need is sent in on time.\n\n13. Complete edits, line edits and final edits. \n\nThis is exciting because usually you are only a few days away from publication. Approve the cover art, approve the blurb. Get it all done fast, and professionally.\n\n14. START MARKETING!\n\nThe marketing process is even larger than the publishing process. If this article is popular, I will write another about the marketing process.\n\nGood luck with all your submissions.\n\nDon't forget to keep writing for Lit. This is where you got your start, and NOTHING beats those fan emails!\n\nAnd, most of all, \n\nEnjoy!\n\nBarbra Novac."
    ],
    "authorname": "BarbraNovac",
    "tags": [
        "publish",
        "author"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/make-big-bucks-selling-fiction"
}