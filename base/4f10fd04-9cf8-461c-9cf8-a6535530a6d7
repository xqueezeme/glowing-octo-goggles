{
    "title": "The New Principal Ch. 26",
    "pages": [
        "Dear Readers,\n\nAgain, I apologize for the delay in getting this chapter to you. Updates will continue to be much slower until the real world slows up a little on me. I will try to do what I can, but I can only do what I can.\n\nAs we get closer to the end of the story, the chapters become a bit different in style and content. This is partially for narrative reasons, but also partly because I am not writing them in the same way I wrote the beginning and middle. I'm not entirely sure they will be to your taste, so please do let me know what you think. Even if these will be different, I do hope that you will find something in them to enjoy. \n\nAnd of course, thank you again, for all the encouragement, comments, messages, and votes. I don't think you can overstate how much they mean to me.\n\nEnjoy!\n\nShudai\n\n******\n\n\"Ahem.\"\n\nI looked down at Deborah Xu, a dollop of cum dripping slowly down her silky smooth jet-black hair. She was on her knees with her white uniform blouse peeled open. Lost in her cellphone, she was presumably sending off the selfie she just took as proof that she was indeed brave enough to blow the ex-principal in a bathroom stall.\n\n\"Ahem. Deborah. Aren't we a bit short for time?\"\n\n\"Oh, yeah.\" She giggled nervously. After all, she was the more reserved of the Xu twins. \"Let me get arranged here.\"\n\nShe tugged her bra back into place and fastened it, hiding away those lovely breasts from me. I followed her lead and pulled up my pants as she rebuttoned her blouse and retied her neckerchief. In a flash, she looked every bit the demure innocent little schoolgirl that she assuredly was not. \n\nI looked much as I was, a ragged teacher, very much over my head, and more than a healthy bit distressed by recent events.\n\nI sat down on the toilet seat and waited for Deborah to be satisfied with her skirt.\n\n\"You did pull me in here for more than that, right? Not that I didn't enjoy it, of course.\"\n\n\"Yes, Mr. Lee. Ms Adams arranged all of this, and Ms Rai took care of the cameras.\"\n\n\"Ms Rai? What is going on with her? And with Lynn?\"\n\n\"You've seen Lynn?\" Her voice became slow and sad. \"Yeah. That's all part of what I'm supposed to tell you. I'm not sure I understand it all, but Ms Adams said that you would. There's a new drug, but something is wrong with it. It doesn't work right, and they can't make enough of it or something.\"\n\n\"They tested it on Lynn? Is there a cure? Some way to fix it?\"\n\n\"Ms Adams didn't say anything about that. She told me to give you this.\" She took out a small vial with a dirty brown liquid inside. \"She said for you to give it to someone named Tess? Then she said to tell you about the new drug, and... Oh yeah, that Ms Rai needs to be your enemy right now.\"\n\n\"So, Veronica is acting? It looked like she was drugged like Lynn was.\"\n\n\"I don't know anything about that, Ms Adams just said that you can't talk to anyone, especially not Ms Rai. She tried to get a note to you, but all the faculty and staff are being watched, so they have to be super careful.\"\n\n\"You can tell her I did get that note. That means I'm being watched, too, right?\"\n\n\"Sure, but it's easier for you to talk to us students. It's kinda part of your job, right?\"\n\n\"Right. God, this is a huge mess.\"\n\n\"But you've got us, Mr. Lee. That just sounds wrong. I'm going to call you Principal Lee when no one is around. Anyway, we're all behind you. We're going to fix all of this and get you back in that principal's office.\"\n\n\"And who's this us?\"\n\n\"The Dionysian Club, and a lot of other people, too. No one is going to be open about it right now, but everyone knows how much better things were when you were in charge. You might just see the D.C. as a bunch of little girls learning how to get off, but we take this really seriously. We are a sisterhood, and we're determined to do whatever we can to make things better. I mean, yeah, we're going to screw around a lot too, but even that'll be so much better once you're back in charge.\" \n\nShe winked at me.\n\n\"So, you're all really willing to...\"\n\n\"Ms Adams told us not to talk about specifics, but, yeah. We're going to go through it to the end.\"\n\n\"Ok. You all really are incredible, you know that?\"\n\n\"Yeah, and we're sexy as all hell, too.\" She blushed a little bit at her cursing, but she was determined to be bold and confident. \"That's all I've got, so we need to get out of here.\"\n\n\"Right. I'll go out first and then you leave later?\"\n\n\"No, we've got to go to the office now so you can write me up for demerits. I've nearly worked all mine off already, so I need to get a few more to get put back in the spa. So, at least four demerits for phone use violations, ok?\"\n\n\"Maybe knock it down to two for a world-class blowjob?\"\n\nShe laughed. \"No can do, Principal Lee. There isn't a box to check on the form for that bit of service. Maybe there should be though.\"\n\nShe popped the latch and skipped over to the mirror. I followed up behind her and hovered over her as she applied a bit of lip balm. No makeup allowed on campus anymore, eh?\n\nI got up right behind her and smiled at her reflection in the mirror. \n\nI wonder if it would work.\n\nShe glanced back at me through the mirror, looking at me in the eyes.\n\n\"What's up with that creepy look... ahh... ohgod...ohmygod...ohfuck...\"\n\nShe crumpled down, pushing her chest into the sink. Her legs buckled and I reached around her waist to keep her from falling. \n\n\"Ooooo... Mr. Lee... that was not fair at all...\"\n\n\"But you loved it, right?\"\n\n\"Yeah... oooboy... but now you've got me worked up again. I'm going to be a sloppy mess for the rest of the day, you know that?\"\n\n\"Yeah you are. C'mon.\"\n\nI spun her around and swatted her on the butt to get her moving toward the door.\n\nIt was a short walk to the teachers' office, but the minute I got there, a woman came up to us in real agitation. I knew I had seen her before, but couldn't place the name. An English teacher maybe?\n\n\"Mr. Lee. Where have you been?\"\n\n\"Ah, well... I had to bring Deborah here to write out a demerit slip. I forgot to bring them to class.\"\n\nShe took a quick look at Deborah and started. \n\n\"Well, I can see why. Deborah, what happened to you?\"\n\nI glanced to the side and saw that Deborah's chest was visibly damp. Ah, the sink!\n\nShe followed her gaze and noticed at the same time, but she was suddenly stuttering and timid.\n\n\"I... ah... it was...\"\n\n\"Her phone went off in class, and then when we were walking back here, she had to go to the bathroom...\"\n\n\"Cafeteria breakfast...\"\n\nBeth looked a little disgusted by that little detail. Beth - that was her name! Beth, and she was in English. She was the one that Jennifer was trying to help out. Beth needed her job so badly, but didn't want to punish her students so harshly. Jennifer was trying to help her keep her job.\n\n\"And she apparently had a bit of trouble at the sink. So that's a phone violation and a uniform violation now, right? I'm still figuring this out, how many would that be?\"\n\nBeth looked back at me, a bit puzzled. \"Yeah... Yes. Um... Four for the phone and two for the uniform, I think.\"\n\nDeborah dropped her head in seeming despair.\n\n\"Now, Deborah, you just have to be more careful.\" Beth said in an earnestly caring tone. \"These silly little mistakes add up. And you have to think about your classmates. This reflects on them too.\"\n\n\"Thanks, Beth. We'll go over there and take care of the paperwork and let her get back to her day.\"\n\nI found an open desk. To no surprise there was a stack of demerit forms in the top drawer. I had Deborah stand at the side of the desk while I filled out the form. When I got to the number of demerits, I looked up at her for confirmation. She flashed five then three fingers. I glanced up to look at her, and she was wearing a thin smile, so that's what I wrote down. Five for the phone and three for the uniform. I suppose that would get her back working in the spa.\n\nSo that was one copy to her, one for my records, and one for filing to the office, and I sent her on her way.\n\nNot a minute after she was gone, Beth came up to my desk. She wouldn't look me in the eye, but she whispered low and very quickly.\n\n\"Ben, you've got to be careful. Things aren't the way they were before. You've got to put in a lot of demerits every week. There's a quota but they won't tell us what the number we have to hit is. Just... just be careful, ok?\"\n\nAnd with that rapid-fire statement, she was off. I looked up to see several pairs of eyes were looking back at my desk. Surely that wouldn't be worth reporting, would it?\n\nBut I kept on keeping on. The teaching was bad enough. It's so hard to give any enthusiasm to what was basically a test-prep memorization course. What's worse is that I thought I could see that some of the students were hoping I would be able to run the classes like I used to. I could feel their disappointment. Or, maybe I was just projecting. It was horrible anyway.\n\nAlso, I wasn't able to even talk to the people I cared most about. I did see Veronica once in the office. She gave me a frigid angry look that reminded me of her reputation as the ice queen librarian. She was wearing completely new clothes. Baggy and as androgynous as could be for a woman with a body like hers. I wanted to trust that it was all an act, but I couldn't be sure that she was reacting differently from a dose of that new drug. And I have to admit that it was good just to see her.\n\nKimberly was simply invisible. I never even saw her coming or going from the administration building at all during this time. I assumed that she must be slaving away trying to maintain all the new paperwork flying around. \n\nJennifer I actually saw every now and then. She even said hello to me once. She wasn't working as deliberately to get into Sten's good graces, so maybe she could afford to consort with a known bad actor like me. But we weren't going to have any long conversations or anything.\n\nGetting back into teaching got me thinking about why I was still around. It had to be that I was going to be the scapegoat for everything once Sten's plan went through. It was funny, when I first came to Bright Hall, I thought that everything had been arranged so quickly because I was going to take the fall for some kind of financial crime or impropriety. I suppose in the end I wasn't that far off. \n\nI mean, there was no reason Sten would stay here once her sale went off. She might stay if she thought she could crack open my head and find the secret to the trick, but it seemed that she did believe that I'd lost it, so all she could do really was cash out and cut her losses. The only other person she knew who she could test on was Tess, and as far as she knew, Tess was nowhere near here. So, she would be much better off pinning this all on me somehow and then getting the hell out of Dodge. \n\nBut then again, maybe that was good news. If they needed me to be the scapegoat, they needed me alive, at least for now. I surely wasn't indispensable, but it would be a real hassle if they had to groom a new fall guy. Maybe I had more leeway than I thought I did. \n\nThese were the things going through my mind when I got home and paged Tess to update her and tell her about the vial. \n\n\"Interesting. Is it new drug?\"\n\n\"Think so.\"\n\n\"We need it ASAP. Some of Sten's clients getting twitchy. Timetable might move up.\"\n\n\"How soon?\"\n\n\"Not sure. Be ready to move quick.\"\n\n\"Don't even know what that means. Plans not clear.\"\n\n\"We know.\"\n\nThere was a long pause before she continued.\n\n\"I'll have to come back.\"\n\n\"You aren't here? Where are you?\"\n\n\"Can you get message to Adams?\"\n\n\"Maybe? I think so.\"\n\n\"Where is good to meet. Not your house. On campus but no cameras.\"\n\nI thought then laughed a bit. There was only one place possible.\n\n\"Prop room of theater. You know it?\"\n\n\"Yes. Backstage?\"\n\n\"Yes.\"\n\n\"Good. See if you can get Adams to come. I need to see her. Need to see if I can trust her. Meet one am Saturday in prop room.\"\n\n\"Ok. No guarantee I can get her.\"\n\n\"Fine. Try. I may be late, but I will be there. Wait for me. Bring vial.\"\n\n\"Ok.\"\n\n\"Anything else?\"\n\n\"No.\"\n\n\"Good. See you then.\"\n\nSo, there was nothing to do but try and figure out how to get in touch with the invisible Kimberly. The only person I knew who had any contact with her was Deborah, but I wasn't even sure that was a regular or reliable thing. It was my only option though. \n\nIt was a fairly simple thing to slip an extra page into her homework assignment. The extra page looked like a printing error, a duplicate of the second page, but the message was there for Deborah to find. I made sure and repeated with a little extra force that they all needed to read each problem carefully. A meaningful glance at Deborah showed me that she understood something important was in the assignment. \n\nAll I could do was hope she would find it and be able to get in touch with Kimberly before the meeting. And that Kimberly could find a way to get there. Who knows what kind of watch she was under?\n\nThe next day when I picked up the homework, she nodded at me knowingly. Her assignment was missing the extra page, and when I went over the answers, I had to take off points for the seemingly off-topic response to the question about World War Two. All she seemed interested in writing about was how effective the French resistance was, and in particular how secret messages were passed along under the noses of the Vichy officials. So that seemed hopeful. Still, I had to take off points.\n\nSo, I was stressed the rest of the week, but just had to carry on. \n\nThere was a strange thing I noticed though.\n\nAfter I got the trick back, jeeze, it was only a few weeks previous, I had developed a better, kind of radar, for lack of a better word. When I focused my mind, I could see the lust of the women around me. I could always do this a little bit, but now it seemed more developed. Where before I was able to get a general feeling of how excited people were, now I could drill down and see individuals with pretty good accuracy. And even though it wasn't completely reliable, it had gotten more reliable since then. \n\nThe even strange thing was that ever since the night of the storm, everyone was getting seriously horny. \n\nI don't know if it was something the aerosol unleashed, or something else. My worry was that it was simply a byproduct of me being back on campus. When I met Deborah in the bathroom, it seemed like I was pushing those other girls as well. I've never had very good control of the trick unless I was focusing on one person.\n\nAnd, I have to admit, I wasn't really doing my utmost to pull back the effects of the trick. I wasn't pushing the lust out there, but I can't deny it, I was enjoying a little more excitement in the classroom.\n\nWhatever the reason, all of my classes were getting harder to control. Where students were totally disengaged on the Monday I started back in class, by mid-week they were more than a little distracted. \n\nAnd it was even worse, because they seemed to have really internalized the rules of Sten's regime, so I could see the struggle on their faces. They knew the punishments so well, but their hormones were running wild.\n\nAnd I don't flatter myself as a real looker, but the trick certainly seemed to make me more attractive, so although there were plenty of yearning glances between students, most of their attention seemed to be aimed in my direction. \n\nThe class monitor in my morning class, Susan, not Suzy like she used to be called as I had to keep reminding myself, was particularly torn. I couldn't help but admire her tall lean grace, and I have to say that the military cut of her uniform, with the extra braiding of her rank, really flattered her figure. And even when she called out for the class to stand as I entered the room, her voice was pure and musical.\n\nIn fact, I was fairly certain that she had started wearing her uniform a bit tighter, showing off her curves, especially her hips, to great effect. At least I knew that the student sitting next to her was affected. You don't think people swoon anymore, but she was in full swoon. I expected for her to ask for a fainting couch every time she looked over at Susan. \n\nThe whole class just seemed fidgety in a way I had never seen before. Everyone, except maybe Susan's admirer, was keeping it mostly in check, but there was a marked increase in dropped pens and nervous adjusting of clothes. \n\nDeborah was no exception, but probably because she was in the back row, and because she was less concerned about punishment, she did less to hide her movements. Once, another student saw her rocking back and forth on the edge of her seat. Deborah just smiled at her and kept going. Her observer looked stunned, but she didn't stop watching. \n\nAnd I wasn't making things easier, to be honest. I moved away from the fully lecture-based course and started doing more small-group discussions, which were perfect for allowing students to huddle up close and perhaps talk about things other than the implications of post-war colonial policy. I also had them doing more individual presentations, which might be a little embarrassing, but it seemed that the classes genuinely enjoyed the excuse to stare at a classmate for several minutes. It led to a lot of stammering and blushing, but that wasn't a real negative as far as I was concerned. \n\nThe office was in a bit of a mess, too. Teachers were filing a lot of demerit forms, but the students weren't the only ones feeling a bit frisky. By and large, they had better self-control, but I could feel the tension. I was actually enjoying it a bit, and nearly laughed when Jennifer caught my eye. She gave me a questioning raised eyebrow. I knew I was probably the cause, but I couldn't think of anything I could say in a public space that would make any sense at all, so I just shrugged with a smile. \n\nFriday's classes flew by, as my attention was elsewhere, although I do remember one adorable student accidently-on-purpose bumping into Deborah from behind. To her surprise, Deborah didn't move out of the way. On the contrary, she leaned back into her. I heard something like a moan from that corner of the room, but the student bolted away, leaving Deborah grinning, but surely feeling her own frustration, too.\n\nWhen classes were finally over, I didn't even go back to the office. I went straight home to get a bit of a nap before the early morning meeting. I was also feeling the effects of being surrounded by frustrated and horny young women all day long. I thought about going up to the shower and enjoying myself a bit, but when I got home, I saw that Trooper Moore was waiting for me on the porch.\n\nWith a sigh, I waved and headed over to him.\n\n\"Trooper Moore! To be honest, I'm a bit surprised I hadn't heard from you earlier.\"\n\nI reached out and saw with pleasure that he took my hand without any hesitation.\n\n\"Afternoon, Mr. Lee. Well, that's a bit of a story, and no doubt. Can I talk with you for a moment?\"\n\n\"Of course, come on in. Anything to drink?\"\n\n\"No, I won't be that long.\"\n\nWe sat down in the kitchen at the table.\n\n\"So, what does bring you here? Something is a bit off. You aren't here to talk about Grant, are you?\"\n\n\"That's part of it. You've heard about him, I'm sure.\"\n\n\"I haven't. I still don't have the good gossip channels that you need in a small town like this.\" I tried to lighten the conversation because I wasn't sure I was going to like where it was headed.\n\nHe smiled slightly. \"I'd get on that if I were you. No chance to survive Bright Hall without your gossip. Well, if you haven't heard, Grant is recovering alright... physically I mean. Gunshot wasn't so bad, and they've got good doctors up at the hospital. No, he'll be well enough, I suppose. But he's a bit of a mess mentally.\"",
        "I wasn't sure how much I should tell him.\n\n\"Well, I'm not too surprised, really. The way he jumped Pine, I mean, he looked like an animal. Pine's okay, right?\"\n\n\"Right. Yeah, Pine...\" He laughed a bit. \"Pine's scratched up a bit, but he's a tough old goat. Grant, though... well, he's maybe not that bad anymore, but he's not really all there in the head now. I just wanted to ask... I should say first that this isn't part of the official investigation, mind you. I just wanted to ask if you had noticed anything weird about him before that night.\"\n\nWell, that was something I could talk about without worry.\n\n\"Yeah, actually. Mostly second-hand, but faculty and students have told me that he was acting more erratic and even a bit aggressive. He was working a lot more too, maybe the extra stress got to him? Seems like Sten, er... Principal Sten kind of promoted him up from school nurse, right? But why isn't this part of the investigation? I thought you and Pine were going to come interview everyone.\"\n\n\"Yeah, might be stress. That's what I'm hearing from a lot of folks. Anyway, that's the weird thing. The investigation is on hold for the moment. I can't really say much about that right now...\"\n\n\"Oh hold? What the hell? You had to shoot a man after a trooper was attacked...\" I tried to calm down a little. \"Huh. So, the chief doesn't want you to look into this? Is that what's going on?\"\n\nTrooper Moore gave me a slow hard look.\n\n\"Chief's still out of town, for training. Technically. Person sitting in her chair ain't the real chief. At least as far as I say. But I can't talk about that. And I'm not investigating. I'm just walking around, talking to the people on my beat.\"\n\nHe kept looking at me for a minute, then picked up his hat and went for the door.\n\n\"You'd let me know if you found anything out though. I get the impression that there are some really interesting things going on around here that I don't quite understand yet. I'll be honest, I had you pegged for a problem, but now I'm not so sure. Fact is, I'm pretty confused right now, and I don't like that feeling. But I'll come around again for another chat someday. You take care, now.\"\n\nAnd with that he was gone. I still wasn't sure what to make of him. I'm pretty sure I didn't like him, but I was less convinced that he was rotten. Still dangerous though.\n\nThe meeting had the effect of dispersing any thought of a little physical gratification, so I just stumbled up to my bed and set the alarm to get me up in time for the meeting.\n\nThat night, or rather morning, was cold enough to remind me that we were coming into the beginning of winter. I wore a sweater and a long jacket, but still felt the chill creep in at a made my way to the side of campus where I could get to the theater door. I was a little worried that it would be locked or blocked up, because my only other way into the theater would be through the dorms, and I knew there were a lot of cameras over there that I would like to avoid if possible. \n\nIt turned out I didn't need to worry. Either Sten never got around to sealing it up properly or Kimberly worked some magic, but for whatever reason, the doors were unlocked, and I knew, as long as I came up from the far side, there weren't any cameras to see me slink in. \n\nStill, I pulled up the collar on my jacket, which was totally cool and most certainly did not make me look like some kind of low budget cold war spy wannabe. \n\nI stood in the foyer for a little while to let me eyes get accustomed to the light, then moved through the house area and up onto the stage. I had a passing wish that I still had my old cellphone so I could use the light, but it was smashed and there was nothing to be done about that. \n\nI fumbled my way to the prop room door. I didn't hear anyone else. Maybe I was first to arrive. \n\nI opened the door and indeed found the room empty. I closed the door behind me so I could flip on the blue-tinted backstage light and it lit the room in an unreal glow. The blueness brought back fleeting images of that night when I was drugged and lost control of the tirck, bodies, Deborah and Cynthia, leading me in the ravishing of little Penny. The blue light reflected off of Penny's body. She was taped down on the heavy table, begging to be caressed.\n\nThe room had been cleaned and organized since then. The table was still there, but now it was against the wall. The rows of props and costumes looked rearranged and much tidier off toward the back of the cavernous room. There were shelves that ran back deep into unlit darkness. It was a bit creepy to think what might be back there among the old fake swords and clothes. But it looked like the front area where I stood was in regular use now. It was spotlessly clean, but various notebooks and backpacks were lined up against the wall. And there were several of the same blue gymnastic mats leaning up against the wall opposite the table. \n\nSlow understanding came to me. This was the room that Kimberly and the Dionysian Club had been using. It made sense that the club, now underground, would still need a place to meet. I was confident there were no cameras here, and the students could here safely through the tunnel without having to cross the quad.\n\nI was going to investigate the bags, to see what they contained, when I heard sounds coming from the audio monitor. Someone was coming.\n\nI moved to take a seat at the table, attempting to look more calm and collected than I was.\n\nWhen Kimberly walked in, I was a bit shocked. She was as beautiful as ever, but at the same time, she seemed diminished. It had only been a little while since I had seen her last in the spa, and perhaps my state of mind exaggerated her appearance to me, but she seemed even more exhausted than she had been. \n\nShe was always a healthy shape, but she had clearly lost weight. It showed mostly in her face, which was drawn and wearier than could be expected simply due to the time of day. Her skin, always ivory pure and nearly glowing, was now almost dull as it shone in the blue light. And amazingly, even her luxurious wild red mass of curly hair seemed practically tamed.\n\nReflexively, I jumped from my chair and rushed to her. Her face lit up as she saw me come. It gave me life to see her expression change. Still clearly weary, I saw the sparkle of life in her eyes. She threw herself into my embrace.\n\nWe stood there together in silence, her head on my chest, her hair tickling my nose. I even thought I felt her jerk slightly, as if taken by a spasm of sobs. I just held her more tightly.\n\nEventually we made our way to the table. I sat down. She looked at another chair for a moment, then sat down on my lap, throwing an arm around my waist and leaning into me. \n\nFinally, she looked up at me. I lowered my face to her and kissed her gently.\n\n\"God, it's good to see you, Kimberly.\"\n\n\"You too.\" She actually laughed lightly. \"I must look an absolute mess. I swear, I've had a rough week, but it's not as bad as it looks. Is Cynthia here? She said she would try to come, but they monitor the dorms pretty closely now.\"\n\n\"No, it's just me here.\"\n\nShe didn't look a total mess, really, despite being so overworked. She wasn't wearing her old conservative work clothes, either. She was dressed more casually than I think I had ever seen her, in a long-sleeved plaid shirt and a pair of blue jeans rolled up at the cuff. I didn't even know that she owned a pair of blue jeans, but I was certainly thankful for the way she filled them out. She looked like a costar on the Dukes of Hazzard. I tried not to fly into a fantasy of cutting those jeans to their proper length.\n\nShe leaned into me again, and I started to run my fingers through her hair. I got caught in her curls immediately and had to settle for a bit of a scalp rub. Turns out that was just what she needed, and she purred in response.\n\nWe chatted in a desultory way about this and that. I told her about how bad the classes were, and she told me about this mess in the administration building.\n\nIt seemed that Principal Sten had been leaning pretty heavily on Grant for her legwork. Without him around, she was doing most everything herself because she didn't trust anyone. Sten was more exhausted than anyone else on campus, and Kimberly thought that she might be taking something to keep going, because she never seemed to go home to sleep anymore. \n\n\"What about Veronica? Did Sten dose her with the same drug Lynn got?\" My anxiety made that come out more quickly than I wanted.\n\n\"No, no, don't worry. Well, I mean... Ok... So Principal Sten has a new drug. It's supposed to be an advanced version of the one that went into the aerosol spray, but... I mean don't understand the details, but she seems to think this new one is much more effective. Lynn was the test subject for the first batch. Principal Sten was worried that it went too far... I mean, well, you saw what Lynn is like now, so she dialed it back for the second batch. Anyway, I got all of this from Veronica. Veronica was supposed to take a dose from the newer batch, but she figured it out. She convinced Principal Sten she took the drug, but she's just been acting ever since.\"\n\n\"So, she didn't take the drug?\"\n\n\"No, she told me all about this. Her plan was to give Principal Sten exactly what she was looking for, a tractable personality, but not deadened like Lynn. I'm really worried about her though. Veronica's amazing, but this is risky. And who knows about the new drug. She said she doesn't know if the effects would be permanent or not.\"\n\nI sighed. \"Don't get me wrong, I'm concerned about Lynn, but I'm just so relieved about Veronica.\"\n\n\"Well, she's still running a dangerous game. Principal Sten doesn't trust her completely, but she's having to rely on her more and more. It's all such a mess. That's how I was able to send you the vial. That was the dose that Veronica was supposed to take. I hoped that Tess could look into it and maybe figure out an antidote or something. If Principal Sten goes ahead and doses the girls, we don't have a way to help them.\"\n\n\"We'll think of something, Kimberly. Hopefully Tess can figure something out. The old plan is still good, we just need to get more information.\"\n\n\"Oh, right.\" She handed me a USB stick. \"This is from Veronica. She said to plug it into your little pervert cave computer. It should let you look in on the cameras in the spa.\"\n\n\"There are cameras in the spa? Ah... Were there cameras there last week when we...\"\n\n\"I don't think so. The gym, the theater, basically, all the places that she shut down should be dark. The spa cameras went in this week, I think. Anyway, if she knew we were still together, she wouldn't let me work in the office. She doesn't like me, and I'm sure I'm on the list to be fired, but I think she still believes that I turned you down thanks to that cellphone bug.\"\n\n\"You did turn me down, too... Veronica and I had fun that night, but you ran away.\"\n\nI tilted her head up so that I could kiss her. As we kissed, I started to let my hands roam. She made a guttural noise and pushed harder into the kiss as my left hand moved up her waist, almost to the underside of her breasts. \n\nThen she pulled back and looked up at me with a hungry smile.\n\n\"I hope I won't be leaving you here with some other woman this time. It took some doing to get out of the office early so I could get a nap in, and I'm feeling very well-rested right now.\"\n\nThe audio monitor crackled to life again as someone else came into the theater. We both went quiet to focus on the sounds. Footsteps up on the stage and slowly, confidently, back to the prop room door. \n\nWe stood up to greet the only person who could be coming here at this hour. \n\nThe door opened and Tess walked in.\n\nShe was wearing the same thing she wore when she came to visit me at the Green House: black sweater and black slacks with regular old beat-up hiking boots. \n\nShe looked a bit tired, clearly everyone had been working overtime except me. I felt a bit guilty that all the real heavy lifting was being taken on by everyone else. All I seemed to be was a lucky but fairly useless pawn. \n\nWith that distracting thought in my head, I moved quickly to Tess and wrapped her up in a hug. \n\nShe responded warmly for a moment, but never being one for much emotional display, pushed back gently.\n\n\"I assume you are Ms Adams?\"\n\nKimberly walked forward and professionally put out her hand.\n\n\"Please, call me Kimberly.\"\n\nI thought in this context, a handshake was a bit silly, but Tess seemed to appreciate the formality.\n\n\"Kimberly then. Call me Tess. It's great to finally meet you after hearing so much about how you are holding this place together.\"\n\n\"Oh, it's all exaggeration. Especially now. I don't do a lick of real work anymore.\"\n\nI broke in to hand the vial over to Tess.\n\n\"This is for you, I believe.\"\n\nShe took the vial and looked at it.\n\n\"Hard to tell if it's any different from what we have in the lab with these lights in here.\"\n\n\"It's supposed to be much more potent than the aerosol. How much time do you have to hear about it?\"\n\n\"I'm on a bit of a tight schedule, and I don't need to remind either of you that I really don't need anyone to know I'm anywhere near Bright Hall, right?\"\n\nWe reassured her of our discretion, then sat down at the table to go into all the events of the past week or so. Much of this was a repetition of what Kimberly had already told me, but Tess showed her skill in drawing out new and important pieces of information. Where was Sten's main lab? Where were the drugs kept? Did they need refrigeration? and on and on. It was nearly an interrogation, but Kimberly was on board one hundred percent. She answered questions and provided more information that she thought might be helpful. It was a good reminder that even though she wasn't in charge of much anymore, she new the campus and its people better than anyone. And Tess seemed impressed with her, too. \n\nAfter that debrief, Tess stood up and started pacing. \n\n\"Ok, that doesn't seem too bad. But here's the real bad news. I told you I was worried that the schedule was being moved up? It is. I thought we might have until the end of the semester, but the buyers are getting twitchy, and Sten seems to have been really rattled by Grant's little melt-down.\"\n\n\"Is he okay? You said you were going to look into him.\" I couldn't help interjecting.\n\n\"You really care? This guy was basically on his way to kill you. Or at least mess you up really bad.\" Tess looked at me with a furrowed brow.\n\n\"Well, I'm not a fan or anything, but he was just a creepy douchebag before he started taking Sten's drugs and getting delusions of grandeur.\"\n\n\"Well, I wouldn't spend much energy worrying about him. He's out of our little game anyway. The gunshot wasn't so bad, but his mental troubles were something else. They shipped him off to a professional institution in Seattle back on Tuesday, I think. We're keeping an eye on him, or rather, we're having someone keep an eye on him, but I don't expect any trouble from that angle.\"\n\n\"Ok, fine. I'm glad he's not dead. That's enough, I suppose.\"\n\n\"So, now back to the actual business at hand. The very bad news. They are ramping up the timeline in a major way. The sale looks to be going down next weekend.\"\n\nMy jaw dropped and I saw Kimberly in a similar state out of the corner of my eye.\n\n\"What the hell? Next weekend? What the hell are we going to do?\" I managed to stammer out.\n\nKimberly's voice seemed an octave higher than normal. \"We don't have time... we can't...\"\n\nTess turned back from her pacing and looked at us.\n\n\"It's certainly not ideal, is it? But here we are. We play the cards we're dealt. The plan what we've been sitting on should still work, we've just got to trust that the students will be able to handle themselves.\"\n\n\"But Principal Sten's new drug. We don't even know if there is an... antidote, or whatever you'd call it.\"\n\n\"That, Kimberly, is a very real problem that we need to figure out an answer for. There's no way I can run this sample though and know everything in time. That is assuming it can be countered in the first place.\"\n\n\"Veronica.\"\n\n\"What?\"\n\nI shrugged. \"We'll have to have them do what Veronica did.\"\n\n\"Fake it?\"\n\n\"Yeah, it won't be too hard. They just need to be able to act a bit stoned for the night of the auction, right? Tess, you'll be able to make sure that nobody is able to run off with any of the girls, right?\"\n\n\"Well... So, I told you that I'm with the FBI... more or less. And that's basically true. But it's also not entirely true. I can't go into detail, but it's not like I've got a platoon of special agents at my beck and call. But you did mention that the police might not be totally on Sten's side anymore.\"\n\n\"I don't know how far I would trust them, but I think having Grant try and murder a trooper didn't really earn her any brownie points.\"\n\n\"That's better than nothing. I do have a few people I can bring in, and with the police, I think we'll be enough to make sure everyone stays put. It's a good thing this isn't a very accessible island. No one flies in or out, that's easy. No one gets out on a boat, that's more difficult, but totally doable. The key will be keeping everyone in the building where it's all going to happen. That's the theater, by the way. It's pretty secure, only the two exits, right?\"\n\n\"Right... That's... okay.\" Kimberly's voice betrayed her nerves. \"But how are we going to fool Principal Sten into thinking that they all took the drug? Maybe they can act kind of out of it and obedient, but I'm sure she will make sure that they actually drink the new drug.\"\n\n\"We'll have to swap it. Change the drugs for water or something.\"\n\n\"That's going to be impossible... well, really hard.\"\n\n\"Kimberly, you said she keeps the drugs in the office lab, right? They'll be in little vials like this, right?\"\n\n\"I suppose so.\"\n\n\"Do we have empty ones in storage somewhere?\"\n\n\"I think so.\"\n\n\"So, the trick is to make our own batch and find a time to swap it out with the real drugs. The girls take the placebo and then start acting like they took the real thing.\"\n\nTess considered. \"It's probably the best option. Kimberly, you're going to have to find out when and where she plans on giving them the drug. I'm guessing that it will be right before the auction, because she probably still needs time to make enough, but that's not for sure.\"\n\n\"Another problem. How do we make sure only the Dionysian Club students are involved? Kimberly says we can trust them, and so I stand by that, too, but what if Sten tries to give the drug to other students.\"\n\n\"Well, hopefully, if Principal Lee's plan works, only the Dionysian Club members will 'react' properly. Everyone will be drinking water, so the other girls will just seem like subjects who didn't react to the drug, right?\"\n\n\"Ok. That might work. Do you know how she is going to choose the girls?\"\n\n\"I don't know for sure, but it's always seemed like it was going to be a mixture of the girls who have been working at the spa, because they've been groomed with service training, and then other girls who seem the most innocent. Mr. Grant was surveying the girls to see which ones were virgins, so I think they'll be on the list, too.\"\n\n\"Ah, is that going to be a problem for our Dionysian Club?\"\n\nKimberly smiled for the first time in a while. \"Ah, well, no. I was actually able to get my hands on his list when I was sent to clean out the nurse's office. I honestly don't know how many virgins we have in the club, but somehow, most of our girls got put on the list.\"\n\n\"You are a marvel in so many ways, Ms Kimberly Adams.\" I couldn't resist leaning over and kissing her on the forehead. \n\n\"So that's our plan then? We'll need to make sure all of the girls in the club know what they are supposed to do.\" Tess didn't seem entirely confident, but she was ready to make the decision and move forward.",
        "\"Right. I'm sure they've all seen Lynn, but they can't act like that. Sten would know she couldn't use them, and she might try something more drastic, or just run off. They need to be adorable and girly. They need to play up the shyness and naivety, right? They need to follow orders, but maybe with a bit of a coy smile, that sort of thing.\"\n\nKimberly thought about that. \"You're right. We'll need a training session, but I'm not sure we can get everyone together at once without drawing too much attention. I'll see if I can figure something out though. Principal Lee, you'll be willing to help out with that if I need you, I suppose?\"\n\n\"Uh, sure... I think you would be obviously better though. They trust you, and I think you know more about teasing and flirting than I ever will.\"\n\n\"Principal Lee,\" Kimberly affected mock outrage, and her southern twang came out clearly. \"My mother did not raise a flirt.\" \n\nThen she winked and continued. \"But I'll see what I can do. It's more an issue of timing. If this really is going to go down next weekend, Sten is probably going to have me working all hours.\"\n\nTess stood up. \"Ok. That's our plan then. Kimberly, you're in charge of getting our troops in line. Ben, you'll be her backup, and also our eyes in the spa with those new cameras. Let me know if you find anything useful through the beeper. I'll run tests on this new drug and see if I can get anything out of it, but again, no guarantees there. I'll also round up as many cops of all flavors that I can get my hands on and have them ready to be in place by Friday. Questions?\"\n\nShe dropped her hand onto my shoulder, and I felt a spark of desire jolt between our bodies. I jerked up and looked her in the eyes. She clearly felt it too, and her expression of professional competence melted away revealing the lust that I knew so well in her. Her eyes nearly squinted shut and her mouth dropped open a bit.\n\n\"Ah, fuck... I don't have time for that...\" She looked at Kimberly, perhaps with a little too much lust in her mind, and I saw Kimberly shudder with the effect of Tess' trick. \"No. Dammit. No way. I have to get off the island as soon as I can.\"\n\nBut her arm stayed on my shoulder for another moment as we looked at each other. I was pondering those incredible breasts, remembering the first time we met at a parent teacher conference, when Tess basically jumped me. That was when I felt the pop in my mind and the power of the trick for the first time, and when all of this began. It wasn't simple nostalgia that drew my blood downward though.\n\nI thought about pushing her mind. I was sure that it wouldn't take more than a gentle push to send her flailing into Kimberly's arms, especially the way she was looking at her right then. How wonderful would it be to see Tess use her natural aggression on Kimberly, who delighted in taking orders. And just like Kimberly really needed that lovely little post-orgy romp in the spa, Tess would certainly benefit from a nice little threesome. Sex is so good for stress relief, right? \n\nBut then I brought myself back to the present. If Tess did need to get off the island, then she needed to move now. I assumed she was using a small boat, and staying hidden would be already difficult with the early morning fishermen. If she were seen and word got back to Sten, there was no telling the ways this could all go bad. \n\nSo, I put my hand over hers and squeezed it. She looked back to me and seemed to come to the same conclusion. I saw her eyes flash, but then she sighed deeply.\n\n\"Ok. You two might be able to have a nice bit of fun here, but I really do need to leave. I'll be in touch when I find out the details about the sale. Check the beeper at least twice a day, keep it on you at all times.\"\n\nShe hesitated again, certainly thinking about the heat rising in the room. She couldn't read lust as well as I could, but you didn't need the trick to feel it. \n\nAnother sigh and she turned around and headed out the door. We both listened to her boots as she went across the stage and into the audience.\n\nOnce she was out the door, I relaxed my focus and let the trick flow through me and into the room. I kept my gaze on the door, but I heard Kimberly make a little moan.\n\n\"Kimberly, do you need to go back home right now?\"\n\n\"Nooo... I can stay here a little longer I think.\"\n\nI smiled and turned to her. I could already see the effects, not just of my trick, but of her own natural desire. She had always been particularly good at hiding her emotions behind a practical and efficient exterior. I was struck with an image of her standing in the doorway of my office when I first arrived. I was trying not to push at the growing lust in her, and I was about to give in when she shut me out of her mind. She stood there leaning on the doorjamb like a pinup bombshell. That's how she looked that night in the prop room. \n\nThe blue light made the incredible red of her hair even more unreal. It almost glowed on the tips and sunk down into blackness under the infinity of twists and curls. As always, I was fascinated with it, losing myself in examining how it stuck out in all directions but also spilled over her shoulders, down low even over the rise of her breasts. \n\nShe sat there at the table smiling gently. She knew what I was up to and she grinned as I took in every inch of her body. I could feel the tension seep out of her, and it was like the glow returned to her skin as she basked in my gaze. She was clearly enjoying the attention. \n\nHer huge eyes were slightly lidded. Her grin softened and she turned slightly to brush her hair off one shoulder, exposing the flawless pale gentle slope of her neck, just begging for a vampiric nibble. \n\nI was drawn back to her eyes. I brought the trick into play, but I didn't want to drive her wild. I wanted a slow buildup. If she had time, then so did I, and I wanted to play a bit.\n\nI didn't delve into her mind, but I could feel her arousal, a deep, but as yet, still pool that underpinned her consciousness. Above that was a rapidly dispersing anxiety. I was delighted to feel that I could push that even further away. And with that, her shoulders unknotted with an audible sigh. Her head tilted away from her exposed neck. It was a clear invitation, but I wanted a bit more of a slow boil.\n\nI reached out with the trick and pumped in an atmosphere of desire to the whole room. I tried to imagine it like a roiling smoke that poured in from the edges of the room. Kimberly leaned further back in her chair and gave a light moan as she felt the effects of my effort.\n\nBut then there was something else. Someone else? I could feel the smoke bringing out lust in another person. How did I not notice them earlier? \n\nI was not entirely surprised by the sharp rap on the door, but it still gave me a start. Kimberly nearly shot out of her chair, standing up on slightly wobbly legs. \n\n\"Come in?\" I still didn't quite think things felt right.\n\nCynthia opened the door and darted into the blue room. I was taken with how nicely punk her short spikey hair looked in the blue wash.\n\n\"Cynthia! You were able to come after all.\"\n\n\"Ms. Adams! Principal Lee! I thought I was too late.\"\n\nCynthia walked quickly over to Kimberly as if she was going to hug her, but then pulled up. She wasn't sure what the situation was, and didn't know what was right.\n\n\"Come over here, Cynthia, it's fine. It's all going to be okay.\" Kimberly sounded much more confident than I knew she felt.\n\nThe two women hugged tight.\n\n\"Deborah wasn't able to make it?\"\n\n\"We thought it might not be smart for both of us to come. We did rock paper scissors. I won. She was not happy at all. She's been gloating about a little bathroom rendezvous all the time.\" Cynthia grinned at the frustration of her more proper sister. \n\n\"Well you did miss the strategy session. Principal Lee's friend Tess laid everything out. We're going to have to...\"\n\nKimberly looked strangely at me. Only then did I realize that I had my head cocked to the side.\n\n\"Principal Lee?\"\n\nSomething was wrong. I could feel Kimberly's mind and her lust easily. After so much time together, I could recognize her... I guess you could call it a flavor, easily. And Cynthia was familiar too me as well. They were in front of me, and I could feel both of them reacting to the trick fog that I had been encouraging. \n\nBut they were both taking it in and enjoying it. The two women hadn't completely let go of each other after their hug. I could actually feel the warmth of where their bodies were touching. Cynthia was acutely aware of being a good deal shorter than Kimberly because it meant that Kimberly's breasts were just about at eye-level and pressed into her. Cynthia's mind was totally focused on that lovely distraction, and Kimberly was enjoying her ability to distract the young woman.\n\nBut that wasn't the strange thing. The strange thing was that there was someone trying to resist their lust. Not me. Not Kimberly. Not Cynthia. \n\nI held up a finger to preempt Kimberly's questioning look.\n\nThere was someone else in the room. It was a woman. A young woman. She seemed familiar, but she wasn't someone I had been with. Now that I was focusing on her lust, I could see how much she was struggling. She was a ball of lust, but she was doing her best to tamp it down. But the trick was bringing her deepest desires to the surface of her consciousness. I still couldn't tell who she was, but I thought I knew a way to find out. \n\nI looked at Kimberly and Cynthia and arched my eyebrow as devilishly as I was able, then mouthed the words, \"Hold on tight.\"\n\nI didn't mean it literally, but I smiled as they pulled each other closely, Cynthia in particular enjoying the press of Kimberly's breasts.\n\nI redoubled the lust fog, seeing it in my mind like clouds, piling over themselves, rolling into the room. The fog met in the middle of the large room and it crashed over the two women, now clutching each other more tightly as their eyes lost focus.\n\nI could feel where our eavesdropper was. She was down one of the aisles where the props and costumes were. I felt a flash of anxiety. She had been in the room the whole time. She must have heard everything. She was young. She had to be a student, but there was no telling if she could be trusted. \n\nI pushed harder, now focusing my energy toward the ball of lust that shone brightly in my mind. I was impressed at her ability to hold up under such an onslaught. \n\nThen I finally heard a moan from her, such a melodic voice. And I knew who she was. And I knew what to do.\n\n\"Suzy? Come on out here, Suzy.\"\n\nThere was a gasp from the darkness. Kimberly and Cynthia spun their heads to me in panic.\n\nI held my finger up again.\n\n\"Suzy? Did you hear me? Get out here right now.\"\n\nThere was a shifting of some shadows. She had actually been very close to us. I felt like a fool for not knowing she was there.\n\nThe young woman who stumbled out of the aisle wasn't quite Susan the class monitor that I remembered seeing when I had started teaching again.\n\nShe wore her class monitor's uniform, with its gold braid, and I was please to notice that, like I had suspected, it had indeed been altered with a cut much more flattering to her tall lean figure. But the uniform wasn't exactly in good order. There were buttons undone, and her blouse wasn't even entirely tucked in. \n\nHer hair was also worth a look. In class, her lovely reddish-brown hair was always in an elaborate updo, with braids or hairpins. Lately she even had held it in place with chopsticks. Clearly her hair had been just so earlier in the day, but now it was starting to come apart. One thick strand of wavy hair hung down to one side, almost covering her eye.\n\nAnd her eyes. They were the eyes of a cornered animal. They shot around wildly from one of us to the other. She was utterly terrified. \n\nI wasn't exactly sure how much she needed, but when her eyes caught mine, I pushed in briefly and saw exactly what I had hoped I would see in her. I pushed hard on a dormant aspect of her lust and her eyes fluttered.\n\n\"Suzy.\" I put on my best approximation of the stern principal I had never been. \"How long have you been hiding there eavesdropping?\"\n\nShe dropped her head and mumbled something under her breath. Her hands darted from her sides to the corner of her uniform jacket and back again.\n\n\"What was that? Speak clearly, girl.\"\n\nOut of the corner of my eye, I saw Kimberly and Cynthia looking at me, confused.\n\n\"It's... my name is Susan. I'm a class monitor.\"\n\n\"Is it? I remember that your name used to be Suzy.\" I walked over to her, trying to keep the lust fog churning toward her. I imagined tendrils of the fog creeping up her legs, over her tights and up under her long skirt.\n\n\"Suzy is... I was... Suzy is a little girl's name. I'm a class monitor... My name is Susan.\"\n\nBy then I was within touching distance of her.\n\n\"You say you are a class monitor. Is this a class monitor's uniform?\"\n\nShe looked up at me, confusion written all over her face.\n\n\"Of course it is. See?\" Her hand moved up, gesturing to the gold braid on the shoulders.\n\n\"Show some respect, Suzy. He is your teacher and you will call him 'sir.'\" Kimberly's voice sounded much louder and full of authority than mine.\n\nI glanced over to her and saw one side of her mouth lifted in a grin. She understood the game almost before I did.\n\nWhen I looked back at Suzy, she looked mortified.\n\n\"No, no! I'm sorry, sir. I didn't mean... it's just that I...\" She dropped her head again. \"Yes, sir. It is a class monitor's uniform.\"\n\n\"What are you doing here, Suzy?\"\n\nShe hesitated, looking over to Kimberly, then back at me.\n\n\"I, umm... Mr. Lee, I was worried. Our class is on the red list, and I thought that Deborah was going to get into trouble.\" She looked up at me desperately. \"We can't get any more demerits, Mr. Lee. So... I mean... I heard the twins talking about meeting up here and I... I just wanted to talk to them and talk to them...\"\n\n\"So, Suzy.\" Kimberly was clearly warming up to the game. \"You spied on classmates, and then, with premeditation, snuck out after curfew to go to a closed area of campus to spy on them again?\"\n\n\"But...\"\n\n\"No buts, young lady. You say you can't get any more demerits, but here you are breaking very serious rules. And you say you are a class monitor. You know the punishments are harsher for class monitors, don't you?\"\n\n\"Ms. Adams, I do, but...\"\n\n\"You can't be a class monitor though. Look at the state of your uniform.\" She walked over to Suzy and I backed up to let a much more capable hand take over.\n\nKimberly reached out and casually ran her hand over Suzy's jacket from the shoulder down across her chest to the buttons. Suzy nearly hopped back in surprise and not a little bit of confused arousal, but Kimberly held on to her by the lapel. \n\n\"Your buttons are undone here. Your jacket is half open. And what is this? Your blouse is untucked? And your hair... This is absolutely unacceptable. You know that a class monitor has to follow the rules as a model to other students. What is Cynthia over there to think when she sees you in such a state?\"\n\n\"Ms Adams, I...\" \n\n\"What is your name?\"\n\n\"I'm sorry?\"\n\n\"What is your name? Are you a class monitor?\"\n\n\"I'm Susan...\" While this conversation was going on, I was pushing, deepening and thickening the fog. It was having an effect on everyone in the room, but Suzy was struggling with fear and confusion as well. \"I am... I am a class monitor.\"\n\n\"I don't think so. Principal Lee, do you see a class monitor here?\"\n\n\"I'm afraid not.\"\n\nKimberly moved closer to her and slowly unbuttoned the front of the jacket. Suzy stood silently, her eyes wide, staring at Kimberly's hands as she touched her, lingering more on her chest than strictly necessary to get the job done. With each button, I could see Suzy shudder slightly, as if by a static shock.\n\nKimberly pulled the jacket open, then she reached inside, running her hands from Suzy's stomach around to her back, drawing Suzy close to her. Suzy soon found herself unable to see Kimberly's hands, and then her face nearly nestled in Kimberly's wonderful breasts.\n\n\"Hands up now. We can't have someone so sloppy wearing a class monitor's jacket.\"\n\nSlowly, Suzy mechanically raised her arms above her head. She looked utterly stunned by the turn of events, and I could tell that the trick was having a strong effect and her reserves of self-control were rapidly fading.\n\nKimberly lifted the jacket off of her, but it caught her blouse on the way up, dragging the fabric up and exposing the flawless pale skin of her flat belly. \n\nI heard a groan to one side and caught Cynthia nearly salivating at the scene.\n\n\"There.\" Kimberly folded the jacket neatly and walked over to set it on the table. Then she walked back to the poor girl. Kimberly made every move slow and deliberate, increasing the anticipation of everyone in the room. Only Suzy didn't quite understand where things were going yet.\n\n\"What is your name?\" Kimberly repeated. \n\nSuzy lowered her head again.\n\n\"Look me in the eye when you speak to me. What is your name?\"\n\nSuzy looked up, desperate. \"I'm... I'm Susan, Ms Adams, my name is Susan.\"\n\nKimberly sighed. \"Do you see Susan, the class monitor, here, Principal Lee?\"\n\n\"No, Ms. Adams, I do not.\"\n\n\"Kneel down, Suzy.\"\n\nShe hesitated then looked pleadingly up at Kimberly.\n\nThen she knelt down. I thought I heard a strained noise from her as she got down on her knees in from of Kimberly.\n\nNow she had to lift her head high to look Kimberly in the face.\n\nThe eerie blue light caught her upturned face, and I saw her chin start to waver.\n\nKimberly was there in a flash. She leaned over the girl and brought a hand to her face. Suzy shuddered visibly at her touch and this time I was certain I heard a moan from her lips. \n\nA tear started to roll down from her eyes, but Kimberly wiped it away gently with her thumb.\n\n\"Tell me. What is your name?\"\n\n\"Ms... Ms Adams, I'm just trying to do what's right. I... don't know what to do.\" \n\nKimberly's hand fell away as Suzy shot a look over to me. It was like the beam from a lighthouse landed on me. Her lust was boiling over. It was impressive that she was still holding herself together. I caught her eyes and gently stroked that secret part of her mind, the part that had always been there, the part that always wanted this, but that she dared not expose. She responded powerfully. I felt her embarrassment and a touch of shame fueling her need.\n\n\"Mr. Lee... I mean, Principal Lee? But you're not... I mean... I liked things better before, but... What should I do?\"\n\nI tried to keep the raw desire out of my voice. \"You are a good girl, wanting to stay out of trouble. But you've broken rules tonight. If you want to get your class monitor jacket back, you're going to have to earn it back. From Ms Adams.\"\n\nShe brought her gaze back up to the woman towering over her. \"Ms. Adams? What can I do?\"\n\nKimberly's reply was pure smoky desire, and her southern drawl snuck in. \"You have been a naughty girl. But your name isn't Susan tonight. What is your name?\"\n\nShe knelt there for a moment, then her eyes widened. She licked her lips unconsciously as Kimberly dropped her hand back to the girl's head, running her fingers though her hair. Suzy struggled, still not entirely sure what was going on. \n\n\"My name is Suzy?\"\n\n\"Oh, yes, my dear. Your name is Suzy. And even though you've been a bad girl, you don't have to be in trouble. You don't have to get any demerits and let down your class.\"\n\nKimberly leaned down and kissed her gently on the forehead.\n\nTears were rolling down freely, but she wasn't sad as all. They were tears of joyous release. \n\n\"Now, Suzy, go over to Principal Lee and ask for his permission.\"\n\n\"Permission for... for what?\"",
        "Kimberly lifted her up off her knees and brought her close, their breasts squeezing together delightfully. Even though Suzy was fairly tall, Kimberly still leaned down a bit to get close to Suzy's ear. I saw Kimberly's tongue slip out and lick her earlobe. Suzy's entire body shuddered. She reached out her arms to stabilize herself only to find one hand on Kimberly's waist and the other on her denim-clad butt. I felt the lust pour off of her. \n\n\"For anything.\" I could only barely hear Kimberly's voice, but the effect on Suzy was seismic. \n\nKimberly pulled back and Suzy's hands reluctantly fell down to her sides, then she hugged herself awkwardly, then dropped her arms again. Kimberly turned her toward me and pushed her forward. She looked at me with a lascivious smile, and I could see her consciously resisting her instinct to give the girl a slap on the ass.\n\nI looked Suzy in the eyes as she slowly made her way toward me. Her mind was open and ready for me. I had to make sure she wanted this. I didn't know anything about submission or anything like that, but I was going to make sure we were safe. I didn't need to worry about Suzy though. Her mind was a whirling mess of lust, but the clearest thing was that now-exposed sensitive area that I had found earlier. She was fixated on me, fixated on me as her principal. She was excited about the opportunity to be with Kimberly and Cynthia, but her main thought was that she wanted to show me how obedient she could be, what a good girl she could be.\n\nWith every step she took, I fired her lust. With every step she took, her hips swayed more. With every step she took, I pulled away her inhibitions and let her give free rein to her secret needs.\n\nKimberly had pulled even more hair from her careful arrangement, and several long curly locks bounced free over her shoulders.\n\nHer white blouse, now pulled free from her skirt, hung down freely from her chest. Her breasts pressed forward, making the fabric hang straight down.\n\nBy the time she got to me, she was nearly vibrating with desire, and I sighed in relief, one hundred percent sure that this was what she wanted, trick or no trick.\n\n\"Mr... Principal Lee... I... ungg... I... Please let me prove to you that I can be a... good girl...\"\n\nShe looked up at me with the most incredible glistening eyes, caught between pleading and the desire to jump me. \n\n\"You don't have to prove it to me. You have to prove it to Ms Adams.\"\n\n\"So, do I have your permission?\"\n\nI couldn't resist teasing her. \"Permission for what, Suzy?\"\n\nShe scrunched up her face in confusion, and she even started to shift her weight from leg to leg, bringing only slight relief to the heat between them. \"I... I don't know... permission for whatever she needs... permission for...\" Then her eyes sparkled and she almost seemed to relax a little. \"Permission for anything, everything. I want your permission for anything she wants to do to me.\"\n\n\"Good girl. Suzy, you have my permission. Obey Ms Adams and if she is satisfied, then I will be too. If both of us are satisfied, you won't get any demerits, and you will walk out of here wearing your class monitor jacket.\"\n\nIt seemed she understood what 'satisfied' might mean. Suzy smiled wide. \"Thank you Principal Lee! I won't disappoint you. Or Ms Adams.\"\n\nKimberly broke in from where she now stood next to the table. \"Very well, Suzy. Now thank Principal Lee properly. Pay him respect.\"\n\nSuzy was now game. \"I'm sorry, ma'am. I don't know what that means.\" She lowered her head in contrition.\n\n\"That's fine, Suzy. You are here at Bright Hall to learn, after all. You show your respect to Principal Lee by kissing him.\"\n\nHer head popped up for me to see the excitement in her expression. I played along by leaning down slightly.\n\nShe moved in and closed her eyes, placing her mouth on mine, at first gently, then with a little heat. She moaned quietly into me, and it was clear she was not sure how far to take this. \n\n\"Kiss him properly, Suzy, not like your cousin. I need to see how thankful you are. Respect him, Suzy.\"\n\nKimberly's words untethered Suzy, and she melted up into me, pressing her chest tight into mine. She tilted her head to the side and opened her mouth. She wasn't particularly experienced, but enthusiasm goes a long way. She reached up and her hands wrapped around my neck, pulling me down further into her. \n\nI couldn't help but respond in kind, sliding my hand under her arms and around her back, squeezing a needy sigh out of her into my mouth.\n\nIt seemed like we kissed for minutes, but as I lowered one hand to grab hold of her butt, Kimberly called out to stop us.\n\n\"Passable.\" Kimberly again showed her incredible skill of keeping a professional mien in the middle of any kind of emotionally charged situation, but I could hear the excitement in her voice. \"Now step back, Suzy.\"\n\nSuzy reluctantly obeyed, slowly stepping back from me with a low cry. I made sure to drag my hands across her body as she moved away from me. This gave me the happy opportunity to feel the sides of her breasts, which caused her eyes to flutter.\n\nI looked in her eyes and pushed gently causing a bit of a wobble in her legs which made me smile. \n\n\"Come over here Suzy.\"\n\nShe snapped out of her reverie and walked over to Kimberly and Cynthia. I had nearly forgot about Cynthia, standing there in her regular student uniform. From her expression, she looked nearly as worked up as Suzy was.\n\nThere was a small wooden square, surely used for some stage device, on the ground in front of the table. \n\n\"Suzy, shoes off. Stand up on this platform here. We need to take a look at what we have to work with, and see if we really can make a class monitor out of you.\"\n\nSuzy robotically stepped up on the pedestal and turned to face us. Even in the blue light, I could see that she was blushing.\n\n\"Now, Cynthia, dear. Would you please take off Suzy's blouse for us?\"\n\nSuzy's hands reflexively shot up to cover herself, but Cynthia hopped up on the platform and dove for the buttons, happy to finally have a part in this show.\n\n\"Suzy. Hands down. Cynthia, there's no need to rush. Take your time.\"\n\nShe lowered her arms and Cynthia slowed her enthusiastic hands. Her blouse was already out of her skirt, so Cynthia worked from the bottom up. Button by button. She undid one, then opened the blouse to show the smooth pale skin below. Then the next one up, then the next. Suzy watched her at first, then looked up toward the ceiling as Cynthia made her way closer the rise of her breasts. \n\nFinally, there was only one button remaining, and Cynthia started to understand the value of slowing down. She ran her fingers under the edge of the blouse opening, up and down a few times, before hooking her finger around the button and pushing it through to hole. \n\nI was holding my breath, just like Suzy.\n\n\"Look at me, Suzy. Tell me your name.\" There was a hint of drawl in Kimberly's voice again. \n\nSuzy lowered her head to look down from the platform at Kimberly.\n\n\"Suu... Suzy...\"\n\nCynthia stepped closer and pulled the two sides of the blouse apart wrapping her arms around Suzy to pull the garment up over her shoulders and down her arms. \n\nThe girls were chest to chest, and Cynthia's head moved over Suzy's shoulder. I saw her plant the softest of kisses on Suzy's now bare neck.\n\nThen Cynthia stepped aside and handed the blouse down to Kimberly. This exposed Suzy to us all. She was a tall lean girl, so even though her breasts weren't large, they looked perfect on her. However, she was wearing a fairly thick bra. It didn't make sense until I looked closer. I could see her nipples poking out through the heavy fabric. She must have something very special underneath there.\n\n\"Cynthia, now, step behind her and remove her skirt.\"\n\nCynthia obeyed a bit more quickly than she might have, rushing behind Suzy and wrapping her arms all the way around her bare waist, even though the zipper was on her side. Cynthia pressed herself up against her back, causing Suzy to stand up straighter and moan softly. Cynthia's hands roved over her belly down to the skirt, then slowly lowered the zipper. As soon as the zipper crested the curve of Suzy's hip, the skirt floated down to her feet, and Cynthia's hands followed, caressing her butt, her thighs, her calves, with only the uniform tights left between her fingers and the goosebumped flesh.\n\n\"And the tights.\"\n\nWithout prompting, Suzy started to mumble. \"My name... is Suzy...\"\n\nCynthia was now kneeling behind her as she retraced her caresses, ankles, calves, knees, thighs, slowly reaching up to the top of the tights. Again, Cynthia's hands were exploring more than necessary, and Suzy failed at her attempts to remain stoic, moaning gently as one of Cynthia's hands moved up the inside of her thighs.\n\n\"Cynthia, the tights only.\"\n\nCynthia poked her head out from behind Suzy and flashed a wicked smile, but she obeyed. Hands reached up and brought the elastic band of the tights down. They clung to her legs as Cynthia peeled them down to her feet. \n\nIn a flash, Cynthia had handed over the skirt and tights to Kimberly, who took her time folding them neatly to place next to Suzy's blouse and jacket. \n\nSuzy stood there in her underwear, keeping her hands at her side with a visible force of will. Her blush seemed to have spread from her cheeks over her entire body. Her panties were also a standard white, but with a tiny pink bow on the front. I couldn't be sure in that lighting, but it seemed that there was a dark patch beneath that cute little bow.\n\n\"Cynthia, what do you think of our naughty Suzy?\"\n\n\"She isn't so bad. Some of the class monitors are real bitches, ruling over kids like some kind of queen. Susan... Suzy isn't like them. She's harsh, but she usually tries to keep us from getting into trouble, or at least getting caught.\"\n\n\"Wasn't Suzy in the Dionysian Club?\"\n\n\"Oh, yeah, she was! She joined kinda late, but she went on the spa night. I remember seeing her there, but I didn't get a chance to play with her.\"\n\n\"Suzy, why did you join the Dionysian Club?\"\n\n\"I... there was a girl on my floor who said it was a really good way to make good friends and relax. I didn't really know what it was really about though.\" Suzy was obviously uncomfortable being interviewed nearly nude while her hormones were firing like lightning all over her body.\n\n\"Did you enjoy the club?\"\n\n\"Ohmygod, yes! I... um... Yes, ma'am. I liked all the girls and I did go to the spa night. It was like nothing I'd ever seen... or done...\" Her voice got softer as she remembered the sensual delights that night at the spa. \"I... I had never done anything like that, but everyone was so nice and helpful... I had never really felt sexy like that before, but...\"\n\n\"Yes?\"\n\nSuzy came back to the present. \"The girls were so nice. I felt... we had a lot of fun.\" \n\n\"Then why did you stop coming to the meetings?\"\n\n\"My classes got so hard. I had to start going to the tutors... I've got to keep my grades up or my mom'll kill me. I just didn't have time.\"\n\nCynthia interrupted. \"Suzy, you should have talked to us about it. We could have helped. We've got some real brains in the club. You could have stayed.\"\n\nSuzy looked down at Cynthia. She was genuinely moved. She looked like she might tear up, but that wasn't in Kimberly's plans.\n\n\"Suzy. Stand up straight. You are here for evaluation and remediation. We will talk later about that, if your behavior her is acceptable. Now, Cynthia. I appreciate your evaluation of Suzy's character, but I wanted you to tell us your opinion of her body.\"\n\n\"Oh! Well, that's great! She's hot!\"\n\n\"A little less opinion and a little more analysis, Cynthia.\"\n\n\"Oh, sure, ok.\" She hopped back up on the platform and gestured toward Suzy. \"Well, she's tall, not as tall as you, ma'am, but taller than most of us in the class. And she's just lean and sexy, right? I mean, I've stared at her legs before, but they were always under a skirt and tights. Just look at them. She's so tall, but she's not like a stick figure.\" \n\nCynthia really got into the act, running her hands up and down Suzy's legs, eliciting a delightful little full-body quiver. \n\n\"She's got muscle here. God, can you imagine her using those legs on you?\" Cynthia giggled, understanding the effect she was having on each of us. \"Now, moving up, she's got a pretty good butt. It's not huge, but it really gives her skirt a really nice curve, especially since she started wearing it tighter. You didn't think we'd notice, Suzy? You've got a lot of admirers, even when you do try to do your little class monitor act.\"\n\nSuzy was silent, but only barely, as Cynthia ran her hands over her ass as she gave the description. \n\n\"I hadn't gotten a good look at her boobs really. With her jacket on, I was a bit worried she was kinda flat. Not that that's a bad thing. Tanya, you know Tanya, she barely has anything, but on man, you should see her. Her nipples are like...\"\n\n\"Cynthia? Just Suzy, for now.\"\n\n\"Oh, right. Anyway, these look really nice, she's not flat at all. They're not small, just right for her. It's a pity even the new cut of her jacket doesn't really show them off better. Maybe she could bring in the points a bit.\"\n\n\"Cynthia?\"\n\n\"Sorry ma'am! umm... okay, well, I mean, her face... She's gorgeous, right? Everything's just perfect. But those lips, I mean, how can you not want to kiss her? I just want to nibble on those lips all day long. And her hair is just insane. You can't really tell the color in here 'cause everything's blue, but her hair is almost red, but not quite, and it's got this natural wave when she lets it down.\"\n\nShe was looking directly at Suzy's face now, and Suzy could only just contain herself. When Cynthia got to worshiping her lips, she even licked them without thinking.\n\n\"Oh... I'm already so hot, ma'am, but now you've got me going over every bit of her... I just want to eat her up!\n\n\"Maybe later, Cynthia. Why don't you let her hair down.\"\n\n\"Yes ma'am!\"\n\nCynthia moved back behind her and put her hands up in her hair, pulling out a clip here and a pin there. In just moments, Suzy's hair was down, and Cynthia was just running her fingers through her hair, fingernails over her scalp, and Suzy was purring a low grateful noise.\n\n\"Enough of that, Cynthia. Suzy, shake out your hair for us. Let us see it.\" Suzy obeyed, freeing her hair so that it flowed down naturally. \n\n\"You've described her body well, and I agree, she is quite attractive. But we do need to be thorough. Please take off her bra.\"\n\nCynthia smiled wide and lowered her hands from Suzy's hair. She ran her fingers under the band of the bra backward to the clasp in back. She glanced at me and paused, knowing the torture she was causing me. Then with a pinch, the clasp was open. She moved her hands up over the cups, squeezed gently, then pulled them through her arms and untangled the straps, placing it over on the table.\n\nBoth Kimberly and I nearly gasped at the wonders exposed to us.\n\n\"Oh, you didn't know about Suzy's nipples? She's kind of famous in the showers. I'd never seen them in person, and damn...\" \n\nHer breasts were lovely, but her nipples were truly big, sticking out fat and proud from areola that seemed small by comparison. They were thick and long, and right now they were engorged with her excitement.\n\n\"So, Ms Adams, if you didn't know, let me tell you, just about everyone in the Dionysian Club has dreamed about these. And now that I remember you were there at the spa, that means someone surely did get to enjoy these, but they've been real ladies, not kissing and telling. Or sucking and telling. Biting and telling... Oh, god I can't help it.\"\n\nWith that, Cynthia ran her fingers back up Suzy's sides, closer and closer to her breasts. Kimberly and I watched her fingers get closer and closer. Suzy was visibly trembling, and her moaning came back, loud enough for me to hear. Unconsciously, I stepped forward over to Kimberly's side.\n\nSuzy tried hard to keep quiet, but she squealed when Cynthia's fingers reached her nipples. She pinched them lightly and rubbed them in little circles.\n\n\"Suzy!\" Kimberly's voice cracked and was a little louder than she planned. \"Stand up straight. You are being examined. You are not here for your own enjoyment. That's enough now Cynthia. Let's get rid of those panties now.\"\n\nCynthia kneeled back down, dragging her hands lower. She slipped her fingers under the band and pulled them down slowly, exposing a natural, untamed patch of dark curly hair. Her legs were too close together, so Cynthia ran a hand up between her thighs. Suzy opened her legs a bit and as Cynthia pulled them down, there was a strand of sticky liquid that ran from the panties back to her.\n\n\"Oh, wow! Ma'am, Prinicpal Lee, look at that!\"\n\nCynthia leaned around from behind Suzy and was looking right at her pussy.\n\n\"Look at the size of her clit!\"\n\nSuzy's blush was nearly audible. She slouched her shoulders down and lowered her head in embarrassment. At the same time, I felt a massive wave of lust pour off of her as her embarrassment rose. \n\nCynthia reached her hands up between Suzy's legs.\n\n\"Ms. Adams, can I?\"\n\n\"Uh... Yes, Cynthia, I can't quite see very well.\"\n\nCynthia reached in with no hesitation, running her fingers up to spread Suzy's labia. Even from where I was standing, I could see that she was dripping with desire. Her fluids were flowing over Cynthia's fingers. \n\nBut her clitoris was spectacular. I could see it pushed far out from under her lips, long and shining with Suzy's desire, visible even from where Kimberly and I looked on with open lust.\n\nCynthia slid her fingers up from Suzy's lower lips. She glided right onto that erect bundle of nerves. The moment she made contact, Suzy lost control.\n\n\"OOooooo unnngh...hmmm... ooooo... Suuuzy... Suuuuzy...\" Her entire body shuddered. Only by putting her hand on Cynthia's shoulder was she able to keep standing. She doubled over, flinging her hair over her head.\n\n\"Cynthia...\" Her voice was weak, and I saw Kimberly's hand straying over her hip toward her upper thigh. She coughed lightly to regain her voice. \"That will be enough, Cynthia. I will remind you that she is being evaluated.\"\n\nCynthia grudgingly pulled her hands back, leaving a wet trail over Suzy's leg.\n\n\"Mr. Lee, do you think we have seen enough from her?\"\n\n\"Oh, maybe we've seen enough, but I'm still not sure that she is willing enough to help out her fellow students.\"\n\nCynthia immediately caught on and brightened as she shot a glance to me.\n\n\"Perhaps you are right. Suzy, are you willing to serve?\"\n\nShe was still panting through her orgasm. \"Ye... yes... ma'am... Let me show you. I'll be good.\"\n\n\"That's a fine attitude. Cynthia, would you mind continuing to help us with this evaluation?\"\n\n\"Oh, yes ma'am!\"\n\n\"I thought so. Very well. The critical core of service is to make sure that you help everyone before you help yourself. And here you are enjoying yourself before anyone else here.\"\n\n\"I'm sorry, ma'am, I tried to... I mean I couldn't...\"\n\n\"No excuses, Suzy. We need to see actions, not hear your excuses. Go over to the wall and bring one of those mats over here.\"\n\n\"Yes ma'am.\"\n\nSuzy stepped down from the platform a bit shakily, her breasts wobbling in a wonderful way, then brought a mat to the middle of the room.\n\n\"Ok, now I'm going to give you a series of orders. You will follow each one without hesitation. You will learn how to serve and respect.\"\n\n\"Yes ma'am.\"\n\n\"First take Cynthia by the hand. Bring her to the mat. Now thank her for her help with your evaluation. Thank her with respect, just like you thanked Principal Lee.\"\n\nWith only the briefest of hesitation, Suzy leaned toward Cynthia. To her credit, Cynthia stood still, forcing her to be the active one. Their lips touched first softly, but then Suzy stepped forward and slipped her arms around the shorter girl. One hand stretched up to run though Cynthia's spikey hair and the other went straight for her waist, pulling her tight to her. ",
        "Cynthia's comments were made real as she sucked at Suzy's plump lips with a real devotion.\n\n\"Enough. Suzy, step back. Control yourself. Breathe deep and slow. Okay. Now the next step. Remember how she took your clothes? Now it's your turn. Jacket.\" Kimberly waited for each step as Suzy gradually unclothed the grinning and very excited Cynthia. \"Blouse... Skirt... Shoes... Now tights... Very well. Fold everything nicely to the side. We don't want any wrinkles. She was so kind when talking about your body. Do you like what you see?\"\n\nSuzy was beyond words. She nodded dumbly. \n\nKimberly decided to be kind and not force her to describe Cynthia to us.\n\n\"Good. Now her bra... No touching yet. Now her panties. Excellent. Now just stand there in front of her. Look her in the eyes. Let her know without words what you want to do with her, to her. Imagine your hands running all over her. Imagine your tongue, tasting her lips. Imagine bringing her the joy that you just felt, but even more. Again and again...\"\n\nKimberly was really getting into it. I reached over and touched her, pulling her out of her own fantasy. We both looked back to the two girls. You didn't need the trick to feel the lust just pouring off them. Their eyes were locked on each other as they both imagined sating their lust with the girl standing nude right in front of them. \n\nThe girls were so focused on each other, that I decided to move even closer to Kimberly, sliding behind her and running my hands over her waist. I untucked her shirt from her jeans, and slipped my hands inside so I could caress her skin, her lower back, her waist. Her shirt was loose enough that I had plenty of room to explore. She leaned back into me, almost forgetting her task. I leaned forward, pushing aside her huge mass of tight curls so I could nibble at her ear as I whispered to her.\n\n\"Don't stop now, Kimmytoy, you're doing great.\"\n\n\"Unnngg... Ok girls... Ok. Suzy. Take a step forward and use one hand to touch her. Just one hand. Good... feel her react to your touch... Remember you aren't doing this for you. You're doing this to bring her excitement. Feel her nipple... Can you tell how much she likes that? Cynthia, tell her what you feel.\"\n\n\"Ms Adams...\"\n\n\"Tell Suzy, not me.\"\n\n\"Suzy... Mmmm... it's so nice. When you flick your finger... ahh... you can do it a little harder... Ohhh... yeah... when you do that, it's like I can feel it go all through me...\"\n\nBy now I was unbuttoning Kimberly's shirt and fiddling with her bra clasp, frantically and with much less self-control than the girls were exhibiting. \n\n\"Suzy, what do you think she waa... aahh... wants you... what do you think she wants you to do next?\"\n\n\"Ms. Adams, I want to kiss her. May I kiss her, ma'am, please?\"\n\n\"Remember, right now this is not for you, it's for her.\"\n\n\"But ma'am, I want her to kiss me.\"\n\n\"Ok, then. One quick kiss.\"\n\nBefore she had even finished, Suzy dove in and kissed her with a passion.\n\nIt was clear that any semblance of a long drawn-out seduction was long past possible.\n\nAt the same time, I had opened up Kimberly's shirt and started massaging her breasts. All the while I was kissing up and down her neck. She left any pretense behind as she started undoing her jeans.\n\n\"Kimmytoy, you're losing control of them.\" I whispered to her as I caressed and stroked her secret places I had discovered long ago. \"How much longer can you hold back? Don't you want to taste her? Don't you want to run your tongue over those nipples?\" \n\nKimberly groaned loudly enough that the girls had to be able to hear her, but they didn't let up at all.\n\n\"Okay! Okay... girls. Stop... Suzy. Step back.\"\n\nBoth girls nearly growled in frustration, but they both obeyed. Then both of them looked over to us to see what must have been a truly lovely sight. Kimberly's shirt was down off her shoulders, and I hand one hand cupping a breast, squeezing and teasing her nipple. Her other breast was covered by her own hand. Her jeans were halfway down her hips, and my other hand was just getting ready to explore downward.\n\nThe two girls' expression shifted from frustration back to clear unadulterated lust. \n\n\"Good. You UUungggghhh... you show a lot of self control... Now... we're nearing the end of the evalua... aahhh... ohgod...evaluation. Suzy, I think you are doing well, but now you need to bring it home. I want you to pull her down to the mat.\"\n\nUnderstanding where this was going, Suzy didn't wait, she was excited to get to work. She went down on her knees and pulled Cynthia down with her. Then she gently pushed her onto her back, and Cynthia enthusiastically obliged. \n\n\"Good. Now open her legs. Kneel down there and look at her. She how beautiful she is? She is so excited for you to show her how much you want to serve her. OOohhh... ohgod... ohgod... Okaygirls... Suzy... your last task... ahhhgnnn... make her cuuummm!\"\n\nMy fingers were working fast in Kimberly's panties, flicking her hyper-sensitive clit with everything I had. I knew she liked a quick cum first before getting into a nice long fuck, and that's what I was aiming for. At the same time, I was pumping that lust fog out as thick and heavy as I could. Our little attempt at a submission game may not have been entirely successful as such, but damn if anyone seemed to care. \n\nKimberly was in my arms, my fingers in her as she was seconds away from tripping over into orgasm. In front of me were two gorgeous young women bathed in that other-worldly blue light, one between the legs of the other, determined to show her classmate all the pent-up enthusiasm she'd been carrying for weeks. And the other was on such a hair trigger from everything that had gone on that she was already crying out, thrashing her head back and forth, and would be wracked in ecstasy in just a few seconds.  \n\nIt was truly beautiful moment, and we weren't anywhere near done."
    ],
    "authorname": "shudai",
    "tags": [
        "eavesdropping",
        "embarassment",
        "ff",
        "fm",
        "obeying",
        "stripping",
        "student",
        "submitting",
        "teacher",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-new-principal-ch-26"
}