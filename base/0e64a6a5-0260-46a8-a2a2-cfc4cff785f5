{
    "title": "The Geodomes: Gamma",
    "pages": [
        "The domes had seemingly popped up overnight. They were seen first on social media, then the news started doing stories. No one knew where they had come from or why. All the stories pointed to the same shell company, 'Genetech', as having purchased the land they were all in all 12 locations around the world. They were massive. The geodomes each took up over seven square miles each. People tried looking inside, but the frosted glass made it impossible to see anything but vague colors. Drones were flown over. People tried to break in. No one was seen coming or going, ever, though there were three doors on each geodome. They were a mystery and the conspiracy theories abounded. \n\nAccording to the latest investigations, every geodome was exactly the same in every single way. Down to every inch. My personal theory was Aliens. My brother scoffed and said no way, it had to be the illuminati. We were both mostly joking.\n\nI went into the kitchen and the woman on the news was excitedly talking about a thirteenth dome being discovered, floating on the ocean. A massive domed ship. My mom was watching TV, letting the scrambled eggs burn, so I slid the pan to the off burner, getting her attention.\n\n\"Hey Lovie, what do you think about this?\" she asked, turning back to the eggs.\n\nI shrugged. \"Anyone see anything or did it just appear overnight? I still say they are Alien ships.\"\n\n\"No one has come up with anything better,\" she said. \n\nMy phone chirped and I frowned. No one ever messaged me this early, my friends were all still in bed. I was the only one with a summer job that required a 5 AM wake up.\n\nI opened the text.\n\n'Invitation 12 - June 23 - 0800 - Ecklun KS'\n\nI stared at it, frowning. \"Mom, the one close to us in that little town in kansas, what's the town?\"\n\n\"Edmon? Ecklan?\"\n\n\"Ecklun?\"\n\n\"Yeah, that's it!\"\n\nI stared at the text and hit 'info' on the sender. \n\nGenetech. \n\nAll of my hair tried to stand on end. \n\n\"What is it, Lovie?\"\n\n\"Umm, nothing. Some prank or something. I gotta hurry, can I get those eggs in a sandwich?\" I asked, pouring myself some milk.\n\nThe 'on location' news lady was interrupted mid stream and the local station cut in. \"We are getting breaking news that waves of invitations have gone out all across the world from Genetech, inviting select people to come and tour the geodomes. The invitations were sent moments ago via text message and email. We have one here that reads...\"\n\nThe voice cut off as I ran upstairs and swiped my finger over the mousepad on my laptop, waking it up.\n\n4 new emails, newest: Genetech.\n\nI opened it, my palms sweating.Why the hell was I so nervous? It wasn't like I could accept, Ecklun was a good two hours from me! I had opted out of buying a car, saving my money for college.\n\n\"We are pleased to extend to you this invitation for an exclusive, one time only tour of our Gamma facility based in Ecklun Kansas. We have invited eighteen individuals from varying backgrounds to tour our facility and offer public insight into what we do here.\n\nThis invitation is non-transferable.\n\nYou will be allowed to bring recording devices, phones, computers etc for your 3 day 2 night stay within our facility as we show the world, through you, who we are.\n\nShould you choose to accept our invitation, hit 'reply' and simply say 'yes'. A new email will be sent with the arrival time of the car that will pick you up. \n\nYou are encouraged to contact local media and interview as much as you wish. Your family will be allowed to accompany you to the facility, but only those with invitations may step inside. You may not livestream, but you can record and share everything you have recorded once the tour has concluded. \n\nIf you reply in the affirmative, you will be required to fill out a questionnaire about dietary needs, medical information such as allergies, etc. \n\nWe truly hope to see you there!\n\n-Genetech.\"\n\nHo-leee shit! I stared at it, then read it again, then again. Should I say yes?\n\n\"Lovie? You are going to be late. What is it?\" Mom asked, coming in with a sandwich on a plate for me.\n\n\"I got an invite! That they were saying on the news? I got one!\"\n\n\"Oh! Oh, wow! They read two emails on air, they were identical to each other, said the same thing, let me... Oh it is, isn't it!\" she said excitedly. \"Are you going to go?\"\n\n\"I don't know? Should I? I mean, why me? I am a nobody?\"\n\n\"They said it was random and you aren't a nobody! You are smart! Top of your class!\"\n\n\"Top of a class of twelve isn't saying much, mom.\"\n\n\"You got a scholarship!\"\n\n\"I am a girl going into AG, they pretty much had to... I think I am going to say yes. I bet they have all kinds of plants in there, right? It's got to be a science lab? Like putting a tropical rainforest in the middle of Kansas? How cool would that be?\"\n\n\"Do it!\" she said smiling.\n\nI hit 'reply' and said 'yes', then sent it. Immediately, my phone chirped.\n\n\"Thank you for your reply! We have emailed you a questionnaire.\"\n\nI sat down at my desk and filled out the questionnaire, forgetting about work until they called. \n\nThe next week was filled with interviews and planning, packing for my three days. The email had said to pack for warm and cold weather and for nice occasions as well as clothes I could get dirty in. I felt ridiculous hauling a suitcase the size of a trunk with me to the car that came to pick me up, but the driver seemed to expect it as he loaded it for me. \n\nMy brother was sulking in the seat next to me. \"I swear, you can sneak me in your suitcase!\" he said for the hundredth time. \n\n\"I promise I will get lots of footage for you. The news company gave me all those video cameras. And I will see you in a couple of days. You won't even miss me, you spend your whole weekend playing call of duty anyway. Come on, Drew, stop sulking. Tell me again what signs I am supposed to look for in the walls?\"\n\nI nudged him and he continued to sulk. He was only fourteen, but still bigger than me. Mom sat on the other side of him, smiling and looking out the window. She was tall, 5'9\". My dad was 6'3\" and Drew was already 6' at fourteen. Mom says she didn't know where I got my height from, no one in her family was small. Dad said he thought his grandma had been short like me, from what he could remember. \n\nI wished he could have been here. He was driving back from Houston and wouldn't be home until morning. We were used to him being gone, it was the life of a trucker. He didn't seem to think the domes were a big deal, said they were just a media stunt. Some corporation was going to make big bucks with all the hype they were causing.\n\nThe car pulled up to a media circus. I was led to a small group behind a red rope where several others already waited. All young like me. I waved at Drew in the crowd and smiled as my mom took pictures.\n\n\"This is hella crazy, huh?\" A tall girl asked me, leaning way down to talk to me. \"News said you were eighteen?\"\n\n\"Yeah! Just short!\" I answered, smiling, trying to be heard over the crowd and reporters. \n\n\"From south of KC, right? In Missouri?\"\n\n\"You've been watching all the interviews? Smart! I should have done that!\"\n\n\"I'm Ivy!\"\n\n\"Lovie!\"\n\n\"Real name? I thought it was a typo!\"\n\n\"Real name!\"\n\n\"Cute! I'm from Manhattan! Kansas! I'm an influencer!\"\n\nI looked up at her and I could see that about her. Her perfect hair, perfect make-up, perfect smile. \"I'm a farm girl! Maybe you could make me over!\"\n\n\"Not a chance! You are adorable as is! There, that van that just arrived? That's big time Lovie, smile and wave!\"\n\nI waved, but my jaw was starting to hurt. I looked around and more people arrived as 8 AM ticked closer. By 7:55, all 18 of us were there, lined up. \n\nThere were nine boys and nine girls, all of us 18. The news had said they had probably chosen us because we were the social media gurus and they were wanting to appeal to a certain crowd, whoever Genetech was. All I knew was that I was underdressed. I looked like someone's grubby kid sister, and I had attempted to dress up in my best jeans, best boots and favorite t-shirt. \n\nThe door lit up and a feminine electronic voice spoke. \"Thank you, for attending or inside sneak peek weekend at Gamma Geodome base! I would like to ask that our guests step up to the door one at a time when you are called! Alessandro Legge! Nettie Livingston! David Waters! Maggie Ortega! Kenan Higgans! Aysha Joyce! Eric Pearson! Ivy Lewis! Jaydan Wyatt! Kattie Patton! George Lopez! Lovie Mason! Timothy Barker! Marta Acosta! Zachary Vaughan! Tanisha Hinton! Marcus Chester! Ella Jenkins! Please, step into the decontamination chamber one at a time and then proceed into the facility!\"\n\nI gave my family a final wave and a smile as I got in line between two tall boys as we were called. The boy in front of me turned and looked down at me, smirking. \"Lovie?\"\n\n\"Yeah, hey,\" I said, blushing. He was cute-ish, but he looked like a bad boy. He looked mixed raced, his tightly curled light brown hair definitely had african american in it, and his bright green eyes made him look stunning with his mocha skin. He also knew he was hot.\n\n\"Geo,\" he offered. \"My dad is George.\"\n\nI nodded with a tight lipped smile. Geo was a player and not my type. I knew his game, he was here to get into the pants of all the girls.\n\n\"Nickname?\" the boy behind me asked. \n\nI turned and looked up at him. He wasn't as hot as Geo, but he still had a bad boy look. His full lips made him attractive and his hazel eyes sparkled, even when he was scowling. He wasn't 'ladies man' bad boy, he was 'brooding and quiet' bad boy. He was the only other one besides me who was wearing jeans and not slacks or dress pants in the case of the boys. All of the girls were wearing dresses or skirts.\n\n\"Umm, family name. Real name,\" I answered, feeling myself blush under his scrutiny. \"You?\"\n\n\"Timothy is my real name. Friends call me Thee. I don't answer to Tim or Timmy.\"\n\n\"Good to know,\" I said, turning since I was next up to step into the doors. \n\nWhen they opened, I stepped in quickly as they shut behind me. I was expecting something to happen, but all I saw in the little corridor was another open door with a blinking green light. I walked ahead and through the door, then it closed behind me. As soon as it was shut, I was blasted with air that had a strange smell to it. Seconds later, the door in front of me opened and I walked through as it shut behind me. Red lights came on, so bright I shielded my eyes, but they were off before I could do more than hide my face. The next door opened and I went through to the group that was already inside and waiting. \n\nI looked around, a little underwhelmed. We were inside of a dome within the larger dome and it was just a blank, empty space. The others were talking, but I moved around, trying to see in through the next door. It was the same frosted glass. I turned to the others and stood on the fringes, listening as they all talked and flirted. Geo was laying it on thick with Ivy and she was smiling and flirting like she loved every second of it.\n\nA smaller man sidled next to me. He was still taller than me, but still on the short side for a guy, maybe 5'8\". He had dark hair that hung just past his shoulders and a semblance of a goatee. I couldn't tell his background, I only knew he was very exotic looking and adorable with his big brown eyes and tan skin. \n\n\"I'm Alessandro,\" he said quietly. \"Ali to my friends.\"\n\n\"Lovie,\" I answered, blushing. \"Your name is a little all over the place.\"\n\nHe smiled and looked around. \"Not many people know that. I'm like, 1/16 English, pretty much just the last name really. The rest of me is Isreali. Alessandro? I think my mom just read too many romance novels.\"\n\nI laughed at his good natured humor. \"Lovie is a family name,\" I said, though he hadn't asked.\n\nThee came around the group of people and looked me over before trying to look in the door like I had. He came to stand near me, eying Alessandro.\n\n\"Wonder why they had to do all that,\" he said to me, deciding to ignore the other man standing there.\n\n\"So we don't bring in any outside germs or spores or anything. If they have certain plants in here, they won't want any invasive native species coming in, or any pollen or whatever else we might carry in on our clothes and shoes.\"\n\nHe looked down at me consideringly. \"What are you going to school for?\" he asked.\n\n\"Ag. Agriculture.\"\n\n\"Thanks,\" he said sarcastically. \"I didn't know what Ag meant. What about you, ponytail?\"\n\n\"Me?!?\" Ali asked, shocked. \"My hair is down?\"\n\n\"And you won't have it tied up in a ponytail or man-bun before the day is out? What are you going to school for?\"\n\n\"Medicine,\" Ali answered, perturbed. \n\n\"Why do you ask?\" I asked. \"What about you?\"\n\n\"Engineering. I ask because I was trying to find the common denominator. Everyone picked is 18, smart, relatively easy to look at, give or take a few,\" he said, his eyes sweeping the room. \"They say it's random, but I am starting to think it's not. I was talking to Marta and she is studying to be a vet.\"\n\n\"I mean, we are all 18, about to go to college, we will all be wanting to specialize in something. Right?\"\n\n\"Yeah, but how far into it are you? Marta said she grew up with it, Her parents were both vets, she just needed the piece of paper. What about you, ponytail? How into medicine are you?\"\n\n\"Alessandro,\" Ali said through his teeth. \"I have studied ahead, did AP classes through school and VoTech. Why?\"\n\n\"And I am ahead too. My dad was an architect and my mom an engineer too. I grew up with it. I'm guessing you grew up on a farm, Little Love? You studied Ag more than you needed to? Got into specialties?\"\n\n\"I guess I did, I was just interested...\"\n\n\"Point is, I think it's not random. If we ask the others, I am thinking they will all have something they are honed in on as well.\"\n\n\"Why does it matter?\" Alessandro asked irritably.\n\n\"Now that you have all arrived,\" the electronic voice intoned, \"please step through to the main pathway and follow it to the first guide dome.\"\n\nThe door opened.\n\n\"When do we get our cameras and phones and bags back?\" someone asked loudly.\n\n\"Are there people in here?\"\n\n\"Where are our things?\"\n\nThere was no answer as we stood a moment, listening and waiting. Thee broke the pregnant silence by taking my arm and pulling me through the door. I paused and he did as well as we looked up and around. \n\nIt was huge. Not huge, colossal. Trees, gardens, plants in the bright daylight. I could see the sky, the clouds, everything. It went on for miles. There was a black rubber pathway that led to a far dome in the distance. The biggest difference I noted was that it was cooler inside, a comfortable 70ish. The air smelled clean and like the country. \n\nThee started pulling me again and I tugged my arm out of his hand. He glanced back at me with a scowl, but he kept walking. Alessandro was right behind me and the rest of the group close behind.\n\n\"Please do not stray from the path,\" the feminine, electronic voice said suddenly.\n\nI looked back and Geo was stepping back onto the path. \n\n\"Follow the path to the first dome waystation. Your next set of instructions will follow once you have all arrived.\"\n\nFor some reason, a few of the guys decided to make it a race. Laughing, they pushed past and started running. Geo was among them. A few girls followed, also laughing. I was content to walk. \n\n\"Hey girl,\" Ivy said, moving up to walk next to me. \"This is wild, yeah?\"\n\n\"Very,\" I agreed, noticing how she was looking at Alessandro. I didn't blame her, he was easy to look at. \"Ivy, this is Alessandro, Ali, this is Ivy.\"\n\n\"Lovely to meet you,\" he said with a charming smile. \n\nShe smiled, showing perfect teeth. \"You too. You on insta?\"\n\n\"Afraid not. I don't have an online presence at all. I'm more crunchy granola and less filter and followers.\"\n\nThee snorted. \"He says that, but I have $500 says he knows who you are and follows you. He is just trying to be cool.\"\n\n\"Oh? So you know who I am?\"\n\n\"Fuck you Ivy,\" he said irritably, looking over his shoulder at her.\n\nHer face went red. \"Thee?!? I didn't even realize that was you! Wow, you've grown!\"\n\n\"You're the same. Still into fashion and making your own clothes and sewing?\"\n\n\"Yeah? You remembered?\"\n\n\"Not until I started putting pieces together. Little Love, come walk with me,\" he said, dropping back to take my hand and pull me ahead of the others.\n\nI looked up at him, a little confused and angry. I pulled my hand out of his and he gave me the same perturbed look as earlier. \"I don't like being touched without my permission,\" I said softly, so the others didn't hear.\n\n\"You're smart. People don't usually equate farmers and smart, but you are. I wanted to talk to you.\"\n\n\"About?\"\n\n\"What if this isn't a sneak peek preview? What if it's an experiment? We are trapped in here with each other. Think about it. I bet we all have a skill that is essential for the Shift.\"\n\n\"The Shift?\"\n\n\"When the shit hits the fan. Some people say zombie apocalypse, nuclear war, whatever. Point is, there are certain jobs that are essential after something like that happens. Not lawyers or businessmen or actors or athletes or artists. No, real essential, as in live or die. We...\"\n\n\"What are you two talking about?\" Ivy asked, catching up. Ali was next to her, looking down at me carefully, as if assessing my mood or my needs. Was Thee bothering me.\n\n\"Oh, jobs and stuff,\" I said quickly, giving Ali a smile. I noticed then that the few others were crowding close too. \n\nI picked up my pace, my short legs working twice as hard as the rest of them. They all got the hint and stayed quiet, but kept up easily.\n\nI pushed into the dome and looked around. It was a round theatre. There were 18 seats in the middle, a giant screen on one side and a counter with drinks and food on the back wall. I grabbed a water and sat down in one of the edge seats. Thee quickly sat next to me, but didn't look at me. The others were all talking and laughing loudly on the side, but as soon as the rest of us were inside, the voice filled the room.\n\n\"Please be seated and watch the live coverage about to be presented.\"\n\nEveryone sat and I sighed dismally as an unusually tall boy sat right in front of me.\n\n\"Really, Lurch?\" Thee said disgustedly, poking the boys shoulder and pointing at me.\n\n\"Oh, sorry,\" the boy said, standing and moving to the back row.\n\n\"No big,\" I said quickly, \"Thanks!\"\n\n\"No problem,\" he said with a shy smile. He wouldn't win any beauty contests, but he seemed nice. \n\n\"You didn't have to be rude,\" I whispered to Thee.\n\n\"He could have paid attention,\" he said, scowling. \"You're welcome.\"\n\nI sighed, but said nothing else as the screen lit up. Everyone went quiet as the camera looked down at earth and rapidly zoomed in. It almost felt like falling, it was disorienting. A few people chuckled uncomfortably. It slowed as it got closer and finally, the dome was in view. I had seen aerials of the dome before, and I knew that even though it was called a dome, it was rectangular in shape and flatish on top. It got close and panned over the people outside. I saw my mom and brother and I smiled. This was kind of cool! I heard the others whispering, pointing out their families. The camera slowly pulled back, back, back until the dome was no longer even a white dot on the landscape.\n\nMy smile slipped as the first red burst appeared. There was a second, and a third, then the map was covered with red, orange, yellow...\n\nThe light from the dome changed too, it was orange.\n\nThere was a scream as someone stood up, then everyone was standing.\n\nThe camera pulled back and there was no green on it, only fire. Blue ocean and orange and yellow so bright I had to look through my fingers.\n\nAfter a moment, the bright flares faded and died out. Now there was blue and black. The light in the dome went back to it's normal color. The camera zoomed in again until the dome was in view and all you could see around it was blackened, desolate land. Nothing else. ",
        "\"It's a trick!\" Geo said desperately. \"A joke! It aint real!\"\n\n\"I told you,\" Thee said to me, darkly. \"It's an experiment.\"\n\n\"I don't think it is,\" I said, numb. \"I think it's real. I think that just happened.\"\n\nHe looked at the screen again and took hold of my hand, squeezing tightly.\n\nThe screen went dark. \n\n\"Welcome to Gamma Dome, your new home. We have chosen nine viable regional candidates from each sex to start over in this region. Within the dome, you will find everything you need to start over. There are nine domiciles within the dome for when you are done pairing. Your jobs will become apparent once you reach the second waystation within the dome. As time passes, you will be returned here to speak with those from other domes to communicate what your needs are once the domes are opened. You have 48 hours to talk amongst yourselves and elect a leader and find a partner. If you have not done so in the time provided, one will be assigned to you. Please, exit this waystation through the door on the north and head to the next waystation.\"\n\nNo one moved. We all stood staring at the black screen, still horrified.\n\n\"Was that real?\" Ivy shrieked.\n\n\"Naw, we are bein' punked or some shit. I'm getting out of here!\" Geo said, going to the door we came it. It was locked.\n\n\"Please proceed to the next waystation,\" the voice said pleasantly. \"In one minute, this room will be filled with toxic gas.\"\n\nWe all fled through the north door, half running. I could see the next waystation in the distance. \n\n\"Please stay on the path. Anyone straying from the path will be targeted and punished.\"\n\nGeo and two other boys as well as a girl hurried back onto the path.\n\nThee grabbed my hand again and started walking towards the next waystation. This time, I didn't pull away. I was terrified and I needed a little human contact, even if it was from the tactless and graceless boy.\n\nWe arrived as a group this time, into the large, open room. It looked like a living room or a day room, with couches, chairs, three TV's, half a dozen bookshelves. There were hallways leading off east and west and what looked like a kitchen in the north.\n\n\"Welcome to your temporary home. Please, make yourselves comfortable. To the west are the dorms where you will each find a room specially designed for you and your needs. To the east are the rooms with your amenities. To the north is the kitchen and the door leading to the outer buildings. For now you will be staying here until you have chosen your partners, gotten a feel for your jobs and have elected a leader. \n\nLet's go ahead and start. Alessandro Legge, please step to the front. This is Ali and he will be your medic. The medbay is located in the east wing, first door on the right. He will be working closely with Ella, Marta and Aysha.\n\nNettie Livingston, please step to the front. This is Nettie and she will be in charge of raising the livestock. She will work closely with Katie, Lovie, Ella and Zachary. The barn is located to the north of the kitchen and will be open after this exercise has concluded.\n\nDavid Waters, please step to the front. This is Davey and he will be in charge of all woodworking. That includes felling trees, making furniture or other small wooden devices. Davey will be working closely with Jaydan and George. The woodshop is opposite the barn to the north.\n\nMaggie Ortega, please step to the front. This is Magpie and she will be in charge of pottery, including gathering clay and making bowls, mortar and other needed objects. Magpie will be working closely with Eric and George. The arts room is in the east wing, past the medbay.\n\nKenan Higgans, please step to the front. This is Key and he will be working with electronics and general repairs to the facility as needed. The repair shop is in the east wing, first door on the left.\n\nAysha Joyce, please step to the front. This is Aysha and she will be midwife to the many babies born in the dome. Aysha will be working closely with Alessandro, Marta and Ella. Aysha will be working in the medbay.\n\nEric Pearson, please step to the front. This is Eric and he will be working in masonry. Eric will be working closely with Maggie, George, and Timothy. The masonry is located next to the woodshop and the blacksmithy.\n\nIvy Lewis, please step to the front. This is Ivy and she will be the seamstress. Ivy will work closely with Lovie and Marcus. The design studio is in the east wing, the last room on the left after the swimming pool.\n\nJaydan Wyatt, please step to the front. This is Jay and he is the blacksmith. Jay will be working closely with David, Eric, George and Timothy. The blacksmithy is located next to the woodshop, across from the barn.\n\nKatie Patton, please step to the front. This is Katie and she is the beekeeper. Katie will be working closely with Lovie, Tanisha and Ella. The bees are kept to the south of the living complex, within sight of the barn. \n\nGeorge Lopez, please step to the front. This is Geo and he is a carpenter. He will be building larger structures and additions as needed. Geo will be working closely with David, Eric, Jaydan, and Timothy. The woodshop is located next to the blacksmithy across from the barn.\n\nLovie Mason, please step to the front. This is Lovie and she will be in charge of all of the crops, plants, trees and herbs. Lovie will be working closely with Alessandro, Nettie, Katie, Tanisha and Ella. Lovie will be working from a plot map in her quarters.\n\nTimothy Barker, please step to the front. This is Thee and he is our site engineer. He will be drawing up plans for any structures needed within the dome, or large scale repairs needed. Thee will be working closely with Eric and George. The drafting room adjoins the electronics room in the east wing.\n\nMarta Acosta, please step to the front. This is Marty and she is the veterinarian. Marty will be working closely with Alessandro, Nettie, Aysha, Lovie, Zachary, Marcus and Ella. The Vet office is a wing within the barn.\n\nZachary Vaughan, please step to the front. This is Zach and he is the butcher. Zach will be working closely with Nettie, Marta, Tanisha and Marcus. Zach will be working in the kitchen. \n\nTanisha Hinton, please step to the front. This is Tanny and she will be the chef. Tanny will work closely with Nettie, Katie, Lovie, Marta, Zachary and Ella. Tanny will be working in the kitchen.\n\nMarcus Chester, please step to the front. This is Mark and he will be working with leathercrafting. Mark will be working closely with Nettie, Ivy, Marta and Zachary. Marcus will be working in the design studio.\n\nElla Jenkins, please step to the front. This is Ella and she is an herbalist. Ella will be working closely with Alessandro, Aysha, Katie, Lovie, Marta and Tanisha. Ella will be assigned to the medbay and the adjoining alchemy lab. \n\nThere are some jobs with ample idle times and they can be recruited and trained to help those who have a large workload. This includes, but is not limited to: Nettie, Eric, George, and Lovie, most often Nettie and Lovie. All guests with idle time will be required to work when they are assigned a temporary duty. Only three guests may not be assigned temporary duty. Alessandro must be available for the medbay at all times in case of emergency. Nettie will never have downtime. Lovie will never have downtime.  \n\nNow that you have all been introduced and assigned your jobs, you may see your rooms. You were each given a number on your invitation and your room number corresponds to your assigned number. Girls on the left, boys on the right on the west bay.\"\n\nI looked around for a moment as everyone milled, then looked over to see a shortish blonde girl sitting down hard as people started to their rooms. I hurried to her. \n\n\"Hey. Ella, right? I'm Lovie. You ok?\"\n\n\"Are they really gone? My whole family?\"\n\n\"If this is real. I mean, it might not be. Thee thinks it's an experiment. So, an herbalist huh? That's cool. We'll be working together a lot.\"\n\nShe gave me a tremulous smile, her big blue eyes still full of tears. I got her to stand up and turned. Thee was there, waiting for me. I shifted uncomfortably, looking up at him. He gave Ella a single glance, then looked down at me. \"Told you,\" he said.  \n\n\"You were right,\" I agreed. I led Ella down the hall and Thee followed us. \"What's your number?\" I asked her.\n\n\"Eighteen.\"\n\nI led her to the end of the hall and tried to open the door. It wouldn't open. \n\n\"It's locked?\"\n\nShe tried and it opened for her.\n\n\"Handy,\" I said, looking over my shoulder at Thee who was back down the hall in front of my door. \"I am in twelve, knock if you need anything, ok?\"\n\n\"Thanks Lovie,\" she said, hugging me. I hugged her back, harder than I needed to since I needed the hug just as badly.\n\n\"Hey, if you are giving those out,\" a boy said shakily, awkwardly opening an arm as he came out of 17. \n\nI would have blown him off if he hadn't looked so shaken and terrified. Instead I pulled him into the hug. \n\nI pulled back and smiled. \"I'm leaving her in your care. I need to look at my room,\" I said to him before turning and going to my room. Thee was scowling. I hesitated outside my door, hand on the handle. \"How was your room?\" I asked.\n\nHe shrugged and pointed to 13, kitty corner to mine. \n\nI was still too nervous to open my door. Geo came out of 11 right across from me and I took the moment of distraction to slip into my room and shut the door.\n\nSomeone immediately tried it. What was his deal? He knocked. I ignored the knock as I looked around the huge room. It was done in white and bamboo green, simple and tasteful. There was a huge screen on the wall between two doors. One led to a bathroom, the other to a walk-in closet where my giant suitcase was sitting. I went back to the giant screen and stood in front of it, but saw no way to turn it on. \n\n\"How the hell do I use this?\" I whispered, bending to look under it.\n\n\"Commands are spoken,\" the electronic voice said.\n\n\"Oh. Great. Umm, screen on?\"\n\nNothing happened.\n\n\"What command do I use to turn this on?\" I asked, feeling silly.\n\n\"Plot map, on.\"\n\n\"Right. Plot map, on,\" I said to the screen. It lit up, showing me a layout of the dome. A giant map of all of it. \"Can you tell me how to use this?\" I asked the air.\n\n\"There is a user's manual in your personal electronic device in your top drawer of your desk. Your personal electronic device is number 12. If you need to be reached, anyone can contact you by asking for Guest twelve, or using your preferred nomenclature. Would you like to assign a preferred nomenclature? Would you like to be Lovie, Lovie Mason, or something else?\"\n\n\"Lovie is fine,\" I said, going to the desk and opening the top drawer. There was nothing but a thick, silver bracelet. I picked it up, looking at it, then put it on and snapped it shut. Immediately, it stung me and zapped me and I squealed as I tried to scrape it off. It wouldn't open!\n\nA glowing red dot appeared, then a green dot next to it, then the red dot turned green so that there were two green dots on it. I stared at it, panting. \"How do I get it off?\" I demanded.\n\n\"The PED cannot be removed. Touch both sensors to begin instructions.\"\n\nI touched both green dots and a screen popped up, projected from the bracelet. \n\n\"Cool!\" I whispered.\n\n\"If you wish the room to be warmer, state your preferred temperature.\"\n\n\"No, it's fine... actually, you could go a few degrees cooler in here. Like, 60ish I guess?\" I said, looking around.\n\nThere was another knock on my door.\n\nI went and opened it, ready to tell Thee to leave me alone, but it was Ella. She stared wide eyed at my PED. \"Hey! Umm, everyone is meeting back at the living room? What is that?\"\n\n\"We all have one, it's in your desk drawer. Thanks,\" I said, following her out and touching the sensors to minimize the projection. \n\nThee was standing at the end of the hall, waiting for me.\n\n\"Everyone have a seat!\" Kenan yelled, pacing at the front of the room. Kenan was just above average height and he looked like a prep school knockoff. His frat boy shorts and polo shirt were off brands and his shoes looked second hand. He was trying hard to appear like a douchebag typical frat boy, but he was off his mark. He did have the tan, the hair and the looks though, I would give him that. He didn't quite command the room like he wanted to though. He was trying to be alpha but Geo and Jaydan had him beat by sheer presence. \n\nThee took my arm and led me to a loveseat, pulling me down to sit next to him. I almost objected, but he was ignoring me and looking at the bracelet on my arm so I didn't say anything.. \n\n\"We have all had a chance to look at our rooms, I think we need to spend some time getting to know each other. The people here want us paired up, so we...\"\n\n\"Just because they say it don't mean we're doin it,\" Tanisha said, standing. \n\n\"Yeah, no one is forcing me to couple up with some rando,\" Maggie said, also standing.\n\n\"Sit down everyone,\" Kenan said loudly. \"Like I was saying, we should spend some time getting to know each other. We can sort of set up like a rotating shift and spend an hour or two with each other, see what...\"\n\nI stood up. \"Sorry, that sounds... awful. Like speed dating but worse. Why not set up a lunch and we can sit and talk as a group. Rather than focus on pairing, we can focus on the larger picture and in that we will see who we are compatible with. Umm, dome, what do we address you as?\"\n\n\"You may call me Gamma,\" the feminine, robotic voice answered.\n\n\"Gamma, is there food here or do we have to harvest and butcher it?\"\n\n\"There is two weeks forth of food ready to be prepared in the kitchen. There is one days worth of food in the dining hall, waiting to be opened.\"\n\n\"Gamma, where is the dining hall?\"\n\n\"Next to the kitchen.\"\n\nI started to the kitchen.\n\n\"Wait a minute!\" Kenan yelled as others got up and began following me. \"We need to vote on a leader!\"\n\nI sat at the large table and people sat around me. Thee right next to me. I pulled the large cover off of the large dish in the middle and it looked like a lasagna of some kind with garlic bread. It smelled amazing. I dug right in and everyone was close behind me. I was starved after the long walk and the stressful morning.\n\nI looked around as I ate, watching the others. Most of them still looked like they were in shock. I sat up and held my arm up, then hit the sensors so that the projection displayed. Everyone gaped. \"We all have these in our desk drawers, they are our PED's. Look, it has a map, shows where everyone is. This icon says I can go dark if I don't want people to know where I am. We can contact each other, ask questions. I am 12, or Lovie. It also has user manuals and instructions on everything,\" I said, sitting back and playing with it. \n\nA few people got up to get theirs, most sat and ate and watched me. \n\n\"You really 18?\" the super tall Zachary asked me.\n\n\"Yeah,\" I answered. \"You play basketball?\"\n\nHe half smiled. \"Fair enough, sorry.\"\n\nI shrugged, turning back to the display. Thee was leaning in close, looking over my shoulder as I moved things on the display with my fingers.\n\n\"Shit! You didn't say it would freaking hurt!\" Ivy accused, coming back in, her big blue eyes brimming with tears. \n\n\"It wasn't that bad? It just scared me really,\" I answered, a little alarmed. \n\n\"What did it do?\" A boy asked, and he was so nondescript, I couldn't remember his name from the round of introductions. He was pretty-ish, in a soft, andogynous way and he had longish curly brown hair that hid his fine features. \n\n\"It sent a spike into my arm, then electrocuted me!\"\n\nI blinked at her. \"It was a pinprick, like when they poke you at the DR and a zap like static electricity,\" I said, closing the display so Thee would lean back to his own seat. He did not. \n\nAli leaned up in his seat, looking across the table at me. \"So, a farm girl, huh?\" he asked, his eyes shining. \n\n\"Yeah. What about the rest of you?\" I asked, blushing as I pulled my eyes away from Ali's. He was too cute for his own good!\n\nWe sat and talked about where we grew up, what we did. Most of us. Some didn't speak, they just watched. Thee, for one. The beautiful but angry looking girl named Tanisha. Kenan. He sat glaring at me like I had taken something from him. \n\nHours later, people were relaxed enough that some were laughing and joking again. I noticed Geo loved to make the girls laugh, always smooth. Mark loved to make everyone laugh, then blushed when the spotlight was on him. He wasn't a traditional handsome with his strawberry blonde nest of hair and overly pink lips, but he had a cuteness about him when he smiled. \n\nJaydan liked to command the conversation and he was a man's man despite how ridiculously hot he was. High cheekbones, sculpted jawline, tousled black hair that touched his eyebrow lightly. He looked like an asian god. \n\nZach was quiet, but not in a shy way, in a way that said he was used to being the odd man out and not being included. He towered over the others at at least 6'7\" and skinny. He tried to hide his face in messy hair. He wasn't overly attractive either, but he wasn't ugly.\n\nDavid and the androgynous Eric, I remembered his name now, were both shy and quiet, choosing to watch as everyone else talked and laughed. David could have been Ella's brother with his white blonde curls and big blue eyes, super pale. They looked like they could be twins save that he was taller. \n\nNone of the girls were shy, none of us. Tanisha sat with her arms crossed and her full lips pressed in disapproval, but it wasn't a shy silence. She was about to explode. The situation had her angry instead of upset or sad.\n\nNettie liked to smile, and her full eyebrows made her very expressive. She wasn't a supermodel, not like Ivy or Tanesha, but her hippy happy personality made her more likable. \n\nMarta had what some referred to as a resting bitch face. She was pretty, but she looked unhappy. She was quick to smile though, and super nice. Of all of the girls, she was the closest to seeming shy.\n\nKatie looked older than 18, though I had seen her interview on the news and knew she was. We had been at the station at the same time and I had seen her, so I was curious about her. She looked like she should have been walking into a law office somewhere, so professional and perfect looking. I couldn't see her as a beekeeper in my mind. Her green-blue eyes peeked under her black bangs like they had seen a lot.\n\nMaggie was loud and wild and loved to laugh and make fun. She was a tomboy and boisterous and fun. I liked her and her overly full lips and wild hair.\n\nIvy, who I had thought I might like to be friends with, was turning into the sort of drama queen that I disliked. She needed constant attention and wanted to be the center of it. It was hard to see past it to her personality.\n\nAysha was always smiling, her lips always turned up as she looked around the room with her bright, beautiful, brown eyes. Her hair was curly and wild, bigger than her face and I wondered how she was going to manage it. \n\nAfter a while, Kenan stood again and tapped on his glass with a fork. I wanted to roll my eyes but didn't. I was not a fan of Kenan and what he was trying so hard to be.\n\n\"Now that we have had a chance to sit down and talk, get a little food in us, relax and take it all in a minute, I think we need to talk about leadership and electing someone.\"\n\n\"You're right,\" I said, standing. \"I think we should set a time to do that. Gamma, what is the cutoff time for us to elect a leader?\"\n\n\"Ten AM Sunday morning.\"\n\n\"Right, 9 AM good with all of you?\" I asked around the table. \"By then a leader will have stepped up, shown us who they are? Not with words, but in action? We can nominate at 9, have 5 minutes to speak, then vote. There's only 18 of us, we can probably show of hands it. Easy peasy, yeah?\"",
        "There was agreement all around. \n\nI looked at Kenan who was glaring at me. \"Work for you?\" I asked pleasantly.\n\n\"Yeah,\" he answered. \"There's also the deal about pairing up...\"\n\n\"Gamma, is 10 AM also the time we need to find partners by?\"\n\n\"Yes.\"\n\n\"Gamma, if we do not choose a partner, what will happen?\"\n\n\"One will be chosen for you amongst those left unpartnered.\"\n\nI looked at Kenan again. \"Seems like we have time,\" I said with a shrug.\n\n\"What the hell!\" Tanisha yelled, standing. \"Gamma, what the hell? What if we don't want a partner?\"\n\n\"One will be chosen for you.\"\n\n\"And if I say fuck that? Do my own thing?\"\n\n\"If you do not abide by the rules laid out for you, you will be punished.\"\n\n\"Punished how?\" she demanded.\n\nA panel moved and a rod slid out from the wall, then shot an arc of electricity, hitting Tanisha in the back and dropping her to the floor. The rod withdrew and the panel closed as we all gaped. Ali rushed to Tanisha and rolled her, looking at her back. \n\n\"That was messed up!\" Maggie said angrily.\n\n\"So I guess we don't fuck up,\" Katie said with a defeated sigh.\n\nI looked at Kenan. \"Can you shut that down?\"\n\n\"I don't know! I would have to try and... I don't know. I will find out,\" he said wide eyed, forgetting to be angry at me as he stared at Tanisha.\n\nI looked around. \"All of you, go ahead and get your PED's. Lets clear out of here and give Ali some room to work. Gamma, is there anything in the medbay that he can put on her for that burn?\" I asked, herding people out.\n\n\"Yes, there are several small ointments in the supply closet.\"\n\n\"Ella, do you remember where the medbay is? Go find what she is talking about and get it to Ali. The rest of you, get your PED's and we will group up and learn to use them. Then we can tour the facility once Ali and Tanisha join us. Hurry up, let's meet back in the day room!\"\n\nI sat nervously on the end of the chair near me. I had assumed we were going to be able to fake the coupling up thing, but how close were we being watched, and by whom? I didn't want to ask too many questions in front of the others and scare them though.  \n\nJaydan came back out, looking down at me. \"You are an only child?\" he asked.\n\n\"No, I have a little brother. Why do you ask?\"\n\nHe shrugged. \"Not your real brother. Step? How old when he moved in?\"\n\nI stared up at him, wide eyed. \"You sure you're a blacksmith?\" I asked uncertainly.\n\nHe shrugged again. \"I dabbled, it was my dad's thing really. I know how. Not what I wanted to do with my life but here we are. How old?\"\n\n\"Fifteen? But he is my real brother. Half brother. My dad is a trucker and he had... another girlfriend. When she went to jail, Drew moved in with us.\"\n\n\"So basically an only child, for all intents and purposes.\" He went quiet then as the others began coming in with the PED's. Most had them on, but Ella and David were both holding theirs with identical looks of worry on their faces. \n\nI smiled at them. \"You two sure you aren't related?\" I asked teasingly.\n\n\"Girl, I was thinking the same thing!\" Maggie said to me, her eyes huge. \n\nI got up and helped Ella put hers on while David took a deep breath and snapped his on. We were just sitting down when Ali was coming in with Tanisha, helping her walk. She had tears in her big brown eyes and her lip gloss was gone. I felt horrible as I sat there and opened the display. \n\nWe fumbled through it, telling each other things we found, assigning ourselves names for our devices. When I looked at Thee, I noticed he didn't have his display open. When I looked harder, I noticed he didn't have his PED latched shut. I met his eyes and he was giving me a challenging look. I said nothing as we went back to what we were doing. \n\nOnce we had the basics figured out, I suggested we split into groups of four and five and explore the east wing. In the giant, olympic sized pool area, I wandered away from the others and Thee followed me like I knew he would.\n\n\"Deciding to opt out of the PED?\" I asked with a small smile.\n\n\"Are you one of them?\" he demanded.\n\n\"What?\" I asked, laughing. I couldn't help myself.\n\n\"You an agent, sent to watch us, keep us on the right path?\"\n\n\"No, Thee, is that why you have been following me around?\"\n\n\"No,\" he snapped, looking me over again. \"Gamma, if she lies, will you zap her?\"\n\n\"I will not punish a guest on the word of anyone but the leader.\"\n\nHis eyes lit up then as he looked around. He looked back at me. \"That why you are angling for leading?\"\n\n\"I'm not. I just don't want it to be Kenan. He thinks he can, but he can't.\"\n\n\"They'll pick you.\"\n\n\"I'll say no thanks.\"\n\n\"Because you're an agent and you're a plant, here to watch, not lead. Right?\"\n\n\"No, Thee. I came from a small farm town. I am just not someone who suffers fools. I see a problem and I tackle it. You know? I lost my family out there just like everyone else. My mom, my brother. My dad, I guess. Everyone. My friends... I... I don't want to dwell on that right now, it won't help. Later, when I am alone.\"\n\n\"Hey, did you see the sauna? And the hot tub?\" Marcus asked excitedly, coming up to us.\n\n\"No!\" I said smiling back. \"Show me?\" \n\nI let him lead me away, leaving Thee behind me. \n\nA little over an hour later, we were back in the living area. I was curled up alone in a chair while everyone was talking about the amenities. A hand on my shoulder made me jerk and flinch.\n\n\"Sorry,\" Ali whispered. \"May we speak alone?\"\n\n\"Sure,\" I said, standing and following him to his room, the very first one. It was a lot like mine, at least in shape. There was no plot map, but there was a TV. It was also in a darker wood with white accents instead of white wood with green accents. Mine was much brighter. \n\n\"I know it is forward of me to ask,\" he said, turning to me and blushing. \"But I wanted to ask if you might stay here tonight. Not... for why you may think! I mean... \" he swallowed hard. \"Let's be honest, me and you? I liked you right off, you are smart and cute and you are capable. That is not all though. The one, the engineer, I do not think... I do not think he should be here. He isn't... like the rest of us. He is smart, yes, but... his head is unsound. The way he watches you... the things he is saying about you... You need to be with someone else and not alone. You understand?\"\n\n\"I get it. I don't know if he is a sociopath though he does lean that way, but I do know he is smart. Smart enough that he saw through this from the beginning.\"\n\n\"Yet he came?\"\n\n\"And he wouldn't be alive if he didn't. I get the same vibe from him. I don't trust him, he is super possessive, but I also feel like it is a little sister possessive and not girlfriend possessive.\"\n\nHe laughed. \"No, no way. I have seen him look at you. He sees a girl and he likes what he sees. I think you...\"\n\nThere was a knock on his door. He looked down at me, eyebrows raised and I gave him a tight lipped smile. \n\n\"Wanna wager?\" he asked softly.\n\nI opened my PED and looked, then shook my head. It showed no one outside of his door, which could only be one person. \"No, no wager.\"\n\nHe sighed and opened his door. Thee was there, looking in at me with a scowl. \"Can I talk to you?\" he asked.\n\n\"Yeah, as soon as I am done talking to Ali.\"\n\n\"Now,\" he insisted.\n\nAli looked down at me in concern. \"I can...?\"\n\n\"No, it's fine. I will talk to you later? Umm... you might find me in Ella's room later. She is upset.\"\n\nI followed Thee out into the hall and he stopped in front of my door as if he were waiting for me to let him in.\n\n\"What's up?\" I asked with a blank smile, crossing my arms.\n\n\"I want to talk to you,\" he said again. \"Alone?\"\n\n\"Ok, no one is here. What do you need?\"\n\n\"In your room, Little Love.\"\n\n\"I'm not letting you in my room, Thee.\"\n\n\"Hiding something?\" he demanded, moving closer.\n\nI backed up, then started sliding down the wall. He put his hand on the wall to block me. I reached up and snapped his bracelet shut and he hissed in anger and surprise. \n\n\"What the hell?\" he demanded, trying to pull it off. \"Why did you do that?\"\n\n\"Serves you right! Now back up and stop being so creepy!\"\n\nHe grabbed me and my wrist, then pressed my hand to the handle and pushed into my room, shutting the door behind him.\n\nI jerked away and he let me as he looked around. The plot map was still open and up and he went to it, looking at it. \"What is this? How you control everything? Keep track of us?\"\n\n\"You are out of your mind! It's a plot map! For crops! Gardens! Look, see, it shows fields and gardens and a list of seeds available. Idiot!\"\n\n\"Fine, what else does it do?\"\n\n\"I don't know, I haven't looked at it yet. Get out,Thee.\"\n\n\"No! If it's not you then it's someone. Someone has to be an agent, spying on us! Maneuvering us.\"\n\n\"Thee! Look at me. Look around you. Look at this,\" I said holding up my wrist. \"This is not human tech. None of this is. Look! We are being watched and led, yes, but not by each other. We are being watched by the tech around us, by Gamma or whatever the AI is called. We are being watched from space, you saw the camera.\"\n\n\"You seriously think it's aliens?\" he demanded angrily.\n\n\"Yes! I do! This tech, all of this springing up overnight! Wiping mankind out to restart the earth. Because man was destroying it. Undoing everything man had done and making us start over? You really don't think that was another race of beings, interfering?\"\n\n\"You think all of that is real?\"\n\n\"I do! Further... I think they mean to make us pair up and... repopulate the earth.\"\n\n\"Like a human farm?\" he asked, smirking. \n\n\"Yes! They are making us pair up and there is someone whose only job is to be a midwife. Ali could handle it unless it was constant and every girl all the time.\"\n\n\"Ok, say I believe you. I want you.\"\n\nI blinked up at him. \"Thee... I don't think...\"\n\n\"What? I'm not good enough? Not cute enough? Not as charming as your stupid medic asshole?\"\n\n\"Thee, I am done talking about this right now. You need to back off. Just let things be normal the next couple days, ok?\"\n\n\"No. I don't want to be stuck with one of the others. I want you.\"\n\n\"Thee! You need to go!\"\n\n\"Little Love, listen to me, please?\"\n\n\"I don't want you to call me that!\" I yelled, then stormed out, hurrying down the hall before he could catch up. \n\nAli was waiting by his door, looking at me warily. He looked past me and I knew he was looking at Thee who was close behind. When I went out to the living room, the others had pulled up the couches to a tight circle. I squeezed in next to Ella and Ali sat the next couch over.\n\nThee stopped directly behind me, standing to hover over me.\n\n\"If you are playing, you have to sit down man!\" Geo said. \n\n\"What's the game?\" I asked with a smile as if I wasn't flustered and upset.\n\n\"Truth or dare!\" Marcus said, grinning.\n\nMarta leaned around Ali. \"Can you think of a better way to get to know each other?\" she asked, smiling. \n\nI laughed. \"No, I guess not. Thee, there is room over on that couch between Nettie and Eric,\" I said, shrugging his hand off when he put it on my shoulder.\n\n\"You don't need to play this,\" he said angrily.\n\n\"Dude, what is your deal?\" Geo asked, turning to look at Thee. \"She your ex or something? Why are you freaking out about her?\"\n\n\"I never met him before today,\" I said quickly. \"Thee, go sit over there or stand, whatever. Quit acting like you own me!\"\n\n\"Lovie!\" he said angrily.\n\n\"He was a psycho in school,\" Ivy said, curling her feet under her. \"Most likely to stalk a girl, most likely to shoot the school up, most likely to...\"\n\n\"Shut up you complete bitch! Gamma! Who should Lovie pair with?\" Thee demanded angrily.\n\n\"Lovie Mason would be best suited for Jaydan Wyatt, Alessandro Legge, or Marcus Chester, in that order,\" Gamma answered. \n\nEveryone went still, then the questions poured in, one on top of the other as everyone tried to ask who they were best suited for.\n\n\"Everyone stop!\" I yelled, standing, turning to face a red faced Thee. \"Gamma, who should Timothy Barker pair with?\"\n\n\"Timothy Barker is best suited for Ella Jenkins or Katie Patton.\"\n\nI looked up at him sadly as he smouldered. \"I don't care what it says on paper,\" he said angrily.\n\n\"Gamma, who should I pair up with?\" Geo asked, grinning.\n\n\"Gamma, belay that!\" I said quickly. I looked at Geo. \"Do you really want to know who fits you on paper, or do you want to know who you actually like?\"\n\nHe shrugged. \"I thought it would be fun.\"\n\n\"Sure, it seems fun, but what if it says Aysha, and then you really like Aysha, but then you start to second guess yourself thinking you only picked her because Gamma said to? Do you really want that doubt there? Make a real choice.\"\n\n\"She's right,\" Jaydan said. \"As banal as it is, this game we were about to play is a good way to get to know each other fast. Only thing that would help more is alcohol. So we doin this or what? Dude, if you don't want to play, you can go to the other room?\" he said to Thee, who was still hovering. \n\nI looked over at him. \"Sit and play,\" I said calmly. \"Maybe you will learn something. Jaydan, why don't you start?\"\n\nThee sat and we started playing. Shockingly, no one picked Thee for several long rounds as he just sat and stared across at me. \n\n\"Lovely!\" Marcus cheered happily, truth or DARE!\"\n\n\"Truth!\" I laughed. I decided I liked Marcus quite a bit, he may not be model gorgeous but he was a lot of fun.\n\n\"Awwwe! Fiiiine. Ok, Where is the weirdest place you have ever masterbated?\"\n\nI laughed and shook my head. All the questions had been this direct and the dares were getting worse. \"Ummm. I know! ISS. The ISS room at school!\"\n\n\"Holy shit, you had an ISS? You seem too... goody two shoes?\" Maggie said, leaning in.\n\n\"Dude, she said she got off in the ISS room and that's what you take out of it?!?\" Marcus laughed.\n\nI was smiling. \"I just had a day of make-up testing from being home sick and they had nowhere else to put me.\"\n\n\"I KNEW it!\" Maggie laughed.\n\nI looked around and my eyes stopped on Thee. \"Thee, truth or dare?\" I asked, smirking.\n\n\"Dare,\" he answered before I got the question out of my mouth. \n\n\"Ok. Kiss Nettie, open mouthed for at least twenty seconds.\"\n\nHe showed me his teeth in a grimace, then turned and grabbed Nettie's face and kissed her roughly. She flipped me off while he was doing it and I giggled.\n\nThee turned back to me, his lips red. \"Lovie...\"\n\n\"No! Can't pick her, she picked you! You have to pick someone else!\" Marcus said loudly, interrupting. \"Rules!\"\n\nThee glared, but looked at Ali. \"Ponytail, truth or dare?\"\n\nAli turned to me with a smirk. \"Truth, I guess, since I don't want to drink my own piss or something equally as horrifying that you would come up with for me.\"\n\n\"How old were you when you stopped peeing the bed?\"\n\nEveryone kind of half chuckled in confusion. \n\n\"Ummm, to my knowledge, I never wet the bed?\" Ali said, confused. \"Why, was that a thing for you?\"\n\nMore confused and wary chuckles.\n\nAli turned away as if nothing had happened. \"Eric! Truth or dare!\"\n\nI looked at Thee sadly. I had given him a chance to be normal, but he had just tried to embarrass Ali. \n\nHalf an hour later, David surprised everyone by picking Thee. Thee was shocked as well. His face went from confused to half hopeful as he looked over at me. \n\n\"Dare,\" he said.\n\n\"I dare you to kiss Aysha... on her nipples. No shirt.\"\n\nThe game had been getting risque, but this was a new level. Nudity. Aysha didn't hesitate as she pulled her shirt off. Thee stood up and went to her, then pushed her back like a predator with prey and jerked her bra open as she gasped. He sucked on her breasts in front of everyone, licking, kissing, sucking. Everyone was watching, frozen and shocked as she lay under him squirming and holding handfuls of his hair. \n\nHe finally stood and turned to me. His lips were swollen and red and his eyes were hooded. Was that just a twinge of jealousy I felt?\n\n\"Lovie,\" he said, his voice hoarse. \n\n\"Dare,\" I said confidently.\n\n\"Come suck my cock.\"\n\n\"Nope! No dare for self gratification. You can however, transfer that dare to another dude?\" Marcus said hopefully. \n\nThee glowered down at me. \"Fine. I dare you to go down on Ella.\"\n\nI was fairly sure he thought I was going to bow out as everyone cheered and yelled and laughed, knowing it was too much. I stood and went to Ella who looked horrified. \"You good?\" I asked her.\n\n\"I... I... Don't show anything?\"\n\nI nodded, kneeling in front of her and sliding my hands up her skirt to pull her panties off. There were hoots and hollers as I handed them to her, then spread her legs slightly.\n\n\"No!\" Thee said, pulling me back. \"No! I wasn't serious!\"\n\n\"Come on man!\" Geo said pleadingly. \n\n\"Dare is a dare, she has to do it!\" Marcus said.\n\n\"She gets one switch!\" Thee snarled. \"Pick truth Lovie!\"\n\nI smiled up at him. \"No way.\" I turned and pushed Ella's legs apart, put my head under her skirt, then wrapped my lips around her clit and sucked. She moaned, her hands going to my head as I got her wet and licked and sucked. I flicked her clit and slid a finger into her and she moaned louder, pushing her hips up to my face. \n\n\"Holy shit is she really doing it?\"\n\n\"Fuck, this is hot!\"\n\n\"Oh my god!\"\n\n\"Lovie stop! That's enough!\" Thee yelled angrily.\n\nI didn't stop, I kept going until Ella came with a cry of surprise and elation. I came up and took her panties, sliding them back on her, then I went to Thee. I pulled him down and kissed his lips, \"She tastes good, doesn't she?\" I asked, then let him go and sat back down. \n\nNot surprisingly, the game devolved rapidly. Once two people were dared together, they had to be skipped. \n\nI opened my PED, rather than watch what was happening around me and looked at the map. My eyes snagged on something.\n\n\"Lovie! Truth or dare?\" Jaydan asked.\n\nI sat up, ignoring him. \"Gamma, you said we could step outside to the barn and stuff after we were assigned our jobs, right?\" I asked.\n\n\"Correct.\"\n\nI looked over at Nettie who was kissing Marcus. \"Nettie?\"\n\n\"Yeah?\" she asked distractedly.\n\n\"I think there are animals out there in the barn?\" I said, showing her my PED and the labels in the barn.\n\n\"Oh shit!\" she said, jumping up. \"DUH! Oh my god. Everyone, come with me please? How many Lovie?\" she asked, hurrying out the back door through the kitchen as we all followed. It was dark out now and it felt eerie. If you didn't know you were in a dome, you would think you were outside. We followed her to the huge dome that was labeled 'barn' and went in. It was a giant structure and the lights came on when we entered. There were several bays, all of which had animals. Nettie ran to the first one and the others followed as I moved to the large display board. \n\nCows, chickens, pigs, rabbits, horses, ducks, goats. I looked through the screen, moving things, zooming in, reading. \n\n\"Nettie?\" I called. \n\n\"Just a minute! Trying to find where the feed is kept!\"\n\n\"Here!\" I called. She hurried over to me. \"Look, you can feed them on here, it's set on a timer to feed them. It looks like your main job will be putting them out to pastures, switching pastures, seeing them bred, deciding what to butcher. Basically keeping us in meat, eggs, milk and stuff for however long we are here. It even shows on here who is in heat and how old they all are, everything. You'll have to let me know how much you think you need, grainwise, for everything. I will start in the morning looking over the plots and seeing what I can plant where.\"\n\n\"Well this is handy,\" she said, taking over. \"Yeah, looks like I missed a milking schedule for the cows and goats and I probably need to gather eggs too. No big, who wants to help?\"\n\n\"Tell us what to do,\" Jaydan said, stepping up. \"We'll all help. Well, except Ali and Lovie I guess.\"",
        "\"I can help, I know what I am doing!\" I said happily.\n\n\"I can help,\" Ali said, \"no clue what I am doing though.\"\n\nIt didn't take long for us to get done, Thee casting me resentful glances every time he looked over while I was showing Ali how to find eggs and gather them. When Ali got me to a secluded corner and backed me to a wall with a grin, I was thrilled for our first kiss as he leaned in.\n\n\"Lovie, are you done?\" Thee demanded, coming around the corner.\n\n\"Yeah! Be right in with our haul!\" I called, blushing.\n\nAli didn't look away from me as he smirked from inches away.\n\n\"I'll walk you back,\" Thee said, moving closer and taking my wrist, pulling me off the wall.\n\n\"Thee! Leave off!\" I said angrily, tugging my arm out of his hand. \"I'm an adult and if I want a minute alone with someone, I can decide.\"\n\n\"Not him,\" Thee hissed.\n\n\"Man, really, what is your deal?\" Ali asked angrily, squaring up to the much larger Thee. \n\n\"Everything cool here?\" Jaydan called from the top of the long chicken coop.\n\n\"No, hold on!\" I said, pulling away from both boys. \"I'm walking back with you.\"\n\n\"You ok?\" He asked, taking the towel I had handkerchiefed into a pocket.\n\n\"Yeah. Sorry. You read people, what is wrong with Thee?\"\n\n\"Complete lack of social graces, awkward as hell and head over heels for you,\" he answered matter of factly.\n\n\"And Ali? Is he toying with me?\n\n\"No. Ish. You may not have noticed, but you are short. Small. So is he for a dude. Only other option for him is Ella, maybe Katie if she never wears heels. Some guys wouldn't care, he does. You are cute too. So is he playing you? No. Can I be sure he wouldn't pick someone else if he wasn't so focused on his size? No. I can tell you this. The dude is self absorbed. He will never like anyone more than he likes himself.\"\n\n\"Thanks. I said I would hang with him tonight.\"\n\n\"Cool. Have fun, feel him out if you want. You two would make cute kids. You're what, hispanic?\"\n\n\"No. White, just have that look.\"\n\n\"No offense.\"\n\n\"None taken, not at all. I know I have that look. Thee... is he self absorbed?\"\n\nJaydan half laughed. \"Naw. Thee is Lovie absorbed. Has been since he laid eyes on you when you walked up. He may be intense, but the dude would worship you. Just don't piss him off. His temper would be a volatile thing. Honestly, I ight avoid him, not let him think he has a chance so he will move on.\"\n\nI smiled and thanked him, then went inside. For a moment, I considered going to my room and ignoring everyone, but Thee caught up to me quickly. \n\n\"Can we talk?\"\n\n\"Tomorrow, Thee,\" I said tiredly.\n\nHe put a hand on my shoulder. \"Don't stay in his room tonight? I know almost everyone is already coupled up and hanging tonight, but... just sleep alone? Or, if you don't want to be alone, stay with me?\"\n\n\"Thee... I told him I would hang tonight and talk. That's all. Tell you what though. If you can stop being a hovering, possessive ass, we can hang tomorrow?\"\n\nHe scowled. \"I don't want your pity company.\"\n\n\"It's not pity. I would like to get to know the you that isn't all controlling and angry.\"\n\n\"Tonight. Give him time tomorrow.\"\n\n\"Hey Lovie, you still coming to hang?\" Ali asked, coming up behind me and putting his hand in the small of my back. It felt electric, making me stand up straight and look at him.\n\n\"Yeah!\" I answered breathlessly. \n\nThee snarled and left, slamming his door.\n\nAli led me to his room and I felt myself blushing as he let me go and went to his closet. He came out with a t-shirt. \"Here, to sleep in,\" he said, turning his back. \n\nI changed quickly, then turned, meeting his eyes in the reflection of the TV screen. He had been watching me change! He smiled and turned, looking me over. \n\n\"You look great in white,\" he said, pulling me to the bed.\n\n\"Thanks,\" I said, watching him as he pulled his shirt off, then his pants. He got into bed with nothing but his boxers. \"Umm. Can you make it cooler in here? Or can I?\"\n\n\"Sure, whatever you want,\" he said, throatily, leaning close to me. \n\n\"Gamma, set temperature at 58 degrees. Ummm. Gamma, lights out.\"\n\nThe room went pitch black and I laid down as he chuckled. I felt his hand find my face in the darkness and he turned my face to his. I felt his breath on my lips moments before he kissed me, his lips full and hot and full of need. I kissed his back, tiny thrills shooting through me. His hand slid down, groping my breast through the fabric of his shirt and he let out a low groan as my nipples got hard and pressed into him. He pulled my shirt up and slid his hand up my ribs, caressing my breast and thumbing my nipple.\n\nI should have told him to stop, should have said slow down, we were supposed to be talking, but I was so thrilled and excited. Beautiful, sexy, hot Alessandro wanted me!\n\nHis hand slid down and into my panties and I gasped as he rolled his middle fingertip over my bud. I started to turn away from his kiss to tell him to stop, but he moved his other hand on the arm he was leaning on and took hold of my hair, holding me in place. He kissed me harder as he rolled his finger faster, then used his knee to nudge my legs apart.\n\nI took hold of his arm, whimpering as I pulled my face away. \"Slow down!\" I said desperately.\n\n\"You are so wet baby, you are loving this,\" he whispered, sliding his finger down into my slit, ignoring my hands trying to pull his arm away. \"I want to feel you come for me. You want to come for me Lovie?\" he asked in a whisper, kissing my neck.\n\nI did. Badly. My body was arching up to meet his fingertips as he rolled his fingertips and I was panting. He pulled my panties off and shoved my legs wider, then went back to rubbing my clit feverishly as my hands clutched him. He nudged my legs wider and wider with his knee and leg, but I didn't care, I was so close!\n\n\"Come for me Lovie,\" he whispered, his lips on my jaw.\n\n\"Ohhh, ssssoooo close! Ohhh!\" I came with a scream, my body going rigid as I bucked. He moved, pressing me down, holding me down as I came, then he jerked my leg up and I didn't understand what was happening for a moment until he was guiding his cock into my wet slit. He rammed in and I screamed again before he covered my mouth with his. I tried to push with my hands and turn away, but he held me down tight as he thrust into me again and again. \"Stop!\" I screamed, jerking my head away, but he buried his face in my neck and groaned, ignoring me. \"Please! Stop!\"\n\n\"Shhh baby, fuuuuck, almost... Almost there!\" he panted, still thrusting.\n\n\"No!\" I wailed and he clamped a hand over my mouth.\n\n\"Shhhh...almost...oh fuck baby,\" he groaned again, then rammed into me and came, throbbing and squirting inside of me. He lay on top of me, holding me down with a hand over my mouth, breathing heavily into my neck. \"That was perfect baby. You were so wet and hot and tight. I loved that,\" he whispered, kissing my jaw. \n\nHe moved his hand and I turned away. \"Get OFF of me!\" I screamed and he jerked.\n\n\"Babe?\"\n\n\"I said stop! I said no! Get OFF!\"\n\nHe moved back, looking perplexed, then condescending. \"Babe, it wasn't a big deal. I made you come, right?\"\n\nI scrambled up and snatched up my clothes, then fled the room to my own. I dropped against the door and cried, then tried to pull myself out of it. It was fine. It was going to be him anyway, right? That was what I had wanted? I yanked off his t-shirt and went to my shower, then curled up and cried again as the hot water pounded me. \n\nI went to my bed and lay there alone, but I didn't want to be alone. Not at all. I considered going to see if Ella was alone. I opened my PED. Only four people were alone. Me, Ali, Thee and Ivy. I sighed and closed it. I got up and went to door 13 and knocked. It opened like he had been standing there waiting for me. Maybe he had been watching me on his PED?\n\nThee stepped back allowing me entrance and I slipped in quietly, looking around. His room was silver on black. \n\nHe turned down one side of the bed quietly and held a hand out. I got in and he tucked me in, then got in on the other side, rolling to face me from a distance. After a moment, he spoke. \"Gamma, lights out.\"\n\nThe lights went out.\n\nHe set a hand over mine on my stomach. I rolled into him and let him hold me as I cried. He didn't ask, he just stayed quiet and held me. I realized he was probably thinking I was crying for my lost family, my lost life on the outside. I should have been, but I was crying for losing something I hadn't wanted to lose yet. Even if it was only by a day or two. \n\n\"I was a virgin,\" I said to his chest.\n\nHe went tense. \"I guess you wanted to rub it in?\" he asked darkly.\n\n\"It was just supposed to be the other... I didn't want more. It happened so fast and then I said no and stop but it was over.\"\n\nHe sat up, \"Gamma, lights on! He raped you? Is that what you are saying?\" he asked, his face going feral.\n\n\"I said no. I said stop,\" I sobbed brokenly.\n\nHe got up. \"Gamma, tell everyone to meet in the living room, now!\" he raged.\n\n\"Thee! No! I don't want this\" I yelled as Gamma made the announcement.\n\n\"Did it happen or not?\" he demanded, his nostrils flaring.\n\n\"It did...\"\n\n\"Then we are doing this,\" he hissed, picking me up and carrying me out to the living room where others were coming out. \n\nAli was among the last, looking guilty and upset.\n\n\"Dude, you RAPED her?\" Thee demanded, as soon as Ali was part way in the room.\n\nThere were noises of shock and murmurs of questions. Ali looked down and away.\n\n\"Ali?\" Geo asked incredulously.\n\nAli turned and went back to his room. \n\n\"Holy shit!\" Marcus whispered. \"Lovie, are you ok?\"\n\n\"She came to me crying, what do you think?\" Thee demanded. \"She said no, she told him to stop. She went in there thinking they were going to talk and that's it and instead he raped her!\"\n\n\"Thee!\" I whispered miserably, horrified.\n\nElla came to me and took hold of my hand, then Tanisha. \"Girl, I knew this was going to happen,\" Tanisha said. \"No one to reign them in, no laws, just men taking what they wanted from us! This is some bullshit!\" she said angrily, rounding on all the men.  \n\nSuddenly the other girls were pulling away and the room divided. Thee was the only one standing among us. \n\n\"If any of you assholes thinks you are going to lay a hand on me, you are mistaken!\" Ivy said, lifting her chin. You won't touch me! You won't touch us!\"\n\n\"Bitch, no one was touching you,\" Kenan sneered. \"And you heard this place. Couple up, make babies. You saw what happened to Tanisha. So I suggest you cunt's watch your tone. We'll be fucking who we want to fuck and if you object you can have some of what she got. Right boys?\"\n\nThere was some shock and discomfort on their faces at first, then realization dawned on them.\n\n\"He's right, you know,\" Geo said. \"This place will lay you the fuck down for us if you don't lay yourselves down. I suggest you start trying to make your boys happy instead of telling us what you ain't gonna do for us.\"\n\nZachary stepped up with them, though he was quiet, then David did as well, though he was red faced. Eric stared at the floor as he stepped up.\n\nJaydan looked at them like he was seeing an interesting development, but said nothing. Marcus looked sick and backed away. \"No, that's not how it's supposed to be. We partner up like couples! Not like master and chattel. Husbands and wives!\"\n\n\"Bitch, really?\" Kenan asked. \"Gamma, tell Ali to get his ass out here. Marcus, get your ass over here. Which bitch you want? Thee, you want that little bitch? She's all yours. Take her and go. Ali, my man. You didn't do shit wrong. Come out here. Which one of these bitches do you want?\"\n\n\"What?\" Ali asked, horrified.\n\n\"Which one? We don't have to do shit. This place wants us to breed these hoes? We will breed these hoes.\"\n\n\"No! No, that isn't...\" Ali sputtered.\n\n\"From the guy who already raped a girl?\" Geo asked. \"Shut that shit down man. We are running this shit now. Think about it! Who will stop us? No one! If they say no? This place will put them in their place. You saw what it did to Tanny when she tried to say no. They are ours. Go ahead man, which one you want tonight?\"\n\n\"Oh fuck yeah, we are switching these bitches up!\" Kenan said gleefully. \"A new cunt every night!\"\n\nI was horrified as the girls around me stood in shock. \"Tanny?\" I whispered. \"You and Maggie get to the kitchen, get knives. The rest of you, after they break for the kitchen, run to your rooms. Ella, get Marcus to help you, Marta, get Ali. He will help. Katie, try to get Jaydan to help. Go!\"\n\nThey scattered and I realized I hadn't told Thee to take me to my room. It was chaos for a moment as half the guys took off after Tanny and Maggie, then tried to change direction and go after the girls fleeing to their rooms. \n\nMarcus and Ali did help them, but Ali shoved everyone into his room and shut the door. \n\n\"What the fuck?\" Kenan yelled, dragging Maggie in by her hair. The others followed. Tanisha must have bolted out the back door. \"Where are the others?\"\n\n\"Ali's room,\" Zach said. \n\n\"This one is mine,\" Thee said. \"You said I could have her and I am taking her to my room.\"\n\n\"Wait! Hold on. We have to find a way to get the girls out of Ali's room.\"\n\n\"Not my problem,\" Thee said darkly.\n\n\"We don't get them out, we get to share out these two bitches,\" Geo said, ripping Maggie's shirt open. \n\nJaydan turned and eyed me, assessing me. I was terrified. \n\n\"Gamma,\" he said loudly. \"Open com to everyone. I want to choose leadership now. Any nominations?\"\n\nThe boys all looked at him, confused. I was confused, but I was starting to think I understood. \"I nominate Jaydan Wyatt,\" I said, nudging Thee.\n\n\"I second it,\" Thee said, looking confused. \n\n\"I nominate Lovie!\" a female voice on the come said. \n\n\"I second it,\" another voice said. \n\n\"I decline nomination and put my support behind Jaydan Wyatt,\" I said quickly. \"I move to vote!\"\n\n\"I nominate Kenan Higgins!\" Kenan said loudly.\n\nThere was silence for a moment as Kenan looked around. \n\n\"I move to vote,\" I said again. \"All for Jaydan Wyatt, say 'aye'.\"\n\nThere were several 'ayes', but most people still seemed confused.\n\n\"Consensus was not achieved,\" Gamma announced.\n\n\"All those abstaining to vote, say 'aye'! You have to vote for Jaydan or no one. Silence counts as abstaining.\"\n\nThere was silence as everyone looked around. \n\n\"Consensus is achieved, Jaydan Wyatt has been elected leader for two years,\" Gamma announced.\n\nI breathed a sigh of relief as Jaydan gave me a small smile. \n\n\"Let Maggie up, let her go. All of you, go to your rooms. We will have a trial in the morning.\"\n\n\"Are you fucking serious?\" Geo asked, snorting and standing up to Jaydan.\n\n\"Gamma, what happens if the leader tells the others to do something and they don't?\" Jaydan asked.\n\n\"They are punished,\" she answered.\n\n\"So. Everyone. Everyone. Go to your room. Your own room. Now. All you girls too. No one will touch you or hurt you. Thee, let her go.\"\n\nThee set me down and I hugged myself. \"He wasn't going to hurt me when he wanted to leave with me, he was trying to get me to safety,\" I said quickly.\n\n\"I know, Lovie,\" Jaydan said gently. \"Go to bed. All of you. Alone. Everyone.\"\n\nI went to my room full of relief. Had I just done the right thing? Jaydan seemed fair and smart. A fast thinker. He had de-escalated that with a simple look and a trick because he had studied up on how this place worked. What else did he know?\n\nI curled up on my bed, alone, and cried myself to sleep.\n\nThe plot map woke me in the morning, chiming. A red button flashing. 'Action needed'. I got up and went to it and started going through what was on hand and how much space I had for what. I was organizing the orchards when my PED chirped and the display opened.\n\n\"All available personnel, come help in the barn.\" a robotic male voice said, then seconds later, \"No! Damnit, umm... any girls who aren't busy, or umm, Mark or Ali or Thee or Jaydan,\" Nettie said, sounding frantic. \n\nI ignored it as I continued laying out the orchards and moved on to where I wanted the grains.\n\nHalf an hour later, my PED chirped again. \"Everyone meet in the living room for a short trial, then we will have breakfast,\" Jaydan said. \n\nI stepped back, then went out front, feeling sick. Did I want to see all of them again?\n\nI sat next to Ella and she hugged me close. Thee came in and moved around to stand behind me. \n\nAli was sitting alone in a chair and the room had been arranged to face him. Jaydan was sitting on a table near Ali. When everyone was in and sitting, Jaydan stood. \n\n\"Alessandro Legge, did you rape Lovie Mason?\"\n\n\"Look, it wasn't like that! We were fooling around and she said no as I was coming. It was too late!\"\n\n\"Lovie Mason, is that true?\"\n\n\"No,\" I said, angry and embarrassed. \"We were making out a little. Kissing. He... he did more and I asked him to slow down. Then... without asking or warning, he moved and held me down and... raped me. I said no right away and stop. And again when I got his hand off my mouth. He was holding me down, he had me pinned. He knew what he was doing the whole time! I cried when he finished and he told me it was no big deal. He said it was ok that he did that because he made me come first.\"\n\n\"Is that what happened, Ali?\" Jaydan asked Ali.\n\n\"She was into it, she didn't say no till it was over, acting like the victim!\"\n\n\"Gamma, whose account is accurate?\"\n\nAli went pale as he sat up.\n\n\"Lovie Mason is accurate,\" Gamma stated.\n\nAli dropped his head to his hands.\n\n\"Alessandro Legge, you have been found guilty of rape. Does anyone contest this?\" Jaydan asked.\n\nNo one spoke.\n\n\"Alessandro Legge, relinquish your rights to Lovie Mason to the authorities that be. Just say it outright,\" Jaydan demanded.\n\n\"I relinquish my rights to Lovie Mason to the authorities that be?\" Ali said, confused.\n\nJaydan nodded and turned. \"We can decide as a group what a fitting punishment should be,\" Jaydan said. \"I open the floor to suggestions.\"\n\n\"Castrate him!\" Tanisha said.\n\n\"He'll need to be able to have kids,\" Jaydan said, shaking his head. \"Lovie? Any ideas?\"\n\n\"Shave his head,\" Thee said. \"Make him take two of those jolts Tanisha took, but no pain meds.\"\n\nI looked back at Thee, then at Jaydan and nodded.\n\n\"Anyone disagree with that?\" Jaydan asked.\n\nSilence.\n\n\"Ok, sentence to be carried out after breakfast. Kenan Higgins, George Lopez, Alessandro Legge, you are under strict quarters confinement for two weeks unless you are eating or doing your job or helping with another job. Do any of you want to contest and open it to a vote?\" Jaydan asked, looking at Kenan and Geo.\n\nNo one spoke, not even them.\n\n\"David Waters, Eric Pearson, Zachary Vaughan, you are banned from all amenities and have a strict 7 PM curfew to your rooms for two weeks. Do any contest this?\"\n\nNo one spoke. \n\n\"Alright, anything else before we close for breakfast?\" Jaydan asked. \n\n\"I want a slap each for Geo and Kenan,\" Maggie said, standing. \n\nJaydan nodded. \"Any objections?\"\n\n\"Let her punch them,\" Thee said.\n\n\"I second that!\" Tanisha said. \"And I want Lovie Mason as second in command. She saved us last night and I think she should be leading us.\"\n\nJaydan nodded. \"Lovie, will you take on leadership in the role of a vice president of sorts?\"\n\n\"I can do that,\" I said, embarrassed. \"But I didn't really do anything.\"\n\n\"Ok, A single blow each, of her choosing, for Maggie on Kenan and Geo. Anyone else?\"\n\nSilence.\n\n\"Ok, I would like to ask, in the spirit if unity, that once punishments are meted out and over, that the crime is dispensed. We do not bring it up again. We can live like people, right? Not be at each other's backs all the time? Meeting adjourned, let's eat!\"\n\nBreakfast was quiet and Ali stared at his food in silent, stewing, anger. As soon as I was done, I hurried to my room and shut the door. Moments later there was a knock. I ignored it, and the one ten minutes later.",
        "My PED beeped. \"Lovie, we are about to give Ali his punishment, don't you...\"\n\nI cut Jaydan off. \"No. I am really busy, actually, I have a lot to do.\" I turned the link off. I wasn't lying. I had a ton to do if we wanted crops. There were some planted, three gardens in various stages, but I needed to plan more, keep a cycle going so we were always in food.\n\nHalf an hour later, I ignored another knock. \n\nMy PED beeped. \"Little Love?\" Thee asked.\n\n\"Yeah, Thee. Sorry. I'm actually still super busy. I will be till lunch, then I need to go tour the grounds and the gardens, see what I am working with.\"\n\n\"Need company?\"\n\n\"Any other day, yeah. Today I need my space. Sorry.\" I turned it off. He had to understand. \n\nLunch came and I grabbed a sandwich to go as I left out the back. I heard the door behind me and I sighed, thinking I would have to send Thee away.\n\nIt was Jaydan who caught up with me. \"Are you alright?\" he asked softly, walking beside me.\n\nI had intended to say I was fine, I was busy as I looked at the map on my PED, but when I looked up at him and his open face, I sighed. \"How do I live with seeing him every day? Them? Knowing what they really are inside?\"\n\n\"Some men will show ugliness when faced with zero repercussions, but most will stay in line when they know there are. I'd like to think most wouldn't be ugly, but after last night... It was disappointing to see who was who. We will always know, that won't change. Hopefully they will grow. We all will. Short answer is you don't have a choice. Knowing he paid for his crime crying and begging like a girl might help. Long answer is time will help, but time is long in coming. I will do what I can to help, just say the word. Where are we going?\"\n\n\"Here,\" I said, pointing to the map.\n\n\"You know... there are horses for this? And ATV's?\"\n\n\"There are?\"\n\n\"Yeah,\" he said, laughing.\n\n\"Well I needed a walk,\" I said, smiling. \"So who do you think you will choose in the morning.?\"\n\nHe shrugged. \"A few nice girls, a few pretty girls, a few smart girls. I've talked to a few. I don't know. What about you?\"\n\nI shrugged. \"Probably Thee. You said he would never hurt me. He cares for me.\"\n\n\"Do you like him though?\"\n\nI shrugged, thinking about it. \"Thee is hard to like like you mean, but he has good intentions. He would never... rape me. And he is cute-ish, in a brooding bad boy kind of way.\"\n\n\"He's intense, that's for sure. Smart. I think he is one to hold a grudge, though.\"\n\n\"Probably,\" I agreed. \n\nHe stopped walking and I paused and looked at him. \"Do you need help with what you are doing? I don't want to bug you.\"\n\n\"No, I am just getting boots on the ground, my eyes on the dirt. That's all. And yeah, I do kind of want to be alone, to think. Thanks for the talk though. Good leadership in people who look out for their people.\"\n\nHe smiled and nodded, then turned and walked back.\n\nI made my tour feeling a little better about everything, but thoughts of Thee did nag at me.\n\nIt was dark by the time I got back, feeling sore and good after walking so much in the sunlight, being 'outside' with the plants and the dirt. \n\nThe dome was dark and quiet as I slipped through to my room. When I opened my door, Thee opened his up the hall and looked out. I waved slightly before hurrying in and shutting my door. I stood under the shower feeling almost normal. A day working in the dirt, in the sun. Feeling that pleasant soreness. A nice shower. \n\nI curbed up in bed with a sigh. \"Gamma? Turn off all notifications and my PED unless it's an emergency?\" I said sleepily. \"Sundays are for sleeping in.\"\n\n\"Contact severed.\"\n\nThe way she worded it made me shiver, but I passed out moments later.\n\n\"Lovie! Wake up!\" \n\nI jerked and turned, squinting in the brightness. \"Jaydan?\"\n\n\"We've been trying to get you on your PED but Gamma said you shut down contact. I had to override your door protocol. It's time to partner up? So you don't get fried?\"\n\n\"Oh! Right,\" I said sleepily, getting up. I stumbled out of bed, following him in my PJ's as I was, not caring how I looked as I yawned and stretched. \n\nSomeone laughed and I flipped the bird in that general direction, which got more laughs.\n\n\"Alright, we are all here,\" Jaydan said as I curled up on a chair and half dozed again. \"I know some of you have already chosen partners. Those that have, go sit with your partners in the couches on the south east wall.\"\n\nI peeked, curious, then sat up as Tanisha and Ali walked over, holding hands. I blinked. Was I seeing that right? Tanisha? Who had wanted to castrate him? Nettie and Zach sat also and that didn't surprise me as much. Marta and Eric as well, they looked adorable together. \n\n\"That leaves the rest who are unpartnered for one reason or another. We talked and decided that the best way to take the next step is a draw of sorts. Open your PED, open the Gamma Doc box, put in your first choice and if they match, Gamma will announce it.\"\n\nEasy enough. Opened my PED and stared at it a moment before shrugging and typing in Timothy Barker. He cared for me. He would try to make me happy and I felt like I had feelings for him too, a little. I could like him. \n\nI waited. \n\n\"Results: Aysha Joyce and George Lopez. Ella Jenkins and David Waters.\"\n\n\"Easy enough, right?\" Jaydan said as the two couples got up, blushing in Ella and David's case and grinning in Aysha and Geo's case and went to the other wall. I felt like I had been punched in the stomach. I sneaked a peak at Thee and he was glowering down at his PED, refusing to look at me. I felt crushed. \"Ok, One more time, then Gamma pairs who's left. Go for it.\"\n\nShaking, I typed it in again. 'Timothy Thee Barker.'\n\n\"Results: Kenan Higgins and Katie Patton. Maggie Ortega and Marcus Chester.\"\n\nI swallowed hard and looked back at Thee again. It was just me, him, Ivy and Jaydan left. I was heartbroken.\n\n\"Ok. Gamma, who do you pair Ivy Lewis with?\"\n\n\"Ivy Lewis is paired with Timothy Barker.\"\n\nI looked down, my heart trying to wrench out of my chest.\n\n\"I guess that's me and you,\" Jaydan said softly, touching my arm. I jerked back instinctually, then made myself be still. I nodded, not trusting my voice. I looked back and Thee was finally looking at me, tears in his eyes. Ivy had her arms crossed, looking away from everyone. \"Umm,\" Jaydan said awkwardly. \"So, this day is kind of for the partners to get to know each other... and umm. You know. Start pairing up. So. Those confined to quarters, I guess go back to where you need to be, if you don't have a job. Umm. There is a rule. Umm, Gamma, what is the rule on partners and how often they need to... umm, have sex?\"\n\n\"Partners must attempt to procreate at least once per day unless the female is on her menstrual cycle or either partner is ill. Partners who resist will be punished and will be required to undergo a series of treatments to ensure willingness.\"\n\n\"So. Umm. Go ahead and spend some time with your partners and talk. Stay mindful of the rules,\" Jaydan said, then reached down and touched my arm again. \"Let's go talk?\"\n\nI got up and followed him, but he stopped at my room. I let him in and he looked around. \n\n\"I thought we'd stay in here since you have to work here. We can stay here until we start having kids, then there are houses. I like this, super bright and cheerful. Mine was redwood with electric blue accents. This is very... one with nature. Like you I guess. So. I guess I'm not what you were hoping for?\"\n\nHe sounded so hurt, I forced myself to stop mooning over my loss and reconsider. Jaydan was a catch. Nice, smart, hot. Why was I so stuck on Thee? \n\nI made myself smile up at Jaydan. \"Sorry. I just... I thought he liked me. It never even occurred to me that I was in your league. Just hurt when he didn't pick me.\"\n\n\"I understand. I guess you upset him? Or was it not a grudge?\"\n\n\"I don't know. Maybe. Maybe he was upset that I blew him off yesterday to spend time alone.\"\n\n\"Maybe he saw us walking? Maybe it's my fault? I'm sorry.\"\n\n\"No, hey, it's fine. I am upset I didn't get second place when I should be happy I came in first, right?\" I asked. \n\nIt felt like a lie. \n\nHe smiled and moved close, pulling a hand out of his pocket to smooth my hair back and kiss me on top of the head. \"I will work to make you happy, Lovie,\" he said gently. \"You were my first choice, even if I wasn't yours.\"\n\n\"I was?\" I asked, shocked.\n\n\"Yeah. That's how I know you didn't pick me,\" he said with a sad smile. \n\nI blushed. \"If I had thought for a second you felt that way...\" I said, astonished, but didn't finish it. I still knew it was a lie. I still would have picked Thee. \n\n\"Hey, it's cool,\" he said, hooking my hair behind my ear. \"So, tell me about what home was like,\" he said, pulling me across the room to sit on the bed.\n\nI told him about where I grew up, and how I grew up and he told me about him and how his dad had been a blacksmith and he had grown up learning it, but he was going to double major in law and psychology. We talked until lunch time and he led me to the dining room holding my hand. We were smiling and laughing right up until I saw Thee. \n\nHe looked down at me, pissed, his nostrils flaring, barely containing himself he was shaking so badly. \n\nI shied back. \n\n\"Dude, get over yourself,\" Ivy said, shoving past him, forcing him to the side. \n\nI dropped my eyes and kept going. Jaydan patted my shoulder and sat forward in his chair, blocking my view of Thee and therefore Thee's view of me. I was grateful for it. What was his problem? He had rejected me! Was I not supposed to get a happy ending? I felt anger welling up.\n\nI ate quickly, then went to my room, ignoring the invitations from others to join them. I went to the Plot Map and started working until Jayden came in.\n\n\"Hey,\" he said, hands on my shoulders, his thumbs rubbing softly. \"You cool?\"\n\n\"As a cucumber. Just getting some work in.\"\n\n\"Don't let it bug you. Come on. Put your swimsuit on and come to the hot tub with me.\"\n\nI turned to him, grinning. \"I've never been in a hot tub.\"\n\nHis smile was stunning. \"Hurry up then!\"\n\nSeeing him in his swim trunks in the hall made me stop and stare. He had a beautiful, muscular, hard body. Tan and tall and slender, as beautiful as his face.\n\n\"Wow Lovie,\" he said, his eyebrows climbing.\n\nI reached up to my messy bun, was it down? Did it look stupid? Did I look stupid?\n\n\"You look freaking hot as hell!\"\n\nI froze, blushing. \"You too,\" I said faintly. \n\nHe held my hand to the hot tub, looking down at me ever so often as we walked. Maggie whistled when we walked through the living room and I smiled at her. We climbed in the huge hot tub and I groaned as every sore muscle I had ever had seemed to try and climb out of me and get to the heat. \n\n\"That good huh?\" Jaydan asked, putting his arm around me.\n\n\"It feels amazing. Oh my gosh.\" I laid my head back on his arm and sighed.\n\n\"Incoming!\" Maggie yelled from across the room. \n\nI looked and her and Marcus were walking over in their suits. They climbed in across from us and a noise made me look back. Thee and Ivy were coming. Ivy looking like she had spent an hour getting ready to come sit in the hot tub and Thee in cutoff shorts. I spun, going tense. They got in and sat down and I started to move. \n\nJaydan caught me and leaned close, nuzzling my jaw. \"Don't let him chase you off. Ignore him. Just you and me here Lovie.\"\n\nI nodded.\n\n\"This is awesome!\" Marcus said, waving his hands in the water. \"My uncle used to tell stories about his hot tub parties.\"\n\n\"Ewww!\" Ivy said, pushing water away like she could push the story away. \"We know what things you mean. Don't even. So. This place already sucks, right? The assholes?\"\n\n\"Doing their time, let it go,\" Jaydan said, his head back.\n\n\"Well, all I know is if that creeper comes near me, Timmy will squash him like a bug.\"\n\nI glanced at Thee who was clenching his jaw. He hated being called Timmy. She was doing it to get a rise out of him. \n\n\"Maggie,\" I said, changing the subject. \"I have to admit I was super happy to see you and Mark end up together. How are things going?\"\n\n\"Good! The boy can make me laugh!\"\n\n\"He a good kisser?\"\n\n\"I...uhhh... don't know yet!\" she said, laughing. \"What about Jay?\"\n\n\"Me either, actually,\" I said, blushing. \n\n\"Me either,\" Ivy said dismally.\n\nI ignored her. \n\n\"We could play truth or dare, but dares on partners only,\" Marcus said hopefully. \"Or girls. Girl on girl. That's cool too. Yeah?\"\n\n\"Yeah!\" Maggie agreed, sitting up.\n\nI was less enthusiastic, but I sat up. Jaydan did when I did. I didn't look at Thee and Ivy. \n\n\"Jay! Truth or dare!\" Mark asked.\n\n\"Mmmmm... Truth.\"\n\n\"Were you happy when you found it you would be with Lovie?\"\n\n\"Very,\" Jaydan answered, smiling. \"Ivy, truth or dare?\"\n\n\"Truth.\"\n\n\"Who was your first pick?\"\n\n\"Which time?\"\n\n\"First time.\"\n\n\"Geo. Ummm... Lovie. Truth or dare.\"\n\nI thought of the questions she could hurt me with on truth, so I forced a smile. \"Dare! Let's get this ball rolling.\"\n\n\"Awesome! Kiss Maggie, open mouth.\"\n\nMaggie met me halfway and we kissed as Marcus cheered gleefully. I was smiling when I sat back down, Jay's arm around me. \"Mark, truth or dare?\"\n\n\"Dare baby!\"\n\n\"Kiss your girlfriend, open mouthed, thirty seconds.\"\n\nHe blushed, but she grabbed his face and kissed him and I was giggling and kicking my feet as I watched them lose themselves in the moment. \n\nThey finally pulled back, looking insanely happy. I was smiling so big I had to bite my lower lip to tone it down. \n\n\"Thee! Truth or dare man.\"\n\n\"Truth,\" Thee said harshly.\n\n\"Are her tits real?\" he asked, motioning to Ivy.\n\n\"No idea, haven't seen them. Lovie. TRUTH or dare.\"\n\n\"Dare,\" I said with a shrug, not looking at him.\n\n\"Take your swimsuit off.\"\n\nI froze slightly, wondering if Jay was going to call foul. He moved his arm out of my way. I sat up and undid my top, then let it fall as I lowered myself in water to my chin, glancing at Jay. He looked a little stressed. I slid my bottoms off, curling up like a ball and setting my swimsuit on the edge of the hot tub. I huddled into Jay, hiding myself. \n\n\"Ivy? Truth or dare?\"\n\n\"Dare?\"\n\n\"Kiss Thee with your top off, open mouthed for at least thirty seconds.\"\n\nShe wasn't shy about standing and taking her top off, showing off her perfect DD's. She leaned over Thee and I looked away, watching Maggie watch them.\n\nFinally, Ivy spoke. \"Jay, truth or dare?\"\n\n\"Dare.\"\n\n\"Take your trunks off.\"\n\nJay stood, turning so I could curl up and hide myself, then slid his trunks off. I couldn't help myself, I glanced before he sat, then I blushed. He was... nicely endowed, at least he seemed that way soft. \n\n\"Mark! Truth or dare!\"\n\n\"Dare!\"\n\n\"Off with the trunks man.\"\n\nMarcus stood up and faced Maggie and did a strip tease and she was laughing until he pulled his cock out.Her smile froze and her eyebrows went up as her jaw dropped. She looked up at him in shock. Mark pulled the trunks off then did a little spin and all of us gaped. Marcus was hung like a proverbial horse. \n\n\"Holy shit!\" Ivy whispered. \n\n\"Little Lovie, truth or dare!\" Mark said, sitting down like a newly crowned king.\n\n\"Dare!\" I laughed.\n\n\"Straddle your boy and kiss him, open mouthed for at least one minute. Before you do, call out your next turn.\"\n\nI felt my face go red. \"Ivy, truth or dare,\" I said, unable to hide the fear in my voice. \n\n\"Dare?\"\n\n\"Take off your bottoms,\" I said, then took a deep breath and pulled myself up, swinging my leg over Jaydans lap and pressing myself to him, trying to hide everything from view. I was shaking as I looked at him and he put his hands on my waist, giving me a reassuring smile. I put my arms around his neck and lifted my lips to his and he kissed me very gently. He held my face, stroked my hair, pulled me in tighter and we kissed. It was deep and passionate and I lost myself in him. I felt him get hard beneath me, his long, thick cock pressing up against my ass. His kiss became more insistent as he pulled me in tighter.\n\nA hard splash brought me out of it and I pulled back, blinking and watched Thee storming away.\n\n\"Fusking asshole,\" Ivy muttered, pulling her suit on before following him. \n\nJaydan turned my face back to his and he kissed me again. I lost myself again. His hand slid down to my ass and he lifted me slightly, his other hand guiding his cock to my slit. I moaned eagerly, excited and terrified at the same time. He eased me down, the head of his cock pressing against my opening, then parting me and pushing in. \n\n\"Ohhhhh!\" I breathed, lifting my mouth from his. \"Ohhh!\"\n\nJaydan kissed my jaw and my neck, his hands and kisses gentle as he slowly eased me down until I was settled on him as far as I could take him. \n\n\"You feel so good!\" I whispered, rolling my hips, just feeling the fullness that was him.\n\n\"Uhh... still here?\" Maggie said.\n\nI gasped and Jay pulled me in tight, chuckling. \n\n\"Shh babe,\" Mark said lightly. \"Hey, when in Rome?\"\n\nI was blushing furiously as Jay turned my face to look up at him. \"It's fine. Don't stop,\" he whispered. He pushed up slightly with his hips and I closed my eyes. I ignored the other sounds I was hearing and I leaned back, watching his eyes as he looked down at me. His eyes saw perfection. His cock throbbed slightly and he raised up, lifting me as well, still on his cock. He laid me on the corner of the hottub where there was a flat surface and kissed me again as he went to his knees in the water. He began pulling back gently and pushing in, slowly sweetly. I could hear Maggie and Mark in the background, loud and wild and it was exciting. Jay held my face, running his thumb over my cheek as he looked down at me, thrusting into me gently.\n\n\"I adore you Little Lovie,\" he whispered.\n\nI stared up at him, my heart soaring. I closed my eyes as tears leaked out.\n\n\"Shhh, don't cry!\"\n\n\"Happy tears,\" I whispered. \"Mmm, Jay, faster? Please?\"\n\n\"Mmm,\" he growled gently, pressing his mouth to my head. He began thrusting faster and harder. He was still being gentle, but it was what I needed as pleasure well up in me, trying to overflow.\n\n\"Ohhh! Ohhhhh!\" I wailed, then the orgasm hit me as my limbs went taught and my pussy clenched around his cock. He came seconds later, first gasping, then with a shuddering sigh. He kissed me, again and again as he held me there and I realized he was waiting for Maggie and Mark to finish. It took long enough that I was losing myself in his arms again as he spun me to straddle him in the water again. When he slid his hand down, I thought he was ready again, but he eased his finger into me from behind and slowly fucked me with it as he moved his other hand down to press on my nub. I came in his arms again, screaming against his neck. \n\nWe lay there in each other's arms after I came again, him holding me, kissing my head as I lay languidly against his chest. Satisfied. Happy. \n\nMark and Maggie finished soon after and I listened to them panting and giggling and kissing. \n\nI looked up at Jay and he smiled with his eyes closed, knowing I was looking at him. \"Mmm Lovie?\" he asked throatily. \"You wore out? Ready to go curl up and read?\"\n\n\"How do you know I read?\" I asked curiously.\n\n\"Your interview,\" he said, sitting up.\n\nI thought about it. I didn't remember mentioning it in any of the interviews. Maybe he had just assumed, or mixed me up with someone else. \n\n\"Let's head back to our room,\" Jay said, reaching for my swimsuit with his long arms.\n\nMaggie and Mark came with us and Maggie was grinning at me as she dropped back and pulled me back to let the guys walk ahead of us. \"Soo, that was really hot! Did you see the size of his...\"\n\n\"Yes!\" I giggled.\n\n\"And his stamina! Jeez the boy is a god! And you and Jay! So hot and so freakin cute together. I can see those pretty babies now!\"",
        "I smiled, thinking about it. \n\n\"Anyway, I didn't know I would be up for that, but I totally was, so if you two ever wanna double up again? I am down. Totally.\"\n\nI felt myself blushing but I nodded. \"I liked it too... it was exciting.\"\n\nWe came out in the living room and Thee was there, his arms crossed, glaring murder at me. My anger surged and I gave him the finger before catching up with Jay and grabbing his hand. \"Ready for round two?\" I asked loudly, pulling him down the hall.\n\nHe laughed and picked me up, throwing me over his shoulder as I squealed and kicked playfully. He set me down gently on the bed and kissed my head. \n\n\"Ok if I get my things and bring them in here? Move in officially?\" he asked.\n\n\"Sure,\" I answered, smiling. \"Bring your own blankets though, I don't share!\"\n\nHe was laughing as he left and I went and got dressed, still smiling. I decided to go ahead and unpack my bag. I was hanging clothes up when he got back, hauling his bag and blue comforter off of his bed.\n\nThe blue against his tan skin was striking and for some reason it pulled at me in a low place. I went to him, pulling the things out of his hands and dropping them on the floor before unlacing his swim trunks and pulling them off of him. He watched me, grinning as I looked down at his cock, semi hard now. I pushed him to the bed and went to my knees, taking his cock in my mouth and pulling, sucking, licking until it was hard and thick and long. Thick enough to make my jaw ache. \n\nHe sat up and pulled me up on to the bed, moving higher, then pulled me over him so that I was straddling his face and his cock was in front of me. I pulled it into my mouth as he closed his lips around my mound and ran his tongue up my slit. My body was trembling, frantic with need and I took it out on his cock, sucking and bobbing furiously. He slid a finger into me, then another and I moaned as I got closer to coming again. He pulled his hands apart and I realised he had his two index fingers inside of me and he was stretching me open, his hands spreading my thighs, his fingers my pussy. He licked inside me, as deep as he could shove his tongue and sucked on my open pussy as hard as he could.\n\nI came with a squeal around his cock and he pulled back with a gasp as I squirted all over his face. I squirted with every squeeze and clench of my pussy walls and he rolled his face in the juices, reveling in it as he tried to keep my pussy open to him around my orgasm. \n\nI kept sucking, frantically wailing around his cock until he came for me, exploding into my throat with a groan. I swallowed every shot as his cock throbbed and pulsed, then pulled back, panting and exhausted.\n\nHe rolled me and I laid where I landed, unable and unwilling to move. His eyes were bright as he moved to look down at me. He was soaked, covered and he looked thrilled. \"Lovie... I have waited my whole life for that!\" He leaned in and kissed me exuberantly and I laughed, still too weak to move. \n\n\"I need a shower,\" I panted.\n\n\"I just had one,\" he purred happily.\n\n\"My bed is wet, isn't it?\"\n\n\"Soaked. I'll share my blanket though. Seriously though Lovie, you do that a lot?\"\n\n\"Mmm.\"\n\nHe grinned. \"This is going to be amazing.\"\n\nI laughed again. \"Seriously. I need a shower.\"\n\nHe jumped up, his adrenaline going high and picked me up. He carried me to the shower and pinned me to the wall, kissing me again. He leaned in closed, looking down at me intensely. \"I love you, Lovie Mason. I don't care if it's soon and you don't have to say it back. But I am all in. I love you. I am so freaking proud that you are my wife and I can't wait to see what other amazing things I can discover about you.\"\n\nMy heart hammered in my chest and I couldn't stop the smile that spread over my face. I hugged him, hiding my face in his arms as I giggled giddily. \n\nWe didn't leave our room until dinner and then we came right back. \n\nAn alert woke me in the morning, the plot map beeping. 'Action needed'. I yawned and got up, then looked it over and grumbled. The parts I had been putting off, talking to the people who would need things planted. I transferred the list to my PED and yawned, sitting at my desk. \n\nMy PED beeped and the display came up, bigger than usual. I tried to figure out what I was seeing. Was that Maggie? When she was younger? She was tiptoeing through a house, sneaking into a room. She opened a purse and pulled money out, then snuck away. Again in different clothes. Again. A dozen more times. Maggie at a store, slipping things in her bag. At another house, palming things and putting them in her pockets. Maggie snorting white powder up her nose and laughing.\n\nThe camera slowed and Maggie was walking up to an older man who was at an outdoor evening party. \"Hi Daddy!\" she said, smiling and batting her lashes.\n\n\"Magpie, you only call me that when you want something,\" the older man said.\n\n\"I need two large Daddy, can you help me out?\" she asked, leaning in close, pressing against him and groping his growing bulge. \"I will make it up to you, don't I always?\"\n\nThe man smirked and pulled money out of his wallet. \n\nThe man slipping from a room where a woman slept on the bed and going into Maggie's room. She was waiting in lingerie, smiling. She immediately started sucking his cock. A picture flashed, a family photo with Maggie and her mom and the man. Another picture of when Maggie was younger, her mom and a different man. A man that Maggie looked like. More images of Maggie with drugs. With her step dad. Stealing. On and on and on.\n\nI couldn't look away until it stopped. When it did, I looked over at Jaydan confused. He was setting up, frowning at the display on his PED.\n\n\"Maggie?\" I asked.\n\n\"David,\" he said, pushing the blankets back and putting his feet on the floor. \"He's a peeping tom? I guess? Sneaking pics up skirts? Spying? At least he used to be? Yours was Maggie?\"\n\n\"Yeah,\" I said, not giving any details. \"I'm going to get dressed and finish my work, I need to talk to a few of the others about what they need from me,\"\n\n\"Do you think everyone is getting these?\" he asked anxiously. \"About all of us?\"\n\nI paused, thinking about it. \"I don't know.\"\n\n\"We should find out?\"\n\nI felt supremely uncomfortable. I didn't want to let Maggie know I knew about her past. I liked her and I didn't want things to change between us. That was her past. It should stay that way.\n\n\"Let's let it go. If everyone got these, no one is going to care about who they got, only who is looking at their past.\"\n\nJaydan looked at me and the stress was higher. \"You aren't worried?\" he asked.\n\nI half laughed, trying to think. \"Ummm, one time I couldn't find a book anywhere, but I found it at a library. I checked it out then said I lost it because I wanted to keep it.\"\n\n\"You stole a book?\" he asked flatly.\n\n\"I paid for it! I just couldn't find it anywhere else. I wanted it forever.\"\n\n\"So... you paid for a book. Lovie... that is so lame!\"\n\nI laughed and shrugged, trying to think. What was the worst thing I had done? \"One time when my gramma was teaching me to make gravy, my grandpa was yelling at her, being mean and telling her she had damn well better get enough salt in it. I unscrewed the top and poured the whole shaker in while she was checking the biscuits.\"\n\nJaydan fell back on the bed, laughing. \"Lovie... I fucking adore you. Ok. Let's get dressed.\"\n\nI was looking at him laying there, all beautiful and hot and I got up and went to him, letting my robe slip off. We didn't end up leaving our room for an hour, until breakfast was announced.\n\nWe went in, smiling and holding hands and I had forgotten about the video.\n\n\"Ow ow owwww!\" Kenan howled, looking at me. \"You get a good shower Jay?\" he asked.\n\n\"Uhh, sure?\" Jay said, confused as he sat down.\n\n\"You didn't tell us your girl was a squirter,\" he said, grinning and bringing up video of me on his PED. In it, I was flushed and flustered and setting a cup on the couch.\n\nI remembered that day. It was the first time I had squirted when I came and it had been like a geyser. I came all over the couch and I couldn't get it dry before my mom came home. I had tried to fake spilling a drink.\n\nI went red to my ears.\n\n\"Turn that off,\" Jay snapped.\n\n\"Seriously?\" Geo asked, eyes wide. \"That is fucking hot as hell!\"\n\nI looked down, tears springing up. My eyes went unbidden down to Thee. He looked sad and upset as he looked back at me. Sad for me? Concerned? I looked away, then started to get up and go. \n\nTanisha and Ali were coming in, Ali with his PED open and the display on. \"Seriously, Jay?\" Ali demanded angrily. \n\n\"Sit down and shut up!\" Jay said angrily, standing.\n\nI was shocked at his vehemence and I immediately wondered what he was hiding.\n\n\"No, Jay! You sit down! Y'all are going to want to hear this,\" Ali announced.\n\n\"Gamma, if Ali doesn't sit down, silently, punish him,\" Jay said, his fists clenched.\n\n\"We want to hear it!\" Thee said, standing.\n\n\"Yeah, you all want to hear it,\" Tanisha said. \"Jay ain't who he says he is at all.\"\n\n\"Gamma!\" Jay began.\n\n\"I grabbed his arm. \"It's ok Jay. Calm down,\" I said gently. Let them say what they think they need to, it won't change anything.\"\n\n\"Lovie, it changes everything,\" Ali said. \"Especially for you. First off, Jay has lied since day one. Before, since he planned out the lie before he got here. He wanted to be an actor and a model and his father told him no. His father said he couldn't come here and he wasn't going to. Not until he saw Lovie's interview. He cyber stalked her, got to know everything about her, made up elaborate lies about what he was going to school for to impress her. He wasn't going to go to college, he was going to work in his dads dry cleaning business. He snuck away with this plan to act his way through this, show the world his acting skills, then his father couldn't say no when agents called. That's not all, Lovie. The day of my trial? When he made me say that about relinquishing rights to you to the powers that be? Well, he is the powers that be and he knew it. I gave him to you. I didn't know that. I didn't know that sex meant sealing the deal on a partnership, but he did. He made me give you over to him. So picking partners? All a farce. You were partnered up before anyone else was. You and Thee picked each other both times, but you were already partnered.\"\n\nI went cold all over and I immediately turned and looked at Thee. He looked stunned as he looked at me.\n\n\"You picked me?\" he asked, his voice hoarse and cracking.\n\n\"You picked me? You weren't mad or... holding a grudge?\"\n\nHe let out a strangled sound and rushed to me, pulling me close.\n\n\"Let her go! Lovie, this doesn't change anything,\" Jay said desperately. \"I was serious when I said I loved you. I am serious. I adore you! Look at me!\"\n\nI stared up at Thee, my heart hammering.\n\n\"Lovie!\" Jay yelled, pulling me away from Thee. He wasn't rough, but he was insistent. \n\nI turned and looked up at him, tears in my eyes. \"You did this to me? When you knew how I felt? When you knew I wanted...\"\n\n\"I say we let them switch!\" Ella said, standing.\n\n\"I agree!\" David said, standing with her.\n\n\"Sit down Dave! I got your video. Spied on any girls lately? Pics up skirts?\" Jaydan asked angrily.\n\n\"It was harmless!\" David said, clutching his stomach like he was wounded.\n\n\"This isn't about him!\" Thee said, stepping up to Jaydan. \"Release her. Let us choose each other.\"\n\n\"I'm good with that!\" Ivy said, stepping up.\n\n\"No, not happening!\" Jaydan said, stepping back.\n\n\"Jaydan!\" I said pleadingly, looking up at him, heartbroken. What had happened to my sweet god? He was this angry, feral looking boy now.\n\n\"Lovie!\" He said desperately, pulling me close. \"I love you! I adore you! Haven't things been good? Amazing even?\"\n\n\"Yes... but it's all been based on a lie. Jaydan, please?\"\n\n\"I say we vote!\" Ali said. \"Everyone who thinks they should renounce their partnerships and choose again, say 'Aye'.\"\n\nEveryone but Jaydan said 'Aye'. \n\nHis hands went to his perfect hair as he shook his head. \"No. No!\"\n\n\"We all voted yes,\" Thee said. \"Let her go!\" Gamma, we voted, we want the pairings reset! Lovie and I and Jaydan and Ivy!\"\n\n\"If every partner agrees, pairings can be changed, but only if there has been no procreation and a lineage started.\"\n\n\"Agree,\" I asked Jaydan, pleading with him.\n\nHe looked away stubbornly.\n\n\"Gamma, if we agree unanimously to override the leader, can he be set down and punished?\" Ali asked.\n\n\"Yes. Leadership will revert to the next in line, Lovie Mason.\"\n\n\"Do it!\" Thee demanded. \"Let her go! Or we will depose you and make you do it!\"\n\nJaydan let out a frustrated yell. \"Lovie! Please? I love you. I have loved you since I laid eyes on you, you are perfect for me!\"\n\n\"Do it Jaydan,\" I said sadly. \"Or I will motion for the vote myself.\"\n\nHe sighed and sat down hard in a chair. \"Fine, Lovie. If it will make you happy. Gamma, I agree to rescind my partnership with Lovie Mason and trade with Timothy Barker, taking Ivy Lewis as my partner.\"\n\n\"Me too!\" I said quickly, turning to look up at Thee, smiling.\n\n\"Me too!\" he said, smirking slightly as he pulled me against him.\n\n\"I will too,\" Ivy said, going to Jaydan.\n\n\"Partners can only be transferred if there is no procreation,\" Gamma said. \"Lovie Mason has been fertilized.\"\n\nI froze, gripping my belly in shock, my mouth an 'O' of shock.\n\nJayden leapt up joyously as Thee stumbled back. \n\nJaydan caught me as my knees buckled and everyone stared at us in astonishment. \n\n\"Gamma, you can know that already?\" Ai asked, \"It has been one day?\"\n\n\"We have the ability to monitor many things.\"\n\n\"Is anyone else... fertilized?\" Ella asked, her voice sounding terrified.\n\n\"Maggie Ortega, Katie Patton and Aysha Joyce.\"\n\n\"How?\" Ali demanded. \"The odds of that are... astronomical.\"\n\n\"The air is filled with enhanced fertility microbes. Once a lineage is started, the offspring may only pair with one other lineage for three generations so that no mixing of the blood can occur. Once The third generation is born, each family will be relocated to a new dome for three more generations.\"\n\n\"So... if my oldest pairs with Lovies oldest,\" Maggie said, frowning, \"then all my kids have to pair with Lovie's kids?\"\n\n\"Yes. It keeps the blood from mixing.\"\n\n\"It makes sense,\" Ali said. \"Makes incest impossible if it's done that way. Gamma, you said Lovie is fertilized, but that does not mean it is viable yet. There is a chance she will not become pregnant?\"\n\n\"Correct.\"\n\n\"If she isn't, they can switch?\"\n\n\"Correct.\"\n\n\"But we still have to try every day?\" Jaydan asked, hope in his voice.\n\n\"Yes.\"\n\nI looked back at Thee sadly. I didn't want to hear anymore. I didn't want to be here anymore. I turned and fled back to my room, curling up in my blankets to cry. The door opened and I knew it was Jaydan who sat on the end of the bed.\n\n\"Lovie? I'm sorry. I shouldn't have lied to you and I shouldn't have tricked you. When I saw your interview... you weren't like the others. Like Ivy, like most girls. You wouldn't look at me and be all over me. You were the type to see through looks. That's what I wanted. A girl who wanted me for me... and then there's you Lovie. You are so smart and so... in control. You don't put up with shit. I was afraid for a minute, when Ali tripped you into his arms so easily, like you couldn't see past his looks to what he was. Then I saw my chance... Everything was happening so fast I knew I wouldn't be able to get to know you, let you get to know me... I never realized that you had a thing for Thee. You seemed so annoyed by him. I didn't know it had become more, I swear it. I'm sorry Lovie. Please look at me? Lovie?\"\n\nI ignored him, laying there with tears falling. \n\nHe laid down behind me, sighing. He stroked my hair softly and I could feel his distress like a palpable thing. Me moved closer, curling around me, holding me close. \"I love you,\" he whispered. \n\nI didn't move, not to pull away or fight or reciprocate. \n\nHe held me until the plot map beeped again.\n\nAction needed.\n\nI ignored it.\n\nIt beeped again.\n\n\"Gamma, turn off plot map reminder,\" Jaydan said softly.\n\n\"Unable to comply. Refusal to complete duties will result in punishment. Lovie Mason, please complete job.\"\n\nI sighed and got up, wiping my face. \"Gamma, please ask Nettie, Katie, Tanisha and Ella to come here.\"\n\n\"Lovie?\" Jaydan asked softly. \n\n\"Gamma, is there a job Jaydan needs to be doing right now?\" I asked, choking up. \n\n\"His primary job is not in need at this moment, but his secondary job can be started.\"\n\n\"Secondary?\" I asked.\n\n\"As shown in your PED's.\" she answered.\n\nI pulled my PED up as someone knocked on my door. \"Get that,\" I said to Jaydan, my voice more irritable than I meant for it to be.\n\nIt was Ella and David was with her. \"Hey,\" she said softly, coming in. \"What's up?\"\n\n\"Just a sec,\" I said distractedly. \"Jaydan, did you know about this?\" I asked, trying to find it on my PED.\"\n\n\"Yeah,\" he said tiredly. \"I was going to get to it.\"\n\n\"What is yours?\" I asked, still looking for mine.\n\n\"Laundry,\" he said angrily. \"Of course. Because what else am I good for?\"\n\n\"What about the rest of us? Me?\" I demanded, unable to find the information.\n\n\"Counselor,\" he said, sitting down hard. \n\n\"What are you guys talking about?\" David asked.\n\n\"Our secondary jobs that we do when we aren't doing our regular jobs.\"\n\n\"Oh, yeah, I saw that. I have janitorial with freaking Ivy. Guess who will be doing the lions share of that?\" David asked as Nettie and Tanisha came in.\n\n\"So does everyone know about their second jobs?\" I asked.\n\n\"If they saw them,\" Jaydan answered.\n\n\"What second jobs? Tanisha asked, confused. \"Is that why we are here?\"\n\n\"No,\" I answered with a sigh as Katie came in. \"Hey. I needed to ask you guys about what you thought you needed planted, how much of what you needed. I need close numbers because space is limited. Please get your totals to me as soon as possible. Ella, I have a plot set aside for your needs and you will have to give me specifics. I am not super familiar with some of the things you will be needing. Tanisha, I see garnishment things on your default list, can you keep it to necessities? Katie, I need you to get with Ella and see what can be doubled up for your needs. I also want to plant some blooming fruit trees near your hives as well. I need you to tell me what will work for you.\"\n\nI went on with them for a few more minutes, and I was very aware of Jaydan standing against the back wall, watching me. I decided I didn't really want to be there under his scrutiny anymore.\n\n\"Anyway, get me your numbers and lists ASAP,\" I finished. \"But right now head to the living room. Gamma, announce a meeting for everyone in the living room, immediately.\"\n\nI left as the announcement was being made and went to the living room that was already half full of people being idle. \n\nThee was the last person in, his eyes rimmed red and his lips swollen like he had been crying. I made myself look away. \"It has come to my attention that we have secondary jobs that we need to be performing on top of our primary jobs. I think a few of you were aware of this, but some, like me, were not. I wanted to make sure everyone understands what is expected of them so that there are no accidents. This place seems punishment happy if you don't do what you need to right away. The list is on our PED's, but unless you stumble on it or know what to look for, it's sort of hidden. I am going to read the list so that everyone is aware. Ali, barber.\"\n\nSomeone sniggered and whispered 'Ali Barber'.\n\n\"You got forty thieves?\" Marcus asked.\n\n\"Keep talking, I get to cut your hair,\" Ali said, not amused.\n\nI continued like I hadn't been interrupted. \"Nattie, composting and fertilizer. Dave, janitorial. Maggie, dental? Key, fitness. Aysha, massage.\""
    ],
    "authorname": "gabthewriter",
    "tags": [
        "dystopian future",
        "geodomes",
        "group sex",
        "non consent",
        "noncon",
        "science fiction",
        "voyeur",
        "trapped",
        "non-con"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-geodomes-gamma"
}