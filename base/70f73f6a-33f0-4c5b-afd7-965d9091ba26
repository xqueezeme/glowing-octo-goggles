{
    "title": "U-N-I Ch. 04",
    "pages": [
        "As soon as he saw me coming out of the school building, Rob walked away from the people he was chatting with and ran over to me.\n\n\"Hey, how'd you do?\" he asked, as we had just taken the Maths exam for our leaving certificate.\n\n\"Alright, I think. My mind sort of shut down at some point though. I fucking hate maths.\"\n\n\"I don't believe you. Bet it was a piece of cake for you.\"\n\nAfter a pause, he said,\n\n\"We're all eating out, but then they're going home to study. So you know what that means?\"\n\nHe sounded hopeful.\n\n\"Shit, I don't know if I can,\" I replied, \"my dad's seriously doing my head in. He's having a bunch of friends over this weekend so apparently now I have to cut the lawn and hose down the patio and clean the fucking barbeque this afternoon.\"\n\n\"Oh, for fuck's sake,\" he complained. \"What does he take you for? His slave? Like he can't tidy his fucking garden himself. They're his fucking friends.\"\n\nI shrugged. I was so used to it.\n\n\"Tell him you have to study for tomorrow,\" he suggested.\n\nI stared at him with raised eyebrows. He knew my dad didn't give a shit about that.\n\nHe laughed,\n\n\"Well, I dunno, tell him to fuck off then.\"\n\nI shook my head.\n\n\"If you don't have the cheek to tell him that, then let me do it!\"\n\n\"Careful. That might backfire on me.\"\n\n\"Come on, we can play and write,\" he spoke slowly and temptingly then paused before continuing, \"and fuck, and play and write and fuck.\"\n\nI let out a chuckle,\n\n\"Sounds like the perfect afternoon!\" I smiled and gazed at him.\n\n\"And night,\" he said.\n\nFor a few seconds, his eyes were locked onto mine.\n\n\"I want to kiss you so bad right now,\" he said sensuously. He took a quick glance around to see if anyone was close and then gripped my jacket, \"you look so good in this.\"\n\nI smiled,\n\n\"Are you trying to give me a boner?\" I asked jokingly.\n\n\"Yeah. Then you might decide that clearing out the garden isn't how you wanna spend your day,\" he said, then looked over my shoulder as a girl was calling his name. He let go of my jacket, looking disappointed and we watched as she and her group of friends walked over to us cheerfully.\n\n\"Heard you guys are playing on Saturday night?\" one of them asked.\n\n\"Yeah,\" Rob replied, \"you're coming this time, right? Tell me you're coming,\" he insisted with a smile.\n\nShe smiled back flirtatiously at him,\n\n\"Yes, of course, we won't miss it this time. I can't believe we missed last week's gig. Everyone's talking about it.\"\n\n\"We told you to come, didn't we?\" he said and winked at her.\n\nShe pouted and gave him a plausible explanation as to why she hadn't been able to come to our gig at the club.\n\nWe chatted with them for a moment until we ran out of topics to talk about. As they began walking away, I asked,\n\n\"Why d'you keep flirting with them?\"\n\nHe laughed,\n\n\"'Cause they like it and it strokes my ego,\" he joked.\n\n\"You do realize that they think it's weird you haven't fucked any of them - especially Kerry.\"\n\nHe shrugged,\n\n\"They think I'm too hot for her,\" he said with a laugh.\n\n\"Dumbass!\" I laughed, \"You're not too hot for her,\" I teased, \"she's too hot for you! Kerry's beautiful.\"\n\n\"Yeah, she is,\" he agreed with a nod.\n\n\"Are you just saying that,\" I teased.\n\n\"No, she's totally gorgeous,\" he said sincerely. \"I can appreciate her beauty. Doesn't mean that I want to do anything about it.\"\n\nI nodded and suddenly realized that I was beginning to feel the exact same way and that he had put into words what I was still struggling to understand.\n\n------\n\nWe had planned on performing in a pub on Saturday night to kind of celebrate the end of our exams. This time, we wanted to have the whole performance filmed and recorded so the five of us had planned on spending the evening together to rehearse on Friday night.\n\nI first went to Rachel's to say goodbye to her as she was leaving on the next day. Then I went back to Rob's place before we had to go meet the guys. I entered the house and saw that Charlie was there, talking with Rob and standing a bit too close to him -- for my liking.\n\n\"Shit!\" I thought, ''Am I jealous?\"\n\nThey both looked at me when I came in and I felt a bit awkward, wondering if I was interrupting something.\n\n\"Hey,\" I said to them, studying their attitude.\n\n\"Hey,\" Charlie said, moving away from Rob and fidgeting a little. I had never really paid attention to him but, as I watched him, I thought he was actually very good-looking.\n\nHe turned to Rob again and said, searching for his words, \"so... will you come over later tonight though?... for that thing I've got to give back to you.... You can come over and pick it up around eight, is that alright?\" he said, obviously lying.\n\n\"Yeah, sure,\" Rob smiled and nodded.\n\n\"Alright, cool,\" he winked, staring at him flirtatiously as he took a few steps back.\n\nThen, he turned around and walked toward me. \"See you later, Mark.\"\n\n\"See ya,\" I answered, my tone of voice making it clear that I thought he was acting weird.\n\nOnce he had shut the front door, I looked back at Rob,\n\n\"Come over tonight?\" I repeated, raising an eyebrow.\n\n\"He wants to fuck,\" he said, as if I hadn't understood.\n\n\"Yeah, I got that!\"\n\nHe laughed. \"Too bad you walked in!\" he said in frustration.\n\nI didn't say anything. I was pretty sure he was only teasing me. As much as I wanted to play his game, I wasn't really able to.\n\n\"Are you gonna go?\" I asked, unsure.\n\n\"I might,\" he shrugged, playing it cool.\n\n\"Is he really that good?\" I joked\n\nHe smiled, teasing me,\n\n\"You jealous?\"\n\nI might have let it show, but I answered seductively,\n\n\"No. But why would you want to have sex with him when you can sex with me?\"\n\nHe shrugged again,\n\n\"Why would you want to have sex with Rachel when you can have sex with me?\n\nWell played, I thought,\n\n\"Not the same. He's just a fuck buddy to you.\"\n\n\"A very good one!\" he said, thinking about Charlie.\n\n\"And I've been avoiding Rachel all week. I think she's been noticing.\"\n\nHe laughed,\n\n\"You're adorable,\" he told me, giving me a peck on the lips, \"don't worry, I was telling him I've been too busy lately. I'll text him later and tell him I can't go.\"\n\nI just gave him a look that said it all.\n\n\"So, how were the goodbyes? Did she cry? Told you she'd call you every day?\" he said over dramatically.\n\n\"No, I tried to make it quick... let's go,\" I replied, to change the subject.\n\n\"Yeah!\"\n\n---\n\nThe whole month of July went by in a flash. We played gigs several times a week, attracting an even larger following, worked on our songs as often as possible and met with the record company.\n\nRob's father agreed to talk to them for us if it was necessary. He had agreed to act sort of like a manager for as long as we didn't have one. He was a great man, just looking at him, I knew who Robbie had inherited his charisma from. He was so funny and did one-man shows in pubs, or small theaters in his free time.\n\nHe had discussed our situation with the label and it was decided that we would start recording our first album but also start College in October. Therefore, we enrolled in Trinity College in Dublin but it was more to make our parents happy. They didn't want the band to take over any academic thing. I guess they didn't want us to be too disappointed if things didn't go as planned. They saw the band as a hobby, and didn't want it to monopolize too much of our time. They wanted us to go to College to have some kind of academic background in case we'd fall flat on our faces.\n\nAlthough the A&amp;R team at BMG had told Rob's father that we were a band with great potential and they had faith in our ability to 'make it' as they'd say they especially wanted us to perform live as much as possible because it was our strength and it was the best way to attract journalists, to get critiques in music magazines and to be taken seriously.\n\nThey wanted us to work and improve our best songs with professionals. They had big hopes for three songs, which they believed would work very well to start promoting the band to a targeted audience, which would be 18 to 30 year olds, male and female, who listened to rock.\n\nThey had signed us for two albums and we were going to start recording these three songs in the studio at the beginning of August. They were putting a lot of pressure on us. We knew we were damn lucky here. I was sure it did not happen this easily for over 90% of the bands out there. Everything was happening at astonishing speed for us.\n\nIt was late July, we were lying in bed after having done nothing but write music and have sex all day in my bedroom, my parents being away in France, for the first time, without me. With what was happening between us, we felt inspired all the time and the music just kept flowing. The sun had already started to rise by the time we settled down to sleep.\n\nWe were sweaty and exhausted, having both cum for the third time in a few short hours. Our first fuck had been absolutely amazing and had been triggered by lyrics we had written and then me telling him that I loved him.\n\n\"Move onto your back,\" he told me while we were having sex.\n\nObeying him, I pulled out of him. I rolled and he straddled my cock, facing toward my feet. I grabbed the base of my cock and he lowered himself down onto it, making us both moan softly the entire time.\n\nThen he began to rock back and forth and I watched my cock slide in and out of his ass, loving the view.\n\n\"Oh yeah, right there, fuck, fuck,\" he panted and I saw the muscles in his back twitch as he stroked his own cock.\n\nThen he laid against me until his back was resting on my chest. He bent his knees slightly on either side of me and began fucking himself on my cock. The extreme body contact was driving me so wild that I had to grip his hand tight.\n\n\"Oh yeah, oh yeah,\" he moaned. His other hand reached above him until it was grasping me behind my head. I stared at the bulge of his bicep and inhaled his scent that still turned me on so fucking much. I enjoyed the feeling of his weight on top of me as I cupped his pec and rolled his nipple between my fingers.\n\n\"Oh, Rob, fuck!\" I gasped as he continued to fuck himself hard against me.\n\n\"You gonna blow?\" he panted.\n\n\"Yeah,\" I moaned, feeling my climax come closer and closer.\n\n\"Do it,\" he responded. He started working my cock even faster and I could feel him quicken the pace on his own cock. My need to cum was so overwhelming that I was practically whining as I felt my balls tighten in preparation for my orgasm and my cock started tingling.\n\n\"Ohhh yeah,\" I moaned as I felt the cum shooting out of me, feeling like it wasn't going to end any time soon.\n\nRob groaned and I felt his ass tighten around my cock before he began to cum as well.\n\n\"Oh, Fuck, Mark,\" he whimpered as his jizz ripped out of him.\n\nI looked over his shoulder to see the first load pumping out of him and hitting him on the shoulders, and even on his face. He continued pumping his cock and moaning until his chest was covered in cum. The jizz on his shoulder dripped off of him and landed on my chest.\n\nSlowly, he stopped moaning and rocking himself on my cock.\n\n\"Oh, man!\" he sighed, releasing the grip he had kept on my head, \"That was so good, so fucking good. You're the best!\"\n\n----\n\nNow here we were, a few hours later, having done it again.\n\nI rolled off Rob, and he slowly lowered his legs back down onto the bed. I saw him wince a bit as he turned on his side to face me.\n\n\"You ok?\" I asked as I wiped the cum I had shot all over his stomach with a towel.\n\n\"Yeah,\" he answered. \"I guess that's just what I get for being such a hungry bottom.\"\n\nIt was the first time he had ever used the word when we were together. I didn't like it. Not because of the word, but because it was a reminder that he was always giving himself to me and I wasn't giving myself to him.\n\n\"We probably shouldn't do that twice in a row like that,\" I said, feeling bad now that the moment had passed. I shifted one hand under, and one hand over him, kissing his lips. I brought my hand down to his ass and massaged his cheeks. He smiled at me and closed his eyes. I brought a finger to his hole, which was still open and slick with lube. I traced my finger along the outside of his anus, hoping it would soothe him.\n\n\"You're gonna get me all worked up again,\" he said quietly.\n\nI wanted to ask him why he loved bottoming with me so much when it wasn't something he had ever done with the guys he'd been with before but I could tell he was drifting off to sleep. For now, I was content to go to sleep as well but I knew I would soon have to grow a pair and reciprocate.\n\nIndeed, since Rachel had left on holidays, we'd had sex every day, sometimes several times a day, but he had never fucked me. He had played with my ass, massaged my prostate and given me as much pleasure as he could but he had never taken it further, never even asked if he could fuck me and I didn't really offer.\n\nHe was always willing to let me do him and I could see how much he enjoyed it. We hadn't fucked every time we'd been together, but when we had, he'd always acted first. He'd lube up my cock or tell me he wanted to feel me in him. I always made sure he came as hard as he possibly could, spending him, fucking him hard, gently, fast, lovingly, slowly, however he wanted it, but deep down, I knew that it wasn't enough and that I needed to give him more than that. I knew that he didn't want to make me do anything that I was uncomfortable with and I loved him even more for it. He was taking things slow to make sure that I'd want to do it again - to make sure that I'd like it. He was right, I still didn't feel super comfortable with the idea of bottoming and I absolutely loved being on top... but so did he and I felt bad for denying him the pleasure.\n\n----\n\nIt was now mid-August. Rachel was back and I had just been with her. I had no idea what the fuck I was doing. What was I supposed to do? Tell her as soon as she got back,\n\n\"Hey, I've been fucking Rob for a month while you were away so now, I'm gay. See ya, this was fun...\"?\n\nI mean, it couldn't hurt her like this. I loved her. She wasn't just my girlfriend, she was one of my best friends too. I was so confused and tormented, I just didn't know what to do, whatever I'd decide, I'd end up hurting one of the people I loved the most in the world.\n\nRob understood why I still hadn't broken up with her. He had even said that he didn't care if I continued to have sex with her as long as we could still be together once in a while, but I knew he was lying. He wanted us to be more than just fuck buddies and he kept avoiding Rachel as much as possible, to not have to see me with her.\n\nFor a couple of weeks, I behaved like a complete asshole and had sex with both of them. Although we were so busy with the band that I did manage to not be alone with Rachel that much and we'd only had sex twice.\n\n\"Alright, I'll be home soon,\" Rachel said to her mother over the phone as she sat down next to me. We were hanging out with Jordan, Dylan and a couple of other friends on a Sunday afternoon.\n\n\"My mum's making her famous Sunday carvery so you're invited over for dinner. You can come, can't you?\" she asked me as she sat back down next to me.\n\nBefore answering, I looked over at Rob for a brief moment. He was playing cards with a friend of ours but he'd heard.\n\n\"Sure,\" I nodded and Rob turned around to look at us. He didn't let anything on but I could tell he would have prefered me to go home with him, or at least to not leave and stay at Jordan's.\n\n\"Why aren't we invited too?\" Jordan joked. \"I love your mum's carvery.\"\n\n\"Cause I'm not dating you,\" she shot back.\n\n\"You wish,\" he teased her, which he would always do.\n\n\"I'm out of your league Jord, get over it, I've got the looks AND the brains,\" she shot back and I laughed.\n\nRachel would always put him back in his place in a smart way. She was probably the only girl who was not falling for Jordan's womanizing ways. Maybe just because she saw him more as a brother than a potential boyfriend. She was so right though, Jordan tended to go for hot but dumb girls, whom he could easily manipulate and Rachel was from from dumb. She was very intelligent, super artistic and so pretty, which I loved about her.\n\nSo here I was, hanging out with her after dinner. We mucked around, we laughed, we listened to music, we talked about our friends, about the band, about some of the drawings she had recently created using only lines and when the moment came and we began making out, the best I could say was that I wasn't into it. I tried and we did have sex but I could tell that she noticed something was off with me. I found an excuse to go home shortly after it was over, feeling miserable.\n\nI didn't go over to Rob's that night. I couldn't. I felt too overwhelmed with what was going on in my love life and I needed some alone time to figure things out in own head. All that I knew was that I had to make a decision and be true to myself.\n\nI lay on my bed for a long time as I tried to figure out what I was going to do and then, I realized, the only thing that could help me feel better at that point was to lose myself in music and write. So that's what I did. My parents were back from France and my dad didn't want me to play in the house in the evening, but at that moment, I didn't give a shit.\n\nAll I had was an old acoustic guitar, all of our other instruments being either at Rob's or at Damon's. I began strumming the guitar. I wasn't really thinking about anything or anyone. I tuned it differently several times. It lasted for long moments before a melody started to emerge and then the magic happened. The song seemed to just write itself. I mean, I knew I was there, writing it, but it felt like it came from above and it felt amazing.\n\nAs I began thinking of lyrics all I could think about was Rob. It became evident as soon as I wrote the first few ideas down that I was going to write a song for him. Again, lyrics came pouring out of me and by the end, it felt like the song was my way of telling Rob how my whole life had changed because of him, for him, for us.\n\nIt was 2am when I finally put down the guitar and notepads and went to bed, at peace with myself.\n\nThe next day, I went home with Rob after having spent a few hours working on our music with Damon, Jordan and Dylan. As we were chilling in his room, I started playing the melody.\n\n\"I wrote a song last night,\" I said.\n\n\"You did?\" he asked, surprised.\n\nI didn't look up at him, just softly strummed the guitar as I said,\n\n\"Yeah, in two hours it was done. It sort of wrote itself really. It felt incredible. I love it when that happens.\"\n\n\"What's it about?\" he asked me, sitting next to me on the floor. We were both resting our backs on the end of the bed.\n\n\"Well... you, mainly. Just trying not to make it too obvious though,\" I said softly, looking up at his gorgeous face.\n\n\"Me?\" he asked with a smile.\n\n\"Yeah. I've been writing a few songs about you lately.\" I admitted. They weren't really full written songs, just lyrics and tabs scribbled here and there whenever I thought of him.\n\nHe smiled broadly. \"You wanna sing it to me?\" he asked, knowing very well that I might not want to do that.\n\n\"I dunno, I don't like doing that,\" I smiled self-consciously, I've never been a show-off type of guy.\n\n\"Come on,\" he begged. \"Just pretend I'm not here.\"\n\nI hesitated but the pleading look in his eyes soon made me cave,\n\n\"Alright!\" I agreed reluctantly, but added as I looked into his eyes, \"don't say anything!\"\n\n\"I'm not even here!\" he joked, pushing himself up from the floor; he laid on the bed, his head not far from my shoulder, looking at the ceiling.'\n\nI laughed,\n\n\"Ok, here goes,\" and I started playing again. The main lyrics went like this,\n\nLook at the stars,",
        "Look how they shine for you,\n\nAnd everything you do,\n\nYeah, they were all yellow.\n\nI came along,\n\nI wrote a song for you,\n\nAnd all the things you do,\n\nAnd it was called Yellow.\n\n.....\n\nYour skin,\n\nOh yeah your skin and bones,\n\nTurn into something beautiful,\n\nDo you know,\n\nYou know I love you so\n\n.......\n\nHe remained silent when I stopped playing. I turned my head to see his reaction.\n\nHe rolled onto his side and smiled,\n\n\"That goes on the album!\"\n\nI chuckled,\n\n\"No way, it's too personal.\"\n\n\"Are you kidding? It's amazing. And it could be about anyone. You just feel it's personal 'cause you know who you wrote it for. The melody's so good.\"\n\nI smiled, glad that he had liked it so much, but I didn't respond.\n\nAfter a moment of silence, he asked admiringly,\n\n\"How do you do it?\"\n\nI shrugged and played it for a bit longer,\n\n\"I dunno, it was easy. There's nothing complicated about the chords. They're quite simple. I just played with the tuning.\"\n\n\"The simplest melody are always the best ones. I don't know how you do it.\" he said. \"How can you create a whole song like that, so easily?\"\n\n\"You can do it too!\" I reminded him.\n\n\"Not like you, no,\" he said, shaking his head, ''it's like you're sucking something from the air. Something in you is hearing nothing, and making it into something! That's amazing.\"\n\nI smiled,\n\n\"Yeah, it feels like that sometimes.\"\n\n\"Why the word 'Yellow'?\" he asked, as I repeated it several times throughout the song, and it sort of acted as a key word.\n\n\"I don't know, why not? For the stars maybe,\" I smiled, \"or for you own personal sunlight,\" I added in a whisper, looking up at him.\n\nHe smiled and caressed my shoulder and a thought struck me that it was probably for the light he brought in me.\n\nI gave a slight shrug. \"I was missing a keyword in the lyrics. Could be the title.\"\n\nI started playing chords again. He listened and when I stopped playing, he said,\n\n\"I thought you were with Rachel last night.\n\n\"I was,\" I confirmed softly, \"but I didn't stay long.\"\n\nI was quiet for a moment, as I thought about what had happened with her the night before. I was still struggling emotionally but my decision was made.\n\n\"I'm gonna break up with her,\" I finally told him, with a determined tone in my voice.\n\n\"Are you?\" he asked, a bit of hope in his voice that he couldn't quite hide.\n\n\"I can't keep doing this,\" I answered in a whisper.\n\n\"What happened last night, did you have sex with her?\" he asked, knowing the answer, but probably wanting me to say no.\n\n\"Yeah. But I didn't want to, I could barely get hard,\" I sighed, \"and when I went down on her, I fucking wanted her to have a dick between her legs,\" I said with a totally hopeless tone of voice and he let out a laugh, before he actually broke out laughing full-on.\n\n\"C'mon, dude. Don't laugh, it's not funny. It's so bad!\" I said as I shook my head.\n\nBut his laughter was infectious and I started laughing with him.\n\nAs he was laughing, he slid off the bed to lay down on the floor beside,\n\n\"Oh jesus, I'm imagining it and it's not pretty.\"\n\n\"Stop it!\" I ordered but he couldn't.\n\nI placed the guitar on the floor next to me and straddled him.\n\n\"Stop laughing,\" I repeated, tickling his sides.\n\n\"I'm trying,\" he laughed and tried to turn around on his stomach to get me off of him.\n\nHe hated being tickled and I'd always get a kick out of tickling him until he'd beg to stop. As kids, it was something I always did to get whatever I wanted out of him.\n\n\"Hey,\" he yelled. \"You know I don't mess around with tickling.\"\n\nI laughed at him,\n\n\"I don't mess around with tickling,\" I repeated, making fun of him.\n\n\"Alright, sorry, sorry. I'm sorry. But the way you said that,\" he said, trying to regain his composure, \"I wanted her to have a dick between her legs',\" he repeated, shaking his head.\n\nI let out a loud huff and chuckled.\n\n\"I'm gay,\" I said shaking my head, as if I was finally admitting it to myself.\n\n\"Yeah, you are,\" he confirmed.\n\n\"I'm fucking gay,\" I repeated, actually feeling relieved to be able to say it out loud.\n\nRob stared at me but didn't say anything. He wasn't laughing anymore.\n\n\"You know I thought I was at least bi, but now, I think you've just turned me gay,\" I announced, looking into his eyes.\n\nHe nodded his head. \"Yeah!\" he exclaimed. \"I'm THAT good,\" he stated proudly.\n\nI gazed at him with a smile on my face.\n\n\"Your ego's doing alright?\" I joked.\n\n\"Better than ever,\" he replied with a laugh.\n\n\"Fucking hell,\" I laughed.\n\n\"Hey, don't blame it on me. You're gay because you want to be.\"\n\n\"Well, because of you! Cause it's just so damn good with you!\" I told him, faking annoyance.\n\n\"Hey, look, I did you a favour. You would have realized when you were forty and married with three kids that something was missing in your sex life,\" he joked.\n\nI chuckled,\n\n\"You're probably right.\"\n\n\"What are you gonna tell her?\" he asked more seriously.\n\n\"I dunno,\" I sighed. \"The truth I guess.\"\n\n\"Wow, you sure that's a good idea?\" he asked, concerned. \"Just tell her you cheated on her, that's the truth. She doesn't need to know more than that.\"\n\n\"She's gonna want to know more. And I owe it to her. She doesn't deserve to be lied to like that.\"\n\nHe thought about it. \"What if she gets so upset that she tells everyone to get back at you?\"\n\n\"No, she won't do that!\" I stated, confident that she wasn't like that.\n\n\"You don't know what girls can do when they have their hearts broken. And she can be a bit wacky like that.\"\n\n\"She won't do that,\" I repeated. \"and lying to her would be pointless. I know she'll be able to see it on my face. It's easy to see when I'm lying.\"\n\n\"Well, I guess you know her better than I do. I hope we can trust her. Do whatever you think is best.\"\n\n\"Shit, I don't wanna have to do this,\" I sighed, dejected.\n\n\"Yeah, I wouldn't like to be in your shoes!\"\n\n\"Thanks for your support,\" I chuckled and faked wanting to cry, \"I hate this so much. I don't wanna hurt her and this is gonna hurt her so bad.\"\n\n\"She'll understand,\" he said softly.\n\n\"Yes, she will,\" I nodded my head.\n\nWe both knew she'd understand,\n\n\"But I'm about to shatter her world into pieces and I hate myself for it.\"\n\n\"You can't stay with someone just to make them happy.\"\n\nI sighed,\n\n\"You know I bet she's gonna want to talk to you,\" I told him, knowing very well that she wouldn't let me go without a fight.\n\n\"Great, can't wait! She's gonna hate me so much,\" he said apprehensively.\n\n\"How anybody could hate you is beyond me,\" I smiled.\n\n\"Oh, but she will!\" he said with nod.\n\nI raised my eyebrows and sighed. I rested my head against the bed and closed my eyes. After a short moment, I felt his gaze on me so I opened them again and smiled at him. He looked at me with need,\n\n\"I can't believe I've got you!\"\n\nI let my eyes slip up and down his body,\n\n\"Believe it,\" I murmured.\n\nI moved so that I was sitting on his thighs and he placed his hands on my hips as mine travelled up his arms, to each side of his face.\n\n\"You know what?\" I asked, \"I really feel ok being gay. As long as I've got you with me,\" I told him sincerely and kissed his lips with a bit of intensity.\n\nHe kissed me back for a moment,\n\n\"I'll always be with you, for as long as you want me to be.\"\n\nI took a deep breath and gathered my thoughts,\n\n\"I think I've finally come to terms with what I feel for you. I know you want a real relationship, and I think that's something I can give you now. I know I don't want just sex from you.\"\n\nOur eyes locked and we became lost in each others'.\n\n\"I want you so much right now,\" he said with a passion in his voice I found irresistible.\n\nThere was a short silence,\n\n\"Well you're gonna love what's coming then,\" I smiled.\n\nA puzzled expression danced across his face.\n\nI kissed and licked his lips softly and whispered,\n\n\"I wanna do it,\" I told him, \"I want you to fuck me.\"\n\nI could tell his heart melted,\n\n\"Well aren't you full of surprises tonight?\"\n\nI giggled at his tone of voice.\n\nThat was it. I wanted it. Finally feeling able to say out loud that I was gay made the whole idea of bottoming incredibly enticing. I was now craving to feel his dick inside of me. I wanted it so bad. I needed to feel his length slide in and out of me and see if it was as enjoyable as it seemed to be for Rob. It was high time I stopped being a coward and let him fuck me, let him love me.\n\nHe pressed his body against mine and pushed me down onto my back before straddling me. I pulled him in for a kiss and reached under his tshirt to pull it over his head. As he took it off, my hands travelled down to the waistband of his jeans. Rob understood what I wanted to do and raised himself up to give me enough room to unfasten the button and zip then he pressed his chest against mine again. We both moaned with need as we kissed and I slid my hands across his smooth ass cheeks, feeling them tighten under my touch.\n\nThen, my hands left his ass and I caressed him. Everything about him was tight. His arms, his back, his stomach and chest. My hands roamed all over him, feeling his smooth golden skin.\n\nHe kept kissing me passionately as I caressed him, his hand roaming over my chest under my tshirt.\n\nThen he sat up and grabbed my arm. I raised myself up and he pulled my t shirt over my head urgently. He stood up to remove his jeans and underwear and I did the same as I watched his toned gorgeous naked body. My eyes stared at his hard member, ready to fuck me for the first time. I was both eager and apprehensive.\n\nI stepped close to him and placed my hand behind his head, drawing him closer. He wrapped his hands around my back and as we resumed kissing as we fell on the bed facing each other.\n\nOur cocks started to rub up against each other. Before I knew it we were working ourselves into a rhythm, totally in tune with each other's bodies. I could feel the wetness on my stomach, as our cocks began moving faster and faster. I humped myself against him harder. His hand slid in between my ass cheeks and his index finger slid up against my hole.\n\n\"Oh,\" I moaned, feeling his finger enter me and savouring the feeling.\n\nHe slid it back and forth a few times giving me what I was craving for but took it out too soon to reach for the lube. His hand soon returned to my ass and he opened me up again, sliding one and then two fingers into me, as he held me tight against him and listened to me sigh in delight. He used his lubed fingers to gently but firmly to stretch my sphincter.\n\n\"Feels good,\" I moaned in his mouth.\n\nHe panted, \"I want you so bad.\"\n\n\"I know.\"\n\n\"I love you,\" he sighed.\n\n\"I know, I love you,\" I repeated, \"take me, I want it.\"\n\nHe smiled. \"You're gonna love it!\"\n\nHe was right, I was going to love it. He had eaten me out enough times to make me crave the feeling of his tongue or finger probing my ass. I absolutely loved cumming with his fingers massaging my prostate and his tongue working its magic on my cock and now I was so ready for more. I was still apprehensive because of his size and thickness but there was such a level of intimacy between us that I knew it would make the experience exceed any other feeling I'd ever had. I needed him to dominate me and make me his.\n\nHe pushed me onto my back and took my throbbing erection in his mouth. I opened my legs and he applied some more lube to my hole. Two of his fingers reentered me and as he started sliding them firmly in and out, an amazing wave of pleasure started coursing through my body.\n\nHe continued blowing me for a long moment, all the while working his fingers up my ass to get me as ready as he possibly could. When his fingers slid out of my hole, he came back up to kiss me and we started another passionate kiss as our mouths crashed together. My legs instinctively wrapped themselves around him and he pressed his body against mine. The feel of his strong body and soft skin against mine was electrifying.\n\nWhen he pulled back, he raised my legs and I felt his cock slide over my tight hole. My body trembled, so eager to feel him in me that I grabbed the lube and applied it to his cock, smearing it all over. Then I felt the head of his cock brush over my hole again, and in that instant, I knew that I needed him. I needed him bad.\n\nI looked into his eyes, and I knew he could see how much I wanted him. Then my eyes roamed his body. He saw me watching him and smiled lustfully as he leaned down and kissed me lovingly.\n\n\"Ready?\" he asked quietly.\n\nI nodded my head wordlessly.\n\nHe raised my legs, positioned his rock hard member at my hole and started pushing the head gently inside. There was pressure as his cockhead pressed into me. He met with a bit of resistance and he had to push a bit harder to pop the head through my sphincter.\n\n\"Ahhh,\" I let out a groan, feeling him inside me for the first time.\n\nHe felt big, and I was tight, but I knew I could take it and I told myself to relax.\n\n\"You ok?\" he asked, hoping I wanted more.\n\n\"Oh yeah, everything's perfect,\" I sighed and tried to breathe.\n\nHe pushed further into me while kissing me, and before long, his cock was fully up my ass and I could feel his balls against my skin. It was uncomfortable, but I didn't feel much pain, his fingers had done their work well.\n\n\"Oh, fuck, you feel huge,\" I gasped.\n\nHe gazed at me, almost imperceptibly raising his eyebrows in a question and just as softly, I nodded my head.\n\nThen he did something I hadn't expected. He grabbed my left hand and brought it over my head then he took my right hand and did the same. He laced his fingers through mine making me smile and giggle. He smiled back at me and he started fucking me. Slowly he withdrew, till just the head was inside. Then he pushed back in, slowly making me take him. I closed my eyes and concentrated on the feeling as he penetrated me more and more, one inch at a time.\n\nI panted when he started a rhythm, building the intensity with each thrust,\n\n\"Oh fuck... oh fuck,\" I repeated, glad he was in control, not sure how much more I could take, feeling like I might have wanted to stop if I had been riding him.\n\n\"Feels good?\" he asked with a giggle, briefly looking at my hard rock cock, pleased that I was enjoying it.\n\n\"Yeah good... ohh god,\" I cried out as he kept withdrawing a little, then pushing back in.\n\nThe pain mixed with the pleasure, the thickness of his cock inside me, I felt so full and I gasped with every thrust at the intensity of the experience.\n\n\"That's how you've made me feel every time,\" Rob murmured, his voice full of desire for me.\n\n\"Fuck, I know, we should've done this sooner.\"\n\n\"You weren't ready. You are now,\" he said sensually.\n\nSoon, I felt no more disconfort and when his cock scraped my prostate, my eyes automatically opened wide.\n\n\"Oh man,\" I shuddered and sighed deeply, \"I fucking love this.\"\n\nHe smiled, still focused on making it a pleasurable experience for me.\n\n\"You're so tight, fuck, you feel incredible,\" he moaned and kept the same rhythm for a few moments, gently fucking my ass.\n\nHe then kissed my lips and I responded by kissing him hungrily. He let go of my hands and they instinctively wrapped around his neck. He then grabbed my legs and whispered passionately,\n\n\"Are you ready for more?\"\n\nI nodded, mentally preparing myself for it and his rhythm slowly picked up. He closed his eyes, caught up in the moment and, just as I did when I fucked him, his thrusts became harder as he began pistoning into me. I concentrated on the sexy sounds he was making as well as the slapping of his skin against mine, thinking this had to be the hottest sex we'd had, just because he was in control and I was being dominated.\n\nHe began kissing me again and seemed to look for a better position to give me as much pleasure as he could. He raised my leg a bit higher and shifted his body a couple of times making me spread my legs wider. We stopped kissing and he began pounding my ass. I gasped and threw my head back as he began assaulting my prostate, making me feel outrageously good. I gripped the sheets and just tried to prepare for the awesome orgasm that was about to rip through my body. Each one of his thrusts elicited a loud moan out of me and I felt like I was nearing to point of no return, when he stopped moving and pulled his cock out of my ass.\n\n\"Oh, fuck, why'd you stop?\"\n\n\"Cause I don't want this to be over yet,\" he said.\n\nHe flipped my body over, applied more lube to my open hole, wiped some of it on his shaft and re entered me, sliding easily into me this time. His raised my leg to the side and I let him slide his arm under my shoulders. I laid flat on my stomach and concentrated on the sensations each time his cock slid in and out of my ass.\n\n\"Oh yeah, this feels so fucking good,\" I moaned and spread my legs wider, so relieved that the feeling is as good as I'd fantasized.\n\nI enjoyed his lips pressed against my neck or my shoulders as he caressed my back. We settled in that position for a moment and he whispered lovingly into my ear,\n\n\"You feel amazing, baby. I love you, we are so good together.\"\n\nIt was the first time he had used that word, and I smiled, feeling we had definitely reached a new level in the relationship.\n\n\"Ohh, fuck yeah, keep doing that!\" I groaned with pleasure as he started speeding up his thrusts, poking my prostate relentlessly again.\n\nThe full body contact was driving me crazy so I raised myself a little and he grabbed my hips to begin fucking me doggy. He pounded my ass faster, deeper and harder and I couldn't control my moans as I thrust myself back against him with each stroke.\n\nThen, he slid his hand under me and grabbed my rock hard erection, smearing the precum with his thumb, making me tremble. I groaned and felt the pleasure grow inside my body. He began timing his fucking and his stroking. He kept teasing my prostate and after a short while, I felt myself going over the edge.\n\n\"Ohhh, I'm gonna shoot,\" I almost whined.\n\n\"Oh fuck, me too,\" he moaned, holding his cock all the way inside me.\n\nMy body shook as I shot spurt after spurt, soaking the sheets beneath me, feeling like this was definitely one of my top five orgasms.\n\nHe pulled back a little and embedded himself into me again as I was cumming, and cried out,\n\n\"Oh fuck Mark, yes, oh yeah,\" as he unloaded inside me.\n\nI could feel every bit of his orgasm as he pushed himself even deeper and his body quaked and shook from the pleasure of cumming in my ass. I realized that I never wanted that moment to be over. I fucking loved feeling him explode inside of me and I knew it was something I would soon be hooked on as I tried to get my head around just how good this had felt.\n\nWe panted and tried to catch our breaths as we let our orgasms subside. He stayed in me for a bit but eventually, he gently pulled himself out. We raised ourselves up to a kneeling position and his jizz began trickling out. I turned my head a little. We kissed, as he wrapped his arms tight around my chest.\n\n\"I'm never letting you go,\" he moaned in my mouth.\n\n\"That's fine with me,\" I smiled, feeling so good I could hardly speak.\n\nThen, we lay on the bed for a moment, physically drained of energy but emotionally fulfilled. "
    ],
    "authorname": "unilive",
    "tags": [
        "gay drama",
        "gay romance",
        "rock music",
        "gay love story",
        "drama",
        "romance",
        "soft rock band",
        "musician"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/u-n-i-ch-04"
}