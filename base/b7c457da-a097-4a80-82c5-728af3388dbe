{
    "title": "Rag Doll Ch. 06 Pt. 01",
    "pages": [
        "My thanks to Grand Teton for taking the time and having the patience to unravel my scatter-gun approach to punctuation; that this makes any sense at all is due mainly to his efforts, so a big thank you. Also in there was my darling Lori, who first enlisted the help of her friend GT, she could see I needed help, she went and got me some, so thank you darling. Thanks also to OldkingClancy for his continued help and support, and as always, to Bonnie for being honest in her opinions and criticisms.\n\nPart 2 is hard on the heels of this, I split it in two parts otherwise it would be far too long to read, but part two is more or less completed, watch this space...\n\nAs before, you should note that this is my world, not the real world, so things happen the way I want them to, not the way they happen in the real world; hopefully you won't spot any glaring differences, but if you do, please just grin and pass along, and hopefully enjoy the ride. If you needed reminding, all characters are over 18.\n\nIf you liked this segment, please vote for it, if you didn't, please tell me why; I can't promise I'll follow all your suggestions (especially the anatomically impossible/illegal/suicidally insane ones) but I will note them and possibly try to learn from them. I answer all emails, so if you would like a reply, don't forget to include your email address.\n\nYour vote is the only reward we authors get for posting our work here, and I do like to hear from the people who like what I've done so far, and those who think otherwise, so please don't be shy about voting, and commenting as well. I never take anything personally and I've made some good friends from some of the people who've written me in the past to tell me what they liked and didn't like.\n\nHave fun, I did!\n\nbb1958\n\n_________________________________\n\nIt felt good to have the space and freedom to consider what to do with my life, and to throw my lot in with my family (and now it didn't feel so strange to say that word...).\n\nI think I'd finally started to become a better person; of course, the new me was still a lot like the old me; these things take time, there was a lot of garbage still stirring around inside me that I had to unlearn, and there were still social graces and nuances of interacting with other people that I just didn't get at all.\n\nBut now I had Shari, my new-found sister, to help me; for some unknown reason, she loved me; actually, she loved me more than it was proper for a sister to love her younger brother, but I didn't care, because I loved her the same way. Shari was truly lovely, as well as warm, kind, patient, understanding, organised, fiercely protective of her younger sister, Yaz, and loved my younger brother (and hers, too) Rick, who was in love with Yaz, and vice-versa.\n\nShari had shown me what it could be like to care for another person. It wasn't long after Rick brought Shari and Yaz to live at the house that I discovered he and Yaz were in love, stumbling on the two of them making love, brother and sister relationship be damned. Yaz was gorgeous; Rick was almost ridiculously good looking, so I suppose it was inevitable the two of them found each other, especially at a time when they so desperately needed someone. Shari had tried to engage me in a similar relationship, but I was too unsettled by what I'd seen, and what little I'd done with her had made me feel like it was somehow wrong and shameful.\n\nEventually I had seen what and who Shari really was, her vulnerability and her need, and finally understood it matched my own. To my amazement, I discovered what it was to actually love someone and need them, and to have that love and need reciprocated. She'd literally pulled me back from the lip of suicide, and showed me that life could have meaning, that finally I wasn't alone.\n\nSo now Rick and Yaz lived in one part of the house and Shari and I lived in another part of the house, although we still spent most of our time together. We'd split the house into two dwellings, for all intents and purposes: the upper floor for Rick and Yaz, the middle floor for Shari and me, and the ground floor as a family space, with the dining room, sitting rooms, and the kitchen. I had begun to feel a puzzling, and surprisingly deep attachment to Rick and Yaz; perhaps some of Shari had finally rubbed-off on me. Splitting the house the way we did was my way of ensuring my kid brother and my little sister stayed close and connected to me.\n\nI'd had an epiphany over Nicky, where I realised just how I'd wronged him; Rick had shown me just how wrong I'd been, how much we'd hurt and abandoned Nicky, how alone we'd left him. If it wasn't for Barbara, he'd have had nothing in his life. He tried to be my big brother, and I slapped him away, we both did. We never knew that our father had abducted him from his mother when he was still a toddler and brought him to England; we always thought Nicky was Barbara's son, they'd been so close, and then that fateful night when he disappeared, my father had beaten him half to death. Barbara, my mother, had I but known it, had helped him to leave, but she'd left no clue where he'd gone, and she was dead the next day, murdered by that bastard now rotting in an American prison. Nearly four years after her death, prompted by Shari, we'd finally gone to visit her grave, to apologise for everything, and ask her forgiveness.\n\nWhen we arrived at the cemetery, we were shocked to find the huge, ornate memorial covered in lies and hypocrisy my lying, despicable, psychopath of a father had erected was gone, and in its place was a small, dignified headstone with a simple, heartfelt message of love. I knew straight away that Nicky had done this, and my heart leaped; he was alive, he'd survived, dear God, our big brother was alive, and he'd come back!\n\nI was still reeling from that revelation when Shari noticed something; there was a flower-holder set into the base of the headstone, and there was a handful of what I'd at first thought were weeds, but Shari bent down and pulled a stalk out of the holder, and I saw it was a flower. A few blue petals still clung to the stem in among the brown, curled petals, and when she bent the stalk, it didn't snap, it was still fresh and pliable. The implications hit us immediately; those flowers were only put there a little while ago, maybe only a week or so, and there was only one person in the world who'd come here to do that. \n\nNicky had been here just a short while ago, he'd been less than half a mile from our front door, but he'd not contacted us, and once again those feelings of guilt and shame, and loss, too, resurfaced. We'd made him hate us, for our constant rejection of him and our mother, for our steadfast refusal to do or say anything while our father beat the hell out of her, and for being the spoiled little pigs we'd been all our lives.\n\nShari saw all this going through my mind, and reached up to gently cup my face in her hands.\n\n\"It's okay baby, it's okay, he'll come back one day, he's not like how you were, you said that yourself; with all that happened to him here, he still came back to her, and he'll come back again one day, when enough time has passed. Let's go home, baby, it's cold, and we have to talk.\"\n\nWe trailed back to the car in silence, lost in our thoughts, Shari kept her arm through mine, her warm hand in my pocket holding mine, and when I looked down at her she smiled back at me, but there was a hint of sadness in her eyes. Initially it had felt peculiar to me, this connection she was trying to forge with Nicky, but then, when I thought about it, perhaps not so peculiar after all. She had every right to try and find some part of him for herself; he was her big brother too, and if she'd never known him, it wasn't her fault.\n\nBack at the house, Yaz and Shari set about making lunch while Rick and I sat huddled in our own thoughts, exchanging the occasional guilty look as we flicked through the pile of photo albums, looking, really looking, at our mother, seeing her features in ourselves. There was no doubt in my mind that Rick resembled dad, as did Nicky, but now I could see Barbara in him too, in his eyebrows, his jaw-line, his cheekbones, his ears, and especially his profile.\n\nRick was obviously thinking the same thing as he constantly flicked his gaze from the albums to my face and back again. Yaz finally broke the morose silence by calling us into the dining room, where the girls had made pork chops and baked potatoes, with green peas, carrots, and creamy baked onions, and a big apple pie for dessert.\n\nShari and Yaz tried to keep a flow of light conversation through the meal, but their efforts were falling on deaf ears as Rick and I stared unseeingly at the wall and chewed mechanically, our minds still at our mother's graveside.\n\n\"...and so I said he could fuck me, but only if I got to wear a sheep costume and call him Bo Peep!\"\n\nI looked around as that last comment finally seeped into my head.\n\n\"Wha...?\" I blurted, and Shari grinned at me.\n\n\"Finally, the Sleeper Awakens! We've been talking to you two space-cases for the last ten minutes, and both of you have just been sitting there staring blankly with your lips moving! Eat your lunch, it's getting cold, we have things to discuss and a few things Yaz wants to run past all of us; that means you two have to be on the same planet as the rest of us earthlings, so call your mother-ship, tell them you'll phone home later, and get cracking on your lunch Bobby, and you too, Ricky, we didn't spend all that time slaving over it just to watch it get cold.\"\n\nYaz smiled minxily at Ricky, who glanced guiltily at his full plate and started forking his food away , as did I, suddenly discovering just how delicious that meal was; my sisters are superb cooks, I have to say, and I'll take serious issue with anyone who says otherwise. All too soon, our plates were empty, and Rick helped Yaz clear the table, finally bringing in a jug of coffee and a handful of mugs from the kitchen. Once everyone was seated again, Yaz started talking.\n\n\"Shari, boys, you know we agreed that we'd invest all the money we got from the sale of the business in a new, family venture. Well I think I know what we're going to do. As we're all aware, Shari knows the Property Development game as well as mummy ever did, she knows how to assess properties and negotiate on price, I've got a good handle on the renovation, contract, and end-user marketing side of the business, Ricky knows how to renovate and repair to a high standard, and I think you're going to want to get your hand in as well, Bobby. I've been doing a little research on the property markets in this city, and there's quite a lot that should interest any property developer. Did you know there's a university right here in Carlisle?\"\n\nI did, but I'd never paid it much attention; none of the students ever spoke to me or paid any attention to me except to look disgusted and cross the road when I came trundling by with the road sweeper going full blast. Yaz grinned as she continued.\n\n\"Where there's a university there are students, and where there are students, there's usually a chronic shortage of accommodation, and Carlisle is no exception. I had a talk with the Housing Officer at the university, and she told me that they're having to board students with families all over this part of Cumbria just to give them somewhere to live, and the problem gets worse every year as the students have to move out of Halls at the end of their first year to make room for the new intake, and so they have to find somewhere to place that class.\"\n\n\"There are several places I think we could convert into student housing quite easily; that place two doors along is a good one; it's empty, and has been for a while, I counted at least six bedrooms, it's almost as big as this place, so if Shari likes it too, and the numbers add-up, maybe we should seriously consider buying it and converting it into student housing.\"\n\nShari looked at Rick and me.\n\n\"Well, what do you think? Should we go with Yaz's recommendation? Speak up, guys, this is your chance to say yea or nay.\"\n\nAs my knowledge of the property market could have been printed in full on a pinhead, I just nodded, trusting Shari and Yaz on this. Rick sat silent for a few seconds, mulling over what Yaz had said, then cocked an eye at Shari.\n\n\"We'd need to move fast, and work even faster, if we want to get anything in place for the early-summer housing rush, but I think we could do it, if we get the right people. Okay, game-on!\"\n\nShari smiled, then sobered up again.\n\n\"Now for the other thing; if you're serious about tracking Nicky down, then perhaps we should do something about it. Maybe we should hire an investigation agency, there must be those that specialise in tracking-down missing persons. If no-one objects, I'm going to give that a try. You two have a think about Nicky, what he liked, where he might have gone, or where he might have been; we know he was abducted from America, could he have gone back there to try and find his mother? Ricky, see if you can dig up anything in that pile of papers in the attic, maybe there's a clue in there, or something that will help an investigator, or if mummy told you anything more, or even just mentioned in passing. That bastard used to boast to her all the time about what he did; maybe he let something slip one time about who and where he took Nicky from.\"\n\nAnd so it was decided; we would kick-off the family business with Yaz's recommendation, and while we did that, we'd look for Nicky, now that we knew he was out there. We were all feeling the urge to bring him back, Rick and me because we needed to apologise to him, and the girls because they needed their big brother, period.\n\nOnce the business of the day was concluded, Rick and Yaz disappeared into the family room to watch TV while Shari and I lingered over fresh coffees. We'd both seen the looks and secret little smiles they'd been exchanging, so it was no surprise to find the family room empty when we finally made our way there to sprawl on one of the big soft couches in there. At least whatever they were doing, they were doing it two floors up and out of earshot, so we wouldn't be disturbed, although Shari was looking like she wouldn't mind me disturbing her at all. We sat in comfortable silence for a few minutes, finishing our coffees, constantly making and breaking eye-contact, until Shari couldn't take any more, throwing her leg over me and straddling me as she sat in my lap, grinning as she laced her fingers behind my neck.\n\n\"Okay, coffee-break's over, time for some happy-time, baby, are you ready to play?\" she grinned, grinding herself against the lump that had magically appeared in my jeans. My hands automatically slid around her waist, then down, to cup and squeeze her firm little backside, making her grin even wider.\n\n\"Ooohh Bobby, you do want to play, don't you?\" she pouted at me, a wicked glint in her eye, as she began to slide herself back and forth on my lap, making my cock grow and harden almost painfully.\n\nShari leaned down to kiss me, just a light, playful brush of her lips against mine, her tongue flicking out for a second, before catching my bottom lip between her teeth and nibbling gently. Something made me pull her closer, Shari grinning as I suddenly pulled her up against me, crushing her breasts against me as I captured her lips this time, my tongue parting her lips to fence lightly with hers. Shari returned the kiss even more fervently, until we were lip-locked, my hands clamped around her lovely, firm bum, holding her tightly to me. Eventually, Shari broke our kiss and climbed off my lap, much to my disappointment. She must have seen my look, as she leaned down to kiss me quickly.\n\n\"Two seconds, baby, just got to get something!\" and with that she dashed upstairs; after a few seconds, I heard her light tread as she skipped downstairs again. She came back into the family room carrying a quilt and a couple of pillows. She threw them on the couch and slipped out of her harem slippers and began undoing her jeans.\n\n\"Come on baby, aren't you joining me?\" she grinned, and I jumped up and began kicking my shoes off as I almost yanked my jeans down in my haste! By the time I got my jeans off and tugged my polo shirt off, Shari was down to her skimpy little panties and bra, and looked like the best reason in the world for a rampage. She grinned at me as I took in the full impact of her long, sleek, shapely legs and tight, luscious little bottom hugged inside her tight panties, her small, high breasts clearly outlined in the light bra she was wearing. Two intriguing, tempting little points poking through the material, and the tumbled mass of her Titian hair, a lustrous cascade of red-bronze, framed her beautiful, heart-shaped face, contrasting perfectly with her creamy complexion.\n\n\"Is that all you're going to do, baby, stare at me?\" she teased, turning her back to unhook her bra, flirting her gorgeous little bum at me, barely concealed as it was in her filmy panties. All I could do was look at her, taking in the elegance of her long, sleek back and slim waist, her flaring hips and her perfectly rounded, pert little bum cheeks, just built for fondling and nibbling, the smooth skin and perfect muscle tone, and once again the contrast of that silky mass of bronze hair against her creamy skin with its faint golden tinge hinting at her exotic heritage.\n\nI slipped up behind her and slid my arms around her waist, hooking my thumbs in her panties and sliding them off before moving my hands up her rib-cage to cup her firm little breasts and gently tease and squeeze her hard nipples. Shari giggled and thrust her bum back into my groin, trapping my cock in the tight cleft between her buttocks, and rolling them to squeeze me playfully.\n\n\"Bobby, is that all for me?\" she whispered wickedly, grinding her bum against my stiffened cock, then turning to once again kiss me while simultaneously grinding her crotch against mine. I was in a state of exquisite agony now; I was holding a beautiful naked girl, and there was only one thing I wanted to do with her, but blindly gratifying myself wasn't part of the new me; I owed my awakening to her, and I knew what I wanted to do to her to make her feel as good as I did right then.\n\nI slid her off me, holding her by her waist as I urged her down next to me, kissing and licking her taut nipples, making her sigh and moan softly as my teeth grazed the sensitive flesh. I continued kissing and licking in a line down her taut stomach, making her wriggle and sigh delightfully, savouring the feel of her warm silky skin against my lips and tongue, until my tongue-tip lapped at the apex to her fragrant slit.\n\nShari groaned as I teased her lips apart, flicking my tongue over her clitoris in its little hood. She responded by twining her fingers in my hair and pushing her mound against my mouth as I bored-in, flatting my tongue to lick her in long sweeping passes the length of her slit, feeling her labia pulse against my tongue as they swelled and darkened with her arousal. Her scent surrounded me, filling my head with her sweet, seductive musk, turning all my thoughts to her, losing myself in what I was doing to please my girl, my whole heart and soul in her hands as I drank her salty, tangy sweetness, my tongue gently rubbing and licking her hard little button, her juices flowing over my tongue as I lapped and drank her\n\nFinally, after a few minutes, or a few hours, I'm not sure which, Shari reached down to cup my face.\n\n\"Baby, it's your turn, sweetie!\" she murmured, sliding away from me and kneeling-up to kiss me, with me responding by once again holding and squeezing her taut bottom as my lips sought hers. Shari responded by gently grasping my now rigidly erect cock, squeezing me with one hand as she fondled my balls with the other. She broke our kiss to smile wickedly before dropping her head down to lightly lick the tip of my cock. I groaned at the feel of her tongue on me, and at the sight of her gorgeous little bottom thrust so provocatively in the air as she continued to kiss, lick, and finally suck me. I twined my fingers in her luxuriant hair, enjoying the feel of the silken strands as her head bobbed on my cock, anything to distract me from the feel of her hot mouth sucking and licking me so perfectly.",
        "At last I could bear it no longer; as I slid into a prone position on the couch, she followed me down, still sucking avidly, her grey eyes looking directly into mine all the while. I sighed and reached for her, pulling her up to me, Shari grinning as she slid up next to me, one hand still wrapped around my cock. She looked into my eyes, guessing what I wanted to do, and smiled as she straddled me facing my erect cock, then dipped down to once again take me in her mouth. I held her hips and looked in fascinated wonder at her beautiful pussy and little pale-brown balloon knot, before pulling her back and up to my mouth so I could taste her and pleasure her once again the way she was pleasuring me.\n\nShe still tasted wonderful; sweet, and tangy, with a soft musky saltiness that told of her excitement, and as I licked and sucked at the succulent morsel spread for my delight, so she sucked me, sighing and mewling when I did something she especially liked. She smelled delicious, and I couldn't get enough of her, each probing penetration of my tongue making her sigh and suck me even more avidly than before. She had a really cute, sweet little pussy, neat and feminine, not like some of the fleshy, splayed-open things I'd seen in my porn mags, and she was as much a treat for my eyes as a feast for my probing tongue.\n\nI don't know how long we teased and pleased each other, but neither of us wanted to finish this; it was too intimate, too loving to rush, there was no urgent need to race to a climax, and we were content to please and love each other in this way for as long as we could. Eventually, though, excitement and stimulation began to win out, Shari thrilling for longer and harder as I tasted, licked, sucked and probed, pushing my tongue as far into her as I could, until, on impulse, I licked her quivering little rosebud, gently pushing and squirming my pointed tongue-tip as far into the tight little knot of her anus as I could.\n\nShe screamed around my cock as she climaxed, a flood of her tangy juices spraying gently across my face and into my mouth, exciting me even further; her sucking efforts on my cock redoubled, and as she squeezed and fisted me as she sucked, I too passed that point, groaning out loud as I came in a white-hot rush of spunk, my cock twitching and flexing as if it had a life of its own as I pumped pulse after pulse of my sperm into her hot and willing mouth.\n\nShari slumped down on me, her body twitching and shaking in the aftermath of her orgasm, her lips still fastened around me as her busy tongue continued to lap at the trickle of spunk oozing from the end of my cock. We lay quiet and unmoving, waiting for the world to come back into focus, Shari slumped on top of me, her tempting, beautiful little pussy and quivering, delicate little rosebud filling my field of view. My hands played with and held her sexy cheeks, rubbing and squeezing the firm flesh, revelling in the springy, juicy firmness, the sexy quiver, and the delightful little bounce of her own personal golden globes. At last she stirred, to swivel round and crawl up next to me and lay her head in the crook of my neck with a happy sigh.\n\n\"That was wonderful, Bobby, thank you!\" she whispered, making me blush. I squeezed her close to cover my confusion, and kissed her once on her nose, and longer on her sexy lips, while allowing my hands to roam over her sexy back and squeeze her deliciously firm bum cheeks some more. There was one thing I wanted to know, not that I had any business asking, and it made no difference to me, but a gadfly of curiosity was at me, and I had to ask her just once.\n\n\"Shari, with all the things you know, all the things you're teaching me, I know that I'm not your first, and I don't care, but I've got to ask, and if you tell me to mind my own fucking business I will and never ask you again, but...I'm kind of curious; where did you learn all this stuff?\"\n\nShari looked up into my eyes, possibly looking for any hidden reasons I may have had for asking; if so she'd have found nothing but my own passing curiosity, and I meant it; if she told me to fuck off and mind my own business I knew I'd never ask her again; it really was none of my business. She looked into my eyes for a moment longer, then nodded.\n\n\"I suppose I knew you'd ask one day, but really there's nothing there, no secret life as a call-girl or anything like that!\" she grinned, and I also grinned, putting her back at her ease.\n\n\"I had a boyfriend, a long-term boyfriend, Graeme his name was, we were in school together, after we left school we stayed together, we did all the things boyfriends and girlfriends do, some of which you get the benefit of, Bobby!\" she grinned, gently flicking the end of my flaccid penis, making me jump.\n\n\"After a while, I realised he'd never taken me back to his house, never taken me to meet his parents or any of his family; he always had a reason, but the upshot was that he always came over to our house, he always picked me up if we were going out somewhere, and he never took me to his parents place on things like Christmas, New Year, family celebrations. It all came to a head when his sister got married, and he never told me. Instead, he took another girl as his date. Of course I was furious; I'd been with him two years, yet I'd never met any of his family, and when he had the perfect opportunity to introduce me to them, he took some blonde slapper he'd met in a pub!\"\n\nI could see the anger and the hurt building in her eyes, and tried to dissipate it for her.\n\n\"Shari, I'm sorry, you don't have to go on, I don't need to hear any more...\" I started, but she shook her head.\n\n\"No Bobby, I want you to hear all of this, then perhaps you'll understand a bit more about us, about you and me.\"\n\nShe started again, her eyes far away as she looked at something I couldn't see.\n\n\"When I found out what he'd done, of course I was furious; he'd told me that weekend he had to go away for work reasons, and he'd see me when he got back. It was only when one of my so-called friends let slip what he was actually doing that weekend that it really hit the fan. When he turned up on Sunday evening all safe and secure in the knowledge that I was none the wiser he was completely unprepared for the broadside he got. I think I called him a \"gutless, pencil-dicked pansy\" in a crowded pub, poured my drink over his head, and kneed him in the balls to drive home just how pissed-off I really was. When I found out the actual reason why he did that to me, I was going to hunt him down and slow-roast his cock with a Zippo, believe me! He can thank Yaz for the continued existence of his prick, because if she hadn't stopped me, I was going to find him, yank it off, and barbecue it in front of him!\"\n\nShe paused to gather her thoughts.\n\n\"That little worm was afraid his family would find out I wasn't white, that their precious little Anglo-Saxon paladin been getting jiggy with a jungle-bunny, knocking-off some girl with a touch of the Tar-Brush. His family didn't care to sully their WASP heritage with darkies like l'il ole me, he'd just been too gutless to tell me, but he was quite happy to drag me off on weekenders in isolated hotels around the South Coast so we could bang each other senseless! That's what hurt the most, that he used me like that; I was white enough to fuck, but not white enough to meet his precious family.\"\n\nShe suddenly grinned.\n\n\"I found out later his father was a solid member of that band of primitives, the British National Party; if he'd found out his son was dipping his dick in a darkie he'd probably have crucified him out on the lawn on a burning cross, or burned him alive in one of those Wicker-Man things! Anyway, after him, there were no more boyfriends; I just didn't trust any Englishman not to do that to me all over again. When I first met Ricky and saw how he bonded with Yaz, I kind of revised my opinions a little. Ricky was so different from what I'd always known; he had absolutely no hang-ups about skin-colour or whites versus coloured or any of that nonsense. I don't think it ever even occurred to him that he was any different from her, and he was just so good for her, so I was happy for her, because now she had a protector as well as a new best-friend.\"\n\nI was at a loss to understand how her ethnicity could have been a problem; however you looked at her, she was stunning, flame-haired and creamy-skinned, with the perfect features of a carved idol in some eastern temple, beautiful and alluring; any real man would give his eye-teeth and his right arm to the elbow for a chance to win her. Her ex-boyfriend's attitude defeated me; prejudice was something I understood, but had never really encountered, and certainly not prejudice of the sort she'd just described. I could see it had hurt her deeply.\n\n\"Shari, I'm sorry, I didn't mean to rake that up, I promise you, I'll never do anything like that to you, I swear on my life!\"\n\nShari smiled at me, and curled her hand around my chin.\n\n\"I know you won't, Bobby, you don't have that kind of evil in you, I saw that from the start; you were angry, understandably, but you weren't a bigoted idiot. You were just like Ricky in that respect, and you were honest, which is why I found you so attractive; the fact you're gorgeous might have had a little to do with it as well! You're honest, and now all that anger and loss is gone, you're just a regular, decent bloke, and that's why I'm yours, and you're mine, Bobby Davies!\"\n\nAll this soul-searching and confession was making me more than uncomfortable, plus her description of me seemed idealised and romanticised, to say the least, but at least now I knew what she really thought of me, and it was vastly comforting to know there was one person in the entire universe who I could 100% rely on to be there for me, and it was Shari. Holding her close to me as I did, her warm, lithe body pressed tightly to mine, the reaction of my body to her touch was both inevitable and hardly unexpected, something she was quick to notice.\n\n\"Well Hello, Bobby! Someone's in the mood for more fun and games!\" she smiled, running her hand down my body to take hold of me and squeeze suggestively, making me even harder. I pulled her on top of me, holding her by her perfect bum-cheeks while she showered my face and neck with kisses, squirming delightfully against me, rolling my trapped cock between our bellies as she kissed me everywhere except on my lips. Shari's favourite way to make love is with her on top, so I tried to manoeuvre her into position, but she had other ideas, instead sliding off me to lie on her back on the couch.\n\n\"Make love to me, Bobby!\" she whispered, a request I was only too happy to comply with. I kissed and licked her neat little breasts, entranced, as always, by her long, stiff nipples, always the perfect treat for me to suck on, and suck I did, my tongue lapping as my lips caressed those tempting peaks of flesh, making her flush as she sighed and murmured underneath me. She took hold of me, her hands gentle but firm on my now throbbing cock as she fisted me, making me even hotter for her.\n\n\"Now, Bobby!\" she moaned, and I needed no more urging, sliding between her supple thighs and taking hold of her behind her knees, holding her open for me as I slid forward. Shari took hold of me once again, aiming me as I pushed forward, sliding my engorged cock deep into her in one long, steady thrust.\n\n\"Ooooh God, yess, Bobby, yess, like that, yes, baby, like that!\" she muttered as I took my weight on my knees and elbows, and as I began to slide back out of her again, she shuddered and twitched under me, her hips thrusting up to meet my thrusts, the two of us pumping at each other in perfect synchronisation. Shari pulled my head down to plant her lips on mine as her long legs folded themselves around me, locking around me and pulling me in ever deeper with every thrust. Our tongues fenced madly as we pumped against each other, the only sound that of our breathing and our bellies slapping together as we fucked so deliciously.\n\nI could feel her excitement growing, igniting a frenzy in me, and I rammed myself into her as hard as I could, until\n\n\"Ooohhh God, Bobby, ooohh Bobby, oooh yess! Ooohh Yess! YESSS!\" she shrieked, her pussy clamping down tight on me as her inner walls fluttered and rippled against me, squeezing me and setting off my own orgasm. My ears popped and my vision blurred as jet after jet of spunk poured out of me and into her, the feel of me ejaculating inside her sending her into ever more spasms as her orgasm rang and ricocheted around inside her. We peaked at that moment of complete stillness as we strained against each other, finally falling back, drained and exhausted, but utterly, completely satisfied.\n\nAs I lay next to her, gasping for breath, Shari suddenly rolled against me, draping her leg over mine, her lips meeting my neck, where she kissed me gently.\n\n\"My Bobby, and don't you forget it!\" she whispered before falling back exhausted and on the verge of sleep. I was in no better shape, so I pulled the quilt up over our nakedness, spooned her warm body against me, and that was how Yaz found us several hours later. I knew it was Yaz, because when we eventually woke in the early evening, Shari's and my clothes had been neatly folded and stacked on one of the chairs, and a couple of extra pillows had been added to the pair Shari had snagged from upstairs.\n\n*\n\nThe structural survey and valuation of the house we wanted to buy came back good, so we made a low-ball offer and waited to see where the owner wanted to be. Negotiations dragged on for almost a month, but eventually the absentee owner quit trying to horse-trade and settled on a price less than we'd been prepared to pay, but more than he thought he'd get, so everyone was happy, and we finally took possession of the property in mid-December.\n\nBy now, it was almost Christmas, something I'd never really paid attention to; our father had always ignored and downplayed it, but I think Barbara had secretly given Nicky presents for Christmas; at least after it had come and gone he'd have a new pair of shoes, or a pair of jeans, or a new jacket; never anything for us, though, and certainly nothing from our father. I felt a surge of hot shame inside when I remembered how our father had always bought good quality clothes and shoes for us, and almost nothing for Nicky; he always seemed to be in shabby, threadbare clothes on the verge of falling apart, faded jeans held together with darns and patches, and battered training shoes, and yet we'd even begrudged him the few nice things Barbara had given him.\n\nWhen Shari learned that Christmas actually meant nothing to me she was outraged, actually disgusted that our father had denied me such a fundamental part of childhood, and so she and Yaz went on a mission: to bring Christmas to me and this house. She secretly bought a tree, and a whole bunch of lights and decorations, and then one night, while I was fast asleep, the two girls and Rick sneaked downstairs and decorated the parlour and the family room for Christmas. They put up the tree with all the lights, decorated it, then must have spent most of the night putting Christmas decorations all over the downstairs living rooms.\n\nWhen I came down for breakfast I was amazed; I'd never seen a real family home decorated for Christmas, only in films and TV shows, and it felt like something I had never even realised was missing from my life had suddenly appeared, something important and essential; all that tinsel and glitter, the candy canes and snowmen, the tree, was just the most beautiful thing I'd ever seen; the house finally looked like a home; our family home. I didn't know what to say, I was literally speechless, and Shari's eyes were sparkling at my reaction.\n\n\"Do you like it, Bobby?\" she asked shyly, and I grabbed her and Yaz and hugged them both.\n\n\"Thank you for Christmas, both of you, it's the most beautiful thing I've ever seen!\" I stammered, as the last shreds of my old life fell away from me. We were still standing around admiring the tree when the doorbell rang. Yaz went to answer it and came back with a FedEx pouch. She tore it open, and inside was a folder with all the deeds to the house we'd just bought two doors away, and a big bunch of keys.\n\nThe debate started immediately; Shari wanted to wait until after we'd had breakfast, but Rick and Yaz wanted to just go and open the place up and have a quick look around to see if there were any glaring issues, and I had to admit I was curious as well, so we wrapped up warm and trudged down the road to have a nose through our new property.\n\nAfter much fumbling, Rick managed to locate the correct keys for the huge old front door, and then we had to really lean on the door to open it. When we got it open we found out why. There was an absolute mountain of ancient and not so ancient mail, circulars, pizza flyers, and old newspapers piled up just behind the door, a very effective barricade. It was almost pitch black in there. Most of the downstairs windows were heavily shuttered, making the place a musty-smelling, lightless cavern; a quick check of the lights confirmed the electricity was off, so we decided to come back another time a little better prepared, and open the place up properly so we could get a good look at what we'd bought. Yaz grinned and grabbed an armful of the letters, saying that she might as well have a sort through to see if there were any with return addresses.\n\nOnce back home, while Shari and I busied ourselves making breakfast, Rick and Yaz quickly scanned though the pile of dry, fusty envelopes, piling all those with a return address to one side, joking and reading out the postmarks and dates. It was a few moments before I realised all had gone quiet. Shari and I looked over, and Yaz was holding Rick by the shoulders while he stared at the envelope in his hand.\n\n\"Ricky, what's wrong?\" asked Shari, drying her hands and taking my hand.\n\n\"Bobby...look here...look at this...\" came his strained voice. I came forward and Rick handed me the envelope; it was addressed to me, it had obviously been mis-delivered, but I recognised the handwriting.\n\nIt was from Nicky.\n\nI stared at it, shock and guilt warring in me all over again; this was from my missing brother, sent from somewhere called Albany, way back last summer.\n\n\"Who's it from baby?\" asked Shari, and all I could do was mumble \"Nicky...It's from...Nicky...\"\n\nI looked helplessly at Shari, who gently touched my cheek.\n\n\"Open it Bobby, it's a sign, it's what you were looking for. He took the time to write to you, aren't you curious what he had to say?\"\n\nI looked the envelope over; there was no return address, just that Albany postmark, and when I looked closely, I realised the stamp was a US postage stamp. This had come from America! I still didn't know where Albany was, but at least we knew one thing; he'd somehow made it home. Did he ever find his family? We knew he'd come back at least once; Barbara's new headstone told me that.\n\nI wavered, not wanting to damage that flimsy envelope, my only link with him, so Yaz gently took it from me and carefully slit it along the top, pulling out a single sheet of notepaper covered in dense handwriting. She looked at me, and I shrugged and nodded; he was her brother too, this concerned all of us now, why shouldn't she read it? She carefully flattened the paper, and began to read out loud.\n\n\"July 4th, 2012\n\nRobert and Richard,\n\n\"I'm writing to you to request that you meet me in Carlisle at noon on November 9th this year, at Barbara's graveside; I chose the date deliberately, it's her birthday, and I wanted to see her on her own special day, as I have some things I need to say to her, and perhaps you might too, although I realise this might be me being more optimistic than realistic. I really don't want any confrontations, or recriminations, or blame-games; my wife and baby daughter will be there with me and they don't need to see that side of our family, and it's too late for that anyway.\"",
        "\"All I ask is that you join me to greet my mum and yours on her birthday; that's right, she was your mother, even though she was never allowed to tell you that. Instead she had to watch as you turned away from her and removed her from your lives, although that wasn't your fault. She never blamed you for that; she knew you didn't know any better. Maybe now we can together offer her an apology for not being there when she needed us most, and to promise her we'll try and do better by the people in our lives than she ever got from the people in hers.\"\n\n\"I have waited for far too long already to come and see her; I left her behind, and it will always tear at my heart that I didn't do enough to save her. I know and freely accept I bear a heavy portion of the guilt for her death; if I had only pulled her onto the train with me that night, maybe she would still be alive today, and that is the burden of guilt I can never put down, that I didn't try hard enough to save her, that I left her to die alone. All the contrition in this world won't absolve me of my part in her death; I know this; I feel it every day of my life. Her blood may not flow in my veins, but it's on my hands, and I can never wash it away, nor should I.\n\n\"Perhaps both of you will come one day to realise that Barbara really was our mum. She brought me up, she kept me safe, she loved me unquestioningly, and she would have done the same for you in a heartbeat, but you were taken from her, and she was never allowed to have what she wanted most in the world: to be your mother again. In every possible way that matters, she was the best thing in our lives, but we stood back and let her go far too easily, and far too soon.\"\n\n\"However, the past is what it is; none of what happened can be recalled, or undone now, and the hurt has cut too deep to ever sponge it away, but perhaps we can start again, this time as adults, brothers with a common loss and maybe after all this time, a common grief. I will be there whether or not you decide to come. I hope to see you there, but I will understand if you don't, because, after all, perhaps not that much has changed for you.\"\n\n\"I do know one thing though: regardless of how you feel about her, I know Barbara will always watch over you; even if you never honoured her, she still mourned her loss of you. In her heart she was always your mother, both of you, and because you were once part of her, perhaps one day you will hear her, as I did, and finally understand that she loved and needed you, and never let you go, despite what life and her family had done to her. I hope that one day you will come to realise just how much we threw away, and for that hope, and for our loss, and for her sake, I make this request. Please be there if you can.\n\n\"Your brother\n\n\"Nicky\"\n\nYaz put down the letter and looked at us, tears on her cheeks.\n\n\"After all this time, he's still hurting so much! Poor Nicky, so much guilt and pain, and for nothing! He went away again thinking you didn't care, after he tried to reach out to you one last time, all that hurt and loss...!\"\n\nRick tried to put his arm around her to comfort her, but she shook him off.\n\n\"No Ricky, don't...don't touch me, just don't! You did this to him, you and Bobby; he was alone, you left him out, you left him out every time and hurt him and hurt him, and yet look! He came back and he still thought of you! You never once tried to help him, and you let him leave! He was your brother, he's my big brother, he's still hurting so much, after all this time he's hurting and he's not here, and it's your fault! Shari...!\"\n\nRick looked at me in bafflement, but I think I understood where Yaz was right now; Rick and I, we'd been the architects of so much of Nicky's misfortune, our father's puppets, who'd stood by and laughed while so much evil happened right under our noses. Right now, compared to him, we were looking pretty shoddy and worthless. He knew we'd done nothing to help our mother, or tried in any way to save her, and he'd expected no less from us, and so he'd taken the guilt for that failing on himself, because he loved her and thought he'd failed her. And yet, even though he believed nothing had changed for us, he'd still tried to reach out, he'd even invoked his beloved Barbara to watch over us, her two despicable sons. This was why we needed him back: he was the heart and conscience of our family, and Yaz had seen that.\n\nShari took a sobbing Yaz into the other room so she could compose herself again, while Rick and I stared guiltily at each other; the same thought uppermost in both our minds, I'm sure; if we'd received that letter in time, would we have gone? The answer that scuttled and scurried around in my mind was \"No\". Last summer I was still too busy being a morose prick to have ever considered any kind of rapprochement with Nicky, and that was the shameful truth that hurt the most. That letter would have made no difference to me. \n\nRick, of course, was nowhere to be found when that letter was mailed, otherwise things might have been very different; his change had already happened, but I had still been alone and sunk in bitterness.\n\nNow, with my newly-awakened conscience and Shari showing me how to be a proper person, it would have been so different, but by the time I found her (or she found me) it was already too late; he'd been and gone again, and he'd left finally knowing once and for all that we truly were what he'd always believed we were. It was ironic, and not in an amusing way, that the morning I had accepted that Shari was what I needed, the morning I had apologised to Yaz for scaring and rejecting her, the morning I had finally realised just what a complete fool I had been, the morning I accepted that my family really was the most important thing in my life, that was the morning Nicky and his family were there alone, placing flowers on my mother's grave.\n\nSomething clicked, and I picked up the letter, scanning quickly through the first paragraph to what I'd heard.\n\n\"Nicky has a daughter; he's got a wife and a baby daughter. We have a niece!\" I stated in astonishment, Rick's eyebrows suddenly going up as he took that in as well.\n\nThen Shari was standing at the doorway with Yaz, who flung herself on Rick, burying her face in his neck as she hugged him tightly.\n\n\"I'm sorry baby, so sorry, it wasn't just you, you didn't know any better, it's just...I was so sad for him, he's one of us and he's still in so much pain, he didn't do anything except try to help her, and yet he feels so guilty, poor Nicky, there's still so much hurt and loss, and it's not fair, it shouldn't be him, we have to find him and make it right with him, promise me we will, Ricky, promise me!\"\n\nRick soothed her, nuzzling her neck as she cried for her lost brother.\n\n\"I promise, baby, we'll find Nicky, and I swear, we'll make it right with him; with him, and his wife, and his baby, our niece; do you remember reading that? We have a baby niece!\"\n\nShari came and took my arm.\n\n\"I heard that bit, I was wondering when you'd pick up on it,\" she smiled. \"Under the circumstances, I think we need to ramp-up the search for Nicky. This letter came from Albany, which I know is the capital of New York State, so he must live or work there or somewhere near there. At least now we have a location, it should make finding him a little easier. I think we need to make finding our big brother our priority; this property business can wait; family comes first.\"\n\n*\n\nThe following day, Rick and Shari went shopping, and Yaz took me into town so I could buy something for Shari for Christmas. It was a strange experience for me; I'd never been Christmas shopping, so I'd never actually been in one of the department stores at Christmas-time; I'd never had a reason to, and I was almost overwhelmed by the colour, the glitter, the decorations and displays, and the Christmas music playing everywhere.\n\nYaz piloted me to the things she knew Shari would like, and helped me pick out a suitable present for her, then turned her back while I bought something for her as well, something to give my little sister on Christmas Day, and then Yaz parked me with all the bags and boxes while she went off to do a little shopping of her own. I also managed to buy a couple of other presents, then, laden down, we made our way home. I was enthralled; Christmas shopping made me feel, for the first time, that there was a special time happening in the world and I was part of it. Yaz made me stop on the way home to have my picture taken at a coin-op Photo-booth. When I asked why she just replied, \"Ask Shari...\"\n\nRick and Shari were also burdened down with bags and packages, and we spent that evening in a frenzy of wrapping and labelling the things we'd bought for each other, and stacking them under the tree. Shari had also stopped in at the post office and picked up passport application forms for Rick and me, which was why they'd made us take our pictures, reminding me that our priority was to find Nicky, and our starting point looked like this \"Albany\" place in New York.\n\nChristmas Day was quiet but happy: we'd made a start on finding Nicky, we were getting our passports straight so we could go find him, and we were happy as a family as well as the couples we'd turned into. Shari gave me a warm jacket, fleecy gloves, and a handful of warm sweaters, plus some nice dressy shirts, and Yaz gave me a digital camera, so I spent Christmas morning making my beautiful sisters pose for me in their pyjamas while I snapped away. I'd bought Shari a new laptop with the very last of the money I'd saved from that thankless job I'd had (plus some other gifts I hoped she'd show me after bedtime...), and we'd all clubbed together and given Yaz an iPad. Shari and Yaz had given Rick warm clothing, boots, shirts, and underwear. The sight of Rick in his sleep sweats with a pair of silk Mickey Mouse boxers pulled on over the top was something to behold, although it's an image I'm trying to forget...\n\nI think the present that meant the most to us, though, was one that Shari gave to Rick and me. She'd taken an 8x10 portrait photograph of Barbara from one of the albums and had it framed for us; it was a picture of her that must have been taken before all the bad things started to happen. She looked so young and happy, her eyes smiling as well as her lips, her light-brown hair and grey eyes shimmering in the light and her silver filigree charm bracelet on her wrist. I'd forgotten about that bracelet, and seeing it in the picture brought back a fleeting quasi-memory of seeing it glitter in the sunlight. I briefly wondered where it had gone; it wasn't on the list of things removed from the house, and it wasn't in among her things in the attic.\n\nRick and I stared for long moments at our mother, really seeing her for the first time, her beautiful face young and carefree, not beaten-down, cowed and afraid, her smile fresh and radiant, before I took it and placed it on the mantelpiece, where we could see her properly.\n\nRick and Yaz had volunteered to make Christmas lunch, so I stretched out on the couch in front of the fire with Shari on top of me, watching Christmas TV while roast turkey and all the trimmings happened elsewhere. Shari was grazing on my neck when she happened to look under the tree and noticed there was still a handful of unopened presents. I saw where she was looking, and her raised eyebrow.\n\n\"I um, I...got something for Nicky, just a small gift, something with his name on it just so we could...feel like he was here today, too...\" I whispered, blushing slightly at the admission.\n\nShari smiled sadly, her eyes misting.\n\n\"How strange baby, so did I, and I think Yaz and Ricky did as well. That was a nice thing you did Bobby. Maybe somehow he'll know we're thinking about him; who knows, maybe it'll call him back home. I put something under the tree for mummy too, just to let her know I'm thinking of her, and a little something for Barbara from you and Ricky, I hope you don't mind?\"\n\nI hugged her close, smelling the fresh berry scent of her hair.\n\n\"Of course I don't mind, I should have thought of it myself, a little something to tell her I'm sorry and that I'll never forget her.\"\n\nShari kissed my forehead, and wiped the tears from the corners of my eyes.\n\n\"I think she knows now, Bobby, and once we find Nicky and put our family back together, it'll be over and she'll be able to rest, I'm sure.\"\n\nShe tapped the tip of my nose and grinned happily.\n\n\"Cheer up, now, baby, it's a happy day today. You may not be aware, but it's the most wonderful time of the year!\"\n\nI didn't want the day to turn melancholy, not my first real Christmas, so I kissed her to say thank you, and Shari kissed me back a bit more seriously. We spent the next few minutes making out, my hands roaming over her, squeezing, fondling, touching, holding, while our lips and tongues fenced and chased each other. Shari broke off to look down at me, her eyes wide, and beautiful, and very, very sexy.\n\n\"Dinner won't be ready for at least two hours, Bobby, do you want to go somewhere more comfortable?\"\n\nI nodded, and she jumped off me and stuck her head in the kitchen, telling the others not to disturb us. With that done, she grabbed my hand and towed me from the room, leading me upstairs and to our bedroom. Once there she began pulling my shirt out of my jeans, undoing buttons as I squeezed her delectable little bum, pulling her against me so we could grind against each other. Shari grinned as she rubbed herself against me, my hands sliding over her and into the back of her jeans to squeeze and knead her taut little cheeks.\n\n\"Turn around, Bobby, got a surprise for you!\" she grinned, kissing the base of my throat as she gave my crotch a quick squeeze. \"I think you'll like this!\"\n\nI turned around and closed my eyes, listening to the soft, subtle sounds of cloth rustling as she got changed, my cock throbbing with anticipation that it was one of the gifts I'd given her in private.\n\n\"Ok, baby, you can turn around now!\" she murmured, and so I did, my eyes widening at the sight before me. Gone were the jeans and tank top, and in their place was a sheer black teddy of the briefest sort, a few wisps of lace covering the strategic places, covering her while contriving to make her look even more naked than if she'd just posed in the buff. The outfit was set-off perfectly with black, elbow-length fingerless lace gloves, sheer black seamed-stockings with lace hold-up tops, and black stilettos, making her long, slim legs look truly endless. A black velvet choker set with a large green stone around her creamy throat perfectly complimented her sumptuous mahogany-red hair.\n\n\"Do you like it, baby?\" she smiled, doing a slow twirl, and I could only nod in open-mouthed appreciation.\n\n\"Well come here, then, baby, aren't you going to unwrap your present?\" she crooned, and I obliged, closing the distance between us in a heartbeat, to hold her tightly as my lips crushed against hers, my hands roaming over her all over again, holding and fondling this vision of beautiful young womanhood!\n\nShari broke our kiss to smile at me.\n\n\"So you really like it then? It took Yaz and me ages to find, but when we did, she got a set just like this one too. Ricky's in for a treat tonight! I'm so glad you like your present, baby, I wanted your first real Christmas to be special!\"\n\n\"God, you look amazing!\" was all I could say, \"You look like the reason the riot started!\"\n\nShari grinned impishly at the compliment. Her nipples were suddenly obvious, poking solidly through the material of her teddy, the darker circles of her aureoles just visible through the sheer material, and I began to think about how to get this magical garment off my girl; I wanted to see her naked so badly right now, and so did my cock, judging by its throbbing.\n\nShari slid her hand down and squeezed my swollen cock.\n\n\"I see Little Bobby likes his present too!\" she grinned, giving me another firm squeeze.\n\n\"Less of the little, if you don't mind, you disrespectful girl!\" I grinned as I responded by lightly stroking my fingers over her barely-clad pussy, making her jump and gasp.\n\n\"So Bobby, what do you want to do now?\" she purred.\n\nI answered her by pulling off my clothes as fast as I could, unbuttoning and shoving down my jeans while Shari finished unbuttoning my shirt. Between us we got me down to my shorts in just a few seconds, and now I could devote some care and attention to peeling my girl out of her underwear, a skill Shari had been kind enough to teach me at some length over the last few weeks.\n\nAs I embraced her, my hands explored the back of that teddy, finding the single hook and eye that kept it all in place. While we kissed, I unhooked it, peeling it down from her shoulders and pushing it around her waist. Shari stopped kissing me to smile and give a quick shimmy, and the lacy confection dropped to the floor, leaving her clad in just stockings, gloves, and choker.\n\nThat did it for me. With a low growl of lust I pulled her close, my hands sliding down to cup and squeeze her lovely, tight little bottom, her mound rubbing against my now solidly erect cock.\n\nShari hooked her fingers in the waistband of my shorts and pulled them down; I got the message and pulled them off the rest of the way.\n\n\"That's better, baby!\" she grinned, kissing me while she wrapped her hand around my cock and began a slow pumping motion in time to the motions of our tongues as we kissed deeply. Shari edged me backwards as we kissed, until the back of my legs met the bed frame, so I sat down, with her sitting astride me, her lips still glued to mine. My hands were still clamped to her lovely bum, and I began slowly pulling those delectable cheeks apart and squeezing them together again, making her gasp into my mouth each time I did it; I knew she liked it, so I kept doing it, feeling her kisses becoming sharper as her arousal climbed the longer we played and fondled each other.\n\nBy unspoken agreement we stopped, Shari breaking our kiss to smile gently as she rose up, and slowly impaled herself on my aching cock, head back and eyes closed as she slid onto me with a long hiss of satisfaction. When she was all the way on me, she leaned down and peppered my face with soft little kisses, then straightened up and began to rock back and forth, grinding herself against me as she rose and fell. I could hardly bear it. The feel of her tight pussy squeezing me as she fucked me was out of this world. With the sound of her little cries as she stimulated herself, and the feel of her soft lips when she leaned down and kissed me, I was in a state of almost total sensory overload. That never stopped me kissing her smooth creamy neck and shoulders, though, or nuzzling between her breasts as she rose and fell on me. Her nipples were like bullets now, stiff and solid, and when she leaned back against my encircling arms, I was able to dip down and suck and lick those delightful, stiff little nubs, making her groan and quicken her pace.\n\nWhen she came, it was like an electric shock convulsing her; her body stiffened, her hands holding my head immobile against her, her body trembling as her pussy clamped down on me, preventing me from pulling out; not that I was going to. The feel of her tightening around me was all it took for my own climax to gather and batter its way through me, and I came in a welter of sperm, jet after jet pulsing into her as her pussy convulsively sucked and squeezed at me, milking me of every drop.\n\nAs I finished pumping into her, Shari began to come down, slumping against me to hold me close, our hearts hammering together in the aftermath of our mutual storm. I flopped backwards onto the bed, Shari lying on my chest as I gasped for breath; making love to my girl was always a breath-taking experience, in more ways than one!",
        "As we lay in our sweat, my softening cock slipping from her, Shari raised her head to look into my eyes, grinning as she spoke.\n\n\"So baby, how did you like your first Christmas?\"\n\nIn answer to her question I slid my hands around her taut little backside and pulled her close against me.\n\n\"Thank you for making it so special for me!\" I grinned, kissing her on the tip of her nose as my hands roamed over her, squeezing and stroking her, making her alternately gasp and giggle.\n\n\"Stop it, Bobby, I need a quick snooze after that, no, stop it!\"\n\nI grinned, and gave up on gently torturing her, Shari smiling back as she snuggled down against me.\n\n\"Wake me up in half an hour, okay, Bobby? Please? Don't let me sleep Christmas Day away!\"\n\n\"To hear is to obey, your wish is my command!\" I whispered, pulling her closer and flipping a corner of the bed covers over her.\n\n\"My Bobby, love you baby!\" she murmured drowsily.\n\nI wasn't in the least bit sleepy, just very relaxed, but I reset the alarm clock, just in case, and turned my attention to looking at my beautiful half-sister.\n\nI was still a little puzzled at what exactly she saw in me, although eternally grateful she saw enough to stick around and do these kinds of things with me! No, I guess I still felt a little undeserving of her, my overwhelming sense of entitlement having finally way to perhaps just a hint of an inferiority complex. Yaz and Shari had never tried to hold my lack of experience of the real world over me, nor had they ever once been pitying or \"understanding\"; that would have been just as galling. No, they'd just showed me stuff, told me things, and left me to form my own conclusions about how the world worked.\n\nBoth my sisters believed I was an adult, and left me to it. It was working, although some things I saw or read about just made no sense, because I'd never been a part of the life around me. I had no friends, nor did I actually know how to make any. Conversation was another closed book; I could talk to Rick, Yaz or Shari, because I knew them, but I had no clue how to make that initial approach to someone new, to say \"Hello, what's your name, my name's Bobby\". I think that was what made Shari saddest, that our father had handicapped us so thoroughly, making social pygmies of us by keeping us apart from the world, probably so we'd feel no connection to it when it came time to take over from him. Rick had managed to break that programming. I was still working my way through it, but with Shari's help, I believed I was making some headway.\n\nThinking heavy thoughts like this, I must have dozed-off; the next thing I knew, the alarm was buzzing and Shari was lovely and warm and soft next to me, yawning prettily as she stretched. I was tempted to set the alarm for another 30 minutes and huddle down next to her; she was just so nice to cuddle up against on a deep mid-winter's afternoon, and lunch was going to be at least another hour, so we could do this. I leaned over to reset the alarm, and Shari pushed it out of reach.\n\n\"Uh-uh, sleepyhead, Yaz and Ricky are working hard to make your first real Christmas special, don't mess with that! Tell you what, though; I need a shower, you're welcome to do my back if you want...?\"\n\nHow could I resist...\n\nChristmas lunch was superb. I'd never actually eaten turkey before; our father had never bought one, preferring much cheaper foodstuffs for us; we'd never celebrated Christmas, so I'd only ever seen a Christmas dinner in pictures, and my first one was almost overwhelming. Yaz and Rick had really gone all out to make our first Christmas as memorable as possible, and I was dazzled by all the different things there were to eat and enjoy.\n\nAfterwards, we cleaned-up and retired to the family room to spend Christmas Day together, at the request of Yaz, who'd always treasured the time spent on this day with her mother and sister, and lately, Rick, too. We sat around discussing the things we'd do, with Nicky top of the agenda. It didn't seem incongruous discussing him on this day of all days; Yaz and Shari seemed to have developed a real need to talk about their missing brother, where he was, what he was doing, his family now, what they were like, and how they'd feel if we suddenly turned-up looking for him.\n\nThe consensus was that he'd be shocked, but that he'd accept us, all of us. The letter, more than anything else, had convinced the girls that Nicky would be, if not pleased, at the very least intrigued to find out what had happened, and to meet his baby sisters. The day after December 26th, Rick and I were going to see a solicitor to get our passport applications notarised, then Shari and I were driving down to the Passport Office in Liverpool, and once we got our passports, we'd be sending them via courier to the American Embassy in London, to get our visas. Once that was done, we were going to Albany, to find our brother.\n\nWe had no choice but to go; Shari had drawn a blank with locating an agency of any sort that was actually interested in tracing our missing brother; virtually all the PI's she'd found were only interested in doing background and security checks for corporate clients: they had no time or patience for our kind of search. Similarly, a trawl of the internet had proven equally fruitless. No-one by the name of Nicholas Davies was popping up, at least none of the right age, occupation, or ethnicity. As Shari had finally confessed to me one night, we couldn't be sure he was even using the Davies surname; what if he was so filled with disgust and hatred for us and all we stood for that he'd dropped the name entirely? What if he was using his mother's maiden name? We didn't know what that was, so that put an end to our internet search.\n\nFinally we agreed on one thing; the only way we'd ever find him was if we looked for him ourselves. We would have to go to Albany, visit every garage and car repair shop, show them his picture, and ask the question; does this man work here?\n\n*\n\nAnd now, all the preparations were over, and here I was, on a cold, late-January day, cooling my heels in the departure lounge at Birmingham International Airport, waiting for our flight to Albany. The girls were excited, but I don't mind admitting, I was scared. It didn't seem possible that the huge jet clearly visible through the panoramic windows of the Departures Lounge could actually get airborne, no matter how many times I'd seen it on TV; up close it just didn't seem credible that such a huge mass of metal could even move at all, let alone leave the ground and fly, and the thought of being inside that thing worried me to the point where I was actually sweating. Shari noticed I wasn't talking or joining in the conversation, and pulled me to one side.\n\n\"What's wrong, baby?\" she murmured, then her eyes followed my gaze to the monster jet just outside.\n\n\"Oh, flight jitters. Don't worry, Bobby, I've been in one of those before; there's nothing to worry about, I promise! I'll even hold your hand, if you like...!\"\n\nI looked down at her cheeky grin, and I couldn't help but grin back; her calm confidence more than anything else helped me to level-off a little. Both Shari and Yaz were wearing stretch jeans and stiletto-heeled ankle boots, and smart, military-cut box-jackets complete with epaulettes, and Balmain T-shirts underneath. They'd elected to travel with their fabulous long bronze hair unbound. With their beautiful features and sexy figures, they looked elegant and truly stunning; it was really no wonder more than one pair of eyes followed them around the lounge as we waited to board our flight. Watching the two of them helped to take my mind off things, but eventually I'd return to brooding about getting into that monster and hurtling down the runway at 300mph.\n\nJust when I thought I'd go mad from the waiting, they called our flight. We lined up and filed down the boarding ramp and into the plane. We had adjoining seats, a block of four, so we didn't have to worry about strangers clambering over us or falling asleep, drooling, or getting sick on us. It was a long-ish flight, over eight hours, so I'd brought a book along in case I couldn't sleep; fat chance; I was so keyed-up that sleep or reading were the furthest things from my mind.\n\nWhen the engines began gunning as the plane lined up on the runway, I heard Shari gasp. I looked at her, her face was twisted in pain, and I realised I was squeezing her hand so tightly it was hurting her. I apologised with my eyes; Shari grinned and patted me gently to show she understood, then Yaz, seated on the other side of me, slipped her arm through mine as well.\n\n\"Don't worry, baby, I've got you too!\" she grinned cheekily, her touch and warm humour relaxing me slightly. Now I had two gorgeous, exotic redheads huddled up against me, holding my hands and resting their heads on my shoulders; no wonder I was getting envious, resentful stares from some of the other passengers! I jumped when a dull thud sounded underneath us. I glanced questioningly at Shari, and she just smiled back.\n\n\"It's okay, Bobby, it's just the undercarriage coming up, no need to worry; we're on our way, Baby, and relax, please, it's safer than crossing the street, I promise you!\"\n\n*\n\nWe had an uneventful flight, the only jarring note being when we came in to land, as I once again nearly crushed Shari's hand as I waited for the crash! Once we collected our baggage and cleared customs, we followed the signs for the exits and taxis. A man in a peaked cap asked us if we wanted a cab, and when we nodded, he beckoned over a bright yellow MPV-type vehicle with a modern black chequer-pattern on the sides. Rick handed him $5, and he smiled as he opened the cab door and saluted us in.\n\n\"Where to, please?\" asked the cabbie.\n\n\"The Ramada Plaza Hotel, please,\" replied Shari, leaning across me as she peered out of the window at the freeway rolling past, getting her first look at Albany.\n\nThe hotel was only a couple of miles from the airport, and I helped the hotel concierge team unload and separate our luggage while Rick paid and tipped the cabbie. Then we followed the luggage trolley up to our rooms. Rick and Yaz had the suite next to ours, with an interconnecting door. Our room was the largest, most luxurious room I'd ever seen, with an absolutely enormous bed, a gigantic flat-screen television, and a luxurious bathroom with a bathtub you could have swum laps in. Shari sat on the edge of the bed, then flopped back and stretched-out, smiling tiredly at the ceiling.\n\n\"Baby, come here a second!\" she called, and I left my study of the Albany skyline to hike all the way across that vast room and join her stretched out on that huge bed, our feet on the ground as we stared up at the ceiling.\n\n\"Okay, Bobby, now we're here, phase one is done; now we move on to phase two. In about an hour, there's a Private Investigator coming to see us; I spoke with him yesterday, and what we're asking is not what they normally do, apparently none of them do, but I waved money at him, and I guess he couldn't resist it. Anyway, he's agreed to assist us, so we'll need to have every scrap of information you and Ricky can dredge up. After that, maybe we should get some dinner, or just get Room Service; I don't know about you, baby, but I'm absolutely buggered! My watch says it's 7pm, my body clock says it's after midnight, and we've had an eight-hour flight; I really, really need some sleep, so please keep me awake during this meeting.\"\n\nI scrambled further up the bed and Shari wearily clambered after me, sliding up against me and slipping her hand inside my shirt and around my waist.\n\n\"Mmm, nice and warm! Wake me up in a little while, baby, I just want a quick snooze, ok?\"\n\nI brushed her forehead with my lips, but she was already asleep, so I lay back and looked around in wonder; I was actually in a foreign country, in a luxurious hotel room with a beautiful girl. Six months ago the very thought of it would have been dismissed as an impossible fantasy, but it was real, I was really here, and so was the girl! There was no way I was going to fall asleep; I was too keyed-up. Prior to making the preparations for this trip, I'd never been outside Carlisle, so this was an entirely new experience for me, and I intended to savour every nuance of it.\n\nI was going over the events of the last few weeks in my mind when there was a light tapping at the connecting door between the two suites. Gently disengaging Shari from me, I went over and opened the door. Yaz was standing there, wearing that brief robe she was so fond of. She nodded over at Shari, who was fast asleep again.\n\n\"Bobby, that bloke from the detective agency or whatever they call themselves over here is going to be here in about twenty minutes, you'd better wake her up and get her in the shower quickly, otherwise she's liable to fall asleep during this meeting. Actually,\" she grinned at me and held her nose, \"you could do with one as well!\"\n\nI turned her around and swatted her bottom, Yaz giggling and stumbling back into her suite, where I could see Rick stretched out on the bed, as flaked-out as Shari.\n\n\"You cheeky little bugger, show some respect for your elders!\" I called after her, and ducked as she chucked a cushion at me and jumped giggling onto her bed, jarring Ricky awake.\n\n\"Okay Bobby, I know, I heard!\" came Shari's voice, still blurred with sleep. I decided that after this meeting, we'd have a light meal sent up, and we'd all get some rest. Shari was right, it may have been early evening in Albany, but our bodies thought it was after midnight, and we'd had a long, heavy day.\n\nShari sat up and wearily began stripping off her jacket and boots. I moved in and helped her, Shari flopping back on the bed with a sigh as I tugged her boots off, then unbuttoned her jeans and pulled them off, with her lifting her bottom to allow me to pull the tight jeans all the way off. I held out my hand and she took it, hauling herself upright. I looked at her and shook my head; she was exhausted. Maybe planning a meeting fresh off the 'plane hadn't been such a smart move, and I think she was probably thinking that too; but it was too late now; the Private Investigator was due in less than half an hour, so she needed to be fully awake and aware.\n\nOnce she'd stripped off, I led her to the shower. She was almost stumbling with weariness, so I quickly shed my clothes and pulled her into the wet-room, turning all the spray-heads on at once, so she was hit from all angles by the hot needle jets.\n\n\"Oooh, yess, that feels so good!\" she drawled, leaning against the wall and then sliding down into the alcove seat as the spray pummelled her, her eyes closing as she once again began to slip back into sleep. This was not what I intended, so, after a few second's deliberation, and somewhat reluctantly, I hit the temperature regulator, turning all the spray heads to 'Cold'.\n\nShari shrieked as the frigid water woke her up in a hurry, galvanising her back to her feet as she gasped, trying to find the shower control panel. I wasn't as affected as she was; remember, for the past few years all I'd ever had was cold showers, but I think this was the first time she'd ever had one.\n\n\"BOBBY! TURN THE FUCKING HEAT BACK ON!\" she screamed at me, shivering as she groped for the control panel, which I just happened to be leaning against.\n\n\"Are you awake now, baby?\" I asked her, to get her small fist in my chest as she thumped me.\n\n\"YES, YES, YES I AM, NOW FUCKING TURN IT OFF!\" she yelled, so I did, then grabbed a gigantic soft towel off the rail and wrapped it around her. She glared at me, her beautiful grey eyes furious at what I'd done.\n\n\"DON'T touch me, you pig!\" she snarled, wrapping the towel around herself as she shivered, so I ignored her and briskly rubbed her down, helping to get her circulation going again.\n\n\"So, are you awake enough for this meeting, or do you want another dose?\" I asked her as I rubbed and massaged her, enjoying myself immensely. Her eyes narrowed.\n\n\"If you ever do that again, I swear, I'll slap you so hard our grandchildren will feel it!\" she hissed, but still wriggled against me as I rubbed her down.\n\n\"So we are having grandchildren, then?\" I enquired innocently, then gasped as she reached down and pinched my cock, hard.\n\n\"Yes, but don't push it, buster, I haven't forgiven you for what you did in there!\" she grated, her fingers still applying pressure to my most delicate bits.\n\n\"Okay, truce, you can have a go at me later, right now we have a meeting in...\" I looked at the wall-clock \"...fifteen minutes, so can we get a move on?\"\n\nShe relaxed her grip, letting me breathe a sigh of relief.\n\n\"Okay Bobby, but you owe me!\" she whispered, giving Bobby Jr. a meaningful shake before letting go. Five minutes later I was dried-off and dressed, wearing jeans and a pullover shirt. Shari had on just a simple shift dress, something I'd never seen her wear before, noticing all over again just how spectacular her long creamy legs were; she always wore jeans or leggings, so I almost never got to see her legs during the day, and I made a note to myself to make it happen more often; her pins were far too good to be hidden away like that!\n\nTen minutes to blow-dry and brush her fabulous hair, and we were ready to meet this P.I. character. We'd already asked the Front Desk to ask him to come up to the room, so all we had to do was wait. The connecting door opened, and Yaz and Rick joined us. I was intrigued to see that Yaz was wearing the same pattern dress as Shari; obviously the similarities between the two of them were more than just skin-deep. We were making small talk, Yaz looking pityingly at me when Shari told her what I'd done to wake her up, when there was a knock at the door. Shari tensed slightly, so I patted her hand as she twined her fingers in mine for a second, then I got up to answer the door.\n\nThe caller was an attractive young woman, in maybe her late twenties, wearing a subdued, but very smart business suit, and an elegant white blouse open at the neck, her dark hair in a modern but unfussy style, and carrying a black briefcase. She looked for all the world like any young executive one might pass on the street: smart, professional, completely unremarkable, and totally anonymous.\n\n\"Miss Shahida..?\" she enquired, holding out her hand as Shari came forward.\n\n\"That's me. I was expecting Mr. Krall...?\"\n\nThe young woman smiled.\n\n\"I am his associate; my name is Melanie; Mr. Krall prefers to work unobtrusively, so my function is to meet clients, assess the level of information they require, go through the scale of fees, and explain our processes and procedures. I have been given to understand that because this is outside our normal type of enquiry service, a more...personal scale of fees has been agreed, tailored to the needs of this enquiry. I assume there are no legal attachments or impediments to this enquiry?\"\n\nShari smiled back, then sobered.\n\n\"No, no legal issues. All we want to do is find our brother; he's been missing for almost four years now, but we think he may be somewhere in this area. We'd like you to find him; that's all. I discussed and agreed the fees and conditions with Mr. Krall when I made the original enquiry, so if you would like me to sign an agreement engaging your firm's professional services, I am prepared to do that right now.\"\n\nMelanie seated herself at my invitation, and took a sheaf of papers from her briefcase, various contracts and agreements, which Yaz read through quickly, and nodded. Shari signed in duplicate and once Melanie had checked all was in order, she handed one set to Shari and smiled professionally.\n\n\"I understand that you have some information that might be of assistance. If possible, we need a recent photograph of the subject, plus any other personal information that might be of relevance in tracing the subject.\"",
        "I went to my case and pulled out the folder we'd assembled, containing the most recent photographs we had of Nicky, a copy of his college certificate that Rick had found in with Barbara's things, and a copy of that letter.\n\nWe spent the next hour going over everything we knew or surmised about Nicky: the kind of job we thought he'd be doing, most likely a motor mechanic, given that he'd only ever wanted to be one, his height, and any identifying marks; this meant telling her about what our father had done to him, and that he may well have been extensively scarred.\n\nMelanie made copious notes, asked some sharp, insightful questions about our relationship with him, and asked us how we wanted to approach him if and when the agency located him. We decided Yaz and Shari should make the initial contact. Nicky would have no reason to balk at them, as he'd never met them.\n\nOnce Melanie left, having left a cell phone keyed to the agency number, in case we needed to contact them or came into possession of any further information, we ordered room service, ate a light meal, and collapsed exhausted into bed. There was no wild thing that night; I was exhausted, both physically and emotionally, as was Shari, and I knew Yaz and Rick were dragging as well, so our first night in America we slept the sleep of the truly exhausted.\n\nI woke to bright sunshine pouring into the room, rolled-up in the warm bedclothes with Shari spooned up tight against me, and my arm around her. I looked around the unfamiliar room in slight confusion before memory reasserted itself, reminding me where I was; I was in America, actually in America, how bloody amazing was that!\n\nI stretched as unobtrusively as possible, trying not to disturb Shari, but that little movement was enough to wake her. I saw her eyes flutter open, then her beautiful coral lips curved in a smile as she too stretched.\n\n\"Good morning baby!\" she whispered, and burrowed down even further against me.\n\n\"Mmm! You're lovely and warm; don't move for a while, please, this feels so nice!\" she murmured, her voice still blurred and scratchy with sleep. Of course I wrapped my arm around her and pulled her closer so I could soak up some of the sleep-warmth radiating off her.\n\nI don't know how long we lay huddled together like that. It was so nice to just be warm and loving and quiet together. I was just beginning to get drowsy again, when there came a knock on the interconnecting door.\n\n\"Come in, Yaz, it's open!\" I called, and Yaz came in, followed by Rick.\n\n\"Up guys, up, it's our first morning in America, I want to explore, but first, I want to eat a real, genuine American breakfast!\" grinned Yaz, bouncing on the edge of the bed and shaking Shari and me around.\n\n\"Wakey-wakey, hands off cocks, on with socks!\" she sang, being approximately 50% correct. \"Come on Sleepy and Dopey, I want breakfast!\"\n\n\"Who are you calling 'Sleepy'?\" I retorted with a grin, getting a jab from Shari's elbow when she realised what I'd left her.\n\n\"If we're Sleepy and Dopey, what are you two then?\" I grinned, and Yaz smiled adorably as she perched on the end of the bed.\n\n\"After the 'Welcome to America!' present I gave Yawning-Boy last night, he'd bloody better be 'Happy'!\" she giggled, and even Shari grinned at that. I looked mock-disapprovingly at her.\n\n\"You're a bad girl and a very bad influence, no wonder my mum said I shouldn't play with you anymore!\"\n\nYaz stuck out her tongue and bounced some more, jumbling Shari and me even further.\n\n\"Come on, get up you pair of old farts, breakfast awaits, chop-chop!\"\n\nI lunged over and grabbed her, making her squeal.\n\n\"Old farts, eh? Now you're going to pay!\"\n\nYaz is ticklish, especially her sides, so I poked my fingers in her sides, making her squeal and giggle breathlessly as she squirmed.\n\n\"No, no, no, no, Bobby, Bobby, please, no, no, please, Shari, make him stop, no, no, please, Ricky help me...!\"\n\nShari looked at her coolly.\n\n\"Correct me if I'm wrong, but I could have sworn you called us 'old farts', in fact, I'm sure that's what you said, so no, I think I'll let Bobby teach you a lesson. Suffer, little sister!\"\n\nI tortured her for a few more breathless seconds then let her go; she immediately reared back and slapped me on the arm, then squealed as I grabbed her again.\n\n\"No, no, no Bobby, no, don't you dare, I'm sorry, Bobby, I'm sorry, no...!\" she gabbled as I threatened to tickle her again, so I hugged her and let her go. Rick gave her his hand and she slid over to him, slapping him on the arm as well.\n\n\"You could have helped me, you know...!\" she grumbled. Ricky grinned at her expression.\n\n\"Yaz, Yaz, darling, sweet, simple little Yaz, how many times must I tell you; you messed with Big Ugly Bobby; when you mess with the bull, you get the horns!\"\n\nYaz looked at him and snorted.\n\n\"You are so full of shit! Now you owe me a big 'Sorry' after breakfast. Are you up for it...stud?\"\n\nRick coloured as Shari and I both tried without too much success to hide our own snorts of laughter. Eventually we stopped, Rick was now a deep plum-colour, and Yaz was smirking happily. Shari grinned and flapped her hand at the pair of them.\n\n\"Okay you two, out, I want to get a shower and get dressed. We'll meet you in your room in 10 minutes, order whatever you like for all of us, but I only really want a coffee.\"\n\nTen minutes later, we were sitting around the table staring in awe at what an American breakfast looked like.\n\n\"Bobby, what is it? Where do we start?\" whispered Yaz, unable to take her eyes off the stacks of pancakes, tureens of scrambled eggs, mounds of bacon and sausage patties, a stack of toast at least six inches high, a huge jug of orange juice, a pair of coffee carafes in a double coffee maker, and another trolley loaded with various cereals, jugs of milk, pats of butter, and bottles of maple syrup.\n\n\"Yaz, what did you order?\" I asked, and she looked at me in round-eyed wonder.\n\n\"When I called down for breakfast, the girl asked what we wanted, I didn't know whether they had any cereals or anything from England, so I asked her for a typical American breakfast for four; this is what arrived!\"\n\nRick grinned at me and picked a plate up off the warmer, one eyebrow raised as he surveyed the mountain of food.\n\n\"Dash it all, Carruthers, we can't just stand here staring, I'm going in...it's a far, far better thing I do now, I do this for Queen and Country, etcetera, etcetera, tell mother my last words were of her...\"\n\nSo saying, he piled his plate with pancakes, bacon and sausage, poured maple syrup over it all, and dug in. Yaz leaned over and tried a tentative forkful, and her eyes lit up, so she grabbed a plate and started piling food onto it, doing her best to catch up with him. Shari shrugged at me, slid some scrambled eggs onto two slices of hot buttered toast, and poured herself a coffee. I followed suit, although I couldn't resist the sausage patties, which were delicious.\n\nBreakfast took about an hour, as we tried to work our way through that mound of food, but in the end it defeated us.\n\n\"Now that was what I call a breakfast!\" declared Rick, leaning back blissfully in his chair, his plate polished clean, and I had to agree; I was stuffed. I'd just put away enough cholesterol, saturated fats and protein to founder a rugby team, to Shari's frank admiration, although I had a strong feeling I'd be skipping lunch; another meal like that and I'd explode...\n\nOnce we'd recovered sufficiently, we began to think about our plans for the day. As we now appeared to have some free-time on our hands, Yaz wanted to investigate the malls in town; the hotel had given us some shopping guides, and Yaz and Shari were eager to do some serious mall-raiding. Rick and I wanted to explore Albany a little; this was the only other city I'd ever been to in my life (eight hours in Liverpool getting our passports didn't count).\n\nI was pretty sure one mall is much like another, no matter which part of the world it's in, but Albany was bound to be different from Carlisle, and I wanted to actually put my feet on a foreign city's pavements, to walk down a street on the other side of the world.\n\nWe compromised eventually; we'd all go to the places the hotel Concierge recommended, the Colonie Center, and Crossgates, and once the girls found a mall where they could let their urge to shop express itself freely, then Rick and I were free to explore as much of Albany as we could find without getting lost or into trouble. That suited me fine; Shari was in the habit of hauling me into women's clothing stores, and asking my opinion of various frilly underthings, then disappearing to try them on, leaving me stranded in the lingerie section like some weird fetishist, getting strange, disgusted looks from the women pawing through the racks. I wasn't looking forward to that here; in England I just got odd looks from the shop assistants; over here I'd probably get arrested!\n\nWe took a cab to the first mall on our list, The Colonie Center, and once we walked in, Shari looked around happily, taking in the store directory in a kind of trance.\n\n\"Oh yes, at last, I have found my true home, you should go, Bobby darling, I might just be a while!\" she beamed. Yaz was in a similar, blissed-out state, so Rick and I arranged a place and time to meet them, and beat a retreat, clutching the maps of Albany the hotel had provided.\n\nWalking around the town centre was a unique experience; twice I nearly got mown-down by on-coming traffic because I was looking the wrong way when I crossed the street (we drive on the left in England, so traffic is usually coming from the right, and I kept forgetting myself and looking right as I stepped out; only Rick's reflexes saved me several times from getting smeared, until I figured-out that the cross-walks were probably the only way to cross the street safely).\n\nI was amazed at the width of the streets; back home, Carlisle is a medieval city, or what's left of one, and like most English cities, the street plan echoes the village streets and ancient cattle tracks they were 900 years ago; the grid pattern of the streets here fascinated me, it all seemed so logical and well-ordered.\n\nRick and I wandered through shops and a few small pedestrian precincts, taking in the sights and sounds of a major American city (well, bigger than Carlisle, anyway!) noting familiar names like McDonald's and Starbucks, and just soaking up the atmosphere of somewhere so foreign and yet so familiar; I'd seen American cities so often on TV that it all looked very familiar indeed, but to be suddenly surrounded by that accent as well, for real, was almost overwhelming.\n\nWe'd just stepped out of a real, genuine doughnut shop, munching something called 'bear-claws', when in the alley at the side we spotted a young guy, probably my age, being worked over by three guys; he was giving a fair account of himself, not just cowering and letting them beat him, but there was only going to be one outcome. I was just deciding that it was none of our business when suddenly it was.\n\nI heard Rick bark \"Help him!\" as he brushed past me, and as one of the three looked around in surprise, Rick punched him on the side of the head, sending him sprawling.\n\nNow I had no choice; a second one rounded on me, so I belted him as hard as I could, the first time I'd ever hit another human being, and watched in gratified surprise as he folded without a sound. The guy who had been taking the beating grabbed the third one and spun him round, smacking him face first into the wall, hard; I heard the crunch of bone and saw blood spurt from his flattened nose. From the boneless way he slumped forward I could see that he'd lost all interest in the proceedings.\n\n\"Are you okay?\" I heard Rick ask the guy whose party we'd gate-crashed, and he grinned back at us happily, even though he had an abraded cheek and a split lip.\n\n\"Never felt better! I'm sure glad you fellers decided to step in; I thought I had them there for a while, but...!\"\n\nI had to grin at his breezy confidence, as did Rick.\n\n\"What was that about, anyway?\" I asked, looking curiously at the quite well-dressed trio we'd just disposed of, and he grinned.\n\n\"That guy over there's in college with my girl; he wouldn't leave her alone, I kicked his ass, so he and his friends were returning the favor, then you guys jumped in, so thanks, guys, I owe you one!\"\n\nOne of the assailants was stirring and the guy we'd rescued walked over, lifted him by his hair, and jabbed him smartly in the jaw, watching his eyes roll up as he passed out again.\n\n\"Goodnight, John-Boy!\" he grinned, patting him on the cheek, then stood up and stuck his hand out.\n\n\"Hi, my name's Leon, Leon Shoemaker, thanks for jumping in when you did, my girl's gonna be real pleased you were here today!\"\n\nRick and I introduced ourselves, and he cocked his head at our accents.\n\n\"English, hey? So's my boss, that's why I recognized your accents. Can I buy you guys a drink, or maybe a coffee? It's the least I can do to thank you for saving my ass!\"\n\nWe nodded, so Leon dusted himself off, ran his fingers through his dark golden hair and walked with us out of the alley and into a coffee shop. Over a Skinny Latte he told us about himself; he was Lead Mechanic in a specialist auto shop, working on classic and performance British cars. He had a few days vacation coming, was going home for a few days, and had come downtown to buy a gift for his mother, who lived in a nearby town, Oneonta; he'd stopped-off to get a coffee, then he got jumped, and then we happened along.\n\nWe got talking about our respective work; we told him we had just started a property renovation business in the North of England, and he told us about his job here in Albany.\n\n\"I tell you, my boss knows every Brit sports car that was ever made; he's like a genius, any one of us comes up against some dumb, stupid fault that makes no sense, he'll get in there, re-route a cable and tighten a bolt, and she's running sweet as can be; he says it's because low-volume Brit sports cars were built by loonies, sorry, 'eccentrics', so you gotta think like one, and sometimes the only cure is to take out the ashtray, tap it twice on the dash, and put it back in again; he doesn't know why that works, but you know what? It usually does, and it's fucking weird...\"\n\nRick and I laughed out loud at his description of our proud motoring heritage, and I decided I liked him; the girls would like him, too, so I invited him to have dinner with us that night, and to bring his girl, so she could see not everything from Britain was skewed off-centre!\n\nWe chatted for a while, telling each other a little about ourselves, about our girls, about our impressions of Albany so far, and finally parted with a promise to meet again at the hotel at 7 o'clock, and we'd take it from there. With that, Leon headed back to his car, while Rick and I retraced our steps until we found The Colonie Center. On the way there I asked Rick what had prompted him to jump into the fight, and he looked strangely at me.\n\n\"Because you told me to, Bobby, why do you think? You shouted 'Help him!' so I did!\"\n\nI looked at him in puzzlement. I remembered it differently, I remembered Rick shouting 'help him!', I distinctly heard him say it, and I told him just that, but Rick was adamant that it was my idea to jump in, when I knew damned well it wasn't me. I was feeling unsettled about the whole incident until I saw the girls, weighed-down with bags and packages, and looking shopped-out and very pleased with themselves, so I put it out of my mind; now was not the time to tell Shari about getting into a fight, knowing as I did how sensitive she was about violence of any kind.\n\nShari jumped up and hugged me, eager to show me what she'd bought me, shirts, cufflinks, belts, that kind of thing, and a bag from somewhere called \"Victoria's Secret\", which sounded familiar.\n\n\"That's for a special occasion, Bobby, just for you!\" she grinned, possibly the dirtiest grin I'd ever seen, and now the combination of that grin and her pressed against me was making all sorts of nice things happen lower down.\n\n\"Down, boy, we have all evening, pace yourself!\" she grinned, surreptitiously tweaking the end of my cock, making me gasp and grin. Yaz had a similar bag, so I assumed Rick had just got the same message from her, to judge by the goofy grin and slightly glazed expression on his face. I hailed a cab to take us back to the hotel, and while we were loading the mountain of bags and boxes into the cab, we told her about our little adventure, Shari clucking when I told her I'd hit someone, but telling Rick and me she was glad we'd helped someone who'd needed a hand. Both girls seemed eager to meet our new friend at dinner that night.\n\nOnce back at the hotel, Shari made dinner reservations at a Malaysian restaurant recommended by the hotel, Yono's on Chapel Street, then closed and locked the interconnecting door between the two suites, and grinned at me.\n\n\"We have reservations for 7.30, that's over two hours away, we're in America, Americans are big on contact sports, so do you want to tackle me a little, baby?\"\n\nI needed no further encouragement, not after that little display in the Colonie Center, almost breaking the world record for getting out of my clothes. Shari smiled mischievously and dropped her jacket on the ground behind her and kicked off her shoes as she advanced on me.\n\n\"I think you need to help me, Bobby, I can't remember how to get this thing off!\" she pouted, pointing at her blouse, so I obliged, kissing her neck every time I popped a button, until it was completely undone, her two small, perfect little breasts cradled in her lacy white bra. She shrugged the blouse off her shoulders, giving me something more to kiss as I popped the fastening on her jeans and hooked my fingers in the waistband, pushing them down.\n\n\"Thank you baby!\" she breathed, that grin on her face again. \"I couldn't figure out how to get those off either; you're so multi-talented, Bobby, I think I'll keep you!\"\n\nThat earned her a pinch on her tight little bottom, making her squeal and jump; lucky thing I was there to catch her!\n\nNow she was down to her bra and panties, and as she unsnapped her bra and slid her panties down I got to see once again for myself just what a beautiful girl she was; long, lithe, endless legs, slim, shapely hips and buttocks flaring out from her tiny waist, high, proud little breasts with delicious dark coral nipples, the whole package beautifully set-off by her faintly golden-tinged ivory skin, pale, creamy and exotic. Add to that the face of an angel, and you could see why I stopped dead to just drink her all in, enthralled by her beauty, and once again wondering how a girl like that could even have time for me, let alone love me the way she did.\n\nShari snapped her fingers, jolting me out of my reverie.\n\n\"Up here, Bobby, my face is up here! What are you staring at baby?\" she murmured, and I grinned at her.\n\n\"I was just thinking you're not too shabby yourself; I could see myself hanging on to you a while longer!\"\n\nShe smiled as she closed the distance between us and poked me lightly in the chest.\n\n\"There are so many ways you are going to pay for that, mister, and don't think I've forgotten about last night either!\"\n\nWith that, she pushed me backwards, and as I fell backwards onto the bed, she landed on top of me.\n\n\"Gotcha, now do things to me, baby, you owe me!\" she growled, nipping my chin and kissing my throat as her hands squeezed her favourite part of me. She didn't need to worry about that; from the second I'd pulled her jeans down I'd been solidly erect, my cock almost supernaturally hard as I contemplated my girl, and she knew it. There was one thing I wanted to do before all else; I wanted to taste her again, I wanted to kiss and lap her pussy and lick up her sweet juices and immerse myself in her tangy sweetness. Shari saw it in my eyes, and grinned, biting her lip as she slid herself up my torso until her knees were either side of my head, and her beautifully bare little pussy-slit was right above my mouth. As she leaned forward to rest her hands on the wall above the bed-head, I clamped hold of her taut little bum-cheeks and pulled her against my mouth.",
        "She groaned softly as I flattened my tongue and licked her from her tight, sweet little anus to the hood of her stiff clitoris, shuddering as I did it again, and again, while I revelled in the taste and rich, spicy scent of her, enjoying the feeling as her labia swelled warmly against my lips and tongue. She began to rock above me, pushing her pussy more and more insistently against my mouth as I pulled her ever tighter against me, my tongue parting her lips and exploring the warmth behind them, gasping as I penetrated her with my tongue, pushing her labia apart to invade her most private inner recesses.\n\n\"Yess, Bobby, oh yesss, like that, oh yess!\" she murmured as she ground her pussy against my lips and tongue while my tongue darted and rubbed inside her, then began licking her hard little clitoris, her tangy sweet juices pouring into my mouth as her arousal began to peak. There was something I wanted to try, and as she ground and gasped and trembled above me, I held on to her silky thighs to pull her tight against my mouth as I pointed my tongue, and pushed the tip into her tight little rosebud as hard as I could.\n\nShari screamed as she came, a flood of her sweet perfumed juices pouring over my mouth and chin as she whined and shuddered above me. I continued to rim her, enjoying the feeling of her bum cheeks flexing and bobbing in my hands as she rode out her orgasm, the taste of her as she peaked changing from tangy sweet to an earthier, more arousing tang.\n\nI held her above me as long as I could, enjoying the feel of her pussy trembling and fluttering against my lips as her orgasm rocketed around her system, until eventually she sighed and slumped down, leaning on the wall as she rested her damp forehead against the cool paintwork. I helped her climb off me and slide down next to me, where she took my chin and gently pulled my face around so she could look into my eyes.\n\n\"Bobby, that was...incredible, where did that come from, I never showed you that!\" she murmured, smiling gently.\n\nI grinned at her, enjoying the look and feel of her, she was my girl and I satisfied her, fucking A! She quirked an eyebrow at me, so I answered her question.\n\n\"It seemed like a good idea, I thought I'd try it and see what happens, why, did you like it?\"\n\nShe grinned and thumped me lightly on the chest. \"It was wonderful baby, and you know it! Next time you have an idea like that, go for it! Now it's your turn!\"\n\nI don't really feel too stimulated by oral sex, it's nice, and I do like it, but having my cock sucked didn't really do it for me most of the time. I much preferred to make love to my girl, not lie there and try and think sexy thoughts; when it comes to oral sex, I'd rather give than receive, so when she made as if to go down on me, I pulled her back up to me and clamped my lips on hers as I squeezed her lovely squeezable bum.\n\nShari smiled against my lips and reached down to give me a quick squeeze, then sighed as I positioned myself and slowly slid into her tight wetness. Shari wrapped her arms about my neck and pulled me closer, kissing me more seriously as I began to pump my cock into her, enjoying immensely the feel of her pushing back against me as I pushed into her. It didn't take long for me to get to that place. Shari was almost there again, her breathing rapid and her face flushed as she jammed herself against me in counterpoint to my thrusts into her.\n\nI felt my balls tighten, and that familiar tingle in the tops of my thighs, the pit of my belly, and behind the root of my cock. Shari too was on her last strokes, her movements against me almost frenzied as we moved together, until:\n\n\"Oh God, yesss, oh Bobby, yess, oh yess!\" she moaned, her pussy clamping down around me as she came, the sensation finally pushing me over the edge, and I swear I felt my cock swell as long, thrilling, satisfying pulses of spunk shot out of me and deep into my beautiful sister, the girl I loved! On and on we rolled, the convulsive squeezing of her pussy milking more and more out of me, and the feel of me shooting deep into her feeding her own orgasm.\n\nAt last we were done. I slumped down beside her, breathless, my heart hammering with the exertion, Shari in no better state. We lay quiet and motionless as we slowly calmed down, breathing and heart-rates slowly returning to normal, the fatigue of our recent exertions slowly ebbing away. Shari finally turned to me and kissed me gently, lovingly, on the lips.\n\n\"That was lovely, Bobby, one day, make babies with me like that, okay?\"\n\nI nodded, grinning foolishly at the thought of having a baby with this beautiful girl, sister or not!\n\nShari hadn't finished, though. I could see she had something on her mind.\n\n\"Bobby, what you did today, helping that boy, that Leon person, that was very brave, and very generous of you, and I'm proud of you. Your heart is definitely in the right place. You and Ricky did the right thing, you helped someone who needed you, but in future just be careful, please, both of you, and try to not hurt anyone, you know how I feel about violence, I saw so much of it at home...\"\n\nI saw the bright tears glimmering in the corners of her eyes, and I realised she was thinking of her mother, and what our father used to do to her, and I cursed myself for telling her and bringing those memories back again. I kissed her tears away and held her against me until she turned away and spooned up against me, speaking again, but so softly now I could barely hear her.\n\n\"Bobby, I'm a realist, I know there might be times when you have no choice, and you'll have to fight; just promise me you won't go starting anything, okay? Please don't be your father...\"\n\nThat jolted me awake; she was frightened I'd become the kind of man my father was, something I would avoid at all costs. It had felt undeniably good to drop that bloke, and that thought scared me; it was the kind of thought my father would have, and I'd sworn never to be the man he was.\n\nShuddering at how close I'd come to being like my father, I promised myself I'd never again give her cause to have this conversation with me. As I was starting to drift away, still pondering her words, Shari twisted around and kissed me lightly.\n\n\"Bobby, I forgot to ask, did this Leon say anything about his girlfriend? What's she like, and what's her name?\"\n\nI had to think for a second, remembering our talk in the coffee-shop.\n\n\"He said she's a medical student, and that we'd like her. Her name is...\" I had to rack my brains for a second or two. \"Oh yes, her name's Judy; Judy Nixon, apparently her dad's a doctor too...\""
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brothers",
        "sisters",
        "redhead",
        "albany",
        "love",
        "leon"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/rag-doll-ch-06-pt-01"
}