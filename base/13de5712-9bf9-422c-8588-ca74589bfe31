{
    "title": "Alien Impulses",
    "pages": [
        "** This is my second attempt to complete this fast-growing, rather out-of-control novella -- I might get around to finishing it one day, but thought I would get it out there, so you can see what you think. It is a hybrid sex novel / sci-fi novel / odd mix of things. Comments are very welcome.**\n\n*\n\nI took a breather about 100m short of the summit and surveyed the scene. This was probably my favourite part of the country, a green valley with tiny specks below me, which were farms and cars on the road, flanked by imposing limestone cliffs like the one I was trying to ascend. I gave quiet thanks that I'd quit smoking, checked my altimeter and map once more, and headed off to the top.\n\nTwenty minutes later, I was there. It must be one of the best feelings in the world -- I was the highest object in the valley. I would have lit a joint to celebrate, but I'd probably have wandered off into the wrong valley and gotten lost. I just sat down and looked at my county. The hills seemed fur-lined and I could see tiny white flecks, which must have been sheep. I relaxed into a euphoric reverie. I love having time and space on my own, reflecting on events, or just daydreaming. I began to imagine how these valleys were formed, how millions of years ago this was a sea which receded, leaving rivers to cut powerfully through the rock and form these splendid features. Ah, weekends. \n\nA dull, distant rumble reached my ear from the left. Strange, we were miles from any airport. Maybe the RAF? It got louder and I became irritated -- don't you guys take Sundays off, for Christ's sake?! Insistently, the roar approached and I was sure the planes were going to fly straight over my head, ruining my peace. Finally, I turned around, planning to give the marauding jets the finger, but I couldn't see anything. Must be very low in the other valley -- wasn't that against the rules? I might drop them an email and complain. People should say what they think more often.\n\nDamn it, they're still getting closer! But still they were elusive. Could be helicopters, I guess, those new ones we bought from the Americans, but I couldn't hear the distinctive rotor noises. Where the hell were they? Ten more seconds passed and the roar became almost deafening. It seemed to be right over my head. Still, no sign of aircraft. It couldn't be an earthquake, right? I glanced nervously at the ground, half expecting it to open up beneath my feet, but that didn't happen either... no jets, nothing in the sky ... I was whirling around by this time, trying to identify the source of the noise and getting more and more scared. I could swear it was right over my head, like standing right behind a plane on takeoff. There was no wind, no heat, I couldn't feel anything on my skin, this was fucking weird...\n\n*******************\n\nI was incredibly comfortable after perhaps the best sleep of my life. Strange that I couldn't remember dreaming anything, but I was obviously well rested and felt great. Everything was fine, except this was definitely not my bed. As I opened my eyes and started to look around I nearly had a heart attack. The bed was floating in a limitless void. There were no points of reference, no lights, no objects, just a billion miles of blackness in every direction. I put my head over the bed and looked down but was nearly sick with vertigo. Curling into a terrified, foetal ball I pulled the covers over my head and wished that I could wake up from whatever fucked-up nightmare this was. \n\nThen some lights came on. Breathless with relief, I threw back the covers and I was in a modern hotel room, quite large, with an ornate dressing table, a widescreen TV and what was probably a bathroom through a door to my left. There were large windows to the right but the curtains were drawn. I got up and felt thick, warm carpet between my toes. This was getting cool. What kind of dream was this? I thought I was on a hill in the Dales, but now I'm in some hotel. \n\nI'd lost my clothes somewhere along the line. What the fuck was going on? Had I been drugged or robbed? I felt OK, actually rather good. I walked to the bathroom and looked in the mirror. It was still me and I still needed a shave, testimony to a lazy Sunday morning spent reading the paper before setting out in the car to the National Park. Well, things can't be that bad. Now, let's try to figure out what's going on while I clean up.\n\nThe phone rang as I was finishing drying off after a good, hot shower. Feeling freshly shaven and alert, I confidently answered. \"Hello?\" The voice was pleasant, quite charming, a woman aged about 30, I guessed. Anything else was difficult to tell. \"Good morning, Sir. I hope you slept well.\" \n\nSo, we were going to carry on as though there was nothing amiss, were we? Fine. \n\n\"Yes, thank you, very well indeed. I wonder if I might ask how it is that I'm here. And where I am?\" She almost interrupted me, but not quite. Neat trick. \n\n\"Please don't be alarmed. A member of our team will explain everything very shortly. You are in no danger. Please join us for breakfast in the lobby whenever you are ready.\" The line clicked off.\n\nI put the phone down and decided to finish my reconnaissance before going downstairs. I know my way around hotels, having spent months touring, so I quickly checked the cupboards and drawers, which were empty. Then I opened the curtains.\n\nI was in the biggest city I had ever seen and it went on for miles. Tens of thousands of skyscrapers teamed along broad avenues, interspersed with large, green parks. I was clearly on a very high floor of one of the tallest buildings. It was very quiet and the air was brilliantly blue. This was nowhere I'd been before. Tokyo, maybe? No, it looked kind of Western. There were no neon signs, and I couldn't make out traffic. There was nothing in the room to indicate where we were. Time to figure a few things out.\n\nThankfully, the elevator and corridors were all standard hotel stuff. I quickly found the lobby, which was deserted. If this is a hotel, where the hell is everyone? I wanted a cigarette. It was far too quiet. After a minute spent stressfully glancing around the lobby, the lift doors opened and three women got out. \"Thank God! Hi, there. Sorry to disturb you, but ... \"\n\nOne of the women, a very tall, slender type with long, black hair, motioned calmingly. \"Please sit down. There is no reason to worry. Everything is going to be fine. We will answer all of your questions very soon. First, you must be hungry, and I know you'd like one of these\", she purred, offering me a cigarette. \n\nI paused for a second and said, \"Thanks, no. I've quit\". \n\nShe smiled and put the smoke back in her pocket, my eyes following it lustfully. \"Shall we?\" she said, motioning to the dining room.\n\nI followed them to a table near the windows. Sunlight managed to stream through them, despite the cluster of buildings surrounding us, which I knew to be almost as tall as this hotel. A waiter in traditional uniform brought bread, cheese, coffee, juice and cold meats. I discovered that I was starving and started buttering up a roll before I remembered that I may have been abducted by total strangers and was now in some totally foreign city against my will. \n\n\"You must have a lot of questions. Please be at ease with us. I can only assure you that, despite how this may seem, you will come to absolutely no harm. In fact, you are very important to us and will be treated in the best possible fashion. Please, help yourself to anything you'd like.\"\n\nI polished off the roll, drank some coffee, which was an excellent Brazilian blend, and sat back. \"You're right. I'm being well looked after. This place must cost the Earth. But I'm very confused and I'd love to know who you are, where we are now, and why I'm here.\"\n\nThe dark-haired woman placed her coffee cup down and began. \"We are a race unknown to your planet. This is the first contact between yourselves and our people, and we are delighted to have finally made contact with you. As for where you are, you are our guest on our home world. It has taken roughly forty years for you to travel here, although for you this has seemed almost no time at all. This building is one of a suite of structures dedicated to the furthering of our understanding of neighbouring systems and their inhabitants. And, to answer your third question, you have been chosen, I admit against your will, to take part in a series of experiments designed to increase our knowledge of you, your planet and the species which inhabit it. I must apologise for having effectively abducted you during an otherwise pleasant Sunday afternoon hike, but there was simply no other way. Please accept our apologies. Would you like more coffee?\"\n\nJust like that. Very matter-of-fact. \"Ma'am, I was unaware until today that aliens even existed -- I mean, really existed -- and you're telling me that I'm on your home planet, drinking coffee, and I'm here to enhance your understanding of Earth? Sorry, love. Pull the other one, its got bells on\".\n\nThe three girls chuckled. \"We were warned to expect a degree of scepticism. That is quite understandable. In time you will come to both believe and understand where you are, and why. For the moment, we realise that you need plenty of time to digest this dramatic change in your environment. We are very used to dealing with situations like this and you will find us co-operative in every possible respect. Are you sure you wouldn't like a cigarette? We have sensed from the beginning that you have a particular desire for this substance.\"\n\nI eyed the proffered smoke while I finished my croissant. \"No, thank you very much. One of the first things you need to know about me is that I've stopped smoking, so please don't offer me any more of those.\"\n\nThe three women seemed fascinated by this detail and chattered briefly in some foreign language. This was irritating. \"Ladies, you've answered my questions, but I've a lot more... why me? There are over six billion people on Earth and you chose me. Why?\"\n\nThe woman looked down briefly before answering. \"To be honest, because you are rather normal. Your physical characteristics are in line with the majority of your race. Although you do not represent the ethnic majority, you seemed to be an ideal candidate on a number of levels. Bear in mind that you were chosen from a huge number of candidates on a basis close to randomness -- we simply don't yet know what we're looking for. We were hoping you'd be able to help us decide how best to choose future guests, perhaps those representative of certain character or ethnic traits that might be of interest to us. Think of it, for the moment, as blind luck\".\n\nI thought about this. \"But if you need to study my race so much, how come you already speak my language? That's not the majority language, either.\" \n\nShe nodded, \"no, it is not. But it is the most complex of the languages we have sampled -- over a hundred -- and it contains the greatest number of expressive nuances. We are aware that your own vocabulary is rather large. We felt that this might make communications easier. How would it be, for example, to attempt to communicate grand ideas such as those we will put to you, without the benefit of a comprehensive grasp of language? It would only complicate matters. In this respect, too, you are highly suitable.\"\n\nI stared at her. The thought of my being a suitable subject for study by an alien race was just mind-blowing. \"But I'm a nobody!\" I blurted gracelessly, I'm not a professor or anything...\" \n\nShe held up her hand with that lovely, calming gesture. \"You are articulate, educated, creative and psychologically very fit. You are ideal for our purposes.\" And that seemed to be the end of that discussion.\n\nI looked out of the window at the entrance to another enormous building. \"You are curious about our city\", she said simply. I was equally curious about why there was only one woman speaking to me. I looked at one of the others, a petite blonde. \"You understand my language also?\" \n\nShe nodded, \"yes, I am fluent. But my purpose here is communication on a different level. I and my learned colleague\", she said, motioning to the redheaded girl next to me, \"are gifted in the sciences or non-verbal communication. I have particular interest in your use of gesture, and my colleague studies the energy waves you send out. These are all forms of communication, although many among your race seem not to notice them.\" I stared at her rather blankly. \"Perhaps you had not noticed that my colleague has been sending out amorous alpha-waves since you arrived. We have all been sending positive vibrations. Have you sensed this?\"\n\nI was about to answer when the dark-haired girl said, \"perhaps it is best to discuss these matters under proper test conditions. Have you eaten sufficiently?\" I nodded, still a bit stunned. Amorous alpha waves? They sounded cool. \"Then shall we ascend to the offices, where we can continue?\"\n\nI rose with the trio and followed them back to the elevator, eyeing the redhead with interest. She was gorgeous, sure. And sexy. And, I thought with a certain sense of alarm, an alien from god knows where. Sexy aliens? This was going to be a wild ride. \n\nI found myself starting to relax as we zoomed up in the elevator. The three women, or whatever they were, offered charming, beguiling company. Perhaps that was the point... maybe they're only here to put me off my guard so that when this door slides open, I can be easily blasted into millions of fragments by some evil galactic dictator... \n\nMy paranoia was eased by the thought of this redhead and her alpha waves. The lift seemed to be taking a while. \"If you don't mind me asking, what exactly are alpha waves?\" \n\nThe redhead girl smiled charmingly. \"They are a means of communication. Your whole body, and mine, are conduits for electrical activity that begins in the brain. I am sending commands to my nervous system that creates a generous energy field, vibrating at a level that I choose. You do the same thing. I can sense that you find all three of us highly attractive and stimulating. Perhaps you desire us sexually. This is quite normal and was part of the reaction we hoped to provoke from you. In turn, you can sense, I hope, that I also find you attractive. I cannot speak for my colleagues, as it is bad manners among our race to interpret the energy waves of those with whom you have professional relationships. Too many complications and distractions could result\".\n\nLike flirting in church, I thought. This was terrific! Now that I thought about it, perhaps I could sense something from her. A very slight but perceptible tingle in my skin, very hard to describe, but real nevertheless. It was nice. \"I've got to ask... forgive me if this is rude... but are you, actually ... well, women?\"\n\nThe three burst into a fit of giggles and just then the elevator door opened into a massive hallway, clearly some kind of transit or reception area. Thousands of individuals were on their way somewhere, all in different directions. Huge, multi-coloured screens were displaying hoards of information that streamed from right to left at incredible speeds. It was quite noisy but in the cavernous space, there was no din, only a discreet, ordered, continuous exodus. \n\n\"I'm afraid there are one or two administrative matters to attend to. You must register as a visitor here, if you don't mind. We have had a number of difficulties with, shall we say, guests who did not quite appreciate our hospitality as you do, and these details have proven rather ugly in their execution\". I flinched at the word. \n\n\"Of course. Anything you need\".\n\nPerhaps they really were getting under my skin. If this was some ruse to keep me malleable and co-operative, it was a work of genius. I was truly putty in their hands. But greater things were at play -- I was walking in a new universe and I was having a fantastic time. Everything I saw was new. As we approached the giant, semicircular reception desk, I passed a hundred different forms of life. Some were mere wisps of gas floating serenely by, communicating to their neighbouring clouds with thin, bright blue strands of thought. There were other humanoids, but nothing like me -- some were eight meters tall, others dwarf-like and stocky. The variety of clothing was profound. The tall humanoids wore a one-piece body-glove that resonated sonorously as they walked. The dwarves were in quite conventional jackets and trousers but wore powered shoes that sparked with each footfall. This was like a great sci-fi movie and an LSD experience rolled into one. \n\nWe reached the desk and another human-like woman appeared and spoke with my guides. They nodded towards me and the clerk, a pretty black girl with purple hair, eyed me with interest and then waved me forward. \"Welcome to our planet. I trust your journey was comfortable.\" \n\nI smiled, \"yes, thanks. You might want to leave out the 'bed floating above the bottomless void' part for future travellers, but otherwise it was splendid\". All four women made an immediate note on a hand-held machine, keys tapping almost in unison. \n\n\"You have been asked to take part in the afternoon experimentation session in Laboratory Four. This is a top-secret area and the relevant clearances have already been arranged. As you are a special guest, many of the immigration formalities have been waived, and your file notes that you do not carry any dangerous diseases.\" \n\nI shot her a look. \"That's a relief! I was kind of wondering if it might be the other way around...\" \n\nAll three guides shook their heads. \"You can contract nothing at all from us. It has been carefully prepared this way\". \n\nI kept smiling. I've found it to be an excellent panacea at borders, and this, for all its incredible weirdness, was still a border of sorts. \"So, are there any forms to fill in?\" \n\nThe clerk glanced, slightly nervously, at my guides. \"No\", said the redhead. \"We simply need some biological samples. Your body is constructed in the Ribose-Nucleic format, and we will need to collect evidence of this, in different forms. I will assist you, if necessary\". \n\nI thought for a minute and then figured it out. \"A DNA sample?\" All four smiled and nodded. \"Sure. Will it hurt?\" All four shook their heads. \"Would you follow me? It won't take long.\"\n\nThe redhead led me to a quieter part of the concourse, nodded to a uniformed, humanoid guard and opened a door into a small lounge, with two sofas, a table and a machine of some kind in the corner. \"This is a replication machine. I believe one of the entertainment formats on earth discussed its use.\" \n\nNo way. She couldn't be. \"Star Trek?\" I offered. \n\n\"Yes, that was its name. There were so many we had to watch!\" \n\nI stared dumbly at her \"You've seen it?\" She laughed, \"oh, of course. It was required of us before we were admitted to the program staff. 'A thorough knowledge of human culture will be required'\" she recited. \"Now, are you ready to provide some samples?\" She gestured for me to sit and joined me on the sofa, pulling out her hand-held computer. Or whatever it was.\n\n\"I'm going to require four samples. Let's start with the easiest one.\" She pressed two buttons on the machine and a small bag appeared in the tray, like a coffee from a dispenser. Only it just appeared. \"Cool\", I offered. She smiled. I was going to have to cut down on the 'dumb tourist being amazed by everything' routine. They were bound to get bored of it shortly. \n\n\"This one is a skin cell sample. The rules say I am supposed to get a sample from a place that has not had too much exposure to weather, so that there is a great chance of producing clear results in the lab. Would you lower your trousers, please?\" \n\nI stared at her. \"You want me to drop my trousers?\" \n\nShe smiled calmingly. \"There is no reason to be nervous. I am very professional. I simply require some samples, and then we can continue to the lab.\" I sighed resignedly -- this was not how I imagined things shaping up -- stood, pulled down my trousers and sat. \"Would you like to lie back? This won't take long.\" I did as she asked. Her hands went straight to be crotch, where she reached into my pants, brought out my penis and stroked the tip with a cotton swab. The sensation was cool, almost cold, but it didn't hurt. \"Thank you. I will also require a sample of saliva. Please deposit some in here\", she said, passing me a plastic cup, just like at home. I dropped some saliva into it and she closed it tight. \"Great. Next, I need a sample of your urine. Please do that into here\", she said, passing me something that looked like a short condom with an elongated tip. \"I do not need very much\". She was just sitting next to me, asking me to piss right in front of her. \"I will assist you. Please lie back again\", she requested, with a hand on my chest, pushing gently, for reinforcement. I could feel her take my penis in her hand again, and then the rubbery condom sliding over my tip. \"It is ready. Please deposit some urine when you are ready.\" She was still holding my cock. I managed to squeeze out a small amount, which was apparently satisfactory. \"Thank you\", she purred, removing the condom and producing a cool, damp cloth which she used to clean my penis. This was starting to feel good. I didn't know if she was trying to turn me on, but if she was, it was working.",
        "\"Now for the final sample. I understand that humans produce procreative juices. I would like you to produce some for me. I understand that this production is normally pleasurable. I hope that you will enjoy it\". Formal, scientific, confident. This was semen we were talking about. \n\n\"You want me to come?\" She blinked for a second and remembered the idiom. \n\n\"Yes. I would like you to come.\" I stared at her. \n\n\"Where?\" She stood, unzipped her trousers and pulled them down with her knickers. \n\n\"In my vagina. That is the normal method, is it not? The sample can easily be extracted from inside me after we have finished.\" She removed her trousers and cute white, panties with a firm tug, then lay back on the sofa. \"Please insert your penis when you're ready. My vagina should be adequately lubricated. I would appreciate a large sample, as some will inevitably be lost inside my body. Please produce as much semen as you can.\" She lay there, looking at me, legs spread. Her pussy was extremely beautiful. Her outer lips were framed by soft, downy hairs. I could see the darkness of her entrance and gorgeous inner labia. \n\nFor a few seconds, I was too stunned to move. Then I approached her and bent forward over her. She was smiling invitingly, but there was simplicity in her expression, as if she had little idea what she was doing but wasn't scared of it. \n\n\"Do you mind if I touch you a little first?\" \n\nShe frowned briefly, \"I'm not sure. I've read all about this, but I'm afraid I'm not practically experienced. Why don't you do what you normally do?\" I grinned broadly, knelt in front of her and admired the view. \n\n\"Well, first you should undress completely so I can see all of you. I'm sure you're amazingly beautiful under that jacket.\" I opened it and she pulled it off, then her t-shirt, exposing her flat belly. \n\n\"And this?\" she asked, unsnapping her bra. \n\n\"Yes, please.\" She was revealed. \"That's a lot better\". I quickly stripped off and lay gently on her. She was warm and I could feel a moist heat emanating from between her legs. \"So, you've never done this before?\"\n\nShe was still cheerful. Not your regular virgin, I thought with a wry smile. \"I have only read about it. I know that you place your penis in my vagina, move back and forth enjoyably, and then at the peak of the enjoyment you ejaculate your procreative juice into me. The intention would be to make me pregnant. I assure you that is impossible, although that should not affect your performance.\"\n\nI almost burst out laughing. \"Believe me, honey, that will not affect my performance!\" She smiled back at me. How strange I must appear to her. And how amazing she appeared to me. I kissed her softly on the lips. At least she knew how to respond -- her tongue entered my mouth with eagerness, soft and almost dainty, caressing my own tongue and lips. My erection jolted to unbelievable hardness. One hand slid up to cup her left breast while the other stroked her neck and collar bone, down to her right nipple, where my fingertips circled. \n\nShe moaned gently. Ah! She was programmed for enjoyment!! My mouth followed, breathing hotly on her nipple and then enveloping it between my lips. She wriggled beneath me as my tongue swirled over her nipple and moaned again as I sucked it deeply. I felt her hand wandering to my thighs, and then my penis was being gently caressed by soft, careful fingers. She was very gently tugging me forwards, towards her pussy. \"I want it there. Please... I don't know why, but if you do, I'll love it\".\n\nI obliged. Her hand left me as I edged closer to her pussy. Using my own hardness to enter her, I lodged my cock at her entrance, felt the slickness of her labia part, and then the warmth and wetness of her pussy surround me as I entered. I nearly came immediately. She was just perfect. Gazing down at her as I started deep, slow strokes, I smiled at the sight of her biting her lower lip, brow furrowed, face flushed, breathing quickening. As I thrust into her I made sure my body ground against her clit and felt the little spasms of pleasure inside her in response. I held her hands above her head, kissed her deeply, and fucked her passionately. It wouldn't be long now, but I wanted to feel... there it was, starting... she was gasping now, short and irregular, little noises of delight... her pussy was tensing around me... squeezing my glans, spurring me on... beneath us, her anus tensed first, then her whole body, and I could feel the spasms while I kissed her neck and nibbled her shoulder... she rose up and came incredibly hard on my cock, shuddering in an awesome climax, pushing me to my own brink... I could wait... a few seconds... there... take... my... time... Stroke by stroke I slowed... easing back once more and then inside her... My balls emptied into her cunt with eight large, long bursts of intensely hot sperm, bathing her cervix, surrounding my jolting, spasming penis... dribbling out and over the hairs of my balls and down to her anus...\n\nWe breathed together. She was panting, in shock, clearly unprepared for this sexual awakening. \"I had no idea... I only thought...\" and then something I couldn't understand. \n\n\"What was that?\" I asked as I pulled gently out of her. My cock was covered in semen and I could see its whiteness in her entrance.\n\n\"It has no translation. It expresses the most positive sensations my race can experience. We normally use it during the ceremony of... ah, perhaps I should tell you later. But that was amazing. I'm not surprised now that you found us attractive, when you can engage in such a wonderful activity with us.\"\n\nHer tone forced giggles from me. \"Yes, it is a wonderful activity. One we can enjoy any time we like. And not always just for the sake of science. Just for fun\".\n\nShe beamed at me. \"Quickly, the samples! We mustn't let too much escape\". I chuckled as she grabbed her equipment and began scooping globules of sperm into a plastic container. \"This is interesting. Very unlike anything I've seen before. There is a very large amount -- thank you for co-operating.\" \n\nI couldn't help it. Laughing so much it hurt, I managed, \"you're very welcome\". She looked at me quizzically as she finished her sampling. \"Any time, truly\". \n\n\"I am unsure as to if we will need further samples, but that need not matter. I enjoyed that. And I know you did. How can I initiate a further encounter?\" She pulled on her knickers, face still reddened from our encounter.\n\n\"There's no set way, I guess. Just flirt with me. Or just whisper, 'I want to fuck you'. That normally gets the message across\". We both finished dressing and she packed away the various samples, slinging the bag over her shoulder. \n\n\"I should get this to the lab. You were an excellent subject. Thank you for fucking me.\" She strode out, leaving the door open.\n\nBefore I could even ask her name, she was gone and was replaced by a rather ugly, very large guardian armed with some kind of tall, silver spear. Both it and its owner looked particularly menacing. The figure was humanoid but nearly eight feet tall and possessed of reptilian skin which seemed to change colour depending on from which angle it was viewed. He didn't speak, which was probably just as well.\n\nI was rescued after a mercifully brief time span by one of the three girls. She shot a look into the room and said, \"Did Catherine finish the experiment successfully?\" So, she had a name. \n\n\"Yes, I think it was successful. She went off to deal with the... er... samples.\" I couldn't help grinning. \"I only just now learned her name -- what do they call you?\" \n\nShe smiled and extended her hand, just like back home. \"I am Annabelle and the communications researcher is Beatrice. You might notice that our names are based on your alphabet -- A, B and C -- we thought this might help you to remember them, and make you more comfortable with us.\"\n\nClever stuff, I thought. \"So, Annabelle, what's next?\"\n\nShe had led me back into the main hall and we were once again surrounded by a startling, circulating array of beings who were intently walking, flying, gliding, slithering and transmogrifying in a million directions. \"Where are all these... people going?\" \n\nAnnabelle noted my discomfort with the term and chuckled. \"Not like a station on your planet, is it? They are from every part of the galaxy. We have good relations with virtually every inhabited planet within a thousand light years, and some from even further than that, provided their technology is advanced enough to communicate with us over such vast distances. We act as a trading opportunity, a place to rest and refuel, to meet and take leisure. Our planet, I am proud to say, is the most popular destination for inter-stellar travel in this part of the Galaxy.\"\n\nShe was right to be proud. This was fucking amazing. With each passing moment I noticed more that was worthy of a slack-jawed gape -- huge, thin beanstalk-like creatures riding an enormous, glittering wheel which hummed melodiously at it passed; ethereal, almost ghostly beings who communicated with electric-blue sparks arcing through the air, some of whom I'd noticed on the way in; and a creature which was just now presenting its credentials at the desk but appeared no more than a cloud of reddish-brown gas carrying a conventional suitcase. This was fantastic.\n\nHaving allowed me ample time to peruse the wonders of the transit area, Annabelle and Beatrice led me out into the city through a cavernous, well-lit, rectangular space which I guessed was the main exit. The crowding was intense but everyone managed to avoid colliding, even if Beatrice had to haul me bodily from the path of a thick-wheeled motorbike which zoomed through the crowd with an electric roar. Its occupant raised two fists at me but kept the other two on the handlebars.\n\nIt was warm but not hot, a lot like late spring at home. Beyond the transit area and its immediate environs, most of the figures looked fairly human. I wondered what these girls were actually like... was this fa\u00e7ade just for my benefit? \n\n\"Ladies, I have a question\", I offered as we climbed into a yellow vehicle with broad gull-wing doors. \"If I weren't here, what would you look like and what kind of language would you speak?\"\n\nBeatrice giggled and exchanged a glance with Annabelle. \"We were sure you'd ask shortly, having seen such an array of life forms in the transit area. In fact, we are genuinely humanoid. What you see is what you get.\" \n\nI stared at her. \"But... in the movies, they always have the ability to alter themselves, to present a more acceptable front for the humans...\" They were shaking their heads. \n\n\"No, this is the real thing. I hope you find us beautiful.\"\n\n\"God, yeah...\" I blurted, artlessly. They collapsed into giggles, leaning girlishly on each other's shoulders. \n\nCatherine arrived, looking amazingly pretty and having changed into a very tight, sexy t-shirt and jeans. She looked stunning and particularly refreshed. The other girls watched her enter and continued their giggles. \"Welcome back, Catherine. Were the experimental results available?\" \n\nShe nodded and smirked back at the girls, who had obviously heard, or guessed, about our encounter in the lab room. \"The results were very successful. We had a large sample of semen, which made everything easier. And we appear to have located a limitless supply...\" That did it. Everyone cracked up. I just sat there grinning, not sure whether to be embarrassed or proud of myself. \n\nThe city zipped past our windows, which were large and clear, a blur of very tall buildings, green and open spaces, other vehicles and squares with fountains and statues. It was a beautiful place. \n\n\"Is your city like one of mine? I mean... you have all the same things that we do, right? Hotels, restaurants, businesses, shops, all that?\"\n\nCatherine, who was in the least giggly state, answered. \"Yes, but we lack a number of things you would take for granted. There are no police and we have no armed forces. Our only weaponry is out in space, patrolling against any trouble. Medical attention is needed only in the event of an accident, as we are not susceptible to any diseases. We are inoculated as children and remain healthy for our whole lives, which are very long by your standards.\" \n\nI was intensely curious. They had solved so many problems! \"How long are we talking?\" Catherine turned to her friends and asked how old the oldest person on the planet would be. There was a moment's conferring before Beatrice answered.\n\n\"Three thousands four hundred and ninety Earth years. But that person is not as active as we are.\" \n\n\"I'm not bloody surprised! If I make it to a hundred I'll be highly delighted, even if I am a bit doddery and knackered.\" Beatrice had to consult her hand-held computer for a quick translation, but soon caught on. \n\n\"So a hundred-year lifespan is unheard of on your planet?\" she asked.\n\n\"No, not unheard of, but pretty rare. The oldest people are not much more than 120. And they're normally in poor health\".\n\nCatherine leaned closer and said, \"This is why we are going to the Biological Studies institute. Your ageing process is of great interest to us. We took those samples at Customs so that we would have a DNA breakdown ready to use. Other people from your planet will have their DNA compared, and we will learn more about ageing. But we think we already know enough of your physiology to help you in a number of ways\".\n\nThis was getting interesting. Our highway, which was nothing more than an orange cord of light extending in front of the cab, was soaring over a densely built-up area surrounded by trees. \"Wow, what's that?\"\n\nAnnabelle looked down and said, \"The Institute. We're almost there. It is a very large and modern facility. We think you will be impressed with what you find. Catherine and I will discuss our landing pattern with the driver, as we know the facility best. Please ask Beatrice for anything you need.\"\n\nThe two girls rose and a small door swished open into the driver's compartment. It appeared quite conventional until it became obvious that the driver was either driving the vehicle with his mind or there was an autopilot. I asked Beatrice.\n\n\"We are all to some extent telepathic. Our driver, who is an instructor at the institute, is intensely telekinetic. He has been known to construct small buildings with his mind in a matter of hours.\"\n\nI stared at her for a moment. \"What an amazing place\".\n\nShe smiled warmly, cutely. \"To us, you are the amazing one. You represent so much that is of interest to us. And your body is... very different to ours, very interesting to us.\" She was eyeing me up. I liked it. \"I was watching on a monitor while you were with Catherine. I too have studied human sexual responses, although I am only an amateur. Would you show me just a little?\"\n\nI was only too happy to oblige, I told her, but what about the three other people in the vehicle? \"They are occupied with the very complex business of landing. The Institute has only one terminus which handles an almost unbelievable amount of traffic. This could take some time. May I see your penis?\"\n\nOne of the Universe's great non-sequiters. \"Sure\". I opened my trousers, pulled them down a fraction and brought out my semi-erect cock. It delighted in the attention it was getting, and under Beatrice's steady and obviously excited gaze, soon rose to full hardness once more. \n\n\"It is very beautiful. May I touch it?\" I nodded and her hand went straight there. She had a gentle, slightly uncertain grip, as though she were handling an ancient relic. \"It is warm. I like it.\" She toyed with it, finding out how far the foreskin could move forward and back, stroking the delicate flesh of my fraenulum, exploring the unfamiliar curves of my balls. Her touch was wonderful.\n\n\"Catherine took your penis into her body. I would like to do the same but I'm not sure we have time, if your experience together was of average duration. You spent nearly eight minutes fucking before you finished and presented her with the sample. We may only have four or five minutes.\"\n\nI lowered my trousers further, knelt up on the seat and said, \"In that case my love, we'd better make it quick... lie back, take off your underwear and open your legs.\"\n\nShe did as I asked, showing her beautiful, almost hairless pussy. I dropped down to lick her belly, thighs and outer lips before thrusting my tongue into her vagina. She was very wet already and needed little more lubrication. With time pressing, I decided to dispense with further foreplay. Leaning forward, I kissed her tongue with mine and let my erection glide into her open, moist cunt. She gasped into my mouth and grabbed me with both hands, encouraging me further inside her. Forcing every inch of my cock into her body, I withdrew almost all the way and then sank into her again. Hands were grasping at clothing, freeing her beautiful, rounded tits, which were seized upon by my hungry mouth. Below, a hard, quick pistoning had begun between her legs. Eager to come while it was still possible, I fucked Beatrice as quickly and urgently as I could, bringing her to orgasm right before I reached my own. As she moaned and clasped me to her, I came in quick, jolting spasms and flooded her tight cunt with my sperm. \n\nIt had taken nearly four minutes and we were close to landing. Hurriedly, we arranged our clothing and Beatrice took out a white cloth to clean some of the hot semen from her pussy lips and thighs. She whispered, \"We have one more minute\", before taking hold of my penis and slipping me into her mouth. It was heavenly. Her slips slid smoothly up and down my shaft while her tongue danced over my tip. She varied her suction expertly, giving my cock time to enjoy the gentler sensations of her tongue and lips and then sucking me harder. After a few seconds she would take me deeply into her mouth, down her throat, and this pushed me over the edge. Before I could believe how amazing she was, I felt another orgasm well up in my balls, build hotly through my penis and gush out into mouth and down her throat. She swallowed every drop.\n\nThe doors clicked outwards and opened as I was zipping up and kissing her to say thanks. We were quite high up, judging by the impressive winds, and with some difficulty we managed to cross the landing pad and enter the building through a sliding glass door. Outside, our vehicle was up and away immediately, ascending with a confident roar.\n\nWe were in a small reception area not unlike an airport departure gate. A humanoid in uniform took the names and some particulars of the three girls using a retinal scan, and then asked for the same from me. Thank God they're used to dealing with humanoids, I thought. And thank God they give such awesome blowjobs. Beatrice subtly winked at me as we left reception and walked down a broad, white corridor. I pinched her ass. I was having a great time.\n\n\"This is the main part of the Institute's Experimental Healing division. Here is where we would like to work with you on a number of important matters. Firstly, you might like to wash after your journey. After that there will be some simple experiments to allow us to learn more about your body, and find ways in which we can help each other.\" She looked at the other two girls and both left with a smile. \"Sometimes, it is faster to just think things across, rather than explain them\", noted Annabelle. I asked the girls to liaise with the medical team and prepare for your arrival. I'll convey you to your temporary quarters. Please come with me.\"\n\nShe strode ahead of me down a side corridor that sloped downwards to a set of heavy, white metal doors. A thumbprint opened the door with a light click, surprising given its obvious weight. \"We use these rooms to house our guests prior to and after medical work. Some have travelled immense distances, even further than your own journey, and are tired or suffering from side-effects. We are pleased to see that you appear to be in excellent health\".",
        "I recounted to her the wonderful sleep I had and she was delighted. \"I advised them to include that as a method of passing time, and felt confident it would work. I'm very pleased you had such a restful journey, apart from the Formless Void. You awoke slightly earlier than we had expected and were faced with a mixture of the unreal bed and the very real void of deep space. I apologise for what must have been an unsettling experience.\"\n\nI laughed at her sincerity. \"Don't worry about it. Gone and forgotten\". \n\nShe smiled back and sat on the bed. It was a perfectly conventional hotel room from a Marriott or Holiday Inn back home. \"OK, you're not going to tell me that all of your hotel rooms look like this, right?\"\n\nShe giggled cutely. \"No, you're right in this case. Welcome to a faithful reproduction of Room 414 of the Hong Kong Marriot.\" She was right. The emergency instructions were in Cantonese. \"Would you like to take a shower or shave?\" \n\nI actually felt pretty good. \"No, thank you very much. I slept well and was able to freshen up before we met at breakfast. I feel great.\"\n\nShe smiled and lay back a little on the bed. \"In which case, would you care to make love with me? I watched you fucking little Beatrice in the back seat. She loved it. I'd like you to fuck me, in my mouth and vagina. We have plenty of time before the next experiment.\"\n\nThese girls were amazing in many ways, but it was their confidence and directness I enjoyed most. \"Well, I'm sure I can oblige... but I came twice with 'little Beatrice' and my balls are a little empty...\" \n\nShe waved to cut me off. \"That won't be a problem. We have technology here which will not exist for many years on your planet. The transport you arrived in, for instance -- have your people developed anything similar?\" I shook my head. \"Well, another set of developments have been in the field of medicine. As you know, we are immune to all forms of disease and have effectively conquered death. Let me give you an example\".\n\nShe jumped off the bed and walked to her bag, by the door, from which she extracted a silver, spherical object about the size of her palm. \"This is a wave inducer which designed to alter the body's natural productivity. We use it to cure hereditary conditions such as heart trouble and imbalances like diabetes. Properly targeted, these waves can encourage the body to produce anything we need, from a hormone or an enzyme through to increased cell division and fluid production. I will task the device with encouraging production of semen so that you can enjoy having sex with me. We may be able to fuck two or three times on one charging, but it is unwise to abuse this machine, for obvious reasons.\"\n\nShe unzipped my pants, pulled them down and motioned for me to sit on the bed. \"Beatrice was right... it is very beautiful...\" She stroked my flaccid, tired penis and knelt in front of me. \"Perhaps it would help if...\" she stripped off her sweater and shirt, revealing perfect, small tits with beautiful brown aureole. \n\n\"Yes, it helps\", I confirmed with a chuckle. Annabelle placed the silver device on the bed between my legs and waved her hand over it slowly. A soft humming began to emanate from it, and I could feel a distinct, pleasant warmth growing around my balls. \"Woah, that feels kind of weird. What's it doing?\"\n\nAnnabelle smiled. I was sure she had one hand in her knickers and was masturbating. \"It is sending instructions, through your brain and CNS, to your testicles and seminal glands. They will shortly begin producing huge volumes of their respective products. One minute should be enough for one day's normal production. This will feel strange and you'll note a swelling of your testicles and some pressure within your prostate, as things normalise. If you feel discomfort, let me know and we will stop. I can always simply suck and kiss your penis to encourage the flow of semen, but this way is more... scientific.\"\n\nShe was definitely frigging her clit and reddened as she came, issuing a tiny yelp as she hit her peak. This helped my cock, which was feeling warm and contented, to a new erection and by the time the machine had worked its magic, I was fully hard with balls that felt like I'd not come in a week. Annabelle brought herself off again and then quickly tucked the machine back in her bag. \"Do you feel OK?\"\n\nBy way of an answer, I pulled her up onto the bed and was quickly pulling off her delicate, red panties and exploring her already-wet pussy with my fingers and tongue. She came wonderfully quickly. And again. I wondered if some amazing technology was at work, but I guess I'm just that good. Her pussy tasted fantastic -- musky and incredibly feminine, and my erection would have things only one way. I raised myself above her and slid confidently into her cunt, which gripped my shaft so tightly, I almost blew my new load in the first minute. She was in ecstasy, and her tight vaginal pulsing forced me closer to an orgasm with every stroke. But I wanted to see it.\n\n\"Annabelle, let me come over you\", and she nodded. Two more minutes' quick, deep fucking and I was there, ready to come. I withdrew and her hands flew to my cock, stroking me steadily towards the point of no return. Finally, after what my balls thought was a week of waiting, her delicate, stroking palms pushed me over the edge and the biggest tidal wave of semen I'd ever seen gushed out and covered her belly and thighs. I marvelled, but already there was more, and a stronger, harder pulse sent a stream of hot spunk over her breasts and face, landing in her hair and on the bed behind her. Smaller pulses, each the size of a regular orgasm, dribbled sperm into her pubes, coating her pussy lips and oozing down to her anus, and then onto the bed sheets. I leaned back on my haunches and looked at her -- head to toe, she was covered in my sperm. \n\n\"Jesus! I never knew I had it in me...!\" I chuckled. She was smiling, her mouth and eyes coated in whiteness. I hopped up and fetched a towel from the bathroom, and soon she was able to see out again. \n\nHer expression was quizzical and confounded. \"I expected somewhat less... perhaps I made a mistake with the machine.\" I laughed myself silly and she threw pillows at me. \"I think a shower might be a good idea. Would you like to join me?\" \n\nI helped her up and we walked together, a little unsteadily, to the bathroom. She got the shower going while I found soap, shampoo and more towels. The hot water and soap soon cleansed her of the dousing I'd provided, and together we washed my aching penis until the whiteness of our fucking was gone. It felt good.\n\n\"So, what have you got in store for me?\" I asked while I enjoyably soaped up her breasts and stomach. Her body was wonderful.\n\n\"You know how interesting you are for us\", she said sincerely. \"We don't have this kind of opportunity very often. There is much we can learn from you, an entirely new species\".\n\nI frowned, puzzled. \"But I thought you said you were all humanoid. Wouldn't that mean that we're all the same? That I'm just like you?\"\n\nShe lowered her head and toyed with the soap, obviously a little nervous. \"I'm sorry, but we weren't entirely honest with you. Everything you've experienced has been real, but here, reality is a very flexible construct. We are able, as you postulated, to change our appearance into anything we see fit. This might sound very convenient, but there are actually very strict rules regarding how we may change, for what reasons, and who must be informed. Imagine the chaos that would result from one of us transforming into a weapon, or a massive beast, or a poisonous gas.\"\n\nI was staggered. \"You can actually do those things?\"\n\nShe waved at me urgently. \"Only if it is considered necessary or beneficial to the community as a whole. Without common consent, not one of us would be able to alter our appearance in any way. We would be restricted, as we truly are, to a handful of possible projections. This is one of them, and most of the people you'll be dealing with are based on this projection. It was thought better to ensure you encountered a range of people in the arrivals hall, for example, to put your new experience into context. However, we knew for certain that you would only be honest and open with us if you were comfortable. This is our way of gaining your trust\".\n\nI felt a complex mixture of anger and confusion, topped with curiosity. \"So\", I began slowly, \"you are a humanoid only as a choice between that and a number of other forms. You can change that form at will, but only with the agreement of your peers. So, what other forms can you take?\"\n\nShe smiled at my understanding. \"You've got it. I cannot show you, for the reasons we've just discussed, but you can easily be shown other individuals of our species who presently inhabit other forms. I'll pass on this request to the medical team and I'm sure they'll be able to help. And you shouldn't worry -- these others forms aren't something from one of your television shows on Earth. Some you may find more attractive than us.\"\n\n\"I find that very difficult to believe\", I said, and cuddled her closely while the shower warmed us. We kissed and my hands cupped her soft, wonderful bottom. I thought how nice it would be to slip my penis into it. Somewhere, a muted alarm sounded. \n\n\"We have little time. You are due to be examined by the medical team\". She snapped the shower off and handed me a towel. Quickly dried and dressed, we enjoyed a long, slow, luxuriant kiss at the door before dashing down the corridor to the reception we had left earlier.\n\nFeeling refreshed and alert, I followed the receptionist down the corridor, with Annabelle trotting along behind. Another retinal scan and a thumbprint -- legal documents permitting the testing, Annabelle explained -- and I was ushered into a clean, bright, spacious meeting room with a large oval conference table and comfortable, leather chairs. I was alone at first, and took a seat. Before long, a group of humans in white coats -- I thought that a nice touch -- filed in and greeted me warmly.\n\nAnnabelle was about to take her leave. \"This is Doctor Manisti. She will guide you through the testing and answer any questions you have. Please be aware that Dr Manisti is perhaps the most eminent and respected medical practitioner on our planet and has taken a special interest in your case.\" I shook her hand warmly, and she smiled as we were seated.\n\n\"Sir, I hope that you feel we have treated you well, and that you have enjoyed your first day here on our planet.\" I nodded and thanked them for their hospitality. \"Not at all. Can I offer you afternoon tea? I understand you have not eaten since breakfast, and there is no sense in being uncomfortable.\" A waiter in a black bow tie entered and organised a spread of cakes, scones and three kinds of tea and coffee. I helped myself, as did some of the team, and then sat down to hear what they had in store.\n\n\"My name is Manisti and I'm the official team leader of the project which began this morning, namely to learn as much as possible about you, your species, your physical functions and your psychological profile. I understand that you have asked many questions, and appear highly articulate. This is excellent.\" She was leafing through reports of this morning's activities, almost certainly forwarded by the three girls. She looked about 40, but it was hard to tell. I liked her voice and speaking style, and was immediately at ease.\n\n\"It says here that you are aware of the basic nature of the realities we have presented to you, but are curious as to the alternatives. I quite understand. This will be explained, and demonstrated to you later today. First, we have a number of questions for you, as you can imagine, and we would like to start with a psychological examination whose aim is to ensure that this rather novel experience is not causing you undue stress.\" I chuckled and the team smiled with me. \"I assure you that some of our subjects find the transition from their home environment to our planet somewhat distressing -- subjects not perhaps as flexible and well-attuned as you are.\" I chuckled again and muttered my thanks for the compliment.\n\nManisti turned to a page of questions in her folder and began reading. \"I would like you to answer these questions, which are formulated in much the same way as a political poll on your planet. We have done our research...\" this caused a ripple of laughs around the table. The other doctors and researchers were taking notes on electronic lecterns. I leaned over slightly to see a highly complex mind-map adorning the page of the doctor next to me. He smiled and added another element to the display. \"You should find this format familiar -- please answer whether you strongly agree, simply agree, have no feelings on the matter, disagree slightly or disagree strongly.\" \n\n\"Yes, it's a familiar refrain\". All those damned market research phone calls I'd gotten at the factory, at home, on the mobile... \n\nManisti began, \"Are you comfortable on our planet?\"\n\n\"Strongly agree\". The group beamed openly and some nodded to themselves.\n\nManisti ticked a box on her lectern. \"Was your journey here comfortable?\"\n\nI thought about that one. The formless void wasn't fun, but the hotel was nice, arriving to a shower and good breakfast -- they'd gotten that right, at least. \"Agree\". \n\n\"Were the three science ministry agents who carried out your induction of the appropriate species, style and manner?\" \n\nNot half. \"Strongly agree\". The team smiled again and made more notes on their lecterns. I had to get myself one of those. They looked neat. \n\nI took a slug of coffee, which was tasty and bitter in an interesting way. Cinnamon? \"Was the meeting breakfast an effective method of inducting you into our society and ways?\" \n\n\"Strongly agree\". Another slug. Nutmeg, maybe?\n\n\"You were offered a cigarette on arrival and did not accept. Can you explain this? I apologise for the departure from our style of questioning, but I am most curious about this.\" She leaned back and awaited my answer. The team leaned forward and listened very intently.\n\n\"I was addicted to one of the substances contained within cigarettes for a long time. My health was very severely damaged by the poisonous substances they also contain. Several weeks before arriving here, I stopped smoking cigarettes entirely. My health improved, but the side effects of the addiction were extremely severe and I still have cravings for the physical experience created by one of the active ingredients. I am not interested in satisfying that requirement, although it was curious to me that you sensed the requirement exists.\" More coffee. Cinnamon, surely?\n\n\"That is extremely interesting, and even more so that you noted our reaction. We had, indeed, detected a strong predilection for this substance but were unaware of the side effects. I sympathise. Some of our inhabitants feel the need to indulge in psychotropic and other substances, the medical side effects of which are quite negative. I congratulate you on having conquered this addiction, which I know cannot have been easy.\" \n\nI nodded, and the team broke out into spontaneous applause. Enjoying the moment, I stood and took a bow, to general amusement.\n\n\"If we may continue\", Manisti said smiling, and waving her colleagues gently to silence. \"I hope you will not find this question embarrassing. You have had sexual relations since your arrival with all three of the Ministry girls. I have to tell you this was not unplanned. They were trained to ensure your comfort and to gain your trust. Please react to this statement -- 'I resent the use of sex for the purposes of gaining my trust and wish it had not happened'. \n\nI smiled. \"Strongly dis -- a -- gree\" I said clearly. The team broke into applause again. \"It was a perfect method. Perfect. Think about it, I'm here on an alien planet for the first time, I've no idea what's going on, I don't speak the language, don't have any currency, haven't got a guide book. But it's full of gorgeous girls who want to fuck me. If there is one sure-fire way of getting me on your team, to encouraging me to co-operate, its lots of sex with pretty girls. And a good, solid breakfast.\" They were ecstatic. \"'Resent the use of sex'... How the hell could I resent it? That's crazy. And whoever did the training was a minor genius, and they have my thanks.\"\n\nThree of the team jumped up from their seats and embraced each other, shaking hands merrily and virtually dancing with collective glee. Manisti was almost helpless with mirth herself. \"You'll have gathered that these three were responsible for the sexual and social training of Annabelle, Beatrice and Catherine. Background research took some months and they are obviously delighted not to have wasted their time.\" The three took some time to settle and, even after seating themselves again, beamed continuously and occasionally punched each other on the shoulder in congratulation.\n\nManisti kept order well, and pushed on. \"How would you respond to this statement -- 'I understand the necessity of carrying out scientific research for the purposes of interplanetary contact'\". \n\nI really wasn't sure. \"I'd probably agree right now, but the thing is... I didn't realise until this morning that there was such a thing as 'interplanetary contact'. This sort of stuff was a joke back home -- aliens, abductions, secret experiments in remote laboratories and sinister government departments. To know now that some of this stuff is real, that other planets are inhabited... I don't know. Ask me again in a few days. Sure, I want you guys to communicate with Earth and I'm sure we can help each other. For now, put me down for 'agree'.\"\n\nThere was more nodding and a very positive vibe from this group. I was suddenly aware that, despite their politeness and attentiveness, I'd not been introduced to any of them. \"Excuse me, Doctor, but I wonder whose company I am in?\"\n\nManisti glanced around, briefly flummoxed by my question. \"I'm sorry not to have introduced the team members -- there are many, and we find that too many introductions at once is simply a waste of time. Still... In simple terms, this is a panel of highly experienced specialists who have made the study of extra-terrestrial life their life's work. We have members whose interests lie in the fields of psychology\", she said, motioning to a dark-skinned woman at one corner of the oval table, \"and others who specialise in diseases, immunity and disorders of the blood\", she added, indicating a trio of doctors on the other side. \"Some have professional interest in communications, telepathy, mental activity\", she pointed to individual doctors in turn, \"whereas I am most involved in the management of such programs, as are a number of my colleagues. Put simply, there is a holistic approach which we all embody. You will get to know some of us during the coming days, but others will work almost entirely behind the scenes. Excuse my rudeness in omitting these details, but we must be selective in the extent and breadth of information you are provided, if only for reasons of retaining your sanity under these extraordinary conditions.\"\n\nI nodded, and said, \"I appreciate your candour and clarity. Please continue with your questioning\". I grabbed a sultana scone and poured some more coffee. I was erring on the side of nutmeg once more.\n\n\"Thank you. We are almost finished with this section. During your day here, you have been given a variety of information on several subjects, almost all of which has been new to you. This touches on my comments of a moment ago. How would you respond to this statement: 'I have been overwhelmed with new and incomprehensible data since arrival and wish the rate of learning could have been slowed'\".\n\nThe other doctors leaned forward intently. I felt pressure, as if their whole approach might hinge on this one answer, and that by saying the wrong thing now, I might offend them. I thought carefully for about a minute, drank more coffee and looked out of the window. One of the large, pleasant parks of this science campus lay between two large, modern buildings with broad windows and an attractive, curved design, not unlike a sail. A young couple were lounging on the grass, both reading. I'd never felt more comfortable.",
        "\"There has been a lot to take in. Let me ask, have any of you visited another planet before?\" A handful of the doctors murmured that they had, including Manisti. \"OK, try this -- have any of you been removed from your home planet and taken to another without any preparation time?\" The heads, which a moment ago had nodded, were now shaking slowly. \"I had absolutely no idea that life beyond the Earth existed until...\" I check my watch, \"eleven hours ago. You must understand that, while I'm doing my best to get used to these surroundings, the amazing concepts you're bringing to me, and the very fact that humankind is not alone in the Universe, this is a big hit. I wouldn't be surprised if I woke up tonight screaming, or something. I can't believe I'm being so relaxed about it.\"\n\nThe doctors nodded, concerned. For the first time, the dark-skinned lady in the far corner, who Manisti had earlier pointed out as a psychologist, spoke. \"We are aware of the trauma we have caused, having brought many beings to our planet in the past. It is fair to say that, on first examination, you have performed extremely admirably in terms of your flexibility and honesty. You have not denied what we have said, but accepted it. You have not demanded instant repatriation, as have many in the past. Instead, you have learned, co-operated and been polite and helpful. You have our thanks\". There was applause once more. These people sure liked clapping.\n\n\"You're kind. Well, to answer your question, no, I don't believe that I have been presented with too much information. There has been a lot, but there have always been examples of what you mean, so that I have some reference. And walking into that big arrivals hall at the beginning, that was the perfect way to say, 'Hey, you're not in Kansas anymore!'\" I chuckled and drank the last of my coffee while a few confused doctors were put right by others who'd seen the film. Some laughter arose as they got the joke. I took a scone. This was fun.\n\n\"One final question, if I may, before we divide into our groups to discuss what we have learned, and you have the option to begin other forms of testing.\" The doctors were clearly eager to get started and many had several pages of elaborate, colourful notes already laid out. Their lecterns could print an acetate-type hard copy of their notes which was simply peeled off the screen, whereupon the doctor began writing again on the sheet beneath. \"Provided that certain conditions are met, we will be revealing to you within the next few days perhaps our most startling and impressive discoveries in the fields of science and medicine. These revelations will fundamentally change your life, your relationship with the Universe, and perhaps even your body itself. You can choose, at any time, to stop. However, I must advise you that beginning the process is by far the biggest step. If you are concerned about what you may learn, or do not wish to proceed for any reason, I urge you to say so now.\"\n\nI thought about this. 'Fundamentally change' my life? What kind of 'discoveries' were these? Well, I thought, I've come this far, I may as well jump down the rabbit hole...\n\n\"I remain at your disposal and am anxious to start\".\n\nThere was an eruption of applause as the whole team stood, beaming and clapped for a solid five minutes without any indication that they would ever run out of steam. Finally, Manisti quietened them and they gathered lecterns, jackets and bags and broke up into huddled groups by the far walls, top of the table, and the door. Some left, waving or nodding to me. A couple, including the dark-skinned psychologist, shook my hand warmly and thanked me for my time. I thought Manisti was going to hug me.\n\n\"Remarkably honest\", she was saying, \"we've never seen anything quite like it. You could do wonders for our understanding of so many things... Very exciting. Truly.\" Some of the groups were leaving while a team of three doctors at the door seemed to be waiting for me. Manisti finished saying goodbye to some of the team and then walked over to introduce us. \"This is the Primary Physical Team. Their interests relate to your physical systems. If you have no objections, they would like to begin their work immediately.\"\n\nI shook hands with the three, a black man aged about 50, with a white moustache and glasses, and two younger women whom I took to be nurses. I was wrong if course, as Manisti introduced one of the women as Doctor Falik, head of surgery and professor of comparative physiology. Her hands were dainty and soft, enclosing mine for a warm and friendly handshake. \"I am delighted to meet you at last. Our work together should be most stimulating\". She smiled beautifully. Again, it was hard to guess her age -- early thirties? Maybe late twenties? She was cute and I fancied her immediately.\n\nManisti flanked us as we walked down the main corridor to the Medical Labs. The corridor ran along one side of the park, where the young couple were still reading, but also taking time out occasionally to kiss and fool around. Inwardly, I rejoiced that no one was there to chastise them. What a healthy society.\n\nTurning left through a set of heavy, steel, double doors, we entered the main medical labs. A reception desk and a bank of computers were on my right, with information panels and clothing racks to the left. \"This is our main entrance\", said Falik. \"We require that you complete some administration here, and then proceed through with us to the examination rooms. I understand that you have done this before. The receptionist will help you.\"\n\nI turned to face the reception desk, ready to complete the forms, and nearly had a heart attack. \n\nThe receptionist was Samuel L Jackson, in character from Pulp Fiction. I swear. Just calmly going about administrative business -- answering the phone, sliding over the forms with a pen, patching through a call. \"Go ahead and sign right there\", he indicated. The Afro, the suit, the voice. Everything. \n\nI stared at him for fully a minute before asking, \"when did they get you, man? How long have you been here?\" \n\nHe just smiled and clicked the pen for me. \"Go ahead and sign. They're ready for ya\". I signed, handed him the pen. \"Thanks, man. You run along, now\". He turned back to his lectern, humming quietly. With absolutely no idea what to say, I turned and walked through the reception area, joining Falik at the sliding doors and walking together into a tall, broad hanger-type building with individual offices partitioned by flexible, light-blue screens. Some were domed, like large tents, while others were open at the top. The ceiling was a mesh of metal beams from which dozens of lamps hung, emitting a soft light that gave everything a clarity and crispness I'd never seen before. I made a mental note to ask about that. Lovely effect.\n\nFalik swished open the door of one of the blue tents and ushered me politely inside. It looked a lot like a standard doctor's office, with an examination table and cupboards, even an anatomical chart on the wall. Falik strode over to her desk, which was a thin sheet of glass balanced almost impossibly on a single spindly metal rod. Somehow, it managed to stay up while she sat on it. \n\n\"Welcome\", she said warmly. \"You're in one of our examination bays, and here we will conduct the majority of our experiments. Throughout the procedures, I will be bringing in a variety of equipment that will assist in our work. Please feel absolutely free to ask as many questions as you want.\" I glanced around the room and noted that the other two staff were absent. Predicting my question, Falik said, \"they are taking part in a planning session which will last about an hour. We will be alone for a while.\" \n\nShe slid off the desk, took off her white lab coat and unfastened her hair clip, shaking loose beautiful, black hair that cascaded down over her shoulders. \"I hope that you find me attractive\". I nodded and smiled at her lustfully. \"Would you like to have sex?\" she asked confidently, but with a hint of innocence I found unbelievably alluring. \"I know about your encounters with the three Ministry girls. They reported that you have a wonderful penis and that it gave them great pleasure to suck it and take it inside their bodies. I would very much like to feel the same\". She approached me and my erection swelled in my trousers as she softly kissed me. Immediately, I knew that she had not been trained up like the others. \n\n\"You've never done this before?\" She nodded, unbuttoning her blouse. \n\n\"I saw a recording of part of your encounter with one of the girls, in the back of the vehicle on your way here. It has made for popular viewing on the planetary Intranet. Many females are interested in you.\"\n\nI had flushed bright crimson. \"A sex tape of me is publicly available? Are you fucking kidding me?\" I gasped. \n\nFalik grinned and let her skirt fall to the floor. \"There is no reason to be sensitive about this, although I think I understand your feelings. Your encounter was a private moment, which others shouldn't be allowed to see. But, you must understand that we have virtually no concept of sexual privacy, and that watching other people fucking is a major pastime. I particularly enjoyed watching your orgasm. May I taste your penis?\"\n\nThere it was again, that confident, direct tone that I loved about these people. Unzipping, I brought out my erection and she was quickly on her knees in front of me, admiring it. \"Quite beautiful, yes.\" Her hands were soft and my penis responded yet further as she began to masturbate me, slowly. \"How many different women has this wonderful specimen been inside?\" I thought about that for a moment while she eased her soft, warm lips over the head of my cock and slipped me into her mouth, generously swirling her tongue all over my shaft. \n\n\"About twenty, I think\". She looked up at me, dark eyes filled with lust and enjoyment. Releasing me from her mouth, she whispered, \"Here, you could fuck twenty girls every day. Would you like that?\" She continued sliding my foreskin back and forth. \"You could have anyone, anytime. You are totally free here.\" Back inside her mouth, my cock received a wonderfully warm tongue bath. Falik unfastened her bra with her other hand, revealing small, pert breasts, and then put her hand between her legs. \"I think I am ready. Would you like to enter me now?\" She stood and bent over the glass desk. \n\nShaking my head in wonder, I slid her panties down over her cute little bum and then off. They were exceedingly wet at the crotch. The culprit, a pretty, pink vagina, nestled among soft, black hairs. Her anus was gorgeous. I wondered if she would let me take her there. \"Do you think I am ready?\" she whispered. Her pussy juices had formed silver trials on her inner thighs and her lips were swollen and red. By way of an answer, I moved in behind her, placed my penis at her pink entrance, and pushed inside. Her lips parted and my cock was enveloped in warmth and moisture. Falik gasped onto the glass table and her vaginal muscles gripped my erection as I slid back and forth. \"It is wonderful...\" she was murmuring. Taking hold of her hips, I established a steady rhythm with deep strokes which filled her cunt. She actually became wetter during our sex, which was hard to believe, and her juices coated my balls. \n\n\"Falik, can I try making love in your anus?\" She glanced back at me and smiled, nodding cutely. Taking her hand from between her legs, where she had been fingering herself while I fucked her, she spat noiselessly into her hand and rubbed the saliva into her bottom hole. I withdrew, reluctantly, from her cunt and lined up my cock at her smaller orifice. There was so much lubrication that I slid inside easily. Falik murmured again and her hand came back to stop me.\n\n\"Slowly, darling. You are big but I am small. Go in slowly\" she whispered. I eased out almost all the way, then pushed my glans back into her bottom. She relaxed as the broadest part of my cock was fully inside her, and then murmured loudly as I pushed forward again. \"My darling, it is wonderful but you are too big for me. Please withdraw and wait a moment.\" I did as she asked.\n\nFalik turned and rose from the table, kissed me warmly and opened a cabinet in the wall. Bringing out a small, red cube she explained, \"this is a simple dilation device for surgery. It will help in our lovemaking. Place it at the entrance to my bottom\". She knelt up on the glass desk and I placed the cube, which had a soft, velvety feel, on the pretty little starfish of her anus. It vanished in a wisp of redness. Immediately, I noticed that Falik's anus was more open than before. \"Now try again and don't worry\", she said, smiling. I quickly got back into position and slid my hardness inside her bum once more. Everything was different and I was able to push my whole cock inside her. \"Better?\" I grunted my approval and began to fuck her strongly. Grabbing her hips, I launched my cock each time into the depths of her ass, feeling the shuddering of her masturbation through the soft flesh inside her. She came, loudly, and squeezed my cock to its finale. I showered her insides with hot semen and then collapsed forwards on top of her, feeling our breathing slowly recover.\n\nI kissed her neck and face as my erection subsided and finally withdrew from her ass. Stretching and rising, Falik kissed me again and knelt down as if to suck me. \"Falik, you might not want to...\" she stopped me with a raised hand. Reached over to another cabinet in the wall, she brought out a small bottle of blue liquid and a white cloth.\n\n\"This is a sterilising agent which will clean your penis of any harmful bacteria. It is normal after making love as we did.\" She tipped some of the blue liquid onto the cloth and gently cleaned my cock, drawing back the foreskin and running the cloth under it. It felt good, slightly cool to the touch. She dropped the cloth down a waste chute and took another. \"This solution may also help your skin complaint. Would you allow me to apply it?\" \n\nI was confused for a second before I remembered. I have acne -- nothing serious, you understand, but persistent and annoying. \"Anything you like, if it will help! Nothing back home could shift this for me.\" \n\nShe smoothed the cool lotion into my skin. It felt great, as if I was becoming truly clean for the first time. \"This is good stuff! What is it?\" \n\nFalik finished, discarded the cloth and put the lotion away. \"It is a formulation we adopted, having seen its positive effects in other cultures.\" \n\nI stared at her for a moment. \"You mean, it's an alien skin cream?\" \n\nFalik giggled, \"yes, I suppose you could say that. Most effective. You will learn more about such things later. For now, I think we should begin the physical examination. After that, perhaps we can fuck some more, but we do need to get some work done today\". She smiled cutely and tapped a wall panel. \n\nBehind the examination table, the wall altered until it hazily became a set of touch-screens and other control consoles. \"My colleagues should be present for this section of the tests\". She pressed a small button on her watch and, thirty seconds later, the black man and the younger, blonde woman walked in and introduced themselves.\n\n\"It is our real pleasure to meet you\", he began, in an extremely deep, resonant voice. \"Although my interest in your species, if you'll forgive the term, is relatively recent, there are volumes waiting to be written for a large and fascinated body of fellow scientists. I look forward to a mutually fruitful relationship\". He extended his hand, which was soft, almost dainty. \"Carpash, Professor of Interstellar Physiology and Experimentation\". My face must have betrayed my instant unease. \"Please don't be alarmed. We will be carrying out absolutely nothing which will be painful, unnecessarily intrusive or uncomfortable in any way.\"\n\nThe range of coloured screens and dials around the walls of the room seemed to have increased in the past minute. There were now dozens of screens, each relatively inactive, or pulsing slightly, rhythmically, like some kind of alien screen-saver. Carpash noticed my glance at the panels. \"There is nothing here which can hurt you. Please be comfortable and we may begin shortly\".\n\nThe blonde has busied herself in some kind of preparatory work with a portable lectern similar to those used at the meeting an hour ago. \"My colleague, Doctor Velis. She also has a close interest in human anatomy, but specialises chiefly in neurophysiology, that is, the...\" I chose to interrupt him, just to show I was on the ball.\n\n\"The study of the anatomy of the brain, and its functions.\" Quite right, he nodded, with a tone which did not risk patronising me. These people were well trained and immaculately prepared. Surely, there would be much I could learn, too?\n\nVelis completed her preparations at the screen and began to speak. She had an odd, unplaceable accent, something like Russian, but with a relaxed, South African feel. \"You'll be pleased to learn that you are in excellent health, and that our scans have revealed no physical ill effects resulting from your journey. We are particularly pleased that our methods of travel have not damaged any of your systems\".\n\nI shared my relief with a chuckle. \"So, doctors, what is it you would like to find out?\"\n\nVelis consulted her screen once more while Carpash answered my question. \"Your anatomy is humanoid, like our own, but largely dissimilar internally. We are interested in the comparative physiology of our species. In short, we'd like to know how your systems create physiological success among your species, and we hope to be able to copy elements of these.\"\n\nI stared at him. \"But I thought you were physically perfect? That you could live for three thousand years?\" Carpash looked blank for a second, until Velis sent over an invisible thought which contained an approximation in their own calendar system. \n\n\"Yes, yes\", he was nodding, \"but there is still much we can learn. Great longevity and a healthy lifestyle are two crucially important things, and achieving them has been one of the crowning glories after centuries of scientific and medical achievement.\" Velis beamed proudly. \"But we have discovered, among other things, that a long and healthy life is only worth living if one other thing can be secured.\"\n\nI waited. Velis was still beaming, almost shy as she tapped at her screen. \"Happiness\", she said finally. \"This is the final secret we wish to unveil\".\n\nSo, that's what this was all about?! Sampling the best and happiest of all alien species in order to achieve happiness in their own. As the genius and simplicity of the concept dawned on me, a large smile became almost fixed on my face, which was feeling distinctly healthy after the alien skin scream episode.\n\nShe continued. \"Your species has developed a magnificent suite of hormonal and other responses designed to promote happiness. According to what we know, happiness is the key to a truly successful life. People learn more effectively when they are happy, engage in fewer arguments, experience a lower level of emotional and physical stress. Our bodies, you see, promote few hormonal responses in this way. In essence, we are permanently depressed\".\n\nI looked around, then stared at the two doctors. Falik stood at the back, taking copious notes on another lectern. \"You're depressed?\" Velis smiled again and nodded. \"All evidence to the contrary\".\n\n\"In effect, yes, but without the other extreme with which to compare our emotional responses, it is very difficult for us to say. You see, our brains are quite unlike your own. They control bodily functions, maintain pulse and respiration, regulate our internal organs - these, too, are quite unlike your own\". \n\nI pondered this. The four wonderful alien vaginas I had so far encountered sure felt real and normal enough. And their mouths. And Falik's incredible, tight bottom...",
        "\"But the emotional side of our brains is, compared to the little we know of your own, almost feeble. We laugh, we cry, but these are merely automatic responses, like the brain instructing the liver to metabolise, or the stomach to churn, or the heart to race. We never actually feel these responses occur\".\n\nThe gist of her point hit me at last, and a wave of pity crashed into my thoughts. \"You never feel any of that?\" I think my jaw actually dropped. \"How awful.\"\n\nCarpash nodded soberly. \"This is how we think about it, also. A great shame. So much potential, so many emotional avenues to explore, to enjoy, in which to make mistakes, to learn, to excel. We are missing so much.\"\n\nBut they simply didn't seem all that upset about it. Perhaps he was right, and by never having experienced the high, they lacked the neurochemical faculty to feel the low. Jesus.\n\n\"So, you'd like me to teach you how to be happy?\" The three laughed simultaneously. We were off to a good start, apparently!\n\n\"No, that is more the psychological side of the experiments. There, you will teach us much about achieving and maintaining happiness in our day-to-day lives. Here, we are interested in the chemical side, the neurology, and the anatomy of happiness. May we begin?\"\n\nI nodded, quite vigorously, and drew another chuckle from the team. They had me lay back on a broad, white counter made from some tough but almost outrageously comfortable material. \"The scanning will begin shortly. If our calculations are correct, you will feel virtually nothing, but please tell us if you do.\"\n\nThe dozens of screens on all sides of the room began to pulse more quickly, pregnantly. The three doctors, I had noticed, stood well back and put on black sunglasses. Not exactly Oakley, but their intent was clear - this was dangerous shit. I decided to relax and trust these people. After all, it was obvious that they needed me more than I needed them, and to bring me all the way here showed an incredible curiosity. It was unlikely, I reasoned, that they would nuke me on my first day.\n\nA violent storm of lights began above my head. Purple clouds gathered, mingled, flew apart, generating sparks of intense blue light. One by one, the row of screens lit up in a furious display of colours, and the subsided, allowing its neighbour to dominate. After a few minutes, each of the screens had come alive twice, and were then silent. Carpash was the first to step forward, removing his shades.\n\n\"How do you feel?\" He was ready with his lectern for my answer.\n\nI looked around, sent mental signals to all extremities. All reported in. \"Fine\", I answered. \"I've probably just been pan-fried, but I didn't feel a thing. What the hell were those things?\"\n\nCarpash looked slightly relieved, and tapped enthusiastically at his lectern while Velis explained.\n\n\"Invasive surgery, such as that which we can see you received, has been banned here for a number of centuries. We faced many of the problems of our own race - diseases, inflammations, debilitating conditions, mental disorders. Then, we discovered that most of these occur because of weaknesses or disability in the immune system. In this respect, we are very similar species. We produce cells which seek out and destroy foreign, contaminant bodies, and they have become very adept.\"\n\nCarpash continued as Velis went to work on the results, which were streaming forth from a port on the edge of the screens in a brown cloud of information. This was received by a lectern, which hummed with activity. \n\n\"Instead\", he explained, \"we rely on these machines\". He proudly extended a hand and gestured at the array of screens. \"These produce a huge variety of wavelengths of radiation, from those which produce sound and colour, to much more refined types which can actually influence the production of fluids and other material within the body. I understand that you have already experienced greatly increased semen production as a result of a similar, hand-held device.\"\n\nI chuckled at the memory. \"Er, yeah. That was kind of cool.\"\n\nCarpash chuckled, but I felt he hadn't understood, as though he was humouring me. \"So, you know that health and longevity are simply a matter of regulating production of these fluids, and then working to combat errors in cell division.\" I nodded and explained that I knew that cancer formed in this way.\n\nWe discussed anatomy. The results were clear and Velis was compiling what looked like an impressive, multi-media report on the state of my body. \"Doctor, are you ready with the Executive Summary\"? Christ, I thought, that was fast.\n\nVelis removed the lectern from its receiving position near the screens, and they began to fold away seamlessly, back into the walls. \"Yes, Professor. The results are very interesting. I will begin now, if I may\".\n\nThe counter on which I was comfortably lying began to move, and propped me gently into an upright position. Falik came over and offered me a glass of water, smiling cutely. I really hoped I would get the chance to fuck her senseless later on. She had perhaps the best body of them all.\n\n\"First, you must understand both that we have a limited knowledge of the basic anatomy of your species, and that we approach this from a very scientific perspective. I hope that our terminologies don't offend you\". I smiled and gave her an encouraging nod. I'm a tough lad, I thought to myself.\n\n\"Yes, indeed you are.\" I started. \n\nVelis' hand flew to her mouth in panic. \"I... I'm so sorry, I didn't mean to... I wasn't aware that you had not yet been trained in our attitude to telepathy... Professor, how can I apologise?\" She was incredibly flustered.\n\nCarpash put a calming hand on his colleague's shoulder and looked her straight in the eye with a kindly expression, obviously communicating something to her. Her panic was quickly gone and she smiled. \"I am relieved to find you are not offended, and at least have some experience in these matters.\" She must have been referring to the three luscious science ministry girls, I reasoned.\n\n\"Not a problem\". Carpash was anxious to explain more.\n\n\"I am a gifted empath. Although my colleague was not aware that this had not caused offence, I was. As a team, we are particularly effective\".\n\nI wondered quite what he meant by that, and the broad smile which accompanied it, while Velis gathered herself and pushed on.\n\n\"Your general physical condition appears to be excellent. There are few areas of concern which we will address shortly. Your heart is in good health, although there is a degree of arterial blockage caused by the tar from commercial smoking materials. Liver functions are at 96% normalcy, a decrease attributable to the metabolism of large quantities of alcohol. The scillia in your lungs and oesophagus have begun to regrow but will need several more months to reach normal length and effectiveness. And you have a malignant, cancerous region in your stomach. Other than that, you are in excellent health\".\n\nMalignant, cancerous region.\n\nShe had said it so quickly, in so off-hand a way, like \"oh, you missed the bus, but there's another one in five minutes\". Casual, routine, like it was nothing. But it wasn't.\n\n\"I have fucking stomach cancer!?\" I blurted loudly. The three medics shuddered in unison. \n\nCarpash came straight forward and took my shoulders firmly in both hands. \"If you will forgive me, Sir, don't be a bloody fool. You think that a race like ours, with the technology we have developed, can't handle a few cancerous cells? This will be as simple as cutting your toenails. Perhaps simpler, because no-one will even have to touch you to right this problem. You will not believe how routine such things are for us, particularly as we know this disease carries off millions of your fellow humans each decade. Please... relax.\" His grip softened and my heart rate began to drop back to normal.\n\n\"Sorry, Doctors. Let me rephrase. So, my arteries are a bit blocked, my liver could use a vacation and I have a pretty mundane stomach tumor. Anything else I need to worry about?\"\n\nThey smiled at my more relaxed state. \"Thank you. We are very used to dealing with subjects who take the dimmest possible view of results such as those, interpreting our findings as a portent of doom. I assure you this is not the case. And, to answer your question, yes. Your bones are showing signs of early-onset arthritis and we are concerned about the pre-disposition in your genetic make-up for several mental disorders, including alcoholism, addictive behaviour, Parkinson's disease, depression and anxiety.\" Carpash read down the list. \"Your eyes are suffering from a disorder which you would characterise as requiring one dioptre of correction. Three of your toes are mildly deformed - I can only assume that this stems from inappropriate footwear very early in life. You have a number of scars, the most obvious relating to your quite recent appendectomy. The inside of your left index finger shows tar discolouration, from your smoking habit.\"\n\nChrist. \n\nHe continued. \"You are approximately three kilograms overweight for a human of your size and build. There are a large number of dead follicle areas above your forehead, where your fringe has risen. Your lower back shows signs of easily-treatable spondalosis. You have three diseases you will never know about, which are in your gut and may never have any effect on you, but you don't need them.\"\n\nI grinned at him. \"Anything else?\"\n\nHe checked the results once more. \"Yes, I think you have what you call 'athlete's foot'. And you could usefully evacuate your bowels.\"\n\nI stared at him. I was getting used to doing that. \"I need a shit?\"\n\nDeadpan. \"Yes.\"\n\nI roared with laughter so loudly that a doctor from the neighbouring facility popped her head around the door to make sure her colleagues weren't torturing me. She rolled her eyes with a facial expression that said, 'huh, aliens!' and left.\n\nCarpash continued to type animatedly into his lectern. There must be a small book full of information on my cancerous, diseased, blocked-up system on there by now. \"I wonder if I can see some of that?\" I asked, nodding to his fingers as they swirled and tapped among the characters and symbols on the screen. \n\n\"Certainly\", he said kindly, swinging the lectern around. The most impenetrable jumble of information, almost all of it in languages I couldn't begin to understand, had filled the screen. \n\n\"Alright, I give up. What the hell does all that mean?\" Carpash smiled once more. For people who claimed to lack emotional responses, they were effusively polite and empathetic. They just couldn't fall in love or become truly sad. What a loss.\n\nHe motioned, somewhat distracted, at a block of colourful triangular and cylindrical symbols in the upper right portion of the screen. They were connected by varying patterns which appeared to show flow of something, perhaps blood or electrical activity, from one unit to the other. \"These represent your basic organic systems. These lines generate thought patterns in the mind of the reader which communicate very exactly the rate and function of the exchange. In this example\", he added, tapping one of the red cylinders, \"your heart function is described in some detail, without the need for a lengthy essay.\" \n\nEach tap on the lectern brought us to a new level of detail until a pictographic analysis of my entire heart, every cell, was brought to life on the screen. \"The emphasis is functional\", he continued. \"Our interest is, of course, both in the biological and the psychological realms, but we increasingly find a strong correlation between the two. Your state of mind will influence your heart muscles. We find this extremely interesting. This is an important respect in which our two species differ\".\n\nI continued to look closely at the mass of information on the screen. \"You mean that your hearts don't accelerate when you're excited?\"\n\nCarpash shook his head steadily. \"No\", he said simply.\n\nI thought back over my encounters with the three ministry girls, and the gorgeous Falik, who had been creating a masterpiece of mind-mapping on her own lectern in the corner. The level of detail on her screen was, if anything, even greater than this one. \"But\", I began, \"surely during moments of excitement, of... heightened pleasure, for example, your heart rates must sky-rocket, just like mine?\"\n\nHe shook his head again. \"A simulated response\", was his only reply. \n\nSo, when I had given those lovely girls all their orgasms, and shot torrents of sperm inside them, all I was witnessing was a robotic action, a computer-enhanced version of some truly boring people? Surely not. They couldn't be as technologically advanced as this, and yet lack the basics of an emotional system?\n\nBut they were finishing before I had the chance to ask. \"We will require several hours of study in order to formulate results useful to us both. I suggest that we break for the day and reconvene here in the labs tomorrow, if that would suit you?\"\n\nI nodded and both Carpash and Velis packed up their lecterns and, with a polite shake of my hand and more kind smiles, left. Falik wrapped up her own essay, which must have been mind-blowingly complex, and approached me.\n\n\"Did any of that cause you discomfort?\" she asked mildly, her hand on my arm.\n\nI smiled. She was unbelievably cute. \"Well, today was the day I found out that I had cancer. And that it can be cured in a snap. You people really are something\".\n\nFalik shut down her lectern and brushed her hair with an amazing device which resembled the metal detector wand used at airports. Without coming within a foot of her hair, the wand managed to brush it all through until it was smooth and shining. \"I will finish work now. You are welcome to join us\".\n\nMy curiosity peaked instantly. \"Join you? What does one do on this planet for fun?\"\n\nHer face fell slightly. \"As you've been learning, we have a concept of fun which is very different from your own. However, we have long since predicted the day when a technology or philosophy would arrive to provide us with this ability, and have spent decades designing festivals, performances and other events with which to experiment once this ability arrives. Think of it as advanced practice, like a dress rehearsal for the main event. How would we know, for example, what wonderful sex would feel like, without the experience of sex under our current hormonal conditions?\"\n\nI pondered this, but I didn't have long. Falik was quickly on her knees in front of me, her eyes raised in a beautifully supplicant, appealing way. No telepathy required. I brought out my penis and she admired it for a second before opening her mouth and sliding it deep inside.\n\nMarvelling at the enthusiasm and skill of her probing, soothing tongue, I let her do as she wanted. Below, her hand had entered her white gown and she was clearly enjoying herself. Her face flushed with as much pleasure as her limited, embryonic hormonal system allowed. No such limitations for me. Within moments, encouraged by her consistent suckling of my glans and steady, rhythmical pumping of her hand on my shaft, I threw my head back and simply let myself go. \n\n***\n\nI learned much on the way over. The city's name was Takanli and it was one of many such places on this massive planet which, I also learned, was four times the size of the earth and almost entirely covered with massive continents. The ramifications of this were enormous, particularly for weather, but with technology like theirs, the inhabitants had long-since tamed dust storms and other dangers, just as they had tamed disease and death. Falik was in the middle of finishing another wonderful blowjob as we came into land. As the thrusters eased and landing struts locked into place, I emptied another gallon of cum down her throat.\n\nMany of the city's open spaces, and they were many, were dedicated to evening performances. There was almost a perverse interest in The Preparation, as they called it - the sequence of events which would ready this massive populace for the day when they might actually have some fun. Or, might actually get seriously depressed about how long they'd spent not having fun. I felt sure a team of dedicated psychologists were addressing that question as we spoke.\n\nThe main park area, which was the size of Delaware, was filled with the largest throng of living beings I'd ever seen. Even Falik was impressed. \"Three million people come here most nights, although ten million live in the immediate vicinity.\" The numbers blew my mind while she finished blowing my cock. A gentle suck to clean me off, and a quick cuddle before we disembarked amid a flurry of landing and departing vehicles of all shapes and sizes. The transport system was of a magnitude I'd never thought possible. And never a traffic jam in sight.\n\nWe followed several tens of thousands of people through a large exit door in the terminal and flooded into the green, spacious park. Dotted throughout this massive area were trees nearly a mile tall and five thousand years old. Their branches grew so complex that entire communities were living up there, half a million people in this park alone, living what Falik called the 'feral' lifestyle, growing their own food and engaging in barter economics. Babies were born, art was created, books were written, entirely in buildings shackled to massive, ancient branches. At the base of each tree was an electromagnetic elevator - damaging the tree with cables would have been unthinkable. Indeed, large shrines and monasteries were arrayed around the base, filled with people praying to the tree, bringing it offerings of food and water, kissing the bark. The medicinal properties of some barks and saps encouraged buying and selling, with colossal sums of cash changing hands, carefully controlled by the authorities. \n\nBut the main event this evening was a performance on a stage in the centre of the park. Falik had arranged some kind of VIP pass and we were whisked past the long, snaking queues to a special entrance, where a brief security search by some sexy, leather-clad officers of the law gave the female cops a great chance to grab my ass. \n\n\"Falik?\" I asked loudly above the din as we filtered into a massive glass enclosure near the main stage. She turned and I asked, \"why does everyone here find me so interesting?\" She laughed.\n\n\"You're exotic! We've never seen anything quite like you. People know already that you know all about providing pleasure, and we've never had anyone like that visit us before.\" We pushed through the throng to a row of front-row seats made from some odd kind of plastic which moulded itself to your body, then kept you firmly in place. The levels of comfort these people had achieved were astounding.\n\n\"But I'm just a normal guy, right?\" I called. She had somehow found two glasses and handed me one. \n\n\"Wrong! The whole Net has seen your encounters with the Science Ministry girls. Your blowjob episode in the vehicle on the way to the labs is the most popular download today! People love you!\" I laughed myself silly and then took a look around.\n\nThe scale of virtually everything beggared description and I felt that my eyes would shortly pop right out of my head. The stage, if it could be called that, was a massive white platform like an Ipod on its back, adorned by 500 yard tall poles, each of which flying a flag with symbols so complex I couldn't begin to guess their meaning. There was what seemed at first glance to be a pretty conventional orchestra set up, perhaps 200 people altogether, but their instruments were like watching the LSO on LSD. Seventy or so played a kind of electronic dulcimer performed using the hairs on one's forearms. This took the place of the conventional violin and led the ensemble. There seemed to be a wind section, but with eight bells, a startling array of buttons and a mouthpiece so large it required three players blowing through funnels, I expected a serious amount of noise. \"Drink up!\", Falik shouted.",
        "All around us, people were taking their seats and clinking glasses of this amber liquid. \"What the hell is this?\" I asked, eyeing the stuff curiously. \n\n\"It is produced from the vaginal glands of a large mammal on a distant planet. Today is a festival in celebration of our relationship with that planet, which is where the orchestra has travelled from. It has taken them two of your centuries to be here, but they live for over a hundred thousand years, so this is only one stop on their tour.\"\n\nThey were humanoid, and mostly nine feet tall. I had seen some of them in the intergalactic arrivals hall when I first checked in. \"What are they going to play?\" I asked above the increasing din.\n\nFalik tapped a small lectern on a metal rail in front of us - the only thing separating us from the orchestra, in fact - and it produced the program in seven thousand languages. Mine was not one of them, so Falik translated. \"It is a new symphonic work by their leading composer, commissioned specifically for this occasion. It integrates symbolism, planetary alignment, ritual and drama. We must drink this before they begin\". I eyed the liquid again and, after more prodding from Falik, downed it. \n\nThe liquefied essence of a faraway mammal's pussy. Spicy, slightly sweet, a bit like my first try of whiskey when I was eleven. I had the strongest erection of my life ninety seconds later.\n\n\"Jesus, this stuff is quite something. They want us all to drink this?\"\n\nFalik didn't answer. Her right hand was already inside her shorts and she was masturbating, eyes closed, head back, mouth open. She came almost at once, relaxed, and came again. Regaining her composure, she explained, \"they have discovered a substance which enlivens every sexual receptor in our brains. Your glass was mixed with rainwater from your planet, to avoid its fullest effects. Water destroys much of the active ingredient, which is found only in this one mammal. Its drinking is the most powerful sexual emotion we are able to experience. Excuse me\". Her hand went below again and she circled her clit until a string of orgasms kept her quiet for a while. \n\nMy erection refused to subside. All around me, as the orchestra began its symphony with low, almost subsonic notes from the eight-belled wind section, two million women were coming, in synch, some very loudly. The din was unbelievable. Most of the men had their cocks out and some were already coming, splashing partners and neighbours with huge torrents of cum.\n\n\"This is going to get messy\", I offered. Falik, pausing to take in the sound of the ensemble - and I now realised why it had to be so loud - assured me that this is a red-letter day in their calendar. \n\n\"We very rarely get to experience this. Perhaps this is as close as we can come to being happy. It is a real joy that you are here to witness this.\" Her hand disappeared once more, and then she simply gave up and stripped off. All around us, clothes were flying into the air as people got naked and just went at it. \"Would you mind if we moved through the audience? There might be some people I know, and I'm desperate to be fucked. You may choose anyone you wish, although I warn you\", she paused to come once again, two fingers in her increasingly moist pussy, \"once word gets out that you are who you are, I anticipate that you will be totally fucking mobbed.\"\n\nWith that, she stood and waved to a friend of hers a few yards away, who was having his dick sucked by a luscious blonde. \"Oh well\", I muttered to my flagpole cock, \"when in Rome...\"\n\nFalik was right. Word spread instantly and, even above the bellows of the wind section, who were now getting into full stride and using all six hands, I could hear the excited, lustful yells of hundreds of incredibly beautiful women approaching me, stark naked and high as kites on interplanetary pussy juice. I grabbed my cock and dove in.\n\nIt wasn't until I was up to my aching balls in one girl from behind, licking the pussy of another who straddled her, and enthusiastically fingering one with each of my hands, that I considered myself to be in heaven. The orchestra continued its lengthy symphony with alternating soft dulcimer sections and almost raucous barks from the winds. A corpus of individuals were clearly taking some kind of part in the symphony, and these were arranged at the front in a special enclosure. They were drinking litres of the juice and using the hand-held fluid enhancer I had so enjoyed in the hotel room. Most of them were simply coated in semen. The jets of come, the positions and the howls of pleasure were all integrated into the score, which made them performers as well as members of the audience. The rest of us just fucked anything which didn't get out of the way fast enough.\n\nFalik was bouncing up and down on her friend's lap while he sucked a guy who was fingering his girlfriend who had a guy in her ass, and his mouth was wrapped around the breast of a girl who's pussy was being pounded by the guy who was licking the anus of the girl I was balling. And something nice was going on behind me, but I wasn't terribly sure who was doing it. It might have been more than one tongue. It sure felt great.\n\nI had thirteen explosive orgasms, each producing a shower of semen the size of three or four orgasms on Earth. There wasn't a single person in those three million who was not covered with something. Everyone came. There was even a scoreboard above the orchestra which was reading some unbelievable number approaching 25 million. This was the number of times the audience had come since the start of the symphony. Looking at the state of the audience, I believed it.\n\nSome people had simply passed out. This didn't stop one enterprising girl who was moving from one to the next, sucking them to hardness and sliding onto the guys to stimulate herself yet further. After twenty minutes of the concert, I was covered in sweat, my own semen, and perhaps three or four other people's contributions which hit innocent bystanders. My balls were coated with pussy cream from eleven women. I had licked sixteen more. Plenty of guys had offered me their cocks, but I wasn't quite ready for that step. Besides, most of them had found a convenient place nearby to drill until they were happy.\n\nFalik was laid out, being double-penetrated by two guys, with a third in her mouth. A fourth was coming all over her, yet again. By some miracle, Annabelle from the ministry found me. There was streaks of semen in her hair and her skin was a river of the stuff, but that didn't stop her from kneeling up and begging for me to enter her. Warm, probing tonguings continued behind me as I slid into her pussy. A third girl straddled Annabelle and offered me her pussy, which I licked hungrily. Behind her, in a feat of athleticism, one of the nine-foot tall humanoids penetrated her ass. By the sudden, almost violent jolts he gave her, I guessed he was packing a cock commensurate with his enormous height. Glancing beneath her while I caught my breath, and giving her a short break from a long string of orgasms, I noticed that he had testes the size of tennis balls and was clearly not utilising his full length - a full ten inches remained outside Annabelle's lovely bottom most of the time. When he came, his balls flushed fluorescently and became slightly transparent, so that I could see the thick liquid jetting up pipes and connecters in his body, and then up his enlarged, enormous shaft. His large hands had gripped Annabelle's breasts as he climaxed, clamping her in place, while he filled her rectum with his seed.\n\nThere was little point in laying down for a rest. As soon as I did, three women pounced on me and fucked me with such vigour that I came three times in a minute. I was sweating, and felt as though I must be approaching exhaustion. The symphony was reaching some kind of conclusion on stage, wind section blaring out a repeated, cycling melody in quarter-tones, some kind of alien hunting call or anthem, which many of the audience took up in a steady, high-pitched chorus. As massive drums began to beat in time, the dulcimers joined in, and the audience timed their last, cataclysmic, simultaneous orgasm with the final beat of the work. With a huge crash, three million beings climaxed, came, orgasmed, yelled, wailed, howled and then were silent.\n\nThe effect was extraordinary. Utter silence descended on the park. The only sound was the muted, exhausted panting of the participants. Falik had ended up next to me, with one guy collapsed on top of her, his sperm even now running down her thighs, and another guy had just finished in her mouth. She swallowed, and turned to me. Her face was flecked with semen and it looked like she'd tried to use it as some kind of therapeutic shampoo.\n\n\"Are you OK?\" she whispered. I nodded, a huge grin on my face. \"It is time for the alignment. Our planets reach these positions only once in many centuries. Their planet will briefly eclipse their home star. It is a greatly spiritual moment for these beings.\" I nodded again and followed the raised stares of the multitude to the heavens. \n\nThe city's lights had dimmed, as had the enormous lamps on the stage and in the auditorium, so that the night sky was revealed. I had never seen anything stranger. Massive, red planets framed the view - one with an impressive set of concentric rings which spanned many millions of miles from the planet's centre, and were almost coming apart at the edges, with thin white trails of material departing from their brethren, like spindrift from the peak of a great mountain. Their moons, seven in total, shone brilliantly and colourfully in different parts of the sky. The stars formed a carpet of brightness and colour behind this display, and before long I could see the alien system at the focus of this event, but only with the aid of a massive, square screen which emerged from the roof of the stage and acted as a giant magnifying glass. A huge, green planet was edging closer to the yellow star, so much like my own sun that I became instantly homesick. But there was nothing familiar about the planet, which must have been covered in vegetation, or else have a thick, green atmosphere. As we watched, the planet occulted the star, which began a tumult of howls, air-horns, music, shouting and leaping around from all the participants. From utter silence, there was now utter bedlam. \n\nFalik jumped up and grabbed my arm. \"Its going to get totally crazy around here, and the party will last all night. I've been asked to make sure you get some rest, in case it jeopardises the experiments we have planned for tomorrow. Can I tempt you away?\" I nodded with a grin, and Falik led me quickly through the dancing throngs to the exit, and then quickly onto a waiting vehicle which was immediately rocketing skywards. The view of the park was unbelievable - lights, people, fireworks of so many colours I lost count, symbols flashing into the sky, alien languages projected onto the clouds with lasers, even projected onto the face of the neighbouring moons and planets. \n\n\"What a view\". We said it together, and laughed. She was still coated in god knows how many kinds of sperm. One streak across her breasts had a slightly yellow tinge. \n\n\"Did you have a good time?\" she asked, beginning to clean herself up with cloths pulled from her bag. \n\n\"Yes, I most certainly did. I feel like a bit of a celebrity\". She beamed at me.\n\n\"I would love to have you inside me again, but we really must give your systems some rest.\" A flash of disappointment, which I'm sure she sensed. \"Don't worry. There will be many other opportunities, and many other girls\". But I want you. \"I know. Tomorrow.\"\n\nI spent long moments gazing out at the city, resplendent now in a purple evening haze. I thought about the sunsets at home, like the ones in the national park. The experience of being here, so well managed and structured until now, seemed to have broken through some barrier in my mind. Perhaps the intoxicant at the concert, or the dozens of orgasms, or my burgeoning feelings for Falik... my brain was overloaded. I had one question and it simply needed an answer.\n\n\"Falik?\" I said softly. She turned. \"How long?\"\n\nMy facial expression must have told her everything she needed. She looked away, out of the window, for a few seconds. Then she turned back and looked me straight in the eye.\n\n\"Forty years and three months.\" A short pause. \"It was a fast a journey as our technology could produce.\"\n\nI stared out of the windows again. Tears came. Then pain. \n\n\"I'm not sure I can deal with that\", I said, my voice tight. \n\n\"You have not aged\", she said, trying to calm me. \"Your body was in stasis, and the technologies we have here will ensure a long and healthy life...\" she stopped, heartbroken at the sight as I sobbed behind my hands. \"And there are ways...\" she tried to go on, \"ways we can get you back\". \n\nI held up my hand. \"I think I just need to rest.\"\n\nShe was obviously saddened. \"Yes. We are arriving now. I will see you tomorrow.\"\n\nThe vehicle landed on the roof of the hotel building where I had awoken this morning. It felt like a thousand years had passed in the course of this incredible day. I paused at the door for a moment, leaned in to gently kiss Falik, thanked the driver with my mind, and strode resolutely into the hotel.\n\nI sat on the bed and tried to sort out my head. Everyone I knew was either very old or dead. My parents, for sure. Everything would have changed. My country might not even exist... who knew? I got up and opened the curtains, taking in the night-time scene. A billion lights articulated towering structures. I could see the park where the orgy had taken place -- it looked like they were still partying, hours later -- and the mile-high trees with their rows of lights. Above, spacecraft or aircraft, I couldn't tell, were streaking across the sky. This place, this incredible, beautiful world, this... my second chance. My second life. I had to embrace it. The past was gone. Embrace it, embrace it...\n\n***\n\nA wonderful, long stretch and I began my second day in Takanli. It had taken me only a second to remember where I was, and why - yesterday's memories were still very fresh - and within a few minutes I was showered and ready for whatever these amazing people wanted to do.\n\nThe city was alive with activity. Did they ever stop, I wondered? Come to think of it, did they ever sleep? None of the scientists had mentioned it. Perhaps they had conquered even that basic inconvenience and now had 24 hours of the day to work, play and proceed towards their manifest destiny. Well, at least I assumed it was 24 hours, but that was probably naive. Did the sun set? I had noticed the evening dimming, but then all the lights and lasers at the concert had turned evening into a bright, sunlit morning. \n\nI was pondering these questions when there was a soft knock at the door. \"Aha, the Three Musketeers! Good morning!\" It was Annabelle, Beatrice and Catherine, dressed in something tight and red, like catwomen among the stars. \n\n\"Did you sleep well?\" I nodded, and the three urged me back into the room. \"We have arrived a little early, to see that your every need is catered for\". Beatrice held aloft the metal sphere which had encouraged my nuts to such extraordinary feats yesterday. \"We also wanted to ensure that there had been no ill effects after the concert last night. Are you OK, in every respect?\"\n\nThe three were grinning cheekily at the obvious pretence they had created. An inspection was surely required, I was told, to check against abrasion, infection or exhaustion. \"We cannot be too careful...\" Annabelle warned me, pushing me back on the bed. Within moments, the three had stripped off my bathrobe and soft, warm tongues were everywhere. I shared a long, deep kiss with Beatrice while Annabelle gently sucked my hardening cock to life and Catherine shed her tight, leather trousers to allow me access to her pussy. \n\n\"Who's first?\" I wanted to know. There was a brief scramble and some pushing and shoving, before Catherine emerged on top, in more ways than one. Her wetness was wonderful, surrounding me. Hard nipples were placed near my mouth and received the wash of my tongue. Beatrice held her colleague from behind, rocking with us back and forth, her hands cradling Catherine's hips, tongue drawing wet patterns on her neck and back. \"Are you all bisexual?\" I asked.\n\nBeatrice nodded and, as if to prove it, turned to let Catherine kiss her. Annabelle straddled my head, her moist pussy lowering to my mouth and opening to allow my tongue inside her. The three kissed, although I couldn't see and kept trying to duck under Annabelle's soft thighs to see what was going on. There was some giggling and then a soft moan from Catherine as she came. I knew all about that, her pussy rippling around my cock.\n\nShe jumped off and let me fuck Beatrice, while Annabelle licked my taste from Catherine's wet slit. There was a muted beeping from somewhere, and Beatrice reached for her wristpad. \"We have only a few minutes before the working breakfast. Quickly, let's come together\", she said, slightly breathless. I re-doubled my efforts, thrusting hard into her. \"We want to share it\", she whispered as I fucked her. \"Withdraw, and we will finish you together\".\n\nMentally ticking an important element off my list of Things to Do Before I Die, three warm mouths surrounded my balls and increasingly engorged cock, awaiting the delivery. Beatrice got a good rhythm going with my penis in her mouth, while the others sucked a testicle each. Beneath, fingers probed deep into wet, beautiful openings. Delay was impossible. Releasing me at just the right moment, Beatrice received the first blast of my orgasm, while the others immediately licked her face and mouth to taste me. Seven more spurts followed, landing in Catherine's mouth, over her shoulder, then down her chest, with more in Annabelle's direction, straight into her mouth, and a final jolt of semen over Beatrice's nose and lips.\n\nGiggling like schoolgirls, the three shared my semen, licking patches of sticky whiteness from faces, breasts and skin, kissing deeply, rubbing the liquid in until only a semblance remained. A quick visit to the bathroom for us all, and three minutes with a vibrator for Beatrice, and we were finished.\n\nWe tumbled into the elevator, one of the girls assuring the waiting scientists that we were, in fact, on our way, and had a leisurely kissing session as we descended. I was almost hard again by the time we reached the lobby. \"Have a good day, girls\", I called, giving the nearest ass a hearty slap as they skipped out of reception into the sunlit day.\n\nDr. Manisti emerged from the breakfast room to guide me in. She was as polite and courteous as yesterday, seating me amid a table of scientists, still in their white coats, who stood as one would for royalty when I arrived. There seemed little point in trying to talk them out of these courtesies, and in many ways, I enjoyed them. We were seated, and breakfast was served.\n\n\"I heard that you had quite an experience at the performance last night\", Manisti asked while pouring me strong, Brazilian coffee. \"Our customs must seem rather strange. This was a very special event and we are delighted that you were able to take part\".\n\nAgain, I was struck by this emotionless tone. We were, in effect, talking about an absolutely massive orgy, on a scale unheard of even in the ancient Bacchanals of Rome and Greece, about 25 million orgasms and arching ropes of semen flying everywhere. I had fucked a dozen girls. This was not simply an 'experience'. But, what more could she say?\n\n\"Yes, I had a terrific time, thank you. There were many interesting elements to the performance.\" I chewed toast and marmalade. How the hell did they manage that? I asked about it."
    ],
    "authorname": "Farmerboy",
    "tags": [
        "alien11111",
        "orgy",
        "alien abduction",
        "cruiser",
        "female alien"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/alien-impulses"
}