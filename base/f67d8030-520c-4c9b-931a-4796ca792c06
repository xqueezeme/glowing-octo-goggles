{
    "title": "Christian College Sex Comedy Ch. 28",
    "pages": [
        "*Earned leadership is a blessing; assigned leadership is a burden*\n\n(Frontma: bringing lines to life)\n\n(Yes, this tale is supposed to be somewhat humorous and outrageous too. While not always comedic I'd like to think it is mostly a good-natured romp.)\n\n\n\n\nTHIS IS HOW IT IS GOING TO BE\n\nIt started at 6:45 as we began filing out of the dorm toward the dining hall and breakfast. We received texts, or our dorm mothers received them if we didn't have that function, assigning us a tribe we belonged to. What was a tribe? No one seemed to have a clue what this entailed for us.\n\n\"So,\" Iona was the first to ask me, \"What tribe are you part of?\"\n\n\"My tribe's called the Mediator tribe,\" I responded. \"What lame-ass name does your tribe have?\" Iona blinked at me, took my phone from my hands, and looked at it while we walked.\n\n\"Mercy and I are in 17,\" Rio sneered. \"Why did your group merit a name and ours didn't?\"\n\n\"Because Zane doesn't have a tribe,\" Iona figured. \"He is not of the mediator tribe; he's a mediator. The real question is, how many mediators are there and what is their responsibility?\"\n\n\"I'm in tribe three,\" Vivian volunteered. \"I do have a notation but no indication who to see about it.\" The conversations around us were going in the same general direction, the girls trying to figure what sort of disruptions this would cause. The teachers put a kibosh on students walking around and finding out where their friends were placed so the text and phone messages being tossed around were obscene.\n\nThe surprise going to breakfast had saved virtually all of the freshmen from Handmaiden's Duty but they snapped us up heading for Assembly. I had Frederica Nicholas who decided to make a game of her giving me a word and me having to create a poetic verse. I rapidly learned the more risqu\u00e9 my verse, the more touchy-feely she became. (And she is a Rhaine supporter, huh?) I am a glutton for sexual foreplay no matter where it comes from.\n\nEntry into the Assembly Hall brought its own special form of confusion. All the seats had numbers for the tribes that could sit there. I didn't find my group anywhere but I did catch the fact that Christina's group had been broken up. I stopped by Heaven to put a comforting hand on her shoulder because she looked terribly unsettled before I approached Ms. Goodswell on the stage.\n\nMy spiritual advisor stood up, walked to the edge of the stage, and knelt down so we could talk privately.\n\n\"Hi, Teach. I can't seem to find my groups/tribe's area,\" I said pleasantly. \"Can you help me out? Hell, can you tell me what's going on?\"\n\n\"Zane, your seat is right over there,\" she said, pointing to a chair on the front row \u2013 aisle seat. She smiled sadly. \"All I can tell you about this program right now is that I trust you.\" Oh crap, that didn't sound good. Sitting on the front row \u2013 the region normally reserved for seniors \u2013 was just as disturbing. I sensed an epic boning in my future and I was sure I knew who the chick with the strap-on was.\n\nChancellor Bass came to the podium and led us through the first ten minutes of the session. I could tell she was simmering with anger and resentment over whatever the upcoming fiasco was, and she showed it. She introduced Vice Chancellor Scarlett, then sat down abruptly. Her enthusiasm wasn't muted; it was buried in the core of the earth.\n\n\"Greetings, students of Freedom Fellowship University; I believe we stand at the first step to a great, glorious, and blessed experiment,\" Vice Chancellor Dr. Victoria Scarlett began. Her plan did sound grandiose, was certainly going to be famous (or infamous), and whichever supernatural powers put their mark on this train wreck, I was sure we'd discover the Arch-angel Morningstar also had his sulfuric fingerprints on it when the CSI's were finally brought in.\n\nThe basics of the scheme: There would be eighteen tribes of fifty or more members. Each tribe had all four grades in it but was focused on declared majors so that the girls could support one another. Each tribe would internally determine how they would regulate themselves as well. Externally, relations would be overseen by the Mediator \u2013 yes, that was in the singular \u2013 as in one: me. \n\nAt this point, I was wondering if jumping up, shooting Scarlett in the heart, and crying 'Sic semper tyrannis' was appropriate. I didn't have a gun and realistically, Victoria didn't deserve death for what she was putting all of us through. A few days in a pillory would suffice. No, she was making me be the 'Man' of our academic community, our judge and arbitrator.\n\nAs for my job qualifications, or lack thereof; I am considered morally loose, if not downright deviant. I'm an eighteen-year-old boy telling twenty-one-year-old women what to do, I have no legal experience \u2013 oh, yes, and half the campus hates my guts. I almost missed it when Dr. Scarlett added that Vivian would remain my guardian. \n\nMaybe Vivian would throw herself in the path of a sharpened pencil, pen, or stylus aimed at my heart by any number of the young ladies that wanted me dead, just like a Secret Service Agent.\n\n\"You will be informed of the location of your first meetings. Each tribe will meet at eight o'clock tonight and tomorrow night to create the foundations of your group,\" Dr. Scarlett informed us.\n\n\"Tribes five and seventeen will be meeting in the Solarium of Alan Smithee dorm, if that is okay with Mr. Braxton.\" Victoria looked my way. I stood up in case anyone missed my discomfort for being called out and actually asked by a lead educator for anything resembling permission on this campus.\n\n\"Eight o'clock tonight?\" I questioned. \"I don't know if that works for me. I have a Brazilian body wax at eight and have scheduled my eyebrows to be plucked at 8:45, plus there is a new episode of NCIS: Los Angeles at nine.\"\n\n\"How about they promise to keep the noise level down?\" Victoria volleyed right back at me without missing a beat.\n\n\"Very well, Dr. Scarlett, if you personally guarantee their behavior, I'm okay with them using my room,\" I allowed. I couldn't provoke Scarlett and I couldn't embarrass her, so I was back to facing her rear-bound artificial cock catching up with my behind. I sat back down. Victoria quickly exited center stage and a bitter Chancellor ushered us through the last of the service.\n\nI waited outside the Assembly Hall for my friends and my Handmaiden for the moment, Theresa Yates. Christina and Chastity caught up with me first, both giving me a curious look.\n\n\"Bro,\" Rio sneered as she and Mercy joined us, \"we need to discuss your future abuse of power, bribes and kick-backs you are going to get. Nice banter with ol' Scarlett too.\"\n\n\"Yes,\" Christina said sarcastically, \"being flippant with the Vice Chancellor backfired so spectacularly the first time, it definitely needed repeating.\" Her criticism really sucked because I always secretly wanted her to think well of me.\n\n\"What's your plan?\" Chastity prodded me. She was always helping me out when she got the chance. As she finished, Iona, Hope, Faith, and Heaven showed up.\n\n\"They split us up,\" growled Heaven. \"Do something, Zane.\"\n\n\"He just found out about this,\" Iona responded before I could. \"Give it time and combined, we will come up with a solution together.\" I sighed with some relief at her assistance and then I blinked. The powerful kiss I planted on Iona's lips caught everyone off-guard.\n\n\"Freaking brilliant!\" I complimented her gaily, giddy with glee. I didn't have an actual plan yet but I had a direction to propel my thought toward. With my mind awhirl, I caught sight of Theresa moving past me on her way to class.\n\n\"Hey, Theresa,\" I called out. \"What are you having me do today?\" She looked a bit shocked.\n\n\"Zane, we are no longer allowed to call on you for Handmaiden's Duty,\" she informed me.\n\n\"Oh, He...ck no,\" I choked out. \"Who says?\"\n\n\"The Vice-Chancellor declared you to be outside the tradition,\" she stated sadly. I wasn't going to stand for this. Victoria was building a wedge between me and the rest of the student body.\n\n\"Iona, do that tech-thing that you do and inform the ladies that by the authority vested in me as mediator, I am reinstating myself as part of the Handmaiden's duty until...over half of the tribal leaders petition that I do otherwise,\" I announced.\n\n\"By tech-thing, do you mean send a text message with an accompanying e-mail to all the students on the school registry?\" Iona regarded me quizzically.\n\n\"Zane,\" Chastity worried, \"are you sure you have the authority?\"\n\n\"Of course he has the authority,\" Rio declared. \"He's the freaking mediator.\" Sometimes I would really like to get a word in before the conversation runs away from me.\n\nI swatted Iona on the butt \u2013 she squawked.\n\n\"Chastity, this is clearly a game of chicken, so why not see how far Scarlett is willing to go,\" I replied. The look Christina gave me restored my faith in me; her eyes beamed at me, alight with an intellectual fire. I had one last thing to do while the chaos boiled one last time before the ebb: I hugged Rio.\n\n\"I want you to break into Gabrielle's place,\" I whispered in her ear, \"wait for her to come get you, and tell her this: There is no Cordelia Dresden.\"\n\n\"Back off, Joker,\" Rio punched me. Rio trusted me not to put her in harm's way if I had another choice and Gabrielle knew that Rio would be the last person any sane individual would trust to do this.\n\nShe gave no hint of a reply to my request. The assumption was, if Cordelia didn't know what we were up to, she couldn't figure out a way to stop us, and right now I wanted a way for us out of her little game here at FFU. My current theory was that the girl I knew as Cordelia didn't exist before she came here, she was an invented personality, and I wanted to know who the inventor was.\n\nOh yeah, back to my actual life where my academic and social lives were in upheaval because my current nemesis (or one of them anyway) was a crusading idealist. I swear to God, if I survive this place, I will never forgive Aunt Jill for not sending me to the University of Hawaii, which was my first choice for college. All I had to worry about there was hurricanes, tsunamis, volcanoes, and the wrath of the island spirits for despoiling virgins \u2013 simple shit.\n\n\"Zane, you will discuss the merits and sins of the concubines of King Solomon with me,\" Theresa said, as she passed me her backpack to carry. Life rolled back to semi-normal and we separated to make our way to our first classes of the day. That illusion took another ill turn when I entered English class with Ms. Goodswell. She gestured for me to come to her desk before the lesson began.\n\n\"Zane,\" she informed me softly, \"none of the female teachers or administrators at this school can give you orders, only suggestions. Only Dr. Jennings may truly compel you to do anything.\"\n\nThis bombshell was the reason she said she trusted me back in Assembly. The only one making me do the right thing was me. I had never considered me Mr. Responsibility before so I was in for a crash course in having authority over 900 students and 100 teachers. I told Virginia Goodswell about my decision concerning my Handmaiden's Duty to get her input, then compelled her to treat me as any other student \u2013 because apparently, I'm in charge of students now.\n\n\"There are old soldiers and there are bold soldiers, but there are very few old, bold soldiers,\" she reminded me. \"Never forget, no matter how dark it may seem, Zane, you are never alone.\"\n\n\"I could always use a picture of you in a white, low-cut bikini to inspire me,\" I hinted.\n\n\"Mr. Braxton, by the authority vested in me by the mediator, I order you to take your seat so we can begin classes,\" she smirked. Oh, the irony: stymied by my own hubris.\n\nCelia Wanamaker snapped me up coming out of English class. Vivian was waiting for me and Raven was in tow \u2013 right up until Paige snapped her up. Celia had me name a biblical character for each letter of the alphabet. Paige had Raven quote bible verses \u2013 backwards. As if there was any doubt my day could get worse, it did so immediately.\n\n\"Oh, the great Priest-King approaches!\" screeched Rio on seeing me. \"We all must genuflect \u2013 that's kneel down until your head touches the ground for you stupid bitches \u2013 until the Mediator passes.\" The horrible, horrible thing was that dozens of confused girls started doing just that.\n\n\"Hold on,\" I held up my hands for attention, \"Hold on. Rio is mistaken. Genuflecting is only done during the Holy Days of Christmas, Good Friday, and Easter.\"\n\nOkay, I made that up off the fly and I figured that I wouldn't be at school for Christmas, and Good Friday and Easter were next year and I'd worry about that then. For now:\n\n\"Emily, Rebecca, Henrietta, and Magdalena, please carry Rio to her next class \u2013 by the legs and arms,\" I instructed some of the closest students. \"If a door or other object gets in the way, don't hesitate to use her head as a battering ram.\"\n\n\"Damn, Bro, that's harsh,\" Rio giggled from the floor. I knelt beside her.\n\n\"Yeah,\" I whispered, \"like being man-handled by four girls isn't going to turn you on.\"\n\n\"Don't tell them that,\" she whispered back. I rose and continued on to class. A wiggling, squirming, cursing, and fighting Rio followed us.\n\nI went through the same rigmarole in Biblical Archeology. I told the teacher that using my authority over students, I was instructing her to instruct me as if I was any other student...because I was a student and this was the area of my authority; right? She bought into my reasoning with some relief.\n\n\"How was it?\" I mouthed to Rio once class was well on the way.\n\n\"Two hands all the way up the thigh \u2013 one knows I forgot my undies and was thoroughly soaked \u2013 two titties grabbed,\" Rio described what she'd been subjected to, \"and I got to bite Magdalena's butt. I love those soccer player asses. You are most likely the best friend I will ever know; thank you.\"\n\n\"Always willing to help a fellow pervert out,\" I grinned back. Rio winked, then returned to work. I needed all the humor I could get because it was going to be a long damn day. By the time I made Marksmanship at three o'clock, I was damn happy to shoot something. I got some relief by having my best day ever, scoring a 53 (out of a possible 100) at the range. When I finished, I noticed a large number of my club mates standing close by.\n\nWOMEN AND THE WORLD AT LARGE\n\n\"Yes?\" I questioned the ladies clustered behind me at the firing line.\n\n\"Oh, we are huddling behind your manliness,\" Daphne, one of the better shooters, joked.\n\n\"Manliness? Daphne, you just shot an 87. Hell, if you ladies want to be safe, stand in front of me, because apparently that's the one place my bullets don't go,\" I chided her.\n\nThat was a slight exaggeration. I was a pretty good shot out to 50 meters, but when I have to use binoculars to even see the target some of these girls are nailing, I know I have a long way to go.\n\n\"Zane, police your station,\" Hope instructed me. \"Everyone, it is time for field training.\" This was the other part of marksmanship...sneaking around and spotting targets in the woods. We didn't use live rounds but it was still fun stuff.\n\n\"Gung-ho!\" I responded to Hope. I'd heard that this was the battle cry of an Asian-American unit in World War II; Japanese I think.\n\n\"I'm Korean, Zane,\" Hope tried not to chuckle. \"We are not exactly friends with the Japanese.\"\n\n\"If I stop saying it will you ask your Daddy not to come?\" I inquired hopefully.\n\n\"If you keep saying it, I'll stop telling my Father I can't live without you,\" she countered.\n\n\"You can't live without me?\" I questioned.\n\n\"Of course I can live without you, but I had to think of something to stop him from parachuting here in the dead of night and slitting your throat,\" she confided.\n\n\"You are joking; right?\" I worried. Hope was nonresponsive as we got our gear together for the hike. \"Hope, tell me that was a joke.\" Once we passed into the forest, Hope was quiet, business-like and nothing but. We were a mile into our trek when Hope settled down to study the environs. Per procedure, Hope watched to her front and left; I crouched at her back, facing away, and watched to our rear and Hope's right.\n\nWe would stay this way until Hope set up on the target, which was when I became her spotter. Since we weren't there yet, I scanned my area one more time, then cupped my right hand and reached behind me until I touched Hope's ass. I waited for a reaction of any kind but none came. Three seconds later I began to gently coast along her posterior, lightly squeezing her buttocks and rubbing along her cleft.\n\nWith a careful ear, I caught Hope's breath gaining in intensity. A few seconds later, she reached back and tapped my arm lightly so I stopped. Hope then rose carefully and we continued on our way. During the entire encounter, neither one of us had deviated from our watchfulness, which gave the whole situation a greater erotic appeal for me.\n\n\"Zane,\" Hope caught my attention as the last rifle and bullet was secured away, \"I really wasn't sure how you would deal with me...being better than you. How do you do it?\"\n\n\"All the training and skill in the world isn't worth a damn if you won't fight,\" I tried to explain. \"A willingness to fight without talent is a waste. Hope, you didn't defeat me; you beat me.\"\n\nShe seemed to be searching for my definition of those two terms.\n\n\"Let's walk over to Orienteering before Heaven pops,\" I suggested. \"We can both pin Heaven down but short of killing her, I'm not sure how to stop her.\" Hope chuckled at that assessment and nodded. \"Hope, you put me on the mat and made me tap out \u2013 you beat me. You haven't discouraged me from coming at you when I feel I'm more capable \u2013 you haven't defeated me.\"\n\n\"Beating implies physical dominance but defeat is a state of mind,\" Hope replied as she stripped my definitions bare. I swung back my hand to spank her ass. Hope flinched slightly as instinct recognized the incoming blow and dictated a menu of responses, most of which involved causing me pain. I spanked her left ass cheek; Hope yelped and glared over her shoulder at me in feigned annoyance.\n\n\"You are a very verbose wench,\" I shook my finger at her.\n\n\"Do you want them to perform an extensive autopsy to figure out where I stuck that finger or are you going to remove it from my face right now?\" she challenged me mirthfully. I stepped to her side, draped an arm around her waist; a second later she hesitantly echoed the gesture.\n\nWhen we got to Orienteering, Hope and I parted company and I joined my fellow students as Heaven stood before us. The silence dragged on...and on until I finally felt compelled to raise my hand.\n\n\"Yes, Zane?\" Heaven asked sweetly. You know; that 'sweetly' that says, I have an iron skillet to the head in my immediate future.\n\n\"Class? Are we going to have class today? Please?\" I mumbled.\n\n\"I don't know, Zane,\" Heaven glared at me with a vicious smile stitched to her face. \"Do we have your permission to have class today? Apparently we need to.\" Oh, fuck-buckets; Hope had probably had the same instructions and blown them off; Heaven was going a different way.\n\n\"I understand,\" I announced with dignity as I stood and walked up beside Heaven before facing the rest of the class. \"As your appointed mediator, I think we should come forth and pray on the matter. All of you come to the front and kneel in a semi-circle; you too Heaven.\" I put a hand on her shoulder and put pressure on her to kneel beside me \u2013 right beside me.\n\nThe girls gathered around, Heaven was on her knees only inches from my crotch with her eyes flickering from my hard cock (I'm giving strong consideration to slamming that bastard in the middle of the US Tax Code to make it calm down) to my eyes. Soon I was in the center of a waist-level sea of slightly swaying female heads.",
        "\"Let us pray,\" I intoned. \"Lord, guide us and give us strength to be true to ourselves, have faith in the gifts of insight, determination, and self-worth you have given us. Also, give us the vision to see what is wrong, the knowledge to understand when we hear things that are nonsense, and the will to forge past those words so that we find our own voice. In Jesus Christ's name we pray; Amen.\"\n\n\"Amen,\" the girls said, at varying volumes and with varying conviction. They were all there, on their knees, staring at me. I swear to God, if one of them had 'Baaa'ed, I'd have died on the spot. \n\n\"Okay, who believes I'm more qualified to teach this class than Heaven?\" I began. Two girls started to raise their hands then self-consciously reversed direction.\n\n\"You are all correct; I am totally unqualified to teach this class. I am totally unqualified to tell any of you to do virtually anything. I don't know more about life than any of the rest of you do. At eighteen, I'm younger than most of you. I'm a guy, nothing more. You ladies don't need me. Really, do any of you have any need of me whatsoever?\"\n\n\"Sex,\" blurted out of the mouth of Ruth, one of the senior club members. No one said anything for a few seconds. Okay, I could deal with this.\n\n\"Fine, sex. With the Purity Pledge here, do any of you think you would need me for sex?\" Twelve of the fourteen girls raised their hands; counting Heaven made it thirteen. I wanted to be anywhere else but in the deathtrap of my own creation. Screw that; I wanted to crawl into a deep, dark hole and pull the dirt in behind me.\n\n\"We hear you are really good at it,\" Benios tried to explain things to me.\n\n\"Brandi told us all about blowjobs. Those seem safe enough with the Pledge,\" Michelle added. Heaven started snickering at my expense.\n\n\"All right, everyone,\" Heaven raised her voice as she stood up, accidentally squeezing my dick through my pants as she did so, \"let's get started, and if no one screws up today, we can have Thursday's class in Zane's bedroom.\"\n\nWe finished the last class for the day and started leaving our outdoor classroom when Ruth put her hand on my lower arm.\n\n\"Zane, does a blowjob violate the Purity Pledge?\" she asked. That wasn't really what she was asking. Why would I know the specifics of a pledge that everyone knew I hadn't taken? No, what she was asking was if she could experiment with oral sex with me.\n\nThe other girls were not so surreptitiously hanging around for the answer.\n\n\"Honestly, I don't believe that fellatio is an acceptable alternative to vaginal sex unless it includes cunnilingus,\" I bullshitted. I believed that, but I was hoping the lingo would buy me an exit.\n\n\"What?\" Ruth stammered.\n\n\"Oh, I know that,\" Michelle giggled. \"Fellatio is when you take a man's phallus and put it in your mouth, and cunnilingus is when a man puts his mouth...down there,\" she pointed at her crotch.\n\n\"Zane, do you do that too? Put your mouth \u2013 \" Ruth hounded me.\n\n\"Sure,\" I confessed. \"Every man should, but in reality, it is more than tongue work\" \u2013 I wiggled my tongue \u2013 \"but finger work too. All you have to do is think how your fingers feel down there, except this time they are under someone else's control and you have a strong, flexible muscle added to the mix.\" I instantly knew I was missing something with this audience.\n\n\"You touch yourself; right?\" I questioned. By many of the guilty looks, I could tell that most of the class had, but a surprising number hadn't, Ruth included.\n\n\"I never have,\" Ruth replied. \"I was afraid I'd stop being a virgin.\" I nodded, walked over to the closest tree, and banged my head against it.\n\n\"That's enough for today,\" Heaven intervened. \"We can pick up this wonderful, non-orienteering discussion next time.\" She ushered me away. I was rather thankful to get away and into the company of someone I trusted. \"Are you ready for tonight?\"\n\n\"You mean am I waiting to pack your tight ass and drag my fingernails over your back until I draw blood? Yes,\" I grinned down at her.\n\n\"Evil!\" she giggled. \"You are sinister, vile, and an aberration to all that is pure in the world.\"\n\n\"Well, you are purely wonderful,\" I countered. \"So is this a case of opposites attract?\"\n\n\"Do you like to see me that way?\" my transvestite lover teased.\n\n\"Your legs on my shoulders as I drive into you; on your hands and knees; you looking down at me as you slide down that first time, your ass cheeks bouncing, with my hands kneading them as you face away, but most of all...with your head on my chest, asleep, your hair spilling over your eyes as you lay there \u2013 that's the best,\" I related.\n\n\"How can you be lusty and sweet at the same time?\" she murmured.\n\n\"It's how you make me feel, Heaven,\" I explained. \"It is no mystery \u2013 you are that good to me.\"\n\n\"Best boyfriend ever,\" she whispered, as she hugged my arm tight. On the final approach to Heaven's dorm, she gave me a nudge.\n\n\"So, how did you beat the ten-second rule?\" Heaven prodded me.\n\n\"We have a ten-second rule?\" I questioned.\n\n\"We don't, silly; it's Hope's rule,\" Heaven grinned. \"No one holds her for more than ten seconds. She has \u2013 had proximity issues.\"\n\n\"We were intimate,\" I pointed out. \"That probably helps.\"\n\n\"I hope so,\" Heaven laughed. \"The first time Christina and I barged into her room, we found ourselves staring down the barrel of a gun. Chastity was her roommate and she nearly freaked because she didn't know Hope had an automatic, much less slept with one under her pillow.\"\n\n\"Note to self: never climb in Hope's window looking for a midnight hook-up,\" I sighed.\n\n\"Hey,\" Heaven playfully grumbled, \"if you are crawling in anyone's window for some late-night booty, it had better be my window and my booty you are after, Mister.\"\n\n\"Or what?\" I teased. \"Are we back to me being in a deep, dark hole, you with the only key, dressed up for me in black strips of leather?\"\n\nThat description dated back to our first day on campus together when she hated my very existence.\n\n\"Bitch,\" Heaven growled with frustrated desire.\n\n\"I'll see you at the car in ten minutes, then.\" I gave a double pump of the eyebrows and left. We had been invited by Officer Danica Campbell of the Lancaster PD for a barbeque so we could get reacquainted. It was something Heaven was really looking forward to (not that I minded).\n\nDanica's house needed a little yard work but was otherwise an unremarkable ranch style house with an attached carport. Heaven's hands kept fluttering at her sides and straightening out her skirt. Me; I was in a long-sleeved pull-over and jeans and was having a much easier time of it emotionally. My only problem was our timetable; I had to be back before nine.\n\nWe could smell the burning charcoal from the front yard but I indicated to Heaven that we weren't friends enough to simply walk around back unannounced. We rang the doorbell, then rang it again. Heaven was going for a third, nervous try when Danica opened the door.\n\n\"Hey, you two, come on in,\" she greeted us, and stepped aside so we could enter.\n\nThe first aura I detected in Danica's home was of benign neglect; the house was inhabited but no one actually lived here. Everything looked old but not worn, except for one chair and the cabinet around the TV which had VHS tapes (?) and scores of DVDs from the past ten years. Danica was in a lumberjack shirt, jeans, and deck shoes with a noticeable lack of bra, panties, and socks.\n\n\"I'm glad you two showed up,\" Danica said, talking to us as we followed her through the living room to the kitchen. We could see the grill cooking away on a concrete patio through a sliding glass door.\n\n\"I almost showed up last night,\" Heaven blurted out, then looked mortified.\n\n\"You would have had to wait a while,\" Danica joked. \"I worked last night.\"\n\n\"I would have put her to sleep on the doorstep, covered her in a blanket, and given her a garden gnome to use as a pillow,\" I joked. Heaven blushed furiously and punched me in the arm.\n\n\"Be careful, Mister Braxton,\" Danica threatened me with a wink, \"I have handcuffs, pepper spray, and a taser \u2013 behave.\"\n\nI was hoping that comical exchange would have reduced the tension. It almost worked. As Danica opened the sliding glass door, she turned to say something. I have no idea what it was that got into her but at that point, Heaven threw herself at our hostess, wrapped her arms around Danica's neck, and kissed the lady cop. Danica staggered out the door onto the patio, grabbed the doorsill before they toppled over, and after her obvious moment of panic, put her other arm around Heaven's waist.\n\nThird Wheel Syndrome was kicking in for a while as the two kept tickling each other's tonsils and rubbing their bodies together.\n\n\"I, ah...wanted to kiss you since I talked to you on the phone,\" Heaven finally said. Danica stroked a finger along Heaven's left earlobe, wiggling it back and forth.\n\n\"Mission accomplished,\" Danica smiled. \"You don't date much, do you? That's not a condemnation; it's just, you have a raw intensity I haven't seen in a while. I like it.\" Heaven looked ready to dive into another lip frenzy when our hostess held her up. \"Let's check on the grill, unless you like your pork chops and chicken burnt as hard as the coals that made 'em.\"\n\nHeaven gave Danica enough lead to make it to the grill and open it up. My friend coughed and choked as the smoke billowed out; it was Heaven's first outdoor barbeque, or at least the first that didn't involve a professional pit master and a whole steer.\n\n\"Give her some room,\" I cautioned Heaven. \"I hear those things are hot.\" It was my first time too, but they had similar things in Thailand so I wasn't totally lost.\n\nEventually, I was forced to wrap my arms around Heaven from behind to keep her from bouncing all over the place. Her enthusiasm didn't bother me; she was fun and felt she had a lot of catching up to do. We chatted about her work and our school machinations. Danica made a crack about me and women putting me on my back \u2013 funny like a crutch.\n\nWe gathered in her living room; it was the only room that had the seats to meet our needs with the meat, coleslaw, hush puppies, and lima beans to eat. There was the promise of sherbet if dinner didn't fill us up. Things were going so smoothly that I almost missed Danica's little ploy.\n\n\"Heaven, since you are getting a beer, would you get me one too,\" Danica off-handedly mentioned. We were finishing up the meal and washing it down with the appropriate beverage \u2013 lemonade in my case and beer in theirs.\n\n\"Sure,\" Heaven smiled warmly, and off she went. She didn't hear Danica get up and follow her into the kitchen, though Danica did give me a wink.\n\nThe moment Heaven pulled the two lagers out of the refrigerator, Danica slipped up behind her and pressed her body into Heaven's. For a second, Heaven thought it was me and was looking over her shoulder to chastise me. I was following but was hanging back.\n\n\"Zane \u2013 \" then she noticed it was Danica, \"Huh?\"\n\n\"Hey, Precious,\" Danica purred to her, \"it seems your hands are occupied;\" gesturing to the beer in each. Danica stretched her arms around and cupped Heaven's breasts and began massaging them. Heaven tried to twist around but Danica didn't let her. She bit into Heaven's neck instead, sucking up and down from ear to shoulder.\n\n\"The last time you snuck up on me; now it is my turn. How does it feel?\" Danica continued. She pressed Heaven up against the refrigerator door, grinding her there for a while before letting Heaven turn and faced her.\n\n\"It feels good,\" Heaven gulped, \"but I know some other things I want to do to you that are better.\"\n\nDanica answered that by sensually sliding down Heaven's body until she was kneeling. From there she lifted Heaven's skirt, pulled down her double panties and started making kissing/slurping noises that made Heaven shudder in anticipation. Danica was bobbing in a slow, languid style that was pushing the tranny toward her own internal blaze. I saw the opportunity to come up and relieve Heaven of her beers before she dropped them.\n\nHeaven's hands dropped immediately to Danica's head and trembled with the desire to push Danica farther and farther down her cock. Danica held her off, having more blowjob experience than Heaven and I combined. I took the time offered to remove all our shirts and Heaven's bra before alternating kissing Danica's neck and back while playing with her tits, and going to Heaven and kissing her and teasing her nipples with my teeth.\n\nShe was over-eager and was tapping Danica's crown inside a minute, indicating the shortness of her fuse. Heaven gave a muted squeak followed by,\n\n\"Oh, God, that's so fucking good \u2013 take it \u2013 oh, God \u2013 take it!\" Danica did a masterful job of soaking up everything Heaven had to give and draining her dry afterwards.\n\nDanica had to hold Heaven's hips to stop my lover from sliding to the ground on her ass.\n\n\"I think we will all be passing on the sherbet,\" Danica grinned while licking her lips. Heaven nodded, first shakily but soon with much more assurance. I kicked off my shoes in my own endorsement of this plan and we were soon all migrating to Danica's bedroom.\n\nHeaven, new to the romantic aspects of sexuality, dove straight onto the bed and shimmied out of her skirt. Danica and I stopped at the foot of said bed and shed our pants (and underwear for me). As Heaven looked at us, I pulled Danica's hair aside and began kissing her from right beneath her ear down to the nape of her neck. Danica responded by pressing her backside into me and gyrating her ass on my crotch.\n\nDanica ran her left hand behind her back and began moving it sensually along my stomach to the base of my cock and up again. Her right hand stroked my thigh and hip on the other side. I countered by moving my left to her left breast, mauling it but leaving the nipple unmolested for now. My right hand went in a serpentine fashion to her crotch and hovered right above her clitoris.\n\nWe played tag with our intimate parts long enough for Danica to start sweating and moaning against me.\n\n\"Why aren't you married, again?\" she snickered. \"Oh, yeah, you being eighteen and all.\"\n\n\"Are you too much woman for one man?\" I countered.\n\n\"Actually, I've been looking for someone special,\" she confessed, but she wasn't looking at me when she said it. That wasn't lost on Heaven either; her jaw dropped. \"Don't freak,\" Danica reassured her. \"I know we don't have much in common \u2013 I'm a townie and you're a rich girl from somewhere else \u2013 but we have until spring if you want to hang out.\"\n\nIt took Heaven a few moments to digest that.\n\n\"I'd like that, Danica; I'd like that a lot,\" she smiled.\n\n\"Well, I'd like it if you came over here and kissed me before your boyfriend drives me totally nuts,\" Danica teased her. Heaven got on her knees and waddled to the end of the bed to join us.\n\n\"Wait,\" Heaven said at the last second, eyes wide with surprise. \"I have a boyfriend and a girlfriend \u2013 I rock!\" and then she dove into Danica's lips. Danica was propelled into me by Heaven's passionate embrace. She reciprocated by moving her hand off my hip and onto Heaven's semi-rigid cock.\n\nHeaven's phallus hardened quickly enough and she upped the tempo by buoying up her breasts and initiating a nipple fight between her tits and Danica's \u2013 wow, a freaking advantage I hadn't thought of.\n\n\"Lets \u2013 \" Danica gulped for air \"\u2013 get on...the bed. I want some...of this...in me,\" she pulled on Heaven's cock.\n\nOh, yeah, this was the Heaven-Danica show and I was second fiddle...and I felt it was glorious. 'You are known not by what you do but by what you leave behind,' or so yet another saying goes. Danica and Heaven were happy with one another, even if only for a little while. That 'while' included Heaven retreating up the bed as Danica followed and I pursued her.\n\n\"Have you been a good girl?\" Danica quizzed Heaven. \"Do we need a condom?\" clarified the issue.\n\n\"No, no, I've only been with Zane,\" Heaven answered.\n\n\"That's hardly a ringing endorsement for safe sex,\" Danica chuckled.\n\n\"Damn, that's just cold,\" I groaned. \"For your information, if my partner wasn't a virgin, she was someone I know intimately.\"\n\n\"So you are not doing it with that Warlord chick living in your house now?\" Danica persisted.\n\n\"How do you even know about that? It happened Sunday,\" I wondered.\n\n\"Zane,\" Danica sighed patiently, \"I'm a cop and your house is like two miles away.\"\n\n\"Can we get back to concentrating on the sex?\" Heaven grumbled. \"I'll wear a condom if you want. I'll wear a harem girl outfit if you want, as long as it leads to sex with you.\"\n\n\"That won't be...necessary,\" Danica murmured as she positioned Heaven's cock between her labia then began to push down.\n\nI was working out what my place in this could be when I spotted the bottle of lubricant (generic) boldly sitting on Danica's nightstand \u2013 not very subtle at all. I shifted over, got the bottle, then got around behind them once more.\n\n\"Can I join in?\" I asked.\n\n\"I trust you,\" Danica purred. Silly her; I'm behind her with a source of lube and a passion to use it. I poured some out on Danica's cleft and let it ooze down toward her pussy. I let it cascade over three fingers before sealing it up again. With my left hand, I began working a finger into Danica's anus, and with my right, I worked another into Heaven's.\n\n\"Oh,\" Danica grunted, as I slipped past her sphincter. Heaven's response was to moan sensually. It took me a little while to not only work a finger in but a second one in as well; then the fun began. With Heaven, I began both pumping and making a series of circular motions; with Danica, though, I pressed down until I was counter-massaging Heaven's cock through the walls of her rectum and vagina.\n\n\"Oh, my fucking God!\" shouted Danica. \"That feels great; she's really grinding against me.\"\n\n\"Keep that up,\" gasped Heaven. \"I \u2013 I can feel your fingers.\" Okay, I got this one right. I could also feel the sympathetic impulses growing between Danica's vaginal walls and Heaven's penis; they weren't going to last long. Drilling Heaven's butthole in rapid-fire fashion sent her crashing ahead of the wave.\n\n\"Dan \u2013 Dan \u2013 Danica \u2013 Hell, yeah!\" Heaven screamed as she slammed upward into the lady cop. Danica's back bowed and a low growling noise reverberated through her body. Both tried to use their anal muscles to grind my finger bones together; for the orgasms they were riding through, it was worth it.\n\nDanica shivered through one last orgasmic burst then settled gently down on Heaven. Heaven reached around with her arms and ran them up and down Danica's back. Our hostess pushed off her lover's body with her elbows on the mattress and kissed her nose.\n\n\"That felt wonderful,\" she smiled down at Heaven. Heaven didn't immediately respond. \"Is something wrong?\" Danica worried.\n\n\"I \u2013 um \u2013 it was really nice, Danica, but \u2013\" Heaven worked through the words.\n\n\"But?\" Danica asked.\n\n\"But I think I'm into guys,\" Heaven gave her worried confession. \"I'm sorry; what we did felt good but what sent me over the top was \u2013\"\n\n\"Oh,\" Danica seemed to deflate.\n\n\"Hold on,\" I intervened, even as my fingers were still slowly working them both. \"Heaven, you liked Danica's blowjob; right?\"\n\n\"Yes. It was wonderful,\" Heaven brightened up. \"She's \u2013 you are \u2013\" she looked into Danica's eyes \"\u2013 the best I've ever had.\"\n\n\"Still, you like it up your ass, don't you?\" I prodded. Heaven bit her lip and rolled her head to the side. Danica pushed herself onto all fours and sighed.\n\n\"Well, damn,\" she sighed, \"I was sort of hoping \u2013\"\n\n\"Danica, would you consider screwing Heaven's butt? Giving it a chance?\" I hazarded.\n\n\"I'd give it a shot,\" Danica replied after a moment's hesitation. Being with a girl was new; being with a transgender was new; and now being the driving force in anal sex was going to be new too.",
        "\"I'll get dressed and go out to the car,\" I winked. \"Surprise, surprise; I worried something like this would happen so I brought a few things along.\"\n\nI was afraid that when I got back from the car with my backpack holding the strap-on, that a chill would have set in. I shouldn't have worried; Danica was surprisingly passionate and Heaven was sheer surprise itself. They were cuddled face to face exchanging small kisses and stroking each other's hair.\n\n\"I just want you both to know,\" Danica held up a warding hand, \"if that thing is longer than my arm, I'm calling this off.\" I presented the device for her approval and while it could be intimidating, it wasn't scarier than Heaven's normal equipment. \"I'm glad that's going into you and not me,\" Danica ended up teasing Heaven. Not to be outdone, Heaven rolled onto her stomach and wiggled her upraised butt in the air.\n\n\"Oh, she's begging for it,\" Danica laughed.\n\n\"Yes, she does, and if you think that's sweet, imagine how nice it is to wake up with her ramming that pole in while riding you,\" I painted the picture.\n\n\"Is there any position she doesn't like?\" Danica inquired.\n\n\"I'm right here, my butt up in the air. Please, somebody do something,\" Heaven whined.\n\n\"Not that I know of,\" I ignored Heaven's plea. \"You could try it in the shower, bent over the sofa, heels up in the La-Z-boy, or hanging from the pull-up bar \u2013 she's quite strong.\"\n\n\"Oh \u2013 mmm, thanks, Zane; I'll explore those opportunities,\" Danica grinned.\n\n\"Hello \u2013 butt here...needs stuffing,\" Heaven became more insistent.\n\n\"She's shameless,\" Danica teased happily.\n\n\"Absolutely,\" I laughed, \"but if one of us doesn't fulfill her needs real soon, violence will ensue.\"\n\n\"Zane, you warm her up and I'll figure out how to put this thing on,\" Danica instructed me as she took hold of her sexual toy.\n\n\"About damn time,\" Heaven panted as I worked my first finger in again. I'd oiled up several fingers before handing the lube to Danica to prepare her artificial cock with. Heaven's anus was already pliable from our activity so it took only two minutes to work the second and third finger in. By that time, both Danica and Heaven were ready.\n\n\"This is weird,\" Danica mumbled, as she placed her phallic head against Heaven's sphincter. \"Let me know if this \u2013 \" she got out before Heaven pushed back and gasped. \"Doesn't that hurt?\"\n\n\"Makes me feel full,\" Heaven gasped. \"Push.\" Danica did indeed push, and spanked Heaven for good measure.\n\nNow that I was freed up again, I elected to recline beside Heaven and watch her get fucked by Danica. Heaven and I made eye contact; that totally free, blissful look was exceptionally special for me. I'd seen Heaven afraid far too often. I'd seen her furious far too often as well.\n\n\"Zane,\" Heaven perked up, \"get over here. I want your cock. I want it coming and going.\"\n\n\"Revenge,\" taunted Danica. Heaven and I had given Officer Campbell simultaneous oral and anal sex, and now Heaven was getting the same treatment. I sat my ass on the pillow in front of Heaven's face, legs spread wide. She grabbed my cock in both hands (my penis is so massive, its ability to block out the Sun often cows primitive tribes \u2013 or maybe Heaven has small hands) and yanked it forward somewhat painfully until she could lick the tip.\n\n\"Come on, Zane,\" Danica egged me on, \"take hold of her head and fuck her like a cheap slut.\" A shudder passed head to foot through Heaven's body and she gave out a small sob.\n\n\"Heaven,\" I asked cautiously, \"do you want to stop?\"\n\n\"I'm being fucked like a slut, Zane,\" she replied tearfully. \"I'm being fucked like a slut.\"\n\nYou never know with some people. Danica gave me a worried look so I gave her a quick smile and a nod. Heaven wanted to be a woman, but almost as important was that she wanted to be seen and treated like a woman. It may have played out in Heaven's imagination that she had gone to some seedy bar looking all hot and sexy, then a couple had picked her up so they could treat her like a bad little girl.\n\nI raised my hips, feeding more of my cock into Heaven's mouth.\n\n\"Spank your bitch's ass,\" I teased Danica. She responded by alternating noisy but not very painful slaps to our tranny's buttocks. Heaven wanted the tease, not the real pain, and Danica was right there for her.\n\nOnce we had a good rhythm going, I could feel Danica's cock slamming at its deepest impact, Heaven squirming and squealing with the pleasure and her tongue and throat swirling around my oral intrusion. She slurped and sucked desperately while a small amount of drool marked her cheek and jaw. Heaven began making whimpering noises along with the grunts when Danica drove in deeper.\n\nAll the sizzling sex I'd been forced (yeah, right) to watch sent me over the edge first.\n\n\"Heaven...babe, here it comes,\" I chanted several times before I finally did shoot gobs and gobs \u2013 so much it shot out her nose and mouth. Okay, not really that much, but I certainly felt some relief.\n\nHeaven swallowed with some degree of urgency because she was at her tipping point as well.\n\n\"Oh, God; oh, God; oh, God, Danica...FUCK!\" she cried out, then bucked up hard against Danica. On the second buck, Danica took hold of Heaven by her elbows. Heaven rocked a few more feeble times onto the strap-on but her energy was temporarily spent.\n\nDanica wrapped her right and then her left arm around Heaven, pulling her into an upright, kneeling embrace, her breasts squished against Heaven's back.\n\n\"Are you okay, Precious?\" Danica panted next to her lover's ear.\n\n\"I \u2013 oh, yeah \u2013 I feel great,\" Heaven wheezed. \"I also...seem to have...made a mess...on the bed.\"\n\n\"I planned for that,\" Danica answered with a kiss to Heaven's neck. \"I was hoping we'd end up here. By the way, do you want me to pull this out now?\"\n\n\"Yeah, my ass is getting a bit sore \u2013 muscles stretched,\" Heaven shivered. I wiggled forward so that Danica could push Heaven against me as she withdrew the artificial phallus from its resting place up Heaven's back door.\n\nWhen the last of it slipped free, Heaven gave a brief little hiccup, then melted into my arms.\n\n\"Damn, I'm so glad I met you,\" she murmured.\n\n\"Thanks,\" Danica and I said together, then laughed at the confusion. Heaven gingerly curled into my lap while Danica sat back and worked off the sexual aid that had brought so much pleasure.\n\n\"Well, that was different,\" Danica mused. \"I'm not sure how much I enjoyed it but I can't say it turned me off.\"\n\n\"Mmmm...that was good sex,\" Heaven smiled at us both. \"I like good sex.\" I gave her a little nudge and communicated as best I could by eye contact alone. \"Thank you, Danica,\" she added. \"I really liked that \u2013 what you did for me.\"\n\n\"In that case, we really should do it again,\" Danica said nonchalantly. Heaven perked up right away.\n\n\"Right now?\" she hoped.\n\n\"No,\" I cut that conversation right off. \"I need to get back to campus, and that means you have to get back as well.\"\n\n\"But \u2013 \" Heaven sounded hurt \"\u2013 Danica...that means we can't...\"\n\n\"I know,\" Danica interrupted. \"Zane has church work tomorrow and then I'm at work for the next five nights, so...maybe next Tuesday?\"\n\n\"I'd like that,\" Heaven became excited once more. She crawled over to Danica and began kissing the cop and running her hands all over her body.\n\n\"Bathroom, clothes, kisses goodbye, and then we have to go,\" I prodded Heaven. She looked over her shoulder at me with deep disappointment. Finally, she sighed and nodded. The rest of our visit passed quickly enough. Heaven behaved, I cleaned up the strap-on and myself, and we left Danica with some thank-you's and a bemused look on her face. I knew that expression; people had described me as having it after my second date with Heaven too.\n\nTHE BIRTH OF THE JANISSARIES \n\nWhen we returned to campus, I felt my stress level rise once more. This time I was reasonably sure I had a plan but I needed some help. I sent out some messages for people to gather, and for a special few, I sent people to get the girls I wasn't sure would come otherwise. I barely got back to my dorm room before the fire tribal meetings that had taken place there broke up.\n\nI wasn't there to say much but I did impress upon the students that this was my turf and I wasn't ceding one inch to Ms. Scarlett's scheme or to any one tribe.\n\nThe group that I'd assembled was very eclectic \u2013 some by force and a few of them I barely knew at all. Of the staff, I brought in Dana Gorman \u2013 because she was the prior Head of Security and our current Physical Education Coach \u2013 and Gabrielle Black, because she was the current Head of Security and I didn't want to build an internal police force without her advice and consent.\n\nOn the justice side of things, I brought in Dr. Bryce Kennedy [FYI: she is a woman], the head of the Pre-Law program, Ms. Hudson Lane, our school lawyer, and Ms. Virginia Goodswell, because I trusted her judgment where teachers and teaching were involved. Despite the oddity of the situation, they all answered my summons and didn't look frighteningly pissed at my request.\n\nStudent-wise, there was a sea of familiar faces, if not friendly ones. Only Mhain Reynard had been brought here under threat of force by Hope and Chastity. When most of the two visiting tribes had cleared out, I began my meeting.\n\n\"What I have to say may ramble a bit but please be patient; we are creating something new here,\" I began. \"Has anyone heard of the janissaries?\" \n\nIona raised her hand, as did Hope, Christina, and Simone Brady (former Junior Class President). \n\n\"For the rest of you, there was a Muslim empire of Turks who ruled much of Eastern Europe and the Middle East. They would levy a tax against their Christian subjects of young sons, and they would take these boys, force their conversion to Islam, and then use them as elite soldiers and palace guards for the Sultans.\" \n\n\"No, I'm not asking anyone to convert,\" I warded off some of the more hateful looks, \"but the principle elements of what I say will make sense, I promise. These Janissaries soon rose up to become the chief officials of the Turkish government, the most loyal and trusted of all the Sultan's men. They were both the military and the civil authority of the Empire.\" I let that sink into the crowd of bright young women I'd assembled.\n\n\"So you want us as your personal guard?\" Kylie Frik, a sophomore candidate for Class President, sneered. Clearly, she was thinking harem, not what I had planned. Hannah Cartwright, her opposite in the sophomore camp, figured it out.\n\n\"You want us to be a police force and, I'm guessing by the presence of a few Law types, to be judges as well. You want a shield between you and direct involvement of things you might do.\"\n\n\"Close, but no cigar,\" I grinned to Hannah. She liked me well enough but she didn't really know me or the twisted way my mind worked. \"You wouldn't be my shield; I would be yours. The Janissaries get together and decide policy and how to best enact it; I give it my blessing; and you go do what you want to do while I take the heat for things when they go wrong.\"\n\nTemperance(Note: introduced in Chapter 7) and Dana both laughed. Christina and company knew better than to judge my madness before hearing the whole story.\n\n\"The Janissaries ended up ruling the Ottoman Turk Empire in the name of their Sultan, who they kept as a virtual prisoner in his own palace \u2013\" Simone Brady insightfully pointed out \"\u2013 for almost 200 years.\"\n\n\"Wait. Are we going to imprison Zane?\" Millicent interrupted. \"That's more than a little odd.\"\n\n\"No. I'm going to select ten Advocates and ten \u2013 well, I didn't know what to call them so I was thinking we'd call them the Nameless \u2013 the enforcers of the Advocates' decisions,\" I explained.\n\n\"How is this going to relate to school elections?\" Simone asked.\n\n\"I think elections are toast for this year, Simone,\" I related my fears. \"The purpose for them has been short-circuited and that is why I asked you and a few other Rhaine supporters here tonight. No student government can exist at this school without your backing.\"\n\n\"But we don't like you or even want you on campus,\" Rhaine spoke up. \"Why would we buy into this?\"\n\n\"He's the only game in town,\" Christina pointed out coolly. \"Without school elections, all you can do is take over roughly half the tribes, and then what? Zane is your mediator so he can break down everything you try to build...if you think he's that petty.\"\n\n\"At the end of the day, ladies, Vice Chancellor Scarlett has dumped this on my lap, and I think its point is that you need a man to give you guidance in your lives, unless you keep to your tight little tribes she's assigned you,\" I said.\n\n\"I'm going against that because I don't believe you need me to run things here at FFU,\" I persisted. \"No one in this room knew what my idea was before coming into this room \u2013 no one, not even Iona and Rio, my closest friends. There is no trick here. What I envision is an organization above the tribes, keeping the peace and encouraging unity.\"\n\n\"Advocates work in ad hoc teams to solve disputes; each litigant will choose an advocate to represent their case, working out a compromise whenever possible. Only unsolvable cases would be brought before me, the Mediator, and I would hear both arguments and render a decision. It would be a 'nuclear option' to hold over the litigants' heads.\"\n\n\"So you would still lord it over us,\" Mhain addressed me for the first time, though she did spit on the ground afterwards and she still wouldn't use my name.\n\n\"I'm doing that right now, Mhain,\" I sighed. \"I didn't ask for this; it was tossed like a live grenade into my lap. If I run away, you are left isolated and at the mercy of this experiment. If I stay, you have some hope of self-government.\"\n\n\"That still leaves you with authority over all the girls in this school. I'm not sure my father will like that,\" Simone pointed out.\n\n\"Simone, there could well be some moment when you are in this room alone with me...and nine other advocates, and ten Nameless. And what do you think would happen to me if I did one inappropriate thing?\"\n\n\"Speaking of which, one of us will be in that room,\" Christina stated. \"Who have you decided shall be the selected ones?\" I had to smile.\n\n\"I don't do the actual choosing,\" I smirked. \"That is what I brought the teachers for. Dr. Kennedy and Ms. Hudson can pick out the best legal minds to be Advocates as well as coach them in how student court works.\"\n\n\"Ms. Black and Ms. Gorman can nominate the best choices for the Nameless. The Advocates will be public knowledge but the Nameless shall only be known by the select teachers, the Advocates, and me, the Mediator. On official business they will wear black masks or something like that to give them an official air with a hint of fear,\" I concluded.\n\n\"That is a bit too much theatrics,\" Bryce Kennedy declared.\n\n\"I disagree,\" Gabrielle surprised me by speaking. \"Sure, the girls will suspect who the ten Nameless are, but they will not know with absolute certainty. That is an incredible advantage in the psychology of a confrontation, decreasing the chance of violence.\"\n\n\"I will not be party to this perversion,\" Mhain declared as she stood up. \"I suggest anyone who fears for their soul will do likewise.\"\n\n\"Why is this douche here again?\" Rio sniped. Rio, like Mercy and Iona, was here as an observer.\n\n\"Mhain's here because she represents a portion of the student body. You can't have a democracy if you start off by excluding people unless you look forward to a return to civil war in your near future,\" I explained. Simone and Kylie stood with Rhaine but didn't make to leave. Mhain shook her head in disgust and made for the stairs.\n\n\"Ms. Reynard, why are you running away?\" the senior educator in the room spoke.\n\n\"I'm not running away,\" she turned and insisted. \"He shouldn't even be at this school with the rest of us and everyone else is too blind to see it.\"\n\n\"Okay, I agree with you that Mr. Braxton shouldn't be here,\" Dr. Kennedy nodded. \"That doesn't explain your cowardice in the face of adversity.\"\n\n\"I'm not a coward!\" Mhain shouted.\n\n\"Then you are saying that everyone else in this room is,\" Dr. Kennedy continued.\n\n\"I \u2013\" Mhain stammered.\n\n\"I joined the staff as an educator at Freedom Fellowship to protect the ladies under my charge, to teach them to the best of my ability to be good Christians and good lawyers in the Christian cause,\" the teacher detailed. \n\n\"Nowhere did I sign on to pick and choose the struggles I would embrace,\" Bryce continued. \"Every believer has the option of retreating into the shadows where it is safe, but that is not what I teach. You must have the faith to fight even when things look bleak because that is where the real victory lies. Thank you for listening. Please scurry off and hide now because your actions so far bring shame to true female Christians.\"\n\nMhain was floored. I was floored too, but then realized that lying on the ground beside her would be counter-productive.\n\n\"Please stay,\" Rhaine broke the silence. \"Things will be hard enough with you at our side. It will be nearly impossible without you...especially next year when the current seniors graduate.\"\n\nMhain still moved around me as if I was a plague-carrier but resumed her seat.\n\n\"I want to establish some ground rules. I did not ask for this responsibility but now that I have it, I'm going to make the most of it. What I want is things that are good for this school,\" I stated.\n\n\"Like?\" Hudson Lane prodded me.\n\n\"Like campus-sponsored summer trips to Israel, maybe an exchange program with other all-female religious schools to share missions and traditions, missionary work with female Christian groups in the Developing World, and outreach programs with the University of Virginia,\" I suggested. There was a pause because sometimes I'm not a total freaking moron.\n\n\"How would we pay for all that?\" Rhaine questioned.\n\n\"This school is loaded, or hasn't anyone else noted that all our stuff is new? And since no senior-class women remark on it, it appears to be a common occurrence,\" I responded.\n\n\"That doesn't mean we will be given the money to spend,\" Christina joined in.\n\n\"Ah,\" I scoffed. \"I'm the Mediator; I'll simply ask for it and they will give it to me.\"\n\n\"Exactly how did you come to this delusion?\" Hannah Cartwright asked, but I knew she spoke for the majority present.\n\n\"Do you know for a fact I don't have the authority?\" I grinned. \"The worst she can do is say 'no.' Actually, the worst she can do is say 'no' while publicly ridiculing me with laughter.\"\n\n\"I can't believe we are sitting here talking about a possible future for our campus built upon a hypothesis of how power works on this campus \u2013 a rather weak hypothesis at that,\" Simone shook her head.\n\n\"That is incorrect,\" Dana said. \"It relies on how much Vice Chancellor Scarlett wants this experiment of hers to work, and in my opinion, she wants this pretty bad.\"\n\n\"Fine. If we do this, how long do we have to keep it secret?\" Temperance inquired.\n\n\"We don't,\" I stated calmly. \"This isn't going to be a totally open democracy but we shouldn't be overly secretive. Once we have the tribal leadership established, they come in as a parliamentary body. I put my hare-brained schemes past them and give them the right to impeach Advocates and Nameless.\"\n\n\"Wait,\" Mhain growled. \"We are doing all this just so the elected tribal leaders can get rid of it all? That's crazy.\"\n\n\"No,\" Millicent championed my cause, \"that's democracy. Zane can counter their decisions \u2013 it is in his power to do so \u2013 but do you think he'd ever do that?\"\n\n\"He's evil,\" Mhain stated with absolute conviction.\n\n\"That's it; she's dead,\" Rio snarled as she stood up. Mercy hooked an arm around her waist to hold the hothead back.\n\n\"What safeguards would you want?\" I asked.\n",
        "\"Let us vote to expel you,\" she demanded fiercely.\n\n\"So driving me from a place I've come to consider a second home is the only thing that will satisfy you?\" I sighed. \"I don't know you but you appear to be hell-bent on making me miserable. Please explain that to me.\"\n\n\"You are a whore and you turn women into whores,\" she spat. Whether the other women believed it or not, every one of them knew that was going too far; some were absolutely furious. I stood up and rubbed the bridge of my nose, trying to not obey my instinct, which was to slap the crap out of anyone who maliciously called a woman a whore.\n\n\"That was uncalled for,\" I said softly. I started stripping my shirt off. Mhain suddenly looked a tiny bit afraid, although she was still vastly self-righteous through and through. Bryce looked ready to intervene but Dana put a hand on her arm to designate she should give me some leeway.\n\n\"Mhain, would you define me as totally irredeemable and destructive to this institution?\" I inquired with an even tone.\n\n\"Absolutely,\" she snarled.\n\n\"Valarie \u2013 knife,\" I requested. The teachers were seconds from coming out of their seats and shutting me down. Val swept out her butterfly knife from her back and flipped it's blade out before giving it to me. I took it, handle extended, blade resting against my wrist. The only one not on the edge of freaking was Gabrielle, who looked...well, pretty much as she always looked.\n\nI walked up to Mhain, caused her a bit of pain when I grabbed her right arm and pulled it toward me. I slapped the blade's hilt into her palm, then raised the blade to the level so that the blade tip pricked the spot between my ribs, next to my heart.\n\n\"Here you go,\" I growled. \"Be a hero. Kill the beast. You will never have a better opportunity than this.\"\n\n\"I won't let you make me a murderer,\" she worked out angrily after a stunned moment of silence.\n\n\"Fine, someone give me a pen so I can menace Mhain with it. That makes it justifiable homicide,\" I countered. By the looks on Hudson's and Dr. Kennedy's faces, I had just created a mockery of how the real legal system worked.\n\n\"Go ahead, Ms. Reynard,\" Dana Gorman sounded bored. \"No one here will contradict your story. Do the world a favor and remove Zane. It is your Christian duty, after all; right?\"\n\nFor a second, I thought the crazy bitch was going to kill me. She tried pushing the knife forward and blood welled and seeped from the puncture.\n\nShe was looking into my eyes with that fanatical gleam in her's shining through, but the eyes are also the windows to the soul. It takes a certain kind of individual to look into a person's eyes and kill them in cold blood. I'll give her this much; she put her left hand on the knife and tried to drive the blade deeper one more time.\n\nWith a growl of frustration and rage, she took a half-step back and dropped the knife.\n\n\"This proves nothing,\" she shouted at me.\n\n\"Then pick up the knife,\" I countered. \"If you can't bring yourself to kill me, take out a kidney or perforate my liver. That should remove me for the semester.\"\n\n\"All this proves is that you are crazy and evil,\" she was now starting to hyperventilate.\n\n\"But can I stay?\" I grilled her. \"You have the power to make me leave so make me leave; don't chicken out and hand that burden to someone else. You don't get to have it both ways.\"\n\n\"I'll give it to her both ways,\" Rio mumbled in a way that made it clear she was way past infuriated. Luckily, Mhain didn't hear or ignored her.\n\nMhain was still having trouble breathing and now added shivering to the act.\n\n\"Pick up the knife and hand it to me,\" I demanded. She glared but obeyed. I wiped the blade on my trousers, flipped it closed, and returned it to Valarie. \"Mhain, please sit down.\" The nut didn't skip back to her seat but she grudgingly did as I asked.\n\n\"I think we can agree to pick up the discussion tomorrow,\" Virginia Goodswell stood and announced. \"Someone get Zane medical attention.\"\n\n\"We will discuss the gross miscarriage of educator responsibility by even allowing a student to arm another student in an apparent rush at suicide,\" Dr. Kennedy grumbled.\n\n\"Mr. Braxton was never in any danger,\" Gabrielle gazed on the legal scholar coolly. \"At the point where Ms. Reynard's muscles gathered the impetus to actually penetrate the pectoral muscles of Mr. Braxton, I would have incapacitated her. There was no danger; thus no dereliction of duties.\"\n\n\"He handed her a knife, placed it in her hands, and aimed the point over his heart,\" Kennedy persisted.\n\n\"Zane was certainly willing to get himself stabbed but Mhain wasn't willing to do the deed,\" Gabrielle restated herself.\n\n\"But Mr. Braxton had no way of knowing that,\" Dr. Kennedy pointed out. Every woman, except Mhain and one other, stared at her in disbelief.\n\n\"Zane,\" Virginia Goodswell looked to me, \"how did you know Mhain wouldn't stab you?\"\n\n\"I didn't know; I'm not a mind-reader, but I reasoned that she would not presume to ignore absolute authority due to her upbringing. In her mind, no matter what crime a man commits, she should report it to a man to deal with,\" I replied.\n\n\"If there was no risk then that was not a real test,\" Mhain spat.\n\n\"Eu contraire; all you had to do was own up to your own actions and emotions and I'd be dead now,\" I respond coldly. \"All you had to do was admit that you hate me for purely personal reasons and not because of anything God directed you to do.\"\n\n\"You are depraved and despicable,\" she seethed.\n\n\"I get that a lot; now get out,\" I growled back, \"because I have a thousand other bitches who are \u2013 scratch that \u2013 999 other bitches \u2013 Dr. Kennedy is growing on me; the rest I'm not so sure about \u2013 who are making my life miserable.\"\n\n\"Don't get your hopes up, Mr. Braxton,\" Dr. Kennedy warned me. \"I'm happily married.\"\n\n\"Cool,\" I responded. \"I hope to be like that one day.\"\n\n\"Happily married?\" Virginia inquired.\n\n\"No; a female law professor at an all-girls school,\" I grinned. \"It sounds like a real cool job.\"\n\n\"Feel free to hit him,\" Dana interrupted. \"I swear that is the only way to get him to learn anything; or the only way we will discuss at this moment.\" Ah, sex. I thought my life had gone on a bit too long without the mention of sex. \"It is also a fun form of stress relief.\"\n\nA painful blow rocked my shoulder and nearly sent me sprawling.\n\n\"You are right,\" Gabrielle noted clinically. \"I feel better.\" Fuck, she hits hard. I look at her and try not to get pissed off and say something stupid. She makes my life difficult but my existence at FFU makes her life far too interesting as well. Whack! Someone hit me with a briefcase.\n\n\"I have to agree,\" Dr. Kennedy confirmed. \"It has a therapeutic quality to it.\"\n\n\"Bloody hell,\" I blurt out.\n\n\"Everyone, please stop physically abusing Zane,\" Ms. Goodswell snapped. \"He's a student, for Pete's sake. He's not subject to corporal punishment.\"\n\n\"Virginia, have you ever punched or slapped Zane?\" Dana teased. \"Give it a try before dismissing it out of hand.\"\n\n\"He likes spanking,\" Barbie Lynn beamed happiness as she skipped by on her way to my/our bedroom. Technically, it is mine, Vivian's, Barbie Lynn's, Rio's, and Mercy's...plus whoever is feeling lonely on a given night. As for the spanking, I'm more of a giver than a receiver, but I doubt explaining that right now would be appropriate.\n\n\"Uhmm \u2013 okay, I think that is my cue to leave,\" Virginia piped up.\n\n\"I have rounds to make,\" Gabrielle added.\n\n\"I'm going home to my family,\" Dr. Kennedy headed out.\n\n\"I'm going to stay here, kick back, and watch some Pay-per-view,\" Dana grinned.\n\n\"What are you going to watch?\" Hudson inquired.\n\n\"BBC America has this show called Copper that I've been meaning to catch,\" Dana informed her.\n\n\"Mind if I watch an episode with you?\" Hudson asked.\n\n\"Sure, knock yourself out. You can pick the second show,\" Dana yawned. \"It's only Zane's money after all.\" The rest of my guests filed out and I retired to the showers and then to my room. The day's stress revealed itself as the women curled into bed calmly and soon were cuddled together, including the odd ones out.\n\nOn the far side we had the rather unusual appearance of Valarie. Next to her was Rio, who had her arms wrapped around Mercy. Mercy was snuggled against Barbie Lynn who held the middle spot. I was on my side, face-to-face with Barbie Lynn. After a few minutes, Vivian came to bed, wedged up against my back, and put an arm over me. I was in close proximity to several beautiful women but as long as no one doused the room with an aphrodisiac, we'd do just fine.\n\n\"Zane,\" Barbie Lynn whispered, \"my vibrator burned out this morning, and I'm terribly horny.\"\n\nOh, fuck!"
    ],
    "authorname": "FinalStand",
    "tags": [
        "college",
        "humor",
        "transgender",
        "anal sex",
        "blowjob",
        "cunniligus",
        "policewoman",
        "mmf",
        "threesome"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/christian-college-sex-comedy-ch-28"
}