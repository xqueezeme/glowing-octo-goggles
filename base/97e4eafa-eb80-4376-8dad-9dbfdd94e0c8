{
    "title": "Adrienne's Duet Pt. 06",
    "pages": [
        "That July, Adrienne and Juliet, with the help of Caroline and Ted, moved to the west coast and settled into their new home, in Portland, Oregon. The Portland Chamber Orchestra had offered to set them up in an apartment, but Adrienne was concerned about the issues it might raise for the other tenants with her practicing all the time. And so, with one of the board member's help, they found a cute one-bedroom house to rent on the northwest side of town. \n\nThe house had a fenced in yard and was partially furnished, so the girls didn't need to transport much of their own belongings. However, when Caroline suggested they not take Adrienne's bed, the girls put their feet down. \n\n\"There are just too many good memories in that bed for us to leave it behind,\" Adrienne argued on the bed's behalf. \n\nJuliet was quick to support the claim. \"And it's very comfortable to sleep in, too,\" she added with a nudge and a wink. And so, the bed was packed into the moving van, along with some of their furniture and clothing, and Adrienne's hatchback in tow.\n\nThe girls also brought with them two newly framed photos of them as Cecily and Algernon; mementos from one of their 'Wildest,' and 'loopiest' days ever. The one with them standing side by side, with Juliet's hand upon Adrienne's forearm, ended up hanging in the main room, just right of the kitchen. As for the one with Juliet sitting on the bench, and Adrienne kneeling at her feet, staring adoringly up at her... That one, they hung in their bedroom. \n\nChoosing to move out west that July turned out to be a very good decision. It gave them a few weeks to settle in and explore the city. They took full advantage of the time, hitting a few clubs, dining out at various cafes and restaurants, and then afterward debating which ones were their favorites.\n\n\"All this time, and I only now find out you don't like spicy food!\" Adrienne bemoaned, after she'd ordered some hot Indian cuisine.\n\n\"I like spicy sex,\" Juliet retorted, playfully. Adrienne shook her head in disbelief. \"If you had to choose between sex and food, you'd die of hunger.\"\n\n\"Yep,\" Juliet happily agreed. \"Speaking of which, I'm feeling a bit horny.\" And after lunch, it was off for home and a merry romp in the sheets. \n\nThat first month in Portland was golden. Adrienne's schedule was fairly light and they totally had fun, sleeping in, making love in the afternoon, and then again at night. And then going out to concerts and plays, bookstores and boutiques...and lots of dancing. To Juliet's delight, Adrienne was developing into quite the dance partner out on the floor.\n\nOne reason for this is that they had discovered a very popular alternative club not too far from their neighborhood. It hosted gay and lesbian nights, trans nights, costume contests, themed music events, and even karaoke and open mic nights. It was the first place in the city where Juliet performed in public. It was karaoke night, and when Juliet asked Adrienne what she'd like to hear, Adrienne answered \"Rollin' in the Deep.\" She then had to remind Juliet that she had heard her sing it in their early days, during the run of their college musical. \n\n\"Oh yeah,\" Juliet drawled, \"And then you ditched me for that Lilith girl.\"\n\n\"I didn't ditch you!\" Adrienne whined. Though she had come awfully close.\n\nThe place was always packed, as Portland was a fairly progressive city when it came to accepting alternative lifestyles, and that detail was becoming more and more important to Adrienne and Juliet, as they immersed themselves in this world where sexual orientation and race and gender were astonishingly complex and diverse. They attended their first Pride event, and each bought pride t-shirts and flags.\n\nLiving together in Portland gave the girls the inspiration and confidence they needed to more fully explore the lesbian lifestyle and consider how much of it made sense for them. They were technically in a lesbian relationship, and anyone who met them pegged them as gay. And yet, they hadn't really talked 'labels' and to what degree they mattered. \n\nTo a friend at the theatre, Juliet had said, \"We met, and just fell in love. And it was pretty much fated that we were going to be together.\"\n\nFor Juliet, it was that simple. But not for others, and certainly not for her mother. Clarissa clearly did not approve of Juliet's relationship with Adrienne. It was perplexing to Juliet because she wasn't sure if it sprang from a deep-seeded homophobia or if she just didn't like Adrienne. It seemed impossible that anyone could dislike her partner. \n\nOf course, Adrienne never told Juliet that she had paid a visit to her mother. \n\nAnd so, life moved into September, and Adrienne's workload kicked into high gear. While her pay was decent, it didn't leave them much to save away. And so, they relied on Juliet's bank savings, and occasional influxes of cash from her father, which made life for them so much easier.\n\nThey were extremely grateful to have Ted Langford's financial support. Of course, Adrienne felt a bit like a freeloader accepting the money, but she knew that it would enable her and Juliet to focus on bettering their lives and becoming more independent down the road.\n\nJuliet did manage to get into a local theatre company that staged new and experimental works. It wasn't her forte, for she preferred classical theatre, but she was welcomed into the group and felt that the improvisatory approach would help hone her skills. Also, with Adrienne's encouragement, she found a vocal coach to help her continue to develop her singing voice.\n\nJuliet received a cut of the house and a small stipend, but the pay was little more than pocket change. Yet no matter how small a role she had, Adrienne came to see every performance she was in. Unless it conflicted with her own commitments.\n\n\"So, who were those hooded figures banging those sticks and chanting?\" Adrienne asked, after sitting through an obscure production, loosely based on Shakespeare, or someone who may have been Shakespeare. In it, Juliet played an array of characters.\n\n\"They were supposed to represent the Greek chorus.\" \n\n\"Oh.\"\n\nAnd Juliet attended Adrienne 's very first chamber concert, which was a wonder to behold. Of course, Juliet was given a complimentary ticket, which made her feel very special. \n\n\"We should form our own Mutual Admiration Society,'\" Juliet liked to tell Adrienne.\n\nAs often happens in the real world, the girls were noticed by men, as well as the occasional woman. Not that they kept count, but Juliet was fending off much more attention than Adrienne, and while flattering to her ego, it was also annoying. \n\nAnyone who truly got to know the girls, could clearly see that their loyalty and devotion to each other was rock solid. As for the sex, well, it too, stayed fresh and loving as ever.\n\nHowever, that fall, things began to get a little stressful. Adrienne was now extremely busy with the fall/winter season, and with her rehearsing days and Juliet rehearsing evenings, they would go long stretches without having quality time together. Sometimes, Adrienne would come home just too tired for energetic bouts of sex, which meant she often ended up on the receiving end in the bedroom. \n\nJuliet didn't mind at all. Even when Adrienne wasn't up for sex, she was the most loving and affectionate partner Juliet could ever wish for. \n\nAdrienne also had to put in a good deal of time at home running through her cello parts, and since she had the more demanding schedule, Juliet became the one to do most of the cooking and caring for their home. It was an easy division of labor, for not only was Juliet a decent cook, she enjoyed cooking and preparing meals for the two of them. It was one more way that the girls developed a true sense of what it meant to be a couple, and what it took for two young, struggling artists to forge a life together. \n\nAdrienne and Nadia also kept in touch. Though Nadia was in Germany, she never failed to remind Adrienne that upon her return, the two of them would tackle and record the complete Beethoven cello sonatas. They even discussed forming a quintet.\n\nAnd of course, there were photos and weekly updates from Thomas and Molly who now had a baby boy to look after.\n\nOne other interesting outcome of the summer move is that it prevented the girls from joining Juliet's father on Grand Manan island, as they had planned. This left Caroline to take the trip by herself. \n\n\"I'm not going without you girls,\" Caroline insisted. But Adrienne thought she should go. Adrienne had grown to like Juliet's father, and as far as she could tell, he seemed to be a genuinely trustworthy man. And he definitely was interested in her mother.\n\nAdrienne figured the biggest issue with having a relationship with Ted Langford is that he traveled so much. But still, Adrienne encouraged her mother to take the vacation with Ted, while Juliet kept her opinions to herself. \n\n\"Mom, he's a good guy, and you'll be able to really have a vacation. On Grand Manan!\" her daughter urged.\n\nAnd so, Caroline did join Ted on the island, and the possibility of their parents becoming more seriously involved was now something the girls had to consider. \n\nYet, still no call or contact from Clarissa. \n\n\"Maybe I should fly back home and spend some time with Mom,\" Juliet suggested. \"And I can stay with your mom and catch up with her, too.\"\n\n\"Sure, if you want,\" Adrienne replied. \"I'd miss you.\"\n\nJuliet smiled. \"I'd miss you too. Of course, I wouldn't take the trip until after our show closes.\" \n\nAdrienne saw the way Juliet kept reaching out to her mother, and it bothered her. After seeing how unpleasant the woman was toward Juliet, not to mention her constant snubs, it just didn't seem healthy. To sum up, Adrienne hated to see Juliet groveling after someone who didn't treat her well. Mother, or not! \n\nAs for Juliet's planned trip east, it never materialized, due to a serious error in judgment.\n\n~*~*~*~*~\n\nAt the time things went a little sideways, Adrienne was rehearsing during the day, and Juliet was in the middle of a big ensemble piece that wasn't going all that well. And Juliet didn't have that much to do in it, either. So, for her, it was a lot of wasted nights away from home and her dearest and closest friend. Her soulmate.\n\nIt was a difficult period, during which the girls had their nights in bed together, and dinners together. But the rest of the time, they hardly saw each other. Adrienne had an all-day string rehearsal with members of the string section. They were preparing to perform two popular string works by Grieg and Tchaikovsky. They were lush, sonorous pieces that were crowd pleasers, and Adrienne was quite pumped about it. She couldn't wait for Juliet to hear them performed at a Friday concert, two weeks hence.\n\nOne evening, as Adrienne prepared to run through her cello parts, Juliet got ready to head off to the theatre. \"Okay, I'm off to rehearsal, babe,\" she said, giving her partner a kiss on the cheek. \n\n\"Bye sweetie,\" Adrienne answered, with a quick smile and tilt of the cheek, before staring back at her music.\n\n\"Uh, there's a chance some of us are going to go out after our run tonight, so I may get in a little late, but not too late, I promise.\"\n\n\"Sure, you have fun. And be careful, okay?\"\n\n\"I will.\" And with that, Juliet dashed out to catch her bus.\n\nFor Adrienne, the time flew by as she became completely engrossed in her cello practice. Around ten, she hopped in the shower and afterward, slipped into her pj's. Comfy in her sleepwear, she lay down on the couch with a pillow, blanket and a book, and before she knew it, she'd nodded off. \n\n\"Huh, wha...?\" Adrienne was jarred awake by the sound of rattling at the front door. She sat up and watched as Juliet quietly crept into the house. \"Hey,\" Adrienne called out in a groggy voice. \"What time is it?\"\n\n\"Oh, are you still up? Uh...it's about one in the morning,\" Juliet whispered, shutting the door. \"I'm...I'm sorry to...uh, wake you. We, uh...got to talking at the bar, and...and I just lost...the track of the time...\" Juliet suddenly lost her balance, and lurched to her right. \"Oh!\"\n\n\"Are you alright?\" Adrienne asked, jumping up from the couch. \n\n\"Yeah, I just had a...had a bit too much to drink. I'm really sorry...\" she apologized. Juliet was definitely unsteady on her feet, and her words were a bit slurred, too. Adrienne was shocked to see that her girlfriend was not a little drunk. She was very drunk.\n\n\"I need to take a shower,\" Juliet slurred grumpily, while struggling with her top button.\n\n\"Okay, well, you seem to be having a little trouble. Let me help you out of these clothes,\" Adrienne said, offering to take over the delightful task of removing the blouse. \n\n\"Naw, I'll get it,\" Juliet insisted, but Adrienne persisted. \"No, here, let me do it,\" she kindly insisted to her girlfriend. \n\nJuliet kept brushing Adrienne's hands away. Seeing Juliet this drunk was unsettling to Adrienne. It was like being in the presence of a totally different person. Juliet never came home even slightly tipsy, let alone 'shit faced'. One of the things Adrienne really liked about Juliet is that she was careful with her alcohol. Other than a glass of wine now and then, or a beer, both girls were extremely responsible. Adrienne was almost militant about it, for too much of it seriously undermined her ability to play her cello. And now that she was a professional, she didn't dare risk that.\n\n\"How'd you get home?\" Adrienne asked.\n\n\"Uh, Andrew dropped me off,\" she mumbled before sitting down on the couch, too out of it to stand anymore. \n\n\"What's this on your skirt?\" There were some stains on the front of it. \"Is that wine? We better soak that in some detergent, right away.\" Adrienne quickly unzipped the skirt and tugged it down and off her drunk girlfriend's legs. \n\n\"Adrienne, please...\" Juliet begged. \n\n\"Your blouse is dirty, too. Let me get these off, so I can soak them for you...\"\n\n\"It's alright, I'll do it in the morning,\" Juliet replied rather testily, pushing Adrienne's hands away. \"Let's go to bed. I'm exhausted.\" \n\nAdrienne knew something was off. Juliet seemed defensive, as if she were protecting some secret. \"Juliet, what's going on? What happened tonight?\" She sat down next to her lover.\n\nJuliet's worried look made Adrienne's heart beat faster. And Juliet could see that Adrienne expected answers. Her lower lip began to quiver, and Adrienne felt a coldness make its way up the length of her spine.\n\n\"Juliet, what's wrong, what aren't you telling me?\" Adrienne pressed, more emphatically. Still, Juliet refused to answer. \n\n\"Please don't lie to me, Juliet. You know we don't keep secrets from each other.\"\n\nJuliet knew she couldn't lie. Her head dropped into her hands and she started to sob. Adrienne stared dumbly, not knowing what to do. And so, she sat there and let her girlfriend cry herself out. Finally, Juliet confessed. \n\n\"I... I did something stupid tonight...And I know you're going to really hate me for it. But I, uh...did it, and I'm so sorry. I...I fooled around with Andrew... in the car...\"\n\n\"You fooled around? What the hell does that mean?\" Adrienne was starting to lose her cool.\n\nJuliet slouched, her head drooping forward. \"I gave him a hand job. That's all I did! Just a stupid, fucking hand job! And the dumb shit came all over my skirt...\"\n\nAdrienne looked at the stain on the skirt and felt sick. Preparing for the worst, Adrienne gripped Juliet's chin and forced her to look her in the eye. \"Juliet...are you having an affair with this guy?\"\n\n\"No! NO!\" Juliet insisted, emphatically shaking her head, and brushing her hand on Adrienne's shoulder. \n\n\"Please don't lie to me, Juliet.\"\n\n\"I'm not lying to you, 'A', that's the honest truth. I'm not having an affair with him, or anybody. I don't even know why I did what I did, tonight. It just...sort of happened.\"\n\n\"What do you mean, it 'sort of happened'?\" That was not an explanation. \n\nJuliet exhaled a dramatic sigh. \"Andrew has been trying to get me to go out with him ever since I joined that stupid company, and I told him I was with you, and I thought he respected that...He's been mostly good about it...But then tonight, he started coming on to me again. I should have seen it coming, and I shouldn't have let him drive me home. He knew I was drunk, and probably thought I'd be easy. And so, I fucked up! Next thing I know, I'm jerking him off in his car. That's all I did! I thought he'd leave me the fuck alone!\"\n\n\"I don't believe this...\" Adrienne said, putting her hands on the top of her head to keep it from flying off into space. How could this person she cared for so much, and whom she trusted with her very life, betray her like this? \n\n\"Adrienne, please believe me. There's nothing going on with him. I shouldn't have been drinking and I should have come straight home. And until this stupid screw up, I've never even thought about cheating on you. I've never done anything behind your back, and...and I've never...ever... desired anyone but you. I'm so sorry I fucked up. Please, don't hate me! Please don't give up on me!\"\n\nJuliet was starting to get a bit hysterical, and her breathing was coming in short bursts. Adrienne suspected she might be having a panic attack, and so, she sat down next to her and wrapped her arms around her. She rubbed her and whispered to her. \"There, there...it's going to be alright. Everything's going to be okay. Just relax and breathe...I've got you...\"\n\nJuliet nodded, closed her eyes and gradually began to calm herself. It was petty of Adrienne, but she felt it was rather unfair that she was doing the consoling, considering that she was the offended party. But that was neither here nor there. Juliet was messed up, feeling vulnerable, and Adrienne was the one who was there for her. \n\nAnd her girlfriend did seem genuinely sorry. \"Feeling better?\" she asked. \n\nJuliet smiled and nodded. \"I love you,\" she whimpered into Adrienne's shoulder. \"Mmmm...uhhh.\" Juliet gripped her stomach. \n\n\"You going to be sick?\" Adrienne asked, worried.\n\n\"Yeah!\" She got up and ran into the bathroom to throw up.\n\nAdrienne thought about following in to check on her, but she was confused and angry. \"I can't deal with this right now,\" she fumed, as she stood up and listened to Juliet heaving into the toilet. \n\nFeeling all tattered and torn inside, she walked into her practice room, picked up her bow and cello and began working her way through a Bach prelude from one of the cello suites. \n\nIn the quiet of her practice room, Adrienne closed her eyes and let the divine melodies and counterpoint wash over her, hoping they'd transport her to some peaceful place, far from her present reality. She was halfway through her second dance, before she opened her eyes. There, sitting quietly in the room with her, on the love seat, was Juliet, her legs tucked under her body.\n\nAdrienne stopped playing and looked at her. Juliet's eyes were twinkling. \"I love listening to you play. I'm feeling better now.\"\n\n\"Good.\"\n\n\"Do you want me to sleep on the couch?\" she asked, in a tiny voice, while chewing on her lower lip.\n\n\"No,\" Adrienne told her, shaking her head. \"We'll sleep together.\" \n\nJuliet flashed a grateful smile and waited for Adrienne to help her up. Together, they staggered into the bedroom, both physically and emotionally drained, and got ready for bed. \n\nThey brushed their teeth, peed, did whatever else they needed, then helped each other out of their clothes and climbed under the covers. Juliet gave Adrienne a questioning look. Adrienne raised her arm and Juliet snuggled into her. They were soon fast sleep.\n\nThe next morning Adrienne woke to the sound of clattering. She smelled coffee brewing and knew that Juliet was already up. Throwing on her robe and slippers, she padded into the kitchen. ",
        "\"Morning,\" Juliet said, making sure not to be too cheery. She didn't want Adrienne to think that she expected all to be forgiven. \n\nAdrienne sat down at the table and watched the woman who made her heart flutter, scoop some hash browns onto her plate. \"How you doing?\" Adrienne asked as Juliet sat down at the table and took a sip of her orange juice.\n\n\"Well, I have a headache from hell, and my heart is in a thousand pieces\u2014all because of my own stupidity, I know\u2014but I'm just glad I'm not out on the street.\"\n\n\"On your ass girl!\" Adrienne teased her. \"So, do you have rehearsal tonight?\" \n\n\"Nope. I quit.\"\n\nAdrienne stared blankly. \"You quit!?\"\n\n\"I texted the stage manager this morning. Told her I was through with the group.\"\n\n\"Wow.\" Adrienne wasn't expecting that. After a few moments of silence, she asked her friend, \"Why did you do it, Juliet?\"\n\n\"What, you mean, quit? Or screw up the best thing I ever had?\"\n\n\"Well, they seem to be connected,\" Adrienne observed, rather perceptively. \"You never drink that much.\"\n\nJuliet nodded, \"I know.\" She was slowly shaking her head back and forth, over and over. \"I was...frustrated. I felt stuck. We weren't doing any meaningful work there, and we wasted so much time at rehearsals, and no one wanted to work from scripts. They mostly wanted to screw off and go out drinking and partying. And I found myself getting sucked into that. And you and I weren't seeing that much of each other. I just felt...adrift...I wasn't doing anything meaningful or creative, like you. I was bored! Out of my fricking skull!\"\n\nShe looked at Adrienne, apologetically. \"I'm not excusing what I did. I betrayed your trust, 'A', and you have every right to be angry with me. And I know it's going to take me a long time to earn your trust back. But what I'm trying to say is, despite what you think, I'm totally committed to us. If anything, this was a strong kick to my gut; a real wake-up call for me. Adrienne, I don't want to lose what we have, and I promise to do everything in my power to keep us good.\"\n\n\"I know you will,\" Adrienne said, nodding. \"So, you want to start looking for another theatre to audition for?\" \n\nJuliet shook her head emphatically. \"No, I don't think the theatre scene is where I want to put my energy anymore. I'm thinking of applying to Bryson this fall. They've got some openings in their pre-law program. You know I've always talked about getting into environmental law.\"\n\n\"Yeah, you have,\" Adrienne agreed with a nod, surprised by this turn of events. \"I think that's a wise choice, Juliet. There will always be theatre, and chances for you to sing.\" \n\n\"You still love me, don't you?\"\n\n\"Yes, I still love you. And I know that what you did was a mistake, and it just isn't like you.\"\n\n\"No, it isn't like me,\" Juliet agreed, grateful that she had such a compassionate and understanding partner. \"Thank you.\"\n\nAdrienne got up from the table and placed a kiss on Juliet's forehead. \"I need to head off for rehearsal. Remember, we've got a concert this Friday.\"\n\n\"I know, I'm so looking forward to it.\" Before Adrienne left the house, Juliet came to her and hugged her tightly. She then walked Adrienne to the door.\n\nAfter Adrienne left, Juliet spent the day at home, doing some housekeeping and spending time on the phone with the Administration Office discussing possible curricula for the winter term. \n\nThat evening, Juliet had a spectacular meal waiting for Adrienne. She'd served up a Romaine salad with a vinaigrette dressing, some baked squash and a delicious chicken casserole. Truth is, she had outdone herself. Because of the issue with her recent drinking, she skipped the wine, and served them lemon scented water. And for dessert, there was raspberry sorbet. \n\n\"Wow, this is really good,\" Adrienne sang out her praise, after having savored a bite of casserole. \"Forget law school. Let's open a restaurant,\" she joked.\n\nIt was like old times, as the girls joked and laughed. That night, they snuggled in bed together, and Juliet tentatively began to caress Adrienne's body. After a bit, she leaned over and sucked on Adrienne's breasts, and Adrienne moaned her approval. \n\nBut when Juliet began sliding down Adrienne's body, heading toward that special place, Adrienne stopped her. \"Not tonight.\"\n\n\"Okay,\" Juliet agreed. \"Too soon?\" she asked, hiding her disappointment, and aware that this might be due to a loss of trust.\n\n\"I think so,\" Adrienne replied, awkwardly. \n\n\"Is there anything you want to get off your chest?\" Juliet asked, pressing herself even closer to Adrienne. \n\nAdrienne took a breath and thought for a moment. \"You remember when you bought those toys for us, and how unsure I was about using the strap-on with you?\"\n\n\"Yeah,\" Juliet nodded. \n\n\"Well, I just kept worrying that you were starting to hanker for a cock. I mean, I get the dildos and vibrators. But this was different, and I was afraid that you really wanted a guy, and that I was an experiment for you...\"\n\n\"Yes, but\u2014\" Juliet began to object, but Adrienne stopped her.\n\n\"Wait! I'm not finished. But you assured me that it was just for fun, and that I meant more to you than that toy. And I believed you. And now, suddenly, here you are, jerking off some guy in his car, and I'm thinking, 'Wait a minute! Maybe she DOES want a cock! Maybe she is still hooked on men, and sooner or later, she is going to dump me.\"\n\n\"Adrienne...\"\n\n\"And then there's your mother telling me that we're not going to last, and that you'll realize I'm just a phase...\"\n\n\"When did she say that to you?\" \n\n\"It doesn't matter. She said it.\" \n\nFor nearly a minute, Juliet said nothing. \"Adrienne, I totally get why you feel this way. I can see how my actions, both then and now, might have conveyed that message. But my mother is wrong. We ARE going to last! And I do NOT want a guy. I want YOU. And we don't have to ever use the strap-on again. I'll pack it away. Better yet, we'll sell it. I'll list it on e-Bay. 'Lesbian with cock for sale!' \"\n\nAdrienne laughed at the image of the harness posted on e-Bay. \"Langford, you are too funny.\" \n\nJuliet loved to make her favorite girl laugh. \"Believe me, 'A', I don't want to do anything that will put our relationship at risk.\"\n\n\"And I don't want to be a stick in the mud,\" Adrienne continued. \"I mean, you do come up with things for us to try in bed together. You make sex fun, and I don't ever want that to stop.\"\n\n\"Maybe you should take the lead for a while,\" Juliet suggested. \"Let's do things you want to do. If you want to snuggle or watch a movie, we'll do that. Or take a bath together, or go for a run, or...go down on me...\" she winked. \"How's that sound?\"\n\nAdrienne leaned over and kissed Juliet very tenderly on her lips. \"I like it. We just went through a rough patch, and now we're working our way through it.\"\n\n\"Because we love each other,\" Juliet stated happily.\n\nAdrienne nodded. She now knew for sure she loved Juliet. For the hurt she felt was almost unbearable.\n\n~*~*~*~*~\n\nAnyone who has ever been guilty of, or on the receiving end of an infidelity, knows that the process for healing can take a while, if there's healing at all.\n\nIt was no exception for Adrienne and Juliet. However, despite Adrienne's insecurity, their bond was strong. They continued to sleep together, and be affectionate with each other. And they worked out in the yard, and Juliet even started jogging with Adrienne in the mornings, though she was nowhere near as aerobically fit. But she did love seeing Adrienne in her running shorts!\n\nTo Juliet's relief, Adrienne did become more sexually active. And her oral skills were as brilliant as ever. Of course, Juliet being Juliet, she struggled to keep her libido in check, though it didn't stop her from flirting. But if Adrienne was going to push her up against a wall and finger fuck her, then it would be on Adrienne's terms, not hers. \n\nThe day before Adrienne's first major concert with the PCO, Juliet cooked a wonderful meal. Afterward, she had Adrienne strip down naked and lie on the bed for a pre-concert body massage. There was some sexual teasing, but it was all subtle and spare. And by the end of it, Adrienne was a puddled mess.\n\n\"Mmmm,\" Adrienne moaned, her sex now a few light touches from exploding. \n\n\"Do you want me to take care of you?\" Juliet dared to ask.\n\n\"Yes, baby. Please...\" Adrienne begged. \n\nJuliet grinned from ear to ear. Bending down between her lover's legs, she applied a few gentle licks to her labia with the tip of her warm, wet tongue. She followed that up with some rapid tongue flutters to get her even wetter, and then a gentle circular teasing of her clit. And then she slid a lone finger up inside. And that's all it took. \n\n\"Oh fuck!\" Adrienne cried out as she came. Juliet placed her hand on Adrienne's thigh and kept it there as her beloved partner shuddered through a gratifying climax.\n\n\"Don't worry about the sheets,\" she cooed into her lover's ear. \"I'll change them in the morning.\"\n\n~*~*~*~*~\n\nThe day of the concert, Adrienne spent it lounging in the back yard. Her goal was to relax in the sun until her six o'clock call. Her concert dress was pressed and ready. Juliet, however, had purchased an absolutely stunning red dress with an open back, just for this opening. Her lipstick matched the dress and her blue eyes were artfully accentuated with some color.\n\nWhen she appeared from out of the bedroom, Adrienne audibly gasped. \"You look beautiful, babe.\" Her words made Juliet tear up with joy. Hearts and trust were on the mend. \n\nJuliet went to the theatre with Adrienne, and waited in the lobby for the seven-thirty start. Of course, Adrienne had reserved a ticket for Juliet, front and center. The first thing Juliet picked up on was that this hall, and the people in attendance were of a completely different strata than the student performances back in college. She felt as if she were now hobnobbing with the cognoscente.\n\nThe concert hall was packed. And for good reason. The program was full of chestnuts. Adrienne had been going on about it since she first learned she'd be performing it. In addition to a Bach Brandenburg Concerto and an early Haydn symphony, Adrienne, along with her fellow string players would perform Edvard Grieg's suite 'From Holberg's Time' and Tchaikovsky's 'Serenade for Strings.'\n\nAll evening, the hall was ravished with a chorus of sound. As Juliet watched her partner, along with her colleagues, bring this wonderful music to life, her heart swelled with love. 'That cellist, just in from the right, the one with the beautiful eyes, sexy nose and long, dark hair...I get to go home with her tonight,' she told herself, with a smug smile. \n\n'And serve her up a treat, she'll never forget.'\n\nAfter the concert, there was a party in one of the conference rooms, and Juliet found herself beaming proudly as Adrienne introduced her to the other members of the orchestra as \"my partner.\" It made Juliet so proud to be introduced that way.\n\nAs for Adrienne, she felt as if she'd stumbled into some alternate universe. Barely six months ago, she would never have imagined she'd be playing in a new city, with such fine musicians, and that she'd be in a committed relationship with a young woman, who, no matter how much she challenged her and even hurt her at times, loved her dearly. \n\n\"Juliet, this is Jayne Collier, one of our violists,\" Adrienne said placing her hand on Juliet's bare back.\n\nJayne, who stood just this side of six-feet, was slender, and wore her straight hair in a bob reminiscent of a 1920's flapper. \"So, this is the 'love of your life'\" Jayne enthused. \"It's a pleasure to meet you, Juliet. Adrienne speaks very highly of you,\" she added, extending her hand in greeting.\n\nJuliet took Jayne's hand, startled that Adrienne had spoken of her to others as 'the love of her life'. It also caused a flutter in her stomach, knowing how close she came to losing that.\n\n\"How do you like Portland?\" Jayne asked, drawing Juliet back from the precipice of emotional turmoil. \n\n\"Well, it's still pretty new to us, but so far, it's been wonderful,\" Juliet replied, still reeling from the previous revelation. \"Of course, that's because I happen to be living with the love of my life, too,\" she stated confidently, before impulsively leaning over and kissing Adrienne on her cheek.\n\nJayne was impressed. \"How do you two manage to keep all this love flowing?\" \n\nJuliet stole a quick glance at Adrienne, before answering. \"Well, it's not always easy, and sometimes you mess things up, but when you realize that you're with the perfect person, and that you will never find anyone as wonderful as she is, then it becomes pretty clear where your priorities should lie.\"\n\n\"And I bet she's good in bed, too,\" Jayne teased.\n\nJuliet nearly choked on her wine, causing Jayne to roar with laughter. \"I'm just kidding. Though actually I'm not. Anyway, it was nice meeting you. You take care of this one,\" Jayne ordered Adrienne. And she strolled off. \n\n\"Well, that was interesting,\" Juliet said, not bothering to conceal her amusement. \n\nAdrienne nodded. \"Yeah, Jayne is quite the character. Great player, though. Shall we go?\"\n\nDuring the ride home, Juliet gushed over how beautiful the concert was and how proud she was of Adrienne. Adrienne waxed on about the program, and how excellent an ensemble they were while Juliet soaked it all in, her mind already focused on the sexy surprise she had waiting at home. \n\n~*~*~*~*\n\n\"Want to shower?\" Adrienne asked, slipping out of her concert dress. \n\n\"No, you go ahead, I'm going to change in the bedroom. Besides, I didn't work up a sweat the way you did.\" She flashed a mischievous smile.\n\nWhile Adrienne showered, Juliet grabbed a bowl and a canister from the refrigerator, and slipped into the bedroom. She then went about the room lighting the six strategically placed candles. \n\nAfter lighting the candles, and turning on some very soft music, she got naked and turned back the covers. Lying on the bed, she prepared herself for Adrienne's arrival.\n\n\"Hey Juliet, the shower is all yours, if you want it.\" No answer from the bedroom. \"Juliet...?\" Adrienne called, stepping into the bedroom. \n\n\"What the...?\" The sight of Juliet on the bed brought Adrienne to a stop. Her mouth agape. \"Oh my god...\" she gasped, a smile forming on her lips.\n\nJuliet was lounging on her back, her arms folded behind her head, grinning very naughtily. She was completely naked. Well, not completely. In the place where her nipples should be, were two dollops of whipped cream. And set into each of those dollops was a large purple grape. \n\nAdrienne's bewildered gaze trailed further on down Juliet's body. Where her belly button should be, sat a large, bright red strawberry. And further down, past her tuft of pubic hair, Adrienne saw that a long trail of yet more whipping cream had been sprayed up the length of her slit. \n\nAdrienne then admired the golden flickering light from the many candles placed about the room. Their soft glow was dancing over her lover's creamy white skin. \n\nShe stepped closer, slowly shaking her head in wonder. Juliet cocked her head ever so slightly and raised her eyebrows. \"Hungry?\" she inquired, through bared teeth. Between her lips, she held a second bright red strawberry.\n\nAdrienne took off her robe and tossed it toward the chair, missing it completely. She walked over to the head of the bed and gazed down at her partner now delectably laid out for what appeared to be Adrienne's 'dining pleasure.'\n\nLeaning down, Adrienne kissed Juliet on the mouth. As they kissed, their lips and tongues transferred the juicy strawberry from Juliet's mouth to Adrienne's.\n\n\"Mmmmm,\" Adrienne hummed as she bit down on the strawberry and her mouth filled with a burst of fruit-flavored goodness, even as the girls continued to kiss. After breaking the kiss, Adrienne's eyes wandered on down Juliet's body. \n\n\"Hmmm,\" she debated. \"Where to start first?\"\n\nJuliet giggled at that, and then gasped as Adrienne leaned down and gobbled up a grape from off her creamy nipple. Adrienne then opened her mouth wider and engulfed as much of the cream as she could, in one slurping mouthful. She swallowed the sweet cream as her lips clamped down on Juliet's luscious teat and with the help of her tongue, licked and sucked it clean.\n\n\"Oh,\" Juliet gasped, her chest raising up off the bed. Well after the cream had dissolved in Adrienne's mouth, she continued to suck on the teat, enjoying its spongy texture. The suction had Juliet moaning lustfully and her body writhing sensually on the bed. \n\nAdrienne released the nipple and looked up at Juliet. She grinned as she licked her lips. \"Mmmm, tasty.\" Juliet smiled back, looking quite dreamy-eyed. \n\nAdrienne then moved around to the other side of the bed and climbed up alongside Juliet's naked body so she could more easily access the other cream covered nipple. First, the grape, then the languorous lapping up of the creamy dollop from her spongy nubbin. \n\nAll through the nipple sucking, Juliet gasped and moaned, and it occurred to her that by the time Adrienne got down to her pussy, the whipping cream she put down there would be all runny. \n\nAdrienne then used her teeth to grip and pluck the strawberry from Juliet's belly button. But instead of eating it, she offered it to Juliet between her clenched teeth. Juliet opened her lips and Adrienne kissed her, dropping the berry into her lover's mouth. Juliet did her best to chew up the strawberry, though it wasn't easy to do with Adrienne actively French kissing her.\n\nWith a loud, smacking sound, the kiss ended, and Adrienne looked down Juliet's body to where her legs lay open. Adrienne gave her lover a mischievous glance before hoisting her right leg over Juliet's waist so she could sit astride her. \n\nFacing down Juliet's body, her moist sex resting on Juliet's tummy, Adrienne leaned forward and buried her face between Juliet's spread thighs. Instead of feminine arousal, she was greeted with the smell of sugar. She planned to remedy that, right soon. She extended her tongue and ran the tip of it down the middle of Juliet's fleshy, swollen sex, scooping up cream as she went. \n\n\"Oh, god,\" Juliet moaned, her body rocking and twisting under Adrienne's weight. Adrienne took hold of Juliet's thighs and held them open as she began to suck and lick more of the sugary residue off her pussy lips. Eventually, she began to unearth that piquant feminine scent that her taste buds craved.\n\n\"Oh god, eat me, baby,\" Juliet groaned, so grateful that she had a lover who never got tired of going down on her. And who was ridiculously good at it too! \n\nIf there was any cream left to lap up, Adrienne no longer cared. She was totally focused on bringing her lover to climax. Juliet's body was now undulating on the bed, her pussy hot and buzzing beneath Adrienne's tongue. The muscles in her legs were straining against her lover's firm grip.\n\nThere were times when making love was, for these two lovers, gentle and artful, teasing and lazy. Sometimes, not even goal oriented. But this was akin to a wrestling match, active and rough, and just a little wild. \n\nAdrienne had a feeling that their lovemaking might be different. It's not every night you walk in to find your lover adorned with berries and cream, and bathed in candlelight. If only she had remembered to snap a photo. Oh well, next time. \n\nAnd Juliet had done this all for her. Well, not just for her, but sort of. 'Ah, Juliet, Juliet, Juliet... ' That rough patch was scary, and yet the prospect of losing her was even scarier. \n\nWho was Adrienne without Juliet? She couldn't even remember what life was like before they met. Juliet was the first woman she'd ever had sex with, and the only person she truly enjoyed having sex with. Their personalities were actually quite different, as was their upbringing, and yet none of that mattered. They were far more connected than not, and though they often were of two minds, they were very much joined in spirit. ",
        "\"Nnnnh, Nnnnh, Nnnh...\" Juliet's body pushed off the mattress, her muscles straining to gain the prize. Adrienne's face remained pressed to her lover's sex, her open mouth sealed around it, and her tongue fluttering deep inside the warm, wet center.\n\n\"Ooooooh...\" came her lover's drawn-out moan, rising in pitch and urgency, her torso arching off the bed as her muscles drew taut and started to quiver. \n\nAnd then she released. \"...Oh My!\" \n\nThe wetness that flowed out of her was, for Adrienne, a gift to be savored. 'That's what it was,' she thought, as she lapped up her goodness. 'A precious gift from my girl.'\n\n~*~*~*~*~\n\n'Could life be any better?' the girls wondered. It was a warm fall day, and they were out in the garden, clearing out some weeds and preparing a few beds for some late seasonal plantings. Juliet wiped the sweat off her brow, her pink headband keeping her blonde hair out of the way of her blue eyes. In her gloved hand was a small digging tool for prepping holes for tiny seedlings. \n\n\"You look so happy,\" Adrienne called out, as she admired her girlfriend from the back door. \n\n\"I am,\" Juliet hollered back. \"I just love the feel and smell of this dirt. It's so good to get my hands dirty.\"\n\n\"There you go, getting dirty again,\" Adrienne teased. The smile Juliet returned was radiant. So wide, in fact, it made her eyes seem smaller. And if possible, Adrienne fell just a little more in love with her.\n\nAnd then Juliet's phone rang. \"Hello?\" she answered, reaching into her apron pocket. \n\n\"Yes, hello Mom.\" Juliet stuck the spade in the ground, and stood up, rolling her eyes. \"I'm doing fine. How are you?\" \n\nFor the past few weeks, Juliet's mother had been calling Juliet's phone constantly. And each time, she would press Juliet to fly home for a visit. Of course, Juliet did plan to visit at some point, but what Clarissa really wanted was Juliet to come home for good. \n\nShe just wouldn't stop pressuring Juliet to bail on her partner, and give up her present life. For a while, Juliet patiently tolerated the prodding and the cajoling, and the guilt tripping. But lately, it was starting to mess with her head.\n\nThen, one morning after Juliet and Adrienne had finished breakfast, Juliet's phone rang, yet again. She stared at the readout and fumed. \"I can't believe this!\" She looked at Adrienne. \"It's my mom calling again.\"\n\n\"Give me the phone, honey,\" Adrienne beckoned with her fingers from across the table. Juliet handed the phone to Adrienne who punched in the password.\n\n\"Hey Clarissa, it's Adrienne.\"\n\n\"Oh. May I speak with Juliet,\" Clarissa asked, sounding a bit disoriented. \n\n\"I'm sorry, she not home right now, and I have her phone with me. She's meeting with an enrollment counselor this morning about going back to school to start on her law degree. We're pretty stoked.\"\n\n\"Well, when she gets home, would you please ask her to call her mother?\"\n\nAdrienne took a deep breath. \"I don't think I can to do that.\" She looked over at Juliet who stared back across the table, looking confused.\n\n\"I beg your pardon?\" \n\n\"You can't keep calling here and pestering Juliet to move back home with you. It's not cool. We have a life here, Clarissa. And we like that life. What would really be great is if you took an interest in it, and asked her how she's doing, and what she's up to, instead of pressuring her all the time.\"\n\nJuliet flashed a flirtatious smile, in reference to the 'what she's up to' comment.\n\n\"If she were living at home, I wouldn't have to pressure her,\" Clarissa replied in a snooty tone.\n\nAnd that's when the light went on in Adrienne's brain. This had nothing to do with her daughter's lesbianism, or even finding Juliet the right guy. It was all about maintaining control.\n\nUp until recently, Adrienne had bought into Juliet's belief that her mother was homophobic or that she didn't like Adrienne. But it ran deeper than that. After Adrienne arrived on the scene and took pride of place in Juliet's life, Clarissa was no longer top dog.\n\nFor twenty years Clarissa had controlled Juliet's life, orchestrating the outcomes, determining exactly what sort of person she was to be. And then along comes Adrienne and steals her away. And she just couldn't accept that, couldn't relinquish the reins.\n\nAnd even after Juliet moved all the way across the country, Clarissa still retained some influence over her; not physically, but certainly emotionally. The key was, she didn't wield that influence over Adrienne. \n\n\"So that's it, isn't it?\" Adrienne stated in an accusatory tone. \n\n\"What's 'it'?\" Clarissa replied with annoyance.\n\n\"You can't control me, like you do her. And that's pissing you off. Because you have to go through me to get to her. Not because we live in Portland, but because she trusts me.\"\n\n\"I just want my daughter back. You have no idea what she needs, or how to care for her...\"\n\nClarissa was pleading with Adrienne. Whether it was sincere, or just a ploy, Adrienne remained firm. \"Actually, I do know what she needs. And if you cared for her as much as you say, why you do make her feel so small all the time? I have to keep reminding her that she's not, and that she is awesome and special. Something I've never heard you say to her.\"\n\nSuddenly, on the other end of the phone came a guttural cry of anguish. And the line went dead. It left Adrienne shaking. \n\nDuring the call, Juliet had remained at the table, confounded by Adrienne's handling of her mother. She could never do that. \n\nAfter Clarissa hung up, Adrienne handed the phone back to Juliet. \"Here.\" She made to exit the kitchen, when Juliet ran to her and stopped her.\n\n\"Sorry. I don't think I helped matters much,\" Adrienne said, her anger still bubbling.\n\n\"Don't say that. You were amazing. And thank you for defending me,\" she said, giving Adrienne a fierce hug. \"I just can't get over the way you put yourself out there. How do you do it?\"\n\nAdrienne wasn't sure she knew the answer to that. \"I guess when I really care about someone, I want to stand up for them. You're important to me.\"\n\nJuliet smiled, at a memory. \n\n\"What?\" Adrienne inquired, sensing a story.\n\n\"'You're important to me'. That's what you said after I got angry with you for ditching me at the club. And sneaking out with Lilith,\" she added, pinching Adrienne's waist.\n\n\"Ow! How many times do I have to say it. I didn't sneak off with her! But I'm beginning to think that maybe I should have,\" she pinched back.\n\n\"Oh yeah?\" Juliet countered, playfully tickling Adrienne's body. \"I wouldn't have been your first, then. Ooooh. That's disgusting.\"\n\n\"Oh yeah!\" Adrienne huffed, grabbing Juliet around her waist and dragging her into the living room. \"Eeeeh, no...AHHHH! Juliet screamed as Adrienne tossed her onto the sofa, and then pounced on her with a major tickling attack that had Juliet begging for mercy.\n\n\"Give up? Had enough?\" Adrienne taunted, both girls laughing.\n\n\"Ahhhh, no! Stop! Yes! Yes, I've had enough! STOP!\" \n\n\"Are you sorry?\"\n\n\"Yes, I'm sorry I wasn't your first\u2014I'm kidding, I'm kidding! I was your first! I was your first!\"\n\n\"Darn right, you were...and my second...and my third... Want me to keep going?\"\n\n\"No...uhh...no...uhh...uhh...I give, I surrender...\" Adrienne stopped her tickling and Juliet lay panting on the floor. Both of them were breathing fast and deep. Their faces were flushed and they were giddy with happiness. \n\nStill slightly out of breath, Juliet reached up and pulled Adrienne down by her shirt collar. She began kissing her passionately on the mouth. Adrienne wrapped her arms around her and the kiss deepened. \n\nEventually, they broke their kiss, and stared into each other's eyes, their faces still flushed and their adrenaline racing through their bodies. \"You know, I've heard of angry sex, and make-up sex...So, what's this, then? Tickling sex?\"\n\n\"I'm not sure tickling qualifies as sex,\" Adrienne observed \n\n\"Well then, we better take this into the bedroom,\" Juliet giggled. \n\n~*~*~*~*~\n\n\"Hello, Dad?\" Juliet spoke into the phone. \n\nIt was Saturday morning, and the girls were sitting at the kitchen table enjoying a late breakfast of oatmeal and coffee, after a night out of dancing at their favorite club.\n\n\"Hey, sweetie. I'm afraid I have some bad news. Your mother is in the hospital.\"\n\n\"Oh my god, what happened?\" \n\nAdrienne saw the urgency appear on her girlfriend's face. \"What's wrong?\" she asked, leaning in. Juliet shook her hand, gesturing that she was trying to listen.\n\n\"Well, according to the doctors, she's suffering from mental exhaustion. She also has excessively high blood pressure,\" her dad explained.\n\n\"That sounds serious.\" Juliet, a concerned look on her face, quickly explained to Adrienne. \"It's Mom. She's in the hospital.\" She then turned her attention back to her father. \"So, is she going to be all right?\" \n\n\"Well, they have her stabilized. I'm at the hospital with her now, and I'm going to stay here with her until they determine that it's safe enough to take her home. I'll call you as soon as I know more.\"\n\n\"Okay. Bye.\" Juliet signed off.\n\n\"What's wrong?\" Adrienne asked, reaching out and squeezing her girlfriend's arm.\n\n\"It sounds as if Mom suffered some sort of nervous breakdown. She's in the hospital now.\"\n\n\"Wow. I'm sorry, Juliet.\" Adrienne did feel badly, despite the bad blood. She also couldn't shake the eerie feeling that she had something to do with that breakdown.\n\n\"I think I need to fly out there,\" Juliet suddenly stated.\n\n\"What?\" Adrienne was shocked. \"For how long?\"\n\n\"I don't know. Until she's better, I guess. Dad can't stay with her, and Thomas has a new baby to look after. I'm pretty much the only support she has.\"\n\nAdrienne gritted her teeth. \"Juliet, what about school? Winter quarter starts in little over a month.\"\n\n\"I could put off starting until Spring quarter.\"\n\n\"You know some of those classes won't be offered again until next year. Try and be sensible! Look, I love your impulsiveness, and your spontaneity, but this is one time when I really think you need to take a deep breath and think this through.\"\n\nFrustrated, Adrienne stood up from the table. She grabbed her coffee and got ready to head out back.\n\n\"Where you going?\" Juliet asked, knowing her partner was angry with her. \n\n\"I'm going to sit outside. Damn Juliet, can't you see how that woman keeps manipulating you?\"\n\n\"That's not fair! She's sick!\" Juliet called after Adrienne who was making her way out to the backyard.\n\nIt was a sunny day, and Adrienne stretched out in the lounge that was part of some garden furniture they inherited with the purchase of the house. She really liked the privacy of their little backyard lot, and enjoyed relaxing with a beer and a good book out on the small patio.\n\nA few minutes later, Juliet came out to check on Adrienne. Without saying a word, she walked over and placed a kiss on her girlfriend's head. \"Hey,\" she said, sitting in one of the adjacent patio chairs. \"I promise not to be so impulsive, okay?\"\n\nAdrienne nodded. \"Okay.\" \n\nSuddenly, Juliet's phone buzzed again. \"It's Dad. I'm going to take this inside.\" She got up and went back inside to talk to her father in private.\n\nAdrienne exhaled, wondering if they'd ever mend this tumultuous chink in their otherwise sturdy armor.\n\n\"Hey Dad, what's the news with Mom?\"\n\n\"They're releasing her today. I'll be taking her home and making sure she gets plenty of rest and TLC.\"\n\n\"You're going to look after her? How can you do that? You're traveling all the time for work, and Thomas has a stressful job and a new baby to care for. Why don't I come and stay with her?\"\n\n\"Juliet. Your mother and I are getting back together.\"\n\n\"What?\" Juliet was shocked. \n\n\"It's the right move for us,\" her father added, sounding sure in his assessment.\n\nAfter a pause, Juliet posed the inevitable, awkward question. \"Does Caroline know about this?\"\n\n\"No, but she'll be fine with it. Actually, it was she who pointed out to me that I was still in love with your mother. At first, I didn't believe her, but she was right. Juliet...you've got school starting soon, and a whole new wonderful career for you in law. Your partner is holding down a very important full-time job. The two of you are starting to build your life together. That's where your focus needs to be, honey. There will be plenty of time for you to make a trip out to see us.\"\n\n\"Okay...\"\n\n\"You know, watching you grow up, my biggest worry was that you found someone to really love you, and treat you well. Someone who would look after you and support you. I have to admit, I wasn't thinking that person would turn out to be a woman, but Adrienne is as loving and loyal a partner as you could ever ask for. And you don't want to mess that up. Take it from someone who has spent far too many years away from his family.\"\n\nHer father's words were like a ray of sunshine pushing through a clouded sky. \n\nJuliet thought back. During a moment of weakness, she had indeed, almost messed things up. And she had vowed then, to Adrienne, and to herself, never again to put her relationship at risk.\n\n\"Thank you, Dad, for the sage advice. I'm glad Mom has you to look after her.\" And they ended the call. Having made herself a cup of tea, she went to join Adrienne out in back. She approached the lounge where Adrienne was lying with eyes closed, a peaceful expression on her face. \n\nJuliet gently massaged her shoulder, jarring Adrienne out of her nap. \"Hey.\"\n\n\"So, when you leaving?\" Adrienne asked.\n\n\"I'm not. I'm staying here so I can focus on school and put my energies into taking care of you.\"\n\nAdrienne was pleasantly surprised by her girlfriend's change of heart, but still cautious about the elephant lurking in the room. \"What about your mom?\" \n\n\"Dad is moving back in with her, so he can look after her. Seems your mom and he aren't an item anymore.\"\n\nAdrienne knew from conversations with her mother that she was ambivalent about Ted, but this was news. Adrienne carefully studied her girlfriend. She seemed happy. Her energy felt clean. \n\nJuliet extended her hand for Adrienne to take. \"What do you say we check out the bedroom?\" she suggested, with a flirtatious batting of her eyelashes.\n\n'Irresistible as always,' Adrienne sighed, gazing up at the adorable blonde who had won her heart. Not wishing to squander an opportunity, she hopped up and the two raced back into the house. \n\nONE YEAR LATER\n\n\"What time does our flight leave tomorrow?\" Adrienne called out from the bedroom.\n\n\"Six-thirty in the morning. The shuttle is picking us up at four-thirty.\"\n\n\"Oh god! This cross-country flight is going to kill me.\"\n\nJuliet breezed into the bedroom and planted a kiss on Adrienne's lips. \"We'll survive it. I am so excited to see your mom. This Calvin fellow sounds pretty promising.\"\n\nAdrienne, nodded in agreement. \"She sure seems to like him. I'm really happy for her. I'm looking forward to seeing your family, too.\" \n\nThis was the girls first trip back to see their families since they settled out west. Not since Juliet's mom suffered what was essentially a nervous breakdown, nearly a year ago. \n\nAnd yet, despite all that past baggage, Juliet was feeling chipper. \"Yeah, Mom seems to be doing much better now that Dad's back with her. And I can't wait to see Thomas and Molly's little boy. Hard to believe that Jason is already turning one.\"\n\n\"Time sure does fly by. Did you pack his gift?\"\n\n\"Yep. I managed to squeeze it into the green carry-on. Speaking of gifts...I have a little something for you.\" Juliet went over to her bedside table and took a small gift-wrapped box out of the front drawer. She brought it over and held it out for Adrienne to take. \n\n\"This is for you.\"\n\nAdrienne took the box. \"What is it?\" she asked, sitting down in a chair and staring at the beautifully wrapped box. \n\n\"Open it,\" Juliet said, sitting down on the edge of the bed to watch. Adrienne began carefully removing the bow and wrapping paper, doing her best not to tear it, which Juliet found quite entertaining. Adrienne eventually gave up.\n\n\"Errgh,\" she said ripping it open. \"Sorry,\" she apologized, making a funny face.\n\nJuliet laughed. \"And yet somehow you have the patience to memorize a complete cello concerto.\" \n\nAdrienne made another face. Inside, was a second plain box. Adrienne took off its lid. There, resting on some batting was a glittering silver band. She picked up the ring and held it up to the light. \"It's beautiful, Juliet. I hope that's not a real diamond.\"\n\n\"Don't worry, it's not,\" Juliet assured her mate. \"So... will you?\"\n\nAdrienne gave her a quizzical look. \"Will I what?\"\n\nJuliet got up from the bed and sauntered over to her partner. \"You know Sokol, for someone who claims to be the brains of this outfit, you sure are dense sometimes.\" \n\nShe got down on one knee at Adrienne's feet, took hold of Adrienne's hand and looked up at her. \"Adrienne Sokol...Love of my life...The greatest thing that's ever happened to me...Someone who never lets me forget that I am loved and cherished...Will you consent to be my wife?\" \n\nAs Adrienne sat there, looking as bewildered as ever, Juliet stood up and straddled her lap. She draped her arms around her partner's neck and kissed her gently on the lips.\n\nAnd then Adrienne\u2014level-headed Adrienne, the brains of the outfit\u2014dropped her head onto Juliet's chest, and did something she rarely did in front of others. She burst into tears. \n\nTHE END\n\nDear readers: for now, this is as far as I have taken this tale of Adrienne and Juliet. It's possible that I may revisit them in the future, but for now, I'll leave them to work things out on their own. I hope you enjoyed getting to know them, and found their story worth your time."
    ],
    "authorname": "BirdnFlight",
    "tags": [
        "lesbian cunnilingus",
        "oral sex",
        "hand job",
        "lesbian romance",
        "oral sex",
        "romance",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/adrienne-s-duet-pt-06"
}