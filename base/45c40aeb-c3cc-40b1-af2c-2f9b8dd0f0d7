{
    "title": "The Spirit is Willing",
    "pages": [
        "Eric woke up in the full knowledge that it was Saturday morning, and that he could be lazy and lie in bed for as long as he liked. He also knew that he didn't have anything to do, and that today would be a good day to maybe get some writing done, if his muse would cooperate.\n\nWhat Eric also knew was that he felt a very pleasant sensation running across his chest. It was the sensation of a slender female arm pressed lightly against him.\n\nEric's eyes opened very wide at that realization.\n\nThere were two problems with what was happening to Eric just then. The first was, as inexperienced with women as he was, he had no idea how to deal with a woman caressing him in this manner. The second problem was a little more distressing.\n\nHe had not gone to bed with anyone the night before.\n\nEric rolled over quickly. It turned out to be a little too quickly, as he was so near the edge of the bed already that his move actually threw him completely out of the bed. As he was falling to the floor, he thought he caught a glimpse of auburn waves, but when his ass met the rather hard floor and his head bumped into the nightstand, he couldn't be sure he hadn't imagined it.\n\n\"Fuck,\" he muttered to himself, reaching up to rub the growing knot on his head. As he brought his hand down, he looked up to see the most wonderful brown eyes staring back at him. He had not imagined the auburn tresses that caressed the face of this beauty.\n\n\"Good morning,\" she said with a smile that beamed sunlight directly into his heart. \"I hope you're not hurt...\"\n\nEric was far too stunned to speak. His mouth hung agape as he stared at one of the most beautiful faces he had ever seen. He felt dizzy, and out of focus. It was as if someone were messing with the monitor controls on his life. He made some very incoherent noises that refused to resolve themselves into words before he finally took a deep breath.\n\n\"Um... who are you?\" he asked, shakily and with no small amount of concern.\n\nShe giggled at him. \"Well, I'm Bridget, silly. Boy, you must have bumped your head harder than I thought if you can't recognize your own muse.\"\n\n\"Uh...\" he said, rather intelligently, he thought.\n\n\"Are you sure you're okay?\" Bridget asked, a look of concern creasing her splendid features.\n\n\"Yeah, I, uh, guess so. He rubbed his head again, wondering if he was dreaming. He could not recall a dream that had hurt this much, though. He tried to sit up, but most of his muscles said they were quite comfortable right where they were, thank you, and why didn't he just lie here for a while?\n\nEric gave up the struggle, and settled back to look up at the lovely woman who claimed to be, of all things, his muse. He knew this had to be some kind of trick, or perhaps a game his friend Robert was playing on him.\n\nSighing heavily, he asked her, \"Who sent you?\"\n\nBridget became confused. \"Nobody sent me. You called for me.\"\n\n\"Yeah, right. Look, I'm not really in the mood for practical jokes this morning.\"\n\nEric thought he saw a tear in Bridget's eye. \"You don't want me?\" she asked.\n\nOh, shit, he thought to himself. Now what? \n\n\"I, uh... didn't say that, exactly... Look, I'm a little confused.\"\n\nBridget's features brightened. To Eric's dismay, she slipped out of the bed and straddled his waist, her forearms pressed gently against his chest, and her eyes mere inches from his own. This was disturbing to him because he had just discovered that Bridget was not wearing any clothes. \n\n\"Confused, huh? Maybe you've got a concussion. Maybe I'll have to care for you all day. Maybe...\" she said, with a wicked twinkle in her eyes, \"you need mouth-to-mouth resuscitation!\"\n\nHaving said that, Bridget pressed her lips tightly to Eric's. He was too stunned to react at first, but he had to admit \u2013 after the shock had passed \u2013 that it felt damned good to be kissing a girl. As it was the first time in his nineteen years that he had done so, he decided to enjoy the experience. He kissed back, clumsily but enthusiastically, and Bridget did not seem to mind his ineptitude.\n\nTheir kiss continued for long moments, and it was as if Bridget was able to coach him without saying a word. He felt more confident in himself as he continued to kiss her. Just then, he felt her tongue slip out of her mouth and run across his lips. He knew what she wanted, and he hesitantly opened his mouth to let in the slippery intruder.\n\nAs Bridget's tongue began its invasion, she slipped her hands down off Eric's chest onto the floor. As she did that, Eric could now feel the wonderful weight of her ample tits pressing against his chest. He groaned at the sensation, as his tongue was being assaulted by hers. He began to slip his tongue against hers, and she purred deep in her throat, which vibrated her tongue and sent shivers down his spine.\n\nBridget's hands began to caress Eric's sides, and he was going into sensory overload. The bump on his head was long forgotten as he concentrated on kissing this beautiful, if mysterious, woman. He finally got up the courage to move his hands, and he embraced her, allowing his hands to rub across her back. He felt her shiver slightly from that, but he didn't really know what that meant. She didn't pull away from him, however, so he continued to lightly stroke her silky smooth skin.\n\nAfter a while, however, Bridget did pull away from him, and sat up. His hands naturally fell from her back to rest on her hips. She smiled down at him as he stared up at her... well, he was clearly staring at her tits, and not her face. Bridget took hold of his hands, and gently brought them upward. She placed his hands on her breasts and held them there.\n\nNow that the focus of his attention was no longer in view, Eric moved his gaze up to meet Bridget's. Her warm smile encouraged him to act. Slowly, shakily, his fingers began to move on her breasts. Bridget's eyes closed halfway, and she let out another soft moan. As his fingers gently stroked over the skin of her tits, his palms were rubbing against her nipples, and it was sending sparks of pleasure throughout her body. She leaned forward slightly, to allow him better reach, and was rewarded with a more active partner. She reveled, for several moments, in the feel of his hands against her chest.\n\nFinally, Bridget knew it was time to move to the next step. She bent down once again and kissed Eric. She felt a sense of loss as his hands slipped from her tits to stroke her sides, but she knew that good feelings would be coming soon.\n\nAs they kissed, Bridget reached down and pressed her hand against Eric's dick. His underwear was drenched, and she didn't know if he'd come already, or if her juices had done all of that. As her slender fingers caressed his hard cock, he moaned. Bridget shifted herself slightly \u2013 without breaking their kiss \u2013 and brought both hands down to Eric's briefs. She grasped the waistband, and pulled insistently. It didn't take Eric long to get the idea, and he raised up as much as he could to let her pull them off. It still took a bit of time, but neither of them seemed to mind as their kissing continued unabated.\n\nWhen Bridget had finally worked Eric's underwear past his hips, she broke their kiss. She sat up, and looked down to see his hard cock resting between her legs. Her eyes devoured the sight, and her tongue snuck out to wet her lips. She reached back to finish pulling Eric's briefs out of the way, but she didn't move off of him. She was worried he might chicken out on her. As his muse, she knew he was out of his depth, but it was her job to see that he grew comfortable with the situation.\n\nBridget looked down at her soon-to-be lover, and smiled warmly. She took his dick into her small hand, and caressed it lightly. Eric groaned loudly at the sensation. Holding his cock in place, Bridget raised up to position him at her entrance. Pausing for a moment to enjoy her own anticipation, she took a deep breath. As she let it out, she also allowed herself to sink onto his cock. She released her breath in one long, happy sigh as Eric's prick slipped further and further into her velvety grip.\n\nFor Eric's part, his mind was in overload. He had never been on a successful date in his life, and now, here he was, suddenly having sex with this wonderful goddess of a woman. He could feel her cunt gripping him, her muscles rippling along his length, squeezing him in wonderful ways. She leaned forward slightly, and that change in position sent shocks of pleasure from his toes to his hair.\n\n\"You're supposed to be helping,\" Bridget said lightly. She smiled at him, and looked down at herself. He finally got her meaning, and he returned his hands to her breasts, to massage and caress them. Bridget moaned, and then she began to move her hips.\n\nEric was completely unprepared for the feelings that this sent through his body. He uttered a loud groan as his mind attempted to assimilate the sensations. His hands faltered as his brain locked for several seconds. Meanwhile, Bridget kept moving above him, her hips rolling in a way that seemed to cause continuous new sensation on his dick.\n\nFinally, after a long moment, Eric's brain finally seemed to adjust. His hands returned to their caresses, and he looked up at Bridget in awe.\n\n\"That's... indescribable!\" he grunted out. He was breathing hard and his body was already covered in a light sheen of sweat. Bridget smiled down at him, hoping that he would soon become more active.\n\nAfter a while, Eric's hips began to move, and Bridget sighed at the feel of it. As she rolled into him, his hips would move upward, thrusting his dick deeper into her pussy. The sensation sent waves of bliss throughout her being, and she could feel her heat rising.\n\nEric watched in fascination as Bridget began to move faster. He could sense that something was happening, and he moved his hips in time with her body. Suddenly, her face twisted into a strange expression, and she let out a loud moan of ecstasy. He could feel her juices washing over his dick, and her muscles twinged repeatedly. He knew enough from the movies he'd seen that she was having an orgasm. He continued to thrust up into her, and this seemed to push her even higher. Her pussy began to ripple along his cock, and he loved how that felt.\n\nBridget's climax seemed as if it would never end, and the feelings her pussy was causing were pushing Eric closer to his own peak. Finally, he slammed his hips up into her, burying his cock fully inside of her, and let loose his own grunts of joy. Bridget cried out again at the feel of his cum splashing inside of her, and the two thrashed together for some moments before finally calming down from the heights of their pleasure.\n\nEric knew he had much to learn about relationships and sex. One of the first things he learned was that there is no cool way, with a beautiful woman resting on top of you after \u2013 he thought \u2013 really great sex, to tell her that you really need to go to the bathroom. He tolerated the discomfort until at last she moved slightly to his side. He took the opportunity to roll slightly, so they were side by side now. He kissed her softly, and then he moved to get up, rather surprised that his body was going to let him, despite its earlier protests about moving.\n\nWhen he had finished up his necessary activities, he came back to the room. He was glad to see that Bridget had moved back to the bed, since it was obviously more comfortable to lie on than the floor. He was a little disconcerted that she was still lying there naked, however. Then again, he himself wasn't wearing anything. He joined her on the bed, and she immediately snuggled up next to him. Instinctively, he wrapped his arm around her, and it just felt so right for her to be there. He softly caressed her skin, and he kissed her tenderly.\n\n\"So... who are you, really?\" he asked, less demandingly this time.\n\nShe looked at him for a long moment. \"I really am your muse, Bridget. You don't remember calling for me?\"\n\nHe had. During one of his darker moments, after having yet again been turned down for a date, he had wished that someone, anyone, could teach him what he was doing wrong with girls. His exact words were, \"Why is it my muse can let me write about being with girls, but won't let me actually be with one?\" Of course, he had not expected his muse to show up...\n\n\"So, you mean I just got laid for the first time by a ghost?\"\n\n\"I am not,\" Bridget said somewhat archly, \"a ghost.\"\n\n\"Sor-ry,\" Eric said defensively. He caressed a certain spot by way of apology, and that earned him a beautiful smile. That smile led to a kiss, and the kiss... well, led to the rest of the day.\n\nThe following morning at breakfast, it was clear to Eric that Bridget was upset about something. As he set her breakfast down in front of her, he asked, \"What's the matter?\"\n\nBridget stared at her food with a smile. She looked up at him. \"First off, muses don't eat breakfast. Or lunch, or dinner, for that matter.\"\n\n\"Oh,\" he said sheepishly. \"Sorry.\"\n\n\"That's okay,\" she replied with a beautiful smile. \"It's the thought that counts.\" She sobered after a second, and said, \"We do need to talk.\"\n\nEric sat down and gave her his complete attention, with the exception of beginning to eat his own breakfast, since he was extremely hungry. They'd only stopped long enough for him to eat once the previous day, and he was famished.\n\nBridget pulled herself inward, almost seeming to grow smaller. \"I'm sure you realize that I'm not 'real'. In fact, the only person who can even see me, is you.\"\n\n\"But... how come I can, like, feel you and...\" he said, his mouth stuffed with scrambled eggs.\n\n\"Muses are magic. It's taken a great deal of magic to bring me this far into the world, and I can come no farther on my own. No one else can see me, hear me, or feel me, though I can make them not see things that are happening to you. So, for instance, if we go out in public together, you can talk to me. No one will notice you doing it.\"\n\n\"Are you going to put on clothes when we're in public?\" Eric asked. She wasn't wearing any now.\n\n\"Why? You've already seen all I've got,\" she said with an impish grin. \"Because of the nature of your writing, I'm a highly... uh... 'sexual' muse. I almost never wear clothing. What's the point?\"\n\nEric blushed at the thought of going outside with her not wearing anything, even if no one else could see her.\n\n\"Anyway, there is more. After one revolution of the moon, I'll have to return to my home within you.\"\n\nEric frowned. \"Damn. I knew it couldn't last.\"\n\n\"There is a way to allow you to enjoy the company of your muse permanently,\" she said.\n\n\"How's that?\"\n\n\"By the rules, you must seduce a woman. It must be a very particular woman, who I will show to you, if you want to do that.\"\n\n\"Seduce? Bridget, before yesterday I hadn't even slept with a woman, let alone seduced one! I can't do that!\"\n\n\"Shh,\" she said, reaching across to touch his arm. \"I'll help you. I'll teach you. What you need is confidence, and only experience will give you that confidence. You can do it, and if you want a permanent playmate, you have to.\"\n\nEric nibbled pensively on his bacon, considering the idea. \"You'll tell me what to do?\"\n\n\"I'll teach you what works,\" she corrected.\n\n\"And you'll be with me forever, then? What, in the body of that woman?\"\n\n\"Something like that. It's complicated.\"\n\n\"I don't want to lose you, even if you're still inside my head.\"\n\n\"So, you'll try?\"\n\nEric nodded. \"I'll give it my best shot.\"\n\n\"Good for you. You've taken the hardest first step. I think you deserve a reward.\"\n\nAs she got up and came around the table, he wondered if breakfast was the only meal he was going to get today.\n\nThe following night, Eric drove to the club that Bridget pointed out to him. He wondered how she knew about clubs, since he had never gone to any, but she refused to enlighten him.\n\nTypical. Even my own muse treats me like a mushroom.\n\nEric walked in and chose a booth in the corner of the room. He was still blushing from walking beside an altogether naked invisible woman. He was even more disconcerted when she sat in his lap, rather than across from him. The waitress who came over was completely oblivious to the awkwardness that Eric was feeling.\n\n\"What can I getcha?\" the waitress asked nicely.\n\n\"Uh, just a beer, thanks,\" Eric stammered. The waitress cocked an eyebrow at him in confusion, but nodded and went to get his beer.\n\n\"You're going to have to settle down, tiger,\" Bridget said.\n\n\"You're not helping,\" Eric said to her.\n\n\"You've got to learn to be comfortable with a woman touching you. It has to become completely natural, you have to learn to enjoy it.\"\n\n\"Oh, I already enjoy it,\" he said with a smirk.\n\n\"Okay,\" she said, wiggling her bottom against his already-hard cock. \"Granted, you do enjoy it, but you're not comfortable with it.\"\n\n\"Maybe it's just because no one can see how beautiful my date is,\" he shot back. Bridget smiled at him wonderfully.\n\n\"See, now all you have to do is treat Julie like that, and we'll be all set!\"\n\n\"Julie?\"\n\n\"Your target.\"\n\n\"You already know who it is?\"\n\n\"I knew that before I ever came to you. I would have had to. I couldn't waste time looking for a suitable girl, we've only got twenty-six days left.\"\n\n\"Oh. Yeah, I guess that makes sense.\"\n\nThe waitress came back and set Eric's beer down in front of him, giving him kind of an odd look. Just as he was about to thank her, Bridget ran her tongue along his earlobe.\n\n\"Th-thank Y-you,\" Eric stammered. His vocal chords seemed to be having a tough time with the script tonight, he noticed.\n\n\"C-minus on that one, Baby,\" Bridget purred into his ear. He ran his hand down along her ass, and she cooed.\n\n\"You're gonna get it, you know,\" he warned her.\n\nShe wiggled her ass against his cock again. \"Mmm. Oh, believe me, I'm ready for it. You wanna do me right here?\"\n\n\"Bridget!\" he said in a whining cry.\n\n\"No one would see us. They'd just see you drinking your beer...\"\n\n\"No.\"\n\n\"Awww...\"\n\n\"No!\"\n\n\"You're no fun...\"\n\n\"That's not what you said yesterday...\"\n\nShe snuggled tight against him and hummed, remembering yesterday.\n\nIt took over an hour before Julie walked in the door. When Bridget pointed to her, Eric's jaw dropped. The woman she indicated was a 5'4\" creature of beauty. Her flaming red hair seemed to dance around her face as she walked. Even from here, he could see the sparkle in her vivid green eyes. Her skin was pale, but unfreckled, though they would not have seemed out of place. Her body was very well proportioned, with an ample bust and splendid ass. Her legs were slender and shapely, encased in jeans that seemed more like paint than denim. Eric was in total awe.\n\n\"That's Julie?\"\n\n\"Yes. And stop drooling.\"\n\n\"Bu... Bridget, I can't seduce her... She's a goddess!\"\n\n\"What am I,\" Bridget sniffed, \"chopped liver?\"\n\n\"I happen to like chopped liver,\" Eric said, kissing her softly in contrition.\n\n\"You can do it, Eric. You'll just have to actually try for once. Now, go get yourself another beer, and say hi to her while you're at the bar.\"\n\n\"But-\"\n\n\"Go! No arguing!\" Bridget got up off his lap to let him up, and shooed him out of the booth.\n\nEric walked numbly across the room to the bar. He stood next to the lovely goddess, and apparently his heart wanted a better look, because it seemed to have gotten stuck in his throat on its way out his mouth. His ears evidently thought they were neon signs, because they were burning brightly.\n\nHe managed to get the bartender's attention, and order a beer. While his jaw seemed oiled enough to continue working, he turned to Julie, and attempted to speak.\n\nAt this point, his vocal chords, fed up with the script for the evening, decided to go to their dressing room and wait for above-the-title billing. Eric's mouth moved as if to make words, but no sound came out. Luckily for what was left of his ego, Julie had not yet turned to face him. When she finally did, he managed a wan smile. She smiled back politely and nodded, which only made the rest of his face join his ears in their advertising campaign. He grabbed his beer hastily, and made his way across the room, attempting to coax his vocal chords back onstage with promises not to try to hit any more high notes.",
        "\"That... didn't seem to go very well,\" Bridget said, resuming her place in his lap. She wrapped her arms around him and kissed him. She could feel the burning heat of his humiliation.\n\n\"No, it didn't,\" he muttered.\n\n\"Well, it was only try number one. Now I know how much work is ahead of us.\" Under her breath, but still loud enough for Eric to hear, she muttered, \"I wonder if I'll get overtime for this...\"\n\nEric licked his wounds for an entire day after that night. Bridget tried to tell him that all his wounds were self-inflicted. He asked, \"Does that make them hurt less?\" She acknowledged the truth of the matter, and let him be. She actually disappeared for a while, to let him try to get over it by himself.\n\nIt was clear, after a day, that he wasn't going to get over it. She sighed to herself, and decided to take matters back into her own hands.\n\nEric was working on some research for a book he was writing. He sat at his desk, going over a book he'd gotten from the library on Celtic history. He was well-involved in the material; it was the only thing he knew that could make him forget about his troubles. His boss at work had noticed his lack of attentiveness and had chewed him out for not working hard enough. It seemed that his failure was impacting everything.\n\nAs he sat reading, Eric tried not to think about the night before last. It had been humiliating to not even be able to say hello. He was very aggravated at his vocal chords for deserting him as they had, but he realized that pissing them off would only make sure it happened again.\n\nEric had just turned the page, and was about to start a new section, when his view was entirely blocked by a naked woman sitting on his desk. He jumped back, startled, though he knew who it was before he looked up past her wonderful tits to see her beautiful brown eyes twinkling at him.\n\n\"Hey there, lover,\" she purred.\n\n\"Bridget! You could give a guy a heart attack like that!\"\n\n\"Ooooh. We wouldn't want to do that,\" she said with a raise of the eyebrows.\n\n\"What's on your mind?\" Eric asked.\n\nBridget spread her legs, putting one on either side of Eric's chair. This gave him a wonderful view of her recently-shaven pussy. Bridget reached down to stroke her pussy lips with two fingers.\n\n\"You write about it all the time. I want to see if you're any good doing it. C'mon, stud, eat me out!\"\n\nBridget leaned forward and used her free hand to grip the back of Eric's head, pulling his face down toward her cunt. Eric was hesitant, but he didn't fight her. He took a good look at her already-dripping pussy, and he let his tongue slip out of his mouth. He licked along her pussy lips, and heard her mewl in pleasure. His tongue decided it liked this activity, and dove back in for more. Eric stroked his tongue along the entire length of her lips, lapping up her juices and sending tingles through her body.\n\nBridget leaned back on her hands and moaned. \"Oh, yeah, lover, do it!\"\n\nEric plunged his tongue into Bridget's opening, allowing his tongue to wiggle inside her. She shivered with the sensation, and let her head fall backward, her eyes closed and her mouth open in a long, drawn-out sigh. \n\nEric's tongue decided to tango, and slipped wetly against Bridget's pussy lips. His tongue twisted and turned, sliding up and down, getting all areas of her pussy. Finally, his tongue moved up, finding its tango partner waiting. Eric slid his tongue over and around Bridget's clit, eliciting loud moans and sighs from Bridget. His tongue danced happily with her clit, sending sparks of pleasure throughout her body.\n\nThe rest of Eric's body felt extremely left out of this process. His hand, annoyed with things, decided to take the initiative. Two fingers reached forward and pushed their way into Bridget's cunt. Bridget groaned as Eric's digits invaded her. They soon were all the way in, and Eric's hand began moving back and forth, finger-fucking Bridget as the tongue still danced with her clit.\n\nBridget was awash in a sea of ecstasy, her eyes tightly shut and her moans and cries filling the room. Her hips were bucking against Eric, her body building to its ultimate peak. She was surprised at how good she felt, at how much Eric could actually pleasure her in this way.\n\nEric's lips soon decided they were tired of being a middle-man. They bypassed the tongue, sucking Bridget's clit inside Eric's mouth. His lips continued to kiss and suck her clit, and his fingers continued to pound into her pussy. Eric could barely hold on, as Bridget's hips bucked harder and harder against his face.\n\nFinally, Bridget let out a loud cry, and her juices flooded Eric's fingers and chin. He continued to pleasure her throughout her orgasm, prolonging it as much as he could. It was over a minute before Bridget came down enough to catch her breath.\n\nAs she looked down at him, she gave him a smile of adoration. Eric rose from his seat, and undid his pants.\n\n\"Your turn...\" Bridget was more than willing to reciprocate.\n\nIt was Monday night, and Eric was back in his booth at the same club. The crowd was still scarce. Not that Eric noticed, since he was busy paying attention to the girl in his lap. He managed not to stutter when he ordered his beer this time, however.\n\n\"Good boy,\" Bridget said, kissing him on the cheek.\n\n\"Bridget, how come we only come here on Mondays?\"\n\n\"Julie's only in here on Monday.\"\n\n\"Why a Monday?\"\n\n\"She has Tuesday and Wednesday off. So Monday is her Friday.\"\n\n\"Thank you for attempting to confuse me as much as possible,\" Eric said with a grin. Bridget smiled, and kissed him again.\n\nThe couple necked and talked for a while before Julie came in. Eric managed to get two full beers down before she showed up. He was attempting to bribe his body with alcohol, in the hopes it would cooperate this time.\n\n\"So, are you going to try again, or are you just going to stare at her all night?\" Bridget asked.\n\n\"Ummm...\" Eric replied.\n\n\"C'mon, Eric. We've only got nineteen days left.\"\n\n\"I know. It's just... hard.\"\n\n\"Look, you're a great person, you've got a decent job, a good future, and a wonderful personality. You're not bad to look at, either. You do have a major confidence problem, though. Other than that, there's not a better guy in this bar.\"\n\n\"Thanks, Bridget. Okay, I'll give it a try.\"\n\n\"Good.\" Bridget nodded, and then climbed off his lap to let him up.\n\nEric hesitated for a long moment, but Bridget's stare made sure he finally got out of the booth. He saw Julie was staring down at the bar top, and he wondered what she was thinking. As he walked over, his knees seemed to insinuate that they had not been paid enough for the journey, and might refuse to take him all the way. His brain asserted a bit of authority, and the knees complied, albeit unhappily.\n\nEric leaned against the bar, and waited for Julie to turn to face him. Meanwhile, his brain was having to assert all kinds of authority to get body parts back in line, and it was making him dizzy with the effort.\n\nSuddenly, Julie did turn her head, and she was looking him in the face. He felt the heat rising, but tried to force it back down where it belonged. He knew it was time for him to say something, but his vocal chords still seemed reluctant. With one final push, his brain won the battle \u2013 for now \u2013 and got them to cooperate.\n\n\"Hi. Um, would you like to dance?\"\n\nAt this point, Eric's brain demanded, \"You made me do all that work for that?\"\n\nJulie smiled at him, but shook her head. Very politely, she said, \"No, thank you.\"\n\nEric was almost relieved to have been rejected, given the state of his union at the moment, which seemed on the verge of strike. He nodded jerkily, and headed back to his seat. He knew that Bridget would not be happy with his performance, but what was he supposed to have done?\n\n\"Good try, bad delivery,\" Bridget said as he sat down. She crawled back into his lap, and wrapped her arms around him. \"We're going to have to work on your speaking skills under pressure.\"\n\n\"Like I could ever talk to her again,\" Eric said morosely.\n\n\"Oh, she won't even remember tonight's conversation by the morning.\"\n\n\"I wish.\"\n\n\"No, really. It's part of my magic. Unless you succeed, she won't remember you at all.\"\n\n\"Hmph. At least I won't be the subject of a girl-to-girl phone call...\"\n\n\"Anyway, you had the right idea, you just... did a poor job of delivery. You're still too scared. She wants to go out with you. You have to believe that, or you'll never manage anything.\"\n\n\"Well, tonight I managed to get rejected again. Can we go home now?\"\n\n\"I suppose. But don't think I'm letting you off the hook completely. You've got a lot of work ahead of you.\"\n\n\"Oh, joy.\"\n\nThe next day, Bridget invaded the one space that Eric had held away from her, or so he thought of it. In truth, he knew she went where she wanted, but up until now, she had not accompanied him to work.\n\n\"Why are you here?\" he asked, seeing her staring at him from across his office. He'd grown accustomed to her naked form, but he ogled her, anyway.\n\n\"I told you I wasn't letting you off the hook. You need to learn to be able to hold a conversation with someone regardless of how you're feeling, and sort of 'disconnect' yourself from your body's reactions. Your body wants to run away from any situation where you're talking to a new girl. We have to get your brain to override your body's physical reaction.\"\n\n\"Okay... um... how do we do that?\"\n\nShe strolled across the room and motioned to him to push back from his desk. He was not entirely surprised when she dropped to her knees. She unbuckled his belt and undid his pants, reaching in and carefully withdrawing his not-fully-hard cock.\n\n\"Well, this is an improvement. You don't get hard just staring at me when we're having a conversation.\" He had, however, gotten hard just as soon as her hand touched his dick. Bridget sighed. \"Well, one thing at a time. In about a minute, your boss is going to call you on the phone. You're going to have to hold a conversation with him, no matter what I do.\"\n\n\"Bridget...\" Eric said, knowing just exactly what she would do, but she cut him off.\n\n\"You've got to learn. Either you'll pull it off, or your boss will think you're some kind of weirdo. Your choice, lover.\"\n\nAs Bridget wrapped her dainty fingers around his shaft, the phone rang. Eric groaned from a mixture of pleasure and dread. He lifted the receiver to his ear, and began to speak, just as Bridget's lips found his cock head.\n\n\"H-hello? Mr. Bannett! Yes, sir, what can I do f-for you?\" Bridget noted the slip in his voice, but she refused to slow down her sucking. Her tongue was now leading the way, slipping out ahead of her lips as they slid down his cock. It didn't take long before her lips were resting against the base of his shaft, and she began to suction his prick.\n\n\"Yyes, sir. I understand the requirrrements of the assignment. It's not a prrroblem. I'll have it ready... for you by the end of the week.\" Bridget was actually proud of Eric, he was doing so well. His stumbles were barely noticeable, and she felt it was time to up the ante.\n\nBridget began to bob her head enthusiastically on Eric's cock. She slurped and sucked, trying to draw the cum out of his balls. She listened as he continued to talk to his boss, stumbling only a couple times as she brought him closer and closer to climax.\n\nEric could feel his balls tightening, and he hoped that his boss would hang up before he had to come, because he didn't think he could hold his voice steady through that.\n\n\"Yes, s-sir, I will, s-sir. I understand. Good day to you, too, s-sir...UNGH!\" Eric cried out as soon as the phone was back on the hook. His cum splashed deep into Bridget's mouth, and she swallowed it all. His hips bucked at her, shoving his cock into her throat as he continued to spasm. It was several seconds before his eruption ended, and he was able to begin to catch his breath.\n\nBridget sat back on her heels, and looked up at him. She waited as he caught his breath. She knew that she had pushed him to the very limit, but she also knew that she didn't have much time, and that she'd have to push even harder.\n\nAfter a few minutes, when she knew he would be ready for her, she took his prick in her hand again. Eric sighed in frustration.\n\n\"I know you have to call the head of accounting. She's a stuck up little bitch, and she's already filed sexual harassment against one staff member.\" She had been fondling Eric's cock, and it was already back to complete hardness. She straddled his waist as she said, \"Go ahead and call her, but you might ought to not breathe heavy into the phone...\"\n\n\"Eric, I don't want to put any pressure on you, but this really is our last chance at this. She won't be back in here before I have to return.\"\n\n\"Couldn't we then try a different girl?\"\n\n\"No. This is the girl. It's very specific. Now, please, don't do what you did last week...\"\n\n\"Okay, already!\"\n\n\"Sheesh. You're a writer. In your stories, do those lines ever work?\"\n\nEric hung his head sheepishly. \"No.\"\n\n\"There's a reason for that.\" The previous week, Eric had almost gotten himself slapped trying a pick-up line. \"You need to be yourself. Look, I told you, she wants to be with you, she just doesn't really understand that yet. You need to convince her. And you've got one shot left at it.\"\n\n\"So... what do I do? You said you'd teach me the right things to say, but you haven't really taught me anything!\"\n\n\"You haven't been listening,\" Bridget retorted. \"Remember, she needs to trust you. Make her your friend, but don't lose sight of your ultimate goal, or you'll end up being only a friend.\"\n\n\"I know all about that.\"\n\n\"I know you do. And yet you keep making that mistake.\"\n\n\"Ouch.\"\n\n\"Sorry, but you want me to lie about it?\"\n\n\"No, I guess not.\"\n\n\"Okay, well, there she is. Good luck, loverboy.\"\n\nEric looked at Julie from across the room, and for the first time, he really paid attention to her posture. He'd been so wrapped up in his own troubles that he hadn't really taken the time to study her before. Luckily, Bridget understood what he was doing, and kept quiet. Finally, Eric got up and headed across the room.\n\nHe slid onto the seat next to Julie, and motioned to the bartender. He ordered a soda rather than a beer. He wanted to try to stay sober tonight. He glanced at Julie out of the corner of his eye, and what he had thought he'd seen from across the room was confirmed by the look on her face.\n\nAfter debating several different ways to start the conversation, he settled on, \"You look like you could use a friend.\"\n\nJulie's head jerked, startled by his voice. She turned to face him, questioningly. \"Huh?\"\n\n\"You look like the world's collapsing around you. Is it really that bad?\"\n\nShe gave him a tight but appreciative smile. \"No, I suppose not. It's just work shit.\"\n\n\"Want to talk about it?\" he asked, hoping she wouldn't say no.\n\n\"I wouldn't want to burden you with it.\"\n\n\"C'mon,\" he said. \"I'm far too carefree,\" he said with a smirk, \"I need some burdens. Let me buy you a drink, and we can talk about it.\"\n\nShe laughed at his rather feeble joke, but nodded, anyway. \"Okay. Thanks.\"\n\nAn hour later, the two had moved to a booth. In fact, it was the booth that he and Bridget had sat in so many times, which was odd, because he'd allowed Julie to pick the booth. Bridget, Eric noticed, was nowhere to be seen. He was sure she was watching, though.\n\nAt the moment, there was a lull in the conversation. Eric finally got up his courage and asked, \"You want to dance?\"\n\nJulie only paused for a second. \"Sure.\" He got up and took her hand, walking over to the jukebox, which had become silent only moments before. He picked three songs, and they headed for the dance floor.\n\nAll of the songs Eric had chosen were slow songs, and Julie smiled demurely at him as she put her arms around his neck. He gently took hold of her waist, and they began moving together. Eric wondered just what payment his body was going to demand for its cooperation tonight, because for once he felt like he wasn't going to fall apart in her presence.\n\nThe two danced together without saying anything. At the end of the second song, Julie pulled him closer to her. They were now in a much tighter embrace, and she laid her head against his shoulder as the song began. The couple moved in small circles on the dance floor, not really going anywhere. This was probably a good thing for Eric, since he didn't want to push his body parts into rebellion. His only problem was that there was a specific body part that was cooperating a little too vigorously, and as tightly as Julie was pressed against him, she had to be able to feel it.\n\nAt the end of the song, Julie pulled back from him, but didn't let him go. She smiled warmly at him, and his heart decided it wasn't needed for a few beats. She leaned forward slowly, and he did, too, hoping against hope that what he thought she was doing was what she was doing.\n\nTheir lips met shortly thereafter, and Eric was certain his heart had called it a night entirely. He decided it didn't matter, though. If he died right here in this moment, he would die happy.\n\nSomehow, his heart was coaxed back into doing its job, and he made it through the kiss, though he felt quite dizzy. Julie continued to smile at him. Finally, she stepped away, reaching for his hand as she did so. She wasn't leading him back to their table, however, but toward the door. He had trouble keeping his eyebrows down where they belonged, so surprised was he at this turn of events.\n\nWhen they got outside, Julie looked around before she turned to Eric. \"Which one's yours?\"\n\nHe smiled at her, trying not to look completely stupid, and then he led her over to his car. He unlocked it, and politely helped her into her seat. He walked around and got in himself, and started the car, before a question arose in his mind... but wasn't that a pick-up line, too? He decided he didn't have much choice if he wanted the information.\n\n\"Your place, or mine?\"\n\n\"Mine,\" she said quietly, smiling over at him. He didn't understand what it was he'd done that had allowed what appeared to be happening to be happening, but he wasn't going to question it now. He drove out of the parking lot, and followed her directions to her place. It didn't take long, and before he knew it, he was pulling into the parking garage of her building. He turned the car off and sighed, before he dared do anything.\n\n\"You coming?\" Julie asked him. She'd already opened her door and gotten out, and was now looking back at him. Eric nodded to her, and opened his own door. His legs decided it was time to protest again, insinuating that they might not hold him up. His brain slapped them down soundly this time, with a little help from his libido. He walked behind her to the elevator.\n\nThe ride up was silent, and more than a little uncomfortable for Eric. He wasn't used to 'taking girls home' like this. Worse, she had taken him home, and that was odder yet. He followed her almost numbly out of the elevator and down the hall. He tried to remain calm as she unlocked the door, and he followed her inside. He turned to her as she locked the door, taking little to no notice of the apartment itself.\n\nWhen Julie turned to face Eric, she had already undone every button on her blouse. She nearly threw herself against him, and their lips locked instantly. He was startled, but his libido seemed to carry him now, and he wrapped his arms around her, kissing back and caressing her back. Her tongue wormed its way out, and insistently pressed against his lips until he parted them, allowing the slick invader deep into his own territory, where his own tongue dueled with hers, the sensuous battle appearing to be an even match.",
        "Julie was pulling at Eric's shirt, freeing it from his pants. Her hands quickly made their way beneath his shirt to caress the skin of his chest. Eric did the same with her blouse, pulling it out of her jeans and running his hands along her bare skin inside the open blouse. She moaned in his mouth, and pushed herself more tightly against him.\n\nWhen Julie let go of Eric and held her arms out slightly, he knew what she wanted. He quickly removed her blouse, letting it fall to the floor. As soon as it was off, she broke their kiss. Her hands deftly pulled his shirt up over his head. As soon as it was gone, she came to him again, and their kissing resumed. As inexperienced as Eric was, he still wasn't sure exactly how to progress. He fondled her back, moving his hands back and forth until they reached her bra. As he reached for the clasp, Julie pushed herself more tightly against him. He took that as a positive response.\n\nApparently, Eric's fingers missed rehearsal, because they took forever to get their part in this little play correct. Eventually, however, the hooks came open, and the straps slid apart. He lifted his hands to her shoulders, pulling the straps off and letting them slide down her arms. She stepped just far enough back to let the bra fall off and to the floor, and then she was immediately pressed against him again, her tits mashed against his chest, her nipples burrowing deeply into his chest. He moaned at the feel of her body against him.\n\nAfter long minutes of kissing, Julie finally pulled away from Eric. She looked deep into his eyes and smiled warmly. She reached for his hand, and pulled him deeper into the apartment, heading across the living room toward what he hoped was the bedroom door.\n\nSure enough, he could look past her to see the bed. He was somewhat surprised when she turned the light on, albeit dimly, upon entering the room. He could now see her more clearly, and he took a moment to admire her wonderful body, the swell of her ample breasts, and the flatness of her abdomen. His brain ordered his mouth not to drool, though neither he nor his mind were sure how well his mouth would listen. She smiled at him again, and flopped unceremoniously down onto the bed.\n\n\"Help me get these jeans off, would ya?\" she asked.\n\nEric was quick to move to her, and he took hold of one of her feet, removing her shoe and sock. He did the same with the other foot, by which time Julie had already unbuttoned and unzipped her jeans. She was ready to push them off her hips. He took hold and pulled as she pushed. He was startled to realize that her panties were coming off with her jeans. She didn't seem to object, and he kept pulling. He got her jeans off and dumped them on the floor. She looked pointedly at his pants as she freed her legs from her panties.\n\nEric got the hint, and his own shoes were soon off, and his pants unfastened. He pushed them quickly off, taking his socks with them. He hesitated a moment before pushing down his briefs, as Julie had sat up and was looking very intently at him. He took a deep breath and removed them, freeing his already-stiff member from its confines. As he stood back up, Julie reached forward to take hold of his hips, pulling him to her.\n\nAs soon as he was close enough, Julie released his hips, and her hand encircled his shaft. Her other hand began to fondle his balls. Eric groaned out loud as her fingers moved across his groin, arousing him immensely. It was only a few seconds before she kissed the head of his dick, tasting the precum that had oozed from him. Her tongue snuck out, sliding all the way around the head of his cock before slipping back between her lips. At that point, her mouth moved forward, taking him inside.\n\nEric groaned loudly as he felt Julie's lips encase his dick. He gritted his teeth in an attempt to control himself as her mouth slid further along his prick. Her tongue danced along the underside of his shaft, sending shivers throughout his body. He knew he would not be able to last very long with her wonderful mouth trying to vacuum out his cum.\n\nJulie began to bob her head on his dick while her hand fondled his balls. Eric was fighting a very pleasant, but losing, battle. It wasn't long before he lost that battle, and let out a loud grunt as his cock erupted, spewing his seed deep into Julie's mouth. She continued to suck him, swallowing heartily every drop of his spunk. Her hand continued to dance on his nuts, as if to draw more from him.\n\nEric was spent for the moment, and he let out a long, loud sigh. Julie didn't let up, however. She continued to suck his cock, cleaning him off. Her real motive, however, was revealed, and rewarded, as Eric's dick started to perk back up, becoming stiff again as her talented mouth worked him over.\n\nOnce Julie had Eric's shaft back to hardness, she allowed it to slip from between her lips. She put her arms around his waist, her hands planted firmly on his ass. She pulled him forward, onto the bed. He went willingly, making sure he didn't fall on top of her. As he came down above her, she spread her legs wide, and reached for his cock. Her deft hand found his prick, and ushered it to her cunt.\n\n\"C'mon, I need it,\" she said, an almost-whimper in her voice.\n\nEric had no intention of denying her. He pushed his cock forward, and it sunk easily into her moist depths. Julie's back arched , pushing her head deep into the bed as she felt his dick penetrate her. She let out a long, low growl of ecstasy as she felt him reach bottom. Once he was fully inside her, she wrapped her legs around his waist, making sure that he couldn't escape.\n\nEscape was the last thing on Eric's mind. He began to move inside of her, fast and furious. The two were soon bucking together on the bed, all thought of tenderness or cuddling gone. This was pure, animal sex, and they both wanted it. Julie screamed out, thrusting her hips up at him as Eric grunted, ramming his prick into her as hard as he could.\n\nJulie suddenly reached up, wrapping her arms tightly around Eric's neck. She picked herself up, letting Eric support her entire weight. She pushed and pulled, allowing her to move even faster against him. Eric groaned at the pleasure she was giving him. The two were racing toward the finish line of this event, and both of them were more than ready to get there.\n\nEric, lost in the sensations, leaned over and nipped at Julie's neck. Julie screamed out in pleasure-pain, her body jolted by the feelings he was giving her. Eric was surprised to find that she could move even faster than she had been. Her body was thrashing itself on him, her hair bouncing all over the place. All he could see before him was a fiery red blur. As his body came closer to orgasm, he closed his eyes, gritted his teeth, and pleaded with his body to hold off. He didn't want this to end yet.\n\nJulie, however, made that inevitable. At that moment, her pussy began to squeeze his cock, rippling along its entire length. It was as if she were milking him, and that was precisely the effect it had.\n\nWith a loud scream of bliss, Eric blasted his load deep into Julie's cunt. Julie, more than ready for release, allowed herself to come, and she arched her back, thrusting herself hard against Eric, and her pussy clamped down on his dick. For long moments, the couple writhed together, lost in the pleasure of their bodies. After the spasms were over, the two collapsed together on the bed, and were soon unconscious.\n\n\"Do you have to go?\" she asked, pouting cutely. \"I'm sure we could find... something... to do...\"\n\nEric kissed her, but made sure to keep it toned down, or she would have him going again. \"If I don't go home now, I'm sure to be late for work in the morning.\"\n\nJulie wrapped her arms around him and looked into his eyes. \"You could call in sick...\"\n\n\"Mm,\" he said, his resolve fading. Still, he knew he had to resist. \"I can't. I'm already behind on a project.\" Which was true, though the project had nothing to do with work.\n\n\"Call me?\" she asked.\n\n\"I don't have your number,\" he said with a smile.\n\nAt that moment, she slipped a card into his back pocket. \"Sure you do.\"\n\nHe kissed her again, and it was very hard to break away from her. \"I've got to go. I promise, I'll call you tomorrow.\"\n\n\"I'll be here, waiting...\" she said, a huskiness to her voice that left no doubt as to what she wanted. He kissed her again, and then extricated himself from her grasp. He quickly made his way down to his car, and drove himself home.\n\n\"So... that's it, right?\" Eric asked.\n\n\"No. You need to make sure to keep your promise. You need to call her tomorrow. Invite her over here. After tomorrow, if she still wants to see you again, I think we will be able to say that you have succeeded.\"\n\n\"Great. Only...\"\n\n\"Only what?\"\n\n\"Well, you know, I spent over an hour talking to Julie tonight, and some time back at her place we chatted. She seems like such a nice person, it seems a shame to have to... do whatever it is you have to do to exist inside her.\"\n\nBridget shrugged. \"These things are complicated. They always are.\"\n\n\"Hmph. Well, I'm going to get some sleep.\"\n\n\"Good night, loverboy,\" Bridget said, and kissed him. Then she vanished.\n\nAs soon as Eric got home the next day, he was on the phone.\n\n\"Hello?\" the voice at the other end said. It almost sounded as if she was worried.\n\n\"Julie? It's Eric.\" The sigh he heard was very revealing.\n\n\"I've been waiting for you.\"\n\n\"Why don't you come on over? We can spend the evening in.\"\n\n\"I like the sound of that.\"\n\nAfter telling her where he lived, they hung up. Eric went to remove his suit, and replaced it with more comfortable clothing. It was better than he would have worn had he been spending the night alone, but still casual. It was a surprisingly short wait before he heard a knock at the door.\n\n\"C'mon in,\" he said, ushering the beautiful redhead into his apartment. He closed and locked the door, and was about to say something as he turned around, but his mouth decided that whatever it was didn't override its need to hang open dumbly.\n\nJulie was now standing before him nude, her dress at her feet. \"If we're going to be here alone all evening, I can't be wearing that,\" she said, and slithered up against him. \"Now, what will we do to occupy our time?\"\n\nThey found something.\n\n\"So, what do you do?\" she asked. She'd already revealed much of her own history.\n\n\"I'm an entry-level exec at Dalton, Inc.\"\n\n\"Sounds interesting.\"\n\n\"Not really, but it's a decent job... and I should be getting a promotion soon. My performance reviews have all been positive, and it's about that time.\"\n\n\"Mmm,\" she said, cuddling against him. She wasn't wearing anything at the moment, nor was he. She ran her hand across his chest. \"So, what do you do in your spare time, besides bedding lonely women?\"\n\nHe let out a bark of laughter at that. \"You're the only woman I've spent real time 'bedding'. Normally, I would have spent the night writing.\"\n\n\"You're an author?\"\n\n\"Yeah.\"\n\n\"What do you write? Fiction?\"\n\n\"Yeah.\"\n\n\"What kind?\"\n\n\"Um...\"\n\n\"C'mon, you can tell me...\"\n\n\"I write erotic fiction.\" He blushed instinctively, expecting a bad response.\n\n\"Oooh. That explains a few things.\"\n\n\"Such as?\"\n\n\"Such as why you didn't freak when I came on so strong last night. My sex drive is... well, I guess it's a bit strong, compared to other women.\"\n\n\"I like it...\" he said with a more-than-supportive grin.\n\nShe wrapped her arms around him. \"I know. I was surprised you did. I'm glad you talked to me.\"\n\n\"Me, too.\" And it only took four tries! He leaned down and kissed her. He wouldn't make it into work the next day.\n\nJulie was taking a shower when Bridget made her appearance.\n\n\"Good morning, loverboy,\" she said sweetly.\n\n\"Hey, Bridget,\" he said, his voice and expression indicating he wasn't entirely happy to see her.\n\n\"Well, that's the gloomiest greeting I've ever gotten out of you. What's the matter?\"\n\n\"You're here to take over Julie, aren't you?\"\n\n\"Hmmm. Would that be a problem?\"\n\n\"I'm not sure I want to do that to her. The more I get to know her, the more I like her. I mean, you're wonderful and all, don't get me wrong... I just wish I didn't have to choose between the two of you.\" Eric didn't understand the smile that spread across Bridget's face. \"What?\"\n\n\"I just came to say good-bye, actually.\"\n\n\"Huh? I don't understand.\"\n\n\"Well, no, I guess you wouldn't. You see, there really isn't any way that I can stay outside of your mind for more than a moon-cycle. It's just not possible.\"\n\n\"Then, why...\"\n\n\"I came to answer your question. Why you couldn't find the right woman. You did, now, so you can stop bitching to me about it.\" She smiled at him sweetly. \"You see, I'll still be your muse, now and forever. I'm your internal muse. Julie, you might have noticed, is your perfect match. She's your external muse. So long as you treat her as well as you've treated me, she'll be with you forever, too. So, in a way, your muse has become real.\"\n\n\"You tricked me.\"\n\n\"Ummm.... Yup.\" She laughed at him.\n\n\"Why not just tell me the truth?\"\n\n\"Because you'd have been far more nervous about it if I had. This way, you thought you only had to do a certain, limited activity. Had I told you that we were looking for your soul mate, you'd have frozen up completely. Right?\"\n\n\"Ummm...\"\n\n\"Right?\"\n\n\"Well....\"\n\n\"Yeah, you bet your ass, you would have. My job was to come and help you find your muse. Or, should I say, your other muse. I could probably get a promotion out of this... but I like being your muse.\"\n\n\"Thanks.\" Eric reached out for her, and she came willingly. He kissed her deeply, for he knew it would be the last time. After a long minute, they separated.\n\n\"You're a wonderful guy, and she knows that. The fact that I'm gone changes nothing. Just be yourself with her, and you'll be happier than you can imagine. Don't screw this up, I don't like the real world. It's cold out here.\" She giggled at him. He laughed, but sobered as he saw her begin to fade.\n\n\"Good-bye, Bridget,\" he said.\n\n\"Love you!\" she called out just as she vanished.\n\n\"Who were you talking to?\" Julie asked. He jumped as he turned to see her wrapped in a towel, her hair wet. She was, at this moment, the sexiest person he had ever seen, live or Memorex. He walked over and took her into his arms.\n\n\"Just talking to my muse,\" he said honestly.\n\n\"Should I be jealous?\" she asked with an arched eyebrow.\n\nEric thought about that for a second before he shook his head. \"No point in it. She might help me with the words, but you're my inspiration.\" "
    ],
    "authorname": "Ice_Phoenix",
    "tags": [
        "night bridget",
        "hips eric",
        "eric beer",
        "pleasure eric",
        "thing eric",
        "eric held",
        "pushed tightly",
        "promise call",
        "talk eric",
        "tightly julie"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-spirit-is-willing"
}