{
    "title": "Home Ch. 05",
    "pages": [
        " To my kind editor MoaningLover.\n\nIn many of the comments and feedback, I got suggestions about what you readers think should happen next. This chapter is for those of you who are invested in this story as I am.\n\nThank You.\n\n\n\nPeyton never really understood what it meant to have an 'out-of-body experience'. She figured it was the same as astral projection; when your soul leaves your body and you can look down on yourself. However, the moment she saw Victoria Cavanaugh standing at Nate's doorway, she finally understood. It was like time had slowed and she'd lost all connection with her body. Her conscious mind was telling her to deck Victoria with her best right hook and slam the door in her face, but her body wouldn't respond. Instead Peyton stood there, mute, slack jawed and stunned; she was no longer part of the show, just watching from the audience.\n\nVictoria pushed her sunglasses to the top of her head and her gaze fell on her sister. Peyton felt like her blood was running cold and threatened to stop flowing completely.\n\n\"Tonny!\" Victoria yipped. She strolled past a confused Nate, arms held out, and gave Peyton an uncomfortable squeeze. Her double-D breasts squished against Peyton, who felt like the air was being compressed out of her lungs. She just stood while her step sister squeezed the life out of her, still too shocked to move. Victoria pulled back but kept her perfectly manicure fingernails hooked into Peyton's shoulders.\n\n\"OMFG, Tonny!\" Victoria beamed. \"It's been forever!\" \n\nIt took a couple seconds for Peyton to register that someone was talking to her. She finally willed her mouth to speak. \"Vicky. What are you doing here?\"\n\n\"Is that any way to greet your sister?\" Victoria kept the toothy smile on her face as dug her nails into Peyton shoulders.\n\nPeyton winced and tried to shrug her off. \"Since it's you, yes.\"\n\nVictoria let out a frightful cackle that caused both Peyton and Nate to wince. \"Oh, sis, you were always so funny.\"\n\n\"Sis?\" Peyton cocked her eyebrow. \"That's new.\"\n\nVictoria seemed to have lost interest in talking with Peyton. She turned around suddenly, whipping her step sister in the face with her thick, curly, mane-like weave. While Peyton recovered from the hair slap, Victoria gave her best model walk and approached Nate.\n\n\"And you, handsome fella, must be-\"\n\n\"Nate Tennison.\"\n\n\"Mmm. Nate Tennison. I've heard of your company.\"\n\n\"Have you now?\"\n\nVictoria took a step closer to him. \"I do my homework.\"\n\nPeyton never pegged herself as the jealous type, especially with Nate, being that she trusted him fully. Yet, seeing Victoria coo at him made her blood boil. She walked over and stood between them, facing Victoria.\n\n\"I know you're here for me, Vicky. If you want to talk, let's go talk.\"\n\nVictoria noticed the wrathful glint in Peyton's eyes and sneered at her. \"If it has to be all business with you, then fine. Let's talk.\"\n\nPeyton turned to Nate. \"I won't be long.\"\n\nNate looked at Victoria, then back at Peyton. He wanted to be worried right then; he wanted to come to Peyton's rescue and kick Victoria out of his house, but the look on Peyton's face told him to step back. He didn't see the timid girl messing with her fingers; he saw the woman that he loved.\n\n\"Ok. I'll be upstairs if you need anything,\" he said. He gave Victoria a brief nod before leaving the two women alone.\n\n\"Damn, Tonny. IDK how you scored that fine piece of Caucasian ass, but I tip my hat to you.\" Victoria said, checking out Nate's ass as he left.\n\nPeyton made a mental note to laugh later at Victoria's childish way of talking like she was texting. And she's the clever one?\n\n\"Victoria Cavanaugh? Since when did you start using my father's last name? Whatever happened to Victoria Reese?\"\n\n\"Victoria Cavanaugh just sounds so good to me now. Way better than Peyton Cavanaugh.\"\n\nPeyton ignored her last comment. \"Vicky, you haven't answered my question. What, the fuck, are you doing here?\"\n\n\"Why, I'm here to visit my baby sister, of course!\"\n\nPeyton was losing her patience. \"Stop fucking around, Vicky.\"\n\n\"Tsk tsk! Quite a potty mouth you've acquired, baby sister! Did your new man candy teach you to talk dirty?\"\n\nPeyton rolled her eyes. \"I'm not asking you again. Tell me why you're here, or get out.\"\n\nVictoria seemed to not even hear Peyton at all. She sauntered around with ease, observing Nate's home. Finally she said, \"I need you to sign something, Tonny.\"\n\n\"Sign what?\"\n\n\"It's just a little document.\n\n\"What document, Vicky?\"\n\nVictoria opened her bottomless Prada bag a pulled out a big manila envelope. From there she withdrew a small packet. \"Just sign on the dotted line on the last page and I'm so outtie.\"\n\nPeyton took the packet and began reading it over.\n\n\"Uh, you don't need to read it. It won't change anything.\"\n\n\"C'mon, Victoria,\" Peyton smirked. I'm not your fool anymore.\"\n\nVictoria rolled her eyes dramatically, while Peyton scanned through the document. Her eyes zoned in on the words 'RELINQUISH' and 'ESTATE'.\n\n\"Estate?\" she looked up at Victoria. \"What estate?\"\n\n\"Just sign! Don't worry about it.\" Victoria huffed.\n\n\"No. Victoria, tell me what is going on right now or you're not getting shit from me.\"\n\n\"Ugh!\" Victoria whined. \"When I was in the process of selling your dad's dirty old house, I found-\"\n\n\"Wait, what!?\" Peyton cut her off. \"You're selling my dad's house?! I grew up in that house!\"\n\n\"And?\"\n\nPeyton just stared at her, wondering how she got so heartless.\n\n\"Anyway, while the movers and I were getting all his crap out of there, they found a safe in his room.\" \n\nPeyton listened intently.\n\n\"When we got it open, we found his will.\"\n\nPeyton was taken back. \"So, he did have a will!\"\n\n\"Yep. I would have just burned the thing, but other people were around and would have snitched.\"\n\nPeyton wasn't very surprised by this statement. \"So, the estate-?\"\n\n\"It says that he left his shitty old house to you.\"\n\nPeyton had a feeling that wasn't all. \"And what else?\"\n\n\"Nothing,\" Victoria said quickly.\n\n\"Vicky, you know I have a legal right to know. What else did my father leave me?\"\n\nVictoria mumbled something under her breath.\n\n\"Victoria!\"\n\n\"Ten-thousand dollars, alright?!\"\n\n\"Ten-thousand?\" Peyton gasped and spoke to herself. \"Where did my dad get that kind of money?\"\n\n\"IDK and IDC. You shouldn't care either. It's not like you're going to see a cent of it.\"\n\nPeyton's brow furrowed. \"And why the hell not?\n\n\"Because you're going to sign that little paper that says you relinquish all of your father's assets.\" Victoria gave her a wicked smile.\n\n\"And why would I do that?\"\n\nVictoria stepped close to Peyton, looking down at her. \"Because if you don't, I'm going to ruin your entire life...again,\" she said threateningly.\n\nPeyton's mind flashed back to her old life; homeless, hungry and scared. Anxiety began to creep up in her heart and she began messing with her fingers again over the paper. She looked away from Victoria's menacing gaze and down at her hands. I can't go back to that. I just can't. Victoria watched her sister shift her feet nervously and she smiled in triumph.\n\n\"Don't worry Tonny, just sign that paper and you can return to your little life here as if I never existed.\"\n\nPeyton looked up at her and thought about it. She saw something shift behind Victoria and glanced up to see Nate, peeking at the top of the stairs. He caught her eyes and quickly scrambled away. Seeing Nate, Peyton felt a surge of rage awaken in her chest. Nate would tell me to never let anyone walk all over me like this. I can't be this weak. Not anymore.\n\nPeyton held the packet up in front of Victoria's face and with both hands, tore it in half. Victoria cringed at the sound.\n\n\"WTF!\" she shrieked.\n\n\"Vicky, you listen to me, and you listen to me good,\" Peyton said quietly, surprised at her own calmness. \"If you think I'm going to hand over anything to you, you are sadly mistaken. You may have destroyed me before without a fight, but you will not do it now.\"  Because now, I have something worth fighting for.\n\n\"Look, bitch, if you think this is an empty threat, you-\"\n\n\"No, you look!\" Peyton yelled. \"I will never let you hurt me again. I will collect what I'm due, and then you're out of my life for good. Now, get the fuck out!\"\n\nIt was Victoria's turn to stand, shock stricken. Peyton held her ground fiercely and with her blazing eyes, dared Victoria to make a move. Sensing this, she backed away.\n\nShe began stomping to the door when she turned around and said, \"Well, it's a good thing that your jolly-fuck father is dead. That way he won't have to see me run you into the ground again. I bet he's turning in his grave, seeing how weak and pathetic is precious little girl has become.\" Before Victoria said another word, Peyton saw red and lost it.\n\nNate heard screaming from downstairs and could no longer pace in his room with worry. He ran downstairs and was met with the sight of Victoria, bloody nosed in a fetal position on the ground while Peyton was stomping on her and yelling.\n\n\"You stupid bitch! Say something else about my father! SAY SOMETHING ELSE!\" Peyton screamed while slamming the heel of her foot into Victoria's ribcage with every word. Nate ran to her and wrapped his arms around her waist, pulling her away.\n\n\"Let me go, Nate!\" Peyton yelled and punched his arms. Nate held his grip around her tight.\n\n\"No, Peyton! That's enough! You got her!\"\n\nThey both looked at a now standing Victoria, holding her bloody nose and bruised ribs. \"This isn't the last you've seen of me, Tonny! I'll be back, you dirty bitch!\" she screeched.\n\n\"Good!\" Peyton yelled back. \"That way I can whoop your ass again you no-count worthless slut!\"\n\nOnce Victoria was out the door, Nate released Peyton, who ran over and slammed it shut. She stood there for a while, gripping the door knob tight with her fist and breathing hard.\n\n\"Know why she calls me Tonny?\" Peyton said quietly.\n\n\"No. Why?\"\n\n\"She used to call me Ten-Ton-Peyton. She later decided to shorten it to just Tonny. Not very creative if you ask me.\"\n\nNate watched her with silent concern. He walked over and placed his hand gently on her shoulder. Feeling his touch, Peyton turned suddenly and threw herself into his embrace. Nate wrapped his arms around the woman he cared so much for and held her tight. He just held her. Neither one of them spoke for what seemed like hours. The intimate embrace had no need for words; both felt the heartbeat of the other and that was enough. Finally, Nate felt Peyton shift in his arms and pulled back a little to look down at her beautiful face. He was surprised to find no tears; she wasn't crying like he thought.\n\n\"Are you alright, baby?\"\n\nPeyton smiled up at him; a smile that made Nate's heart swell. \"I'm just fine. Thanks to you, I'm perfectly ok.\"\n\nNate cocked his head in confusion. \"How did I help? I just pulled you off before you popped one of her implants with your foot.\"\n\nPeyton giggled. \"No, Nate. You've done so much more than that for me.\" Peyton looked Nate square in his blue eyes and spoke seriously. \"You've taken away my fear Nate. I saw you on the stairs and it felt like the fog was cleared from my mind. I stood up for myself because I believed it when you said I was strong.\" Peyton pulled back and laced her fingers with his. Nate looked at her intensely; feeling like his heart would burst from his chest. She spoke and he listened.\n\n\"It wasn't only just now, Nate. Every time I get nervous or fretful, I see you in my mind, clear as day, like I'm looking at you now. I hear your words in my ears. I feel you flowing in me. You just - you give the strength to me.\"\n\nSuddenly, Peyton began to sing.\n\nYou give the strength to me\n\nA strength I never had\n\nI was a mess, you see\n\nI'd lost the plot so bad\n\nYou drag me up and out\n\nOf the darkest place\n\nThere's not a single doubt\n\nWhen I can see your faces.\n\nHer softly melodic voice wafted through the air like a sweet breeze. There were tears in her eyes, but Peyton gleamed at Nate bright. She quickly wiped her eyes and chuckled nervously.\n\n\"Snow Patrol. Sorry, about the faces part. I think the song was meant for a group of friends, but it fit right now so well, you know?\" When Nate didn't answer, lost in thought, Peyton looked down and kept talking into his chest. \"I usually don't sing, but I believe there's a song for everything and right now that was mine for you. I know it may seem silly but-\"\n\n\"No.\" Nate said suddenly.\n\n\"No, what?\" Peyton looked up.\n\n\"No, it wasn't silly Peyton. No one has ever expressed that kind of love for me. I honestly didn't think anyone could love me after everything. After I'd become this angry, broken thing. I felt so swallowed in darkness. I doubted anyone would ever break through it to find anything to love about me.\"\n\nPeyton held his hands again. \"Well I did, Nate. I love you.\"\n\nNate didn't hesitate to respond. He didn't even have to think about it. \"I love you, too, Peyton. More than anything in the world, I love you.\"\n\nTears fell from her eyes. Nate hugged her close to him, swearing right then to never, ever let go.\n\n\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\n\nVictoria paced around her hotel room. She huffed as her pumps dug into the soft carpet.\n\n\"He's late,\" she grumbled to herself.\n\nToday really wasn't going her way; finding out that her estranged sister was shacking up with some wealthy, hot stud and had the audacity to rip the release papers; and then she hit her!\n\nThat little rat had the nerve to lay a finger on me! Victoria examined her face in the nearest mirror. Her nose had stopped bleeding, but it was terribly discolored and swollen. She groaned at her refection, silently swearing revenge. Her inspection was interrupted by a knock on the door.\n\n\"What!?\" she snarled.\n\n\"It's Stiles,\" a male voice retorted.\n\n\"Finally,\" Victoria hissed as she crossed the lavish room to open the door. She was greeted by a pair of surprised brown eyes.\n\n\"Whoa. What the hell happened to you?\"\n\n\"I fell,\" Victoria said sharply.\n\n\"Into what? A fist?\" Eric Stiles tried to stifle his laughter as Victoria glared at him. \"Don't worry, honey. You're still... bang-able.\"\n\nVictoria rolled her eyes. \"Thank you for those words of comfort,\" she said sarcastically.\n\nShe gracefully strolled to the white couch, Eric following behind with his eyes pasted to her luscious ass. Once seated, Victoria stretched out her hand to him.\n\n\"Give it to me,\" she ordered.\n\n\"Oh, I'll give it to ya alright-\"\n\nVictoria punched his knee, causing Eric to sit down across from her. \"Give me what else you collected on my sister!\"\n\nEric glared at her, and then removed a folder from his laptop bag. \"There's nothing new in there. I trailed her just like you asked and, I gotta say, the girl is into clean living.\"\n\n\"Is that the final ruling from a competent private investigator?\" Victoria mocked. Eric glowered at her.\n\n\"Look, I did what you paid me to do. I gave you all the information about where she's living, working, and who she visits. It's not my fault that she's a saint.\"\n\n\"A saint? Look what she did to me!\" Victoria shrilled, pointing at her face.\n\n\"I thought you fell,\" Eric smirked.\n\n\"What about Nate?\" Victoria ignored him. \"What did you learn about him?\"\n\nEric sighed and brought out another file. \"See your sister has good taste. Born and bred here in the city. His construction tycoon father built up quite an empire for him before kicking the bucket. No siblings. Only family he's got is his mother, and the good folks at St. Michael's.\" Eric could see Victoria losing interest. \"His last girlfriend, one night stands not included, was an Ad Exec named Addison Broughton.\"\n\n\"How'd you find that out?\"\n\n\"His co-workers were very, very helpful.\"\n\nVictoria smiled. \"This is why I hired you.\"\n\n\"Anyway,\" Eric went on. \"From the office chatter, I found out that their break up wasn't the friendliest. Seems like Addison wouldn't take 'no' for an answer.\"\n\nVictoria sat back and stared hard at the olive colored brute. He was just about her height (in heels of course) and had a barrel shaped body. His salt and pepper hair was always messy and he often smelled of tobacco and scotch. Cheap scotch. Physical appearance aside, Eric did good snooping and for a reasonable price.\n\nShe formulated a plan in her head. \"I have a new job for you, Stiles.\"\n\nEric sat forward, interested.\n\nVictoria explained her plan to him and what she'd have him do.\n\n\"That's illegal, Victoria,\" Eric thought for a moment. \"It's going to cost you.\"\n\nVictoria quickly reached for her purse, but Eric stopped her.\n\n\"Oh, no, honey. I want something else from you now.\"\n\nVictoria saw the glint in his eyes and felt his meaty digits creep up her exposed arms. She quickly yanked her arm away. \"Oh, fuck, no! That ain't on the menu, pal.\"\n\nEric relaxed and leered at her. \"Then no dice. I'm a very simple man, Victoria. You scratch my back,\" he leaned forward, eyes locked on hers. \"And I scratch yours.\"\n\nVictoria cringed away from him. Insulted, Eric stood up.\n\n\"Fine, have it your way, princess.\" he turned and headed for the door. \"I bet that pretty little sister of yours is gonna look real good after she gets her hands on that ten grand.\"\n\nAs much as the thought of having sex with Stiles made her nauseous, the thought of Peyton getting that money made her sick to her stomach. \"Fine!\" she said loudly.\n\nEric stopped in his tracks and turned towards her, a sly smile crept on his face. He crooked his finger, beckoning her. Victoria practically sneered at him, but her feet started moving. Once close enough, Eric touched her soft cheek with his thick fingers. He leaned forward and inhaled deep.\n\n\"Mmm,\" he sighed.\n\nVictoria felt her skin crawl. Think of the money; it's all for the money. \n\nEric's hand left her face and began fingering the buttons of her silk blouse. He slipped it off and eyed her plump fake double-D's lustfully.\n\n\"I must say, Dr. Andrews did a good job.\"\n\nVictoria reached her hand back, preparing to slap, but at the last second Eric caught her wrist and held it tight.\n\n\"Ow! Let go, you fucking gorilla!\"\n\nEric didn't hear her. He held her wrist and harshly bent it back. Victoria opened her mouth to cry out, but the sound was muffled by Eric's tongue being jammed into her throat. He kissed with abandon, not once loosening his grip on her or minding her sore nose. With his free hand, he palmed her ass, squeezing it firmly. Victoria squirmed in his grasp, almost suffocated by his rough kiss. She was becoming wet and it disgusted her. I cannot be enjoying this!\n\nBut she was. She felt her moisture building with every squeeze and flicker of his tongue. She tried hard to stifle a moan. He pulled away and stared hard into her eyes as he bent at his knees, grabbed the bottom hem of her short skirt and bunched it around her waist. Victoria just stood submissively. The scent of her immense arousal piqued his nostrils, bringing a smile to his face.\n\nVictoria turned her face away from his gaze. Suddenly, she felt her feet off the ground and she was in the air. Eric had thrown her over his shoulder. She went limp and decided to let him have his way. He carried her into the bedroom and flopped her down on the bed. Victoria stared at the ceiling, hearing Eric unzip his dingy jeans. She let her mind go blank as he crawled onto the bed. Her last thought made her shudder, almost bringing a tear to her eye as Eric's hot breath seamed into her skin. Maybe there is a price too high.\n\n\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\n\nSurprise your man. Peyton mumbled the quote she read in Cosmopolitan Magazine as she looked at Nate. It had been few days since their encounter with Victoria and Peyton was determined not to let it affect her relationship with Nate, especially now that they'd dropped the L-word.",
        "Nate was leisurely watching TV; his mind seemed to be far away. It made Peyton nervous when he was this quiet. However, she couldn't but enjoy how sexy he looked when he was brooding. His eyes were darker, his jaw set. His whole body seemed hard, except for the one part she really wanted hard. She fiddled with her fingers and gnawed at her bottom lip, thinking of how to go about surprising Nate. She wanted very much to strip down and ride him on the couch, but she couldn't make her feet move. Don't be a coward, Peyton. Just do it.\n\nShe checked her reflection in the decorative mirror on the wall. Short-shorts and a tank top didn't seem sexy to her, but the way they were hugging her body did. With one last deep breath, she was off.\n\nShe walked over to Nate and sat next to him on the couch. He looked over at her and smiled slightly before returning his eyes to the TV. Peyton thought for a moment, then laid her head on his lap. Nate shifted so she'd be comfortable and rested his hand on her hip. His heated palm touched her skin and Peyton suppressed the urge to shudder. The simple contact sent bolts up her spine and she had to close her eyes. As comfortable and safe as she felt in Nate's lap, she knew she had to do something, so she started shifting. She squirmed around until she felt his manhood against her cheek.\n\n\"You ok?\" she heard him voice.\n\n\"Mhm. I'm just feeling a bit restless, is all.\"\n\nNate looked down at her with concern. \"Anything I can do to help?\"\n\nFuck me senseless. \"No.\"\n\nNate let his eyes linger on Peyton. Her chocolate skin looked warm from the sunlight shining in through the windows. He licked his lips as his eyes trailed down her exposed legs. Her head kept moving in his lap and he'd become semi-hard just from knowing that her plump, juicy lips were so close to his hardening member. She suddenly turned her head up and smiled at him, a friendly smile that put his heart at ease but did nothing to dismiss his awakening erection. He smiled back, hoping she wouldn't notice. He then felt her shift again and her hands started undoing his belt. His smile fell quickly. He felt every muscle in his body tense up.\n\n\"Peyton, w-what are you-\"\n\n\"Shh. What does it look like I'm doing?\" Peyton said without looking at him. She pushed his jeans down lower on his hips and lifted his shirt up. She couldn't help but love how well defined his abs were. She slide her fingertips over his taunt abs. Nate felt like she was scorching a trail down his body. He held his breath, just watching as she explored him. He gasped when he felt her on him, softly kissing his happy trail. He cock was swelling and she'd barely even touched him.\n\n\"Take off your shirt, honey.\"\n\nNate obeyed, curiously watching his girlfriend. Once his pants were unzipped, Peyton pushed her hand inside and smiled up him. His breath caught and the threat of cumming in his pants seemed eminent.\n\n\"Mmm. What have we here?\"\n\nNate swallowed hard, his eyes almost completely glazed over with lust. She gripped his cock through his boxers and gave it a good squeeze. Nate felt like every drop of blood in his upper body had raced south and accumulated in one spot. Peyton tugged at his pants and he lifted his hips to help slide them off, along with his boxers. He was completely hard now, his turgid cock standing hard and angry. Peyton licked her lips and swiped her tongue over the head, causing Nate to hiss above her. She sheepishly watched as the dark purple head leaked, did it again, and again, and again. Nate was writhing under her touch, trying impossibly hard to contain himself.\n\n\"O-Oh, fuck. Yes, baby.\" He almost lost it when he felt her lips wrap around the tip of his dick. He immensely enjoyed watching her ebony mouth engulf more and more of his thick ivory cock. His short shallow breaths quickened. Peyton pulled her mouth off and flattened her tongue against the side of his cock. She slowly, excruciating slowly, glided it down to the base, crinkling her nose as she felt his coarse pubic hair. Nate was lightheaded, he felt so good. He looked down at her arched back, seeing her buxom bottom sticking up in the air. He could see her bra strap through the thin shirt and went about unhooking her bra through it. He felt Peyton stop for a moment and look up at him, his large cock still impaling her mouth. The wanton position clashed with the innocence in her wide eyes, which made him harder, if that was even possible at the moment. Nate leaned over slightly, happy that he had such long arms, and gave her ample behind a good swat, causing Peyton to jump a bit. She wrapped her hand around the base of his cock and gave it a good squeeze in response. He smacked her ass again, and she started stroking him up and down while sucking on the head harder. She bobbed her head up and down, stroking him along with her mouth. Nate kept his hips still, resisting the urge to grab her head and viscously slam his cock into her throat. His pulsating dick throbbed more and he felt a familiar tightening in his groin.\n\n\"Mmm, baby,\" Nate groaned through clenched teeth. \"I'm gonna cum.\" He felt Peyton's mouth come off his dick, but her small hand keep stroking it.\n\n\"That's the point, silly,\" she said, sounding too cute for the situation.\n\nNate bit his bottom lip hard and pushed her hand away him. Peyton pouted dramatically.\n\n\"Clothes. Off. Now.\" Nate growled. Peyton quickly stripped, revealing her curvaceous body to him. The scent of her arousal was intoxicating. But instead of waiting for his next order, Peyton bent down to his discarded jeans (giving Nate a perfect view of her swollen, dripping cunt), fumbled with his pocket, and pulled out a condom.\n\n\"Now, how did I know that would be in there?\" she asked, eyeing him.\n\nNate shrugged and smiled guiltlessly.\n\nPeyton got on her knees between his legs. She opened the condom packet and put the latex covering into her mouth, it resting on her lips in an O shape. She pressed her mouth on the tip of his cock and, using her tongue, rolled the condom onto his stiff shaft. Nate groaned loudly, hot and very impressed.\n\n\"Where'd you learn that?\" he breathed out after she was done.\n\n\"A lot of reading.\"\n\nNate suppressed a chuckle. It came as no surprise that his shy girlfriend learned her sexual technique from text. \"And what book have you been reading that teaches you such lewd behavior?\"\n\nPeyton shook her head. \"Not a book. A website. I'll show you it later.\"\n\nPeyton climbed onto his lap and silenced him with a forceful kiss. She surged her tongue into his mouth, symbolically claiming him as her own. Nate gripped her hips tight and lifted her, aiming his cock to her soaking core. Slowly, Peyton slid herself down, still impressed by how he stretched her tight pussy. Nate groaned as her hot, soaking snatch held his thick, dick like an ill-fitting glove. They stayed still, holding one another for a second. Peyton pushed her knees against the side of the couch and started moving her body up and down. Nate buried his face in the crook of her neck, inhaling her sweet scent and enjoying the feel of her luscious breasts pressed against him. He lifted his hips up to meet her movements, thrusting his cock in and out of her faster. Soon, the two lovers were humping with wild abandon. Peyton bounced her body faster, and Nate slammed into her with increasing intensity. Nate grabbed her hips and held her at his base. Peyton ground her pussy onto him, her clit pressing hard into his pelvis. She rode him hard and fast, throwing her head back and crying out in pure pleasure. Nate kept his eyes hooded, watching her tits bounce along with her body. Her mocha skin glistened with sweat. Nate felt his orgasm building up, but he wanted her to cum first, so he pushed his hand between them and rubbed her clit.\n\n\"Oh my fucking God, Nate,\" Peyton was practically screaming. \"Yes!\" Nate rubbed faster. He felt her tight pussy get even tighter, milking his cock.\n\n\"That's it, beautiful. Cum for me. Give me that sweet honey.\"\n\nPeyton needed no more coaxing. Before she knew it, her orgasm rocked through her body, setting it aflame. She screamed and gripped Nate's shoulders for support. Nate pounded into her without regard. His own release came just as hard, making him roar her name in ecstasy. He shot his thick seed into the condom, holding Peyton close. She slumped against his hot body, still trembling.\n\n\"Goddamn,\" he breathed out.\n\n\"Agreed,\" she sighed with a smile.\n\nNate kept his arms around her as he stood up. Peyton instinctively wrapped her legs around her waist as he carried her up the stairs to make love to her for the rest of the afternoon.\n\n\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\n\nNate avoided the morning sun as he sat at the edge of the bed, lost in thought. He glanced back at a sleeping Peyton, breathing softly. Even after everything with Victoria, Peyton seemed fine. But Nate wasn't. A storm brewed in his mind and he couldn't focus on any one thing; except Peyton. But he hadn't told her about it. If she sensed his distance, she didn't show it. And he didn't want to ruin her good mood with his foul one. He moved over to her and gazed at her peaceful, sleeping face. He lightly moved her bangs and gently pressed his lips on her forehead. He crept out of bed and into the shower as quietly as he could. The hot stream and searing water calmed him, but not completely. When he returned to his room, Peyton was sitting up in bed, wearing a smile and his t-shirt.\n\n\"Hey,\" she said softly.\n\nNate nodded at her dismissively and went to his closet.\n\nPeyton frowned. \"You ok?\"\n\nNate grunted, still searching for clothes. Peyton got out bed walked over to him. She admired the taunt muscles of his back and the soft sun-kissed color of his skin. He looked delicious. She wrapped her arms around his waist and kissed his back. Nate closed his eyes and sighed. Guilt stung his heart. He placed his hand on Peyton's, savoring her comfort.\n\n\"Penny for your thoughts,\" she whispered against his warm skin.\n\n\"Today's the anniversary of my dad's death.\"\n\nPeyton gasped. That explains the behavior. \"Oh, Nate.\"\n\n\"I thought I could handle it alone. I didn't want to bother you with this, I just-\"\n\n\"Stop.\" Peyton interrupted and turned him around. Looking into his eyes, she said, \"Nate, you never have to deal with anything alone, because you're not alone. You've got to remember that. I love you and I'm here for you.\"\n\nNate leaned down and kissed the top of her head. He wrapped his arms around her shoulders and held her tight.\n\n\"And so is your mom.\"\n\nNate's eyebrows furrowed and he tried to pull away, but Peyton kept her grip around him.\n\n\"Nate, she loves you. She's your family. It's just the two of you left. You shouldn't push her away like you have.\"\n\nNate was quiet, so Peyton kept talking. \"When I met her, she asked me not to hurt you. She cares about you. And I think she's still hurting from the loss of your father. She mentioned him when we talked. She loved him and she loves you. So does Pastor Donavan. You have people who care about you, Nate. You don't have to carry this sadness with you.\" She felt him squeeze her tight. His body felt tense and hard, and she could hear his heart thumping in his chest.\n\n\"I'm going to the cemetery at St. Michael's. I'm going to call my mom to join me.\"\n\nPeyton smiled. \"I know she will like that.\"\n\n\"Will you come too?\"\n\n\"Of course.\"\n\n\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\n\nPeyton fiddled with her fingers nervously in her seat. Nate was driving them to St. Michael's, where they were to meet Adele Tennison to pay their respects. Nate was uncommonly quiet, and Peyton decided to let him stay that way. By the tight look on his face, he didn't feel like talking. It hurt her heart seeing him this way, lacking the warmth she'd come to know and love.\n\nAs they pulled up to the church, they spotted Adele, hands full of bright yellow daisies that completely clashed with her all-back attire. Standing next to her was Pastor Donavan, bible in hand, looking solemn. Nate gave the pastor a firm handshake before turning to his mother. Peyton greeted them both warmly.\n\n\"You're glowing, my dear,\" Pastor Donavan beamed.\n\nPeyton hugged him tight. \"I can't thank you enough for everything you've done for me.\" She felt the pastor smile next to her cheek.\n\nShe looked over and saw Nate and his mother in a close embrace. Peyton smiled at how small Adele looked compared to her son's impressive height. The older woman had tears in her eyes already. The four walked past the church to the graveyard. Adele led the way to where her husband was buried. Peyton saw Nate stop. His hands were shaking and his eyes gleamed with the threat of tears.\n\n\"Peyton,\" he choked out. Peyton quickly grabbed his hand and squeezed it.\n\n\"I'm right here, Nate. You can do this.\"\n\nHe looked at her and nodded before taking short steps forward. They caught up with Adele, who had stopped at a well carved gravestone. It read \"Here Lies James Philip Tennison; Beloved Husband, Father, and Friend\". Adele quietly sobbed as she laid the flowers on the grave.\n\n\"His favorite,\" she whispered. Pastor Donavan held her hand.\n\nAfter a moment, Nate stepped forward and knelt down. \"Hey, Pop. Been a while. I'd like to introduce someone.\" Nate motioned for Peyton to kneel as well and when she did, he smiled sadly and said, \"This is Peyton. I think you'd have liked her. I sure do.\"\n\n\"Nice to meet you, sir.\"\n\nNate and Peyton both placed their hands on the cold stone. Peyton's eyes began to sting and soon tears were flowing down her cheeks.\n\nThey both stood up and all four mourners held hands, all crying.\n\nNate broke the sad silence. \"Peyton.\"\n\n\"Yes?\"\n\n\"You say there's a song for every moment. What's a song for this one?\"\n\n\"I know one.\" Adele chimed in. Peyton, Nate, and Pastor Donovan looked at her as she began to sing.\n\n\"Hush now don't you cry\n\nWipe away the teardrop from your eye\n\nYou're lying safe in bed\n\nIt was all a bad dream\n\nSpinning in your head\n\nYour mind tricked you to feel the pain\n\nOf someone close to you leaving the game\n\nOf life\n\nSo here it is, another chance\n\nWide awake, you face the day\n\nYour dream is over...\n\nOr has it just begun?\n\nThere's a place I like to hide\n\nA doorway that I run through in the night.\"\n\nAdele squeezed Nate's hand as she continued, looking at him then.\n\n\"Relax child, you were there\n\nBut only didn't realize\n\nAnd you were scared\n\nIt's a place where you will learn\n\nTo face your fears, retrace the years\n\nAnd ride the whims of your mind\n\nCommanding in another world\n\nSuddenly, you'll hear and see\n\nThis magic new dimension.\"\n\nAdele fell apart into weeping, not able to finish the rest of the song. Nate pulled her to him and she cried deeply.\n\n\"I know that song,\" Peyton said quietly. \"Queensryche's 'Silent Lucidity'. Wanna know my favorite part?\" It was Peyton's turn to have all eyes on her.\n\nShe sang:\n\n\"I\n\nWill be watching over you\n\nI am gonna help you see it through\n\nI\n\nWill protect you in the night\n\nI am smiling next to you.\n\nIn silent lucidity.\"\n\nShe smiled up as a tear slid down her cheek. Adele reached out her hand and pulled her into a group hug. Peyton pulled in Pastor Donovan and they all held each other for what seemed like hours. The pastor was the first to pull away, and he said a quiet prayer. They prayed with him. Adele kissed her fingertips and pressed them against the gravestone.\n\n\"I miss you,\" she whispered.\n\nNate held his mother's and Peyton's hands and they finally headed back to the church. Once inside, Peyton spotted Jane.\n\n\"I'm going to go say 'hi' to my friend. You think you'll be ok?\" Peyton asked.\n\n\"Yeah,\" Nate nodded. \"I need to talk to my mom anyway.\"\n\nPeyton gave his hand a reassuring squeeze before going over to Jane.\n\nNate hugged Pastor Donovan. \"Thank you, Padr\u00e9 Don,\" he said quietly.\n\nThe elder Pastor just smiled sweetly. Nate led his mother to the pews and sat with her.\n\n\"Ma,\" he began, looking down at her hand in his. \"I would like to apologize.\"\n\n\"For what, son?\"\n\n\"For not considering how you took dad's death,\" he sighed. \"I knew you were hurting but I was so focused on my own pain that I didn't think about you. I pushed you away and let myself be swallowed up with sadness. When Addison-\" Nate stopped and swallowed. \"When she took away my son, I just stopped trying.\"\n\n\"Oh, baby. I understand why. I'm not mad.\"\n\n\"But I am. You're my mother, my family. And I don't want to appreciate you when you're gone.\"\n\nAdele's eyes released fresh tears. \"Well, I'm here now, baby. And I love you.\"\n\nNate hugged her for what felt like the one-hundredth time that day, but it never got old. \"I love you too, Ma.\"\n\nMother and son embraced for a bit before pulling away and wiping their eyes.\n\n\"Son, if you don't mind me asking, what brought this on?\"\n\nNate smiled softly and looked at Peyton. She was being smothered by Jane, but caught his eyes and smiled back at him. Adele followed his gaze and nodded, understanding. She pulled off a ring from her left hand.\n\n\"Well, then,\" she held open Nate's hand, and placed her engagement ring into his palm. \"You must give her this.\"\n\nNate sat up, surprised. \"No, Ma. Dad gave that to you-\"\n\n\"And your grandmother gave it to him. He would want you give it to the woman you loved. Besides, I've still got my wedding band. This, this is yours now.\"\n\nNate closed his hand over it. \"Thank you.\"\n\nHe pushed his hand into his pocket and the pair walked back over to where Peyton, Jane, and Pastor Donavan were standing. Nate kept one hand in his pocket, still fingering the ring, and held Peyton's hand with the other.\n\n\"You guys ok?\" she whispered to him. She was almost taken aback by the loving way he was looking at her.\n\n\"Yes. I think everything will be alright now.\" he said, still gazing at her.\n\n\"So!\" Jane piped up, \"Who wants lunch?\"\n\n\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\n\nNate couldn't help but slide his fingertips along the sides of the ring. He felt as if it burned a hole in his jean pocket. He could hear Peyton humming inside the house. Should I ask today? Is it too soon? Will she say no? Will she say yes!?\n\nHis mind was racing and his heart had somehow migrated into his throat. His palms felt clammy and he could feel the beads of sweat forming on his brow.\n\nCalm, man. Calm! He sat down on his porch lounge chair and tried to focus. His leg bounced rapidly and it was getting hard to breathe.\n\n\"Nate?\"\n\nNate turned around to see Peyton in the doorway, looking at him with worry.\n\n\"Are you alright?\"\n\n\"Yeah. I-I'm great.\" Nate stuttered nervously.\n\nHe could tell Peyton wasn't buying it. She walked over, her impressive hips swishing in her long skirt, and planted herself in his lap.\n\n\"Nate,\" she said seriously. \"I thought we talked about this. The other day, before we went to pay respects with your mom.\"\n\nNate laughed nervously. \"I remember Peyton. I was there.\"\n\n\"And do you remember me telling you that you can tell me anything?\"\n\nNate nodded.\n\n\"Then tell me what's bothering you now.\"\n\nNate shifted his gaze. Peyton frowned.\n\n\"Nate. Come on, man.\"\n\nNate swallowed hard and reached into his pocket. Now or never.\n\n\"Peyton, do you love me?\"\n\n\"More than anything else in the world,\" she admitted.\n\nNate bit his lip. \"And you know I love you, right?\"\n\nPeyton smiled and nodded. Before he could say anything else, Peyton kissed him, a soft luxuriating kiss. Nate felt his rapid heartbeat slow. He fell dizzily into the kisses, nibbling and licking sensually. The two, so lost in their embrace, didn't hear the red mini cooper pull up. They did hear the door slam and when they parted lips; both almost fell from the seat. Peyton felt all the color drain from her face, again.\n\n\"Well, ain't this a surprise,\" Addison said as she stomped towards the pair. She strode like an aimed bullet; her bull's eye set on Peyton."
    ],
    "authorname": "curiouskatty",
    "tags": [
        "black woman",
        "white man"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/home-ch-05-1"
}