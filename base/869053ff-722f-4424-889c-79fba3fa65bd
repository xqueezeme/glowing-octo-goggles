{
    "title": "Fling Maybe? Ch. 03",
    "pages": [
        "Him\n\nYup I said it. I had no control of it. It just slipped out. I wont even blame it on the heat of the moment either, or the three beers I had. It's how I feel deep down. What was terrifying was how easily it came out. I braced myself for her reaction, but there wasn't one. At least not one geared to my confession. Besides my own heart beating in my ears, her light snore was the only other sound in the room. \n\nHow did I let it get this far? \n\nRight now wrapped in my arms was everything I've ever wanted in a mate, yet she wasn't mine. I fucked up. I was hopelessly and utterly screwed. What started off as me helping her find the funds to open her studio quickly turned into a friendship. One in a short time I would cherish for the rest of my life. A friendship I ruined by introducing sex into it. \n\nWe had incredible chemistry from the start. Explosive. The sex I believe was inevitable. It linger too thick between us to be ignored. She's wild, kind hearted, feisty, funny, she takes absolutely no shit from anyone, yet she loves everybody the same. She would be the perfect wife and mother to our children. She is who I want and need.\n\nAm I willing to risk what we have right now for a broken heart and rejection?\n\nI couldn't sleep. Too much on my mind. I needed fresh air. I remembered a pastime I picked up at the club earlier. I untangled myself as gently as I could from around her. Quickly replacing my arm with a pillow underneath her head. She groaned and wiggled her naked bottom against me. I reached for the sheet at the end of the bed and pulled it over her naked body. I kissed her shoulder and climbed out of the bed.\n\nI put on my briefs and fished through my jean pockets until I found what I needed. I turned off the lights in the room and snuck out of the balcony doors. \n\nAfter the divorce from my ex wife I got really depressed. I thought we would last forever. I had this whole vision of our lives together. I was so blinded by the fantasy I created in my head for us that I didn't see how evil and manipulating she was being. She didn't have to work, but she opted to work part-time as a secretary. I paid all the bills. Bought her the latest model cars. I gave her a credit card, so she could shop and buy whatever she wanted.\n\nShe was in charge of making sure the mortgaged got paid, the car notes were paid, and household bills got paid. For three months none of those things were getting paid. I was creating major debt and I didn't know it. One day we received a notice from the bank threatening to take the house that I built for us. When I confronted her about the matter she smiled at me and said she was leaving me for someone who could afford the lifestyle she deserved. \n\nIt took me two years after the divorce to rebuild myself. Gain some self confidence back. Two years to get out of debt. It had been really hard for me, and I promised myself to never be doped again by any woman. I even convinced myself that all women were like Gemma. \n\nThe only thing she left me with was the house which I sold for 3.4 million dollars. Over the past year I've become somewhat of a playboy. I've courted women with no intention of giving them anymore than a good time. In the process I might've broken a heart or two, but I was honest with my intentions with all of them. \n\nMonette came out of nowhere destroying my whole mindset. I let her get to me. The person I thought I became was a lie. I wanted a wife. I want the big house filled with children that ran to the door when I came home from work. I wanted it with her.\n\nMaybe this was my punishment. Falling hard for a woman who just got out of a bad marriage. He had done a number on her. Now she doesn't trust anyone. Vowing to never give her heart to another. She was afraid. She told me she didn't think she could survive another heartbreak. I would never do anything to make her feel less than loved and cherished. \n\nIt's foolish to think to have things feeling when she is about to start a new life in a far away land. I knew it was only for a year, but four days without seeing her seemed too much. That's why I invited her to Chicago with me this weekend. The distance would've been too great and we had a short amount time left together. If this was it for us I wanted to savor every minute of it.\n\nHer\n\nA cool breeze swept through the room. I must've dozed off because when I opened my eyes the room was damn near pitch black. I looked around and I was in the bed alone with a sheet covering my naked body. I reached for my phone on the night stand the display read 2:51 AM.\n\n\"Greg?\" I called out in the darkness. No answer. I sat up. I noticed the balcony doors were open slightly. I swung my legs over the side of the bed pulling the sheet with me. When I stood up I felt the tenderness between my thighs. Greg definitely gave my cooch a beat down. I wrapped the sheet tighter around me. \n\nA strong familiar scent met me as I got closer to the doors. I looked out and I could see him sitting in one of the sun bathing patio chairs his back to me and a swirl of smoke dancing around his head. \n\n\"Greg?\"\n\nHe turned his head towards me. \n\n\"I'm sorry did I wake you?\"\n\nI moved further outside. \"No I woke up on my own. I didn't know you smoked weed.\"\n\n\"I do every now and again. If it bothers you I'll put it out.\"\n\n\"No its okay. What are you doing out here? Can't sleep?'\n\nI moved in front of him. He only had on a pair of black shorts. His rock hard upper body exposed to the night air.\n\n\"Just a lot on my mind.\" The crease in his forehead grew deeper.\n\n\"You wanna talk about it?\" I was concerned. I tell something has been bothering him all day.\n\n\"Not really.\" He said with a coldness that shocked me.\n\n\"Well I'll just leave you alone then.\" I began to walk away.\n\n\"Wait no don't leave. I'm sorry.\" He pleaded. I stopped in my tracks. They way he sounded pulled at something deep inside me. \"Come sit with me.\" He reached out.\n\nI sat between his open legs and leaned against his chest. He wrapped an arm around me holding me tight. He kissed the side of my head. Something was troubling him.\n\n\"You know you can talk to me about anything right? I promise it will stay between us.\"\n\nHe was silent for a few moments before he said, \"I don't think you can handle what's going on in my head right now.\" His voice was mellow and distant even though he spoke inches from my ear.\n\n\"Try me.\" I brought his hand down to my face and took a pull off his joint. \n\n\"You smoke too?\"\n\n\"Every now and again.\" I blew out the smoke. \n\nWe sat in silence for a while. I looked up at the dark starless sky. Not sure what to say. \n\n\"Thank you.\" He finally said.\n\n\"I told you I'm here if you need to talk .\"\n\n\"Not just for that.\" He took another pull from the joint. Then brought it to my lips. I took a pull creating smoke rings. \"I know this was suppose to be a summer fling. You've been much more than that to me.\" \n\nWhere was he going with this? \n\n\"I haven't laughed as much as I laughed with you. You bring out a side of me I thought I lost a long time ago. I can be myself around you. You've never judged me, or made me feel out of place. Knowing that our time is almost up causes a little panic in my chest. I know you have a life you have to get back to and I would never want to keep you from it, but I'm going to miss this. This freedom I'm feeling right now. With you. I wish things were different, or we met at a different time in our lives. I wouldn't mind waking up to you every day and lay down with you every night. I think I just might have fallen for you.\"\n\nOh hell what was in that damn joint? Truth serum? \n\nI was silent.\n\n\"I said too much didn't I? I knew you couldn't handle what I had to say. It's okay if you don't feel the same way. I don't expect you to. I was just telling you how I feel.\"\n\n\"Greg why would you...\" My voice cracked. \"You can't just say things like that.\"\n\n\"It's the truth. Don't lie and say you're not feeling something too. We are no longer just friends. We moved way past that stage.\"\n\nI swallowed hard. \"It's just sex.\" I said just above a whisper.\n\n\"Just sex eh?\"\n\nWas he really waiting on an answer?\n\n\"So what we've been doing is just having sex?\"\n\n\"Yes.\"\n\n\"Bullshit. It might've started out that way, but things have changed. We longer just fuck, Monette. We make love. Our souls intertwine. I know it. I feel the difference and I know you do too. Especially after this morning.\"\n\nHe was calling me out. Deny...Deny...Deny...Protect your heart.\n\n\"No.\"\n\n\"No? So now we're lying to each other?\"\n\nI attempted to get up, but he held me tighter. After a few seconds of struggle I gave up.\n\n\"What do you want from me?\" Tears threatened the rims of my eyes. \n\n\"I want you plain and simple.\" \n\n\"How can you be sure what you're feeling isn't just lust?\"\n\n\"Because beyond the amazing sex we connect on a much deeper level. It's almost spiritual. I can't explain it. I just know I never felt it with any other woman. And I know I'm putting myself out here with a chance of getting hurt, but I've been feeling this way for a long time.\"\n\n\"You have real fucked up timing, Gregory!\" I hit his thigh.\n\nHe laughed. \"I know. I've been this way my whole life.\"\n\nThere was silence.\n\nShit what have I gotten myself into.\n\nA part of me wanted to be the woman to take care of him, love him, protect his heart. Show him that all woman aren't like his ex. He's an incredible guy who deserves to have an equally incredible woman by his side. The other part of me that's afraid I'm not ready for what he needed. I didn't cut it in marriage, maybe I don't have much to offer a man like Greg.\n\nThe conversation I had with his mom in the kitchen after the guys left was enlightening. Gemma was an evil bitch who hurt him real bad. She broke him down. Stole his pride. God, I want to punch that snooty bitch in the face for hurting him like that. The worst part he was blind to it. He let his heart override his mind. What if he was doing the same thing now? Ignoring the mess I am because his heart is telling him something different. \n\n\"Tell me what's on your mind?\" He whispered in my ear bringing me back to reality. \n\n\"Can I think things through first?\"\n\n\"Of course.\"\n\nI made a move to get up and this time he let me. I was actually nervous to look back at him. I was afraid of what I might see. What if he was everything I dreamed of? What if he was everything I ever needed? I wasn't ready. Not right now. I was damaged. I still need time to heal.\n\n\"Are you okay, Sweets?\"\n\nI nearly sighed at the personal nickname he gave me. I turned in his direction. He had sat up. Worry lines etched his forehead.\n\n\"Yes I'm fine. I'm going to grab a shower and go back to bed. You should get some rest too, check out will come upon us before we know it.\" I tried to sound as lighthearted as possible even managing to force a smile. \n\n\"Okay will do.\" He stood up and before I knew it he made it over to me. He touched the side of my face. We locked eyes. What I saw in them made my heart skip a beat and my breath catch. He ran his thumb across my bottom lip. My tongue followed behind chasing the taste of him. I bit back a moan. He leaned down and pressed his lips to mine. Sweet loving pecks is what he gave me. I returned them. \n\nI groaned when he pulled away.\n\n\"Goodnight, mo chroi.\" He gave me a final peck before going back into the room.\n\n\"Goodnight.\" I said to his retreating back. \n\nOnce I was in the safety of the shower, I was able to think. The tears that I held in now flowed freely and were swiftly washed away. \n\nI was dedicated to one thing and that's was being a good wife. I lived and breathe for Darren. I thought I was a good wife, but. he was a demanding asshole who was never satisfied with anything I did. The man had become impossible. He knew he married a free spirit. He knew I refused to be controlled, yet he tried to force me into this cookie cutter image that I hated. Dumbly I went along with it because I loved him and I wanted us to work out.\n\nI was supposed to bear his children. He kept putting it off saying we weren't ready. I put my dreams on hold for him. He promised me once he got his career established I could open my own dance studio.\n\nI waited five years and I watch him get promotion after promotion. Still no studio and no children. When I asked him he said he still wasn't ready. After another three years I realized he had no intention of having children with me or funding my studio. Eight years and I have nothing to show for it. Except wasted time and a manila envelope he wasn't brave enough to hand me himself. \n\nHe filed for the divorce behind my back. Stating reconcilable differences. He said I was no longer taking care of his needs. What a load of crap. I cooked for him, made sure our house was spotless, sexually I was down for whatever he wanted, which wasn't much. He was quite a prude in the sack. \n\nStill I was in shock. I thought I was being a good wife. I was crushed, but I was over fighting him. Too bad he wasn't as mature as I was. He dragged our separation and divorced out for over a year. Until I got to the point I gave in. I wanted nothing from him. Against my lawyers advisory I walked away with nothing. My only request was that he paid my lawyer's fees and leave me the hell alone. \n\nI moved back into my father and stepmom's home for a couple of months until I got back on my feet. They refused for me to pay rent, so I busted ass saving every penny I made from doing music videos and doing odd jobs here and there.\n\nMy best friend, Kimmy was able to get me a space at the rec center to start teaching. Although I was very grateful for the space, my dream was to have my own space. \n\nI didn't know where to start so I started attending financial classes. Each one I left more confused than the last. I almost gave up until I ran across a flier online for a free masterclass. I said what the hell and attended. It was quite interesting and entertaining. Then I realized I knew the moderator. \n\nI caught up to him after the seminar. We chatted and reconnected. We ended up exchanging numbers because he was determined to help me get the paperwork together for any possible loans and grants I would need to open my studio. \n\nHe was a great friend. Why did we cross that line? Why did crossing that line feel so good? I've build a craving for it. I beg for it. I put my all into it. He filled a void I never knew I needed filled. Now I'm here praying for the water to wash away the fear, sadness, the hurt, but mostly the love I hid deep in my heart for someone I was no good for. \n\nAfter an hour I exited the bathroom completely nude. As I expected, he was still awake. The TV remote in his hand as he sat up in the bed. Sports center played on the flat screen. He watched me saunter towards him. He has a way of looking at me that makes me feel like the most beautiful woman in the world. I always feel sexy and confident when he looks at me this way. I took the remote from him and threw it to the side. I climbed into the bed and straddled his lap and sat on top of him. \n\nHis eyes never left mine. I looked down into his green orbs. I smooth the his disheveled red hair back. There was so much I wanted say to him, but I couldn't form the words. So I communicated the best way I knew how. I bent down and kissed him. At first he didn't respond, but I was determined. Then I felt his large hands start at the small of my back and work there way up. I shivered and moaned as his tongue separated my lips. He has always tasted sweet to me. We kissed until our lips were bruised. We shared a couple of breaths. \n\nHe looked like he wanted to say something, but I put my finger to his mouth.\n\n\"Shh.\"\n\nI moved down his body I placed kisses along his jaw and down his neck. He opened his legs wider as I slid between them. I rained kissed down his chest and over each ab all while keeping my eyes on his. He assisted me with getting his briefs off. His cock laid heavily against his thigh. I moistened my lips as I placed wet kisses on the underside of his shaft.\n\nHe grunted. I licked up the same path my lips stopping briefly flick my tongue rapidly against his frenulum, right below the head.\n\n\"Oh fuck.\" He said under his breath gripping the sheets.\n\nHe still tasted faintly like us. That turned me on. I took him in my hand, I marveled at the beauty of it. So thick and strong. Just thinking about the way he uses it to make me come over and over makes me wet. He would fuck me into incoherence. I would be a babbling fool by the end of our romp. \n\nI twirled my tongue around the head catching some of the delicious pre-cum on the tip of my tongue. I moan savoring the taste. I wrapped my lips around him. I suckled gently while working my tongue clockwise.\n\nI felt his fingers in my wet hair. I looked up at him as I worked hand up and down the base of his shaft. He was biting into his bottom lip. God, this man is so damn sexy. I let some saliva slid down his cock lubricating my hand job. I relaxed my throat and took him deep into my mouth. I could only get half way down because of his size, but he didn't seem to mind by the sounds he was making. \n\nI sucked him earnestly. His moan encouraging me to work harder. I could feel my pussy drip down my thighs. I fought the urge to touch myself. \n\nI knew he was close to coming because the grip on my hair got tighter. The pain quickly turned into more juice leak out of me. I moaned around him. The vibration cause him to jump. \n\n\"Mm, Sweets if you don't stop I'm going to...fuck!\" He hollered out.\n\nI worked faster. I used my available hand to fondle his balls. I could feel them contract. I cupped and used two of my fingers to press down on the area right above his asshole. That did it. I wasn't prepared for the first burst of ejaculation, but I swallowed and recovered quickly. \n\nHis hips lifted off the bed, but I continued to work until I had every last drop. Nothing was wasted. He let go of my hair. I released him and crawled up his large frame until I was again straddling him. My pussy hot and wet on his stomach. His eyes were wide. His chest moved up and down as he tried to catch his breath. I mentally pat myself on the back. I got him good. \n\nGreg caught me by surprise when he yanked me forward. Somehow I ended up on my back legs spread wide. His head between my thigh slurping up my juices. \n\n\"Ah.\" I screamed out. I was so worked up I was already coming. \n\nI tried to pull away, but he wasn't having it. He locked his arms around my thighs. He never took his eyes off of me and I was trapped in his gaze. I road wave after wave of pleasure until I thought I might pass out. \n\n\"Please...please. I can't.\"\n\nI wasn't making any sense. All I knew was I was begging again. Nothing should ever feel this good. \n\nI came for the third time and finally he let up. He gave me no time to get my thoughts together he entered me with ease. He rocked my whole body. We were chest to chest. My ultra sensitive clit was being teased my the roughness of his pubic hair. I was gushing all over us.\n\nWe greedily devoured one another's mouths sharing our flavors. Which only made us hungrier for each other. \n\nThere was no need to change positions. This was perfect. I was coming again and I knew he was right behind me when he buried his face in my neck and sucked hard on my spot. \n\nI yelled out and he growled into my flesh. He filled me to the brim. The decline of our orgasms was slow. Minutes went by before we were able to move. I immediately missed the weight of him on top of me when he rolled to the side pulling me with him. \n\nMy body was like jelly, but well satisfied. I laid my head on his chest and listened to his slowing heartbeat. \n\nDamn.\n\n\"Greg?\"\n\n\"Yeah?\" He said half sleep.\n\n\"I love you too.\""
    ],
    "authorname": "leeleeMarie",
    "tags": [
        "black woman",
        "oral",
        "white man",
        "fling",
        "interracial",
        "love"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/fling-maybe-ch-03"
}