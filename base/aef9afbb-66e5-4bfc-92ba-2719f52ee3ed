{
    "title": "Falling Snow Ch. 02",
    "pages": [
        "It was late. \n\nTom hadn't encountered a single soul on his walk through campus. That was weird. There should have been at least a few people out, not that Tom blamed them. A sense of foreboding and dread seemed to hang over the school like a cloud. The street lights seemed dimmer, the shadows longer and darker. The patches of complete darkness were like a bottomless void ready to swallow up the unknowing traveler. The inky blackness of the night seemed to sink into every pore of his body, infecting his sanity.\n\nYou could hear none of the usual, lively sounds that come with a lot of people living in a small area. The campus was dead silent. The silence was like a physical presence all around him. Tom wondered if the mood on campus was Shyira's doing. A not so subtle suggestion that tonight was a good night to stay in and watch a movie. It would certainly provide the necessary privacy for Tom's first ever summoning lesson.\n\nIt was under this atmosphere that Tom found himself sitting in the first row of a deserted lecture hall, waiting for his inhuman instructor to begin the lesson.\n\nShyira apparently took the role of \"summoning teacher\" seriously and was dressed for the part. Tom wasn't sure you could call Shyira's clothing a teacher's outfit, more of a slutty teacher's costume. Her pencil skirt was cut too short and slit too far up her shapely thigh to be considered school appropriate. Her white blouse was tied at the bottom to expose her flat stomach and had enough buttons undone at the neck line to make the garment almost pointless at containing her ample bust. She completed the look with her ash blond hair held in a tight bun with a pair of pencils and a set of black framed glasses perched on the end of her nose.\n\n\"Alright baby warlock, let's get started.\"\n\nShe made walking in fuck-me heels look elegant as she moved around the circumference of the summoning circle drawn on ground. A piece of chalk, held at the end of her tail, waved lazily as she spoke.\n\n\"Basic summoning magic is all about concentration. Your magic does all of the work, the circle merely directs and guides the flow of power to achieve the desired effect. Standard summoning circles are a two ring design.\"\n\nShe paused and looked at him to make sure he was paying attention before continuing her explanation. Not like he could look away. Tom's eyes hadn't left her since she walked into the room. Shyira was always beautiful but tonight she took it to a whole another level. Something he would never admit to was having a serious teacher fetish. Growing up a geek meant that the only women who ever paid him any attention or looked upon intelligence as anything but a negative, were his teachers. One teacher in particular, his senior English teacher, Ms. Anderson, used to wear her hair the exact same way.\n\n\"The inner ring is the 'barrier ring.' It counters the magic of the being you're summoning, keeping it contained. The inner ring is powered by your own magic, so the strength of the being you can summon is dependent on the strength of the summoner.\"\n\n\"Sounds dangerous.\"\n\n\"It is, which is why we'll keep it simple for today,\" she said. In a mock baby voice, she added, \"something soft and fluffy for my itty bitty baby warlock.\"\n\nTom's face reddened slightly at her teasing, earning him a quiet chuckle and a wink.\n\n\"Are you ever going to stop calling me that?\"\n\nTom wasn't sure he liked being called \"baby warlock,\" since he had spent the last several years of his adolescence trying to be recognized as anything other than a kid.\n\n\"Only if you let me call you master.\"\n\nTom sighed.\n\n\"I don't feel like much of a master around you.\"\n\n\"You will,\" she said, unconcerned.\n\n\"How do you know? What if I'm just not cut out for this?\"\n\n\"But you are, I can feel it. The day will come when you will have complete mastery of your surroundings and all who inhabit them.\"\n\n\"How will I know when that day comes?\"\n\n\"For starters,\" she said, looking at him to emphasize the point, \"when your first instinct when I mouth off to you is to bend me over your knee and give me a good thrashing.\"\n\nShyira smiled. Tom snorted.\n\nNot likely, he thought. She wasn't the type to be bent over anyone's knee, much less his own. Shyira turned back to the circle and began pointing with her tail.\n\n\"Now the outer ring, on the other hand, prevents outside magic from entering the summoning circle, magic that might be used by the being inside to break through the inner ring. So I guess you could say its purpose is to strengthen the inner ring, preventing the spell from encountering outside interference.\"\n\n\"The pentagram in the middle is used for... actually the pentagram in the middle doesn't do anything. It's meant to look cool, I guess. More frivolous nonsense wizards have added over the years, to a perfectly usable summoning circle. It's in the book so we'll draw it anyway.\"\n\nThat was another thing, with the derogatory way Shyira spoke about other wizards, Tom could never imagine her submitting herself to one.\n\nWizard? Warlock? He wasn't sure what the difference was and Shyira seemed to use them interchangeably. Something to ask her later.\n\nThe irritated way she cocked her hip while speaking wasn't helping his concentration. Almost the entirely of her leg was now outside the slit in her skirt, showing the long, smooth, reddish skin of her thigh. The tension put on the fabric of the skirt caused the material to press into her pussy.\n\nShe isn't wearing panties, he thought, his breath quickening.\n\n\"Explaining the next part of the ritual would be easier if we had a target in mind. But what should we summon?\" Her tail held the chalk like a hand would hold a pencil. As she thought she lightly tapped the chalk against her lush, full, soft, gorgeous li-.\n\nConcentrate.\n\nThe last thing he needed was to miss some critical detail that might keep him from getting killed. Plus, he actually did want to learn something today. Most of the last month, since getting back from the cabin, had been spent engaging in some form of sex. The lust of a succubus was never satisfied. Hell, he didn't even know the names of some of the things they had been doing. You can bet if Shyira noticed him looking at her like that, she wouldn't hesitate to jump at the opportunity to fuck him.\n\n\"Do you need the chalk for something?\"\n\nTom winced. Shyira looked at him with an expression of amusement, peppered with something hungrier.\n\n\"Or are you just thinking of something else white you'd like to get all over my lips?\" She said. \"If you were in the mood all you had to ask.\"\n\n\"Shyira...\"\n\n\"I wish you would stop calling me that. You could come up with an affectionate nickname for me, you know.\"\n\nShe walked over to where he was sitting. Leaning over the desk, she wrapped her arms around his neck The angle gave him a perfect angle down her shirt. Shyira looked into his eyes and smiled. They say that the eyes are the windows to the soul. Outside of sex, there were few things in life more intimate than locking eyes with another person. The effect on him was immediate.\n\n\"W-what like Shy?\"\n\nShe loved how he still got flustered around her. You would think with everything they'd been doing together that he would have calmed down around her by now. He may not be a virgin anymore but he still acted like one at times.\n\n\"Or demon bitch, fuck toy, whore, cum bucket,\" she giggled, \"you know, something cute.\"\n\nHe couldn't tell if she was being serious or was just teasing him. Probably both, he thought.\n\n\"I think Shy works for now.\"\n\n\"Oh, you're no fun,\" she pouted, \"lots of people call me Shy, as my master there should be something only you call me.\"\n\n\"Lots of people call you Shy?\"\n\nTom very much doubted that. Shyira was as beautiful as she was deadly. He couldn't imagine many would dare her wrath by acting so familiar with her.\n\n\"Well, a few people anyway,\" she said dismissively. \"Point is I'm yours and you should have something to call me.\"\n\n\"Why don't I call you Shy until I come up with something else to call you?\"\n\nShe pouted and gave him a look that said this conversation wasn't over. Given his track record with women, it wasn't an argument he expected to win.\n\n\"A Water Nymph,\" she said abruptly.\n\n\"A what?\" Tom said, the sudden change in conversation taking him by surprise.\n\nShe pulled away from Tom and walked back to the circle. \"That's what we'll summon,\" she said. \n\nWith no further explanation, she began to draw symbols in the space between the two circles. When she was finished she swept her eyes over the design, taking a moment to study it before turning to Tom.\n\n\"Now, the two rings may be essential for containment but it's the symbols found between the rings that do the bulk of the actual summoning.\"\n\nShe began to point to various symbols as she spoke, \"This symbol here designates the circle of Hell we're targeting, in this case, the circle of lust.\"\n\n\"This symbol here designates the time we want the ritual to affect.\"\n\n\"Time?\"\n\n\"Yes, although that's a highly advanced area of study. Say you wanted to summon a demon but didn't have the demon's 'true name' to direct the summoning. If you knew a specific time and space that the demon once occupied, you could direct the ritual to that spot. It's a bit imprecise and is prone to failure, but it can be an important summoning tool none the less.\"\n\n\"Do you have a true name?\"\n\n\"Of course, silly warlock,\" she said playfully, \"and before you ask you already know it.\"\n\nAt her words the image of a complex symbol popped into Tom's mind. He found himself speaking a name out loud; the complex, alien sounding words put any tongue twister to shame.\n\n\"How?\" he asked, confusion in his voice.\n\n\"I imprinted my name into your mind while you slept that night at the cabin. If you ever need to summon me directly you would put my name here,\" she pointed.\n\n\"You've been messing around with my mind?\"\n\n\"Yep.\"\n\nThat was a disturbing thought.\n\n\"Is there anything else I should know about?\"\n\nThat earned him a predatory smile, \"Plenty of things, I have plans for you baby warlock. I told you in the forest that you and I are going to do amazing things together.\"\n\nHe definitely didn't feel like a master at times like these.\n\nShyira finished filling in the last symbol and then motioned for him to join her.\n\n\"That should do it,\" she said confidently.\n\nHe stood there awkward for a moment before he asked, \"Do I need to raise my hands? Or recite a spell or something?\"\n\nShe rolled her eyes, \"If you want to use all of that nonsense you can.\"\n\n\"Oh, OK.\"\n\n\"As I said, summoning is all about metal concentration. You visualize the summoning circle in your mind and then you infuse the concept with power. It's all mental, all of the symbols, circles and spells are just there to help facilitate this process.\"\n\n\"So you're teaching me the hard way then.\"\n\n\"No, I'm teaching you the right way. Most of your kind just prefer to do it the lazy way. Now stop dragging your feet and give it a try.\"\n\nHe swept his eyes over the circle. He stopped and looked at each symbol, one by one. Closing his eyes, he started by visualizing the symbols in his mind. He started with their shape, and then there meaning, the concept behind the physical shape. He thought of what he wanted to summon or at least thought of something. He had no idea what he was summoning, having never seen a Water Nymph.\n\nWith the idea crystal in his mind he began to relax his muscles, one after another. When he was finished his body felt feather light and seemed to pulse in rhythm with his breathing. Shyira had ensured him that none of this was actually necessarily but that it helped focus the mind.\n\nI'm ready, he thought.\n\nHe imagined a key unlocking a heavy steel door in his mind. As the door hinged open, power began to leak out. It started as a trickle and then continued as an ever increasing flow of power. Tom couldn't tell if he was imagining it or if he could really feel the energy flowing over his nerve endings.\n\nTom renewed his focus on the image of the circle in his mind. He took the concept and imagined directing that current of energy towards it. His heart rate quickened, beads of sweat formed on his face. In that moment, nothing else existed but the image of the circle.\n\nWith a sudden release of air and a flash so bright, Tom could see it through his eye lids, the spell finished.\n\n\"Good job, baby warlock, you got it in one.\" He could hear the smile and pride in her voice.\n\nTom opened his eyes. The smell of ozone was heavy in the air. He looked over at the summoning circle as a wall of mist began to clear. The humidly level of the room had just jumped, as if he had opened a door to a marsh, cloaked in an early morning mist. Which was exactly what he had just done.\n\nStanding in the circle was a woman, dripping wet and topless. Her short skirt, made of seaweed, almost blended in with her dark green skin. Her hair stretched to mid back and was only slightly darker than her skin tone. Her eyes were a radioactive green, bright even in the dim light of the lecture hall.\n\n\"This is a Water Nym-\"\n\n\"What do we have here, but a fine strapping young warlock looking for a little fun,\" the Water Nymph said. \"I'm called Lilinara.\"\n\nTom wasn't sure interrupting Shyira was the smartest thing he'd seen someone do today.\n\nPretending to notice Shyira for the first time, Lilinara gave her the standard, up and down look of two women meeting for the first time.\n\n\"And it appears we have an audience for our fun tonight.\"\n\n\"Quiet whore, I'm speaking,\" Shyira barked, her eyes hard and glowing faintly with anger. \n\nShe waved her hand in the gesture of a slap. Tom could feel the touch of power put into the movement as the water nymph's head snapped to the side. \n\n\"I'll get to you in a minute.\"\n\nRemind me never to piss her off, he thought.\n\n\"As I was saying, before I was so rudely interrupted.\" She shot the now cowering woman a murderous look before turning a smile to him. The fire in her eyes dimmed, \"This is a Water Nymph, a lesser demon of lust.\"\n\n\"She's very green.\"\n\n\"They're aquatic creatures know to lure the young and stupid to a watery grave.\"\n\nDon't I qualify as young and stupid? he thought.\n\n\"Wait, I've heard of them before. I thought they were supposed to be harmless nature spirits.\"\n\n\"The occasional Greek would probably describe them that way, but they were the lucky ones. Most of the men who came across a Water Nymph didn't live long enough to regret it.\"\n\n\"Sounds perfect for a first summoning,\" he deadpanned.\n\n\"Oh, pish posh. You'll be fine.\"\n\nShe dismissed his concerns with a wave of her hand.\n\n\"The best pleasure can be found from fucking them in their natural habitat, but they're also at their most dangerous in the water, so I think we'll save that for the advance lessons.\"\n\nShe turned to Lilinara and gave her a hard look, \"This is a lesson plan, not a social call. You're allowed a taste and nothing more. You would do well not to cross me on this.\"\n\nLilinara nodded meekly, although her eyes still held a touch of defiance in them.\n\nTom hesitated. Was this really such a good idea? Shouldn't his summoning be something that wasn't dangerous? Shyira didn't give him any more time to voice his concerns.\n\n\"Well, get to it then,\" Shyira shoved him in back. He stumbled into the circle and into the waiting arms of Lilinara.\n\n\"Now we can have some real fun,\" she said, holding him to her chest in an iron grip.\n\nNow that he was close to her, Tom noticed something else about her. She had large gills running down the side of her neck. They flared in tune with her breathing, like a fish out of water. \n\nShe cast a look at the circle before giving him an innocent smile. \"Are you sure you can't do anything about this silly little containment circle? I can breathe through my gills and expel air out of my mouth. If you came home with me, we could fuck under water.\" She batted her eyelashes at him.\n\n\"Shyira said that would be dangerous.\"\n\n\"What's the point of life without a little danger?\" She winked at him. A milky film covered her eye a moment before her human eyelid closed.\n\n\"I think I'll pass.\" Tom glanced in Shyira's direction looking for help. He found her siting in the first row. Her wings were draped over the desks surrounding her, an amused expression on her face.\n\nLilinara turned his head until he was looking at her again. \"Forget about her, it's just you and me right now.\"\n\nShe leaned in and kissed him hard on the mouth. She tasted like fresh fish and pond water, a combination that tasted weirdly refreshing, like taking a dip in a healthy river on a hot summer day. She deepened the kiss, pushing her tongue into his mouth. His tongue was at the mercy of her slimy green appendage as she explored his mouth.\n\nTom started to pull away to take a breath of air. She held his head firmly in place. He tried again but Lilinara held him in a vice grip. Blood started pounding in his head as his need for oxygen increased. Panic soon followed as he grew dizzy.\n\nJust when Tom thought he was going to pass out, she blew into his mouth, filling his lungs with much needed air. She made eye contact with him as she did it, her point clear. She pulled back a second later and smiled at him.\n\n\"See, I wouldn't let you drown. Wouldn't fucking underwater be fun?\"\n\nYes, it would, he thought. \"There's no way in Hell I'm letting you out of this circle.\"\n\n\"Fine,\" she snipped. \"Then I suppose I'll just have to take my fill here.\"\n\nWith her attempts at escape thwarted, her demeanor turned aggressive. She pushed him to the ground and ripped his clothes off, one piece at a time. Play time was over.\n\nShe straddled his hips and wasted no time in plunging his cock into the dark depths of her pussy.\n\nThe feeling was different with Lilinara. They were standing in a deserted lecture hall but it still felt like they were fucking underwater. Her pussy had a strange wetness to it, like Tom was displacing water when thrusted into her.\n\nShe fucked him hard, with none of the gentleness Shyira showed towards him. Not that Shyira was ever gentle with him, but the tone of their sex was different. Lilinara fucked him like a piece of meat, like a lamb being led to slaughter.\n\nHe felt used.\n\nLilinara was using him and nothing more. The outcome was what mattered to her, not the intimacy of the act. He looked over at Shyira again. She looked pissed but made no move to help him. She gave him a \"figure it out\" look. No safe harbor there, he thought.\n\nHe could feel the suction of her pussy with every downward thrust, like she was trying to pump the cum out of him. The pressure on his balls was building in intensity with every passing second. He was close.\n\nTom tried to sit up and gain the leverage he needed to flip her over and roll out of the circle. That plan came to an end when Lilinara put a webbed hand on his chest and pushed him back down to the hard concrete floor.\n\nFuck, this was it. His heart was beating rapidly, like he was running for his life. Fitting he supposed, given the current situation. With one final downward motion it happened.\n\nTom's breath escaped him in one ragged exhale as he came. Cum shot out of him in a torrent as Lilinara pumped the cum out of his balls.\n\nThe flood gates had been opened and Tom was powerless to close them. He felt the familiar feeling of the power drain on his body. His muscles went numb, his vision narrowed, after a moment all he could see was the predatory face of Lilinara as she smiled down at him.\n\nThere was a loud crack and the smell of brimstone filled the air. Tom found himself alone, staring up from the ground. His vision slowly began to clear.\n\nLilinara was hovering several feet above him, her body perfectly ridged. Her limbs were pressed to her sides in a perfect posture of attention. Tom could see why her posture was so ridged. A thin sheet of ice covered her formerly wet body, entombing her in a shell of ice.",
        "Lilinara was the wrong type of demon to be fucking with Shyira, he thought.\n\n\"Are you OK baby warlock?\" Shyira said, a note of concern in her voice. \n\nHis chest was rising and falling to fast to form words, so he raised a thumbs up from his position on the floor.\n\nYou know, I've been spending too much time on my back lately.\n\nHe finally looked over at Shyira. Her eyes blazed with anger, her fists clenched at her sides.\n\n\"Stupid whore can't even follow simple instructions,\" Shyira said. \"I said a TASTE.\"\n\nLilinara flinched as Shyira shouted the last word. The green Nymph was shaking with fear. Or at least he thought she was shaking in fear, since most of her body was an ice cube at the moment.\n\nHe could hear the clicking of Shyira's high heel shoes as she walked over to him.\n\nShe breathed in and out several times, smoldering her anger before she looked at Tom.\n\n\"Not bad for a first time. Although, now that I think about it, maybe not the best choice for a first summoning. Water Nymphs can get a bit uppity.\" With a wave of her hand and a flash of light the summoning circle was once again empty.\n\n\"Why didn't you stop her sooner?\" He wheezed.\n\n\"Magical ability can be a fickle bitch. It can show up at the strangest of times. I wanted to see if you would manifest any new magical talents when faced with the possibility of death.\"\n\n\"Well, I didn't.\"\n\nSilence reigned in the room as Tom gradually regained his breathe and Shyira's anger slowly seeped out of her tense muscles. The whole time Shyira was looking at Tom. Tom didn't like the look she was giving him.\n\n\"Are you sure you're all right?\" Shyira asked.\n\n\"Ya, I'm good. No lasting damage.\"\n\n\"Good, because I've afraid we have a little problem.\"\n\nWith one hand she cupped one of her breasts, gently squeezing. The other hand ran down the length of her body until it was nestled between her legs.\n\n\"Your little show has left me all hot and bothered and I think it's time to see if you've learned any new tricks from that wet little whore.\"\n\nOh shit, he thought.\n\n\"But not here,\" she looked distastefully around the room, \"I may want your hard cock, but I have no desire to lay on a hard floor in order to get it. Not when we have a perfectly good bed to fuck on.\"\n\nWith no further warning, she reached down, grasped his hand and the world caved in on itself. A feeling like being plunged into an icy lake overcame Tom as Shyira dragged him into the shadows.\n\n****\n\nChange was in the air as Tom walked across campus. Bright sunlight shinned upon the patches of snow that still littered the ground. The seasons were shifting. The cold bite of frigid winter was beginning to give way to the softer embrace of Spring. The cool morning air held the promise of warmer days ahead and Shyira wasn't happy about it.\n\nTom on the other hand was ecstatic. As a being of the coldest parts of Hell, Shyira was impervious to the cold. She could walk naked through a blizzard and not feel an ounce of discomfort. The same could not be said of him and his fellow students. Trying to get the point across, that a bikini top and micro skirt were not appropriate winter clothes had been a losing proposition from the start.\n\n\"She's from Sweden,\" he would tell passersby's when they got weird looks.\n\nThey had finally settled on the use of a glamour around others. She was already hiding her demonic features using magic and now she was using it to appear to wear more clothing. Of course now that she didn't have to adhere to basic rules of decency, she had started wearing even fewer clothes around campus. \n\nIt's hard to walk around campus with a tent in your pants, Tom thought.\n\nHe was meeting her at the student union for a bite to eat before his next class. Not that he had a lot of time, since his next class was on the other side of campus and he had a lot of walking to do. Still, he got the feeling that he should be more aware of what Shyira got up too. She was a succubus after all. A succubus surrounded by young, horny college students. He would feel responsible if anything happened to one of his fellow students.\n\nHe entered the cafeteria of the student union after flashing his ID card to the bored girl sitting behind the register. The smell of pancakes filled the air. The quiet chatter of students and the scraping of utensils provided the necessary soundtrack of breakfast. Tom took a moment to look for Shyira. He needn't have bothered. Shyira spotted him immediately or maybe it was more accurate to say she sensed his presence.\n\n\"Over here Tom,\" she called in a sing-song voice.\n\nShyira's current form didn't look like a demon, more like the hottest girl in the sorority. Wavy ash blond hair and pale skin to go with the self-confidence of a cheerleader at the height of her game. You needn't have known about her true nature to know that she was the alpha female on campus. One look at her told you all you needed to know.\n\nIt shouldn't have surprised Tom that she was surrounded by a group of men, all vying for her attention. Every eye in the room seemed to be on her. The men bore holes in her, as if trying to undress her with their eyes. The women shot her glances made of pure disgust and jealousy. But no one saw her like Tom did.\n\nThe glamour she wove around herself prevented all but the magically gifted from seeing her true form. Tom could sense the magic shimmering around her, like heat coming off pavement on a hot summer day. If he tried hard enough, Tom could barely see through the glamour. Her demonic appendages were still there. Her leathery wings were folded behind her chair. Her pale horns jutted out of hair the color of fresh snow. Magic kept the mortals from seeing her and they unconsciously moved around her wings. This was the real Shyira, the succubus he was supposedly the master of.\n\nAs if, he thought.\n\nAt her call, every eye in the room seemed to turn on him as he weaved through the tables towards Shyira.\n\nThis was an entirely new experience for Tom. The weight of their looks was oppressive. He had never been the guy people stared at with envy. The guy with a beautiful woman hanging off his arm. Not that Shyira was hanging off his arm at the moment. If fact, as he was walking towards the table, Tom couldn't shake the feeling that he was somehow intruding, entering a world that wasn't his own. Like walking up to the cool kids' table at school. It filled him with a feeling of trepidation.\n\nWith all of those eyes on him, he of course chose that moment to trip on a chair leg jutting out into the walkway. He stumbled and only narrowly avoided falling flat on his face. A quiet chuckle reverberated around the room from the people watching him. A note of judgment could be heard in the tone of the laughter, as if their suspicions had just been confirmed. Shyira didn't join in, although he could see the amusement in her eyes.\n\nWell you don't stop being an awkward geek just because you get a hot girlfriend, Tom thought. \n\nAlthough girlfriend probably wasn't the right word. In truth, he didn't know what to call their relationship. And not in the cool, 'we don't like to use labels' kind of way, he literally didn't know how to classify their relationship. Girlfriend? They weren't exactly dating. Sex slave? Shyira was hardly the submissive, obedient type. So what then? A complication, he thought. Tom's life had gotten a lot more complicate and exciting of late.\n\nAmong Shyira's many admirers, one stood out above the rest, both in his proximity to her and his body language. The guy was a wall of lean, sculpted muscle, the kind of muscle meant for aesthetics over function. He was clothed in a striped tank top and cargo shorts, typical frat guy getup. This guy was a ladies' man. A guy used to getting what he wants. The look the guy was giving him told Tom that he was being sized up and that he hadn't left a terribly imposing impression.\n\nShyira stood and melted to his body. She gave him a big kiss, as if his clumsy display had never happened. That seemed to shut people up for the moment.\n\n\"Is this guy with you?\" Mr. douche bag asked.\n\n\"Oh, you could say were attached at the hip,\" she said with a mischievous smile. She stepped away from Tom, \"Tom, this is Biff.\"\n\n\"Sup, bro.\" Biff said.\n\n\"H-hey man,\" Tom replied sheepishly.\n\nWhat the hell kind of name is Biff? Tom thought.\n\nOn the surface Biff was all smiles, but it was clear he didn't want Tom there and was making every effort to control the situation.\n\n\"Biff walked up and tried to use the corniest pick up line on me,\" Shyira said.\n\n\"Hey babe, my one liners are pure gold.\"\n\n\"Sure they are,\" she rolled her eyes and laughed.\n\nTom was seriously out of his element. He didn't know how to respond in this situation. He was also out of time, he needed to get to class. \n\n\"Will I see you after class?\" Tom asked.\n\nShyira winced, \"No, sorry, something kind of important came up.\" She shot a quick glance at Biff, before making eye contact with Tom, like she was trying to tell him something.\n\n\"U-um,\" he said, suddenly unsure of himself, \"Are we still on for tonight?\"\n\n\"Of course,\" she smiled at him, \"I wouldn't miss it for the world.\"\n\nThey were supposed to meet for his first summoning lesson tonight. Something he had been looking forward to all week. The look Biff gave Tom said he had no intention of allowing that meeting to happen.\n\n\"Oh, OK,\" he said looking down at the floor.\n\n\"Hey,\" she said softly, rubbing his hand, \"don't worry.\" The look of genuine regret in her eyes flew right over Tom's head.\n\nHow could she say that when she was abandoning him for another guy? Tom thought.\n\nBiff got up from the table and draped an arms around Shyira's shoulders, flashing him a cocky smile. \"Ya bro, don't worry. I'll look after your girl for you.\"\n\nTom was irritated by the whole situation but swallowed his comeback. This wasn't the first time he had been upstaged by a popular guy and he really did need to leave.\n\n\"See you tonight.\" She winked at him.\n\nHe took one more look at the triumphant look on Biff's face before he turned and left the table.\n\n****\n\nTom dropped from three feet up onto the bed in his room. Shyira landed next to him a second later, laughing.\n\nI hate gate magic, he thought. \n\nHe hated her gate magic worst of all. A demon's magic had a direct connection to the circle of Hell they inhabited. Shyira was from the deepest, most frigid corner of Hell. Gating using her magic felt like being pulled through the water underneath a glacier. Sure you got to your destination but the experience was far from pleasant.\n\nShyira swung her body over his. Her clothes, little more than constructs of her magic, had vanished. Her wings, spread wide, almost touched the walls of his small room. Her lithe form, silhouetted against the moon light streaming through the window, cast a large shadow on the wall of the dim room.\n\nTom groaned. Partly from looking at the vision of femininity on top of him and partly because her teacher's outfit was gone.\n\n\"Oh, do we have some complaint?\"\n\n\"No,\" he lied.\n\n\"If you have something to say, say it.\"\n\n\"Keep the glasses,\" he said after a moment.\n\nShyira smiled at that. With a brief flash of flame and the faint smell of brimstone the petite, black framed glasses reappeared at the end of her nose.\n\n\"Better?\"\n\n\"Yes\"\n\n\"Good. This relationship may be symbiotic but it's not equal. I want to please you and on that note I'm going to do just that.\"\n\nShe wrapped her hand around his balls and gently squeezed. A looked passed over her face and her eyes pulsed briefly with anger.\n\n\"I knew it, she took too much out of you,\" she said, her tail flicked with irritation. \"I'm going to have to pay that bitch a visit later.\"\n\nShyira seemed to ponder something a moment before she suddenly thrust her head forward and sank sharp fangs into his neck.\n\n\"Ow!\"\n\nA sharp pain radiated trough is neck. It felt like his nerve endings were on fire. His attempts to push her off only made her sink her fangs in deeper. Shyira held onto his neck for several seconds before withdrawing, her chin covered in his blood. The pain subsided a moment later as the skin around the puncture holes went numb.\n\n\"That's better,\" she said. Tom felt it a moment later as blood came rushing to his lower extremities. He had an almost painful erection.\n\n\"You bit me! What the hell was that?\"\n\n\"You needed a boost,\" she said after a moment. She seemed to be out of breath, her ample breasts rising and falling rapidly. \"That little bitch took a lot out of you, it would have taken a while for you to recover and I'm not a patient girl.\"\n\n\"Couldn't you have just given me more of that perfumed smoke like at the cabin?\"\n\n\"That's only a stimulant, effective but it still draws from your personal reserves. I needed to replace what she took from you. So I injected you with some of my power. Besides, I have a little extra to spare today.\"\n\nShyira beamed at him but Tom's eyes clouded over at the thought of why she might have extra power to give.\n\n\"Hey.\" She tapped the side of his head, \"it's unwise to ignore the naked succubus sitting on your chest.\"\n\n\"Sorry, my mind was elsewhere for a moment.\"\n\n\"Tom,\" she said patently. \"where are we?\"\n\n\"Um, my bedroom.\"\n\n\"That's right and when you look at me what do you see?\"\n\n\"A succubus.\"\n\n\"Whose succubus?\"\n\n\"Mine,\" he said after a moment.\n\n\"That's right, I'm your succubus, in your bed. Don't think about unnecessarily things,\" she said, rubbing his chest, \"get your head in the game.\"\n\nWith that she removed herself from Tom. She leaned back until her head was on the other side of the bed, propped up against the foot board. Looking back at him, she spread her legs and waited, as if inviting him to partake in feminine delights.\n\nTom's angle on the bed produced a very lewd image. Tom could see past his ragging erection to where Shyira's legs were spread. Her pussy and his cock seemed to be lined up, perfectly centered with each other. Like a drawn arrow and a bullseye.\n\nTom crawled in between her legs, intent on tasting her.\n\n\"No,\" she put one finger on his forehead and pushed him away from her glistening pussy. \"You've teased me enough for one night. I can't tell you how much I wanted to jump into the summoning circle and help you teach that little whore some manners.\"\n\nShe was in no mood for games tonight but she still made no move to take the lead. Normally, Tom would be on his back already, doing his best not to wake the neighbors. Tonight Shyira was acting demurer, almost submissive.\n\nTom positioned the head of his cock at the entrance to her pussy. Shyira made no attempt to move. She just stared at him, like a teacher watching over a favorite pupil. Her black rimmed glass certainly added to the look. Tom hesitated. This wasn't like Shyira at all\u2014she wasn't known for letting him take the initiative.\n\n\"No foreplay tonight baby, take me,\" she whispered.\n\nWith that he thrust inside of her. He got about half of his length inside her glistening pussy before stopping. Shyira wasn't having any of it. She wrapped her legs around his hips and pulled him the rest of the way, until he was balls deep inside her. They both gasped and paused to bask in the moment. They stared into each other's eyes, one human and one demonic, glowing faintly with lust.\n\nTom began to gently rock his hips back and forth. Short thrusts that gradually turned longer and harder as he began to fuck her. They kissed passionately as they settled into a rhythm, her inhuman tongue wrapping around his own. The kiss was amazing, even with the taste of his own blood fresh on her lips.\n\nTom wasn't sure what kind of game she was playing and she was playing a game, this he had no doubt about. She was certainly being very submissive to him. Until she wasn't, Shyira raked her clawed fingers against his back, drawing blood and hiss of pain from Tom.\n\nHe briefly pulled out before flipping her over onto her hands and knees. He wasted no time in grabbing her hips and driving back into her.\n\nAfter a few thrusts to get back into rhythm he grabbed a hold of one of her horns. Her back arched as he pulled back. It allowed him to gain the leverage he needed to change the angle of his thrust.\n\nShyira's mouth was open, panting as Tom fucked her. Her inhumanly long tongue hung loosely from her mouth, swaying back and forth with every thrust\n\nHer tail, meanwhile, swayed in front of his face. It tickled his nose and distracted him. It irritated Tom to no end. Shyira always teased him but she seemed to be going out of her way tonight.\n\nTom reached up and grabbed her trail, earning him a squeak from Shyira.\n\n\"Gentle baby, the tail of a succubus is very sensitive.\"\n\nSex with Shyira had gotten a lot less terrifying once he figured out she wasn't trying to kill him, at least most of the time. But she was still treating him like a kid. Wasn't he supposed to be her master? Wasn't she supposed to obey him? \n\nIt kind of pissed him off.\n\nSo Tom squeezed Shyira's tail harder. Shyira yelped before she turned her head and flashed him a knowing smile. \n\nShe didn't seem angry at him at all, odd.\n\nThey changed positions again, with Shyira now flat on her back.\n\nTom fucked her pussy with wild abandon. The infusion of her energy into him was really having an effect on him. He felt alive and in control, like he was on top of the world. He fucked Shyira like he owned her.\n\nWhich I kind of do, he thought.\n\nShyira was staring into his eyes with a look of pleasure and victory on her face, as if everything was going according to plan.\n\nShe clutched the sheets with her clawed hands and threw her head back in pleasure. Her horns shredded the sheets as she thrashed her head back and forth.\n\nShe still had a lot to teach him, centuries worth of accumulated knowledge of the ways of pleasure but Tom was proving to be a fast learner.\n\nShyira's behavior was so atypical for the demonic seductress that Tom felt off balance. Feeling a bit drunk with power at her submissive display, he reached down and bit down on one of her breasts. A small bit of payback for earlier.\n\nShyira moaned, riding the edge between pleasure and pain.\n\nTom could feel it; he was close. That was always a dubious proposition with Shyira but tonight he felt more in charge.\n\nEvery muscle in his body tensed as he thrusted his hips forward and unleashed a torrent of cum into Shyira's waiting pussy. \n\nShe wrapped her wings around him and crushed him to her body as her own orgasm washed over her.\n\n\"Master!\" She screamed.\n\nTom collapsed on top of Shyira. His weight pushed her into the mattress, his orgasm having robbed him of the last of his strength. She continued to hold him to her body, making no move push him off. They laid there, panting for a minute, their bodies like one.\n\n\"Is the lesson over?\" Tom breathed.\n\n\"Yes. Both of them.\"\n\nTom was too exhausted to consider what that meant, instead his head fell onto the pillowy softness of her breasts. He was lost in a deep, dreamless sleep almost immediately.\n\n****\n\nTom awoke first.\n\nLight streamed through the window, showing the cluttered space around him. The room of a college student was a small, cramped space. All of ones' earthly possessions crammed into a relativity small area. It could get incredible stuffy when closed up for any length of time. The room was hot, it smelt of sex and something else, something foul. Looking around, Tom saw the source of the smell.\n\nThe room was dark the night before. It obscured the presence of the room's third occupant. Even through their marathon fucking Tom had never noticed him.\n\nIn the corner of the room lay the shriveled, dried up husk of a man, barely recognizable as human. His mouth was open in an eternal scream. Although, if Tom's suspicions were right, it wasn't a scream but the final moan of pleasure of a man seconds from death. Tom knew who it was immediately, the douche bag from the cafeteria. His cargo shorts and striped tank top, thrown unceremoniously on top of the body, were a dead giveaway.",
        "Shyira was awake and was watching his reaction as he looked over the body, a curious and hesitant expression on her face. She gave him the smallest of smiles when he looked over at her.\n\n\"I told you not to worry. You didn't really think I would choose that oaf over you, did you?\"\n\n\"I thought...\" He trailed off as he thought over the scene in the cafeteria.\n\n\"Oh, my stupid, baby warlock,\" she snuggled into his side, \"we really do need to work on your self-confidence.\"\n\n\"You did this for me?\"\n\n\"Obviously...\"\n\nShe gave him a \"duh\" look.\n\n\"Why?\"\n\n\"If he was like the other men throwing themselves at my feet I could have just ignored him. But one look at him and I knew I couldn't ignore him. Biff was the type of man used to getting what he wants. He would never have accepted rejection; his ego wouldn't allow it. He wanted me and I couldn't be sure he wouldn't go after you to do it.\"\n\n\"So that was a reason to kill him?\n\n\"Yes,\" she said, rather matter-of-factly. \"I would do a lot more than kill to protect you.\" \n\nThere wasn't an iota of warmth in that statement and Tom knew she meant every word.\n\n\"Besides,\" she said, her voice brightening, \"see how hella good I am at multitasking. I removed a potential threat to you and had a midday snack all in one go.\"\n\nTom wasn't sure what he thought about that. He looked back at Shyira who seemed to have completely dismissed the corpse in the room.\n\n\"So how did you like your first summoning lesson?\"\n\nTom snorted, \"we at least made it to the bed this time.\"\n\nShyira giggled, \"I told you we would rectify that problem.\"\n\n\"Things did get a little rough.\" Tom trailed off, lost in thought.\n\n\"Hey,\" she turned his head until she could gaze into his eyes. \"You and I can play with who's the sub in bed but at the end of the day never hesitate to take what's yours. Throw me up against a wall and fuck my brains out, bend me over a table and take my ass, use me for your pleasure and give nothing in return. It's your right as my master. There can be only one servant in this relationship.\"\n\nHe didn't see that happening anytime soon. The look she was giving him begged to differ.\n\nTom stole another glance at the shell of a man in the corner.\n\n\"So I guess he won't be the last then?\" He said quietly.\n\nShyira shrugged.\n\n\"Call it a first step in marking my territory in this city.\"\n\n****\n\nIt was a week later that Tom and Shyira found themselves walking through downtown. The downtown area was just within walking distance of campus and was a big draw for university students looking for some fun. Shyira enjoyed an ice cream cone as they walked. She received more than a few stares for her attire and choice of snack on the cold morning. \n\nThey had just turned the corner when the giant glass walls of the building in front of them came into view. Shyira stopped walking. She stared at the building as a look of intense interest passed over her face. Tom walked a few more paces before turning to look at her.\n\n\"Shy,\" he said. \"See something interesting?\"\n\n\"That building is pretty close to campus,\" she said.\n\nTom didn't catch the matter of fact way she said it or the cold, emotionless inflection of her voice.\n\n\"Emerald Meadows Botanical Garden\" towered over the smaller shops and bars around it. The city was known for its botanical garden; it was one of the largest in the country and brought in a great deal of tourists. From this distance Tom could just make out the lush tropical plants on the other side of the glass.\n\n\"Do you want to go in? I think I get a student discount.\"\n\nTom could have sworn he saw movement on the other side of the glass. He got the feeling that they were being watched. He could have sworn he heard the faint sound of laughter being carried by the wind. A shiver ran down his spine.\n\n\"No.\"\n\nShe pivoted on the balls of her feet as she turned, her hands clasped behind her back. Her blond hair blew gently in the breeze as she flashed him a brilliant smile that didn't quite reach her eyes. \n\n\"Those little sluts will need to be dealt with at some point, but that's a project for another day.\"\n\n****\n\nSo here we are again, with chapter 2 of my little story. Thank you all of reading it. Hopefully you enjoyed it as much as I enjoyed writing it. I'm pretty sure I pulled a Peter Jackson and ended this chapter like three times. Oh well, moving on. There will be a chapter 3 at some point, I just can't tell you when, but I'll try not to have too long of a wait.\n\nBig thanks to mbrow for his patience and effort editing this story. He really went above and beyond on this one.\n\nI love feedback and constructive criticism. So rate it and let me know what you think. "
    ],
    "authorname": "NightPorter",
    "tags": [
        "succubus",
        "demon",
        "university",
        "snow",
        "geek",
        "nerd",
        "warlock",
        "succubi",
        "wizard",
        "summoning"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/falling-snow-ch-02"
}