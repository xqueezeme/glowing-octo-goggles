{
    "title": "Trailer Trash Ch. 02",
    "pages": [
        "Note from Slick: A lot of you enjoyed the \"TOMBOY\" series and have asked for me to write another story that included sports and some romance. This chapter continues to go slow so if you are looking for instant sex go elsewhere. Please read \"TRAILER TRASH CH. 01\" before starting this chapter. All rights reserved.\n\n*\n\n\"He's still there,\" Maggie whispered twenty minutes later while peeking out the small door window. She turned to look at the clock. \"You dad should be home by now.\" He was forty minutes late. \n\n\"Maybe I should go and talk to him?\" Emily said. \"He really wasn't the one who called me Trailer Trash.\" \n\nMaggie smiled because she knew Emily really liked him. \"Maybe you should.\" \n\nBrandon was nervous waiting for Emily's father but he felt it was the only way to let them both know his feelings. He heard the door open and turned expecting to see Maggie but saw Emily instead. \"Emily.\" \n\nEmily closed the door and sat down next to him. \"So welcome to my Trailer.\" \n\n\"Emily I don't care where you live or what you live in,\" Brandon said turning to face her. \"Bud was just joking and being a jerk.\" He reached over and took her hand in his but they didn't talk for over a minute. Suddenly the door opened and Maggie ran out. \n\n\"Emily...the hospital is on the phone! Your dad had an accident!\" \n\n\"OH GOD!\" Emily cried as she stood and ran inside. Brandon and Emily ran in behind her. She listened on the phone before hanging up. \"Will you drive me to the hospital?\" She asked Brandon. \n\n\"Yes of course,\" Brandon said. \n\n\"I'll go tell my parents,\" Maggie said. \"We will meet you at the hospital.\" She took off down the dirt road. \n\n\"Come in I need to get changed,\" Emily said to Brandon. She ran into the door and down the narrow hallway to her bedroom. \n\nBrandon moved inside and surveyed the inside of a mobile home for the first time. It was quite small but very clean and modern. A large TV sat on the one side of the living area that was positioned at the front of the trailer. He stood in the kitchen and peeked down the hallway at Emily's doorway. She leaned her face out. \"You can come back here if you want.\" \n\nBrandon moved down the hall and into her doorway. He froze when he saw her only wearing panties and a bra. \n\n\"Don't act as if you've never seen me like this before,\" she said as she pulled on a tee shirt and her jeans. After slipping on her new running shoes she moved up to him and lightly kissed him. \"I've missed you.\" \n\n\"Me too,\" he smiled as he pulled her softness into his hard body. \"We...uh...better get to the hospital.\" \n\n\"Oh God I hope my Dad is OK,\" Emily said with tears falling from her red eyes. \n\n\"He will be,\" Brandon said to comfort her but really didn't know for sure. She took his hand and led him out to his car. They sped down the dirt road to the blacktop road by the school and then up the hill. Fifteen minutes later he parked the car by the small hospital and they ran to the front desk. \n\n\"My daddy is here. He was in an accident,\" Emily said to the young black woman behind the desk. \"His name is Jim Miller.\" \n\nThe girl glanced down the list of patients on her computer monitor. \"He's still in surgery. There's a waiting room down that hallway. Go as far as you can and make a right.\" \n\n\"Thank you,\" Emily said clutching Brandon's hand tightly. \"Oh God he's in surgery.\" They ran down the hallway and found the waiting area that was empty. She peeked through a door window and saw a nurse standing by the doorway. She pushed it open. \"Will you help me?\" \n\n\"Maybe...how can I help?\" \n\n\"My daddy had a vehicle accident and is in surgery. I need to know how serious it is. His name is Jim Miller.\" \n\n\"Let me see what I can find out. Please have a seat in the waiting room.\" She turned and moved down the hallway. \n\nEmily moved back into the waiting room and hugged Brandon. \"Thank you for bringing me here.\" More tears flowed from her baby blue eyes. He wiped them off and gently kissed her forehead. \n\nA few minutes later the door opened and the nurse walked out. \"He has a head injury and a broken leg. I'm not sure how serious they are. I'm sorry I can't be of more help. Someone will let you know as soon as they can.\" \n\nAfter she left Brandon led her to the small sofa and they sat down. His strong arms held her close while she still gripped his hand tightly. \"Do you want to call anyone?\" Brandon asked. He knew she did not have her cell phone. \n\nEmily thought of her mother. \"No...Maggie will tell Aunt May.\" More tears flowed from her eyes and Brandon hugged and lightly kissed her again. He prayed her father was OK. A few minutes later his cell phone rang and it was his mother. \n\n\"I'm at the hospital. Emily's dad was in an accident. I'm with her now,\" he whispered. \"We don't know how bad it is yet.\" About that time Maggie and her mother ran into the waiting area. \n\n\"How's Uncle Jim?\" Maggie asked. \n\n\"We don't know how bad it is. He has a head injury and a broken leg.\" Brandon answered. He stood up and reached out to shake Maggie's mother's hand. \"Hi...I'm Brandon.\" \n\n\"I've heard about you,\" Sally Miller said. \"Thank you for bringing Emily down here and staying with her.\" She sat down on the other side of Emily and hugged her. \"Don't worry he will be OK.\" \n\nTen minutes pasted that seemed like an hour when they heard someone else walking down towards the waiting area. Emily glanced up to see her mother. \n\n\"Emily.\" Janet Miller had not seen her daughter in about five months and was shocked to see how much she had grown and developed. \n\nEmily didn't acknowledge her but instead stood and moved past her to go the restroom. Maggie ran to join her. \n\n\"How is he?\" Janet asked her sister-in-law. \n\n\"We are not sure. They told Emily he has a head injury and a broken leg,\" Sally answered. \n\n\"Thank you for calling me.\" \n\nShe looked at Brandon. \"Are you Emily's friend?\" \n\n\"Yes Ma'am,\" Brandon answered. He could see just from this woman's appearance that she was Emily's mother. \n\n\"He's her boyfriend,\" Sally smiled. \n\n\"Really?\" Janet said checking out his handsome appearance. \"I didn't know she had one.\" \n\n\"I like your daughter very much,\" Brandon said. \n\n\"I guess we are both the same in that respect,\" Janet said sitting down. \"Except she likes you back.\" \n\nA well-dressed woman walked up to them. \"Hello I'm Mrs. Anderson. Which one of you is the wife of Mr. Miller?\" \n\n\"I am,\" Janet answered. \"We are not living together but officially we are still married.\" \n\n\"I'm afraid we have a problem with his medical insurance. It seems he does not have the extra coverage for a hospital stay and most of the surgery.\" \n\n\"Well what does it cover?\" Janet asked shaking her head. \n\n\"Just the doctor's care and medicine,\" the woman answered. \"We will need some assurance that the costs will be covered.\" \n\n\"Or what? You will stop the surgery?\" Janet snapped back. \"My husband may be fighting for his life in there and you are asking me about paying his bills. I think you better get out of my face right now!\" \n\nThe woman took a few steps back and then hurried back down the hallway. \n\n\"Good job Janet,\" Sally smiled. \"You acted like you still love him.\" \n\n\"I do,\" Janet answered. \"I always have.\" She glanced at Brandon who had set back from the fireworks. \"Sorry you had to hear that.\" \n\n\"That's OK. I'm glad you gave it to her.\" Brandon saw Emily peek around the corner and motion to him. \"I'll be right back.\" He moved down the hallway and met up with her and Maggie. \n\n\"What happened?\" Emily asked. \"I heard my mother yelling.\" \n\nBrandon grinned. \"She just chewed out a woman who wanted to get your father's bills paid. She said he didn't have insurance for most of the costs.\" \n\n\"Oh no...really?\" Emily said. \n\nBrandon realized he shouldn't have told her. \"Don't worry.\" He hugged her into him again as Maggie walked back to the waiting room. \"She did say something you should hear.\" \n\n\"I don't want to hear anything she said.\" \n\n\"She said she still loves your father and always has.\" \n\n\"Really?\" Emily asked as she looked up into his eyes. As they hugged another person walked up to them. Brandon turned and saw his mother. \n\n\"Mom.\" \n\nEmily moved away and looked at the well dressed woman. She wiped away another tear. \n\n\"So this is the girl I've been hearing so much about.\" Sylvia smiled. She moved over to Emily and hugged her into her body. \"How is your father doing?\" \n\n\"We...don't know,\" Emily said trying not to cry. \"I'm very happy to meet you.\" \n\n\"Me too dear. I know a few people that work here. Let me go and find out as much as I can.\" She released Emily and smiled at her son before turning around and moving back into the lobby. \n\n\"She's nice,\" Emily whispered. \"Let's go and wait in the waiting area.\" They held hands as they moved down the hall. \n\nEmily continued to avoid her mother as they all sat around not knowing what to say. Finally Sylvia and a well dressed man walked into the area. \n\n\"Hello I'm Paul Arnold the hospital president. I've checked on the condition of Mr. Miller and he is out of immediate danger but is still in serious condition. We had to relieve the pressure on his brain from the concussion but he is now awake and wants to see his daughter. It will just be for a few minutes.\" \n\nEmily stood with a big smile. \"Can I bring someone with me?\" \n\n\"Sure but only for a few minutes.\" \n\nEmily turned and looked at Brandon. \"Will you go with me?\" \n\n\"Sure,\" Brandon said looking at the rest of the family. \"I don't want to upset him though.\" \n\n\"He won't be,\" Emily smiled. She squeezed his hand and they followed the hospital president. \n\nSylvia sat down next to Emily's mother. \"Hello Janet.\" \n\n\"Sylvia.\" Janet said recognizing her long lost college sorority sister. \"Do you work here?\" \n\n\"No...Brandon is my son and now I realized Emily is your daughter. I didn't place the Miller name.\" \n\n\"Oh my God,\" Janet said. \"I'm sorry I should have returned your letters.\" \n\n\"That's OK. But I would like to know what's going on.\" Sylvia knew that Janet's parents were very wealthy but didn't understand why Emily lived in a trailer. \n\nFor the next five minutes Janet told her about Jim losing his job and how he forced her away because he could not take care of her and Emily. Then how she had moved in with another man that she worked with however that man was gay and that she had not been with another man except for Jim. \n\n\"But why didn't you ask your parents for help?\" Sylvia asked. \n\n\"I have not talked to my parents since my wedding to Jim. They have tried to let me see Emily but I have refused.\" \n\n\"Can I help any?\" Sylvia asked. \"It looks like there are some medical bills that need to be paid.\" \n\n\"Let me think about it,\" Janet said smiling. \"I don't want to mess up Emily with your son. Have you seen the way they look at each other?\" \n\n\"Yes. And he's told me how much he cares for her and I don't blame him,\" Sylvia smiled. \n\n*****\n\nJim Miller was still groggy from the pain medication and sedative. He felt someone squeezing his hand and opened his eyes to see his beautiful daughter's face. \n\n\"Hi Daddy,\" she said. \n\n\"Em...i...ly,\" he mumbled. \"I'm glad ... you...are here.\" \n\n\"Me too,\" she said feeling more tears fall from her red cheeks. \n\nJim glanced over her head at the familiar face of the boy he had to run off. \"I see you two have made up.\" He forced a grin. \n\n\"Yes...daddy this is Brandon,\" she said wiping the tears of joy away. She moved back as Brandon's hand moved to his. \n\n\"Hello sir,\" Brandon smiled. \n\nJim felt his strong grip. \"I'm not too weak to kick your ass if you mess with my daughter again,\" he grinned. \n\n\"Believe me I won't,\" Brandon laughed. \"I care a lot for your daughter.\" \n\n\"Good. Now you two get out of here and let me rest,\" he smiled when Emily's soft lips pressed against his cheek. \"I love you baby.\" \n\n\"Me too Daddy.\" \n\n*****\n\nJanet told Sylvia about how her daughter had blamed her for the separation and how she had not said anything about the problems her father had after he lost his job. \"I had to get away or it would have gotten worse,\" she told her old friend. \n\nEmily and Brandon walked back into the waiting area and saw their mothers talking. \n\n\"Brandon. Janet was my sorority sister in college,\" Sylvia said noting the surprise on Emily's face. \n\n\"Wow,\" Brandon said. \"I don't believe it that you two were friends.\" \n\n\"We can't believe that you two are...dating,\" Sylvia grinned. \n\nEmily forced a smile but then moved over to sit next to her aunt and Maggie. \"He talked to us but he is still sedated.\" \n\n\"The doctor stopped by and said he will be OK but will take some time to heal,\" Aunt Sally said. \n\n\"What about the bills?\" Emily whispered not wanting her mother to be involved. \n\nBut Janet overheard her. \"Don't worry about the bills.\" \n\n\"I don't want you paying our bills,\" Emily snapped. She stood and walked out to the lobby. \n\n\"Janet she needs to know,\" Sylvia whispered. \n\n\"She won't believe me,\" Janet said feeling her eyes getting teary. \n\n*****\n\n\"Hey...are you alright?\" Brandon asked as he walked up to her. \n\n\"Yes...my daddy will make it and...I'm with you,\" she smiled. \"I don't know what I would have done if you hadn't been here.\" She moved her lips up to his and lightly frenched across his lower lip. \"I've been miserable the past few days.\" \n\n\"Me too,\" he whispered as he rubbed her back. Now that her father was OK they were so happy to be back together again. \"I wish we were alone.\" \n\n\"Me too,\" she whispered while pushing her thigh between his and feeling his manhood. \"Maybe you can drive me home tonight.\" \n\n\"But your Mom...\" \n\n\"I'm not going to her place,\" she said firmly. \n\nHis pants were expanding as he imagined them being alone. \"It's OK with me.\" \n\n***** As they walked back to the waiting area they passed Sally and Maggie. \"Do you want to come home with us?\" Her aunt asked. \n\n\"No thanks. Brandon will take me home,\" Emily said smiling at Maggie. They moved down the hallway. \n\n\"The doctor said there is not much else we can do tonight,\" Janet said to her daughter when she returned. \"Do you want to come by my place?\" \n\n\"No,\" Emily snapped back. \"I'm old enough to stay alone.\" \n\n\"You can stay by us if you want,\" Sylvia injected. \n\n\"I'd rather stay at my ... house,\" she said not wanting to say the word trailer to Brandon's mother. \n\n\"Well you are always welcome,\" Sylvia said as she hugged the girl to her. \"Don't stay out too late,\" she directed at Brandon as she gave him a hug. \n\n\"I...uh...need to go to the restroom,\" Brandon said knowing Emily needed to talk to her mother. He moved away and Emily started walking away as well. \n\n\"Emily please...we need to talk,\" Janet said hoping her daughter would turn around. She did. \n\n\"Thanks for coming out,\" Emily said coldly. \"I mean you really didn't have to.\" \n\nJanet moved up to her daughter. \"The hardest thing I've ever done in my life was leaving you.\" Her lips were quivering as she continued. \"I love you more than anything else in this world but I had to get away from your father. Please forgive me.\" \n\n\"I can't,\" Emily said feeling both angry and sad. \"Why did you have to leave me...us?\" \n\n\"Honey...when your father lost his job he got so depressed and took it out mostly on me. He never hit me or yelled but he stopped talking to me. I tried everything even...I even offered to call my parents for help. I'm sorry I lied to you about them.\" \n\n\"I have grandparents and you hid them from me,\" Emily glared. \n\n\"I know...I was wrong because you had the right to meet them and know them. I made some mistakes but please forgive me.\" Tears rolled down her cheeks until she wiped them away. \n\n\"I can't,\" Emily said as she pulled away from her mother's hand and walked swiftly down to the restroom. When Brandon walked out she grabbed his arm. \"Please take me home.\" \n\n*****\n\nThe trailer was dark when he pulled up to it. She took his hand and led him inside. \"I never thought I'd be alone with you in here,\" she whispered as she turned on a small light by the sofa and pulled him down on top of her. \n\nBrandon welcomed her lips and her tongue and later gave her his. He felt her small hands move up under the back of his tee shirt and roam over his bare flesh. Her legs opened wide and allowed him between them until his hard bulge pushed into her covered crotch. \n\nBoth were breathing heavily while their tongue twisted together and her hands moved down under his jeans and boxers to feel his hard naked buttocks. \"You have a nice ass,\" she giggled when she pulled her lips from his and then nibbled on his earlobe. \"I've wanted to do this for a long time.\" She squeezed and caressed. \n\n\"You're driving me crazy,\" he moaned as her tongue licked under his chin and down to the base of his neck. His hips were now slowly pushing in and out of her opened thighs. He held back not wanting to go too fast but it was her aggressiveness that took them to the next level. \n\nEmily giggled as she moved her hands from under his jeans and then under his stomach to release the snap. A few seconds later her fingers searched under his underwear until they found his hard cock. \"I think it missed me too,\" she giggled as she stroked him. \n\n\"It did,\" he laughed. His hands moved down and pushed his jeans down to mid-thigh which now allowed her to explore his balls and all of his length. \"I did.\" He reached down to unsnap her jeans and then pushed them and her panties downward to match his clothing. When he released them and lowered his body downward the tip of his cock pressed into her golden forest. \n\nEmily knew her jeans and panties restricted him from entering her so she sighed feeling a man's penis against her sex for the first time. She pulled his mouth back down to hers again and gave him one of her hottest and wettest kisses. Again his hips went into a fucking motion but this time no clothing prevented his cock head from rubbing against her swollen clitty. \n\n\"God I want you,\" Brandon moaned while trying to push off her jeans and panties but she grabbed his hands. \n\n\"Slow down,\" she whispered while pulling his hands up to cup her covered titties. \"Take off my shirt and bra.\" \n\nBrandon didn't need to be told again so when her body rose up he pulled off her shirt and reached behind her to release the bra clasp. When it moved away he lowered his lips to suckle her right nipple. \n\n\"Ohhh,\" Emily moaned. He moved from breast to breast and soon had her body twisting back and forth. Plus his penis was causing some serious heat buildup down below. Suddenly she jerked his head up from her boobs. \"We have to slow down!\" \n\nBrandon sighed and his right knee slipped down off the edge of the sofa causing him to fall onto his back with her now on top of him. \n\n\"Good now I'm in control,\" she whispered as she moved onto her knees and pulled off his jeans and boxers. Her fingers found his raised staff again and slowly stroked it. \"When Missy came over what did she do to you?\" \n\n\"We shouldn't take about Mis...\" \n\nEmily squeezed his shaft hard. \"What did she do?\" \n\n\"Ahhh...she touched me and let me touch her and then she...she put her mouth on me.\" \n\nEmily had read about oral sex and heard the others talk about blow jobs but really had no idea what to do. \"Did she kiss it first?\" \n\n\"No...\" he moaned as she placed tiny little kisses around the swollen crown and then onto the tiny hole. \n\nShe giggled when he heard his moan and then nibbled on the raised ridge that circled the tip. \n\n\"Jesus,\" Brandon gasped while looking down at her beautiful lips nibbling on his hard cock. \n\nEmily knew it was trial and error so she pushed out her tongue and slowly licked around the pre-cum drops. While holding it to the side her tongue traced down the top side and then came up the lower side. He moaned again which caused her to do it again and then once more. \"I'm getting close,\" he warned when her mouth open and moved to the ridge and then her lips pulled together picking up the pre-cum. ",
        "\"I shouldn't do this,\" she giggled. \"I mean you've heard the rumor about Creeker girls giving blow jobs. Should I stop?\" She teased. \n\n\"OH NO PLEASE...DON'T STOP!\" He said loudly. \n\nHer lips once again opened and her mouth moved over the crown until about four inches was inside. Her cheeks bellowed outward as she looked up into his eyes. \n\n\"Ohhhh,\" he moaned trying to hold back the dam from bursting. \n\n\"Am I doing OK? She whispered. \n\n\"Yes...oh...yes!\" \n\n\"Are you ever going to talk to Missy again?\" Her tongue licked and flicked at the tiny hole. \n\n\"NO NEVER!\" \n\nShe smiled and opened her mouth as far as it would go before sliding her lips down...down...and down his pink lollipop. \n\n\"I'M GOING TO...CUM!\" He yelled as he jerked her head off just before the huge white fountain spit upward. Emily sat back, grabbed him and stroked the rest out of him. \n\n\"That was fun,\" she giggled as she pulled her jeans and panties off and moved down next to him on the rug. She hoped that he was spent enough not to want to fuck her. He moved his lips to hers but she pulled away. \n\n\"Do you really want to kiss me after I just did that?\" She asked. His taste still lingered on her tongue. \n\n\"Yes but before I do I want to do this.\" He moved his lips to her nipple again and then kissed down over her shaking navel. \n\n\"BRANDON!\" She screamed when his tongue tasted her very sensitive clitoris. He lifted her ass upward until his tongue pushed against her hymen. He had never licked a pussy before but had read the Playboy Advisor. As he suckled on her clitoris he rubbed up and down her dripping gash. \n\nIf he wanted to fuck her at that moment she wouldn't and couldn't have stopped him. Never had she lost control like this before as her mind left her body and the electrical impulses from her pussy zapped her whole body until everything was tingling and was on fire. \n\n\"BBBBBBB...BRAAAA...BRANNNDON!\" She yelled when she climaxed. \n\nAs she lay back after getting her senses back he moved his moist lips to hers. \"So that's how I taste,\" she giggled while licking her juices from his lips. \"And here's how you taste,\" she said before jamming her tongue deep into his mouth. \n\n*****\n\n\"Shit...it's late,\" he said about ten minutes later when he glanced at this watch. \"I better get going. Do you want a ride to school tomorrow?\" \n\n\"Yes but I want to stop by the hospital first,\" she whispered. \"Will you pick me up around 6AM?\" \n\n\"Of course,\" he smiled as he gave her one last kiss. Emily lay naked on the floor and watched him get dressed and then move to the door. \"I'll be thinking of you all night.\" He turned and walked outside. \n\nAfter the door closed she whispered, \"I love you.\" \n\n*****\n\nJim woke up in the middle of the night in the dim lit room and realized where he was. He felt soft fingers in his own and looked over expecting to see Emily but saw his wife instead. \"God she looks so beautiful,\" he thought. She was dozing with her head lying on her shoulder. He rubbed his thumb over her skin and remembered how wonderful she felt. She opened her eyes and smiled at him. \n\n\"Hi,\" she whispered. \n\n\"I'm glad you came,\" he whispered back. \n\n\"I'm glad you are still alive,\" she grinned. \n\nThey continued to touch their fingers together. \"So you left Bill.\" \n\n\"Bill is my friend and that's all,\" she smiled. \"I've never...\" \n\nJim smiled and closed his eyes. He continued to rub her fingers until he again fell asleep. \n\n*****\n\nMaggie was eating breakfast when she noticed a black convertible pass her window. \"Shit...,\" she jumped up and watched as Brandon's car turned up the dirt road next to her house. A few minutes later she saw Emily sitting next to the hunk. \"You go girl.\" \n\n\"I didn't get much sleep last night,\" Emily said moving closer to him. \n\n\"I did,\" he grinned. \"You made me very relaxed.\" \n\n\"And satisfied?\" she giggled. \n\nHe only smiled as he passed the gas station and drove up the hill. \n\nThey moved into her father's room and heard him speaking to someone. Emily pulled Brandon back when she heard her mother's voice. \"Let's go.\" \n\n\"Wait,\" he whispered. \n\n\"You never slept with Bill.\" Jim asked. \n\n\"No...I'm still your wife,\" she smiled. \"I'm not Bill's preference.\" \n\n\"Oh,\" Jim said realizing what she meant. \"You're still my wife?\" \n\n\"You...we went through some tough times...but...but...I still love you very much,\" Janet whispered. \n\n\"Please forgive me for being such a jerk,\" Jim said. \"I know I took everything out on you when I lost my job. I wanted to give you a good life and when I lost everything I felt I failed you.\" \n\n\"All I ever wanted was you. How many times did I tell you that?\" \n\n\"Many times but I guess I was too proud. Will you forgive me?\" \n\n\"Yes,\" she smiled as she leaned over him and kissed his chapped lips. \"I love you.\" \n\n\"I love you too,\" Jim whispered. \n\nTears of joy slithered down Emily's cheeks as she hugged Brandon to her. She opened the curtain and when they turned to look at her she moved between them and they all hugged. \n\nEven Brandon felt a tear escape his eyes when he saw them together once more. \n\n\"My baby,\" Janet whispered as she rubbed her fingers through Emily's short blonde hair. \n\nFor the first time in a long time Emily felt everything was coming together. \"I have to get to school.\" She kissed her father and then her mother for the first time in a long time. \"You two need to do a lot of talking.\" She smiled and turned to Brandon. \n\n\"I guess you have a ride to school,\" Janet smiled as she looked back at the handsome lad. \n\n\"Drive carefully,\" Jim smiled. \n\n\"Thanks Dad,\" Emily laughed. \n\n\"Hey it was not my fault,\" Jim said. \"The other guy ran a red light.\" \n\n\"Tell it to the judge,\" Emily joked. She grabbed Brandon's hand and skipped down the hallway. \n\n*****\n\nThey made it to school before the school buses and most of the others. Emily kissed him before walking to the coach's office. He was sitting alone. \n\n\"Good morning Coach,\" she smiled. \n\n\"Emily. Are you feeling better?\" \n\n\"Yes I'm fine. Is today the first day of practice?\" \n\n\"Yes and I hope you will be there.\" \n\n\"Definitely,\" she grinned. She moved out of his office and walked down the hallway and saw Missy by a locker. She turned her head to try and get by her but the other girl saw her. When she looked at her she saw the black eye. \n\n\"I'm surprised you came back to school,\" Missy quipped. \n\nEmily had such a wonderful night and morning that she was not going to let Missy spoil it. \"I'm glad you missed me,\" she smiled. \n\n\"You're a whore,\" Missy spit out ready to take another punch and get another Creeker kicked out of school. \n\nBut Emily kept smiling. \"You need some more makeup on that eye.\" She turned before Missy gave her the finger. \n\nThe rest of the day went smoothly and during lunch Brandon came over and sat next to her. A few minutes Bud stood by the empty seat next to Brandon. \"May I sit down?\" \n\n\"Did you hear someone speaking to me?\" Brandon asked. \n\n\"No...I didn't hear anything,\" Emily said back. She was still pissed herself being the butt end of his Trailer Trash joke. \n\nBud looked at Brandon who looked down at his cheeseburger. \"Hey listen I'm sorry for what I said. I say things without thinking sometimes to be funny and sometimes they are not funny. I would do anything to take it back.\" \n\nEmily smiled. \"I could use some chocolate pudding. How about you?\" She looked at Brandon. \"Anything you want?\" \n\n\"I need a carwash.\" \n\n\"DEAL!\" Bud yelled as he ran to the food line and cut in front of two freshmen. He came back with two puddings. \"I'll wash your car after school.\" \n\nHe sat and they smiled and laughed but not at any Creeker or Trailer Trash jokes. They did not see Missy steaming over in the corner. \n\n*****\n\n\"Practice should be over around 5PM,\" Emily said to Brandon after the Chemistry class. \"Will you take me to the hospital?\" \n\n\"Of course,\" he answered. \n\n\"And later take me to my empty...\" she was about to say house but didn't. \"Trailer.\" \n\n\"Definitely,\" he grinned. He leaned over and kissed her softly. \"Watch your back at practice.\" \n\n\"She will be behind me,\" Emily grinned thinking if they had a race. \n\nHowever practice really didn't get them pitted against each other nor did they do any timings. The coach spent most of the time showing them how to stretch and exercise before they ran or did the other events. Emily stayed away from Missy or her girls and managed to keep it quiet until they all returned to the locker room. \n\nAs Emily showered Brandy removed her clothes and hid them in an empty locker. She was the last one to leave the showers and when she returned she found her clothes missing. \"Shit,\" she whispered realizing what had happened. She opened the empty lockers near hers but didn't find anything. Luckily they left her books and cell phone. She called Brandon. \n\n\"Hi...I need your help,\" she whispered. \n\n\"What's wrong?\" Brandon asked hoping Missy had not hurt her. \n\n\"They took my clothes and the only thing I have on right now is a towel.\" \n\n\"Really?\" Brandon smiled. \"I'll be right there.\" He left a few football friends and ran to the girl's locker room door. After looking all around, he peeked inside and saw her standing near the lockers. \"Is it OK to come in?\" \n\n\"Yes,\" she smiled. She moved back into the lockers and when he got close she pulled the towel off. \"So will you help me find my clothes?\" \n\n\"No...I don't want you to have any clothes,\" he said looking at her aroused nipples and fluffy golden bush. \n\n\"If you help me find them I'll let you take them off of me later,\" she giggled. He had seen her naked twice now and she was not nervous about it anymore. \n\nHe moved up to her and reached out to cup her soft mounds. While gently caressing them his lips moved to hers. They frenched for a few minutes and then he moved back and looked into her eyes. \"Emily...I think I...\" \n\nShe smiled and pressed her lips back to his again before moving back herself. \"I know...me too.\" Again they kissed for a few more minutes before she pushed him back. \"I need my clothes.\" \n\nBrandon flew around opening the lockers until he found them. \"Over here.\" She pulled them out and realized her new running shoes were missing. \"They took my running shoes.\" \n\nThey looked in all the lockers but came up empty. Luckily she had her old sneakers in her locker and put them on. \"I can still beat her.\" Emily glared as they walked from the locker room. \n\n***** \n\nJim Miller was now sitting up and eating when Emily and Brandon walked in. \n\n\"How are you feeling?\" Emily asked as she jumped onto the bed next to him. \n\n\"A lot better. I had a headache most of the morning.\" He kissed her forehead and held out his hand to Brandon. \"Thanks for watching Emily for me.\" \n\nHe wanted to say my pleasure but didn't. \"Anytime,\" he smiled. \n\n\"Where's Mom?\" Emily smiled. \n\nJim smiled back. \"She's packing. I've asked her to move back with us.\" He hoped it was alright. \n\n\"When?\" Emily asked hoping she would have at least one more night alone with Brandon. \n\n\"In a few days. I should be discharge in a day or two. The good news is that the other guys insurance will be paying for all of my medical costs.\" \n\n\"It really was his fault,\" Emily giggled. \n\n\"Hey...\" Jim laughed as he hugged her once more. Brandon's phone rang. \n\n\"Hello mom,\" he said. \"I'll ask.\" He looked at Emily. \"My mother would like to know if you would like to come to dinner at our house tonight. And your mother if you can contact her.\" \n\n\"Uh oh,\" Jim smiled. \"Dinner at a boyfriend's house. Sounds kind of serious to me.\" \n\n\"Shut up,\" she blushed. \"I'd love to,\" she smiled at Brandon. She called her mother but she couldn't make it. \n\n*****\n\nPaul Walsh had put on his best polo shirt in anticipation of meeting the girl who stole his son's heart. He had met Emily's mother a long time ago when he dated Sylvia in college but really couldn't remember her. \"Do I look OK?\" \n\n\"Yes dear,\" his wife laughed. \"Believe me when you meet Emily you will think you have known her all your life so relax and help me with the salad.\" \n\nBrandon pulled his car into their driveway and saw Emily smiling. \"What are you smiling about?\" \n\n\"All those mornings I used to watch this door from the school bus hoping you would come out,\" she said holding his hand. \n\n\"If I had known I would have been here every morning,\" he smiled. \n\n\"I'm nervous,\" she whispered when the car stopped and they walked to the front door. \n\n\"Don't be,\" he grinned. \"You've already met my mother and my father is a big teddy bear.\" \n\nShe followed him into the house and stopped to look at the huge marble foyer and staircase. \"This is so beautiful.\" \n\n\"So are you,\" he whispered as he bit her earlobe. \n\n\"Stop,\" she said moving away. She followed him down the hallway and into the kitchen. \n\n\"Dad...I want you to meet...\" he was about to say Emily but stopped. \"Meet my girlfriend...Emily.\" \n\nEmily blushed hearing her new title. \"Hello Mr. Walsh.\" She held out her tiny hand. \n\n\"God no wonder my son has been brain dead the past week or so,\" Paul said looking into her blue eyes. \"I'm very glad to meet you Emily.\" \n\n\"Hi Emily,\" Sylvia said as she wiped her hands on a dishcloth. She moved over and gave her a light hug. \"Welcome to our home.\" \n\n\"It's so big and beautiful. My mother couldn't make it tonight,\" Emily smiled. \"Can I help you do anything?\" \n\n\"My...oh...my,\" Sylvia grinned. \"One of Brandon's friends asking if they can help...amazing.\" She of course was referring to Missy who did very little except complain and expected to be waited on. \n\n\"I do a lot of cooking for my father,\" Emily grinned. \"But maybe not as much anymore.\" \n\n\"Good,\" Sylvia smiled. \"Janet is moving back with you two?\" \n\n\"Yes Ma'am.\" \n\n\"Well we have about ten minutes before we eat so why don't Brandon show you around?\" \n\n\"OK,\" Brandon smiled. He took her hand and led her back into the house. \"I think they like you.\" \n\n\"Good because I really like you,\" she whispered as they moved into the huge dining room. \n\n\"I thought you loved me,\" he whispered before kissing her soft lips. \n\n\"I didn't say it,\" she giggled. \n\n\"Me neither,\" he grinned. She punched him on this shoulder and they moved up the stairs. \"This is my room.\" \n\nEmily peeked inside. \"Is it safe?\" She saw the bed and all of the sports posters while moving to sit on his bed. \"Is this where you think of me?\" \n\n\"It's one of the places,\" he whispered as he moved next to her. Her head and lips turned to him and then pressed into his lips. His tongue moved first with hers quickly behind. When his hand moved to her breast she pushed him back. \n\n\"Too dangerous.\" She looked down at his swollen bulge. \"Are you always like that?\" \n\n\"Hey I saw you naked in the shower room before. What do you expect?\" \n\nShe giggled and stood up. \"I'll take care of it later.\" As he grabbed for her she moved into his bathroom. \"Do you think of me when you shower?\" \n\n\"You're killing me,\" he whispered while moving up behind her and pushing his hard-on into her soft cheeks. \"My father was right because I only think of you.\" He nibbled on her neck. \n\n\"BRANDON!\" His mother yelled from the base of the stairs. \"DINNER'S READY!\" \n\nShe turned and glanced down. \"You better hide that.\" She moved by him and down the stairs. \n\n\"Where's Brandon?\" Sylvia asked when Emily walked into the kitchen alone. \n\n\"He's in the bathroom,\" Emily smiled. She saw the stack of plates on the table and immediately put them and the silverware in place. A few minutes later Brandon walked in and stuck his tongue out at Emily. \n\n*****\n\n\"Don't stay out too late,\" Sylvia whispered to her son after dinner. Paul only smiled and gave him the thumbs up. \n\nEmily jumped into his car and they moved down the hill. When they got to the gas station they saw Bud's car and Maggie leaning over into it. \n\n\"Are you two talking again?\" Brandon yelled. \n\n\"She's going all the talking and I'm listening,\" Bud grinned. \n\n\"Smart man,\" Emily laughed. She looked at her watch and knew Maggie was about to get off work. \"Do you care if they come to the trailer?\" \n\n\"Yes...\" Brandon whispered. \"I want to be alone with you.\" \n\n\"We still can be,\" Emily smiled. She liked it when Maggie was matched up with Bud. \"Would you two like to join us?\" She didn't mention the word trailer. \n\nBud smiled but Maggie glared. \"If you say the \"T\" word you are dead,\" Maggie growled at Bud. \n\n\"I'll never say that \"T\" word again,\" Bud grinned. The two cars headed up Jacob Creek. \n\n*****\n\nPaul was watching TV alone when the doorbell rang. He answered it and saw a man in a suit standing with a silver badge held up in his hand. \"Paul Walsh?\" \n\n\"Uh..yes...can I help you?\" \n\n\"I'm Ed Taylor from the SBI. Could I ask you a few questions?\" \n\n\"What is it about?\" Paul asked nervously. \n\n\"Mayor Cameron,\" the man replied. \n\n\"Yes...please come in,\" Paul smiled. They moved into his private office and he closed the door. \"My wife is upstairs but she shouldn't bother us. What are your questions?\" \n\n\"Well your company's name came up on a list of contractors the city has used in the past and...\" He hesitated. \"And we have found some unethical and illegal practices.\" \n\n\"With my company?\" Paul asked surprised. He had always conducted his business ethically and within the law. \n\n\"No...not with your company but with another company owned and operated by the Mayor's brother-in-law.\" \n\nPaul smiled. \"I was wondering how long it would take you. Actually I just lost a contractor job with the city because my son broke up with his daughter.\" He saw the man taking notes. \"Of course I can't prove that.\" \n\n\"Do you know anything about McMillan Construction?\" \n\n\"I know they got the job I should have gotten. Why?\" \n\n\"It seems the Mayor is a silent partner with that company.\" \n\n\"Damn,\" Paul said sitting back. \"So that's why they've come into Glendale the past year and have eaten my lunch.\" \n\n\"Well I wanted to talk to you before tomorrow because we will be arresting the mayor and the others for their dirty deeds. Can we count on you as a witness?\" \n\n\"Definitely,\" Paul grinned. \"Just tell me when and where.\" \n\n\"Please keep this quiet,\" Agent Taylor said as he stood and shook Paul's hand. Paul walked him out and opened a can of his finest beer. \"A celebration.\" \n\n***** \n\n\"Very nice,\" Bud said when the four of them moved into the mobile home. Brandon glared at him. \"I mean it!\" \n\n\"Have a seat and we will be out soon,\" Emily said to the boys before the girls moved into her bedroom. \n\n\"Here we are again,\" Maggie smiled. \"But I don't have my new underwear on.\" \n\n\"Sorry I only have one nice sexy pair,\" Emily giggled. \"There's something I need to tell you.\" They sat down on the bed and Emily told her about the oral sex the night before. \n\n\"You gave him a blowjob?\" Maggie gasped.\n\n\"\"Shhhh,\" Emily said putting her hand over her cousin's mouth. \"And he did the same to me.\" \n\n\"Jesus it's no matter you are so happy,\" Maggie giggled. \"So are you going all the way tonight?\" \n\n\"No...I don't think we are ready for that yet. We've only been together for a few weeks.\" \n\n\"So what was it like?\" Maggie whispered. \"I mean sucking on it?\" \n\n\"You don't really suck or blow,\" Emily smiled. \"You just lick and move your mouth up and down on it.\" \n\n\"You...he didn't cum in your...mouth...did he?\" \n\n\"No,\" Emily smiled. \"I'm not ready for that yet either.\" \n\n\"So how do you want to work this tonight?\" Maggie smiled. She had been extremely horny since the night at Bud's house. \n\n\"You get the living room and I'll bring Brandon in here.\" \n\n\"Can't I have your father's bedroom?\" \n\n\"No...and stay out of there.\" \n\n*****\n\n\"So have you fucked her yet?\" Bud whispered to his friend. \n\n\"Fuck don't you ever learn?\" Brandon said after pushing Bud onto his side. ",
        "\"Hey it's just me and you dude. We used to talk about these things.\" \n\n\"You blew that,\" Brandon said as he sat back waiting for the girls to come back out. A few minutes later Maggie walked out. \"Emily wants you in her bedroom.\" \n\nBrandon smiled and moved past her. He saw the lights off and moved inside. \"Close the door,\" Emily whispered from under the sheet. \n\nHe did as she said and stood in the dark barely making out her shape under the sheet. \"Take off your clothes and join me.\" \n\nHe quickly jerked off his shirt and pushed off his jeans before stripping off his boxers and feeling his way to the bed. After lifting the sheet he moved his naked front up to her backside. She was facing the other way. \"Ummm,\" he whispered while moving his hand down to cup her bare soft buttock. \n\nEmily giggled and pushed her ass back into his hardness. His lips moved to her earlobe as his fingers moved around to fondle her titty. Her hand moved back over her hip and took his hard cock and pressed it lengthwise into her ass crack. \n\n\"Ohhhh,\" Brandon moaned when her body moved up and back downward. A few more times his body joined hers until he was rubbing his hard-on up and down her ass cushions. \n\nHis fingers felt good toying with her nipple but she needed it down below. She pulled it downward and opened her legs just enough to allow his middle finger to rub over her swollen clitoris. \"That feels so good.\" \n\nThe bed was squeaking and banging against the thin wall with enough noise for Maggie and Bud to hear it. \n\n\"Don't get any ideas,\" Maggie grinned as she pushed him onto his back and unzipped his fly. \"They are not fucking and neither are we.\" Her fingers pulled out his hard member and rubbed over the tip. \"Close your eyes.\" \n\nBud did as she said but opened them again when he felt her lips kissing the throbbing tip. \"OH MAGGIE!\" \n\n*****\n\nBrandon stopped humping Emily's butt when they both heard Bud's scream. They both laughed and he then resumed his motion. He was not fucking her but it sure felt like it. As he rubbed her clitty her legs opened just enough for him to try and push his prick under her ass. \n\nEmily was lost in passion as he rubbed her pleasure button and didn't know his crown was pressing against her hymen until she felt some pressure. Her fingers moved under his finger and felt his cock head trying to enter her. \"Brandon we can't,\" she gasped. \n\n\"God I want you so much. Emily I love you,\" he moaned. \n\nEmily loved him too but knew his dick was doing most of the talking. \"I want to do it too but not yet,\" she whispered while pushing his rod back under until it parted her ass again. She waited for him to hump her again but he remained frozen. \n\nBrandon was disappointed as he had hoped to lose his virginity that night. He was the school stud but had never gone all the way. He moved back from her and lay on his back looking upward. \n\nEmily turned around and moved her lips to his ear. \"Please have some patience. I'm not used to having a boyfriend and things are going too fast.\" Her fingers found and stroked his hard shaft. \n\nBrandon's disappointment eased away when she kissed and licked his hard nipple and then moved her head over his navel until her tongue licked the pre-cum from his cockhead. \"Emily...you don't have to,\" he whispered but her mouth opened and swallowed about five inches of his pink tower. She licked and sucked and moved her mouth off. \"Shhhh.\" \n\n*****\n\nMaggie was a quick learner as well and soon felt Bud's hands holding her head as she moved it up and down his penis. Being small, she was able to take all he had and have room to spare. She heard his groan and moved her lips off. \"Don't you dare cum in my mouth Bud.\" \n\n\"I won't,\" he moaned. He pulled her shirt and bra off as her mouth returned and sucked him in. With his mind on undressing her he did not realize how close he was. The next time her mouth bottomed out his hot spunk shot up out of his tip and into her throat. \"OH GOD!\" He cried knowing she was going to kill him. \n\nMaggie tried to breath but the spunk filled her throat so she did the only thing she could. She gulped down one load and tried to move her mouth off but he filled it again. She swallowed again and once more before he was finally empty. After moving her mouth off she wiped the residual cum from her chin and smiled at him. \n\n\"Maggie I tried to hold it but...\" \n\n\"That's OK.\" \n\n\"It is?\" Bud asked surprised. \n\n\"Yes.\" She stood up and pushed off her jeans and plain white panties showing him her trimmed dark bush. \"You wanted to see me naked last time.\" \n\n\"God you are beautiful,\" Bud smiled as he reached for her. But she slapped his hands away. \n\n\"Lay down on the floor on your back.\" \n\nBud pushed off his jeans and briefs and did as she said. He rubbed his penis hoping for a second life but it was dead. \"Sorry.\" \n\n\"Oh I'm not going to fuck your penis,\" Maggie giggled. \"I'm going to fuck something else.\" She lifted her leg over his head and as he looked up into the first pussy he had ever seen she lowered it downward until it covered his nose and mouth. \"Now you lick and suck.\" Her hips shifted forward and back. \n\nBud's nose was the first part of his body to touch a girl's pussy for the first time. It rubbed into her trimmed pubic mound as his lips pressed into her lower ones. He managed to gasp for air each time she pushed her pussy to his chin. \"Use your tongue,\" she ordered as she lifted and looked down at his dripping mouth. When it came out she aimed her clitty at it. He knew what to do after that. \n\n*****\n\nEmily heard the other couple's obvious sexual sounds from the other room and continued to lick and taste Brandon's shaft. Her fingers toyed with his balls and even brushed over his rear hole. She knew he was disappointed because she would not let him fuck her so she decided to go for it. As her mouth moved up and down she felt him rising which meant he was about to cum. \n\n\"Now Emily NOW!\" He yelled giving her enough time to move back but her lips stayed and he filled her mouth and throat. She swallowed and continued doing it until he was empty. After his body relaxed she moved off the bed. \"I'll be right back.\" She moved naked out into the hallway and saw Maggie's bare body sitting on Bud's face on the rug. \"Excuse me but I need a Coke.\" \n\nBud tried to look over at her but Maggie's legs prevented it. \"Would you get me one too?\" Maggie asked with a giggle. \n\n\"Sure,\" Emily smiled as she pulled out two cans and popped the top. She walked over to Maggie and looked down at Bud's smaller semi-hard on. \"I better get back to Brandon.\" She turned and saw him standing naked in the hallway looking at Maggie's smaller tits and darker bush sitting on his friends face. \n\n\"Can I have one too?\" Brandon asked with a smile. \n\n\"Yes,\" Emily giggled as she gave him hers and pulled one out for herself. \n\nBud managed to lift Maggie's pussy from his face and look over at a naked Emily and Brandon. \"Would you two give us some privacy please?\" \n\n\"Can you breathe under there?\" Brandon asked with a hearty laugh. \n\n\"Yes...now get out of here,\" Bud said before moving his mouth back and allowing Maggie to lower her pussy again. \n\nMaggie again checked out Brandon's package and sighed. For now Bud's would have to do. \n\nEmily and Brandon moved back into her bedroom and finished their Cokes before moving back into the bed. This time they hugged their fronts together and just kissed. \"I need to make you satisfied,\" he whispered as he touched down over her moist slit. She looked at the clock and knew they had at least another 30 minutes. \"Just kiss me and hold me,\" she whispered. He moved this hand away and did just that. \n\n\"You can't love me because you haven't known me that long.\" \n\nHe pulled her closer. \"I have no idea what love is supposed to feel like but it can't be any stronger than what I feel about you right now,\" he whispered. \n\nShe smiled and kissed his neck softly. It was almost an hour later before the boys left the trailer. \"I'll be by to pick you up for school tomorrow,\" Bud whispered to Maggie as he moved away from her. \n\nMaggie grinned and watched them drive away. \"You know I'm starting to like him.\" \n\n\"You should after sitting on his face for an hour,\" Emily laughed. \n\n*****\n\nIt was lunch time the next day as the four of them sat in the lunchroom when the principle came in and spoke with Missy who was sitting a few tables away. The whole room watched as Missy dropped her fork and stood up. The principle walked her out the door. \n\n\"What was that all about?\" Bud asked Brandon. \n\n\"My father told me last night and made me promise not to tell anyone.\" Brandon whispered loud enough so the girls could hear. \"Her father was arrested this morning.\" \n\n\"No shit?\" Bud said. \n\n\"No shit.\" Brandon replied. \n\n*****\n\nIt was after school as the girls and boys all stood around Coach James. Brandon decided to go out for the Javelin throw so he could see more of Emily. Missy was not there. \n\n\"I've put up some lists on the bulletin board inside for you all to sign up for the event you want to participate in. I'll do my best to put you in those events but if I think you would be better somewhere else or if I need you there I'll put your names there. For the rest of today continue to stretch and even practice the events you like the most.\" \n\nEmily moved towards Brandon but the coach pulled her aside. \"I guess you've heard about Missy's father and I have no idea what that will mean to the team. And, I know there is some friction between the two of you that must be gone before we have our meets.\" \n\n\"Yes sir,\" Emily said. She knew she had to get along with Missy during the competitions. \n\n\"Also, since I've timed both of you I've decided not to have you both in the same race. You are much stronger in the distance races and Missy is better in the sprints. I hope you don't mind.\" \n\nEmily smiled realizing the coach separated them to cut down on the hostility and competition between them. \"That will be great.\" \n\n\"Also,\" Coach James said. \"I spoke to the principle this morning about Maggie and she will be coming back to school tomorrow.\" \n\nEmily knew it was after the coach had heard about the mayor's arrest. \"That's great coach!\" As she walked away she heard the coach still talking. \"I found your running shoes this morning and they are in your locker.\" \n\nShe smiled and walked over to Brandon. \"Maggie's coming back to school tomorrow and the coach found my shoes.\" \n\n\"Good,\" he smiled as he hugged her into him. They worked out for about an hour and then checked the lists. \"Looks like you are in the mile and two mile races. Can you do both in one day?\"\n\n\"I run four miles a day after school. No big deal,\" she smiled. \"Are you sure you won't mess up your arm throwing the javelin?\" \n\n\"My arm only hurts when it's behind your neck for an hour or more,\" he teased. \n\n\"OK...don't hug me anymore,\" she said as she turned and moved to the locker room. \n\n\"Hey wait...I didn't mean it.\" \n\n***** \n\nAfter they showered Brandon and Emily went to see her father who was now sitting up in a chair next to the window. Her mother sat next to him. \n\n\"Well look at you,\" Emily giggled as she moved over and lightly kissed his cheek. She moved to her mother and did the same. \"Hi Mom.\" \n\n\"Not ready to walk yet,\" Jim said sticking out his leg in a cast. \"Hi Brandon.\" \n\n\"Hello sir,\" Brandon smiled as he shook his hand. \"Hello Mrs. Miller.\" \n\n\"As much as I enjoy hearing that,\" she stopped and smiled at her husband. \"I'd prefer it if you called me Janet.\" \n\n\"Same here,\" Jim injected. \n\n\"You want him to call you Janet?\" Emily giggled. \n\nJim reached for her but she jumped back. \"Can't get me anymore,\" Emily laughed. \n\n\"I'm moving into our home tonight,\" Janet said to her daughter. \n\n\"Good,\" Emily smiled. Even though it meant a stop to her intimacy with Brandon she wanted her mother back again. \n\nThey talked and sat around for about thirty minutes when Bud walked around the corner. \n\n\"Bud what are you doing here?\" Emily asked surprised. \n\nBud moved aside and his father moved into the room. Jim recognized him right away. \"Mr. Samuels,\" Jim said. \n\n\"Hi Jim,\" Mark Samuels said as he moved into the room. He was then introduced by Jim to Emily and his wife. \"Well Bud has told me about your bad luck and I thought I'd come by and maybe cheer you up.\" \n\n\"I...uh...don't understand,\" Jim said. He had only talked to this man a few times when he worked at the refinery. \n\n\"A manager's job has opened and your name came up in a meeting the other day. After checking with the other managers and some of the employees I think you would be the best man for this job.\" \n\nJim was speechless as he looked at all the smiling faces around the room. \"A manager's job?\" He was only a supervisor before. \n\n\"Yes, you should have been promoted to manager before and the pay increase is quite considerable,\" Mark said. \"If you want to think about it let me know next week. We are in a rush to fill the job but only if it's the right person.\" \n\nJim looked at his wife. \"What do you think?\" \n\nA tear rolled from her eye. \"It's up to you honey.\" \n\n\"OK...count me in,\" Jim said holding his hand out. Mark shook it and whispered to Brandon on the way out. \"She's very cute.\" \n\n\"I know,\" he whispered back. As Bud walked by Brandon gave him a hug. \"Thanks.\" \n\n\"It was the least I could do,\" Bud grinned as he followed his father out. \n\n***** \n\nThings quieted down the next two weeks. Maggie returned to school and everyone knew she was dating Bud. Missy returned as well but was not as prissy as she was before. The SBI had taken their cars as well as freeze all of their bank accounts. Mayor Cameron resigned before he was officially fired and soon the bank gave them 2 weeks to get out of their house. \n\n\"Where are we going to live?\" Missy asked her parents. So far she had gotten rides to and from school from Allison and Brandy who lived near her. \n\n\"I found a nice home with low rent on...Jacobs Creek,\" Her mother said. \n\n\"JACOBS CREEK!\" Missy shouted. \"I'LL BE A CREEKER!\" \n\nThe End of Chapter 2. \n\n*\n\nNote from Slick: I know this chapter was kind of mushy but poor Emily needed some good things to happen. I'm planning on one more chapter so let me know any ideas you might have. I've used a few from your emails. Don't forget to vote and send me an email. Thanks.  "
    ],
    "authorname": "Slickman",
    "tags": [
        "male virgin",
        "female virgin"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/trailer-trash-ch-02-2"
}