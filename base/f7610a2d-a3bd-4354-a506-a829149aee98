{
    "title": "Succubus Summoning 106",
    "pages": [
        "Phil Rowling opened his eyes from a pleasant dream he couldn't quite recall. Where was he? The sheets he lay on felt soft like silk. He was used to the scratchy, dubiously stained blankets of Wargsnout's College for Warlocks. This bed was soft, warm and comfortable.\n\nTwo faces came into his field of view. One had clear blue eyes and short red hair cut in a cute little bob. The other had green eyes, a sunny smile and long green hair. It might have been easy to mistake them for gorgeous girls in their late teens if it hadn't been for the horns protruding from their foreheads, or the miniature bat wings sprouting from behind their ears. When they spoke they revealed slender, wickedly pointed sharp fangs.\n\n\"See, I told you he was still alive,\" the girl with the green hair said.\n\n\"Well I never. I thought you'd sucked him dry for sure,\" the girl with red hair said.\n\nIt all came flooding back to Phil: the guest room in the deserted west tower of Wargsnout's; Jake's crazy plan to summon a pair of succubi; the ritual; Rosa and Verd\u00e9; Jake's death.\n\nHis... death.\n\nHe had died hadn't he? All his attempts to escape had failed. The two succubi had fucked and fucked all the fluids out of his body until there was nothing left. All things considered it hadn't been a bad way to go.\n\nWhere was he now though?\n\nWas this hell?\n\n\"Am I dead?\" Phil asked.\n\nThe two succubi looked at him, looked at each other and then laughed.\n\n\"No baby warlock, you're still alive,\" Rosa said.\n\n\"How? What happened?\" The last he remembered was being sandwiched between them, his body shrivelling up as Verd\u00e9 sucked out his life with her pussy.\n\n\"I got so full I couldn't eat any more,\" Verd\u00e9 said, patting her slender, tanned belly.\n\n\"That's what you get for snacking between meals,\" Rosa said.\n\n\"I'm alive?\" Phil said.\n\n\"Yes,\" the succubi replied, their faces bright.\n\nWhy was it so difficult to move? Phil thought. He brought his arm up and would have shrieked in horror had his lungs been strong enough to expel the air. It was a stick not an arm. His skin was wrapped tightly over angular bone. He had the arm of an emaciated famine victim. Phil could barely lift it up and even then his arm trembled at the exertion.\n\nVerd\u00e9 blushed with embarrassment and looked away from Phil's accusing stare.\n\n\"I still had some appetite,\" she said.\n\n\"What have you done to me?\" Phil said. \"I'm skin and bone.\"\n\n\"Not every where's skin and bone,\" Rosa said. Her hand lightly rubbed over the sheets covering Phil's crotch and the fabric immediately tented with his erection.\n\n\"Exhalarat dom daemonica absu Ixcis!\" Phil uttered, spitting the alien words like bullets. Rosa and Verd\u00e9 backed away in surprise as the cadences of the dismissal spell reverberated from the stonework before slowly fading away.\n\nNothing happened. Rosa and Verd\u00e9 looked at each other. They both nodded.\n\n\"That was a good one,\" Rosa said.\n\n\"Seems like our baby warlock has a little bit of talent after all,\" Verd\u00e9 added.\n\n\"Needs to enunciate the 'a' in the 'ae' of 'daemonica' a little more.\"\n\n\"That sound has always been open to interpretation,\" Verd\u00e9 said. \"It's the force behind that matters.\"\n\n\"It certainly had force,\" Rosa said. She frowned. \"We must be losing our touch if he wants to get rid of us that badly.\"\n\n\"Um...\" Phil interrupted. \"Shouldn't you... uh... be gone?\"\n\nThe two succubi returned their attentions to Phil. They smiled.\n\n\"Oh we are,\" Rosa said.\n\n\"That spell is an emergency dismissal designed to send a daemon back to its home dimension,\" Verd\u00e9 said.\n\nHorrifying realisation crept up on Phil and tapped him on the shoulder.\n\n\"Where am I?\" he asked.\n\n\"Our home dimension,\" Rosa smiled, showing her sharp little fangs.\n\n\"I'm in hell?\" he said, his voice quavering with terror.\n\n\"Kind of,\" Verd\u00e9 replied. \"It's a little more complicated than that.\"\n\n\"What am I doing here?\"\n\n\"Well. When I got so full I couldn't eat any more we decided to send you back to our home.\"\n\n\"As a snack for later,\" Rosa said, licking her full red lips.\n\n\"After we'd explored the human world a little,\" Verd\u00e9 said.\n\n\"Then that security patrol turned up and gave us a good zapping,\" Rosa said. She rubbed a scorched looking patch of skin on her buttocks.\n\n\"The tall one with the floppy black hair and spectacles was very handsome though,\" Verd\u00e9 said. \"I think I'll pay a visit to his dreams some time soon.\"\n\n\"Slut,\" Rosa said.\n\n\"What shall we do about him though,\" Verd\u00e9 said, looking at Phil. \"I'm not sure I want to finish him off.\"\n\n\"He's not very appetizing like this,\" Rosa said, lifting up one of Phil's stick-thin arms with her thumb and forefinger.\n\n\"No, it's not that. I've got a little attached to him now,\" Verd\u00e9 said. \"It wouldn't feel right. Hey!\" her eyes brightened. \"Maybe we could keep him as a pet.\"\n\n\"A pet. Don't be ridiculous,\" Rosa said. \"Can you imagine what N\u00ffte would say if she found out there was a human wandering around the castle. We should toss him to the Wargen.\"\n\nShe walked over to the far corner and lifted a body up out of the shadows. They'd brought back Jake's corpse as well, Phil realised. He watched as Rosa walked over to one of the narrow windows and casually threw it out. A cacophony of screams, growls and wet ripping sounds welled up from outside.\n\n\"Oh come on,\" Verd\u00e9 said. \"It will be fun to have a baby warlock around the place.\"\n\nRosa stood by the window, her black wings folded behind her. \"I suppose we can always eat him if he gets boring,\" she said finally.\n\n\"We can't really leave him like this though,\" Verd\u00e9 said. \"He won't be any fun at all.\"\n\nThe two succubi glanced thoughtfully at each other.\n\n\"Nurse Honey?\" Rosa suggested.\n\n\"Yes, she should be able to help,\" Verd\u00e9 said.\n\nThe two succubi walked out, leaving Phil alone and helpless in the darkened room. It might have been better if they'd killed him, he thought. They'd left him with the body of a centenarian. He couldn't move or do anything.\n\nOutside the night was filled with garbled cries and mournful wails. Occasionally he heard something large moving around just below the window. He shivered. He was in hell. The succubi had taken him back to hell with them.\n\nHe looked around the room. Moving his head was just about the limit of what he could do. He was in some kind of bedroom. The bed took up most of the room. It was easily large enough for five or six people. Thick velvet drapes hung from the ceiling above it like a tent. Beyond the bed Phil saw antique furniture carved with designs that were both lewd and grotesque.\n\n\"Oh dear, they really have had a good suck on you.\"\n\nThe voice was warm, rich and huskily erotic. Phil turned to the source and saw a tall, voluptuous woman standing in the doorway. Rosa and Verd\u00e9 looked like teenaged girls with the bodies of porn stars. The newcomer looked like a porn star with the face of an angel. She had a full, womanly figure and despite looking older, was no less attractive for it.\n\nShe was dressed in a white nurse's outfit with a red cross on the front. Silky blonde hair spilled out from beneath a white nurse's cap. It took him a little while to realise what was odd about her outfit. It was rubber. He'd seen that gleam before in pictures from fetish catalogues Jake kept salted away under his bed.\n\n\"Who... uh,\" Phil mumbled.\n\n\"I'm Nurse Honey.\" She smiled at him like sunshine. \"And what's your name, dear?\"\n\n\"Phil,\" he replied.\n\nHis gaze was drawn to her chest. Nurse Honey had a lot of bosom and her rubber nurse's outfit had to stretch tightly to contain all of it. She walked breezily around the side of the bed.\n\n\"Now don't you worry Phil, I'll get you back on your feet in no time at all.\"\n\nShe gripped the silk sheet and pulled it aside to leave Phil's wasted body exposed to the warm night air. He noticed she was wearing white rubber gloves that extended all the way back to her elbows.\n\n\"Tsk,\" she said on seeing the state of his body. \"Those girls.\"\n\nShe leant over Phil until his view was completely filled by the white expanse of her bosom. She fluffed up a pillow behind his head and moved his body up into a more comfortable position. As she did Phil caught a trace of her scent, clean but with traces of a sultry tang that caused his nostrils to dilate with excitement.\n\n\"I'll have to start treatment right away,\" she said.\n\nShe gripped the end of her gloves and peeled them off with one fluid motion. She took off her cap and shook out the silky waves of her long blonde hair. It was then that Phil finally noticed her eyes. They were completely white. There was no iris or pupil, just a uniform, milky-white sclera.\n\nPhil didn't really have time to let that sink in before his attentions were pulled elsewhere. Nurse Honey unzipped her uniform and undressed right in front of him.\n\nThey were enormous.\n\nHe didn't want to stare, he felt like some kind of dirty old pervert, but he couldn't help himself. They entranced him completely. He couldn't look away.\n\nThey were enormous.\n\nHis gaze was trapped as it ran along the firm curves, ascended the mounds of soft, ripe flesh and finally was drawn, speared, by her erect pink nipples as they rose from a circle of darker coloured flesh. They were real, not like the plastic ones he'd seen in some of Jake's adult films, and much larger than even those amply endowed women possessed.\n\nHe was still mesmerised as she got into bed and lay alongside him. Her body was curvaceous and inviting, but possessed not an inch of excess fat.\n\n\"We need to replenish your fluids,\" Nurse Honey said. She leant over and lifted his head up until his mouth was brought close to the nipple of one of her breasts.\n\nDid she want him to suck?\n\nPhil was less than enthusiastic. The way she cradled his feeble body and proffered her breast to him made him feel undignified. Like he was a baby. She wanted him to suckle at her teat like a helpless baby.\n\nHe watched as a dribble of clearish liquid oozed from her nipple and ran down the slope of her breast.\n\nNo, he wasn't going to do that. He wasn't going to demean himself any further.\n\n\"Most men can't resist the urge to put their hands or lips on my breasts,\" Nurse Honey said, gently running long nails through Phil's lank hair. \"Verd\u00e9 said you were more stubborn than most though. She said I might need to give you a little more encouragement.\"\n\nPhil didn't really get a chance to ponder what she meant by encouragement before the world went dark and he felt warm flesh pressing down on either side of his face. Nurse Honey rolled over him and smothered his head between her large breasts. His last breath had been filled with that same clean, but slightly illicit, scent. Now his nose was buried deep in the soft folds of her cleavage. He couldn't breathe and there was no way he could push her off in his weakened state. He wasn't sure he wanted to. It felt nice to have his face caught between the soft pillows of her breasts.\n\nPhil was on the verge of pleasurably losing consciousness when Nurse Honey took the pressure away from his face. He was a little disappointed even though his lungs sang with the relief of getting some much needed oxygen.\n\nHis mouth was still open when Nurse Honey filled it with the soft flesh of her breast. Phil felt the globe shiver and a sticky, sweet liquid flooded the back of his throat. He had no option but to swallow and he felt a warmth spread through his body as it slid down his throat like warm molasses. The fluid came into contact with his taste buds and all of a sudden fireworks of pleasure were dancing on Phil's tongue. It tasted like the sweetest, purest honey, laced with a tang of the wickedest sin.\n\nHe let the liquid enter his mouth passively at first, but the taste was so delicious his lips started moving of their own accord, suckling at the warm flesh. Nurse Honey obliged, letting her breast exude more of the luscious nectar into Phil's mouth. He hungrily drank it down and felt a warm glow spread outwards throughout his body.\n\nNurse Honey pulled her teat away and Phil tried to follow, his mouth moving on empty air.\n\n\"We need to work on the rest of your body as well,\" she said.\n\nShe spun him onto his front with one practised movement and then Phil felt her weight settle on his back. She straddled him and lay down until he felt the soft weight of her breasts pressing against his back. Her body covered him completely and he felt her warmth as it seeped into his withered flesh.\n\nHer breasts shivered again and Phil felt warm, sticky fluid ooze across his back and shoulders. Nurse Honey sat back up and started to massage the liquid into his wasted muscles with firm fingers.\n\nThis couldn't be hell, Phil thought. Only heaven could feel this good. He sighed in pleasure as Nurse Honey's skilful hands kneaded his neck and shoulders before moving down to the muscles of his side. Her soft breasts moved across his back, exuding more sticky fluid until his skin was coated in a thick layer. Beneath it his skin tingled pleasantly and a pleasurable glow sank down into his muscles.\n\nShe turned her attentions to his limbs, first running them between the soft, sticky pillows of her breasts and then using her hands to knead the syrupy liquid into his muscles.\n\n\"Better?\" she asked.\n\n\"Sticky,\" Phil replied. He understood how Nurse Honey had received her name. He felt like he'd been dipped in warm, aromatic honey.\n\n\"Let it soak in and restore your tissues,\" she said.\n\nShe moved her breasts down to his buttocks. She rubbed the hard nubs of her nipples across his ass cheeks, exuding more of her honey. Then she lifted her breasts off him and let her hands knead the liquid into his flesh. His body was responding. As her sticky fluids permeated his skin he felt dried up tissues start to expand and feel fleshy again.\n\nA thick dollop of syrup rolled down his crack and settled warmly on his balls. Nurse Honey pushed his ass cheeks apart and let her finger circle the tight bud of his anus. The finger roamed around the rim, relaxing the muscles before gently slipping inside.\n\n\"Relax,\" Nurse Honey said. Her finger moved around in a gentle circular motion, loosening up his tightness. \"This will feel a little strange, but your tissues need to be rejuvenated both inside and out.\"\n\nStrange didn't even begin to cover it. Phil felt the warm flesh of her breast pushing between his ass cheeks. Her nipple lined up until it rested in the shallow dip of his anus. Then her breast squirted.\n\nPhil was too surprised to say anything. It was weird, but not bad weird. Her breast pumped more fluid into his ass and he felt warmth spread out across his lower abdomen. His internal tissues, dried up and sore from the lack of moisture in his body, eagerly absorbed her sugary nectar and came back to life.\n\nNurse Honey filled his interior with syrupy warmth and then removed her life giving teat. She squirted another thick dollop of honey over his testicles and then 'mmm'-ed in pleasure as she ran a finger along his perineum and tickled the underside of his balls. Phil felt a familiar tightness start to build in his testicles.\n\n\"Turn over,\" Nurse Honey ordered, although Phil didn't really get a chance to obey as she put firm hands on his shoulder and rolled him over onto his back.\n\nShe lay back down on him, her breasts resting on his wasted chest like a heavy duvet. They contracted and more of the sticky substance pooled on his chest. In the dim light it looked like molten amber. She slowly slid down his body, letting her hands caress and massage his chest.\n\nShe slid right down until her breasts rested in his lap and his cock lay snug in the lush valley of her cleavage. Nurse Honey stared straight at him with her weird, all-white eyes. She pouted a kiss and then pushed her breasts forwards and squeezed them together.\n\nPhil closed his eyes as his cock was enveloped in warm, sticky breast flesh. She twisted and rubbed, letting his dick slide in her honey-soaked cleavage. He felt her breasts shiver against him and his cock was flooded with a thick liquid that tingled against his skin.\n\nPhil was hard and twitching in a matter of moments. Nurse Honey sat back on his legs and moved her hands up and down his shaft with soft, shlupping sounds. Phil squirmed with pleasure as he felt her massage her honey into his erection until his whole cock tingled with pleasure.\n\n\"Let's check if everything is in full working order,\" she winked at him.\n\nShe leaned forwards over Phil and raised her hips up above him until the head of his cock rested against the lips of her pussy. He watched as a thick gobbet of amber-coloured syrup oozed out from between her labia and slid down his cock, sending shivers of pleasure in its wake.\n\nNurse Honey slowly lowered herself down on him and Phil felt his cock push into a warm pit filled with thick, syrupy liquid that tingled against his skin. Her groin met his with a soft squelch. Honey oozed out from her cunt and pooled around his balls.\n\n\"How does that feel?\" Nurse Honey asked.\n\n\"Nh... nice,\" Phil stammered.\n\nNurse Honey's vagina squeezed and gently pumped more honeyed fluids over Phil's cock. He lay back, paralysed, as the sensations overwhelmed his nervous system. Nothing else existed apart from the blissful feeling of her soft vaginal walls squirting rich syrup over his cock.\n\nShe began to move up and down, rubbing her warm honey into his cock with steady thrusts of her hips. Phil looked up at her, watching her heavy breasts sway with each motion.\n\n\"Are you an angel?\" he asked.\n\nNurse Honey smiled. \"I'm about as far from an angel as you're ever likely to find,\" she said.\n\nYeah, the whole fucking his brains out was probably a giveaway there, Phil thought. Angels probably didn't approve of this kind of behaviour.\n\nHe felt so good though, stronger, enough to start pushing back against Nurse Honey's body, adding to the movements as she bounced on his hips. He felt like an active participant rather than an unwilling prop.\n\nOoh, this was good, Phil thought. It felt heavenly to plunge his cock into Nurse Honey's sticky centre. A throbbing sensation started in his balls and started to creep up his cock. He was going to\u2014.\n\nHe pushed up and ejaculated into her sticky folds. She pushed down to meet him. Her vaginal walls undulated as wave after wave of sticky syrup flowed out around his pulsing cock until his thighs, stomach and balls were completely inundated.\n\nNurse Honey gently rocked on him as the aftermath of the orgasm trembled through his body. She smiled and ran a hand through the sticky strands of her blonde hair.\n\n\"Mmm, that was to check your equipment is functioning properly,\" she said. Still with Phil inside her, she folded her body over his until her breasts squashed against his chest. She licked her lips suggestively. \"This is for my enjoyment.\"\n\nStill lying on Phil, she began to pump her hips up and down. The air was filled with squelching sounds as his cock thrust back and forth into her honey-filled depths.\n\nAfter his experiences with Rosa and Verd\u00e9, Phil wasn't entirely surprised to find he was still hard and already on the way to a second orgasm. Once again he was a passenger, slave to lust running through his veins, as Nurse Honey bounced her hips up and down on top of his cock.\n\nHer arms slid under his body and she squeezed her curves against him. Phil felt an odd sensation in his chest and realised Nurse Honey had impaled him with her nipples. No, impale was the wrong word. It implied force and brutality when there was none. Her nipples had simply slipped, painlessly, through his skin. As if her flesh had merged with his.\n\nHe didn't have long to contemplate this latest weirdness before her breasts squeezed and a spreading pool of warmth filled his body.\n\nPhil was totally detached from his body. His consciousness floated above his physical form like a kite soaring through soft clouds.",
        "Nurse Honey's pussy gripped his body with powerful suction. Part of his essence was drawn up into the warm interior of her body. She held it there, letting it mix with the slow moving currents running through her, before her breasts squeezed and pumped it back into Phil's body.\n\n\"Mmm. The others are too selfish.\"\n\nShe sucked another great draught of Phil up through his cock.\n\n\"They only take.\"\n\nHer breasts squeezed a flood of life-giving energy back into Phil's shell.\n\n\"If they gave as well they'd realise how much longer the pleasure can be extended.\"\n\nSuck. Squeeze.\n\nPhil was completely lost to the pleasure. He was caught in a cycle of unending bliss as Nurse Honey drew him up into her body through her pussy, then squirted him back out into his body through her breasts. He relaxed and let the ebb and flow of the motions absorb him.\n\n\"We can keep this up for a long long time.\"\n\nSuck. Squeeze.\n\nHe didn't know how long Nurse Honey kept him trapped in the cycle. At some point he realised she was no longer sucking and instead just squeezing warmth into his body. Atrophied tissues drank hungrily and swelled. His body was returning to normal. She was returning his vitality.\n\nFinally Nurse Honey gave him a beatific smile, kissed him tenderly on the forehead and climbed off his body. Phil lay in a puddle of sticky, sweet-smelling fluid, but he felt great. He held an arm out in front of him and stared at it in wonderment. It was no longer stick-thin. It no longer hurt to move. It was his arm, as good as new.\n\n\"Mmm, I like getting good and sticky,\" Nurse Honey said. She sat on the end of the bed and Phil watched as she scooped a dollop of amber-coloured honey out of her cleavage and slowly sucked it off her finger.\n\n\"Are you sure you're not an angel?\" Phil asked.\n\n\"Quite,\" Nurse Honey replied. Amusement flashed in her pure white eyes. She got off the bed and squeezed back into her tight white nurse's outfit.\n\nPhil sat up. His naked body was plastered in her honey.\n\n\"How come I feel so good?\" he asked. He didn't understand. Succubi fucked the life out of their victims, not back in. Was she a succubus?\n\n\"You needed replenishing,\" Nurse Honey stated. \"I replenished you. And had some fun,\" she added, turning back to Phil and licking her full lips.\n\n\"But I thought succubi drained energy, not give it back,\" Phil said.\n\nNurse Honey smiled. \"The energy was a loan not a gift, fledgling. Be careful you do not run up debts you cannot afford to pay off.\"\n\nPhil saw movement under her tight nurse's costume. Something was moving, writhing, under her left breast. Similar motions started in the centre of the flat expanse of her stomach. It looked like rats were crawling underneath the tight rubber of her uniform. Phil couldn't pull his gaze away from the grotesque sight.\n\nNot rats, people, he realised. A tiny human arm pushed out against the tight white latex covering her belly. On the underside of her breast a miniature face screamed in soundless terror.\n\nPhil understood now where all her honey came from. She was a battery, stuffed with the energy of countless stolen souls.\n\nTurmoil spread across her flesh as hundreds of tiny limbs thrashed and pushed in futile motion. Nurse Honey smiled serenely. The motions died away, each struggling form dragged back beneath the surface until her skin was once more smooth and flawless.\n\n\"I would be wary of calling on my services too often, fledgling warlock,\" Nurse Honey said. She blew him a kiss and walked from the room. Phil was left alone in the dark bedroom, surrounded by his fears and the dissonant cries of madness and despair spilling in from the night outside.\n\nTo be continued... \n\n*****\n\nAUTHOR'S NOTE\n\nYeah, I'm as mystified by Phil's continuing survival as everyone else. It seems like this story still has a way to run and will no doubt end up in some very odd places while I figure out what the hell Verd\u00e9 is up to.\n\nI don't want to devote all my time to this as I have other ideas I want to get written as well. Life permitting, I'm going to try and get updates out on a monthly basis, although this is tentative. I hope you continue to enjoy Phil's stay of execution while it lasts. \n\n***** "
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "warlock",
        "magic",
        "big breasts",
        "messy sex",
        "smothering",
        "lactation",
        "massage",
        "demon"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-106"
}