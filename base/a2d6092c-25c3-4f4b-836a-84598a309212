{
    "title": "Dawn's First & Only Ch. 02",
    "pages": [
        "This story is dedicated to the memory of Dawn. \n\nSaturday.\n\nI woke up early as usual, about 5am, & saw Dawn's smooth back curled up at my side as she slept deeply. I slipped out of the huge bed and into the shower, and what an impressive shower it was with hot pulsing jets hitting me from front & back.\n\nThe hotel staff had left my wash kit all set out from my couriered overnight bag, so I shaved, etc before walking back into the huge bedroom to sit in the Lazyboy chair & read my book while Dawn slept on. I sat so I could admire her sleeping beauty as I read, taking time to look at her each time I turned the page. Dawn looked so peaceful as she lay there with the quilt covering her young naked body, and her hair spread over the thick pillow, what a beautiful sight first thing in the morning. It was hard to imagine that as she slept peacefully the cancer was continuing its relentless destruction of her stomach & hence her life.\n\nI woke Dawn up with fresh coffee just after 8am & she gave me a great beaming smile to show she had no regrets from last night which put my mind at peace. I kissed her forehead as she headed for the shower, surprised to see her own small suitcase in the wardrobe and her washbag in the bathroom as she entered.\n\n\"You thought of everything, didn't you\" she called from the bathroom.\n\n\"You mean we thought of everything don't you?\" I replied.\n\nThere was silence for a minute before her puzzled face came around the bathroom door.\n\n\"You mean mum?\" she asked in amazement.\n\n\"Yes and your dad had a small part in it as well when he delivered your bag to the hotel.\" I informed her.\n\nHer face was a mixture of wonder & love for her parents as she turned back towards the shower.\n\nI would have loved to have joined her in the shower to soap her young nubile body under the streams of hot steaming water, but I thought better of it as she might want a little privacy at the moment. Instead I picked up the phone and ordered breakfast from room service.\n\nDawn emerged from the bathroom in a thick white terry bathrobe, looking a picture of innocence & beauty just as room service knocked on the door to deliver breakfast.\n\nWe sat & feasted on piles of pancakes & maple syrup, toast & marmalade, all washed down with a bottle of champagne so that it was special to us both. Dawn looked at me across the small table in wonder & love and I felt like a King.\n\n\"Now young lady the day is ours but I have some plans for you that you will enjoy. We are going out shopping for a special dinner tonight, so we need to take you to some nice shops for a dress, shoes, jewellery and anything else you fancy. And tonight we are going to the \"Top of The Mark\" restaurant overlooking the harbour for fine food & dancing. Now how does that appeal?\"\n\nDawn came slowly around the table and wrapped her arms around my neck & kissed me full on the lips before saying \"Absolutely.\"\n\nI reached for her slim waist & pulled her down for a longer kiss which increased in passion the longer it lasted. Finally I stood up & swept her off her feet & carried her to the bed. I gently dropped her on the bed before jumping on alongside her. I quickly grabbed her in my arms & rolled her over so she laid full length on top of me as we kissed hungrily & deeply.\n\nMy prick started to harden feeling her weight bearing down on me, as I breathed in her sweet aroma and reached one hand into her robe to fondle her breasts. Dawn's nipples hardened immediately to my first touch on each, she sighed as the now familiar feelings coursed through her body.\n\nDawn broke our kiss as she pushed herself up & sat astride my lap and lifted both my hands & placed them inside the now open folds of her robe and onto her firm breasts.\n\nDawn was a picture of absolute beauty sitting astride me with her head tilted back, soft moans escaping her mouth as my hands busied themselves roaming over her breasts squeezing, massaging & admiring their beauty. I was in seventh heaven myself as my prick found its way up between the tight cheeks of her bum.\n\nBut before making love to her again I wanted to taste her exquisite tight sweet pussy and show her the pleasure of having her clit licked, sucked & nibbled.\n\nBriefly I stopped fondling her breasts and pulled her bum cheeks up my body until her thighs straddled my head & her beautiful pussy slid up against my lips. Once she was in place my hands reached up to continue their pleasuring of her breasts & nipples.\n\nDawn's pussy was already damp & smelling of female nectar as my tongue started to stroke up along her pussy lips in one long sweep causing Dawn to moan loudly & sag down onto my face. This helped me then penetrate deep inside her tight sweet tasting pussy with my tongue. I have never tasted anything so good, whether it is food, drink or pussy. If I died now I couldn't have been happier!! I spent a couple of minutes licking & sucking deep in her pussy, taking the time to cover every minute detail as Dawn moaned & sighed above me, her nipples hard bullets between my fingers.\n\nAs I felt the first stirrings of an orgasm start inside of her I decided it was time to introduce Dawn to her clitoris for the first time. I slipped my tongue from the depths of her pussy to sweep up between her lips to locate & expose her clit. As my tongue hit her love button Dawn straightened & whimpered with pleasure as yet another new sensation ripped through her senses. I slowly increased the pressure of my tongue as I licked & sucked on her clit as it emerged from its folds to harden & swell for our mutual pleasure.\n\nI felt as if I was supporting Dawn by her breasts & bum as I concentrated on giving her an outstanding orgasm through her clit & nipples. Her juices were now gushing out of her pussy making me swallow every drop to save from drowning as they flowed over my probing tongue & down my throat. It was like drinking liquid honey as I savoured the pleasures & beauty of this young woman above me.\n\nDawn couldn't handle this new sensation for long without coming all over my mouth. I could feel her hot thighs throbbing against my ears as her moans became louder as she rapidly approached orgasm. I took her nipples roughly between my figures, and tried to close my mouth over her whole pussy as my tongue gave her swollen clit one final lashing to take Dawn plummeting into her orgasm. Her thighs clamped tight against my head as her pussy bounced on my tongue and her juices washed over me in torrents. I have never seen anyone come in such volume as this. Her breasts vibrated in my hands as I gripped her nipples as her head rolled around in the throes of orgasm and I could hear her moans & screams despite her thighs clamped on my ears.\n\nMy prick stood erect & throbbing out of my robe demanding satisfaction as my face enjoyed this nubile pussy dancing over my lips & tongue. Dawn sagged forward against the head board & slowly sank her head down towards me as I pushed her hips back towards my crotch, leaving a trail of pussy juices along my chest as she went.\n\nShe was in the last throes of orgasm as her hungry mouth clamped down on mine & her tongue dived deep into my mouth. My rock hard prick slid up tight against her arse & I won't have stopped her if she had slid onto it.\n\nWe kissed hungrily & I hugged her tightly to me as she slowly relaxed, drained from her orgasm. She broke the kiss & laid on top of me, her face resting on my cheek and my prick trapped between her firm bum cheeks.\n\nSlowly our breathing returned to normal.\n\n\"Thank you, you are amazing, so gentle, kind & considerate, thank you so much\" she whispered before kissing me again.\n\nAs she sat upright I slid her robe off & admired her lithe body with perky thrusting breasts framing her smiling face sitting above me. I then reached down under her bum & lifted her so I could position her over my prick. The swollen head nudged against her sopping entrance briefly before I lowered her down onto my hot hard prick.\n\nOh, the feel of her tight dripping pussy as it slid easily down the length of my prick. Despite her being so wet I felt every millimetre of her love tunnel as it cloaked my prick on its descent. I pushed Dawn upright so could feel my entire length buried deep up to the hilt inside her. I looked at her face which looked dreamy, content & beautiful.\n\n\"Dawn, it is now for you to take your pleasure however you want,\" I instructed, \"By being on top you determine the pace at which we go, you determine how deep & what angle I penetrate you. You can play with your breasts and / or your clit yourself if you wish to do so. Just realise you have made me very horny & excited so I will only be able to last a short time before my come explodes inside you as you are a very sexy woman.\"\n\nDawn wiggled her hips on my prick to make it rub around her insides, then she let her whole weight come down onto me & my head nudged the opening to her cervix which made her swoon & moan. Placing her hands over my nipples she started to slowly lift up until the head nearly popped out into the daylight, but at the last moment she slid back down slowly along the length of my swollen prick.\n\nGod this was so sensual feeling her every move & watching her face as she experimented with our bodies. I didn't know how much longer I could last under this gentle stimulation without shooting my load into her.\n\nDawn sat still and then started to run her hands over her breasts, probably for the first time in her life, enjoying the thrills she experienced through both her fingertips & her nipples. Dawn didn't understand what she was doing to me as I lay there watching her, as my prick twitched & throbbed inside her. Finally she lowered one hand down to her pussy & felt my prick where it entered her pussy. She ran her fingertips around the lips before lifting up to touch her clit. Judging by her flinching as she stroked across it I guessed she hadn't touched herself before there either.\n\nThis was just too much for me to bear as my prick throbbed hard inside her. Fortunately touching her clit ignited the need to come in Dawn as well so she started to lift up on my prick before sliding down again and establishing a nice rhythm. I didn't know where to place my hand- under her beautiful bum or on her breasts. Dawn made that decision for me as she placed my hands on her breasts and then started to slap down my prick until she stopped on my loaded balls.\n\nWe soon were rutting & moaning like animals as she rode me fiercely & I countered with deep hard thrusts that ploughed deep inside her. We only lasted a couple of loud intense minutes before we both exploded in liquids & noise as I shot wads of come snaking deep into her pussy as her juices flooded over my burning throbbing cock. My hands squeezed hard into her breasts as her head rolled back in a scream of pleasure & passion and her pussy clamped down hard on my prick to squeeze every last drop of come out of my now tender balls.\n\nSuddenly she fell on my mouth and kissed me fiercely with such wanton passion I had not encountered before, her tongue penetrating deep into my throat. Finally we just lay there as my prick softened & eased out of her saturated pussy, and we hugged & kissed gently for about 15 minutes.\n\nI think Dawn was starting to doze as I slapped her bare bum and announced, \"Shower & shopping now, young lady.\"\n\nWith the surprising vigour of youth Dawn bounded off the bed & into the shower. I so much wanted to join her, but I knew we would never get out of the hotel room if I encountered her firm nubile body in the shower. Instead I sat on the stool in the bathroom & watched as she lathered her fantastic body. It hard & sad to imagine that there was a cancer consuming her body & life as I watched the young beauty inside the glass shower.\n\nAs Dawn exited I entered the shower, and then half an hour later she was pulling me by the hand through the hotel reception out to the shops.\n\nWe headed for the upmarket Chancery Shopping Centre & made a dress shop the first point of call for a backless black cocktail dress that showed her young figure to the utmost. I received some odd looks from the sales assistants as I was so much older, as they tried to decide if I was her father or a sugar daddy. Who cares, I was just enjoying the look of joy on Dawn's face as she tried several dresses until she found the one she wanted. Then we bounced out of the shop with the bag & into a shoe shop. Here I was given a magazine to read by an understanding assistant who knew it would take awhile & men don't have much interest in women buying shoes. I didn't see the final selection; the assistant just led me to the till to settle up! Next we went into Pizza Hut for lunch and easily consumed a large pizza after such vigorous fucking in the morning.\n\nStomachs & thirsts now satisfied we headed for the hair salon for a hair do & a facial for Dawn, not me! This would take time and the assistant recommended a visit to the adjacent Sony Style shop & a music shop. What great service, they even rang me on my mobile to say when Dawn would be ready.\n\nWhen I met Dawn she was radiating calm, confidence, & a new maturity with a new hair style and the subtle changes a facial gives. Wow, I was impressed. Next stop the jewellery shop. Now here was a place that could do serious harm to the credit card. Dawn showed the assistant her dress & shoes and asked for her guidance on what to wear with it. For such a young woman she had sense to ask for help when she didn't know something. Together they chose a nice gold necklace and a wrist band that were both beautiful & simple. I admired that she didn't just go for something expensive, but rather for what she liked. Some young man was going to be missing out on the ideal wife!\n\nA quick coffee stop; before our final port of call, which was the lingerie shop. I would not be reading magazines in this one for sure; I might be pretending to read!! Again the assistant was shown the dress and off Dawn went to experiment under the expert guidance of the assistant. At one point Dawn snaked her leg past the curtain, but that was the only taster I was to receive. I think the pair of them were enjoying themselves at my expense as different combinations of skimpy clothes passed back & forth behind the curtain.\n\nWe were fairly well laden down with bags as we returned to the hotel and then sat out on the balcony with an ice cold drink after a hard day of sex & shopping.\n\nLater on I had a shower & shave & got ready for dinner before giving Dawn a quick kiss saying \"I'll let you get ready on your own & see you down in the bar when you are ready.\"\n\nI sat in the bar reading & listening to the music while I sipped a spirulina, which was to boost my energy level for the evening ahead. About 40 minutes later I sensed Dawn enter the bar and I stood up in amazement at the vision in front of me.\n\nOn Friday I had picked up a young, na\u00efve, shy & proper girl who was also virgin. Now on Saturday evening I was looking at a confident, beautiful young woman who was walking towards me with grace & dignity looking out of this world in a tight fitting black cocktail dress, her neck & wrist wrapped in gold and a beautiful pair of lovely legs projecting out of her dress wrapped in fine black stockings (I hoped for stockings not panty hose), walking on a pair of open 3inch high heels. I just hoped my tongue was not hanging out, I am sure the barman's was.\n\nI reached for her hand & kissed it before Dawn reached forward to kiss me on the lips. \"You are so beautiful,\" I simply stated. We sat down & the barman was there instantly to get our drinks order.\n\nDawn's dress showed her figure to the max but in a stylish way without being tarty. She was so full of confidence it was very satisfying to see. I could not believe the transition that had taken place in Dawn over the last 24 hours as we sipped a nice white wine to start our evening.\n\nThe taxi took us to the \"Top of the Mark\" where we shared a very beautiful, private & intimate candle lit dinner with soft romantic music playing in the background. As we enjoyed our food & wine I just looked in awe at Dawn as she sat across from me.\n\nThe evening went in a daze for me as we ate, drank, chatted, laughed, strolled & danced. The restaurant photographer got a couple of lovely shots of us at the table & as we danced. It was2am when we walked, arm in arm, back into he Marriott and headed back to our penthouse. \n\nWe put on some music & danced out on the balcony under the stars, Dawn's head resting on my chest and my hands caressing her bum & her open back. Our touching & caressing grew more intimate as we kissed & swayed to the music with the stars bright above us. Dawn rubbed my hard on as it was wedged between us and I replied in kind by lifting her dress to explore her bum & her new lingerie. I just wanted to fuck her brains out as she had turned me on so much, Dawn wasn't the nervous virgin from the night before, she was a very sensual woman who now had needs & cravings of her own that needed to be satisfied.\n\nI turned Dawn around so she looked out of the Harbour as I curled my arms around her. One arm around her waist, pulling her bum onto my hard prick and the other reaching up to cup & fondle her breasts through her dress as I kissed her neck & nibbled her ear lobes. Dawn sighed as she rubbed her bum against my hardness. There was now an urgency for both of us. I stepped back to lift her dress around her waist & expose her satin encased bum with a black suspender belt holding up a pair of exquisite stockings. I just took a cheek in each hand and squeezed the firm warm flesh; her young tight bum was warm & inviting as I massaged her flesh. But then I needed to release one hand so I could release my trousers & prick. My trousers were around my ankles as I eased the gusset of her black satin panties to one side to run my fingers along her already wet pussy. Knowing that she was already moist, I briefly rubbed my prick against her bum & under her pussy to tease her mercilessly. Dawn's pussy & bum started to grind along my prick, smearing its length with her juices. I am not sure who was teasing who at this moment, but we both had a need to for something more satisfying. I guided my prick into her in one long motion until my thighs slid up against her satin encased bum. It was an exquisite feeling and sight standing behind this young beautiful, my cock buried to the hilt in her hot tight pussy; my hands on her hips feeling her warmth through my fingers as I admired the smooth skin of her back wrapped in such a beautiful & sexy dress. All of this before the back drop of the glistening harbour, city lights, & a starlit night.\n\nI could feel the smooth silky feel of her stockings make the hairs on my legs stand up as our legs rubbed as my hips moved forward & back. \n\nDawn grabbed hold of the balcony hand rail to steady herself as my pace increased and I leaned back to see my prick ploughing into her under her shapely bum & hips. What a fucking beautiful sight & feeling as we had loud rough passionate sex on the 18th floor balcony overlooking the harbour.\n\nAs our passion increased so did our need & the roughness of our sex. This wasn't love making, it was raw sex satisfying a need in both of us. I now leant forward to reach around Dawn by sliding one hand into the front of her panties to roughly tweak her clit while the other hand griped her breasts alternatively through her dress. My balls slapped against her satin gusset as I pounded into her, not caring if other guests heard our cries & grunts as we rutted on the balcony.\n\nOur need was too great, we couldn't last, we came in a crescendo of noise and throbbing orgasms as I expended my spunk deep into her hungry pussy and Dawn drenched my prick with her juices as I held her tight & tweaked her clit to keep her orgasm going until she begged me to stop. I just held her, my arms wrapped around her as our juices flowed down our legs and I tenderly kissed the back of her neck. ",
        "As we came to our senses I withdrew from her pussy & slipped off my shoes & trousers so I didn't break my neck as I led her into the lounge of the penthouse. I grabbed a bottle of champagne from the minibar & shot the cork out over the harbour and we swigged it straight from the bottle, laughing at each other as the bubbles shot up our noses or we split it over ourselves.\n\nWe were both still enjoying the heady atmosphere of our wonderful night that had now turned to early morning. We leant against the table as we drank, laughed, kissed & fondled. The bottle was mostly empty as Dawn fondled my prick & balls which started to come back to life under her touch. It seemed so natural to push down gently on her shoulders & for her to sink to her knees before me. Maybe it was natural inborn instinct or the booze but Dawn held my prick & balls in her hands and to my amazement took the head of my prick it her mouth and gave it a slow lick like her favourite ice cream. As she got used to the taste & the feel she became more adventurous by closing her lips around it and licking all around the head to taste our combined juices. Naturally my prick stiffened considerably under this treatment & Dawn accommodated it in her mouth. Slowly she took a little more into her mouth as I took off my jacket & shirt while watching her in front of me.\n\nDawn's smooth fingers cupped & caressed my balls as she savoured my cock now deep inside her mouth. I let her continue for a few more minutes until I knew I was going to blow my load down her throat. Gently I pulled her to her feet and kissed her, now tasting my juices in her mouth.\n\nUsing all of my strength I lifted her off her feet & swung her legs up onto my hips as she hung on around my neck. Now I eased myself back onto the corner of the table to support our weight as I lowered her down onto my lap & legs.\n\nWe kissed long, hard & deeply as I reached behind her to undo her dress and slid it off her smooth shoulders to expose a black satin wrap that covered her breasts & stomach; it was tied with a string down around her waist. Dawn leant back & hung onto my neck as I ran both hands over her satin encased breasts. Her nipples thrust through the shiny material as I did this & we both sighed in pleasure.\n\nMy hard prick was trapped most uncomfortable beneath Dawn so I lifted her up and lowered her down to be impaled on my length. We sat for a long time kissing & fondling with my prick buried to the hilt inside of her. To experiment I reached behind her & inside the leg of her panties to rub some of our juices on her ring and tease her by probing gently as her bum was stretched wide sitting on my lap. Dawn bit my ear lobe as my finger slid into the depth of my first knuckle. She started to bounce on my lap, pistoning herself on my prick & allowing a little more of my finger to enter her arse. My other hand cupped her arse to help lift & drop her as we fucked in this most amazing position.\n\nOccasionally Dawn leant back so I could suck & chew on her nipples through the satin wrap. We weren't tired at all, and we happily fucked away on the table with Dawn coming twice more before I felt my balls come to the boil, induced by her stockinged legs sliding on the top of my legs & rubbing on my hips. Dawn felt so light & doll-like as she absorbed the beauty of our lovemaking in this very sensual & personal position. I admired her beauty as I ran my fingers through her hair and over her highly erotic nubile body, I just couldn't get enough of her.\n\nDawn slid on my lap as we thrusted each other towards one more orgasm to crown the perfect day. We drew heavily on each others tongues as we came together in one intensely satisfying orgasm. We shook on the table as Dawn's pussy muscles milked the spunk out of me and I pulled her bum tight into my lap with my forefinger buried in her arse. We just stayed there entwined in our spent state for several minutes just hugging each other.\n\nWith the last of my energy I carried Dawn to the bed & enjoyed stripping her of her dress & lingerie before wrapping her in my arms under the quilt & drifting into a deep sleep.\n\nTo be continued...\n\n* * * * *\n\nIf you enjoyed this story then please make a donation to the New Zealand Cancer Society by clicking on .\n\nPlease type \"Dawn\" in the box marked \"Name of person you wish to remember\" and leave the boxes below that blank.\n\nThank you for helping so more can be done to prevent deaths like Dawns.\n\nYours sincerely,\n\nWizarddriver. "
    ],
    "authorname": "wizarddriver",
    "tags": [
        "table dawn",
        "nipples dawn",
        "breasts dawn",
        "tight sweet",
        "hung neck",
        "turned dawn",
        "top mark",
        "nubile body",
        "satin wrap",
        "hilt inside"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/dawns-first-and-only-ch-02"
}