{
    "title": "Azra-El Series Arc 2 Ch. 01",
    "pages": [
        "Author's Note: I apologize for making you guys wait so long. I do not have any major excuses besides facing a short writer's block and being busy. The chapter also took me a long time to write, as it needed a bit of research into topics that I have no knowledge in. Anyway, I hope this long ass chapter makes up for my tardiness in updating.\n\nEditors: Chris Anow, Drastic Explorer.\n\nProof/Beta Readers: Pinku Lady; D5834 gave me valuable advice on forts and contributed to a few interesting ideas on angel warfare.\n\nSex Scene Enhancer: The first sex scene was mostly written by Drastic Explorer.\n\nShout out for Chris Anow: Chris, one of my editors, has been posting his own story \"The Beginning\" by fantasystorylover on Lit. Please give it a try, as I find his writing to be really good.\n\nPatrons: Thank you to all my patrons who have stuck with me, despite my long absence. It really means a lot to me, and I hope you keep supporting my work. This chapter is dedicated to you guys. :)\n\nTed Miller, Tom Ail, Dylan, Eduardo Garcia, FallenOmega22, Fjordor, Lucas Spicer, Marcel Hearns, Daniel, Mike Siegmund, David Hunt, Pinku Lady, RogueXVII, uthr, Valkania, Clay LaVal, DNAJester, Peter Ferguson, SB, Scott S, Shan, Aporjo, Gregarious, Scolymus, Vibrant Dragon, Abhi, Alejandro Salas, ATK-49, Awilix38, B Liz, B. Vijayan, Bipen, BramBora, Brennan White, Curtis Young, D5834, Dantees, Dareliisko, David, David Whyte, Ebogie, Fips[0], Flypenguin, Frazzle_Dazzle, hexd0t, Hunter Stusynski, Jay, Joshua Rudd, Merov, Michael Wall, Niax, Oblivion, Random Task, Rui Salvaterra, Scott Knox, Stephen Lewis, Stuhero, Tllmxn, Torasque, W00tdiew00p, Wypuxx, Yamibomb112.\n\nLore\n\nColors on Azra-El: Most sentients on Azra El can see the spectrum in nine colors, one color beyond Violet, and one beyond Red. EROYGBIVT or TVIBGYORE.\n\n\"Tvinge\" is a color beyond violet, with the same cool resplendency of violet. Angelic shades of tvinge are associated with ambition, drive, and devotion.\n\n\"Erus\" is a color beyond red. The angels associate erus with enthusiasm, vigor, tirelessness, and being resolute. Blaze wishes he could be this color, but his shade falls between orange and red.\n\nThere are many more non-spectral colors and shades, but since both Blaze and I are male, we cannot be \"bothered\" with them...\n\nAngel and demon brains: These long-lived sentients take in information as easily as humans, but they take a little bit more time to process and internalize it. However, they have better memories, so the information is retained longer.\n\nAre they smarter or less smart than humans? That's relative. However, on a standardized IQ test, the average IQ of an adult angel would be 125. Yet, if you consider the time they'd take to learn something, they would take longer than humans.\n\nBlaze's brain is the one part of his body that is more human than angel, but that may slowly change over the years.\n\nSpace-ring Laws\n\n1. Space-rings are small pocket dimensions with a limited volume + limited weight. (Making space-rings with higher capacities becomes exponentially harder and expensive. Usually, only well-off angels carry around a space-ring. Most students at Tir are pretty wealthy.)\n\n2. You cannot place one space-ring into another.\n\n3. Placing or removing an object into a space-ring consumes energy, depending on the mass and momentum of the object.\n\n4. The environment inside the space-rings cannot sustain complex life.\n\n5. Destroying a space-ring will eject all its components. However, to destroy it, you need to use as much energy as is needed to remove the objects inside it + other energy losses.\n\nHeavenly Union Army Ranks:\n\nIvkantry\n\nSecond Lieutenant.\n\nLieutenant - Platoon (Rebecca's platoon had 16 soldiers).\n\nCaptain - Centuries/Company (Rebecca is now a Captain).\n\nMajor - Battalion/Cohort.\n\nLegate - Legion/Regiment - 4000-6000.\n\nMajor General - Division - 12,000 - 24,000.\n\nLegate General - Corps - 36,000 - 90,000.\n\nGeneral - Field army - 100,000 - 300,000.\n\nField Marshal - Army.\n\nCavalry\n\nSecond Lieutenant - Flight - 4 Pegasi/Gryphon.\n\nFirst Lieutenant - Squadron - 12 Pegasi/Gryphon.\n\nCaptain - Group - 48.\n\nMajor - Wing - 2 or 3 groups.\n\nCommander - Cohort - 480.\n\nCommodore - Brigade - 1000 - 1500.\n\nMarshall - Division - 5000.\n\nThe common practice is to have archangels form the ranks of Captain to Legate, and deities as Generals. However, there are plenty of exceptions.\n\nObligatory Warnings:\n\n<ol type=\"1\"><li>This chapter can get a little bit cheesy and fluffy at times. I guess that makes this chapter Cheetos. :|</li><li>It may feel a little slow at the start, but the pace picks up after the sex scenes.</li><li>There are two sex scenes in this chapter.</li><li>There are 3 songs in the story. The first is my own silly composition. The second is \"Moon River\" by Audrey Hepburn. It is a beautiful song and I suggest listening to it while reading that part of the story. The third is my own version of \"Beyond the Sea\" by Bobby Darin.</li><li>I stole the following quote from Rear Admiral Grace Hopper. I believe she wouldn't mind.</li></ol>\n\nThe Azra-El Series\n\nArc 2: The Hela Empire\n\n\"Leadership is a two-way street. Respect for one's superiors; care for one's troops.\" -- General Wu Mei\n\n<p align=\"center\">oOoOo</p>\n\nLE 642, 25th Chroma (October, 7 years after the events of the previous arc.)\n\n\"To rule... is not fun, at least to those not driven solely by a thirst for power - Blaze, LE 642,\" Blaze thought, as he gazed down at Meihuacheng, the capital city of Xian, from the balcony of Castle Tiantang over the foothills of Mt. Wudang Xian.\n\nThe city appeared resplendent in brilliant hues of pink, red, and white. The pink was from the meihua or plum blossoms which bloomed throughout the year, despite the cold winters. The red was from the red paper-lanterns and the burgundy-tiled roofs. And the white was from the spotless whitewashed buildings and dove trees that stood grandly in almost every courtyard.\n\nThe city was surrounded by a thick forest of redwood trees whose canopies were a brilliant orange-red in the sunlight.\n\nBlaze did not rule anything. Yet, being the face of an ever-expanding society and a company, he was constantly aware of his actions affecting the lives of many people around him. He had never been the one to hesitate over decisions but second-guessing himself had become quite a common occurrence in the recent past. It was stressful.\n\nEvery decision came with consequences--some good, some bad-- but the bad ones always tugged at his heart. As a result, even though he was not quite fond of the Empress of Xian, his \"grandmother\", he had come to respect her in the recent days, at least for her fortitude.\n\nShe was not an easy angel to be around or to follow; she was harsh, she was strict, she could be unempathetic, and she always put her country over her family. However, as far as he could tell, she genuinely cared and worked for the welfare of Xian and its people, though the distinction between the nation and its citizens often became blurred.\n\n\"A feather for your thoughts?\" a boyish yet feminine voice broke him out of his musings.\n\n\"Yo, eoni,\" he greeted as Chengguan Shangdi walked over to stand by his side, and gaze at the view.\n\nThe Xian culture differentiated between older and younger sisters, and eoni was the Xian word for elder sister. CG took great delight in being called an eoni, and slowly, Blaze had come to view her as such.\n\n\"How do you do it?\" he asked.\n\n\"Do what?\"\n\n\"Handle the pressure of all this,\" he answered, waving his hand over the lands below.\n\nCG threw him an appraising glance before responding. \"I wish I could give you a poignant answer, but the fact is that I do not know how to live a different life. Grandmother always ensured that I knew my responsibilities from the moment I hatched. I often wondered how I would have been if I had not hatched as a princess, which is why I was very curious when I first heard of you. My little mei, leading a carefree and playful life...\n\n\"And when I met you, I immediately fell in love with your personality, and I wished you would remain the same forever, but it seems like shouldering responsibility runs in the family... I wish you would stop growing up so fast,\" she said, wrapping an arm over his shoulder and drawing him close.\n\nCG was not aware that they were not related by energy. At first, it was just a matter of convenience for Blaze and Jie Er, but by the time he wanted to tell her the truth, he had grown afraid of how it may change their relationship.\n\nMoreover, the memories he made on Azra-El had slowly begun to overwrite his memories of Earth. Now, Earth truly seemed like the experience of a previous life; and maybe it was. Even the faces of his family and friends had begun to blur, and the family he had adopted on Azra-El began to feel like his true family.\n\nCG was unlike him in so many ways, but she accepted him for who he was, and Blaze was not sure if that would remain the same if she knew that they were not truly related.\n\n\"Hmph. You are just afraid that I'd become the first prince if I continue to show my awesomeness,\" he responded, mockingly.\n\n\"Oh, please do! In fact, why not ask grandmother to elevate your position to second princess, hmm? I would love some more free time for myself.\"\n\nCG's mother was the first princess, and Jie Er was still in her self-imposed exile. That left CG and Blaze as the second and third princesses.\n\n\"Er, I am sorry, eoni,\" Blaze quickly apologized, \"T'was just a joke. That's all. You know I respect you too much to take your place.\"\n\n\"Right,\" she said, unconvinced.\n\nThey watched the scenery in silent companionship before CG turned to face him. Suddenly, she held his face between her hands and planted a kiss on his forehead.\n\n\"Eww,\" Blaze protested, like all younger brothers must protest towards affection from older sisters.\n\n\"Fenghuang,\" she spoke seriously, \"I have been meaning to say this for a long time, and I never found the right moment, but I guess this is as good as any.\"\n\n\"Yeah?\"\n\n\"No matter what the future has in store for us, I will always be there for you. I do not plan on making the same mistake my mother made with yours. So, please come to me with all that troubles you. I shall always try to be your eoni, first.\"\n\nIt seemed that CG had some insight into Jie Er and Ying Yue's relationship, but Blaze did not wish to learn about it from her.\n\nHe gazed deeply into her angular face and found her beautiful black eyes to be sincere.\n\n\"Okay,\" he nodded, and drew her into a mighty hug, lifting her off her feet. He was a little shorter than her, but he liked to show off that he was stronger.\n\nCG laughed, and patted his back to make him set her down. \"Good, now let us hurry. Grandmother wishes to speak to you about something.\"\n\n***\n\nThe two princesses found Empress Nezha Shangdi in the throne room, sitting alone in deep contemplation. It was not an unusual sight.\n\nNezha Shangdi was three-hundred-and-ninety-nine years old, but she did not look her age. Her long black hair was held in a wide updo, crowned by a magnificent golden crown.\n\nThe crown consisted of two serpentine golden dragons rising from her hair in curving arcs to form a wide oval shape. A fist-sized emerald phoenix, with its wings spread wide, rested over the snouts of the two dragons. Six golden hairpins with emerald-studded tassels jutted out of her hair, behind the crown and equidistant from one another.\n\nLong and heavy golden ear hangings with emerald studs dropped from her ears, almost reaching her collar bones.\n\nBlaze often wondered how her poor neck could handle the weight of her head and everything on it.\n\nShe wore an exquisite black and gold cheongsam gown, made of silk and lined with threads of real gold. A thin purple sash held the gown tightly around the top of her waist and crisscrossed around to hang over her hips.\n\n\"Yo grams,\" Blaze said, searching for that almost imperceptible twitch of her right eyebrow.\n\nOver the years, Blaze had figured out that the word \"grams\" annoyed Nezha more than any other form of addressal--most likely because the old coot could not figure out if he was being affectionate or plain disrespectful. She was a beautiful woman by any standard, but in Blaze's eyes, she was an old biddy.\n\n\"After your last visit to Xian, I have received complaints that you have harassed several young nobles,\" she stated.\n\n\"Ugh, 'harass' is such a strong word...\"\n\nThe general Xianian moral compass was based on a sort of hierarchy: First, came the pride and glory of the nation. Second was the glory and welfare of the clan. And third was filial piety towards their mothers and relatives. To honor these, everything else could be pushed aside.\n\nThus, though most Xian angels were as empathetic as any other angel, they could ignore individual good for the \"greater\" good. This sort of mindset often gave rise to vainglorious young mistresses who were awfully proud of their status, and viewed everyone beneath them with scorn.\n\nSo, during his previous visit, Blaze had picked up a new hobby. He would disguise himself as a regular tramp, and go around in search of arrogant young mistresses, of whom there was no lack in the capital.\n\nOnce he found a target, he would figure out a way to pique their interest and ire. And, when they reacted flagrantly, like he wanted them to, he would show them who the real young mistress, erm, young master, was.\n\n\"I hear that your headmistress at Tir is quite talented at setting you straight. I am sure she can be persuaded to pay us a visit.\"\n\n\"No need to get hasty, now, grams. Lemme explain,\" he frantically waved his hands, making CG chuckle.\n\nBlaze had received his second spanking when a group of carnikes, named Team Momo, that he had been secretly raising at Tir, with the help of Tonya and the latest batch of first-year minions, escaped and wreaked havoc on Tir's campus. He had not been present at Tir when it had happened, and Fiora had managed to keep the incident quiet until his visit to Tir. When he arrived, she invited him to her office and proceeded to give him another sultry ass-whooping.\n\nHe had cried out murder, protested that she couldn't spank a prince and so on, but the headmistress was unconvinced, especially as she had already received permission from both Jie Er and the Empress.\n\nBlaze swore revenge, but for various reasons, he had become terrified of pissing off Fiora. Moreover, from that day onwards, Fiora had become famous as the only headmistress to have ever spanked a princess, and Blaze became famous as the only angel-princess to have ever warranted a spanking.\n\nAs for Team Momo, they had become the unofficial mascots of Tir Academy, and the nearby forest ended up becoming their home. Blaze's dream was to one day have an army of airborne carnikes, flying alongside him and Sky, biting the butts of any demon or angel that dared to challenge him.\n\n\"I am only teaching our nobles the virtue of humility, ya know, considering how humble I am, despite my general awesomeness,\" Blaze explained in a righteous manner, while keeping a straight face. \"Besides, I am also helping out the common folk. You should see how some of those brats lord over them. Surely, you do not agree with such behavior!\"\n\nNezha sighed, \"When you hatch into nobility, you hatch into entitlement, and with entitlement come certain prejudices. It takes experience and guidance to get over them. They are only children. It will take time for them to be able to empathize with the common folk.\"\n\n\"Eoni is not like them. And, you could say that I am guiding them... in my own way,\" he muttered.\n\n\"Your eoni is unlike most. As for your guidance, are you not reinforcing their beliefs by treating them the same way they treat the commoners? Are you not using your own status to put fear into them?\n\n\"Regardless, in addressing such issues, you need to be tactful, which brings me to the next issue. Have you made any plans for after your visit to the Pixie Lands?\" Nezha asked him.\n\nBlaze was soon to set out to Fortress Mirian. He had only come to Meihuacheng for a short visit.\n\nAfter Fortress Mirian, Blaze planned to visit Siofra's homeland, the Eastern Pixie Lands. His visit had long been coming, and it had only taken so long because Nezha had forbidden him from going without the protection of a deity. Deity Daizy Vinetree of the pixies had finally found some spare time to be Blaze's escort in the Pixie Lands.\n\n\"Er... yeah, sure,\" Blaze muttered, not wanting to give Nezha any reason to give him more of her education. \"I've got plenty to do. I have some very important businesses to attend to. I need to attend meetings for my TBF company and uh... my society, and stuff. I think gra- Master Freja wants me to visit her for another training session. I also wish to visit Kamikoku. I hear they have a special type of ma-\"\n\n\"Your official coronation will occur during my fourth centenary celebrations, next year.\" Nezha cut him off with a wave of her hand.\n\n\"From then until the start of your next school year, you will stay here, and attend court. You shall learn the etiquettes and intricacies of ruling a nation,\" she said, in a tone that left no room for argument.\n\n\"Why do I have to bother with all that? Eoni will be the future empress. I am fine with what I am doing now,\" he disagreed. Etiquettes are for plebs.\n\n\"Do you remember my words when you asked me what it takes to be a princess of Xian? You made me a promise, and this is a part of it.\"\n\nDrat. \"I guess I am destined to suffer for the good of the HU...\"\n\n\"It is good that you understand. Now, come sit by my side, and tell your sister and I of your recent adventures,\" she said, a slight smile finally sprouting on her face.\n\nAge had made Nezha a better grandmother than she had been a mother.\n\n\"Only if you let me sit on your lap.\"\n\nBut somehow, age had only made Blaze more childish.\n\n<p align=\"center\">oOo</p>\n\nLE 642, 1st Liber\n\nFortress Mirian had been a bastion for the city of Anyin, a Xian city at the northwestern border of Aranya and Xian, for over a thousand years. However, the ever-changing nature of warfare and the introduction of a special type of explosive, a few hundred years ago, had made traditional fortifications somewhat obsolete on Azra-El. Now, the fortress mainly served to garrison the 7th HU division--18,000 soldiers-- that served to protect the surrounding lands.\n\nThe city of Anyin, a strategically important port for the HU, was precariously situated at only fifty yonders from the border of the Hela Empire, and the mountain range that demarcated Xian and the Hela Empire was not high enough to keep out the demonic invaders by itself. If conquered, it could provide the demon invaders with access to the Purple Sea which bordered Xian, Aranya, and the Caledonian empire. As such, an entire division of the HU army, led by General Wu Mei, was stationed at Mirian.\n\nBlaze's carriage hovered in the sky as he peered out his window, taking in the view of the massive star-shaped, octagonal fortress. The early morning sun began to peep over the Purple Sea, and a curtain of golden light swept across the land, illuminating the fortress.",
        "The fortress was an imposing structure, seemingly impregnable both by land and air. Countless ballistic cannons, energy-based anti-air cannons and repeating guns, and anti-artillery mortars lined the faces of its star-shaped walls. A deep moat, protected by two lines of spiky palisades on the levies, surrounded the fortress; the outer palisade was hidden behind a mound of dirt, and behind it was another wide trench.\n\nTo the west of the fortress lay a forest that stretched all the way to the foothills of the mountain range, while to the east were farmlands, irrigated by the numerous streams that flowed down the snow-capped mountains.\n\nOnce Blaze finished taking in the view, he nodded at his companion, who knocked against the carriage, letting the driver know that they were ready to descend. His companion was a captain of the Imperial Guard. However, Blaze was not coming to the fortress as a prince; he was posing as the child of a minor noble, whose talent had caught General Wu Mei's eye.\n\nThe carriage landed by the wooden bridge at the eastern entrance of the fort--no one could fly over the fortress unless on urgent official business--and the captain led him to the soldier stationed at the gates.\n\n\"Captain Biyu Ming, of the Imperial Guard,\" she introduced herself to the guard behind the billet, as she pulled out a seal that proved her identity. \"I have been tasked to escort Lady Bru\u00ec q\u00ed \u00e9r to General Wu Mei.\"\n\nIronically enough, the pseudonym Bru\u00ec q\u00ed \u00e9r was a Xian transliteration of both Blaze Er, and Brachel.\n\nThe guard inside the billet contacted her HQ through a VP, before summoning another guard to guide them.\n\nFortress Mirian was essentially a small town, with civilians and army personnel in equal numbers, hurrying around performing their daily duties. Blaze could now distinguish different types of soldiers by their attire. The regular ivkantry wore low-backed leather corsets and knee-length leather skirts, and carried swords or spears; when they were summoned to the mountains, they would wear grey woolen greaves and slit-backed woolen jackets.\n\nAs they passed a smithery, Blaze spotted an angel in a full coat of greyish-silver armor conversing with a smith. It was a practical yet stylish-looking form-fitting suit of armor, complete with a slit-backed cuirass, chainmail skirt, gauntlets, pauldrons, greaves, tassets at the hips, and an open-face helm with crested wings on the sides. The pauldrons and tassets somehow served to accentuate her curves.\n\nA Knighthawk Blaze determined as he passed her. The Knighthawks were the Pegasi brigade of the Mirian Division, led by Colonel Qishi Ying.\n\nThe 7th division also had another type of flying-steed brigade, the Battlehawks, who flew on Gryphons.\n\nThe soldier took Blaze and his escort through a roundabout path, paved with cobblestones and lined by flowering trees with beautiful teal-colored flowers, giving them a short tour of the fortress. Young angels scampered past them, giving Blaze curious looks, wondering if there was going to be a new kid in town. Blaze gave them a supercilious look. I am a grown-up, punks.\n\nAs they walked, Blaze's initial impression that Mirian was not merely a garrison, but an army town was reinforced. There were multiple smitheries, workshops, barracks, housing areas for civilians and soldiers with families, a school, and even a research facility for tinkerers. Supplies were stored in underground basements, with access points located at different parts of the town. The fort itself was built from a combination of stone, brick, and mortar, but most of the buildings were made of wood. So that they can easily be rebuilt or destroyed.\n\nTo the north were the stables and an aviary. The aviary, housing the Gryphons, was a grassy knoll with massive boulders and rocky projections, on which the birds rested. In between the boulders were cozy nests made out of straw, dried leaves, and feathers, on which young Gryphons dozed when they were not playing.\n\nThe Gryphons of Azra-El came in different colors. The Xian and Aranyan Gryphons were distinct with their green bodies and yellow heads, covering a variety of shades within those spectrums. The bodies and hind legs of the Gryphons resembled that of a lion, but their heads and front claws could resemble any of the various carnivorous birds of Azra-El.\n\nBlaze itched to go and play with the bird-animals, but he decided to put it off for another day. I wonder how Sky would feel around a Gryphon. Though Sky had grown used to being around Pegasi, he always had that predatory gleam in his eye, making most Pegasi a little nervous around him.\n\nSuddenly, a wave of more than a thousand Pegasi surged from just outside the fortress walls and soared into the skies.\n\n\"They are out for their daily morning exercise,\" the guide explained, noticing his curious eyes. \"They go all the way to Anyin, then visit the Duchess' Castle to the north-east, and fly another twenty yonders to the north, before returning.\"\n\n\"And the Gryphons?\"\n\n\"Oh, the Gryphons are mostly left for themselves, except for the training drills. They are solitary creatures and dislike being in packs, unless necessary. They do their own hunting as well. We only provide them with the bare necessities.\"\n\n\"What is this building?\" Blaze asked as they passed by a three-storeyed building, somewhere near the middle of the fortress. It was an unmarked building and the two angels he saw heading in did not look like soldiers.\n\n\"Er, I am not entirely sure,\" the soldier muttered, seeming a little uncomfortable.\n\nBlaze decided not to pry further.\n\nFinally, the guide led them to the HQ at the center of the town. Its entrance was hidden underneath a small mound, and the guide led them through a large concrete-walled hall filled with desks and angels doing paperwork. The hall was not much to look at, but it seemed relatively comfortable for an office space, with an energy-stone driven air-ventilation system and comfortable-looking chairs. The walls were covered in red drapes that displayed the insignias of the Xian Empire and the Heavenly Union. The angels seemed to be busy, but they worked in leisurely postures without displaying much decorum.\n\nSoon, they reached a door with a copper plaque that said \"General\". A short knock and an inviting response later, they found themselves inside the office.\n\nThe office was a brick-walled room with rows of cabinets lining the walls. The back wall displayed two large maps of Xian and the Anyin Province.\n\nThere were two big redwood tables, one at the back of the room and another to the side. The one to the side was currently unoccupied, but the one at the back had the General sitting behind it. There was a single stack of papers in front of her and a quill pen to the side, but the General's attention was on Blaze.\n\n\"Lady Bru\u00ec q\u00ed \u00e9r,\" Biyu elegantly introduced Blaze, and stepped to the side.\n\nThe General nodded at the Captain, with an easy smile. \"If there is nothing else, Captain, you may take your leave. Rest assured, Bru\u00ec q\u00ed shall be safe under my care,\" she said, perfectly enunciating each word with an unforced ease.\n\nBiyu gave the General a crisp salute and then turned to Blaze. He nodded and thanked her, before she gave him a respectful ama and took her leave. Their guide seemed a little puzzled, but she led the Captain out and closed the door behind them.\n\n\"It is a pleasure to meet you, General Wu Mei,\" Blaze said, giving her a curt bow. \"I will be under your care.\"\n\n\"Have a seat, Rhyka Fenghuang,\" she said, rising and walking around the table to lean against its side as Blaze walked over to take a seat.\n\nThe word for princess in Avestan was Rhyka, technically a genderless word, but Blaze had insisted early on that people refer to him as \"Rhyk Fenghuang\". These days, however, he just imagined that people were calling him \"prince\", instead of making them actually say it. It made him feel very mature.\n\nWu Mei held him with an appraising gaze. There was a gentleness in her eyes, which he had not expected from a battle-worn general.\n\nWu Mei was not the most imposing general that Blaze had met in his time on Azra-El. She did not have the flair of Elyssa's mother nor did she have the discernible strength of Freja Nerthusdottir. In fact, if one did not know her to be a general, it would be easy to mistake her for a meditative monk.\n\nShe was moderately tall for a Xian angel, with dark hair held up in a simple topknot. She wore a dirty-silver-colored breast plate over a pale white gown, grey woolen gloves, and cloth shoes. Everything about her was neat, comfortable, and practical.\n\nHer features were pleasant, but otherwise did not leave a lasting impression. However, from what Nezha had told him, General Wu Mei was not an angel who made strong first impressions. One needed to have a deep and meaningful conversation to even begin to understand her calm and collected intellect.\n\nAnd that was the reason why Blaze had chosen Wu Mei to teach him about warfare. She was not the strongest or the brightest of generals, but she was someone who got results, and was worshipped by her subordinates.\n\n\"I have read a detailed report of your abilities and your character,\" Wu Mei finally said. Her voice was pleasant and tranquil, like a wind chime in a soft summer breeze. \"You will make a terrible soldier, Rhyka Fenghuang. Thankfully, we do not want you to be a soldier, or a general for that matter. We simply need you to understand what it takes to be one.\"\n\nBlaze could not tell whether she was criticizing him or simply stating a fact. So, he chose to simply acknowledge her words for what they were, and nodded. \"Please, just call me Blaze or Bru\u00ec q\u00ed .\"\n\nThe General's eyes lit up and her smile widened.\n\n\"Wonderful,\" she said, reaching for the page on top of her stack. \"Here is your schedule for the foreseeable future. Since you are here as a squire, whilst pretending to be a minor noble, your tasks will reflect that. You will meet me each day at six in the morning and we will discuss various topics on the art of warfare. After that, you will attend to your duties as a squire.\n\n\"I have also compiled a list of materials that I expect you to read each day. I hear that you are a voracious reader, so the amount should not be a daunting task. My daughter shall deliver the books to you.\n\n\"You will be sleeping in the visiting officers' quarters. Lieutenant Brija Dhara arrived a week ago, and you will share a room with her. As you are a simple squire, I cannot provide you with better accommodations, without raising questions.\"\n\n\"No, that is more than enough. Thank you,\" said Blaze.\n\nAfter the tournament, Brija had served as his personal guard for five years before applying to the Aranyan army. She had been immediately accepted as a probationary officer, and within a year, was promoted to the rank of Second Lieutenant. It had been two years since Blaze had last seen her, but when he decided to learn under General Wu Mei, he had invited her to join him.\n\n\"You are welcome. Let us get started with your first lesson. From tomorrow, bring your knight along. I have spoken with her. She has talent,\" she said, returning to her seat.\n\n\"Brija? She is not my knight. She is my friend.\"\n\n\"Oh?\" Wu Mei seemed surprised, but did not pursue the matter further.\n\n\"An ancient text on the art of war lists seven factors that determine the outcome of a war: Faith of the people in their leaders; climate and weather; terrain; lifestyles of the people; capabilities of your commanders; strategy; and the discipline of troops. Here, I am talking about war and not battle. What do you think is the distinction between the two?\"\n\n\"Er...\" Blaze stuttered, surprised by the suddenness of the question. \"You can win the war even if you lose a battle?\" he offered.\n\n\"Sure, but that is not quite the answer I am seeking.\"\n\n\"Hmm... War spans a long time while battles are shorter. War affects nations and the lives of their people, while a battle may only have a regional or strategic impact. War is governed by the will and capacities of nations and their leaders, while battles are controlled by generals and such. Also, I feel like logistics play a more important role in war than in battles...\"\n\nWu Mei nodded. \"It is an acceptable answer. However, I hope that by the end of your time at Mirian, you will be able to give me a more concise and confident reply. For now, we shall discuss the seven factors in more detail. If we have time, we can also talk about the difference between grand strategy and military strategy.\"\n\nThe lesson continued for about an hour before the General went about her daily business, bringing Blaze along to shadow her.\n\n***\n\nLater that evening, Blaze was led to his quarters by another soldier. When they reached his room, he thanked the soldier and stepped inside, closing the door behind him. He found Brija standing in the middle of the room, staring at him with an unusual fervor in her eyes.\n\n\"Hey, Brija. Long time no see,\" he smiled.\n\nBrija gave him a deep bow.\n\n\"Thank you!\" she said, her voice cracking with emotion. Then, she stood up straight and looked at him with misty eyes.\n\n\"For all those years that I served under you, you were so kind to me, yet I never expected you to pay attention to my dream and pave me a path towards that dream. Words cannot express my gratitude, so I shall respond with my actions.\n\n\"I have already sworn an oath to Aranya and Princess Ila, but with all my heart I wish to swear another oath to you.\"\n\nBlaze immediately understood what Brija was trying to do.\n\n\"Brija... Stop. You are my friend. I did not do this expecting something in return,\" he said, walking up to her and taking her hand.\n\n\"I know you see me as a friend, Rhyka, and maybe in another life, I can return that friendship. But in this life, my heart does not permit that. I beg you to accept my fealty,\" she pleaded.\n\nBlaze searched her eyes and found an unwavering conviction in them. He sighed as he remembered how Wu Mei had referred to Brija as his knight. Had she known that this was going to happen? Maybe she just understood the heart of a soldier.\n\nHe was never going to ask if he was worthy. He had too massive of an ego to utter such words. Besides, Brija was not someone who would follow him with blind conviction. If he erred, he expected her to state her mind.\n\nSo, he stepped back and pulled out his Txiki needle.\n\nJoy sprouted in Brija's eyes as she fell to her left knee and bowed her head. Brija came from a poor Aranyan family. To her, being knighted by a Princess was a dream come true.\n\n\"Speak your vow,\" Blaze said, placing the needle on her right shoulder.\n\n\"I, Brija Dhara, swear that as long as it does not go against my first oath, I shall fight for you with all my heart, and defend you until the last spark of life in my body and soul is snuffed out,\" she proclaimed, clearly and resolutely.\n\nSuddenly, Blaze felt his shoulders grow heavy, and a spark of understanding as to why Brija felt joy sprouted in his mind. By giving him her trust and life, she was placing the weight of her soul on his shoulders--he could see a strange sort of freedom in that.\n\nBlaze moved the needle off her shoulder and gazed at her silver-haired head. \"Arise,\" he said and Brija slowly stood up. \"Brija Dhara, I do not have an army, but if I ever do, you shall be my first knight.\"\n\nI wonder if I can convince Ila to hand Brija over to me, permanently?\n\n<p align=\"center\">oOo</p>\n\nLE 642, 22<sup>nd</sup> Liber\n\nBlaze and Brija stood on the ramparts of Jinshanling, gazing at the distant speck that was Fort Chinka of the demons. Standing atop Mt. Emei, perpendicularly across from Fortress Mirian, Jinshanling was a part of the Great Barrier of Xian, an array of interconnected fortalices along the Tian Shan mountain range. Each fortalice held a battery of artillery, able to easily flank adjacent fortalices, spaced around one or two yonders from one another. Smaller guns aimed down the slope of the mountain to prevent the rare attack over land. Teams of angels constantly patrolled over the skies to prevent enemies from sneaking in.\n\nThe opposing Fort Chinka stood atop Mt. Wutai. It was usually invisible in the thick fog that generally hung in between the two mountains, but that morning was especially clear, despite the bitingly low temperature. It was so cold that the soldiers were drinking their morning tea straight from the boiling brewing pots.\n\nBlaze's eyes flicked over to a soldier in white and pale-blue camo who was servicing her custom-made energy-rifle while sitting on the edge of a battlement. The sky-blue-haired angel was quite well-known at the fortress, and Blaze had heard numerous tales about her from the soldiers.\n\nCerulean Death was one of the top snipers of the HU, and a well-aimed energy shot from her customized rifle could even take down powerful arch-demons. But it was not just her marksmanship that made her such an excellent sniper. Everything about her was made to excel at sniping over the snow-covered mountain range--her translucent cerulean fairy wings, her sky-blue hair, and her ice-cold attitude.\n\nAs he waited for General Wu Mei, Blaze recalled the tiresome, grueling squire duties that he had performed over the past three weeks. Initially, he had not seen the point of it. Even Brija's duties had seemed more entertaining than his own. Each day, Wu Mei gave him an hour-long lecture, but the rest of his time was spent running errands, not only for the General, but every ranked officer at the fort.\n\nNow, he completely understood why the General had made him do it. He had begun to understand the minds of the soldiers, the orders of the officers, the weight of their responsibilities, and the soul of the division posted at the fortress.\n\n\"Bru\u00ec q\u00ed,\" Wu Mei's gentle voice brought Blaze out of his musings. She was accompanied by a black-eyed, black-haired ivka--the General's daughter.\n\nThe sniper who had not even spared Blaze and Brija a sideways glance, sprang up to her feet, stomped her right foot and rifle butt on the ground, and gave the General an army-salute; a sharp right fist towards the heart, taken down to the side almost as quickly as it was shown.\n\nThe General acknowledged the sniper and told her to be at ease, before turning to Blaze and Brija.\n\nThe duo gave her their own salutes before she beckoned them to follow.\n\nIt was routine for them to walk around Fortress Mirian or the Great Barrier, while Wu Mei discussed various topics. They usually strolled over the ramparts, checking the condition of the weapons and the alertness of the soldiers. They also inspected the cleanliness of the quarters, had breakfast with the troops, and eventually returned to the General's office for further instruction.\n\nIt was the same that day before they went to the fortalice officer's bunker. The officer cleared out of her room to make way for the General and her students.\n\n\"What do you think is the most important tool or asset in a General's toolkit, Bru\u00ec q\u00ed?\" she asked him, sitting down on the staunch wooden chair, behind an equally old yet well-maintained wooden table.\n\nBlaze walked up to one of the chairs and sat down beside the General's daughter, Wu Xuan Er, who was always present at the lectures. She was calm and composed like her mother, but she also had a spark in her eye, which only seemed tranquil because of the long hours she spent meditating.\n\nShe held her hair in a long, floofy side-knot, and gave off the distinct impression of an eoni, though she was only fifty-something. Ever since he had arrived at Mirian, Blaze had been trying to get her into his cabal, and his bed. However, the older-sister's wiles proved to be too OP for his puerile charm.",
        "\"Strategy?\" Blaze responded to the General's question.\n\n\"No. Information,\" Xuan Er offered, before her mother could answer.\n\nBlaze had been initially unsure when the General informed him that her daughter would be joining him for their lectures, especially since he'd been looking forward to dropping his alter ego when they were alone. However, his fears turned out to be completely unfounded. Even after learning of his true identity, Xuan Er had a strong competitive spirit when it came to the lessons; so much so, that she did not care one bit about Blaze being a rhyka and got into prolonged arguments with him over various issues that arose during Wu Mei's lessons. However, it did not mean that she and Blaze did not get along well. They had actually become good friends; just not in the way Blaze had hoped.\n\nBrija sat silently, nodding at their discussion. It wasn't because she had no opinion of her own, but because she usually did not speak unless she was asked or held a strong opinion that needed to be stated.\n\n\"She is right,\" Wu Mei said to Blaze. \"Do you know why most deities in the army can become generals?\"\n\nBlaze shook his head.\n\n\"Because ninety percent of the strategies that generals use can be found in books. Any individual with an average intellect can learn those strategies and can reference them during wartime. However, the effectiveness of any strategy depends on the information gathered, and how one deals with it. That is what makes a good general. A great general, on the other hand, is one who can do all that, and is also clever enough to deal with the ten percent of situations that have no reference in the books.\"\n\n\"But, don't most deity-generals have a second who is specialized in tactics?\"\n\nA deity-general often fought in battles, so there was always a trusted tactician placed at the Central Command to give out orders. Wu Mei was one of the few generals who did not use a designated tactician.\n\n\"Yes, but it does not mean that a deity-general need not be knowledgeable in the art of war.\"\n\nBlaze nodded before speaking. \"So, you mean that as long as one becomes a deity and puts a little effort into learning the art of war, one can become a good general?\"\n\n\"There is more to it, but yes. Now, I shall describe a scenario. The three of you should discuss it and tell me the steps you would take to win the battle. Remember to keep the general repercussions of the battle in mind,\" she said, before narrating a fictional war-time situation.\n\n\"General,\" Blaze spoke after the end of the lecture. \"You must have heard about the recent discovery of the Qunrun ruins to the north of here.\"\n\n\"Yes.\"\n\n\"Delegations from Taixue, Tir, and the University of Bologna will be arriving on the 28th of Natt. A couple of my friends from Tir are also coming to visit. I wish to spend a few days with them before my departure to the Pixie Lands,\" Blaze requested, demurely.\n\n\"You wish to end your apprenticeship early?\" Wu Mei asked.\n\n\"If you don't mind.\"\n\nWu Mei laughed and said, \"How can I keep a Rhyka against her will? Very well, I shall move forward my plans for your final lessons.\"\n\nBlaze thanked the General and left the bunker, together with Brija, only to be caught up to by Xuan Er. \"Is Elyssa Marigold coming?\" she asked.\n\n\"Yeah, how did you know?\"\n\n\"You have other friends?\"\n\n\"Hey! I will let you know that I have a whole battalion of minions serving me as friends. It's your future too,\" he quipped.\n\n\"Ahaha, if you say so. Anyway, can you introduce me to Elyssa? I have always wanted to have a chat with her,\" she asked, as her usually half-closed eyes lit up in anticipation.\n\n\"Oh, I dunno. What's in it for me?\" Blaze teased.\n\n\"Thanks. I shall look forward to it,\" she said, refusing to indulge him, and quickly turning around to return to her mother.\n\n\"Wait,\"--he grabbed her arm--\"would you be interested in a prank?\" he asked with a devilish grin.\n\n<p align=\"center\">oOo</p>\n\nLE 643, 24th Natt\n\nThe sun had already set when Wu Mei summoned him to the west-facing ramparts of the fortress.\n\n\"Bru\u00ec q\u00ed ,\" she began, staring at the distant mountains. The sun had already set, but the soft glow of twilight lit up the sky in a brilliant orange. \"What is the difference between war and battle?\"\n\nIt was the question she had posed to him at their first meeting.\n\n\"War is decided by grand strategy which takes into account the planning done over the years, while a battle can be decided by tactics that take into account the current situation, and the execution of those tactics.\" Blaze gave her the answer he had been formulating for almost two months.\n\n\"When you first arrived, I said you were unsuitable to be a general,\" Wu Mei said, without giving an opinion of his answer.\n\n\"Yes. I kinda agree as well.\"\n\n\"But, that is only on paper. If you have others by your side who can complement your strengths and balance your weaknesses, or if you can overcome your weaknesses and offset your shortcomings with your strengths, then I see no reason why you cannot lead an army and our nation to victory. However, you still have a lot of growing up to do, so simply keep these words of mine in your mind, for now. \"\n\nBlaze considered it high praise. Wu Mei was not someone who would speak lightly, even if he was a prince of Xian.\n\n\"What are my weaknesses?\" he asked.\n\n\"Some you are already aware of, and some I've mentioned before. The others are the ones I believe you should figure out for yourself. The reason I called you here tonight is because you have not had any field experience. Shirva!\" she said, before calling out to someone.\n\nA figure silently stepped out from behind one of the cannons, surprising Blaze.\n\nIt was Cerulean Death, though she was dressed a little differently than usual. She was wearing a short and tight midnight-blue frock with long sleeves. Her gloves, leggings, and shoes were all the same color. Even her skin seemed to possess a turquoise shade under the moonlight. Her long sky-blue hair was held in a high ponytail, and her famous rifle was in her left hand, sporting a dirty white camouflage.\n\n\"Ensure her safety at all costs,\" Wu Mei said to Shirva.\n\n\"Understood, General,\" she answered, with a quick salute before looking at Blaze.\n\nBlaze walked up to her as she unfurled her cerulean fairy wings. Just like the pixies, fairies hatched with two sets of translucent wings. However, while the pixies had short and wide wings, fairy-wings were long and narrow with tapering ends.\n\nThe angel and the fairy silently sized each other up.\n\nShirva had a pretty face with a sharp nose, small and pointy ears, and narrow hazel eyes. Her eyebrows were thin with high arches that tapered into sharp lines. She had a small mouth with thin lips that were perpetually pursed, making her seem unapproachable.\n\nBlaze extended his arms towards her neck. \"Are you not going to carry me, big sis?\" he asked, in a lilting tone.\n\nThe more serious a person was, the more Blaze enjoyed messing around with them.\n\nShirva glanced at the General, who gave her a nod and a wry smile. At a little under six feet tall, Shirva was petite, even for a fairy; so much so that most angels looked big-boned beside her. Nonetheless, she bent her knees a little and picked Blaze up as he wrapped his arms around her neck.\n\n\"You need to grow a little more, big sis,\" Blaze notified her, even though Shirva was way past her growing age. In fact, her energy signature indicated that she was older than Jie Er. Also, no one knew whether he was referring to her height or something else.\n\nOnce Blaze made himself comfortable in the fairy's embrace, she shot into the sky with a jump and a hefty flap of her wings. She beelined for an eastward-moving cloud, and soon the duo were above it, invisible to any observers below.\n\nNoticing that Shirva intended to move along with the cloud, Blaze tried to make casual conversation with the reticent sniper.\n\n\"What brings you to Xian, big sis? I would call you 'aunty', but you are kinda small.\"\n\n\"Are you patronizing me because I am a fairy, Rhyka Fenghuang, or have I offended you in some other manner?\" Shirva asked, her eyes remaining focused on their surroundings. Her voice was tantalizingly raspy.\n\nBlaze was taken aback. \"You knew?\"\n\n\"No, I simply deduced it. So, why do you mock me in this manner?\"\n\nBlaze sighed in exasperation. Some people are no fun... \"I was not mocking you. I was just being playful. It had nothing to do with your race. You must know that one of my best friends is a pixie, and that I have taken the undine under my wing. To me, race does not matter. I apologize if my words were offensive.\"\n\n\"Such a thing cannot offend me. I was simply curious.\"\n\n\"So, why is a fairy fighting in Xian?\" he asked, again.\n\nThere were less than fifty-thousand fairies left on Azra-El, and most of them lived in the refugee camps of Vaikunheim. Shirva was the first fairy Blaze had seen up close.\n\n\"The demons of Vaikunheim and Anjalnebo have grown used to my methods. Moreover, my family has a long history of working with the Xian, though our races once competed for territory in the west.\"\n\n\"Oh... Still, wouldn't you rather fight in the country where your friends and family live?\"\n\n\"The demons began to take precautions against me, so I could not kill as many as I used to,\" she answered, as if killing demons was the only thing that mattered.\n\n\"Is there a particular reason for your single-minded hatred for the demons?\"\n\n\"Do you really have to ask?\" she asked, as if it should have been obvious.\n\nThe population of the fairies had been close to six million, before the war and the genocide. However, that was hundreds of years ago, and even Shirva was not old enough to have experienced those times. So, Blaze did not quite get her one-track mindset. Maybe there was something more to it, but he decided to not pry further.\n\nInstead, he gave her a tight hug, trying to give her some of his warmth, before planting a quick peck on her cheek. \"I hope someday you find fulfilment in something other than taking lives,\" he told her sincerely, before a terrible realization dawned upon him.\n\nNo! No! No! No! How have I become this? I don't wanna be a princess! Goddess-darn angels and their feminine ways... I need to arm wrestle some mermaids and go mano-a-mano with more Viking-chicks... It's high time for Blaze Hawk and Blazey Balboa to make their debut on Azra-El.\n\nShirva did not bother to respond, nor did she care about Blaze's internal discord. She remained silent as the cloud made its way towards demon territory.\n\n\"Can you fly on your own for a moment? I need to check on enemy positions,\" she asked.\n\n\"Okay,\" Blaze agreed, materializing his wings to hover over the cloud.\n\n\"Stay here. I shall be back in a bit,\" she said, and dove down into the dark cloud.\n\nThe fairy popped back out in a couple of minutes, quickly drew Blaze into her arms, and made him wear a greyish-black fur cloak. The insides of the cloak were completely white. \"Switch it inside out when we land,\" she said, and dove down.\n\nThey passed through the cloud in a jiffy and immediately shot towards the ground, the shadow of the cloud providing enough darkness for the two angels to be unseen. Shirva chose a large rock to land beside and hid behind its shelter. The cloud loomed past the terrain, revealing the bluish-white landscape of snow.\n\n\"What now?\" Blaze asked, while turning the cloak inside out. He glanced around and found himself in a small valley between two mountains. They were surrounded by nothing but snow and rocky projections, and were quite exposed.\n\n\"See that ridge on that mountain? We must get there without being spotted. It will serve as a good sniper's nest.\"\n\n\"But how do we even get there without being seen?\"\n\n\"Lay low, use cloud cover, and keep an eye on the movements of the patrols. I will have to carry you most of the way. Your wings are too conspicuous for this terrain,\" she instructed.\n\nMost flying sentients had excellent distance-vision. On a clear day, Blaze could spot a carnike from a yonder away. However, his eyes needed a moment to focus on objects at such distances. The same applied to others who could see that far. In addition, the night, the mist, and the terrain made things trickier.\n\n\"Okay!\" he enthused, finding it hard to reign in his excitement and nervousness. He had never imagined that he would be allowed to go on a real mission and wondered if his granny or Jie Er would blow a fuse if they ever came to know about it.\n\nShirva, on the other hand, was as calm and cool as ever. She made him sit beside the rock for ten whole minutes before she unceremoniously grabbed him and took off for the next hiding spot.\n\nThus, began their slow and arduous journey through the valley, creep-flying over open spaces, scurrying along when their visages were blurred by the clouds, and hiding behind rocks or any other flimsy cover that they could find.\n\nThe fairy was careful, almost to a fault, making them lie unmoving in the most uncomfortable of places, waiting for that perfect cloud to coincide perfectly with the positions of the patrols. She even took wind direction into consideration; not because it helped her fly better, but because flying against the wind made the translucent feathers of her wings stand up, making her a little bit more conspicuous.\n\n\"What do we do if we are spotted?\" he asked softly, as they made into a thin crevice, narrowly avoiding being spotted by a high-flying patrol.\n\nThe crevice was unfathomably deep and, at most, two feet wide. The two angels hung against the walls with their bodies pressed against each other.\n\n\"We fly as fast as we can and return to base. I will not be able to fight an entire patrol unit. However, we should be safe in most instances. I am a quick flyer, and as long as I am not stuck deep in enemy territory or completely surrounded, I should be able to get you back.\"\n\nBlaze was not too worried. He had an inkling that the General would keep them safe no matter what. She would not have sent him on such a mission if she had not taken the necessary precautions.\n\nHe glanced up at the sky and realized there were no nifty nearby clouds, which meant that they would be stuck in the crevice for a while.\n\nHe shuffled to move to the side, but Shirva held him in place. \"Do not move. It is best to make as little movement as possible in these situations. We may also have to get away quickly. Besides, it is warmer, is it not?\" she whispered and drew him close, so he could sit over her thigh, while she pressed her feet against the wall of the crevice.\n\nBlaze was wearing woolen robes over his shorts, but even with his natural resistance to heat and cold, he still felt the biting temperatures of the mountains.\n\nHe raised a brow, but he couldn't find anything in her eyes. \"Are you treating me as a child?\" he asked.\n\n\"Are you not?\"\n\nIt had been 8 years since his appearance on Azra-El, but his energy signature did not age the way they had presumed. In fact, it was becoming purer, making him seem younger than twenty, as if it were trying to reflect his true age. If that were the case, they wouldn't be able to hide his age much longer.\n\nBlaze sighed and placed his chin over the fairy's shoulder. The sweet smell of hyacinths wafted into his nostrils; it was not a perfume, but her natural odor. It made him calm and relaxed.\n\nShirva began to gently caress the back of his head.\n\n\"Tell me a story, fairy,\" Blaze whispered into her ear.\n\n\"This is not the time for stories, Rhyka,\" Shirva whispered back.\n\n\"Will you tell me a fairy tale, or should I go after some fairy tail?\" Blaze uttered the terrible pun that he had been looking for a chance to use ever since he laid eyes on the fairy.\n\n\"What?\"\n\n\"I am a kid, right? If you don't want me to mess around with ya, you should tell me a tale; a fairy tale.\"\n\nShirva couldn't argue with that logic.\n\n\"A long time ago, in the lands to the west, there lived a fairy who had made herself a name as one of the greatest hunters of her time. She hunted all sorts of creatures, from nefarious Mardykhors to rampaging cerafents and cattle-devouring Boitata and xenodons; she was even said to have killed a titanoarachne and a Cerberus, but those are most likely myths. However, she never killed for sport, and only hunted those creatures that posed a real threat to sentients.\n\n\"During the initial years of her career, when her name was only known in Fehimmel, the fairy nation, a Xianian traveler heard of her skill and reported it back to her Empress. The Empress immediately summoned the hunter to her castle.\n\n\"During those days, the Xian Empire stretched all the way to the Infernal Desert, and the regions bordering the desert were being plagued by an angel-eating Quetzal. Usually, Quetzals do not target sentients unless they are threatened. There had also been no prior instances of them viewing sentients as food. However, this Quetzal, known as the Jubba Quetzal--after the place where the first incidents were reported--targeted small towns and villages, carrying away lonesome angels.\n\n\"There were many rumors as to why the Quetzal had turned angel-eater. Some claimed that its mother or child had been killed by an angel or a demon, while others said that it was a Quetzal trained by the demons to wantonly kill angels. Whatever the reason may have been, it needed to be culled.\n\n\"The Empress had hired many hunters and even sent some of her best warriors to kill the Quetzal, but the creature proved to be too elusive. It never consistently attacked the same place and always avoided places with larger populations. It also had a wide hunting area, stretching almost four hundred yonders, and usually, by the time the hunters heard of its appearance, it was long gone.\n\n\"By the time the fairy arrived at Xian, the Quetzal had already killed more than three hundred angels. The Empress beseeched her to get rid of the menace, but the fairy laid out two conditions. She wanted the Empress to retract the bounty placed on the Quetzal and recall all the other hunters she'd dispatched. Her reasoning was that the bounty would cause people to kill innocent Quetzals, while more hunters would mean that the Quetzal would become more cautious.\n\n\"She also asked the Empress to send out a decree that all angels living near the Infernal Desert should live and travel in groups, until the Jubba Quetzal was killed. The Empress consented.\n\n\"Armed only with her trusty rifle, the fairy traveled to the border of the Infernal Desert. She visited all the villages that had been attacked and noted down when and where the Quetzal had struck. Soon, she figured out a complex pattern that none of the other hunters had noticed. The Quetzal's habits depended on the terrain, the moon's phases, and the activities of the angels.\n\n\"Using this information, the fairy narrowed the location of the Jubba Quetzal's next attack to a range of fifty yonders. She then requested a few fast-flying scouts to act as bait. As expected, the Quetzal attacked, and the scouts quickly informed the fairy of her location.\n\n\"It was a massive Quetzal, rumored to have been 35 feet tall, with a wingspan of 80 feet. However, when the Quetzal spotted the fairy, it immediately retreated, and the fairy followed it into the desert.\n\n\"We only know of the fight through the accounts of the fairy herself, and the fairy was not much of a talker. The fight apparently lasted for five whole days, during which she fired her weapon a hundred-and-twenty-one times. It was a fight of endurance, and ultimately, the fairy and her rifle won. The Quetzal was put out of its misery by a final shot to the head.",
        "\"The Empress rewarded the fairy handsomely, and she became famous throughout the continent as the 'Bane of Jubba'. For the next hundred years, the fairy traveled throughout the continent, working both as a hunter and a conservationist before retiring as a wealthy baron. She did not pick up her weapon again for another hundred years, but that is a story for another time,\" Shirva finished and glanced at Blaze.\n\nAt some point during her story, Blaze had nodded off against her cheek. She looked at him with a somber smile and continued to brush his hair.\n\n***\n\nBlaze was jolted awake when Shirva jumped out of the crevice and shot straight up into the night sky. He looked around and spotted a patrol in the far north. However, they did not seem to have noticed them. And, if they did, it was likely that they thought it was a big bird; Shirva's camouflage made it really difficult to make out her visage.\n\nThe moon was directly above the cloud that they were heading for, and it cast a dark shadow over the ground. Soon, the two angels were inside the cloud. This time, they simply hung by the base, watching for the ideal moment to shoot towards the ridge.\n\n\"All of this seems kinda orchestrated, somehow. How often can we get so lucky with the clouds?\" Blaze asked.\n\nShirva snickered. \"It may appear that way, but throughout this journey, I have been very flexible, constantly tweaking my plans and where we were headed. Our final destination was dependent on how the weather behaved and how the landscape provided us cover. However, I cannot argue against being lucky, tonight.\n\n\"Hold tight and do not move. This is our final stretch. If we do not get spotted, we will have our sniper nest.\"\n\n\"What am I even here for?\" Blaze sighed. He had been nothing but excess baggage.\n\n\"You will learn that soon enough,\" Shirva answered, seriously.\n\nIn a few minutes, the cloud reached the rocky projection that hung off the mountain. They immediately dived towards it.\n\nAfter they landed, as Blaze lay flat against the snow, Shirva quickly dug out a hole. When the hole was large enough for two, they lay down inside it and covered themselves up with the dug-up snow.\n\nOnce they were settled in, Shirva pulled out her rifle and placed it over the snow ledge that she had created.\n\nThe fairy was a lefty, and since Blaze was on her right, he could fully appreciate the weapon. It was a three feet long custom-made rifle, whose shape somewhat resembled a bullpup rifle from Earth. However, unlike Earth's rifles, the barrel was relatively short. It sported two large nonstandard energy stones, one socketed underneath the stock and the other inside the butt of the rifle. Below each energy stone was a groove in the weapon's frame, which allowed for the user to channel energy into the stones.\n\n\"No offense, but getting here seemed like it could be done by anyone, once they get used to it,\" Blaze said, as Shirva laid her sights on Fort Chinka, which was a little more than a yonder away from their position.\n\n\"You think it is easy, do you?\" Shirva smiled. \"I have killed 2729 demons over the course of the past eighty years. That may seem like a large number, but it is miniscule if you count the number of days in all those years.\n\n\"The fact is, most of my ventures end in failure. Most snipers are fine with bagging ten a year, though they are more prolific during wartime. If it were easy, they would not have such a poor performance, and I would not be so famous.\n\n\"Just because it appears easy does not mean it is. We were lucky to have made it this far on your first mission.\n\n\"And, even if we have made it this far, it is not guaranteed that I will be successful. I may be capable of killing a weak demon with a single shot, but for most, I need to wait until their energy defenses are down. Sometimes, I am not even positioned for a good shot. When that is the case, it is best to leave without being noticed. It took my teacher and I two weeks to find my first kill.\"\n\nBlaze nodded, and another question popped into his head.\n\n\"How do you retain your angelic nature when you have taken so many lives?\"\n\n\"I do not see it as taking lives. For every demon that I have killed, I believe I have saved as many angels or more,\" Shirva answered, calmly. There was not even a hint of remorse in her voice, and Blaze did not know how to feel about it.\n\nHe waited in silence as Shirva surveyed the fort. Fort Chinka was a relatively small fort that was mainly used by the demons as a supply station for their border patrol. It housed a few cannons, but the fort could in no way handle a focused attack by the angels. The demons had similar forts all along the border, but they served more as watchtowers and waystations, rather than defensible structures.\n\nAfter a few minutes, the fairy pushed her weapon to him. \"Take a look,\" she said.\n\nBlaze took the weapon and felt its weight. It was heavy but felt good in his hands. He placed his chin over the butt and peered through the scope.\n\n\"What do you see?\" Shirva asked.\n\nBlaze carefully analyzed the fort before answering. \"Eight demons. Four over the ramparts and four below. There may be more inside. They seem alert, so they probably have their body reinforcements ready. There are two cannons facing this direction, so we must be wary of them if we fire a shot.\"\n\n\"Very good. What would you do now, if you were a sniper?\" she asked.\n\n\"Um, pick a target and shoot? They all seem like regular demons. I am sure you could kill any of them with a single shot.\"\n\n\"But you are not me, so you wait. Until you find the most opportune moment that guarantees a kill. Even I would wait in this situation. We are not in active war, so I do not care about regular demons. That fort has at least two archdemon officers, and I have found myself a good spot, so I will wait until I have a shot at one of the archdemons,\" she explained, pulling out a spyglass.\n\nFor the next hour, Shirva kept watch on the fort through her spyglass, while Blaze imagined various scenarios of him picking off the demons with his sniper rifle. Almost all of them ended with a \"Boom, headshot!\"\n\n\"Looks like we have found your target,\" Shirva suddenly said, breaking his fantasy of storming the fort, together with the fairy.\n\n\"That ivka?\" he asked, spotting the young demon who had appeared on the ramparts, serving some beverage to the demons on guard duty. Blaze couldn't accurately judge her age from the distance, but she didn't seem to be more than seventy.\n\n\"Yes.\"\n\n\"But, she is not even a full adult,\" Blaze said in consternation.\n\n\"And you, are only a child,\" Shirva responded.\n\n\"You want me to kill her?\"\n\n\"Yes. Have you never considered killing a demon?\"\n\n\"Yes, but-\"\n\n\"Charge the weapon,\" she said, in a tone that told him that it was an order.\n\nBlaze pressed his fingers against the energy stones of the rifle and began to transfer his energy. There were two types of energy stones: The naturally-formed ones like the ones Shirva used in her rifle could be charged really quickly, but their energy retention over longer periods was poor. The second type were the modified ones which were used in day-to-day life, and also as ammunition for army-standard rifles and guns. These had to be charged prior to battle, but they could retain their energy for much longer.\n\n\"That should be enough,\" Shirva said, after a minute. Blaze had used up more than half his energy reserves. \"Take aim.\"\n\nBlaze looked through the scope and set the sights on the ivka, who had begun to chat with one of the demons. He wondered why she couldn't have simply left after serving the beverage.\n\n\"She may be an ivka now, but in a few years, she will be fighting alongside the other demons. What if she is a talented young demon? What if, in the future, she fights against one of your friends and kills them? That Aranyan who follows you around. Imagine her being that demon's victim.\n\n\"Take your time and shoot. It is not like you are guaranteed to make the shot.\"\n\nEnergy shots did not have the same limitations as bullets. They were not as affected by gravity, wind, or the Coriolis effect. However, since he was shooting from more than three miles away, even a tiny discrepancy while firing could make him miss. The chance of him making this shot was extremely low.\n\nHowever, the mere idea of pulling the trigger made his fingers tremble. The weight of that demon's life pressed upon his heart; her desires, her ambitions, the effort she put into reaching the place she was now, the love she received from her loved ones, the love she gave back, the effort that was put into raising her, and the things that she might accomplish if she was allowed to live... A single pull of the trigger was all that was needed to extinguish all of it.\n\nWhat was worse was that he was not even giving her a chance to defend herself. He also did not know anything about the demon. Maybe she was in the army merely to feed herself. If she were attacking him with the intent to kill, Blaze felt he would not be as conflicted. But this, did not feel right.\n\n\"I can't,\" he muttered, weakly.\n\n\"Shoot the demon, soldier,\" Shirva said, harshly.\n\nIf someone had told Blaze earlier that he would hesitate so much to kill a demon, he would have told them that he was not that weak. However, having the ivka in his crosshairs and having the power to dictate her life or death made everything more palpable.\n\n\"I won't,\" he said categorically, pushing the rifle back to Shirva. He could not believe that a few moments ago, he had been drooling over the gun. Now, he felt disgusted by it.\n\n\"We are done here,\" Shirva sighed, putting the rifle in her space-ring.\n\nShe grabbed Blaze by the waist and sprang into the air to head back to Fortress Mirian.\n\nAs they flew, Blaze looked at Shirva's face, in search of a reaction, but he found her expressionless.\n\n\"Are you disappointed?\" he asked, softly.\n\n\"Yes,\" Shirva said, without hesitation. \"But I think I would have been as disappointed if you had fired that shot.\"\n\n\"What do you mean?\"\n\n\"There was no glorious end to this mission, Rhyka. That is often the true nature of war. The only positive is that you get to retain your innocence for a little longer.\"\n\nA demon patrol spotted them and began to give chase. Blaze fell into silent contemplation as Shirva picked up her pace. They were in no danger of actually being caught.\n\nThe demons came after them until they reached Jinshanling, before turning back. The angels at the fortalice reacted, but once they realized that it was Shirva, they let them through.\n\n\"Tonight,\" Shirva began speaking once they were inside the safety of Xian, \"you had the freedom to make a choice, especially because of your station. A regular soldier cannot afford to do the same. She can most certainly not go against the orders of a superior.\"\n\n\"I understand,\" Blaze said, quietly. He always thought that he would not make a good soldier, and now he had the evidence.\n\n\"No, I do not think you do,\" Shirva continued. \"Queens and princesses can choose to not take lives with their own hands. However, if a soldier kills on the orders of a superior, the life taken is on the superior. As such, it is the rulers who bear the ultimate responsibility. You may escape the trauma of physically taking a person's life, but you cannot run away from your ultimate responsibility.\"\n\nBlaze simply nodded, and Shirva chose to not say more.\n\nOnce they reached Mirian, Shirva took him to the General's quarters. Wu Mei took one look at Blaze's forlorn expression and asked him to retire for the night.\n\n\"Thank you,\" Blaze said to Shirva, with a small bow, before leaving.\n\n\"Live well, Rhyka,\" Shirva told him, with a gentle pat on the cheek.\n\n<p align=\"center\">oOo</p>\n\nBlaze spent the next couple of days in the gloom caused by his first on-field experience. However, Wu Mei's final lessons took his mind off things, while the anticipation of meeting his friends brought him some cheer.\n\nOn the morning of the 27th, Blaze visited Wu Mei's quarters to bid her farewell. He had already informed and thanked the other officers and the friends he had made over his stay, the previous night. They had all given him a cheerful goodbye, although they did not yet know his true identity.\n\nBlaze found Wu Mei in her nightgown when he entered her simple yet comfortable-looking room. There was not much decor except for the elaborate maps hanging from her walls. She made him sit down and offered him some tea.\n\n\"Thank you for everything, Mon Wu Mei,\" he said, with utmost sincerity, after taking a sip from the freshly brewed Anyin tea. The tea leaves, unraveling in the cup of hot water, gave off a stimulating fragrance that cleared his mind and removed any lingering drowsiness. The tea also had a hint of refreshing cinnamon and a citrusy scent.\n\n\"You are welcome, Bru\u00ec q\u00ed . You have been a great student, and it has been a pleasure to teach you. I truly hope that this will not be the last time you seek my guidance. I believe these old feathers of mine have a lot more to offer,\" Wu Mei gave him a smile that reached her eyes. It was the type of smile that could mellow the harshest of angels.\n\n\"I will. However, I do think I need some time to soak in everything that you have taught me,\" he said, picking up the sugar and cinnamon-coated biscuits that she provided with the tea.\n\nHe munched on a few biscuits and finished the tea before removing an object from his space-ring.\n\n\"This is for you,\" he pushed the disc-shaped object towards Wu Mei.\n\nIt was about ten inches wide with eight slots in a symmetrical arrangement. A rotatable wheel with a knob was mounted over the disc, and eight tiny lights in conjunction to each of the slots were placed in a circle at the center. The lights and slots were both numbered.\n\n\"What is this?\" Wu Mei asked, picking up the device and playing with the wheel.\n\n\"I have been working on improving VPs. Trying to simultaneously entangle more than two VP stones.\"\n\n\"Have you succeeded?\" Wu Mei's eyes widened.\n\n\"Unfortunately, no. I made this device on the side. It is not much to look at, but it is functionable. I plan to make improvements in the future. You can slot in up to eight VP stones, and when any one of the slotted VPs ring, the corresponding bulb will light up. You will then have to turn the knob to that slot to turn it on. Then, you just transfer energy to the device and speak into it, normally.\n\nIt has an energy stone inside, so you only have to activate it once. You can also push the knob towards the center to connect to multiple VPs at the same time. But I advise against it, as there will be a lot of interference. I am trying to solve that problem. Anyway, I hope you find some use for it. I wished to give you something that I made as a token of my appreciation for your tutelage,\" Blaze explained.\n\n\"Thank you! I quite like it,\" Wu Mei said, as her eyes lit up like a child who'd found an interesting toy. She immediately pulled out several VPs and slotted them into the device.\n\nThen, she VP-ed her daughter, and some of her officers, making them call her back to test the device. It worked exactly as it was advertised.\n\n\"What do you call it?\" she asked, turning the wheel to call Xuan Er once more.\n\n\"What now, mother?\" Xuan Er's slightly irritated voice came from the other end.\n\n\"I call it the Multi-Answering Machine. MAM for short.\"\n\n***\n\nAfter he bid farewell to the folks at Mirian, Blaze and Brija travelled to the city of Anyin--Brija had been given a couple of days off to escort Blaze around the city.\n\nThe Duchess of Anyin lived at her own castle, a few yonders away from the city, so Blaze had free access to her mansion inside the city.\n\nHe spent most of the day exploring the city and conversing with its resident. It was late in the evening by the time they reached the mansion, and he decided to use the bath before heading to bed. Though the fortress at Mirian was well maintained, it was not made for comfort, and after almost two months of living there, Blaze itched for a relaxing bath.\n\nThe Duchess' mansion housed a grand bath inside a high-ceilinged room, decorated with a mosaic stone floor that gave it the appearance of a bath house. Rugged yet clean marble steps led into a four-foot-deep pool of heated water.\n\nBlaze entered the bath alone and closed the sliding double doors. He left his clothes in the changing room and headed to the wash area to clean himself before entering the pool.\n\nJust as he sat down on the stool, he heard the doors of the bath open. He quickly closed his thighs, thinking it was some overeager maid wishing to help him in some manner. He relaxed when he saw that it was just Brija.\n\n\"May I join you, my Lord?\" she asked, quickly closing the door behind her.\n\n\"You don't have to call me that when we are alone, or when we are outside of Xian,\" he answered with a sigh.\n\nHe had long since accepted that titles were an important part of angelic culture, especially in Xian, and to be honest, he felt a guilty pleasure in being addressed with them. However, he also did not wish to be viewed as a noble or a superior angel.\n\nYet, as a prince, Blaze represented Xian, and it would be a slight to the people of Xian if he were treated as a commoner. He wished it were not so, but one could not change the culture and minds of people by forcing their principles on them.\n\n\"I know,\" Brija said, heading to the changing room. Blaze filled up a bucket of hot water while Brija removed her clothes, and when he heard her come out, he turned around.\n\nSince the day Brija had sworn to be his knight, Blaze had not made any advances towards her. The uncertain side effect he had on the people who had a physical relationship with him always weighed on his mind. It did not matter much when the only effect was that people did not wish to harm him, but what if it was stronger? What if the reason Brija had devoted her allegiance to him was because of some magical charm?\n\nRegardless, he did not mind appreciating a beautiful view when it was presented to him.\n\nAs for him being able to control his urges, he had been getting better at it, though he usually managed to bring someone to help him out on longer trips.\n\nBrija was around seven feet tall, and her time in the army had filled her out a little. She was now more powerful looking, but not in an unattractive way. Her silver-colored hair was still short, and it provided a great contrast against her dark honey-colored skin.\n\nShe stood in front of him with folded hands and let him drink in the sight of her. An unfettered thrill coursed through her body as she saw the look in his eyes. She saw desire, a hunger which she felt that no other angel could ever have towards her. Yet, strangely enough, she also felt the same hunger towards him.\n\nHowever, things had changed since the last time she had experienced his otherness. Blaze was now a prince, one she had vowed herself to, and she could tell from the time she had spent with him that a lot had changed. He was now more formal, more regal, and had walls up that had never been there before.\n\nShe would have to be careful in how she approached him, if she were to elicit the reaction that she hoped for.\n\n\"May I wash your hair?\" she asked.\n\nBlaze quickly swiveled around on his butt and presented his back to his knight in dermal armor. Brija pulled up a stool and sat behind him, reaching for the hair tie that held up his hair.\n\n\"You always wear this, Rhyka,\" she stated, running a finger over the interwoven stones that made up the hair tie.\n\n\"I think I like 'Lord' better,\" he said wryly, before answering her question. \"My mother gave it to me. Her nagging is also the reason why I wear my hair long, instead of keeping it short like yours.\"",
        "Brija pulled the hair tie, and his red hair fell in a cascade of curls that reached his upper waist.\n\n\"Your hair is exquisite,\" Brija said, running her fingers through his locks. \"It is no wonder Min Jie Er wishes you to keep it long.\"\n\n\"Well, it is impractical and a chore, especially when I don't have the imperial maids to brush it for me.\"\n\n\"You must really love your mother,\" she said, picking up a mug of hot water and gently pouring it over his head. Blaze loved the warmth it brought to his body.\n\n\"Well, duh. Don't you love yours?\"\n\n\"I did not get to spend much time with mine. She passed away when I was less than a year old. Even her appearance is now a distant memory. I was raised by my aunt, who was kind, but did not have much affection for me,\" she said, continuing to wet his hair.\n\nBrija had never talked about her family before.\n\n\"I am sorry,\" Blaze said, sadly. The bond between angel mothers and their children was strong, especially considering their long and mostly solitary lives.\n\n\"No, no, I am not really that sad about it. However, it always makes me happy to see a sweet bond between a mother and her child. Min Jie Er is a kind and wonderful angel. It is no wonder that you turned out the way you are.\"\n\nBlaze found himself nodding along, until Brija's last statement. Instinctively, he wanted to deny it. \"My parents. Earth. They raised me. I am the person I am because of them!\" were the words he always told himself. However, Brija's words made him reach an unsettling realization.\n\nHis memories of Earth were fuzzy at best. They had faded to such an extent that he couldn't even clearly recall his parents' faces. His self from Earth was slowly fading, which meant that the person he was today could not be entirely attributed to his real parents. If Jie Er had not picked him up, he would certainly not be the angel he was today, let alone have everything else that she had given him. As such, Brija's words made him realize that Jie Er had, in fact, raised him.\n\nBlaze let out a muted sigh. He never quite been able to come to terms with his relationship with Jie Er. However, he suddenly decided on something that he had been contemplating for a while.\n\nBrija lathered up his hair and washed it clean before bunching it together and pushing it over his shoulder. Then, without another word, she began to soap his back.\n\nBlaze sighed in comfort as he felt her long hands and fingers. Suddenly, he felt Brija grip his sides with her palms and two strong thumbs firmly ran along the muscles beside his clavicles.\n\n\"Oooh,\" Blaze let out an involuntary cry of pleasure as his back strung up like a bowstring. The muscles beside the clavicles bore most of an angel's weight while flying. As such, there was almost no angel that did not like getting their clavicles massaged.\n\n\"There is a niggle over here, and most of your back is stiff,\" Brija said, applying pressure to that niggle with her thumb.\n\n\"I've been rushing around without a break for the past year. I guess the stress has been building up. Anyway, I hope my visit to the Pixie Lands will make for a good holiday. You are welcome to tag along if you like.\"\n\n\"Thank you, but I still have much to learn from General Wu Mei.\"\n\n\"Yes. I have spoken with General Wu Mei regarding your situation. You can stay at the fortress for as long as you wish. And, since you are my knight, you will also be considered as a part of the Xian's imperial forces in regard to pay and service.\"\n\n\"Thank you. Now, as a token of my gratitude, let me give you a massage. I hear that I have good hands,\" she said, pressing his shoulders.\n\n\"Mmm... Just my back, then,\" Blaze replied.\n\n\"Very well, please lie down over there,\" she said, pointing at the stone platform by the side of the washing area.\n\nWithout further ado, Blaze climbed over the four-foot-high platform and lay down on his stomach, with his head resting over his hands. The cold surface was a little uncomfortable, but Brija quickly solved that by pouring hot water over him.\n\nAs he was already too wet for oil, she lathered him up again, before beginning to massage his back. She began with his shoulders and neck, deftly using her fingers to knead out the kinks. The tension in Blaze's shoulders eased and he felt his body relax, despite the naked angel beside him.\n\nSuddenly, a ringing began to sound from Blaze's space-ring. He considered ignoring it, but answered it, nonetheless.\n\n\"Greetings, Princess Fenghuang Shangdi. Will you receive a private call from Min Jie Er Lokra?\" a pleasant voice asked him from the other end.\n\n\"Yes.\"\n\n\"Thank you. Feel free to speak without reservation. Your conversation is private and will not be heard by a third party,\" she said, before connecting to Jie Er's VP.\n\n\"Blaze Er,\" Jie Er's voice was soothing despite the steady buzz of the static in the connection.\n\n\"Hey, Mother,\" Blaze greeted.\n\n\"Are you with someone?\"\n\n\"Whatcha' doing, brat?!\" Rebecca's cheerful voice followed Jie Er's question, from the background.\n\n\"It's just Brija. Hey, Aunt Becky. Wassup?\"\n\n\"Hello, Brija. Hope your stay at Mirian has been fruitful. Have the two of you left the fortress yet?\" Jie Er asked.\n\n\"Greetings, Lady Jie Er and Min Rebecca. I am quite grateful to be here at Mirian.\"\n\n\"We are currently housed at the Duchess of Anyin's mansion,\" Blaze cut in. \"It's pretty neat. I have it all to myself at the moment. Wish I could just spend the entire week here with Ely and Siof.\"\n\n\"I do not see why you cannot.\"\n\n\"Yeah, but I am convinced I will have as much fun at the ruins, if not more. Choices, choices...\" Blaze let out a sigh as Brija hit a good spot on his back.\n\nJie Er and Rebecca laughed.\n\n\"Do you need anything from Varan?\" Jie Er asked, after a moment.\n\nJie Er had been summoned to the capital of Xian, for reasons he was not privy to, and Rebecca and a small platoon, including her squad mates from the time she was still a lieutenant, were going to be her escort. She had decided to make a detour to see Blaze on her way to Meihuacheng.\n\n\"Not really...\"\n\n\"I am bringing you some new clothes to wear in the Pixie lands. I hear it is quite warm over there, so you need proper attire. I have also packed a few sets of new underwear from Aunt Aggie. There is also a space ring full of snacks in case you do not like the food. It is too bad that proper meals do not last very long in space-rings. Oh, I also added some notebooks and quill pens. Anything else?\"\n\n\"I will be visiting them for one month... I am also sure that all of those will be available over there,\" Blaze sighed, exasperatedly.\n\n\"If she could, she would have packed herself and your entire room,\" Rebecca snickered.\n\n\"Anyway, the reason I am calling is because I wish to bring a small gift for General Wu Mei. Do you have any ideas?\" Jie Er asked, brushing aside Rebecca's comment.\n\n\"You don't have to do that. I already gave her one of my prototype MAMs. She quite liked it, if I may say so myself,\" Blaze said proudly.\n\n\"Be that as it may, I still have to give her something as your mother.\"\n\n\"Hmm. I do not know much about the General's tastes, but Xuan Er likes paintings, especially of the night sky with a prominent moon. Maybe you could find a good art piece for her,\" Blaze offered.\n\n\"That is not a bad idea. I shall look around on my way.\"\n\n\"Blaze Er, are you trying to beguile the General's daughter?\" Rebecca asked, impishly.\n\n\"What? No!\"\n\n\"Is she not pretty?\"\n\n\"She is, but that's not the point. We are friends.\"\n\n\"Ah, she must have been able to ward off your advances, huh. I like her.\"\n\n\"Hands off, Becky. She is too young for you.\"\n\nRebecca laughed. \"Do not worry, brat. Maybe if she were a few decades older or if I had not met Jie Er, I would be interested.\"\n\n\"Alright, bye,\" Blaze threatened, before the conversation could devolve any further.\n\nRebecca seemed convinced that he was a master playboy of some sort. If anything, he would argue that Rebecca was the real master. He was convinced that by now she was playing her entire company like a harp.\n\nThey spoke for a few more minutes before they ended the call.\n\n\"Why do you call Min Jie Er, 'Mother'?\" Brija asked, after the call ended.\n\n\"What else would I call her?\"\n\n\"I do not know. It seems very unlike you, to sound so... formal?\"\n\n\"I guess I just got used to the word. Would it not be weird if I suddenly started calling you B-ivka or Bivka, though those would be cool nicknames? It's the same,\" he shrugged.\n\nAnd so, Bivka quietly went back to massaging, slowly making her way down his back. She pressed her palms along his spine and travelled down and over the valley of his lower back, stopping at his tail bone.\n\n\"You have a pretty butt,\" she stated, making Blaze open his eyes and glance at her. He found her intently staring at his bottom.\n\n\"Sheesh. Instead of my hair and butt, can't you compliment my bulging biceps or my impeccably flat chest?\" he commented, wryly.\n\nSuddenly, Brija grabbed his butt cheeks in a not-so-innocent manner, making him jump in surprise.\n\n\"I-I am sorry,\" she said, though her hands showed no indication of moving. \"I couldn't control myself.\"\n\n\"It is alright,\" Blaze said, tucking his head under his arms to hide his blushing cheeks. He had never experienced an angel explicitly lust over his body--at least, he had never noticed it since he was the one that was usually doing the lusting. It made him both aroused and embarrassed; embarrassed because his butt had always been unusually pert and bouncy for a man.\n\nTaking his words as permission, Brija continued to grope his butt in the pretense of a massage. She massaged his legs, but her hands kept returning to his behind. Under her caress, Blaze's legs involuntarily spread apart, and her fingers began to reach places where they had no business being.\n\nBlaze shifted uncomfortably as his aroused member felt squished over the stone surface.\n\nBrija's fingers gently brushed against his balls.\n\n\"Does it hurt?\" she asked.\n\n\"Not really,\" he whispered into his hands.\n\n\"Can you turn around?\"\n\nSighing in relief, he turned around, but he quickly found himself being lifted off the stone platform.\n\nI am finished! I can no longer call myself a prince! He bemoaned in his head, while Brija carried him princess-style towards the pool. She walked down the steps into the pool and gently set him down on the edge, the water gently lapping against his skin.\n\nAs Blaze wondered what she intended to do, she dove away from him, giving him an exquisite view of her streamlined form as she made her way to the opposite end. Blaze scooted closer to the edge and lowered his feet into the water as Brija turned around and made her way towards him. Pushing herself to her feet, she stood waist-deep in the pool and placed her hands over his knees, her breasts wobbling in a most alluring way as they rose out of the water.\n\nBlaze let his eyes wander over her body, honed and toned by years of intense physical training. At seven feet tall, she towered over him when they stood side by side, but the water helped even their heights. Her skin glistened in the wetness of the pool while her arms squished her plentiful mounds, creating a deep valley.\n\nBlaze was so distracted, ogling at this display, that he did not notice when her hands moved up his legs and took hold of his rock-hard member.\n\n\"Brija!\" he gasped, placing a hand over her wrists and trying to stop her before she went any further. \"I must tell you something.\"\n\n\"Can it not wait?\"\n\n\"Doing that with me may have been inducing a Huldra-like effect on you,\" he spoke, hurriedly.\n\n\"What do you mean?\" she asked, puzzled.\n\nBlaze explained Astrid's conjectures regarding his condition.\n\n\"I cannot let you serve me as my knight because of a charm. If you are going to give me your fealty, then you must give it to me out of your own free will and because you truly deem me worthy.\"\n\nBrija contemplated his words for a long moment, made all the more awkward by her grip on his rapidly softening erection, before speaking.\n\n\"I do not know how strong your charm is or if it is even real, but I am not that weak,\" she stressed all her conviction on that last word.\n\n\"You and Princess Ila are very different, but both of you share something in common,\" she continued, taking his hand in hers and placing it over her heart.\n\nBlaze could feel her heart beating to a steady rhythm.\n\n\"You are gentle, kind-hearted, and care about the people around you,\" she said, looking straight into his eyes.\n\n\"Of this, I am absolutely sure. I have known you for eight years and accompanied you for almost five. I have watched you accomplish so many wonderful things, seen you treat the unfortunate with kindness and respect, experienced your intellect and insight, and glimpsed at your potential.\n\n\"These are the reasons why I wholeheartedly chose to serve you. Not for some fleeting pleasure, regardless of how much I desire it. At most, your charm may have let me make the decision a little quicker. So, please do not doubt my choice. If you do, then you are doubting my existence and my conviction.\"\n\nBlaze was moved, while at the same time, he berated himself for doubting Brija. By thinking that his charm could rob her of her free will, he had denied her existence as a thinking being.\n\n\"I am sorry,\" he said.\n\nTaking her head between his hands, he quickly leaned over to plant a kiss on her forehead.\n\nHowever, Brija raised her head to take his lips, instead. The touch of her lush caramel-colored lips managed to completely dispel his inhibitions, at least for the moment, and his dick quickly snatched control of his emotions.\n\nHe moved both his hands to cup her breasts and gave them a squeeze, which earned him a soft moan from the white-haired angel. Encouraged, he continued playing with her full, well-developed breasts, while playing hide and seek with her tongue.\n\nHe let go of her tits and moved his hands to her back, hooking his legs behind her and pulling her into himself until their bodies melded together. The waves caused by their movements bobbed them against each other, sending shocks of pleasure through them both.\n\nThey were pressed in so close that Brija's breasts burst out to the sides. Blaze reveled in the closeness of their bodies, pouring as much of his feelings as he could into a ferocious kiss.\n\nWhen they pulled apart, Brija was panting with more than just breathlessness, and when he looked up into her eyes, he could see the desire building in them. And before he could react, she pulled him back into her luscious lips with a smile that he couldn't quite place, but simply couldn't be arsed to wonder about.\n\nBlaze was overwhelmed by the pleasure coursing through his body--the incessant pressure of Brija's voluminous melons, the oral assault on his tongue, and the grinding of her lower body against his rock-hard erection. This allied assault on his senses was too much to handle, and he feared that he might be pushed to capitulate too soon.\n\nYet, it was still not enough for his knight. Without breaking their kiss, she pushed him back out of the pool and straddled him. She took hold of his fiery red locks with one hand, and with the other, she guided his cock into her wetness.\n\nBlaze wrapped his arms around her lithe back and drew her tight into his embrace, as he continued to push himself into her welcoming depths. He knew that he would definitely blow his load if he let Brija bounce up and down all over his cock, so he moved his hands to her curvaceous peach, holding her down while he began grinding his groin against her.\n\nBrija let out a moan against his mouth as he continued to grind himself against her clit, stirring the insides of her pussy with his cock. She buckled against him, getting restless as her body sought release.\n\n\"For a knight, you are being quite brazen towards your prince,\" Blaze teased, when they broke their kiss.\n\n\"It is my duty when my lord is being irresolute,\" she said coyly, surprising him. He had never expected her to have such a wanton side. She was usually serious to a fault.\n\n\"However, it is your right to punish me for my audacity,\" she added as an afterthought.\n\n\"That's right. I must show ya who's da boss,\" he said, quickly turning from prince to gangsta'.\n\n\"Oh no!\" Brija cried in pretense as Blaze changed his grip so that his hands wrapped around her waist and pulled her even tighter against him. This put him in a good position to start burying his length into her with short, intense strokes.\n\nMeanwhile, Brija found his hungry mouth again, and launched another assault on his tongue, while her hands found the back of his neck.\n\nHer pussy was an inferno of warmth and softness, and Blaze was struggling to maintain his rapid pace, given that he'd been on the verge of blowing a load from the moment she'd jumped him.\n\nHave... to think... non-sexual... thoughts! Quick! Sandwiches! Chips! Apples! Mamgi!\n\nHis erection lurched at that last word because it reminded him of Brija's arousal, and how it tasted like mangoes.\n\nNooooo! Not Mangoes!\n\nHe quickly stopped moving and held himself stiff.\n\nFeeling him stop, Brija broke their kiss with a dissatisfied sound and looked down at him questioningly.\n\n\"Are you tired already?\" she asked.\n\n\"Hah! Ya think I'm gonna let ya go already?\" he managed to reply, with as much bravado as he could muster.\n\nHe put his hands on her upturned ass and pulled upwards, watching as his length extracted itself from her love canal. The head of his cock pulled free with a quick pop, and he could see that his whole length was coated in her lubrication, which turned him on even further.\n\nShe looked down at him quizzically, but before she could say anything, Blaze pulled her lower body towards his face and flipped her around.\n\nBrija let out a yelp as Blaze started devouring her mango-flavoured nether lips. Her scent and her taste were driving him crazy with need.\n\nHe licked and sucked at her pink slit, occasionally dipping his tongue into her hole, while his hands found the hard nubbin of her clit. It was becoming increasingly difficult for Brija to maintain coherent thoughts with his ministrations, and she was gasping and moaning, when she suddenly felt Blaze slide one of his fingers into her other hole.\n\nHer back arched as an unexpected orgasm rippled through her body. Blaze felt and heard her orgasm when he slid his index finger in her backdoor.\n\nEveryone falls for that little trick! Hehe!\n\nHe continued licking her pussy with the flat of his tongue, with strokes that covered her length as she continued to ride out her orgasm.\n\nOnce her spasms passed, he let up on the intensity of his attention to her vagina, while she lay down atop his body to catch her breath. He continued playing with her by inserting two of his fingers into her depth and slowly moving them in and out, while teasing her clitoris with his thumb. At first, Brija only let out small shudders, but once she'd recovered enough, she began moving her hips in sync with his fingers, trying to get his digits as deep inside her as she could.\n\nThis continued on for a few minutes, but soon, Brija decided that it was time to once more serve her lord. She attempted to slide off his body as she wrapped her hands around his erection, but Blaze was having none of it. He grabbed her butt and held her in place.\n\nShe bought her lips close to his length and started licking and kissing her way from the top, all the way to the bottom, before repeating her motions.\n\nBlaze decided to copy her actions and began kissing her lower lips in sync with her kisses on his cock. That drove her crazy.",
        "She decided to up the ante and took the head of his cock in her mouth. Blaze groaned as he felt the warm heat of her mouth enveloping his head, and nearly blew his load when she started flicking her tongue against the underside of his crown.\n\nNot willing to be outdone, Blaze retorted by clamping down on her pussy with his mouth and shoving his tongue as deep inside her as he could.\n\nBrija moaned around his cock as she felt his tongue delve deep within her and squirmed as a series of small orgasms rocked her body.\n\nThe pace of her sucking increased, and she slowly invited more and more of his velvety hardness inside her mouth.\n\nSoon, she was bobbing up and down on more than half his length, while Blaze continued to feast on her mango-flavored nectar.\n\nThis went on for some time, before the stimulation became too overwhelming for Blaze. His body took over, and he started raising his hips, sliding his prick in and out of Brija's mouth. She stopped moving and held on to his hips as Blaze continued pistoning in and out of her mouth, before letting go with a grunt.\n\nBrija felt his climax approach and clamped her lips down on his head as he started unloading inside her mouth. She gently caressed the underside of his sensitive tip with her tongue as she felt his dick spasming. Once he was done, she withdrew from his length with an audible pop and swallowed his load, before turning back to him and giving him a smirk.\n\n\"I thought the point of all this was to teach me a lesson,\" she said as she moved to sit beside him on the marble floor.\n\n\"Wait... give me a moment...\" he panted back.\n\n\"At least there is one part of you that is rising up to the challenge,\" she replied.\n\n\"Whaaa-OOOH!\" was the only thing Blaze could say before he felt her mouth enveloping his length again.\n\nBlaze stared in amazement. His dick had not gone down even after that explosive orgasm.\n\nWow! I must really have been sex-starved to have stayed hard after that!\n\nHowever, his dick was still too sensitive from the recent orgasm, so he pulled himself away from her and sat up.\n\n\"Look 'ere, lass! Ya made this problem an' now yer gonna solve it!\" he said, leering at her while holding his erection in his hand.\n\n\"That looks like more of my lord's problem than my problem.\" she responded.\n\n\"Awh, ya done goofed up now, girlie! Dere ain't nobody awound who's got balls ta talk back to Don Blazione like dat! \" he said in his best mobster impersonation.\n\nBrija had moved onto her hands and knees during their brief conversation, and when she saw Blaze advancing, she turned her derriere towards him and gave it a little wiggle.\n\nBlaze let his eyes roam over her body as he ogled at her long, strong, yet curvaceous back that led down to her perfectly rounded bubble butt, that he knew, from first-hand experience, was firm to the touch, yet soft when groped. Her current position also highlighted her puffed-up labia, which framed her nectar factory like a prized possession.\n\nHe was convinced that there was no way that his butt was prettier than hers.\n\n\"Give to me, my lord!\" Brija cried feverishly.\n\nSo, he gave it to her.\n\nHe knelt behind her and bottomed out inside her pussy in one stroke. She was so wet from all the foreplay that Blaze slid in and out of her with no resistance.\n\nSeeing how aroused she was, he wasted no time with niceties as he began fucking her hard and fast. He groped and mauled her ass as he watched it bounce off his thighs with every stroke. His balls hit her clitoris with each stroke, and that stimulation only added to the already-feverish excitement that was coursing through the Aranyan.\n\nBlaze kept his pace up and could feel her vaginal walls spasming and squeezing his buried member.\n\nHe moved his hands away from her ass and up over and around her lower back, feeling her strong muscles rippling and moving under the force of their fucking. His hands soon found their intended target--targets.\n\nHe grabbed one tit in each hand and pulled her up towards him so that they were kneeling, with Brija's back pressed up against him.\n\nHe slowed down a little as he kissed and licked her nape, her shoulders, and her face. His hands continued to play with her tits, pinching and pulling on her nipples.\n\nBrija let out a satisfied moan when he took her lower lip between his and gave it a thorough examination with his tongue. He could feel that she was on the edge of an orgasm, so he let one hand wander down below, and began to massage her clit in little circles.\n\nSensing her orgasm approach, he sped up again, holding on to a soft, squishy breast with one hand and tweaking her clit with the other.\n\nThe result was instantaneous. Brija let out a long wail as her pussy spasmed and tried to squeeze the intruder within her. Her legs gave out from under her, and Blaze had to hold her tight against him as her orgasm slowly subsided.\n\nBlaze continued fucking her pussy through her orgasm, slowing down when her walls were too constricted, but as soon as he felt her relax, he continued pounding into her.\n\nHis hands wrapped around her torso, holding her against him. When he peeked over her shoulder, he was blown away by the sight of her breasts moving and jiggling around to the rhythm of their fucking.\n\nHe was so hypnotized by this display that he lost track of time as he continued fucking her, alternating his pace, all so that he could watch the myriad undulations of her bosom.\n\nHowever, he was soon reminded of their awkward position by the ache in his knees. The hard marble floor of the bath house was doing a number on him.\n\nI am going to feel that when I'm old.\n\nHe stopped moving in and out of her and leaned forward a bit, so that their bodies rested against each other.\n\n\"My dear knight, do you know which stroke is my favorite?\" Blaze asked her, making small, circular motions with his lower body.\n\nHe needed Brija to be completely unfocused for what he was about to do next.\n\n\"Huh?\" she replied, oblivious to what he was talking about.\n\n\"The baaaaackstroke!\" he yelled, tipping his body backwards and using his momentum to pull the angel along with him.\n\nThere was a loud splash as the two bodies went careening into the pool.\n\nSince the water was only waist-deep at this end, Blaze had no problems with getting his head back up over the water. Or, so he thought.\n\nWhen he emerged, he was staring right into the face of an angry, coughing, and sputtering ivka.\n\nOh, Hela!\n\n\"Er, you alright?\" he asked, sheepishly.\n\n\"Blaze! You almost drowned me!\" she yelled, when she managed to control her coughing.\n\n\"Oopsie?\"\n\n\"It is not funny!\"\n\n\"I am sorry. I did not think it would turn out that way,\" he quickly apologized. \"But you did think it was funny on some level, right?\"\n\nBrija arched one perfectly manicured eyebrow in reply.\n\n\"So, this wasn't what you wanted all along?\" he smirked.\n\nShe rolled her eyes as Blaze saw the ghost of a smile appear on her lips.\n\n\"Maybe if you gave me another chance, I could figure it out,\" he suggested, moving towards her.\n\nBrija walked backwards, leading them to the shallowest part of the pool, where the water was only up to their thighs.\n\nShe turned around and put her hands on the edge of the pool, presenting Blaze with the most erotic view of her arched back and her voluminous ass, turning around to give him a seductive smile as she saw the enraptured look on his face.\n\nHis boner instantly popped back to life as he moved closer to the caramel-colored bounty before him.\n\nWithout wasting a single moment, he eased his dick into the welcoming folds of her very wet pussy.\n\nBrija let out a sigh of contentment as Blaze started moving in and out of her, all over again.\n\nHe had been on the verge of an orgasm earlier, but his \"antics\" had given him a respite, and he continued fucking her at a pleasurable pace.\n\nThis time he restrained himself to methods that had stood the test of time and left his extremities intact, and he soon found Brija nearing her orgasm, foretold by her breathing and the rhythm with which she met his thrusts.\n\nWithout warning, he pushed his thumb into the entrance to her ass. This little intrusion pushed her over the edge, and she thrust backwards, completely impaling herself on his length as her body was overwhelmed by another orgasm.\n\nBlaze let himself go deep inside her, joining the torrent of her orgasm as her inner muscles worked hard to squeeze out every drop of his essence from his balls.\n\nFinally, spent and tired, he pulled them both down into the pool. He simply held Brija in his arms and caressed her soft, smooth skin, as she gathered her bearings, the two of them just floating in a post-orgasmic glow.\n\n\"That was not what I wanted,\" Brija protested after a while, in mock indignation.\n\n\"Hmm... I guess next time, you'll just have to describe what you want me to do. In great detail,\" he suggested, cheekily.\n\nLetting out a little laugh, she lazily pushed away from him, somehow making her way to a shelf in the corner on wobbly legs, retrieving some bathing supplies.\n\n\"Could you please wash my back?\" she said as she came back, handing him a bar of lavender-scented soap.\n\nWithout waiting for a reply, she turned around and sat down to let Blaze lather her back.\n\nHow do I end up doing all the work when I'm supposed to be the princess... er... prince!\n\n<p align=\"center\">oOo</p>\n\nElyssa sat by the window of her Pegasi-carriage, her head resting on her arms over the windowsill, as she stared off into the bright sky that was peppered with white, puffy clouds. A warm, moist breeze blew from the Purple Sea, which sparkled under the afternoon sun. To their right were thick forests of musky Aranyan-pine and sweet-smelling belboa trees.\n\nSiofra was curled up and dozing in the opposite seat. The pixie had been restless and excited the whole morning, but a filling lunch and the afternoon heat had put her to sleep. It was pleasant, lazy, and drowsy weather, and Elyssa felt quite sleepy herself; it was winter on Azra-El, but winters around the Purple Sea were usually quite pleasant.\n\n\"No, Ragna! You cannot touch me there!\" the pixie muttered in her sleep, making Elyssa glance at her. The pixie had a silly expression on her face.\n\n\"B-but Blaze is a pixie, so that's alright,\" she mumbled, after a moment.\n\nElyssa had no idea what she was dreaming about, but the words made her smile.\n\nThe two angels were travelling to Anyin, and the fact that she was going to see Blaze for the first time in two whole years kept Elyssa awake, despite the weather.\n\nSeven years ago, Elyssa's encounter with Baozhai Rong had left her incapacitated, and she had needed four whole months to recover. She had spent most of that time with Blaze--a month at D'Warka, a couple of weeks at Varan, and the rest of the time at Meihuacheng--going along with his machinations.\n\nShe'd had an inkling then that she would not be able to spend much quality time with him until they went back to Tir, and she had been right. Now, she couldn't wait for another couple of years to quickly pass, so that the trio of friends could once again be back together at Tir.\n\nIt wasn't that Blaze had not wanted to spend time with her, nor was it the other way around. The young angel had just constantly been on the move, either touring the HU in his role as a princess of Xian or working towards his latest goal. Jie Er, Rebecca, and some of his friends from Tir often accompanied him on his trips, but Anastasia Marigold had forbidden Elyssa from going away on longer trips without the protection of an escort. Moreover, Blaze had spent most of the previous two years at Vaikunheim, improving his berserking technique under the guidance of General Freja Nerthusdottir. So, Elyssa had not gotten many opportunities to spend time with Blaze.\n\nShe was broken out of her reverie as a member of her escort swept over to her side of their carriage. \"Ms. Elyssa, the city of Anyin appears over the horizon.\"\n\nElyssa chucked a couch cushion at Siofra as the messenger pulled away.\n\n\"W-what?\" Siofra muttered, groggily.\n\n\"We can see Anyin.\"\n\nThe pixie immediately sat up, and the two angels leaned out the window to peer at the largest port city of Xian.\n\nAnyin was a charming city that was split into two distinct portions. The inner city was a walled area, with buildings and streets arranged in perfect right angles. All the buildings had curved roofs, upturned eaves, and sandy-colored tiles. The inner buildings had multiple layers of these curved roofs, with the central mansion sporting five layers. Crouching beastly figurines decorated almost all the roofs, with the central mansion having the grandest of the figures, one made from pure gold. The walls and the pillars of the verandahs were painted in burgundy.\n\nAnyin also had plenty of vegetation, mainly belboa trees, a type of wide-canopied tree with fan-shaped leaves and sweet-smelling, yellow-colored flowers. The tree also had an atypically rock-hard trunk and a rough bark, both of which were quite useful in medicine and construction. Botanical gardens with pristine ponds and lakes featured stunning vistas all around the inner city.\n\nThe outer city was not as grand, but it was very lively, with the primary feature being the city's bustling markets and port.\n\n\"Will we get to stay in that mansion?\" Siofra asked. \"I always wondered what it would be like between those eaved roofs. Can we go in there and peek through those tiny little windows? Sounds like fun!\"\n\nElyssa laughed. \"We shall be camping at the ruins, but I do not see why you cannot ask Blaze to let you explore that mansion. After all, he is the pampered little Princess of Xian!\"\n\n\"I still cannot quite get used to that fact. But then again, he always acted like a princess, did he not?\"\n\n\"Maybe a little.\"\n\n\"A little?\" Siofra raised her eyebrows. Blaze was her best friend too, but she did not have the same blind adoration for him that Elyssa seemed to possess.\n\nSuddenly, a loud squawk took the attention of the two angels away from the city and their conversation.\n\n\"Sheefra, Eryssa,\" cried a chubby bird with sky-blue wings, as he swooped down from the clouds towards their carriage.\n\n\"Sky!\" Siofra and Elyssa joyfully yelled and waved at him.\n\nThe bird swept past their carriage, touching their hands with the tips of his feathers, before circling back and landing on the roof of their carriage. Then, he peeked down the side of the roof, and muttered, \"Caw caw,\" in greeting.\n\nSoon, their entourage swept over the city and headed towards the Aranyan embassy at Anyin. When Elyssa and Siofra stepped out of their carriage, they were greeted by the Anyin Guard and Brija.\n\nSky hopped off the roof and sniffed the air, before scampering off somewhere.\n\n\"Lord Blaze apologizes for being unable to receive you. He is currently occupied by a prior engagement, and I have been tasked to bring you to him,\" Brija said, stepping up to the two of them and giving them a quick ama.\n\n\"Lord?\" Elyssa raised a questioning brow. She had never heard Brija address Blaze in such a manner. In fact, Blaze had always insisted that Brija call him by his name.\n\n\"That is how I must address my Prince, and that is how he prefers it,\" Brija answered, matter-of-factly.\n\nElyssa was a little flustered. She would have considered it to be a joke, if she had not known that Brija did not usually joke around. So, she could only nod as Brija led them through the streets of Anyin.\n\nSoon, they arrived at the town center. The guards who had been following them quickly spread about the square, trying to look inconspicuous. A bell rang in the distance as Brija led the two young angels over to the side pavements, where various stalls and vendors stood. The city folk bustling around the square also evacuated the main road and moved over to the sides.\n\n\"What is going on?\" Siofra asked Brija.\n\n\"The Duchess' daughter is on her daily rounds,\" Brija answered.\n\n\"Okay, but why are we here?\" the pixie asked.\n\n\"I am simply following Lord Blaze's instructions.\"\n\nElyssa and Siofra gave each other a knowing look--he is up to something. They glanced in the direction of the bell, and saw a red palanquin carried by four mer-angels approach them from the direction of the central mansion. Its gaudy, golden curtains were drawn open, revealing a pretty, black-haired ivka sitting on comfortable cushions. She had a smug and derisive look on her face as she peered down at the populace.\n\nThe city center fell silent, and the townsfolk bowed their heads in respect as the palanquin passed by. Elyssa was a little irked. Travelling by palanquins was an old Xianian and Aranyan tradition, but the way this ivka did it bothered her. If this was Aranya, Elyssa would have immediately stopped the procession and given the girl a piece of her mind. And, just as she had that thought, a young angel--in a pleated kilt and a white shirt--floundered into the palanquin's path.\n\nDespite the black wig, Elyssa and Siofra immediately recognized the young angel. He was sporting an air-headed expression of a country bumpkin, seemingly astounded by all the city sights.\n\n\"Here we go,\" Elyssa muttered with a roll of her eyes, and Siofra let out a tiny giggle.\n\n\"You fool! Get out of the way,\" shouted one of the mers carrying the palanquin.\n\nBlaze looked at the mer and the palanquin as if he had only just spotted them. He gave the vehicle a curious look, before understanding seemed to dawn on his stupid face.\n\n\"My bad, pruddy aunties,\" he spoke in a drawl that made him sound like the native folk of the nearby mountains. \"I dint realize I was holin' up a poor flightless ivka. I will get out of the way. Sowwy,\" he said, hastily shuffling away to the side.\n\nHis voice was so loud that it was heard by pretty much everyone in the square.\n\n\"Bring that bumpkin here!\" the young marquess ordered her guards.\n\nA guard immediately swooped towards Blaze, grabbed his arm, and dragged him towards the palanquin.\n\nSiofra recognized the guard as one of the imperial guards who had received them, however, when she looked at Elyssa for confirmation, she found her to be strangely entranced by the play. The ivka on the palanquin drew back her curtain and glared down at Blaze. \"Did you just call me flightless? Do you know who I am?\" she screeched.\n\n\"Er... dunno,\" he shrugged, carelessly. \"I can tell that you're disabled, though? Why else would ya make these nice aunties carry ya around?\"\n\n\"I am Marquess Guan Er, and my mother is the Duchess of Anyin,\" the ivka proclaimed haughtily.\n\n\"For offending my clan and I, you will kneel and beg for my forgiveness,\" she said, with a cruel twist of her nose and brow.\n\n\"Nuh-uh,\" Blaze shook his head. \"My momma told me to never kneel before unworthy people.\"\n\n\"Oh? Perhaps you prefer being taken to the dungeons and getting lashed?\"\n\n\"I don't want that either. By the way, what gives you the authority to punish me? You are just a bratty kid, and you want me to apologize for your own silly behavior? Pah!\"\n\n\"You stupid mountain bumpkins do not understand how things work here, do you? As the marquess, I can do anything I want. Guards!\" she shouted.\n\nHer guards immediately surrounded Blaze and grabbed his arms.\n\nSatisfied, the ivka ordered, \"Take her into the dungeons and give her five lashes. That should set her straight.\"\n\n\"How can you do this?!\" Blaze cried, struggling against the guards. \"This is not right! I did not do anything wrong!\"\n\n\"You belittled me and my clan.\"\n\n\"That was not my intention!\"\n\n\"Not of my concern. Your words have annoyed me, so you shall be punished.\"\n\n\"But the way you speak and behave annoys me too, does that mean I can give you five lashes?\"",
        "\"If you have the power.\"\n\nSuddenly, Blaze stood up straight and the clueless expression on his face vanished. \"A mere marquess tries to get me lashed? How dare you? You punks from these outer cities have grown quite audacious these days! Guards! Seize her!\"\n\nThe marquess looked dumbfounded as twenty imperial guards silently stepped out of the crowd and surrounded the palanquin.\n\n\"W-who are you?\" the marquess stuttered.\n\n\"I am your worst nightmare! Muhahahaha-hahahaha-ahem.\"\n\nBrija stepped up before the palanquin and introduced Blaze. \"You are addressing Princess Fenghuang Shangdi. All of you, kneel!\"\n\nAlmost everyone in the town center fell to their knees. The marquess stared at Blaze with her mouth agape in a comical fashion.\n\n\"M-my lady! I-I had no idea. I would have never considered punishing you if I had known. P-please forgive me,\" she said, quickly scurrying off her palanquin and giving Blaze an overly subservient bow.\n\n\"I do not care,\" Blaze said, digging a finger in his ear and pretending to not hear a word she said. \"Guards, take her to the dungeon and give her fifty lashes. Let her suffer in there for a few weeks, without medical help.\"\n\n\"Y-your Highness, please! I did not know! P-please!\" the ivka sobbed, but Blaze's imperial guard grabbed her by the arms and flew her away.\n\nBlaze watched the spectacle for a moment before turning around to search for his two friends.\n\n\"Welcome, my dearest friends, Elyssa and Siofra. I hope your trip has been pleasant so far,\" he spoke in a regal fashion, walking over to them.\n\nElyssa had heard about Blaze's charades with the young nobility of Xian, but she had no idea that his punishments were so cruel, nor that he made such a huge spectacle out of them.\n\n\"Blaze!\" Elyssa whispered, moving close to him. \"Do you not think that this is a bit much?\"\n\nSiofra had been sure that the whole thing was a silly prank, but Elyssa's reaction had her worried.\n\n\"My dear, you cannot spare the whip and spoil the child. A little punishment will only serve to set the other nobles straight, and it will be a good reminder for the ivka to treat the commoners with more respect.\"\n\n\"Blaze! Fifty lashes is not a little punishment. She could die without proper care. Please tell your guards to stop this, right now!\"\n\n\"Sorry, Elyssa. If I take back my word now, it shall set a bad precedent,\" Blaze shook his head, adamantly. \"Let's not talk about this anymore. There are better subjects for our first meeting in two years.\"\n\n\"Please, Blaze, do this for me!\" Elyssa took his hands into hers as her eyes began to tear.\n\n\"Er...\" was the only response that Blaze could muster up, as he suddenly had no idea of what to do or say.\n\n\"I agree with Rhyka Fenghuang, Ms. Elyssa,\" a familiar voice spoke from behind Elyssa and Siofra, making them turn around. The marquess from earlier walked towards them with a smirk on her face.\n\n\"A light punishment serves no one,\" she shook her head.\n\nElyssa heard a little giggle from Blaze, and she swiveled around to him. \"This whole thing was a prank?\"\n\n\"Of course, dummy! What do you take me for? A demon? I thought you'd figure it out halfway through the whole thing!\" Blaze laughed.\n\n\"You!\" Elyssa bellowed, raising her hand as if to slap him.\n\nBlaze flinched, but the hand never landed.\n\nElyssa gave him a seething glare, materialized her beautiful golden-blonde wings, and took off towards the Aranyan Embassy, leaving him dumbfounded.\n\n\"What's up with her?\" he asked Siofra.\n\n\"You're an idiot,\" the pixie shook her head.\n\n\"What? She usually loves my pranks!\"\n\n\"That is what she said to convince me to take part in this,\" the pretend-marquess added.\n\n\"She was so eager to see you, Blaze! Do you think she was itching to be the butt of your stupid joke?\"\n\n\"I did tell him that it was a bit much,\" Brija agreed.\n\n\"He told me that this was the best way to make friends with Elyssa Marigold,\" the pretend-marquess added once again.\n\n\"And you are?\" Siofra asked her.\n\n\"Wu Xuan Er, daughter of General Wu Mei. The Duchess of Anyin does not have a daughter. If she did, I am sure Blaze would have convinced her to participate in this, instead of me.\"\n\n\"Tis' not your fault. He has a penchant for convincing others to engage in his silly schemes,\" said Siofra, giving Xuan Er a bow of greeting.\n\n\"Siof, do you think she is really all that angry?\" Blaze asked, a little worried. Elyssa had never been mad at him, and he was not sure how to deal with it.\n\n\"What do ya think? Go apologize, moron.\"\n\n\"Man, the things we do for friends,\" Blaze sighed, and took off after Elyssa.\n\nSiofra was sure that she heard a faint, \"Stoopid Braze,\" echoing from the clouds.\n\nIn the commotion, no one noticed that Xuan Er's eyes were strangely focused on Siofra.\n\n***\n\nBlaze went to the Aranyan embassy looking for Elyssa, but she had locked herself in one of the rooms and refused to speak with him. Deciding that it was prudent to give Elyssa some time to cool down, he met up with the others to explore the town. Sky joined them as well.\n\nXuan Er was oddly quiet throughout the time they spent together.\n\nBlaze tried to get Elyssa out for lunch, but it was to no avail. So, after lunch, he took Siofra to the Duchess mansion, while Xuan Er stayed back to have a conversation with Elyssa.\n\nAt the mansion, the angel, the pixie, and the bird peeked through the tiny windows between the eaves and scampered around inside the low-ceilinged attics.\n\nThey even harassed random passersby, by putting on authoritative voices. \"You are trespassing!\" they shouted, before hiding below the windows, while the flyers hastily searched for the source of the voices, bowed apologetically towards the mansion, and quickly hurried out of sight, while Blaze and Siofra giggled until their eyes teared.\n\nThey had such a jolly good time that Blaze almost forgot about his little tiff with Elyssa.\n\nHowever, when dinner time came around, Elyssa still refused to join them. So, after a quick meal, Blaze brought a plate to her room and knocked on the door. There was no response, almost as if she knew it was him. He tried to open the door, but found it locked. He quickly decided to change his tactics.\n\nElyssa always kept her windows open unless the weather was too cold. So, he went outside and flew up to the room on the third floor, landing on the windowsill and deftly jumping through. He was now a pro at infiltration via window.\n\nOnce his eyes adjusted to the dim light, he found her hiding under the sheets. She was turned away from him and pretending to be asleep.\n\n\"Elyssa, I brought you some rice and fruit. You must be hungry,\" he said softly, trying to get a reaction out of her. However, she did not even budge.\n\nHe set the plate on the bedside table, jumped onto the bed, and poked her head.\n\nHe kept poking until, \"Go away, Blaze! I do not wish to speak with you, right now.\"\n\nBlaze hopped over her sleeping form to the other side and laid down, facing her. Her eyes were closed, and her face held a neutral expression. He crawled under the covers and took her hand. She did not resist as he brought it under his cheek. Her hand was warm and soft as he pressed it against his cheek.\n\n\"I missed you, Ely... I am sorry for whatever it is that made you angry, but can you please not be angry anymore? You are only here for a week, and I don't want to waste another moment of it.\"\n\n\"...\"\n\n\"You know I'm just gonna lie here until you open your eyes, right?\"\n\n\"...\"\n\n\"I am not gonna let go of your hand, either. It may feel comfortable now, but soon it's gonna grow numb, and you'd have to fight me to pull it away.\"\n\nA little smile sprouted on Elyssa's lips, but she quickly controlled it.\n\n\"What would you have done if I had slapped you in the morning?\" she suddenly asked.\n\nThe question threw him off a little. He had not really thought about it, but now that Elyssa raised the question, he realized that if it had been anyone else, not counting Jie Er or Rebecca, he would have been really pissed off.\n\n\"Honestly, I think I would have been having this conversation sooner,\" he answered truthfully.\n\nElyssa sighed and opened her eyes, and Blaze couldn't help but smile at the sight of them. \"I am sorry, Blaze. I should not have raised my hand against you. I don't know why I reacted so impulsively.\"\n\n\"Is that why you were hiding yourself all day? I was so worried that you were angry with me that I didn't even think about it. We are best friends, Ely. I can fight with you all day long if you want, but at the end of it all, I will still want us to sit together and laugh it off.\"\n\nElyssa finally smiled as she interlocked her fingers with his. \"Seriously, why did you not hatch forty or sixty years earlier?\"\n\n\"Blame the dumbass world-energy for that,\" he laughed.\n\nThen the two of them fell silent as they looked at each other under the dim light of the pink lampshades. Blaze found himself drawn into Elyssa's cerulean pupils. Her eyes were large, beautiful, and slightly downturned, which gave her an air of innocence, compassion, and trustworthiness. Usually, there was also strength and confidence in her gaze, but right now, Blaze saw something else. Something raw and pure. It made his stomach lurch.\n\n\"Anyway, what made you so mad about that prank?\" he asked, quickly averting his eyes.\n\nIt was Elyssa's turn to look away. \"I-I do not know.\"\n\nHowever, she knew exactly why she had reacted that way. Blaze's silly act had reminded her of the Dark-Blaze from seven years ago. His actions at the square had made her believe that he was turning into him.\n\nShe had always convinced herself that Dark-Blaze was an exception and would only show himself under extraordinary circumstances, but the fact that she might have been wrong and the thought that Blaze was slowly becoming that unforgiving demon had frightened her. So, when he had revealed that it was all a big joke, her fear had quickly turned into anger.\n\n\"Oh well, it was probably a bit much. I am really sorry. It was funnier in my mind. I don't know why Brija and Xuan Er let me convince them to go along with it,\" Blaze shrugged.\n\n\"How do you usually deal with the pompous nobles?\" Elyssa asked.\n\n\"Meh, I just embarrass them so much that they can't show their faces in public for a couple of months. But I can't do that no more, as Granny is being all fussy about it. She even threatened me with a spanking! She didn't do that even when I put a frog in her dress pocket!\"\n\n\"What are you, like five?\" she asked wryly.\n\n\"I think I was,\" he replied, impishly.\n\nSuddenly, there was a knock on the door, and a pixie face peeked through.\n\n\"Have you two made up yet?\" Siofra asked.\n\n\"Yep!\"\n\n\"Great! It's time for Keahi's Wrath,\" she said, hurrying over to Elyssa's bed and pouncing on it.\n\nThe latest book of the Night Angel series had come out just a couple of weeks ago, and the three friends had decided to save it until they could read it together.\n\nAfter the introduction of airships, a new faction had risen in the world of the Night Angel series. The airships had allowed the flightless sentients of the city-state of Itza to gain enough strength to hold their own against the demons and the angels. However, instead of stabilizing the friction between the angels and demons, it had only served to aggravate tensions. In the previous book, the Tsekki (republic) of Itza had devolved into a civil war between the demons and the angels, while the flightless sentients tried to tread the thin line between them.\n\nThe demons wanted to rule by strength, while the angels wished for a meritocracy. The flightless sentients simply wanted to go back to the old Tsekki, with the addition of representation to the previously disqualified flightless sentients.\n\nNychta Iustitia, the Night Angel, had become the sole voice which still strived for peace and unity, helping any sentient in need, as long as they needed it. Keahi, Ellie, and Dido--the yaksha who was saved by Keahi's Righteous Fury--help the Night Angel in her fight to once again bring all the sentients together. However, towards the end of the previous book, Nychta suffers a tragic loss while fighting against a group of tainted angels who aim to murder the Princess of Mer. Nychta barely manages to save the princess, losing her best friend and her right wing in the process.\n\nNychta becomes tainted and is no longer able to wield her Night Angel powers.\n\nBlaze, Elyssa, and Siofra were soon cozied up under the duvet, each with their own copy of the latest book.\n\n\"Let's read from mine,\" Elyssa said, opening her bound book to display the first page.\n\n\"It is a signed copy,\" she said, with a big smile on her face.\n\n\"You met the author?\" Siofra asked in amazement.\n\n\"No, the publishing company sent it to me for a little extra payment.\"\n\n\"You should've ordered three, then,\" Blaze complained.\n\n\"If I did, I wouldn't be able to show off, would I?\"\n\nTo my lovely young readers, Elyssa Marigold and her friends. I hope my novels not only let your imaginations run wild, but also allow you to think in new and exciting perspectives.\n\nEnjoy,\n\nE. S.\n\n\"Wow, a personalized note! That is really cool, Elyssa. Also, we now have a clue towards her identity. Know anyone with the initials 'E. S'?\" Siofra asked, running her finger over the handwriting.\n\n\"Ednita Stavit, but I doubt it is her. Besides, those could be the initials of a pseudonym,\" Elyssa answered.\n\nBlaze had often wondered about the identity of the author. The airships in the novel used helicopter-like rotors to levitate and were propelled by both sails and thrusters that ran on energy stones. The ships looked nothing like the helicopters or planes of Earth, but the rotors and thrusters left him wondering.\n\nThere were also many other minor details that could be ideas related to Earth, but there was nothing that could convict the author of being another Earthling. At most, the ideas seemed like something heard second-hand.\n\nElyssa soon began to read the book aloud, while Blaze and Siofra lay listening by her sides.\n\nIn the first chapter, Nychta passes on the mantle of Night Angel to Ellie. Nychta deemed Keahi too hot-headed to be the new Night Angel, while Dido was weighed down by a sense of obligation to the flightless sentients.\n\n\"Ahahaha. Looks like I am the new Night Angel!\" Elyssa squealed in delight. She had always assumed that her character, Ellie, was a sidekick to Keahi.\n\n\"Meh, I don't need to transform to gain strength,\" Blaze grumbled.\n\nElyssa smiled wryly at the irony of those words. Siofra, on the other hand, did not care one way or the other. She never associated herself with Dido.\n\nAs the story proceeded, a rift formed between Keahi and Dido.\n\n\"A Tsekki is pointless if it is not among equals. The denizens of Itza are neither equals in thought nor in physiology. Our contributions to the society are also unequal. A Tsekki will only lead to dissatisfaction. Only a meritocracy can bring the greatest benefit to Itza,\" said Keahi.\n\n\"That is the sort of thinking that has made our kind secondary citizens for as long as this city-state has existed. Are you saying that we are inferior? Even if we are--which we are not--how will we ever lead a life worth living, with our heads held high, if we are not given equal representation? Your meritocracy is based on your own ideas of merit. Not ours,\" argued Dido.\n\nWith that, the two friends went their separate ways.\n\nThis friction between the Righteous Fury and Dido turned out to be the final spark that burned the fragile friendship between the angels and the flightless sentients. The new Night Angel was left stranded, alone in a quagmire of conflicting ideologies.\n\nSilence pervaded Elyssa's room as she set down the book. After reading a quarter of the way through, it was time for them to sleep.\n\n\"Let's always be on the same side, no matter what happens,\" Siofra's voice broke the disquiet.\n\n\"And how will we pick the side?\" Blaze asked, though he already knew the answer.\n\n\"We will sit in a room and pull each other's hair out until we can all come to a decision. Then, we will argue no more,\" Elyssa answered for him.\n\n\"Works for me.\"\n\n\"Yep.\"\n\n***\n\nThe next morning, when Blaze stood beside Elyssa, he realized that something was very off. He had to tilt his head up to look at her eyes. He had somehow not noticed this fact the previous day.\n\n\"What happened to you?\" he asked her, annoyed.\n\n\"What do you mean?\"\n\n\"Why are you suddenly half a head taller than me?\"\n\nBoth Blaze and Siofra had grown over the years, but they had only gained about an inch-and-a-half each. However, Elyssa was now over six feet tall.\n\n\"I had a little growth spurt. I guess it is my turn to call you shorty.\"\n\n\"Don't get arrogant just cause you gained a few inches, Ely. By the time I am a hundred, I will be towering over ya. Hela, even Siof may be taller than you, then.\"\n\n\"That's right, I am gunna be the tallest pixie in the world,\" Siofra claimed, standing on tiptoe and puffing up her chest.\n\n\"And I, the tallest angel. We're gonna be known as the Towering Twosome!\" Blaze nodded.\n\n\"If you two shorties are done fantasizing, we can get going,\" Elyssa shook her head at their ludicrousness.\n\nThe trio soon got dressed and waited outside the embassy for Xuan Er to arrive, before setting off to the Qunrun Ruins with a battalion of the Imperial Guard; Brija had returned to Mirian. When Xuan Er arrived, her greetings were unusually succinct. Blaze also noticed that she seemed to have trouble meeting Siofra's eyes.\n\n\"Want to travel together in our carriage?\" he asked her.\n\n\"Ah, no, no, it is fine. I plan to bring my carriage along. I need to finish reading some papers too,\" she said, before hurrying off to her carriage.\n\n\"What is going on with her?\" Elyssa wondered.\n\n\"She seems to be that way,\" Siofra answered.\n\n\"Really? It did not seem so when we spoke in my room, yesterday. We had some insightful conversations,\" said Elyssa.\n\n\"Hmm... Let me go talk to her,\" Blaze said, before walking over to her carriage and whispering something to the carriage driver.\n\nSky waddled along and hopped onto the carriage's roof as Blaze got in.\n\n\"Why are you here?\" Xuan Er asked when he stepped into her carriage.\n\nHe quickly closed the door and sat in front of her.\n\n\"No reason. Just wanted to even out the carriages.\"\n\n\"Huh?\"\n\nSoon, the carriages and a troop of soldiers took off towards the ruins. The carriages flew alongside each other and Blaze waved at Elyssa and Siofra.\n\nXuan Er pretended to be engrossed in a piece of parchment, but Blaze could clearly see her eyes flitting between the paper and the carriage next door.\n\n\"I am really sorry, Big Sis Xuan Er. I did not realize that you swung that way. No wonder...\" he said, with a huge smirk.\n\n\"What?\"\n\n\"But do not worry. I totally approve. You are young, smart, and completely infatuated. You are somewhat wealthy too.\"\n\n\"What the Hela are you talking about?\"\n\nBlaze's stupid grin only got wider. \"Hmm. Let's see,\" he wondered, and began to hum a little tune.\n\nDuring his time at Mirian, Blaze had often wandered into Xuan Er's room and found her sitting by the window and staring up at the moon, thinking about overly complicated stuff. Even a couple of paintings on her room's wall depicted a big, bright, and beautiful moon. So, he began to sing. ~Through the carriage window beside ours"
    ],
    "authorname": "CapDragon121",
    "tags": [
        "angel",
        "demons",
        "fantasy",
        "adventure",
        "harem",
        "action",
        "creampie",
        "battle",
        "fellatio",
        "medieval"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/azra-el-series-arc-2-ch-01"
}