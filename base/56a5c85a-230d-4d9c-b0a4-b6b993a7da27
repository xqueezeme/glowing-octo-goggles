{
    "title": "My Second Task Ch. 02",
    "pages": [
        "Wednesday\n\nWednesday started like every day this week. We woke up, I strutted around naked showing Susie my naughty bits, we showered and then went to work (neither of us wore panties today). During one of our ritual panty checks, I noticed someone watching. It was Jenny, a girl from accounting. Susie and I spent time with her and some other girls at the local watering hole during happy hour. I think she saw me flashing Susie my pussy. I'm not sure, but I told Susie anyway. We were careful the rest of the day. We didn't want to lose our jobs over a simple game. \n\nWhen we got home, we decided to go the gym. Susie was again prepared for this with an outfit to show me off. Instead of a pair of tights, this time Susie handed me a pair of workout shorts. Of course, they were too small and when I put them on, they were stretched to the point of indecency. An added benefit was that they also gave me a nice camel toe. When we arrived at the gym, I decided to have some fun with this outfit. Whichever machine Susie was working out on, I decided to get on the machine opposite her. The first machine that I got into was one of those machines that worked your inner thighs. You know the ones, your legs are spread real wide and you are supposed to squeeze your legs together. The weights help keep your thighs spread wide and I know that Susie got a great look at my pussy. \n\nI was relentless, every machine Susie got on, I would get on the machine opposite her and \"accidently\" reveal something naughty. After a while she figured it out and would get on machines that were strategically located for her maximum viewing pleasure. I loved showing off for Susie and anyone else who might have noticed. After our workout, we went home to have dinner and some wine. \n\nWhen we got there, I stripped, inserted the Ben Wa balls and started dinner. Susie surprised me by getting naked too. Apparently, she wanted to pay me back for getting her horny at the gym. Every chance she got, she would either rub her body against mine or \"accidently\" brush her hand over some part of my body. She was getting me really hot. When we finished eating dinner, we sat on the couch naked and teased each other until it was time for bed. When we got to bed, nothing happened! She is so mean\uf04c \n\nThursday\n\nThe day started out the same, but it ended a little differently. After a day of flashing Susie, we decided to go to happy hour after work with the girls. There was about five of us girls (Jenny, the girl that caught me flashing Susie, was one of them) just having a good time drinking our wine. About two glasses of wine into the evening is when Susie mentioned that we had not been wearing panties all week. The girls all laughed and Jenny said that she thought something was going on. The girls mentioned that they had all go sans panties to work at some point. It was then that Susie challenged them to all take off their panties and join us in our freedom. We were now on our third glass of wine and they all happily agreed. The fun part was that Susie made them all do it right there. They couldn't go to the bathroom. We wanted to see them take down their panties in person. \n\nIt was then that one of the girls asked that we first show them that we were indeed bare under our dresses. We both looked at each other and flipped up our dresses to show them our cleanly waxed pussies. They all laughed and one by one, they started to take their panties off right there at the bar. Susie and I would cover for them as they each would reach under their dress or skirt to pull down their panties. That was until we got to Jenny. She didn't do it and the girls started to tug at her skirt. She then said that she never wears panties and she flipped up her skirt to prove it. What was interesting is that Jenny was sporting some pussy jewelry. I wanted an up close look at her jewelry (for research purposes). So there we were, a group of drunk girls standing in a bar all without panties. How fun is that!\n\nThe rest of the evening went with each girl flashing the rest of the girls while talking about some sexual fantasy that they wish would happen. As each girl told a story, my pussy was getting wetter and wetter. It was when it got to me that I told them that I would love to masturbate for an audience. Susie immediately asked the girls if they wanted to come over to the apartment Sunday to see me masturbate. I was so embarrassed (but very excited at the prospect). They all said yes! Now I was really embarrassed, what had I done? \n\nThe evening finally wound down and on our way out of the bar, Jenny came over reached under my dress and stroked my clit with her finger saying that she was looking forward to Sunday. My pussy was so wet. I was hoping that Susie would give me some relief tonight. When we got home, I went through my normal routine of stripping hoping that Susie was as horny as I was, but she was too tired to play - I SO WANTED TO MASTURBATE. \n\nFriday\n\nFriday started like every other day this week. I showed my naked bits to Susie, we showered and got ready for work. At work, Susie decided to play with my pussy more than usual and get me super wet. She told me that she was trying to decide whether she was going to make me come or just torment me until Sunday's big event. Jenny even came over to give me a quick rub. I was squirming. Could I hold out if they kept playing with me?\n\nWhen we got home, we got our workout gear on to go to the gym. I was wondering what I would have to wear this time, but she just let me put on my normal workout attire. I was somewhat disappointed until Susie stopped me and reached down my tights and put the Ben Wa balls into my pussy. I wasn't sure about this. I didn't know whether I would be able to focus enough on my workout. The more I thought about it the more I wanted to do it. The thought of working out in front of everyone with Ben Wa balls in my pussy got me so excited. \n\nThe workout was a blur. Every time I moved the balls would shift. I kept squeezing my pussy muscles to keep them from escaping. Susie kept looking at me to see how I was doing. She saw how antsy I was and decided to make it worse. She would walk by me and touch my breasts or my ass. She even was bold enough to reach between my legs and touch my pussy. It was on fire!\n\nWhen we got home, I stripped and begged her for relief. She jumped in the shower and asked me to join her. She grabbed the soap and started to rub it all over my body. I still had the balls in my pussy and this was making things worse. She must have some anal fetish because she stopped at my anus and made sure it was very clean. I was so horny, any attention she gave me was ok with me. After she washed it over and over again, she wanted to make sure it was clean so she started to lick it. I've never done any anal before, but I was liking what she was doing.\n\nWe finished our shower and went into the bedroom where she pulled out a dildo. We started kissing. I really liked this. Her lips were so soft and I really liked kissing them. Once she got to my pussy, she again flipped my legs in the air so that my feet were by my ears. It was then that I felt something cool being sprayed onto my anus. I'm guessing it was some kind of lube. She then placed the tip of the dildo (which was also lubed) at the opening of my anus. I knew what was coming next. \n\nIt wasn't a big dildo so it didn't take too much convincing to enter my anus. As she slid it into my ass, she started to rub my clit. The Ben Wa balls were still in my pussy and I felt them shift as the dildo was shoved deeper into my ass. This was a new sensation and I started to like it. She started to fuck me with the dildo while she rubbed my pussy. I was getting close. She then started to lick my pussy while fucking my ass. That was more than I could take. I came so hard! \n\nAll I could say after I settled down was that was AWESOME! It was then her turn. She wanted me to do the same thing to her. I have never played with anyone ass before, but I thought - what the hell! I started by licking her anus. When I got ready to insert a finger, she told me to use plenty of lube. I lubed up her ass and my finger and gently inserted it. It was an odd feeling - very tight. Once I got used to it, I started to experiment with different techniques. After tormenting her for a while, I started shoving the dildo in and out of her ass while I sucked on her clit. She came screaming loudly. I was worried that my neighbors would come over to make sure I wasn't killing someone. Afterwards, we slept well.\n\nSaturday\n\nWe slept in on Saturday, exhausted from the previous night's escapades. We were both naked lying in bed spooning each other. We did this until late morning when we decided that enough was enough. We got up, got dressed and went out to have brunch. Since it was going to be hot today, we decided to wear short skirts, light colored shirts and some sandals (neither wore panties). As we were eating, we decided that we would go shopping for some sex toys. This got me very excited. The only toy I own is my Ben Wa balls and I only have those because of the first task. We finished our meals and found our way to the sex shop. \n\nWhile there we were trying to think of something interesting to buy. We saw all sorts of things - dildos, whips, chains, butt plugs, lubes, and vibrators. We decided to get two butt plugs, a double headed dildo, some lube, and a couple of vibrators. When we went to the clerk to pay, she smiled at us and asked if she could join us. We looked at each other and smiled, knowing that we weren't ready for that just yet. We declined her kind offer and thanked her as we left the store. \n\nWe rushed home, where I immediately stripped and got out our new toys. Susie got undressed too. I love it when she is naked! For some reason, Susie thought it would be a good idea if we put the butt plugs in and spent the rest of the afternoon doing simple chores. Not what I was thinking, but I went with it. So we lubed up each other's anus and inserted the plugs. I also inserted the balls into my pussy. It took a little getting used to, but we got the hang of it. We then spent the rest of the afternoon cleaning the apartment and doing laundry. During which time, Susie thought it would be fun to tug at my plug and play with my pussy. I responded by pulling her plug out and shoving it back in - she moaned in pleasure. By the time it came to getting ready for dinner, we were comfortable with the plugs and exceptionally horny. \n\nWe decided to go out for dinner and got dressed in the same outfits that we wore earlier. We left the plugs in too (I also left the balls in my pussy). When we got to the restaurant and sat down, I really noticed the plug. It got shoved way up my ass. I think Susie really liked that part of the night. She got up and sat down more often that she needed throughout dinner. When we got home, it was naked time. \n\nWe immediately grabbed our double headed dildo and went to the bedroom. This was not going to be a night that included a lot of foreplay. I removed the balls from my pussy and we each shoved an end of the dildo into our pussies. We moved it in and out for a while before we got close enough to rub our clits together. There we were, butt plugs in our asses, a double headed dildo in our pussies and we were furiously rubbing our smooth pussies together waiting for the inevitable and we weren't disappointed. What an explosion! All that teasing paid off. We got cleaned up and fell asleep."
    ],
    "authorname": "gamecontroller",
    "tags": [
        "exhibitionist",
        "lesbian"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/my-second-task-ch-02"
}