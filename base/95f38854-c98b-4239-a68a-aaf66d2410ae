{
    "title": "Immortal Gift of Beauty Ch. 03",
    "pages": [
        "More from Hank and Brosie.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSunday. Tomorrow. \n\nSeemed as good a day as any for my funeral, even if it was part of a long weekend. \n\nIt wasn't two minutes after I found out about Marina's evil little scheme that I was in my room, talking to Brosie on my phone. \n\n\"She did what?\" Brosie asked, her voice surprisingly calm. \n\n\"She invited us... all four of us... over to use the pool. Tomorrow afternoon,\" I repeated. \n\n\"Oh. I see,\" Brosie replied. \"So that's her game, is it? She told me some friends were coming over tomorrow, and she might want to order some food. I told her that was fine, never dreaming she had this in mind. She knows I won't say 'no' now, even when she tells me who's really coming. She knows I'll be the good hostess, to save face. I'm going to have to have a long talk with her.\"\n\n\"So, um, what do I do?\" I asked her. She had much more experience than I, dealing with her daughter. Her advice was crucial. \n\n\"Well, just be cool,\" she said, remarkably in control. \"I'll tell you what you don't do. Don't forget where you are tomorrow. You've never been here before, as far as they know. Play dumb. Just be a guest, and for god's sake don't kiss me. Leave the rest to me.\" \n\nOur call ended, and I laid back on my bed. Leave the rest to her? Certainly, sounded easy, but the reality was another matter entirely. \n\nObviously, Ambrosia knew her daughter better than I did. Marina was trying to sabotage our relationship, in the most subtle way possible. Despite her promise to keep her mouth shut, she had found a way to expose us without doing it herself. \n\nI had to trust Brosie to handle it. She was pretty good at dealing with unexpected circumstances, if our recent past was any indication, and I knew she was not one to be trifled with. Marina was poking the bear with a stick, and the bear might bite back, in her own way. \n\nI suppose the less I knew about the plan, the better. If I was to play dumb, then being clueless was going to make it easier. I decided to practice, and went back downstairs, where I found Mom, my sister and Marina still chatting. Marina caught my eye as I walked in, and a disappointed expression briefly crossed her face. I can only guess that she expected me to hide from her, or at least show some semblance of terror at her evil plan. \n\nPrior to my conversation with Brosie, Marina probably would have won the day, but my lover's confidence was infectious, and very comforting. I gave her nothing to feed off of, and gave my Mother and sister nothing to suspect. \n\nThe first part was the key. Just like a schoolyard bully, Marina was trying to elicit a response with her tactics. She was hoping to either cause tension between her Mother and I, breaking us up, or to force us apart to keep things a secret. So, she was hoping for fear, anger, a mistake or embarrassment to achieve her goal. It was her way to win without breaking her promise, and the only way she could express her distaste for our relationship. If her word didn't mean so much to her, she could simply expose us, and let the shit hit the fan. \n\nMarina was at our house for the balance of the day, and every time I saw her, she gave me this questioning look. Why wasn't I upset? What did I know that she didn't? Toward the end, I could actually see her beginning to look a little nervous herself. \n\nThe game was on for tomorrow. \n\nMay the best player win. \n\n***\n\nWhen we arrived at Brosie's house, I almost blew my cover. Dad was hesitant at the last turn, and I was just about to give him directions when I remembered I had never been here before. \n\nOther than every spare moment spent in Ambrosia's bed since her return from vacation, that is. \n\nSo, I bit my tongue, as Dad turned the wrong way, and led us through the wrong neighbourhood, before finally using the GPS built into the car to find the correct address. About five minutes later than necessary, we pulled to a stop in front of the house.  \n\nI trailed the group to the front door. It just felt safer, having all those bodies between myself and danger, as I had no idea what might be waiting on the other side. We might be walking into a war zone. I had no indication from Brosie, as she had been decidedly silent this morning. That made me nervous. I needn't have been. \n\nThe door swung open as we approached, and Marina ushered us in, hugging my sister. She cackled happily, leading us through the house toward the back yard. As we passed through into the brilliant sunshine again, I saw Brosie sitting at the table, under the shade of the large umbrella, reading a book. She looked quite calm, but I knew she was just covering it well. \n\n\"Mom?\" Marina smiled, stirring the pot. \"Our guests are here.\" \n\nBrosie tipped her sunglasses down, and looked our way. Her face showed pleasant surprise, as though she had no idea who would be visiting today. I made a mental note about her acting ability, and watched her jump to her feet to greet us. \n\nI took in her attire. She was dressed very casually, as one might be when you weren't expecting company, or at least not company that meant anything to her. A navy-blue t-shirt covered her upper body like a second skin, stretched tight by the curves I knew so well. She was wearing a bra, so didn't jiggle as much as she might have. A pair of tan shorts clung to her butt. She looked delicious, but I had to remember to curb my appetite. \n\n\"Carol! Herb! So nice to see you!\" she gasped, smiling wide. She opened her arms to hug my parents as a couple. I knew my Father would be enjoying the soft contact of her full chest, even if only getting half the benefit. \"Sharon! About time you came over here. Marina has been spending more than enough time at your house,\" she said, moving on to my sister, and dispensing another hug. Finally, she turned to me. \n\nMoment of truth time. How would she play it? Was now really the time to tell my family about us, or would it be better when everyone was drunk, later? \n\n\"Hank?\" she giggled, stepping back, and opening her arms wide, for me alone. \"How have you been? Thank you so much for helping me with my shopping that day in Santorini.\" \n\nThe hug that enveloped me was very familiar. I would never get tired of her huge breasts being squashed between us, intervening clothing or not. She even gave me a little peck on the cheek, but nothing that might give us away. \n\nWith that, the initial danger was past. I was sure it wasn't over with for the day, as Marina had brought us here for a reason, and undoubtedly had more in mind than merely putting us in close proximity to my parents. I'd have to be on my guard all day. \n\nStill, my part in this was easier than Brosie's. I just had to keep my mouth shut, and my hands to myself, although the latter was difficult in the presence of her tactile-friendly body. She had to read and react to the many landmines Marina was scattering. \n\nSpeaking of Marina, she had taken a position on the other side of the pool, and was already cackling with my sister. I watched her for a moment, catching her casting a venomous glare at me, when my sister wasn't looking. She didn't even try to sugar-coat it, openly displaying her contempt for me, but only to me. I wondered what she might do. \n\nI tried to put myself in her position. Not so much the 'some young guy is fucking my mother' part, as much as just her being upset, and hoping to expose us. What would I do? If I had already given my word not to tell, but I was desperately unhappy with the situation, and wanted to force it out in the open...? What would I do? \n\nCertainly, the most important people to keep the secret from would be my parents. They would have the greatest ability to break us up, because they have the most influence on me. From that vantage point, her bringing us all together was a good strategy, but she had to have more in mind than simply hoping we'd give ourselves away. That was the real question. Unfortunately, I didn't have the information necessary to formulate a guess. At this point, she knew her mother better than I did. \n\nBut... the parts of Ms. Ambrosia Castellanos that I did know, I knew very well, and those were enough for me to fall for her. \n\nWe were all lounging and talking about nothing in particular. Marina and my sister were sitting on the other side of the pool, chatting between themselves, and my parents were talking to Ambrosia, who, in apparent civility, was trying to include me in the chatter as much as possible. There was a radio playing in the background, and when a good song came on, Marina and Sharon would dance on the pool deck in their bathing suits. \n\nI should mention that my sister is really a pretty girl. My friends have all voiced a desire to take a shot at her, if the opportunity arose, and even though I'm her brother, I admit she's pretty hot. Marina too. If she ever fills out the way her mother has, she's going to be spectacular, but none of it mattered to me. \n\nThere was only one Brosie, and I was head over heels in love with her. \n\nSo, being on the periphery of the conversation, I suppose it was natural that I be the first one to react when an eerily familiar drum beat signalled the start of a new song on the radio. I froze, and turned my eyes to Marina, whose head whipped around in my direction. By the time the horns joined in, I could see a little smile on Brosie's lips in the corner of my eye. \n\n\"Ah!\" she laughed. \"If you'll excuse me, I just love this song! I'll be back in a minute!\" \n\nWith that, she stood, and cranked the volume way up. Sharon, not knowing the significance of the song was just bopping along to it, forcing Marina to do the same. Brosie took half a dozen steps toward them, then spun on her heels. \n\n\"You!\" she smiled, pointing at me. \"Come on, Hank! Come dance with us!\" \n\nI tried not to grin too widely, and not to seem too eager. After all, how many guys my age really want to dance with women old enough to be their mother? \n\nOf course, how many have done so naked, to the same song? \n\nI 'let' Brosie drag me over to where the dancing was happening, and much to Marina's chagrin, we all had fun, to the song that would forever be ours. I know I'd never hear 'Walking On Sunshine' without smiling, for the rest of my life. \n\nWhile not quite as arousing as the last time we did this, there was no dancing with my luscious Greek goddess with noticing her spectacular body, and how it moved so enticingly to the music. Her boobs bounced, her hair swung, and her smile beamed happiness, all while Marina wished she'd never heard this damn song. Her mother was rubbing her face in it. If she wanted to play games, then she had to be prepared for us to play back. \n\nIt was probably made worse when my parents actually joined in, and we all sang the song while it lasted. By the time it was done, just a few minutes, everyone was winded, and just a bit sweaty. Brosie fanned her face with her hand, and cast a knowing smile at me, before making a final comment, obviously directed at her daughter. \n\n\"I think that's my favourite song ever,\" she said, as we dispersed. \"I don't know why. It just makes me so happy, I can't help myself. Don't you agree, Marina?\"\n\n\"If you say so, Mother,\" Marina replied, a distasteful scowl on her face. \"It's too old.\" She managed to get a barb of her own in, but Brosie just dodged it elegantly. \n\n\"Well, one of us is, but I'm not sure who,\" she smiled. \"I could use the pool now,\" she continued, turning to the rest of us. \"Hank, why don't you change in the pool hut, over there? Marina, could you show Herbert and Carol to the guest room, inside? I'm going to check on lunch, and then change upstairs.\"\n\nThe group broke up, with everyone else heading inside, while I was left on the deck alone. I went back to my chair, and picked up my bag, which contained my pool clothes and surf shorts. I was just about to walk over to the hut, when I heard a noise behind me. \n\nIt was a tap, on glass, and I turned to find the source. It took me a few seconds to see it, on the second floor. \n\nBrosie's bedroom window. \n\nActually, it was a sliding glass door, so I could see all of her, from the top of her pretty head to the bottom of her smooth feet. She blew me a kiss, then struck a playful pose, hips cocked to the side, and a finger on her lips. \n\nI smiled, and blew a kiss back, continuing to watch her, intently. She didn't disappoint. \n\nShe turned in profile, and arched her back, thrusting her breasts out more prominently, while unzipping her shorts. Bending from the waist, she peeled the shorts over her curvy hips, dropping them down her long, sexy legs to her feet. A single strap of white fabric arched high over the hip, and when she turned her back, I could see the string that appeared from between her firm butt cheeks, confirming that it was indeed a thong. She shook her ass at me, peering over her shoulder with a seductive grin on her face. \n\nI could feel my dick waking up, while I enjoyed the unscheduled strip show, happening above me. With a flourish, Brosie skinned off her t-shirt, and spun to show me the whole picture, standing with her legs apart in a lovely, matching white bra and thong. Her body was everything I remembered it to be, since I last enjoyed it, yesterday. She pursed her pouty lips, while reaching behind her back, to unfasten her bra, which she held in place with her arm across her chest, once it was loose. Grasping the straps, she sawed the bra back and forth, dragging it upwards slightly while doing so, until those huge breasts simply dropped free, bouncing happily before my eyes. \n\nThis time, when she turned in profile and bent at the waist, her full breasts swung freely, jiggling with her movements. The thong joined her shorts on the floor, and she stood again, now gloriously naked. Her hands wandered across the smooth skin I was longing to caress myself, dipping suggestively between her thighs, before sliding upward to cup and heft her impressive breasts, juggling them as I wanted to do. \n\nI was smiling up at her, when she pressed her chest against the glass, squashing her massive tits flat. She dragged those luscious globes across the transparent surface, teasing me mercilessly, but lovingly. She gave me a final pout, a flutter of her fingertips, and then drew the curtain, once again hiding her lovely body from my eyes. \n\n***\n\n\"Lunch is here!\" Brosie proclaimed, as she walked out onto the deck again, carrying four large boxes of pizza stacked high in front of her. \"It was perfect timing. The delivery guy rang the bell just as I came downstairs.\" \n\nShe put the boxes on the table under the umbrella, and stood clear. \n\n\"You answered the door dressed like that?\" Marina said sarcastically. It made me look again. \n\nCertainly, the pizza boy got more tip than he deserved. Brosie was dressed for sunbathing, and the bikini top that she was wearing made the one in Greece look conservative. She was very exposed, so I could just imagine the delivery boy's eyes bugging out at the incredible slice of cleavage that she was showing. This one was red, and looked really, realllllly good on her. \n\n\"Yes Marina, I answered the door dressed like this. Jeez. It's my body. Get over it,\" Brosie laughed. \"I'm not a nun.\" \n\n\"Nope. Definitely, not a nun,\" my Dad chuckled, drawing a sharp look from my Mother. \n\n\"Isn't that the suit you bought to surprise your new boyfriend?\" Marina grinned, raising the stakes again. \n\n\"Why yes, Marina, it is,\" Brosie replied. \"He hasn't seen it yet, but I did buy it for him. In fact, I bought several new ones. He actually appreciates my body.\"\n\nHe's seen it now, and he'd like to rip it off you, suck your nipples, and fuck your brains out, I thought. Right here. Right now. \n\n\"He's younger than you, isn't he Mom?\" Marina prodded, stirring the pot. \"Much younger.\" \n\n\"Is this really the time for this, Marina?\" Brosie warned. \"I could bring up a few questions about your boyfriend, if you'd like?\" \n\n\"No, I'm just saying... You bought the suit for him, and he's much younger. Simple facts. No opinion,\" Marina smiled, feeling like she had the upper hand. Brosie stared her down, then sighed. I was terrified, wondering if I could just slink away unnoticed. \n\n\"Yes, I have a younger boyfriend,\" Brosie said easily. \"There. Now it's out in the open. Can we eat now, or would you like to discuss more of my personal life?\" \n\n\"I'd like to hear more about this boyfriend,\" my Mother giggled. \"Of course, I'm an incorrigible gossip. I'd like to hear about anything juicy.\" \n\n\"Well, we can talk about that more, later, Carol,\" Brosie smiled. \"The pizza is getting cold.\" \n\nI realized that I wasn't breathing throughout that last exchange, and inhaled desperately. Brosie glanced at me. A subtle wink followed, as soon as she knew the pizza had everyone's attention. \n\nEveryone but me, of course. I was still paying close attention to my lover, while trying not to be obvious about it. That bikini top was spectacular on her, and I noticed that my father was checking out her rack as well. I couldn't really blame him. Like me, he knew a good thing when he saw it. Mom was giving him dirty looks for ogling Brosie's ample curves, but they were pretty hard to miss. I smiled to myself, knowing that I would be benefiting from that body soon. \n\nJust how soon, was a question we'd have to answer later. For now, I just tried to look like a normal young man. I wasn't supposed to be blind, just not intimate. \n\nI was amazed at how much everyone could talk. Sharon and Marina had one long sentence going on the other side of the pool. Knowing my sister, that didn't surprise me in the least. My parents, on the other hand, hardly ever shut up, and that was unusual. Considering they only knew Brosie for a few days, a few weeks ago, you'd think they'd run out of conversation topics pretty fast, but the three of them were talking and laughing like lifelong friends. That was good, in my opinion. I hoped they'd remember how well they got along, if and when the truth about us came out. \n\nI'm sure they'd have lots to say, then. \n\n\"I think I need to pee,\" Mom giggled. \n\n\"Me, too,\" Brosie nodded, as they both stood up. \n\n\"Jeez, can't you women EVER go to the bathroom alone? Is it in the DNA?\" my Father laughed. \"Hank and I are the only guys here. I think you're safe, ladies!\"\n\n\"Just in case,\" Brosie giggled, making very brief eye contact with me. \"You never know.\" \n\nI laughed. It was a great way to cover the smile I was wearing. Yes, you never know. You never know when helping a new acquaintance with her shopping might lead to something much, much more fun, maybe for a lifetime. \n\nRelaxing in the sun for another few minutes, it suddenly occurred to my bladder that using the bathroom might be a good idea. I hopped up, and went inside. \n\nMy Mom and Brosie were in the kitchen when I walked by, on the way to the bathroom, which I almost forgot I wasn't supposed to know the location of. I made it look like I found it by accident, and when I was coming out, a minute later, I could hear them talking. \n\n\"So?\" my Mom asked. \"This younger guy? How long has this been going on?\" \n\nAh. Girl talk. I might want to hear this, I thought, stopping out of sight around the corner. \n\n\"Oh, just a few weeks,\" Brosie replied. \"He makes me very happy.\" \n\n\"Uh huh. I'll bet,\" Mom giggled. \"You lucky girl. I've often wondered what it would be like to have a lover that could go all night, non-stop, and just make love like a train. Is it good?\" \n\nFirst of all... Mom? Eww! Second, I want to hear this answer. \n\n\"Mmmmm, good doesn't even begin to describe it,\" Brosie whispered. \"He does things to me that you wouldn't believe.\"\n\nI was amazed at how she could walk the tightrope, balancing just this side of blurting out the whole truth. Mom wasn't done. ",
        "\"I'm sure I'd like to. Does he have a nice body? Strong? Muscular?\" she asked. \n\n\"Yes,\" Brosie giggled again, never guessing she'd be having this conversation with my Mother. \"Great shoulders. Nice tight buns, too.\" \n\n\"And?\" Mom prodded. \n\n\"And what?\" Brosie laughed. \n\n\"Are you really going to make me ask you?\" Mom whispered. There was no immediate response so she continued. \"Fine. Is he hung? What's he packing? Does he have a big cock? Is he a good fuck?\" \n\nI was stunned. I'd never heard my Mother use such language. Brosie snorted. \n\n\"Um, uh, yes. Yes. And yes,\" she smiled, blushing at the subject. \n\n\"Like I said, you're a lucky girl. Have fun, and don't let him go. You'll have to give me more details, later,\" Mom finished. She patted Brosie on the shoulder, and left. \n\nI waited a few seconds, then stepped into view. The movement startled Brosie. \n\n\"Oh shit! You scared the crap out of me,\" she gasped, her bountiful chest shaking as she jumped. \"Were you there the whole time?\" \n\n\"Long enough,\" I smiled. \n\n\"Think her opinion might change if she knew it was your cock we were talking about?\" she asked, looking over her shoulder. She could see the pool deck, and all were present and accounted for. \n\n\"Most likely,\" I chuckled, as she slipped silently across the room into my embrace. Her lips found mine. \"Before I forget... Nice suit.\" \n\n\"Mmmmm, you ain't seen nothing yet,\" she smiled. \"You can't tell, under these shorts, but... It's a thong.\"\n\n\"Shit!\" I laughed. \"Are you trying to give my Dad a heart attack, or is it me you're after?\" \n\n\"Just playing Marina's game. If she's expecting me to shy away, and withdraw, she's barking up the wrong tree. By the end of the night, she'll either back off, or it won't matter anymore,\" she said softly, holding me close. \"I only hope I can keep my hands off you that long.\"\n\n\"Can you believe the radio? What are the odds?\" I laughed. \n\n\"Yeah, I'm sure she just about shit a brick when that came on,\" Brosie winked. \"What is it they say... the best defense is a good offense?\" \n\n\"I think it's the other way around, but I get the idea. She didn't expect you to get up and dance, did she?\" I asked. \n\n\"Certainly not. We'd better get out there, before they come looking for us,\" she smiled. \"You first.\" \n\n\"Okay coach,\" I replied, and patted her ass. \"You're calling the plays.\" \n\n***\n\nIt didn't take Brosie long to kick things up a notch when she came back outside. I was in the pool, enjoying the cool water and solitude, floating on my back. I saw her come out of the house, but then lost her from my field of view, until a splash made me look up. \n\nThere, by her lounge, were her shorts. It was official. The thong was out of the bag. She surfaced a few feet away, water droplets sparkling in the sun on her long eyelashes. She looked like an exotic beauty, which I suppose she was. \n\nMy exotic beauty. \n\n\"I hope you don't mind me joining you, Hank,\" she smiled, treading water neatly. \"It was getting a bit warm on the deck.\"\n\n\"It's your house, and your pool,\" I replied, then lowered my voice to a whisper. \"You could swim naked if you wanted to.\" \n\n\"You'd love that, wouldn't you?\" she whispered back. \"Besides, I practically am naked. Think your father will notice?\" She splashed me playfully. I didn't answer, merely returning the splash. \n\nBrosie spun around, and dove under the water, which brought her luscious, nearly bare ass to the surface, if only for a second. She really was almost naked. I loved it, but wondered if she might be pushing back against Marina a bit too much. \n\nI was still watching when she climbed the ladder out of the pool. There was no need to fix her bikini bottom as she stepped out, since her butt was bare, but her hands made the motion out of habit. I saw Dad, craning his neck to watch the show, while Mom glared at him. \n\nBrosie grabbed her towel, and wrapped it around her, covering herself for the time being. Maybe showing off her stiff nipples was more than she was willing to do. She laid back on her lounge, put on her sunglasses, and started up the conversation again, as though nothing noteworthy had happened. \n\nFor myself, I was glad to be in the pool. The cool water kept my erection from ripping out of my shorts, and hid the fact that I even had a stiffy. Another splash got my attention. This time it was Marina. \n\n\"Hello, Henry,\" she sneered, swimming past me. I nodded. \"I can't believe she's not embarrassing you. Parading around in that skimpy bikini. It's ridiculous.\" \n\nI looked over at my parents, who were fully engrossed in their conversation. To the left, my sister dozed, cooking in the sun. It was safe to talk. We'd just have to keep it down. \n\n\"Marina, are you asking for my help?\" I said softly. \"Is your mother more than you can handle? I have no problem with that... Handling her, that is. In fact, I rather enjoy it.\" \n\n\"You're a pig,\" she growled, and swam away. \n\nYeah, maybe pissing her off even more was a dangerous game, but I'd almost had enough of her attitude. Not that it meant much to her. \n\n***\n\nThe alcohol was flowing freely, at least among the adults. Marina, Sharon and I made do with soft drinks. Funny how, according to the laws of the land, I was officially an adult, and able to make my own decisions, but not to drink. I could enter into legal contracts, but not drink. I could pay taxes, or even serve in the military, but not drink. I could even legally have sex, but not drink. \n\nGiven the person I actually was having that totally legal sex with, and the current situation, fraught with danger, it's a good thing I couldn't get that drink. I'm quite sure I wouldn't be exercising responsible judgement regarding the volume of alcohol I'd be consuming. I was beginning to understand the appeal of getting shit-faced, and not remembering the next day. \n\nHowever, since I wasn't allowed to partake, I was forced to go through the process cold sober. Every time Marina spoke... every conversation between my parents and Brosie... every second we were all here together, the whole situation was poised to explode. Three of us knew of the danger, and the other three were blissfully unaware that they were the bomb. \n\nSpeaking of bombs, my father was getting wasted. Well, it was a holiday weekend, and he had no reason not to accept the offered beverages. Maybe he was trying to soothe his own libido, as Brosie was pretty powerful to be around, even to happily married men. \n\nMom wasn't far behind him. Her reasons for drinking might have had something to do with Dad's drinking, and subsequent wandering gaze, which seemed to land with increasing frequency on Brosie's ample chest. If only he knew how often my own eyes, among other things, had landed on those same breasts, without the intervening clothing. \n\nI admit, there were advantages to having my parents slightly tipsy. It would slow their ability to recognize incriminating evidence and words. Score one for our side. \n\nThe disadvantage began to become obvious as the day drew on, moving from afternoon to evening. As they became more intoxicated, they lost the ability to stop from drinking, and it became clear that driving home was not going to be an option. Neither Sharon nor I had brought our licenses, so we weren't going to be of any help. \n\nThe discussion about the topic was quickly closed when Brosie insisted that we stay here until my Father was fit to drive. \n\n\"That's what guest rooms are for, and I'm sure the girls wouldn't mind bunking together. It will give them more time to gossip. We even have a pull out for Hank,\" she said. \"No one's working tomorrow, so there's no need to risk it.\" \n\nThat meant we'd be staying the night, and prolonging my torture, and giving Marina more time to wreck things. \n\nIt also meant that my first sleepover at my lover's house would have me on the couch, not in her bed. There was the guest suite for my parents, and Sharon would be sharing with Marina. I was the odd man out, while half of Brosie's perfectly good king-sized bed would be empty. \n\nAll of that was still a few hours away, however, as the party was still in full swing. Brosie looked sadly at her empty wine glass, then at the equally empty bottle, sitting on the counter with its squadron of friends. \n\n\"I think we need more wine,\" she giggled. She stood with surprising ease, given the amount she had already downed. \"Hank? I need your muscles again. Please come help me with the wine. It's in the crawlspace.\" \n\nI trailed her into the house, watching her hips wiggle under those little shorts. She was waiting at the top of the basement stairs, and opened the door, gesturing with her hand. \"Down here.\" \n\nIt wasn't really much of a basement. More like a single, sunken room, with most of the mechanical systems in it. I reached the bottom step, and felt a hand on my shoulder. When I turned, Brosie was smiling at me. \n\n\"Alone at last. I don't know how much more of this I can take. Do you have any idea what I want to do to you, right now?\" Her eyes were bright, and she was breathing deeply, causing her breasts to swell over the tiny cups of her bikini top. \n\n\"I'm sure I have a similar list of things I'd like to do to you,\" I replied. Her arms came around my neck, and we kissed. It was gentle, and under control... for about ten seconds. \n\n\"Oh fuck, honey! I need you!\" she hissed, as her hands went wild, caressing me desperately. Mine did the same, mostly grabbing her big tits. Our desires were this close to boiling over completely beyond return, when we heard splashing and giggling from outside. It reminded us where we were, and who was out there. \"Mmmmm, we'd better not. Too dangerous. Here, the wine is over here.\" \n\nShe led me to the hole in the wall, five feet above floor level. She flicked on a light. \n\n\"In there. It's a blue box. You might have to shuffle some around to get it out. Sorry, it's a bit cramped, but at least it's clean and dry,\" she pointed. \"Use the step ladder, to get in.\" \n\nShe was right on all counts. It was clean, with a smooth concrete floor, and dry, and very cramped. The ceiling was very low, not enough room to crawl, so I had to slide in on my back. I was craning my neck sideways, when I felt her hand. This time, it wasn't on my shoulder. \n\n\"Mmmmm, look what I found?\" she giggled, palming my bulge. The kiss, only a few moments ago, had woken my penis, and it was still pretty firm. Her touch was doing nothing to alleviate the problem. \"Keep looking for the wine. I'll take care of this.\" \n\n\"Oh, shit,\" I mumbled, as her fingers untied the string that kept my surf shorts up. She tugged the front down, and freed my cock. I pushed a few boxes aside, and thought I saw the target of the search, but her hand was now stroking my shaft smoothly. It felt so good, after hours of being around her without getting to act on my urges. I looked down at her, as best I could, seeing her lusty face, eyes focused on my dick. \n\n\"I, um, I think I found the box,\" I said softly. \n\nBrosie squeezed my cock, and a big drop of clear fluid oozed out. She caught it with her fingers, and licked them clean, before resuming her slow motions, up and down. \n\n\"Well then get it,\" she purred. \"I've got another drink in mind, right now.\" Her hand was moving slightly faster now, working my cock, making it harder for me to focus on dragging the box out of the tight space. \"Careful, honey,\" she said, directing my feet down onto the ladder as I squirmed out of the crawlspace. \"Okay. That's far enough.\" \n\nI was only half way out, but that was sufficient for her to get between my dangling legs, and replace her stroking hand with her sucking mouth. \n\n\"Oh, fuck, Brosie,\" I moaned. \"Are you trying to get us busted?\" \n\n\"No. I'm trying to reward you for helping me with the wine, and for putting up with Marina today,\" she whispered. \"And I'm horny. If we can't fuck, at least I can give you a quick blowjob.\" Her mouth was back on my dick in a heartbeat, and she resumed her suction, bobbing her head smoothly. \n\nAlright, I thought. Later in life, when I'm sitting around with my friends, and one of them asks me where was the strangest place I ever received a blowjob, I can say 'in a basement crawlspace'. At least, that was the leader at this point in my life, a life that would hopefully include Brosie for a long, long time. It's entirely possible that she might surpass this one, in the future. \n\nNormally, I like to watch her suck me. Those big tits would be swinging, and her elegant, sophisticated face would be transformed into an incongruous, slutty mask, as she did her best to please me. I couldn't do that in this situation. Her chest was out of sight, below me, and I couldn't raise my head far enough to comfortably view her face. \n\nThat left me with only the blissful sensations of her mouth, those lips sliding wetly along my shaft, and her tongue swirling around the head periodically. Yeah, ONLY that. Such a hardship. I don't know how I could be expected to get any pleasure from it. \n\nYes. That was sarcasm. \n\nBrosie definitely knew what she was doing. Her mouth moved with practiced skill, making only a soft slurping sound, while I tried to keep my own volume down. \n\n\"Oh, god, honey, that feels so good,\" I moaned, softly. \"You're going to make me cum.\" \n\n\"Mmmmm hmmm,\" she nodded, picking up her pace. She sucked harder, and used her tongue more. I could feel the tingle start, and closed my eyes, reminding myself to be quiet, and not to sit up. The concussion would be difficult to explain to the ambulance attendants, with my freshly sucked dick hanging out, and my shorts around my ankles. \n\n\"Oh, fuck, here it cums, baby!\" I groaned, through clenched teeth. \n\n\"Mmmmm, mmmmm, mmmmm, mmmmm,\" Brosie moaned, as I surged into her mouth. She kept pumping, and sucking and swallowing, drawing out every drop, until the chamber was empty. She licked me clean, then stood up straight. \n\n\"That's better,\" she patted her tummy. \"What wine goes with semen?\" \n\n\"This one,\" I groaned, passing the box out awkwardly. \"Whatever it is.\" \n\n\"We'd better get back out there,\" Brosie said, helping me out of the hole, and down the ladder. She tugged my shorts back up. \"Marina will be looking for us.\" \n\n\"Too late, Mother,\" I heard, while I was re-tying my waist cord. I cringed. \n\n\"Did you enjoy the show?\" Brosie asked, as I turned to see who was watching. Fortunately, it was only Marina, so it didn't change the situation. It didn't improve her attitude, though. \n\n\"Certainly not as much as HE did,\" Marina sneered. \"That was disgusting, Mother.\"\n\n\"Oh, please! Don't act like you're some virginal, innocent, beacon of virtue,\" Brosie laughed, scolding her daughter at the same time. \"It's not like you haven't done the same, I know it, and you know it.\" \n\n\"I'm not denying that,\" Marina allowed, eyeing me uncomfortably. \"How would you feel if I was blowing some older man? How about if I walked out onto the deck, upstairs, and just sucked HIS FATHER'S cock? What would you say then?\" \n\n\"Marina, dont be impudent! Remember who you're talking to! I know you are upset by this situation, but that doesn't excuse your tone!\" Brosie warned. She was more than willing to talk about anything, but not in a disrespectful manner. \n\n\"Yes. You're right. I apologize,\" Marina nodded, then shook her head, \"but only for my tone. The question stands. Would you be so tolerant of me, if things were reversed?\" \n\n\"Alright, since you asked,\" Brosie replied, blunting her anger. She handed me the box of wine. \"If you're going to reverse the situation, then go all the way with it. You're not on your knees, giving pleasure to some random, older man... and certainly, not to Herbert, who is happily married. You are in love with him, and very happy. Now, if I were to walk in on you, giving your beau a wet, sloppy blowjob, I would, of course be shocked. I might even demand that you stop, but that would only be because you surprised me. You were not surprised, this time. You came hunting for us.\"\n\n\"Yes, because I knew you couldn't be trusted together,\" Marina replied. \n\n\"You're getting close to the line, honey,\" Brosie growled, warning her daughter again. \"I'm an adult. This is my house. I don't need to ask your permission, especially about my love life. If you want me to let you make decisions that affect your life, then you have to extend me the same courtesy. This is not up for debate.\" \n\n\"How can you be in love, with... with... HIM?\" Marina spat, glaring at me. \"You hardly know each other. Are you sure it's not just sex, talking?\" \n\n\"Would it make a difference if it was?\" Brosie fired back, clearly getting angrier at being grilled by her own child. \"Let's say, for the sake of argument, that it is only sex that interests me. I'm only in it to get my brains fucked out by a young stud with a big cock and the energy to use it on me, over, and over again. I can't get enough of it. Would that make you feel any better?\"\n\nBrosie touched my shoulder, gently reminding me that I meant much more to her than that. \n\n\"No,\" Marina shook her head. \n\n\"So, you just have a problem with who I've chosen to fall in love with?\" Brosie scoffed. \"I don't recall asking you for your opinion, and I know you've never asked for mine about your boyfriends.\"\n\n\"Is it love, Mother? How do you know?\" Marina asked softly, her ire losing momentum. \n\n\"Marina, honey?\" Brosie smiled, stepping over to hug her defiant daughter. \"Is it love? Can we ever be sure? All I do know is, that in my experience, with your father, I know the feeling that was missing when he died. I hadn't felt it since then, for over two years, until I met Hank. He makes me feel whole again. Isn't that enough? Does age really matter? Can't you try to be happy for me? For us?\"\n\n\"I'm sorry, Mother,\" Marina relented, melting into Brosie's embrace. \"I'll try.\" \n\n\"That's all I can ask,\" Brosie sighed, kissing Marina's head. \"That, and that you stop trying to sabotage us. Let's just have fun for the rest of the day, okay? No more trying to expose us? We'll tell Hank's parents when we're ready. Agreed?\"\n\n\"Yes, Mother. I agree,\" Marina nodded, wiping her eyes. \"I'm sorry. I apologize to you, too, Hank. I haven't been very fair.\"\n\nIf this was to be a long-term relationship, it might as well start now, with a gesture of good will on my part. \n\n\"Thank you, Marina,\" I smiled. She accepted it with a nod. Perhaps the hug could wait. \n\n\"Alright. Everybody outside, we have guests,\" she winked at me, and herded us upstairs. \"They will be wondering if we're stomping the grapes ourselves!\" \n\n***\n\nI must admit, I was surprised at Marina's immediate shift in attitude. While she didn't welcome me with open arms, she did seem to be more content with my presence. It was a welcome change, and took the pressure off. \n\nWith that in mind, I felt a little less dread at spending the night here. I was still going to be on the couch, but at least I could actually get some sleep. \n\nMaybe. \n\nBefore I could go to bed, I had to help my Mother get Dad into bed. If you recall, I told you Dad was drinking? Well, he finally stopped, not because Brosie ran out of wine, but because he passed out. Just after we all ate dinner, dear old Dad had excused himself, laid down on his lounge, and fallen deep asleep. I can only imagine what he was dreaming about. \n\nAnyway, I had picked up my Father, draped him over my shoulder, and followed Mom through the house to the guest suite. He barely made a noise as I deposited him on the mattress. \n\n\"Do you need help undressing him?\" I asked her, as she looked at him disapprovingly. \n\n\"I think he's fine as is. If he wanted to be comfortable, he shouldn't have gotten drunk,\" she said, gesturing in exasperation. \"Thanks for dragging him in here. When did you get so strong? I guess you're not my little boy anymore, are you?\" ",
        "\"Goodnight, Mom,\" I smiled, closing the door behind me, as I headed to the living room. Brosie was there, pulling out the couch, and putting the sheets on my bed. \n\nShe had a little smirk on her face as she did so, and looked at me dreamily when I helped her. \n\n\"I'd rather have you upstairs,\" she whispered. \n\n\"I'd rather have you, period,\" I smiled. \n\n\"Mmmmm, don't tempt me,\" she purred. \"It's going to be a long, lonely night, knowing you're right down here, so close, but out of reach.\" \n\n\"Hey, I'm not immune, you know,\" I giggled. \"I haven't even had the benefit of alcohol. I have to do it sober.\"\n\n\"Believe me, it's not that much help,\" she shook her head. \"I didn't drink that much, anyway. I'm going to go to bed now, alone, and cry myself to sleep. Goodnight, Hank.\" \n\nShe looked around, especially upstairs, then crooked her finger at me, beckoning me closer. \n\n\"At least a kiss?\" she asked. I would have happily volunteered. \n\nShe felt wonderful in my arms. Her lips were deliciously soft, and her chest equally so, pressed between us. What was meant to get us through the night apart was making it even more difficult to be apart. Finally, she reluctantly pulled away. \n\n\"Goodnight.\" \n\n***\n\nIt was dark. That was my first impression, upon waking. I wasn't sure what had woken me. Then I felt it again. I wasn't alone. Somebody was in bed, next to me, and that someone had just grasped my penis, in her warm, soft hand. \n\n\"Mmmmm? Please tell me that's you, baby,\" I mumbled, \"otherwise we have a whole new set of problems.\" \n\n\"Who else would be grabbing your dick this time of night?\" Brosie asked, in a sexy whisper. \n\n\"No one. Like I said, if it was anyone else, we'd have a new problem,\" I answered. Her hand stroked me slowly, waking my willing cock. \n\n\"Well, then... No problem,\" she purred, rubbing her body against me. \n\n\"You mean, other than my Mother, my Father, and my sister, all within earshot?\" I reminded her. \n\n\"I hadn't forgotten, party-pooper,\" she whispered, pulling on my nearly fully erect penis. \"I'll be quiet. I promise. Not a peep. I just really need your big cock. My pussy is so lonely.\" \n\n\"What time is it?\" I asked. \n\n\"A little after two,\" she replied. \"Marina and Sharon stopped yacking a little over an hour ago, and your parents haven't made a sound. I figure everyone is as asleep as they're going to get. Everyone except us, that is. Come on, honey. I need it. Fuck me. No one will ever know.\" \n\nI was hopelessly outvoted. The only one in the negative was a small part of my brain, that was desperately afraid of getting caught. Otherwise it was unanimous; all those in favour say 'aye'? The motion is carried. \n\nBrosie rolled on her back, pulling me on top of her, and spreading her legs wide. Her hand deftly guided my dick between her lips, then moved aside, grabbing my ass to pull me inside. \n\n\"Oh, yes, that's better,\" she hissed, searching out my lips as I slid deeper into her vagina. \"Mmmmm. So good.\" \n\nYou know what I discovered? \n\nSofa beds are not built for comfort. Sofa beds are not built for sex. Most definitely, sofa beds are not built for quiet sex. \n\nI wasn't going to be able to fuck her with any gusto. Anything beyond the threshold of gently shafting her in a slow, even rhythm was met with a distinct, piercing squeak. A squeak that would be noticeable in broad daylight. \n\nIn the absolute silence of the darkness, the squeak sounded like an alarm going off. The pace of the squeaks made the source of the sound blatantly obvious. I froze. \n\n\"Don't stop, baby,\" she begged. \"Do it slow, but please don't stop.\"\n\nIt took a few minutes of experimentation, but I eventually found a way. If I kept to just this one part of the bed, and didn't lift up too high, and maintained a rhythm just so... I could give her what she was asking for. I couldn't help thinking this would be a lot easier in her big, solid, quiet bed, but that would be in the room right next to Marina and Sharon. At least here, we were more isolated. \n\nTrue to her word, Brosie was nearly silent, the only sounds being her quivering, excited breathing. Even that seemed unnaturally loud in the quiet house, but I knew it wouldn't carry too far. \n\nWe fucked like two horny ninjas. No slapping of flash. No grunting, groaning or moaning. Even the sofa bed cooperated, maintaining its silence. I could feel Brosie, as her body began to shiver. Her head buried against my neck, she whispered in my ear. \n\n\"I'm cumming, baby,\" she breathed, and bit my shoulder, muffling her gasps of pleasure. Her body clenched, over and over, until she finally relaxed. \"Oh, fuck, yes. Thank you. Please, don't stop.\" \n\nIn the dark, without a clock, and not having any way of guessing the time, I have no idea how long we went at it like this. It wasn't physically taxing, really, other than the effort required to keep quiet. Emotionally, it was a roller-coaster. \n\nI was very happy that I was able to give my darling Brosie such pleasure. She came again, and again, and again, barely making any sound at all, while her body screamed her orgasms silently. I could feel every blissful spasm, not only when her pussy clutched at my cock, but as her breathing became more ragged, and her grasp of my shoulders grew tighter. \n\nOn the downside, I was terrified. All it would take was one lapse in control, from either of us. Just one plaintive moan of pleasure, that would echo through the silence, might bring an end to our secret. \n\nI paused, letting her catch her breath. There was just enough light to make out her silhouette, against the white of the sheets. \n\n\"Let me on top,\" she whispered. \n\nAs quietly as humanly possible, we reversed our position, and she straddled me, skewering her juicy cunt. I felt the soft fullness of her breasts resting on my chest, and she began to grind her clit against the hard base of my shaft. \n\n\"Oh, good god,\" she hissed. \"I like this quiet thing. It's so intense.\" She sat up, braced her hands on my chest, and rubbed herself harder against me. I could see her outline, those big tits jiggling, her head thrown back, mouth ajar in ecstasy. \n\nSuddenly, I could see a lot more than just her outline. I could see her eyes, wide in surprise, as a weak, but distinct light came from the kitchen. It lit her up like a spotlight, bouncing breasts and all, for a second... before she dropped her upper body on my chest, hiding in the shadow cast by the back of the couch. \n\nWe held our collective breath, literally, until the light went out, after about thirty seconds. I heard footsteps, disappearing in the distance, then my heart pounding. At last, we both took a breath. \n\n\"Holy shit!\" she gasped, in a whisper. \"Your father, in his underwear, raiding the fridge...\" she breathed, peeking over the couch. \n\n\"How did he not see you?\" I asked. \n\n\"He was looking in the fridge, not out here,\" she explained. \"Thank god.\" \n\nMy dick was still hard. How? I'm not sure, since my heart had stopped completely, I think. Brosie sat up again, and went back to riding me, as though the world hadn't just come within a whisker of ending. \n\n\"Mmmmm,\" she whispered. \"Cum for me, honey. Let me ride you, until you're close, then I'll suck you, and swallow your delicious seed.\"\n\nHer silhouette was dancing again, and I let her take control, finally relaxing enough to feel the pleasure she was providing. Her pussy rippled along my shaft, milking it, and making my eyes cross. She was so good to me. \n\nI tapped her on the shoulder, and she dismounted quickly, replacing her pussy with her mouth. For the second time today, her lips coaxed my cock to orgasm. I bit my knuckle, and spewed down her throat, listening to her gulping it down. Once I was completely empty, she slid back up beside me. \n\n\"Oh, that's much better,\" she giggled softly. \n\n\"I'm so glad you think so,\" I replied, breathing hard. She kissed me, then snuggled into my side. \n\nWe lay silent for a few minutes. \n\n\"Honey?\" she asked. \n\n\"Yes?\" I answered, wrapping her tighter in my arms. \n\n\"I feel guilty,\" she replied. \n\n\"Why?\" I asked. \n\n\"Your parents. I don't like lying to them,\" she said. \"I mean, if we were just messing around, fucking for fun, and we knew it was going to end, then maybe hiding it wouldn't be so bad. What they don't know wouldn't hurt them, or us.\" \n\n\"Right, but we're not just messing around, are we?\" I reminded her. \n\n\"Exactly. Marina has a point. She made me think about everything involved,\" she clarified. \"About being in love. If we're really in this for the long haul... and I want to be clear that I'm definitely, in it for long haul... then we should tell them. It's not going to get any easier, by waiting longer. It can only get worse.\"\n\n\"You're sure that's not just Marina talking?\" I asked. \"She's been a pain.\" \n\n\"Yes, she has, but that's not it. Especially after today, getting to know your parents better, I just don't want to start off with a huge lie,\" she explained. \"We've already told a big enough one.\" \n\n\"I don't know. I think it will get messy,\" I said. \"Very messy.\" \n\n\"So... what? We just lie to them forever? That's not the way to live our lives. I want to be with you, all the way,\" she pleaded. \"If it gets messy, we deal with it, but it's out in the open.\"\n\nWhen we arrived here today, I was worried about our affair becoming common knowledge, at Marina's hands. Now it appeared we'd be doing it ourselves, on purpose. As much as I hated it, she was right. If we were ever going to be together, honestly, we should start now. \n\n\"Okay. How do I tell them?\" I asked. \n\n\"I think it should still come from me,\" she answered. \"I started it, in Santorini. I should tell them.\"\n\n\"Okay, honey. I trust you,\" I said softly. \n\n\"I guess I can stay then, huh?\" she giggled, getting comfortable. \"If they catch us here, they catch us here.\"\n\n***\n\nI actually slept. \n\nI know, I should have been petrified, but knowing the secrecy was ending on our terms was very liberating. That, and the fact that we'd both cum, made it easier to sleep. \n\nStill, we woke at dawn. After only a couple of hours cuddled together, the birds outside signalled the morning, and roused us. \n\nNo angry parents were staring down at me. Yet anyway. \n\n\"I'm going to start the coffee, and get dressed,\" Brosie sighed, stretching like a naked cat in the living room. I watched her wander into the kitchen, flip on the coffeemaker, then walk slowly upstairs, all still starkers. Apparently, she found it liberating, as well. \n\nI stayed in bed on the couch, and drifted off again, only to wake an unknown length of time later to the smell of bacon being cooked. I wasn't the only one. \n\nWithin minutes of me rising, I had been to the bathroom, dressed, and returned to the kitchen, where I gave Brosie a kiss, a neck nuzzle, and a good morning fondle of her breasts. Seconds later, the bacon zombies began to arrive, stumbling along, following their noses to the source of the smell. \n\n\"Breakfast will be ready in a few minutes,\" Brosie said happily. \"I hope we have enough. Usually cooking for two, not six. The coffee is ready, over there. Can someone please watch the toaster oven?\" \n\n\"I got it,\" I smiled, moving over to the other side of the kitchen. The oven was full of english muffins, getting golden brown to go with the bacon Brosie was frying. The eggs were next. \n\nShe was amazing to watch, flitting from one pan to the other, while talking with my Mother about how she slept, etc. Everyone was getting along great, and even my Dad, who must have been nursing a wicked hangover, was cheerful. \n\nI had a feeling that was going to change, quite soon. Just exactly when, was up to my darling. \n\nWith all the food successfully prepared, we took our seats around the large dining room table. Random chance put my seat next to our hostess, and she soon found my leg under the table. Her foot rubbed against me, soothing my fears. It was a very pleasant, relaxing breakfast, among friends and family. \n\nThe shit was about to hit the fan. \n\n\"Carol,\" Brosie said softly, starting the ball rolling. \"You wanted to know more about this boyfriend of mine?\" \n\nI saw Marina's head turn, and she made eye contact with me. I would have expected a look of satisfaction on her face, but saw concern instead. \n\n\"Ooooo, yes! Dish it out!\" my Mom smiled. \"Tell me more!\" She was eager, and not quite listening yet. \n\n\"It's Hank,\" Brosie said, plainly. \n\nMarina dropped her fork. \n\nMom laughed, then frowned. \n\n\"I don't get it. What's the joke?\" she asked. \n\n\"It's Hank,\" Brosie repeated, taking my hand. She slid her chair closer, and pressed her body into my side. \n\n\"I still don't get it,\" Mom laughed. \"Did you two cook this up? Is it some kind of test, to see if we're sober?\" \n\n\"No joke. No test,\" Brosie shook her head. \"My new boyfriend is Hank.\" \n\n\"That's not funny,\" Mom said sternly. \n\n\"It's not a joke, Mom,\" I said, stepping into the fray. \"Brosie and I have been together, since we met in Greece.\"\n\n\"What?\" my Mother snarled, looking away from me, and fixing her cold stare on Brosie. \"You mean to tell me, that you've been having sex... that you and... you've been sneaking around, having sex with my little boy, for weeks now?\" \n\n\"I'm not a little boy, anymore, Mom,\" I replied. \"You said so yourself, last night.\" \n\n\"Oh, shut up, Henry!\" she snapped. \"We'll deal with you later! Right now, I'm talking to HER!\" she jabbed a finger at Brosie. \"How could you?\" \n\n\"We didn't plan on it. It just happened,\" Brosie said softly. \"He's a wonderful young man. You should be proud.\" \n\n\"Oh yes, I am. Let me shout it from the rooftops, how proud I am that my son is fucking some bimbo old enough to be his mother!\" Mom yelled angrily. \n\n\"Hey, Mom? That's not fair! We're trying to be honest with you! You know how easy it would have been to keep it a secret? You had no idea before now. We're telling you out of respect,\" I said, defending my lady. I saw the tears starting in her eyes, and knew my Mother's words had cut deep. \n\n\"Well, I'm not feeling much fucking respect!\" Mom cursed. \"Respect would be keeping your hands off another woman's children! Respect would be showing enough good sense not to let this happen! Respect would be thinking of others, not just your own perverted needs!\"\n\n\"Per... Perverted needs?\" Brosie asked, her tears flowing. \"To be loved?\" \n\n\"Love? You think this is love?\" Mom gasped, shaking her head. \"It's just sex! Don't hide, and call it love! You like getting fucked by young guys! Admit it!\" \n\n\"Mom! Stop!\" I warned her. Brosie's grip on my hand was tighter than I would have thought possible. \n\n\"Herbert! Get in here! Don't make me do all the work!\" Mom screamed, urging my Dad into the argument. \n\n\"Now, Carol, don't get so upset,\" Dad said calmly. \"He's an adult now. A young man, with a young man's urges. If he wants to satisfy those urges with a MILF, then let him. You know it won't last. Let him have his fun with an older woman. Once he gets to college, he'll find a nice girl his own age, and he'll forget all about her.\"\n\nThat was about all Brosie could take. She burst into tears, and ran out of the room, towards the back yard. \n\n\"I've got her,\" Marina said, directing her gaze at me. \"You stay here.\" \n\nI was stunned. My mother being upset beyond reason, I could understand. She was angry, and lashing out, unaware of how her words were hurting both of us. Dad, on the other hand, was calm, and collected. The tone he delivered his message with made it doubly insulting. MILF? Won't last? Forget her? My shock turned quickly to fury. \n\n\"Fuck off! Both of you!\" I cursed, standing angrily. \"You can't talk to her like that! I love her, and I won't stand for it!\"\n\n\"No, son,\" Dad continued, as though I hadn't said a word. \"What you love is her big breasts, and how willing she is to show them to anyone who wants to see them. That's understandable. Sex is a very powerful instinct. It's not love. It's lust.\" \n\n\"I think you should leave, now,\" I told them. \"Before I say something I might regret.\"\n\n\"Great! Let's all get out of here! You're never to see Mrs. Castellanos again, is that clear?!\" Mom demanded. \n\n\"I'm not coming with you,\" I replied, holding back my anger. \"I said YOU should leave.\" \n\n\"You're my son. You do as I say!\" Mom yelled. \n\n\"No, Mom. That time is past. I'm legally an adult, and can make my own choices. I've made it. I'm staying,\" I answered. It felt good, being freed of their control. My parents weren't ogres. They had always done their best, and taken very good care of us, but in this case, they were wrong. \n\nMom made one last stab at exerting control. \n\n\"As long as you live under our roof, you'll abide by our rules,\" she said confidently.\n\n\"Oh god, here we go,\" I scoffed. \"Straight from page 7 of the parenting handbook. My roof, my rules. Really? You can't do better than that?\" \n\n\"Honey, we love you, and we're just looking out for you,\" Mom said, softening her tone. \"You're too young to make this decision. Don't ruin your life with this, this... woman.\" \n\n\"I'm done talking. You can go, anytime. See the door?\" I pointed. \n\n\"If we leave, you're not welcome back,\" Dad said. \"No place to live. No money. No paying for college. Be sure you understand that before you send us away.\" \n\n\"Whatever. The door?\" I pointed again. \n\n\"Fine,\" Dad said, and stood up. \"Good luck, and goodbye. Let's go, Carol. You too, Sharon.\"\n\nMy sister had been sitting there, in stunned silence throughout. It was a lot to take in.\n\n\"I, um, I'm going to stay,\" she said softly. \"Marina said she'll give me a ride home later this afternoon.\" \n\n\"If you wish. Carol?\" Dad said, already walking toward the exit. \n\nMom was torn. She looked at Dad, then at me. We'd never had an argument like this, and now she was confused. I wasn't coming home? She was hurt. \n\n\"Mom, I still love you, but I can't live with you, if you're going to behave like this. Maybe we can talk sometime soon, when you've calmed down,\" I said. \n\nShe nodded, and joined my father at the door, giving me one more painful look. \n\n\"I'll be fine,\" I told her. \"Goodbye.\" \n\nThe door clicked closed behind them, and I exhaled, looking at my sister. \n\n\"Wow,\" she giggled. \n\n\"Yeah. Wow,\" I replied. \n\n\"Hank, I'm your sister, which means I love you, and hate you at the same time,\" she smiled, walking over to hug me. \"That was the most romantic thing I've ever seen. The way you stood up for her? You must really love her.\" \n\n\"I do,\" I nodded, holding Sharon close. When we separated, I saw Brosie and Marina, watching from the kitchen. Both were crying, and holding each other. \n\n\"I, uh... I think I'm going to need a new place to stay,\" I shrugged. \"Know of any place?\" \n\nThey started toward me, holding hands, but Marina peeled off partway, to join my sister. Together they went outside, leaving Brosie and I alone. \n\nWe lunged into each other's arms, and she wept again. These tears were different, though. Not sad, but deliriously happy. They soon had me joining her. We held each other and let the emotions out, until we were both a sniffling, teary-eyed mess. She pulled away, and walked a few steps, coming back with a tissue for each of us. \n\n\"Oh, boy,\" she smiled, blowing her nose. \"Let's see... You say you need a room?\" \n\n\"Yes,\" I nodded. \n\n\"Well, I'm not sure I have a whole room for you,\" she giggled, hooking her arm in mine, and leading us up the stairs. \"More like a portion of a room. Just the part, with the empty half of the bed in it.\" \n\n\"That's probably all I need, anyway,\" I smiled, watching her eyes clear of any trace of sadness. \"What's the rent like?\" \n\nShe paused at the top step, and kissed me. It was a kiss of love, so deep and tender. We were together. \n\n\"I'm sure we can work something out,\" she whispered. ",
        "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhew! I hope you had as much fun reading this one as I had writing it. \n\nThanks for your time, and please cast your votes. I'd love to hear from you."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "brunette",
        "big tits",
        "mature",
        "older woman",
        "younger man",
        "conflict",
        "romance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/immortal-gift-of-beauty-ch-03"
}