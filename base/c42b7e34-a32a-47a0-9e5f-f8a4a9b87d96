{
    "title": "Shaking It Off",
    "pages": [
        "The very first part of this actually happened: a long line in a college-town mens' room in the Rocky Mountains, with two drunk chicks standing beside the urinal gazing wastedly at all the guys peeing. It seemed odd, but I peed anyway; they just watched in dull silence. That, and the bit where the newspaper guy does the interview over coffee; that sort of happened, too.\n\nWeird times.\n\nThe rest is all fiction. It's short and, maybe, unexpectedly sweet. I'm entering it in the 2020 Valentines Day contest. Make sure you read all the entries and vote on your favorites!\n\n* * *\n\nI leaned against the wall in the sticky hallway at The Alibi, the bathroom door just a couple guys away now, wondering why the line was moving so slow. Or, hell, why there even was a line, even though this place only had one urinal. We're men; that's supposed to be the karmic bargain. We don't get to wear sandals to work, but at least we don't have to wait in line for public restrooms.\n\nThe guy in front of me, hipsterish, his hair looking oily, leaned forward and peered past a bathroom door propped open by someone's foot from inside. I saw him squint, then nod.\n\n\"What's going on in there, dude?\" I asked, cradling my beer carefully. I heard a laugh from inside, curiously high-pitched. Hipster looked blankly back at me.\n\n\"There are two chicks by the urinals, watching us piss.\"\n\n\"No shit?\" This had happened to me before, but not in awhile. It's the kind of thing that happens sometimes in college towns, especially sleepy ones. Boredom. Cheap thrills, even if all you've got is watching guys pee. I slurped back more beer. \"Whatever.\"\n\n\"Right?\" A wave of laughter sent another guy out, red-faced, and all of us shuffled forward a step. Now I was the guy by the door, and Hipster had ducked straight into a conversation with a girl, by the sound of it. I peered around the door to see his head bent toward a short girl with an immense cloud of curly black hair. I got the quick impression of a huge white-teethed smile.\n\n\"Hi,\" I heard her say as Hipster drifted deeper inside. \"I'm Nicole from Chi Kappa. Do you mind if we watch you pee?\"\n\n\"Knock yourself out,\" I heard him belch, and then their voices faded into another gush of laughter from over by the urinals as a bemused guy walked back toward the door, shaking his head. The urinal flushed.\n\nI was shuffling through the door a moment later into a heart-shaped face lit by the bluish light of her cellphone. I blinked. \"What's up?\" The girl's voice sounded familiar somehow. \"I'm Nicole.\"\n\nI glanced up at Hipster, still with his ear bent toward the shiny coils of the other chick's hair. \"I thought she was Nicole,\" I frowned, gesturing with my chin.\n\n\"We're both Nicole.\" The line was still moving. \"We're from Chi-Kap. We want to watch you pee. You up for it?\"\n\nI swirled the beer in my glass. \"Whatever it takes so that I can empty my bladder,\" I sighed. She was nodding, jabbing rapidly at her cellphone, then peering at me with her head cocked and a strange look on her face. \"What?\"\n\n\"I think I know you,\" she blurted. \"Keith, right? Keith Longstadt?\" I shrank back, starting to get the horrible suspicion that I'd fucked this girl at some point, probably at some party. I didn't go to many of those anymore, but she looked old enough to have already been here when I was an undergrad.\n\n\"Yes,\" I nodded, cautious. A big part of my mind was hoping I had fucked her, because she was exactly what I like to see in a girl: long legs, nice tits, and a challenging gleam in her eye. She looked very familiar. \"Nice to meet you.\"\n\n\"So,\" she went on, ignoring me, \"the girls rate your package when you pee, then if you get a good rating we call you and invite you to our Valentines Ball.\" We were moving steadily through the line, but she was talking fast; she must have gone through this spiel a couple dozen times. \"Sound okay?\"\n\n\"As long as I get to piss,\" I grumbled. The urinal flushed, another guy walked away, and Hipster was next in line; his Nicole, with the mane, slipped away to smile at the guy behind me, launching into the same speech my Nicole had given me. Say what you like about Chi-Kap, home of the C-Kups, but they were acting like a well-oiled machine. I glanced at the two wasted chicks in the corner by the john, watching Hipster's zipper intently; one of them was drinking from his beer. I stirred and blinked; she'd asked me something else. \"Huh?\"\n\n\"I said, are you a junior? Senior?\" She scanned me doubtfully. \"Sophomore?\"\n\n\"I'm a grad student.\" Second year too, I thought of adding, but she didn't seem to care much.\n\n\"Interesting. We don't get many of those. Anyway, type in your digits then, honey.\" She pressed her phone into my hand, its case sticky with the beery fingerprints of the men who'd pissed ahead of me, and I thumbed my numbers in carefully. She'd labeled me Grad Guy: Tall (Keith L). \"Fantastic,\" she purred. \"Maybe we'll be in touch, cutie.\" She slipped me an exorbitant wink, then fluttered off to deal with the guy behind the guy behind me.\n\nThe fuck. I wondered whether the management knew these girls were in here. Or whether they cared.\n\nI shifted my gaze toward the two drunk chicks. They were hot, of course, but then they were C-Kups. All the girls in Chi Kappa were hot. Hell, all the girls in all the sororities were hot. One looked like she was fresh off a surfboard: tall, too blonde, too tanned. The other was a sharp-featured brunette with quick eyes. She was the one drinking Hipster's beer. \"Thanks,\" slurred Blonde. \"I want to shake you off.\" She didn't wait for a reply, just leaned in with her lower lip between her teeth and reached to the front of the bemused Hipster's pants.\n\nHe zipped up, then flushed, and then he was turning away with an eye-roll as he took back his beer. He threw me a veiled glance as he passed, and then it was my turn. I stepped up to the urinal, not even worrying about the puddle underneath it.\n\n\"Sixty-five,\" Blonde called out once Hipster had left the room.\n\n\"Nah,\" Brunette burped. \"Seventy. He wasn't bad.\" She blinked, then focused on me. \"Hi, buddy. I'm Rachel. You going to piss for me?\"\n\n\"No.\" I unzipped and began digging into my boxers. \"I'm going to piss for me.\" I held out my beer. \"You mind?\"\n\n\"Lay it on me, baby,\" Rachel crooned, watching closely as I pulled my penis out. Her hand closed around my beer, then brought it to her lips automatically. She'd done this a hundred times, sucking down my ale, her eyes never leaving my crotch. I glanced over at Blonde during that awkward few seconds while I was waiting until I let go.\n\n\"I'm Keith,\" I shrugged, and she smiled as my urine began hissing into the bowl. Her eyes were blue, and massive.\n\n\"Hi, Keith.\" She seemed pleased. \"Nice to meet you.\" Blonde, apparently, had no interest in giving me her name, or maybe she was just too wasted to care. I took advantage of her attention to sneak a peek at her cleavage, which was a deeply shadowed valley behind a cropped blue top spattered with some sort of red drink. A diamond twinkled in her belly button.\n\nI tossed my head back and closed my eyes, feeling the sweet relief as my bladder let go. When I risked a glance at the girls, they were nodding thoughtfully at me. I cleared my throat and smiled. \"Can I get shaken off, too?\"\n\n\"Hell yeah,\" Rachel giggled. \"Definitely.\"\n\nI took a deep breath and jerked my head behind me, the piss still streaming into the urinal. \"Can she do it? The one who took my number?\"\n\nBlonde looked at me, completely confused, but finally the sun rose in her mind. \"Oh! Cool. Hey!\" she shouted into the line behind me. \"Nicole!\"\n\n\"What?\" Two voices said it, and Blonde rolled her eyes. \"Nicole R! Get your fucking ass up here!\"\n\nI heard the grit of Nicole's Chuck Taylors on the damp tile. \"What? I'm busy.\"\n\n\"Our new friend here wants you to shake him off,\" Blonde giggled. I was starting to peter out, my flow stuttering into the bowl now as I flexed my dick to drive the last of it out. Rachel was still staring at my cockhead.\n\n\"No shit?\" Nicole sounded just as fast, just as businesslike, as when she'd briefed me, and all at once there she was, her face at my shoulder. She jerked her head at Blonde. \"Just let Veev here shake it. You can probably get her to put out for you, too,\" she chuckled, and then I saw her look down. \"Definitely.\"\n\n\"Hey!\" The blonde seemed offended.\n\n\"I was kidding, Veev,\" Nicole went on quietly, and then she met my face with a carefully neutral expression. Her eyes never wavered from mine as she rested a hand lightly but familiarly on the top of my ass, then closed my shaft in her long-nailed fingers and wagged me around a few times. We both smirked. \"There you go, cutie,\" she said, her voice low, and then she was stuffing my penis with great competence back through the hole in my boxers. She gave me a squeeze at the end before she pulled her hand back out. \"It's been real. Now, if you don't mind? There are boys waiting behind you.\" She slowly pulled up my zipper, then patted my ass. \"Bye, now.\"\n\nRachel, grinning, was holding out about an inch less of beer than what I'd come in with, and I gave her a warm smile. \"See y'all later, ladies,\" I said with a wink, and then I was carrying my lipstick-stained glass out to a whisper and a burst of laughter from behind as they gave my rating to the Nicoles.\n\nI chose not to tell my date about all this when I got back to our table. After all, I'd only known her for a couple months or so. We didn't need to tell each other everything.\n\n* * *\n\nI sat down at my desk a couple days later, swamped in the midst of Cubicle Country in the English Deparment's gym-like office. I'd finally gotten rid of the last member of my intro writing seminar; for some reason, I often came back from class with a gaggle of girls in tow, each one wanting help with her thesis statements.\n\nFuckers. As though their high school teachers had taught them nothing.\n\nBut teaching required low-level seminars is one of those chores that grad students just have to do, and I always tried to be courteous and respectful before I booted my students out on their asses. Of course, I also made sure I had them seated within full view of Kylie, one of my fellow grad students, so that she could corroborate me if any of the students lodged complaints. The University sex-harrassment policy was surreal, though fortunately it hadn't stopped Kylie and me from hooking up on occasion. She sucked a mean dick in the departmental copy room, as I'm sure a lot of her own intro-seminar students would love to know.\n\nOver on the other side of my cubicle wall I could hear the tinny noise from Jeff's earbuds. Jeff was forever listening to things like Puddle of Mudd and Nickelback, while researching Faulkner. I had little time for him, but right now I had a text on my phone from an unknown number. I stared at it. Call me was all it said, and it was signed Nicole.\n\nInteresting.\n\nI tipped my chair back, perched my feet on the desk, and waited while my phone made the connection. The voice at the other end sounded just slightly slower than it had the other night in The Alibi bathroom. \"Hi, Keith. So happy you got my message.\"\n\n\"Nicole.\" I licked my lips and glanced across the aisle at the other cubicle; predictably, Kylie squeaked back in her chair, checked to make sure I was alone, and winked at me. \"What's up?\"\n\n\"Well,\" she began, getting to her point with quiet glee, \"I called because I'm wondering whether you remember what I told you at the bar the other night.\"\n\n\"What you told me in the mens' restroom?\" I chuckled. Kylie made a face at me. \"So much went on. Refresh my memory.\" In my mind I had a clear image of her face, her hand repacking my dick, the general naughtiness of the whole thing.\n\nShe sighed in my ear. \"The Chi-Kap Valentines Ball. How we were planning on inviting the highest-rated men from the bar the other night.\"\n\n\"The highest-rated penises?\" I was enjoying this. I could tell that Kylie was not. \"Sure. I remember.\"\n\nShe allowed me an icy pause, just to let me know she wasn't amused. \"So, I'm pleased to let you know that you made the cut, so on behalf of the Lambda Chapter of Chi Kappa International, I hereby invite you to be one of our Chi Kappa Valentine's Sweethearts, and extend an invitation to our annual Valentines Day Ball.\" She waited for me to gush, and when I didn't, she tacked on, \"it's on February 12<sup>th</sup>.\"\n\n\"A Valentines Ball?\" I asked after a cautious pause. \"Like, what's presumably inside Cupid's diaper?\"\n\nShe let the silence stretch, then sighed. \"It's a Chi-Kap tradition dating back to 1937.\"\n\n\"Whoah. No shit?\" I was impressed. \"C-Kups have been haunting the Alibi's men's room since 1937?\"\n\n\"Evaluations and standards might have changed over time,\" she snapped. Now she sounded like she had the other night. I was surprised and pleased that I had to adjust my dick. \"Between you and me,\" she went on primly, \"your rating was the third-highest on the night.\"\n\n\"Did I get bonus points for the clarity of my urine?\" By now, Kylie was staring across at me in very frank curiosity.\n\n\"You did get bonus points for being a grad student,\" she admitted. \"And for your generally confident manner. Which, I'm pleased to see, was apparently not a fluke.\"\n\n\"Apparently not. Do I bring a plus-one?\"\n\n\"Well, that brings me to the point of my call. There are certain traditions that the Chi-Kap sisters need to inform you of, so I'd appreciate your email address so that I can send them along.\" She paused. \"Personal, please, not your university account.\"\n\nI barked out a quick laugh. \"Email?\" I sat up, my chair creaking. \"What is this, 1999? Nah. Can't you just tell me now?\"\n\n\"It's a complicated event, with a lot of moving parts,\" she hedged. \"I'd really rather not.\"\n\n\"Well then,\" I said with quiet relish, remembering the oddly familiar feel of her hand on my butt, \"you'll just have to tell me over dinner. Say, Thursday night? The Commons Taproom?\" I held my breath. I didn't often swoop in quite this soon, but she was awfully sexy. \"My treat, of course.\"\n\nShe was silent for so long that I was pretty sure I'd offended her, but eventually I heard what could have been either a sigh or a giggle. \"Not a fluke.\" She paused again, and when she spoke once more it was in her usual rapid-fire delivery. \"Take me for coffee. Tomorrow afternoon works for me. Meet me outside Schindler Hall at one-thirty.\"\n\n\"I'd love to,\" I replied, with what I hoped came across as real warmth. My dick suddenly needed another adjustment.\n\n<br >\"And don't be late,\" she warned. \"At one-thirty-one, I'll find another boy to take me out.\" I was laughing when she hung up, and I was still smiling a few minutes later when Kylie asked me if I'd go with her to the copy room. She'd seen me messing with my cock, so she figured she should take care of that.\n\nKylie was a good friend.\n\n* * *\n\nI wasn't sure whether Nicole had meant for me to pick her up in my car or on foot. It was kind of a long walk... but, seeing as how my car had a three-month supply of trash on the floor of the passenger seat, parking near the dorms was a bitch, and there were about a dozen coffee places within smelling radius of Schindler Hall? I just walked.\n\nI was a little surprised, as I waded through the kids being belched out of the College of Business near the dorms, that Nicole was living there instead of in the Chi-Kap house on Sorority Row, but I know a lot of Greek students can't afford it. So, dorms. Meal plans. RAs. Noise complaints. I imagined she was saving up to move out. Or maybe she was a freshman; they're required to live in the dorms.\n\nWhatever. C-Kup house or Schindler Hall, as long as she had a bed, I was pretty sure she and I could figure out a way to pass the time. I smiled to myself, dodging undergraduates, as I remembered the challenging look in her eyes when she'd shaken me off. She was game, I was sure. Whatever this \"Valentines Ball\" was, I thought I had an idea how it might be ending for a C-Kup named Nicole R.\n\nShe waited outside the dorm, looking sleek and tight in a polka-dot dress with a knit sweater over her shoulders against the late-winter chill. She'd done her hair in a tight bun and then spent some time picking lipstick that matched her shoes. I felt like a schlub in my Lucky jeans and an old LA Kings jersey. But she'd come down to meet me, and that was enough.\n\n\"Hi, Nicole,\" I called as I came up out of the crosswalk, angling away from the stream of students I'd been floating in. She glanced over, and just before her face took on its no-nonsense expression of Swiss neutrality, I thought I'd seen a quick twitch of her lips and a glitter of mischief in her eyes.\n\n\"Keith.\" She looked me up and down, making sure I caught her faint air of disapproval. \"Late for practice? Where's your stick?\"\n\n\"You know where that is,\" I volleyed, and I was rewarded to see her blush just a bit. God, she was a sexy little thing! \"I think you've seen it, though if you really want to, I could probably find it again.\"\n\n\"I'm sure you could.\" She did smile then, that gravely mysterious smile women do so well, and once again I had a sudden flash of deja-vu, like I'd seen her before. She'd certainly seen me; I still wondered how she'd known my name, and I assumed I'd find out over coffee. I'd decided I couldn't have fucked her; there's no way I'd have forgotten her.\n\n\"You look beautiful,\" I told her, and I didn't even need to fake the sincerity. She noticed too, nodding graciously.\n\n\"Thanks.\" She found a stray tendril of her hair in the February breeze and tucked it behind her ear, looping it under the arm of her cat's-eye glasses. \"So. Where are you taking me, cutie?\"\n\nI felt a warm thrill. Yup. She was game. I thought fast. \"First? I was thinking we could go to Samurai's Teahouse.\" It was a really nice place, one which I'd never have been caught dead in as an undergrad. They had a pool table, though, so I felt it was sufficiently masculine. I held out my hand, and after a moment she took it. Her fingers were cold.\n\n\"First?\" We started walking south, off campus, to what I thought of as the Coffeehouse District. Once more, she brushed back that troublesome strand of hair. She gave a low laugh. \"And second?\"\n\n\"Depends how Samurai's goes,\" I smiled, and her laugh became an eye-rolled sigh. \"What?\"\n\nShe looked up at me, a dimple forming. \"Not a fluke,\" she nodded. I had a sudden urge to curl my arm around her waist, and I was pretty sure she wouldn't mind, but something told me to hold off.<br ><br >The day was just beginning.\n\nI showed her to a dark-lacquered seat in the corner, just under a potted fern, then stayed on my feet to go up to the counter. \"Can I order for you?\" I thought I'd gotten a good sense of her, picking up on her personality, and I liked thinking I could figure out what she wanted. If not, there were ways to flirt about that too. \"Satisfaction guaranteed, or your money back.\"\n\nShe cocked her head. I wanted to lean in and suck on that neck. \"That doesn't work,\" she said. \"I'm not paying.\"\n\n\"Well,\" I shrugged, \"then I guess I'll just have to find another way to make it up to you, won't I?\" I winked down at her. \"Trust me. I'll find you something you like.\"\n\n\"Promises, promises.\" She was shrugging out of the sweater, showing pale shoulders, and I had to force myself to turn away over the creaking floorboards. I was beginning to suspect I'd met my match, and then some. She'd dressed in precisely the right way to draw me, the dress perfectly fitted to her body, her eyelashes on point. <br ><br >I wasn't the only one who could read people, and I was starting to realize that. \"Do your best, Keith.\"\n\nThe barista was lovely too, in that perky nerdish way so many of them have, and as I waited in line I reflected how, when you're feeling horny and have found your target, that's when every woman starts to look hot. She peered up at me through her glasses and gave a dazzling smile. \"Hi there!\" she began in a pleasant voice, unexpectedly low. \"What can I make for you?\"",
        "The tip jar was very full at my elbow, and I could see why. The girl was really a pistol. The nametag at the tip of her jutting tit said Tanya. \"So, here's the thing,\" I told her, leaning close enough to smell her shampoo. \"I'm here on a date with a pretty girl.\"\n\n\"Mm.\" She leaned in to meet me, her eyes huge behind her lenses. There was nobody in line behind me. \"Lucky girl. First date?\"\n\n\"Yup.\" I winked. \"I'm thinking something with peppermint. Or maybe salted caramel.\" She was scanning the restaurant.\n\n\"The little lady in the corner? Polka-dot dress?\" I nodded as the barista gave Nicole the once-over, that look women give each other when they know they're in sexual competition and the stakes are high. \"Cute,\" she allowed.\n\n\"Right?\" I watched as she screwed her face up in concentration, then we both nodded. \"Salted caramel,\" we both said at the same time. She laughed and clapped her hands while I made a show of sliding a five into the tip jar. \"Large please, darling.\"\n\n\"Bullshit,\" Tanya corrected me absently, digging out a mug. \"Girl like that? She's a medium. She doesn't have time for a large.\" She nodded to herself, her lips pursed. \"For here, right?\"\n\n\"You know it.\" I slipped out a ten, hoping it would be enough. None of the drinks had prices listed. She was smirking at me.\n\n\"And for you, sugar-poo?\"\n\nI grinned back. If I'd come here last week, this girl would be full of my semen already. She was an absolute peach. \"Large. Black. Nothing extra.\"\n\n\"Nothing?\" She raised her eyes in surprise, then sighed. \"Look, you know I'm a professional barista, right? That asking me to make you a black coffee is an insult?\"\n\n\"Well I'll tell you what, Tanya,\" I winked, \"you know I'll make it up to you. Right?\" She was still giggling as she slid the drinks across the counter, complete with a receipt that had her phone number scrawled across the top. \"Thanks, darling. Take care.\"\n\n\"Come back soon, handsome.\" She jerked her chin toward my corner. \"Once you get rid of her, that is.\"\n\n\"I'll keep you posted,\" I winked, but I already knew I had no need. I could tell that getting rid of Nicole R was probably going to take awhile. \"Later, doll.\" Nicole was leaning on the table when I got back, slouched enough to show impressive cleavage but with her back straight enough to avoid looking like a slut. Everything about her screamed awareness, presence, even class. Even the way she looked up at me, her eyes dark as they peered out between her lashes and the upper rim of her glasses...\n\nI swallowed. I wondered whether I'd perhaps bitten off more than I could chew here.\n\n\"Your beverage, Nicole,\" I smiled, sliding her mug across the polished square table. \"You'll enjoy it.\"\n\n\"Will I?\" She glanced down at it. \"Better not be peppermint. It's the worst thing about winter.\"\n\n\"Do I look like the kind of man who'd even consider getting a woman peppermint coffee?\" I raised my eyebrows, righteous in my innocence. \"Never.\" I'd instantly rejected the idea of sitting across from her, instead sliding onto the angled bench right beside her. I didn't stop until our knees touched, and she showed no surprise at all that I'd chosen to sit next to her. She smiled at me.\n\n\"Good.\" She was still eyeing me as she lifted her mug to her lips, blew on it briefly, then inhaled. \"Mmm.\" She sipped, a dainty slurp. \"Nicely done, Keith. A good choice.\"\n\n\"I know.\" I took my own mug, a small; my empty wallet testified to the prices here. I raised mine. \"Cheers. To shaking it off.\"\n\nShe smiled broadly then, suddenly, like the sun flashing from behind a cloud. \"Oh, I'll definitely drink to that.\" We sipped together, and goddamn if Tanya didn't make a fine cup. She set hers down. \"Black and bitter?\"\n\n\"Like my soul.\"\n\n\"Nice.\" She dabbed at her lips with a black napkin. \"So. Want to hear about the Valentines Ball, or were you just going to hit on me?\"\n\n\"Both,\" I replied immediately, easily. I wanted to move closer, so our hips could touch, but then I'd have nowhere to put my left arm. Except over her shoulder or on her leg, and I could sense this wasn't the time. Yet. I shrugged instead. \"But since you bring it up, I am curious about this Ball of yours.\"\n\nShe quirked into a smile, and I could see the pun forming on her lips, then fading, her fingers drumming the table. \"So,\" she began, settling back against the warm wood, \"here's the story. Chi-Kap's got thirty-one sisters, not counting pledges or the faculty advisor. Every year, the new pledge class is in charge of getting boys to come to the party. The pledges attend, but don't participate.\" She sipped. \"So, thirty-one boys.\"\n\n\"Men,\" I corrected gently. \"Some of us, anyway.\"\n\nShe raised one eyebrow, but just let the silence stretch while she sipped at her drink again. \"Well. So, the boys come over. We all have a party, and then the party ends. Simple.\"\n\n\"And,\" I said seriously, \"no cupid costume.\"\n\n\"It's not a themed party, really,\" she shrugged, yawning. \"There'll probably be plenty of kissing, though.\"\n\n\"So what do I wear, if not a nifty costume?\"\n\nShe waited, making sure I could see the disapproval with which she eyed my Kings sweater, and when she was finally done she looked away. \"I'd probably advise you to use your best judgment, Keith, only I'm not sure that's wise. A jacket would be a good idea. Probably a tie; you don't want to be the schlubbiest dude there. Can you do that?\"\n\n\"You'll be amazed to see the transformation, Nicole.\"\n\nHer smile was thin. \"I'm sure.\" Another sip, precisely metered, and I grew enchanted by the subtle crescent of lipstick she was leaving on the mug. It would look good on my dick, I reflected, and I felt it give another of its lurches. \"Whatever you wear, you should bring along a bag with some clothes and things. Most guests treat this as a slumber party, pretty much.\"\n\nAh. \"And no date?\"\n\n\"The fun thing about this particular party,\" she went on softly, getting to her point with some enjoyment, \"is that we treat it as sort of a matchmaking event. We pair you up with one of the sisters.\"\n\n\"Do you!\" This was intriguing. I'd been to plenty of Greek parties as an undergrad, with plenty of anonymous hookups, and they were always super-hot. This was sounding just fine. Chi Kappa was one of the sororities known for the quality of its ass. I leaned in toward her, waiting until she made eye contact. \"Present company included, I sincerely hope.\"\n\nShe stared at me, her head cocked, and then smiled slowly. \"I already told you,\" she said quietly, \"the pledges attend, but they don't participate.\"\n\nI raised both eyebrows. \"You're a pledge?\"\n\nShe shook her head sadly. \"Alas, yes. I'm afraid I won't be able to shake your dick again on the night,\" she sighed. \"I'm the pledge class secretary. That's why I was the sober one the other night in the mens' room. We let the drunk ones do the rating.\" She smiled. \"You understand, Keith. Most Chi-Kaps who see penises are drunk, so what's the point of having the sober one rate the cock?\"\n\nI chuckled and raised my mug again. \"Well, then I was the lucky one. I got a sober chick to rate me.\"\n\nShe shifted her eyes pointedly down toward my lap. \"No, actually,\" she said. \"I took no part in rating you, cutie. But, between you and me,\" she added, leaning in and dropping her voice, \"you didn't need my help. Veev and Rachel were pretty impressed by you. So.\" She drank again.\n\n\"But you'd have helped,\" I nodded. \"If there'd been a tiebreaker.\" She was staring at me, and I felt like I was slowly, slowly sinking. But I'm a good swimmer. \"I think you liked me.\"\n\n\"I think I probably did,\" she smiled. \"But that's neither here nor there. We assign the evening's guests to our sisters in the order they were ranked. Highest-ranked boy is hosted by our President, Bella. Secretary gets the next ranked. You?\" She glanced at her phone, which had just vibrated. \"Well. I'd tell you who our third-highest sister is, but I prefer to preserve the element of surprise. Just trust me: she's very, very attractive.\" She paused. \"Do you like big tits, Keith?\"\n\nI didn't hesitate for an instant. \"I like your tits, Nicole.\"\n\nShe smiled. \"So charming.\" She slurped down the last of her coffee. \"This really was delicious, Keith. Thanks so much for treating.\"\n\nI made no effort to move from the bench. I still had the bottom third of my coffee to drink. \"Don't mention it,\" I winked.\n\nShe checked her phone once more. \"Your date for the Valentines Ball has a really beautiful body,\" she went on briskly. \"Amazing chest. Nice girl. You'll like her.\"\n\n\"I like everyone I know in Chi Kappa,\" I nodded, my hands spread innocently.\n\nShe acknowledged the compliment with a smile. \"Not a fluke,\" she said once more, glancing again at my lap. \"So. You'll be there?\"\n\n\"Try to hold me back.\"\n\n\"Good.\" She looked away, toying with her mug, spinning it on the table. \"I'll see to it you have a really great time, Keith.\"\n\n\"I already am.\" I leaned in again. \"Can I ask you something? How did you know me at the bar the other night?\"\n\nHer eyes went wide. \"You don't know?\"\n\nUh-oh. Maybe I had fucked her. \"Or I wouldn't ask,\" I told her smoothly. She gazed thoughtfully at me for a few seconds.\n\n\"Well,\" she said finally, that smirk of hers teasing at the corner of her mouth, \"here's the thing...\"\n\n\"Excuse me!\" A brash voice, very loud, but making an effort to be polite-ish. A tall man had just crossed to our table. \"Can I bother you two for a sec?\"\n\nThe change that came over Nicole's face as she shifted from mine to the new guy's was amazing. She went from a coolly dimpled, self-possessed young woman to a fiendish bitch in a fraction of a second. To be fair, I was no less happy. \"We're talking,\" she spat, as though it weren't obvious enough.\n\n\"Good,\" the new guy said obliviously, \"because I'm doing interviews for the Daily Collegian. The newspaper? I was looking for cute couples, and you guys are. So. Mind if I ask you a few questions?\"\n\n\"What's this for?\" I asked.\n\n\"I write the Love Notes column. I'm doing a Valentines Edition.\" He was pulling up the voice recorder on his phone. \"I'm Nathan. You're a couple, right?\"\n\nI looked over at Nicole, she looked at me, and we didn't even need to speak. I slid straight over to her, and she laid her hand immediately on my thigh. \"Of course,\" she went on, only slightly thawed. She leaned into my side as I draped my arm across her slender shoulders, her skin warm and dry where I touched it. \"As long as it won't take long, Nathan. We were just getting ready to leave.\"\n\n\"We're off to the movies,\" I supplied.\n\n\"Rom-com.\" She licked her lips. \"What are your questions?\"\n\n\"Okay. First off, names?\" He smiled disarmingly. \"Just first names are fine.\"\n\n\"I'm Nikki. He's Keith.\" She was warm against my body, her hand moving up and down my leg with easy familiarity. Like we really were a couple.\n\n\"Great. So, what's the most important part of keeping your partner happy in a relationship?\" Nathan, I reckoned, was a virgin. He had that sense about him.\n\n\"Good listening,\" I sighed. I'd read that on the cover of Cosmopolitan at the rack up where Tanya worked.\n\n\"Yes,\" Nicole agreed. \"And it's also important that your man know your coffee order.\" We both chuckled.\n\n\"Okay.\" Nathan's eyes were dodging back and forth between us, but they were mostly looking at Nicole's chest. \"What's the strangest thing you two have in common?\"\n\nShe squeezed my thigh. \"I was amazed to hear that he was really into progressive jazz. I love prog music.\"\n\n\"Yeah.\" I blinked. \"Nikki's dad used to be a drummer in a progressive blues band. Up in Canada.\" I laughed. \"If a prog-jazz guy and a prog-blues girl can get together, there's hope for the world.\" I paused. \"Nice guy, your dad,\" I reflected. \"I enjoyed that time he took me fishing.\"\n\n\"Right?\" She grinned. \"They came back to camp with this big-ass fish, and Keith saved me the best part. Fried it up just for me.\" She tipped her head up and laid a warm, casual kiss on my lips. She smelled like vanilla and tasted like salted caramel, and she was still looking in my face when she added, \"That was the night I gave you my asshole. Wasn't it, Keithie?\"\n\n<br >\"Well,\" I yawned, patting her shoulder, \"I'm not sure Nathan needs the gory details.\" We both laughed, and she kissed me again. I was loving this. Her lips were just the right size, just the right firmness. \"But yes. I think it was. Because the next week we had that threesome with that one chick?\"\n\n\"Mmm. Alessandra.\"\n\n\"Right. And I know I'd already done you there, by then. Because you kept trying to get me to fuck her up the ass, too!\" I laughed.\n\n<br >\"Poor Alessandra.\" Nicole was shaking her head sadly toward Nathan. \"She was too small for him.\" The reporter just blinked back. \"But yeah. Definitely prog music. I've never dated a guy who likes that.\"\n\n\"Definitely.\" Her body curved so comfortably against mine.\n\nNathan seemed uneasy. \"Okay!\" I saw his adam's apple bob. \"Well. So, what are your plans for Valentines?\"\n\n\"I'm going to fuck her,\" I deadpanned. \"Hard.\"\n\n\"All three holes, probably,\" Nicole added, nodding thoughtfully.\n\n\"No, seriously?\" I was warming to my topic. \"Nikki here is really into charity work. So we might head down to the river and do some trash clean-up.\" I nodded.\n\n\"See how much he loves me?\" Her hand squeezed again, slightly higher. I was feeling lightheaded. \"I know he hates garbage. But he'll take me to pick some up anyway.\" She turned back toward me, her eyes dancing with mischief. \"Excuse us, Nathan. I think we're done here.\"\n\n\"Oh!\" He had a sickly look on his face. \"Thanks, guys. I think I've got everything I need, anyway.\"\n\n\"Yeah?\" Nicole was snuggling into me, her hand on my chest now, her breath warm across my neck when she spoke. \"You sure you don't need a picture? For the paper? I'm sure we could give you a good one...\"\n\n\"No, no. That's fine.\" Nathan was sliding his phone away, his face red. \"I'm good.\" He patted his pockets, like a 75-year-old seeking his car keys. \"Um. Thanks, guys.\"\n\n\"Don't mention it,\" I smiled. Nicole was a compact armful, her tits pressing against my arm. I was very aware of my penis, jutting off to the side, and of the vanilla smell of her hair. I waved with my free hand. \"You have a good one now, Nathan.\" She was nuzzling her nose into my neck, almost catlike, as he made his successful retreat, and then it was just me and Nicole and the frankly envious gaze of Tanya. I ran my hands idly along the skin at the top of Nicole's back, where her dress gave out. \"You didn't tell me you were a Nikki.\"\n\n\"I'm not.\" She kissed my jaw once, then came up with a smile. \"You smell nice.\"\n\n\"Thanks.\" She stayed tucked into the crook of my arm like a coiled snake after a meal. \"Admit it,\" I challenged as we settled back. \"You enjoyed that.\"\n\n\"I enjoyed making little Nathan uncomfortable, if that's what you mean,\" she shrugged. Her hands curled up along her sides, adjusting her bra without shame, and she didn't seem surprised when I watched her breasts bounce back into shape. She glanced casually down into my lap. \"You enjoyed it.\"\n\n\"I did.\" I'd learned, early in my collegiate life, that some women don't like it when you show them you're hard for them. And that those aren't the kind of women I need to pursue. I spread my legs, my cock a thick curving lump lying across right thigh. \"See?\"\n\n\"Of course I see.\" She reached clinically down and tweaked my bulge. \"Should I look away while you adjust?\"\n\n\"No need.\" I struggled in the close confines of the booth, with her pressed up next to me, but eventually I got the damn thing pointed up. She was grinning the entire time. \"Next time, you can help me out with it.\"\n\n\"I just might,\" she nodded, gathering up her phone. \"Walk me home, cutie. I've got class in half an hour.\"\n\n\"Of course.\" Tanya's eyes were riveted to Nicole's face as we slid off the bench, and I realized too late that I didn't know whether this was one of those clear-your-own places. I was scanning around for a hint when Tanya called out from behind the counter.\n\n\"Leave it. I'll take care of it.\" Nicole chortled quietly at the surliness in the barista's tone, pulling her thin sweater across her tits. \"Y'all come back now. It's been a real pleasure.\"\n\n\"You said it.\" We strode for the door, me grinning benignly while the two girls traded tight nods. We were out the door and up the street before I remembered what we'd been in the middle of. \"So,\" I ventured. \"Would you like to continue?\"\n\n\"Huh?\"\n\n\"How do you remember me, Nicole?\"\n\n\"Ah.\" She walked a few more steps, then reached casually up and looped her arm through my elbow. I liked having her close, and I was a little wary that she wanted it too; she seemed a little bit too smart for that, but I was willing to ride that horse as far as I could. Even if it was only the couple of blocks to Schindler Hall. \"Do you know me, Keith?\"\n\n\"You've watched me piss, kissed me, and caused an erection,\" I pointed out evenly. It was only now starting to subside, half a block later. \"I'd say I know you.\"\n\nShe laughed loudly. \"Touche, sir. But apart from that?\" She peered up at me, curious. \"Sure you haven't seen me before?\" And there it was when I looked back at her, that nagging sense of familiarity.\n\n\"No,\" I admitted at last. \"I'm not sure. But I doubt I'd have forgotten you.\" She nodded once, pleased at the compliment. \"Were you in my seminar or something?\"\n\n\"God no. I'm a computer science major. You're... let me guess... communications?\"\n\n\"English.\"\n\n\"Same thing, really,\" she shrugged dismissively. \"Words. Anyway. I know quite a bit about the great Keith Longstadt, star goalie for the Seaborne Sailors.\" She laughed. \"I'm from Seaborne too. I went to high school with your cousin Lacey. Lacey Charles.\"\n\n\"Oh!\" Lacey was quite a bit younger than me. \"You're a freshman, then?\"<br ><br >\"Sophomore.\" We were passing Butcher Hall now on our right. \"She and I weren't close, but I read alllll about you in the local paper.\" I drew myself up a little proudly. We'd won the state championship my senior year, with me shutting out the defending champs. Assholes. \"You were the greatest thing since sliced bread.\"\n\n\"Or at least since football season,\" I said modestly, and she squeezed my arm.\n\n\"Bet you got all kinds of ass after that,\" she mused. I said nothing, but she was wrong. I might have been the state-champion goalie, but it was still only soccer. \"Pussy for days.\"\n\n\"Maybe a blowjob or two,\" I nodded, \"but it wasn't football. We didn't have any cheerleaders.\"\n\n\"Ah. Such a pity.\" She reached over and flicked at the front of my pants. \"You're making up for lost time, huh?\"\n\n\"Hey!\" I raised my hands defensively. We were drawing near to Schindler. \"I'm not the one who asked to have my dick manhandled in the bathroom.\"\n\n\"You were, actually,\" she replied mildly. \"I seem to recall you requesting me.\" She chuckled. \"After you did that, a whole bunch of other guys did too.\"\n\n\"Really!\"\n\n\"Really. I touched a lot of dick that night.\"\n\n\"Well, whatever,\" I protested. \"But I'm not the one who decided to go into the mens' room and just start squeezing balls.\"\n\n\"You could've just gone into the stall.\" She wasn't serious, though, bringing me to a gentle stop as we reached the front door. \"So I'll put you down as an RSVP yes. For the Valentines Ball.\"\n\n\"Absolutely.\" I got a thrill as I looked down at her. I'd dated many, many girls at this university (depending on your definition of \"dated\"), but this one was different. I'd liked a lot of those; I'd wanted to see them again, sometimes several times, but I'd never thought of any of them as permanent, or even indefinite. This one...\n\nNo. I shook my head. No good thinking about that kind of thing. I was 25, still in school, with no assets except a few brains and a really sincere interest in making sure women enjoyed having sex with me. So no. She was looking at me still, a little redness in her cheeks, and her eyes were dancing again. I realized I was supposed to say something. \"I'd like to see you again,\" I told her, quietly, with students streaming all around us. She smiled. \"I'm glad I've got your number.\"",
        "\"Me too,\" she said, and then she pushed herself up onto her tiptoes and kissed me again, more slowly and warmly than the fake newspaper kisses at Samurai's. There was no tongue, but there was a definite parting of her lips, and a stronger taste of salted caramel. I opened my eyes without realizing I'd closed them, and then her mouth was drifting toward my ear. \"You can come visit me, here at Schindler,\" she murmured. \"Just ask for Nicole Rye. Room 1205.\" She kissed my ear, and then she was slipping through the keycard-access door without looking back.\n\nLeaving me with my mouth wide open.\n\n* * *\n\nAngela Rye had been among the most sought-after girls in my high-school class. She'd been absolute grade-A prime pussy, a girl with the total package and then some, and she'd hit her stride early and often; she'd been held back a year, back in the sixth grade or some shit. The fourth different penis inside her legendary vagina had been mine, after we'd both graduated, whiling away those drowsy eighteen-year-old summer days in a haze of sweat and cum.\n\nShe'd been an ideal physical and psychological specimen, a phenomenal mix of supple flesh, springy muscles, and a good-natured air of self-deprecation with a dash of physical adventurousness rare among the girls I'd fucked in high school. Angela had been my first glimpse into a world where lying naked on a bed after sex, trading jokes and soft laughter, could be just as much fun as hearing her smoky growl when she gritted her teeth as she came around my dick. She'd been smart and witty and earthy and hot, a good friend as well as a delightful fuck-partner. She was an absolute jewel... if you were a guy. If you were a girl, she'd claw your eyes out.\n\n<br >But she'd been game. Very, very game.\n\nShe'd been everything that might possibly attract me: she wrote counterfeit term papers, which I respected because I wrote well, too. She taught Sunday school down at the Catholic church, which made it seem all the filthier when I fucked her. My sister Heidi hated her guts, which made me love to bring her around to our house.\n\nI was not Heidi's biggest fan.\n\nAngela, sweet bubbly Angela, had been an absolute demon in bed, and as I walked away from Schindler I thought back to that one day in late August, years ago now, the two of us fooling around on her floor. She liked to do it there, since her bed was so small. She'd called me after lunch to say her parents were out for the afternoon, and that I should come over.\n\n\"Why?\" I'd been trying to act coy, but back then I hadn't been very subtle.\n\n\"See,\" she'd breathed into the phone, chuckling softly, \"I've got an experiment in mind. You should come help me.\"\n\n\"Yeah?\" I'd already been pulling my pants on with the phone clamped between my ear and my shoulder. \"What kind?\"\n\n\"Well,\" she'd explained, \"I want to see how long I can keep you hard without you shooting.\"<br ><br >I'd fishtailed down her street with a lead foot and an iron penis, my shitty truck barely coming to a stop before I was out the door and up the front walk. The front door was locked. \"Hey!\" I called. \"Angela!\"\n\nShe poked her head out her window in her bra. \"Oh, hi Keith. Come on up.\"\n\n\"The door's locked.\"\n\nShe smiled. \"And if you want me, you'll figure out a way to get up here.\" She'd blown me a kiss and then ducked back inside, and by the time I'd made my way across the garage roof and up to her window above the porch, she was grinning out at me, fully naked on her bed, already with two fingers buried in her slit. I'd slid the window up and slipped inside to her laughter. \"It's really sexy,\" she gasped, \"a guy climbing up my mom's trellis just to fuck me.\"\n\nI'd wasted no time, diving between her legs like a dog on a bone. Angela had taught me, early in the summer, how to properly munch a cunt, and she'd been impressed lately with my progress. I took her down hard that day, my mouth driving her gorgeous body deep into her mattress, the grating toothy hiss of her orgasm filling the room even before I was able to get my belt undone.\n\nShe'd kept me there on her floor for almost two hours, my cock hard the entire time, using her hand and mouth and, occasionally, her tight humid pussy, swapping out freely and instinctively, cooing to my trembling cock like a babysitter with some couple's toddler. And then finally she'd sucked me, hard and fast, spitting my semen carefully back into the cup she brushed her teeth with. Panting, my skin sheened with sweat, I'd looked on curiously.\n\nAngela always, always swallowed when she didn't have me shoot on her face or tits.\n\n\"You've never done anal.\" It wasn't a question; I just lay there while she watched my dick spasm. \"I feel like a good strong assfuck. So?\" She'd leaned down and sucked my left testicle deep into her mouth, playing with it on her tongue. \"Get hard again, and you can plug me up, baby.\" She spat into the little cup of cum, then swirled it. \"Lube.\"\n\nI'd laughed, produced a near-immediate boner, and punched my first ass that day, hard and dirty with Angela thrusting her butt vigorously back against me, my cock a frenzied whirl of my own frothy cum. The smell was thick and heady and incredibly sexy, Angela's low moans muffled by the pillow she'd dragged off her bed. I'd had a lot of trouble that night, and all through the next day, my penis throbbing with a deep ache all along its length, my balls feeling like they'd been in a vise all day. But I'd just shot a load into Angela Rye's asshole, so I felt like a king.\n\nI'd left, I remembered, through the front door, the discordant strains of the some sort of teenybopper theme song floating out from the TV in the front room; Angela had taken some grim pleasure in the idea that she'd gotten her ass corked while her little sister hung out downstairs.\n\nI'd just seen that same sister stroll through the door of Schindler Hall.\n\n* * *\n\nI was grading papers next day, ripping my hair out. They don't tell you about this part when you're deciding to go into academia. You think it's going to be all quiet evenings by a fire, reading Coleridge and having insights about rhyme schemes, but really? It's grading intro seminar papers. I'd just read some twit's creative writing piece, her praising the \"furious furriosity\" of one of the rabbits in Watership Down, which she shouldn't even have been citing in any self-respecting college class. I was wondering, too, whether furriosity was an actual word, though I was pretty sure it wasn't.\n\nMy text alarm went. I sprang for it.\n\n By now, you should have come to see me.\n\nI grinned to myself. Saucy little bitch. I hadn't spoken to her since I'd realized she was Angela's sister; I normally give it a good two days. But last night I'd jacked off to the memory of her lips on mine, so I'd been planning on calling today. I flung Watership Down back on the grading pile and shot back a text.\n\nI thought I'd send you an email instead.\n\nMy answer was the sharp vibration of an incoming phone call. I let it ring twice, then spoke calmly. \"Yes? Who's this?\"\n\nShe was silent for her usual pause. \"Email? What is this, 1999?\" I laughed. \"I'm bored, Keith. Come get me.\"\n\n\"And take you where?\"\n\n\"Wherever you want.\" She was smiling, I could tell. \"Except Samurai's Teahouse.\"\n\n\"No? I liked it there.\"\n\n\"The barista didn't like me,\" she explained. Another pause. \"And? She liked you. So let's not.\"\n\n\"Ahh, jealousy. Artless jealousy.\" I mused into the phone, swinging my feet up to the desk. \"'So full of artless jealousy is guilt/It spills itself in fearing to be spilt.'\" She was quiet so long I feared she'd hung up. \"Shakespeare,\" I added.\n\n\"Jesus. I get it. You're an English grad student. Shut the fuck up about it and come see me.\"\n\n\"So? Should we go see a rom-com? Pick up trash by the river?\" I wheedled. I had a lot of grading to do. I didn't care.\n\n\"Maybe go fishing with my dad?\" she giggled. \"Just come here.\"\n\n\"You can help me pee.\" I was already reaching for my keys. I always locked up all my ungraded papers. She gave a dry laugh.\n\n\"I'm sure I could.\" She was still smiling. I could hear it in her voice. \"Room 1205, remember.\" She hung up.\n\nI rode my bike across campus. It never really gets that cold here, but by the time I crossed Central Quad I was wishing I'd worn gloves. Fucking wind. The RA's voice was stern over the intercom when I got to Schindler. \"Name?\"\n\n\"Huh?\" It had come out sounding like a burst of static.<br >\n\n\"Who are you here to see?\" Slow and loud that time. It sounded like a female, but who really knows? I bent down and pressed the speaker button.\n\n\"Rye. R-Y-E. Nicole. Room 1205?\" I'd lived in the dorms myself for three years; nothing in them worked right.\n\n\"Chhhhhhsh,\" came the RA's disembodied reply, but the door clicked and I was in. \"Sign in.\" Yep. Female, a large and angry-looking young lady behind the desk.\n\n\"Of course!\" I put on my most radiant smile, but she seemed completely immune. So I rode the elevator in silence with a couple of freshmen, both bitching about what sounded like the same girl.\n\n\"Dude. She wouldn't put out, bro.\"\n\n\"Aw man! I had her last week. She was totally wasted.\"\n\n\"Weird, man.\" I'd never felt so old, and when the doors slid open on the twelfth floor I bounded off and took a quick left. This was a coed floor, I thought, with the girls on one side and the guys on the other; I wondered, only then, whether she had a roommate.\n\nWell. Whatever. I could do her, too.\n\nThe door clacked open on my second knock, with Nicole on the far side silhouetted in the light through the windows. I'd never enjoyed living so high; too bright, especially in the winter. I had to squint to be able to tell whether she was smiling. \"Took you long enough.\"\n\n\"Sorry.\" I followed her in. She was in boyshorts and an old t-shirt, her long legs on display. It looked like she'd just woken up. \"The internet says you're not supposed to check until like three days after a first date.\"\n\n\"Horseshit.\" She sat crosslegged on her bed, one of the narrow university-issued ones with the iron bedframe. \"That only applies if you're not that interested. You are.\"\n\n\"Maybe.\" I hooked her desk chair with my foot and sat in it, and now that I knew her last name, it amazed me that I hadn't seen the resemblance at once. She didn't \"look like\" her sister, per se, but there were definite similarities around the eyes. Same smile. \"But so are you.\"\n\n\"Of course.\" She leaned back against the cinder-block wall. \"Why else would I call you so soon?\" She patted the bed beside her. \"Come on over. It's more comfortable here.\"\n\nI smiled and glanced around the room. \"No roommate?\"\n\n\"I have one, technically.\" The other bed was bare, but the other side of the desk had the usual tchotchkes on it. \"She's an inconsiderate bitch, but otherwise nice. She's sort of moved into the Gamma Sig house.\"\n\n\"Ah.\" I settled down next to her; it seemed completely natural to raise my arm, and just as natural when she snuggled down into its circle. \"Wait. That's a fraternity, not a sorority.\"\n\n\"I know,\" Nicole replied blandly. \"She's... well, she's a friendly sort of girl. So to speak.\"\n\n\"I see.\" Her hand rested lightly on my stomach, the fingers rubbing gently over the fabric of my shirt. The vanilla smell was stale; she hadn't showered yet. I thought about how her pussy would taste; I knew I'd be hard in no time at all, sitting here with her. But first, the elephant in the room. I cleared my throat. \"So how's your sister been doing?\"\n\n\"When's the last time you saw her?\"\n\n\"August.\" I counted in my head; math is not my thing. \"Six years ago.\"\n\n\"She's a beautician.\"\n\n\"No shit!\"\n\n\"Yes shit. Hair and nails both. She makes mad money.\" She paused. \"She's married now. Got a kid, too.\" Nicole plucked her phone automatically from her bedside table, her thumb already poised to seek out pics of whatever niece or nephew had come from my ex-girlfriend's womb, and I whistled low.\n\n\"You're kidding.\" I thought about it. \"C-section?\" I asked hopefully, and Nicole shook her head with a grim air of schadenfreude. I'm sure I paled a little at that, at the unthinkable mental picture of that splendid vagina of Angela's stretching, spreading, loosening to vomit out the greasy head of some infant. I shuddered. \"Well,\" I added diplomatically, \"I hope she's still... the same old Angela.\"\n\nShe chuckled into my shirt. \"She's a bitch. To me, anyway.\" She sighed. \"I'm sure she was very, very nice to you.\"\n\n\"She was all right.\" I hesitated, then blew out a breath along with my question. \"Ever date a guy she's had?\"\n\n\"'Had?' That's quaint.\" She chuckled. \"No, cutie. I'm not into her sloppy seconds. At least, not for their own sakes. I date who I want to date; has nothing to do with her.\" She paused, reflecting. \"Still. I know she's fucked a lot of guys. So who knows? Maybe one or two slipped into me somewhere. This one time,\" she went on, her hand drifting lazily across my chest, \"I heard her screeching. Like, literally. As if she was being murdered. Took me a few minutes to figure out someone was just banging her like a screen door.\" She giggled. \"Seems like it went on for hours.\" I wound my fingers through her hair, lazily, rubbing at her scalp. She seemed to like it. \"When her door opened, guess who came out?\"\n\n\"Who?\" I already knew, though.\n\n<br >\"The starting goalie of the local soccer team.\" We both burst out laughing, and she looked up at my face. \"You can imagine how intrigued I was to see the same guy in the bathroom line at The Alibi the other night.\"\n\n\"Shouldn't have been all that weird,\" I said quietly, my hand drifting down her back. I felt no bra. \"Soccer goalies need to piss once in awhile, too.\"\n\n\"Sure, but the odds? Two people from the same town in a college across the country? On the very night my pledge class had scheduled for rating cocks?\" She smiled. \"I'm glad, though.\"\n\n\"Me too,\" and I was a little surprised to find I meant it, that I was ecstatic to be here, now, with this woman in my arms, and that I wanted her to know how badly I needed to kiss her. But when I looked down, I could see she wanted the same. Her face came up to mine, focused, her fingers finally stopping, and our lips met with a firmly even pressure that drove them both smoothly open, our tongues sliding out experimentally, testing. When we broke apart after a few breathless seconds, Nicole was laughing.\n\n\"Very glad,\" she nodded, grinning, shifting her weight off my chest and onto her own knees; she wanted to straddle me, which was fine because I wanted the same thing. Her weight settled onto my thighs, the cheap bed groaning beneath us, her face above mine with an oddly possessive look to it. \"So. I'm no longer bored.\"\n\n\"I'm happy to hear it.\" As before with her, my penis was a thick lumpy ridge across my leg, straining at my jeans. A glance at her chest showed her shirt tented over her nipples, and if anything the situation with my dick got worse. I groaned a bit. \"Were we going to go pick up garbage by the river, or what?\"\n\n\"We were,\" she nodded, swooping close to kiss my lips, then my cheekbones, lightly. Teasingly. \"Then we got interrupted.\" Her body vibrated under my fingers as I slid them up her bare thighs, over the boyshorts, up under her shirt. She was firm and warm and perfect, and we were in perfect synch; I only had to raise my chin slightly, my lips parted, for her to meet me with her tongue.\n\n<br >We kissed solidly, like we'd been doing it for weeks. She tasted like toothpaste and she felt like paradise, and after a moment or two I knew the inside of her mouth intimately: the wide gap where her upper molars started, the way her tongue thickened before it lashed mine, the way her breathing got heavier through her nose. I risked a peek and saw closed, almond-shaped eyes, her long lashes trembling; her skin was bright red against mine. I felt her body moving on my legs, inching down my lap toward my chest, her thigh now heavy as it pressed on my cock.\n\nI wrenched off her and then circled my head around, licking at her jawline on my way to her ear; she shuddered against me as she felt my tongue stabbing inside. \"Mmm.\" She was whispering harshly in my own ear. \"Know when I decided to fuck you?\" she demanded, her hands scrabbling at my lower abs.\n\nI swung back around to face her, our chins slick with saliva. My hands were pushing her shirt up and off her tits, which shook beautifully as they settled, her nipples dark and trembling. She let me sweep the shirt off along her arms, stretching high, and then her hands were straight down in my lap as she arched for me, showing off her naked chest. \"Fuck,\" I grunted. My hands closed over her tits, feeling the weight of her firm flesh, my cock rampant under her leg.\n\n\"That's the idea,\" she grated, scrambling to get at my zipper. \"Get that fucking dick out,\" she rasped. I wanted to, desperately; wanted her to see and feel and touch and suck on what she'd done to me. \"I was when you had me shake you off. You're fucking confidence.\"\n\n\"Jesus, you sexy bitch,\" I muttered into her ear, my hands pawing at her nipples like I was tuning a fucking radio. \"You've got me so hard.\"\n\n\"You think I can't tell?\" She was digging down along the trail of hair that stretched down from my navel into my pants, my shirt shoved up under my armpits. My mouth went dry at the sight of her belly, the muscles smooth as she twisted to get at me. \"Goddamn belt. Next time you come here, don't you fucking dare wear a belt.\" She was fumbling now, and I took my hands off her breasts long enough to bat her fingers away and start on my buckle; she'd just latched one hand on my surging cock through my pants when, unbelievably, impossibly, I heard the faint scratch of a keycard in Nicole's door lock.\n\nNicole was staring at me, wide-eyed and flushed from her tits to her forehead, her mouth dropping open and her hand an iron claw on my shaft; I'd just gotten my belt out of the buckle and was starting on my button as I leaned around Nicole's half-nude body, watching in horror as her door swung open.\n\nFor a moment, wildly, irrationally, my first thought was that maybe her parents had come for a visit.\n\nThe young woman who came in was short and seemed to be composed mostly of breasts. It was fortunate for her that her center of gravity was so low, to prevent her from toppling. Nicole twisted her head around, nibbling at her lower lip, then rolled her eyes as she slumped onto me. \"Hi, Leah.\"\n\n\"Well!\" Her voice was like rusty metal. A smoker. \"Look at this!\" The new arrival squinted, leaning sideways to get a better look at what was going on, then gave a low whistle and sauntered toward her desk to set her pocketbook down. \"If I didn't know any better,\" she gloated, \"I'd say my roomie is about to fuck my English teacher.\" She nodded at me over her shoulder. \"Nice to see you, Mr Longstadt.\"\n\nI swallowed, and decided I couldn't count on my throat to produce any sound. So I just gaped instead. Leah was hiked up on her desk with her legs swinging, and now I recognized her: back left of Lecture Hall 4, the 9:00 seminar. I'd know those tits anywhere. She smirked at me now, very unpleasantly. \"Probably a good time to ask you for an extension on the take-home Blake exam?\"\n\n\"Sure,\" I managed, but only barely. Nicole had frozen against me with both hands in my lap, my zipper halfway down.\n\n\"Did you get sick of Gamma Sig, Leah?\" Nicole spat through gritted teeth. Slowly she moved her hands off my body to cover her tits as she swung her leg back over mine. \"Did they finally fill you up?\"\n\n\"Their faculty advisor is over for dinner tonight,\" she explained, shuffling through a pile of her mail. \"I don't think they like me around when he's there.\" Nicole caught my eye and gestured with her chin to where I'd dropped her shirt on the mattress beside me, and I tossed it over to her. Leah was grinning at my wide-open fly. \"Don't stop on my account. You two crazy kids should just feel free to go at it.\" She showed no sign of moving.",
        "I glanced at Nicole, who grimaced furiously as she pulled her shirt down. If looks could kill, Leah would have flown out the window in a mist of blood. \"I was just going,\" I stuttered. I'd fucked in public before, but now wasn't the time. Even if Nicole had been into an audience, there'd be no chance I'd do something like that in front of a student. I sat up straight and tried, with what remained of my evaporating dignity, to stow my penis and zip up.\n\nNicole glared at the world, her hair mussed from my hands, her chin still coated in my drying spit. \"Sure,\" she said in a brittle voice. \"I'll walk you out then, Keith.\"\n\n\"Byee!\" Leah sang from behind us as she shut the door, the two of us scowling in the hallway. On impulse, I laid a hand gently on her shoulder; she melted into me, her arms finding themselves in the small of my back.\n\n\"I'm sorry.\"\n\n\"Come to my apartment,\" I urged. She was shaking her head even before I got the sentence out.\n\n\"I wasn't planning to fuck you,\" she told me slowly, leaning back to look me in the eye. \"I was just wanting to get to know you.\" She smiled, feeling my dick still pressed against her as we embraced, and so she reached down and massaged it slowly upward. I groaned. \"Quit being such a baby.\"\n\n\"Goddamn.\" She wasn't in a hurry to let go once she'd gotten me put back together. \"You sure? My bed doesn't even have any clothes on it.\"\n\n\"I'm sure.\" She hesitated. \"Anyway. The party is tomorrow night. I suppose you'll need all the cum you can get, Keith.\" I was shaking my head, but she slapped my chest lightly. \"Seriously. It's an all-nighter.\" She bit her lip and looked down a moment, then sighed. \"You'll be wanting to have fun. Trust me.\"\n\nI opened my mouth to say something, but clamped it shut again; I'd been about to say something stupid, something sappy. Something true. Nicole was instantly on guard. \"What?\"\n\n\"Nothing.\" I sighed, ruffling her hair. \"I'm glad I came over.\"\n\n\"I'm not,\" she snapped. \"I should have texted you a couple hours earlier.\"\n\n\"I was in class,\" I pointed out.\n\n\"You'd have left early,\" she replied at once, and I figured she just might be right.\n\n* * *\n\nI tried to remember, as I stood in the formal entryway of the Chi Kappa house, why I'd never been there before; certainly my undergraduate self had never been one to shy away from parties, and the C-Kups were well known for their skills in that area. But I felt sure I'd have remembered a sorority house with quite this much opulence, not to mention quite so many pictures on the walls.\n\nThey coated every vertical surface, mostly in black-and-white, tracing a long history of sisters and their various achievements. Along one wall was a series of group shots of the sorority sisters in what looked like the same back garden, starting in 1926 and going through last year, a solid grid of black frames whose images traced the fashions of nearly a century: the hemlines rose until the '70s, then slowly sank once more before slinking up again, but almost every face in every shot advertised health, beauty, and upper-middle-class privilege.\n\n\"Good evening!\" There was a pretty big group of us \"Sweethearts\" gathered in the hall by then, shown there by a nervous pledge called Steph and her short friend Nicole, of the frizzy hair in The Alibi mens' room. The two of them were dressed at the height of their powers, clearly trying to impress; they looked like beauty queens. \"Welcome to Chi Kappa!\" We all turned to see a radiantly beautiful woman enter, proud as any duchess, tall and shapely and with a nose long and sharp enough to spear an olive in a martini glass. Behind her was Nicole Rye, looking severe and composed in a green silk dress worn sexy-tight. I felt my mouth go dry just looking at her, but she didn't even try to make eye contact with me.\n\n\"I'm Bella Parkes, president of this year's pledge class. This is my secretary, Nicole Rye. On behalf of all the sisters, we'd like to welcome you to the annual Valentines Ball!\" She paused, clearly expecting applause, and as the last of the Sweethearts filtered in she got a smattering. Steph and the other Nicole scurried around with a few other pledges, making last-minute tweaks to the numerous hearts and strands of crepe paper scattered everywhere. We'd all been told to put our bags by the door, in a forlorn-looking pile of dirty backpacks that looked very foreign compared to the jackets and ties most of us wore.\n\n\"I'd like to start by acknowledging the efforts of our Special Valentines Coordinators, Genevieve Warner and Rachel Schnitzer.\" We applauded again, a little more enthusiastically; the two wasted girls from the Alibi bathroom were transformed now, looking like confections with their hair piled high. Every man in the room had had his dick evaluated by these two, and as I looked around at the gloating grins on a few of my fellow sweethearts' faces I realized suddenly that a couple of us had done more with those two than simply pissing. Some evaluations had apparently been more thorough than others.\n\nIt made me wonder what Nicole had told any of the others when she called them. Or whether she'd met with any of them later...\n\nNo. I shook that off. This wasn't about her and me. I'd accepted the invitation and now the night would play out however it played out. But it was hard to look away from her, her sleek body outlined in the tight dress, without a twinge from behind my balls.\n\nFuck. Was I getting smitten?\n\n\"Now then. You'll be given a formal dinner, then there'll be a dance, then whatever you and your date want to do.\" Bella smiled, pausing, letting everyone realize she knew everyone in the room would soon get laid, but that she was far too polite to say so. \"You're obviously free to leave at any time, but while you're here, we'd ask you to behave yourselves.\"\n\nA wave of chuckled grins spread through the crowd, accompanied by a pretty blush from Bella and, for the first time, a glance toward me from Nicole. She risked a tiny smile, and my cock lurched again.\n\n\"My pledge sisters and I will be available to answer questions and help out, but please remember that tonight is about you and your dates, in a Valentines spirit of... well, of true love.\" Her mask broke then, her lip curling in a cynical grin, and in a flash I saw exactly what this girl would be like next year, around now, when she'd be behind the double doors at the end of the hall, waiting to see what tasty morsel the pledge class had delivered to her.\n\nMy eyes strayed over to a big easel, with a very old, very blurry photograph propped on it: our predecessor Sweethearts, dated before the Second World War. All the people in that scratchy black-and-white photo were dead now. And idly I wondered to myself whether the Class of 1937 had spent its evening in a state of inebriated naked debauchery.\n\nBecause from the start it was pretty clear that's what we were expected to do.\n\nAll I saw when the doors opened were tits and legs beneath hair piled high, the C-Kup sisters dressed in the most revealing fashions they could manage without flat-out wearing lingerie. We Sweethearts surged in, some more eagerly than others, and as I passed through the broad doorway I traded one more quick glance with Nicole, who just stared back impassively.\n\nYes. Deinitely, some more eagerly than others.\n\n* * *\n\nI didn't know Alexandra Stepanovich, the chapter's social coordinator, fundraiser extraordinaire, mistress of parties, lady of the manor as far as outreach to fraternities was concerned. She was beautiful, poised, perceptive, wise, witty, and extremely sociable. She was a vision in a lacy burgundy gown that set off her blue eyes to good advantage. And she was, as Nicole had implied to me over coffee, the proud possessor of the finest pair of breasts in the entire sorority.\n\nThey were amazing: massive, yes, but also firm and superbly shaped, balanced with gravity-defying perfection above where the tight burgundy lace encased her subtly tapered ribcage. She knew exactly how to present them too, selecting a combination of bra and dress that left her exposed, coquettish, without being even slightly slutty.\n\nI was not surprised that she was the one the chapter sent when it wanted to woo fraternities. It would be a strong young man, I reflected, who could refuse her anything.\n\n\"Hello,\" she said, striding boldly up to me, her eyes big and gorgeous as she held out her hand. \"My name is Alex. I'm excited to meet you.\"\n\n\"No more than I am.\" I glued on my best smile, summoning maximum mojo; it was not difficult to want to talk to this woman. Not at all. I took her hand as she came to me, pulling it closer into a warm embrace. I wanted to feel how she'd fit, and I wanted her to feel it too. Her hair drifting along my cheek smelled of watermelon, her body supple and perfect against mine. \"I'm Keith.\"\n\n<br >She held me close. Dimly, the corner of my eye showed me another guy, lacrosse-strong, already plunging his tongue into the mouth of a woman who was practically humping his leg. Some, definitely, eager. I felt her relax in my arms. \"Let me know what I can do for you tonight, Alex. I'm happy to be your Sweetheart.\"\n\nHer fingertips swept my cheek, the thumb trailing along my lips. \"I think I'm happy about it too, Keith. I think I am.\" She arched a plucked eyebrow at where Lacrosse Boy was already groping his date. \"Some of them probably won't make it to dinner, but I'm hungry.\" She took my hand and guided me between the various couples, some shy, most not, all grinning. \"I hope you are, too.\"\n\n<br >I decided she'd enjoy innuendo. She was easy to read, so far. \"I usually find, at parties like this, that it's not dinner I enjoy. It's usually dessert.\"\n\nShe laughed, a high-pitched yip that a lot of guys probably found charming. \"We're serving lemon tortes tonight.\" She was looking up at me now with a big smile, hoping I'd be able to find a punchline. Hoping I'd make her laugh again.\n\n\"Perfect.\" I winked broadly at her. \"I love a tangy dessert.\"\n\nShe accompanied her next laugh with a pull on my hand, bringing me closer, sharing her space. \"I prefer a creamy one.\"\n\nI gave her a laugh of my own. I knew she wouldn't mind my staring at her chest, so I did; she was walking ramrod-straight, on display. \"So one of us is going to be disappointed, I guess.\"\n\n\"As long as it's not you.\" She leaned her head toward me. \"You're my guest, after all. I value my duties as hostess very, very highly.\" She squeezed my fingers. \"You'll value them too, I think.\"\n\n\"I'm sure. Oh,\" I added, swinging smoothly into Prince Charming mode, stopping short in the middle of the hall and steering her to face me. She looked up, head cocked, attentive; lord, she was a fine-looking woman. I was relieved when my cock twinged. \"Happy Valentines Day, Alex.\" I stooped then and kissed her on the cheek, letting it linger, reminding her that I was a gentleman, but that this wasn't a friendly kiss.\n\nIt was foreplay.\n\nShe understood, her lip disappearing for a moment between even white teeth, and then without a word she took me into the dining room.\n\n* * *\n\nI saw Nicole twice more at Chi-Kap that evening. She and her fellow pledges came out to be thanked and congratulated after the meal, and after we all got up from the table she glided toward me as Alex left me in favor of the restroom, drifting off with two of her sisters and her hand trailing across my ass. I turned into a familiar smell of vanilla.\n\nNicole held herself carefully; I was keenly aware that she was pledging one of the most exclusive sororities at the university, that she was being watched and judged, that there were things she couldn't do and say. I nodded politely. \"Thank you again,\" I said in the buzz of conversation, \"for inviting me. I appreciate it.\"\n\n\"Don't mention it.\" And then she moved in for one of those stilted hugs you get from acquaintances after everyone's been drinking a bit, her hands on my shoulders. But she rose up on tiptoe, her face cool alongside mine. \"I'll be leaving before too long,\" she whispered in my ear. \"Stay the night. Have fun. Then I'll come over to your place and I'll clean her off you.\" Her tongue speared harshly into my ear one time, and then she was drifting off, gliding straight-backed through the crowd, leaving me blinking and hard in her wake.\n\nThat wasn't the last time I saw her, though.\n\n* * *\n\nAlex was an officer of the sorority, the third-ranked in fact, meaning she lived in her own room with, importantly, a queen-sized bed. \"It's really unusual,\" she whispered as we sat listening to Bella Parkes serve as DJ.\n\n\"I'm sure it is.\" We were side-by-side at the head table on a little elevated dais, and I didn't care that the whole place could look up under the table and see my hand curving around the inside of Alex' thigh, just beneath where her hem ended.\n\n\"It comes in handy,\" she went on calmly, \"when my fiance comes to visit.\"\n\nThere was no added tension from the leg under my hand, and I was careful not to show any either. \"There's no way he likes the idea of this party,\" I replied diplomatically, but Alex just laughed.\n\n\"Oh, honey. He has no idea about this party.\" She leaned quickly over and laid a cool, dry kiss on my lips. I had no time to respond, but smiled afterward. \"He's not going to hear about it from me, either.\" She glanced down into her lap, where I'd begun running my thumb up and down the skin of her thigh. \"That feels nice.\"\n\n\"Good.\"\n\n\"You?\" She sipped at her after-dinner coffee. I knew what she meant, but I had no idea what the answer was. So I paused, looking off to the side with what I thought of as a manly expression.\n\n\"You know that time,\" I began cautiously, \"where you've met someone? And you're both attracted? But nothing's official yet, and you might jinx it if you say anything?\" She was grinning, nodding. \"That's sort of where I am.\"\n\n\"Don't I know it, friend.\" She sighed. \"She's a lucky girl, whoever she is. But... well, you're not exclusive, right?\"\n\nI smiled. \"I'm here.\" I met her gaze, held it, letting her see in my face how gorgeous I thought she was. Alex blushed scarlet. \"I have a girlfriend. Tonight.\" I squeezed her leg. \"Right here.\"\n\n\"Ah.\" She cleared her throat. \"Then I guess the lucky girl is me?\"\n\nI gave her my warmest grin. Her skin was smooth and very warm under my palm, and she certainly didn't mind my being there. I ducked back into the watermelon cloud to murmur in her ear. \"Where is everybody?\" The sisters and their Sweethearts had started disappearing about midway through dinner, which had been a very nice steak served by the pledges.\n\nMine had come courtesy of tall, blonde Veev from the Alibi mens' room, who had allowed her tit to brush my shoulder as she leaned in with my food. But I noticed she was doing the same thing to all the other Sweethearts too, so I didn't think much of it. Now Alex chuckled softly back at me, then waited until I turned to face her ecstatic grin. \"Why, they're fucking, Keith,\" she explained as though it was obvious. She smiled. \"Apparently, some of my sisters are better at seduction than I am.\"\n\n\"Oh, I doubt that.\" I'd been lightheaded most of the evening, knowing I was going to get to have her. I leaned in for another kiss, light on her ear. \"It's just that I'm still waiting for dessert.\"\n\n\"That's all you're waiting for?\" Her eyes glittered, and under the table I felt her lay her hand on mine, pulling it up her lean thigh and under her hem. \"Shoulda said something.\" She didn't stop, her dress bunching, until my palm clamped comfortably atop her humid mound. My dick spasmed as I felt hair and moisture. \"Remember,\" she went on, her whisper thickening along with my penis, \"my duties as your hostess are very important to me.\"\n\nMore important than underwear, obviously, I reflected. I groped her briefly, getting acquainted with her vaginal geography, then let my middle finger slip just inside her slit. She gasped, her hand making a fist on the table. \"I'd hate to distract you from your responsibilities.\" Alex was a pro; she recovered at once, straightening her glorious body in the spindly little chair we'd been using, and her chin rose with her usual air of cool grace.\n\n\"Let me see what I can arrange for you, Keith.\" Out of the corner of my eye I could see a familiar face out there on the floor, the piled curls of a girl from last year's departmental proseminar, now watching my hand while her Sweetheart ran his tongue across her throat. \"If you'll come with me?\" She winked and squeezed her legs together, trapping me for a moment before she spread them to let me go. \"I think I can arrange dessert in my room.\"\n\n\"Really.\" Bella didn't even notice as the two of us scraped our chairs back and moved calmly toward a side door. \"After you.\" The sleek curve of her hips and ass tempted me as she walked; I knew my boner preceded me, but I didn't much care. After all, a red-faced girl we passed in the hall was getting taken from behind over one of the settees, her Sweetheart working his hips with efficient strokes as his trousers slithered down toward his knees. I doubted a hard-on in my pants would even be noticed at this point.\n\nAlex took my hand, and lifted it quickly to her mouth. A pink tongue slipped out to curl around my finger, the one that had been inside her. \"Tangy,\" she giggled. \"Like you prefer your desserts.\"\n\n\"You're right,\" I told her, and then I dragged her hand down to my crotch. Her fingers tightened reflexively through my pants. \"And I could probably find something creamy for you.\" We stopped, in unspoken synch, and she leaned hard into me against the wall between a group photo of last year's sisters and an ornamental sconce. Her tongue was wet and vibrant in my mouth, stabbing aggressively in along my teeth, her lips pressed selflessly to mine while her hand groped for my balls. \"Where's this amazing bed of yours?\" I muttered into her ear.\n\n\"Just down the hall,\" she slurred, wiping spit off her lips. \"This way.\" We made it, but only barely, crashing through her door in a lusty pink haze even as my fumbling hand got her zipper halfway down her back, her bra-strap crossing pale flesh beyond. The room was shadowed and small, the bed filling most of it, which was fortunate: we didn't have far to go. The back of her knees hit her mattress and she sat heavily, her dress unraveling at her shoulders.\n\n\"Nice place,\" I managed, staring down at her emerging tits in the gloom, her hands already tearing into my shirt. Alex was desperate to get at my skin, leaning in to kiss my stomach as soon as she got me unbuttoned. A button went pinging off the floor. I felt the trembly passion in her body as my fingers traced along her shoulders, then down, pushing at the lacy satin top of her dress, the flesh of those incredible breasts yielding to my hands.\n\n\"Thanks.\" She trailed her tongue out of my belly button, her fingers working at my fly with well-practiced motions. \"Stand there, Keith. I'm going to undress you and then I want my dessert.\" I towered over her, watching her hands as they worked, my own hands balled at my hips. She wanted to serve me? I was fine with that, feeling the cold air on my butt as she fought my boxers over my erection, now pointing at her like an accusing finger. Alex smiled at it, but she didn't touch it yet. \"Lift your feet.\" I rested my hand on her piled hair for balance while she slid off my shoes.\n\nAlex got to her feet after that, carefully folding my trousers, winking at me as she smelled my boxers. \"Just stand there,\" she reminded me huskily, laying my things on a shadowy desk and then coming up behind me with her dying dress finally giving up as it slipped down past her tits. I licked my lips when I saw how her nipples pushed out on her bra. \"You're very handsome,\" she whispered, taking off my jacket and then my shirt, folding them on top of my pants.",
        "\"I'm enjoying my dessert so far,\" I admitted, now stark naked in her room, standing as she moved around me. I knew she was studying me, enjoying my body, and I was fine with that. My dick was way up past the horizontal, my balls heavy beneath, and she ran a teasing finger up its ridges as she turned and bowed her head before me.\n\n\"Help me with my bra?\" I could barely hear her, her voice was so hoarse. The body before me was excited and ready, and when I looked down between us I saw nothing but the curve of her skin disappearing into her dress. Instinctively I ran a hand down there, my other one working at her bra strap, feeling a smooth and perfect female ass. \"Mmm,\" she managed, holding her hair out of the way while I sent my hand around, over her hipbone and into the shadows I'd been in before, beneath the table. The bra began to come free around the time my fingertips found the top of her bush. \"I said help me with my bra,\" she giggled, my fingers creeping through trimmed hair.\n\n\"I am,\" I protested softly. She had a small tattoo, a butterfly at the base of her neck, and I kissed her there gently. The bra clasp, at last, parted in my hands, and at once I laid a warm palm on her bare back. She shivered as I passed my hands across her body, above and below, gently, while her dress slipped down her legs.\n\n\"That feels nice,\" she sighed.\n\n\"It's supposed to feel nice,\" I whispered, and then I stepped into her so that I could nestle my hard dick between the cheeks of her ass, my hands questing down to cup her pussy. Her leg swung sideways, just a bit, as she sagged back against me, and just like that I was inside her again, just a bit, her body riding the space between my fingers and my cock. Her thick red hair brushed my face as she laid her head back against my shoulder, and then I was committed, my other hand grappling her body to knead her tits, confidently, demandingly, and she moaned low in her throat.\n\nShe clamped her hand on mine over her pussy, driving me deeper, showing me what she wanted, and before I knew it my lips were on her shoulder, waiting for her head to come around for mine; we kissed, then, hard and desperate, the spit flying everywhere as our nude bodies started to surge against each other with the hallway light streaming through the open doorway. Vaguely I heard a passing couple, the drawing of a breath, the self-assured rumble of another Sweetheart's voice as they moved toward their tryst, but by then Alex and I were deep into our own.\n\nHer flesh was lush and warm against me, a distant ringing beginning in my ears, and I leaned forward to ease her toward her bed. She collapsed onto the mattress in a whoosh of air, sprawling, and when I landed on her back my dick slipped right between her thighs, surging strong against her wet pussy; I felt the hot kiss of her lips parting around the very tip of my head, and for an instant we froze, locked together, panting while I decided whether to fuck her right away or have a little fun first. My voice was harsh silk in her ear. \"Suck my cock,\" I hissed, and she gave an enthusiastic groan in return.\n\nAfter all, we had all night.\n\nShe wriggled out from under me, panting out short bursts of laughter, then twisted around to kneel on the bed facing me. \"What if I'd rather you just fuck me?\" she grated. Her slit glistened in the hallway light.\n\n\"Because you're my hostess.\" I flung myself down on her bed, scooting up to her pillow with the thick rod of my cock waving almost comically over my belly. \"So? Entertain your guest, Alex.\"\n\n<br >\"Fuck,\" she spat, but it wasn't making a demand; she was acknowledging what I was saying, and so she crawled after me across the bed with those glorious tits dragging, a hungry look on her face as she crept up on my dick. \"I'll entertain you,\" she muttered thickly, my head falling back when I felt her hand wrapping around my shaft; the other found my thigh, and her tongue darted out and flattened itself against my scrotum. She was making eager snuffling noises, the saliva spreading along my penis as she moved her face up, and then I felt the warmth of her mouth crashing down over my head.\n\nShe engulfed me.\n\n\"Goddamn,\" I marveled. Her head was already bobbing, my piss-slit prodding ineffectively at the back of her throat. I reached blindly for her thigh, hooking it, dragging it toward me, wanting her to feel my tongue on her slit. Needing to reciprocate. Longing to make this sexy whore cum like she never had before.\n\nTo her credit, Alex got the message; her lips never left my cock as she swiveled around it, then straddled my face in a sudden reek of sweat and cunt. I was craning upward even before she had her knees planted, and in the shadows her whole world was wide open before me: the rounded cheeks of her ass high above, outlined by the light, and then her asshole in its shadowy crack, then her pussy, smelled as much as seen, waiting for me.\n\nI was up and in her without thinking, my tongue slipping neatly between the puffy pick lips of her needy slit, digging deep until my mouth met her labia. I felt a gust of warmth down my cock, stirring my pubes, as she gasped; her mouth, already an inferno, went thermonuclear. I thrashed my tongue within her, feeling and tasting her tightness, her wetness, the rich deep flavor of her, my nose pressing hard against her taint, smelling gamy richness.\n\nSo intent was I on devouring her pussy that I forgot at first that she was slobbering over my dick, the two of us saying nothing for three or four solid minutes, just lost, worshipping each other. She pulled me back to the present with a waft of cool air across my cockhead as she pulled off me, her back curved high so that she could dive between my thighs. Simultaneously I felt her hair fanning across my legs and her mouth closing hard around one of my testicles.\n\nJesus Christ. This was intense.\n\nThe whole bed reeked already, both of us a mess of spit and precum and vaginal fluid. My hands were up above me now, prying her asscheeks apart, and without thinking I did something I've never done before: I craned up and pushed my tongue hard and fast into her winking anus.\n\nShe freaked at once, twisting crazily over me, her lips sucking hard at my balls. Her ass was dry and a little gritty on my tongue, but it tasted like the same sweaty hormones I'd lapped off her cuntlips. She writhed, struggling desperately to avoid screaming in filthy ecstasy, her hand a blur as it jacked my dick. I could feel her breaths heaving across my midsection and I was dully aware that she was almost sobbing, grunting in great hacking exhales, which only deepened when I pushed my thumb far into her pussy.\n\nHer hair flogged me as Alex twitched, and just as I was pulling my tongue out of her ass and starting to drag it back down to her pussy she straightened up off my cock. She breathed in ragged gasps, rearing above me, and then I felt her hips start to swivel as Alex ground her cunt into my face. \"Yeah,\" she began chanting, her low voice muffled by her thighs clamped over my ears. \"Eat me, motherfucker.\" I obeyed, one hand on her thigh and the other reaching high to twist her nipple, and she was holding onto my dick like it was the only thing keeping her tethered to the earth.\n\nShe was smearing herself over my chin, my nose, her hips in wild motion as my tongue and mouth tried to keep up, but I didn't really have any trouble: all I really needed to do was stick my tongue up and let her slit glide along it, then lean forward each time she swiveled backward so that my lower teeth could scrape across her clit. She swung wildly, frenzied, her fluids soaking my face, and then suddenly I felt her hand tighten on my penis and she drove straight down onto me, both sets of my teeth on her clit now, sucking hard at the juicy little bud in between.\n\nIt had been a long time since a woman came on my tongue, and I'd forgotten how I missed it: the wet, hot filth of the whole thing, the uninhibited motions of Alex' body, all of it had my brain on fire even as her hips calmed down, churning more slowly now, letting my face stir her gently back down from her orgasm as she panted my name. \"Jesus,\" she wailed softly. I was very thirsty, my hands sweaty on her legs.\n\n\"You, uhh, enjoyed that?\" I asked, triumphant, my lips smacking a hard, sucking hickey on her asscheek. Alex sighed, almost more of a whimpery giggle, falling sideways onto her comforter, and I sucked in deep, cool breaths.\n\n\"Jesus,\" she repeated, propping herself on one elbow to twist around and face me. \"You bastard. You know damn well I enjoyed that.\" She flopped around, her face bright and happy in the shadows, and elbow-crawled her way toward me. Her lips hit mine with a smoldering intensity that blended with her hand closing, once more, over my balls to send my libido into orbit. \"Mm.\" She licked at my face, long slow licks like she'd given my cock. \"You taste like me.\" She was still trembling, the spasms coming unpredictably, her hand lazy as it grazed my penis. \"I needed that, Keith. Thank you.\"\n\n\"Anytime.\" Something was nagging at me, something in the air, a slight sense of something familiar. It was almost a smell, but not quite, and by this time it was overlaid with so many other smells it wasn't anything I could put my finger on. Unlike Alex' chest, which I put several fingers on. She rested her chin on my hipbone, smiling dreamily, still bright pink.\n\n\"Wow.\" She licked her lips, then glanced sideways at where my dick stretched, hideously elongated, beside her face. \"You're so hard.\"\n\n\"You too,\" I teased, twisting at the firmest nipple I'd ever felt. She snickered. I stretched my arms above my head, feeling her cream drying around my lips. \"You should do something about that.\" Once more that sense hit me, just on the edge of my awareness, a hint of vanilla...\n\n\"Just relax.\" She moved, crablike, between my legs and settled over my crotch. \"You'll like this.\"\n\nIn the blurry dusk of her room, I watched open-mouthed as Alex draped her tits around my dick, surging hard and straight up into her cleavage, her big green eyes staring up at me while her pink tongue darted downward like a snake's to dab away my precum. \"Fuck,\" I gasped, my head flopping back onto my pillow, and then a silhouette caught my eye in Alex' open doorway. A shape, peering cautiously around the doorframe. A silhouette in a tight green dress.\n\nFor a few moments Nicole watched the other girl pleasure me, then she stirred when she noticed I'd seen her. She smiled at me, then blew a kiss and raised her hand in a \"hang-loose\" gesture, thumb to her ear: call me, her lips were saying, and then even as Alex opened her mouth wide to slide her face down the full length of my penis, Nicole had left the open doorway behind her.\n\nI sighed into the room, wondering what the hell I was doing, my balls jiggling slowly with the subtle attentions of Alex' tongue. My tongue was thick in a dry mouth, remembering that green dress, and without even thinking clearly I was stroking at Alex' face, shuffling my ass backward on her sheets, lifting her chin. I know I was shaking my head, and I can only imagine the look on my face. \"What?\" She settled back on her haunches, my shaft still in her gently moving hand. \"You okay?\"\n\n\"I...\" Fuck. I had no idea. There was nothing I could say to this woman, her bedroom still stenched with the orgasm I'd given her, her eyes now narrowing in confusion. \"Alex, I...\"\n\nShe was feeling it in my cock, though, her hand going still. \"Oh my god.\" She sounded like she couldn't believe this. \"You don't want to fuck me, do you.\" It wasn't a question, and sitting up on her bed, her sublime body nude and ready before me, my mouth still full of the taste of her pussy, I could only shake my head vaguely. \"You're serious?\"\n\n\"There's someone else,\" I managed, my voice strangling in my throat. \"I...\"\n\nShe stopped with her hand at last, her fingers giving my naked balls one final tweak before her mouth fell open. \"Oh my god,\" she said once more, her eyes wide now. \"Are you in love?\"\n\nNo! my mind screeched. Love? What the fuck? I'd met Nicole, what, a week ago? But no sound emerged when I opened my mouth, and that was enough for Alex. She sat back and nodded, but she was starting to smile. \"Holy shit,\" she blurted, \"on Valentines?\"\n\n\"Fuck, Alex.\" My voice repelled me, a low pitiful whine. \"I don't know what to say,\" but she was taking a deep breath and unfolding herself gracefully to her knees, her splendid body rising above me. Her inner thighs glistened in the light from the open door. \"I'm sorry.\"\n\n\"For what?\" She raised my chin to look at her. \"For making me cum? I'm not.\" She bent down to look me in the eye, those nipples still long and sensitive as they trembled over my thighs, and with a little sigh she leaned forward to kiss me, long and deep, once more. \"For turning out to be exclusive, after all?\" She cocked her head. \"Well, don't worry Keith.\" Watermelon, everywhere. \"You really think I'll have a hard time getting a date?\"\n\nI laughed, at least, and she smiled back.\n\n* * *\n\nSorority Row sits on a big grass field. The annual Greek Olympics (a redundant term, you'd think) takes place there in the spring and the ROTC people use it to do maneuvers on some Wednesdays, but at nine o' clock on a February night it's a quiet place of browned grass, abandoned joints, and plastic nip bottles glimmering like little diamonds in the faint light from over in the West Union Parking Lot.\n\nI jogged across it, my shadow very long in the distant streetlights, a wild-eyed figure hastily dressed in a nice shirt minus three buttons, a pair of trousers with faint precum staining the front, and a barely-subsiding erection leading, inevitably, to blue balls; I'd failed to remember to put on my boxers when leaving Alex' room, and at the time she'd just laughed and promised to keep them safely until I came back, whenever that was. But now, it was making it difficult to run very fast, or very respectably, especially in my dress shoes with no socks.\n\nAlex, I reflected, was missing out on dick. But she had a great story and, of course, a blazing orgasm. So she'd be fine. I'd even allowed her to take some pictures of me, before I fled, so that she could amuse her sisters. But I wasn't thinking about her anymore as I scanned the dark field, squinting to see a moving shape against the twinkle of the dorm lights.\n\nEspecially toward Schindler.\n\nI was angling that way, beginning to fear that I'd missed her and that no RA would let me in so late, and in such a state of obvious dishevelment, slowly becoming aware that I'd left both my cellphone and my wallet back on the bedside table in Alex' room. I sped up, hesitating only a moment before I reached down to cup my swinging cock, praying no passing policeman or freshman would spot me.\n\nTwo dark shapes eventually blinked into visibility on the far end of the lawn, with a third shape detaching to head off to the other side of the cafeteria where the South Dorms stood. I heard a bright, tinkly laugh across the grass, and then I was breaking into an actual, honest-to-god run.\n\nI'd have shouted her name if I could be sure it was her, but I recognized the alternative: a wide-eyed guy in a ripped shirt, clutching his groin, charging out of the darkness at two well-dressed coeds on their way home from a Chi Kappa function could end many ways, a lot of them badly. So I slowed down a bit as I got close, but that's when the two shapes spun around to get a look at the footsteps they were hearing.\n\nGreen silk under a short, quilted jacket: that's what I saw first, even before the piled hair and the suspicious face breaking, so slowly, into an incredulous gape. And I certainly caught tall, blonde Veev Warner dropping calmly into a judo stance, her hand in her purse digging, probably, for some Mace, but by then I was feeling comfortable enough to gasp out her name. \"Nicole!\"\n\n\"The fuck?\" Both girls said it in unison, and Veev's eyes narrowed as her hand started to come out of her purse. \"Stop, you fucking perv.\"\n\n\"No, no,\" I panted, stopping uncertainly, holding up my hand. \"It's me. Keith Longstadt, from the Valentines Ball?\"\n\n\"Yes. From the ball.\" Veev straightened slowly, and beside her Nicole was looking wary. \"So what the fuck are you doing here?\" She glanced down. \"And why are you holding your junk?\" She leaned toward me and sniffed. \"And, wait. You reek of...\"\n\n\"I think it's okay.\" Nicole spoke quietly, laying a hand on her friend's arm. She glanced coolly around her: behind them was the well-lit street in front of the dorms. No more need to travel in packs. \"Go on, Veev. I'll call you later.\"\n\n\"Mmhmm,\" the tall girl muttered. She glanced at me once more, a little darkly. \"Your shoe's untied, creep.\" She turned to Nicole, her glance carefully veiled. \"Catch you.\"\n\n\"Yeah.\" They separated with a tense nod, and then I was standing alone in the dark with Nicole, my sensitive dick grazing helplessly against the inside of my zipper. I'd noticed for a week now that Nicole Rye was very good at unreadably neutral facial expressions, and she showed that skill once more. \"So.\"\n\n\"So.\" I was aware of a distinct lack of dignity here, and that my appearance might not even be welcome; when last she'd seen me, I'd been getting my cock slurped by a woman better-endowed than she was, which probably hadn't made a great impression on her even though she'd set it all up. I scrambled desperately through my brain for my lost mojo, summoning up whatever coolness I could find. \"You didn't say goodbye. I thought that was a little rude, frankly.\"\n\nHer eyes flashed, her lips contorting slightly, and for a second I figured I'd made a miscalculation severe enough for her to smack me. \"You're shitting me.\" She shifted her weight and let her eyes go wide behind her glasses. \"I thought my hand gesture was quite clear, Keith. I meant for you to call. Call. Like, on a phone.\" She flickered a scornful glance down my body. \"I certainly didn't mean for you to come lurching out of the night, dressed like a homeless stockbroker and stinking of Alex Stepanovich's pussy.\" She paused. \"I liked watching you with her. And, at the same time, I didn't like it at all.\"\n\n\"Well, you should have thought of that,\" I spluttered, \"before you set me up with her.\"\n\n\"I did think of that,\" she hissed, her teeth gritted firmly. \"I handpicked her for you. She's the coolest woman in that whole fucking house. She's the only one I could think of for you. The only one...\" She trailed off, visibly gathering herself, then continued in sullen silence. \"The only one who deserves you, idiot.\"\n\n\"No.\" I swallowed. \"Not the only one.\" I had to suppress a shiver; I was freezing out here in no coat and a sketchily-fastened dress shirt. I looked at her, straight into her eyes. \"She's not who I want.\"\n\n\"That's not the point,\" Nicole snapped. \"You agreed to go tonight. This party was a big deal for my pledge class.\" She took a deep breath. \"For me.\"\n\n\"Come on.\" I was fucking cold. \"I don't want to talk about this here. My nipples are hard.\"\n\nAnd then, despite herself, Nicole smiled. Just a little bit, but she smiled. She sighed, then took my arm and directed me toward the parking-lot lights. \"Your apartment. Walking distance?\"\n\n\"It'd be a long one.\" Into the wind, too; I thought for a moment about actually going back and begging my jacket from Alex, but Nicole had other plans.\n\n\"Okay.\" She steered me back the other way, toward Schindler. \"I've had a long day. We'll just go to my room instead.\"\n\n\"Will we?\" I swallowed, suppressing another shiver. \"Weren't you even going to ask if I wanted to go with you, or were you just going to assume I'd fall into bed with you?\"\n\n\"Oh, I dunno.\" She was warm and solid beside me. \"You've abandoned my sorority social coordinator in mid-fuck, in the process endangering my own membership. Then you've rushed across the grass with no coat. Forgive me for thinking you might just want to be with me tonight. Besides,\" she added, \"we're going to my room. I never said anything about my bed.\" She was fumbling with her pocketbook, digging for her keycard, and the lobby lights in front of us promised warmth and comfort. She paused before the little card reader, the breeze plucking at the beads along the hem of her dress.",
        "<br >\"I imagine your roommate's not home,\" I said distantly, mostly just looking for something to say.\n\n\"Imagine not.\" She glanced quickly over at me, eyebrows arched. \"Why? Would you flee again?\" The card swept over the reader, and the Schindler doors began a complicated series of clicks and rattles. \"Would you run into the night?\"\n\n\"Maybe.\"\n\n\"Because it's not likely I'd run after you.\" She wrenched the door open and held it for me.\n\n\"I ran after you,\" I pointed out, passing inside. A blower started up, gusting hot air over my chilled body.\n\n\"Yeah,\" she agreed, waiting for me to hold the inner door for her. \"That's why I said not likely. Not impossible.\" She walked by me, her head regal atop her neck, and I smiled to myself once she'd passed.\n\nThe elevator ride was quiet, Nicole leaning pensively against the back, but at least she didn't object when I leaned in right beside her. The tension lasted from the third floor to the ninth, at which point she finally sighed and rested her head on my shoulder. \"I can't believe you did that,\" she murmured.\n\n\"Did what?\" Tenth floor. \"Passed up sex with an absolute goddess?\"\n\n\"Yes.\" She nodded, vanilla against my neck. \"And?\"\n\n\"Sprinted into the night with no underwear?\"\n\n\"Go on.\" Eleventh floor.\n\n\"Faced down an angry Veev and her Mace?\"\n\n\"It's a knife, Keith. She keeps a knife in there.\" The elevator pinged. \"I can't believe you did all that for me,\" she finished quietly, and then she was launching herself into the dusty hallway as the doors slithered open.\n\nHer room was cold and dark when she kicked the door open, her hand sweeping along the wall unconsciously to flick the far switch. A bedside lamp came on with a dull yellowy glow, the big fluorescents on the ceiling staying mercifully off. \"Come on in.\" She tossed her pocketbook onto Leah's bed, still a bare mattress with no signs of occupancy. A thick stack of mail lay on her side of the desk. \"Go wash your face, cutie. And do a good job.\"\n\n\"I know how to wash my face, Nicole.\" There was a sink in the corner, with a big slanted mirror.\n\n\"I hope so.\" She sniffed. \"I like Alex, but I don't want to lick her pussy off your face.\" She glanced critically at me as I leaned over the sink. \"Might as well take your shirt off, too. Unless you're planning on leaving soon.\"\n\n<br >I reached for the top two buttons of my shirt, only to realize they were already gone. Plus the bottom one. I turned to face her, perching my butt on her tiny counter. \"You'd need to kick me out.\"\n\n\"Good.\" I threw my shirt on the floor, Nicole watching silently, then turned away to wash my face. With soap, the frothy kind out of a bottle marked Asian Bamboo. Which it didn't really smell like. I glanced into the mirror to see Nicole in the room behind me, leaning over another hand mirror and disassembling her hair. \"I'm not planning on kicking you out, by the way,\" she called, not looking at me, but by that time I was rinsing Alex out of my mouth and squeaking my finger across my teeth.\n\n\"That's nice to hear.\" Nicole's towel smelled like her as I buffed my face with it, turning to face her again. \"I think I'm good.\"\n\n\"Of course you do.\" She finshed with her hair, mussing it carelessly as she flung away the last of her bobby pins. \"You always think you're good, Keith. The best part, of course, is that you have no idea how attractive that can be.\" She stepped up to me, her eyes flashing, and laid a hand on my bare chest, the fingers prodding. \"You said your nipples were hard,\" she accused.\n\n\"They were.\" I moved my arms around her waist, the silk sliding along my wrists as my fingers met at the top of her pert ass. She looked at them, then shook her head.\n\n\"Lies.\" Then she tipped her head toward mine, stretching, her lips parting, and I won't go so far as to say I heard choirs of angels ringing triumphantly through my head, but I was pretty fucking exultant when I realized she wanted a kiss. Our mouths met warmly, without any kind of shame or tentativeness, Nicole's tongue gliding easily across mine just as it had before.\n\nIt felt right.\n\nHer body found mine, fitting me perfectly, her heat spreading along my cold arms and my damp face, and just as I was making up my mind to reach down and cup her ass, she pulled away and leaned back. We stared into each other's eyes for a moment; hers were big and shiny, a red flush faint on her cheeks. Her mouth opened again. \"Not good enough. You still taste like pussy. Maybe ass, too, but I'd rather not know.\" She backed out of my arms, slapping lightly at my chest. \"Wash some more. And brush your fucking teeth.\" She nodded toward her sink. \"Might as well use my toothbrush.\"\n\n\"Might as well,\" I agreed, and then she was spinning in front of me, and for the second time that night a young lady bent her head and gathered her hair before me.\n\n\"Unzip,\" she ordered, and I was happy to comply; it stuck a little, maybe halfway down, but I handled it. \"Thanks.\" She stepped away, leaving me to my ablutions, and this time when I glanced at her in the mirror she was undressing with confident, smooth ease. Not a hint of self-consciousness, her body soon unpeeled in what looked to me like a fairly expensive matching bra-and-thong set. I was squirting toothpaste onto a practical pink toothbrush I'd found when I turned calmly around.\n\n\"Your toothbrush, Nicole. It's a mess.\" She was bent over, her ass mouthwateringly bare, rummaging in a lower drawer. \"The bristles are all bent.\"\n\n\"Buy me a new one.\" She came up smirking with a faded t-shirt in her hand, then curled her arms behind her back to work on her bra strap. \"Tomorrow, though. I don't want you going back out tonight.\"\n\n\"Mm?\" I was brushing, watching as she tossed her bra into the corner, her dark little nipples tempting me again before she threw her shirt over her head.\n\n\"Tomorrow, I said.\" She sank to her bed, her long legs stretched out, and wiggled her toes. \"Today is over. We're in for tonight.\"\n\nI spat, then rinsed. \"Good.\" I leaned once more against the counter and raked her body with my eyes. She left me short of breath, her hair tumbled over her pillow. \"Thanks for taking me in, by the way.\"\n\n\"You're welcome.\" She looked at my chest and smiled. \"Your dick will still taste like her, but I'm not going to stand here and watch while you clean it off. I'd rather do that myself.\"\n\n\"Really.\" I sauntered across the room toward her, my mojo clicking back into place at last. Her shirt gave out just above her navel, showing me the muscles of her stomach slanting down into the black waistband of her thong, and for what seemed like a hundredth time that evening my cock gave its warning lurch. \"That's a little bit presumptuous of you, don't you think?\"\n\n\"No,\" she snapped at once. \"You came back for me. I know exactly what that means,\" and her smile now was warm. Welcoming. Genuine. She stretched a lazy arm up to me. \"Now. Where were we the other day?\"\n\nI came closer, tenting my suit pants, drinking her in. \"You had your shirt off.\"\n\n\"Oh. Well.\" She shrugged on the pillow. \"That's your job.\"\n\n\"Fine by me.\" She was looking at my crotch, and all at once I saw no point in having my pants on any longer. I unzipped and then let my trousers fall, once more getting a weird sense of deja-vu; this had been quite a repetitive night. But this was Nicole Rye, not Alex Stepanovich, and for a whole week she'd been giving me a built-in urge to be naked for her. So, as my dick popped out, hard yet again, I enjoyed the way her mouth opened, her tongue running subconsciously over her lip. I knew my pubes were probably all tangled and matted with Alex' saliva, but if Nicole didn't care, I sure didn't.\n\nI stooped to take off my clothes, and on my way back up I reached out to brush her thigh with my fingers. Very very gently, I ran them up along her inner leg, then back up to cross her waistband, then up her curving belly and under her shirt. The bedside lamp showed goosebumps in my wake, and when I felt the ridges of her ribcage and the first swell of her breast, I stopped with my fingers still on her body. She was watching me, still with those glittery eyes, breathing faster, and I let her; the anticipation was killing me. I couldn't imagine what it was doing to her.\n\nShe showed me, though, reaching up almost shyly to run her own finger down the side of my penis, then down over my scrotum, and I saw in her face how awed she was that I'd come back to give this to her. I arched my back slightly, and then as her fingers found the back of my balls I at last pushed up further, under her shirt, to find that teasing little nipple once more.\n\nNicole gasped, her eyes wide, and then smiled dreamily as I started to massage her tit. \"Mmm,\" she hummed, her whole body in motion: out of the corner of my eyes I could see her other hand plucking at her thong, her hips rippling subtly. This woman was primed to fuck, and from the way her hand was moving confidently along my cock, I was in for an amazing time.\n\nShe swung her legs sideways, sitting on her bed, and without asking threw her arms high. I pulled her shirt from her body with no resistance, and then she planted her hands firmly on my asscheeks, pulled me close, and swallowed my hard dick in one long, slow movement, my eyes closing briefly with the feel of it before I forced them open. Because I wanted to watch me disappear into her face.\n\nShe took me down fully, her head craning forward on her neck, her eyes never once leaving mine, and once my pubes were tickling her nose and her hands tightened on my ass, I threw back my head and sighed. Almost without realizing it I had my palm tight against the back of her head, holding her against me, both of us feeling every pulsing beat of my cock, every little gag as her throat adjusted.\n\nI held on longer, her eyes huge as they stared up, until I saw the first tears form in the corners. But she didn't complain, didn't flinch; she was showing me why I'd been right to leave Alex, as if I didn't already know. Her face was red and blotchy before I pushed her back, her face coming off my dick in a gout of thick, glimmering saliva. She sat, gasping, her hands still caressing my ass and her face resting against my hipbone, her breath huffing quickly across the root of my cock.\n\nShe looked up at me again. \"There.\" She kissed my balls, gently, almost like they were precious. \"I'd say Alex is out of the picture now.\"\n\n\"She was out of the picture as soon as I left her room,\" I promised, and her smile proved infectious, me grinning down at her as her lips and tongue caressed my dick, her teeth adding spice; she knew how to graze them, just slightly, the way I had on Alex' clit.\n\nI became aware that she'd removed one hand from my butt, the other one still exploring deep between my legs and behind my balls as she sucked and kissed gently along my cock. I looked down, past the glistening veins and scraggled, wet pubes, to glimpse her other hand plunged down the front of her thong, masturbating in a very serious and focused way; I stood a moment, mesmerized by the shape the back of her knuckles made in the satiny fabric of her underwear, and slowly it dawned on me that I should do something about that.\n\n\"Lie down.\" It wasn't a request, a flirtation: it was a deep-voiced bark from way down in my chest, and she looked up one more time with her eyes very wide. \"Now.\" She saw what I meant, that I was in no mood to wait. That we'd spent time enough this week playing, beating around the bush, hinting. That it was time to fuck.\n\nShe knew it too, her hand whickering out of her thong with shiny fingers, scooting her body onto her creaking mattress with her throat bobbing and her eyes huge. I swiped her thong almost negligently off her hips as she moved, bunching the waistband in one hand and jerking them halfway to her knees with one dragging tug. I wasn't a bit surprised to find that she was waxed bare, her wet slit already spread wide for me; she seemed like the hairless type. She began bicycling her legs, struggling to get her underwear off as I laid a knee on the narrow bed.\n\nWe both breathed fast and shallow, her face reddened, serious; I can only assume I looked just as focused, kneeling over her as she prepared herself, fisting my dick with a casual intensity. I knew I should ask about protection, about pills and condoms and all that shit, but I'd gotten to know Nicole well in a short time; I had no doubt that she'd leave me in no uncertainty, when the time came, about where she wanted my semen.\n\nGoddamn, I marveled to myself as she kicked her wispy thong across the room, then settled her legs. I was about to fuck her. Such a sexy little bitch, and she was spread so wide for me, her eyes riveted to my cock, willing it into her tight wet hole.\n\nI gripped her cocked knee and moved around it, kneeling right between her legs, then sank down toward her chest. She was strong and tight beneath me, her arms going around my waist at once, the fingers running up and down my back; she was nodding, out of control, her mouth open, and I stuck my tongue into it without even thinking. I grunted against her lips when I felt my cockhead graze her belly, her body surging rhythmically, and then her hand was grappling down between us.\n\nI kissed on down her neck, to her shoulder, hearing the whistle of her breath panting in my ear, then a whimper as she got me positioned at the hot, sticky slit between her lips. I angled my hips down at once, driving into her, halfway in before I'd even thought about it. She gasped, her feet rising up my sides, wide open as I sank into her sweet pussy.\n\nShe gripped me, tight and hot, pulsing along every part of my invading dick; I slid the rest of the way easily, both of us groaning when I couldn't go any further. When I gave her collarbone one last lick and raised my head to stare into Nicole's eyes, her face was alive, vibrant, euphoric, her lips already expecting my kiss, and I gave it to her as our bodies began to move.\n\n\"Fuck,\" she managed, a slow hiss while I slid into her again, my cock needing the feel of her clutching pussy, and I felt both her hands alongside my face, twisting my head until it faced hers squarely, both of us breathing the same humid sex-scented air. Her eyes filled mine. \"I...\" She swallowed. \"My god, Keith.\"\n\nI felt sweat drop from my head onto hers, my hips churning, her nipples moving in mesmerizing circles under the force of my thrusts. I felt like a machine, able to go on for hours, even days, endlessly filling her. She was amazing, sturdy, able to take everything I could give her, and I knew I was pushing harder into her than I ever had before, into anyone. I curled my hands under her armpits, holding her close up around her shoulders, seeking more leverage as I took her. Her ankles locked above my ass as we both bore down, the rickety bedsprings a crazy counterpoint to Nicole's strangled whining breaths.\n\nI changed my motion, not rolling my hips so much, driving straight down past her clit instead of up toward her cervix, and Nicole responded at once; teeth snapped beside my ear as she stifled a scream, and when I glanced at her face her eyes were shut tight. I kept fucking her with long, distinct strokes, my own orgasm lurking just over the hill, and my voice was a snarl in her ear. \"Cum, Nicole. Cum with me.\"\n\n\"Jesus,\" she wailed, her eyelids snapping open, glaring over at me. \"I already am, you fucking shithead!\" It trailed off into a whine, her whole body trembling, and my ass fell twice more, hard and deep between her straining legs, driving my cock as deep as I could push it even as my mouth found hers, our lips devouring each other. I knew she wanted me to let go.\n\nIt had been days since I'd cum, with plenty of stimulation since Kylie had last taken my load in the copy room, and when it streamed out of me to smack the back of Nicole's pussy I gasped into her mouth. I gave a strangled grunt, my cock jerking powerfully as it splashed rope after rope deep into Nicole's heaving body, the two of us gripping each other as tightly as possible on that squeaky bed. Struggling for breath, she was saying something in my ear, but I couldn't catch it as the last of my cum dribbled out. \"What?\"\n\n\"I said,\" she whispered, \"I think I found the right Sweetheart.\" We kissed solidly, deeply, my cock in no hurry to leave her pussy, both of us as close as we could get. It felt right.\n\n* * *\n\nLater, in the dark, she relaxed after our second fuck. \"You're going to have to learn what I'm like when I orgasm,\" she sighed, her hair sweaty in her eyes.\n\n\"With any luck, I'll have another chance.\" She was curled tightly into my side, her arms and legs wrapped possessively around me. She felt good, even where her hands stroked the deep scratches she'd left all down my back.\n\n<br >\"You will,\" she laughed shortly. She kissed my cheek. \"And it won't be luck. You should come visit me this summer. I can introduce you to my parents.\"\n\n\"I'd love to meet them,\" I murmured surprised that I meant it. I kissed her like I'd been doing it for years. \"Fishing and prog-blues with your dad.\"\n\nShe giggled. \"In Canada, yes. And?\" she teased, fingering my balls, \"maybe you can catch up with my sister. I'm sure Angela will be completely stoked to meet my new Valentine.\"\n\nI held my tongue at that one.\n\n* * *\n\nThanks for reading! Perceptive readers of a certain age might recognize a slight similarity between the resolution of this story and that of the epic 1987 Howard Deutsch film Some Kind of Wonderful, but it's wholly unintended. And besides, Deutsch's writer, the immortal John Hughes, wasn't the first to use the trope anyway.\n\nBut I hope you enjoyed it on its own meager merits. Please read the other entries and vote on your favorites!"
    ],
    "authorname": "Voboy",
    "tags": [
        69,
        "cunnilingus",
        "rimming",
        "romantic",
        "seduction",
        "sorority",
        "university",
        "valentines day"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/shaking-it-off"
}