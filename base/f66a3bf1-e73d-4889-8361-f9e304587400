{
    "title": "Home is Where The Heart Is",
    "pages": [
        "Author's note: Welcome to my Valentine 's Day story! For those of you who know me, well this will be about as different of a story as I could possibly write, but it is the season for love. For those unfamiliar with me, thank for checking out not only my contest entry, but my first submission in the mature category. One disclaimer for those that have not read my previous work, I believe the difference between erotica and Porn is not the sex, but how we get there. I take my time and enjoy telling a story, I believe I deliver in the end, but if a good quick stroke story is your thing, this tale won't be for you. For the rest of you, enjoy!\n\n*\n\nAt the sound of the alarm going off, I groaned and shoved the pillow over my head. I hadn't fallen asleep until the assholes next door had stopped blasting their music at three am, and I was nowhere near ready to wake up. Not that waking up was any great thrill these days, but as my grandfather used to say 'Any day you're on the right side of the dirt is a good day'. I remember always thinking when grandpa said that, that who knew if it would be better beneath the dirt? By the time you found out, you wouldn't be able to tell anyone. \n\nWell as of five years ago grandpa knew, but of course wasn't telling. On that cheery note, I thought that it really couldn't be any worse than what it was for me now. No, that was the way a quitter would think, and my Aunt Marie didn't raise a quitter. She may have raised a couple of assholes as I had found out the hard way, but I wasn't one of them. Reaching out, I found the cheap plastic alarm clock and thumbed it off. Tossing the pillow from my face, I looked up at the yellowed cracked plaster on the ceiling and repeated the mantra I had started every day with for the past few months. \n\n\"It will get better than this.\"\n\nI said it loudly, if not confidently and sat up on the cheap cot that passed for my bed these days. I shivered despite the fact I had a blanket wrapped around me, and was wearing two sweatshirts. I could feel a draft and looking over saw that the small piece of plastic I taped over the broken window had fallen off. Getting off the rickety cot, I walked over to the pile of clothes in the corner, and picked up a grey hooded sweatshirt. It was stained and dirty even by my standards, but I only had a few dollars and would have to wait again to go to the Laundromat. \n\nI thought about going down the hallway to see if the shower were free, but quickly changed my mind. I had to get going in a few minutes to catch the beginning of the morning commute and had no way to dry my hair. The weather was calling for the low teens today, and I didn't need to get sick again. Besides, the last time I tried the shower the water was so brown I would have ended up dirtier then when I had started. Oh well, what did I expect for a hundred a week, heat and clean water? \n\nPulling the filthy sweatshirt over my other two, I found the least dirty of the three pairs of jeans I owned and slipped them on over the sweatpants I was wearing. I glanced down at the worn pair of sneakers on the floor and shook my head; it was too cold and wet for those. Going over to the narrow door less closet, I picked up my latest prize possessions, a pair of semi decent work boots someone had thrown in the dumpster around the corner. I sat down on one of the two mismatched chairs at the small table, and pulling the boots on, looked into the closet. \n\nHanging there were the three decent things I had, a long sleeved blue dress shirt, black Dockers and a pair of fairly decent looking black shoes were there. Those were my interview clothes, and sadly I hadn't had a chance to wear them in close to a month. Not for lack of trying, I had put in dozens of applications in that time, but no one was hiring. Well at least they weren't hiring people who had no real work history, no car, lived in the worst part of town, and had no phone number to give them. I usually gave them Gino's number, but if he didn't answer they would hear his voice mail and know it wasn't my phone.\n\nA couple of months ago when I had caught a break and been able to work under the table for a week unloading trucks, I'd bought a go phone, but the minutes ran out and things had come down to having a phone or a cracked plaster roof over my head. During that time all I'd had for work was the two nights a week Gino got for me, bussing tables at his father's restaurant. I made fifty a night in cash. which was just enough to pay for my posh dwelling. Silly little things like food, laundry, and the occasional treat of a haircut, were paid for by my 'day job' as I referred to it.\n\nLooking into the old mirror leaning against the wall on top of the dresser, I finger combed my sandy brown hair. I was looking a little scruffy, but figured I didn't have any hot dates lined up in the near future and shaving in the cold water in the community bathroom gave me razor burn anyway. I looked over at the alarm clock and saw it was close to six thirty, I had to get going. Just because I didn't have a job didn't mean that other people didn't and this was the best time to catch them. After all, in a way their livelihood was my livelihood these days.\n\nI slipped on a pair of fingerless mittens, then after grabbing the six dollars that I had to my name off the table, shoved it in my pocket, before putting on the pair of bulky gloves I had gotten from goodwill. I walked over to the door and removed the chair I had wedged under the door knob. Several times lately I'd heard the door being tried and never took any chances. For the life of me, I couldn't fathom how anyone who lived here could think that anyone else who lived here would have anything else worth stealing. For that matter I never understood why the crack head prostitute down the hall constantly solicited me. Even if I was interested in going where everyman had gone before, I couldn't afford a peck on the cheek, let alone sex.\n\nI started to step through the door, and then caught myself. I had almost forgotten my advertising. Reaching back down to the table I picked up the cardboard sign and looked at what I had written there. \"Down on my luck, anything helps.\" I closed my eyes, fighting back the tears of frustration that somehow after months of this still hit me on a daily basis. Taking a deep breath, I whispered, \"It will get better than this\" and went out to swallow my pride yet again.\n\n*****\n\nI walked quickly down the street, partly because I wanted to get to the the off ramp before someone else claimed the spot, but also because it was only fifteen degrees outside. Then again I usually walked pretty fast anyway on this street, especially anytime it was dark. Once I crossed the intersection and headed down Broad Street the neighborhood became better and I slowed up. The clock outside the bank read six fifty which meant I was making good time and could spare a couple of minutes to stop into Cumberland farms for a quick breakfast. The brief stop would also give me a chance to catch a little heat before I spent the next couple of hours shivering outside.\n\nEntering the store, I immediately went over to the small bargain rack and looked over my options. The rack contained mostly pastries that we're all under a dollar. For the last six months, things like this as well as the fast food dollar menus were my means of survival. For eight to ten dollars I could manage to eat three times a day, and occasionally even splurge for a coffee or two in between. After a few seconds debate, I grabbed a cheese Danish and looked over at the coffee pot. I could get a large for a dollar which would really help with the cold. \n\nI began to walk over and stopped myself. People were pretty much jerks and once when I'd been standing there with a coffee, a guy had made a crack that seeing I had one I must just be one of those con artists he'd heard about. I hovered near the pot indecisively then with a shrug decided to pass; besides it was pretty cold, maybe Paula would bring me one today. At the thought of her I felt a smile briefly touch my lips. Paula was usually the highlight of my day, and had been for awhile now. Our conversations were brief, usually only a couple of minutes while she pulled over and gave me a coffee and a couple of dollars, but they gave me something to look forward to.\n\nTurning from the coffee, I made my way towards the counter. Seeing I was passing on the coffee I grabbed a small pack of mini donuts to go with the Danish. Oh yeah, I was living large today for sure. I headed for the counter and stopped in my tracks when I saw a Providence cop waiting in line to pay for his coffee. I recognized him as the same one who had chased me off the corner several times, and hung back. Unfortunately he picked that moment to turn around and seeing me nodded,\n\n\"Morning Jamie, you staying out of trouble?\"\n\n\"Yes sir.\" I said.\n\nI turned away embarrassed, as the couple of other people in line turned to look at me. Cops were such pricks. Then again he was doing his job, and had never taken me down to the station like he could have, just told me to get walking. Deciding to wait until he left to get in line, I wandered down the central aisle. I passed the guy stocking the shelves and felt his eyes on me. Glancing up in the round mirror in the upper corner of the store, I saw him staring at me. Most likely waiting for me to try to shop lift something. This was another of life's little frustrations, I had never stolen anything in my life, but I suppose it's easy for people to make assumptions.\n\nA sea of red caught my eye, and I noticed the entire left side of the aisle was dedicated to Valentine's Day. I narrowed my eyes, the days were a little hard to keep track of sometimes, but as I thought on it, I realized today was the fourteenth. What a difference a year makes. At this time last year, I was living with Aunt Marie, in my second semester at URI and had spent Valentine's Day at a cozy little hotel with Tammy. Now my aunt was living in a nursing home and on a good day kind of recognized me, I had no money, had to quit school and as for Tammy?\n\nI looked down at the floor, of all the things that had happened to me in the last few months that was still the most humiliating. Tammy's family had money and she was always a bit better than. Even when I had my shit together, her family wondered what she saw in me. Once things got rough however, she began to change as well. When I was living with a roommate she was constantly asking me when I would get a job and have some money, or when would I be going back to school. Her Daddy was riding her about me and heaven forbid she be inconvenienced in anyway, or have to defend me.\n\nWhen my roommate unceremoniously tossed me out because his girlfriend had to move in with him, I had ended up where I was now. Soon after that I lost my job and had gotten desperate enough to start panhandling. One day I heard my name called and looking up, wanted to crawl into a hole. It was three kids I had gone to URI with including one of Tammy's best friends. They said a couple of things along the lines of \"Hey how's the new job going' and took off.\n\nThe next day Tammy came by herself. They had told her and she hadn't believed them. Once she saw me she pulled over and began yelling at me, how dare I embarrass her? Here I was a step away from homeless, my life in ruins and I was upsetting her. I lost it and told her to go fuck herself. That had been five months ago and since then fucking myself is pretty much what I'd been doing. I certainly couldn't think about asking a girl out, and after all, my hand did have pretty low expectations.\n\nI guess in a way I should be happy I saw Tammy's true colors so I wouldn't waste my life trying to make her happy, but the way it happened still bothered me. It was funny how life had a way of changing your perspectives and quickly. Not too long ago the thought of being alone on Valentine's Day would have upset me. Now that every day was a fight to keep eating and existing I could care less. Although it was a shame that so many decent people were alone, and pieces of work like Tammy, or Aunt Marie's kids for that matter, would always have someone. \n\nMy Aunt always claimed that what came around went around, and if you were good to people you would get it back, if you were bad you would get what you deserved. Sad to say Aunties theory pretty much worked in reverse from what I'd seen lately. Seemed to me the people that deserved something good in their lives were being shit on. Paula was a perfect example. She was an attractive, sweet, caring person who had given of herself her entire life. Yet here it was Valentine's Day and she would be staying home alone as she usually did. \n\nI started to walk towards the counter, but stopped and looked back at the cards. Maybe I should get her a Valentine. No, that would look funny, not to mention the cards were three to four dollars and who knew if I would get any money today. Right now those four dollars would guarantee I ate lunch. I took another step to the front of the store then stopped again. What was wrong with me? The woman had been far better to me than anyone else in my life right now including a girl who allegedly loved me. Now here I was with a chance to make her smile and I was hedging. \n\nI went back to the cards and frowned as I looked them over. I didn't want one that was actually romantic or leading so to speak, just something thoughtful. I picked one up that had a picture of a red heart shaped box with a ribbon on it. Underneath the box it said 'You are a gift to my heart'. Opening the card I read the short paragraph inside. It spoke of how true gifts were not the ones we received in boxes, but those we received in our hearts, our blessings. \n\nWell I didn't feel like I had too many blessings right now, but if I had one it was surely Paula. I flipped the card over and saw it was three dollars so within the budget. On the way to the counter I found myself in a better mood and smiled at the guy who had been staring at me the entire time. He gave me an odd look, and I gave him a wink and pursed my lips at him.\n\n\"Like what you see?\" I asked.\n\nHe turned redder than the card in my hand and quickly went back to stocking the cat food. I was still grinning when I got to the counter. That was more like the old me, always looking for a chance to bust someone's balls. While I waited for the guy in front of me to check out, my eyes fell on a small plastic bucket on the counter that contained artificial roses. I saw a purple one, which was Paula's favorite color. The sign said they were a dollar, and doing some quick math, I put the donuts on the rack next to me and picked up the rose. The Danish would be enough, and I figured the rose would be a nice touch. \n\nOnce I paid, I stepped to the side and using the pen next to the credit card machine went to sign the card. I was just going to put my name, but after thinking for a moment wrote; For a woman who is as beautiful on the inside as she is on the outside. Thank you for everything you've done, you've truly been a gift to me. Happy Valentine's Day, Jamie\n\nAs soon as I finished, I frowned. That was a little strong, but it was how I felt, and from what I had seen of her she was pretty, maybe not lights out, but I always had the feeling she held herself back. Paula's hair was always up, and she wore very little makeup. The couple of times I had seen her out of her car she was dressed not only proper, but almost unflattering. Besides, standing here in my stained clothes and second time around boots, who was I to judge? Main thing was I meant what I said and hopefully could get her to smile. She had done that for me plenty of times and as Aunty said I should treat people the way they treated me. \n\nI slipped the rose inside of my sweatshirt so I wouldn't look like an idiot standing there with it, hurried down the street. Choosing the card had me running a little behind and hopefully that weird old bastard that always wore the army jacket hadn't gotten there first. Usually I beat him to it, but occasionally he would arrive first, and I had learned the hard way, by taking a beating one time, that street etiquette dictated it was only your spot if you claimed it first that day. The wind kicked up and pulling up the hood, I put my head down and made my towards the industrial park exit. In order to keep my mind off the cold and to try to hold onto the first good mood I'd been in all week, I thought about Paula.\n\nOver the months I'd been doing this, I had found some regulars I guess you could call them. It made sense, seeing that I worked the corner of an industrial complex and people went to work that way every day. Although random people would give me a buck here and there it seemed like mostly the same people would give me something, and sometimes more than money. Last month a guy named Rob gave me two sweatshirts his son was going to throw out, and there was a woman who had brought me a bagel a couple of times. \n\nPaula was my first regular, or at least the first I recognized. She had given me a dollar a couple of days in a row, then the next time I saw her, she had given me a five. I didn't make that corner for a few days, due to getting a chance to work a little at the restaurant in the morning, and when next I saw her she asked my name and said she had been worried when she hadn't seen me. I was surprised and asked why, and she said I seemed so young and she had been afraid something happened to me. I was touched, no one had worried about me in a long time and I think I had a lump in my throat when I thanked her.\n\nThe next day, Paula pulled her black SUV partway up onto the island and after handing me a coffee spent a few minutes talking to me. She told me her name and that she worked as an office manager at one of the companies on the far side of the park. She then gave me five dollars and after an awkward pause, asked me why I was out there. I gave her my standard answer of I was living with a family member who had gotten sick and I had no one else. She had tried to ask more, but after being vague with my answers, she took the hint. \n\nFrom that point on any morning I saw her she would pull over and talk to me for a couple of minutes. Asking if I had any luck finding a job, and how I was doing in general. More often than not, she would give me at least five dollars and brought me coffee quite a few times. She was so nice to me I started feeling bad taking that much every day from her. One day when I was upset because I had run out of time on my phone she showed back up a half hour later with a ten dollar phone card. \n\nA couple of weeks ago Paula and I had gotten to know quite a bit about each other. It was a Friday, and the night before it had snowed like an absolute bitch, over twelve inches of heavy wet shit covering the ground. I had trudged out to my spot, hoping the weather would gain me some sympathy and a few extra dollars. Paula had pulled up and asked if I wanted to make some money. I said I would be thrilled to, I would much rather earn something then just take handouts. Paula told me she had a huge driveway and walkway, and certainly wasn't going to shovel it. She normally paid a couple of neighborhood kids twenty bucks apiece to shovel it, but figured why not ask me this time? \n\nI initially felt a little weird and asked if she cared if I knew where she lived. Paula had smiled and said she could tell I was a good guy who was just having it rough, not a criminal. I still felt weird, but she was offering forty dollars, which meant I could get some more time on my phone and maybe buy a couple of small things I needed. I agreed and she asked where I lived so she could pick me up. I didn't want her to do that, I hated where I lived and although I'm sure she knew I lived in a pit I did not want her to see it. I told her that it was a rough neighborhood and I didn't want her driving through it.",
        "Paula had given me one of her huge smiles that always got me to smile back and said things like that were why she knew she could trust me. She then added that someone had raised me right. My smile faltered as I thought of Aunt Marie and where she was now. Paula seemed to sense she had hit a nerve and backing off the subject, offered to pick me up where she always saw me. I told her to get me further down the road at a seven eleven instead. When she asked why I shrugged and told her that she worked here and it would look bad for her if someone saw me get in her truck. \n\nPaula gave me another smile, but this one different, not quite as big and almost a little sad. She told me how thoughtful I was and made a comment that she wished the other men in her life were that way. Feeling as if it were now me who had unwittingly hit a sore spot, I said thank you and told her I would see her the next day. When I went to bed that night, I felt oddly excited. If I had been thinking about the money I wouldn't have found it odd, but the fact I was excited about going to her house was what got me. I didn't think for a minute anything funny was going on, hell she was twice my age with a great job, and I highly doubted she was the type to go slumming. \n\nI think what I was happy about was that I was going to get a chance to spend time with someone who genuinely seemed interested in talking to me; I would get to feel human for awhile. Paula picked me up right on time, with a coffee for me of course, and we drove to her house. She lived in Warwick in a fairly well to do neighborhood and she had not been kidding, her driveway was massive. In fact her house itself was pretty damn big, especially for someone who lived alone. \n\nShe invited me in to sit for awhile, but I told her I wanted to get started right away. Paula shrugged and pointing at a shovel propped up against the garage, told me to feel free to come in and warm up if I needed to.\n\nWhile she was talking I tried to nonchalantly check her out. Up to that point, I had only seen her sitting in her truck. She was normally wearing a leather jacket, and scarf, and her brown hair was always up. I was disappointed to notice that I couldn't really notice anything. Paula was wearing a pair of jeans that were pretty loose fitting and a heavy shapeless grey coat. Although her hair wasn't up, it was pulled back in a pony tail, which at least gave me an idea of the length, but that was it. She wasn't wearing any makeup, and I had to say, she looked pretty good for her age, which I was guessing was early forties. \n\nAll in all she looked like the everyday woman next door. Well not completely, Paula did have two exceptional features, the first that amazing smile, and then the biggest brown eyes with the longest lashes I'd ever seen. I'd always had a thing for doe eyed brunettes, and caught myself staring as she spoke to me. Either she didn't notice, or was nice enough not to mention it; as she simply smiled and headed into the house. I shoveled my ass off and spent over three hours clearing the driveway as well as the front walk and a path to her garage. She hadn't asked for me to do the last part, but I wanted to do a good job, and it felt good to work hard. \n\nBy the time I was finished, I was tired and numb from the cold, but felt satisfied that I had done something worthwhile for someone who seemed like they would appreciate it. I went to the door and rang the bell, when Paula answered I told her I was all set and was going to go up the road and catch the bus home. Actually, where I was going to go was to see Aunt Marie. The home she was in was located in North Kingstown, three buses from Providence, but only one from here. Paula shook her head and said that she would take me home. Before I could start to argue, she added that she would only do that after I came in and had lunch. \n\nI tried to hedge, but with a sly smile she reminded me that she hadn't paid me yet, and she forgot to mention lunch was part of the deal. I stood their uncertain, and trying to look upset, but her smile kept growing wider and eventually I gave a mock sigh and agreed. Paula hadn't made anything fancy, grilled cheese sandwiches and tomato soup, but it was the best meal I'd had in a long time because it didn't come in a wrapper. Paula sat across from me at the kitchen table and had a bowl of soup while making small talk about the weather and how bad the Sox looked and it wasn't even spring training yet.\n\nPaula was doing most of the talking as I was concentrating on scoffing down the food. She asked if I wanted another sandwich and as I hesitated, she laughed and got up to make me one. While Paula stood over the stove I looked around the house. The kitchen was good sized, but the living room that was visible through archway was enormous. I didn't know much about wood and furniture in general, but nothing in the house looked cheap. I could see a hallway across the living room and several closed doors that I assumed were bedrooms. \n\nAs my eyes wandered across the furnishings I saw a mantle that had several pictures over it. They were all of two boys, one was blond, but the other had dark hair and was the spitting image of Paula. They looked around my age and were obviously her sons. I heard a phone ring, and turned to see Paul take her cell from her pocket. She turned away from me as she spoke and continued to cook. Taking advantage of her being distracted, I turned in my chair so I could see more of the living room. There were several framed photos on the wall of her boys; High school graduations, proms and a couple of nice ones with Paula posing with them.\n\nMy eyes lingered on one them in which she was wearing a black dress that was just a touch on the short side. I leaned forward, to get a better look and from what I could see, she had some nice legs. Her brown hair was down and I was surprised at how curly it was. \n\n\"You can go in there if you want.\" Paula had said behind me, scaring the shit out of me.\n\nI turned around quickly and muttered something along the lines of I was just looking. I felt stupid; although I'm sure she didn't think I was checking her out in a picture. Paula put a plate with two more sandwiches down for me and again sat across from me. She looked into the room and told me that the pictures were indeed of her sons Josh, and William. They were a little older than me, and both were attending the University of Florida. As she spoke she sounded proud, but there seemed to be a hint of sadness there. In fact she looked the exact way I felt when I spoke of my mom or my aunt.\n\nShe had trailed off, and I was unsure if I should change the subject or not. Taking a chance that maybe she wanted to talk, I asked if they were close, and if they called often. I felt like an ass when she shook her head and said that they had not been close since the divorce two years ago. I had kind of figured she was divorced seeing I hadn't seen a picture of the father anywhere. I decided at that point that the only way my lips should be moving is if they were chewing and went back to eating and feeling like a jerk.\n\nPaula however, kept on the subject. She told me she had married her college sweetheart, and had gotten pregnant within a year. Her husband was a successful architect and made excellent money, and wanted her to be a stay at home Mom. Paula had a business degree and by the time both kids were in school went back to work. She was still with the same company and pretty much ran the entire office. She also made good money, and the divorce agreement was that she kept the house in exchange for not pursuing alimony, and that they split the boys tuition.\n\nI figured she would stop there, but to my surprise she continued by telling me that she hadn't been happy with him for years. He worked constantly, traveled for work and even when he was home they never went out and after a sigh she added that he pretty much neglected her in the bedroom too, leaving her feeling as if something were wrong with her. The bedroom remark had caught me off guard and I swallowed my food hard and fought not to choke. My first thought was that was information I didn't need to know, the second was why he would ignore her, she looked pretty good in that picture and was certainly nice enough.\n\nMercifully, Paula didn't notice me almost spitting out my food and went on to say that after his hours got longer, and he traveled even more, she started getting suspicious. Sure enough, she discovered quite a few restaurant charges on his credit card and found out he was not only cheating on her, but that it had been going on for years. I spoke up saying that, that was shame, but it was his loss. She told me I was sweet, but went on to say that the affair hadn't upset her as much as I would have thought. After all they had just been going through the motions for years. \n\nWhat had crushed her was that Paula had found out that her sons knew, and had even met the woman. They had covered for him, and then seemed upset when she filed for the divorce. Paula said that at the time of their separation, both of the boys stopped calling as frequently as they used to and neither had come home to see her for Christmas even though they had come up to see their father who lived an hour away in Boston. With a bitter smile, she added that their feelings never stopped them from cashing the checks she sent them to help with their books, and they had no problem letting her pay for half their education.\n\nI asked why she bothered, and with a shrug she said they were still her sons, she loved them and just because they were doing the wrong thing didn't mean she should as well. I nodded, although I didn't completely agree, that was definitely something Aunt Marie would say. As Paula began to tell me what her sons were going to school for, my mind wandered. I could care less what those ungrateful spoiled little pricks were studying. I found that I was as upset as she seemed. Over the last few months I'd seen more than my share of the crap that people could offer, and it disgusted me to see this woman being mistreated by her own kids. Never mind some asshole who obviously didn't appreciate what he'd had in her. \n\nI guess I had gone a little too quiet and she asked if she were boring me. I gave her a smile and said that I could never be bored, listening to a beautiful woman. Paula laughed loudly, it was an infectious one and I found myself having a hard time trying to keep a straight face while I asked what was so funny. Paula told me I must be pretty good with the girls, because that was as smooth of a line as she had heard. I countered with the remark, that with her looks I was sure she'd heard her share of lines. She laughed again, but then shrugged and said she really hadn't. She'd dated one kid through high school and met her eventual ex husband her freshmen year at PC. \n\nI pointed out that her divorce was a couple of years ago, and I was sure she would have made up for lost time so to speak. Paula rolled her eyes and said she'd had maybe a handful of dates since then. She wasn't sure where to meet someone, and she still felt a little nervous about the whole thing, having spent over twenty years with one person. I told her that was a shame, that a pretty woman like her should be having some fun. She told me that she had already fed me and would pay me, so I didn't have to keep flattering her. I responded with Aunt Marie's classic line of\n\n\"I don't have to do anything.\"\n\nPaula laughed and said okay, she would accept the flattery. I told her that I was sorry for what happened, that someone like her deserved to be happy, and that wasn't a line I meant that. I took a chance and told her that I thought what her sons were doing was terrible, that they should appreciate her. I felt bad after I said it, but she nodded in agreement. Paula then looked at me and asked if I had any family. I hesitated, not wanting to get into it, but after looking at her, and realizing how much she had shared with me, I figured what the hell? If anything, it might make her feel better about her kids, after all they were nowhere near as bad as Aunt Marie's. Besides, at the end of the day when was the last time someone had seemed interested in my life?\n\nTaking the last sip of my coffee, I began at the beginning, but made it as brief as possible. My father screwed when I was around five, ran off with his secretary was what my mother would later tell me. So I guess right off the bat Paula and I had something in common. Mom worked full time and did the best she could, but had a hard time making ends meet and we were constantly moving from place to place because she kept falling behind on rent. After we ended up staying with friends for a week, with no idea where she was going to live next, Mom's aunt Marie invited us to live with her.\n\nAunt Marie was Mom's godmother and had always been close to her. Aunty had two sons', who were a little older than Mom, but had both gotten married and moved to Connecticut. Aunt Marie had been widowed years ago when her husband died of a heart attack, and with the boys gone she was alone and told Mom she would love the company. Much like Paula's spawn, her boys barely called and only came to visit if they needed something. Aunty wasn't loaded, but her huge house in East Greenwich was paid off and she had a line of credit that she used to borrow off the equity. Also like Paula, she was generous despite her son's ungratefulness and helped each of them by their houses.\n\nMy aunt would baby sit me while Mom worked and we grew close. When I was thirteen Mom was diagnosed with lung cancer. It was stage four when they found it and Mom went downhill quickly. With the exception of a couple of cousins Mom had no family and asked my Aunt if she would take care of me. Two weeks after Aunt Marie's lawyer filed the papers for her to become my legal guardian, Mom passed away. I was devastated, but Aunty was great and got me through those tough times. \n\nFor the next five years life was pretty good, I did fairly well in school, and did everything I could for Aunty around the house and ran all of her errands, while her kids may as well have been pictures on milk cartons. When I graduated high school my grades were not quite good enough to qualify for a scholarship, but Aunt Marie told me not to worry. Using some money from her house she paid for my first year at URI and told me that as long as my grades stayed good, she would continue right up to graduation. \n\nThe beginning of my freshman year was when things began to go to hell. Aunt Marie's memory had been slipping and she was starting to have periods of time that she could not recall what she had been doing. When I came home from school one day to find her half dressed wandering around the neighbor's yard I called her doctor. The doctors told me that she was in the beginning stages of dementia and things most likely were not going to get any better. We had nurses start to come during the day, but she was becoming progressively worse, some days not even recognizing me.\n\nWhen my aunt had first started slipping I had called both of her sons, neither of which was too concerned. I got 'well take her to the doctors and let us know how you make out'. When I told them what the doctor had said they said to 'keep them in the loop' and they would try to make it down when they could. One day I came home to find the nurse cleaning up some glass, she told me my aunt had lost track of who and where she was and had gotten violent, throwing a plate at her. The doctor said it was time to call her sons and get their asses down there. \n\nIn retrospect, I would have been better off not even telling him she had kids. Hell, Aunty didn't remember them, and it's not like they cared about her. Instead, as she had raised me to do, I did the right thing and called them, telling them they needed to come and help out. They showed up and after talking to the doctor, decided the best thing for their mother, who had taken care of them their entire lives, was to stick her in a home. The doctor seemed to have the impression they were scum, but they were next of kin, and she really did need around the clock care.\n\nWith their mother now in a home, with no chance of getting better, the bastards decided that she no longer needed a house. Within a month they had sold it, leaving me with no place to live. They were sporting enough to let me stay while the house was for sale, if for no other reason then I mowed the lawn and kept it looking good, but when it sold I was told to leave. \n\nKnowing the answer, but trying anyway, I asked them for a little bit of the money, so I could not only get a place but pay for at least another semester of school. Aunt Marie had told me many times she was going to leave me something, but right now she was still alive and not in her right mind, leaving the pieces of crap that had somehow been born to her calling the shots. The oldest, Brian, told me point blank that like a son, and being a son were two different things. He thanked me for helping his mother and gave me a check for a whopping thousand dollars. I would later find out the house had sold for over three hundred thousand and even after paying off the equity they had each walked away with almost seventy five thousand. \n\nMy aunt had not wanted me working too much while in school and I was only getting twenty hours a week at Stop and Shop, so no way could I afford my own place. Tammy still lived at home and most of my friends either lived on campus or home as well. I found a roommate through a friend and that lasted until he knocked up his girlfriend and she was in and I was out. I found a small efficiency apartment that I could barely afford, and continued to try to find full time work to no avail. Knowing there was no way I could afford to continue and heartbroken over my aunt's condition, I quit school and just tried to find a job. The Toyota that Aunty had given me as a gift for my high school graduation blew its transmission and unable to get to work on time, I lost my job and the rest as they say was history.\n\nI had been looking down into my empty soup bowl as I spoke, not wanting to see Paula feeling bad for me. When I finished I felt her hand on mine and looked up to see her looking at me with tears in her eyes. Again I felt like an asshole, but had to admit that her hand over mine felt nice. Squeezing my hand hard Paula said softly, \"Thank you Jamie.\"\n\nConfused I asked her what for, and shaking her head she had answered;\n\n\"First of all for trusting me, but mainly for making me appreciate what I have. I sit around at night feeling sorry for myself that I'm lonely, and how unfair things are with my kids. Hearing what you've been through makes me see how much I have to be thankful for.\" She'd paused and added. \"Your Aunt did a great job Jamie, because you're a hell of young man considering all you've been through.\"\n\nAs she spoke she hadn't moved her hand, and I was enjoying her touch. It had been a long time since I'd had any real human contact. I had the urge to turn my hand over so that I could hold hers, but figured that would look wrong. Instead I took a minute to fight back the emotions talking about my life had started to bring out. Paula asked where Aunt Marie was living and when I told her, she said that she knew where it was, and it wasn't far from her house. At that point, I told her that I was planning on seeing her from there, and should probably get going. \n\nA disappointed feeling went through me as Paula removed her hand from mine, and said that sounded like a good idea. I thanked her for lunch and stood up, preparing to leave, when she told me to hold on so she could grab her coat. I told her she didn't have to walk me out. Paula rolled her eyes at me and said that she was going to grab her coat, because she was going to take me to see my aunt. I immediately told her no, I couldn't impose like that. Paula told me not to be ridiculous and not to be embarrassed; she would drop me off and go grab a coffee while I went in for a visit. ",
        "I tried to refuse, but Paula told me she would not take no for an answer, it was cold and I would have to take three buses to get home. She also winked and said she still had my money, and wouldn't give it to me until she dropped me off at home tonight. I lost any desire to continue to argue. A ride in a warm truck, a chance to see my aunt, and more time with a woman who was being nicer to me than anyone had in a long time. I agreed to go and with a big smile, that made my decision worth it even more, Paula left the room to go grab her coat. \n\nSlipping my sweatshirt back on, I followed her into the Parlor and saw her go down the hallway to the closet. While she had the door open, blocking her view of me, I took a minute to look at the picture of her in the black dress. Upon close inspection, not only was my initial impression of her legs confirmed, but I couldn't help but notice that her chest was not exactly small. The dress wasn't too low cut, but I could see more than a little cleavage. I focused on her face, trying to guess how old the picture was, she looked pretty much as she did now, and I thought that she more than looked good for her age, she looked good period.\n\nI turned quickly away from the picture when I heard her footsteps, coming towards me and saw she was again bundled up from head to toe. I found myself wondering if I was still seeing her come the warm weather, what she would dress like. As we left the house and got into her truck, I rolled my eyes at myself. This woman was being damn good to me, and I was wondering what her body looked like. Never mind the fact she had kids my age, and sure as hell would never think of me in that way. In my defense however, it had been months since I'd broken up with Tammy and Paula holding my hand was the first time a woman had touched me in any way since.\n\nPaula dropped me off at the home where the best day I'd had in a long time continued. Aunt Marie called me by name as soon as I entered her room. Better than that, she even hugged me back when I hugged her. She seemed fairly lucid and asked about me and the house. I fought to keep a smile on my face as I told her that I was doing great in school, and was keeping the house in good shape for when she came home. Aunty asked how Tammy was and I said fine. I had to stifle a laugh when she shook her head and said \"I have to tell you Jamie, I really am not fond of that girl, she's quite the phony.\"\n\nAunty stayed with me for another few minutes, long enough to break my heart by asking me if I knew when her kids were coming to take her home. I was almost relieved when she started fading out, looking at me as if I had just come in and asking me who the hell I was. I told her twice, then gave up and simply nodded as she started talking about people I'd never heard of before. After a few minutes of that, she fell asleep and I sat by the bedside holding her hand with my head down, crying in frustration at how wrong all this was. \n\nTaking a few minutes to pull myself together, I went outside to see Paula sitting out front in her truck. I got in and she asked how my visit was. I told her the truth, that it was up and down, and she left it alone. We drove to Providence in silence. I felt bad, but seeing Aunty drained me, and the heat, which was a treat for me, was making me drowsy. When we were within a few blocks of my house, I told her to pull over and I would walk. Paula stubbornly insisted on taking me all the way to my door and a couple of minutes later we pulled up in front of the run down four story building with the tacky rooms by the week sign over the door, that I called home. \n\nI thanked her for everything and as I started to get out, I felt her hand press into mine. Looking down I saw she was handing me a fifty. Before I could say anything she said she didn't have two twenties so I would just have to take that. I started to thank her again, but stopped in mid sentence when she leaned over and kissed me on the cheek. She told me again what a great guy I was and how wonderful it was the way I cared about my aunt. Taking my hand, she told me to hang in there, things would get better.\n\nSince then things had gotten a little better, but only because of Paula herself. I saw her just about every morning and it gave me something to look forward to. She had started coming by a couple minutes earlier so we could talk a little before she had to go. One day she said she felt bad because while I was talking to her I might be missing out on making some money. I told her not to worry, that I looked forward to seeing her. I was amazed at the smile she gave me, and as she looked down I swore she was blushing. Of course, she made it worth it anyway, always giving me a few dollars.\n\nIt had gotten to the point I tried not to take it from her. She asked why, and I told her that I felt like we were friends and I wouldn't take advantage of a friend. Paula had shaken her head and told me that I really was something. She pulled away and just as she did, dropped a five on the ground before driving away laughing before I could give it back to her. Over the last few days I found myself thinking of her more and more, especially at night. During the morning I just thought about seeing her and what we would talk about. At night however, my thoughts were becoming very different and weren't exactly the purist.\n\nLying there shivering on the cot, I would find my mind drifting in her direction. I always envisioned her in that black dress from the picture, her long hair down and a different kind of smile on her face. She would kiss me on the cheek as she had done that night she dropped me off, but in my thoughts her lips strayed to mine. I imagined we were in her bedroom and the kissing would lead to her pushing me onto her bed. Paula would start to slip the dress off and...\n\nI jumped at the sound of a horn barely getting out of the way of a red Toyota turning the corner. I took a deep breath and stood on the curb for a minute until my heart slowed down. Carefully looking both ways, I crossed the street and shook my head at the fact I was thinking about her that way. I wasn't just thinking about her, I was talking about her as well. A couple of nights ago when I was washing dishes with Gino in the restaurant, I mentioned her several times. The last time I did he laughed at me. When I asked him what was so funny, he slapped me on the shoulder and said, \"Man, you are crushing on this woman!\"\n\nI tried to deny it, but could feel myself getting redder by the minute. He had picked the right word; a crush was exactly what I felt like I had. Well I guess I couldn't blame myself. Paula was damn nice to me and attractive, I think her being older was exciting as well, but a crush was all it was. Like most crushes I had no doubt it was one sided, and would run its course. But for now, she was fun to think about and it gave me a pleasant distraction from the rest of my pathetic existence. Speaking of which, I had reached the route ten off ramp and as I always did, looked up and down the street for cops before crossing partway and standing on the island.\n\nI closed my eyes and removing my sign from my sweatshirt held it up in front of me. It always amazed me that after several months of this it hadn't gotten easier. Every day I felt like I lost another piece of myself as I stood there begging. I focused straight ahead as the cars went past me. The light turned red, and as the traffic stopped I looked around at the people in the cars in front of me. I did this quickly, long enough to maybe gain some sympathy, but not long enough to make them feel awkward.\n\nThe guy in the ford pickup in front of me rolled his window down, and put his hand out. I quickly stepped forward, took the dollar from his hand, and said softly, \"Thank you sir.\"\n\n\"Anytime kid,\" he replied. \"You try to get some coffee with that okay, its cold out here.\"\n\nI nodded and turned to go back up in the island. As I did I was just in time to catch the sight of two young kids in the back seat of a Lexus, pointing and laughing at me. The light changed and as the cars drove by I heard someone yell, \"Fucking pathetic, get a job you lazy bastard!\"\n\nI put my head down, in shame and frustration. This would go on all morning. For every decent person there was an asshole. Most people seemed to be in between. They would make eye contact with me, then quickly look away and stare straight ahead until the light changed. I could tell they felt bad, but either couldn't give anything or thought it was wrong to do so for some reason.\n\nThe first half hour went by quickly and I made ten dollars, so lunch and dinner were in the bag at least. The next goal was another ten for the luxury of haircut, so if I got an interview I could look decent. The time began to drag as traffic thinned out and standing still allowed the cold to catch up to me. I didn't have a watch, but my well developed internal clock told me I should have seen Paula by now. Once in awhile if she knew she had to work late she would go in later in the morning. When that happened I usually missed her, as I didn't stay more than an hour for fear of the cops. Figured this would be the day she wouldn't be around.\n\nI looked up excitedly at the sound of a horn, expecting to see her truck. It wasn't her, but I knew who it was. I quickly jumped back a couple of feet as the red mustang came racing towards the light. It was driven by a kid around my age and the two girls who were with him were laughing and pointing. As he always did, the kid swerved the mustang close enough to the island to hit the slushy snow in front of it and splash it up at me. I dodged most of it, but some hit my legs, instantly soaking my pants. He yelled something and I heard the screech of breaks.\n\nI saw that the traffic had backed up and he was stopped not twenty feet from me. I felt a surge of rage flow through me and stepped off the island. After weeks of doing shit like that to me, the little mother fucker had finally screwed up. I was never much of a fighter, but at six feet was not a small guy. I used to work out when things had been good, and although I'd lost weight with my limited lifestyle I was still pretty solid. Wandering the streets had also taught me how to handle myself, and I'd gotten into enough scuffles with other panhandlers and street people to know I could kick this kid's ass.\n\nI took another step towards his car and saw to my amusement he was looking behind him and saw me coming. I smiled at the image of yanking him out of his car in front of his little girlfriends and bitch slapping him. I was halfway across the street when I heard Paula's voice behind me,\n\n\"Hey Jamie, hold on!\"\n\nI stopped and stared at the mustang, still wanting to go over there, but hesitated. Would I want Paula to see me act like that? She thought I was a sweet guy who did the right thing. Right behind Paula was a vision of my aunt Maries shaking her head in disappointment. I turned around and walked back onto the island, thinking I would get another chance with that prick some day. I admit I was a little ticked off, that I had lost this chance, but when I looked over to see Paula smiling at me, from her truck, I quickly forgot about it.\n\n\"Morning Paula, how are you?\" I asked as I reached the side of her truck.\n\n\"I'm good Jamie, how you doing this morning?\"\n\nI shrugged.\n\n\"Okay, I've had worse days.\"\n\n\"I'm sure you have.\" She nodded, looking at me sadly.\n\nI hated that look; pity was what I relied on from the people who donated to my cause. I wanted Paula to see me differently.\n\n\"Well any day I see you can't be a bad day now can it?\" I asked, giving her a wink.\n\nPaula laughed and gave me the smile that I had been living for lately.\n\n\"You are smooth Jamie, you should teach classes.\"\n\nI shrugged and didn't reply right away. I was content to just look at her. As always her hair was up and she was bundled up tight. I did notice that her usual black scarf had been replaced with a bright red one. \n\n\"So who said it's a line?\" I asked to keep her smiling or to keep up my lame attempt at flirting, either way it worked as she laughed again.\n\n\"Oh, please, I have kids your age and I doubt I'm one of those...\" She thought a moment. \"Mif's?\"\n\n\"Milfs.\" I corrected her, laughing.\n\n\"Oh yeah that's right.\" she nodded. \"Not one of those.\"\n\n\"Yeah you're right,\" I began as I made a show of looking closely at her. \"I was thinking more like a cougar.\" \n\n\"Good thing I wore my boots today.\" Paula said rolling her eyes.\n\nReaching down next to her she handed me a Dunkin Donuts coffee.\n\n\"Here you go hon, it's really cold out here.\"\n\nI took the coffee and holding up the cup, turned it around in my hand, last week she had taped a five dollar bill to the side of it. I didn't see anything, which was fine by me. \n\n\"Thank you Paula.\" I told her. \"Hey, I like that scarf, is that for Valentine's Day?\"\n\n\"It is as a matter of fact.\" Paula said with a shrug. \"Probably all I'll do to celebrate the day, but hey it's something right?\"\n\nI nodded, thrilled that my little segue had worked. I was reaching into my sweatshirt for the rose, when Paula surprised me first by reaching out and handing me a small heart shaped box of chocolates.\n\n\"Speaking of, happy Valentine's Day Jamie.\"\n\nI took the box from her and stared at it for a minute. I felt a lump rise in my throat; I couldn't believe she had thought of me. \n\n\"Thank you Paula,\" I said quietly.\n\n\"No worries, \"she winked at me. \"Just some sweets for a real sweetheart.\" She laughed. \"I know that's not as good as one of your lines, but I'm pretty rusty.\"\n\n\"Well, this makes me feel even better that I did this then.\"\n\nPulling out the rose, I handed it to her.\n\n\"Happy Valentine's Paula.\"\n\nIf I'd had any doubt that she would enjoy the rose, it was erased by the look on her face. Her all ready big brown eyes widened, and as she took it, she swallowed hard, and I recognized that she felt the same why I did. \n\n\"Oh Jamie, thank you.\" She whispered. \"This is...\" she shook her head. \"So beautiful.\"\n\n\"Well I don't know about that,\" I said, after all it came from Cumberland farms. \"But you said purple was your favorite.\"\n\n\"Twenty years of marriage and my ex thought my favorite color was blue.\" She said softly, more to herself then to me, then shaking her head said, \"I say it once to you and you remember.\"\n\nReaching out, she took my hand in hers and flashing me her trademark smile said, \"Thank you, you don't know how much this means to me.\"\n\n\"Well you taking me to see aunty meant a lot to me,\" I said then reaching back into my shirt gave her the card. \"Here, this is for you too.\"\n\n\"Jamie, this is too much...\"\n\n\"Nah, it's only a card.\" I told her, but was thrilled with the look in her eyes as she held it.\n\n\"Yeah but, a few dollars is a lot for you Jamie! I mean....\" She sighed. \"You didn't have to do this.\"\n\n\"I don't have to do anything, remember?\" I asked.\n\nPaula looked at the red envelope and then again at the rose. Putting the card down, she reached out, put her arm around my shoulder and tugged me towards her. Caught off guard, I felt like an idiot as I all but fell against her car. That feeling quickly faded as she wrapped her arm around my neck and hugged me. My face was buried in her neck and between the scent of her perfume and the sensation of her soft hair against my cheek I felt as if I were in heaven. I frowned at the thought that I was pretty sure I didn't smell anywhere near as nice, and my own hair probably felt kind of nasty. \n\nAgain thoughts were pushed away by the thrill of her lips grazing my cheek. Still hugging me she whispered in my ear, \"You made my day Jamie, you really did.\"\n\n\"You make mine all the time.\" I told her quietly, and risking it, gave her a quick peck on the cheek.\n\n\"Hey lady! Make sure he showers first!\" a voice called out, ruining the moment.\n\nI pulled away, looking angrily in the direction of the voice, but the light was green and the cars were whipping past.\n\n\"Ignore them,\" Paula said quietly. \"They're just assholes.\" \n\nShe looked at her watch and sighed.\n\n\"I'm sorry Jamie, but I have to go. I'll look at the card later okay?\"\n\n\"No problem,\" I told her. Part of me was relieved, I would rather she read it without me in front of her, just in case I had gone too far with what I had written. \"You have a good day,\" I winked at her. \"And don't do anything wild tonight.\"\n\n\"Oh, please.\" She laughed. \"Wild for me these days would be using my left hand.\"\n\n\"I...\" I stopped speechless, trying to fight off the visual that remark conjured up. I could my face getting hot and Paula laughed.\n\n\"I got you to blush! How cute are you?\" \n\n\"Cute,\" I managed to get out. \"Yeah that's me.\"\n\n\"Sorry, Jamie, but you're so nice all the time I couldn't resist.\" \n\n\"Glad I could get you to laugh.\" I said rolling my eyes.\n\n\"You always do.\" She said, and then turning serious added. \"You go get warm soon okay?\"\n\n\"I will.\"\n\n\"And thank you again Jamie, this was very thoughtful.\"\n\nI simply nodded and smiled, as she pulled away she called out, \"Enjoy the candy.\"\n\nLooking down at the box in my hand, I shrugged and untying the ribbon, opened it to grab a chocolate. When I removed the lid I laughed, there was a ten dollar bill folded on top of the candy.\n\nI spent another half hour on the corner. By then I had finished my coffee, and eaten most of the chocolates. I also made another ten dollars so not a bad day all in all. Although I certainly didn't mind the money, the morning couldn't have gone badly after seeing the smile on Paula's face. I was proud of myself; I had made someone who deserved it, happy today. By this time most people had arrived at work and there wasn't much traffic coming through. Between that and the cop I spotted several blocks away harassing my buddy in the army jacket it was time to leave.\n\nI figured I would walk downtown, get a haircut then swing by the restaurant and see if Gino had gotten any calls from the jobs I had applied to. Slipping my sign under my sweat shirt, I crossed the street and started walking. I made it about three blocks, when I heard a horn behind me. I turned and was surprised to see Paula pulling up next to me. She had rolled the window down and called out, \"Hey Jamie, wait a minute!\"\n\nI walked over to the truck and frowned as it looked as if she either was upset or had been recently.\n\n\"Hey Paula,\" I began as I stopped in front of the door. \"Everything okay?\"\n\n\"Jamie, get in the truck for a minute, I want to talk to you.\"\n\nI felt my stomach flutter, that didn't sound good. I started to open the door, then stopped and started looking around. \"I don't think I should get in. What if...\"\n\n\"Oh, for God's sake!\" Paula rolled her eyes. \"Just get in.\"\n\nI quickly got into the car, wondering what was wrong. Then it hit me, she must have...\n\n\"Jamie,\" Paula cut into my racing mind. \"I just read the card a few minutes ago.\"\n\nOh shit, I thought. I'd gotten carried away and she was going to say something about it. I could feel my face already starting to flush. I'd made myself look like an idiot.\n\n\"Umm, look Paula...\" I stammered not even sure what I was going to say. \"I...\"\n\nI stopped as she reached out, and putting her hand on my shoulder said softly, \"That was the sweetest thing anyone has said to me in longer then I can remember.\" She paused and I was shocked to see that her eyes were misting up. \"Thank you Jamie, that card means more than you know.\"\n\nBefore I could speak, she leaned forward and hugged me. Unlike last time, she got both arms around me and pulled me close to her. I hesitated, before awkwardly putting my arms around her shoulders. Again my face was nestled into her, but this time it was the soft skin of her neck that I felt my face against. She smelled and felt amazing, and I had to fight off the insane urge to kiss her neck. Paula released me, and sitting back in her seat looked at me as if she were embarrassed.",
        "\"Sorry, I... well that card was just what I needed today.\" She shrugged. \"Valentine's day has always been tough for me.\"\n\n\"Since the divorce?\"\n\n\"No, much longer than that.\" She shook her head. \"I was lucky if we went to dinner and most of the time I'd get candy of flowers, and only because his secretary would send them.\" She paused then added quietly. \"The one he'd been seeing for years.\" \n\n\"I'm sorry Paula.\" I said.\n\n\"Don't be,\" she smiled. \"You turned a bad day good Jamie, what you wrote was perfect.\" She looked away for a minute then turning back put her hand over mine and asked, \"Did you mean it?\"\n\n\"Of course I did!\" I exclaimed. \"Paula you are the best person I know, I meant everything I wrote.\"\n\n\"Even the part about me being beautiful?\" She smiled. \"On the outside?\"\n\nI immediately blushed and unable to look her in the eyes said, \"You're very pretty Paula.\"\n\nPaula laughed and I felt like a fool. Pretty. What was I a kid? Well of course I was, at least to her anyway, and apparently I was trying to enforce that view by acting like one. \"No one has called me pretty in years.\" She said. \"Or beautiful for that matter.\"\n\n\"Well you are.\" I told her. \"You have gorgeous eyes.\"\n\n\"Thank you,\" She smiled. \"Your baby blues aren't so bad either you know.\"\n\nI didn't reply as I was too busy wondering if she really meant that. \n\n\"Jamie,\" Paula began. \"Would you do something for me?\"\n\n\"Anything.\" I said quickly, a little too quickly I thought.\n\n\"I want you to go out to dinner with me tonight.\"\n\n\"I...\" had I just heard that right? \"Dinner?\"\n\n\"Yes dinner.\" She nodded. \"I'll pick you up and we can go to my favorite restaurant.\"\n\n\"I...I don't know Paula.\" I put my hands out. \"That, ummm... well it wouldn't look right.\"\n\n\"To who?\"\n\nI found I didn't have an answer to that, and just sat there, staring like an idiot.\n\n\"Look Jamie,\" Paula said squeezing my hand. \"I haven't gone out on Valentine's Day in years and I would love a chance to dress up and go out.\"\n\n\"But with me?\" I shook my head. \"I mean come on Paula I'm sure there's some guys who would...\"\n\n\"I don't care about other guys, I want to go out with the guy who gave me such a beautiful card and who made me happy today.\"\n\nOh boy, this was starting to get awkward. I kept telling myself this meant nothing, but it seemed like it did. I should keep saying no, it was the right thing, I had no business going out with someone like her, hell she had kids my age. Then again, the thought of finally seeing her dressed up, would be...\n\n\"So what do you say Jamie, you want to go out with me tonight?\"\n\n\"You mean like a date?\" I blurted out.\n\nOh, you fucking moron, I thought as soon as the words left my mouth. What a first class boob.\n\n\"I mean like two people going out and having a good time together.\" She shrugged and said. \"But you can say it's a date if you want. Tonight can be anything you want it to be.\"\n\nAnything? Slow down Romeo, she's just playing along with me.\n\n\"Well jeez I can't be as special as you say I am if you need this much time to decide.\" Paula said shaking her head. \"So much for my confidence.\"\n\n\"It's not that,\" I said quickly. \"I just, I can't pay and I...\"\n\n\"Don't worry about money, I have plenty, what I don't have is someone to spend Valentine's with.\" She sighed. \"Not even my Valentine.\"\n\n\"Well I...\"\n\n\"You don't have to worry about dressing up,\" she pointed out. \"We can...\"\n\n\"I have something nice I can wear.\" I told her.\n\n\"Really?\" she smiled. \"I'd love to see you dressed nice.\"\n\nThat makes two of us, I thought. I was running out of ways to say no.\n\n\"Come on Jamie,\" she said, \"It would make me sad to be alone tonight.\" \n\nPaula put her head down and looking up at me though her eyelashes with those huge brown eyes pushed her lips into a pout and whispered. \"You wouldn't want me to be sad tonight would you?\"\n\nI shook my head; there was no way in hell I could say no to that look.\n\n\"Okay.\" I told her. \"I've always been a sucker for big brown eyes.\"\n\n\"Really?\" She gave me a sly smile. \"That's good to know.\"\n\nWas she flirting with me? No, don't be...\n\n\"I'll pick you up at seven and at your house; I don't want you walking around all dressed up tonight okay?\"\n\n\"Okay,\" I told her as I opened the door to get out. \"I'll see you then.\"\n\n\"Thank you Jamie,\" she said. \"You've really made me happy today.\"\n\n\"Good,\" I nodded. \"I'm glad you're going to have a good day.\"\n\n\"Who says it will have to stop at just the day?\" She gave me a wink, \"I'm looking forward to tonight Jamie, I really am.\"\n\n*****\n\nI was in front of Gino's house pacing nervously. It was five past seven and I was wondering if Paula had come to her senses and decided not to pick me up. For the third time in the last ten minutes I started to walk back up the stairs to Gino's door to use his phone and see if she were coming. As I had the other two times, I stopped myself. If she were on her way, I would look like an idiot and I'd done enough of that this morning. If she had changed her mind I didn't want her to feel bad.\n\nWalking past Gino's house I stopped in front of the bakery next door. It was closed and in the street light I could see my reflection in the window. I had to say, that for the first time in a long time I looked pretty good. After Paula had given me a card with her cell number and left, I hoofed it downtown where I had not only gotten my hair cut, but splurged the extra five dollars for a shave. From there I went to the restaurant to see if someone had called for me about a job. As had been the case for quite some time Gino said that no one had called.\n\nAlthough disappointed I still found myself in a damn good mood. I was going out tonight and whether it was a real date, which I doubted, or not, it would be a great night with a beautiful woman. Gino noticed I didn't look as upset as usual and asked what had me in such a good mood. Part of me didn't want to tell him, but he was really the only friend I had and I caved. He stood there grinning while I told him about how I had bought her the card and how happy she had been. When I told him she was taking me to dinner he laughed and exclaimed.\n\n\"Jamie that cheap assed rose is going to get you laid by a cougar!\" he shook his head. \"Shit man, who said you don't have any luck?\"\n\nI rolled my eyes and told him that it wasn't that kind of date. He laughed and told me that he was willing to bet, the next time I saw him I would be telling him he was right. Gino then went on to rant and rave about how hot older women were and how Paula was going to blow my mind. I let him ramble, Gino was a great guy but obsessed with porn, everything was about sex to him. When he was done and I promised him that if I got lucky I would tell him the details, he turned serious. He asked if I had decent clothes and I said I did. What I did not have was a jacket. \n\nGino told me to go home and come back to his place around five and bring my clothes. It was a bit of a trek each way, but I eagerly took him up on it, figuring he would let me use his shower. I went home and seeing my asshat neighbors were sleeping, which is what they didn't seem to do at night, I lied down. I was tired, but wired. I hadn't gotten much sleep, but all I could think of was Paula, how great she smelled, how soft she was. I couldn't wait to see her later. I closed my eyes, trying not to let my imagination take things too far. I focused on the company and what a nice time it would be, carefully keeping my mind from Gino's absurd claims of cougar seduction. \n\nI eventually fell asleep and did in fact dream of Paula, letting her sexy black dress hit the floor, and inviting me into her bedroom. I woke up horny as hell, and unable to help it, got off to the image of Paula's big brown eyes looking up at me from between my legs, while those lips were doing something other than smiling. When I finished, I felt a little guilty, thinking that way of someone who was being nice to me, but damn I really was crushing on her as Gino had said.\n\nI arrived at Gino's around five thirty where, as I'd hoped, he told me to go ahead and use his shower. He lived with his parents and sister, and had on several occasions asked if I could stay with them. But they had no extra rooms and his mother always seemed suspicious of me for some reason. After I'd showered, dressed and stole a couple of splashes of his Wings cologne, Gino made my night by presenting me with a black leather jacket. His birthday was next week, and he had asked for a new one and told me I could keep it. The jacket fit perfectly, and went well with my outfit. Grinning, he told me to reach into the right pocket. I did and shook my head as I pulled out three condoms. \n\nI told him I didn't need them, and with a laugh he told me that from what he'd heard about older women, I might need more than three. I called Paula to tell her to pick me up there and when she answered and I told her it was me, her first words were, \"Jamie, don't you dare cancel on me!\" \n\nI assured her I would never, and gave her Gino's address. That had been six and although she hadn't wanted me to cancel, I found myself wondering if now she would be. Leaning closer to the window, I ran my fingers through my now short hair. I'd even added a little gel, and was wondering if I'd over done it. I quickly forgot about my hair, as I heard the sound of someone pulling up behind me. I turned and felt a wave of relief go through me when I saw Paula's truck pulling up.\n\nAlthough I tried not to, I could feel a big smile on my face as I walked over and opened the door. \n\n\"Oh, don't you look nice!\" Paula exclaimed as I got in.\n\n\"Thanks,\" I began, \"I figured that...\"\n\nI stopped as once I'd gotten in, I turned to face her. Paula looked amazing. Her brown hair was down and like in the picture was long and curly, she was wearing makeup, and her lips full lips were coated in a deep red that perfectly matched the dress she was wearing. What a dress it was! For once she was not wearing a scarf and her long jacket was open, leaving me a clear view of what was an almost disturbingly low cut neckline. I tried to tell myself to get my eyes up, but I they were ignoring me, instead focusing on a patch of freckles just above the dress and then dipping lower, to what was some damn impressive cleavage.\n\nPaula was leaning toward me, causing the top of the dress to fall forward just enough to give me a glimpse of not only the swelling of her breasts, but a just a hint of red lace. With an effort I got my head up, just in time for her to lean in and kiss my cheek. I felt my heart skip a beat as this wasn't a quick peck, rather her lips lingered for a moment, leaving me to revel in their soft touch. After the kiss, she breathed deeply, \"Oh and you smell nice too!\" \n\nShe'd whispered it close to my ear, and in a soft tone of voice, the \"oh\" sounding like a purr. I felt my heart skip another beat, and a stirring between my legs. Stop that! Jeez, this could be a long night, if I didn't stop acting like a teenager. Paula leaned back, and cocking her head stared at me for a moment. I didn't mind, as it gave me a chance to take her in as well. This time I kept my eyes above the neck, but the view was just as nice. I'd known she was fairly pretty, but seeing her like this, hair down and all made up, it hit me that she was beautiful.\n\n\"You look good Jamie,\" she told me. \"I love that shirt; it brings out your eyes.\"\n\nAnd that dress brings out your...cutting myself off, I smiled at her.\n\n\"This old thing?\"\n\nAs she laughed, I risked another quick look at her chest, before saying, \"Paula you look amazing.\"\n\n\"Amazing?\" She laughed. \"This morning it was beautiful, now amazing, well you know what they say about flattery my dear!\"\n\n\"That it will get me somewhere?\" I asked. \"That's just a line.\"\n\nTurning back to face the street, Paula pulled away and with a quick glance my way said.\n\n\"Is it? Keep going and maybe you'll find out.\"\n\nThe restaurant was located not far from where Paula lived and during the twenty minute ride I was fairly quiet. The first reason for my silence was that I simply did not have too much to talk about. Paula was talking about her job and how busy it was, and then switched off to what some of her friends were doing tonight, and how glad she was not to be home alone. I had the impression, that Paula loved the simple fact that I listened to her, and enjoyed talking to me. \n\nThe second reason I was not adding much to the conversation was far less noble, I was too busy checking her out. Her dress was about knee length but because she was sitting had ridden up a little. She was wearing sheer black stockings, and I was surprised to see that despite the cold was wearing red heels. The heels were pretty high, and I couldn't wait to see what they did for her legs when she stood in them. But for now her legs were doing just fine on their own. Her calves had a nice shape to them and I figured she must exercise. As I continued to stare, I watched her leg flex as she worked the pedals of the truck. Once she lifted her left leg up to rub her knee and the dress lifted, giving me a quick look at the inside of her leg part way up her thigh.\n\nI was aware of my cock becoming semi hard as I watched her legs, and imagined what they would feel like under my hand, or better yet around me. I turned and looked out the window, taking a deep breath and telling myself to try to stop thinking that way. Despite the couple of remarks she had made, I knew nothing was going on. Paula was being playful and enjoying herself. Little did she know, I would enjoy her later, even if it was just in my mind. This dress would have me stroking myself for the next week.\n\nWe arrived at Marchetti's and I saw why she had worn the shoes as she pulled directly up to the door for the valet. I got out and came around to meet her. The valet had beaten me to opening the door for her, but I made it in time to get a great view of her leg as she stepped down from the truck. I noticed the valet looking as well as he helped her down, and smiled to myself, good for her getting some attention. When I reached her, she smiled and put her arm out. I went to take her hand, but laughing she said, \"Like this\" and hooked her arm into mine.\n\n\"Sorry.\" I said, feeling stupid.\n\nShe laughed and I noticed that in the heels she was close to my height, damn those things were high. Nodding over my shoulder, I told her, \"Hey that guy was checking you out.\"\n\n\"Whatever.\" She rolled her eyes.\n\n\"He was,\" I insisted. \"I saw him looking at your legs.\"\n\n\"Really?\" She asked, glancing over her shoulder.\n\n\"Absolutely.\" I told her. \"You want to go back and walk past him? I'll bet he looks.\" I nudged her arm. \"Nice looking young guy.\"\n\n\"Jamie, you're the only good looking young guy I want to impress tonight.\" She giggled softly. \"But I will watch on the way out.\"\n\nI was too stuck on her last remark to reply, and simply looked ahead, hoping I wasn't blushing as we made our way into the restaurant. When we reached the front, a girl came around to take our coats. Paula started to remove hers, but I grabbed the top of it in time to help her out of it. As I handed it to the girl, Paula gave her head a toss and I watched her long brown hair flow down her back. Just before she did, I saw that the dress was open in the back, more than the weather would dictate as well. If she were trying to impress, it was working.\n\nApparently I was paying a little too much attention to Paula. When I handed the girl the coats I let go too soon and mine fell on the floor. I bent over to pick it up, and felt a stab of panic go through me when one of the condoms fell out of the pocket. I quickly covered it with my hand, and looking up saw that the girl had turned away from me and was hanging Paula's coat. Paula herself was looking the other way. Slipping the rubber back into the pocket, I handed the coat over and walked over to stand next to Paula while we waited to be seated. Leaning over, she whispered in my ear, \"Don't worry, you won't need those tonight.\"\n\n\"Oh shit Paula.\" I said softly, already feeling my face burning. \"I...I'm sorry that's my friend's jacket, I wouldn't...\"\n\n\"Nope,\" she continued as if I weren't talking. \"I closed down the shop after William was born\" she turned and winked at me. \"So no need for those things, bareback is just fine.\"\n\n\"Bare...\" My mouth fell open and I stared at her unable to get anything else out.\n\n.\"You are absolutely adorable!\" She smiled. \"You're blushing again\n\nTaking me by the arm, she led me over to the side of the waiting area.\n\n\"Look Paula...\" I began. \"I'm not thinking that this is well...\"\n\n\"Jamie relax.\" She said, putting her hand on my shoulder. \"I'm just teasing you okay? I'm having a good time and I can't resist watching you blush. As far as tonight goes, it's about two people who deserve far better than to stay home alone on Valentine's Day, having good time together, that's all.\"\n\n\"Okay.\" I nodded\n\n\"Now if you need to call it something,\" She continued, \"To me it's a date, I'm having dinner with a very attractive man, but just because I say it's a date doesn't mean that dinner becomes breakfast, got it?\"\n\n\"Got it.\"\n\n\"Of course, I'm not saying it couldn't lead to breakfast,\" she grinned. \"You are looking good tonight.\"\n\n\"I...\" catching myself, I laughed. \"I get it, you're teasing again?\"\n\n\"Am I?\" Paula asked.\n\nBefore I could respond the waiter arrived and walked us to our seat. The restaurant was packed due to the holiday and we had to walk single file through the tables. I gestured for Paula to walk in front of me, and spent the walk across the room checking out the view from behind. Although certainly not heavy, Paula had curves and the tight dress was doing a damn good job of showing them off. Paula's waist was fairly small, but her hips flared out nicely, giving her a great figure. My eyes however, spent most of the walk following the swaying of her well rounded ass. As good as that looked, I figured we must be getting close to the table and let my gaze wander down to get a look at her legs before we sat. As I'd suspected the heels did great things for her calves and her legs looks incredible. I'd told Paula she was beautiful and looked amazing, but right now the words would be fucking hot, but I would keep that to myself. \n\nWe reached the table and when the waiter asked about drinks Paula ordered two glasses of red wine. After eyeing me for a moment, he asked for an ID and with a embarrassed grin I told him I was only twenty and to just bring me a coke. I couldn't help but notice him look over at Paula and I could pretty much imagine what he was thinking. When he walked away I said as much.\n\n\"Sorry Paula, I know what he's probably thinking.\"\n\n\"He's thinking what I'm thinking,\" she answered with that sexy little smile I'd already seen several times tonight. \"Good for her!\"\n\nRefusing to blush and be caught off guard, I replied, \"Actually, I figured I he was thinking good for him!\"\n\nReaching across the table, Paula put her hand over mine and looking me in the eye said softly, \"How about we agree on good for us?\"\n\nDinner was fantastic, it was the best meal I'd had in longer then I could remember and we had everything from appetizers down to dessert and coffee afterwards. The food however was nowhere near the best part of the night. That of course was Paula. We took our time over the meal and talked about everything. Little things at first, the food, the weather, and then we got into more about our lives. Paula asked why I didn't have a girlfriend and I laughed and said that was pretty obvious. She asked when I last had one and I told her about Tammy, including how it ended.\n\nShe gave me that pitying look that I hated, and said it was for the best, I deserved a better than that. She also caused my heartbeat to pick up when she added that the problem was Tammy was a girl. I was mature beyond my years and needed a woman who would appreciate me, not a little kid. She had been looking me in the eye when she said it and I found myself hearing Gino in the back of my mind. I also kept replaying all the little teasing remarks she had made. In fact I'd a hard time getting her using the word bareback out of my head since she said it. I was at least doing a good job of not blushing at these remarks, but my mind was racing as I kept trying to figure out if it were a game or not.",
        "The conversation switched to her marriage. She again commented on how he pretty much ignored her, working late, and always making excuses that he was tired. Paula did succeed in getting me to almost spit my soda out when she added that when he did sleep with her she would have been better off doing it herself. From there she became serious and talked about how she knew something was wrong and stayed anyway. She told herself it was for the boys, but in reality she felt she couldn't do better. \n\nFinally things reached the last straw when he called her on Valentine's Day three years ago and said he had to cancel their plans, a client needed a last minute change and he had to stay. Paula had been pissed off and decided to go keep the reservations and picking up a girlfriend, went to the restaurant. That was when she saw her husband at their table with his secretary of the last ten years. I shook my head and figured I probably had that look of pity on my face now. How could someone do that to a woman like her? When she finished Paula had taken my hand again, and told me that was why my card had been so perfect today. Valentines had been the day her marriage officially ended.\n\nI tried to steer the conversation forward asking her why she wasn't dating now, and with a shrug she said that the guys her age all reminded her of her husband and in general seemed like they were looking for mother's and babysitters more than they were a partner. I dropped the subject after she made the 'men her age' comment and brought up the food again. During the entire conversation it was everything I could do not to continue to stare at her, especially her chest. The dress was damn low cut and she kept leaning forward over the table. Several times I caught a good look at her red lace bra and the soft curves of her more than ample chest. \n\nEvery time she would look away my eyes would drift there, and then quickly look away as she would face me again. I kept wondering if she had caught me or not. In the back of my mind a voice that was growing louder and louder told me that she had and didn't care. She had dressed this way for a reason, the only question was whether or not she was just enjoying me looking or if there were more to it. I kept trying not to think about it. If anything if I had been embarrassing myself before, I would make a total fool of myself if it came to anything serious. I'd been with two girls in my life and they were girls, not a woman like this.\n\nThe check came signaling the end of dinner and after the waiter took her credit card, Paula snapped her fingers.\n\n\"Oh, Jamie I keep forgetting I need to ask you something.\"\n\n\"What's that?\"I asked, feeling myself getting excited, was she going to invite me back to her place?\n\n\"I think my gutters are clogged, would want to come over tomorrow and clean them? I'll pay you.\"\n\n\"Gutters?\" I repeated. \"Oh, sure yeah I can do that.\"\n\n\"Great!\" She exclaimed.\n\nUnless clean my gutter was a code for something fun, I could officially put Gino's and my fantasies away, at least until I was in bed alone anyway. Paula paid the check and being the chivalrous guy I was, I once again let her walk in front of me through the restaurant. While my eyes lingered on that perfect ass, I thought that tonight's little fantasy wouldn't exactly be a sweet one. When we went outside I tapped Paula on the shoulder and gestured over to the valet, who sure enough was staring at her. She laughed and leaning on my shoulder, bent her leg and made a show of fixing her shoe. I had to say I didn't mind the show, and got a kick out of her showing off. I started to wonder how much the three glasses of wine she'd had, had to do with this. \n\nWe drove in silence, I was both disappointed, yet in a way relieved that all this had really been was a nice night. Granted I'd be going home horny, but at least I hadn't been forward and looked like a fool. We were nearing the highway, when Paula suddenly pulled over to the side of the road.\n\n\"Everything okay?\" I asked.\n\n\"You know I just thought of something.\" Paula said, turning to face me. \"You're going to come tomorrow and do my gutters right?\"\n\n\"Yeah sure.\" I nodded.\n\n\"Well it's after ten, and I live down the road, instead of me taking you home and coming to get you in the morning, why don't you just spend the night at my house?\"\n\n\"Spend the night?\" I shook my head. \"I don't know Paula. I don't want to put you out.\"\n\n\"It's not putting me out Jamie, I have two extra bedrooms plus the couch, plenty of room.\" \n\nI really didn't want to have to sleep a room away from her. My mind was in overdrive as it was. Grasping at straws I told her, \"Yeah, but I don't have any clothes with me.\"\n\n\"My kids left stuff, I'm sure something of theirs will fit.\"\n\n\"Yeah but...\"\n\n\"Look Jamie, this will save me a lot of driving and honestly,\" She gave me an embarrassed smile. \"The wine is kind of kicking in and I'm not sure I want to drive to Providence and back.\"\n\n\"Oh,\" I nodded. \"Well yeah okay, I don't want anything to happen to you.\"\n\n\"Thank you.\" She smiled as she pulled back out into traffic. \"I'll make it worth your while trust me.\"\n\n\"You will?\" I asked, and then wanted to kick myself.\n\n\"Yup, I'll make you a nice breakfast and when you're done I'll bring you to see your aunt again. How's that? Will that make it up to you?\"\n\nNot as much as something else would I thought, but responded, \"That would be great Paula, and you don't have to pay me.\"\n\n\"Don't worry about that, we'll work something out, I'm sure. In the meantime, this will be fun, I'll make popcorn and we can watch a movie tonight.\"\n\n\"Sounds fun.\" I told her, sitting on a couch next to a hot woman, sounded...frustrating, but hell it beat my frigid room and annoying neighbors. \n\nWhen we got to her house we went into the living room where after turning on the small lamp next to the couch, Paula told me to have a seat. I sat in the corner of the couch and watched as she removed her jacket, jeez this could really turn into a long night. Holding her coat, Paula said,\n\n\"You're sure you're going to stay?\"\n\n\"Yeah, why?\" \n\n\"Because I'm going to change, this dress was fun for the night, but not too comfortable to lounge around in.\"\n\n\"Okay.\" I nodded.\n\nI watched as she slipped her shoes off and leaning over, rubbed the top of her foot. \n\n\"Damn these things hurt. It's been a long time since I wore heels like these.\" Straightening up she continued. \"Well I'm going to change, why don't you take your shoes off and get comfortable?\"\n\nPaula walked away and as she suggested, I kicked off my shoes and undid the first couple of buttons on my shirt. I looked over at the picture of Paula wearing the black dress and was relieved that she was changing. I'd rather her be sitting next to me in her usual baggy shapeless clothes than that damn dress, with those stockings. I sank down into the plush couch and sighed contentedly, a movie, a warm bed to sleep in, more time with Paula tomorrow, and I would get to see aunty. All that after the best night I'd had in... well maybe the best night I've ever had. I heard Paula coming down the hallway and as she came into the room, she said, \"Now this is much better.\"\n\nI turned to look at her and felt my heart stop in my chest. Oh, fuck me.\n\nPaula was wearing a short, no scratch that, very short red robe. The damn thing barely went to her mid thigh, leaving me staring at almost the entire length of her gorgeous legs. I really think that my mouth was open, but Paula didn't seem to notice. She was holding two glasses of wine, and leaning ove,r passed one to me. \n\n\"Here you go Jamie, just don't tell anyone I'm contributing to the delinquency of a minor.\"\n\n\"I...I won't\" I choked out.\n\nThe robe was loosely tied and when she leaned over, I found myself staring straight down at her large round tits. Just before she straightened up, I swore I caught a glimpse of the darker skin around her nipples. Paula sat down next to me so close our hips were touching, and I felt my breathing begin to pick up as I looked down at her legs. Putting the glass to my lips, I three long swallows of the wine. I winced at the taste, but the warm sensation it sent down my throat and into my stomach seemed to help me stop my heart from pounding.\n\nPaula was looking straight ahead, sipping her wine. She didn't say anything and had a thoughtful look on her face. My eyes wandered down to her chest, where I could see the curve of her left tit through the partially open robe. I quickly chugged the rest of the wine, and leaning forward put the glass on the coffee table. \"Wow, guess I'm slow.\" Paula said. \"I'll have to catch up.\"\n\nTipping the glass back, she drained it in a couple of long swallows. After putting it next to mine, she sat back into the couch, and leaning over, rested her head on my shoulder. If this were another girl I would have seen this as an invitation to put my arm around her, instead I just sat there, my hands in my lap, my rapidly swelling lap. Bending her leg, Paula brought her knee up to her chest and rubbed her foot.\n\n\"Damn, my feet really are sore.\"\n\nOh this was not fair, I thought as the bottom of the robe moved exposing the inside of her upper thigh. Her skin looked soft and inviting, and what I wouldn't give to feel it under my lips. My cock was now painfully hard and pushing its way down my leg. I shifted my hands so she wouldn't see it and trying to sound casual, said,\n\n\"My ex used to waitress, she'd come home complaining her feet hurt after every shift.\"\n\n\"Really?\" Paula lifted her head from my shoulder and looked at me. \"You know, I bet a nice caring guy like you used to rub them for her, didn't you?\"\n\n\"Yeah,\" I nodded. \"She used to like it and...\"\n\n\"Well then seeing you know how to give a foot rub, you can make mine feel better.\"\n\nTurning on the couch, Paula leaned her back against the other arm, and swinging her legs up deposited her feet directly into my lap. I swallowed hard at the sight of her bare feet with their deep red toe nails, on my leg. Speaking of hard, her feet had narrowly missed my aching dick that was straining to escape my underwear. I looked away from her feet, to see Paula looking at me expectantly. The robe had hiked up higher and was almost to her hips. If her hands had not been holding the middle of it down, I would have been able to see right...\n\n\"Well?\" Paula asked, breaking into my thoughts. \"Are you going to rub my feet, or do they need to be on a cute young girl for you to do that?\"\n\n\"Oh sorry,\" I muttered, \"I was just ummm...\"\n\n\"Looking at my legs?\" Paula grinned. \"I'd be disappointed if you weren't.\"\n\n\"I...\"\n\n\"Jamie, will you please rub my feet?\"\n\nPaula had lowered her head and given me the big brown eyes as she asked, and feeling like a drowning man going under for the last time, I took her right foot in my hands and started to massage it. Her skin was amazingly soft and her foot fit perfectly in my hands as I started kneading the base of her toes with my thumbs. As I did this, I moved my other hand to her heel and began to squeeze it gently.\n\n\"Oh, Jamie, that feels soooo nice\" Paula cooed.\n\nHer voice sent a thrill through me and I started working my thumbs down from her toes, into the soft skin of the sole of her foot. Putting her foot down on my thigh, I grabbed the other and began to rub them both at once. Paula sighed her approval and looking over at her, I let out a sigh of my own. Paula was resting her head on the arm of the couch. Her eyes were closed and her lips were parted. From those lips were coming tiny little coos and sighs each time I pushed my thumb into her soft flesh. Paula was moving her legs back and forth, flexing her feet against my hands. Each time she did it, I watched the robe starting to ride up a little more. Her hand was resting between her legs, holding the robe there. My eyes widened as I saw her red tipped fingers rubbing across the material. Was she...\n\n\"Will you be a dear, and rub my calves' honey? Those shoes made them sore too.\"\n\nHoney? My heart was now hammering in my chest. There could be no doubt here, unless she was just out to tease me, fuck with me and go to bad happy she had what it took so to speak. Regardless of what was going on, I quickly slid my hands up just past her ankles. Wrapping my hands under her legs I began kneading her calves. Paula lifted her legs, placing her feet flat on my legs to give me better access to the backs of her legs. That move also gave my eyes access to even more of her thighs. I could see the backs of her thighs going right down to the beginning of the curve of her ass. Again, except for that strategically placed part of the robe I was seeing everything she had under there. \n\nWhat I was not seeing was panties, was she not wearing them? I forced myself to concentrate on her legs. Not that that was a problem, her skin was soft, smooth and warm under my hand. I worked my way up her calves and when I reached the soft spot behind her knees, Paula breathed, \"Oh yes, right there, oh that's nice!\"\n\nShe had all but moaned this and I wanted to moan myself. My heart was pounding and my cock was throbbing. I kept staring up her robe and debating whether or not to get it over with, just run my hand up that creamy thigh and see what she said. Hell what did I have to lose? She was giving me the signals, she couldn't get mad, or could she? She could do anything she wanted here. I stopped rubbing the backs of her knees and paused, trying to get up the nerve to either go higher or just stop rubbing.\n\n\"You can keep going,\" Paula whispered.\n\nI looked up to see her eyes were now open and staring into mine. \n\n\"Go ahead honey, I won't stop you.\" She smiled, \"And I know you want too.\"\n\nMy reply turned into a gasp as lifting her left foot, Paula put it directly on top of my hard cock. \n\n\"Oh,\" I tried to speak, but it turned into an idiotic moan as she started sliding her foot across my aching flesh. \"Oh.... Not fair.\" I managed to get out.\n\n\"Not Fair?\" Paula asked. \"I'll tell you what's not fair.\"\n\nShe sat up and swung her legs out of my lap. Shit! I'd fucked it up, I'd said something...\n\n\"What's not fair,\" Paula continued as she stood up. \"Is that a great guy like you is in the situation you're in.\"\n\nAs she spoke, she got onto her knees on the couch, facing me. \n\n\"What's not fair is that I wasted so many years on an asshole that never cared about me.\"\n\nPaula leaned over and put her arms around me. Pulling me towards her, she placed her lips to my ear and whispered.\n\n\"What would not be fair is for the two of us to go to bed alone tonight thinking of each other, when we could be doing this.\"\n\nPlacing her hand on my cheek, Paula turned my face to hers and kissed me softly. I was so surprised I didn't kiss back, instead I closed my eyes, overwhelmed by the feeling of her soft lips against mine. \n\n\"Don't you want to kiss me Jamie?\" She asked. \"Haven't you thought about it?\"\n\nI opened my eyes and said softly, \"Yes.\"\n\n\"Then do it,\" She winked, \"Give your Valentine her kiss.\"\n\nPaula closed her eyes, and turning her head, parted her lips. Before I could lose my nerve, I leaned in and kissed her. I was going for a quick one, but as I started to pull back, she slipped her hand behind my head. Holding me to her lips, she kissed me hard. I heard a pathetic whimpering sound and realized it was coming from me, as her full lips began to slide across mine. I kissed her back, harder and more confidently than before and heard her moan in her throat. That sound sent a thrill through me, and turning sideways on the couch so that I was facing her, I slipped my arms under hers and pulled her to me. \n\nOur kiss picked up in intensity, she was pushing her lips hard against mine and I could feel her hand trembling against the back of my head. Her other hand came around and slipping into my shirt, she started rubbing my chest. Paula's lips parted and I felt her tongue press against my lips. With another desperate whimper, I opened my mouth to accept it. Instead of sliding it into my mouth, Paula chose to tease, her tongue darting out and flicking across the edge of my lips, as I tried to capture it between them. \n\nPaula's fingers found my nipple and gave it a pinch. I gasped and as my mouth opened she thrust her tongue into my mouth where it slid across mine. I moaned in my throat as our tongues played across each other. Paul had removed her hand from my shirt and was now undoing the buttons as we continued to share the hottest kiss I could have ever imagined. As if to disprove that last thought, Paula made it even hotter. Letting my shirt go, she reached down and grabbed my wrist. Pulling my hand from her side, she pushed it into her robe and onto her tit. \n\nI groaned into her still probing tongue as I wrapped my hand around her large firm tit. Paula sighed softly as I began to fondle it. I felt her hard nipple pressing into the palm of my hand, and sliding my hand down, started rubbing my fingers across it.  \n\n\"Oh, yes!\" Paula moaned.\n\nShe leaned her head back, and with no hesitation, I buried my face in her neck, eagerly kissing the soft skin just under her ear. Paula whimpered in my ear, and the sound caused my already throbbing cock to twitch in my pants. I took her nipple between my fingers and started rolling it gently between them, while continuing to kiss and lick as much of her slender neck as I could get to. Again I felt Paula's hands on my shirt, finishing the buttons and pulling it open. I heard her sigh as she began running her hands up and down my chest and stomach.\n\nI moved my other hand into her robe and was rewarded with another whimper as I cupped her other tit and began caressing her swollen nipple with my thumb. Paula pushed me hard, sending me back into the corner of the couch. Leaning forward her lips found mine and this time all but attacked them. She was now straddling my thigh and even through my pants I could feel the heat from her pussy. Her pussy, oh my God, I was going to get to...\n\nI stopped as Paula removed her mouth from mine and leaned away from me. I let her tits go and looked at her as she sat there staring at me. Her eyes were wide and she was breathing so hard that I could see her tits rising and falling with each breath. Speaking of her tits, the robe was still tied, but wide open.\n\n\"Oh goddamn.\" I whispered as I took in the sight of them.\n\nThey looked even bigger than they felt and despite her age seemed to be standing up quite well. Her rose colored nipples looked as hard as my cock felt, and they each seemed to point up just a little.\n\n\"You like?\" She asked, panting.\n\n\"Oh, yeah.\"\n\n\"Good because they're all yours honey.\" \n\nStanding up, Paula came over to stand between my legs and grabbing the tie undid the robe and let it drop to the floor. I could feel my mouth fall open as I saw all she was wearing was a skimpy red thong. Raising her hands up over her head, Paula whispered, \"How do you like your gift honey?\"\n\n\"Oh, I...\" I stammered. I tried to get myself under control, but Christ was she hot. \"You're incredible.\"\n\nI meant it, her tits had lifted even higher as her arms went up, and my eyes roamed from them to her hips and long shapely legs. \n\n\"Wait there's more,\" Paula said with a giggle that made my cock jump.\n\nTurning around, she bent over, presenting her ass to me. The thong was literally only a string leaving her ass completely exposed. Her cheeks were round and like her tits surprisingly firm. I started to reach out to grab it, but she turned around. \n\n\"You have far too much clothing on Jamie,\" she pointed at my chest. \"Take that shirt off.\"\n\nI did as she said, hoping she couldn't see my hands shaking. I tossed the shirt to the floor and looked up at her.\n\n\"Sit back.\" She said.\n\nI hesitated, and bringing her leg up, she put her bare foot on my shoulder and pushed. No sooner had my back hit the couch, then she put her right knee on the couch next to my thigh. Swinging her other leg over me, she placed it between my leg and the couch so that she was straddling me. She let her weight go and I groaned as I felt her pussy pressing down on my cock. I was so hard it was starting to hurt, but right now all I could think of was Paula's huge tits, right in front of me. She put her hands on my shoulders and leaning in , kissed me long and hard. I put my arms around her waist and as she shoved her tongue into my mouth, slid my hands up and down the smooth skin of her back. Damn she was soft!",
        "Breaking the kiss, Paula smiled and said, \"Well Valentine, are you ready to really start celebrating?\"\n\n\"I...\"\n\nTo my amazement I felt a moment of doubt. What was I doing here? Taking advantage of a lonely woman? No I hadn't made the first move, if anything she was coming onto me. I had the crazy thought that we were friends and it was never smart to be with a friend.\n\n\"Jamie?\"\n\n\"I...Paula, are you sure?\" I asked.\n\n\"Don't I seem sure?\"\n\n\"Yeah, but it's kind of...\" I looked for a word. \"Wrong?\"\n\nSliding her fingers up through my hair, she asked. \"Jamie, are you seeing anyone?\"\n\n\"No.\"\n\n\"Neither am I. So what is the problem?\"\n\n\"I...\" I swallowed and finally said it. \"I don't have anything Paula, I'm a beggar....\"\n\nI was stopped by her finger at my lips.\n\n\"What we have is not what we are.\" Leaning in she gave me a soft sweet kiss. \"Jamie what you have can't be bought, you're a sweet, caring man, and,\" she smiled \"a damn good looking one too.\"\n\n\"But I'm a kid.\" I whispered.\n\n\"No Jamie, you're not. You're not a good looking kid; you're a good looking man. And you know why I want this?\"\n\nI shook my head, unable to speak as when she leaned forward I could feel her nipples pressing into my chest. \n\n\"Honey,\" she began in my ear. \"You have made me feel something no one's made me feel in years, desired. I can see it in your eyes you want me, and I love that look. But what I love most is you were not going to try. The last two men I dated were my age, and they were like grabby little teenagers on a first date, just thought I would. Honey, I was all but throwing it at you, and you were not going to make a move. Because you respect me, even though you want me, and because of that you, my sweet valentine are going to have me.\"\n\nSitting back up, she wiggled her hips, grinding her pussy onto my crotch and causing me to moan.\n\n\"And it sure feels like you want me too.\"\n\n\"Oh, I do.\" I said.\n\n\"Then no more talk honey, this girl has waited long enough.\"\n\nShe wasn't kidding, before I could answer her lips were on mine and her hands were holding the sides of my face, so I couldn't move. Not that I wanted too. I had tried to do the right thing, and she wanted no part of it. All that was left was to enjoy. I ran my hands up her back and into her long curly hair as she leaned forward, pressing her tits into me. I moaned as I felt her rocking her hips, grinding her pussy into me through the pants.\n\n\"Oh, you do want me don't you?\"\n\n\"Hell yeah,\" I groaned as she started moving side to side, sliding her nipples across my chest.\n\n\"Soon, baby, but we're going to get the edge off first.\"\n\nPushing against my chest, Paula swung her left knee up onto the arm of the couch. This put her tits right in my face. I quickly found her left nipple and groaned as I sucked her hard flesh into my mouth. Paula gasped and shoved it into my face, pushing it harder into my eager tongue. I reached up to grab her other tit, but again she caught my wrist. This time she pushed my arm down and guided my hand between her legs. I gasped as I felt her thong was soaking wet. I started rubbing my fingers along the thin material, groaning as I felt her lips through the thong. Leaning in to start kissing my neck, Paula whispered, \"Inside honey, inside.\"\n\nNot needing to be told twice, I worked my fingers into the thong and slipped them through her warm soft and incredibly wet flesh. Paula moaned in my ear as I slid my fingers through the folds of her pussy.\n\n\"Inside.\" She repeated, as she nibbled on my ear.\n\nSliding my fingers back, I pushed and she cried out in my ear, as my two fingers plunged into her pussy.\n\n\"Holy shit you're wet!\" I gasped. I left out the words 'and tight', damn she felt tight.\n\n\"Oh honey!\" She moaned, \"In and out, let me feel them.\"\n\nI started slowly working my fingers in and out as she asked, and gasped as she started bucking up and down, pushing them deeper inside of her. I picked up the pace, matching the rhythm of her thrusts. I captured her nipple in my mouth again, and she let out a low moan in my ear. \n\n\"Your thumb, baby.\" She whispered, \"Find that clit.\"\n\nJust hearing her say the word, was enough to cause another surge through my cock. I worked my thumb into the thong and sliding it up, found the hard nub of her swollen clit.\n\n\"Oh right there!\" Paula yelped in my ear. \"Oh, rub it honey, oh please.\"\n\nSpurred on by her pleading, I started moving my thumb in slow circles while I continued to work my fingers in and out of her dripping pussy.\n\n\"Yes, oh just like that.\" She purred in my ear. \"A little harder with your thumb for me, oh yes!\"\n\nI started moving my thumb faster not loving the way she was working her hips into me, but her whispering in my ear, had me wondering if I might cum in my pants. I sucked harder on her nipple and moved my thumb faster, pushing as hard as I dared. I had only been with a couple of girls and never had done anything like this. I guess I was doing pretty good as Paula's hips began bucking harder, and her breathing was getting heavier in my ear. \n\n\"Oh...\" She gasped. \"Oh honey, just a little more...a little more.\"\n\nShe had stopped kissing me and was just resting her head on my shoulder, moaning and panting as my fingers worked her wet flesh. Paula let out a soft whimper and started swinging her hips in a circular motion, grinding her clit into my thumb.\n\n\"Oh god!\" She gasped. \"Honey don't stop, just like that! Please just like....\"\n\nI jumped when a moment later Paula let out a loud squeal directly into my ear. I didn't care as I was too caught up in the feeling of her pussy clenching around my fingers. Paula squealed again and began thrusting her hips wildly against my hand. I pushed hard, keeping my fingers on her, but lost her nipple when she sat up on my lap, arching her back. I felt her pussy tighten even more around my fingers. Paula threw her head back and let out a sound I could only describe as a wail. As she did her pussy convulsed around my hand and I felt a gush of wetness surge around my fingers\n\n\"Oh, yes!\" She cried out as she ground her hips into me. \"Oh, Jamie!\"\n\nShe arched her back once more and again I felt her pussy tighten. Paula let out a long whimper and collapsed against me, her breath coming in gasps in my ear. I put my arm around her, holding her close to me and feeling pretty pleased with myself. I had never heard a girl cum that hard. Because of course Paula was no girl this was a woman. \n\n\"Oh honey, I needed that so bad.\" She breathed in my ear. \"Oh, it's been so long since I came like that.\"\n\nSitting back up on my lap, Paula gave me a tired smile and said, \"Well now seeing you were so good to me, I guess it's my turn no?\"\n\nStepping off the couch, Paula leaned over me and after a quick kiss sank to her knees between my legs. Holy shit, she was going to...\n\n\"Oh shit!\" I gasped as she grabbed my cock through my pants and gave it a squeeze.\n\n\"Damn.\" She said softly. \"I think I'm going to enjoy this.\"\n\nLeaning up, she kissed my nipple, causing me to moan as her tongue flicked across it. She continued to tongue it as her fingers deftly undid my belt and pulled my zipper down. Paula's lips left my nipple and slowly trailed down my chest and stomach. I could feel my body trembling with anticipation as she reached the edge of my underwear and stared teasingly flicking her tongue around. Grabbing the sides of my pants, she said, \"Lift up.\"\n\nI did as she said, and as she tugged my pants and underwear down, my swollen cock sprang free. \n\n\"Oh look at that\" Paula exclaimed. \"Is that all for me?\"\n\nAll I could get out was a groan as grabbing my cock, she gave it a squeeze. I gasped as she did it again, causing my precum to squirt from the tip.\n\n\"Hmmm.\" Paula moaned.\n\nLeaning over, she flicked her tongue across the head of my cock. My hips twitched and I moaned like an idiot, as she swirled her soft wet tongue around the sensitive head of my dick. Paula looked up, and with a smile, stuck the tip of her tongue into the precum and pulled back, taking a trail of it with her.\n\n\"Oh my God.\" I moaned at the sight of this gorgeous woman's tongue covered in my precum.\n\n\"Yeah? Not bad for an old lady?\" She winked.\n\n\"You're...\"\n\n\"Let me show you how a real woman takes care of her man, okay honey?\"\n\nShe gave the tip of my cock a kiss, then got another of those stupid moans from me, as ducking her head, she swirled her tongue around my balls. Paula slowly licked up one side of my shaft and reaching the head, took it very briefly in her mouth. She sucked hard, causing my hips to twitch. Removing my cock, she opened her mouth and let the precum she had just sucked out, drip from her lips.\n\n\"You like that baby?\" She asked. \"Like your gift?\"\n\n\"You... don't have too.\" I said, feeling like a fool.\n\n\"Honey, I don't have to do anything remember?\" She winked at me. \"Trust me Jamie, this will be my pleasure, I've missed this.\"\n\nWith no hesitation she opened wide and taking my cock into her mouth, slowly teasingly, worked her way all the way to the base. I moaned loudly, I had never had it taken all the way before. Paula shook her head slowly back and forth, before sliding the length of my cock from her mouth. For the next few minutes I sat there moaning and panting as Paula's tongue worked over my cock as well as my balls, licking, teasing and sucking on my aching flesh. My legs were trembling and I needed to cum so bad I was ready to beg her for it. But it felt incredible and better yet, I could tell she was enjoying it.\n\nAs Paula continued to tease my throbbing dick, I marveled at how incredible she looked. I couldn't believe this woman was on her knees for me. I could feel her nipples pressing between my thighs and her long brown hair was fanned out across my legs and her shoulders. I groaned when Paula again took my cock into her mouth. This time however, after taking it all the way she began bobbing her head in a slow rhythm. Unable to help myself, my hips started rocking in time with her sucking. Paula looked up at me with her big brown eyes and groaned around my cock.\n\n\"Hmmm-mmm\"\n\nI began breathing heavier and I knew I wouldn't last long like this. I'd been worked up all night, and Paula's mouth and tongue were the most amazing thing I had ever felt. Hoping she wouldn't mind, I reached down and grabbing her hair, moved it away from her face. Paula winked at me and started sucking faster. I let out a whimper as my thighs started shaking even harder. I wanted it to last, but there was no chance. Especially when Paula leaned up and pressed her tits around my cock. She started sucking on just the tip as she worked her tits up and down my throbbing flesh. I whimpered again, as I took in the sight of my cock in between those perfect tits as her mouth engulfed the tip. \n\nLetting her tits fall away, Paula paused then began sucking me hard and fast. I was whimpering continuously now, as her lips slid up and down my shaft faster and faster. I saw she was looking at me and I met her gaze. The sight of those brown eyes staring directly into mine while she blew me was too much. \n\n\"I...\" I panted. \"I'm going to...\"\n\n\"Hmmm\" she moaned, then bringing her hand up, gave my balls a squeeze.\n\nI cried out as loud as she had as I felt my cock explode into her mouth. I wasn't sure if I should have, but not only did she not seem to mind, she looked as if she loved it. As my cock sent spurt after spurt of cum into her mouth, Paula's eyes rolled back in her head and she continued to suck slow and easy, taking everything I had. I let out a low moan as I felt my cock give up the last of my cum and slumped back into the couch panting. Between my legs, Paula let my cock slip from her mouth, and looking up at me, made a show of swallowing and opening her mouth, showed me her bare tongue. \"Damn Paula.\" Was all I could get out.\n\n\"Damn is right,\" she said as she stood up. \"I forgot how much I like sucking cock; you'll have to let me do it again later.\"\n\n\"Later...\" Jesus was I going to owe Gino a hell of a story.\n\n\"But right now, since we both got that out of the way, let's go take our time.\"\n\nPaula extended her hand to me, and I forced myself to stand. Leading me by the hand, Paula walked down the hallway towards her bedroom. My legs felt like rubber, but the sight of her delicious ass in that thong, kept me moving. When she opened the door I saw that she had candles lit around the large room.\n\n\"I want to be able to see what I'm enjoying.\" She said as she closed the door behind me.\n\nTaking my hand again, she stopped me at the foot of the bed, and wrapping her arms around me started kissing me. I hugged her back, letting my hands wander up and down her back and across her hips. Unable to resist, I slid them down and cupping her ass cheeks, gave them a hard squeeze.\n\n\"Damn you have a nice ass.\" I whispered as she nibbled at my neck.\n\n\"Oh, smooth in the bedroom too I see!\" she laughed, then said. \"Look at us.\"\n\nI looked over at the bureau and saw our reflection in the mirror. Paula's long curvy body looked fantastic against me, and my hands looked damned good on her ass. \n\n\"You are fucking hot Paula.\" I told her, figuring I was a little past offending her at this point. \"Hmm, I must be.\" She said softly as she grabbed my cock. \"Because you're still hard my valentine.\" She shook her head. \"Youth and enthusiasm!\" I moaned as she began to stroke my once again hard cock. Stepping back, Paula put her hands on my shoulders and pushed me against the bed.\n\n\"Lie back,\" She told me. \"I can't wait any more.\"\n\nI sat in the bed and sliding back, lied down on it. At the foot of the bed, Paula turned her back to me, and made a show of shimmying out of the thong. I felt my breath his between my teeth, as I watched her shake her ass at me. Somewhere in my mind I wondered if this were a dream. Well if it was I hoped I would stay sleeping long enough to go all the way. I didn't have long to wait. Climbing up on the bed, Paula gave me the unbelievable visual of crawling on all fours up my body. As when she blew me, her eyes were locked into mine as she made her way up to my face. \n\nWhen she was directly over me, Paula leaned down and kissed me before sitting up on her knees. Reaching back she grabbed my cock, and I held my breath in anticipation as she guided it to her pussy. I moaned as I felt her slide the head of my cock through her wet flesh. Paula sighed as she rubbed the head against her clit before sliding it back. She eased back and I let my breath out as I felt the tip of my cock begin to push its way into her. Paula paused then letting her weight go, impaled herself on my cock.\n\nWe both cried out as my dick plunged into her wet and extremely tight pussy. Paula stayed still, her hands on my chest and her breath coming in short gasps.\n\n\"Oh, you are not small are you?\" She whispered.\n\nI gasped myself, as she started rocking her hips, slowly working my cock in and out of her hot flesh. I lay still moaning as she was barely moving, and teasing the shit out of me. I wanted to start moving, but didn't want to hurt her. As if reading my mind, she said softly, \"That's it honey, just let me get used to it, and then you can take care of me like you want to.\"\n\nPaula started lifting herself up and down, sliding more of my cock in and out of her, and I closed my eyes and relaxed. She began moving faster, but I still just lay there, letting her ride me. I felt something graze my lips, and opened my eyes to see her tit in my face. I sucked her nipple into my mouth, and swirled my tongue around it as I grabbed her hips and began guiding her on and off of my cock. Paula slipped her tit from my mouth and sliding her arms undermine laid down on top of me. I wrapped my arms around her waist, holding her tightly to me. She sighed in my ear, as now it was she who remained still as I started pumping myself into her amazing pussy. \n\nI turned my head and kissed her neck as I continued to slowly pump her. Paula was cooing in my ear, every time I thrust into her, and as good as the sex felt I found that holding her close was almost as good. Almost, I thought as at her urging, I started fucking her harder. Paula, moaned in my ear about how good I felt and wanting to be able to see as much of her as I could, I rolled over quickly, until she was underneath of me.\n\n\"Whoa,\" she laughed. \"I thought I was the one who knew what she...\"\n\nI silenced her with a kiss. I moaned into her mouth as I pushed my tongue between her lips. As Paula had done, I worked my arms under hers, and hugged her, bringing us as close together as possible. I had my face buried in her neck as I slowly pumped in and out of her welcoming flesh. Paula was cooing in my ear again, and as I continued to slowly make love to her, she whispered, \"Oh honey, you are so sweet! I knew you would want to be good to me!\"\n\nSpeaking of being good to her... I could feel myself getting close to cumming and wanted it to last longer. I figured there was no better way to do that then take a little break and return Paula's favor to me. I slid my cock from her pussy and ignoring her moan of protest, began kissing her chest between her tits, Paula wrapped her legs around me, trying to urge me back inside, but I pushed backwards and started kissing her stomach. Seeing where I was going Paula laughed softly.\n\n\"Oh, look at you, well unlike you I'm not going to tell you, you don't have to!\"\n\nI looked up from kissing her soft stomach to wink at her. I slid down between her legs and resisting the urge to go right to her pussy, started kissing and gently sucking on the inside of her thighs. I breathed deeply and rolled my eyes at the sweet scent of Paula's pussy. Her perfectly smooth pussy. Using my fingers, I gently spread her open and lightly blew on her clit. Her hips twitched and she moaned, \"Honey, don't tease! I didn't tease you!\"\n\n\"Yeah you did.\" I said winking at her.\n\n\"Oh, I...\" She gave me the eyes and the pout. \"Please don't tease me baby.\"\n\nAgain the eyes were irresistible, and let's face it I would have been teasing myself as well. Leaning forward, I spread her wide and plunged my tongue into her now sopping wet pussy. \n\n\"Oh hell yes!\" Paula cried out as I swirled my tongue around inside of her.\n\nI sucked hard, and moaned at the taste of her. Keeping my tongue rigid, I started moving my head, tongue fucking her as I'd seen in a couple of movies. Evidently it was a good trick as Paula was moaning and shoving her hips into my face. Sliding my tongue from inside of her, I slowly worked it up through her pussy, teasing my way through the wet folds. I could feel Paula's thighs trembling under my touch and took as long as I could to work my way to her clit. After pausing to take another deep breath and enjoy the intoxicating scent of her pussy, I swirled my tongue across her hard clit.\n\nPaula cried out and shoved her pussy hard into my face. Holding her thighs, I began to gently flick my tongue across her swollen flesh. Paula stopped rocking her hips, and lied there whimpering softly as I teased her. My cock was pushing into the bed, and as much as I wanted to linger here, I desperately wanted to get back inside of her. Besides, she said not to tease. Slipping two fingers into her pussy, I started thrusting them in fast and hard, while taking her clit between my lips and sucking it into my mouth.\n\n\"Oh Jamie!\" She cried out. \"Oh, that is so fucking good!\"\n\nI started sucking faster, matching the movement of my fingers. Paula was so wet I could hear my fingers sliding into her. Her hips began to move again and sensing movement, I looked up and gasped at the sight of her playing with her nipples. Seeing me looking she said, \"Come on honey, make me purr!\"\n\nI started sucking as hard as I dared and within minutes, Paula started whimpering and she lifted her hips up, thrusting her pussy into my plunging fingers. Her legs were shaking badly and she called out, \"Slide your finger back!\"",
        "I wasn't sure what she meant and removed one of my fingers.\n\n\"Back honey, put it in my ass!\"\n\nHer ass? Knowing she was close I pushed my finger against her ass, and plunged it inside. Paula went off like a rocket. Her legs tightened around my head, and arching her back off of the bed, she howled like an animal, I kept sucking on her clit, and thrusting my finger into her pussy. The one in her ass I left still, and was amazed at how fucking tight it was, and that it was even in there in the first place. Paula screamed again and squeezed my head harder. I felt her body twitch and suddenly my face and mouth were flooded with her juices. \n\n\"Oh my fucking god!\" she cried out.\n\nHer legs went limp and I lay there trying to catch my breath. I looked up to see Paula staring at the ceiling her tits heaving as she also tried to calm down. I sat up on my knees and looking down saw my cock was as hard as it had been all night. Grabbing her legs, I pushed them open and sliding up, drove myself into her.\n\n\"Oh damn!\" She groaned as I started fucking her.\n\nI wasn't slamming her, but was no longer going easy, and she seemed to be loving it.\n\n\"That's right,\" she panted. \"We'll play nice later,\" looking up at me, she said. \"Sit back on your knees.\"\n\nI did as she said and raising her legs, Paula placed her feet on my shoulders. \n\n\"Now fuck me.\" \n\n\"Yes ma'am.\" I said as I wrapped my arms around her thighs and started slamming her harder than before.\n\n\"Goddamn!\" She cried out. \"Harder baby!\"\n\nNot needing to be told twice, I reared back and started going even harder. Paula was squealing with every thrust and spurred on; I began to go even faster.\n\n\"Grab my ankles!\" she called out.\n\nShifting my grip to her ankles, I opened her legs and continued to fuck her.\n\n\"All the way,\" she gasped. \"Spread my legs all the way.\"\n\nIf this were a dream, I hoped to hell I would remember it. Even Gino wouldn't believe this. I spread her legs as far as I could, and began pounding her harder than ever.\n\n\"Oh fuck yeah!\" Paula called out. \"Oh this is so what I fucking need!\"\n\nI looked down at the amazing sight of my glistening cock driving in and out of her silky smooth and dripping pussy. My cock was making wet sucking sounds every time I pulled back and again when I drove back inside. Paula was making noises that were more animal than human and it made me try to go even harder. I was breathing heavy and moaned as I could feel myself getting ready to cum again. Sensing I was close, Paula called out, \"Wait! I want my favorite!\"\n\nUnsure what she meant I stopped. Pulling herself from me, Paula rolled over onto her hands and knees.\n\n\"This is my favorite!\" \n\nPaula lowered her head to the pillow and pointed her perfect ass directly at me.\n\n\"Oh my God.\" I whispered at the sight of not just her well rounded cheeks, but the sight of her dripping pussy winking out between her legs.\n\nGrabbing her hips I slid inside of her and started fucking her slowly, wanting to enjoy this view as long as I could. \n\n\"Just give it t me,\" Paula called out. \"Come on baby, nice and hard like you were!\"\n\nSqueezing her hips, I pulled back and taking a deep breath started fucking the sit out of her. There was no other way to say it; I was pulling my cock out all the way to the tip before slamming it back in with all the power of my hips. Paula was yelping with every thrust and again, her sounds were driving me crazy. I was fucking her so hard I could feel my balls slamming into her and our skin was making slapping sounds every time I drove into her. \n\n\"Oh fuck!\" She cried out. \"Oh, Oh fuck me!\" \n\nMy legs were shaking and although I fought to hold back, after a few more vicious pumps I felt my cum racing through my cock. I moaned and started to pull it out.\n\n\"No!\" Paula yelled. \"Inside honey, oh, I want to feel it!\"\n\nI wasn't going to argue; I gave her one more pump and cried out as I felt my cock go off inside of her. Paula cried out as well and then moaned each time I thrust into her. I gasped as each of those thrusts ended in another spurt of cum going deep inside of her. \"Oh honey that is sooo good!\" She purred as I gave her one more pump. \"Stay still.\"\n\nI groaned in surprise and pleasure as I felt her pussy contract around my cock, wringing a couple of more drops of cum from me. \n\n\"Yes,\" Paula moaned. \"Oh, I want all of it.\"\n\nShe squeezed again, and I gasped as much from the feeling as where the hell had all this come from? Damn she was wild.\n\nI pulled my cock from inside of her and sat back on my knees. Paula whimpered softly and stretching her legs out next to me, rested her head on her arms on the pillow. I shook my head as I took in her body as she lay there panting in exhaustion. I allowed myself a satisfied smile that I had made her happy. Giving into my own exhaustion, I started to stretch out next to her.\n\n\"Pull the covers up honey,\" she said. \"I can't move.\"\n\nMy smile widened at that, and reaching down I grabbed the comforter and pulled it over us as I lay on my side next to her. Paula was on her stomach, but her face was towards me. Her eyes were closed and her face was covered in a sheen of sweat, her brown hair plastered to her cheek. Her lips were parted and unable to resist, I leaned forward and kissed her.\n\n\"Hmm,\" she opened her eyes. \"What was that for?\"\n\n\"You're absolutely beautiful Paula.\" I told her.\n\n\"And you, my Valentine, are a sweetheart.\"\n\n\"I didn't feel so sweet just now.\" I said with a laugh.\n\n\"Oh Jesus.\" Paula said putting her hand over her face.\n\n\"Hey,\" I exclaimed. \"You're blushing!\"\n\nI laughed as Paula covered her face with both of her hands. I could see her brown eyes peeking through her fingers at me.\n\n\"Now who's adorable?\" I asked.\n\n\"I...\" Paula sighed and shook her head. \"Jamie, I don't know where all that came from, I'm sorry I was like that, you must think I'm...\"\n\n\"A damn hot cougar,\" I laughed again. \"Don't worry, I didn't mind.\"\n\nPaula grinned and rolled over on her side to face me.\n\n\"Well my Valentine,\" she said reaching out and touching my cheek. \"I have another gift for you.\"\n\n\"Another...\" I shook my head. \"I know I'm young, but I'm pretty damn worn out.\"\n\n\"Not that kind of gift!\" Paula laughed. \"Trust me I've had enough,\" she winked \"for now anyway.\"\n\n\"For...\"\n\n\"Anyway, I have two things for you Jamie. One is a gift, because you've earned it and another is an offer that I hope you'll say yes to.\"\n\n\"What is it?\" I asked, surprised at how serious she had become.\n\n\"First the gift. Two weeks ago one of the order pickers in our warehouse put his notice in. His last day was today. I told them not to hire anyone because I had someone.\" She smiled at me. \"The job is yours Jamie, you can start Monday.\"\n\n\"Are you...\" I sat up looking down at her. \"Are you kidding? A fulltime job?\"\n\n\"Full time.\" She nodded. \"It doesn't pay a lot, but it's a job and they have benefits. I would normally never put my name on the line, but as tonight proves I know you won't let me down.\"\n\n\"No!\" I said excitedly. \"Hell no, God Paula thank you! I can maybe get a better place in a few weeks and...\"\n\nI stopped as she reached out and touched my arm.\n\n\"Jamie, come lie down with me.\"\n\nI slid back under the covers so we were both propped up on our elbows facing each other. Paula didn't speak right away and I found myself looking at her tits and wondering if we would again in the morning.\n\n\"Now for the offer.\" She grinned. \"See I've gotten to know you Jamie and I know what you hate most is a handout, even though you've had to live in them. So I knew if I made the offer I am about to your first argument would be that you couldn't pay anything and all that bullshit.\"\n\n\"What are you talking about?\" I asked.\n\n\"Jamie, I want you to come stay with me. I don't want you going back to that place, I want you here. You have a job now, so if it will make you feel good to buy some groceries or something you can, but I could care less about that. But I know you do.\"\n\n\"Live here?\" I asked.\n\n\"Yes Jamie, live here with me.\"\n\n\"I...\" \n\nHow did she mean that? Live like a border or...\n\n\"Well,\" I started. \"I mean like you said you have extra bedrooms right?\"\n\n\"Honey,\" Paula began as she reached out and took my hand. \"If you come and stay with me, I'll still have extra bedrooms, because you, my good looking valentine, will be sleeping right here with me.\"\n\nI felt a thrill go through me, but quickly fade. She was just talking like this because of the sex I couldn't make her happy. Looking at her, I asked.\n\n\"You mean tonight wasn't just a...\" I trailed off.\n\n\"A what? A one night stand?\" She asked. \"Hell no, Jamie if I wanted just sex I could have gotten that anytime. No honey, I...\" she paused and I saw her eyes begin to mist over. \"I want you to be with me. You make me happy Jamie.\"\n\n\"I...\" I shook my head. \"Paula you... I mean, you make me very happy, but I can see why. Why would you want me?\"\n\n\"Because you want me.\" She said.\n\n\"Yeah, but other guys would want you Paula, look at you! Great job, nice house, looks...\"\n\n\"And that is what they would want.\"\n\n\"What do you...\"\n\n\"Jamie, listen to me.\" Paula began. \"The reason I've been alone is because after I looked back and saw what I put up with I swore I never would again. I wasn't a lover to my ex. I was a wife, a mother, someone who looked good on his arm when he wanted to play house. I was an object, he wanted me for what I was not who I was. Understand?\"\n\n\"I think so.\" I nodded.\n\n\"Well all the guys that were interested in me since, were my husband. Same age and same Bull shit. They thought of me as a good prospect. Like you said, some money, great career, pretty all the physical things, but that is what they wanted. I want someone who wants what I have to offer inside. \n\n\"Jamie, when you look at me your eyes light up. I love that reaction! It's what I have always wanted, and yes I know that you have been looking at me in other ways too, but that came later, in the beginning you were happy to see me as me.\"\n\nShe stopped and took a deep breath before continuing. \n\n\"Honey that card was incredible today. Before today I... I had thought about you, and like you, it was you before I started thinking about sex. But I figured, this might not be right and I held back. But Jamie what you wrote in that card, \"Beautiful on the outside as you are on the inside\". That sealed it. You think I'm beautiful in here.\" She tapped her chest. \"You saw my heart and that's what you wanted first.\"\n\n\"It is.\" I said softly, feeling myself getting a little misty.\n\n\"And same for you Jamie, you're a great looking guy, but what got me was your heart. You're a guy whose done all the right things and just not gotten the breaks. And the way you cared for your Aunt, and how you still do, and how it hurts you to see her that way, and you tell her things are great. Jamie that's what I fell for; your heart. Like I said what we have is not what we are.\"\n\nPutting her hand on my face she continued softly. \"It's not about where you live either. Home is where the heart is Jamie, and that means you belong right here with me, in my heart.\"\n\n\"I...\" I swallowed hard to prevent choking up. \"You really want to me to be with you? You feel that way? I...\"\n\n\"Jamie, I love you.\" Paula said softly. \"I know it's soon, but I know it where it counts. Unless you're not sure.\"\n\n\"No I...\" I put my head down and whispered, \"I love you too.\"\n\nPaula smiled and leaning forward put her arms around me. I hugged her back, feeling tears on my cheek, but for the first time in months these weren't tears of frustration. I could feel her crying as well and squeezed her tighter. We stayed there in silence, until an idea came to me.\n\n\"Paula?\"\n\n\"What is it Jamie?\"\n\n\"Would.... Tomorrow would you like to meet Aunt Marie?\"\n\nPulling away from me, Paula smiled.\n\n\"Jamie, I would love to meet the woman who made you the man you are, I really would.\"\n\n\"You sure?\" I asked. \"Because you don't have to. I just...\"\n\n\"Jamie,\" Paula cut in. \"I don't\"\n\n\"I know,\" I laughed. \"You don't have to do anything.\"\n\n\"No.\" she shook her head. \"That is not true. I have to do this.\"\n\nLeaning forward, she kissed me softly and pressing her lips whispered,\n\n\"Welcome home, honey.\"\n\n*\n\nAuthor's note: Well I hope you enjoyed my attempt at a little romance, and as I always say the only payment we authors receive here is through votes and comments. So good bad or indifferent let me know what you think. And remember this is a contest so please do take the time to vote. I also ask you to take the time to grab hold of your special someone and tell them you love them. Not because Valentine's is around the corner, but because you love them every day, and in every way. As always, thanks for reading. Lovecraft68"
    ],
    "authorname": "lovecraft68",
    "tags": [
        "romance",
        "cougar sex",
        "older woman",
        "oral sex",
        "blowjob",
        "brunette",
        "milf sex",
        "younger man"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/home-is-where-the-heart-is-1"
}