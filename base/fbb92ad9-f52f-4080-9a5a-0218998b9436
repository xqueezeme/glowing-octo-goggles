{
    "title": "Arcanum - Of Steamwork and Magic Ch. 22",
    "pages": [
        "April 28<sup>th</sup>, 1886 \n\n\"And so, according to Nasrudin himself, Saint Mannox was tending to the wards at the Ring when Nasrudin emerged from his regenerative bubble. Nasrudin seemed to think Mannox was nothing more than an overeager, overzealous, pompous ass.\" I shrugged as I looked across the table at Hadrian and Wilhelm. The two Panarii had been transfixed with utter shock from the moment I began my narrative to the very end. I, meanwhile, had given them the entire story of my adventures to the island of Thanatos whilst also putting away a sumptuous meal: Steak and kidney pie, stuffed potato skins with at least three kinds of cheese, all with two full pots of coffee that I had drunk down as quick as winking. Considering the meals of hardtack and grog that I and my companions had been subsisting on, this was more than adequate to restore me to a sense of civility and some measure of politeness. \n\nI wiped my lips and made sure to pick some crumbs from my mustache before saying: \"But he made no mention of the good Mannox ascending to heaven on a pillar of flames.\" \n\n\"This...is rather troubling,\" Wilhelm said. \n\n\"Troubling!?\" Hadrian spluttered. \"Our god walks this world - our prophecy is entirely made of lies, the founder of our order was murdered and stuffed into Nasrudin's coffin for reasons known only to the direst of villains, and the best you can muster is troubling!?\" \n\n\"Very troubling,\" Wilhelm said, frowning as he rummaged about in his books. \"But I have taken some advantage of the, ah, the opening provided by Dr. Cog.\" By which he meant the whole I and Sally Mead Mug had knocked into the side of the false tomb of Nasrudin with sledgehammers and crowbars. \"And I found that there was something that our esteemed colleague missed!\" He drew out a small paper, which he had sketched upon. It looked rather like a charcoal rubbing, and it showed what seemed at first to be an incomprehensible set of lines and a single hatchmark. \"This was scratched into the tomb's lid.\" \n\n\"By whom?\" Hadrian asked. Then his face paled. \"Good gods!\" \n\nMy own heart lurched and I clasped my hand to my breast. \"No!\" \n\n\"Yes...\" Wilhelm's face was grave. \"I believe that Mannox lived yet when he was interred - examining his body with Hadrian proved that he had been stabbed in the side by a notched dagger - likely one that contained a poison. Mayhap his villainous attackers believed him to be dead or dying.\" \n\n\"Or they were evil,\" I said, quietly. \"And delighted in the suffering of a human...\" I stood up, then grabbed the charcoal rubbing - my mind seeing a patter almost before I had realized it. As if a deep voice spoke to me, I flipped through my atlas and journal, then set down the map of Arcanum, holding the charcoal rubbing above it. There was a difference in scale and crudity, yes, but the gross outlines of the Arlander coastline was clear. And if the hatchmark was there...then... \n\n\"Good heavens! There's a cave system right in those foothills,\" Hadrian exclaimed. \n\n\"Surely, Mannox marked it for a reason, with his dying act,\" I said. \"Let us make haste.\" \n\nThe two older gentleman balked. Wilhelm spoke quietly. \"There has been an edict, Dr. Cog,\" he said. \"The High Priest of the Temple has stated that the council is not entirely certain you are in fact the Living One.\" \n\n\"Well, I'm bloody well not,\" I said, shaking my head. \n\nHadrian chuckled, softly, but with no little warmth. He stood to his diminuative height and patted my hip in a gentle, fatherly sort of way - that being the closest that a gnome could get to patting a standing half-orc on the shoulder. \"Dr. Cog, I believe in the short month since you arrived, you have done more than five centuries of Panarii historians and archaeologists to discern the truth of our order. Living One or no, you have done a great service.\" His face grew grim. \"And the High Priest wants to see you discredited.\" \n\nI shook my head. \"But I thought that Alexander seemed a likely, good fellow. And he gave no sign-\" \n\n\"Oh, no, no, no!\" Wilhelm said, shaking his head. \"Alexander, may Nasrudin bless his soul, is t he First Acolyte. Not the high priest.\" \n\nMy brow furrowed. \"I...believe I am quite lost - the difference escapes me. How are the roles differentiated?\" \n\n\"The Acolyte is the general leader of the Panarii religion, and when it comes time for a crusade - not that one has ever been declared mind - they lead it. But the High Priest makes the more...theological decisions of the church. This position was created when Saint Mannox's supposed ascension to heaven, by K'an Hua...\" He nodded. \n\n\"The self same elf that 'witnessed' Mannox's ascension?\" I asked, frowning. \"And...in fact...\" I rubbed my chin. A suspicion came to mine - but it was entirely nominative in nature. And one I'd need to check with Raven, before I made any sweeping claims. I stood, nodding. \"I'll investigate these caves alone, then. No need for either of you to risk censure from the High Priest. All that I ask is you put up with my companions - I believe that it's better I raise as little suspicion as possible...\" I smirked. \n\n\"They will still be aware you are leaving, though!\" Hadrian said. \n\n\"Oh, no,\" I said. \"I believe I have the means by which I can easily camouflage my egress.\" \n\n*** \n\nDressed in Panarii robes, Raven and I walked steadily away from the dormitories and cell rooms that the Panarii used to house us visitors. Behind us, the enthusiastic moaning and gasping of Sally - sounding remarkably similar to the actual noises she made while engaged in lovemaking, despite being entirely pantomimed - echoed from through even the thick wooden door of the room we had left her in. Raven shot me an amused little smirk, while I kept my head ducked low and my hands clasped with my sleeves, so that my green skin could not be spied from a distance. \n\n\"I do believe Sally may be enjoying this more than an actual session on Mt. Craig,\" she murmured. \n\nI nearly snapped my head up. \"Good heavens, is that what she calls it?\" \n\nRaven giggled a musical, elven giggle. \"Oh, no. I believe I suggested the name, and it was adopted heartily.\" \n\nI scoffed as aggressively as I could whilst still maintaining my fiction of being a Panarri priest. Only once we were beyond sight of the temple grounds did we cast aside our robes and set out - me in my suit, Raven in her leather with her bow and arrow already drawn. As we walked, I asked the question that had sprung to mind during the conference with Hadrian and Wilhelm: \"Is K'an Hua a dark elf name?\" \n\nHer head snapped to look at me. \"Indeed,\" she said, quietly. \"A dark name for a dark people. According to my spies and my information, K'an Hua is the lover of M'in Gorand.\" She paused. \"Was.\" \n\nI nodded. \"He was operating here almost eight centuries before,\" I said. \n\n\"Oh, no,\" Raven said. \"Was because your Virginia put a sword through M'in Gorand's heart.\" \n\n\"K'an Hua is alive?\" I asked. \n\n\"According to what I knew most recently, yes,\" Raven said, shrugging. \"He was a young follower of Arronax - only seventy five years of age during the first battle, which is why he survived it: His youth kept him off the field.\" She shrugged. \"After that, records become indistinct, until he was once more spotted emerging from the areas around T'Sen Ang by my spies in the year 1821.\" \n\nI shook my head, stunned. \"Of course, elven longevity. But your spies...what spies are these?\" \n\nRaven smiled. She lifted her hand and several birds alighted on her fingers. They chirruped and squeaked and Raven chuckled, softly. \"A young maiden is pleasuring herself beside a river, no more than five miles off.\" She shook her head. \"These birds are in mating heat and are bubbling over to tattle on everyone else. Go, shoo.\" She shook her arm and the birds flapped off. I noticed this time that there was a pale green aura around her fingers - she had used some kind of Nature magick. Fascinating. I chuckled. \n\n\"A year before, I'd have made my way right for that river,\" I said. \n\nRaven pouted at me - clearly thinking of how I had turned her down on the way to Caladon. I had to admit, the knowledge that Virginia would not be raised from the dead until we reached the distant city of Tulla and that the long, lonely time would be spent in self imposed celibacy, rather galling. I smirked slightly, then set out all the faster. Each step got me closer, did it not? In the end, it took us until the evening and using Raven's spies to finally find the cave we were looking for. It was marked, as I had thought it would be, by a simple M. Not one for much ornamentation. Within the cave, we found a rucksack that glowed with a pale gold-white magical field. Me merely touching it snapped the magick apart, and lo...there we had it. \n\nSaint Mannox's journal. \n\nI thumbed through the archaic script to the light of Raven's cantrip, frowning. The journal was written from the year of 1108 to 1109, and used the preunification Caladonian months, making the exact dating rather difficult to quite ascertain. However, the first passage of note that I found made mention of Mannox 'securing the wards' - meaning my theory that the Panarii had been created to keep the crack between worlds closed up tight was quite true. But as the month of Darkfall turned to the month of New Sun, Mannox wrote of how a new Panarii had arrived: K'an Hua. \n\nHe wrote of how K'an Hua had insinuated into the church theological discussion that Nasrudin was merely a metaphorical figure - not truly a corporeal being who had once walked the world of Arcanum, and that the wards were merely foolish ritual that should be abandoned. Amazing! In any other situation, with any other religion, I might have argued K'an Hua's very point - but this religion was, in a sense, true. Mannox and K'an Hua nearly came to blows. Then...the passage that detailed Mannox's meeting with Nasrudin from Mannox's perspective. My lips quirked as the old mystic declared \"the elf struck me as most irritable and utterly irascible - but only after realizing he was Nasrudin did I realize that he was testing my forbearance, patience and piety.\" \n\nI chuckled. Then, at last, I came to the final passage: Elvish assassins had struck at Mannox. He slew them but knew he needed to return to the temple, to confront K'an Hua and reveal the truth. His last sentence made my smile fade: \"I must return to the temple, to bring the truth to the Panarii. I will declare what I know for all to hear. I will leave my writings safely concealed here, along with my ceremonial sword, as I feel my death is at hand. My soul I now commit to the hands of Nasrudin.\" \n\nI closed the book. \"So...\" I said, quietly. \"The Panarii were not foolish and mistaken at all.\" \n\n\"That is the case,\" Raven said, her voice soft. \"What shall we do about it?\" \n\n\"Why...\" I stood, then picked up the sword. It was an exceptionally balanced blade, protected by the magicks that Mannox had cast upon it. But engraved on the hilt was a simple M. \"I believe I shall return this to its rightful owner.\" \n\n\"Of course, Living One,\" Raven said, her lips quirked in a lilting smile. \n\nI frowned at her. But she did not cease her smile. And as we headed back to the temple, I found myself wrestling with that question. How could I be the Living One, if Nasrudin lived yet? And yet, I could not help but feel as if the weight of the role remained draped upon my shoulders. No! No! I shook my head, as if to cast off an annoying fly. This role was simply to act as honor and righteousness decreed. Was it to be bound by prophecy to simply do what was right? I had to believe otherwise, else all good deeds would be utterly irrelevant, rendered nothing more than an authored conclusion, penned by some hand mightier than my own. My right hand rubbed against my left, and I traced the lines of my remaining charged ring with my finger. I crafted my own fate, damn it all. \n\nWe returned to the Temple grounds proper and I found the First Acolyte sitting out in the front lawn, his knees crossed underneath him, his head bowed down as he meditated. I coughed, as politely as I could, and he looked up at me, smiling slightly. \"Greetings, Living One,\" he said, his voice amused. \"How may I assist you today?\" \n\n\"It is how I may assist you, Alexander,\" I said, my voice soft. I knelt down, then handed him the journal of Saint Mannox. Alexander read it, his face a remarkable production to watch. First, his brow furrowed. Then his eyes narrowed. Then widened. Then his lips settled into a thin, fierce line. He closed the book, then set the book down, and said, quietly. \"I must have words with the high priest.\" He stood, and I stood with him, drawing out the sword of his ancestor from my pack. I set it in his palms. Now, the only emotion that showed on the First Acolyte's face was pure gratitude. He closed his grip on the hilt, tightening so fiercely that his weather tanned knuckles turned white. \"Come with me,\" he said, his voice husky as he turned, robes a swirling. We strode forward, Raven, him and me - only to be interrupted in our movements by a cry from the dormatories: Maggie, her voice not concealed by her normal false male tones. \n\n\"What the bloody hell are you doing to Virginia!?\" \n\nNeedless to say, I was sprinting forward without a second thought, and Alexander matched me, pace for pace. We came to the door leading into the cloister where the Panarii were keeping Virginia's body in state. The machines hissed and warbled softly, but the room itself was bathed in a hideous red glow. A man in white robes trimmed in gold stood above her, holding both hands above his head, red lightning streaking from his fingertips to plunge into Virginia's chest, causing her to writhe and twitch as if living. The energy throbbed beneath her skin like maggots. I reached for my pistol, but Alexander moved faster than I could have imagined. He leaped over Virginia's body, clearing her legs with a fluttering of robes, landed, and transfixed the robed man through the heart. \n\nThe man - a portly human - cried out and fell backwards. He clutched at the blade, his eyes wide. He looked up at the two of us. And yet, horribly, he began to laugh. \"Hah...hah...revenge...\" He grinned. \"For my Min...\" His eyes unfocused and his head slumped to the side. \n\nI drew my pistol, ready to shoot him several times more, if the need arose. But confusion rocked me: \"What the devil did he mean by that? And what did he do to Virginia?\" \n\n\"That spell,\" Alexander said, his voice tight - showing not a sign of exertion, as if he sprinted nearly five hundred yards and struck a man dead every day. \"It was a black necromantic spell, one designed to hasten the rot and decay of a body, to make it unsuitable to raising by white necromancy.\" \n\nFear filled my heart and I spun and knelt beside Virginia - in time to see the red light shattering off her, like a vase dropped from a great height. I blinked slowly before letting out a laugh as deep and as loud as any I had ever uttered. I threw my head back and leaned against the wall, sliding my arm along my belly as I laughed and laughed some more. Alexander knelt beside Virginia, his brows furrowing as he looked her over. \"I don't understand - High Priest Tannor was the greatest mage I knew...\" \n\n\"But not great enough to overcome the technological fields emitted by Virginia's very body,\" I said, nodding. \"She's filled with enough chemicals and natural electric charge to be the next best thing to a steam engine.\" \n\nAlexander blinked. Then he laughed. \"That explains why our morning rituals have been so balky of late!\" \n\n\"His face!\" Maggie - who had returned to the door, carrying the Harrower in her hand, explaining her absence - pointed. We both turned and saw High Priest Tannor's face rippling, flowing, and changing. His cheeks became sallow and pinched, his ears lengthened to two elven points, and his eyes - dead as they were - gained a harsh, cruel light to them. I grabbed for my pistol, ready for him to spring back to life...but no. He was dead as a doornail. \n\n\"K'an Hua,\" I said. \"I presume.\" \n\nAlexander nodded. \"My ancestor is avenged,\" he said, quietly. \"And the cult of Arronax is finally defeated. Arcanum is safe.\" \n\nI frowned. I had not the heart to tell him that the cult had already succeeded - that Arronax's return to Arcanum was inevitable unless I stopped him. But my hand dropped to Virginia's seemingly warm and lively shoulder. I squeezed gently and knew that we would do it. We could stop Arronax and his mad plans for domination. I looked to Alexander, smiling to him. \"I believe my job here is done.\" \n\n\"Verily,\" Alexander said, his voice as serious and old fashioned as Mannox in that instant. Then he smiled at me, broadly. \"Where will you go now, Living One?\" \n\n\"First?\" I said. \"To Ashbury - and from there, we shall march to the Vendigroth Wastes, to find Tulla herself.\" \n\nAlexander bowed his head. \"I wish you luck, Living One.\" He clasped my hand and we shook. \n\n*** \n\nMay 10<sup>th</sup>, 1886 \n\nLeaving Caladon in less of a tearing hurry meant that we not only had time to hire a crew for Captain Teach, but to also get rewarded for our efforts. Hadrian refused to allow us out of the temple without foisting upon us the three relics he had protected for his whole life. The finger bone of Saint Mannox, upon magick inspection, proved to hold a magical charge and quite a bit of energies. I swore to give it to Virginia when she was returned to me. The Eye of Kraka-Tur seemed, despite all examinations both magick and scientific, to be nothing more than a gemstone of black make. But I kept it - if Arronax had survived his centuries in the Void, maybe Kraka-Tur had done so as well, and thus, the eye could come in handy. \n\nThe final item though was the key made of glass. Examining it brought great cheer to Maggie - for the symbol I had found so familiar on the hilt was, indeed, the same symbol as that on the Harrower. Holding it, we agreed that it was surely to be of use when we tried to enter into the last home of the Iron Clan. Though Maggie attempted to hold her dwarven reserve and caution in hand, I could see hope gleaming in her eye. Her long sought after goal of having a clan to call her home might very well end up being the case - and to be completed in such a way, with her not only being a member of a clan, but a member of the most mysterious, most astounding clan that the dwarven race had ever produced? It would be like a dream come true. \n\nThe actual trip along the coastline of Arcanum to the port city of Ashbury felt almost like a vacation - and with Raven's magicks working with the weather rather than against it, our ship nearly flew, leaving the crew that we had hired in good cheer, despite being overseen by Sally - who proved herself to be quite an able boatswain when she wished to be. \n\nAfter we arrived at Ashbury, we once more applied ourselves liberally to Gilbert Bates' endless checkbook. I also took a moment to check in with Cynthia Boggs, the woman we had rescued from the Isle of Despair. She had found a profession in Ashbury's finest tavern, The Meager Draught. Despite its name, she seemed quite happy, and in a family way. When I inquired as to who had managed to get her hand in marriage, she played coy, leaving me somewhat uncertain as to the providence of the child. But she played even more coy when I pressed and, lacking a polite way to continue the conversation, I bid her good fortune and good luck. Afterwards, we supplied ourselves and set out on foot for the Vendigroth Wastes. \n\nTransporting the body of Virginia in state proved easier than expected due to the simple expediency of purchasing a stagecoach and four horses to pull it. This is why we made such good time and arrived at the demarcation between the Moribhan Plains and Vendigroth Wastes after a mere five days of travel. I saw the Wastes from a distance, but I did not believe what my eyes were telling me until our horses had drawn to a stop at a large, rusted metal bridge that spanned the small river of brackish, gray water that separated the deserts of the Moribhan. Once the horses came to a snuffling, worried stop, each of stood there and looked outwards, in the same shared disbelief. ",
        "With a name such as 'the Wastes' I had pictured something akin to a desert. But deserts contained some measure of life and a sense of the natural. There were cacti and scorpions, hawks and vultures. But the Wastes that stretched beyond us were utterly wrong. Greenish cracks spread along the ground, still glowing faintly with an eldrich light, while the ground itself was a mixture of black and gray and dull red. Wisps of white light danced on the air like dust devils, and the water that flowed along the boarder was silty and thick with gray. The air felt wrong. \n\n\"Good gods,\" I whispered. \n\n\"Indeed,\" Raven said, her voice solemn. \n\n\"Arronax did this?\" Maggie asked, slowly. \n\n\"By himself?\" Gillian whispered. \n\n\"Well,\" I said. \"It was during the Age of Legends...\" Then my back tightened - a shape was emerging from the mists. I drew my pistol reflexively - and only relaxed once the shape resolved into the image of a donkey dragging a cart and a halfling seated upon the cart's front. He clicked the reigns and the donkey continued to clip and clop forward. If it was aware that it was striding through a blasted, unnatural wasteland, it gave no sign of it. The halfling himself was dressed with a cloth gas mask and goggles on his face, and he lifted a gloved hand to wave at us. \n\n\"What ho!\" he said, his voice muffled. \"Heading in for salvage?\" \n\nI called back. \"No - well, of a sorts. We're seeking the city of Vendigroth.\" \n\n\"Oh.\" The mule came to a stop beside our wagon and the halfling tugged his gas mask off, allowing himself to breathe more easily. \"No. No. I pick out of the ruin fields nearer to the river - mostly scrap and twisted wire. But I did find a rifle stock once.\" He chuckled. \"The City itself is a mother-load, but no one knows where it is, friend.\" \n\nI nodded, slightly. \"Then...have you seen the city of Tulla?\" \n\n\"Tulla? No,\" he said - dashing my hopes that this might be easy. \"I have seen this strange walled place - built into the only part of the Wastes that look halfway close to a real land, not this blasted place.\" He gestured out to the cracked, black landscape. \"From a hill, I could see it was full of robed types and magick critters.\" \n\n\"That's Tulla!\" I exclaimed. \n\n\"Is it?\" the halfling asked. \"Well, hand your map over here, I can mark it, I marked it dow in my journal!\" \n\n\"My thanks!\" I tossed him my atlas. After marking it, the halfling tossed it back, then clicked his teeth. \"And mind the spiders, out there.\" \n\n\"Are they big?\" I asked, my voice growing concerned as the cart rattled away. \n\n\"No, they're armed.\" \n\nAnd with that, he began to whistle a bawdy ditty - leaving me feeling deeply concerned. \n\n*** \n\nMay, 26<sup>th</sup>, 1886 \n\nIn the end, we were not troubled by the beasts of the Wastes. Our stagecoach made its careful way across the blasted landscape, guided by careful observation and my own sense of caution, and while we did see strange shapes in the mists when we set a watch, it seemed that having a group of hardy adventurers, armed with bow, magic weapon, and pistols was more than enough to convince those shapes to keep their distance. In fact, it was quite vexing to see hints of strange phenotypes and to see tracks that were clearly left by massive, eight legged entities...and yet to never get more than the vaguest image of what it was that sometimes stalked us. \n\nThe closest that we came to any idea of what it was that watched our camps in the night came as we emerged from the harsh, blackened landscapes of the Wastes proper and into a more classic scrub-land that seemed to hug to the northern coast of the Vendigroth Wastes: Once, during a glance back over my shoulder, I saw a figure upon a distant rocky outcropping. It looked low slung to the ground, with a wide set of legs - like a spider of immense size - but I could see a hint of a humanoid torso, thrusting from the spiderish body. \n\nBut such things did not follow us as we came closer and closer to Tulla proper. The City of Mages was quite a sight from a distance: A massive, sandstone wall ringing around an outcropping of cliffs. The actual buildings of the city were concealed entirely by the wall, save for a single massive temple complex that looked carved into the side of the cliff itself - ornate pillars keeping a huge roof open, promising an even deeper sprawl of tunnels and corridors within the cliff itself. \n\nThe wall, though, lacked a gate entirely. Instead, where there would logically be a gate, there was instead two huge pillars, ornately carved and covered with runic inscriptions. Standing before them in pale blue robes, was an elven man who watched our stagecoach approach with a solemn expression. I waved to him, then scrambled down into the cargo of the coach proper. I dragged Virginia's container out and began to detach the machines, the pumps, and remove the electric ring from her finger. I knew that technological fields would persist around her body for some time - but I hoped that by the time we came to a mage who could restore her to life, they would fade utterly. The chemicals would take longer to fully seep away - meaning that she would begin to rot in a week. But if we had not found a mage in the city of Tulla within the day to raise Virginia from the dead...well... \n\nI shook my head as Sally, effortlessly, picked the entire container up and held it on her shoulder. Then, together, we walked towards the gate, Dogmeat padding along at my side - he had never put a single paw off the stagecoach for the entire trip, and was practically prancing for joy to be out of the coach and on natural ground. Coming to the elf, I bowed my head. \n\n\"Greetings, Dr. Cog,\" the elf said. \"Jorian told me to expect you. You may enter the gates and go to the temple.\" \n\nI drew myself up, my brow furrowing. \"Jorian? Who is this Jorian?\" \n\nThe elf looked at me placidly. \"You may enter the gate and go to the temple,\" he said, his voice cool. Modulated. I glanced at Raven, who pursed her lips, then leaned in close and whispered to me. \n\n\"The city of Tulla trains their mages to be controlled - but not dishonest.\" \n\nI sighed. My pocket-watch, without even me needing to draw it out, had already seized up. I shuddered to imagine what it would be like in the city itself for any technological devices. But...I did take heart in the fact that my electrical rings were still working properly. Maybe their proximity to my body kept them functioning, as I was extremely versed in the technological arts? Which only added to my trepidation at stepping through the portal - but step through I did. And to my alarm, a purple light flared around my body, before fading, and I found myself standing within Tulla herself. \n\nTulla, the city, was far from Tarant or Caladon in terms of size. In fact, I would barely say that there were more than fifty buildings in it, and a scant few people on the streets. They were of every race, and every one wore robes of varying colors. They spoke to one another in soft tones, though some sat underneath palm trees, drinking from simple earthenware cups while they gestured and spoke. Many of them cast spells and cantrips, shrouding the air with shimmering illusions to illustrate one point or another in the field of the magick arts. But the city was not merely populated by the civilized races. Two massive, dragon-like beasts sat curled up on pedestals, their scaled hides heaving as they breathed slowly, warming themselves under the fierce sun that hung in the cloudless sky. Their slitted eyes opened with a languid movement as we walked by them, and while they watched us, they made no move to attack. \n\nThe center of the city was the temple - and before the temple rested a large, circular, reflective pool of water. It shimmered and rippled in the sunlight, but what drew my eye was the collection of five symbols surrounding it: A crossed circle, a spiral shape, a humanoid figure drawn with as few lines as possible, a single star, and a strange three bladed, curved device that reminded me somewhat of the exotic throwing weapons of the ancient Kree - the glaive. Each symbol was carved into a stone plate which I swore looked as if it was designed to be depressed. I skirted them just to be safe and we came into the blessed coolness of the temple itself - the day was blistering hot outside. \n\nThe interior of the temple complex fanned outwards in a circular pattern - corridors leading deeper within, each one seeming to go off in its own winding pattern. But the central corridor that we entered by continued past the circular atrium, leading towards a set of stairs that clearly ascended deeper into the temple itself. I started that way, my footsteps and the footsteps of my companions echoing loudly in the large, empty space. More of those dragon-like creatures were perched here and there, and their cold reptilian eyes kept following us as we walked down the corridor. I paused only to note that the left wall of the corridor was dominated by a massive and beautiful mural. \n\nThe mural depicted a bearded human man, gesturing to the heavens as if to illustrate some great point. He stood between a wild desert to the left and what was clearly the city of Tulla on the right. Ringing around the mural, though, were the five symbols we had seen around the mirror pool. But here, each symbol had four more symbols about them save for the glaive-like symbol. There were too many to count and, honestly, it was all of secondary importance. \n\nI continued forward. \n\nThe stairs led to a massive doorway. Leaning against the wall beside the door, bouncing a small, leather ball against the wall, was a tall, gaunt looking human. His smile was wry and his hair exploded around his head in a frizzy wave. He bounced the ball once more, catching it and concealing the ball in the sleeves of his robes before he looked at us. \"You,\" he said, pointing a bony finger at me. \"Are here to see Simeon Tor.\" \n\n\"I...\" I blinked. \"I beg your pardon?\" \n\n\"But first,\" he said. \"You must do one thing for old Jorian.\" \n\nMy brow furrowed. \"Ah. You are the mysterious Jorian.\" \n\n\"No I'm not,\" he said, looking right at me. \n\n\"You're not Jorian?\" I asked, frowning. \n\n\"No,\" he said. \"I'm Jorian. I'm just not the mysterious Jorian. Now. Before you can speak to Simeon Tor-\" \n\n\"I don't even know who that is!\" I snapped. \"I'm here to speak to your leader.\" \n\n\"Simeon Tor!\" Jorian laughed. \"Yes. But first, you must do something for me.\" \n\n\"What?!\" I asked, flinging out my arms. \n\n\"You must look at the mural that you passed on the way here,\" Jorian said, cheerfully. \n\n\"I already did,\" I said. \n\n\"You have to to it...again.\" Jorian said, leaning forward. \n\nThe urge to brain this man had reached nearly overpowering. Instead, I turned, stalked down the stairs, glared at the mural for five seconds, then stalked back up the stairs. Jorian bowed to me, grabbing onto the huge door. He pushed it inwards and it swung with an ease that belied its size and Jorian's age. Then he walked past the lot of us, leaving Raven shaking her head bemusedly, while Gillian gave her most aristocratic sniff. \"Mages.\" She said. Normally, I did not go in for the Tarantian view of magick as nothing but silliness - but I could see that Jorian would test this every time I spoke to him. I tried to calm myself as I walked through the doors. And once more, Tulla provided a vista that exceeded anything I had imagined. \n\nThe room beyond was large and nearly circular and was dominated by six archways, each one the height of a small building, and wide enough that our entire party could walk through shoulder to shoulder. Each one looked down upon a different city. I could clearly see the statute of the Stillwater Giant in the town of Stillwater, the factories of Mr. Bates in Tarant, the bustling port of Black Root, the castle of Caladon, the crumbling echo of that castle in Durnholm, and the terraces of Ashbury. Standing in the center of the half-circle of doorways was an older man who positively radiated raw, crackling power. Being near him felt like I was being repulsed by an exceptionally powerful magnet. \n\n\"Simeon Tor?\" I asked, quietly - and even using my soft voice, it still echoed in this room. \"I am here to speak of two things: The resurrection of the priestess Virginia and the location of Vendigroth City to find the Vendigroth Device to stop Arronax from returning to Arcanum and destroying the world.\" \n\nHe smiled, simply. \"You must first, of course, speak to Bilko Gavin.\" \n\n\"Does...he now about Vendigroth?\" I asked. \n\nSimeon Tor shook his head. \"No. Bilko Gavin is our finest white necromancer. It is of the upmost importance to return your companion to the world of the living.\" \n\nMy heart hammered. I tried to control my breathing. \"S-Sir, I...yes, that would be nice, but Arronax-\" But before I had even finished the word, Simeon Tor turned back to the windows. He seemed intent on ignoring me. I felt a wave of emotions sweep through me. It was hard to breathe proper. I had been so focused upon this moment - to have it suddenly become the now was akin to being cast off the side of a hot air balloon and learning you could suddenly fly. I smiled weakly as Simeon Tor spoke once more. \n\n\"You will find him in the center. To the left.\" \n\nBilko Gavin, as it transpired, was a gnome with a jovial, cheerful, and disarmingly open disposition, who was delighted to see me. \"Oh, it is always good to see a challenge,\" he said as Sally grunted and set down Virginia's casket. \"People so rarely die against their will here in Tulla, meaning that I rarely have call to do this, you see.\" He rubbed his palms together. \"And you are fortunate indeed that we are so far off the beaten path - why, did you know, I once was hired at great expense to heal a noble youth, and we were but two hundred miles closer to Tarant, and merely trying to cast nearly killed me.\" He chuckled. \"Now! ...oh my!\" he said, looking at Virginia. \"She died today? Quite a bit of luck, no?\" \n\n\"No,\" I said, my voice horse. I could hardly believe this. \"I preserved her body via some technological means.\" \n\n\"Remarkable!\" He exclaimed. \"This may be a first in Arcanum's history - technology and magick working together to save the life of this...Virginia, you said?\" \n\nI nodded, mutely. \n\nFrom there, Gavin got to work and I was cheered to see his industry. His acolytes and assistants worked to clear out a ritual space, purifying it with magick and candles of incense, while Gavin himself cast spells upon Virginia, proclaiming that her body was not overly suffused with technological fields, nor black necromantic energies. The only painful moment was when he placed me a good ten yards away from the ritual before declaring himself satisfied - though after some preliminary casts, he then directed Raven to stand before me. It seemed her sanding there shielded my technological nature even more. Raven stood solemnly, her hands clasped before her, while Gavin, having completed his preparation, clapped his hands and called out: \"Lets do this, why not?\" \n\nNot what one expected to hear before the casting of legendary magicks, but I could barely comprehend words at this moment. My heart hammered as Gavin began to incant. His hands moved - forming pass after pass, leaving behind pale blue-white symbols in the air. Energies filled the room - a wreathing mass of white energy growing into a shell that began to reach down from the ceiling to the floor, shrouding the view. Lightning seemed to spider in from the edges of the shell, striking Virginia's body. And then, at the ultimate moment, Gavin cried out her name: \"Virginia!\" \n\nAnd the sphere snapped apart and a glowing portal appeared in the air above her. \n\n\"Her soul will return through that,\" Raven said, her voice very soft. \n\nThe moment held - an eternity of agonized waiting. And then the moment snapped. The portal shut - and the magick faded immediately from the room. The acolytes murmured softly - while Gavin shook his head, slowly. \"Bugger...\" His voice was soft. \"Bugger bugger, I was afraid of this...\" He shook his head. \n\n\"What happened?\" I asked. \"Was it me? I can go further!\" \n\n\"No, no...\" He said, his hands brushing along his sleeves. \"The portal would never have opened if it had not worked. Her soul does not wish to return. Only those that do can.\" He said. \n\nA deep, quiet silence fell upon the room. Slowly, the priests walked away. Gavin left, patting my hand gently - a gesture of cold comfort. Raven looked to me - but I had eyes only for Virginia's body. I walked towards her, slowly, my feet almost dragging on the ground, before kneeling beside her. I took her hand, ducking my head forward. I spoke, softly. \"Virginia...wherever it is that your spirit has gone, I want you to know...\" I paused. \"I do not care if it takes me the rest of my life. I do not care if I must contract every scientist in the entirety of Arcanum to work on this singular task...I will learn how to tear open a hole between our world and the next. And I will find you. And I will drag you back here...because I love you more than life itself.\" \n\nI kissed her forehead. \n\nAnd Virginia's eyes flashed open. Her back arched and she gasped in a massive, dragging breath. Her back fell back to the table and I heard a similar gasp from every priest in the room and Gavin himself cried out, his voice echoing off the walls: \"Good gods!\" \n\nVirginia blinked, slowly, then grinned weakly at me. \"I just needed to find my way home, sir,\" she said, cupping my cheek. Then she dragged me forward and kissed me. Fiercely. Her tongue filled my mouth and swirled against my own and I crawled upon the plinth she had been laid on. Raven made a tiny clicking noise - and then I heard the soft sound of shooing in the air, the rasp of feet, and then all thoughts of the others was lost as Virginia's hand caressed along my chest, squeezing my shoulders. She pushed my shirt off with a wild eagerness, while I tugged open the robes that she had been dressed in, feeling her skin - it was cold, at first, but growing more and more warm with very moment as blood flowed in her veins. Then she was drawing back, to breathe softly. \n\n\"Resh,\" she whispered, looking into my eyes as I felt my throbbing, achingly eager erection press against her thigh as she lay beneath me. Looking into Virginia's eyes, I could see a subtle difference - one that made a chill run down my spine. For just a moment, I could see a...curious detachment. A calmness that was deeper and more profound than anything a mortal woman should show. But then her eyes shifted a fraction and that calmness became serenity, and I could see Virginia's warmth filling whatever hollow had been left behind by her time in death. I opened my mouth to say her name - to speak it without the pang of sorrow. But before my lips could form the word, her finger pressed to mine. \"Resh...\" Her voice was soft - and fear gnawed at my gut. \n\nBut what she said cut that knot of fear, as swiftly as her sword. \"No more fake names. No more falsehoods.\" Her eyes were gentle. \"I ran from you. From this. Because I didn't believe I deserved it.\" She shook her head. \"But I realize now...we...have this one life, Resh. All I can do is work to deserve it...\" She smiled, wryly. \"But I have to do it as myself. Not as someone else.\" \n\nHer voice was soft. \"My name...is Beatrice Brummund. But most people call me Bee.\" She grinned at me. \n\nAnd realization struck me - like a bell tolling. And I found myself laughing, rearing backwards and clapping my hand to my forehead. \"That bitch! That elven bitch!\" I cried out, in deep amusement. \"She said...she said I would never...with Virginia!\" He laughed. \"Because I would be with you, Bee!\" I beamed at her. \"Because I'd be with you.\" ",
        "Bee laughed. \"I have no idea what you're talking about Resh.\" Then, her grin grew far from serene. It grew fierce. \"Get your clothes off. Now.\" \n\nI practically tore my pants off in my haste, my knees rasping along the stone plinth that Bee wriggled on. She got herself out of her robes by wriggling, squirming, and realizing that she had no need of this nonsense. She then flashed with purple light and appeared above her robes, completely naked and so very beautiful. Her body body was as limber and perfect as she had been before - though as I looked her over, I saw that she reached down to her thick bush of pubic hair. Her voice was soft. \"I always hated this,\" she said, quietly. \"But the Panarii way encouraged one to be natural, to eschew vanity, and to welcome what is.\" \n\nHer finger flared and a thin blade of purple energy swept along her pubic region, teleporting her hair away, to who knows where. Bee's eyes glittered and her lips split into a wicked grin. \"Oops.\" \n\n\"Ah, how imprecise of you,\" I said, leaning forward. My lips kissed to her pale neck - she rolled her head back with the eager grace of a cat, exposing her neck to my lips and my tusks. I kissed along her chest, teasing a line between her breasts, nuzzling around her belly. I murmured between kisses, long pauses drawn between each word as I paused to lick and caress the flat plane of her belly. \"I will have to...mmm...of course, investigate...to ensure...\" I licked around her belly button with delicate, decadent slowness. \"Complete removal of the offending follicles...\" \n\n\"Oh, Dr. Craig...\" She crooned. \"You're so attentive.\" \n\nI grinned, cupping one of her knees, lifting her legs. The scent of her sex filled my nostrils and I had never imagined it could smell quite so divine. I licked at the hood of her clit, teasing it with my tongue, circling around and around and around while Bee squirmed and gasped, her head rolling to the side on the stone plinth. She arched her back and I drew my mouth back, murmuring against her thigh as I kissed her skin there. \"I thought you said no more deceptions or falsehoods.\" \n\nHer fingers threaded through my hair, squeezing. \"You earned that doctorate, Dr. Craig, and I am going to - ah Nasrudin.\" Her eyes screwed shut as her head guided my mouth back to her sex and I was more than pleased to delve into her pussy. I licked, crooked my tongue to tease and grind against her most sensitive places. It seemed being brought back to life had left Bee on a hair trigger, like a well balanced and expertly maintained dueling pistol. And, like a pistol, when she came, she fair ejaculated. Her back arched and her wails filled the room - utterly unrestrained, utterly unashamed. She moaned my name in the same way she called out the name of her god, even as her juices flooded my mouth and soaked my mustache and dripped from my chin. I drew my lips back only once her hips touched the plinth again - and only to drag her against me. She bucked herself against me, desperate to grind her dripping, achingly eager sex against my cock. \n\n\"Is it...ah...just me...\" she said around gasps, her hair pillowing around her head in a well-fucked halo. \"Or...mm...did you get bigger?\" \n\nI chuckled. I had never been harder than in this moment - and it took every iota of willpower I had to keep myself from simply slamming into her without a second thought. I took my time, though, rocking my hips in a slow, sawing motion, grinding every inch of my massive green cock against her sex. Bee mewled like a kitten, squirming and whining, and even pouting up at me. \"Come on, Resh. I've been dead for...days!\" \n\nI paused, then chuckled. \"Bee, it's...mm...been two months.\" \n\nBee's eyes widened and she managed to get her arms under her, thrusting herself to a sitting position - her face going almost slack as this movement ended up bumping her clit against the thick, engorged head of my cock. When she was able to speak again, she squeaked out: \"T-...Two months!?\" \n\n\"Maybe three,\" I admitted, panting and puffing - my cock throbbed. It wanted to cum, and I hadn't even slid into her welcoming depths. \n\n\"N-No wonder I needed to hear your voice to call me back...\" Her eyes went out of focus. \"T...The longer you're in that river, Resh. The deeper you sink. The more...\" She paused. \"Comfortable you get. I...I couldn't even see the silvery light there. It was getting darker and warmer and more peaceful, surrounded by all the other souls of the dead.\" Her voice had become almost monotone. \"And...when the light was at a sliver, when there was no me, just...the endless, peaceful quiet...I hear you. I heard you and I knew...I knew I...\" She shook her head. \"I started to swim. And then I was in your arms.\" \n\nHer eyes closed. Tears started to pour from her eyes. \"Never let me go, Resh!\" \n\nI threw my arms around her, drawing her close - and as I drew her close, I slid into her, almost without thinking of it. Bee let out a strangled cry, then bit down on my shoulder. Her tears tracked along my back, hot and salty, and she bit down harder, almost drawing blood. I couldn't bear to let her go - I held her and I slammed into her again and again and again. She rocked and shuddered and her velvety sex clenched upon me like a fist, trying to draw me into her womb. I squeezed her even closer, my own fingers leaving bruises on the firm curve of her rump. Bee finally released my shoulder, her mouth leaving behind purple dimples in my emerald green flesh. \n\nShe threw her head back, screaming. \"Oh Resh!\" \n\nI let out my own roar. \"Beatrice!\" I buried myself inside of her - my balls clenching. What felt like every sliver of my essence flowed from me to her, her sex welcoming it, filling her. She shuddered and then collapsed against me, panting and gasping and mewling quietly. I myself found speech completely beyond myself. I focused only on breathing, only on holding Bee. It felt as if the whole world was right once more. My palms caressed up and down her back, and I slowly tottered backwards, falling onto the plinth. It was shockingly comfortable, and Bee sprawled atop me, nuzzling my neck, licking slowly, kissing the place she had bitten. \n\n\"So,\" I murmured. \"Being alive worth it compared to the peace you mentioned?\" \n\nBee chuckled. \"Yes.\" \n\nI smiled, caressing her head. \"I...\" I paused. \"I also knew that you were named Beatrice Brummund. I tracked down your...\" I paused again. \"All of it.\" \n\nBee nodded, slowly. \"I was a different woman then. Cold. Pitiless. Cruel.\" Her finger drew a circle on my chest. \"I lived as a dead woman would - each day doing what I wanted, taking what I wanted, and not caring who I hurt.\" She spoke as if she was referring to another woman - and from everything I had seen, she was. \"My brother was different. He escaped that life - he got married. A proper job.\" She shook her head. \"I thought I didn't care...and then I gambled myself into debt. They threatened me. They hurt me.\" \n\nShe shrugged, touching several of the scars on her body that I had become so familiar with over our year together. \n\n\"But you cannot scare a dead woman.\" She shrugged. \"And so, they killed my brother. And I realized...I only played at being dead. I was so horrified, I was so...ashamed...\" She shook her head again. \"I fled. I fled and ended up on the front steps of the Panarii Temple - and then, Johanna found me. And then...\" She smiled. \"I found you.\" She shifted, rocking her hips. \"God if you didn't knock me up this time...\" \n\nMy eyes widened and my cock throbbed - and Bee grinned at me. \"What, you think I don't want your child?\" She purred. And it was really beginning to sink into me: Bee had abandoned her old shames. Her old worries. Her old concerns. And so, why not simply be honest? She knew we had this life, and she knew what came next. I chuckled, softly. \n\n'You...want my child?\" I murmured. \n\nShe grinned, slightly. \"I know, I should wait until afterwards...\" She started to rock herself - and my cock grew harder and harder within her sex. \"But...fuck it. I want your seed in me now. And I think...\" She closed her eyes. \"This time is the charm...\" \n\nBy the time we left the chambers, the candles had burned down to stubs - and I was more sore than I had ever been in my life. I walked like an old man, dressed in my suit though the thick scent of sweat and sex surrounded me. Bee wore her robes loosely around her naked body and strutted with the confidence of a queen. Together, we emerged from the ritual room to find two very red faced priests standing guard, clearly having been positioned there by Gavin. Bee managed to contain her giggles at their expressions until we had gone around the corner - and then up the stairs, to where Simeon Tor was waiting. \n\nSimeon smiled at us. \"It is so good to see you, Living One, Beatrice.\" He bowed his head. \"I am glad to see that you have returned to the world of the living.\" His eyes grew distant. \"I would ask you of the world beyond. But the code of our order forbid that knowledge.\" \n\n\"Why?\" Bee asked, cocking her head. \n\n\"We have learned the lesson of Kerghan the Terrible,\" Simeon said. \"To become too fascinated with what comes after can lead to treating this life as nothing more than a disposable sheath. And to do so, when your will can be worked directly upon the world, is...\" He paused. \"Disastrous.\" \n\n\"That is fair,\" I said, quietly, my arm sliding around Virginia's shoulders. \"Now. The Vendigroth Device?\" \n\n\"The what?\" Bee whispered. \n\n\"I'll explain later,\" I whispered back. \n\n\"Pelojian,\" Simeon Tor intoned. \"Pelojian is the only one who can assist you.\" \n\nI nodded. \"Where can we speak to him?\" \n\n\"How...how is the question,\" Simeon said, his voice growing distant, his eyes unfocused. \"Pelojian is dead. He died a thousand years before. Since his death, he has appeared above Pelojian's pool - the mirrored pool out before the temple. He floats there for an hour, then vanishes. And for those thousand years, none have coaxed him to speak with magick, with riddles, with trickery.\" He shook his head. \n\n\"Who is Pelojian?\" I asked. \n\n\"Oh, I know this one!\" Bee said, nodding. \"I've read of him - he founded Tulla, didn't he?\" \n\n\"That is correct, Beatrice,\" Simeon said, inclining his head. \"Though his exploits go far beyond founding Tulla. Pelojian was a poet. An artist. A clairvoyant beyond compare.\" He smiled, slightly. \"His poetry is the biggest tragedy of his life, though. It is said to be powerful and intimate and deeply, deeply moving.\" His head shook slowly, from side to side. \"But we only have records of it - references in other books. No actual poetry survived to this day.\" \n\n\"Damn,\" I said, quietly. \"I bet he would have spoken back to his verse.\" I chuckled. \"Poets love their own verse.\" \n\nSimeon shrugged. \"His art did survive.\" \n\n\"Where?\" Bee asked. \n\n\"Both of you passed it on the way here,\" Simeon said, softly, his eyes dancing with mild amusement. \"Though only one of you saw it. The mural on the wall - it is called the Mural of Enlightenment. It is said that meditating there before it grants a deeper insight.\" He shook his head. \"But no one who has meditated before it has gotten a word out of Pelojian.\" He sighed. \"But...you are the Living One. If anyone can decipher the mural, it would be you, no?\" \n\nI nodded. \"A riddle,\" I said, slowly. \"Sounds...fun, I suppose.\" \n\n\"You may stay here, of course,\" Simeon said. \"We will prepare rooms for you and your companions.\" \n\n\"My thanks,\" I said, bowing. Bee bowed as well. Together, we were escorted to a small home out under the baking sun. As we walked, I walked with my arm around Bee - and for a moment, I worried that the sight of a half-orc and a human in arms like this might draw some odd looks...but it seemed that Tulla had been separated from the mundane world long enough to escape such a prejudice. As we walked, though, I started to notice that there were more symbols scattered about on more plates. Seeing them, Bee clicked her tongue. \n\n\"Huh,\" she said, then pointed at the one before the house we had been given. \"That one is the symbol for the school of Conveyance.\" She grinned, fiercely. \"I bet you missed that talent.\" \n\n\"I definitely did!\" I said. \"And this is for leaving us in the Glimmering Forest without any way to leave but our own two feet.\" I reached down and slapped her rump, hard, making Bee squeak and jerk upwards. She rubbed her rump. \n\n\"Oh sir!\" She exclaimed. \n\nI shook my head and together we walked to the front door. Opening it, we found that the construction and material of the building had made it a few degrees cooler than the air outside, though it remained oppressive compared to what I preferred. I saw no sign of my other companions other than Dogmeat, who lounged beneath the central table. My brow furrowed, while Bee stretched her arms behind her back, popping her spine casually. The sound drew Dogmeat, and he bounded to her, barking excitedly. Bee laughed and petted him as I found that there was a small, simple kitchen, though it lacked many sharp knives. There were several adjoining rooms - and when I opened the first door, I found it led into a bedroom - but the room had been heavily modified. \n\nThe bed had been combined with another bed, creating a larger single bed, with blankets spread across both, and pillows collected around. Cantrips had been set up in the air, providing a warm, purple-white light to the room, modulated to not be too bright, not be too dark. And that light shone across an expanse of female flesh the like of which I had not seen in ages. Sally, her large breasts exposed, sprawled next to the smaller, stockier Maggie, who was blushing and had a single arm over her chest, her other hand cupped over her own sex. Gillian was spooned next to Raven, who lay in the center - her porcelain pale skin gleaming with a faint sheen of sweat. All of them were nude, and Raven sat up as I stood there, gaping at her. \n\nShe grinned. \"I suggested we congratulate you, Living One,\" she purred. \n\n\"I-I-\" I stammered. \n\nBee's hands pressed to my shoulders and she pushed me forward into the room, the door slamming shut behind me. I staggered into the room, laughing despite myself. As my shins caught up against the bed, Sally sat up, and dragged me forward, while Bee cast off her robes with a languid pleasure. I found myself falling in a space that Raven made between her and Maggie with a kind of squirming wriggle. Maggie, her cheeks beat red, caressed my chest, while Rave whispered into my ear, her voice hot and eager. \"An elf is a patient, careful hunter. She can wait for weeks, months, years...for what she wants.\" Her teeth nipped the edge of my ear and her hand dipped down as Gillian and Bee, working together, tugged my pants off. \"But a woman can only take so much teasing, Dr. Cog.\" \n\nHer fingers - delicate and soft as silk - closed around my cock, and my cock reared to life, growing harder and harder as Maggie's rougher hand cupped and caressed my balls. Maggie kissed my chest, nuzzling my muscle while Bee crawled onto the bed. She kissed her way along my shins, gently, so very gently, while Gillian crawled near my head, squirming across pillows, so she could lock her lips with mile. Her tongue plunged into my mouth as Bee's mouth enclosed my cockhead. She sucked on me, teasing my foreskin with her tongue, while Raven whimpered softly. \n\nBee drew back, panting, as I simply sprawled - unable to do much more than simply allow this wave of decadent pleasure wash over me. I laid back with my arms above my head, letting Gillian draw away from my face - and that allowed me to see Bee looking directly into Raven's eyes. \"Does the pretty elf princess want some thick. Green. Dick?\" She grinned at Raven. Raven's cheeks actually began to flush and her eyes glanced away as she murmured. \n\n\"So...crass...\" \n\n\"Oh, you want to wallow in this just as much as I do...\" Bee giggled, her tongue darting out once, twice. She slid the tip of her tongue along my cock, licking me lazily - like an ice cream cone. \"Come on. Admit it. You're horny for Resh because you want to fuck an orc.\" She chuckled. \"The fact he's hung like a horse...\" She leaned in close, breathing in my musk. \"Smells amazing and is a true gentleman are but cherries on the top.\" \n\nRaven bit her lip. Then, quietly, she said. \"I-It's mostly the fact he's hung like a horse. Elven men aren't so...\" Her hand started to glide up and down my cock, while Maggie kissed my belly button - the dwarfess seemed to be delighting in exploring my own musculature. But before Raven could finish that sentence, my hand finally struck. For the whole time that she and Bee had been talking, my arm had been creeping up, and my hand gripped her right ear. The effect was...instructive. I had lain half-elves before, and knew that their ears were sensitive. But I had not quite realized the difference between a half-elf and a full blooded elf. My finger gently gripping the edge of her long, knife sharp ear, caused Raven's face to go slack. Her tongue peeked between her lips as her eyes went unfocused and she made a quiet groaning noise, deep in her throat - even this animalistic sound was musical. My other hand reached up, cupping her cheek. I slid my knuckles along her left ear, while my other hand gently twisted her right ear. \n\nRaven's eyes half closed - a brilliant blush spreading across her face as her tongue lolled out and her mouth opened. Her moan was liquid pleasure and as my thumb slid into her mouth, she sucked on it desperately as I continued to tease and play with her ears. Her back arched and the faint patter of her juices dripping on the sheets filled the air, while Sally let out a cheerful guffaw. Maggie then let out a loud, confused squeak - and I jerked my head over to see Sally was gently tugging on Maggie's thick patch of pubic hair. \n\n\"What the bloody hell are you doing!?\" Maggie asked, glaring at Sally, who grinned at her. \n\n\"Just' -hic- tryin' to see if you got tha' too!\" Sally said, grinning. \"Dwarves don't -hic- got ears, but they got beards, eh?\" \n\nMaggie opened her mouth to snap back - then gasped. Her eyes widened...and I saw that Sally had decided to use the more traditional method to bring pleasure to the woman. Her fingers plunged into Maggie's pussy, and Maggie moaned, her eyes closing, while I continued to fondle and caress Raven's ears, making the elf twitch and writhe. But then Gillian was leaning forward. She started to suck on Raven's ears, taking a hold of my wrists and pushing my hands down. I grinned, and soon, my hands were cupping Raven's perfect, perky breasts. I teased and tugged gently on her brilliantly red nipples while Bee licked at my balls lazily, taking her time enjoying me with her tongue. Gillian, clearly more than eager to see an elf riding orcish cock, pushed the lighter woman over me - and Bee took hold of my cock, guiding me into Raven. \n\nAnd thus, I took an elven princess. \n\nAn elven pussy, as it transpired, was nearly frictoinless. It helped that she was wetter than most girls I'd slipped into, but there was a slippery slickness that was unlike any other pussy. And what was more, her contractions were fiercer and more intense, squeezing me almost painfully tight as her breath sucked in and she shuddered, her eyes rolling back. She shuddered, her palms sliding along my chest as Gillian's green hands caressed and cupped her breasts. \"Oh godsssssssss...\" Raven crooned. \"It...feels so much better than I, ah, fucking imagined...\" She gasped. \"G-Gods...\" She closed her eyes. \"Ah gods, you've ruined me, Resh...\" She started to lift her hips, dropping them down with meaty slaps, her thighs and hips bumping against mine as she growled. \"You've ruined my elven cunny...\" ",
        "I grinned, bucking up into her, fucking back with the same fierce, intense energy she was using. Bee licked my balls as Raven continued to moan: \"I'm never taking another cock as good as this...\" She closed her eyes. \"I love it! I...I fucking love your green dick!\" \n\nHer voice was growing ragged - losing its musical edge as she became more and more animalistic, her head ducking forward, her hair tumbling around her face, concealing it as Gillian licked at her neck, nuzzling her and helping her rock on my cock. I reached down and grabbed her ass, thrusting into her as Maggie watched with wide eyes, her own more husky moans adding their own musical notes to the choir of pleasure that filled the room. As sweat beaded and dripped from Raven's hair, her voice snarled out: \"I...want your cum! Fill my womb with your hot, virile, orcish cum! Do it! Do it!\" She groaned. \n\nIf I had had a choice, Bee took it from me. She sucked both of my balls into her mouth, the pressure and warmth spiking through me - and as pleasure bolted through me, my entire body locked in place as I clenched my whole body, trembling. My cum spurted into Raven, and I could almost feel it splashing against her womb as Raven cried out, her eyes closed tight. She remained poised above me, her back curved into a C shape as she thrust out her perky, perfect breasts. Then, like a puppet with its strings cut, she sprawled atop me, gasping. Panting. My cock slowly slipped from her body, sliding free and right into Bee's eager little tongue, which began to lap the juices and cum from my member. Despite her diligent efforts, she was not able to do more than tease me. I sprawled there, gasping heavily. \n\n\"Ladies...\" I mumbled, while Gillian gently set a twitching and whimpering Raven aside, then crawled on me. \"The flesh is weak...\" I chuckled, huskily. \n\nRaven closed her eyes. By an effort of will, she managed to close her legs and then push herself up, so that she looked down at me, while Gillian ground herself against my softening member. Raven grinned. Peeking around Gillian's hip, Bee grinned. Both women held up their hands - and I saw the glowing blue light of white necromancy around their palms. My eyes widened and I opened my mouth to begin to argue. But then the magick struck me - and in the war between my technological nature and the determined will of two women... \n\nI won. \n\nAfter a fashion. \n\nEven if Sally did nearly break my hips. \n\nAfterwards, I sprawled in a pile of happy, well fucked women, with Bee pressed to my side and Maggie nuzzled against my belly, Raven in my other crook. I closed my eyes slowly. My strange, extended family was whole once more. Tomorrow, Pelojian and his riddles would be waiting. But for now, I emptied my mind and thought ahead to the waiting, gaping maw of the Void. I thought, too, of the mysteries and loose ends that remained in Arcanum, that I would need to see. Thanks to Virginia, I could easily handle those before heading to the Void. \n\nBut there was that...thing waiting for me. The Void. A vast mystery, containing the power that had brought the Vendigroth wastes into being. I thought of my accelerator pistol - it seemed such a paltry thing to bring against such magick forces. Was technology really able to stand against that? I pursed my lips, looking into the gathering darkness as the cantrips faded and brought true night and the quiet snoring of my lovers filled my ears with a comforting, relaxing buzz. Slowly, I began to smile, as a schematic took shape. \n\nI took my understanding of pneumatic pressures from the pumps I created for Beatrice, the energy storage and motivational projection of the electrical rings, the automation systems in the schematics I had found in Ashbury. Metallurgical expertise from Maggie could assist in making the parts light enough...yes...yes. The schematic would need a great deal of math for me to finish it up, but once completed, I knew how to make the suit that would be appropriate for a showdown with Arronax. \n\nI'd show that pompous elf exactly what an educated mind could do. \n\nTO BE CONTINUED"
    ],
    "authorname": "DragonCobolt",
    "tags": [
        "adventure",
        "big cock",
        "dwarf",
        "elf",
        "group sex",
        "human",
        "orc",
        "orgy",
        "steampunk"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/arcanum-of-steamwork-and-magic-ch-22"
}