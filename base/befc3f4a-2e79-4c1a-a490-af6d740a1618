{
    "title": "Grandmother's Bed Ch. 06",
    "pages": [
        "Grandmother's Bed: Chapter 6 -- The Final Chapter\n\nWell this is the end of the road for the adventures of Sylvia and her grandson John. This final chapter explores how John's sister, Grace, becomes embroiled in the incestuous activities of the household in Lockdown.\n\nI hope you enjoy it!\n\n* * * * *\n\nIn chapter five, John's older sister Grace comes to stay with the family during Lockdown in Sylvia's big nineteen-twenties villa. Her presence curtails most of the sexual activities that usually go on in the house between John, his grandmother Sylvia, his mum Valerie and their friend Nina. But as Grace settles in, and tentative and clandestine sexual activities are resumed, Grace (who has just left her husband) confides in John that she is unable to sleep properly at night and is tired, irritable and miserable because she is not capable of giving herself an orgasm. She asks John to help by coming to her room during the night to masturbate her. After a couple of these sessions, Grace suggests that she could perhaps provide a reciprocal arrangement for John... This is where we pick up the story.\n\nIt was another long day of avoiding my sister's eye and trying to behave normally when all I could think about was visiting Grace's room in the wee small hours. I was unsure about how it would all pan out; she was definitely much more relaxed last night than she had been the first time. And she'd worn a sexy nightie, too. What, I wondered, would happen tonight? I guessed that she would offer to masturbate me, though other possibilities did cross my mind. It also occurred to me that if Grace did masturbate me to an orgasm, there might be no coupling afterwards with Sylvia, or mum or Nina. Life in this house, I suspected, was about to get a whole lot more complicated. Of course, I had had the chance to say no to Grace, and I hadn't.\n\nI spent a lot of the morning working in the office on the top floor just down the corridor from Grace's bedroom, though I heard and saw nothing of her. In the afternoon I went for another long walk, without Grace this time. Without anybody in fact. Nobody else seemed to want to venture out in this freezing weather whereas I rather liked it.\n\nThe evening was excruciating too. A load of old recycled crap on the TV. I read for a couple of hours then mooched around the kitchen, poking into cupboards and generally trying to kill time. My mother, Valerie, came into the kitchen as I was staring out of the window into the darkness of the garden.\n\n'What are you doing in here all by yourself? Are you alright?'\n\n'I'm fine Mum. Just bored.'\n\nShe came over and put her arms around me. Not a motherly hug but the embrace of a lover, her breasts tight against my chest.\n\n'Mum!' I hissed. What if Grace comes in?'\n\n'Grace has gone to bed and your Grandmother and Nina are playing chess in the study, so you can give me a proper kiss. It's been too long.'\n\nOur lips met and I smelled my mother's scent, felt her full lips against mine and tasted her lipstick. Her hot little tongue darted between my lips and I opened my mouth to welcome it in. Acting mostly from instinct I cupped her denim clad buttocks and pulled her into me, our groins grinding together, my cock hardening.\n\n'Come to my room tonight, John, after everyone's gone to bed.'\n\nI cast around for an excuse that wouldn't sound too much like a rejection. It wasn't as if I didn't want to sleep with my mother, it was just that Grace represented the unknown. The even more forbidden perhaps. In the end I compromised.\n\n'How about me coming to you in the early morning, maybe five o'clock. I'm really tired.'\n\nMum gave me a funny look. 'Ok, I'll see you in the morning.'\n\nEleven o'clock was the unofficial bedtime but I was the only one up as the grandfather clock in the hall chimed the hour. I was pretty sure that Sylvia and Nina had both gone to Sylvia's room, but I felt bad about going to listen outside the door. Besides, if they were, good luck to them. They'd be less likely to find out that I wasn't in my room.\n\nI went up to my bedroom and read until midnight, flipping the pages meaninglessly, absorbing nothing. As the hour chimed downstairs, I sent a text to Grace.\n\nOk to come up? J xxx\n\nThe reply was immediate.\n\nYes xxxx\n\nOutside my room the corridor was dark and quiet. No light from under Sylvia's door. I could imagine the two of them in bed together, maybe in a sixty-nine, licking each other's cunts. The thought made me smile as I ascended to the top floor and Grace's rooms.\n\nHer door was ajar and I pushed it open to reveal her lying on the bed, the room warm and in semi-darkness. She was wearing the same dark blue silk negligee that she'd worn the previous evening. I was wearing a bathrobe, with nothing underneath it. She patted the bed beside her and I closed the door and went and lay down beside her. We turned out heads and looked at each other.\n\n'This is quite awkward,' said Grace, after a pause. 'I thought it was going to get easier...'\n\n'But then you made your suggestion,' I said.\n\n'How do we play it,' she asked.\n\nNot a very romantic beginning I thought, feeling disappointed. 'Look, let's just do what we did last night -- what I did last night -- and see what develops.' Without waiting for a reply I put my arm around her and drew her to me, my other hand lifting the hem of her negligee to expose her glorious black bush. She laid her head against my chest, her black hair stark against my white bathrobe, and opened her legs wide. I reached down and began stroking her pubic hair; it was silky-smooth and luxuriant and I revelled in running my fingers softly through it, aware of her labia beneath. After a couple of minutes of stroking her bush I started to run a fingertip up and down her cunt-lips, seeking the moistness inside. Grace sighed and opened her legs wider. Then she turned her head to up to me.\n\n'Why don't you take that bathrobe off? The heating's on and you must be roasting.' We disengaged briefly while I disrobed and threw the thing onto the bedroom floor, then we embraced again and I sought the entrance to her vagina with my middle finger. She sighed again and reached over with her left arm, her hand finding my erection and tracing a fingernail up and down the shaft. I was very hard, oozing seminal fluid, my foreskin fully retracted and my glans purple and engorged with blood, the thought racing through my mind that my sister was touching my penis. 'It's lovely and hard,' she whispered, circling my shaft with thumb and fingers and starting to masturbate me, very gently and very slowly, using her fingertips to spread my leaking seminal fluid around the head and shaft of my cock, lubricating me so she could slide her hand up and down, the pressure of her fingers light but exquisite. I responded by slipping two fingers into her sopping pussy and sliding them in and out slowly, fascinated by the rising scent of her juices and the faint sucking and squelching noises as my fingers fucked her. We carried on like this for what seemed like a long time; it was probably ten or fifteen minutes. I felt as though I was in some elevated state -- a state of Grace perhaps? Grace's eyes were shut, her mouth partly open, breathing in short, fast gasps while she slid her hand up and down my shaft. I now added my index finger to the two already inside my sister and felt the walls of her vagina squeeze them.\n\n'Ahh, is that three fingers you've got inside me?'\n\n'Yes. Does it feel ok?'\n\n'It feels amazing. How about you?'\n\n'Your hand feels wonderful but I think you need to slow down a bit or I'm going to come.' Grace's hand movements slowed and I sighed. 'That's perfect.' Then I took my fingers out of her cunt hole and started to tease her clitoris with gentle circular motions of my fingertips. Her breathing grew ragged and she gripped my cock harder.\n\n'Slow down John or I'll come too soon too.'\n\nI did as she asked and, since she was keen to extend the experience, decided to chance my arm. 'Why don't you take your nightie off?' Grace said nothing but she released my aching penis and sat up, pulling her nightdress over her shoulders and head and tossing it on the floor. In the dim light I could see that my sister's breasts were small, pert and upturned, with quite large nipples. She lay back down on my chest, the two of us naked, and reached for my shaft again, wanking me gently as my thumb found her clit and started to rub the little bud, my first three fingers sliding into her again. With my other hand I reached around her and was just able to cup her left breast, taking the nipple and rolling it softly between finger and thumb.\n\n'Mmm, that's good.' She looked up at me, lips parted, and I bent my head to kiss her. She stretched up and our lips met and opened against each other and our tongues met and danced and somehow this seemed more erotic, more forbidden, more intimate than what we were doing with our hands. Grace tasted nice. Sweet and warm and wet and soft with a hint of mouthwash. We kissed for a long time and I think I must have unconsciously speeded up the circular motion of my thumb on her clit because she suddenly gave a muffled groan and started bucking her hips and flexing her legs and at the same time she fastened on my lower lip and sucked hard, taking it into her mouth. Then she went limp and broke the kiss, her hand holding my penis but no longer moving.\n\n'I'm sorry, John, that just crept up on me.'\n\n'That's ok. Was it good?'\n\n'Good? It was way more than good. I'm struggling to remember it ever feeling like that before.'\n\n'What about the kissing? Is that going too far.'\n\n'What, when we're masturbating each other at the same time? Don't be silly. Now, lie down.'\n\nI did as my sister asked and she got up and knelt over me. Christ, I thought, she's going to take me in her mouth. I watched unbelieving in the dim bedroom light as she bent down and I felt her lips and mouth take in my swollen cock head. It felt mind-blowing. A soft, wet, velvet glove enveloping my glans and the first three inches of my shaft. Then she started sucking and licking, her head bobbing up and down over my groin, her saliva mingling with my secretions. I'd had a lot of blow jobs in the past five years but I wasn't sure that any of them had been this good. Within a minute I felt my orgasm building. 'I'm coming,' I hissed, urgently, giving her the chance to withdraw. What she actually did was to suck harder and start pumping my shaft with one of her hands. I exploded into my sister's mouth, squirting jet after jet of spunk into her, and she stayed fastened onto my cock till the fountain had died to a trickle. She didn't even run to the bathroom afterwards, so she must have swallowed the lot.\n\nI stayed lying on the bed as she licked me clean then lay beside me and we cuddled and caressed for a time, passion spent but affection still there. 'I think we probably need to talk again, John,' she said at length. 'Do you fancy a walk in the morning?'\n\nI got back to my room just before one am and showered and fell asleep, thinking of Grace and her glorious black bush and her pert little tits with their big nipples and her mouth, warm and wet and mobile against mine. And about what she wanted to talk about in the morning.\n\nMy alarm woke me at a quarter to five and I went and doused my head in the bathroom sink to wake myself up. I'd worried that I wouldn't want to go to my mother's room at that unholy hour of the morning but now the prospect was imminent I was excited, as always, by the thought of committing incest with my mother and the glorious, abandoned behaviour that we would share in her bed. So when I tried the handle of her bedroom a few minutes later, and it opened, I walked in with a penis that was already pointing at the ceiling and leaking my clear and sticky fluid onto the long-suffering bathrobe.\n\nValerie was on the bed, waiting for me, and she was wearing black stockings and a satin garter belt and she had made her face up for me and painted her nails and she looked ravishing lying there in the light of a bedside lamp. I shed the robe and went and lay down on top of her, kissing her bare breasts and lips.\n\nMy mother had shed half a stone since that time more than five years ago when she'd caught me with my cock buried in her mother's anus while her mother's friend ate her cunt out. She was fifty-five now, broad hipped and with pendulous breasts that were showing the first signs of stretch marks. She was a natural redhead, which included her pubic hair, and although I was a sucker for black hair down below I adored burying my face in her red snatch and gorging on her labia. I did this now, bending her legs right over to expose her cunt and her perineum, kneeling down and licking from bottom to top, feeling her wet, slippery lips envelop my face, tasting the strong scent of her cunt juices. Then I straightened up and entered her, hard, ramming my cock fully in and delighting in her gasps and moans. I fucked her for about five minutes, then it was back down to eating her out, this time using one of my fingers to wipe some of her juices around her little brown, puckered anus, making her grunt and hold a pillow to her face to stifle her screams. Then ramming my cock home again and kissing her deeply as I drove in and out of her, my mouth stifling all but a faint mewing noise.\n\nThen it was back down to her cunt again, the whole area flooded with her juices, clear liquid running down and collecting in the folds of her labia and overflowing to run down to her anus. I had just started licking her again when she pushed my head away.\n\n'Now turn Mummy over and fuck me in my bottom and make me come.' She was often \"Mummy\" in bed. It dated back to the first time we'd had sex together. For me it added to the overall eroticism of the whole mother-son incest thing and Valerie had admitted to me that she too felt aroused when using that language.\n\nIf I'd heard my mother talking like this five years ago I would just have thought I was hallucinating. Now it was very different. After some initial reluctance, Valerie had allowed me to have anal intercourse with her and had enjoyed it so much that it was now a regular feature of our coupling. It's probably fair to say that we ended a love-making session more often than not with me penetrating her anus; she could orgasm quite easily in that position, particularly if she frigged herself at the same time, which she mostly did, unless I'd tied her to the bed so that she couldn't...\n\n'You won't need any extra lubrication, darling, Mummy's sopping wet down there.'\n\nI took this at face value. Just having natural lubrication for this particular activity added a certain extra spice, although I would enter her gently. Now I rolled her over so she was face down and parted her legs, exposing the tip of her pussy and her anus. We'd done this so many times that it was second nature for me to kneel over her, grip my shaft firmly in one hand while supporting my bodyweight on the other forearm, and guide my swollen cock head to her tight little pucker, gleaming with juices in the dim light. As always there was resistance as I pushed, then her sphincter began to relax and open and my rigid meat slid in, stretching the ring of muscle impossibly wide, tentatively at first, in case I was hurting her, then with more confidence. Then the whole seven inches was in and I was lying over my mother's back and kissing her neck and cheek and asking her how it felt.\n\n'Big, and dirty and very, very naughty. But I know how much you like putting your penis in Mummy's bottom and you know how much Mummy likes it too.'\n\n'What would you like me to do now, Mummy?'\n\n'I want you to slide your big cock in and out of my bum hole until you squirt all that dirty spunk inside me.'\n\nI started fucking her then, slowly at first, coming almost all the way out and then back in. Once or twice I did slip out but her anus was wide open by then and I pushed myself easily back in, feeling the soft, warm walls of her rectum envelop my shaft, her sphincter gripping the base. I could see from her arm muscles that she was masturbating. And I knew that she'd got two or three fingers inside her vagina. I could feel the fingers through the thin wall of her rectum. My pace increased and Valerie started grunting.\n\n'Yes, harder darling. Faster and harder! Make Mummy come!'\n\nI started ramming my cock in and out, my balls slapping on her buttocks. She groaned and bit the pillow to stifle her cries. I felt the pressure rise and the familiar tingling starting somewhere near my anus and worked its way up past my balls and my spine to my brain where it exploded in a firework display of exquisite pleasure as I squirted my semen for the second time that day, this time into my mother's anus. As I came, so did she, thrashing her head around on the pillow, teeth gritted.\n\nThen we subsided. I stayed inside her until my cock was limp, then withdrew and went to the bathroom to wash; it's not a very romantic end to lovemaking but it does save messing up the duvet cover. Mum followed me in, my spunk oozing from her arsehole and down her inner thighs on to her stocking tops. Afterwards we lay down under the duvet and there we stayed, in each other's arms, talking and dozing until it started to get light outside and I had to retreat to my room before anybody else was up. Back in my room I looked at my phone, expecting a text from Grace about the evening's activities, but there was nothing.\n\nThat day was Saturday, so I didn't have to sequester myself in my top-floor office for hours on end. After breakfast I nodded to Grace and we went into the back utility room and put on walking boots, coats, gloves, scarves and hats against the January cold. Outside it was still frozen and our breath made plumes in the clear, dry air.\n\nWe crunched off across the back garden to the stile that led into a back lane where the holes in the unmetalled road had filled with rainwater and frozen over. We walked for twenty minutes or so before Grace broke the silence, looking back over her shoulder as though to check that we weren't being followed.\n\n'How do you feel about last night?' she began.\n\nGrace couldn't possibly know that I was fucking both her mother and her grandmother so it wasn't such a big deal to me, but I pretended to take her question seriously. 'I think if we carry on as we are we'll end up having full sex.'\n\n'And how would you feel about that, John?'\n\n'Well, it's illegal,' I said, 'but that aside I'd love to make love with you, properly. I think you're gorgeous and sexy. Your husband must have been out of his mind.'\n\n'You'd be happy to do it properly? To penetrate me?'\n\n'Yes, I would.'\n\n'And what if Mum or Gran found out?'\n\n'Well of course we'd have to be very, very careful. Anyway, what do you think?'\n\n'Like I said before, Tony was my first and only male lover and I thought he was great at it. But what you've done to me over the last few nights just completely eclipses anything I've ever felt before. And I think that if we made love properly it would be even better, so I'm not that bothered about the legality of it. I'm more bothered that somebody in the house would find out. And I think if you keep coming to my room somebody will find out. If it weren't for this wretched Lockdown we could get a hotel room.'\n\n'Lockdown won't last forever.'\n\n'I don't want to wait, John. I want us to make love!' Her voice had risen and now I looked around too but there was nothing except the lane and the empty fields. 'Aren't you getting frustrated too?'\n\nThe problem was I thought she was right; if I kept slipping up to her bedroom after lights-out someone, sooner or later, would find out. That wasn't necessarily a disaster but I felt there were better ways of managing it. So I temporized. 'Look Grace I would dearly love us to sleep together. Let me think about it for a day or two and see what comes up. Ok?'",
        "'It'll have to be, I suppose. As long as you come and give me a kiss.' I looked around again but we were alone, for miles around, so I took her into my arms and we kissed and our lips parted and I tasted her warm wetness and she slipped her tongue into my mouth and flicked it across my teeth and my tongue. I sucked her lips and lapped up her saliva and my penis responded and we hugged tighter and mashed our faces together. Grace eventually broke the embrace. 'Just don't let it be too long or I think I'll go crazy.'\n\nBack at the house I went up to my office pleading urgent and imaginary weekend work that I'd just been notified of. Upstairs I sat at my desk and looked out over the frozen front garden, lost in thought. The most elegant solution, I concluded eventually, was if Valerie, Sylvia and Nina knew about Grace and me, but Grace knew nothing of the reciprocal arrangements, which would surely freak her out. I had convinced myself that whereas she might be ok sleeping with a brother of roughly her age, the idea of me sleeping with my mother and grandmother would be seen as unacceptable. Quite what psychology I based this on I'm not sure. But that left the question of how to tell the others. And would they react with equanimity? Would Valerie appreciate me sleeping with her daughter? And mum was surely the person I first had to approach, given her relationship to Grace.\n\nI agonised over the next twenty-four hours, at one point almost discarding the idea and risking being caught out. But that would not be fair to Grace. In the end I texted my mother and asked if I could come to her room that Sunday evening. She replied that that would be something to look forward to and suggested I come any time after midnight.\n\nAs before, when I got to her room she was lying on the bed dressed in stockings and suspenders and had applied her makeup carefully and painted her fingernails a dark red colour. As before I lay down on top of her and gave myself to the exquisitely pleasurable task of satisfying my mother sexually. To begin with I tied her hands to the bed posts with ropes that she kept in her bedside table. Both she and Nina loved being tied down like this and mum had once admitted that they sometimes did it to each other when they made love. So when I parted her legs and knelt between them I could see that she was extremely aroused, her golden-brown labia were puffy and open, a hint of pink inside and the lips glistened with her secretions, her red bush wet with them.\n\n'Has Mummy been playing with herself while she waited for her son to arrive?' I asked.\n\n'Just a bit. I didn't come, I promise.'\n\n'That's naughty of Mummy. Now I'm going to have to spank your pussy.' She started writhing around and pulling at her hand restraints.\n\n'Be gentle darling.'\n\nI lay down next to her and cupped her vulva in my hand, feeling the wetness and her sopping pubic bush. I rubbed the palm of my hand around, building up the tension while she struggled against the ropes. Then I delivered the first smack, a wet slapping sound, and she arched her back and gritted her teeth.\n\n'If Mummy makes a noise she'll have to be gagged.' I whispered as I delivered the second smack, harder this time. Then I slid my fingers into her cunt and she bucked her hips up to try to get more inside her. I finger-fucked her and strummed her clit and, as her orgasm approached, I smacked her again, hard, then I knelt down and penetrated her roughly and suddenly. My mother climaxed in a barely suppressed squeal of bliss and I thrust into her, my climax not far behind hers.\n\nShe went to the bathroom, after I'd untied her, to avoid leaking my semen onto her bed. Then we lay down contentedly in each other arms. It was Valerie who broke the silence. 'So to what do I owe this unexpected pleasure? I thought it was your Grandmother's turn for you this evening?'\n\nI was surprised to learn that mum knew all about the movements of people around the house after dark. Just what else did she know? 'How did you know about all that?' I asked.\n\nValerie smiled and kissed me gently. 'I'm afraid we girls are terrible gossips. And although we all enjoy a bit of female company there's a certain competition for the only male in the house, so we like to know that we're all getting our fair share.'\n\n'So my visits to Gran and Nina and you, you've all known about that?'\n\n'Afraid so.'\n\nI decided suddenly to be bold. 'And my visits up to Grace's room over the past three or four days, have they been discussed?'\n\nMum was silent for a while and I could tell this had come as a surprise to her. 'Is there something you want to tell me, John? Is that the reason for coming to me tonight?'\n\nSo I told her. About the difficulties Grace had had, not being able to give herself an orgasm and how she'd asked me to masturbate her and how this had developed to the point where she wanted us to sleep together.\n\n'I suppose I shouldn't be surprised,' said my mother, at length. 'It seems as though incestuous desire runs in the family. And it would be hypocritical of me to condemn you both.' She paused. 'Actually, thank you for coming to talk to me about it. I assume this really is a before-the-event chat and you haven't already screwed your sister.'\n\n'I haven't.'\n\n'Well I suppose I should give you both my blessing.' I felt a wave of relief sweep over me. 'Do you want me to mention it to the other two so they won't be surprised by footsteps in the night, or make inappropriate remarks to Grace? I assume Grace knows nothing about us?'\n\nIt was almost as if mum were working from a script that I'd written. The whole thing couldn't have gone better. Was there a catch? 'Thanks, Valerie, I'd appreciate it if you would. And no, Grace has no suspicions about what goes on elsewhere in the house. I love you,' I added, getting up to go back to my room.\n\nValerie watched me from the bed. 'Just make sure you save enough of that lovely cock of yours for your old Mum.'\n\nWhen I got back to my room and looked at my phone there was a message from Grace.\n\nWell?\n\nIt had been sent at ten pm; it was now after one in the morning. My first reaction was to ignore it on the basis that if I replied that it was ok, she may well invite me up. My next reaction was \"fuck it\". I wanted my sister and the fact that I'd already fucked my mother that evening and come inside her would just prolong the pleasure with Grace.\n\nSorry, I fell asleep, I replied. I think it would be fine for me to come up tonight. Is it too late?\n\nI hesitated, then hit the send button. The reply came two minutes later.\n\nNo, come now! Xxxxxx\n\nHer bedroom door was ajar and I pushed it open and entered. The light was dim but I could see Grace on the bed. She was naked and her hand was between her legs. I felt my cock twitch and begin to expand.\n\n'Lock the door, John, the key's in the lock. There's a game of chess on the table, if anybody comes we couldn't sleep and we're playing a game. You think it'll be ok now?'\n\n'Nobody ever comes up here except you and me and certainly not in the middle of the night. And I don't think you can hear anything much from downstairs either. Gran said the floorboards were two-inch thick oak with six inches of insulation between them and the ceiling below.'\n\n'You didn't ask her did you?'\n\n'No, she mentioned it when you asked to come and stay. She said you'd have a bit of peace and quiet up here.' I took off my T shirt and boxers and joined her on the bed. 'You look lovely. Have you been playing with yourself?' I couldn't help but remember my mother earlier on that evening.\n\n'Mmm,' smiled Grace and held her hand up to my face. 'Do you want to taste me?' I took her hand and licked the clear, sticky cunt juices from her fingers then I lay down gently on my sister, supporting myself on my elbows, and kissed her lips, tenderly and softly. Grace was having none of that; she put her hands on the back of my head and pulled my face into hers and we kissed violently. Beneath me I felt her legs open and I started to manoeuvre my hips and cock towards her pussy. Some instinct told me when I was lined up with the entrance to her vagina and I pushed gently forward, feeling my penis slide into her wet and waiting cunt, the first time I'd ever penetrated a woman like that without using my hands. Her cunt felt like liquid velvet, hot and wet, the muscle walls clamping down on my shaft. God, she was tight.\n\nUnderneath me Grace jerked her head back as I entered her. 'Oh, Christ that's good.' I started fucking my sister in slow, measured strokes, letting the pleasure build up, kissing her lips and nose and cheeks, bending down further to take one of her nipples in my mouth. When I did this she groaned and shuddered.\n\n'Bite my nipple John.'\n\nI clamped down and she shuddered again and her climax hit her and she thrust her hips up at me and dug her nails into my back and moaned and whimpered, trying to suppress an urge to scream out loud. As her orgasm subsided I started fucking her in earnest, hips pistoning backwards and forwards, my whole length ramming in and out of her tight little snatch. She lay mewling gently, her eyes closed, lips and chin shiny with saliva. I screwed her hard for a long time and then with a final, almost savage thrust, I triggered my climax and for the second time that evening, pumped a jet of semen into my lover's vagina.\n\nLike most second climaxes this one was less intense and over quickly and I collapsed onto my sister, sweat beading on my chest and forehead. She stroked my face. 'Was that good for you?'\n\n'Oh God, it was fantastic. You felt fantastic. What about you?'\n\n'It was like nothing I've ever experienced.' There was a catch in her voice and tears started to well in the corners of her eyes. I hugged her and kissed her and she wiped her eyes. 'It's not just that you're bigger than Tony, it was just so different. I felt a connection with you that I never did with him, I felt as though we were merging into one thing. One person. Does that sound silly?'\n\n'Of course not.' She now lay in my arms with her head on my chest and I stroked her hair and ran my hand down to her narrow hips and across her buttocks and back, gently exploring, feeling her contours.\n\n'We will make love again, won't we? I don't think I could stand it if it never happened again. I know we can't do it every night but could you come up a couple of times a week?'\n\nI kissed the top of her head, smelling her shampoo on the silky black hair. 'That sounds fine. And this Lockdown won't last forever, then we can find a hotel room during the day.'\n\nGrace giggled. 'What and sign in as Mr and Mrs? Oh, John, that would be lovely. We've got so much exploring to do, to find out what we like, what turns us on. It's so exciting.'\n\nI left soon after that and went back to my bedroom. It was all very well having Grace ignorant of the bigger picture, but her demands upon me, added to those of three very randy mature women, were going to put a severe strain on my physical resources twenty-five-years old or not. What had I got myself into, I wondered as I passed into a wearied slumber?\n\n***\n\nTwo nights later, as I was cleaning my teeth before getting into bed, I had a text from Sylvia.\n\nWould you like to come to my bed tonight, John? I think it's my turn! I'm waiting for you and I'm very wet...\n\nMy harem had evidently been discussing the situation, so I assumed Valerie had told them about Grace and me. I stripped off my boxers and walked naked through the old dressing room and into Sylvia's bedroom. She was wearing her white negligee again and it caught the moonlight streaming in through the window as she lay on the bed. This time she was also wearing stockings. She rose as I entered the room and came into my arms.\n\n'Hello, Sylvia,' I said, putting my arms around her and drawing her satin-clad body to mine.\n\n'Hello, John,' she smiled at me and raised her face to be kissed. I lowered my mouth to hers and our lips met and our mouths opened against each other and we kissed long and hard, tongues duelling and flicking against each other, tasting saliva and teeth and gums. My grandmother broke the kiss. 'I have to warn you that I'm feeling very naughty and very horny tonight so I hope you're ready for me.'\n\n'What would you like me to do to you?'\n\n'Mmm, I think I'd like you to handcuff me to the bed, then I want you to go down on me.'\n\nOur sex wasn't always prescriptive, but if Sylvia were really worked up she would sometimes give me instructions on exactly how she wanted me to pleasure her. It somehow reinforced the grandmother/grandson angle to our incest. Now I laid her down on the bed and used Velcro straps to secure her hands above her head to the bedstead. Then I knelt between her legs and brought my face to her cunt, inhaling her scent and burying my face in her pubic bush, seeking her labia with my tongue. She certainly was very wet and she tasted deliciously sweet and musky, completely different to my mother and very different to Nina's dark, heavy taste.\n\nI moved my mouth up to her clitoris, using the fingers of one hand to slide into her sopping cunt hole. She squealed as I sucked the little nub into my mouth and rasped my tongue across its sensitive surface, fucking her with three fingers as I did so. Then I placed my hands at the back of her knees and lifted her legs right over so that her knees almost touched her stomach. Her sex was spread out below me as I held her legs in place and buried my head in her vulva, licking and driving my tongue deep into her, licking further down to her perineum and below to her forbidden hole, licking and tasting the little puckered opening and forcing my tongue in as far as I could get it. As I did this my grandmother mewed with pleasure and pulled against her wrist restraints.\n\n'Use the plug on me, John,' she gasped, 'the black one.' Sylvia enjoyed having a latex rubber butt plug inserted during sex and had two of slightly different sizes. The dark blue one was slim and about five inches long; the black one was shorter and thicker and it was this that she now asked for. Her collection of sex toys was in the top drawer of her dresser and I had to switch on a desk lamp to see in the gloom. There it was on the top of a heap of vibrators and mouth gags and straps and other paraphernalia that we had tried out over the years. I took up a tube of lubricant too.\n\nBack at the bed I squeezed a dollop of lube onto my finger and smeared it round her anus, then another dollop, this time sliding my finger in, then adding more until I was sure her rectum would receive the plug easily. To insert it I lifted her legs back over and straddled her, facing away from her and pinning her legs with my thighs. In this position I had both hands free and I used one hand to masturbate her and the other to place the tip of the butt plug against her bum hole. As I did this she tried to arch her back but had limited space to move with me astride her. Sylvia found this immobility whilst having something inserted in her anus a big turn-on. Now she moaned as the plug stretched her sphincter and started to disappear into her rectal passage. Then it was in and I dismounted, turned around and penetrated her vagina with my seven inches of ridged, blood-engorged meat.\n\nI was massively turned on by the act of insertion and by my grandmother, tied to the bed below me. I kissed her mouth and cheeks and neck as I fucked her; I bit her nipples through the satin fabric of the negligee until she cried out. Then I mashed my lips against hers to stifle her cries -- and mine -- as I stared to push harder and more roughly into her, feeling the butt plug through the walls of her vagina and rectum as I thrust in, grinding my pubis against her clitoris at the end of each stroke. The stimulation was too much for Sylvia and with a muted scream (my mouth was still firmly pressed to hers) she climaxed, pulling at the Velcro handcuffs and writhing her body beneath mine.\n\nShe relaxed as the orgasm faded and looked up at me. 'Thank you, John, I needed that.' I was still inside her, supporting myself above her on my elbows. She smiled up at me. 'Would you like me to suck you off?' In answer I withdrew from her, released her hands and \"assumed the position\", lying at the end of the bed, my feet on the blanket chest. Sylvia got off the bed, a little unsteady after her climax, and sat down on the chest between my legs. Then she bent down and took hold of my cock, slick with her cunt juices, and slid the head into her mouth. It was exquisite, a warm, wet envelope around my glans, her tongue probing my piss hole, her hand, with its red-tipped fingers, sliding gently up and down, digging her nails lightly into the shaft. There was no way I was going to last very long with this going on, but then Sylvia stopped and stood up. It was too dark in the room to see exactly what she was doing but I was aware of her reaching between her legs and I heard her grunt and then a faint squishing noise as she pulled the butt plug out of her rectum. Sitting down again she grasped my cock and swallowed the head again, but then I felt the tip of the butt plug, still warm from my grandmother, push against my anus. I'd taken the blue one before but never the black, and she'd used no lubrication. I tensed up, which closed my anus tightly. 'Relax,' said Sylvia, taking her mouth from my glans, 'I won't hurt you.' I tried to go limp but the plug felt huge as my grandmother twisted and pushed it relentlessly into my rectum. Just before it became painful, the thick part of the plug was past my sphincter and it felt a lot more comfortable -- good in fact. Now she started sucking me off in earnest, her lips sliding up and down, wet and sticky, her hand grasping me near the base of my cock, fingernails digging into me.\n\nTwenty-four hours ago I'd thought that maybe my sister had given me the best blowjob of my life; this was a close second. The sensation of Sylvia's mouth and lips, sliding and sucking, the hand around the base, grasping me tightly, and the butt plug, feeling enormous in my arse... My orgasm was fast approaching and I was starting to groan and grip the duvet tightly. Then I put my hand on the top of my grandmother's head and pushed her mouth down onto me, trying to get another inch of my cock into her mouth. I guess she sensed my impending climax because she took her mouth away, stood up and moved to the bed, where she knelt up by the headboard, facing the wall.\n\n'Come and fuck me in the bum, John. Come and squirt your spunk into your Granny's dirty little bum hole.' Seconds later I was pushing my cock inside her, revelling in the tight penetration and the soft envelopment of her rectal walls around me.\n\n'Does that feel ok?' I asked as the last inch went in.\n\n'It feels wonderful. Now give it to me!'\n\nI abandoned \"gentle\" and started to fuck her in long, hard strokes, occasionally coming right out and having to insert myself again. As I fucked her I reached around and cupped her tits, squeezing the nipples hard between finger and thumb. Sylvia was supporting herself with one hand on the bedstead; the other hand was between her legs, strumming her clitoris, apparently not too sensitive after her orgasm. We fucked like this for a surprisingly long time; I suppose it's the gentle traction of her anus that delays the climax. But when I did come it was monstrous, greying the world out and concentrating my whole existence on a penis and an anus, the pleasure signals overwhelming all other senses. I was dimly aware that my lover was also having an orgasm, shuddering in my arms as I squeezed her nipples and bit her neck. Then we were done, and my grandmother was helping me to take the butt plug out and we were washing ourselves in her en-suite.\n\nLying in my arms a few minutes later I could sense Sylvia smiling in the darkness. 'What is it?' I asked.",
        "'Oh, I was just wondering how it felt to have something that big up your backside.'\n\n'It was good,' I muttered, slightly embarrassed. 'It made my orgasm more intense.\n\n'Now you know how it feels for a lady. Although you're considerably bigger than that...' We lay in silence for a few minutes but again I could sense that Sylvia had something she wanted to say.\n\n'Come on, Sylvia, out with it.'\n\n'Out with what?'\n\n'You've got something on your mind. That's part of the reason you asked me to come tonight. It's Grace isn't it?'\n\n'Yes, it's Grace. Well, sort of. Now don't get me wrong, I'm not judging you, not with what we've been doing together for the past five years, and with your mother... Well, none of us are in any position to say anything if you and Grace want to have sex together,'\n\n'But?'\n\n'Oh, I suppose I'm worried that if you and Grace start a relationship there won't be any room for the rest of us. For me.'\n\n'Sylvia, I don't know what the future holds but one thing I am sure of is that you and I will continue to have sex together. Why would I ever want to give up something as good as this?'\n\n'Because you've got somebody who's younger, and better looking?'\n\n'Well I've always had Nina.'\n\n'Don't joke, John, I'm serious.'\n\n'So am I. I can't pretend that things won't be different, especially as Grace knows nothing about all this, but we will still have a relationship, I promise.' Then Sylvia cried a bit and I comforted her as best I could and so when she asked me to stay with her for the night I did so and we slept like the dead until dawn when I rose, kissed her and flitted back to my bedroom through the connecting dressing room.\n\nI visited Nina two nights later and we had a riotous hour of sex which culminated with me tying her face down to the bed and fucking her arse. It wasn't something that happened very often with Nina but I seemed to have developed a bit of a thing for anal sex lately and it crossed my mind that it was unlikely that Grace had ever tried it. Grace herself was keeping to her room a lot, except for mealtimes. She was working on her CV as it was obvious that after the Lockdown had finished she would have to get a job of some sort.\n\nThe following Saturday I announced my intention, at breakfast, of going for a long walk. The ridge of high pressure was still hanging over the Midlands giving intense blue skies and sub-zero temperatures. I was hoping that Grace would offer to come with me and offer she did. We left the house shortly after ten o'clock and made for the cart track that ran along the back of the property. We chatted about this and that while the house disappeared into the haze behind us and eventually I brought up the subject that had been on my mind since Grace and I had last walked this way.\n\n'You said Tony was your first and only male lover. That suggests you've had female lovers.'\n\nWe were holding hands but now Grace released mine, blushing a pretty red. 'Did I really say that? How indiscreet of me.'\n\n'And?'\n\n'And yes, if you must know. I had a one and only female lover too.' She paused, and we crunched on over the icy track for a few moments. 'You remember when I left school I did that secretarial course, the residential one in Birmingham?'\n\n'Vaguely.'\n\n'Well we had to share rooms and I got this Scottish girl called Mona, a redhead.' Grace paused, a slight smile on her face at the memory. 'We were both pretty na\u00efve, about a lot of things: sex, boys, alcohol... And we were both horny, too. So guess what? We smuggled a bottle of supermarket sherry back to our room one night, got completely pissed and ended up in bed together.'\n\n'What, just the once?'\n\n'Oh God, no. We were at it every night for the whole six weeks. I was devastated when the course finished and she headed back to Aberdeen. I'd convinced myself I was a lesbian and I was in love with her. Luckily she was a bit more grounded than me; she told me I wasn't gay and I'd find a nice bloke and she kissed me goodbye and I never saw her again.'\n\n'Well, she was right, wasn't she? I mean about not being gay. Though obviously you went on and found a crap bloke instead of a nice one.'\n\n'I suppose. But it was very exciting, while it lasted. God how I loved licking her pussy. She'd got the loveliest red bush and pink lips... It's making me horny just thinking about it, after all these years. She was the first person to give me anything close to a proper orgasm; that's quite a big deal.' She glanced sideways at me, measuring up her next words. 'Then I had this rather weird experience after I got home.'\n\n'Really? Do tell,' I asked, intrigued.\n\n'I don't know if I should.'\n\n'Well you can't leave me hanging like that!'\n\n'Ok, but this stays between you and me, right?'\n\n'Right.'\n\n'Well,' she began, it happened about a week after I'd come home. I was still mooning over Mona and she wasn't returning my phone calls and I couldn't stop thinking about her and I was trying to masturbate but it wasn't working... Then one morning I saw Mum coming out of the bathroom, naked. I suppose she thought she'd got the house to herself. Anyway, as soon as she saw me she scuttled into her bedroom but not before I'd had a good look at her fanny; she's got a thick, red bush, just like Mona's was and I couldn't stop thinking about it. Mum's bush I mean. I started fantasizing about it, what it would be like to touch it and lick it and whether it would taste like Mona's... Christ I was so frustrated! I couldn't find any release and I was obsessing over my mother's pubic hair! I got to the point where I was contemplating talking to her about it, asking her if she'd help me to have an orgasm -- like I did with you, in fact.'\n\n'What stopped you?'\n\nDidn't have the bottle, I suppose. Then a couple of weeks later I met Tony and that seemed to solve the problem.'\n\n'Seemed to?'\n\nShe stopped walking and turned to face me. 'I know it sounds crazy stupid, but I've never forgotten that glimpse of Mum. I used to think about it when Tony made love to me; it was how I got my best orgasms. It must be twelve years ago and I still think of a two or three-second view I had of my Mum's pussy. How weird is that?' She paused, looking at me. 'Well say something!'\n\nAgain I had that feeling that the script had been written for me and the other players and I just had to work out what my lines were meant to be to bring the play to the perfect conclusion. My mind was in some confusion, with alternative approaches springing up, being evaluated and being dismissed, or stored for later consideration. I was so absorbed, in fact, that I barely realised I hadn't said a word in response to Grace's confession of her innermost desires. 'Come on, John,' she said, eventually. 'I've just bared my soul to you. Was it that shocking?'\n\n'I'm sorry, Grace.' I went and hugged her. It wasn't very intimate, with us both dressed up like Antarctic explorers, but I kissed her lips and looked into her eyes and said: 'it's not shocking. It's actually rather fantastic.' She looked puzzled and I released her and took her hand and we started off down the track again, our breath forming vapour clouds in the cold, crisp air. 'Ok,' I began. 'Now I've got something to tell you and that probably will shock you.' And so I told her. About me coming to live with our grandmother and what had happened and how I had got grandmother and Nina together and the awful scene where we'd been caught in flagrante by mum with my cock up Sylvia's arse and with Nina licking her out. She didn't say anything but she kept looking up at me, a slight frown on her face. I finished by telling her about our activities after mum moved in with us and then Nina moving in during the first Lockdown and eventually what had happened after she moved in and the fact that we were on tenterhooks, in case we were discovered, but Sylvia had been a bit more blas\u00e9 about it and said that she couldn't possibly hear anything from up in her rooms and so we had resumed limited sexual activities. I tailed off and looked round at her. 'Well?'\n\n'I can hardly believe it,' she said, the frown lines deepening on her forehead. 'Is it really true? Everything you've said?'\n\n'Every word. Why would I make up a story like that?'\n\n'Fucking hell!' She thought for a moment. 'So you've been having sex with Gran and Mum and Nina while you've been having sex with me?'\n\n'Yes.' I was expecting an angry response to this but instead Grace threw back her head and laughed.\n\n'My little brother the super stud! You have been a busy boy, haven't you? And what about you and me? Do Mum and the rest know about us?'\n\n'Yes.' This time I did get a reaction.\n\n'You are joking, right?'\n\n'No. But it's fine. Everyone's cool.'\n\n'Yeah? Well I might not be cool about it... You told Mum?'\n\n'Grace, you have to understand that Mum's not as you remember her. She's been having sex with her own mother and her son for over five years. She's a very liberated and tolerant person. And she's a highly sexual person too. And she's still got a gorgeous red bush,' I couldn't help adding.\n\n'Yes, I'd noticed the make-up and the painted nails... And you lick her out do you?' Grace asked, quietly.\n\n'Yes, often. Just a few days ago, in fact.'\n\nMy sister was silent for a moment and I could almost hear the cogwheels grinding away inside her head. 'So do you think she'd let me lick her pussy?' she said, eventually.\n\n'I think she'd be delighted to,' I said, hoping it was true and that mum wouldn't have some unforeseen resistance to having sex with her daughter -- I couldn't imagine that she would. 'And I'd be willing to bet that she'd want to lick you out too.'\n\n'Really?'\n\n'Absolutely!' I declared, aware that I had yet to taste my sister's cunt; an omission that I intended to put right at the earliest opportunity.\n\nWe were passing a five-bar gate, the entrance to a paddock, the grass white with frost. Grace leant against the top bar and seemed to sag. 'This is a lot to take in, John. You've just dislocated a lifetime's understanding of how the world works in terms of family relationships.' She paused, thinking. 'I mean I know that you and I have committed incest, and that's probably pretty unusual... But we're about the same age and... I mean Gran's nearly seventy. And Gran and Mum?'\n\n'Gran is in excellent physical shape and she is as randy as...' I paused, struggling to find a suitable simile. 'Well, she's unbelievably hot and up for just about anything.'\n\n'And Mum?'\n\n'Mum's a bit different. Less overtly horny. But still very sexy.'\n\n'And how does Nina fit into all this?'\n\nI told her and we talked and I answered her questions as best I could but I could see that it was a lot for her to take in and after a while we turned for home. 'I need some time to process all this,' Grace said as we approached the house. 'Can we go for another walk tomorrow?'\n\nGrace kept to her rooms for the rest of the day, apart from a brief appearance at the dinner table. After she'd gone back to her room I followed Valerie into the kitchen and we had a long chat while Sylvia and Nina groped each other on the big settee in the sitting room and pretended to be watching a soap opera.\n\nI slept alone that night, thinking about my sister upstairs in her bed. In the morning the outside temperature was above freezing for the first time for many days and the back lane was a sea of mud and slush. Grace looked pale and drawn, as though she hadn't slept very well the night before. 'Are you ok,' I asked as we trudged through the slush. 'You look like shit.'\n\n'Thanks, little brother. Just the boost I needed this morning.'\n\n'Sorry. Bad night?'\n\n'It wasn't great. Too much to think about.'\n\n'And?'\n\n'And I want in,' said Grace, turning her pale face to me. 'It's very weird, but I want to be a part of it. If I didn't, I'd have to move out and I've got nowhere to go and no money.'\n\n'That's not a good reason.'\n\n'It's not the real reason, either. I'm excited by the whole thing. I was excited when you and I started masturbating each other, but this is an order of magnitude more exciting. It's more than that. It's amazing, breath taking, unimaginable. Just the idea of going down on Mum makes my stomach churn with excitement and anticipation. You're sure she'll let me do it? That it'll be ok?'\n\n'I spoke to her last night after dinner. She's thrilled with the idea too. She said that if you made the decision that you wanted her, she'd come up to your room tonight and take it from there.'\n\n'Tonight! Oh God, John, that doesn't give me much time!'\n\n'To do what? Get in a state about it?'\n\nGrace stood in the middle of the track, wringing her hands together and breathing in short, sharp gasps. 'I can hardly keep still,' she muttered. 'Look, I'm really nervous about this. Would you come up tonight too? It'd be much easier for me if you were there with me.'\n\nWhich was precisely what mum had predicted Grace would say. 'Of course I'll come up too. It'll be just after midnight.'\n\n***\n\nI got to Grace's bedroom about five minutes before twelve that evening. The door was ajar and I went in. My sister was sitting on the bed dressed in her dark blue negligee and staring into space. She leapt up as I came in.\n\n'Where's Mum?'\n\n'She'll be here soon,' I reassured her. Grace came round the bed and put her arms around me, her head on my chest.\n\n'I've got butterflies the size of pigeons whizzing about inside me.' Her hand disappeared between her legs. 'And I'm soaking wet. I don't think I've ever been so excited. Oh God, John, is this all really happening?'\n\nBefore I could answer there was a discreet tap at the door and Valerie came in wearing a silk dressing gown over a deep red negligee. She shut the door behind her and there was an awkward pause while we looked at each other, smiling nervously. I decided to take the initiative and shrugged off my bathrobe. I was naked underneath and my penis was standing rigidly to attention.\n\n'Well,' said Valerie, 'somebody's ready for some action, I think.' As she said this she undid her dressing gown cord and slipped it from her shoulders onto the floor. I stepped towards her and drew her towards me for a kiss, to show Grace that this was really happening and the sky was the limit. I was aware of my sister watching mesmerised as my lips met my mother's and our mouths opened in the fluid motions of practised lovers. I put my hands on her silky negligee-covered buttocks and pulled her groin into mine, kissing her hard. Then I broke off and turned to Grace, taking her in my arms and kissing her in the same manner, my hands lifting her negligee so that I could fondle her naked arse. Behind us Valerie lifted her negligee over her head and it joined the dressing gown on the floor and she stood before her son and daughter completely naked, a look of frankly wanton lust on her face.\n\n'I understand you've been admiring my bush,' she said to Grace, softly, running her plum-coloured nails through her pubic hair, then lifting the fingers to her face and inhaling the scent. I thought Grace was going to faint.\n\n'Yes,' she croaked.\n\n'Well I think you need to see it a bit closer up. Would you like to go and lie on the bed Grace?'\n\nMy sister lay down obediently and mum went over to the bedside table and angled the bedside lamp, turning up the power a few notches. Then she slowly and deliberately got onto the bed and straddled her daughter's chest, the bedside light illuminating her stomach and making her pubic hair glow like burnished copper. Grace was breathing heavily, her chest going up and down like crazy as Valerie leaned forward and gripped the bar of the headboard before lowering her loins down slowly towards her daughter's face.\n\n'Is it how you imagined it darling?'\n\n'It's beautiful, Mum.' Valerie's cunt was now about two inches from her daughter's face and Grace could smell the scent of her secretions and see her labia, puffed up and open, framed by the copper hair.\n\n'It's all yours Grace.' She sank lower, her vulva covering my sister's mouth, and groaned as she felt her daughter's tongue start it's journey of exploration around her outer lips and further into the wet, pink flesh inside.\n\nEven though mum and I had discussed how to approach Grace's initiation into the wider incestuous activities of the house it was still fascinating to see my mother being licked out by her daughter. But I'd got a treat waiting too. Kneeling between Grace's legs I buried my face in her glorious black bush and started tonguing her labia, delving inside the outer lips to lick and suck her clitoris. She tasted divine. A sweet and heady odour that permeated my whole being as her juices covered my mouth and chin. Grace started making muffled squeaking noises and began to lick her mother faster, more urgently. Valerie threw her head back and let out a long moan as an orgasm racked through her loins and up her spine to her brain. She dismounted and gently pushed me aside, kneeling to take over the job of licking Grace's cunt. This put Valerie in an excellent position for me to take her from behind. But on the spur of the moment I decided to deviate from the script. Grace was clutching the bars of the headboard and writhing as her mother performed her cunnilingus. I knelt over Grace's face and pushed my throbbing cock into her mouth. She gagged slightly then started moving her head up and down, her lips sliding over my shaft, her face all shiny and wet from mum's cunt juices. I withdrew my cock from Grace's mouth before I got too overheated and, moving behind my mum, with her backside stuck in the air, I guided my penis to her crinkled little rosebud. Valerie was expecting anal intercourse later on in the proceedings, and she'd lubricated herself before coming upstairs, but I wanted it now. So did she, apparently, because as I touched my cock head to her anus she forced her buttocks back against me and I popped easily in and slid my full seven inches into her rectum. Grace didn't know what I was doing but she could see that there was something going on and that was what triggered her climax.\n\nWith a barely repressed scream she bucked her hips up to her mother's face and, letting go of the headboard, grabbed her mother's hair and pulled her face hard up against her sopping cunt. I thrust into my mother's arse as Grace's climax peaked and began to subside and we all slowed down and then stopped.\n\n'Sorry, Mum, I didn't mean to pull your hair like that,' mumbled Grace.\n\n'Don't apologise, darling, it was a big turn on for me. Now if John would like to remove his cock from my anus I'd like to kiss my daughter. I'm feeling very emotional.'\n\nI gently withdrew, my cock coming out with a faint \"pop\". Valerie lay down on top of Grace and they started kissing, slowly and tenderly at first, exploring each other's mouths, tasting each other's saliva. They kissed for long minutes and when they finally broke apart I could see that Grace was extremely aroused again.\n\n'Did you really have John's cock in your bum?'\n\n'Yes, darling. It's something we both enjoy.'\n\n'I've never tried it. Tony said it was dirty. He never touched me there, ever.'\n\nThere was a pregnant pause. 'Would you like to try it?' asked Valerie. 'I'm sure John would be more than happy to oblige.' Was there a trace of sarcasm in mum's tone? It certainly wasn't in the script for me to sodomise my sister; mum and I were going to have anal intercourse as a finale to the evening to show Grace the full range of our activities.\n\nGrace hesitated then: 'yes,' she said, simply, 'I would like to try it!' I got the tube of jelly from my bathrobe pocket and handed it to Valerie.\n\n'It's best if you lie face down,' she told her daughter. 'The angle of penetration is better.' Grace complied, opening her legs for her mum and exposing her own tight little pucker. A darker brown than her mother's. Valerie squeezed a blob of lubrication on her finger and started smearing it gently around Grace's anus. Then she slipped a slim, purple-tipped finger in and Grace gasped. 'Is that ok?' asked Valerie.",
        "'Yes, it's fine. It feels funny. Nice.'\n\nValerie squeezed out more lubrication and worked it into her daughter's bum hole. Then, very slowly and gently, she inserted two of her fingers, the shiny painted nails and glistening fingers disappearing inside with a faint glutinous noise. I watched, fascinated, my cock rigid, the head purple and engorged. Grace grunted as the fingers went in then moaned softly. 'Is that ok?' Valerie asked again.\n\n'Yes, I think I'm ready for John now.'\n\nMum nodded to me. 'He'll take it very gently and slowly and if you want him to stop just say so. It might hurt a little bit when he first penetrates you but it'll just be a quick sharp pain. It'll feel lovely when he's inside you. Just try to relax and let him in.\n\nI manoeuvred myself above Grace and went to penetrate her but mum reached out and took my cock. 'I'll guide you in, John.' Christ, my mother guiding my penis into my sister's virgin anus! I couldn't have written this script. It was breathtakingly erotic and I wondered how long I'd last inside her. Now I lowered myself down until my glans touched her brown pucker. Grace flinched and mum rubbed her shoulder with her free hand. 'It's alright darling.' I lowered myself infinitely slowly, feeling the resistance of her sphincter and praying that it wouldn't hurt too much as the sphincter opened and took me in. Then I felt the ring of muscle start to open and stretch and the head of my cock began to penetrate Grace's anus.\n\nShe gave a sharp yelp of pain and I stopped, ready to withdraw. 'No,' hissed Grace, don't stop. It doesn't hurt now, put it all in.' Mum let go of my penis and I pushed gently, feeling my sister's sphincter slide down my shaft and grip the end, And I felt the wonderful light, soft grasp of her rectal walls.\n\n'It's all in now, darling,' said Valerie. 'How does it feel?'\n\nGrace was breathing deeply and steadily. 'It feels ever so big. It's making me tingle all over. It's such a naughty, dirty thing to do...'\n\nMum nodded at me and I started to fuck my sister's bum, slowly to begin with then building up to longer strokes and harder thrusts. 'Play with yourself, darling,' said Valerie and Grace's right hand disappeared under her body and I felt her rubbing herself.\n\n'Oh, that feels so good!' Grace wriggled about and masturbated as mum stroked her hair and I fucked her tight little anus faster and harder as I felt my orgasm build up. Grace's sphincter started spasming around my shaft as she came and that triggered my orgasm, a blinding flash of nervous system overload, the pleasure centres in my brain working overtime as my climax pulsed through me and I squirted five, six, seven jets of semen into my sister's anus.\n\nAfterwards we cleaned up and the three of us lay together on the bed, me in the middle with my arms around my mother and sister, exhausted, deliriously happy. Grace broke the silence. 'Well that was an unexpected end to the evening. I suppose I'm no longer an anal virgin.'\n\n'I'm afraid John's going through a bit of an anal sex phase at the moment. He does from time to time. It'll pass. I blame his Grandmother.' Valerie was relaxed and happy that the evening had gone off so well.\n\n'Granny Sylvia does that too?' Grace sounded shocked.\n\nValerie laughed. 'I think she's the one who introduced John to it. He took my anal cherry too,' she added. Don't worry, he'll be back to more conventional sex in no time, I'm sure.'\n\n'There's no hurry,' said Grace. I rather enjoyed it and I'm guessing it probably gets better as you get more used to it. If John's ok with it I'd like to try it again, soon.'\n\n'I am still here,' I pointed out. You don't need to talk as if I've gone back to my room.'\n\nMother and sister both laughed. Grace was relaxed too, happy that the most difficult, most embarrassing part of her induction was over and had been a roaring success. Happy too that she'd tried and enjoyed anal sex with me and with her mother present. That she'd crossed huge lines of moral behaviour and was feeling really good about it. She raised herself on one elbow and spoke to her mother across my inert form. 'Do you think he's got one more erection in him before we call it a night?'\n\n'Only one way to find out,' replied Valerie, reaching down between my legs.\n\n***\n\nI worked hard in my home office for the next few days and slept alone. I was aware that Grace and Valerie had spent at least one night together. And it must have been obvious to Sylvia and Nina too, though neither of them said anything, at least, not to me. It was day four after Grace's initiation that mum came to see me in my office. It was ten o'clock in the morning and it was raining hard outside. I was sitting at my desk; mum took the easy chair.\n\n'I think your Grandmother's feeling a bit left out,' she began. 'She hasn't said anything specific, but there have been a few veiled remarks. She's aware of what happened with Grace and us a few nights ago.'\n\n'I'm not surprised, the noise you two were making.'\n\n'Yes, well, that's not the point. I think Sylvia is waiting to be... included.'\n\n'It's not like Sylvia to hold back,' I pointed out. 'Especially where sex is concerned.'\n\n'I know, I'm just trying to see it from her point of view. Maybe she sees the youngest people in the house having fun and she feels she can't make an approach.'\n\n'With respect, Valerie, that's bollocks.'\n\n'Well whatever the reason, I think she's a bit nervous. She very much wants to be included but she doesn't, for whatever reason, want to make the first move. So I thought it would be nice if you and Grace were to go and see her one evening. It is her house that all this is going on in after all.'\n\n'How does Grace feel about it?'\n\n'Nervous. But not as nervous as she was the first time. She'll be fine.'\n\nAfter mum had gone I sent a text to Sylvia. I should have gone down to see her but I actually was quite busy.\n\nDear Sylvia, I would very much like to come to you tonight and make passionate love with you. I would also like to bring Grace along too. How would you feel about that?\n\nIt took an hour for Sylvia to reply. I found out later that she had been in the bath.\n\nNervous, and excited. Intensely excited! Yes, bring Grace but please, please, please explain to her that I'm sixty-seven and a bit wrinkly. I suppose the lights will all be off anyway. Oh God, John, I'm so excited. Should I wear stockings? It will be alright, won't it?\n\nI replied straightaway.\n\nIt will be absolutely fine, darling Sylvia. And yes, wear stockings. \n\n***\n\nAt ten minutes to midnight, there was a tap on my bedroom door and I opened it to find Grace standing in the corridor. She'd borrowed Valerie's dressing gown and when she came in, and I grabbed her and kissed her, I realised that that was all she was wearing. For two pins I'd have thrown her down on the bed and fucked her there and then, but I was acutely conscious of Sylvia, nervous and expectant, on the other side of the dressing room.\n\n'Are you ok?' I whispered.\n\nShe nodded. 'A bit nervous, but not as much as the first time,' she whispered back. 'What's Gran like? Undressed, I mean.'\n\n'She's got a few wrinkly bits, though not nearly as much as you'd expect with a lady in her late sixties. Don't worry, she's incredibly sexy, you'll love the whole experience. And the lights will all be out, anyway,' I added.\n\nAt the stroke of midnight, by the old grandfather clock downstairs in the hall, I pulled off my T shirt and boxers and Grace slipped off the dressing gown. Naked, we passed together through the dressing room and I tapped at the door into Sylvia's bedroom. 'Come in.' The voice was barely audible. Sylvia really was nervous. We walked into the unlit bedroom. The curtains were open but it was still raining outside and there was little light from the windows. I could just make out my grandmother on her king-sized bed. Taking Grace's hand I walked over to the bed and leaned down to kiss Sylvia. She was wearing scent, a light fragrance like roses. I felt, as I often did before our lovemaking, an overwhelming love for her and a desire to make her happy.\n\n'I've brought a guest, Sylvia,' I said and as I said it Grace slid herself onto the bed alongside her grandmother and started kissing her. As my eyes adjusted to the gloom I could see that she was also fondling Sylvia's breasts through the dark-coloured negligee she was wearing. I climbed onto the bed and gently parted Sylvia's stockinged legs. Kissing my way down her inner thighs I inhaled her scent. Part shower gel and part vaginal secretions, the latter stronger as my mouth reached her pussy and began to lap gently at her labia. God she was wet. I'd read that many women struggle to self-lubricate after the menopause, but that wasn't the case with my grandmother. She positively leaked lubrication, soaking her pubic hair and running down her perineum to her anus, soaking into her duvet cover. Not at the moment though. I was drinking all that she could produce. And meantime Grace was devouring Sylvia's lips and tongue, drinking her saliva, squeezing her nipples through the satin of the negligee, totally comfortable with the incestuous threesome. More than comfortable -- revelling in it, excited, exuberant, aroused beyond measure.\n\nAfter a while Grace and I swapped over and Sylvia got to taste her own cunt juices as I thrust my tongue into her mouth, smearing the stickiness on my lips onto hers, my hand on her breast, nipple crushed between finger and thumb. She was writhing and moaning, powerless to do anything as her grandson and granddaughter pleasured her at both ends. Eventually it was too much and she started to come, digging her painted nails into my back and clamping Grace's head between her thighs, grunting into my mouth and licking my lips and chin. Then she subsided and Grace knelt up and I stopped kissing her and wiped my mouth and chin with the back of my hand.\n\n'Thank you both,' whispered Sylvia. 'I cannot describe how special that was...' She was crying softly and Grace and I lay down either side of her and stroked her and kissed her neck and cheeks and forehead and told her how much we loved her.\n\n'And I love you too and I'm sorry for being a silly old woman after you've both given me the most marvellous orgasm. So why don't you two go off back to John's bedroom and spend the night together. I'm ever so sleepy after that lovely climax and I know I've got lots of lovely times to look forward to.'\n\n'We can't just leave you, Sylvia,' I protested.\n\n'Of course you can. And don't worry about making too much noise. Everybody in the house knows the score now, and I for one would be very pleased to hear you making love. And there's no need for Grace to sneak back to her room afterwards either. You can spend the whole night together!'\n\nI felt bad about leaving Sylvia but it seemed that was what she wanted. So Grace and I went back to my bedroom and we made love four times that night, the last at seven o'clock in the morning and then we showered and went down to breakfast together and there were smiles all round apart from Valerie who said she'd hardly got a wink of sleep with all the screaming and yelling. And, just to be fair, Grace and I visited Nina that evening, although I was pretty knackered and couldn't have performed very well on my own. But that didn't matter because Grace fell in love with Nina's thick, black bush and milk chocolate labia and she spent half the night licking her out while Nina came time after time and I just kissed her full lips and sucked her big, brown nipples.\n\nEpilogue\n\nAnd that's about it, really. After six chapters (and seven years!) the story of Grandmother's Bed is more or less at an end, although I expect you'd like to know a bit about the future. The events described in chapters five and six happened about six months ago and signalled a change in the household dynamic. Sylvia was no longer the driving force for the incestuous relationships in the house. That role was taken over by Grace and me. Grace, principally. She has become insatiable. I don't know how I would cope if it were just the two of us!\n\nThe whole top floor of the house has been converted into a luxury flat for Grace and me, including a kitchen and bathroom, and we live there like a married couple. Maybe three times a week, say every other day, we go, as a couple, to visit Sylvia, or Nina or Valerie. And on those days the two ladies who are not involved in the threesome get together for a little orgy of their own. This isn't a formal arrangement but it seems to work very well. It takes quite a lot of the pressure off me, too!\n\nBut things are set to change., and I don't just mean the end of Lockdown and the resumption of our normal lives; Grace is pregnant, and we intend to keep the baby, and in this we are strongly supported by the other members of the household. Although Sylvia is horrified at the thought of becoming a great-grandmother.\n\nI hope you have enjoyed reading my story as much as I have enjoyed relating it. I will (finally) sign off now as my sister Grace is calling me from the master bedroom. She is only eight weeks pregnant but she wants to have as much sex as possible before she gets, in her words, too big and ugly. One thing is for sure -- she will never be anything except beautiful and desirable to me.\n\nJohn, 2021"
    ],
    "authorname": "Sylviafan",
    "tags": [
        "mature",
        "grandmother",
        "mother",
        "sister",
        "anal sex",
        "oral sex"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/grandmothers-bed-ch-06"
}