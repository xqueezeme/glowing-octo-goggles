{
    "title": "The Shack: Ladykiller",
    "pages": [
        "This story is one of a continuing series of connected stories known as \"Tales from the Shack.\" This is in LW because the Shack series started here, and it is much easier for those that follow the stories to find them if I keep them all together. In this case, the story stands well enough on its own, but it is very much a part of the series. I typically don't write graphic sex into this story line and that remains true here. \n\nAs part of the God Laughs Chain Story, we promised recognition of whoever got closest to naming all the authors of all the chapters of that story. Rather than just recognize them, I have included them in the story itself as characters. Keep an eye out for them, I tried to capture a little of their personalities in the characters. \n\nLadykiller\n\nThe Girls of Hollywood\n\n***\n\nFort Leonard Wood, Missouri\n\n\"Hey, Hollywood!\"\n\nI was just bringing the micro van around the first set of barricades when one of the assistant instructors, Chrissie, jogged around the corner waving for me to stop, long blonde ponytail streaming through the back of her \"Instructor\" cap. I brought my vehicle to a stop.\n\n\"Mac told me to tell you they aren't taking it seriously. They've aced everything, but they're getting cocky. It's an all-female squad of Reserve MPs, with an additional First Sergeant deploying as special protection detail for female VIPs.\"\n\n\"Cocky?\"\n\nShe grimaced. \"They're nearly all civilian police or deputies in 'real life.' They've outscored damn near everyone on everything from firing range to physical fitness tests, and they've gotten pretty arrogant about it. They aren't taking this very seriously because they're convinced they won't be doing checkpoints and searches. Mac said to take them down a couple notches.\"\n\nI nodded. \"I can do that.\"\n\n\"You need a gun or a grenade?\"\n\nI shook my head. \"That'd just screw things up. They'll have everything I need.\" Chrissie gave me a puzzled look, but she was new here. I watched her walk back up the road to the checkpoint. Not a bad view at all, but I don't play where I work, and she was married anyway. I'd seen enough of that shit go wrong to stay the hell away from attached women. Even ones that aren't acting like it. Maybe especially them.\n\nI'd gotten a message from Kimmi in the morning asking if I was interested in a \"six-to-seven-month change of venue\" for a \"special project.\" If I was eyeing Chrissie, maybe it was a good idea to take a break for a little while.\n\nI'd get to it later, right now, I had a job to do.\n\nMy vehicle was a crappy little right-hand drive micro van about the size of a box of crackers. In the very back was a ratty cardboard box with a plastic tarp, pliers, some wire, a screwdriver, a roll of duct tape and a couple of towels. I called it the \"Acme Murder Kit.\" Innocuous items on their own, but put together, it should give any searcher a little concern.\n\nAfter I'd gotten out of the Army, I'd wandered a bit and signed on with an old friend's security company. The pay was okay, but it wasn't really my main source of income, anyway. It kept my hand in, and helped keep me sharp. The job changed all the time, but for now, I was a test subject for the vehicle search exercise for advanced personal protective detail training. I wasn't supposed to be on the schedule for this today, but one of the crew was out sick, so I had to join in. The plan initially had me as a benign citizen, but that was always subject to change. Since this wasn't a graded exercise, all variations were authorized at the discretion of Mac, the lead instructor. It was always better for the students to learn now, in training, than the hard way in theater.\n\nI gave Chrissie enough time to get back, pushed the rattletrap into gear and rolled into the checkpoint, smiling at an ornate plywood sign that had the word \"Heartbreakers,\" flanked by two cracked hearts wrapped in roses. I could see the squad had an aggressive stance, muzzles were on me the minute I rounded the final bend. The only initial indication that the squad was all female was the relative shortness of the group. The body armor and sunglasses made them look more like cyborgs. Pity, really.\n\nI stopped at the stop line and a figure approached the van.\n\n\"Sir, please exit the van with your identification papers. Move slowly and keep your hands visible at all times.\" She was a Private First Class, a PFC, with a nametape that said, \"Garcia,\" maybe 20 or so. A slight Hispanic lilt to her voice. She sounded emotionless and a little bored. All in all, the approach was pretty good; she stayed out of muzzle line of her overwatch and had her weapon slung behind her. The overwatch was cautious enough; I could probably have gotten two of them, but the third would have been a dice-roll, and that would still have left nine untouched before I was gunned down.\n\nNot good enough.\n\nPatience. I could do patience; that has always been kind of my thing.\n\nI allowed them to escort me to the individual search area a few paces away from my van. Not enough paces.\n\nThe PFC had me turn around and started to search. She stopped, patted along my torso again, then backed off, and I heard her key her radio.\n\n\"I think he's wearing some kind of low profile body armor.\"\n\nThe squad leader, whose nametape read \"Frost,\" motioned Garcia back.\n\n\"Sir. Remove your shirt. Move slow or you will be shot.\"\n\nI unbuttoned, then peeled my dress shirt off slowly.\n\nI could hear the PFC suck in her breath. I'm not in my 20s or even 30s anymore, but I've been blessed with a great metabolism, I eat right, and I work out every fucking day.\n\n\"Body armor? Jesus, Garcia.\" Staff Sergeant Frost's voice was dripping with amusement. She stared at me. \"How many damn sit-ups do you do a day?\"\n\nI gave her my best smile. \"It's mostly crunches and planks. I have a home gym and way too much time on my hands.\"\n\nShe shook her head, grinning. \"I can see that.\" She nodded to the PFC to go ahead.\n\nPFC Garcia finished searching me with hands that lingered a little longer than searching a bare torso would actually necessitate, strictly speaking, then she backed off. I was instructed to sit while they searched my van with PFC Garcia watching over me.\n\nI idly wondered where my shirt had gotten to; it was a rather expensive Armani dress shirt, since I hadn't expected to be on the schedule for this, but it didn't re-appear. I perched on the rear Jersey barrier and began the subtle art of getting my guard to mimic me. It took a while, but she was eventually half sitting and half-leaning against the barrier beside me. It was late in the day, I was probably the tenth subject to go through and they were getting bored, and a bit careless. I glanced over the barrier to make sure the straw bales were still in place and watched for my opportunity. Finally, when Garcia shifted to watch the rest of the squad as they searched the van, I saw the squad leader pulling a canteen and start to drink.\n\nShow time.\n\nMove one:\n\nSlide to my feet, pretending to be off balance\u2014swing left arm out, smack PFC Garcia in the chest\u2014not as fun as it sounds with her body armor on. Hit the quick release on her M4 retaining strap and snatch it out of her hands while she falls back over the barrier onto the bales. Jam her foot into the gap between the jersey barriers, trapping her for a few moments.\n\nTwo: \n\nYank the charging handle back and let it slap forward. A round ejects from the M4; sucks to lose it, but couldn't take the chance that there'd be a round there. Never depend on the enemy to be a good soldier. Thumb the safety off. Shoot the squad leader at 15 meters. There are closer targets, but she had never been entirely off-guard, so she is the primary threat. She's also fast as hell, she's already flipped the canteen away in an arcing spray of water and is swinging her M4 up when I fire. \n\nThree:\n\nEngage immediate targets at 5 to 10 meters. Since two of them have canteens in hand, prioritize by threat level. One shot per target. They are just starting to react now, but they are still not fully grasping that this has all gone sideways on them.\n\nFour:\n\nEngage remaining targets at van. It takes three steps to \"slice the pie\" around the corner of the van and take them down. Most of them have their carbines slung on their backs to make searching the van easier. The last one almost gets a shot off after scrambling for her carbine and \"my\" M4 locks open as the magazine goes empty, but all eleven of the Soldiers are down. The screams of the kill indicators on their gear is almost deafening, a horde of deranged electronic locusts. \n\nI walked back and leaned over the barrier, yanked Garcia across it and dragged her by one foot to the back of the van as she struggled and cursed. My Spanish isn't very good, but some of the curses sounded very creative. One of them appeared to involve my ancestry and a diseased burro of particularly low moral character.\n\nShe tried to fight, but I had her duct taped into a mummy in short order and thrown into the back of the van. I went around and dragged the two soldiers from in front of the van; they glared at me and refused to cooperate by just getting out of the way, so I heaped them into a pile off to the side.\n\nI drove the 100 meters up to the village church where the observation tower was, threw my furious catch over my shoulder and went up the bell tower stairs.\n\nMac grinned at me from his chair and a seriously pissed off Valkyrie of a blue-eyed blonde First Sergeant stared at me unblinkingly after looking up from the monitors. I lowered the PFC to her feet.\n\n\"This one yours, First Sergeant?\"\n\nShe almost growled; she was clearly going to have someone's ass for this. Everyone's ass. All in all, the MPs had been good sports, so I decided to try to give them a little bit of help.\n\n\"They weren't bad. They didn't realize how dangerous an unarmed man can be; they were a little cocky and if I'd been a little slower, they would have brought me down.\"\n\nShe sighed and shook her head tiredly.\n\n\"Bullshit. They were a lot cocky, they were thinking with their...\" She paused, grimacing. \"You were never in any real danger once you made your move.\" She shifted her stare to Mac. \"This was a set-up.\"\n\nMac just laughed, so I answered.\n\n\"Of course it was set-up. It's always a set up. Here, in theater, wherever. This exercise wasn't graded so they can learn from it.\"\n\nShe stood up. \"I'm going to go have 'a talk' with my team.\" Without any further comment she headed down the stairs.\n\nI caught up to her about 15 meters out of the church, with my Garcia-mummy over my shoulder.\n\n\"Hey, Top, you forgot something.\"\n\nShe glanced at me and struggled to force down a smile.\n\n\"You can keep her. Besides, I think she's probably enjoying the ride.\" I could almost feel Garcia blushing.\n\nI shook my head and sighed in a tragic tone. \"I gotta throw her back. Too young. The game warden would take me in.\"\n\nThe First Sergeant did smile at that, so I continued.\n\n\"Besides, it would violate the Creepy Old Guy formula.\"\n\n\"And what is that?\"\n\n\"A guy over thirty shouldn't chase a woman any younger than one half his age plus seven.\"\n\nShe smiled and I could tell I was getting under her armor a bit. \"For someone like you, that eliminates an awful lot of the probably-willing, doesn't it?\"\n\n\"Yes, but the ones that are left are of much higher quality. And far more experienced.\"\n\nShe laughed out loud at that.\n\nChrissie had keyed off all the kill indicators by the time we got back, and the squad was already lined up for their ass chewing. I laid Garcia down in front of them and backed off while First Sergeant Taylor put the rest of them at attention and ripped into them.\n\nIt was truly epic. She certainly wasn't taking any prisoners, and at the end of it, she gestured down to her feet. \"Somebody get over here and unwrap Garcia!\"\n\nI watched Mac walk down to the group from the tower, and waited until the First Sergeant was completely done.\n\n\"Mind if I have them for a minute, Top?\"\n\nShe tried to glower, but I noted a slight spark of humor in her eyes as she turned away gesturing flippantly. \"All yours.\"\n\nI had them take a knee in a semi-circle after they had released Garcia from her cocoon, like a delicate pissed off butterfly.\n\n\"All right, where did it go wrong?\"\n\nA spate of accusations, mostly centered on the young PFC erupted, until SSG Frost, apparently known as \"Frosty\" held her hand up. \"My fault. I should have put two guards on you. Maybe three.\"\n\n\"That might have helped, but the others would have had to be out of a ten-foot radius and on alert. I've gotten old and slow, but I calculate every move. If you are within ten feet I can probably reach you and take you down without too much trouble.\"\n\nA lean, tough-looking Specialist, a redhead with freckles and a name tape that read \"Carmichael\" stood up.\n\n\"Sir, if you think just because we're women...\"\n\nI raised my hand, cutting her off and called over to Mac.\n\n\"I'm not a sir, never have been. Mac, how many soldiers have I taken down in hand to hand, and how many have I tried and failed?\"\n\nHe shook his head. \"You've never failed, and you have to have taken about 25 or so by now. Total kills of about 120. In the last two months.\"\n\nI turned back to the squad. \"This has nothing to do with gender; this is all about experience and training. I can close ten feet in half a second and disable most people in even less time than that. What you really need to understand is that I'm not as good as I used to be. I'm over forty years old and this isn't even my specialty. I'm actually a sniper, I just cross-trained in this. There are plenty of guys out there who are a helluva lot better than I am.\" Images of Kurt and Wolfe flashed through my head. \"There are some real monsters out there, and they don't all work for us. Russian Spetnatz, Iranian Revolutionary Guard, Chinese Special Ops, some South American groups. As for gender, there are women who could have taken you down the same way. Although most of them would have knifed Garcia rather than carry her up those stairs.\"\n\nI tried to locate my shirt, but it had apparently gone missing in the chaos after the initial massacre and nobody claimed to remember where it had gotten to.\n\nWe set up a sand table on the ground: Chrissie and I walked them through their mistakes and showed them others I hadn't exploited. We spent the rest of the day doing walk-through exercises before shutting down. I took them through every possible type of attack using Chrissie as the test subject.\n\nThe First Sergeant watched intently. \"Good decision to use Chrissie for the rabbit runs.\"\n\nI nodded. \"This way I can point out the mistakes as they make them without breaking the flow.\"\n\nShe chuckled. \"I was actually thinking that all you have on are your pants and shoes. The way Garcia and Carmichael are looking at you, another search might get a little personal.\"\n\n\"The folly of youth.\"\n\n\"Speaking of folly of youth...\" She walked over to a pile of backpacks and triumphantly pulled my dress shirt out of one. \"Carmichael!\"\n\nI reached over to take it, touched her hand and time stopped dead. I was staring into her eyes, just a couple feet away, desperately wanting to close that small gap. She stared back wide-eyed, as fixated as I was.\n\nShe blinked twice, shook her head and pulled back. I felt myself start breathing and wondering what the hell had happened.\n\nThe rest of the afternoon was a bit awkward, with both of us trying not to stare at each other. I caught SSG Frost watching us both in amusement.\n\n*****\n\nI pondered the whole experience as I dropped by Rick's Place for my ritualized drink before heading home to my condo.\n\nI was just getting ready to leave when the bartender, Kendra, put another drink in front of me and gestured at the other end of the bar.\n\n\"From the ladies.\" Except that when I looked, there was nobody there.\n\nA moment later I felt a hand touch my side and a soft Hispanic voice purred, \"Body armor.\"\n\nWithout looking back I responded. \"PFC Garcia, what are you doing out without a chaperone?\"\n\n\"She has a battle buddy, we're good.\"\n\nI recognized the aggressive redhead's voice. \"Let me guess... Carmichael?\"\n\n\"Got it in one.\"\n\nI turned and tried to look stern. \"Does your Mom know you're hanging out in bars?\"\n\n\"Top knows. It's the last weekend before Departure Day, so she's letting us get it all out of our system.\"\n\nCarmichael and Garcia slid to seats on either side of me, asking about local places to visit. I could see Kendra frowning at me, with a disapproving \"cradle robber\" look on her face. There wasn't much I could do without being rude, though.\n\nI knew the game had changed when Kendra's disapproving glances suddenly stopped, and she looked approvingly just past me.\n\nWith no warning, Carmichael and Garcia were gone and I could feel someone standing behind me. From Kendra's grin, I knew she realized the same thing I had. A very military operation, pin the attention of the opposing force, then assault the main objective.\n\n\"First Sergeant Keats.\"\n\n\"Just Anne.\" She let go and slid into the suddenly vacant chair on my right.\n\nI looked into her eyes, feeling a hint of that same jolt from earlier, and smiled. \"Tony.\"\n\n\"Frosty dragged me here. Told me it was an emergency.\" She gave an eye roll and a half grimace.\n\nI laughed. \"Meddling kids, huh?\"\n\nShe smiled, but it seemed slightly sad and slightly lopsided. \"They mean well.\"\n\n\"I guess we could at least humor them. Are you available for dinner? There is a very nice steak house near here.\"\n\nShe shot a glance over at the next table where her self-satisfied minions lurked; all of them grinning from ear to ear. \"That sounds pretty nice.\"\n\nI held her hand and guided her out to my Corvette. Garcia, Carmichael, and Frosty applauded loudly as we left.\n\nAs soon as we were alone I shook my head. \"No expectations, it's just dinner.\"\n\nShe gave a helpless gesture. \"Thanks. They're just worried about me.\"\n\n\"And they deal with this by sending you off with me?\"\n\n\"It is sort of throwing me to the wolf, isn't it?\"\n\nI gave a hapless half-shrug. No point in denying the obvious. \"So, why are they worried about you?\"\n\nShe paused, a little oddly shy, then she squared her shoulders. \"I lost my husband three years ago.\" Just from the loss in her tone, I knew what she meant.\n\n\"I'm sorry to hear that.\"\n\nThat earned me the terse not-quite-smile of someone who had heard that phrase all too often. \"It's been three years. It was a heart attack, out of the blue. Bob was in great shape, never smoked, never drank too much. Stepped outside to mow the lawn one day and that was it.\"\n\nI was still trying to figure out how to respond, but she kept on going. \"I haven't exactly had an active social life. I've been busy raising my daughter and working for the Attorney General's office in the Law Enforcement Division, but now 'my girls' seem to think it's time I got back out there.\"\n\n\"That's kind of up to you, not them.\"\n\nShe gave me appreciative smile. \"They mean well.\"\n\nI shrugged. \"We can at least go to dinner, if you want. You have to eat, anyway, and this might get them to lighten up, right?\"\n\nShe was fascinating, just enough cynicism to find humor in the same things I did. She'd been Regular Army for fourteen years, right up until her husband died, but moved to the Reserves to stabilize their then eleven-year-old daughter's life. We spent almost two hours laughing at each other's misadventures.\n\nWhen we finished dinner we headed out to the Corvette. \"Where to?\"\n\nThere was a glint in her blue eyes to go with a tentative smile. \"I was thinking maybe... if you're okay with it, we could have breakfast together?\"",
        "It was my turn to smile. \"I have a pretty full refrigerator and I make great omelets. Or you could try the house specialty, spicy breakfast noodles.\"\n\nMore certain, she finished buckling herself in, reached over and touched my leg. \"I have to try the noodles.\"\n\n***\n\nI had to ask, \"Why me?\" I shifted to look into her eyes. I would be perfectly happy doing that all day. In fact, waking up with her had felt natural.\n\nShe shrugged, blue eyes sparkling. \"Why not? I know you've looked in a mirror a few times. You could have had just about any woman in the squad. I bet Garcia and Carmichael would have come here together. A guy that looks like you do has probably done that a few times.\"\n\nI shrugged. \"Guilty as charged. But that turns into work faster than you think.\" Even three girls a couple of times, though I certainly wasn't going to tell her that.\n\nShe shook her head grinning ruefully. \"I knew it. So instead you choose a fat middle-age woman, with stretch marks and bad skin.\"\n\nI reached over and squeezed her bare hip gently. \"You're not fat and you're more beautiful than you think.\" I traced the curve of her hip with the tip of my fingers watching goose bumps rise in their wake. \"I read somewhere that the most primal attractive thing about a woman is the waist-hip ratio. It's supposedly about 70%.\" I cocked my head, examining her hip. \"And I think you are just about exactly perfect on that.\"\n\nShe gave a throaty chuckle, letting her head fall back onto the pillow. \"Damn, you really are good. You almost have me convinced you'd rather have me here than a twenty-year-old.\"\n\n\"I really do. Besides, what the hell would I talk about with a twenty-year-old anyway?\"\n\nAnne shrugged. \"I don't know.\"\n\n\"Neither do I. Probably some movie I've never seen, or a singer I don't even want to hear. But you never answered my question. Why me? If you are going to start going out again, why start with me?\"\n\nShe let a long slow breath out. \"Don't take this the wrong way, but... you're safe.\"\n\n\"You're casting aspersions on my reputation as a wolf. I've never been called safe before.\"\n\nHer smile broadened. \"I guess not. But that 'Bad Boy' stuff is why you're safe. That whole lean muscle and dark Italian thing you've got going on. You look like you just stepped off the cover of a very steamy romance novel. You're so smooth you make oiled glass look like sandpaper and you just ooze sex.\" She gave a very self-satisfied smirk. \"And you live up to truth in advertising there.\"\n\nI know I looked as confused as I felt. \"I'm Greek, not Italian. But how does any of that translate to 'safe'?\"\n\n\"I'm not explaining this really well and I don't want to be...\" She sighed. \"Look, every woman wants to try that Bad Boy fantasy, and God knows you do it just right. You probably even have a motorcycle, don't you?\"\n\nIt was my turn to laugh. \"Two, a Harley Davidson Softail Heritage and a Yamaha, for off-road.\"\n\n\"Like I said, perfect. But... I don't feel like there's an emotional risk here. You might as well carry a sign that says 'Warning: Commitment Issues.' I don't have to worry about introducing you to my daughter, or worry about if our schedules will work, or whether or not you would freak out if I decided to have another child.\"\n\nThat left me a little unsettled, maybe just a little unhappy. Even though it was pretty much true and I knew it. Though it felt a bit like she might not even be convinced. Before I could decide how I felt, she hooked one long leg over my hip and used it to pull herself up against me. \"I was thinking of a late breakfast today.\"\n\nIt had become very obvious that when she'd said, \"I haven't exactly had an active social life,\" she'd really meant she hadn't had sex in three years. She seemed intent on making up for lost time.\n\nWhen we finally did get around to breakfast, it was actually closer to lunch time.\n\nI spent the rest of the day taking her on a tour of the wineries in the area. She insisted we take the Harley, borrowed one of my black T-shirts, and left her bra on my dresser.\n\n*****\n\nI was just finishing fixing breakfast noodles at her request, late Sunday morning, when Anne came down from fixing her hair. The only thing she was wearing, other than a slightly smug look, was the dress shirt she'd rescued from Carmichael. Unbuttoned of course.\n\nWe sat eating the noodles for a while, strangely comfortable, even in silence.\n\nAnne finally finished the last bite and pushed her plate away. \"Even better than yesterday, I can see why that's the house specialty. I could get used to these.\"\n\n\"A tradition from a unit I was in.\"\n\n\"I knew it. One of 'those guys,' huh?\"\n\n\"Those guys?\" I really knew what she meant, of course.\n\n\"Normally a guy would say 'the 82<sup>nd</sup>' or '2<sup>nd</sup> Armored.' Maybe 'The Regiment,' if they were a Ranger. '5<sup>th</sup> Group' or \"my team\" if they were SF.\"\n\n\"I was a sniper with the Regiment for a while.\" I was actually in the Regiment for five years before I found a white-haired wicked jester of man sitting on the hood of my car when I came in from my run one day.\n\nShe smiled. \"But you went all the way over to the dark side, didn't you? Bob and I had some friends we came up with who went in that direction. They were Delta and you don't feel like them, but you sure as hell were something. I knew it when you took the squad down Friday.\"\n\nI held my hand up helplessly, but she just smiled. \"Don't worry about it. I'm not asking for answers. I'm just working through my Bad Boy fantasy.\"\n\nI shook my head. \"So, what do we need to do to complete your fantasy anyway?\"\n\nShe pursed her lips thoughtfully. \"Let's see. Expensive steak dinner. Check. Ridiculous sexy car. Check. Days and nights of sex. Check. Romantic motorcycle tour of the wineries. Check. More sex. Check. Exotic meals fixed by you. Check.\" She acted like she was ticking a tally sheet. \"We still have 'one last round of sex.' And my Walk of Shame in front of my whole unit.\"\n\n\"I can get you back in the hotel without anyone knowing...\"\n\n\"Nuh uh.\" She cut me off. \"That's part of the fantasy. The girls have a barbeque set up for five o'clock in the hotel courtyard, and you get to drop me off five minutes late, right the hell in front of all of them. They invested some effort in this and they expect results. I have to have witnesses that I've been bad.\"\n\nI laughed. \"Do you need an affidavit?\"\n\n\"Noooo...\" She grinned wickedly, toying with the buttons on the dress shirt. \"But would you be willing to sacrifice a shirt to the cause?\"\n\n*****\n\nWe took one long last ride on the Harley, picking up a couple of bottles of wine for her to take to the barbeque. When I finally and regretfully dropped her off with a last very warm kiss, she was wearing my shirt, untucked, over her jeans. It looked decidedly more like a strut than a walk of shame to me. The hoots and catcalls from her team didn't seem to embarrass her at all. She turned and shot me a victorious smile and a wink as I pulled out of the parking lot.\n\nIt was pretty much everything we both expected, but for some reason, it just didn't seem like it was what I wanted at all.\n\nShe'd very deliberately left her bra hanging on the headboard of my bed.\n\nEmpty. I realized I wasn't looking forward to an empty dinner table and empty bed. More specifically, I realized I was picturing a specific person in both those places. One I barely knew. One who was getting on a plane to Iraq in two days.\n\nMaybe I needed a distraction. I decided to go see Kimmi and find out what the offer was.\n\n*****\n\nArlington, Virginia\n\nThe redhead eyed me as I walked into her office, then smiled, a little crookedly as if she was laughing at a joke only she understood. \"Uncle Tony!\"\n\n\"Hey, Kimmi. How's everything going?\"\n\nShe rolled her eyes at the \"Kimmi,\" but she knew better than to waste her breath arguing with me over it. I'd babysat her so Kurt and Katie could have nights out together, and she'd always be \"Kimmi\" to me. \"Busy. No rest for the wicked.\"\n\n\"You'll never rest then.\" That was more or less certain. Not only was Kimmi a full-fledged lawyer now, she ran part of K2 Executive Services, her parents' security firm. Specializing in small discreet high-end contracts.\n\nShe nodded. \"Mom and Dad are doing fine. I saw Pogo a few weeks ago and he says everyone is doing great.\" She paused. \"I talked to Danni and I think she and Derek are planning on another kid. It's a wonder Danni can even walk. She told me Derek is 'in proportion,' if you know what I mean, and he's like...\"\n\n\"Whoa. Too much information, Kimmi. Remember, I used to bounce you and Danni on my knee when you were little.\"\n\n\"I don't think it's his knee Danni is bouncing on, but it's probably almost as big...\"\n\n\"Kimmi. Stop it.\"\n\nShe grinned wickedly, delighted at getting under my skin. \"So how's your love life there, 'Hollywood'?\"\n\n\"If it was doing great, would I be here?\"\n\n\"Hard to imagine you not getting any.\"\n\n\"It's not all about 'getting some,' you know.\" I immediately regretted saying that.\n\nKimmi's eyes widened in mock terror and she leaned over and looked out the window. \"No blood running in the streets, no fire raining from the sky. It sure doesn't look like the apocalypse... maybe I misheard you.\"\n\n\"Very funny, smart ass.\"\n\nShe studied me for a minute. \"Somebody got to you, didn't she?\"\n\nI shrugged. Kimmi'd known me too long to get anything past her. \"Don't look too thrilled, after all, how's your love life going?\n\n\"A guy started flirting with me in the grocery store the other day.\"\n\n\"Aaaannnd?\"\n\n\"He was old, creepy, and I tried to stab him with a carrot peeler.\"\n\n\"Only tried?\"\n\n\"I couldn't get the packaging off quick enough. He was faster than he looked.\"\n\n\"Sounds like a very romantic time.\"\n\nShe grimaced and pulled a packet out of her desk. \"Dad has a contract for police sniper refresher training in Afghanistan. Ten months, maybe twelve at the outside. Standard pay scale.\" She paused. \"Plus.\"\n\n\"Plus? How many plusses??\"\n\n\"One special. Your friend has to take care of the special.\"\n\nSo they wanted the Russian. That was never a good sign. \"Who's the customer?\"\n\n\"You know a Colonel named Victor Duquesne?\"\n\n\"I knew a First Lieutenant by that name, a helluva long time ago. He was in Ranger Regiment, he's a good guy.\"\n\n\"He's in command of the 12<sup>th</sup> Readiness Assessment Group.\"\n\n\"That's the new name of the old unit.\" The unit we all knew as \"The Shack,\" changed names all the time.\n\nShe nodded. \"He's acting for an OGA, not sure who, maybe CIA. He's undermanned so he's reaching out for support.\"\n\n\"That's bad. I've never heard of the Shack having a manning shortage, Howard would have never let that happen.\"\n\n\"Dad said it's from burnout, the operational tempo is too high in the Middle East, all the special mission units are being overtasked. A lot of them have expanded, but they're competing for overlapping skill sets from the same pool. It's getting hard to find enough talent.\"\n\n\"So they're contracting out? Sounds risky.\"\n\n\"Only to 'trusted agents' like you, who were in the Shack and are still connected. They also said to pass the word if you find any likely prospects.\"\n\n\"Not sure I'd do that to anyone I liked, but I'll keep an eye out. Anyways, do you have the details on the special?\"\n\n\"Not yet, but if you are a 'go,' I can get them. Let me guess, you want William as spotter?\"\n\n\"If he's available.\"\n\n\"I'll check, but he'll probably go for it. When can you leave?\"\n\n\"A week if you need me there to start the training.\"\n\n\"Make it four weeks and I'll have William's answer. You need shipping?\"\n\n\"I'll call Brooks and have Wendy take it in. Easier than that diplomatic pouch bullshit or having some Customs jackwad steal my stuff because it looks cool. I need transport to the target and out, anyway.\"\n\nShe shrugged. \"Got it. We'll front you an extra ten grand for the shipping. That's in and out. Wendy is practically doing bulk rate for us over there; just let her know it's for one of our contracts.\"\n\n\"Cheaper than a family discount?\"\n\n\"I think she's only billing us for handling and nicking DoD for the actual carrying charge.\"\n\n\"You know Wendy; happiness is getting paid twice for the same freight.\"\n\n\"Either way, DoD pays the freight for this.\" She suddenly turned grim. \"You got another letter from your mother.\"\n\n\"You know the drill.\"\n\n\"Already sent it back unopened. You know this might be easier if you just talked to her.\"\n\n\"I can't imagine any circumstances where that will ever happen, Kimmi.\"\n\n\"Yeah, I know.\" She frowned. \"I'll just keep bouncing them back to her.\"\n\n\"Do that. Maybe she'll get the hint.\"\n\n\"Does she do this to your brother?\"\n\n\"Yes, but Nicco does the same thing I do, and she doesn't have the guts to write Dad.\"\n\n\"Yeah, I'd guess not.\" Kimmi knew the whole pathetic story. My Dad, Pappas Hatzidakis, had met Daphne when he went to college in America. After a whirlwind courtship, they'd married and had me. They'd decided to chase Dad's dream of commercial fishing in Croatia, and everything seemed fine. After thirteen years, with no warning at all, she'd left me, my brother and my dad, leaving only a terse three line note and her wedding ring on the kitchen table.\n\nWe'd figured it all out later. She'd been watching the expensive super-yachts cruise in and out of the harbor while Dad struggled to make ends meet running a fishing boat. She worked in a tourist gift shop, seeing the money roll through every day. The right guy with the right words came into her shop at the right time, and that was it. It was just the three of us after that.\n\nWe hadn't heard from her again until three years ago when letters started arriving at my mailbox. I saw her name on the first one, realized that she had nothing to say that I cared to hear, and returned it unopened. In short order that became a twice a month ritual for me, then for Nicco as she started sending letters to him.\n\nKatie, Kimmi's mom, had convinced her that my \"obvious commitment issues\" sprung from the abandonment. But then, so did my official psych eval. Pogo had tossed it down in front of me grumbling about guys with giant brains and doctorates, working very hard to tell people what was already obvious.\n\nKimmi decided to change the subject. \"I'll make sure William has the data on the 'plus.' Do you need contact information for Brooks?\"\n\n\"That I have.\"\n\nShe looked over a sheaf of papers. \"Everything is on the contract; the plus is listed as 'optional subject matter expert' consultation fee.\"\n\n\"That will work. You stay safe, okay?\"\n\nShe grinned. \"I have a carrot peeler in my purse, I'm good.\"\n\n*****\n\nWaco, Texas\n\nBrooks looked at the open cases. \"You're taking all of these? You know this isn't golf, right? You don't have to take a full set.\" His Boston accent was mostly decipherable.\n\nI nodded. \"I'm training Afghan police snipers, so I need to use the same rifles they use.\"\n\n\"So off the top of my head as I go through this... You have a Romanian PSL?\"\n\n\"Two of them, there's another in the case below it. I've got an extender on the butt stock of that one.\"\n\n\"Because...?\"\n\n\"They're designed for a cold climate with bulky winter clothing, fits better for me if I put an extension on it.\"\n\nHe shrugged and looked in the next case over. \"An M16A2?\"\n\n\"We could end up training some regular Afghan Army types and some of them use the A2s for their designated marksmen.\"\n\n\"Let's see, two M9 pistols, one M4, two AK-74s.\"\n\n\"The M4 is for William.\"\n\n\"And...\" He opened the last case. \"The Russian?\" He glanced sideways at me, suppressing a flash of concern.\n\nThe Russian was a Dragunov SVD 63 rifle. Or least it had started out as one. I'd taken the original off of a Spetnatz sniper who had turned out to be not quite good enough to take me out first, never mind where.\n\nMost of the upgrades to the weapon weren't visible to the naked eye, parts carefully machined and fitted, although it had been fitted with a very different scope. Along with custom ammunition, the changes had extended the effective range of the weapon, normally about 800 meters, to nearly 1500 meters. Not exactly a TAC or an M24A3, but that was what made it important.\n\nThe Russian was a legend. Across much of the Middle East and Southwest Asia, rumors of a former Russian Spetnatz sniper-turned-mercenary made the rounds regularly. A stone killer who occasionally killed for personal reasons.\n\nSeveral officials were rumored to have been killed by \"The Russian\"; usually targets who had opposed Russian government programs or policies.\n\nThe fact that they'd usually been involved in other issues was typically ignored once it became clear that they'd been killed by the Russian. The reality was that The Russian was doing the same work, for the same people, that I always had.\n\nBrooks frowned. \"You'll need the Russian cards then?\"\n\n\"The whole nine yards. Driver's license, old military service card, a Russian passport.\" The only things I carried when operating as the Russian. Insurance for the \"customer\"; if I was killed, all the enemy would have would apparently be the body of a dead Russian mercenary. \"The Russian\" was a \"premium service\" only available to very specific customers. To maintain the fiction of a Russian mercenary, there was no safety net; no Army helicopter extraction, no military quick reaction force, no US intervention at all. I'd need Wendy's network to get in and out.\n\nThe premium service, the extra risk, meant a premium payment. Kurt had set it up that way, once I became an independent contractor. The Russian was responsible for a ridiculously healthy bank account.\n\nBrooks sighed. \"I was afraid of that; we have some assets in the region, but it will be spotty at best. Nearly all of Wendy's airlift in the area is tied down with legitimate contacts for military support.\"\n\n\"She's going to ruin her reputation for villainy.\"\n\n\"We still have Asia to fall back on. Lots of skulking and skullduggery there still.\"\n\n\"Good, I was worried, Wendy going legit is a pretty frightening thought. I'd have to sell off all my airline stock.\"\n\nHe chuckled, then pulled a small cellphone and a card out of his pocket and handed it to me. \"Numbers for each country in the region. Standard two-digit rotation code. Anybody dials the numbers on the card, they get regular shipping offices, completely aboveboard. Your codeword is 'Player.'\" He smirked.\n\n\"Wendy's a smart ass.\" I stopped. \"Can you do me a favor?\"\n\n\"Sure, if I can.\"\n\n\"Can you have someone look into a woman for me, named Anne Keats. She's a First Sergeant in the Army Reserve down in Texas.\" I ran down what little she'd told me.\n\n\"I thought you didn't do domestic.\"\n\n\"It's personal, not a target package. Just someone interesting. I want to know more about her.\"\n\nBrooks froze looking down at his notes. \"Seriously?\"\n\n\"Seriously.\"\n\n\"I'm not sure if stalking her is the best way to start a relationship. You do know that 'relationship' means you actually would see each more than one time, right?\"\n\n\"I just want to know a little bit more about her. Nothing creepy.\"\n\n\"It's already creepy, but... just some publicly available stuff, address, relatives, job stuff, that sort of thing? Not the color of her underwear...\" He paused. \"You probably already know that, don't you?\"\n\nI just glowered at him.\n\nHe smirked. \"Thought so. Leave it to you, Hollywood, to know a woman's favorite sexual position and bra size before you find out her last name.\"\n\n\"I know her last name, asshole.\"\n\n\"Wow, there's a first time for everything.\"\n\n\"Maybe that smart-ass thing Wendy has is contagious.\"\n\n\"This feels like the end of an era.\" He made a mockery of a solemn expression.\n\n\"Just get me the info.\"\n\n\"Where do I send it?\"\n\n\"The usual online drop box, I'm headed out to see my dad and brother before I head into Afghanistan.\"",
        "\"They're in Croatia, right?\" I could see him mentally checking his list of information.\n\n\"Yeah, fishing boats. I need to tell them I am going to miss the season this year. I try to get over there to help.\"\n\n\"Sounds like fun.\"\n\n\"It's a living, sort of.\"\n\n*****\n\nOpatija, Croatia\n\nThree days later, I walked in the front door of my brother's home without knocking. It was my home, too, at least while I was in Croatia. It was never locked, anyway.\n\nThe bus had gotten in early, as usual, since bus service in Croatia is typically very good. It was Saturday morning, off-season, so odds were that Nicco was still in bed, and there was no point in waking him. I headed for the kitchen and began pulling down the coffee. Just as I finished pulling a couple of mugs down, somebody poked me gently in the ribs.\n\n\"Nicco, I didn't know you were up or I'd have started the coffee myself.\"\n\nI turned to look at my admonisher. A deeply tanned woman with light brown hair and matching eyes, who appeared to be wearing only an oversize maroon Texas A&amp;M t-shirt looked at me in shock. \"Hi, I'm Antoni, or just Tony. Nicco's brother? Maybe he mentioned me?\"\n\nAt first I thought she was going to scream, but she relaxed after she stepped back a couple of paces. She blushed. \"He's talked about you a lot, but he didn't mention you were coming out. I thought you were Nicco.\"\n\n\"That's pretty obvious. I probably should have called to let him know I was coming so he could have warned you.\"\n\n\"I came down here to call my Mom, she's in California, managing the night shift at the hospital. She worries about me. I saw you and thought I must have woken Nicco up.\" She blinked. \"Oh, yeah, I'm Kayla.\"\n\n\"Nice to meet you, Kayla.\"\n\nShe started to say something then looked down at her own bare legs and blushed again. \"I think I'd better get dressed.\"\n\nAs she ran up the stairs, she tried to keep her T-shirt pulled down, but it was pretty obvious her golden-brown tan was all over.\n\nOf course it was. Kayla was obviously the Summer Girl. Every year, for almost the last 20 years, there'd been a Summer Girl. Nicco had realized he and Dad would never do more than scrape by fishing for Bluefin, Amberjack and Mahi-Mahi. So he'd gone a different route, enlisting in Marine Biology research programs and helping out with nautical archeology programs. Along the way, it'd turned from volunteer work, to paid work, to subject matter expert support. Nicco flew back to the States to make presentations and offer advice at the big conferences.\n\nEvery year a post graduate student or doctoral candidate came out to do some kind of research project. Always an unattached female grad student or doctoral candidate. Nicco, like me, was all too obviously a bit of a wolf, and as Anne had said, every girl has a bad boy fantasy. A rugged Greek-American fisherman, living in beautiful Croatia seems to qualify. It rarely took a week before the Summer Girl was sunbathing nude on the deck of one of his little boats as he ran her out to the sites to look at whatever she was there to see. That was about three days longer than it usually took them to end up in Nicco's bed. They enjoyed the hell out of the summer, Nicco made damn sure they were successful as hell, and the summer ended with a scattering of tears and fond memories as the Summer Girls headed off to her future.\n\nIt was a tradition of sorts, and it had lasted so long that some of the Summer Girls were running programs at major universities and Marine institutes. Those former Summer Girls, fondly remembering Nicco and the success they'd had, both personal and professional, seemed intent on directing the best of their unattached female students in the same direction.\n\nBut things had changed, I could see that, and I had some questions for Nicco when he came down.\n\nWhen he did, I handed him a cup of coffee. After our usual raucous greetings, I explained why I'd come by. \"I'm not making it for Bluefin season this year, I have a contract.\"\n\n\"Iraq or Afghanistan?\"\n\n\"Afghanistan.\"\n\n\"Rather you were there than Iraq.\"\n\n\"Me, too.\" I sighed. \"So... Kayla?\"\n\nHe nodded. \"She was here last summer to finish her doctorate and when I went to that big conference in January... well, we sort of hooked up.\"\n\n\"I can see that. When is she due?\"\n\n\"September.\" I could see pride etched on his face.\n\n\"What'd Dad say?\"\n\n\"He wanted to know when we were getting married.\"\n\n\"So when is it?\"\n\n\"It was going to be in August when you came out. I need you to be my best man, Tony. I'll talk to her, see if we can do it while you are here.\"\n\n\"I've only got a couple of weeks.\"\n\n\"We can do it.\" The Last Summer Girl stood on the stairs, wearing a light-yellow sundress. \"I know how important this is to you, Nicco, and that makes it important to me. I'll call Mom and she can head straight over here. She has her passport ready, anyway, and I'm her only baby.\"\n\nThe way Nicco looked at her it was clear how he felt about her. She came on down and slid into his lap while he ran his hand over the curve of her stomach. She all but purred, wiggling back to nestle tighter into him. She looked at me. \"When I realized I was pregnant, I called Nicco, but I didn't really know what to say. I didn't even manage to tell him, but he was knocking on my door three days later.\"\n\nNicco shrugged. \"I just knew.\"\n\nKayla sighed as he ran fingertips over her neck. \"With my doctorate done, it was easy to get on the plane with Nicco and just be here.\"\n\nWe spent much of the morning just talking over things; Dad, it turned out, had gone into Zagreb for a couple of days to visit some friends. I did manage to get Kayla to accept my offer to pay for her mother's airline ticket, claiming it as the duty of the Best Man.\n\nNicco brought up our mother. \"You still getting letters?\"\n\n\"Every couple of weeks.\"\n\n\"You'd think she'd get the message.\"\n\n\"I don't know, I thought sending the letters back would make it clear that we don't want anything to do with her.\"\n\nNicco frowned. \"I think, someday, we're going to have to deal with her. A month ago, we saw one of those custom superyachts, a 200-footer. I'm almost certain it was her standing on the deck watching me while we pulled survey lines.\"\n\n\"Could have been anyone, it's been a long time.\"\n\nKayla straightened up and looked at me. \"The yacht was named the Daphne. It had to cost over 30 million euros. I looked it up, it's registered in Monaco.\"\n\n\"Sounds like she got everything she ever wanted. Maybe she can come and watch me work next time.\" I was trying to keep the anger out of my voice, but some may have crept through.\n\nKayla pulled herself tighter to Nicco, but it looked less clingy than like she wanted to shield him. The way she'd looked at Nicco when he mentioned our mother, she obviously knew our history. He relaxed a bit then smirked. \"Yeah, I'll suggest that if she corners me.\"\n\nKayla broke in, dead serious. \"She'll never corner you alone, and I have some suggestions for what she can do if we ever do have to talk to her. I'm sure she won't like them.\" In that moment I realized that Nicco, Dad, and I hadn't been the only victims of my mother's actions. Kayla had to be terrified that Nicco would never be able trust her completely.\n\nI grinned at Nicco. \"You know, if only she had a sister, she'd be perfect.\"\n\nIt took Kayla a second to catch that, but when she did, I was rewarded with an incredibly warm smile. \"Sorry, I'm one of a kind.\"\n\nNicco nuzzled her neck. \"You certainly are.\"\n\n*****\n\nBy the time Dad arrived back in town, he was only twenty hours ahead of Kayla's mother. Of course, the first I knew that he was in town was coming back from looking over the boats and finding him at the kitchen table at Nicco's house with a bottle of ouzo in hand. \"Antoni, why didn't you call ahead?\"\n\n\"Sorry, Dad, you were already out of town. I got the contract and headed over as soon as I could.\"\n\nHe poured me a glass and slid it over. \"You meet her? I think Nicco is damn lucky.\"\n\nI took a sip, letting the anise flavored liquor burn its way down. \"Me, too. She tried to pass me five hundred dollars to give him a good send off.\"\n\nDad laughed. \"That'd buy a lot of rakija.\"\n\n\"I told her I have it covered, Nicco just wants to have the guys on the crews drop over for dinner anyway. He says his life has been one long bachelor party, and it's about time for it to end.\"\n\nDad smiled. \"Marko said it would be strange not to have a Summer Girl around anymore. I told him he was getting it wrong.\"\n\n\"I know, there will always be a Summer Girl. But it'll be Kayla from now on.\"\n\n\"She's smart you know.\"\n\n\"She has a doctorate, Dad, of course she is.\"\n\n\"Not that way, she's smart about Nicco. He had already told me he wanted to go back to see her after the conference, that he thought, maybe he'd finally found someone.\"\n\n\"Then she came up pregnant.\"\n\n\"She's not like that, she couldn't lie to him, she has no deception in her.\"\n\nI pondered that for a second. Maybe he was right, maybe she wouldn't lie to him. But I suspected the positive pregnancy test wasn't exactly unwelcome.\n\n*****\n\nThe wedding itself was beautiful, though to me it was more of a formality. Nicco and Kayla had already made their choice and it was permanent and irrevocable. Everyone, including the mother of the bride, who hung on Dad's arm for stability, was more than a bit hungover. Except for Kayla, but that made the Summer Bride shine all the brighter by comparison.\n\n*****\n\nAfghanistan\n\nThree weeks later, I was headed in. Flying in to Afghanistan on the CH-53 saw us flying at night again. Rumors of Stingers, or at least Russian SA-7 anti-aircraft missiles in insurgent hands, made it \"better safe than sorry\" to bring aircraft in at night.\n\nIn the dim red light, I studied the PFC sitting in the web strap seat across from me. She was just a kid, really. She was downright scrawny, probably weighed less than a hundred pounds, even in full battle rattle. Stringy greasy-looking hair stuck out from under her too-large helmet and she had a rash of pimples that had erupted across her cheeks and nose, stark against her pasty skin. She definitely had the look of one of the unpopular girls who are uncomfortable showering with the other girls in PE class.\n\nShe was clumsily trying to hold an ancient battered M16 upright in front of her; it was certainly older than she was and just as certainly shot out. The kind crap you keep on the books to round out the numbers and only issue to someone who you are certain will never fire it.\n\nJumpy and terrified, she started at every odd sound, every weird shiver of the CH-53 in which we were riding. She managed to turn even paler when she noticed hydraulic fluid dripping down the inside of the chopper, probably not realizing that it's when a CH-53 stops dripping fluid that you are in trouble. A CH-53 only stops dripping fluid when it's completely out.\n\nShe glanced up at me and just as quickly looked away, even more frightened. She'd almost certainly heard the crew and other passengers whispering about me, and even if she hadn't, the six days growth of beard, the unmarked, non-standard uniform, the black and brown shemagh draped around my neck, and the Romanian PSL rifle I had wrapped in my arms made it pretty clear I wasn't \"normal.\" That's why she was sitting where she was; even the infantry squad on the bird instinctively followed one of the major laws of combat survival: Stay well away from anyone obviously crazier than you are.\n\nBy virtue of her lack of size and rank, she'd been pushed and shuffled down to the tail end of the bird, ending up sitting across from me. I watched her rock back and forth rhythmically, trembling with each odd sound of the helicopter. She clearly knew she didn't belong here, knew that, whatever was back in the world, however miserable, boring or unhappy it had been, was better than this. She was almost certainly right about that.\n\nI'd just about decided to go ahead and nap out when I saw the crew chief pushing back thought the helicopter, stopping to tell each passenger something. He finally reached the back and leaned over to yell in my ear. \"We have to put down. There's a fire warning light and we're too far out to risk trying to run the rest of the way. Rally 100 meters off the nose of the craft.\"\n\nI watched the PFC's eyes go perfectly round. She was absolutely stricken and near panic. Just what we needed.\n\nAs soon as we set down, the ramp went down and doors opened, letting us evacuate. I saw her out of the corner of my eye, starting to turn the wrong way in the darkness. I really, really didn't feel like babysitting, but there was nobody else paying attention.\n\nI caught her arm and forced her around. \"Follow the chemlight.\" I pointed her at the dim green glow, and she proceeded to trip over her own feet almost the entire hundred meters, only staying upright because I kept catching her arm. The crew chief was trying to maintain some semblance of control over the disorganized mob when we finally reached them. The infantry squad had already snapped their NVDs, Night Vision Devices, down and headed out to set up perimeter security.\n\nI realized I was still holding the girl's arm. She was bent partially over whispering something over and over. \"This isn't happening. I don't belong here. This isn't happening. I don't belong here. This isn't happening. I don't belong here...\"\n\nI could hear the panic getting a grip on her. The last thing I needed was to be stuck here, while everybody looked for her if she rabbited.\n\nI closed my eyes and counted to ten before speaking, reminding myself that patience was my specialty. \"Stop.\" It took two tries because I was whispering to avoid a scene, but she eventually looked up, her face pale and eyes wide. \"Just stop.\"\n\nShe straightened up, but in the dim light, I could see tears running out of the corners of her eyes. \"I don't belong here. I just did this for college money. I'm really just a French fry cook at McDonalds and...\"\n\nGod, I didn't need this. \"Stop it. You are here. None of that matters.\" I tried to keep the annoyance out of my voice, but I could see some of it had leaked through.\n\nShe flinched like I'd slapped her, but kind of kept it together, lower lip trembling. Shit. \"Come here.\" I pulled her gently away from the mass of people, and led her a couple steps in to the darkness. \"Look up.\"\n\n\"What?\"\n\n\"Look up. Look up at the stars. You'll never see them like this anywhere else.\"\n\nShe stared for a minute, blinking, sniffling and wiping her nose on her sleeve, then becoming more still as her vision adjusted and more and more stars appeared. Her breathing slowed. \"Oh.\"\n\n\"Forty years from now when your granddaughter asks what Afghanistan was like you can tell her how beautiful the stars were.\"\n\nShe gazed upwards and I could hear the awe in her voice. \"They really are beautiful, aren't they?\"\n\n\"You'll never see them like this in any normal place, only in places like this. There are no cities, no light pollution here. It's a whole different world.\"\n\nI could almost hear her heartbeat slowing down. \"I'm sorry. I just don't belong here, and it got to me. I don't belong in the National Guard. I was supposed to get out, but we got deployment orders before they finished processing me. If they'd have had anyone else to bring they would have. I'm not good at any of this. I can't shoot, I can't do anything right. Nobody in my unit wants anything to do with me. Everybody says I'm a jinx.\"\n\nI could hear a bit of the fear creeping back into her voice and decided to head it off with a harmless little white lie. \"Well, Jinxy, welcome to Afghanistan, I'm Tony, but everybody just calls me Hollywood. You're wrong about belonging here, though. You know why you were in the back of the bird with me?\"\n\nShe shook her head.\n\n\"They can tell. They all can. People like you and me? We're different. We belong here, and they don't. People like us do what we have to do, things they can't do. The rest of them can tell and that makes them nervous.\"\n\nShe hesitated, desperately trying to figure out what my line of bullshit even meant. I wasn't even sure, so I was glad she started talking, puzzlement in her voice. \"I don't know, I'm no good at anything. Except running maybe, and working my radio nets. They don't really need me.\"\n\n\"You're a commo dog, Jinxy? Everybody needs commo.\"\n\nShe gave me a sour look. \"I'm only here to fill out numbers. My unit is air defense artillery, but we were retrained to pull escort duty.\"\n\n\"You'll do fine Jinxy. People like us don't die in places like this. We make other people die. We're not like the Fobbits here.\"\n\n\"Fobbits?\"\n\n\"Soldiers that never leave the Forward Operating Base, the FOBs. We used to call them REMFs. Rear Echelon Mother Fuckers, but they caught on to that, so now we call them Fobbits. Hiding in their holes, afraid to come out. They're not like me and you.\"\n\nShe looked at me startled, but before she could ask the crew chief signaled us back aboard the craft. I slapped her gently on the arm and grinned. \"Let's go, Jinxy, our chariot awaits.\"\n\n*****\n\nI had to wait another week for William, while living in a contractor compound on base. For all the stories, reality is that real trained snipers rarely work alone. That question had been mostly settled in World War Two; snipers with spotters are just far more effective.\n\nWilliam was an exceptional spotter, and we'd developed a rapport that made us particularly effective as a team. My Ugandan born partner was also better at field craft than nearly anyone I'd ever met, which was odd, given that he'd grown up in cities, even after coming to the States as a child. His calm demeanor and patience also made him an excellent teacher, which was good, since we're going to train the Afghan police snipers how to work with spotters as a more effective team. At least until our special target cleared cover.\n\nPatience. I could do patience; that has always been kind of my thing.\n\n*****\n\nI walked across the DFAC, the mess hall, tray in hand. It was always a pain in the ass at peak rush and, as usual, there were hardly any seats available. The place was a sea of uniforms.\n\nI saw one seat and started for it, then chuckled. There she was, directly across from the empty seat, head down and almost crouched over her food. The squad she was eating with was doing their level best to ignore her. It was clear they'd been ordered to let her eat with them, and I suspected they'd \"forget\" to include her on anything they thought they could get away with. Nobody was across from her because nobody wanted to talk to her.\n\n\"This seat taken, Jinxy? Mind if I sit down?\"\n\nShe looked up, hair still a mess, and acne still blazing across her face. \"No. Go ahead.\"\n\nThe guy to my left, a burly Specialist, glanced at me, then recoiled. I let myself shoulder him aside a bit as I adjusted my rifle. \"Sorry about that. They always make these damn seats too close together.\"\n\nHe started to say something but I deliberately turned my back on him and faced her. I could sense the rest of them trying not to stare. \"Get any star gazing done lately, Jinxy?\"\n\nShe caught her squad's reaction to me. The girl they'd tagged as a loser was somehow tied to one of \"those guys.\" She suppressed an appreciative smile. \"No, we've been too busy doing drills and we haven't had time.\"\n\n\"You gotta get back outside the wire, that's where you can see them best.\"\n\n\"I know, Hollywood, it's beautiful out there.\" There was a wisp of reality in that; those couple of minutes staring up at the stars had probably been as good as she'd had it here so far. Maybe as good as she would ever have it here. \"Maybe I can once we settle in.\"\n\n\"Remember to stop and smell the roses once in a while. All work and no play will make Jinxy a dull girl.\"",
        "\"I'll get out there, I promise.\" She gave me a slightly lopsided smile, pleased at the way her squad was falling into confusion over my presence.\n\nA shadow fell across my plate and she suddenly froze, staring wide-eyed over my shoulder. So were the other soldiers on her side of the table.\n\n\"Shit. Is there a very large, very black man behind me? About the size of a grizzly? With scars like stripes on both cheeks?\"\n\nShe nodded slowly.\n\n\"Never met the bastard. Jambo, William.\"\n\nA large almost coal-black hand fell on my shoulder. His deep voice had the lilt of Swahili built right into it. \"Sijambo. Hollywood. I knew I'd find you here. Just look for the Pretty Girl and there you are.\"\n\nThe \"Girl\" blushed, I doubt she'd ever been called pretty before. Out of the corner of my eye, further down the table, I could see a blonde PFC who was all-too-obviously used to being \"the Pretty Girl\" blink in confusion.\n\n\"This is our sister, William.\"\n\n\"Ah. My mistake. Greetings Little Sister, I am your long-lost Brother, William.\" I looked over my shoulder at him. He was grinning from ear to ear.\n\nThe girl looked up at him and managed to say. \"Greetings... William. I'm...\" She paused, thinking, then smiled. \"Jinxy.\"\n\nI shook my head ruefully. \"With William it's 'jambo' and 'sijambo.' It's Swahili. William thinks we're all in a damn Tarzan Movie.\"\n\nWilliam nodded sagely. \"I am Bwana's number one gun bearer.\" At the last of that he couldn't keep a straight face and chuckled.\n\n\"You're an ass, William.\" I rolled my eyes. \"See what I put up with, Jinxy? Someday all this can be yours, even the jackasses.\"\n\nI watched William's grin widen, he'd picked up on my little game of messing with her squad a bit. I tapped my tray with my fork. \"We are trying to eat here, William. Get a plate and we'll find you a seat.\"\n\n\"I understand, Bwana. But time does not stop for us. We have, as Pogo used to say, places to go and people to kill.\"\n\n\"Pogo still says that every now and then.\"\n\n\"So I hear. Nonetheless, family gossip will have to wait. We must be off.\"\n\nI held my hand up in surrender. \"Sorry, Jinxy, I'll try to catch up with you later. No rest for the wicked.\"\n\nShe smiled with a little more confidence than I'd have expected. \"See you later, Hollywood. Nice to meet you, William. Make sure you take some time to look at the stars, too.\"\n\nAs we walked away, William glanced back. \"I'd say she's not your style, Hollywood, but you have no style.\"\n\n\"Not like that, William, just ran into her on the way in. Just a girl to say 'hey' to now and then.\"\n\n\"That's not like you. Hollywood talking to a girl and not playing her? You're not the kind to take in strays. Are you getting old on me?\"\n\n\"I'm not the only one here with a couple of grey hairs.\"\n\nHe chuckled. \"And a new grandchild, so let's do this right so I can get back to my wife and settle down. This is my last one, even for you. Took six months for my leg to heal after that shit in Nigeria.\"\n\n\"Leave it to you, Brother. Get shot at for six weeks solid and then get an infection from a thorn. That contract was your idea anyway. That was like being trapped in a fucking Tarzan movie.\"\n\nWilliam's low chuckle erupted into laughter. \"It really was.\"\n\n\"I should have never bought you those fucking movies. I need to go down there and burn the damn things.\"\n\nWilliam slapped one huge arm across my shoulders. \"Namono burned the VHS tapes years ago. So I bought them all on digital download.\"\n\n\"At least she has good taste. Except for marrying you, of course.\"\n\n\"Of course. Still, Namono was pissed that I took this contract, so you probably shouldn't eat any food she offers you for a little while. Maybe five or six years.\"\n\nI laughed, William's wife Namono was a great cook and smart as hell, but she had a temper when it came to William getting hurt. \"That was hardly my fault, but I'll keep it in mind. How is everything in Florida anyway?\"\n\n\"It's good, we're finishing the new house, that's the only reason Namono let me take this one. Everything will be done and paid off.\"\n\nWilliam's family had maintained ties in Uganda and when he went back to visit one time, he'd run into Namono at a wedding. It was, he said, like being struck by lightning. Less than two weeks later, I'd flown out to be at his wedding.\n\nWe finally reached the office and sat down.\n\n\"Did Kimmi get you a target card?\"\n\n\"No. They had her give me this.\" He held up a small smartphone.\n\n\"And what's that supposed to be?\"\n\n\"An encrypted satellite phone. It doesn't have any memory, just displays what is sent to it. This is how they'll tell us where the target will be and when it will clear cover. And who it is.\" He shook his head. \"The target was involved in the torture and execution of Russian POWs in 1985.\"\n\n\"The Badaber uprising?\"\n\nWilliam shrugged. \"They didn't say, but that makes this a good target for 'The Russian,' doesn't it? The only other info is that this is about preventing transfer of some kind of special weapon to a terrorist organization.\"\n\nI nodded. \"We don't need more than that.\"\n\n\"Like Kurt always says, 'I'm a hammer, not a carpenter.'\"\n\n\"Exactly. We just have to bide time then. I have a whole list of units that have requested training.\"\n\nHe grinned. \"That's always enjoyable anyway.\"\n\n***\n\n\"Shooter, by eye, go to pinnacle rock.\" William's low voice only carried the few short inches to me.\n\n\"Contact.\"\n\n\"From pinnacle rock go to six o'clock, approximately ten mils.\"\n\n\"Contact.\"\n\n\"Go to glass.\"\n\n\"I have target kneeling under red rock overhang, carrying AK-47 and handset. Brown cap. Clump of brown grass at the six o'clock...\"\n\n\"That is your target. Check parallax and mil.\"\n\n\"1.63\"\n\n\"Check level. Holdover 2 point 5.\"\n\n\"Ready.\"\n\n\"Right. Point 6.\" The wind call was the command of execution and a second later, with no anticipation or expectation, my rifle fired and the figure tumbled from his perch.\n\n\"Center hit.\"\n\nTwo more targets were designated and the bomb emplacement team was eliminated.\n\nThe Afghanistan National Police sniper team next to us watched carefully. The next target we hit would be theirs.\n\nWe'd been training them for two weeks, and they'd finally began to understand that the easy part was pulling the trigger. Sniper-spotter communications is always where the team can increase lethality.\n\nMost people think snipers are all about individual shooting skill, but the reality is that there's a lot more to being an effective sniper than being a good shot. Among other things, William designated targets, calculated the variables that changed the ballistics and made the wind call.\n\nAs the ANP team went down to collect information from the dead guerrillas, William and I provided overwatch.\n\n\"We need to get the Russian out again tomorrow while we have the chance, the special could clear cover any day.\"\n\nI nodded. We scouted locations ourselves and used the opportunity to dial in the Russian under different conditions. At long ranges, every change in temperature, humidity and air density makes a difference. Every specific known change could be plugged into William's ballistic calculator making it more and more accurate for that rifle with that type of round.\n\n\"The spooks say there's a couple of ridgelines fifty miles to the south with a jump in activity, they can put us on the ground there.\" We got free rides in exchange for acting as scouts on oddball activity, some kind of behind-the-curtain deal someone had struck for us. A two-man team scouting alone in hostile territory sounds riskier than it really is; with gunships only minutes away most of the time, we always had the cavalry on call. At least for now. It wouldn't be that way with the \"special.\"\n\nWe watched the ANP team picking their way back up the ridgeline to us. \"If it's a good target zone, we can take this team out in three days.\"\n\n***\n\nThe next day, I glanced along the row of vehicles waiting to head out the gate as we waited to be passed onto the airfield. It was a convoy of trucks with an escort of a few up-armored vehicles, mostly M1114 HMMWVs with armor and turrets. It was obviously a bit of a cluster fuck as their inexperienced escort crew did their last few checks prior to rolling out. Diesel fumes made the roiling air nearly unbreathable.\n\nA fraction of a glimpse keyed me on the lone figure, standing slightly apart from her squad near the middle of the convoy. She was awkwardly holding her M16 and her helmet was way too big; it made her look like a thumbtack. Whatever the squad was discussing, it was clear nobody wanted her opinion. Eventually I saw her trudging alone toward the lead vehicles. It didn't look like anybody there wanted her around either, but they eventually waved her aboard the second vehicle from the front, some kind of hillbilly armored abortion of a truck and a pile of boiler plate\n\nI shrugged to myself. Jinxy had to go out sooner or later, and the convoys only rarely encountered anything besides harassment IEDs, those nasty roadside bombs everyone had started using. She'd almost certainly be fine. Something scratched at the back of my skull, but I reminded myself that strays weren't my problem.\n\nThe scratching at the back of my skull was still there as William and I loaded up on the helicopter.\n\n*****\n\nIt'd been several hours since insertion and we hadn't even made contact; the intel had pointed at an infiltration route that had been in use steadily for the last several days, but we'd found no targets.\n\nPlenty of sign, and all of it very recent, no more than a few days old, but no targets.\n\n\"Looks like everything was headed over the ridge here.\" William pointed out tracks. \"That's a lot of movement, maybe a couple hundred men, but it's been over most of the day.\"\n\nSomething about it bothered me. \"There's nothing worth hitting here, not with those numbers. Hard to supply that many for very long. No villages, no wells...\"\n\n\"There's the main highway in that direction, maybe a half mile or so.\"\n\nA sudden series of sounds, ominous and hollow blasts, punctuated his statement. The hair on the back of my neck stood up. I was already three steps along the trail before the echo died. I could sense William's shock, but there was no time to stop; the scratching in the back of my skull was suddenly frantic.\n\nLesser, popcorn-like sounds built in front of me as I hurtled along the trail, tracing the highway from the base in the map in my head. It was perfect timing for an inexperienced escort leading a convoy. It took seven long minutes, but I crested the ridge over the highway and looked down into the valley.\n\nThe convoy was stretched around two steep turns, nose up against an almost hairpin bend to my left that I couldn't see around. Most of the guerrillas were on the other side of the road, where the steeper incline made it difficult for the men firing up from the trapped convoy. There was really one good firing position on my side occupied by two guerrillas who were firing steadily down at the convoy. For them, the 800 meters to the convoy was a very long shot. They were wasting their ammunition and yelling thankful prayers when they should have been keeping the \"back door\" shut.\n\nThe door I'd just come through. I pulled my M9 and fired twice, once into the back of each skull. Deafened by their own gunfire, none of the other attackers noticed. They were focused downward, where columns of smoke rose from each end of the convoy. Daisy chains IEDs had been used to hit the front and the tail of the line of vehicles, trapping it in the narrow steep walled valley.\n\nAt first I couldn't see the guerrillas' strategy. Even unable to move, the crew served weapons of the convoy would be able to hold them off until gunship helicopters arrived to end the attack. There'd, no doubt, be casualties, but certainly not enough to offset the losses of the attackers once the helicopters arrived.\n\nThen it dawned on me. They were trying to exterminate the whole convoy. It'd been a favorite tactic in their war against the Soviets; pin the convoy, swamp it with gunmen, slaughter the convoy, and withdraw into the hills before relief could arrive.\n\nThat hadn't worked particularly well with NATO forces. More air support, with faster reaction time, had made the operations uncertain, and the American tactic of turning, engaging, and pushing directly into the ambush at full speed had made it virtually suicidal.\n\nBut this time the convoy couldn't do that; it was trapped, hemmed in on both sides by steep valley walls. And the number of attackers was wrong, there couldn't be more than a hundred out there on the opposite wall of the valley, which made me look back at that bend very closely. If the remaining men pushed down the length of the convoy from there, they could engage each crew at point blank range, preventing the gunships from engaging. I could see a man high up on far side, overlooking the bend talking into a handset. The deference of the guerrillas around him and the way he was gesturing made it obvious he was in charge of the operation.\n\nI looked at the head of the convoy where the lead vehicle sat smoking against the valley wall, a body slumped in the turret, the M2 machine gun slewed up towards the sky. Further back, the second vehicle had come to rest with tires blown and radiator fluid spilling darkly into the dust, hood crumpled. A lone scrawny figure in an oversize helmet was crouched by a blown tire, trying desperately to shrink on itself. Alone, with only the dead for company.\n\nI could feel the storm inside me. Jinxy was just a girl who didn't belong here, and I'd told her she would be fine. I'd told her that nothing would happen to her.\n\nIt wasn't even a lie. It was just a bullshit statement tossed off without thought to make my day a little easier. I'd done it without any thought of consequences.\n\nI snapped the bipod down and shoved the body of the guerrilla down the slope.\n\nWilliam dropped in beside me, pushing the other body out of the way and setting his spotting scope up rapidly and precisely. He wasn't sure what I was doing, but William would always have my back, just as I had his.\n\nI glanced through the scope at her. I could see her lips moving, talking to herself again, terrified almost beyond reason. She was praying. I could tell, I'd been there myself. When everything goes wrong and you know you are about to die, you pray. You pray to God like you learned in Sunday school.\n\nWhen no answer comes, you start praying to anyone that will listen. And sometimes they do. Sometimes it isn't a Jehovah or Yahweh that hears you. Sometimes the Old Gods do. Sometimes the Old Gods answer.\n\nPeople always get it wrong. The Old Gods in the myths we read in school are always made out to be slightly silly, a little goofy. But they were actually sources of sheer terror. Poseidon brought raging storms and crashing waves. Ares was a bloodthirsty killer who reveled in death, battle, and the stench of blood. Frightening, monstrous beings with immense power, unspeakable rages and towering jealousies.\n\nThe most terrifying of all the Gods was Zeus. Striking from the top of Mount Olympus, hurling bolt after bolt of deadly lightning, against which there was no defense, no chance of survival. \n\nI felt myself settle in, cold calculation trying to layer a blanket of calm over my thoughts.\n\nI'd lied to her. She was just a Girl and I'd told her she would be fine.\n\nThe howling sound in my ears suddenly broke into the silence of a true storm.\n\nFear me, for I am a Wrathful God.\n\nThe first shot took the obvious commander down at nearly 1200 meters, his body tumbling down the rocks toward the convoy. It took a second, the cacophony of explosions and gunfire all but covering the voice of my weapon, but this sound, this rifle, was different, and some of the older, more experienced, guerillas began to turn and scan the ridgeline.\n\nI am Zeus, Wielder of Lighting, and this Girl is mine\n\nThe next shot disintegrated the head of an insurgent who had been trying to line up an RPG on the vehicle where The Girl huddled crying. The warhead spiraled crazily up into the air, eventually coming down, but where it hit didn't matter to me, so long as it was not near The Girl.\n\nWilliam realized what I was doing, who I was protecting, and began to feed me targets.\n\nFear me, for I am an Unforgiving God and this Girl is under my protection. \n\nAnother insurgent, trying to lead a rush too close to my Girl, lost his heart and much of his chest for his trouble. She saw his breast erupt in a spray of blood and looked up, searching. I could see her fear was giving way to something else, a tentative feeling that she probably didn't even understand.\n\nA sign. She needed a sign. I could do that. That's what Gods do. Another old man, loudly rejoicing to his own God was within her line of sight. He was clearly a True Believer. I waited until her eyes settled on him. Hoping. Waiting.\n\nFear me, for I am a Jealous God.\n\nMy round took him through the side, spinning him around and sending his body crashing to the road. Wrong or right in his Faith, the True Believer would know for certain now.\n\nThe Girl's chin came up and I could see her jaw set through my scope. She looked at the bend, listening, then glanced down at the rattletrap M16 at her feet and shook her head once, leaving the useless thing there. She unsnapped the too-large helmet and let it fall to the dirt, fixed me with her stare for an eternity, then turned and sprinted towards the feebly smoking hulk of the lead vehicle. Part of me feared for her, but part of me understood. She had to prove herself worthy; this risk was her offering.\n\nOdysseus offered a ram to Zeus in vain, but it was done for selfish reasons. I would not ignore this offering.\n\nTwo more gunmen, designated by William, went down as they tried to fire on her, the movement and recoil barely registering as I watched her run, fleet footed and sure. Another died as she leapt up on the vehicle and climbed to the cupola.\n\nI struck down another gunman, but I could sense more, many more, of them massing around the bend where I couldn't reach them. A few desultory rounds were thrown our way, but the insurgents recognized the pointlessness of firing at me at this range. If their plan worked, I wouldn't matter. They could afford to lose a few men for this prize.\n\nThe Girl spared a quick glance at the bend as she struggled to pull the body from the gunner's seat then redoubled her efforts. Finally she succeeded, using all her 95 pounds to drag the Soldier's body up and dump it down the armored face of the vehicle. She slid into the cupola and began to frantically swing the M2 around.\n\nAnd so they say, was born into that Dark Night, Adrestria, daughter of Ares and Aphrodite. \n\nThe wave of men broke around the bend less than 300 yards from the burning vehicle. Too many, by far, to stop with a sniper rifle. Some would fall, but in minutes they would overrun the line.\n\nIntent on that goal, they ignored the smoldering metal beast on the far side of the road, certain that it was dead.\n\nSome call her Nemesis. Goddess of Retribution and Revenge. \n\nThere's a very specific word in the military lexicon.\n\nEnfilade: A volley of gunfire directed along a line from end to end.\n\nThe guerrillas, intent on closing with the still-coherent defense at the other end of the line, intent on \"hugging\" the US forces to neutralize the expected arrival of helicopter gunships had made a horrible mistake. In their eagerness, they had grouped up into a tight, dense mob as they rushed around the bend.\n\nIt was a momentary lapse, a single mistake in an otherwise well-executed plan.\n\nShe is the punisher of Hubris, of the Arrogant and the Self-Righteous.",
        "The M2, or \"Ma Deuce,\" was first produced in 1933 and is still, with some minor changes, the primary heavy machine gun for NATO. Because sometimes things don't need to be changed.\n\nA heavy hunting rifle, say a .30-06, will produce over 3000 foot-pounds of muzzle energy, depending on variables. Powerful enough to bring down any large game in North America with a single shot in the hands of a skilled hunter.\n\nThe round for the M2, the .50 BMG, produces up to 15,000 foot-pounds. The average city block doesn't have anything on it that will do more than slow the round down a little.\n\nThe first burst from the M2 was long, too long, but that was to be expected; my Adrestria had probably only seen one a couple times since Basic Training, and probably only then for a short familiarization training session. After that first one, though, the M2 fired in controlled bursts, the .50 caliber rounds slamming into the mass of men almost surgically.\n\nWith no warning, at that angle, at that distance, she would have wreaked havoc with a simple light machine gun. With rounds that could travel through dozens of bodies before stopping, the effect was indescribable carnage.\n\nShe Who Cannot Be Escaped. Sister to Phobos and Deimos, Fear and Terror. She follows her Father, Ares, God of War, into Battle under the watchful Eye of Zeus.\n\nThrough the scope, I could see her face was calm, centered, as she did exactly what she had to do. A few frantically fired rounds glanced off the armored shield of the M2, but she didn't even blink. I couldn't stop watching her; she was beautiful, almost unbearably beautiful. Fear would never have a hold on her again; after all Fear was her Brother. Let lesser beings be afraid.\n\nOnce the panic set in and men began to try to retreat, it slowed them further as they tried to backtrack over bodies and rock slick with blood. More died, torn and rent, scythed down by the unceasing hammer blows of a newborn Goddess of War. The remnants, the survivors, fled, scrabbling back around the bend, though I doubted they would get far. A sound like a chorus of dull heartbeats slowly called from the sky. Helicopters. I could sense William near me, setting smoke to keep the metal dragons from mistaking us for the enemy.\n\nHe gave a slow whistle. \"Is that who I think it is?\"\n\n\"She's our Sister, William.\"\n\nWilliam looked at the bodies scattered and clustered near the bend and gave a slight smile. \"She is indeed. And it would appear our Sister has a bit of a temper.\"\n\nI glanced at William, stood up and slung my rifle.\n\nBy the time I picked my way down to the valley floor, a squad of men with a Sergeant Major watching over them was checking the killing ground for survivors. One of the men was the burly Specialist who'd sat at the table with her in the mess hall. He was stealing cautious looks up at her, wondering how he'd so badly misunderstood, how he'd not noticed the Reaper in their midst.\n\nThe Sergeant Major eyed my rifle and nodded to me as I walked past.\n\nEven as she scanned for more enemy, she had watched me all the way down, never taking her eyes completely off of me. Despite the tear tracks in the grime on her face, she was absolutely serene. Adrestria. No longer \"The Girl.\" Her lip quirked up in a half-smile. \"I knew it was you.\"\n\n\"You just needed me to buy you some time.\" I pulled myself up onto the wreck and clasped her hand, a Warrior's greeting for a fellow Warrior. \"You kept the flank from collapsing. You held it.\"\n\nShe paused, glancing to the sky, seeing the stars shining brightly despite the daylight. For her, now and forever, the stars would always be there. One hand rested easily on the grip of the Deuce. \"You believed in me.\"\n\nI nodded. Belief, after all, is what creates gods, even gods of war. I'd been blinded, but I really had; at the end, I'd really believed in her.\n\nShe looked over the shredded bodies of the guerrillas with no regret, no guilt, no horror. I saw the Specialist look away rather than make eye contact with her. \"I did what I had to do.\"\n\n\"That's what people like us do, Jinxy.\" I pulled my shemagh off from around my neck and draped it around hers. \"Something to remember it by.\" Out of the corner of my eye, I could see the Sergeant Major nodding. The shemagh may not have been quite in uniform regulations, but for her, there would always be an exception.\n\nShe looked over the ridgelines for a moment, taking in the breathtaking beauty of it all. \"It's going to be hard, isn't it? Going home, I mean.\" She really did understand.\n\n\"In some ways, you never will get completely home. It's what we are.\" I touched her hand. \"People like us. Part of us is... made for this.\"\n\nShe nodded. \"I didn't understand before, but now... It's... elegant. Clean in a way. Just us and them. No empty bank account, no overdue bills, no rent. No rude customers... nothing.\" Her smile twisted a little. \"No zits and hat hair from working the French fry cooker.\" The ludicrous idea that McDonalds could even exist in our world made us both laugh softly.\n\nWilliam walked through chaos to us with a slight smile. \"Jambo, little Sister.\"\n\nJinxy smiled back at him. \"Sijambo, William.\"\n\nWilliam chuckled. \"You are a fast learner.\" He looked back over the bloody ground. \"A very fast learner.\"\n\nShe just smiled contentedly. I looked down the column of vehicles, watching the soldiers taking care of business. I looked down at the Sergeant Major. \"You don't need us here. Our Sister here will watch over you.\"\n\nHe returned my grim smile with his own and nodded slowly. \"Damn glad to have her.\" And I could tell he really was.\n\nWilliam glanced back as we walked away, studying her work, studying her. \"Amos himself couldn't have done it any better.\"\n\nThe tone caught me off guard. \"What are you thinking William?\"\n\n\"Nothing, just reflecting a bit, that's all. A commo dog, right? Everybody needs commo.\"\n\n\"Amos eats sandwiches that weigh more than she does.\" I watched the soldiers dragging the dead to the side of the road as she kept watch. \"But, yeah, you're right.\"\n\nHe shot one last look at her over his shoulder as we headed back up the ridge.\n\n***\n\nAfghanistan-Pakistan\n\nWe spent another five months bouncing around to different bases, conducting training, before the call finally came.\n\nWilliam and I had just about convinced ourselves that the target would be a no-show when he got the call on the satellite phone. \"The target will be at a villa north of Peshawar. Good terrain for shooting, but exfiltration will be a problem.\"\n\nWe pulled out maps and went to work. He was right, it was good mountainous terrain with plenty of excellent positions, but once the shot was fired we'd be in trouble. With armed forces, both legitimate and tribal, looking for us, there'd be no easy way out, no population to hide in.\n\n\"We may have to waive this one, William.\"\n\nHe finished tracing another pointless path on the map with his pencil. \"I don't do suicide missions.\"\n\nA second message arrived and he read it silently, then grinned. \"It's the target schedule. They are attending a wedding there.\"\n\n\"A wedding?\"\n\n\"We can do this. On the Nikah.\"\n\n\"The actual wedding day?\" I raised my eyebrow.\n\n\"It's the only real chance, and it's perfect.\"\n\nWe went over William's plan. It meant waiting in place for a full two days, but it really was perfect. I called Wendy's contact on the cell phone Brooks had given me.\n\nOne of Wendy's professionally incurious truck drivers took us across Jalalabad pass and ended up dropping us on a highway about 5 miles from the target. We walked in wearing locals' clothes, though even with my five-month beard, we hardly looked like locals. Despite our obviously foreign appearance, none of the locals paid us any attention; fanatical foreign fighters from all over the globe had transited the area often enough that they were actively disinterested in whatever the pair of us might be up to. The SVD stayed in its carry sack, and both us openly carried the AK-74s.\n\nWe ended up settling in about 700 yards from the villa and waited nearly two days for the wedding party to arrive for the Nikah, the formal wedding.\n\nThis was going to take patience. We could do patience; that has always been kind of our thing.\n\nWe prepared our hide and carefully broke the area at the front of the villa into sectors.\n\nDozens of cars arrived before William's phone went live.\n\nHe pulled his shemagh up to cover his head and most of the spotting scope while looking at the smartphone.\n\n\"It's a full color live feed of the villa. Maybe from a predator drone.\"\n\nI rolled into position careful not to disrupt our camouflage. \"Ready.\"\n\n\"Waiting.\"\n\nA convoy of limousines arrived and began to unload, and William began. \"They have pipped the target. Shooter, by eye, go to sector three.\"\n\n\"Contact\"\n\n\"Go to left colonnade.\"\n\n\"Contact.\"\n\n\"From left colonnade go the three o'clock, approximately nine mils\"\n\n\"Contact.\"\n\n\"Go to glass.\"\n\nI began to pick my way through the mass of people at the cars. \"I have target in white coat...\" He could only see the tops of heads and colors of clothing through the feed.\n\n\"Negative. That is not your target.\"\n\n\"I have a target in a black tuxedo...\"\n\n\"Negative. That is not your target.\"\n\nHe'd just eliminated most of the remaining possible. Disbelievingly, I continued. \"I have a target in a blue sari and matching headscarf.\"\n\n\"That is your target. Hold fire. Identification confirmed.\"\n\n\"Actively tracking target.\"\n\nShe'd probably been beautiful beyond words three decades ago and she was still remarkably handsome in her early 70s. I watched her turn and walk into the villa courtyard, mixing graciously and elegantly with other guests. They treated her as if she was royalty.\n\nHer face showed a strength of character, but then she would have to have that to gain real power in the patriarchal system here. There were no signs of evil in her, but there so rarely are. Unlike comic books, evil in real life rarely shows on the surface. Pol Pot looked like a cheerful farmer, Himmler like an accountant.\n\nNationalism, religious beliefs. Whatever her reasons for doing whatever she was doing were immaterial. Still, whatever it was, I doubted it was in any way for selfish reasons. She wasn't that weak.\n\nThe Nikah continued and I could make out the pain in the bride's face as the Imam did the usual rant about a \"woman's place.\" My target looked more amused than put out by it, though. She did wince a couple times at what I assumed were the usual not-very-funny jokes that get made at weddings regardless of culture and religion.\n\nAs the ceremony finally wound down, William shifted back to position. \"Are you on target?\"\n\n\"Contact.\"\n\nHe sighed. \"I hope they don't screw this up.\"\n\n\"It's Pakistan, William. You made the right call. It'll happen.\"\n\n\"I really don't want to have to E&amp;E out of this mess.\"\n\nA couple minutes later, a crowd began to assemble outside, all young men. I smiled to myself. \"It's happening.\"\n\n\"Do you have the target?\"\n\n\"Contact.\"\n\n\"Check parallax and mil.\"\n\n\".94\"\n\n\"Check level. Holdover 3.5.\"\n\n\"Ready.\"\n\nWe waited. Then one after another, the men began pulling guns of various types out. I studied my target as she watched the men almost disdainfully. This kind of thing was beneath her. She hadn't even bothered to leave her chair in the courtyard.\n\nSomebody shouted something, most likely \"Allahu Akbar,\" though we certainly couldn't hear it from our distance, then the celebratory gunfire erupted into the sky. My target shook her head at the crass behavior.\n\n\"Left. Point 1.2.\" Wind call.\n\nUnheard in the chaos of the gunfire outside the villa, the Dragunov fired once, and I watched our target slump in her seat.\n\n\"Center hit.\"\n\nWe quietly packed up, breaking down the Dragonuv and heading back to the highway ignoring the wailing and fury from the villa. They wouldn't look for us, there was no reason to, no reason to even think to look. Hundreds, maybe thousands of people die every year in Pakistan because of weddings, soccer games, New Year celebrations, and other holidays from celebratory gunfire. Even if they looked, the round was a typical Russian bullet and it'd draw little or no comment from anyone.\n\nThe exfil was unremarkable, requiring only an extra few dollars to the border guard to ease our passage back to Afghanistan.\n\nWilliam headed out, but I lingered for a week.\n\n***\n\nI watched her walk down the line of vehicles, eyeing each one critically, calling up to drivers and gunners, making sure all systems were green before they rolled out. She had her helmet tacked to her gear and had an M249 Para slung behind her. She moved like the weapon was part of her. She'd filled out, probably adding fifteen pounds of muscle since I'd seen her in the valley, and she walked with the almost lazy confidence of a true apex predator, hiding a wary vigilance. Her skin was burnished bronze and smooth, no trace of acne left. Her hair was pulled back neatly, burnt almost blonde by the sun. She had the shemagh loosely around her neck, pulled down so she could talk easier.\n\nI waved to her. \"Hey, Jinxy. How's it going?\"\n\nShe grinned and strode over, eyeing me. \"Hollywood! Damn, where the hell you been?\"\n\n\"Out and about. Looking for trouble.\"\n\n\"You find any?\" Her voice was just one taunting note away from a song.\n\n\"Not as much as I'd thought.\"\n\n\"Too bad. That's the fun part.\" She waved back at the line of vehicles. \"We're taking some Fobbits down to Gardez.\" She glanced back at the vehicles in the center of the line then looked back at me and rolled her eyes. \"They don't get it, they're all afraid to leave the wire. They just want to hide and hunker down in their fucking holes. Why the hell even come over here?\"\n\n\"Fuck 'em if they can't take a joke, Jinxy.\" I waved at her weapon. \"Where'd you get the piglet?\"\n\nShe reached back and touched the light machine gun as if it were a holy icon. \"Sergeant Major got her for me. She's a bitch to maintain, she hates the sand, and she'll rust in a heartbeat but she's a helluva lot lighter than a 240 Bravo.\" She shrugged. \"I need something, I can't hit shit with a rifle. I'm a lot better at spray and pray.\"\n\nI strongly suspected that anyone in her sights was probably the one who should be praying. I glanced at her uniform. \"So it's 'Corporal Jinxy' now, huh?\"\n\nHer cat-like smile widened and she quirked her eyebrows up. \"Crazy, isn't it? The Battalion even got me a waiver for time in service. No idea what the hell they were thinking.\"\n\n\"No accounting for crazy is there?\"\n\n\"Nope.\" She looked back over the convoy. \"I'd better get back to making sure these idiots know how to turn on their radios and know where the bang switches on their weapons are.\" She gave an exasperated sigh. Underneath it all, I could sense the stars outside the wire calling to her.\n\n\"You watch over them, Jinxy.\"\n\n\"That's what people like us do, isn't it?\" She strode off, shaking her head and calling out a gunner. \"Name tape defilade, dammit...\"\n\nI watched her with pride and I wasn't alone. The Sergeant Major came up on my left.\n\n\"She's got a Bronze Star with V device coming for that goat-fuck in the valley.\"\n\n\"She earned it. And more.\"\n\n\"I know. The valley isn't the only thing she's pulled off. She loves this, it's what she was born for. She can smell trouble and always heads right for it. She leads the sweeps on buildings, caves, anything that looks dangerous. The guys think she's the second coming of Joan of Arc. I'm not sure she isn't.\"\n\n\"There aren't many like her, are there?\"\n\nHe shook his head slowly. \"Christ. You know I almost pulled her off that convoy. Everybody was bitching that she couldn't do anything right.\" He grimaced, thinking about what the consequences of that would have been.\n\n\"You didn't know, nobody could.\"\n\n\"You did. I heard about it from her squad.\" He stared at the ground. \"You know some Colonel named Duquesne?\"\n\nGoddammit. William must have called them. \"Yeah, we've met.\"\n\n\"He wants to talk to her when we get back.\"\n\n\"He'll take her. She needs more rank and she's too damn young, but better she goes there than someone tries to force her to make French fries again.\"\n\nHe chuckled. \"I get the feeling that'd be a really bad idea.\"\n\nI watched her for a moment as she pulled herself one handed up onto a vehicle to explain to the gunner how to lower his seat further. William was right to make the call; I'd add my own to it as soon as I could. \"Duquesne can give her a real home.\"\n\n***\n\nDallas, Texas\n\nThe call to Colonel Duquesne was the easier of the two phone calls I made when I got back to my home. With my endorsement following William's, Jinxy's path would be forever changed, but for her that was the right thing to do. Duquesne still couldn't take women in as operators, but everybody needs commo, and he could cross train her on heavy weapons. She had to have a place where she could be what she truly was.\n\nThe second phone call was much harder, but it was successful, and it resulted in me knocking on the door of a nice split-level house outside Dallas a few days later.\n\nThe man that opened the door eyed me critically for a few seconds. \"You must be Tony. I'm John. Come on in. Kathy will be down in a minute. We'll sit out on the back deck.\"\n\nWhen she came out of the house, the resemblance to her sister was obvious. She looked me over warily. \"So. What are you doing here?\"\n\n\"Trying not to come off as too stalker-creepy.\"\n\n\"I think it's a bit late for that, but I'll give you a little leeway.\" Kathy frowned.\n\nHer husband laughed. \"Kathy has tried to set Anne up with guys for the last year, with no success at all.\"\n\nKathy gave him a warning glare, but he just smiled at her. Kathy looked back over at me. \"The only thing she's done since Bob died is take care of Makenzie. I was trying to help.\"\n\n\"It was disaster after disaster.\" Her husband was trying not to laugh. \"She must have had six different guys come over to Sunday dinners to meet Anne. She barely talked to any of them.\"\n\nKathy narrowed her eyes at him. \"They were nice guys.\"\n\n\"I'm guessing she wasn't interested in a nice guy.\" His efforts to not laugh were starting to fail.\n\n\"That was obvious from the picture.\" Kathy shifted her glare to me.\n\nI raised my hands. \"I have no idea what you're talking about...\"\n\n\"Here.\" Kathy cut me off firmly and pulled her phone out, flipping through pictures. She held it up to me.\n\nIt was Anne and I on my Harley at the parking lot of her hotel. She was wearing my shirt, unbuttoned a button or two more than her sister might have been comfortable with, especially since her braless condition was obvious. We were both leaning in for that last kiss, smiling. It was actually a great picture.\n\n\"One of Anne's squad is a police photographer in her normal job and had her camera with her. Jennifer Frost sent me the picture. So did Carmichael and Garcia.\"\n\nI looked at it for a second. \"It wasn't exactly staged, but Anne did kind of want to put a show on for her squad.\"\n\n\"She's putting on a show, alright. One more button and she could get arrested.\"\n\n\"Exhibitionism is apparently genetic, Hot Tub Girl.\" John leered playfully at her. There was definitely a story there, but I wasn't going to ask.\n\nKathy's glare turned up to inferno, but before she could say a word, another voice cut in. A much younger female voice.\n\n\"So you're Mom's booty call?\"\n\nI turned and found myself looking at an early teen clone of Anne. Mackenzie. She looked dead serious.\n\n\"I prefer 'hook-up,' it's a little more accurate. 'Booty call' would imply we already knew each other.\" Out of the corner my eye I could see Kathy turn a fascinating shade of angry red, but John put his hand on her arm.",
        "I guess Mackenzie had expected me to either try to waffle or just not answer, she looked a little surprised. \"So what are you doing here?\"\n\n\"Looking to see if I can get some support in graduating from 'hook up' to 'steady dating.'\"\n\n\"So this is like a job interview.\"\n\n\"Hmmm. Sure.\"\n\nSeeing that she hadn't rattled me, she tried again. \"So you had sex with my mom?\"\n\n\"Yes. And we toured wineries on my motorcycle and fixed breakfast together and had a great time. Your mom is amazing.\" I thought Kathy's head was going to explode and I could see Mackenzie sneaking looks at her aunt. Apparently, I wasn't the only target.\n\n\"And now you want to date her.\"\n\n\"Yep.\"\n\n\"Isn't that backwards? Don't you take women on dates to get into their pants? That's what everyone tells me.\" she glanced over at Kathy.\n\n\"That's the way it usually works. Kind of went in the other direction this time.\"\n\n\"Are you always this brutally honest?\"\n\n\"Not really, but I figure it's my only shot here. You're the most important thing in the world to your mom, so I'm putting it all on the table.\"\n\n\"So you won't lie to me?\"\n\nI met her stare. \"Nope. Ask anything.\"\n\n\"Will you drive me over to get pizza in your car?\"\n\n\"If your aunt and uncle agree and follow in their car and eat with us. I'll even pay for the pizza.\"\n\nShe put her hands on her almost non-existent hips. \"Why do they have to come? Aren't I safe with you? If you are going to date Mom, I should be safe with you.\"\n\n\"You are safe with me. But you just met me, and you can't be sure of that. And it's a bad precedent. It's a bad idea to get into cool cars with guys you don't know.\"\n\n\"So I shouldn't trust you?\"\n\n\"We've already established that I clearly have an ulterior motive and I am leveraging my considerable charm to influence you. It's a bad idea to just whole-heartedly trust me.\"\n\n\"Mom did.\"\n\n\"In her defense, she did have an entire squad of heavily armed women who would have come looking for her if she didn't show back up\"\n\nMackenzie giggled. \"I feel like Little Red Riding Hood talking to the Big Bad Wolf. Except you're after Mom's cookies.\" She cracked a crooked little smile that looked exactly like her Mom's. Kathy looked a little bewildered, but even she had a smile.\n\n***\n\nThirty minutes later, we were sitting across from each other over an extra-large, extra cheese, extra pepperoni with none of \"those vegetables that everyone else wants.\" John and Kathy sat next to us, but seemed to deliberately be giving us space. I suspected they'd had a very interesting discussion in their car.\n\nMackenzie wolfed down a whole piece in what looked like one bite before starting in again. \"So now for the hard questions.\"\n\n\"The other questions weren't the hard ones?\"\n\n\"Nope.\" She pulled another slice of pizza on to her plate.\n\n\"Okay, go ahead.\"\n\n\"Can you promise me that Mom is going to make it back?\" I saw Kathy stiffen up.\n\nI looked at Mackenzie. \"Nobody can promise that. But your mom has one of the best squads I've seen, and they only have a couple weeks to go, so she probably will.\"\n\nShe nodded. She'd grown up an Army brat, she knew damn good and well that was the only real answer. \"Okay, what do you do for a living?\"\n\n\"I work for a security contractor, mostly doing sniper training. I can work from almost anywhere. But I've been thinking of opening up an indoor-outdoor range and gun shop. Somewhere.\" I looked at the teen-age girl watching us from a nearby table. \"So are you going to have your friend join the interrogation?\"\n\n\"What friend?\"\n\n\"Girl in the blue t-shirt. She's been ghosting us since we got here. I assume that's who you were texting when you came down from changing.\"\n\nHer eyes narrowed. \"You don't miss much, do you?\"\n\n\"I was a sniper for over twenty years, you don't survive very long doing that unless you have good situational awareness.\"\n\nShe waved her friend over. \"Tessa, this Tony. Tony this is my best friend, Tessa.\"\n\nMackenzie and Tessa grilled me for the next forty-five minutes, with Kathy occasionally breaking her silence to sneak a question in.\n\nI've been through counter-interrogation training and the instructors could have learned a thing or two from them. They were intent on prying everything out of me they could, from a detailed health history, to the state of my personal finances, to my favorite color.\n\nSome of the questions seemed pointless, but I soon figured out why she wanted Tessa to help. Tessa's parents had divorced and her mother had remarried, making Tessa something of the expert on \"Mom-is-dating-again\" issues.\n\nAt the end of it, Mackenzie gave me provisional approval. Despite all the questions, I think her approval was mostly based on the smile her mom had in the picture.\n\n***\n\nArrival Day was the usual organized chaos: a few speakers droning on a little longer than they really needed to, with both soldiers and family members just desperately wanting the ceremonial shit to get done so they could touch each other and know that it was all over.\n\nAnne, a few pounds lighter and a few shades darker, noticed me, but refrained from saying anything until after she'd squeezed Mackenzie half to death and given hugs to both Kathy and John.\n\nShe finally turned to look at me. \"Soooo, why are you here?\" At least she sounded more puzzled than angry.\n\nMackenzie broke in. \"We brought him. That way you can sneak over to his hotel room in case you need a booty call.\"\n\nAnne's jaw dropped and Kathy started laughing at her and held up her phone, showing her the infamous picture. \"Don't let your friends send pictures if you don't want your daughter asking questions.\"\n\nAnne looked at the picture, then glanced behind her, looking through the sea of soldiers and family members. \"Oh my God. I'm going to kill them.\" Then she looked at me. \"But you must have called or something or they wouldn't have found you.\"\n\n\"Guilty. And yeah, it sounds a little stalker-ish, but I really wanted to see you again.\"\n\nShe frowned. \"It does sound a little weird.\"\n\nFrosty pushed out of the crowd behind her, holding the hand of a guy who I assumed was her husband. \"Weird? Like wearing someone's dress shirt to bed every night for eight months?\"\n\nAnne turned a brilliant shade of red, Mackenzie started giggling almost uncontrollably.\n\nI tried to get everything back on track. \"I'm just asking for a few dates to see if, maybe, there's something there.\"\n\nFrom Anne's face I could tell she was wondering the same thing.\n\nMackenzie looked at Anne very seriously. \"You should probably do the booty call thing first, so you can think straight.\" I thought Frosty was going to die laughing.\n\nAnne sighed exasperated. \"Will you quit using that term?\"\n\n\"I'm pretty sure it's the right term.\" Mackenzie looked over at her aunt. \"The first time was a 'hook-up' because they didn't know each other, but now that they do, it'd be a booty call, right?\"\n\nKathy nodded sagely. \"That's right, Honey.\"\n\nAnne narrowed her eyes at Kathy. \"You're encouraging her.\"\n\nKathy smirked, then shrugged. \"Maybe. Payback for all the crap you pulled on me when we were kids.\"\n\nAnne shifted back to me. \"You're serious? Based on one weekend.\"\n\n\"Based on one weekend and a long look at things.\"\n\n\"Even if we really hit it off...\" She smiled a little nervously. \"And I'm not saying we didn't. But we'd have to work a lot of things out.\"\n\n\"Your daughter covered that ground in detail, too. Her rule is that we try out dating for six months, no living together, and no permanent changes until after six months no matter what. She's pretty smart.\"\n\n\"She is.\" A quirk of a smile crossed her face.\n\nMackenzie gave a self-satisfied smirk. \"If it all works out, next summer we need to go to Croatia to visit his family. Tessa and I already have a swimsuits picked out.\"\n\nAnne looked like she wanted to object to it, but instead she sighed. \"Maybe, we'll see how this works, okay?\"\n\n\"Are you willing to try this?\"\n\nShe nodded a bit hesitantly. \"I think so.\"\n\nI could see she had her doubts and I didn't blame her. How would she be sure a guy like me would settle down? She'd be worth it, but this could take months, maybe even years.\n\nIt would take patience. I could do patience; that has always been kind of my thing.\n\nPost Production Notes: \n\nThe two readers who guessed closest on \"God Laughs\" were kimi1990 and sbrooks103x. Kimi aka \"Kimmi\" already appeared in the series as a child in Gun Gun Teddy Bear. This story is much later sequentially and she is the lawyer who also helps run K2 Security for her parents. Sbrooks103x appears as \"Brooks\" one of Wendy's henchmen. They both scored 6 out of 8 on naming the writers and both tagged me correctly as having written the initial insanity. \n\nThanks to sbrooks103x and blackrandi for the edits, and of course to my wife, aka The Missus, for all of her irreplaceable assistance with plotting and character development.\n\nSome possibly unfamiliar issues:\n\nOGA: Other Government Agency. Usually assumed to be CIA, but several less well known agencies fall under this designator as well.\n\nCorporal versus Specialist: In the US Army, the Corporal and the Specialist are the same paygrade, but not the same rank. A Corporal is a non-commissioned officer and a Specialist is not.\n\nThe Armory\n\nUnited States\n\nM240B: Called the \"240 Bravo\" or just \"the Bravo,\" is the US military designation for the FN MAG, a belt-fed gas-operated medium machine gun that chambers the 7.62\u00d751mm NATO cartridge. Weighs in at 35 pounds loaded.\n\nM249 Para: The M249 light machine gun, formerly designated the M249 Squad Automatic Weapon, the US version of the Belgian Minimi. Some consider it more of an automatic rifle than a machine gun. The para version is lighter and shorter than the standard, as it is optimized for airborne, armored infantry and close quarters combat operations with a shorter barrel and collapsible buttstock. It has a reputation for being finicky about cleaning, and having issues with sand, and the 5.56X45mm round lacks the sheer power of a 240B. It is known colloquially as a \"piglet,\" as it was initially viewed as the smaller sibling of the M60 machine gun, known as the \"pig.\" It is significantly lighter than the 240B, at 20 pounds loaded\n\nM16A2: A slightly modified version of the venerable standard issue assault rifle for the US military from Vietnam until the widespread adoption of the M4 in the 2000s. The A2 has a heavier barrel and three round burst rather than full automatic fire.\n\nM4 Carbine: A shorter and lighter variant of the M16A2 assault rifle. It has a 14.5 in (370 mm) barrel and a telescoping stock.\n\nM9 pistol: The Beretta M9 is a 9\u00d719mm Parabellum pistol adopted by the United States Armed Forces in 1985. It is essentially a military specification Beretta 92FS.\n\nNon-US\n\nAK-74: The AK-74 is an assault rifle developed in the early 1970s as the replacement for the earlier AKM. AKs are the most common assault rifles in the world.\n\nDragunov SVD 63: is a semi-automatic designated marksman rifle chambered in 7.62\u00d754mmR and developed in the Soviet Union. While not in the league of the top end true sniper rifles of the world, it is among the most common and has a reputation for reliability in difficult conditions.\n\nRomanian PSL: Romanian military designated marksman rifle. Though similar in appearance to the Dragunov, the PSL rifle is based on the RPK light machine gun and has no parts that are interchangeable. This is the go-to sniper rifle for many countries unable to afford or support the true top-end rifles. "
    ],
    "authorname": "Todd172",
    "tags": [
        "shack",
        "military",
        "hollywood",
        "action adventure",
        "romance",
        "espionage"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-shack-ladykiller"
}