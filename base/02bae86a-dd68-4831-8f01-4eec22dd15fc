{
    "title": "Chocolate Covered Cherries",
    "pages": [
        "To the readers: There is no sex in this story. It's a story about a man and a woman and how they met and lived. It's a story written for Valentine's Day. The story is told by their eldest daughter. A special 'Thank You' to Estragon for editing this story and making it a much better read. \n\nChapter 1\n\nThis story is about my Mom and Dad. They both had passed away a few months apart. Mom went first at age eighty-one and Dad at age eighty-four. They had been married sixty-two years.\n\nThis story only covers a very small aspect of their lives. Every two years we have a family reunion at Lola Valley Park, in Michigan. It been going on as long as I can remember. Throughout the years, as our elders passed away, the next generation of our family continued on with the tradition.\n\nMy generation is now the eldest, since the death of my parents. We all vowed to keep the reunion going, so the youngest of the children would have insight into the lives of their now-deceased relatives.\n\nWe are the Connors clan, even though my name is Rogers, since I got married forty years ago. I'm the matriarch of the family now, at sixty years old. I've got two brothers and two sisters. We all have children and grandchildren of our own.\n\nMy name is Christine; my two sisters are Cheryl and Cathy. My brothers are Carl Jr., and Charles. Yes, all of our family's first names started with a C. Mom's name was Caroline and of course Dad was Carl.\n\nWhen we take into account all our cousins and their families, we have quite a reunion. Someone from each of our families is picked to tell a story about our family. It's usually fun stories, about things the younger kids didn't know about their grandparents and great-grandparents.\n\nI, being the oldest, was asked to tell the story how my parents met and what kind of people they were.\n\nWe always have a ton of food; everyone brought covered dishes, and plenty of soft drinks for the youngsters and a few beers for us. After everyone was through playing games and eating, we would sit down and tell our stories.\n\nI've told this story many times to my three kids and even to my five grandchildren. It never gets old and brings tears to my eyes.\n\n****\n\nThe story was told to me by both my Mom and Dad. Of course when I was old enough I could see everything for myself. These two people really loved each other but you would never picture them as a couple.\n\nDad was a big man; I mean a really big man. He was 6'4\" and weighed over two hundred seventy-five pounds in his heyday. Mom was 5'1\" and maybe a hundred and ten pounds, soaking wet.\n\nDad worked at Ford Motor Company. His dad, my Paw-Paw, got him a job there when he was nineteen. He worked on the second shift. He still lived at home so before work he would stop at the drug store and get something to eat. Back then Cunningham Drug Stores had a dairy bar and lunch counter.\n\nThat's where Dad met Mom. She worked there part-time at the lunch counter. She was still in high school and was in a school-work program. According to Mom, Dad tried to get her to go out with him for over a month. Of course Dad tried to deny it. He said he was just there for lunch. One day Dad went into the store and told Mom he was drafted and would be leaving in a month.\n\nMom got nervous; she really cared for dad but always tried not to show it. The next time he asked her out, she said yes. They saw each other every day at the lunch counter and went out every weekend. Before Dad left for basic training they vowed to write each other regularly.\n\nWhen you hear people say that 'absence makes the heart grow fonder', it was true in this case. Mom had saved every letter that Dad had written her. She went on with her life and worked every day. Her parents, my Grandma and Grandpa, were mad at her for not going out with other boys that asked her out.\n\nThey liked Dad but just couldn't picture him and Mom together. Mom did go to her high school prom but she said all she could think about was Carl, my Dad. She did say her date was a nice looking guy and she did kiss him goodnight but she felt she had cheated on Dad.\n\nThe funny thing was they weren't even going together. They had just promised to write each other. Mom got worried when Dad told her he was going to Korea. They called it the \"Korean conflict\" but everyone knew it was a war. Dad had been gone for nearly two years. Mom was getting fewer letters from Dad and one day they stopped.\n\nShe went to see Dad's parents and asked if they had heard from Dad but they said they hadn't. According to Mom, she broke down and cried. My future Grandma took her in her arms and hugged her. \"Caroline, no news is good news. You have to understand that. Just pray for his safe return.\"\n\nMom returned to work the following Monday. When she looked up, a serviceman was sitting at the counter. It was Dad; he had returned home. Mom ran to him and was crying. They hugged and kissed right there in the store.\n\nDad turned around and there was a display of chocolate covered cherries right behind him. He grabbed a box, got down on one knee and asked Mom to marry him. He handed her the box of cherries and promised her they could go shopping for a ring later.\n\nShe cried, took the box of cherries, said, \"Yes, I'll marry you!\" and the rest is history. \n\nDad got his job back at Ford, and ended up retiring from there forty years later. Mom still worked at Cunningham's till she was pregnant with me. She then became a stay at home mom. She had four more kids over the next ten years.\n\nWe were a happy family. Mom always let Dad think he was the boss but we all knew better. Dad's philosophy was, \"Keep your mother happy and everyone will be happier; mom gets mad, everybody pays for it.\" It was a pretty true statement.\n\nDad pretty much went along with what Mom wanted. Mom was smart enough to know not to push Dad too far. To us kids, Dad was just a big Teddy Bear, but for us girls, our dates and other men were afraid of Dad. He didn't talk much but when he did, people listened.\n\nDad wasn't big about holidays; even Christmas he thought was way too commercial. He would argue with Mom about buying so many gifts. The one thing he would do is make each of us something out of wood. He spent a lot of his free time in the garage where he did his woodworking. We were older before we realized how much more the gifts he made meant to us. He made model cars for the boys and dollhouses for us girls.\n\nEach year he made us something new. He even did the same thing for our kids after they were born. He made mom all types of things, a grandfather clock, rocking chairs for both of them, end tables and many other things.\n\nSome people might have considered him tight but he would help most anyone out.\n\nThe one thing that he bought every year for Mom was on Valentine's Day. I think it was his favorite holiday (even though not a real holiday). Looking back, the day he returned from the service, it was Valentine's Day.\n\nHe would make sure that Mom received a box of chocolate covered cherries. I don't think a year past that she didn't get a box of cherries. One year the local store was out of them and he drove forty miles each way to make sure he got them.\n\nMom and Dad did have their ups and downs. The thing was Dad would never harm Mom in any way. If anyone tried to make a pass at Mom, Dad would interfere.\n\nA couple of stories I didn't tell the kids I'll mention in this story. Mom and Dad didn't go out much when we kids were little, since all us kids were so close in age. After we got older Mom convinced Dad to go out dancing once in a while. Dad wasn't much of a dancer but he did try.\n\nMom had eventually got her old job back at the store. She worked in different departments. Dad didn't want her to work but she was getting bored with all of us kids in school. She set up a schedule so she could always be home when we got home from school. \n\nA couple of women asked Mom to go out with them about once a month. Dad didn't like the idea but knew Mom deserved some free time of her own. He did go to ball games and often took some of us kids with him.\n\nMom always dressed up nice. She would always kiss Dad before she left to go out and he wouldn't go to bed until she returned. He always told us he trusted her but was still worried about her. Come to think about it, he always waited up for his daughters till we got back from a date also.\n\nSometimes Mom and her friends went to bingo, jewelry parties and even out dancing. Mom told me and my sisters this story. Dad never knew that we know what happened.\n\nMom did tell dad that she had danced with men but it was only dancing and nothing more. Dad wasn't overly happy to hear that. She said she and her friends always stayed together and didn't except drinks from strangers.\n\nThat made Dad a little happier. On one of Mom's nights out with the girls, a couple of guys where Dad worked asked him if he wanted to go out for a few beers. He mentioned it to Mom and told her he'd see her when she returned home from her night out.\n\nDad was big on country music. It's all he would listen to in the garage while doing his woodworking. He and his friends went to that type of bar/lounge where they could watch the people line dance. A couple of Dad's friends were pretty good dancers but Dad was just a spectator.\n\nThe place was crowded and Dad and his friends got a table near the back of the room, but the floor was raised and he had a great view of the dance floor. He was surprised to see Mom and her two girlfriends there dancing. He always loved to watch her dance, especially if it was for him.\n\nHe thought about going and talking to her but she might feel he had intruded on her night out. His friends noticed Caroline also and said how good a dancer she was.\n\nDad just watched her and drank his beer. He didn't feel he would stay long. A couple of men came up to the women's table and asked them to dance. Dad watched as Caroline got up and danced this slow dance with this man.\n\nHe took her over to the side of the dance floor where there weren't very many people. She held his hand and wouldn't put both of her arms around his neck. It looked like he was trying to pull her closer but she kept refusing. He took his hand off her waist and moved it down to her ass. She hauled off and slapped him.\n\nHe looked at Mom and laughed. She was tiny and he put both hands on her ass. Her arms were pinned between them. When Dad saw what happened he made a bee-line over to Mom. She looked surprised to see him and the man looked scared.\n\nDad hauled off and punched the guy in the face. He only hit him one time but he broke his jaw and the whole side of his face was swelling up. The bouncers came over to face Dad. Luckily before they touched him the bartender said he saw the whole thing.\n\n\"The guy on the floor took advantage of the little lady. She told him to stop but he didn't. This man here came over to help the woman.\"\n\n\"She's my wife and no one lays a hand on her but me,\" said my Dad. Mom reached over and kissed him with tears in her eyes.\n\nThe bouncers called the paramedics to have the guy taken to a hospital. Dad and his friends joined Mom and her friends. Dad did tell Mom that he wasn't spying on her, that's why he didn't come over to her table. When that man touched her, he had to pay the price.\n\nDad's punishment was he had to try line dancing with Mom. When they got home Mom made love to Dad. She always said he was her hero. Mom told us girls a lot about her love life with Dad, but we had to promise never to let on that we knew. Mom said Dad was a great lover and always made sure she was satisfied.\n\nAnother story I'll tell you about was when Dad got drunk. It didn't happen very often but his bowling team had just won the conference and his team set out to celebrate. Dad ended up mixing his booze, which he didn't do well. He was totally drunk. We have never seen him that intoxicated before.\n\nThe funny thing is, Dad was always a happy drunk. He would never hurt anyone unless they messed with him or Mom, which happened more than once.\n\nMom was pissed that Dad was so drunk he had to have a ride home. One of his friends drove his car and left it in the driveway. He didn't get home till after midnight. Mom told us kids not to let him in.\n\nHe beat on the door, and hollered, \"Caroline, let me in!\" He must have said it five times. \"Let me in or I'll bust the door down!\" said Dad. All of us kids were in our rooms; we were scared. We never saw Dad quite this drunk. I knew one thing, that if Dad called me to open the door I would have done it, but luckily he didn't.\n\nMom yelled to him to go sleep in the car. Neither she nor the kids were going to open the door. The next thing we heard was a big bang. We all ran downstairs, including Mom. Dad had just knocked the door down, breaking it clear off the hinges.\n\nHe staggered around and put it up against the hole where the doorway was, and said he would fix it tomorrow. He told us all goodnight and went up to their bedroom and went to sleep. Mom didn't say a word but was quite astonished. I don't know where she slept that night, and never asked.\n\nThe next morning we heard a pounding sound. It was dad downstairs repairing the door. When Mom came to see him, she couldn't stay mad at him and offered him a cup of coffee. They truly had a one of a kind marriage.\n\nDad didn't apologize. He didn't do that very often. From that day on if he was drunk, Mom let him in.\n\nChapter 2\n\nThere was one other funny story when Dad got drunk once again. It was the last time that we ever saw Dad drunk and it was a good forty years ago. He told us that he learned his lesson about drinking too much.\n\nThere was even a joke written about a man in a similar situation. Dad went to an old friend's bachelor party. Mom wasn't happy about it but she really trusted Dad. She heard there would be strippers there. This happened the morning after, when Dad awoke with a splitting headache. My brother Carl Jr. was sitting there when Dad woke up.\n\nMom had sent Carl Jr. upstairs with four aspirin and a glass of tomato juice. \"Mom said to give this to you.\" \n\n\"What the hell did I do? Did I get bombed again? Shit! Your Mom's going to kill me. What can you tell me? I need to be prepared,\" said Dad.\n\nCarl Jr. spoke. \"Well Dad your friends Jim and Bill brought you home. Mom told them to try and get you up to the bedroom. It took them a long time, cause you were really out of it this time, Dad.\n\n\"While coming up the stairs you knocked down two pictures Mom had hanging up; one frame broke. You knocked over the lamp, but luckily it didn't break. You also knocked the phone on the floor. I think it came out of the wall. Mom said you can check it out later.\"\n\n\"OK, so where is your mom now?\"\n\n\"She's downstairs making you pancakes, bacon and eggs.\"\n\n\"What? I don't get it,\" replied Dad. \"Hell, I still have on the clothes I had on last night except for my shoes and my belt is unbuckled.\"\n\nCarl Jr. was smiling. \"Well Dad, according to Mom she took off your shoes and when she went to take of your trousers she said you said, 'Stop lady! Leave my pants alone. I'm married and I won't cheat on my wife. Please just leave me alone.' Mom stopped after unbuckling your belt and turned the light off. I guess, drunk and all, you said the right thing. Mom said for you to take a shower and change your clothes. Breakfast will be ready in a few minutes.\"\n\n****\n\nI was back talking to the family. That's the way it was with my parents. They were 'Father Knows Best', 'Leave it to Beaver' and 'All in the Family' all rolled into one.\n\nAfter retirement, they would travel together or with friends. They truly enjoyed their lives. Only a few years ago Mom had a stroke. The doctors said maybe she should be put in a nursing home but Dad said, \"No way!\" He was capable of taking care of her, and he did.\n\nUs kids would stop by regularly to make sure everything was ok but Dad did fine. Mom still had her wits and the use of her arms and legs. She was somewhat frail. Dad did the cooking or one of us kids cooked something and brought it over.\n\nDad ordered meals on wheels and they brought over lunch five days a week. Mom and Dad would watch TV and do puzzles together. Mom couldn't have been in better hands. Dad truly loved her and she him.\n\nMom ended up having another stroke and was put in the hospital, then transferred into the Hospice program, an extended care facility for a good six months. Dad would get up every morning, eat breakfast and then go and be with Mom. He was always there for her. He usually spent most of the day there. He made sure that on Valentine's Day she still got her box of chocolate covered cherries.\n\nIt was in early August that she was readmitted to the hospital. Dad bought her a box of the cherries, but Mom couldn't really eat them due to the diet the hospital had her on. Dad let the nursing staff have one whenever they came into the room.\n\nAfter they were all gone he went and bought more. Mom passed away a week later. Dad took it really bad. He himself went downhill after that. A month later we had to put him in a nursing home. He didn't care anymore. The doctor said he was older and his body just wasn't what it used to be.\n\nWe knew the truth. He was dying of a broken and lonely heart. He missed Mom.\n\nWe've always felt that after one died the other wouldn't be far behind. We brought Dad home for Thanksgiving and Christmas. He had me go over his will with him. He wanted everyone to get something after he died. We kept telling him not to think about that now but he wanted it done.\n\nHe gave me a list of what he promised everyone. Mom's rings and jewelry, larger items like the piano and all of his power tools. He didn't leave anyone out. After he gave me the special list he told me after he died he wanted to be buried next to Mom and that we could auction off anything that was left.\n\nAny monies and savings that they had left could divided equally among his kids. Dad was sane and knew what he was doing. He just told us he was preparing his last will and testament. He didn't want our family fighting like other families have done.\n\nAfter he had finished with his settlements he said he felt better. Someone from the family went to see him everyday. He would still tell stories to the grandkids but we could tell he wasn't looking very good. On February 10, I was called to the nursing home.\n\nThey told me that Dad was being transferred to the hospital. I was told to get all the family there as soon as possible. I called all my siblings and they all showed up in the next couple of hours.\n\nI was alone with Dad before anyone arrived. He told me to go buy a box of chocolate covered cherries and to make sure I put them in his casket. I told him he wasn't going to die but he smiled at me and told me what a good daughter I was.\n\n\"Christy (that's what he called me), I know I dying but I'm going to go be with Caroline. I know Valentine's Day is coming and she will expect me to have them. Please make sure I have them to take with me.\"\n\nI was crying when I said, \"Yes Daddy, I'll get them for you.\"\n\nHe was able to see everyone in our family and talked to each one of us before he passed away. He told us all that we were great kids and he was proud of all of us. He was now going to be with our mom.\n\nHe died the next day. We had calling hours on the thirteenth of February and the funeral was the next day. It was February 14, Valentine's Day. As everyone walked up to see Dad they said he seemed peaceful and happy.\n\nI went up and put the box of chocolate covered cherries under his hand. It brought tears to everyone's eyes. I believe they all knew what it represented.\n\nWhen we went home that evening, I felt at peace with the world. I pictured my Dad with my Mom doing a puzzle and eating the cherries.\n\n****\n",
        "After I told the stories everyone at the reunion had tears in their eyes. We brought along picture albums so everyone could pictures of our family growing up. I also brought along two boxes of chocolate covered and opened them so everyone could have some. \n\nAs for the auction and settling of the estate, it went wonderfully. Everyone got what Dad and Mom had promised them. Most came to the auction and bought other keepsake items to keep in the family.\n\nThe lawyer for the estate said he never has seen a family so close and not bickering among themselves and being petty and miserable. He told me our parents must have been some very special people. We agreed.\n\nAfter he called us all in and gave us our portion of the estate my daughter Connie gave him a box of chocolate covered cherries to remember us by.\n\nHe told us he would never forget us. He never sees many families as close as ours is.\n\n*\n\nThank you for reading my story\n\nComments are welcome and appreciated\n\nDG Hear"
    ],
    "authorname": "DG Hear",
    "tags": [
        "family",
        "love",
        "sickness",
        "valentine's day"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/chocolate-covered-cherries-1"
}