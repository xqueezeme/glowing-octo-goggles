{
    "title": "Boston to Birmingham Ch. 02",
    "pages": [
        "Here it is, part two. No sex, a little action, and a lot of fleshing out of the main characters. You'll need this knowledge in the next chapters. \n\n................................................\n\nShe stepped of the train, tired, miserable after a two day ride. The heat and humidity hit her like a physical slap. \n\n\"Who the hell would voluntarily live here?\" she thought as she dragged her cases behind her. No one offered to help.\n\n\"So much for the vaunted Southern hospitality you hear about in books and movies. Maybe Hardy put the word out through the redneck grapevine.\"\n\nThinking his name caused her a brief flash of pain.\n\nYes, damn it, what happened was her fault, but he should have stayed and fought for her. She hadn't put eyes on him since that morning. She begged her father and Crystal Anne to help her. Crystal had just laughed a second before she looked sympathetic.\n\n\"Girl, he's gone. He isn't coming back. I TOLD YOU, you stupid, arrogant woman, what would happen if he caught you, but you went ahead and did it anyway. Again. And he knows about Paris, Allan emailed him as a parting gift. Mark it up as a lesson learned.\"\n\n\"You know what infuriates me? I've known him for almost twenty years, and you were the first person I saw him love. You have no idea how jealous I was, how bad I hated you. But he was happy so I sucked it up.\"\n\n\"Now that you've screwed him over, he'll be even more wary, less trusting than ever before. He may never love again. I'm going to do my best to help him, I'm gonna pamper him, give him whatever he needs. In short, I'm going to do my level best to get him to love me.\"\n\nGwen was surprised at the depth of pain she felt, giving way to blinding anger.\n\n\"Well good luck with that. He's in Alabama, you're here. That's gonna make it hard to console him. And he's still mine, I'll never let him go! I just need to see him, beg him to listen to me. I can make it up to him, I know I can.\"\n\nCrystal Anne looked at her with pity.\n\n\"Girl, it's been three months and he still hasn't spoken your name. The closest I heard him come is 'that Yankee cunt'. Give it up, let him have some peace. This is my last week here, I'm going to work for him in the Alabama office. He'll forget you if I have to make it my lifes' work. Goodbye, Gwen. If you find someone else, treat him better than you did Hardy.\"\n\nIt was in her mind to physically attack her when she heard her fathers' voice.\n\nHe took her arm and led her away, after wishing Crystal Anne good luck with her new job and life, offering to bring her back up if it didn't work out.\n\nWhen he got her in his office she exploded.\n\n\"Daddy, you need to fire that bitch. She's going down there to try to get her hooks in my husband! How could she wish her well?\"\n\nHer outburst seemed to have no effect on him. He motioned to a chair and curtly told her to sit.\n\n\"Gwen, I wished her well because she's a good woman and a better employee. What she does with your soon to be ex-husband is none of my business. Not to hurt your feelings, but I think she could make him very happy, maybe give him the children he wanted so desperately with you. Face it child, you threw him away. Don't get mad if someone else picks him up.\"\n\nShe started crying again. God, it had been months and she was still at it. Maybe she actually did love him. For the first time he felt a twinge of guilt for trying to manipulate their marriage. Ah well, too late now. He cleared his mind and got to the subject at hand.\n\n\"You leave for Birmingham at the end of the week. Are you ready?\"\n\nShe nodded. It still shocked her he was making her do this.\n\n\"As ready as I'll ever be. Please, Daddy, let me stay. Find me a job in another firm. I won't embarrass you.\"\n\n\"Gwen, I don't think you could possible embarrass me more than you already have. I tried to smother it, but it was too good a story not to tell. Sex, drugs, infidelity, Christ, all we needed was a rock band to make it perfect. No, in this town, your name is mud, and will be for awhile.\"\n\n\"Do your year, get your experience, maybe grow up a little. When the time is right you can come home.\"\n\nGwen had stopped crying.\n\n\"Daddy, I'll do it. I'll serve my sentence, I'll behave. But you know, I'll be in the same state as him, pretty close actually. Sooner or later we'll cross paths. I'll get my chance to beg him to come home.\"\n\n\"I'll go even more willingly if you will do one thing for me.\"\n\nHe looked her over, expecting an outlandish demand.\n\n\"Ask me. But if I don't like it I'll say no and you'll be gone anyway.\"\n\nShe actually got on her knees, something he had never seen her do.\n\n\"I'm begging here, Daddy. Please help me get a lawyer and try to fight for my marriage. I'll pay for it myself, I've got about nine thousand in checking, I'll pay the retainer. All I want is a chance to talk to him. You've put the word out, no one I've found will even talk to me after they find out who I am. Please, Daddy, please.\"\n\nHe had never seen her like this. Maybe there were the beginnings of a decent person there. He thought about it for a few minutes. She remained on her knees, her face a mixture of hope and despair.\n\n\"All right. I'll get Ivan. But baby, turn this into a circus and we'll all be sorry. Act with some dignity. Your word, please.\"\n\nDamn, she was crying AGAIN.\n\nBetween sobs she promised everything he wanted to hear. Looking into her eyes, he was convinced she meant it.\n\nIvan Asimov was one of the best divorce lawyers in the state. What made him stand apart is he never went for the throat, preferring mediation and counseling. He was the divorce lawyer you went to when you didn't want a divorce.\n\nShe had consulted with him twice before leaving. He made her tell him everything, and when she was finished he honestly told her it didn't look good but he would do his utmost.\n\nMuttering a small prayer for his success she returned to the task at hand, lugging her cases.\n\nShe was so wrapped up in what she was doing she didn't even see the man approach her.\n\n\"Miz Canaday, I presume?\"\n\nShe looked up. He was tall, a bit stooped, in a wrinkled suit. Balding with a sight paunch, he was the epitome of a middle manager. He was holding out his hand. I'm Paul DuPont, district attorney for Jefferson County, your new boss. I promised your daddy I would meet you, help get you settled. Here, give me those bags.\"\n\nBefore she could utter a word he got her two largest bags and started walking.\n\nHe's stronger than he looks, she thought as she followed along. Her bags weighed a ton. When you have to pack your life into three bags, you tended not to waste space. Placing the bags in the trunk of his big Ford, he opened the door for her. Settling into the seat, he turned the air conditioner up as high as it would go.\n\n\"Sorry about the heat. You're visiting our fair state in the hottest summer in sixty years. You'll get used to it.\"\n\nNot likely, she thought, looking out the window at the browned grasses and tree leaves.\n\nShe didn't say much, but it didn't matter because he apparently loved the sound of his own voice.\n\n\"As I live and breath, I never thought I would have the daughter of Greg Canaday on my payroll. Just goes to show you just never know. How is he? Still as big a practical joker as he was in college? Why, I mind the time he stole a bra from our ethics professor to build a catapult for history class. That woman had the biggest chest I ever saw. She was not happy. He tried to defend his actions by saying he was ethically bound to get the best materials available. She didn't buy it, and he spent the rest of her class kissing her bottom, and it was proportional to her chest. She got her revenge by making him escort her to a faculty student mixer. He was scared to death she was gonna want a little more, if you know what I mean.\"\n\nPractical jokes? Stealing bras? This was a side of her dad she had never suspected.\n\nHe glanced over and saw her expression.\n\n\"Ah well, we were quite young. Everybody grows up.\"\n\nThey rode in silence for a bit. He pulled into the Ford dealership and she looked at him.\n\n\"We're here to pick up your car. Then, I'll show you to your apartment and you can pick up the keys.\"\n\n\"Afterwards, I'll take you by the office and show you around, introduce you to a few of your coworkers.\"\n\nHe held her gaze for a moment, and she got a glimpse of the power in him.\n\n\"Before we get out, I want to clear up a few things. Your daddy told me pretty much how you came to be here. I'll be getting your drug test results. One whiff of anything stronger than a beer and you're gone, no discussion. Do your job as best you can, stay in line, and this year will be over before you know it.\"\n\n\"Most of my staff are married. If I even think you've done anything unprofessional you'll be back on a train the same day. What you do on your own time is up to you, but DO NOT try to play where you work. Do you understand?\"\n\nAt first she was outraged, how dare he lecture her. She quickly calmed down, this mess was her own making and she could see his point.\n\n\"Mr. DuPont, I assure you I will do the best job I can for you, and as for 'playing', it is my deepest desire to get my husband back, so there will be no playing anywhere with anyone.\"\n\nHe looked her over and nodded.\n\n\"I'll hold you to that. Believe it or not, I know your husband. Not to rain on your parade, but I'd bet my bottom dollar you'll never see Hardass again. That boy is a first class hater, I've seen it. Honestly, I'm surprised you're not dead.\"\n\nHe must have seen the shock on her face.\n\n\"What in the world are you talking about? My husband is the sweetest man I ever met. And it's Hardy, not 'Hardass'.\"\n\nHe looked at her with sadness.\n\n\"Girl, some free advice here. Do not tell anyone who your husband is. There's still a few around that think ill of him. He's been known as 'Hardass' since he was seventeen. He's the meanest man I ever saw, including all the killers and whack jobs I sent to Huntsville. There's no stop in him.\"\n\n\"I was after him for years, he was into all kinds of things. He went to juvie twice. He got off twice after he came of age because of good lawyers and bad police work. I finally had him dead to rights, but the local sheriff and the judge, who happened to be his father in law, got him to agree to go into the military in exchange for a clean record. I always wondered what he had on them. But he's back now, and I'm nothing if not patient. Sooner or later he'll revert back to type, and I'll get him.\"\n\n\"So keep quiet about him. There's still a lot of people who hate him, and many more who fear him. People who aren't above using you for leverage.\"\n\nIt was very quiet in the car for a few minutes.\n\n\"I'm having a hard time reconciling the man I know to what you told me. He loves people, especially kids. I never even heard him be rude to anyone.\"\n\n\"Check the records when you get a chance, just be discreet. He ran a loose group of thugs and petty criminals called 'the redneck mafia'. People were more afraid of him than they were us. At one time, he was considered so mean that if he set the back of your house on fire and stood out front and dared you to come out, most people would think they had a better chance surviving the fire.\"\n\n\"But I hope you're right, that he has changed. But if you don't mind, I'll reserve judgement until I have more facts. Now, let's get your car.\"\n\nAfter a few minutes of paperwork, sign here, sign here, and here, she had her car. A shiny red Ford Focus, it was nice, but was half the size of her Lexus at home.\n\nThe apartment was two bedroom, small but brand new. It seemed to be a nice neighborhood.\n\nThe offices were small, cluttered. Apparently space was at a premium. She was introduced around and left in the hands of Karen Thomas, senior a.d.a.\n\n\"Here it is honey, what you see is what you get. You'll have hardly any privacy, very little time per case, and you better be able to think on your feet. We all share personnel, no one has a private assistant or paralegal, so you have to do a lot of the grunt work yourself. Most of it will be simple, they did it and were dumb enough to get caught. Most times they plead out and it never goes to trial. Paul and I tend to handle the really hard ones. The economy has hurt everyone, driving crime up and our resources down.\"\n\n\"Don't worry, we'll throw you softballs until you get a little seasoning. After that it'll be sink or swim. Here's my card. If you need anything, or just want to talk, call me after six. I'll be glad to give you a hand.\"\n\nShe paused for a minute to see if she was absorbing anything. Satisfied, and finding them alone in her small office, she spoke again.\n\n\"Paul and I are the only ones who know who you were married to. I know he warned you, and you know by now he holds a little grudge. I didn't know about his background, but I have been up against him several times in court, and if his killer instincts in court match them out of court, he could be a very dangerous person. Leopards don't change their spots honey, but it your case he may have applied a little whitewash.\"\n\n\"Your actions may have washed the paint off, exposing his true colors. Be careful if you end up around him, it could end up badly.\"\n\nGwen looked at her serious face, and realized she didn't have any idea who she had married, none at all.\n\n.................................................\n\nHardy sat back in his office chair, idly looking out the window. The thermometer on the bank said 103, another scorcher. His time in Boston had softened him, and he was having trouble adjusting to the heat. Time would toughen him up, it always did. Still, he made sure his runs happened very early in the mornings.\n\nGlancing ay the email on his screen, his frown deepened. He had been out of the military for years, why the summons?\n\nIt was pure military babble, but the upshot was he had to present himself to Major Stein, his old doctor, for a follow up visit, strictly routine, according to the wording. It also made clear it was mandatory, and refusal would result in a visit by C.I.D., with orders to bring him in with or without his consent.\n\nHe sent a confirmation. He would be at Ft. Stewart, Ga. the following week.\n\nRealistically, he knew it might do him good to talk to the major. The man probably knew more about him than anyone alive. He hadn't been doing well since the breakup, finding he had to constantly monitor himself to keep from lashing out at the slightest provocation. It wasn't fair to his clients, most were fighting for their very lives, and they needed him at 100%.\n\nThat night as he got out of the shower, he looked at the scars on his chest, arms, legs, and back. Most were from his time in Iraq, but a few, including one bullet hole, were acquired before he left Alabama. There was only one scar he was proud of, a tiny incision hidden by a tattoo of a snake. A copperhead, as dangerous as a rattler without the benefit of a warning rattle. No one outside his circle of old friends knew the symbolism, he had told Gwen it was a drunken snap decision. When she said he should have it removed, he demurred, telling her it would always remind him to think before acting.\n\n................................................\n\nMajor Stein sat in his office, reviewing his notes on Hardy Wilkes. He needn't have bothered, he could remember everything.\n\nThe man had always intrigued him. Above average in intelligence and size, his good humor and quick wit enabled him to gain friends easily. But when he started peeling the layers of civility away, he realized he was dealing with a very dangerous, very volatile man. \n\nHis early records showed he responded well to military life, liking the discipline and rigidity of the service. The first indications of trouble came in his seventh week of boot camp. He got the full story from his drill instructor, all Hardy would tell him was he insulted his mother, something you didn't do to someone from the South.\n\nThe D.I. was a bit more descriptive.\n\n\"Damn Major, I did not see it coming. Not at all. He just looked like a typical 'good ole boy' from the South.\"\n\n\"In every cycle of recruits, there's always one who thinks he's smarter, better, stronger than us. He's the one you have to break to get the others to fall in line. At first I ignored him, concentrating on the shirkers and loudmouths, but then I got to noticing him. He never smarted off, never disobeyed, but he had that glint in his eye, you know the one that says 'I'm doing this because I choose to, not because you think you can make me.' I decided to cure him of that.\"\n\n\"I gave him every dirty job, extra duty, rode his ass. He did everything I told him to with that stupid half grin of his, like he thought it was funny. It was driving me crazy.\"\n\n\"I did something I hadn't done in years. I engineered a scene where I was riding him hard in front of the other recruits. I was giving him shit and asked him if he was scared of me.\"\n\n\"The little half grin was back. 'No sir, Top, I'm not. I respect you, but I don't fear you.'\"\n\n\"I was losing control. I told him and the rest of the recruits to report for special duty one hour after chow, behind the barracks, stripped to the waist.\"\n\nWhen he showed up I was waiting with two more D.I.s, we were also stripped to the waist.\n\n\"Alright,\" I said, \"there's no rank here, no one will report this. If any man thinks he can whip my ass, step up.\"\n\n\"Of course no one did, so I started taunting a few others before for I got to Wilkes.\"\n\n\"Get up here, you dumb redneck, let's see what somebody unafraid can do.\"\n\n\"He just laughed. HE LAUGHED. Then he said since there was no rank here he could feel free to call me a dumbass and walk away. Just like that, I had totally lost control of the situation.\"\n\n\"He was walking off when I yelled at him.\"\n\n\"Walk off, pussy boy. I bet your momma would be real proud of the chickenshit she raised.\"\n\n\"I finally got a reaction from him. He whirled around, eyes blazing.\"\n\n\"My momma didn't raise me, she died when I was young. Didn't anyone ever teach you to respect the dead?\"\n\n\"I had him, I had his trigger.\"\n\n\"I started calling his mother every name I could think of. I told him I would talk bad about his daddy, but since his momma was such a cheating slut he probably didn't know who he was.\"\n\n\"I saw the cheating remark really worked. He was getting really worked up and I got ready for his rush, when he suddenly smiled at me. The he calmly walked forward, stopped about a inch from my face, looked me right in the eye.\"\n\n\"I'll never forget what he said as long as I live.\"\n\n\"You got anybody you want to send a goodbye message, now's the time. In about thirty seconds I'm fixin' to start beating you, and I won't stop until you're dead.\"\n\n\"Now, Doc, I've been in combat, and before I was a D.I. I taught advanced hand to hand combat courses, so I'm a pretty good scrapper. But if it hadn't been for the other D.I.s and the recruits, there isn't a doubt in my mind I'd be stone cold dead right now.\"\n\n\"I got in a few good licks, but he had skills I never dreamed of, and he wouldn't stop, even when I did. It took seven to pull him off me. I lost two teeth, had seven broke ribs, a cracked femur and two broken toes. Hells bells, Doc, he even bit me. Took four stitches to close it up!\"\n\nHe broke the nose of one D.I., and got a few good licks in on the other before the recruits subdued him by basically laying all over him. The other D.I. got us to the infirmary, The recruits said they had to lay on him for forty five minutes before he calmed down.\"\n\n\"Of course shit hit the fan, you don't hide that many injuries, and word got out. He would have been drummed out of the corps and I would have been retired, but he stepped up and told the C.O. it was an advanced hand to hand training exercise for the recruits that just got out of hand.\"",
        "\"He knew it was pure horseshit, but it made it go away, so he accepted it. He also had Hardy assigned to long range recon school, you know, the toughest of the tough. After that I don't know what happened to him.\"\n\nThe major knew. Top of the class in recon training, one tour of Iraq resulting in two purple hearts and three reprimands. A year stateside, training others, then back in the mix.\n\nHe was halfway through the second tour at the time of the 'incident'. He recalled the reports, including the interview with the lieutenant in charge.\n\n\"We were pinned down in a small valley, never saw it coming. The Taliban were dug into the crest of a hill. they had full range, we only had a small window. I already had two dead and three wounded. Every time one of us tried to move they dusted us. The wounded needed medical attention, and our comms were down, couldn't get a signal. Atmospheric abnormality, they said later. I was sweating it, when a voice I never heard before said almost in my ear. 'Damn, lt, what kind of shit have ya'll got yourselves into?' I freaked.\"\n\n\"This guy just eased right up on us, we never even saw him coming. Tall, lanky, grey eyes and a stupid grin on his face.\"\n\n\"How did you get here?\"\n\n\"Same way you did, I was just a little quieter. They're trying to flank you, but the first two guys they sent out met Allah a little early. Ya'll hold tight, this might take awhile.\"\n\n\"And just like that he was gone, leaving his pack and rifle. I watched him for awhile, and it seemed like he just disappeared.\"\n\n\"About an hour later I thought he had just slipped away, when shooting broke out in the cave, followed by a lot of screaming and what sounded like an animal growling. It quieted down after about ten minutes, except for what sounded like a girl screaming. Our interpreter said it was a kid, yelling he was surrendering, begging for his life, asking Allah to save him from the demon.\"\n\nI took a chance and we rushed the cave. There was seven men in it, and five of them was dead. One survivor was a kid, we found out later he was fifteen, huddled in the smallest crevice he could find in the back of the cave, begging for his life.\"\n\n\"The other man alive was Hardy. He had been shot three times, once through the right arm, breaking it. He had broken his left leg when he dropped into the cave, he said later it was deeper than he thought. He had been stabbed twice, and still had an AK hanging off his back by the bayonet.\"\n\n\"His sidearm had jammed on sand after the fourth shot. He managed to kill three before it did, then went to work with his knife. One guy was stabbed through the heart, but the other must have put up quite a scrap. He was cut and stabbed at least ten times. The kid had panicked, it was his first time in combat.\"\n\n\"What had him freaked though, was that even as wounded as he was, Hardy had his knife in his left hand, and was sticking it into the sand, dragging his body towards the boy. There wasn't a doubt in our mind he intended to kill him as soon as he got close enough.\"\n\n\"The medic had to hit him twice with morphine to knock him out. He was swinging the knife at us, it took fifteen minutes for him to realize we weren't the enemy.\"\n\n\"We back trailed him while we waited for the chopper and found five more Taliban enjoying Paradise, all with cut throats.\"\n\n\"It turns out one of the guys he killed was the son of a Taliban bigwig, and the boy was his grandson. It got so hot for blondes they brought in hair dye for awhile.\"\n\n\"We even got blonde wigs and started leaving tufts around on patrol, just to mess with their minds, you know. Of course he was back stateside by the time all that happened.\"\n\n\"You know, you hear all these wild stories while you're over there, but I never thought it was real until then. He was one of those guys they sent out, alone, with orders to create as much havoc as possible. I wonder if you went down his back trail how many good Taliban are now enjoying their seventy two virgins. That was the meanest man I ever saw.\"\n\nThe major remembered when he first treated him. PTSD was just coming into vogue, and the military was understandably concerned. They wanted a full profile before they returned him to civilian life.\n\nHe had read the original profile, the man should have been bounced over the D.I. incident. \n\nWhen he finally met him, he was surprised. He seemed a laid back, happy country boy, with a smile on his face. It took a long time to get the full picture of his mindset and moral values.\n\nIt wasn't until he discussed his childhood that he made his first breakthrough. The smile had disappeared, remembering tougher times. He remembered his words exactly.\n\n\"I was twelve, my sister was eleven. My dad was a small time career criminal, always into something, always going to jail for short periods. Finally he got caught for grand theft auto, running cars into chop shops. His lawyer told him he was going away, but he would try to minimize the sentence.\"\n\n\"The lawyer said he would get bail reduced, but it would take a few days. Finally, grandpa posted bail. Mom and the lawyer were going to get him out the next day, but he hitched a ride back to the house to surprise mom. When we got home from school he was sitting in his truck.\"\n\n\"He got out and met us, taking us to the truck. I remember he had blood on his white tee shirt.\"\n\n\"Kids, we're gonna sit out here for awhile. I need to tell you something. I love you both, with all my heart. I'm going away, probably for a long while. Hardy, I want you to be a man now, and watch out for your sister. Don't let anything happen to her. Promise me, son.\"\n\n\"I did. He turned to my sister.\"\n\n\"Sissy, you're going to be as pretty as your momma. Find a good man, love him as hard as you can. And promise me, swear on your soul, you'll never cheat on him. I know you don't understand now, but you will later.\"\n\n\"He held us, crying. It was the only time I ever saw him cry. We could hear the sirens, and soon three sheriff department cars slid into the yard.\"\n\n\"The first cop was Will Rob Williams. He was just a deputy then, but later he got elected sheriff. He was a friend of the family, his daughter was a year behind Sissy, and mom used to babysit for them. I was surprised to see him with his pistol out.\"\n\n\"Jimmy,[that was my dad's name]step away from the kids.\"\n\n\"He stood up, spreading his arms out. He was calm.\"\n\n\"Will Rob, I ain't got a gun, it's laying on the floor in the bedroom. I called you guys. I surrender, try not to scare my kids anymore than you have to.\"\n\n\"He held his hands out to be cuffed. Will Rob cuffed him and put him in the car before going into the house. He didn't know it, but I was right behind him.\"\n\n\"He caught them in bed together, naked and doing the nasty, pulled an old revolver out of the dresser, and emptied it into them. I went into shock. It took a long time to get over it.\"\n\n\"Two years later my dad was killed in a prison riot, protecting a guard.\"\n\n\"Truth be told, I never got over it. I got into trouble, ran with the wrong crowd, ended up in juvie a couple of times. Then I got popped for of all things, running hot cars into a chop shop. Will Rob and the judge gave me a chance. Join the military and keep a clean adult record.\"\n\n\"I actually like the military, but it's not going to be a career. If I'm here, it's a pretty good indication ya'll don't want that either.\"\n\nThe major asked him why he went after the boy when he obviously was trying to surrender.\n\n\"When I dropped into the cave, he was the one manning the machine gun, grinning like it was the most fun he ever had. One thing I learned a long time ago, never let a live snake get behind you. If he hadn't panicked, I'd be the dead one and he would have been the toast of his village. I wasn't about to let him live to kill again.\"\n\nHe said it in a calm manner, like it was the most reasonable thing in the world.\n\nHe was right, he would never be career material, too unstable. There were plenty out there who would recruit him, an unstable mind and killer instincts made him very desirable, but the major fought against that. He was surprised to find Hardy had taken every educational opportunity offered, and needed one more semester to get a degree in business. He would be in rehab for at least another year, so the major tried to steer him into continuing his education.\n\nHe never saw him as a lawyer, but he had the right skill set. Intelligence, killer instincts, deceptive, perceptive, able to think on his feet.\n\nBy the time physical and psychological rehab was over, the major was convinced Hardy could control his temper and instincts enough to become a productive citizen. Nevertheless, he had him placed on a watch list.\n\nIn the end he diagnosed him with PTSD, and only he knew it didn't have anything to do with the military, but an incident in the life of a twelve year old.\n\nNow it appeared he had slipped. If he didn't give a good report after his interview, he wasn't sure what was going to happen.\n\n................................................\n\nGwen hated her life, hated it. Dealing day to day with the dregs of society has a tendency to suck the joy out of life.\n\nIt took a little getting used to. Her first case was grand theft auto. It was cut and dried, the guy was caught in the car, switch popped and cranked with a screwdriver that had his prints all over it. Of course he denied it, saying he borrowed the car from a friend, who didn't have a name or address.\n\nThe young black man denied even being in the car later.\n\nGwen couldn't believe it. The public defender knew she had no experience and tried to get him probation. While she was new to litigation, she was no stranger to negotiations, and that turned out to be sixty percent of her job. Karen was sitting in, and she wanted to make a good impression. She sat back and looked them over, letting them sweat.\n\n\"Bullshit!\" she exploded.\n\n\"Your client is on the dash cam being pulled out of the car, cursing and screaming. He had crack in his pocket and had a blood alcohol level of .10, two points over the legal limit. His record took three sheets to print out.\"\n\n\"I'm new here and I'd love to go to trial, just to hone my skills. I HAVE to offer you a deal, but I really hope you don't take it.\"\n\n\"Something about your client makes me want to go to the bathroom. Here's the deal, plead guilty to grand theft and I'll forget about the drugs and the drinking. I'll even try to get him in rehab. You've got until I come back to make up your mind. If you don't take the deal, I prosecute for everything and the sentence triples. With his priors, it'll be a while before he boosts another car.\"\n\nShe got up, leaving Karen, the p.d., and the perpetrator sitting with their mouths open. She really did have to go to the bathroom, and when she came out Karen was standing there grinning.\n\n\"They took the deal before you had time to flush. The public defender will probably go back and tell the rest of his office about the new hardass Yankee a.d.a.\"\n\n\"I think you might do well here, but I have to warn you, they won't all be that easy.\"\n\nThey weren't. The workload was horrendous. She started taking work home, it wasn't like she had anything else to do. It got her noticed. Paul called her into his office.\n\n\"Girl, I'm impressed, you got the makings to be a hell of a trial lawyer. That being said, lighten up. All work and no play yada yada yada. Go out, have a few, talk trash, flirt with the locals. Rumors are already floating around about the Ice Queen from the frozen North. You'd be amazed how many guys want to thaw you out.\"\n\nBefore she had a chance to explode he changed subjects.\n\n\"How's the divorce going? I know you still wear your ring, that's why the wolves haven't tried to take you down, but if word gets out you're in the middle of a divorce they'll come after you hard.\"\n\nShe sighed. Ivan was really good and had thrown up roadblocks, pushing for mandatory counseling. So far his efforts had been blocked, and oddly, Hardys' lawyer didn't seem to be in too much of a hurry. It had been six months since the destruction of her marriage and she still hadn't seen or talked to him.\n\n\"I don't know how it's going. Everything is at a standstill. I can't talk to him and he won't talk to me. I'm starting to lose hope.\"\n\nDamn it, she couldn't believe she could still cry over him. It was worst late at night, when she rolled over, expecting him to snuggle her and kiss her forehead like he always did, and wake up to find she was alone. \n\nShe would go out for drinks after work on Fridays with Karen and a few friends from the office, catch a movie with a female friend or two, but that was about it. She joined a gym and worked out to relieve stress. The loneliness and lack of affection was killing her. She would have sold her soul for a chance to see Hardy again.\n\nShe got her wish in a most unexpected way.\n\nA small man, obviously in his late sixties or early seventies, and a tall woman, maybe mid-forties, came to see her, showing up at her apartment. She didn't know them, but as soon as they stated their business she couldn't get them inside fast enough.\n\n\"You don't remember us, but we were at your wedding. I'm Joshua Hardy. Hardy Wilkes is my grandson. This here is Hildy Baker, my niece. If it's not too much bother, we'd like to set a spell with you.\"\n\nShe settled them into the living room, asking if them would like a drink. Hildy asked for iced tea, and frowned when she told her all she had was unsweetened. Gwen still wasn't used to the syrupy sweet concoction Southerners consumed with gusto. Joshua wanted a beer. They both took a St. Pauli Girl, her favorite beer and one of the few treats she allowed herself.\n\nAfter an appreciative swallow, the old man started.\n\n\"We're here about Hardy. He ain't doing good, not at all. As a matter of fact, he's been seeing the shrink he had when he was in service, and won't talk about it. He's edgy, and the whole family is walking mighty soft around him. You know first hand what he can do when he gets pissed. We need your help.\"\n\nTears formed again, she couldn't help it.\n\n\"I'd love to help you, but the last thing in the world he wants is to see me, he's made that abundantly clear. That being said, I'll do anything you want.\"\n\nJoshua cleared his throat. \n\n\"He's still got it bad for you. I know for a fact he has a picture of you on his dresser. He said it was to remind him how stupid he had been, but I don't think even he believes it. He's deeply ashamed of what he did when he caught you in bed with that man. Not for beating him, or slapping you, but for what he did afterwards.\"\n\nGwen fought an almost uncontrollable urge to rub her left breast. There is no easy way to remove superglue, and a good bit of skin came off in the process. It was even worse for Allan, he lost a lot of skin in a most uncomfortable place. It was so painful he had to be sedated and take pills later to keep him from getting an erection while he healed.\n\nShe didn't know it, but the memory was so traumatic for him that it was months before he could maintain an erection and perform in bed.\n\n\"It was pretty painful for me, too. If he wanted to give me an object lesson about cheating, he succeeded. What he doesn't know is that I was drugged, and what was happening was basically rape. I even vaguely remember trying to fight him off.\"\n\nHildy had perked up with that information.\n\n\"If that's true it could help. Do you have proof?\"\n\n\"I can get a copy of the tox screen they ran at the hospital. Would that help?\"\n\nShe frowned.\n\n\"It might. But, Hardy told us you had done it before with that man, in Paris. Anything to that?\"\n\nGwen flushed, there was no easy way to explain it.\n\n\"I'm ashamed to say there is. And there were drugs involved, but I took them willingly. It was just a monumentally stupid and selfish thing, even I don't know why I did it.\"\n\nJoshua spoke sadly.\n\n\"Well, that might just tear it. If it had been one time and you had been drugged, he might let it go. But twice? I don't think he will.\"\n\nHe went on to tell her about Hardys' mother and father, and how it caused his unrelenting hatred of cheating spouses. She paled as she heard the story.\n\n\"It gets worse, I'm afraid. Did you know he has a sister? He hasn't seen or talked to her in ten years. Why? Because he effectively banished her from the family. She got married, a good boy. Two years later she cheated on him and Hardy caught her. He beat the hell out of her and her lover. Then he beat her husband for allowing it to happen, even though he never had a clue.\"\n\n\"They reconciled about three months later and moved out of state because they were afraid of him. She's got three kids now, great grandchildren I never see unless I go to her because she's afraid to come back.\"\n\n\"Her lover disappeared without a trace, left his car, clothes, everything. To this day there's a pond way out in the boonies no one will fish in.\"\n\nThe news had her reeling. Had she really married such a monster? Why did she still love him so desperately and want him back?\n\n\"Please, Mr. Hardy, how can I help? I'll do anything!\"\n\n\"Well, if you're willing, the first thing we need to do is get you face to face. The family reunion is always held the second Saturday in September. That's three weeks away. He never misses one. I always wondered why you didn't come, but no matter. Be there and we'll make sure you get together where we can watch you in case it gets ugly. Are you willing?\"\n\nShe nodded, not trusting her voice.\n\n\"Good, good. Come out this Sunday for dinner. That's lunch to you Yankees. I'd like to talk to you some more. Give Hildy your number, she'll give you directions. Thank you for your time.\"\n\nThey rose to leave, and she surprised everyone by kissing his cheek and hugging Hildy. She stood back embarrassed but he patted her cheek and Hildy smiled.\n\n\"See you Sunday. Get there before noon.\"\n\nShe stood and watched them drive off in the older model pickup, having hope for the first time in months.\n\n.................................................\n\nHardy was restless, still on edge. The session with Major Stein was rough, and he was surprised when he set up a standing appointment every two weeks. He had even prescribed a drug to help him relax. He hated taking it, it was like admitting he was crazy, but he did. It actually seemed to help.\n\nCrystal coming home also helped, but he knew she had an agenda so he limited his time with her. He didn't want to lead her on, just was not interested in a relationship right now. She knew it, but still made it plain she was available.\n\nThe cases helped. Greg had given him free rein to pursue cases he thought were worth taking. There was no shortage, services of his caliber were hard to come by, especially if it was free.\n\nMost were cases of being in the wrong place at the wrong time. Some were guilty, but mitigating circumstances came into play. He tried to get the innocent absolved and the guilty treated fairly. His reputation was growing, and he received job offers from premier firms all over the country.\n\nGreg talked to him almost weekly. He knew he wanted to talk about his daughter, but every time he came anywhere near it Hardy would shut down the conversation and hang up.\n\nHardy didn't know, but Greg was also keeping close tabs on his daughter, and was pleased with what he saw. Paul had very positive things to say about her, but voiced concerns about her mental health.\n\n\"All she does is work and go home, and half the time she takes work home with her. Her drug tests so far are clear. She's like a recluse, as far as I know she doesn't even shop. How unhealthy is that for a woman?\"\n\nHe still talked to her once a week, and the conversations were all the same. She would talk about a case she had in generalities and ask his advice. Then she would ask if Ivan had any news for her. The answer was always the same. He was working on it.",
        "What he didn't tell her was that he had a little talk with Hardys' attorney, suggesting he take his time filing motions. The man was shocked that someone as prominent as Greg suggest he not look out for the best interests of his client, but they were old friends, and Greg convinced him, along with Ivan, that maybe divorce was not in anyone's best interest. So things slowed to glacial speed.\n\nThe only bright spot for Hardy was reconnecting with his family, cousins mostly, on his mothers' side. His dad had one brother, who died in Vietnam, and one sister, who died in a car crash at an early age. He and his sister were the only heirs to his grandfathers' farm. He was especially fond of Aunt Hildy, she was as close to a mother as he was ever going to have.\n\nHe ate Sunday dinner with his grandfather and whatever cousins would show up almost every week. Even though they were related only through his daughter in law, they still treated Joshua like a grandparent, maybe because he was a good man, or maybe because their grandparents were mostly gone, and family was important in their lives.\n\nHe often thought that his family was a matriarchal society. They respected his grandfather, but Aunt Hildy was the arbitrator in disputes, confidant to the younger generation, and final law. No one thought to question her. Luckily she was blessed with an innate wisdom and an abundance of common sense.\n\nThis was pretty much standard through the South. If you saw someone, the first thing they said was \"How's your momma and them?\", them being the rest of the family. Pretty much put their priorities in perspective.\n\nUsually everybody that came brought a side dish, there was always plenty of fried chicken, pork chops, hamburgers, or steaks to go round. If there wasn't, they fixed more. It was the bright spot in his week. He was terribly disappointed that he had to travel and miss this week.\n\n...............................................\n\nGwen didn't know what to expect, so when Hildy gave her some advice, she was grateful. Not much of a cook, she showed up at nine with two cases of St. Pauli, ready to help Hildy. Joshua was pleased to see the beer, and iced it down while Hildy gave him dire warnings of what would happen if he started on it before dinner.\n\nBy ten people started showing up. Gwen had mastered the art of tea making and had several gallons ready to be chilled. The introductions flew, and she knew she would never keep up.\n\n\"Don't worry, child, it'll come to you. Right now, just smile and be polite. They'll warm up to you pretty fast.\"\n\nWhat disconcerted her the most was the teens and younger people addressing her as Aunt Gwen. Again Hildy interpreted.\n\n\"Be proud. When they address an older female as aunt, no matter what the familial relationship, it's a sign of respect and acceptance. By now they all know who you are, but most will be too polite to bring it up. Now, help me with the burgers and hot dogs.\"\n\nIt was the most enjoyable afternoon she had had since coming south. After the meal she found herself surrounded by women from their teens and early twenties, to a few in their late fifties, sitting in the shade of an oak grove, while the men went off to throw horseshoes and drink beer.\n\nThe questions soon flew. Was she really a lawyer? What was Boston like? Did she like it here? The questions seemed endless. Then one of them brought up the elephant in the room.\n\nWhat was Uncle Hardy like? To the younger generation, he was stuff of legend. A war hero, married to a Boston belle, defender of the weak and downtrodden. She chose her answers carefully.\n\n\"He's the best man I ever met. Kind, considerate of all. A true Southern gentleman.\"\n\nOne girl was persistent.\n\n\"If he's so great, why aren't you together anymore? The family talks you know. You're down in Birmingham and he's up here. I heard he beat you up.\"\n\nTears formed but she refused to let them fall.\n\n\"He didn't beat me up. He hit me once, in what he thought was self defense. He's not with me right now because I was a weak, foolish person, and I did something so bad he lost respect for me. I'm trying to fix that.\"\n\nHildy had been listening.\n\n\"Melissa Sue, mind your tongue and your manners. Your Aunt Gwen could use a little support right now.\"\n\nMelissa Sue apologized immediately, and gave her a hug. That broke the dam, and the tears flowed. The girls immediately went into sister mode, hugging her in turn. She couldn't help it, for the first time she could grieve in public, and the tears were a long time stopping.\n\nLater, as she helped with the cleanup, Hildy gave her words of encouragement.\n\n\"You made some friends today. You didn't lie, you stood up and took responsibility. They respect that. Don't be pushy, they think that's a Yankee trait and they don't respond well to it. Just be you, and they'll come around. Now, you have to take some leftovers home. I'll get the Tupperware.\" \n\nHildy hugged her and Joshua surprised everyone there by kissing her cheek. That simple act solidified her standing in the clan. \n\nShe was thinking as she drove away of the many social events she had attended through the years, the black tie affairs, the brunches, the formal dinners, the power lunches, and none compared to sitting down at a picnic table with people who considered her family, who weren't impressed with her social standing or money, who she was just 'Aunt Gwen' to, no more, no less.\n\n.................................................\n\nThe mood was somber at work that Monday, but for the first time in a long time she had hope for the future. As she prepared for another day of defending the public interests, Paul called her into his office.\n\nKaren was there, she couldn't put her finger on it, but she felt like something bad was about to happen.\n\nPaul seemed uncertain, rambling. She let him go on for awhile before she broke in.\n\n\"For goodness sake, Paul, what's going on?\"\n\nHe sighed.\n\n\"Let me give you a little history lesson. We got troubles, for some reason we're right in the middle of a drug corridor. They bring it in through the swamps and bayous of Louisiana as well as our coast and the coast of Mississippi and from there it's a straight shot north. You know how many interstates cross right in town. We've made some arrests, some big seizures, but they're just a drop in the bucket. We've noticed more 'retail' traffic lately, and have determined that the cartel that's moving through has decided to move in. They're muscling local dealers, turf wars are starting to break out. It's getting messy.\"\n\n\"Saturday we got a break. One of the county deputies stopped a car that was weaving. The guy was stoned, and had enough coke in his car to constitute a felony distribution charge.\"\n\n\"The guy that got popped is Raul Escobar, nephew of the cartel leader, Don Vincente. They have a history in Mexico of doing in cops and prosecutors involved with one of their major players. Rumors are already floating.\"\n\n\"This one could be bad. It probably won't go to trial for another few months, but right now he's in jail with no bond because he's a foreign national and a huge flight risk.\"\n\n\"I want you to try the case. You've got no relatives here, there not much of a way they can get to you. Will you take it?\"\n\nShe sat for a minute, thinking.\n\n\"In other words, I'm the sacrificial lamb. I'll be gone in a few months, and no one locally will get the fallout, except maybe you and the cop. Minimizing risk, counselor?\"\n\nHe had the good grace to look ashamed.\n\n\"Basically, that's it in a nutshell. They got nothing to threaten you with. If they check your background, I don't think even they are stupid enough to threaten you father. If they check on your husband they'll find the same thing. We will, of course, keep an eye on you. Think you can do it?\"\n\nShe smiled.\n\n\"Give me the file.\"\n\n.................................................\n\nHardy wasn't in the best of moods. His cousin and close friend had just dropped by, and the news wasn't good.\n\nThey hugged, got caught up on each others' lives. Harry was married and had two kids, both boys. His wife was rather plain, but the love he had for her made her beautiful, at least to him.\n\nHarry had been his second in command in his wilder, younger days. Not a planner, he was very good at executing. Dependable, loyal, not afraid to speak, they made a good team.\n\nWhen Hardy left for the military, another cousin, Roy, had stepped into the power vacuum and took over. He didn't have Hardys' finesse or style, but he got things done.\n\nHarry was there with a problem. Roy had been eyeing the armored car that serviced the local Wal-Mart. His sources said it was a two to three hundred thousand score, and that made it very attractive. He had made a plan, and wanted Harry to do the job.\n\nWhen he started, Hardy stopped him.\n\n\"Hold up, slick. I'm an officer of the court now. Don't tell me about anything illegal, I'll be duty bound to report it.\"\n\nHe saw the disappointment in Harry's face.\n\n\"But, say, if you were talking about a hypothetical situation, and wanted to pick my brain as a lawyer, I would not be adverse to offering an opinion.\"\n\n\"Thanks, Hardy. I got a body shop, I'm making good money, enough to support my family. I'm getting a little long in the tooth for wild shit like Roy has in mind. Now, say this was really going down, and these were the plans, think it would work?\"\n\nHe looked it over.\n\n\"Whoever does this is looking at a minimum of seven years in the federal prison. This is the same as robbing a bank. This plan wouldn't work. Too much time lag. You know those things have gps, streaming video, panic buttons, plus they're a lot stronger than they used to be. Whoever did this would have to be in and out in less than ten minutes, and that includes subduing the armed guards and off loading the cash. You can't do it on that time frame. I suggest you tell whoever set up these hypothetical plans to forget it and hit an easier target.\"\n\n\"Thanks Hardy, I appreciate it.\"\n\nThey shook hands and Hardy gave him some cards.\n\n\"Here, just in case one of the cousins run into trouble. Tell them to say I'm their lawyer and nothing else until I get there. Got it?\"\n\nHarry turned down the job, citing Hardys' analysis. Roy got three of the younger cousins to do it anyway. They were in custody before an hour had elapsed.\n\nHardy got them to plead them out, they didn't have a choice. They were too loyal to rat on anyone, saying it was their own idea. Each got seven to ten in federal prison.\n\nRoy was upset and sent word to Hardy to stay out of his business. Hardy sent back word he needed to stop making plans that got kids locked up.\n\nRoy was worried. His people were starting to question him. Things had not been going well for him lately, a new player was moving in, revenue was down, and he didn't see a good end in sight. On top of all that, he felt he was being undermined by Hardy.\n\n\"I need to teach that prick a lesson. But if I touch Hildy or Joshua, the cousins not in the business could make it very uncomfortable for us. Too bad there's nothing I can use for leverage.\"\n\nRonnie Wilkes was his enforcer. What he didn't have in brains he made up for with size and brutality. Plus, he had never liked Hardy because he didn't seem to fear him.\n\n\"Wal, cousin, There's always his old lady. They're split up, but you know how he is about people messing with things that belong to him.\"\n\nRoy snorted.\n\n\"I ain't going all the way to Yankee land to go after his bitch. I need something local.\"\n\nRonnie grinned.\n\n\"Don't have to, she's an assistant d.a. right here in Jefferson County. Cousin Bertie told me, after making me swear I wouldn't tell anyone. She's going by her maiden name, Canaday. If we stop by and pay her visit he might get the message.\"\n\nHarry was listening to the conversation, and gave his opinion.\n\n\"I think that is probably the stupidest idea you've ever had, Roy. They didn't give him the nickname 'hardass' because he could sit on uncomfortable furniture. This might blow up on you, make you look mighty foolish.\"\n\nRonnie scoffed. \n\n\"He's old news. A freakin' lawyer, how tough can he be? I bet he's soft as jello and can't walk up the courthouse steps without losing his breath.\"\n\nHarry actually laughed.\n\n\"You keep thinkin' that. I'll put it on your tombstone. I've seen him, boy, he's bigger than ever and it ain't flab. But, see for yourself. Don't think for a minute when this little plan goes to hell I won't be there saying I told you so.\"\n\nHe walked out, still laughing.\n\nThey scouted her. She was a creature of habit, always arriving home at about six. She hardly ever went out.\n\nHe couldn't believe how easy it was to get her to let them in. All they had to say was they were cousins and had a message from Hardy, and she practically dragged them into the house.\n\n................................................\n\nGwen didn't like the looks of the two men, but when they introduced themselves and mentioned Hardy, she took off the safety chain and let them in.\n\nIt happened so fast she didn't have time to react. The big one grabbed her and zip strapped her to a kitchen chair, shoving a gag into her mouth. The older one took another chair and sat it in front of her. \n\n\"Listen Missy, I get some promises from your old man and we leave quietly. He bows up on us the least little bit and your life could get unpleasant. I'll start with letting Ronnie get to know you a little better and go from there. If I take your gag off, you promise not to scream? I need you to speak so Hardy knows I'm really here with you. Got it? Now, I'm gonna call him, you just set tight.\"\n\nShe nodded. When the gag came off she smiled. It gave Roy the creeps.\n\n\"You know who my husband is and you're dumb enough to do this? I hope he lets me watch when he gets hold of you. And if you're depending on me to call him, you're out of luck. I don't know any of his numbers.\"\n\nSpeaking with more confidence that he had, he told her not to worry, he had the number.\n\n\"I'm gonna put it on speaker so he can hear us.\" \n\nHe picked up on the third ring.\n\n\"Hardy Wilkes.\"\n\n\"Hardy, Roy here. I hear you been snooping around my business. I don't like people in my business. I got a woman here who wants to say hello.\"\n\nHe held the phone up to her. \n\nStaring straight into his eyes, she spoke.\n\n\"Hardy, honey, I want you to tear them a new ass.\"\n\nRoy snatched the phone back.\n\n\"That's right, I'm here with your woman. We don't want this to get ugly, now do we?\" \n\n\"Why would it get ugly, Roy? Great minds must think alike. I heard you wanted to talk and stopped by your house. You sure got a nice family.\"\n\nIt was the first time she had ever seen a man look like he was going to faint.\n\n\"Now, Hardy, don't....\"\n\nHardy talked right over him.\n\n\"Your wife sure makes good pie. I brought a little surprise for you. I got your daughter June sitting on my lap, swinging on the front porch. I had to come out here to get signal. She sure wiggles a lot for a six year old. Here June bug, tell your daddy what I brought you.\"\n\nA child's excited voice was heard,\n\n\"Daddy, guess what? Uncle Hardy brought us tickets to Six Flags! They got rides and everything! He says we're going this weekend. Isn't Uncle Hardy the best? Are you coming home soon Daddy?\"\n\n\"That's enough, June bug. Let me finish talking to your daddy. See if your momma will give me another piece of that pecan pie, okay?\"\n\nYou could hear the little girl scurry off, calling for her mother.\n\nRoy spoke up, the nervousness in his voice.\n\n\"Now, Hardy, let's not let this get out of hand. I..\"\n\n\"Shut the fuck up, asshole. You need to spend more time with your family. You know kids like June bug disappear every day, right? And your oldest, boy, I bet she's already breaking hearts. Be careful, watch her close. Beautiful girls like her could end up in some big trouble if you're not careful. You hear what I'm saying, Roy?\"\n\nRoy was opening and closing his mouth like a fish trying to breath air. Gwen couldn't help it, she spoke up.\n\n\"I think he hears you just fine, honey.\"\n\n\"Good. Now, I think you need to get on home to your family. You're going to Six Flags this weekend. Three days and two nights, all expenses paid. A client gave it to me as a bonus, and I don't have a family to enjoy it with. I'm gonna call June bug Monday. If she doesn't say she had a great time I'm gonna be pissed. You really wouldn't like me to be pissed.\"\n\n\"And Roy, you're right, your business isn't mine and I don't do that sort of thing anymore. But, Roy, my business is my business, and don't go poking in it, you understand? Until I get the divorce papers, she's still my business.\"\n\n\"If Ronnie is there, tell him if she says he knocked one hair out of place, I'll cut his hand off, one finger at a time. Nowhere he can hide, no one he can hide behind. You understand me?\"\n\nRoy finally got his voice back.\n\n\"Whatever you want Hardy, you got. I'm sorry we had this misunderstanding. If there's ever anything you want, just say the word. Please Hardy, leave my family alone.\"\n\nHe was almost crying.\n\n\"Well, Roy, I'm glad we cleared this up. Remember, if June bug doesn't have a good time this weekend, I'll be looking to you for answers. And I'm taking the rest of this pie home with me, if I can talk your wife out of it. Kiss your family for me when you get home. You don't know how lucky you are.\"\n\nThe line went dead.\n\nThey were very gentle removing her restraints.\n\n\"Please tell him we didn't mean nothing, and that we didn't hurt you. Please.\"\n\nShe laughed.\n\n\"You assholes. If he had wavered just a little bit I'm sure I would have had a very bad evening. I'm going to tell him you roughed me up and that Ronnie boy let his hands wander. Tell me which funeral home you think will handle your services and I'll send flowers. Now, get the hell out of my house!\" \n\nThey almost ran out the door. She leaned against it. So much for the 'redneck mafia' that Hardy had built before he got shipped off to the military.\n\n\"He still loves me. He threatened a whole family for me. I got to hear his voice. All in all, a good day.\"\n\nSix months ago that would have filled her with horror. She went to bed and slept like a baby.\n\n.................................................\n\nShe dressed, undressed, dressed again for the reunion. Hildy said they would be outside most of the day, wear something comfortable and light. She finally settled on a modest white tank top and green cargo shorts. It seemed to hit the right balance of comfortable but attractive.\n\nHair and makeup were totally different matters. Being outside, she went light on the makeup, and put her hair up in a style that looked spontaneous but every woman knew took quite a bit of work. She discovered she enjoyed shorter hair, and it was nowhere near as long or complicated as it used to be. She rehearsed over and over what she wanted to say if she got a chance to talk to him.\n\nThey were cooking whole hogs, chickens, even a side of beef. Four cookers were going full blast when she got there, and the smell was unbelievable. Joshua was watching for her arrival. Hopefully he was glad to see her, but it could be the five cases of beer, St. Pauli of course. She had gotten him hooked, and he almost started a riot with the guys tending the kegs when he said it was better than Bud. \n\nHildy grabbed her, shoved an apron in her hands, and sent her to the kitchen. She was greeted by a chorus of \"Hey, Aunt Gwen\", many of them she was sure she had never met. They put her on the slaw line, and for ninety minutes she ran cabbage through a food processor. The men were setting up tables and carrying the side dishes out. She kept looking for Hardy. Hildy noticed.\n\n\"Relax, hon. He's coming. One of the cousins got into a little scrape and he had to go down and smooth it over. He's on his way. Why don't you go freshen up? This kitchen hasn't done much for your hair.\"",
        "So much for the elaborate simplicity she was going for. She finally gave up, combed her damp mop into a simple ponytail, and hoped for the best.\n\nFinally they gathered for the blessing. You always have a blessing at these events, whether you believe or not. A few of the cousins had a band. They had set a stage up for later, and they handed a microphone to Hildy.\n\n\"I'm gonna do my Minnie Pearl imitation. HOWDEEEE!\" The sound echoed off the low hills.\n\nA chorus of \"Howdee\" came back to her.\n\nShe held her hands in mock disappointment.\n\n\"Ya'll forget. I'm related to you. I know you can get louder than that. We ain't gonna eat until I'm satisfied. HOWDEEEEEEEEEEE!\"\n\nThey probably heard them in the next town.\n\n\"That's better. Thanks so much for coming. There ain't nothin' better'n family. Before we eat, make sure you thank the cooks, some of them have been at it for hours. And thank the ladies for the side dishes and great looking desserts.\"\n\n\"Now, bow your head, and let's remember the ones who can't be here, and the ones that will never be here again. Keep them in your hearts.\"\n\nAfter a short silence she spoke up again.\n\n\"God, thank you for friends and family. We ain't nothing without them. Bless the new arrivals to the clan, and hold the departed near to you. Help the ones that are lost find their way back home. Help the ones estranged find their way back to the fold and each other. Help us be better people. Bless this food and all present. Amen.\"\n\nThere was a rousing response of \"Amen!\", followed by a scramble to the tables. Gwen stood, transfixed by the blessing, and then added her own prayer, the most heartfelt she had ever done.\n\nHildy hugged her.\n\n\"Come on girl, before they eat it all.\"\n\nShe wasn't sure exactly what she ate. There was something called burgoo, made with mutton, a cousin from over the Tennessee line brought. Another from the coast of South Carolina brought Brunswick stew, which tasted great once you got over how much it looked like it had already been eaten and lost. There were about twenty homemade barbeque sauces, from sticky sweet to blistering hot.\n\nGreen beans, butterbeans, blackeyed peas, Lima beans, corn on the cob, fried corn, creamed corn. Kale, collards, mixed greens, tender greens, rape, sweet potatoes, sweet potato casserole. Potato salad, fried potatoes, hash brown casserole. Fried squash, okra, sliced onions, sliced tomatoes, cucumbers. Pickles of every description made from just about anything. Dishes she couldn't be sure what was in them. Gwen didn't know why the tables didn't collapse.\n\nAnd desserts, oh my. Carrot cake, chocolate cake, fresh coconut cake, Appalachian stack cake,upside down pineapple cake, banana bread, apple pie[fried and baked]peach pie, coconut pie, chocolate pie, pecan pie, strawberry pie, blueberry pie, cupcakes, cookies, gelatin molds. She felt her arteries harden and waistline expand just looking.\n\nHealth concerns didn't stop anybody from digging in, so she grabbed a plate and stepped up. They knew she wasn't familiar with a lot of the foods, and they made a production of introducing them to her. Try cousin Freds' fried chicken, Aunt Zelda's carrot salad, the greens, the beans. She thought she was going to explode as the jibes got more pointed when they got comfortable with her.\n\nTaste this sauce, Yankee girl, don't be a wuss. Yeah, it's hot, kill this beer, it'll help. Don't hurt her feelings, eat it. Hildy rescued her. \n\n\"Stop it, or she'll be known as the girl that ate Alabama. She'll be around for awhile, she'll try it all later. Stop before she pops!\"\n\nShe took her hand and led her inside.\n\n\"Hardy just called, he got held up. He'll be here in about an hour. Why don't you fix him a plate of his favorites and put it back. That'll give you a chance to talk to him. Come on, I'll help you.\"\n\nThey ended up fixing three plates, one meats, one veggies, one desert.\n\nHildy smiled. \n\n\"The old saying about love and food must be true. Feed him this and he'll be so full he can't run, and so happy he won't fuss. Well, not much, I hope.\"\n\nGwen did too. She loosened the belt around her shorts. They had elastic and she was stuffed, so she was sure they wouldn't slip. A decision she soon regretted.\n\nAn hour passed and still no Hardy. He called Hildy, saying he didn't think he would get the cousin bailed out in time to come. Hildy insisted he stop by, if nothing else for the plates of food she had saved him. He promised, but said it would be at least two more hours.\n\nThe older folks dozed, sated with food and family. The younger ones cleaned up a little before they too relaxed. The kids buzzed around, powered by the boundless energy of youth.\n\nGwen and Hildy wandered round, talking to everyone. Gwen felt like she was running for office the way she was shaking hands and kissing babies, but she didn't mind. Somewhere she lost Hildy and ended up walking with one of the cousins close to her own age. \n\nThere was a group their age clustered near the creek. They went over and she soon discovered the family drink, ginger fizz. One half family brewed corn liquor, one half a local brew of ginger ale known for it's bite. It was not for the faint of heart.\n\nGwen tasted one and it felt like her mouth was on fire. She went pale, and then bright red. When she finally started gasping for air the group broke up laughing.\n\n\"Don't worry, Aunt Gwen, it'll stop burning in a minute. Don't be mad at us, everyone new to the family gets ambushed like this. Here, this is what it's supposed to taste like.\"\n\nShe eyed it warily. The same base, but with lemon, orange, and lime slices, plus a few cherries thrown in. She took a sip and actually enjoyed the taste. She ended up drinking three in an hour. What she didn't know was it still had just as much liquor in it, and she was getting really buzzed.\n\nShe went to the bathroom, talked to Aunt Hildy, found out Hardy should be there any minute. She worked her way back to the group by the creek, stopping and being stopped along the way. All in all, she was very happy. Seeing Hardy would cap a wonderful day.\n\nThe band was just starting to play, country and old rock. They weren't half bad. The sun was just beginning to decline, giving the day a golden, sepia glow.\n\nThen, it all went to pieces.\n\nCrystal Anne was at the table with her new friends, talking to some big guy with a cap on. She was rubbing his shoulder, laughing and shaking her hair. Damn her, she was the last person she wanted to see. Long red hair flowing, highlights glinting in the sun, white halter top and shorts so small they looked like panties. Every man there was drooling. At least she wasn't around Hardy.\n\nThen her world imploded. Crystal playfully knocked the cap off the guy, exposing shaggy, pale blond hair, which she ruffled affectionately. She reached the table and the man turned. She found herself staring directly into Hardys' eyes. His hair was longer, and he had a short beard, but the cool grey eyes bored holes in her soul.\n\nShe snapped. All her planning, all her hopes, and he was with HER! Looking back, she didn't even remember starting it.\n\n\"GET YOUR HANDS OFF MY HUSBAND, YOU MAN STEALING BITCH!\"\n\nShe grabbed a handful of hair and yanked backwards. Crystal Anne slammed into her, knocking them both off balance and sending them tumbling into the creek. Joshua had taken his backhoe and formed a small pool, intended for the smaller kids in the summertime. It was about waist deep at the deepest point.\n\nGwen never let go of her hair as they hit the water. Even in early September, the water was COLD! Crystal was floundering, trying to stand upright. Gwen yanked her head under again, and as she was gasping for breath she ripped her halter off.\n\nBy then a good crowd had gathered, and she thought she could get out while Crystal crouched in the water to conceal her chest. She started up the bank, twirling the top and laughing.\n\nCrystal surged out of the water, 'cussing a blue streak', according to what she heard later, and grabbed Gwen by the waistband of her shorts. The belt had been loosened and the shorts slid down her legs, exposing her ass in all its' glory, covered minimally by a lacy black thong. She had worn it in the hopes of flashing Hardy, it was always one of his favorites.\n\nShe slid back into the water, shorts entangling her legs, and Crystal gave her a mighty slap. She responded by raking her nails across her neck, drawing blood. They were tumbling in the water, both by now half drowned. Somehow half of her tank top was gone, along with the bra beneath.\n\nShe could hear the crowd yelling and clapping, but just didn't care. She was gonna kick this bitches' ass if it was the last thing she did.\n\nSuddenly a voice boomed out.\n\n\"YOU GIRLS STOP THAT THIS INSTANT! SHAME ON BOTH OF YOU.\"\n\nTo reinforce her words she grabbed a cooler and dumped it on them, cans and all. It shocked them into stillness.\n\nIt was Hildy, and she had a full head of steam. She looked at two of the larger cousins.\n\n\"Shirts off! Now!\"\n\nThey hastily tossed her their tee shirts. She threw them down to the girls.\n\n\"Put these on and get your asses up to the house right this minute, else I'm gonna show everybody what a real ass whipping looks like! NOW!\"\n\nThey scrambled into the shirts and ran to the house, holding them down past their bottoms. Hildy wasn't far behind.\n\nJoshua was waiting for them and shooed them inside. Soon Hildy was pacing up and down before them.\n\n\"I hope you're proud. It'll be a long time before the cousins forget this reunion. What a way for two supposed ladies to act!\"\n\nIt felt like they were ten years old.\n\nCrystal Anne said \"She started it!\"\n\nGwen said \"No, bitch, you started it by touching my husband. If I catch you around him again this won't even compare to what I do to you.\"\n\n\"Fuck you, you gave him up when you couldn't keep your legs closed. I, at least, would be faithful to him.\"\n\nThat stung Gwen more than she cared to acknowledge.\n\n\"Fuck you too. Until the divorce is final, he's mine! And I intend to stop the divorce, we'll be together again, you'll see.\"\n\nCrystal sneered, \"Yeah, I see that happenin' real soon. Just as soon as I get my snowball franchise in hell.\"\n\n\"THAT'S ENOUGH!\"\n\n\"Crystal, go with Joshua. He'll show you my room. You should find clothes to wear home. They'll be a little loose but it'll have to do.\"\n\nAfter Crystal left the room, Hildy looked at her sadly.\n\n\"Well, if you wanted to make an impression on him, it worked.\"\n\nGwen teared up, again.\n\n\"Is he still here? Think he'll listen to an apology?\"\n\n\"Sorry child, he's long gone. You girls managed to embarrass the crap out of him, and I didn't think that could be done.\"\n\nShe let out a cry, \"I've ruined everything. One chance and I blew it. I might as well give up.\"\n\nHildy patted her head.\n\n\"Don't be so hasty, child. You actually fought for him, he's redneck enough to appreciate that. This little incident may have actually done you some good.\"\n\nShe hugged Hildy for awhile, then sat back.\n\nWith a weak little smile she asked.\n\n\"So, did I win?\"\n\nHildy grinned.\n\n\"I'd call it a draw, but it was a dandy little scrap.\"\n\nGwen actually giggled.\n\n\"What would my father think if he saw his little princess now? Bet it would shock the hell out of him.\"\n\nHildy looked uncomfortable.\n\n\"Baby, you should know...\"\n\nShe trailed off and looked over Gwens' shoulder.\n\n\"What is it, Aunt Hildy?\"\n\nShe heard the \"Hmm, hmm\" of someone clearing their throat and thought Joshua was back. \n\nShe turned.\n\n\"DADDY?!\""
    ],
    "authorname": "qhml1",
    "tags": [],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/boston-to-birmingham-ch-02"
}