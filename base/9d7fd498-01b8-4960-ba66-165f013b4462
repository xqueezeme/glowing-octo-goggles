{
    "title": "Bluff Ch. 05",
    "pages": [
        "Alex's stomach twisted and cramped. He drummed his fingers against his knees absently, a frenetic, rhythmless Gene Krupa. A car pulled up along the curb, the hum of its engine low as the tires crunched and ground on the pavement to parallel park. He sat up straight and realized he was holding his breath. His shoulders slumped as he exhaled and he wondered if he looked half as nervous as he felt. Silly to be this wound up about it -- he was the one who'd called her; he'd asked for this. The old saying about being careful what you wished for never felt more apt. The car door chunked shut and heavy footsteps hurried up the street.\n\nIt was unseasonably warm for November but he probably should have put on a jacket to sit outside. He'd started sweating while he dressed and didn't want to reek of B.O. when Hank showed up, so he figured waiting outside in the cool air would be best. He was just about to go in to get a sweatshirt when the click-slap of backless high heels approached. Whoever she was, she was coming up the stairs and Alex stopped breathing again.\n\nShe sat down beside him without saying hello. He could smell her perfume.\n\nAlex smiled. \"Miss Walker.\"\n\n\"I knew I should have given you another fake name.\" \n\n\"And deny me this small victory?\"\n\n\"You feel victorious?\"\n\n\"You always said it was a game,\" he said. \"Most games have a winner.\"\n\n\"Touch\u00e9.\" Her voice was gentle and raspy, and now that the time for all the whispering was past, he easily connected its bass tones with the many conversations he'd had about literature with the saleswoman who always touched his arm when he ordered his books.\n\nShe covered his hand with hers and though he had a thousand things he wanted to say, to ask, Alex was reluctant to break the comfortable silence that settled around them like her perfume.\n\nFinally, he drew a deep breath and said, \"So, you've seen me at the bookstore.\"\n\nShe laughed. \"No. Well, I mean yes, of course, but that was coincidental.\"\n\n\"Then what? Just tell me.\"\n\n\"Why don't you come for a walk with me? I'll explain everything.\"\n\nShe took his arm and led him across the street. He listened to her shoes slapping against the soles of her feet as they walked. On the sidewalk they turned left and went about fifteen feet before she turned again. She guided him up a short flight of stairs and through a hallway before unlocking a door. \n\nThe room inside was warm and smelled like sangria-scented candles with undertones of yesterday's cooking -- bell peppers and spices. She untangled her arm from his and closed the door behind them.\n\n\"Where are we?\"\n\n\"This is me.\"\n\n\"What?\"\n\n\"I live across the street from you. That's how I knew you're a piano teacher. I'd see your students coming and going all the time. Everybody around here knows Alex the Blind Piano Teacher.\"\n\n\"You're kidding me.\"\n\n\"No. Why don't we sit down?\" She led him to the sofa. A soft, fuzzy blanket covered the seat and they sank back into plushy cushions. \"Do you want something to drink?\"\n\n\"No, I ...\" He almost said 'I just want you to tell me what the hell is going on' but figured she already knew that. \n\n\"I've had a crush on you for ages.\" Her voice was soft, almost contrite. This was a different Hank than he was used to. \"Ever since I moved in, like, eight months ago and saw you walking on the street. But I couldn't exactly make eye contact and smile to gauge your interest level. I didn't really know how to approach you.\"\n\n\"So you decided that molesting me at a party was the way to go?\"\n\nShe laughed, loud and full, but there was an edge to it that betrayed her nerves. It made him feel a little better to know she was off-center too. For the first time, she wasn't some divine enigma who oozed sexuality -- she was just a woman. \n\n\"That wasn't exactly the plan, no.\" Her voice muffled a bit -- she'd covered her face with something. \"You were in the store one day, talking to your brother about maybe going to Andrew's party. I'd been invited but I wasn't really interested until I heard you say you were thinking of going. The only thing I didn't know was whether or not you had a girlfriend. But then somebody there told me you were single, so ...\"\n\n\"I see.\"\n\n\"Yeah?\"\n\n\"No! Not at all. Going from 'I was curious if you're available' to 'I'm going to drag you into a closet and jerk you off' is a bit of a leap!\" \n\n\"It seemed like a good idea at the time.\" She laughed again, leaning against him and wrapping her fingers around his forearm. Her laugh trailed away, ending in an embarrassed groan.\n\n\"Well,\" he conceded, \"it wasn't a horrible idea.\"\n\n\"You didn't seem to mind.\"\n\n\"Nope.\" Her cheek was still pressed against his shoulder. He reached up and smoothed her hair. \"Not the worst thing that's ever happened to me.\"\n\n\"That's good to know.\"\n\nHe took a breath to speak, but then realized he couldn't think of a thing to say, so he sighed.\n\n\"Like I said that night, it seemed more fun. Plus I was kind of drunk -- trying to screw up the courage to finally talk to you. I was waiting for you in the hallway and just thought, what the hell?\"\n\n\"What the hell, indeed.\"\n\n\"Then I saw you at the mall again and ... I don't know. The whole thing just kind of took on a life of its own. After the Halloween party I realized I'd dug myself in pretty deep.\"\n\n\"So all of this ...?\"\n\n\"I told you, it seemed like fun. I always intended to tell you everything; I just reached a point where I didn't really know how. Plus, it was pretty hot.\"\n\n\"Oh yeah,\" he agreed. \"So, now what?\" \n\n\"So now you know.\" \n\n\"But why didn't you just say, my name's Hank and I live across the street from you?\"\n\n\"I think I just did.\"\n\nAgain, he found himself without words. There was no logic to contend with that: it was all just a simple matter of timing to her. And really, it's not like he could make a strong case for himself as victim here. He'd loved every minute of it all along, was complicit in her game and could have stopped it at any point. \n\n\"So, is the excitement of it all gone for you now that I know?\"\n\n\"Not necessarily.\" Her finger traced a path up the top of his thigh, light and tickling through his jeans. \"I'd like to think there's still a thing or two we could learn about each other.\"\n\nHe struggled to remember any of the things he wanted to ask her and could only come up with the rather mundane, \"You really prefer Hank to Henrietta?\"\n\nShe laughed. \"Wouldn't you? Henrietta is my grandmother. It's an old lady's name -- in my mind, at least. Always will be. Maybe I'll like it better when I have short blue hair. Until then, I think I'll stick with Hank.\"\n\nHer hand had settled into full contact with his leg, leaving small heated circles in its wake as she caressed him, making it even harder for him to think.\n\n\"It was you who'd always help me when I came into the store. Why didn't you just say something to me then?\"\n\n\"You were always with somebody -- made it a little awkward to try the old 'buying this book for your girlfriend?' trick. And a big lecherous wink was out of the question.\"\n\nHe sniffed a laugh and leaned back into the cushions. \"You're a woman named Hank and you live across the street from me.\"\n\nShe didn't answer, just let her fingers continue to doodle absent patterns on his thigh. He could feel the heat of her body warming his right side. Somewhere in the room a clock was ticking. \n\n\"I have to admit,\" he said, \"over the past couple months that's one idea that just never occurred to me.\"\n\nShe shifted on the sofa as she giggled, moving her hand to his stomach with slow, soothing strokes. \"I hope you're not disappointed.\"\n\n\"God, no. I think I actually prefer this. It'd be a little weird if it was, like, a friend's sister or something doing all this.\"\n\n\"Yeah, that might make bragging about it a bit awkward.\"\n\n\"I don't know that I really brag about that stuff.\"\n\n\"Oh please. All men brag. At least the ones I know.\"\n\n\"Well,\" he touched her arm, \"maybe I've just never had much to brag about before.\"\n\n\"That's so weird.\"\n\n\"Why?\"\n\nShe shifted on the sofa again, turning to straddle his lap and brush his hair behind his ears. \"Because you are just so damn cute.\"\n\nWith a non-committal grunt, he grazed his fingers down her sides, feeling the fuzzy weave of her sweater turn to the slick, thin material of her skirt. He searched out the hem and ran his hands over the soft silk stockings covering her legs. \n\nShe gasped, \"God, your hands are cold.\"\n\nHe slid his fingers over the curve of her thigh muscles. \"Warm me up.\"\n\n\"Look at you, getting all bossy.\" She leaned in to kiss him, her hands moving to unbutton his shirt, spreading it open and baring his chest. Fingers like hot little spiders crawled along his skin, exploring and searching out his nipples. \n\nHis hips pressed forward in zealous anticipation as his hands slid around to cover her ass. This was it. They were alone in her apartment, no students or partygoers nearby. Finally, finally. She had revealed herself to him in full. Her tremendous little mystery game was over and -- she thrust her tongue into his mouth and ground her hips down on his, snapping his mind back to the heat and delicate touches on his skin. His body tensed and his fingers dug into firm muscle. \n\nShe broke the kiss and leaned back in his lap, shifting her weight as she removed her sweater. Alex explored the skin of her back, her long hair brushing against the backs of his hands. He reached up to plunge his fingers into the soft thickness of her hair, gripping the back of her scalp to bring her back down to kiss again. She slid forward, melting against his body, her hard nipples pressing into his chest through the lace of her bra. He moaned into her mouth.\n\nIn one fluid move, she backed away to settle on the floor between his legs. He followed her forward, holding the kiss as long as he could. Her hands seared his stomach as her fingers worked at the button of his pants, the smell of chemical flowers from her shampoo in his nose. He leaned back and raised his hips so she could tug the fabric down over his legs. Cool air chilled his skin but her hands chased it away, stroking over his thighs and hips. \n\nShe teased at his pubic hair before her fingers wrapped around his cock, stroking him fully hard. He leaned his head back against the cushion and licked his lips. \n\n\"Please tell me you don't have a roommate or anything; not expecting any deliveries, your grandmother's not coming over for dinner.\" \n\nHer laugh plumed across his skin like a tiny chinook, making his nerve endings dance. \"No. It's just us, I promise.\"\n\nHer lips touched his inner thigh, the whisper of the sweetest promise. Her mouth and hands and arms, everywhere her body made contact with his, seemed to suffuse him with her heat, warming him to his very core and back out again. He ran his hand over his face and felt a light sweat building already. The heat made his mind twirl and dance in odd ways, errant thoughts pirouetting, slick with sweat and speed, and hard to catch. \n\n\"The bookstore,\" he mumbled, unaware he'd spoken aloud. \n\nHer tongue paused, scarcely an inch from his balls. \"What about it?\"\n\n\"Huh?\" Alex lifted his head, her voice cutting the mental haze. \n\n\"What about the store?\"\n\n\"I ... All those times I came in and you were helping me -- the touching my arm and everything?\"\n\n\"Yeah?\"\n\n\"Were you flirting with me when you did that?\"\n\n\"I was trying to.\"\n\n\"I thought that's what that was, but ...\"\n\n\"But what?\" she asked.\n\n\"I was hoping you were, but I couldn't be sure. I didn't want to look like an idiot.\"\n\n\"Exactly. Neither did I.\" \n\n\"Right. Which brings us back to the whole molesting me in a coat closet thing.\"\n\nShe shifted away from him. \"Would you rather talk more?\"\n\nHe reached out to stroke her hair. \"No. No, I'm sorry. I didn't mean to ...\"\n\n\"That's fine.\"\n\n\"But I can't totally promise I won't blurt out more random questions.\"\n\n\"What? Like, 'Oh, Hank, I'm gonna come; when's your birthday?' kind of thing?\"\n\n\"No!\" He laughed and tugged playfully on her hair. \"Maybe.\"\n\nHer lips curled into a smile against his leg, hands still roaming his body in slow, calming strokes. \"You okay?\"\n\n\"Yeah,\" he answered before considering her question. Alex took a deep breath and the gears in his mind found purchase again, stopped their wild spinning. \"I mean, this is it, right?\"\n\n\"In terms of what?\"\n\n\"No more surprises. No more big secrets.\"\n\n\"No.\" Her shoulder nudged his leg as she shrugged. Moments were rare when he truly missed his vision, but he'd have given five years of his life to be able to see the expression on her face right now. She pressed her cheek to his thigh. \"Obviously you don't know everything about my life.\"\n\nHe scoffed, \"No kidding.\"\n\n\"But you know who I am and where I work and where I live.\" She sat up and pressed a sweet kiss on his mouth. \"You know I did all this because I'm wicked attracted to you. I'm not running away now.\"\n\nHe stroked her face, letting his thumb explore her mouth to determine if she was smiling. She wasn't.\n\n\"I hope you mean that,\" he whispered.\n\n\"I do.\" Hank kissed his thumb, her lips taking it into the heat of her mouth, teeth dragging gently across the soft pad of flesh. He grunted at the tease.\n\nShe pushed his hand aside and ran her tongue up along the underside of his cock. He inhaled sharply through his teeth, memories of the shopping mall flooding his mind. His whole body tensed with the firing of synapses; now, with the insecurities dissipating, his recall was nothing but hot. The way she'd pushed him up against the wall, the threat of being caught at any moment: the heat of her tongue, then as now, curving around his skin, enflaming his nerve endings. Part of him, briefly, didn't care if she was lying about all of it. She could be some foreign spy, using him to establish her undercover identity, and it wouldn't matter one little bit as long she kept licking his cock like that. \n\nIf the rest of her body was a furnace, her mouth was a recess in Dante's inferno. Flames swept his skin, but they were wet and smooth and soft. So soft. A broad fire that raged up and down his shaft, or the focus of the sun through a magnifying glass tracing the ridge around his cock head, poking with a delicate torture at the ultra-sensitive underside. The vibration of her gentle moaning ran through him, made him want to gnash his teeth.\n\nA silver chill started to run up his legs. No, not yet. This wasn't the mall or some crowded party where he feared discovery; he wanted to savor this one. He grasped Hank's shoulders and gently pushed her away.\n\n\"What's the matter?\" she asked.\n\n\"I'm going to come.\"\n\n\"So come.\"\n\n\"No, no I -- \"\n\n\"I'll make you a sandwich; we'll start again.\" She slid her mouth back over his cock, skin slick with saliva, an easy glide. The heat coiled in his belly, tendrils reaching down, out, linking with the quicksilver of impending orgasm and drawing the quiver forward. \n\nHis muscles tensed as her mouth pushed down farther with each stroke. The hot-cold tingle accelerating each time her tongue rasped along his skin until he knew he was past holding back. His body stiffened and his fingers dug into the plush fabric of the sofa as the chilling heat washed over him. His thoughts torn from reality, but never more acutely focused on the moment. He shuddered and jerked in his seat until the last of the waves subsided. Hank leaned back, her hands soothing his thighs again. \n\n\"Did you want a drink?\" She was up and heading out of the room before he could answer. With a rubberized pull and the clink of glass, she whistled as she peered into the fridge. \"I've got some juice, water. I can make tea. Or there's vodka if you'd prefer.\"\n\nThe vodka was tempting, but he decided on a glass of water. He wouldn't have minded that sandwich she mentioned earlier, now that his nerves were settled a bit, but she didn't repeat the offer. He stood to pull his pants back up from around his ankles.\n\n\"Don't bother,\" Hank said. \"You won't be needing those for quite a while.\"\n\nHe laughed and sat back down, tugging off his sneakers and peeling his jeans over his feet. The seat beside him indented as she sat down and pressed a glass into his hand. All that soft hair draped over his lap as she lay down and rested her head on his thigh. \n\n\"This is so much better,\" she said as he sipped the water. \"Having you here. Knowing I don't have to wait until the next house party.\"\n\n\"That's your own damn fault; wasn't my decision.\"\n\n\"Oh, quit your bellyaching. You loved it.\"\n\nAlex smirked but said nothing. Her hands were stroking at his arms and chest with little intent. Another comfortable silence settled between them and he sighed, leaning his head back on the pillow. She was right: this was much better.\n\n\"It's too bad I live so close to the mall,\" Hank said. \"I had this wicked fantasy about dragging you into a car one day and abducting you.\"\n\n\"Really?\" Alex pondered the possibilities. \"I think I might've been okay with that.\"\n\n\"Yeah.\" Her voice was soft, sounding distant in contemplation. \"I don't drive though.\"\n\nHe laughed and held out the empty glass. \"Is there somewhere to put this?\"\n\nShe took the glass from his hand and set it on the coffee table nearby, hair tickling his legs as she shuffled around. \n\n\"What's so funny?\"\n\n\"Your hair is tickling me.\"\n\n\"Oh yeah?\" She shifted around, her movements jostling him on the sofa. \n\n\"What are you doing?\" Mild suspicion weighted in his gut.\n\nA soft stroke up his side, from hip to ribs. He jerked and jetted a laugh through his teeth. Across his stomach and up to his nipple, circling and tickling. He felt a bit idiotic, grinning and flinching each time the silken ends of hair made contact, but he couldn't help himself. She brushed the cluster of strands back and forth across his nipples, making them harden. An unexpected flick and her gathered hair snapped down across his skin like a whip.\n\nHe jumped in his seat, letting out a small grunt and rubbed his fingers soothingly across the hardened peak of his nipple. \"That actually kind of stung.\"\n\n\"I'm sorry. Here, let me kiss it better for you.\"\n\nHer warm breath plumed across his chest as she leaned close to lay a soft, barely there kiss. Her lips closed over his nipple a second time, working at the skin and sucking gently. Alex moaned as gooseflesh spread across his chest. The heat of her tongue lapped against him, flicking and swirling. \n\n\"Fuck,\" he moaned again.\n\n\"What?\"\n\n\"I just can't believe a woman like you is interested in me.\"\n\n\"Shut up,\" she teased, shifting again to kiss his mouth, legs now draped across his lap as she leaned against the arm of the sofa. Her tongue swept across his before she pulled away. \"I'm very interested in you.\"\n\nHe cupped her chin and tilted her head for another kiss. His lips trailed along her jaw and over her ear, tongue flicking along her skin; the small moans she made urging him forward. His kisses worked down along her neck.\n\nWith a tiny cough, Alex turned his head and flicked his tongue out, snakelike. The vaguely shampoo-mixed-with-alcohol taste of the perfume he so loved coated the inside of his mouth. She laughed.\n\n\"I won't wear it anymore.\"\n\n\"No, I like it. It's sexy. Just tastes like shit.\"\n\n\"Well, I'll see if I can find a way around that in the future.\"\n\nHe nodded against her chest, only vaguely aware of what she'd said, his kisses again exploring her skin, though his tongue was slightly less adventurous this time. His lips crested the rise of her breast, encountering the familiar softness of expensive lace. He swept her bra straps off her shoulders.\n\n\"Hank? Could you ...\"\n\n\"Hhmm?\" the inquiry lingered, morphing into a small moan.\n\n\"Your bra. I can't reach the ...\"\n\n\"Oh.\" She sat up, her shoulders pressing against his, waves of her heat passing to him. The lacey swish rasped across his chest and her bra fell to the floor with a whisper. ",
        "As she leaned back, his hands instinctively covered her breasts, the small points of her nipples pressing against his palms. He thumbed them slowly until she wriggled beneath him. His fingers slid apart, allowing his mouth to settle on her breast, tongue poking and flicking until her breathing was harsh and shallow. \n\nHe tried to maneuver himself to her other breast, pulling and shifting his legs beneath her until she grunted; their positions on the sofa would not allow it. \n\n\"What's the matter?\"\n\n\"There's no room here.\"\n\nA chill swept his skin, leaving him briefly regretting he'd said anything when she got up, dragging a blanket from the back of the sofa past him. She tugged gently on his arm, urging him down to the floor with her. The heat of her hands brushed over his shoulders and down his arms as she pushed his shirt off and laid back. \n\nHe covered her body with his own, the silk of her stockings brushing against his legs, his cock gliding against the cool fabric of her panties, just a hint of the heat beneath teasing through. His lips found what they'd been seeking, and Hank took a deep breath, pressing her chest upwards to his mouth. The floor was much better. \n\nHe sat up, ignoring her small whimper of protest as he shifted away, and pulled her skirt down over her legs. The silkiness under his hands as they trailed back up was better than the feel of any wrapping paper on Christmas morning -- though the excitement building in him was not entirely dissimilar: months of anticipation building to one moment.\n\nHis giddy fingers traced the whorls of fabric at the top of her stockings like bows and ribbons, knowing the grand unveiling was at hand. Her garters and panties were a tangle of straps. He may as well have attempted to solve a jigsaw puzzle.\n\n\"Umm...\"\n\n\"Hang on,\" she said. \"Let me.\"\n\n\"Yeah. Kind of what I was thinking.\"\n\nWith a couple tiny plastic clicks, she shifted her hips and told him it was okay. He'd expected a lot more squirming and swishing of fabric. When he laid his hands back on her legs, the stockings and garters were still there.\n\n\"No.\" He hesitated. \"I meant ...\"\n\n\"I know. Keep going.\"\n\nHis fingers pushed onward, away from the strappy, stretchy lace to the smooth softness of her hip and stomach. The bands of material from her panties were gone. He grunted softly.\n\n\"They clip,\" she explained. \"You can just undo the snaps and pull them off. I like them with garters.\"\n\n\"Me too, apparently.\"\n\nHe searched for the small strip of hair he had encountered last time, but found only a continuation of that soft silk-like skin, as though her stockings ran on and on. \"Smooth,\" he whispered.\n\n\"I waxed. You like it better?\"\n\n\"Feels nice,\" he said, brushing his fingers back and forth. \"But I kind of like the change in texture too. It's interesting when it feels different. I don't know.\" He laughed self-consciously. \"It's like having to choose between cookies and cream or rocky road ice cream. I like both.\"\n\n\"Aren't you easy to please.\"\n\n\"I guess so.\"\n\nHe shifted downward, allowing his kisses to travel, fighting the urge to rush. He laid a kiss where she had denuded herself for him. Alex smiled at the idea: it was for him. She had done that to please him. His cock throbbed. \n\nHe pushed his tongue forward. She was already wet, slick on his mouth, that rich heavy scent clouding his mind. This woman would be the end of him. She gasped as he kissed her and he couldn't help but moan. Her clitoris was plump with arousal as his tongue lapped around it, reacquainting itself with the hidden folds of heat there. Smooth, soft, wet -- heat on heat as his mouth explored with a zeal approaching worship. \n\nHank's hips rocked and shimmied and pressed against him. Her fingers knotted in his hair, clenching into a fist. Heavy breaths became raspy moans as his tongue circled and stroked. And that low throaty whine grew louder. The muscles in her legs trembled and tensed under his touch. He focused the flicking of his tongue with delicate precision and her body jerked upward -- the goddess ascending, shouting hosannas and adoration to her devotee. \n\nHe kissed her gently as her body relaxed, working up across the dampened skin of her stomach, the tang of salt mixing with the ambrosia that still lingered on his tongue. His whole body ached with the anticipation of what was next and he had to remind himself to breathe. \n\nHe sat up, running his fingers through his hair and trying to remember where his clothes had been discarded. \"My pants?\"\n\n\"What about them?\"\n\n\"Where are they? I have a condom.\"\n\n\"Well, weren't you optimistic.\"\n\n\"Hope springs eternal. I've been carrying it since 2008.\"\n\nShe laughed loudly. \"Maybe we should use a different one, then.\"\n\n\"No, no. I'm kidding.\" He leaned over, reaching out the across the floor. \n\n\"Oh, don't bother,\" she shifted and slid beneath him. \"You're like a million miles away from them.\" \n\nWith a heavy flourish of denim and the crinkling of plastic wrap, she pressed the condom into his hand. He rolled it on and lowered himself down over her body. Heat. He sighed, \"Wow. Finally.\"\n\n\"You're okay?\"\n\n\"Yeah, of course. You?\"\n\n\"Definitely.\" \n\nHe licked her nipple and reached down to rub the head of his cock through the gathering slickness between her legs. \n\n\"Oh god, Alex.\" Her voice was a deep moaning whisper, the voice he recalled perfectly from their every encounter. He could taste cinnamon on his tongue. \n\nIt was a smooth, wet push inside her, his cock now engulfed in a grip of fire. Forget Dante, her pussy was the source of all heat in the universe. He rocked his hips and heard her moan close to his ear. His lips locked onto her neck, heedless of residual perfume -- he was probably beyond noticing the taste anyway. Hank moved against him, a wildfire clutching at his shoulders, fingernails digging into his skin. She jerked and wrapped her legs tightly around his waist. The sense of being enveloped, almost consumed, by her unwavering heat overwhelmed him; he felt as though he'd dissolved through his own skin and become part of her body. He never wanted to go back.\n\nThe sweet cinnamon of her breath puffed past his ears, tickling his neck as it moved his hair with each pant and gasp. Her breath caught in her throat, a hitching whine of bliss that felt like his balls would explode. \n\n\"Quit making noise,\" he teased. \"You're going to make me come again.\"\n\n\"That's fine.\"\n\n\"No, I want this to be good.\"\n\n\"It is good. That's why I'm making noise.\"\n\nHe kissed her and continued pushing, wanting to regain that feeling of being absorbed. For a second, he felt outside himself, like this couldn't really be true -- he'd fallen asleep on the sofa, this was a dream, and soon he'd wake up and never get the chance to make love to her. The sting of her nails on his shoulder brought him back. This was definitely real. \n\nHeat surrounded him, diffuse and encompassing. It permeated his skin, like sitting in a sauna. Hank writhed beneath him, pressing and twisting and shaking, her every breath now a euphony of constant gasps and cries. That shiver ran down the length of his body. \n\n\"Fuck.\" He shook his head and stilled, shifting his weight to wipe the sweat from his face. A slick pool had built between their chests. He puffed out a breath and muttered, \"Baseball. Think about baseball.\"\n\nShe laughed and stroked his cheek. \"It's okay.\"\n\n\"Not really the first impression I want to make.\"\n\nShe kissed his neck and waited, brushing his hair back behind his ears. His composure returned in a series of slow, deep breaths, though the heat still pulled his body in all directions as he began thrusting again. Her soft whimpers rebuilt to wild cries and broken shouts. In the grip of their shared fever, her body tightened against his, every muscle, every cell, grasping at him and pulling him deeper. Her pussy clenched and contracted around his cock, paroxysms of delight as she screamed and he somehow felt her whole body push. \n\nFluid like he'd not imagined poured over his cock, an upturned bottle; except for the clenching grip, there was no friction. He could feel it rush over his balls, running to the crease of his thighs and onto the floor. Her hips were manic against his, mid-scream she bucked forward and drove her teeth into his shoulder, and still she squirted fluid. It was a tsunami that pulled him violently under, into his own orgasm. \n\nHe twisted in pleasure, letting out a small scream of his own -- though, perhaps the pain of being scratched and bitten as he was contributed to his vocalization. His body shuddered through the fireworks, heat and explosion, and nothing in the world mattered except his cock and Hank's wet, wet pussy. He gasped and settled, his heart still pounding so hard it felt like his ribs might burst open. Soothing warmth as she stroked her hands down his back and through his hair. \n\nAlex laughed, or at least he meant to laugh, but it sounded rather more like a sob in his own ears. \"I was doing so well.\"\n\n\"You were,\" she cooed, still stroking and petting and pecking small kisses on his cheek. \"It was absolutely perfect to me.\"\n\nHe laughed, trying to wipe his face while balancing on liquid arms that did not want to support his weight any longer. \"That happen to you often?\"\n\nHer head moved against his neck. \"Almost never.\" Her voice was soft, a small lilt of shy laughter at the end.\n\nIt could be delayed no longer; pushing away from her to sit back, the air in the room was a cruel chill on his skin. He slipped the condom off, tying a tidy knot.\n\n\"Umm...\"\n\n\"Yeah. I'll get that.\"\n\nShe left the room, leaving him with the ticking clock and the soft whooshing hum of the heating vents. He tried to wipe his chest with his hand but felt like he only succeeded in pushing the sweat around, catching in his chest hair and he wondered where she'd left his shirt. \n\n\"Here.\" She placed a soft bath towel in his hands. It was still warm from the dryer.\n\nHe muttered his thanks as he dried off, smelling the fresh fabric softener scent as he wiped his face, and then wrapped it around his shoulders to keep the chill from finding him again.\n\n\"So,\" he began, then stopped, realizing he really didn't want to say what he'd started to say. \n\n\"Yeah?\"\n\n\"I guess ... I should probably, umm ... you probably have things to do.\"\n\n\"Not really. I mean ... I did promise you a sandwich. You might as well stay. If you want, that is.\"\n\nBarely suppressing a smile, Alex whispered, \"I want.\" That sounded just fine to him. "
    ],
    "authorname": "Lara_Blackadaar",
    "tags": [
        "blind",
        "mystery woman",
        "blow job",
        "squirting",
        "reveal"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/bluff-ch-05"
}