{
    "title": "Harmless Office Fun Ch. 01",
    "pages": [
        "The beginning of an anthology series of office co-workers having some fun at work.\n\nAll characters are over 18 and engaging in consensual sex.\n\n.........\n\nI left my apartment a few hours earlier that day so I could hit the gym before work. My office building was right next door to the gym and they give membership discounts to the employees of our company, so it was very convenient for all of us. I did my usual workout, pushed myself a little more on the weights, but skipped the treadmill this time because I didn't want to be late to work. I'm not overly muscular but I like to stay lean and fit. \n\nI saw a lot of my coworker there that morning, even Fiona Miles, one of my top sales reps. She was killing on the treadmill as she usually does. She was wearing small gym shorts and a tank top. Her blonde hair, which was normally down, was tied up in a bun for her workout. She had a great body; you'd have to be blind to not notice. A lot of men in the office has hit on her, but not me, I'm happily married and would never even think about it. Sure, I would look, but never touch. Also, being the general manager of my department, where she was one of my sales reps, it would be insane for me to ever try and risk a lawsuit. \n\nAfter I was done my workout, I had a quick shower in the locker room, got dressed, and made it to work just in time. As soon as I got off the elevator on my floor, I was approached by my best friend, DJ. The smile on his face indicated one thing; he scored last night and wanted to brag about it.\n\n\"It was a bartender, I never had a hot bartender before,\" he said as we both made our way to my office.\n\n\"I have, three times,\" I told him.\n\n\"That was before you got married and became lame,\" he said.\n\n\"Don't knock it, until you try it.\"\n\n\"Never.\"\n\nWe got to my office and he was still trying to tell me about the hot bartender he scored with. I have to admit, even though I'm happy to be married, I do kind of miss the bachelor life, and sometimes I do enjoy hearing DJ's stories of his conquests.\n\nI was sitting behind my desk looking over yesterday's paperwork while DJ was sitting across from me with his feet placed up on the edge of my desk, taking his time to get the end of his story.\n\n\"So, we found ourselves in the storage room in the back of the bar bar, I had her shirt off, hands on her tits\u2014\"\n\nThere was a knock on the door and DJ suddenly went silent. I looked up and saw Fiona at the door with some files in her hands. She was looking a lot better from when I saw her at the gym earlier. Her hair was down, and she was now wearing a navy-blue blouse and black skirt. \n\n\"Don't stop on my account,\" she said smiling.\n\n\"I... uh...\" DJ stammered.\n\n\"Go on, you had your hands on her tits, and...\" she was waiting for him to finish.\n\n\"Yeah, DJ, finish your story,\" I said, trying to hold back my laughter.\n\n\"And I... finished giving her a breast exam and said, hey you're fine. Helped her get her shirt back on and went back home alone.\"\n\n\"Wow,\" she said. \"That was pathetic, DJ. I know I surprised you and you had to come up with a cover story fast, but that was just bad.\"\n\n\"Can I help you, Fiona?\" I asked.\n\n\"I just need you to approve these sales reports,\" she said.\n\nI got out of my chair and we walked up to each other. She handed me the files she had and I gave them each a glance.\n\n\"I saw you at the gym this morning, Bill,\" she said. \"You were really pushing yourself.\"\n\n\"Yeah, I thought it was time to add a few extra pounds on the weights today.\"\n\n\"Don't strain yourself too hard,\" she said and put her hand on my biceps. \"You'll burst out of your clothes.\"\n\n\"I'm careful,\" I said while still reading the files and marking the changes with my pen.\n\n\"Too bad you weren't on the treadmill, we could've had a good run together,\" she said.\n\n\"I usually do, but I didn't want to be late to work. Maybe next time we see each other there,\" I said handing the files back to her.\n\n\"It's a date,\" she said and walked out the room.\n\n\"Dude,\" said DJ as he got up from his chair. \"Are you completely oblivious?\"\n\n\"What do you mean?\"\n\n\"She was totally flirting with you?\"\n\n\"What?\" I said. \"No, not Fiona, she knows I'm married.\"\n\n\"She knows, but doesn't care.\"\n\n\"Are you saying she wants me?\"\n\n\"I don't think so, she's not stupid enough to go after a married man. But that doesn't mean she doesn't like to flirt.\"\n\n\"So, what should I do about it?\" I asked.\n\n\"You flirt back,\" he said.\n\n\"I can't do that.\"\n\n\"Why not? And don't say it's because you're married. It's only a little harmless office fun, that's all. Don't you kind of miss it, flirting with other women?\"\n\n\"I admit, sometimes I do.\"\n\n\"So, give it a try.\"\n\n\"I don't know,\" I said.\n\n\"I'm not saying sleep with her; just flirt back a little the next time she does it. Even when I don' score with women\u2014'\n\n\"Which is often?\" I said laughing.\n\n\"Ha ha. As I was saying, even when I don't score, I still enjoy flirting. It's harmless fun and it makes you and the other person feel good. You'll probably enjoy yourself for once.\"\n\n\"What about sexual harassment?\" I asked.\n\n\"Just keep it simple,\" he replied. \"Don't say anything too sexual, or imply wanting to do her. Just compliment her looks and other little things.\"\n\n-----\n\nOver the next four hours I made a bunch of phone calls, set up some new appointments, fixed a few problems in the budget, and so on until it was lunch time. I went to the downstairs cafeteria, like I usually do; I thought DJ was going to join me, but he was too busy with some sales leads. It was good to see him focusing on work, not just hitting on the women in the office.\n\nI was sitting at a table in the corner of the cafeteria, eating my veggie sandwich. There were only a few other people there from my company, all doing their own thing so I didn't bother them and sat alone. But that only lasted a few minutes when Fiona showed up.\n\n\"Mind if I join you?\" She asked, but she was already sitting down by then.\n\n\"Sure,\" I said.\n\nThe conversation I had with DJ came back to me and it made me look at Fiona a different way. She had long blonde hair, beautiful green eyes and lips, a great body from what I could see at the gym. I guessed large C-cups, definitely bigger than my wife's breasts. I tried not to look at her body too much because of the sexual harassment seminar we all had to go to a couple of weeks ago that was a result of some of DJ's office antics. \n\nWe talked while we ate; mostly about work and a little office gossip. Some stuff I already know, and I'm sure there were a few things she didn't want to tell the boss. Completely understandable. I was the same way before my promotion. We talked a little bit about working out as well and what we were doing to stay fit. Then she noticed I was eating a veggie burger that I was eating.\n\n\"You also like to eat healthy, I see,\" she said.\n\n\"It's not just working out to stay healthy, you got to eat healthy as well,\" I replied.\n\n\"You don't need help there,\" she said as she looked at my chest and went back to her meal. \"I gotta do more to get off some of this weight I recently gained.\"\n\n\"Oh, come on,\" I said. \"You look great.\"\n\nShe looked at me and smiled.\n\n\"You really think so?\"\n\n\"Yeah, I've seen you at the gym, you have an amazing body.\"\n\nWhen I said that last part, I suddenly got really nervous. What if I went too far and she took offense?\n\n\"Thanks,\" she said with a bigger smile. \"I didn't think you ever noticed me.\"\n\n\"Hey, I may be married, but I'm not blind.\"\n\nShe giggled; it was very cute.\n\n\"I'm glad you said that,\" she said as she put her hand on my lap.\n\n\"Huh?\" I said. I couldn't think straight with her hand on my lap, her fingers just on the inside of my thigh.\n\n\"Just to let you know,\" she said softly. \"I don't care if you're married. Anytime you want me, anywhere, I'll be ready.\"\n\n\"Huh?\" is all I could say again.\n\nShe finished the last bit of her meal and walked away. She dumped her tray contents in the trash can and before she left the cafeteria, she looked back at me and gave me a wink.\n\n-----\n\nI called DJ into my office and slammed the door behind him. He saw how upset I was and got nervous.\n\n\"What's up bro?\" he said. \"If it's about that Perkins account, I told you I fixed that situation and I got more money out of it.\"\n\n\"That's not why I called you in here,\" I said. \"But also, good work.\"\n\n\"Thanks.\"\n\nI told him about the conversation I had with Fiona. He was astonished.\n\n\"Dude,\" he said. \"You got game.\"\n\n\"Don't joke, what am I supposed to do?\"\n\n\"You can do one of two things,\" he began to say. \"One, you tell her firmly but politely, that you are not interested.\"\n\n\"The second thing?\" I asked.\n\n\"You fuck her.\"\n\n\"What?\" I yelled at him.\n\n\"Calm down, I'm messing with you,\" DJ replied laughing \"I know you could never do that. Just tell her you're not interested, that's all.\"\n\n.........................................................................................................\n\nAn hour later, I called Fiona into my office. When she came in, I closed the door behind her and locked the door.\n\n\"Oh, so soon,\" she said with a wicked smile. \n\n\"What?\" I asked.\n\n\"You locked the door, what else could that mean?\" she said as she undid the top button of her blouse.\n\n\"Oh, no, that's not it,\" I said nervously and went to unlock the door. \"I just wanted to tell you\u2014\"\n\nBefore I could continue with what I wanted to say, the door suddenly swung open, and to my surprise, my wife, Janet, entered the room.\n\n\"I just wanted to tell you, you did an excellent job on the Perkins account, and I wanted to tell you that I'm giving you the Knowles account for what you had done.\"\n\nI gave her the files for the Knowles account that was already on my desk and she thanked me for the opportunity to work on a big account like this. She left the room and it was just me and my wife, I forgot she was coming over to get me took look over the new rug samples for the house we were buying.\n\n\"She was pretty,\" said Janet, smiling.\n\n\"Who?\"\n\n\"Don't act like you don't know what I'm talking about,\" she said.\n\n\"Oh, Fiona, yeah she's alright.\"\n\nJanet laughed. Apparently, she thought I was being cute by pretending not to notice how pretty Fiona was. We had this conversation before, we don't mind if we think other people are attractive as long as we only have eyes for each other. If she only knew what was going on, she wouldn't be laughing.\n\nWe went through the carpet samples pretty quick and found the ones we liked. Janet left to go check out some furniture she had her eyes on. Afterwards Fiona showed up in the doorway.\n\n\"I just wanted to let you know,\" she said. \"Almost getting caught only made this more exciting.\"\n\nShe left and I slammed my head down on the desk.\n\n-----\n\n\"What the hell?\" DJ yelled as he barged into my office.\n\n\"What?\" I asked.\n\n\"You not only gave Fiona credit for the Perkins account but you gave her the Knowles account as well. I know more about that account than anybody, I deserve that account. She offers to sleep with you and you stab me in the back like that.\"\n\n\"Would you shut up and let me explain?\" I said.\n\nI told him about what had happened earlier; he settled down and had a good laugh over it. Then he got upset that my personal life was affecting his career. I then offered him the Jenkins account, which was something bigger, and that made him get over it all.\n\n\"Now I don't know what to do,\" I told him.\n\n\"This is what you do,\" he began to say. \"It was like I said before; you need to let her down easy. But with all the distractions in the office it would be difficult. So, what you have to do is to get her alone. She said she was going to stay after work a few extra hours to look over that Knowles account. So, when everybody is gone, get her alone in your office, and that's when you let her down.\"\n\n\"Wait until everybody is out of the office and get her alone? That's your plan?\"\n\nDJ thought a moment. \"Now that you said it, it does sound like a plot in a porno film. But I think if you put your foot down right away, you should be ok.\"\n\nI thought about it for little while and agreed that that's the best course of action.\n\n\"Just remember, let her down easily. You still have to work with her tomorrow.\"\n\n-----\n\nI called Janet on her cell and told he I would be home late to fix some work related problems. Technically it was true, because this was definitely interfering with my work and it needed to be dealt with immediately.\n\nEverybody left the office by 5:30, and just as DJ said, Fiona was in her office. I took a few minutes practicing what I was going to say. I never had to break it off with someone who I was never involved with before. Also, like DJ said, I had to let her down easily because I still had to work with her.\n\nWhen I was ready, I called Fiona and asked her to meet me in my office. As soon as I hung up, I realized what a bad idea that was, it would only give her more signals that I wasn't trying to give.\n\nA few minutes later Fiona walked into my office and shut the door.\n\n\"Alone at last,\" she said.\n\n\"Listen we have to talk,\" I said.\n\n\"We could talk,\" she said as she began to undo the buttons on her blouse, \"or we could play.\"\n\n\"That's what I want to talk to you about. You have to understand, that before in the cafeteria...\" I tried to finish what I wanted to say, but I was too distracted watching taking off her blouse. \"I never thought I'd say this to a beautiful woman, but can you please stop that?\"\n\nShe had her shirt completely off now. She was wearing a white lacey pushup bra that showed a great amount of cleavage. I stood there frozen, not knowing what to do next. She walked up to me, and I backed away. I kept talking to her, trying to explain the situation but I only stammered my explanation and she thought I just being nervous, which only made it hotter too her. I kept backing up until I hit my desk and she was right up against me.\n\n\"I am not interested in what you have to offer,\" I said firmly.\n\nThat's when she removed her belt and let her skirt drop to the floor. She was now in completely in her underwear, in my office. I had this dream many times, but with my wife.\n\n\"Sure, you are,\" she said and gave a little giggle. \"You flirted with me in the cafeteria, telling me what a great body I had, and then you gave me the Knowles account, that was a big sign.\"\n\n\"Say what?\"\n\n\"Everybody knows that DJ deserved that account, there's only one reason why you gave it to me.\"\n\nNothing that happened today was going the way I wanted.\n\n\"It's more complicated than that\u2014\"I began to say.\n\nShe reached around her back to unclasp her bra and let it fall to the ground. Her tits were unreliably amazing. They were big, but not too large, and perfectly round. I felt like I was being hypnotized by how perfect they looked.\n\n\"Enough talking,\" she said. \"You know you want this, just let it happen.\"\n\nI was going to say something else, but she gave me a big kiss on the mouth and I just shut myself up and I didn't fight it. I suddenly found myself holding her close, our lips locked in passion. I was grabbing at her tits; they felt so much better than my wife's.\n\nAfter a couple of minutes of our kissing, she got on her knees and quickly undid my belt and zipper. I thought about stopping her right there, but she was quick, and before I could do anything, she pulled down my pants and boxers at the same time and fully erect dick just flung out right into her face. She grabbed it by the hand and began stroking me.\n\n\"Just as big as I hoped,\" she said.\n\nI didn't know what I was doing, I could've stopped her at any moment, I could've just pushed her away forcefully and threaten to fire her if she didn't stop. But I didn't, because I really wanted this to happen. Fiona opened her mouth wide and put my dick into her mouth. Her lips were firmly sealed around my shaft, her tongue massaging it as it went up and down. She moaned with each pump into her mouth. With one hand she was grabbing my testicles and massaging them gently between her fingers. Every now and then she would take my dick all the way to the back of her throat, gagged a little before pulling it out of her mouth and resumed her work.\n\nAt that point I didn't care about anything else. I didn't care about my wife, or my career, I just wanted to fuck Fiona right here in my office. After a few more minutes of her sucking me off, I pulled my dick out of her mouth and made her get back on her feet. I bent her over the desk and positioned myself right behind her. I pulled down her panties down to the floor, grabbed her by the hips and then shoved my dick right inside her. It was warm and very tight too, not like Janet's pussy. This was a pussy that every woman should have. I was pushing myself in her fast and hard, she moaned with each thrust into her pussy. I gave her ass a few good slaps which she seemed to love so I did it some more.\n\nI pulled out of her and turned her around so I could see her face as I fucked her. She grabbed my head and kissed me hard. I shoved my dick back into her, our bodies were pressed hard against each other; I was holding the edges of the table while she had her nails digging into my back. She screamed into my ear as I pumped myself into her harder and faster.\n\nI slowed down a little so I wouldn't blow my load too soon, I wanted to enjoy this as much as possible. We kissed some more, her tongue wormed its way into my mouth, she tasted great. I quickened my pace again and began fucking her as fast and hard as I did before. She screamed for more and more, I tried to oblige as best I could.\n\nEventually I couldn't hold it any longer and with one last thrust I shot every ounce of cum I had in me right into her. Her body shook as she went through her own orgasm as well. I managed to get in a few extra minutes of sex with her before my dick began to soften and I pulled out of her. We both sat at the edge of my desk, catching our breathes. \n\n\"That was fucking amazing,\" she said.\n\n\"I know,\" I told her.\n\n\"Too bad now I have to sue you for making me have sex with you,\" she said.\n\nI backed away from her, horrified by what she said.\n\n\"WHAT?\" I yelled.\n\n\"Calm down, I was Just kidding,\" she said laughing.\n\nI also laughed; it was kind of funny.\n\nAs we got dressed, we began to talk about what we had just done.\n\n\"Don't worry,\" she said as she was finishing buttoning up her blouse. \"Nobody will ever know about this. Especially your wife. I have just as much to lose as you do.\"\n\nI laughed a little thinking she was joking.\n\n\"I doubt it you'd be in just as much trouble as I would be,\" I told her.\n\n\"No seriously, I'm getting married. Didn't you notice my engagement ring?\"\n\nShe held up her hand and saw an engagement ring shining into my face.\n\n\"Then why did you just have sex with me if you're getting married?\" I asked.\n\n\"Why did you just have sex with me when you're married?\" she replied.\n\n\"Touch\u00e9,\" I said.\n\n\"So, we can be with our loved ones and still fool around occasionally. Deal?\n\n\"Deal.\"\n\nBefore she left my office, we gave each other one last kiss, and she let me have one more feel of her tits.\n\n............................................\n\nThe next morning, I came into the office and ran into DJ and he asked about Fiona. I told him that I firmly but politely turned her down and although she seemed disappointed, she completely understood and apologized for her behavior towards me.\n\n\"That's disappointing,\" said DJ. \"I knew what you were gonna do, and I'm proud of you for sticking to your guns, but I was still hoping there was a chance you'd get laid and tell me how her tits felt.\"\n\n\"I'm sorry to disappoint you buddy,\" I said with a big smile.\n\nTHE END!!!\n\n \n"
    ],
    "authorname": "DanDraper",
    "tags": [
        "big boobs",
        "big tits",
        "blonde",
        "cheating",
        "gym",
        "office",
        "office babe",
        "office sex",
        "wife",
        "workout"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/harmless-office-fun-ch-01"
}