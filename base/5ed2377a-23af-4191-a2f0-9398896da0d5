{
    "title": "The Professor Ch. 15",
    "pages": [
        "NOTE TO OUR READERS: This has taken a long time to produce because we took time out to get married \u2013 yes to each other! We're concluding our story with this chapter. We'll stay in touch with several of you who have contacted us via email. But mostly Lissia and I are going to get 'caught up on our lives together'. We hope this closing chapter brings everything into focus for you and that you share in our joy.\n\n***********************************************\n\n\"How's the cystitis baby?\"\n\nShe smiled, \"It's almost gone, thank you for asking. You make me happy Steven darling.\"\n\n\"Are you still taking the antibiotic?\" I was hovering again.\n\n\"I am - just like Dr. Andres told me to,\" she winked.\n\n\"Thank you baby I want you to be healthy and happy...\"\n\nShe tightened her hold on me, \"Oh Steven my life is so different because of us; I don't know what adjectives I can use to talk about how I feel \u2013 you said you never expected us \u2013 I surely didn't; our families didn't either. I don't know what the future holds for us but baby I'm in our relationship for the long haul...\"\n\nI kissed her slowly beginning with her forehead and her nose...I kissed every soft spot on her beautiful face and finally her sweet lips. A few weeks back I'd never even shaken hands with a black woman and now I was lost in love with the most beautiful woman I'd ever known or would ever love...she happened to be black. Our relationship had traveled so far past lust that it was a speck in the rear view mirror of our shared personal relationship journey. Our breathing began to match breath for breath and it wasn't long before we were asleep in one another's arms. There is no feeling like falling asleep with the love of your life; feeling her tender touch and soft caress; the lingering fragrance of one another mingled with the sweetness of love.\n\nWe awoke to one another after a while, not caring the hour, just filled with a satisfied joy that caresses lovers into forever. We talked about what would happen on Monday when I had to report to school for the ride to Hobby Field. We were both a bit melancholy about my leaving but we knew I had to do this. My greatest heartache was making sure that she and my parents stayed connected while I was away. Mom and Dad would drive over to Lissia's house Monday and the four of us would go to the ROTC area so I could board the bus for Hobby Field. We would have to be careful at school \u2013 we discussed our goodbye kiss \u2013 think about the stupidity of having to plan your goodbye kiss. \n\n\"Steven?\"\n\n\"Yes baby?\"\n\n\"I need us to talk about something that has been rolling around in my brain ever since your interview for graduate studies and the dual degree,\" she admitted.\n\nI sat up and rearranged the pillows so we could lean on them against the headboard, \"What's troubling you,\" I asked her as I interlaced our fingers and kissed her lips. I watched her eyes carefully.\n\n\"Dr. Kaplan was trying to make you fold and run when he said to you, 'That you quoted Mill precisely \u2013 I think it was and he asked, aren't you worried that if you go to war you'll be killed or maimed \u2013 and why do that when there's so much work to do here to right so many social wrongs.' Do you remember what you answered him?\" \n\nI nodded, \"I do. I told Dr. Kaplan that our nation has allies that one of those allies is the government of South Vietnam, whom we promised to help; that there are young men and women in South Vietnam that the Bolsheviks don't want to be successful or to be productive, to learn at the university level, professors like you that they'll murder - doctors, lawyers and religious leaders whose lives are in danger while we chatted idly among ourselves. I told him that his work is here fixing the societal wrongs and that my work is preserving liberty wherever it is. Then he said something like 'They haven't known liberty...' And I told him that was the greatest reason that they should and challenged him to think about someone other than himself. He just doesn't understand that it sometimes it takes our blood to dissolve and destroy tyranny. It goes back to Mill again.\"\n\nLissia smiled, \"Then you recall the events you cited about original Constitutional Convention when Thomas Jefferson argued with John Adams telling him, \"That the tree of liberty must be refreshed with the blood of tyrants and patriots.\"\n\n\"I remember it well \u2013 I thought I'd shot myself in the foot. Why do you ask?\" I pushed her.\n\n\"Do you think we should be fighting wars in other lands when we aren't threatened directly?\" She was worried.\n\n\"If I make a promise to you that I will help you if you get into trouble no matter what would you expect me to keep that promise?\" I asked her.\n\n\"You would without question...but this is a war,\" she was anxious.\n\n\"I would to honor my word to you and yes it's a war \u2013 freedom can only be gained with shared sacrifice \u2013 even if it means my life...\" the words were chilling \u2013 her expression was frozen as her eyes searched mine trying to understand how I arrived at that conclusion.\n\n\"Where does that come from inside you?\" she wanted more.\n\nI started slowly in the words that best define what I believe and felt, \"When in the Course of human events, it becomes necessary for one people to dissolve the political bands which have connected them with another, and to assume among the powers of the earth, the separate and equal station to which the Laws of Nature and of Nature's God entitle them, a decent respect to the opinions of mankind requires that they should declare the causes which impel them to the separation.\"\n\n\"The Declaration of Independence,\" she tightened her lips into a small frown and nodded, \"I knew it...\"\n\n\"There's one more piece of that desire that is critical and since I've fallen in love with you it has become the centerpiece of my desires, \"We hold these truths to be self-evident, that all men are created equal, that they are endowed by their Creator with certain unalienable Rights, that among these are Life, Liberty and the pursuit of Happiness. I want us to share in that promise and every other child or student or pairs of lovers wherever they are \u2013 especially for their Life, Liberty and the pursuit of Happiness. We can't be free unless all men are free. And it may cost my life. 'Greater love has no man than this that he lay down his life for his friends'...it may come to that for me and I urgently believe that. I can't walk away from this my baby \u2013 ever. It's for us as much as it is for the people of Vietnam,\" I was tense and anxious and passionate. I hadn't really realized the gravity of those words until I learned that Lissia and I couldn't marry \u2013 our freedom \u2013 our liberty \u2013 our happiness was stripped from us by bigotry and fear \u2013 our nation wasn't living out its Declaration of Independence.\n\n\"Oh my sweet, noble man where did you come from? How did you get this great, good and noble heart?\" she leaned against me and wrapped her beautiful arms and body up with mine. \"I thought I was against this adventurous war that Johnson was taking us into but I've changed my mind.\"\n\n\"Johnson is doing this because of our agreement with South Vietnam and inside of that agreement he's found footings for his grandiose schemes,\" I spat out my words.\n\n\"What do you mean?\" \n\n\"He's creating a dependency situation like the feudal system in Europe where the fiefs and serfs were dependent upon the king or the barony for everything and before long they only performed mediocre work and got addicted to what the barony or the king dropped from the table,\" I could taste the bitter medicine that he was foisting on the population.\n\n\"Why would he do that?\"\n\n\"Power, votes, control.\" I explained.\n\n\"Oh my God and you think he's using us black folk to get that,\" she was breathless.\n\n\"Yeah. The Republicans passed the Voter Rights Act, an act he fought against since he was in Congress and later the Senate so now he needs the black population's votes to beat back the Republican candidates...so yeah I think he'd use black folk to get his political gains. He doesn't care about civil rights \u2013 he's been involved with the Democrat Party here in Texas and it's filled with bigots and klan-members,\" I was angry again.\n\n\"He's hoodwinking us,\" she sat upright. \"This is slavery all over again.\"\n\nI nodded, \"Yes...that's what it looks like to me too. I can't prove this but logic seems to favor the prepared in this case. Rather like the carpet baggers who swindled slaves out of their forty acres of land.\" \n\n\"So how is he getting away with escalating the war in Vietnam with all the hawks who voted against him since he claimed Goldwater was trying to start World War three,\" she wondered.\n\n\"That's just it he needs those hawks to support him in 1968 \u2013 he appeases the hawks and creates his great society which is nothing more than a welfare state while the hawks are cheering on the war effort and being satisfied with fighting communists in Vietnam rather than in the streets of America. His war efforts build the Military Industrial Complex that President Eisenhower warned us about because it becomes a political tool,\" I smirked wryly.\n\n\"And you get caught in the middle doing the right thing...he is such an asshole,\" Lissia spat out. \"I voted for Goldwater and will vote against Johnson again in 1968. He can go fuck himself and his welfare plantation.\"\n\n\"The Vietnamese people who think they are fighting for their freedom are going to get abandoned when we get 'tired' of fighting that war like the Korean War. At least the truce line at the 38th parallel is the line of demarcation between freedom and totalitarianism. Dad thinks this is going to turn bloody and nasty before it's over. He's probably right about that too,\" I breathed out hard.\n\n\"I love you Steven so very much. I wish it didn't have to come down to this,\" she acquiesced the point.\n\n\"I love you too sweet wife of mine...I wish people would just get along and stop this kind of inaneness. I'm not nor do I have a desire to be a politician. I will fight not for Mr. Johnson but for a free Vietnam with happy kids, hard working people, good schools and a healthy economy.\" We talked for an hour or so and finally she got me calmed down and we fell asleep in each other's arms again.\n\nLissia roused herself to attend to hygiene and I went into the living room to call Mom and Dad. I asked them to have a dozen red roses sent to Lissia for tomorrow with the card, \"To my darling wife \u2013 I will love you forever \u2013 Steven.\" I thanked Mom and Dad and told them how much I loved them for recognizing Lissia as my true love. They both told me they wanted me to finally be happy and I promised them that I was beyond imagination.\n\nLissia came into the living room as I hung up the phone, \"How's your Daddy?\"\n\n\"He's doing okay. They asked about us and how we're feeling. I told them that I was happy beyond my wildest imagination,\" I smiled to her as she easily closed the distance between us.\n\nHer arms slid around my neck - her lips met mine with passion and a lover's knowledge of our personal geography, our kiss lingered and was sweetly hot and provocative, as we broke our kiss her face was radiant, her smile pliant and her eyes were deep, liquid fire that ignited my heart with joy, \"My beautiful Steven I am so glad we're together. You've shown me what I was missing in my life...\"\n\n\"You stole my words...I didn't know us or about us or that we could be \u2013 us. It's hard to believe all that's happened \u2013 I mean look at us...like I told Mom and Dad this is beyond my imagination that I could love and be loved this way...never did I think that this could be real...Lissia you said whatever happens forever \u2013 well I'm there too,\" I confessed all of me to her and held her tightly for such a long while. We eventually went in and took a shower \u2013 we were going to the nursery once more before I had to leave.\n\nThe nursery folks were getting accustomed to our coming. We bought ten flats of perennials to plant all around the yard to add more depth to the landscape. Lissia couldn't believe her eyes when it all got planted. She shot a whole roll of film \u2013 36 exposures on 35mm Kodacolor. I would eventually get to see the pictures \u2013 three months later but she was thrilled at her new 'lawn' as was I. \n\nWe were pretty domestic for a few days \u2013 she fixed dinner for Mom and Dad on Saturday - they got there just after the red roses arrived \u2013 Lissia was still crying, \"Look at this,\" she told Mom. \n\nMom hugged her while I thanked Dad, \"Here's $20 for the flowers Dad.\" \n\nHe refused it, \"Son when you can make your woman this happy there's no amount of money that can be placed on the value of her happiness.\"\n\nLissia and Mom stopped hugging and Lissia came over and hugged Dad, kissing him on both cheeks, \"You have done such a wonderful job with your son \u2013 I love you both so much.\"\n\n\"Thanks Mom,\" I whispered as I tried to give her the $20. She just smiled and kissed my neck.\n\nThen Lissia turned her attention to me again, \"We've been together every minute for the past few days when did you do this?\"\n\nI smiled as she held my hands, \"I can't give away my secrets now can I?\"\n\n\"No,\" she hugged me tightly, \"I guess not. These are the first flowers I've ever gotten from any man.\"\n\nHer admission stunned me, \"I'm glad I thought of it first.\"\n\n\"I am too, baby, I am too. We have a lot of firsts together don't we?\" She pulled back and looked into my eyes as I nodded and smiled \u2013 I could feel my face flush red as she stroked my cheek.\n\nLissia showed Mom and Dad around her Victorian-styled craftsman bungalow and she walked them onto the porch so they could see the 'new' landscaping. Dad smiled, \"Well it looks like someone knows what he's doing.\"\n\n\"He does,\" Lissia spoke up as she tightened her grip on my hand, smiling to me. She led Mom and Dad inside and showed them pictures of the 'jungle' before I attacked it and began getting control of it. \n\nDad smiled, \"Don't put work in front of him \u2013 it's Katie-bar-the door.\"\n\nWe sat down to a sumptuous meal of chicken and dumplings and all Dad could say was, \"Can Momma and I live with you?\" He brought a smile to Lissia's face. We talked for hours drinking tea on the side porch and telling stories about our quiet lives \u2013 they mostly told stories on me growing up while Lissia mentally recorded these moments for her replay in the quiet times when we weren't together. The day ended too soon. It was another one closer to Dad not being with us so we treasured it and drew it out as best we could...squeezing all the good out of the moment. He blessed us by being here as did Mom. We worked out the details of Monday \u2013 Mom and Dad would come to Lissia's home and we'd all leave together to take me to the ROTC Center at the University.\n\nOn Sunday we went to an Episcopal service near the Private university campus - we were inconspicuous as this was a relatively open community. We got a lot of exercise during worship with the standing up and kneeling and sitting. The service was dry as dust \u2013 the music stultified and stodgy \u2013 this wouldn't be the one. Our ride back to Lissia's home was very quiet \u2013 we were both feeling a bit maudlin and a sense of loneliness was creeping in for both of us. I didn't know what was in store for me at training \u2013 I had never been away from home for more than a week plus I'd never had a fianc\u00e9 or even a fulltime girlfriend so I didn't know what was coming on our front. Lissia on the other hand would have a lot of down time and time to worry and think about things \u2013 she would need to be busy. We talked about that possibility with my parents and they promised me that they would keep Lissia busy and check up on her. The sabbatical would start in three weeks for her - she buries herself in her work \u2013 she's relentless in her research and in her preparation. But this was different \u2013 we were different now \u2013 there was so much at stake. She had sailed through her education and her teaching stints just as I had zipped through my studies and my work pretty much unscathed by the world at large. We weren't going to be so fortunate now. We offended a large part of the population because of our pairing and we had to be prepared for what that meant \u2013 that is the unknown variable in this whole calculation.\n\n\n\nLISSIA'S IMPRESSION\n\nI watched Steven over the few days we spent together. He poured himself into the work around the yard \u2013 laying out larger plans and more work for when he returned. He was trying to ignore the elephant in the living room \u2013 our upcoming separation while he was away at Fort Benning Georgia. I knew there was no damn way those crackers over there would allow me to rent a room to be near him for even a weekend. I couldn't keep my anxious brain off of his leaving \u2013 he wasn't running out on me \u2013 he was doing what he was supposed to do \u2013 as he always does without fail or complaint. The Major told me that you always, always knew where to find Steven \u2013 his values and character were so pure that he always did what was right and would exhaust himself trying.\n\nHe gave me roses! No man has ever sent me flowers or so much as given me one flower. He is cagey I don't know how he did it but I suspected the Major's hand in this. His Momma and Daddy came to supper and we enjoyed them being with us. They loved my little house especially my favorite room the wraparound porch with ceiling fans. The Major admired the work Steven did on the lawn. We're proud of his hard work period. His Momma and I swapped some recipes \u2013 she took chicken and dumplings home for the Major - we had a sweet time with them. The Major got out of breath real easy so we watched him. I didn't have air conditioners so I kept the ceiling fans running. I couldn't believe how normal it felt to have dinner with Major and Mrs. Edwards \u2013 this was Fantasyland just like the one in Disney Land. I didn't know what to think I only knew I loved how they treated us \u2013 me especially - I'd of never believed it had I not been living it. We sat around talking like we had been doing this together all of our lives. It was so peaceful \u2013 I didn't know life could be like this especially growing up on a farm where the work never ended.\n\nOn Sunday we went to an Episcopal Church \u2013 the Major called 'em 'whiskeypalians.' We stood and knelt, stood and knelt for over an hour \u2013 that's enough to make anybody take to drinking. We didn't go back there \u2013 it was more about their benign neglect than any other reason. But there was more \u2013 we had drifted into that gray area of sadness that settles in on a relationship when separation is imminent \u2013 and it was imminent alright. At least the sabbatical work started in a few weeks so...I could be preoccupied as though I wouldn't worry about my baby and where he was and what he was doing. The Major and Mrs. Edwards were gonna check in on me they said \u2013 I wasn't sure how faithful they could be with the Major being sick. We'd have to see how that worked out. I expected Evie to be putting her nose back into my personal life again.\n\nSteven and I worked out how we were gonna kiss goodbye when he left on Monday. His parents were gonna watch us like hawks so we could have our moment. This 'thing' that we had to work out pissed me off and really pissed Steven off \u2013 his righteous anger is something to behold. Do not get into his crosshairs. Our family gathering and Steven's persistent love for me didn't just make me happy it changed my way of life \u2013 I had love again. In the three days that Steven and I spent in 'our home' before he shipped out for training we made love quite a few times \u2013 it was very sacred to me and neither he nor I were willing to write about it for this chapter. We talked endlessly \u2013 opening up to each other about our fears and our ambitions and our politics. Steven shared his fears with me \u2013 that he would make a mistake that could cause someone to lose their life even though he knew that those were the perils of war. Then he told me bluntly that I was his beneficiary if anything happened and that started my long months of being terrified. I didn't care about the damned money \u2013 I loved Steven and couldn't live without him. He kept telling me that the training is dangerous because they train for war. Of course he wouldn't take a job that kept him in the rear he had to be up front but that's another story. Over the next few months I rarely got more than three hours sleep a night add to that just missing my baby and my heart was torn up.",
        "GONE TO BENNING\n\nSunday evening Lissia and I spent on the sofa talking quietly and listening to our favorite music: Etta James, Ella Fitzgerald, the Platters, the Limelighters and a few classical composers as well. She would cycle through trembling and calm as we held each other. I told her I would write a letter to her everyday \u2013 I lied unwittingly \u2013 I would write to her twice a day. Usually the letters were one or two pages but I'm getting way ahead of myself. I took two pictures of her for my personal effects - one was a wallet-sized portrait for the school yearbook and the other was of the two of us at the Seaview in Galveston. Both fit into my wallet. While we were sitting on her sofa she handed me a small box, \"What is this?\"\n\n\"Open it baby \u2013 I want to think about me while you're away,\" she whispered.\n\nI opened the box and there was a gold cross and chain, \"Lissia you shouldn't have done this baby. You've done too much,\" I hugged her closely. My heart was aching so much for her \u2013 you'd think I was going on a tramp steamer for my 'Two Years Before the Mast Journey.'\n\nAs I held it between my fingers, she took it from me, but I held her hand still and kissed the cross and she then put it around my neck, \"I love you Steven Michael Edwards. God brought you to me to restore my heart and you did with such beauty and tenderness that you leave me breathless and needy,\" She raised up on her elbows and looked deeply into my eyes - I felt something move in my soul that made me weak all over. Her love took us to a more profound place than I knew existed. We kissed and held each other for a very long while \u2013 we had to wake up to go to bed. The night before had finally come \u2013 now it was just a wake up. My duffel bag was packed and my AWOL bag was ready along with my orders and my very thin 201 file. We undressed each other and climbed into bed for our last night together. We didn't move much we just held onto one another \u2013 dreading the alarm clock that would hurtle us forward at a speed we weren't prepared to travel. \n\nMom and Dad got to Lissia's home at around 0600 hours and we shared breakfast together. Our talk was small talk. We didn't make promises and swear blood oaths over what we'd do while we were apart \u2013 we dealt with the reality \u2013 Mom was a soldier's wife she would get Lissia through this. Dad had given me his advice \u2013 do as you're told \u2013 stay within the chain of command and don't speak unless spoken to. There are four right answers to any question: 'yes sir; no sir; I don't know sir but I'll find out sir; and no excuse sir.' Never make excuses and only explain your actions when you're asked to do so otherwise it is an excuse which is the skin of reason stuffed with a lie. Mom and Dad drove us to the university. I was still wearing civilian clothes until I got to in-processing at Benning. Lissia and I held onto to one another in the back seat. We pulled into the parking lot and there was the dark green bus with wire over the windows \u2013 it looked like a prison bus. We got out and I grabbed my duffel bag and AWOL bag and reported to LTC Calwell. He then walked with me to meet my parents. He and Dad got on very well and then he turned his attention to Lissia, \"Dr. Wright this is a pleasant surprise. I am glad to see you this morning.\" He smiled to me, \"Say your goodbyes Candidate Edwards we leave in ten minutes.\"\n\n\"Yes sir,\" I spoke to his back as he quickly stepped away. Everyone else was hugging and kissing. Lissia and I were new to this and nervous. I hugged and kissed Mom and Dad and then immediately forgot what we rehearsed for the goodbye kiss. Lissia was crying and I couldn't stand it. I took her into my arms and kissed her long and slow, \"I love you sweet wife of mine.\"\n\n\"I love you my beautiful husband,\" she responded as we hugged tightly. The first sergeant hollered for everyone to board. I left the three of them standing there watching me leave \u2013 Mom and Dad had their arms around Lissia and my heart was breaking \u2013 they had each other and I had the Green Machine. I watched them and blew kisses to Lissia as long as I could. I hadn't noticed that someone was sitting next to me.\n\n\"I'm Richard Carls,\" he said to me.\n\nI put my hand out, \"Steven Edwards \u2013 nice to meet you.\"\n\n\"Who's the black woman?\" he was being nosey.\n\n\"My fianc\u00e9,\" I reluctantly told him.\n\n\"Damn.\"\n\n\"What?\" I wanted to know what that meant.\n\n\"Nothing...just damn. You two are brave as hell,\" he acknowledged.\n\n\"Richard I don't think about it as brave \u2013 she my fianc\u00e9, I love her,\" I felt an ache in my chest as I strained to see them waving at the quickly disappearing bus.\n\n\"I feel like shit Steve...\" he confessed.\n\n\"It's Steven \u2013 Richard. Why do you feel that way?\" I wanted to hear this.\n\n\"My girl and I sneaked around for three years and we got caught by her parents then mine and it was a bad scene,\" his heart was broken too.\n\n\"She from here?\" I asked.\n\n\"No we're from Cuero. Her family has lived in Texas since the 1600s. Spanish land grant and all,\" he breathed out hard.\n\n\"Do you still love her?\" I knew the answer.\n\nHe nodded, his face darkening, \"I do. She writes me everyday \u2013 she's at Texas Tech.\"\n\n\"Don't lose hope Richard,\" I told him.\n\n\"Your girl looks very familiar but I can't place her. Is she a student at the University?\" he was getting way too close.\n\n\"No...no she's not,\" he did ask a yes-no questions so I didn't feel it necessary to tell him much more.\n\n\"She is the most beautiful black woman I've ever seen Steven and right up there with the best looking women I've ever seen period,\" he nodded and shook his head. \"Boy we're something huh?\" \n\nWe talked all the way to Hobby Field and all the way to Benning. He would eventually become my Ranger buddy \u2013 our friendship formed because of our ladies who didn't even know one another. The flight from Hobby to Atlanta took about two hours and we boarded a bus for Ft. Benning at the airport for another three and half hours. The Army likes you to arrive in the dark so you don't know where you're going, how you got there and how to get out of there. We were herded around like lost calves with lots of screaming and shouts of 'do it now!' We loaded out wall lockers and footlockers with our displays and identified our fatigues for the next day. We finally hit the racks at about midnight and they got us up at 0430 to begin our in-processing and take our oaths. We filled out paperwork, got shots, haircuts, filled out beneficiary forms, and uniforms and boots that we didn't have already. There were 178 of us ROTC boys in the first phase which was eight weeks. Same kind of physical training as the basic soldier gets with an increased emphasis on leadership \u2013 plus we wore R.O.T.C. brass on the collars of our uniforms and the peak of our caps and helmet liners.\n\nEach morning and each night I wrote a letter to Lissia and during the week I would write two or three to Mom and Dad. Her letters came so frequently that I was overwhelmed at mail call \u2013 but we missed each other desperately. Three weeks into training we got a Sunday off and after chapel we could call home. I called Mom and Dad first and they had just had Lissia home with them for two days and to church. It seems they shared news from their letters with one another. I then called Lissia and for two minutes tears just ran down my face as I could hear her sobbing too. We finally got calmed. We were hurting pretty good I spent $12 on that call which was about 10% of my pay. I was on E-4 or corporal pay which was $153 a month \u2013 it would go up to E-5 pay or $200 a month when we finished basic. Anyway I told her I'd call her when I could. We professed our love.\n\nRichard and I became good buddies. He worked hard too and I like that in a person. He had taken heart from my relationship with Lissia and began an earnest and renewed relationship with Maria Elena. She sent him letters like Lissia sent me letters \u2013 abundant letters. In her last letter she advised him that she had completed the application to change schools and would be starting at our university in the fall \u2013 all of her engineering credits and courses transferred. He went ballistic in his happiness. Knowing that she'd be near him, encouraged him to work even harder. The training weeks flew by and within two weeks of graduating Richard and I, along with thirty of our classmates who chose combat arms and were in the top 25% of our class were offered a chance to go to jump school - airborne or paratrooper training. We took it \u2013 of course. Lissia and my parents were disappointed that I would be staying four more weeks at Benning but Dad smoothed that over with Lissia and Mom telling them that this was a critical qualification. \n\nRichard and I joined a company of R.O.T.C. Candidates from other schools to form a company for becoming paratrooper qualified. We were both now E-5 for pay purposes but wore R.O.T.C. brass on our uniforms. We bought Corcoran jump boots and were soon learning the airborne shuffle. It wasn't long before we were making our 'cherry jumps' (five required jumps) that qualified us as airborne. We were now eligible to draw an additional $55 a month for jump pay provided the unit commander designated our platoon as airborne status which he did. It felt pretty good to have one ribbon \u2013 the National Defense Medal on our uniforms but it felt really good to have our cherry wings and bloused boots with our Class A uniforms \u2013 we felt like airborne troopers even though we had a long way to go. \n\nWe got a ride on a C-123 back to Houston landing a few miles from my parents' home at Ellington Air Force Base. LTC Calwell named me the platoon leader for our airborne infantry platoon and as such was in charge of getting us off the aircraft and into formation. The C123 taxied to a stop and he gave me the command to get the platoon up and off and form up on the tarmac. I gave the command, \"On your feet! Attention! Left side, right face! Right side left face...in columns of twos...forward march!\" Once the platoon was off the aircraft I turned them and marched them to the shade of the hangar and halted them, \"Platoon halt, right face! Parade Rest! Stand at ease! Okay gentlemen reform the platoon by squads. Squad leaders dress and cover your squads and bring them to attention.\" I watched as they formed and when the squad leaders completed their orders they all faced me. \"Platoon...attention!\" The platoon came to attention. I did an about face as LTC Calwell walked up. I saluted him, \"Sir 1st airborne infantry platoon is ready for inspection sir!\"\n\nHe returned my salute, \"Thank you Platoon Leader Edwards. Gentlemen stand at ease. Your gear will come off in just a moment. Your families are waiting for you \u2013 it's time to grab a kiss and some hugging. Dismiss your men Platoon Leader Edwards.\" \n\nI came to attention and saluted the colonel, \"Yes sir.\" I did an about face and called the platoon to attention, \"Platoon!\" The squad leaders followed with, \"Squad!\" I then gave the command, \"Attention!\" They came smartly to attention. \"Squad leaders dismiss your squads,\" I commanded. My heart was about to explode as I turned to LTC Calwell, \"Thank you sir for everything.\"\n\nHe shook my hand, \"Steven you're going to make a fine commander. I'd like to have a word with your Mom and the Major as well as your beautiful fianc\u00e9.\" \n\nI swallowed hard, \"Yes sir!\"\n\nWe walked quickly toward Mom, Dad and Phylissia. My family, including my brothers, much to my amazement, along with Lissia met me in the hangar. Lissia came running with tears streaming down her face and we drew some stares as we hugged and kissed, \"Oh Steven my wonderful soldier, my love I have missed you so much. I can't believe you're here. You're beautiful. Look at you! I'm not letting you out of my sight forever.\" She held tightly onto my arm, gripping my hand with intertwined fingers with a vise-like hold. \n\n\"I missed you too baby. I love you so much,\" between kisses and hugs.\n\nLTC Calwell spoke to us, \"Good afternoon Dr. Wright. You and the Edwards should be very proud of your soldier.\" As my parents approached LTC Calwell saluted my Dad, \"Major your son informed me that you are the recipient of two Distinguished Service Crosses from the second war and Korea. It is my honor sir to meet you and to congratulate you and Mrs. Edwards on this fine young Candidate. He graduated at the top of basic and airborne schools and not just for our unit \u2013 he was the number one graduate in his airborne company which included regular enlistees and volunteers. His leadership kept his platoon together and not one of those young men dropped out. This is a first for our ROTC unit.\" He turned to face Phylissia, \"You have incredibly impeccable tastes in young men. I pray to God that you can live your lives out completely \u2013 you are both such wonderful people.\" With that he saluted us and I came to attention and returned his salute. Lissia was in shock. \n\nMom and Dad came over to us and hugged us tightly. Then Mom did what she routinely does and took our pictures \u2013 we were both crying and laughing. She admired the uniform and Dad shook my hand \u2013 his eyes were red with tears, \"Son I am so proud of you.\" We hugged and held each other. I was getting closer to the dream of getting graduated and commissioned before he died. I didn't know that this would be as close as Dad would get for us both.\n\nI glanced over to where Richard was standing and there was Maria Elena. They were crying and holding one another too. I took Lissia's hand, \"Come with me a minute baby I want you to meet someone.\"\n\nRichard saw us coming and he smiled and said something to Maria as she wiped her eyes. We introduced ourselves. Maria was charming and beautiful. They would become our good friends for a long time and would marry a year after she moved to our University \u2013 they could marry but we couldn't. \"Richard I'd like you to meet my fianc\u00e9, Dr. Phylissia Wright, sweetheart this is Richard Carls he's the assistant platoon leader.\"\n\nLissia extended her hand, \"Richard it is a pleasure to meet you.\"\n\nHe took her hand, \"Dr. Wright it is a pleasure to meet you \u2013 you're more beautiful than your pictures \u2013 you and Steven are a stunning-looking couple. Forgive my rudeness, Dr. Wright, Steven this is the love of my life and my fianc\u00e9 Maria Elena Garza. Maria this is Dr. Wright and Steven Edwards \u2013 they're engaged to be married.\"\n\nMaria shook hands with us both, \"Richard has told me so much about you both. I'm honored to know such brilliant and accomplished friends of Richard's.\" We chatted for a while until our families got anxious to get back to our homes and welcome us properly. That didn't include my brothers who'd yet to speak to either of us. I could tell that there was a greater gulf growing among us. My life direction was becoming more certain and focused and they were still waffling and quavering in what to do.\n\nWe sortied again with my family. Lissia had driven her car so I put my duffel bag behind the seat and the AWOL bag in the trunk. There was barely enough room in her car for a toothpick much less a fully loaded duffel bag. Our life together was restarting. \"Lissia I missed you so much.\" I couldn't keep my hands off of her she was so beautiful. \"I love you sweet baby and desperately want to be alone with you,\" I confessed as she drove the few miles to Mom and Dad's home.\n\nShe wiped her eyes and drove, crying and laughing and chattering, \"I know. I know. It's so hard to believe that you're finally home \u2013 oh God, how I love you Steven, my sweet husband. Let's get through today and we can have some very quiet time together to reacquaint ourselves to one another.\"\n\nI smiled, \"You don't know how I've longed to hear you talk and just be near you again. The Army is a rough and tumble world filled with profanity, violence and excess. Sundays were my only respite when I could talk with you on the phone and at least get my Lissia fix.\"\n\nWe met up at Mom and Dad's house where there were friends and barbecue waiting. As we walked in, me carrying my duffel bag and Lissia carrying my AWOL bag we were met by cheers and applause. There must have been fifty people there. The house was filled with laughter and the smells of South Texas cooking and barbecue. Hal came over, \"Steven...I...well you look like Dad...a real warrior brother. I can't do what you're doing in the military or with Dr. Wright...I wish I could,\" and he walked away. Georgie didn't bother to come talk to me he kept a wide circle around us unlike our friends including Reverend Broughton and his wife. We feasted and talked into the night. I asked Mom and Dad to chat with Lissia while I went to shower and change.\n\nDad came over to me as I returned to the gathering, \"It's getting late son why don't you and Phylissia go on home and get caught up. She's missed you something awful Steven. Come home for church on Sunday,\" he hugged me, \"Son I am so proud of your accomplishments.\"\n\n\"Dad I'm following in some mighty big footsteps sir. Your military history became well-known while we were at Benning. I had to tell them you're retired field grade and they looked you up and found your history Dad. I didn't tell them about the DSCs or the Silver Stars \u2013 they found it out on their own,\" I was feeling overwhelmed.\n\n\"Son you have a lot of life coming your way and you've started well. Your commander is going out of his way to reward your diligence and hard work \u2013 you cannot let him down,\" he shook my hand and held his gaze steady into my eyes looking for the weakest part of my being. \"Say your goodnights Son. Phylissia needs you right now. She cried for a week with us. Don't let on that you know...\"\n\n\"We don't have secrets Dad I just appreciate your looking after her,\" I sighed heavily.\n\n\"Steven she is so brilliant and beautiful and loving. I couldn't have picked a more perfect woman for your wife than Phylissia; Lord knows she loves you dearly and that you commander recognizes how important she is to you is a credit to you both. Now get out of here before you piss me off,\" he winked.\n\nLissia and I said our goodbyes starting with Mom and thanked everyone for coming over. We got hugged and kissed by everyone with the exception of my brothers. Their girlfriends apologized to us and I just smiled, \"It's okay. They're not there yet.\"\n\nOur ride to Lissia's home was intoxicating. It was a soft night. \"Steven I feel terrible about how badly I missed you. The first week you were gone I cried all week. Your Momma and I talked all the time and your parents came and got me for a few days. They did everything they could humanly do to keep me from being so desolated.\"\n\n\"That's what families do baby. How did they make you feel?\" I wanted to know.\n\n\"I couldn't have been treated better by anyone \u2013 they are so kind,\" she admitted.\n\n\"I missed you Lissia...my heart hurt for several weeks. Being with people you don't know and away from home in a rough and tumble environment begs for a soft place to land and I had none except for our memories together. I would fall asleep asking God to watch over you...I never took my cross off. I looked at your pictures all the time that's how Richard and I got through the training knowing that we had our loves waiting for us. LTC Calwell is so impressed by you and us together.\"\n\nShe gasped, \"Oh my...that's scary.\"\n\n\"No I think it's okay. He wouldn't have promoted me or been such an encourager to me if we were a problem,\" I spoke openly with her. No secrets.\n\nWe pulled into her driveway and in the twilight the lawn was beautiful. All the flowers were blooming and had filled in so nicely, \"Wow the lawn looks magnificent!\"\n\nShe was beaming, \"I've been mowing the grass and raking and trimming in between my sabbatical work. I'm ready for us to work on this together.\"\n\nWe pulled her car into the garage next to mine and closed the doors. I took my small suitcase in and she unlocked the house. There were fresh flowers everywhere, \"where did all the flowers come from?\"",
        "\"You planted them. We have a bumper crop. They've been my friends while you were away. Come with me,\" she held her hand to me as I set my bag down, \"look what I did for us,\" as she led me to the previously unused third bedroom. \"I turned it into an office for us.\" My jaw dropped \u2013 all of my books were here including the Oxford Dictionary and my typewriter. There was even a whole wall that was slate blackboard that she found at a school that was being demolished. Mike Cowart was a student of hers, my friend and the city police chief's son who came and installed the chalkboard. She slid her arms around my neck and we kissed for a long time \u2013 I had missed her so and these kisses were like a flame-thrower. \n\nI stopped us, \"Wait one,\" I hurriedly locked the front and back doors and came running back to the office doorway where she was smiling with her head tilted against the door frame.\n\n\"My sweet, thoughtful husband. Come make love to me. It's been too long,\" she was so sensual and so sexy I couldn't resist her. This time I lifted her into my arms and carried her to the bedroom, turning out the office light as we turned toward our night.\n\n\"It has been too long. Is the cystitis done?\" I wanted to know.\n\n\"Oh yes. I'm so horny right now there's no telling what's gonna happen baby,\" she whispered in that husky Lissia voice that I heard over and over in my long nights at Benning.\n\nI laid her on the bed, kicking off my shoes, stripping down to my birthday suit as she sexily removed her clothes, watching me with the most seductive gaze I'd ever known. She was going to keep this promise with a certitude that I'd never known before. I began undressing her button by button kiss by kiss. The familiar was taking over, the fan's whisper, her radiant smile and the sweet scent of jasmine filled the air around us. I unhooked her bra and released her beautiful, rich brown breasts, her nipples standing tall and looking delicious. I kissed down her neck, spending time kissing her chest and then each breast with articulate and practiced care \u2013 I dreamed about this moment and how it would feel. I could conjure up a better feeling in all of my life as I suckled hers breasts \u2013 massaging each one in succession as she moaned and moved under my touch, \"Baby I am so wet...feel me...\"\n\nI slid my hand down her warm belly to a very smooth pelvic region that had once been covered in rich black curls that always beckoned me to feast on her fragrant and lush pussy, \"Wow you're so smooth...\"\n\n\"That's one surprise,\" she kissed me with such passion that I almost choked on her tongue. It wasn't long before I unsuccessfully tried to lick and tease her pussy and clit. She was right she was drenched and soaking wet, \"Steven I don't need any foreplay right now...come to me baby give me your big ol' hard dick...I need you so badly,\" she gasped as the head of my dick pressed against her pussy lips and she reacted quickly \u2013 her pussy swallowed my throbbing dick in one swift and amazing movement. \n\nI cannot tell you what happened...the only word I can use to describe our physical hunger for one another was ravage. We were so physical in our passion that our bodies were pouring sweat at the same rate as our ragged and pitched breathing. Our grunting and lust filled the house with a primal sound and smell that neither of us had ever experienced. As you can imagined our orgasms came fast and hard, adding to the heat, sweat and smells of an already overwhelming scene for us both. We panted out our love for one another and crashed and burned in each others arms. Somewhere around 0200 hours we awoke groggily and disentangled ourselves from one another. Lissia's eyes were soft, her smile tender and gentle, her breathing began once again where we left off with such syncopation that it would seem contrived were it not so real in our lives.\n\nThe next few days would be the most endearing memories I would ever have the chance to share with Lissia. We went everywhere together. I went to the registrar's office and collected my class cards (IBM keypunch cards that we used back in the dark ages) - I got all the classes I needed \u2013 Dr. Qui\u00f1ones and LTC Calwell took care of that. This time when I went to the business office there was only a voucher to sign and one for the bookstore. I owed no money for school and it felt good. We then drove over to the Private university to visit her office on that very private university where she was the only black faculty. She was greeted cordially and I met her suite mates as she introduced me to them as her fianc\u00e9. I was stunned at the warmth of that reception. We walked around that campus for a bit \u2013 the fragrant live oaks accompanied our stroll. We were living in a dream state. Everything was happening so fast and so surreally. I spent more time at Lissia's home as she called it our home that I did at Mom and Dad's. We went to church with them every Sunday and had Sunday dinner with them. Often we would come on Saturday in time for Lissia and Mom to cook and talk. It gave Dad and me time to steel me for the inevitable.  \n\n******************************\n\nOur life settled into a beautiful rhythm. Lissia and I spent all of our free time together. We loved working in the yard. We built a white picket fence around her home with and arched arboreal entrance with a yellow climbing rose on the arbor. When school started, the studies and the ROTC commitment kept me swamped. I usually spent Thursday, Friday and Saturday night at her house. When I didn't have ROTC drill I was there working on my mathematics course load since my undergraduate studies were done. We didn't attend football games at my University instead we went to Saturday home games at the Private university. We were accepted there and few people ever knew who we were. Lissia and I began running together. At first she ran about a mile eventually she was running six or seven miles every day with me. We agreed that we needed to be healthy for one another.\n\nOne Saturday morning Mom called in a panic, \"Steven you need to come home it's your Dad...he's bleeding.\" I hung up the phone and grabbed Lissia and we raced home just as he and Mom were getting into her car to take him to Galveston.\n\n\"Mom! You get in back with Dad \u2013 I'll drive. Lissia hop in the front with me,\" I was giving orders like I knew what I was doing. Our neighbor up the street was the police chief of our small town he had joined us, Chief Grantham signaled me to follow him and we were sailing along behind his siren at speeds reaching 100 mph. We made it to the USPHS Hospital in Galveston in about 20 minutes. They got Dad situated into the ICU while we paced the floor. Mom was in with him. I introduced Chief Grantham to Lissia, \"Chief this is Dr. Phylissia Wright, Dr. Wright this is Chief Grantham.\" \n\nHe took his hat off and shook her hand, \"I heard Steven was engaged to a black woman no one told me that you were so beautiful,\" he behaved like the Southern gentleman that he was. The Chief directed us to some chairs in a waiting area, \"It doesn't look good for the Major Steven.\" He was my Dad's friend.\n\n\"Yes sir I know,\" I spoke grimly as Lissia held onto my hand and arm, her tears were building. \"Dad's been trying to get us ready but there's no way that you can be ready for this...\" \n\nMy tears rolled down my face and Lissia hugged my neck, \"Oh Baby I'm so sorry just cry all you need to \u2013 I'm right here.\" Chief Grantham came over and hugged us to him \u2013 we all needed to cry.\n\nAfter a while, an hour or more, Mom came out, \"Son you and Phylissia can go in to see him \u2013 he wants to see you both.\" Mom hugged us, \"Thank you for coming Son, your brothers didn't get home from their dates fast enough. I'm so damned angry at them right now.\" She went over and sat with the Chief.\n\nWe went into the ICU; the nurse in charge tried to stop Lissia but I told her, \"This is my wife.\" That shocked and quieted her as we walked over to Dad's bed. They had a tube in his right lung and one down his nose. \n\nHe grinned and whispered hoarsely, \"It looks like my stunt worked...\" he gasped for breath, \"you came to see me.\" \n\nI was in no mood for his gallows humor as I sat down in one chair pulling another over for Lissia, \"Lissia and I love you Dad. I know this is not what you wanted. I'll be here as long as you need me...\"\n\nHe freed his hand from ours, \"Phylissia make sure he goes to class and studies hard \u2013 his work is important. We both know what's coming...\"\n\nLissia stood and got the wet, cool cloth from the bedside bowl and placed it on Dad's forehead, \"Major we'll stay right here with you; neither Steven nor I will leave your side and we'll keep an eye on Mrs. Edwards.\" She leaned over and kissed him and his smiled wanly as she sat back down. His color was turning ashen. The ICU nurse came over and increased his oxygen and his cheeks flushed with color. She check the bottle where the blood from his lung had drained, it appeared that the hemorrhage had stopped. The medical team had two IV's running and had given him a sedative. So we sat there with him for a very long time. We went out and checked on Mom. The doctor had given Mom a valium \u2013 she was anxious \u2013 the valium had calmed her down but she needed sleep.\n\nI signaled to Chief Grantham and he came over while Lissia sat with Mom, \"How is he?\"\n\n\"He's not good sir,\" I was feeling the weight of it all, \"would you mind taking Mom home? She's going to need some rest. Dr. Wright and I will stay with Dad.\"\n\n\"Are you sure Steven?\" He looked hard at me.\n\n\"Yes sir, you know how close I am with Dad,\" I told him.\n\nHe nodded and put his arm around my shoulder, \"Let's go in and see the Major.\"\n\nWe went into the ICU so the Chief could see Dad. He patted Dad's arm, \"Pete, I'm taking Marsha home. I'll call Inez to let her know we're coming. Your boy here and his fianc\u00e9 are going to stay here with you. They'll call us if you need Marsha.\"\n\nDad nodded, \"Thanks Ike.\" They shook hands as best they could \u2013 the Chief and I went back into the family area where Lissia was collecting Mom.\n\n\"Call me Steven if anything changes,\" he had tears in his eyes, \"he doesn't look good.\"\n\n\"I will Chief Grantham. Thank you for everything sir,\" I shook his hand and he hugged me close like a son. He was a slight man with a leather-tough exterior. He didn't want me to see him cry. I couldn't have anyway because of my tears.\n\nWe walked over to Mom where she was standing and Lissia was telling her our plans, \"Mrs. Edwards Chief Grantham is going to take you home. Steven and I are going to stay here with the Major. We'll call you if anything changes.\"\n\nMom hugged her, crying, \"Thank you sweet child of mine, thank you. Steven is my heart and you are his. I love you both so much for doing this.\"\n\nI hugged and kissed Mom and we took her to the Chief's car. I made sure I had the car keys and Dad's ID cards. We got her in the car and sent her on her way. It was getting late now and we were hungry. We went back to the ICU to check on Dad. The ICU nurse met us and said that Dad was resting \u2013 they'd given him a sedative and for us to go get some supper. \n\nWe went to the Seaview where Mr. Spanos met us at the door with a big smile that suddenly went dark as we told him what had happened. He went and got his wife Effie who hustled us over to their family booth and they flanked us as their daughters brought food to us. They loved us and sheltered us in the turbulence of this growing darkness in our life. Dad's life was ebbing as ours was beginning \u2013 the Spanoses were not going to let us go through this alone. After supper Mr. Spanos followed to the hospital and we took him in to see Dad. Dad was awake and Georgie knelt at his bedside, kissing Dad's hand, \"Oh my God please look with favor on you Son Pieter.\" He stayed only a short while and as he left, \"Stefan you and doctor come to us when the night, she get long \u2013 okay?\" He was blubbering and we hugged him and he kissed us both, \"Momma will come back to be with you \u2013 okay?\" He left wiping his nose with a huge handkerchief \u2013 blowing it like a foghorn, wailing softly as he walked.\n\nLissia and I pulled our chairs next to Dad's bed and sat down. Lissia held his hand and I patted his shoulder. He fell asleep while we kept vigil over him. Dad knew his time was near \u2013 the three of us knew. I was barely keeping it together and Lissia was not. She had pulled her feet up under her on the chair and seemed so diminutive and fragile. About two in the morning Dad's breathing got ragged and I climbed on the bed with him, propping him up against me so it would be easier to breathe. I'm not sure what time his life slipped from my grasp...I couldn't stop it...he coughed and his breathing got shallower and it was almost inaudible. I saw Lissia stand up and there was this chilling rattle in his chest, his grip on my hand slackened and he sighed out his last breath. I couldn't believe it. His heart monitor rang out its alarm and I hugged him to me...I don't remember what happened after that...Lissia will tell you...\n\nFROM LISSIA \u2013 THE MAJOR DIES\n\nWhen Steven's daddy died I was with him.  Steven was holding his Daddy's hand lying on his bed with him \u2013 I heard his Daddy give that death rattle and he breathed out. I got up and went over and put my arms around he and his daddy \u2013 we hugged him tightly as my baby cried his heart out \u2013 he would never really get over that \u2013 I think coming home from Vietnam and not having his Daddy to talk to about it broke his sweet heart. Those two were tight. The nurse on duty heard the alarm and came over and told us to step away...I had to pull Steven off of his Daddy. Two doctors came in and tried to resuscitate the Major but it was no use. His body was tired from fighting the cancer. We're never ready for our loved ones to die. Steven through all the blunt talks that he and his Daddy had was putting off the inevitable. Mrs. Spanos was waiting outside in the family area when Steven and I came out. She knew. She ran over and hugged us both so tightly, speaking in Greek and wailing. After a little while she went to get her husband \u2013 Steven and I went with the doctor to his office to call his Momma.\n\nHis Momma and brothers were home sleeping forty miles away. I held onto him as tightly as I could as he told her. He was fighting back the tears remembering what his Daddy had asked him to do \u2013 I could see his devotion to the duty his Daddy had asked him to perform and God love his dear heart he held up until he hung up the phone. The doctor left us alone in his office and my baby laid his head against my chest and I held him while he cried his heart out. He stopped crying, stood up and looked at me, \"We need to go home. Mom's gonna need us.\" When he stood up he reminded me of those grand live oaks on the campus. There is this power in their presence \u2013 a quiet certitude of being. It was in Steven. We drove quickly to his Momma's house. I'd never seen anyone so calm as Steven. His brothers were completely distraught and wailing \u2013 his Momma just leaned on Steven. I could see the pain in my baby's eyes as he began writing notes. Their pastor showed up. Steven called LTC Calwell who began arranging the military funeral. Steven's ROTC unit would be the honor guard. By 8 a.m. Steven had the funeral home pick up his Dad's body. LTC Calwell already began arranging the cortege at the Houston National Cemetery. Given the Major's military record he could have been buried at Arlington National Cemetery but Steven said no that his Momma would want to be able to visit his Daddy's grave.\n\nMrs. Edwards sat between Steven and me and we held her close. She looked at me, \"Phylissia I am thankful to God that Steven has found the love of his life who would be with him in his darkest moment. I love you for loving my boy.\" My heart was melting away into tears as she held onto me and cried against my breast. Steven hugged us both close to his heart kissing us both. He made his Momma go to bed and told his brothers to go to the church with Reverend Broughton to set up the gymnasium for the service. We pulled out the sleeper sofa and lay down to catch some rest. We held each other and rocked one another to sleep. \n\nAround 10:30 or so I heard a commotion and in that ruckus I heard the word 'nigger' the next thing I knew George, Steven's younger brother was on his back with a bloody nose \u2013 out cold as a chip. One of his friends attempted to take Steven on \u2013 at this point I was wide awake \u2013 that boy got the word 'fucking' out of his mouth and Steven kicked him in the chin, flipping him onto his back. Steven turned and grabbed Hal by the throat and told him, \"I am done with all of you bigots. You take this trash out of Dad's house. You are not welcome here. You find somewhere to stay until after Dad's funeral. I told you I'd rip your heart out and I will \u2013 I'm coming for you. But Dad is dead and you cowards couldn't even go to the hospital to be with him while he was dying. Get the fuck out of here!\" Harold roused George and George's friend and they left. It was a very bad day. The long-term effects of that moment wouldn't be felt until much later when even darker days would appear.\n\nIn those bitter few days when his daddy died I never left Steven's side; Steven took care of the funeral arrangements and keeping his Momma occupied. The funeral was amazing. Their pastor had never done a military funeral. The Army Color Guard came. The ROTC Unit came. The church gymnasium held seven hundred people and there were folks standing everywhere. There were twenty motorcycle police officers that escorted the funeral procession to the National Cemetery. I'd never seen anything like it. Steven was in his uniform, holding onto his Momma and me. The rifle squad of six men fired three volleys and then came the playing of 'Taps.' It's chilling, soulful soliloquy of mourning announced the last homage to a great warrior. Then the military pallbearers stepped up and folded the flag and finally with the folded flag, the Colonel presented the flag to Mrs. Edwards, \"On behalf of the President of the United States and a grateful nation, I wish to present you with this flag in appreciation for your husband's service.\" It was the most somber place I've ever been. I had chills thinking forward. Would I be sitting there where Mrs. Edwards was receiving Steven's flag one day?\n\nWe were escorted back to the waiting family car and we returned to Mrs. Edwards home for a gathering of family and friends. Everyone talked about the Major with such reverence. I met his men from both wars \u2013 black and white who held the Major is such high regard and honor. Mrs. Edwards was recovering capably and ordering folks around in her normal Southern woman way with me at her elbow when one well-intentioned relative said, \"Where did you find such lovely help?\" Meaning me. Mrs. Edwards turned and faced her cousin, \"This is Dr. Phylissia Wright \u2013 she is Steven's fianc\u00e9 and my daughter \u2013 she is here to honor her Father-in-law not as MY help.\" You could have heard a fly fart it got so quiet. Her cousin begged my forgiveness and I nodded.\n\nI joined Steven and LTC Calwell as they were chatting. Steven smiled and held his arm to me, \"Hi baby. Thank you for everything.\"\n\nI kissed him, \"I love you Steven and whatever you or your Momma need it's yours.\"\n\nLTC Calwell smiled to me and shook my hand, \"Dr. Wright I cannot thank you enough for being Steven's strength through this. The love that you two share is powerful medicine for a shaky world that doesn't know how to behave with one another. You two could teach us how to love again.\" He said his goodbyes and made several offers of assistance to Mrs. Edwards which she would accept over time.\n\nWe went over and talked with his Mom. She was surrounded by family and hugged us, \"why don't you two go home and get some rest. Steven, my Son, you are so strong but you need to sleep. Go home with your sweet wife. Get some rest. Phylissia take him home now okay darling?\"",
        "I hugged Mrs. Edwards, \"Yes Mrs. Edwards...\"\n\nShe held her finger up, \"It's Mom or Momma...\"\n\nI smiled to her, \"Yes Momma. I'll get him home. He's exhausted,\" I looked into his much burned out eyes and knew it was time. He got changed into some civilian clothes and brought a week's worth of clothing with him. Our drive went quickly and quietly. We went to bed and Steven slept for ten hours mostly in my arms. I wanted to keep the ugly away from my baby. He'd had and seen enough for a while. He'd been strong enough for a while \u2013 it was time to turn loose. \n\nTwo weeks after the funeral he had a crash \u2013 fortunately we were working on my lawn when it happened. Steven was busy planting azaleas; one moment he was digging and the next moment he was sprawled backwards on the grass \u2013 not moving. I panicked and almost broke a leg trying to get to him. He had passed out. The strain and stress had caught up with him. The fire-rescue medics came and tended to him. He was sitting up by the time they got to him \u2013 he stayed with me and we worked through his great grief. It was in those dark days as I watched him draw his strength from our conversations, visits by his commander LTC Calwell and his pastor's prayers; it was in that time that I became his woman forever there would be no one other than Steven for me \u2013 into eternity. I prayed so hard for him and he got better. Our romance kept its bloom. He and I focused on the little things, things so insignificant to the hilarious antics of college kids that we would be overlooked for priggishness and stodginess when nothing was further from the truth. \n\nEvie even noticed that we were 'different' - like we didn't know the world around us existed...we didn't. There was much to be busy with and she felt that she was losing her best friend and I guess that she was right too because Steven had become my best friend. We had her over to dinner several times but we didn't do the 'girlfriend stuff'. I tried to be compassionate about us but there was Steven and he worked so hard at home with his Momma, his studies, the ROTC and with us \u2013 the few moments we had we cherished and held close to us. Evie came over one afternoon while Steven was rebuilding a part of the garage wall. I didn't know that he heard Evie's part of our conversation, \"Girl you know you ain't white. You cain't pass. What gonna happen when goes off to war? He gonna find himself a white woman and you gonna be shit outta luck!\"\n\nSteven came around the side porch where we were talking, \"Dr. Marshal I don't appreciate your attitude. I know I've consumed a lot of Phylissia's time. It's my fault that she hasn't spent a lot more time with you since I've been in her life but that doesn't give you permission to be hateful ma'am. Phylissia's your friend and would help you faster than a cat could lick its butt. You owe her an apology ma'am...\"\n\n\"Well what about you mister high and mighty ROTC-rat?\" She scowled.\n\nSteven stepped up on the porch and walked toward her, his eyes blazing mad, \"Ma'am it's time for you to leave. You've been ugly and rude to two people who love you and that is wrong. Fact is you have no shame about your filthy mouth and nasty attitude. You're gonna need us one day and you'll have burned your bridges,\" he pointed toward the driveway, \"your car is over there \u2013 it's time for you to leave.\"\n\nI thought for a fast-minute she was gonna take a swing at Steven but she didn't she just broke down and cried and Steven went over to her and held her in his big old arms and I stood up and went over to her and hugged her tight to us, \"Now, now Evie-darlin' it's alright. We love ya sistah and it don't matter how often we see ya we love ya. Doncha know that?\"\n\nShe blubbered and cried, \"Oh my babies I'm so sorry for my nasty-ass mouth \u2013 I deserved that but I miss ya so much,\" she leaned back from Steven's arms, \"you handsome man I know why she love you so much \u2013 you ain't afraid of shit especially my fat, smart-ass self.\"\n\nSteven patted her face and kissed her on both cheeks, \"You play nice I've got work to finish...\" He leaned around Evie and kissed me, \"I love you baby so much...\"\n\nI love me some Steven. Evie never again opened her mouth like that. She and I sat on the porch while Steven kept his hands busy. Evie marveled at his industriousness and his passion for me, \"Girl that man is somethin' else agin. They ain't none like him.\"\n\nI agreed with her as I watched him work. His restlessness and his deep sense of loss kept him occupied. Our lovemaking had become anything but routine. His passion was always fiery tempered with a sweetness that always made him concerned about me. He told one afternoon around Thanksgiving that he never wanted me to feel like he took me for granted \u2013 he wanted me to feel loved and that our relationship was new every day. We never argued \u2013 we talked everything through completely \u2013 his respect for my opinion was so strong that he'd challenge anyone who'd try to shout me down to quiet my opinion. I always knew when that was coming. I watched his eyes then his hands, his muscles tensed up and then he stood and confront what he called the 'misanthrope' who would dare to deny me my 'sovereign right to speak my truth.' His command of the English language was mind-boggling.\n\n*************************\n\nChristmas was a healing time for the Edwards family and the Wright family. Steven felt that we needed to 'fix' things with our families. He was finishing up his work for two of his theory classes in the office. The familiar tapping of chalk on that blackboard meant he was deep into his work. The tapping stopped and the house was eerily quiet. I walked toward the office and saw that he had his head in his hands. \"Hi baby...how's it going,\" I asked him.\n\nHe pointed to the board. It looked like a chalk-eating chicken had shit all over that board, \"I solved the quagmire,\" he smiled.\n\n\"Really? It looks like some other language or something baby,\" I teased him.\n\nI went over and hugged his neck and he pulled me into the chair with him. We snuggled and kissed for a long while and he suddenly stopped kissing me and said he needed to stand up. So I got up and he got on one knee and took my hand, \"Phylissia Carole Wright will you marry me?\"\n\nI was flabbergasted, \"Baby I said I would \u2013 what is this?\"\n\nHe smiled with tears in his eyes, \"I just need a yes or no...please?\"\n\nHis tears started mine, \"Yes my darling Steven of course I'll marry you...\"\n\nHe pulled out a beautiful diamond engagement ring, yellow 18-karat gold with a 1-karat brilliant cut diamond and put it on my ring finger of my left hand, \"I love you Lissia and I want to spend the rest of my life with you,\" he stood and took me in his strong arms and kissed me the sweetest lover's kiss I've ever experienced. My heart was full of joy. I shook so badly I couldn't talk. \n\nFinally we pulled apart and I looked at the ring, \"Steven this is too much!\"\n\n\"I wish it could be more. Dad left me money with this note,\" he handed the note to me.\n\n\"My Son I want you to buy your sweet Lissia an engagement ring. Your Momma and I talked this over and this is what we wanted to do for the two of you. We love you, I'm sorry I wasn't around to see the ring on her finger, Love - Dad,\" I couldn't speak \u2013 I just looked into his beautiful, tear-filled eyes. We held onto to one another for a long, long time as we cried on one another's shoulders.\n\nWe decided our Christmas gifts would be reconciliation. We decorated 'our home' with a fresh cut balsam fir. Its fragrance filled the house. We picked a day and invited his Momma and my parents to our home for a Christmas dinner. We went down and picked up Mrs. Edwards \u2013 Momma and Daddy made the one hour drive and we had a very long talk among us. Steven thanked everyone for coming as we sat down at the table and then he started, \"Mr. and Mrs. Wright I'm sorry you never got to know my father \u2013 that's my fault for being angry at how separated Phylissia felt from y'all. I was protecting her, the best I knew how. Mom I'm sorry I've been so hard on Hal and Georgie \u2013 I never meant to hurt you or Dad or his memory. It won't be long before I graduate and get commissioned and no doubt will be heading off to Vietnam. I don't want any hard feelings among us. I love Phylissia \u2013 I've given her an engagement ring after I asked her once more if she would marry me. I'm thankful to God that she loves me still and said yes. I'm going to need a lot of help from all of you while I'm away. You need to love one another and look after my baby \u2013 I'll be too far away to come running. Reverend Broughton said that whatever we ask in Jesus' Name we'll get \u2013 I ask tonight in Jesus' Name that we lay aside our differences and be a family. We need y'all in our lives.\"\n\nIt was deathly quiet in the kitchen when Momma spoke, \"Steven I never thought my baby would bring home a white boy well you're a sure enough man so that being said I agree with you...me and Cyrus had a long talk when Phylissia called and invited us to Christmas dinner with you and your sweet Momma,\" she patted Daddy's hand and he nodded as if to say 'you doing fine Momma', \"well we hope you'll forgive us for how we treated you but most of all how we treated our child our baby girl when it weren't her fault,\" she broke down and cried. Steven's Momma got up and put her arms around my Momma and stroked her head and hugged her to her heart. Daddy just cried as Steven got up and went over to Daddy and held out his hand, \"Sir?\" Daddy stood up with tears fallin' off his leather-like face and hugged Steven to him \u2013 I went to my men and hugged them. Our Christmas giving had been accepted. \n\nWe talked until Daddy asked, \"Are we gonna eat child or we gonna talk ourselves to death?\"\n\nSteven carved the turkey and we all pitched in and filled the table to groaning with cornbread and sausage dressing, giblet gravy, cranberry sauce and sweet potato casserole with marshmallows on top. Momma said grace and thanked God that he sent someone to love their baby that he was the best gift they'd ever had. \n\nSteven tried to mend fences with his brothers \u2013 they wouldn't talk to him. They would continue to create problems in his life and that was wrong.\n\nWe had Evie over for 'turkey leftovers' and she was hysterical \u2013 regaling us with stories of her love conquests and finally revealed that she was after her version of Steven \u2013 a burly, white stevedore whom she met at the Athens restaurant down near the ship channel. Steven and I were in shock. He just shook his head, \"Evie, Evie, Evie you are something else again woman,\" he smiled and she cackled.\n\nWe had one event before Christmas that was mandatory for the ROTC unit and its members - The Annual Christmas Ball. Steven didn't assume I would go \u2013 he asked me to go. He was so polite, \"Lissia, would you go with me to the Annual Christmas Ball for the unit? I want you on my arm as my fianc\u00e9 \u2013 the love of my life.\"\n\nI told him, \"Of course I'll go with you. You didn't have to ask me you could have just said we're going...\"\n\nHe turned and looked at me with a hurt expression in his eyes, \"No I couldn't do that to you. I love you too much to order you around. We're going to spend the rest of our life together baby. There can never be an assumption about us \u2013 ever. I love you. It will always be my honor to be seen in public with you wherever we are.\"\n\nHis words just tore me up. I didn't know what to say, \"Is it formal?\"\n\n\"Yes. Do you have a dress?\"\n\nI smiled, \"I have several it depends on how much of me you want me to show off,\" I winked at him.\n\n\"Lissia when you walk into a room everyone looks your way \u2013 you're sexy...you wear what you like the best and I'll be proud of you,\" we kissed and that started our lovemaking for the night. Our passion was so beautiful \u2013 the tempo and rhythm was second nature to us \u2013 we loved each other so much that we held each other into the night and woke in one another's arms...my bed would be very empty in a few months and not because of our sexual prowess or needs but because waking up with your love is far more desirous than anything you can imagine.\n\nThe night of the ball Steven picked me up wearing his cutaway dress blues. His commander promoted him to his unit's executive officer and he wore his rank well. He brought me cymbidium orchids in a wrist corsage. I wore my red gown that clung and a white fox stole. Steven was dazzled by my appearance and I'm glad for I asked him, \"Is this okay with you?'\n\n\"Lissia you are stunning...you look like a celebrity or royalty dressed like this,\" he kissed me. \n\nOur entrance to the ball was through the receiving line where LTC Calwell greeted us with his wife, \"Dr. Wright and Cadet Major Edwards how nice that you've joined us. Dr. Wright may I say that you are stunning. This is my wife Clarice, sweetheart this is Dr. Wright and Cadet Major Edwards.\"\n\nWe ladies took one another's hands and Mrs. Calwell told me how beautiful I was and I graciously accepted her compliment. We moved through the line and we had to stand at the end of the line behind Cadet Colonel Ciricci, the unit's cadet commander and his date as the unit's officers. Richard and Maria Elena came through and were thrilled to see us. Since I was wearing gloves Maria Elena couldn't see my ring. After all the Cadets and their dates arrived we joined Richard and Maria Elena \u2013 it seems Steven had already told Richard about the ring and Maria was begging to see it. We were giddy together. The night was lovely \u2013 we did get quite a few stares but with Steven's cadet rank they were at great risk in their assignments for being obnoxiously bigoted so he carefully listened to what was being said. His hand was always on my back \u2013 he never left my side. I had never been to such an amazing event before. There were several black ROTC cadets with their dates and I think they stared the hardest at us. A few of the young black women spoke to me in the ladies room wondering how I could date a white man \u2013 I showed them my ring, \"We're engaged to be married,\" and that shocked them into complete surprise.\n\nOne young woman, Janet Pullen, was there with a date but really wanted to be there with another cadet that Steven knew very well. She cried when she saw my ring and asked me if she could hug me. She confessed that she was scared to be in love with man she really loved but that we had given her hope. Our fairy tale night ended as blissfully as it began. We had danced and enjoyed our evening like no other.\n\n**************\n\nSteven continues the story....\n\nThe New Year flew by as school was quickly coming to a close \u2013 I had a semester left. Mom was getting adjusted to Dad not being there \u2013 I hadn't made the adjustment yet but with Lissia's loving attention it was getting better. We still couldn't get married but we were getting closer. Lissia's sabbatical was going very well. She had framed in her first book and was writing all the background for it while we shared the office. She is brilliant and beautiful and my love. Her closeness to me during the time of my Dad's death changed my life forever. I would love her for the rest of my life and never want another woman. It was strange for me to feel that way I was young and my friends all had multiple girl friends \u2013 in fact they changed girlfriends like they changed socks. I wanted Lissia.\n\nEach Cadet had to be reviewed by LTC Calwell. I went to mine not knowing what to expect. I reported in to him wearing my Class A or dress green uniform and saluted him, Cadet Major Edwards reporting as ordered sir!\"\n\nHe returned my salute, \"Have a seat Steven. I want this conversation to be brief. Your grades put you number one in our unit academically which means you've been recommended for the National Honor Society, Scabbard and Blade \u2013 your devotion to your academic, athletic and military responsibilities are cases in point to your character and integrity. Your Cadet Efficiency Review (CER) is a 100. With one semester left it is very likely that you'll be the Distinguished Military Graduate. It is because of your principled leadership, personal integrity, and your achievements in spite of great personal tragedy that sets you apart and as such you are being promoted to Cadet Colonel and student commander of the unit. Congratulations Steven,\" he smiled and handed me my CER and my orders for promotion to Cadet Colonel.\n\nI was shocked. I couldn't wait to tell Lissia. The colonel knew it too.\n\n\"I won't keep you, I think that there's someone waiting for you who'll be thrilled to know that her fianc\u00e9 is the new Cadet Colonel,\" he smiled and stood, shaking my hand. \n\nI saluted him, \"Thank you sir!\"\n\n\"Carry on Cadet Colonel Edwards,\" he returned my salute.\n\nI walked quickly to my car ignoring three of my classmates who spoke, \"Hi Steven!\" I took about four steps and realized it turning around.\n\n\"Hey David, Jackie!\" I called after them.\n\nThey turned around, \"We figured you were so important that you forgot your lesser peers,\" they chided me.\n\n\"I'm sorry for that please forgive me?\" I asked.\n\n\"You look like the cat that swallowed the canary,\" Jackie Ki grinned.\n\n\"Yeah I guess,\" my face flushed red.\n\n\"Okay general fess up...what is it this time...a PhD?\" David teased.\n\n\"I wish,\" I smiled, \"no I just had my annual review with LTC Calwell and it was a good one that's all. I was running to tell Mom and my girl.\"\n\nI had said too much as Jackie smirked, \"You know my sister isn't gonna like you having a girlfriend that isn't her.\"\n\n\"Who is it Steven?\" David pushed the point.\n\n\"She's at the Private university,\" I admitted though not telling all of it.\n\n\"Oh a private school chick huh Steven?\" Jackie had a wicked sense of humor that had a bite to it.\n\nI just smiled and shook hands with David and hugged Jackie, \"I've got to run y'all \u2013 this uniform is hot and I have some errands. Catch y'all on the flip side,\" I waved and burned a trail to the car.\n\nLissia was typing on her manuscript when I got to her...well our home as she reminds me routinely, \"Hey baby I'm in here,\" I heard her call to me as I came in the back door. \n\nI walked into the office with a huge smile on my face, \"Hello my love \u2013 I missed you and I love you,\" I told her as I quickly took her in my arms and kissed her. She was dressed comfortably in sweat pants and a sweatshirt in her sock feet.\n\n\"You look so handsome in your uniform,\" she cooed to me, \"I love you sweetie. So how'd it go with LTC Calwell?\"\n\nI handed her the review and the orders. She read the review and began smiling, \"So...only a 100? What else?\" she kept reading and got to the orders as she read them the reality of what had happened sank in, \"Oh Steven this is wonderful! I am so proud of you baby.\" She threw her arms around my neck and began kissing me. Of course I had no quarrel with how she chose to reward me. \n\nLissia had news of her own, \"I want to share something with you.\"\n\n\"Okay, you have my undivided attention,\" I smiled as I held her close.\n\n\"The private university has offered me a full professorship,\" she blurted it out.\n\n\"What?! Oh Lissia that is wonderful news! You see I told you how great a teacher you are...\" I was grinning like a horse eating briars.\n\n\"Not so fast...I'm their first ever black faculty even if I'm on sabbatical,\" she confessed.\n\n\"What does that mean though? You're still an associate professor at the University and this is the next logical step...\"\n\n\"Yes but it's very fast,\" she tried to counter.\n\n\"Okay let's look at this logically. You finished high school at sixteen went to Spelman and finished a double major in three years with a 4.0; you studied for a dual Masters in Science at Brown and were finished in two years; and completed your PhD at Harvard in four years. You were a twenty-three year old PhD. Is that because you're black? I don't think so \u2013 the high school and undergrad schools were black schools right?\" I pushed her hard.",
        "She tightened her lips and grudgingly gave in, \"Yes...\"\n\n\"Look at me Phylissia Carole Wright, the love of my life, soon to be my wife,\" I urged her and she slowly raised her face to mine revealing the tears that our discussion prompted. I wiped her tears and held her in my arms, \"Oh my sweet, brilliant, beautiful wife. I love you so. You astonish me with your brilliance and intellect so why would you denigrate the wonder of you \u2013 God made you this brilliant \u2013 are you kidding me? I hope you'll take their offer. I see how hard you work and how much of you that goes into your teaching...no baby you might get away with that 'I got this cause I'm black thing' with someone else but not with me. I know how brilliant you are and don't try to tell me I'm biased \u2013 I know I am about you and us but this is about your intellect and abilities and there's no bias in me about that - you're the best of the best.\" Lissia realized she wouldn't win this argument and began holding me close and when we're like this we end up in bed. We spent the remainder of the morning in bed sharing our love. She had loved me through a very ominous time in my life and never let go of me \u2013 her loving touch brought calm and balm to my savaged heart. She says that we reclaimed one another \u2013 it's the one thing that we'll agree to disagree on. \n\nAfter a long while we showered and called Mom telling her that we were coming to pick her up for lupper (lunch/supper) that we had some news to share. Mom was excited to see us, \"I'm glad you called me I got home late and wanted some lunch but looked at the clock and thought, 'rats I'll ruin supper'.\" She hugged and kissed us. She and Lissia chatted while I changed clothes and hung up my uniform. I came out and collected my ladies and we headed to Harwell's Barbecue.\n\nThe Harwells were glad to see us and just started bringing food. While we were eating I told her about the promotion and the CER, \"I've been promoted to Cadent Unit Commander Mom and got a 100 on the CER.\"\n\nShe patted my hand, \"Your Daddy would be proud of you like Phylissia and I are \u2013 I love you two very much,\" she started crying a little, \"I'm gonna miss you when you go off to the Army Steven \u2013 Phylissia and I will be pretty lonely but we'll make do won't we baby?\" Lissia and Mom hugged and cried a little bit while I felt pretty uncomfortable like I was running out on them \u2013 they eventually turned their attention back on me.\n\nLissia smiled and stroked my hand with one hand and held it with the other, \"Steven is number one in his Unit and should be the Distinguished Military Graduate and is a member of the Nation Military Honor Society Scabbard and Blade,\" she smiled and kissed me.\n\nMom got very emotional and began tearing up again. We were all thinking about Dad. I could feel him nearby \u2013 I know that sounds strange but there are times when you can almost feel the presence of that lost person in your life and this was one of those times. \"Steven I know how proud your Daddy was of you and his buttons would be popping off his shirt right now, me too son, me too.\"\n\nWhile were enjoying our meal and our time together, I purposely asked Lissia how her sabbatical was going and she talked animatedly about the experience. It had been going so well that the Private university offered her a position as a professor. She started laughing about that, \"I know why they offered me a full professorship...I'm black and they don't have any black professors...so they asked me.\"\n\nMom looked shocked and patted her hand, \"Darlin' it may be the reason for someone but you don't know how gifted a teacher you are. Steven has told us about your work and how he admires your ability to explain complicated topics as though they're the simplest things in the world. I don't believe it's because you're black I believe they see the gifts that you have in teaching.\"\n\nI massaged Lissia's neck, \"Sweetheart you don't see what I see and what Mom sees. We've watched you in extremely difficult situations hold your own and not back down from what you know to be the truth. You dealt with your parents, your pastor, Evie, with several arrogant and ill-intentioned boys and taught them a lesson all about how to love freely. It's your deep well of empathy and your capacity to rise above the most brutal of circumstances to be this wonderfully brilliant teacher and scientist of societal behavior. Your beauty and grace are the whipped cream and cherry.\"\n\nLissia had tears in her eyes, \"you two are biased...\" she wept and I held her close to me. We talked for a while with the Harwells who were equally smitten by Lissia and her grace and polish. It was as though she was blooming right before my eyes. I love her so much. \n\nThe days were growing short for us as the school year was ending and once again I would be traveling to Ft. Benning for further training as the intensity would be ramping up. Lissia could feel the stress for both of us and how it would impact her. As we grew in our love she would become integral in our family life and with Mom. They were getting so very close to each other. Mom had always wanted a daughter and she got one in Lissia. They talked on the phone when I wasn't there. I loved the relationships that were growing because of love not the lust that called us from our corners of the separate worlds into one time and one moment for one another. Now we had become what we so desperately sought \u2013 family. There was a void that Dad filled and it was his impetus that pushed the truth of how we were to feel about one another without regard to our race. I regret that I didn't say it to him...Lissia saw that in Dad and loved his heart openly. She missed that in her own father and that was something I saw in their relationship \u2013 the distance that she tried to recover with limited success unfortunately for Cyrus.\n\n*******************\n\nWe had a few weeks together before it was time again to head to Ft. Benning again. This time the training would round out the initial infantry training for leaders which was an intensified infantry MOS (military occupational skill) that all infantryman receive coupled with leadership coursework as a continuation of the ROTC school year work. Everyone in this course was ROTC. I had a little more freedom and was afforded a Cadet Platoon Leader slot for eight-weeks. Richard Carls got a Platoon Leader slot as well which is great for two students from the same university to achieve that honor. We worked extra hard and finished in the top three and were offered the chance to add another skill set by extending four weeks to complete the Army Pathfinder Course. The training included insertions by helicopter not just the traditional parachute jumps to establish landing zones (LZs), infiltration and exfiltration routes. Of course this training kept Richard and me away from our sweethearts which was difficult for us and them. There were ten of us who attended the Pathfinder Course from our cycle of infantry training \u2013 Richard and I were the only two from Texas and when we graduated we hopped a MAC (Military Assistance Command flight) out of Warner Robins Air Force Base near Macon Georgia that took us to Ellington Air Force Base near my Mom's home. They were all waiting for us. Our uniforms now included jump wings, bloused Corcoran jump boots, the officer brass of crossed rifles for our branch assignment, our pathfinder badges and our maroon berets signifying pathfinder status. We were beginning to look the part of soldiers anyway.\n\nLissia had picked up Mom to meet me. I was so glad to be home to hold her in my arms. I was pretty lonely this time with Dad being gone and even though I got a lot of mail from Lissia and Mom I missed my dad's brief even terse notes on how to present myself militarily. Our homecoming was caught on film by some photographers from the Houston chronicle and our picture made it into the paper. Fortunately Lissia had accepted the position at the Private university so she got not heat from the University where I was studying \u2013 we didn't give them our names and no one could identify us. The caption simply read a soldier and his girl greet one another at Ellington. We drove to Mom's home where I changed into civilian clothes. We had a long conversation with Mom. She had cooked a pot roast with rice and pan gravy, lots of salad and ice tea and of course peach pie with hot coffee for dessert. After twelve weeks of Army chow I needed real food. Mom updated me on a few high school friends one had died in Nam and another was seriously wounded. Those two buddies spent a lot of time in our home growing up. \n\nLissia was beginning to sense the grave risks now. I held her left hand in mine kissing her ring, \"I won't be so na\u00efve as to tell you not to worry.\"\n\nShe was very quiet, \"Don't do that. I'm gonna worry baby \u2013 I'm so scared right now I can't get my breath.\"\n\nI slid my arm around her waist and pulled her to me, \"I know sweetheart I wish I could make your fear go away \u2013 I can't.\"\n\nShe turned to face me, \"Steven it's the time like this where my heart hurts that I can't give you a baby. I want a part of you forever and my heart hurts so badly that I can't do that for you \u2013 I feel like half a woman...\" She wept quietly with Mom and me as I held her. \n\nMom came over and put her arms around her too, \"Oh sweet child I know this is hard but you two have more than most couples \u2013 you have a very strong love for one another \u2013 you've gone beyond like to love and your futures together. Hold on to one another tightly \u2013 the world can't touch you my babies.\" \n\nLissia calmed down enough for us to help clean up the dishes and put away the leftovers. We were staying at Mom's house tonight so we made up the sleeper sofa. We didn't have to worry about Hal he had joined the Navy and was in boot camp. Georgie was at the lake with his girlfriend so we had the house to ourselves. We would still respect Dad wishes and save our sexual relationship for when we got home. It was good to hold Lissia in my arms again. The separation really makes the heart grow fonder. We whispered and kissed and held each other all night, waking in one another's arms. \n\nLissia became more and more beautiful with each passing day. Her countenance had changed. \"Lissia every time I see you, you are more beautiful and so much more relaxed,\" I stroked her cheek, brushing her hair back.\n\n\"It's you Steven.\"\n\n\"What is me?\"\n\n\"It's how you treat me and love me that has changed me inside. I'm not even remotely that person you first met almost two years ago. You never hesitated to love me to touch me to hold to be tender with me. So many white folk through the years have acted like our skin color would rub off and stain their skin. You love me so easily and so beautifully I have to wake up and pinch myself just to make sure I'm not dreaming. I wake up sometimes and just watch you sleep. I touch your face and you always pull me to you \u2013 and when we're in public you behave as though I'm the only person alive \u2013 you never hesitate...\" Her eyes were so tender. \n\n\"Sweet baby mine you are the only person alive for me. As sure as there is a God in heaven you are the only woman for me \u2013 you're the one God sent for me. We've always had a powerful sexual attraction for each other but there was from the beginning an unspoken acknowledgement at first that there was more to us than sex,\" I confessed to her.\n\nShe smiled, \"Yes \u2013 you're right about that. I can still hear me telling you that I'm black and you saying you noticed that about me \u2013 oh God Steven you just took my heart by storm \u2013 with you we've always been normal...you know...I mean this is the 1960s who thinks that black and white couples are normal other than us and maybe that sweet Janet Pullen now that she's met us. I now believe that we'll be able to marry one day soon \u2013 the Supreme Court has a case that I'm sure they're gonna rule in favor of this black woman - white man married couple from Virginia, making miscegenation laws unconstitutional. I can't wait to be your wife legally in the eyes of the state of Texas. I don't want to run away to get married and live away from home.\"\n\n\"I know baby - me too,\" my heart hurt so badly over this issue that it always felt like a heart attack I imagined would feel. I held onto her for a very long time \u2013 I couldn't get enough of her in my arms, smelling her hair, feeling her soft skin and touch of her sweet lips, her soft sighs as lay still together. I loved the way stray hairs would break loose and frame her face as though they were forest ferns adding dimensions her features in sweet and endearing mental images that would linger with me for nearly fifty years. Her long sleek neck and smooth face atop her graceful shoulders curving gently down her back and nicely rounded cheeks long, strong legs like a dark gazelle that allowed her the beauty of movement that stopped me wherever I was to watch her glide so effortlessly...she never knew how beautiful she was growing up because of an evil act...I prayed every day that she knew now. I was memorizing her in fine detail for the evitable of my future. I knew there were going to be times when she would seem so far away that I would need to remind myself that there is beauty, grace and elegance in the world waiting for us \u2013 and she was mine into eternity.\n\n****************\n\nGraduation came with great trepidation for Mom and for Lissia. They were going to pin my lieutenant's bar (actually Dad's gold bars) on my epaulets after I received my dual degrees. Under my graduation mortar board, gown and Master's hood was my uniform. There were some protesting booing when it was announced that I would commissioned a second lieutenant at the afternoon ceremony \u2013 the protests against the Vietnam War had hit our campus. I had become a target of the protestors that day as did all of my fellow ROTC graduates. The only good thing that came out of the booing was the crowd cheered louder than the protestors booed. \n\nAfter the degree awarding at the college ceremonies we retired to the gymnasium for the ROTC commissioning ceremony. I felt very conspicuous when LTC Calwell called my name and he then asked my Mom and Lissia to come forward to pin on my bars. He advised everyone there that because I had graduated at the top of our class and that I had applied for and been granted my commission as a regular Army commission rather than a reserve officer commission which carried with it a lifetime commitment to the military. He went on to explain that I had been the unit executive officer and commander, and was heading to Ft. Benning for the Infantry Officer Basic Course and then to the United State Army Ranger Training. I could feel the tears rolling down my face as I thought about Dad and how I wished he was with us. Lissia held tightly onto my hand and arm with her hands. I could feel her watching me. I was trying desperately to control my emotions but Dad wasn't here \u2013 I hadn't worked hard enough or quickly enough for him to see this take place. LTC Calwell announced that my Dad would have been proud to be here and sadly shared his passing with those gathered. The gymnasium was deathly quiet as he said, \"Steven's mother Mrs. Marsha Edwards and his beautiful fianc\u00e9 Dr. Phylissia Wright will stand in his father's stead pinning on 2nd Lieutenant Steven Michael Edwards' gold bars as a regular Army officer \u2013 the same gold bars that his father Major Peter Edwards a two-time recipient of the Distinguished Service Cross for valor, wore.\" He then asked me to raise my right hand for the administration of my oath of office and repeat after him, \"I, Steven Michael Edwards, having been appointed an officer in the Army of the United States, as indicated above in the grade of Second Lieutenant do solemnly swear that I will support and defend the Constitution of the United States against all enemies, foreign or domestic, that I will bear true faith and allegiance to the same; that I take this obligation freely, without any mental reservations or purpose of evasion; and that I will well and faithfully discharge the duties of the office upon which I am about to enter; So help me God.\" I hugged and kissed Mom as she cried and then Lissia and I hugged and kissed with our lover's kiss for the whole world around us to see. I didn't realize that we had received a standing ovation. I think it was because we had broken through a bigotry barrier and not anything I had accomplished. \n\nWe took our seats and waited as each graduating senior was commissioned. Richard graduated as DMG also and chose to receive a regular Army commission because of his academic and military success. He and I would be traveling to Ft. Benning together again \u2013 he would become my Ranger Buddy. He and Maria Elena were married by now and their lives had started together in earnest. We were thrilled for them. After the ceremony Richard, Elena, his parents, her parents, Mom, Lissia and I were standing talking when one of my ROTC fellow graduates Wesley Reissen, also a DMG, joined us with his fianc\u00e9, a beautiful young black woman whom Lissia had already met, Janet Pullen, who was now a seminary student at Union Theological Seminary in New York and Wesley was heading to Ft. Benning with us.\n\nJanet came to Lissia and hugged her, \"You gave me the courage to say yes to Wesley. Thank you both for being so brave for us.\" \n\nMaria Elena spoke up, \"That goes double for Richard and me. If you two hadn't been so courageous and unyielding in the face of all this bigotry we would not have had the courage to go forward.\" There wasn't a dry eye among us. \n\nLTC Calwell joined us, \"Well this is a gathering of eagles if I've ever seen them. Steven I know your Dad was watching you receive these accolades. Very few people realize how hard you have worked just like Richard and Wesley. All of the stress of studies for a bachelor/master's degree program, ROTC and being so bold as to love the woman of your dreams \u2013 we all admire the courage that you and the very accomplished Dr. Wright have displayed for us. May God bless you. Now go enjoy your thirty days before you report to your assignments - all of you \u2013 I have some incoming freshmen to break in...\" he smiled and walked away. \n\nWe all said our goodbyes for a while. Lissia, Maria Elena and Janet would form a tight circle of Army wives and fianc\u00e9s. We hugged, kissed and shook hands. Richard, Wesley and I would ride to Benning in my car so we'd see each other soon enough. Lissia and I were going to Mom's house for a graduation barbecue and then we would go home to spend our last thirty days together for a while. We didn't know what was waiting for us. Lissia's parents didn't come even though we invited them \u2013 she was understandably disappointed \u2013 but we were going to go see them anyway.\n\nWe made the rounds of friends, professors and family. The trip to Lissia's parents' home was a tense on yet again. This time I met all of her family. There was no room in her family for a white guy or for the woman who'd marry a white guy. Her parents got swayed by their Marcus Garvey-influenced preacher. We had planned to spend a few days there but left after a few hours. Our circle of friends had shrunk to the faithful. We went to visit my pastor and his wife; high school teachers and then we went home to our home and planned our wedding. The Supreme Court, on June 12, 1967 dismantled miscegenation laws in the landmark case of Loving v. State of Virginia and we were ecstatic. There were a few barriers yet to overcome \u2013 the fourteen day waiting period for blood tests to get a license and the $25 marriage license fee which we had. We decided that we'd get married after I finished Ft. Benning and before my next assignment. We went to Pino's to celebrate and joined Dr. Hunter and his wife Estelle. It was a joyous evening with dear friends. Pino sat with us for a while and chatted, we ate and talked, ate and talked. It was late when we left for home.",
        "We stayed in bed off and on for the next two days making love and being lazy. We were both so excited that our wedding day was just over the horizon or so we thought. Too quickly the time came for us to pack our bags to head to Ft. Benning. We spent a long time saying goodbye and eventually with the car packed we drove straight through to Columbus Georgia stopping for gas, food, restroom breaks and to changes drivers. We reported in to our commander for IOBC (Infantry Officer Basic Course) Class 67-8 at The School Brigade, 1st Student Battalion. We lived in the Bachelor Officer's Quarters (BOQ) and had the pleasure of sleeping in until 0600, eating in the officer's mess and driving to our unit for training. I warned the guys we needed to be running and staying in shape \u2013 fortunately some other guys there who'd received direct commissions and had been through Ranger Training confirmed my urging. So we devoted our off hours to staying in top shape while our classmates didn't work as hard. We had plenty of time to call home and talk with our sweeties, preparing them for the inevitable of Ranger School where we would have little contact with our families.\n\nWe finished IOBC and went right to Ranger Training and it started with Ranger Indoctrination and Preparation (RIP) School meant to weed out the class to a manageable size from 180 to around 90. Over the next seven weeks of days and seven weeks of nights we would run ten miles every morning, live on little food, water and sleep. Run with sixty pound ruck sacks, carry our Ranger Buddy if he stopped or be carried if we stopped. It was brutal and most of us lost all of the fat on our bodies. We were exhausted - looking like survivors of Dachau. The words of the Ranger Creed were burned into our brains especially the last line, \"Readily will I display the intestinal fortitude required to fight on to the Ranger objective and complete the mission though I be the lone survivor. Rangers lead the way!\" It was chilling to realize that we may find ourselves in that circumstance. Vietnam was raging now and we were going there \u2013 no question. We got our Ranger Tabs and went to the Officer's Club to have a steak \u2013 Richard Carls, Wesley Reissen, Mike Jacobs (Wesley's Ranger Buddy) and me. It was a somber celebration if not modest. None of us had the stomach for a wild party we just wanted to get our orders and go home. Richard and I got orders for Vietnam. Mike and Wesley were going to Vietnamese Language School and then to Ft. Bragg for Special Forces Training. Richard, Wesley and I drove back home for our leaves and for me a wedding.\n\nI was home a week with Lissia and Mom when I got a devastating telephone call \u2013 my leave had been cancelled and was ordered to report to Travis Air Force Base immediately. The war had taken a desperate turn and more officers in our skills sets were needed \u2013 huge enemy build ups cut a lot of leaves short. Lissia and I had little time to get married so we postponed the wedding. It was heartbreaking. Mom and Lissia were terrified and I was angry \u2013 after all that we'd been through and now this. But I would do what I was ordered to do. Our goodbye was so hard \u2013 neither of us knew if we'd see each other ever again. We just didn't know how real that would be. \n\nWe were at Travis two days before we were put on a civilian aircraft headed for Bien Hoa, South Vietnam. We stopped on Oahu and later on Wake Island to refuel. When we landed in Bien Hoa we were hustled through the lines of guys with their thousand yard stares laughing at the 'cherries' \u2013 us. I wouldn't see Richard for a very long time he was sent right away to Cu Chi with the Wolfhounds to fight the tunnel wars and I was sent to Phu Bai to the 101st Airborne, 1st Brigade, to join a Long Range Reconnaissance Company (LRRP). We'd had Thanksgiving at home but Christmas would be spent here. I filled out all my paperwork naming Lissia as beneficiary for my SGLI and Soldier's Overseas Deposit savings account. I made it to the company area and immediately got pulled into a platoon assignment as a rifle platoon leader of a LRRP platoon that was filled with two and three tour airborne Rangers who didn't need a brand new 2nd Lieutenant to deal with. They'd lost the three previous ones KIA (killed in action). They stayed away from me as I got to know Juan Gomez the 25 year old platoon sergeant, sergeant first class \u2013 a real warrior. He would teach me how to be a good officer and Ranger. We ran a lot of patrols, had a lot of fights with larger and larger unit. We called in a lot of heavy airstrikes. We were seeing new rifles, gear and uniforms on the dead NVA (North Vietnamese Army soldiers). There was a huge offensive coming from all of our snooping and following replacement columns listening to their communications - it was on the way and we couldn't stop it with our company it would take four months to turn this offensive around when it happened. We warned division and no one seemed to be listening except the Marines at Khe Sanh. On January 30, 1968 all of South Vietnam exploded in battle \u2013 the New Year or Tet was supposed to be a cease fire \u2013 no such luck. We operated out of Camp Evans and ran patrols daily standing down occasionally to resupply and rearm. By March we had broken the back of the NVA offensive but Walter Cronkite declared the U.S. had just lost the war and the political tide turned against our involvement and the U.S. soldier \u2013 we were now murderers and baby killers.\n\nThen on April 4, 1968 a real horror occurred Dr. Martin Luther King was assassinated in Memphis. I immediately called Lissia via MARS (Military Amateur Radio Station). She was terrified. Her life had been threatened because of our engagement. I told her to lock up her home and head to the country. I was scared for her life. I knew the pain of war losing 12 men wounded or killed in action \u2013 i didn't want to find out that Lissia had been injured or worse killed because of the riots that we both knew were coming. Dr. King's assassin was white. The country exploded, Vietnam was an armed camp with black and white soldiers menacing one another. I was made the race relations officer for the brigade since my fianc\u00e9 was black as though black soldiers I didn't know would trust a white officer. On April 19th the situation worsened \u2013 my platoon got into a fierce fight with withdrawing NVA. I was hit badly in the chest, abdomen and thigh. I woke up three days later on the USHS Repose. What I didn't know was that a Stephen Edwards was killed the same day in I Corps that I was badly wounded. The notifications got crossed up \u2013 Mom and eventually Lissia were told that I had been killed. \n\nI was in the hospital at Camp Zama Japan when I found out that Mom had suffered a stroke shortly after the Army visited her and told her I was killed. She never regained consciousness. My brothers, both of whom were in the military went home for her funeral \u2013 I couldn't be moved. I didn't know where Lissia was and couldn't get in touch with her. Phone call after phone call with no answers. I had no contact from my brothers even though they found out I was alive. I was utterly alone now. Lissia had gone to Maine to stay for a while \u2013 but I didn't know it. Evie was up there teaching at a small college. Our long winter of despair had begun. After two months at Camp Zama I went home for convalescence leave but I had nowhere to go. Mom's house was locked up tight. I had keys so I opened the house and got my car out of the garage and headed to Galveston. I stayed at the Flagship Hotel for two weeks. When I got back to Mom's house I went to my safe deposit box and opened it. Inside was Lissia's engagement ring, my savings book and our personal effects that had value. I closed it out. Packed the car and headed to Ft. Polk in Shreveport where I would take command of an AIT (advanced individual training) company of infantry destined soldiers. My down time was spent trying to find Lissia. What I didn't know was that she had decided after a year to go to Vienna Austria to obtain a PhD in psychology and counseling. \n\nI returned to Vietnam in 1969 as a battalion executive officer with the 101st. After that tour I returned to the states to go back to school for a PhD in statistical methods and forecasting at Virginia University in Blacksburg Virginia. While there I worked with the ROTC unit and its corps of cadets. After I finished my PhD I taught three years at West Point and then went to the Pentagon to work in planning and operations \u2013 my wounds were severe enough to keep me out of a line unit again. I would spend thirty two years in the Army retiring as an O-6 or full colonel. I never married \u2013 I had given up on ever finding Lissia \u2013 I wasn't interested in anyone else. The internet came along and in 1998 I searched her name and found her in Maine. I didn't know what to do with that information so for two years I was in a deep sadness at all the lost years and finally my dog and I drove to Maine to fish. I found her office where she was serving as a psychologist and called her from my hotel room in Bar Harbor. We began all over again and it took twelve years before we spent any amount of time together. We pieced our story together and it was stunning when we looked at all that had happened. Lissia will finish our story for you - it still pains my heart to share this.\n\nTHE CONCLUSION \u2013 LISSIA\n\nWhen the war got worse it ripped Steven and me apart. Our wedding got postponed in the midst of great joy about our finally being permitted to marry in Texas. The hurt in Steven's heart was so great that it cut through me like an axe. I got real scared for him going into battle. I knew Steven, I knew he'd be in the fight so fast \u2013 I was afraid he'd be worrying about me all the time \u2013 it was a struggle when we were together that he was so protective of me I was scared now for his safety that he'd be thinking about me and get himself killed. That war did get ugly in 1968 and right at the end of the enemy attacks Dr. Martin Luther King Jr. was shot to death by a white guy in Memphis Tennessee. About three in the morning on April 6th I got a strange telephone calls from an amateur radio guy who said he had a collect call from a Captain Edwards would I accept it. Of course I would \u2013 Steven was calling from Vietnam worried about me. It was hard to talk between my crying and his anxiety plus having to say 'over' every time I finished saying something. He had a right to be worried for my safety. A lot of folk knew we were engaged \u2013 he told me in no uncertain terms to 'go home' to the farm. Lock up my house tight \u2013 don't wear my engagement ring \u2013 hide pictures of us \u2013 lie to my family if I had to \u2013 to let them know we had 'broken up' \u2013 I didn't argue with a guy used to jungle fighting \u2013 I did it. Later our home got vandalized, shot full of holes by angry folk. Momma and Daddy let me stay and truly believed that we had broken up \u2013 we hadn't but Steven couldn't take a chance. I put the engagement ring in Steven's safe deposit box along with his personal records and valuable documents and items. At one point Daddy wanted to kill Steven \u2013 he and my brothers and uncles and cousins were laying for him \u2013 even two cousins in Vietnam who swore to find him and kill him. Then a strange thing happened, I got word from Dr. Hunter that Steven had been killed. Since Steven had changed the casualty notifications to protect me I knew nothing about his condition. He wasn't dead though I didn't know it. He had been gravely wounded and was in the hospital somewhere. I called his Momma immediately. A neighbor answered the phone and told me that Steven was dead and his Momma had suffered a stroke and was in a coma. She never came out of the coma. My world was shattered into tiny pieces. I fell into a deep depression and hurt. After a few months I went on leave from the Private university, called Evie in Maine and left Texas to stay with her and heal.\n\nI would eventually go to Austria and study psychology earning a PhD in industrial psychology and counseling, spending ten more years in Europe honing my skills. I eventually heard from Evie that there had been a mistake that Steven had not been killed. I can't tell you how bad my heart hurt. I buried myself in my work and had no social life. It turns out that Steven and I reacted in the very same ways \u2013 work became our solace. I wrote letters to him every day that never got mailed \u2013 he did the same thing to me. His poor heart was so broken \u2013 the death of his Mom, the estrangement by his brothers that has lingered, my familial estrangement and brokenness. We ran in parallel tracks \u2013 we were so much akin to one another. \n\nI eventually moved to Maine and opened an industrial psychology practice which involved shipbuilders and rail workers. I took long walks on the beaches of Maine and spent time reading and writing until one day I got a telephone call that turned my sorrow into a bittersweet joy - Steven found me \u2013 he was in Bar Harbor to 'fish' but the truth is, as he told me, that he had come to find me after thirty years of searching. The seventeen years I spent in Europe really put a lot of road blocks up for Steven's searches for me. But we started over. We visited for two days in Bar Harbor \u2013 that time was spent talking and crying. Our hearts were so wounded it took a long time to heal \u2013 we were both so scared and Steven had so much guilt to deal with. He suffered from survivor's guilt, a subset of post traumatic stress disorder; guilt over not being able to keep me safe; and a terrible sense of guilt over the death of his beloved mother.\n\n*******************\n\nEpilogue\n\nMany of you have read our story faithfully and we thank you for being patient. We got married on July 12, 2012. It took years to heal but I have my Steven for however long this shall be. We'll answer your questions about us \u2013 but we won't write anymore to this story. We're finally together. We know that these stories are generally focused on 'raw sex' well we've been there too but inside of our physical relationship is the soul of our being \u2013 our deep and abiding love for one another. We share so much together \u2013 our love of each other; education and continuous learning; our love of the outdoors and being healthy; our political and economic views and our faith. Thank you for being interested in us. Drop us an email \u2013 we'd love to hear from you. "
    ],
    "authorname": "earlkrementz",
    "tags": [
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-professor-ch-15"
}