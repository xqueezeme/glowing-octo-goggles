{
    "title": "I Will Love You Forever Pt. 2 Ch. 13",
    "pages": [
        "Peter's shoulder hurt like hell, but he refused to stay in the hospital.\n\n\"I'm fine and I want to be there when that bastard is interrogated. I have a few questions for him myself.\"\n\n\"Pete you need to take it easy. You can talk to him tomorrow.\" Trevor said.\n\n\"I'm going... where are my clothes? Peter asked looking around the small cubicle.\n\nNo amount of talking could convince him to stay. His mind was on Andrew Kelly. He wanted to know why he shot him and where the clip to the gun was. He also wanted to know who else Andrew planned to kill. His feeling was that men like Andrew Kelley didn't stop with one kill.\n\nTrevor helped him put on his bloodied shirt and draped his jacket over his shoulders. He agreed with the doctors; Peter needed to go home. When he suggested it again, Peter gave him the look that told him back off.\n\n\"Let's go... I want to be there by the time he's in the interrogation room.\"\n\n********\n\nAndrew looked around the dingy cell with disgust and anger. The anger was at himself and at Kenji. In his mind, if Kenji hadn't been in his class, if Kenji hadn't gotten into the summer program, if he hadn't done this or hadn't done that; he wouldn't be sitting in jail. The anger at himself was because of his stupidity. \n\nIf he had taken the time to think about it, he would have realized that Peter was too good to be true. His background and viewpoints regarding the Japanese was too convenient. And he had fallen for it in his desire to have someone that he could rely on as his second in command. What were the chances that his choice would turn out to be a federal agent? He felt a little like Julius Caesar must have felt at the betrayal by Brutus.\n\nWhat he didn't get was why Kenji warranted the protection of the federal government. After a few minutes he came to the conclusion that it was personal. Someone with clout was watching out for him and he wondered who it was.\n\nIn retrospect Andrew realized that he had made one fatal error. He didn't learn everything that he should have learned about his enemy. If he had, he would have done things differently; but he had let his anger and hatred lead him. It was a hard lesson learned and one that he would never forget.\n\nHe had to start learning to control his anger if he wanted to survive prison. He knew that was where he was going; it was a given. He also realized that he could be sentenced to death. That was a sobering thought. He could die while Kenji Takeda and his bitch would live happily ever after along with the Jew. He wished that he had used the woman more than he had. That was another thing that he had to change. From now on, anyone was game. Their ages and sex no longer mattered.\n\nThere was something wrong with the fact that the melting pot was free and probably celebrating his capture he thought as he stood up and walked around the small cell. He did wonder about his parents; his mother especially. Both of them had been so proud and now so disappointed. He had to admit that disappointing them was the only thing that he felt guilty about. \n\n\"I'm sorry mom and dad.\" He murmured.\n\nThe clinking of keys alerted him that someone was coming.\n\n\"Let's go!\" A gruff voice said. \"Turn around and put your hands behind your back.\"\n\nAndrew hesitated but complied.\n\n\"Where are you taking me?\" Andrew asked as he was led from the cell.\n\n\"You're going to the interrogation room; some folks want to talk to you.\"\n\nAndrew took a quick glance around looking for an exit.\n\n\"Don't think about it kid.\" The police officer said tightening his grip on Andrew's arm. \"You'd never make it outside and even if you did; where would you go?\"\n\nAndrew relaxed. The cop was right. He had just learned another lesson. When he got out of prison, if he got out of prison; he would surround himself with people that he knew he could trust. That trust wouldn't be easily given and would have to be earned. He also realized another error; he had made no contingency plans.\n\nThe cop took Andrew into a small interrogation room and left him there still handcuffed.\n\n******\n\nHarlan Kelly sat in another interrogation room with a tepid cup of coffee sitting in front of him. After he got to the station and confessed to Milton Vaughn's murder, he had been taken to the room and left sitting alone with the cup of coffee.\n\nHe had been sitting in the room for almost forty-five minutes before someone came in.\n\n\"Harlan? What are you doing here?\" Peter asked when he walked in.\n\n\"Peter? Are you alright?\" Harlan asked.\n\n\"I'm fine; but what's this I hear about you confessing to killing Milton Vaughn?\" Peter asked.\n\n\"I did it.\" Harlan replied in a firm voice.\n\nPeter gave Harlan a long hard look and sat down across the table from him.\n\n\"Tell me why you killed him.\" \n\n\"I...I don't know... he was giving Andrew a hard time....\"\n\n\"Where did you shoot him?\" Peter interrupted.\n\n\"I met him in the parking lot of the vacant grocery store.\" Harlan replied.\n\n\"No, I mean where did you aim your gun? Where was the shot that killed him?\"\n\n\"I shot him in the face.\" Harlan replied.\n\n\"How many shots did it take?\"\n\n\"One, but I shot him a second time to make sure.\" Harlan replied.\n\n\"Before that night, had you ever met Milton Vaughn before?\" Peter asked.\n\n\"N...No.\"\n\n\"Then how did you know who he was or what he looked like?\" Peter pressed.\n\n\"Andrew told me... look, I'm confessing and you or somebody has to take my statement!\" Harlan exclaimed.\n\nPeter gave Harlan a sympathetic look. He knew and understood what the man was trying to do but he couldn't allow it.\n\n\"Harlan, you're not helping Andrew by confessing to a crime that you didn't commit.\"\n\n\"I did it.\" Harlan repeated.\n\n\"No you didn't.\" Peter replied. \"There was only one shot fired. That alone tells me that you didn't do it. Let's not forget that I heard you asking Andrew where the clip of the gun was and what he did. I repeat; you're not helping him.\"\n\n\"This is my fault.\" Harlan said softly.\n\n\"How do you figure?\" Peter asked. \"Andrew made his own choices.\"\n\n\"I knew that he was into something. I thought that I even knew what it was... but I didn't say anything. I didn't feel that I had room to talk. Andy was raised hearing me talk about other races in bad ways. I didn't think anything about it... they were just words.\"\n\n\"Harlan, Andrew would have killed anyway. I'm not saying that the way that you taught him to believe wasn't a factor, but Harlan; Andrew has a problem and you're going to prison for him isn't going to help him.\"\n\n\"And prison will?\" Harlan retorted. \"He's my son! He won't survive in prison!\"\n\n\"I can't pretend to understand how you must feel.\" Peter said sympathetically. \"I don't have children. I understand that you want to help and protect him, but it's out of your hands. You need to go home and be with your wife; she needs you.\"\n\n\"You won't let me confess?\" Harlan asked.\n\n\"No.\" Peter replied.\n\n\"Can I see him? I want to be able to tell his mother that's he's alright.\"\n\nPeter didn't answer for several seconds.\n\n\"It's not normally allowed; but let me see what I can do.\"\n\n\"I'd appreciate that.\" Harlan said softly.\n\nWhen he was alone, Harlan let the first of many tears fall.\n\n*******\n\n\"Are you sure it's over?\" Patricia asked as she dried off.\n\n\"That is what Nick says.\" Kenji replied. \"He will call back later with more details.\"\n\n\"We can go home!\" Patricia exclaimed. \"I can go back to school!\"\n\n\"Yes Kirei, we can do both of those things.\" Kenji said quietly.\n\nPatricia looked at him surprised that he wasn't more excited.\n\n\"Kenji? What's wrong?\"\n\n\"I am glad that it's over, but Kirei; it is another life wasted.\"\n\nPatricia walked over to him and hugged him. She understood what he was saying, but she was glad that Andrew was in jail and hoped that he stayed there a good long time.\n\n\"Kenji I'm sorry, but he chose to do what he did. I understand what you're saying; but I don't feel sorry for him. If I feel sorry for anyone; it's his parents.\"\n\n\"I know.\" Kenji said returning the hug. \"But it is still a waste of life and that saddens me.\"\n\nPatricia didn't reply. She didn't feel quite the same way Kenji did. While she agreed that Andrew had wasted his life, she also believed that one reaped what they sowed. He deserved to be where he was and if he killed Milt Vaughn, then he deserved whatever happened to him. But then Kenji's father had been in on the plan to kill her and she had prayed for him and she eventually forgave him. She wondered what the difference was and finally understood why Kenji had been so long in forgiving his father. \n\n\"I'm just glad it's over.\" She said kissing his chest.\n\n\"As am I.\" Kenji replied.\n\n*********\n\nErnie looked over his notes and finally gave up. He was much too nervous to concentrate. Andrew's thinly veiled threat kept coming back to him. He had no doubt that Andrew meant it and had no issues with admitting that he was scared. He was seriously rethinking whether he should be meeting with Kenji and Ernie the next day. It would be like putting an even bigger bull's eye on his back.\n\nHe examined his options. He could take his chances and not get the help which would mean failing the class or he could take his chances and meet with Kenji and Joel. The first option would save his life, but the second option would save his academic life.\n\n\"Damn.\" He muttered as he continued his internal debate. He asked himself what would be the worst possible thing that could happen if he failed the class. \"I wouldn't graduate.\" He murmured. Then there was the money. Things were already tight and if he had to repeat a class; he didn't know where the money would come from.\n\nHe thought about talking to his parents; but he already knew what they would say. They would tell him to drop out of the class and retake it. They would tell him not to worry about the money and that it would come from somewhere.\n\nErnie wasn't much of a gambler. He never even played cards for match sticks and now he was gambling for his physical and academic life. The night passed slowly as he continued his debate about whether to keep his appointment with Kenji and Joel.\n\n*******\n\nAndrew sat at the small table and looked around. If possible, the interrogation room was dingier than his cell. He moved his hands testing strength of the chair that he was handcuffed to. It was useless; he couldn't break free. He looked up when he heard someone at the door.\n\n\"Andrew.\" Peter said when he walked in.\n\nAndrew looked at him but didn't respond. Instead he tried to force tears to come to his eyes. He didn't think that it would work; but he had to try.\n\n\"Save it.\" Peter said. \"It won't work and spare me the I didn't know what I was doing spiel. It won't work.\"\n\nAndrew smiled and shrugged his shoulders.\n\n\"I didn't think that it would, but I had to try. Tell me Pete, how does it feel to turn on one of your kind?\"\n\n\"You're not one of my kind.\" Peter replied. \"There's someone here to see you.\"\n\n\"Who is it?\" Andrew asked.\n\n\"You're father.\" Peter replied. \"He came to confess to the murder of Milton Vaughn.\"\n\n\"Are you here to release me?\" Andrew asked.\n\n\"Why would I want to do that?\" Peter asked. \"There's still the attempted murder charge and you did shoot a federal agent.\"\n\n\"I didn't shoot you; my father did.\" Andrew said.\n\nPeter was stunned. The sick bastard was really going to let his father take the blame for him.\n\n\"You would have no problems with your father going to prison for you?\" Peter asked.\n\n\"He said that he did it didn't he?\" Andrew retorted.\n\n\"But that doesn't mean that he did it.\" Peter replied as he sat at the table across from Andrew.\n\n\"But you don't know that he didn't.\" Andrew replied.\n\n\"As a matter of fact I do.\" Peter replied. \"First, he didn't know how many shots were fired. Second, he was surprised that the clip of the gun was missing and he wouldn't have been stupid enough to keep the gun. That's something that an idiot would do. Third, I heard him ask you where the clip was and then what you did. It was you who shot me, your father didn't know about the second gun.\n\nWhat amazes me is that your parents clearly love you. Your father was willing to go to prison for the rest of his life for you and you're coward enough to let him.\"\n\n\"I'm no coward!\" Andrew protested.\n\n\"No?\" Peter asked. \"Then tell me this; why would you let your father go to prison for you? If you're so damned proud of what you believe; then why keep it secret? Why not walk up to Kenji and say, I hate your guts and I want you dead? Why the games? To me everything that you did including hiding in your little group tells me that you're a coward.\"\n\nAndrew's face burned. He had been called a coward before and it angered him now as much as it had angered it then. Then he realized something, he didn't have to carry the burden of guilt alone. After all; he was just an impressionable young man and ....\n\n\"I didn't do this alone.\" \n\n\"What do you mean?\" Peter asked. This was more than he had hoped for. He knew that there had been a group on campus; but they didn't know who the leader was. Even if they did know; all they would have been able to do was watch him.\n\n\"Who helped you?\" Peter asked.\n\nAndrew hesitated for several minutes.\n\n\"If I tell you, I want the death penalty taken off the table.\" Andrew said. \"And I want a lawyer. I'm not saying a word until he's here.\"\n\n\"Alright, but you do realize that no deals are going to be made until the information that you give us is verified.\" Peter said.\n\n\"What do you mean?\" Andrew demanded. \"I'm giving you information!\"\n\n\"And it needs to be verified.\" Peter repeated. \"Did you think that we would make a deal with you based on your say so?\"\n\nThat was exactly what Andrew thought would happen.\n\n\"It's the weekend so you'll be a guest of the city until Monday.\" Peter said. \"And even though it's against procedure; I'm going to let your father see you.\"\n\n\"No... tell him to go home.\" Andrew said.\n\n\"Why? Are you too afraid to face the man that you were going to let go to prison for you?\" Peter asked.\n\n\"Tell him that I'm fine and that he needs to go home and take care of mom.\" Andrew replied not responding to the jibe. \n\nPeter didn't move for several seconds.\n\n\"Are you sure?\" Peter asked. \"This will probably be the last time you see him other than in court.\"\n\nSomething about those words struck Andrew.\n\n\"You're right... let him in.\"\n\n******\n\nA million thoughts went through Harlan's mind as he waited to see Andrew. The biggest of them was what he could have done differently. He refused to believe that his son was born a killer... he would have known. \n\nHe realized that he did know and he had turned a blind eye. Just as he had turned a blind eye to the hatred that he felt coming from his son. He also disagreed with Peter on another point. Part of this was his fault and nothing would convince him otherwise. \n\nSuddenly, Harlan remembered Eleanor. He politely asked to use the phone and called her. She was frantic with worry for both him and Andrew. It broke his heart to tell her that there was nothing that he could do to help their son.\n\n\"No honey, he isn't coming home...I don't know... sweetheart I'm going to talk to him and then I'll be home. I'll explain everything soon... yes a pot of coffee would be nice.\"\n\nHarlan hung up his throat tight. The offer of coffee seemed absurd given what was happening, but he understood. Whenever Eleanor was stressed or frightened, she did something domestic to help calm her nerves. He had no doubt that there would be another apple pie if not two waiting for him when he got home.\n\nHe tried to think of how to tell her that their son, their only child was a murderer and that he had been planning to murder someone else. Harlan tried to understand how it could have happened. It had to have been more than Andrew hearing him talk badly about other races. Then he remembered the empty look in Andrew's eyes even while he was smiling.\n\n\"Harlan? You can come in.\" Peter said from the doorway.\n\nHarlan went to the door, walked into the room and headed for the chair.\n\n\"Don't sit down.\" Andrew said softly. \n\nHarlan readjusted his crutches and waited.\n\n\"I don't want you coming back here to see me. I don't want mom to see me here either...\"\n\n\"Andy...\"\n\n\"No listen to me.\" Andrew said. \"It's going to be bad enough as it is when this hits the papers. People are going to blame you for what I did and it isn't your fault. I know that you tried to take the blame for me... and I was going to let you. If there was any way to let you go to prison for me; I'd do it and wouldn't look back.\n\nNow go home to mom and tell her that I'm sorry. One more thing; don't come to the trial. Stay home. You don't need to go through that.\"\n\n\"Explain this to me.\" Harlan said softly. \"Help me understand why you killed that boy.\"\n\n\"I don't know that I can.\" Andrew replied. \"He challenged me and he lost.\"\n\n\"This was about a challenge?\" Harlan asked. \n\nAndrew didn't answer Harlan but looked at him.\n\n\"I don't understand. What challenge?\" Harlan asked.\n\n\"Andrew was the leader of a racist group at school.\" Peter explained. \"From what I can piece together, Milton Vaughn was a member of that group. He questioned Andrew's authority because he wasn't dealing with a certain group of people decisively enough to suit him.\"\n\nHarlan looked at Andrew as if he had never seen him before. \n\n\"Andy...is this true? You led a group like that?\"\n\nThere was no point in lying so Andrew told the truth.\n\n\"Yes it's true and yes I was going to kill that damned Jap! He had no right to be in that class! He has no right to be taking the place of a white American citizen. He has no fucking right to live in a house that's nicer than ours! Him and his damned people bombed this country and what happens? They get rewarded! As far as I'm concerned they're below the coloreds! I'd rather see a colored person sitting next to me in class than a Jap! At least they didn't bomb us and they didn't ask to come here.\n\nWhile I'm being honest; I was scared when I shot Milton. I didn't want to it, but I had no choice. Afterwards I was still scared; but I liked it.\"\n\n\"Andrew.\" Peter said softly, \"Are you aware that you just confessed to murder?\"\n\n\"I know what I did!\" Andrew snapped. \"But I didn't tell you the name of the real leader of the group did I? I'll wait until my lawyer gets here before I divulge that little piece of information. Now get him out of here and if he comes back I don't want to see him.\"\n\nHarlan stood frozen. The term shell-shocked came to mind when he tried to put a name to what he was feeling. He had listened to his son confess to murder and then admit that he liked it. He didn't move when he felt hand on his shoulder urging him toward the door. He looked at Andrew with eyes filled with tears and walked out.\n\nAndrew watched his father walk out on his crutches with a mixture of emotions. There was sadness because he had hurt them so badly. No matter what he had done, he loved his parents. He also experienced relief. His secret was out. He no longer had to pretend to be other than what he was. He also couldn't deny that he was afraid. He didn't want to die and if throwing Michael Hathaway to the wolves prevented that; then he'd do it.\n\nThe door opened again and Detective Briscoe walked in and sat down.\n\n\"Was it worth it?\" Briscoe asked. \"You had your whole life ahead of you...\"\n\n\"I really don't care to hear how I could have been a productive member of society. I'm going to prison so just spare me the speech.\" Andrew said his voice icy.\n\nBriscoe looked at Andrew assessing him.\n\n\"That's a pretty good front that you're putting up.\" He said. \"Keep it up; you're going to need it.\"\n\nHe pushed a paper and pencil over to Andrew.\n\n\"Write out everything that you told the agent and don't try to change it. Several of us heard your confession and I doubt that your father will lie for you again.\"",
        "Briscoe got up and knocked on the door. Seconds later, two uniformed officers came in.\n\n\"Uncuff the hand that he writes with and keep the other one on. He doesn't leave this room for any reason until he's finished.\"\n\n*****\n\n\"What do you think about him having an accomplice?\" Nick asked.\n\n\"I doubt that anyone helped him kill Vaughn.\" Peter replied. \"However, I do believe that he had a mentor. But as you heard, he won't give up the name unless we give him a deal.\"\n\n\"My concern is if we cut a deal with him, the so called accomplice will amount to nothing.\" Nick said. \"If we cut a deal with him, it will be for life without the possibility of parole.\"\n\n\"Excuse me.\" Briscoe said. \"Aren't you forgetting something? That murder isn't a federal issue.\"\n\n\"You're right.\" Peter replied, \"But he may have information that could turn it into a federal case. We're investigating groups like his, but I think we're being premature here. We don't know if he really has information or not. We won't know until he talks with his attorney on Monday. If there is a real accomplice, we'll hash it out then.\"\n\nBriscoe looked as if he was going to argue, but changed his mind.\n\n\"We'll leave him in a cell by himself.\" He said. \"I'll call you as soon as his lawyer gets here.\"\n\n\"Thanks.\" Peter said. \"Briscoe, we're not trying to take this case from you. I'll do my best to see that you get your shot at him.\n\n\"This is what I think.\" Briscoe said. \"He's going to give you a name of someone who doesn't matter.\"\n\n\"This is exactly why there won't be a deal until I have a name and it's been investigated.\" Nick replied. \"The bottom line is this, even if his information is good; he's going to spend the rest of his life in prison. Peter, you look as if you're going to fall over, where's your partner?\"\n\n\"Back at the office starting the paper work.\" Peter replied.\n\n\"Come on, I'll drop you off at home.\" Nick replied.\n\n\"I'd rather go to the office.\" Peter replied. \"Then I can rest.\"\n\n\"Did you take any pain medication while you were at the hospital?\" Nick asked.\n\n\"No... why?\" Peter asked. \n\n\"I don't want the defense to have any reason to question anything that we did.\" Nick replied. \"I don't want this son of a bitch getting away from us on a technicality.\"\n\n\"Nick, I'm fine.\" Peter replied. \"My shoulder hurts like hell, but I feel good enough to get that report done while it's fresh in my head. I'm going to add the false confession that Harlan tried to give as well. I agree with you. I want the bastard to rot in prison.\n\n*****\n\nAndrew could hear the voices through the door, but he couldn't make out the words. The only thing that he knew for sure was that the discussion was about him. It unnerved him that they hadn't jumped at the offer of information. It made him wonder just how important Michael Hathaway was and if the professor hadn't overblown his importance. When he thought about it, he realized that no one seemed particularly upset at Hathaway's sudden disappearance. \n\nAndrew realized something else. Hathaway never got his hands dirty. The only reason that he had lost his job was because of the Jap's bitch. Now that he had the time, he wondered what happened that Hathaway had to leave so suddenly. He then remembered the Jew and his hopes rose. He had the clip!\n\nJust as quickly as they had risen, Andrew's hopes crashed. How would he explain how he still had the gun? Then there was also Hathaway's wife. She would say that he had been there and they would want to know why.\n\nHis only hope was to convince them that Hathaway was more involved than he actually was. But there was another problem; he had no idea of where Hathaway had gone. He was slowly realizing that he was out of options.\n\nHe jumped when the door opened. Briscoe stood in the doorway staring at him for several seconds before speaking to him.\n\n\"You're some piece of work.\" He commented.\n\nAndrew didn't reply.\n\n\"You were really going to let your old man go to prison for you weren't you?\" he asked.\n\nWhen Andrew didn't reply, he continued.\n\n\"I know what you're doing.\" He said as he entered the room and sat across from Andrew. \"You're trying to throw us a red herring. Well I've got news for you; none of us are buying it. You may have had someone teaching you, but I doubt that they told you to kill anyone in your own group. Discipline I can understand, but murder? You're going to prison for a good long time. With any luck, you'll never get out.\"\n\nThe words hit Andrew like a sledgehammer. All of the lessons that he had learned were forgotten as he tried to stand up so that he could rush Briscoe.\n\nBriscoe didn't flinch but watched as Andrew came at him dragging the chair with him. When Andrew was close enough, he stood up and punched him in the chest. Andrew flew backwards crashing to the floor. \n\n\"I guess we'll add assaulting a police officer to the list of offenses against you.\" Briscoe said as several uniformed officers ran into the room to see what the ruckus was about. \"Take him to his cell.\" Briscoe said. \"And don't put anyone in there with him. I want the son of a bitch to go to trial.\"\n\nThe officers helped Andrew up and led him away. Briscoe sat in his seat for a long time. He was in no real hurry to get home. Finally, he got up, stretched and went to his desk. He had a report to write.\n\n*****\n\nSaul's ass was sore. He had only ventured as far as the bathroom and stood in the aisle to stretch his legs. A few more people, not always black sat with him as the train made its way to California. Some of them he talked to, some he didn't; but he noticed something. It was always the black families that shared their food with him. Something about that struck him. The last black person to sit with him was an older man who was obviously hungry. For once, he got to be the one to share his food.\n\nThe man eyed him warily when Saul offered to share what was left of the food that he had.\n\n\"It ain't much but I'll help keep the hunger away.\" Saul said as he held out a piece of dry bread.\n\n\"Why are you sharing?\" The man asked in a cultured voice that surprised Saul.\n\n\"A lot of people have shared their food with me.\" He replied. \"That's why I have food left.\"\n\nThe man reluctantly took the offered food and then bowed his head in prayer. After he was through he introduced himself.\n\n\"My name is Joshua Templeton. May I inquire as to what your name is?\"\n\n\"Saul Mullins, it's a pleasure to meet you.\"\n\n\"The pleasure is mine.\" Joshua replied. \"Please excuse my earlier reticence, but it is a rare thing for a white man to share with a black man.\"\n\n\"I understand.\" Saul replied. \"Can I ask you a question?\"\n\nThe wary look was back on Joshua's face, but he gave Saul the go ahead.\n\n\"I don't know how to ask this without it sounding bad.\" Saul said.\n\n\"Just ask and I promise not to be offended if it as you say, sounds bad.\" Joshua said with a smile. \"I always say that it's better to ask than to assume.\"\n\nSaul liked this man. He didn't know what it was about him that made him feel comfortable enough to ask questions; but the man felt familiar to him. After a few seconds, he realized why. The man reminded him of Jacob Lincoln but without the southern accent and height. This man was also older than Jacob had been if the gray that peppered his dark hair meant anything.\n\nSaul cleared his throat. He was having second thoughts about asking his question. He had no desire to offend this man.\n\n\"What's your question?\" Joshua asked.\n\n\"I... I only know of one other colored man who talked the way that you do... where did you learn to talk like that?\" Saul asked.\n\nSaul became nervous when Joshua didn't answer right away. Maybe he had offended the man.\n\n\"I taught myself. \"Joshua said after a few minutes. \"How did the other man learn?\"\n\n\"He was a school teacher.\" Saul replied with a lump in his throat. He hadn't talked to anyone about what happened at the prison since he left. Even his mother got skimpy details.\n\nJoshua looked at Saul for a long time before he spoke.\n\n\"You sound like you admired him.\"\n\n\"I did.\" Saul replied. \"He was kind to me when no one else was.\"\n\n\"Where did you meet him?\" Joshua asked.\n\nSaul hesitated and then the floodgates opened. By the time the conductor announced that Los Angeles was six hours away, Saul had told Joshua everything.\n\n\"I don't know your friend.\" Joshua said. \"But he sounds like he was a good man. But I have a question for you. What are you going to do once we arrive? Where are you going to stay?\"\n\n\"I was going to go to the baggage office and see if I could get a job there.\" Saul replied.\n\n\"You would take a job that mostly blacks do?\" Joshua asked.\n\nSaul was surprised at the question. In his mind a job was a job and he didn't much care what it was.\n\n\"Are you saying that they won't hire me because I'm white?\" he asked.\n\n\"I'm not saying that.\" Joshua replied. \"I'm just saying that it's a position usually held by blacks.\"\n\n\"All I know is that I need a job and I don't much care what it is.\"\n\n\"Alright, let's say that you get this job, where will you live?\" \n\n\"I'll hole up somewhere until I have enough money for a room.\" Saul replied.\n\n\"Are you talking about living on the street?\" Joshua asked. \"I don't think that you understand how dangerous Los Angeles is. You might be able to get away with holing up somewhere in South Carolina; but not here. How will you eat?\"\n\n\"I have a little money and I can take care of myself.\" Saul replied.\n\nJoshua didn't speak for another fifteen minutes. His gaze was directed toward the window as if he was in deep thought.\n\n\"You're coming home with me.\" Joshua said suddenly. \"It's just me and my wife Cora and we have a small room that needs some work to make it livable, but I suspect that a young man like you has some repair skills.\"\n\nSaul was speechless at the show of kindness that he was being shown by a stranger.\n\n\"I can't do that!\" he exclaimed. \"Thank you for your offer but...\"\n\n\"But what?\" Joshua broke in. \"You just said that you had no job and no place to live. I'm offering you shelter. I know that you have no money so in exchange for food and a place to stay; you can do repairs around the house. When you get a job, you can help buy food. You're welcome to stay until you're on your feet.\"\n\n\"What about your wife?\" Saul asked.\n\n\"Don't worry about her.\" Joshua replied. \"She's used to me bringing home the strays that I find although it's been awhile, and none of the strays have been white.\"\n\nSaul thought about his options. Joshua was right. Living on the streets would be dangerous and who knew how long he would have to do it? \n\n\"I'll accept on one condition.\" Saul said. \"You let me use what money I have to buy groceries.\"\n\n\"Deal!\" Joshua replied and extended his hand to Saul.\n\nThe conductor happened by just as Saul accepted Joshua's hand. He didn't say anything. He didn't have to; the expression on his face said it all.\n\nSaul and Joshua looked at each other and shrugged.\n\n\"Have you thought about how you're going to fulfill your promise?\" \n\n\"I don't know yet.\" Saul replied. \"I know that I need to learn to talk better... I need to learn to talk like you and Jacob.\"\n\n\"Do you know what it is that you want to do?\" Joshua asked.\n\n\"I don't know that either.\" Saul replied. \"But... do you think that you can teach me to talk better?\"\n\n\"Saul, do you know how to read?\" Joshua asked.\n\n\"I know how to read easy stuff and I can write.\" Saul replied.\n\n\"Then we need to start with your reading.\" Joshua replied. \"It will strengthen your vocabulary.\"\n\n\"You'll help me?\" Saul asked surprised.\n\n\"Yes I'll help you.\" Joshua said. \"Saul, back to your friend Jacob; do you understand that he was murdered? The warden made it look like a justifiable hanging; and it may have been. But there was no trial to determine that. The warden committed murder in front of hundreds of witnesses and got away with it because the white prisoners felt as he did and no one would have believed the black ones.\"\n\n\"I know.\" Saul said softly. \"But who's going to believe me? I'm one person.\"\n\n\"Sometimes that's all it takes.\" Joshua replied.\n\nSaul turned away. A seed had been planted.\n\n******\n\nIsadora was in the back yard doing one of her favorite things. Picking oranges off the tree and eating them as she went. No matter how many oranges she ate, the pleasure never diminished.\n\n\"It's a wonder your skin isn't orange instead of brown!\" Bella teased when she joined her.\n\nIsadora tensed and then relaxed joining in when Bella laughed.\n\n\"I'm sorry; I didn't mean to startle you.\" Bella said after the laugher subsided.\n\n\"It's alright.\" Isadora replied. \"I was never one for liking people to come up from behind me.\"\n\n\"I'll try to remember that.\" Bella said. \"Mr. Jackson is coming over for dinner, would you like to make the biscuits?\"\n\n\"Are you really going to trust me to make the biscuits?\" Isadora asked. \"Mine always come out so heavy.\"\n\n\"Practice makes perfect.\" Bella replied with a smile.\n\n\"Bella, what's the story with Mr. Jackson? I mean where did he get his limp and where does his money come from?\"\n\n\"I can't answer any of those questions because I don't know the answers.\" Bella replied. \"Even if I knew, I wouldn't tell you. Isadora, Mr. Jackson is a very private man. I wouldn't ask him any personal questions unless he invites you to.\"\n\n\"Aren't you curious?\" Isadora asked. \"You've known him for a long time and you know what I know. Don't you find that odd?\"\n\nBella saw that Isadora wasn't going to let the subject of Mr. Jackson go.\n\n\"Isadora, why won't you talk about what happened to you?\"\n\n\"Because it's private and...I see your point.\" She said softly.\n\n\"We all have things that we want to keep to ourselves whether they are good or bad. I know that you're curious about him and so were we. But it passed. It all comes down to respect for the other person's privacy. Now let's go make those biscuits. Oh and a letter came for you.\"\n\n\"A letter from home?\" Isadora asked excitedly forgetting about Mr. Jackson.\n\n\"I didn't really look.\" Bella said as she picked up the basket that was half full of oranges, lemons and grapefruit. \n\nIsadora took off at a run. As much as she loved California, she had plans to return home when she had her degree. She had business to take care of. She found the letter on the dresser in her room and sat on the bed to read it.\n\nDear Isadora,\n\nI hear that your studies are going well. Mr. Jackson is quite pleased with your progress as am I. I read your letters to your mother who now works for me in your place since your father fell ill and lost his job. They are so proud of you and it is on their behalf that I write this letter. Before I get to that, be on the lookout for a package. I had an exceptionally good quarter and took the liberty of ordering you a subscription to the law journal. I hope that you find it helpful as you continue in your studies. I also am sending you an old outdated version of the prep book for the BAR exam. I know that it's early, but at least you'll have it. \n\nThis is the news from your mother. Your brother Dewey is marrying Millie Books in a few weeks. After the wedding they are planning to move north where things are rumored to be easier for people of color. They will be living with some of her relatives until they get on their feet. Your brother Titus wants to move too, but he doesn't want to leave your parents since he lives the closest to them. He has concerns about the Klan activities that seem to be increasing. Everyone else is the same and they all love and miss you.\n\nThat's it for now. Isadora, I know that you are going to be a magnificent attorney. I knew it from the first time I slipped into my office early and I saw you reading one of my law books. It was confirmed when Mr. Jackson caught you and drilled you on what you had read. I don't know what motivates you, but keep it in front of you and use it. If you have any questions that I can help you with, include them in the letters to you parents on a separate sheet of and I will respond promptly.\n\nYours,\n\nMr. Whitman\n\nIsadora reread the letter and smiled. She had heard the same rumor about life for people of color in the north, but she wasn't sure that she believed it. She hoped that for Dewey and Millie's sake that it was true. She also wished that she could be at the wedding. Dewey had been in love with Millie since they were children and she had never given him the time of day. She sighed when she thought about Titus. He hated Greenville, but as long as he thought that his parents needed him he wouldn't leave.\n\nThe news about the increased Klan activity unsettled her. In a way, she owed them thanks. They were her motivation for choosing a career as an attorney. Unconsciously she looked at the dresser where the list of names lay under her nightgowns.\n\nMarty Anderson, Luke Samuels, Edgar Freeman were only three of the names on her list. Her hand went to her soft belly and she said a prayer asking for forgiveness and that the innocent soul was in the hands of god.\n\nShe read the letter again, stood up and walked over to the dresser. She opened the top drawer and slipped the letter inside. A few minutes later she was in the kitchen making biscuits under Bella's watchful eye.\n\nMr. Jackson arrived for dinner just before six. He greeted Isadora with a warm smile and praise. \n\n'I'm very pleased with your progress.\" He said as he took off his hat. \"Your instructors speak very highly of you.\"\n\n\"Thank you.\" Isadora said basking in the praise. \"When I say thank you, I mean for everything. I wouldn't be here without your help.\"\n\n\"You're welcome.\" Noah replied. \"The only thanks that I want are for you to graduate, help our people and if you have the means; help someone get their education.\"\n\n\"I promise to do that...Mr. Jackson; may I ask what you would consider a personal question?\"\n\nNoah hesitated. He had an idea of what she was going to ask, but the true test would be would she follow through with the question.\n\n\"What will you do if I say no?\" he asked.\n\n\"I would ask you again later.\" Isadora replied without missing a beat.\n\nNoah fought not to smile. He liked this young woman. She reminded him so much of...\n\n\"Ask your question.\" He said gruffly. \"But I don't promise to answer it.\"\n\n\"That's fair.\" Isadora replied.\n\nBella and Lenny listened to the exchange with disbelief. When they had asked Noah anything personal, he had told them to mind their business and to concentrate on their studies. They had never asked again but here was a young woman going toe to toe with him.\n\n\"Just a moment.\" Noah said. \"Are you familiar with the term quid pro quo?\"\n\n\"Yes I know the term.\" Isadora replied.\n\n\"Good, if I answer your question; then you answer one of mine. If I refuse to answer your question, then you may refuse to answer mine. Do we have an agreement?\"\n\nNoah waited. This was where he was going to find out if she had the guts to follow through.\n\n\"I agree.\" Isadora said after a brief hesitation.\n\n\"Then you may ask your question.\" Noah said preparing to answer the question about his limp.\n\n\"Where do you get the money to pay for not only my education, but the education of others?\"\n\nNoah almost choked but recovered.\n\n\"I respectfully decline to answer that question.\" He said with a bow. \"Now for my question, what did the Klan do to you or your family?\"\n\n\"I respectfully decline to answer that question.\" Isadora said with a small bow of her head.\n\nThey looked at each other and smiled. Isadora knew that she had just passed some kind of test.\n\n\"Dinner's ready.\" Bella said from the kitchen doorway. \"Isadora, would you go get the children?\"\n\nNoah watched Isadora walk away with approval in his eyes. Isadora Hughes was a rare find and he would help her however he could.\n\n\"Mr. Jackson, may I ask your opinion on something?\" Isadora asked over dessert. \"It isn't personal she quickly added.",
        "\"You may ask.\" Noah replied.\n\nIsadora told him about the letter that she got from Mr. Whitman and about her brother and his new wife's plan to move north.\n\n\"Is it true that things are easier in the north for people of color?\"\n\nNoah thought about his answer.\n\n\"In some ways yes but it is still difficult. The whites of the north can be just as bigoted as the whites of the south depending on where they are and their belief system. There are some that say that it is even easier here in California where there are some racist groups but they don't have a stronghold like the Klan does in the south or parts of the north.\"\n\n\"So would you advise them to come here as opposed to going north?\" Isadora asked.\n\n\"That would depend on a variety of things.\" Noah replied. \"Other than you, do they have any family here?\"\n\n\"I don't think so... Millie has family in the north though.\"\n\n\"What skills does your brother have? And will they allow him to get a job?\"\n\n\"He's a handyman.\" Isadora replied, \"And Millie cleans houses.\"\n\n\"The other issue is finances.\" Noah said. \"How are they getting north?\"\n\n\"I... I assume by train.\" Isadora replied.\n\n\"On the face of it, it sounds like north is the better option. At least she has family that they could stay with and they both should be able to find jobs.\"\n\n\"I was thinking along the same lines.\" Isadora replied.\n\n\"You must miss your family.\" Noah said looking at Isadora intently.\n\n\"Yes I do.\" Isadora replied. \"But I'm here and I'm not leaving until I have my degree.\"\n\n\"We've talked about you taking summer classes.\" Noah said. \"But would you prefer to go home?\"\n\n\"Home for the summer?\" Isadora asked.\n\nThe idea was tempting and she did miss her family, but if she stayed; she could shorten her schooling by a semester. If she did it every summer, she could cut out an entire year. However, there was Christmas break which would be four weeks.\n\n\"I would like to stick to my original plan.\" Isadora said. \"But I was wondering about Christmas.\"\n\n\"That might be possible.\" Noah said after a long pause. \"I need to go take care of some business matters with Mr. Whitman. I would enjoy the company.\"\n\nIsadora wasn't sure if he was serious until he started looking at dates.\n\n\"I believe that the last class is over the third week of December... we could leave the day after your last class. I'll book the tickets.\"\n\n\"I ... Thank you.\" Isadora said with tears in her eyes. She couldn't wait to write a return letter to her parents telling them that she would be home for the Christmas holidays.\n\n\"S....Isadora, be sure to bring your books with you.\" Nosh said. \"As you know, it's a long trip.\"\n\nShe had already planned on it, but he was about to call her another name and had quickly corrected himself.\n\nAfter he was gone, Isadora helped Bella clean up.\n\n\"He likes and respects you.\" Bella said as she washed the dishes. \"He likes that you weren't afraid of him.\"\n\n\"There's nothing to be afraid of.\" Isadora replied.\n\n\"No, but I've never seen anyone challenge him like you just did.\" Bella said. \n\n\"He started to call me by another name.\" Isadora said. \"Do you know whose name?\"\n\nBella laughed. \n\n\"You probably know more about him than we do, but no; I have no idea.\"\n\nAfter the dishes were finished, Isadora went to her room and began a letter to her parents.\n\n*****\n\nNick rang Hiroshi's doorbell and stepped back to wait. Hiroshi opened the door and greeted Nick with a cool but pleasant smile. Of everyone in their eclectic family, Nick was the one that he had some difficulty with. He wasn't sure of why that was except for maybe it was the fact that Nick had protected Kenji and saw him for the man that he was.\n\nHiroshi also realized that he owed Nick a debt of gratitude. By all rights he should be in prison or at the worst deported back to Japan for his activities during the war. Somehow, through a slip up; he and the then pregnant Dai had been able to leave the camp. Nick knew this but had kept quiet.\n\nThe memory of this favor made Hiroshi check his attitude. He knew that Nick wouldn't hold it over him, in fact; it was only mentioned once. \n\n\"Hiroshi.\" Nick said. \"If they ever offer citizenship to the Japanese, you can't apply and neither can Hana. If they ever lift the restriction on interracial marriage, I'll marry Hana but you won't have that advantage.\"\n\n\"Nick, please come in and be welcome.\" Hiroshi said with a bow.\n\n\"Thanks... are Patricia and Kenji around?\" Nick asked.\n\n\"They are in the kitchen making tea. Please, follow me.\"\n\nPatricia stopped what she was doing and gave Nick and expectant look. Kenji sat the plate of sugar cookies on the counter and put his arms around Patricia.\n\n\"Where are Joel and Penny?\" Nick asked. \"I want them to hear this too.\"\n\n\"I will go get them.\" Hiroshi said and hurried to the back door where Joel and Penny were talking with Dai.\n\nA few minutes later, they were all congregated in the kitchen.\n\n\"Please tell us that it's over.\" Patricia said.\n\n\"It's over.\" Nick said. \"We have Andrew Kelly in custody.\"\n\n\"Is there any chance that he will be released?\" Kenji asked.\n\n\"No.\" Nick assured him. \"He confessed to killing Milt Vaughn and he shot a federal agent.\"\n\n\"Peter?\" Joel asked.\n\n\"Yes Peter, but he's going to be fine. In fact, I just dropped him off at home before I came here.\" Nick said.\n\n\"Kirei, do you know what this means?\" Kenji asked \"We can go home and you can return to school.\"\n\n\"Excuse me.\" Penny said, \"But what about Andrew's friends?\"\n\n\"That's the other reason why I stopped by.\" Nick said. \"Kenji and Joel, could you write down the names of everyone that you knew was in his group?\"\n\nNick sipped at a cup of tea while he waited for the list. God he had missed being in the field. He wondered how Hana would feel about him going back. It was still the best way that he knew of to protect his family.\n\n\"What are you thinking about?\" Patricia asked with a knowing smile.\n\n\"I was just thinking that I'm glad that all of you are safe.\" Nick replied.\n\n\"Me too.\" Patricia replied. \"You miss the agency.\" \n\n\"Am I that obvious?\" Nick asked with a chuckle.\n\n\"I just see that old light in your eyes.\" she replied smiling back at him. \n\nNick sighed.\n\n\"I do miss it and Charles made me an offer that is like having the best of both worlds.\"\n\n\"But you haven't told Hana about it.\" Patricia mused. \"Why haven't you told her yet?\"\n\n\"I wanted to get through this latest crisis before I said anything.\" Nick replied. \"I plan to talk to her when I get home. By the way... what time should we be here?\"\n\n\"We have to go to the store... is five alright?\"\n\n\"That's perfect. It gives this old man time to sleep.\" Nick replied.\n\n\"Here are the names.\" Joel said handing the paper to Nick.\n\n\"Good... Let me remind you of something.\" He said. \"Just because we have Andrew in custody doesn't mean that you let your guard down. The world is filled with people like Andrew so watch your backs.\"\n\nHiroshi walked Nick to the door and stopped him.\n\n\"I am once again in your debt. Thank you for keeping my son safe.\"\n\n\"You're welcome.\" Nick said. \"I consider Kenji to be my son too. We'll see you later.\"\n\n****\n\nKenji pulled Patricia aside and kissed her.\n\n\"I would like to go to our home and sleep in our own bed if only for a few hours.\" He murmured against her ear. \"It has been far too long since I have slept with your skin pressed against me.\"\n\n\"What about the children?\" Patricia asked.\n\n\"Dai has agreed to watch them and it puts us closer to the school. Joel and I are to meet Ernie for lunch.\"\n\n\"But it's late... it's past midnight.\" Patricia said pressing even closer to him.\n\nShe had missed sleeping in the nude snuggled against him as much as he had.\n\n\"We can be home in fifteen minutes.\" Kenji whispered. \"There is no need to pack until tomorrow.\"\n\n\"What about Penny and Joel?\" Patricia asked covering her bases.\n\n\"They will stay here.\" Kenji replied. \"My father will bring Joel to the house and Penny will stay and help Dai with the children.\"\n\n\"When did you have time to put this together?\" Patricia asked.\n\n\"We planned it after we received the first phone call saying that it was over. Now let's go... our bed is waiting for us.\"\n\nThey peeked at the children, said their goodbyes and left via the garage. Twenty minutes later, they were standing in their bedroom still fully clothed.\n\n\"It feels like we haven't been here in ages.\" Patricia said as she looked around the neatly kept room.\n\n\"Kirei.\" Kenji called softly.\n\nPatricia turned to look at him. His shirt was unbuttoned and his belt undone. The front of his slacks bulged out and she could see a tiny wet spot where he was already leaking. She walked over to him and light ran her fingernails over the bulge releasing her own fluid when Kenji moaned.\n\nKenji reached around her and unzipped her dress as he looked down into her eyes. The dress pooled around her feet and she stepped out of it as Kenji slid the bra straps over her shoulders, bent down and kissed each shoulder before kissing her neck. She gasped when he found the spot behind her right ear and sucked on it.\n\nPatricia slid her hands under his tee shirt and ran them over his flat stomach inching them toward his nipples. She raked her fingernails over each nipple and felt herself grow even wetter between her legs. It had been weeks since they had been able to make love like this, but it felt like years. \n\nKenji pushed her backwards toward the bed until the back of her knees touched it. He gently eased her down until she was sitting and finished undressing. Patricia was surprised when he didn't take the time to hang their clothes up, but she wasn't complaining.\n\n\"Lie back Kirei. I want to look at you.\"\n\nPatricia lay back on the bed still dressed in her bra and panties. She waited until he had had his fill of looking at her before she finished undressing. Kenji helped her with her panties slowly sliding them over her hips and going even slower when he reached her mound. It was as if he was trying to torture himself.\n\n\"I have missed the smell and taste of you.\" He murmured as he slid the panties down her legs. Patricia watched as he held the panties to his nose, closed his eyes and inhaled. He stood frozen with her panties held against his nose for several minutes before he dropped them on the bed.\n\nKenji's cock was throbbing with need, but he ignored it as he dropped to his knees between her open legs. Patricia had managed to remove her bra and held a heavy breast in each hand. The nipples were erect, waiting for the first touch of his tongue against her clit.\n\nBut he fooled her. He got up on the bed beside her and kissed her offering her his tongue and accepting hers. He ran a thumb over a hardened nipple and then rolled it between his fingers. He broke the kiss and looked into her dark brown eyes.\n\n\"I will love you forever.\" He whispered. \n\nHe kissed her again and caressed her face with his lips before kissing her chest, her breast and then finally, a nipple. He drew the dark, hard point into his mouth and began to suckle from it. Patricia closed her legs tight and began to squeeze them together looking for relief.\n\nPatricia moaned when she felt the pressure on her clit. If Kenji sucked any harder or flicked his tongue across the top of her nipple, she would come.\n\n\"No Kirei.\" Kenji said softly after he released a nipple. \"I want to feel and taste your release in my mouth.\"\n\nShe moaned in frustration but relaxed her thighs. Immediately, the pending orgasm receded leaving behind a dull ache. Kenji hurried a little. He wasn't sure how much longer he could hold off. He wanted to feel her soft lips wrapped around his cock as he slid in and out of the wet warmth of her mouth.\n\nThat thought was nearly his undoing. He could feel the tingling that began at the balls of his feet begin to make its way to his center. He squeezed his eyes shut and took several calming breaths until the need diminished but didn't go away.\n\n\"Kenji... I...\"\n\nHe could tell by the way that Patricia was tensing that she wasn't going to be able to hold off much longer. He planted a soft kiss on her stomach and moved so that he was between her legs. Patricia opened her legs wide, reached down and opened her nether lips for him. Kenji took a moment to gaze at the jewel that was soon going to be throbbing in his mouth. \n\nIt was already throbbing and a clear fluid was running down Patricia's slit and between her ass cheeks. Starting at the base of her pussy, Kenji made one long, slow swipe up with his tongue stopping just before he reached her clit.\n\nPatricia cried out and bucked her hips still holding her lips apart. Kenji slowly eased his tongue down to the bottom and made his way back to the top only this time, he took the throbbing clit into his mouth and flicked his tongue over it several times in rapid succession before gently sucking on it. His moans combined with Katrina's screams as her orgasm began. When her orgasm began to wane, he flicked his tongue over the quivering Jewel and suckled it again when Patricia's second orgasm hit.\n\nWithout saying anything, Patricia sat up as Kenji got to his feet. Her chest was still heaving from her back to back orgasms, but she took the head of his cock into her mouth and teased it with her tongue. Kenji took hold of her face and held her head still as she pumped in and out of her mouth speaking in Japanese as he did so. Even after all of their time together Patricia still had no idea of what he was saying. The closer he got to orgasm, the faster he spoke and pumped into her mouth. Finally, he released her head and gave her free rein to do as she wished. He screamed for her when she rubbed her tongue against the sensitive underside of his cock. The orgasm that had started in his feet was now rushing to his center. \n\nHe screamed Patricia's name as the first of his release left his body and entered hers via her mouth. Afterwards, he climbed into the bed next to her and held her nude body close to his. For the first time in weeks, he slept soundly.\n\nPatricia didn't move for fear of waking Kenji up. She counted the beats of his heart until she too fell asleep.\n\n******\n\nErnie finally made his decision. He was going to meet Kenji and Joel at school for lunch and Andrew could go screw himself. He packed his books and went downstairs to make a sandwich for lunch.\n\n\"Where are you off to?\" his father asked.\n\n\"I... I'm having some trouble with a class and meeting some people for help.... It's Kenji Takeda.\"\n\n\"The young man that you helped torment?\" His mother asked surprised.\n\n\"Well... we tried, but I think that he did the tormenting.\" Ernie replied.\n\n\"How do you mean?\" His father asked.\n\n\"You would have to see it to believe it.\" Ernie replied. \"He never let us get to him and the one time he did, it was because Andrew was going to involve his wife.\"\n\n\"The young black woman.\" His father commented.\n\n\"Yes... Patricia, But Kenji is brilliant and so is his friend Joel.\"\n\n\"And they're going to help you with your class?\" His mother asked. \"I find that amazing considering what you put them through.\"\n\nErnie blushed. His mother was right. They could have turned him away but they didn't. He knew that Joel was still angry at him and he couldn't blame him. They could have ruined his medical career. Another apology was in order and he planned to deliver it when he saw them.\n\n\"They also arrested someone for Milton Vaughn's murder.\" His father said. \n\n\"They did? Who was it?\" Ernie asked.\n\n\"Your friend Andrew Kelly.\" His father replied. \"According to the paper, he confessed... Ernie, do you realize how lucky you were? That could have been you that he killed. That could be you sitting in that cell facing murder charges.\" \n\n\"I know.\" Ernie murmured. \"What I did was.... Inexcusable. I plan to apologize again today.\"\n\n\"Good... when will you be home?\" His mother asked.\n\n\"I'll be back by supper. Why?\" \n\n\"We're going over to see the parents of the young man; I think that you should come with us.\"\n\nErnie recognized that the statement wasn't a request, but a demand delivered in his mother's usual gentle way. There was no way out of it. He had no idea of what he would say to them if they asked him way. He would deal with it when and if it came up. He glanced at the clock and stood up.\n\n\"I have to go.\" He said, \"I'll see you at supper.\"\n\nErnie had mixed feelings as he walked to the garage. He was relieved and then felt guilty about feeling relieved. Andrew had been a friend at one time and now his life was over. As he got into the car to drive to the school, Ernie began to formulate his apology to Joel in his head. It either sounded too contrived or insincere. By the time he got to the school, he still didn't have an apology formed. Nor did he know how to adequately thank them for their help. In the end he decided to wing it.\n\n****\n\nKenji opened his eyes and looked at Patricia who was still asleep. He needed the bathroom, but put it off. She hadn't been sleeping any better than he had so he held off until he couldn't wait any longer. He moved as slowly as he could in the hopes of not to waking her up.\n\n\"Where are you going?\" she asked tightening her arm around his waist.\n\n\"I'm going to the bathroom.\" He replied kissing her head. \"After that, I was going to make breakfast and bring it to you.\"\n\n\"I can make breakfast although there isn't really anything here. I was going to go shopping while you were at school.\" Patricia replied.\n\n\"Please Kirei, let me do this. I want you to stay in bed and read that book that you started weeks ago.\"\n\n\"I would rather skip breakfast and stay in bed with you like we used to do before we had babies.\" Patricia replied.\n\n\"I will be back in a few minutes.\" Kenji said jumping out of bed.\n\nWhile he was gone, Patricia put the diaphragm in and waited for him to come back.\n\n*\n\nHana was waiting up for Nick when he got home. He had called her from the jail to let her know that they had Andrew in custody and that everyone was safe.\n\n\"Go to bed, I'm going to be a while. Yes... they're fine... Hana, I love you... I'll see you soon.\"\n\nHe got home about an hour after the phone call.\n\nHana was at the kitchen door leading to the garage when he walked in. He hugged and then kissed her running his hands up and down her back. Then he remembered that they had company.\n\n\"Where are Hattie and John?\" He asked.\n\n\"They went to bed soon after your first phone call.\" Hana replied. \"I am so glad that this is over.\" She added.\n\n\"Me too.\" Nick replied kissing her.\n\n\"Sit down and I will make you something to eat.\" Hana said as she took him by the hand and led him to the table.\n\nNick sat at the table wondering if it was the best time to talk to her about returning to the agency. His stomach grumbled when the scent of bacon filled the air reminding him that he hadn't eaten anything since lunch. Hana sat a large glass of juice in front of him and moved back to the stove to finish making his breakfast.\n\nNick downed the juice and got up for more. On his way back to the table, he stopped at the stove and kissed the top of Hana's head. He wished that he could legally marry her, but it was still impossible. He sat the glass down and put his arms around her.\n\n\"Hana...\"\n\n\"Eat first and then we talk about what is bothering you.\"\n\n\"I love you Hana.\" Nick said kissing her head again and rubbing against her.\n\n\"I love you too... now sit and I will bring your meal to you.\"\n\nNick devoured the breakfast of bacon, eggs, toast and coffee and felt much better for it. He went to take a shower while Hana took care of the kitchen. By the time she finished, he had showered, shaved and was lying naked on the bed waiting for her.\n\nHana walked into the bedroom, undressed and got into bed with him sighing when he put his arms around her and hugged her. She placed her hand over his heart and ran it down until it rested on his stomach which was just beginning to show the first hints of the middle aged bulge although he was in his mid-forties. ",
        "Her hand drifted even lower and stopped when it reached his cock which was already leaking pre-come. Nick hissed when she ran her short fingernails up and down the length of his cock.\n\n\"I love when you do that.\" he moaned when she did it again.\n\nNick ran a thumb over a rose colored nipple and then pinched it. He hardened even more when Hana gasped and pushed against him. He pulled her so that she was stretched out on top of him, her vee resting on his hardness. He cupped her ass cheeks and held her still as he ground against her.\n\nHana opened her legs so that they were on either side of Nick's hips allowing his cock to rest between her vaginal lips.\n\n\"Nick...\" she murmured and then moaned when his member glided across her clit coating it with her wetness. Hana sat up and ground against the head of his cock. Nick raised her and slid into her with one smooth thrust stopping when the entire length of him was inside of her. This was his favorite part of making love with her. There was nothing, including orgasm that surpassed the feeling he got when he first slid into her. When he was ready, he began to slowly thrust into her while looking into her eyes.\n\n\"You... feel amazing.\" Nick said as he tried to control the speed of his movements. He reached up and took a nipple between the thumb and forefinger of each hand and rolled, pinched and pulled on it. He felt Hana's vaginal muscles begin to tighten around his cock. He sat up so that Hana was in his lap, kissed her neck and took a nipple into his mouth and suckled on it gently grazing it with his teeth.\n\nHana bit her lip to keep from crying out when she remembered that they had guests in the spare bedroom down the hall. A low moan escaped her lips when she felt Nick's cock grow, throb and then release his seed deep inside of her. Nick held her in place and ground against her, massaging his pubis against her clit until she came with a cry struggling against him to move. When he released her, she ground hard against him and went into a second orgasm.\n\nAfterwards, Hana stayed on top of him as his cock slowly went flaccid. When their breathing returned to normal, Nick turned so that Hana was on lying on the bed, but in his arms. He waited for her to get settled before he brought up the topic of the agency.\n\n\"I knew that you were not... entirely happy at your job.\" Hana said when he told her about the job offer. \"The light in your eyes was missing.\"\n\n\"Hana, I want you to be happy and if saying no will do that then I'll say no.\" Nick replied.\n\nHana didn't reply for several minutes trying to formulate her thoughts.\n\n\"Nick... Just as you want me to be happy, I wish the same for you. I have been watching you ever since this problem with Kenjiro began. There was a light in your eyes that I only see when you are trying to figure out how to keep us safe or when you worked for the agency. I think that if this is what you want to do, then you should do it.\"\n\n\"Hana...\"\n\n\"I am sure.\" Hana replied kissing his chest.\n\n\"I want you to know the main reason for going back.\" Nick said as he took her hand and intertwined his fingers with hers. \"It puts me in a better position to keep you and the others safe. I'll still practice law but I'll primarily be working with the agency.\"\n\n\"I understand.\" Hana replied. \"Just promise me that you will be careful.\"\n\n\"I promise and Hana, thank you.\" Nick said hugging her tight.\n\n\"You are welcome.\" Hana replied. \"We should rest; I need to go to the market before the party.\"\n\nHana went to sleep first with Nick following shortly afterwards.\n\n*\n\nAbby walked around the house feeling relieved that Kenji and Joel were finally safe. She hoped that there would be a period where they could all live their lives without danger or drama. She had no doubt that there would be more trouble. She just hoped that it was months if not years down the road.\n\nAs soon as she heard that the Andrew Kelly situation was winding down, she had gone shopping and restocked the refrigerator and cabinets. It made her feel good to be able to finally do something other than wait for news. She had even baked sugar cookies in anticipation of Kenji and Patricia moving back into the house.\n\nAfter she shopped and put the groceries away, she dusted and did basic housekeeping with the windows and doors open to let the fresh air in. A lump formed in her throat when she opened the back door and saw the trellis that Ralph had converted into a private area for Kenji so that he could sit outside when he was hiding.\n\nShe still missed Ralph and suspected that she always would. Pangs of sadness and regret assailed her when she thought about what she had lost for the second time in her life.\n\n\"I miss you old man.\" She murmured as she wiped away a tear. She took a cutting of the plant that still thrived to take it home to start a plant of her own. On occasion, she would talk to Ralph choosing to believe that he could hear her.\n\n\"I guess you know what's been happening.\" She said as she put the cutting into a glass of water. \"Thank goodness it's over. I wish that you were here to see Kenji, Patricia and the children. You would be so proud of them. I know that you never cared for Hiroshi, but Ralph; he stepped up to the plate when they needed a place to go. He even took in Joel and his girlfriend. I really believe that he's changed. I can hear you now making that funny noise in your throat when you don't believe something.\"\n\nShe continued the one sided conversation as she puttered around the house. Finally, when things were as she wanted them, she left after making sure that the doors and windows were closed. She went home to make her dish for the party that was going to be at Hiroshi's house.\n\n*\n\nWill looked at Sally as she moved around the kitchen. She like the rest of them was glad that the Andrew Kelly issue was for the most part over.\n\n\"Do you think that someone will really defend him?\" She asked.\n\n\"He's entitled to legal representation even though he confessed.\" Will replied. \"The question will be whether he receives the death penalty or life imprisonment.\"\n\n\"What would you like to see happen?\" she asked as she made cole slaw for the party.\n\n\"I'd be happy with either sentence.\" Will replied.\n\nSally hesitated and looked at Will.\n\n\"There is so much hatred... will killing him erase that? I mean will executing him stop the next person who murders someone or tries to hurt someone because of who or what they are?\"\n\n\"Sally, what's on your mind?\" Will asked as he set down his cup of coffee.\n\n\"Nothing... but Will, I know firsthand what hate can do. I lost my son because of it... this is a horrible world to bring a child into.\" She said softly.\n\nWill's ears perked up. Child? What child was she...?\n\n\"Sally, what are you trying to tell me?\" He asked with a pounding heart.\n\n\"Will... I'm pregnant. I don't...\"\n\nHe was already out of his chair and hugging her before she could finish her sentence.\n\n\"I guess you just answered my question.\" She said wiping away tears. \"I was so worried about what you would say.\"\n\n\"I'm thrilled!\" Will exclaimed hugging her again. \"Sit down! Get off your feet...\"\n\n\"Will... I've done this before. I 'm fine.\" Sally said laughing and then she turned serious. \"I meant what I said before about the death penalty and this world. There will always be those who hate, we can't just kill them.\"\n\n\"Kelly isn't being tried because of his views.\" Will reminded her. \"Just as Tyrone Morgan isn't going to be tried because of his views. Both of these men committed murder. Andrew Kelly walked up to an unarmed man and shot him at point blank range and was then going to let his father a decorated war hero take the fall for him. Morgan killed his wife and left her corpse in the woods somewhere. He only got caught because he couldn't keep his mouth shut and because someone saw him dump the body. Why that person didn't come forward before now, I don't know; but these men deserve the death penalty.\n\nThe world is a hard place and it won't get any easier. All we can do is teach our kids as best we can and enjoy the time of peace. I don't know about you, but all I want to concentrate on is having a good time at the party and getting ready for our baby. By the way, I don't care whether it's a boy or a girl. I'm just tickled that I'm going to be a father.\"\n\n\"You're right.\" Sally replied. \"I vote that we tell the kids when they come down for breakfast.\n\n*\n\nSaul peered out of the dusty train window to get his first look at California. His eyes widened at the sight of the palm trees and then again when he saw oranges and grapefruit hanging from trees in people's yards.\n\n\"Lots of folk have trees like that.\" Joshua said when Saul looked at him in amazement. \"We have a lemon and orange tree in front of our house.\" He added.\n\n\"You can eat them?\" Saul asked knowing that he sounded stupid.\n\n\"Yes, they're edible.\" Joshua replied laughing at the expression on Saul's face.\n\nAfter what seemed to be a lifetime, they pulled into Los Angeles. Saul waited with Joshua for the train to empty although he was anxious to be off the train. When they could finally disembark, Saul grabbed Joshua's satchel before the older man could reach it.\n\n\"You best better let me do that.\" Joshua replied. \"It won't look right for you to carry my bag. If anything, it should be the other way around.\"\n\n\"You're not carrying my bag.\" Saul replied stubbornly.\n\n\"Fine.\" Joshua replied. \"All I'm saying is that it wouldn't look natural.\"\n\n\"And taking a white man home with you is natural?\" Saul asked.\n\n\"Touch\u00e9.\" Joshua replied with a smile. \"Touch\u00e9 is a French word for touch.\" Joshua explained when he saw the confusion in Saul's face. \"In this case it means that you successfully made your point. However, that doesn't change the fact that you are not going to carry my bag for me.\"\n\nFinally, they could get off, each of them carrying their own bag. Saul looked around in amazement. The air while warm felt much different than the air at home. He even thought that it smelled different.\n\nHe looked around for the baggage office locating it in the far corner of the station. \n\n\"I'm going to see if I can get a job.\" Saul said to Joshua. \"Say your prayers.\"\n\nHe made his way across the station with Joshua following close behind. He walked up to the window and waited until the man behind it looked up at him.\n\n\"What?\" he asked.\n\n\"I... I was wondering if you had any jobs open.\" Saul replied.\n\n\"I ain't got nothin except luggage duty and it's mostly the Negroes that hold that position.\" The man replied.\n\n\"I don't care about that.\" Saul replied. \"I need a job. When can I start?\"\n\nThe man peered at him through thick glasses.\n\n\"You look strong enough.\" He mused. \"I'm telling you now... don't expect any help from the blacks. They don't take too kindly to interlopers. The pay is seventy cents an hour. The cost of your uniform will be taken out of your pay.\"\n\n\"How much is the uniform?\" Saul asked. It really didn't matter, he needed the job, but he had to know how much money he could expect to make.\n\n\"A dollar a week is taken off for ten weeks.\" The man replied.\n\nSaul did a quick calculation in his head. His gross pay would be forty-four dollars a week, forty three minus the dollar. If he got three uniforms, he would still have plenty of money to send home and to pay his way with Joshua. If he was lucky, in a few months he would be able to save enough to rent a small room somewhere.\n\n\"I want three uniforms.\" He said after a few minutes.\n\n\"Three?\" The man asked surprised. \"Most start out with one. You don't get the uniform until the first dollar comes out of your pay.\"\n\n\"What if I pay the first dollar now?\" Saul asked.\n\n\"Then you get a uniform.\" The man replied.\n\nSaul closed his eyes and calculated how much money he would have left if he gave three dollars for the first payment. Eight dollars.\n\n\"I'll take two uniforms and I want a receipt.\" Saul said.\n\nThirty minutes later, he and Joshua were leaving the station. They got a few odd looks as they walked the fifteen blocks to Joshua's house. As they walked, Joshua told him about his wife Cora.\n\n\"She's a good woman, but she's been through a lot. We had three children, all of them are gone. The girl died soon after she was born. Our second -- a boy died before the war. We don't know what happened to him, he just died. The youngest died during the war, killed during an explosion. He was helping to load ammunition on a ship. No one really knows how the explosion happened. We didn't want him to go, but he wanted to go. He said that he wanted to serve his country.\"\n\nJoshua gave a bitter laugh before continuing.\n\n\"They didn't even come to tell us. We got a letter in the mail. That's real appreciation for you. Anyway, Cora is still aching over that one as am I. I think that it'll do her good to have another young man to hover over.\"\n\n\"I'm sorry about your children.\" Saul said not knowing what else to say. He couldn't imagine going through the loss that Joshua and his wife had gone through. \"Are you sure she'll be alright with me staying with you?\"\n\n\"Thank you for the condolences and I'm sure that it will be fine. It isn't much further... Saul, you'll need to watch your back. You'll be leaving early in the morning, but if something happens, no one will help you. Do you get what I'm saying?\"\n\nSaul understood. Joshua and his wife lived in what was considered the black part of town and he was the enemy.\n\n\"Will my staying with you cause problems?\" Saul asked.\n\n\"Probably.\" Joshua replied with a smile, \"But it won't be anything that I can't handle.\"\n\nThree long blocks later, they were standing in front of a small house.\n\n\"This is it.\" Joshua said \"It isn't much, but its home.\"\n\n\"Joshua, thank you... I...\"\n\n\"You're welcome.\" Joshua said interrupting him. \"I smell dinner and that slice of bread has long worn off.\"\n\n\"Cora! I'm home and I brought as guest with me!\" Joshua called out.\n\n\"Joshua what did you drag...?\"\n\nCora's voice faltered when she saw Saul standing by the door.\n\n\"Sweetheart, this is my friend Saul Mullins. We became acquainted on the train and I've invited him to stay with us until he is on his feet. Saul, this lovely woman is my wife Cora.\"\n\nCora continued to stare at Saul who blushed furiously.\n\n\"It's a pleasure to meet you ma'am and thank you for your kindness.\"\n\nIt took Cora several seconds to recover.\n\n\"I... I... please come in.\" she said in a voice that was every bit as cultured as her husband's. \"I apologize for me reaction... I wasn't ...\"\n\n\"I understand.\" Saul replied. \"I don't want to cause trouble...\"\n\n\"No trouble.\" Cora said now completely over her shock. \"You must be hungry. I made supper, it isn't fine dining but it'll fill your stomach.\"\n\nOnce again Saul was touched by the generosity of strangers. \n\n\"Thank you ma'am.\" Saul replied humbled.\n\n\"Joshua why don't you show Saul where the washroom is and I'll finish dinner.\" Cora said with a smile that reached her dark eyes.\n\nSaul followed Joshua to the bathroom fully expecting to be led to an outhouse. Joshua laughed at his surprise.\n\n\"It's much different than where you came from isn't it?\" he asked. \"There are fresh towels under the sink if you want to take a shower or wash up. After supper I'll show you where you'll be sleeping.\"\n\nJoshua left Saul alone in the bathroom to help Cora finish supper. Saul turned the water on and washed his face with cold water. He was finally in California with a job and a place to stay. The next step as figuring out what he was supposed to do.\n\nJoshua's words about Jacob being murdered stuck with him. The statement that sometimes it only takes one person bounced around in his head. But what was he supposed to do? He was a convict. Who would believe him? Who could he go to that would be able to do anything even if he found someone to tell.\"\n\nSuddenly, he was exhausted and hungry. The thought of food and a bed pushed the other thoughts out of his mind.\n\nDinner consisted of beans seasoned with pieces of pork and homemade bread with butter and orange marmalade. Saul's stomach clenched at the sight of the food. It smelled like heaven. He put his hands in his lap to fight the urge to grab a slice of the fresh bread and cram it in his mouth.\n\nCora served him first, filling his bowl to the brim with the hot food. She served Joshua next and then herself. Joshua said a prayer of thanks for the food and that their meeting might be for the greater good.\n\nSaul hesitated and then dug in. He moaned in pleasure as he took a bite of the bread and slowly chewed it and swallowed. He dug into the beans with gusto not stopping until the bowl was empty.\n\nOne more bowl of beans and three slices of bread slathered with marmalade later, Saul was sated.\n\n\"Miss Cora... thank you! That was delicious.\"\n\n\"You're welcome.\" She replied beaming. \"Do you have room for dessert?\"\n\n\"Yes ma'am!\" Saul exclaimed.\n\nDessert consisted of chilled orange and grapefruit slices which Saul consumed with as much gusto as he had the main meal. After dinner all he wanted to do was sleep, but he didn't want to be rude.\n\n\"Come on Saul, I'll show you to your room. It's cluttered like I told you, but we'll work on it tomorrow. The bed is cleared off; I did that while you were in the bathroom.\" Joshua said. \"As the Spanish say, mi casa is su casa- my house is your house so make yourself at home.\"\n\nSaul wished Joshua a good night, kicked off his shoes and lay on the bed fully clothed he was sound asleep within seconds of his head hitting the pillow.\n\n*****\n\nAndrew stared at the wall replaying the events of the past several hours over and over in his mind. Finally, he realized that his arrest had been inevitable. He was going to prison and he was never getting out. He gave up the idea of offering Hathaway. For one, he had no idea of where he was and chances were neither did his wife. He had also given up the idea of throwing suspicion on the Jew that had the clip. It didn't make sense that the Jew kept the clip but not the gun. The other issue was that the Jew wouldn't be able to answer the questions any more than his father had been able to.\n\nHe stretched out on the cot trying to make his brain stop working, to stop it from seeking a solution out of his predicament when there was none. He sat up on the cot, put his head in his hands and whispered apologies to his parents. They had done nothing to deserve what was going to happen to them. He hoped that his father would do as he asked and stay away from the courtroom.\n\nWhen the uniformed policeman came to check on him, Andrew asked for a pen and paper. He was going to write a letter of apology. Not to Milton Vaughn's parents, but to his own. A few minutes later, he had his pen and paper and under the watchful eye of the policeman; began to write his letter.\n\n*****\n\nErnie sat in the car waiting for Kenji and Joel to show up. He still couldn't believe that Andrew was behind bars. He also realized that his father had been right. They could be mourning his death or his going to prison. He had indeed been lucky. \n\nHe looked over just as Kenji and Joel pulled up, swallowed his nerves and got out of the car. Kenji and then Joel got out but only Kenji spoke to him. Joel glared at him making it clear that he was only there because of Kenji. \n\nThe three men walked to the library without speaking and stopped at the door.\n\n\"I think that an empty classroom would be better.\" Kenji said. \"That way we can talk without disturbing anyone.\"\n\nA few minutes later, they were sitting in a class room with their books open. Ernie took a deep breath and spoke before Kenji did.\n\n\"Wait.\" He said softly. \"I know that I apologized at Milt's funeral and I know that you Joel didn't believe me. I also know that neither of you didn't have to come today... I just wanted to say thank you and... I'm sorry. What I did to you was reprehensible and a violation of the Hippocratic Oath. I allowed myself to be drawn into something that I knew was wrong just so I would be accepted. Joel, I know that we could have ruined your medical career by what we did... There is no way that I can take that back although I wish that I could...\"",
        "\"That's nice.\" Joel said sarcastically. \"You can wish all you want and you can apologize until the damned cows come home, but I'm not buying it. The only reason why you didn't stay in the group was because you got kicked out.\"\n\n\"That isn't true!\" Ernie retorted.\n\n\"Isn't it?\" Joel shot back. \"Are you telling me that you would have left the group on your own?\"\n\nErnie didn't reply. There was an element of truth to what Joel was saying. Hadn't he told Becca that she had inadvertently saved his life?\n\n\"You... you may be right.\" He finally said. \"But I would like to think that I would have come to my senses.\"\n\n\"Before or after your buddy killed one of us?\" Joel shouted. \"The sick bastard was gunning for us and you were a friend of his so forgive me if I'm not like Kenji who sees the best in everyone. I don't like or trust you. For all we know you could be the new leader for his group.\"\n\n\"What?\" Ernie asked in shock. \"You weren't the only ones in his line of fire! He saw me talking to you at the funeral and the other day. He threatened me too! I spent most of last night trying to decide if I was coming today and if you don't believe that I was threatened, talk to his friend Peter; he was there. If anyone is the new leader; it's him.\"\n\nKenji sat back and listened. Joel needed to have his say and so did Ernie. He hoped that Ernie didn't say anything about Peter working for the government. For all he knew, Peter was still undercover. To his relief, Joel didn't say anything about Peter.\n\n\"All I'm going to say to you is this, I'll help you but outside of this little study group; stay the hell away from me. If Kenji and Patricia want to speak to you that's their choice but personally, I think that you're a piece of shit.\"\n\nErnie was taken aback by the vehemence in Joel's voice. He had apologized and that was all that he could do.\n\n\"Are we ready to start?\" Kenji asked quietly.\n\nBy the end of an hour, Ernie had a basic understanding of the principle of genetics. The way that Kenji explained it made him wonder why he thought that it was so difficult before.\n\n\"If you remember the basic things.\" Kenji said. \"The rest will fall into place.\"\n\n\"Thank you.\" Ernie murmured looking at Kenji and not Joel.\n\n\"You are welcome.\" Kenji said with a slight bow to which to his surprise; Ernie returned. \n\nAs they left, Ernie had one more thing to say.\n\n\"I wish that I had been stronger. If I had been we would be friends and the fact that we aren't is my loss.\"\n\nHe hurried off before either Kenji or Joel could reply.\n\nJoel looked at Kenji still not convinced that Ernie was sincere and if he was how long it would last. They drove back to the house to pick up Patricia who was waiting with a tray of deviled eggs.\n\n\"A little elf was here while we were gone and stocked the fridge.\" She said with a smile. \"The same little elf left you a plate of sugar cookies.\" She added.\n\n\"It must have been Abby.\" Joel commented as he took two cookies from the offered plate after Kenji helped himself.\n\n\"She even dusted!\" Patricia exclaimed. \"But we need to get moving. I want to help Dai get ready for this afternoon and get Marie and Ralph's things packed and in the car.\"\n\nKenji picked up the platter of eggs, grabbed a few more cookies off the plate and followed Patricia and Joel out of the house. It was going to feel good to be home again.\n\n****\n\nOne by one members of Andrew's group were brought in for questioning. All of them had believed that Andrew killed Milton Vaughn and all of them said that they didn't come forward for two reasons. They had no proof and they were afraid of Andrew. Of the ten members, only one was of any concern to Briscoe and the agency. Duke Stackhouse. While he was afraid of Andrew, he wasn't as afraid of him as the others had been. If anyone was going to take over, it would be him.\n\nCharles and Briscoe sat down with the burly med student and decided to be straight forward with him.\n\n\"Your friend is going to prison, do you understand that?\" Briscoe asked.\n\n\"He isn't my friend!\" Duke spat. \"He's a coward who didn't do what needed to be done.\"\n\nBriscoe and Charles looked at each other alarmed.\n\n\"And what was that?\" Briscoe asked.\n\n\"He wasted too much time fucking around... that Jap should have been dead months ago. If it had been me, he would have been.\"\n\nCharles couldn't believe what he was hearing. The man was actually saying that he would have murdered someone.\n\n\"You're admitting that you would have killed someone?\"\n\nDuke leaned forward in his chair, rested his elbows on the table and gave Charles a penetrating stare.\n\n\"Let me explain something to you.\" He said in a low voice. \"Andrew was and is a coward. He rode on his daddy's hero status. That's how he got a free ride for school. He wasn't and isn't a true believer. But to answer your question, fuck yeah I would have killed the Jap, the nigger bitch and the Jew; but you can't arrest me for that can you?\"\n\n\"No I can't you bigoted son of a bitch.\" Charles replied. \"But I can do this, as of this moment, you're on our watch list. Let me explain what that means. It means that if anything happens to anyone of any race or nationality, we come for you first. Each of your buddies that we talked to is also on that list as of this moment.\"\n\n\"You can't...\"\n\n\"I just did.\" Charles interrupted. \"I'm quite sure that Detective Briscoe has a similar list so you see, between the two of us you won't be able to take a leak without us knowing it.\"\n\nDuke glared at them, stood up and walked to the door.\n\n\"Hey jackass!\" Charles called out. \"Remember what I said.\"\n\nDuke stiffened and kept walking.\n\n\"Do you think he bought it?\" Briscoe asked.\n\n\"Bought what? I was serious.\" Charles replied. \"He sat there and said that he would kill. He bears watching. In fact, I'm going to keep Peter undercover. He has to take the same classes anyway. If I were you, \"Charles continued, \"I would keep an eye on him and anyone else in that group.\"\n\n\"Noted, how soon do you expect Kelly to go to trial?\" Briscoe asked.\n\n\"That will depend on what his lawyer tells him.\" Charles replied. \"If he's smart he'll advise Kelly to plead guilty to take the death penalty off the table and not take it to trial. I would bet my bottom dollar that Andrew is already thinking along those lines. I have to agree with Duke; Andrew is a coward and not a true believer.\"\n\n\"Well, I hope for the sake of his family Kelly pleads out.\" Briscoe said. \n\n\"I hope so too.\" Charles said quietly.\n\n*\n\nAndrew finished the letter to his parents and gave it to the police officer who was waiting with him. He had already made his decision. The only way to guarantee that his parents didn't show up at the trial was to make sure that there wasn't one. He also knew that if he pled guilty, that he wouldn't get the death penalty. His letter included the request that his parents didn't come to see him in prison. In fact, he didn't even want them to write to him.\n\n\"Disown me. It will make things much easier for you if you do. Don't write to me or call me, it will only make things harder on you. If you can; forget that you have a son. I love you both and I'm sorry that I disappointed you.\"\n\nAndrew lay on his cot feeling oddly at peace with his decision. He began to emotionally prepare himself for a life of not ever being able to walk free again.\n\n***\n\nThe party was in full swing by the time Charles arrived with his fianc\u00e9e Marilyn. Other than Nick, she was the only one who knew that he had black blood in him and she hadn't cared. Peter and Trevor arrived shortly after Charles and were fawned over by Hattie and Abby. \n\n\"I'm fine.\" Peter kept saying to anyone who asked.\n\nJoel pulled him aside and told him what Ernie said about being threatened by Andrew.\n\n\"Is it true?\"\n\n\"It's true.\" Peter replied. \"In fact, Ernie was the first one to call the police about Andrew even though he was scared shitless. And yes, Andrew would have killed him. I know what he did to you and I'm not about to tell you that you shouldn't be angry or to let it go, but a word of caution. It was anger that drove Andrew Kelly to do what he did and as much as I hate to say it, none of us are immune to being driven to hurt someone because of anger or hatred.\"\n\nJoel was going to reply when Will's voice boomed out.\n\n\"Ladies, gentlemen and children! May I have your attention please! Sally and I have an important announcement...We're having our first baby together!\"\n\nCheers and claps filled the air as people hugged and congratulated the couple. The party became a celebration of another sort. Andrew Kelly was forgotten as people celebrated the future arrival of a new life. In three months the New Year would be upon them. Even though it was early, everyone was praying for a peaceful year.\n\n***\n\nAfter spending the weekend in jail, Andrew met with his attorney who told him what he had already suspected.\n\n\"If we go to trial, I can guarantee that we'll lose. If that happens, you'll be executed so my advice to you is to plead guilty. You'll spend the rest of your life in prison, but you'll be alive. The choice is yours.\"\n\nNow that the time had come, Andrew wasn't sure that he wanted to give in.\n\n\"You're sure that there's no way that we can win?\" he asked.\n\n\"Andrew, you confessed. You were going to let your father go to prison for you. You had the gun and yes it was missing the clip, but a federal agent heard your father asking where the clip was and then you shot the agent! You carried as weapon to school with the intent to commit another murder... need I continue?\"\n\n\"No.\" Andrew murmured with his head down.\n\n\"I have the papers here and I would strongly advise that you sign it.\" His attorney said as he took the papers from his briefcase and laid them on the table.\n\nAndrew looked at the papers and asked one final question.\n\n\"Is there any chance that I'll get out?\"\n\n\"The papers are for life imprisonment without the possibility of parole... that's what you would be agreeing to.\"\n\nAndrew slowly picked up the pen, closed his eyes and slowly opened them. A moment later, he signed the papers. At that moment, he was no longer Andrew Kelly medical student; he was Andrew Kelly the murderer and lifelong prisoner.\n\n****\n\nNick and Will waited in Charles' office for word from Andrew's attorney. Nick had already informed Charles that he would be rejoining the agency on an as needed basis. It was the best compromise that he could come up with.\n\n\"If you don't mind, is it possible to have a private office?\" Nick asked.\n\n\"I don't see why not.\" Charles replied. \"The office next to mine is empty.\"\n\nNick's secretary knocked on the door.\n\n\"I have the paper and coffee for you.\" she said with a smile that was only for Nick.\n\n\"Oh, thanks.\" Nick replied not returning the smile.\n\nHe picked up the paper and stared. He reread the headlines three times.\n\n\"The California Supreme Court Rules Banning of Interracial Marriage Unconstitutional\n\nThe California supreme court has ruled that anti-miscegenation laws violate the Fourteenth Amendment of the Constitution...\"\n\nNick jumped out of his chair and raced for the door.\n\n\"Call me at home!\" he yelled on his way out.\n\n\"What just happened?\" Charles asked as he picked up the paper. When he saw the headlines, he understood.\n\n****\n\nHana was in the back yard picking up the fruit that had fallen to the ground. She heard Nick shouting for her and panicked. She dropped the bag of fruit and ran into the house.\n\n\"Nick? What ...\"\n\n\"Hana will you marry me?\"\n\n\"Nick... we ...\"\n\n\"Hana, it's legal! The Supreme Court says that we can get married! Will you legally marry me?\"\n\n\"I... is this a trick?\" Hana asked in a hushed voice.\n\n\"No baby, it was today's headline in the paper. We don't have to keep our relationship a secret anymore... will you marry me?\" he asked for the third time.\n\n\"Yes!\" Hana replied and jumped into his arms.\n\nThe year was ending on as positive note for everyone except for Andrew Kelly and his family. Nineteen-forty nine was going to be a good year."
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "drama",
        "japanese",
        "black female",
        "japanese man",
        "asian man",
        "interracial romance",
        "romance novella",
        "historical"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-13"
}