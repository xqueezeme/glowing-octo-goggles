{
    "title": "Her Second Job Ch. 05",
    "pages": [
        "This is the fifth story in this series. Once again, I've fallen in love with my own characters. I hope you have as much fun reading about Denise Hines and her boyfriend as I've had writing about them. This story will make much more sense if you've already read Her Second Job chapters 1 -4.\n\nWhile the series was inspired by things which really happened many years ago, this story is complete fiction. Any similarities between any character in this story and any real person are coincidental and unintended. Comments on this story, both favorable and unfavorable, are always welcome. Thank you for reading.\n\n________________\n\nDenise and I were fired by Sparks, Herman & Mann in mid-August. We still hadn't found regular jobs by year end. We were still dancing naked in New Bethel each weekend. That earned us enough to live on, barely. Of course, it was the dancing which got us fired.\n\nTo keep us and the bar's regular customers from getting bored, Danielle had choreographed a couple new dances for us. I feared we were, at least, pushing the Department of Liquor Control's limits. Both new dances had my hands on Denise's breasts several times. Danielle had conceived moves for Denise that \"accidently\" brushed my dick. \n\nThe new dances had different endings. In one, I stood at center stage with the audience to my right. Denise was on her knees in front of me with her face about an inch from my dick. The other ending had me squatting at center stage with my hands together, palms up, in front of my chin. Denise jumped on me with one leg over each of my shoulders and her ass in my hands. Once I caught Denise, I stood and made a complete circle, ending with my front and Denise's back to the audience. It took some time, and a few bumps and bruises, before we got that one right.\n\nIn the ending with Denise in front of my face, I realized that, if I raised my arms a little, I could reach her pussy with my tongue. Since my head was between her legs, I figured no one would see my face. The first time onstage, I was licking Denise's outer lips as I spun us around and held her in front of the audience.\n\nBackstage after that dance, Denise was laughing. \"That naughty man!\" she said, pointing at me.\n\n\"What'd he do? Alicia asked.\n\n\"He was licking my cunt lips as he held me up in front of the audience!\" Denise said.\n\n\"Did you enjoy it?\" Kurt asked.\n\n\"Well, yeah,\" Denise replied, \"but he's going to get us in trouble.\"\n\n\"No one can see his face,\" Kurt said. \"this is one time that, if it feels good, do it.\" It was Kurt's liquor license.\n\nDenise retaliated, sort of. When we did the dance ending with her kneeling in front of me, she started surreptitiously blowing on my dick. She made it tough for me to get off stage before I got a hard-on.\n\nDenise had moved into my apartment. Her apartment was much nicer than mine, but mine was cheaper. We spent very little on the holiday that year. But, living with Denise, what greater gift could I get? I felt bad that I couldn't give her something nice like she deserved.\n\nI was glad, that year, that neither Denise nor I had much family. I was an only child and I'd lost both parents in a private plane crash during law school. Denise's parents had been older when they had her. Her mom had died of cancer while she was in high school and her dad had a fatal heart attack her senior year of college. Denise had a brother, David, who was about ten years older than her. He was career Army and had been deployed overseas for a long time. He called her two or three times a year and she sent him letters, mailed to an address in California.\n\nNew Year's Eve fell in the middle of the week that year. Kurt didn't think it was wise to have nude dancing that night given the excessive drinking that attends the holiday. Without dancing, the bar didn't do that much business, so Kurt decided to close for New Year's Eve. Instead, he and Danielle hosted a party for everyone who worked at the bar.\n\nI had assumed that we were going to Danielle's and Kurt's party until, on December 29, Denise told me that she'd told Danielle we couldn't make it. I guess I gave her a perplexed look because Denise said, \"Harry, with everything that's happened, I just want to spend the night with you. We'll end the old year together and I'll start the new one with the person who matters most to me.\" When the most beautiful woman alive says that to you, you just say \"of course we will.\"\n\nWe decided to do without electric lights that night, instead lighting candles around the apartment. We made an early dinner with Denise wearing only the apron I'd given her for Christmas. After dinner, we sipped wine, talked, and explored each other. I was very familiar with all of Denise's body by that point. I still found it infinitely fascinating. Denise's mind is even more beautiful than her body and I was torn between touching her and listening to her. I compromised and did both.\n\nDenise wanted us to make love at midnight. We got in bed about 11:30. We usually made love with one on top of the other. That night, we lay on our sides facing each other. Denise raised a leg, guided me in, and put her leg back down on my hip. There was something nice being together on the same level. We kissed, nibbled, and made love very slowly. Once we heard the church bell and fireworks at midnight, we got more energetic. Simultaneous orgasms were the beginning of our New Year.\n\nAfter we made love, Denise and I lay there, facing each other and listening to the noises from the street. Finally, Denise said, \"Promise me something Harry.\"\n\n\"I promise,\" I said.\n\nDenise giggled. \"You don't know what I want.\"\n\n\"For you, I'll do anything,\" I replied. \"What did I just promise?\" \n\n\"You promised me, \"Denise said, \"that we'll spend every New Year's like this, just us, making love at midnight. You know I love people and I love showing off, but I want us to start every year reminding each other that we are the most important things in each other's lives.\"\n\n\"That's easy,\" I said. \"I was afraid you wanted me to do something difficult like find a job.\"\n\nDenise moved her face closer to mine. \"Every year for the rest of our lives Harry,\" she said. We'd never talked about our long-term future together. In the back of my mind, I thought that all good things come to an end and that Denise would eventually leave. I knew how seriously Denise took commitments. What she'd just said made me happier than I'd ever been.\n\nI kissed Denise for a long time. When we ended the kiss, I said, \"for the rest of our lives.\" We made love again. Denise got on top this time. Her gorgeous face became more beautiful when we made love. That night, she also looked happier than I could ever remember.\n\nI got a call during the first week of January from a woman named Vanessa Gibson. \"I'm a lawyer and have my own office,\" she said. \"I know Lena Mann. She told me what her husband did to you and Ms. Hines. I think I may have something for both of you. Will you send me your resumes?\" Denise e-mailed our resumes to the address Ms. Gibson gave me. A couple of hours later, Gibson called back and asked us to meet her at her office the next day. We didn't have anything else going on.\n\nWe assumed we were going for a job interview, so I wore a suit and tie. Denise wore a dark wool skirt, jacket, beige blouse, and low heels. Vanessa Gibson's office was on the third floor of a rehabbed brick building in an area just north of Downtown called \"The Overlook.\" The Overlook had been a slum for decades before it had started gentrifying rapidly about ten years earlier. There was an art gallery on the first floor of the building.\n\nVanessa Gibson met us in front of the elevator on the first floor and we rode up together. I later learned that she was 12 years older than Denise and me. She was about my height with curly black hair and cute but intelligent-looking face. She was slender which was emphasized by the dark purple dress she wore. It was one of those dresses that wrap around the body, secured by a belt. She wore heels but no hose. I thought I saw her nipples pushing against her dress and wondered whether she was wearing anything under the dress.\n\nWe went from the elevator into a small anteroom with doors in front of us and one each to the right and left. Mounted on the wall was \"Gibson Law Offices.\" Vanessa Gibson opened the door to our right and led us into a typical conference room.\n\nOnce we were seated, Gibson said, \"I know Lena Mann through my dad, Seth Gibson. He's a tax partner at SHM.\" I recognized the name. \"He thinks you were treated pretty badly by his firm, by the way, although his understand of what happened is a lot different than what Lena told me. I know about your dancing and I'm totally ok with that.\"\n\nGibson leaned back for a moment, then straightened. \"To understand what I do,\" she said, \"you need to know a bit about me. I got my bachelor's and master's in sociology. My focus was on sexual behavior. I got very interested in what I call 'non-traditional means of pleasure.'\" She laughed. \"I probably got too far into it. I've been tied down and had my bare ass whipped in front of a room full of people. Thank god that didn't leave any lasting marks. I'm proud of my ass. I spent six months stripping in a full nude club in Atlanta. That was a blast. What I noticed was that people sometimes had legal issues arising from their sexual activities. Most lawyers either weren't interested or were condescending and judgmental to people whose sexual conduct was 'perverted.' I've had my own firm for ten years now. The firm exists to serve people in that space where law and sexuality intersect. I represent clients diligently, compassionately, and without judgment; treating them as people rather than perverts.\"\n\nGibson took a sip of water before continuing. \"I represent a wide range of people. Strippers, club owners, porn producers, porn performers, escorts, and just regular folks whose quest for pleasure has created issues. We handle just about every area of law except tax: from copyright to tort to criminal. The common thread in our cases is that there is some sexual conduct involved. I have this office and one in Chicago. I prefer to spend most of my time in Chicago but the woman who handled this office left me at the end of November to get married, so I need someone here.\"\n\n\"How do you make money?\" I asked.\n\n\"Good question,\" Ms. Gibson replied. \"Club owners and pornographers often make a lot of money, and a surprising number of wealthy folks have kinks that produce legal issues. I bill them hourly and love them. I do things like revenge porn cases on contingent fee. A private foundation gives me some money to help escorts and street hookers, particularly women forced into the life. I have more than enough work like that in Chicago. This city doesn't generate as much interesting work, so I also do a standard practice, primarily plaintiff's personal injury, consumer fraud, etc. Thanks in part to Dad, I've got more of that work being referred than I can handle. I'd like someone to take it on so I can spend most of my time in Chicago. I'm offering you that job.\"\n\nGibson went on to outline her terms. She'd guarantee us each $50,000/year salary and pay all expenses. If the office made a profit over its expenses, she'd share that 30% to her and 70% to us.\n\n\"Why so generous?\" I asked.\n\nGibson smiled, \"The thirty percent is mine for generating the work. Seventy percent is yours for doing the work.\" She paused before adding, \"Mr. Stone, you know that we are ethically prohibited from sharing fees with non-lawyers?\" I nodded. \"That out of the way,\" she said, \"I assume that anything paid to you is really going to both you and Ms. Hines.\"\n\n\"Absolutely,\" I confirmed.\n\n\"Are you two interested?\" Gibson asked. I looked at Denise.\n\n\"Very interested,\" Denise answered.\n\n\"Great!\" Gibson said. \"Stand up, take your clothes off, and I'll show you the office.\"\n\nI'd never stripped naked in a job interview before but, given what Gibson had told us, I wasn't too surprised by her instructions. I looked at Denise. She had taken her jacket off and was stepping out of her shoes. I got my suit off quickly. Denise is most beautiful naked. But I think it is very sexy to watch her undress, especially when she's wearing \"professional\" clothes.\n\nWhen we were both nude, Denise and I stood facing Vanessa Gibson. She looked us over for a moment. Denise reached out and took my hand. Suddenly, Gibson undid her belt, shucked her dress off, and stepped out of her heels. As I'd suspected, she was nude under the dress. She turned to open a door in the wall behind her. She was right. She had a very tight, perfectly shaped ass. \n\nWe followed her into a high ceiling room, narrow from side-to-side but long front-to-back. There were a couple of desks and credenzas arranged in L-shaped configurations. Computer monitors stood on both desks. File cabinets and a large copy machine stood against the far wall. A large worktable sat in front of the desks. The front wall had four large sash windows that ran almost floor to ceiling. Across the street, I could see a room with people in it. Four upholstered chairs sat in a semi-circle by the windows.\n\n\"This is the working office,\" Gibson said. She pointed to a door at the back of the room. \"There's a small apartment back there that I use when I'm in town. Full kitchen, sofa, separate bedroom, and a bathroom with a small shower. The shower can hold two if you like each other. You'd be free to use the apartment whenever you want. Just wash the sheets.\"\n\nGibson walked to the chairs by the window, waved to someone across the street, and sat down. Denise and I sat in chairs facing her. Gibson said, \"I usually work nude if we don't have strangers in the office. I wouldn't require you to do that, but I'd appreciate it if you did. I assume we can switch to first names since we're all naked. Denise, in addition to being paralegal, I'd expect you to manage the office. Keep the books, manage the trust account, keep Harry on schedule, make sure the office has all necessary supplies. Can you do that?\"\n\n\"Yes,\" Denise said immediately.\n\nVanessa stood. \"Ok,\" she said, \"you want to get dressed, go home, and think about it?\"\n\nI looked at Denise. She nodded her head affirmatively. I knew that didn't mean go home and think about it. \"We'll take the jobs Vanessa,\" I said.\n\nVanessa clapped her hands. \"Great! When do you want to start?\"\n\n\"February 1?\" I proposed.\n\n\"Exactly what I was going to suggest,\" Vanessa replied. \"I'm excited. From what I've learned about you and what I've seen today, I think we'll enjoy working with each other.\"\n\n\"One other thing,\" Vanessa said. \"I own this building. That's a separate business from the law practice. I've got two tenants: the art gallery on one and a photographer on two. Denise, would you be my building manager: collect rents, pay the taxes and water bill, get anything that breaks fixed? I'll pay you another $ 1,200 per month for that.\"\n\n\"Certainly,\" Denise replied.\n\nThe building had a gated parking lot next to it. Vanessa had given us the code so we could park there when we came for our interview. As we walked back outside, dressed, Denise took my arm. Smiling, she said, \"Vanessa would appreciate it if we work nude in the office? I think we've found perfect jobs.\"\n\n\"I'm sure the guys across the street won't mind the upgrade from Vanessa to you,\" I said. \n\nDenise punched me gently in the ribs. \"I saw a couple of women over there,\" she giggled.\n\nVanessa approved of our nude dancing but wanted to ensure that it didn't conflict with running the practice. Lena put her in touch with Danielle and Kurt. Denise and I danced that Friday. We were sitting nude backstage having a drink after the midnight show when Kurt made an announcement.\n\n\"Friends,\" Kurt told the room, \"I'm happy to report that Denise and Harry have paying, full-time jobs again.\" That brought a round of applause. \"However, because they're taking on added responsibilities, they won't be able to dance all the time.\" That brought boos. \"Denise and Harry will be dancing every other weekend, subject to circumstances. I'm also pleased to announce that Annie and her boyfriend Colin will dance on the alternate weekends. They will debut next Friday. To promote that, we're starting an 'Is Annie a natural redhead' promotion in the bar. Customers will write down whether they think she is or isn't. Everyone who gets it right, and is here when Annie shows us next Friday, gets a free drink.\"\n\nI looked at Annie, who was standing, clothed, by the door to behind the bar. She was smiling. She said, \"A couple of you know. Don't tell anyone!\"\n\nDenise leaned over to me and said what I was thinking: \"We'll have to be here for Annie's debut.\"\n\nKurt wasn't done. \"One obstacle to letting Annie dance has been replacing her with a female bartender I can trust.\" Kurt pointed to a slender brunette who was sitting in a corner. \"This is Brie, who will tend bar when Annie is dancing. I think I can trust Brie. She's Danielle's niece.\"\n\nBrie stood up. She was elegantly dressed, for the bar, in a skirt and tight sweater. \"It is wonderful to meet you,\" she said in a cultured voice. \"I'm looking forward to becoming a co-worker. Hopefully, I can follow in Annie's footsteps and graduate to a job on stage with a lot less on.\"\n\nDanielle leaned over to Denise and me. \"Brie's my older sister's daughter. She's got an Ivy League degree in English literature and wants to write. She's also an experienced bar tender. Elaine and Ray, her parents, think working here will give her material to write about. Knowing Brie, I think she's looking for an opportunity to show off her bare tits and ass. She and I have things in common.\"\n\nVanessa had cases waiting, so I \"hit the ground running\" in February. I expected crap but she had good cases. I knew Denise was competent, but she went further up in my estimation that first month. She ran the office, handled the money, kept me on schedule, and did a substantial part of the work on the cases. She did all that without ever nagging or losing her patience. \n\nDenise got a call on her cellphone in the afternoon of the first Monday in March. I don't eavesdrop her calls, but even the photographer a floor below heard her yell \"Great! That's wonderful! I can't wait!\" She ended the call and turned to me. \"That was Dave! He's in Hawai'i. He's being rotated back to the States and gets almost three weeks' leave. He's flying here Friday.\"\n\nI was very happy for Denise who hadn't seen her brother for about four years. I was also worried about how her Army officer brother would react to our jobs since we worked nude most of the time in both. I thought could keep Dave out of the office by claiming we had client confidential papers lying around. Denise would have to handle the dancing.\n\nWe were waiting for Dave outside security when his flight arrived Friday afternoon. Despite his civilian clothes, I thought the close-cut blond hair, very erect posture, and measured walk called him out as military. I also noticed that several women watched his progress along the concourse towards us.\n\nDenise gave Dave a very affectionate hug. When she finally let go, he turned to me. I was expecting a hard ass routine. Instead, Dave gave me a friendly smile, extended a hand, and said in a soft voice, \"Harry, Denise and I don't talk often but she writes a lot. Her letters over the last several months have been all about you. It's good to meet you.\"\n\nI didn't think Denise had told Dave about our dancing. I also knew she hadn't asked Kurt for the night off. There was no way Denise was simply going to no-show Danielle and Kurt. \n\nIn the car from the airport, Denise questioned Dave about where he'd been and what he'd been doing. \"I've been a lot of places most Americans don't know we have forces in,\" Dave said. \"I've seen things I hope most Americans never know. If I told you more than that, I'd probably get orders to kill you.\" The dancing didn't come up on the drive. I waited to see how Denise would handle it.",
        "Denise addressed the dancing obliquely, and mischievously, at our apartment. \"Harry,\" Denise said, \"you remember I told you that, when I swam in high school, my pussy was visible through my suit when I was bent over on the blocks starting a race?\"\n\n\"I remember,\" I said.\n\nSmiling, Denise said, \"Who do you think, when he was home, always found his way behind the blocks when I started a race?\"\n\nI looked at Dave. He shrugged and said, \"What's the point of having a hot little sister if you can't perv on her?\" Looking at Denise, he added, \"It's a good thing I got out of the house before she grew up. There might have been incest otherwise.\" The look on Denise's face made me wonder if she would have objected.\n\nDenise cocked one hip to the side. \"Well Dave,\" she said, \"do you want to see it tonight without the wrapper?\"\n\nI'm not sure Dave understood exactly what Denise meant. He looked confused and said, \"well, sure.\" \n\n\"Great!\" Denise said. \"You're coming with us tonight!\"\n\nWe got to the bar in New Bethel just after 9:00 p.m. We usually used the back door, but that night we took Dave into the bar. Denise introduced Dave to Annie behind the bar and added, \"he's my brother.\" Annie raised her eyebrows but didn't say anything. A few bar regulars recognized Denise. She told Dave, \"Gotta work.\" We left him in Annie's care and hurried through the rear door into the backstage room.\n\nDenise did a solo dance in the ten o'clock show. When she came off, she was amped. She threw her arms around me and said, \"I am such a pervert!\"\n\n\"Why?\" I asked.\n\n\"I just danced nude in front of my older brother. I made sure he saw everything. And I'm getting really turned on by it,\" Denise said.\n\n\"Your older brother's here?\" Jessie asked.\n\n\"Yes,\" I said. \"He's an Army guy.\"\n\n\"Oh shit!\" Jessie exclaimed.\n\n\"I am so disgusted that I enjoyed showing myself to my brother!\" Denise exclaimed. She didn't sound disgusted, she sounded proud of herself. Denise must have sensed a pang of jealousy on my part. \"Don't worry Dear,\" she said. \"just because it's a turn on having him see me doesn't mean I'm trading you in for him, or anyone else.\" She kissed me.\n\n\"Smart girl,\" Danielle commented.\n\nDenise and I did our first dance together in the 11 o'clock show. Dancing nude with Denise was always a turn on for both of us. That's why we did it. That night, Denise was unusually passionate on stage. It was, well, very erotic. We crossed a few lines which were usually inviolable. Thankfully, the Liquor Control agents must have been elsewhere.\n\nI came off stage into the backstage room with a full hard-on. \"Look what that woman did to me!\" I said jokingly.\n\nAlicia and Nadine were onstage dancing. Danielle and Jessie looked at me. \"Looks fine to me,\" Jessie said.\n\n\"Me too,\" Danielle added.\n\nDenise grabbed my dick and turned me to face her. \"That's the most fun I've had since we've been doing this together,\" Denise said as she wrapped her arms around me.\n\n\"You want to dance again at midnight?\" Danielle asked.\n\n\"I'd love to,\" Denise answered. In the midnight show, we did the dance that ended with me holding Denise up in front of my face. I stayed onstage a little longer that night so I could give Denise a more thorough licking. \n\nAs we came backstage, Denise was giggling. \"You bastard!\" she said. \"You almost made me come in front of my own brother!\"\n\nWe talked Kurt into letting Dave come backstage when the bar closed. Denise, Danielle, Alicia, Jessie, Nadine, and I were all naked when Dave walked into the room. Denise and I were standing next to each other. Dave stopped and took a long look at his naked little sister. Finally, he said, \"Damn Sis, you are drop-dead gorgeous.\"\n\nDenise, worried that Dave might blame me for her dancing in a bar with no clothes on, said, \"Dave, I was doing this before Harry, and I hooked up. I talked him into it, not vice versa.\"\n\nThe other four nude women had clustered around us. Dave looked at them and then said, \"Denise, I'm cool with it. Harry, you've already died and gone to Heaven.\"\n\n\"I hope you didn't get bored sitting out there so long,\" I said.\n\n\"Nope,\" Dave replied, \"I love beautiful women, especially when they're naked. That gorgeous redhead, Annie, was comping me beers. I probably drank too much, but I've had a good time.\"\n\nDave seem drunk to me. I noticed that all five women, even Denise, were swishing their bare asses more noticeably with Dave in the room. Nadine seemed to have affixed herself to his elbow.\n\nAnnie brought in a tray of drinks. Dave kept looking around at the five nude women, all of whom were making sure Dave could see everything. However, he asked me \"Harry, it doesn't bother you showing your dick in public?\"\n\nI put an arm around Denise's bare shoulders. \"Not when I'm with her,\" I answered.\n\n\"Ok, I get that,\" Dave said. \"You two did look like you were made for each other out there.\"\n\nDave came with us to the bar Saturday night too. We dropped him at the apartment afterwards. Since our apartment only had one bed, we let Dave stay there. Denise and I slept in the apartment at the office.\n\nDenise and I were off the following weekend. Friday night, we took Dave out to dinner with Lena Mann. Dave had the same effect on Lena he'd had on every other woman he'd encountered since he got off the plane. Within half an hour, it was clear that Lena was having an effect on Dave. By the end of the dinner, Denise and I were sitting quietly letting Lena and Dave talk to each other.\n\nDenise intended that we'd cook dinner for Dave that Saturday night. She called him from our office apartment that morning. When she finished the call, she came out into the office where I was working. She had a grin on her face.\n\n\"We won't be fixing Dave dinner,\" Denise said, \"at least not tonight.\"\n\n\"Why not?\" I asked.\n\n\"Lena already invited him to dinner at her place,\" Denise said. \"Just him, not us.\"\n\n\"That means we can sleep at the apartment tonight,\" I said.\n\n\"You think Dave will stay over with Lena?\" Denise asked.\n\n\"Guarantee it,\" I replied.\n\nDenise and I did stay at our apartment that night. In the expectation Dave would be back some time, we dressed when we got up late Sunday morning. We didn't usually wear clothes in our apartment but were dressing in deference to Dave. Lena and Dave showed up just after noon. Lena's first words to us were, \"Why are you two dressed?\"\n\n\"What?\" Dave asked.\n\nLena replied, \"Denise and Harry never wear clothes in here.\"\n\nDave looked at us. \"I'm sorry,\" he said, \"you shouldn't change your habits for me.\"\n\n\"Come on guys,\" Lena added, \"you know I like you both better naked.\"\n\nI looked at Denise. She smiled. We both stripped off. I knew Denise liked Dave seeing her naked and I knew Dave liked seeing her naked. Once we were nude, Denise said, \"What about you Lena? You don't wear clothes with us anymore.\"\n\nLena smiled. \"Damn,\" she said, \"you're right. What am I still doing with this stuff on?\" Lena quickly undressed. As I've mentioned before, Lena had twenty years on us, and about ten on Dave. She carried a few extra pounds in her thighs and hips. She was still a beautiful and alluring woman in the nude.\n\nDave was the only clothed person in the room. Lena said, \"Come on Dave, get with the program.\"\n\nDave was a little uncomfortable. He said, \"Well, uh. . ..\"\n\nLena cut him off. \"It's not like I haven't seen it and felt it already,\" she said. Lena looked at Dave and then at Denise. Lena said, \"Don't be bashful because of Denise. You've seen her naked. She's naked right now. Don't you think she's entitled to see you? After all, you're family!\"\n\nDave squirmed. Denise teased, \"Come on Dave, I want to see!\" \n\nDave looked at me. I put my hands out, palms up, and shrugged. This was between him and Denise, with input from Lena. After a few moments of looking back and forth between Lena and Denise, Dave said, \"What the hell.\"\n\nDave Hines had a compact build, with one exception: his dick was almost freakishly long and large. When he got his shorts off, Denise just stared at him with her mouth open. She finally gathered herself and said, \"Well shit. I never knew.\"\n\nDave sat on our old sofa next to Lena. Lena put a hand on his dick. Smiling at Denise, Lena said, \"It feels as good as it looks, and he knows how to use it.\"\n\nI think Denise became concerned about how I felt about the attention being devoted to her brother's penis. She plopped her bare ass in my lap. That did make me feel better.\n\nLena still had her hand on Dave. Smiling, Lena said, \"Dave, there's nothing to be nervous about. We're all friends here, or family.\" Lena was having fun. After a moment, I noticed that Lena was having even more fun than I had thought. I could see that she was stroking Dave's dick.\n\nDave said, \"Lena! What are you doing?\"\n\nIn a falsely placating tone, Lena said, \"It just looks so beautiful hard. Denise has to see that.\" Denise's face told me that she was fine with seeing her brother's hard-on. I knew from experience that Lena gives a very nice hand job. Dave was finding that out.\n\nI'm not into looking at other guys' dicks, but you couldn't ignore Dave's hard-on. I felt inadequate by comparison. Lena didn't stop when she got Dave hard. She kept right on, increasing her pace a little. \n\nRealizing that she intended to jack him off, Dave said \"Lena!\"\n\n\"Just enjoy it,\" Lena replied.\n\nYou can't resist a Lena Mann hand job, and Dave didn't. He shot an impressive amount a considerable distance, even getting a little on Denise's calf. Lena got up to get a towel to wipe up the floor. As she went into our kitchen, I worked my hand between Denise's legs and began rubbing her outer lips.\n\n\"Harry!\" Denise said. \"What are you doing?\"\n\n\"Well,\" I said innocently, \"you saw Dave get off. He should see you get off.\"\n\nDenise said, \"Harry! No!\" But he moved her thighs apart so I could get my fingers inside her. Denise and I looked in each other's faces. Her look asked if she could be naughty. My look said that I was looking forward to it. I moved my fingers to the place I knew Denise liked best and began rubbing firmly, but not too fast. Soon, Denise's nipples were erect, and she was squirming in my lap.\n\nI looked over at Dave. He was still hard and staring at Denise intently. I don't care if she is your sister, seeing the most beautiful woman alive about to get off is arousing. Denise was squirming more and breathing hard. I increased my pressure and sped up. Denise closed her eyes. She said, \"Oh . . . oh . . . OOH!\" and shuddered.\n\nLena had come back into the room while I was fingering Denise. Seeing what we were doing, she forgot about cleaning up after Dave and sat down to watch. When Denise opened her eyes after her orgasm, Dave said, \"It sounded good.\"\n\nDenise turned to look at her brother. \"Oh,\" she said, \"that's nothing compared to when Harry's dick is in me.\" Denise turned back to me, leaned up, and kissed me. Then, she whispered in my ear, \"Thank you Dear. I love you.\"\n\nWe refrained from taking things farther. Lena suggested we go to her house and sit in her sauna, which we did. The four of us had an early nude dinner at Lena's. Denise and I left Dave there and went home. Dave stayed at Lena's for the rest of his leave. We saw him almost daily, but I'm sure he enjoyed Lena's much more than our apartment.\n\nLena drove Dave to the airport when he left. Denise and I went along to see him off. For the first time since I'd met him, Dave was in uniform. I don't know what the Army calls it, but it was the uniform with a coat, tie, sharply creased trousers, and highly polished black shoes. Dave also wore a green beret.\n\nWhen he came out to the car from Lena's house, Dave ran a finger over his captain's bars and said, \"Last time I wear these.\"\n\n\"What do you mean?\" I asked.\n\n\"I've been promoted to O-4. I get my oak leaves when I get to Bragg,\" Dave said.\n\n\"What's O-4?\" Denise asked.\n\n\"That's the pay grade for a major,\" Dave replied.\n\n\"Congratulations,\" I said.\n\n\"Well, it's a bit bigger paycheck,\" Dave said modestly.\n\nDave's leaving us in front of security at the airport was emotional for Denise and for Lena. I was a little surprised to see TSA treating Dave deferentially. Then I noticed the Army Ranger insignia on his shoulder. \"Damn,\" I thought, Denise's brother isn't only a good guy, he's a hero.\""
    ],
    "authorname": "HStoner",
    "tags": [
        "hints at incest",
        "exhibitionism",
        "masturbation",
        "public nudity"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/her-second-job-ch-05"
}