{
    "title": "Jennie's \"Nightmare\" Ch. 06",
    "pages": [
        "\"You're quiet.\" Greg was pretty sure everything was okay, but with the vacation they had so far, it never hurt to make sure.\n\n\"I'm content,\" Jennie smiled, squeezing his hand. They were walking down the beach watching their two kids racing along the edge of the sea and playing tag. It was a beautiful morning and they'd just finished breakfast from the kid's favorite diner. \"And happy. In fact, I was just wondering if this is how Heaven is going to feel.\"\n\n\"Wow!\" Greg laughed. \"I have to take you on vacation more often.\"\n\n\"Don't you feel the same?\" Jennie question was asked with a knowing smile, but there was a hint of concern in her eyes.\n\n\"Of course,\" her husband replied, pulling her into a hug. \"This has been one crazy week so far, but I can't regret a single moment.\" Jennie looked up into Greg's eyes briefly before kissing him. It didn't last long. It didn't have to. They were never closer than at that moment and they both felt it. \n\nJennie pulled away from her husband, took his hand and started moving down the beach once more. \"Which part of this vacation did you like best so far? Not counting right now.\" \n\nGreg smiled at the question. It should have been impossible to only pick one moment, but it wasn't. \"No question, last night.\"\n\n\"But last night it was just you and me,\" Jennie teased. \"No Mindy or Rosa.\"\n\n\"I know.\" Greg turned and looked into his wife's eyes. He wanted her to know he meant it. \"I've never felt so fulfilled in my entire life.\"\n\n\"Good,\" Jennie smiled. \"That was my plan.\"\n\n\"Plan?\" Greg asked, moving down the beach once more.\n\n\"I wanted to make sure you knew just how much I appreciated you letting me spend that night with Tara, Joanne and Mindy.\"\n\n\"You're welcome,\" Greg laughed. \"And thanks for letting me spend the night with Rosa.\"\n\n\"It only seemed fair.\" \n\nJennie frowned when she noticed how far away the kids were. She called after them, but they couldn't hear her. Greg put his fingers to his lips and let out a loud piercing whistle. Their children turned and Jennie waved them to come back. Jeremy tagged his sister on the shoulder and came running. Both kids were laughing.\n\n\"It's time to go back to the car,\" Jennie said. Greg saw the kids' disappointment.\n\n\"Why don't we collect some shells on the way back?\" he suggested. The children quickly took to the idea. The four walked together picking and choosing between the shells from the small harvest available as the tide went out. In the end both Jennie and Greg's hands were full. They reached the exit from the beach where the car was parked, but the kids still didn't want to leave yet. \n\n\"I'll be right back,\" Greg said. Jennie continued to search for shells with the children while he went to the car and put the shells he had in the trunk. He also grabbed one of the kid's buckets to hold the others on the way back.\n\nGreg's mind was wandering as he walked back onto the beach. He really couldn't remember being happier. He glanced up and saw that the kids were once more playing tag, only this time Jennie played with them. He laughed as he took in the sight.\n\nJenny said something to the kids when he drew close. She left their game and ran up to Greg. She threw her arms around him. The kids continued to play. Jennie was laughing as she hugged him tight. \n\n\"I forgot to tell you,\" she said when she was done.\n\n\"Tell me what?\"\n\n\"That last night meant just as much to me as it did to you,\" she answered. \"I'm glad we spent it together and alone. It really was amazing!\"\n\n\"Yes, it was,\" Greg agreed. \"You have to give Mindy credit. She was smart enough to realize that we needed some time to ourselves.\"\n\n\"Either that or she was just too tired to play. Tara and Joanne can be exhausting.\" Jennie was grinning as she remembered her own time with couple and Mindy. It was a memory she'd cherish forever. \n\n\"I have to remember to thank them,\" Greg said seriously. \"And not just for exhausting Mindy. I think maybe being with them changed you a little. Last night was incredible, but it's more than that. You really do seem far more content and happy than ever before.\"\n\n\"That wasn't them silly, it was you,\" Jennie replied. \"I shared my deepest, darkest desires with you and you not only convinced me that they weren't bad, but then you let me experience them. Not many men would have done either.\"\n\n\"Do you want to spend another night with Tara, Joanne and Mindy?\" Greg asked. \"Before we go home?\" Jennie looked at him and smiled, knowing his offer was serious. He loved her that much.\n\n\"No thanks,\" she replied. \"It was great, but honestly I prefer when you're part of that aspect of my life.\"\n\n\"I can't say I'm disappointed,\" Greg smiled. \"But if you change your mind, let me know.\"\n\n\"Liar! You were hoping I'd say yes so that you'd get to spend another night with Rosa.\" Jennie was joking and they both knew it.\n\n\"Not really. Not without you. I don't plan on doing that again.\" Greg made sure to make eye contact with her so she could see that he was serious.\n\n\"Me neither,\" she smile lovingly, meaning it. They shared a look that would have led to far more if they were alone and not in public. Greg was tempted despite the kids and location. Jennie saw his expression and laughed gently. \"Down boy, I can see what you're thinking in your eyes.\" \n\n\"I can wait,\" Greg grinned. \"Until tonight anyway.\"\n\n\"Even if it's just me?\" Jennie asked.\n\n\"You're more than enough of a woman for me,\" he replied. \"Besides, I haven't given up hope on Rosa joining us. If I know you, there's still a good chance it might happen.\"\n\n\"Working on it,\" Jennie laughed. \"But that woman is stubborn!\"\n\n\"I know,\" Greg laughed as well. \"Have you ever seen someone so deeply in denial? She watches your every move, but insists she's not interested.\"\n\n\"Me? Have you seen the way she looks at you?\"\n\n\"I may have noticed,\" Greg grinned. \n\nThey fell silent for a while, just standing there holding hands and enjoying each other's company as they watched the kids play. It was one of those perfect moments, but it couldn't last forever. \n\n\"We need to get back to the hotel,\" Jennie finally sighed. \"I didn't think we take a walk after breakfast. I love the beach, but I left the sun block in our room. I don't want the kids to burn.\"\n\n\"Two more minutes!\" Greg called to the kids. They nodded in understanding.\n\n\"You know,\" Jennie said. \"If this thing with Rosa never happens, it's not the end of the world. I want her, but what we've shared this week is more than enough for me. \"\n\n\"Me too,\" Greg replied, squeezing her hand once more. \n\n\"Not that I'm giving up yet.\"\n\n\"I didn't expect so.\" Greg laughed. Rosa was stubborn and in denial, but Jennie could be just as stubborn. He knew she was getting to the redhead. Greg's mind drifted back to his night with Rosa. He dwelled on it momentarily and a thought came to him about how she acted during their time together. \n\n\"What is it?\" Jennie asked, seeing his expression. He hesitated before answering.\n\n\"You know, I was very aggressive with Rosa,\" he said carefully, not sure how his wife would take where he was going.\n\n\"More than usual?\" Jennie joked, letting him know it was okay to continue.\n\n\"Not intentionally,\" Greg replied, thinking back and remembering his shared night with Rosa. \"But she liked it. The more demanding I became, the more excited she reacted.\"\n\n\"Hmm, interesting,\" Jennie added thoughtfully. \"You know that day we went snorkeling, she didn't so much let me kiss her as much as not stop me from doing it.\" They fell silent for a few moments. Jennie smiles slowly. Greg watched and shook his head. Whatever she was thinking was going to be good, very good. She had that look in her eyes.\n\n\"What?\" he asked.\n\n\"It's all falling into place now.\" Jennie expression didn't change. Greg shook his head.\n\n\"Poor Rosa. She has no idea what she's in for.\"\n\n\"We'll see,\" Jennie said. \"It's her birthday tomorrow and it's a big one. Thirty is a tough one for a girl. I think we'll have to help distract her from it. Maybe even make her forget she's getting older altogether.\"\n\n\"What are you planning?\" Greg asked. Jennie looked at him and smiled once more. Her smiles were typically sexy, but this one sent a shiver through him. \"Poor Rosa.\"\n\n\"Don't worry,\" his wife laughed. \"If we're right about her, I promised she'll love every moment of it.\"\n\n******\n\n\"How are you this beautiful morning?\" Mindy was sitting by the pool. She smiled at Rosa as the redhead walked through the gate. \n\n\"Good, you?\" Rosa asked in reply, looking at the dark hair young woman and trying desperately not to blush. The last time she saw the young coed was the night before when Mindy, Tara and Joanne had finally decided to rejoin the others. All three were freshly showered and looked sated in ways that Rosa tried very hard not to think about.\n\nThe small black bikini that Mindy was wearing didn't help. The coed looked very good in it. Rosa noticed the thin sheen of sweat glistened across Mindy's young athletic body and shook her head.\n\n\"Great!\" Mindy replied. \"Mr. and Mrs. H took the kids out for breakfast. I decided to skip and relax for a bit. I love being in the sun. It feels so good!\"\n\nRosa nodded, but didn't say anything. She was having problems not remembering Mindy's cries of passion from the day before. She had no idea what Tara and Joanne had done to the girl to cause them, but the cries made it impossible for Rosa to stay in the same suite despite having her own room. So instead, she spent the bulk of yesterday sitting by the pool with a married man she'd slept with the night before, his wife who made it clear that she wanted Rosa, and their two kids. What a crazy vacation!\n\nRosa felt a cool breeze begin as she put her bag and shoes down. It felt good. The redhead had to remember to be careful. She didn't want to burn and sometimes she forgot to continually reapply sun block when the weather was like this. Rosa sat in a lounge chair one over from Mindy, hoping that the coed wouldn't think she was being rude. On the other hand, she also hoped Mindy would take the hint. Rosa didn't want to talk.\n\n\"That breeze feels great!\" Mindy sighed suddenly. Rosa glanced the coed's way and saw Mindy's nipples stiffen slightly and show through her bikini top. They were surprisingly noticeable. The redhead felt her body reacting to the sight. She shook her head and looked away. \n\nRosa had never noticed women in this way before this vacation and she had plenty of opportunities, especially being friends with Joanne and Tara. She had always been comfortable in her heterosexuality, but something had changed this vacation. The memory of Jennie's full, naked body forced itself up from her memory.\n\n'This is all her fault! Why can't Jennie take no for an answer?' Rosa wondered angrily, but she temper quickly cooled as she thought, 'More important, why can't I forget the sight of her naked body?' Rosa's mind shied away from the thought. Jennie had walked brazenly in front of Rosa totally naked, teasing her, daring her to do something that Rosa simple refused to dwell on. \n\nThe worst part was that Rosa couldn't ignore Jennie's sex appeal. The brunette was every man's sexual fantasy and clearly, from Tara, Joanne and Mindy's reaction, every lesbian or bisexual woman's as well. Being a heterosexual, Rosa should have been immune. There was no denying the full bodied brunette's beauty, but that wasn't what was causing Rosa's problems, not since seeing Jennie naked.\n\n\"Where are Joanne and Tara?\" \n\n\"Sleeping in,\" Rosa replied in relief. She'd wanted to be left alone so she could forget about Jennie, but her mind wasn't cooperating anyway. Her friends weren't necessarily a safe subject, but the redhead was grateful that Mindy's question would at least let her get her mind off of Jennie. Of course, that gratitude disappeared a moment later with the coed's next words.\n\n\"Those two are insatiable,\" Mindy grinned. \"I didn't think they were ever going to let me out of their room yesterday.\" Again, the sounds from the day before forced themselves into Rosa's consciousness. Jennie's naked body followed, as well as the hungry expressions on Tara and Joanne's faces when Rosa returned from her night with Greg and interrupted.\n\nThe coed grinned to herself as she watched Rosa blush again. The poor woman's skin color didn't turn quite as red as her hair, but it was close. Mindy brought up her fun with Joanne and Tara on purpose to see how Rosa would react. It was very telling. The redhead was obviously embarrassed, but Mindy thought she saw a touch of excitement there as well. \n\n\"Are you okay?\" Mindy asked, hiding her smile.\n\n\"Fine,\" Rosa answered a little too quickly. \n\nThe redhead closed her eye. She could have been trying to catch up on some sleep, but Mindy knew better. The woman was just trying to avoid conversation. Mindy had a feeling that Mrs. H was really getting to Rosa. It made sense. Mrs. H was the type to get to everyone in that way. \n\n\"So, we didn't get a chance to talk yesterday. How was your night with Mr. H?\" Mindy asked, trying to make it sound as innocent as she could, which was funny considering what she was asking about.\n\n\"Fine,\" Rosa replied uncomfortably.\n\n\"Fine? That's it?\" Mindy asked in disbelief. \"Mr. H is amazing! The things he did to me...\"\n\n\"I know what you mean,\" Rosa admitted. She opened her eyes, but continued to try and relax on the lounge chair.\n\n\"He's so strong and demanding, but in a good way. I can't remember how many times he made me orgasm this week. Was it the same for you?\" Mindy asked, beginning a long list of questions that were embarrassing to say the least. At first Rosa was in shock by them, but slowly she started answering. Greg was an amazing lover and even though she wasn't the type to talk about sex, Rosa couldn't help enjoy the memory of what they'd shared. Besides, it's not like Mindy was willing to talk about anything else and at least Greg was a man.\n\n\"I sure hope Mrs. H lets me sleep with him again,\" Mindy sighed afterwards.\n\n\"Me too,\" Rosa said softly, almost to herself. The coed smiled. Her plan was working. Mindy had decided to try and help Mrs. H seduce the redhead. That's why she started asking all of the questions about Rosa and Mr. H. It was time to push the redhead a little.\n\n\"Oh, she will. All you have to do is let her join in.\"\n\n\"I couldn't!\" the redhead cried, now fully focused on Mindy.\n\n\"You know, as good as it was with Mr. H, it's better with both of them. Mrs. H is a dynamo and they both get even wilder together.\" Mindy's tone was conversational because she didn't want to frighten the redhead into leaving. She could tell the discussion was getting to Rosa. The coed was about to continue when she noticed Mrs. H walking up.\n\n\"So,\" Jennie began, obviously having overheard what Mindy just said. \"What you're saying is that you wouldn't turn me down if I offered to let Greg go back to the room with you, but you'd prefer to go with both of us?\"\n\n\"Exactly,\" Mindy laughed. \n\n\"What about you?\" Jennie asked Rosa. \"Do you want to sleep with my husband again?\" Rosa wasn't really surprised by the question. On the other hand, she'd spent the day before with the couple and nothing had been said. The redhead looked at Jennie and swallowed. There was something in the full bodied brunette's expression that promise to make today very trying. Rosa was tempted to go back to her room, but Joanne and Tara were there.\n\n\"Are you offering?\" Rosa asked in response as she laughed nervously.\n\n\"Of course,\" Jennie said, pulling off her cover up slowly. Rosa knew she was doing it to tease her, but that didn't stop her from looking. Jennie was smiling sexily at her when the redhead's eyes finally shifted back up to hers. \"I'm sure Mindy wouldn't mind watching the kids while the three of us went back to our room.\"\n\n\"Not at all,\" Mindy put in. \"After all, I am down here to watch the kids.\"\n\n\"No thanks,\" Rosa said quickly, and then tried to change the subject by adding, \"By the way, where are Greg and the kids?\" Jennie looked at her and smiled slowly before turning to Mindy and giving her a look. The redhead sighed in relief. They were going to let the subject drop, at least for the time being.\n\n\"They'll be joining us shortly. The kids needed to stop back at the room first and Greg volunteered to take them.\" Jennie sat in the free lounge chair between Rosa and Mindy. The three lay in silence. They soaked in the sun as the cool breeze kept them comfortable. \n\nRosa was surprised as how quickly she relaxed. She was tired, but the last couple of days had her confused and at a loss. Her night with Greg was amazing. She couldn't deny that. Yet, it seemed to open a door to things that she wasn't ready for, things she'd probably never be ready for. \n\n\"Time to turn,\" Jennie said, sitting up and actually yawning. \"We don't want to burn. Besides, I think I'm ready for a nap and I'm more comfortable sleeping on my stomach.\"\n\n\"I can't possibly burn,\" Rosa said glumly. \"I'm covered head to toe in clothes and sun block.\" It wasn't quite true, but it felt that way.\n\n\"I'll trade my tan for your alabaster skin,\" Mindy sighed.\n\n\"Alabaster?\" Rosa asked. \"I have so many freckles...\"\n\n\"Oh give it up,\" Jennie interrupted. \"So you can't tan. Get over it! You're beautiful. I know women who would kill to look like you.\"\n\n\"She has a point.\" Mindy was grinning at Rosa. The redhead looked back and forth between the two. For once, she didn't feel that Jennie was hitting on her. The full bodied brunette was just stating what she felt was a fact. Mindy too.\n\n\"I wonder what's keeping Greg and the kids?\" Rosa said. The other two women let her change the subject again.\n\n\"Jeremy stuffed himself on chocolate chip pancakes and got a belly ache on the way back. I'm sure they'll be along soon. Greg would have called if it was something serious.\"\n\n\"Mrs. H, do you need me to put some sun block on your back?\" Mindy asked as she sat up to roll over as well.\n\n\"That would be great, thanks.\" Jennie sat facing Rosa. She pulled her dark hair into a pony tail and held it in front of her giving Mindy access to her back. The coed put some lotion in one hand.\n\n\"Mrs. H, can you untie your bathing suit? The straps are pretty wide and I don't want to chance you getting sunburn.\"\n\n\"Sure, good point,\" Jennie replied, letting go over her hair and undoing the ties to her bathing suit. She had to hold the suit in place while Mindy finished applying the sun block.\n\nRosa shook her head. She knew that Mindy and Jennie were being honest before. She was beautiful. The truth was that there weren't many people who could cause the redhead to feel envy, but the full bodied brunette was certainly one of them. \n\nJennie lay down on her stomach and left her bathing suit untied. Rosa did her best to ignore the side of the brunette's well shaped breasts. She glanced up and saw Mindy grinning at her over Jennie. Rosa blushed at being caught and looked away.\n\nShe lay back down and tried to regain that feeling of peace she had moments earlier while they were all enjoying the sun, but it was gone and there was no one to blame but herself. Jennie and Mindy hadn't done anything intentional this time. It was Rosa's own mind that was making her think these things. It was Rosa who peaked to the side and saw the fullness of Jennie's breast. It was Rosa whose eyes drifted down Jennie's body to the curve of her hips, to the swell of her ass.\n\n\"I'll see you both later,\" she said, standing suddenly. \"I'm going to go for a walk on the beach.\" She left her stuff and made her way away from the pool quickly.\n\n\"What was that about?\" Jennie frowned.\n\n\"You didn't notice the way she was looking at you? I bet you and Mr. H will have company tonight.\"\n\n\"We'll see,\" Jennie smiled.\n\n**********\n\nRosa's mind was racing as she started walking down the beach. It took nearly ten minutes for her to work off her agitation. She shook her head, sighed and slowed down when she finally did. She walked for another ten minutes before finally turning around.  ",
        "Now that she was away from Jennie and Mindy her overreaction seemed almost silly. Yes, they were both attractive women and yes, they both were bisexual, but so what? That didn't mean that Rosa was as well. After careful consideration, two important details came to mind as the cause for her confusion. First, Rosa was turning thirty the next day and she never dealt well with her birthday. She was always unsettled and questioning things this time of the year.\n\nThe second realization was that she needed to start dating again. She was far lonelier than she realized. It wasn't what Jennie was offering that was making Rosa react the way she was, it was the simple fact that Jennie wanted her. Rosa was human and liked being desired as much as the next person. The hunger in Jennie's eyes when she looked at Rosa might be frightening, but it was also intoxicating.\n\nRosa's thoughts were interrupted when she noticed two guys walking down the beach toward her. They were both good looking, if a little young. They were probably Mindy's age. One was the stereotypical tall, dark and handsome while the other was shorter, but had very wide shoulders and a nice physique. \n\nRosa smiled slightly when she realized that they were checking her out as well. She also started walking a little slower. The redhead did nothing overt, but it was the little things that made flirting so much fun. She stood a little straighter and walked with just a touch more attitude. She stopped and picked up a shell, taking her time bending over and getting back up. Oh, she did modestly, but that didn't stop the two guys from looking. Her smile grew as they became more obvious in their attention. They even nodded and said hello as she passed. \n\nRosa laughed gently to herself. She wasn't the type to pick up a guy on the beach, much less two, but it was fun to flirt. She finished her walk in a much better mood then she started out in. The redhead made her way back to her suite. She was thirsty. Besides, she wanted to freshen up after her long walk.\n\nTara and Joanne weren't there when she arrived. Rosa sighed to herself in relief, but then shook her head. She'd have to get over this whole thing before they returned home. Tara and Joanne were good friends. She shouldn't feel relieved because they weren't there.\n\nRosa went to the refrigerator and reached for the water picture. She pulled it out and shook her head when she saw that it no longer held water. She poured herself a glass and took a sip. It was cold, sweat and delicious. Tara loved to make concoctions that had a hidden kick to them. Rosa could feel the alcohol hit her system. It felt pretty good.\n\nShe pulled off her hat and went to the bathroom to comb out her hair. She took the glass with her. The redhead smiled to herself as she stared in the mirror. There were definitely things about herself that she'd change, but all in all, she couldn't complain. She was lucky and she knew it.\n\nOne of Rosa's secret vanities was her hair. It was one of the reasons why she hated being in the sun. She always had to wear a hat and cover it. Rosa took her time brushing her hair out and putting it back up. Her thick red locks were unruly at times, but she was used to it. It didn't take her long to finish despite not rushing. She continued to drink Tara's concoction as she worked. \n\n\"I needed that,\" she said, smiling to herself in mirror once more before leaving the bathroom. Combing her hair always helped her relax. \"I'm sure the alcohol helped too.\" The drink was strong, but not strong enough to make her drunk, just happily buzzed. She was tempted to pour herself another, but didn't. It was too early in the day to get drunk. Besides, she wasn't the type.\n\nThe redhead left the suite and started walking. She decided that she could use a quick dip. The hotel had a second pool. It was much smaller and tended to get shady as the day wore on. Most people preferred the bigger pool and the sun. Rosa could do without either for the moment. \n\nThere were only two couples there when she arrived. This pool tended to draw them. It was more secluded. She would have left if she felt the people wanted privacy, but they were laughing and greeted her kindly. \n\nRosa pulled off her hat and cover-up and dropped them on a nearby table before stepping into the water. It felt amazing! She knew the guys were glancing her way more noticeably now that she wasn't covering her body. Her bathing suit might be a one piece, but it accentuated her figure. Rosa smiled to herself. She wasn't trying to draw the guys' attention to her, but that didn't mean she couldn't appreciate it.\n\nShe swam carefully for a few minutes making sure she didn't get her hair wet. Rosa wasn't about to go back to her room and redo it again. She did take a moment to sink into the water up to her neck. It felt amazing! \n\nRosa ignored the men's stares as she got out of the pool and toweled dry. One of the women was smiling and shaking her head. The other woman didn't look particularly happy. Rosa shrugged to herself. She wasn't doing anything intentionally to draw the men's attention, so she refused to feel guilty.\n\nRosa put back on her cover-up, lay down in the chair and decided she needed a nap. She covered her face with her hat, but not before noticing that both men were handsome in their way. Rosa started to drift off. Seeing them brought back memories of her night with Greg. It had been a long time before Greg, but being with him should have satisfied her needs in that area. He truly was amazing. Only, she didn't feel sated. \n\n**********\n\n\"You're going to burn if you don't put more block on.\"\n\n\"Thanks,\" Rosa said, her thoughts still thick with sleep. She didn't bother moving her hat from her face at first. \n\n\"No problem,\" the voice said. The redhead frowned when she recognized that it was Jennie's. \"In fact, I'm a little cooked myself. I'm going for short swim.\" Rosa heard the full bodied brunette jump into the water. She didn't want to move because the nap had felt so good, but Jennie was right. She could feel the sun baking her. \n\nRosa sat up slowly and caught her hat before it fell. It took her a moment to get her bearing. She frowned when she saw that the area was empty with the exception of her and Jennie. At least the brunette was in the pool.\n\n\"You might want to come on in and cool off,\" Jennie said. \"It's pretty hot.\"\n\n\"No thanks,\" Rosa said a little too quickly. She thought she saw the brunette grin briefly, but she might have been wrong. It was hard to tell in the bright sunlight. \"What happened to everyone else?\"\n\n\"Mindy, Tara and Joanne are by the other pool,\" Jennie answered. \"I went back to the room to check on Greg and the kids.\"\n\n\"Is Jeremy okay? Did his belly ache go away?\"\n\n\"He's fine. I found the three of them sitting on the couch watching television when I went back to the room to see if everything was okay. They didn't come down to the pool because the kids got sucked into some movie on television and wanted to see the end. I think Greg might have as well,\" Jennie grinned. \"It should be over soon. I didn't want to wait so I left them there. I had a feeling that you might be here and decided to stop and check.\"\n\n\"It's a good thing you did,\" Rosa sighed as she reached for the sun block. \"Or I would have burned for sure. Thanks.\"\n\n\"You're welcome,\" Jennie smiled. \"Are you sure you don't want to take a dip before you lotion up again? It will cool you off.\"\n\nRosa frowned. She was hot and the water was tempting. She didn't like the idea of being alone in the pool with Jennie, but she figured that she was just being silly. The brunette wasn't hitting on her or anything. Besides, she'd come to terms with her confused feelings during her walk and she could just get out if anything changed.\n\n\"I think I will,\" she said, stripping off her cover-up and moving to the ladder. The water was pretty warm, but not compared to her body so it felt refreshing. Jennie let herself float while Rosa took her time getting all the way in the water. \"I wish I could float like that.\"\n\n\"Built in flotation devices,\" Jennie laughed. Rosa couldn't stop herself from glancing at Jennie's breasts briefly. They looked even bigger like this. \n\n\"I sink like a rock. I wonder what that says about my breasts?\"\n\n\"They're fine,\" Jennie replied, still laughing gently. \"Better than fine. You just don't know how to float. I can teach you if you want?\"\n\n\"No thanks,\" Rosa said quickly. Jennie was still floating and the redhead could see her shrug ever so slightly. Rosa frowned. She was overreacting just a bit, especially for someone who'd supposedly figured things out, but she couldn't help herself. She didn't want Jennie to touch her. The question was why? Was she afraid of what Jennie might do or afraid that she'd like the feel of the brunette's hands on her? \n\nSo much for her walk and how it helped her calm down and understand things better. One look at Jennie's body floating there and all her rationalization disappeared. Yes, Rosa liked men and yes, she felt lonely, but with Jennie floating there, she couldn't deny that she was also attracted to the woman. On the other hand, that didn't mean she had to do anything about it.\n\nJennie was the first to leave the pool. She climbed the ladder and water cascaded off of her body. Rosa frowned as everything seemed to slow down for a second as she watched the full bodied brunette. She blinked twice and shook her head, diving under the water despite her hair and swam to the ladder.\n\n\"We better go find the others,\" she said once she resurfaced. She climbed out of the pool quickly, refusing to look at Jennie for the moment. The brunette handed her a towel without comment. It took a few minutes before they were both dry. Rosa offered Jennie some of her sun block as she put it on herself.\n\n\"No thanks,\" the brunette laughed. \"I'll wait until we rejoin the others. Yours is too strong.\" Rosa nodded in understanding. Jennie was very tan by now. She looked amazing. Rosa didn't know what was worse, her jealousy or desire.\n\n\"Let's get going,\" she said, barely covering her skin with the sun block before reaching for her cover-up.\n\n\"You missed a spot,\" the brunette said, reaching out and stopping her. Jennie used one hand to spread some of the lotion from the redhead's shoulder to her back. Rosa didn't quite gasp at her touch, but Jennie could see how she reacted. The brunette started using her other hand to spread the lotion on the redhead's back.\n\n\"That feels good,\" Rosa said without thought, but then blushed and tried to pull away when she heard herself. Jennie grabbed both of her shoulders and held the redhead still.\n\n\"I'm not done yet,\" she insisted. \"Give me the bottle of block.\" Rosa handed the bottle over her shoulder. Jennie put more lotion on the redhead's back. It didn't take very long for the brunette to finish and Rosa was just about to step away when she stopped, but then Jennie knelt down and started rubbing lotion over the redhead's legs.\n\n\"You don't have to do that,\" Rosa said a little too quickly, but she didn't move away. \n\n\"It's fine,\" Jennie said, hiding a smile. \"I'm a pro at applying lotion. Having kids will do that to a girl.\" Her words were very disarming, but the brunette was rubbing Rosa's legs with a slow deep motion that had little to do with applying lotion. Her finger slowly rose up the redhead's long legs until her fingers brushed along Rosa's inner thighs.\n\n\"That's enough,\" the redhead said firmly, but again, she didn't move. Jennie ignored her and continued to rub. She was contemplated what to do next when the gate to the pool area squeaked open. This time Rosa did move. She stepped forward and away from Jennie. \"Thanks.\"\n\n\"You're welcome,\" Jennie smiled, not bothering to hide her desire now. Rosa took one look at her expression and quickly grabbed her cover-up and put it on. Jennie just continued to smile. \n\nA couple came in through the gate. They looked disappointed to find Jennie and Rosa already there.\n\n\"Don't worry, we're on our way out,\" Jennie grinned.\n\n\"Thanks,\" the guy laughed. The woman did as well, but she was also blushing. It was obvious what they had planned.\n\nRosa and Jennie left and started walking to the other pool. Rosa's head was all but swimming. She couldn't believe what had almost happened. 'Okay, nothing had almost happened,' she thought, but her body knew she was lying. She could feel the dampness between her legs from Jennie's massage.\n\n\"I need a drink,\" Rosa said suddenly. \n\n\"Sounds good to me,\" Jennie smiled.\n\n\"Tara made one of her special concoctions back at our room,\" the redhead said. \"You go ahead and I'll catch up.\"\n\n\"Do you need help?\" Jennie asked.\n\n\"No!\" The word was far too forceful, but the brunette just laughed knowingly.\n\n\"Okay,\" Jennie said. \"I'll meet you back at the main pool.\"\n\n\"That sounds great,\" Rosa said, almost sighing in relief.\n\n\"Just one thing,\" Jennie said, stepping closer to the redhead. Rosa tried to back away, but Jennie reached out and stopped her. They were on a small path that led behind one of the building. It was deserted at the moment.\n\n\"What?\" the redhead asked nervously.\n\n\"Tonight, you're going to join Greg and me,\" Jennie said confidently. \n\n\"I am not!\" Rosa snapped.\n\n\"Sure you are,\" the full bodied brunette disagreed, moving closer to the redhead. \"He really enjoyed your night together and I'm done chasing you.\"\n\n\"I don't like girls,\" Rosa whispered, almost hoarsely. \n\n\"Yes, you do,\" Jennie disagreed with a smile. \"If you didn't, you wouldn't be as excited as you are right now. You're damn near vibrating with need.\" Rosa couldn't deny it. Her traitorous body was clearly reacting to Jennie in ways that were so wrong! She blushed and remained silent, hoping Jennie would just let her go. The brunette smiled and continued, \"You're just having problems accepting it. Don't worry. I'll take care of those tonight. Think of it as my birthday present to you.\"\n\n\"I don't want to like girls!\" Rosa moaned.\n\n\"I know,\" Jennie shrugged. \"But I expect that you'll get over it. I did.\"\n\nRosa didn't quite moan when she stopped pulling away from the brunette. Jennie smiled and moved even closer. The redhead's eyes grew big and her breath quickened. Jennie intent was clear. Rosa watched as the brunette licked her lips briefly and then leaned forward. Her body literally jolted when their lips finally touched despite the fact that she knew the kiss was coming. Rosa didn't fight the brunette. She couldn't. Not even when Jennie's tongue brushed against her lips. Not even when it pushed beyond that.\n\nThe kiss was slow and deep. Rosa felt herself responding and could do nothing to stop it. The truth was a large part of her didn't want to. She moaned and started kissing Jennie back. She lost herself for a moment.\n\n\"Wow!\" a guy's voice cried out with a thick southern accent. \"That is so hot!\"\n\n\"Are you two looking for some friends?\" another male voice said with the same accent.\n\n\"Oh will you two grow up!\" a female voice sighed loudly. \"If they were, they'd probably be talking to me, not you two Neanderthals.\"\n\nRosa pulled back and blushed an even darker shade of red than her hair. She tried to run away, but Jennie stopped her once again.\n\n\"I'll see you tonight,\" the brunette said. \"Plan on spending it with Greg and me.\" \n\n\"Let me go!\" Rosa cried, but she didn't deny the inevitable. Jennie waiting until the redhead made eye contact. She saw Rosa's desire and need beneath the embarrassment. She smiled and released her grip. The redhead all but ran down the path. \n\n\"Playing hard to get, is she?\" the first guy asked. Jennie laughed and moved down the path without a word.\n\n**********\n\n\"I've never seen Rosa this drunk before,\" Joanna frowned. \"I guess turning thirty is hitting her hard.\"\n\nRosa was sitting on the couch passed out. She'd come to dinner half plastered and did more drinking than eating during the meal. It only got worse from then on, especially after the kids went to sleep.\n\n\"It's not only that,\" Jennie sighed. \"I sort of told her that she'd be staying with Greg and me tonight.\"\n\n\"You what?\" Tara cried in surprise.\n\n\"She wanted to, but was having problems accepting it,\" Jennie said defensively. \"I thought a little pressure would help.\"\n\n\"Well, I'd say that backfired,\" Mindy put in.\n\n\"You think?\" Greg laughed even though the situation was far from funny. They all let the subject drop. \n\n\"Do you think we can get her back to our place?\" Tara asked.\n\n\"I can carry her,\" Greg offered.\n\n\"She can have my room,\" Mindy said. \"It's too far back to your room and the trip slung over Greg's shoulder won't do her any good.\"\n\n\"That's probably a good idea,\" Joanne frowned as she looked at her friend. \"She really doesn't look good. Maybe I should stay here and make sure she makes it through the night okay.\"\n\n\"I'll do that,\" Jennie sighed. \"This is my fault after all.\"\n\n\"You aren't planning on taking advantage of her now that she's passed out, are you?\" Tara asked. She was smiling, but Jennie missed it entirely. \n\n\"No! That's disgusting! I'd never do that! You can stay with her if you want. I was just trying to be nice.\"\n\n\"She knows that,\" Joanne said, looking at her blond life mate and shaking her head. \"You have to forgive Tara. She has a twisted sense of humor.\"\n\n\"I'm sorry,\" Tara added as she realized how upset she'd made Jennie. \"It was a bad joke. I know you're not the type to do something like that, not that it might not do Rosa some good.\"\n\n\"Tara, that's enough!\" Joanne snapped. \"Maybe Rosa wasn't the only one who drank too much tonight. I'd better get you back to our room.\"\n\n\"Do you guys mind if I sleep in Rosa's room?\" Mindy asked. \"Since she's going to be in my bed.\"\n\n\"Are you trying to join us for a little fun again?\" Tara grinned.\n\n\"I didn't mean...\" Mindy began.\n\n\"What? You don't want to share our bed again?\"\n\n\"I would love to, but I don't want to...\"\n\n\"Aha! So you were planning on sleeping with us again!\" Tara cried triumphantly. \"And what makes you think we'd let you?\"\n\n\"I didn't say...\" Mindy cried, but this time Joanne interrupted.\n\n\"Tara, leave the girl alone. Stop teasing her,\" she sighed. \"Let's get Rosa into bed and then we'll go back to our suite and figure out the sleeping arrangements.\"\n\n\"She's a bit of a handful, isn't she?\" Greg laughed.\n\n\"Yes, but well worth it.\" Joanne was smiling at her lover as she replied. \n\n\"Thanks,\" Tara said, but then frowned and added, \"I think.\" \n\n\"We'd better move Rosa. She's looking a little green.\" Jennie was focused on the redhead. She obviously felt guilty for the woman's state.\n\nIt didn't take long for them to make Rosa as comfortable as possible. Joanne, Tara and Mindy left. Tara was clearly in the mood for some fun and Jennie thought Mindy was as well. Joanne was too concerned about Rosa, but Jennie figured that the other two would convince her once they were back at their place.\n\n\"Do you want me to stay up with her?\" Greg offered.\n\n\"No, you get some sleep,\" she said. \"The odds are I'm going to be good for nothing tomorrow. You'll have to deal with the kids.\"\n\n\"You know,\" Greg said, looking at his wife in concern. \"You didn't force her to get like this.\"\n\n\"In some ways I did,\" Jennie sighed. She saw Greg open his mouth to argue. She cut him off. \"We can talk about it tomorrow. Go get some sleep.\" Greg paused and then slowly nodded. He also gave her a kiss before leaving.\n\nJennie wasn't really surprised when Rosa woke up ten minutes later and began to vomit. She helped the redhead to the bathroom and held her hair up until she was done. There were a few more trips during the night. Jennie was there for them as well. She cleaned up between and held a damp, cool rag to Rosa's head when the woman moaned. Jennie also tried to get Rosa to drink some water when she was able to. It was almost dawn before Rosa finally stopped feeling ill.",
        "\"Thanks,\" she said. \"I'm better now.\" Rosa had talked some during the night, but this was the first time that what she was saying actually made sense.\n\n\"Are you sure?\" Jennie frowned.\n\n\"\"Yes, I'm sorry for putting you through this,\" the redhead replied.\n\n\"I'm the one who's sorry,\" Jennie said. \"I shouldn't have pushed you so hard. I apologize for ruining your birthday, but don't worry. I'm done now. Get some sleep.\"\n\n\"You too,\" Rosa said groggily. \"You can leave me alone now. I'm fine.\" Jennie looked at her in concern for a few more moments before nodding and standing.\n\n\"You should drink some water if you can,\" she said, handing the redhead a glass. \"You're going to be very dehydrated.\"\n\n\"Thanks,\" Rosa replied, looking at Jennie oddly. The brunette slipped out of the room quietly as the redhead took her time finishing the water. Her head still throbbed, but that was to be expected. \"What an idiot.\"\n\nRosa remembered going back to the suite and pouring herself a big glass of Tara's concoction. She'd been horrified by her reaction to Jennie's advances. It didn't take long to finish the glass or the one after that. She slept for a while, but when she woke up she started drinking again despite the fact that it didn't help. Nothing could block out the memory of how she felt with Jennie's lips against hers.\n\n\"Well, at least she promised to leave me alone,\" Rosa said to herself. She felt relieved, but oddly disappointed. \"This is not the time to try and figure things out. I need sleep.\"\n\nRosa lay back down and closed her eyes. Thankfully, the bed did not spin. It had earlier. The redhead couldn't remember much about the night other than Jennie concerned looks and tender care. She had to remember to thank her again.\n\n**********\n\n\"Feeling any better?\" Joanne asked as she poured Rosa some orange juice. The blond, Tara and Mindy had showed up with breakfast at around ten. Everyone sat and ate with the exception of Jennie who was still asleep. The kids were now in their room getting dressed for the beach. Mindy was helping.\n\n\"Yes,\" Rosa replied. \"Sorry for this.\"\n\n\"Don't be,\" Tara grinned. \"You only turn thirty once.\"\n\n\"Don't remind me,\" the redhead groaned. \"I feel like I'm eighty.\" She was still exhausted, but the food helped. \n\n\"Ah, a grade A hangover,\" Greg grinned. \"I feel for you.\"\n\n\"Sure you do,\" Rosa smiled. Greg's grin turned into a laugh.\n\nTheir one night together felt like an eternity ago despite it only being a few days. Rosa was too hung over to seriously be distracted by her desire for him, but it was still there, amongst her other desires.\n\n\"I hope you all don't mind,\" she said. \"But I'm going to go back to sleep for a bit.\"\n\n\"Go ahead,\" Mindy smiled. \"There are clean sheets on the bed and I aired out the room a bit.\" \n\n\"Thanks,\" Rosa said and stood.\n\nThe redhead shook her head as she went. Mindy was generally a happy person, but the satisfaction in her eyes made it obvious that her good mood had at least a little to do with what must have happened the night before. It was obvious that Joanne and Tara had invited her into their bed once more. It was equally as obvious that all three had enjoyed themselves. \n\nRosa found her thoughts drifting back to Jennie's kiss from the day before. The redhead shook her head. She was too tired to dwell on it right now. She got into Mindy's bed. The clean sheets felt surprising good against her skin. What she really needed was a shower, but she was too tired. She didn't so much drift off as pass out.\n\n**********\n\n\"There you are,\" Jennie smiled as Rosa walked into the living room. The brunette was wearing a robe and drying her hair with a towel. She'd obviously just finished taking a shower. \"The others called about twenty minutes ago. They're going to a late lunch and wanted us to meet them if you're up for it.\"\n\nRosa looked at Jenny and shook her head. No one had the right to look that good with no make-up and wet hair, but that was Jenny. Thankfully, the brunette was focused on what she was doing and not on Rosa. It gave the redhead a few moments to gather her thoughts.\n\nObviously, despite her sleeping in their suite nothing happened last night between Jennie, Greg and her. Rosa woke up in Mindy's room, not theirs. It made sense. She'd been far too drunk. In fact, although Rosa's memories were a bit scrambled, they were good enough for her to realize that not only did Jennie not try and take advantage of Rosa's inebriated state, but she actually spent the night taking care of her. \n\nRosa was relieved that nothing had happened. She was honest enough with herself to realize she was also disappointed. Her mind spun as she wrestled with the conflicting emotions. It didn't help that she was alone with Jennie. It was time to escape her thoughts and regroup. First, she needed to get away from Jennie. The brunette presence always seemed to confuse the issue.\n\n\"I need to go back to my room and shower,\" Rosa said. \"And get out of these clothes.\"\n\n\"I can understand that,\" Jennie replied as she finished with the towel and looked directly at Rosa. The redhead was expecting to see Jennie's desire for her. The woman had done little to hide it the last few days. In fact, she seemed to challenge Rosa with it yesterday. Yet, as their eyes met Rosa saw only friendship. \n\n'If all it took was me getting completely wasted for Jennie to lose her attraction to me,' Rosa thought. 'I wish I'd done it earlier.' Again, her relief was mixed. She thought for a moment and decided that it was understandable. It was nice being wanted even if it was by someone that shouldn't feel that way about you. Rosa stood to leave. \n\n\"By the way,\" Jennie smiled. \"Happy Birthday!\"\n\n\"Thanks,\" the redhead replied, thinking about just how drunk she'd let herself get. \"So far, it hasn't been one of my better ones.\"\n\n\"I'm sorry about that,\" Jennie said, looking guilty.\n\n\"Why?\" Rosa frowned. \"I was the one who got drunk. By the way, thanks for taking care of me.\"\n\n\"You're welcome,\" the brunette sighed. \"But it only seemed fair considering I'm the one that drove you to it. I shouldn't have pushed you to do something you didn't want to do, but I convinced myself that somewhere deep down you did. I really am sorry.\"\n\n\"It's okay,\" Rosa replied, her mind racing.\n\n\"And you don't have to worry. I promise I won't do it again.\" Jennie looked miserable. \n\nRosa was tempted to leave things like they were, but she couldn't do it. It wouldn't be fair to Jennie and despite her relentless attempts at seducing Rosa she was too good of a person to do that to. The redhead sighed to herself. It was time for a little honesty. She owed it to Jennie for helping her through the night. She owed it to herself so that she could get past it.\n\n\"Jennie, my getting drunk was my fault, not yours.\" It was obvious from Jennie's expression that she didn't agree so Rosa continued. \"I didn't drink because you wanted me. I got drunk because I realized that a part of me wanted you too. It was too much for me. It still is. I've learned some things about myself this week that are disappointing to say the least.\"\n\n\"It bothers you that much to be attracted to me?\"\n\n\"Yes,\" Rosa admitted. \"And that's what disappoints me about myself. I thought I was open-minded, but I'm learning it's not true.\"\n\n\"Says the woman who came on vacation with her lesbian friends.\"\n\n\"That's not what I mean,\" Rosa sighed. \"I should be able to accept what I'm feeling, make a decision how to deal with it and move on.\"\n\n\"Attraction isn't logical,\" Jennie said slowly. \"You have no idea how shocked I was when a girl kissed me for the first time. It took me almost a decade to understand what I was feeling and what it meant. Give yourself a break. It's been less than a week.\" The two exchanged a look. There was no obvious desire there, just honest friendship.\n\n\"Thanks for sharing that,\" Rosa said. \"It's helps.\"\n\n\"Good, now go back to your place and get ready,\" Jennie smiled. \"And don't worry. I promise I won't try and seduce you anymore. In fact, I want you to forget it even happened, at least for a little while. You should be relaxing. I'm done ruining your vacation.\"\n\n\"You haven't ruined it,\" the redhead said, meaning it. Jennie surprised her by laughing.\n\n\"That's only because I let you sleep with Greg!\"\n\n\"That not what I meant,\" Rosa said, laughing now as well. \"But you're not wrong. He's a very talented lover. You're a lucky girl.\"\n\n\"I know it,\" Jennie said. \"And now that I think about it that will be my birthday present to you. You can sleep with Greg again tonight.\"\n\n\"You don't have to do that,\" Rosa said, not that she didn't want the gift. She wasn't just being kind when she said Greg was a very talented lover. In fact, he was incredible. \"You don't owe me anything.\"\n\n\"But I want to,\" the brunette replied. \"Today's your thirtieth birthday and it should be memorable. I'm sure Greg will do his best to make it that.\" Rosa waffled.\n\n\"Will you spend the night with Joanne and Tara again?\"\n\n\"No,\" Jennie replied. \"They're great and it was amazing, but I made a promise to myself that I would never sleep with anyone again without Greg there. It just doesn't seem right anymore.\"\n\n\"And here I am, taking him for the night,\" Rosa frowned. \"I don't like it.\"\n\n\"You're not taking,\" the full bodied brunette insisted. \"It's my gift to you and also my apology, despite you saying it's not needed.\"\n\nThe redhead wanted to argue further, but there were two reasons why she didn't. First, she really wanted this gift. Despite still being a little hung over, just the thought of another night with Greg was making her body react. Rosa liked to think she wouldn't have given in for that reason alone, but then there was the second reason. Jennie really wanted her to accept her gift. The expression on the brunette's face made it obvious.\n\n\"An apology isn't necessary,\" she finally said. \"But I appreciate the gift.\" \n\n\"Good!\" Jennie smiled. \"Now go get ready. We need to catch up to the others.\"\n\n\"I am hungry. What time are we supposed to meet them?\" Rosa asked, but then she realized that she needed some time for herself. She wasn't ready yo go out in public yet. \"Actually, don't worry about it. I'll pass.\"\n\n\"Why do that if you're hungry?\" Jennie asked. \"I'm sure everyone would be willing to wait if you need some time. It is your birthday.\" \n\n\"It's not necessary. I can order in while I get ready. I'll catch up to you all in an hour or so.\"\n\n\"Nonsense! You go get ready and I'll meet you at your place in an hour. I'll call Greg and ask him to get the kids something to hold them over. I sure they'd all rather enjoy a meal with the birthday girl. Of course, it might be an early dinner as opposed to a late lunch, but we'll make it work.\" Jennie saw the redhead frown and she realized something. \"I'm doing it again, aren't I? I'm pushing. If you'd prefer to be alone that's fine.\" Rosa took one look at her expression and laughed.\n\n\"This isn't the same type of thing. Why don't you tell Joanne to get something for Tara too,\" Rosa smiled. \"She can be a bear when she's hungry.\"\n\n\"I will,\" Jennie said in relief. \"I think I'll take advantage of some alone time as well. I'll pick you up in an hour.\"\n\n\"Sounds good,\" Rosa said as Jennie stood and made her way to her bedroom. The robe the brunette was wearing was thin and the Rosa couldn't help noticing Jennie's ass. Rosa shook her head and slipped out of the apartment.\n\n**********\n\nRosa put on the shower and looked at herself in the mirror. Her eyes were still bloodshot, but the sleep and breakfast had helped. So did the note on the table Tara left for her. In it the blond mentioned that she'd refilled the pitcher in the refrigerator and that another drink would probably help. Rosa poured herself some of Tara's concoction and sipped it before coming into the bathroom. Her friend was right. It did help with the hangover.\n\nThe shower felt amazing. Rosa took her time getting ready. It was her birthday and she wanted to look her best. She shaved her legs, did her make-up and even worked in a quick touch up to her nails. Her hair took the longest, but she was happy with the end result. Rosa put on her favorite sundress and smiled at herself in the mirror.\n\n\"I look good! Even if I do say so myself,\" she laughed. She was thirty, not eighty and she refused to let her birthday get her down. She went to the kitchen and retrieved her drink. It was warm so she dumped it out and poured herself another. Rosa sipped from her glass as she waited for Jennie.\n\nShe thought back to their earlier conversation. It had helped. So did the fact that Jennie promised not to try and seduce her anymore. She felt relieved.\n\n\"Although to be honest,\" she said, talking to herself out loud. \"The thought of sleeping with another girl is crazy, but if it ever was going to happen, Jennie would be the right person.\" She finished her drink and poured another. She was buzzed already, but not drunk. \"I need to slow down.\" The only problem was that her mind was racing again and the alcohol helped.\n\nRosa was half way through the freshly filled glass when there was a knock at the door. She put her drink down without finished it and went to answer it. She felt relieved to be moving. Sitting and thinking wasn't really helping. She opened the door and there was Jennie. They both looked at each other in surprise. \n\n\"Wow, you look amazing!\" Jennie said.\n\n\"You too.\"\n\n\"I figured I'd spend a little more time getting ready since I was waiting for you. I don't always get the chance without Greg or the kids interrupting.\" Jennie was grinning as she spoke. Her tone was friendly with no hint of hidden desire. Rosa wished she could say the same. Seeing the brunette like this was making her body react in ways she didn't want to think about. Or did she? Jennie noticed her discomfort. \"What's wrong?\"\n\n\"Nothing,\" Rosa said a little too quickly. \n\n\"Are you okay?\" Jennie asked. She paused, but when the redhead didn't reply she sighed. \"You're still uncomfortable with me, aren't you? I thought my promise would make it okay, but obviously it hasn't. That's too bad. I had hoped that we could be friends despite everything that's happened. If you don't want that, I understand.\"\n\n\"No, I'd like that,\" Rosa said. \"But it's hard.\"\n\n\"You've been drinking again, haven't you?\" Jennie frowned.\n\n\"It helped with the hangover.\"\n\n\"It tends to,\" Jennie sighed. \"But you're still confused by your feelings and alcohol won't help with that. Maybe I should skip diner.\"\n\n\"No,\" Rosa said, grabbing Jennie's hand and squeezing it. \"I'm not confused.\" It wasn't true, or at least not completely so, but Rosa didn't want to lose Jennie as a friend.\n\n\"Then what is it?\"\n\nWhat happened next surprised Rosa almost as much as it did Jennie. The brunette's concerned look was too much. One moment they were standing a few feet from each other and the next Rosa was kissing Jennie. The full bodied brunette froze for a moment in shock, but then moaned and started returning the kiss. It lasted a very long time.\n\n\"You know, this isn't helping my resolve not to seduce you,\" Jennie gasped, once they finally separated.\n\n\"It not helping my resolve not to be seduce by you either!\" Rosa replied. Suddenly, they were both laughing.\n\n\"I'd say you were the one doing the seducing right then,\" Jennie got out between laughs.\n\n\"I was, wasn't I?\" Rosa said, in surprise. Jennie saw the concern in the woman's face. \n\n\"Don't worry,\" she said quickly. \"It was just a kiss and my promise is still in effect.\"\n\n\"But what if I don't want it to be?\" the redhead asked, shocked by her own words. Yet, deep down she knew it was true. \n\n\"You want me to seduce you?\" Jennie asked.\n\n\"I want you to try,\" Rosa replied honestly. \"The jury is still out if I want you to succeed or not. You're a great kisser, but I doubt I could ever do anything more with a woman.\"\n\n\"I don't understand. If that's true, why do you want me to try?\"\n\n\"Do you have any idea how good it feels to have someone look at me like the way you do? It's intoxicating! Despite my relief that you're not trying to seduce me anymore, I miss the way your sexy eyes make me react.\" \n\nJennie fought down her desire for the redhead. Rosa was only being half truthful. A woman as beautiful as her was sure to get a lot of people looking at her with desire. It wasn't that, or at least not just that. Jennie thought it was probably the fact that Rosa was attracted to her. It had to be, but now was not the time to push. Rosa needed time to accept what she was feeling. \n\n\"So, what you're trying to tell me,\" Jennie said with a slow smile, deciding to lighten the mood. \"Is that you're a tease. You want to drive me crazy with almost no real chance of getting satisfaction.\" The two looked at each other and were suddenly laughing again.\n\n\"I guess I am,\" Rosa said afterward. \"Sorry, that was selfish of me.\"\n\n\"It's okay,\" Jennie said thoughtfully. She didn't want to put any more pressure on Rosa, but she wanted her to know how she felt. \"And actually, if you want to release me from my promise, I'll gladly do my best to seduce you into letting me join you and Greg tonight. I think maybe I was wrong. You may be more ready than I thought.\"\n\n\"I'm not,\" the redhead said quickly.\n\n\"You kissed me, remember?\" the brunette said knowingly.\n\n\"That was a mistake,\" Rosa said far too quickly for it to be completely true, but Jennie nodded in acceptance. \n\n\"If you really feel that way, then don't release me from my promise,\" Jennie shrugged. \"But I'm betting that before the days over you will. Only keep in mind that if you do, I'll do my best. I really do want you.\" The desire was back in the brunette's eyes and Rosa felt her body react. They were still relatively close. She was shocked by just how good it felt to be looked at like that and how much she wanted what Jennie was offering.\n\n\"I haven't released you from your promise!\" she cried.\n\n\"No, you haven't,\" Jennie said, taking a step back. \"I'll meet you outside. Give me a few minutes to compose myself. That kiss was something else.\" She was gone a moment later. \n\n\"It was, wasn't it?\" Rosa asked the empty room as she brushed her lips with her fingers.\n\n*********\n\n\"You know, it's really not fair. You two make me feel like the ugly step sister,\" Tara complained as they all sat down for dinner. \n\n\"Never that,\" Joanne interjected, exchanging a loving look with the pale blond.\n\n\"She has a point though,\" Mindy put in. \"Do you really think it's fair that you two come to dinner looking like that while the rest of us haven't had a chance to do much more than put a brush through our hair after being at the beach all day?\"\n\n\"They do look amazing, don't they?\" Greg grinned as he used a crayon to make a tic-tac-toe board for him and his son.\n\n\"Well, it is my birthday,\" Rosa smiled. \"And I want to look good for it despite what happened last night.\"\n\n\"Don't worry about that,\" Joanne said. \"We all have our moments. In fact, did I ever tell you about the time Tara thought she failed an ethics paper?\"\n\n\"Let's not start swapping those types of stories,\" the pale blond replied. \"The kids might not appreciate them.\"\n\nEveryone laughed except for Greg and Jennie's children. Their little girl was too busy coloring to really notice. Jeremy frowned, but then shrugged and went back to playing tic-tac-toe. It was his turn.\n\nJennie was true to her word and didn't try and seduce Rosa at all, but that didn't stop the redhead from spending half the time thinking about what her night with Greg might be like and the other half remember the feel of Jennie's lips against her own. Oddly enough, it wasn't really distracting this time. \n\nRosa was careful not to drink too much during dinner. She let herself become buzzed, but refused to get drunk. The meal was very good, but the company was better. Everyone had a good time, laughing and joking like old friends. The waiters and waitresses sang happy birthday to Rosa as they brought over a piece of cake with a candle in it. The redhead took it good naturedly and the kids obviously loved it.",
        "\"We have to keep in touch after we go back home,\" Joanne said as they finished their desserts. \"I'm very happy we met you all.\"\n\n\"Us too,\" Jennie smiled.\n\n\"It's too bad we have to go home tomorrow,\" Rosa sighed.\n\n\"None of that!\" Tara insisted. \"Today's your birthday. No time for sad thoughts!\"\n\n\"Okay, okay,\" the redhead smiled.\n\n\"By the way,\" Mindy said with a grin. \"There a handsome guy by the bar over there who keeps looking at you. Are you in the mood to make a new friend tonight?\"\n\n\"Mindy!\" Jennie cried, but she was laughing.\n\n\"He is good looking, isn't he?\" Joanne put in.\n\n\"And it's your thirtieth birthday. You took care of getting drunk last night, so maybe tonight is about getting...\" she paused and looked at the kids meaningfully before adding, \"I mean, making new friends.\"\n\n\"I already have new friends, thank you very much,\" Rosa laughed.\n\n\"Are you sure?\" Mindy asked. \"Because he really is cute.\"\n\n\"Looking to make a new friend?\" Jennie asked with a grin.\n\n\"Oh no,\" the coed replied. \"Joanne and Tara have been such good new friends that I don't think I could handle another, boy or girl, at least for a while.\" Jennie nodded to herself. She thought that Mindy had slept with the couple again last night. This only confirmed it.\n\n\"Will you be sleeping over at our place again tonight?\" Rosa asked. \"Because I wouldn't mind sleeping in your room.\"\n\n\"Really?\" Joanne said pointedly. Rosa blushed, but nodded.\n\nJennie looked at the redhead and smiled. The others were probably getting the wrong message, but now wasn't the time to try and explain. Rosa was obviously looking forward to her night with Greg. Jennie knew she'd better find a private moment with her husband and tell him what was going to happen because the redhead hadn't released her from her promise and truthfully now that they were out with the others, Jennie doubted she would.\n\n\"You should do it,\" Jennie smiled at Mindy. \"I'll watch the kids tonight. We're here one more day than they are. You can watch the children tomorrow night. I want to go out with Greg once last time before vacation is over.\"\n\n\"Aww, how sweet,\" Tara teased.\n\n\"Mrs. H, I hope you don't mind, but Joanne, Tara and I have already planned on having a party night with the kids. Rosa likes to dance and we figured you and Mr. H would take her out for her birthday. You'll be getting home late so it only makes sense for you three to use their suite while we all use ours. Tara and Joanne can use your room.\"\n\n\"That doesn't sound fair,\" Jennie frowned. \"I'm sure Joanne and Tara would prefer to spend their last night doing something other than watching my kids.\"\n\n\"Actually,\" Joanne put in. \"That's exactly what we want to do. We want Rosa to have a great birthday and she loves to dance. \"\n\n\"Then she and Greg can go,\" Jennie said. \"I can stay home and watch the kids.\"\n\n\"You want me to go dancing with another woman's husband?\" Rosa asked. \"You have to come.\"\n\nJennie tried to argue that she should stay with the kids, but everyone insisted. She still would have resisted, but Rosa was one of the most vocal in insisting she had to go with them. This had the potential to end up being exactly what she wanted. It was also possible that this would become an interesting night for her, and not in a good way. She didn't have a problem with Greg and Rosa being together, but now if the redhead didn't invite her she'd be stuck in Mindy's room by herself without even the kids to distract her. That didn't sound like much fun at all.\n\n\"Okay, I'll go,\" she finally said.\n\n\"Good,\" Greg smiled. \"We need to stop back at our room first though. I can't go out with two beautiful women dressed like this. Besides, I could use a quick shower.\"\n\nThe next hour flew by. Mindy, Tara and Joanne weren't kidding about throwing the kids a party. They set it all up while Jennie and Rosa waited for Greg. The amount of junk food was impressive and the kids were obviously excited.\n\n\"Don't worry,\" Mindy said to Jennie. \"I'll make sure they get a good night sleep.\"\n\n\"Thanks,\" the full bodied brunette smiled.\n\n\"We can't promise the same for Mindy,\" Tara put in, eyeing the brunette hungrily. \n\n\"You're insatiable,\" Joanne laughed. The three women obviously had plans. Jennie smiled, but it didn't last long. She realized that there was a very good chance that everyone except her was going to have fun tonight. Maybe she'd at least get a good night of sleep. She excused herself and went into the bedroom. Speaking of which, Jennie still needed to talk to Greg. He was just getting out of the shower when she entered their bedroom.\n\n\"What's up?\" he asked, reading her expression.\n\n\"I need a favor,\" she replied. \"I felt bad about pushing Rosa into getting drunk last night.\"\n\n\"That was her issue, not yours,\" Greg still insisted. Jennie thought he was half right anyway. \n\n\"Thanks, but I feel bad just the same.\" \n\nGreg took her in his arms and hugged her. He was only in a towel and she felt good against his chest. Greg was momentarily tempted, but now wasn't the time. \n\n\"So what's the favor?\" he asked as he stepped back, more to distract himself than anything else.\n\n\"I need you to sleep with Rosa again tonight.\"\n\nGreg was surprised at first, but then thinking about the way Jennie was and the fact that she felt guilty it made sense. He couldn't say that the thoughts of being with the redhead again didn't interest him. On the other hand, he wasn't kidding during his conversation with Jennie in the morning.\n\n\"Only if you're part of it,\" he replied. \"I told you this morning I'm not going to do anything without you present.\"\n\n\"I know, but it's her birthday and I sort of promised Rosa as her present.\"\n\n\"You did what?\" Greg frowned. He thought carefully for a moment, but then shrugged and shook his head. \"You shouldn't have promised her. I'm sorry, but it's not going to happen, not without you.\" Jennie was a little surprised by his reaction. He enjoyed his time with Rosa, so she expected that he'd be okay spending another night alone with her. \n\n\"I'll be in the next room,\" Jennie said, but Greg shook his head.\n\n\"Jennie, I love you. What happened with Rosa the other night was enjoyable, but I refuse to do it again without you there.\"\n\n\"But I promised.\"\n\n\"That's your problem,\" Greg shrugged, obviously meaning it. He wasn't often like this, but Jennie knew that arguing would be pointless when he was in this mood. Greg didn't give her a chance anyway. \"You're my wife and my lover. I want to sleep with you tonight. I've been thinking about it all day. You have no idea how hard it was for me not to attack you when you and Rosa showed up dressed like you are. Hell, I'm tempted to lock the door and jump you right now!\"\n\n\"But...\"\n\n\"But nothing,\" Greg interjected. \"I'd love for Rosa to join us tonight, but that's up to her. You'd better go let her know before we leave. It wouldn't be fair to lead her on.\"\n\nJennie found herself in the living room almost without realizing it. She forgot how forceful Greg could be sometimes. He was always considerate and loving, but sometimes he was also demanding. The brunette felt her body reacting. Tonight was going to be extra special and she thought that maybe she had Rosa to thank for it. Greg said earlier in the day that he'd been very aggressive with Rosa during their night together and that she'd liked it. Obvious, he had as well. Jennie guessed that he'd been thinking about it all day.\n\n'Lucky me!' Jennie thought with a grin. Unfortunately, it wasn't so lucky for Rosa and it was the redhead's birthday. Jennie lost her grin. She needed to talk to Rosa. \n\nJoanne, Tara, Mindy and the kids were already camped out in front of the television watching a movie and eating junk when she left the bedroom. Rosa was nowhere to be seen. Jennie frowned. Tara noticed and came over.\n\n\"Rosa asked me to tell you she needed to stop at her room before you go,\" Tara said. \"She'll be right back.\"\n\n\"Thanks, can you call her and tell her we'll meet her there?\" Jennie asked, figuring it would be easier to let Rosa know Greg's refusal in private.\n\n\"Sure,\" the blond replied, taking out her cell phone.\n\nJennie popped her head back into the bedroom and told Greg to meet her at Rosa's suite. He was pulling his shirt over his head, but she heard him agree before she went back into the living room and kissed the kids goodbye.\n\nThe trip to the other suite was uneventful. Jennie tried to come up with an easy way to break the news to Rosa, but there was no way the redhead wouldn't be disappointed. Rosa could agree to let Jennie join her and Greg, but by now the brunette was almost certain that wouldn't happen. She was still trying to figure out what to say when she knocked on the suite's door. Rosa opened the door and smiled. The redhead was holding a half empty drink and looked just as amazing as Jennie remembered.\n\n\"Are we ready?\" the redhead asked with a smile. She seemed awfully happy and Jennie realized that she couldn't ruin that.\n\n\"Yes and no. I need you to do me a favor.\" Jennie led the redhead into the suite and closed the door. There was no way she was going to tell Rosa that she was going to spend the night of her birthday alone. Jennie was also certain that Greg wouldn't budge. That left only one choice.\n\n\"Anything,\" the redhead grinned, obviously in a good mood.\n\n\"I need you to release me from my promise.\"\n\nRosa froze for a moment and lost her smile. She put her drink down and turned toward Jennie. They looked at each other in silence. Jennie knew what the redhead was going to say. She also knew what she was going to do after that. It wasn't like her, but it was the only way this could work out. She hoped it was the right decision.\n\n\"I can't,\" Rosa finally said.\n\n\"That's a shame,\" Jennie sighed. \"I do so hate breaking my promises.\"\n\n\"Break your promise?\"\n\nThat was all the redhead was able to say before Jennie kissed her. It was passionate and the redhead couldn't help herself. She returned it. She could feel Jennie's full breasts against her own. A part of her wanted to reach up and feel them. The thought scared her.\n\n\"Stop!\" Rosa cried, pulling back. \"You promised!\"\n\n\"Yes,\" Jennie nodded in agreement. \"But Greg is being stubborn. He wants you. I know that, but he refused to spend another night with you without me there.\"\n\n\"Oh,\" Rosa said, sounding disappointed. No surprise there.\n\n\"Don't worry,\" Jennie smiled. \"The obvious solution is that you give in to what we both know you really want anyway. This way everyone is happy.\"\n\n\"I can't!\" Rosa cried. Jennie licked her lips nervously. This wasn't easy for her. The only reason why she decided to break her promise was because she remembered the kiss that the redhead initiated earlier. She was banking a lawful lot on it. Jennie kissed the redhead again. \n\nRosa's lips met hers hungrily. Jennie relaxed slightly. The shared passion was enough to let her know she wasn't completely off base with her decision. Jennie was certain now that Rosa wanted what was going to happen. She just couldn't admit it. The only way to combat that was to not give her a choice. If this backfired she feel even worse than she had this morning, but so be it.\n\n\"You don't understand,\" Jennie said, pulling back just enough to make eye contact with Rosa. \"You don't have a choice.\"\n\n\"What?\" the redhead cried. \"But you promised!\"\n\n\"Yes I did,\" Jennie said. \"And I don't usually break my promises, but circumstances have made it impossible for me to keep this one. First, Greg won't sleep with you without me there. Second, I refuse to let you spent your birthday night alone and third, you want this. You know it and I know it. Hell everyone knows it! You just can't admit it to yourself. I'm taking care of that. Tonight you're going to sleep with Greg and me. I promise it will be the best night of your life, and that's a promise I don't plan on breaking.\"\n\nThe third kiss wasn't as passionate as the first two or as long, but it meant far more. Jennie was letting Rosa know what was in store for her later. The redhead received the message. Her brain went into overdrive, but was unable to join two thoughts together. She picked up her drink and finished it in one swallow. There was a knock on the door before she could comment further.\n\n\"That's Greg,\" Jennie said, moving to the door and opening it.\n\n\"Hello,\" he smiled as he walked in. Greg took one look at Rosa's expression and frowned. \"What's going on?\" \n\n\"I want you to kiss her Rosa,\" Jennie directed.\n\n\"What?\" Rosa cried, surprised for some reason. Greg cut her off with his lips. The kiss lasted quite a while. Jennie watched with a smile.\n\nRosa knew she had to stop this right now before it was too late. If she didn't then she was lost. Jennie and Greg would have their way with her and she wouldn't be able to stop them. Her only problem was that deep down she knew that Jennie was right. She wanted this. She needed it. Whether she was ready or not was beside the point.\n\nJennie watched for a moment before putting on some slow music. Greg and Rosa were still kissing when she turned back to them. The sight of her husband and the redhead together didn't bother her in the least. It actually excited her instead.\n\n\"Greg, dance with her,\" she said. \"Rosa felt like dancing. I wouldn't want to disappoint her.\"\n\nGreg looked at his wife and smiled. He also started swaying to the music. Rosa rested her head on his shoulder. Jennie watched with a warm smile. The first song ended and a second one began. Greg kissed the redhead once more. \n\n\"May I cut in?\" Jennie asked. \n\n\"Sure,\" Rosa said, blushing as she realized she'd been kissing Jennie's husband right in front of her. She stepped back.\n\n\"Thanks,\" Jennie smiled, but then instead of dancing with Greg she took the redhead in her arms and started swaying.\n\n\"Hey! This isn't...\" Rosa began. Jennie didn't give her a chance to finish her thought. She kissed the redhead. Rosa moaned.\n\n\"Wow!\" Greg said, shaking his head. \"The sight of two beautiful women kissing is something else.\"\n\n\"I can't!\" Rosa cried and pulled away despite the fact that she obviously enjoyed the kiss. Jennie frowned in concern. Rosa looked ready to bolt. Greg saw it too. Instead of letting her go, he took her in his arms and kissed her again. She fought for a moment, but then moaned and returned it. \n\nThe embrace lasted a long time. Rosa's body was on fire when Greg finally pulled away and turned her back toward his wife. The redhead didn't fight Jennie this time. Rosa knew it was wrong, but they weren't giving her a choice and it all felt so good! \n\nRosa moaned in disappointment when Jennie pulled away a few moments later, but it only lasted until the redhead was once again in Greg's arms. He held her close and kissed her with even more passion. Jennie and Greg continued to pass Rosa back and forth between them. The redhead started shifting from one to the other after every kiss without their prompting. Greg and Jennie shared a smile. Rosa was ready for the next step. Greg stepped closer when the two ladies were kissing. He pressed his body against Rosa's back.\n\nThe redhead felt his hardness against her ass. She moaned and spun toward him. Their kiss this time was more demanding. Rosa knew the Greg and Jennie were trying to drive her crazy with lust. It was working too. She reached down and squeezed Greg's cock through his pants. Jennie's body was now pressing against her and the brunette's full breasts were impossible to ignore. Rosa turned and faced the brunette.\n\nGreg reached around the redhead and cupped her breasts. He crushed his hard cock against her ass once more and started kissing her neck. Jennie's hands were resting on Rosa's hips and one of her knees pressed between the redhead's legs. Rosa was more than a little damp between her legs and her nipples were hard pebbles in Greg's hand.\n\n\"Strip her,\" Greg growled, unable to contain his desire any longer. \n\n\"No!\" Rosa cried, but his tone sent a thrill through her. Greg was in need and he wasn't about to let her run away. Instead, he spun her toward him and kissed her with even more aggression. She lost herself in the kiss for a time.\n\nJennie stripped out of her own clothes as she watched Greg and Rosa kissing. The redhead was grinding uncontrollably against her husband. Jennie smiled and started unbuttoning Rosa's sundress. \n\n\"Please no!\" the redhead cried. Rosa tried to stop Jennie, but Greg held her tight and raped her lips with his own. The redhead moaned in submission. Rosa's dress came off and was quickly followed by her bra and panties despite her half-hearted protests.\n\nIt was Jennie's turn for a kiss once more. Greg had to force Rosa to turn. The redhead's eyes grew big when she saw the brunette's naked body. Jennie pulled her close, pressing their breasts together. Rosa moaned. Jennie's breasts were so large and full!\n\nThe brunette's eyes burned with desire as Rosa's stiff nipples sent shivered through her. Jennie's mouth searched for the redhead's. Rosa's lips met hers of their own volition and both women moaned this time.\n\n\"What a sight!\" Greg said hungrily as he watched. He also started taking off his clothes. Jennie spun the redhead toward her husband, but held her back as they both watched Greg undress. \n\n\"Don't!\" Rosa cried when Jennie reached around the redhead's body and started gently caressing the patch of thick red hair between her legs. Jennie ignored her and let her fingers drift lower. They met a hot sticky wetness that made the brunette's mouth water.\n\nGreg finished and reached for the redhead. Jennie let him have her without stopping what she as doing. Rosa moaned when Greg cock pressed against her stomach. They kissed for a moment before Greg stepped back and took her hand in his. He moved it to his cock. Rosa bit her bottom lip.\n\n\"Isn't there anything I can say that will stop you two from doing this?\" the redhead asked.\n\n\"No,\" Jenny whispered in her ear, nipping at it playfully.\n\n\"It's too late for stopping,\" Greg insisted, his eyes demanding what Rosa knew he wanted. She paused a moment longer before taking his cock in her hand and stroking. Jennie saw and thrust two fingers inside the woman. Rosa cried out and Greg covered her mouth with his own.\n\n\"I'm going to taste you now!\" Jennie whispered huskily into the redhead's ear as her fingers slipped in and out of Rosa with almost no resistance. The redhead couldn't respond because Greg's mouth covered hers, but she stiffened slightly. \n\nJennie pulled her fingers free and brought them to her lips. The smell was intoxicating and when the brunette tasted the redhead's juices for the first time she felt her own body spasm ever so slightly. Rosa tasted amazing! Jennie's pussy was already wet before, but now it was dripping. She moved her fingers back to the redhead's pussy once more and made them wet again. Rosa tasted even better the second time! \n\n\"Delicious!\" Jennie moaned. This time when she started thrusting her fingers in and out of the redhead she used her other hand to caress her own pussy. Jennie needed relief! Rosa was driving her crazy. She'd wanted the redhead all week and she was so close now that she could taste it, literally!\n\nJennie brought her sticky fingers from Rosa's pussy to her mouth for a third time. She licked them completely clean before returning them for some more juices. The brunette then pulled her other hand from her own pussy and tasted her excitement. It was different, but equally as good.\n\nGreg noticed what she was doing and smiled. He remembered making Rosa taste herself the last time they were together. She'd denied just how much she enjoyed it, but he knew better. The next time Jennie pulled her fingers from the redhead's pussy he intercepted her hand and brought it to Rosa's mouth. She sucked them in without thought.\n\n\"It's amazing, isn't it? You taste yummy!\" Jennie whispered into the redhead's ear. Greg was kissing Rosa's neck, letting her focus on the fingers in her mouth. \"I can't wait until I taste you more directly!\"",
        "Rosa was both horrified and on fire. Her mind told her that what Jennie was saying was terrible, but her body was demanding the redhead to let her do it. Greg's kisses on her neck weren't helping. Neither was his rock hard cock she was continuing to stroke. She'd almost forgotten just how big he was!\n\n\"Here, have some more,\" Jennie said, bringing the fingers of her other hand to Rosa's mouth. The redhead took them in. \"I hope you don't mind. You're tasting me this time.\" Rosa gasped and would have cried out, but the taste was incredible. \n\nThe redhead felt Jennie's fingers at her pussy once more. The brunette was working her pussy harder now. If she wasn't careful she was going to make Rosa climax. Of course, that was probably Jennie's plan.\n\n\"You like the way I taste, don't you?\" Jennie whispered into her ear. The brunette was still behind the redhead. It gave her the perfect access for what she was doing. \"Come on admit it! Don't worry. I'll let you have more if you want it.\"\n\n\"No!\" Rosa cried. \"I don't want anymore!\"\n\n\"Okay,\" Jennie smiled, pulling her fingers from the redhead's pussy again. \"I guess you like your own taste better.\" Before the redhead could protest Jennie's fingers were once more in Rosa's mouth. The redhead whimpered, but also started sucking her juices from the fingers in her mouth.\n\n\"That's so hot!\" Greg growled as he kissed from Rosa's neck to her breasts. He took one of her nipples in his mouth and she moaned loudly. \n\n\"Oh yeah!\" Jennie cried. \"I'm so wet! My fingers are drenched this time. Are you sure you don't want another taste?\" The brunette held her sticky fingers in front of Rosa's face as she moved her other hand back to the redhead's pussy. \n\n\"I can't!\" Jennie smiled at Rosa's denial. The redhead had said that she couldn't, not that she didn't want to.\n\n\"Sure you can,\" Jennie whispered, being sure to let her hot breath caress Rosa's ear. \"You know you want to.\" \n\nThe redhead's mouth was open as she panted. She clearly wanted Jennie to force her fingers between her lips, but the brunette had other plans. She continued to hold her hand out in front of Rosa, tempting the redhead.\n\n\"I know it's hard,\" Jennie continued to whisper. \"You don't want to admit just how much of a slut you have hidden deep inside. It was hard for me too, but once I did, oh my God!\"\n\n\"Stop please! I'm so confused!\" Rosa moaned. Her orgasm was close. Greg's kisses and Jennie's fingers at her center were driving her to the brink. The more excited she became the harder it was for her not to take what the brunette was offering. It was terrible and wrong, but she could smell Jennie on her finger and her mouth literally watered at the memory of the taste. \n\n\"I understand,\" Jennie whispered, taking a moment to brush her tongue along Rosa's ear. The redhead shivered. \"It's hard for you to think so close to cumming. Let me help you with that.\"\n\n\"Please!\" \n\nJennie smiled. Rosa was on the brink. It was time to push her over the edge. Jennie pulled her fingers from the redhead's pussy and started slapping the woman's clit with them. She didn't want to remove the temptation of the fingers with her own juices from in front of Rosa's face. Greg saw and thrust two of his fingers deep inside of the redhead to take the place of the ones Jennie was now using on Rosa's clit. His were far thicker than Jennie's.\n\n\"Oh my God!\" the redhead nearly screamed as her orgasm took her. Jennie grinned a moment later when Rosa latched onto her fingers. The redhead tasted Jennie once again and this time she'd taken the step. No one had forced her to lick the brunette's juices from her fingers.\n\n\"That's a good little slut,\" Jennie smiled. \"You're finally ready for what comes next.\"\n\nRosa wanted to deny it, but she couldn't. She was a slut. How else could she be locked in an orgasm that wouldn't end? Greg was still thrusting his fingers in and out of her. Instead of kissing her nipples he was now biting them and it felt incredible. Jennie's fingers were drenched in her own juices, but Rosa was doing her best to clean them off. The brunette's taste was driving her insane!\n\n\"Jennie,\" she panted once her orgasm finally dissipated. Greg was holding her up otherwise she'd have fallen. \"I release you from your promise.\"\n\n\"It's a little late,\" the brunette laughed. \"But thanks. It means a lot. It means I wasn't wrong and you want this.\"\n\n\"God forgive me,\" Rosa sighed. \"But you're right.\"\n\n\"I don't think you need to ask for forgiveness,\" Greg smiled. \"God's not that small minded, but if it gets you into bed with Jennie and me, go for it.\" The three laughed together briefly before Rosa grew serious.\n\n\"I'm still scared,\" Rosa said honestly. \"And I'm not sure if I can handle everything you two have in mind, but I'm willing to let you try and get me to try new thing. Only keep in mind, I'm pretty set in my ways.\"\n\n\"Don't worry about it,\" Jennie smiled. \"We'll take care of that.\" The brunette held out her hand. Rosa looked into her eyes and hesitated, but only for a moment. She took Jennie's hand and let the brunette lead her to her bedroom. Greg followed.\n\n\"What are you going to do to me first?\" Rosa asked nervously. Jennie took one look at her and had to fight off her laughter. The redhead looked like she was readying herself for torture instead of pleasure. Jennie grinned to herself at the thought.\n\n\"I think a little pain and suffering are called for,\" the brunette said. Poor Rosa lost the little color she had, but it only lasted until Jennie attacked her.\n\n\"Greg, help me!\" The brunette had Rosa on the bed and she was tickling the woman. Rosa was laughing and fighting valiantly. Greg grinned and jumped in. Soon he and Jennie had the redhead pinned as they tickled her unmercifully. \n\n\"Stop! Stop please!\" Rosa was crying. \"I can't take anymore!\"\n\n\"Sure you can,\" Jennie disagreed and redoubled her effort. Tears were literally falling down Rosa's cheeks when they finally relented. \n\n\"Pain and suffering, check,\" the brunette laughed. \"Now for some real torture!\"\n\n\"What do you have in mind?\" Rosa asked, knowing it wouldn't be something bad, not after the tickling. She found herself actually looking forward to whatever Jennie had in mind. That only lasted until the brunette explained. \n\n\"You're going to watch Greg and I make love without leaving or getting involved,\" Jennie said. \n\n\"That doesn't sound very fair,\" Rosa frowned.\n\n\"Of course not,\" Jennie grinned. \"It's torture, remember? Greg, come here.\"\n\nRosa continued to frown as the married couple started making love on the bed. It wasn't long before Jennie was on her back with Greg on top of her. Rosa bit her bottom lip as she watched his long and hard cock sink into his wife. She remembered how that felt and wanted it desperately. \n\nJennie was panting now. The room was comfortable, but the brunette was sweating slightly as her husband drove deep. She glistened, but it only made her look hotter. Her full breasts shivered and shook with every thrust. Rosa licked her lips as she watched. She'd never tasted a woman's breasts before, but the full bodied brunette's were very enticing. \n\nJennie looked her way and smiled despite her growing orgasm. Their eyes met and Rosa shivered. The brunette promised so much with one look.\n\n\"I said you couldn't leave or get involved,\" Jennie said. \"I didn't say you couldn't take care of yourself.\"\n\n\"I could never!\" Rosa cried. \n\n\"You're decision,\" the brunette shrugged. \"But do you have any idea what someone as beautiful as yourself playing with herself will do to a person? I doubt Greg and I could hold off from cumming for long, and then your torture would be over.\"\n\n\"Do it!\" Greg demanded. \"I want to see you play with yourself. You already proved you were a slut when you sucked Jennie's juices from her fingers. Stop fighting it and go with what feels good!\"\n\n\"I can't!\" Rosa cried, but then her hands seemed to move of their own violation to her breasts. \n\n\"That's it!\" Jennie moaned. \"Pinch your nipples. Make them hard!\" \n\nRosa couldn't believe it, but she did as directed and it felt incredible. It wasn't the first time she'd taken care of herself, but it was the first time with an audience. Greg was still stroking in and out of his wife, but they were both watching Rosa as if mesmerized. The redhead couldn't deny she liked the attention.\n\n\"What now?\" she asked, realizing she wanted more, but couldn't do it on her own. She needed direction. Thankfully Jennie and Greg were the helpful type.\n\n\"Let one hand drop lower,\" Jennie commanded, licking her lips as she watched. \"Run your fingers through the thick thatch of red hair between your legs.\" Rosa did as directed and moaned. \n\n\"I want to see your excitement,\" Greg demanded, staring at her intently. Rosa nodded and reached lower, spreading her pussy lips and letting both Greg and Jennie see her center.\n\n\"Oh wow!\" Jennie cried. \"That's so hot!\"\n\n\"You want to lick me there, don't you?\" Rosa asked tentatively.\n\n\"You have no idea how much!\" Jennie moaned in response. The redhead smiled as she pictured the brunette face buried between her legs. She started to feel guilty, but decided that she was past that, at least for tonight.\n\n\"I think maybe I'd like that,\" Rosa said, blushing slightly. \n\n\"Would you return the favor?\" Greg asked.\n\n\"I'm not sure,\" the redhead responded honestly. \"I like the way Jennie tastes, but to kiss her down there. I just don't know.\"\n\n\"Don't worry about it. I know exactly what it will take.\" Jennie was smiling confidently. \"In fact, I think I'll show you.\" She pushed Greg off of her.\n\n\"I thought I had to wait until Greg and you were done?\" Rosa asked in surprise.\n\n\"I just wanted to make sure you really were ready. If we got you to play with yourself while we watched, you're more than that.\"\n\n\"You think?\" Rosa asked, blushing again.\n\n\"I know,\" Jennie said with a laugh before shifting down on the bed and spreading the redhead's legs wide. Rosa was tense, but she didn't fight. She watched wide eyed as Jennie leaned forward slowly. She felt the brunette warm breath first. It sent a shiver through her center. A moment later Jennie kissed Rosa's pussy and the redhead felt a jolt, but even it was nothing compared to how it felt when Jennie started using her tongue.\n\n\"Oh my God!\" Rosa cried. \"Thank you! That feels so good! Thank you so much!\"\n\n\"Now that's a prayer worth delivering,\" Greg grinned. Jennie snorted in laughter, but refused to stop what she was doing. Rosa was too involved in what she was feeling to understand much less react to his words. She reached down and held Jennie's head in place. She did notice that Greg was sitting there and watching them. He was also slowly stroking his cock. \n\n\"Greg, I want to suck it! Please!\" Rosa had no idea what was coming over her, but she really needed to suck Greg's cock at that moment. Maybe it was a way of her convincing herself she wasn't a lesbian or something, but whatever it was, she wanted to feel his large cock in her mouth.\n\nGreg left the bed and moved around. Rosa's head was close to the edge. He tried to feed her his cock, but it didn't feel right at first. The redhead nearly growled in frustration before shifting further toward the edge. Jennie's mouth followed her instinctively. Now Rosa's head was off the bed and hanging down. Greg grinned and pushed his cock into her mouth. The redhead obviously liked this position much better despite never trying it before. She even pulled him deeper. His cock was lodges in her throat, but Rosa never complained. In fact, it was obvious that she liked it there.\n\nGreg fucked Rosa's mouth while his wife did her best to eat the redhead to orgasm. He had the perfect view. Jennie looked at him and smiled while continuing to lick the redhead. \n\n\"That's it Babe! Make her cum! Eat that red haired pussy!\" Both ladies moaned at his words. He decided to continue to offer encouragement. \"Rosa's got my cock half way down her throat. Our beautiful redheaded goddess is a slut!\" \n\nJennie stopped licking long enough to lift herself with her arms and see just how deep Greg's cock was inside of the Rosa's mouth. She used her fingers on Rosa's pussy while she looked.\n\n\"Wow! That's so hot!\" Jennie moaned. \"It's like seeing the cover girl from the classiest magazine you know being a complete and total tramp!\" Greg barely followed what she was saying. He was too distracted by Rosa's renewed effort is sucking him off and Jennie's wet face. \n\n\"Finish her!\" Greg growled. \"I want to taste her on your lips.\" Jennie smiled and pulled her fingers from Rosa's pussy. She reached out and let Greg taste. He moaned around her fingers and cleaned them quickly.\n\n\"It's not the same,\" he said afterward. \"But it will do for now.\"\n\n\"Don't worry,\" Jennie said, shifting back down. \"Rosa is close. It's time to make her cum!\" \n\nThe redhead moaned around Greg's cock as Jennie went back to licking her pussy. The brunette placed a finger at the entrance to the red haired opening and left it there as he began working Rosa's clit hard. She smiled to herself a moment later when the redhead's pussy seemed to suck her finger in of its on accord. Jennie pulled it free after it was all the way in and put two fingers there. She waited a moment and then thrust them deep and sucked on Rosa's clit hard. \n\nThe redhead's scream was muffled because of Greg's cock, but her pussy spasm was visible and strong as she came. Jennie pulled her fingers free and buried her face in the red haired pussy, drinking down as much of Rosa's fluids as she could. Greg pulled his cock free of Rosa's mouth as the woman came so that she could breath.\n\n\"Oh my God! Oh my God!\" she kept repeating over and over as her orgasm ripped through her. \n\nGreg and Jennie shared a knowing smile when the redhead was done. He moved to his wife and kissed Rosa's juices from her lips. The kiss was wet and messy, but they both enjoyed it immensely. Greg pulled Jennie's full breasts against his chest. He loved the feel of them against him just as Jennie loved the feel of his hard cock against her belly. \n\n\"Whoa! Head rush,\" Rosa said as she finally recovered enough to lift her head from hanging over the side of the bed, but then she laughed. \"That was amazing!\"\n\n\"And it's not over yet,\" Jennie smiled, letting go of her husband and stepping back. \n\n\"I need time to recuperate,\" the redhead laughed.\n\n\"That's okay,\" Greg smiled. \"I'm sure we can think of something to do while you rest.\"\n\n\"We could,\" Jennie said. \"But I have a better idea. Fuck her.\" Greg eyes shot up in surprise, but he could see that his wife had something in mind.\n\n\"I'm not ready!\" Rosa argued.\n\n\"Sure you are. My best orgasms are usually when Greg fucks me after he makes me cum like that. Hasn't a guy ever done that to you?\"\n\n\"Yes, but...\" the redhead began. Greg cut her off with a kiss. He didn't know what Jennie had planned, but the odds were it would be good. He thrust his cock inside of Rosa. He forgot how good her pussy felt. He moaned. Rosa gasped out for her part. \"You really are so fucking big!\" Jennie smiled. The curse word wasn't like her, but she was learning.\n\nRosa was further down on the bed now. Jennie climbed in next to the redhead's head. She leaned forward and kissed Rosa who took the brunette's tongue into her mouth without protest. The two women kissed for quite some time while Greg rode the redhead pussy slowly.\n\n\"That looks so hot!\" Greg moaned after a while. Jennie smiled and pulled slightly away, looking at her husband. She leaned forward to see his cock pushing in and out of Rosa's pussy.\n\n\"That's looks pretty hot too!\"\n\nRosa was in Heaven. Greg's cock was long and hard and he knew exactly how to use it! Jennie's kisses were just an added bonus. She was surprised when the brunette pulled away to see her husband fucking her, but that only lasted until she saw Jennie's very large breasts hanging down. The brunette probably didn't even realize what she'd done. \n\nRosa was jealous of Jennie's breasts from the start. They were perfect. Her own were too small. Oh, men found them enjoyable, especially her sensitive nipples, but she knew that most guys preferred bigger ones. \n\nShe caught herself wondered what it would be like to have breasts the size of Jennie's. It was hard not to with them hanging down so close to her face. Rosa licked her lips as she continued to stare at the brunette's full breasts. It might be interesting to get a sense of why guys liked them so much. All she needed to do was lift up slightly and she'd find out, but she couldn't do that, or could she? \n\nJennie would return to kissing her in a moment. Rosa had to make a decision quickly. She loved Jennie's kisses, but to taste another woman's breasts was both more and less than that. Could she do it? \n\nThe answer was actually easier than she expected. She wanted to and today that was enough. Jennie and Greg had pushed out any other concerns during their seduction of her. They'd proven to Rosa not only that she was a slut, but that it was okay to be one, at least for one night. Rosa lifted her head and buried her face between Jennie's full breasts. \n\n\"Oh wow!\" Jennie gasped.\n\n\"What?\" Greg asked, picking up the pace. Rosa's was wet before but suddenly she was soaked again. Something had excited her.\n\n\"She's licking my breasts!\" Jennie moaned, lowered herself slightly and started swaying. \"It feels very nice.\"\n\n\"That's it Rosa!\" Greg growled. \"Suck my wife's big tits! She loves when someone does that. Is she smothering you with them? Jennie loves to do that and it feels so incredible!\" Rosa's only response was a loud moan that came out muffles because her mouth and face were enmeshed in Jennie's breasts.\n\n\"Has she started sucking on your nipples yet?\" Greg asked his wife.\n\n\"No, not...wait, oh yes!\" Jennie's groan was very loud. Greg slammed into the redhead harder.\n\nRosa's head was back on the bed now. She was sucking one of Jennie's nipples. She really liked the feel of it in her mouth! Add to that the pounding that Greg was now giving her and her orgasm was starting to build to a crescendo.\n\n\"It's time,\" Jennie said suddenly and sat up. Rosa reached for her breasts in disappointment. The brunette pushed her hands away with a grin. \"I hope you're ready for this because I can't hold off any longer.\"\n\n\"What?\" the redhead asked, but Jennie was already moving. She shifted on the bed and suddenly all Rosa could see was Jennie's pussy. The brunette's thighs were on either side of the redhead's head. Rosa froze. Jennie was straddling her head, letting her know exactly what she wanted, what she needed.\n\nRosa had never seen a pussy this close before. Part of her was horrified, but it was only a small part. The rest was mesmerized. Jennie's pussy was soaked. The smell was intoxicating and reminded Rosa of how good it tasted. \n\n\"Please!\" Jennie moaned. She didn't sit lower and force Rosa to lick her. Jennie wanted the redhead to do it because she wanted to, not because she was forced. Rosa waffled for a moment, but then a drop of Jennie's excitement fell and landed on her lips. The redhead licked her lips and moaned. She suddenly realized that there was no real decision here. That had been made as soon as she took Jennie's hand and let the brunette lead her into the bedroom.\n\nRosa tongue touched Jennie's pussy and the brunette gasped out in pleasure. Her pussy became even wetter and Rosa got her first full taste of a woman's juices directly from the source. She moaned loudly and grabbed hold of Jennie's thighs. She pulled the brunette down onto her mouth.\n\n\"She's doing it, isn't she?\" Greg groaned. \"I can tell from your expression. Rosa is licking your pussy!\" He and his wife were facing each other over Rosa's body.\n\n\"Oh yes!\" Jenny moaned. \"And my God, she has a long tongue!\"\n\nRosa thrust her tongue even deeper. Jenny's gasped and once again the redhead's mouth was flooded with some of the full bodied brunette's juices. Jenny hadn't cum yet, but she was close. So were Greg and Rosa.",
        "\"You've been working toward this all week!\" Greg gasped out. \"This is exactly what you wanted, isn't it?\"\n\n\"Almost,\" Jennie groaned and then leaned forward into her husband's arms and kissed him. \"This is exactly what I wanted!\" \n\nNone of them were ever sure who came first, but suddenly all three were lost in release. Rosa could believe how amazing it all felt. Her pussy clamped down on Greg's cock as he pumped his cum deep inside of her and Jenny's pussy released a flood of juices that covered the redhead face. Rosa did her best to drink it all down. \n\nGreg shoved his cock as deeply as it would go. He was pumping a lot of cum inside of theredhead and she accepted it willingly. It felt like her pussy was doing its best to milk him dry. Jennie's kisses and expression as she came only made it better. His wife loved every second of this and so did Greg.\n\nJennie shivered and shook as her orgasm took her. Rosa's tongue was amazing and just knowing that the woman's beautiful face was awash in her juices really got to Jennie. Greg's kisses and the feel of him in her arms made it perfect.\n\nIt took a long time before all three of their orgasms finally subsided. They were lying next to each other and panting when they were finally able to speak again. Jennie and Greg were on either side of the redhead.\n\n\"I've died and gone to Heaven,\" Rosa smiled.\n\n\"It does feel good, doesn't it?\" Jenny asked rhetorically.\n\n\"I have absolutely no complaints.\" Greg was grinning again. He found he was doing that a lot these days. \"This is some vacation.\"\n\n\"And some birthday,\" Rosa put in. \"Thanks, this was the best gift I've ever received.\"\n\n\"Oh, that wasn't your gift,\" Jennie smiled, propping herself up on one elbow. \"That was me being selfish. I've wanted what just happened since I first laid eyes on you. Your gift is what comes next.\"\n\n\"You can't be serious!\" Rosa moaned. \"I'm completely spent!\" \n\n\"I've heard that before,\" Greg laughed as he sat up and reached for Rosa. Jennie did as well.\n\n\"No don't!\" the redhead cried. Greg and Jennie looked at each other and smiled.\n\n**********\n\n\"I still can't believe everything that happened on that vacation,\" Jennie smiled as she rested her head on Greg's shoulder. They'd been home a month and although Greg and Jennie hadn't let anyone else in their bed since Rosa, their love life was still amazing. Proof of that was in the soaked sheets under them and their exhausted and sweaty bodies.\n\n\"It was pretty amazing,\" Greg agreed, but then he grinned and added, \"Another week like that could kill a guy.\"\n\n\"Oh, so should I cancel our plans to meet up with Rosa, Joanne and Tara next month?\" Jennie teased. Greg ignored it. She knew his answer to that.\n\n\"I wonder if Rosa ever got together with Joanne and Tara?\" he mused aloud. \"I mean, she obviously liked what you and she shared.\"\n\n\"No, she didn't,\" his wife answered confidently. \"I keep in touch with Joanne. Rosa is treating our night together as if nothing ever happened.\"\n\n\"Hmm,\" Greg said thoughtfully. \"That should make it fun to seduce her again.\"\n\n\"You think?\" Jennie grinned. \n\n\"You do know that Joanne and Tara are probably planning on trying to seduce you too while we're away, right? I mean, they have to want an encore after spending that night with you.\"\n\n\"It's sweet that you think that.\" Jennie was smiling as she remembered her time with the two blonds. \"But it will never happen.\"\n\n\"They'll be disappointed,\" Greg warned.\n\n\"I don't think so,\" Jenny argued. \"They'll have Mindy to play with again.\"\n\n\"And Toni Ann,\" Greg put in with a grin. \n\n\"Those two do seem inseparable, don't they?\" Jennie laughed, but then added, \"Thank God, otherwise I think Mindy would be trying to sneak into our bed in the middle of the night.\"\n\n\"You say that like it's a bad thing.\"\n\n\"Hey, you agreed that it would be a bad idea to share our bed with others at home,\" Jennie shrugged. \"It's not like I don't like the thought of her in our bed too.\"\n\n\"Oh, I know,\" Greg grinned. \"And we were still right in making that agreement, but Mindy is having a great time teasing us.\"\n\n\"She is, isn't she?\" Jennie laughed. \"Well, that will all change once we go on vacation again.\"\n\n\"I can't wait!\" her husband replied, joining her in laughter. \n\n\"You're just excited about Toni Ann. She's another young, nubile coed to seduce.\"\n\n\"Are we talking about my excitement or yours?\" Greg joked back.\n\n\"She has developed into an attractive young woman, hasn't she?\" Jennie laughed. \"I'm pretty sure Mindy hasn't told her about us or what happened. I think she's planning having fun watching what happens.\"\n\n\"Sounds like Mindy.\"\n\nThe two fell silent for a while, enjoying each other and their memories. Greg thought Jennie had fallen asleep when she surprised him by sighing and sitting up. \n\n\"What's wrong?\" he asked in concern.\n\n\"Nothing,\" she smiled. \"I've never been happier in my life. I have the perfect man as a husband, two adorable children and some experiences that I'll never forgot. I'm more comfortable in my skin now then I've ever been before. I just can't believe this all started with a nightmare.\"\n\n\"That is pretty amazing, isn't it?\" Greg smiled.\n\n\"I'd say it's a bit more than that,\" Jennie grinned, looking at her husband in a way that let him know sleep was the last thing on her mind. Greg's grin mirrored his wife's. \n\nMaybe one day he'd track down the woman who tried to seduce Jennie back in college and thank her. She had caused his wife's nightmares, but then again, look at how it ended up?\n\nJennie came into his arms and their lips touched. Greg forgot about the woman, his wife's nightmares and everything else. He focused completely on Jennie's pleasure. He knew she did the same for him. Greg felt a warmth that had nothing to do with the lust his wife always brought out in him. He looked into her eyes and smiled. She smiled in return. There was no need for words. They both knew."
    ],
    "authorname": "JoeDreamer",
    "tags": [],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/jennies-nightmare-ch-06"
}