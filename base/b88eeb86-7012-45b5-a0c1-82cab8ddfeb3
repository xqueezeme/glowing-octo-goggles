{
    "title": "Collateral Ch. 15",
    "pages": [
        "It felt a little strange to move around the house, now that Klaus was gone. He was more familiar with the layout and everything, and he knew where to find anything he might have wanted, but he was far from feeling comfortable. \n\nThe game room was nice, though. It helped him take his mind off of things. Plus, he liked it. It was just the first day without Klaus, yet he felt he was missing the guy. How the fuck he was going to deal with the guy disappearing from his life forever? At the moment, smashing the console controller seemed like a good course of action. He needed to man up. Diaz was right. He needed to learn how to stand on his own two feet, not always hoping that there will be someone to depend on.\n\nWith that new found determination in mind, he was pretty cool when he answered the phone.\n\n\"Hi,\" he said a bit too brusquely.\n\n\"Are you all right?\" Klaus's voice sounded a bit worried.\n\nHe relaxed. \n\n\"Yeah. Only that it feels a bit strange to walk around this big house.\"\n\n\"You do not have to stay cooped up in there all the time. Go out. See your brother.\"\n\nJake's blood chilled.\n\n\"Oh, that. So you really want me to spy on him?\"\n\n\"I only mean for you to observe him.\"\n\n\"Spying, that's what it is,\" Jake sighed.\n\n\"As you wish. It is for his own good. Sorry for breaking the news to you, Jake, but your brother is not the sharpest tool in the shed. He seems to have a tendency for striking bad deals.\"\n\n\"So, I just come back and report everything to you?\"\n\n\"Only if Diaz is engaged in shady business. Otherwise, I am completely uninterested in what your brother is doing.\"\n\n\"Um, okay. But I'm not a snitch. If it's nothing that concerns you or your money, I won't tell you.\"\n\n\"Fair enough.\"\n\n\"Promise me that Diaz won't end up in jail because I tell you stuff,\" Jake tensed, waiting for an answer.\n\n\"I promise,\" Klaus responded promptly.\n\n\"Okay,\" Jake said. \"Bye.\"\n\n\"Where's the fire?\" the teasing returned, the cold businessman suddenly gone.\n\n\"Do you want to tell me something else?\" Jake steeled himself.\n\nIt was unfair that it was enough to hear the guy's voice going all low and sexy, and he could feel his knees turning to butter.\n\n\"Well, for starters, I wanted to hear your voice.\"\n\n\"Well, you did that,\" Jake tried to play cool.\n\n\"Are you feeling a tad rebellious? That gives me a few ideas for when I come back. You should prepare.\"\n\n\"Nothing could prepare me for you and your perv ideas,\" Jake said defensively.\n\nKlaus laughed.\n\n\"Tonight, at 10 sharp, be in the game room. Turn on the computer in the corner.\"\n\n\"Oh, can we get some facetime or something?\"\n\n\"Or something,\" Klaus chuckled. \"It is not only your face I want to see. Be ready.\"\n\nJake stared at his phone. Kind of rude of the guy to cut of the conversation like that. What was he trying to say by that? He shrugged. There were still hours until then.\n\nMaybe it was a good idea to go see his brother instead of just spending more time alone. He could use a distraction from his own tangled thoughts.\n\n***\n\n\"Look who decided to show up,\" Diaz smiled at him and grabbed his nape to shake it roughly.\n\n\"What's up?\" he gestured towards the rest of the guys gathered at the workshop.\n\n\"Just chilling,\" Diaz shrugged. \"We worked our butts enough for today. Thought about grabbing a beer with us? Or you only drink champagne now?\"\n\nThe gang laughed. Jake shook away his brother's firm grasp.\n\n\"Cut it out, guys. It's not like that.\"\n\n\"What are you doing there, in that fancy house, all day long?\" his brother questioned.\n\n\"I work at one of the construction sites. And I don't do much else. I only sleep there.\"\n\n\"Chill, little brother,\" Diaz grinned. \"It's good that you decided to come around. I have a mission for you.\"\n\nJake was pretty certain he was not going to like it. But he nodded shortly.\n\n\"You're spending time with this guy, right? You're in his house, so you must see plenty of him, what he's doing, who he's talking to, stuff like that.\"\n\n\"I don't see him that much,\" Jake tried to avoid Diaz's questions.\n\n\"Come on, Jake, you need to focus. This is important. I know you're not stupid.\"\n\n\"He spends a lot of time talking on the phone. But he only talks in German. I don't understand squat.\"\n\n\"Have you heard him talking to the heads of the other gangs?\"\n\nJake shook his head. That was the truth.\n\n\"Damn,\" Diaz said through his teeth. \"Look, you need to find something we can use. This guy thinks he's some big shot, coming to our town, making the rules. I know these rich dudes. Does he think he can play rough? He has no idea how's life on the streets.\"\n\nDiaz's rant was welcomed by the others, who were just nodding and agreeing on every word he said. Jake could feel his blood running cold.\n\n\"Is the guy carrying?\" Diaz asked him.\n\n\"What?\" Jake asked, taken aback.\n\n\"A piece. Is he carrying?\"\n\n\"No. He's like against guns, I think. You heard him.\"\n\nDiaz seemed satisfied with the answer.\n\n\"I knew he was nothing but a big mouth,\" Diaz grinned. \"That's good to know. Good job, bro,\" he patted Jake's shoulder.\n\n\"What are you going to do?\" Jake stole nervous looks in the other guys' direction.\n\n\"Nothing you need to know too much about,\" Diaz said. \"You're the worst liar I've seen. I don't want that Nazi to smell you know something.\"\n\n\"He's not a Nazi,\" Jake blurted out.\n\n\"What?\" Diaz looked at him, surprised. \"Are you taking his side? It was enough to live a few days in the lap of luxury and now you're too good for us?\"\n\n\"I think he means well,\" Jake spoke, curling his hands into fists. \"Come on, Diaz, don't screw up. Dude's pockets are deep. He could make it better for all of us.\"\n\nDiaz was looking at him like he was suddenly growing horns. He circled Jake slowly, sniffing him, pulling at the hem of his t-shirt, and watching him.\n\n\"Do you think that's enough to have nice clothes and eat well to be better, Jake? That guy looks down on us. I know he treats you like you're his Chihuahua or something, but you're worse than an animal to him.\"\n\nDiaz's words were met with laughter and hooting by the rest. Jake could feel his cheeks on fire.\n\n\"That's not how he's treating me,\" he turned and looked his brother in the eye.\n\n\"Oh, yeah? And how is he treating you, then?\" Diaz's scrutinizing look was making his resolve falter.\n\n\"I could go to school,\" Jake answered, trying hard not to look away.\n\n\"School? What do you need school for? You're done with school. What good that did for you?\"\n\n\"I could get a college diploma. Have a good job,\" Jake answered.\n\n\"Bullshit. The guy's going to leave in six months. He'll feed us to the sharks that'll want to squeeze every penny from this shithole. All is well now. Yeah. We're working our butts off to make a better place. For others. Do you think we will get rich? Go ahead. Go to school. Paint your hair green or whatever. Why should you care? The rest of us don't matter.\"\n\n\"It's not like that,\" Jake said again. \"We could be making an honest living. Yeah, he'll leave. But there'll be enough left for us.\"\n\n\"You're 21 for nothing, Jake,\" Diaz spat in disgust. \"Should mom and dad see you now ...\"\n\n\"How about you leave them out of this?\" Jake frowned.\n\nDiaz now seemed quite shocked with his reaction.\n\n\"Look who thinks he grew some balls.\"\n\nThe smack upside the head almost made him lose his balance. The gang laughed hysterically. He threw Diaz a dark look.\n\n\"What?\" Diaz grinned, showing teeth. \"What are you going to do, Chihuahua?\"\n\nFor a second, his vision darkened. But he held his arms flush against his body, ignoring the tingling in his muscles.\n\n\"Whatever. I thought I could hang out with you. But you're all just a bunch of douchebags.\"\n\nA few guys stood up and began to approach him. The look in their eyes held nothing good. But Diaz lifted one hand.\n\n\"Just let him be. He's young and stupid,\" Diaz spoke, almost shouting the words into his face. \"Now go back to your master, dog. And make sure to keep your eyes open. Anything you hear or see, and we can use, you come back and tell us. Got it?\"\n\n\"Yeah,\" Jake answered.\n\n\"What was that, little brother? Say it louder, so the guys can hear you. You don't want them to think you're a traitor, right?\"\n\n\"Yes, I got it,\" Jake replied again.\n\n\"Now shoo,\" Diaz gestured for him to leave.\n\nHis feet felt like lead as he headed back. His brother had a thing for making him feel like he didn't belong.\n\n***\n\nHis mood was not any better when the moment for his virtual meet up with Klaus came around. He was not that surprised to see that there was a sticky note with all the instructions on what to do on the desktop. Soon enough, he was connected. All he had to do now was wait. Oh, and see what that secret drawer Klaus talked about in the instructions contained.\n\nHe fiddled with the lock until he managed to pull the drawer open. \n\n\"Fuck me sideways,\" he murmured, taking in the contents of the drawer displayed in front of him.\n\nHis hands hovered over the squeaky plastic wraps. Everything seemed brand new. Some of them, he could say what they were. Others were of some alien nature to him.\n\n\"Hey, Jake,\" Klaus's voice called for him through the speakers, and he turned quickly.\n\nWhy did the guy have to look so fine? Jake sat in front of the computer, nervously running his fingers through his hair. Klaus was wearing a blue shirt that was bringing out the beautiful color of his eyes, making them even more striking. His hair was a tad damp. Jake could bet the guy smelled delicious right now. He probably just got out of the shower.\n\n\"Hey,\" he said back. \n\n\"What is wrong?\"\n\nDamn. He could tell even through the camera lens? That guy was a fricking genius.\n\n\"I went to see Diaz,\" Jake said, trying to choose his next words carefully.\n\n\"And?\"\n\n\"He's an asshole,\" he exhaled.\n\n\"And this is news how?\" Klaus smiled.\n\n\"Yeah. I should know better.\"\n\n\"So? Out with it. What is your brother up to these days?\"\n\n\"He doesn't say,\" Jake looked away. \"I'm not lying.\"\n\n\"I did not accuse you of that. Yet, you should tell me what is weighing you down.\"\n\nJake pondered.\n\n\"He wants to know ...\" \n\nHe licked his lips nervously. Was this making him a traitor? Diaz had taken care of him, all his life.\n\n\"Nothing,\" he pursed his lips.\n\n\"All right,\" Klaus said. \"Do I need to remind you who your brother is? He is a dangerous man.\"\n\n\"He's my brother,\" Jake buried his face in his hands.\n\n\"I know and I stand by my promise. He will have my protection, although he does not deserve it.\"\n\nJake raised his eyes slowly. Klaus's face looked as cut in stone. They were observing each other.\n\n\"He wants to know if you're carrying,\" Jake said slowly.\n\n\"Carrying?\" Klaus frowned.\n\n\"A gun,\" Jake bit his lips hard.\n\nKlaus didn't look surprised or, if he was, he wasn't showing it.\n\n\"Good,\" he just said shortly.\n\n\"What do you think he wants to do?\" Jake blinked a few times, trying to chase away the sandpaper sensation in his eyes.\n\n\"That is something only your brother can say,\" Klaus shrugged. \"Why are you so upset, Jake? You know your brother.\"\n\n\"Yeah, I know him,\" Jake recoiled.\n\nKlaus sighed and rested his chin on his linked fingers.\n\n\"And I was looking forward to playing a little with you.\"\n\n\"I saw ... Your toys.\"\n\n\"Feel free to make use of them.\"\n\nJake shook his head.\n\n\"No way.\"\n\nKlaus chuckled.\n\n\"All right. It will be my pleasure to get you accustomed to everything and use a more hands-on approach while at it.\"\n\n\"Sorry,\" Jake mumbled.\n\n\"About what?\" Klaus asked, and his eyes were filled with warmth.\n\n\"About ruining the mood.\"\n\n\"I will not hide that I was looking forward to this. But it is all right. Now, can you tell me why you are upset?\"\n\nJake watched the man picking one cigarillo from his case and lighting it. It was a signal he was ready to listen. Only that Jake did not feel like talking about what was really bothering him.\n\n\"Diaz is all I have,\" he made an attempt.\n\n\"That means you do not have much,\" Klaus replied, matter-of-factly.\n\n\"He did his best. I mean ... Always. He took care of me.\"\n\n\"When you were 9. That was when you two became orphans, right?\" Klaus asked. \"How old was Diaz?\"\n\nJake's head shot up. How much did Klaus know?\n\n\"16. He was 16.\"\n\n\"It must have been rough,\" Klaus spoke.\n\n\"Yeah. So you get it, right?\" Jake spoke quickly. \"I owe him everything.\"\n\n\"You owe him nothing,\" Klaus replied right away. \"He took care of you because that was his responsibility.\"\n\n\"You cannot put it like that,\" Jake protested.\n\n\"I certainly can. Your brother does not have any right to treat you as he wants.\"\n\nSomehow, Klaus's words were rubbing him the wrong way.\n\n\"Maybe he does.\"\n\n\"Jake,\" Klaus said severely. \"I do understand your loyalty, but you should start thinking seriously about leaving your brother behind. You can have a future. He cannot.\"\n\nJake pursed his lips.\n\n\"Who gives you the right to say that?\"\n\nAll the anger from earlier came rushing back like a flood.\n\n\"Easy there. I am on your side. On whose side is Diaz? Only his, is he not?\"\n\n\"You don't know how it is,\" Jake tightened his fists. \"How it's always been. You don't know. He's my brother.\"\n\n\"You seem particularly stubborn today. Very well. I will give you some time to calm down. I have a long day in front of me. As for you, you should head to sleep. Good night, Jake.\"\n\nJake stared at the blank screen in shock. What the fuck had just happened? Klaus had just cut him off, sending him to sleep, like he was a kid or something. He stood up and pushed the chair against the desk with a loud thump. \n\nHe began pacing the room. What was he going to do now? Diaz was planning something shady, Klaus was upset, and he was just caught in the middle. \n\n***\n\nHe tossed and turned half the night. This could not be right. He needed at least to make peace with Klaus. The man was right. Everything he said was right. But Diaz ... Jake stood up and grabbed the phone. It was the middle of the night, but in Klaus's current corner of the universe it was day. He risked making a call.\n\n\"Yes?\" Klaus replied right away.\n\n\"Um, hi,\" he said, feeling his entire courage slipping away.\n\n\"Please, be quick. I do not have time.\"\n\n\"Look, I'm sorry,\" Jake said in one go.\n\n\"I am afraid I am far from satisfied,\" Klaus cut him short.\n\n\"What do you want me to do?\"\n\n\"Do you want me to hold your hand? Be creative. That if you are truly serious about being sorry, which I doubt. Anything else? I am in a terrible hurry.\"\n\n\"No. Bye,\" Jake said.\n\n\"Good bye,\" Klaus replied in the same cold voice.\n\nCreative, huh? Jake lay on his back and stared at the ceiling. He could not sleep anyway. After a short, but arduous debate with himself, he got up and went to the game room. \n\n***\n\nHe checked the phone camera a couple of times. It looked like the angle was good. He took a deep breath. All right, he could do this. Taking a good look at the items spread on the bed, he began to think. \n\nThere was still time to back down from it all. But Klaus had clearly demanded a proper apology and this was the only thing he could imagine that would appease the man. After all, he had bought all this stuff, right?\n\nHe fiddled with the collar. Maybe Klaus really did see him like a dog. But a look in the mirror made him think differently. There was something subdued, but sexual, in that. The long leash was nothing but a thin silvery chain, and it looked strangely appealing against his tanned skin. The leather collar was thin, too, nothing too extravagant or scary there, and it made him look ... sexy.\n\nNow it was time to pick the more serious stuff. He grabbed the offending object in one hand and squeezed. It definitely looked real. It was even close to how Klaus's dick looked like. All right. He knew how he was going to use that. Now there was just one single thing missing. He rummaged again through his selection and he knew. It was going to feel fucking strange, but it was definitely going to work for what he had in mind.\n\nHe sat on the edge of the bed and pondered for a while. So far, Klaus had taken care of everything. He was thinking whether he could do it or not. After breathing in and out a couple of times, he opened the bottle of lube. Now things were getting real.\n\nMaybe he looked stupid. He checked himself in the mirror again, but he could not lie. The long fluffy tail was caressing his skin in passing. He could feel the butt plug inside him and he was half hard, without even paying attention to his cock. And, all in all, he looked damn fuckable.\n\nHe adjusted the leash so that the chain followed his spine, down to his ass crack. Had Klaus imagined him wearing all that? He must have had since he got all that from some weird sex shop. And what did it mean?\n\nNow there was no time to think clearly. The pressure inside his ass was real and, as he moved, he felt his dick twitching in expectation.\n\nHe fiddled with the phone so it could start recording. Now there was no time to feel any lack of confidence. But he should have known how to move. He loved dancing, after all. This was no different.\n\nHe put the dildo in front of him and, placed on his fours, he began undulating his back. Throwing one look towards the phone, he bit his bottom lip in what he hoped would be a sexy gesture. He eyed the dildo in front of him warily. All right, he was going to do it. Wrapping his lips around the latex body was easy. Pushing too much of it in wasn't. \n\nSo the direct approach was not that doable. He proceeded to lick the dildo and closed his eyes. How would he do it if that was Klaus's dick instead? He slowly got into the rhythm, making sure to wiggle his tail suggestively. \n\nWas the room getting warm all of a sudden? He sneaked one hand between his legs and began pumping his cock. He was pretty sure he was moaning now, giving good head to the latex cock in front of him and clenching his ass muscles only to feel a jolt of pleasure every now and then from the oversized thing in his butt.\n\nHe was close. But there was one thing he needed to do, so he squeezed his cock at the base, postponing his release. He straightened up and held the dildo so that at least some of his cum landed on it. He was breathing hard at the end of it all and he could barely keep an upright position. He brought the dildo to his lips and began licking the salty liquid, all the while looking straight into the camera.\n\n\"This is how I would apologize to you if you were here,\" he said with a smile.\n\nCamera off. Hit send. No moment like the present. Maybe he was going to regret this. He hadn't even looked to see if the recording had gone okay. With nervous gestures, he opened the file. At least, he had taken care of the scene well. It was framed all right and everything, and now he was blushing like crazy looking at himself. All right, he needed to take that thing out of his butt.\n\n***\n\nThe next day at work, he could only think why there was no sign from Klaus. The foreman had to chide him a few times for not paying attention. So, in the end, his frustrations needed to wait.\n\n5, 6, 7 o'clock. Still nothing. Maybe the guy hadn't gotten the joke. It had been a joke, right? Or maybe he was still sleeping at this hour, if he was to calculate correctly. He barely ate and went to the computer room for a game. He was done with going to see Diaz in his spare time. And he was pretty pissed.\n\nHe was in bed and mad as hell when his phone finally rang. For a moment, he thought about pretending not to hear it or something. Let Klaus taste his own medicine. But despite all the pent-up anger he kept inside, he answered.\n\n\"Yes?\" he said in a meek voice he could not recognize, as his courage evaporated suddenly.\n\n\"Is that your idea for an apology?\"\n\nHe froze.\n\n\"No,\" he replied, his throat dry.\n\nKlaus was pissed. Or not. When he spoke in that even tone of his, no one could tell. Or Jake just didn't know the guy enough.",
        "\"So it was not an apology, then? What was it?\"\n\n\"Something stupid,\" he whispered.\n\nKlaus began laughing.\n\n\"Jake, sweetheart, you are just so easy to tease,\" the man spoke.\n\nThe heavy weight on his heart disappeared in an instant.\n\n\"Why are you such a jerk?\" he mumbled.\n\n\"All right, maybe I deserve it,\" Klaus spoke. \"But you are too tempting. So you are a little into puppy play, it seems. I would not have guessed it.\"\n\n\"Really?\" it was Jake's turn to be a bit sarcastic. \"Then who did you buy all those things for?\"\n\n\"Got me,\" Klaus's voice became warm. \"I thought I was going to fight you every step of the way just to wear the collar, but you went all the way. By yourself. Now I can safely say that you are a fine piece of tail.\"\n\nJake rolled his eyes. So the guy was really having fun on his account. Not the effect he had hoped for.\n\n\"All right, glad I made you laugh,\" he said, without hiding that he was pretty pissed now. \"I thought it was cool. Not my fault you're not kinky enough.\"\n\n\"Wait, do you think I did not like it?\" Klaus now seemed surprised.\n\n\"You're laughing. What am I supposed to think?\"\n\n\"I loved it, Jake,\" Klaus's voice grew thick. \n\n\"You're just saying,\" Jake protested feebly. \n\nThat voice had a way of worming its way inside his heart.\n\n\"No, I do not just say it. It is the truth.\"\n\n\"I don't think so. You're serious about stuff that gets you off.\"\n\n\"I jerked off three times to your little homemade porn clip. Is that serious enough?\" Klaus said.\n\nJake's heart leaped for joy.\n\n\"Oh,\" he said with a grin on his face.\n\n\"Damn, I wish it was Sunday already, so I can come back to you,\" Klaus spoke. \"I have a hell week ahead of me. Even now, I am letting important people wait at the door to my office so I can talk to you.\"\n\nJake's heart stopped leaping. It almost stopped, period.\n\n\"You should go back to work, then,\" he said.\n\n\"I should,\" Klaus sighed. \"Why do you have to be so sexy, Jake? I wish I was there, to be the one to prepare you.\"\n\n\"Stop talking like that,\" Jake murmured.\n\n\"Like what?\"\n\n\"Like you're jerking me off with your voice.\"\n\nKlaus laughed.\n\n\"Up for some phone sex, then?\"\n\n\"Come on, man, you got work to do.\"\n\n\"Yes. Unfortunately. I cannot remember when was the last time I wished work could wait. I might not be able to call you over the next few days. I am getting only 5 hours of sleep per night, and that is a stretch. Only 4 last night, because of your little movie.\"\n\n\"Sorry,\" Jake felt suddenly guilty. He had mopped for hours, when the guy had just been busy as hell.\n\n\"I already told you, Jake. Do not apologize for being yourself. You are perfect.\"\n\n\"If you say so,\" Jake held the phone tightly, like he could physically touch the other.\n\n\"I do say so. Sleep tight, my little puppy.\"\n\n\"I'll never see the end of this, right?\"\n\n\"Do you want to?\" Klaus's voice was a whisper now.\n\n\"No,\" he whispered back. Then Jake shut off the phone. Whatever this was, he never wanted to see the end of it. \n\nTBC\n\n*****\n\nAuthor's note: I'm really, really thankful for all the nice comments you all left for the story. I hope you will continue to enjoy!"
    ],
    "authorname": "laurasfox",
    "tags": [
        "gay novel",
        "gay romance",
        "romance",
        "romantic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/collateral-ch-15"
}