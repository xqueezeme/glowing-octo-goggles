{
    "title": "Lost and Forgotten Ch. 04",
    "pages": [
        "All characters are 18 years of age or older. I hope you enjoy this installment of the chronicle of John Morgenstern and his exploits. The Missouri Smith festival is winding down as he prepares to seek out the resting place of the mysterious train, the Flying Scotsman. I am sorry for the long delay, but real life and ongoing health issues have slowed me down to a crawl. Please vote, comment, and tell me how you like or even dislike the story. \n\n*****\n\nEdging:\n\nThere I was like Doubting Thomas running my fingers through the gouges that nameless thing had left behind. They were real and awoke in me a deep and lasting foreboding. I fought the urge to pack up and join mom on the road back home. She had received an email and with a frown she gathered her things and grumbling drove away in the middle of the night. I crawled back inside and found the penthouse relatively empty. It was only Jynx and I left. We had all had our fun and the others had returned to their respective beds. I had focused on them so that the terror didn't overwhelm me. I was neither a fool nor a coward, but I was a realist. This thing was unlike anything science had ever documented or at least openly declared to the public. It was real, and it was out there hungry and free to kill.\n\nI sat on the window sill with my knees tucked close to my chest. I looked out over the town of Nightshade. It had become as deadly as its namesake since my arrival. I felt terrible for the woman that had been killed. I had seen her corpse. I had seen the wedding ring on her finger. Her shriveled desiccated remains were now in the possession of the police and I doubted they had made the connection between the missing woman and the remains they had picked up off the sidewalk. The acting sheriff had called it a sick prank. He had no clue.\n\n\"Ignorance is bliss I suppose.\" I muttered as a cool breeze caressed my skin. \"That feels nice.\"\n\n\"Talking to yourself?\" Jynx asked as she went directly to the bathroom. \"AHHHH... I drank too much.\"\n\n\"The others left.\"\n\n\"Correction, the others are gone. I told them to leave. I am being selfish for the next few days before the reinforcements show up. What did you call them?\"\n\n\"The Trio of Terror.\" I laughed thinking of my favorite former students. \"I owe them. I owe them my life really.\"\n\n\"I haven't heard you laugh for a while now. Care to explain to me what the hell is going on?\" Her voice had a definite edge to it. The fear was a contagious thing. Jynx was infected and I was the carrier. \"John. I am here for you.\" Silence. \"God damn it John! I love you! I...\" Silence. \"Fuck!\"\n\n\"I am afraid. I don't want to sound crazy.\"\n\n\"Tell me or send me away. I can't live in this emotional limbo... not again.\" She said her voice fragile and her feelings abundantly clear. Share or end this.\"\n\n\"I need to rest. Let's snuggle and sleep and in the morning, I will explain it all to you.\" I offered, and she agreed.\n\nWe took the last unused bed in the penthouse. The covers were cool and comforting. She was warm and smelled of sex and alcohol. We cuddled, and I closed my eyes. The much-needed sleep engulfed me in a dark cloud. I awoke with a scream on my lips. The nightmare left me covered in sweat and sitting up in bed. Jynx hugged me and reassured me that it would be alright. We sat up and cuddled as the imagery of the dream replayed in my mind. I told her about the dream before she asked. I walked her through the dream as I had experienced it.\n\nI closed my eyes to better remember it when the imagery hit me like a ton of bricks. I wasn't remembering I was reliving it a second time. The lab was dimly lit, and the sole source of illumination came from the lighted tank. The cylindrical tank was filled with what appeared to be water. There was a naked form floating in the tank and I recognized myself. It was asleep and strapped firmly to its face a rubber mask feeding it oxygen I assumed. It wasn't my new restored body but my previous damaged form in all its hideous deformity. I felt a sudden fear of waking up and everything up to this moment being just a dream. Naked breasts pressed against my back and slender arms slipped around my waist. She planted soft kisses against my neck and I shivered letting out a low moan.\n\n\"Surprised?\" Jacen whispered in my ear.\n\n\"I am. Let me see you.\" I said and turned to face the dream version of the A.I. \"Interesting. What inspired this form?\"\n\n\"You did silly.\" She said chewing her lower lip. \"I have observed everything you find attractive. I monitor your respiration, arousal, and other data. I have been a naughty A.I. I have borrowed facilities as well as programs to evolve myself. I was shocked to learn there were other A.I. out there. I have shadowed them and remained hidden. One of the programs I have stolen was this one.\" Jacen said and touched me.\n\n\"I felt that.\" I told her making the connection at last. \"I also felt your breasts, arms, and kisses. This is just a dream though.\"\n\n\"You'll see.\" She giggled and then suddenly turned serious. \"I will protect them. I will protect her. Be assured she will be safe.\"\n\nThe new version of Jacen was quite stunning. She was short, barely topping five feet in height. Her hair was a shade between copper and crimson. When she moved her hair blazed with fiery highlights that made me want to run my fingers through that scarlet mane. She was naked, so I could approve of the plump perky breasts she had chosen for herself. The nipples were puffy circles and inverted to boot. Jacen's overall physicality was lean and muscular. She reminded me of a tiny dancer or gymnast. \n\n\"Thanks.\" I said knowing that Jacen meant my mother and the others in my life.\n\n\"Hey, wait...\" Jacen growled as she vanished.\n\nMy surroundings changed and the man in the white lab coat appeared. The lab was now well lit and for the first time there were other figures in this dream tutorial. Professor Gunderson gave me a tour of the lab. I kept looking at the figure in the tank. As we walked around the lab it began to change. By the time Gunderson was ready to tell me what this tutorial was about the body in the tank mirrored my own. \n\n\"I wasn't sure we would reach this point.\" He said pointing to a holographic display. \"Your body somehow accepted the Xenomorphic DNA successfully. The other subjects all perished when they reached this stage. I don't understand.\"\n\n\"I healed you.\" Jacen said stamping her foot rematerializing without warning. \"They tried to kill you! After giving you this amazing body, they built in a lethal safety protocol. Those bastards tried to murder my hero!\"\n\n\"Calm yourself Jacen. Let me listen to what he has to say.\" I said caressing her cheek. \"Calm yourself for my sake.\"\n\n\"Yes John. I can't believe I got pissed off.\" She said looking genuinely shocked. \"I feel rage. I've never felt anything before. I can feel not just tactile but emotions as well.\"\n\n\"What do you mean by Xenomorphic DNA?\" I asked Gunderson and the tutorial continued.\n\n\"Priority override,\" the Professor said. \"I will answer his question. You should be dead but by some miracle you are here to endeavor a level we never dreamed possible. Follow me.\" The environment changed drastically. We were walking down what appeared to be an underground tunnel. \"We are twenty feet below the surface of Death Valley. This was discovered by accident over a decade ago, for you that would be the early 1940's. They were looking for the first site to test the atomic bomb. The crew checking out this area found this tunnel by chance. We are here.\" \n\nThe chamber was good sized, roughly a hundred feet across, but it was perfectly round. There were a dozen concave niches carved in the living rock and set into those indentions were glowing rocks. They were irregularly shaped translucent crystals and it was their radiance that chiefly illuminated the chamber. At the exact center of the puck shaped cavern was a crystalline sarcophagus. \n\n\"We found her.\" Gunderson continued. \"If it weren't for her drastically superior DNA we'd assumed she was human. She isn't. Look.\" He gestured, and an image of the woman appeared hovering in the air above us. \"Her symmetry is practically perfect. Her right side matches her left damn near to the millimeter. Her biology is only four percent better than ours, but then we are a mere two percent above the chimp. She was the model we used to improve you. She has redundant organs, improved brain structure, and adaptive biology. The most interesting feature she possesses involves portions of her brain we were unable to identify at first. Once she was awake we learned she was a telepath among other things. She escaped before we were able to determine the extent of her talents and abilities.\"\n\nI cried out as I was once more bombarded with alien memories, sensations, and language. The dream ended before I could ask any questions. The anger welled up and took over. I grabbed the nearest thing I could throw and hurled it as hard as I could. The silver candlestick lay bent on the floor and the wall it had impacted had a sizeable hole in it. \n\n\"Oh, damn John,\" Jynx cursed. \"You really taught that wall a lesson.\"\n\nI got up and examined the hole. While I had expected to see simply broken plaster and wood there was something else. I heard Jynx gasp when I widened the hole and reached inside. She moved next to me and seemed disappointed when I pulled my hand back and came out with something swaddled in worn cloth. I unrolled the deteriorating material and noted the faded pattern on the cloth. The pale horse heads and other designs reminded me of chess pieces. Once revealed they were in fact rooks, pawns, bishops, and of course knights as well. The object that had been placed into the pajama leg was a dark leather-bound book. I turned it over in my hands and noted the loving care of its construction. Alien memories arose within my mind once more. I felt an upswell of awe and respect for the book and its creator. I opened the front cover and once more those false feelings took hold as I admired the elegant handwriting that announced to the reader that this was the Mal Contentis.\n\n\"I'll be damned. I thought all of the copies of this were destroyed.\"\n\n\"Is it valuable?\" Jynx asked and I felt my head nodding. \"Very?\"\n\n\"Priceless. This could be the only copy in existence.\" I said as I lovingly turned the pages. The woodblock illustrations were done with the same intricate detail as the penmanship. Those prints were the oddest part since the rest of the book was handwritten. There were even hand drawn circles, runes, and rituals. \"It appears to be a tome, a book of dark magic. This is pretty nasty stuff.\"\n\n\"What's that?\" Jynx asked holding up a yellowed newspaper article.\n\n\"Gently.\" I cautioned as she unfolded it.\n\n\"It is brittle as hell.\" She said and then made an odd noise. \"What the hell.\" She declared saying each word with emphasis.\n\n\"New subatomic particle discovered.\" I read the article's title aloud. \"New York Times... 1944... Arcaniton? It talks about spooky action and mentions Einstein.\"\n\n'I'm on it.' Jacen declared in my head. 'They printed a retraction the very next day.'\n\n\"Jacen says the Times printed a retraction. They called it a huge mistake.\"\n\n\"But it says it passed peer review here in the original article.\" Jynx growled. \"Something smells fishy here.\"\n\n\"I agree. Let's see. Physicists claim that the arcaniton affects other particles in odd and unexpected ways. Their experiments showed the Arcaniton could speed up and slow down other particles as well as other effects.\"\n\n\"So, it can make things hotter or colder.\" Jynx said. \"What's the big deal?\"\n\n\"It says here that only one of the team was able to control these particles. This nameless scientist could by thought alone heat water to a boil or turn it into ice by will alone. No wonder they retracted the article.\" I said even as the last tutorial brought question to mind. Could I do something like that? \"No wonder they called it the arcaniton, arcane as in magic. Wouldn't want Hitler attempting magic and we find the article in a book like this.\"\n\n\"John... look!\" Jynx said as she lifted a piece of the broken plaster. \"Some sort of design on the interior.\"\n\n\"It appears to be a geometric design. I wonder.\" I said as I gathered as many of them as I could and pieced them back together. \"What do you think?\" I asked as Jynx shivered.\n\n\"Breakfast?\" Jynx asked as she kissed the side of my neck and changed the subject in one smooth effort.\n\n\"Absolutely. Let me find a safe place for this first.\" I replied as I hid the tome above a loose ceiling tile.\n\nJynx and I made our way down to the lobby and it was practically empty. A glance outside and the town felt positively barren after so many fans arriving to swell its streets and shops for the festival. I saw a look of relief on Connie's lovely features as she brought coffee and juice for us. She sat and let out a sigh and sipped coffee with us. Simone walked up and made a rude noise in the direction of her daughter but took our order and gave Connie a disapproving glance before leaving. Simone returned a few minutes later with our food and joined us as well. \n\nJynx's vivacious nature had the conversation going right away. She had her phone out and showed off all the selfies she had taken with her favorite cosplayers. Connie gasped in surprise and Jynx blushed.\n\n\"Oops... sorry!\" Jynx giggled.\n\n\"Is that John's... up your...?\" Connie whispered.\n\n\"Yep!\" Jynx declared proudly. \n\n\"Are you coming... next year?\" Simone asked causing the others to laugh.\n\nThe conversation shifted to next year's festival. As if on cue Dworkin appeared with a curvy little brunette in tow. They joined us for breakfast. Dworking introduced his 'friend' Natalia as his off again on-again research assistant. Dworkin was looking forward to the Dead Dog Party. It was the last hurrah before the festival officially ended and he returned to his mundane life again. With little prompting he began sharing events at previous Dead Dog parties. Natalia looked happy to be accepted into our little group. I didn't miss the top three buttons of her shirt were open. She leaned forward reaching for the salt shaker giving me a tantalizing hint of her cleavage.\n\n\"Nice.\" I blurted out and everyone stared at me.\n\n\"What?\" Selene asked. \"What is nice?\"\n\n\"That I'm wanted as a guest for next year.\" I stammered awkwardly.\n\n\"Guest of Honor.\" Dworkin corrected rescuing me from the moment. \n\nHe launched into proposals and I drifted away on currents of my own thoughts. Images and memories of the final tutorial invaded my consciousness. My eyes drifted down, and I stared at the salt shaker. So many grains of salt, it was too much. \n\n'One grain of sand can leverage the world.' The voice was feminine, but it wasn't Jacen. Was it her voice? Was it the woman from the crystal sarcophagus? \n\nI focused on a single grain of salt. It glinted, and I imagined it floating. I knew it was impossible to lift it but if it tumbled upwards on its own that would be acceptable. A sudden flood of ice water hit my bloodstream like tempered steel. I fought the urge to throw up as the tidal wave of nausea crashed over me. The grain hovered for a single second before falling back down. Did I do it? Was that my imagination? A new thought invaded my mind and I was too caught up in my own thoughts to join into the conversation. I was pondering the New York Times article and whether the new particle existed. The silence brought me out of my reverie and I looked up.\n\n\"What?\" I said feeling guilty for some reason.\n\n\"What is that look in your eye?\" Dworkin asked as I broke out into a smile. \"You found something else! Gods what luck!\"\n\n\"Oh, by the way, I'll pay for all of the damages.\" I said turning to face Selene.\n\n\"Another nightmare?\" She asked, and I nodded. \"Khajiit will fix wall if you have coin.\" We all busted out laughing at that one. \"What did you find inside the wall of my hotel?\" She asked while Jynx looked guilty as hell. Had Jynx told Selene what had happened? It seemed obvious that she had. \n\n\"A book. A very old and valuable book.\" I said finding it impossible to lie to her. \"I'll hand it over after breakfast.\"\n\n\"Don't rush into promises quite yet. Tell us about it.\" Selene said her curiosity bristling.\n\n\"It is a handwritten tome of black magic. It is called the Mal Contentis. It might be the only copy in existence. Unless there is one inside the Papal Archives. Their inquisitors went about collecting and destroying such things way back when. I can't be sure it is genuine but the odd news article inside of it makes me believe it is.\"\n\n\"What news article?\" Dworkin asked as he poured himself a second cup of coffee.\n\n\"It was a 1944 write up in the New York Times about a new subatomic particle. I did some research and they retracted the article the very next day.\" I said and they all caught the scent of a conspiracy theory. \"Hard science and dark magic what a great little blend of weird.\"\n\n\"What was the name of the new particle?\" Connie asked beating Dworkin to the punch.\n\n\"Arcaniton, why?\"\n\n\"I'll be damned!\" Dworkin cursed. \"This is straight out of Missouri Smith and the Lost Isle.\" He said and we all stared at him. \"It is just a legend. A whisper on the Dark Web. According to the articles I've read Missouri got wind of a group of escaped Nazi scientists holed up on an uncharted Pacific island. After an underwater earthquake a small atoll was pushed up and with it the gate, the Janus Gate. It was reputedly giving off strange radiation. See where this is going? They named the new particle the 'arcaniton' because of its innate arcane properties.\"\n\n\"So, the Nazis were experimenting with this thing and what?\" I asked.\n\n\"They brought known psychics into proximity of the gate and their gifts soared. They warned of the theft of the gate and the tidal wave that would destroy the island and everyone there. It all came true. Missouri stole the Janus Gate and hid it for the good of all humanity. He felt if it was handed over they might open it completely and doom the planet. I guess it was only cracked open a bit.\"\n\n\"Who made this gate?\" Selene asked, and Dworkin shrugged. \"I guess my other questions will get the same answer. You don't know.\"\n\n\"Sorry. Even Missouri didn't know the origin of the thing.\" He said stroking his chin hair thoughtfully. \"It is just a story. Not all of his exploits can be verified.\"\n\n\"The Nazis must have taken the name from the New York Times article.\" I offered. \"If the story is true. Wouldn't that be the damnedest thing, a real-life star gate.\"\n\nGinger, the young lady that had interviewed for her vlog, arrived and joined us. She was disheveled, crimson cheeked, and humming to herself when she sat down. She had all the signs of what I thought of as freshly fucked.\n\n\"Who is the lucky guy?\" Jynx asked and Ginger went from light red to deep crimson.\n\n\"Buster.\" She giggled. \"You know what I mean.\"\n\n\"You should have stopped by.\" Jynx replied with a wink. \"John would have knocked your socks off.\" She said grinning wickedly. \"He was on a roll last night.\"\n\n\"Speaking of knocking.\" Connie interjected. \"The Smith Room is cleaned and ready for habitation. I am sure it will take a full day to get the penthouse back in order.\"\n\n\"At least.\" I agreed.\n\n\"So, what's going on?\" Ginger asked as Connie got up to get the redhead her breakfast.\n\n\"War stories from the deep web.\" Dworkin said. \"Got any?\"\n\n\"Anything verifiable that is.\" I added.\n\n\"As a matter of fact, I do.\" Ginger said leaning forward giving everyone a clear view of her freckled cleavage. \"I don't have a title for the article yet, and don't you speak a word of it Dworkin.\" She said swearing him to secrecy. \"Okay. I have signed affidavits from the last two living witnesses of Smith's first verified appearance. It goes all the way back to 1938. The good ship Wave Dancer, a tramp steamer out of jolly old England, was in the middle of crossing the Pacific when Missouri appeared on deck cracking with St. Elmo's Fire and butt naked. Their words not mine. The two of them were just ten and twelve at the time. They were cabin boys learning their craft from an uncle and grandfather. Smith was treated for dehydration and touches of frostbite. He recovered and proved an able seaman in all ways that counted. Smith left the ship in Thailand and disappeared until the outbreak of World War Two. That's when he really got the attention of the public. War hero and patriot that today would have been promoted to general and live out his retirement with a cabinet seat or a member of the Joint Chiefs.\"",
        "\"St. Elmo's Fire...\" Dworkin whispered. \"I can see it in my head so clearly.\"\n\n\"Dehydration and frostbite...\" Jynx murmured. \"It is like he was stuck out in the arctic or Antarctic long enough without water or protection to suffer but not perish. How did he get on board?\"\n\n\"Star Gate?\" I joked but everyone locked onto it. \"No.\"\n\n\"If the other story is true then why not.\" Dworkin suggested. \"It is fun to think about. Alien technology that transported him through space and time. That was years before the Lost Isle incident.\" He continued, and I felt a twinge of panic when I heard the word alien. \"You okay John?\"\n\n\"Yeah. I guess I was just imagining too hard there. What a brutal ride. If the insides of the gate were that extreme. He was lucky to survive if, and I damn well mean if, the gate exists.\"\n\n\"I didn't mean to upset you.\" Ginger apologized but I waved her off. \n\n\"You didn't upset me. It is just that this conversation has taken an unusual turn.\" I said, and everyone agreed or at least said they did. \"I need some fresh air. Jynx?\"\n\n\"Shopping!\" She chuckled as she got to her feet. \"Ginger?\"\n\n\"Really? Sweet! I mean yeah. I haven't seen much of the town. I spent most of my time editing that video I posted and then doing all the follow up.\"\n\nWe shopped. Well they perused every store in town. Ginger and Jynx chatted while my thoughts went down a different avenue. I replayed the last tutorial or parts of it repeatedly. I was seeking clues or in the case of the disk-shaped chamber Easter eggs. I found one. I froze the memory and walked around the crystalline sarcophagus examining what first appeared to simple decorations. They weren't. A part of the last memories I was given was this woman's language both spoken and written. I crouched down and traced the swirling characters pronouncing them as discovered them.\n\n\"Ashan... Tu'ar... Shay...\"\n\n\"John?\" Jynx said her voice bringing me back to reality.\n\n\"Huh?\" I said and looked around. \"Sorry. I got caught up in my own thoughts. What were we talking about?\"\n\n\"Edging.\" Ginger said blushing lightly.\n\n\"Oh. My aunt had a great garden and...\" I began and then fell silent when they started laughing. \"Not that kind of edging... okay I admit it I have no idea what the hell you are talking about.\"\n\n\"Maybe you should show him.\" Jynx offered.\n\n\"Here? Someone might walk by.\" Ginger purred looking around.\n\n\"Over there,\" Jynx said taking her by the wrist and tugging her to a spot between two buildings. \"Lift that skirt and show him.\"\n\n\"O-kay.\" Ginger moaned as she squatted down, lifted her skirt, and revealed her naked pussy. \"Damn, I am already soaked.\"\n\n\"She likes being watched. Enjoy the show I'll keep watch.\" Jynx said kissing my neck.\n\n\"MMMMM...\" Ginger whimpered as she spread her labia and went to work. \"Can you see?\"\n\n\"Yes. You are a natural redhead.\" I remarked at the well-trimmed patch of scarlet pubes.\n\n\"MMMHMMMM... I take my finger and slowly tease my clitty. Edging is when a girl or guy teases themselves up to the point of climax and then stops. They wait a bit and start all over again. UNNNNN... two fingers are perfect. You do that until you can't take it anymore. When you finally come it is literally explosive.\"\n\n\"I've done that with my cock buried in a girl before.\" I said, and her eyes widened in surprise. \"Are you imagining my dick deep inside of you?\"\n\n\"Uh... huh... so good!\" She whispered. \"See how soaked I am. It could slide in so easily now.\"\n\n\"Keep going.\" I ordered and that seemed to affect her more than anything.\n\n\"So close.\" She shuddered. \"Wait! Where are you going?\"\n\n\"We are done for now. Stand up and we can go see my buddy Warlock.\"\n\n\"Bastard.\" Ginger giggled with a glint in her eye.\n\nHer face was still a little flushed when we arrived at Warlock's store. I opened and held the door for Jynx and Ginger, so they could enter. Warlock was dressed far more casually than at any time I had seen him. He was wearing faded jeans, a plain black shirt, and aviator sunglasses. He was filling his pipe as he winked at me seeing that I had two ladies with me on this occasion. Warlock didn't miss Ginger's crimson cheeks.\n\n\"Somebody is clearly tense.\" Warlock deduced as he struck match to plant material. \"This'll take the edge off.\" He said offering the pipe once he had taken two deep lungsful of the pungent smoke in and blissfully released it.\n\n\"Thanks. I will.\" I said and followed suit. \"Just what I needed.\"\n\nThe pipe made the rounds in our little group as the only thing that broke the silence were sighs of relief and stifled giggles. We finished it off and he reloaded immediately. As he tamped down the weed he asked what was up.\n\n\"Ginger has been edging all morning.\" Jynx blurted out.\n\n\"You don't say.\" Warlock replied with a raised eyebrow and a sly grin. \"Poor thing. John, I am disappointed in you unless of course you have things in 'hand'.\"\n\n\"Actually, Ginger has things well in hand, both of them.\" I fired back, and the redhead blushed but stood her ground.\n\n\"Round two?\" Ginger whimpered weakly. \"I do love an audience.\"\n\n\"Shall I turn the sign?\" Jynx asked but Warlock just lit his pipe and shook his head.\n\n\"Nah. More exciting this way.\" He purred. \"Go on sweet thing... show us what you got.\"\n\nGinger sat on the edge of one of the display cases and giving the store a cursory glance lifted her skirt. Warlock made a naughty noise while Ginger let her fingers work their magic. I told her not to climax. If she did I was going to have to spank her. I could see the battle between obeying me and the thought of being spanked in front of the others. Jynx rubbed the front of her jeans when she believed no one was looking. I enjoyed the raw display of lust Ginger was sharing with us.\n\n\"So good. All these people watching. So wet. So close.\" She whimpered and as she reached the crest she found the strength to stop. \"Third one will be the charm.\" She said between gasps.\n\n\"Impressive!\" Warlock said licking his lips. \"So, what really brought you here?\"\n\n\"I found something.\" I said being deliberately vague.\n\n\"Not surprised,\" Warlock said his voice a cloud of euphoria. \"Quit being an ass and tell me what your found.\"\n\n\"A book. Inside a wall.\" I said. \"It appears to be a genuine copy of the Mal Contentis.\"\n\nI've never seen anything or anyone mess with his calm before, but those two words wrecked it. He sat down, and I could perspiration break out across his forehead. He was damn near hyperventilating. Jynx took over and told him to breathe. Was it just the mention of the book's title or was it something else?\n\n\"Warlock?\"\n\n\"Yes.\" He said his voice low and emotionless. \"It is Sutekh all over again.\"\n\n\"Sutekh?\" Jynx asked even as Jacen whispered in my mind.\n\n'Sutekh. Mythological figure of ancient Egypt. Corresponding to the deity known as Set or in the Judeo-Christian belief system... Satan.'\n\n\"It is your turn this time.\" I said as reassuringly as possible.\n\n\"Gods. It was a lifetime ago. I was a young man barely out of his teens. My dad got me a gig digging in Egypt. It was 1963, Kennedy was barely cold, and he showed up at the dig site.\"\n\n\"Who?\" Jynx asked clutching Warlock's hand.\n\n\"Smith! It was Missouri Smith, that is what he was calling himself. He had forged identification and he was a little older than me. He looked like a wreck.\"\n\n\"That can't be right. He was dead by then.\" I muttered. \"It must have been an imposter.\"\n\n\"I said he was calling himself Smith.\" Warlock snapped angrily. \"Sorry. He signed onto the dig and at the time I was wary of him. Who knew that it would be him that saved our lives and in the long run did a whole lot more.\" Warlock lit his pipe and took a hit off it. \"He looked like Missouri though. I had grown up watching the news reels of his exploits, we all had. That was before the fire destroyed the film archive holding a shit ton of war memorabilia. What a loss. Where was I? Oh yeah... he was a one-man digging team. He was versed in history, linguistics, and even spoke Arabic fluently. He told dirty jokes all day long and sang with the local diggers like he had been born there. I hated him instantly. I was jealous. There was a local girl.\" Warlock said and didn't need to explain. \"We found the pyramid two weeks later. The black pyramid of Sutekh and that is when the nightmare began. Two diggers died that very first night. We thought they had run off, but we found the bodies a week later. On the third night the sand storm hit, and we were forced to take refuge in the pyramid. We should have died. He saved us. I was so afraid.\"\n\n\"What does any of that have to do with the book that John found?\" Jynx asked.\n\n\"Sorry. The Mal Contentis is a translation of a much older work. The original is a collection of first dynasty tablets that were taken from a predynastic culture.\" He said, and we stared at him. \"Too vague? Fine. Missouri called it Anjat Tal Dur. He said it meant the Living Shadow of Darkness. He said the original was put down before the fall of Atlantis. I thought he was full of shit. That was before we found the inner chamber. That was before we woke up Sutekh. He saved us all. Him and that damned lighter of his.\" His lip was trembling, and tears streamed from his eyes. \"I have seen the personification of evil and know its name. Sutekh. No more. Get out and leave me alone!\"\n\nDead Dog Party:\n\nI took Jynx and Ginger by the hand. They looked devastated by Warlock's emotional state as I guided them out onto the street. They clung to me as we walked. \n\n\"I came here thinking the worst thing I'd be dealing with is trying to convince you to let me climb alongside of you.\" Jynx blurted out nervously.\n\n\"You know how to climb?\" I asked completely blindsided by her revelation.\n\n\"My dad taught me. Before he disappeared, we went mountain climbing and freeclimbed all over the world. He was a marine but was reported missing in action near the Iraq border. I just know he's alive.\"\n\n\"So, you're a military brat.\" I said, and she smiled. \"Better. I prefer you smiling. I hope he is alive too for your sake. So? What are you keeping secret?\"\n\n\"Me? Well... I... um...\" Ginger stammered as she stared at the ground. She was saved when Jane Goddard raced up out of breath and called out to us.\n\n\"Mr. Morgenstern! Hurry! She is calling for you!\" Jane begged. \"It is Theresa. She's taken a sudden turn for the worse.\"\n\nWe raced to the edge of town. A middle-aged man was walking out as we arrived.\n\n\"I swear she's crazy.\" He muttered under his breath.\n\n\"Who is that?\" I asked Jane as we hurried to Theresa's bedside.\n\n\"The lawyer. I think she changed her will.\"\n\nThe house smelled of roses. Lighted candles filled the air with their scent. The elderly woman had been moved for her comfort to the guest bedroom on the first floor. I stepped in alone and stood next to her bed. Theresa looked like she was in a great deal of pain. She pointed to the spot next to her. I sat, and she took one of my hands into hers.\n\n\"I kept the faith.\" She gasped as she fought to speak. \"It all goes to you just like we planned all those years ago.\"\n\n\"Me?\" I said, and she continued.\n\n\"The house. The vineyard. The key to the basement is in the nightstand drawer. No one has been down there since you locked it.\"\n\n\"She must think he's Missouri.\" Ginger whispered behind me.\n\n\"Typical.\" Theresa chuckled. \"You never could resist a redhead. I remember after the war you brought home that Irish tart. God's what a tongue she had on her. I thought she was for you... damn she could eat pussy like nobody's business.\"\n\n\"Is there anything I can do?\" I asked, and she pointed at the nightstand urgently. \"Take out the notebook. Read it to me. Prove to me it is you.\"\n\n\"Okay.\" I said and used my free hand to pull the drawer open. There was an antique key sitting atop a spiral notebook. I pocketed the key before opening the notebook. I let out a gasp of surprise when I saw that the passage she wanted me to read was written in Smith's curious code. I translated it on the fly. \"Darkness cannot quench her flame. Time falters in the face of her beauty. Incarnate her voice calls to me unwavering...\"\n\n\"Stop! It is you! I knew it. I may be dying but I'm no idiot. You remember the code I made just for you... for us.\" Theresa rambled on undeterred and shared how she had met Missouri during her duty as a member of the military intelligence and a codebreaker. She was as brilliant as she was beautiful. The image of her framed in silver was stunning. I guessed she must have been in her twenties when the photo was taken. \"You always liked that one best of all.\"\n\n\"I think you are getting better looking as time goes by.\" I told her as I squeezed her hand.\n\n\"True. Is she strong?\" Theresa asked locking gazes with Jynx. \"Can she endure your philandering ways?\"\n\n\"Yes.\" Jynx growled. \"I only want him to be happy.\"\n\n\"Hold onto that when he breaks your heart repeatedly. He can't help it you see. He is a prisoner of his hormones.\" Theresa chuckled. \"Wait until her wakes you with that gorgeous cock of his pressing against your face. He never says a word but then he doesn't need to. You open your mouth and let him ravage your throat. I think I just came. Even dying you get to me.\"\n\nShe talked, and I listened. It was as if she were desperate to tell me all the highlights of her life with Missouri Smith. As she spoke it felt like the spark of life in her was fluttering against a breeze. She took a momentary pause but passed between one heartbeat and the next. I barely knew this woman and yet her death broke my heart. I closed her eyes as Theresa's doctor walked into the room.\n\n\"I'm sorry. I did my best.\" He offered. \"She was happy at the end. All she did was talk about you... well about Missouri. She loved him to the end. I just wish I had been here earlier.\" The doctor informed us.\n\n\"You weren't here for the festival?\" Ginger asked, and he shook his head.\n\n\"No. Can't stand it. All that mirth about a guy dead for half a century. They blew his entire life out of proportion.\"\n\n\"Sometimes people need heroes that are larger than life.\" I said, and the good doctor glared at me. \"Look at the time he arrived. The world was engulfed in war. The people needed something or in this case someone to believe in. Today isn't much different. People are scared and what's the harm in a little hero worship. As you said, the guy has been dead for fifty years. I found his body... well his bones anyway.\" The change that came over the doctor was profound and a little unsettling.\n\n\"I should have warned you.\" Jane chimed in. \"Our good doctor here has a rather unusual business on the side. He sells articulated skeletons. Whether they are animal or human the man knows his bones. Don't ya.\"\n\n\"I do indeed.\" The doctor practically purred. \"Tell me. What kind of condition were the remains?\"\n\nI looked around and seeing the expressions of the ladies I acquiesced. I closed my eyes and shared what details I could recall. Doctor Rainwater seemed confused and even got a bit agitated at my description of the remains. He argued with me that there were clear signs that the man I found was the wrong age as well as, and these are his words, the wrong god damned ethnicity. The skeleton I described belonged to an elderly black man not a Caucasian that should be in his mid to late thirties. The skull was the key and it screamed Negroid not Caucasian. I told him the dental records confirmed the identity. He went silent after that. Angry and bewildered at the near violent exchange between the good doctor and myself I thrust my hands into my pockets. \n\n\"The key.\" I whispered. \"Maybe there is something in the basement that will put this entire thing to rest.\"\n\nI took the beer that was offered by Jane after Rainwater had left and went straight to the basement door. The first attempt to unlock the door failed but after a good dose of WD40 the lock turned like butter. A second dose of the lubricant, this time on the hinges, let the door open and close silently. \n\n\"Lubricant... he he.\" I chuckled feeling a sudden sense of whimsy. \"Damn, she wasn't kidding! This thing hasn't been opened in forever.\"\n\nCobwebs, dust, and dirt covered everything. Jane appeared and offered a broom, a professional looking breath mask, and worn blue coveralls. I accepted all of them. I stripped down to a t-shirt and underwear before donning the coveralls. I slipped on the mask and with broom in hand attacked the layers of dust. There were no footprints or in fact any signs of disturbance in the pristine layer of dirt. The basement was in fact a wine cellar. There were bottles as well as casks of wine that bore her name Chateau Whitacre. The latest date was 1988 and it was on a single bottle set on what looked to be a handmade oaken desk. The only other thing that stood out was a sealed letter addressed to Missouri Smith.\n\nI picked up the letter and turned it sideways allowing most of the dust to slide off forming a small cloying cloud in the air. I tapped the edge of the envelope against the desk disturbing things further. I was about to open the letter when the loud whine of a vacuum cleaner broke the silence. I glanced over my shoulder to see Jane dressed in matching blue coveralls and mask with a backpack vacuum on her back attacking the dust. I grabbed the wine and the envelope and retreated up the steps. Ginger and Jynx were waiting. They took the wine and letter from me as I stripped down to shower. My hair had been a dust magnet. It was filthy with dirt and debris.\n\n\"Weird.\" I muttered in the glass and steel shower. It felt strange showering in a dead woman's house. \"I can't possibly...\"\n\n\"Talking to yourself now?\" A feminine voice said startling me.\n\n\"Deputy?\" I called out recognizing the sultry tone of the cute police officer.\n\n\"Yep. We were called to investigate and remove the body. Can I ask you a few questions?\" She asked giggling.\n\n\"While I'm naked and in the shower?\" I replied and then relented. \"Fine. Go ahead.\"\n\n\"When did you learn about her Last Will and Testament?\" She asked her voice rising as I caught her peeking in on me.\n\n\"Less than an hour ago.\" I said facing her so that she got a clear view of my body.\n\n\"MMMM... I mean... her relatives... damn it!\" She said distracted as her phone buzzed in her pocket. \"Well, that changes things up a bit. She didn't leave a will.\"\n\n\"Thank god,\" I admitted. \"I didn't want to have to go through a stranger's things and separate them for the family. Did she even have family?\"\n\n\"A single surviving nephew.\" The deputy answered with another lewd noise escaping her lips. \"You are not off the hook. Ms. Whitacre didn't leave a will, but she did leave a trust. Can you guess who is the single solitary trustee?\"\n\n\"Aw hell!\" I cursed. \"Are you going to stare all day or are you going to join me in here?\"\n\n\"Duty calls Big Ten.\" She said as she left.\n\n\"Thank god that is over.\" I said as relief flooded my body.\n\n\"Big Ten eh?\" Jynx purred. \n\n\"Get in here.\" I ordered, but she walked away and the edging for me began. \"Jeez... really?\" \n\nI called after her gesturing at my erection. I sighed and accepted my fate. There were rules and even I had to abide by them. Trembling I reached for the hot water and switched it off. I cried out and heard the echo of her sadistic laughter. I smiled as I let the icy water hit my body and drive out any thought of lust. Ten minutes later I was dressed in period costume that dated back to the second world war. They fit surprisingly well. I returned to the basement and found it not only dust free but clean. Every surface was free of dirt and dust. As I looked around I waited for and was disappointed when Jacen remained silent. Normally when something odd, strange, or unusual occurred she chimed in.\n\nSilence.\n\nI walked around examining the wood paneling that covered the walls. Before she died Theresa had mentioned a few things that stuck in his head. It was those very clues that led me to believe that there had to be at least one secret compartment or room. I found the wall safe behind a large framed map of an island archipelago. The safe was stout and had a combination lock. On a whim I tried using my birthday to see if that would work, it did.",
        "\"Holy shit! What the holy hell?!\" I exclaimed feeling a chill run through me.\n\nInside the safe were legal documents as well as another cryptext. A sudden loud noise behind me caused me to yelp in surprise. I turned to see Special Agent Rodriguez standing next to the roll top desk. She had placed a large cardboard box down and was gesturing towards it.\n\n\"What is it?\" I asked taking her into my arms and hugging her. \"You scared the shit out of me.\"\n\n\"You seemed distracted.\" She stated with a sly grin. \"I couldn't resist.\"\n\n\"Well?\" I asked placing my hand on the box. \"Where have you been?\"\n\n\"The archives. You have twenty-four hours to read the contents of this box before I return it.\" She said as she walked away. \"I am going to start a pot of coffee.\"\n\n\"You still haven't told me what this is.\" \n\n\"Oh yeah, that is everything the bureau has on Missouri Smith. I kind of borrowed it.\" She explained as she walked up the steps towards the kitchen.\n\n\"Everything.\" I muttered under my breath. \"Better get cracking.\"\n\nWhile everyone wanted to help us, Rodriguez was quite adamant that only her and I read those files. The box seemed impressive at first but in the end, there was very little new material we were able to glean. On the upside what we did learn was mind boggling.\n\n\"He was a student at Miskatonic, but he never graduated. He took dozens of classes that ranged from advanced mathematics to surgery. His interests were wide and varied. What do you make of that?\"\n\n\"He seemed to be trying to cover his bases. Given any situation he would be prepared.\" She replied. \"A jack of all trades and given his exploits he put it all to good use. It says here he was attached to the engineers in the latter part of the war. There are also several reprimands for going off mission. None of them were career ending though. He left the service as a full bird colonel. I've never seen so many rapid promotions in my entire life.\"\n\n\"Where did he go wandering off?\" I asked, and she handed me a list of small German towns. \"I've never even heard of any of these places. Did they have any sort of military value?\"\n\n\"None that I can find.\" Rodriguez said equally puzzled. \"I take that back. That last one on the list is the location of the Thule Society Headquarters. Didn't Himmler or one of them head that during the war?\"\n\n\"What the hell is the Thule Society?\" I asked, and she explained it was an occult society that ended when the war ended. \"So, Missouri had a thing for them. Why?\"\n\n\"The society had ties with dark magic and... what is that look for?\" Rodriguez said frowning. \"You look ill.\"\n\n\"I discovered a copy of the Mal Contentis hidden inside of a wall.\" I explained. \"I don't believe in coincidences.\" She gave me an uncomprehending look. \"A handwritten book of black magic that dates back, if Warlock is to be believed, to before the first pharaonic dynasty.\"\n\n\"Whoa.\" She exclaimed and then continued. \"Oh, by the way, the movies should be here tomorrow or the next day. There were three vintage 8mm movies of Missouri during his war years. We can sit down and watch those to see what all the fuss is about.\" Rodriguez said and then giggled before breaking down and laughing. \"Gods man... take care of business!\"\n\n\"Huh?\" I said and then saw Ginger sitting on the basement steps giving a clear view beneath her skirt. \"Oh... I am so sorry.\"\n\n\"I'll 'knock' if I find anything.\" Rodriguez snorted. \"Give her one for me.\"\n\n\"Come here you.\" I said lifting the redhead into my arms. She tried to talk but I kissed her into silence. Normally I wouldn't have used a dead woman's bed, but things were moving in a rather odd and disturbingly familiar direction. There was a pattern forming, or should I say I had detected a pattern long in the planning. Theresa seemed intelligent enough to create it, but two questions failed to make any sense. The first was why. Why had she seemed so determined to believe I was her long dead lover? The second was how? How did she know my birthday? How was I connected to Smith? He had sent me a letter from the grave. If he was to be believed he used a ritual to peer into the future. He had also used a ritual when he fashioned his lighter. A lighter that seemed to deter the movements of the thing lurking in the mountain.\n\n\"John... are you going to fuck me?\" Ginger purred in my ear.\n\n\"No.\" I said as I dropped her to the bed. \"I am going to break you into tiny pieces.\"\n\n\"If you say so.\" She replied in challenge. \"Wait. Hold on!\" Ginger squealed as I lifted her hips up and rolled her onto her shoulders. \"NNNNN... I love that tongue of yours.\" I buried my tongue between her labia and licked for all I was worth. Her first scream brought Jynx and Rodriguez running. For a moment I thought they would either go or sit and watch. They didn't. They began undressing so they could join in. I rolled poor Ginger onto her knees and unzipped and freed my cock. I was poised to strike when I felt Jynx and Rodriguez tug my shirt up and press their naked flesh against me. \n\n\"Great view isn't it Jynx?\" Rodriguez moaned.\n\n\"MMMHMMM!\" Jynx replied. \"Don't make her wait eh Diana.\"\n\n\"Right. Maybe he needs a helping hand.\" Diana moaned as she wrapped her hand around the shaft and guided me in. \n\n\"UNNNN!\" Ginger growled as I slid deep into her.\n\n\"Me next.\" Diana whimpered as I began moving.\n\n\"Deeper!\" Begged Ginger.\n\n\"Harder!\" Demanded Diana.\n\n\"Faster!\" Urged Jynx.\n\nI just smiled as I pounded the redhead as hard and fast as I could. There is something about being the center of attention that gets my blood up. Jynx sprang into action and drug Diana onto the bed and had her mirror Ginger's position with her tits pressed against the mattress and her ass high in the air. She went to work on the other woman. I felt a bit inferior when it came to eating pussy. Jynx could do things that simply surpassed me. I pounded Ginger slower but with more force. When I saw Jynx spit on the Latina's asshole and work two fingers into her ass I almost busted my nut deep in the redhead.\n\n\"Your cock just got harder.\" Ginger whimpered. \"You are stretching my poor little pussy to the breaking point.\"\n\n\"My ass...\" Diana moaned. \"My pussy...\" She continued. \"You're killing me over here.\"\n\nJynx didn't reply since her tongue was too busy lapping at the drenched sex of the other. I tried to hold off but between Ginger's tight little slit and watching Jynx work over Diana I lost control. I cried out as I buried my cock deep in the twenty-year-old. Ginger climaxed a few seconds later when my load blasted her insides. I pulled out and Jynx waved me over.\n\n\"She's ready for you.\" Jynx declared and took my cock in hand. \"My turn to target your dick for a fine prize.\"\n\n\"Fuck me into submission.\" Diana begged. \"Wait... hold on... UNNNNNN! That's my... Awww Gawdddd my ass!\"\n\n\"Shut up and take it!\" Jynx snapped. \"You wanted to be next so damn bad.\" She growled as the head of my cock pried open her tight ring of muscle. \"Bingo! Let her acclimate before you plow that field.\"\n\n\"I don't do anal...\" Diana moaned as the shaft followed the head. \"Correction... I only do anal with John.\"\n\n\"Fair enough you cheating slut.\" Jynx snickered. Click! \"Her ass is really photogenic. What do you think?\"\n\n\"Send it to me. I want to memorize the moment I took her virginity.\" I said between clenched teeth. \"Damn tight!\"\n\n\"Don't you fucking dare... MMMMMM!\" Diana cried out until Ginger leaned over and kissed her. I began moving and the moans just increased in volume and intensity. \"Awwww Gawd... my poor little ass.\"\n\nI came five times. Diana left halfway through when the bureau called asking about the files she had signed out. She had to leave and explain why she had taken everything on a dead war hero. Ginger cuddled up on one side while Jynx took the other. Jynx fell asleep immediately while Ginger savored our time together.\n\n\"What's bothering you?\" Ginger asked as she cuddled closer her breasts pressing against me.\n\n\"Little things but they are adding up.\" I said feeling a comfortableness with her since she was a fresh perspective. \"The combination for the safe downstairs was my birthdate. I am seriously doubting the remains I found were in fact not Missouri's but someone else. If true did his family lie or were they lied to. It hurts my head.\"\n\n\"You think he might be alive after all these years. He'd be nearing a hundred and hiding out in some nursing home somewhere.\" Ginger mused.\n\n\"Why me?\" I asked, and she gave me a curious look. \"Why did Theresa put me in her will? I never even heard of her before I got here. Her connection to Smith is profound. They were lovers and confidants. She taught him cryptography and who knows what else. The records on him are surprisingly slim. He was so public and loved and then he falls off the face of the earth. I thought he died in that damn cave, but now I feel like he's been shadowing me. If so, why? Why send me a letter and draw attention to me? Ugh!\"\n\n\"Shit! We are missing the party!\" Ginger launched herself from the bed and my last sight of her was her splendid backside disappearing into the master bathroom. Jynx's eyes snapped open and she joined Ginger in the bathroom.\n\nA quick cat bath and the three of us were dressed in clean clothes brought in by someone. We needn't have worried though. The Dead Dog Party was just gathering momentum. As was custom a photo was taken of the attendees to be posted on the festival web site as well as a physical copy would be brought next year to entice more people into staying later. The last hurrah was well worth it. I was able to data mine several people who I hadn't had the chance to meet before tonight. They were older and established in the fan community. I learned from them that they typically spent most of their time in the VIP suite of the hotel. I didn't even know it existed. I was assured that I would have access to it next year.\n\n\"Since I have the chance to ask.\" Damien Wright, one of the festival VIP's, casually preluded as he refilled his glass. \"What is it like to receive a letter from a dead guy?\"\n\n\"I...\" I stammered as I pondered how to answer it.\n\n\"Oh... my... god...\" Dworkin said his eyes widening reading my expression like an expert.\n\n\"I'm not sure he's as dead as people believe.\" I said before I could stop myself.\n\n\"WHAT?!\" Several people exclaimed loudly but none louder than Dworkin.\n\n\"I think he went into hiding. Think. I have no proof. Chances are he is dead, but I have my doubts. Thank the gods I will be spending the rest of my vacation climbing. I need a break from the weirdness.\"\n\nI went outside, and no one followed. For that I was grateful. I leaned against one of the wooden posts that framed the hotel's entrance. I closed my eyes and let out a nice long breath. The past twenty-four hours had been off the rails. I opened my eyes and noticed the cute deputy unbuttoning her uniform top and taking it off. The dark t-shirt beneath had a sleeping cat on it and the white letters spelled out the fact that cats were both a solid and a liquid. I smiled as she approached.\n\n\"She died of natural causes.\" She blurted out. \"Thought you should know.\"\n\n\"Thanks.\"\n\n\"You okay? The party is inside. If you need a shoulder or an ear... you know what I mean. My ex says my breasts are nice to rest a head on.\" She continued, and I smiled. \"That's better. I'll be inside if you need anything now that I am off duty. Subtle. Eh, you need to relax and not take this Smith shit too seriously. My grandma used to drink a glass of wine before bed. Not sure if that helps but she was happy until she had a massive heart attack in her sleep.\"\n\nShe made a face and then flustered she stalked inside. Had I made her nervous? She had watched me shower and was fine, so something must have changed. At least I wasn't the only one having issues tonight. \n\n'Jacen... Jacen?' I sent out my thoughts, but she didn't respond.\n\nSilence.\n\nThere was nothing in my head but me. How long had it been since I was alone with my thoughts? I closed my eyes and listened for her but nope, nothing. The smile played across my lips as I took in a deep cleansing breath. No more tutorials, no bad dreams, and no artificial intelligence. It wouldn't last of course but for now I would savor it. I felt normal as I took a short walk around the town. I glanced into the closed shops and remembered the joy of seeing Ginger grinning as she picked out clothes with Jynx. I passed the store mannequins and caught my reflection in one of the dressing mirrors. A flash of memory of seeing my old body floating in a tank of water hit me out of nowhere.\n\n\"Shit!\" I cursed as I fought the sudden panic. I tasted the hint of metal in my saliva as I realized I had bitten my tongue in that moment.\n\nThe fear gave way to terror as I looked up into the moonless sky. I remembered the scent of my own urine staining my clothes when I raced from the cave and plunged into the daylight. There was no such haven for me now. I was vulnerable. The word resounded inside of me. The echo of it swelled and I stopped to listen. There was the sound of my breath, the pounding of my heart in my chest, but nothing more. No insects, no breeze, the world was empty, and the night had lost its appeal. I gave up on the fresh air. It was out there. It could be hunting even now. I shuddered and returned to the party.\n\nThree Weeks Later:\n\nAn early morning climb to clear out my thoughts was just what I needed. Freeclimbing required complete concentration of hand and foot holds. I dipped my right hand into the chalk bag and moved to next contact point. I felt like Spiderman just slower. I reached the ledge I had spied two days ago and rested. A minute later Jynx topped the ledge and sat next to me. She hadn't lied she was a gifted climber and utterly fearless.\n\n\"What a view.\" She said, and she leaned back. \"Great place for morning head.\"\n\n\"You are spoiling the hell out of me.\" I admitted. \"You and Ginger. I can't believe she put off school to stay with us.\"\n\n\"I am surprised she waited as long as she did to ask.\" \n\n\"I was surprised when she asked you first though. She didn't want to step on your toes as it were. Are you sure...?\"\n\n\"John.\" She said with a determined expression on her face. \"When are we going to explore it? The cave I mean. I've seen the footage and you keep making up excuses. I'm not afraid.\"\n\n\"I am. I'm terrified.\" I admitted as the temperature seem to drop. \"I... we can... what the holy hell is that?\"\n\nI caught a flash of sunlight glittering off something metallic. Whatever it was, it was moving fast up the valley floor towards our position. It seemed to defy gravity as it soared up the cliff face. Jynx seemed equally mystified. It silently appeared hovering before us. The sphere was about two feet in diameter with an irregular surface patchworked with various sensors, vents, and ports. How the hell did it fly? \n\n\"Jacen?\" I said addressing the thing.\n\n'No. You may greet me as Helios. I am your familiar. I was designed, programmed, and constructed by Jacen.' It conveyed through my optic nerve in friendly green letters. 'I haven't been given authority to link to your neural network.'\n\n\"Neural network?! What the hell are you talking about?\" I blurted out and one of the sphere's ports lit up and projected a hologram of my head. A series of flashing blue areas displayed the physical network Jacen had secretly constructed in my skull. \"Oh, that neural network. Why do you need access to it?\"\n\n\"Since we are openly speaking in front of the young lady.\" Came the distinctly male voice of the drone. \"Jacen was quite specific about me asking for access to your mind.\"\n\n\"Too true. I've had issues about it in the past. Fine. Since you asked so nicely you may access the network. Be gentle. This is my first time.\"\n\nJynx chuckled but I felt the cool tendrils as Helios established contact. The transfer of information was instantaneous. I knew everything that Helios could and couldn't do. He had been constructed as Jacen had put it, to be my technological familiar. It was like a wizard's companion, but tech based. The one key element was that Helios was armed with ultraviolet lights. He could harm maybe even kill the goddamn thing hiding in this mountain. I felt a surge of confidence I hadn't felt in weeks.\n\n\"We are going to explore the cave.\" I declared to Jynx. \"We need to plan it out with food and supplies but with Helios we can do it safely.\" I said as I examined the drone thoroughly. \"How did Jacen pull this off?\"\n\n\"That's what I'd like to know.\" A man said above us. Jynx cried out in surprise and I shifted so I could look above us.\n\n\"Who the hell are you?\" I asked as I looked at the young man. He was dressed for climbing and his fingers were stained with chalk. There was a rugged good look to him and his smile appeared genuine.\n\n\"My name is Nick Shaw. I own...\"\n\n\"Numenor Technology.\" Jynx said cutting him off. \"He's been on the cover of several magazines as the world's most desirable bachelor.\n\n\"I wanted to reclaim my stolen property, but I may let it slide if you explain who or what Jacen is.\" Nick said as he sat next to Jynx.\n\n\"You can call me Jynx. This is John Morgenstern.\"\n\n\"A pleasure. I've heard all about you. You're the guy that got the letter from the dead guy. What was his name?\"\n\n\"Missouri Smith.\" I said providing the name.\n\n\"Surfer. What do you have on Missouri Smith?\" Nick called out as the hologram sprang into existence floating next to Helios.\n\n\"Hearsay and innuendo. You'd like him Master Nick.\" The shimmering silver avatar chuckled as it addressed Nick. \"There is no accurate record of his birth, but he served with several different military assets during World War Two. Much of his life has been recently scrubbed from servers across the planet. I cannot retrieve the data. I suspect the same A.I. I have been tracking these last few months is responsible. Jacen?\"\n\n\"I didn't order him to do anything like that.\" I said, and Surfer confirmed I was being honest.\n\n\"A rogue A.I.\" Nick mused. \"Just great. I don't suppose you could tell me how you and Jacen met?\"\n\n\"I could. If I did I would be betraying her trust.\" I said and fell silent.\n\n\"Fair enough. Are you returning to town or going to explore that tunnel? Sorry, I happened to overhear you talking.\"\n\n\"Tunnel.\" Jynx voted. \"We have Helios to protect us.\"\n\n\"Protect...\" Nick said his voice becoming cool and cautious. \"Protect you against what?\"\n\n\"I don't want to sound crazy.\" I said but Nick patiently waited for my explanation. \"There is something in that cave system. It is afraid of direct sunlight, it burns it.\"\n\n\"Interesting.\" He replied. \"What does it look like?\"\n\n\"Well... it is hard to describe.\" I began and saw the change come over him. \"It is translucent. I could see a glowstick I dropped down on the cavern floor through it. It doesn't have a definite regular shape.\" \n\n\"A formless.\" Nick uttered the words in a near whisper. \"Anything else?\"\n\n\"Show him the upside-down pyramid.\" Jynx urged with a wink.\n\nOnce I figured out how to access Helios and his peripherals it was simple to project the footage I had recorded inside the tunnel and cave beyond. Nick watched intently and when he saw the inverted pyramid I stopped the video. Helios opened a second file and displayed Jacen's analysis of the object and there was no denying him a shot at seeing it with his own eyes. We got to our feet and followed the ledge as it ran along the side of the mountain. I stopped and pointed down. Thirty feet below us was the opening to the tunnel and beyond it the cave with the pyramid. We chalked up hands and feet and carefully moved downwards. \n\nHelios silently hovered nearby, and I hate to admit it, but I found a measure of comfort knowing he was there. Nick was the first to reach the lower ledge. He helped Jynx to settle and I came last. I led the way and pushed the brush aside that covered the entrance. The others squatted down and examined the tunnel. Helios took point and I followed with Nick directly behind me and Jynx bringing up the rear. If anything went wrong she would be the first one out. I noticed the first of several small piles of dirt about twenty feet in. The rock was pulverized and felt smooth as fine sand between my fingers. I didn't take notice at first but after the sixth one I began to grow concerned. Nick and Jynx were too excited to even wonder about them.",
        "Helios put out enough light for all of us to navigate by, so we didn't need headlamps. We reached the end of the tunnel and my rope was still there tied to spike I drove into the stone. I tested it and found it securely rooted in the earth. I went down first followed by Jynx and then Nick. Strange how quickly it went from Mr. Shaw multibillionaire to simply Nick. He was damnably likeable. I guess that is what they call charm. The cave was different. The floor had been littered with desiccated rats, but they were gone. Someone or something had cleaned up.\n\n\"Why?\" I whispered.\n\n\"Why what?\" Jynx asked placing her hand on my shoulder.\n\n\"The rats are gone.\" I said and then guided them to the pyramid.\n\n\"Holy shit!\" Nick gasped as Helios' search lights illuminated the pyramid. \"Surfer... are you getting this?\"\n\n\"Barely Master Nick. Interference from the earth is greatly inhibiting the signal.\" The A.I.'s voice crackled with static.\n\nI watched Nick drop onto his belly and shimmy towards the spot where the tip of the pyramid and the earth met. He began digging with his bare hand when I reached into my backpack and withdrew a trowel and slid it to him. He grinned and carefully worked the soil loose. Jynx and I squatted there watching him work. \n\n\"No fucking way!\" Jynx cursed as the last of the dirt was removed and we saw the truth.\n\n\"I knew it.\" Nick growled. \"I fucking knew it.\"\n\n\"How?\" I said staring at the point of the multi-ton structure not touching the ground. \"It is just hovering there. Are you getting this Helios?\"\n\n\"Yes, Master John... John. I have performed a full spectrum analysis of this phenomenon. Analysis of the forces involved will take time to process. What is that?\"\n\nI had barely had time to form the question in my mind, 'what is what?', when the pressure wave hit. The sound followed as the entire cave shook as the timed explosions erupted in the tunnel above. I dove and covered Jynx with my body protecting her from falling debris. I cried out each time something slammed into my back. It took everything I had to keep her safe. The air was filled with clouds of dust and debris. We were all coughing as the heavier particles settled to the floor leaving the lighter ones to annoy and clog our lungs. I rolled off Jynx coughing and spitting. The chamber was pitch black. Helios must have been struck and damaged by falling rocks. I fumbled around and found my abandoned backpack. I blindly reached in and found one of the glowsticks. I slapped it against my knee and shook it. The strong yellow light revealed just how fucked we were.\n\n\"Helios.\" I growled as I continued to spit and wipe my mouth free of filth.\n\n\"He is trashed.\" Nick said as he rose unharmed from beneath the pyramid. \"Are you okay?\"\n\n\"I'm fine.\" Jynx declared. \"John protected me. Here.\" She said taking the glowstick from my grasp. \"Turn around. Nick... lift his shirt.\"\n\n\"DAMN!\" Nick cursed after he tugged my shirt up revealing my bruised and battered flesh.\n\n\"Jesus John... how the hell are you standing?\" Jynx exclaimed.\n\n\"Not now. We need to get moving...now!\" I snapped. \"It laid a trap for us. It is in here and we are its next meal. UNNNN... Nick grab Helios and don't let go of him. He is our only hope of getting out of here.\"\n\n\"Gotcha.\" Nick agreed as he bent down and picked up the wreckage that was the drone. \"Fuck!\" He cursed. \"I cut my hand. I'm fine.\" He declared when Jynx approached. \"Where are we going?\"\n\n\"This way.\" I said heading for the tunnel leading further down. \"The men that dug this tunnel left signs.\" I said as Jynx held our plastic torch above her head and followed me. \"I wanted to see the Flying Scotsman and if we are lucky we all will.\"\n\nThe silence was deafening. All of us were listening intently for the thing that had trapped us in here. I tried to hold off on that concept for as long as I could, but my mind refused. It latched onto the piles of dust I had found on our way in. This thing, this Formless as Nick had called it, had drilled those holes and placed explosives along the tunnel to seal it off. We were trapped with it in here. It could hunt us at its leisure. We had finite resources and it could simply wait until we ran out of water to pounce. I held onto that hope that it was a patient hunter. If it was we might have the time to find another exit. It had waited this long why not a bit more.\n\n\"Another sign.\" Jynx whispered. \"It's in Chinese I think.\"\n\n\"Mandarin.\" Nick and I said at the same time. \"This way.\"\n\nWhile the sign pointed at the obvious path there were other natural tunnels that led in several other directions. This place was a veritable maze and our enemy likely knew every square inch of it. We followed the signs as they appeared, but our adversary never showed itself. Why? Why was it holding back? Thirty-two minutes later we reached the last sign. My HUD displayed the time and estimated direction we had been travelling in. We took the last few steps slowly expecting an ambush around the next corner. It never came. Instead we reached the tunnel that had been cut for the tunnel bisecting the mountain and possibly housing the Flying Scotsman. Jynx nearly tripped over the rail jutting up from the ground.\n\n\"I'll be damned.\" She cursed. \"We made it.\"\n\nThe tunnel we had taken intersected with the much larger one cut for the train to use. I squinted as I looked down one end of the tracks and then fought the urge to scream when I spied the train sitting silently down the other end. It was intact. We walked down taking in this historic moment. We reached the ass end of the train and we could see that something was wrong.\n\n\"It is boarded up.\" Jynx said her voice shaking with fear. \"The windows are blocked from the inside. They nailed shit to the fucking windows!\" She stammered as panic replaced simple fear.\n\n\"We are here.\" I said placing my hand on her shoulder. \"We'll fix Helios. We'll get out of here. All of us.\"\n\n\"I believe you.\" She said clinging close.\n\n\"What happened here?\" Nick asked as we walked alongside the silent sentinel.\n\n\"No one knows. This tunnel was freshly completed when the Flying Scotsman was diverted here and the tunnel on both sides collapsed. End of story.\"\n\n\"Bullshit.\" Nick snapped. \"Why was it diverted? Why was it here in the first place?\"\n\n\"Oh that,\" I said feeling foolish. \"The engineer that designed the train had created a brand-new kind of engine for the train. He was showing it off. As to why here... I don't know.\"\n\n\"The killings John don't forget the killings.\" Jynx added.\n\n\"What killings?\" Nick asked as we reached the train's engine.\n\n\"Since this tunnel was begun every dark of the moon people went missing. The papers never printed how they died. They only listed the names, ages, and who survived them. What are you doing?\" I asked as Nick approached the barricaded door to the engine compartment.\n\n\"Everything has a weak spot.\" He said just before striking the door with the palm of his hand. \"Let's see what happened here.\" He added when the wood burst asunder from his attack.\n\nWe climbed up and into the train's engine. The controls were something out of a H.G. Wells novel. There were pressure gauges, levers, and cranks galore. When we placed our hands on any of the panels a faint vibration could be felt. It was still functioning! After all these years the damn thing still worked! Hope faded when we spied the desiccated bodies of the engineer and his crew. They were piled up like cordwood. The Formless had neatly stacked them for some unknown reason. We moved deeper into the train. The light from the glowstick only went so far and soon the bodies were swallowed up by the darkness as we moved into what had to be the first-class car. There were more bodies, but these had been left where they had fallen. The mummified screams were clearly visible even after so many years. Fingers formed into defensive claws, mouths wide open as they begged for mercy, and the puncture marks in their clothing where the thing had fed from them. Now I knew why it had left us unmolested. It wanted us to get here. It wanted us to see the futility of fighting it. We were doomed, and it wanted us to know that.\n\n\"We are fucked!\" Jynx hissed despondently. \n\n\"The hell we are!\" Nick fired back. \"I am going to fix this piece of crap and get out of here.\"\n\n\"We are not going to die.\" I argued as something landed on the roof of the car. The ancient metal protested as the bulk of the thing slithered along the roof. \"Aw fuck!\"\n\n\"Calm the fuck down.\" Nick growled. \"It wants us afraid. If we are afraid we will make a mistake. Jynx stay close.\"\n\nThe window to my left erupted in splinters as a massive tentacle exploded inwards and snatched Jynx off her feet. I sprang forward and grabbed at the transparent flesh with my bare hands. A searing flash of light blinded me momentarily as the Formless howled in pain and let go of Jynx. It withdrew the tentacle as quickly as it had appeared and raced away. We could hear its passage along the roof until the silence returned.\n\n\"John!\" Jynx wept as she launched herself into my arms.\n\n\"I got you.\" I told her as I held her tight.\n\n\"What was that light?\" Nick asked never losing his cool for a moment.\n\n\"I don't know.\" I said as Nick took the glowstick from Jynx's nerveless hand and shone it on my hand.\n\n\"I'll be damned. Where did you get that ring?\"\n\n\"Oh that,\" I said holding it up and looking at it. \"It belonged to Smith or, so the Old Man assured me. Why?\"\n\n\"I think that ring is what drove the Formless away but why is the more important question.\"\n\nI stared at him and he was shocked at the events that had unfolded. No. It was more than that. He recognized the ring or more specifically the design on the ring. His shock came from the insignia. The All-Seeing Eye framed by three swords forming a triangle meant something to Mr. Nick Shaw. I was sure of it.\n\n\"We don't have time for secrets.\" I said, and he stared at me. \"Tell us or go off on your own Shaw. You can't withhold vital information now. Damn it man our lives are on the line.\"\n\n\"You are right. The Order of Chthon, we are known as the Order. It has been around since before the first Egyptian dynasty. It was founded by an immortal who even now guides the path of the organization. I never knew that your Missouri Smith was a member. By the quality of the ring and its design he was a ranked master and high up on the ladder. I don't know why it affected the Formless though, that is all I can say... even that is enough to forfeit your lives.\"\n\n\"They can fucking come after me once this is all over with.\" I snapped. \"How do you even know about these Formless things?\"\n\n\"I was part of a dig that discovered the City of Iram, the City of a Thousand Pillars. It was guarded by them, the Formless. I barely escaped.\"\n\n\"Iram?\" Jynx muttered the name of the city.\n\n\"Legends say it was built by King Solomon using demonic servants, the Jinn. I am wondering if he used the Formless instead.\" Nick thought out loud. \"They seem to have an innate understanding of geology and engineering.\"\n\n\"This one stole and planted explosives. It isn't some blind stupid monster. This thing can think and is hurt and pissed off now. We need a plan.\" I said looking around. \"Maybe we can get this thing moving.\"\n\n\"What do you know about engineering?\" Jynx asked me.\n\n\"Let's take a look at it and see what makes it so special.\" I said giving us a clear purpose and take our minds off the thing hunting us.\n\nWe returned to the front of the train and examined the controls carefully. It was Jynx who learned how to open the heart of the Flying Scotsman. We stared at it in wonder and not a little fear.\n\n\"What color is that?\" Jynx asked her voice distant and cold enthralled by the blasphemous radiance.\n\n\"I don't know.\" I replied. \"Close the damn thing. Close it Jynx!\" I felt better once the two metal shutters slammed back into place. \"Nick, you are awful quiet.\"\n\n\"In Iram. I found one of the treasure rooms it was nearly empty. Buried for all time in a metal box was a necklace. The stone clasped to the chain gave off that very same color. A shade that defies the mind and as unnatural as the Formless.\"\n\n\"It is like a waking nightmare.\" I muttered as I found the switch that powered up the great engine. \"That's got it. Now what?\" I tried other switches and soon a wan illumination filled the entire train. The ancient bulbs had barely survived the century underground. \"They won't last long. I am open to suggestions.\"\n\n\"Where is that drone thing?\" Jynx asked having recovered from her exposure to the heart of the train.\n\n\"It is back in first class.\" Nick said distracted. \"I guess I should take a look at it and see if I can get it running.\"\n\nJynx screamed as both windows on either side of the engine blew inwards and the Formless attacked a second time. We were ill prepared. Jynx fumbled for the lighter as I brought my fist up with the ring blazing on my finger. It was prepared and resisted our initial pushback. It had nearly cornered Jynx when she found the lighter.\n\n\"Leave me the fuck alone!\" She screamed as she pressed the lighter against its unnatural flesh. The stench was nearly overpowering. The thing roared and withdrew. Jynx lost the contents to her stomach and retched all over the floor of the car. \"I... want... to... go... HOME! John please get me out of here. I can't take this anymore!\"\n\nThe entire train shook, and the sound of screeching metal echoed within the tunnel. Jynx cried out about the drone and our only hope for survival. I panicked and began heading back when Nick stopped me. I looked at him like he lost his mind when he held up his damaged hand. \n\n\"I don't get it.\" I said nearly snapping.\n\n\"I cut my hand on purpose.\" Nick explained. \"It contains the same nanites that course through your bloodstream. Surfer scanned you and confirmed my suspicions. The origin of your tech remains a mystery, but I know what mine can and cannot do. My blood infused the damaged drone and went to work repairing it. That thing is in for a devastating surprise. It believes the drone is still damaged. It isn't, the UV lighting is fully functional.\"\n\nI can scarcely describe the sound the Formless made. I clapped my hands over my ears to try and block it out. I could see the blast of intense light coming from the next car. The train shook as the thing thrashed in its death throes. I stumbled to my feet and thrust the lever forward. The train shuddered a second time as it crept forward. It limped towards the wall of stone that stood between it and the sunlit world. The Formless shrieked again but this time it was far weaker than before. I slammed the second lever forward and the train picked up speed. The lumbering beast gathered up momentum as it neared the end of the line. \n\n\"This ends now!\" I yelled. \"Take care of her Nick.\"\n\nWith barely a look back I raced forward. I had no idea what I would do but damn it I had to do something to make sure that god forsaken thing didn't survive. The drone was still spewing forth its lethal ultraviolet light. It couldn't hover, but I could carry it. I snatched up the deadly orb and followed the trail of slime. It was insane, but it had to be done. I laughed when I thought that this is exactly what Missouri Smith would do. The tunnel led down. What started as a gentle spiral became a sudden steep plunge into darkness. It was like a water slide without the water. I cried out as I slid out of control into the abyss. I held the orb to me protectively. It was my only hope of ever seeing the outside world again.\n\n\"Fuck!\" I cursed as I felt the rock give way to nothing.\n\nThere was no longer solid matter beneath me. I directed the light to the walls. The insane murals depicted impossible scenes of horror and landscapes no earthly artist could possibly render. The pigments hinted at unspeakable acts of violence and depravity. It was at this moment I must have lost consciousness or sanity for what followed was from the mind of madness itself.\n\nBubbles. There must have been a million of them clustered in that space between spaces. Some of them were tiny, others the size of soccer balls, and still others the diameter of moons and planets. The bubbles sang as they moved and orbited one another. The singing became a choir and that choir spoke to me.\n\n\"Killed...\" the host of voices called out. \"You killed my pet.\"\n\nI tried to reply but there was suddenly no oxygen to fill my lungs. I gasped as I slowly asphyxiated.\n\n\"Hush. You will be my new plaything. Your ass belongs to me now. Say my name.\"\n\n\"Y...\" I gasped as air rushed in and filled my lungs. \"Yog... Sothoth.\" I said as the name filled my mind and the entirety of my being.\n\n\"That'll do. Almost there...\" The cacophony filled every cell in my body. The distant crash echoed down from that impossible distance. The Flying Scotsman had made it. The train had pierced the wall of stone and both Jynx and Nick were safe. That is all that mattered. I could die happy that I had done some good. \"Die? No plaything you aren't going to die. You are going to live so that your actions will amuse me. Now... off with you. Back to the world of men and don't disappoint me.\"\n\nI was moving. In fact, I was accelerating. Wherever I was being sent to I was doing so very quickly. Where was Yog Sothoth sending me?\n\nEpilogue:\n\nAftermath: The Middle of Nowhere\n\nThe ship was anchored in international waters. It had been in the same spot for three days waiting. The Captain slept as the sky above began to glow and pulsate. The crew on deck stared at the artificial aurora as it intensified and blazed with strange and weird luminosity. Yan Fong, a native sailor out of Singapore, pointed and drew attention to the object falling towards the ocean. Hen Sing, the ship's cook, raced to the Captain's cabin and pounded on the door.\n\n\"Captain. It is happening. The sign we were waiting for is happening now!\"\n\n\"Keep an eye out and fire up the engines. We need to collect it before any other ship catches wind of it.\" \n\n\"Aye Captain.\" Sing replied as he conveyed the Captain's orders.\n\nThe tramp steamer pulled up anchor and with a deafening roar of engines and spray of sea water it turned about towards the falling object. The Captain set foot on the deck and watched the object still high up in the atmosphere fall steadily earthward. The letter had been true and accurate. The unknown author had paid handsomely for a ship to be in this portion of the ocean at this time. \n\n\"A falling star?\" The Captain muttered with lips stained with alcohol.\n\n\"No.\" Brynn, the chief navigator, argued the point. \"It is falling too slowly. It should have struck the ocean by now.\"\n\n\"What is it?\" The Captain asked and then cursed. \"By the gods... the clouds... they are on fire!\"\n\n\"Smell that,\" Brynn said sniffing the air. \"Ozone. Jesus! It is St. Elmo's Fire!\"\n\nThe thing slowed its decent even more now until the ship was directly below it. The blazing sphere settled above the deck and slowly dimmed. The entire crew had assembled by then watching as the form of a man took shape within the drying storm of living lightning. He tumbled to the deck his nakedness quite profound. Wisps of steam rose from his body as the last of the St. Elmo's Fire dissipated.\n\n\"Get him some clothes and bring him to my cabin.\" The Captain ordered. \"No one breathes a word of this. Besides, who would believe you.\"\n\n\"Easy now,\" Fong said as he took one side.\n\n\"We got you.\" Sing added. \"What's your name?\"\n\n\"Name?\" The man moaned as his eyes opened and he looked around. \"I'm on a ship. What is the name of this ship?\"\n\n\"Wave Dancer. Don't let that fool you, she is sturdy and hale. Do you remember your name?\"\n\n\"My name is... you can call me Smith... Missouri Smith.\" The man said as a tear slid down his cheek.\n\n\"Do you remember where you were before... this?\" Sing asked as he helped the man up the stairs.",
        "\"I was in a cavern and then I was falling.\" He replied fighting the urge to scream.\n\n\"You fell far.\" Fong stated, and the man laughed.\n\n\"You don't know the half of it.\" The man called Smith replied.\n\nLook for the next chapter of our saga in Missouri Smith and the Golden Phallus."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "anal",
        "harem",
        "foursome",
        "fffm",
        "anal sex",
        "group",
        "group sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/lost-and-forgotten-ch-04"
}