{
    "title": "Shining Girl Ch. 04",
    "pages": [
        "Firstly, many thanks to Mriceman1964 for his editing and reality checks, all the good stufis, as usual, down to him, so kudo's to you, Mike! Thanks also to Unicorn64 for her thoughts, feelings and honesty!\n\nThis is the last part of Jack and Teruko's story. As always, I caution the reader that this isn't the real world, it's just a reasonable facsimile thereof, my version in brief, so there are differences, some glaring, some not so obvious. Any reality the reader wants to invest in this story is entirely their responsibility, your interpretation of things is bound to be different to mine, so please, if you want to complain, do it about the pace, dialogue, content or premise, that's what the story is about, after all. I take all comment seriously, except for those that are from the obviously deranged or the truly disturbed; all other comment is treated as fair comment. I'm not here to censor your opinions, just to learn lessons if an obvious mistake has been made, and I do welcome fair and valid points about the work I've posted here. If you liked it, please rate it, if you didn't please tell me why. All the nasty for the sake of being nasty comments will get deleted, unless they make me laugh...\n\nbeachbum1958\n\n______________________________________\n\nHarry and I arrived back at the flat a few minutes after Sai Fong and Teruko. As I climbed out of the Jeep, Sai climbed in, kissing her fingertip and tapping me on the forehead with it.\n\n\"See you about four o'clock, and pack warm, it's snowing all the way home!\"\n\nWith that she slammed the car door and the Jeep pulled away, the two of them heading back to their place in West London to pick up their bags for their weekend trip home.\n\nTeruko led me back indoors and disappeared into her old room, lugging back a wheeled suitcase, which I took away from her with an enquiring look.\n\n\"We stay few days, so take warm clothes, mummy say it very cold now, must stay warm!\"she smiled, looking hot, and sexy, and very appealing. Without thinking, I pulled her in close to me, enjoying immensely the feel of her against me, the scent of her hair, and the feel of her lips on my neck as she nibbled and grazed lightly on me. Teruko could feel my arousal as I held her, her own groin grinding deliciously against mine as she wriggled slowly against me. I looked down at her to see her looking up at me, her eyes huge and expressive as she smiled up at me.\n\n\"Jakku-san relax now?\" she asked softly, again rubbing herself against my straining cock before letting her hand trail down from my waist to brush against my throbbing erection. My own hands slipped from her waist to cup and squeeze her buttocks, hands instinctively remembering what my head had forgotten as I squeezed and kneaded her firm cheeks as I pulled them apart. Teruko responded by curling her hand around my neck, pulling my head down to kiss me on the lips, her tongue insinuating itself between my lips even as her other hand grasped and squeezed my cock through my jeans.\n\nTeruko abruptly broke our kiss and pulled back from me to look into my eyes.\n\n\"Jakku-san still love me?\" she asked, her face serious, and I nodded.\n\n\"Yes, I still love you, Teruko, very much!\" I grinned, and she grinned back, her small hand on my cheek.\n\n\"Good, Jakku-san, I am happy, now show me!\"\n\nI kissed her, a little tentatively at first, then more strongly, with more conviction as she kissed me back. Her hands fumbled with my belt as I slid my hands down inside her jeans to fondle and squeeze her tight, globular buttocks, enjoying the silky feel, and the springy firmness of them in my hands. Teruko tugged my belt open and popped the button on my jeans, tugging down my zipper to release the pressure against my suddenly raging cock. As she pushed my jeans down, I popped hers and pushed them down as well, running my hands over her smooth, silky thighs, the warm flesh exciting and arousing me as I continued to push her jeans down.\n\nTeruko stepped away from me to pull her jeans off, then pulled my sweater up, helping me pull it up over my head, along with my polo shirt. She then crossed her arms at her waist, and in one move pulled her sweatshirt off, revealing her tightly fettered breasts in a gauzy mesh bra, her nipples clearly visible through the filmy fabric. Her panties were a match for the bra, a few inches of lace-trimmed fabric that that swooped down to barely cup her pussy and disappeared into the cleft between her cheeks; wearing that ensemble was more erotic and arousing than if she'd stood before me completely naked, and I could feel my body responding in all sorts of ways to the beautiful sight before me.\n\nI kicked off my jeans, levered off my shoes and yanked my socks off, to stand before her in just my shorts, my arousal clearly visible to her. Her eyes glittered as she closed with me again, one hand around my neck as the other slid into my shorts, making me gasp in anticipation as her fingers encircled my rigid cock, a smile of anticipation on her lips. My response to her was to dip my head down and catch her erect nipple between my lips, feeling the firm rigidity of it through the material of her bra, making her gasp in return. As I gently nibbled her, I slid her panties down to catch and squeeze her buttocks, before sliding one finger between her slim thighs, rubbing it along the crease between her labia and feeling her sharp intake of breath as I slipped inside her.\n\nTeruko began pushing back against my hand as slid my finger in and out of her, following instinct, as I really didn't know what I was doing here, only that whatever it was, she liked it and definitely wanted more. As I increased the speed of my fingering, she did likewise, her hips thrusting her wet pussy against my hand faster and faster as her body responded to what I was doing. Her nipples were rigid, like two fingertips, pressing solidly into my mouth as I nibbled harder, alternating between both nipples and lightly tugging the stiff, rubbery flesh with my teeth through the mesh fabric of her bra. At the same time, her hand around my cock tightened its grip as she pumped me faster and faster, her movements in sync with mine, each of us driving the other on, our breath loud in our ears as we touched and rubbed so intimately.\n\nTeruko suddenly released her hold on me, and stepped away from me, her eyes mysterious, and a small grin on her lips.\n\n\"Not like this, husband, this not way; it will be better here!\" she whispered, indicating the bed. I nodded, sliding my shorts down to be fully naked, and hooking her panties as she turned away from me, sliding them completely off her to bare her spectacular backside in all its glory.\n\nI pulled her back against me, suddenly needing to hold those superb breasts again, my arms around her as my hands fondled her tits, my thumbs flicking her nipples through the damp cups of her bra where my saliva had soaked through when I was nibbling her. Teruko gasped and pushed herself back against me, slotting my aching cock into the cleft of her glorious bum, the cheeks cool and soft and firm against my overheated flesh.\n\nMy hands slipped under the cups of her bra, to lightly pinch and squeeze her solidly erect nipples, Teruko gasping again and pushing herself even harder against me, my cock now a nexus of sweet agony at the touch of her, the feel of her, and the scent of her honey-dark hair as I kissed and nibbled her earlobe and her soft, delicate neck.\n\nWe never made it to the bed, not really, not then; Teruko reached behind her and unclipped her bra, letting the garment hang from her shoulders as she leaned forward, one hand on the bed, the other holding my drooling cock, rubbing her thumb in the clear liquid pouring from the end, spreading it around the head. She took hold of me and rubbed me across her slit from the back, my cock jumping as the sensation of wet heat jolted through me.\n\nAs she held me in place, driven by instinct and no certain knowledge of what I was doing, I pushed forward, both of us gasping out loud as my cock slid into her tight sheath. She let go of me as I drove forward, sliding in her to the hilt, then withdrawing, to slide in again, pumping my bone-hard erection into her enveloping warmth, little tremors running up and down my length as her cunt rippled around me.\n\nTeruko rested both hands on the bed, pushing back against me as I rammed forward into her, my hands around her hips to give myself purchase as we fucked standing up. I felt her hand underneath us, and realised she was rubbing herself even as I jammed myself into her, the tremors in her tight pussy becoming more marked a she approached the point of no return, the knowledge making my orgasm even more imminent.\n\nHer orgasm hit her like a hammer-blow, making her scream in release as her pussy squeezed and rippled along my length. The sensation was overwhelming, the newness of all this still resonating in my mind, and I couldn't hold back any longer, much as I was enjoying myself. I came with a loud gasp, a wordless groan of release as I exploded inside her, my seed bursting out of me in white hot streams, spurt after spurt as I poured myself endlessly into her, her pulsating sheath squeezing and milking my cock as I pumped my sperm into her.\n\nI could barely see or hear her for the roaring tumult in my head as the almost overwhelming orgasm exploded inside me; all I knew was the unimaginable sensation of release from that ball of tension that had been building in my groin, the apex of my thighs, and the pit of my stomach.\n\nMy knees sagged as my orgasm vented itself, the flood of sperm dying down to a trickle inside her. I released her hips, and Teruko leaned forward to collapse on the bed, groaning as my cock slid from her, and a fat trickle of spunk running down her inner thigh, mute testimony to the amount of sperm I'd pumped inside her. As she lay on the bed, panting, she turned her head to look back at me, giving me a sweet, happy smile, and reaching back to take my hand. She turned to lie on her back, and held her hands out to me, calling me to her, and I couldn't resist her; this beautiful girl loved me, was in love with me, and I was in love with her, sister or not.\n\nI knelt on the bed, pulling her up to me and sliding into her embrace, her lips soft and warm, needful and hungry as they fluttered and drank in mine, and her tongue was sweet and warm as it darted between my lips, rubbing and touching mine and stirring something deep inside me.\n\nAs we kissed, her hands roamed gently over me, touching my back, my shoulders, my chest and sides. Each touch of her hands sent a thrill through me, and an answering thrill at the apex of my thighs. Even after coming so hard, my erection hadn't really abated at all, and Teruko made an appreciative noise as her hands found me. It was my turn to groan, now, as she wrapped her small hand around me and squeezed as she slowly pumped me as she kissed me. As our kisses increased in fervour, she pushed me gently backwards, urging me to lie back, until I was flat on my back, her lips glued to mine as she pumped and squeezed me, making me hot for more of her.\n\nTeruko broke our kiss to sit up and swiftly throw her leg over me, straddling me. My hands instinctively reached down and caught her firm bum cheeks, squeezing, kneading and savouring the taut flesh. Teruko sat up, then, with her hand still wrapped around my cock, slowly rubbed the wet, sticky head across the wet lips of her pussy. The sensation of wet heat as she did that felt amazing, Teruko holding me in place, aiming me, as she slowly sank down, impaling herself on me.\n\nOnce again my cock slipped into the hot, smooth, tightness that was her pussy, the feel of her enveloping me almost indescribable as she sank down on me. When I'd bottomed-out in her, she leaned forward, placing her hands on the bed on each side of my head, and dipped down to kiss me, slowly rocking her hips as she did so.\n\nAs she lay along my chest, her lips glued to mine, her nipples poked solidly into me, and when she sat up again, I reached up to squeeze and lightly pinch those nipples, enjoying the firm feel of the stiff nubs between my fingers and against my palms as I cupped and fondled her spectacular breasts. Teruko held my hands against her as she rose and fell, her pussy clenching and releasing rhythmically as she pumped. My hands slipped down to her waist, holding her as she ground against me, our world narrowing down to the just the two of us as we moaned and gasped and whispered as we made love.\n\nTeruko stopped abruptly, her breathing heavy but not yet blown and breathless. I opened my eyes to see her smiling secretly at me, her eyes dancing. She slowly raised herself up, holding me as I slipped from her, then once again holding me in place as she slid down on me again, but this time it was different, harder to penetrate her, her entrance now suddenly tighter and more sinewy. I suddenly realised what she was doing, where she was putting me, and my surprise must have shown in my eyes, because she smiled and leaned down to lick my lips.\n\n\"This was Jakku san favourite way, this a good way, make Jakku san feel very good!\" she smiled as my cock slid slowly into her glove-tight anus. When I was all the way in, she began sliding herself up and down on me, her rectal tube gripping me tighter than her pussy had, her anal muscles milking me even as she slid herself up and down. I began lifting up to meet her, pumping into her as she ground down against me, my hands clenched tight around her superb buttocks to pull her into me as I pumped into her.\n\nTeruko smiled at me, and suddenly stopped grinding against me.\n\n\"There is better way, Jakku san, please to wait!\" she whispered, sliding herself off me, my cock slipping out of her anus with an almost audible 'pop'. She lay on the bed, lifting her legs behind her knees to pull her pelvis up, her stretched little anus winking at me.\n\n\"Now Jakku san continue!\" she grinned, and, moving like a man in a trance, I shuffled between her outstretched legs to push my cock against her tempting anus. Almost immediately, the head of my cock slipped into her, past her already open sphincter, and, as I leaned up over her, all the way back into her beautiful arse. Teruko slipped her calves over my shoulders, the backs of her thighs virtually against my chest as I leaned over her until we were almost nose to nose. My penetration felt much deeper in this position, and I was able to pump into her harder, something I wanted to do so badly.\n\n\"This feel so good, husband, please, do harder, it feel good...!\" she gasped as I hammered into her, her tight anus rippling and sucking at my cock as I jammed it into her for all I was worth. I was fucking her hard now, no gentle love-making this, no, this was raw fucking, primal, animalistic, something out of the blood and the bone and the dark forests of the hind-brain, primitive and instinctual. Deep down inside, I knew I was claiming her for myself, as mine and mine alone, my woman, my mate, the instincts and drives of a million years pushing me to sate myself with her, to imprint myself on her and mark her as mine, and keep her at all costs.\n\nTeruko was gasping as her cervix clenched and fluttered inside her, beating against the thin membrane separating her pussy from the place I was fucking, orgasms rippling and chasing through her as we fucked wildly. Her round creamy thighs pressed up against me, her lovely face contorted in the rictus of orgasm again and again, and her proud breasts and stiff nipples danced as we pumped and hammered against each other.\n\nI came with an animal roar of release, my cockhead swelling to wedge inside her as what felt like gallons of spunk bulleted out of me, splashing inside her in long thick jets of man-syrup, coating her bowels with my tribute. Teruko screamed as she came, the sensation of me exploding inside her setting her off on her own gargantuan climax, her entire body shuddering and spasming as wave after wave of pleasure roared and rushed through her.\n\nI slumped down on top of her, Teruko holding me tight as she spasmed and shuddered in aftershock, her own storm ebbing and gradually dying away. We rolled onto our sides, my cock sliding from her easily, lubricated by all the sperm I'd pumped into her as it trickled out of her to drip and pool on the bed.\n\nTeruko finally opened her eyes to smile at me and kiss me gently, her eyes sparkling with unshed tears.\n\n\"That is how husband make love to wife, my husband! You are truly my husband, and I am your wife, and now we go home and be with family. This is what we must do, it is right thing, yes?\"\n\nI suddenly realised that I did indeed want to go 'home'; she needed that other part of her family, and I had been too churlish and self-involved to understand that until now; everything Harry had said to me came back into focus as I realised how right he was, and how wrong I'd been, and selfish, and cowardly. My girl wanted me to take her home, so home was where I would take her, and I would just have to rely on her to guide me around my mother, trusting her to make sure I didn't put a foot wrong, the thing I was most concerned about.\n\nIt was fine, and warm, and loving, to lie there holding her, seeing her glorious eyes light-up and sparkle as she laughed and smiled, her beautiful, generous mouth with its natural smile curve, her cute little button nose, and the cascade of dark honey-blonde hair, long and glossy, and fine as spider-silk, a gossamer net of spun burnt gold that veiled us both when she leaned over me to kiss me. Eventually, though, we had to stop; we needed to have showers, pack, strip the bed and throw the sheets into the washer for a quick cycle (and after what we had been doing, they needed it!), make sure all the windows were locked, and all the appliances off and unplugged. Teruko did all that while I was having a shower, then she ran in while I was drying-off and getting my stuff together. I didn't know what to take; so much of my stuff was for someone bigger-built than me, so I just pulled everything out of my wardrobe and waited for her to come out of the shower to help me choose.\n\nWe were all packed long before four o'clock, Teruko helping me pick out and pack the warmest clothes I had that actually fitted me, and a pile of thick sweaters and winter socks. She'd packed a selection of jeans and T-shirts, and her suede Ugg boots, ugly, graceless things, but very fashionable, and apparently very warm. She'd chosen to travel in tight, bright red ski salopettes and a light sweater, with a red North Face snow jacket over the top, Salomon snow boots and a red Peruvian felt hat, and with her long dark-gold hair in two braids ended in Christmas bows hanging down under it, she looked cute and adorable, like one of Santa's Little Helpers, and delicious enough for me to take a large bite; perhaps I would, when no-one was looking...\n\nHarry arrived not long after four, helped me stow our case and flight bag with the few Christmas gifts Teruko had managed to find for our mother when she wasn't sitting her vigil by my bedside, and we set off, Harry driving with Sai Fong in the front passenger seat, and Teruko holding me tightly in the back seat, all smiles now that she was going home again for the first time in months, since my...'accident', in fact.\n\nThe drive home was uneventful. The roads were mostly clear until we were outside Bicester in Oxfordshire, when the snow, a minor annoyance on the motorway for most of the way, began to make itself felt, occasionally so thick that Harry had to slow to a crawl. We could feel the Jeep shuddering as the wind slammed into it, the snow at times flying almost horizontally ahead of us.\n\nSai Fong flicked on the radio, tuned to BBC Radio Oxford, and pressed the Radio Data System button. We immediately began to hear snow reports for most of the county, blizzard conditions and treacherous road conditions as far as Birmingham; the M42 Westbound, the M5, and the M40 were all being closed, so Harry had to take a long, looping, eastward detour to pick up the M1, which was still open, as was the M6, which would then give us a clear run West to Shropshire via the M54.",
        "The going got steadily worse, the Jeep skidding and slewing in the slippery new snow piling up ahead of us until Harry finally shook his head and stopped, cranked the car into neutral and engaged the 4WD, before starting up again and putting her into gear. The car immediately lightened as the 4-wheel drive engaged, and Harry looked back over his shoulder to grin at me\n\n\"You know, Jack, I was going to buy a Bronco, but it had manual hubs, so right now, you and I'd be out in that, trying like buggery to rotate the free-wheel hubs to lock them! Thank you Chrysler for Shift-On-The-Fly!\"\n\nI had to grin, he seemed so happy, although I hadn't a clue what he was talking about. But whatever the difference was between this 'Bronco' and the Jeep we were in, at least now we weren't skidding and sliding, the car seemed sure-footed again, and we were actually making some headway against the weather conditions. Teruko was looking sleepy, so I undid her seatbelt and urged her to lie down on the seat, taking her jacket off and wadding it up as a pillow for her on my lap, and covering her with my warm Barbour jacket. As she lay down, she slipped her hand under my thigh, holding herself against me on the seat.\n\n\"Thank you husband, I sleep for little while, wake me, please, when we get home?\"\n\nI stroked her hair, enjoying the feel of the silky strands, and she smiled at me, yawned and sighed, and fell asleep almost immediately. The car was warm, and I was unoccupied, there was no scenery to see, just snow falling in the dark and the lights of cars going the other way, and I must have fallen asleep myself, lulled by the muted growl of the Chrysler V6 up front, because the next thing I knew the car was cornering, shaking me enough to wake me up. I looked blurrily out the window, seeing street lights and houses, traffic, and no sign of snow. Sai Fong looked back at me, smiling.\n\n\"Welcome back, Jack, you've been out like a light for three hours! Nearly there, we're just at Frankwell, so two minutes and we'll be back at your place. You might want to wake Teruko up...?\"\n\nI took the hint, and kissed Teruko on her ear, making her smile as her eyes fluttered open.\n\n\"Wake up, little sister, we're nearly there!\" I breathed into her ear, and she turned to look at me, smiling.\n\n\"Thank you for let me sleep, Onii-san, it very nice to sleep next to you, you are very warm, most comfortable!\"\n\nShe sat up, yawning and stretching, the sight of her thrusting breasts as she stretched making my cock stir in my jeans, and shrugged her snow jacket back on just as we turned into Kennedy Road, where Teruko told me I had grown up. None of it looked familiar, nor did the high-walled series of buildings and rolling ground I could see. I asked Teruko what that was, and she looked sadly at me.\n\n\"That where you go to school, Onii-san, it where you play rugby for school, and for county, you love rugby more than anything, you still not remember?\"\n\nI drew a complete blank; nothing here was familiar, nothing was giving me any flashes or images. As I stared out the window, Harry pulled into the drive of a large detached house, light flooding out as a door was suddenly opened and a figure stood silhouetted there.\n\nTeruko was opening the door even before the car came to a halt, flinging herself into the arms of the tall woman who stood there, my mother, a large dog by her side with its tail wagging hysterically at the sight of Teruko. Sai Fong joined her, my mother hugging her as well, while Harry helped me bring our stuff in, spits of snow beginning as we walked to the door.\n\nMy mother smiled at me, and I saw fleetingly my resemblance to her, my eyes looking back at me from her, then haltingly, tentatively, she hugged me, almost as if she was afraid of me; and she was, but not of me; she was afraid I would reject her, that I would resent a stranger being so familiar with me. Teruko was watching me hopefully as my mother and I embraced, waiting for a sign that something had changed. But I had no sudden flash of returning memory; I still didn't know this woman, and it must have shown in my eyes.\n\nThe look of hope faded, to be replaced by one of disappointment, and a momentary sadness, before she smiled again, pleased that at least I hadn't pulled away, hadn't rejected her out of hand. I went to pet the dog, a large, muscular-looking black Labrador, but he backed away from me, tail low and rigid, a warning growl rumbling in his chest. Teruko looked shocked.\n\n\"Senshi, no! This Jakku-san, you know Jakku-san, what wrong with you? Bad dog!\" The dog looked at her and whined unhappily, backing up against her legs to place himself between us, his hackles still raised and threatening, obviously not at all happy about me being there.\n\n\"I sorry, Jakku-san, not know why he do that, he bad dog!\" At her feet, the dog whined again at the tone of her voice, but refused to sit or leave her side.\n\nWhile this by-play was going on, Harry dragged in the suitcase from the porch and put the flight bag down, my mother smiling at him.\n\n\"You must be tired after that long drive, Harry! Please, stay for dinner, you're both very welcome, you know that!\"\n\nHarry grinned his thanks at her.\n\n\"Thank you, Mrs. C, that's very kind of you but we really have to be going; Dad's expecting us, and the snow's coming on; it's a 25-mile drive home, so we really need to get a move on!\"\n\nShe hugged him, and then Sai Fong again, then waited while they clambered back into the Jeep. Harry started the engine then wound down the window.\n\n\"See you in the morning, Jack, weather permitting! The girls want to go shopping in Telford, so we'll be here early. See you then!\"\n\nHe wound the window back up and backed out onto the road, turned, and was gone. Mother shut the door and ushered us into a large, comfortable sitting room with big, soft couches and armchairs, and a large fire burning in the hearth. She had to take the dog by his collar, though, and drag him into the other room, as he wasn't happy about me being anywhere near Teruko, his growl a continuous threatening rumble in his throat, the kind of growl that ended in someone's throat...\n\nTeruko was at a loss to explain it; the dog's behaviour had unnerved her, and she took pains to reassure me that he was never aggressive and must be unwell, that was the only possible explanation. Mother came back and sat down, asking me about the drive up, if I was comfortable, if I'd like a hot drink, small talk and pleasantries, doing her best to put me at my ease, bless her, but it wasn't necessary; this room was somehow immensely comforting, and I already felt at ease. I leaned back into the couch, following my mother's injunction to 'relax, don't be so formal, this is your home, you know!', and found that I did indeed feel at home. Teruko snugged herself up against me on the couch; she'd removed her salopettes, and was wearing a short, knitted sweater dress that she must have had on underneath the whole time; it was tight and very brief, barely covering her bottom. She sat with her legs folded and her delicate little feet tucked underneath herself, resting her head on my shoulder, leaving me to admire her sexy knees and long, shapely thighs.\n\nAfter chatting for a few more minutes, mother excused herself, Teruko following her, to get dinner on the table while I sat and looked around the room, examining somewhere that had once meant so much to me, but was now completely unfamiliar, not even one of those little twinges of memory I was becoming so used to hinting that I had been here before, that this was where I was from. I was still gazing around when the door, into the dining room, I assumed, opened and Teruko popped her head in.\n\n\"Please to come, Jakku-san, dinner ready now,\" although the delicious smell had already alerted me. Teruko directed me to the cloakroom to wash my hands, and I followed her to the dining room. Mother had cooked what she assured me had been my favourite, Cottage Pie, and it smelled wonderful, and suddenly, now , here were those little twinges of memory, telling me that I had indeed eaten this before, here, cooked by her. Someone once said that smell is the most evocative of all the senses, that a single smell can recall a whole lifetime of experiences; I can attest to the truth of that; nothing here had seemed familiar, but now, the smell and taste of my mother's cooking were flicking switches I wasn't aware I had, and now that sense of home was growing, that feeling of near-familiarity, stronger and with more associations than d\u00e9j\u00e0-vu, the feeling of recall tantalisingly out of reach, but near enough to sense and feel the reality of it; these were not phantom memories or fantasies; this was me, still buried deep down, but awakening, I was sure.\n\nThe meal was fabulous, hot and savoury and delicious, and all the way through it I was remembering those aromas, the tastes and textures, the other associations crowding closer and closer, almost, almost, bursting through. I now had no doubt that this was my home; every sense I had was screaming at me 'you know this place, you've been here before, you've done this, you've sat here before, this is yours, this is your home!'\n\nEverywhere I looked, almost-memories pushed at me, things catching my eyes and beckoning me, pleading with me, shouting at me, shouting 'look at me, Jack, remember me, you know me, Jack, it's me, remember me, try, jack, try!'\n\nIt was getting harder and harder to concentrate on eating; whatever was happening in my head was too deafening, too much was trying to happen, overload was setting-in, making me dizzy as I spun and reeled in the midst of a chaotic swirl of the almost-familiar. I stopped eating to rest my head in my hand, a pounding wave of dizziness making the room waver, and suddenly my mother was there, her hands soft on me, hands I could almost recall, the feel of them warm and reassuring; she was my mother, this was my home, I belonged here...\n\nIn the distance, from wherever he was confined, the dog began barking, a continuous high-pitched excited belling as he gave voice, something disturbing him, his clamour adding to the pounding inside my head. I was only hearing him with one corner of my mind; everything else was being swamped by waves of something like, and yet somehow completely different to, d\u00e9j\u00e0-vu, my head swimming as my brain tried to cope with the sensory overload. A blizzard of half-remembered feelings and blurred images was unreeling relentlessly in no sense or order, a meaningless jumble of fragments, but an avalanche of them, blotting-out the room as they roared into me.\n\n\"Jack, darling, what is it; you've gone pale, are you alright? Jack, what's wrong?\" The concern in her voice sent another jolt through me, another tumult of almost-memories making my head spin again, making me groan as the room orbited around me. My stomach lurched, teetering on the edge of violent nausea for a second, before backing down again as a fresh wave of dizziness flooded through me.\n\n\"Teruko, get his jacket! Jack, I'm putting your jacket on you, try and help me here, we have to get you to Accident and Emergency, can you stand up?\"\n\n\"No, no more hospitals, please!\" I managed to gasp out. \"I just need to lie down, must be tired, please, just let me lie down!\"\n\nSomehow, and I have no clear notion how, my mother and Teruko managed to get me up that one short flight of steps and into the bedroom at the top of the stairs; I felt gentle hands unbuttoning my jeans and pulling my snow-boots off, and the covers being pulled up over me, the room spinning and gently revolving around me as whatever was happening to me ran its course. I tried shutting my eyes, but it didn't help. I tried focussing on one thing in the room, something to fix my attention in an attempt to brake the spinning room, and an oblong plaque on the dresser caught my eye. It was a ceramic ornament of some sort, but even as I stared at it, I could feel more prickles of memory popping and fizzing like microscopic bubbles against the surface of my mind, as it too began to shout at me, demanding that I recognise it; and I did, in a shock so profound that the room slammed to a halt as I saw Teruko give me that plaque, and once again heard her read it to me, mother, and an elderly man, my grandfather, there in the room, dancing firelight, the smell of pine needles and...and...\n\nI woke with a start in my bed, and glanced at my dresser clock; almost 2 a.m. and I was starving. Teruko was lying next to me, deeply asleep, wrapped in my bathrobe and thick fluffy slippers on her feet, so I eased out of bed and slid my jeans on, wondering why my snow-boots were next to the bed, why my jeans were so loose and having to pull my belt in another notch past the usual buckle-hole, and briefly, why the dog was lying across the door; usually, if Teruko fell asleep in my room, or anywhere in the house, for that matter, Senshi would be found stretched out snoring on the floor right next to her; he was never more than a couple of feet from her, but now he was all the way across the room, lying like one of Landseer's lions in Trafalgar square, in the classic 'couchant' position, on his stomach, paws stretched out in front of him, his head up and watching me closely. Odd, I thought, and then dismissed the thought as my stomach rumbled again. I slipped on a pair of loafers and a sweater, and made my way downstairs to the kitchen, Senshi watching me and making no effort to move out of the way, forcing me to step over him.\n\nWhen I looked in the fridge, oh joy, mum had made Cottage Pie, my favourite, so I spooned some onto a plate and popped it into the microwave, then wandered into the living room to wait while it heated-up. I sat down and picked up the TV remote, Senshi suddenly appearing from nowhere to jump up on the sofa and huff gently at my neck, looking for a share of my snack, no doubt. For some reason, he seemed intensely interested in me; normally, once he'd figured out I had no snacks for him, he buggered off back to wherever Teruko was, as I was no longer important enough for his attention. He was a one-woman dog, and yet now he was all over me, sniffing and nipping at me, licking my face, which I hate (only one person on this entire planet gets to lick my face, and he didn't look anything like her...), and sticking his nose in my ear. I kept pushing him away, but for some reason he'd suddenly decided I was irresistible; mum had one unbreakable rule; chairs are for humans, and dogs belong on the floor, and if she'd seen this idiot dog trampling all over her couch there would be things said, I knew that for a fact.\n\n\"Down boy, down!\" I shouted softly, anxious not to wake everyone else, but Senshi wasn't having any of it, he was excited about something, and he wanted me to share in it with him. Eventually I gave up, unable to push him off the couch: it's quite difficult to budge an 80lb Labrador when he doesn't want to be budged, so I settled for clamping his head under my arm to stop his incessant attempts to lick my face.\n\nI flicked on the TV and the satellite box, and turned to the news channel, to watch in puzzlement and growing alarm as weather reports started talking about blizzard conditions in the Midlands and across the Oxfordshire plain, road closures, downed power lines; in June? What the hell was going on?\n\nAnd then that damned dog decided to start barking at me, his 'play' bark, the one he uses when he and Teruko are outside with a tennis ball and his squeaky rubber chicken, a huffing, breathy bark, high-pitched and attention-seeking, his tail going like a propeller as he barked happily at me.\n\nI wrestled with him, trying to grab his snout and clamp his mouth shut, confident that he wouldn't bite me, he wasn't that kind of dog, and finally succeeding, hopefully before mum or Teruko heard him and came to see what was going on.\n\nI picked up the remote to turn the volume down even lower, and my eye caught the date at the bottom of the screen. I froze in disbelief, the pit of my stomach dropping away as though I'd swooped down a fairground slide; December 21st, not June, not summer at all. I dropped the remote in shock, staring at the screen, knowing it couldn't possibly be right, but the evidence of my eyes was irrefutable; it was there on screen; news reports, pictures, and that shocking date at the foot of the screen impossible to argue with. Where the hell had six months gone, where the fuck had I been, what was going on?\n\nAnswers, I needed answers, mum would know, she'd tell me. I ran upstairs, the dog racing after me, my hunger forgotten, to knock, and knock again at my mother's bedroom door. I guess I knocked louder than I knew, because suddenly Teruko was there was well, looking sleepy, and rumpled, and delicious. Mum opened her door and saw the look on my face.\n\n\"Jack, what's the matter, what happened, how are you feeling, is something wrong?\"\n\nI was nearly gibbering with panic now, trying to make things come out right in my head.\n\n\"Mum, what happened to me, where's six months gone, why don't I remember them, what's going on?\"\n\nMum had started when called her 'mum', a strange look in her eyes as she looked closely at me.\n\n\"Jack, you...you know who am, don't you?\" she whispered, and I nodded.\n\n\"Of course I know who you are, what kind of question is that? Tell me, mum, please, what's going on, where's the year gone, why is it nearly Christmas, why don't I remember anything, how did I get here?\"\n\nMum was crying, as was Teruko, and no-one was answering my questions, until she took my hand and led me into her bedroom, sitting me down on her bed. She kept hold of my hand as she sat next to me.\n\n\"Jack, what's the last thing you remember?\"\n\nI looked at her sideways; what was she on about now?\n\n\"That's easy, mum, Teruko and I were planning on having Harry and Sai Fong over for dinner...so how did we get here? I don't remember driving up here at all! What...?\"\n\nMum squeezed my hand so hard it hurt.\n\n\"Jack, you've been...sick, since June. Harry brought you home yesterday, both of you, to spend some time with me. How much do you remember, of anything? What's the last thing you remember, seriously?\"\n\nI had to think for a few seconds.\n\n\"Going shopping in Lewisham, I parked-up behind the Matalan store, and we took a short-cut through the Docklands Light Railway station. Harry and Sai Fong were coming to dinner and...and that's all I remember. What happened to me, how did I get sick? Why can't I remember anything else? Tell me, please!\"\n\nMum looked away, her lip trembling, picking her words carefully.\n\n\"Darling, you were...mugged, in Lewisham Station, the boy had a gun, you tried to get to Teruko, and...and, he...shot you...oh Jack, we thought we'd lost you, it was so bad, you lost so much blood, they got you to hospital in time, but the damage...the bullet...!\"\n\nShe was crying again, obviously deeply distressed, her grip on my hand like iron. I could only sag in shock; I'd been shot? Why was I still alive, HOW was I still alive, if that were true? My total shock and confusion must have shown on my face, mum taking my face between her hands to look into my eyes and speak slowly, calmly as I flinched in shocked reaction.\n\n\"Darling, you were in a coma, in hospital in London, since June; Teruko stayed with you the whole time, six months day and night. You finally woke up almost two weeks ago, but you had amnesia, almost total retrograde amnesia, they called it; you didn't know me, Teruko, Harry, anybody, nothing about your life, your job, nothing; it was like losing you again...! Harry brought you home hoping that this would happen, that you'd remember us, everything...\" She paused to wipe her eyes.\n\n\"This evening, at dinner, you got sick, confused, we put you to bed, do you remember any of that?\"\n\nI shook my head numbly, too stunned to think coherently.",
        "Teruko climbed into my lap and laid her head in the crook of my neck, her arms like a vice around my neck as she cried silently. I tried to make sense of all this, to try and make things match-up and come out even, but even in the extremity of my shock and disorientation, I couldn't help but be hotly aware of how beautiful a girl I was holding on my lap, and I suddenly realised just how it might have been for them. For me, no time had passed, I had lost six months, but they hadn't, they'd had to wait for me, perhaps waiting for me to die, and yet mum, and Teruko, especially, had never given up, they'd waited and hoped and now I was back. Perhaps I should wait to find out what came next; right now my mum and Teruko were crying, they needed me, and I needed them if I was ever going to get past the shocks of the last few minutes.\n\nSomething she'd said was troubling me...\n\n\"Mum, you said I woke up two weeks ago; what have I been doing, where have I been since then?\"\n\nMum smiled at me through her tears, her fingers warm against my cheek.\n\n\"You didn't exactly 'wake-up', it was a lot slower than that; it took several weeks, first your eyes opened, then they started moving, vague and unfocussed, to be sure, but it was a sign that things were returning to normal with you, then your arms and hands. The hospital said the biggest breakthrough was when Teruko woke up one morning to find you'd turned over in the night and were lying on your side.\"\n\n\"When you were fully awake they kept you in hospital while they ran their tests; you only came out a couple of days ago. Your specialist at the hospital warned us that what was likely to happen after you woke up would be that you would enter what he called a 'fugue' state; I didn't really understand, but he told me one of the characteristics is sudden unplanned travelling or wandering off, which is why Teruko stayed by your side twenty-four hours a day. Mr. Hunter also said that the fugue would pass, but it could be days, weeks, or even months, but when it did pass, there was usually no memory of anything that took place while you were in that state. I suppose you've come out of the fugue now, but we still need to get you to the Royal Shrewsbury in the morning; you really frightened us this evening!\"\n\nTeruko loosened her hold on my neck and kissed me lightly on the cheek.\n\n\"Please to forgive, Jakku-san, I am sorry, please forgive me!\"\n\nI stroked her hair as I held her tightly against me, brushing her hair out of her eyes as I looked into them..\n\n\"What is there to forgive, Imoto?\"I asked, watching the tears gather again.\n\n\"When you...when you in hospital, I wait and hope and pray, I beg the ancestors, make offering to the gods to help you, bring you back. Every day I ask, every day they not help, they not bring you back, I stop hoping, and I give up, I pray that you go, so I can follow you. I give up, Jakku san, I lose hope and wait for you to die, I am sorry!\"\n\nShe was crying now, hot tears streaming down her cheeks, tears I tried to wipe away, but I was shaken by her confession, that she'd lost hope and planned to follow me when I died, and I hugged her fiercely, feeling her soft yielding body mould against mine.\n\n\"You would do that, little sister?\" I whispered in her ear.\n\n\"My life for you, Onii-san, only for you, cannot live without you!\" she replied, her arms tightening around me again as she hugged herself even closer, her lip still quivering.\n\nMum straightened up and brushed my cheek with her fingertips.\n\n\"Jack, darling, I know you're feeling confused right now, and you have every reason to be, but you're home now, and I want you to stay for a while; will you do that? You need to have someone look after you for a while, someone who can answer your questions, and you need to recuperate. Teruko's been doing an incredible job, you'll never know what she went through, but she's close to the edge herself, she was too young to take on so much, and she's almost worn-out; she needs some proper rest and care before she has a breakdown. Before all this you originally planned on going back after Christmas, but I really think you should wait until after the New Year. Will you do that for me? Will you stay and let me look after you? Please?\"\n\nShe had tears in her eyes when she finished, and I could only do one thing when she put it like that.\n\n\"I'd like that, mum, I really would, and thank you; it will be nice to be home again for Christmas!\"\n\nInside I was still reeling from the shock; half a year, gone, it made no sense; for me June was yesterday, and suddenly I'd stepped through a door from summer into the deep mid-winter, the calendar in my head spinning crazily as it tried to account for the lost time. I needed to sleep on this, I wanted to think, but most of all I wanted to find that magic door back into summer, before all this weird nightmare ever happened...\n\n\"Mum, what about my job, do I still have one, what am I going to do?\"\n\nShe smiled gently.\n\n\"It's okay, Jack, you're on Sick-Leave, you have been since you were first injured. General Sullivan has been in constant contact with me, so he's fully up to speed on developments, you saw him this morning, but of course you don't remember that, do you? As far he's concerned, you're no earthly use to him or yourself until you've rested and recuperated fully, so you're on the sick list for the next few months, on full pay, of course; there are still some benefits to being a Civil Servant!\"\n\nI felt quite indignant.\n\n\"I feel fine, how can they put me in dry-dock like that, I have rights...!\"\n\nMum held up her hand to silence me.\n\n\"Darling, look in the mirror, please...\"\n\nPuzzled, I did as she asked, pulling the cover off her dressing mirror, and reeling back in shock; who the hell was that? Not me, surely! I looked again, and the gaunt figure in the mirror aped my movements, his eyes deep-set and ringed with dark circles, his cheekbones standing out in high-relief, his cheeks sunken and pale, and deep hollows at the temples making his face look harsh and angular.\n\nI was shocked and appalled at my appearance; I'd lost so much weight I could barely recognise myself, I looked like I'd just come off a radical crash-diet, or something that lived in a crypt and only came out at night; my skin looked dry and sallow, my hands were like skeletal claws, the tendons in my neck were taut and clearly visible, and my hair was lank and lifeless. Teruko slowly pulled me away from my horrified study of myself, slipping the cover back over the mirror; now I really believed mum's story, now it all seemed real; no wonder none of my clothes fitted!\n\n\"You not need mirror, you still my Jakku san, eyes not changed, still beautiful, still Jakku san eyes! Everything else need time only, you are back, and you are well, that is all I need. I help you, mummy help you, all your friends help you, very soon you be OK again, I promise!\"\n\nMum and Teruko led me back downstairs, where my food was waiting for me, almost forgotten in the shock of discovering what had happened to me. Mum's Cottage Pie was as savoury and delicious as it had always been, and I stuffed unashamedly, mum filling plate after plate as I wolfed it down; I was owed this, I rationalised; after having been fed God knows what for six months in the hospital, mum's cooking was a joy and a feast for the senses!\n\nAs I ate, mum filled me in on what had been happening while I was busy being comatose; she told me about Harry and his unflagging faith that I'd pull through somehow, of grandad and his distress and despair, tugging yet another string in my heart, of Teruko's months-long vigil by my bedside, heartbroken, but undefeated, that small spark of faith and optimism guttering low but never quite extinguishing, keeping her there by my bedside even as hope languished and despair crept in. I looked at her, unable to believe how lucky I was to have her for my own, Teruko turning away and blushing as she saw my thoughts in my eyes.\n\nEventually I'd had enough, mum and Teruko grinning as I finally pushed my plate away, stuffed to the gills and satisfied in a way that I couldn't remember being for a very long time. Teruko stroked my face as I finished eating.\n\n\"It good to see you eat well again, I have missed you do that, I never thought I see again! It is good you eat well now, Jakku san, you must put weight back on, you must exercise, but not now, gradually, little by little. Headmaster at school say you can use gymnasium there if you wish, he is happy to hear you getting better, all school send good wishes for you!\"\n\nWhile Teruko and I talked, mother had poked the fire back up in the living room, and now she beckoned us through, a single table lamp and the fire filling the room with a soft golden glow. I plumped down on the couch in front of the fire, Teruko taking up her usual place huddled against me, her feet tucked up under her and her arm through mine. We sat there companiably, mum smiling happily as we talked in low voices about what came next, our immediate plans, such as they were, and how we were going to celebrate Christmas, normal, family things, no more trauma and weirdness, well no more than usual, given the history of my family...\n\nFinally, mum yawned for the last time and stood up, wrapping her robe tightly about herself.\n\n\"Kids, I'm going up; I can barely keep my eyes open, don't forget to put the fire-guard on when you go to bed. Goodnight, darlings!\"\n\nShe trailed her hand across my cheek then stroked Teruko's hair and went upstairs, leaving the two of us cuddled together on the couch, enjoying the warmth of the fire and the softness of the couch. The shock was receding as I began to emotionally accept that I had lost half a year, my rational side gradually overruling the emotional side, some sort balance beginning to assert itself. Eventually Teruko climbed off the couch and pushed the fire-guard into position, making sure it was locked in place, then took my hand.\n\n\"Come Onii-san, it is very late, must get rest. I am going to Telford in morning with Sai Fong, you cannot come, please to spend time with mummy, I will not be long! Come, bedtime now!\"\n\nWith that she took my hand, and I willingly followed her, switching off the lamp as we passed, and looking around the room in the warm firelight, my home.\n\nTeruko went to go to her room, but I pulled her into mine, listening to her suppressed giggle as I gently tugged her along the corridor. Mum knew about us, she had no real problem anyway, as far as I knew, so I saw no harm in having my girl stay with me for the rest of the night. She seemed to feel the same way, dropping my robe from her shoulders to stand before me in just a bum-skimming Tee-shirt and tight panties. I was almost drooling when I saw this, it was my favourite sleep-wear, apart from her bare skin, that is, and her cheeky grin only served to make her look even more desirable and, to be honest, madly fuckable.\n\nI beckoned her closer and lifted the hem of her Tee, Teruko lifting her arms so I could pull it over her head to leave her standing there in just her little pussy-cupping panties. As I slipped my hands around her to clench and squeeze her lovely, firm bum cheeks, she grasped hold of my almost supernaturally hard cock and squeezed, making me groan with the need to unload something inside her, soon!\n\nTeruko unbuttoned my jeans and pulled down the zipper, her hands slipping inside to squeeze me through my shorts. That did it! I pushed down my jeans and kicked them off, tugged off my sweater and pulled her close, my hands pushing down her panties and pulling her cheeks apart, making her gasp into my mouth as our lips crushed together. My steely cock was trapped between us, something she took into account as she began rolling her hips from side to side, rolling my cock between our bellies as we kissed like mad things, consumed with lust and need. Her hip motion was torturing me, inflaming me as images of us making love, of the things we'd done, and still wanted to do, rose up and danced in my head; right now, I wanted to fuck her in every hole, I wanted to fill her up as never before; they'd told me I had been in stand-by mode for six months, but I was awake and aware now, and that meant I had a lot of catching up to do; Teruko said I needed exercise; good, right now I knew exactly what exercise I wanted to do the most!\n\nTeruko felt my cock stiffening even further as I thought about her and what we could do, and broke our kiss to turn to the bed, obviously intending to climb in. I had other ideas, snaking my hands up her torso to cup and squeeze her breasts, feeling her bullet-hard nipples as I pulled her in close to me, kissing her neck and nibbling her ear as I groped and plundered those spectacular breasts. She moaned and pushed back against me, trapping my cock in the deep, warm valley between her cheeks. I could only hold her like this for so long; I wanted more, I wanted her, I wanted to be inside her, making love to my love, and so, reluctantly, I released her, leading her instead to the bed.\n\nAs soon as we climbed under the covers, Teruko turned to me, pulling me in for a fierce kiss, her arms locked around my neck. She surprised me with the intensity of her kiss, but I kissed her back with equal firmness and commitment; I loved this girl, and kissing her was still my favourite pastime!\n\nAs we kissed we drifted down the bed until she was somehow under me, and it was the most natural thing in the world to slide my aching cock into her warm tightness, the feeling drawing a mutual gasp as we coupled. Her lips were a magnet I couldn't escape, nor did I want to as we made love, our sexes drawing together and breaking apart as I pumped into her and withdrew, to pump in again, and again and again. Her gasps were becoming shorter, breathier, her hands holding my back as she writhed underneath me, her wet pussy sucking and clasp at me as she raised her pelvis to pump back at me, meeting me stroke for stroke as we raced and strained to meet in fulfilment.\n\nShe came first, her orgasm breaking over her like a crashing wave, her voice a scream of release as her pussy clamped down on me, halting me in my tracks. At the sudden constriction, the sensation of heat and pressure on my cock pulsing and rippling along my length, I too gave in to the orgasm that claimed us both, sperm blasting out of my over-stimulated cock to paint her insides with my milky seed, pulse after pulse, long, satisfying spurts of life-giving seed filling her up, coating her cervix.\n\nAt the feel of my heat filling her, Teruko erupted in orgasm again, a hot spray of her own sweet-scented ejaculate coating my lower belly and cock as she came on my cock all over again.\n\nHer rippling, milking pussy squeezing and wringing every last drop of my seed from me, the sensation of ejaculating continuing even after I had given up the last of my seed for her, my body wrung dry.\n\nI slumped down next to her, gasping for breath, my heart thudding and hammering in my chest as the emotional intensity of making love to my girl crashed over me. My chest was rising and falling like a bellows, trying to gulp in enough air, and my body was so depleted of strength I felt like I'd just run a marathon in lead boots.\n\nEventually my strength began to return, but not much; I still felt like the last noodle on the plate, limp, flaccid, and not much use to anyone. Teruko slid closer to me and kissed me gently on the side of my mouth. I turned to her, my hand reflexively coming to rest on her rounded rump, pulling her closer to me, suddenly feeling the need to hold her close to me. She smiled at that, placing her warm hand on my hip as she held herself against me, her heart fluttering against mine.\n\n\"Yesterday we have sex; today Jakku-san make love to me; it mend my heart to know my husband know me and love me again! One day perhaps Jakku-san forgive me for lose hope; I love him very much, nothing else matter to me except he come back and love me again. I let Jakku-san go, I never let him go again, I promise!\"\n\nI wiped away the tears as they rolled down her cheek, concerned for her; how much more could she beat herself up, how much more could she take? Mum had said she was exhausted, that she was close to the edge, she needed to be cared for now as well, and I certainly had no need to forgive her for anything; quite the opposite; she'd kept her vigil over me even as she lost hope that I'd ever return, she never left me alone in that place for one minute; no, I had nothing to forgive her for. Perhaps it was time she learned that for herself.\n\nI sat up (discovering for myself just how weak I really was, it took a real effort...) and urged her to sit with me. She did so, sitting cross-legged in front of me as I caressed her face, her lips, her hair, drinking in every detail of her, and seeing, really seeing for the first time just how much weight she'd lost, the hollows under her eyes, the tiredness in the back of her eyes. My heart broke for my beautiful girl, so much loss and heartache, fear and loneliness showing in her eyes, her big, beautiful eyes, and yet, with all that, she'd still stuck by my side, love for me keeping her there when hope had finally died. I reached out and pulled her close, hugging her tightly as I kissed her hair, her neck, her shoulders, enfolding myself in her as I wrapped myself around her.\n\n\"Never again!\" I whispered, \"I'll never leave you alone again, I swear! You mean more to me than anyone or anything, and I'll never let you go, or give you reason to cry, I swear on my soul! I love you Teruko, in so many ways I don't know how to say them all!\"\n\nTeruko looked up at me, her eyes huge and mysterious.\n\n\"Jakku-san ask me before to marry him, and I say yes; I still say yes! I want to be wife of Jakku-san more than whole world, there only one thing I want in this life, and it is my Jakku-san. I will marry him, and we will have many children, strong sons to take his name and be our joy and pride, many sons to please ancestors and make sure name is not forgotten. I will marry Jakku-san, if it pleases him, when time is right, and we will be happy, this I promise!\"\n\nShe reached out to touch my chin, caressing my cheek, and pushing my hair back out of my eyes.\n\n\"And now you must rest! I see tiredness in your eyes; I feel it in your body, you still not strong, must rest and grow strong again, please to lie down, you must rest; not to worry; I not go anywhere!\"\n\nI allowed her to push me back down (although, right now I felt as weak as a kitten, she could have done it anyway and I couldn't have stopped her!), and luxuriated in the feel of the bed beneath me, the soft pillows, and the soft warmth of her body as she slipped under the covers and pulled them up over the two of us. I fell asleep to the feel of her hand slowly rubbing my back, the smell of peaches from her silky hair, and the soft sound of her breathing.\n\nI woke late; the clock on the dresser said it was almost 11 a.m., and Teruko was nowhere in sight. I panicked for a second, before I remembered she had said she was going in to Telford do some shopping, so I climbed out of bed, staggering slightly as I stood up; I still felt washed-out, but hungry and ready for some of mum's cooking; there better be some of that Cottage Pie left, because I was having it, if I had to fight everyone else in the house for it! I made my way to the bathroom to shower and brush my teeth, and then, refreshed, wide awake and starving hungry, staggered downstairs to raid the fridge.\n\nAs I got to the foot of the stairs, I heard voices from the kitchen, and upon peering in, saw Harry seated at the kitchen table chatting to mum, and then I heard Grandad's voice. He and Harry were talking about me, and I will admit to a small lump in my throat as I heard Grandad tell him how much he was looking forward to seeing me again. I pushed the door open, Harry jumping up to grin at me as I walked in.",
        "\"Jack, your mum told me what happened! How are you, any after-effects?\"\n\nI had to grin; this was Harry, my best friend since I was an eight year-old prep at Kingsland, looking as handsome and friendly as ever. Subjectively, I'd only seen him a couple of days ago, when we'd arranged to have him and Sai Fong over for dinner; it was weird to think that had been six months ago, at Midsummer, and now it was a couple of days shy of Christmas. The strangeness and sudden disorientation was a little disconcerting, but I guessed I was going to have to try and get used to that. A small sound behind me, someone shifting in their chair, and I remembered I'd heard Grandad's voice, so I turned, and there was the old man, looking suddenly, shockingly older, his face lined and worried, his eyes rimmed with tears.\n\n\"Hello son, I...I...!\" he faltered, the tears spilling over, shocking me even more; I'd never seen him give more than a wry grin, and now...\n\nWordlessly, I held my arms out, and he embraced me, pulling me to him strongly, still no hint of frailty in his tough old frame.\n\n\"It's good to see you son, I thought I'd...I never...I was so...oh Jacko, I thought we'd lost you...!\" he faltered, his voice thick with emotion, and for once I didn't object when he called me the same name as his foul old dog, caught up in his emotion as I was. He continued to hug me, wordlessly pounding me on the back, and I was immensely glad, and immensely comforted, to have my Grandad here, along with my mum, the only constant in my life as I grew up. I glanced up, to see mum and Harry slipping out of the kitchen, giving me some time alone with him.\n\nAt last he let go of me, turning his back to mop his eyes, and then turning back to me to take me by the shoulders.\n\n\"Let me see you, Jacko, let me look at you!\"\n\nHe looked long and hard at me before sitting back down at the kitchen table, motioning me to take a seat, his gaze flicking over me, subjecting me to the closest scrutiny, his sharp old eyes not missing a thing. He poured me a coffee, and handed me the toast-rack and the butter-dish.\n\n\"Your mother will do you a cooked breakfast in a minute, you and Harry both; he deserves another one, he's a good lad; he came with me this morning after breakfast to Ludlow to help me cut and load the tree, the two of you can put it up later. How are you feeling, lad? Honestly?\"\n\nI was so glad he wasn't fussing around, that he was just being himself, a little more talkative than his wont, but not intrusive, just friendly and concerned.\n\n\"I feel fine, Grandad, just weird; six months have just vanished, and suddenly I look like something out of 'Nosferatu'; I've had better awakenings, believe me!\"\n\nHe grinned at that, and passed me the marmalade pot.\n\n\"A couple of weeks of your mother's cooking should take care of that, don't you worry! There's no rush to head back down to London, Harry has to go back just before Christmas, give him your keys and he'll check on the flat for you, and pick-up any bits and pieces you want; he'll bring them up when he comes back to spend Christmas with that lovely little girl of his. In the meantime, rest, eat, sleep, get your strength back. If the weather's still acting-up after New Year, take the Trooper back down to London; I've still got the Land-Rover to cope with whatever the weather throws at us up here. Otherwise, your mother will take the pair of you back down when you're ready to go.\"\n\nHe poured himself another coffee.\n\n\"Thing is, though, why do you need to go back any time soon? You're on the binnacle list, and will be for a while yet, Teruko's already deferred university until March, you could stay here a while and let us look after you; Harry is going to be spending a lot of time at Woolwich over the next few weeks, so he'll keep an eye on your place, actually, it was his idea, so you can rest, relax, and recuperate here at home, and you don't have to worry about anything except getting back to normal. More importantly, Teruko needs to stay here, near her mother; she needs some serious care too; I look at that little girl and all I can see is exhaustion and fear; she needs her home, and she needs her family. Think about it, son.\"\n\nI already was; that was probably the longest speech I'd ever heard him make, and he was making all sorts of sense; I'd talk to Teruko when she came back from this mysterious shopping trip to Telford.\n\nAt that point, mum came in, with Harry in tow, asking what I wanted for breakfast. I plumped for the full English, Harry's eyes lighting up at that, so we adjourned to the sitting room to sit in front of the fire and enjoy the smell of fresh pine needles from the wrapped Christmas tree leaning against the wall while mum set about making my favourite breakfast.\n\nTo occupy ourselves, we set up the tree in a corner, Harry and I lifting the tree, an eight-footer, while Grandad slid the tree-jack into place and tightened the clamps. Mum and the girls had already brought down the lights and decorations, so Harry, Grandad and I whiled away the time untangling and testing the lights while we waited for breakfast.\n\nMum called us in to eat, and it was as good as the best of all the breakfasts she'd ever cooked; sweet-cured bacon, butcher sausages, none of your supermarket rubbish, fried eggs, grilled Irish White Pudding, mushrooms, crisp fried bread, and a jug of coffee, the food of the Gods!\n\nOnce we'd finished breakfast (my first and Harry's second, but he'd earned it...) Harry and I cleared the table, loaded the dishwasher, and joined mum and Grandad in the sitting room to start decorating the tree, just as the girls returned.\n\nI was quite surprised they were back so early; Sai Fong is a well-known shopaholic, and Teruko can't resist trying on every single garment in a store; Harry had speculated that we might have to send in a search and rescue team and sniffer-dogs, as he was all too aware of what our girls were like when they were out shopping, collectively or individually; he'd stayed behind this morning expressly to avoid subjecting himself to that particular form of Chinese Water-Torture. He was also of the opinion that Shopping Malls were actually huge predatory creatures that sucked you in, turned your brain into pancake batter by a combination of sensory overload and brain-softening background music, sucked all the money out of your bank account, then kicked you out into the street penniless and brain-dead, clutching shopping bags full of cheaply-made expensive crap. It was a theory, I suppose, but it certainly fitted a lot of the known facts...\n\nOnce the girls had shown us all the purchases they were prepared to, with a few they said would have to wait until Christmas morning, we set about trimming the tree. The very act of doing so sending me back to my childhood, mum and Grandad putting the tree ornaments in the places I pointed out but couldn't reach, and a set of ornaments for me to put anywhere I liked. Once they'd finished the tree, Teruko and Sai Fong began putting up the Christmas decorations around the room, the Holly wreath made with Holly from mum's garden, and twining the green and gold glittery stuff around the stairs and along the picture rails.\n\nMum hadn't put any decorations up this year; with me in hospital and Teruko refusing to leave my side, she'd had no inclination to celebrate Christmas; now she was back in the swing, especially with Harry and Sai to help.\n\nThe last thing they hung was the Mistletoe, a large bunch clipped from the apple tree in the garden, and I was the first lucky one, as Teruko pulled me under the bunch to give me my Christmas Kiss.\n\n\"Welcome back, Onii-san!\" she whispered, her face wreathed in smiles while everyone else clapped and cheered.\n\nHarry and Sai Fong declined lunch as they had a lunch planned with their father, so we walked them out to their car. As they were leaving, Teruko called them back, reaching up to kiss Harry on the cheek and turn to hug Sai Fong.\n\n\"Thank you for all you do, thank you for be best friends of Onii-san!\" she murmured, reaching behind her neck to unclasp her jade pendant and place it around Sai Fong's neck.\n\n\"This is present from Jakku san and me, and from mummy, too. This is symbol of good things happening, it is good luck and bring good fortune. Wear it always, it bring you much luck and happiness!\"\n\nSai graciously tried to decline it, saying it was a family piece, but Teruko was adamant.\n\n\"I already have my happiness, and all my wishes, now it time to pass the luck on. Please to wear it and enjoy!\"\n\nSai Fong smiled, her eyes sparkling as they filled with tears, giving Teruko and me a big hug each before climbing into the car, wiping her eyes and smiling at us.\n\nHarry reached into his jacket pocket handed me an envelope.\n\n\"Almost forgot, this is for you!\"\n\nWhen I opened it, there were two tickets inside for the school Old Boys Association New Year's Eve dance at a hotel just outside town.\n\n\"You be there, Jack, everyone's asked if you're coming, all our friends will be there, and it's time to have a little fun! If I don't see you before, have a fun Christmas, and we'll see you Boxing Day before we head back down to London!\"\n\n*\n\nChristmas was the quiet family affair I'd always enjoyed, just mum, Grandad, Teruko and me. I was a little sad that I hadn't bought any gifts for anyone, but Teruko had been well ahead of me there; that mysterious shopping trip to Telford. She had gifts for Grandad and mum, from both of us, but I still had nothing for her.\n\n\"Not need Kurisumasu present, Jakku San; I already have what I want; you are here, that is all Kurisumasu no Okurimono I need; I am happy you well!\"\n\nShe pulled my head down to kiss me, and whisper in my ear.\n\n\"Later, Jakku San give me special present of his own, yes?\"\n\nI grinned at her, my jeans suddenly tightening as I realised what she was saying, and suddenly the day just couldn't end soon enough! Mum had made her usual superb Christmas turkey lunch, topped-off with a flaming Christmas pudding. We pulled crackers and ate mince pies, drank Rum punch and mulled cider, and Teruko sang Christmas carols in her sweet, bell-like voice, relaxing me somewhat, enough at least that I could enjoy Christmas Day with my family, and especially with my very own Christmas angel, who'd stayed with me and been there for me even when she thought there was no hope. I had a special Christmas treat planned for her, but it would have to wait until later that night.\n\nWe sat up until late, enjoying the firelight, the room filled with the sweet smell of apple wood from the Yule log in the fireplace, sipping mulled cider and watching the standard Christmas night television ('The Great Escape' on one channel, 'White Christmas' on another, a Christmas ghost story on ITV, one of the 'Lord of the Rings' movies on Channel 4, and 'Jurassic Park' on Channel 5). Grandad was snoozing in front of the fire, an empty brandy glass next to him and the remains of a turkey, sausage, and stuffing sandwich perched on his chest. Mum had had a long day, and was fast asleep in her chair next to the fire, a shawl pulled around her.\n\nI was in a mellow mood, no doubt helped by the Rum punch, Teruko curled up next to me, her arm through mine as we sat and watched the fire, ignoring the TV in the background, enjoying being home again for Christmas. Eventually, she got up, stretched, and began tidying up, removing Grandad's sandwich, kissing him good night and walking him, a little unsteadily, up the stairs to the guest bedroom while I damped down the fire and gently shook mum awake.\n\n\"Wakey Wakey, mum, it's late, better go to bed, Teruko and I'll clear up. Goodnight, mum!\"\n\n\"Jack...I'm sorry, I didn't mean...!\" she began, but I shushed her.\n\n\"It's okay, mum, you've had a long day, we've all had a great day because of you, now go to bed, we'll clear up and switch everything off. Off you go!\"\n\nShe smiled and stood up, yawning and stretching after being asleep in her chair for so long. She wrapped her shawl around herself, kissed her fingertip and touched my forehead with it, and made her way upstairs, passing Teruko and giving her a goodnight hug on the way. I sprawled back onto the couch, reluctant to go to bed and admit Christmas Day was over for another year, a hangover from my childhood, and I wanted to enjoy the fire and watch the tree lights for a while, maybe snack on some Christmas cake or snag a couple of sausages and a mince pie or two, something I always did on Christmas Night. Teruko came into the room with a platter with some bread, butter, sliced stuffing, turkey slices, mince pies, sausages, and a few slices of Christmas pudding, good girl, she remembered!\n\nOnce again she cuddled up against me on the couch, nibbling at some turkey while I worked my way through a sausage, turkey and stuffing doorstep sandwich of my own, the smell of her hair filling my nostrils as she hugged herself close to me, her legs long and golden in the firelight. I could feel another sort of appetite beginning to make itself felt as I munched, but before we did anything, I had a special present for her. Gently disengaging her arm from mine, I went over to the tree and took out a small box out from where I'd hidden it among the needles and tree decorations. When I sat down, I pulled her round to face me, smiling inwardly at her puzzled expression.\n\n\"Teruko, this morning you asked me to give you a present that was just from me. I still have that for you, but this is from all of us, but especially from me. I asked you if you would be my wife, and you said yes, and I asked if you would wait until I could give you a special ring. This is for you.\"\n\nI opened the box to show her the beautiful diamond and Burmese Ruby ring inside.\n\n\"This was my grandmother's ring, mum wanted you to have it, and gave it to me so I could give it to you. You never left me, you never once walked away from me, and this is to thank you for being there, for loving me enough to stay by me no matter what. This is a family piece, and no-one deserves it more than you; I once promised you a special ring; this is it, truly a special ring for the most special person in the world. I want you to wear it for me. Teruko Cameron, once again, will you marry me?\"\n\nTeruko looked at me, her eyes shining.\n\n\"Jakku san ask me once before long time ago to marry him, and I say yes; he ask me again, each time my answer same; yes, I will marry him, I will wear ring that is part of family, I will be part of family in this way as well. My heart only belong to Jakku san, his heart belong with mine; we will be husband and wife, we will have many children, this will please mummy and Grandad, and all ancestors, strong sons and proud daughters, our children. I love Jakku san, and so I will wear his ring, become a part of him, as he is already a part of me!\"\n\nShe moved in close to me, holding my neck as she kissed me, her lips soft and tempting, sealing her promise as the antique engagement ring sparkled in the firelight.\n\nTeruko climbed off the couch, checked the fire-guard was locked in place and the hearth was clear, and took my hand.\n\n\"Come, my husband, we still have Kurisumasu no Okurimono to exchange!\"\n\nI followed her, once again that pleasant tightness in my groin awakening as I watched her lithe figure ascending the stairs in front of me, then turning at the top of the stairs to wait for me, a pale glimmering figure in the reflected fire-light from downstairs.\n\nShe led me into my bedroom, although it was rapidly becoming our bedroom, and turned to help me unbutton my shirt and pop my jeans while I slid her dress off her shoulders and pulled it down, Teruko wriggling delightfully to get it past her hips, to stand before me in just her panties. I slid my jeans down and tugged my shirt off, my excitement obvious by the bulge in my shorts. Teruko giggled, her hand stroking me as I pulled her close.\n\n\"Jakku san not tired, then?\" she asked, squeezing me deliciously, and for answer I slid my hands into the back of her panties and pushed them down so I could cup and squeeze her firm, squeezable cheeks in retaliation.\n\n\"I'm never tired when you're around, little sister, I thought you knew that!\" I grinned. Teruko responded by holding me a little more firmly, less playfully, her eyes shining as I pulled her close so I could kiss my girl. She let go of my cock to slide her arms around my neck as she kissed me back, her lips soft and sweet, then breaking off to gently pull me back towards our bed.\n\n\"It Christmas Night, Jakku san, now is time to exchange gift!\" she smiled, slipping her panties all the way off and padding over to the bed, her twinkling buttocks captivating in the mellow golden light from the bedside lamp. She climbed onto the bed, remaining on all fours, her pussy slick and juicy with anticipation, the scent of her excitement calling to me. I held her hips, running my hands over her smooth flanks, her taut belly, her firm, rounded buttocks, enjoying the feel of her warm, silky skin against my palms, my hands \"seeing\" her even as my other senses revelled in her nearness, her excitement, her readiness for me.\n\nAs I touched and smoothed and fondled her, she reared up onto her knees to lean back against me, her arms going around the back of her neck to hold herself against me, my cock iron-hard and firmly lodged in the deep, warm cleft between her taut, springy cheeks. My hands automatically slid round her ribcage to catch and squeeze her firm breasts, weighing those beautiful globes, feeling the heft and sway of them even as her nipples stiffened into hard points between my gently squeezing fingertips.\n\nI squeezed and teased her nipples, her hand slipping down to gently rub and slide between her labia, touching herself even as she slowly raised and lowered herself, masturbating my cock with the cheeks of her lovely arse. I gave myself over to what she was doing to me, nibbling and gently biting her neck, her earlobes, her shoulders, as she moved against me, the pleasure slowly building into an unstoppable need for her as she ground away at me.\n\nWhen she judged she'd worked me up enough, she sat up straight, my cock falling between her thighs; she reached under herself and positioned me, to slowly sink back down, impaling herself on me with a hiss as I filled her. I gasped at the feel of her wet heat engulfing me, the muted rush of sensation as she slowly slid herself onto me until I was in her to the hilt. Holding her as I was, I only had limited movement, but now she began a slow rise and fall, her tight pussy squeezing me as she rose and fell, fucking herself on me, and taking me with her.\n\nMy head was spinning with the slow eroticism of what we were doing here; low-key as it was, it was still enough to light me up inside as my beautiful girl made love to me. Now her breath began to come in staccato bursts, and I could feel her heart beginning to race, my hands clamped around her as they were, her movements harder, faster, as she ground herself against me, pumping faster now, moving against me like a wild thing, jamming herself down on me, her hand rubbing and pulling at her engorged clitoris as I pumped harder and harder into her.\n\n\"Harder, Jakku san, please to ...oh yess, like that, harder...harder, oooh yesss, yesss YESS! YES, Jakku...YESS! Ooooohhhhh! OoooHHH! Yesss! YESSS!\"\n\nShe screamed as her orgasm hit, a flood of warmth bathing my groin and upper thighs as she squirted her hot juices over me, the sensation almost making me lose it there and then. I held her against me as she shook and gasped in the throes of orgasm, her hands clasped tightly about my neck as she held herself against me, shaking and wailing as wave after wave of pleasure rolled and crashed though her, eventually diminishing and dying away. Her death-grip around my neck relaxed, and she slumped forward to lie prone on the bed, her sides heaving as she fought for breath after her incredible orgasm.",
        "At last she opened her eyes, to smile at me sleepily.\n\n\"Thank you Onii-san, I love you! Now it your turn!\"\n\nWith that, she spread her legs and raised her beautiful bottom into the air, sliding a pillow under her midriff to support herself. Smiling wickedly at me, she slowly pulled her buttocks apart, and slid a finger into her soaked pussy, rubbing it in and out a few times before withdrawing it and slowly sliding it into her anus. She pumped herself a few times, lubricating herself, before repeating it, this time with two fingers, opening and loosening her anal ring for what she wanted me to do to her. Her eyes were tightly closed all through this, she was in a world of her own as she plunged her fingers in and out, masturbating her anus, before opening her eyes to smile at me.\n\n\"Husband...?\"\n\nMy cock was like a steel bar after witnessing this, and I didn't need a second invitation, believe me! As I hovered over her, she reached up to pull me down and kiss me on the side of my mouth as her other hand fumbled with me, aiming me at her wet and slippery cunt.\n\nI slid my cock into her swollen pussy, savouring again the feel of her hot wetness enfolding my rigid cock, pumping into her a few times to lubricate myself, to finally place my throbbing cock head at her anal entrance. I slid my hands round to once again hold and squeeze her gorgeous breasts, and slowly, steadily, pushed my aching cock into her tight little anus. Teruko gasped as the head invaded her, pulling her cheeks apart to stretch her anus open as far as she could to accommodate my girth even as I pushed forward slowly but unstoppably.\n\nMy head suddenly popped in past the constriction of her ring, Teruko giving a gasping little cry as it did, then slowly slid all the way in, until I was buried to the root in her hot, tight rectum. I stopped for a few seconds to give her a chance to catch her breath, waiting for her signal before I did anything else. After a few seconds, she began pushing back against me, so I began pumping into her tight hole, fucking her arse slowly at first as I squeezed those fabulous breasts of hers. As her bum hole loosened, it became easier to slide out and pump back in again, Teruko pushing back against me as I rammed into her. Her hand slipped down to rub and squeeze her clitoris, frigging herself as I fucked her in her tight little arsehole, both of us working into a frenzy as we fucked in this raw, primal way, the rest of the world forgotten, just the two of us humping and pumping against each other.\n\nNeither of us could last long like this, Teruko came with a deep groan, her rectum rippling and squeezing me as her uterus fluttered against the thin membrane separating her uterus from her rectum. As she clenched in orgasm, the pressure became too much for me, my already hyper-stimulated cock feeling like it was being squeezed along its entire length all at once by a wet velvet-covered fist. That was it for me; I felt my cock head swell and jam inside her rectum as the spunk literally bulleted out of me, spraying inside her and coating her bowels with my seed. Jet after jet sprayed out of me, more that I think I've ever done in my life, all for this girl, my beautiful wife-to-be, my gorgeous Japanese half-sister.\n\nI was left feeling weak, drained, almost too tired to move, withdrawing at last to collapse down next to her, winded, exhausted, more dead than alive. Teruko finally opened her eyes, kissing her finger and touching it to my lips, before standing up, somewhat shakily, to throw my robe over herself and stagger off to the bathroom to get cleaned up. She was back a few minutes later, tapping me lightly to wake me so she could gently wash my cock and balls properly with a soapy wash-cloth and a bowl of warm water. Once she was satisfied I was clean, she towelled me off, finally urging me to move so I could get into bed properly, then climbing in with me and pulling the covers up over both of us. The last thing I remember is her kissing me goodnight, her small hand gently rubbing my chest and her leg rubbing over mine as she hugged me close, the smell of her hair filling my nostrils as I finally fell asleep.\n\nI awoke to the sight of white swirling outside my window; it was snowing, big fat flakes, the settling kind of snow. Teruko was still fast asleep, her lovely rump spooned firmly into my stomach, my morning erection fitted nicely between the cushiony cheeks of her soft squeezable bum. As I came fully awake, her eyes flicked open and I wondered how she knew, even fast asleep, when I was awake and so woke up to be with me.\n\n\"Good morning Onii-san, look, it snowing!\"\n\nI had to grin at her expression and the happiness in her voice; she looked twelve years old and ready to play in the snow, but then she turned to face me and my erection stiffened even further; nobody seeing those curves could mistake her for anything other than what she was; a beautiful, sexy, desirable young woman, and once again I marvelled that she was mine, that she wanted me, Mr. Ordinary. I had to reach out and touch her, slide my hand down her flank and cup her buttock, just to convince myself she was real, that she wasn't some figment of my imagination, the head trauma playing a last, cruel trick on me.\n\nTeruko saw the look on my face, perhaps she saw a flicker of what I was thinking in my eyes, because she cupped my face in her soft hands and drew me down to kiss me gently.\n\n\"Husband, I am here, not go anywhere without you; soon we will be married, this is what we want, and nothing change that; bad dream is over, it will not return, and I not go away; I will always be at your side, this is what marriage mean to me, this is what I want for you. Be happy now, no more sadness; that is over!\"\n\nShe grinned impishly and poked the end of my nose.\n\n\"See, I am really here! What does Onii-san want to do?\"\n\nShe slipped her hand down to hold and squeeze my cock, making it abundantly clear what she wanted me to do to her, and who was I to argue with such a lovely girl? So I squeezed and stroked her taut bum cheek, pulling her closer so I could kiss her while I groped her splendid bum, the feel of the taut flesh stiffening my cock even further, quite apart from the feel of her stiff nipples rubbing solidly against my chest as we kissed. Teruko moved her hand so she was cupping and squeezing my scrotum, and now I was having a real problem concentrating on fondling her; all I wanted to do was ravage her, stick my solid cock into her somewhere, anywhere, and pump her full of the sticky stuff!\n\nTeruko solved my problem for me by pushing me over onto my back, her lips still glued to mine as she pumped my cock, then breaking off to kiss her way down my neck and chest, grazing my nipples with her teeth just hard enough to send a zing through me that made the hairs on my forearms and the back of my neck stand up. She continued kissing and licking my torso, ruffling her tongue in the hair clothing my chest and between my abdominal muscles and pulling them gently between her teeth, kissing her way down my abdomen to finally lick and swirl her tongue in the tangle of hair surrounding the root of my cock. I sighed as she slowly licked and kissed her way up my, by now, truly epic erection, to grin at me as she slowly licked my swollen cock-head, making me groan out loud.\n\nWith slow deliberation, and a big happy smile, she slid her lips over the head of my engorged cock, sealing her lips over the end as she licked and gently sucked me, her tongue tip in the slit driving me wild, making me shake with the effort of not just wildly fucking her face. As she sucked, she kept up a gentle pressure on my scrotum, squeezing and fondling my balls as her mouth slid up and down over the head of my cock. I slipped my hand between her legs, feeling her pussy lips damp and open, and began sliding two fingers inside her, gently frigging her as she suckled on me. I wanted to taste my girl, so I pulled her up to me, grinning at her look of surprise as I pulled my cock from her mouth, her surprised look giving way to a small grin as I pulled her across me into the classic '69' position and pushed my tongue into her hot, moist little pussy.\n\nShe gasped as my tongue slid inside her, her hips making involuntary circling motions as she sat up astride me, all thoughts of sucking me forgotten for the moment as she began to grind herself against my mouth and tongue, rubbing and squeezing my cock as she moved against me. I took hold of her thighs as I pulled her closer to me, her cue to lie back down on me, sliding my cock back into her mouth to suck and tease me once more. As she licked and sucked me, I sucked on her labia, making her gasp around my cock, the movements of her pelvis suddenly more pronounced as she bore back against me, putting her clitoris and tempting little anus in easy reach. I licked her with the flat of my tongue in long strokes, from the hood of her clitoris all the way to her tight little rosebud, pointing my tongue and teasing her with just the tip of it pressed into her anus, barely penetrating her, lightly rimming her and making her gasp and suck me harder.\n\nI could feel her clitoris engorging more every time I flatted my tongue over her, until at last it emerged from its little hooded hiding place, stiff and firm and slick with her juices. I gently swirled my tongue around it, enjoying the feel of the hard rubbery little pearl, her succulent pussy slick and dewy as her juices ran freely as my tongue rubbed and stimulated her.\n\nHer pussy was running with her juices now, the taste driving me mad with need for her, and so I bored in even more, making her suck all the harder as she squeezed my cock and massaged my scrotum. I shoved my tongue into her arse as hard as I could, and Teruko groaned loudly as her orgasm crashed through and over her, a flood of her delicious juices squirting in a hot spray over my chin and neck, some of it even splashing into my mouth as she came, her pussy convulsing and her rectum tightening, forcing my tongue out as her pussy and anus spasmed together. As she moaned, my cock still deep inside her mouth, the vibration was too much, and I came, hard, a jet of spunk roaring out of me to blast into her mouth. Jet after jet of spunk pulsed out of me, filling her mouth, Teruko almost choking in her haste to swallow the enormous amount of semen I was blowing into her hot, eager mouth.\n\nAt last I was done, as was she, slumping down on top of me, her pussy and anus still twitching and winking at me as the aftershocks echoed inside her. Finally she was still, her head resting on my thighs as I surveyed her beautiful pussy and tight, wrinkled little bum pucker, so close to my face while I stroked and gently squeezed her glorious cheeks, the taut, fleshy globes a fabulous view no matter what angle I viewed them at!\n\nTeruko groaned and sat up, sliding off me and sprawling next to me, to kiss me once, softly, then grin at me, her eyes sparkling as she smiled.\n\n\"Thank you, husband, now I really sure you will be okay! I must have shower, must be clean, you too! Come, we go shopping, sale is on, there is something I want to buy you!\"\n\nAfter a long, enjoyable, but chaste shower, the two of us keeping our hands to ourselves by mutual agreement, Teruko took me shopping; the Boxing Day sales were on, and she wanted to buy me some clothes, as nothing I owned actually fitted me, and we had a dance to go to. I eventually ended up with a new dinner suit and a nice dress shirt, all in my size, so at least I looked more normal and less like a refugee from the health spa from hell...\n\nMum was happy for Teruko and I to go to the dance; she was going to a long-planned dinner party to bring in the New year with some old school friends, and Grandad was away with his friends, ready to be up and about bright and early for the New Year's Day shoot at the Chillingmore Park Estate in Staffordshire; he'd stayed for Boxing Day, mostly because a brandy hangover is a nasty one, Teruko dancing attendance on him while he suffered manfully, enduring mum's raised eyebrow every time she saw his expression of imminent death. I was highly amused; Grandad never drank, except maybe a nip from a hip-flask on a frosty morning if he was out on an early rough-shoot, but this Christmas had been special for him. I'd come home, and Teruko and I were engaged, so he'd celebrated, perhaps a little too much, and mum was enjoying torturing him, so we let her.\n\nTeruko was fooled by his agonized expression, so of course he laid it on thick, hence the waiting-on hand and foot mentioned earlier, but eventually on December 28th , The Feast of the Holy Innocents, he eventually took his leave, hugging me, which was unusual, but understandable, and his darling Teruko of course, his little girl, telling us to bring the Trooper back when we were ready, there was no rush.\n\nThe dance was at a large hotel on the outskirts of Shrewsbury, most of my old school friends, some of whom I'd not seen since I was eighteen, nearly four years ago now, were there with their partners, girlfriends or fianc\u00e9e's. I spent the early part of the evening being congratulated on my recovery, my head spinning from the number of people who apparently held me in high regard, to judge from their warm welcome and hugs.\n\nTeruko looked particularly delicious in nude seamed stockings and a tiny black sequined Bodycon dress that showed off every curve and contour, and contrasted beautifully with her glossy dark golden hair and pale, creamy complexion. She was concerned that I not overtire myself, so we didn't dance much, opting instead to spend the evening chatting and reminiscing with old friends about school days and the various escapades and scrapes we'd managed to land in. Harry and Sai Fong were there as well, of course, most of our friends capturing her for one dance each, still lusting after her after all this time, much to Harry's amusement, and hers. Teruko politely refused all requests for a dance, and I asked her why.\n\n\"I am with you, it would not be...proper, and I do not want to dance with anyone, only with husband!\"\n\nI grinned at that, pulling her a little closer.\n\n\"Aren't you worried someone will find out about us, that they might guess the truth?\"\n\nTeruko looked at me oddly.\n\n\"Not ashamed of what we do, I not care if anyone know about us; I am wife, you are husband, there is nothing more to say!\"\n\nAfter that, there was only one possible thing I could do; I led her out onto the dance floor, and held her tight as we danced to a slow, romantic number. After a while, I began to notice the other occupants of the dance floor were giving us small, knowing smiles and nudging their partners. I leaned down to kiss her ear and whisper in it.\n\n\"Baby girl, I think our secret's out!\"\n\nTeruko looked around, then smiled back at me.\n\n\"I think you right, Jakku san!\"\n\nWith that, she hugged herself closer to me, holding me tightly as we danced, my world shrinking down to only her, the smell of her perfume, the music weaving around her as she swayed, and the feel of her as I held her close to me. When the number as over, we threaded our way back to our table, my friends and schoolmates gently patting me on the arm or shoulder as we passed them, nothing in their eyes or expressions except understanding and acceptance of us.\n\nAnd then it happened.\n\nAs I was pulling out Teruko's chair for her, somebody buffeted me between my shoulder-blades, nearly sending me flying. I staggered forward, nearly falling onto her, her expression startled as I teetered before recovering to turn and see who'd done that to me.\n\n\"Hello Cameron, looking a bit scrawny there, been ill, have we?\"\n\nIt was 'Slimy' Fineman, looking very smug and pleased with himself.\n\n\"Don't look so tough now, do we, eh, Jackie-boy?\" he smirked, reaching out to prod me in the chest hard enough to make me stagger.\n\n\"You want to hit me again, Cameron? Go ahead, this time I'm ready for you, and when you've done your pathetic best, I'm going put you down on your arse and spend some quality time with that chink sister of yours! She looks just slutty enough for me, I bet she's really filthy, so here's what I'm going to do; I'm going to find out, and while I'm having my fun, you'll be too busy bleeding to stop me; who knows, maybe I'll even put you back to sleep again! Go on, Jackie-boy, take your best fucking shot!\"\n\nThat statement was the final proof that Slimy truly was afflicted with weapons-grade stupidity; I actually saw red as pure rage boiled up inside me, and Slimy must have sensed it because he took a step backwards, fear flashing across his eyes, right into the arms of Andy 'Eggy' Edgeworth, 250 pounds of muscle and a brain like a steel trap, and the finest Prop-Forward to ever lead the British Lions out against Australia, the Springboks, and the All-Blacks. As he effortlessly held the struggling Slimy, Andy looked at me, a grin creasing his craggy face as he held him off the ground by the scruff of his neck.\n\n\"Say the word, Jackie, or just nod, and I'll snap his neck for you; it would be a pleasure, believe me!\"\n\nI made to speak, and Teruko put her hand on my chest, silencing me.\n\n\"No Jakku san, now it my turn. Please to say nothing!\"\n\nI looked at her as she faced Slimy, her chin held up proudly as she looked into his eyes, her eyes glowing like banked coals.\n\n\"What you going to tell people, that Jakku san love me and I love him? Go, do it, I not care, Jakku san not care. This what I think of you!\"\n\nWith that she turned and slid her arms around my neck, her lips suddenly against mine as she kissed me deeply, her tongue probing between my lips, my arms crushing her to me as we kissed for a few seconds, or hours on end, I couldn't tell. As she kissed me, a soft collective sigh went up around us as everyone realised what was finally being confirmed here in full view of all of them. Finally she broke our kiss to turn to Slimy once again.\n\n\"Now what you do? No-one care what you say about Jakku san, no-one care what you say about me, I not care, nothing you say can harm me, or Jakku san. You are sad man, you have no-one to love you, so you try to harm; why you not see you only harm self? Everyone here have someone, where is someone for you? You try and hurt, and so you are alone, and you will be alone until you learn to be different person. I very sad for you; you try to hurt me, and it not work, now you have nothing. Go away, there is nothing here for you, and it is your fault!\"\n\nAndy shook Slimy like a terrier shaking a rat.\n\n\"Come on, you, we're going outside to have a talk!\" he growled, Slimy turning the colour of old yoghurt as he looked around and saw nothing but cold anger on every face in sight, no friends, no allies, not a single friendly face. He turned Slimy around, preparing to drag him out, when a tall dark-haired girl stepped up to him, her pretty face grim and her eyes hard as agates.\n\n\"Jack Fineman, you are a despicable shit, a coward, and a disgusting piece of work. Happy New Year from everyone!\" and with that, she slapped him hard, a real zinger, her face a study in disgusted anger as his head snapped round from the force of the slap. A cheer went up as Andy hustled him out, ably assisted by a couple of my friends, the girl turning to me and grinning as she shook her hand to ease the stinging. I was struggling to place her, she looked familiar, then suddenly it dawned on me who she was; Eggy's sister, of course! I hadn't seen her since 5th Form Prize Day, when I was 16, so she would have been 14 or so; she'd certainly grown since then!\n\n\"Hello Jack, it's good to see you again! I'm sorry about that, I couldn't resist it; he's such a repulsive little shit!\"\n\nTeruko looked enquiringly at me, so I introduced her, stumbling a little over her name, Linda, as I hadn't seen her in almost six years. Just then, Andy came up, a satisfied grin on his face.",
        "\"All done and dusted, Jack! Don't worry, I didn't hurt him, I just stuffed him in a cab, and reminded him that I knew where he lived, and all his grubby little hang-outs, and if he tried his tricks again on anyone I'd shove him head down in the river and watch him blow bubbles until he ran out of them! I don't think he'll be back; tonight he finally ran out of whatever lingering friendship or sympathy anyone might have had for him. We're done with Slimy Fineman! I just feel sorry for his parents; they're good people, I can't imagine where he gets it from...\"\n\nAndy and his sister, and Harry and Sai Fong sat down with us, all of us chatting about what had happened, and what Andy thought of our relationship; the answer I got surprised me, although it really shouldn't have.\n\n\"Jack, you've been crazy about Teruko for years, the whole school knew it, it was so bloody obvious to everyone; you remember my younger brother, Freddy? He told me about the word you put out about her. It pissed him off no end; the scrawny little squirt actually thought he was in with a chance! Of course, no-one was going to chance anything, not with Scary Jack Cameron standing guard over her! Besides, you're not as alone as you think...\"\n\nA light went on inside my head, so I innocently asked Linda who she was there with, watching as she blushingly locked eyes with her brother, Andy nodding slightly. Bingo!\n\n\"Actually, Jack, about that...\" she hedged, smiling shyly as Andy took her hand, looking me directly in the eyes.\n\n\"Linda and I are...together, Jack, we have been for a year now. That's why I didn't say anything about you and Teruko; we're in the exact same situation, and we couldn't be happier! Mum and dad know, but so far they haven't said anything; to be honest, I don't think they ever will; they're so rarely on the same planet as the rest of us that when they do come up for air they don't even register what's going on around them. Just between you and me, I think they took one too many hits of the old Maui Wowie back the days of Flower-Power! I think Freddy was hoping he and Linda would...you know, but she chose me, and here we are!\"\n\nHarry grinned and excused himself, returning with a tray of drinks so we could toast each other for the New Year. At midnight we all sang 'Auld Lang Syne' and indulged in a frenzy of balloon-popping, backslapping and wailing party-blowers. Harry was originally supposed to be taking us home, but he'd had a couple of drinks, so Sai Fong took the wheel. We could tell Harry never drank; he was fast asleep by the time we arrived back at the house, not even 10 minutes away from the hotel, so we helped him indoors, walked him upstairs and dropped him on the bed in the guest bedroom before having one last nightcap and retiring for the night.\n\nI wasn't in the least bit tired; I'd really done nothing except dance with Teruko a couple of times, and the feel of her moving against me had been playing hob with my hormones all evening. It would be true to say that I had a major woody by the time I managed to decoy her into the bedroom (without too much effort, I had to admit...)\n\nAs soon as I had her behind closed doors I pounced, clamping my mouth on hers as I wrestled my trousers down over my unruly erection with one hand and unzipped her dress with the other, panting in my eagerness to get her naked all over again. Teruko pulled away from me and stepped back, pulling her dress down over her hips, her nipples dancing as she shimmied her dress down past her hips and onto the floor. Aside from her seamed stocking, teetering heels, and teeny-weeny little panties she was naked, the sight of her stiffening me even further, almost painfully so; wearing those four-inch heels made her legs look impossibly long and sleek, and all I wanted was to feel those firm rounded thighs wrapped around me as I pounded into her.\n\nShe definitely seemed to feel the same way, waiting until I was fully naked before walking me backwards until my knees contacted the bed, causing me to sit down hurriedly. As though on cue, she climbed astride me, taking hold of my throbbing cock and slowly rubbing it back and forth across her dripping wet pussy, coating the head in her honeyed syrup. When she judged I was ready, she slowly sat down on my lap, sliding me into her tight wetness, her pussy clasping me in its hot succulence as I slowly slid into her. Teruko was in control here, and as she draped her arms around my neck, and kissed me long and deep, she slowly, agonisingly slowly, humped herself up and down on me, her pussy alternately squeezing and releasing me as she did so. I held onto her lovely firm, globular buttocks, enjoying the feel of her gluteal muscles flexing as she slid up and down on me, concentrating on feeling her warm silky flesh as a distraction from the sweet suction as her strong pussy muscles squeezed, rippled, and massage me inside her.\n\nNow she urged me to lie down, she still clamping her lips hungrily to mine as she followed me down, my hands still holding tightly by her taut arse. She sat up and smiled down at me, her long, silky hair forming a shimmering golden veil as she hung her head down, concentrating on rocking and gyrating her hips, still squeezing me as she pumped back and forth faster now, her face flushing as her orgasm approached. I relinquished my hold on her beautiful arse to hold and squeeze those firm, protuberant breasts and lightly pinch and squeeze her stiffly engorged pink nipples as she rode me ever nearer to her fulfilment.\n\nHer movements became faster, wilder, her breath catching as a flush spread down her neck and suffused her chest, her nipples seemingly even stiffer and fatter.\n\nShe came with a with a loud, hissing scream, her pussy convulsed and clamped down on me so tight I literally couldn't move, the rippling finally pushing me over the edge, as her orgasm rocketed around and through her, my spunk pulsing into her as she ground and pushed herself against me, rolling her orgasm on and on as she rubbed her engorged clitoris against me.\n\nAt last she slumped down on me, her pussy twitching around my still hard cock, my own flood finally reduced to a sticky trickle as I blurred-out, barely able to move in the aftermath of the intense, shattering climax she'd brought me to. At last, she slowly, groggily sat up, her gentle smile widening into an amused grin as she saw me spread-eagled, looking like a starfish at low tide, too buggered to move, but with a look of happy concussion pasted on my face. With a little encouragement from her, I managed at last to ooze my way up the bed and under the covers, where I collapsed and lay like a dead thing, fucked to a complete standstill by my beautiful kid sister.\n\n*\n\nTeruko and I stayed another week, letting the weather settle down a little, but we had to leave eventually; I was worried about the flat, our things, living as we did in an area not over-policed at the best of times, and eventually mum conceded that I was well enough to travel down without her shepherding us. I was relieved, not because I was embarrassed by having my mother driving me around at my age, but because I didn't want her driving the 200 or so miles back from London alone, in the dead of winter; even though there was no snow to speak of just now, the weather could turn nasty at the drop of a hat; the temperature was worryingly low, and black ice on the motorways was an invisible killer. I could never let my mum out in that, I'd never be able to live with myself if anything happened to her, and Teruko felt exactly the same. Between us we convinced her that Grandad's Isuzu Trooper was safe; it was the best kind of car for the road conditions, but to put her mind at ease, we'd take it down in easy stages; besides, there were two of us to share the driving, and we promised we'd stop every hour so we could rest.\n\nWe left early the following morning to give ourselves daylight all the way back to Lewisham; at this time of year, it could be full dark by 3.30 p.m., so the earlier we got away the better, and we'd come home again soon, anyway; I was still on the binnacle list, and Teruko didn't re-start university until March, so we had plenty of free time; as soon as the weather got better, we'd come back up to drop Grandad's car off, Teruko driving my Frontera, as she was used to it, and me following in the Trooper.\n\nWhen we arrived back at the flat, we discovered Harry and Sai Fong had already been there ahead of us, turning on the heating, the fridge and the hot water heater, and leaving fresh bread, eggs, sausages and bacon, milk, tea and coffee, and a bowl of fruit on the table. They'd locked up and posted the keys through the letterbox, and Sai had very thoughtfully piled the bed linens and quilts on the bed, so we made up the bed, then I made myself a coffee and brewed a pot of green tea for Teruko as we settled back into our own little home away from home, the place where we had first acknowledged who we were and what we meant to each other.\n\nLife soon settled into a kind of normal again. I had numerous appointments to meet with Mr. Hunter at the national Hospital, who'd apparently been my surgeon and specialist while I was comatose. He was fascinated by my recovery, and the circumstances leading up to it, and we spent most of my appointment s discussing what had happened, and how the brain works, a subject he admitted vast ignorance about. Also, as I was still significantly underweight for my height, and still had a tendency to fall over in a light breeze, he put me in touch with the hospital dietician and several consultations with the physiotherapists, setting me a target weight and date, and slowly getting me used to physical exercise again.\n\nFinally, a week before Teruko was due to restart at uni, he pronounced me as fit as I could be, given the circumstances, and signed me over to the tender mercies of No. 3 Field Hospital Assessment Unit preparatory to taking me of the sick-list and putting me back on active deployment in my role as an Engineering Project Manager. From then on, it was down to the Civil Service to prove me unfit for work, which of course they couldn't, and so, with a sigh of relief, I was back at my job, another major milestone passed.\n\nMy first day back at work was an endless cavalcade of people stopping by to welcome me back, to enquire about my health, and to wish me well. The apprentices at Donnington sent me a gift, a Mk.VII helmet made of polished stainless steel with a note attached to the effect that I should probably wear it in future when walking through Lewisham, just in case anyone wanted to shoot me in the head again...\n\nAnd so life went on; I soon fell back into the routine of my job, splitting my time between Woolwich, Donnington and Abbey Wood, picking up the threads and strands of my work-life, very quickly burying myself in the complexities of keeping Britain's armoured capability up-to-date and available for our armed forces. Teruko re-started university in March, and our life together became one of simple, happy domesticity. There was no question that one day I would marry this girl, but not until she'd finished university; she wanted to graduate, and I wanted her to as well, so we had three years to save, make plans, and fall even more deeply in love.\n\n*\n\nTeruko, mum, Grandad and I were there the day Harry and Sai Fong married, in the beautiful Wren Church in Ludgate in the City of London; Teruko was Sai's single bridesmaid, and I acted as Usher, while Harry's grandfather was Best Man. It was a short, traditional ceremony, as was ours three months later. Teruko and I married in St. Chad's, a beautiful round church on Claremont Bank, in Shrewsbury. Harry was my Best Man, Sai was Maid of Honour, and Grandad gave her away. Again, we opted for the simple, traditional service. All my school friends were there, Andy and Linda proudly showing us her engagement ring, and we held a reception at another hotel in the centre of town. I had a special surprise for Teruko, part of my wedding gift to her.\n\nThe reception was a gift from mum and Grandad, as was the cake and flowers, and I was nearly bursting with pride as I led my lovely bride out to dance with her for the first time as husband and wife for real; she'd been calling me husband for so long, now it was real, official, and true, and my heart was nearly bursting with love and longing for this beautiful girl who'd given me so much. As we danced, the room faded away until there was only her, holding me forever, her eyes like huge dark embers, love and happiness welling up in them; I'd brought her here after heart-breaking tragedy, made her part of my family, and now she was mine for real, forever, sister no longer, now she was my wife, the owner of my heart and soul.\n\nAfter we'd circled the dance floor, people began filtering on, gradually filling the floor, even mum, dancing with Harry's dad, and Grandad flirting with the girl he was dancing with, having a great time. As our friends danced, I pulled Teruko to one side, and took out an envelope from my breast pocket, handing it to her.\n\n\"What this, my husband?\" she smiled.\n\n\"Open it, go on, I think you'll like it!\" I urged her.\n\nTeruko tore open the envelope and gasped. Inside was two First-Class round-trip tickets to Japan; her parents were long gone, but they still loomed large in her life, and now was the time for her to return to them, and for me to pay my respects.\n\nShe turned to me with tears in her eyes.\n\n\"Thank you, my husband, thank you, this best thing you do for me! Now I can ask mother and father for blessings too! Thank you, my husband!\"\n\nMum had elected to drive Grandad home to Oswestry, and stay there for the night, giving Teruko and me the house to ourselves on our wedding night. When we arrived home I carried her over the threshold; even though it wasn't our house, it was still our home, and it felt right doing it this way. I swore to myself that one day I would carry her over the threshold like this of our very own house.\n\nOnce we were indoors, she took off her veil that she'd put back on for the journey home, folding it carefully and laying it across the back of mum's recliner chair , then took my hand, smiling naughtily at me.\n\n\"Husband come with me now; we are husband and wife, and this our wedding night. Come, Jakku san, you have much to do!\"\n\nI followed her up stairs to our room, seeing how mum had cleared the room of everything and had scattered rose petals over the bed, the subtle scent complementing Teruko's own special, almost subliminal scent, that complex that identified her immediately to me.\n\n\"Please to help...!\" she smiled, reaching for the back of her wedding dress, and of course I was there; this was one gift I was more than capable of unwrapping myself!\n\nI slid the zipper down, and unhooked the little hook-and-eye fastener, watching her as she slid the dress down; as she did I caught my breath; she was wearing a tight dark-blue Basque holding up white stockings, with a miniscule blue thong over the top, barely concealing the lips of her pussy. She stepped out of the multitude of crisp white petticoats and lifted the dress off the floor, to slide it onto the hanger I wordlessly handed her. I took the dress from her and put it on the dressing rail, and turned back to admire her. She truly was an awesome sight, her long legs accentuated by her heels and the high sides of her thong panties, the crown of hair piled on her head further adding to her height.\n\n\"Husband help me...?\" she smiled, indicating the back of the Basque, but I wasn't going to, not yet; I was still ogling the perfection that was Teruko Cameron, my wife.\n\nI gathered her into my arms, her arms going around my neck to pull herself up as I dipped down to kiss her, our lips meeting in the perfect kiss, all my heart and love and longing for her expressing itself in that one gesture. As we kissed I could feel her slowly grinding herself against me, the feel of her almost unbearable after the enforced separation tradition demanded; I wanted her so badly I could taste it, my need and lust for her flaming up inside me.\n\nTeruko was obviously feeling the same way, rhythmically shoving and grinding her mound against my cock as I pulled her to me by her stunning backside, my hands squeezing and separating the firm globes as I kissed her wildly, passionately, all rational thought or reason flown out the window as the need for her flared even higher.\n\n\"Help...me...!\" croaked Teruko, her voice thick with need, and I responded in a fumbling flurry of unhooking and unsnapping, getting that wonderful lingerie creation off my wife so I could feast on her nakedness once more. Teruko meanwhile was busily unbuttoning my formal shirt and collar, popping out studs and unhooking my trousers, stripping me as I stripped her, until I was naked. She still had that tiny wisp of a thong around her perfect hips, but I wanted to peel that off slowly, not yank it off.\n\nTeruko sat on the bed and held her arms out to me, calling me to her. She reached out and took hold of my cock, squeezing me as I flexed involuntarily, before dipping he head down to slide her lips over the end, her mouth almost unbearably hot and moist. I was having a very difficult time not coming there and then, and doing polyphase equations wasn't going to help, not this time, so I backed away, seeing the look of surprise on her face, knowing as she did that this was one of my favourite things.\n\n\"Not like this, baby, not tonight!\" I gasped, a slow smile spreading across her face. She slid back up along the bad and patted it, inviting me, and as I climbed onto the bed she turned to face me.\n\n\"Husband know what tonight mean, yes?\" she smiled. I must have looked a little puzzled, as she leaned over to tap the tip of my nose gently with her little pink forefinger.\n\n\"This wedding night; tonight we supposed to make a baby. Is husband ready to make babies with me?\"\n\nThat did it for me. With an inarticulate growl I grabbed her, pulling her close as I slid that wisp of string and lace off her, my cock throbbing with the need to have her. When I rubbed her labia, my fingers were slicked with her juices; apparently she was as ready for me as I was for her. As we kissed I rolled her into her back, her legs parting as I slid between them; there was no need for foreplay; we were both keyed-up by a day of anticipation of this moment. Teruko broke our kiss to smile and rub noses with me.\n\n\"Make love to me, husband, make baby in me tonight!\"\n\nI slowly thrust forward, Teruko lifting her hips to meet me as I penetrated her, my cock harder than it had ever been, the thought of finally making love to my wife on our wedding night more aphrodisiac than any Rhino Horn or other mumbo jumbo could ever be. Her hot, slick pussy was tight and glorious, the feeling of finally being in her after waiting for what felt like forever, but had in actuality only been a few days, almost beyond description. As I pushed further into her, she pushed herself back at me, meeting my thrusts in perfect counterpoint. And so we thrust and pumped at each other, not having sex, not screwing, not fucking, we were making love, on our wedding night, in our marriage bed. Tonight I was making love to my wife for the first time, and praying I was making a baby in her, the one thing I wanted above all other things.\n\nWe were too highly keyed to last for long; the emotional charge of this, our lovemaking, was pushing our arousal to beyond any limits we'd ever explored before; as Teruko began to gasp and thrash underneath me in the throes of orgasm, as mine hit me too, making me groan out load as pulse after pulse of sperm jetted out of me, bathing her insides with my seed, hopefully accomplishing its purpose this time and planting itself inside her. At the feel of me exploding inside her, Teruko screamed as her orgasm peaked, jolting and crashing through her, the walls of her pussy rippling and squeezing as she milked me, more and stronger jets of sperm erupting from me as we convulsed together again in mutual orgasm, our bodies stiffly melded together as we pleasured ourselves.",
        "At last we came down from that peak, our bodies plastered in sweat as we lay together, hearts hammering from our exertions; I'd never come like that before, like my heart had exploded and poured into her. Teruko was obviously feeling it too, a small tear in the corners of her eyes as she slowly calmed down, the adrenaline shock slowly dissipating. Eventually she turned to smile sleepily at me, kissing me gently on the corner of my mouth.\n\n\"Thank you my husband, I think Jakku san and I made baby tonight! Thank you, I love you very much, my husband, my Onii-san!\"\n\nEPILOGUE.\n\nIt was a strange feeling to be standing here in the Uriwari Memorial Park in Osaka, at the memorial to my father and his wife; even though he'd been the mainstay of my education, he'd never been a part of my life; part of the blame for that lay with me, of course; I'd never made any effort to form any kind of relationship with him, and then had come the news that I would never be able to. His death had brought Teruko into my life and my family, putting something there that had been missing; if mum was the heart of our family, then Teruko was its soul, the glue that had held us together. Now she'd brought me here full circle to meet them properly. She had wept, of course; I would have felt that there was something wrong with her if she hadn't, but then she'd taken my left hand in hers, putting both our hands on their memorial stone so they could see and feel our wedding rings and know we were joined in a bond of love. She'd murmured a polite greeting to her parents, then placed an offering on their stone, before turning away to bury her face in my chest as she wept. I stroked her hair and reminded her that this was a joyful meeting, that she was here to introduce her husband to her parents, and to ask them to bless our union. She'd smiled at that, and led me away.\n\nThe rest of our trip was taken up with Tokyo; shopping on The Ginza, enjoying the view from our enormous room in the Shibuyan Tower Hotel, walking through the towering business and embassy district of Minato-Ku with its upper-echelon Sararimen and their ranks of high-powered sports cars, the noise and clatter of the Pachinko parlours on Shinjuku, eating teriyaki and drinking beer from Styrofoam cups while watching the weirdo's and outrageous fashionista's with their Anim\u00e9-inspired costumes lounging around and posing in Harajujku, visiting the Nippon Budokan in Kitanomaru Park, and having an uneasy moment accompanying Teruko to the Yasukuni Shrine to pay her respects to her ancestors, knowing as I did that War Criminals were honoured there as well as the great and the good.\n\nThe last thing we did was return to Osaka so she could say farewell to her parents. Once there, again she left an offering, shedding a few tears, not crying sadly this time, more wistfully than anything. As she stood with her head bowed, a small butterfly, like an animated jewel, fluttered past her then circled in to make a landing directly on her outstretched finger. She looked at me, smiling happily.\n\n\"Look, my husband, parents are pleased, they have sent a sign. They are pleased I have married a good and kind man...and they send blessing for my child!\"\n\nI stared blankly, then suddenly realised what she was saying.\n\n\"Baby, do you mean...?\"\n\nTeruko smiled happily, her hand holding her stomach protectively.\n\n\"Jakku san, we will have baby one day soon, a strong son, I have wish for a strong son, to have your courage and heart, a son to be proud of, and carry your name proudly. Parents are pleased, and all is well, look, they have blessed me!\"\n\n*\n\nBack in England, more good news awaited us. Mum was overjoyed to hear she was having a grandchild, and Grandad was even more so. He took Teruko and me aside for a private chat.\n\n\"Jack, I used to wonder if you'd ever settle down, and with what kind of girl. You picked the right one there, she's everything you need, and she loves you more than you deserve, and I think it's about time you knew that! Your mother and I have been thinking about things while you were away, and we've come to decision. I'm getting too old to rattle around in that place by myself anymore, and to be honest, now that you're both married and gone, she's going to be even more alone. So I'm going to move in with her; she gets to look after me, I get to spend more time with my little girl again, and that house up in Oswestry, well, it's been in my family since 1767, and it would have gone to you one day anyway, but I'm signing it over to you and Teruko now. I can't look after it anymore, and I know Teruko loves the house, the grounds, and especially her chickens; there's space there for as many children as you can manage, and it needs a family to live there and love it as much as I do; you and Teruko, and that baby and all the others will do that, I know.\"\n\nI couldn't speak for the huge lump in my throat, but Teruko wordlessly hugged him and kissed his cheek, thanking him and showing him how much she loved him.\n\n*\n\nSo that's my story; I transferred from Woolwich to Donnington, just a little way down the road from Shrewsbury, and Teruko and I now live 20 minutes drive from mum, so they spend most of their days together, mum fussing over her as her pregnancy progresses, Grandad still doting on her, and me watching her blossom from girl to woman to mother. I have the best family in the world, and the best friends a man could ask for. Sai is also pregnant, so she and Teruko have their own little pregnant-female Freemasonry thing going; Harry and I avoid them when they're together, as we can't possibly win.\n\nAnd they're both having boys! Harry and Sai are going to be our baby's Godparents, and Teruko and I will be Sai Fong's baby's Godparents; you're supposed to pick Godparents who will be a good influence on the child as they grow, well, I can't think of a better example of love, honesty, honour and commitment than Harry and Sai Fong; they'll be good for our son, I know that.\n\nEvery day I fall further and deeper in love with my Shining Girl, and every day I find a new and better way of telling her how much I love her. I'm truly, madly, deeply in love with her, and I love every second of it!\n\nSayonara!\n\n Author's Note: For those not familiar with my story worlds, Harry and Sai Fong's own story is told in 'All I Ever Wanted'. Harry and Sai also have cameo roles in 'In Love With Lori' Ch 7.2 along with Jack and Teruko, and Andy and Linda (Shining Girl Chapters 5 & 6) as guests at David and Lori's wedding."
    ],
    "authorname": "beachbum1958",
    "tags": [
        "japanese half-sister",
        "japan honeymoon",
        "amnesia",
        "anal sex",
        "anal incest",
        "marriage",
        "pregnant",
        "recovery",
        "japanese",
        "romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/shining-girl-ch-04"
}