{
    "title": "Love Your Readers: Categories",
    "pages": [
        "============================\n\nHelp Your Readers. Categorized Your Story Correctly.\n\nIn Love Your Readers, I wrote about things you do to improve the reading experience for your readers. In Love Your Readers: Categories, I'd like to share my ideas on making it easier for the readers to decide to give your stories a read, by placing it in the right category.\n\nIf you're new to Literotica, you might find it's a lot more complicated than you thought.\n\nThe information presented here has been culled from my personal writing, submission and reading, as well as numerous discussions over the last dozen years in the Author's Hangout. It seems like every few months, someone is asking how to choose a category for a complicated story.\n\nWeird Harold, coincidentally my very first editor, suggests using The Rule of Least Squick. A simple and easy to remember rule. Whichever element of your story is the least generally accepted, that's the category it probably should go in.\n\nOf course if I suggested that, I wouldn't have a How-To to write, would I?\n\nThanks to Darkniciad, for beta reading and some very insightful input. sr71plt's observations required major changes, thanks for his expertise. PatientLee has once again been kind enough to preview this, and helped make it better. SevenSquared's thread on Trump Categories was one of the most useful threads I found on the discussion. I'd also like to thank the management at Literotica, who provided some guidance and corrections. This is not an 'official' guide to categories, but I've tried hard to get as much authoritative input as possible.\n\n============================\n\nLet's face it. The readers here on Literotica have a lot to choose from. In a recent (9/6/2013) thread in the Author's Hangout, Laurel mentioned that the site was receiving 150-200 submissions a day! Wow, that's a lot of reading.\n\nSo the real question is, how do you get the reader to choose to read YOUR work. I believe you can influence that decision a lot, during your submission process.\n\nIn Love Your Readers, I provided some of my credentials, so you could understand why my ideas might bear some credence. I'll make it short this time.\n\n1) I'm currently the #3 'Favoritest' author<br>2) I have two 1,000,000 view stories<br>3) I have half a dozen, 500K view stories<br>4) I have five TopList #1 stories concurrently<br>5) I've had five other stories that have hit #1<br>6) I've been writing on here for 12 years<br>7) I've written 'HOT' stories in 14 different categories\n\nWhy does this matter? I'm not the best writer here, far from it. But I can get readers to check out my stories, readers who comment and vote. The Love Your Readers series is aimed at helping other authors do the same.\n\n* * * Title, Tags and Category * * *\n\nI mentioned in the How-To 'Love Your Readers' that there are 6 components to creating a story on Literotica.\n\n1) Story. The Content, the message you're trying to get across<br>2) Introduction and Postscript. A chance to talk about your story to the reader<br>3) Presentation. Using the spacing, italics, bold, breaks, quotes, etc.<br>4) Titles. Title and one line description to hook your reader<br>5) Tags. Key information about your story, to make it more searchable<br>6) Category. Information about what kind of story it is\n\nLove Your Readers covered the first three. The creation of the story. The remaining three are all about identifying your story for the readers.\n\nMost of the views for your story will occur in the first couple of days after your story is posted. That's the way it works, unless you're lucky enough to hit a home run.\n\nThat first day in particular, you are visible on the New Stories Page, and at the top of Category Hub page; people don't have to hunt for your stories. Also, while you're getting all those early reads, hopefully you're getting good comments, which will increase visibility on the Feedback page.\n\nSo there your story is, on a list that tens of thousands, possibly hundreds of thousands of people will see. That's right, Literotica has a HUGE readership, more than 2 Million unique views in a day recently. How do you make them choose to open your story, over all those others?\n\nThere are more than a quarter million stories on the website. You're competing with 55,000 other writers. So what's it gonna take?\n\nTitle, description and category. That's all you have to work with. That and your name, but we're going to leave that out of the equation for now. If you have good enough name recognition to get people to open your story for that sole reason, you don't need my help, and it doesn't much matter what you call your story.\n\nThat's maybe 250 writers on this site. This is for the other 99.5%.\n\nThese three items seem so simple, and are often no more than an afterthought by the author. That's unfortunate, because they can make or break your story. Each of these three are complex enough to deserve a chapter of their own. This chapter is all about the category.\n\n<br>* * * The Category * * *\n\nIn my list, I placed category last. The reason is, I think it's where you have the least room to be creative, and the greatest chance to make a mistake. What you write will, most of the time, clearly fit into one of the 38 categories Literotica uses. However, there are many pitfalls in choosing the wrong category, and I will try to address these.\n\nThe best discussion of this subject among the Authors in the Author's hangout is a thread called Trump Categories. I don't agree with much of it, but it was a good discussion, and covered much of what I considered to be the central issues in choosing a category. The thread is located at:\n\nhttp://forum.literotica.com/showthread.php?t=837141\n\nDarkniciad's observations on SevenSquared's initial 'Trump Categories' is the closest to what I've come up with so far. His first post in the thread is a must-read. Unless of course, you read this How-To.\n\nSo how do you choose your category?\n\n<br>Non-Standard Categories\n\nThere is a section on the index page called \"Special Sections\". It contains two categories we can skip, \"Author Chain Stories\" and \"Interactive Stories\". These have not been added to in over a decade, and there is no way to choose these during your submission. If you want to try your hand at one of these, you need to contact Laurel directly, through email or PM. For the purpose of this discussion, I'm going to ignore them.\n\n<br>Standard / Submittable Categories\n\nFrom your submission page, you have a choice of three types of submissions: Story, Poem or Illustration. That's all you have to choose from, and hopefully this first choice is easy. I'm going to work from simplest to most complex.\n\n<br>Illustrations<br>Let's start with the easy stuff. If what you have is primarily either an image or an illustrated story (Adult Comic), it goes here. There only two choices:\n\n1) Erotic Art. If it's one or more images without a story it goes here.\n\n2) Adult Comic. If it's an illustrated story, it's an Adult Comic\n\nPoetry<br>Four sub-categories, all self-explanatory.\n\n1) Poetry with Audio. If you write a poem, and attach an audio reading, it goes here.\n\n2) Illustrated Poetry. A poem with an illustration of any type goes here.\n\n3) Erotic Poetry. An erotic poem, without audio or illustration.\n\n4) Non-Erotic Poetry. Any other poem - PG-13, suitable for mainstream publishing.\n\nStory<br>The bread and butter of Literotica, where it gets tricky. When you write a story, it's essential that you get the category right. If you don't, at best, the category will get changed for you by the powers-that-be. At worst, you'll get hammered by the readers something fierce.\n\nThere are 32 categories of story. Pretty confusing. It's not that bad really. Around half of these take care of themselves. They are what I like to call the exempt categories. If your story is written for one of these categories, that's where it goes, no matter what other elements are contained within.\n\n<br>Exempt Categories\n\nExempt categories means you can put what you want in them, as long as they fit the category guidelines. These categories can have elements of any and all the other categories, and if you choose to make it fit an exempt category, that's where it goes. The exempt categories are:\n\n<br>1) How-To<br>2) Reviews & Essays<br>3) Celebrities<br>4) Illustrated<br>5) Chain Stories<br>6) Novel and Novellas<br>7) Humor and Satire<br>8) Text With Audio<br>9) Sci-Fi & Fantasy<br>10) Erotic Horror<br>11) Non-Human<br>12) Mind Control<br>13) Letter and Transcripts<br>14) Non-Erotic<br>15) Non-English\n\nHow-To: If your story explains 'how to' do something, and that is its sole purpose, put it in how-to. It doesn't matter what you're trying to explain, this is the category it belongs in. Most how-to's are sexual in nature, but obviously not all of them. Many of the most successful are about writing, particularly for Literotica.\n\nReview & Essays: Whether it's a review of a movie, story, album, play, book or any other artistic work, if that's what you've written, it goes in this category. If it's a personal essay, whatever the topic, same thing.\n\nCelebrities: If your story involves sex with a celebrity as a central theme, it belongs in the celebrity category. This includes famous characters in established fiction, not just real people. That's right, Captain Kirk, and Hermione belong in Celebrities. A celebrity cameo appearance can be successfully submitted under its main category, if it's non-sexual.\n\nIllustrated: Stories with accompanying illustrations go here. The only exception is if you write a story for a particular category, and submit the illustrations separately under Erotic Art. That's very rare.\n\nChain Stories: If you are writing part of a group Chain Story (for example, the recent FAWC competition), it belongs in this category. This should be obvious if you're doing it. Only a few Chain Stories are open at any time.\n\nNovels and Novellas: There are lots of very long stories within single or even multiple categories. It doesn't go here just because it's long. Novels and Novellas are a catch-all category, especially suited to stories that straddle a number of categories. The only complex stories you can't put here are Celebrities.\n\nHumor and Satire: It's your call. If you think it's humorous or satirical, you can place it here. Satires placed in their natural category will likely take a lot of crap, unless it's listed specifically as satire. Some readers have a hard time recognizing satire. There are lots of humorous stories placed in other categories. How about a little love for this one? Put it here, and make sure your preface and tags indicate the type of story it would be normally categorized as.\n\nText with Audio: If it's a recording, you're pretty much free to do what you want. It probably won't do well, unless you have a foreign accent and tell the women all the naughty things you're doing with them. Unless you have a sultry female voice and are telling the men the nasty things they're doing to you. Great category to build a very loyal following.\n\nSci-Fi & Fantasy: Imaginary settings from a mythological past or the far future should be placed here. It's the one place that Non-Human can go, other than it's specific category. Alien sex is definitely Non-Human, and belongs here. If you have Vampires and/or Lycanthropes, you may want to consider Non-Human instead.\n\nErotic Horror: A complex category. Romantic Non-Human can be squeezed into Non-human, for example, Vampire love stories, even if there are some horrific elements. Paranormal and Non-human non-consensual violence, as well as the standard human-on-human trauma, belong here. As long as, at its core, your story is Erotic Horror, pretty much anything else is permitted. Erotic Horror is NOT a catch-all for paranormal. Without the horror element, it probably belongs in Non-Human, or Non-Erotic.\n\nNon-Human: Mostly dominated by Vampires, Werewolves and Demons, stories with Gods, Angels and mythological creatures fit here as well. If it's elves and orcs, it probably should be fantasy. The most popular stores in this area are Beauty and the (non-human) Beast type. It's worth noting that if there is a mix of non-human, and mythological creatures, the Non-Human category probably has more understanding readers.\n\nMind Control: Stories where somebody is able to control someone else, whether it's through mental powers, a magical or technical device, or some other method, belong here. This rule has been ignored successfully on occasion but your best bet is to put it here, if you can make someone do what they don't want to, or wouldn't under normal circumstances. Incestual Mind Control stories have been successfully categorized as both Incest and Mind Control.\n\nLetters and Transcripts: This is all about the presentation. You can put what you want in it, as long as it's presented as a letter or letters, or as a transcript.\n\nNon-Erotic: Think PG-13. This category is a home for mainstream fiction, the kind of stuff you might read in a normal fiction magazine. If there is no sex in the story, and little or no erotic content, the standard Erotic categories do not apply. There are plenty of stories where there is no sex, but sex is central to the story, and they would be best placed in the closest appropriate category. If there's no sexual theme at all, put it in Non-Erotic. It's worth mentioning, Non-Erotic applies to the ENTIRE story. If you have a longer work, with multiple categories, and any of them are not non-erotic, none of them should be. This is not for chapters of a longer work which happen to not contain sex.\n\nNon-English:  This category has changed a lot over the years. The existing appearance is a legacy technical artifact. If you write in a language other than English, choose the language in the LANGUAGE dropdown, then choose the proper category. The same category rules apply.\n\n<br>Trump Categories\n\nAfter the exempt categories, there is a hierarchy of certain story elements. It's important to understand, that there are some categories that 'trump' other categories. That is, if your story has elements of that category, that's where it should go. Many of these are self-evident. Some are not. The only issue that might arise is when you have multiple trump categories. In general, these have been in order, from the highest to lowest trump.\n\nLet me make one thing very clear. If your story is in an exempt category, none of the rest of this matters. However, if you have any of the 'Trump' category elements in your story, you'd probably do well to mention it in the preface and tags, no matter how you categorize it.\n\nThere are two categories that are site trumps. That means if you have this content in your story, and you don't categorize it as such, the powers-that-be will either re-categorize it for you, or reject it. This is a Literotica site policy, and you'd do well to remember it.\n\nNumber one 'trump' category? Incest\n\nIf your story has incest in it, put it in incest. If you don't it will probably be moved there anyway. Passing reference to incest, or uncomfortably close familial relationships without actual penetrative sex may get overlooked. You'd still be wise to warn your readers in the introduction. Even Gay and Lesbian sex that is among family members, is an incest story. Again, if you do have these types of activities, you should mention it in your forward.\n\nNumber two 'trump' category: Non-Consent/Reluctance\n\nIf the consent is slightly ambiguous, you might get away with it, particularly blackmail, but you're chancing rough feedback. Anything questionable, and you need to place it in this category. It doesn't matter who's involved, as long as it isn't family (trumped), a celebrity or non-human (exempt). Extreme Non-Consent, such as violent rape, probably won't even make the cut. Literotica is flexible, but not THAT flexible.\n\n<br>After the two 'Site Trumps' there are four categories that trump others, but not to an absolute extent. You can get away with putting this stuff in another category and the site won't object, but your readers very well may. It's important to remember that erotica readers surf by category and content of stories, and their interests are much more specific than when reading non-erotic fiction. Your readers do NOT like surprises. If your sweet loving romance suddenly turns into a toilet session, do everyone a favor, and put it in Fetish with a tag of Romance, and not the reverse.\n\nNumber three 'trump' category: Gay Male\n\nAfter numerous discussions, and input from some of the greats in this category, I've found it the most difficult to categorize hierarchically. It seems, that counter to even the professed Literotica 'absolute' trumps, Gay Male can, and has, trumped all other categories on occasion.\n\nIf there's Male on Male action, in any detail, then if it's not in the above two categories, you're probably better off placing it in Gay Male. If it's in one of the previous categories, you should mention it in the tags and introduction. This rules if far from absolute, and that's why it's a in the 'soft' trump group. An MMF threesome, in context, that involves male play in the Group Category can remain there, provided there is also hetero play. Forced MM as part of a revenge may survive in a Loving Wives categorized story, as long as that's not the central theme. As you can see, as we work our way down the Trump categories, things get less absolute. Incest stories that are strictly male-on-male, will likely be categorized as Gay Male. It's the one clear exception to the Incest Trump.\n\nBisexual males have a hard time on Literotica. You would think they'd be more prevalent, since the scenario is so popular with female readers. Bisexual males end up in the Gay Male category for the most part. They can often survive in the Group Sex and Romance categories, as long as it's not the central theme.\n\nI'll get a lot of disagreement on this one, including from the readers. There are those who believe any contact between males means it should be categorized as Gay Male. Touchy subject, and I don't write in this category (at least not so far) so I could be wrong, but I've read enough in the other categories to see this showing up there successfully, without hijacking the comments.\n\nNumber four 'trump' category: BDSM\n\nIf your story has more than a hint of BDSM, it belongs in this category. We're talking bondage, domination, submission, punishment, in a mutually agreed to scenario. If you don't put it there, and it's not moved there, you'll definitely hear from the readers, and it won't be pretty. This doesn't necessarily include things like spanking, or light bondage sessions that are not the central theme of the story. The BDSM crowd are very big on the consensual aspect of this category. If your story action morphs into NonConsent, put it there.\n\nFifth 'trump' category: Transsexuals & Crossdressers\n\nThis is a partial 'trump' category. Crossdressing may well make it under another category, and often shows up in fetish, but Transsexual elements should place your story in this category. Depending on your readers, some may believe this story element trumps all others, but according to site policy, the Incest and NonCon categories are the only hard trumps.\n\nTransgender with a male, is most often categorized as Transsexual & Crossdresser, and not as Gay Male, further blurring the lines. If the category was Transsexual only, it would trump Gay Male. Futanari stories can be placed in either this category, or Sci-Fi & Fantasy.",
        "Final 'trump' category: Fetish\n\nFeet, panties, food and other kinky things. The catch-all category of kinkiness. Beyond what the category description says, golden showers, scat, CFNM (clothed female, nude male), cuckolding, pegging, pregnancy, spanking, cum-play, lactation, and forced chastity, are some of the more popular kinks explored here. It's worth noting a lot of crossdressing ends up here, when it's part of marital high jinks, instead of in Transsexuals & Crossdressers, which leans strongly toward TS. Because fetish stories often have a very high 'squick' factor, offending many readers, you may want to consider placing your story here if it contains less 'mainstream' elements. This category would be the highest 'Trump' category, if it didn't cover such a broad spectrum of Kink. Let's just say that many of the 'kinks' are Trump kinks, and if you have them, you'll want to categorize your story as fetish.\n\nAs Darkniciad said in his post on the subject, if you have a gay cross-dresser blackmail his brother for sex then you're pretty much screwed. No matter where you put it, the majority of the readership is going to hate it.\n\n<br>Normal Categories\n\nOnce you've gotten past the exempt and trump categories, what you have left is what I consider the normal categories. Normal categories basically address the central theme of your story. Elements of normal categories can often be found in other stories, with no adverse effect. It's more a case of what you consider the theme to be.\n\nBefore you go too far, it's worth noting that there is an element to a few of these that I call the 'Picky Readers'. Picky Readers often have ideas of what these stories should contain, and where these elements should be categorized. They tend to be very vocal about it. They vote low, and vote often.\n\nThe most egregious of these categories is Loving Wives. Loving Wives stories have morphed over the years, and there are definite 'packs' of readers who have very strong opinions about what a loving wife story is.\n\nLoving Wives: Loving wives stories tend have 8 to 10 basic themes. Discussing the Loving Wives reader is worth a How-To of its own. There are two types of Loving Wives stories where many readers will insist the story is mis-categorized.\n\n1) Willing Cuckold Stories: A large number of the Loving Wives Readers will scream this is a fetish and should be categorized as such. It's up to the author, but cuckold stories in Loving Wives get terrible scores and comments nowadays. It wasn't always this way. Now they do significantly better in the Fetish category.\n\n2) Black 'Master' Stories: If a black man, seduces and uses a white woman, she can't get enough of his huge black cock, and the husband is made into a wimp, many readers will insist this should be in interracial. It's worth noting a LOT of Loving Wives stories involve a white wife cheating with a black male. Most of the time it's not a big deal unless it meets the specific elements listed above\n\nLesbian Sex: Another type of story with Picky Readers is the Lesbian Sex story. Lesbian sex is usually welcome in almost all categories. FFM is a staple of Group Sex. However, if you place it in the Lesbian Sex category, there had better not be anything but Lesbian Sex in it, or there are some vocal readers who will quickly inform you how you've sinned.\n\n<br>The remaining Normal Categories are:\n\nAnal - The butt, and nothing but. Stories where the principal focus is anal sex. Perhaps that should be more specific, heterosexual anal sex. First time anal sex is very popular here.\n\nExhibitionist & Voyeur - Watching and being watched. Not a lot to say about this one. Public nudity is a big winner here, along with secret voyeurism.\n\nFirst Time - Memories & stories of people's first times. Cherry popping, and de-virginizing the nerds play well. Longer pursuit and capture stories score high.\n\nGroup Sex - Orgies, swingers, and others. Orgies and swingers are only a small part of this category. Threesomes, polyamory, teen harem, partner swapping, and gangbangs make up a lot of this category. Slut-wife gangbangs are more likely to appear under the Loving Wives categories.\n\nInterracial Love - It's all black & white, and white & Asian, and... Most of this category is Black on White. Black women, white men romantic stories do very well in this category. A few authors have expanded the category to Vampires and/or Werewolves and normals, two different races, although most of those are correctly listed as Non-Human.\n\nMature - May / December lust and love affairs. Not much to say here. Young lover, often college age, with a mature, older mentor. Seduction could go either way, and it doesn't seem to matter if the mature person is male or female. A loving relationship by two mature characters, may also be found in this category, and may do better here than in Erotic Couplings. These are usually heterosexual relationships, or should be categorized as Gay Male or Lesbian Sex.\n\nToys & Masturbation - Battery-operated, vegetables, etc. Stories where the focus is on masturbation, to the exclusion of sex. This could be self masturbation, or teasing manually and with toys. Fucking machines and devices like the Sybian are also very popular.\n\n<br>The last two categories to review each have special situations associated with them.\n\nRomance - Candlelight, wine and a soft kiss. Romance can be a catch-all category, where a lot of the other elements are overlooked in a long story of love and seduction, chase and capture. In general, these are longer, plot-driven stories where the final result is a monogamous relationship. Sex is not nearly as important as plot. Many of the better stories on the site can be found in this category.\n\nErotic Couplings - Wild one-on-one consensual sex. Short vignettes, and a category to try when little else seems to fit. This seems to often be a catch-all category.\n\n<br>* * * The Summary and Last Words * * *\n\nTo summarize, the following order of categories should be considered:\n\nExempt Categories:\n\n1) How-To<br>2) Reviews & Essays<br>3) Celebrities<br>4) Illustrated<br>5) Chain Stories<br>6) Novel and Novellas<br>7) Humor and Satire<br>8) Text With Audio<br>9) Sci-Fi & Fantasy<br>10) Erotic Horror<br>11) Non-Human<br>12) Mind Control<br>13) Letter and Transcripts<br>14) Non-Erotic<br>15) Non-English\n\nAbsolute Trump Categories:\n\n16) Incest<br>17) NonConsent/Reluctance\n\n'Soft' Trump Categories:\n\n18) Gay Male<br>19) BDSM<br>20) Transsexuals & Crossdressers<br>21) Fetish\n\nNormal Categories:\n\n22) Loving Wives<br>23) Lesbian Sex<br>24) Anal<br>25) Exhibitionist & Voyeur<br>26) First Time<br>27) Group Sex<br>28) Interracial Love<br>29) Mature<br>30) Toys & Masturbation<br>31) Romance<br>32) Erotic-Couplings\n\n<br>All of this is conjecture and opinion on my part. There is only one definitive rule about story categorization, and that's Literotica has the last call. What I've outlined here is based on years of reading and writing, receiving a lot of pointed comments, and numerous discussions in the Author's Hangout over in the forums.\n\nIn addition, the complexity is exasperated by the amount of any one off-theme subject, within a story that is dominated by another theme, or has multiple 'squick' elements. There is no absolute rule, and every rule I've laid out has plenty of exceptions on the site. If you're really in a quandary, my only suggestion is going back to Weird Harold's \"Rule of Least Squick.\" That or ask around in the Author's Hangout. Finally, I've heard of people asking in the comments for Literotica to choose the category, when they're really stuck.\n\n===================\n\nI hope this will be of help to my fellow writers, and I'd love to hear other opinions, particularly by those who have a lot of expertise reading and writing in one particular category.\n\nRemember, the main purpose here is to find the right category, which will help your readers find the stories they want to read, and who should be your intended audience.\n\nTx Tall Tales "
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "writing",
        "categories",
        "trump",
        "squick",
        "publishing",
        "readers"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/love-your-readers-categories"
}