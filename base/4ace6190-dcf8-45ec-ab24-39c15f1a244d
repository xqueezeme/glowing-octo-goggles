{
    "title": "Forever Again Ch. 07",
    "pages": [
        "Author's Note: This story depicts graphic lesbian sex, female masturbation, lactation, vampirism and mind control. If these topics do not interest you or are prohibited in your area please back out now.\n\nThis is the seventh installment of a long story. Those that have read my other stories will know that I tend to have some story behind the sex so if you're looking for a quickie this story may not be to your liking. \n\nFor those of you that haven't backed out, I hope you will enjoy my words.\n\n~CD\n\nChapter Seven\n\nThe Mistress\n\nVala moaned loudly as Inga thrust her pelvis against her. The petite gypsy's sex, slippery with her arousal, glided easily against Vala sending waves of hot pleasure rolling through both of them. They were sex to sex, legs interlaced, both holding themselves up with their hands so they could look into each other's eyes as their passions built. \n\nThe dark haired gypsy girl's dusky skin gleamed with sweat from her exertions and the heat pouring of the blazing fire in the hearth only a few feet away. Through a haze of bliss Vala admired the girl's strong, slender body and pretty face. Vala loved the way Inga's dark complexion contrasted her own pale skin. By the expert was Inga moved her lithe young body, Vala found it amazing to think that only a few short weeks ago the young woman had never had a sexual relationship with anyone. \n\n\"You're such a fast learner.\" Vala said between moans. \"\"Before me, you... you were a virgin.\" \n\nInga smiled wickedly without losing her rhythm. \"You gave me a reason...\" she sucked in a breath and closed her eyes for a moment as she fought to reign in her rising passions, wishing to prolong their pleasure, \"... a reason to learn fast.\" She reached down and caressed one of Vala's breasts for a minute, giving her nipple a tweak. \"Now come for me Vala. Please... I want... to watch.\" \n\n\"Yes, we both want to watch.\" Said another voice behind Vala, startling her. She thought the two of them were alone. Before she could even turn around she felt strong hand slip around her to fondle her full breasts. \n\nShe turned her head to see Else's mousy brown curls looking down at her from only a handbreadth way. \"You're lovely when you're in rapture.\" Else smirked playfully. Her fingers gripped Vala's nipples and gave them a firm rolling twist that made Vala cry out. Else leaned in and gave Vala a long, sucking kiss on the side of her neck. \n\n\"I want Inga to... to go with... me.\" Vala panted to them both. \n\n\"Oh no, Vala.\" Else chided her. \"I think you should give Inga and me a show.\" She sidled around Vala, moving to the side and letting her hand roam over Vala's breasts some more. \"Doesn't that sound lovely Inga?\" \n\nVala let out a little cry of frustration as she felt Inga pull back and sit up. Her need was raging and she was so close to her release. \"Don't stop. I need it! I'm... I'm so close.\" She gasped. \n\n\"She's quite demanding, isn't she?\" Else teased as she moved over to Inga, giving her a playful kiss on the neck that quickly turned into a passionate embrace as the petite gypsy moved to return the kiss. \n\nVala's need for release was only driven higher by the sight of her lovers locked in a passionate embrace. The slim, dark Inga in stark contrast to the pale, heavily breasted, voluptuous figure of Else. \n\nDimly Vala recognized that there was something wrong about what was happening before her eyes. Something about Else and Inga being together didn't seem right somehow but she couldn't seem to put her thoughts together in any kind of order that made sense. Her head was too fogged with lust to concentrate on anything except the heat between her legs. Her hand wandered to her own breast, toying with her nipple and the thought slipped away. \n\n\"Please...\" Vala moaned. \"I need you.\"\n\nInga and Else stopped their kissing and looked over at her, both smiling wickedly. \n\n\"Look how desperate she looks.\" Inga teased. \n\n\"Perhaps she should just finish herself if she needs it so badly.\" Else snickered. \n\nVala's need was now turning into irritation. She knew how to solve this little teasing game they were playing once and for all. She put all her will into her voice and commanded them. \"Come to me.\" She said, her voice thick with her enchanted power. \n\nThey laughed at her. \n\nVala stared, thunderstruck. Why didn't that work? \n\n\"Look at her!\" Else laughed. \"Poor Vala can't command us anymore. Her magic is gone.\" \n\nGone? Vala thought, panic rising in her chest. Was it really gone?\n\nInga leaned in close to Vala and kissed her cheek before whispering in her ear. \"Well, not really gone.\" She said as if reading Vala's thoughts. \"We have your power now.\" \n\nA ripple of shock went through Vala. No, it couldn't be. They couldn't just take her power, that wasn't possible. They were wrong. She just had to try harder, to put more power into her command. She concentrated and then opened her eyes, ready to command them. Her eyes fell on Else, the young mother and her heavy, milk filled breasts. Vala almost moaned as she recalled how wonderful Else's milk tasted on that day by the pond. She said the first thing that came to her mind. \"Come over her Else, I want to taste your milk again.\" \n\nAfter a moment of hesitation, Else moved slowly over to Vala and as if in a trance, cupped her huge breasts and lifted them to Vala's face. \"You want to drink my milk?\" She whispered seductively.\n\n\"Yes.\" Vala leaned in a wrapped her lips around Else's large, pale pink nipple. She sucked and felt the hot, sweet liquid flood into her mouth. She moaned with both pleasure and relief knowing that her power hadn't deserted her. \n\n\"Do you like that Vala?\" Inga asked, coming in close as if to watch. She placed her hand at the nape of Vala's neck, holding her to Else's breast, encouraging her to drink more. \n\nVala could only moan. \n\n\"Well, if you like breast milk so much, maybe you should be making your own.\" Inga whispered in her ear. \n\nVala's heart almost froze as Inga's words registered. It wasn't just her words that made Vala stop. It was the quality of the words. It was the same enchanted power that she had used on them. She let go of Else's nipple with a wet pop as she turned and looked into Inga's dark, glittering eyes. \n\n\"No.\" She breathed. \n\nInga's smile was the triumphant look of a predator that had just cornered its prey and was about to start toying with it. \"Yes.\" \n\nVala turned and looked up at Else and saw the same predatory look in her large, brown eyes. \"Do you like milk, my Pet?\" \n\nThe question was thick with power and Vala felt herself answering without thinking. \"Yes.\" \n\nElse smiled broadly, \"Well them perhaps you should try it out yourself. You should start to milk, my Pet.\" \n\n\"Milk?\" Vala whispered. \n\n\"Yes, start milking my Pet. Just like I do. Start now.\" Else hissed, her voice thick with power. \n\n\"Noooo...\" Vala moaned as she felt heat bloom in her chest. She fell back to the floor and groaned as searing rapture built quickly in her nipples and started spreading down to the rest of her breasts in little waves. \n\n\"Yes my Pet. Soon you'll be just like me.\" Else crouched down next to Vala and whispered in her ear, giving her a lick. \"I know how much you enjoyed my milk that day by the pond. I know when you touch yourself you think of me and how much you want to taste me again. Now, you'll be able to see how wonderful it felt for me as well.\" She lowered her own breast to Vala's lips. \"Now drink from me, my Pet.\" \n\nWithout thought, Vala's lips wrapped around Else's large nipple and she started to suckle, eagerly drinking in the sweet, hot milk. Her pleasure only increased as the silky liquid flowed over her tongue and heat burned through her chest. She felt as if her skin on her chest was becoming tight while her nipples felt puffy and swollen. \n\n\"Touch yourself, my Love.\" Inga said softly in her other ear. Her words were thick and sweet, just like Else's. Just like hers used to be. Vala's hands obeyed even without her thought, her fingers dipping eagerly into her hot, needy sex. She cried out.\n\n\"Give yourself to the feelings.\" Else cooed. \"Give yourself freely to us. You are ours now, my Pet. You can't resist us and we will remake you however we want. Just like you did to us. Give yourself over to your new Mistresses.\" \n\nMistresses? Vala thought in a haze. Yes, they are my Mistresses now and I am their Pet. Their obedient little Pet. She moaned. \n\nHeat continued to burn in Vala's chest and she moaned louder. With every breath she took her breasts felt heavier and fuller. She looked down and gasped. Her breasts had swelled dramatically in the last few minutes. They were now nearly as large as Else's massive mounts. Her nipples had also gotten larger and much darker. Her areolas were nearly the size of her palm now and her nipples were as large as the tip of her thumb. \n\n\"How do you like them now, my Pet?\" Else asked wickedly. Not waiting for an answer, she pinched one of Vala's huge nipples at it's base and pulled outward. \n\nVala cried out as rapture flowed through her mind while hot, creamy milk, her milk, spurted from her nipple in a long white streams. On the other side, Inga's fingers found her other nipple now and together they started pulling rhythmically on her, drawing her milk and making her cry out with rapture. Vala had never imagined how wonderful the sensation of having her nipples used in this way could be. Her breasts had a tingling tightness that seemed to start at their base and radiate upwards towards her nipples with each pull. Hot streams of sweet milk spurted at every pull from Else and Inga, arching into the air to rain back onto her and her new Mistresses. \n\nRapture coursed through her body as her own fingers continued to work in her sex. First one finger, then two now three fingers pumped quickly in and out of her needy center. Her thumb found her clit and she shrieked. The jolt of pleasure making her milk flow even more freely. \n\nShe felt Else and Inga release her nipples and she looked at them, whimpering with need. They were both covered with a fine spray of her milk. It ran down their faces and bodies in dozens of small white rivulets. Vala watched enraptured as they leaned over her and started licking the milk of each other's faces and bodies.\n\nVala could feel her own climax approaching quickly and she suddenly felt a desperate need to have them suckle her nipples. More than anything she wanted to feel their lips wrapped around her big nipples, sucking her into their hot, wet mouths, drawing out her milk as she climaxed. \"Drink from me.\" She gasped. \"Please!\" \n\nAs one they turned and stared down at her. She was shocked to see that their eyes were now glowing a dull, blood red. In unison they smiled, their lips pulling back to reveal a pair of long, cruel, gleaming white fangs in each beautiful mouth. \n\n\"She wants us to drink form her.\" Inga hissed. \n\nA part of Vala knew she should have felt fear at the sight of the monstrous fangs and glowing eyes of her Mistresses but oddly she didn't. The only thing she felt beyond the surprise was the incredible need for release between her legs and in her chest. Her climax was now so close her mind simply couldn't think of anything else. She could only moan and whimper incoherently. Her fingers were a blur in her sex and the milk was now flowing freely from her nipples like twin fountains. \n\nHer new Mistresses leaned in and wrapped their lips slowly, ever so slowly around her aching nipples and started to suckle. Pleasure exploded in Vala's body seemingly everywhere at once. A shriek was ripped from her throat as her body bucked and writhed under the relentless onslaught of rapture. Wave after wave of ecstasy washed through her as she climaxed over and over again until she thought she would lose her mind. Time lost all meaning as her entire world became centered on her nipples and her sex. \n\nShe felt the lips pull back from her breasts and managed to open her eyes, looking up just in time to see Else and Inga kissing their way up her breasts towards her neck. Each small kiss sent a tingling rush through Vala and she thrust her huge breasts out, offering them to her Mistresses. One at a time they each kissed her deeply on the lips. Vala could taste her milk on their tongues and she moaned into their open mouths. \n\n\"Are you ready, my Pet?\" Else hissed as Inga continued to kiss her. \n\n\"Yes.\" Vala mumbled through the kiss and her haze or rapture. She didn't know what they were planning but she didn't care. They were her Mistresses now and she would do whatever they wanted. She belonged to them. \n\nAs one they smiled, their gleaming white fangs bared, lust burning in their glowing red eyes. \n\nVala's sex contracted again as another climax started. She felt lips, cool and soft pressing against her neck as they kissed her, one on each side. Ecstasy burned through her veins as an incredible orgasm raged inside her, she opened her mouth to cry out again. As she did she felt the soft kisses turn instantly to unimaginable pain as both women sank their long, cruel fangs deep into her neck. \n\nVala screamed. \n\n* * *\n\nVala sat bolt upright in bed, the scream still on her lips, ringing through her small chamber. She looked around wildly but Else and Inga were nowhere to be seen. Rather, Branwen and Greta were looking at her with wide, terrified eyes. \n\n\"What is wrong Mistress?\" They both asked in unison.\n\n\"Are you alright? Are you ill?\" Branwen said, coming closer and looking into Vala's eyes. Her hands, soft and warm, came up and cupped Vala's cheeks, forcing Vala to look into her brilliant green eyes. \"Mistress?\" Her voice and her hands were shaking.\n\nVala took a long, shuddering breath and slowly let it out. A dream, it had only been a dream. She looked down at her body and with relief saw that her breasts looked as they always did. There was no milk and her nipples were still small and pink. She sighed. Just a dream. \n\nTaking another deep breath to calm her racing heart, she realized that her sex was dripping wet and as her panic continued to subside she became aware of the warm, heady pulse of an afterglow seeping through her veins. Her eyes slid closed and she sighed with pleasure. After a minute the glow started to fade and she opened her eyes again and forced a small smile for the twins benefit. \"I'm ok.\" She said, her voice sounded horse and her throat felt tight.\n\nBranwen settled back a little but didn't release Vala. \"You're sure?' \n\nVala kissed her on the forehead tenderly. \"Yes, yes, I'm fine now. It was just a dream. That's all.\" She leaned over and kissed the frightened Greta as well. \"I'm ok.\" \n\nHer mind started to come fully back to reality and Vala now became aware that both twins were before her completely nude, their slim bodies less than an arm's length away. \n\nWith a supreme force of will she pushed the thought of the pleasures they could give her out of her mind and turned, getting out of bed. \"Come my lovelies. It's a busy day today and we all have duties to attend to.\" \n\n* * *\n\nExactly at sundown a bell sounded three times. With a resounding boom, the two door wardens pulled open the huge ornate double door to the grand banquet hall. Slowly the hundreds of guests dressed in all their finery entered the room and began milling around. The musicians stared playing and the servants started preparations for dinner.\n\nFrom a balcony overlooking the main floor, Vala stood with the Steward and surveyed the scene.\n\n\"You've done very well Vala, exceptionally well really. The Baroness and I are quite impressed with you.\" The Steward said as she placed a hand on the railing.\n\n\"Thank you Milady.\" Vala said with a small curtsey. Somehow she managed to suppress a girlish grin.\n\nThe Steward looked over at her and smiled knowingly. \"It's alright if you smile. It was a compliment, it's alright if you're happy about it.\"\n\nVala beamed. \"Yes Milady.\"\n\nThe Steward turned back to the crowd. \"Everything has been planned out and everyone knows their duties. Your job is completed. Now why don't you go enjoy yourself.\"\n\nEyes widening, Vala stepped back. \"Me? Oh, no Milady, I couldn't. Those are Lords and Ladies down there.\" Vala looked down at the floor. \"I'm not... I just couldn't...\"\n\n\"Nonsense.\" The Steward interrupted her. \"If you're going to have my job someday you will need to learn to deal with the pompous fools down there.\" She gestured at the dance floor with a dismissive gesture.\n\n\"I... Milady?\" Vala was a bit shocked by her attitude towards the gentry.\n\nThe Steward gave Vala a sidelong glance then looked back to the main floor. The barest hint of a derisive smile played at the corners of her mouth as she surveyed the gentry milling about below them. \"Surprised by my lack of deference? Well you will find out on your own soon enough what they are all really like.\" She made another dismissive gesture. \"Self important fools, the lot of them. More concerned with what wine they will be having with dinner and whether or not someone else has more expensive jewelry on than them than they are with managing the welfare of the peoples have been entrusted to watch over. There are only a handful, a small handful mind you, that have any real skill for leadership. They only have their positions because they were born into it.\" The Steward straightened and face Vala, looking her directly in the eye. \"It is people like you and I Vala, people like us that make this all possible. We make it happen.\" She pointed down at the floor again. \"You're a very remarkable young woman Vala. Not a single Lord or Lady down on the floor can hold a candle to your talents. Remember that.\"\n\nVala studied the milling throng for a few moments in silence before asking, \"What of the Baroness?\"\n\nThe Steward raised her eyebrows and smiled, \"Yes, the Baroness von Wolffe. I think that you'll find her to be something a bit different from that lot. She is a very astute woman in her way. She alone of all the people in this room has my complete respect.\" The Steward smiled, \"And perhaps you as well.\"\n\nVala blushed, \"Thank you Milady.\" She took a deep breath trying in vain to calm her nerves. \"Well then, I suppose I should go make myself known.\" \n\nWith a grimace the Steward sighed. \"Yes, I suppose we both should. Come, I won't make you face the wolves alone on your first time out.\" \n\n* * *\n\nThe next few hours passed in a blur for Vala. She met dozens of Lords and Ladies dressed in the very finest of gowns. Vala had never imagined that so much gold and so many gems even existed in the world, let alone had been fashioned into jewelry.\n\nSome of the Lords and Ladies were cool to her, most were at least civil and a few were actually genuinely pleasant. Vala was mildly amused to find that the Lords that were the most agreeable to her spent the majority of their time addressing her breasts and not her face.\n\nSeveral times during the course of the evening some Lord or Nobleman would find a place to quietly give her what a few months ago Vala would have considered a scandalous proposal. Vala now found that while the implied sexual innuendo no longer bothered her, in fact it somewhat amused her, the thought of being with a man now had no appeal for her at all. If fact the very idea of it repulsed her but she thought she managed to control her reactions and politely demurred.\n\nHowever, when one of the fine Ladies made a similar, perhaps if anything even more explicit proposal to Vala she found it much harder to demurely decline. Vala was sure that the older but still quite beautiful woman saw the flush of heat in her cheeks at the suggestion of what she would do to Vala if she were to join her in her chambers after the banquet was concluded. Vala only hoped the woman took the reddening of her cheeks as embarrassment and not the flush of hot desire that it really was.",
        "Thankfully at that moment the bell that signaled the start of the banquet sounded giving Vala an excuse to escape before lust won out over good sense. \n\nVala was heading towards the one of the exits when the Steward caught her arm. \"Where do you think you are going?\" She pointed ahead. \"Come with me.\" She made her way through the crowd and up to the head table.\n\nVala stared at the table uncomprehendingly.\n\n\"There.\" The Steward said pointing at an open chair quite near the head of the table. \n\n\"But I can't...\"\n\n\"The Baroness insists.\" The Steward said simply, pointing again at the empty chair.\n\n\"But... the Head Table?\" Vala asked.\n\n\"Yes. As I said, the Baroness insists. She will be here shortly and wishes to have you at the table with her.\" The Steward smiled, \"I believe she wishes to reward you for a job well done. She is quite pleased I assure you.\" She leaned in close and whispered, \"And don't worry, I'll be right next to you.\" \n\nJust as Vala and the Steward were getting into their seats a trumpet's loud clarion call filled the chamber. The Herald announced loudly, \"Ladies and Gentlemen, Lords and Ladies, your hostess for the evening, the Baroness von Wolffe.\"\n\nAt the far end of the room Vala could see a woman enter the chamber through the main doors. The Baroness was tall and slender with a regal bearing that carried even across the great distance between them. Unlike all the other ladies in the room whose dresses were various shades of color from bright red to pale blue, the Baroness dress was coal black, perfectly matching her black hair. Her skin was pale and seemed all the more pale against her brilliant red lips.\n\nA prickling familiarity began to climb up Vala's spine as the woman came closer and she could see her better. When the Baroness had closed to within one hundred paces cold sweat broke out across Vala' brow and down her spine. She became lightheaded and the room started to spin around her. It was at that moment that the Baroness locked eyes with her.\n\n\"Mistress.\" She breathed as the woman continued to walk steadily closer. \n\nThe Baroness closed the last few paces and stopped before the head table, never looking away from Vala.\n\nVala's mind reeled. She couldn't move, couldn't breathe, and couldn't even think at that moment. Her entire world became the Baronesses beautiful face looking down at her. Her Mistress was here before her. As she stared breathlessly she saw a sparkle of amusement deep in the Mistress's grey eyes and heard that blissfully sweet voice pour through her mind, \"Yes, my Valamera, your Mistress is here for you now, for tonight and every night from now on, forever.\" \n\nVala's mind only dimly realized that the Baroness had not spoken aloud, that she had somehow spoken directly into Vala's thoughts. A ghost of a smile played at the corners of the Baroness's luscious red lips. At last she broke the intimate, secret connection and turned to face the crowd. \"Lords and Ladies, thank you so much for sharing in my hospitality...\"\n\nThe voice was as smooth and beautiful as Vala had remembered from her dreams. The words purred through her mind but she didn't comprehend what was being said. It was as if her mind was drenched in thick, sweet syrup. Everything was a slowly drifting miasma around her. She couldn't make her mind work. She didn't want to make her mind work. She could only stare at the woman before her and drink in her unearthly beauty. \n\nThe Baroness finished her welcoming speech and walked around the table, stopping behind the Steward and Vala. She looked down at Vala and smiled. \"So, this is the young woman I've been hearing so much about.\"\n\n\"Yes My Lady.\" The Steward said formally. \"Baroness, may I present my new assistant, Vala Strauss. Vala, meet your employer, the Baroness von Wolffe.\"\n\nVala stared at the Baroness dazedly, unable to remember how to speak.\n\nThe Baroness reached out a hand and gently touched Vala's cheek. The contact was like an electric shock. Instantly Vala came back to her senses and gasped. \"Mistress...\" Vala felt herself blush furiously as soon as the word slipped past her lips and she quickly corrected herself, \"My Lady, it's an... an honor to meet you.\" She stammered trying to collect her wits. \n\nThe Baroness smiled knowingly. \"Yes, I'm sure it is.\" Around them, everything went quiet as if they were suddenly alone in the room. Vala could see out of the corner of her eye that beside them the Steward was frozen in place as if turned to stone. Glancing to the side she could see that the same was true for all the guests in the room. The only two that even seemed to still be alive were Vala and her Mistress. It was like a moment frozen in time for only the two of them.\n\nReaching up, the Baroness, her Mistress, touched a finger to the nape of Vala's neck exactly where she had bitten her the night before in her dream. Pleasure flowed instantly through Vala's veins and she barely managed to suppress a moan. The Baroness leaned in close and whispered in Vala's ear, \"I look forward to seeing more of you very soon. Much, much more my Valamera.\" She gave Vala's ear a sensual lick. Then kissed her cheek before straightening.\n\nVala closed her eyes and sucked in a ragged breath as time abruptly resumed and the world snapped back into focus around her. The Baroness was turning away and the Steward was saying something in Vala's ear. With an effort she brought her attention back to the Steward.\n\n\"She seems quite pleased with you.\" Said the Steward as she sat down. If she had noticed anything odd in the last few moments she gave no indication. She also seemed not to notice Vala's flustered state or if she did she didn't mention it. \n\nDazedly, Vala sat as well. She wondered if that had really just happened. It seemed like a dream.\n\nThe rest of the meal was much like a dream for Vala as well. The Baroness was polite and cordial to everyone, even warm to some of her guests. But she seemed especially attentive to Vala, going so far as to ask her opinion on various issues several times throughout the meal much to Vala's embarrassment.\n\nWhen the meal was finally ended the Baroness rose and started to leave. She stopped by Vala and paused. \"Please come by my chamber when you leave the party. I have something I wish to discuss with you.\" She smiled at Vala, nodded to the Steward and left.\n\nVala's head reeled. She now knew the truth of it all. Everything that had been happening to her over the last months... years? It had all been real. The woman in her dreams was real, and she had just met her. And the woman wanted to see more of her. It didn't take any great leap of imagination to picture just what the Baroness wanted from her. Vala wondered if perhaps last night's dream hadn't been a dream after all. The Baroness could very well have been in her chambers last night.\n\nHer hand again rose to the side of her neck where her Mistress had bitten her in her dreams. The skin tingled hotly at her touch. Yes, Vala thought, it had been real, not just a dream. Her Mistress had really been with her already, maybe more than once?\n\nVala belatedly realized that she was already making her way through the crowd of people towards the grand stairway at the center of the keep. The massive stone stairs curved upward in a long, graceful arc towards the third floor. From there three more stairways, less ornate than this one led up to the Baronesses private chambers.\n\nAnother thought occurred to Vala and now that she thought about it she wondered why a bit nervously why she hadn't really worried about it before now. Had her Mistress really bitten her? Why would she do that? Perhaps it was some way of marking her as a possession? \n\nOr maybe she hadn't really been bitten at all, her overtaxed mind tried to rationalize. There was no mark on her neck after all. Shouldn't there be a wound or at least a scar? Vala didn't know. \n\nBefore Vala could sort through her confused thoughts she found herself standing before the massive double door that led to the Baronesses private chambers. The tall narrow doors were a gleaming polished oak with heavy brass straps and hinges that were buffed to a mirrored shine. In the center of each door was an elaborate brass knocker in the shape of a hissing snake. Vala studied one the snakes for a moment, feeling strongly drawn to it for some reason. The snake's gleaming ruby eyes seemed to stare back at her, drawing her in. Her hand lifted slowly towards the snake, her fingertip just caressing the cold metal when there was a loud metallic clang from the door that made her jump.\n\nThe heavy doors swung inward revealing a large, elegant parlor. Two young women, both extraordinarily beautiful, were each holding a door handle. In union they smiled and bowed deeply. \"Good evening Miss.\" they both said.\n\nVala stared in amazement at the girl holding the left door. She was completely unlike any woman Vala had ever seen. Her skin was the color of rich earth and her curly hair was even darker. She had wide dark eyes, a broad nose and full lips painted a deep, reddish brown.\n\n\"I... I... uh...\" Vala stammered.\n\n\"The Mistress is expecting you.\" Said the other girl, drawing Vala's attention.\n\nShe looked to the other girl. She was a bit older, maybe in her mid twenties and half a head taller than Vala. She had light auburn hair with hazel eyes. \"I, uh, yes, she asked me to come see her.\" Vala said dumbly.\n\n\"Yes, she said you would be. She is in the inner chambers. If you would please follow me.\" The taller girl turned and headed towards the back of the room. There Vala found herself before another great oaken door, this one only slightly smaller than the outer door. \"My name is Odele and she is Lotte. Please let either of us know if you require anything.\" She pulled the door open and gestured Vala in.\n\n\"Thank you.\" Vala said with a small nod. She turned and slowly walked into the inner chambers. The room beyond was unlighted and Vala walked cautiously. For several heartbeats she stood on a long, narrow slice of light that gleamed in from the parlor she had just left, then Odele closed the door and Vala was plunged into total darkness. She had a sense that she was in a vast chamber but her eyes still saw nothing. Then, gradually her eyes adjusted and Vala found that the chamber wasn't completely dark. She began to pick out a few details. The room was indeed vast. It was a circular chamber with a very high ceiling. The only light in the room was star and moonlight coming in through a series of tall narrow windows around the top of the walls, far overhead. The ceiling beyond was shrouded in shadows.\n\n\"Welcome to my sanctuary my Dear.\" A familiar voice purred from the darkness.\n\n\"Mistress.\" Vala breathed. Her heart thundered in her chest and her breathing was coming in a quick pant. It was just like in her dreams. The words coming to her from the darkness, calling to her, seeping into her very soul. She felt light headed imagining... no, not imagining... knowing what was coming next. A puff of air on her ear confirmed her thoughts.\n\n\"Yes my Valamera. I'm so pleased you know who I am. I have looked so long for you my Valamera. So very, very long.\" The words, spoken right at her ear, flowed through her mind like warm honey, thick and sweet. \"Lifetimes, many long lifetimes I have spent alone, so alone, yearning for your return so we could once again be together.\"\n\n\"Lifetimes? My... my soul?\" Vala stammered not understanding.\n\n\"Yes my Valamera.\" Her Mistress's voice came from farther away now. Vala tried to follow her movements in the darkness. She could hear the clicking footfalls on the polished stone floor but the way the sounds echoed made it impossible to tell which direction they originated from.\n\n\"Lifetimes.\" Her Mistress went on. \"Many, almost countless mortal lifetimes have come and gone before me. You see my Valamera, I am not like others, not at all like these mortal beings. I have been given a great gift by my Mistress, my Goddess. She has granted me a boon for my loyalty. A great gift. Indeed the greatest gift any being could receive,\" She paused, \"The gift of eternity.\" The voice came closer, \"And my greatest wish was to share that eternity with you. But the fates conspired against me and I lost you many, many years ago. But now through the blessings of the fates and by the hand of my Goddess you have returned to me finally.\"\n\n\"I don't understand.\" Vala said into the darkness, not really sure if she should be questioning her Mistress but feeling confused. \"Lifetimes? But how can that be? I have lived only nineteen summers. I cannot be the one you have sought...\"\n\n\"Ah, but you are, my Valamera.\" The Mistress interrupted her, now from farther away. \"Not you in your current form of course, not in this earthly shell, but in another vessel. Many others in fact over the ages.\" The voice came closer to Vala once again. \"You see, your soul is an old soul. It has been born and reborn countless times through the centuries.\" The voice came closer still. \"Have you ever had a glimpse of one of your past lives my Valamera? Just a glimpse of who you were in another time, another place? Perhaps when you were lying awake late at night, perhaps in a dream? A brief instant of thought, of knowledge, that you are more than you are now?\"\n\nVisions of her dreams flashed through Vala's mind. Was that what she had seen in her dreams? Other lives? Past lives? The room spun slightly around her. \"I... I don't really know. Perhaps...\" She trailed off trying to call the memories back but they were too ethereal to grasp, flitting away like leaves in an autumn breeze. There was a long pause from her Mistress and Vala wondered if perhaps she had said the wrong thing. She opened her mouth to say more but was interrupted. \n\n\"If you haven't yet, you will. In time you will understand, you will come to see who you were,\" she paused, \"and who you really are, my Valamera.\"\n\n\"Why do you call me by that name?\"\n\n\"That is who you are to me, Vala Strauss. You are and always will be, Valamera. That is who you were when we first met those ages ago, that is who you were when I stole your heart and that is who you were when you stole my heart in return. That is who you were on the day that you were ripped from my arms and perished in the sea. And that, Vala Strauss, is who you have been every night in my dreams for over a thousand years.\"\n\nVala was trembling at these revelations. She couldn't believe that any of this was real but somehow in her heart, she knew it was true... all of it. All the separate, jumbled pieces of her life, the dreams, the deaths of her suitors, her changing sexual inclinations, her newfound powers, her new position, it all fell into place in her mind, each part interlocking neatly with the others. She wasn't girl she always thought she was, and yet somehow that was exactly who she really was. It was all a part of her. \n\nTaking a deep breath, Vala managed to work up enough courage to ask, \"Who are you really?\"\n\nThere was a soft, almost demure chuckle at Vala's ear. \"Why I am the Baroness von Wolffe of course. That is all I am now. Who I was is no longer important. Whoever that person was is now long ages dead, along with all the others I was thought to be over the years.\"\n\nA shiver ran down Vala's spine as a finger tip suddenly caressed the tender skin just under her ear.\n\n\"But all that is past my Valamera. What really matters now is that you've finally come to me, and now... now...\"\n\nVala gasped as lips, soft and cool, kissed the side of her neck.\n\n\"... Now we can be together...\"\n\nThe gasp turned into a small moan as the lips moved up and started to worry the tender skin behind her earl.\n\n\"... together...\" another kiss, another nibble, \"... forever.\"\n\n\"Mistressss...\" Vala hissed.\n\nStrong hands wrapped around Vala's middle and pulled her gently back. Vala's head spun as she felt a firm, strong body press up against her. It was all really happening but somehow she still couldn't believe it. It was just like the dreams but this time it was real. It was finally real.\n\nThe wet, suckling kisses ignited a fire in Vala's center and she moaned with a desperate need that seemed to come from the depths of her soul. A vast hollow emptiness at the very center of her being that she didn't even realize was there now started to fill.\n\nHands, immensely strong but infinitely tender caressed her body. Moving slowly, the hands gradually, torturously slid up to cup her breasts through the heavy velvet of her gown and the unforgiving stays of her corset. \n\nWhimpering with a desperate yearning, Vala cursed the inflexible garments that kept her from feeling the caress of her Mistress. \"Please.\" She whispered. \n\nA quite laugh answered her plea. \"Please what?\" The caressing hands became firmer in their attention to Vala's chest. \n\n\"Please Mistress, I need you.\" \n\n\"You need me?\" The voice gently mocked. The hands released her for a moments and Vala almost cried but before she could there was a quick sensation of something running up her spine. She felt her dress become loose and without thinking she shrugged her arms forward allowing the heavy gown to slip down, pooling around her feed. Another movement and the corset loosened, letting her breasts drop and allowing her to suck in a full breath of cool air. \n\nBefore Vala could shrug the corset off the Mistress was back behind her. The hands slid easily under the now loose garment and caressed her sensitive mounds. \"You need me?\" The Mistress said again. \"I think what you really need is this...\" The strong fingers wrapped around her nipples and Vala cried out in delight. \n\n\"Yesss...\" Vala groaned. \n\nOne hand released her nipple and slid down Vala's firm stomach, coming to rest just above her petticoats. The Mistress purred in her ear, \"Or perhaps this is what you really need?\" The hand dipped under the waistband, just touching the soft curls below. \"Well, my Valamera?\"\n\n\"Mistressss...\" Vala hissed. \"Please. I've waited so... so long.\" \n\nAnother laugh as the hand worked lower, deeper into the fine, curly hairs, stroking the mount beneath lovingly. \"You have waited so long? I have waited fifteen centuries my Pet. Can you even comprehend that much time?\" Her question was mocking as she teased Vala's aching center. She continued to tease Vala for a few long, torturous seconds before answering her own question, \"No, you can't comprehend that much time, no mortal can.\" She kissed Vala's neck again, gently nipping the skin, making Vala tremble. \"But soon you will...\" With the pad of one finger she pushed softly on Vala's sensitive nub, making her cry out. \n\nVala's knees wanted to buckle but the hand around her chest held her up. The well inside her was filling more rapidly now and what little control Vala still had was slipping away. She was getting the sense that her Mistress wanted something from her but her delirious mind couldn't place it. The finger between her legs was slipping deeper now, tracing along her outer folds making her moan with bliss. Vala knew that if she was entered she wouldn't be able to restrain her climax.\n\nThe darkness in the room seemed to swell, absorbing all the light until Vala stood in complete, suffocating blackness. The hands withdrew again and just as quickly as her gown and corset had been removed, now her petticoats and underthings were removed as well. Instinctively Vala stepped out of the clothes piled around her ankles and stood nude save her shoes and jewelry in the cool, dark chamber before her Mistress. She shivered in anticipation of the event she had dreamed of for so long. She turned to look for the other woman but the darkness was total, she could not see anything. \"Mistress?\"\n\nA rustle of cloth to her side, then another. Vala turned to see two eyes, glowing red staring into her very soul. ",
        "Vala gasped \"Mistress?\" She tried to take a step back but was rooted by the red eyes.\n\n\"Yes my Valamera.\" The voice came from the eyes. They came closer, unblinking, moving slowly finally stopping only a breath away. \n\nThe darkness around them was all consuming. Vala could see nothing except those hypnotic, blood red eyes piercing her soul. \n\n\"What do you want my Valamera?\" \n\n\"You.\" \n\nThe eyes finally blinked then said, \"No, what do you need.\" The Mistress's voice purred deliciously, seductively through Vala. \"What does your soul desire?\" \n\nAs the words slid through her mind Vala tried to grasp exactly what her Mistress wanted her to say. She had told the truth, she wanted this woman more than anything she had ever wanted before. She had desired, dreamed of, fantasized about this for so long and now that it was here it wasn't right somehow. Her Mistress would be displeased if she couldn't answer correctly. A single tear of desperate need rolled down her cheek in the suffocating darkness. She wanted this more than anything. She wanted her Mistress, she wanted to give herself to... she paused... she knew what her Mistress wanted. \"I want you to take me, my Mistress. I pledge my life to you, my Mistress. My soul is yours.\"\n\nA shudder went through Vala as she vocalized her submission. \n\nAt her oath, Vala could actually feel, the wave of euphoria that seemed to flow out from the woman before her. It was a physical sensation of being enfolded by a warm comforting embrace; it wrapped around her, surrounded and cradled her. It was love. The physical manifestation of her Mistress's love for her. \"Take me Mistress.\" She breathed. \n\nThe sensation changed and Vala could sense that her Mistress was amused somehow. Vala marveled that she could actually feel the woman's emotions and she wondered if it was because of her powers or because of the oath she had just given. \n\n\"But I have already taken you my Valamera. Three times before.\"\n\n\"Three?\" Vala asked. She guessed that one of the times had been just the other day in her chambers at night but the other two? \n\n\"Yes, three. The most recent, I'm sure you have by now guessed, was just a few nights ago within this very estate. I had planned on waiting till this night, but I found I could no longer restrain myself knowing you were so near. I gave in to my need and visited you in the dark.\"\n\n\"The next was a few weeks ago in the forest just after you left that gypsy girl, Inga.\"\n\n\"In the forest.\" Vala breathed. \"It had seemed so real at the time.\" \n\n\"That's because it was.\" Sensing Vala's next question, the Mistress continued, \"And the first time was over a year ago where I finally found you after all these centuries, lying in bed , sleeping, between your sisters on that little farm, in that small wooden house.\"\n\n\"On the farm? But...\" Vala tried to think but the red eyed gaze made it difficult, she kept losing herself in the crimson depts. With a supreme effort of will, Vala closed her eyes and tried to concentrate. \n\nHer mistress took her when she was still on the farm, over a year ago. That would be about the time the dreams started. It started to become clearer now. \"Back at the mill pond with Else, you were there with me then?\"\n\nThe warm blanket of her Mistress seemed to flow with pleasure around her. \"Yes. I wanted you to know the joy of being with another woman. I also wanted you to see that you were greater than a mere mortal, that you could exact your will on her.\"\n\n\"But it was you, not me.\"\n\n\"No my Valamera. True I was with you, in you, pushing your desires, but the control that you used, that was yours alone. A gift of your rebirth. A gift from the Goddess.\" \n\n\"My rebirth?\" Vala jumped as a hand caressed her cheek in the darkness. \n\n\"Yes my Valamera. On that first night I took you I bonded with you. A mixing of our souls and our blood. You started your journey to becoming what I am.\"\n\nVala wasn't sure she wanted to ask the next question but she couldn't help herself. She whispered, \"What are you? What am... am I?\"\n\n\"A creature of the night. A vampire, or at least you soon will be.\" \n\nThe room swung sickeningly around Vala as her mind reeled. A vampire. All those months ago when she had begun to think of herself as some kind of witch or an ill omen she hadn't been far from the mark after all. She was a creature of evil. \"No.\" she whispered. \n\n\"Yes.\" Her Mistress answered quietly, coming up to run a cool hand down Vala's cheek. \"After our three meetings, you are now well on your way to becoming like me, a creature of the night, all powerful, eternal. You will rule at my side, keeping sway over lesser beings, forever.\" \n\nVala looked into the red eyes almost pleading, \"But a vampire is a creature of the night. A creature of...\" she paused before whispering, \"... of evil.\" \n\nThe Mistress's demure laughter ran out through the huge chamber. \"Evil? Well, I suppose some might consider the things I do evil, but many rather enjoy being citizens of my realm.\" She ran fingers gently through the soft hairs at Vala's temple. \"Despite what the old stories say, we are not inherently evil. We are free to live out our existence however we choose within certain constraints imposed by out transformation. While it is true that we do sustain ourselves off the living, feeding on them, that is not all together a wicked thing to do. If we are careful the ones we feed off will never even know they served us. If we take only enough to sustain us they will not be transformed, they will not become us. A visit in the dark of night, a...\" the Mistress paused and Vala thought she could actually see the amusement in those glowing red eyes, \"... a rather pleasant dream perhaps, and that is all for them. I see noting malevolent in that. Like all things the power is what you make of it. You follow your heart my Valamera, you choose to be benevolent or wicked. Your powers are merely a tool.\" \n\nThe Mistress kissed her gently on the lips. \n\nDespite her shock and conflicting emotions, Vala's body responded to her Mistress. Her inner fire rekindled and in moments was again blazing. Her Mistress pulled her in close and for the first time their nude bodies touched completely. Vala felt the firm, smooth skin slide along her own, her own larger breasts pressed under her Mistress's smaller, firmer mounds. A hand went to the small of her back and pulled their hips together. Vala gasped as she felt their hips touch. Without thinking, her rocked hips forward trying to increase the contact but she was too short. She whimpered with need. \n\nHer Mistress broke the kiss and chuckled. \"So eager my Dear.\" A hand slid from her cheek to her breast. Fingers pinched the stiff little peak and Vala squirmed.\n\nVala was keenly aware of the Mistress's eyes on her as she writhed under the touch. The Mistress did not seem to be in any hurry as she slowly rolled the sensitive skin around in her strong fingers. Gradually the sensations in her nipple increased and Vala's passions built but still the Mistress didn't move beyond her continued slow teasing. After several minuets Vala was soaking wet and panting with need. \"Mistress...\" she whined. \n\n\"Ssssh.\" The Mistress shushed her softly. \"Concentrate on the feeling of it. Think of nothing else.\" She whispered. \n\nWanting nothing more than to please her Mistress, Vala did as instructed. She closed her eyes despite the crushing darkness and thought of her breast, felt the rolling movement of her skin, the tingling, tugging sensation in the tender, hard little bump. As she concentrated the feelings seemed to increase, slowly at first but with building power as the minutes passed. She let out a deep and primal groaning growl in the back of her throat. \n\nBreath, hot and moist fell on Vala's ear. \"You like this my Valamera. Your little nipples are very sensitive.\" \n\nThe words of the Mistress flowed into Vala's mind. Thick and sweet just like her own but somehow different, stronger. She felt the words in her mind, knew what her Mistress was doing because she had done it so often but still she was powerless to stop it, not that she wanted to. She wanted nothing more than to be taken completely by her Mistress. Vala opened her mind completely and without reservation to the woman before her and the words slid into her. \n\n\"... so very sensitive.\" Her Mistress whispered in her ear. The words flowed into Vala's mind, soaking into her soul. \"Your entire body is so sensitive to my touch. Sensitive to any woman's touch.\" \n\nShe gasped as she felt lips on her ear, nibbling, sucking, licking... Vala moaned. \n\n\"Your body responds to your lover's pleasure. Giving pleasure gives you pleasure.\" Her Mistress whispered into Vala's open mind, the words altering Vala's very being. Changing who she was, what she wanted and what she experienced. \n\nVala gasped as the sensations in her nipple started becoming more intense. With each passing moment the pleasure that her Mistress's fingers gave her built until Vala was lost in a continual, full throated moan. She had never before felt so much stimulation from just her nipples, not even when she had both of the twins suckling her at the same time. A cry slipped past her lips and she felt wetness flooding her sex. Her body was responding to the commands of her Mistress, changing her into what this woman wanted her to be. \n\n\"Is that better my Valamera?\" Her Mistress cooed, still pulling her nipples. \n\nVala gasped, \"Yes! So...\" she groaned, \"so... good!\" \n\n\"Would you like to feel even better my dear?\" The sweet voice flowed through Vala's mind, manipulating her thoughts, changing her very being. \n\n\"Yessss...\" \n\nThe fingers on her nipples pinched down hard driving a savage jolt of ecstasy straight into Vala's breasts. She cried out in rapture as she climaxed instantly. She felt her sex spasm as wetness gushed from her, running down the inside of her trembling legs. Her nipples throbbed with intense pleasure as the strong fingers continued to drive her higher. Keening cries of delight echoed around the room as her Mistress controlled her bliss. \n\n\"Mistress!\" Vala shrieked. \n\nOne hand left her nipple and Vala almost cried in longing till she felt the fingers touching her mount. She shuddered as the practiced fingers traced the slick, wet lips of her boiling sex. Another wave of rapture rolled into her, centered this time in her core as she felt a single finger slowly, ever so slowly, enter her. Once fully inside her, the finger crooked, pulling in and up, expertly finding the sensitive place inside her, driving her higher still. \n\nVala's mind was now completely lost, her entire existence was centered on her sex and her breasts. Bliss she had never imagined rolled through her young body, searing her nerves, scorching her reason and burning away her will. She was completely helpless before the power of her Mistress. \n\nThe lips returned to her ear, kissing her tenderly as the passion raged throughout her body. \"You will obey me in all things, my Love. Whatever I command you to do, you will do it. Whatever I say, your body, your heart and your soul will obey.\" \n\n\"Yes!\" Vala shrieked. \"Yes Mistress!\" \n\nA hand on her shoulders forced Vala to her knees and she went willingly, whimpering at feeling the finger slip out of her sex. Its sudden absence made her fell incredibly empty and alone. She desperately wanted the Mistress inside her again. \n\nA hand on the back of her head guided her forward slightly, the rich sent of womanhood filled her nostrils. The tip of her nose brushed against soft curls and the sent increased. Vala moaned realizing she was only inches from the sex of her Mistress. \n\n\"Taste me, my Valamera. I've waited for your touch for so, so long.\" The words rolled over Vala, surrounding her. \n\nIn a haze of sapphic euphoria, Vala leaned in and had her first taste of her Mistress's sex. The musky, salty taste filled her mouth and seeped into every corner of her being. She moaned aloud as she savored the smooth, slick feeling on her tongue and lips. This was the greatest bliss she had ever imagined possible. \n\n\"Yesss...\" Her Mistress said, her words close to a moan. \"Drink me in, my Pet.\" The hands in Vala's hair tightened their grip, pulling Vala's face in harder. \n\nThe legs spread more, giving Vala greater access. Vala slipped her tongue deeper into the hot, wet folds of tender flesh, delighting in every moan that came from the lips of her Mistress. She felt her own excitement building rapidly knowing that she was the cause of pleasure. One hand strayed down to her own needy sex, a finger tenderly touching the sensitive clitoris, circling it, rubbing it, driving her towards her own climax. \n\nThe Mistress guided Vala as she stepped backwards a few steps in the pitch blackness, Vala obediently following on her knees. She sensed rather than saw her Mistress lay back onto something, a settee or chair perhaps, Vala couldn't be sure in the dark. The hands again guided Vala's face back to her Mistress's hot, wet center. \n\nWanting to drive her Mistress to greater heights she was more insistent now. She dipped her tongue in deeper, searching out her Mistress's most sensitive places. She felt the muscles of the Baroness's sex tense at her invasion. The tension turning to quivering as Vala explored even deeper, licking, pushing, relishing the heat of her Mistress's passion. \n\nThe Baroness pushed her hips up into Vala's face, grinding into her as the moans turned to cries. The wetness on Vala's face increased as Vala pushed her Mistress closer to her peak. \n\nVala pushed two fingers deep into herself, groaning loudly into the wet folds as her own climax approached as well. She felt her inner walls gripping her fingers tightly as the rapture built higher and higher. \"Mistress...\" she moaned. Her sex had never felt like this when she had touched herself before. She had never been this sensitive. The feelings were almost too much for her mind to bear but she had to continue, she needed to pleasure her Mistress. \n\n\"With me... my... love.\" The Mistress hissed. The hiss turned to a cry as she finally reached the peak of her passions. \n\n\"Mistress!\" Vala screamed as her own climax slammed into her. The walls of her core clenched down crushingly on her fingers and hot wetness gushed over her hand as a mind shattering orgasm ripped through her body. The incredible storm of sensations tore open her very soul and left her completely exposed to her Mistress's powers. \n\nHot, musky wetness flooded Vala's mouth, salty and sweet, filling her senses with her Mistress's ecstasy. The feel, sounds, sent and taste of her Mistress filled Vala's vulnerable mind, was absorbed into her being and became part of her soul. At that moment, the Mistress became Vala's entire world. \n\nLight exploded in Vala's mind and she reeled. She collapsed back heavily onto the cold, hard floor, not even feeling the impact of her head on the unforgiving stone. Her confused, terrified eyes opened wide in the smothering blackness as her mouth opened in a silent scream. In an instant, a hundred lifetimes of memories all slammed into her consciousness. A thousand, thousand images of love and pain, hopes and desires, happiness and despair, dreams and regrets all burned through her, filling every part of her mind, overloading her senses. She saw her own birth, felt her own death over and over again as a hundred different women in a hundred different lands. They were all different yet they were all her. Countless lifetimes that her soul had been born into, lived and died. \n\nA hurricane of memories, her soul's memories from all her past lives, tore through Vala and threatened to shatter her mind. \n\nThe scream that had been locked in her throat now slipped loose. It started as a thin, pathetic wail but quickly built to a heartrending shriek of complete terror. She screamed in fear, pain and confusion as her hands came up and clutched at her temples, trying vainly to keep any more of the strange memories from entering her tortured mind. \n\nThen she felt the Mistress beside her, wrapping her strong arms around her, comforting her, cradling her, protecting her. \"Hush, my Valamera, I'm here for you.\" she whispered. The touch was comforting and Vala slowly, very slowly, came back to herself. \n\nValamera... the name from her dreams... she remembered it all now. She remembered the first time they had met at Caesar's Palace in Rome. She remembered how beautiful her Mistress, then Cleopatra, had been on that day. Tall and slender with dark hair and wearing a beautiful gown with extraordinary, exotic jewelry. A hand of years older that Valamera at the time, she had been brilliant and worldly, accustomed to being obeyed by all, she never the less had made time to sit and talk with the young, shy merchant's daughter. Their friendship had bloomed that evening and had turned to a love that had lasted for over a thousand years since, surviving countless lives and countless deaths. A love fated by the Gods, a love destined to be for all eternity. \"Mistress.\" Vala breathed, tears streaming down her cheeks. \"I remember. I remember it all, when we met, our first kiss, the night you took my virginity, the night I...\" she broke off, searching out the glowing eyes in the darkness. \"...the day I died.\" She whispered. \n\n\"Hush my Valamera. You don't have to worry any longer. We're together again, and nothing will ever again separate us.\"\n\nFingers caressed the side of Vala's face. She felt soft lips on hers. She kissed them back, tenderly, lovingly. \"I love you Mistress.\" Vala breathed. \"I don't want to ever lose you again.\" \n\nThe faintly glowing eyes were before her again, looking into her soul. \"Don't worry my Valamera, never again.\" came the whispered answer. A hand trailed down Vala's body, teasing her nipples and making her moan anew. \n\nShe arched her back, offering her breasts to her love but the hand only played with her nipples for a few minutes, making her squirm and groan. Vala's need was building again and she was on the verge of whimpering when her Mistress finally slid her hand slowly downward. Vala trembled in anticipation as she felt the fingers caressing the soft hairs of her mount, now slick with her wetness. One finger teased her outer folds sending ripples of pleasure through her young body and making her pant with need. \"Take me.\" Vala moaned. The finger pushed slowly, almost teasingly inside her, working in little practiced movements, building Vala's inner fire, raising her need. \"Take me Mistress.\" \n\n\"Is that what you really want, my Valamera?\" Her Mistress murmured in her ear. \n\n\"Yesss.\" Vala moaned. \"Take me Mistress... I'm... I'm yours.\" \n\nThe finger moved to Vala's clitoris and started circling the tender bump, making Vala cry out. Faster and faster it circled driving Vala higher with every passing second. She could feel another climax fast approaching and she clung to her Mistress, savoring the smooth, strong feel of the woman that loved her enough to wait for fifteen centuries for her to return. He body tightened, her back arching upward as her climax started. \"Take me!\" she shrieked. \n\n\"I will, my Valamera.\" Her Mistress said in her ear as she pushed two fingers deep into her sweltering center. Another spasm of rapture ripped thorough Vala and she cried out. As the fire burned through her body, she felt lips, firm and smooth on her neck followed by an intense stabbing pain. She shrieked as the pain mixed with her pleasure to drive her body to yet another soul shattering climax. Light, brilliant and pure, flashed in her eyes for an instant before it blinked out and she fell into eternal blackness. \n\n* * *"
    ],
    "authorname": "china-doll",
    "tags": [
        "lesbian",
        "vampire",
        "lactation",
        "milk",
        "all girl"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/forever-again-ch-07"
}