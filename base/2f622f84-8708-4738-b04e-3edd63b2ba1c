{
    "title": "Master! Master! Pt. 06",
    "pages": [
        "Chloe whimpered as I used my penis to play whack-a-mole, though there was only one mole and it was her cervix. We were in the missionary position, her small body almost invisible under me. She had her face buried in my chest, letting me smell her hair and nibble on her ears. I had emptied my tank last night, so I decided to top her off before breakfast. She gave her signature squeal, letting me know I could release everything.\n\nI pulled out of her, watching my semen dribble out of her pussy. \"So how was that? Did it feel better than last night?\"\n\n\"Yeah, it kinda did!\" She had a smile on her face but was crying for some reason.\n\n\"Chloe, are you ok?\"\n\n\"I'm ok.\"\n\n\"But why are you tearing up?\"\n\n\"I don't know; my eyes are just wet.\"\n\nShe was crying like this last night. \"Are you sure you're ok? Are you sure it didn't hurt? If there is anything wrong, you can tell me.\"\n\n\"I was a little sore, but it didn't hurt. I don't know why I have tears like this.\"\n\nCrying during sex? Oh well, it definitely seemed like a quirk fitting her. I love her to death, but Jesus, it's like she's intentionally trying to be pitiful. It's not fair how cute she is. The other girls came in, and some kind of canine sympathy instinct must have kicked in with Sonja because she hugged Chloe and licked the tears off her cheeks. Momo's eyes fell to Chloe's creampie and her tail began to curl.\n\n\"Can Momo have the semen in Chloe?\"\n\nWell that's a new one. I turned to Chloe. \"It's up to you.\"\n\nShe blushed in embarrassment, returning to her natural, timid self. \"I-I-I don't know! I guess?\"\n\nWithout word or hesitation, Momo crawled onto the bed, dipped her head between Chloe's legs, and began lapping up my semen out of her pussy. Chloe moaned from the feel of a feminine tongue slipping inside her, and the sight of Momo going full girl-on-girl brought back my boner with a vengeance. I couldn't help myself, I got behind Momo and mounted her. The feeling of penetration made her purr and she continued slurping up my cum out of Chloe. I gripped her by the hips, burning away what little morning fatigue I had left, every slam I made pushing her face deeper into Chloe's flower.\n\nBeside us, Sonja was jumping up and down and clapping with a big smile on her face. \"I wanna try! I wanna try!\"\n\nShe got onto all fours and snaked her way between Chloe's slender legs. Chloe was covering her face in embarrassment as Momo and Sonja diddled her labia, each taking a lip for themselves and letting their tongues fight for the white syrup trickling out. I was fingering Sonja like I had last night, almost using her to help maintain my balance. When I pulled out of Momo, I plunged into Sonja, and vice versa. I switched after a minute, forcing myself on Sonja and letting my fingers stir Momo's insides.\n\nEven though I had just blown my load in Chloe, I could feel another shot brewing, and I couldn't hold it back. I pulled out of Sonja and began jacking off. \"Hey girls!\" Sonja and Momo turned to me, just as a stream of sperm shot forth, flying through the air and landing on their faces. They both seemed dumbfounded, unable to process this new event, but after a few seconds, the confusion abated as they remembered seeing people do this on those porn videos.\n\nI sat back, nearly falling off the edge of the bed. \"Ah, life is good.\"\n\n--\n\nNow that Chloe and I had made the beast with two backs, things seemed to finally stabilize. While hard to properly describe, Chloe seemed more confident than before, albeit remaining shy and pitiful. It was like... she had finally accepted that this was her home and we were her family, that she wasn't just a guest or even an intruder. Momo and Sonja had also gotten used to her. In fact, all three had gotten very \"used\" to each other. I don't know if they did it out of actual sexual attraction, but the girls had started going down on each other like that morning, especially after I filled one of them up. \n\nMomo and Sonja seemed to do it mostly to drink up any semen I had fired, but also out of boredom when we all played together. If I were having sex with Momo, Sonja would be licking Chloe, and if I were having sex with Sonja, Chloe would go down on Momo. Since Chloe didn't like the taste of semen, I think she mostly did it as a way to prove herself, to show that she could keep up, and her natural timid nature made her want to please others and make them happy, as well as return the favor. \n\nThe colors of fall had met their end, the reds, yellows, and oranges replaced with brown and gray, but that meant it was one of my favorite times of year: Thanksgiving. Normally I'd visit my folks for dinner and have someone cat-sit Momo, but this year was different. I called and told them that I had met a girl and she invited me to her parents' house for dinner and that I'd try to visit them some other time. Now that I had three girls to take care of, the responsibility was on me to prepare dinner. Luckily, I had the Internet for help.\n\n--\n\nMomo and Sonja stared at the frozen turkey with mouths watering. Even though it was all wrapped up and turned into a solid block, they knew what it was: meat, countless pounds of glorious meat. I had prepared plenty of chickens before, but they had never seen a bird of this size. Chloe was drawn to the bag of potatoes instead, omnivorous like Momo and Sonja but preferring fruits and vegetables. If only they knew that there was a cake hidden in the fridge...\n\n\"Master, is something going on?\" Sonja asked.\n\n\"Tomorrow is Thanksgiving, a special holiday. You celebrate it with a big dinner of turkey and mashed potatoes, so I want the four of us to eat at the table.\"\n\n\"We're going to eat this whole thing?\" Momo gasped.\n\n\"Well I'm hoping we can get two dinners out of it, but yeah, and I'm going to need your help in getting it ready.\"\n\n\"Yes!\" they all cheered.\n\n--\n\nThat next day, I made sure to have a light breakfast so I could stuff my face at dinner. Chloe and I cleaned and brined the turkey while I had Momo prepare a woven blanket of bacon to drape over it. I gave the turkey neck to Sonja, telling her to peel off as much flesh as possible to be added to the gravy. Unfortunately, a lot of the work with the turkey was left with Chloe, as I was constantly turning around to stop Momo and Sonja from eating their tasks. Sonja would be standing over the sink, gnawing on the turkey neck like a bone from a butcher shop. Momo would be chewing on the bacon strips like lengths of jerky.\n\nTowards the middle of the afternoon, I managed to get it into the oven. Next were the potatoes. \"Ok, girls, gather around because I'm leaving the mashed potatoes entirely to you.\"\n\nI sat them down at the table with a big pot filled with potatoes and water and set out a cutting board, knife, vegetable peeler, and a bowl. \"Momo, the first part is yours. Take each of these potatoes and use this to cut off the skin.\" I showed her how to use the peeler, letting her watch with wide eyes as a brown and white ribbon began to unravel with the rotating of the spud in my hand.\n\n\"Now you have to be careful with this. Never let the blades touch your fingers or you will get cut. Make sure you get every single spot, and if you find any bruised areas or parts that don't look right, just keep scraping them off with the peeler. Put the peels in this bowl and we'll add them to our compost pile. \n\nNext, Chloe, your job is to cut them into quarters. It's easy, just make sure you do it slowly and watch your fingers.\" I took the cutting knife and divided the potato into pieces. Chloe was fearful of the long blade, but I made sure she knew where to put her fingers.\n\n\"Then you'll put the pieces back into the pot. Sonja, when all the potatoes are peeled, cut, and back in the pot, you'll take it to the sink and drain out the dirty water and put in fresh water. I'll put it on the stove, and when they're ready, you'll have the most important job.\" \n\nHer ears perked up. \"The most important job?\" she asked with a joyous grin.\n\n\"You'll be the one to mash them.\" I handed her the potato masher, which she received like it was Excalibur. \"You're going to turn them into mush. You have more than enough energy for that.\"\n\n\"Yes, Master!\"\n\n--\n\nIt was dark out, the sun having long since set this deep into autumn. It was just about time for dinner, and the kitchen was echoing with the sound of meat being cut, potatoes being pulverized, and stomachs growling. I was carving the turkey, not wanting to do it at the dinner table. The bacon juice had mixed in with the turkey meat perfectly and the smell was almost making me delirious with longing.\n\nTAK! TAK! TAK! TAK! TAK! TAK! TAK! TAK! TAK! TAK!\n\nThe potato masher knocked against the inside of the pot like the firing pin of an Uzi. Sonja was going wild, her hair almost flapping as she whipped up the spuds. The jiggling of her tits was glorious, to say the least. She didn't have extraordinary arm strength, but she did have endless reservoirs of canine energy. If I hung a frisbee in front of her, she could run for hours on a treadmill. \n\nAt last, everything was ready. The girls all sat at the table and I laid out a platter of turkey meat and the pot of mashed potatoes. I loaded all of our plates and sat down. \"Now, before we start eating, it is Thanksgiving tradition for us to each name something we are grateful for. Momo, would you like to start? What is something you are happy to have?\"\n\nShe rocked on her chair for a couple moments, eyes screwed shut. \"Momo is happy that Master plays with her.\"\n\n\"Thank you. Sonja?\"\n\nShe jumped up from her chair. \"I'm happy that Master pets me and rubs my head and throws the frisbee for me!\"\n\n\"I love those things too. Chloe?\"\n\nHer head drooped between her shoulders, blushing with embarrassment but with a tiny smile on her lips. \"I'm happy that Master lets me live here.\"\n\n\"Thank you, and I'm happy to have all of you girls in my life. Now, let's eat.\"\n\nWe dove in, and my hopes were dashed for enough leftovers for another dinner. We ate like lions, leaving only enough for the girls to have lunch the next day. After that, we had cake, must to the girls' happiness. That night, we didn't play together, simply because we were all too full to move.\n\n--\n\nWith the arrival of December, gentle snowstorms became more and more frequent, a calm and beautiful precursor to the blustery winter approaching. The final days of the girls' nudity puttered out like the last coughs of a car out of gas. They had obstinately clung to their animal instincts as long as they could, but even with a fire burning in the woodstove, the slightest draft made them shiver. Chloe was handling the cold better than Momo and Sonja, even though it was her first winter. The dog and cat were used to having thick fur to keep the cold at bay. It was especially bad for Momo, since as a woman and a cat, she was practically cold-blooded. That's right, I said it and I'm standing by it.\n\nWhenever the snow started to fall, Sonja would go outside and frolic, her face always directed upwards, tongue extended, as if trying to catch Jack Frost's money shot. In the bedroom would be Chloe, watching the snow as if hypnotized. In the living room was Momo, who had set up bedding for herself right in front of the woodstove.\n\n--\n\n\"I'm home!\" I called, stepping through the front door.\n\nThere wasn't really any need to announce my arrival, since the girls always flocked to the door when they saw my headlights and heard the shutting of my car door. Sonja was first, jumping up and down and cheering with her tail shaking even more than her boobs. She came at me and covered me with kisses, telling me how much she had missed me.\n\nThen came Momo, standing behind Sonja, looking kind of out of it with her bedhead telling me she had just woken up from a nap. \"Hi, Master,\" she said with a yawn. She walked over and rubbed her head against my shoulder, repeating her words in the form of a purr.\n\nIn the far back was Chloe, nervous as always, afraid to do anything without an invitation. \"Welcome back, Master!\" she chirped while wringing her tail. I smiled and waved her over, and she happily rushed and hugged me. \n\nThe girls followed me to the couch and we all plopped down. I groaned in happiness, glad that I was finally home. It felt nice to decompress after a long day and just watch the news. The girls all snuggled up, Momo curling into a ball with her head on my lap, Sonja clutching my arm and resting her head on my shoulder, and Chloe sitting on the floor, crossing my legs across her like a seatbelt. \n\n\"How was your day, Master?\" Sonja asked during the commercial break. I had taught them all to only talk during the commercial break.\n\n\"Long, tiring. Everything seems to go wrong in the winter.\"\n\n\"Can I help? I wanna help!\"\n\nI smiled and rubbed her head. \"I rely on you to do stuff here. You do help.\"\n\n\"Momo misses cuddling with Master during the day,\" the feline said, purring as I played with her ears. \n\n\"And Master misses cuddling with Momo.\"\n\nChloe looked back at me. \"Want us to make dinner?\"\n\n\"Thank you, Chloe, I'd really appreciate that. And I have good news for the three of you: we have another holiday coming. In a couple weeks, it'll be Christmas.\"\n\nThey all perked up.\n\n\"Christmas?\" Momo asked.\n\n\"It's a day where we all give each other presents. I want each of you to make things to give as gifts. It could be drawings, pictures, or something else, but you have to keep them secret so it's a surprise when we exchange them on Christmas. So, Momo, you're going to have to come up with gifts more Sonja, Chloe, and me. Sonja and Chloe, you'll have to do the same. You all get the idea?\"\n\nMomo sat up and leaned over, her face very close to mine, as if she was about to kiss me. \"Will Master get us cake?\"\n\nI laughed and gave her a peck. \"Yes, of course I'll get you cake.\"\n\n--\n\nThe girls spent the rest of December working on their presents. I had to hope that they actually did understand the purpose of giving gifts to each other. Naturally, I was taking advantage of eBay. A quiet weekday found Momo lying on her stomach in front of the couch, legs kicking and tail curling as she worked on a picture. Peeling crayons and stubby colored pencils littered the floor around her. She heard the door open and close and Sonja strolled in. Seeing Momo, her tail began to wag.\n\n\"Wat'cha doin'?\" she hummed.\n\n\"Drawing.\"\n\n\"Can I see?\"\n\n\"They're for Christmas.\"\n\n\"I wanna see!\"\n\nSonja came over and Momo used her body to cover the picture. \"No! Master said it's supposed to be a surprise!\"\n\n\"But I can't wait that long!\"\n\nSonja got down on the floor and tried to worm her way under Momo, to which Momo replied with a hiss and a swipe. Sonja backed off but her tail was wagging even more than before. She was on all fours and started bouncing on her hands, the way a normal dog might try and wake up its owner. Sonja pounced, not even aiming for the picture anymore. She and Momo collided and rolled across the floor, grabbing and slapping each other. Sonja had a big goofy smile but Momo was scowling and hissing. They continued to wrestle like this, with Sonja pouncing on Momo whenever she tried to get away. \n\nDrawn by the noise, Chloe came downstairs, and, of course, broke out the waterworks. \"You two shouldn't fight!\" she cried. \n\nThey finally stopped, Momo on top of Sonja. \"Tell her that!\" she replied.\n\n\"But I want to wrestle and play!\" Sonja said as she wrapped her arms around Momo's waist and rolled the two of them over to the side. \"I want someone to play with!\" \n\nNeither Momo nor Chloe envisioned sex after hearing that word, as the three of them naturally knew that \"play\" was a vague term. To them, \"playing\" included cunnilingus and throwing frisbees.\n\n\"We could play hide-and-seek,\" suggested Chloe, the small creature instinctively pulling her ears down over her face as if expecting to get yelled at.\n\n\"Yeah! Let's play hide-and-seek! Come play with us, Momo!\"\n\nMomo groaned. \"Momo doesn't like the cold.\"\n\n\"Just one round? Please?\"\n\n\"Fine,\" she huffed.\n\n--\n\nWhile Momo and Chloe ran through the woods, Sonja stood in the kitchen, watching the ticking egg timer. Well, technically, she was jumping, bouncing back and forth like a rabbit. She couldn't contain her excitement, wanting to run out there and chase them down. One minute went by. It had just snowed the night before, so there would be fresh prints for her to follow. Two minutes went by. Momo would probably just run without realizing it, or at the very least look for areas where her footprints would be harder to see. Three minutes passed by. Chloe, having the instincts of prey, might prove cleverer, perhaps even backtracking to throw her off. Four minutes passed by. They would be smart enough not to actually run through the woods, at least not in smooth areas. They would probably try to stay in areas with underbrush, where ice couldn't form on the ground.\n\nThe egg timer ringed and Sonja rocketed out of the house, the door closing behind her only because of how hard she had opened it. She ran around the house, searching for prints that weren't her own. Who should she go after first? She found a set, smelling like Momo and too large to be Chloe. She took a moment to jump up and down and cheer in happiness, and then followed the tracks into the woods.\n\nAs a fellow meat-lover, Sonja could read the intention of Momo's prints. She didn't know how to run away from things since she was always the predator. She could only try to apply those instincts to what she was doing. Whether consciously or subconsciously, she always walked along ridges and raised spots, instinctively wanting to get the highest view she could, even if she wasn't looking for anything in particular. She had also avoided almost all manner of visible twigs, focusing on silence, even though it wasn't needed.\n\nThe tracks stopped at the base of a tree and Sonja looked up. Crouching on a branch and trying to hide behind the trunk was Momo.\n\n\"I found you!\" said Sonja. \n\n\"Momo doesn't like being followed,\" she pouted.\n\n\"Let's go find Chloe!\"\n\nMomo jumped down and they made their way back to the house. They searched the area, at last finding Chloe's prints leading in the opposite direction from Momo's trail. They dove into the woods, keeping their eyes peeled. Chloe had taken a different strategy, dragging her feet along to make one big messy trench through the snow. Sonja realized why when Momo called out to her. Sonja was ahead of Momo but was turned around, seeing what Momo was pointing at. Sonja had missed a footprint going off the trail and into an uneven thicket where snow hadn't completely covered the ground. The messy footprints she left had made it that much easier to simply turn around and backtrack. \n\nThey followed the new path, keeping a closer eye on the snow. Chloe used that trick another two times. They soon spotted her standing in a clearing, not bothering to hide or anything. She was crying. When Momo and Sonja came up behind her, they saw why she was crying and both their tails dropped. A girl lay dead in the snow, frozen solid, her skin a frightful cerulean. She had pointed ears on the top of her head, like Momo's, but longer and skinnier. They were brown, matching the color of her hair. She also had a furry, leaf-shaped tail, about twice as large as a human hand, the back of it brown but the underside white.\n\nMomo and Sonja leaned against each other and pulled Chloe in. It took their breath away to see another girl exactly like them, who simply hadn't been found in time. This deer, had she simply been closer to the house, they maybe could have saved her from the cold. She would have lived with them, played with them, exchanged gifts at Christmas. She would be a huge part of their lives. Now they would never know. When Chloe was found, she had already been suffering from frostbite. To think that she could have so easily ended up like this, it was no wonder she was crying. ",
        "\"We should tell Master about his,\" said Chloe.\n\n\"I don't want to tell Master. I don't want Master to be sad,\" said Sonja with a tearful sniff.\n\n\"Let's wait until after Christmas.\" \n\nThe three of them nodded and proceeded to bury the girl in snow and underbrush, if only to make sure no one else could find her.\n\n--\n\nRather than cutting a real one down, I set up my tiny plastic Christmas tree, a symbol of my fixed-income bachelor lifestyle. Momo had seen it in years past, but now that she understood what it was for, she gazed at the synthetic decoration with wonder. I had it set on the coffee table with all of the presents around it, the presents I had bought and the presents they had made. I had gotten each girl a large gift, while above the wood stove, I hung three empty stockings waiting to be filled with goodies. I couldn't help but spoil them. Of course, they were anxious on this Christmas Eve, overcome with a childlike greed for the presents awaiting them. I kept a rolled-up newspaper handy, ready to swat anyone who tried to peak. Even the normally obedient and submissive Chloe ended up with a couple whaps to the head after picking at the wrapping paper.\n\nIt was a very cozy evening, with a fire burning in the wood stove and the radio playing Christmas songs, while outside, a light flurry of snowflakes reapplied a frozen gloss to the still woods. We were all in the kitchen, preparing dinner. I was working on a ham while the girls prepared mashed potatoes. Keeping them busy was the only way to protect the gifts.\n\n\"So tomorrow we can open our presents?\" Sonja asked for the umpteenth time.\n\n\"Yes, Sonja, like I've told you a hundred times before, yes. But we all do it together. I don't want any of you girls sneaking downstairs before dawn and going crazy, understood?\"\n\nThey all nodded.\n\nOnce the ham was put in the oven and the peeled potatoes were set on the stove to be boiled, we retired to the couch in our usual positions. Perhaps it was excitement, but Momo seemed to be purring louder than usual as I rubbed her ears. On the other side of the couch, Sonja was rolling over again and again, as if unable to get comfortable, or perhaps she wanted to make sure every side of her head got to feel the warmth of my lap.\n\nWe were watching How the Grinch Stole Christmas and the girls were showing much more attention than they normally would to the TV. Chloe, especially, had eyes as wide as her ears and was mesmerized by the old-school animation.\n\n\"Master, the Grinch isn't going to steal our presents, is he?\" she asked.\n\nSometimes I'm almost infuriated by how goddamn cute she is.\n\nSonja perked her head up, her canine instincts on high alert. \"The Grinch isn't coming to our house! This is our house!\"\n\nThis was why I didn't bother telling the girls about Santa Claus. Sonja would just end up freaking out and spend the whole night patrolling the house for the big red invader.\n\nI gave them both a reassuring head pat. \"No, the Grinch isn't real, you don't have to worry.\"\n\nOne of Momo's eyes opened. \"Master, what does Who Hash taste like?\"\n\n--\n\nEven after a big dinner, Christmas excitement gripped the girls, so there was only one way to tire them out and put them to sleep. And that was a jog around the house. Just kidding, I fucked their brains out. The four of us were in bed and Chloe was currently on top of me. Her small body rocked from side to side with my cock stirring her up like a blender. She was giving tiny whimpers of bliss tinged with just a tiny spark of pain, while her eyes watered as if she was chopping onions. \n\nSonja was sitting on my face, moaning as I slurped her love syrup. She gripped the headboard for support, the movements of my tongue overpowering her. The feeling of her naked body completely smothering me was beyond words, the near-suffocating effect of her pussy against my mouth and nose, the softness and heat of her bare thighs against my cheeks. Beside us was Momo, pleasuring herself as she waited for her turn. Chloe soon tagged her in, unable to focus on riding me with Sonja's fluffy tail swatting her face. As per routine, Momo first cleaned me off, using her tongue to lap up every drop of Chloe's essence. She then got on top of me, purring as my manhood penetrated her. She had her back to Sonja and I, leaning back and forth against my cock rather than bouncing on it. She groaned as she moved, bobbing her ass with her tail reaching out and curling around Sonja's like a vine. I could feel my cock tickling every secret spot she had, causing her hair to stand on end and her back to shiver. \n\nA howl echoed through the house as Sonja came, offering me a flood of arousal to quench my thirst. She rolled off me as if my face was a bike seat and she had just finished the Tour De France. I gasped for air and stretched the stiff muscles in my face and tongue. Beside me, Chloe kneeled with a look of adorable uncertainty on my face. She wanted more affection but she saw my fatigue. Seeing her inner conflict, I smiled and invited her over. Our lips joined and I licked all the soft corners of her mouth, inviting her to do the same. While we made out, my fingers found her slit and probed her interior. I broke our kiss and moved my head down, this time letting my lips meet her flat breasts and the little pink bumps that were her nipples. The feeling of my fingers sliding in her body like tentacles and my lips pulling on her areolas made her whimper in bliss.\n\nMomo's gyrating on my lap robbed me of my control and I came, flooding her womb with my cum. She purred from the warmth of it in her body, and while I was losing my erection, I had yet to lose my desire. I pulled Momo onto me and sat against the headboard, holding her on my lap with my hands under her knees. I flaccid cock slipped out of her, my semen following suit with the removal of the meaty cork.\n\n\"Could one of you girls help me out?\"\n\nChloe crawled over, seeing an opportunity to be useful. She rolled my cock around in her mouth, trying to return it to its former glory. More intrusive than helpful, but still quite welcome, Sonja forced herself in like she was trying to retrieve a tennis ball that had rolled under the couch. Since Chloe was providing cleaning fellatio, Sonja's goal was the semen trickling out of Momo. She slurped it up the way only a dog could, bullying Momo's pussy with her mouth and nose and making her moan. \n\nOnce I had regained my erection, Chloe guided me back into Momo and I began bouncing her on my lap.\n\n\"Master, you're so deep in Momo!\" she cried out, the expression on her face one of lustful intoxication. \n\nI was driving myself into her as hard and fast as I could, subjecting my balls to almost painful whiplash. Every impact weakened Momo's sense of reason, her words degenerating into animalistic meows and growls. Santa could have downed a six-pack and had an eight-reindeer pileup on my roof and even Sonja wouldn't have heard it over Momo's orgasmic cries. She collapsed on the other side of the bed, her inner thighs gleaming from her dripping arousal. She was down for the count but I was still full of energy and Sonja hadn't yet gotten her turn.\n\nShe was laid out on her side with her tail wagging as if expecting a belly rub. I raised her leg and slid into her, making her wag her tail even harder. I began my thrusts, listening to her gasps while my eyes burned holes in her jiggling breasts. I lied down beside her, the two of us making out as I fondled those two glorious gifts from the Almighty. Beside us, Momo remained passed out and Chloe had fallen asleep without realizing it, giving Sonja and I a little bit of alone time. I was so used to having all the girls together in a harem, I forgot how nice it was to play one on one with each of them. \n\nSonja fully rolled onto her back, letting us get into the missionary position. She had her legs wrapped around my waist, her breasts heaving with each breath she took. We continued to kiss for several minutes, my thrusts now slow and gentle. As my speed picked back up, I pulled my lips from hers and began nibbling on ears, pushing her over the edge. She arched her back and cried out with a blush as she came again and again. I held myself over her, just smiling as I watched her settle.\n\n\"You girls are the only Christmas presents I need, including you, my sweet little puppy dog.\"\n\nShe laughed and pulled me in for another kiss. \"Merry Christmas, Master!\"\n\n--\n\n\"Master!\" x 10^it's too early for this shit\n\nI felt three pairs of hands rocking me like a paint stirrer. \n\n\"Master, Momo wants to open her presents!\" the cat whined.\n\nI pulled the blankets over my head. \"Girls, what was the rule I told you?\"\n\n\"If you're in the bathroom, we're not allowed to bother you?\" said Chloe.\n\n\"I meant the rule about waking me up today.\"\n\n\"Not until it's light out?\" said Momo.\n\n\"Exactly. Now, I'm going to go back to sleep, and you had better not wake me up until the sun has risen.\"\n\nThe girls all looked at each other and nodded. They knew that there was only one way they would get me out of bed. They dove under the covers, and before I could stop them, they pulled away my boxers and I felt my cock enter someone's mouth. I groaned from the sensation, as whichever girl was sucking me off did so with great enthusiasm. Her head was bobbing and she was drowning my member in saliva and then slurping it back up. So aggressive was she was that all flaccidity was forcefully removed as if I were using a dick pump. Someone else then took it, her tongue licking from a new angle. I watched the blanket rise and fall from her efforts as she tried to milk me like a cow. She was pulling up, exerting as much pressure as she could as if she were siphoning gas.\n\n\"You girls won't beat me with just that! You should know that even if you get me hard, I'm slow to fire in the morning!\"\n\nThe third girl took it, I still don't know who. Rather than deep-throating me, she focused all her attention on the head, her lips teasing the rim while she worked her tongue at the slit in the very tip. Now I was starting to squirm, feeling convulsions run through my body from the intense stimuli. I had trained these girls well, too well. They knew I was faltering and they combined their powers, performing the trinity blowjob I had taught them when I took Chloe's virginity. I was utterly helpless, unable to hold on. I gave a loud grunt, as under the blanket, it became a white Christmas.\n\nI set my head back on my pillow and gave a huff. While an evening orgasm was great for helping to fall asleep, launching a phosphorus flare in the morning had the opposite effect. All the excitement increased my heart rate and blood flow, figuratively \"washing out\" the fatigue from my body and energizing my mind.\n\n\"Ok, girls, you win. I'm getting up. But you're still going to have to wait before opening any presents.\"\n\nWe all got dressed and headed downstairs. The fire in the stove had gone out so it was as cold as it was dark. Before anything else, I started the coffee pot and built up a new fire in the stove. The girls were huddled on the couch, wrapped in blankets, having lost their excitement to the morning chill. By the time I poured myself a cup of decaf (I was planning on going back to bed after this), the stove was flooding the house with warmth and the girls were regaining their giddiness. I turned on the TV and found the Charlie Brown Christmas Special, setting the volume low to just add a little background noise. Everything was now bright and warm, a perfect Christmas morning. \n\n\"Girls, time to see what's in your stockings.\" \n\nI distributed the giant red socks and the girls exploded in happiness, pouring out the gifts. For Sonja, her stocking was full of tennis balls and frisbees. Momo got a bunch of cat toys and art supplies, one of them being a furry rodent attached to a battery-powered ball. Chloe got an army of beanie babies and other stuffed animals, the little faces and bodies making her eyes widen. I had also mixed candies into the gifts, a little extra sweetness. I still didn't know if Sonja could handle chocolate, but better to find out now with some small treats than with a big piece of chocolate cake. The girls all had wide grins, hugging their gifts and cheering. And to think, I had originally considered just skipping Christmas. I must have been crazy to even, for a moment, consider not spoiling these girls.\n\n\"Now it's time for you to exchange the gifts you made. Chloe, do you want to go first?\"\n\nHer head drooped, her nervousness returning with the spotlight shined on her.\n\n\"O-ok. M-Master, I made this for you.\"\n\nShe handed me a large sphere wrapped in newspaper. I had been wondering what it was. It was surprisingly light. I was very careful in removing the cover. It was a giant ball of pine cones, their stems tied together and with pine needles packed into the shingles.\n\n\"Oh, this is very cool.\"\n\n\"I thought you could take it with you to w-work! If you like it, I mean!\"\n\n\"I love it, it smells wonderful. I'll hang this up in my office as an air freshener. Thank you.\"\n\nShe smiled in relief, my words taking the weight off her shoulders. \"You're welcome! Momo, I made this for you!\" Momo took a small hand-made envelope and opened it. It was a length of string with several pieces of quartz and mica from the driveway. \"I thought you could wear it around your neck or hang it from your tail!\"\n\n\"Momo loves it! Thank you, Chloe!\" Momo said with a purr. \n\n\"And Sonja, this is yours!\" \n\nSonja received her present and opened it. It was a sock I had thrown out last week, and from the shape at the end, one of Sonja's last few tennis balls was sitting in it with the open end tied. Sonja seemed confused.\n\n\"Do I have to untie the sock?\"\n\n\"No,\" I said, \"you're meant to throw it. You hold the end of the sock spin it around, and use the extra force to send it flying, right Chloe?\" She nodded. \"Very clever! I am impressed!\"\n\n\"Oh, let's try it out!\" said Sonja.\n\n\"Later, Sonja, later. Now would you like to hand out your gifts?\"\n\n\"Ok!\" She picked up a cardboard box from under the coffee table, originally from a package I had ordered a while back. She handed it to Chloe. \"This is for you!\"\n\nChloe opened it and smiled. It was full of pinecones, with clay added to make eyes, noses, and ears and turn them into craft fair mice. \"Thank you, Sonja!\"\n\n\"Aw, that was very cute, well done, Sonja,\" I said, rubbing her head and making her wag her tail.\n\n\"Thank you, Master! Here, this is for you. Just be careful.\"\n\nI took the gift she gave me, newspaper wrapped around it like it like a sack of gold coins. I opened it up to see a little human figure made of clay on a platform, with different colors added for the clothing. Around it was a black cat, a yellow dog, and a white mouse.\n\n\"Oh, this is going right on my desk at work. Thank you, Sonja.\"\n\nSonja then turned to Momo and handed over her gift. \"And this is for you!\" Momo opened it, finding a smooth, cucumber-shaped rock. \"I found this in the creek. Since you don't have your buzzing toy anymore, you can use this instead.\"\n\nI made the mistake of drinking from my mug at that moment, as all the coffee came out my nose when I realized Sonja had just handed Momo a stone dildo. I laughed until I fell off the couch, with the girls failing to understand what was so funny. Once I had collected myself, Momo reached under the couch and pulled out three pieces of paper.\n\n\"Momo made these for you!\"\n\nShe handed them out, each of them a portrait of the recipient. Without question, her drawing skills had advanced by leaps and bounds. Her childish scrawls with crayons had become masterful pictures that looked like they were made in a college art class. She captured my face perfectly, as well as Sonja's goofy smile and Chloe's adorable shyness. They included all mediums, from paint to pencils. Had she been watching tutorials on YouTube?\n\n\"Momo, this is amazing! I can't believe you made these!\"\n\nMomo purred at the compliments, with both Sonja and Chloe in utter shock. I was so surprised by how well the girls did this year. The ingenuity and creativity were incredible, as not only did every gift show real talent and intelligence, but real thought as well. Sometimes they showed the minds of animals, and other times, they broke everything I thought I knew about them. To say I was proud of them was an understatement.\n\n\"All right, girls, now for the final round. Your stockings were just the icing, now here come the cakes.\" I moved over to the corner of the room, where several large packages were waiting. I handed the first one to Sonja, a long, flat object.\n\nShe unwrapped it to reveal a plastic sled, bright orange in color. When I was a kid at daycare, I used to spend hours going down the nearby hill on a sled just like that, I and all the other kids. That nostalgia was half the reason why I bought it.\n\n\"What's this?\" she asked.\n\n\"It's called a sled. What you do is you take it to the top of a snowy hill, get on it, and ride it down the slope. It's really fast and really fun.\"\n\n\"Yay! I want to ride it right now!\"\n\n\"We'll do it later. Momo, this is yours.\"\n\nI handed her a large box and she unwrapped it. \"A blanket?\" she said, reading the side.\n\n\"It's an electric blanket. You plug it into a socket and it warms up for you.\" Momo was utterly dumbfounded, unable to form words after hearing such a revolutionary concept. I then retrieved a smaller box from the nearby bookshelf and handed it to her. The picture on the front showed a device plugged into an electrical outlet, with it itself having its own outlet on the front and a clock right above it. \"Now, having an electric blanket is a responsibility. If you're not careful with it, it can start a fire, so you have to remember to turn it off whenever you're not using it, as well as keeping it away from things like water and the stove. This is a special timer for electronics. You plug the blanket into this, then this into the wall, and then set the timer for how long you want the blanket to receive power. This will help you in case you forget to turn it off. Always use the two of them together.\"\n\n\"Momo will! Thank you, Master!\"\n\n\"And Chloe, this is for you.\" I handed her the final box, and she unwrapped it to reveal a sleeping bag with a hood. \"That's for your little nest under the bed. It will keep you especially warm, and you can completely close it around your head with just a hole for your mouth.\"\n\nShe smiled and jumped into my lap. \"Thank you, Master!\"\n\nMomo and Sonja joined in, pouncing on me and hugging me tightly. \"Thank you, Master!\" they all said again.\n\n\"Merry Christmas, girls.\"\n\n--\n\nAfter taking a nap, I was sitting on the couch, eating breakfast and watching TV. On the other end of the couch was Momo, wrapped up in her electric blanket and playing with her toys. Sonja and Chloe were playing outside, throwing around the tennis ball sock and her other toys.\n\n\"Master, what is this?\"\n\nI downed my coffee and turned to Momo. She was holding up a small plastic bag with a cardboard tab, filled with brownish-green powder. She had pulled it from the bottom of her stocking.\n\n\"Oh, I forgot about that. That's a plant called catnip. I wasn't sure how you would react to it since you've become a person, but I thought we could find out. Go on, give it a sniff. See if you like it.\"\n\nMomo opened the bag and gave a deep inhale. She became still and I watched her, waiting for her reaction. It happened in the blink of an eye.\n\n\"Rowr!\"\n\nWith her eyes completely dilated and a hysterical grin on her face, she pounced on me, sending my coffee cup falling out of my hand and onto the rug.\n\n\"Whoa! Momo! Stop!\"\n\n\"Rowr!\"\n\nShe was grinding herself against me, her entire body shivering with a continuous growl sounding off like a siren. She ripped off her clothes and was dry-humping me, having completely lost her mind.",
        "\"Momo, get a hold of yourself!\"\n\nMy words had no effect on her and I found myself muted by her tongue in my mouth. Somehow, I will never understand, she managed to pull my cock out without inadvertently ripping it off. It entered her without me even realizing what had happened, somehow even when I didn't have an erection. From there, she rode me like I was a rodeo bull, swinging her body from side to side and slamming her whole weight down on my lap. She was screaming like a weed whacker as she pushed me off the couch and onto the floor. Considering that I was cramming rope, dropping down onto my lap over and over was little more than her punishing me. I was actually relieved when I got an erection, as it gave me the endurance needed to withstand the impacts. The fact that I was at full mast left her overjoyed as well.\n\nShe had never ridden me so vigorously before, it was like she was trying to snap my dick off! I just laid back and tried to enjoy it, wincing from the heavy drops she made. After several minutes, she invoked an orgasm in me, letting me flood her with cum. I had already blown a load that morning and the previous night, so I was more than exhausted and quite sore. I hoped that would be the end of it, but as soon as she realized that I had lost my erection, Momo spun around and began sucking me off like her life depended on it.\n\n\"Momo, honey, you can't draw blood from a stone!\"\n\nBut as soon as she managed to coax even a smidgen of firmness, she straddled me again and continued brutalizing my cock with her pussy, all while crying out in drunken bliss. I couldn't let this continue. I wrapped my arms around her and pulled her off me, but even though I was no longer inside of her, she wouldn't leave my pud alone. She rubbed it between her thighs, and the moment I tried to push her farther away from me, she pulled a hand free from my embrace and started giving me a violent handjob. While this was going on, she continued to growl with that crazy smile on her face.\n\nI heard the door open and close, Sonja and Chloe returning. \"Master, those frisbees you got me fly really far!\" the doodle cheered.\n\nHearing her voice, Momo perked up and wiped the slobber from her lip. \"Rowr!\"\n\n\"Run, girls!\" I yelled.\n\nMomo zoomed across the house and pounced on Sonja, knocking her to the ground. Considering her mental state, it was almost impressive that she was able to undo the zippers and Velcro, stripping away Sonja's coat and snow pants. Her remaining clothes didn't fare any better, and Sonja's moans could be heard. Momo was sucking on her breasts like a vacuum cleaner, her mouth wide open as if to inhale them, while her fingers rattled in her pussy.\n\nChloe ran over and hid behind me. \"What's wrong with Momo?\"\n\n\"She got a whiff of a special plant and it's made her hyperactive. She's completely lost her mind. We have to wait until she calms down and regains her senses.\" \n\n\"But Sonja won't last that long!\"\n\nTrue to her words, Momo's aggression had robbed Sonja of her strength. She was flushed and panting as if suffering from a fever, and Momo was gorging herself on her pussy as if dying of thirst. \n\nI took a deep breath. \"She won't have to. Time to fulfill my manly duties.\"\n\nI walked over and pulled Momo off of Sonja, then threw her onto the couch. With Momo on her hands and knees, I mounted her from behind. Her eyes rolled back into her head and her growling reached new levels as any last semblance of reason dripped out from between her legs. I was sore and tired beyond words, but I continued to hammer her pussy, using my cock as a weapon to try and beat the insanity out of her. I paced myself, using the minimal amount of effort needed to keep her satisfied. However, a couple minutes was all the time I had before my stamina gave out. I pulled out of her and staggered back, but she immediately pounced on me, wrapping her arms and legs around my body as she nuzzled my neck.\n\n\"Chloe, I need you to go reach behind the washing machine and grab what you find!\" She ran over to the washer under the stairs and looked behind it. She pulled out the vibrator, dusty after being hidden for so long. \"Now wake up Sonja and follow me to the bedroom. I'm going to need your help for this.\"\n\n--\n\nFor hours, Sonja, Chloe, and I worked together to pacify Momo until the effects of the catnip wore off. Time blurred in my mind, fatigue and aching blood vessels costing me all higher thought. I remembered seeing Momo on her back and I was giving her the drilling of her life, while Sonja and Chloe sucked on her breasts. Later, I had her on all fours, throwing my full body weight against her while Chloe whimpered in bliss, feeling Momo's tongue violate her slit. Again and again, I had to stop and take a rest, to try and collect myself and build up some stamina while nursing my stinging manhood. I left Momo in the care of Sonja and Chloe, arming them with the vibrator to use once they had wrestled her into submission. I don't know how many times I came. Before long, it was more excruciating than enjoyable, as I soon stuck with only dry fire. \n\nAt last, once the sun had set, Momo collapsed on the bed, passed out after her final orgasm. The four of us were completely exhausted and sticky with each other's bodily fluids. My penis looked like a pork tenderloin. Sonja and Chloe were in a similar state, their bodies covered in hickeys and bite marks and their jaws and tongues aching.\n\n\"Master, I don't wanna play anymore,\" Chloe whined. \n\n\"I was planning on making a big Christmas dinner, but I... I just can't do it,\" I said while panting. \"Everyone will have to fend for themselves tonight. If anyone needs me, I'll be outside, using the snow to try and numb my dick.\" I turned around and started limping towards the door. \"Merry Christmas, girls.\"\n\n--\n\nMomo stumbled into the kitchen the following morning, her usual messy hair now a full-blown bedhead afro. \"Hmmm, what happened yesterday? Momo can't remember everything. Momo had really weird dreams.\"\n\nWe all turned to her, still worn out from the previous day, and even a little bit mad at her. She noticed our bitter expressions. \"Did Momo do something wrong?\"\n\n\"Momo, do you remember that little plastic bag from yesterday? The catnip?\"\n\nShe rubbed her chin, trying to jog her memory. \"Maybe...\"\n\n\"Well you're not getting any more. You're not allowed to have catnip ever again.\"\n\n\"What did Momo do?!\" she asked.\n\n\"Also, as much as I hate to say it, I won't be able to play with you girls for a few days. I really got chafed last night.\" \n\nMomo was horrified but Sonja and Chloe nodded in agreement. They knew how hard I had fought. Honestly, I was glad to be going back to work. A day in my office chair, deprived of any kind of sexual stimuli was exactly what I needed. \n\n\"You girls be good, I'll see you tonight.\"\n\n--\n\nIt's funny how snow loses all of its beauty the day after Christmas. Until then, it's beautiful and you dream of a white Christmas morning with hot chocolate, gifts, and Christmas music, and then the day after, it's just in the way, sort of like pedestrians. It's like December 26th is the unofficial start of January. I reached my office building, getting out of my dirt and salt-caked car and making the trek through the windy morning. Ah, it was nice to be back in my cozy office.\n\nAs I worked, I could hear my coworkers out in their cubicle maze discussing gifts they had received and the pleasant details of their holiday, as well as laughing about the negative moments. My few office knick-knacks had some new additions: the clay figures that Sonja had made. I also had the pinecone ball that Chloe gave me hanging from the ceiling.\n\n\"Who made those for you?\" my secretary asked, coming into my office and handing me a file of reports. It seems that a lot of our clients had suffered from misfortune over the holidays, so we would be busy.\n\n\"Oh, my nieces.\"\n\n\"So, you had a nice Christmas?\n\n\"Yeah, it was very fun, but very exhausting.\"\n\n--\n\nThe following weekend, I decided we should all have some fun outside and break in Sonja's sled. As we were putting on our snow gear, Momo was standing by the door and examining the giant piece of plastic.\n\n\"What do we do with this thing?\" she asked.\n\n\"We need to find a hill with a nice clear path. Then we sit on the sled and ride it down. Do you girls know any good spots?\"\n\nSonja's hand shot up. \"I know! I know!\"\n\n--\n\nThe four of us stood at the top of a hill deep in the wilderness. It was very steep, and down below, I could see a see a stream bed. I had been to this spot a couple times before in our hikes, but only now did I realize how steep the hill was. It was maybe a hundred-yard drop at a 40\u00ba angle, which can give you a lot of speed. For all the times I had seen it, the stream below had been little more than a couple inches deep even after big rain storms, but seasonal flooding had worn away the hillsides, leaving only tall grass growing.\n\n\"Will this work?\" Sonja asked, wagging her tail.\n\nI didn't answer, the other girls and I suddenly coming down with a case of vertigo.\n\n\"Yeah, this should do it. I'll go down first, just to make sure it's safe.\"\n\nI sat down on that sled and my vertigo vanished, washed over with a flood of nostalgia. Damn, it had been a long time since I had sat on a sled. I had bought snow pants for this very occasion, and I realized now how much I missed them. I took a deep breath, gripped the yellow rope that allowed one to steer, and pushed myself over the event horizon.\n\nIt was over in the blink of an eye. I rocketed down the hill and shot out across the frozen stream, not stopping until I intentionally rolled out of the slide and wiped out. Seeing me thrown from the sled like a ragdoll, the girls were horrified.\n\n\"Master, are you ok?!\" Sonja called.\n\nI replied with a loud \"WOOO!\", drunk on endorphins and suddenly feeling ten years old again. The hill had been smooth and without rocks, and the stream, as well as being frozen solid, had a thick cushion of snow. I made the climb back up the hill, burning calories I didn't even know I had, and gave the girls a hug while laughing hysterically.\n\n\"Oh man, it's been so long since I did that! Ok, who wants to ride down with me?\"\n\nSonja started jumping up and down. \"I wanna go! I wanna go!\"\n\nShe and I sat down on the sled with her in the front and my arms around her. \"Ok, are you ready?\" She nodded. \"Do you want to wipe out like I did?\"\n\n\"Wipe out?\"\n\n\"You know, fall to the side and tumble out?\"\n\n\"Is it fun?\"\n\n\"Ridiculously.\"\n\n\"Ok!\"\n\nI pushed us forward, and for a moment, Sonja's added weight left us in a crawl, but once we hit the incline, we shot down. The air pushed back Sonja's floppy ears and she howled from the overwhelming excitement, unable to even process what was happening. The sled reached the stream with a bump and as we zoomed across the frozen plane, I grabbed the side of the sled and tipped us over. In a cold, white flurry, Sonja and I were jettisoned and tossed out into the snow. Sonja got up first, hollering just like I had with her body flushed with adrenaline and endorphins.\n\n\"Again! Again! I want to ride again!\"\n\nI got up a little slower this time. \"Not so fast. Momo and Chloe each get a turn.\"\n\nWe climbed back up the hill, and this time I could really feel the effort needed. I was gasping for air by the time I reached the top. \"Ok, who wants to go next? Momo? Chloe?\"\n\n\"Momo will go,\" my cat said. We sat down on the sled but she got behind me, holding onto me tight. \"Momo doesn't want to fall out.\"\n\n\"Ok, I'll try to keep us in the sled. Are you ready?\"\n\nI couldn't see it, but Momo had her eyes screwed shut. \"Uh-huh.\"\n\nI pushed us forward, and in a second, Momo's feline growl was echoing through the ravine as we took off down the hill. Her arms were so tight around my chest that I was struggling to breathe, but we made it down onto the stream and slid across flat snow before coming to a gentle stop.\n\n\"There, see? Now that wasn't so bad, was it?\" Momo didn't answer, keeping her face pressed against my back. \"Momo?\"\n\n\"It was ok.\"\n\n\"Good, I'm glad you liked it.\"\n\nOnce more, I made the trek upstream and then climbed the hill. There was one girl left, and she was looking very nervous.\n\n\"What do you say, Chloe? Want to go for a ride?\"\n\nShe kept her eyes downcast and repeatedly shifted her weight from one foot to the other. \"I don't know, it seems really scary.\"\n\n\"Trust me, it's not nearly as scary once you actually start going. And don't worry, I'll be riding with you.\"\n\n\"Ok,\" she squeaked.\n\nWe both sat down on the sled, but unlike Momo and Sonja, she was sitting backwards, choosing to use my lap as her seat. She was holding onto me like a baby monkey, her face buried in the side of my neck and her limbs locked around my chest.\n\n\"Ready?\"\n\nShe nodded, with her cold nose tickling my neck. Just like with Momo, as soon as gravity took over, Chloe released a siren-like cry, so high pitched that both Sonja and Momo were left wincing. I held the guiding rope with one hand and had my arm wrapped around her small body. The ride went without accident, the two of us reaching the stream and sliding through the same path I had made with Momo, even stopping at the same spot.\n\n\"How was that, Chloe?\" Instead of speaking, she simply wiggled, still keeping her face hidden. \"Good. Let's head back up.\" I tried to get to my feet, but Chloe hadn't released me. She was holding on like a backpack. \"Chloe, sweetie, can you let go?\" She shook her head. I couldn't help but sigh. \"All right, then.\"\n\nI don't know how I did it, but I managed to climb back up the hill, not only pulling the sled with me, but also carrying Chloe. Though I wasn't carrying her so much as letting me hang from me like a sloth on a branch. By the time I reached the top of the hill, my stamina was exhausted and I simply rolled onto my back on the ground.\n\n\"Girls, you go ahead and ride as much as you want... I'm just going to lie here for a few minutes.\"\n\nSonja grabbed the sled and leaped down the hillside, riding down on her stomach while whooping in joy. For the next few hours, the girls and I took turns zipping down the hill, in different combinations and different styles. Momo and Chloe preferred simply sledding the normal way, but Sonja did every trick she could think of, from building jumps to standing on it like a snowboard. Chloe refused to go down solo, so one of us would always ride with her. But with these short-lived December days, the sun was fast approaching the horizon.\n\n\"Ok, girls, one last trip and then we all head back. How about we all ride together?\" It was a tough fit, but the four of us managed to squeeze onto the sled, going from smallest to largest with Chloe in the front and me in the back. \"Ready, girls?\"\n\n\"Ready!\" they all cheered.\n\nOur combined weight required our combined effort to actually push the sled over the edge, and once gravity took over, it became a grinding conflict of friction and momentum. After all times we had gone down, the snow was pretty hard packed, but it was still buckling and slowing us down. Regardless, we shot down the hill and onto the frozen creek faster than before. The packed snow and exposed ice sent us farther than we had ever gone, and I could see us rocketing towards a fallen tree.\n\n\"Girls, bail!\"\n\nI rolled out of the sled with Sonja in my arms, Sonja pulling Momo, and Momo pulling Chloe. We landed in fresh powder and Momo and Chloe got up, sputtering and disoriented. \n\n\"One of you girls grab the sled and let's go home.\"\n\n--\n\nIt was a race to return to the house, as both the sun and the temperature were rapidly dropping. We made it back just as the last beads of light disappeared from the horizon. We stripped off our winter gear, our exposed cheeks red from the cold.\n\n\"I'll get started on dinner in a little bit. First, I'm really in a mood to take a hot bath,\" I said, rubbing my face to try and warm the numb skin.\n\n\"Oh! Can Momo join?\"\n\n\"Of course, come on up.\"\n\nWhile Sonja and Chloe turned on the TV and set it to Animal Planet (their new favorite channel), I built up the fire in the wood stove and Momo filled the tub upstairs.\n\n\"Master, it's ready!\" she called. \n\nI met her in the bathroom and we both stripped down. My eyes licked Momo's body as the last articles of clothes came off. It had been too long since I had seen her naked. Sure, we played together almost every night, but I always had the lights off then. I had missed watching her prance around the house in the nude.\n\nI got into the tub first, making sure the temperature was right before settling. A groan of bliss escaped my lips, making Momo jealous. \"Come on in, kitten.\"\n\nShe stepped in and lowered herself below the water, purring in euphoria. By the time she lied back against me, it sounded like there was a V8 engine in her throat.\n\n\"Master, this feels sooooooo good,\" she mumbled.\n\n\"I thought you'd like it. Back when I bought this house, my first thought upon seeing the tub was of taking romantic baths with you girls.\"\n\n\"What does 'romantic' mean?\"\n\n\"Romance is what happens when two people are attracted to each other and the atmosphere becomes very... arousing.\"\n\n\"Like when Momo and Master play together?\"\n\n\"Sort of. Something is romantic when it makes you think about the person you love and you become extra happy.\"\n\n\"Momo loves Master.\"\n\n\"And Master loves Momo.\" I raised a wet hand and began rubbing her ears, further intoxicating her with physical ecstasy. \"You're the first cat I've ever seen that actually enjoyed getting wet.\"\n\n\"Momo doesn't, really. But it's just so warm, Momo can't help it.\"\n\nShe slipped down further into the water, dipping her head just below the surface until only her ears stayed dry, poking up like two periscopes. She blew bubbles for a few seconds and then sat back up. Her body steaming, she sighed in bliss and leaned back against me, with nothing but a thin film of water between our naked bodies. We stayed like that for a bit, silently enjoying the warmth of the water and the sensation of each other's company in utter stillness. After about ten minutes, the heat began to take its toll, though. I was feeling lightheaded and areas that were kept dry out of the water were now starting to glisten with sweat. It was just about time to get out, but I still had something I needed to do.\n\nI looked down at Momo, watching the water lap at her breasts with every breath she took. Her nipples were half-submerged, and despite the warmth, fully erect. I slid my hand down her chest and started caressing her areolas. Her eyes closed, Momo's breath began to quicken. My other hand moved through the water and found her flat belly. My fingertips moved down her soft skin and slipped between her legs. Normally, I would penetrate her with my fingers, but I decided to take a gentler approach. With just my middle finger, I started skimming the entrance of her labia, ever so gently stimulating the nerves. While that was going on, I continued to trace her areolas with the smallest amount of contact possible. Momo kept her eyes closed but was now panting, surprisingly aroused from so little stimulation. The teasing attribute seemed to be magnifying the sensations. The longer I teased her, the more she reacted, with the deprivation itself giving her pleasure.\n\nTime to get a little rougher. My fingers slipped inside her, and at the same time, my hand squeezed her right breast and my lips closed around the tips of one of her ears. Momo let out a single cry, as clear and pristine as a bell chime. Now I was being aggressive, clumsily groping her tits while I chewed on her ears and drilled her with my fingers.\n\n\"Master...\" she gasped. \n\nI sat up on my knees, picking her up with me. I had her leaned over, supporting her with my arms across her chest, while still violating her with my hands. No longer nibbling her ears, I was now kissing her neck, all while she moaned and water dripped from her nipples. I let her lie against the end of the tub, her rear facing me with her wet tail curling in anticipation. With a quick dab of soap for some extra lubrication, I grabbed her by the hips and mounted her from behind, my manhood stuffed into her gate and making her whine. ",
        "The water in the tub sloshed back and forth as I rammed her. Since our bodies were wet, every time her ass met my lap, it produced a clap much louder and deeper than usual. The water caught the light perfectly, letting me see the ripples move through her body with every thrust. Momo was moaning in happiness while keeping her face buried in the crook of her arm. Forsaking my hold on her waist, I reached under and cupped a warm breast. I then stopped moving, Momo realizing that I wanted her to do it in my place. Now gripping the edge of the tub instead of leaning against it, she began throwing her body back against mine, her voice reaching new heights as she could now control how hard and how fast she was fucked. I watched her with a smile on my face, enjoying the sight of the effort she was putting in. \n\n\"Master, Momo is going to-\"\n\nI kissed her before she could finish. I pulled her back against me, holding her by the arms while I resumed my thrusts. She couldn't maintain the kiss, instead pulling her lips from mine and crying out when she had her orgasm. Her strength had left her, I picked her up out of the bath and brought her into the bedroom.\n\nI laid her out on the bed and spread her legs. She looked up at me, her lips parted, her cheeks flushed, and her eyes half open. I cupped her cheek and brushed my thumb across her lips. She reached out to me as if for a hug. I embraced her, returning my cock to its rightful place and regaining my earlier rhythm. Her arms and legs wrapped around me and joined our tongues swirled. It only took me a couple minutes to finish, making her purr as she felt me empty my reserves into her womanhood.\n\nWe stayed there for a minute or so, with me still inside her, the two of us simply waiting until we had caught our breath. With the water evaporating from our bodies, we finally separated and got to our feet.\n\n\"Come on, let's go have dinner.\"\n\n\"'Kay, Master!\"\n\nPlease comment! I'm desperate!"
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "cat girl",
        "dog girl",
        "comedy",
        "mouse girl",
        "cute",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/master-master-pt-06"
}