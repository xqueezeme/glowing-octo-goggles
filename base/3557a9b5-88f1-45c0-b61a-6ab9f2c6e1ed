{
    "title": "Room with a Secret Ch. 05",
    "pages": [
        "\"Guess who I've got waiting in the study?\" Mr Crowfoot looked immensely pleased with himself. But he would not say. Would not reveal who it was in the study. He just told Jim to undress there in the hall.\n\nJim found himself just so nervous at doing what Mr Crowfoot said prior to entering the study. Worse when Mr Crowfoot suggested he walked in not only naked but also erect to meet someone. A more than unusual salutation. Minutes before Jim had received an urgent telephone call. Had at first been worried Mr Crowfoot had hurt himself, perhaps had another fall, but being told to make sure he was showered and his 'cock' at the ready did rather suggest all was well and would be very well indeed for Jim.\n\n\"Undress? Here? I mean... who is it?\"\n\nBut the old man would not say.\n\n\"Who,\" he said, \"who?\"\n\n\"Come on Jim, get it up.\" Mr Crowfoot rotated his walking stick, grasping the end rather than the handle and brought the carved handle up under Jim's penis. Not to whack his balls this time but to lift his limp penis. He bounced it up and down on the carved wooden erection, sending it up into the air and down again by way of encouragement. \"Come on Jim, rise and shine! You want to be looking your best -- looking eager for our visitor.\"\n\nIt was not doing much good. He was not being 'encouraged.' Jim was not much into wooden cocks!\n\n\"Have a look at this then.\" Mr Crowfoot handed Jim an old book. \"Page 53 I think will do the trick.\"\n\nJim opened it at the suggested page. What sort of book did Mr Crowfoot collect? Upon the page a delightful colour plate showing anything but a picture of old London Town or a painting of Windsor Castle from the river. It was a print of a painting, undoubtedly, but the sort of painting that most definitely would not be shown in the local public art gallery. It showed a group of young people out in a woodland setting, dancing a little like a classical picture of nymphs and satyrs and, indeed, as undressed as representations of imagined classical scenes and tales so often are. There was more than a gentle suggestion of eroticism, not an implied eroticism but a very much in your face eroticism. \n\nThe young people were clearly playing a game, and indeed a game played in classical times, 'blind man's buff' and very much in the 'buff,' but were much more modern, if not very modern, people. Two girls and three young men, all quite naked; one of the girls blindfolded and shown reaching out to catch one of the other players. Delightfully she had caught one of the young men by his penis and was holding it tightly and pulling so that it was shown elongated and erect. There was no doubting, either, that the artist by showing the other penises rather swollen, but not actually erect, was implying the whole game was being played in a sexual way. The painting vividly showed movement and it was a delight to see the laughter on the faces and the way the artist had painted the girls and young men. The girls were very curvaceous and pleasing, their breasts and private hair very much on show.\n\n\"Where did you get this?\" Jim turned to another page, but the first illustration had had the desired effect. The painting and the idea resonated with him and had caused Jim to stand.\n\n\"Leave the book and in you go.\" The old man tapped Jim again with his stick. This time on his rump and Jim stepped towards the study door. He did so with apprehension. Who was within? Jim reached for the handle and turned it. Perhaps within there were a group of young girls with one blindfolded and ready to play the game in the picture. Perhaps.\n\nWhat was he doing? Could he, a few months before, have imagined himself doing this. Opening a door to meet someone whilst not only naked but... It was there, close to the doorknob -- his knob -- his penis tumescent.\n\nThere was not, though, a group of young women in the study. Just the one. Jim stood in the open doorway astounded. How had Mr Crowfoot found her? He had had no idea. Had not thought of her at all. It was Miss Rachel Redmond no less.\n\nJim's jaw had dropped and he had an unexpected jelly like feeling in his legs. The teacher he had desired when in the 6th form, the one he had mentioned to Mr Crowfoot was there in the study, alone and looking at him. Jim's ingrained response, learnt from when a small boy, of respect and obedience to teachers kicked in. \"Err, how are you, miss?\" He felt his penis bobbing but he did not feel it subsiding. Not a bit of it.\n\nShe was sitting there on the Chesterfield, knees together, looking straight at him. He felt suddenly like a little schoolboy caught doing something wrong, coupled with the intense embarrassment he might have felt, indeed, had Miss Redmond somehow walked in on him fresh from the showers after football or something. This combined both feelings, being in the wrong and embarrassed, because his erection was the 'wrong' thing and he was indeed naked. Perhaps it was as if he and a girl had been caught fucking after school by Miss Redmond with him instinctively leaping from her and standing facing the teacher with hard and wet erection -- the schoolboy very much caught naked doing something wrong! Of course, such a thing had never happened. No girl had suggested fucking to him, after school, at school or anywhere else. There had been no opportunity, alas, for Miss Redmond to catch him.\n\nHer reply came easily and with that unfazed calmness teachers, not least Miss Redmond, have. \"I'm very well, Jim and it is good to see you again.\" Was there a slight lift of the eyebrows as she said 'see.' \"You're looking well.\" Her eyes dropped very obviously to his erection. \"Mr Crowfoot said you had something to show me and I think I know what that is.\" She reached out a hand and beckoned.\n\nJim stepped forward, just so relieved the room was clearly having its normal and remarkable effect on women, feeling so embarrassed, yet revelling in his unexpected exposure to his former teacher. He did not so much as touch it, rather just came forward and carefully set his erection and balls down upon Miss Redmond's outstretched hand as if he had been caught with something he should not have brought to school and it was being confiscated. Such an exciting and enjoyable thing to do, just setting his penis on her hand. His penis being confiscated. Would she perhaps say he could have it back after school? She did not, though, have a desk to hide away the confiscated item. Where might she put it instead?\n\nHis penis in her palm, his balls upon her fingers; he felt the fingers move, gently stroking his balls; moving them as her fingertips reached his perineum behind, making them swing.\n\n\"And what have you been doing,\" she asked.\n\nJim found himself telling Miss Redmond his history since school; such a normal conversation if it was not for his nakedness, erection and Miss Redmond's fingers; it was just the sort of conversation a former teacher might have with an unexpectedly met former pupil. He could not help himself. She had asked.\n\nShe was as he remembered, tall with ginger hair tied back. He found himself staring at her chest as he talked, she was busty, really busty. He had not forgotten that.\n\n\"Still interested in my chest, Jim?\"\n\nShe had known, known what he had been looking at in lessons. \"I... I'm sorry...I...\"\n\n\"All the boys did, Jim, I can't help having a big chest. What did you want to do, sitting there in class? Did you...\" she bounced his erection up and down in her palm; it made slapping sounds as it dropped back into her hand, \"have an erection?\"\n\nThe word 'erection' coming from Miss Redmond's lips was just so erotic. Imagine if she had said or asked that question in class. He would have died from embarrassment but what if she had asked someone else.\n\n\"Well?\"\n\n\"Once or twice, Miss Redmond.\"\n\n\"I wondered. I wondered if other young men did. You see, I had, I have sexual feelings too. What would you have liked to have done? Had me roll your erection between them?\"\n\nJim swallowed. How many times had he thought that? Had Mr Crowfoot put her up to these questions. What had the old man asked her and told her to do?\n\n\"Or come over my tits?\"\n\nMiss Redmond saying 'come' meaning 'come' and 'tits' -- amazing!\n\nShe smiled. \"I expect many -- or am I being presumptuous -- of your classmates wanted to do that? Did you talk about me like that? Is that what young men do?\"\n\nNot actually, not in that detail, certainly they had talked about her 'big tits' and had made some lewd comments but not in that sort of detail, more about breast manipulation, a few speculations on boyfriends and a general consensus that they would like to 'fuck her.'\n\n\"No, I don't think we did. I mean, of course not!\"\n\nA look of scepticism on Miss Redmond's face. \"Just wanted me to suck or be fucked eh?\"\n\n\"Something like that.\"\n\n\"So, which is it to be?\"\n\n\"Huh?\"\n\nAnd without any warning, Miss Redmond's tongue came out from between her lipsticked lips as she leant towards him and licked all the way up the underside of his cock, right up his fraenum. Jim gasped in surprise and almost, almost 'exploded' onto Miss Redmond's face. His teacher, his ex-teacher, had just licked his cock.\n\nBut what did he expect? He was in Mr Crowfoot's study after all. And she did it again before dropping her mouth over it. Wonderful!\n\nIt seemed to Jim, almost, that Miss Redmond was in control but that was not how the study worked at all. Had Mr Crowfoot told her what to do and say? He felt he should regain some measure of that control. With her mouthing his knob there was a strong risk of him losing it!\n\n\"I...I always wanted to see you without your blouse and bra, err, Miss Redmond.\"\n\nHis ex-teacher raised her head, \"And all the other boys no doubt.\"\n\nThat was just so true!\n\n\"Yes, well, I certainly did, imagined a hot day and you topless.\"\n\n\"By boobs all wobbling around, especially when I wrote on the board?\"\n\nJim nodded. That was it, that had so been it!\n\n\"Shall I show you or suck some more?\"\n\n\"Might I undo your blouse -- do it myself.\"\n\n\"You naughty boy. You do that and I'll spank you.\"\n\nWould she? Would he like that? Either way he reached with his hands. There was no resistance as one by one he undid the buttons bringing her lacy white brassiere into view. It was just so exciting to pull the blouse from her, pulling it out of the waistband of her skirt, leaving her in that white undergarment.\n\n\"I'm going to have to spank you now, Jim. What have you done!\"\n\nHe stood there, breathing so hard with excitement. Unbelievable to be there naked and erect in front of his ex-teacher -- and she with her big breasts pushing at her exposed brassiere. She might be threatening him with a spanking but that was hardly a threat, more an erotic fantasy!\n\n\"What I'm going to do, Miss Redmond, is push my cock in your mouth again and then take your bra off.\" \n\nQuite amazing just to step forward and push his knob at her lips, see them parting and it going into her mouth. To spurt in there, to see her swallowing or it running from her mouth; see his stuff dribbling down her chin. Not this time, though; he was going to fuck her if he could; but sometime -- another time. If Mr Crowfoot could arrange... times -- lots of times! Seeing it there -- in her mouth -- phew! Jim reached behind her and undid the clasp of the brassiere. He was going to get a spanking! But she was unresisting.\n\nStepping back, pulling his knob from her mouth Jim gazed at Miss Redmond's revealed breasts. Such pale pink areolae, with a so exciting diameter to them. Little nipples but surrounded by really big pale pink discs. Jim took in the puckering of the skin, the little bumps encircling and the overall firmness of the breasts. No sag, just handfuls (to his mind) of loveliness. Two items he had very much wanted to see back when at school and now they were there for his delight -- and to grope.\n\n\"Well?\"\n\n\"Very pretty, Miss Redmond, you have lovely breasts.\"\n\n\"I'm still going to smack you. You can't get around punishment that easily.\"\n\nJim was not going to submit to that until he had her naked. The idea of lying across her bare thighs pleased him -- as did the idea of having her across his!\n\nSubmit? But they were in the room -- he was in control. He could tell Miss Redmond to take the rest of her clothes off; imagine it was a biology lesson and she teaching human reproduction, not drawing in chalk on the board but to use her body and his to illustrate. Of course, that had been a fantasy of his -- and how many other boys? The sex lesson for real. But, perhaps, another idea\n\n\"Take your clothes off, Miss Redmond. Imagine I'm telling you in class and there is nothing you can do to stop yourself. I've hypnotised you! And then I'm going to make you forget but the class won't.\" No, the class wouldn't! They would stare and be amazed that he, Jim Costin, had this power. His gay reputation had not started at school as far as he knew but, even then, he had had no luck with girls. Perhaps he had been too shy, or was he just unlucky? That, though, would have impressed the other boys. Impressed them big time.\n\nShe gave him a bit of a look but did as she was told. Was his instruction at variance with Mr Crowfoot's? So good to watch her unclip her skirt, let it fall and then roll down her tights and so see her in just her knickers.\n\n\"I'll do them. Now over my knee.\"\n\nJim sat on the sofa and watched as Miss Redmond knelt and then duly placed herself across his bare knees and legs; and not just bare knees and thighs but bare penis as well. He could very much feel her soft, warm flesh against that. Of course, in school he would be dressed but he imagined his classmates staring at their teacher across his lap. Those at the other end of the room standing to see, crowding forward. And how many of the boys would not be erect within their trousers. He could not imagine there would be a single one left soft as he started to roll Miss Redmond's knickers down, the beginning of her lovely bottom cleft coming into view as he gently began, with both hands, to roll the purple nylon across and down her cheeks. What a fine bottom! Jim was starting to become a connoisseur what with Nurse Evans, Sophie and Jenny. \n\nDown and down rolled the nylon as more and more bottom came into view.\n\n\"Ready?\"\n\n\"You're not going to, Jim, not really.\"\n\nBut he was. He certainly was! So good to raise his hand and then bring it down. Outside the study was Mr Crowfoot listening? Erotic to see the cheeks wobble at the impact, hear the sound and, indeed, just be doing the act. Three firm slaps with his hand. So good, so good!\n\nGood too to feel his penis against her, if a bit squashed by her body. It came to him that he could make himself more comfortable if he moved Miss Redmond a bit and let his penis stick up between her thighs. Not just against her smooth thighs but against her knickers and not just against them but from the inside.\n\n\"Lift your bottom.\" He reached and tugged the front of the knickers down; against his fingers he could feel the springiness of her soft curls. He had not yet seen them but so hoped they would be as red as her hair. Not a new hope -- he had thought about them a lot when at school, even when Miss Redmond had been writing on the board. When she turned to face the class, his eyes had often been not on her face, not on her moving lips but the front of her skirt, imagining what lay underneath -- red, curly and, to him, so erotic. Sparse or full? The divide of her mons veneris hidden or visible through the covering?\n\nJim arranged himself so his hard penis moved upwards, pushing the knicker material out of the way as his engorged knob slid -- and it did slide. He was very pleased to find Miss Redmond was wet enough for him to slide up her sex twixt knicker and soft wet flesh. He could just so feel it all, the resistance of the nylon, the slippery softness of her sex and the tickling of curls. And there it was, right in front of his eyes: his knob poking up between her cheeks, its little 'eye' looking up at him.\n\nAnother smack and he could feel his hand on his knob, smacking it too! And, of course, the sudden impact made Miss Redmond move and that gave a lovely little stroke to his cock. Another two smacks and Jim reached and fondled Miss Redmond's breasts. He so had her -- his to play with and enjoy. So exciting. Those so full breasts he had seen enclosed at school now within the palms of his hands. Soft, voluminous -- real handfuls of femininity!\n\n\"Are you on the Pill, Miss?\" His natural respect for the teacher back again. An ingrained habit to address her formally. Respectful whilst groping her breasts?\n\n\"What a considerate young man you are, Jim, and such a nice cock. I can feel it. Yes, I do not want babies yet. I have enough children to look after at the school as it is! I wouldn't want you getting me in the family way.\"\n\nIt was going to happen. That was what she meant. The idea though. It was not something he had really thought about at school but, now, the idea not just of sexual intercourse with Miss Redmond, not just impregnating her with his spermatozoa, but actually making her pregnant had a considerable erotic thrill. He could see his knob between her cheeks, perhaps already leaking sperm. A long way yet from their goal but he would make sure so many were much closer. Best though that she was on the Pill. He would not really want to make her pregnant... well...not really.\n\nHe got his ex-teacher to stand up. Absolutely wonderful. Miss Redmond almost naked. Her ample breasts so there and the top of her bush showing red above the partially tugged down purple nylon. Indeed, it was all as red as her hair; more so, if anything. Perhaps it looked the more arousing with her pubic hair being only partly revealed. How incredibly exciting it would have been for the boys at school to have seen just the merest hint of that hair. Perhaps Miss Redmond in shorts taking a PE class or something. Perhaps playing basketball and leaping with hand in the air so her top came up and for a moment the boys saw not just tummy button, not just her smooth stomach but, with the stretching and the shorts cut rather low, a few stray ginger curls appearing over the top of the waistband. There for a moment and then gone. Or else in the swimming bath Miss Redmond not having trimmed herself and, again, stray ginger curls appearing out of her swimming costume where it ran between her legs. Just a few so vividly red curls.\n\nNot, as far as he remembered -- and he probably would have remembered -- had Miss Redmond taken the class either for PE or swimming. Had it happened and those hairs been seen, she would have known; would have known something was 'upsetting' the boys. Naked under their thin PE shorts or in the school regulation swimming costume -- very much not shorts -- there would have been no hiding erections. Poking at thin cotton white shorts or clearly outlined through the wet and rather tight swimming costumes it would all have been half way to Miss Redmond seeing the boys naked and erect. What would she have thought?\n\nArousing thoughts but the knickers had to come down and down they did. Jim had the answer to his thoughts about what Miss Redmond's hair looked like. He could, indeed, discern her slit through the curls. The hair neither sparse nor thick but rather in between. His finger went to it, safe in the knowledge the room permitted him, really, to do what he liked. Lovely to stroke his finger up and down and inch or two of her slit before venturing further between her legs. How he had imagined reaching under her skirt when in class. Down to the floor went the knickers and then, slowly, Jim brought his hand up her leg, stroking the skin, reaching knee and then travelling up inner thigh. Like under the skirt only no skirt and no knickers. Jim touched, Jim felt unprotected labia, Jim fingered and stroked; finally, he pushed fingers up into Miss Redmond, up her feminine canal -- the one spermatozoa go up and sometimes babies come down. Wonderful -- he had his fingers inside his former teacher, and he could see his hand there, right between her naked thighs.",
        "\"May I fuck you?\"\n\n\"What language, Jim. A definite smacking for you but then, shall I fuck you instead?\"\n\nWhat had Mr Crowfoot said to her?\n\n\"Over my knee, Jim.\"\n\nShe sat on the sofa, pulling his fingers from her wet vagina as if it was perfectly normal that he should be doing that, and patted her knees. Jim knew he did not have to be spanked. He was totally in control, unless Mr Crowfoot knew something more about the room than he had let on; something about the longer you used it the stronger your instruction. That what Mr Crowfoot had implanted in Miss Redmond's mind would override anything Jim said. But it excited him, the thought of being spanked by Miss Redmond. He stood and half unconsciously raised his fingers to his nose, taking in Miss Redmond's scent. There she was again seated on the sofa with his exposed knob inches from her.\n\n\"Suck my cock,\" such an amazing three words to say to his ex-teacher and then see and feel her just do that. \"Deeper, yeah!\" More than half was now in her mouth. He wondered if she could take more. He moved it, watching it sliding between her lips, in and out. He was fucking her mouth. Again, the thought of the classroom, doing that to the seated teacher, as his fellow 6th formers stared. Jim Costin, of all their classmates, with his cock in Miss Redmond's mouth. The temptation, of course, to come and fill her mouth. The idea! But, did he not want to fuck as well?\n\nBest to remove himself before it all became too much and lie across Miss Redmond's knees. She had spread them a bit so he could let his cock down between them. What he had not expected was for her to bring her legs together and trap him, squashing his erection between them; held whilst he was spanked. And spank him she did. It was loud enough for Mr Crowfoot to hear if he was not far from the study.\n\nBreathing hard, Jim lay there across her knees, as Miss Redmond gently stroked his now smarting cheeks. She really had smacked him. It had not been mere patting of cheeks. He felt her release her knees but then her hand took hold of his erection and slowly moved his foreskin.\n\n\"You are nice and hard, Jim. I've often thought of that; punishing the big boys over my lap, their penises hanging down as I wank them. Perhaps the whole class -- a great big puddle building up on the floor as they come one after the other.\" She smiled, \"I would need a cane or a ruler. I wouldn't want to bruise my hand. I expect they would get a little tired though with all that smacking -- and all that wanking.\"\n\n'Wank -- wanking,' such words to hear from Miss Redmond. Jim wondered: had Mr Crowfoot told her to tell him her intimate thoughts? Had she really thought those things, back when she had been his teacher? But he didn't want to come on the floor, not this time anyway. He got up, once more standing in front of her with his erection so strong.\n\n\"Go on, Jim, you lie down and I'll mount you.\"\n\nMiss Redmond rose, his ex-teacher standing with him. Taller than Jim, he had to look up to her -- once again that schoolboy nervousness came to him. It made him drop his eyes to her more than ample breasts. Nervousness, yet lust. He touched his knob to her curls.\n\n\"May I kiss you?\"\n\n\"I suppose you might.\"\n\nHis arms went up around her neck and he drew her lips down to his. It was like the first kiss of a new relationship; tentative at first and then Jim realised her lips were open. It was long, a kiss with tongues and eyes closed (at least his were). Passionate and sexual, and all the time Jim could also feel the gentle touch of Miss Redmond's springy and red curls upon his exposed and much stimulated knob. All something so desired those few years ago and now actually happening -- a consummation of fantasy and desire.\n\n\"Now lie down Jim.\"\n\nIt was going to be 'cowgirl,' Miss Redmond riding him.\n\n\"Now that's what I like, a man both lying down and standing at the same time.\"\n\nCould he have imagined it back in school: Miss Redmond making naughty jokes? He just lay there, along the Chesterfield as Miss Redmond slowly climbed up above him. What a sight. Long legged, carefully placing her feet and then her knees either side of him, her so delightful red bush there above him and with her legs well apart, so he could catch glimpses of her furry sex; her large breasts hanging as she manoeuvred, swinging even; and her face, all smiles and a look of sexual excitement -- yes, that was it! To have her reach, hold his penis and guide it as she slowly lowered herself. Just so exciting to watch; Miss Redmond's hips with that gorgeous and full patch of brilliant red descending towards his knob; he already knew how wet and warm it was from his fingers but now it would be his penis going in. A touch and then she was bobbing up and down on his knob, playing with it at the entrance to her body.\n\nUnbelievable: if his friends from school could see him now... well, perhaps not. But how jealous they would be!\n\nDown slipped Miss Redmond. Jim watched her face. There was undoubted pleasure upon it. Mr Crowfoot's study did not just require women to submit to men, it encouraged their sexual enjoyment; women orgasmed in the study -- they very much did. Perhaps the room fed on that. Momentarily Jim was lost in thoughts of an alien being possessing the study and feeding on sexual energy. He had, maybe, read too many SF stories and books when younger, perhaps too much Philip Jos\u00e9 Farmer.\n\nHe was more than brought back by the realisation Miss Redmond was sitting upon him with his penis completely absorbed into her. For the first time ever, Jim Costin's penis was naked inside a woman; no latex barrier, no nothing separating his penile flesh from the so soft warmth and wetness of an unprotected vagina.\n\n\"Suck my tits, Jim.\"\n\n'Tits' -- from Miss Redmond!?\n\nHe did as he was told -- of course, she had been his teacher - sucking her lovely little nipples -- both of them -- taking more than them or areolae into his mouth, drawing in as much of her soft flesh as he could as slowly Miss Redmond rose up and down his hard penis. A gentle, wet massage indeed.\n\nLying back, he watched as his teacher's hips rose and descended, riding his cock; boobs swaying up and down; her lovely body in motion. Her red bush, her triangle of curls rising and falling. It was clear she was enjoying what she was doing; the look on her face implied imminent orgasm. This was great, this was wonderful, this had to happen again. Reaching, he began stroking Miss Redmon's clitoris with his finger; palm upwards he brought his hand in under her gorgeous red curls and began a gentle manipulation of her button. So smooth, so warm to the touch, so wet and evidently, by the reaction, just so sensitive. He sent her over. Quite clearly, and definitely, sent his ex-teacher over the line. So good to watch her face contorting as he had never seen in class; see her mouth go slack. What a pretty mouth - he just had to come between her lips someday, Mr Crowfoot must, just must, ensure that.\n\nMiss Redmond had been careful; careful, as an experienced woman, not to make her man come too soon; riding Jim slowly, watching him to ensure he did not suddenly look too agitated; but now, in the throes of her orgasm, she rather lost control. She rode Jim hard, thrusting herself down hard upon him, pushing his erection up as far as she could before, lifting herself with her thigh muscles, only to push down hard again and at speed. A woman using a man. The sucking noises were loud, perhaps loud enough for Mr Crowfoot to hear elsewhere in the house; wet, copulatory noises accompanied by moans from Miss Redmond. There was nothing about Jim making himself come, it was all Miss Redmond; he was indeed being fucked by his ex-teacher; it was she forcing the impregnation. Had she not been on the Pill... and that was so in Jim's mind, the idea of the carnal act as procreative; the thought of it as he felt himself building, building to release; the idea of fertilising Miss Redmond!\n\nThe pleasure of that first spurt up into the woman; she looking down at his face, he up into hers; down she came pushing his knob right up against her cervix as it expelled a second and stronger spurt out of his penis with some force, perhaps even so on target as to project it through the narrow opening into her womb itself, maybe her husband had come in her vagina that very morning but maybe it was Jim who had ejaculated further into her; had the Pill not prevented an ovum rolling down a fallopian tube might it not have found itself bathed in a veritable army of Jim Costin's spermatozoa, surrounded and besieged with her husband's own far away.\n\nAll too quick, and it always was, the spurting came and then dribbled away, the male copulatory act reaching its climax and then it was all over. Miss Redmond rose up one last time and kept rising, Jim's penis fell away and dropped down on his stomach and he caught a glimpse, a wonderful glimpse of her open, penis shaped, vagina before it closed, just so wonderfully framed by engorged lips and lovely, lovely red curls. She got up off her knees, staggered a few feet and collapsed onto a chair. \n\nJim lay there on the Chesterfield, gasping with recent exertion, staring at Miss Redmond's open thighs and what he had just done. And he could very much see that. The evidence was there. His semen, white and creamy, no longer in his body but in hers. He could see it, creeping a little from her body, a little lava like flow from out of her vagina. It had been so good -- the release -- the feeling of his stuff rushing up his urethra, the climax of what he had been doing with his former teacher. He was not alone in looking: standing in the doorway was Mr Crowfoot.\n\n\"That, Miss Redmond, is Jim's first ever copulation without a condom.\"\n\n\"I am honoured, Jim.\"\n\nHe felt more than that, elated in fact and amazed what he had been able to do to his old teacher. He could see what he had done. Very clearly see what he had done.\n\n\"I, on the other hand...\" Mr Crowfoot was stating what Jim already knew. A fact he had already verified by seeing the act, several times. \"But that does not mean I would not like also to copulate with you, Miss Redmond. May I? Could you accommodate?\"\n\nThe slight widening and gentle closing of feminine thighs was acquiescence. Despite being 'post coitum omne animalium triste est,' Jim's interest in feminine flesh had not completely abated. He stared at the sticky way Miss Redmond's lips opened and closed. He was a little amazed to know it was his own stickiness that was there. Notwithstanding his somewhat loss of interest, he found himself already looking forward to a second bout with Miss Redmond. Perhaps Mr Crowfoot might keep her there all morning. Could, between them, the two men keep Miss Redmond occupied? Of course, she was hardly likely to demur - not in Mr Crowfoot's study: that was not what women did. Not at all. It would, though, leave a long blank in her memory... albeit quite the contrary for Jim. \n\nOnce more Jim was watching his new friend engaging in sexual acts. He yielded the Chesterfield and sat on a chair to watch. Jim almost seemed to see Mr Crowfoot more times naked with an exposed, erect penis than not! Mr Crowfoot seemed quite extracted from the stupor, or was it despair, of recent years. Jim might have qualms -- sometimes anyway -- about what he was doing in Mr Crowfoot's study, but he could not deny it seemed to be having a very beneficial effect upon the man himself. The man had been so sad that he could no longer entice young women into his study and so delighted Jim had become the conduit for a renewed 'flow' of young women. Yet Jim was not directly responsible for Miss Redmond's appearance; he had not invited her into the house; that had been Mr Crowfoot -- but how? He would ask when they were alone.\n\n\"How, how did you find her? I mean, how did you get her to go into that room?\" Miss Redmond had gone. Mr Crowfoot had seen her out, had dressed and taken her to the front door. Their conversation at the door had gone on for quite a time. Jim had listened from the study. It was the last words that Jim had particularly caught. 'I look forward to seeing you again, Miss Redmond' with the reply, 'me too, Mr Crowfoot.' The idea of being able to do all that again with his former teacher; see her so ginger hair in intimate places; to have her suck his cock again; to... he had to go the whole hog with a blow job. He just had to.\n\n\"You enjoyed that? I know I did.\" Mr Crowfoot walked back into the study.\n\n\"Yes, a dream...\"\n\n\"A wet dream come true, Jim?\"\n\n\"Yeah! So, a wet dream. But how?\"\n\n\"I know your old headmaster. I asked. You had given me her name, Rachel. Of course, she is not Redmond now but Bennet, Mrs Rachel Bennet, but that was no problem. Nor was it a problem when the headmaster talked about her special interest in Cuba and the Caribbean. I have several rather old and interesting books on the geography of the region. It was a hook and when he mentioned them to her... Well, she wished to see them in my library. Perhaps you noticed them on the study desk. Perhaps you didn't, you being more interested in, um, female anatomy! She's gone off with them, as happy as a sandboy.\"\n\n\"She'll have to return them.\"\n\n\"No doubt. I am sure she will. I cannot imagine her keeping them and not returning them. So, what would you like to do with her then when she comes back? I suggested she lets me know when she plans to return them, so that I am here to receive her... and I make sure you are here as well, of course. Anything extra special you might like?\""
    ],
    "authorname": "Drmaxc",
    "tags": [
        "fellatio",
        "mind control",
        "spanking",
        "teacher",
        "oral",
        "oral sex"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/room-with-a-secret-ch-05"
}