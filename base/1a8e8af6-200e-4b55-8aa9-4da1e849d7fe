{
    "title": "Starlight Gleaming Ch. 17",
    "pages": [
        "Summary:\n\nSenior Lieutenant Ranji Kandikan has returned home to his parent's estate under armed escort led by his blood-brother, Lieutenant Bilan Monaycote.\n\nWhile he has been away at training, opposition to his efforts to change the way women are treated in the military has increased. Members of his family and his command have been injured emotionally and physically, and some continue to be in danger of their lives.\n\nRanji's time at Sparantzlo has changed him. In some ways, violence has become easier. He fears what he sees as the growing darkness in his heart, and what that means for him and the women who love him. The notion that gives him comfort is love itself, not only for Janetta, her crew, and Calia, but also being a dad to his little girls. He hopes it will be enough.\n\nAhead of him are many things: re-connecting with the women and his children, burying Deedee, the return to High Guard War Base, and learning whether he even has a command remaining. An important and dangerous impediment is dealing with the corrupt Air Security CO, Dakkan Voyacherno, and surviving the experience.\n\nFirst and more immediate is reuniting with his family. At the end of the last chapter, while his brother Bilan happily greets his two boys, Ranji sees his oldest daughter, Sisi. With several days growth of beard on his face, she barely recognizes him. Still, she gives him one of her magic hugs and welcomes him with open arms. When Ranji can't help crying for joy, Sisi reassures him that he's home.\n\nThanks to TerrytheTraveler for lending a hand with catching errors. Any gaffs, typos, dropped words, usage errors, omissions, commissions, permissions, WTFs and OMGs are totally my fault. Enjoy!\n\n* * * * *\n\nCleaning House\n\nWhen I finally let Sisi go, she grinned, brushing away my tears of joy. \"You got a beard, Tenant.\"\n\nNodding at her, I couldn't stop smiling. I was so happy to see and hold her little body in my arms, and my eyes drank in her precious presence. I found her attention to wiping away my tears incredibly endearing.\n\n\"It's scritchy. Are you gonna keep it?\" she persisted.\n\n\"Probably not,\" I admitted.\n\n\"I didn't know you at first, Tenant.\" She deliberately stuffed her small wooden sword into her belt. \"I'm glad you're home again.\"\n\n\"So am I, Sisi.\" I had to hug her again.\n\nBilan and his boys watched us, their father whispering in the ears of his sons. Nodding, they grinned and ran off.\n\nThen I saw Ixma in the east archway of the foyer leading to the sun room. She wore a class B uniform, holding Mina on her hip, and her face was one of hope mixed with disbelief. Mina looked at me fearfully, clutching Ixma tightly. I had worried that she might forget me, being so young when I left. Calia appeared behind Ixma, wearing a red blouse and a forest-green sari trimmed in yellow, the Vedan word for peace repeated in black, over and over like a motif. The three of them were yet another vision of loveliness to my aching heart.\n\nFor a moment they stood staring at me. And then both women burst into tears.\n\nPicking up Sisi, I walked over to them.\n\n\"It's Tenant!\" Sisi exclaimed, waving her free arm excitedly. \"Ixma! Calia! Look! The magic hugs and prayers -- they worked!\"\n\nNeither woman, however, would meet my eyes.\n\n\"Little Mama?\" I said. \"Sweet Calia?\"\n\nAt my words, Calia dropped to the ground, prostrating herself before me. \"My lord... Master...\" Calia sobbed. \"I am so ashamed!\"\n\n\"Please, Ranji!\" Ixma dropped to her knees as well, begging me. \"Please don't hurt her!\"\n\nBecause the women cried, the already distressed Mina began to wail. Ixma automatically moved her daughter to her chest, hugging her tightly to offer comfort even as her worried gaze darted between Calia and myself.\n\nI knew what the problem was, and I needed to deal with it right away. I set Sisi down.\n\n\"Stand up, both of you! What matters to me more than anything is that you are both alive. You are part of my family. You always will be. I have missed all of you so much! Sisi gave me one of her magic hugs. Please, I need your hugs, too.\"\n\n\"Come on!\" Sisi urged. \"Tenant needs your magic hugs!\"\n\nInstantly both women rose up and enveloped me in their arms, pulling my face down to pepper me with kisses, sobbing with relief and joy. I did my best to keep up. Every time I tried to home in on one set of lips, the other one moved in, the two playing a kind of tag with kisses. Before I knew it, I was laughing, and they began to laugh, too. It was the struggling Mina, who was getting squished between us, that prevented us from piling onto the floor in a joyful heap, with me at the bottom.\n\nWhile Ixma tried to calm Mina down, I cupped Calia's face in my hands, kissing her slowly. Our kiss deepened, and she leaned in, opening her mouth to let our tongues dance about. My hands slid down and pulled her close. \"I love you, Calia. You are mine. Always.\"\n\n\"My heart sings to hear those words from your lips. I love you, too, my lord!\" Her hand reached up, running her fingers through my hair.\n\nAnother kiss, much shorter, and then she gently turned me toward Ixma. Giving Calia a wink, I released her and turned to Ixma.\n\nWiping her eyes, Ixma looked down at her daughter. \"Mina, your daddy's home. Don't you want to give him a hug and a kiss?\"\n\nMina wasn't having any of it. Turning away, she tried to bury her face into Ixma's chest. I was a stranger to her, her mother was crying, and she didn't understand why. Ixma tried to hand her off to Calia, but hanging on and protesting fiercely, she cried out, \"No, Mama, no!\"\n\nIxma was perturbed, but I put my hand on her shoulder. \"It's all right, Little Mama. I've been gone a long time, and she doesn't remember me. Give her time. We'll be reacquainted and fast friends soon enough.\"\n\n\"Okay,\" she said, her lips trembling and blue eyes watering. \"All of us have missed you so much, Ranji. Your strong, loving arms. How you hold me and touch me, and how you make me glad I'm your woman. You didn't come back when you said you would and we were all so afraid--\"\n\nI brushed her lips with mine. \"All the time I was away, I can't tell you how important it was, knowing I had all of you waiting for me at home.\" I saw Sisi watching us, so I gave her a wink and a smile. \"I got every one of your magic hugs, and they kept me safe. They brought me home.\"\n\nAs I drew Ixma in closer, she shifted Mina onto her hip and we kissed. When we broke apart, I leaned down and nuzzled her neck, and she clutched at me with her free hand, sighing. She started to cry again. \"I can't believe you're finally back with us!\"\n\nMina's little hand thumped me. \"Bad! Bad man!\"\n\nSurprised, Ixma turned her away from me. \"Stop it, Mina!\"\n\nTeary and angry and afraid, she insisted, \"Bad man!\"\n\n\"Mina! I said stop!\"\n\nConfused, the little girl teared up.\n\nCalia reached over, putting her hand on Ixma's shoulder. \"Mina? Why is he bad?\"\n\n\"Makes Mama cry,\" she blubbered. Turning her face away, she started to cry herself.\n\nIxma looked at me helplessly.\n\n\"It's fine, Ixma. She loves you and she's trying to protect you,\" I said.\n\n\"It's okay, Mina! It's Tenant!\" Sisi assured her. \"Don't you 'member? He read us stories.\"\n\nIxma hugged Mina close, rocking her and kissing her. \"Mama loves you, Mina.\"\n\nReaching down, I picked Sisi up. \"You understand what's going on?\"\n\nShe nodded solemnly. \"Mama Zinja said sometimes we cry when we are happy. Captain said sometimes people cry when they are pissed. But Calia said if you cry when you are pissed, you need to see the doctor.\"\n\nIt was all I could do not to burst out laughing. She understood the most important part. I kissed her forehead, \"You are a very smart girl, Sisi.\"\n\nSuppressing a grin, Calia had to turn away. If we laughed, Mina might think we were laughing at her, and that wouldn't be right. If I could remember to do it later, Sisi needed to learn the difference between being pissed and having to pee.\n\nThen I heard two small boys chattering, coming up behind us. \"He's here, Grandma! See? We told you!\"\n\nThere stood my mother, whole and healed. Powan held one hand and Mika the other. All my nagging worries about her fell away.\n\nMother was impeccably dressed, as always. She wore a muted purple salwar kameez covered with gold paisleys. Solid purple arms and a matching long scarf with solid gold trim.\n\n\"I've come as you asked. Now explain to me what is going on here.\" Then her face contorted. \"Ranji?\"\n\nSetting down Sisi, I embraced my mother.\n\nHer arms flew around me. \"Oh, Ranji! My son! At last, you are home! Let me look at you. What is that you growing on your face, son? And my god! You've lost so much weight. Your shirt hangs on you. Have you eaten dinner?\"\n\n\"We had lunch at Tik\u00fan War Base, and a snack at Sentry. Bilan and I were anxious to get here.\" At her raised eyebrows, I said, \"No, neither one of us ate a real meal.\"\n\nCalia picked up Sisi, and they joined our hug. With encouragement from the rest of us, Mina calmed down, though she still viewed me with suspicion. After all, now I was making her grandma cry, too.\n\nIt was Sisi, fidgeting around that finally brought things down a notch.\n\nI asked her, \"Up or down?\"\n\n\"What's up?\" she asked, her eyes bright with interest.\n\n\"You get to sit on my shoulders. I'm told that's a prime place to sit for a Princess of the World.\"\n\n\"Up, Tenant,\" she replied without hesitation. Being Princess of the World appealed to her sensibilities. So while the others moved to give us room, I helped her settle onto my shoulders. It felt strange, yet perfectly satisfying having my child parked on my shoulders. Her little legs wrapped around my neck, her little hands holding my head for balance.\n\nRaising her wooden sword, she called out to Powan and Mika, demanding, \"My Warrior Princes, have you beaten Atlantis yet?\"\n\n\"No, Princess,\" Powan replied. He and Mika bowed. \"We need you to lead us!\"\n\n\"Need to get down, Tenant,\" she insisted, so I put her down. \"We have a war to win!\"\n\nThe boys retrieved their own swords, and all three charged off down the east wing, Sisi leading the way. Their antics brought a smile to our faces.\n\nI noticed Bilan had vanished. Ah, well. No doubt greeting his wife, Rana, in private. Good for him. And her, too.\n\n\"It is so good to see you, my son,\" Mother exclaimed, wiping at her eyes. \"You must tell us your adventures.\"\n\nMy mother latched herself possessively onto my arm. My father had assured me she was well, but I just needed to see it for myself. All my worry for her fell away. But I couldn't stay, so I gently removed her hands.\n\n\"I'd love to talk more with each of you, but before things go further, there are three others that I need to see.\"\n\nIxma said sagely, \"Go, Ranji! My captain needs to know you are home and safe.\" Before I could ask, she added, \"They're in the hangar. All three of them spend hours there. And I mean, hours. The Captain is in love with the Sunskipper, and I think she dreams about flying it. If that aircraft were a man, you'd have a serious rival on your hands! Cholan and Mama have it bad, too.\"\n\nI laughed. Nothing more needed to be said.\n\nThen Calia whispered something into Ixma's ear, and she blushed as she laughed.\n\n\"I'll spend more time with you soon, Mother. Is Father here?\"\n\nShe shook her head. \"He's at work. He isn't expected back for several days yet. Ranji, we all expected you weeks ago! What happened? Where were you?\"\n\n\"I'm sorry,\" I told them. \"I was under orders. That's all I can say at this time. What I tell you later cannot be shared with others, even with trusted servants. Things that you and Father need to hear. Bilan and maybe Rana, too. But definitely Janetta, Calia, Ixma, Zinja, and Cholan. Styen, too. But no one else. Please believe that I returned home as soon as I was able to do so. Why don't you call him, Mother? Let Father know I have returned home.\"\n\n\"I can't call him at this time of night. Son, it's nearly bed time! I will call him tomorrow morning, and see what persuasion I can manage. I would enjoy having a late dinner with him, and I know he'd love to see you. But it is two hours travel each way. He may not be able to come home for many days yet.\"\n\n\"If he makes the request, we can meet him at Sentry War Base. We can be back here within half an hour, have dinner and visit for a while, then we can take him back before it gets too late.\"\n\nMother smiled conspiratorially. \"You want to fly the Sunskipper again.\" Then her eyes danced. \"And no doubt a certain captain will act as your co-pilot. All right, my son. I'll send him an email letting him know you are home tonight, and I'll call him tomorrow to discuss these plans of yours. If I get you food, will you eat, my son?\"\n\nI realized I was hungry, and my stomach made a small rumble. \"Yes, food sounds good. Something cold, though. Don't wake the cook on my account. Bilan will probably want something to eat, too.\"\n\n\"All right,\" she nodded. \"I'll have something made up for the both of you, and we'll meet in the drawing room later.\"\n\nA mother on a mission, she went off to arrange for food.\n\nI raised my eyebrows, looking at Ixma. \"What was so funny? What did Calia say to you?\"\n\n\"She said if that plane had a cock, they'd take turns riding it for hours.\" Her blue eyes had an adorable, impish look. And truth to tell, I was both surprised and pleased by her comment. She'd grown so much over this past year.\n\nI had to kiss her, so I did. Slowly, softly. Then tugged on her lower lip with my teeth. \"Will you share my bed tonight?\"\n\n\"If I can,\" Ixma said with a smile. \"Calia and I share a bed with your daughters. Mama shares your bed with the Captain.\"\n\n\"Indeed? Hmm.\"\n\nWith a last hug and kiss to each of them -- Mina still viewed me with suspicion -- they told me they needed to get ready for bed, and Ixma added that the girls needed to do the same.\n\nMother had departed down the west hallway toward the kitchen. Ixma and Calia headed down the east wing. I continued south, past the servants' quarters.\n\nAt the elevator, I passed a pair of guards on patrol. After they checked me out, they moved on. That's new, I thought. Then I discovered the elevator required not just a code to oepn, but also a scan of my lanyard and a thumb print.\n\nWhen the elevator opened to the hangar bay, the guard by the door snapped to attention. Returning the salute, I came around the blast wall leading into the hangar proper.\n\nI paused, taking in the scene before me.\n\nI spotted Zinja first, over in the tool bay, in deep discussion with both mechanics. All three were in the cyan coveralls of the Air Service. Next to them stood an officer, a full lieutenant that I didn't recognize. Then I heard Janetta's voice saying something from inside the Sunskipper, its ramp down and hatch open.\n\nThen a man's voice called out even louder from within the Sunskipper, \"Where's that sergeant of yours? Captain, the dashboard says access panel six is open!\"\n\nOn impulse, I squatted down and looked. Sure enough, I saw someone's legs laying on the concrete, the rest of the person hidden by an open panel hanging down. Then I saw hands grab the cover and firmly, gently push it closed. I heard it click as it latched. Visor with lamp and huge lens over her face and tablet in her hand, she glanced about.\n\nCholan? Had to be. But she looked different. What was it?\n\nShe spied me looking at her, and whipped off her visor. \"Ranji!\" she squealed, then tried to sit up and loudly banged her head. \"Ow!\"\n\nHer exclamation got the attention of the others. Aware of her danger, still clutching her head, Cholan quickly rolled away from me.\n\nI stood back up.\n\nFrom the open doorway of the aircraft, a captain stormed out, then squatted down, peering underneath the fuselage.\n\nCholan had made a clean getaway. He stood back up, obviously angry.\n\nZinja moved around the ship's nose, staring at me like she couldn't believe her eyes.\n\nJanetta appeared from somewhere around the cockpit, looking smart in her cyan flight suit. Seeing me, she halted at the top of the ramp. Then she ran to me.\n\nArms latched on and gripped me tight, her legs wrapping themselves around my hips as her mouth sought to suck all the air from my lungs. I staggered. Then gripped her ass. And proceeded to take some air back from her.\n\nIt was as if the reality hit her. She slowed down, releasing her legs and standing on her own. Gently cupping my face in her hands, as if afraid I was a dream. \"It is you. Oh, blessed gods of North and South. You really are here.\"\n\n\"Hello, my beautiful, perfect Warrior. It is so good to see you again.\"\n\nLeaning her forehead against me, she breathed, \"Gods above, Ranji! Every day that you were gone was like a part of me was missing. It's everything I can do to keeping from crying like a little girl, I'm so happy to see you. Please, don't ever volunteer for duty away from us. Even with all of us to help each other, it was bad, Ranji. Real bad.\"\n\n\"I love you, Janetta Tlacotli.\" And there it was. That indescribable mixture of jet fuel and oranges, with that subtle underlying scent that was hers alone, filled my nostrils. I inhaled again, giddy with joy.\n\nShe gave me a growl. \"If you aren't in my bed tonight, there. Will. Be. Bodies. Many, many bodies with copious amounts of blood and mayhem.\" Then she ran her knuckles along my three days of beard. \"Is this going to be a problem? And, your hair's different, too. Darker. Why the change?\"\n\n\"I've a lot to tell you. All of you. But I want everyone there. Bilan, too. You, mother, and Sisi all commented on it. You want it off, off it goes. Because you're the one who's stuck kissing me.\" Feeling her body meshing against mine, my arms wrapped around her, I was hard as a rock. I needed her so much.\n\nThe officer from the Sunskipper approached us. \"Captain Tlacotli! I've warned you about your sergeant! And you, whoever you are, you aren't authorized to be here! This is a restricted area, Lieutenant. You have two seconds to clear out before I call the guards and have you arrested!\"\n\nJanetta broke away from me, raising her eyebrows at the captain.\n\nPutting my hands on my hips, I cocked my head, glancing at his name tag. \"If I wasn't authorized to be here, how could I get past the security lock on the elevator, Captain Harketsi?\"\n\nFuming at my logic, he turned on Janetta, but she beat him to the punch. \"You should know that while Sergeant Cholan is my e-man, she also belongs to Lord Kandikan.\"\n\n\"Lord...?\" Then he read my name patch. Scowling even more fiercely, he strode off in a huff to his office, slamming the door.\n\nThe lieutenant started to approach, but taking in the situation, held his position.\n\nI took Janetta's elbow and guided her up the ramp of the Sunskipper. She raised her eyebrows, but let me guide her up the ramp and into the craft.\n\n\"What's going on, Ranji?\"\n\nOnce inside, I punched the button at the door, causing the ramp to retract and the door to seal. Popping open the panel, I disconnected the circuit, effectively locking it.\n\n\"What did you just do?\" she asked.\n\n\"Making sure we aren't interrupted. I hear from reliable sources that being around or on this aircraft gets you wet. I intend to check out that rumor.\" Moving to her, I took the zipper of her flight suit and slowly pulled it down.\n\nHer face tracked my hand, then looked back at me, her breathing deepening.\n\n\"I need inside you now, Janetta. I can't wait, not even ten minutes longer.\"\n\n\"Here?\" she exclaimed. Her surprise quickly flashed to intense interest.\n\nI unhooked her bra and freed her fleshy mounds. \"Yes, right here, my beautiful warrior. Any objections?\"\n\nJanetta laughed in delight. \"Oh, gods, Ranji! I haven't seen you in ages, and the first thing you want to do is fuck me inside the most technologically advanced aircraft in all the Empire. You are so bad! I think I'm going to gush into my panties any second.\"",
        "She helped push the suit off her shoulders, while I slid my hand into her panties. I felt her hairy cleft and pressed two fingers between her full lips, and found the growing reservoir of hot, slick lubrication coating my fingers.\n\nHer hand snapped out, grabbing my wrist. \"Don't! I have missed having your cock inside me. I want to come all over your hard cock, Ranji.\"\n\n\"Oh, yeah!\" I said with a grin. There was a decided urgency to be inside the woman I loved, to feel her welcoming slick heat envelope my length while I held her in my arms.\n\nShe quickly undid her boots, slid off her socks and pushed off her flight suit. I got as far as pushing my pants down to my knees when she grabbed my cock. Easing onto her back, she settled onto the plush carpet of the aircraft. Pulling me along, lifting and spreading her legs, she guided me to her center.\n\nOnce my mushroom knob parted her swelling, puffy lips, her hands grabbed my butt, and she began bucking her hips upward, as eager as I for our union. For my part, I was pressing and pushing into her, doing my best to thoroughly impale her.\n\nHands to my chest, Janetta gasped as I began opening her passage, partially filling her cavity with my length. \"Easy. It's been awhile, Ranji.\"\n\nMore grunts and movement by us both until I felt her lower lips kiss my groin. All along my shaft, her muscular sheath rippled, caressing me, loving me in her tight, slick heat.\n\nI shifted, and gazed down at her, grinning like a fool. \"That's it. You feel so good, Janetta, so right. I have missed you so much!\"\n\nShe looked up at me with love in her eyes.\n\nPulling out part way, I thrust for depth, bottoming out within her heated core.\n\n\"So full,\" she grunted. \"So good. Oh, gods!\"\n\nPressing and rocking, the gateway of her womb lightly brushed under the crown of my cock, sending intense pleasure through my body. Taking a deep breath, I exhaled slowly. I was already so wound up, it was all I could do to keep from filling her right then.\n\nJanetta wrapped her legs around my hips. Her hand caressed my face, then fingered through my hair. \"I can't believe how much I need you. Gods above! Give it to me, Ranji! Pound my pussy until I see stars! Fuck me and fill me until I drip with your come!\"\n\nLeaning down to kiss her, she latched onto my mouth. As I probed into her tight, slick center, she met me, thrust for thrust. In and out, again and again, pressing needful and hard into her welcoming wet folds, descending over and over into her muscular sheath.\n\nWithin moments, both of us needed too much air to maintain the kiss. Lifting up, I shifted higher, slapping down hard against her center, burying my hard cock within her yielding depths. Both of us panting, eyes locked on each other. Her body rose up, taking everything I gave her. Her wetness coating our rapidly pumping groins. We were moving together as one.\n\n\"It's so good!\" she moaned, her hands gripping my arms.\n\nI felt my balls tightening already. \"Janetta! Gonna come in you!\"\n\n\"Yes!\" she cried out, her black eyes hungry and needful for what I gave her.\n\nOur union became a wet, frantic, frisking of flesh within flesh while our hearts thundered. Hearts and bodies beating harder and faster, we strove toward release.\n\nMy balls drew up, and arching my back, my hands grabbed her butt, pinning her beneath me. Shoving as deep as I could reach, I grunted loud as my shaft expanded, then pulsed, spewing hot ribbons into her inner sanctum.\n\n\"Janetta!\"\n\n\"Fuck!\" Janetta's fingers dug into my butt while she bucked against me. A moment later she froze. Pulling me down, she buried her face into my neck, moaning as she ground her throbbing pussy against me.\n\nFor long seconds, we gasped for air while our bodies trembled together with ecstasy. As I felt the fading ejaculations, I lifted from her chest to ease her need for air.\n\nReaching up, she gently caressed my face with her hands. \"I love you, Ranji Kandikan.\"\n\n\"Oh, my love,\" I whispered.\n\nIt was then I noticed how much weight she'd lost. Her cheekbones and collarbone were more prominent. Keeping hold with one hand, I ran the other along her more visible ribs. At the moment, however, I was blissfully happy with our intimate connection, wanting it last forever.\n\nSuddenly scowling, she smacked me in the shoulder.\n\n\"What?\" I asked in surprise.\n\n\"You still have your shirt on and even your pants are mostly on. How come it's always the woman who has to get naked? How is that fair, Ranji? I ask you, how is that fair?\"\n\nI laughed. \"All the better to seduce me with your numerous charms, Janetta. You really are the most beautiful woman in the world. Making love to you is heaven. Didn't you know that?\" Reaching up with one hand, I kneaded and rolled her tattooed breast, reveling in the touch of her skin.\n\nShe snorted. \"I can't believe how badly you have me dick-whipped.\"\n\nI raised my eyebrows. \"What does that mean?\"\n\n\"It means I love you, Lieutenant, and I will do a lot of violent and savage things to anyone who keeps my pussy from getting more of your hard cock on a regular basis. You are my lover and my man. You are back with me, where you belong. We have so much lost time to make up for.\"\n\nThen arching her eyebrows, she added, \"You need to give the rest of your women some attention, too. Your absence has been terribly difficult, for all of us, Ranji.\"\n\n\"I know,\" I replied. Then I flexed my cock within her sheath, giving her a tentative thrust. I'd barely gone soft and was already getting hard again.\n\nA flash of surprise became one of interest. \"It amazes me how you can do that. Does this mean you want to go another round?\"\n\n\"Yes, Janetta. Always.\"\n\nShe pushed gently at me. \"We need to move then. Even with the thick carpet, my hips are getting sore. And I don't want to get rug burns!\"\n\n\"I've noticed you've lost weight.\" Sliding out, I helped her up.\n\n\"You, too.\" She patted my butt. \"I remember having more to grab there.\"\n\nWhich was true. But not as much as Janetta.\n\nI grinned at her. \"So did you like having sex inside the Sunskipper?\"\n\nHer face filled with delight. \"Gods of North and South, this will be a day for the memory books. On the one hand it's just a fancy shuttle, but it's so high-tech and it's ultra-fast -- and I love you and love how your cock feels deep inside me. Yes, I enjoyed it! And I do want another round, since you are up for it. I want to be on top this time.\"\n\nShe looked at the plush seats and their arm rests, calculating which one we should use, not caring that her pussy dribbled onto the carpet. Seeing her puffy, wet, lower lips covered with my sperm hardened any softness I may have had remaining.\n\nI pushed her toward the cockpit. \"What if we did it in here?\"\n\nLooking back at me, her eyes became a bit glazed. Because of the large windows, we'd be plainly visible to anyone standing by the workbenches. \"Where?\"\n\nTurning the pilot's seat around, I said, \"Kneel in the chair and I'll take you from behind.\"\n\nNarrowing her eyes, she gave me a feral grin. \"I don't think so. You were top on the floor. I told you, it's my turn to be on top. You sit, and I drive.\" Then she poked me in the chest. \"Strip for me, Kandikan! Time to get naked.\"\n\nLeaning against the wall, she watched me peel the rest of my clothes off. When I reached for her, she batted my hands away. \"Socks, too. What? Too much blood going to your little head? I said get naked, Kandikan, and that means completely bare. Now turn to, Lieutenant! Don't make me have to hurt you!\"\n\nI barely had the second sock off when she herded me to the pilot's seat. She pushed and I plunked down into the thick, cushioned seat.\n\n\"Get the seat arms up. I need some room to work here.\" Stroking me a few times to check my firmness, she stared into my eyes as she moved up, straddling my lap. Pointed my shaft at her sodden cleft. Groaned as she descended, embedding my length within her slick, gooey tunnel. Then she leaned forward, smashing her breasts into my face while she reached around the seat.\n\n\"What mmmph--!\"\n\nThere was a click, and then she pushed the headrest down. I managed to get my nose free so I could breathe. Releasing the pressure, she rested her lower arms on my shoulders as she gyrated on my lap. \"Oh, that's good,\" she husked. \"Nice and deep, touching all the good spots. Mm-hmm. That's what I'm talking about.\"\n\nMy hands moved up to cup her soft mounds. It felt so good to feel her soft flesh mold under the motions of my fingers and palms. My thumbs rubbed her turgid nipples, encouraging them to rise to even greater prominence.\n\nHer black eyes glittered with heat. Leaning in, she kissed me, opening her mouth. Meeting her, our tongues dueled as she enveloped me within her muscular core.\n\nWhen we broke for air, she arched her back, laughing as she rocked her hips. \"I can't believe this. I'm fucking you in the cockpit of an Itcha Aeronautics, state-of-the-art, ultra-classified PE-1000 Sunskipper!\"\n\n\"I love you, Janetta Tlacotli.\"\n\n\"I love you, too, Ranji Kandikan. Gods help me, I do so love you.\"\n\nPicking up the pace, her grinding gyrations changed to pumping, going for depth. Her breathing quickening, Janetta moved her hands to my shoulders for better leverage.\n\n\"That's it,\" she huffed. \"All the way up. Rub my belly button from the inside, Ranji.\"\n\nI started to move my hand down so as to give her clit some attention, but she grabbed it, holding as she humped me. \"Driving here. Don't mess with my rhythm.\"\n\n\"Are they watching you ride me?\"\n\n\"Oh, yeah,\" she said with a huge grin, looking out the huge windows. \"They just noticed us. Zinja and Cholan. Both of the mechanics. Oh! Mmm. I'm going to be sore later, but I'm not getting off until I come again all over your cock. Oh, heh heh. Now Lieutenant Yanultam sees us. Suck my tits, Ranji.\"\n\nInhaling one breast, my tongue laved and flicked nipple while my hand squeezed and kneaded the other. Arching to push it into my mouth, one hand held the back of my head. Then Janetta switched back to short thrusts and grinding. Both of us panting while she rode me.\n\nSwitching again to long strokes, she grabbed the chair and dropped down harder, impaling herself onto my hard shaft again and again. Pulling back until I was nearly out. Then the firm drive down until her wet nether lips kissed my balls. She moved faster. Our groins were wet with her fluids. I was just starting to feel a tingle in my balls when she abruptly halted, grinding her clit against my groin.\n\n\"Fuck, fuck, fuck!\" she cried out hoarsely. \"Ranji!\"\n\nMoaning, she hefted her breasts, pinching the nipples, shuddering while her slick core throbbed around me. Another shudder, and she collapsed against me, panting heavily. Recovering quickly, she lifted herself into a sitting position. \"Thanks, Kandikan. That was first rate.\"\n\nGiving me a pat on the shoulder, she started to lift off me!\n\n\"No, you don't!\" I growled.\n\nHauling myself out of the chair, I carried her over and pinned her against the door frame. She laughed as I lifted her up and grabbed her butt, shoving back into her steamy pussy. It was satisfying to hear her laughter dissolve into moans while I pounded into her yielding center. Her arms and legs wrapped around me, holding me close.\n\n\"All lined up,\" she huffed into my ear. \"Give it to me, Ranji. Come on! Full payload!\"\n\nI continued driving into her, my balls slapping against her slick, heated folds. Janetta gasped as I vigorously pumped within her depths.\n\nSpeaking in a higher voice, she cried out, \"Oh, Lord Kandikan! You know I like it, sir. Fill my pussy and make me your woman. Yes, yes! Give me all your hot seed!\"\n\nAnd like that, I was spewing into her depths as I grunted, heaving for air. Having come so recently, I didn't have much, but I gave her all I had.\n\nJanetta gasped as she gripped my butt cheeks, rolling her mound against mine. Then she snickered with a knowing gaze. \"Oh, Kandikan, I so own your ass.\"\n\nI held her groin to mine, still emptying myself into her body. \"What was that, Janetta? Why did you climb off before I was done? I thought we were beyond that shit.\"\n\nShe tenderly wiped the sweat from my brow before giving me a look full of emotion. \"The answer's the same as last time. If you want me, you need to keep me. It's me fucking you as much as you fucking me. You've been gone a long time, Kandikan. More than half a year, and I have to tell you, it was hellish. I needed to know just how much you want me.\"\n\n\"Like the first time on the floor didn't count?\"\n\nJanetta winced, her legs dropping down of my hips. \"Can you let me down first? I think that keypad is going to leave a permanent divot in my lower back. Oh, that's better.\"\n\nShe was still impaled on my cock, but made no move to free herself. Instead, she smacked my butt. \"I love you, but you've been gone for almost half the time we've been together. I'm not like your other women, Ranji. The first time was me the woman welcoming home her man. This time was for the warrior in me, taking my man because I wanted you, too. I needed to know you still loved me, still wanted me enough to claim me as yours. I won't be taken for granted.\"\n\nShe saw my look, and nodded. \"I know, I know. You and me, warriors, side by side. You are my lover, Ranji. My man. I like it that you treat me like we're equals, in bed and out of it. I love that you want to take care of me, but the warrior in me needs to see you push back when I test your boundaries. You gave me pleasure, as you should, and you demanded that I give you yours.\"\n\nAt that moment, I slipped out. Pushing me aside, she reached down, cupping her sodden, swollen vulva. Stepping closer to the window, she lifted her gooey hand, showing it to those who had been watching us, standing proud and defiant, like my semen was some victory prize she'd won on a battlefield.\n\nZinja and Cholan, and one of the two mechanics looked back at her. Janetta kept her eyes on them as she smeared the mess onto her belly and breasts, rubbing it into her skin. Zinja muttered something, and both women nodded, then snapped a salute to their officer. Janetta gave them a stern, slow nod, and the women released their salute.\n\nIt was then I heard a clattering at the door. Someone was trying to break in!\n\n\"Time to get dressed, Janetta!\" Diving around the corner, I scrambled for my uniform.\n\nStrolling into the passenger bay, she sat on a plush seat, smearing the seat while she slipped on her socks. As she hiked on her panties, she muttered, \"Okay, that's sore.\"\n\nI was still fussing with my shirt buttons when she clipped her bra into place, then made a quick adjustment for comfort. Both of her feet slipped into the flight suit, and up went the zipper. Barely got my socks on while she stuffed her pant legs into her boots and -- click! click! -- snapped the big brass clamps home. She pulled out her jaguar hair clasp and ran her fingers through her hair while I fumbled around with my shoes.\n\nI was a warrior. An officer in the Air Service. I had survived desperate battles, weeks of torture, and deliberately tracked a man down and shot him. But this was my parents' home, and that somehow colored everything. Finally slipping my socks on, I felt like I was twelve.\n\nCrouching, I fussed with the laces of my shoe. When I stood back up, Janetta moved close. I paused while she calmly straightened my shirt. Taking my neckerchief, she flipped up my collar, wrapped it around and tucked it properly into place. Fixing my collar, she adjusted my shirt so it lined up with the zipper of my pants. A quick kiss and smile.\n\nGiving me a nod, she went to the door lock, returned the connector to its port and closed the panel. Janetta hit the switch, and the door opened. I stood behind her.\n\nThe room reeked, but we were fully dressed.\n\nKneeling on the ramp, toolbox at his side, the second mechanic looked up at us. He gave me a quick grin, then was all business.\n\nCaptain Harketsi stood behind him, his face dark with fury. Behind him, on the ground, was the co-pilot, Lieutenant Yanultam, a look of awe on his face.\n\nJanetta gave the captain a puzzled look. \"Was there an issue with the door? It worked just fine for us.\" Turning back to me, she added, \"Thank you for that incredible in-flight simulation, Senior Lieutenant. It was a... fulfilling experience.\"\n\nYanultam struggled to keep from laughing, no doubt to avoid drawing the ire of his superior. I think the mechanic bit his tongue.\n\nCholan and Zinja came around the corner, followed by the second mechanic.\n\nBefore Captain Harnetsi could speak, Janetta barked out as she strolled past him, \"Sergeant Zinja, Sergeant Cholan! On me! Let's get off the flight line. We've bothered these men long enough.\"\n\n\"Yes, sir!\" they replied in unison, doing their best to keep straight faces.\n\nFollowing her cue, I marched behind her. The guard snapped to attention as we came around the barrier, moving to the elevator.\n\nWhen the door closed, Janetta said, \"Okay, at ease.\"\n\nThe tall, Oexecan mechanic was instantly in my arms. And she was strong! Hugging me so tight that I struggled to breathe. And the shorter East Islander girl clutched at me while standing on her tip-toes. It was chaos getting kissed while trying to give kisses in return, both of them laughing, and the height differences adding even more to the challenge.\n\nSeeing her close up, I also couldn't get over how much weight Cholan had lost. It had to be close to a hundred pounds, I was sure of it.\n\n\"Ladies... five, four, three...\" Janetta warned, and both women instantly let me go. Cholan reached behind me and gave my butt a quick squeeze.\n\nAs the door opened, Janetta cleared her throat, speaking out brusquely, \"... And let that be a lesson to you both, Sergeants.\"\n\nAll business, both echoed out, \"Yes, Captain!\"\n\nJanetta led the way down the hallway.\n\nBilan lounged against the wall. When he saw us, he smirked at me. \"I was wondering if I needed to gather a search party. You were gone nearly an hour, Ranji. You are the guest of honor tonight, and everyone else is gathered in the drawing room, waiting for your arrival.\"\n\nZinja cleared her throat. \"Captain? It might be prudent to take a latrine break beforehand?\"\n\nMuttering in Nahuatl, Janetta whispered, \"That bad?\"\n\n\"Yes, sir,\" Zinja replied quietly. \"No mistaking it.\"\n\nCholan nodded in agreement.\n\n\"Sounds like an idea, Sergeant,\" I added. \"I should make a stop as well.\"\n\n\"Good call,\" Bilan said with a grin.\n\nJanetta took the nearest one, while I scooted down a side hall for another one. Once we were both passably decent, we continued toward the main drawing room.\n\nOn the nearest sofa sat a very pregnant Rana, with her two boys laying down together, side by side, wrapped in a large blanket. Bilan sat down on the other side, next to his wife. The welcoming smile Rana gave him was genuine, and seeing it, I was happy for them both. They deserved their newfound love together.\n\nMy mother sat on the second sofa, looking very much the regal lady. Sisi leaned up against her, looking at us sleepily as we entered the room. Mother held Mina, gently rocking while humming a tune to her. By all appearances, my youngest daughter was fast asleep.\n\nI looked for the love seat that used to occupy the room, but it was gone, replaced by a third sofa. Calia and Ixma rose up to join us. Janetta sat down at my right side, and I was guided to the spot next to her. Zinja claimed the vacant spot on my other side, and leaning against me, took my hand. Calia, Ixma, and Cholan sat on the floor, clustered at my feet.\n\nBilan looked at me, and started chuckling, his eyes merry. Rana grinned, too, and even my mother looked at me, thoughtfully taking in the scene. I couldn't tell if she was amused, scandalized, or happy, and supposed it was probably some mix of all the above. I had given her and my father fair warning about the women in my life, but I suppose it is quite different to actually see it with one's own eyes.",
        "Mother broke the silence first. \"Ranji, I know you want to wait until your father is here before you tell us your adventures. But surely you can solve one or two mysteries for us? Who is this Marrin woman? Why were her ashes sent here? And why is your hair dyed black?\"\n\nThinking of Deedee, some of my ebullience faded. \"The hair is easy. It was part of my pathetic attempt to disguise myself. Rana, I'm truly sorry you and your boys were deprived of Bilan's presence, but he was busy saving my sorry--\" I saw Sisi listening to me -- \"Er, Bilan was busy saving me from a bad situation. He is a true and loyal brother.\"\n\nRana gave her husband a look of adoration. After kissing him, she settled into the crook of his arm, beaming with pride. My mother and the women around me, though, were alerted by my declaration, and I could tell by Janetta's look that a much more detailed accounting by me would be required later.\n\n\"As for Lieutenant Deedee Marrin,\" I continued, \"Well, she was my second while I was away on my training deployment. She saved my life several times, and died saving me and three other men. Her ashes are here because her family disowned her for joining the Ground Service. If you can believe it, her father was actually pleased to hear of her death, and suggested that I throw her ashes into the garbage. So I brought her here.\"\n\nRana and my mother both looked horrified that any parent would be happy to hear about the death of their own child. Everyone waited a few seconds for me to add more, but I let it lay there for the time being.\n\nClearing her throat, Mother announced, \"We will be honored to provide your friend a final resting place. Where will you bury her, Ranji? We have no graveyard close by.\"\n\n\"I was thinking she would have liked the view on the trail by the waterfall on the southwest ridge. There's a big flat rock there, next to several shade trees.\"\n\n\"I don't know the place, but I'm sure it's perfect. When will you hold her service?\"\n\n\"We already had a full military funeral for her, but there's a fellow nurse, a Senior Lieutenant Beytindl stationed at Paxilman Hospital that Deedee considered to be her friend. I'd like to offer her a chance to be here to say goodbye. Two, maybe three days?\"\n\n\"Let me know when you decide, Ranji. I wish to be there, too. She saved my son's life. I should pay my respects as well.\" Calling for a servant, food and drink were brought to Bilan and me. Snacks were offered to everyone, but were declined due to the lateness of the hour. Drinks, however, were accepted.\n\nI'd been hungry before, but thinking again of Deedee, and my own stupidity in her death, the thought of food no longer appealed to me. My traitorous stomach, however, let out a growl.\n\nJanetta glowered at me. \"Your body is hungry, Ranji. Eat. There's more to your tale, which we will hear later, won't we.\" No question there at all.\n\nI nodded. \"I want Bilan to hear, too, and Styen, if he's around.\" I took a bite. As the food hit my mouth, my hunger flared back to life. I quickly wolfed down the sandwich.\n\n\"What's that you're saying there, Ranji?\" my mother asked.\n\nCalia answered, \"He's asking about Styen.\"\n\nNodding, my mother said, \"Styen's with your father, Ranji, acting as his personal guard. There have been a few attempts on your father's life recently. Bilan here has been turning my home into a fortress. But considering all of what's happened this past year, I'm grateful for Bilan's efforts to protect my husband and my grandchildren.\"\n\n\"Thank you, Lady Kandikan,\" Bilan replied. \"I am honored to be of service.\"\n\n\"Ranji calls you his brother, Bilan. Indeed, the last time Ranji was here, you helped save us. If you will allow it, I would name you beta, which means son, and Rana as my beti, my daughter. For truly I consider that I have four grandchildren, not two, with a fifth one on the way.\"\n\nSeeing Rana wiping her eyes, Bilan replied, \"Thank you...\" He glanced inquisitively at me.\n\n\"Amaji,\" I supplied, giving him the Vedan word for mother.\n\n\"Thank you, Amaji,\" Bilan amended.\n\n\"Achha. Ranji, your father tells us there were alien ships that tried to shoot us down, and that you got us safely to the hospital. I have no reason to doubt your father, but did that really happen? Were there really aliens that tried to attack us?\"\n\n\"I'd like to hear that tale myself,\" Janetta added pointedly.\n\nFor those who hadn't heard the full tale, I recounted the events of my arrival home, our breakfast, and the discovery of not one Vedan agent, but three -- and one of them a draconian! I stressed the efforts of Bilan in helping save my life, and Styen's saving of my father and his aid to my mother.\n\nEven Bilan listened closely, and he'd been there for the first part of it. I believe the next part was new to him, and he leaned forward to hear the story.\n\nI did my best to describe the events. All of us hurrying to the Sunskipper, giving Bilan my pistol and guards trying to stop our launch, and the steps I took to get us airborne. The harrowing flight low over the trees while I tried to convince Sentry War Base not to shoot us down. Following the river, sometimes less than a hundred feet above the water. Then the sudden appearance of the draconian ships, and how one seemed to -- well, if it didn't teleport, it moved incredibly fast and took the hit meant for us. There were a few intakes of breath at that part. Janetta, ever the interceptor pilot, listened attentively to every description I gave, following the tale intently.\n\nWhen I described how the second draconian ship fired on the first, there were several surprised looks. I spoke then about the draconian agent at the naval hospital who had intervened when I was strapped to a hospital bed, killing both of the two draconian assassins attempting to kill me.\n\nThen I described how the Air Service interceptors flew to protect us, our landing, and how my father had held my mother during the entire flight, telling her he loved her. How he carefully carried my mother into the ambulance, refusing to leave her side. My mother wiped her eyes at that, giving me an emotional smile.\n\n\"As for the draconian ship that protected us,\" I said, \"I can only speculate.\"\n\n\"Then I suggest you speculate,\" Janetta growled.\n\nI nodded. \"Well, we know the draconians are allies to the Aesir-Vedan Alliance. Mother, I've already told you what happened to Sisi, and how we found Mina.\"\n\nIxma glanced back at the girls, and Zinja squeezed my hand.\n\nMy mother nodded grimly. \"A truly disturbing tale.\"\n\nI continued. \"Apparently, there is a group of draconians opposed to the main government. They believe humans should be treated with respect. They call themselves the Order of Quetzal. I suspect the ship that defended us is part of their group.\"\n\n\"Ranji? Why were you in the hospital, strapped to a hospital bed?\" my mother asked.\n\n\"Yes, why were you?\" Janetta glared at the memory.\n\n\"Someone tried to kill Ranji,\" Calia supplied. \"They shot him in the leg. He didn't get it treated. It became infected and had to be lanced.\"\n\n\"Why were you shot, son?\"\n\n\"Because of the Unit Protection Orders, Mother.\" I saw Sisi looking at me, worried. Leaning forward, I held out my hands. \"Come here, Sisi.\"\n\nScooting off the couch, she ran across the room to me. Calia and Cholan made room for her to get by as she climbed into my lap.\n\nStanding on the cushion and wrapping her arms around my neck, she asked, \"The draconians tried to hurt you, Tenant?\"\n\n\"They tried. But I'm here and I'm okay, Sisi.\" I had to remind myself not to squeeze her little body too tightly.\n\n\"What's your name?\" Zinja prompted her.\n\n\"Sisi Topkoransa Ba'lanchicotl Kandikan,\" she declared proudly.\n\nI blinked. That was a mouthful, and my girl said it perfectly.\n\n\"Very good, Sisi,\" Zinja praised. \"How come you have such a long name?\"\n\n\"Because you wanted me, Mama Zinja. You and Tenant. And Ixma wanted Mina.\"\n\n\"That's right. Who rescued you and Mina?\"\n\n\"The 'Manders... I mean, the commanders and Tenant.\" Sisi smiled indulgently at Zinja. This was obviously a well-practiced set of questions.\n\n\"Who loves you?\"\n\n\"Everyone!\"\n\nI chuckled at that, as did most everyone else. Even Janetta smiled at her.\n\nSisi turned to me, her eyes big. \"Do you love me, Tenant?\"\n\n\"Yes, Sisi,\" I assured her. \"Very much.\"\n\n\"Do you love Mina, too?\"\n\n\"I love you and I love Mina-beena, too. You and Mina are my daughters. No matter what happens, Sisi, I will love you and Mina, and I will do my best to take care of you and to keep you safe.\"\n\n\"I love you, Tenant.\" Then she hugged me again.\n\nCholan and Ixma grinned up at me, and Calia said, \"That's so sweet!\"\n\n\"Why don't you sit on my lap, Sisi?\"\n\n\"Okay.\" Without ado, she settled against my chest, closing her eyes.\n\nI yawned. \"Rana, you are looking positively radiant. Congratulations are in order. Do you know what you and Bilan are going to have yet?\"\n\n\"We haven't asked the doctors yet, but with all the kicking, I'm sure it's a son,\" she replied, rubbing her round belly as she smiled. \"I'm pretty sure that's all my husband knows how to make.\"\n\nBilan kissed her temple affectionately.\n\nI yawned again, feeling the day's exertions catching up with me. \"I'm sorry. Bilan and I have both done a lot of traveling in the past two days. Can we resume visiting tomorrow?\"\n\nMy mother cleared her throat. \"As a gesture to the women in your household, Ranji, your daughters will stay with me tonight.\" She carefully stood up, holding the still-sleeping Mina. \"I will be at the dining table at nine tomorrow morning. I would very much appreciate seeing you at breakfast, my son.\"\n\n\"Yes, Mother.\" Mindful of Sisi, I rose up. \"I'll carry her and follow you.\"\n\nJanetta and the others stood up. \"We'll meet you in the bedroom, Ranji,\" Janetta said, striding out of the room. Zinja, Ixma, and Calia kissed the girls, then Zinja and Ixma followed after Cholan and their captain.\n\nCalia went over to Bilan and Rana, offering to help with getting their boys to bed. Rana was too gravid to easily carry even Mika easily. Gratefully accepting, Bilan picked up his eldest son, Powan, and Calia scooped up Mika. After making sure everyone was ready, Rana led the way to their suite.\n\nA servant appeared and began collecting dishes.\n\nI followed behind my mother toward my parents' set of rooms, carrying my precious bundle in my arms. It felt good to carry my daughter, and I resolved to repair my relationship with Mina as soon as possible. With a sigh, I knew I couldn't force it. What it would take was time. Time showing her that I loved her, and spending time with both girls as their dad. I reminded myself that it was not enough to provide food and a place to sleep. Being a dad means being there with your child, making them the focus of your attention, whether it's teaching them the wonders of the world, just having fun together, or correcting them. By watching us, they learn how to act and interact with others.\n\nI had many such memories with my parents, both together and separately. All those times, even when I was being disciplined, served to make me the man I was. Such had led me to where I was now, carrying a little girl who gave me magic hugs, called me her Tenant, and dozed peacefully in my arms.\n\nOnce in my parents' bedroom, I was surprised when Mother pulled back the blankets on her bed and laid Mina down. I had expected there to be a separate futon or a divan for them to sleep on.\n\n\"You are letting them share your bed?\"\n\nShe nodded. \"She and Sisi sleep better together, and Mina seems to need having an adult to cuddle up to. Ixma is her mama, and the last time Ixma was away, Mina ended up needing to be held before calming down.\"\n\nTheir short ordeal, when both were caged and scared, and faced with their murderous draconian captors still haunted Mina. That Mina had so quickly responded to her new grandmother bespoke of the great strides that Ixma and Calia had made with her.\n\nI laid Sisi beside Mina. The girls automatically scooted together, Mina not even opening her eyes and Sisi draped her arm protectively around her. I pulled up the blankets over them, giving each a kiss on the forehead.\n\nMother perched on the end of the bed. \"I admit I was resistant to how the girls were being treated, thinking Mina was being coddled. Calia helped set me straight. Your Janetta, too, had words with me. She let me know in no uncertain terms that their care under Zinja, Ixma, and Calia was exemplary, that they had your complete trust with your daughters, and that the girls were loved by everyone in your household, including their Aunty Cholan. Even Sisi looks out for Mina. Your Janetta told me that Ixma was doing just fine as Mina's mama, and that if I didn't like it, I had a choice of getting a punch in the nose or slapped silly. Her exact words, Ranji.\"\n\nIf Janetta had said everyone loved my girls, then she, too, had become attached to them. Unable to help myself, I grinned like a fool.\n\n\"Ranji, why are you smiling?\" she demanded. \"Your girlfriend threatened to do violence on me!\"\n\n\"Oh, you're right, of course. She shouldn't do that to you. I'm just happy to learn that Janetta cares for my girls. She was quite angry with me for adopting them, though in part, that was my fault as I sprang them on her without any discussion beforehand.\"\n\n\"I see. Well, she's obviously changed her mind. I suppose it's better that she chooses to protect them. While I don't appreciate being threatened, I can understand her actions. The girls love their adoptive mothers a great deal, and they all respect your Janetta.\" She sighed. \"Ranji, I am proud of the things you've done and all that you are trying to accomplish. Bilan called me yesterday morning from Mohingo War Base. He told me you were seriously injured, but were expected to make a full recovery. I was worried before about your career choice, but now I'm becoming afraid for you. How many times were you hospitalized while you were gone?\"\n\n\"I'm afraid I've lost count,\" I admitted.\n\nHer hand flew to cover her mouth, her eyes wide.\n\n\"Remember those Protection Orders, Mother? The fight I spoke to you about before has begun. Many women will embrace this change, but though they will benefit from this, there are some women who will oppose us.\"\n\nMother nodded. \"We women are taught to preserve relationships, to focus on our families. Change brings uncertainty, and that might mean danger to their family.\"\n\n\"Yes, people are trying to kill me. If I am struck down, I can only hope enough people will be inspired to pick up where I left off. This fight is for you, for Janetta, Calia, Zinja, Ixma, Cholan, and for Rana, too. It's even more of a fight for my daughters.\"\n\nI looked at my girls curled together, sleeping peacefully. \"I was blessed by the love of two wonderful parents. I only had a short time to start being their dad before I had to leave, but I tell you those memories helped me endure being away as much as the love of my family. I want my daughters to have opportunities to learn, to be safe, and to be happy. Imagine a world where their feelings and voices aren't dismissed because they are women! When they grow up, I want them to have a say over their own bodies, to have the right to say no. And maybe, just maybe, women can vote, and have equal rights under Imperial law.\"\n\nTears spilling, she nodded at me.\n\n\"You're partly to blame,\" I told her.\n\n\"Me?\"\n\n\"Of course! You, Father, and Calia all had a hand in shaping my views on women. For which I cannot thank you enough. I grew up seeing the respect and love between you and Father. I am doing my best to treat the women in my life the same way. Janetta once told me that such respect and kindness helped win her heart. I know what the rest of the world should know as a given truth -- women are the equal of men. We aren't the same. We can't be. And we are affected by our biology. But socialization has an even bigger role. I want a better world for my girls, and all the other girls out there.\"\n\n\"How can a mother say no to such as that? I am so proud of you. Please promise you will continue to take care.\" Rising up, she hugged me, sniffling. After a long moment, she leaned up and kissed my cheek. \"You should go now. They're all waiting for you. Good night, my son. I will see you in the morning.\"\n\nI hugged her back. \"Good night, Mother.\"\n\nExiting the suite, I headed toward my own set of apartments. Along the way, I passed a pair of guards quietly on patrol. After checking me out, they moved on with their rounds. Again, the card reader reported that my ID needed to be updated. The guards politely encouraged me to attend the matter as soon as possible.\n\nI was sad that we needed armed men at all, much less moving about within my parents' home. I was already resigned to the fact that when we returned to High Guard War Base, I would need guards to protect my family. Styen may or may not be able to be with me. While I would relish his presence at High Guard, I wanted my father to be protected.\n\nEntering the darkened front room of my suite, I closed the door behind me, and headed on the bathroom. After doing my business, I washed my hands, taking in the fact there were a lot of jars and brushes and the like on the counters. Beside the trays for the toothbrushes was a fresh one, still in a wrapper. Calia, no doubt. I quickly cleaned my teeth, and headed for my bedroom.\n\nAnd halted at the sight of five naked women chatting quietly in repose on the bed. All of them turned to me.\n\n\"There you are!\" Janetta declared, sitting up against the headboard. \"Took you long enough! Get naked, Kandikan. Otherwise, I'll let them have the pleasure of stripping you. You have ten seconds, so don't dawdle.\"\n\n\"Can we start the count at five, Captain?\" Cholan asked cheekily.\n\n\"I second Cholan's motion,\" Ixma added with a grin. Calia laughed.\n\nEven Zinja looked interested in helping. Doing my best to suppress my own laughter, I unbuckled my weapon and laid it on my dresser. Then I rapidly shed my clothes.\n\nJanetta instructed me to lay down near her. I noted that Calia made sure there were at least two towels under both my head and my butt. At Janetta's direction, a very flushed Ixma lowered her nether lips for me to plunder with my mouth. Running my hands over her smooth skin, I welcomed the opportunity to renew my intimate relationship with her. While I was occupied with that, Zinja, Cholan, and Calia slowly masturbated while taking turns playing with my balls and cock.\n\nIxma didn't last long, shuddering under my tongue as she flooded my mouth with her tangy sweetness. One of the first things I noticed was that her pussy was no longer completely bare. The lips were just as smoothly shaved, but the light brown hair on her mound above her cleft had been allowed to grow back.\n\nDespite their attentions, having already performed so well in the hangar, I was content to enjoy giving them pleasure.\n\nCholan was next, and she didn't last long either. Calia was so worked up, that she came in less than a minute on my face. I noticed that while Cholan and Calia had retained the hair on their mounds, they were shaved like Ixma.\n\nZinja, I noticed, was trimmed but retained a full bush. She lasted the longest of the four women, doing her best to raise her pleasure while not reaching her peak. When I felt the tension building in her legs again, I slipped one arm around her to hold her in place, then plunged two fingers into her leaking lips. Found that soft, spongy spot just inside and gently rubbed it. Arching her back, Zinja gasped, wriggling about in my firm grasp. My thumb found a place at the base of her clit and moved it circles. Zinja made guttural sounds while she writhed about.\n\nCholan and Ixma giggled.\n\n\"Captain,\" Calia asked archly, \"Is he checking her engine?\"",
        "\"I would say so,\" Janetta confirmed. \"Looks like she needed it.\"\n\nWhen Zinja let out a wail, I pulled out my fingers and pulled her pulsing cavity to my mouth. Latching onto her clit, I flicked it rapidly with my tongue. The wail rose to a scream as she bucked and gushed. Breaking free of my grip, she rolled off. Heaving for air, the tall, long-legged woman curled into a ball, her hand between her tightly closed legs. Each time a tremor racked her body, she whimpered.\n\nJanetta nodded at me. \"Good job, Kandikan. Time for the next stage.\"\n\n\"You aren't going to sample the offering?\"\n\nShe shook her head. \"I need to build back up to it, and you already had your way with me. This time is for them.\"\n\n\"All right. So what's next?\" I inquired.\n\n\"They want the same thing you gave me, Ranji. To feel your hard cock deep inside their pussies. I daresay they have missed you as much as I have. So be fair, and try to hold off until each of them has had their pleasure from you.\"\n\n\"I will do the best I can,\" I assured them. Hopefully, it would take a lot for me to come again.\n\nWith some direct attention from Calia and Cholan, I became fully engorged.\n\nOnce again, Ixma was first. Flushed and trembling, she moved over me. Nervous, she had to look down to find my erection. Then she guided it to her slick, swollen folds. As my crown passed within her outer lips, Ixma sucked air and trembling, she closed her eyes as I began to enter her wet heat. \"Oh, Ranji, I love you!\"\n\n\"I love you, too, Ixma.\"\n\nMoving slowly at first, she soon took my full length within her body, rocking her hips. She kept her eyes focused on me, her blue eyes full of need, vulnerability, and love.\n\n\"That's it,\" I murmured. \"You're on top. As fast or as slow as you need, Ixma.\" I returned her gaze while she rode my cock.\n\nIn almost no time at all, her breathing deepened and she moved faster. Reaching up, I kneaded her small breasts, playing with her so-very-sensitive nipples. I felt wetness on my thumbs, but Ixma began to cry out, bucking harder and harder onto my shaft.\n\n\"Come for me,\" I urged her.\n\nWith a shuddering wail, she did. Leaning forward, heaving for air, she kissed me, murmuring my name between tremors.\n\nI whispered to her, \"I love you, Little Mama.\"\n\nLifting her head, she gave me such a look of adoration. Calia helped her off and gave her a wet washcloth to clean herself with. When Ixma was done, Calia spooned up behind her, caressing and holding her. Their relationship had obviously strengthened during my absence.\n\nCholan moved up next. Like Ixma, she guided me to her center. As I began to penetrate into her slick, hot sheath, her eyes widened. \"Oh, goddess! You're so big, Lieutenant!\"\n\nI grinned at her, running my hands over her shoulders. Even her breasts were a bit smaller than they once were, they were still huge for her small body. I marveled that her areolas were still as large as the palms of my hand.\n\n\"You look really good, Cholan.\"\n\nShe blushed, but she was also immensely pleased with my response to her efforts. While she had a bit further to go, she really had lost a lot of weight in only half a year. When she sat up, her wet folds met my groin. I felt my tip brush against her womb. Her nether lips were tightly stretched, but there was no sign of pain on her face. I was pleased she was able to take my full length again.\n\nCholan smiled down at me, running her hands over her much smaller belly. \"Do you like it?\"\n\n\"I do,\" I told her.\n\n\"Cholan's lost eighty-seven pounds since starting her treatments,\" Janetta informed me. \"She's exercising with us, and working hard to continue losing weight. She's no longer tired all the time. We are all very proud of her.\"\n\n\"I'm proud of you, too, Cholan,\" I said.\n\n\"I owe it all to you, Lieutenant--\"\n\n\"Don't be silly. You did all the work. You did it, not me.\"\n\n\"But that's not true! I need to say this, sir. Even when I was so fat that I was embarrassed to look at myself in the mirror, you made love to me and made me feel loved.\"\n\n\"Cholan,\" Janetta warned. \"Don't tell him! Show him how glad you are that he's back with us. If you are going to talk, get off and let someone else have a turn.\"\n\n\"Yes, Captain.\" She slowly started rocking on me.\n\nKneading her large breasts got her attention, and Cholan began to move with more enthusiasm. For several long moments, she stroked me into her tight core. She moaned and gasped, but I could see she needed more. I remembered what it was.\n\nGiving her bare butt a slap, Cholan cried out, moving faster.\n\n\"Come on, Cholan,\" I told her. \"I need you to fuck for me.\" Two more slaps, one to each cheek. The small Island woman bucked harder, her eyes pleading for more. Another slap to each.\n\n\"Ranji...\" Janetta warned.\n\n\"It's all right, Captain,\" Calia said. \"She likes it.\"\n\nCholan leaned forward. \"Hair!\"\n\nSliding up my hands, one hand to her shoulder and the other to grab her hair, I gripped her close, pumping hard into her tight, slick center. Her head pulled back, her moans rose as I bucked hard into her body. Stroke after stroke, opening her up to my presence. Another pair of slaps and she suddenly froze, body arching and trembling. Slowing down my thrusts, she held me tight, whimpering through her orgasm. I felt the rush of her fluids around my shaft.\n\nLetting loose of her hair, I ran both hands up and down her back. As Cholan began to relax, she kissed me gently, then laid down on my chest. Being so short, the top of her head came up to my chin. I nuzzled her with my cheek and she snuggled against me.\n\nCalia and Ixma both leaned over to Cholan, grinning. Ixma asked, \"As good as you remember it?\"\n\n\"Better,\" she breathed.\n\n\"You need to move, Cholan,\" Janetta said. \"It's Calia's turn.\"\n\nWith obvious reluctance, Cholan struggled to get up, but with Ixma and Calia's help, she chose to roll off me instead. Ixma handed her a wet wash cloth to wipe between her legs, then moved behind her. I noted the gentle hug and affectionate peck Ixma gave her, and that neither woman were startled by the intimacy of the embrace.\n\n\"Is it truly my turn?\" Calia asked.\n\nJanetta nodded.\n\nStroking me gently with one hand, she moved over me. Lining me up, she closed her eyes as she pushed herself back, and I was engulfed within her clasping folds. When I felt her hips meet mine, she sat up. Opening her eyes, she bowed her head.\n\n\"Welcome home, my lord. All of us here greet you with our bodies and with love in our hearts. Our lonely winter is at long last over.\"\n\nBracing her arms up by my sides, she leaned over. Calia worked her hips in a very small, tight circle, grinding herself against me. I smiled at her, recalling her great control. She was giving me her entire focus. I felt her pussy ripple along my shaft. Within seconds her face flushed. A gasp, then biting on her lower lip, her eyes locked on mine.\n\n\"Please, my lord, may I... may I come on you?\"\n\n\"Yes, of course you -- holy gods!\"\n\nCalia barely moved, but her sheath suddenly tightened its grip before releasing me. Her entire core undulated around me in throbbing waves, from her entrance and rippling inward to her womb, milking me within her hot, slick pussy. Her spasming cervix pulsed, kissing the underside of my fat tip. Sweet sensation! My balls suddenly tightened and I was racing toward my own release.\n\nBefore I reached it, Calia lifted off, our separation a wet sound. As I plopped out, she gave a shiver and husked, \"Thank you... Master.\"\n\nJanetta, surprised, asked, \"Did you really come that fast?\"\n\nThe eyes of Ixma and Cholan were glued to Calia's sex until she moved. Both nodded.\n\n\"Her pussy lips are still pulsing,\" Ixma said with awe.\n\n\"Your turn, Zinja,\" Janetta announced.\n\nCalia picked up a washcloth, placed it between her legs as she laid down, curling up next to Ixma. She shivered again.\n\nZinja moved tentatively to me. The tall, lean woman smiled. \"Hello, Lieutenant. It's really good to see you again.\"\n\n\"Hello yourself, Farm Girl.\"\n\nShe blushed at that, but smiled broadly, too. \"You are something, sir.\"\n\nJanetta grinned at me, nodding. \"You did good, Ranji, lasting through all of them. Give Zinja what she wants. Fill her up.\"\n\nMoving into position, Zinja lifted my shaft, aiming me at her pussy. I was still wet from Calia, so she slowly pushed back, pausing a little every inch to allow herself to get used to being stretched.\n\nOnce I was fully buried within her wet folds, she sighed. \"It's been so long since you were last inside me. You feel enormous.\"\n\n\"You feel good to me, too,\" I assured her. Calia had brought me close, and it would be an effort to keep from ejaculating right away.\n\nShe shifted a little. Lifted a bit and pushed back down. Rotated her hips, then moved up and down, her face less one of pleasure than like she was looking for something.\n\n\"Something wrong?\" I asked.\n\nZinja shook her head. \"It's not you, sir. It's me. I'm not getting much from this position. Captain? Can we change?\"\n\nStartled, Janetta said, \"Of course. Do what makes you feel good, Zinja.\"\n\nAlmost pleading, she looked at me as she lifted off. \"Good. Because I need you on top, Lieutenant. I need your weight on my hips, driving down into me.\"\n\nI smiled at her. \"Sure.\"\n\nWe shifted about, and after replacing the damp towels with a fresh one, Zinja laid back, spreading her legs. I moved over her, lining myself up. As I began to slide back into her body, she lifted and wrapped her legs around me. Shifting and pushing, I worked my way deeper into her pussy until my balls rested on her butt.\n\n\"Better?\" I asked her, braced on my arms above her.\n\n\"Oh, yes,\" she sighed. \"Much better.\"\n\nI began a slow thrusting into her heated depths. With each push into her core, her heels pressed against me, urging me to go yet even deeper. Responding to her encouragement, I picked up the pace a little. Her breathing deepened, and little gasps more often became low moans.\n\nGrowing wetter, Zinja rocked her hips each time I bottomed out.\n\n\"Like this?\" I asked her.\n\n\"Oh, gods, yes.\"\n\nMoving more firmly, I leaned down and kissed her. Her mouth opened and our tongues danced, her arms holding me close. For long seconds we tasted each other while I worked my cock inside her welcoming pussy.\n\nToo soon we had to break the kiss, our need for air too great. I shifted from side to side some, and she appreciated the change. Resuming deep stroking, I picked up the pace another step, and Zinja moaned and gasped, her hips thrusting upwards to welcome my length over and over. The tightness building in my balls returned with a vengeance. Her heels added her own insistent urgency to each plunge into her slick heat. In no time, my hips were slapping against her center, my hard cock thundering into her passage. She was moaning almost continuously now.\n\nI needed more. Pausing a moment, I pulled her legs up, setting them onto my shoulders. Bent in half, her pussy rose up, her swollen, sodden lips spread around my hard cock. Now I pounded into her, each thrust a wet smack of skin on skin, and the weight of my hips driving into her core. Zinja grunted as she bounced underneath me, taking everything I gave her. Her hands gripped my arms. Slowly she began to arch her back, her cries shorter, louder.\n\n\"Are you ready for it, Farm Girl?\" I demanded.\n\n\"Yes! Oh, gods, give it to me!\"\n\nEvery firm thrust into her clasping sheath filled me with growing need. I drove even harder into her molten pussy. Then I felt the coil loosen, and I shoved into her, pressing and grinding and grunting as I coated her womb with lines of hot, sticky semen.\n\nHer eyes shot open and her hands gripped my butt. \"Yes! I feel it! So hot. Oh, gods, you're so deep inside me,\" she moaned.\n\nGrinding back against me, Zinja suddenly bucked several times, and I felt her walls throbbing around me.\n\nFor long seconds we continued working our sexes together, gasping for air, until the pleasure we shared began to fade. Letting her legs off my shoulders, she sighed gratefully. Leaning down we kissed again, less ardently but no less loving.\n\nKissing along her jaw, I whispered in her ear, \"You sure are good at taking seed, Farm Girl.\"\n\nAlready flushed, Zinja burst out laughing and somehow managed to turned an even darker shade.\n\nLeaning up on one elbow, Janetta grinned at her. \"Did he make you feel good, Zinja?\"\n\n\"That he did, Captain.\" She ran her hands through my hair, gazing up into my eyes. Then she lightly pressed my shoulders. I got the message. Lifting slowly to allow our sweat-slickened skin to pull apart, I withdrew from her body.\n\nOn my knees, I'm sure I was as surprised as Janetta when Zinja pushed her down, crawling over and moving between her legs.\n\n\"Zinja, what--\"\n\nLeaning down, Zinja growled, \"He filled me up, Captain, full of his hot seed. I need to give you your share.\" Her hips began to move, angling high, sliding her swollen, sticky vulva over Janetta's center. Rubbing her mound against Janetta's, grinding clit against clit. Holding herself by one hand, the other squeezing Janetta's breast.\n\nFrom my position, I saw a glob of semen ooze out, only to get squished between them by Zinja's movements.\n\nBefore I had a chance to do anything, Calia was helping me onto my back. Pushing my legs apart, her tongue began licking along my inner thighs. Ixma and Cholan joined her, hungrily taking turns cleaning my shaft and balls of Zinja's juices and any trace of semen. With the three of them working me over, they were soon done.\n\nWhen I looked back over at Zinja, she had Janetta's legs pinned back onto the bed. While she continued rubbing their clits together, she looked down at her officer. \"It's dripping out of me, Captain. His seed is dripping out of my pussy and down into yours. Feel me soaking your pussy with your man's seed, hot and sticky, fresh from his balls. From him to me, and from me to you.\"\n\nIxma and Cholan clambered up and snuggled one on each side of me. I held them while they grinned, taking turns kissing my face, neck, and chest.\n\nCalia soon returned with a warm, wet washcloth, and cleaned me more thoroughly. Once she was done, she grabbed the large comforters from the floor, shook them out and covered us. She picked up my clothing, setting my shirt and trousers onto a chair. Then she left again.\n\n\"Where's she going?\" I asked Ixma.\n\n\"Don't know. She's supposed to be here with us.\"\n\nZinja huffed as she moved with greater speed. Janetta moaned as she worked.\n\nI felt the mattress behind me shift. Calia had a tray, smiling at us. \"Sit up and drink.\"\n\nCholan and Ixma readily drank down their tall glasses of cool water. I was thirsty as well. \"Thank you,\" I told her quietly.\n\nThere were two more cups and more washcloths on the tray.\n\nJanetta and Zinja moaned together. Zinja released Janetta's legs, and rolled off to lay beside her, wrapping her arm around her officer and lover.\n\nCalia went around and offered them drinks, which they gratefully drank down. When she offered wet washcloths, Janetta declined.\n\n\"It will probably itch by morning,\" Calia warned.\n\nLooking at her sergeant, she replied, \"Zinja went to a lot of effort to make sure my pussy was covered with Ranji's come. Just give me a dry one.\"\n\n\"Zinja?\" Calia asked.\n\n\"Same as my captain. Thank you.\"\n\nWhile Calia finished collecting the used towels from the bed, Janetta rolled on her side. \"I'm pulling rank, Cholan. You need to move.\"\n\nIn compensation, I gave her a couple of kisses. Turning to face Janetta, we scooted together. Zinja closed the gap behind her captain, and Ixma snuggled up behind me. Cholan was behind her, and when Calia was done, she climbed in and spooned up behind Cholan. Once upon a time, I'd thought my bed was huge. It was crowded with all six of us, but we managed.\n\nI kissed Janetta several times, happy to hold her in my arms, happy to be sleeping beside her again.\n\nShe sighed, closed her eyes, and settled in against me.\n\n\"Thank you,\" I told her quietly.\n\nKeeping her eyes closed, she asked, \"For what? As much I would have loved to keep you to myself, I love them, too, and it wouldn't have been fair. They are mine, and I will take care of them.\"\n\n\"Even Calia?\"\n\n\"No, Calia is definitely yours, Ranji, but she has been very helpful to all of us while we missed you, and she's become a part of our family.\"\n\n\"I love you, Janetta. I love your honor, loyalty, strength, and integrity. You are a true warrior. Because of you, I have them, too. And because of them, I have my daughters. You are my family, and I love you all.\"\n\n\"Go to sleep, Kandikan.\"\n\n\"Yes, Captain.\"\n\n* * * * *\n\nI awoke to the sensation of a wet warmth around my hard cock, and someone moving slowly along my length, working her butt against my groin.\n\nAs I came to, I thought it might be Janetta, but no. In the ambient light, the hair was longer and lighter. I realized, too, I had turned over during my sleep.\n\nIxma.\n\nI let her work a while. When I heard her sniffle, I pulled out. \"Bathroom. Now,\" I told her quietly.\n\nTo my surprise, Calia and Cholan also got up, and all three of them trooped out of the room. Turning around, I looked for Janetta. She was on her belly, and Zinja was snuggled up beside her. I carefully moved off the bed and headed for the bathroom.\n\nWhen I entered, the three of them stood together. Ixma was in the middle, still sniffling, and her arms folded like she was huddling in on herself. Calia and Cholan both started to speak, but I held up my hand.\n\n\"First off, I'm not angry,\" I said. \"I don't have an issue with any one of you letting me know you want to make love to me. We were both naked in bed together after all. What I want to know is what the crying is about. I thought we were good. Is there something I did or didn't do?\"\n\nIxma looked aghast, fresh tears spilling down her face.\n\nCholan turned to Calia for support. \"It's not you, Lieutenant. She was hurt bad while you were away.\"\n\n\"I know that,\" I said quietly. Reaching over, I lifted Ixma's chin. \"I didn't get a chance to read all the many messages all of you sent to me, but I did get those. From Calia, from your mama, and from your captain. All telling me how much they love you, how badly you were hurt, and each of them worried about you getting better.\"\n\n\"She spent almost two days in the healing tanks, Lieutenant. She was hurt that bad,\" Cholan said.\n\nI didn't recall reading that part. I must have of missed that particular message.\n\n\"Was it too soon to have sex, Ixma?\"\n\nShe shook her head, her blue eyes glistening. \"No. I know in my heart the difference between you... and all the men who've hurt me. You are gentle. Caring. You make me feel safe and loved. I just... I just...\" Ixma looked away.\n\n\"Go on,\" Calia urged. \"Tell him what you need. And why. He needs to know, and he needs to hear it from you.\"\n\nTaking a ragged breath, she nodded. \"I need to feel you come inside me.\"\n\n\"Okay...?\"\n\nCalia nudged her. \"Tell him why, Ixma. It's important.\"\n\n\"Each time he came in me, he hurt me and called me names. I felt dirty. I know he was just trying to hurt my heart. I know they were lies. But the words still hurt. I know I am a bastard girl with no money and no land... and I know you don't care about that. I love you with all my heart, Ranji. You picked me as the first of us to wear your neckerchiefs. Me! You gave me a daughter to love. I... I...\"\n\nI held out my arms and she flew to me. \"I love you, Little Mama.\"\n\nShe looked up at me, she bit her lip, then took a ragged breath. \"I know you do. I'm your woman, but I still feel dirty. Please, I need you to come inside me, to wash away all the bad memories and make me feel like I'm your woman again.\"\n\n\"I'm telling you, all I care about is that you are alive.\" I looked into her blue eyes, pleading with me. \"All right, Ixma. If the symbolism will help, let's go take a shower together.\"",
        "Her eyes lit up with a smile full of love. Wiping her face, she turned and headed into the shower stall, starting the water.\n\nCholan said, \"It's four in the morning. I'm going back to bed, to try and get some more sleep.\"\n\n\"Good night, Cholan. And thank you for your support,\" Calia said with a smile. She hopped up to sit on the counter.\n\nI leaned over and gave Cholan a kiss before she left. Then I gave Calia one as well.\n\nStepping into the water, Ixma and I washed each other. There was no real urgency, but rather it was a continuing of our becoming reacquainted with each other again, and a savoring of being intimate together. Soaping up her small breasts, I ran my thumbs over her sensitive nipples. I was surprised when milk escaped.\n\n\"There was wetness earlier, too. Are you still nursing Mina?\"\n\n\"Sometimes. Calia helped with that for awhile.\" She watched my thumbs gently play with her hard nipples.\n\n\"I recall we've had some good times in the shower together.\" I brushed strands of wet hair from her face.\n\nRunning her hands over my chest, she nodded. \"That night in the hangar, with everyone watching you take me was so hot. You held me in the air by the strength of your arms. I couldn't do anything but take what you gave me. Over and over and over. I thought you might split me apart at one point. And I came so good on your nice, hard cock, Ranji. And I came again when I felt you giving me your hot come.\"\n\nHer hand drifted down, stroking my shaft, encouraging it to expand and lengthen.\n\nUnder the spray of the hot water, I leaned in to her, kissing her cheek. Nibbled her ear lobe. \"Did you? Hmm. I also remember the night Sisi came to us. On the ride home, you told me you wanted me to bone you.\"\n\nGiving me a sultry smile, she said, \"I remember that. A bittersweet night. Sad for Sisi, but that was the night you told Mama that Sisi could stay, and you'd stand by her. You made Mama so happy, Ranji. And later, in the shower, just like now, you took me with your hard cock, giving me firm strokes until I came on you as you gave me your love. You can bone me again, Senior Lieutenant. I want your hard cock inside me, sir, and I want to feel you coat my womb with your hot, Senior Lieutenant's seed. And if I scream, I assure you it will be with the utmost respect and love.\"\n\nPulling her into my arms, I kissed her, my tongue finding hers, and we explored each other's mouths. Her hands held me close while I pressed myself against her. Breaking apart, both of us breathing heavily for a handful of heartbeats, we renewed our kiss, both of us now hungry to taste the other.\n\nLips sliding apart, I nibbled along her jaw, then ran my teeth down her neck. She groaned as she bared it to me. Her hand stroked my engorged shaft. Lifting her up while pressing her against the shower wall, I inhaled a breast.\n\nCrying out at the sensation, her legs lifted and wrapped around my waist. As I sucked, I was startled by the warm, thin milk filling my mouth. Swallowing, I sucked harder, and my mouth filled again. Ixma arched, pushing her breast toward me.\n\n\"Oh, gods, yes! Drink from me!\" Her hands held my head as I swallowed several times. I shifted to the other breast, and she groaned as I fed from her.\n\nLooking up to her, pinned against the wall, she husked out, \"I love you so much, Ranji!\"\n\nMoving my arms under her legs, she aided me. Letting her drop down, she reached between us, guiding my cock toward her slick center. My hands slid down to cup her rear.\n\nAs my hard knob parted her puffy nether lips, her eyes closed. \"Oh, gods, you're so hard, and ah! You're stretching me...\"\n\nPushing into her, I soon reached bottom, my flared crown brushing against her innermost core. Her mouth dropped open as I began a firm, thorough probing of her pussy. Side to side, then stroking for depth, then side to side again. Her hands gripped my arms, squeezing as she moaned out her pleasure. All the while, hot water sprayed between us.\n\n\"Look at me!\" I said. I could already feel myself coiling toward release.\n\nHer eyes snapped open.\n\n\"I am your man and you are my woman.\" All the while, I continued stroking within her long, velvety passage. \"Do not ever call yourself a bastard girl again, Ixma. Do you understand? You are a warrior, of decent, hard-working Free Farmer stock. Mina is our daughter, Ixma, yours and mine. I see you, Ixma Ba'lanchicotl. I see you.\"\n\n\"Oh, Ranji!\" She watched me disappear into her body for several strokes. Then closed her eyes again. Moaned louder.\n\nI pushed harder with each stroke, shoving myself against her yielding mound. Pleasure and tension neared the precipice. Long strokes became a deep, grinding, thorough exploration of her inner depths.\n\nHer fingers dug into my shoulders. \"Harder, Ranji! Harder!\"\n\n\"Gonna come... inside you... Ixma!\"\n\nAt nearly the same instant that I began coating her walls with hot, sticky semen, Ixma cried out, her body quivering as she clung tightly to me. I felt her muscular sheath rippling along my entire length.\n\nTrembling, she clung to me. \"So... so good!\"\n\n\"Take it all, Ixma. Feel me deep inside you, filling you up. Do you feel it?\"\n\n\"Yes!\" she cried. \"I'm clean and alive again.\"\n\nI kissed her and brushed water from her face. \"You always were clean, Ixma. From the day you were born. You are a warrior. Your enemies are dead, and you are still standing. Repeat it.\"\n\nStaring at me, her mouth opened, but no words came out.\n\n\"He will die, Ixma,\" I promised. \"Now say the words.\"\n\n\"I am a warrior. My enemies are dead, and I am still standing. My Ranji sees me and he loves me, and I love him with all my heart.\"\n\nI had to kiss her again, so I did. My ejaculations had faded, but it felt good to just stay there, ensconced within her body, savoring the connection between us.\n\nWhen I felt myself start slipping out, I let down her legs. Ixma winced.\n\n\"You okay?\" I asked.\n\n\"Need more practice,\" she replied, then grinned. \"A lot more, Ranji.\"\n\nWe soaped up and rinsed off, and I turned off the water. When I turned, she hugged me.\n\n\"Better?\"\n\n\"Yes, Ranji. Thank you.\"\n\nAfter drying off, we exited the shower stall. I noticed the chair first, and the lights had been replaced by several burning candles. Calia sat patiently on the counter by the sink. The surprise was Janetta, sitting on the toilet.\n\nWiping herself, Janetta stood up, flushed, and went to the sink to wash. As she dried her hands, she looked at Ixma. \"You've had us all worried for a long while. Are you going to be all right now?\"\n\n\"Yes, Captain.\"\n\n\"Good. We have to share him, Ixma, and not wear him out. Mina's in the other room -- now stop and wait a moment! She came in a bit ago, looking for you, followed by Sisi. They're sleeping with your mother, and they're both fine. Lady Kandikan checked to make sure where they were, so she knows they're here. And what about you, Ranji? Are you coming back to bed?\"\n\n\"He needs a shave, Captain,\" Calia interjected. \"I have beard-burn between my legs, and I am positive I'm not the only one. Ixma's going to do the honors.\"\n\nGrinning, Janetta ran the back of her hand along my cheek. \"Good call. You gave my innards such a good working over, I had to pass on the wonders of your mouth on my pussy. Tonight, however, when we go to bed Ranji, I'm planning on some alone time with you, and your face needs to be smooth. Got it?\"\n\n\"Yes, Captain,\" I answered, contrite.\n\nGiving my butt cheek a squeeze as she went by, she said, \"Good man.\"\n\n\"My beard is really that abrasive?\" I asked Calia.\n\nThey both nodded. \"It's not long enough to lay flat,\" Calia explained. \"Besides, you look much better without it. You have a firm jaw, and it gets lost when you grow a beard.\"\n\nCalia hopped off the counter and guided me into the chair.\n\n\"You sure about this, Calia?\" Ixma asked.\n\n\"I can shave myself,\" I said. \"I do it all the time.\"\n\n\"Apparently not enough to remember it's a daily task,\" Calia replied tartly. \"So sit still and behave. Besides, she's been practicing with the razor.\"\n\nHaving been put in my place, I sat.\n\nCalia applied the hot towel to my face. Ixma was nervous, so Calia talked to her. I learned that Ixma, prior to being with me the first time, wanting our first time together to be special, had had a pubic wax, but that it had hurt a great deal.\n\nIxma worked carefully.\n\nDuring my absence, Calia had persuaded Ixma to try shaving instead. A razor would be more frequent, but a great deal less painful. Ixma had agreed on condition that Calia teach her how to shave others. Enter Cholan. They had the routine down so that Calia or Ixma shaved, and the three of them were done within a few minutes. A necessity, since until recently, Cholan and Ixma had their work at the hangar, and couldn't spend a lot of time fussing around.\n\nIxma nodded, then smiled. \"Yeah. Thanks, Calia. Your talking helped.\" She wiped off my face with a damp towel, then stood back. \"How is it?\"\n\nI ran my hand over my face. Smooth! \"Good job, Ixma. First rate.\"\n\n\"Are you going back to bed, Ranji?\" Calia asked.\n\n\"No. I haven't had a chance to do any exercise in over a week, and I've let myself get even further out of shape. I'm going to go for a run.\"\n\n\"Take Sisi with you,\" Calia said.\n\nIxma blinked, then grinned. \"That's a good idea. She'd like that.\"\n\n\"She's what, four years old? She can't keep up with me.\"\n\nThey both laughed. \"Of course she can't,\" Calia replied. \"Styen exercises with them when he's here. He has a fitted strap-on harness to carry her with. They go on the South Trail, then he drops her off, and continues on the Southwest Trail.\"\n\n\"Besides,\" Ixma added, \"she's going to be five in a few months.\"\n\nMy mind did a quick calculation. \"That's about twelve, nearly thirteen rads. Drops her off where?\"\n\n\"Where the southeast trail intersects with the hiking path. It's only a rad from the house to the drop-off spot,\" Calia explained. \"You know. Where the trail arcs back toward the house. You and Sisi head out. We'll walk down with Mina and meet you, pick up Sisi, and we'll walk back. She liked her time with her Uncle Styen. You had such a good start being her daddy, spending time with her before you left. It'll be good for you both.\"\n\n\"All right,\" I said with a grin.\n\nIxma and Calia quickly cleaned up, and we headed back to the bedroom. I went to the wall and looked at the display unit. It gave a read-out of the time, temperature inside, and outside weather, including wind and direction. Cool out, but not too cold.\n\nGoing through my dresser, I dressed in shorts, tee-shirt and running shoes. Dug through the closet and found my small hip pack. Then went through my duffle bag and retrieved my shoulder holster. Transferred my pistol and three magazines to it. Verified safety as on. Phone and ID card went into the hip pack.\n\nAs I got dressed, everyone else got up as well. I was surprised.\n\n\"I get to ride with Tenant?\" Sisi yawned as she looked at Ixma.\n\n\"Yes, you do. We need to go get dressed. Come on, Mina.\"\n\nCholan, Calia, Ixma and the girls scurried out the door. To my surprise, Zinja and Janetta also got up.\n\n\"What are you doing?\" I asked Janetta.\n\n\"Going with you,\" she scowled. \"I'm not really fond of running. I prefer other types of exercise. But fuck me if I'm letting you out and about on your own. I just got you back, Ranji, and you have a nasty habit of getting into trouble when I'm not around.\"\n\nZinja, with her long legs, was probably a natural runner. She gave me a patient smile as she got ready.\n\nSwinging by the kitchen, we grabbed several bottles of electrolyte water, and gathered at the southeast door. To my surprise, Bilan was there with his boys, carrying his own harness.\n\n\"You, too?\" I inquired.\n\nBilan nodded. \"It's good exercise, and I get to spend time with Mika.\"\n\n\"So, you and Mika ran with Styen and Sisi?\"\n\n\"We did,\" he confirmed. \"It's more fun when you have others running with you. It gets a lot of use from some of my troopers. And, they keep the trail safe and picked up.\"\n\nOne of the kitchen staff ran the blender and passed out several glasses of powdered protein mixed into a fruit smoothie. Janetta and her flight crew hurried through, downing drinks as they whizzed by. Ixma carried Mina in a hip harness, all bundled up against the morning chill. In preparation for the run, Mina was shifted and secured onto Ixma's back.\n\nAfter a few minutes of stretches, Bilan and I were loaded up. Mika loaded up on Bilan, and I got fitted with Sisi. Sisi even had her own little pack.\n\nWhen the harness was buckled on and she was settled into place, I thought that Sisi must be eating well, because she felt a lot heavier than the forty pounds I'd estimated.\n\nJanetta set off, followed by Zinja, Cholan, and Ixma. They disappeared along the east-bearing trail, into the line of trees.\n\nBilan and I followed.\n\nThe morning was cool, and in some ravines it was almost chilly. Spring was still new yet, and it's always cooler in the mountains, especially in shaded areas. Along about the second rad, we began our uphill climb. I also began to feel Sisi's weight.\n\n\"Come on, Tenant! We're last!\" Sisi urged.\n\n\"Working on it,\" I grunted, already sweating.\n\nAt the top of the first hill I paused, sucking air. Holy gods, I thought. I am really out of shape! I'd better be doing this more often!\n\nAnother two hills and I was heaving l like a bellows. Bilan waited at the curve in the downward trail, and after wiping my brow, set off to catch up. Twenty minutes later, we rounded the bend and saw several people waiting for us. Calia with Mina. My mother, chatting with Calia, turned and waved at us. Two armed ground service troopers, too, keeping watch.\n\nMy brother and I unloaded the kids and the harnesses. I couldn't believe how rubbery my legs felt. I struggled to keep upright, and downed my bottle of water. My shirt was soaked. Calia handed me another bottle, which I put into my hip pack. Ixma and Cholan stayed behind. They were done. The South Trail is only three rads, but it has some pretty steep grades on it, especially on the uphill portions.\n\nThen we set off after Janetta and Zinja, to finish the longer part of the run.\n\nThe morning was nice.\n\nI think.\n\nI slipped into a sort of fugue-state, determined to complete the course, focusing on keeping my legs moving, one foot after the other. Bilan held back to keep me company. He kept laughing at me, and I let him. What was the reason I liked him again? To be fair, my head reasoned, that if I was that out of shape, I deserved all the laughter he chose to heap upon me.\n\nOnce back at the house, I staggered through the hallway toward my own suite, and headed straight for the bath and its jacuzzi jets. I couldn't even manage to get undressed first. I just climbed in, closed my eyes, and let the water pound my muscles.\n\nJanetta and Zinja were just getting out, and they laughed at me as they left to get dressed. They'd been naked in the water, but I was beyond caring. Somewhere in the back of my mind, I was embarrassed and ashamed of myself, that I'd let myself go that much. I knew I needed more endurance work when I was crossing the hills during my last mission. But this was deplorable!\n\nCalia came in and handed me another smoothie. She looked at me with concern. \"Are you all right? You don't look so good.\"\n\n\"I'm wiped out and I'm ashamed about it. I'll live.\"\n\nShe nodded grimly. \"Drink it down. It'll help.\"\n\nI did, and settled back to let the jets pummel my body a little more. Calia woke me up when I started to doze. She helped me out of my wet clothes, wrung them out and set them to dry. It was an effort to climb back out of the hot tub. At her insistence, I climbed onto her massage table, which she must have set up while I'd dozed. She worked mostly on my back, but spent about half an hour rubbing a liniment all over my body. Gods above, I really loved her right then.\n\nI would have hugged her, but she wrinkled her nose and playfully pushing me away, she settled for a quick thank-you kiss. The liniment worked well, but it was pungent, and she didn't want the scent on her clothes.\n\nFeeling much better, I got dressed. Sitting at my personal computer, I checked for recent messages. While they downloaded, I looked up Senior Lieutenant Sisi Beytindl, Deedee's friend and mentor. I soon found her. She was still assigned to the hospital staff at Paxilman. Carefully composing a message to her, I explained that Deedee had died recently, and that we were going to be holding a memorial for her, and that if she wanted to attend, I'd provide transportation for her.\n\nI next spent some time looking up Emilo Bitawel, the Armadillo driver that had given me a ride on a cold, rainy pre-dawn morning that now seemed a lifetime ago. Thinking on it, he'd probably saved my life. Once I found his contact information, I sent him a message, identifying myself by my real name and by the name I'd given him, and thanking him for his kindness. I let him know that I'd made it home to my family, and my daughters. I also asked him about his wife's response to the idea of magic hugs, and to tell me more about his children.\n\nAfter that, I scanned for messages that were work related, and started to re-acquaint myself with the goings on. General notices and the like. I was tempted to call Sergeant Chita and Lieutenant Killayana and checked the time. It was just after eight. Tohingo being almost directly south of High Guard, we were in the same time zone.\n\nTaking a chance, I dialed the Ground Service officer's number.\n\nHe picked up on the third ring. \"Killayana.\"\n\n\"Lieutenant? This is--\"\n\n\"Don't give me your name, as I'm positive that Air Security is monitoring my phone. Ground Security is working on the issue, but so far with no success. What your ETA?\"\n\n\"Hopefully by the weekend. How are things going there?\"\n\nHe exhaled. \"Not good. Did you get my earlier messages?\"\n\n\"I got a chance to read them yesterday,\" I told him.\n\n\"Then you know a couple of the buses were attacked last week. Two Air Service women were shot and killed right on the bus. All the others were hauled outside, then were beaten and raped by a gang of almost twenty armed men. They took the cameras we had installed. Unfortunately, they used condoms as well, which was very atypical, as they had to know we were taking samples for DNA testing. Besides the murders, physically injuring the women is all we can get them on. Their faces were covered and naturally no one knows anything. Almost half the women were Ground Service, and there are a lot of angry troopers. It was enough of an issue that the base commandant finally stepped in. Commander Barankoshto provides an armed escort on each route now. I assume you know what happened to your Personal Servant, to the corporal, and the others?\"\n\n\"I know about the first two. Please, fill me in about the others.\"\n\n\"Sergeant Chita Wanwari was attacked three separate times. Raped each time.\" My gut went cold as he continued. \"The last time, she was cut up pretty bad. She was in the hospital for almost two weeks. Your Captain paid to have her get nano-treatments, so she's healed. Lieutenant Lovyanchiti was also beaten and raped, abducted as she came out of the Commissary. She identified her attacker as Captain Tonca, but there was nothing that could be done, as he had several witnesses that said she resisted a lawful order for sex from a superior officer. Captain Xotochan of Logistics was asked if he wanted to press the issue, but he declined. Tonca is a sixth-degree Eagle Warrior, so that's no surprise. Fortunately, she was found by an armed patrol before a second incident happened. Commander Barankoshto ordered her to go to Tik\u00fan to attend the War College. That was... almost six months ago to the day. She should be nearly done now. Corporal Sowitwee went with her.\"",
        "\"Seven hells,\" I replied when he paused. I'd already promised Ixma that Tonca was going to die. My reasons to kill him kept growing.\n\n\"There's more, and it's bad,\" Killayana continued. \"We've had seven murders, one a week. All the victims are women. All with a card that demands the Unit Protection Orders be rescinded, and a promise that more will die until their demands are met. Of course it's gotten out. \"\n\n\"I see. The two women who were killed on the bus. Who were they?\"\n\n\"Corporal Rilli Sayocharda and Private Sosha Payyes. I'm told that you knew both of them.\"\n\n\"I did. What happened to their bodies?\" Seven hells! I remembered them both from that day that now seemed so long ago. Doyya was the third of the three. All three were in the Air Service trying to better themselves and were continually preyed upon.\n\n\"The commander gave them a military funeral. Their ashes were sent home to their families. What do you plan to do?\" he asked.\n\n\"Lieutenant, I intend to clean out all the filth in my division as best I can. Thank you for the information.\"\n\n\"I will keep this call on the QT.\"\n\n\"Thank you.\"\n\n\"Safe flight and safe return, Lieutenant. Killayana out.\"\n\nI closed my phone and stared at my computer screen. Slamming the lid closed, I got up and exited my suite.\n\nI hadn't been there to help protect them. Hadn't been there to help fight what was going on at High Guard. Instead, I'd been under the mountains getting tortured by mad men. While people under my command were hurt or killed by yet more mad men.\n\nSearching out the nearest guard post, I inquired as to the location of their master at arms.\n\n\"What do you need to see him for, sir?\" The guard looked at me with some concern.\n\n<br >\n\n\"Cleaning supplies. I need to clean my weapons. And get more ammunition for my rifle.\"\n\nThey gave me directions, and I set off. I was so angry at the state of affairs at High Guard, I stalked about, willing myself to ignore the aches of protesting muscles. I needed to figure out what I was going to do. How I was going to kill Tonca and anyone else involved with the murders, the rapes, and the beatings of the women, and do it so I didn't get shot by Voyacherno or one of his men.\n\nI knew that Orchid hadn't had a chance to dig out the child trafficking ring. She'd cleaned out those involved with the drug plot, handled the graft, embezzlement, and thieving, but hadn't had time to dig any deeper before she'd had to flee for her life. I wanted to talk to Melannee right then. For advice, if nothing else. But she was gone undercover, and hopefully she was safe from Supay.\n\nI almost ran into Bilan. Literally.\n\n\"Ranji! I called after you, and it's like you didn't even hear me. Something's gotten you riled up. What's going on?\"\n\n\"I need cleaning supplies for my pistols and my rifle. And, I could use more rounds for my rifle.\"\n\n\"This couldn't wait until after breakfast?\" he asked, turning me around, pointing me back to the house.\n\nI realized I was on the driveway, heading down the road to the Ground Service base.\n\n\"Tell you what,\" he said. \"I need to do my weapons, too. We'll clean them after breakfast together, all right? And maybe have some of that talk we need to have?\"\n\nHe held my arm, looking intently at me.\n\nGiving an exhale, I deliberately made myself calm down, then gave him a smile. \"All right, Bilan. If you insist-- Hey, you have your captain's diamond! Congratulations, again! Should I be hurt that you didn't let me pin them on you?\"\n\nRelaxing, he smiled as he clapped my back. \"No, you shouldn't. Rana put them on. I like you well enough, Ranji, but I like her much better than you.\"\n\nI laughed. \"Fair enough. She must have been proud to put them on you.\"\n\n\"She was indeed. Told me she is the proudest captain's wife in all the Ground Service.\"\n\n\"I can believe it.\"\n\nWe passed through the door checkpoint and re-entered the house. It was nearly time for breakfast, so we both washed up and headed to the dining room. A servant brought us both cups of freshly brewed cahault.\n\nWe were chatting about our children when Ixma and Calia entered the room. Ixma carried Sisi's little backpack, and it looked like it was heavy. My daughter, Sisi, was between them, and her head hung down.\n\n\"Good morning, Sisi!\" I turned my chair to face her. \"Thank you for going on my run with me today.\"\n\nCalia scrunched up her face and looked away. I was going to ask her about it, but Ixma nudged Sisi. \"Go on, tell him what you did.\"\n\n\"I'm sorry, Tenant! I didn't know it was a mean trick!\"\n\n\"Sorry about what? What was a mean trick?\"\n\nIxma set the pack down onto the table. It made a considerable thump against the wooden surface.\n\n\"Uncle Styen said to use that pack when you were here.\"\n\n\"Oh, he did, did he?\" I pulled the pack over, surprised by its heaviness. I opened the flap. Alongside a water bottle and a few snacks, there were several weights. I pulled them out, one by one. Three soft packs, ten pounds each. Two more, five pounds each.\n\nForty extra pounds at a full run. Some of it uphill, with some parts at twelve percent grade. I didn't feel so bad about my run anymore.\n\nI turned the smaller ones over. Noticed that one of the fivers had Tlacotli written on it. I stared at it.\n\nBilan picked one of the tens up. \"Uh, don't know how to tell you this, Ranji, but this one's mine.\"\n\nI stared at him. \"Really!\"\n\n\"There's another extra ten pounds on the harness, Ranji,\" Calia added.\n\nI sat back into my seat and took a long, slow drink of cahault, letting the chocolate and coffee flavors fill my mouth. Pondering over the fact that I had been the subject of several independent pranks on my first day back home.\n\n\"You gotta admit, this is pretty hilarious,\" Bilan offered hopefully.\n\n\"Are you mad at me, Tenant?\"\n\nPicking her up, I sat her onto my lap and hugged her. \"I'm not mad at you, Sisi. But next time, don't do that.\"\n\nBilan sat back and laughed quietly at me.\n\n\"As for your Uncle Bilan, well, it's a good thing he's a grown up.\" I turned to look at him. \"If my little brother did that when we were kids, I'd give him such a wedgie, it would take him a week to get it unstuck!\"\n\n\"What's a wedgie?\"\n\n\"A mean trick that you should never do to other people,\" I told her. It wasn't really an answer, and I could see that thought crossing her almost five-year-old mind.\n\nMy mother chose that moment to enter the dining room. \"Ranji Kandikan! You shouldn't be telling Sisi about wedgies! A disgusting and cruel practice designed to humiliate and intimidate, and that sort of behavior is not allowed in this house.\"\n\nI sighed. \"Yes, Mother. Calia? Will you put these things away? And if possible, return the weights to their owners. Ixma? Where's Mina?\"\n\n\"Mina's with my mother.\" Ixma sat beside me. \"Sisi, shouldn't you go sit at your seat?\"\n\nSisi seemed to be quite happy sitting on my lap, leaning against me. \"Mama Zinja's not here yet. Can't I stay longer?\"\n\nI started to tell Ixma that Sisi was fine where she was, but thankfully I realized that would have been a mistake. Ixma was her big sister and effectively another parental figure. If I countermanded her instructions, I would undermine Ixma's authority. Chain of command is important. Worse, I would show Sisi that a man's authority surpassed a woman's, which would be a subtle undermining of Janetta's authority and the other adult women in my household as well. Oh, the subtle permutations of discrimination!\n\nSo I wrapped my arms around Sisi and gave Ixma a big pout. \"Please, Ixma? Can't she stay just a few moments more? Pretty please?\"\n\n\"All right. Just until your mama comes in. Okay?\"\n\nSisi grinned at her, and we thanked her, then grinned at each other.\n\n\"Will you read to us tonight before bed, Tenant?\"\n\n\"Would you like that?\"\n\n\"Of course! I missed you, Tenant. Mina does, too. She just doesn't 'member.\"\n\n\"Remember,\" Ixma automatically corrected, taking the seat on my left.\n\nSisi rolled her eyes. \"She doesn't remember.\"\n\n\"It's a date, Sisi. You and Mina, a bedtime story,\" I told her. I caught my mother's smiling gaze as she watched our exchange. I winked at her, and buried my nose in my daughter's hair.\n\nOther people filtered into the dining room. Rana and the boys took chairs by Bilan. Cholan found a seat. Zinja brought Mina to Ixma, then sat on the other side of her daughter. Janetta sat on my other side. Like myself, Janetta and all her crew wore their class B uniforms. Calia returned and found a seat beside Cholan.\n\nIn between, three servants rolled in carts with dishes, silverware, and napkins, as well as trays of food both hot and cold. A veritable feast. I was reluctant to let Sisi go, but saw that she happily went to her seat next to Zinja, who greeted her with a kiss to her cheek, a beaming smile, and a whisper into her ear.\n\nIxma saw my look and nodded. \"She told Sisi that she is the luckiest mama in the whole world to have such a good girl to love.\"\n\nSisi turned to her. \"Momma Zinja said she was lucky to have three good girls to love. Me, you, and Mina. She whispered it, so it's supposed to be a secret, and you shouldn't tell secrets.\"\n\nThere were several amused smiles, and Ixma was surprised at the rebuke.\n\nZinja laughed. \"It's all right, Sisi. That's a secret I am happy to share. What else is important about secrets?\"\n\n\"That if the secret makes me feel bad or afraid, I tell you or one of the grown-ups in our family.\"\n\n\"Who are the grown-up in your family, Sisi?\" my mother asked.\n\nSisi grinned. \"You are, Grandma! So is Momma Zinja, Ixma, Calia, Aunt Cholan, Captain, and Tenant. Uncle Bilan. Aunt Rana. Oh, and Grandpa and Uncle Styen, too!\" She looked at Zinja for confirmation.\n\n\"Very good, Sisi,\" Zinja told her. \"Now eat your breakfast.\"\n\nA surprise entry to the table was the arrival of Captain Harketsi, who quietly entered and claimed a seat. My mother greeted him and he replied courteously, but he decidedly ignored me and Janetta.\n\nJanetta returned the favor.\n\nThe food, as usual, was good, and was a mix of Vedan and Queschuan dishes. I was surprised and pleased to see that besides eggs, we also had kheer, a boiled rice and milk dish, with dried bits of starfruit and chopped cashews. Raisins and pistachios were the traditional additives, but were rather expensive, as they have to be imported via the East Islands. Besides, I was used this version of kheer.\n\nBilan announced that he had a new entertainment video for the children to watch while Captain Tlacotli and I went to the base to get our weapons cleaned. \"After the movie, a Tortoise will be here to pick up Lady Kandikan, the Captain's Flight Crew, and Ranji's daughters and my sons to spend time at the pre-school.\"\n\n\"There's a pre-school nearby?\" I asked, surprised.\n\n\"Of course,\" Rana said. \"With all the Ground Service personnel and the servants, it makes sense to share resources.\"\n\n\"How's Meeno and his family?\" I asked Bilan.\n\n\"I checked on them a bit ago. They are eating in the servants' area and are overwhelmed. He's going out this afternoon to start looking at properties for sale.\"\n\n\"Thank you.\"\n\n\"It's nothing, my brother.\"\n\nThe rest of the meal was pleasant and passed quickly.\n\nIxma and Rana took the children to watch the video, and my mother joined them.\n\nOnce we were back in my suite, Calia and Zinja collected dirty laundry for washing. Janetta dug out her pistol, and I emptied most of my duffle bag, digging out my Caiman and the rifle. All three of the women took notice of the LRS-12, but said nothing.\n\nI could tell Janetta was agitated with me. She paused by me on her way out, growling, \"You'd better come clean soon, Ranji, or there will be grief to pay.\" Without waiting for a response, she stalked out.\n\nZinja gave a worried look at the doorway, then looked at me.\n\n\"Don't worry,\" I assured her. \"I'll deal with it. Later, when the rest of you get picked up, we'll have a long talk while the kids are engaged elsewhere.\"\n\n\"Yes, sir,\" was her quiet reply.\n\nA quick kiss to both women, and I headed out after Janetta.\n\nAs I exited the house, a ChoCac pulled up. Bilan already sat in front with a driver. Janetta and I entered the back seat. Bilan turned to look at us with a grin, but he saw Janetta's dark cloud and my frown and turned away. With a wave, he told the driver to go.\n\nThe Ground Service company was set up near the house, about five rads down the hillside from our home. It had its own access to the main road. The small base had a heavily fortified perimeter, cleared of trees and brush, with tank barriers along the barb-wire fence. As we passed through the checkpoint, I noticed that on the other side of the small base was a control tower, and I could see a few hangars in the distance, as well as the runway for the Sunskipper.\n\nThe ChoCac sedan pulled up to a concrete building and we entered. Bilan led us past an open work area, and past some offices to a conference room.\n\nStanding inside the room was a first sergeant that Bilan introduced as Kwakiti, a master-of-arms. Large, tan tablecloths were laid out on two tables, and laid out on both tables were assorted screwdrivers, brushes, and oils. When I opened up the duffle and laid out the rifle, the sergeant asked to look at it. I let him, and he gave it a practiced examination.\n\n\"No carrying case?\" he asked me.\n\n\"The one I was given was compromised. Any suggestions?\"\n\nHe grinned. \"Let me take a look in the stores and see what I can find, sir. Back after a bit.\"\n\nAs he prepared to exit, Bilan called out to him. \"Get him a shoulder holster for the Caiman while you're at it. And three fully loaded magazines as well. The Lieutenant likes to be well armed.\"\n\n\"Yes, Captain,\" he said as while exiting the room.\n\nFolding her arms, Janetta almost snarled at me. \"Okay, Kandikan, spill it. Now.\"\n\nI quickly broke down the rifle and laid it out onto the cloth. \"What in particular do you need to hear first?\"\n\n\"You were at the hospital at Mohingo. What were you doing there, and why were you in the hospital? I thought your training was south from your parents' place.\"\n\n\"I was given a mission after I left my training. After I completed it, I went to see your mother.\"\n\n\"You what?\" She grabbed me and spun me around, getting into my face. \"What part of 'No Contact Order' do you not understand, Lieutenant? What are you? A fucking moron? You had no damned right doing that! No right at all. Who gave you the right to stick your nose into my personal business! How dare you do that behind my back?\"\n\n\"Because I love you, Janetta.\"\n\n\"What kind of idiotic excuse is that?\" she yelled, her nose nearly touching mine. \"I ought to kick your miserable ass from here to High Guard and back again!\"\n\nFrowning, I just stared back at her.\n\n\"Well? Nothing to say?\" she demanded, glaring at me.\n\n\"Go on. Get it out,\" I told her quietly.\n\nFor almost three solid minutes, she let loose a stream of more swear words, foul invectives and descriptions about me. A short breath, then she screamed at me, \"I told you I wasn't ready! Instead of respecting my wishes, and respecting me, you stick your busybody nose into my personal business. So what gave you the right to do an end run around me, Lieutenant? Answer me, damn you!\"\n\n\"I still love you, Janetta,\" I said quietly. \"That was a good part of what helped me make it back home.\"\n\nThere were two sharp raps at the closed door.\n\nBilan, half sitting on one of the tables, arms folded as he watched us, called out, \"Enter!\"\n\nA Ground Security sergeant entered, his stunner drawn. Behind him was his partner, similarly armed and ready. \"Captain Monaycote, sir, is everything all right?\"\n\n\"So far. Senior Lieutenant Kandikan has just returned after fifteen weeks of being away from home. Captain Tlacotli was just telling him how much she missed him. Because when I found my brother two days ago, he was dying and we almost lost him.\"\n\nJanetta looked startled, then stepped back, her face a riot of emotion. Then she turned away, both hands fisted.\n\nThe sergeant looked at us, then back to Bilan. \"Just call us if you need us, sir.\"\n\n\"We don't need any help, do we, Captain Tlacotli?\" She didn't answer. \"I thought not. Thank you, Sergeant. There may be more yelling, but we'll be fine.\"\n\nThe sergeant quietly closed the door and the three of us were alone again.\n\nJanetta and I stood where we were.\n\nAfter a few moments, Bilan cleared his throat. \"Ranji, being as she hasn't resumed tearing you a new hole, I think it's fair to assume it's your turn to speak.\"\n\nI looked at her, raising my eyebrows. \"Do I get a chance to speak now, Janetta?\"\n\nShe gave me a grudging nod.\n\n\"How much to tell you both now? It's a long tale, and not one I really want to repeat more than once, and mostly because it's personally difficult.\" I took a long breath. \"I admit that I did know about the No Contact Order. When we first met at Tik\u00fan, I looked up your personnel jacket. Not very admirable, I know, but after our first intimate meeting, I was confused by your distance afterward, and I wanted to know more about you. I also saw that there was an order from the Minister of War himself that you and your mother be watched, to make sure you remain safe. Once you entered the Air Academy, that oversight ended for you, but as long as she never remarried, it should have remained in place for your mother.\"\n\nJanetta nodded, obviously irritated. I wasn't telling her anything new. I continued.\n\n\"I was on my way home when I arrived at the bus depot in Kachotl. I saw the name of the town you grew up in on the list of destinations, and I bought a ticket. Why? Good question. I'd been pushing you about your mother, but I knew nothing about your reasons why you wouldn't talk about her, and why you cut off all contact. And yes, I did go against your wishes, and you've let me know how you feel about that. In my defense, I needed to know if I was doing right by you. If your mother was some harridan or a crazy, cruel woman, then having no contact made perfect sense. And before I left, you as much as told me you were thinking about your relationship with your mother. You told me you'd treated her badly.\n\n\"Anyway, on my way to Uiyatiwitz, I ran into the farming family. They had lost everything due to drought. It was presumption, but I figured that if I liked your mother, I'd pay a couple hundred credits each month for them to have a home, keep their farmer status and have a chance to save some money for a place of their own someday. In the meantime, they would help out your mother. If I didn't like your mother, then I'd bring the family back home with me, and set them up near here.\"\n\nI looked at Bilan. \"Because of the rampant graft and corruption, the farmers in Huezteca are slowly being starved out by a ruler who should be taking care of his people. Without ready access to fresh water, the city itself is dying. I couldn't see leaving Meeno and his family there.\n\n\"I met Meeno's wife first. I was sitting alone on my seat on the bus. Because I wore a uniform, no one would sit near me. She had a heavy pack on her back and carried her infant son in front. But despite her heavy burdens, she stood in the aisle. When I offered her the seat next to me, she wanted to know what I wanted in return. What does that say about our people if a simple kindness is met with suspicion? Or, maybe it's just that their experience with the Warrior Caste is nearly always one of abuse. Anyway, we arrived at your mother's house, and she wasn't there. Do you remember your next-door neighbor, Teela?\"\n\nJanetta rolled her eyes. \"A nosy, busybody always trying to tell me how a proper woman should behave.\"\n\n\"Huh. Well, I think she's mellowed some. Teela was taking care of your mother. Apparently the local street gang made regular visits to your mother's home, robbing her, injuring her, and probably much worse -- though neither your mother nor Teela would talk about it.\"",
        "Janetta looked startled at first, but her eyes quickly blazed. I knew the anger was no longer directed at me.\n\n\"The gang stopped by regularly to steal her money and whatever food they could find. When I saw her, there were old bruises mixed with new ones on her arms and face and neck. And I seriously doubt if she's even a hundred pounds. You've lost weight, Janetta, during my absence. Your mother is slowly starving to death. Or at least she was.\"\n\nStarting to pace, anger flashed briefly across her face at the news of her mother's mistreatment. Anger. And something more. Yet she remained silent, letting me continue.\n\n\"I introduced myself to her and told her I am in love with you. She wanted to know how you were doing. I could see right away how much you resemble her. Large, intelligent eyes as black as night. The way you move your face when you're pondering something. Two women with fierce tempers and strong wills, both grieving for the man they both adored.\"\n\n\"You think you know her?\" she snapped at me.\n\n\"Janetta, she told me she considered herself a failure as a mother, and that she knew you hated her. It was apparent to me that she believes she deserves your hatred.\"\n\nThat observation seemed to trouble Janetta. Looking away, she muttered, \"I don't hate her.\"\n\n\"If you believe in the gods, maybe my going there was to give her some peace. I remember the night of the first hurricane at High Guard. You were in the hospital, recovering from your injuries. We had a visitor and she told you how your father died. It helped you to know the truth, didn't it?\"\n\nShe nodded.\n\n\"I can see now it was a terrible cruelty to lose the man so important to both of you, and worse to not know what happened to him. I told her what we'd learned. I think her tears were as much relief, from knowing at last what happened to the man she still loves and mourns. Later I tried to convince her to leave that house and live somewhere else safer. She said it was the house her husband bought for her, and all of her happiest memories were there. Including seeing the joy in her husband's face when he first looked at his baby girl.\"\n\nI wasn't sure how to proceed with the next part, other than to just get it over with. Even though she was calmer now, I could see she was still angry with me.\n\n\"I, uh... I paid the House debt to Teela, and--\"\n\n\"House debt?\" she demanded. \"What House debt?\"\n\n\"For taking care of your mother, of course!\" I said. \"For nursing her back to health when she was too injured to care for herself. Giving her food. Teela did those things as an act of friendship, repeatedly. But Teela is not in your mother's service.\"\n\nBilan nodded, and Janetta realized the implications.\n\n\"What did Teela ask for?\" Janetta asked quietly.\n\n\"Sex.\"\n\nHer mouth dropped open. \"You know she's like a hundred years old! She has grandchildren as old as I am!\"\n\nBilan struggled to keep from laughing at me.\n\n\"Teela's in her sixties. That's... not so old,\" I scowled.\n\n\"You... fucked Teela?\" Janetta's arms flew up, her face incredulous. \"You actually put your cock inside her and hosed down her insides? Gods of North and South! I think I'm... words fail me, Kandikan. Zinja keeps thinking that she's too old to be your lover. She needs to quit worrying. You'll bang her when her tits are hitting the ground.\" She looked away, then gave me an odd look. \"You actually fucked that old woman? Yes, I can see it in your face. You did.\"\n\nThen she started laughing. For several minutes, as she tried to collect herself, she'd look at me and mutter, \"Ranji fucked Teela,\" and then she'd be off again.\n\nBilan was more discreet, but he did smirk and shake his head at me.\n\nWhen Janetta was finally ready for me to continue, she said, \"So you took her to the bedroom and did the dirty deed. So, what next?\"\n\n\"Uh, no. She insisted on some role-playing.\"\n\n\"What sort of role-playing?\" my lover asked curiously.\n\nI felt my face heat up. \"She wanted me to bend her over the table. I was the young lord who found the young, virgin milk maid.\"\n\n\"Did she actually say that?\" she asked, disbelieving me.\n\n\"Yes.\" And, in retrospect, that part of the encounter was amusing, so I cracked a smile myself.\n\n\"Okay,\" Janetta said. \"I'm still trying to handle the notion that you fucked Teela. Is that all?\"\n\n\"Um, no. As part of the role-play, she wanted me to pretend to take her against her will. So I, uh... ripped off her dress, and spanked her some.\"\n\nJanetta's mouth moved, but no sound came out.\n\n\"She must have liked it, though, because she came really hard--\"\n\n\"And how do you know that?\" she asked, incredulous.\n\n\"Well, she squirted all over floor--\"\n\nBoth of them erupted again with gales of laughter. Bilan handled it better, but Janetta grabbed her sides as she laughed. She tried to sit down, she was gasping for breath so hard, but she missed the chair and tumbled to the floor. Rolling about as she laughed hysterically.\n\n\"Teela screamed so loud, and with her dress torn off, well, your mother thought I was actually raping her, so she hit me with a frying pan.\"\n\nTheir laughter rose a notch or two, both of them wiping tears from their eyes.\n\n\"She squirted...\" Putting out her hand before her, Janetta gasped out, \"Stop! Stop! Ranji, No more. I can't... take it... anymore. Can't... breathe...\"\n\nShe really was getting rather purple in the face. Bilan wasn't much better.\n\n\"Teela explained things to your mother, and somehow they got my pants back on. Teela must have run upstairs naked to get a new dress, Because of all the screaming and yelling between your mother and Teela, Teela's grandsons were banging at the door to get back inside. Both of them are big men -- as big as Anton, and they carry these big clubs with them, everywhere they go...\"\n\nShe was laughing so hard no sound came out, and she couldn't get enough air. I definitely preferred her laughing at me than her being angry at me. And it was good to see my warrior laugh.\n\nThe master-at-arms re-entered the room, and paused, looking at both of the two officers nearly incapacitated with laughter. He raised his eyebrows as he asked, \"Should I come back later?\"\n\nI shook my head. \"Show me what you have, Sergeant.\"\n\nHe handed me the shoulder holster. I inspected the magazines, and put it on. The sergeant set the case onto the table and opened it. There were foam cut outs for the barrel and main part of the gun, and a space for the scope. He pulled out his knife and cut out a space for the noise suppressor.\n\n\"This is perfect, Sergeant. I can keep this? And this combo lock will keep it safe from my little girls.\"\n\n\"Yes, sir. Right now, the key is set to zeros. You set the number on the inside, here, to change it to something else.\"\n\n\"Perfect, Sergeant. Thank you.\"\n\nHeaving for air, Janetta pulled herself toward a chair. \"So what happened... after she hit you?\"\n\n\"I don't know exactly,\" I admitted. \"She knocked me out.\"\n\nJanetta slid back onto the floor as they roared with renewed laughter.\n\nThe sergeant looked at me quizzically.\n\n\"I visited her mother. She hit me with a frying pan. They think it's funny. And yes, she literally hit me. Knocked me cold.\"\n\nI have to give him credit. He didn't burst out in laughter, but he did smile with amusement. \"Your mother-in-law doesn't like you?\"\n\n\"It was a misunderstanding, Sergeant. We have things worked out now.\"\n\nHe nodded.\n\nFocusing on the task before me, I took brush and cloth and began working it through the rifle barrel. Then I ran the cleaning rod through with cloth dampened with oil, then a second time with dry cloth to remove the excess. I repeated the cleaning process for the bolt action pieces, inspecting them for dirt and debris.\n\nThe sergeant, a middle-aged soldier, set two boxes of 8.5mm cartridges onto the table, then broke down my Caiman and worked on cleaning it as I finished up with the rifle.\n\n\"Have you had a chance to use it much?\" he asked me.\n\n\"The rifle? Only ten rounds. But it's a good weapon, and the sights are spot on. Thanks for the box. I was completely out of ammunition.\"\n\nHe nodded, examining the parts for dirt and damage. \"There's a target range we've set up down the road, another ten rads away, if you're interested, sir.\"\n\n\"I'll bear that in mind.\"\n\nWith the sergeant and I quietly working, Bilan and Janetta pulled themselves together. Both of them were several shades of purple from lack of air.\n\nFor several minutes, the sergeant and I quickly and efficiently cleaned and serviced my weapons.\n\nThe other two worked a bit slower. They'd look at me, then at each other and snicker.\n\nThe sergeant recommended I replace the magazine for the Caiman. He pointed out a small dent that could cause problems. I agreed, and he left to get a replacement.\n\nJanetta put down the part she was cleaning and folded her arms, shaking her head at me. \"I still can't believe you fucked that old woman, that you bent her over her own kitchen table and... and fucked her virgin pussy... until she squirted all over the floor!\" Bilan had to put down the tools he was using to wipe his eyes.\n\n\"For the honor of House Tlacotli no less!\" she continued. \"Gods above, Kandikan. You must have hammered that old woman pretty good.\"\n\nI wiped off my hands and turned to give her my attention. \"Look. Bilan is my brother, and you are my lover, and I love you both, though obviously not in the same way. While you two are laughing, think about these things. I have no notion about what went on between you and Teela, other than the idea that you two butted heads nearly as much as you did with your mother. And, for the record, your mother was thoroughly scandalized by Teela's request.\"\n\nJanetta shook her head, quickly sobering up at the mention of her mother. \"I don't think I will ever be able to look at that old woman without seeing her in my head, bent over her kitchen table, yelling as she got spanked and pounded by you. Did you pull her hair, too?\"\n\nI nodded.\n\nThe snort of laughter she gave was rather loud.\n\n\"If you think about it, Teela's forced abstinence is part of the same problem I'm fighting.\"\n\nEyebrows raised, she asked, \"How's that, Ranji?\"\n\n\"You and the others want the right to say no. And that's a right you should have, no question. By the same token, shouldn't a woman also have the right to say yes, without having to have a man's permission?\"\n\nJanetta gave me an arch look. \"Are you actually trying to say that you poked that old lady to advance the cause of women's rights? Ranji to the rescue, filling one pussy full of sperm at a time? Get real, Kandikan!\"\n\nI frowned. \"Teela made the choice, and I did my best to get her to pick something else, but she insisted. And once she made the request, I was bound to do as she asked. I did it to repay the kindness shown to your mother. Teela may be old, but that's not her fault. And if you called her silly, Teela would probably agree with you.\"\n\n\"All right, then what are you saying?\"\n\n\"During my short time there, this is what I learned. Teela herself said that she had enough money to get by on, but that she hadn't been touched by a man in seventeen years. She obviously loved her late husband, but readily confessed that his inability to satisfy her sexual needs before his death had been a hardship. After a few years of being a widow, she wanted a new husband. She told me that after his death, her sons feared she might have more children, and refused to let her remarry. Fortunately, your mother successfully argued with Teela's sons to let Teela keep her house, instead of selling it and forcing her to be a live-in servant to one of her daughters-in-law. That old woman more than repaid that act of friendship.\n\n\"Janetta, you have told me that you are proud of me fighting for your right to say no to a demand for sex. That's what I intend to continue focusing on. But that's only a first step. The other side of that right to say no, is your right as a woman to say yes, to fully have control over your own body -- like that of a man. Because caste considerations aside, I see that equal legal and social rights between men and women as crucial to the Empire's survival against our enemies.\"\n\n\"I am proud of you, Ranji,\" she replied quietly. \"But what you're talking about might take years, even decades to happen.\"\n\n\"You will also face a lot of resistance along the way,\" Bilan warned. \"Many of those in power will see these changes as a threat to themselves and their wealth and privilege.\"\n\n\"Both of you are right,\" I conceded. \"I don't know what these social changes will do to our society. But I believe that the Empire is strong enough to withstand them. I also believe that in the long run, we as a people will be the stronger for it. People who have hope, who believe that they are happy -- those people are willing to fight harder to keep their way of life.\"\n\n\"I don't know, Ranji,\" Janetta said, shaking her head. \"It sounds like you are starting some sort of crusade. Where will I fit in all this?\"\n\n\"Right by my side, I hope,\" I answered. \"You are the best combat pilot at High Guard, Janetta, and I would not be surprised in the least bit to learn you are the best in all the Empire. Tell me, Janetta, was everything you endured at the Academy worth the price of being able to fly?\"\n\n\"Yes, it was.\" Her large, black eyes glittered with painful memories.\n\n\"If you had a brother, especially an older one, you might not have even been allowed to enlist, but instead you might have been forced into an arranged marriage at fourteen. In some states, the marriage age is twelve.\"\n\n\"But I didn't,\" she snapped. \"I am a pilot in the Air Service. It is what it is, Ranji. I'm not interested in playing what-if games.\"\n\n\"But it could have been,\" I reminded her. \"And for many women, it still is--\"\n\n\"So what, Ranji?\" she shot back. \"I can support the Protection Orders. It's a start, and an important one. But I don't want to start some movement that's going to keep you away from me. Or worse, get you killed!\"\n\nI waited a moment while she mastered her feelings. \"I love you, Janetta Tlacotli. You are an amazing Warrior, and I feel privileged to be a part of your life. I could say that this goal of mine was because of you, but that wouldn't be completely honest. Rather, it is because of all the women who've made an impact on my life. My parents, for showing me how loving and rewarding a marriage based on mutual love and respect can be. Calia for showing me how to properly love a woman, for her devotion, and teaching me the importance of kindness. And yes, for you, Janetta. But also for Zinja, Ixma, and Cholan, too. And for my daughters. Each of you has played a part -- an important part in opening my eyes to how women are treated. I daresay you are happy being a combat pilot. And I believe Rana loves being a wife and mother. You should have the life you want based on your choice and your ability, not because you happen to be female. I know you are afraid for me.\"\n\nJanetta just nodded, her eyes full of emotion.\n\n\"I feel the same, you know, every time you go into the air.\"\n\nI turned to the Master-at-Arms. He'd reassembled the Caiman, and was nearly finished with my Wampag Talon. \"Thank you for your assistance, Sergeant. We need some privacy now. If we need you further, we'll call for you.\"\n\n\"Captains. Lieutenant.\" Giving a quick nod, he exited.\n\nI locked the door. \"Grab a seat, both of you. I'm going to tell you everything that happened to me at Sparantzlo. Beginning with the hours of interrogation I got for saving my mother's life. For you see, my personnel file had been altered, removing my certification to fly the Sunskipper. One of Itznacoco's people made sure I had a parachute before I left. There was a winter front moving in over the mountains, but I was ordered to fly an Albatross to the base, and it was after dark by the time I reached the mountains. \"\n\nJanetta's eyes widened at that. Night flying, in the mountains, during a winter storm.\n\nI nodded. \"Yes, it was hours of nerve-wracking flying. I made it to the base, though, intact. What I didn't expect was the two active SAM batteries. I managed to dodge the first two volleys, mostly by blind luck and the terrain. I bailed but was hit by debris from the explosion, and ended up hanging by my parachute in a small nook, somewhat sheltered from the winter storm. Deedee Marrin had been warned to expect me. She went out into the storm, alone, to search for me. She rescued me and got me to a shelter. My entire left side was badly bruised from being hit. I had a bad case of frostbite on my face and couldn't feel my most of my feet. My hands weren't much better. It took us three days to climb back to her snow sled. If she hadn't gone out into the storm, I'd have died from the cold. No question.\"\n\nBoth were incredulous.\n\n\"Once I arrived, no one was interested in the fact that I had been shot down. Rather, they put me in the tanks to heal me up. So that I could be tortured. Just like Deedee warned me they would.\"\n\n\"Torture?\" Janetta demanded. \"What did they do to you?\"\n\nSo I told them. Some of it, in detail. Peeling off my skin. Laying in filth, too hurt to move.\n\n\"I love you, Janetta, and I love your whole body. I need you to know, though, I loved your butt before I left, and I love it now. I love to caress it and I will even kiss your ass because I think it is perfect. I won't claim to understand what you endured, but I will never ask to fuck your ass.\"\n\nShe burst into tears at that. \"You think I was worried about that? Gods of North and South, Ranji. Fuck. Just... gods damn it.\"\n\nBilan shook his head. \"They extended your stay by three weeks, just so they could torture you to near death, throw you in the tanks, and then do it again?\"\n\nI nodded. \"Me and everyone else there.\"\n\n\"Holy gods.\"\n\nWiping her face, Janetta looked at me. \"Calia... she... During those first few weeks you were gone, she had nightmares about you. Said you were alive, but that you were hurt. How did she know, Ranji? How did she know?\"\n\n\"She's an empath,\" I answered. \"Last year, my father told me he had had her tested. She's quite strong. It's why she's so good when you need space and when you need to be held. She also sometimes sees ghosts.\"\n\n\"You were almost two thousand rads away from High Guard, and she knew you were hurt. How can I compete with her love for you?\"\n\n\"The same way you do for the women of your flight crew, Janetta. By knowing that you are first in my heart, above all others.\"\n\nMollified, she said, \"Okay. There's more, isn't there.\"\n\n\"Oh, yes.\"\n\nI told them what had been planned for the women. To be raped daily, and then forced to take on all the men on weekends in a round-robin rape party. Three women taking on seventeen men, and for all I knew Strkyer and the other instructors as well.\n\n\"I know this because Deedee had been through it three years earlier, and she'd returned, under a new alias, to protect me. Considering her upbringing, which she told me about later, I'm surprised she hadn't snapped. Her father is an officer in the Ground Service. He used to pimp her out to other officers. When he wasn't raping her himself. Her own father! It was the deal he made with the wife, you see. His daughter wasn't a human being or even his child. She was his property. Deedee had to fuck the men, and the second daughter was kept virginal for an arranged marriage.\n\n\"Even thinking about it now, I am amazed at her strength. I asked her how she could return to Sparantzlo, knowing what she had to face all over again. She told me she was following orders. She asked me to be her partner to better protect me. She had already saved my life by risking her own out in the snow. I told her about the Unit Protection Orders, and she was stunned. Even before I knew about her history, I resolved to protect her.\"",
        "Nodding, they followed my words.\n\nI told them what happened during the \"pairing\" process that Stryker and the others had devised, the fights I had to protect Deedee as my partner. The staring down of Stryker over Raltikon's life, the fight with the sergeants afterward, and getting shot. Deedee, having been a nurse, knew how to keep me from bleeding out before I could be returned to the tanks for healing.\n\n\"Things settled down after that,\" I said. \"Stryker's reign was finished, and we finally got started on the training.\"\n\n\"You slept with her, didn't you.\"\n\n\"Yes, I did.\"\n\nJanetta looked away, absorbing this new admission from me. First Teela, and then Deedee.\n\n\"I liked Deedee, and she was a good officer. What happened between us... I'm no psychologist, but having her there made a huge difference, Janetta. It helped me hang on, and to survive the nightmares. She didn't have anyone she was close to, and she fell in love with me. I have you, Janetta. I also have Zinja, Ixma, Cholan, and Calia. I also had my daughters to live for. Knowing all of you love me and were waiting for my return helped me endure. Deedee was my friend, and she held me. And she needed to be held, too.\"\n\n\"This is hard to hear, Kandikan. I don't say what you did was wrong. Both of us can still be ordered to fuck by someone who outranks us. And you made a good case for Teela, even though I'm still not sure if I will be able to look at that old woman ever again with a straight face. You are the only man I want. I share you with my flight crew because your relationship protects them due to your rank, and now that they have had you, they want you. I want them to be happy. You make them happy, Ranji. And despite my reservations and my jealousy for Calia, she has been good at keeping Ixma focused and keeping the household running well. She also gives really good massages.\"\n\nI smiled at that.\n\n\"But this Deedee? I have to think about this. I gave permission to share you with my crew, and I recognized your prior relationship with your personal servant. Each of those women in turn recognize my claim on you. Deedee didn't outrank you, yet you fucked her. And I had no say in the matter.\"\n\nI didn't say anything. She wasn't wrong. But I don't think I would have survived mentally without Deedee either.\n\nThere was silence for several long moments, growing more awkward by the second.\n\nBilan broke the quiet, asking, \"How did she die?\"\n\nSo I told them what happened at the cliff. And what Field Commander Chatolklan's response to those events had been.\n\n\"I blame myself for what happened at the cliff,\" I added. \"I knew Stryker had it out for me, but I was so focused of going home, I didn't even double-check the orders. Deedee and the others -- those deaths are on me.\"\n\nJanetta looked at me oddly. \"You're telling me that Field Commander, who spent three days torturing you, suddenly dropped everything and ran once he knew that sergeant from Tik\u00fan was arriving?\"\n\n\"He's not a sergeant,\" Bilan said, surprising us both. \"But go on, Ranji. You had a mission. I'm pretty sure I know what it was, but Captain Tlacotli here should know it as well.\"\n\n\"Uh, yeah. I was tasked with tracking the commander to his estate and killing him. So I did. I barely escaped with my life, and used up a lot of luck.\"\n\nBilan waited for me to continue, then raised his eyebrows, looking incredulous. \"That's all you're going to say?\"\n\nI shrugged. \"Apparently his brother is also in Imperial Security, and he discovered my presence there. In fact he discovered my identity pretty quickly. And when I got online, he tracked me to your mother's house, Janetta. I took care of the first hit team. There were only two, but I had a concussion by that point. I wasn't in very good shape by the time the second hit team arrived.\"\n\nJanetta jumped up, knocking over her chair. \"Concussion? Hit teams?\"\n\n\"I told you, your mother hit me with a frying pan.\"\n\nBilan shook his head at me. \"I thought you were going to tell us everything, Ranji. Makes me wonder how much you left out about your time at Sparantzlo.\"\n\n\"What do you mean?\" she demanded from him, keeping her gaze on me.\n\n\"What I mean is I talked to those city policemen who helped Ranji out,\" he replied. \"I also had time to talk to Teela and Lady Tlacotli. I had two days to gather information while Ranji's injuries were healed.\"\n\nReaching into his pocket, he pulled out a sealed plastic baggy and tossed it onto the table next to me. It had bits of wood and metal fragments.\n\n\"What's that? And you, Bilan, explain what you meant!\"\n\n\"There was a report of two AHR-17 Kites having to be field serviced out of Defiant War Base about the same time Ranji was up north. Both of them were damaged by 8.5mm armor-piercing rounds. Just like those there.\"\n\nJanetta scrunched up her face. \"You shot down... two military helicopters?\"\n\n\"They were shooting at me.\" I remembered having to dig out the tracking chip, and how close those rockets had been. It had been a very near thing. I looked at the baggy. \"I thought the clinic had gotten all the pieces of metal and wood out. Guess they missed some.\"\n\nBilan cleared his throat, but said nothing more. Both stared at me. Waiting.\n\n\"Okay. I shot one in the rear rotor while it was turned away. Took a couple of rounds. I figured out they were tracking me by my chip, so I had to dig it out and crush it. They lost track of me, so they opened the hatch to try and find me under the trees, so I shot the gear box. Took three rounds. That left me two rounds for my rifle. One lousy magazine of ammo!\"\n\nSeeing her look, Bilan righted her chair before she sat all the way down. He asked, \"How far were those shots, Ranji.\"\n\n\"The first was probably about fifteen hundred feet, I guess. The second helicopter was maybe half that distance.\"\n\n\"Uh huh. On the run, hitting moving targets in the air. How many rockets did they use?\"\n\n\"Does it matter? The man was the base commander. He let Stryker, Charunt, and Belton torture me. And there had to be other men involved, because whenever the doors opened, I could hear the screams of other men and women being tortured. I hated them for what they did to me! They peeled the skin off my back, and laughed about it. They threatened you, and the others while they raped me. Threatened to rape you and torture all of you. Even... even rape and kill my little girls.\"\n\nIt was too much. It all came back, and all I could do was slide down to the floor and cry. Chatolklan, Stryker, and Belton were dead, but Charunt was still out there. Somewhere. And Tonca. I needed to kill Tonca.\n\nJanetta came to me then, sitting beside me and putting her arms around me, murmuring to me.\n\nI leaned into her, sobbing into her neck, then pulling her tighter. When I managed to get a breath, I pulled back to look at her. \"Don't you see, Janetta? I love you and I will kill anyone who threatens to hurt you. But what I'm doing isn't just for you. It's also for Zinja and Cholan and Ixma. It's for Sisi and Mina, too. So they can walk down the street and not have to be afraid they will be raped by someone who thinks he's entitled to do so.\"\n\nShe pulled me close, hugging me until I mastered myself.\n\nWiping my eyes and my nose, I mumbled, \"I'm sorry. Those are memories... I'd rather forget.\"\n\nMy brave Warrior gave me a rueful grin. \"Ranji, I killed the lizard that raped me, but I was a mess, too, afterward. I hurt all over. And I needed to be held, and you were there for me. I'm not happy about your relationship with Deedee Marin, but I think I understand it better now. You are my ground support. I need you there to come home to. I leaned on you that night, and you did everything right. You took care of me and my crew when we were hurt. You can lean on me, too. Isn't that what you tell me? That we're partners?\"\n\nI had to kiss her, so I did. Better still, she had love in her eyes when she kissed me back.\n\nGetting back to my feet, she kept at least one arm around me.\n\nBilan looked at me, then said, \"All right. I'll tell what I've pieced together, and you correct me, all right, Ranji?\"\n\nI nodded.\n\n\"Okay. So when Janetta's mother hit you on the head with the frying pan, it was pretty serious. A lot more serious than anyone realized. You passed out twice after you came to--\"\n\n\"Three times,\" I corrected. \"When I went next door, I had another dizzy spell, and passed out again.\"\n\n\"Three times,\" Bilan amended. \"Later, toward dinner time, the street gang terrorizing Janetta's mother showed up and assaulted the two free farmers that Ranji had taken on. Meeno had some nasty bruises, so we put some Nu-skin patches on to help with the healing. Ranji shot three of the gang members, killing one outright, then knifed their leader.\"\n\n\"No, I guess I had issues four times. When I had my gun on the leader, I started to blank out but came to just in time. He grabbed my pistol and tried to shoot me. Fortunately, the safety was on, so I took him down and killed him.\"\n\n\"Lucky is right.\" Bilan shook his head. \"Right after the patrol car showed up to deal with the gang, two men posing as police showed up. They moved in on Ranji, but Ranji suddenly shot one and fought hand-to-hand with the second one. Knock-down and rolling around in the street even. What tipped you off?\"\n\n\"My name tag was in the wash, yet these supposedly-local cops knew my name.\"\n\n\"Yeah. Right after the fight, he passed out again, this time for a few hours. Lady Tlacotli used the money from the men Ranji killed to hire some policemen to protect the house. Apparently some of the street gang had escaped, and the two women were worried about reprisals. What they didn't know was that a second hit team was on its way. I was nearly there when Ranji finally woke up and answered my call. He killed their sniper and wounded another one. He and those three policemen used those Starkline riot shields to good effect.\"\n\n\"They blew the door with explosive charges,\" I said. \"The shotgun at point blank range really helped a lot. The corporal fired three or four times, hitting a lot of unprotected areas. Neck, hands. The blast threw me against the wall. I managed to get a few shots off before I passed out again.\"\n\nBilan nodded. \"As I mentioned earlier, Captain. The concussive blast probably sped things up, and he was dying. It was real touch-and-go all the way back to Mohingo War Base.\"\n\nJanetta punched me in the arm. Hard.\n\n\"Ow! What was that for?\"\n\n\"Almost dying on me. Several times! If you had died on me, I'd have to go to the underworld, just so I could kick your ass!\"\n\nI laughed.\n\nScowling, she glared at me. \"What's so funny, Kandikan?\"\n\n\"You and Zinja and your mother.\"\n\nShe punched me again on the shoulder. Same spot.\n\n\"Ow!\" I rubbed it. \"Knock it off!\"\n\n\"Explain what you said, Kandikan!\"\n\n\"Remember I told you about having to go to the beach with Commander Orchid, to save the women and children? Before I left, Zinja told me that I'd better come back safe, or she was going to have to kick my ass. Your mother basically said the same thing -- that if I got hurt on her account, she'd make sure I'd pay for it because you needed me.\"\n\n\"She thinks I need you?\"\n\n\"Not like that, Janetta. I told her I would always support your love of flying, even if it meant we could never get married. The only thing she was sad about was the prospect of never having grandchildren. But that's not strictly true, is it.\"\n\nShe looked at me with surprise. \"What are you going on about?\"\n\n\"You and me. We could have children together, you know.\"\n\n\"What? Are you crazy?\" She whirled on Bilan. \"Are you sure they fixed him right at Mohingo? Because I'm not sure he's a hundred percent in the head.\"\n\nHe held up both hands. \"I only know what the doctors told me, Captain. However, they did warn him that if he had any memory issues, to get checked out.\"\n\n\"This isn't a memory issue,\" I said. \"My mother has a genetic defect. She couldn't carry a baby to term, so her handmaid acted as a surrogate. We could do the same.\"\n\nHer mouth dropped open. Then closed.\n\n\"By the gods, you don't have to decide now,\" I assured her. \"But it is an option for us. Think about it.\"\n\nShe just nodded.\n\n\"What about you, Bilan? You said you had things to tell me, too.\"\n\n\"Just before I arrived at Mohingo, my men and I helped do some housecleaning for our mutual friend at Tik\u00fan.\"\n\n\"Really? Do tell.\"\n\n\"Not much to it. We found a few moles that were loyal to other masters and took care of them. I was filled in on your assignment up north, and his concerns about your safety. When they removed the bomb from my chest, he told me about the memory alteration.\"\n\n\"Bomb!? You had a bomb in your chest?\" Janetta stared at Bilan.\n\n\"Minister Supay's idea,\" he said. \"To prevent anyone in Imperial Security from giving out information while under sedation or truth drugs. Ranji had a bomb, too. But the bombs were removed, his and mine.\"\n\nShe looked at me, then at Bilan. \"Imperial Security put a bomb inside both of you? Wait... you're Imperial Security, too?\"\n\nBilan looked at me. \"I was. Not anymore. At least, not officially anyway. Captain, you don't know the truth of how Ranji and I met. And it's not the way Rana says it happened. We actually met at High Guard. I was part of the team that arrived with Commander Orchid. After Supay put out the order to have Orchid killed, he proceeded to kill all those who had acted with Orchid to save the women and children from being drowned. Supay tried to kill all of us. The women, the children, and all those on the beach with Commander Orchid that fateful morning, regardless of who they were or what they did. Ranji helped save me and my boys. Maybe it was Supay that paid the sea captain to try and sell us as slaves.\n\n\"Oddly, or interestingly, my ex-wife is named Teela, too. Anyway, Ranji helped me make an honorable choice regarding my former life, and became my blood brother, pledging to protect my boys. After he helped us escape, he saved all of us again by sending Styen with us on the ship to make sure we arrived safely. The old me is gone, and I don't want that life back. I am Captain Bilan Monaycote, husband of Rana, father of Powan, Mika, and one yet to be born. And, I'm Ranji's blood brother.\"\n\n\"Hey, Bilan! Don't forget that when the assassins tried to kill my parents, you were there right beside me, willing to risk yourself to help save them.\"\n\nHe grinned at me. \"What are brothers for?\"\n\nThere was a knock on the door. Bilan got up and answered it.\n\nA female sergeant stood there. \"Captain? Lady Kandikan wants to know if you and the other officers will be returning for lunch?\"\n\nBilan glanced at the clock, then nodded. \"We have a few minutes to finish up yet. Please let Lady Kandikan know we will be returning within half an hour.\"\n\n\"Sir!\" A salute, then she left.\n\nLeaving the door open, he turned to me. \"Lieutenant Kandikan, you still have your Talon to service. We're waiting on you.\"\n\nChuckling, I nodded. Moving over back to the work table and working quickly, I finished up what the sergeant had already started. I was done in just a few minutes.\n\nWiping down the pistols, I put the Talon into my hip holster, and the Caiman into the shoulder holster. I closed and set the lock on the rifle case.\n\nOnce we exited the room, the Master-at-arms gave us a friendly nod as he passed us, heading back to clean up our mess. I noticed the general attitude of the men and women of Bilan's command. They were respectful, busy, and more important, at ease. On the way out, I noticed the Unit Protection Order in large letters posted on the wall beside the main exit. The CPN in front of Bilan's name was freshly painted. Janetta noticed it and paused, looking at both Bilan and then to me before continuing out.\n\nThe guard outside signaled, and Bilan's ChoCac pulled up. Being the junior officer, I got in front beside the driver. Both Janetta and Bilan rode in back for the trip back to the house.\n\nAs we passed through the gate, Janetta said, \"Those Protection Orders. It really is spreading, isn't it.\"\n\n\"Yep,\" Bilan answered. \"I did it for Ranji's sake. But now that it's done, I'm glad of it. It is the right thing to do.\" Then he reached into his satchel and pulled out a sealed envelope. Reaching over the seat, he handed it to me.\n\nIt was addressed to me, and from the Air Ministry. I opened it.\n\nI was to be in Tik\u00fan by fourteen hundred hours, three days from today, for further orders. Seven hells, I thought. Then I read that Janetta and her flight crew were ordered to accompany me.\n\n\"What is it, Ranji?\" Janetta asked.\n\nI passed the letter over to her.\n\n\"Think we'll get a chance to visit Chingli Point again?\" she asked, giving me a fierce grin.\n\n\"That would be nice,\" I replied. And it would be, too.\n\n\"Think I will get to meet this sergeant you know?\"\n\n\"I haven't a clue.\"\n\n\"Just letting you know, Lieutenant, that if you are going away again, I will hunt this sergeant down and express to him my great displeasure.\"\n\n\"I wouldn't advise that,\" I said.\n\n\"I, too, would not recommend that course of action,\" Bilan added.\n\nJanetta just growled. I wasn't sure if it was in frustration, defiance, or both.\n\nYeah. Probably both.\n\n* * * * *\n\nLunch was pleasant, over too quickly, and then we retired to the drawing room.\n\nAt Calia's suggestion, Sisi picked out a book for me to read to her. Janetta snuggled in on one side, to which I was pleased about. Sisi sat on my lap. And Ixma, with Mina, sat on my other side. Bilan had to return to duty, but his boys parked on the floor at my feet, while Rana sat on a nearby couch and Calia massaged her feet.\n\nWhile I read, we were sometimes interrupted by moans from Rana. My mother and Zinja just grinned at Rana knowingly. Lower back pain and achy feet were a common complaint -- or so I've been told.\n\nMika kept telling his mother it was rude to make noises while someone was reading aloud.\n\n\"You're right, but I can't help it, Mika,\" Rana explained. \"My feet hurt so much, and Calia is making me feel better.\"\n\nDespite the interruptions, the story was well received, and the children went to lay down for a nap.\n\nJanetta seemed to need to be close to me, and since she knew about my orders, I didn't blame her. After the children left, she laid her head on my lap. The other women hung out with us, but let her be the center of my attention.\n\nWhen she started to drift off to sleep, I got up and scooped her into my arms.\n\nOpening her eyes lazily, she quietly asked, \"What are you doing?\"\n\n\"Taking you to my room so you can sleep.\"\n\n\"Will you stay with me?\"\n\n\"I will,\" I assured her.\n\n\"Okay.\" And closing her eyes, she snuggled into me.\n\n* * * * *\n\nLater that evening, when I was checking my email, I received a message from SrLT Sisi Beytindl. She would like to come and pay her respects, but as Deedee wasn't family, she was unable to take time off for several days yet. I went in search of Bilan, and he informed me that if she needed a ride, he would see that she had transportation both ways. So I wrote back and explained that we would have the ceremony for Deedee the next day, as I my own orders were to leave soon, but that Captain Monaycote would see to her travel needs, and she was welcome to come out to pay her respects. I told her again that Deedee had saved my life several times, including the final time that cost Deedee her life, and that my family would consider it an honor to have her visit the grave.\n\nMy mother was sad to hear that my visit was to be so short, and almost immediately went to make a call to my father.\n\nAn hour after dinner, my mother found all of us hanging out together in sun room. It was dark out, but the girls were playing with their tablets with their mothers while Janetta, Cholan, and I checked our email. Calia had just left to provide some lower back massage to Rana."
    ],
    "authorname": "TJSkywind",
    "tags": [
        "early earth",
        "consensual",
        "native",
        "alt history",
        "military",
        "poly",
        "aliens"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/starlight-gleaming-ch-17"
}