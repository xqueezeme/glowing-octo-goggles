{
    "title": "Orchid Ch. 02",
    "pages": [
        "I cross my arms a little more tightly, grabbing at my ribs with the tips of my fingers, and breathe slowly. It's hard to keep myself calm, and the more upset I get the more I ramble. Lara is always fine with me rambling. Stream-of-conscious output, both verbal and nonverbal, is a very useful as a therapeutic outlet, she says, but I'm not in the mood.\n\n\"Kit?\"\n\nEye contact is the best I can manage.\n\n\"You're very quiet today.\"\n\n\"I don't... I don't know what else to say.\" I sigh. \"I feel like all I did was repeat myself last time.\"\n\n\"Still spending most of your time in your head?\"\n\nI nod.\n\n\"Still thinking about Calvin?\"\n\nI nod, trying really hard not to cry, and tighten my arms around my chest just a little more.\n\n\"May I make an observation?\"\n\n\"Yeah.\"\n\nLara puts her pen down, and interlaces her fingers over her crossed knees. \"You really put yourself out there.\" There's a piece of a cough drop wrapper on the floor. \"You exposed yourself, and really put yourself in his hands. I am in awe of you. That took real strength.\" Sort of a grayish-white corner of a piece of waxy paper, with some reflective text written at an angle. \"We always take risks when we expose ourselves, and this was one of those times where it got you hurt.\" The wrapper isn't close to the trash, and it's closer to where Lara usually sits than where she has her patients sit.\n\nClients, not patients. I hope Lara isn't getting sick.\n\n\"It sounds to me, more than anything, like you and Calvin started off in very different places. To him, you were a former student whom he found attractive, and you were two consenting adults when he ran into you later.\" It's almost shaped like a perfect right triangle. Almost 90\u00ba, 45\u00ba, 45\u00ba, but not quite. \"To you, he was a dream. A... uh... a fantasy. You were already putting him on a pedestal, and when he showed interest in you, that sent your feelings for him skyrocketing.\" I tilt my head a little; the reflective text has a lighter, non-reflective shadow. \"It's not your fault. Please don't hear that I'm blaming you. No one is to blame here.\" More of a grey shadow.\n\n\"Every relationship has an arc, you know, to the intensity of the feelings, and I think you started off quite a bit ahead of him. That's not his fault, and it's also not your fault.\" There's another piece of white fluff right next to it. Could be another part of the same wrapper, but more likely, it's a different piece of trash. \"Are you sleeping any better?\"\n\n\"Um...\" I blink, trying not to cry again. \"Yeah.\" Lie. I can tell her the truth. I can trust her. \"No. No. I'm not.\"\n\n\"Thank you,\" Lara said, smiling softly. \"I know you don't want me to worry about you.\"\n\n\"Last night, I think I got maybe 3 hours.\"\n\n\"That's not enough. It's better than before, but it's not enough.\" She sits back in her chair and stares pensively at her pad of paper. \"I'm going to offer\u2014\"\n\n\"No,\" I say.\n\n\"\u2014again\u2014\"\n\n\"Please no.\"\n\n\"\u2014I can call Dr. Minjae to talk about a prescription for you to help you sleep.\"\n\n\"No thank you.\"\n\n\"He can prescribe something that wouldn't have any interactions with your existing regimen.\"\n\n\"No thank you.\" I get very nervous about taking more than I'm taking now. My hormone cocktail works for me, and I'm terrified of how fragile that balance is. I don't even like taking aspirin.\n\nLara smiles and nods. \"I didn't think so, but I had to offer.\" She picks up her pen and paper, and takes a deep breath. \"Let's talk about something else.\"\n\n\"Ok. What should I...\" It's been hard to think about anything BUT Calvin, even though it's been almost four months.\n\n\"How about your classes? How are they going?\"\n\n\"Well enough,\" I say, \"but I'm not paying as much attention as I should. I keep...\" I sigh and take a deep breath. \"I feel like I'm waiting for him to storm into the room and... make some grand gesture in front of everyone. Like a... a showy declaration of feelings for...\" My voice trails off the longer I ramble.\n\n\"He's not going to do that.\"\n\n\"No,\" I say sadly.\n\n\"You know he's not going to do that.\"\n\n\"I know.\"\n\n\"I'm not trying to reprimand you. I just mean that...\" She pauses to collect her thoughts for a moment. \"There's a disconnect there, between the things you know to be true and the things you want to be true. We all have that, to some degree or another. We lie to ourselves about all kinds of things.\"\n\n\"I know.\"\n\n\"You've always been very self-aware, and I don't think it's a coincidence that this one fantasy keeps coming back around to trip you up.\"\n\n\"I know.\"\n\n\"Because it isn't just about Calvin.\"\n\n\"I know,\" I say, more emphatically. \"I know.\"\n\nLara smiles tightly and nods, the tips of her fingers held up almost defensively. \"How about work? Has that been getting back on track?\"\n\n\"I haven't called out in three weeks,\" I say, nodding.\n\n\"That's good!\" Her smile is so warm. I love seeing her. It's never easy having someone set you straight when you need to be set straight, but she can go right back to being joyfully supportive in the blink of an eye. \"I'm so glad to hear that!\" I'm very lucky to have been referred to her.\n\n\"I'm... I think I'm... going to try going back to the... to the gym tonight.\"\n\n\"Good! Reclaiming your routine is a wonderful step.\" She tilts her head. \"Have you thought about how you'll react if you see him?\"\n\n\"Drop to my knees?\" I laugh nervously, cheeks flush, and shake my head. \"No, I...\"\n\n\"You should have a plan. Even if the plan is just 'I will turn around and walk the other way'.\"\n\n\"Will you sue me if I steal your plan?\"\n\n\"Of course not,\" she laughs. \"Please. Steal my plan.\"\n\n\"Ok.\"\n\n\"Can I hear you say it?\"\n\nI nod, smiling lightly. \"If I see Calvin, I'll walk the other way.\"\n\n\"Good. It would be too soon for you to try confronting him, I think.\"\n\n\"I wouldn't...\" I shake my head tightly. A small, vigorous motion. \"I wouldn't know what to say.\"\n\n\"You will,\" she says with a smile. \"I know you. When you're ready, you'll know exactly what to say.\" She looks over at the wall and smiles, and I know my time is up. She stands, putting her notepad aside, and holds out her arms to me. \"C'mere.\"\n\nThere are a lot of reasons that I like seeing Lara more than any of the other therapists I'd seen during the course of my transition. Her willingness to engage in hugs when I need them, during and after a really heavy session, is right near the top.\n\n\"I'm proud of you,\" she says, as she scratches the back of my head. I lean into her shoulder, soaking up the feeling for a few more seconds. \"Same time next Tuesday?\"\n\n\"Yeah,\" I croak, voice failing me almost completely. \"Yeah.\" Better the second time. I leave as quietly as possible, and do my best to disappear into the crowd as I head toward the subway.\n\n***\n\nGo.\n\nGo.\n\nGo.\n\nGo.\n\n \n\nNo matter how much will I exert upon them, my feet are stubborn and refuse to take steps forward. They talk back and forth about how cute my running shoes are, but I'm onto them. They're just stalling. They're stalling because they're afraid.\n\nI'm stalling. Because I'm afraid. I indulge myself in these games, rolling my ankles and pretending my feet are talking to each other, because I'm terrified. Because fantasy is easy, and I don't want to get hurt again.\n\nThe first step is hard.\n\nThe girl at the counter waves cheerfully. Emmy, maybe? Emma? She's new, or at least she was the last time I was here. I smile and wave back as I head through to the locker room. A quick glance around, added to the number of empty lockers as I claim my favorite spot, suggests I might have hit the jackpot; the gym is nearly empty. I breathe deeply and evenly as I head back out into the main concourse, with my water bottle in hand and a towel slung over my shoulder. A dark gray sports bra underneath a loose-fitting orange racerback tank, and some black tights that just reach the tops of my calves.\n\nThe treadmills are calling my name. I pop in my earbuds and turn on one of my favorite playlists as I pick out a machine in the middle of the front row. 2 mph. 2.4. 2.6. A nice slow pace to start. I keep looking over my shoulder, hoping to see him almost as much as I fear it. Logically, I know he probably won't approach me. He sent one more text, a week later, to ask how I was doing, but I didn't respond to that either.\n\nOr, at least, I didn't send any responses. I must have typed up a hundred different answers, between one and one thousand words, but I never sent any of them. I couldn't push send. By the time I finished writing them, I always felt differently. I either got over all the anger I'd just finished venting or I was too mad to let him know I'd forgive him in a heartbeat. Which, of course, were all glaring red flags; signs that I was in no shape to talk to him.\n\n4.8. 5.1. 5.5 miles per hour.\n\nMy legs ache when I creep the speed past seven. I wish I'd stretched more. I usually run at six and a half for thirty minutes because that's a nice pace where the cadence of my footfall lines up with my breathing, but I just...\n\n7.4. 7.8.\n\nEight miles per hour. Getting closer to the best full sprint I can manage. It's a moment of lunacy when I watch my hand reach for the plus button. 8.1. Arms pumping. Chest heaving. One of my earbuds falls out of my ear, but the other one seems anchored enough that it's not going to get down between my feet and trip me up or break. 8.2. Lots of sweat streaking down my face. Across my brow. Down my cheeks.\n\nNot all sweat. 8.3.\n\nI cry out as I slam my palm down into the treadmill's dashboard, pressing and holding the minus button. The speed drops precipitously, streaking back through the range I'd just climbed back up, and steadies at 5.3 when I finally lift my palm back up. The slower pace allows me to grab hold of the errant earbud and reinsert it, but suddenly the music feels wildly inappropriate. Upbeat and happy when what I want is to feel like shit.\n\nI snarl as I rip the earbuds out entirely, unplug them from my phone, and toss them onto the ground beside me. A few stray bangs, too short to stay put in my ponytail, get caught up in the sweat on my forehead. 5.7. 6.0. 6.8.\n\n7.2.\n\nI fixate on a carpet tile in the floor ahead of me, out in the hallway. A stringer at the corner of it sticks up and out of the rest of the uniformly-arranged fibers. I bet the vacuum pulls it out a little more each night. Stretching it. Ripping it. Every night. Tearing at it. Shredding it.\n\nEvery day, a bit more ragged than the one before.\n\n8.7. 9.0. My legs hurt. Thighs, mostly, but my calves and feet are aching too. My lungs burn. The dashboard says I'm already up to 2.4 miles.\n\nA woman walks by in the hall. I wouldn't have noticed her at all except that she steps on the tile I'm staring at. It takes too much of my concentration to keep my speed and balance, so all I can manage is a brief glance. Short-ish. Maybe a bit taller than me, but much thicker. Somewhere well-short of stocky, and not fat. Just... filled in. Hint of muscle. Maybe 45? Older? Blonde?\n\nAnd then she's gone. Others walk by too, but they're a blur, and it's not until well after the fact that I realize the Blonde was looking back at me.\n\nI surrender when I hit the four mile mark. On the one hand, it feels like I've punished myself enough for one day, and on the other hand, I kind of feel like I might never be done punishing myself. Which is ridiculous, the more I think about it, because it wasn't my fault. I didn't leave him. He left me. Why should I feel guilty? Why should I feel like I need to hide? Why should I feel broken? He's the asshole. He's the piece of shit.\n\nI hope he does show up. I hope he shows up right now.\n\n***\n\nI lace up my left foot, and shift on the bench to tie the right shoe. Shoe tying is one of those things we can do blind. Our fingers know how it should work. By the time we're adults, we can tie our shoes in the dark from feel alone. Most of the time we watch ourselves work anyway for lack of anything better to do, but it's not out of necessity. It's not like driving, where attention is needed for constant adjustment, so it's not a surprise when my head starts turning slowly of its own accord.\n\nIt's her. Again. The Blonde. She walked right by me. I didn't even really see her, I saw her bag. Which I saw her carrying two days ago on her way out after she'd walked by me twice. Very distinct burgundy color and pattern. All week I've been seeing her, and I'm starting to think it's not a coincidence.\n\nAfter heading out onto the main floor, I feel like tonight is the night I finally try the treadmill again. It's been almost 2 weeks. This time, I stretch much better beforehand, and it's easier to stick to my usual speed. My running playlist has more Kelly Clarkson than I like to admit.\n\nAnd then she's right next to me. She's right next to me. Running on the treadmill right next to me. Cool as a cucumber. I'm doing my best to stare ahead, only bobbing my head back and forth with what seems appropriate for my gait, but there she is. Again. There's 20 treadmills in the room, and she's right next to me.\n\nThere's 20 other treadmills. Now it's not a coincidence. Of course, it takes me nearly a mile of running and thinking to reach that conclusion, but I'm here. I've gotten to it on my own.\n\nHer pace is slower than mine. In a fit in inspiration, I stab the down speed button a few times. And then a couple more times. Until my treadmill is going the same speed as hers. Our gaits are different. Even though I'm shorter than she is, my stride is longer. I bounce higher, I take fewer steps, and hers land differently. More solidly. Not heavily, but... with authority. I reach up and pull out my earbuds, and my heart is absolutely racing.\n\nShe's at least 45. I definitely have a type.\n\n\"Hi,\" I puff. My face feels bright red, and I couldn't begin to guess how little of that is just from the jog.\n\n\"Hello,\" she says, glancing only briefly to the side. It's a little off putting, and instantly I'm doubting myself. Did I see something that wasn't real? Did I just start putting myself out there again? I look over at her a few more times, and she just continues her jog staring straight forward. Just the tiniest little smile on her lips.\n\nAnd then I look around again, at the room full of empty treadmills and the two of us running side by side.\n\n\"I feel like I've been... seeing you around a lot.\"\n\nShe's quiet for a few seconds, and then says, \"Good,\" offering nothing more.\n\nAnd then her smile gets just a little bit wider.\n\n\"I knew I wasn't crazy,\" I say, looking forward again. She chuckles, a rasping sound mixed in with our light panting. \"I'm Kit.\"\n\n\"Susan.\"\n\nI keep looking over nervously, unsure of what to do or say. She's almost indifferent to my presence, except that I know she's not. I know she's putting herself here. Next to me. On purpose. I just wish I knew why.\n\nI know why. She wants to get to know me. I'm just afraid to be wrong.\n\nWe continue on, jogging together, for another mile in relative silence. It doesn't feel awkward though I can't explain why. It should be weird, but... there's something about the way she carries herself that's appealing. Her confidence is attractive, and I like being near it. It's also infectious. Like she might walk into a room full of people arguing and have them all listening to her in under a minute.\n\nBut then, when I think about it, she's the one who pursued me. Instantly, my back is a little straighter. My posture is a little better. My strides are a little longer. Something about me was attractive to her. That feels nice.\n\n\"Well Kit,\" Susan says abruptly. \"I'm going to hit the showers.\" She plants her feet beside the track of her treadmill and lays two fingers on her left wrist.\n\n\"O-oh,\" I stammer. \"Ok. It was um...\"\n\n\"Would you like to join me?\"\n\n\"Ummm...\" I look down, and stare in shock that I've already gone 6.4 miles. I'd completely lost track of my workout for the night. It's hard getting lost in my narrative. \"Y-yeah. Sure. A shower sounds great!\"\n\n\"Great.\"<br ><br >I hop off my treadmill while it's still powering down and jog after her, but I slow way down almost at once. The last couple weeks have been lousy with peripheral glances and double takes as she's passed me going here and there. Now, behind her as she's walking...\n\nSusan has shape to her. Her tights fight snugly around hips I could only dream of having, and when she lifts her arms up over her head to stretch, her sports bra-top swells outward just enough to be visible from behind. A delightful amount of tightly-compressed breast tissue inside of the elastic. There's a dangerous swell in my own tights that I have to pinch myself to stop.\n\nI've always considered myself a fairly accepting girl, sexually speaking. I find a wide variety of body types appealing. It's not like anyone has ever asked me for my opinion on the matter, but I tend to think of myself as omnisexual. A pansexual is interested in hearts, not parts, and it's not that genders are irrelevant to me. I notice and appreciate all the different parts, in different but mostly equal ways.\n\nMy last girlfriend was thin, like me. Artistic and dreamy. We had some really great times, but she was ephemeral. She drifted out of my life as smoothly and abruptly as she'd drifted in. Before her I'd mostly dated boys, none of whom had anything approaching Calvin's size or physique. And now, here I am following a woman I am almost embarrassed to admit is a MILF, because I really would. I really would like to.\n\nAnd that's kind of foreign to me. The emotional connection is always such a powerful part of any intimacy. Most of the time, it's that closeness that I crave the most. The moment when the world disappears, and there's just me and them. Ten minutes ago, I would have told you I needed that, but now? Staring at this woman?\n\nI have to pinch myself again.\n\nThe locker room is quiet. I skip back to the corner, grab my towel and bag of sundries, and kick off my shoes and socks. I lose track of Susan in the rows and just head back to the stalls on my own, and she leans up against the end of my stall before I shut the curtain.\n\n\"So what's his name?\"\n\n\"Is it that obvious?\" I ask, surrendering to the overwhelming urge to look down and away.\n\nSusan laughs, folding her arms across her chest beneath her breasts. \"Not exactly, but in my line of work you get good at reading people.\" I nervously putter in my stall, pulling the shampoo and soap out and setting them on the little shoulder-height ledge. \"I was pretty sure it was a someone and not a something that's had you all twisted in knots for the last couple weeks, but it was a wild guess on the gender.\"\n\n\"Calvin,\" I say, pulling my tank top over my head. Just the sports bra and my black tights.\n\n\"Asshole.\"\n\nI giggle and nod. \"Yeah, a little bit.\"\n\n\"Did he know?\"\n\n\"Know what?\"\n\n\"About your penis?\"\n\n\"What?\" My arms instinctively wrap around my torso, and my legs cross at the knee as I awkwardly shrink into the corner. Aside from being barefoot I'm still clothed, but it's like she can see right through me. \"What ... what... what are you...\"\n\n\"Relax,\" she says, leaning back slightly and looking down the hall. \"There's no one back here.\"\n\n\"It's kind of hard to relax when I'm being... observed!\"\n\n\"Oh stop,\" she laughs. \"You've known I had my eye on you. I know you did.\"\n\n\"Yeah, but...\"\n\n\"I'm not gonna tell anyone. Your business is your business. I just happened to notice when I was checking you out.\" After a moment, she adds, \"And, to be clear, I was checking you out because I thought you were cute.\"\n\n\"Well... thank you.\"\n\n\"Still do,\" she says, staring at me very directly.",
        "\"... thank you.\" I huddle for a minute, flushing with color under her watchful gaze. It's always terrifying, no matter how briefly, when it seems like I might be exposed. Not everyone handles that kind of revelation with class.\n\n\"Are you okay?\"\n\n\"Yeah,\" I say, though my voice betrays a little of my shakiness.\n\n\"I didn't mean to upset you.\"\n\n\"It's not you. It's just...\" I take a deep breath and blow it out forcefully. I have breathing techniques for just about everything. \"It's scary even when I'm the one doing the telling. You know, when I'm the one controlling that conversation.\"\n\n\"Ahhh.\"\n\n\"Having it sprung on me is just...\"\n\n\"I can't imagine,\" she says, quirking her head. \"Literally. I can't.\"\n\n\"Yes,\" I say, after a moment of mustering my courage. \"Calvin knew.\"\n\n\"Asshole.\"\n\n\"That's not why he... I mean... I don't think that's why he\u2014\"\n\n\"Kit,\" she says, staring directly at me. \"How would you like to forget about him for a little while?\"\n\nShe keeps her eyes on me, intensely, as she lifts her tight-fitting shirt. Her sports bra comes off with it. Her breasts have a kind of natural sag to them, heavy with their own weight, that my own chest will never have. Mine will be small and sit perky and high, and while that has its own appeal, I can't stop staring at the fleshy curve of hers. The way her nipples are slightly oblong. Slightly stretched.\n\nJust the hint of a belly. A slight roundedness. I love that she's not perfect. I mean, she's gorgeous, but she's human. Like somehow the flaws make her more real. More beautiful.\n\nThe whole time, her eyes are on me.\n\nI don't know how to explain what brings it all together, but Susan is a gorgeous woman. A grown woman where I feel like I will always look like a girl just past puberty. If I'm lucky. It's something in the set of her shoulders. Something in the way her arms hang at her sides. Something in her stance.\n\nSomething about the width of her hips as she bends at the waist to push down her workout pants.\n\nI would really like to not think about Calvin for a little while.\n\nWe come together at once, moving simultaneously. My hands are all over her body. Sliding over her hips. Up her sides. No sooner is her tongue in my mouth than she has both of my nipples through my top, gripped tightly between her fingers and giving both of them a slight twist that makes me yelp. My shoulders curl inward as I try to shield myself, but Susan just steps even closer in toward me.\n\n\"These are a lovely little handful,\" she murmurs into the kiss.\n\nI whine as I try to take a step backward, but she follows, kissing me again. I can't get my hands around her arms to match her, even though I would dearly love to get a grip on her larger nipples. Instead, I get my fingers around the back of her head and pull her in closer. Smushing our lips together, and pulling her body in even closer to mine. She laughs, and the delicious pain subsides little by little when she can't twist her hands the way she'd like.\n\nMy hard cock presses into her hip. My balls, high and snug against the base of the shaft, brush against her thigh, sending a powerful tremor through my core. I whimper again into the kiss, after which she bites down on my lower lip and pulls back with agonizing slowness.\n\n\"Ooo-oooo!\" I cry, as she lifts. She's a couple inches taller than I am, and I have to rise up on my toes to follow. Her eyes practically glowing.\n\nI whimper as I run my tongue over the indentations after she's let go. The faint taste of blood. Her eyes are on fire as she swarms over me. I have to let go of her when she starts lifting my sports bra and top, and she's working on my pants before I've gotten all of my hair through the neck.\n\n\"Oh fuck,\" I moan, as she curls her tongue underneath the hardening head and draws me into her mouth. Her cheeks sink in, suction pulling my length further inside of her, as she holds my pants against the floor. I have to twist my knees outward and step out to either side to get them past her, as Susan inches closer to me. Her pale blonde hair, streaked with a helping of light gray, falls over her shoulder. Her mouth feels wonderful. I can't remember the last time someone else went down on me, and maybe never with this kind of ravenous determination.\n\nShe smiles mischievously up at me, as she backs off and takes my cock in her hand. Stroking me slowly as she stands and kisses me. Precum on her tongue. I know the taste well, even though it's been awhile since I tasted my own.\n\n\"I'm going to make you cum,\" she says softly, nose brushing against mine. \"The question is; will you do the same?\"\n\nI love the way the hairs on my neck rise at being challenged. An injection of adrenaline that makes my muscles sing from head to toe. She leans in to kiss me again, but no sooner are her lips on mine before I push her back. She gasps, eyes popping open, as I drive her across the stall and into the far wall. My tongue invades her mouth, pushing and taking.\n\nFor a moment, I almost can't believe that's me. Powerful dissociation. Feels like my head is floating away even as I draw her breath into my lungs. Are those someone elses fingers sinking into her hips? Is that my back she's raking? Are those red welts, in the wake of her fingernails, on my skin?\n\nWhen I started taking hormones, I was told repeatedly that there was a good chance I would lose some of my libido. Almost everyone I talked to along the way, between the doctors, nurses, therapists, and pharmacists, mentioned it. Transitioning, and the HRT specifically, had many side effects, but the sex drive was the one everyone brought up. It didn't turn out like they'd warned me.\n\nFor years, I had been repressing the more aggressive side of my sexuality. The side of me that simply saw and wanted. I knew I was female and I thought that came with certain 'expectations'. I felt like I needed to make myself more passive. I liked dressing up, and I liked the attention I got when I did, but I pushed down the desire to give others the same kind of approving attention. Especially as the initiator. It was fine if someone else approached me first, but I feared the being the one to take the first step.\n\nOnce the hormone therapy got underway I didn't have to fight that urge. At least, not so often. The submissive side of me, the side that flourishes under the firm hand of another, became infinitely more responsive. For a little while, I thought that was going to be my whole sex life, and I was fine with that. More than fine with that; I love that. I love giving in. I love wilting. I love succumbing to the confidence of another.\n\nBut I love taking too. I have confidence of my own, and it has taken me a long time to get over feeling like I couldn't show it. Feeling like I wasn't allowed to be assertive. Feeling like there was no room for my dominant side, or that the world wouldn't accept it. The hormones certainly lowered this part of my sex drive, but in hindsight maybe all they did was put me in balance.\n\nSusan moans into my mouth, batting her lashes seductively. Her left leg comes up and hooks around my thigh, drawing me in and keeping me close. I like the feel of her skin on mine. I like the heat. Her breath on my lip. One arm wraps around her thigh, holding it tight against me, while the other teases her nipple. Pinching and rolling.\n\n\"Put it in me,\" she moans, lips barely separating from mine. \"I need it.\"\n\nPart of me is completely aware of her. Acknowledging how she uses her body and her words to seduce me. Accepting that I am being seduced. In fact, kind of loving that I'm being seduced. The other part of me takes her at face value, and I find myself sliding toward the latter. She wants me. Even if it's a lie, it's a beautiful lie.\n\nShe groans, hips grinding into me. My cock, hard and curved upward between us, splits her cleft down the middle. A momentary glance downward brings a throaty coo; her moist lips cradled around me, painting the shaft a dazzling shade of pearl. She rises up on her toes, and with a gentle bend of the knee and a shift of my hips, the flared head pushes inside of her.\n\nHer channel yields to me, opening and unfolding. Deeper and deeper. She groans again, head rolling back into the white tile wall, and reaches up to grab hold of the shower head. Her rounded breast rises up, and the flesh around her darkened circle is rippled. Begging for attention. I crane my neck to suckle from her, and she immediately grabs the back of my head with her other hand.\n\n\"Oh fuck,\" she moans. \"Yes.\"\n\nMy cock comes to rest inside of her, fully hilted. Her leg curls tighter around my thigh, keeping me still while she clenches. The tight ring of muscle at her opening squeezes around the root of my shaft. I start pulling back at the peak of that vice, drawing a lengthy moan from her with exquisite friction.\n\n\"Oh fuck,\" she whines. Corded muscles in her arm writhe beneath the skin as she puts more and more of her weight on that shower head, and on the leg that's gripping me so tightly. Nearly lifting herself into the air, while giving me very little range of motion.\n\nHer nails scratch across my scalp, but she keeps me held there. Held where my teeth and tongue can bath her needy nipple with attention. Pinching it between my sharp incisors and flicking the tip with my tongue. Sucking it in whole and kneading it against the roof of my mouth. Moving my tongue like a wave. Curling it around the tip. Sharp, wet sucking sounds where my lips can't keep a tight seal.\n\nMy hips ache to thrust. The need for it is overwhelming, but her leg coiled tightly around mine restricts. Binds us together. I free my right hand and reach beneath and around her to land a hard, open handed slap to her rump. She howls, and there's a brief spike of panic that we are so far past indelicate, so far past discreet, that our being caught is more a matter of when and not if.\n\nHer leg loosens around me, and I slip my hand inside her thigh and behind her knee. Her flexibility surprises me as I lift her leg higher, enough to get my elbow right behind and under the knee. Her jaw hangs, eyes trained on me, as she nods ever so softly. The thirst to fill her over and over consumes me. Each thrust pulling all the way back to deep and in, until the light curly hairs at the top of her cleft tickle my skin. Long, slow thrusts, filling and emptying her. Boring her out.\n\nSusan bites down hard on her lip, white from sheer pressure. Her fingers tighten little by little in my hair, gripping a fistful of black at the back of my scalp. My grunting breath comes louder and higher each time, and the edges of her lips curl up more and more. Harder, she pulls. Angling my head back, and my chin up. The more she pulls, the faster my hips go. Faster. Harder.\n\nIn desperation, I grab her nipple between my fingers and twist. And pull. Her full breast stretches out and away from her body, and she crumbles. All her composure. All her poise. All her style. Her lids flutter in front of upturned eyes, and it's all she can do to stay standing.\n\nI cover her mouth with my palm, blade of my hand just brushing the underside of her nose, and fix her with a stare of my own. She blinks slowly, like an insolent cub brought to task, and I can't deny my hips any longer. Faster thrusting.\n\nHer fluids build up thick and white around the base of my cock. I pause for just a second, swiping with my middle and ring finger, and slip them both whole into her mouth with my index and pinky fingers stretched wide around her cheeks. Susan moans, cheeks turning red, as I smear her own juices over her tongue.\n\nAnd some of mine, I realize a moment later, followed briefly by just the tiniest stab of jealousy. On a different day, that would be me blushing happily as I was forced to swallow a little bit of my own flavor.\n\nWhy am I denying myself?\n\nSusan gasps as I slip my fingers from her mouth, and mewls as I kiss her, deeply and passionately. My own precum is there, a delightfully sharp taste that stands tall in the bouquet. She groans as I grip her head, dirty wet fingers in her hair, and hold her there while we pass fluids back and forth in an endless loop. Her leg, hooked over my elbow, comes higher and higher as she opens herself to me. Begging me with her body.\n\n\"Fuck me,\" she whimpers, into the kiss. \"Pinch my... Pinch my... Pi-AHHH!!\" I grab her nipple again and twist it until the pebbled skin is stretched like a pinwheel. \"Fuck! Fuck!\" The toes on her dangling foot curl tightly into the ball, clenching like talons, and her calf squeezes around my arm. \"Fuck, I'm gonna... nnnnngh-I'm gonna...\"\n\nI kiss her again, hilting deep inside of her, and twist my hand down between us to feather at the very upper edge of her cleft. At the sensitive bud of her flower. Susan moans loudly, muffled, as I use the limited range of my finger to melt her into a puddle.\n\nThe longer her orgasm lasts, the more our kissing turns back into kissing. Her leg slips from my arm, and little by little works its way back around my thigh. Her sole curled over my tightened calf. Long, drawn out seconds of savage relaxation.\n\n\"Did you cum?\" she whispers breathily. I shake my head, but her eyes are closed. \"You didn't cum, right?\"\n\n\"No.\"\n\n\"Good,\" she says, cheeks glowing. Her eyes finally open, batting slowly as she casts them about. After a second, she unhooks her leg from around me. A slight shifting of her hips pulls her back enough that my shaft falls out of her, but she quickly turns around and puts her hands on the tile wall. She grins over her shoulder as she pushes her ass back into me. I'm mesmerized, and almost lose my balance when she pushes hard enough.\n\nThe shape of her is just...\n\n\"More,\" she whispers, still grinning. She wiggles her pale cheeks against me, and my jaw just drops. I thought she looked good from behind in her workout pants, but...\n\nI lay my hands on her and run them around her curves slowly. Feeling her skin. Feeling the softness of it. Around to her hips. Feeling the swell. On a different day, I would drop to my knees and worship. On a different day, I would happily be smothered underneath her.\n\nNot today, though.\n\nShe lets out a full-throated moan as I grab my shaft at the root and guide it down between her thighs. It takes no pressure to be back inside of her, and Susan licks her lips with practiced slowness. She gives a throaty purr as she rolls her hips, knees and thighs flexing and relaxing. I love the way she glides onto me. The way I glide inside of her.\n\n\"Damn that feels good,\" she moans. Tongue across the tips of her teeth as she stares back at me. A light pink spot where I spanked her the first time. I can't stop staring at it, and it sets my skin on fire.\n\nWHAP!\n\n \n\n\"OOooOo,\" Susan whimpers. Her spine curls gloriously as she writhes. Everything she does, intentional or not, drives me onward.\n\nFaster. Faster. I can't tear my eyes away from the way her skin ripples from the impacts. Every time I plow into her. The way the momentum carries across her cheeks. Around her hips. Up to the small of her back. Faster. Harder. I love the way her flesh moves. I'm in awe of the way her flesh moves.\n\nHarder. I can feel my own orgasm building, but I want more of her.\n\nI curl over her, hilting inside of her, and wrap my arm around her ribs just beneath her breasts. I have to roll up on the tips of my toes, where the best I can manage is a shallow, popping thrust, but Susan moans cross-eyed when I slide my other hand down between her thighs to feather at her clit again.\n\n\"Not fair,\" she groans. \"N-not fair.\" Shallow thrusts, with so much of our skin in constant contact with each other. Rubbing and smearing the copious sweat. \"Oh fuck. Higher. Higher, and-\" Her words drop away, replaced with a deep guttural grunt. Her spine curls way down and away. Shoulders standing out sharply through her skin. The tip of my middle finger works quickly, swirling and flicking.\n\nHer second orgasm is quieter. Her eyes close shut tightly while she tries desperately not to cry out. Her legs quiver powerfully, even compared to the way the rest of her body shakes, as she tries to keep control of herself. Her ring spasms around me, clenching and unclenching a hundred times over the full minute of her peak.\n\nI slowly uncurl myself from around her, and sigh happily as I plant my feet more firmly behind her. It's lovely to watch her come down from the excruciating high. The beautiful agony. Susan leans forward into the wall and slowly pulls herself upright by her hands, clearly not trusting her legs to remain steady.\n\n\"Tell me you didn't cum,\" she croaks, working her tongue around to draw moisture from her gums while she regards me from under heavy lids.\n\n\"No,\" I say, smiling proudly. A heavy drop of precum sits at the end of my shaft, threatening to fall. \"Not yet.\"\n\nSusan licks her lips and takes hold of me, aiming my cock so that the drop is perched less-precariously on top. I gasp, breath coming in sharply, as she gives my shaft a firm squeeze and kneels down in front of me. In the moment, I can't decide which is turning me on more; the feel of her tongue or the look in her eyes. In truth she's using both of them against me, and it's almost more than I can process. There's so little of my mind not already consumed by the physical need to cum and wanting to hold that off for just a few more seconds.\n\nJust a few more seconds.\n\nSusan slides her hands underneath my shaft, gripping behind the tender pouch, and pushes my balls forward. The inclusion of my balls, or attention paid to them, always unravels me even faster, and this is no exception. Her tongue snakes out between her lips, as she swallows half of my shaft, to swipe gently. Back and forth. Back and forth across my balls. Her eyes widen intensely as she grips my shaft tighter, squeezing my balls out just that much more, and takes them both into her mouth as well. The engorged head teases at the back of her throat while my balls swell her cheeks. My jaw falls completely away from my skull as they come to rest just behind her teeth, with her tongue moving gently and constantly.\n\nMerciful, serene suction. Pulsing waves of alternating pressure and suction. All the while she stares up at me. Lips coming to rest against the hairless base of my cock.\n\nI cum hard. Just like that. My hands clasped over my mouth to stifle the moans pouring out of me, though I honestly don't care if we get caught.\n\nI cradle Susan's chin as she stands, just moments later, and draw her into a long, slow kiss. I can't tell if she likes the idea of sharing my cum with me as much as I do, but if the fervor of her tongue is any indication then the answer is a resounding yes. To say nothing of the way her hands roam along my sides and across my back. Over my body.\n\nShe turns on the water and rinses herself off. I hover around her, equal parts in awe of her and nervous. I've never done anything so impulsive with anyone else, and I can't get past feeling like 'I shouldn't be naked with someone I know so little about'. Even the one night stands usually involved some travel and a little more conversation. She handles it in stride though, guiding me under the water with a nurturing hand and bathing me without even asking. My reluctance slowly gives way to enjoying the moment, and I can't help but feel just a little bit of sorrow when she kisses me, a soft peck on the lips, as she leaves. No words. No goodbye. Just a knowing smile.\n\nI stay under the water for quite a while after that. On the one hand, I wouldn't even begin to know how to get dressed without looking over my shoulder at her the entire time, and on the other hand, the fact that I'm hard again just thinking about her would give me away through the towel I usually wrap around myself.",
        "I've never seen anything like her. The way she uses her body, and uses her desire like a weapon, is intoxicating. Even my own wanton behavior toward...\n\n...and then I realize that, for a little while, I didn't think even once about Calvin.\n\n***\n\n\"Wow,\" Susan says, sitting back on her heels with a grin. I fall back against the wall of the shower stall, panting, as she runs her fingertip through the streak of cum laid delicately over her collarbone. \"Mmmm.\"\n\n\"Glad you...\" I shake my head, blushing as my train of thought derails pretty spectacularly.\n\n\"I do,\" she laughs. \"It's thinner, right?\"\n\nI nod, still panting. \"Yeah, it's... uh... my cum isn't as thick as it used to be.\"\n\nShe gathers another jet on her fingertip, this one sitting more properly on the inside of her right breast, and sucks it clean while nodding. Impatient with her delivery method, she scoops up her left breast and cranes her neck to run her tongue slowly along the top of her nipple. Powerful shivers up and down my spine as she swallows.\n\n\"That,\" she says, as she rolls backwards into a squat, \"was exactly what I needed. Good God.\"\n\n\"I'm glad,\" I say, proud that I could manage something close to a normal voice.\n\n\"Are you going to be here tomorrow night? I've got a long day scheduled, and a good unwind might be just what I need. Again.\"\n\nMy stomach twists, and I bite down hard on my lip. \"Ummm... listen\u2014\"\n\n\"Uh oh.\" She arches an eyebrow at me as she turns on the water. \"What does that mean?\"\n\nI wring my hands together and look down. \"I'm not really, like...\"\n\n\"Into women?\" she interjects.\n\n\"What? No. No!\" I shake my head and try to recover. \"No, I'm just not...\" I take a deep breath, and it takes all of my willpower to assert myself. \"I'm not usually big on one night stands.\"<br >\n\n\"That was the second time this week,\" she says with a cocky smile. \"Tomorrow would make three.\"\n\n\"Yeah,\" I say, crumbling just a little and looking down. \"I know. And, you know, it's one thing when this... whatever this is... is happening spur of the moment, but...\"\n\n\"But making plans to be spur of the moment feels wrong?\"\n\nI nod. \"I still don't even know your last name.\"\n\nSusan nods slowly.\n\n\"I want to be taken out on a date.\"\n\nAmused incredulity creeps into her expression, and Susan folds her arms across her chest. \"Negotiating. I'm impressed.\"\n\n\"I like you,\" I say, proud of how calm it comes out. \"You seem really nice, and I'm, yanno, clearly attracted to you.\"\n\n\"Clearly,\" she repeats, gathering a drop of cum from her shoulder and sucking it off with a grin. It's really, really hard not to shiver.\n\n\"I want to get to know you too.\"\n\n\"Is that a hard offer? A date, or no more sex?\"\n\nI nod, and it's just about the hardest thing I've ever done.\n\nSusan cocks her head slightly to the side. Her gaze travels over my nakedness, and it takes every ounce of will to not retreat into a different, more protective, posture. Her expression betrays nothing as she grabs her towel and leaves, and after her footsteps have traveled out of earshot, I sigh. Hard. I liked her. I finish showering, wrap the long towel around myself just beneath my arms, and head out.\n\nThe yellow post-it note draws my eye long before I get to my locker, and it's a relief when the blue ink scrawled across it resolves into a phone number.\n\n***\n\nI feel a little underdressed when I walk in. My blue dress is a splash of color in the restaurant Susan picked, where nearly everyone else is in black of some kind. Including Susan herself, although her black dress is of a similar cut and length as mine. The more I look around, the more I think that maybe it's not that I'm underdressed and more that I stand out. Which is always terrifying.\n\nShe gets up and meets me in the middle of the floor, taking both of my hands with a tight squeeze before leading me back to the table. I blush as we sit down in the relatively private booth, and before I've had a chance to fidget a little and get comfortable our waiter comes around to take our drink orders.\n\nSusan seems content with the quiet, regarding me over the lip of her glass of red. Or at least, she's more comfortable than I am. I take a sip of my white, the house Riesling, and\u2014\n\n\"I like watching you build yourself up,\" she says abruptly. Heat on my cheeks. \"It's like I can see the moment when thoughts occur to you and you want to say something. You sit up, or stand up, really straight, and your expression becomes more neutral, and you take a deep breath...\"\n\n\"You're very observant,\" I say, while immediately dismissing the idea that I need to be less transparent.\n\n\"Comes with the job.\" She narrows her eyes ever so slightly, appraising, and continues without having to be prodded. \"I'm a judge.\"\n\n\"Oh,\" I say, feeling the sudden need to adjust my posture. \"What kind of judge?\"\n\n\"Federal,\" she says. \"District Court.\"\n\n\"Are there Secret Service agents here?\" I ask, leaning in closer to her and looking around. \"Should I be worried?\"\n\nShe laughs, a beautifully husky sound, and shakes her head. \"Not unless I'm laundering counterfeit money and didn't know it.\"\n\n\"I feel... I don't know. Awed? Kind of like I shouldn't even... that maybe I don't belong at the same table?\"\n\nSusan just smiles. \"Some of my colleagues really enjoy the trappings. They like that their opinion means as much as it does and build their lives around feeding and justifying their own egos. Between you and me, the bench attracts a lot of self-important jackasses, but that's not me.\"\n\n\"No,\" I say, regarding her. \"That isn't you, is it?\"\n\nShe shakes her head. \"I like the nuance of it. The overlaps and the gaps between laws. The gray areas. I like feeling like I help my community. Sort of like... buying from a small business.\"\n\n\"I am...\" I lay my hand flat against my chest and nod. \"I'm really impressed.\"\n\n\"I usually don't tell the people I meet casually. Federal judges aren't elected, so it's not like I put my face out there in TV spots to appeal to voters. I'm not well known. It's not... it's not common knowledge.\"<br >\n\nI nod for a moment, quietly letting that sink in. \"Well... thank you for telling me.\"\n\nThe waiter returns, smiling politely as he takes our orders. Once I place mine, Susan casually and quietly makes me aware of the fact that she will insist on paying, and suggests that I might prefer a slightly more expensive cut of steak. After a moment of consideration, I happily take her advice.\n\n\"So why did you decide to tell me?\" I ask, as soon as the waiter is gone.\n\nShe plants her elbow on the table and rests her chin on her thumb. Two fingers pressed to her temple. Her black dress is sleeveless, and I find myself enjoying her arms. They're not overly toned, but there's a shape to them that I find more than pleasing.\n\nThey have an aesthetic. I like that.\n\n\"Well,\" Susan said, breaking a moment of silent contemplation, \"you strike me as the kind of woman who can keep a confidence. My position is hardly a secret, but it's also not anyone else's business.\"\n\nI nod, joyfully filing away that I strike her as a woman.\n\n\"Also, I've been feeling a little... like we're imbalanced. I've known something about you that was very much private, and I felt like you deserved to know some things about me.\"\n\n\"I like how you danced around the word 'guilty'.\" I say, smiling broadly. I also like the way she laughs.\n\n\"This may surprise you, but that's not a word I use lightly.\"\n\n\"Understandable.\"\n\n\"But like I said... that wasn't a secret. It's something important, but it doesn't address the imbalance. Not completely, anyway. I told you that, largely, to tell you this; I am nearly deaf.\"\n\nShe smiles, shifting her weight slightly and resting more fully on the arm planted on the table. Her eyes on me, darting across my features. Taking in my reaction.\n\n\"Right now, you're trying to remember if you've ever had a conversation with me when I wasn't watching your face.\"\n\n\"I think just the one time on the treadmills,\" I mumble in shock, \"and you were very terse.\" How did she know that's what I was thinking?\n\nSusan nods, sliding a little more toward me. \"I had a bad rash of fevers when I was little. Ear infections and sinus infections. Something in my genes made me prone to them. I still get a few every winter, and after one year my hearing was just never the same. Had another really late one in my twenties that made it much worse, but then for a while it was stable. I could function. I picked up reading lips to supplement what I couldn't understand otherwise, and that was fine. In the last ten years or so, though, it's umm... it's gotten a little worse.\n\n\"I run a tight court,\" she says, sitting up a little, \"and while do I prefer the proceedings to be systematic, that's also a necessity for me because of my hearing. No one knows about that, professionally. I hide it, and I'm not afraid to hold anyone in contempt if they all start talking at once. Everyone just thinks I'm some bitch with a preference for order, but...\n\n\"I struggle. Especially with a noisy environment. You know, I picked this restaurant on purpose. The mood here is always very... restrained, and that makes it easier for me.\"\n\n\"I'm so sorry,\" I say, laying my hand over hers.\n\n\"Don't be.\" She smiles, but she also doesn't pull her hand out from under mine. \"In some ways, it's the best thing that ever happened to me. I'm very self-conscious about it, but at the same time, it's really shaped me as an adult. Losing my hearing helped me realize how easily anything can be, just.... taken away. It's helped me be appreciative of the things I have.\n\n\"Not only that,\" she continues, \"but it's affected the way I approach things. I don't take achievements for granted because I have to work for them. I have to work hard. Everything is a challenge, and I treat them like that. Challenges. Something to be conquered.\"\n\n\"What about me?\" I ask.\n\n\"So far, you've been doing the conquering.\" The coy curve of her lips gives way to a full blown smile a moment later. Bare toes brush against my calf, and I shiver. \"And I have to say that I'm... intrigued.\"\n\n\"I can't believe I'm going to say this, but... down girl.\"\n\nSusan blinks, clearly taken aback.\n\n\"We're still getting to know each other, and that's important to me.\"\n\n\"Ok.\"\n\n\"I'm not trying to shut you down, and I'm certainly not against... you know... trying to... get away with things in public, but-\"\n\n\"No no,\" Susan says, nodding respectfully. \"Understood.\"\n\n\"Good.\"\n\n\"I like that you stand up for yourself. That carries a lot of weight with me.\"\n\n\"Thank you,\" I say, trying hard not to completely deflate from relief.\n\n\"Sometimes I need someone to put me in check. It's not easy to admit, but that's... that's maybe been lacking in my life.\" She opens her mouth to say more, but our waiter returns with our entrees. As soon as he's gone, she continues, \"Most of the people around me, both personally and professionally, just sort of follow my lead. Very few will stand up to me, even if it's just a question of 'what should we get for lunch'.\"\n\n\"That could go really wrong too, don't you think?\" For a moment, it feels like my stomach has just fallen through a trap door. \"I mean, what if you find you don't like someone challenging you like that?\"\n\n\"Isn't that the essence of being in a relationship? Finding a way through the competing pull of what we need versus what we want? I want to win the lottery, ergo, I should spend all of my money on lottery tickets? Of course not, and only a completely self-absorbed buffoon wouldn't be able to admit that.\"\n\n\"Okay,\" I say, nodding.\n\n\"Of course I won't like it but that doesn't mean I don't need it, and I can always admit that at the end of the day.\" She gives me a weighing look, and then smiles more genuinely than I've ever seen. The kind of smile that shines in the eyes. \"You have a way about you.\"\n\n\"Thank you.\" The color really starts to rise in my cheeks.\n\n\"Let me say it again more clearly. You seem like a very honest girl. You're up front, and you're brave, and I need that in my life. I don't say that to put pressure on you to fix me, but... I'm trying to be honest too. I would like to have you... around.\"\n\nI nod.\n\n\"May I make a request?\"\n\n\"Of course,\" I say.\n\n\"This restaurant has a fantastic cheesecake. Deliciously creamy and rich, but also a little heavy. I don't know how you feel about cheesecake\u2014\"\n\n\"Love it,\" I say, and she nods.\n\n\"\u2014but I would very much like to get that 'to go'. I would like to wait and share it with you later, after we've gone back to my home and fucked.\"\n\nI blink and nod slowly.\n\n\"I don't say that to shortcut our date. I am having a lovely time, and this has been a lovely conversation, but I would very much like to fuck you tonight.\"\n\nHard. Very hard. I bite my lip and fidget, as much from being uncomfortable with praise as to shift my panties to not be so painfully restrictive. Not only is her directness about her intentions thoroughly flattering, but her understanding of me, and her want for me, is magnetic.\n\n\"I'm having a lovely time too,\" I say, and she laughs when I leave it there. \"One step at a time.\"\n\n\"Okay,\" she says with a big smile. \"Okay.\"\n\n\"Thank you,\" I murmur, and she nods. A few quick breaths to settle the nerves, and meanwhile she looks completely prepared to engage me on whatever battlefield I choose. I lick my lips and take a moment to make my move.\n\n\"You're doing it again,\" she says. \"Building up to saying something.\"\n\n\"I am.\"\n\nShe nods, smiling lightly, and tilts her head.\n\n\"Why me?\"\n\nSusan leans back a bit and narrows her eyes. Not maliciously, just... thoughtfully.\n\n\"I mean there are... tons of good looking people there. At the gym, I mean.\"\n\n\"That's true,\" she says, leaning forward a bit. Elbow planted on the table, with her shoulders curled inward. She has to know she's shaping her cleavage right where\u2014\n\nOf course she knows.\n\n\"And, just so you know,\" she continues, \"I have. Lots of good-looking young guys.\"\n\n\"Lots, huh?\"\n\n\"Lots.\" There's something in the intensity of her gaze. It's not... it's not arrogance. It's not boastful. It's more like... yes I have, and now I'm here.\n\n\"Lots of good-looking girls too?\"\n\nSusan shakes her head.\n\n\"No?\"\n\n\"No.\"\n\nGod, that gaze. I know, logically, that some of it is her reading lips, and reading my expression, to help with her hearing, but it's still hard to take the way she looks at me. Because she looks at me like she wants me. I want her to want me.\n\n\"Honestly, that's very new for me.\"\n\n\"Being attracted to women?\"\n\nShe nods. \"There was a time when another woman being attractive, looking or dressing attractively, anywhere near me was...\" She takes a deep breath through her nostrils and puts a sharp bend in her eyebrow. \"What is it about you?\"\n\n\"Me?\"\n\n\"I don't know if it's because you're so honest and that... that... draws the same out of me? Like I'm empathetically mirroring you? Or if it's that you make others feel comfortable. I don't know what it is.\"\n\n\"That's just the drugs kicking in,\" I say with a nod. \"It's best not to fight it.\"\n\n\"Clever girl,\" she laughs. I like the way she laughs. I like the sound of it. \"There was a time when another woman being attractive was not something I handled well. That's what I was going to say.\"\n\nI nod, listening.\n\n\"I got that from my mother. I remember getting into a really vicious argument with another girl at Columbia. I dismantled her in class about... God, I can't even remember. I think it was discussion about subpoenas and client-attorney privilege, and she was in tears when she left. I hated her. I'd been looking for an excuse to rip her apart all semester.\"\n\n\"Because she was pretty?\"\n\n\"I think so,\" she said, that pin-point focus in her eyes relaxing for a few moments. \"At the time I was sure she was getting more attention than I was because she wore shorter skirts. That she was somehow getting in the way of my education, or that there was only room in the class for one of us.\" She nods slowly, finding me across the table from her again. \"I'm not proud of that.\n\n\"Now, as I'm getting older, I've found that I'm more attracted to women. Is that... Is that my tastes changing? Is it that I've always been attracted to women and just am finally getting over not allowing myself to admit that? Is that why I immediately noticed Elizabeth's skirts? Because I liked her legs?\"\n\n\"Did she have nice legs?\"\n\n\"She would wear these heels,\" Susan said, leaning forward just a little more, \"and she... There would be me, and a room full of men, and these legs. You could see her coming down the hall, through a forest of pants, from a mile away.\"\n\n\"You have nice legs too,\" she added a moment later. \"That was 'why you', to circle back around. Everything came from that.\"\n\nI blush and nod tightly, more as a fidgeting reaction than as any kind of agreement.\n\n***\n\n\"This is beautiful,\" I say, unable to mask the awe as she leads me into the foyer. Susan smiles as she takes our doggie bags into the kitchen, and returns a moment later to where I'm still flabbergasted. The paintings on the wall are stunning. I don't recognize them or the signature, but there is a style to the brushwork that I'm just in love with. The way it's heavy with the paint in some areas and light in others. I love the crafting of it. The artistry in the artwork. \"You have a lovely home.\"\n\n\"Thank you,\" she says, taking my hand gently and leading me toward the stairs. It's a wide staircase with a gentle curve. My hand slips from hers as I lag a little, still taking in the little touches in the architecture, and that presents me with a delightful bonus when she gets just a little bit ahead of me on the stairs.\n\nHips. Beautifully-outlined hips in a dress tight enough to accentuate her features without descending into trashy explicitness. It's hard not to be transfixed on the idea of a woman with this kind of means wanting me in her life, but if there's one thing that could draw me away from that alluring thought it's the sight of her stalking in front of me. The way she chooses her steps as she walks, each foot crossing slightly over the path of the other. Like a great black cat. She turns down the hallway and, without looking back at me, reaches behind herself to pull down on the zipper of her dress.\n\nThe sound of a zipper traveling slowly is shiver-inducing. It's a deliberate sound, made by one who is in no hurry. The click-clack-click-clack is lower pitched, and speaks volumes about the nature of the journey and its position above the destination in a hierarchy of importance. A slow pull on a zipper is a decadent kind of sensuality. Luxurious.\n\nI am helpless against my desire to follow her, and I don't think I would resist even if I could.\n\nShe looks back, if not quite turning her head far enough to look at me, as her dress slips from her shoulders. Little by little, with each step, the sheer black fabric slips. Past her elbows. Down her sides. She draws her arms free and gives it just the slightest push to get it around her hips. Three inch black heels. Black stockings. A black lace garter belt. A smile. Nothing more.\n\nLove the smile. Don't get me wrong, I love it all, but there's something about a smile glimpsed from so far to the side that all you can make out is that outermost upturn of the lips, and the way the skin around the eyes pulls tight.\n\nDear God, do I love it all. I follow her quietly, walking small. Not because she's imposing, or for any lack of self-respect, but from not wanting to break the spell she's casting.\n\nEventually though, as I cross the threshold into the bedroom, I start reaching back as well.",
        "\"Um,\" I say, frowning as I twist. The zipper won't budge. \"Can you...\"\n\nShe comes to a stop as she turns, body halfway around so that her frame is silhouetted in front of the bed. Her chin nearly in line with her shoulder as she looks at me, eyes darting. Just when I realize that she probably didn't understand what I'd said, she smiles. Inferring from my body language. \"Is it stuck?\"\n\n\"Yes,\" I squeak, blushing. She strides confidently past me while I gather my hair and pull it to my left, resting on and in front of my shoulder. I look back and to the right, and smile. \"Thank you.\"\n\nSusan says nothing, and after a few tugs the zipper comes loose. I can't help but take a deep breath and stand up just a little taller as she unzips it down to the base, in the small of my back, and spreads the blue dress.\n\n\"Wait,\" she says, when I start to slip my arms through the short sleeves. Her fingertips slide up my bare back, spreading the dress slightly wider as she goes. A sharp inhale as she pulls at the clasp of my bra. The hooks come loose, and I sigh as she pushes that farther and farther apart. The shoulder straps of both dress and bra slide outward. Indulgently paced.\n\nMy bra stays largely in place inside the dress, and as the blue fabric slides past my elbows I can't help but pull my arms through and lay my hands over my humble breasts. Susan laughs, working the dress past my hips and gathering my panties as she goes. The sound of her humming, as she transitions down to her knees behind me, sends chills up my spine.\n\n\"Stay,\" she says simply. \"Just like that.\" Her hands run up my legs, around the outsides, before coming back together at the tops of the backs of my thighs. I gasp softly as she works her thumbs up between them, gently cupping my cheeks. Spreading. The warmth of her breath on sensitive skin.\n\nHer tongue, hot and wet, against the puckered opening between my cheeks. I bite down hard on my lip, breathing fiercely through the nose. Tiny lashes. Tiny whimpers. The tip of her tongue, circling and swirling. Pushing ever so gently. Writhing.\n\nNot-so-tiny whimpers.\n\nOne of her hands comes up above the small of my back and pushes, while the other one keeps a tight grip on my pale cheek. I curl, following her quiet guidance, and bend forward over the foot of the bed. Bending forward until my elbows come to rest on the soft comforter. Legs spread slightly, and bent just more than 90\u00ba at the waist. In just my heels.\n\n\"Much better,\" Susan murmurs. Her hands slide around to the front of my thighs, giving her leverage to pull herself forward. Back and forth over the forbidden ring. Spreading her tongue wide. I groan, back arching, as she teases me. Flirting with more and more pressure, but not quite enough to break through.\n\nShe sits back with a happy sigh, though still close enough that I can feel her breath on my skin. It's a shock when her tongue presses gently underneath my balls, curling underneath them and drawing them into her mouth. Her arm brushes against the inside of my knee, alerting me a moment before her fingers wrap tightly around my shaft. Gripping it around the middle, giving her room to stroke up and down.\n\nThe tender pouch slips from her lips, and she gives each ball a gentle kiss before returning the attention of her tongue to my dark hole. This time, she curls her tongue tightly and pushes. I groan, loudly, as the outer ring yields to her. Knowing she can only barely hear me and yet still consumed with the need to bellow my approval. Her hand works smoothly up and down, dragging the outer layer of skin out over my head like the foreskin I lost so early.\n\nLittle by little, my ring stretches to allow her, and her tongue pushes deeper. Pushes constantly. Smoothly and inexorably worming inside of me while she strokes me. I draw my head back and groan again, voice echoing throughout the bedroom. Stroking me faster. Smoothly, and from the head to the root.\n\nI plant one arm hard into the bed and turn, looking back over my shoulder. Susan smiles with her eyes, and the set of her brow, as she looks up at me from across the length of my back. I reach back with my other arm and grab hold of the opposite hip, twisting.\n\n\"Oh God,\" I groan. Susan's eyebrows come down tight, knitting her forehead. \"Oh that feels good.\"\n\nShe stares at me, eyes burning, as I moan and writhe. I don't need to embellish the way my back curls, or the way my hips grind back into her face; my body is on fire for her. All I need to do is show it, and that gets easier when I know she's watching.\n\nIt gets even easier once I realize it's affecting her.\n\n\"That feels really good.\" Her eyes tighten every time I talk. \"God, I can't even remember the last time someone ate out my asshole.\"\n\n\"Mmmmm, good,\" she says, her face still held so close that her lips brush against the pucker as she talks. \"That sets me apart.\"\n\n\"Oh Fuck,\" I moan, as she drives her tongue back into me. Lids fluttering. \"Oooh fuck.\" Her hand tightens around my shaft, squeezing mercilessly and stroking slower. I groan again and pull at my pale cheek, spreading myself for her. \"Go deeper.\"\n\nIf there's any hesitation to do as I tell her, it's unnoticeable.\n\n\"Oh Fuck!\" Her warm, wet tongue burrows inside of me, pushing past the inner ring and worrying against the walls within. Her own groans pass slowly through my core, though her eyes stay firmly fixed on me.\n\nShe's doing it again. That... Fuck it's hard to think when she's got her hands on me. She's doing that thing again, where she's going to just try to make me cum. I don't want her to stop, but I need to... I need to...\n\nGod her tongue is distracting.\n\n\"Oh Your Honor...\" It just pops out.\n\nHer lids droop slowly. An almost imperceptible shift in the feel of her tongue. Not in texture, but in the effort. In the tone.\n\n\"Do you like licking my ass, Your Honor?\"\n\nAgain that feeling of dissociation. That disconnect when I start taking control. Less powerful than before, which is as exhilarating as it is terrifying. There's an odd sort of comfort at being less alienated by your own behavior than you were before. An 'I could get used to this' sensation.\n\nGod her tongue is distracting.\n\nSusan's gaze becomes infinitely more intense. Almost angry. Speaking from personal experience, having your motives subverted is annoying, but for her to react so strongly...\n\n\"You do, don't you?\"\n\nShe says nothing, and good God her tongue is distracting. So close to no reaction at all that it might as well mean that, except that she continues licking... with just the slightest bit of extra fervor. I shift from holding my cheek with my right hand, and place the palm on the top of her head. Fingers curling over and around to the back of her scalp, slipping into her hair. I whimper, shivering as her tongue finds a soft spot. Her grip on my legs amps up, nails nearly breaking through the skin of my thighs.\n\nSo hard to think straight with her tongue...\n\nMy fingers reflexively tighten in her hair, just for something to hold onto, and Susan mewls magnificently. It's a small sound, barely audible, but I can feel it. Oh, can I feel it. It's an effort to control my expression, curling my lip and sneering when the urge is there to submit, body and soul. To let her take me in hand and own me.\n\nThe urge is there, but it isn't what I want. Not right now.\n\nSusan yelps when I give her hair a sharp yank. The tightness around her eyes dips, softening what I can see of her expression, and I pounce.\n\n\"S-suck on my balls.\"\n\nShe doesn't seem to notice the slurring, brought on by her tongue hitting that same, gloriously-sensitive patch of nerves inside of me. She aims my shaft straight down, between my thighs, and brings her fist in toward the base so that the churning orbs are collected and high. Her eyes drop to just above the curve of my ass as she presses her lips against the hairless flesh and sucks, drawing one and then the other into moist darkness. Tenderly massaging them with her tongue. Lovingly massaging them.\n\nNothing unravels me more than sensual attention to my balls. It's not the feel of them, or that they're some kind of magical trigger. It's what they represent, and what they say about me. About who I am, and what I am. It is acceptance of 'me as I am', and while I'm aware that that's not a new observation I've made about myself, it still hits me like the fist of an angry God every fucking time.\n\n\"Good,\" I purr. \"Thank you, Your Honor.\"\n\nSusan rolls her tongue, keeping constant contact with varying pressure from side to side.\n\n\"You're very good with your tongue.\"\n\nShe says nothing, merely continuing as she was while occasionally making sharp squeaks as air escapes where it isn't supposed to.\n\n\"Verbally and non-verbally.\"\n\nShe says nothing. Her cheeks sink into her mouth as she sucks harder, drawing my flesh deeper.\n\n\"But actions really do speak louder than words for you, hmm?\"\n\nShe says nothing. Tongue like a wave.\n\n\"Ok then,\" I say. I take my arm from off the bed, and grip her hair tight to help keep my balance while bent forward. She gasps as I push her back, away from me, and my balls pop from her mouth despite some delightfully powerful suction. She groans, eyes darting, as I reach down between my legs with my left hand and guide my cock almost straight back. Toward her.\n\nSusan slides her tongue underneath the upside-down head, and her eyes are right back on mine. The feel of it sliding back over the length of her tongue is incredible. In almost no time, I can feel her breath from her nostrils against my balls. Her nose nestled between my spit-slick balls.\n\n\"I like the way I just slide into your throat from this angle, Your Honor.\"\n\nShe says nothing, merely shivering a little from a repressed gag reflex. Her eyes tighten whenever my grip on her hair changes directions, and I use her as an anchor to sway myself forward and back. Thrusting very slowly.\n\n\"Do you like the way I look in heels, Your Honor? I think they make my ass look fantastic.\"\n\nShe says nothing. The tiniest flicker as her gaze travels down to the pale, smooth curve of my ass before coming back up to meet mine. I bite down on my lip and moan as I hilt and hold her there. Fist tightening in her blonde hair streaked with light gray.\n\n\"How does my cock taste, Your Honor?\"\n\nShe says nothing, but the blush of embarrassment is so complete that I can see it on her brow.\n\n\"Hmm? Do you like that?\" I wiggle my ass at her, shaking her head ever so slightly in the opposite direction my hips are moving, and the tiniest little moan escapes when the seal, of her lips on my shaft, breaks. \"You do?\"\n\nHer eyes close slowly, followed by a longer, louder, muffled moan. I pull her in hard, grunting softly at the way my balls get squeezed between us.\n\n\"Remind me to put some pigtails in your hair next time, Your Honor.\"\n\nAnd there it is. Her eyes drift shut completely, and the unmistakeable sound of fingers moving between wet lips fills the room. The smell of her need fills my lungs, and I sigh happily. I let go of her hair, and she immediately slides backwards. A heaving gasp as her mouth and airway is vacated. A thin stream of tears and mascara down her left cheek, followed quickly by one on the right.\n\nI smile as I stand up straight, feeling every bit of the height my heels give me as she's kneeling. Her jaw hangs open while she moans, and I shudder at the creamy precum mingling with her saliva on the tip of her tongue. It occurs to me that she's saved it, not swallowing, just for the chance to show it to me, but the abandon with which she's touching herself, knees spread wide, leaves little question as to her genuineness.\n\nI lay my cock on her tongue, with just the head behind her lips, and take hold of her hair with both hands this time. \"Yes,\" I murmur, nodding. \"Two pigtails, nice and high. Would you like that, Your Honor? Would you like to wear pigtails for me? On the bench?\"\n\n\"Oo Fuu,\" she groans, careful to keep her teeth well clear while still enunciating as best she can.\n\n\"I love the way you sound when you're sucking me off.\"\n\n\"Mmmhmmm,\" she groans, nodding her head. Her eyes are still closed, brow furrowed, and her cheeks are a bright, bright red.\n\n\"Do you like sucking my cock?\"\n\n\"Mmmhmmm!\" No hesitation. No ambiguity.\n\n\"Good. I like fucking your mouth.\"\n\nTiny whimpers. The sloshing sound of her fingers increases. I pull her in by her hair. Her nose inching toward my pelvis while my cock finds its way home.\n\n\"I wonder how much, though.\"\n\nShe looks up at me, lips stretched around my girth, and blinks. I hilt and hold her there, watching for the shine of mist in her eyes. A fluttering of her lids. That's my favorite part, when the situation is reversed, and I find that putting her in that position is similarly magnificent.\n\n\"Would you like it if, after fucking that beautiful cunt of yours, I finished in your mouth?\"\n\n\"Mmmhmm,\" she murmurs, nodding slightly, though the blush on her cheeks flares.\n\n\"Would you like that?\"\n\n\"Mmmhmm,\" she repeats, and I pull back. A deep breath through flared nostrils, as her airway opens again, and she blinks away the tears.\n\n\"What about your ass?\"\n\nShe looks up at me, wide-eyed. Her expression is still, but not the bloodless pale frozen of actual fear or panic. Her cheeks are flush to the point of radiance. More telling is the sound of her fingers; faster and louder. Whether it's that she likes the taste of my cum that much or is embarrassed to admit how much she likes anal play honestly doesn't matter. They're both good answers.\n\n\"On the bed,\" I say, tilting my head. She seems relieved, shoulders relaxing, and I wonder how much more I would have had to push to get her to cum right there. Not much, I think. She looks back at me once her first knee touches down on the edge of the bed. I lay my hand on her hip, nudging ever so gently, and she rolls onto her back. I keep my hand on her, following her, and use the slightest pressure to keep her from crawling too far onto the bed. Her legs come up above her, spread wide in a V with her hips and knees each bent at ninety degree angles.\n\n\"Do you like wearing heels?\" I ask, as I step between her legs. I lay my cock along her wet lips, the head extending past the apex by an inch or more.\n\n\"Yes,\" she says breathily. \"I feel powerful in them.\"\n\n\"They're like weapons.\" I let my fingers slide along the backs of her calves, and she shivers. \"The way they shape us. Not that I think you need extra shaping.\"\n\n\"Fuck,\" she groans.\n\n\"They draw attention where we want it,\" I lilt, leaning my head to the side to admire the shape of her stockinged calf. \"Helps us play to our strengths.\"\n\nShe reaches down between her thighs and strokes the end of my shaft. Her palm brushing up and down over the head.\n\n\"Not to mention the aesthetic they have all on their own.\" I draw my hips back ever so slightly, and Susan keeps her hand in place to guide the flared head to her entrance. \"The angle. The styling. The sharp spike.\" Crystal clear enunciation. I punctuate the last with a quick thrust, and Susan moans. Head rolled back into her shoulders. \"It's so... phallic.\"\n\n\"Fuck!\" she groans.\n\n\"It's symbolic.\"\n\n\"Oh fuck yes.\"\n\n\"But they're not just weapons.\" I slide fully into her, thighs resting against her upturned cheeks, and sigh as I bite my lip. \"They're armor too. They help us hide.\"\n\nShe looks down at me, one eye more open than the other. Two fingers swirling shamelessly over her pearl. Throaty moans as she races toward the orgasm so narrowly avoided before. My hips move slowly, moving the full length of myself in and out of her.\n\nFingers swirling faster.\n\n\"Inside of these,\" I say, as my fingers creep along her achilles heel, \"your foot is contoured for you, but when it comes off...\" I hook my middle finger into the back of her black pump and pull back, peeling it up and away from her sole. \"...you can't hide what I do to you.\" She writhes on the bed, whimpering, as I slide my hand over her bared, stockinged foot. Toes curled tightly into the ball. Pointed down and away, along the line of the shin.\n\n\"There,\" I say, cradling her foot in my palm. Thumb brushing along the top of the arch. \"Exposed.\"\n\nThe pitch of her whine ramps up and up, spiraling and reaching her peak when I twist slightly and remove the other heel. She tries to curl her feet around my arms as she cums, but I push down on the backs of her thighs and lean over her. Fucking her earnestly at her most sensitive. At her most vulnerable. Susan's whines become full-throated howls as I piston into her. I love how wet she is. I love how wet she is.\n\n\"Keep going,\" she grunts, jaw tightly clenched. \"Don't stop. Don't stop.\"\n\nThe more I go, the less I feel like I can control my voice at all. The feel of her walls, wrapped around my shaft, is so distracting. I can barely think straight, let alone continue to monologue to her. Her legs curl inward, toes reaching just past my elbows. I can just barely make out her nails, a bright red, through the nylon.\n\nAfter another minute, with only the sound of my cock plunging into her above her near-constant whimpering, Susan cums again. Her fingers never stop moving. Never stop their swirling stimulation. I love the feel of her fingernails brushing against me when I hilt. I love the feel of her muscles contracting so pervasively. So completely. I love the way the veins stand out in her neck and forehead, her skin already pebbled with sweat.\n\n\"Keep...\" Her eyes stay tightly shut. \"Just... don't...\"\n\n\"I won't,\" I grunt, trusting myself only enough to say that much. It's striking how much more control it requires to be in control. How different it felt to submit, and how freeing. How easy it was to whisper every dirty little thing that passed through my head when I was so completely in someone else's hand.\n\nNot better. Not worse. Definitely different.\n\n\"Oh god,\" she moans, as I thrust faster. \"Oh God.\" Harder. My hips ferociously impacting against hers. Harder. So hard to think. \"Yes! Yes!\"\n\nStuttered moans and whimpers flow out of me, with every breath, push, and pull. A longer, deeper groan when I look down to see how much of her cream is collected at the very base of my shaft. The sudden wellspring of warmth. I can't slow down. I don't want to slow down. I just want to run to it as fast as I can. Pour every last ounce of energy into it.\n\n\"Open,\" I whine, as I pull back at the last minute and scurry onto the bed. Susan's shocked expression is perfectly suited as I waddle over the bed on my knees, still wearing just my heels, while stroking myself to stay close. Her head comes up, craning like a baby bird for the meal its mother brought, and I just manage to get the head onto her tongue when I start cumming with a loud cry.\n\nMy knees almost give out, sliding outward, and I pin her head down into the bed as I cum hard. A wave of euphoria sweeps through me, taking all conscious thought and leaving only blissful release in its wake. I slump forward over her, barely getting my hands underneath me, as she nurses on my cock. Suckling greedily for every drop.\n\nShe squirms beneath me, thighs tightly squeezed together, and as soon as I fall farther forward, they spread for me. Inviting me. It's not even a question. Her arms wrap around my waist, holding me as tightly as she is closely, as she drains me. Drawing out every molecule. No hint of slowing even as I can feel myself softening in her mouth.\n\nI match the placement of her arms, snaking mine around her waist, and she rolls me onto my side. Rolls with me. Her thigh underneath my head for a pillow, as I lap at her slick folds. My thigh under her head as she works her tongue over every square inch of my flesh, reclaiming every drop of moisture to be found. For minutes on end.",
        "She shivers hard, briefly gripping my head between her thighs, as she winds down. Finally catching her breath. Whether it's an aftershock or another small orgasm all on its own, I can't tell and don't care. What matters is that I know I satisfied her. I fucking know it, and that feels fucking fantastic.\n\nI fall back first, rolling away ever so slightly, but she keeps my soft, spent shaft completely within her mouth for much longer. Licking up and down. Underneath the lip of the head, the whole way around. It's hard not to think of it less as cleaning, after so long, and more like worship. Or deep appreciation.\n\nBone deep.\n\n\"You have beautiful lips,\" I murmur, after staring at her pink folds in a daze.\n\n\"Mmmmm,\" she says, and it's almost another full minute before she finally releases me to the cool night air. \"Sorry. There's something about a penis, once it goes soft, that I just can't get enough of.\"\n\n\"Don't be sorry,\" I laugh. \"You can do that aaaaany time you want.\" It's amazing how thoroughly exhausted I am. It's amazing how good it feels to be so thoroughly exhausted.\n\n\"I'll remember that,\" she says dryly, and I bite my lip and sigh happily. \"How about that cheesecake?\"\n\n\"God, that sounds perfect!\"\n\nIt takes a few seconds to disentangle from each other. Susan grabs a black silk robe from the door to her closet and offers me a blue one. I feel so... I don't even know what... as I slip into it and cinch the waist. Gorgeous? No. Lucky? Pampered? Maybe. I don't even know when my heels fell off, but we're almost back to the top of the stairs before I notice they're gone. She quirks an eyebrow at my giggle but says nothing as she leads the way.\n\n\"Forks are in the top drawer there,\" she says, pointing as she continues on toward the refrigerator.\n\n\"Oh, I like these.\" I hold one up and spin it between my fingers. \"I like the\u2014\"\n\nThe fork slips from between my fingers as I look past it in horror. It clatters, forgotten, on the kitchen floor as Calvin stares back at me impassively. My jaw works quickly, forming words my lungs and vocal chords can't finish, as I back away. He shouldn't be here. He can't be here. I blink, and he doesn't disappear. Why won't he disappear?<br >\n\nAnd then Susan sits down next to him, placing her slice of cheesecake between them. Both of them looking to me.\n\n\"Hello Kit,\" he says."
    ],
    "authorname": "AwkwardMD",
    "tags": [
        "shemale",
        "trans",
        "transsexual",
        "heels",
        "shower",
        "mtf trans",
        "pre-op"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/orchid-ch-02"
}