{
    "title": "Amy Makes a New Life",
    "pages": [
        "This story should stand alone, although it is a sequel to Amy and Dee and tells the story of what happened to Amy after her wife died. It doesn't matter if you skipped that story, I'll cover what you need to know. There will be a lead-in before there is any sexual activity, so if that is what you're after, look elsewhere. \n\nThe game of cricket features in this story and I'll explain the bits you need to know as it's secondary to the story itself. It is worth saying that cricket is a team game, played with a bat and ball, it's not unlike Baseball, but then an apple and an orange have similarities, but are very different. The terminology is also very a little mystifying at times. The internet has some simple explanations if you really want to know more.\n\nAll characters are fictitious, over eighteen when involved in anything sexual and all activity is consensual. The Bandit's cricket team is fictional. Any resemblance to other persons is accidental.\n\nI'd been on the road for about an hour before I reached the motorway and a few miles later I overtook the removal van. Like an idiot, I waved at them, but I very much doubt if they saw me or would have realised who I was anyway. It would take me another four hours to reach my new home.\n\nThe house I'd lived in on the south coast was a beautiful, peaceful place, but whilst it was once perfect, life had moved on and the house felt empty. My work now involved a lot of travel, I was a self-employed management consultant and had taken on a much heavier workload, so it made sense to move to somewhere more central, somewhere that I was familiar with. I was heading back to the Midlands and a city that I knew well and liked. It had a couple of theatres, live music venues, restaurants and lots of things that I wanted to have nearby again.\n\nI'd grown up in the northwest of England with two loving parents and then, when I was sixteen, they'd been killed in a car accident. My Aunt had taken me in and although she was much older than my mum and didn't keep good health, she'd done her best. I'd worked hard at university and gained a Masters' degree in business management.\n\nI'd been taken on as a management trainee and moved to the city that became my home and to where I was returning today. It was there that I met and fell in love with one of the senior managers. Dee was much older than me, but it worked out and when she retired, we'd moved to the south coast from where I continued to work part-time, life was idyllic.\n\nI'm pretty lucky, I don't really look fifty-two, I'm five feet nine inches tall, slim, with nice but not overly large breasts, I still had long and shapely legs that were my best feature. I'd always had long, very dark brown hair that reached the middle of my back, brown eyes and a nice face. I always thought that my top lip was too thin, but that aside I had no complaints. I was a lesbian and had known that I was since soon after my parents died and I'd always been comfortable with it.\n\nAfter stopping for a fresh coffee, I let my thoughts wander back in time as I passed through the Cotswolds.\n\nTwo years earlier\n\nI left the bathroom telling Dee, who was still in bed, that I was going to make tea and would bring a cup for her. \"Could you bring me a couple of pills as well, I have a slight headache?\" she asked.\n\nAs soon walked back into the bedroom I knew that something was wrong, the left side of her face seemed odd and she had the most terrified look on her face. I felt her forehead, she didn't have a temperature and when I looked at her, I realised that she was struggling to speak. I went to grab my phone to call an ambulance, then I got on the bed next to her. Holding her, I whispered that everything would be okay, even though I was petrified and doubted that I was telling the truth. I also kept telling her that I loved her, that was certainly true. I heard the ambulance pulling up and ran to the door to let them in. I led the way back to our bedroom and as soon as I saw her, I knew, in that instant, that Dee was gone. I fell to the floor sobbing and the Paramedics confirmed what I already knew. After twenty-six magical years, it was over.\n\nDuring the next eight days, I was busy making arrangements, sorting out Dee's will and a variety of other small jobs that kept me occupied. I cried myself to sleep every night and every afternoon I walked the paths we'd trod together so many times, but now alone and in tears.\n\nI don't remember much about the funeral or even who was there. That night I climbed into bed and lost it completely. Grief overtook me and everything that I'd kept under control escaped. I stayed there for three days, barely eating and angry; angry with myself, with God even though I didn't believe in the Almighty, with the world in general and lastly with Dee. It was my anger at Dee that finally shook me out of the depths of despair. It wasn't her fault; we'd shared our lives and love and I reminded myself that we'd had years of joy, a joy that some people never experience.\n\nThree weeks later, wrapped in a warm coat, scarf and gloves, I carried the urn that held her ashes. I scattered them along a section of the cliff-top path, letting the wind take some of them away over the cliff edge and off towards the sea. I spoke out loud, telling the world how lucky I'd been, how special Dee was and how much I'd loved her. There was no one to hear me, except the wind and the waves on the beach below. For some reason, I felt Dee's presence during those twenty minutes and I stopped crying when I sat on our favourite bench. I raised my voice once again and now yelled, almost a scream, \"Dee, I wish you were still here, but at least you went quickly. I loved you with all of my heart and the years we had were spectacular. I'm going to miss you, but I have my memories which I'll cherish. Goodbye, my love.\"\n\nThe next few months were difficult. There was a feeling of loss, the house was empty and I hated sleeping alone. I had no money worries, but I felt that I needed to get back to work and wanted a challenge. I was fortunate to find plenty of jobs and they meant that I had to travel. That helped a lot because I was occupied, but when I got back home, the sense of being alone was always there.\n\nDisposing of Dee's clothes took me a while and caused floods of tears. Amongst her jewellery, I found a gold locket that she'd rarely worn. It had a picture of me inside it. I fiddled with it several times over the next few days before I decided to place a head and shoulders photo of Dee, taken on her fiftieth birthday, on one side and a photo of my Mum and Dad on the other. I wore the locket most days and often found myself touching it for comfort.\n\nWhen we'd got engaged, we had identical rings, a single diamond on a narrow gold band and our wedding rings were equally simple narrow bands. I asked a local jeweller to size Dee's wedding band and wore it alongside my own every day. I felt that it kept her close to me. Sometimes, I also wore both of our engagement rings.\n\nI had a job planned in our old home city that would keep me there for a couple of weeks. One evening, before I went, I telephoned Celia who'd worked with Dee and me. I was surprised when she told me that she'd been at Dee's funeral, but I hadn't realised. When I told her that I was working near to her home and hoped that we'd be able to have dinner one evening she insisted that I stay with her. \"I'm on my own since John passed, the kids are married and away with their own families. I'd welcome the company.\"\n\nThe work during those two weeks was demanding, but that was what I'd wanted and they were paying well for my services. My free time with Celia was a real tonic and liberated me from much of the sense of loss. We went to the theatre, to some live music and ate out a few times, but I loved cooking meals with her and sitting talking until late into the evening.\n\nOn one of those evenings Celia's eldest, Josh arrived with his wife, Pauline and their daughter Hayley, who was in her late teens. \"Josh, do you remember Amy King, who I worked with? We met at the cricket a couple of times.\"\n\n\"Amy, it's nice to see you again after so long. Mum told me about your wife, that must have been hard. How are you doing?\"\n\n\"Getting easier.\" I'm not sure that was entirely true, but a good enough answer. \"You've grown up since I last saw you and now married with a daughter. It just goes to show how time flies.\"\n\nI sat chatting with them and at one point Hayley, who was sitting next to me asked, \"You met Dad at the cricket?\"\n\n\"Yes, a few times. Do you go to watch or play?\"\n\nPauline jumped in, \"She's itching to brag, she's just been taken on by the Bandits ladies' team. And she's also playing for the Loughborough University team.\"\n\nShe blushed but was excited to tell me about it. \"That's quite an achievement. I hope things go well for you. When's the first game?\"\n\n\"In a few weeks, training has just started, but I doubt if I'll be picked for the first team this season.\"\n\n\"What are you studying?\"\n\n\"Sports science. I love sport, but not many people make a living in professional sport, so this is something that will open doors, keep me close to sport and feed me.\"\n\nOver the next half hour, Hayley and I talked about all sorts of things. I was impressed and really liked her. I told myself that I should my eye on her career.\n\nI'd brought one of Dee's bracelets with me, it was one that she'd worn regularly, but that I was unlikely to wear, despite it being lovely. I'm not sure why I had it with me but towards the end of the second week with Celia, I took it from my jewellery roll. \"Celia, I know that Dee valued your friendship and enjoyed working with you. I'd like you to have this bracelet, as a keepsake, something to remember her by.\"\n\nCelia looked at the bracelet and took it in her hand, \"She wore this a lot; I remember it well, it's beautiful, but I can't take it.\"\n\n\"It's not something that I'll wear, there's no point in leaving it sitting amongst my jewellery when you could wear it. I'm sure Dee would approve.\" The tears started and I grabbed a tissue. \"I'm sorry, I miss her so much.\"\n\nCelia put her arm around me. \"I always suspected this would happen, because of your age differences. I've never seen anyone so in love, so committed as you were to Dee. I was stunned that you melted 'Frosty', you were a great couple. I'll wear the bracelet and think of my friend often, of both of you, thank you, Amy.\"\n\nIn part, that trip confirmed that the city would once again make a good base and home for me.\n\nNew home\n\nI pulled up at the rear of the apartment block that contained my new home and got out to stretch my legs. It'd been built about four years ago, there were two flats on each of the three lower floors and a penthouse on the top. I was on the third floor and I had a decent sized balcony that overlooked the recreation ground next door, it was big enough for a couple of chairs when the weather was good.\n\nThere was a small supermarket, library, shops and caf\u00e9s within a couple of hundred yards in one direction and the cricket ground was a five-minute walk in the other direction. Several buses stopped close by and there were great links to the city centre, ten minutes away and from there to the other suburbs.\n\nI managed to wrangle several bags into the lift and dragged them to the door of my new apartment. I smiled when I stepped inside, there were lots of large windows making it bright. The open plan kitchen, dining and living area looked bare but clean, as the painters had been there a couple of days ago. I went to check the bedrooms, two good sized doubles and a small single that I'd probably use as an office. The room I was going to use had a large bathroom, with a big shower and there was another bathroom between the other two bedrooms.\n\nI'd emptied the rest of the things from my car by the time the removals people arrived and it didn't take them long to get everything unloaded. I cooked a pizza, then made up my bed before climbing in. I was tired, then I felt alone and started to cry, before saying out loud, \"Oh Dee, I miss you so much. I love you.\" There was no reply and tiredness overtook me.\n\nThe next day I felt more positive and started getting things better organised. In mid-afternoon, I'd just hooked up the TV when my new sofa and chairs arrived. Once I'd got the plastic off of them, I moved them around until I was happy with their position. I stood back to check, just one thing was missing. I went to the single room where lots of stuff had been stacked and pulled out a large, slim object enclosed in bubble wrap. I cut the wrapping away to reveal a watercolour seascape. I hung it in the centre of the lounge wall and stood back again. Dee had taken up painting after she'd retired and this was the view from our favourite bench on the cliff path. I poured a glass of white wine and admired it.\n\nI dug around in my holdall and found what I was looking for. A head and shoulders portrait of Dee in a frame that went on my bedside table along with another photo of us both together. It'd been taken one evening when we were attending a fancy dinner and we'd both worn our best outfits. I towered over Dee in the five-inch heels she insisted that I wear, she'd refused to wear anything higher than three-inch heels that evening because she liked the height difference.\n\nIt took me a couple of weeks to get settled in and then it was back to work. I was able to do much of it from home and when I did have to travel it didn't take as many hours. Some jobs lasted for a few days and a couple lasted longer. It felt good to get back to the need to think and problem solve, importantly it kept me from thinking about Dee so much. But it didn't stop me from feeling lonely at times.\n\nIdiot behaviour\n\nI'd been unable to sleep for most of the night, now it was only 5.30 am and I was wide awake. I was broken and I knew it. Grief. For some reason, the need and desire for Dee felt overwhelming. It made no sense; I'd dealt with it and been fine. Sure, I missed her like crazy, I'd give anything to have her back, even for a short time, but it wasn't like this. I showered, pulled on some clothes and made coffee. Then I knew what I had to do. I tipped my coffee into a travel mug, threw a few things into a bag, grabbed my coat and headed for the car.\n\nBy the time I hit the motorway the tears were flowing and I had to keep wiping them away. It was only ten weeks since I'd made the journey in the opposite direction and what I was doing made little sense, but I felt that I had to go. It took me five hours, including a brief stop for the loo and some fresh coffee, before I parked near to the house where we'd lived and I walked the path that we'd frequented almost daily for many years. I'd been walking for about twenty minutes when I sat on the bench that we'd used many times and let myself go. I screamed up to the sky, \"Dee, I love you so much, I miss you. I miss you so much.\"\n\nI sobbed into my hands and didn't see the woman and her dog approach. She sat beside me and made me jump when she spoke, \"Excuse me, but are you okay? You seem distressed.\"\n\n\"I'm sorry, I didn't mean to worry you, but I'm feeling lost and alone. I miss her, so much.\" I looked up and for the first time, our eyes met. \"Oh, my God.\" It was the woman who'd bought our house.\n\n\"You're...\"\n\n\"Yes, Amy King. You bought our house - Mrs Long.\"\n\n\"I'm guessing that it's your partner that you're missing.\" I nodded. \"If it's not too hard, why don't you come back with me and I'll make tea. You can talk to me; it might help if being in the house isn't too difficult.\"\n\nMrs Long, she told me to call her Lucy, made us tea. It seemed weird to be sitting in what was once my lounge, even though it had been redecorated and contained different furniture. \"Thank you, this is very kind of you,\" I said and as I looked up, I noticed that one of Dee's watercolour landscapes still hung opposite the fireplace. \"Oh gosh.\"\n\n\"The painting? Yes, it's lovely and it belongs there. Do you miss it? You can have it if you wish.\"\n\n\"That's kind of you, but it's in its rightful place and I have others. I've been feeling lost for a few days and woke up early this morning, after very little sleep, in quite a state. I thought that I'd dealt with the grief of losing her. I still think about her every single day, but this morning I was overcome and I was drawn here.\"\n\nI sipped my tea and Lucy stayed quiet. \"It's the last place that we were together, right here and her ashes are along that path. I felt as if I wanted to be close to her again. It seems stupid....\"\n\n\"I think it shows the depth of passion that you shared. It probably was foolish, but if you felt that you had to do it, what harm has it done?\"\n\nWe talked for a couple of hours, about the house, about my life here and the years that Dee and I shared. By tea time I made to leave and apologised for imposing upon her. I was going to stay in a local hotel and stopped to have a meal. When I finished eating, I felt much better and decided to head back home. I was shattered by the time I got back to bed and knew that I probably shouldn't have driven for so many hours. It was another stupid decision I'd made that day, fortunately, there were no adverse consequences.\n\n* * * * *\n\nCelia told me that Hayley might be playing in a one-day game at the University the following Sunday and I decided to go. I met with Celia and Hayley's parents; we had a lovely day. Hayley played well, I was impressed, she certainly knew how to bowl.\n\n* * * * *\n\nI'd bumped into a few old colleagues from Haskells, where Dee and I had met, and one of them invited me to do some work on a restructuring they were undertaking, in the department where Dee, Celia and I had worked.\n\nOn the last day that I was there, I was having coffee with Connie, the department head. \"My husband's been offered a new job. Actually, a three-year contract in Australia. My daughter lives there with her husband and my granddaughter, who was born a month ago. I've never met her yet and I can't wait. We're going to talk this weekend, but I'd love to go and now the reorganisation's finished, it's the right time.\"\n\n\"I'd jump at the chance if I were in your shoes, what an opportunity.\"\n\n\"I'm telling you this because, if we decide to go, it'll be quick. They'll need someone to step in until they can replace me. I thought that you might be prepared to do that. It would depend on how long they took to find someone.\"\n\n* * * * *\n\nConnie phoned me on Sunday evening to tell me that they were going. I told her that I could fill in for her if they wanted me, for a couple of months.\n\nIt was odd being back in the office that Dee and later Celia, had occupied even though it had been totally changed. It took me longer than I expected to settle in, but I started to enjoy it. I also started to get out and about again. One evening I decided to venture to Sisters, a club that catered, mainly for women, gay women. I wasn't looking to hook up, I just wanted company and maybe to dance again.\n\nThe place had changed, at least the internals had, the clientele looked no different. I chatted to a group of women a few years younger than me and danced with most of them. I went home that night feeling great.\n\nTwo weeks later I went back. This time I met two women at the bar, we got chatting and danced together, but they left early and I wasn't ready to leave so I sat at the bar. A voice startled me, a young woman, maybe twenty, was standing next to me. \"You look lost, are you okay?\"\n\n\"Yes, I'm fine thanks. The two who I was talking to just left, but I'm not done yet.\"\n\n\"I'll dance with you if you'd like. It's my first time here and I'm nervous. I'm Zoe.\"\n\n\"We all have to have a first time. I'm Amy. Come on then.\" I'd like to tell you that she was plain, but I'd be lying, she was a couple of inches smaller than me, with a curvaceous figure, long legs, emphasized by a short dress, that was also short up top and showed more than a little cleavage. She had a lovely oval face with huge blue eyes and waist-length red hair. As we danced, I realised that she was exceptionally beautiful, stunning. I'd not looked at anyone, except Dee, in almost thirty years who'd caused the feelings that I was experiencing right then.",
        "Zoe wasn't shy and during a slow number got very close and the feeling of her against my body turned me on, a lot. After two hours of dancing, only broken the need for refreshment, I wasn't thinking straight when I headed for the bathroom. I was coming out of the stall when Zoe barred my way, she pushed me back, closed the door and leaned into me, wrapping her arms around my neck. I was about to say something when she planted her lips on mine. All sensible thought flew out of the door and I kissed her back, it was sweet and sexy, full of desire in both of us. I was incredibly turned on and then stunned when she slipped her hand under my skirt and pushed the gusset of my knickers to one side to allow a finger to slide inside me. I was so stunned I said nothing and relaxed, thirty seconds later I screamed so loudly as I came that someone knocked on the door to check that I was okay.\n\nFive minutes later we were in a taxi heading for my home. Two minutes after the door was unlocked, we were naked in bed and Zoe's head was between my thighs. I'd lost all common sense as sexual desire took over and I relished the feelings that she caused with her fingers and tongue. After the second orgasm, she spun around, put her mouth back on my slit and planted hers on my mouth. The next half hour was filled with wild sexual abandon and all of the frustration of recent years flowed away. I have no idea how many times I came or how many times Zoe did.\n\nAs I lay back exhausted Zoe rolled onto her side and whilst stroking my belly said, \"That was fun.\"\n\n\"It was and we hardly know each other.\"\n\n\"I know, that's the best part. I've had a fantasy about an older woman for a while and now I know that it was even better than I'd hoped.\" I realised that what I'd just done was far from comfortable for me. Whilst Zoe was in the loo, I wondered what to do.\n\nThen she reappeared, fully dressed and came over to kiss me. \"Thanks, Amy, that was fun, but I need to go now, my boyfriend will be worried.\" I stood with my mouth open like a goldfish as she slipped out of the door.\n\nIt took me days to get my head around what I'd done. That type of behaviour was something I'd done once before, a very long time ago. I'd hated it then and vowed never to do it again. I hadn't even had enough to drink to blame alcohol, but damn, the sex had been insanely good.\n\n* * * * *\n\nI had no idea what Haskells' had done to find a replacement for Connie until one day the Managing Director came to see me. \"Amy, how are things?\"\n\n\"Great, things are going well. This is a good team. Have you found anyone yet? It would be useful to know so that I can plan my next job.\"\n\n\"We have found the person that we want. You. You've done great things and if you took the job permanently, I'm sure you'd improve things even more.\"\n\nMy reply, \"But, but ....\" sounded like a motorboat struggling to start. \"You want me to stay and do this?\"\n\nHe told me the package that they were offering. It wasn't that I needed the money, it was close to what I could earn from my freelance work, but with consistency. I asked for twenty-four hours to think it over, but by the time that I went to bed, I'd made up my mind.\n\nThe next day I took a framed picture of Dee into the office with me. After a meeting with the senior managers, at which I confirmed that I'd take the job, I headed back to my now permanent office. I reached into my briefcase to remove the photo and placing it on the corner of my new desk I asked, \"Well Dee, how does it feel to be back?\" I laughed out loud, who'd have thought.\n\nCricket\n\nI'd been working at home for most of the day and stopped to make tea. As I waited for the kettle to boil, I noticed that there were a lot of cars parking on the nearby recreation ground and realised that there must be a Bandit's cricket match that evening. After I finished my tea, I went to change into a pair of jeans, a sweater, comfy shoes and pulled on my jacket. I was about to leave, but turned and looked in the drawer by the door. I found my old baseball cap with the team's badge on it. I'd bought it years ago, maybe twenty-five years ago when Dee and I attended our first ever game just to see what it was all about. I pulled my ponytail through the gap at the back and smiled as I checked it out in the mirror. I'd fallen in love with cricket and had missed it after moving to the south coast.\n\nI treated myself to a couple of slices of pizza and a large gin and tonic before I settled into my seat. The first few balls had been bowled when a young girl of about fourteen, dragged a woman to the seats next to me saying, \"Come on Mum, the game's started.\"\n\nThe woman sat down heavily and turned to me, \"Sorry about that, she's desperate to see the game and I misjudged the time.\"\n\n\"It's okay you've only missed the first three balls and only one run's been scored,\" I replied.\n\nA couple of minutes later, one of the batsmen hit a very high ball that sailed over the boundary landing a few yards away from us to score a six. I leapt to my feet to cheer as the flames soared into the air from the nearby flame machines. The girl turned to her mum, \"Did you see that Mum, a six and it came our way.\"\n\nI turned to look at Mum and realised that she had little idea of what was happening. \"Is this your first game?\" I asked. It was then that I got a good look at her. She was a few inches smaller than me, five feet five or six, slim with shoulder-length dishwater blonde hair. She was in her early forties I guessed and rather attractive.\n\n\"Yes, it is although I've seen it on TV. This is an incredible atmosphere, as long as you know about the flame throwers, I wasn't expecting that and I nearly jumped out of my skin, sorry.\"\n\n\"It's okay. I remember my first time here; I was the same and my wife laughed at me because I was on my feet shouting and clapping like a lunatic. Does your daughter play? I'm Amy by the way.\"\n\n\"Nice to meet you. I'm Meredith and that's my daughter, Sarah. She's been playing at school and seems to be quite good. She's had a couple of coaching sessions.\"\n\nSarah was tall for her age and slim with long blonde hair. A good-looking young lady with huge enthusiasm. Meredith and I chatted away as the game progressed and I explained what was happening as things occurred. At one point she leaned towards me and whispered, \"I thought that they played with red cricket balls, these are white.\" I laughed loudly and drew a few odd looks from those sitting nearby, before explaining the difference between one day and T20, where they play with white balls and test match or county cricket, which is where they use the traditional red balls.\n\nBy the end of the home team's innings, I was thirsty again and went with Meredith and Sarah to the food stalls. Sarah went to buy some burgers and I suggested a proper drink for Meredith. Clutching two gins I waited for them at the stand entrance before we went back to our seats.\n\nSarah told me all about how she fell in love with cricket watching England Women play and wanted to join the local women's team. \"Have you heard of a local girl called Hayley Sharp? She plays for the women's team here and at University.\" I asked.\n\n\"Yeah, I know of her, she's famous because she's from near here.\"\n\n\"I know her parents and used to work with her grandmother. The first time I met her Dad was here and he wasn't much older than you.\"\n\n\"Wow, that's amazing. I'd love to be like her.\"\n\nMeredith and I kept chatting as the game progressed. We seemed to connect and watching Sarah's enthusiasm was intoxicating. Suddenly, I spotted two people walking along the path that separates the seats from the boundary. I turned to Meredith and said, \"Excuse me a minute, I need your daughter. I'll explain in a minute.\" I grabbed Sarah's hand and said, \"Come with me.\"\n\nI raced down the stairs and called out, \"Pauline.\" She heard me and turned back with her daughter. \"Amy, hi, nice to see you, who's this?\"\n\n\"I just met Sarah and her Mum. Sarah plays cricket, but this is her first professional game. She knows who Hayley is.\"\n\nIt was then that Sarah realised that the young woman standing next to Pauline was Hayley Sharp. She blushed as she said, \"You're a bit of a hero. Nice to meet you.\" The two of them spoke for a couple of minutes before Pauline and Hayley had to go.\n\nSarah was bursting with joy as she explained to her mother who she'd just met. Meredith looked close to tears as she said, \"That was kind of you and you've made my evening better than I expected.\"\n\nThe game was over and the Bandits had won. Meredith turned to me, \"Amy, thank you that was fun.\"\n\nI looked at Sarah and then back to her Mum before I spoke, \"You might change your mind in a minute because I bet Sarah would love to meet the team.\"\n\n\"What?\" Asked Sarah.\n\n\"Don't tell me you know them or something?\" Meredith asked.\n\n\"No, I don't, but they come out and sign autographs and pose for selfies with the youngsters. It's good fun, come on.\"\n\nSarah opened her eyes very wide as she pleaded, \"Muuuuum, pleeease.\" Meredith had little choice but to agree, anyone who could plead like that could get almost anything they wanted. It was quite endearing.\n\nSarah was in awe of the players and posed for a few pictures with them. Then I heard Hayley call my name. She jogged over and presented Sarah with a replica cap for the women's team. \"I saw you with the guys and thought that you might like this. You need to keep up your practice and maybe one day you'll be able to play here.\"\n\nSarah was yet again wide-eyed as she thanked Hayley and close to tears, she pulled the cap on.\n\nMeredith was parked on the recreation ground next to my home and so we walked in that direction together. The traffic was jammed up at the exit and I knew from previous events that it would take time to clear. \"This is where I live and that mess will take at least half an hour to sort out. Why don't you come up with me? I'll make us tea and you can use the loo if you need to.\"\n\nI suspect that if I'd offered to take Sarah to the moon she'd have agreed, she grabbed her mother's hand and followed me.\n\n\"Wow, this is lovely.\" Meredith was looking around my apartment, she was right it was nice, I was lucky.\n\n\"The toilets are along there, help yourself. I'll make tea.\" Sarah disappeared and Meredith stood by the window. When Sarah returned, she asked for a cold drink and I pointed her at the fridge telling her to help herself. I handed Meredith her mug of tea as she was looking at my photos.\n\n\"Is that your partner?\"\n\n\"Yes, that's Dee. We were together for twenty-six years; she went almost three years ago.\"\n\n\"The two of you made a striking looking couple. She was a bit older than you?\"\n\n\"I was twenty-two when I met her, she was forty-three. It took another two years before we became a couple.\"\n\n\"That's quite an age gap.\"\n\n\"It was, but it never seemed like it. I once said that if she'd been twenty years younger, she wouldn't have been the same woman that I fell in love with. The only downside was that she went ...\" I didn't finish the sentence, but Meredith knew what I'd meant.\n\n\"Sorry I didn't mean to upset you. I'd guess that's your parents.\"\n\n\"Yes, they were killed in a car accident when I was sixteen. I lived with my Aunt until I moved here, after university.\"\n\n\"That's sad. I still have my parents and my sister. I don't know what I'd do without them.\"\n\n\"What about Sarah's father?\"\n\nSarah jumped in quickly. \"He buggered off when I was seven, I've only seen him once since then and he wasn't very nice to me. My Mum loves me, she's performed miracles for the two of us.\"\n\nWe chatted for another twenty minutes before I checked on the car park exit from the window. \"You should be able to get out okay now, although I'm not chucking you out. I've loved meeting you both.\"\n\nSarah jumped up and hugged me. \"Thank you for everything, you're very kind and kept my Mum occupied, I thought she was going to hate it. Thanks for introducing me to Hayley, that was wonderful.\"\n\n\"You're both very welcome and maybe if your Mum doesn't want to go to another game, she could drop you off and I'd take you. Not sure your Mum would agree to that though.\"\n\n\"I don't think I'd be comfortable with that, but I enjoyed it and I'd go again.\"\n\n\"Next time you go, call me first and I can let you park in my visitor space, it'll save you the parking fee.\" I grabbed a card with my number on it and handed it to Sarah.\n\nAfter they'd left, I made more tea and sat thinking about the evening. The game had been great, but it'd been even more enjoyable because I got to share it. Meredith was good company and Sarah made me wonder about kids. They'd never featured in my plans and I hadn't missed them, but being in Sarah's company made me think that it was something that had passed me by.\n\nThe following day Meredith sent me a text message to thank me for the previous evening. I saved her number to my contacts.\n\n* * * * *\n\nI was driving home from work about ten days later and as I passed the cricket ground, I was reminded that there was a game on Saturday, actually, two games, the women's team played during the afternoon and the men's team in the early evening. When I got home, I sent Meredith a message to tell her about the game and invited her and Sarah to join me.\n\nTwo hours later Meredith called me to ask if, I was sure. \"Of course, it should be fun and I believe that Sarah's hero is playing.\"\n\n* * * * *\n\nMeredith parked her car next to mine and we walked to the ground. \"Thanks for letting me park, it saved me a few pounds. Having a teenage daughter is expensive and being a single mum, money's always a bit tight.\" I didn't say anything until she followed up with, \"That's unfair, Sarah isn't demanding and I know that some of her friends are always getting the latest things.\"\n\n\"I hope that my invite didn't cause you any difficulties.\"\n\n\"No, no don't be silly. But a tenner for parking makes a difference.\"\n\nSarah stood at the boundary edge watching the girl's teams warm up. I saw Hayley wave to her and before the team headed back to the changing room, she went over to speak to Sarah. Sarah was all excited that Hayley had remembered her.\n\nIn between innings, we went to get something to eat and Sarah asked if she could go into the shop where they sell kit and replica clothing. I saw her checking out a shirt the same as the players wore and when she checked the price tag, she winced. I don't know why, but I felt a huge wave of compassion and went over to her, \"Were you thinking of getting one?\"\n\n\"I'd love one, but no way could we afford that. It doesn't matter.\"\n\n\"Sarah, I like you and your Mum and I like your enthusiasm. I'd like to treat you.\"\n\n\"No, Amy. You can't that's not right.\"\n\nI struggled with her reply, although it didn't surprise me. She was a delightful, polite young lady who was a credit to her mother and I was a woman who had means and could easily afford to treat her. It would give us both pleasure but I knew that it could cause problems, so left it at that.\n\nWhen the women's game was over Hayley waved over to Sarah and she got to meet some of the other team members. Yet again she was buzzing when she came back to her seat but decided to go for a walk around the ground and after being told to take care, she left her mother and me alone.\n\nMeredith told me a little about her parents; her father had been an engineer and her mum had stayed at home until Meredith went to high school and then she found a job in a supermarket. She had an older sister who lived with her husband in Scotland. Meredith worked as a secretary in a law practice, it paid decent money but didn't provide many luxuries. The two of us seemed to get on well, we laughed at silly things and I enjoyed the time that I spent with her.\n\nSarah re-joined us for the start of the men's game during which we cheered and clapped as it progressed. Suddenly, the skies grew dark and the floodlighting took over from the daylight. Ten minutes later we felt the first drops of rain, two minutes later we dashed for cover, the heavens had opened with a vengeance. It'd grown very cold; we were wet and dozens of us were packed under the grandstand to avoid the worst of the rain. \"I've got an idea, why don't we make a run for it to my place. We can change into dry clothes and keep our eye on the resumption of play. If they start again, we should have ten minutes to get back.\"\n\nSarah was shivering and nodded. We were soaked by the time we reached my apartment. \"You two use the bathroom in there and have a shower to warm up. There are towels and I'll find some stuff for you to wear, but it might not be very fashionable.\"\n\nMeredith looked at me, \"Are you sure about this?\"\n\n\"I'm offering you the chance to get warm and dry, then a hot drink, not to move in.\"\n\nI found some leggings, underwear and sweatshirts for the two of them and after a quick shower myself, I filled the kettle for tea. I laughed when they appeared, Meredith in clothes that were too big for her and Sarah in things she would never wear by choice. \"Tea for you both?\" They nodded. \"Sarah, open my laptop, it's on the table there.\" I told her the code and suggested, \"Search for the Cricinfo website and it'll warn us if there's going to be an inspection and when they're going to resume the game.\"\n\nSarah looked surprised and I asked her what was wrong. \"You barely know Mum and me, yet you bring us here, you're very kind and just let me use your laptop. I've never met anyone like you.\"\n\nI smiled, thinking 'what a nice girl' \"Thank you, I've never met anyone like you either. I don't know anything about teenage girls really, but I remember what I was like and assume that you're not that different. I love having someone to share things with and I've been alone for too long. I'm enjoying sharing things with you and your Mum. I don't want anything from you, as long as you don't abuse my trust.\"\n\nSarah stood up and walked over to hug me. \"Thank you. We were lucky to meet you.\"\n\nThere was no sign of the rain letting up and we quickly concluded that the game was over. Meredith looked at Sarah and said, \"I think we should be going.\" She turned to me, \"I'll get these things laundered and bring them back to you in a couple of days.\"\n\n\"It's okay, hang on to them until the next game.\" Suddenly I had an idea, \"You could spend the night if you'd like.\" I knew that I would enjoy it and Sarah looked eager, but Meredith was reluctant.\n\n\"I really don't want to impose anymore and you've been generous already, so thank you, but we'll head off.\"\n\n\"That's fine. Check the fixtures and give me a call. I'll probably be at all of the home games unless I have to travel and I'd love your company.\"\n\nThe minute they'd left I felt alone again. I hoped that we could be friends, but we'd have to wait and see how things worked out.\n\n* * * * *\n\nMeredith and Sarah attended the next four games and I loved having their company. Sarah made me laugh a lot and I enjoyed chatting with her Mum. Meredith and I also spoke on the telephone a few times in between games.\n\nOne evening Sarah called me herself, full of excitement and it took me a moment or two to calm her down. \"Sorry Amy, I'm crazy excited. I've been invited to take part in a week-long coaching session, at the ground. My Coach recommended me and one of the Bandits scouts saw my last game. They want to work on my bowling mainly, but they'll also do some work on batting technique.\"\n\nIt took a while before she'd told me the whole story and I suggested that she could call round after her sessions if she wanted to.\n\nMeredith came over twice that week whilst Sarah was training. It was the first time that we'd been alone together and each time she left; I felt a hole because I'd enjoyed being with her.\n\n* * * * *\n\nI was tired, it had been a long difficult week and then going to watch the cricket this evening, although I'd enjoyed it, had sapped the last of my energy reserves. I took a mug of tea to bed intending to read for a few minutes. I cradled the mug and sat with my feet drawn up so that I could balance the book against my thighs. My mind drifted back to earlier in the evening. It had been joyful watching Sarah cheer and whoop, she was even dafter than I was, truly infectious and spending time with her was a real pleasure. Meredith and I had chatted throughout the game and I was sorry when it concluded because the two of them left to go home.",
        "I thought about Meredith. She was quite beautiful, although she didn't make the most of herself, seemingly almost afraid to let her attractiveness show through. Since we'd first met, she'd come out of her shell, she was incredibly funny and articulate. I closed my eyes as I thought about the graceful lines of her neck and ... My eyes came open and I started to tremble. It had hit me; I wanted her sexually, in my bed, I wanted to kiss her, to hold her. Dear God, I was falling for her.\n\nShe was, as far as I knew, straight. I'd never made any secret of the fact that I had been married to another woman, but she hadn't commented upon that. I turned off the light and rolled over. I liked her and we could become good friends, something that would be welcome.\n\n* * * * *\n\nThe cricket season was largely over and that meant no more evenings spent in Sarah and Meredith's company. But I wanted to continue spending time with Meredith so I invited her out to dinner and on another evening, we went to see a stage show.\n\nShe also came over a couple of times when Sarah was spending the evening with her friends. I loved being with her, she was great to have as a friend, but there was something more for me.\n\n* * * * *\n\nOne night after dinner we were listening to music and lounging on the couch when Meredith said, \"Amy, can I ask you something?\"\n\n\"Yes, of course, what is it?\"\n\n\"I've never been with a woman before, but I think I'm falling for you and I'm scared.\"\n\nIf Santa Claus had knocked on the door right then, I doubt if I'd have been more surprised. \"Wow, that's come as a shock.\"\n\n\"Do you find me attractive?\" She asked with concern etched across her face.\n\n\"I do. You are very attractive and I confess, if you were gay, I'd be interested, but as far as I know, you're not.\"\n\nShe looked crestfallen. \"This isn't easy for me to say, I've wrestled with this for weeks, some of it for a couple of years actually.\" She paused to consider her next words, \"Sex was never that good for me and I assumed that, either that's how it was meant to be or that there was something wrong with me. A while ago, over a year ago, I read a book about two women in love, then there was a film on TV and it was followed by two TV series. It seemed that lesbian love was everywhere and it got me thinking, maybe that was the problem. I started looking at women differently. The thing is, it terrified me; I didn't think I could ever be brave enough to try? What if I didn't like it? How would I meet a like-minded person who found me attractive? What would Sarah think? What would my parents think? What did I think?\"\n\n\"Have you found answers to any of those questions?\" I asked.\n\n\"No, not really.\" She stopped for a minute or so. \"Then I bumped into you at the cricket. It took a while and I started to wonder. I think that you're gorgeous; actually, I can't believe you're nearly ten years older than me. You never made any secret of your inclination; you never made a move on me. I thought that lesbians were predatory, at least that was a rumour I've read.\"\n\n\"Okay. But, what about Sarah and your parents?\"\n\n\"I think, I hope that they would be okay after the shock wore off. I've never done anything that bold before. They love me and I'm sure they'd like you, but that's all hypothetical, isn't it?\"\n\nI ignored her question, \"And Sarah?\"\n\n\"About ten days ago she asked me if I fancied you. It left me gasping for breath, I'd asked myself the same question a couple of weeks earlier and it felt as if she was reading my mind. When I said that I liked you and found you attractive she laughed.\"\n\n\"She laughed?\" That had me puzzled.\n\n\"She told me that she'd seen me looking at you and that she'd once caught you staring at me. She also said that I should kiss you and see what happened. When I protested, told her that she was crazy she blew me away.\"\n\n\"Okay, what did she say?\"\n\n\"She told me that she'd also wondered about lesbian love and sex and had used the computer to find out more. I nearly blew a gasket; I was annoyed until she laughed again and told me that she'd seen my search history and found out that I'd been doing the same research. She thinks you're wonderful and would be happy for us to be together.\"\n\nI sat thinking and I could see that the wait was killing her. \"I hate the idea of being a straight-girls experiment, but there has to be a first time for everyone. I do like you and I've thought about you and me, but there was Sarah and I always thought that would be an issue, so I decided that we'd be friends. The fact that Sarah seems to be on board has removed that obstacle.\" I doubted if Meredith was brave enough to do anything on her own initiative and that her courage had been exhausted, so I moved towards her. I cupped her cheek, \"I've thought about you sexually, but I'm not a predator so ...\"\n\nShe looked up at me and seemed to have shrunk, \"Could you be a bit predatory? Please.\"\n\nI leaned in and kissed her. For the first time in a long time, I felt something that I'd missed, not only a feeling of wonder, of happiness and a yearning for more, but the possibility of love and not a one-off romp. Meredith made some cute noises that suggested she was enjoying her first female to female encounter. I moved my hand to her breast, there was a momentary flinch before she pushed back against my hand forcing my fingers to enclose her. She kissed me back with enthusiasm. Then she pulled back all wide-eyed and grinning.\n\n\"I don't know what just happened, but I'm not scared, I want more, I want you, please show me.\"\n\n\"Are you sure?\"\n\nShe grabbed my hand and asked, \"Bedroom? Now before I lose the courage I've been trying to find for a while.\"\n\nThis was something that I hadn't expected, but the grin was threatening to make my face sore. Meredith raced towards the bedroom, but as soon as she got there she slowed and seemed to hesitate.\n\n\"Is something wrong?\" I asked.\n\n\"No, but, well I'm nervous. Please just do things, anything, god I'm shaking and I feel so sexually turned on.\"\n\nI grabbed her, hugging her to me as we kissed. It was thrilling, she wasn't holding back and I felt good, better than I had for a very long time. We removed our clothes one item at a time and at the same time watching each other. The lights were dim and I'm sure that helped her, but I was itching to see her naked. We stood facing each other and Meredith looked hesitant so I took her hand and pulled her onto the bed. As I leaned in to kiss her, I whispered, \"Let me lead, but stop me at any time. Do not do anything you feel uncomfortable with, okay?\"\n\nShe nodded back, kissed me and took my breasts in her hands. She looked up smiling, \"Let me ...\" She didn't finish and bent to take a nipple in her mouth. Excitement coursed through my body, something that I'd only ever felt with one other person. I heard her mutter, \"I can't believe how good this feels, how right.\" Neither could I.\n\nHer hand slid down my thigh and came up to my slit, there was a pause and suddenly a finger penetrated me. I came thirty seconds later. Meredith stopped and looked at me wide-eyed, \"I just made another woman come.\" She grinned, \"Suddenly after all these years ...\" I kissed her to shut her up. Then I slid a finger inside her and I thought she'd been shocked, but she squealed, \"Dear lord, just like that, oh fuck.\" She looked up again, \"Sorry for the language.\"\n\n\"I don't care about that, but I am going to fuck you and probably make you swear again.\" She came as if she'd never done so before and sagged back into the bed. \"Are you okay?\"\n\n\"Never in my life have I ever felt anything like that. I'd like to try that again later.\"\n\nI laughed so loud she looked stunned. \"You have things to learn. I suspect that later will be in about three or four minutes.\"\n\n\"Three or four minutes until what?\"\n\n\"Until you come again.\" I slid between her legs and licked her slit from bottom to top causing her to sigh like a tyre with a slow puncture. I licked and licked as she squirmed, then I took her clit between my lips and closed them causing more bad language as she went rigid, then softened as if she'd melted. The next time I made her come she slapped me on the side of the head, it was hard enough to know that she wanted me to stop.\n\nShe muttered, \"Sorry,\" before sighing and throwing herself back against the pillow.\n\nI rolled onto my side leaving my arm across Meredith's belly. She was on her back and turned her head towards me, her hair in a state of disarray and damp with sweat. I could see her trying to form words, \"That was, that was something wonderful. It was tender, gentle and caring and I haven't ever come like that. Come to think of it, I may have come more times tonight than I ever did in any single week before. Is it you? Are you a witch or is that how it always is?\"\n\n\"A witch?\" I laughed. \"It's not always like that, sometimes it's just really good, sometimes it's better. Depends on the circumstances and mood I guess.\"\n\n\"Better? That may kill me.\"\n\n\"I've had encounters that are satisfying, but it's always better when there is a connection, some feeling of love.\"\n\n\"I hate to ask but was it ... with Dee?\"\n\n\"Yes, it was.\" I paused, \"But I don't want to compare and, in any case, it changed as we got older. She's not here, you are and you're amazing. I hope that this isn't the only time for us.\"\n\n\"So do I.\"\n\n\"I think I need to tell you something, to be honest. I've had a lot of thoughts about you and I've wanted you here in this bed several times, but ...\"\n\n\"I've thought about you as well. I wanted to know what it would be like to lick your pussy. It made me nervous. I liked it a great deal and I want to do it again, not this minute, but maybe later and maybe tomorrow and ....\"\n\n\"I think I'd like that too.\"\n\nWe dozed for about an hour and then there was some more crazy lust. I fell asleep with my head on Meredith's thigh.\n\n* * * * *\n\nMeredith heard her phone ringing in the living room and jumped up, \"That's Sarah, I need to get this in case something's wrong.\" I grabbed my robe and followed her, heading for the kitchen, when I heard one side of the conversation.\n\n\"... with Amy.\"\n\n\"No, we didn't go out.\"\n\n\"We've been talking and stuff.\"\n\n\"Sarah, mind your business!\"\n\nWhatever Sarah said next, I didn't hear, but Meredith replied, \"Yes, we did and yes, it was.\" She'd turned so red that she could've found work as a traffic light, then she handed me the phone.\n\n\"Hello, Sarah. Your Mum's okay.\"\n\n\"I'm guessing that you two have been ... well, I'm pleased. My Mum cares for you a lot and so do I. Have a nice time.\"\n\nI was flabbergasted and Meredith looked embarrassed. \"She knew?\" I asked.\n\n\"I didn't tell her, but I think she knew. She's smart.\"\n\n\"She is. I'm not sure that it'll be easy to look at her the next time we meet.\"\n\n\"Yes, it will. Now should we take this tea back to bed? We have plenty of time and there are a few things that I learned in my research.\"\n\nI smiled as I followed her back to bed. Meredith knew that I was watching her ass and she wiggled it a little, it made my smile even wider. We sat side by side cross-legged, I was surprised that she felt so comfortable being naked.\n\n\"I like when you look at me like that, it makes me feel special. I've never really felt special before. I can't believe that I'm sitting here naked in the daylight with you and feel okay about it.\"\n\n\"I'm surprised that I feel okay about it as well. You are very attractive and special.\" I paused for a moment, \"A couple of days ago I was thinking about you, how lovely you were, but it occurred to me that you dressed almost as if you were trying to hide yourself a little.\"\n\nMeredith blushed, \"Thank you. You always seem so ... together, smart even when you're casual. That sounds daft, but you know what I mean. I'd like to be more confident like you.\"\n\n\"I think you do yourself an injustice. What you did last night must have taken huge courage.\"\n\n\"It did, but I'm glad I did it. I feel so happy this morning.\" She lowered her head but looked up at me through big hooded eyes. \"I've never felt this turned on, never felt so sexually needy and I'm sure that I've left a damp patch on the sheets.\"\n\nI laughed. \"Why don't we see if we can wreck the sheets, they'll wash you know.\" I leaned forward and took her mug placing them both on the bedside table, as I turned back to her, she grabbed me and pulled me down on top of her.\n\n\"I want to make you come, then I want you to make me come.\" Without a pause, she slid down and took a nipple in her mouth and found my slit with a couple of fingers. She was forceful and clearly wanted to please me. I was about to come when she moved further down and licked me, probing with her tongue and sucking on my clit. I screamed as I came and Meredith kept going with determination. After I came a couple of times, she came up to lay beside me. As she kissed me, I tasted myself for the first time in a few years.\n\n\"Thank you, that was wonderful. I have an idea. I want to please you, but I want you to be in control. You may find it hard to start with but trust me, I know what I'm doing.\"\n\n\"You won't hurt me, will you?\"\n\n\"No.\" I laughed, \"And you won't hurt me, despite what you might think.\" She looked puzzled. \"I'll lay back, you get on your knees astride me.\" Meredith manoeuvred so that she was on my lower chest. \"Now, work your way up here and lower yourself onto my lips.\n\nShe looked shocked. \"But I'll suffocate you.\"\n\n\"No, you won't, do as I ask and you'll find yourself in control, make use of me.\"\n\nShe was tentative to start with until she neared her orgasm. Then she clamped her thighs around my head, after a moment she looked down concerned. I manager to whisper, \"I'm fine, go for it.\" After about thirty seconds she forgot all about me and used me to satisfy herself. I loved this and always had, I wasn't in control and yet somehow, I was, it was odd, but I enjoyed doing this and thought that it might break down Meredith's barriers a little.\n\nWhen she woke up an hour later, she looked at me and then a smile broke out, \"Jesus, that was something else. Are you really, okay?\"\n\n\"Yes, more than okay. I like that and I'd like to do that again with you, plenty of times.\"\n\n\"I had no idea, no idea at all. Thank you, you've opened my eyes,\" she stopped speaking, then laughed heartily and said, \"and I've opened my legs.\"\n\nThe bedding was covered in sweat and other bodily fluids so we stripped it and I went to put it in the machine. Meredith was in the shower and when I asked if she was okay, she replied, \"Fine, I love your shower it's huge.\"\n\n\"Big enough for two?\" I replied. The door opened and she smiled. There was no sex in the shower, which surprised me a little, but we washed each other gently and it was just as satisfying. Maybe we could try shower sex another day.\n\nI was sorry when Meredith had to leave to collect Sarah, but after a kiss and a hug, I said, \"Take a day or so to reflect. Reflect without letting your randiness get in the way.\" She grinned and was smiling as she drove off. I walked back upstairs smiling as well. I had a new girlfriend and it made me happy.\n\n* * * * *\n\nThe following Thursday afternoon I got a message from Sarah asking if I'd be at home that evening. I had no idea what she had planned and was surprised to find her sitting on the bench outside my apartment block when I arrived. I was more surprised that she was alone.\n\nShe followed me inside and when I had my coat off, I turned to her, \"To what do I owe the pleasure of your company?\"\n\nShe looked hesitant before gathering her courage, \"I'm pleased that you and Mum are together. She says that she loves you and seems happy, for the first time in ages. But I need to know how you feel about her. I know that you could tell me to mind my own business, but it is my business and I need to know.\"\n\n\"I really like you both, very much. I fancied your Mum, but as far as I knew she wasn't into women, so I was content with being friends. I was very happy when she told me how she felt. I do like her and hope that we can be a couple. But the rest has to be between me and her.\"\n\n\"Okay, thanks. I needed to ask you that face to face, without Mum knowing. I had to know for myself and look you in the eye. I really like you and I hope it works. Now, I need to get home before she goes doolally worrying.\"\n\n\"She doesn't know you're here then?\"\n\n\"No, and I'd like you not to tell her, please.\"\n\n\"Okay, this once, but I don't plan on keeping secrets from her. I'll give you a lift and drop you near the house.\"\n\n* * * * *\n\nWe had a few more evenings together over the next couple of weeks, not all of them ended in bed, but a few did and we were good together. One evening ended on the coffee table, with Meredith's legs as wide as they could go and me between them eating her. When she pulled down her dress, she thanked me. \"I've never done that and I loved it, but sadly I do have to go.\"\n\n\"It's okay, I understand. Have you ever gone home without your knickers before?\"\n\n\"No.\" She giggled.\n\n\"Then tonight will be another first, because I'm keeping these, for now at least.\"\n\n\"Maybe you could wash them and wear them one day.\" She had a huge grin.\n\n\"I'll be wearing them tomorrow, unwashed.\"\n\nShe laughed, \"And I thought it was me who just me that behaved like a slut.\"\n\nMeeting the parents\n\n\"Where's Sarah tonight?\"\n\n\"She's having a sleepover with Olivia and Karen. I seem to be much more agreeable to her requests because it means that I can be with you.\"\n\n\"Keep agreeing, I like you here too. I like Sarah being here, I think she's wonderful and a credit to you.\"\n\n\"Thank you. She likes you a lot. But then if she didn't, I wouldn't be here, she's, my priority.\"\n\n\"Quite right, she should be.\"\n\n\"Although I'm not happy with her right now, she's ...\" Meredith went quiet, obviously troubled.\n\n\"What's she done?\"\n\n\"She told my Mum and Dad about you. About us.\"\n\n\"Bloody hell, what did they say?\"\n\n\"They didn't believe it at first, actually they didn't understand. When I tried to explain I got stuck and my Dad said, 'Do you think I'm an idiot? I know what a lesbian is.' Then he asked if I was in love with you and when I said yes, his next question was to ask if we're sleeping together and he meant having sex. That made me cringe.\"\n\n\"What was his reaction?\"\n\n\"At least you've found someone. I need to meet her, to check her out.' It left me speechless.\"\n\n\"Wow, I don't know what to say.\"\n\n\"Mums asked us for lunch on Sunday. You don't have to go ...\"\n\n\"I'll go,\" I said without having to think. I was a decisive woman normally and this didn't surprise me. If we were going to be a couple, this had to happen and there was no point in shirking it.\n\n\"Really?\"\n\n\"I want to meet the people who raised you. They're important to you and therefore to me as well.\"\n\n\"Amy you're amazing, thanks. Any chance of a kiss and cuddle?\"\n\n\"You can have far more than that.\"\n\n* * * * *\n\nA couple of days later Meredith phoned me as she did most evenings. \"I called my sister, Viv, tonight. I told her about you.\"\n\n\"What did she say?\"\n\n\"Speechless, she went dead quiet and I actually thought she'd hung up on me. She asked me about you, hundreds of questions, before she asked me about sex, that was awkward.\"\n\n\"How did you leave it?\"\n\n\"Viv asked to speak to Sarah. She'd been in her room and didn't know who I was talking to. When I called her, Sarah took the phone and walked away with it. After she handed it back to me, my sister said that she was happy for me, but she wants to meet you for an interrogation.\"\n\n\"Well, I suppose that will have to happen at some point. What did Sarah say?\"\n\n\"I don't know, she won't tell me. Told me it was none of my business.\"\n\nI laughed. \"I like your daughter, she's a very smart girl.\"\n\n* * * * *",
        "I confess that I was nervous as I drove to collect Meredith and Sarah, but my nerves were jangling by the time we got close to her parents' home. I collected the bunch of flowers from the back seat just as Sarah got out of the car, she grabbed my other hand and dragged me to the door. Opening it, she pulled me in behind her shouting, \"Gran we're here.\"\n\nWe came to a dead stop in front of her grandparents. \"Gran, Grandpa, this is Mum's girlfriend Amy. She's nice.\"\n\n\"It's nice to meet you both and I'm sure this is a bit of a shock for you. I don't mind admitting that I'm terrified. I brought some flowers.\"\n\nMeredith's Mum took the flowers with a smile. \"Thank you, that's very kind, I'll pop them in the kitchen. Go through with Eric.\n\nEric, Meredith's father, said, \"This way, have a seat.\" As we sat down, he smiled before going on, \"Now, here comes the third degree, maybe an interrogation.\" He saw the look on my face and said, \"It's okay. I'm joking, at least a little.\"\n\nEric was a lovely man, a little puzzled about my relationship with his daughter, but he was kind. \"Sarah gave you a good reference and if she likes you then things must be okay. She's a good girl.\"\n\n\"I'd agree with you, Sarah's amazing and that must be because of the way you and her mum have influenced her.\"\n\nThings were a bit awkward to start with, but they eased and by the time we left four hours later we'd had a good time. I got a hug from her Mum who whispered, \"Take care of the two of them and be kind or I'll come after you.\"\n\nOn the way back to drop the two of them off, I asked Sarah what she'd said to her Aunt. \"Jeez, you two never give up, that's between her and me, but I said nice things.\"\n\nChristmas\n\n\"What does Sarah want for Christmas?\"\n\n\"The usual, some clothes, but she's asked for a new laptop. I feel that she doesn't get the things I'd like to give her. I don't know anything about computers, could you see if there's something suitable? I don't have much spare money.\"\n\n\"I can help. Why don't we give a laptop from the two of us?\"\n\n\"I can't ask you to spend money like that on her.\n\n\"You didn't, I offered. Look, you and I are a thing and she's your daughter, that means she and I are ... something. You're her mother and I don't want to win her over, but I'd like to help out. It would make me happy too.\"\n\nMeredith smiled at me, \"Okay, but rules. I'll give you \u00a3400 and you get something, but don't tell me how much and don't go wild. Surely you should be able to get something decent for \u00a3600?\"\n\n\"Make it \u00a3300 and it's a deal.\" I knew exactly what I was going to order and how much I'd be spending, at least twice \u00a3600, but then she didn't want to know.\n\n* * * * *\n\nOne night, in a moment of wild passion I'd said that I wanted to make my girlfriend Merry and we both laughed. I asked if I could call her that and she said no. That is until I had her on the edge of orgasm for the third time, when I asked her again and she screamed, \"Any bloody thing, just let me come.\" So, from time to time I often called her Merry, she hated it and always made her cringe.\n\nWe lay in bed exhausted and holding each other tightly. \"I'd like you to come to lunch on Christmas Day. I'll be having my folks over as well.\"\n\n\"I'd love that. I was going to ask if you and Sarah wanted to stay here for a few days.\"\n\n\"I always see my folks.\" She said as a matter of fact.\n\n\"Why don't we have them over here? I'm sure they'd like to see where you and Sarah spend some time. There's plenty of room and they could stay the night. I could get your Dad drunk.\"\n\n\"Are you serious?\"\n\n\"Of course. It should be fun.\"\n\n* * * * *\n\nMeredith and Sarah arrived late in the afternoon on Christmas Eve. I'd arranged for lots of finger food; nibbles, bread, cheese and, of course, some small desserts, including a cheesecake, a favourite of mine and Sarah. We sat around the lounge with some Christmas music and chatted as we ate. I slipped Sarah some wine and she topped her glass up. Meredith got a little angry when she realised that Sarah was feeling the effects, but then started to laugh. Sarah had let her inhibitions go completely and was very amusing. She told us about gossip amongst her school friends and, at one point, suggested that we should have an early night. \"You should go and do that stuff you do, but keep the noise down.\" I gasped at what she'd said, but didn't respond as she made her way unsteadily towards the bedroom.\n\nMeredith helped me to tidy up, then we sat and had another drink chatting before I suggested that it was time for bed and I added, \"Santa won't come if we're still awake.\"\n\nShe giggled and hugged me. I got a little kiss as she whispered, \"Remember, my daughter, says we need to keep the noise down.\"\n\n\"She's funny normally, but after two glasses of wine, it's hilarious. I doubt if she'd have said that without the wine.\"\n\nMeredith looked serious, \"I hope not.\"\n\nWe lay facing each other, naked, kissing whilst gently stroking each other. I felt Meredith's hand snaking down my torso before moving towards my crotch. She looked at me as if she wanted my permission before a finger found its way between my outer lips and inside me. It was something that I'd felt dozens of times, hundreds of times, but on this occasion, it felt special for some reason and I closed my eyes to enjoy those feelings. I wanted something else and repeated what she'd done so there we were face to face with a finger buried deep inside our lover and we both sighed until we came and suddenly Meredith went rigid and that caused her to push hard against me and I came letting go a yelp of delight. I bit my lip hoping that Sarah hadn't heard me disobey her.\n\n* * * * *\n\nMeredith was in the shower when Sarah appeared still in her pyjamas. She hugged me and sat down clasping her coffee mug. She looked up sheepishly and asked, \"Please tell me I didn't do anything stupid?\"\n\n\"First time you've had a drink? I asked.\n\n\"No, but only ever with friends and not as much. I didn't know that wine had such an effect, I mean it was only two glasses.\"\n\n\"You were funny, but I'm not sure that your mother liked your suggestions about what we should do in bed.\"\n\n\"Oh no, what did I say?\" She had a look of horror on her face.\n\n\"You seem to think that your mother is some sort of nymphomaniac.\"\n\n\"Oh, God.\" She went pale.\n\n\"I was kidding, but you did tell us to keep the noise down. She wasn't pleased, but even she had to accept that there was some truth in what you'd said.\"\n\nMeredith breezed in looking gorgeous. She poured her coffee and then looked at her daughter. \"I followed through on your suggestion, but if you ever mention my sex life again, I'll ground you for a month. Understand?\" Sarah had the good grace to look sheepish.\n\nI'd already done a lot of preparation for our Christmas lunch and Sarah offered to help me with the rest so that Meredith could go and collect her parents. The two of us worked together singing along to the Christmas CD I played, laughing as we did so. I had a large roast joint in the oven, the rest was ready to be turned on, so Sarah and I adjourned to the sofa. \"This is kind of you, Amy. I'm so glad that we met you. Mum likes you a lot and I've never seen her so happy. I like you too. You treat me like a grown-up, so thanks.\"\n\n\"I only treat you like that because I don't know how to treat a teenager. I like you and your Mum; I love your Mum and I'm happy. I didn't think that it would ever be like this again, after Dee.\"\n\nWe didn't get any further with that conversation because Meredith arrived back with her parents. Sarah went to hug them both and they appeared at the lounge door with looks of surprise on their faces. \"Hi, welcome to my home. Feel free to explore and relax. Can I get you a drink?\"\n\nCathy asked for tea and followed me to the kitchen area. \"It smells good. Your home is beautiful. Thank you for inviting us.\"\n\n\"Cathy, I'm lucky really. Circumstances have allowed me to have this home and a good life. I'm not rich, but I don't worry have to worry about money. The thing is I was lonely until I met your daughter and now, I'm getting pleasure from spending time with her and Sarah. I'm also delighted that you're both here.\"\n\nMeredith helped me to serve the food and we tucked in. I'd been a bit apprehensive because it was a while since I'd cooked for more than three people and getting the timing right for the three courses, we were having was something unusual for me. I served coffee in the lounge and noticed that no one had touched the mince pies, but then we'd just eaten a feast. The dishwasher was running so I went to sit down before realising that I should offer some drinks. When Eric saw me pouring myself a malt whisky, he changed his mind about tea and asked for the same.\n\n\"That's nice, I couldn't read the label, just Glen something.\" He said after his first sip.\n\n\"It's from a distillery called Glengoyne, not far from Glasgow, I've been there. It's unique because the distillery is in the highlands, but the imaginary line that divides the highlands from the lowlands runs along the road outside the distillery. The warehouses where the whisky is matured are on the opposite side of the road and therefore in the lowlands.\"\n\n\"This is nice. I was at a distillery once, a very long time ago, Tomintoul it was. Haven't had one of those for a few years.\"\n\n\"Neither have I. I'll leave the bottle on the table here, help yourself.\"\n\nWe exchanged gifts, the usual things, gloves, scarves, handbags. Sarah had lots of clothes and bounced with pleasure. \"Thank you all so much, but being all together like this is the best gift.\"\n\n\"Actually, your Mum and I have something else for you and I suspect you might change your mind about that statement.\"\n\nMeredith produced a box from behind the TV and Sarah stared at it in awe. Her grandparents simply looked on. When Sarah tore off the wrapping paper, she saw the name of the computer company and paled, looking up at the two of us. She looked back down and flipped open the lid revealing the thing itself. The letters on the lid gave away the type of machine and she stared at me, \"Amy, is this the same as yours?\"\n\n\"Not quite, but it's very similar. Like it?\"\n\n\"Gosh, of course, I like it, but it's too much you ....\"\n\n\"Your Mum and I decided to chip in together and buy you the best.\"\n\n\"Thank you, thank you both. Mum, I'm proud of you.\"\n\n\"Why?\" Meredith asked looking puzzled.\n\n\"I know you, to have allowed Amy to help with this must have been difficult for you. Thank you, both.\" We got hugs and my heart filled with joy. I loved Meredith a great deal, but I realised just how much I loved this young lady, obviously not in the same way, but she made me very happy.\n\nEric put his hand on my knee and asked, \"I'm going to guess from Sarah's reaction that the gift is special and rather expensive?\"\n\n\"It's very like the laptop that I use for work, not quite the same features, but she doesn't need all of that. I like her and she doesn't get all the treats some of her pals do, she impresses me with how grounded she is.\"\n\n\"Thank you for today and being in their lives.\"\n\n\"Eric, this is a nice family to be with. Now, shall I top up your glass?\"\n\nI was coming out of the bedroom when Sarah intercepted me and wrapped me in her arms. \"Thanks, Amy, the laptop is amazing. You're really generous. Will you help me to set it up tomorrow?\"\n\n\"Of course, I'll enjoy that.\" I got another hug.\n\nWe chatted all evening, talking about our lives. Eric entertained us with his stories about his work as an engineer. Some of the things he made were to very exacting standards and my respect for him grew. Because he'd made a dent in my whisky, he was a bit more liberated and very funny. Cathy talked about Meredith growing up and her pride at how she'd coped.\n\nCathy looked at me again, \"You told us about your parents and growing up, but you've never told Eric and me much about your wife.\"\n\n\"Mum, that's still a bit raw.\" Meredith took my hand and I gave it a gentle squeeze.\n\n\"It might be raw, but it might help me and it won't do you any harm to know about the woman I loved and shared my life with,\" I spoke for about twenty minutes and by the time I was done most of us were using tissues.\n\n\"I wish she was still here .... but she isn't and I still have a life to live. I was very lucky to love her and now I've been lucky again to find Meredith. She's very different, but I've fallen in love with her. Very much in love and what's even more special is that I've fallen in love with Sarah too.\"\n\nCathy smiled before she asked, \"You said that Dee took up painting after she retired. Do you still have any of her work?\"\n\nI pointed to the scene that hung on the wall facing the sofas. \"That's my favourite.\"\n\nMeredith stood up and walked towards it. \"I never knew that, you never mentioned it. I think this is quite beautiful, it evokes memories of the seaside. She was very talented.\"\n\n\"Mer's right, that's lovely, I noticed it when we arrived,\" Cathy added.\n\n\"Now, enough about what's in the past. Anyone for a hot drink and a mince pie?\"\n\nIt wasn't late when Cathy and Eric went to bed. Sarah was holed up on the futon in the small room chatting on the phone to her pals. Meredith and I sat on the sofa with a drink. \"I think that went okay. I enjoyed it, a nice day.\"\n\n\"Amy, the food was great and there was plenty of it. Drink flowed all day, the conversation was fun, the gifts were great, you did well. My folks like you and Sarah may be proposing to you soon.\"\n\n\"She wants to marry me?\" That sounded crazy.\n\n\"No, she wants me to marry you. It made me laugh, I love you, but it's still early. I'm still nervous about being in love with another woman.\"\n\n\"I worry about my feelings for Dee, they're still there, like a spectre hanging over me.\"\n\nThere were too many people in the house for wild sex, but not for lots of kissing and I fell asleep in Meredith's arms. I woke with a start, suddenly wide awake. I slipped out of bed, into a robe and wandered around the house checking that nothing was wrong. Something drew me to the photos and I stood looking at them. As I did so I thought that I felt something, it made me jump and I turned around. Nothing, I was alone. I felt something that seemed to be inside me. Suddenly, I got this overwhelming feeling that I should move on, that I could leave Dee behind, that Meredith was good for me. I struggled and wondered if I was going insane. When I got back to bed, I lay awake pondering what had happened.\n\nThe following morning, we had a nice breakfast before Meredith gathered Cathy and Eric's things together and we all hugged as they thanked me for my hospitality. Whilst Meredith was taking them home, Sarah and I tidied up, washed the dishes, before making fresh coffee.\n\nWe sat together to set up her laptop. \"I've got lots of music on mine,\" I told her, \"and I keep it backed up onto this hard drive. If you plug it in you can go through it and download what you want.\"\n\n\"Amy, that's amazing, thank you. I'm going to copy most of your stuff if you don't mind.\"\n\n\"Ah, but there's a price.\" Sarah looked puzzled, \"You need to let me go through what you have. I might like some of it.\"\n\n\"Sure, I don't know how much you'll like, but I'll bring mine over next time I come.\"\n\n\"You also need to back things up, the best way is a cloud service. I could sign you up to mine if you'd like.\"\n\n\"That would be great. I love you, Amy, you're like my other Mum.\"\n\nI had no idea how to respond to that.\n\nHalf an hour later Sarah called me over and started playing a piece of music she'd found amongst my collection, \"I love this song.\" Whitney Houston was singing, 'I will always love you.'\n\nI closed my eyes, it brought back some memories. \"That may be one of my favourite pieces of music, but I also have another version. Do you know who wrote and first performed it?\"\n\n\"No, who?\"\n\n\"Check the folders for Dolly Parton.\" She did and played Dolly's version. \"I like the Whitney version best and so did Dolly, it made her a fortune.\"\n\nSarah stood up and danced around me singing along. I laughed at her antics and said, \"One day you'll find someone who will, hopefully, always love you.\"\n\nWhen Meredith got back from dropping off her parents, she told me that they'd had a great time and liked me. I could see that their approval or at least acceptance meant a great deal to her and it pleased me as well.\n\nAfter we'd eaten the three of us sat listening to more music and chatting. \"The last few days have been great; I'm going to miss you when we go home tomorrow.\" Meredith was cuddled up beside me and held onto my arm as if she expected me to try and get away. Nothing could be further from my thoughts.\n\n\"You're right Mum, I've loved being here. Thanks, Amy.\"\n\nI smiled and without thinking about the implications, replied with, \"Don't go home, stay here.\"\n\n\"What? What do you mean?\"\n\nMy words had startled me. I'd almost invited them to move in. The incident during the night came back to me. I'd found love again and needed to move forward. \"I didn't mean anything specific when I said what I just did, but ...\" I took a deep breath. \"The two of you could move in. I'd like that, but it would have to be your decision and it's a huge step for you.\"\n\n\"Amy, do you mean that Mum and I could come and live here, with you?\"\n\n\"That's exactly what I mean, but ...\"\n\n\"Mum?\" Sarah had that pleading look.\n\n\"I need to think.\"\n\nWe talked for another hour before we sent Sarah to bed. She was excited about the prospect and when I mentioned the issue of travelling to school she had simply said, \"that would be no problem.\"\n\nMeredith and I spent another hour talking, was it too soon? What would she do with her house? Those and many other questions were asked, but few were answered and we made no decisions, it was something that Meredith alone had to decide. As I lay beside her, after some pleasant kissing, she fell asleep and I lay thinking. I knew by the time that I fell asleep that I wanted the two of them to live with me, very much.\n\nNew Year\n\n\"Vivian's coming down for a couple of days at New Year. She's going to stay with Mum and Dad and wants to meet you.\"\n\nI agreed I was looking forward to it. Meeting her parents had been nerve-wracking, so her sister didn't scare me.\n\nVivian and Meredith turned up at midday on New Year's Eve and there could be no doubt that they were sisters. When we sat down with drinks Vivian turned to Meredith, \"You were right, she is rather gorgeous.\" Then she turned to me with a smile, \"So, you're the woman who's corrupted, my little sister?\"\n\n\"I'm not sure about having corrupted her, but I've fallen in love with her. Very much in love, something I didn't expect to happen to me again.\"\n\n\"Well Mer is old enough to look after herself and make her own decisions, but it appears that my niece is also in love with you. I asked her about you and she left me in no doubt how she feels.\"\n\n\"I've had no experience with kids of any age until I met her. I love her enthusiasm, her energy and ...\" I paused to gather my thoughts, \"I don't have anyone to compare her with, but she seems to be a remarkable young lady and I like her.\"\n\n\"From what she's told me, you appear to have good parental instincts and you're generous to her.\"\n\n\"I don't know about that, but if Meredith and I move forward, I'll need to learn fast and not shirk my part in her life, even though I'm sure I'll make mistakes.\"\n\nWe chatted for another hour before they headed back to their parent's home. I'd been invited to join them to 'see in' the New Year. I thought about the conversations that I'd had with the two of them and the ones that I'd had with Meredith. I loved her and wanted her to be a part of my life. I loved the idea of her and Sarah coming to live with me, but I recognised that was a major step for the two of them.",
        "It was Sarah who came to meet me when I drew up outside the house. \"Thanks for coming, I'm pleased you're here. How was the interrogation with Aunt Viv?\"\n\n\"Not as bad as I expected, but maybe the reference you gave me helped.\"\n\n\"I love you, Amy. So does Mum, but it's a big deal for her even though she's happier than I've ever seen her.\"\n\nEric greeted me when I finally got my coat off. I handed him a bottle bag and his eyes lit up when he saw that it was a bottle of Tomintoul 21-year-old. \"Thank you, that's something special. I'm going to guess that it cost a fortune. You didn't have to do that you know.\"\n\n\"I know that I didn't, but I wanted to. Actually, I'm trying to bribe you to win you over.\" I grinned at him and he laughed.\n\n\"Being kind to my daughter and Sarah will win me over, but I will enjoy this. Fancy a dram?\"\n\n\"No, you enjoy it. I'm driving, so it's one drink to see in the New Year and soda water the rest of the time.\"\n\nCathy greeted me with a smile and a hug. \"I assume that was a bottle of whisky. Don't encourage Eric. Anyway, nice to see you again.\"\n\n\"I have some chocolates for you and I thought a bottle of wine might be useful at some point.\"\n\n\"Did Vivian give you a hard time?\"\n\n\"No, she was nice, suspicious, but nice.\"\n\nVivian cornered me soon after I arrived and told me that she was happy that her sister had found someone. The two of them had had a long talk on their way home. Meredith was quiet but kept close to me all night and we got an occasional, if brief, kiss.\n\nSarah was also never far away from me and we talked about many subjects. She was funny as usual, told me silly stories about relatives and some of her friends. The more time I spent with her the happier it made me. When midnight arrived, I got hugs from everyone, including Eric, Cathy and Vivian. Meredith made our relationship clear with a passionate kiss and then Sarah elbowed her aside with a giggle and said, \"My turn.\" She grabbed me, reached up with one hand on my cheek and kissed me on the lips. It stunned me and things went quiet until she stopped and whispered in my ear, \"That should show you that I like you and I'd love for you to be my 'other mum'.\"\n\nMeredith gave her a look of disapproval and leaned close to ask what she'd said, \"She told me that she likes me. I'll could tell you her exact words, but I suggest that you ask her.\"\n\nI chatted with Vivian again for a few minutes. \"What Sarah just did stunned me. She's told me privately that she'd love for you to be her 'other mum.'\"\n\nI laughed, \"That's what she whispered. The idea scares and excites me at the same time. I think she's remarkable. But what I want is neither here nor there, this is about Meredith and what she wants and thinks is best.\"\n\n\"I agree and I'll be telling her that later, for the third time. I like you; I've never seen Meredith look so happy. Don't abuse her or Sarah.\"\n\n\"That I can promise.\"\n\nNot long after that conversation, Meredith sat beside me. \"I told Sarah that her kiss was inappropriate. She told me what she'd said to you. It terrifies me, it seems to be running away from me.\"\n\nI turned to look at her and took a hand, \"Look, there's no rush, no pressure. I love you and want to spend time with you. I'd like you to come and live with me, but it won't change how I feel about you if you don't or can't. I'm going to head home. Take a couple of days without contact between us and give it some thought, take as long as you want.\" She came out to the car to see me off and there was a passionate kiss before she whispered, \"What I'd really like is to cuddle up to you naked. Now, get thee gone, woman.\"\n\nI smiled all the way home. Maybe there was a chance.\n\n* * * * *\n\nTwo days later my phone rang and I was surprised that it was Sarah. \"Do I owe you an apology? Did something happened between you and Mum?\"\n\n\"You don't owe me an apology, but that kiss was a bit much. Nothing's happened and she's taking time to think about her life, your life and how to move forward. Give her time. I don't think you realise what a huge deal this is for the two of you.\"\n\n\"Surely, it's a huge deal for you as well?\"\n\n\"Yes, but I'm just me. There are two of you and your other family.\" We chatted for another fifteen minutes.\n\n\"You can speak to me anytime you want and I'll keep your confidences, at least until there's something that your Mum has to know and then .... I will never take your side against your Mum, ever.\"\n\nShe replied, \"Okay, I understand. Better go now, I'm off to see my pals.\"\n\n* * * * *\n\nIt took another two days before Meredith sent me a message. By that time, I was biting my nails and worried that it was over. She asked to come for a visit that evening. I confirmed that it was okay and that I'd make dinner. I slipped away from work early to get ready.\n\nWhen I saw Meredith at the door the first thing, I noticed was that she was smiling, she'd had her hair cut, it was a little shorter and a slightly more modern style, she wore make-up, cleverly applied. As I took her coat, I noticed a dress that I'd not seen before, it was shorter than normal and revealed a good deal of leg emphasised by some, obviously new heels.\n\n\"Hi, sorry I took so long to call you.\"\n\n\"That's okay, but you had me worried. I like the hair.\"\n\n\"What about the rest?\"\n\n\"You look stunning, gorgeous. Come and have some wine. Are you staying?\"\n\nThere was that shy look that I loved, \"If I can.\"\n\nWe sat with our glasses. \"I'm sorry I kept you waiting. I found this difficult, I want to be with you, to have a relationship, including a sexual one, I love you. Finding out that I'm a lesbian is a bit mind-blowing; it scares me a bit.\" I was about to speak, but she held up her hand to stop me. \"Please let me finish before I mess it up. I would like to come and live with you, but it seems a bit rushed. I'd like to keep things going as they are and adjust to the idea. I have no idea how long maybe another couple of weeks or a month. Would that be, okay?\"\n\n\"Of course, it would. I'm relieved and I think you're being sensible.\"\n\nShe smiled, \"Can I get a kiss? A proper one, I've missed them. Then later I want to do some things to you, to your body. I have another surprise for you, but you'll have to wait.\"\n\nShe leaned in to kiss me and it was clear that she wanted this very much, that made two of us. Our lips were busy and it thrilled me. Her tongue probed, there was no hesitation in her desire. Her hand sliding under my skirt caught me by surprise and she rubbed the flat of her palm over my sex. I didn't doubt that she could feel the effect that had on me as I was, by now, very damp. She pulled back and I almost followed her, only stopped by her hand on my chest. \"That was great and I want more, but I need to eat. Food please.\"\n\n\"Are you sure about the food?\" I laughed as I spoke.\n\n\"Yes, we're going to need some energy reserves.\"\n\nI'd made a lasagne, heated some bread and we sipped a nice red wine along with it. She told me about Sarah and her parents. \"Vivian had warned them that I was thinking about moving in. They were okay, but both concerned that I was rushing. It seems that Sarah had also spoken to them.\"\n\n\"What did she say?\"\n\n\"I'm not sure, but the two of us have talked. I asked about school, but she wants to stay where she is and knows that she'll have to travel. She seems to think that it will be worth the hassle.\"\n\n\"What has she said about the rest?\"\n\nMeredith sipped her wine and looked at me with a serious face. \"She thinks that you're fantastic, but she also says that she's never seen me so happy and I suppose she's right about that. Suddenly I feel, I don't know? That this is right, maybe?\"\n\nMeredith sipped more wine before going on, \"She asked me how I felt about the gay thing. I told her that it hadn't ever been anything I'd thought about until, I'm not sure, a couple of years ago? That surprised her. Then she said that seeing the two of us together was beautiful. She's not a fan of men after how her Dad behaved.\"\n\n\"Do you have any contact with him?\"\n\n\"Not since that one time about five years ago. I have no idea where he is and frankly, I don't want to know and neither does Sarah.\"\n\nWe chatted for a while longer before heading to the bedroom. Meredith told me to sit on the bed whilst she stood in front of me and turned so that I could unfasten her zipper. Then she stood back and undressed, she didn't strip, but it was rather erotic and something I didn't expect from her. I didn't expect to see her wearing stockings either and she turned away to unhook her bra. She turned back and blushed as she let it drop. Then she inserted a thumb in each side of her panties and lowered them slowly, as she came back up, I noticed another change, she'd shaved and was now as bare as I was. She blushed even more and asked a question with just her eyes. \"Wow, you are something else and you've shaved.\"\n\n\"I did, I was shocked the first time I saw you, but I liked it and decided I wanted to look the same.\"\n\n\"Well, you look lovely and sexy, and if you move over here ...\" She took two steps forward and I reached back to grab her ass cheeks, pulling her closer and allowing me to lick her hairless mound.\n\n\"Looks like it was worth it already,\" she said before moaning with pleasure.\n\nI held her so that she couldn't move, I was at the perfect height to tease her with my tongue and when she was shaking with desire, I slid my tongue inside her and probed again until she could stand it no more and I took her clit between my lips. She cursed and her knees sagged, I had to hold her until I could pull her onto the bed, she shook as the effects of her orgasm continued. When they started to wane, she looked at me and said softly, \"I had to wait until my mid-forties to discover this. I wish that I could sing out loud about loving a woman.\"\n\nI said nothing and slid down until I was between her thighs and licked, kissed and sucked on her until she screamed 'no more. She grabbed a handful of hair and gently, pulled me up beside her. \"Thank you, please kiss me I want to taste what you tasted.\" We kissed for a few minutes. I was full of hope, I wanted this woman in my life, in my bed, everywhere with me.\n\n\"Now,\" she said, \"I want to do something.\" Her hand went between my legs and a couple of fingers disappeared inside of me. She kept kissing me with delicate little kisses, not just on my lips but my cheek, chin and neck. The kisses to my neck were rather erotic, more so than previous kisses in that area had been.\n\nMeantime she was continuing to thrust those fingers inside until she curled one of them and found my G- spot and thirty seconds later I screamed and started shaking as an unbelievable sensation shot through me. I have no idea how long I lay with my eyes closed whilst Meredith stroked my torso gently and kissed my shoulders.\n\n\"Are you okay?\" She asked.\n\n\"Not sure, that was incredible, thank you.\"\n\n\"Hmmm not finished yet.\" I wasn't sure what she meant until I realised that she was between my thighs again and had her tongue probing me. This time it was the gentlest of kisses and long lazy strokes of her tongue. It was wonderfully erotic, but slow so it took me ages to build to a crescendo, then suddenly it raced up and caught me by surprise. When my eyes opened, she was lying half on top of me and whispered. \"I loved doing that to you. I love you.\"\n\n\"I loved you doing it. I also want to tell you that being with you, the sex, the kissing, all of it is wonderful, the best.\"\n\n\"Thank you.\" We both closed our eyes. It was true, I was as happy as I had been with Dee. I wish she was still here but she wasn't and Meredith was. I was pleased that I'd never have to choose.\n\n* * * * *\n\n\"Amy, thanks for last night, I loved it.\" Meredith looked down at me with a huge smile. I was still half asleep as we'd been up late. That's not entirely true, we'd been having sex until the early hours.\n\n\"Good morning. I need coffee.\" I groaned.\n\n\"I've reached a decision.\"\n\n\"Okay, what?\" Suddenly, I started to worry.\n\n\"I don't want to go to bed alone anymore, I don't want to wake up alone anymore. I know I said that I wanted to wait, but I don't, can we move in and see how things go? If it works, I'll sell my house.\"\n\nSuddenly my day brightened even more. I gave her a big smile, \"I'd love that, please, whenever you want.\"\n\n\"I'd like to go and see my folks and tell them, today if you don't mind. Then I'll pack a bag and we can sort out the rest later ....\" Meredith burst into tears and I held her. This had been momentous for her.\n\n\"If that's what you want, that's what we'll do. I'm very happy. Does Sarah know?\"\n\nShe sniffed, \"She knows what I was thinking. It's what she wants as well or I wouldn't be doing this. Why don't you call her?\"\n\nMeredith went to the bathroom. I pulled on a robe, started making coffee and picked up my phone. \"Hi, Mum. It's a bit early,\" answered Sarah.\n\n\"It's not your Mum, it's Amy.\"\n\n\"I just assumed it was her,\" then she seemed to panic, \"Oh god is something wrong? Is she okay?\"\n\n\"She's fine, in the shower. We're both good. What are your plans today?\"\n\n\"I'm hanging out with Karen for a while until Mum says she's heading home, then I intended meeting her there. What is it?\"\n\n\"We'll be there for eleven, to pack a bag.\"\n\n\"What, what do you mean? Has she decided?\"\n\nMeredith arrived and I put the phone onto the speaker. \"Yes, she has. I'm doing it, we're doing it if that's okay with you?\"\n\n\"Wow, great Mum. I'm pleased and happy. See you soon.\"\n\nEric and Cathy weren't surprised and told me that I had to take care of the two of them. Sarah had a suitcase and holdall packed when we arrived. The was another bag containing shoes and her school bag was piled on top. \"I can't believe this.\" We both got hugs.\n\n* * * * **\n\nI had plenty of room in my wardrobes, so it didn't take long to get the few things Meredith's had brought with her organised. Sarah was lying back on her bed smiling when I went to see how she was. \"Settle in for a day or two and then think about what you'd like to change. We can paint or change the furniture. This is your home and you need to get it the way that you want.\"\n\n\"It's great the way it is, huge compared with back home. I've always wanted to have a small desk for studying and I'd like my TV as well, but I didn't bring it. Would that be, okay?\"\n\n\"We can get you a desk. There isn't anywhere handy to put a TV. Does the one you have mount on the wall?\"\n\n\"No, but it doesn't take up much room.\"\n\n\"Maybe we could go and get you one that does wall mount and there's a socket for the satellite channels in here.\"\n\n\"You'd buy me a telly and I could have the satellite feed?\"\n\n\"Sure, why not.\" The thought of treating her excited me.\n\n\"I knew I was right; Mum made a wise choice.\"\n\nMeredith wasn't as keen on my plan because it involved spending money. \"We've never even talked about my contribution.\"\n\n\"Firstly, buying things for Sarah will be from both of us, I'll take pleasure from it. As for your contribution, that's a topic for another day, but I know that leaving it will bug you, so how about you buy the food and I'll take care of the rest for now.\"\n\nThat first evening the three of us watched a programme sitting close together under a throw. When it was over Sarah disappeared and I heard her on the phone updating one of her friends on her change of circumstances.\n\nSarah only had to wait for her TV until the next day and by that evening, we'd fastened a rather large one to the wall above her new desk and it could swing out so that she could watch it from anywhere. Meredith was in with her when I arrived to check how things were. \"It's great Amy, thanks for everything. But there are two things, what do I call you?\"\n\n\"You've managed okay with Amy so far, let's leave it at that. How you chose to refer to me when you're talking to others is up to you. What was the other thing?\"\n\n\"Would it be okay if I had Olivia and Karen over occasionally? I've done sleepovers at their homes, but never at ours, it was too small.\"\n\n\"This is your home. If you want them over you need to check with the boss.\" I pointed at Meredith as I spoke, then raised a hand to shield my mouth from her and whispered, \"Don't tell her I said this, anytime you want.\"\n\nShe laughed as she replied, \"Great, thanks.\"\n\nMeredith had heard my remarks as I'd intended but got serious, \"Sarah, please respect this house. Nothing wild and check with us first before you organise a pyjama party.\"\n\nWhilst we were cooking, I asked about getting Sarah to school. \"She'll use the bus; she has a pass but I'll need to top it up.\"\n\n\"I'll take her tomorrow, let her make her own way home and see how things go. Why don't you suggest she asks her pals over next weekend, she's sure to want them to see her new place.\"\n\nSarah was stunned when I took her to school. \"See you tonight. Did you remember to pick up the key?\"\n\n\"Yes, 'Mum'\" She grinned.\n\n\"Amy, just Amy. Are they your friends?\" Two girls were heading in our direction, smiling.\n\n\"Hey, Olivia, Karen, this is Mum's partner, Amy. Amy, that's Olivia and this is Karen.\"\n\nWe exchanged greetings. \"Amy said that we can have a sleep-over soon at our place.\"\n\n\"That would be cool.\" Replied Karen.\n\n\"Speak to Mum, maybe this weekend.\"\n\nI drove towards the office with a huge grin on my face. I was going to be late in and didn't care. Normally I beat them all to my desk, but that may be a thing of the past.\n\n* * * * *\n\nI had no idea what a sleep-over entailed and how much activity there would be. Olivia and Karen arrived at mid-afternoon on Saturday and soon after, there had been so much laughter the smile I had was starting to hurt. When I went to Sarah's room later to suggest pizza for dinner, I was stunned that they were all dressed up in fancy clothes with full make-up.\n\n\"Wow, you all look grown-up.\"\n\n\"It's fun to get dressed up, but we don't have any mascara.\"\n\n\"I can fix that.\" I went to my room and grabbed a new tube from my dressing table drawer. I tossed it to Amy who looked at it with her eyes wide and turned to the others, then back to me, \"Amy, that's a Benefits mascara, we can't use that.\"\n\n\"If a girl wants to look good, she needs good stuff. That's what I have so you'll need to make do with it until you find something that suits you better. Now, I was going to suggest pizza, but you need to work out what. The pizza place is right over the road, a thirty-second walk, so I refuse to allow you to ask for delivery.\" They all laughed.\n\nThey phoned in their order having added things for Meredith and me. Sarah grinned as she read off my card number. Her Mum felt the need to step in, \"You do not ever use that without permission, understand?\"\n\nI was a bit stunned when the three of them dashed out. They looked as they were closer to eighteen and I shook my head. I turned to Meredith, \"She's only been here two minutes and already I'm starting to worry about boyfriends. They look stunning. No wonder parents all have grey hair.\"\n\nI'd assumed that they would eat in Sarah's room but no, they sat at the table with Meredith and me. It was hard to eat because they resumed making me laugh. They were full of fun, silly observations and they poked fun at each other continually. Olivia and Karen probed at me gently, they seemed interested and I told them bits and pieces. I was sure that Sarah would fill in the gaps.\n\nWhen Meredith and I were heading for bed, I was surprised that Sarah's room was silent and the light was out. I quietly opened the door and was once again shocked to find the three of them spooning together, fast asleep.\n\nMeredith told me that it was what they'd done for years. She added that they were good kids and I had to agree, I'd loved having them and hoped that it wouldn't be long before they came back.\n\n* * * * *\n\nI'd liked my home ever since I'd moved in. But now it seemed chaotic, sometimes messy and there was always noise or activity, often both. It surprised me that I liked it better. My love for Meredith had grown, but Sarah was quite something else. If she'd asked for the moon, I'd have tried to find a way to get it for her, but actually, she didn't ask for very much.",
        "Each evening she would disappear to do her homework. One evening over dinner she mentioned that she was struggling with an economics thing. I checked back through the dusty recesses of my brain and managed to find an idea for her to research. Later on, she told me that she'd been able to complete that assignment and added, \"You don't happen to speak French, do you?\"\n\n\"A bit, why?\"\n\n\"I need to try and get my head around this.\" We sat for about twenty minutes talking in French and as rusty as my French was, I enjoyed it. I was getting up to leave when she embraced me, \"Thanks for your help and letting us live here and everything else, I love you. I wish you'd been in my life for longer.\" She kissed my cheek and I gave her a squeeze.\n\nI walked away thinking the same thing and blinked back a tear.\n\nTravelling to school was a pain for Sarah, but she pointed out that the benefits outweighed the inconvenience. Meredith and I tried to give her a lift when we could, but she never once complained.\n\nWhen the cricket season began, Sarah spent lots of time training with the school team and the local club, she also started running a couple of times a week.\n\nIt took three months before Meredith decided to put her house on the market and it sold very quickly. That caused an argument about money between us. It was the most serious one that we'd had. I was annoyed at her insistence at giving me money and she was annoyed that I wouldn't take it. That evening in bed she teased me. She was between my legs and built me up with her tongue almost to the point of orgasm and then stopped. The first time she did it was okay, but she did it again and I was getting desperate. This was not something she normally did and I groaned and asked her why. She looked up at me and muttered, \"We need to sort out money and until you agree I'll never let you come.\"\n\nI laughed, determined to hold out, but it was me who gave in after another twenty minutes and almost getting there three more times. I just couldn't take it anymore and groaned, \"Please let me come, please. We'll talk about money anything, please.\" Thirty seconds later I thought the top of my head was going to blow off, I don't recall ever coming like that before.\n\nWhen I recovered, I kissed her and said, \"I promise we'll talk about it tomorrow, but I can't now. I can't think straight.\"\n\nI kept my promise and we sorted things out. I suggested that she put most of the money aside to pay for Sarah's further education, which she agreed to do. I also made a new will, you never know when things might happen and I made Meredith and Sarah my heirs, in any case, I had no one else.\n\n* * * * *\n\nThe following year Sarah was selected to go on a junior cricket tour to the south of England. Meredith was worried and the two of us sat with Sarah to talk about it. \"Mum, this is a great chance for me. I've been told that I have promise and I need to try it and see if that's true. I love playing cricket. Look at Hayley, she's doing great and if I could get anywhere like her I'd be overjoyed.\"\n\nI sat thinking before I spoke, \"I said that I'd never take Sarah's side over you and I meant it, but ...\"\n\n\"But now you're going to?\" Asked Meredith\n\n\"No. I'm going to tell you what I think and let you decide. I think that this is a golden opportunity for her. She won't be alone and I believe that she's an extraordinary young lady. I'm continually stunned by how sensible she is and her work ethic is remarkable. I think you should let her go.\"\n\n\"Thanks, Amy. But it has to be Mum's decision.\" Sarah smiled, grateful for the support.\n\n\"For so long I was terrified of losing you. Terrified that I hadn't done a good job raising you on my own. My perspective was skewed and Amy has made me see that I've done okay. You can go, but please be careful.\"\n\nSarah knocked Meredith back into the seat and showered her with kisses. When she stopped, she sat back and looked at her Mum with a serious face. \"You've been astonishing and one thing I've always known is how much you love me. You're right, that since meeting Amy you've changed in a good way, you're happier and you see things through her eyes as well. I promise that I'll be careful.\"\n\nThat weekend we headed out and I spent a small fortune on new cricket gear despite them both protesting. I had no idea that a new bat could cost so much, it was, after all, just a piece of wood.\n\nSarah was away down south for two weeks and she played in six games. She'd loved the tour, being with new people and seeing new places, but she'd enjoyed real success when playing. Somehow, she managed to keep the highlight of the tour until she got back home.\n\n\"A couple of days ago we went to train on the Nursery Ground at Lords.\" I was pretty shocked, Lords was the place where cricket was first played to a high level, it was known as the headquarters of cricket, the ground was revered throughout the world and all cricketers dreamed of playing there one day.\n\n\"We didn't get on the pitch itself, just the training ground. We were having a net when Graham Dowling came over to watch.\"\n\n\"Graham Dowling? The England Captain?\"\n\n\"Yes. He gave us a pep talk and asked two of us to bowl at him in the nets. I spent twenty minutes bowling at him and he gave me a few tips. He signed my bat and a ball. I really cannot believe that I've played with one of the best cricketers in the world, even if it was only in the nets.\"\n\n\"I'm impressed, that's quite something. Did you manage to bowl him out?\"\n\nSarah laughed, \"No, but I made him play and miss a couple of times. I tried his bat, makes mine look like a matchstick, I could barely lift it. I'm going to give the ball to Grandad.\"\n\n* * * * *\n\nBecause cricket consumed all of Sarah's time away from school, I watched a great deal of it and, maybe because someone I cared for was playing, I grew to love it even more than already did. I managed to get three tickets for a one-day international match at Lords. We left early by train and dropped our bags at a hotel before heading to the ground. Sarah was delighted to show us around and the England team were practising before the start of the match in the nets where she'd bowled. We spent the next day sightseeing in London and went to see a musical that evening. In the taxi on way back to the hotel Sarah cuddled into my side, \"Thanks for these couple of days. I loved being able to see a match at 'the home of cricket' and today's been fun great fun.\"\n\nMeredith cuddled into my other side and added, \"It has been great, a lovely couple of days with my two favourite people.\"\n\n\"I've enjoyed it more than I can tell you.\" I reflected quietly for a moment. \"Maybe one day you'll get the chance to play at Lord's.\"\n\n\"That would be a dream, but somehow I think I've been as close as I'll ever get.\"\n\n\"If you keep up your practice you never know. I love you very much, both your Mum and I are very proud of you. I've loved the last two days, actually you two have changed my life and I love it. Thank you.\"\n\nSarah's cricket also made it awkward to get away for holidays, but one year we managed to get away for a week in between her games.\n\nWe headed to Barcelona, a city I'd visited a couple of times. It was new to Meredith and Sarah so we did all the tourist things, Las Ramblas, Gaudi's cathedral - La Sagrada Familia, Parc Guell and the Miro museum. It seemed as if we'd stopped for coffee or wine almost every hour to watch the world go by. We enjoyed an evening of flamenco over dinner and later watched the Magic Fountain. I walked along the beach in my bare feet holding Meredith's hand whilst Sarah skipped ahead of us kicking at the wavelets, like someone much younger. She laughed as she splashed herself and reminded me of the girl, I'd first met four years ago.\n\nDuring our final dinner, I asked what they'd most enjoyed and Meredith replied. \"I loved the passion of the flamenco, the passion that's been poured into that cathedral for so many years. I loved it all.\"\n\n\"What about you Sarah?\"\n\n\"There hasn't been a moment of this trip that I haven't enjoyed, but ...\" she paused, thinking.\n\n\"But, what?\" I asked.\n\n\"Being with the two of you and seeing you both happy was best. I love you both.\"\n\nI managed to mutter a, \"Thank you,\" without starting to cry, \"I feel the same.\"\n\nA year later - University\n\nWe were finishing dinner when Sarah produced an envelope, \"I got a letter from the University this morning.\" She was grinning.\n\n\"What? Why didn't you tell us? What does it say?\"\n\n\"I've been accepted for the degree course in Sports Science, Coaching and Physical Education. It's an honours course and will give me a BSc, assuming I pass of course.\"\n\n\"Well done honey, I'm very proud of you. You've worked hard and deserve the chance.\" There were several hugs and big smiles.\n\nI was moved to tears as I told her, \"I'm so proud of you, very proud. Well done.\"\n\nSarah took both of our hands. \"Mum, you've been amazing, coping alone for so long. Then meeting Amy and you two falling in love is wonderful. I doubt I could have done it without that, so thanks, Amy.\"\n\n\"I suspect you would've made it anyway, but I'm pleased if I helped in any way. What about cricket?\"\n\n\"That's the great thing. As you know the England cricket performance centre is based there and I'll get the chance to train with them, play with the university women's team, maybe even the men's team and when the term is finished the Bandits want me as well.\"\n\n\"That's great.\"\n\n\"The cricket will help to pay for the course.\"\n\nMeredith looked at me before continuing, \"I put a lot of the money from the house sale aside, it'll help pay the fees. It was Amy's idea.\"\n\nThere were more hugs. I went to bed that night with a huge grin, when Meredith joined me and sat on the edge of the bed I said, \"I'm pleased and proud. I know she's not my daughter but ...\"\n\n\"She is your daughter now. That's how you treat her and that's how we both think of you. And now I need to thank you properly, wait until I get these clothes off.\"\n\nMeredith disappeared to the bathroom and a few minutes later walked over to the bed naked. It made me smile. When she sat down, she took my hand, \"You changed my life, and Sarah's, thank you.\"\n\n\"The two of you changed mine. I love you. Now are we going to talk all night or what?\"\n\nMeredith used her tongue, but there wasn't another word uttered for quite some time. I was exhausted and very satisfied by the time she was done. After some more kissing, I was about to move to take her nipples into my mouth when Meredith put her hand on my head. \"I think we've played enough for tonight; I wore you out and that's okay.\" I sagged back into the pillow.\n\nMeredith looked at me, \"I meant what I said earlier, you've changed our lives and we were so lucky the night we sat next to you.\"\n\n\"I have no idea how my life would have turned out, but I'd never have predicted that it would be like this. I think you changed me just as much.\"\n\n* * * * *\n\nSarah played cricket at every opportunity that summer and when she wasn't playing, she was training. Hayley and Sarah both used the facilities at the cricket ground, so they often trained together and they became friendly. There might have been a little hero worship going on as well. She also spent some time with Karen and Olivia, but not as much as she'd have liked and wasn't able to go on holiday with them. That disappointed her, but cricket took priority.\n\nShe settled in at University right away, she loved the courses and knuckled down, putting in lots of time to her studies. When I asked her about it, I wasn't surprised by her reply, \"I need to cover as much as I can, as soon as cricket starts again, I'll have less time. I really want to make a go of cricket. I don't know if I'm good enough to make it, but I'll regret not trying, so ...\" I admired her determination and had no doubt that she would do well.\n\nSarah came home most weekends and spent time with her Mum and me. They were good times and I relished every minute that we had together, but we encouraged her to make time for her friends. Occasionally Karen and Olivia would come over and spend the night with us. I loved those occasions, they didn't happen often enough in my view, but at least now they didn't 'steal' my mascara.\n\nThe tour\n\nThe door opened and I knew that peace had been shattered, but I smiled all the same. Sarah yelled before she even reached the kitchen, \"Mum, I've got news, wait till you hear.\"\n\n\"Your Mum's not here yet, another twenty minutes.\"\n\n\"I know she told me.\"\n\n\"You called me Mum.\"\n\n\"That's how I think of you, one of my two Mum's\"\n\n\"Okay, so what's the news and why aren't you still at Loughborough? I thought you weren't coming home until the weekend.\"\n\nShe stood right in front of me and I found it hard to believe that the beautiful lithe, obviously fit young lady, with a delightful face, sparkling eyes, full lips and gorgeous long blonde hair, was the same one that I'd met five short years ago. She smiled and I smiled back.\n\n\"I've been picked for the England development team and we're going to the West Indies.\" The smile was threatening to exceed the width of her face. I stood speechless.\n\n\"But, but you're only .... You've only just ...\" I couldn't finish my thoughts or words. I shook myself, \"Wow, that's wonderful, a surprise, it's great. Does Mum know?\"\n\n\"No, I didn't want her the crash, so I waited.\"\n\nTwenty minutes later I was convinced that Meredith was going to faint. I sat her down and she mumbled what were probably meant to be questions, but her words made no sense. Sarah took over and spelt out the details. Eventually, Meredith managed to mutter, \"We need to call my parents, they'll be so excited.\"\n\nI had an idea, \"Why don't you call and tell them we're popping in for a visit. We'll all go over.\"\n\nSarah chatted all the way, none stop details of the conversations with the coaches, who else had been selected and what she expected to happen.\n\nEric and Cathy were ecstatic, at least once they got over the shock. I'd taken Eric another malt whisky and this time I joined him in toasting Sarah. It was a fun evening, even if I had to listen to all the details for the third time. By chance, Olivia and Karen were together and we stopped so that Sarah could break the news. Olivia's father, Roger, also a cricket fan was stunned. \"I can hardly believe that the three of them are so grown up. It hardly seems any time since they were here with pigtails and barely in their teens. Now one of them is playing international cricket. I'm thrilled for her, a little jealous though.\"\n\n* * * * *\n\nSarah was busy packing when I went to her room, clothes and cricket gear were strewn all over the floor. \"That looks like a mess.\"\n\n\"No, it's not, I decided to lay out what I thought I might need before starting to pack.\"\n\n\"Okay. I need to tell you something and make some requests.\" She noted the serious look on my face.\n\n\"Stay safe, no drugs, moderate alcohol. One wrong move could end this so easily, you know that and I'm sure you'll be smart. Now, I've transferred \u00a31000 into your account, so please, do not be short of anything you want and stand your round. If you need more, text me and I mean that. One more thing, if you don't call, text or zoom your mother every other day I'll .... Just please do it, she'll be uneasy whilst you're away.\"\n\n\"Thanks for the money and advice. I'll be safe I promise. I'll stay in touch with Mum and you.\"\n\n\"I'd love to hear from you, but on this trip, she'll be worried all the time and it's more important for you to stay in touch with her.\"\n\nIn the three weeks that Sarah was away, she only missed making contact on two days and that was because they were travelling. I got excited when she called and loved hearing her reports. I was even more pleased that she'd played well and had some success with both bat and ball.\n\nI was pleased for Sarah, but it also meant that Meredith and I had twenty-two days of peace and time to enjoy each other.\n\nThe sex was sometimes loving, but most of the time it was pretty wild. We wore very few clothes around the house during that time and made love in every part of it, except Sarah's room. We got carried away with massage oil one evening on the lounge floor and it was only after we'd finished that we spotted the stains on the rug and it had to be replaced.\n\nOne evening we were preparing a salad and stopped for a kiss. Meredith happened to be holding a cucumber and as she pulled away, she laughed and said, \"I'm making food, stop it or I'll hit you with this.\" She brandished the cucumber.\n\nI laughed and for some reason muttered, \"I could think of other uses for it.\" By the time the words were out I was going red and tried to say that I was sorry.\n\nMeredith gave me a stern look, but I could see the smile behind the eyes, \"If you mean putting it somewhere interesting then you have a dirty mind. Ever done that?\"\n\nBy now I was bright red, \"No, no I haven't.\" Meredith eyed the cucumber and with a lewd smile, \"Maybe we should try?\"\n\nI laughed again, \"This from a woman who not long ago told me that she didn't like sex.\" I grabbed her, pulled her towards me and in one movement had her sitting on the worktop. I pulled the hem of her skirt up and she slapped me.\n\n\"Tell you're joking?\" She looked serious.\n\nI took the cucumber rinsed it under the tap and licked it as lewdly as I could. I slid a couple of fingers inside her to find that she was soaking. \"You seem ready and I'm willing to give this a try if you are?\"\n\nShe threw her head back then looked at me, \"A few years ago I would have said that anyone who could even imagine such a thing was a pervert and now I'm aching to feel it inside me, go for it.\" I placed the end against her thigh and she winced because it was cold. I could see that she was fighting the desire for this and the thought that this was wrong but she kept her thighs apart. I pushed gently, she gasped. I pushed some more and the end went inside, not much before I stopped.\n\n\"This is perverted, but right now I couldn't stop if I wanted to and I don't want to. Give it a shove.\"\n\nI pushed and three inches disappeared. Her lips were stretched and she gasped again. I applied more pressure and now six inched had gone. \"You, okay?\" I enquired.\n\n\"Oh, fuck yes, go for it fuck me please.\"\n\nI pulled it back and thrust it in again, she bucked and I could feel that she'd relaxed. I upped the speed and force that I was using and seconds later she came with a scream and grabbed my wrist. I stopped thinking I'd hurt her. \"Sorry,\" I muttered.\n\n\"I'm not, that was intense and I needed to pause.\" I didn't move for all of thirty seconds before she said, \"Now I need you to go again, please that is so good, so filthy, so bad. Fuck me.\"\n\nWe didn't have cucumber with our salad that evening, we felt that it was wrong. It became something that made us smile every time we came across one and occasionally it embarrassed me, at other times it turned me on, but we never repeated it, well, not with a cucumber.\n\n* * * * *\n\nSarah looked great when she got home, the tan had enhanced her good looks, the sun had bleached her hair and for just a moment I was jealous; beautiful, talented, clever and with all the world in front of her. It took hours for her to tell us everything. I heard the details again when she told her grandparents and I suggested that she invite Olivia and Karen over so that I could drink wine in another room. As wonderful as it was, the daily reports we'd had, the news stories and the retelling started to wear thin after the fourth time.\n\nThat spring was a little crazy. After pre-season training, Sarah played for the University Women's team, the Bandits Women's team and in between went to a couple of England training camps. The rest of the time she was with us or her friends. The craziness carried on throughout the summer and I loved it. Meredith and I were happy and very much in love. We watched lots of cricket and I also enjoyed spending time with her parents, something that I hadn't been able to do with my own. I loved having Sarah around, although those occasions became less frequent as the summer progressed. Never in my wildest dreams could I have predicted what would happen in the last days of August.",
        "A day in August\n\nI was awake early and although I tried, sleep wasn't going to come again so I left Meredith in bed and went to make tea. Today was going to be quite a day.\n\nMeredith joined me half an hour later and we kissed. As I was going to turn away, she grabbed me in a wonderful hug. \"Thank you for letting us into your life. I love you.\"\n\n\"I should be thanking you, letting me have a small share of Sarah has been something delightful and that I'd never expected. Of course, I quite like sharing my life with you as well.\" After a few minutes, she let me go and I was heading for the shower, but stopped to look at the pictures on the shelves.\n\nMeredith saw me and asked, \"You, okay?\"\n\n\"Yes, honey. I was thinking about Dee, she would love to be here today. It doesn't make any difference to how I feel about you, but I still miss her a bit.\"\n\nShe smiled, \"I know how you still feel about her and it's okay, as it should be. It doesn't change how much you love me as well; I know that.\"\n\nMeredith was back by 9.30 am and brought her parents upstairs, along with Olivia and Karen. \"Hi, are you both okay?\" I asked Cathy and Eric.\n\n\"Eric is excited beyond belief. He didn't want to use his wheelchair, but I've told him, no chair, he's not going.\"\n\n\"It'll be fine,\" I told them. \"Olivia, Karen are you okay?\" They confirmed that they were, but they were a bit more reserved because Sarah wasn't here.\n\nMeredith looked at me with concern, her nerves were jangling as well. \"I'm a bit nervous about Dad and we should've organised a picnic.\"\n\n\"I've got it all covered, including food. It'll be fine.\"\n\nIt was almost 10 am when Hayley's parents; Josh and Pauline and Josh's mum, my friend and former colleague Celia, pulled into a parking space at the rear of the apartment. We went downstairs to meet them, where there were lots of introductions and several hugs. It only took us a few minutes to walk to the ground and I shepherded them all through security and directed them to the far end of the ground.\n\nMeredith took my hand as we walked and asked, \"Are we all sitting together?\" I nodded, \"How did you manage that? There are nine of us.\"\n\n\"No problem, plenty of room.\" I grinned.\n\nSeveral of them looked at me questioningly, but it was Meredith who asked, \"What do you mean?\"\n\nI smiled at her and said, \"Wait and see.\" At the back of the big grandstand, I headed for the reception desk and noticed some puzzled looks on their faces as I spoke to the Commissionaire, who simply said, \"Take the lift on the right Ma'am.\"\n\nMeredith grabbed my arm, \"Where are we going? What's this about?\" I ignored her and the questions from the others as we ascended in the lift. When it stopped, I set off checking the room numbers before showing my pass to one of the staff who opened a door for us to step inside. Meredith walked in first and I heard her gasp before she turned back to face me, \"A box, you organised a box?\"\n\nIt was a room on the second floor of the stand. One wall was all glass with sliding doors and a balcony with seats beyond giving an amazing view of the ground. There were two tables in the room set out with tablecloths, cutlery and crockery, a long table against the wall held refreshments, including some steel containers that I knew contained a hot breakfast.\n\nThe others stood looking a bit shell-shocked as I spoke to answer their questions. \"Yes, I've organised a box. My 'almost daughter' is playing her first one-day international game for England and I'm so proud I wanted to do this in style. I want to share it with all of you and Hayley's family because it's a special day for them as well. There's food and drink laid on all day and, as you can see above us, a TV so we can watch the replays. Now, there should be bacon rolls and hot drinks. Who wants coffee? Who wants tea?\"\n\nOlivia took my hand as she spoke, \"Miss King, I was excited when you asked Karen and me to be here to see Sarah play, we're so proud of her. But I never expected this, it's wonderful and now, before I cry with delight, I'm going to call my Dad and brag. He took the day off today to watch on TV, he couldn't get a ticket.\"\n\nWe were sorting out coffee and I heard Olivia on the phone to her Dad. She was grinning when she finished the call. \"He's so jealous.\"\n\n\"If you go down to the boundary, you may be able to wave to Sarah, as they're warming up. While you're there get yourselves a cap or hat each if you want one and you'd better bring back a couple of those radios for the commentary as well. Take this pass so you can get back.\" I handed them a bundle of notes and off they went.\n\nWe watched the activity from the balcony, sipping our drinks, as the teams warmed up. I saw Olivia and Karen, in the distance standing by the boundary rope talking to Hayley and Sarah. They pointed up in our direction and the four of them waved, so we waved back. Eric looked at me, \"Amy, I'm so proud of my granddaughter and excited for this special moment, but you arranging this makes it doubly special. I confess I worried about where I'd be sitting in my wheelchair.\"\n\n\"Well, you won't need it up here, you don't need to go anywhere except the loo which is a couple of doors down. Just let Meredith or I know if you need anything.\" He hugged me.\n\nThe girls arrived back just as the anthems were playing and they showed us their caps. \"They couldn't believe we had a box and Sarah is nervous.\"\n\n\"She's not the only one,\" I added.\n\nThe South African women got off to a racing start and it had us worried. Runs were coming freely and the batters didn't look to be in any trouble.\n\nFifteen minutes after the game started there was a knock at the door, which opened to reveal Olivia's Dad. She stared wide-eyed and said, \"Dad?\"\n\nI jumped in. \"We can't have jealous parents, so I phoned him and told him to get a taxi. He's been kind to Sarah over the years and we have the room.\" I turned to Roger and made quick introductions.\n\n\"I thought you were joking and now I'm here. I've never seen the ground from here, this is lovely, thank you, thank you very much.\"\n\nHeather, the English Captain, called for a change of bowling and threw the ball to Hayley. She conceded only one run in her first over. The flow of runs had stopped, at least for a few minutes. It seemed to signal a slight shift in the balance of play and that was confirmed when Hayley had the opening batter caught by the wicket-keeper. That was an exciting moment for us and Josh was almost overcome with joy to see his daughter's first-ever international wicket in person, rather than on TV. I was pleased for him.\n\nFor the next twenty minutes, it was pretty even and then we heard the Announcer, on the public address system, \"In her debut international, from the Pavilion End, Sarah Hardy.\" There was polite applause from the crowd and gasps in the box. Meredith was shaking and everyone looked apprehensive. That wasn't helped when the batter sent Sarah's first ball to the boundary to score four runs. On her next ball, she overstepped the crease and was called for a 'no-ball'. I could see that she was nervous and at the end of the over both Hayley and the captain spoke to her. From where we were, it looked like encouragement. I watched her as she trudged into the outfield to take up a position near the boundary at deep square leg, the spring in her step wasn't as pronounced as it had been.\n\nHayley delivered her next ball which looked short, the batter took a mighty swing and missed. On the next delivery she tried the same thing, this time she connected with the ball, but not cleanly and made it soar high into the air. I jumped up from my seat yelling, \"It's heading towards Sarah!\"\n\nSarah ran a few yards towards the ball and I could see her concentrating, never taking her eyes off of it as it came down and she caught it with a slight wobble. The crowd went crazy, but compared to the behaviour in our box, they could have been asleep. Eric looked up at me with a huge grin and said, \"That's my girl.\"\n\nOlivia and Karen were dancing a jig and whooping. \"I can't believe that my friend is playing for England and I was there for her first game. I'm so proud of her. You must be chuffed Mrs Hardy and you Mrs Sharp.\" Josh and Roger high fived, then toasted Sarah and Hayley with another beer\n\nSarah's shoulders were no longer slumped, she looked relieved. I suspect that they'd planned that scenario and it made me happy that the team had confidence in Sarah to play her part. Her second over didn't result in any runs for the opposition, a 'maiden over.' I knew that would have helped her confidence a lot.\n\nIt was still fairly even when Sarah stepped up to bowl her fifth over. Her first ball raced to the boundary and I could lip-read as she swore to herself. The next ball seemed to puzzle the batter and when I checked the replay, I saw that she'd found some turn or spin, the ball had deviated from the trajectory the batter had expected.\n\nThe next ball did the same, but it must have nicked the edge of the bat and one of the fielders in the 'slips,' behind the batter, caught it low down by her ankles and threw the ball upwards in celebration. Sarah turned towards the umpire with her arms raised, her long hair flying out behind her as she appealed with confidence. The Umpire didn't hesitate and raised a single finger to indicate that the batter was out. Sarah punched her fist into the air, she'd claimed her first wicket, on her debut. She was mobbed by her teammates and for just a moment she looked up towards us with a huge smile. If I'd thought that the celebrations in our box that followed her taking a catch were a bit crazy, now I realised that they were restrained. I sat down with a bump and as I looked around, I saw that Eric and Cathy were both in tears. Meredith grabbed me, crying through a huge grin and she used her tissue to dry my eyes. She leaned in and whispered, \"That's our little girl.\"\n\nI was shocked by her statement, then moved and flattered. I'd tried to help and encourage Sarah. I didn't ever expect her to be so good, but I was happy and very proud.\n\nHayley took two more wickets and didn't concede many runs either. She'd also been excellent in the field saving many runs with her athleticism. Josh, Pauline and Celia tried to be restrained but failed and even Eric danced with them.\n\nSarah took another wicket late in the game, trapping the last batter, leg before wicket. The South African women had scored 221 runs. Not a bad score, but given that they got off to a good start, it should have been more than 250.\n\nWe all managed to sit down for lunch happy and for the time being, not full of pent-up nerves. I stood up to pour myself a glass of wine and saw Sarah's picture on the TV screen. I turned up the volume to hear a discussion about her performance. One of the expert team said, \"I saw Sarah on the development team tour in Barbados earlier this year and she impressed then. I thought that she was a good prospect, I was a bit surprised that she's in the team today, she's barely twenty, but that's been a fine debut so far.\"\n\nOne of the other experts added, \"And she's making her debut on her home ground, where she saw her first game just five years ago. I'd guess that her family are thrilled.\"\n\n\"Got that right\" I muttered.\n\nWhen the England batters took the field for their innings, they scored consistently and kept up with the required run rate, but only just and they lost a few wickets along the way. Hayley was batting at number five and as her name was announced there was a hush in our box. But she immediately looked assured and confident, managing to keep scoring runs without any drama.\n\nEngland needed another forty runs to win and it looked as if it was going to be close when a sixth-wicket went down. The stadium Announcer induced more nervousness, \"Batting at number eight, Sarah Hardy.\" We stood to cheer and clap, but my nerves were bad and I had to sit down again. I laughed when I heard Eric asking, \"Would someone bring me a brandy. I'm going to need it.\"\n\nHayley went a few yards to meet Sarah as she walked out swinging her bat. She put an arm around Sarah's shoulder, I presume, to offer some words of advice. I turned to the others and said, \"I'm pleased the two of them are together, it should help Sarah. I know that she was excited to be playing with her hero.\"\n\nSarah blocked the first three balls, not too bad, but they needed to keep scoring runs. The fourth ball was a fast vicious delivery that lifted off the pitch and soared towards Sarah's head. The next few seconds seemed to happen in slow motion, as Sarah raised her bat, the ball hit the edge of it and sailed high over the head of the wicket-keeper before it whacked into the advertising boards along the boundary. She was off the mark. The next ball was sent back past the bowler and they ran two runs.\n\nEngland were on 217 with eight deliveries still to come and Sarah was at the crease. She drove the ball towards mid-wicket and they dashed a quick single, taking her score to 15, not bad for a debut. That meant that the next ball was faced by Hayley, it was short and she leaned into it driving hard, back past the bowler and it barely slowed as it raced to score four runs hitting the boundary rope right below us, taking the total to 222. Hayley and Sarah hugged each other with delight and we went nuts again. Through my tears of happiness and pride, I happened to see Sarah and Hayley both grab a stump each before running off the pitch to join their teammates.\n\nA few minutes later the two teams came out onto the field to shake hands and that was followed by the prize presentation. I wasn't surprised when Hayley was named player of the match, handed a cheque and a bottle of champagne. Her parents were ecstatic and I felt very proud of her. Celia grabbed me by the waist, \"Thanks for today, it was spectacular. I'm so proud of Hayley and I'm pleased for Sarah. Josh is in pieces.\" His tears flowed freely as he watched his daughter on TV being interviewed.\n\nI'd arranged champagne for us as well. I sat there feeling happy but drained. It took half an hour before I saw Hayley and Sarah making their way across the field towards us. They disappeared from view below us and it took another ten minutes before they appeared in the box, having had to sign autographs along the way. There were lots of hugs and many more tears. Sarah took Eric's hand and bending down, said, \"Grand-dad, I'm so pleased that you were able to be here today. I took this stump as a souvenir and I'd like you to have it.\"\n\nHe looked at her with affection before barely managing to utter, \"I'm so proud of you, I've always been proud of you. You were terrific today. I'll look after your stump and I may take it down to the club, to brag a little.\"\n\nI sat in the far corner of the box looking at the people who were there; my friends and family. I loved Meredith and Sarah dearly, my life had changed a great deal in the last few years and it gave me great pleasure. I was lost in thought when Cathy sat next to me and took my hand. \"Thinking about your wife?\" She asked.\n\n\"Sort of, I was thinking about how much my life has changed. I love your daughter and Sarah, I'm very happy, but I wish that Dee could have enjoyed today as well.\"\n\n\"I remember once asking you about your age difference and you told me that if Dee had been twenty years younger, she wouldn't have been the same person. She influenced you, she helped to make you who you are today. Because of that, you've enhanced my family's life no end. I wish that I could thank her myself.\"\n\nI started to weep; she was right. I'd enjoyed the love of a lot of special people.\n\nBut there was no point in tears, so I stood up and said loudly, \"Right you lot, everyone back to our place, I have champagne and I want to celebrate.\"\n\nThe end\n\nThank you for reading; I'd love to hear your comments. I've decided that there will be follow-up stories centred on Sarah and her friends."
    ],
    "authorname": "sandy_paris",
    "tags": [
        "lesbian",
        "lesbian romance",
        "love story",
        "romance",
        "women",
        "cricket"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/amy-makes-a-new-life"
}