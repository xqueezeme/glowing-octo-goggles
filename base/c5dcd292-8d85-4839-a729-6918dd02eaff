{
    "title": "Flying Blind Ch. 07",
    "pages": [
        "This story is a bit wordy and fairly long, so if you are looking for immediate gratification, you might want to look elsewhere.\n\nThe following story is a work of fiction. Any resemblance between these character and events and any real person or events is strictly coincidental . . . and pretty darn impressive seeing as it is a science fiction story. Do not reproduce or copy this story without the consent of the author.\n\nThis story is based in an alternative universe, where history took a different course than the one depicted in my other stories. It also takes place at a fictional town in Colorado called Crystal Pass and a fictional school called Four Corners University.\n\nThe following story contains lesbian sexual activity.\n\n---------- \n\n\"We feared the heartlessness of human beings, \n\nall of whom are born blind, \n\nfew of whom ever learn to see.\"\n\n~ Georgia O'Keeffe\n\n---------- \n\n\"How's he doing?\" Heda asked, sitting up on the sofa the moment her brother and Kevin walked into the house. It had been two days since Neil Reichert, King of the reptile shifters, had collapsed in his own home, the target of a nasty spell undoubtedly instigated by Daryl Mosley, resident serial kidnapper, murderer, and all around psychopath.\n\nIt was Kevin who spoke this time, though he sounded tired. Kevin was an alchemist of some repute, though his normal concoctions consisted of various recreational hallucinogenics. But whatever was afflicting King Reichert was magical, and it required magical medication. \n\n\"Honestly? Not what a monarch is supposed to look like. We've got stuff in his veins that is keeping his blood warm, but his organs are trying to freeze all by themselves.\"\n\n\"We need to find him. This isn't even blood magic, or at least nothing that I've ever heard of,\" Ed added, flopping down on one of the couches with a profound lack of dignity. Joanna, Heda's buxom best friend, quickly moved into sympathetic shoulder-rub position. \n\n\"And we don't have the slightest idea where to look,\" Heda said.\n\nEdgar looked a bit red in the face. \"Yeah, about that,\" Ed said, \"the council has decided that they don't want student participation in the investigation anymore. Except for Kevin's particular expertise, everyone is supposed to back off.\"\n\n\"What?!\" came Heda's voice overriding the sudden clamor from her friends. \"Why? We found Detrius or Daryl, or whatever the hell he is calling himself, the first time. We can find him again.\"\n\n\"Heda, don't bust my ball about this. The World Council has sent in the best investigators and sorcerers in the world here. If there's a way of tracing this guy, they'll do it. I'll be lucky if I'm allowed to stay on, seeing as I kept you all in the loop, thereby putting you in danger.\"\n\nHeda let out an undignified snort. \"Like you could've stopped me.\"\n\n\"I'm serious,\" Ed replied, as sternly as he could, \"Putting you guys in danger is not going to win me any points with the powers that be. Heda, I might be able to bring you in on any actual hunts, just because of Mom's rep, but --\"\n\n\u2028\"To hell with that,\" Heda said angrily. \"That son of a bitch kidnapped and tortured Carla and Madison. You saw what she looked like when we pulled her out of that damn lair.\"\n\n\"Yeah, I remember. And I don't want anyone else here to get found like that.\" He sighed, then looked a little sheepish. \"And since I know you're not normally inclined to let things go --\"\n\n\"Ed, what did you do?\" she asked, her voice dripping with suspicion.\n\n\"I kind of called Mr. Hannity and had him suggest to Madison that they should have ALL of you guys out there for a weekend.\"\n\n\"Why the hell would you --\"\n\n\"Because once Madison calls and starts with the girlfriend pleading, you won't be able to resist.\"\n\nHeda's eyes were slowly growing wider. \"You complete asshole!\"\n\n\"And then you'll be out of my hair for a few days --\" Ed had to scramble to get out of the way as his sister lunged across the coffee table and attempted to throttle him. Billy, Anthony, and Peter had to grab her, put her on the couch, and sit on her to prevent her from causing serious mayhem.\n\n\"She's stronger than she looks,\" Billy said.\n\nThis time, Edgar's eyes shot open. \"Oh crap. I forgot about her --\"\n\nHe did not even get a chance to finish the sentence before Heda's Gift kicked in. The eagle-shifter's eyes were glowing and she promptly bucked, causing all three men on top of her to go flying off of the couch. Heda's Gift made her insanely strong and fast.\n\n\"I told Mom too,\" Ed said, running for the door. \"She's going to meeting with you guys out there.\"\n\n\"You told Mom? You candy-ass, chicken-shit, piece of --\"\n\n\"Gotta go!\" he said, slamming the door in his sister's face. The rest of the gang managed to cause enough interference to keep her from getting to him before he got to the rental car. She was getting ready to give chase when her phone started to ring. A quick peek made her sigh. \n\n\"Hi Madison,\" she said, trying to keep her voice steady, aware that she was being watched by the rest of the crew from the doorway. \"Yeah, about that trip . . . no, of course I want to see you,\" she said through gritted teeth as she plotted her brother's death. \"No, I don't have a game this weekend. I don't know if he can. You'll have to ask him.\" She stormed back to the house and handed the phone to Billy.\n\nIt was the wereturtle's turn to sigh, then put the phone to his ear. \"Hey psycho. Yeah, I just heard. Well, I'm in charge of the station --\" He rubbed his hand over his face. \"No, of course we want to see you --\"\n\n------------- ---------------\n\nThat weekend . . . \n\n------------- ---------------\n\nAs she kicked back next to the pool in a hot little two-piece swimsuit drinking a flavorful fruity drink, Heda accepted that maybe taking the weekend off was not such a bad idea. Most of the gang had been able to make it out, all on Mr. Hannity's dime, though Kevin and Peter were still back at the university. \n\nJoanna was in a suit that might better be described as green dental floss, and she was quite the center of attention. Once Morgan had realized that her sister's cool college friends were coming to visit, she had invited all of her \"super cool\" high school friends over, and things had turned into a party pretty damn quickly. Both Joanna and Anthony had been strictly warned against \"hunting underaged game\" by everyone who knew them, though they both certainly relished the attention. \n\nHeda's parents had indeed shown up. Her dad was talking with Mr. Hannity about investment properties, the famous Jessica Adler was in the kitchen (of course) with Carla and Mrs. Sanchez, the voodoo priestess cook. Heda doubted she'd see her mother until dinner.\n\nMostly, she just let herself unwind. Sure, a few of the high-schoolers hit on her, but most of them were either staring at Joanna's chest or grilling Madison and Carla about their times in captivity. For Carla, it had become a kind of therapy. For Madison . . . well, she was still getting there. For Madison, the real reward was being the center of non-hostile attention. It was another thing that was going to take some getting used to. But Heda noticed how much she glowed when people talked to her in friendship rather than about her in malice.\n\n\"Would you stop doing the googly eyes thing at her?\" Joanna said with faux sternness. \"It's kinda sad.\"\n\n\"Hey, I am not making googly eyes. I'm just happy to see her enjoying herself.\" Heda sipped her drink. \"Besides, you're just jealous because my brother isn't here for you to drool over.\"\n\n\"That's beside the point. Hmm, I bet your brother looks hot in swim trunks, especially when he's doing that slow motion walk out of the water . . . yummy. Don't ya think?\"\n\n\"I hadn't thought about it,\" Heda replied dryly. \"Being related by blood and all.\"\n\nJoanna dismissed the excuse with a wave of her hand. \"Mind putting some lotion on my back?\"\n\n\"Get one of the boys to do it. If I did it, we'd probably put some of these youngsters through puberty.\n\n\"I'd say a few of them already made it,\" the werecobra replied, staring over her sunglasses at the captain of the football team. \n\n\"Joanna --\"\n\n\"I know, I know. Stay away from the veal.\"\n\nHeda laughed. \"Slut.\"\n\n\"You say it like it's a bad thing.\" Joanna looked around. \"Oh Anthony,\" she called adoringly.\n\nHeda got out of her chair before the hardcore flirting started. True, Joanna was bonking Edgar those days, and Anthony was more often than not in Carla's company, but the two just enjoyed playing with each other far too much. Instead, she headed to the waterslide, grabbing Madison by the hand as she walked by.\n\n\"I guess that means we're leaving,\" Madison said, hurrying to catch up. \"You know, if you're just gonna interrupt me, the least you could do is --\"\n\nHeda turned around and planted a kiss that had Madison up on her tippy-toes in no time.\n\nFrom somewhere across the property, two fatherly voices shouted, \"A little decorum!\"\n\nMadison looked confused, her eyes scrunched behind her sunglasses. Because many of Morgan's friends were human, Madison was having to keep up the \"blind\" act. \"How do they know?\"\n\n\"It's like radar for fathers,\" Heda explained. \"Don't ask me how it works. I just ignore it.\" Then she gave Madison another kiss, just to drive the point home. When she broke, \"Damn, you look good. No problems?\"\n\n\"Nah. Last of the burns cleared up the day before you called. Now, I'm just under house orders to drink lots of fluids. Really, a fish would be on a twelve-step recovery program from all the water I drink.\"\n\n\"I'm glad your internship interview went well.\"\n\nMadison lit up like a bulb, her grin shining for all the world to see. \"I'm mostly just co-hosting, but still . . . I'm gonna be on a big-time station!\" She started to bounce up and down and spin in circles.\n\n\"You're making me dizzy. Stop.\"\n\n\"Sorry,\" Madison said, more out of breath than actually apologetic. She threw her arms around Heda again just hugged her girlfriend for a moment. Her smoking hot, hard-bodied girlfriend. Her \u2013\n\n\"Let go, or at least buy me dinner first.\"\n\nMadison blushed. \"Your Mom's helping make dinner. Making you a cheap date.\"\n\n\"I like to think of myself as easy rather than cheap.\"\n\n\"Easy? You call yourself easy? I had to repeatedly kick your ass before you would take me seriously.\"\n\nHeda raised an eyebrow. \"Repeatedly?\"\n\n\"Okay, mostly in my head --\"\n\n\"Mostly?\"\n\n\"Fine. But in my head, it was always a complete butt-whooping by me.\"\n\nHeda kissed her girlfriend again. \"You're crazy.\"\n\n\"Duh.\" Madison placed her head on Heda's chest and sighed. \"I miss this.\"\n\n\"Me too. But it's just for the semester, then you can come back.\"\n\nMadison let out a growl. \"I hate him.\"\n\n\u2028\"I know,\" Heda replied, stroking Madison's long, soft hair. \"But you can't let him control your life. Enjoy being with your family and your kickin' new gig, and you'll be back with us before you know it.\"\n\n\"Bah. No logic. Entertain my bitchiness.\"\n\nHeda grinned. \"I'm in too good a mood. Wanna try to do some flying?\"\n\nMadison made a face. \"I promised I wouldn't fly off the property until this guy gets caught.\"\n\n\"Even if everyone else went with you?\"\n\n\"Dad's thinking is that we would all be too vulnerable in our animal forms, and we couldn't switch to half-form out of fear of exposure.\"\n\n\"Your father is too smart for his own good.\" Heda's grin got broader. \"So, have you gotten used to calling him 'Dad' then?\"\n\n\"I practiced saying it for twelve years before I figured that I'd never get to say it for real to anyone. I like the sound of it.\"\n\nHeda's lips sought out Madison's again. It was a warm, lingering kiss, and it left both girls tingly in all sorts of places. To help cool off, they both took any number of rides down the slide, followed by . . . well, more sliding. Then they headed over to the kitchen to find some snackage. \n\nHeda's mother was having a lively discussion with the cook, Mrs. Sanchez, when the two girl's arrived. Something about sauces and temperatures and other things that neither younger woman really had any grasp on.\n\n\"Staying out of trouble?\" Jessica Adler asked, her eyes not even searching out the object of her question.\n\n\"Mom, what possible trouble could I get into sitting at poolside drinking fruity drinks?\"\n\nThat was when the elder Adler woman's gaze shifted. \"Need I remind you of the incident at the resort on our Disney vacation of 2001?\" She looked at Madison. \"There's a reason why it is no longer the 'happiest place on earth'.\"\n\n\"YOU were the one who got us kicked out Orlando studios,\" Heda countered. \"The name of the restaurant was 'Margaritaville'! Of COURSE they were going to play that song over and over again.\"\n\nAnd just like that, the conversation was off. The two Adler women could not be in each other's presence for more than ten minutes or so without the Debate, capitalization and all, starting up again. Apparently, it was all part of some weird ongoing conversation/argument that the two had been having since Heda was six years old. They both enjoyed it far more than they would admit.\n\n\"Can I have a popsicle?\" Madison asked of the cook. \"This could be a while.\"\n\n\"You need to eat more,\" Mrs. Sanchez replied gruffly. \"You're too skinny.\"\n\nMadison knew better than to talk back on this. Mrs. Sanchez believed that all woman should have \"more meat on them,\" unable to grasp that there were reasons you never found a fat changeling. \n\n\"Two popsicles then?\"\n\n\"I'll fix you some profiteroles.\"\n\nMadison had no idea what those were, but she was sure they would be incredibly delicious. Mrs. Sanchez believed in taste over health. The bat-shifter glanced over to where the Debate had turned to which of the two women were in fact more stubborn. Madison almost smirked, enjoying the irony of it. \n\nAbout then, Mr. Hannity and Mr. Adler walked into the kitchen, holding bottles of expensive imported beer and talking about sports. Not the athletics of them, mind you, but about the architectural garishness of the new Cowboy stadium. Mr. Adler gave his wife a peck on the cheek, careful not to say anything that would get him sucked into the Debate. He was a referee in that tradition, not a participant. \n\n\"Should we say something?\" Mr. Hannity whispered to his daughter, he eyes on the heated exchange.\n\n\"Not if you value your life. Interfere and, from what I understand, they'll both turn on you.\"\n\nMr. Adler leaned up against the encounter nearby and nodded. \"She learns quickly.\"\n\n\"She's a smart girl.\"\n\nIt was a small compliment that most people would barely notice. Madison's entire being glowed. Apparently, paternal affection mattered to her, whether she would ever admit it or not. \n\nA few hours later, after the humans had gone home and an amazing dinner had been sampled, the Adlers, the Hannitys, and assorted company were lounging around the family room, which Morgan continuously claimed had its own area code. Billy, Jessica, Mr. Adler, and Heda had found a Scrabble game and an audience. Madison's father had made sure that there was a braille version around, so this time she could actually follow along. Sort of. She had no understanding of more than half the words that got played, and she could not pronounce about a fourth of them. \n\n\"Okay, what the hell does 'yanquis' mean?\" she asked when the game finished up, with Jessica Adler winning by a mere two points. \n\nHeda was glowering at the pieces, attempting to see if something might have been miscounted. \"It's a translation of 'Yankee,' from a perspective of someone from Latin America about those not from Latin America.\"\n\n\"And that counts?\"\n\n\"It's in the Scrabble dictionary,\" her girlfriend sighed, sinking into her chair and accepting defeat. \"I should have seen that coming,\" she muttered. \"I knew that the 'q' and the 'y' were still out there --\"\n\n\"No one's perfect,\" Jessica replied smugly. \n\n\"Oh crap,\" Mr. Adler said, as the Debate began again. \"She just had to rub it in --\"\n\nMadison retreated to the kitchen, carrying dishes with her despite being told repeatedly by her father that he had a staff for that. But she had always taken care of her own things, and it was a hard habit to break.\n\nMrs. Sanchez let out a huff when Madison came in. \"You, you crazy girl. Let me wash up.\"\n\n\"I got it. My girlfriend is gonna be arguing with her mother for a while, so I might as well make myself useful.\"\n\nMrs. Sanchez moved over to help rinse. \"That woman of yours should've been Mexican. Too full of fire to be a white chick.\"\n\nMadison laughed. \"I think she'd take that as a compliment.\"\n\n\"She should. We hot.\"\n\nMadison had often stopped to talk to Mrs. Sanchez, but this was the first time she had spoken to her like they were both normal people instead of boss's daughter and boss's employee. Madison snickered. \"Could I be Mexican?\"\n\n\"Nah, you too cranky to be Mexican. Cuban, maybe, but not Mexican.\"\n\nThe two of them chatted for a while, doing dishes and discussing the finer points of raising a large family. Mrs. Sanchez had seven kids and ten grandchildren, and she was the undisputed matriarch of the whole damn thing. \n\n\"You . . . you should think about having children. They be beautiful, just like you.\"\n\nMadison blushed. \"I do believe that lesbians have a relatively low rate of reproduction.\"\n\n\"Bah. Between the magics and the science, it can happen. Maybe use part of that bird girl. Those would be some gorgeous youngin's.\"\n\n\"Can voodoo do that?\"\n\n\"Maybe. Never tried. Offerings to Erzulie Freda Dahomey might do it.\"\n\nMadison cocked her head. \"Hey, I thought voodoo was from Haiti, not Mexico. How'd you get into it?\"\n\n\"What you gringos call voodoo is actually a whole bunch of different ways of believin' from a bunch of different places. Personally, my momma spent a bunch of time in northern Louisiana, then moved back to Mexico. She learned it there, and taught me.\"\n\n\"How does it work? It's the one discipline they don't teach in any of the schools.\"\n\n\"That's 'cause it ain't a discipline. Ain't you listening?\" Mrs. Sanchez flicked her ear playfully. \"It's a set of traditions and beliefs. Some folk say they're ain't no one way to do it. It's a matter of will, directed through the right focus, with the aid of the loa . . . hell, you can do just about anything.\"\n\n\"What about voodoo dolls? Are those real?\"\n\n\"Can be. Most people don't know how to do it right, but it can work. Nasty dangerous though. The most dangerous kind of sympathetic magic. To attach someone's soul to a doll so you can affect one through the other? Serious emotion there. If it's bad vibes, you can kill someone, and no one could even trace it.\"\n\nMadison slowly put a dish in the sink. \"Why not?\"\n\n\"Sympathetic magic like that only exists in two places. Where the doll is and where the target is. Ain't nothing to trace.\"\n\n\"Mrs. Sanchez, is it just sticking pins in someone or --\" Madison's hands were trembling. \"Could you . . . freeze someone? Like sticking an ice cube in the doll?\"\n\n\"Sweetie, that's just plain sick,\" the older woman said.\n\n\"I'm not saying it's a good thing. I was just thinking about what's being done to King Reichert . . . Oh who am I kidding? If that was it, someone smarter than me would've thought of it.\" She did a quick scan of the room, and saw that Mrs. Sanchez was looking at her with strangely somber eyes.\n\n\"Madison,\" the woman said, her voice reflected her age, \"don't ever sell yourself short. I'll tell you a couple things. One, you're a sore sight better to have around here than Alvin or his mother. You make your father happier than either of them ever did and, quite frankly, I've got half a mind to put a hex on that woman for giving up a child like you. Second, you yourself said it . . . voodoo ain't exactly run of the mill magic. 'Cause what you're saying isn't crazy. Hell, it even kinda makes sense.\"",
        "Madison turned and made her way back out to the main room. \"Heda?\" she asked, doing a quick scan. She did not see her girlfriend immediately, but her father came over, his expression worried. \n\n\"\"What's wrong? You look like you've seen a ghost.\"\n\n\"I just . . . I think I may know what's happening to King Reichert.\"\n\n\"Honey, he's got the best researchers in the world looking into it and --\" Mr. Hannity stopped when he saw his daughter's face fall. He did not want to be just another person who did not listen to her. \"What's your idea?\"\n\n\"It doesn't matter. Who's going to believe me?\" she asked.\n\n\"I might,\" Heda said, appearing beside her. \n\n\"Madison, go on,\" her father told her. \"You made it this far in life by being smart. So who am I to say that you're wrong before you've said anything.\"\n\nMadison took a deep breath, then unleashed everything in one fell swoop. At a certain point, Mr. Hannity asked Mrs. Sanchez in to confirm a few aspects of Madison's hypothesis, but otherwise waited for Madison to finish.\n\n\"It's not a bad idea,\" Mrs. Adler said, \"though one that would be very hard to follow up on.\" She glanced sideways at her daughter. \"Not that I'm encouraging anyone to follow up on it except the proper authorities.\"\n\n\"But --\"\n\n\"Heda Kimberly Adler, YOU are not an official investigator. The moment you pass the exams that allow you to enter active service, you can participate in these kinds of investigations, but --\" She stopped when she saw Madison snickering. \"What?\"\n\nThe bat-shifter turned to her girlfriend. \"Your middle name is Kimberly?\" \n\nHeda flushed a bit. \"Yeah? What of it?\"\n\n\"I just thought it would be something . . . macho.\"\n\n\"Kimberly is a perfectly good middle name,\" Heda grumbled.\n\n\"It comes from her great grandmother, who was a dear woman with impeccable manners. I was HOPING it might carry over, but apparently those particular genes are recessive in this generation.\"\n\n\"When it comes to behaving myself, I learned everything I know from the maternal side of the family,\" Heda shot back.\n\n\"Sweethearts,\" Mr. Adler said, \"no more Debate for the evening. We've entertained our hosts quite enough for one evening.\"\n\n\"But Dad --\" Heda started to say.\n\n\"But Thomas --\" Jessica added.\n\nMother and daughter looked at each other, then Jessica sighed. \"Okay, point to you.\"\n\nAn hour or so later, everyone had retired to his or her own room. Madison was still a little wound up from her first foray into the world of magical investigation, so she was grooving to some music wafting over from her Ipod docking station when she heard a light knocking on her door. \n\n\"Yes?\"\n\n\"Hey, it's me.\"\n\nMadison raised an eyebrow. \"Me who?\"\n\n\"Meluv U. Longtime.\"\n\nShe opened the door and peeked out. Heda was just standing there, smirking. \"Really,\" Madison started, \"that's the best you can do?\"\n\n\"Nope. Just the best that I can do through a doorway.\"\n\nMadison smiled. \"I seem to recall you could do pretty well two states away.\"\n\nHeda took her girlfriend's face with both hands and kissed her. \"How was that?\"\n\n\"S'all right.\" Madison's response got her another kiss that made her toes curl, her heart-rate go up, and wound up with her pressed up against the wall of her bedroom. \"Better.\"\n\n\"That was a good idea today. Don't know if it'll pan out, but it was good.\"\n\nMadison sat back on the bed. \"You're not going to let it go, are you?\"\n\n\"What makes you say that?\"\n\n\"I can actually see you planning how you're going to investigate everything. It's as plain as the nose on your face.\"\n\nHeda sat down next to Madison. \"I can't. I think now I know why Mom kept running off to fight the war or doing whatever the Council asked of her. I just can't stand the idea of that guy running around free after everything he's done.\"\n\n\"You'll get in trouble.\"\n\n\"Like that'll be anything new.\"\n\n\"But this time, you won't be able to out-argue your mother to get out of it.\"\n\nHeda looked her girlfriend over. \"You're seriously trying to talk me out of it?\"\n\nMadison kissed Heda on the shoulder. \"I've gotta try. If you get hurt, you think I won't feel bad about it? That I won't think that I should've tried harder? Mind you, I know it won't work. If I'd only known you for a few minutes, I'd know I couldn't really change your mind.\"\n\n\"I listen, really I do.\"\n\n\"But you're stubborn as --\"\n\n\"Don't you dare say --\"\n\n\"-- your mother,\" Madison finished. Heda promptly jumped on her girlfriend and started to tickle her. \"Stop! Someone will hear!\" she gasped.\n\nHeda did stop, then lay down on top of Madison. \"Shut me up.\"\n\nMadison's mouth opened, then shut, then opened, then shut. Finally, \"I promised . . . Dad . . . the clothes would stay on.\"\n\n\"\"Well, you can do a whole lot with your clothes still on,\" Heda whispered nibbling on Madison's ear. \"But if you'd rather I leave --\"\n\n\"If you leave me high and dry right now, I will hurt you,\" Madison gasped, pushing her body against Heda's. \n\nHeda worked her hips until Madison spread her legs, then settled in between them for some serious petting. Madison realized that for being dressing, there was a lot of skin touching skin. Madison had on her underwear and an oversized sleeping shirt, while Heda only had a tight pair of shorts and a sports bra. Heda took Madison's hands and put them on her ass.\n\n\"I love your butt,\" Madison murmured, digging her fingers in while hooking Heda's knees with her ankles. \"Can I keep it?\" \n\nHeda stopped sucking on Madison's neck for just a moment. \"I don't think I could pry it away from you if I wanted to. I'm just glad that it's in capable hands.\" She yipped lightly when Madison pinched her butt.\n\n\"Just checking to make sure I'm not dreaming.\"\n\n\"You're supposed to pinch yourself!\"\n\n\"What fun would that be?\"\n\nHeda grinned, sliding her hand between their bodies and fondling Madison's nipples through the cotton shirt. She would have given her wing feathers to get her hands on the actual breasts, but she would not make Madison break her promises. This was kind of fun anyway. \"You teased me about my breasts last time,\" she whispered huskily, \"but I seem to recall that yours are pretty spectacular.\" \n\nMadison ground her body against Heda, strongly resisting the urge to thrust her hands under those tight shorts. Heda just had a body that begged to be touched. The \"clothes stay on\" rule was going to drive her nuts. She needed to discuss this with her father. Later. Right now, she wanted some nookie, or as close as she could get.\n\nSince Heda had caused some separation, Madison used it to place her hand over the damp sample of cloth covering her girlfriend's sex, then began rubbing small, rapid circles around her swollen mound.\n\n\"You should have left your swimsuit on,\" Madison breathed, \"because I really want to get you wet.\"\n\nHeda bit her bottom lip and pushed her crotch against Madison's hand. A few months ago, she doubted Madison could even have imagined talking like this, but now each little innuendo rolled off of that silver tongue like nobody's business. Another good thing about that tongue was how if fit in Heda's mouth, amongst other places. But right now, kissing was the only thing on the menu, so she sampled the local flavor. \n\nHeda pushed up with her arms and began moving her hips as if she were fucking Madison, locking her eyes on those of her lover. She fucked Madison's hand until she just couldn't take it anymore. She leaned over and locked mouths with Madison, moaning into her mouth as she came.\n\nMadison cold feel the pulses of sweet wetness dripping onto her hand, and she instinctively brought her fingers to her mouth for a taste.\n\n\"Do you have any idea how much I missed you?\" Heda said. \n\nMadison held up her fingers. \"This much?\"\n\n\"That's a start.\" Heda crawled down and placed her face between Madison's eager thighs, pushing them apart until her underwear came into view. She grinned when she saw a glimpse of the \"Hello Kitty\" underwear. Apparently Sasha had bought them for her on a lark. Madison could not see the designs of course, but claimed they were very comfortable. Heda rubbed her nose over where she knew a sensitive little nub was anxious for some attention. \n\nMadison grabbed one of her pillows and bit down hard on it as Heda began an above-the-covers lick-and-nuzzle fest that was making her want to scream like a banshee. She gripped Heda's head with her spare hand, feet planted on the comforter and back gently arched.\n\nHeda was in no hurry whatsoever, feeling all of Madison's sensual bits through the teasing garments that protected them. She ran her fingers up and down the bat-shifter's legs as she pushed her tongue into her girlfriend's panties, causing gentle shudders and adorable growling noises.\n\nOne of the best things about being with Madison, in Heda's ever so humble opinion, was seeing and hearing these reactions. She adored the way those long legs seemed desperate to find solid footing, or the way her flat tummy bounced when she gasped. And the growling, moaning, and occasional squeak were a symphony of delightful sounds, almost as enticing in their own right as the sexy voice that Heda had fallen for.\n\n\"When you come back to college,\" Heda whispered, blowing hot breath across the slight section of belly skin that had become exposed during Madison's gyrations, \"I think I'll just lock you in my room with me and not let you wear clothes for days.\"\n\nMadison stopped gnawing on her pillow and said, \"Well, aren't we getting a little pushy. Who says . . . ah, don't stop!\"\n\n\"Don't stop what?\" Heda asked not-so-innocently.\n\n\"Touching that . . . that . . . ahhhhhh,\" Madison let out in a long gasp, shaking as she orgasmed. \n\n\"You mean that?\" Heda said, kissing the clitoral area and licking up some of the moisture seeping through \"Hello Kitty's\" whiskers. \n\nMadison lay flat, almost as if she were contemplating making a snow angel. \"Phone sex ain't bad, but that's soooo much better.\"\n\nHeda flopped down next to her girlfriend, kissing her while tracing the line of her jaw with one finger. Then she sighed. \"I suppose I'll need to head back to my room.\"\n\nMadison made a grimace. \"I'd rather you stay, but I don't think I want to face your parents and Dad if you did.\"\n\n\"So, I guess I'll be going --\"\n\n\"I guess you should --\"\n\nIt wound up being a little while before anyone went anywhere or anyone got any sleep.\n\n---------- ----------------\n\nA few days later . . .\n\n---------- ----------------\n\n\"Heda, remember the whole 'non-interference' clause laid out when you told your brother about Madison's plan?\"\n\nHeda growled as she walked out of the third \"black magic\" shop of the afternoon, then climbed into Peter's car. \"Not really. I was thinking about how I was going to help.\" She grabbed her Mountain Dew from the cupholder. \"Why? What did they say?\"\n\nPeter rolled his eyes and started up the car. \"To NOT interfere.\"\n\n\"Good thing I didn't hear that then, isn't it?\"\n\n\"Okay, why are we hitting these dives anyway? Not a one of these is a reputable dealer.\"\n\nHeda tapped her head. \"If he had gone to a real magic dealer or teacher, we would have heard about it. His picture has been passed around to the whole community.\"\n\n\"But he could've gone anywhere.\"\n\n\"Nah. This guy hasn't strayed far from home since his mentor croaked. He can't have. You saw how much work he had put into that lair of his, and scoping out the campus yada yada yada --\"\n\n\"Got it.\" Peter scrunched his eyebrows.\n\n\"What? Heda asked. \"What is it?\"\n\n\"Oh, just thinking. Strangely, your logic doesn't completely suck.\"\n\n\"Screw you too.\"\n\n\"We've already eliminated that possibility.\"\n\nHeda laughed. \"I should tell Anthony that I let you feel me up. It would drive him bug-nuts.\"\n\n\"You could let me feel you up. Then it wouldn't be lying.\" That comment earned Peter a punch in the arm.\n\n\"No one touches this bod but me and Madison. And a really good masseuse.\" Heda punched an address into the GPS, then leaned back. Peter punched in some tunes, then started to whistle along. Heda rolled the window down and let the cooling air flow past her face. It was times like this that she realized why dogs did it. Pity eagles did not have that sense of smell.\n\nHeda was bound and determined to keep herself busy. She had tried to abide by the wishes of the investigating officers. Really she had. That had lasted for about two watered-down movies on Comedy Central and a bowl of popcorn, then she had decided to do this instead. And Peter had the afternoon off.\n\n\"So,\" Peter said after ten minutes of quiet, both of them enjoying the drive through the country through a podunk town in northern New Mexico, \"Have you seriously thought about trying to be Queen someday?\"\n\nHeda was able to aim towards the open window when Mountain Dew went flying out her nose. \"Gods, that burns! Where the hell did that question come from?\"\n\n\"Just curious. A lot of people are already expecting you to try at some point. Maybe when Queen Brown steps down --\"\n\n\"I haven't even graduated college! And anyone with sense wouldn't challenge Samantha. I've seen her spar with my Mom, and she's scares the crap out of me.\"\n\n\"I noticed you haven't answered the question,\" Peter pointed out.\n\n\"Fine. No, I haven't thought about being Queen. I don't want to think about it.\" She rubbed her eyes, which had teared up due to the stinging caused by snorted a heavily caffeinated beverage. \"Who the hell's been saying that?\"\n\n\"I dunno. Everyone. Ever since you came on campus and started stirring things up --\"\n\n\u2028\"I did NOT!\"\n\n\"Let's see, you took on the resident bully, you've given the most powerful monarch on the planet a migraine, taken a social pariah and turned her into a folk hero, you've pursued a psychopathic serial killer into his lair . . . yeah, you've made some waves.\"\n\nHeda snorted. \"I'm sure they've got people who have done weirder stuff at the other shifter colleges.\"\n\n\"Nope,\" Peter replied. \"I looked it up. There's a boar-shifter in Munich who threw a kegger that wound up burning down the library, but apparently that's not such a big thing in Germany.\"\n\n\"Wait, there's websites to see what shifters are doing?\"\n\n\"Yeah. You didn't know? There are pools on likely candidates for each crown.\"\n\n\"Bullshit,\" Heda said, grinning and looking out the window. Then she looked back. Peter looked serious. \"Really?\"\n\n\"You've made the top hundred faster than anyone. No one else under the age of twenty has broken in before.\"\n\nHeda looked out the window again. Part of her still thought that Peter was screwing with her, but part of her . . . 'Nah,' she thought. \"We almost there?\"\n\n\"Almost there. You're actually freaked out, aren't you? I just figured you knew.\"\n\n\"The only thing I use my computer for is my writing and porn. And sometimes music.\" She glanced at him. \"So where are you?\"\n\n\"I'm not even in the running.\" He pulled into the dusty parking lot of outside of a single-wide trailer that no self-respecting witch would ever let land on them, even in the land of Oz.\n\n\"Okay, this is . . . quaint,\" Heda said. \"Rustic even.\"\n\n\"It's a toilet,\" Peter responded. \"In the middle of a giant litter box. In hell.\"\n\n\"Now you're just being a drama queen.\" Heda walked up and opened the front door, which even provided an antiquated creaking noise as it moved to expose the cigarette and incense laden air beyond. Even without the heightened sense of smell that she had desired earlier, Heda was able to deduce that menthol and cherry scents did not mix pleasurably. \n\n\"Welcome to Madame Katrina's House of Magic!\" came a voice, cloaked in a wretched combination of over-excitement and a fake Transylvanian accent. The woman who emerged, complete with tacky gypsy ensemble, looked like she had seen better days, thought probably not that much better. She looked like the kind of person who lived in the middle of nowhere because she always had and always would. She could have been anywhere from her late thirties to early sixties, and Heda would not have been able to guess where in that range she fell.\n\n\"Hi,\" Heda said, starting into her script. \"Hey, I hate to be a bother, but I was wondering if you could help me out with something.\"\n\n\"Madame Katrina can help you with whatever ails you. Spells, charms, fortunes . . . for fifty dollars, I can do a tarot reading --\"\n\n\"Ma'am, I actually just need you to look at this picture,\" Heda interrupted, pulling a copy of the police picture of Daryl Mosely out of her pocket, \"and tell me if you've seen him in here before.\"\n\nMadame Katrina instantly looked suspicious. \"You two cops?\" she asked, her contrived accent falling by the wayside.\n\nBoth the bird-shifters raised their eyebrows. \"Do we look like cops?\"\n\n\"I'm a legitimate business woman,\" the woman said. \"If you're not here to --\"\n\n\"Madame Katrina, we're not looking to cause you any trouble. We just want to know if you've ever seen this guy in your store or not.\"\n\n\"People come here all the time,\" the woman replied.\n\nHeda doubted that this woman got more than one customer a day, including Black Friday. She suppressed a sigh and dug into her wallet and pulled out a twenty dollar bill. \"Just to look. We think this guy may do something bad, and he thinks 'magic' is the way to go,\" Heda explained, using air quotation marks for \"magic.\" \"Please, it would be great if you could help.\"\n\nThe woman looked at Heda, then the twenty, then back to Heda, she reached out and grabbed the cash as if it were some kind of trick. Finally, she moved her eyes towards the picture.\n\n\"Okay, but I can't --\" Madame Katrina's eyes met those in the image, and she shuddered.\n\n\"You know him, don't you?\" Peter asked quickly.\n\nMadame Katrina suddenly seemed much older, more towards the \"sixty\" end of the scale that Heda had created earlier. \"I wish I didn't. You say this guy might do something bad? I believe that. I truly do.\"\n\n\"When did you see him?\"\n\n\"A couple of times. First time was a year or so ago, and then . . . then he just gave me the creeps. Stared at me as if I were a mutant or something. Looked at everything, asked about the voodoo stuff,\" she added, pointing towards a set of rickety old shelves. \"Never bought nothing. Then he came in a few weeks ago, and --\"\n\n\"He was here?!\" Heda yelped, glancing at Peter. She needed to tell Edgar, so they could get a tracker out here. If they found someone good and the scent had not grown cold, then maybe, just maybe, they stood a chance.\n\n\"Yeah. He looked through the books again. I'd gotten a bunch of stuff at an estate sale from when I was visiting my sister out in Baton Rouge, and he found some stuff . . . he couldn't take his eyes off of it. I remember he was so . . . cold. That's the only word I can think of to describe it. He never threatened me or anything, but I've never been so scared in my life.\"\n\n\"The books, do you remember what they were about? Titles?\"\n\n\"Books like that don't have titles or nothing. That's what made 'em look so authentic. I looked at the pictures once. Sick shit in there.\"\n\nHeda and Peter talked with the woman for a little while, but she was not able to provide any additional information. Heda wound up buying a dream-catcher for her room, then the two of them headed out.\n\n\"Fuck,\" Peter muttered. \"Think those books might have been real?\"\n\n\"There's real voodoo where they came from, so yeah. If a real practitioner kept a journal? Yeah, I think they were real.\" Heda started biting her nails. \"Now, I just have to tell Edgar.\" She grabbed her phone, found her brother's number, then punched \"send.\" \"Hey Ed!\" she said when the phone picked up. \"Uhm, I've got something to tell you. Well, you'll kind of like it and kind of not.\"\n\nShe told her brother everything that she'd been up to since she had decided to ignore the non-interference edict, including the entirety of the conversation with a fake psychic in northern New Mexico.",
        "\"Hey, you guys don't own the whole world,\" Heda said after Ed have given her a few choice words about ignoring him and the Council. \"I am too behaving! Yeah, and how is that investigation going? No, that's not it. You just don't want to admit that I was right and . . . okay, so Madison was right. The blind girl saw something no one else did and . . . Okay, that was uncalled for. You've never been disrespectful to Madison and . . . Hey! You don't need to be disrespectful to me either. Ungrateful prick! Sorry Ed, but we're getting ready to go through a tunnel. You're breaking up --\" she said, then hung up the call and turned off her phone. \n\n\"Uhm, Heda?\" \n\n\"Yeah?\"\n\n\"You already told him we were in New Mexico.\"\n\n\"So?\"\n\n\"There's only one tunnel in this entire state, and its nowhere near here.\"\n\nHeda shrugged. \"Not like he was going to believe me anyway. But at least now he'll go talk to the Council. The only question is --\" She paused, then growled.\n\n\"What?\"\n\n\"How long until I get a call from my mother.\" Just then, her phone rang. She stared at it. It kept ringing. Right before it went to voicemail, she sighed and flipped it back open.\n\n\"Hi Mom. No, there's no tunnel. No, that's not . . .How can I be interfering with an investigation? I'm no place near where they're investigating!\"\n\nPeter smiled as the Debate began. At least he didn't need to worry about entertainment on the drive home.\n\n------ --------------\n\nThat night . . .\n\n------ --------------\n\n\"This is Captain Jack, signing off, but want to once again welcome Ms. Madison Sloan to the KLEZ crew. She's our new intern and if tonight is any indication, I think she'll fit right in.\"\n\n\"Thanks Jack. I just want to thank everyone here at the station for making my first evening so enjoyable. I'll be haunting the Texas skies, hopefully your Texas Hearts, but definitely your Texas ears for the next few months. So keep the first one cleared for take-off, the second one open, and the third one tuned to KLEZ.\"\n\n\"Ladies and gentlemen, looks like we got a winner on our hands. Good night all.\"\n\nBilly reached over and closed the application. Everyone in the house had gathered together to listen to Madison's first program as an intern via the station's website.\n\n\"Goddess, she sounds so sexy. Even when it's digital,\" Heda moaned happily, leaning back in the chair she'd occupied for thirty minutes straight. For her, sitting still that long without a book in her hand was almost a record.\n\n\"I concur,\" Billy said, then glanced at Sasha.\n\nSasha looked for a moment like she was going to object to her boyfriend referring to someone else as sexy, but then she just shrugged. \"She really does,\" she admitted.\n\n\"Heda?\" Came a voice from the front door.\n\nHeda's skin flushed, and she stood up slowly. \"Time to face the music.\" She walked out to the entryway to find Ed hanging up his coat.\n\n\"You really just couldn't let it go, could you?\" He stopped her before she could begin to rant. \"Which is good. The lead investigator pulled in a voodoo priest from New Orleans and a priestess from Haiti, and they've stabilized the King with sympathetic magics of their own. And I reminded everyone that it was Madison's idea in the first place and that, you confirmed. You're an annoying, bratty sister, but only because you're right so damn much.\"\n\n\"You are the master of the backhanded compliment, you know that?\"\n\nEd bowed. \"I have to do something to stand out in this family.\"\n\n\"You're amazing in bed, if that helps,\" Joanna shouted from the other room.\n\n\"She is not a normal girl,\" Ed muttered.\n\nHeda nodded, looked back, then grabbed Ed by the arm and led him out onto the porch. \"Okay,\" she started, \"since you're not mad at me --\"\n\n\"Let's not get ahead of ourselves,\" he interrupted. \"I said you're not in trouble, not that I'm not --\"\n\n\"Have you heard of these monarch runner up rankings?\"\n\nEd looked at her. \"Of course. I've got money riding on you, by the way, so don't let me down, but wait until you're twenty-five to try.\"\n\n\"Why didn't you tell me? I don't want to be monarch. I haven't written my first book or play or screenplay or anything!\"\n\n\"Don't panic,\" Ed said, getting a chuckle out of his sister hyperventilating. \"It's just odds. It's not like if you get to the number one spot that you HAVE to challenge.\" He cocked his head. \"You do realize that Mom pretty much always thought you'd try, don't you?\"\n\n\"Since when?\"\n\n\"I'm not sure. I think she started talking to Samantha about it when you were ten.\"\n\n\"SHE TALKED TO THE QUEEN?!\" Heda yelped. She dropped and put her head between her knees and started to breathe hard.\n\nEdgar had never seen his sister like this. He had seen her quick-witted, snarky, funny, and he had seen her in a rage. She had scared him a bit when she had gone after a serial killer in his own lair like the fires of hell were on her side. \"Heda, it's just a list. Like 'Maxim's 100 Hottest Women' or the short list to be vice president. It really doesn't matter all that much. It's a bunch of people who have nothing else to do but listen to rumors and sit in front of their computers.\" \n\nHeda looked up at her brother. \"I never realized I was under that kind of microscope. I . . . don't know why it's freaking me out, but it is.\"\n\n\"Sucks when you're actually expected to be perfect after achieving it by accident for so long.\"\n\nHeda kicked her brother in the knee, albeit lightly. \"I'm not perfect. I don't know how they do it. You know what Queen Brown is like, and Reichert walks a lot narrower of a tight-rope than I thought. I'm an English major, dammit! I'm not used to needing definitive answers or being held accountable!\"\n\nEd grinned. \"You could always drop out and go into hiding as a hermit.\"\n\n\"Nuh unh. I saw Mom's expression when you told her you weren't going to college. I'm not going to have her come looking for me.\"\n\n\"Then get used to being in the public eye. You're the prodigal daughter, and you wreak havoc. People notice.\"\n\nHeda smiled. \"Just keep throwing all that back in my face.\" \n\nEd wrapped an arm around his sister's shoulders. \"Honestly, I kind of hope you don't go for Queen. Ever. You know that there are some shifters, especially in the reptile community, that think this would be a good time to challenge Reichert? They don't think the Council should be protecting him.\"\n\n\"What? Why?\"\n\n\"Because of Reichert's own philosophy. The strong survive. Some are saying he brought this on himself and, for better or for worse, he should either be strong enough to deal with it on his own. If not, then he should be fair game.\"\n\n\"Bullshit! This thing of Detrius's or Daryl's or whatever the hell his name is, it isn't a legitimate challenge. It would be like hiring someone to shoot a monarch, then challenging them. It's against the law.\"\n\n\"But it isn't, because no one asked Mosely to do this. No one asks a guy to get cancer that might weaken him, but he would still be available to be challenged. The reptiles around Reichert right now are all loyalists, but if someone comes forward with a real dominance challenge, then no one is sure what the Council would say.\"\n\n\"We need to stop him, Ed. Damn, I just want to go out and find that son of a bitch right now, but --\"\n\n\"But you're still not an official investigator,\" Ed reminded her. \"I hate to keep going back to that, but --\"\n\nHeda stood up, stuck her tongue out at her brother, then headed back inside. She hung out with her friends for a while, then headed up to her own room when Joanna pulled Edgar off into a dark area to do some things that no sister should ever watch her brother doing. Heda opened up her windows and then lay down on the bed, her nose in one of her favorite books, a breeze caressing her face and shoulders.\n\n'It's getting colder out there,' she thought, absently considering closing the windows again. 'Cold.' She stood up and went to the window. 'This guy is all about cold.' She sat in the window and stared out into the wilderness. \"He was the number one student, so he hunts number one students. He thinks that Reichert should die because Professor Hill died,\" she said out loud. Still staring out into the woods, something hit her consciousness.\n\nShe hurried downstairs and, making sure that Ed was still not around, she started leafing through the files that he had left in his briefcase. She wanted the obituary. She read over the black-and-white text several times, including the synopsis of the anonymous student. 'He died alone and in the cold,' she thought. 'He went out into the woods behind his house and . . . shot . . . himself.' \n\n\"What'cha doing?\"\n\nHeda spun around to find Billy looking over her shoulder. \"How do you move that quietly?! It's fucking creepy.\"\n\n\"Sasha is a light sleeper,\" he said. \"So it's a skill acquired out of survival instinct.\"\n\n\"You wake her up, she kills you?\"\n\n\"Amongst other things.\" He looked at the obituary. \"Think you're going to find something the official investigators missed?\"\n\n\"It's probably nothing. My brain's all hyped up right now, so I figure that going through all this might help me feel like I'm doing something. You know, going back to the beginning --\"\n\nBilly did NOT like the look that played across Heda's face. \"Heda? What are you thinking?\"\n\n\"Where was Professor Hill's house?\"\n\nThe wereturtle glanced at the article. \"Locust Drive? That's just --\" He stopped. \"Heda, go tell your brother whatever your idea is. Now.\"\n\nHeda rolled her eyes. \"I don't want to bother him with something that's probably nothing,\" she said, heading upstairs. \n\nBilly followed. \"With you, something tends to wind up being something big and, if recent memory serves me correctly, explosive. Just go tell your brother . . . Heda, what are you doing?\"\n\nHeda had pulled up a mapping program and was locating the address that Billy had noticed on the newspaper clipping. \"Just checking on something.\"\n\n\u2028\"You don't need Google Earth to tell you where your brother is. He is downstairs,\" Billy added, speaking as if to a child. \"I will go get him for you --\"\n\n\u2028\"Nah, no need to bother him,\" Heda said with an unnatural, totally forced calm. \"Hey, I think I'm going to --\"\n\n\"Go downstairs and talk to your brother?\"\n\n\"-- go for a flight. You know, clear my --\"\n\n\"Schedule, giving you plenty of time to go talk to your brother?\"\n\n\"-- head.\"\n\nBilly moved between Heda and the window. The eagle-shifter was already undressing in preparation of shifting. \"You're a day flier. You cannot honestly expect me to believe that this is for your health, mental or otherwise.\"\n\n\"Billy, please move.\"\n\n\"No.\"\n\n\"Billy, move.\"\n\n\"Not until you talk to your brother --\" He stopped when Heda's eyes began to glow. Her Gift was on. She picked him up as easily as if he were a dining room chair, spun around, and put him down on the other side. \"-- about what you're doing,\" he muttered as Heda climbed onto the windowsill, shifted, and took off into the night sky. He turned and headed back downstairs, muttering unflattering things about bird-shifters in general.\n\nHeda was able to see the neighborhood from a ways off, her sharp eyes able to pierce the darkness with the aid of moon and star light. She flew low, looking at the house numbers. Professor Hill's old house was set back a bit from the others, and did not look to be in the best condition. There was a \"For Sale\" sign out front, and Heda wondered if it had been like that since Hill lived here. The front yard consisted of several acres of wooded area that was going for the overgrown natural look. She did a pass over the back, seeing that the property butted directly up to the woods and mountains. \n\nShe perched on the chimney and began to look around. The place was incredibly quiet. That was when Heda realized that she did not hear any birds. No insects. Nothing. There were no animal sounds anywhere on the property.\n\n'That's not right,' she thought. She was getting ready to launch again when a large raven landed on the chimney next to her.\n\nBirds were not normally known for their facial expressions, but the black bird was shooting the eagle a look that could kill. If birds could blush, Heda would have. She shifted back to her human form, which was sitting buck-assed naked on a chimney. The raven shifted as well, and Edgar stared over the brick structure at her.\n\n\"And you would be doing what?\" he asked slowly and acidly. \"Exactly?\"\n\n\"Looking at potential investment real estate? At eleven o'clock at night?\"\n\n\"Heda, go back to the house. After you explain why the hell you're here. No, on second thought, go back home, then you can explain --\"\n\nHeda shifted but rather than flying home, she floated to the ground and then shifted back. Ed joined her, after a moment of quick shifting on his own part, and he looked vexed.\n\n\"Heda --\"\n\n\"Listen, this guy is obsessed with his dead professor. This is where his idol lived, and this is where he died. That gives this place some serious meaning for our boy. I just thought that he might come here.\"\n\n\"So you're master plan was to come here, by yourself, naked, and challenge an insane sorcerer with delusions of being a voodoo priest to . . . what? A game of scrabble, winner take all?\"\n\n\"It'd be nice. I would totally kick his ass. Ed, do you sense any other animal life around here? Besides us?\"\n\nEd looked like he was going to say something snarky, but then he looked confused, followed shortly thereafter by alarmed. \"No. I don't.\" \n\nHeda hurried over and looked in the window of the house. She saw no signs of life in there, and would have been willing to bet that no one had been there in years.\n\nEdgar noticed an exterior cellar door, and when over to check on it. It was locked from the outside, meaning that no one who might be inside probably was not using it. \"There is something weird about this place, but whatever it is --\"\n\n\"-- isn't happening inside,\" Heda said. \"But Professor Hill didn't kill himself inside. He killed himself --\"\n\n\"-- out back,\" Ed finished. Both members of the Adler clan looked towards the dark woods that stretched out behind them. \"I've got a bad feeling about this. Why are you headed towards the bad feeling?\" he asked as his sister found a small, mostly overgrown trail and headed down it. \"Heda?\"\n\n\"I just want to check it out.\"\n\n\"Heda, let's go back and call in the troops.\"\n\nShe glanced back at him. \"You think that they aren't on their way already? I took off, you took off to follow me --\"\n\n\"-- and Billy knew exactly where we were heading. Still, we should . . . oh why do I bother?\" he grumbled as Heda crept into the woods. Her eyes were still glowing, granting her the superior eyesight of her eagle form, as well as pumping up her strength and speed. \n\nHeda kept low, keeping her eyes and ears open as she moved slowly forward. She wondered what it was like for the disgraced professor to make this walk, dead to the world in every way but one, and looking to correct that one. It had been a night in the middle of January which, around here, would have been damn cold. She remembered reading that there had been snow on the ground. For a moment that could have been measured in the blink of an eye, she felt sorry for him. \n\nBut then she got over it. He had made his bed. He had lain in it. And then he had left this mess behind for others to clean up. Heda was not one to condemn suicide as a method to end real pain. She felt contempt for those who used it to avoid guilt, particularly when said avoidance prevented them from doing what was right.\n\nAfter ten minutes of creeping around, she was beginning to get frustrated. She had been so sure that \u2013\n\n\"Heda, careful,\" Ed said beside her. \n\n\"Why?\" Then she followed her gaze down to where a tripwire was laid across Ed's leg. Then she followed the wire to a shotgun that was rigged to a tree. \"Oh fuck.\" Then, everything came crashing home. \"I almost got you killed.\"\n\n\"No, I almost got me killed,\" Ed said.\n\n\"Ed, go back and find the others. Lead them back --\"\n\n\"You have got to be shitting me?!\" he hissed. \"We are BOTH going back!\"\n\n\"If he's here, I can't let him escape, but I'm not letting you get hurt.\"\n\nHe stared at her for a moment. \"One,\" he started slowly, \"of us is supposed to be here doing this. That 'one' is not you. YOU are supposed to be sitting at home, thinking of your girlfriend and volleyball and classes, and maybe only in a cursory fashion wonder what you're courageous older brother is doing in his search for a serial killer.\"\n\n\"But --\" Heda started to say as she helped Ed ease his leg back from the tripwire.\n\n\"I am not leaving my baby sister alone in the woods with someone who wants to kill her.\"\n\n\"I love you too, bro, but I'm a better fighter than you, and --\"\n\n\u2028\"And in the end,\" a new voice came creeping out of the black, \"none of it will matter. You are not welcome here,\" Daryl Mosely whispered. \"And now, you will die here. Just like He did. Just like the false king will.\"\n\nFor a moment, Heda considered trying to reason with him. Whoever this guy really was, he was deeply disturbed and unhinged. But then she remembered Madison, lying in a hospital bed with burns on her arms, suffering from hypothermia, terrified. She remembered Carla explaining what it was like to be hung in a cage after being tortured. She remembered the young woman who did not survive.\n\n\"You know it's over now,\" Heda said. \"All your games and scheming and cruelty . . . it's all over.\"\n\n\"You're right. It must end tonight. The King will die in the grips of the unbearable ice, and you . . . you will be blessed in a way denied Him. I will grant you the privilege of not being alone when you die.\"\n\n\"Good to hear, especially since unlike your mentor, we're not complete failures as human beings,\" Heda said. Then, she kind of wished she hadn't. Because the look she got when she insulted the late Professor Hill was terrifying. It was not hateful or angry or . . . anything. In Daryl Mosley's eyes, she saw a nothingness so profound that it seemed to absorb what little light was falling amongst the trees, bathing the killer's face with a clinging blackness. Then that emotionless voice whispered something, and the air around them grew colder. He gestured \u2013\n\n\"Duck!\" Ed shouted, shoving his sister aside as a shower of icicles shot out from their enemy's fingertips, impaling themselves in the tree behind her.\n\n\"Dammit!\" Heda shouted. She had been in the process of dodging anyway when her brother's action threw her off balance, and she went tumbling into the bushes. She struggled to regain a fighting stance, but Daryl had stepped back into the shadows. Around them, a cold mist was forming, obscuring even Heda's sight. \"Ed, get the hell out of here!\" This time, she was able to keep her feet when she dodged, hearing the chanting and sensing the frozen spikes headed her way.\n\n\"I told you no!\" he shouted, then grunted some obscenities as he was forced to dodge. \n\nHeda realized how stupid she had been. She had been so obsessed with chasing this particular car that she had never developed a plan on what to do when she caught it, and now her brother was in danger. And once again, Daryl knew the terrain better than she.\n\n\"He was better than you,\" came Daryl's voice, drifting through air that was becoming increasingly colder. \"He was warmth and light.\"\n\n'So fucking cold,' Heda thought. 'He's using some serious juice right now.' \n\nThen, she heard a blast from off on her left, and her brother screamed. The booby traps.\n\n'Oh Goddess,' thought Heda, as her very core turned far colder than anything Daryl might cast. \"Ed!\"\n\n\"Heda,\" came something more like a gasp than a real voice. \"Go.\"\n\nHeda began to shift. Daryl might control the ground and the mist, but Heda would control the skies. She went all the way into her eagle form and flew upward, trying to spot her brother, but the dank fog had become too thick to see the ground. She should go for help. But if she did, Ed would probably not live until she got back. She saw an area that seemed devoid of the infernal mist, so she flew there quickly and shifted into her half-form. She wished she hadn't. She wished she had not had to see what lay at the center of Daryl Mosley's forest retreat. He had surrounded a small clearing with camouflage netting and inside, it looked like a slaughterhouse. ",
        "There was a small, crude wooden altar decorated by candles and a human skull. The skull still had hair and skin on it. Around the table, a crude circle littered the ground. Littered was a more appropriate word than \"drawn,\" because the circle was made up of the remains of the dead. All manner of animals, from cats and dogs to snakes and birds, had been ripped apart and left in bloody heaps in the form of a circle. And mixed in amongst the animal parts were things that were . . . once . . . human. Fingers, eyeballs \u2013\n\n'Where did he . . . he \u2013' Heda thought, then was forced to fight the urge to vomit. 'He's fucking insane. How could anyone \u2013'\n\nHeda heard the slightest of noises behind her, and she jumped straight up, but not in time to completely avoid the blow that had been aimed at her head. Instead, some heavy object slammed into Heda's leg, which sent her tumbling directly into the circle of carnage.\n\n\"You insolent bitch!\" Daryl screamed, raising a monkey wrench over his head. \"Elitist, unworthy --\"\n\nIf you had asked Heda to list all of the things that she would probably never do in life, \"bludgeoning an insane spell caster with a human skull\" would probably have been on it. Before that night. But she found another skull under her hands when she fell, and she used it as an instrument of destruction on her enemy's face. \n\n\"Shut up!\" she squawked, her eagle mouth not normally suited for human words, but managing to spit those out. The sound of skulls cracking was cringe-worthy, but to his credit, Daryl did not go down. He went backwards, colliding with a tree. His human form was no match for Heda's half-form in a straight up fight. \n\nDaryl, bleeding heavily from the nose, spat blood and words in Heda's direction, and a chill wind blasted the eagle-shifter in the chest with the force of a hurricane. Her body bounced across the ground like a tumbleweed at a rave, coming to an uncomfortable rest in a thorny bush.\n\n\"You would be like Him, wouldn't you?!\" Daryl screamed. \"A pathetic monster with a crown and a throne?! I will not stop until you have all heard my Message, and until you have all been judged!\"\n\nHeda had to end this quickly. Edgar was out there in the mist, possibly dead or dying. His blood was on her hands as it was. She could not handle being responsible for his death. \n\nShe fixed her eagle eyes on Daryl's face, and things started to move in slow motion. She waited until she saw anything . . . a face twitch, a sneer . . . anything that would signal his intent. She saw the corner of his eye crinkle, as if he were preparing to stare really intensely. She clambered quickly towards him, finding her talons underneath her and she spread her wings, making herself as big a target as possible. She had to make it irresistible to her opponent. \n\nWhatever Daryl had been thinking, he changed his mind and began pulling in magic, pooling it, and began to create the vessel through which that power would flow. That was when the charging eagle-shifter screamed. \n\nHeda had never used her battle-cry against a living creature before, and there was a reason for that. An eagle only gave the cry when he or she was going to kill someone, and Heda had never been in a position where it was appropriate before. But she had no doubt that she or Daryl were about to die. \n\nHer cry did what it was supposed to do, namely it froze up her enemy. It did not last long, but it lasted long enough. As Daryl removed his hands from his bleeding ears, his eyes widened, and he tried to regain control of the magic he had summoned. Loose, wild magic was a dangerous thing. As he tried to bring it to bear, Heda closed the gap.\n\nAs long as she lived, Heda would not forget that moment. She flapped her wings and launched herself into the air. With the tree cover, she would not be able to gain much height, but she really did not need to. One taloned foot rose up and tore Daryl Mosely's throat out. The second foot swung sideways and ripped the man's jaw off. Both blows sent sprays of blood cascading across the clearing like demented waterfalls. \n\nThe mist began to clear as soon as Daryl's body crashed into the ground with a grotesque, liquid thump. For a moment that seemed like a lifetime. She could see the blood seeping into the soil, mixing with the veritable graveyard that Daryl had built. Death begat death. She shifted back to her human form and finally threw up. \n\nHeda heard shouting off in the distance. Her friends. They had come looking for her and \u2013\n\n\"Edgar!\" she shouted, feeling a shame that felt as endless and deep as an ocean. She had forgotten about her brother.\n\n\"Here!\" came a shout from off to her right. \n\nTears were streaming down her face as she moved through the brush, careful to avoid the traps, but still too careless to be smart. She had to get to him. She found him sitting against a tree, his leg peppered by buckshot. Heda sobbed, partially from guilt and partially from relief. A leg wound . . . Ed would be fine. A few shifts after getting the buckshot out, and he'd be all right. She hugged her brother like there was no tomorrow.\n\n\"Heda, while I'm happy to see you, I'm bleeding. And this is feeling a tad incestuous, so --\"\n\n\"Oh shut up,\" she sniffled. \"Edgar, I'm SO sorry. I shouldn't have . . . I mean, this is all my fault.\"\n\nEd just looked baffled. \"Uhm, this is all Daryl's fault. Remember him? Psychopath? Speaking of which,\" he added, looking over her shoulder, \"I'm assuming that since you're here, he's --\"\n\n\u2028\"Dead. I killed him. You almost died because of me, and then I killed him and now I don't know what to do.\"\n\nEdgar could almost feel his sister falling apart, and he could certainly see it. \"What's wrong? You got the bad guy, we both made it out alive. This is good, right?\"\n\n\"How can you be so blas\u00e9 about this? You almost died because I couldn't follow protocol!\"\n\n\"If you followed protocol, we never would have found him. Heda, I was just as stupid as you were. I came here without backup, and I should have made you wait. I fell into the same stupid trap I pointed out earlier, and all I could do was think that I let you down. You had to fight a madman, and I should've been there.\"\n\n\"If we had waited like you wanted, none of this would have happened.\"\n\n\"He might have gotten away, or someone else would have gotten hurt.\" He looked through the woods to where their companions were streaming from, a mixture of animal forms that would normally never be found together much less work together. \"It's about time,\" he shouted. \"Lazy assholes.\"\n\nTheir friends surrounded them, with Edgar warning them about the traps, while Heda . . . she just sat there. Billy waved a hand in front of her face, but she did not blink. She heard their voices, saw the lights of their flashlights, but they were all indistinct . . . vague. She was not sure when she passed out, or if she ever actually did. She was not aware of anything.\n\n-------- -----------------\n\nSome time later . . .\n\n-------- -----------------\n\nHeda came to with a start. She was in her own bed, the windows still open, the air still cool. 'A dream?' she thought. But when she heard a slight cough, she turned and saw her mother sitting in a chair next to the bed.\n\n\"No,\" Jessica Adler whispered, \"It wasn't a dream.\"\n\nHeda's mouth opened, but she paused, making no sound. Then, she hung her head.\n\n\"You're going to have to talk to me,\" Heda's mother said. Her voice was firm and even, hiding well the contempt that Heda knew had to be there.\n\n\"How's Edgar?\"\n\n\"Your brother is fine. He's downstairs being 'consoled' by Joanna. He made his report to the Council, so I guess he feels he's entitled to be pampered now.\"\n\n\"When did you get here? Why --\"\n\n\"Why did I come? My son was shot, my daughter slipped into a state of shock . . . did you really think I wouldn't come? Your girlfriend and her father will be landing in Albuquerque in Mr. Hannity's private plane, so we need to get this conversation out of the way so that you can let Madison dote on you.\"\n\n\"Dote? Mom, this is serious.\"\n\n\"I know,\" Jessica said softly. \"I know.\"\n\nHeda could not stand the suspense. \"Aren't you going to say it?\"\n\n\"Say what?\"\n\n\"How much I screwed up?\" Heda replied, almost angrily. \"How I let you down? How I almost got Edgar killed because I couldn't just mind my own business?\"\n\nJessica leaned forward. \"Would that help? Fine, you screwed up. You went into a situation without any tactical appraisal. Edgar could have died. He could do that on any investigation he participates in. And there is always the chance that people who follow leaders may come to a bad end. It would have broken my heart if Edgar had died tonight, just like it would have killed me if any of my children got hurt. But I will not say that you let me down. I will not say that I'm ashamed of you.\"\n\n\"Why not?\"\n\nThe mother took the daughter's hand. \"Because that's not what this is about. This was your first trial by fire. Ed told me how freaked out you were about people thinking you might be Queen someday. This,\" she said, looking out the windows into the night sky, \"was what being a Queen someday might mean. It means taking chances to protect the community. It means maybe losing those you care about because they followed you. And sometimes, it means killing.\"\n\nHeda tried not to weep. Not in front of her mother, who had seen more than her fair share of conflict. \"I didn't think it would be like that.\"\n\nJessica Adler moved to her daughter's side. \"No matter what you thought it was supposed to be like, it never is. It wasn't for me, it wasn't for Queen Brown, it wasn't for any of those I've served with in the line of duty. Taking a life is sometimes necessary, but it is never easy. You thought it would be easy because the guy was evil? Because of what he did to Madison and the others? Heda, what makes the good guys different from the bad guys is that for us, it shouldn't be easy. We put ourselves in the line of fire because that's who we are, not because we asked for it. No one asked Daryl Mosely to do what he did. This is ALL his fault.\"\n\nJessica pulled her daughter to her, wrapped her arms around the younger woman, then continued. \"I'm sorry that you had to do what you did. Did you ever notice that in all my stories, I talk about the battles, but never the killings? Never the parts where I looked someone in their eyes and then took the light from those eyes? That's because it was never easy. Because I never wanted to think about it. Now, I wish I had. I wish I had prepared you better for this part.\"\n\n\"This part?\"\n\n\"Dealing. I taught you the mechanics of the fight, and the art of war. The physical part of killing is no different from any other part of the conflict. Killing . . . it's a decision. It's the final punctuation mark on the story of someone's life.\" She stroked her daughter's hair. \"It's one of the things that concerns me about you becoming a writer.\"\n\nHeda scrunched up her eyebrows. \"Why?\"\n\n\"Because you don't like it when the story ends. Even the scary ones. A good writer needs to know when to place that last period and then move on. Now, I know that you can. You may not like it. It may disturb the hell out of you, but you understand that sometimes, a story simply needs to end.\"\n\nIn Jessica's embrace, Heda finally just let her body relax, and let herself cry a little bit. Her mother let Heda detoxify her spirit. Heda Adler had grown up a little that night, and her mother understood the true meaning of \"growing pains.\"\n\nBut after a little while, Jessica spoke again, this time with some amusement. \"I believe Madison is here.\"\n\nHeda, who had been lost in her own little world, sniffed and asked, \"How can you tell?\"\n\nOn the stairs came the frantic pounding of feet. The door flew open and Madison came charging in. Her mouth was slightly parted as her echolocation sought out Heda's form. Then the lithe young bat-shifter ran across the room and dived onto the bed, wrapping her arms around her girlfriend. She had moved with such speed and determination that Jessica had been forced to actively dodge the ballistic young woman.\n\nHeda almost smiled as Madison gave her a complete once over, scanning every part of Heda's body with her sonar. Finally, the slim bat-shifter punched her girlfriend lightly in the shoulder. \n\n\"What was that for?\" Heda asked, actually chuckling a bit.\n\n\"You're not even wounded,\" Madison said, her voice quivering with relief. The she threw her arms around Heda's neck and kissed her. Hard.\n\n\"Sweetheart --\"\n\n\"No talking. More kissing.\"\n\n\u2028\"My mother is in the room.\"\n\nMadison stopped and turned bright red. She had forgotten about the presence of the other Adler female. \"Hi Mrs. Adler.\"\n\nJessica was smirking. \"Hello Madison. I must say, I've never seen 'therapy' quite like yours before. I just tried talking to her.\"\n\nMadison buried her head in the pillows next to Heda. She muttered something, but it came out as a muffled mess of sound.\n\n\"What was that dear?\" Jessica asked.\n\nHeda grinned. \"I'll translate. That was embarrassed-Madison-speak for, 'Please kill me now.' I've learned to speak her language over the last few months.\"\n\nMadison mumbled again, this time blindly punching Heda in the stomach.\n\n\"That was her telling me to shut up.\"\n\n\"I'll let you two talk for a bit,\" Jessica said, standing and moving towards the door. \"And I do mean 'talk'.\"\n\n\"What is it about parents? Do they really think that sex is the only thing on our minds?\" Heda muttered.\n\nMadison brought her head up. \"Well, I WAS thinking about it. Mood's kinda ruined now.\" She ran her hands over Heda's face. \"They told me that you faced him down and that you were messed up. I was terrified.\"\n\n\"I think I've got some things to think about,\" Heda replied softly, bringing Madison in closer and kissing her forehead. \"Hey, would it be okay if we didn't talk for a little while?\"\n\nMadison looked a little confused, but she was so grateful for Heda to be alive and well that she did not question the request. So for an hour, they just enjoyed one another's company, basking in the warmth of contact. Then, slowly, Heda began to talk to Madison about the things that she had told her mother. Madison just listened, letting her lover get all her insecurities out.\n\n\"So that's it. You flew all the way out here to help counsel me through my mental breakdown,\" Heda finished.\n\n\"Your Mom was right you know. But I won't repeat what she already told you. The spirits know that I'm not the type to think things through either.\"\n\nHeda sighed. \"I'm scared. I've been angry before, or nervous. Now, I'm just scared. What happens next time? What if Ed or someone else gets shot somewhere other than the leg? What if --\"\n\nMadison's mouth moved in and stopped Heda's voice for a moment. She liked kissing Heda. A lot. \"You know,\" Madison began, \"I used to think about tomorrow a lot. At first, it was because I was sure that my real family would come and take me away, but it never happened. Well, not for twenty years anyway. After 'tomorrow' stopped being the time the good things would happen, it became the time that bad things would. I'd get harassed again tomorrow. I'd be beat up again tomorrow. I'd be alone again tomorrow.\"\n\n\"I'm sorry,\" Heda said. \"I keep forgetting --\"\n\n\"No, I'm not fishing for sympathy. Because THOSE tomorrows turned out to be wrong too. I found a friend in Billy, then in Sasha. Days came and went where nothing bad happened. Then, you showed up, and I wasn't alone. When it comes to figuring out tomorrow, you're just as blind as I am. So stop worrying about it. Right now, today, you're here. You're alive. Your brother is downstairs, your friends and family are all waiting on you to come down and get the party started. For crying out loud, King Reichert owes you his life.\"\n\n\"Crap! I forgot all about him!\"\n\n\"Then let's go downstairs and find out what happened.\"\n\nIt turned out, according to Edgar, that Daryl had obtained liquid nitrogen and had been planning on dipping the voodoo doll in it at midnight. Luckily for the investigators, Mosely had kept a journal of his ramblings. The investigators had decided that Daryl needed to be \"found\" because his crimes had affected the world of normals, they would need closure as well. So Daryl Mosely would be found in the woods, his face blown off by one of his own booby traps. Ed was sure the story would stick. Madison gripped Heda's hand as Ed talked about the damage to Daryl Mosely, the man Heda had killed.\n\nReichert had come out of his pseudo-coma almost immediately. His doctors were observing him, but he seemed to be back to his old self. He had been told what happened, and wanted to thank Heda for saving his ass.\n\nThen, the conversation had turned to Heda and Edgar, and what had happened in the woods. Ed took over the storytelling, playing up his own bravery to such an outrageous degree that he had almost everyone laughing. Heda just concentrated on her breathing, her mother watching her closely, and her girlfriend holding her hand.\n\n------- -------------------\n\nMonths later . . .\n\n------- -------------------\n\nHeda was biting her bottom lip and gripping the bed sheets, her whole body glistening with a thin layer of sweat. She groaned, climaxing so hard that she was seeing stars by the end of it.\n\n\"So,\" Madison asked, nibbling on the inside of Heda's thigh, \"I haven't completely lost my touch?\"\n\n\"I think,\" Heda started, \"that your reputation is intact.\" Heda pulled Madison up for a long, post-coital kiss. This was Madison's first day back in the house since her internship and the events of the fall semester, and the two young women had been making up . . . and making out . . . for lost time. Actually, they had dropped off Madison's stuff in her room, said goodbye to her father, then had begun a marathon sexual session that had lasted for four hours.\n\n\"Good, 'cause I was all out of ideas,\" Madison murmured, tracing a fingernail around Heda's nipple. \"You're a hard woman to satisfy, Heda Adler.\"\n\n\"That's why I admire you're 'old college try' mentality.\"\n\nMadison chuckled. \"We should probably get cleaned up and get to the meet-and-greet. Reichert asked for you specifically.\"\n\nHeda sighed. \"I hate public stuff. Why couldn't he do this when everyone had left?\"\n\n\"Then it wouldn't be a 'public ceremony,' now would it?\" Madison reluctantly rolled out of bed. \"I had pants when I came in here.\"\n\n\"But you look so good without them,\" Heda replied earnestly, watching her girlfriend's long legs and cute little ass moved across the room. Not that she minded Madison's new wardrobe, courtesy of her sister Morgan. Gone were the body stockings and plain dresses. Madison was currently rolling on some tight hip-hugger jeans and a \"Meatloaf - Bat Out of Hell\" original concert shirt, which had been scored on Ebay with some help from Mr. Hannity's credit card.\n\n\"You really should be getting dressed,\" Madison said. \"Are you? Heda?\" She turned around and did a quick scan, only to find that Heda was still very naked and only standing a few feet away. \"You're going to kiss me, aren't you?\"\n\nHeda grinned. \"And grope you. And make you think twice about making be go to this stupid thing.\"\n\n\"It's not stupid, and you \u2013,\" Madison was cut off with a kiss, \"-- did promise and it's not like we (kiss) won't have plenty of time later for more (kiss) (kiss) (ass grab) DAMN you're hot!\" Madison shook her head. \"You promised your mother.\"\n\nHeda sighed and reluctantly put Madison down. Just had to throw cold water on me, didn't you?\"\n\n\"Hey, this is me, remember? Think that I want to go listen to Reichert again?\"\n\n\"You're looking forward to the after-party, aren't you?\" Heda laughed when Madison blushed. Just four months earlier, she would not have been able to get invited to a party to save her life. She had been the quintessential social pariah. Now, she was DJ'ing the biggest of the shifter shindigs, and all the tickets were already sold. ",
        "Madison looked like a cat who had gotten into the cream. She had never really dreamt that she would be a member of the in-crowd. Now, thanks to Heda and her family ties, Madison was practically the president of the cool kids. A lot of it was brainless sucking up, but it was better than the alternative.\n\n\"Okay, maybe a little. Billy says that the setup they've got is totally bitching!\"\n\nHeda grinned and grabbed a clean pair of jeans and a tee-shirt that read \"Straight Outta 100 Acre Wood,\" with a picture of Winnie the Pooh in his gangster outfit on the front. She had even gotten the shirt so that the lettering and image were embroidered so that Madison could appreciate the Pooh. \"You're scanning my ass, aren't you?\" she asked after bending over to grab her Birkenstocks.\n\n\"Hmm?\" Madison mumbled, not paying any attention to Heda's question while studying her ass in great detail.\n\n\"Never mind.\"\n\n\"Hmm!\"\n\nHeda sucked up her courage and turned around. \"Hey, before we get going --\"\n\n\"Oh no, no more delaying tactics. The sooner this speech is over --\"\n\n\"I just wanted to tell you --\"\n\n\"-- because I wanna dance and pump up the music and --\"\n\n\"-- that I love you.\"\n\n\"-- so let's get going!\" Madison finished, then took two steps out the door, then stopped with such dedication that she almost toppled down the stairs. \n\nHeda waited in complete silence for a moment. Then she heard the stairs creak a bit as Madison's weight redistributed. \n\n\"Uhm, Heda?\"\n\n\"Yes?\"\n\n\"Sorry, I know things got a little hectic there, but I thought that . . . well, it sounded like --\"\n\n\"I said that I loved you? Yeah, I heard that too. Mostly because I said it.\"\n\n\"But . . . no, I don't think you get it. I thought I heard you say --\"\n\nHeda grabbed Madison by the arms and lifted her about six inches off of the ground.\n\n\"Madison Sloan, I love you.\"\n\nMadison squeaked, but it was a happy sound. \"You didn't say 'Madison Sloan' last time --\"\n\nHeda smiled. \"You just like hearing me say it, don't you?\"\n\nIf a rainbow could truly be captured by a mortal being, then Madison's smile accomplished just that. She was so happy that she positively glowed. Then her mouth started to move, but she could not make a sound to save her life. She grabbed Heda by the hand and dragged her down stairs, past all of their highly confused friends, and then down into the basement. Madison frantically scanned her keyboard, then typed something in. Soon, a familiar tune slid into the air like a pleasant aroma.\n\nWell, I know it's kind of late\n\nI hope I didn't wake you\n\nBut what I got to say can't wait\n\nI know you'd understand\n\ncause every time I tried to tell you\n\nThe words just came out wrong\n\nSo I'll have to say I love you in a song.\n\nHeda's heart skipped a beat, but she forced herself not to smile. \"It'd sound nice with the voice.\"\n\nMadison smiled shyly. \"Love you,\" she said, mustering a bit of spice.\n\nHeda picked Madison up and pressed their lips together. \"Better.\"\n\n\"Best.\"\n\nAn hour later, the pre-semester shifter and magic-user dinner was well underway. The members of Animal House, as Heda's social group was now called, were sitting all together, laughing and feasting and having a good time. But then Reichert stepped up to the podium, and the room went quiet.\n\n\"Thank you all for coming. No, you aren't getting course credit for this, but you can't leave because I had the doors locked.\" He smiled, waiting for the chuckles to die down. \"But seriously, I'm glad to see so many people chose to return this semester after the tragedies and horrors experienced this past Fall. I wondered if I should suggest that we all just act as if it never happened, but that would be unrealistic. It would also fail to be productive.\"\n\nHe stopped, looked around, and his eyes came to rest on Heda. \"As many of you know, Heda Adler and her companions showed great resolve and determination in their pursuit of an evil man. Of course, they, and specifically she, were doing so in direct defiance of just about every rule that had been laid out. I can only imagine how her mother must have felt trying to raise such a foolhardy, stubborn, and too-smart-for-her-own-good daughter. I imagine that between all the headaches and gnashing of teeth, she was a source of great pride for her family, as she has become for her entire community.\n\n\"Yet I would be remiss in my thanks if I did not focus some attention on a very unlikely hero. Miss Madison Sloan,\" he said, waiting until the spotlight floated over to a very surprised young woman, \"I owe you more than my life, and that is a hard thing for a King . . . especially THIS King . . . to say. It is hard because of a certain degree of shame.\"\n\nMadison looked confused, and she gripped Heda's hand under the table.\n\n\"Madison, I once thought, as others did and sometimes still do, that those who could not have survived in our wild world in centuries past were weak. I did not realize until recently how foolish that notion was. My totem animal was as physically powerful and dominant as any creature on earth. All that strength did not save it. It was not versatile enough to survive.\"\n\nReichert looked out over the crowd. \"We take great pride in our animal heritage, as well we should, but we are half human as well. And our human brethren have survived when some of the greatest, most powerful beings to walk our earth, fly our skies, and swim in our oceans have drifted into history. Why? Because of their minds. Because they used their brains to adapt to an environment that no other physical manifestation could endure. They could not fly on their own, so they built machines. They reached the moon, where not even the greatest of the bird-shifters could plant their feet.\"\n\nHe sighed, this admission obviously taking a great toll on him. \"Madison Sloan survived for twenty years with a sharp, finely tuned mind that more than made up for her lack of sight. When surrounded by the right people, she proved time and time again to have both the brain and the fortitude to do the right thing. It was she who uncovered the truth about the evil that she survived, and that truth led to my own rescue and, hopefully, redemption. Madison, you cannot see because of a genetic quirk at birth. I have no such excuse. I believe that I may need you, the blind, to lead the rest of us whenever we seem to have lost our way.\"\n\nHeda looked over and saw tears creeping out from those white eyes. Madison had stopped wearing the sunglasses when around shifters, because she no longer felt she needed or wanted to hide. Heda was happy for her friend because, as Reichert had put it, this was redemption. \n\n\"Ready to go dancing?\" Heda whispered.\n\nMadison just smiled and said, \"Ready for anything.\"\n\n-------- -----------------------\n\nThe End . . ."
    ],
    "authorname": "Evil Alpaca",
    "tags": [
        "lesbian",
        "lycanthropes",
        "magic",
        "mystery"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/flying-blind-ch-07"
}