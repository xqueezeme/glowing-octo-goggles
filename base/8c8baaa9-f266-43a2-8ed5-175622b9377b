{
    "title": "To Serve & Protect: Night Watch",
    "pages": [
        "(This story contains scenes of both sex and extreme violence. Please do not read it if you are upset by either. The only actions portrayed I advocate are those of the hero and heroine. Incidentally, anyone who would treat a woman as the opening scene does, well, let's just say they get theirs.) \n\nThe woman moaned. This wasn't fun anymore. Hands gripped her wrists and ankles. She was spread-eagled on a cold marble slab of some kind. She dully felt the man enter her, his rigid cock driving immediately up inside her bruised pussy.\n\nShe tried to respond, but she no longer cared. She had met this good-looking guy in a club. She remembered having a drink with him, then another after she came back from the ladies room. After that it was hazy. They had left the club and driven around. She had found herself so aroused. When he suggested they have some fun she was all over him. She had freed his cock from his pants and sucked it like a lollipop. She had reached under her own skirt ands wiggled her fingers under her panties. \n\nHe had stopped the car and slipped out of it, teasing her. She had reached out to him and he had taken her hands, pulling her from the car. They had run into the dimly lit building, down some stairs, she thought, and then into this room. He had taken her in his arms and began to kiss her. His kisses had been demanding, almost brutal, but they only inflamed her desire.\n\nHe had stripped her clothes from her and pushed her back onto the slab. In one move he had penetrated her, stifling her cries with a deep kiss. He had ground his body against hers, almost battering her with the deep thrusts of his cock. His bare chest had scraped back and forth over her breasts, making her nipples stiffen and become incredibly sensitive. She had wrapped her arms and legs around him and urged him on.\n\nHe said not a word. Harder and harder he thrust into her. Her hips bucked up to him, meeting his every movement. Her mind reeling with the sensations, she felt him swell inside her, and she met his blast of cum with an orgasm of her own. He had withdrawn immediately, pulling away from her attempts to hold him.\n\nThen the nightmare began.\n\nHands suddenly gripped her ankles and wrists. One by one the men circled her, each one taking a turn with her. One by one they forced their way into her, showing no regard for her, as though she was a lump of meat. Her canal filled with cum till it was overflowing.\n\nShe wanted to weep but couldn't. She wanted to resist but was unable to move. She realized she had been drugged. Terrified, she saw the man standing over her head bring the knife up and, breaking the bonds of silence, she screamed as it came towards her...\n\nSergeant Pat Gibson snapped the disposable gloves on and squatted to lift the cover off the body. Although she had seen a number of dead bodies before, the sight of this one sickened her. She dropped the flap of the plastic bag and stood up.\n\n\"The same as the others, Doc?\" She asked the tall, thin Medical Examiner.\n\n\"The same as the other three, Pat. It appears to be a ritualistic killing of some kind. I suspect I'll find the same drugs in her system too. The same evidence of sexual abuse. I'll call you when I have the autopsy report ready.\" He hesitated and then stepped to the side, bringing her over with a motion of his hand.\n\n\"Have you seen the doctor that Dr Morgenstern and I recommended?\"\n\nPat sighed deeply. \"Yes I did, Stan. Thank you, but the answer is the same. Its astounding I was able to conceive Mike, Jr. at all. No more children for Mike and I.\"\n\n\"I'm sorry,\" assured her friend. \"Sheila Morgenstern doesn't make mistakes, but I had hoped.\"\n\n\"So did I. We wanted another child, but Stan, I have so much to be thankful for already. It'll be okay.\n\nPat's cell phone rang. She answered it. The conversation consisted almost completely of \"Yes, Sir and No, Sir.\" After ending the call, she looked at the phone and shrugged.\n\n\"They're all over you on this one aren't they Pat?\" Dr. Stan Wisder asked.\n\n\"Yes, that was the Sheriff himself, asking if I need any help, assuring me of his support and gently reminding me that everyone's ass is going to get hung out if we don't catch this guy. I have four detectives working for me. Every beat officer has descriptions of our Jane Does and instructions to talk to everyone about them. If we could just ID one of them and start a back trail, we might figure this out.\"\n\nDoggedly Pat and the officers assigned under her followed the case. They took the pictures of the four victims and made the rounds, showing them to cab drivers, store clerks, gas station attendants, any one who had frequent contact with the public. \n\n\"We keep coming up empty Mike,\" Pat said moodily one evening at home. \"Nothing anywhere.\"\n\n\"Okay honey, there always is something.\" Mike replied. Although his career with the sheriff's department had primarily been in uniform, Mike had been an excellent detective as a corporal. \"what do we have?\"\n\n\"We have four women, approximately all the same age, same general appearance. The lab reports indicate they were all murdered with probably the same knife, certainly the same type of knife. They were drugged, probably mixed into a drink.\"\n\nMike cut her off. \"The drinks, Pat. Hit the clubs in the area they were found. Let's put some feelers out about the underground clubs too.\" He studied the toxicology reports. \"What's this?\"\n\nPat looked over her husband's shoulder. \"Yeah, that struck me too. Traces of a chemical compound similar to a pesticide found on the skin of two of the victims. Somehow, that rings a deep bell, but I don't know why. And Mike, this has to be solved and soon. The murders all happened in the new moon, and the next one of those is only a week away.\"\n\nPat leaned on the bar of a small underground night club known, rather unoriginally, as The Rave. The uneasy proprietor was protesting his complete innocence of anything to do with selling alcohol without a license or running a business of any kind. Two heavy set bouncers stood nearby. Two equally heavily built uniform officers stood with them.\n\n\"I've begun to lose patience with you, Ralph. I don't give a rat's ass about your business dealings and wheelings. However, I can if you keep evading me. On the other hand, cooperate and you record brownie points good towards your next need for a \"Get Out Of Jail Free\" card. Tell me about the girls.\"\n\n\"Okay, Sergeant Gibson,\" the man sighed. He laughed. \"Its true what the word on the street is.\" Pat cocked her head and made a come on gesture. \"As tough as everyone knows your husband is, they say its worse to cross you.\" He held up his hand. \"Yes, I know positively the last girl was in here. I remember her sitting at the bar, and the creepy guy who picked her up.\"\n\n\"Creepy? How so?\"\n\n\"Just made my skin crawl is all I can tell you.\"\n\n\"Okay, Ralph. Seriously, here's my card. Office and cell phone numbers are on it.\" Pat laid down a picture of the last victim, showing the wounds she had suffered. The owner sucked in his breath and turned green. \"Call me if you see him again.\"\n\n\"I will.\" He looked at the picture again. \"You can count on it. Someone who would do that... well, I don't cover for things like that.\"\n\nFour days later, on the night of the new moon, Pat's cell phone rang, about an hour before dusk.\n\n\"Sergeant Gibson? Its Ralph. The guy was in here and he just left with some female. She's about 25, blonde and wearing a black dress and shoes. I'm sorry, I was back in the storeroom and just saw them leaving. I had Tiny go out after them but they were already gone.\"\n\n\"Thanks Ralph. You get one big point for this. If you ever need it, call me.\" Pat rushed from the office and into her car. She called Mike and told him what was going on.\n\n\"What do you think Pat? Where could they be going?\"\n\n\"Mike, I don't know.\" She paused, \"Why does that chemical compound keep ringing in my ears? It means something but I can't think of what.\"\n\n\"Talk it through, honey,\" her husband advised.\n\n\"Okay, its similar to the inhibiting agent found in commercial pesticides. There are traces only, on the skin, not ingested.\"\n\n\"Son-of-a-BITCH!\"\n\n\"What is it Mike?\" Through the phone she could gear him call to Carol he had to go out. Then she heard first the back door and then a car door slam.\n\n\"There's an abandoned pesticide plant out about 5 miles off State Highway 27. The EPA closed it years ago. How damn stupid can I be?\"\n\n\"Give me directions and I'll meet you there.\"\n\nMike and Pat arrived at almost the same moment at the falling down gates leading through the fence line surrounding the plant. Without fanfare they slowly drove their cars through the half ruined factory. Pat suddenly turned into an alley between two buildings. Mike followed and they both got out.\n\n\"Fresh tire tracks,\" He pointed out.\n\n\"And there,\" following Pat's finger Mike saw a high heel shoe laying by a metal door. \"Ralph at The Rave told me the woman was wearing black, including her shoes.\"\n\nSuddenly Pat shivered. A breeze began to whistle down the alley. She wrapped her arms around herself.\n\n\"Mike, is it just me or is it getting colder?\" She took a deep breath. \"And what in God's name is that smell? Its not chemicals, it smells like, like...\"\n\n\"Like dead bodies in an open grave.\" Mike answered quietly. \"I remember it from the Gulf.\"\n\nPat's hands shook just a bit as she reached into the car and picked up the radio mike. She was almost relieved to see her husband looked rather pale. Almost. His left hand was gripping the chain around his neck. Pat knew he always wore his Marine Corps dog tags and a religious medal. She rather suspected it was the latter he had in his fingers.\n\nSwallowing hard, her free hand pulled the small silver cross out from her shirt. Pat had not been especially religious for much of her life. After marrying her staunchly Irish Catholic husband, she had started going to church with him and the girls. The cross had been a present from Carol and Stephanie the day they baptized Mike, Jr. Right now she was very glad to have it.\n\nPat keyed the mike, \"Dispatch this is D-David 24.\" The only answer was a rush of static. \"Dispatch this is D24, respond please.\" Nothing.\n\n\"Any unit, any available unit this is SWAT 1. Officers need assistance.\" Mike was using his walkie-talkie. There was nothing but the hiss of the carrier wave.\n\n\"Maybe its the buildings.\"\n\nMike walked rapidly down the alley way. Coming into the open he started calling again. Pat's radio was mute even from that short distance. She opened her cell phone and pushed the buttons for 911. Looking down she saw \"no service\" blinking at her. She put it back on her belt. Moved by a sudden impulse she turned the ignition key. The engine sprang to life. Well, something worked.\n\nAs Matt trotted back down the alley towards her, Pat found herself up against the far wall, her gazed fixed on the door and her hand on the grips of her sidearm.\n\n\"Its in there, Mike.\" After a moment she added, \"whatever 'It' is.\"\n\n\"Are you alright?\"\n\n\"I feel like what's-her-name when she's surrounded by vampires.\"\n\n\"Wouldn't mind her here right now. The character, honey, not the actress,\" Mike hastily added as Pat glared at him. He walked to the door. \"Its stuck.\"\n\nMike finally wrenched the door open. Pat wrinkled her nose as a cold current of air poured from the doorway. The air carried the foul odor with it.\n\n\"Pat, honey,\" Mike said quietly. \"I want you to get in your car and get the hell out of here. Go for help.\"\n\n\"There's no time for that Mike,\" she responded. \"I'm not leaving you. I never have left you, I never will. And I don't run from anything on this earth.\" She lifted a hand as he opened his mouth. \"I know you're about to say something about the children. I think if we don't go in there now, they may be facing something much worse than not having us before long.\"\n\n\"We're cut off, Mike,\" she gestured around them. \"No phone, no radio. The cars will start though. Somehow I think we're being told if we leave now, we'll be allowed to. But if we do,\" she swallowed, \"I have a feeling whatever is happening will be done by the time we can get back here with help.\"\n\n\"You're right,\" Mike admitted. \"I hesitate to accept whatever is giving us an out is doing so from altruism.\"\n\nSuiting his actions to his words, Mike opened the trunk. He hesitated over the shotgun, then reached far into the back and removed a zippered gun case. He took a dully finished Colt AR15 from it. Inserting a 20 round magazine, he then pulled the charging handle. Placing the weapon on \"safe\" he shrugged into a black nylon vest and put 4 more full magazines in its pockets.\n\nPat had brought out a second Glock and loaded it. She attached a clip-on holster to her belt. The pistol rode butt forward on her left side. Mike turned and handed her a spherical object. Her eyes widened. \n\n\"Mike, what the hell are you doing with this? These,\" she amended as he placed two more hand grenades in his vest pockets.\n\n\"Souvenirs from this year's Marine Corps Reserve training. Be careful.\"\n\n\"No kidding,\" Pat muttered. She carefully checked to make sure the safety wire was around the handle and the pull pin was bent in place. She put it in her jacket pocket. \"Ready?\"\n\n\"I wouldn't go in there if I was you all,\" a cracked male voice echoed through the alley.\n\nBoth cops spun around, aiming their weapons at the sound. They lowered them as they realized they were covering a white haired elderly man, leaning on a cane.\n\n\"Sir, what are you doing here? This is a very dangerous place.\"\n\n\"You're telling me Missy?\" The old man snorted. \"Weird men dressed in robes, carrying a young woman. Up to no good I can you that. Don't like that smell, don't like anything about it. Your man is right there, young woman. You should skedaddle out of here.\"\n\nPat rolled her eyes. \"What is this? Male chauvinist day? I took the same oath you did Mike. To 'Serve and Protect'.\" She had a sudden thought and dug in her pocket. \"Sir, please take this, its my cell phone. Please try to call 911 and keep trying till you can get through. Give them our location and tell them Officers Mike and Pat Gibson need help.\" \n\nThe old man accepted the phone, mumbling under his breath about \"Youngun's with no respect for their elders.\"\n\nThe two officers checked their equipment once more and entered the door, leaving it open behind them. The old man limped slowly after them. He listened for a minute. Stuffing the cell phone unused in a pocket, he followed them in.\n\nThe moment the door closed the radio sprang to life. \"Dispatch to SWAT 1, Dispatch to D-David 24. Mike, Pat, please come in. You've been out of contact for an hour. What's your 20? Answer, PLEASE.\"\n\nMike and Pat gingerly followed the current of cold, foul air. They went down two flights of stairs, carefully covering each other every step of the way. They were well below street level now. The only illumination was from their flashlights.\n\nThey were suddenly brought up short before a locked metal reinforced door. Pat passed her hand over the tiny aperture the keyhole made and shivered. The air was freezing on her hand. Straining her ears, she thought she could hear chanting.\n\n\"This is it,\" she whispered. She checked both her pistols to ensure a round was chambered and the safeties were off. Mike pulled her back around the nearest corner and took the grenade Pat offered him. He removed the safety wire from the spoon and straightened the pin. \n\nFor ten seconds they looked in each other's eyes. Mike whispered a prayer and Pat answered \"Amen.\"\n\n\"I love you,\" Mike said.\n\n\"Always,\" Pat answered.\n\nMike pulled the pin, let the handle fly and rolled the grenade towards the door. He ducked back and gathered Pat to him.\n\nThe explosion ripped through the old building. Braced for it as they were, the two cops recovered and sprinted for the doorway, now blown wide open. Mike ducked through first, with Pat behind him.\n\n\"Everyone Freeze,\" bellowed Mike.\n\nThe room was crowded with shadowy figures in dark robes. The only illumination was from flickering torches on the walls. The figures standing over the woman being held were motionless, except for the one thrusting between the woman's legs. He suddenly arched, held that pose for a moment and then stepped back.\n\nA low hiss came from the crowd. The man at the head of the altar laughed and said, \"Oh, the police. How nice. Convenient timing too. Too late, as you fools always are, to stop us. But right on time to provide for the master.\"\n\nAs though the statement was itself was a conjurement, a dark ball appeared in the center of the room. It expanded. The room temperature dropped even farther as though the darkness was feeding upon the warmth there. The indistinct blob coalesced into the vague outline of a human form clad in a black, hooded robe. It seemed to stand on the air in the center of the room. \n\nThe entire group moaned fervently and fell on their faces. \"Master, master, master,\" they chanted. Only the two cops stood. The figure turned in the air and they felt the burning glare of unseen eyes. \n\n\"Who dares to stand in my presence?\" The voice was resonate with evil. Pat shook, more afraid than she had ever been in her life. She saw Mike was ashen. She touched him. The contact somehow strengthened them and she stopped her trembling.\n\n\"They are unbelievers, Master.\"\n\n\"They WILL believe.\" the figure stated. \n\nBoth the Gibsons felt the creature's stare settle on them. Visions swam through their minds. Each saw their heart's desires fulfilled. Power, sex, authority, wealth; all could be theirs. Base cravings buried deeply in the dark corners of their minds were brought forth, examined and satisfied. The evil voice pierced their thoughts, \"All these things will be yours, if you will only fall down and worship me.\" \n\nMike stared at the creature. \"I know who you are,\" he whispered. \"I reject you. You and your promises are empty.\" His voice began softly, then rose to the full power it was capable of, \"FUCK YOU!\" He lifted the rifle he knew was useless, and aimed it at the dark shape.\n\nA shocked quiet descended over the vast room. The hooded creature directed its attention to Pat.\n\n\"And you? What do you say? The man won't be so brave in a minute. If he's lucky I'll simply let my servants tear him limb from limb and drink his blood alive. But I will only be that merciful if you come to me woman.\"\n\nPat's bright contralto voice rang through the dark and the shadow. \"And the horse you rode in on, buster.\" She defiantly stood beside her husband, both pistols ready.\n\nThe dark shape laughed inhumanly. \"That two humans think to oppose me! You have refused my offer, take the consequences then. I will strip the flesh from your bones bit by bit, yours and that of your children. Dark and cold will be your fate. You will despair and try to hide yourselves but you will be unable to. Endless night will be your portion. I will...\"\n\n\"Oh, SHUT UP!\"\n\nA deafening silence fell over the room. Trying to keep both sides of Mike covered, Pat risked a glance backwards. Her mouth dropped open as the old man from the alley limped past her. She gestured to him. \"Mister, get back behind us, please. We'll try to cover you. You need to get out of here.\"\n\nThe old man advanced past Mike. He turned to face the both of them. \"You two are good kids. I'm proud of you. Now you handle them,\" he jerked his head towards the stunned crowd. \"I'll handle loud mouth.\" The old man turned towards the demon. The cane dropped from his hand. In front of the stunned crowd he began to get bigger and brighter. The demon's eyes widened.\n\n\"YOU!\"\n\n\"Me.\"\n\nThe now brightly shinning figure sprang for the dark one. The sound of their unearthly collision shook the entire building. As they grappled, Mike saw the leader raise the sacrificial knife over his head. The assault rifle jumped to his shoulder and the first shot rang out. The knife fell from a nerveless hand as the target crumpled to the floor.",
        "As though that was a signal, the crowd went into a frenzy. Some tried to escape. Some turned on each other. Some rushed the officers. Guns, knives, chains and clubs appeared. Mike threw a grenade to each side and he and Pat ducked the explosions. Jumping back to his feet, Mike advanced towards the figure of the helpless woman. He fired carefully aimed shots each time one of the worshippers attempted to reach her.\n\nPat followed her husband. She knew Mike's whole attention was on rescuing the woman. She determinedly covered him, firing to either side at anyone she thought posed any threat to him. A man rushed towards Mike from their left with an uplifted knife. Pat shot him twice without a thought, much less an order to halt. A woman to her right lifted a revolver and Pat dropped her instantly. She couldn't believe it. She and Mike weren't vigilantes, they were cops.\n\nShe didn't realize that she had spoken aloud until Mike answered her. \"No honey,\" he flung over his shoulder. \"This is a war and we've been picked as soldiers. Well, picked as Marines anyway, I was never a doggie.\" He dropped to one knee, changed magazines and emptied it in quick 3 round bursts.\n\nThen they had reached the altar. Pat holstered one weapon and quickly checked the young woman. She was breathing. Pat almost cursed under her breath as she saw the bruises on the woman's pelvic area. Hearing a shoe scrape on the concrete, she turned to find one of the men who had been surrounding the stone trying to back away. Seeing his robe hiked up into his still open pants, Pat realized he was one of the men who had been raping the woman, and he still clutched a gun. Aiming her pistol lower than normal, she fired twice. Matt spun, to see the man writhing on the floor, his hands clutching his groin.\n\n\"Nice shot.\"\n\n\"Thanks.\"\n\nThe blinding mixture of the dark and light shapes filled the room. Forces beyond human comprehension were in conflict. Pat and Mike felt dizzy. Mike saw the robed figures nearest the battle begin to fall and knew the climax of the battle was at had. He scooped the inert form of the woman up in his arms. He set her carefully behind the protection of the granite altar. Pulling Pat down beside her, he covered both of them with his body. \n\nA massive but silent explosion swept over them. Protected as they were by the granite block, they were still buffeted by the release of the forces involved. When thing stopped falling around them Mike popped over the marble top of the altar, his rifle swinging to cover the room.\n\n\"It's okay,\" came the now familiar old man's voice. Mike helped Pat stretch the young woman's quiet form on the slab. Mike pulled off his vest, now empty of magazines and grenades, rolled it and pillowed her head. Pat snatched off her black leather jacket and covered the woman as best she could.\n\nLooking around the shambles of the cavernous room Pat shook her head. Bodies lay all over in the contorted positions they had fallen. The grenades had torn holes in the concrete blocks and a fine dust covered everything. \"What a mess.\"\n\n\"DAMN, but that was fun.\" The old man spun his cane in a blinding circle. \"I haven't got to fight that son-of-a-bitch one on one in decades now. Thanks for inviting me to the affair. And not to worry Pat, I'll take care of the mess. Well, most of it anyway. I'll leave the ones around the altar to show that you did your job too.\"\n\n\"Who ARE you? What did you mean we invited you? \n\nThe old man smiled. \"You know who I am, Mike. And Pat, your willingness to face the evil here was all the invitation I needed.\" He raised a hand as his words sunk in and Mike, realization on his face, started to kneel. \"None of that, Mike! My ancient foe, now he demands subservience. He looks for worshippers and makes them his slaves. I look for companions, for fellow warriors against the dark. You two are that. And more than you two. I see your children and your children's children all as fellow warriors, be they cops or soldiers or doctors, or simply loving men and women. An ever-growing army that will 'Serve and Protect'.\" His head turned and for a moment they caught again the brilliance concealed beneath his old man's face. \"Your friends are here. I'm proud of them too.\"\n\nWith that he was gone. All that remained where the eight bodies at the altar and the still unconscious woman. \n\n\"Mike! Pat! Are you down here?\" Lieutenant Linda Shannon's voice echoed throughout the chamber. She burst through the ruins of the door, her Browning in both hands. Behind her came Deputy Bob Dupree, Mike's onetime partner, and a dozen other deputies. Seeing the two were safe, they lowered their weapons.\n\n\"Wow, what a mess,\" observed Linda, unconsciously echoing Pat's earlier words. \"What happened here?\"\n\nSomehow Mike and Pat were able to stammer out a story of freak conditions that prevented them from summoning aid and an account of a struggle to rescue the almost victim from a band of armed men. Fortunately the swarm of law-enforcement, rescue and even news crews enabled them to coordinate their stories. The few inconsistencies were blamed on the confusion of the situation.\n\nFinally finished, they trudged wearily towards the parking lot. Linda appeared and stopped them in the corridor. After making sure they were alone, she looked at them and whispered, \"I know a lot more went on there than you're telling. But I trust you. If and whenever you can tell me, I'd like to hear it.\"\n\nMike nodded. Pat squeezed Linda's arm and they left the station.\n\n\"Honey?\" Pat turned her husband around to face her. \"He,\" and Mike knew exactly who she referred to, \" Said you knew him. And you did.\" Mike smiled and fished out the chain around his neck again. He showed her the medal he wore.\"\n\n\"Him?\"\n\n\"Well honey, he is the patron saint of police officers.\"\n\n\"WOW.\"\n\nThe two officers finally reached their home well after daybreak. The house was empty. Pat found the note Carol had left, telling them that a neighbor was taking them to school and Mike, Jr. to daycare. Pat blessed Mrs. Welborn for her thoughtfulness.\n\nShe collapsed into a chair, suddenly so spent she couldn't hold herself up. Mike pulled off her jacket and then carefully unstrapped her gun belt. He left to put their weapons up in the locker they kept them in. When he returned he knelt and carefully untied her boots and took them and her socks off. Pat could tell he was exhausted too, but in a burst of strength he picked her up in his arms and carried her to the master bathroom. When he pushed open the door, the steam billowed out and Pat could hear the water running in the tub. \n\nMike kicked the door closed behind them. He softly kissed her as he helped her out of her filthy clothes. His clothes followed and he settled them both in the tub. She leaned back against his chest, his legs on either side of her. He dipped the washcloth in the hot water, covered it in body wash and began to gently wash her whole body. The soothing touch of her husband's hands, even over her breasts and sex, all but put her to sleep.\n\nAfter he finished cleansing them both Mike helped Pat to her feet. He let the water out of the tub and turned the shower on. Warm but not hot, the water sluiced their bodies clean and restored some of their energy. Pat suddenly giggled as she felt something bump against her leg.\n\n\"MIKE! Don't you ever get tired?\"\n\nHe laughed. \"It must be something you feed me darling, because I never seem to.\" He lifted her to the bathroom floor and they dried each other off. Pat's eyes sparkled as she threw her arms around Mike and kissed him. His strong arms lifted her face even with hers, her toes dangling well off the floor. She clung there, laughing and waving her legs as he walked the two of them their bed.\n\nFeeling it behind her, Pat let go and tumbled onto the fresh sheets. Mike stood over her for a minute. His eyes caressed her petite, shapely form. Her short, dirty blonde hair fell across her face. Mike thought then, as he had always thought, how beautiful she was and how lucky he had been she had come into his life.\n\nPat reached out a hand to her husband. He sat on the edge of the bed and their fingers locked. He was so handsome, she thought. Strong, and yet as loving and tender to her and the children as he could be. She wished she could have given him more. He was a great father, she thought, not realizing that at the same moment Mike was thinking what a fantastic mother she was.\n\nHe bent to her and kissed her. Her mouth opened immediately to him. She rolled onto her side and he matched her movement so they lay facing each other. The kiss deepened, becoming passionate but still loving. She ran her fingers over his chest, delighting in the swell of the muscles and the feel of the hair. He took the breasts he thought the sexiest in the world in his hands. He brushed each nipple with his thumbs, letting his fingers touch every bit of the firm globes.\n\nPat slipped her lips to the side of Mike's neck. She licked down over the pulse point, softly sucking the skin there. The throbbing seemed to echo through her own body, quickening both their heartbeats. He responded by swirling his tongue in her ear and nibbling down the shell with tiny bites.\n\nShe slid her shorter body down his and threw her leg over him. Hooking it behind him she pulled their bodies together. His powerful leg lifted hers and the head of his cock pressed against her open slit. She jutted her hips and with a satisfying lunge he slid all the way inside her.\n\nFor a long breathless moment they simply held each other. Arms wrapped around bodies and their mouths met again. Mike rolled onto his back, his hard cock still buried in her. He kept her body next to his, his arms locked around her back. She slid up and then back down, flexing her lower body. She slipped her hands under him, gripping his shoulders.\n\nHer breath was warm and her tongue a delicious living entity in his mouth. Her hard nipples scraped back and forth over his chest. He pushed up into her. She rode his cock, feeling each meeting of their bodies driving it deeper and deeper into her. She crooned wordlessly as the up thrust of his hips ground the head of his shaft deep into her pussy and rubbed it against her spot. \n\nFaster they moved against each other. Both of them felt fulfilled, the joining of their bodies making them as one. Her body tensed and her internal muscles clamped tightly onto his cock. He swelled inside of her, locking them completely together.\n\n\"Ahhhhhhhhhhhh,\" Pat breathed as she felt Mike's cock empty itself into her. The hot spurt filled her, washing her back and forth as though waves rocked her. She cried, \"Mike!\" and fell to him, his cock pulsating inside her pussy. When the spasms subsided for both of them, she simply laid her head on his shoulder and went to sleep. After insuring his arms held her tight, as his cock softened in her, Mike fell asleep too.\n\nWeeks later Mike pulled up to their family doctor's office. He got out of the truck, then paused as he looked through the window and saw his wife heading for the door. Pat came out of the doctor's office with a very strange look on her face. Mike opened the passenger's side door and helped her in.\n\n\"What is it?\" He asked anxiously as he got back in the driver's side. \"Are you alright? What's been making you sick?\" He quieted as Pat held up her hand.\n\nShe sat there for a moment, thoughts chasing each other across her face so quickly that Mike was unable to read them. She opened her mouth twice without speaking.\n\n\"Honey?\"\n\nPat reached over and took his hand. Her eyes shown with joy mingled with disbelief. \"I'm pregnant,\" she said simply.\n\n\"But, but, but...Pat,\" Mike stammered. \"All the doctors, they said you couldn't, we couldn't; I mean, what happened?\"\n\n\"They don't know Mike.\" She looked at him. \"I believe Dr. Morgenstern used the word 'miracle'.\"\n\nNine months after the battle Pat gave birth to twin boys. Comments were made at their christening about the two boys being given the same middle name. Linda and Bob were the godparents. When the service was over, the Gibsons and their friends left the building with Robert Michael Gibson and Daniel Michael Gibson, each in a parent's arms. As they came down the steps, Pat saw an elderly man leaning on his cane across the street. He smiled at her, lifted his cane in a wave and disappeared into the crowd.\n\n(The End)\n\n(Thank you to my editor and best friend Marian as always. Thanks to Linda_S for her invaluable suggestions and support. And finally, thanks to the real life man who became Mike in these stories, just for being you. Feedback is always appreciated.) "
    ],
    "authorname": "patricia51",
    "tags": [
        "mike fell",
        "fellow warriors",
        "call looked",
        "mike pat",
        "pat answered",
        "man leaning",
        "sergeant gibson",
        "pat suddenly",
        "dark shape",
        "door pat"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/to-serve-and-protect-night-watch"
}