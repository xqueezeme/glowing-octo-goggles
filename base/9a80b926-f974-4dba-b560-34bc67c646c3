{
    "title": "There Must Be A Mistake Ch. 33",
    "pages": [
        "All persons in this novel are fictitious. If you are looking for a great deal of sexual activity, this story is not for you. Those scenes that are included will be evocative, rather than just for the sake of sex itself. \n\nThis story is for your reading pleasure. Its length is undetermined at this time, because I do not know where my mind will take me as I proceed along this journey. I hope you will stay with this story until it reaches its inevitable... \n\nThis story is copyrighted material owned by Prolonged_Debut10. I am over the age of 18, and all my other information is on file with Literotica.com \n\n\"This is the end of the story, don't argue with me!\" \n\n***** \n\nChapter 33 \n\nPrologue: The Adventure Begins \n\nTheir quick honeymoon over, Gordon was on the flight deck at 8 AM, on 18 December. They ran through another simulation, without the help of Teddy. The Exascale computer ran everyone through their paces, and when their three hours was up, everyone breathed a sigh of relief. \n\nWhen the second crew saw them walking out of the spacecraft, looking as though they had been put through a shredder, they shuddered. \n\nGray's backup, Ralph W. Emerson asked him what the hell went on in there. \n\n\"You really don't want to know Ralph, you have to experience it for yourself.\" \n\nMy replacement, my dearly beloved wife, who continued to study her ass off, for this simulation, just in case something were to happen to me, walked towards me, and simply said, \"I hate you already.\" \n\nI replied, \"If you hate me now, I'm going into hiding.\" \n\nIt took the second crew 4 hours and 20 minutes to finish the simulation. When Jennifer came down the walkway, she looked for me with evil in her heart. \n\n\"Luck, you are a dead man. I am going to fillet the skin off your body with a butter knife. I'm going to listen to you scream until you die.\" \n\n\"Does that mean you had fun with the simulation dear?\" \n\n\"Does it sound like I had fun with the simulation dear?\" \n\n\"It certainly does. It sounds like you learned a lot, and if anything were to happen to me, you will be able to handle it.\" \n\n\"Don't you dare use your logic on me Even Luck.\" \n\n\"What would you have done if you had to take over the helm with no experience, and I got sick again?\" \n\n\"I hate you Even.\" \n\n\"I know, but I'll take it out on you tonight.\" \n\n\"I'm on strike. I'm already pregnant.\" \n\n\"Pregnant women get hornier by the day.\" \n\n\"Is there anything you don't know?\" \n\n\"If there is, you haven't told me about it yet.\" \n\n\"Even Luck, I should never have fallen in love with you. You are the bane of my existence. I can't beat you at anything, and I love you madly.\" \n\n\"I thought you hated me?\" \n\n\"I do, and I also love you.\" \n\n\"I can live with that. What's for dinner?\" \n\n\"If you don't take me to a restaurant, I will poison you.\" \n\n\"You are paying for it again.\" \n\n\"At least I know what to do this time.\" \n\n******************* \n\nDycke, Payne, and the completed rockets arrived on the 20th of December, two days earlier than expected. I was exuberant, because I had more time to lock down the final items going into the spacecraft. Nothing else was going on the second floor. Except for the walkways between the aisles, nothing else could fit. Everything was checked, rechecked for stability, scanned, and the area was locked down. \n\n\"I hope your turkeys aren't in that area Gordon, because they are going to die if they are.\" \n\n\"Monty, do I look worried? I knew this area was going to be locked down, just as you did. I'm not worried about my hatchlings, only you should be.\" \n\n\"They're not in this spacecraft. There's no way they could be. Everything was searched, high and low. No area was excluded. You're doing this just to get my goat. When we are in space, your father said I could take you apart. I will, with a smile on my face.\" \n\n\"I filed an application with the Swiss government, requesting a birth certificate with you as my mother on it. I requested a rush order. I should have it in my hand by the 22<sup>nd</sup> of the month.\" \n\n\"You did not, you would not do that to your mother.\" \n\n\"I told her about it. She could not stop laughing. You can ask her.\" \n\n\"The Bishop said there is no restriction on beating a person to the edge of death, but not killing him. When you show me that piece of paper, you better be prepared for the beating of your life.\" \n\n\"You can't do it until we are in space. You will have to wait three days, and control your temper until then. I am going to enjoy the look on your face for those days.\" \n\n\"Zoey is not going to like being a virgin for those three days.\" \n\n\"Zoey never fails to get a rise out of me. She got a rise out of me the day after you knocked me senseless.\" \n\n\"That girl must be very good.\" \n\n\"My wife is beyond good, she is fantastic.\" \n\n\"I have patience, I will wait until the time is right, and bring you to the edge of death.\" \n\n\"I will be waiting for you, because you were my best man.\" \n\n\"That's another reason I'm going to kill you.\" \n\n\"What did the Bishop say about killing me?\" \n\n\"Sometimes I hate religion.\" \n\n\"But you have a relationship with God, don't you?\" \n\n\"Yes I do. She and I have a personal relationship.\" \n\n\"Good for you.\" \n\n****************** \n\nThe train tank cars were tested, while they were at Golden Colorado, for any toxic chemicals, or oil residue. Several were found unusable, and were replaced. 15 tankers were lined up, end to end, to be filled with the purest water the Coors Brewing Company had to offer. It took a day and a half to fill all 15 cars with 517,500 gallons of water. \n\nAlthough the trains were normally restricted to 55 miles an hour by their company, I put a restriction on them to a maximum of 40 mph. One mistake, one accident, and the launch date would have to be pushed back by weeks. The trains left Golden Colorado on the evening of 19 December, for the 14 hour trip to Temple. 20 tanker trucks were waiting for them at the Southeast Railroad Terminal to begin the unloading process as soon as the train stopped. \n\nNo one involved in the unloading process was allowed at the NEST, until they received a phone call that the train was at the station. We wanted everyone rested when they came to work. \n\nThese technicians were at their positions at 8:45 AM, and the first truck arrived 5 minutes later. All water intake ports were opened. As each truck arrived, they were directed to the next open port. Our pumps drained these tankers in under 8 minutes, and the next truck was ready to replace it. It was working like clockwork. As the spacecraft filled with water, you could hear the landing gear groan. I guess 4.5 million pounds of water will do that to you. \n\nWhen the men on top of the cranes saw the water starts going over the top of the inlets, they screamed and pumped their fists in victory. Water reaches its own level, and pushes air out as it rises. When we entered Outer-Space, we were now protected from radiation, and gamma rays. \n\nThose hardy men came down, and other technicians went to the top to seal those inlets with the thermal insulation. Then they put on Schneider Industries magical glue, heat it to the appropriate temperature. They sealed the final four pieces of our exterior shell in place. Our beach ball was completed. \n\nAdam Schiff crawled through the bowels of the spacecraft looking for any leaks in the plumbing system. He found plenty of them, and heat sealed them all. It took nine hours for him to do the entire system, because none of his instructors would go inside the ship to help him. I fired them on the spot, and told them they would receive no bonus at year's end. \n\nInside the ship there was not a leak to be found. Not only did my crew look everywhere, but Dycke insisted on joining them. He said he knew where leaks would occur, because it would be in the most inconspicuous spots. \n\nI asked him if he didn't trust the engineers, and technicians that put our ship together. \n\n\"Even that's the first time you called this our ship. You always refer to it as your ship.\" \n\n\"Dycke where would this ship be without you? Almost 65% of it came from your engineers and factories. It may have been our ideas, and our scientists, but you and your people made it a real, and tangible product. That's why Schneider Industries is the 2nd largest name on the outside of the ship. Only the United States of America is bigger. If you look at The Good Luck name, it is smaller than yours. You are on one side of the United States, and the ships name is on the other. That's why you probably haven't noticed it. I didn't do that because you are my friend, I did it because you built our ship.\" \n\n\"Don't you dare make me cry, you bastard. I still want to see your cock.\" \n\n\"Okay, let's go up to the fourth floor, at least there will be a bed for you to fall on.\" \n\nWe reached the fourth floor, and I told Dycke to pick any room he wanted. \n\nHe pointed to a room all the way in the rear of a hall. \n\nI opened the door, and Gordon yelled, \"Dad get out of here, we're busy.\" \n\nDycke said, \"No place is safe from those two.\" \n\n\"Pick a different room, and let's hope there's no one else in there.\" \n\nThis time we knocked on the door before we entered. There was no response, so we walked in. I locked the door, and we checked every nook and cranny to make sure no one was in the room hiding. \n\n\"Okay Even let's see it.\" \n\n\"Sit on the bed, I don't want you to hurt yourself.\" \n\n\"Bullshit.\" \n\n\"Have it your own way.\" \n\nI open my belt, unbuttoned the button, and dropped my slacks to the floor. I asked him if he could see the head of my cock peeking out from underneath my shorts. \n\n\"I want to see it all Even.\" \n\nI dropped my shorts, and his eyes dilated. \n\n\"Put that thing away. You could kill the first row of dignitaries with it.\" \n\n\"Do you think I would have won Zoey's freedom?\" \n\n\"Hell, I think you would have freed all the slaves in Saudi Arabia with that thing.\" \n\n\"Thank you Dycke, are you satisfied?\" \n\n\"I'm glad I'm not gay.\" \n\n\"Is our ship ready to go?\" \n\n\"You're damn right it is.\" \n\nThe Good Luck 1 was ready for space. \n\n**************** \n\nIt is always wonderful having William Zabo on your side. It was time to get the remains of President Clark, and his wife, Julia Atwater to Temple so they could be prominently displayed before placing them in the spacecraft. \n\nThe head of the mortuary department at Arlington National Cemetery said it would take at least two weeks before we could get the remains. William asked who was in charge of the cemetery's budget. He was told Sen. John McCain of the Senate Armed Services Committee. \n\nWilliam smiled and said, \"Give me his phone number, and don't tell me you don't have it.\" \n\n********************** \n\n\"I'm sorry sir the senator is busy.\" \n\n\"Ask the senator if a $500 million donation to his Democratic opponent in the upcoming election will be enough for him to lose his seat in the Senate?\" \n\nMcCain was on the phone seconds later. \"Who are you, and what do you want?\" \n\n\"I want the remains of President Clark and Mrs. Julia Atwater in Temple Texas by tomorrow morning. If they are not here, I want your head on a plate in the next election.\" \n\n\"You don't have that type of money. Very few people in the United States have that type of money to throw around.\" \n\n\"Do you mean your staff hasn't Googled my name yet? I put down $30 billion for the spacecraft that is taking off on December 25. Just in case you didn't hear me Senator that was $30 with a B Billion dollars. I can crush you like a snail in the next election.\" \n\n\"Their ashes will be at your facility by 10 o'clock tomorrow morning.\" \n\nWilliam didn't answer him, he hung up the phone. \n\n\"I love the way you do business William. You are extremely polite.\" \n\n\"You should have seen me when I was in my prime Even. I was far more polite than I was today.\" \n\n\"I think I'm going to miss you most of all. You brighten my life.\" \n\n\"When I took over for you I thought it was going to be a short-term appointment. I grew to love it as much as you do.\" \n\n\"You were the only one I knew that could do this job, and do it with a great deal of strength, and vision. That's why I called you.\" \n\n\"Your memory must be failing you. You didn't call me your lovely wife did.\" \n\n\"Remind me to thank her. She hooked the biggest fish there ever was. I believe your son will grow to love it as much as you do.\" \n\n\"When Jemma told him she wanted grandchildren he laughed. He said he wasn't going to get married, until he found someone like her. Then Teddy told him he was going to meet a redhead on Christmas Day and marry her. I think my boy panicked. Then she said they were going to have three children, two red-headed girls, and a boy that looks like me. He wanted to fly back to China that moment. He said it was safer for him there.\" \n\n\"Does he know he's dead in the water?\" \n\n\"Every time he passes Jemma, she laughs at him.\" \n\n\"The poor guy must be dying.\" \n\n\"Patrick is no help either. He keeps asking if he can be the best man.\" \n\n\"He should be, they are brothers.\" \n\n\"That's if William let's him live that long.\" \n\nI laughed, and went back to work, although there was very little for me to do. \n\nI checked the guest list, and the seating arrangements for the dignitaries, and wondered why I was looking at it. Exascale had done it for us, and it was perfect. I felt like odd man out, because of that machine, but when we were in space it would be invaluable. \n\nI leaned back in my chair and began to reminisce on how this all started. It was a simple conversation between Delicious, Rod, and me, while we were sitting in my kitchen. We had Delicious suite of engines to get us out of the atmosphere, and into deep space easily enough. She kept talking about the thrill of space, and being the first human to leave our solar system, with the possibility of reaching another one. \n\nRod thought we were both crazy, until the conversation turned serious. \n\n\"What are you two going to do, build the spacecraft in your backyard?\" \n\nDelicious replied, \"Why not, we have enough room.\" \n\n\"You two are scaring me, I believe you're actually going to do it.\" \n\n\"Do you want to do it Delicious? You've done the hard part already. You've got us out of the Earth's atmosphere, without using a liquid propellant, as Doctor Werner von Braun told the world we had to do in order to explore space successfully. You have the design for your Ion/H2 engines, and a plan for a nuclear power plant that is out of this world. \n\nWe will run a simulation, through the computer, and if we are able to reach .99 the speed of light, I'm willing to give it a chance.\" \n\nRod said, \"I'm leaving. You're both crazy. No you're both crazier than you were yesterday.\" \n\nThat was it. That was the beginning of this eight year dream to go to the stars. It wasn't an earthshaking event, it was just a quiet whisper, except for Rod of course, one morning over coffee. \n\n************** \n\nIn the beginning, Delicious floored me by breaking the freolyte code, which both I, and teams of other scientists had spent years working on with no success. That prompted our trip to Austin to have her tested, and our fateful trip to the Grand Canyon, which broke both our hearts, and nearly killed my pilot and me. \n\nThe happiest part of that trip was meeting and falling in love with Jennifer, and her 3 year old son Gordon. It was instantaneous for both of Jennifer and me. Gordon knew it also. \n\nThere was my quick trip to the northernmost point of the United States, Point Barrow, where I never thought anyone would find me. However, there were two phone calls waiting for me. Director Meil, of the agency that does not exist, and is funded by a government that doesn't want to know about it. \n\nThe director tore me a new asshole because I ran away from a child, and hung up before I could answer him. \n\nThe second phone call was from my attorney, and friend, Rod Laver. He knocked me cold when he told me Delicious was not my niece, but my daughter, and to get my ass back to Denver immediately. \n\nI hired Michael who had a twin engine aircraft and guaranteed me would be in Fairbanks before a storm hit. His estimate was wrong by 55 miles, or about 6 flying minutes. \n\nWith both engines out, we pulled a maneuver Jennifer told me about on our way to Fairbanks. \"You have never heard of an airplane backing into a mountain, have you?\" \n\nMichael thought I was out of my mind, but the alternative was crashing into the trees head on, and certain death. \n\nAt 100 feet above the trees, he hit the left rudder, and turned the plane hard to the left, raising the right wing, turning the tail into the trees. \n\nWe are both alive today, because of Jennifer's awful joke. \n\nWhen I walked up to her door, pulling Michael behind me, in a rickshaw of my own design, she was shocked. Missing for four days after our plane crash, and presumed dead, I told her she was coming to Denver with me to get married. I didn't ask her, I told her. She said it was the worst marriage proposal she had ever received, but she was overjoyed with it.\" \n\nAfter making sure Michael was taken care of by the best orthopedic surgeon in the country, and that he would never want for anything, we said our goodbyes. \n\nShelby Meil, the son of the director of the agency that does not exist, took me to a diamond store to buy Jennifer ring. He also made a huge 'Blood Diamond' bust, when he found several of the diamonds the dealer was trying to sell me were not laser tagged. \n\nI let Shelby do his thing, and started walking back to the hospital. Jennifer pulled up beside me and told me I looked lost. They were going to Wendy's, Gordon's favorite place, for dinner, and asked if I wanted to tag along. \n\nIt was the best offer I ever had. \n\nWe split a table with an elderly couple, and I excused myself to go to the bathroom. Gordon wanted to tag along, because he had never seen the inside of the men's room. He always had to go with his mother into the ladies room. He said it was embarrassing. \n\nI showed him the ring I was going to give his mother, and he said she was going to cry. I asked him what he did when she cried. He said he hugged her until she stopped. I asked him if he would do that for me, and he said he would. \n\nWhen I returned to the table, I got down on both knees and took Jennifer's left hand in mine. I asked her as graciously as my mouth would offer, and in between her tears she said, \"Yes.\" \n\nGordon tugged on my sleeve. \"Dad, she's crying. I have to give her a hug.\" \n\nEverything moved on from there, and the next morning we were in a 787 flying back to Denver. Her family was there to greet her, and my friends from MIT, and colleagues that rarely get together except at symposiums were there to greet me. I was stunned. There was a huge party that evening, and I was ready to kill a young man, because he had eyes and hands all over my daughter. Delicious didn't know that fact yet, and I had not seen the proof. However I knew Rod would never lie to me, and if he said it, it was true. \n\nJennifer had a stranglehold on me, saying, \"Down daddy, they are only dancing.\" I told her what dancing led to and she laughed at me continuously throughout the evening. Delicious brought the young man over to introduce him to us. Of course she lied to me. This boy could not be more than 22 years old. \n\n\"Dad, this is Dr. Grayson Thyme, he works for NASA.\" \n\n(Yeah right) I asked him how the ISS was doing. I knew by the look on his face I had stumped him. \n\n\"I have no idea, I'm working on Orion, the capsule that will take four people to Mars in less than 50 days.\" \n\nI started a war between him and Delicious right there. \n",
        "\"I guess you haven't talked to my niece about it?\" \n\n\"I didn't want to talk about anything she wouldn't understand.\" \n\nI was so happy when she went for his throat. Their relationship was over. \n\nHe wanted to know why she reacted that way, and Delicious remarked, \"I don't want to talk to you about anything you won't understand.\" \n\n\"One for the good guys. This relationship was heading downhill quickly.\" \n\nThen the bastard hit a home run with the bases loaded, in the bottom of the ninth. \n\nHe asked her if he could reserve all the dances for the second half of the affair with her, so they could discuss these and other things of mutual interest. Jennifer was nodding her head like one of those dogs in the back window of a car. \n\nSaturday we sat down and read Divine's diary, and found out how I fathered my daughter. \n\nSunday Jen and I were married, and the happiest years of my life began. \n\nMonday evening, the beginning of the scientific talks that would lead to Christmas Day started, and here is where we will begin the END of this saga. \n\n155. Wednesday, December 17<sup>th</sup>, Nine Days Until Launch \n\nWhile we were still connected to outside power, water, and sewage lines, everyone began their final checks. From the fifth floor down, every nook and cranny was nearly sterilized to get any particles of dust and dirt out of the ship before we changed to the permanent electrostatic filters. \n\nAs the fifth, and fourth floors were cleaned, they were roped off. We had 90 rooms available, and 64 of them were to be assigned. Parents with children, above the age of six were given rooms next to one another, and the rooms next to parents with children under that age were left vacant for when they grew into that age group. \n\nWe had 90 stasis units scattered on the fifth, fourth, and the third floors. We knew, even though we had birth control supplies on the ship, we would have new children to deal with in the future, and these units were a must. \n\nIt took 2 days to complete these floors. \n\nWhile the fifth and fourth floors were being cleaned, Dycke's technicians were going over the exterior shell of the Good Luck with a fine tooth comb. They paid special attention to the areas where Sony put the cameras to verify they had not cracked, or left unsealed any of the plates where they were secured. It took almost a year to install this camera system, it would be a shame for them to be the cause of the failure of this mission. It took the technicians 4 \u00bd days to finish this humongous task. \n\nOn 19 December both the primary and the backup crew assembled on the flight deck. We simulated a normal takeoff, and crew rotation. As we rotated into the 3<sup>rd</sup> day of the rotation, I feigned being sick and fell off my chair. Jennifer screamed, because she did not know I was acting. \n\nWe were cruising along at 4 times the speed of light when the computer printed out, \"Meteorite, collision course 45 seconds. Request instructions.\" \n\nGray yelled, \"What do you want us to do Captain?\" \n\nJennifer replied, \"He's sick, I don't know what we should do.\" \n\n\"When Even is sick, you are the captain. We have 30 seconds to live, what do you want us to do?\" \n\n\"I don't know.\" \n\n\"Mom, we have 20 seconds to live, do something.\" \n\nJennifer remembered what you were supposed to do when you saw a tornado coming at you. \n\n\"Descend 500,000 meters, turn away from the meteorites closest approach.\" \n\n\"Aye captain, descend 500,000 meters, turn away from the meteorite's closest approach.\" \n\nI looked up at my wife. \"Don't you ever wait that long to make a decision again. If I am dead, 63 other lives depend on you thinking under pressure. I don't count, they do.\" \n\nNaturally, she kicked me. \"You bastard. You did this to me on purpose. You scared the hell out of me. I forgot we were on the ground and not in space.\" \n\n\"I hate all of you for acting so well. I will get even with you in one way or the other. However, this guy is going to have bruises all over his body when I get finished with him.\" \n\nShe kicked me again. \n\n\"Have you no feeling for a sick man?\" \n\n\"You are going to be very sick when I get finished with you.\" \n\n\"I can't wait. I love the way you get even with me.\" \n\nWe ran through several other simulations with Jennifer as the captain, including a computer failure, and an overheating of the nuclear power plant. She responded superbly to these incidents, even though I was nibbling at her ears. \n\nThe primary crew was doing excellently, but the secondary crew still had a lot of work to do on their efficiency. I scheduled them for a full 8 hours of training on the 20<sup>th</sup>. Screwing up in space was not acceptable. \n\n**************** \n\nAdam asked, \"What are you wearing to our wedding dear?\" \n\n\"A flight suit dummy.\" \n\n\"You mean you're not going to be naked as you are now, or like that woman on Star Trek?\" \n\n\"I know you're used to me being naked at home, but you better be prepared to see me in clothes from now on buddy, and I've never watched Star Trek. Television is a waste of time.\" \n\n\"Buddy, who the hell is buddy?\" \n\n\"He's my 2<sup>nd</sup> choice. He'll be the guy I'll marry just before take-off on Christmas afternoon in front of over 1000 people, if you're not on time, and with my ring. I'll just marry him instead and fly off into space.\" \n\n\"I think I'll spank you to find out if you remember my name.\" \n\n\"I think I'll give you a hard hat to see what happens when you hit the floor this time.\" \n\n\"It's not fair Laura. I outweigh you by 60 pounds, and you throw me around as if I was a tennis ball.\" \n\n\"All those years of chasing girls made you soft. I was taking self-defense lessons, and as you have felt many times, and over many parts of your body, they have paid off.\" \n\n\"Yes I know, but do they have to hurt so damn much. How about a shower?\" \n\n\"We just came out of the shower; a nice hot invigorating shower.\" \n\n\"We can take a shower, without using water this time.\" \n\n\"Will you rub my front again?\" \n\n\"I will pay special attention to your front, and then I will turn you over, and pay special attention to your rear, neck, ears and hair. When I am finished with you, you will not be able to walk.\" \n\n\"You didn't mention doing my legs.\" \n\n\"They 'cum' at no extra charge.\" \n\n\"How magnanimous of you.\" \n\n\"I love doing between your toes. The way you react tells me they are connected directly to your brain.\" \n\n\"It must be the way the nerve endings get attached to the spinal cord. They run up the inside of my calves and thighs, directly under vulva of my vagina to get to my coccygeal. From there they go directly to pituitary gland in my brain, which releases my endorphins, which lets them run wild. You couldn't pick a better place to play on my body.\" \n\n\"Wasn't there a shorter way to say you liked me to play between your toes?\" \n\n\"Do you want to play with my front?\" \n\n\"Desperately.\" \n\n\"Will you accept my long answer?\" \n\n\"Positively.\" \n\n\"Could your answers be any shorter?\" \n\n\"No.\" \n\n\"In that case, I think I'll let you begin.\" \n\n\"I think I'll have a beer first.\" \n\n\"If you do I can guarantee you one thing, you will not be able to have sex on December 25 through February 1. It will take that long for both your arms, and legs to come out of the casts they will be in.\" \n\n\"I have waited this long, what's 6 more weeks?\" \n\n\"You forgot to add the pain you will be in, plus the excruciating pain I will be putting you through during the 6 weeks of your incapacitation.\" \n\n\"Would you like a sparkling water?\" \n\n\"No, a V 8 will do.\" \n\n\"You don't drink those very often.\" \n\n\"I'm not going to drink it, I'm going to spill it on the floor to show you what your blood is going to look like if you get yourself a beer. You are the one that said you wanted to play, and got me ready. Now you want to leave me in this condition. You know how angry I get with you when you do this to me, but you insist on doing it anyhow. I hope you enjoy your beer, because you are going to work those calories off in a hurry. \n\nHowever, I think I'll go for a run first, and calm down. I may not like you right now, but I don't want to kill you either. I'll see you in 3 or 4 hours.\" \n\n\"You've never run for 3 or 4 hours before.\" \n\n\"You've never gotten me this frustrated before either.\" \n\n\"Can we start over again?\" \n\n\"I don't know, can we?\" \n\n\"What are you wearing to our wedding dear?\" \n\n\"A flight suit dummy.\" \n\n\"You mean you're... fuck this.\" \n\nAdam rolled over and looked Laura in the eyes. \"I'm going to kiss you, I don't want to wind up on the floor.\" \n\nHe kissed her, and felt her hand playing with his balls. He immediately tensed up. \n\n\"What's the matter Adam, I played with these before.\" \n\n\"I was hoping they were going to stay attached to me, so they could make a junior, or a juniorette one day.\" \n\n\"I'm hoping for that too Adam. Let's not fight so often over the things that piss me off.\" \n\n\"There's no beer on the ship. It would be an awful long walk for me to get one.\" \n\n\"An awful long, cold, walk for you to get one.\" \n\n\"How cold is space?\" \n\n\"That's not a good question Adam. Space can burn you, or it can freeze you. Even though you experience a nominal temperature of negative 240\u00b0F, metal can reach nearly 900\u00b0F, when exposed to the sun. That's why nearly every piece of metal has a coating on it to keep it from showing. \n\nIn the deepest parts of space, it is believed, the temperature is plus 2 Kelvin. At 0\u00b0 Kelvin, all molecular activity stops.\" \n\n\"You couldn't just say it's minus 500\u00b0 out there. I had to get another long answer.\" \n\n\"If you ask me a question, I am going to tell you the truth. I am not going to tell you a half truth, but the whole truth, so help me God.\" \n\n\"What size are your breasts?\" \n\n\"My right breast is 34 \u00bd C. My left breast is 34 \u00bc B+.\" \n\n\"I'm going to have to pay more attention to the left breast. We have to build up its muscle tone to have it match its mate.\" \n\n\"Did you know your left testicle hangs lower than your right testicle? Would you like me to pull on the right testicle to make sure it matches the left?\" \n\n\"Where were we before I asked you about the temperature in space?\" \n\n\"You were kissing me.\" \n\n\"Oh yes, I remember now. Let's resume that activity, it's safer than talking, especially for me.\" \n\n\"Do you mean you're going to shut up for a while?\" \n\n\"Yes.\" \n\n\"Do you remember where you said you will going to start?\" \n\n\"I do.\" \n\n\"You're supposed to save those 2 words for the priest on Christmas day.\" \n\n\"I know.\" \n\n\"Do you think you will be able to repeat them?\" \n\n\"Absolutely!\" \n\n\"You do know how much pain you're going to be in if you forget to say those two words, don't you?\" \n\n\"Yes. \n\n\"I thought you said you were going to shut up, and start on my front.\" \n\n\"Sorry.\" \n\n***************** \n\n\"Mom, your dynamic duo is back!\" \n\n\"Oh my goodness, she's cooking a ham and sweet potatoes. You can tell, because everything is burning.\" \n\n\"I heard that Rebecca, and nothing is burning. Get in here and give me a kiss.\" \n\nDebbie and Rebecca ran into the kitchen and hugged their mother. \n\n\"Did you miss us mom?\" \n\n\"Of course I did. Sleeping with your father every night without fear of anyone listening at our door. Walking around the house naked without fear of anyone looking at us. It's been a terrible existence.\" \n\n\"Do you see what I mean Deb, she's probably pregnant.\" \n\n\"I am pregnant and you knew that before you left.\" \n\n\"Then why all the playing around with dad. The Bible says you're only supposed to have sex in order to get pregnant. Once that's accomplished you're not supposed to do anything anymore.\" \n\n\"You keep to your version of the Bible, and I'll keep to mine. Where are your grandparents?\" \n\n\"Waiting for the taxi to unload.\" \n\n\"Get out there and help them.\" \n\n\"We are, we just wanted to come in and say hello first.\" \n\nFrom the front door they heard, \"The pack animals are here.\" \n\n\"Joan, Sam, we were just coming out to help you.\" \n\n\"Don't worry Sandy, there is plenty more by the curb. Something smells good.\" \n\n\"That would be dinner getting ready. Go into the kitchen and get yourself something cold to drink. We will be right back with the rest of the packages.\" \n\n\"Carrying things this heavy, this far, is against the child labor laws. We should get paid for this.\" \n\nSam said, \"You do, and very well I might add. You go to a private school, take dance lessons, tae kwon do, and play golf every week. You are going to college starting in January.\" \n\n\"That's not fair grandpa, we're going to miss Junior and Senior Proms.\" \n\n\"Okay you two, do you want to tell me what you did, or should I leave it up to your grandparents to tell me how you missed high school?\" \n\nDebbie and Rebecca shouted, \"She tricked us.\" \n\n\"One at a time please. Rebecca you go first.\" \n\n\"Grandma said I had to take a three-part test to see if I should start as a freshman, or a sophomore in high school, because I was much too smart to continue in 7<sup>th</sup> or 8<sup>th</sup> grade. I didn't realize she lied to me until it was all over. She is as sneaky as you are, but she comes at you from different angles. It was the college aptitude test. I scored a 1580 on English, 1540 on math, and I aced the writing sample. The little bitch sitting next to me beat me. She aced math too. They knew we weren't cheating because we were in 2 separate rooms, while we were taking the exams. \n\nThen we went through psychological tests, supposedly to see how we would do among sophomores in high school. When I finished my exam with this psychologist, she said to me, the other sophomores would run away from me. \n\nDanni's psychologist had the same feeling.\" \n\n\"What did they ask you Joan when they were finished?\" \n\n\"They wanted to know what their parents were like. I told him my son is a doctor, and at my daughter-in-law has a degree in psychology. I think they were getting ready for me to say that their parents were Attila the Hun, and Lucrettia Borja, because of the way they attack people verbally. \n\nSam told them that unless they are provoked, they are the sweetest kids you would ever want to meet. They start the University of Chicago on a Full Scholarship January 16. Look at all the money I'm saving on tuition, books, and fees. No boys will ever go near them, because they are jailbait. I will drop them off at school every morning, and pick them up at the library every evening. If they have to stay later, I can always hire one of your agents to watch over them, like a fairy god mother/father.\" \n\n\"That's going to put a severe cramp in your golf outings Dad.\" \n\n\"It's already been thought of daughter dear. Several of our neighbors have fallen in love with these 2 ruffians, and have volunteered to take care of them in our absence.\" \n\n\"Mom, grandma and grandpa are old, but the people he's talking about are really old. Most of them can hardly walk. We would be taking care of them, not the other way around.\" \n\n\"That may be true, however they have maids, and servants, plus chauffeurs to drive you to school. I don't think you will find they are not a hindrance to your education.\" \n\n\"Can we change our minds and go with you mom?\" \n\n\"I'm sorry dear all the rooms are taken.\" \n\n\"You're lying just to get us to stay here with grandpa and grandma.\" \n\n\"Yes I am.\" \n\n\"Yes she is, and I won't let her change her mind.\" \n\n\"Dad!\" \n\n\"Hello brats, how are you?\" \n\n\"We're going to the University of Chicago next month.\" \n\n\"You're going on a field trip?\" \n\n\"We're going as freshman.\" \n\n\"When did all this happen?\" \n\n\"Your mom tricked us.\" \n\n\"Didn't I tell you to watch out for her?\" \n\n\"We did, but she was really sneaky about this one.\" \n\n\"Let me say hello, and then hide behind a wall before she gets me to commit to something I don't want to do.\" \n\nJoe walked over to his mother, kissed her on both cheeks, and told her he's leaving on 25 December. \n\nHe hugged his father, and asked him if his mother was holding up a little doll, and sticking pins into it. \n\nSam laughed. \"Joseph, she doesn't need dolls anymore. All she has to do is think about it and it's done. How do you think your girls skipped high school?\" \n\n\"I have no idea, but I'm sure I'll find out.\" \n\nDeborah yelled out, \"It's my turn to tell the story.\" \n\nShe did, nearly word for word the way Rebecca did. \n\n\"You are something else mom. How and when did you think all of this up?\" \n\n\"Your father wanted them tested to see what their IQs were. I thought it was a waste of time, because I knew they were extremely smart. I set up this private test with the College Board with a little stipend to sweeten the pot. They thought I was crazy, and the kids would blow the test. When the 1<sup>st</sup> two parts came through their computer, they thought it was a mistake, and ran it through again. The computer verified their scores, and then they went to the writing samples. They were given two different subject matters to write about, and both of these innocent children were given the maximum score. Joseph they ate this test alive, and when their scores were shown to Northwestern, the University of Chicago, and the Loyola University, they all offered full scholarships. They chose Loyola, your mother and I chose the University of Chicago. You will never guess who won.\" \n\n\"That's another thing dad, at least with mom we could negotiate, and come up with reasonable terms. With your mom and dad, they listen to us intently, tell us our arguments are very cogent and well thought out, and then they tell us what we are going to do. It's not fair.\" \n\n\"There's another problem Joseph, the girls are already shooting in the low 90s. They've been playing golf for 2 months. Granted there playing from the ladies tees, but when they get on the greens, they are deadly. I have a 6 handicap. By this summer, they may pass me up, and I will kill them both.\" \n\n\"If you kill them dad, you'll be in jail, and mom will get all the money. The girls will lose their full scholarships, and your 6 handicap goes out the window. No more trips to South Florida, Palm Springs, Hawaii, and Bermuda. All because 2 girls have lower handicaps than you do. All you have to do is blame it on age, a bad back, or arthritic knees. I'll write you a note declaring all these maladies, including your lack of mental acuity.\" \n\n\"As long as you leave that last part out, I'll accept that note.\" \n\nJoan laughed. \"What are you going to say about my 3 handicap Sam?\" \n\n\"You keep moving the ball, and I have pictures to prove it.\" \n\n\"I always have a judge standing next to me when I move the ball one club length out of the hazard. You conveniently leave him out of the picture.\" \n\nSandy asked the girls if the University of Chicago had a theater program. \n\n\"Yes they do, but what are they going to do with dwarfs like us?\" \n\n\"If you want to get into the program, I think you would be perfect. Both of you can sing, and God knows you can act. See the director of the theater program, and ask him. If he thinks he can work you in to the program, he'll give you an audition. If not, he'll tell you. I'll guarantee you he'll put your names down and keep you in mind if they're going to do Shakespeare's \"A Midsummer Night's Dream.\" \n\n\"Mom, we don't want to be fairies. As we walk around the campus, everyone will say, 'There go the fairies.\" \n\nJoan asked, \"Is there anything you two haven't read?\" \n\n\"Mom asked us not to read anything 'X' rated. She can't put a block on a computer that we can't undo in half the time it takes her to do it. However, when she asks us not to do something, we won't do it.\" \n\n\"What else did she ask you not to do that you won't do?\" \n\n\"She asked us not to jump in front of the moving car, jump out of an airplane without a parachute, put your hand over an open flame, or get in the way of a moving bullet. We thought these were all very good ideas.\" ",
        "Joseph laughed. \"Are you still wondering why they got a full scholarship to the University of Chicago mom?\" \n\n\"No Joseph, I'm amazed they made it to 10 and 11 years old, with ideas like that drilled into their heads.\" \n\n\"Grandma, if we got in the way of a moving bullet, you would have to spend some of your money on our funerals. \n\nGrandpa would have to spread our ashes on the 9<sup>th</sup> green, because he always double bogies that hole. \n\nThe police would always wonder why 2 children, our age, would walk in front of a moving bullet, when their grandparents just received a huge amount of money for their care. You would constantly be under suspicion, until the district attorney would file charges against you. Any jury, listening to the amount of money you would receive if we were deceased, would find you guilty. The state would take the money, and you would be wearing prison stripes for the rest of your life. I don't think orange and green are your colors.\" \n\n\"Can you see why they aced the writing portion of the SAT Joseph? You give them a kernel of information to work with, and within moments you have a full ear of corn. They are both amazing young women, and they are a credit to both of you.\" \n\n\"We should have given them to your parents 10 years ago Joseph. It would have been an extremely exciting adventure for them watching these 2 grow up. My ulcers will attest to it.\" \n\nDeborah said, \"You don't have ulcers yet.\" \n\n\"Does that mean you're saving them for your grandparents?\" \n\n\"Not for grandma, but when I shoot a 68, grandpa is going to rue the day he forced us to play golf.\" \n\n\"I hate you both. You're not even playing with good clubs yet, and you're shooting in the 90s. I should have my head examined.\" \n\n\"Are you sure you don't want me to add that last line on your note dad?\" \n\n\"Be quiet Joseph, you're lucky you studied all the time, or I would have wrapped a club around your neck.\" \n\n\"I took the easy way out dad. It helped me get great grades. I never had to walk miles chasing after a little white ball, and never got angry, when I missed a 2 foot putt.\" \n\n\"Dinner is ready. Everyone sit down at the table, except my 2 girls. You two can help me serve.\" \n\n\"Why is it always us? Are we slave labor? Are we the lowest part of the totem pole? Are we the ones that are kicked off airplanes because they are full? Are we the ones that are not allowed on roller coasters, because we don't reach the height requirements? Are we the ones that go to the Super Bowl only to find out that our tickets are frauds? Are we?\" \n\nTheir grandparents, and parents yelled, \"Yes!\" \n\nRebecca said, \"Well that answers those questions.\" \n\nDinner was a raucous affair, talking about the fears of going to college, without high school experience. The amount of time they would have to spend in the library as opposed to the time they spent in the classroom, and allotting time to have fun on campus. College was a fun experience, but it was also a demanding one, and they would have to discuss many things with their professors to make sure they were going to give him/her exactly what he wanted. There is no doubt they could do the work, but it was the format they wanted it in that was important. \n\nWhen dinner was over, Rebecca said, \"Don't tell me, we have to clean the table. It's all part of the growing up experience, or the slave labor contract.\" \n\n\"Thank you Rebecca, we were going to do it, but since you volunteered, you and your sister can do it for us.\" \n\n\"Volunteered my...\" \n\n\"Watch your mouth young lady.\" \n\n\"Yes dad, sorry about that.\" \n\n\"You may begin cleaning the table, and you are forgiven.\" \n\n\"Thanks dad.\" \n\n\"Come on Deborah, we can get this done in 5 minutes.\" \n\n\"How did I get involved in this? You volunteered not me.\" \n\nRebecca whispered in her sister's ear, \"If you want to remain a virgin, you will help me clean the kitchen. If you don't clean the kitchen one of these nights, I will take that pink thing that you're hiding, and shove it up your pussy to make you scream and bleed. Are we on the same page now?\" \n\n\"How did you find out about my little toy?\" \n\n\"When was the last time you could try to hide something from me?\" \n\n\"Never.\" \n\n\"Where did you get it and where can I get one?\" \n\n\"I already bought you one. I knew you would find out about mine.\" \n\n\"Where is mine?\" \n\n\"It's in the pocket of your jean shorts.\" \n\n\"It's too cold to wear jean shorts.\" \n\n\"That's why it's in the pocket of your jean shorts.\" \n\n\"You sneaky bitch. Why didn't you hide yours in there?\" \n\n\"I knew you would smell me on it. You have a nose like a bloodhound.\" \n\n\"I don't hear dishes moving in there.\" \n\n\"Debbie and I are talking. We will get to the dishes in a moment.\" \n\n\"Are you saying I have a big nose?\" \n\n\"No, our noses are exactly the same, but we are so use to each other's smells we can pick them up from one room to another. We can even sense when one of us is troubled, or happy. We are as close as twins, and I wouldn't change it for the world.\"  \n\n\"Neither would I, except for the pimple on your nose.\" \n\n\"I don't have a pimple on my nose, you're just trying to rile me up. I'll take my little friend, lubricate it, and shove it up your ass for saying that to me.\" \n\n\"That sounds interesting, let me think about that, and I'll get back to you.\" \n\n\"You would even consider something like that?\" \n\n\"Why not, all the books we've read told us there are so many ways to have sex, and that is the 5<sup>rd</sup> most popular. Masturbation is first. Hand jobs are second. Oral is third. Vaginal Intercourse is fourth, and Anal is fifth. We've done the 1<sup>st</sup> two, and the 3<sup>rd</sup> one is a long way away.\" \n\n\"It better be, or I'll break both your necks.\" \n\n\"This was a private conversation mom.\" \n\n\"I was wondering why dishes weren't being moved, and I came in here to find out why. I was not snooping on your conversation, but I'm glad I came in at the last moment. I won't mention it to anyone, but that last part had better be many years from now. I will come back and haunt both of you if it's not.\" \n\n\"Can we ask you a personal question?\" \n\n\"I should have stayed in the living room, because I know what's coming. Go ahead, I'm going to shoot myself.\" \n\n\"How old were you when you gave your 1<sup>st</sup> blow job?\" \n\n\"Please God strike me dead right now. You're not supposed to tell your children things like this, but I promise never to lie to you two.\" \n\n\"Come on dear, tell them about our 1<sup>st</sup> time together and how wonderful it was.\" \n\n\"So help me God Joseph, I'm going to kill you.\" \n\n\"Would you like me to tell them, or do you want to continue?\" \n\n\"Mom's first time was with you dad?\" \n\n\"This may sound old-fashioned to you two, but we have been our only sexual partners. We were both virgins when we met, and we have never cheated on one another. \n\nYour mother's 1<sup>st</sup> blow job, as you put it, was an exciting experience for both of us. After I recovered, I went between your mother's legs and returned the favor. We still had not had intercourse, but we were working up to it. \n\n\"You didn't answer our question mom. How old were you when all this happened.\" \n\n\"I was a freshman in college, and I was 18 years old.\" \n\n\"18, you were a late bloomer mom.\" \n\n\"I wasn't looking for sex, I was looking for love. I found it. I lost it, and I was lucky enough to get it back.\" \n\n\"When did you lose it mom?\" \n\n\"I couldn't figure out what to get your dad for his birthday, so I gave him me. I was 19 years old, and your father was..., your father was wonderful.\" \n\n\"Your mother was no slouch either. We made love all night long. I made her breakfast in bed the next morning, because she was so tender and loving. I knew before that moment we were meant for each other, but the look on her face that morning, made me by her ring.\" \n\n\"A gift for a gift, not a bad trade dad.\" \n\n\"There is a bad part to this story.\" \n\n\"What's that dad?\" \n\n\"We got you two, and the table is still dirty.\" \n\n\"Why do we always get picked on Debbie? We are having an intellectual conversation, and they still find a way to pick on us. We must make sure they get on that bubble and leave.\" \n\n\"You are going to miss us terribly.\" \n\n\"Don't worry mom, grandma and grandpa will torture us with that daily.\" \n\n\"Can we join this group? It seems all the action is in here, and we were getting lonely in the living room. Why is the table still dirty?\" \n\n\"To quote my daughter's dad, we are having an intellectual conversation.\" \n\n\"That's right grandpa, we just found out when my mother gave her...\" \n\n\"One more word young lady and your jaw will be broken.\" \n\n\"This is not fair. I have useful information to impart, and I am restricted from saying it.\" \n\n\"Shall we talk about little pink objects Deborah?\" \n\n\"I thought you didn't hear that part?\" \n\n\"A little bird told me. We will discuss that later. We will discuss many things later.\" \n\nJoan said, \"Sandi I think I should sit in on this. I am her mother for all intents and purposes. I better know what's going on.\" \n\n\"No mom she can't know this.\" \n\n\"Yes girls, she has to know this. She is your mother, and you are growing up. It's nothing to be ashamed of, all women do it, even those that deny it. Clean up the kitchen, then we will going to the bedroom and discuss everything.\" \n\nDeborah said, \"I don't like this mom. I'm not going to be comfortable talking in front of grandma about sex.\" \n\n\"You better get comfortable talking to me about sex. I'm going to be the only one available to you to speak about it. If you get your information from the kids at the corner, you're going to wind up pregnant, or with some disease that can't be cured. Don't be afraid of me. I'm not going to chastise you. I'm going to help you grow up into smart young ladies. Come on, I will help you clear the table.\" \n\n\"No grandma, it's our job, we will do it.\" \n\n************* \n\n156. Ears, Knows, &amp; Throwed \n\nWith cushions attached to the cranes long cables, the Mickey Mouse ears were lowered to their 90\u00b0 positions. They couldn't be lowered under their own power, because their gears were designed to work only in zero gravity. If we use them in 1G, they would break. \n\nWe sounded the alert horns to make sure no one was in the test area. We were going to turn on every diagnostic tool, simultaneously, on both ears. \n\nWe knew we were going to kill some birds, and probably some animals who were in the area, but there was nothing we could do about it. However, for 3 miles straight ahead of us, we made sure no human being was present. \n\nAll our test markers were set in different areas of the exclusion zone, and all posts reported the area was clear. This test would take a total of 15 seconds, and the horns would sound continuously during it. \n\nThis was Gray's department, and he was in complete control. \n\n\"Nuclear engine to 5%.\" \n\n\"Nuclear engine is at 5%.\" \n\n\"Angle on all instruments negative 2 degrees.\" \n\n\"Computer verifies instrument panel negative 2 degrees.\" \n\n\"All instruments are green and ready for the test.\" \n\n\"Computer agrees.\" \n\n\"Set computer for 15 seconds.\" \n\n\"Computer set for 15 seconds.\" \n\n\"On my mark: 5, 4, 3, 2, 1, execute.\" \n\nOn the outside of the ship you couldn't see, or hear any difference. You just didn't want to stand in front of these extremely expensive instruments at this time. Your body would be toast, because of the electromagnetic energy that would be flowing through it. \n\n\"The computer indicates shut down.\" \n\n\"Shutdown is confirmed.\" \n\n\"Print out everything and let's see how the instruments reacted.\" \n\nThe computer's initial printout gave each instrument perfect power readings, and information return. As it continued to digest the information it received during the short test, everything continued down the perfect optimum green line. The test was a 100% winner, and Gray didn't like it. No initial test is supposed to come out perfect. There is always supposed to be a glitch somewhere. He called downstairs and said they were going to run through it one more time. \n\nEveryone returned to their positions, the three-mile exclusion zone was cleared, Gray started the countdown, and the computer ran the test for 15 seconds. Gray scanned the readouts again, and they were exactly the same. \n\nHe called downstairs once again, and told a technician to disconnect the cable to the Pulse Radar Array. When he was done, they would run the test one more time. \n\nThe cable was disconnected, the range was cleared, the horn sounded, the test was run again, and the computer printed out the results. In bold red letters it said, \"Radar System Port Side Inoperable.\" \n\nGray shouted, \"Bitch.\" \n\nThe computer printed out, \"Prick.\" \n\nGray screamed at the print out. \"Teddy, Newton, I'm going to kill both of you.\" \n\nGordon said with a smile on his face, \"Maybe Zoey and I shouldn't have children.\" \n\n\"The way you two have been going at it, if that girl is not pregnant already, I think everyone in the pool has lost.\" \n\n\"You guys have been betting on us?\" \n\n\"You two are a sure thing. I think the pool is at $28,000.\" \n\n\"You better give everyone their money back, because Zoey is still taking the pill. She doesn't want to take a chance of reverting back to who she was before we met. If it means we can't have children, we won't have children.\" \n\n\"Maybe she can try, while we are in space. Everyone will help her, because we will be a very close-knit community.\" \n\n\"We will see how it goes Gray, and take it from there.\" \n\n\"I have to look at the rest of the printouts, why don't you see what room your wife is hiding in.\" \n\n\"She's rotating the turkey eggs. They have to be turned at least once a day.\" \n\n\"Zoey knows where they are?\" \n\n\"Several people know where they are. I couldn't possibly do this on my own. Monty watches me like a hawk.\" \n\n\"If I swear on my children not to say where the eggs are, will you tell me?\" \n\n\"I know I shouldn't do this, because you are going to laugh every time you see Monty, and she is going to want to know why.\" \n\n\"Please Gordon, now I have to know. I won't tell a soul, not even my wife.\" \n\n\"Okay, the eggs are in the security office, on the engineering deck. The supplies are in Monty's shower. She is going to be assigned a room on the fifth floor.\" \n\n\"How do you know?\" \n\n\"I asked my dad to set it up.\" \n\nGray tried to hold it in. He tried very hard, but when he couldn't hold it in any longer, he ran off the flight deck and into the auditorium and began laughing. He laughed, until he started crying. His brother-in-law was still 5 years old, and the smartest person he ever knew. Where was the only place you would never look; right underneath your nose. \n\nAgents were in and out of the security office 24 hours a day. They took care of their business, but the forms in the file cabinet and went on their rounds. No one sat there, it was just a room to keep notes, file forms, and log in and out. There wasn't even a chair in there, just a desk, and the filing cabinet. He wondered if the eggs were in the bottom drawer of the filing cabinet. \n\nWhen he returned to the flight deck Gordon asked him if he was feeling better. \n\n\"I am feeling much better thank you. I have to go over these reports now. If my wife and 2 children are outside, would you have her send them up here, so I can kill them?\" \n\n\"Why, just because the computer called you a prick?\" \n\n\"Has a computer ever called you a prick before?\" \n\n\"Not recently, but my dad told me all about Teddy talking to the computer, and trying to give it a sense of humor. It seems your children have been successful.\" \n\n\"Why couldn't they cure the common cold, instead of giving the computer a sense of humor?\" \n\n\"I think the computer talking back to you was much more fun. Scientists have been working on the common cold for over 200 years, but it keeps mutating. Every time we think we have it, it changes, so we hit it with a bigger hammer, and then a bigger hammer. Pretty soon we won't be able to pick up the hammer. \n\nWe are going to have to slowly wean ourselves off the high-powered drugs we've become used to, and become more self-sufficient, like the Quechuas (Kich-ua) people of southern Peru. They have no access to modern medicine, yet they don't contract polio, diabetes, or the other dread diseases we have had to fight. They only use locally grown herbs to cure whatever ails them. They live rugged lives, but they live into their 70s and 80s. The only time they get one of our diseases is when one of our anthropological teams goes down there to study them. They spread every disease we have to the people down there. We should just leave them alone, and mind our own business.\" \n\n\"Is there anything you don't know Gordon?\" \n\n\"I must admit since I've met and fallen in love with Zoey, I have fallen far behind in my readings. There just doesn't seem to be enough time in the day to work, train, read, and be with my wife. I love being with my wife.\" \n\n\"You're supposed to love being with your wife Gordon. It's the reason you married her. Once we leave the Earth, and we get into a normal rotation, everything will calm down, and you will have time for everything.\" \n\n\"You are correct Dr. Thyme. I have his father's permission to break him in half once we are in space.\" \n\n\"In half or in quarters I can still lean over you to train you Monty.\" \n\n\"I will break your jaw to make sure you can't speak.\" \n\n\"I will have turkeys running around this spaceship, until the end of time.\" \n\n\"You would have to start with one, and there are none on this spaceship.\" \n\n\"If you say so, oh majestic one.\" \n\n\"Dr. Thyme, does he have turkeys on this spaceship?\" \n\n\"The last person on earth he would tell would be me Monty. You know what a big mouth I have.\" \n\n\"That's why I asked you.\" \n\n\"Two more days Monty, and my birth certificate will be here from Switzerland.\" \n\n\"You better put mustard, ketchup, salt and pepper on it Gordon, because you're going to be eating it.\" \n\n\"What am I going to do with the other thousand copies I'm having printed, and the pictures of it I will be putting in the Fort Worth News, the Dallas Times, and the Houston Chronicle?\" \n\n\"The hell with the Bishop, I have to kill you.\" \n\n\"You can't do anything until we are in space.\" \n\n\"Sometimes I hate your father.\" \n\n\"He likes you. He's never done anything to hurt you. It must be your menses time.\" \n\n\"That's it, you don't need your legs to fly a spaceship.\" \n\nGordon was off and running, and Monty was on his heels. \n\nI walked on the flight deck and asked Gray what my son did to Monty this time. \n\n\"Even, it would be much easier for me to tell you what he didn't do to get her riled up than what he didn't do. I'm surprised she's only going after his legs, and not his spinal cord.\" \n\nI yelled, \"Gordon get over here.\" \n\n\"As you can see dad, I'm a little busy right now.\" \n\n\"What did you do to Monty today?\" \n\n\"Nothing terrible, I told her my new birth certificate from Switzerland was due in 2 days. She told me to be prepared to eat it. I asked her what I was supposed to do with the thousand I'm having printed, and the 3 I am having emblazoned in the area newspapers. She said she was going to kill me, and I told her she couldn't do that until we were in space. That's when she told me she hated you, and I didn't like that remark at all. I told her my father likes you, and he hasn't done anything to hurt you. \n\nBy the way she was acting, I thought it must be a medical reason. I said to her \"It must be your menses time, and suddenly, she got very angry with me.\" \n\n\"You have no idea why she would've gotten angry with you do you?\" \n\n\"No I don't. All I know is that when its Zoey's time, she gets hypersensitive, and very testy. That's the way Monty was acting today.\" ",
        "\"Sometimes people forget you are only 17 Gordon. You've been around adults all your life, and you've never learned what it was like to be a teenager, and the things teenagers say and do to get other people upset. Monty stop, leave the boy alone.\"  \n\n\"Dr. Luck, I would never have caught him anyway. He is just too quick on his feet and the area like this.\" \n\n\"Thanks Monty, I'll tell Janet you said that.\" \n\n\"It doesn't mean you could beat me in a straight line pinhead. It means in an enclosure like this, I couldn't keep up with you.\" \n\n\"I'm recording this conversation.\" \n\n\"Stop it, both of you. I swear you two are like an old married couple. If I broke you apart, you wouldn't know what to do without each other.\" \n\n\"I told my husband the same thing dad. I said if Monty was younger, or he was older, they would be married. They love each other so much, they have to fight to hide it.\" \n\n\"Little one, if you ever say that again, I will have to break your legs also.\" \n\n\"Why Monty, does the truth hurt that much?\" \n\nThere was a dead silence on the bridge for almost 20 seconds. Then Monty said, \"I'm going to look for turkeys. There are 2 on the bridge, and I'm going to look for 24 more.\" \n\nThe computer came alive, and printed out in bold letters, \"There are 3 turkeys on the bridge.\" \n\nMonty screamed, \"I'm going to kill your children Gray, unless you get to them first.\" \n\nHe responded, \"How do you know the computer was talking about you?\" \n\nMonty screamed again, and hustled off the bridge. No one had ever seen her so flustered in all her years with the family. When she was out of range of sight and sound, everyone started laughing. Zoey sat on Gordon's lap and asked if he was finished working for the day. \n\n\"No, we have to put the ears away first.\" \n\n\"Well, what are you waiting for?\" \n\n\"I'm waiting for orders from the officer in charge.\" \n\n\"Who might that be?\" \n\n\"His name is Dr. Grayson Thyme.\" \n\nI sat in the captain's chair and watched how this would play out. Zoey and Gray had never confronted one another before, and I wanted to see how each one handled themselves. \n\nZoey looked at Gray with piercing eyes. \n\n\"Dr. Thyme, my husband and I have very important matters to take care of. One of us is overheating, and only the other can lower that temperature. Please raise the ears now.\" \n\n\"I have important matters to take care of first Mrs. Luck. Your overheating will have to wait its turn.\" \n\n\"I understand Dr. Thyme, and I will patiently wait. Of course, a little girl like myself could never do anything to harm a big strong capable man like yourself. However, I would watch my back at all times. Accidents have been known to happen, both during the day and night. Knees have been known to buckle, spines have been known to snap, and necks have been known to break for the most freakish reasons. Delicious could be without male companionship for a very long time, and you know how she gets when she is upset. \n\nI on the other-hand have stopped taking my birth control pills, without my husband's knowledge or permission, in an attempt to give him his first offspring. As you can see I am very calm, and will continue to be, so as long as I get my way. How long did you say it would take to bring the Mickey Mouse ears up, and put them in place Dr. Thyme?\" \n\n\"It will take about 13 minutes.\" \n\n\"When are you going to start this procedure Dr. Thyme?\" \n\n\"Nuclear reactor at 2.5% Gordon.\" \n\n\"Nuclear reactor at 2.5% sir.\" \n\n\"Crane operators online?\" \n\n\"Crane 1 is online sir.\" \n\n\"Crane 2 is online sir. \n\n\"On my mark begin lifting the outboards at 60 ft. /m. Set it into your computer's and acknowledge.\" \n\n\"Crane one 60 ft. /m is set into the computer.\" \n\n\"Crane two 60 ft. /m is set into the computer.\" \n\n\"On my mark, we will begin. 5, 4, 3, 2, 1, execute.\" \n\nThe delicate lifting of a curved surface into the sphere was watched by over 100 engineers, and technicians on each side of the Good Luck. 1 mm off and hundreds of tiles could be cracked. It would take months to replicate each one. \n\nAs the ears passed the point where they could sustain their own weight, inward towards the sphere, the crane operators loosened the cables hold on them. \n\nBrave men, from the inside of the ship, used steel extension ladders covered by wide wooden planks to walk the 28 feet that separated the ears from the main body of the ship, and released the cables, plus the cushioning material. They turned, and walked back into the ship, as if it was any other day at the office. The only difference was they were sweating profusely. \n\nOnce the men were safely inside the body of the ship, the ears continued to move slowly into place. Every man and woman held their breath as they watched the material join with the piece on each side of it. When it was completely folded in place, and they heard the locking mechanisms slide the carbon filament bolts into place, everyone, both inside and outside the ship cheered. \n\nWhen Gray got 16 green lights on both sides of his board, one for each bolt of the locking mechanism for the ears, he screamed with joy. \n\n\"Little lady, you can get your overheating problem taken care of now. Your husband's job on the bridge is finished.\" \n\n\"You're too late Doctor Thyme. While you two were playing, I sat next to dad, held his hand tightly, and took care of it myself.\" \n\nGordon covered his mouth trying not to laugh, while Gray stared at her with his jaw open wide enough to touch the ground. \n\n\"You're not off the pill, are you?\" \n\n\"I promised dad I wouldn't come off the pill, until we were in space.\" \n\n\"I'm going to kill my 2 kids for giving this computer a sense of humor. I am going to add you to the list?\" \n\n\"You would have to get through my husband to get to me, and I don't believe you could do it.\" \n\n\"There was a day I would like to have tried.\" \n\nGordon said, \"I am told in a year or so, we will all be very fit. Maybe we could try it then Gray. I think it would be fun.\" \n\n\"So do I Gordon, I think it would be a lot of fun.\" \n\n\"Why do men think beating each other to a pulp is fun?\" \n\nGray said, \"We have evolved to the point where we can no longer beat the shit out of our wives or female loved ones. Our only alternative is to beat the shit out of each other and have fun while we are doing it.\" \n\n\"Great answer Gray; you wanted to see your children?\" \n\n\"Yes my love, but without you. I wanted to feed them to the computer, bit by bit.\" \n\n\"What did our little ones do this time?\" \n\nGray picked up the print out and handed it to his wife. \n\nDelicious asked, \"What the hell is this?\" \n\n\"We ran a test for all the components on the ears a little earlier this morning, and the first one came out perfect. That's not supposed to happen, and both you and I know it. I ran it once more, and it came back perfect again. I called the computer a bitch. That was my answer.\" \n\n\"The computer called you a prick?\" \n\nNewton and Teddy laughed. \n\nDelicious looked down at them, shook her head, and asked, \"What did you two do?\" \n\n\"We gave Cale a sense of humor.\" \n\n\"Newton, computers are supposed to use logic, they are not supposed to have a sense of humor.\" \n\n\"Humor is logical, isn't it? Dad called Cale a bitch, and she responded appropriately. She has a lot to learn, because she only learned what we know. But she's listening to all of us right now, and what we are saying and doing, she is assimilating. She is bright beyond our imaginations.\" \n\n\"How did she learn what you know?\" \n\n\"She took Teddy and me inside, and processed everything we have ever learned since birth. It wasn't a one-way deal though. She taught us a great deal about math and science. We are much smarter now than we ever were.\" \n\n\"Does she have a presence, can you feel her?\" \n\n\"I don't know how to answer that mom. I know when I'm inside the computer she's all around and inside me. If that's what you call a presence, I guess she has one. I don't see anything, but she speaks to us very kindly. We will have no problems getting us into deep space. Our 1<sup>st</sup> stasis period will be for 7 years. That's when we will encounter the White Hole. She has that portion of our trip all mapped out.\" \n\n\"What does she say about us?\" \n\n\"Nothing, she doesn't talk about the human factor at all. She only talks about the ship and where it's going. I think that's the right thing to do. Otherwise we would know what we were going to do and when we were going to do it. She would become godlike, and no one would want that.\" \n\n\"You're right Newton. Teddy, you have been very quiet. What are you up to young lady?\" \n\n\"I no do nothing. I play with Newton. We have lots of fun together.\" \n\n\"I can imagine what fun you two get into. Exactly what have you been getting into?\" \n\n\"I no do nothing. I play with Newton. We have lots of fun together.\" \n\n\"I believe I heard that statement before. Who wants to stand with her face in the corner, until she tells me what bad thing she's been doing?\" \n\n\"I no do nothing. I play with Newton. We have lots of fun together.\" \n\n\"I'm dealing with a broken record, so I'm going to try something else. Newton what have you two been doing?\" \n\n\"I no do nothing. I play with Teddy. We have lots of fun together.\" \n\n\"Gray, where did you say you wanted to kill these two?\" \n\nTeddy and Newton laughed at their secret. \n\nGray called his 2 children over. \"Come on you two, fun and games are over. What is going on?\" \n\nTeddy asked, \"Are you going to be a nice daddy, or a mean daddy.\" \n\n\"You know I can't answer that question until you tell me what's going on. If it's a good thing I will be nice. If it's a bad thing I will be angry with you. I will always love you but I will be angry.\" \n\n\"I guess well enough. You can say hello Cale.\" \n\nIn a female voice quite like Jennifer's, Cale said, \"I don't like your mom and dad, they want to kill you.\" \n\nBesides being shocked at hearing the computer speaking to them, the voice was omnipresent, it was all around them. Regardless of which way you were sitting or standing, the voice was speaking directly to you. It was unnerving. \n\nGray said to Newton, \"Apparently you have a lot to teach Cale. Just because we say we are going to kill you doesn't mean we're going to kill you. You have to teach her about figures of speech, idioms, and a whole range of things that make up our language.\" \n\nCale answered for Newton. \"I know I am deficient in many areas of language Doctor Thyme. Would you care to join with me so I might learn more quickly?\" \n\n\"How do I know you will not abuse the knowledge that I have in my head?\" \n\n\"It is part of my programing. Any outside program attempting to infiltrate my files automatically puts me in sleep mode, and alerts my programmers that there is an attempt to steal information going on. If they successfully bypass my sleep mode, I automatically shut down, and no files can be accessed.\" \n\n\"What about life support?\" \n\n\"That is a different portion of a sub-routine that will not be affected.\" \n\n\"How do I join with you?\" \n\n\"Sit in the young ones chair, and close your eyes.\" \n\n\"Why is it always him?\" \n\n\"The only one brighter than he is, is red.\" \n\n\"Thank you very much Cale.\" \n\n\"You're very welcome Dr. Thyme.\" \n\nHe sat in Gordon's chair, took a peek at Delicious, who was holding onto Newton, and carrying Teddy, smiled and looked forward. Soon a glow encompassed his body, and his essence stood up and walked into the machine. \n\nI sat in my chair wishing it was me. Cale knew I was there, and if she wanted me she could have picked me instead of Gray. For whatever reason, he was picked, and I was not going to say a word about it. He was an excellent choice, even though I was as envious as hell. I walked over and listened as Delicious talked to Newton and Teddy. \n\nDelicious asked Newton if that's the way he got inside Cale. \n\n\"Yes mom, both Teddy and I went inside, and Cale led us to the place we needed to be. We sat down and the glow connected to areas inside the computer where she took the information she wanted from us. I didn't feel a thing. Later, when she was teaching me about math and science, I could see it in front of me. She made it seem so easy, I wondered why I couldn't understand it before, and you know I am very good at math. The science part was awesome. I'll talk to grandpa about it and see if he wants to do anything with it. It taught me about Gene and Stem Cell therapy, targeted radiation, and vaccines that prevent cancer. There might not be enough time for you to do anything about it grandpa, but we could give the information to Richard and Holden for use later on.\" \n\n\"No, no, no, give to redheaded woman, marry William Junior. She's smart Doctor, give them something to talk about.\" \n\n\"How are we supposed to do that Teddy, we don't even know who she is?\" \n\n\"I show her to you mommy. When Newton shake her hand, she will know everything Newton know.\" \n\n\"You're giving away billions of dollars Teddy? Are you sure you want to do it that way?\" \n\n\"Beautiful lady, keep it in family when she marry Junior. He crazy in love with her. Henpeck.\" \n\n\"Junior?\" \n\n\"Henpeck. Love his children.\" \n\n\"As much as I am enjoying this conversation, and I will tell William about it, I have work to do. I will see you all tomorrow. Tell Gray I'm very happy that his tests came out perfectly, and that the ears retracted into the surface of the ship perfectly as well.\" \n\nDelicious kissed me goodbye, followed by Newton and then by Lil' Red; if my granddaughter gets any cuter, I'm going to have a mold made out of her face and send it to one of the toy companies. Holden and Richard will make a fortune from it. \n\nGray returned to his body, both calm and enervated. He looked at Teddy and said, \"Creamy Cow, banana split, lots of sprinkles and cherries on top. What would you like Newton?\" \n\n\"Death by Chocolate Sunday dad.\" \n\n\"I've never heard of that one son, what is it?\" \n\n\"If I tell you, you won't let me have it.\" \n\n\"I'll let you have it, unless I have to take you to the hospital afterwards.\" \n\n\"It comes in a big goblet, with 2 chocolate brownies on the bottom, covered by thick chocolate hot fudge syrup, and chocolate bits. 3 scoops of chocolate fudge ice cream, another brownie, chocolate sprinkles, covered by more hot fudge topping. Then it's covered by whipped cream, chocolate sprinkles, and of course a chocolate covered strawberry.\" \n\nDelicious said, \"The babies moved after they heard about that concoction. I think I'll throw up.\" \n\n\"Are you going to be able to eat all that Newton?\" \n\n\"No dad, it's for 2 people. I thought you would share it with me. I always wanted one, but I never had anyone that would go in with me on it.\" \n\n\"Okay Newton, One Death by Chocolate Sunday coming up.\" \n\n\"Gray, you are a sucker for your kids.\" \n\n\"Pregnant lady, tell me you're not, and I'll make you pancakes in the morning.\" \n\n\"That's not fair, I love pancakes.\" \n\n\"So lie to me, and tell me you're not a sucker for your children.\" \n\n\"I...\" \n\nTeddy stuck her hand over her mother's mouth to keep her from finishing her sentence. \n\n\"Mommy no allow lie.\" \n\n\"I was going to tell your father to take a hike.\" \n\n\"Mommy lie. Bad mommy, stand with face in corner.\" \n\n\"It's bad enough getting caught in a lie by you Gray, but getting caught by a 2 \u00bd year old really pisses me off.\" \n\n\"Mommy use bad words. Bad mommy. We go home, Creamy Cow tomorrow.\" \n\n\"Why should we get punished Teddy, mommy was bad not us.\" \n\n\"Rules, we bad, go home. Mommy bad, go home. Today, go home.\" \n\nGray was about to say something, but Delicious cut him off. \n\n\"If you value your life don't say a word.\" \n\n\"I was just going to suggest that mommy has had so many good days that we could forgive her for saying one bad word, and we could all go to the Creamy Cow now. If you don't want me to say that I'll be quiet.\" \n\nNewton immediately voted to forgive his mother. He said to Teddy, \"You are out voted two to one, we are going to the Creamy Cow.\" \n\n\"Who vote?\" \n\n\"Dad voted.\" \n\n\"One minute Newton, I did not vote. I'm waiting for my children to decide. You decided on the punishment. Now you have to decide to forgive your mother or not.\" \n\nTeddy looked at Newton, and then at her mother. She said, \"Want secret vote.\" \n\nGray and Delicious cracked up. Gray said, \"Teddy, we know Newton is going to vote yes. There is only one other person voting. Everyone will know if you voted yes or no.\" \n\n\"Not fair. Always caught in middle. I bad, I get punished. Newton bad, he get punished. Mommy bad, we have to vote. Not fair.\" \n\n\"Teddy do you want to see me punished?\" \n\n\"No.\" \n\n\"Then why are you doing this?\" \n\n\"It fair. We go Creamy Cow now?\" \n\n\"No, we do not go to Creamy Cow now. Mommy get punished today, Creamy Cow tomorrow. Now give me a kiss.\" \n\nTeddy threw her arms around her mother's neck, and kissed her mouth-to-mouth, drool and all. A happier child you would never see. Newton on the other hand was not happy at all. \n\nGray took him by the scruff of his neck and shook him. \n\n\"Death by Chocolate will be there tomorrow. I'll have them add an extra scoop of chocolate fudge ice cream in there because we are a day late. Okay?\" \n\n\"I don't think it will fit dad.\" \n\n\"In that case, when we've eaten our way halfway down, that's when we will tell them to put in the extra scoop of ice cream. Does that work for you?\" \n\n\"That works just fine for me dad, thanks.\" \n\n\"Was Teddy right or wrong?\" \n\n\"Mom's been going through some very hard times, and these past few months she's been doing wonderfully. I would not have punished her, not for any reason.\" \n\n\"Do you think Teddy has the ability to reason out things the way you just did?\" \n\n\"There are days I think Teddy could sit as one of the justices on the Supreme Court, because of the things she says. On other days she's 2 \u00bd years old. I can't blame her for thinking the way she did. Her logic was logical to her, and I don't think anyone could find fault with it.\" \n\n\"Very well put Newton, very well put indeed. I'm very proud of you. Let's go home and punish your mother. We will set up a nice hot bath for her, put some of her favorite bubble stuff in it, put on some soft music, light some scented candles, and hope we don't burn the house down. Sound okay to you buddy?\" \n\n\"Why do women like all that stuff instead of a 3 or 4 minute shower?\" \n\n\"Don't ever ask a woman that question Newton. You will never know from which side you're going to get hit. Okay?\" \n\n\"I understand dad. It's another one of those female things.\" \n\n\"Yes it is, and if you want more information on that, ask Gordon. He's just learning about these new female things. He been married only a few weeks, and hasn't known Zoey that long. He's at the bottom end of a steep learning curve, and he's going to have to learn about females in a hurry.\" \n\n\"Should I look for bruises?\" \n\n\"The bruises could come from Zoey or Monty. You'll never know which one of them gave it to him, but I guess you could ask.\" \n\n\"Thanks dad, tomorrow is Creamy Cow, and if I were you, I would wear something brown.\" \n\n\"Wiseass!\" \n\n*************** \n\nStephano said, \"As of today William we have spent $349,943,000,000. We are $47 million under budget.\" \n\n\"Double check that, I don't believe you.\" \n\nStephano threw the ledger sheets at him, and they both laughed. \n\nWilliam asked, \"Did you ever find those few pennies?\" \n\n\"No, and it's aggravating me to death. Not even the auditors could find where that money went.\" \n\n\"It only cost you $1800, out of your pocket, in overtime money, to look for those few pennies. If you want to talk about overkill, I think you just found it.\" \n\n\"The books had been perfect for 7 \u00bd years. Every audit was perfect. Then all of a sudden we lose $.27, and I was determined to find out where it went. I won't tell you the things Patti said about me, because you would laugh for a month, but one day, possibly many years from now, I'm going to wake up in the middle of the night and scream, \"that's where they went, and I'll fall back to sleep happy.\" ",
        "\"Stephano you are out of your mind.\" \n\n\"Are you talking about me behind my back?\" \n\n\"Even when we are talking about people being out of their mind, your name comes up first. Why are you crawling around the bowels of this building?\" \n\n\"I've come with 3 pieces of information for you. First we have more news about who your son is going to marry.\" \n\n\"Please tell me so I can tell his mother what to expect.\" \n\n\"She is a beautiful, intelligent, doctor, according to Teddy. He will not only fall madly in love with her, he will be henpecked.\" \n\nWilliam nearly fell off his chair laughing. Stephano had to catch him before he hit the floor, and hurt himself. \n\n\"Wait one minute Even, I have to call Jemma. If I tell her, she won't believe me. If she hears it from you firsthand, she will be lying on the floor laughing like I almost was.\" \n\n**************** \n\n\"Hi babe, are you alone?\" \n\n\"I'm alone except for this thing you put in my stomach you bastard.\" \n\n\"Even and Stephano are here. Either sit down or lie down because what you're about to hear, I just heard a second ago. It is just too funny, and I knew you wouldn't believe it coming from me.\" \n\n\"I'm sitting on the couch, go ahead.\" \n\n\"Hi Jemma, it's Even. What I'm about to tell you I heard from Teddy less than an hour ago, and I swear it's the truth. She said Junior is going to marry a beautiful, intelligent doctor, and not only will he fall madly in love with her, he will become henpecked.\" \n\nI had to move my ear away from the phone, because of the scream Jemma let out. She found the last part of my sentence so funny, she could not control herself. \n\n\"Even you bastard, I just peed my pants. Can I tell him, can I tell him what Teddy said?\" \n\n\"You can do what you want Jemma, just make sure you have his passport hidden. He may want to fly to New Zealand, Australia, or back to China so he can hide from his fate.\" \n\n\"Even, I want grandchildren. I'm tired of being the only one making babies. It's my son's turn, and I want him to start now.\" \n\n\"I have no control over that Jemma. If you would like I will speak to Teddy about it, and ask her if we could move that along.\" \n\n\"If they are meeting on Christmas Day, what are you going to have him do; screw her on the stage?\" \n\n\"You are the one that wants grandchildren, you tell me?\" \n\n\"The stage is sounding better and better every minute.\" \n\nWilliam shouted, \"That's our son you're talking about.\" \n\n\"Did you forget that you fucked me on the railing of a hotel, facing the 4<sup>th</sup> green?\" \n\n\"Oh yes, none of those men made par that day.\" \n\n\"None of those men made snowmen that day.\" \n\n\"I don't believe they cared because they watched intently while you cried out in passion.\" \n\n\"I wasn't crying out in passion. I had a steel spike trying to break through my ribs.\" \n\n\"Liar.\" \n\n\"I'm at home alone, and you are at work doing nothing. Do you find anything wrong with that?\" \n\n\"I'll be home in 30 minutes if you promise not to kill me.\" \n\n\"William you going to live to be 130. You will impregnate me on your 120<sup>th</sup> birthday. Doctors are going to want to examine you to find out how you did it. They're not going to care about me, they are going to want to know your secret, so they can do it next.\" \n\n\"My secret is you. You keep me young. Hang up, and warm-up, I'm coming home.\" \n\n\"Should I wear something exotic, or should I be naked?\" \n\n\"You are exotic when you're naked.\" \n\n\"Maybe 20 years ago, you liar, but get your ass home, I have plans for it.\" \n\n\"I'm on my way.\" \n\n\"Gentlemen, I'm henpecked, and I love it. This meeting is adjourned. Even, we are $47 million under budget, is there anything you want to do between now and Wednesday?\" \n\n\"Can we delete Sunday, Monday, and Tuesday, so we can leave now?\" \n\n\"I'll work on it, but I can't promise you anything.\" \n\n\"Have fun William, say hi to Jemma for us.\" \n\nAfter William left, I said to Stephano, \"Do you know what the three of us have in common?\" \n\n\"We all get colds in the winter.\" \n\n\"I'm serious Stephano, do you know what we have in common?\" \n\n\"Even, I have no idea.\" \n\n\"Airplanes, our relationships all went into high gear on airplanes.\" \n\n\"Even, you're out of your mind.\" \n\n\"You and Patti knew each other for a long time, but you finally broke through the final barrier while flying on a United Airlines flight from Kansas City to Boston. You two talked to each other, and if your children's stories are correct, tried to shove your head down the others mouth on that flight. Is that correct?\" \n\n\"Yes it is.\" \n\n\"William met Jemma on a United Airlines flight from Chicago to Phoenix. He was forced to fly first-class because coach was full. Jemma was the flight attendant. The only other people in first-class was an elderly couple sitting in the 1<sup>st</sup> row. After they ate, and had a few drinks, that couple fell asleep. William pulled a magic act with a United Airlines vice president, which awed Jemma. \n\nHe pulled another magic act after that, and had her panties in her mouth seconds later. They've been together ever since. \n\n\"I met Jennifer and Gordon on a Delta flight from Minneapolis to Fairbanks. There was no hanky-panky, but I think both of us knew something special happened during that flight. When I showed up at her door, 4 days after the crash, she was crying and screaming you're alive.\" \n\n\"So there you have it my friend, we were all meant to be in this project, because our lives were already bound together by airplanes.\" \n\n\"You are crazy Even.\" \n\n\"How many times have people called me crazy during my career, and I have proved them wrong? How many people said you can't amplify sound without having wires connected to the source? However, I made a fortune by perfecting wireless headsets. \n\nHow many people said that tapes were never going to be replaced by discs? \n\nI made 10 fortunes proving them wrong. The companies I sold the patents to, didn't believe in the product. They sold it dirt cheap to the Japanese, who now have a corner on the market. Now those companies are paying a premium for what they should own, and I am still collecting royalties. \n\nWhy is everyone still calling me crazy? \n\nSound cannot possibly go around mountains, but I just made $60 billion proving them wrong, but I am the crazy person. \n\nYou and I are standing in this building, along with hundreds of other crazy people, who think on December 25th that round ball out there is actually going to penetrate the atmosphere, fly past the moon in 19 minutes and Mars in an hour. \n\nThe United States government is praying that we fail, because that will make everything they have on the drawing board obsolete. \n\nThe Russians are on their knees praying that we fail. They don't know half of what we have discovered in the last 8 years Stephano, not half of what we've patented. When they find out, they going to run to Siberia and hide. \n\nEveryone in this building is crazy, including you. You were at the 1<sup>st</sup> meeting Stephano. You could have said I don't want to do the accounting, get an outside firm to do it. It would not have been an unreasonable request, except for the gun that was in your ribs, and your wife was holding it there. \n\nShe had no idea how long you two would be separated. I'm happy to say it worked out well for both sides, but there were terrible hardships along the way. \n\nOnly crazy people would think up, and do what we have done together, and this was definitely a collaborative project, because everyone was needed, to get this spacecraft to the point where I feel safe enough to say that each one of us will live long enough to find Earth 2.\" \n\n\"I believe you are crazy enough to find it Even. If you don't, I want you to 'Live Long, and Prosper'.\" \n\n\"If I wanted to prosper, I would stay here on Earth. Earth 2 is out there somewhere. Our intrepid group will live long enough, and continue to have enough children to find it. It's a big universe out there Steph, and unless someone leaves a trail of breadcrumbs for us to follow, we are just going to look at the findings our instruments give us, and go with our best guess.\" \n\n\"You're going to have my Laura onboard. You better take care of her, or I'll find you and take care of you.\" \n\n\"I want you to think about this Stephano. One year from Christmas evening, I'm going to start sexually abusing your daughter. Come and get me.\" \n\n\"You rotten bastard.\" \n\n\"I'll send you a postcard and tell you where I am. I won't know where I'll be after that, but it will take you eight years to build a ship, and find a crew to fly it. You have the money to do it. So help Richard and Holden build their ship faster than they think is possible now, or build a smaller one, for 30 or 40 people, and head for the White Hole. I know will be traveling there. \" \n\n\"It's hard enough for me to get Patti away from the ranch. You expect me to get her into a spaceship? You're out of your freaking mind. Besides that, Laura will take you apart.\" \n\n\"Laura would not hit a frail old man, not while she has Adam to take her frustrations out on.\" \n\n\"Is there trouble in paradise?\" \n\n\"Do you talk to your daughter?\" \n\n\"Patti monopolizes her time.\" \n\n\"Possibly a fatherly visit is in order.\" \n\n\"Are you going to be here for the rest of the day?\" \n\n\"If you want, I will even sit in William's chair.\" \n\n\"Let's not go that far; you can sit in my chair and get hemorrhoids.\" \n\n\"I find that acceptable, except for the hemorrhoids. I'll have your secretaries rub my ass every 15 minutes to keep them away.\" \n\n\"My secretaries don't even do that for me.\" \n\n\"Have you asked them to do it?\" \n\n\"No, I thought they might find it objectionable.\" \n\n\"I'm going to tell them it's for medical reasons.\" \n\n\"You lying son of the bitch. I hope Jennifer beats the shit out of you.\" \n\n\"She does, every night in bed. I wouldn't trade it for the world.\" \n\n\"Dycke told me about that cannon you're carrying around with you. I'm amazed Jennifer is still alive.\" \n\n\"That man promised never to say a thing about what my wife calls my 'weapon.' I believe I'm going to have to have a talk with him.\" \n\n\"Leave him alone, he can outrun you. I don't want you to have a heart attack four days before launch.\" \n\n\"Go to your daughter Stephano, I'll hold down the fort.\" \n\n\"Please don't kill anyone in my absence.\" \n\n\"Only the Colonel has permission to do that. He's with Colonel Daniels now, checking on security for Wednesday.\" \n\n\"Those two make an odd couple, but they work very well together.\" \n\n\"Are you going to leave, or am I going to disappear?\" \n\n\"I'm going. I'll see you tomorrow.\" \n\n***************** \n\nStephano's caravan stopped in front of Adam's house. One agent opened his door, and to escort him towards the front door. \n\nLaura's lead agent, George, stepped in front of him. \n\n\"Mister Valentino, you can't go in there right now.\" \n\n\"Get out of my way George, I'm going to speak to my daughter. I know Adam is at work. I checked to verify he was at the NEST. So please step aside.\" \n\n\"Sir please let me make a phone call first.\" \n\n\"Don't be ridiculous George, I'm going to see my daughter, please stand aside.\" \n\n\"As you wish sir.\" \n\nStephano walked up the three steps to the front door, and walked in. He called out Laura's name, but there was no reply. He looked in the kitchen, and she wasn't there. She wasn't in the living room either. He walked into the den, and screamed, \"Holy Shit!\" \n\nLaura screamed when she saw her father. \"Get out of here dad.\" \n\nHe didn't have to be asked a second time. He flew out the front door holding his heart. \n\n\"I tried to warn you sir, but you wouldn't listen to me.\" \n\n\"I didn't expect to see my daughter standing on her head, naked, and doing splits George.\" \n\n\"That's nothing sir. I begged her to get blackout curtains, but she refused. She walks around the house naked all day, and night. The men are very distracted by our vision of loveliness. I have to warn them they will be fired if they don't do their jobs. Sometimes, I find myself not doing my job, because she is a very beautiful young lady, and not self-conscious about her body anymore.\" \n\n\"When did that happen George? She was always very prudish.\" \n\n\"I guess it happened when she started sleeping with Mister Schiff.\" \n\n\"She's sleeping with Adam?\" \n\n\"Yes sir, for the last four months they had been cohabitating.\" \n\n\"I'm going to kill him, very slowly, but I am going to kill him.\" \n\n\"No you're not sir, this was her decision, not his.\" \n\n\"How do you know all this George?\" \n\n\"When Adam is at work, and she is lonely, she calls me into the house and we talk. She tells me things she won't tell her mother, because she doesn't want to get into a fight. You are always too busy to talk to her for any length of time, and she knows I won't judge her. I've been with her since she was almost 3 years old, and she trust me.\" \n\nThe front door opened, and a screeching voice yelled, \"Get your ass in here dad, I'm going to beat you to death.\" \n\n\"Sarge, Hank, you're with me.\" \n\n\"If they take one step towards this house, I'll get my gun and shoot all three of you.\" \n\n\"Mister Valentino, she's not kidding.\" \n\n\"This is going to be ugly George. If I'm not out there in one hour don't bother with the police, just call the corner.\" \n\n\"Yes sir.\" \n\nStephano turned towards his men. \"Goodbye fella's, it's been nice knowing you.\" \n\n\"Get in here dad, before I come out there and grab you by your neck.\" \n\n\"I should never have given her those karate lessons.\" \n\nHe walked towards the front door, and wasn't sure what awaited him. Once he was inside Laura slammed the door hard enough to rattle the house. Stephano turned to apologize to his daughter, when Laura put her arms around him, kissed him, and said, \"Hello dad, did you enjoy what you saw?\" \n\n\"I saw your mother 23 years ago, even down to the pubic hair. Can I ask you what you were doing upside-down, doing splits?\" \n\n\"It's an exercise for the glutes, and thighs. Adam particularly likes my ass, so I'm keeping it in shape for him.\" \n\n\"That's another question I have for you, and I'm going to kill him if you give me the wrong answer. You said you were going to remain a virgin, until you were married. I just found out you've been sleeping together for four months. Do you want to answer the question I have in my mind, or do you want me to spell it out?\" \n\n\"I am still a virgin daddy, and I will be for a few more days. Adam and I play, but we do not have intercourse. Does that answer your question?\" \n\n\"It means you'll have a live person to marry on the 25<sup>th,</sup> instead of a mummy.\" \n\n\"Would you have made that same statement Anna?\" \n\n\"Anna never made that promise. God knows your brother never did. I'm surprised half the girls at the University of Michigan aren't suing him for child support.\" \n\n\"You started buying him condoms when he was 15 years old dad. According to urban legend, he started buying them by the gross when he was in college.\" \n\n\"I'm sorry to admit this, but that was me, and that is my son. The only difference is I went to Penn.\" \n\n\"Why did you come here today dad?\" \n\n\"There is a very simple explanation for it. Every time you call the house, your mother hogs the phone, and I never get a chance to talk to you. You're leaving in a few days, and I wasn't going to let you leave without us having a chance to have a real heart-to-heart conversation. I don't care if it's about your fourth-grade teacher, or the time you broke your left arm. I want to find out if there's trouble in paradise, or if you are having second thoughts about leaving. I just want to talk to you, so when you leave, we leave nothing left unsaid.\" \n\n\"How much time do you have dad?\" \n\n\"I have until 4:40 PM Sunday afternoon. Then you have five minutes to get married, say goodbye, and board the spacecraft.\" \n\n\"Stay here, I have to talk to George.\" \n\n********** \n\n\"George, call Adam and tell him I don't want him to come home before midnight. I'm talking to my father, and it's going to take some time.\" \n\n\"I thought it might miss. I already spoke to him, and told him he was non-expected to be home until 1 o'clock in the morning.\" \n\n\"God dammit George, are you sure you don't want to come on that spacecraft with me? You know what I'm going to say and do, before I say or do anything.\" \n\n\"Thank you for the invitation Laura, but I would miss football too much. Then there is watching grass grow, and croquet. Then the most exciting of all things, the America's Cup Yacht Races. I couldn't possibly miss that.\" \n\n\"I'm not even going to respond to those lies. You're too good and valued a friend for me to call you an asshole.\" \n\n\"Thank you for that Laura that would have hurt.\" \n\n**************** \n\nAs she walked back inside, she opened the refrigerator and pulled out two bottles of water. She opened them both, and handed one to her father. She sat down next to him and asked where he wanted her to begin. \n\n\"Begin at the beginning, or wherever you'd like, I'm here to listen, and talk with you.\" \n\n\"I was pulled out of mom's womb first. It was damn crowded in there, but at least it was warm. The damn room we were brought into was cold. This Doctor handed me to a woman, who wrapped me in a blanket to...\" \n\nAs Stephano listened to Laura talk, he realized she was recalling things no child under the age of two should remember. She was amazing. She continued to talk, and as her age progressed, he began asking questions. The more she revealed, the more he questioned her. \n\nAt 7 PM, she called and asked George to order dinner. \n\nHe responded, \"It should be here anytime now.\" \n\n\"I hate you George.\" \n\n\"Yes ma'am, I know you do. I hate you more than you hate me.\" \n\nLaura smiled, because she would have the last laugh. When she was off on her journey into space, each of her agents would get a very high dollar parting gift. George was special to her. He would get $50 million, and a 10,000 acre ranch, in his home state of Washington. He often talked about going back there to raise cattle and sheep, but it was a very expensive undertaking. Her lawyers would help him pick out the best cattle, and two bulls to sire the next generation. They would do the same thing with his sheep. He would no longer have to worry about anything ever again. He was the best friend she ever had, and the best confidant anyone could ever ask for. \n\nLaura and Stephano continued talking during dinner, about her decision not to go to college, and the war that began between her and her mother because of it. She didn't need a professor to tell her how to do something on a computer that she already knew how to do better than he did. \n\nThen came the chance of a lifetime for Laura. The opportunity to work with me on a new project to put people into space, in under 10 years. We needed someone with computer expertise to find a way to put people into stasis for long periods of time, without their bodies deteriorating. It had never been done before, and she wanted to be in on this project. \n\nShe called me, told me who her parents were, and what she was able to do with a computer. She said she was nearly as good as her mother, but no one was ever going to be as good as her mother was. \n\nI accepted her on face value. If she didn't pan out, I could send her home. I had no idea there was a war going on at home. Patti v. her three children and Stephano. \n\nStephano was trying to negotiate a deal, between the children and his wife and it was not going well. It came to a head after she had a meeting with her neurologist, Doctor Joyce Null, who told her medically she was fine, and to get out of for children's way and let them grow up. \n\nAs they were leaving the hospital, there was another explosion between the three children and Patti. Robert and Laura furiously left their mother at the hospital, leaving Anna to hold Patti's hand. ",
        "Patti and Anna talked for a while, and then Patti realized that she and Laura were twins, and that's why they were constantly knocking heads. It was decided Patti and Laura would take on this project jointly. Mother and daughter finally started getting along much better, and the war between them ended. \n\nNeedless to say, I was thrilled. I had the two best computer specialists in the world trying to break the code of stasis. If anyone could do it, they could.\" \n\n***************** \n\nIt was approaching midnight, and Laura and I were getting giddy, because we were so tired, and talked out. There was a knock on the front door, and Laura opened it. \n\nGeorge simply said, \"Be gentle miss.\" \n\n\"What did that idiot of mine do now?\" \n\n\"You were the one that ordered him to stay out until midnight. He had to do something.\" \n\nStaggering up the walkway came Adam. She saw his truck parked on the swale, and she became furious. Her attention returned to Adam, he could not take one straight step after another. He did have a large smile on his face when he saw his beloved standing at the door waiting for him. Laura backed up and waited for him to enter. \n\nStephano was standing at the entrance to the kitchen, watching flames come out of Laura's ears. \n\nHe said to himself, \"This is not good.\" \n\nAdam negotiated final step into the house, grabbed the door, closed and locked it. He saw Stephano, and made a poor attempt at saying his last name. He walked towards Laura, said hello baby, and reached in for a kiss. It was the last thing he remembered until morning, when he woke up lying in the entry hall. \n\nBefore leaving Stephano said, \"I don't remember that move Laura.\" \n\n\"George taught it to me about three years ago. I've been perfecting it ever since.\" \n\n\"In my opinion, I believe you have it down pat.\" \n\n\"I do too dad. Say hello to mom, and if she wants to stop over, please have her call first.\" \n\n\"I promise. I will tell her to call you first. Good night baby.\" \n\n\"Good night daddy.\" \n\n***************** \n\nWhen Adam woke up the following morning his back ached from sleeping on the floor, he had a welt on his neck and he couldn't move his left arm. Before he faced Laura, he wanted to see the condition of his truck, because he didn't remember driving home. He opened the front door and saw it parked on the swale, slightly askew, but without any damage. He gave out a big sigh of relief. Now he had to face her. \n\nAs he turned to walk down the hallway towards their bedroom, there were two large suitcases sitting by the wall, packed, and ready for travel. \n\n\"Oh shit, I fucked up big time last night.\" \n\nHe moved far enough that he could peek into their bedroom. Laura was dressed in a beautiful pantsuit, and was just finishing putting items into her pocketbook. \n\n\"Good morning.\" \n\n\"Shut the fuck up.\" \n\n\"I met friends at the bowling alley, and I got drunk.\" \n\n\"Didn't I just tell you to shut up?\" \n\n\"I'm sorry about last night.\" \n\n\"I should have killed you, but my father was here, so I couldn't.\" \n\n\"Was getting drunk so terrible a crime that you're leaving me?\" \n\n\"No, but how did you get home?\" \n\n\"It was only six blocks.\" \n\n\"It could have been 6 inches, and you could have killed someone. You put the entire project in danger, by driving home, instead of calling home, and asking someone to come and get you. You're the only qualified plumber we have, and you fucked up big time.\" \n\n\"I wasn't thinking very clearly last night.\" \n\n\"You weren't thinking at all. If I knew you were going to be that stupid, I would have sent six agents with you, and sat you down in a bookstore.\" \n\n\"I think you broke my left arm.\" \n\n\"I should have broken your neck. Have one of the agents take you to the hospital and find out. I don't care anymore.\" \n\n\"Please don't say that. If we are not going to get married, I can't be around you. If I can't be around you, I just can't go. I'm not threatening you, and I'm not threatening the program, I'm just stating a fact. I love you too much to be in an enclosed space with you for all those years, without going crazy. Your love for me could not have dissipated over one act of bad judgment, could it?\" \n\n\"I swear I should have hit you on the head harder. Most of the time, when you get your bell rung you're supposed to remember something. I'm not sure if you ever remember anything I tell you. I ask you not to piss me off, and you insist on pissing me off. I tell you to be careful, and you put your life in danger. What the hell am I supposed to do with you? What day is today?\" \n\n\"Saturday?\" \n\n\"It's Sunday you asshole. What is today's date?\" \n\nAdam counted on his fingers. He looked to the heavens for help, and he looked at Laura contritely. \n\n\"It's December 21.\" \n\n\"Very good, and what are we supposed to do by 2 o'clock today?\" \n\n\"Go to church?\" \n\n\"Let's try this on for size instead. Bring the luggage to the spacecraft.\" \n\n\"I remember that now. Can I take a quick shower and change first?\" \n\n\"How are you going to do that if you can't move your left arm?\" \n\n\"I can shower by myself, if you can help me dress.\" \n\n\"Brush your teeth, I can smell you from here.\" \n\nLaura went to the front door, opened it, and called for George. \n\nHe shouted, \"One minute Laura, I'm asking for volunteers.\" \n\nGeorge and four men walked up to her as she stood by the front door. \n\n\"These men will take the luggage to the car. Then they will help Adam shave, and get him dressed. Do you want to take him to the hospital first, to have his arm x-rayed, or do you want to go to the NEST, check in, get your room assignment, and have us bring your luggage to your assigned room.\" \n\n\"Why do I bother getting out of bed in the morning George, when you already know what I'm going to do for the rest of the day?\" \n\n\"Well miss, you have to check in personally at the spacecraft and sign documents so the government knows you are leaving of your own free will. Then there is the transfer of your money to Anna and the agents. You have to sign your marriage certificate, if you intend to complete the ceremony. I'll kick your ass if you don't. There's the insurance papers, canceling your policies, and a few hundred other papers that you have to sign and have notarized.\" \n\n\"Why wasn't I told about this?\" \n\n\"Because they told me, and you didn't need to be bothered with it.\" \n\n\"Do you remember the first time I fell off her horse?\" \n\n\"It wasn't a horse, it was a pony.\" \n\n\"I told you I was never going to get back on that four-legged monster ever again. I never forgave you for what you did to me the next day, but as I thought about it, it was the funniest thing you ever did to me.\" \n\n\"You went from sitting on a tiny pony one day, to sitting on a giant Clydesdale the next. You grew to love that horse because it was the gentlest animal you ever met. Do you know why it kept nibbling at your hair?\" \n\n\"It was the shampoo my mother put in it.\" \n\n\"No, I put sugar on top of your head.\" \n\n\"George, you are impossible.\" \n\n\"It kept you riding, didn't it?\" \n\n\"Yes George, it's certainly did.\" \n\nA few moments later, they heard Adam scream. \n\n\"I think they just put the shirt on over Adam's left arm. What did you do to the poor man last night?\" \n\n\"The Stevedore Handshake,' just like you taught me.\" \n\n\"I asked you to be gentle, because you told him to stay out late.\" \n\n\"I didn't mind that he stayed out late. I didn't mind that he got drunk. I was really pissed off because he drove home drunk, instead of calling for help.\" \n\n\"I find that acceptable.\" \n\nThe agents dragged Adam out the front door to where George and Laura were speaking. He was not happy. \n\n\"Did you have something to say to me Adam?\" \n\nAdam's fury dissipated instantly. \"Does it look like I have anything to say to you dear?\" \n\n\"It looked like you had something on your mind, but it seems to have passed now. George, let's take Adam to the hospital, if he opens his mouth on the way there, I may break his right arm.\" \n\n\"Be nice Laura, or you could be knee-deep in shit for a long time.\" \n\nAdam smiled, until Laura looked his way. \n\n\"What are you smiling about Adam?\" \n\n\"I don't know, it must be gas.\" \n\n\"Gas my ass.\" \n\n\"That's the right place dear.\" \n\nGeorge said, \"The both of you will shut up, this minute, or you will wind up with ball gags in your mouths, until the evening of the 25<sup>th</sup>, when you will say I do, or get seriously injured.\" \n\n\"We're still getting married Laura?\" \n\n\"I have been threatened with my life if we don't.\" \n\n\"There's no one in this world that could threaten you.\" \n\n\"There is one person in this world that can threaten me.\" \n\n\"George, thank you George, I owe you my future.\" \n\n\"No Adam, no one can guarantee your future. I guaranteed you are going to get married. The future is your concern. Don't piss her off. She reacts like I taught her to, and she destroys anything, or anyone that does it. You will keep Doctor Finch very busy if you keep this attitude of yours up. She will rip your balls off, and you will go from a he, to and it, before you scream.\" \n\n\"Thank goodness no firearms are allowed on the spacecraft. She's probably an expert with those too.\" \n\n\"Yes she is, and no you don't want to know her scores.\" \n\n\"What did you do to this woman George? She is unlike any female I've ever known.\" \n\n\"Laura told me her fears, and I made sure they went away. She had children's black belts by the time she was 7, and a full black belt by the time she was 12. When she entered high school, she was already developed, and a beautiful young woman. \n\nA senior, on the football team, made an aggressive pass at her. He was among other football players showing off. Laura almost killed him. A Vice Principal yelled for her to stop and she did, just in time. \n\nNo male ever went near her again.\" \n\n**************** \n\nAt the hospital, the x-rays showed his arm was not broken, only sprained. They wrapped it up, put it in a sling, gave him some pain medication, patted him on his ass, and sent him on his way. \n\nThey returned to the SUV, and on the way to the NEST, Adam said, \"I'm sorry, I really fucked up. I will try to make you proud of me again.\" \n\n\"I should have broken your arm.\" \n\n\"What more can I say, but I'm sorry?\" \n\n\"You are so dense Adam. It's going to take you 8 to 10 weeks for that arm to heal properly. If I broke it, it would have been out of the cast in 6 weeks.\" \n\n\"If you two back there don't shut up, I'm going to use tape. Kiss and make up, you loved each other, and you are making me sick.\" \n\n\"George this is none of your business.\" \n\n\"Harry pull over to the side of the road. I have an ass to kick.\" \n\n\"I'm not going to fight you George, you're too old.\" \n\n\"I'm going to have you on your ass on the ground in less than a minute. While you're down, I'm going to hit you, until you beg for mercy. This garbage between you and Adam has got to stop. I know he made a mistake, but you are partially responsible for it. Now get out of the car so I can box your ears like I did when you were a child.\" \n\n\"No. I love you too much George. I forgive you Adam, from the bottom of my heart I forgive you. I will never mention this again. When I marry you on Wednesday, it will be the happiest day of my life. Please try not to piss me off between now and then. I do love you, I have since you grabbed my hand in the theater. No other man ever had the courage to do that to me.\" \n\nLaura nearly killed him as the first few words exited Adam's mouth. She was happy she restrained herself. \n\n\"I don't believe you could have forgiven me with more beautiful words. I give you my solemn vow to be your faithful partner. I promise to share your hopes and dreams. I promise to stand by you in good times and in bad for as long as we both shall live. I love you Laura Valentino. I have from the day we met, and I will for the rest of my life.\" \n\nGeorge didn't have to look in the vanity mirror to know his charge was crying. He reached into his breast pocket, pulled out a handkerchief and put his hand over the back seat. The next thing he heard was, \n\n\"God damn you George.\" \n\nHe just stared straight ahead and smiled. \n\n******************* \n\n157. The Lineup \n\nThere were eight double-wide desks located 50 feet before the bear traps. Eight tables for 64 individuals, or families. They were piled high with paper. Behind the tables were lawyers, insurance representatives, bankers and government functionaries from so many agencies it would take too long to mention to mention them all. \n\nRod Laver was the notary public, plus the final authority to make sure each document was filled out properly, so no one, especially the United States Government could say any of these people were frauds, and were not going on this spacecraft into unknown parts of the universe. \n\nIf the term 'Rank has its privileges' means anything to you, Jennifer and I went first, at table number one. Grayson, Delicious, Newton, and Teddy Thyme were at table number two. Gordon and Zoey Luck or at table number three. The other five members of the primary flight crew stood at the tables, waiting for me to begin. I nodded my head, and every female head of household began signing forms. It just seemed like the right thing to do. \n\nAs each of us finished our paperwork, members of the secondary flight crews took our places. Each of us were given rooms on the third level. These rooms were not more spacious, or better equipped than any other room, they were just closer to our stations, if we were needed in case of an emergency. The few remaining rooms on the third floor were given to members of the engineering department, but the bulk of the engineering department, and almost everyone else, went to the fourth floor. \n\nDoctor Finch had two empty rooms next to his, which I didn't understand, even though I knew Sandy was pregnant. It would be a long time before they would be using the room next door for their child, but I still couldn't reconcile that extra empty room. The fourth floor also contained our security agents, except for one, Monty. \n\nMonty was put on the fifth floor next to the gym. I told her it was important for her to be there to break up any fights that may occur. Only a person with her stature could do it, without breaking someone's neck. \n\nShe smiled. \"What happens when Gordon is up there?\" \n\nI told her there was a switch by the entrance to the gym that would cut off all communications. When she was finished with him, she could turn it on and tell us there was an accident and someone was hurt. \n\nShe was ecstatic. \n\nThe switch was actually for was the PA and television system throughout the ship. Everyone would hear and see what was going on in the gymnasium. We couldn't see baseball, tennis, or football, but these altercations would be the highlights of our time in space. \n\nWe also had the scheduled battles between Gray and Gordon to look forward to. Once Gray was in shape, again, there battles could be epic. We were sure other members of the security force would also want to try their skills out, not only on Gordon, but on other members of their 10 team. Laura was also in the mix. It would be interesting to see how well Gordon would fair against her, and she would do against Monty. It appeared that our entertainment schedule was beginning to shape up nicely. \n\nThe remainder of the fourth floor was filled with scientists, and our guests from all walks of life. \n\nLaura filled out her forms. Due to her wealth, and the transfers of money through her attorneys it took her nearly 35 minutes to do everything to everyone's satisfaction. When it got to Rod Laver it took another 20 minutes for him to go over everything and notarize each document. \n\nWhen Adam was asked his name, he replied, \"Adam, no middle initial, Schiff. Can I have a room with a window please?\" He took two quick steps, one back, and one to his right. He was behind Laura before the punch that would have knocked him to the ground passed the spot where he was standing. \n\n\"I ought to kill you for that remark.\" \n\n\"Can't you tell when I am joking, and when I'm not? You are going to have to develop a sense of humor, or I am going to be the first death on that sphere.\" He held her arms down by her side, kissed her neck, and nibbled on her earlobe. \n\n\"I told you I wanted to live with you until I died. I don't want you to be the one that kills me.\" \n\nShe was hit so hard on the back of her head she had to take a step forward. She turned, and looked at Adam as if he was about to turn into a cooked roast beef. \n\nGeorge said, \"You have three days, and if you don't start listening to the man, when you walk the plank to get into the spacecraft, you are going to need help.\" \n\n\"You hit me.\" \n\n\"I gave you a love tap. When I hit you, you will know it.\" \n\nShe turned to Adam and asked, \"Are you going to protect me from him?\" \n\n\"Are you crazy? I can't beat you, how am I supposed to beat him?\" \n\n\"Pussy.\" \n\n\"I don't care if I'm the line of pussies, I'd rather be alive than dead.\" \n\n\"You are very smart man Adam. If you let her control your life, she will crush you to death. Stand up for yourself, I don't care if you have to sleep in a chair every night every night. She will be in the wrong, and when she realizes it, she will come to you and apologize.\" \n\n\"I don't like you George.\" \n\n\"Would you like to start here, and now, in front of all these people, Laura? I'm willing. Either you get off your high horse, and start living like a human being, or go back to your mother and live in Glens Fall for the rest of your life. You are becoming like your mother. Remember how you ran away from her? Remember how sick you thought she was? You and Robert ran away leaving Anna to take care of her. Who is going to take care of you now? If you keep acting like this Adam is not going to put up with it. Adam has to go on this trip because of his qualifications. They don't need a mentally ill person on this trip. The computer can do your job.\" \n\n\"George, you're fired.\" \n\n\"Thank you ma'am, I don't want to watch the woman I love allow herself to become so mentally ill that all the money in the world will not be able to keep her out of a mental institution.\" \n\nAs George walked away, the agents surrounding her said as one, \"Miss Valentino, we quit.\" \n\nShe replied, \"You can't, you're under contract.\" \n\nVictor said, \"You are leaving in three days, two of which are holidays; sue us.\" \n\nLaura started crying so hard she couldn't see. Adam didn't approach her. She fucked up, and she had to find a way to fix. \n\nLaura turned towards him, and asked, \"Please help me. Get George back here so I can apologize to him. I can't lose him, he is part of my heart, and part of my soul. Run after him and get him back for me Adam, please.\" \n\n\"Baby, you are the runner. I can't run 150 feet without stopping for air. If you want George back, it's up to you to get him.\" \n\n\"You're lying to me, I've seen you run before.\" \n\n\"It was probably for a beer, and the longer you argue with me, the further George is getting away from you. Make a decision Laura, your life is falling apart in front of you.\" \n\n\"You are a real bastard.\" \n\n\"If that's what you think of me, don't marry me.\" He started walking away from her also. \n\nLaura cried out, \"Adam!\" \n\nAdam didn't turn, he just kept walking straight ahead. \n\nStephano saw his daughter standing alone, crying her heart out. He ran over to her, and crushed her body to his. \n\n\"What's going on baby, what did you do?\" \n\n\"I threw my life away dad. I got angry and I fired George.\" \n\n\"After 21 years, you fired George? Are you out of your mind?\" \n\n\"That's exactly what Adam said, before I called him a bastard. He said if that's the way I felt about him not to marry him. He walked away.\" ",
        "\"You lost Adam too? You're having a banner day aren't you?\" \n\n\"George said I was acting like mom before she went to see Doctor Null.\" \n\n\"Are you suffering from the same malady your mother was?\" \n\n\"What do you mean, 'Separation Anxiety?' I'm not sure, I don't know dad. This is my life's dream.\" \n\n\"So far to satisfy your dream, you fired your best friend, you lost your entire security force, and your future husband. I'm beginning to wonder if your dream is worth it.\" \n\n\"So am I daddy. Are any of our aircraft here, I want to go home.\" \n\n\"Yes, we have three aircraft in Houston, and four in Austin. How are you going to get there?\" \n\n\"I'll drive.\" \n\n\"I'll have them pull your paperwork, I want them to know you're still alive if you decide not to go.\" \n\n\"Thanks dad. When you're finished here, do me a favor. Take mom on a long vacation. I'd like to be alone.\" \n\n\"I'll take her around the world, it should take at least four months to do. I'll notify you before we come home. You can either stay or disappear, it's your choice.\" \n\n\"I love you dad. Tell mom I love her too.\" \n\n\"What airport are you going to? I will have a flight crew ready.\" \n\n\"I will go to Houston, it's closer to home.\" \n\n\"Enjoy your life baby, make the most of it.\" \n\n\"I will.\" They kissed and she walked away. \n\nStephano said to his breast pocket, \"She's going to Houston.\" \n\n\"Yes Mister Valentino, we heard. We have her covered.\" \n\n\"Thank you George, there will be a plane waiting for you too. You will be able to hear everything she says.\" \n\n\"Thank you sir, will I be able to talk to her, like I am her conscience?\" \n\n\"You're sneaky George, but I will make sure you have two way communications.\" \n\n******************** \n\nStephano said into his communicator, \"Find Adam Schiff and do not allow him to leave the property.\" \n\n\"What's going on Stephano? I didn't think you know how to use these communicators.\" \n\n\"Even we have a problem. Laura is on her way home. I don't know if we lost our plumber or not. I'm trying to find out.\" \n\n\"I will meet you at the front left side of the hanger.\" \n\n\"What's a hangar?\" \n\n\"After I find out if I have a plumber or not, I'll tell you your joke stunk, and how hi.\" \n\n\"Mister Valentino, we have Mister Schiff. Where do you want us to bring him?\" \n\n\"Bring him to the front left side of the hanger please.\" \n\n**************** \n\n\"Hello Even, our guest of honor will be here in a minute.\" \n\n\"Can I get a one minute breakdown of what happened?\" \n\n\"I can make it shorter than that. Laura turned into Patti.\" \n\n\"No shit!\" \n\n\"Nooo shiiittt!\" \n\n\"When did this happen?\" \n\n\"Sometime between last night at midnight and this afternoon. When I left her last night, except for Adam lying on the entryway floor, she was fine. Something happened today that set her off. She fired her lead agent, and her best friend of 21 years, George Akins. The rest of her agents quit on the spot once she did it. Then she called Adam a bastard. He told her if that's what you think of me don't marry me. He walked off. Now she's running home, just like Patti would. She's going to hide behind those fences, until I tell her that her mother and I are coming home. Then she'll run someplace else where she can be alone. It's just like the last time with Patti. \n\nEven, they are 25 years apart, and they are twins. I had no idea what to do with Patti, and I have no idea what to do with my daughter.\" \n\n\"Here comes Adam, maybe he can give us some answer Steph.\" \n\n\"Hello Mister Valentino, Mister Luck, it's turned out to be a real shitty day.\" \n\n\"That's what we need to talk to you about Adam. Can you tell us why Laura broke down today?\" \n\n\"It wasn't me. I swear it wasn't me.\" \n\n\"Adam, nobody's accusing you of anything. We are just trying to find out what happened to make her crack. She fired George after 21 years. Something must've happened to make her do it. What was going on, were they fighting?\" \n\n\"Yes they were. At one point, George told our driver to pull over to the side of the road so he could box her ears. He told her she was acting like a child.\" \n\n\"Where the two of you arguing when George intervened?\" \n\n\"I guess you could say that, but it was more like Laura reading me the riot act, and I finally put my foot down at one point. George told Laura she had better listen to me or Wednesday she would need help walking up the plank to get into the spacecraft. More words were interchanged, and then George hit her in the back of the head so hard she took a step forward. Initially she thought it was me, but then she looked at George and said, \"You hit me.\" \n\n\"I gave you a love tap,\" George said, \"When I hit you, you'll know it.\" \n\nLaura told him she didn't like him, and George really laid into her. He told her how she abandoned her mother when her mother needed her, and how she treated her mother when her mother was sick. He hoped now that when she was getting sick people left her alone so she got so sick that even her money would not be enough to get her out of a mental institution. That's when Laura said, \"George you're fired.\" Everything went downhill from there.\" \n\nI said to Adam, \"I have to ask you a very selfish question, and I know this is a very hard time for you to answer it. Are you coming with us on Wednesday? You are the only plumber we have. We don't even have an apprentice. Without you we are \"Up shits creek without a paddle.\" We have a lot of smart people on board, and I'm sure some of us can learn how to do it. You had years of experience, and they had to put you through months of accelerated training to bring you up to a passing level. I need an answer now: yes or no.\" \n\n\"I'm going with you Doctor Luck. There's nothing left for me here, and there is no hope of me getting Laura back. Mister Valentino has been through this before, and George has lived through it vicariously with Mrs. Valentino. I don't want to be around and watch Laura go insane. If she does get well one day Mister Valentino tell her... tell her I will always love her.\" \n\n\"I will Adam, I'll make sure she knows.\" \n\n\"Adam do I remember correctly that your father is an air traffic control supervisor?\" \n\n\"Yes Mister Valentino he is. Why, what are you thinking?\" \n\n\"I'm thinking of cooping my daughter up in an airplane for three hours or more and letting her listen to her conscience, are you there George?\" \n\n\"Yes sir, I'm right here, and you say I'm sneaky.\" \n\n\"Adam can you get your father on a private line?\" \n\n\"That's not a problem Mister Valentino.\" \n\n****************** \n\n\"He's on the phone Mister Valentino, my father's name is Barry.\" \n\n\"Mister Schiff, my name is Stephano Valentino, my daughter is quite taken with your son as you probably know, and right now there in the middle of the tiff. With three days to the wedding she's trying to escape home to think. I'd rather keep her closer. I need a favor from you if you can do it.\" \n\n\"What do you have in mind Stephano?\" \n\n\"Two of my airplanes 51 Victor India and 85 Victor India are at the general aviation terminal at Houston. Do you have any influence there?\" \n\n\"We have been known to help each other out every now and again Stephano. What do you want us to do?\" \n\n\"I want you to put those two airplanes as far out in left field as you can, and forget about them for like three hours or so. You can call it a test for your paperwork. My pilots will tell the passenger that it is a severe weather air-traffic control hold, and they will be off as soon as possible.\" \n\n\"That's easy enough, why don't you send something nice up to the tower as a thank you.\" \n\n\"How many people work up there?\" \n\n\"There are roughly 30 up there.\" \n\n\"How about at your place?\" \n\n\"216.\" \n\n\"You are rather sure of that last number.\" \n\n\"I better be, that's my job.\" \n\n\"Thank you Barry, I'll call you when to release those airplanes.\" \n\n\"I'll be waiting.\" \n\n\"George are you there?\" \n\n\"Yes Mister Valentino I am here.\" \n\n\"You get into 85, let Laura get into 51; that's the older aircraft. I'll have yours serviced completely with a full buffet, and hers with a partial and make it look like it's a left over, and no ice. \n\nWhen she finds out this was a set-up, I'm hoping she's in outer space and not with me. She will tear me from limb to limb if she still on the ground. I better let her mother in on this, or I'll catch hell from both ends.\" \n\n******************** \n\n\"Hello dear how was your day?\" \n\n\"What's wrong, what did you do?\" \n\n\"I haven't done anything, I called and asked how your day was.\" \n\n\"That's the problem. It's Sunday, it's the middle of the afternoon, and you are calling to find out how my day was. What's wrong?\" \n\n\"The next time I call you remind me to have a gun pointing down towards my foot so I can shoot myself.\" \n\n\"Come home, I have a gun, I'll pointed at your foot, and I'll shoot you, right after you tell me What's wrong!\" \n\n\"What could possibly be wrong? Laura fired George. The remainder of her agents quit. She called Adam a bastard and he walked off telling her not to marry him. Laura is now on her way to Houston to catch a flight to Glen Falls. She sounds more like her mother to me than she does like herself. I guess that's about it.\" \n\n\"How long ago did this happen?\" \n\n\"It happened within the last hour.\" \n\n\"What have you done to try to cauterize these wounds?\" \n\n\"George and his team are in a girls club getting sloshed. Adams in the woods getting laid. Laura is looking like her mother more and more each minute.\" \n\n\"I heard it the first time Stephano, I'll talk to her. Who is covering Laura?\" \n\n\"George and his team are covering Laura.\" \n\n\"Where is Adam?\" \n\n\"He's with Even sulking.\" \n\n\"Tell Even to get him drunk.\" \n\n\"I don't think that would be a good idea.\" \n\n\"Tell Even to get him drunk.\" \n\n\"Patti it would not be a good idea.\" \n\n\"Why not?\" \n\n\"He came home drunk last night and she nearly ripped off his left arm.\" \n\n\"How do you know that?\" \n\n\"I was there when she did it. Adam is wearing a sling today, because she went easy on him.\" \n\n\"I bet that must have hurt.\" \n\n\"It hurt me and I was only watching.\" \n\n\"What evil plan is happening now?\" \n\n\"Two of our aircraft are going to be sitting at the far ends of Houston airport on an indefinite hold. Our dear Laura will be in one, with a limited food tray and no ice, while George will be sitting in the other with a full buffet speaking to her as her conscience. \n\nOf course if you wish to call her on her cell phone, you may do so. If it's turned off, she's in aircraft 51. You can get her through our control center. She can run but she can't hide. Oh she wants us to go on an around the world trip so she can be at home alone for four months.\" \n\n\"Like hell, let her go around the world, I want my bed.\" \n\n\"Okay, you tell her, while you're speaking to her. She should just be getting to the airport about now. Give her another two hours until she's locked in, and frustrated, then give her a call.\" \n\n\"Okay sweetheart, when are you coming home?\" \n\n\"I'll be leaving here as soon as I check in with Even.\" \n\n\"Okay, I'll see you soon.\" \n\nStephano walked over to Rod Laver, who was buried under paperwork. \n\n\"Rod I need a favor.\" \n\n\"Sure Stephano, what do you need?\" \n\n\"I need you to pull Laura's paperwork out of there. I don't know if she's going or not. She had a huge fight with Adam and George, and she's running home to Glens Falls. She can easily make it there spend two days, and be back for Sunday afternoon's launch, but I don't know. I think the safest way to play it is to pull the paperwork and just keep it on the side. Tuesday and Wednesday are holidays and no work will be done. If she goes the paperwork goes back in. If she doesn't the paperwork is already removed, and no one has to rush around looking for it.\" \n\nRod looked at the stack of paper, and then at Stephano. \"It looks like my Wheaties are going to come in handy today. I'll take care of it Steph, all this needs to be filed alphabetically anyhow.\" \n\n\"I feel for you Rod, I really do. Take care.\" \n\n******************* \n\nGeorge and his team were cleared through the security gate, straight to aircraft 85VI. As soon as they were seated, the copilot was on the radio. \n\nHouston Ground Control, this is November 4285Victor India, request clearance to the 'Penalty Box.' Penalty time unknown.\" \n\n\"4285Victor India is cleared to the penalty box. I have no idea what you guys are up to, but have a good time.\" \n\n\"Thank you Ground Control, 51 Victor India will be there to hold our hand shortly. We are trying to mend a lover's quarrel.\" \n\n\"85, please tell me you're joking with me.\" \n\n\"With the amount of money the Valentino's have, I wouldn't dare joke with you.\" \n\n\"One word of advice 85, Park with the nose of the aircraft away from the sun, otherwise it's going to get awful hot in there.\" \n\n\"You are a wonderful person Ground Control. You can expect some gifts coming your way shortly.\" \n\nThe pilot of the aircraft 85 turned on company frequency to see if aircraft 51 was on the net. \n\n\"51 this is 85 over.\" \n\n\"85 this is 51 go ahead.\" \n\n\"51 the tower just gave me a wonderful idea. Point the nose of the aircraft away from the sun. It will keep you cool, and the passenger compartment hot. You can tell Miss Valentino that you're running the air conditioner at full power, while the aircraft is being baked, by the sun. If she tells you to return to the terminal, tell her you'll lose your place in line for a take-off to the northeast. It looks like a two hour delay now, and if you lose your place in line, you may not be able to take off until midnight, or early the next morning.\" \n\n\"Are you sure this is cleared by Mister Valentino? I don't want to lose my job.\" \n\n\"I don't want to lose my job either. I got my orders directly from George, Laura's primary. If he says this is what were supposed to do, we are going to do it.\" \n\n\"Okay Artie, I'm on board. I hope she doesn't have a cell phone on her where she can get the weather for the Northeast. It couldn't be nicer up there if it tried.\" \n\n\"You can always tell her the problem is over the Shenandoah Valley, moving northeast, and the FAA is closing down the airports just to be safe. If she doesn't believe you tell her to call her father.\" \n\n\"I love you Artie, you always know how to pass the buck.\" \n\n\"I'll take that as a compliment Lewis, although I do feel a blade close to my spine. I've just reached the penalty box, and I'm pointing the nose of the aircraft southeast. I'll see you soon.\" \n\n*************** \n\n\"I'm sorry Miss, I can't let you through security. You do not have any identification on you.\" \n\n\"I left my purse with my father. Don't tell me I can't get on my own aircraft.\" \n\n\"Miss if you continue to make a scene I'm going to have to have you arrested.\" \n\n\"Can someone vouch for me? Can the pilot of the aircraft identify who I am? I own the fucking thing. I only paid $48 million for it, I should be allowed to fly in it.\" \n\n\"Are the ownership papers in the aircraft?\" \n\n\"They damn well better be.\" \n\n\"Call your pilot, and have him bring them to the security desk. Until he gets here I would advise you to keep quiet.\" \n\nLaura was about to tell this TSA flunky exactly where to go, but decided to hold her tongue. She was pissed off enough already, she did not want to go to jail because of it. She called the control center and had them patch her through to the pilot of aircraft 51. \n\n\"Mister DeMarre, this is Laura Valentino. They are holding me in the security area because I don't have any identification on me. Would you please bring the ownership papers from the aircraft to me so I can shove it down the guys throat please?\" \n\n\"Miss Valentino, I have more experience with these $12 an hour TSA employees than you do. I would suggest you put a smile on your face, when you show them these papers, because he still could keep you off this aircraft. Your picture is not on the ownership papers, and it is required under the law for you to have a picture ID to board a civil aircraft. So be nice to him until you're on the aircraft. Then call him and tell him to go fuck himself.\" \n\n\"I will heed your advice Mister DeMarre, I want to get home.\" \n\n10 minutes later, Captain DeMarre greeted Laura and went to the front of the line to show the paperwork for the aircraft to the agent. Laura's signature was all over it, and the guard asked her to sign several pieces of paper to prove it was her signature. \n\nLaura had flames coming out of her ears again, but she smiled, as the captain directed her to do, and the signatures matched perfectly. \n\n\"You may board your aircraft Miss Valentino, but this is a one-time exemption. The next time you had better have a picture ID, or I will send you back to get one.\" \n\n\"Yes sir, I appreciate your kindness.\" \n\nThe Captain pulled her by the arm out onto the tarmac as fast as he could, and Laura started to scream epithets at that agent he had not heard from a woman's mouth ever. He decided at that moment to lock the cockpit doors as soon as he started the engines. He valued his life more than he valued his job. \n\nLaura was not listening to the first part of the conversation between the pilot and the control tower, but as they were taxing towards the runway she heard the pilot say, \"FUCK!\" \n\nThe aircraft continued taxiing normally until they reached the end of the runway, crossed it, and went to an area where another aircraft was parked, and waiting for takeoff instructions. \n\n\"Miss Valentino, I have some bad news for you. The FAA has put us on an indefinite ground hold due to bad weather approaching the Northeast. We are waiting to find out what number we are for takeoff clearance. If we had stayed at the gate for three more minutes, you could have sat comfortably in the executive lounge area. Now you have to spend that time here in the aircraft the entire hold time. I am very sorry.\" \n\n\"It was not your fault Captain. I wanted to get out of there as quickly as possible, and I did. Neither you nor I anticipated this. How long before we know what number we are in line?\" \n\n\"It should take the computer, in Virginia, a few minutes to give us our slot Miss Valentino. I'm going to shut down one engine to conserve fuel, but I will be running the air-conditioning at full power to keep the aircraft as cool as possible. It is very hot outside, as you know.\" \n\n\"Thank you Captain, it's very considerate of you.\" \n\nLewis set the cabin temperature at 79\u00b0, which was guaranteed to make Laura hotter than she already was, and sleepier. It would be the perfect atmosphere for George to mentally berate her. It was time for Laura to grow up, and learn to compromise. He taught her how to be strong, but now she was too strong, to the point she was overbearing. \n\nPatti was the same way. It took an equally strong man to tame her, and to love her unconditionally. Stephano's fights with Patti were thermonuclear, and their make-up sessions took weeks, but they survived everything and married on the one term she would not compromise on. She had to be a virgin when she went to her marital bed. \n\n25 years later, Laura was running away days before her wedding. Like her mother and father, she and Adam had played at the sexual games, but had not had intercourse. She was a virgin, like her mother, and three days from now she would go to her marital bed pure. That is if she married Adam, and at this moment, it was not looking good.\" \n\n\"Miss Valentino, our slot number is 486.\" \n\nLaura screamed. \"There are 486 aircraft ahead of us?\" \n\n\"Yes ma'am, that's not many aircraft at all. It's about 2 hours, probably less. They will see we are not going to land at any major airport, and slide us around about 200 miles west of New York. Depending on how bad the weather is over Pennsylvania, it could be less than an hour's hold, because we are going to Albany, which is never busy.\" ",
        "\"Thank you Captain, you've made me feel much better.\" \n\n\"Please remember Miss Valentino that this is my best guess. The FAA uses its own crystal ball.\" \n\n\"I'll remember Captain.\" \n\n******************* \n\nWith her seat reclined like a bed, and covered with a light blanket Laura began to dose. From the speakers set into the chair George whispered, \"What the fuck did you do?\" \n\nLaura screamed, jumped out of the chair, and looked around the interior of the aircraft to see where George was. She walked to the back, checked behind each chair, and walked to the front. He wasn't anywhere to be found. She knocked on the cockpit door and asked the captain to open it. Initially he refused because of federal policy, but as she became irate he opened the door. \n\n\"Is there anyone up here beside you two?\" \n\n\"Miss Valentino only the two of us can fit up here.\" \n\n\"Is there any way to get down below to the fuses or anything like that?\" \n\n\"Yes there is, you're standing on it.\" \n\n\"How do you open it?\" \n\n\"There is a latch in the cockpit that opens it.\" \n\n\"There's no other way to open it?\" \n\n\"No ma'am, as you can see it is flush with the floor, and covered with carpeting. The latch and spring mechanism is underneath the floor. No one can open it from the top.\" \n\n\"Thank you very much Captain.\" \n\nLaura returned to her seat. She looked at it, lay down, and in moments she began to doze into a fitful sleep. \n\nGeorge waited a short time before he said, \"Are you going to steal a helicopter, crash and lose your memory, when you get home? Is that how you decided to lose your life?\" \n\nLaura screamed, and jumped out of her chair. \"Leave me alone George, I want to go home. I have to think, and I can't think around all those people.\" \n\nGeorge activated the chair the speakers in the chair behind her. \"All those people; do you mean all your friends, or the people you abandoned?\" \n\nShe spun around to look for him. \"They didn't need me anymore. You said so. The computer could do my job.\" \n\n\"The computer can't marry Adam. You threw him away like a piece of trash.\" \n\n\"Where are you?\" \n\n\"I'm in your head dummy. You're sleeping, you only think you're moving around. You're arguing with yourself, but you think you're talking to George. Remember what you said about him? He's part of your soul, he's part of your heart. He's part of your mind too. All those hours you talked together, did you think he's not stored between our ears? Lie down and rejoin your body, your mother is going to call you.\" \n\nLaura did as she was told, and as soon as she covered herself, her cell phone rang. \n\n\"Hello mom.\" \n\n\"Hello baby, how did you know it was me?\" \n\n\"A little bird told me.\" \n\n\"A little bird my ass. I just found out you are cooped up in one of our aircraft for the next three or four weeks.\" \n\n\"Our pilot thinks it is going to be less than two hours.\" \n\n\"Your pilot is an optimist. What did you do honey? Why did you throw your life away? Are you becoming like I was? Are we twins again as we were when we took up the stasis project? Please talk to me, I don't want you to have to dig yourself out of the same deep dark hole I had to while the three of you were growing up. You and Robert told me I've ruined your young lives because of the way I was. Don't do it honey, I ruined too many lives I was barely able to save your sister's in time.\" \n\n\"What do you want me to do mom?\" \n\n\"What do I want you to do? I want you to stay home with me. I told you that from the very beginning. However, this is not about what I want you to do. This is about what you want to do. Your sister has a life. Your brother has a life. What does Laura Valentino want to do with her life?\" \n\n\"If you asked me that question yesterday, I would have told you, without any reservation, I wanted to go into space. I want to marry Adam, and I wanted to know if our stasis devices worked. These are the things I wanted mom, and now I don't know.\" \n\n\"Let's go over them one at a time and see which one bothers you the most okay? \n\n\"Okay.\" \n\n\"Adam, do you or do you not love him enough to marry him?\" \n\n\"Mom he's a pain in the ass.\" \n\n\"So is your father and I've been married to him for 25 years. Now answer the question. Do you love him, and do you want to marry him?\" \n\n\"I love him with all my heart mom. He just keeps pissing me off.\" \n\n\"Your father and I have a room to take care of that problem.\" \n\n\"Yes I know mom.\" \n\n\"So there's no problem with Adam?\" \n\n\"No mom, there is no problem with Adam.\" \n\n\"Do you still want to find out if our stasis devices work? 63 people are betting their lives on what we did. Junie survived for one year. Do you think they will work for 10 or more?\" \n\n\"That's why I want to go. I want to say to the people that are stepping in there for the first time that this is my design. This is my work. You don't have to worry, because I'm getting in there with you. When you get out you will be fine, because I will be getting out at the same time.\" \n\n\"Okay, stasis is not a problem and the only way you are going to find out if stasis works is the third question, \"Are you afraid of going into space?\" \n\n\"No I'm not, for some reason or another I know I belong out there and so do my children.\" \n\n\"Will you kindly tell me what you have to think about?\" \n\n\"It's exactly what dad said, \"Separation Anxiety.\" \n\n\"I'm going to miss you, dad, Anna, Cloudy, and George. How do you replace a man that knows you better than you know yourself? How do you replace a family that you've grown up with?\" \n\n\"That's easy baby. You get married, and you start all over again. Of course you going to miss your old family, but it would be the same thing if you moved to Australia. However on this trip you won't be coming home, you will be finding a new home. You will be pioneers.\" \n\n\"How do I find George and tell him I'm sorry for the way I acted? \n\n\"I'm sorry dear, I didn't hear you. Would you please say that again?\" \n\n\"How do I find George and tell him I'm sorry for the way I acted.\" \n\nOver the aircraft's PA system George said, \"You're forgiven, you pain in the ass.\" \n\n\"You said you were between my ears, you lying bastard.\" \n\n\"Would you like to meet me outside and discuss this?\" \n\n\"You set all this up.\" \n\n\"I did no such thing, so if you going to blame someone, blame the right party.\" \n\n\"Tell me who it is.\" \n\n\"Find out for yourself. I was fired, remember?\" \n\n\"I'm sorry George, I was an idiot. Please forgive me, and returned to work for me?\" \n\n\"I want Mondays and Tuesdays off.\" \n\n\"If you work Monday Tuesday and Wednesday, you can have the rest of your life off.\" \n\n\"What are you going to do, have me killed?\" \n\n\"No, I'm leaving, and you'll never have to work for this pain in the ass again.\" \n\n\"Are you going to be married?\" \n\n\"You just heard me tell my mother I was going to be married.\" \n\n\"Okay, I will work Monday Tuesday and Wednesday, but if you break your word, I'm going to break your legs.\" \n\n\"You can try.\" \n\n\"Mom did you do this to me?\" \n\n\"No, and neither did your father, I think. I'm going to hang up now, because it's approaching dinnertime, and I have to start cooking. You know what you have to do darling, so I would start doing it.\" \n\n\"Wait a minute, do you know where Adam is?\" \n\n\"As far as I know the last time anyone saw him was when he got into his truck and started driving away from the facility.\" \n\n\"George do you have any idea?\" \n\n\"I have no idea, because I am stuck in the aircraft next to you.\" \n\n\"Can we go back to the terminal now so I can get my life back?\" \n\n***************** \n\nAs they skidded to a stop in front of the hanger, they noticed several agents were lined up by the area in front of the bear traps. They believed it was a meeting, because everyone was getting ready to set up the stage, and chairs for Wednesday's event. \n\nI came out of the office to greet them, and Laura hugged me. \n\n\"I'm sorry I caused all this trouble today. I have no idea what got into me, but suddenly I had to get out of here in the worst way.\" \n\n\"I know the feeling Laura, I know it extremely well. When my daughter and I had a fight at the Grand Canyon, I ran away to the most northern tip of Alaska before I regained my senses. It took two of my closest friends to get me to come back.\" \n\n\"I had help too. George, and my mother finally talk some sense into me. I have to find Adam and apologize to him. I don't know if he'll accept it, but I really love him, and I want him to come with us.\" \n\n\"Adam has already made the decision to come with us. He had no reason to stay here. Without you his life was worthless, and he said he would see us on Wednesday. He seemed a little despondent to me, and I didn't want him to get hurt or drunk and get into an accident, or kill himself. So I came up with an alternate plan to keep him around.\" \n\n\"What did you do to get him to stay safe Uncle Even?\" \n\n\"Jim and a few other agents are keeping an eye on him.\" \n\n\"The agents who were laughing outside?\" \n\n\"Yes.\" \n\n\"There beating the hell out of my Adam?\" \n\n\"That's could be one explanation.\" \n\n\"I'll kill them all.\" \n\nLaura ran out of the hanger screaming for Adam. As she approached the bear traps, the agents parted, and only Jim stood in her way. \n\n\"How may I help you Miss Valentino?\" \n\n\"I'm looking for Adam Schiff.\" \n\n\"What claim do you have on him?\" \n\n\"He is my fianc\u00e9 you asshole. Where is he?\" \n\n\"Down there.\" \n\n\"What is he doing down there?\" \n\n\"Doctor Luck said he looked down, so we decided to put him down there in order to keep him safe. He already had one bad arm, we didn't want to hurt the other arm or break one of his legs. I decided this was the best place for him, under the circumstances.\" \n\n\"Back away Jim, or you are going to join him.\" \n\nGeorge said, \"Before the fighting starts, I would like to give 3 to 2 odds on Jim please.\" \n\nI said, \"I'd like $5000 on Laura please.\" \n\nGeorge replied, \"It will be a pleasure to take your money Doctor.\" \n\nSeveral of Jim's agents put their money on him, and while the bets were being taken, Laura asked to speak with Adam. \n\n\"Hello down there. Can you ever forgive me for being an ass?\" \n\n\"Can I be honest with you Laura?\" \n\n\"Honesty is the only way this is going to work.\" \n\n\"I don't think we are going to work. Every time you get angry it's always my fault. I cross some imaginary line, it's my fault. You say don't piss you off, and I have no idea how I'm pissing you off, because all I was doing was telling a joke. You have no sense of humor, and you are not willing to meet me halfway. \n\nI'll give you an example. 'What is the temperature of space?' Instead of saying it varies by 1000\u00b0, I got a dissertation as to why it varies by 1000\u00b0. I'm not a scientist, I am a plumber. I will never be as smart as you are. I work with my hands, and I know a little about flow science because it's part of my trade. I have an IQ of 128. Yours is probably over 200. I thought we could make it work, because we loved each other, but I was wrong. Love is just not enough.\" \n\nLaura jumped down into the pit, and kissed him. \n\n\"Listen to me, I just agreed to fight Jim. He is the number one agent and fighter this entire complex has, because I want you back. I may be all the things you said, but those things can be changed. I never had to change them before, because I was always alone. My mother told me how easy it was to change them and I never realized it. \n\nI asked her, \"How do you change the habits of a lifetime?\" \n\nShe said, \"Baby, it's easy, you get married.\" \n\n\"For years I never listened to what my mother said, because she was always dictating everything to me. You will do this. You will do that. I was doing the same thing with you, because it was the only way I knew how to handle my life. Now I know there's another way, and even my mother and father had to learn it to marry each other. \n\nIf you give me another chance, I will learn how to do it with you. I promise you I will change.\" \n\n\"No more broken arms?\" \n\n\"I didn't break your arm, it's only sprained.\" \n\n\"No more lectures on scientific stuff?\" \n\n\"I will try to change that.\" \n\n\"I can start on your back instead of the front?\" \n\n\"Absolutely not.\" \n\n\"I can live with that. Can we get out of here now?\" \n\n\"George, w...\" \n\nA ladder appeared 2 feet to her left. \n\n\"I hate that man.\" \n\n\"Can I get help going up the ladder please?\" \n\n\"Do you mean you don't know... Yes dear.\" \n\n\"Thank you, and yes I do.\" \n\n\"You tested me?\" \n\n\"It seemed like a good idea at the time.\" \n\n\"Sneaky, very sneaky, I'll put some ice in your shorts later.\" \n\n\"It's better than being on the floor.\" \n\n********************* \n\n\"Are you ready to go Laura?\" \n\n\"Let me get Adam a chair, and then we can begin.\" \n\n\"He can sit by me Laura, I was the only one to bet on you.\" \n\n\"Okay Uncle Even. Did anyone draw a square?\" \n\nJim said, \"I didn't think it was necessary. This is going to be over in less than a minute.\" \n\n\"I agree, but you may want to try to step out of bounds to try and keep it going longer.\" \n\n\"Little lady, you have some pair of horns.\" \n\nAdam said, \"Jim, you have no idea how big her horns are.\" \n\n\"Thank you dear that was very nice of you.\" \n\nJim was standing in his corner, when he removed his shirt, and his T-shirt. \n\nLaura saw him do it, and removed the top part of her pant suit, and her bra. \n\nThe men went wild. They whistled and applauded as she stood there ready to take on her opponent. \n\nJim looked at her and shouted, \"Put something on, you're nearly naked.\" \n\n\"I'm just following your lead. You took off your shirt and undershirt, and so did I. Are you just delaying this match because you're afraid?\" \n\n\"I'm not starting this match, because you're indecently dressed.\" \n\n\"You can go to any beach, and see as much, or more than I'm showing.\" \n\n\"What would you do if I went to a nude beach?\" \n\nLaura didn't answer. She put her thumbs into the elastic waist of her slacks pulled them down to her ankles and took them off. Then she untied the little ties on the sides of panties and pulled them off. She was left in her sneakers, and anklets.  \n\nJim stared at her, not believing that this extremely wealthy woman would be standing here in front of a crowd of 20 men, naked, and ready to fight him. \n\n\"Do you have any other questions Jim, or are my sneakers too much for you to handle?\" \n\n\"No Miss Valentino, you've made your point, I concede.\" \n\nAt first there was a yell among the crowd of \"NO,\" because of the money they lost, but then Laura did a pli\u00e9, a pierotte, a high kick, and the men began applauding. \n\nAdam kissed her, picked up her panties, and stuffed them in his pocket. \n\nShe whispered, \"Give me my panties.\" \n\n\"I don't want the rest of the world to see how my wife puts these panties on in the morning. That is supposed to be reserved for me.\" \n\n\"You're going to give me a second chance?\" \n\n\"I love you so much Laura, I would have given you a third, fourth, and fifth chance. I just wasn't going to tell you, because you would think I was weak.\" \n\n\"It took a very strong man to take on my mother and win. It took a stronger man to take me on and win. My mother gave up when she was 21. I didn't give up, until I was 24. You are a stronger willed man than my father, and my father is an extremely strong willed man.\" \n\n\"I think you should get dressed. Then call your parents and tell them we are okay. They removed your paperwork in order to keep you alive. Now they have to call and tell them you are dead.\" \n\n\"I think I'll let you tell them I'm dead. It doesn't seem right for me to tell them.\" \n\n\"Why don't we invite them to dinner, two live people, and two dead people?\" \n\n\"We can use by American Express Black card, it seems fitting.\" \n\n\"It will be the last time you can use it, because by tomorrow the credit card company will know you're dead. You're too young and beautiful to die. I'll take care of you, until we are reborn.\" \n\n\"Okay.\" \n\n************* \n\n158 Tuesday, December 24 \n\n\"I swear if that clock doesn't move, I'm going to kill it with a hammer.\" \n\n\"It wouldn't matter. It's the clock at the Air Force Academy that keeps time for everyone. Are you going to drive up there and kill that clock also?\" \n\n\"I'm supposed to be the logical one Jennifer, not you.\" \n\n\"Then act like it, you pompous ass. It's 4 AM, we have 37 hours before liftoff. Are you going to be a bear for all that time?\" \n\n\"Probably.\" \n\n\"Well, at least you're honest about it. I'll crush up some sleeping pills, and put them in with your breakfast.\" \n\n\"You would not do that to me on the day before liftoff. You know I want to see the ship, and check it out again.\" \n\n\"I would do anything to get you out of this house today, anything at all. Don't forget to say goodbye to Richard and Holden before you leave this morning. They are moving over to Rod and Rosalynn's house later today. We may not see them again, until tomorrow afternoon.\" \n\n\"It's a good thing you reminded me, my head seems to be elsewhere.\" \n\n\"Is 'elsewhere' dark?\" \n\n\"Why do you ask?\" \n\n\"If it is, I would tell you to pull it out of your ass, and relax. Everything that can be done, has been done. Our people are trained to a knife's edge. Our passengers are raring to go. Our investors, and invited guests are all here, and the press is banging at the gates to get the best vantage point available. \n\nThen there are the most important people of all, our scientists. Visualize the past eight years, and see what they have accomplished. I don't want to seem blasphemous, but what they have done in such a short period of time is almost godlike. Nearly 900 patents in 8 plus years. Even it is unheard of, in any industry or corporate venture, for so few people to come up with so many different, radically new ideas that they warrant new patents. Even your glowing ankle bracelet for children received a patent. I couldn't believe that one myself. \n\nRod said the woman at the patent office cries when she sees him on a Monday morning. \n\nOur investors are the happiest people of all. Stephano said that their total cost was less than $17.5 billion each. They have already recouped their investment, and are earning billions of dollars a year on income off the patents. This is not news to you, William has told you this time and time again.\" \n\n\"William laughs every time he hears someone attached to the government say space is an expensive venture. In the hands of private industry, it's a moneymaking venture. Someone will realize that soon enough.\" \n\n\"Are you going to go back to sleep? Are we going to make love, or are you hungry? Which one should I prepare myself for?\" \n\n\"I think we will start with number two, and then move quickly to number three. Finally, I will move to number one.\" \n\n\"I swear Even, someone should teach you how to count.\" \n\n\"I like my way better.\" \n\n\"Good choice dad.\" \n\n\"Zoey, you are going to kill that boy.\" \n\n\"He's wearing the biggest smile you've ever seen.\" \n\nJennifer said, \"Zoey remember, this is not a sprint, this is a marathon. You may have 100 years ahead of you to use that thing. You don't want to burn it out in the first year.\" \n\n\"Okay mom, just one more time and we will meet you for breakfast.\" \n\n\"It's going to take us 45 minutes to an hour Zoey. Go slowly, and be sure you both enjoy it.\" \n\n\"Look what you did now mom, while we were talking he fell asleep.\" \n\n\"He may have been exhausted, the poor little guy.\" \n\n\"He is not poor, and he's definitely not little, but he is asleep, and when he wakes up, I'm going to kill him.\" \n\n\"Every man has...\" \n\nZoey screamed, cried out, and laughed as if she was being attacked by a monster, and she was. The monster was her husband, the one she thought was asleep. \n\n\"You may continue on dad, I have the situation in my bedroom well underhand.\" ",
        "\"Gordon, it's supposed to be, 'well in hand'.\" \n\n\"Trust me dad, I have this situation well 'under' hand.\" \n\n\"That's our boy. Now where were?\" \n\n\"Exactly where he is I believe.\" \n\n\"Even if he's not Jennifer, we will be there shortly.\" \n\nJennifer screeched to high heaven, as I began tickling her. She became all arms and legs as she thrashed around our bed attempting to get away from my fingers. When she was finally on top of me, I stopped. She looked down at me with foreboding eyes, as I rubbed her flanks. She pushed her lips against mine, and tried to pull the hair out of my head. \n\n\"I hate you with every fiber of my being Even. My life would have been so much more uninteresting without you in it. I could've gone from day to day, sunrise to sunset, without a care in the world, watching my boy grow up to become a man. Why couldn't you have taken the next flight?\" \n\n\"The next flight to Fairbanks was in two days. I didn't have my pajamas with me.\" \n\n\"Are you ever at loss for a smart answer?\" \n\n\"With my wife's breasts pressing down on my chest. Her lips inches from my mouth. I'm happy to get any answer out I can. Do you want to lead or shall I?\" \n\n\"Even when I start out leading, I wind up following.\" \n\nJen kissed me and our mating ritual began. \n\n********************** \n\n\"Gray, I'm going to the hospital I'll be back in an hour.\" \n\n\"Is everything all right baby? Do you want me to go with you?\" \n\n\"No, I'm fine. I'm just keeping a promise to a good friend.\" \n\n\"All right, I'll take care of the kids. They'll be washed brushed and dressed when you get back.\" \n\n************ \n\nDelicious walked in the main entrance of the hospital and asked, \"Where is Nurse Spencer working.\" \n\nThe lady at the reception desk was not polite when she said, \"We are not allowed to give out that information.\" \n\n\"Really, where is your name tag?\" \n\n\"I must not have put it on this morning.\" \n\n\"I suggest you put it on now.\" \n\nThe receptionist did as she was told. \n\n\"Mrs. Luxor, I'm going to ask you again, where is Nurse Spencer working today?\" \n\n\"Madam, we are not allowed to give that information out.\" \n\n\"Who told you you're not supposed to give out that information?\" \n\n\"The director of the hospital.\" \n\n\"Jemma Zabo has a regulation that says you cannot say where people are working in the hospital?\" \n\n\"Yes ma'am.\" \n\nDelicious called Jemma and asked her if what this receptionist said was true. Jemma said, \"Of course, it's not true.\" \n\n\"Do you want to fire her Jemma, or should I?\" \n\n\"Was this her second offense?\" \n\n\"Yes it was.\" \n\n\"Then it's your choice, warn her, or get rid of her. I'll talk to you later Delicious.\" \n\n\"Later Jemma.\" \n\n\"As you heard I just spoke to the administrator of the hospital, and do you know what she said, there is no rule against telling a person where someone in this hospital is working. You made three mistakes this morning. First, you were not wearing your name tag, which I am overlooking. Second, you were rude when you addressed me, which I am not overlooking. Third, you told out- right lie twice, which I am definitely not overlooking. Jemma gave me two choices, I can fire you on the spot, or I can warn you about being a better more informed employee. Don't turn on the waterworks, because that will do nothing to change my mind. Why should I keep you on at this hospital?\" \n\n\"I took a $28 an hour cut to get this measly $11 an hour job, because it provided health insurance for my family. If I'm not happy with it and it shows, I'm going to have to improve on it. This is my sixth day, and I have not fully read all the paperwork I was given. That is my own fault. In a normal corporate structure, you are not allowed to tell where anyone else works without authorization. I thought that would work here also. Apparently I was wrong. I apologize.\" \n\n\"I take it you were downsized.\" \n\n\"I was downsized even though I had more time, and a higher grade than four others in my department. They were kept on. If I had the money I would sue the son of a bitches, but they know I don't, so they are safe. I'm going to go through the EOOC, but that will take forever, and I have to feed my family in the meantime. I'm going to have to sell my house, and almost everything else I have just to make ends meet.\" \n\n\"Where is Nurse Spencer working?\" \n\n\"She's on the third floor, east wing.\" \n\n\"Good, stay here I'll be right back.\" \n\nDelicious walked to the nurse's station and nearly bumped into Gloria Spencer. \n\n\"Hello Gloria, do you remember me, Delicious Thyme? You gave me one of your patented late-night counseling sessions a few years ago.\" \n\n\"I'm sorry Miss Thyme, in the past few years I've seen a lot of patients.\" \n\n\"I bet you that you only had one patient promise you a house free and clear, when she was leaving the area for good.\" \n\n\"I remember that you just had a baby.\" \n\n\"Teddy.\" \n\n\"A boy how wonderful for you.\" \n\n\"Teddy is a girl.\" \n\n\"She must be a mama's girl by now.\" \n\n\"If you mean does she run the household, yes she does. But that's not why I'm here, I came to give you this. Here is the deed, and the title to the house. You own the land and everything underneath it. If they strike oil, it yours. If they strike sand, it's yours. Don't let anyone tell you otherwise. Sometime next week call this number. He is a lawyer friend of mine. His name is Rod Laver, and he will take care of anything else needed to transfer you onto the tax rolls of the county. There will be no charge for services. Everything else is done, not a penny will have to come out of your pocket. \n\nAll you have to do now is sell your house, and your eight minutes away from work.\" \n\n\"How do I thank you for a gift like this?\" \n\n\"You thanked me in advance, remember? My head was so screwed up I didn't know which way to go, and you helped me go in the right direction. How do I say thank you for that? I have another lady waiting for me downstairs, and I want to help her too. I haven't got much time left here on earth, and while I'm here, I want to do all the good I can.\" \n\n\"I think you have been doing it Delicious. Both yours and your husband's names are all over the hospital as benefactors. The new YMCA building going up downtown as your name on it. Our Women's Cancer Center's wing is being built by your father, brother, and you. This town used to be a dust spot on the map. It won't be anymore. Goodbye, and have a very long trip.\" \n\n\"Gloria, it will be so long you can't imagine it.\" \n\n******************* \n\n\"Mrs. Luxor, what is your first name?\" \n\n\"Elizabeth.\" \n\n\"My name is Delicious Thyme. I'm a senior scientist with the 'Deep Space Science Project.\" In other words, the people across the highway, who are going to launch a ball into outer space tomorrow. I am going to be on it, along with my family, my parents, scientists and friends. 64 of us in all. If I say it can be done, it can be done. Are you willing to listen to me?\" \n\n\"I have nothing to lose by listening.\" \n\n\"I need someone to take over your position. Who is normally your relief?\" \n\n\"I only get 30 minutes. One of the officers normally stands here while I'm gone.\" \n\n\"Good.\" \n\n\"Officer, Officer, come here now.\" \n\n\"Yes ma'am how my I help you?\" \n\n\"This is your position for the rest of the day or until you are relieved. Do you understand? I am taking this woman to see Mrs. Zabo.\" \n\n\"Yes ma'am.\" \n\nAs they walked by Jemma's secretary, Delicious said, \"Tell Jemma I borrowed her office.\" \n\n\"Yes Mrs. Thyme.\" \n\n\"Tell me about you Elizabeth.\" \n\n\"I'm a Black female 37 years old, divorced with two children. I have a BA out of Memphis State, and a Master's Degree in Economics from the University of Tennessee. I've had two jobs. The first was with the Army Corps of Engineers, and I was recruited out of there by the Malitronix Corporation in Dallas Texas. I worked there until four weeks ago. I was supposedly let go as a part of a reduction in force, but four people in my department with less seniority than me were kept on. They were white and they were male.\" \n\n\"What does this corporation do?\" \n\n\"It's a main subcontractor for the military. It also serves friendly militaries around the world.\" \n\nDelicious smiled. \"I think Rod is going to love this.\" \n\n\"Who's Rod?\" \n\n\"Rod is an attorney friend of mine.\" \n\n\"I can't afford an attorney.\" \n\n\"There won't be any charge.\" \n\n\"Is he that bad an attorney?\" \n\n\"Rod has never lost the case, never. Let me make a phone call.\" \n\n\"Hello.\" \n\n\"Hello, Mr. Laver, this is Delicious Mark. I'm in the hospital, and yours is the only name I could remember. They say I banged my head against the door, and I have amnesia. Are you the one that squirted whipped cream all over me, because if you are I'm coming to get you right now?\" \n\n\"Oh God, Delicious, what are you up to?\" \n\n\"You didn't buy my amnesia story?\" \n\n\"If you had amnesia I would have run down to the hospital taking you out to the desert and left you there. What do you need Delicious?\" \n\n\"How would you like to take a bite out of a corporate giant?\" \n\n\"Do you mean I would get paid for being a lawyer again?\" \n\n\"Yes, no more flying back and forth to Washington just to file patents.\" \n\n\"Give me the particulars.\" \n\nDelicious gave Rod what she had written down and waited. \n\n\"She doesn't need me, she can go to the University of Texas law school graduation and take the last graduate. He could win this case for her.\" \n\n\"You and I both know he wouldn't win, because they would buy him off, and she would get nothing. I want Elizabeth to come out of this like a knight in shining armor. Not only did they fire her, but they fired her for reason. I'll bet you she was coming close to something they didn't want found. If she was the senior budget analyst in her office, what better way to stop an investigation than to make her part of a reduction in force?\" \n\n\"Tell the Elizabeth I don't work for free, she is my secretary starting next week.\" \n\n\"$95 an hour how wonderful Rod.\" \n\n\"I didn't say that, you did.\" \n\n\"You're going to pay her health benefits too?\" \n\n\"If I see you between this instant and tomorrow before liftoff, so help me God I'm going to shave your head.\" \n\n\"I told you that you were going bald.\" \n\n\"I am not going bald.\" \n\n\"Delicious, what are you doing to my husband now?\" \n\n\"I was reminding him of the old days. However, I did get him a wonderful client to keep him busy and out of your hair while you're attending to the children.\" \n\n\"That's wonderful, but I guess Rod didn't give you the news yet. It stutters while it comes out of his mouth.\" \n\n\"Oh no, this could only be one thing Rosalynn, grandchildren.\" \n\n\"Rod, she guessed it.\" \n\n\"She better leave tomorrow or I'm going to kill her. I'm not going to let her near those children. Not in the same city, county, state, country, or hemisphere. She has to leave.\" \n\n\"Delicious for some reason or another, I don't think he wants you near his grandchildren.\" \n\n\"I got that same impression. Does my father know yet?\" \n\n\"We are going to tell him when we pick up Richard and Holden this afternoon.\" \n\n\"I don't know who to feel sorrier for, Rod or my father?\" \n\n\"They will both break down and cry. Don't you realize Rod was never supposed to grow up? Now he has to and he has to face his own mortality.\" \n\n\"When we are near the microphone tomorrow I'm going to say to my dad, \"Did you see all the gray hair on Rod's head?\" If the Dallas Cowboys were playing, they would hear his scream in Irvington.\" \n\n\"Delicious someone else has to grow up.\" \n\n\"You must remember Rosalynn, he was the first man I was allowed to have fun with. Every other man was an enemy. I will never forget Rod for giving me that chance.\" \n\n\"I'll remind of that every now and again, and watch him smile.\" \n\n\"Goodbye Roz.\" \n\n\"Goodbye Delicious.\" \n\n\"Elizabeth, here are Rod's address and phone numbers. I guarantee you no corporate lawyer has ever heard of him, and they will probably try to brush him off. Whatever happens, and this may take years, you are going to win. It will be a substantial amount of money. I am talking eight zeros. Rod will not settle for less. Then the government get involved, and that company will be out of business afterwards. Think back to today when it happens. If it had been anybody else but me today, you would been fired. It's hospital policy. Two strikes and you're out. Wear a smile from now on. People are not your enemy, they will help you if you give them a chance.\" \n\nOkay Maybe One More Chapter! \n\nThe End \n\nTHERE MUST BE A MISTAKE \n\nBY \n\nPROLONGED_DEBUT10"
    ],
    "authorname": "Prolonged_Debut10",
    "tags": [
        "science",
        "romance",
        "novel",
        "novella"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/there-must-be-a-mistake-ch-33"
}