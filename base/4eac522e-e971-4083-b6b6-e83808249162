{
    "title": "Life's Changes Ch. 14",
    "pages": [
        "I awoke to a gentile kissing of my neck. It felt so good that it brought a smile to my lips. I was almost positive that it was Bill kissing me, but I couldn't sure. I enjoyed the feeling so much that I made believe I was still asleep so whoever it was would continue. I next felt my sides being touched then a hand on my tummy\n\n\"I can see you smiling, you sneak.\" Bill whispered in my ear. \n\n\"I don't want you to stop what your doing. If I let you know I was awake then you'd stop.\" I told him \n\n\"How do you know I'd stop?\" \n\n\"Because you know how I feel about sex in the morning. The only reason you would wake me this early is because you needed something.\" I told him as I rolled over on my back so I could see him.\n\nI was never one to wake up and make love to someone right away. I had this fear that I would smell bad or my breath would stink and my lover would reject me for it. Now if I could get up and take a quick shower and brush my teeth. Then I'd be ready and raring to have sex with anyone. I know I'm a fanatic about showers and being clean, but if my lover can't wait for me to shower then he or she won't be my lover for long. \n\n\"Your right I would never dream of waking you this early on your day off, but we're going out for our morning run and we can't get out of the bedroom.\" Bill told \n\nIt came back in a flash. I put up a ward so Kim couldn't come back in to find out how to make her body go back to its original shape. I other words I wanted her to be stuck with a penis all night. I giggled to myself remembering seeing her standing out side my bedroom door. Yelling for me to let her in and I not hearing a word of it. \n\n\"I guess I have to face her sooner or later.\" I told Bill. I sat up and waved my hands and removed the ward that surrounded my room. As soon as the ward disappeared, Kim came charging into the room. \n\n\"Who do you think you are leaving me with this thing all night. Do you know after it shoots off a couple of time its dam useless?\" Kim said pointing at the lump in her running shorts. \n\n\"Hey your the one that ran out of here with your ass on fire.\" I told her. \n\n\"Did you have to put up that ward to keep me out?\" \n\n\"I was busy I didn't want to be disturbed. Besides you didn't seem to worried about it when you left.\" I told her as I lay back against the headboard. \n\n\"Ok I'm sorry I ran out the way I did, now would you please tell me how to get rid of it. Do you know how much it hurts being trapped in these tight running shorts?\" A smile came to my lips as I rolled over onto my side and said \n\n\"You don't think my ass is fat do you. Wouldn't you just love to take you cock and shove it up my tiny ass.\" \n\n\"Sheri don't start I'm not in the mood. This dam thing has been getting in the way all morning. And that slut Pam did everything she could to get it up for another round. She's insatiable.\" Kim said with a whine to her voice. \n\n\"Do you agree I have a tiny pretty ass?\" I asked \n\n\"Is that what this is all about, your still mad at me for saying you have a fat ass. Well dam girl you have a fine ass now please tell me how to get rid of this dick.\" \n\n\"Do you agree I have a tiny pretty ass?\" I asked as I let a finger slid between my cheeks.\n\n\"Oh god. Yes Sheri you have a tiny pretty ass.\" Kim said then I heard a sigh of relief from her. \"Thank you now what did I say to get rid of it?\" She asked \n\n\"You said. Yes Sheri you have a tiny pretty ass. That's what you have to say to go back to normal.\" \n\n\"Your are a diabolical bitch aren't you? I can't believe your going to make me say that every time I want to fuck someone.\" \n\n\"Hey you don't have to say it as long as you don't say the other part of the spell.\" I told her with a giggle. \n\n\"Oh I will say it because I loved fucking Pam last night. That was a real power trip. Besides you really do have a tiny pretty ass.\" She said as she rubbed her hand on my bottom. Then she tucked her finger to my hole and gave it a rub saying \"I would love to fuck you in your tiny pretty ass sometime. I think you'd love that too.\" I'd have to admit I would love it. And I was sure I'd have her dick up my ass very soon. Kim pulled her finger away and gave me a slap on my bottom and said \n\n\"Well enough of this playing around I have to get moving. If you weren't such a lazy ass you'd be running with us.\" Kim said as she stood up and went for the door. \n\nShe knew how to get to someone. With in fifteen minutes I was dressed in my work out cloths and out in the driveway doing my warm ups. Everyone else had already taken off and I was waiting for them to come around again. As they went passed I took up position next to Mary who was last in line. Kim and Bill was up front while Pam and Jeri were in the middle. Mary was already breathing hard and so was Jeri. \n\nAfter the second go round for me. The third for every one else, Mary and Jeri dropped out. I moved up abreast of Pam. By the time we passed my house for the third time for me. I was already breathing hard and my leg muscles were starting to burn. On the fourth pass Pam and I both dropped out. Kim and Bill kept going, neither of the seem to be winded. \n\nI rested against the car in my drive way as I continued to work my leg muscles so they didn't tighten up while I got my breathing under control. Once I was breathing normally I looked at the car in my driveway. \n\nIt was at least thirty feet long, probably longer seeing my drive way was thirty feet long and this car; really a truck was just a little bit longer. The back end stuck out over the sidewalk. A definite no, no, in this subdivision. It was big and black with four doors and the windows were blacked out. It was one of those SUV's you see all over but this one was a stretched like a limo. From the name plate on the back of the vehicle I found out that it was a Cadillac Escalated. I remember Bill and Gavin talking about one yesterday. So I figured that this was what they were talking about. I then realized that the Porsche and Kim's mustang were gone. \n\nI open the garage door and saw that the viper and my Lexus where also gone. I thought to myself, and so it begins once we were out of the house everything else would just disappear. I went into the house and Pam handed me my first cup of coffee. Pam told me that Jeri and Mary were upstairs showering and getting dressed. After I finished my second cup Bill and Kim came in. After Bill had a bottle of water and was able to breath again I asked \n\n\"Do you know why that land yacht is in our drive way?\" Bill laughed and said \n\n\"I figured why drive two or three cars if we could get away with one big one. I gather you don't like it?\" \n\n\"It's not that I don't like it, it just so big. Can you drive that thing?\" \n\n\"Sure the biggest problem will be finding a parking place for it.\" He told me I figured that getting it to turn a corner would be a problem too, but I didn't say anything. If that's what he wanted then let him have it. \n\nBill and I went up for a shower and to get dressed. Bill decided to drive up as Bill and change to Glenda after we checked in to the hotel. As of yet no one knew what I had arranged for in the way of accommodations. I dressed in a short skirt and a tee shirt, on my feet I wore anklets and tenies. I figured that I was going to do a lot of walking so why not be comfortable. I packed up my make up case while Bill brought down the bags. \n\nWhen I went down stairs I found that Jenny and Ginny were there as well as Sharon and Sal. I was disappointed that Sally hadn't showed up yet. After Bill had gotten everything in the SUV I realized that this was the last time that I would be in this house as an owner. If I ever came here again it will be as a guest. My mind raced over the years that Bill and I had here. They were great years. I remember the first time Bill and I made love in this house, it was on the staircase going upstairs. We were too excited to go up. He took me on the bottom step from behind. We made love in every room including the garage. I felt the tears come to my eyes and I quickly took a handkerchief from my purse and dabbed away the tears. Jenny came over to me and said. \n\n\"I know I went through the same thing a few minutes ago. You start remembering all the great times you had and the next thing your balling like a baby.\" Jenny held me close as I cried. Bill came in just as I was getting myself under control, but as soon as I looked at him I started crying all over again. He knew why I was crying; I cried when we left the apartment we first lived in the same way. He took me from Jenny and held me till I cried myself out. Finally with my make up a total wreck he walked me out of the house for the last time. \n\nBill helped me into the back of the Escalated then he got in the front. Kim Jenny and I sat on the back seat. Jeri Mary and Pam sat on the right seat while Sharon and Sal sat on the left. Every one knew the somber mood I was in so they where quiet as we pulled away. I turned back and looked at the house once more. While I looked I saw Jenny and Sal's car disappear. I turned around and faced forward knowing that everything I cherished in the house was also gone. \n\nAbout ten minutes later I was feeling a lot better and realized I must look a mess. Bill had thoughtfully put my make up case in the seating compartment instead of in back with the luggage. After cleaning off my face and reapplying my make up I turned to Jenny and asked. \n\n\"Well do I look presentable?\" \n\n\"Oh yes now I'm the only one with raccoon eyes.\" Jenny said as she took my make up case from me. \n\nI looked over to Sharon and Sal I noticed that the seat they were sitting on was big enough for four to sit comfortably but they sat almost on top of each other. It seemed that any part that could touch the other person was. Bill and I use to be like that and to an extent we still were. They were in love anyone could see it. I had a feeling that someday soon there will be a wedding. I thought what better place to get married then in the rose garden at the mansion. If they did I would offer the use of it. After another ten minutes of silence I figured that every one was waiting for me to say something. \n\n\"Sal I hear your unemployed.\" I said not knowing where to start. \n\n\"Only till Monday then I start my new job. My old employer didn't want me to stay because he was afraid that I would steal his trade secrets. Little does he know I already have them. If I wanted to sell them to his competitor I could have. I wouldn't but I could. Besides his secrets aren't that secret.\" \n\n\"I hope you enjoy your new job.\" I told him \n\n\"It sounds like it's a good place to work. Mr. Franks seems to know quite a bit about computers. He grilled me on them for almost an hour. I wasn't sure if I would get the job until he called me to offer it. He also told me that the VP in charge of us was extremely educated in the field. Which is a plus, it's always nice to have the man in charge know what your doing.\" \n\n\"So the VP's a he then?\" I asked \n\n\"I guess so. You usually don't find a women VP in the technical field.\" \n\n\"Did Mr. Franks say the VP was a man?\" I asked shooting a look at Jeri. I could see her cringing in the corner of the seat. \n\n\"Well no he didn't I just assumed that the VP was a guy. Mr. Franks never really said if it was a male or a female.\" \n\n\"Won't you be surprised if it was a she and not a he?\" I said with a slight irritation in my voice \n\n\"Sheri don't get me wrong I'm not a male chauvinist. It doesn't matter to me if the VP was a woman in fact I would like it better that way. I work better with women then I do with men, but normally you don't find women in technical fields. And it's not because women can't do the job it's just you never see it.\" \n\nI could see that Sal was trying to work his way out of a hole I just put him in. And he was right I was more the exception then the rule. I really wanted to see how he was at thinking on his feet, I guess you could say I was giving him an interview too. I liked what I saw. He wasn't trying to placate me or to agree with me just to be sociable. I liked that aspect of his personality. I could see he was going to do just fine. I didn't want my managers agreeing with me because I was the VP. I wanted them to feel free to tell me I'm wrong as long as they can back up their statements. Jeff knew this, we had gotten into some shouting matches before but once he proved me wrong or his way was better I would relent. \n\n\"Your right of cause Sal you usually don't find women in the technical field as VP's but the are a few.\" I told him to get him off the hook\n\n\"Well there should be more. I think the business community as a whole would be a lot better off if they did start promoting more women, but they have to know what their over seeing.\" \n\nBoth Kim and Jenny were going to say something and I was afraid that they would tell him I was a VP. My hands had been resting on their thighs through this whole discussion I grabbed a hand full of both thighs to stop them. Thankfully it worked I didn't want Sal to find out I was his boss until Monday. I didn't want him to have any inhibitions this weekend. Once this weekend was over then he would know I knew all about him and I didn't care. \n\n\"I hope it's okay with everyone here I made reservations at Benders for tonight.\" Jenny informed us.\n\n\"Oh good I forgot to make them. I hope you brought something suitable to wear Sal?\" I told him. \n\n\"What is Benders?\" He asked \n\n\"It's a supper club that also has dancing. It's for an exclusive clientele.\" Sharon told him. I could see she was amused by the fact that she knew what kind of club it was. \n\n\"I didn't bring along anything to dressy.\" He told her \n\n\"You forget love I helped you pack. I know you have the right cloths to wear.\" She told him. \n\nTen minutes later I got a call from Bill up front to inform me that we were getting close to the city. I picked up the other phone and called the hotel. Once they found out who I was I was put through almost immediately. I told Stanley that I was almost there, he told me that he would meet us at the house to get us settle in. I then called Bill and gave him the address. \n\n\"I know that area there isn't a hotel there. Their all small mansions.\" Jenny told me as I hung up the in car phone. \n\n\"There wasn't enough room at the hotel so they offered me this instead. They said it would be quite comfortable.\" I told her\n\n\"I would say so if I remember right those places were quite nice. What about room service?\" I told everyone what I had arraigned they all agreed that it sounded perfect. \n\nHalf an hour later Bill pulled into a driveway. Luckily for him it was a half circle drive that emptied back onto the street. The house was three stories tall. It wasn't very wide maybe forty feet but it was quite long taking up most of the lot. When Bill came to a stop both back doors where open from the out side. On Kim's side was a gentleman, elf really, about five ten or so. He gave Kim the once over then he turned back to the car and helped me out. He went to say something till I raised my hand palm out hoping to stop him from saying anything about me being a queen. \n\n\"Mrs. Macon so glad you could join us this weekend. If you would show the bell hops which bags are yours they'll put them in the master suite if that is your wish.\" Stanley told me in a slight English accent. \n\n\"Thank you Stanley it's a pleasure to finally meet you. If you would give us a few moments to look around we'll let you know where to put what bags.\" \n\n\"Of cause Ma'am\" He said to me then to the bellhops he said. \"Boys bring the luggage into the living room while I show Mrs. Macon and her party around.\" \n\nStanley held my arm as we made our way up the stairs. The first floor was the living room in front of the house then we moved to a rather large dinning room. There was a large kitchen in back of the house. There was every appliance you could want. The fridge was industrial size and as Stanley showed us it was stocked with a large assortment of food. Mostly food you could eat cold or pop into the microwave. There was a table that would seat ten.\n\nThe second floor had five bedrooms and the third had three. I decided that I would take the master bedroom and Jenny would have the next largest. Sharon and Sal would take the next largest. Kim and Pam shared a room as well as Jeri and Mary. The smallest of the bedrooms was still larger then any I had at home. So every one was pleased with the choices I made. After I informed them that the bedroom assignments only counted for changing cloths and not where they were going to sleep. \n\nOnce the luggage was in they're respective bedrooms Stanley and the bellhops left. Jenny and I were down in the kitchen munching on some food waiting for Bill to get changed when she asked \n\n\"How come you didn't want Sal to know you were a vice president? I assumed that's why you grabbed my leg in the car.\"\n\n\"I guess you don't know but I'm his boss now he's coming to work for me.\" I told her \n\n\"Really and he doesn't know?\" \n\n\"I didn't want him to know till Monday. I don't want him to be self conscious this weekend.\" \n\nBill came in the kitchen to see if we were ready to leave. We spent the next six hours going from one clothing store to the next buying all matter of cloths for Jeri and Mary. I also purchased quite a few for Pam and Glenda as well as myself. While we stopped to get something to eat at the food court in one of the malls. I walked into a jewelry store to get some earrings for my girls. While I was in there I saw Sal looking at one of the glass cases. I walked over to him and took his arm in mine and said\n\n\"Hey good looking what are you doing here?\" \n\n\"Oh hi there I'm just looking at the rings.\" He said I looked down were he was looking and saw what appeared to be engagement rings and wedding ring sets. He then asked, \"Which one would you like.\" \n\n\"Well it all depends on what its for. Those look like engagement rings. Are you thinking about buying one to wear or to give to someone?\" I asked trying to figure out what was his thinking \n\n\"To give to someone I was thinking of asking Sharon to marry me.\" He said. I was shocked \n\n\"You do realize you two just met. I don't want to sound callus but shouldn't you wait a while?\" \n\n\"Your probably right but I can just feel there something between us. Like she's the one I've been waiting for. I know this is going to sound silly but I feel like she's my soul mate.\" I could hear the sincerity in his words. He really felt this way \n\n\"If you really serious about this and I know where you coming from, I felt the same way about Bill when I met him. I personally like the marquee cut. It's more expensive but it looks so much nicer. There is a formula something about two months pay, but you could go smaller or larger. If she feels the same way about you she'd be happy with a cigar ring.\" I told him. Sal laughed and said \n\n\"Your probably right but I think I'll get a diamond.\" I told him he was making a good choice. \n\nSal picked out a two-caret marquee cut diamond on a yellow gold band. He definitely spent more then two months salary on that ring but it was gorgeous. After he made his purchase and after I made mine he asked me not to say anything. I told him I wouldn't.\n\nOnce we were done shopping for the day we went back to the house to rest and to get changed for dinner. Jeri Pam and Mary saw to it that all the cloths we purchased were now up stairs. Sal and Sharon went up to their room while the rest of us crashed in the living room. Bill sat next to me with his arm around my shoulder. About a half hour later Sal and Sharon came down. If Sharon could get any closer to Sal she would be inside him. I noticed that she was wearing the engagement ring on her left ring finger. \n\n\"Obviously you two must have had one hell of a time up stairs or you have something to tell us.\" Jenny said after looking at the smiles on their faces. ",
        "\"Sal asked me to marry him and I said yes. Well actually it was more like yes yes yes.\" Sharon told us her excitement showed when she said the three yes's. Everyone sat in shock except for Bill and I, because we did much the same thing Bill asked me to marry him three days after we first met. I knew I wanted to be his a wife half an hour after we met. Bill stood up and said \n\n\"I think this calls for a toast. I get some champagne.\" Bill went to the kitchen with Jeri and Pam. When he came back with the glasses he said, \"I hope you will be as happy as Sheri and I. Congratulations.\" We all drank our wine while Sal and Sharon did that arm loop thing before they drank. \n\n\"Sharon Sal. I really hope the best for you but if were going to go to dinner I think we should get ready.\" I told every one. Every one agreed. Bill and I went up to the master bedroom and jumped in the shower. After we soaped each other down and our hands were doing more then washing each other I asked \n\n\"You didn't seem to surprised that Sal asked Sharon to marry him?\" \n\n\"I was expecting it. She told me in the office the other day that if he asked she would say yes. She said there was something between them something almost spiritual between them. They felt so right together. I know that feeling it's the way I always felt about you. If there is such a thing as soul mates we're it.\"\n\n\"I know what you mean. I felt the same way. I wanted you from the moment I first saw you. It wasn't sexual I just wanted to be close to you, to have you touch me. When you came over to me and spoke to me it was like a dream come true. I was weak in the knees and your face spellbound me. I almost didn't say anything back.\" I told him as I wrapped my arms around him and he me \n\n\"I know it took every ounce of courage I could muster just to go over to you. When you touched my hand I felt a spark of magic pass between us it was the most wonderful thing I ever felt. I still feel that spark when ever you touch me.\" Bill then kissed me, when our lips separated I whisper in his ear \n\n\"Bill take me, make love to me, now, right here. Let me feel you inside of me.\" Nothing more needed to be said. As our lips met I could feel his cock swell between us. \n\nHe was as eager as I was for this. He took one of my ass cheeks in each of his hands and he lifted me till his cock slid between my legs. I wrapped my legs around his waist and he poked up at me once and found my opening, then he let my weight do the rest. My own weight forced me down, taking his cock deep into me. A moan of pure pleasure escaped my lips as I bottomed out on him. \n\nBill lifted me and then allowed me to sink back down on him repeatedly. When his arms grew tired of lifting me I used my own legs to lift off him then sink back down. We made slow gentile love till the excitement had build to a fever pitch. Then Bill pushed my back against the wall and started to pound his cock into me. Oh god I loved it when he pounds his thick cock deep into me. His rapid pounding drove me in orgasm. \n\n\"Oh I'm cuming baby you making me cum sweetie. Oh god I needed this so bad. Fuck me hard Bill fuck me deep and hard.\" \n\nBill did his best to give me what I wanted. What I needed, what I was desperate to get. Bill pounded me, fucked me with every thing he had. The shower did little to cool our bodies from the fire that burned with in us. I came twice more as I rode his magnificent cock. His nine-inch thick cock was all that I could think of, all that I cared about. All that I wanted at this moment was that cock pounding in and out of me. \n\n\"Ah that's it baby that's all I can do.\" Bill told me through clinched teeth. \n\n\"Cum baby cum for me. Let me feel your cock cuming.\" I screamed\n\nI felt Bill's cock swell as he groaned. Then I did something I have never done before. I rose up dislodging his cock from me, and then I slid down his body till I was facing his cock. I pulled his cock into my mouth and down my throat in on motion. The move was more then Bill could stand, he fired hot cum deep into my throat. I swallowed and he fired again. I took his balls in my hand and gave them a slight squeeze and He fired again. I then pulled my mouth up to the tip and worked his shaft with my other hand as I continued to squeeze his balls with my other. Bill seemed to cum forever. Even when nothing came out of his cock he seemed to keep cuming. \n\nBill locked his knees and collapsed against the wall. His breathing was coming hard as if he had just run a marathon. I continued to lick and lightly suck his cock till it had shriveled down to a soften state. Then I unwound myself from Bill's legs and allowed him to sink to his knees. Bill took me in his arms and kissed me his tongue searched my mouth for any of his creamy goodness, but I had swallowed it all. \n\n\"Sorry I guess I was a little piggy on that one.\" I told him after he pulled his mouth from me. \n\n\"It's okay I don't think I have the energy to swallow anyway. God that was fantastic. I don't think I ever came so hard or for so long.\" \n\n\"I know you were still cuming even when nothing was coming out. You were terrific.\" I told him as we held each other. \n\n\"So were you babe so were you.\" He told me as the water from the showerhead was raining down on us. Bill and I cuddled for a few minutes more then I said \n\n\"We better get going I'm sure everyone is waiting for us.\" Bill groaned as I started to get up then he got up as well. We both staggered out of the shower and dried off then into the bedroom to get dressed. Bill was exhausted, but I knew he would never forgive himself if he didn't get dressed. I got Bill a new garter belt and stocking that we had bought today. After getting those on him I put a black thong panties on him then I went to put on the matching bra. \n\n\"I was hoping I could wear that new blue corset we bought today.\" He told me \n\n\"You really don't need it but if that's what you want then sure you can wear it.\" I told him. I took off the black thong and replaced it with a blue one to match the corset. The new corset was two sizes smaller then his last one. It fit him snugly but not too tight, then I put on his bra. I stood back and looked at him. He was quite lovely in his scanties. And the feel of his tight body was a turn on. The corset was baby blue satin, which was had bone stays. It was quite expensive but he was worth it. He tried to talk me into getting one too but I refused going for a couple of satin bustier instead. \n\nOnce I had his five-inch spike heels on I told him to get his make up on while I got dressed. I decided on wearing my new red knit cocktail dress that was oh so short. So I put on the red buster with matching garter belt and bra, and red leather thong panties. By this time Bill was done with his make up so I helped him with his dress. It had a high choker style collar. The hem stopped a good four inches from his knee. \n\nI could see that Bill was going to have one of two problems tonight. Either none of the guys that are looking for tranies are going to believe he is one or he's going to have then all over him. Bills legs looked absolutely gorgeous in the heels he was wearing. It's hard to believe that a man's legs would look so feminine. \n\nAfter I finished getting dressed we went down to the living room. Pam Mary and Jeri were all ready there. All three were wearing new dresses I had bought them. Pam's and Mary's where both leather. Pam's was black while Mary's was red. Both were extremely short with deep plunging necklines and extremely tight. Both were wearing five-inch heels. I almost drooled looking at them \n\nJeri was wearing a lavender satin cocktail dress with silver sequins. It had the same choker style collar as Bills dress. Her heels were only four inches high. I walked over to her and said \n\n\"You look lovely. Are you ok with those heels I know your not use to them?\" \n\n\"I think so, but please don't make me change them.\" She said almost begging me. Then to the real girls I said\n\n\"You two look absolutely yummy. Your both so hot so fuckable. I may just stay here with you two.\" Which got blush from both of them. \n\nGinny Jenny and Kim came down together All three were strikingly beautiful in the short dress and hi heels. Bill Ginny and Jeri grouped together leaving the real girls to talk while we waited for Sharon and Sal (hopefully Sally) to come down. Twenty minutes later Sharon and Sally finally made their appearance\n\nAs I had thought Sally was a strikingly beautiful shemale. Due to her slim build and her feminine looks she could pass easily. The only problem was because of her slim build, her Adams apple was visible pronounced. She really needed to wear a full collar like Bill and Jeri wear wearing, But for tonight there wouldn't be that problem. At least no one that saw it would care that it's there. I went to her and introduced myself as if I never saw her before. Which of cause I hadn't. Then I walked her around to everyone and introduced her to all. Sally face was in a constant state of blushing due to all the attention she was getting. But she was also lapping it up. Once introductions were over and Sally was talking to Ginny and Bill Sharon came over to me and said \n\n\"Thanks she was just beside herself upstairs. She really thought everyone was going to make fun of her. I know you all wouldn't, but I had a hell a of a time convincing her of it.\" \n\n\"It was hard for Glenda the first time she went out in public. She's quite beautiful.\" I told her\n\n\"Isn't she, but there's something a miss that I can't put my finger on.\" \n\n\"If I may. I don't mean to criticize but she has a problem with her neck.\" I told Sharon \n\n\"She does I don't see it?\" \n\n\"You might notice that real women don't have an Adam's apple and hers is quite visible, not that anyone would care tonight. You might want to think about that in the future.\" \n\n\"Oh yea I see it now. Is that why Glenda and Jeri are wearing choker style collars?\" \n\n\"That's right theirs aren't as visible as Sally's is but there still there.\" I told her. Then Sharon excused herself and ran back up stairs. A minute or two later she came back down and went over to Sally. I could see she was putting something around her neck. When Sharon came back over to me I could see that Sally now had a two-inch wide choker with a cameo pin attached to it around her neck. The choker affectedly hid Sally's Adam's apple. \n\n\"What do you think?\" Sharon asked \n\n\"Perfect, it goes perfectly with her dress too.\" \n\n\"That's my grandmothers cameo I always carry it with me in case I find a reason to wear it. Thankfully I had the right color choker too.\" \n\nBill asked if we were ready to go. I told him I was mostly because I was starving I only had an apple to eat all day. Twenty minutes later we walked into Benders. And as usual Max made us all feel welcome.\n\n\"Sheri my sweet little girl. It is so good to see you again. And Jenny you always bring me such lovely women. Welcome all of you to my little club. I see you have reservations for dinner tonight so let me show you all to a table.\" Max let us to a table then made sure to hold everyone's chair. Before I sat down I told him I needed to speak to him about the cruise \n\n\"After dinner come to my office and we'll talk. As long as you're not going to cancel on me.\" He said in almost a whisper.\n\n\"Oh I wouldn't dream of it I'm looking forward to it\" I said loud enough so that other around me could hear. I could almost see the relief on his face\n\n\"Oh very good so eat and enjoy yourselves and tonight we have a very good band so stay for some dancing.\" Max told us before he left. \n\nWe had a superb dinner as usual for Bender's. We had four bottles of champagne, two to toast Sally's coming out and two to toast Sally and Sharon's engagement. When dinner was over Jenny and I went to find Max. Before leaving the table I got a firm commitment from Kim and Sharon that they also wanted to go on the cruise. Sally wanted to but was afraid that with her knew job she wouldn't be able to. I knew she would so I planed on her coming as well. I figured that Beth and Julie Ann would want to come as well and most likely Janie and Kandy. So I needed at least five more suites if it was possible. \n\nWe found Max at the reception desk and he escorted us to his office. Once inside he asked, \"What can Max do for you lovely ladies?\" \n\n\"How is the booking going for the cruise?\" I asked \n\n\"We're not quite full but I'm really close.\" Max told me which could mean just about anything. \n\n\"I need a few more rooms, suites really if they are available, preferable close to me.\" Max hemmed and hawed till I told him that I was willing to pay for those. I knew he thought I was looking for a freebie, which I wasn't \n\n\"I'm sure I can do something for you let me look.\" Max pulled out a book that contained a list of names with numbers to the right of them. I learned later that the numbers were room numbers and the names next to them were the names of the party that reserve them. \n\n\"How many were you looking for?\" \n\n\"I need five more if possible.\" I told him which brought a smile to his face. \n\n\"I just so happen to have five suites left. Should I put your name down for them?\" I told him he could as I handed him my credit card. He took it giving it a suspicious look which by this time I had learned meant he had not hear of the bank on the card. Then he asked \n\n\"Are you going to pay for all of these?\" \n\n\"Yes. Including their bar bills and port charges and all gratuities.\" Max took down the number on the card and the name of the bank then handed it back to me. \n\n\"Is there anything else I can do?\" I told him no then he asked Jenny if she needed anything and she said no. When he was walking us out to the dance hall he said to me \"You know you sure have changed in the last few weeks. You not the same innocent little girl who came in here the first time.\" \n\n\"Is that a good thing or a bad thing?\" I asked \n\n\"I liked you the way you were, but I also like you the way you are. You're very confident in yourself but your still a sweet girl. So its neither bad nor good just different.\" I grabbed his jacket collar and pulled him down to me and kissed him on the lips. \n\n\"Thank you for likeing me.\" I told him after he asked why I kissed him. \n\nJenny and I went to the dance hall while Max went back to the reception desk. We found Kim sitting by herself. I sat down next to her and Jenny sat down next to me. I saw Mary and Pam were on the dance floor with partners who couldn't keep their hands of my girl's bottoms. Sharon and Sally were dancing together. Bill and Jeri were standing by another table talking to a few of the men sitting there. As I watched Bill and Jeri I could see they were flirting with men there. I could tell by the way they stood or when they laughed at something they kept touching one of the men. I turned to Kim and asked \n\n\"How come you're not dancing?\" \n\n\"I just sat down we figured that one of us should stay at the table to watch our purses. Ginny was doing it and she had to go to the bathroom.\" Sharon sat down at the table while Sally excused herself to go to the bathroom. Once Sally was gone Sharon asked \n\n\"Are we going to stay here long?\" \n\n\"I thought we'd stay a couple of hours why doesn't Sally like it?\" I said \n\n\"Oh Sally likes it. She says it's so much better the club we met in, but were kind of, well how can I put this.\" \n\n\"Your kind of horny. That 's how you put it.\" Jenny said to her \n\n\"Well yea we are and Sally said she wants to pay off her bet to you so I can watch. And I'm really excited about watching her do it.\" Jenny and I laughed because we were the same way the first time our husbands suck off another man. \n\nWhile Jenny and I told her how exciting it was to watch I heard a disturbance out on the dance floor I looked up to see Pam making a beeline to our table with some guy in hot pursuit. As they got closer I could hear the guy saying something about just one more dance that was all he needed. Kim and I stood up and Pam ducked in behind us with the guy trapped on the other side. I noticed that he had a hard on and there was a wet spot on his slacks. The guy was trying to get around Kim who was doing a great job of blocking him. \n\n\"Look Mister she doesn't want to dance with you any more. So why don't you go find someone else.\" I told him \n\n\"Look why don't you mind your own business and stay out of mine.\" The guy said in a hate full tone. \n\n\"She is my business so leave her alone.\" I told him \n\n\"Look bitch.\" Was all that came out of his mouth before Kim had him by the throat.\n\n\"If I was you I'd be real careful about who you calling a bitch asshole. You might notice your starting to have trouble breathing right about now. Now I am going to let you go and your going to apologize to my friend here. Then you going to turn around and walk away. If you don't I'm going to break you. Do you understand? Blink once if you do.\" The guy blinked once and Kim released him\n\n\"I'm sorry I call you a bitch.\" He said after he sucked in a breath of air. He turned around and walked right into Max. Max grabbed him and said \n\n\"Are you causing trouble here. I told you once before about not making trouble here. Now it's time to leave.\" Max apologized for the disturbance and half carried and half walk the guy out of the hall. The only problem was Max chose a door that only he could fit though. The guy wound up walking into the wall. Of cause Max told the guy he was sorry for not realizing the door way was to small for the both of them. I turned to Pam after Max was gone \n\n\"Are you ok sweetie?\" \n\n\"Yes he didn't try to hurt me, it was just gross what he was doing. I've had guys get hard on's before while dancing with them, it just happens you know. But this guy was humping me on the dance floor. I told him to stop several times and I even tried to walk away but he held me there. It was just so demeaning.\" I put my arm around her and hugged her to me. \n\n\"I'm sorry sweetie do you want to leave now?\" I asked \n\n\"Well only if everyone else does I don't want to be a party pooper.\" \n\n\"The party will start when we all get back to were we're staying. How about every one else ready to go back and have some fun.\" I asked. All the others had returned to the table during the incident. Everyone agreed to leave. \n\nAs we were leaving I noticed that the poster that was out in the lobby about the cruise had written on it in magic marker the words sold out. Max was sorry to see us go but understood that we weren't in the mood to dance any longer. He walked us out to our car just so we didn't meet with any trouble. Twenty minutes later we were back at the mansion. We all agreed that we would take showers and meet back in the living room in tap pants and camisoles. \n\nTwenty minutes later I was sitting on one of the couches with Kim on one side of me and Jenny on the other. Pam Mary and Jeri were sitting on the floor in front of us Bill and Ginny were on the other couch Jenny Kim and I were kissing and running our hands all over each other. Jeri Pam and Mary were doing much the same Bill and Ginny were mostly watching us while Sharon and Sally were heavy into each other. \n\nAfter a half an hour of this heavy petting I was ready to take Jenny or Kim or both of them up to my bedroom. Bill and Ginny were now making out and each had the other's cock in there hands. Jeri was sitting between Pam and Mary each had one of Jeri nipples in their mouth and was nursing like babies. From Sally I heard \n\n\"My god, look at the size of that thing.\" I realized that Sally had finally seen what Bill had between his legs. Poor Bill turned beet red with embarrassment. One thing bad about having a big cock is every one makes a big deal about it. \n\n\"It is big isn't it and it feels so good inside you.\" Sharon was saying. I could see the lust in her eyes. ",
        "\"It's hard to believe she can get inside any one.\" Sally told her \n\n\"She can and she's so gentile you'll love every moment. And pray she doesn't stop.\" Sharon said and you could tell she was talking from experience. Then she asked \"Are you ready to payoff your bet. Will you give me my present? \n\nI could see Sally swallow, but I could also see that look in her eyes. The look that said I don't think I can, but I would sure like to try. I wasn't about to say anything I knew Sharon wanted to take control of the situation and she wanted to be come the dominate force in Sally's life. It was up to Sally to accept or reject that force. \n\n\"Come on baby please for me.\" Sharon was almost begging. \n\n\"Is it okay with you Glenda? I mean do you want me to.\" Sally asked. Glenda just nodded her head. \n\n\"Come on honey I'll help you.\" Sharon said taking Sally's hand\n\nEveryone else had stopped what they were doing as Sally moved to kneel in front of Bill's legs. Bill moved his bottom out to the edge of the sofa to give Sally and Sharon better access to his tool. Sharon pumped Bill's cock a couple of times and glob of pre-cum came out of the tip on each pump. Then Sharon smeared the pre-cum around the head with her finger. \n\n\"Here baby tasted it. Glenda's pre-cum tastes really good.\" Sharon told Sally as she pointed the head at Sally's mouth. Sally dipped her head and took Bill's cock head into her mouth. We watched as she swirled her tongue around the head the pulled her mouth off with a pop. \n\n\"Are you sure your ok with this?\" Sally asked Sharon you could see the fear in his eyes that she might reject him because he was a cocksucker.\n\n\"Oh God yes It's the sexiest thing I ever watched.\" \n\nSally took Bill's cock in her mouth again and started working his mouth up and down. I could see he wasn't use to anything that big. And I had a strong suspicion he wasn't that experienced in the art of fellatio. But he was giving it everything he could. He just wasn't getting it wet enough. I wasn't going to tell him he was doing it wrong unless I was asked. I watched as Sharon's hand dipped into her panties and started to rub her pussy. \n\nThe sexiness of the situation was getting to me as I watched. Feeling the need to do something I slipped my hand down Jenny's panty and slid one finger between her pussy lips. Jenny gave a slight moan and stretched out like a cat that just had her tummy scratched. My other hand did the same to Kim who jumped in surprise then settled down with her head on my shoulder. \n\nI continued to diddle Kim and Jenny while Pam, thinking that sucking cock was a good thing. Pulled Jeri's cock out of her panties and started to give Jeri a first rate blow job. Mary had maneuvered Jeri's head so that now Jeri was sucking on her nipple. \n\nI watched Sally suck Bill's cock for about ten minutes. She still had only got two or three inches into her mouth and looked like she was in pain. Her eyes were shut tight and she didn't look like she was having any fun. Bill didn't look like he was enjoying it either. I had enough. I stood and said \n\n\"If it's ok with everyone I going to bed. We've had a long day and we still have a lot of shopping to do tomorrow.\" I turned to Kim and Jenny and said \"Ladies would you like to join me?\" \n\nThey looked at each other then nodded their heads and stood up. We kissed everyone good night. I told Mary Pam and Jeri they were on their own to night and of cause they had my permission to go with who ever they wanted to. Jenny Kim and I went up to the master bedroom. With in minutes we were striped down and kissing each other when Kim asked \n\n\"So how come you were in such a hurry to leave?\" \n\n\"I wanted to get you two alone.\" I lied \n\n\"Bullshit and how could you lie like that?\" Jenny asked \n\n\"It's not a lie it's just a half lie. I really did want to get you two up here, but it's not the reason I left so quickly.\" \n\n\"Ok why did you leave so quickly? Didn't you like the show Sally was putting on?\" Jenny asked \n\n\"No she didn't look like she was enjoying it and as far as a show goes. Any of my girls can out perform what Sally was doing. I mean if your not going to do it right why bother.\" \n\n\"Well maybe she wasn't shown how to do it. Not everyone has a master cocksucker on hand to teach them like your girls did.\" Kim told me \n\n\"Your right but it doesn't mean I have to sit and watch it.\" I told her \n\n\"Maybe you should teach her how to do it right like you taught your girls.\" Kim said \n\n\"Well for one I didn't teach Mary, she taught herself. The slut said, it was easy I just kept taking it in till there was no more left.\" I said mimicking Mary, which had both Jenny and Kim laughing hysterically. When they calmed down I continued. \"And secondly it's not my place to tell Sally that she's doing it all wrong. If Sharon want to take control of her and Sally wants her to then she's going to have to tell Sally she doing it all wrong.\" \n\n\"Maybe Sharon doesn't know how to give a good blow job either. Some of us aren't natural born cocksucker's you know. You know I don't care to do it. How about you Kim?\" \n\n\"I like doing it, I just haven't had the practice. I'm like Sheri, if I'm going to do it then I want to be the best. I want the person I do it with to compare everyone else they do it with to me. I want them to say you were good but not near as good as Kim.\" Kim told her \n\n\"So you want to be remember forever?\" Jenny asked \n\n\"Exactly I want to be remember for as long as that person lives. They may not like me anymore but I still want them to say she was a bitch but she was the best. How about you Sher.\" \n\n\"I couldn't have said any better.\" I told them then to Kim I asked. \"Which one of us would make Jenny cum harder?\" Kim's smile was so big and bright you could have seen it back home. \n\n\"I don't know lets let Jenny decide.\" We both smile and turned toward Jenny. Jenny threw up her hands and said \n\n\"Woe girls. If you two want to make love to me then that's okay, But if you to want a competition then get yourselves another victim. I don't think I want to get in the middle of that.\" Jenny really looked scared. I laughed and said \n\n\"Jenny love I could never do that to you. Besides for me it's not an ego thing. As a Nymph I want to give you what you want, not what I want. It's like my magic I could never give you another head because you wouldn't want one. I did give you a dick because you wanted one. Like I gave Jim a pussy he really want to know what's it like to be a real girl. But he still wants to be husband to you.\" \n\n\"Is that why you haven't even offered to give Pam a cock?\" Jenny asked \n\n\"Like I told you before she's to submissive to use it and she doesn't want it. So I can't give her one.\" \n\n\"What I want is to make love to both of you without dying in the process.\" Jenny told us \n\n\"Your wish is my command my sweet lady.\" I told her then I kissed her. \n\nWhile I kissed Jenny, Kim started to kiss Jenny's breasts. Jenny took a hold of one of my breast and started to rub it against her own. Our nipples met and our rings clicked together. Jenny started to moan into my mouth as Kim took a nipple it her mouth. I could feel Jenny tremble in my arms \n\nI released her mouth and moved down to take the other nipple. I sucked hard on the hard rubbery nub. Then my tongue wrapped around the nipple ring and pulled. I pulled as hard as my tongue could. A moan escaped Jenny's mouth as her back arched pushing her breast into my face. My hand ran down her tummy to the cleft of her legs, only to be stopped short from penetrating her by Kim's hand. I looked over to Kim to see her smile at me with a mouth full of Jenny's other tit. \n\nThis wasn't about a competition between Kim and me it was about the two of us giving pleasure to Jenny. I nodded my head toward Jenny's pussy. Kim looked at me with a question in her eyes. I nodded again for her to take the lead. Kim smiled understanding what I wanted her to do. \n\nKim released Jenny nipple with a pop causing Jenny to groan out loud and swear at Kim. I grabbed the ring on the exposed nipple and gave it a yank. Jenny swore again as the pressure returned to her nipple. \n\nKim had settled between Jenny's legs and started to use her tongue on Jenny's pussy. Jenny trembled again and again as Kim assaulted her. My mouth was starting to hurt from the pressure I was putting on Jenny's nipple. I released Jenny's nipple and quickly grabbed it with my fingers. Sending a shock though Jenny.\n\n\"Oh fuck god that felt so good and Kim's mouth is doing wonders on my pussy.\" \n\n\"Does Kim have her tongue ring in?\" I asked \n\n\"Oh god yes that thing feels so fucking good. She must have the diamond in, it feels like she's going to cut my clitty.\" She said as another tremble passed though her. Her breathing was short and shallow I knew she was going to cum soon. I continued to manipulate her nipple rings. Pulling them up away from her body and then letting them snap back down. Then I would twist them in different directions and Jenny loved every twist and turn. \n\n\"Sheri sit on my face let me eat you like Kim is doing to me.\" Jenny said \n\n\"No love this is all for you. I want you to cum for us I want you screaming when you cum on Kim's mouth.\" I told her Jenny groaned on my words then her backed arched off the bed as she pushed her pussy into Kim face. \n\n\"Oh god yes suck me Kim suck my pussy. Yes yes yes fuck yes.\" She screamed as she came. \n\nKim was having a hell of a time keeping her mouth glue to Jenny while she thrashed about, turning from side to side. As she turned one nipple got pulled harder then the other. Wave after wave of orgasms past over her, causing Jenny to jerk and thrust her pussy either into Kim's face or away from it. She seemed to cum for hours but could only be a few minutes. Finally Jenny laid silent excepted for little whimpers as small waves of her orgasm pasted over her. I released her nipple ring and Kim moved from between her legs. She also was panting for breath. \n\nWhen Kim lay down on the other side of me I kissed her on the mouth smelling Jenny's pussy cream on the face. My mouth moved to her cheek and I gave it a lick, I could tell that Kim didn't care for that. I moved down to her neck kissed and licked all over before moving down to her amble breasts. One would look at the way they laid on her chest, almost perfect cone shapes, and swear Kim had implants. But I knew they were all hers and they would stay that way for quite a few years, till finally they will begin to sag. \n\nI took one of those perfect D cup breast in my hand and gave it a squeeze. They were pliable and soft but quite firm. I kissed that breast and it was warm and soft and free of any hair what so ever. Goose bumps rose to the surface where my lips had touched. Kim was making little whimpering noise while I kissed and licked her flesh. When I covered every inch of flesh with my lips my tongue licked at her nipple. That big fat nipple responded to the slightest touch of my tongue. It grew hard and tight begging to be sucked, chewed or bitten. But I did neither, I released my grasp of it and turned to the next. Kim moaned in disappointment. \n\nI did the same slow spiral, working my way up to the very top of her breast. My mind wavered whether to take Kim's hard rubbery nipple into my mouth and suck it to my hearts delight or once again switch back to the other breast and continue to prolong Kim's sweet agony. The slight hesitation caused Kim to make up my mind for me. She grabbed my hair from the back and said \n\n\"If you tease me anymore slut I going to have to hurt you.\" she then pushed my mouth down onto her nipple and held me there \n\nWith my mind made up I attacked her nipple with a vengeance. I sucked chewed and bit her nipple till it stood up hard and cherry red. Kim was moaning and swearing telling me I was a dirty nipple-sucking slut. When she released my hair I quickly moved to the other nipple and gave it the same treatment. Kim loved my devotion I paid to my work of giving her pleasure. Back and forth I move from one cherry red nipple to the other. Kim came twice while I pleasure her nipples. After her second orgasm she pulled my head from her nipple and said \n\n\"I have something else I want you to suck on and no playing around. I want to cum and cum quickly.\" She then gave me a push down toward her pussy. \n\nTo my surprise I found she had spoken the word of her spell and now I was looking at her eight inch cock standing hard and ready. I didn't hear her say the words, but she must have. The condition of the spell is to say the words out loud. I must have missed it in my frenzy to please her. \n\nI grasped Kim firm cock in my hand and gave it a couple of pumps. Pre-cum leaked out of the tip and dribbled down the shaft. I took the head in my mouth and ran my tongue around the tip, licking off the gooey pre-cum. Next I ran my tongue down and up the shaft to get it wet and slippery. \n\nOnce it was slick with my spit I took it back into my mouth. My lips slid down the shaft till it hit the back of my throat. My mouth pumped up and down on that hot piece of man meat till I had Kim moaning and shaking. Her hands gripped the bed sheets in a vain attempt to hold off from cuming. I knew she was close, closer then she thought she was. \n\nI felt the swell of her cock head and my mouth plunge down taking her all the way in to my throat. \n\n\"Oh fuck god dam girl.\" She screamed \n\nThen I swallowed once, twice and on the third time she came, she came hard into my throat. I swallowed again and again as each jet of hot creamy cum was shot into my throat. I never moved my head I just continued to swallow as she came. \n\nWhen she stopped cuming and I was starting to feel light headed I pulled my mouth off her and sucked in a deep breath. Then I wrapped my lips around her cock head once more and sucked it pulling out any remaining cum still in her cock. I continued to suck her cock trying to keep it hard, but Kim pulled my head from it and said. \n\n\"That's enough it's starting to hurt.\" \n\n\"Well who gives a better blow job, Sheri or Pam?\" Jenny asked lying on her side as she rubbed her hand over Kim's tight belly. \n\n\"Sheri by far. I can't believe you kept it in your throat the whole time I was cuming. How could you breath like that?\" Kim asked\n\n\"I can only breath when I'm not swallowing. And only short breaths. I did get light headed toward the end.\" I told her as I stroked her smooth legs. \n\nKim opened her arms to me and I moved to lay down in them resting my head on her chest. Jenny moved in close behind me and laid her arms on my side stroking my leg and hip. I was just wondering where this was going to lead. If we were done for the night I wanted to take a shower. I hoped we weren't done I still wanted to enjoy both these women. \n\n\"You know Jen, Sheri like's to be my pussy slut when were alone in bed?\" Kim told her I could feel the heat rise to my face. \n\n\"She likes to be submissive to me too when we're alone. She always let's me take the lead.\" Jenny told her. I had the feeling I was going to be in the middle of these two before long. \n\n\"I'm so glad she invited us both into her bed tonight. I was wondering how we were going to implement your plan.\" Kim said I sat up and asked what plan\n\n\"Jenny and I wanted to both fuck you at the same time we just did know how to get you alone and you went and invited us. Was that your nymph's desire to please taking over.\" Kim said \n\n\"It might be all I know is I want both of you tonight.\" I told then truthfully. It might have had to do with their wish to be with me. I really didn't care I just wanted to be with them and I was. \n\n\"I think it's about time Sheri finds out just how much pleasure she can get from the presents she gave us.\" Kim said as I watched her cock grow. \n\n\"Yes I think we should. I want to fuck like a man.\" Jenny said, the last was her spell words. I looked down and saw Jenny was now sporting a similar eight-inch cock like Kim had it was also hard and ready. \n\nI took both hard cocks in my hand and started to stroke them. They were identical in every way neither was larger then the other or fatter. The only difference was that Jenny was smaller in stature then Kim was so hers looked bigger. Jenny shimmed up the bed till her back could rest on the headboard. \n\n\"Now let me feel that wonderful mouth around my dick.\" Jenny told me as I laid down between Jenny's legs and took her cock in my mouth. \n\n\"Oh no you don't. Up on your knees so I can get my dick in that pussy of yours. I keep hearing from Ginny Bill and Jeri what a fantastic fuck you are.\" Kim ordered. \n\n\"Oh she is. I finger myself every time I think about when I fucked her.\" Jenny told Kim. \n\nI was starting to feel like toy to these two. But I didn't care in the least. I was giving them pleasure and that was my main role in life. A nymph's one purpose is to give pleasure and she receives pleasure when she gives it. I got on my hands and knees never taking Jenny's cock out of my mouth. I then felt the bed move as Kim got into position behind me. My mouth was running up and down Jenny's cock while I waited for Kim to slide into my hot wet pussy.\n\nWhen I felt the tip pierce the mouth of my pussy I pushed back taking half Kim length into me. I moaned around Jenny's cock as some of my saliva dripped out of my mouth and down her shaft. Kim grabbed my hips and pulled at the same time she pushed her cock all the way into me. I moaned again around a Jenny's cock.\n\n\"God what a wonderful cunt this bitch is got. So hot and wet and oh so tight.\" Kim said as she bottom out. \n\nMy pussy muscles started to work her cock like a milk machine would do to a cow's udder. My mouth sunk down on to Jenny's cock taking in every inch of her. Jenny groaned like she was in pain when I swallowed. \n\n\"Hold on Jen, let's show this slut what it like to get fucked by two cocks.\" Kim told her. If my mouth wasn't so filled with cock I would have laughed. Kim's never heard about my times in a biker bar during my metaphase. \n\nKim was now slowly thrusting her cock in and out of my pussy. I could feel my juices running down my leg every time she withdrew from me. Jenny was panting and thrusting her cock into my mouth. After a few minutes of this Kim said something that sounded like switch. Then the next moment I was kneeling alone on the bed feeling used and empty. The next moment I was staring at Kim's cock covered in my pussy juices. I didn't even think I sucked her cock into my mouth and took her down to the bottom. At the same time I felt Jenny shove her cock back into my pussy. \n\nKim didn't let me control the action of sucking her cock. She took my head in her hands and started to fuck my mouth like she had just been doing to my pussy. Normally I don't care for this sort of treatment, but I really didn't have much say so this time. \n\n\"God what a tight pussy she has. You would think with getting fucked from Bill on a regular basis she'd have a cunt a mile wide.\" Jenny said. If that statement was meant to humiliate me it didn't, my ego swelled with pride. \n\nJenny reached around me and pinched my clit between her fingers. An orgasm rip through me leaving me stunned, I couldn't think or move as I shook with its intensity. Kim and Jenny never stopped there thrusting which made my orgasm last even longer. My mouth and pussy continued to work their cocks as if it was automatic. \n\nThey switched again. When Jenny pointed her pussy coated cock at my lips I gobbled it down as if my life depended on it. When Kim shoved her cock in my pussy I pushed back taking it all the way. \n\n\"God what a cock hungry slut she is. She's cuming like race horse and still wants more.\" Kim said. I realized they were talking to break the concentration on the pleasure my body was giving them. They wanted to last and I wanted them to last as well. ",
        "After my first orgasm hit me it seemed I was having them every few seconds. How long this all lasted I have no idea. All I know is I was cuming and they kept switching. I could tell they were getting tired and close to cuming when they started switching sooner. The last time Kim was in my mouth I heard her say\n\n\"The next time we switch I going to take your ass. Do you want me to fuck your tiny pretty ass?\" She said in a mocking tone. I knew it was because I made her say I have one to release her spell. She pulled her dick from my mouth and I said \n\n\"Yes please take my ass. Please fuck my ass and cum in it.\" \n\nKim shoved her cock back in my mouth one last time and pumped it in and out of my throat. Then she said switch and pulled away from me. The switch this time took longer because Kim had gone over to my makeup case and got the tube of anal lube I always seem to carry. \n\n\"You might want to wait till I get my cock up this sluts ass before you stick your' in her mouth. You wouldn't want her to bite it off.\" Kim told Jenny. \n\n\"I don't know, she's had Bill's cock up her ass and loved it.\" Jenny told her \n\nI was in my total submissive role and didn't say anything. I know I enjoyed Bill's and Cheryl's cock up me but they put it in real slow I just hoped Kim did it the same way. Kim got behind me and I felt her finger invaded my bottom. They felt slick so I figured she was greasing me up, which I was glad of it. \n\nThen I felt her cock at my entrance, I started to shake slightly whether from fear or anticipation I couldn't say. I wanted her to fuck my ass but I didn't want her to hurt me. Kim must have realized that she could hurt me so she slowly eased her cock into my ass. There was a slight bit of pain but once the head of Kim's cock was in me only pure pleasure remained. \n\n\"Ok slut let's see what it's like to fuck this tiny pretty ass of yours.\" Kim said taunting me. \n\nI pushed back taking in about half of her cock and groaned at the wonderful feeling I got. Kim pulled back and shoved that half back in and an inch more. I moaned again. Yes I really did love getting fucked up the ass. Jenny's magical cock was hovering near my mouth so I swallowed it down to get her back in the action. \n\nWith in moments both girls were riding my ass and mouth at record speed trying to get themselves off. I was doing my best to help them in that effort. I just hopped they lasted a long time. My wish was not to come this \\night. Jenny's hips started to lose the rhythm she had, which told me she was so close to filling my mouth with cum. I started to suck harder and swallowed even more. I felt the head of her dick swell in my throat. \n\n\"Oh good what a fucking mouth she has. I can't take it any more. I cuming.\" The last was a scream as cum shoot out of her cock and into my mouth. I swallowed every drop of cum that came out of her cock. It was hot and creamy and there seemed to be so much of it. Jenny pulled her spent cock from my mouth and collapsed on to the bed. With her gone I concentrated on Kim fucking my sweet ass. \n\n\"Oh god your ass hole is so fucking tight. And the way you're working it going to make me shoot a load any second.\" Kim yelled \n\nI knew she was close I could fell her thrusts become jerky. Kim pulled me up so I was knelling with out my hands touching the bed. She started to kiss my back and neck between bits. Kim reached down between my legs and took my clit between her fingers and twisted my clit around. It was like she threw a switch and caused me to cum. The sparks that shoot through my eyes as my orgasm enveloped my whole body blinded me. If Kim wasn't holding me I would have collapsed. My ass muscles clamped down on Kim so hard I pulled her cum from her. Kim screamed in my ear she was cuming as I felt her cock inject her cum deep in my bowels. Kim lost her footing and we collapsed on the bed next to Jenny. \n\nWe laid there, Kim still tightly behind me and Jenny along side me. Our breathing was quick and shallow. Kim's cock was still in my ass but it was loosing its firmness. I knew it wouldn't be long till it slid out and lay limp between her legs. With in seconds it did just that I was left feeling empty and well used, but in a good way I had given pleasure to my friends and they gave me pleasure in return. Jenny rolled over onto her side facing me and wrapped her arm around us. She started to kiss my face and Kim kissed my back. A minute or two later Kim said \n\n\"Yes Sheri you have a tiny pretty ass. And I mean that in all sincerity. I've never experienced anything that wonderful I all my life. Pam's ass didn't feel that good.\" Kim then rolled onto her back \n\nI followed suit as Jenny rolled over as well. There we were three women totally exhausted, completely content with life and completely sexually satisfied. We lay there till we recovered some of our energy, till I started to feel her cum leak out of me. I sat up and said.\n\n\"Well ready to go again?\" I really wasn't I thought that would get a rise out of them.\n\n\"Are you kidding I'm exhausted. There's no way I'm going to do that again.\" Jenny said \n\n\"Count me out. I'm done I know I can get another hard on if I call it back, but I'm finished. You made me walk around all day then made me fuck you till I couldn't see any more. Now you want to do it again. You are an insatiable whore aren't you?\" Kim rattled on I giggled and said \n\n\"I didn't make you fuck me, you did that on your own. And yes I'm insatiable if you want me to be. I was just giving you all a hard time. I'm really done in. I need a shower to get this cum off and out of me and then it's time for sleep.\" \n\nKim and Jenny both agreed with me that a shower was a good idea, but that was about all. After the shower, which I tried very hard to get all Kim's cum out of me and to which I knew I didn't. I would still some leak out of me over night. We went to bed. What a sight we must have made three beautifully women naked and asleep in each other's arms. \n\nMy sleep was interrupted by my appearance in the Renewal. I almost groaned when I realized where I was standing. Then I remembered that I had made arrangements to hold court on Fridays. Subconsciously I must have remembered this and came here. Realizing I had no choice but to go, I flew over to the clearing that would hold my court. \n\nWhen I arrived there was very few people there. My Sergeant at arms told me that only one person had a problem that she need to speak to me about and two other wish to offer their services. I took the two who wish to make an offer first. After dealing with them quickly, but politely. I told Efin to bring forth the one who had the problem. \n\nA small nymph approached my throne and went to her knees. She was tiny for a nymph just over three feet tall. But what was really strange was her skin color. She was mostly brown but she had streaks of dark green and blacks of different shades. Her ears where quite pointy unlike my own which were pointy but more rounded. You would not mistake this girl for human. I had her stand and asked what her problem was and with whom. She seemed timid and shy. \n\n\"You may not know this but I'm a wood nymph. Recently the woods where I live have been getting very busy. A bunch of sprites and a band of gnomes have moved into my woods. My queen these woods are mine they always have been. They were my mother's before me and hers before her.\" She stopped her self and then went back to her original problem \n\n\"Now the gnomes I don't mind. Their fun to have around and their cleaning up the woods. I do my best, but it's lot of work for one nymph. Anyway they told me that you are going to live in the big rock in the clearing of my woods.\" \n\nI tried to figure out what she was talking about. The big rock she was talking about must be the mansion and the wood surrounding it must be the woods she refereed to as hers. When I had this all figured out She continued \n\n\"My question is do I have to move and give up my home?\" She asked you could see the relief on her face now that she had gotten all that out. I asked her name and she told me Dema.\n\n\"Well Dema I didn't know you lived in the woods. If I had then I would have talked to you first about moving into the estate. Do you have to move, can't we share to woods. I won't be in them much so you won't have to worry about us.\" I could see her sprits lift at my words. \n\n\"Danella and I were hopping we could stay. We were just hopping you wouldn't mind that we're there.\" \n\n\"Of cause you can stay. Who's Danella?\" I asked \n\n\"Danella lives in the pond in the woods. She said that I shouldn't tell you we were there, She said if you didn't know we were there then you couldn't ask us to leave.\" \n\n\"You said Danella lives in the pond. is she a water nymph?\" Dema nodded her head. \"You tell Danella that you both can stay where you are and I'll try not to disturb you. Is it ok if the gnomes stay too?\" \n\n\"Oh yes they throw some really fun parties. if I may I have one other question.\" I asked what it was. \"The other day you came to look at the rock and I saw a few human males with you. Are they your mating stock or are they free to mate with Danella and I?\" That threw me for a loop. I asked her to tell me what she had in mind. \n\n\"My mother and Danella's mother had to leave the woods so they could find male humans to mate with, when it was time to have us. It's getting time for Danella and I to have offspring. We're not to keen on leaving the woods to mate and we were wondering if we could use your males to mate with.\" \n\n\"Do you only mate to have young?\" I asked \n\n\"Normally no, but Danella and I don't like to leave the woods. So we've learned to pleasure each other. To have young ones we will need human males, but we won't need them much. Just till we're with child then we won't bother them anymore.\" I just about laughed the way she was putting it.\n\n\"Dema can you and Danella come to the rock where I'll be living?\" She told me she could \"Then come and meet my males and if you like them and they like you. Then you can mate with them. As often as you and the male would like.\" I could see she really liked this. \n\n\"Thank you my Queen. I'll tell Danella that you friendly and you want to meet her. She's kind of shy around new people. But once she gets to know you she's really a good person.\" We said our good byes and she disappeared. \n\nOnce I was done with Dema I told Efin that I will see him next week and Efin told me he didn't think I would get many problems for a while. Because every one was still new to their powers but I should keep the weekly courts just in case. I agreed with him then I disappeared to wake once more in the bed that I was sharing with Jenny and Kim.\n\nI woke up the next morning around ten o'clock. Jenny was still lying next to me, but Kim was already up and gone. When I stretched Jenny jumped with a start. \n\n\"I'm sorry I did mean to wake you.\" I told her\n\n\"You didn't. I've been lying here waiting for you to wake up. I enjoyed feeling you next to me.\" Jenny told me I told her I enjoyed her next to me too. Then she said \n\n\"I want to talk to you about last night. Are you ok with what happen? I know we came on a little strong, I'm afraid we may have over done it.\" \n\n\"No I loved it. I have no problems with what happen and any time you all want to do it again you just do it. I loved being used like that.\" Jenny went to kiss me but I pulled away. \n\n\"Let me shower and brush my teeth first then we can kiss. It's nothing about you or what we did, I just have to be clean.\" I told her. She looked suspicious but followed me into the bathroom anyway. \n\nWe brushed our teeth while the shower was heating up. When it was hot we jumped in and quickly washed off. Then I pulled her to me and said \n\n\"Now you can kiss me.\" We kissed like to honeymooners till the shower started turning cold. \n\n\"Your serious about the shower thing aren't you?\" She asked as we exited the shower \n\n\"Yes I have this fear that my lover will reject me because I smell bad. I know it's weird, but that's just me.\" I told her \n\n\"I never noticed that before?\" \n\n\"Any time we slept together I was always up and showered before you were up. It has nothing to do with you or anyone else. It's just me.\" \n\n\"You must have one hell of a water bill.\" Jenny said jokingly \n\n\"After we moved into our house Bill told me I had to cut down on my showers because our bill was to high. I did, but I wouldn't let Bill touch me unless I had a shower first, Then he couldn't make love to me because I would be dirty until my next shower. After three days he told me I could take all the showers I wanted, he'd find the money somewhere.\" I told her and we both laughed. \n\nJenny and I dressed in short skirts and tank tops and on our feet we wore tennis shoes. We then went down to find coffee and some thing to eat. Every one was down in the kitchen. I went straight to Bill and sat on his lap put my arms around him and kissed him. By the time we were done kissing Pam had set my coffee and a plate of fruit in front of me. So I sat with my naked bottom on Bill's lap and ate my breakfast. While I ate Bill's hand crept around my waist and dipped under my skirt and started to finger my pussy. That lasted a few minutes till Jenny said. \n\n\"Trying to get her started early today aren't you?\" Bill blushed a deep red. I turned to Jenny and said \n\n\"Don't disturb someone when they're trying to work.\" Which had the Jenny and Bill laughing, everyone else was trying to figure out what we were doing. \n\n\"Well is everyone ready to go. We have a lot of shopping to do.\" I asked after I finished my breakfast. \n\n\"More haven't we got enough cloths already?\" Jeri and Mary both said \n\n\"You all have everyday wear. Now we have to get cloths to take on the cruise. That includes formal gowns and swim wear. Plus we have to stop at Jackie's for domination wear. Not to mention what we need to wear when we pull into port.\" I told every one \n\n\"Oh yea your going to need a few formal to Gin. And what about a nice little bikini to sit by the pool.\" Jenny told Ginny and Sharon asked Sal if he had any. \n\n\"I doubt I'll be going, but no I don't have any.\" He told her\n\n\"If you tell your boss that you made plans for the cruise before you applied. I'm sure they'll let you go. So you should get gowns to wear I sure you be able to wear them someday.\" I told him \n\n\"I'd hate to lie to a new employer. I'll get them just in case and I can return them if I can't go\" \n\n\"Think positive that's my motto. Okay everyone let's get moving.\" I said as I got off of Bill's lap. Sharon told Sal to go ahead and she'll be right up. I had a feeling that I was going to be asked a question I didn't want to answer. \n\n\"And Sal remember you have to go as Sally.\" I told Sal \n\n\"You mean during the day in broad daylight. Won't somebody see I'm not a real girl?\" I could hear the fear in his voice.\n\n\"How is it going to look when your trying on dress a dressed as Sal.\" I asked \n\n\"Can't I just buy them? I know my size.\" He asked \n\n\"Sal if you want them to fit properly then you have to try them on. Just be confident you'll be fine.\" I told him I'd make sure he doesn't have a problem. Sal left to get changed. Then Sharon said to me \n\n\"You handled that well.\" \n\n\"Thanks I have a lot of experience getting cross dressers to do what I want.\" I told her \n\n\"I can see that. Can you tell me truthfully why you left the living room last night so abruptly.\" Sharon asked. I knew I could tell her that watching Sally blow Bill had gotten me excited and I want to go and do something about it. But that would be a lie and I didn't want to lie to her. Besides I'm sure I didn't look all that excited last night. \n\n\"You want the truth? If it wasn't Sally doing the sucking would you have enjoyed it as much, was it done that well?\" I asked \n\n\"That's what I though. It didn't look like Sally was enjoying it and Glenda sure wasn't.\" She said \n\n\"I figured if I left in would break it up.\" \n\n\"Well it did. I asked Sally if she like doing Glenda. She said she did but she not very good at it. She said she's watched porn tapes to get better and she thought she was doing it okay.\" Sharon told me \n\n\"She obviously watched the wrong ones. Are you any good at giving head?\" I asked \n\n\"I don't think so I never had anyone ask for a second blow job.\" She said as her face turned a bright red. \n\n\"Maybe you could ask Pam to give you a lesson.\" I told her. I knew where this was going and I was just avoiding the enviable. \n\n\"I asked her, she told me you would have to give your permission. Then she said that if I could get you to show us we'd be learning from the best.\" She said hopefully \n\n\"You both want to learn?\" She nodded her head. \n\n\"I'll teach you but I don't want to hear anymore whining from Sally about dressing up. If she is going to dress like a girl then do it other wise don't. No more whining please.\" I told her and I was serious. Sharon told me she'd talk to Sal \n\n\"Don't force her she has to want this. I don't care either way and neither should you.\" I told her as she left the room.\n\n\"Well I guess you got talked into teaching him anyway?\" Kim asked after Sharon had left. \n\n\"I knew I was going to, it was just a matter of time. Now let me listen to what Sharon says to Sal. I don't want to make the same mistake I did with Debbie.\" I told them. I concentrated on the voices around the house till I singled out Sal's and Sharon's voices\n\n\"Don't you think it crazy for me to dress like a girl in broad day light?\" I heard Sal ask Sharon.\n\n\"No I think you'll do just fine. You looked like a girl last night. In fact you look more like one the some real girls I know. But if you don't want to go dressed as one you don't have to we'll figure something else out. I just want you to be happy.\" Sharon told him\n\n\"I just want you make you happy. Do you want me to dress like a girl? I'll do it for you.\" \n\n\"I want you to be happy too. We talked about me being your mistress. Do you really want me to be one to you to tell you what to do? To take the responsibility of deciding what you should do and wear? Do you want me to tell you to get dressed like a girl?\" \n\n\"Yes I want you to take control of my life. I want you as my Mistress, but I don't want to lose you over this. I don't want you thinking some day that you want a real man not some sissy.\" He told her\n\n\"You are a real man in my eyes. A man that's not afraid to show his feeling. Now come on and let's get you dressed. Oh by the way do you want to learn to give great blow jobs like Pam gave Jeri last night?\"\n\n\"Oh yea she was great. Did Sheri give her permission to teach me?\" \n\n\"Before I answer that tell me the truth. Do I give good head?\" \n\n\"Your great.\" Sal told her. I could tell that Sal was lying just by his voice.\n\n\"You're sweet for trying to save my feelings, but I can tell you weren't telling the truth just now. So I guess that's a no, I don't give great blowjobs. Don't try to deign it. So Sheri's going to teach both of us.\" She told Sal \n\n\"Really, Pam says she the best. You're going to learn too, how come?\" \n\n\"Because I want to give you the best blow jobs I can so you won't feel the need to go out and get them with out me. By the way how do you feel about having and open marriage? I really would like one, but if you don't then we won't. \n\n\"I don't see any sense to learning to give good blow jobs if we don't. But if we do have an open marriage then I want to know who you're with and I'll tell you who I'm with and if either of us don't like what's happening they should tell the other.\" \n\n\"Good idea now let's get you dressed before they leave with out us.\" I hear Sharon tell Sal before I quit listening to them. \n\n\"Well do they seem to be okay?\" Jenny asked after she could see I was no longer ease dropping.\n\n\"They seem just fine.\" I told them just as Bill and Ginny came back in the room.",
        "We spent the next eight hours shopping. Sally was beside herself with all the attention the sales girls gave her. From that point on she knew she could pass as a girl, which I had no doubt about. I didn't even just any magic, which I would have if I thought there would be a problem. Our last stop was at Jackie's. \n\n\"Well look what we have here the Queen of the Domination world. I heard about your visit to Dominators a couple of weeks ago. Did you really have the Master eating out of your hand?\" \n\n\"I wouldn't go that far, but he was very nice to me.\" I told her \n\n\"I don't know what happen, but all I heard about was you for the next week. Everyone wanted to know who you were and what you did.\" Jackie told me \n\n\"I hope you didn't say anything?\" \n\n\"No, screw them. I told anyone and every one that I didn't know you. Now what can I do for you?\" \n\n\"My new slaves need something to wear when I feel like punishing them. Also they need something to wear tonight at Dominators.\" \n\n\"So you now have four slaves or is it six? I'm sure this tall beauty isn't one of them.\" Jackie told me refereeing to Kim.\n\n\"No I'm not and neither are these two.\" Kim told her pointing to Sharon and Sally. \n\n\"I didn't think so. Okay Sheri what are you looking for?\" I told her and in short order she had Mary Jeri and Sally in the dressing room trying on cloths. Pam and I were standing talking while we were waiting when Jackie came to me and said \n\n\"Now that you have four slaves why don't you sell me Pam here?\"\n\n\"She's not mine to sell and I wouldn't if I could. It's Pam's decision to stay or go.\" I told her \n\n\"How about it Pam would you like to come and be my slave?\" She asked Pam who blushed \n\n\"Thank you for your kind offer Miss Jackie, But I'd like to stay with my Mistress as long as she would have me.\" \n\n\"Well can't blame a girl for trying. Her Pam try on this corset, you look like you lost some weight and this one is heavily boned I think you'll really like it.\" She handed Pam a black leather corset and Pam left for the changing room. \n\n\"I'm sorry if I over stepped my bounds but I had to ask. She is such a sweet submissive. I mean she's a true submissive, she's not playing at it like so many do these days.\" \n\n\"I know she a sweet girl. I didn't mine you asking I didn't think she would accept your offer anyway, but she is free to leave if she wants to go.\" I told her \n\n\"I knew she would say no, but I had to ask. So you're going to Dominators tonight. I may dress up Paula and go too.\n\n\"Paula that sweet waiter from the restaurant down the street?\" I asked \n\n\"Yep he came to me about a week ago and asked if I could give him another chance. He's been coming every night since.\" \n\nWe continued to talk while waiting for every one to change. When every one was back in their street cloths we left to find a restaurant then back to the house to rest and get ready for this evening. \n\n\"Well Sally did you like being a girl the whole day?\" I asked \n\n\"Oh yes I can believe no one seem to notice. I was as nervous as a cat in a room full of rocking chairs for a while, but by the time we hit the third store I didn't even think about the fact that I wasn't what I appeared to be.\" \n\n\"I'm glad you enjoyed your self. Now I guess its time for you to learn how to please a man.\" I told her then to Bill and Ginny I asked \"Would you two mind if I teach Sally and Sharon how to suck cock on you two. \n\nOf cause they didn't mind in the slightest. I had Jeri Bill and Ginny sit on the couch. I had Pam kneel in front of Bill with Sally in front of Jeri and Sharon in front of Ginny. I used Pam as my demonstration model seeing it was difficult to suck and speak at the same time. Once I had them started and was waiting till they had the cocks in front of them wet to my satisfaction. Kim came to me and asked \n\n\"Is there any way I can get in on this?\" \n\n\"Sorry I only have three cocks, you'll have to wait till the next course opens.\" I told her sounding like one of my college professors \n\n\"When will the next course in fellatio 101 open.\" She asked then laughed.\n\nOnce each cock was wet I had them take them into there mouths and start to suck, explaining what they needed to do and how to make love to the cock. With in minutes I had Sharon and Sally happily deep throating Jeri and Ginny's cock. When Ginny asked \n\n\"Is it okay for us to cum?\" \n\n\"It's fine with me but you should asked Sharon if it's okay with her.\" Sharon immediately nodded her head rapidly. Jeri asked Sally and she nodded her head as well. Bill didn't bother asking Pam knowing she would greedily suck down his cum and leave him some to share. Just to tease I said \n\n\"Pam you can stop I think the others have the idea.\" Bill shot me a look that asked if I was serious and Pam pulled her mouth from his cock. I saw disappointment in her eyes and a small bout to her lips. I almost laughed, she looked like a child that someone took away her doll \n\n\"Unless you would like to finish.\" I told her. She had Bill's cock down her throat in a flash the suddenness of it even surprised Bill. \n\nWith in a minute Bill was pumping his load into Pam's mouth. After she had sucked him dry she sat in his lap to share a cum kiss with him. I then told Sally and Sharon how to finish off their partner and left them too it. \n\nJeri was next to cum in Sally's mouth with Ginny a second or two after. When Sharon and Sally pulled off their partners cock and still had cum in their mouths. I directed them to kiss each other. I watched as first there was hesitation then they really got into it. It wasn't long before Sharon had pushed Sally on to her back and spun around in a sixty-nine position and was pulling Sally's panties out of the way so she could get at her cock. Sally was also trying to get Sharon's panties out of the way to get to Sharon's pussy. \n\nI watched as Sally started to lick Sharon pussy. I could see she really knew what she was doing and was quite good at it. Sharon had all of Sally's cock in her mouth and was sucking it with practiced ease. Sally's cock wasn't very big maybe six inches if that. So Sharon had very little difficulty taking it in her mouth. Sharon was doing every thing right, which had Sally in a state of frenzy trying to get Sharon off before she did. \n\nSally's efforts paid off as they came simultaneously. Then after they were done cuming Sharon spun around again and they shared another cum kiss. After which they both laid still kissing and whispering to each other. If I wanted I could hear what they were saying but I left them to their privacy. During my teaching Kim and Jenny disappeared from the living room along with Mary. I had sat and watched Sharon and Sally's show; once they were done and had time to rest I waved them to me and said \n\n\"Now that you know what has to be done you have to practice.\" \n\n\"I will as much as I can. But how does Sally practice with out another guy there?\" Sharon asked \n\n\"You could use a dildo or find some guy that likes doing it with other guys.\" I told her. That got a smile from both of them. Then to the others I said \"Girls if we're going to the club tonight I think we should be getting dressed.\" \n\nBill followed me up to the master bedroom. Forty-five minutes later we came down ready for the club. Bill was wearing his corset with the tiny skirt that didn't hide the fact that he was a guy. Except this time his c cup breasts were real. I was wearing a new leather bustier with out a bra. My five-inch stiletto heeled boots with fish net stocking. My mistress Sheri necklace adorned my neck and black leather elbow length gloves on my hands. I wore a nipple chain attached to my nipple rings and I had on more make-up then I probably used all year. \n\nPam was wearing her new corset that was very tight on her. Her normal twenty-six inch waist had to be compressed down to a twenty-two or less. When I asked if it was too tight she told me no. \n\nJeri was wearing a pink leather corset that also compressed her waist down a few inches. She was wearing a pink leather thong with matching garter belt. White stockings and white knee length boots with a five-inch spike heel. \n\nMary was wearing a red leather corset with black lace trim. She had a red leather thong with matching garters, red stocking and red six-inch leather boots. \n\nAll my girls were wearing matching black leather collars with tags that proclaimed them to be my property. All with exception of Jeri had gold chains on their nipple rings. And each had wrist and ankle cuffs. \n\nKim was wearing a pair of tight leather shorts and a halter-top that was made of gold chain. The top left little to the imagination, as the chain was an open weave so you could see clearly through. On her neck she wore a collar that had a tag on it that said. \"I am a goddess if you fuck with me I'll kill you.\" When everyone was ready we all donned our trench coats and left for the club.\n\nWhen we arrived at the club I was feeling anxious, not because I worried about being here. But about what kind of reception I would receive. The Master was one of my black giants and also because of the donation I made to his cause. I didn't want him to go over board. \n\nAfter dropping our coats off at the cloakroom I turned to the reception desk to find the master and twelve maids on their knees waiting for me. Each maid was on both her knees with her head pressed to the floor. The master was on one knee with his head bowed. \n\nI looked around and saw other patrons of the club staring in awe at what they were seeing. I knew that in the hour everyone in the club would know what had happen. I handed the four leads to my slaves over to Kim and I walked over to the Master. I took his big black head in my hands and said \n\n\"Anton please stand this is not required.\" He looked at me with his big brown eyes fill with devotion and said \n\n\"I only wished to demonstrate my devotion to you my Queen.\" \n\n\"You did that on the day of the Awakening. This is not necessary. Now please stand for your Queen.\" Anton stood before me and then turned his head slightly and told his sissy maids to stand as well. Then in a slight whisper so only I could hear he said \n\n\"You know my race is ready to defend you if you so need it.\" \n\n\"Yes I know you and your kind are my warriors, my men at arm in time of need. I pray that need never arises that we will always live in peace.\" \n\n\"I pray the same as you my Queen, but we are ready.\" \n\n\"Calling me your queen is not necessary. Sheri will do unless it a formal audience.\" \n\n\"If that is your wish then so be. Let me show you to a table.\" He said as he turned and dismissed his sissy maid with a wave. They scattered in different directions. Then the master turned to the others of my party and greeted Jenny and Sharon in his normal tone. To Kim he greeted her differently he was extremely warm to her. He took her in his arms and they kissed and hugged each other and then master said. \n\n\"I always knew there was something special about you.\" Then to me he said \"I'll show you to your table now.\" \n\nWhen we walked into the stage area, a few changes had been made. Now there was a raised area on one wall. Anton walked us over to this raised area, on it was a large table and six chairs. Along the wall was a hard wooden bench. Once he had me seated he told me.\n\n\"The bench is for your slaves to sit on or they can kneel at your side, which ever you prefer. I'll have a sissy maid stationed at the bottom of the stairs to see to your needs. Anything you wish to drink or eat will be on the house. Now if you would excuse me I do have a club to run.\" With that he was gone. \n\nA few minutes later a sissy maid brought us two bottles of champagne and glasses for all of us. Then she took up her position at the foot of the stairs. A few minutes later I watched Jackie approach the stairs. The sissy maid stopped her in her tracks. That did not sit well with Jackie she huffed and puffed but the maid wouldn't let her pass. When the maid turned to me and I waved indicating that Jackie could pass. \n\nJackie came up the stairs with Paula in tow. When she had seated herself Jackie snapped her fingers and Paula drop to his knees next to her. When Paula was standing I noticed that she had a hard on in her satin panties. She was wearing a similar corset to what Pam was wearing and her face was made up to look like a cheap whore. By the time Jackie was settled in there was a fresh glass and a new bottle of wine on the table \n\n\"I would really like to know how you rate such service. And that greeting in the reception area what was that all about?\" She asked \n\n\"What can I say he likes me?\" I told her \n\n\"He doesn't like any women that much, but I guess I'm not going to find out what's going on so I'll leave it at that. Is it okay if I sit with you all for a while? It will be good for my business if I'm seen with you.\" \n\n\"Please make yourself comfortable. I see you brought Paula tonight.\" \n\n\"Oh yes she's my new project. She wants to be trained to be the perfect slut. Don't you sweetie.\" \n\n\"Yes my Mistress. I want to serve you in anyway.\" Paula told her \n\n\"Why don't you stand so I can show the ladies what I really like about you?\" Jackie told her. Paula blushed a deep red as she stood. \n\nOnce Paula was standing Jackie pulled down her panties and Paula's cock popped out. \"See girls I told you she had a nice piece of meat. It's ten inches long and two and a half inches thick. When she cums it's like a fire hose.\" Jackie told us as she stroked Paula's cock. \n\n\"It's very pretty.\" I told her \n\n\"Thank you. She has one problem. She can't seem to keep it from getting hard. Why is that Paula?\"\n\n\"Because I love what you do to me and because you make me wear a eight inch vibrating butt plug.\" Paula told us \n\n\"And why do I make you wear the butt plug?\" Jackie asked \n\n\"So I am always stretched out for your strap on dildo.\" \n\n\"Very good my pet you may kneel again.\" She told Paula after she had pulled her panties back in place. \n\nWe sat and chatted for about an hour then Jenny and I went to view some of the rooms. This was where the some of the patrons were putting their slave thought their paces. There were whipping room where a dominant could whip their slaves. The walls were lined with all matter of paddles and whips as well as a few crosses so the dominant had somewhere to tie up their slaves. There was also public room where a dominate would tie up their sub to be used by other dominates. \n\nJenny told me that there were rooms called potty training rooms that she thought I would fine too disgusting. So we stayed out of them. I had a feeling I knew what went on in them and she was right I did want to go in there. \n\nAround about three in the morning we decided to leave. When we got back to the house Jenny Kim and I decided that we where to tired to do anything so we just showered and went to sleep. \n\nI awoke early the next morning, around nine. Seeing I went to sleep so late I was surprised I woke up ready to go. I knew that once we got back home we would be going to the mansion. I knew that this was the reason for my high energy level. I wanted to go but no one else was awake yet. \n\nAfter I showered and got dressed I went down for some coffee. I was even more disappointed that Pam wasn't up and my coffee wasn't made. I wasn't upset because I knew that she also was up late and she didn't expect me to get up early. \n\nI made a pot of coffee and found some fruit in the fridge. I put my bread in the toaster. While I waited for my toast to cook I realize that this was the first time in almost a month that I had to make my own breakfast. Pam had always made sure my breakfast was made before I was ready for it. Poor Pam was going to be beside herself when she finds out that I made my own food. \n\nI had three cups of coffee and even a Danish that the hotel had brought in before I woke up. By the time I finished the third cup I heard movement up stairs and I even heard a shower running. I quick made a fresh pot and waited for who ever was the first to come down. Five minutes later Pam walked into the kitchen all groggy eyed. She looked at me and asked \n\n\"Mistress why are you up so early.\" \n\n\"I'm not sure I just woke up ready to go. So I came down and made breakfast for myself and waited for you all to get up. Is that any way to talk to your Mistress, shouldn't you have at least said good morning and given me a kiss first?\" I said almost in high speed \n\n\"Of cause I should have I'm sorry. Good morning my Mistress. How are you this morning?\" She asked then she kissed me. \n\nI told her I was fine and started to tell her what we needed to do before we left. Pam kept staring at me as I rattled on. When I was done she asked \n\n\"Mistress not to be impertinent but how many cups of coffee did you have?\" \n\n\"Just my normal three. Why do you asked?\" \n\n\"You acting like you had about ten. Your talking so fast I can barely keep up with you.\" She told me. \n\n\"I think it has something to do with going to the mansion for the first time. I'm really excited.\" \n\n\"I can see that. Maybe I should go wake everyone else, so we can get going.\"\n\n\"No there's no need I'll wait till they get up on their own. Do you know who was in the shower?\" \n\n\"Mary went to started it. I was going to join her after I started the coffee.\" \n\n\"Go ahead and get your shower I'll wait here.\" I told her \n\nTwenty minutes later Pam and Mary where down as well as Kim and Ginny. Ten minutes after that Jeri and Sally where also down followed by Sharon and Bill. Jenny was the last to wake up and she look like she wasn't too thrilled to be up so early. \n\nOnce every one was up Pam Mary and Jeri went up to pack up seeing they had the most to pack. When Kim and I went up to pack we were informed that Pam had packed up our things already. \n\n\"Hey this is pretty good.\" Kim told me when she found out she didn't have to do anything. Then she asked, \"Are we stopping on the way home?\" \n\n\"I was going to get Jeri's nipples pierced and something done to Mary. Why did you need to get home right away?\"\n\n\"No. Jeri told me you wanted to get her nipples done. If we did stop I was going to get mine done too. What are you going to do to Mary?\" \n\n\"I'm still not sure she wants a tattoo like Jen has. I'm also thinking of having her clit pierced. Have you ever seen anything like that?\" I asked \n\n\"I had a girlfriend that had one it made it real easy to find it.\" She told me \n\n\"Did she say if it hurt a lot?\" \n\n\"She said the guy that pierced it had to get her excited to get it to stand up. When he put the needle thought the flesh she came in a gush. She never did say if it hurt or not she did wish she had more than one so she could get them all pierced.\" \n\n\"I know if I have Mary's done Pam's going to want one too.\" I told her \n\n\"That's the problem with piercing once you have one you want more. I'm surprised that neither of them want their tongues pierced they both seem to like it when I use mine on them.\" Kim told me \n\n\"They haven't mentioned it yet.\" I told her \n\nWe left the house just after twelve, after I had called the hotel to inform them that we were leaving. Jenny had called Sam to make sure she was going to be there. She said she'd be happy to take care of anything we needed. \n\nWhen we arrived at Sam's she greeted us as if we were old friends. She went to Jenny first and kissed her long and hard then she did the same to Ginny. When she came to me we kissed as a lover would then she said \n\n\"I heard what you did last night it's all over town. I find it hard to believe that the Master knelt to you and called you his Queen.\" \n\n\"I'm sure he meant it in jest.\" I told her \n\n\"That's not the way I heard it, but what you two have going is none of my concern. All I know is the cruise is sold out and I'm going to make a killing. Even after I pay twenty percent to Max. Now what can I do for you, have you come back for that clit ring?",
        "\"I haven't but one of my submissive has to have her nipples pierced and I think one will have a clit ring as well.\" I told her \n\n\"I'll start with the nipples first then I'll do the clit. Anyone else getting his or her nipples done.\" She asked. Kim and Sally both raised their hands. \n\nWhile Sam prepared herself, Pam came to me and said. \"Mistress I would be honored if you would have my clit pierced as well.\"\n\n\"I already had your nipples done. That is enough for me unless you want your clit done.\" \n\n\"Yes Mistress I would like to have my clit done and my tongue so I can please you even more with my tongue.\" She said with a blush \n\n\"You tongue pleases me as it is, but if you want one then I'll give you one. Does Mary want her tongue done too?\" \n\n\"Yes she does but she's afraid to ask since your already getting her clit done.\" \n\nI told Pam to tell Mary to ask. After Mary had asked and Sally and Kim had their nipples done I sat next to Jeri while he had his nipples done. Then I asked Sam \n\n\"What do you want next tongues or clits?\" \n\n\"If they're on the same person I'll do the clit first then the tongue. The tongue is the hardest on the person getting it. They keep trying to swallow the tongue ring. It's an automatic reflex. If I do the clit last then while I'm working down there they have a difficult time with their tongue.\" \n\nI had Pam sit down next and Sam went to work on her. \"One thing I like about doing this is I get to play with her first. I have to get her clit excited and out of its hood to pierce it. Most of the time the girl cums as I pierce it.\" \n\nSam work on Pam's clit until it was hard and she was ready to cum. When Sam pierced the flesh Pam came hard. Sam installed the ring then let Pam calm down before she went to work on her tongue. When her tongue was done Bill helped her to another chair then Mary sat down. \n\n\"Mary wants a butterfly like the one you did on Jenny. Is that possible?\" I asked her \n\n\"I won't do the same one on her, but I can do a similar one. She's a good candidate she has fleshy lips, which is a plus, but it's going to take a long time to complete it. She'll probably have a few orgasms while I do it and I have to let her calm down after one. Jenny it took us what about seven hours to do yours?\" \n\n\"Seven hours a lot of pain and god only knows how many orgasms.\" Jenny told her \n\n\"Jenny's a baby about pain, but it will take a while. Is she going on the cruise with you.\" I told she was. \"I think it would be best to wait till then. I can do it in steps so it won't take so long.\" \n\n\"Is that okay with you Mary?\" I asked her Mary told me it was \n\n\"Good that will give your clit time to heal and your mouth time to get use to the tongue ring.\" Sam told her \n\nSam then went to work on Mary's clit. Once she was properly stimulated Sam installed the ring and Mary had orgasm as well. Before Sam started on her tongue she asked me \n\n\"Mistress am I yours now?\" \n\n\"Yes sweetie you belong to me now. Dose that make you happy?\" \n\n\"More then you could ever know.\" She said as a tear came to her eye. \n\nAfter Sam had Mary's tongue ring in I went to pay for the piercing Kim and Sharon followed me over. Kim and Sharon paid for theirs then I paid for mine. Then Sam said \n\n\"You do know I also do cock piercing. In case you were wondering what we could do with those.\" She told us and then pulled out a photo album on piercing. \n\nI was amazed at how many things you could use to pierce different parts of the body. I was also amazed on what you could do to the male sex organ. I didn't think I want any one I knew to have that done. I figured if I was sucking on a man's cock I didn't any unnecessary jewelry down my throat. \n\nWhen Pam and Mary were ready we left for home. Now that we were on our last leg I was more anxious then I was earlier. My legs wouldn't stop moving and my hands were shaky. Time seem to stand still until Jenny started to caress my thigh. It seemed to make me instantly relax, as my breathing returned too normal. I rested my head on Jen shoulder and whisper my thanks.\n\n\"You seemed a little wired. In fact you've been that way all day. Is there something wrong?\" She asked \n\n\"No I guess I'm excited about finally getting in the mansion. This has been building all week.\" \n\n\"It must be the magic. I haven't even realized that we're going there. By the way who's going to be making dinner tonight?\" \n\n\"I think Ginny should. I don't think Pam's going to feel like it for a day or two.\" I told Jen as I looked at Pam who was still trying to swallow her tongue ring. \n\n\"That's if there's any food in the house. Did you think to add that to your list when you told them what you wanted done?\" Jen asked \n\n\"No I didn't all the food we had back at the old place should be there. I'm not sure what there was. Pam took care of that. Well if nothing else we can always order pizza.\" \n\n\"If we can find someone to deliver out that way.\" Jenny said \n\n\"We had better. If I lose Pam I'm going to starve.\" We both started to laugh because we were both helpless in the kitchen. \n\nI got a call from Bill up front to tell me that we were getting close and he wanted to know if Jenny want to stop at their place first or go right up to the main house. Jenny said she would go to the main house and bring their stuff to their house later. Since Sharon and Sally were with us. \n\nI knew instantly when Bill pulled off the main road and onto the mansion road. The magic consumed me, but not near as bad as it did the last time. This time it was like the touch of an old friend warm and comforting. \n\nWhen Bill stopped the car in front of the mansion and I stepped out. The magic swirled around my feet then up my legs. It brushed passed my pussy on it's way to my breast and then my head. It surrounded me as if trying to consume me, but it wasn't threatening. It was like a lover's caress, satisfying and reassuring. When I realized that Bill was talking to me I pushed the magic down so I could hear him \n\n\"You okay? I mean with the, you know.\" Bill was trying not to let Sharon and Sally know about the magic\n\n\"Yes I have it under control now.\" He then asked if I was sure. I told him I was \n\nI saw a puzzled look on Sharon and Sally's face so I said. \"This is our new home we moved this week end.\" \n\n\"You live here now. Boy you must really have a good job.\" Sharon said. \n\n\"It's part of an inheritance I received.\" \n\n\"I wouldn't mind receiving something like this. It's beautiful.\" \n\n\"Come on in and I'll show you around.\" I told them \n\n\"I have one question. How do I get back to my car?\" Sally asked \n\n\"If I'm not mistaken you'll find it in the carriage house around the side.\" I told him pointing in the direction of the carriage house. \n\n\"How did you get it here I know I locked it before we left.\" Sally said \n\n\"That was easy I just used magic.\" I told him Sharon and Sally both laughed at my joke. Little did they know I was telling the truth? \n\n\"The magic towing service most likely.\" Sally said. From that point on I knew if I mentioned using magic most people would assume I was joking. Then they would explain it in a way that it would sound feasible to them. \n\nI took Sally and Sharon on a tour of the house while Pam Mary and Jeri got all the cloths put away. Ginny and Bill when to see what was available in the way of food while Jenny and Kim went down to the pool. When I finished showing Sharon and Sally the main floor I took them up to the second floor and showed them the bedrooms. My room was last on the tour of the second floor when we finished in there I took them out onto the balcony over looking the rose garden and said.\n\n\"If you two do get married I think that would be the perfect spot.\" \n\n\"God yes it would be. Do you think we could?\" Sharon said \n\n\"Of cause you could. Why would I tell you it was perfect if I wouldn't let you use it? Sharon threw her arms around me and hugged me to her. We heard some one laughing below us and when we looked down we saw Jenny and Kim in the pool bare ass naked\n\n\"Now that looks like a good idea. Come on let's go join them.\" I told Sharon and Sally \n\nI stripped off my cloths and threw them on the bed on my way out of my bedroom. Sally and Sharon were right behind me still dressed. We made our way down stairs and just as I got to the pool I met up with Ginny. \n\n\"How's the food situation looking?\" I asked her\n\n\"Not good, there isn't much here. Luckily I found a phone number for a pizza delivery place close by, they should be here in half an hour. Pam and I will go shopping tomorrow for groceries if that okay with you.\" \n\n\"It's fine by me. Pizza sounds good keep that number handy. Now all we need is some wine and beer.\" \n\n\"Bill's all ready took care of that. He had Gavin stock the wine cellar and there's plenty of beer in the fridge behind the bar in the rec-room.\" \n\n\"I guess were all set then, at lease we won't starve. When you and Pam go shopping make sure she pays for it with the credit card I gave her.\" \n\nWhen I finished talking with Ginny I jumped into the pool and swam out to where Jenny and Kim were talking. When I got closer I saw that Kim had Jenny backed into a corner of the pool and she had her arms under Jenny's arms and was holding her up. Jenny was bobbing up and down with a look of pure bliss on her face. I then realized that Kim was fucking Jenny.\n\n\"Be careful, I'd hate to have to try and explain how you have a cock to Sally and Sharon.\" I told Kim '\n\n\"That's why were doing it all the way over here. Now quite bothering me.\" Kim told me a little testy \n\n\"Boy if I knew you were going to be a bitch about it I wouldn't have given it to you.\" \n\nKim was going to apologize, but I swam away on her. I swam over to Bill who was sitting on the side of the pool with his feet in the water. I swam up to him and hoisted myself out of the water to sit next to him\n\n\"Hi there have any wine for me?\" I asked \n\n\"I just so happen to have a glass for you right here.\" He told me as he handed me my glass. \n\n\"Where are Pam and Mary?\" \n\n\"There up stairs waiting for the pizza to get here. Last I saw them they were making themselves a fruit smoothie, seeing they can't eat anything solid right now. I don't know why you let them get those things.\" \n\n\"They asked me if they could. I didn't tell them to get them, if they don't like them they can take them out.\" I told him defensively \n\n\"I'm not saying you made them get it. I just can't see how their going to work in the office the next couple of days not being able to talk.\" \n\n\"I'm not their boss there, if you didn't want them to have it you should have said something. Or Ginny should have. Don't blame me.\" \n\n\"I'm not blaming you. I know you didn't make them get it. I guess they should have used some common sense.\" \n\n\"Maybe you and Jim should say something tomorrow to let them know your not please with their decision. If Jeri or Sal had gotten one I would have said something as their boss.\" \n\n\"What did you just say? He asked \n\n\"I forgot to tell you Sal would be working for me starting tomorrow.\" \n\n\"Does he know it?\" \n\n\"Not yet but he will tomorrow.\" I told him just as Pam came down with the pizza. \n\nI looked out to where Kim and Jenny had been and they looked like they were done. So I called to them and told them that the pizza was here. When they started to swim over to where we were sitting I thought to myself, I hope this pool had a good filter system or there was going to be a lot of cum balls floating around in it. \n\nWhen Kim got out of the pool she came over to me and said \"Sorry about bitching at you.\"\n\n\"Don't worry about it. I was just teasing you.\" I told her then I whispered to her \"Just be careful around people that don't know what we are.\" \n\n\"I will, if they came over to us I would have stopped and got rid of it. I just didn't expect you all to come down so fast. And we were so close to finishing.\" \n\nWe sat ate and drank till almost seven then Sharon said they had to leave so Sal could get ready for his new job in the morning. Bill and I showed them where their car was, after loading their bags in they took off. When Bill and I got back to the pool patio I said to Pam and Mary.\n\n\"You know you two are going to have a hard time answering the phone tomorrow with those things in your mouth.\" \n\n\"Not really. Ginger and Glenda will be answering the phones tomorrow. It is Monday after all.\" Pam told me sounding like Donald duck. Then to Bill she said, \"If you want me to remove it I will.\" You could see the disappointment on her face\n\n\"You might as well keep it now, but next time remember we have an image to project. Our clients are conservative and they don't want their lawyers, or the secretaries of the lawyers looking like punk rockers.\" \n\n\"I guess I deserve a spanking for not thinking this through.\" Pam said I laughed and said \n\n\"Oh I don't think so. Everyone know how you love to be spanked, I don't think a reward is in order.\" Pam looked slightly disappointed that her plan to be spanked had not worked. \n\n\"I'm sorry too Ginny I was more concerned on how much pleasure I was going to give all of you with out thinking about how long it will that for me to talk normally again.\" I could see that Mary was sorry. I was sure that her oral fixation over ruled her common sense on this one.\" \n\n\"What's done is done. I'll have Beth answer the phones you can do some of her work to compensate. I guess Glenda and I will be on the phones most of tomorrow anyway, but I refuse to do any more typing.\" He told her and we all laughed \n\n\"I want to know how long I have to wait till I find out what those tongue rings feel like on my clit.\" Jenny said \n\n\"It took me a week till I was able to use it on someone. They have to be real careful about infection. I'm not sure about the clit ring.\" \n\n\"Sam said to wait a day or two before we did anything. We just have to rinse our mouth with an antiseptic mouthwash for a week or so. As far as our clits are concerned we have to keep them clean. And use alcohol swaps during the day when we can't take showers.\"\n\n\"How do you feels I mean are you in pain?\" I asked \n\n\"My tongue is swollen, but it doesn't hurt and my clit feels funny, I think it's because of the extra weight there but I don't feel any pain.\" Pam told me \n\n\"I don't either. But I am very aware of my clit. I have this urge to reach down and play with it.\" Mary told me and Pam agreed with her\n\nAs dusk settled out side we lowered the screen enclosure so the mosquitoes couldn't drive us into the house. The night was warm, but the ceiling fans on the patio keep us cool down. I sat on Bill's lap and we fooled around some. Nothing serious, mostly I kept his cock hard and he kept my juices flowing. Jenny and Kim were doing much the same as was Jeri and Ginny. Mary and Pam were kissing but they were keeping their hand above their waist's. \n\nWhen darkness fell completely Pam turned on the scones lights around the patio. They weren't bright but they did give off enough light were we could see each other and still leave it romantic. \n\nBill and I were starting to very excited with each other. I was just about to go down on my knees to take him in my mouth when I heard a knock on the patio door. Pam went to see who it was. She came back and said in a whisper \n\n\"There are two little nymphs wanting to see their Queen.\" \n\n\"That must be Dema and Danella. Let them in please.\" I told her \n\nMary turned up the scones lights so we could see. Dema and Danella came to me. I could see that Danella was very shy and she needed Dema's prodding to convince her to come closer. Dema look exactly like she did in the Renewal, dark skin with streaks of black and greens. Danella skin was a greenish blue as was her hair. She was just slightly shorter then Dema was, around three foot five. Both nymphs were thin with tiny breast. \n\nIt was hard to believe that either of these two were any were near childbearing age for a nymph. I myself was still to young to bear a child. I still had two more years before I could. Then I would have to bare one within three years. Once I reached thirty-five I could no longer bare a child. This was the way of magic, it was meant to keep our numbers low. \n\nBoth nymphs knelt before me and then Dema said. \"My Queen I would like you to meet my friend Danella. She lives in the pond in my woods.\" \n\n\"Hello Dema it's a pleasure to see you again and a pleasure to meet you Danella. I hope you would agree to let me live here near you pond as Dema has agreed to let me live in her woods.\" I told her. \n\n\"Of cause I agree to let you live here. For you are our queen and we must do as you say.\" Danella said \n\n\"Yes you must, but I would rather you allow me to live here. I don't want to force you to accept me.\" Danella thought this over while Dema fidgeted next to her. I could see that if Danella left the woods Dema would follow her. \n\n\"I would gladly allow you to live here as long as you don't stink up my pond like you did yours.\" This threw me; I had no Idea what she was talking about.\n\n\"Danella don't be rude to our queen.\" Dema whispered to her \n\n\"I'm not being rude I just don't want my pond smelling like that. It hurts my nose and eyes.\" Danella told Dema \n\n\"Maybe she doesn't know their water stinks.\" Dema told her\n\n\"Then I should tell her. She might get sick drinking it.\" It took me a second or two to realize that Danella was talking about the chlorine smell. \n\n\"Danella what you smell is the chlorine we use to keep the water clean other wise it will turn green.\" I told her \n\n\"I use my magic to keep my water clean, if you want I'll keep your water clean for you and you can stop putting that stink in.\" I didn't know what to say to her till I realized she was looking for a reason to stay here.\n\n\"I would appreciate it if you would. Then I wouldn't have my skin dried out from the chlorine.\" \n\nDanella stood and went to the edge of the pool. She then held her hands out over the water and whispered a chant. The surface of the water boiled then went still. I immediately could smell that the chlorine smell was gone. Danella then jumped into the pool and swam the length of the pool twice underwater before coming back to the end were we sat. \n\nWhen she got out of the water she was as dry as she was before she had jumped in. She then came to me and said, \"Now it is as clean as it was when it fell from the sky. I will keep it that way until you tell me to stop.\" \n\n\"Thank you Danella. Would you like a glass of wine?\" Danella looked at Dema not sure what I was asking. Dema was still on her knees her look was as puzzeled as Danella's was so I said. \"Wine is the juice from grapes.\" I said as I poured them a glass \n\nDema stood and took the glass from my hand as did Danella. When Dema took a sip her smile lit up her whole face. Then she said \n\n\"Go a head Danella, it's like the drink the gnomes make only this one tastes a lot better.\" Danella took a sip then she downed the whole glass. When she set her glass down I asked if she would like more. Bill took my hand and whispered \n\n\"Do you think you should be giving that much to someone so young?\" \n\n\"My Queen's mate I was born thirty three summers ago. I am old enough to bare a child.\" Danella told him. \n\n\"I guess she told you.\" I told Bill as I poured another glass for her then I told her \"Be careful this contains alcohol.\" \n\n\"So does the drink the gnomes make, theirs is much stronger.\" Dema told me handing me her glass. Then she told me \"I think they were trying to get us drunk to have sex with us. But we can drink a lot more then they can. Besides their little penises are too small for us.\" \n\nThis had everyone laughing. The two nymphs then sat at the table while we talked. They told us about where they lived and what they eat. They told me how they weren't affected by the forgetting spell. Once the second bottle of wine was gone Dema asked me ",
        "\"Did you tell them about the mating.\" \n\n\"No I haven't. I'll tell them now then we'll let them think about it for a few days. Humans are kind of possessive about their children. They might not like that they can't see them when they want.\" I told her. Then to the men I said \n\n\"Ginny, Glenda and Jeri I need you three to listen to what I'm going to say then I want you to think about it. Nymphs are different from humans. We can only bare one child in our lifetime. And we can only conceive between the ages of thirty-three and thirty-five. If we don't conceive then we never will. Dema and Danella have reached that age; they need to find a male human to mate with. Normally they would leave the safety of their woods and find a human to mate with then come back to bear their child. If the first time they don't conceive then they keep trying till they do.\" \n\n\"What Dema and Danella want is to have sex with you three so they don't have to leave the safety of their woods. You will bare no responsibility for the care or up bringing of the child. Do you have any question so far?\" \n\n\"I do will the child be raised as a wood nymph or water nymph.\" Ginny asked \n\n\"Yes. She will be a nymph and raised as one.\" I told him\n\n\"You said she what if it's a boy?\" Jenny asked this time \n\n\"There's never been a boy born to a wood or water nymph. It's not possible.\" Dema told her \n\n\"Will it be just one of us or will all three of us have to take part?\" Bill asked \n\n\"I only need one man, but I wouldn't mind doing it with all of you. The more I do it the better chance I have of conceiving. I'm sure Danella feels the same seeing neither of us has ever had a man.\" Dema told him then she smiled at him. \n\n\"I have no problem with this. I would like to see the child once in a while, but with all three of us doing it we wouldn't know who the father really is.\" Ginny told us\n\n\"If you live here then you will problem see her. If only one of you decides to take part then he will be the father. If none of you wish to enjoy us then we will be forced to leave here and that can be dangerous for us.\" Danella told them\n\nThe only problem I have is they look so young. It'll be like fucking a thirteen year old.\" Jenny said \n\n\"You have to remember they are both older then most of us. They just look young.\" I told her. \n\n\"Hell I'd do it but then I'm a slut.\" Kim told us, which eased the mood quickly.\n\n\"Why not it's not like we're monogamous anyway. I've done more different women in the last month then I have my whole life.\" Bill told us Then Jeri and Ginny agreed with him. \n\nI could see that Danella and Dema were thrilled with the decision. They wanted to know when they could start. I wanted Bill to myself tonight and I had a feeling that Jenny felt the same way about Ginny so I told the two nymphs to come back early tomorrow night. \n\nJenny and Ginny went to their house around ten. Kim took Jeri up to bed about the same time as Bill and I went up to bed. Mary and Pam said they would clean up before they went to bed. \n\nBill and I took a shower then hopped into bed. The bed was huge twelve feet across and ten feet long. Custom made sheets had to be order as well as the comforter. Bill and I snuggled up close together and kissed. We both wanted to make love together, it had been so long since we had. Except for that shower we shared it's been well over a week, unheard of in our marriage. Bill pulled his mouth from mine and asked \n\n\"Are you sure your ok with this?\" \n\n\"With what, you making love to me?\" \n\n\"No. Me have sex with those nymphs.\" \n\n\"Why wouldn't I be? You had sex with eight different women and four different men in the last month. What makes you think I would object to these two?\" I asked \n\n\"They look so young.\" He told me \n\n\"Okay let me prove something to you, close your eyes.\" I told him, when he did I got out of bed and caste a spell so my breasts looked smaller, just like Dema's and that was all. \"Okay now open you eyes and look at me.\" \n\n\"Wow you look like you thirteen now.\" He told me, but I could have sworn I saw his cock jump. \n\n\"The only difference is the size of my breast. That's the only thing I changed. You obviously like what you see.\" I said while pointing at his cock. \n\n\"You're telling me that you're the same as you were before just you breasts are smaller?\" \n\n\"That's it. I can wear all my cloths the only difference is I won't fill out my bra. Now if you make love to me right now would it be any different?\" I asked as I slipped back into bed with him.\n\n\"I guess not except I wouldn't have as much to play with up top.\" He told me. I removed the spell and said \n\n\"There now play as much as you like but don't neglect the bottom end.\" \n\nBill held me tight as we kissed, our tongues played with each other in our mouths. At the same time our hands caressed each other's tits. His were slightly bigger then mine were, but we both responded to the same stimulation. Then he released my mouth and moved down to my breast. \n\nHe kissed and licked my breast adoringly; his bites were pleasurable in themselves. When he took my left nipple in his mouth I moaned as the pleasure rippled through me. I could feel his cock on my leg as it smeared it's pre-cum on me. I knew I want it I wanted it so badly; I could almost feel it inside of me. \n\nBill move next down to my tummy, but he didn't stay long there as he licked and bit me. I watched as he settled between my legs and inhaled my scent. I could feel my cream leak out of me as he watched. When he licked my slit my head fell back onto the pillow as I groaned with the first touch of his tongue. \n\nBill went to work in earnest on me as his tongue shot into my hole. I felt it wiggle around licking at the walls of my cunt searching out what cream he could find. When he was done there he sucked on my clit driving me to my first orgasm of the night. \n\n\"Oh baby that's it I'm cumming sweetie. Suck my clit love. Suck it and make me cum.\" \n\nBill did just that. He sucked my clit till I came twice more then he sucked up all my cum then he pushed my legs up and licked my asshole clean. Before he settled down and started to lick my pussy once more. \n\nI knew what he was waiting for; he wanted me to beg for his cock. He wanted me to beg like a slut in heat for that wonderful cock he had between his legs. I held out for as long as I could, what his mouth was doing to me was nice but I need more. I needed something hard and thick deep inside me. With all my willpower gone I looked down at him and said in my little girls voice. \n\n\"Please baby please fuck me with that big fat cock of yours. Come on honey let me feel it deep in side me. Let me get it wet with my cum.\" \n\nBill groaned when he heard this. He rose up taking my legs with him an in a flash I felt the head of his cock at my entrance. With out a second thought he plunged it deep into me. I squealed as I came from the suddenness of it. There was no pain only pure pleasure as I felt him bottom out in me. \n\nOver and over again he pounded his cock into me. My ass was pushed so deep into the bed I could almost feel the box springs give way. My orgasm never stopped as I continued to cum while he plunged his cock in and out of me. I was oblivious to everything around except for that wonderful cock thrusting in and out of me. Till I heard from my lover the end was near. \n\n\"Please Sheri let me cum I can't hold out much longer.\"\n\n\"Cum Baby cum deep inside of me. Let me feel you fill me with you hot cum.\" \n\nBill groaned out as I felt his cock expand in me, then I felt the first blast of hot cum flood my insides. The second blast was even hotter then the first. He fired four more times as he shook with each blast. \n\nBill knelt above me as sweat poured off his face and ran down between his magical breasts. His chest heave as it sucked in air. When he had recovered somewhat I asked \n\n\"Do you want to clean me?\" He nodded his head unable to speak. \"Do you want to roll over so I can be above you?\" Again he nodded \n\nBill pulled his soften cock from me as I held my legs up so none would run out. Then I flip over and spun around bringing my filled pussy to his face and my mouth to his cum covered cock. As I sucked his cock clean I felt his cum drain out of me and into his mouth. Bill did every thing he could to catch it all. When he had me cleaned out and his cock was as clean as I could get it I spun around once more and laid on top of him. We kissed each other before I licked his face clean. \n\nWe rested for a few minutes then back in the shower before putting on nightgowns and back to bed for some much needed sleep. "
    ],
    "authorname": "Scribler",
    "tags": [
        "mary jeri",
        "show table",
        "sam work",
        "glass told",
        "make case",
        "bill legs",
        "bill jeri",
        "bill helped",
        "ginny pam"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/lifes-changes-ch-14"
}