{
    "title": "Second Sunset",
    "pages": [
        "Hugh sat in his car and looked out over the grass. The markers were a mixture of in ground and above ground, giving a look reminiscent of when his children were young and their wooden blocks were towers and walks and houses and everything in between. He smiled at the memory, then frowned as he remembered yelling at the kids while trying to find a safe path to walk from the kitchen to the bedroom so he could change out of his work clothes and try to unwind. It was his own fault. Betty only wanted two kids, he wanted six, so they settled on four. Two years apart. That one year, oh, how he wished he could forget their chant. \"Two, four, six, eight, that's our ages and we're great!\"\n\nHe opened the door and stood up. It was easier to get out of a car back then. Now he had a crossover so he didn't have to rise up when he got out. Memories. Every time he came here it meant a flood of memories. Those children now all had their own, and then THEIR own, and an indiscreet action had the oldest of the latest generation three months pregnant. She was only 17, and it seemed so unfair that she would need to start caring for a child so young. She insisted, though, that she would have the child, the father said he would help raise it, and they were still dating while discussing the possibility of marriage later.\n\nCass was always so adventurous. So completely unlike her grandmother. And yet, they had loved each other in a way many people couldn't understand. If Betty had still been alive, she and Cass would have been on the phone every day, preparing for the birth. Betty would have been invited to be there, to hold Cass's hand when the baby was born. But Betty was not available any more. Now she lay in a box in the cold ground, where she had been for almost three years. She would have scolded Cass for being so careless, then would have loved the growing baby as only a great-great-grandmother could.\n\nHugh was so different. He loved all his children and grandchildren, but he had been forced to learn how to do that. After Grammama was gone it was only him, and they turned to him for advice, for love, for comfort when things were difficult. He tried to remember, tried to think what his wife of 58 years would have done or said. In time, it began to come more naturally, but his slightly stuffy personality never let him open up completely. He had accepted, simply, that he was not really a loving kind of person.\n\nHe stood looking at the stone in the grass, thinking he needed to get the clippers out and do some weeding. The groundskeepers were letting things go. Didn't they realize these stones and plots were memories for people? As so often, he looked at the green grass next to hers, knowing the day was coming closer when he would be there. Maybe it was time. He had always wanted HIS time, time for whatever he wanted to do, and now it was all he had. He was lonely. He went to the car and got the clippers before returning and kneeling next to the stone marker.\n\n\"It's a lovely day. Warm, slight breeze. The leaves are budding and I expect the trees will be green right on schedule again.\"\n\n\"Yes, it is a lovely day, isn't it?\" A woman's voice caused him to jump. He hadn't realized somebody else was there. So totally lost in his own thoughts, he hadn't heard another car or the closing of the door. \"Oh, I'm sorry,\" she said, \"I didn't mean to startle you. I was just agreeing with you.\"\n\nHe turned to look at the speaker and saw a woman about his age fifteen feet away. She was heading toward a point farther from the paved drive, but looked at him, a soft smile on her face. A square face, he thought, with a full head of gray hair on top. Gray hair. No dye in it. Soft pink lipstick, a bit of rouge for her cheeks, and glasses. She had the usual fuller figure of a woman about 80 years old and she wore a dress that came to just below her knees. Old fashioned and a bit proper. He had a favorable first impression.\n\n\"I guess I was lost in my thoughts and memories again. It happens when I come here.\" He looked out at the expanse of burial ground and the trees surrounding it. A stronger breeze made the branches dance lightly. \"It was a day much like this when we first met. I suppose that just makes me remember more.\"\n\n\"How long has it been?\" she asked.\n\n\"Not quite three years. Yeah, THAT day was different. Hot, humid, and yet I was cold.\"\n\nShe nodded. \"Just over two years for me. The love of my life. Mostly. Sorry, that's more than I should have said.\" She turned and continued to a place about 50 feet from him.\n\nHe didn't know why, but he stood and watched her. The build was about the same as Betty's had been. Full in the middle and a bit wide in the hips, but four births could do that to a woman. Moderate sized chest. He realized her eyes were a deep brown, very different from Betty's light blue. For a moment, he saw her again, lower body covered in a soft, cream colored blanket, upper body in a nice white blouse with dark blue jacket. The blue was to go with her eyes, but he felt it was her favorite even if her eyes weren't ever going to open again. Then the lid was closed. Hugh felt the tear run down his nose and watched through the blur as it fell to the ground.\n\nThe voice was back. \"Are you all right? You're shaking. Are you cold?\"\n\n\"Betty should have done better. I wasn't good for her. I was a selfish bastard and all she did was smile and love me. Why did she go and I'm left here? The kids deserve better, and the grandkids, great grandkids, and the one she would have wanted to care for.\"\n\n\"Betty. A very pretty name. What happened?\"\n\nHugh didn't look, didn't want to look, but he knew she was near him. She reminded him so much of his wife. The soft voice, slight smile on her lips, build, hair, in so many ways she reminded him, and yet he knew she was completely different. \"Cervical cancer. A lot of pain. I had to learn how to take care of her. After all the years we were married, I had to LEARN how to take care of her.\"\n\n\"But you did.\" Again the soft voice. It was almost as if Betty had come back in another person who shared this person's body. \"And if she had lived, the pain would have always been with her. Would that little one want to grow up seeing her like that?\"\n\nHe gave a short laugh. \"I told you, I'm a selfish bastard.\" He finally turned his head, surprised to see her just 5 feet away, arms crossed under her bust, holding her purse to her side. \"I know it, in my head. I always wanted a little more freedom, more time for me and the things I wanted. Well, I got it. And I'm at a loss what to do with it.\"\n\nShe sighed, the first time she lost her smile and air of happiness. \"Maybe I'm the lucky one, then. Grant was my second husband. The first lasted long enough to produce three kids, then all he did was complain they made too much noise, that I'd gotten too fat, and one day he said he had found somebody new and he was gone. I got the mortgage and the kids and child support. At least he paid that regularly.\"\n\nIt was her turn to look across the grass and remember. \"Grant entered my life four years later. We hit it off, got married, and oh the romance we had, even with the kids. They accepted him as their father and I was happy. Then about 12 years ago, it changed. The romance stopped, sex stopped, we stopped. And when he had the heart attack, the world stopped.\" She looked back at Hugh and the smile had returned. \"But I found I could enjoy my kids and grandkids again, and slowly life got better.\"\n\n\"I'm Hugh, by the way.\"\n\nShe held out her hand. \"Ethyl. My father was a chemist and he told me he was drunk when I was conceived. He told odd jokes like that. I think they were jokes. He never let on.\"\n\nNow Hugh smiled. \"Ethyl, as in ethyl alchohol. It seems your father did have an odd sense of humor. And your mother went along with it.\"\n\n\"She decided early not to fight that battle. He was a joker, and a drinker, and a few other things. In a way, I'm glad he died when I was in high school. He and my first husband would have been a volatile mix.\"\n\nThey drifted back to their cars talking about children, grandchildren, and what made life worth the pain and effort. He was surprised when he pulled on the car door and it didn't open, then he remembered it wasn't his car. She smiled at him and moved to the driver side.\n\n\"I would like, wow, this is so strange for me, I'd like to see you again, if that's ok with you.\" Rarely at a loss for the few words he spoke, he was uncomfortable with trying to say a simple sentence.\n\nThere was that big smile again. It brightened her whole face and made her pretty turn into beautiful. \"I would enjoy that. Are you inviting me out for dinner? Are you wanting to sit on the balcony at the Lake Forest Lodge tomorrow night for dinner?\" The door chirped and she pulled it open.\n\nThis time his laugh was heartier. \"You don't like being left with making plans, do you? Ok, Lake Forest Lodge, tomorrow, at 6.\"\n\nThe next evening, she was there, waiting on the veranda, wearing a fuzzy, tan pullover top with modest scoop and long sleeves. He had black casual pants and a red polo. For years he had worked on keeping his belly flat, but the last half dozen years had taken a toll and he had a noticeable paunch now. It bothered him, but he felt it was still better than what it could have been if he didn't try at all.\n\nThey had a nice table overlooking the lake and made small talk. Neither had made much effort at being social in the past couple of years. She still lived in her house, he had moved to a seniors community, but generally kept to himself. If Ethyl hadn't made a comment at the cemetery, he would likely have ignored her. Now he tried to come up with some kind of conversation.\n\n\"It's funny, you know. You have woods with some hills and a little stream runs between the hills. Pile up a bunch of dirt and block the water, now you have a lake. Throw up a concrete wall and you can make a bigger lake and call it a resort.\"\n\nEthyl smiled at him. \"At this time of year, the sun sets over the long view of the lake. It should be quite beautiful with the wisps of clouds up there.\" She pointed at the sky. \"So your concrete wall just enhances the beauty nature already provided.\"\n\nHugh looked at her with a mixture of annoyance and softness, a look he hadn't given a woman in several years. \"Don't take this wrong, but that sounds a lot like what Betty might have said. How can you not be her, but be so much like her?\"\n\nShe took a deep breath and leaned back, the smile fading for the moment. \"Hugh, we were both married a long time, and we have memories good and bad. I won't take it wrong. Of course you would compare me to your wife. And of course, I am not her. If we're similar, and you enjoyed time with your wife, than I hope you enjoy this time with me as well.\"\n\nHe blushed and she noticed, the smile coming back quickly, accompanied by a soft giggle. \"Not that kind of time, you silly old fool.\" That got him laughing, and when the sun set 20 minutes later he moved his chair close to her and watched it, amazed at the bold orange, pink, and deep reds that reflected off the clouds and the water before settling to a soft darkness. A tear slipped from his eye. When he was younger, nobody would have seen a tear come from him, but now he didn't care any more. It reminded him of his marriage, how it had been bright, then the brilliant sunset, then the slow fade to darkness.\n\nShe put her hand on his. \"Hugh, you're like this lake, deep, moving, reflecting a lot but also absorbing it. Can we keep on seeing each other?\"\n\nIt was his turn to take a deep breath. He turned his head and said softly, \"I think I'd enjoy that very much.\"\n\nThey did see each other. They would walk in the woods, or he would invite her to have a meal with him in the dining room at the center. One day they were outside and it started raining. They hurried to find cover and he was a little embarrassed to see that her white top was wet and he could see her bra through it. She reminded him it was just a bra and she would dry out eventually.\n\nIn late April he picked her up and they returned to the Lake Forest Lodge for dinner and to watch the sunset. Dinner was a 8 this time, since the sun was setting later. It was a warm day with the promise of a warm night, and both wore short sleeves. She wore capris, he wore shorts. They were comfortable with each other now. Dinner was perfect, they shared a hot apple pie dessert, and then the sunset across the lake. It was like a magic show.\n\n\"I'm going to tell my kids about you,\" Hugh suddenly said. \"Maybe I can get permission to bring you to the family picnic on Memorial Day.\" He looked at her as if expecting she might be upset.\n\nInstead she smiled, reached across the table, and took his hands. \"Hugh, I would love to meet your family, but I need to know a lot more about them. Each week I want to hear about another layer of geneology. We start with your kids next week.\"\n\nHe smiled. \"I can do that. I can set up a slide show on my computer and you can come to my room and, uhm, I mean, I can let you look.\" There was a glint in her eyes. He'd seen that glint before, in both Betty and Ethyl.\n\n\"In your room? My my my, you do want it all, don't you?\" She laughed before he got too self conscious. \"When we finish your family, we start with mine so you'll be ready by July 4 or Labor Day.\"\n\nThe rest of the evening was pleasant, though he was afraid he had stepped too far. She seemed to go with things. It did amaze him how similar she was to Betty. He kept reminding himself Batty had not come back in another person. He drove Ethyl home and they talked about their next meeting.\n\nParking the car on the street, he went around and opened the door for her. It wasn't really chivalry. He had gotten to where he did that for Betty because it was difficult for her. He walked Ethyl to her door and she thanked him for a wonderful night. The stars and moon were shining in the sky, he thought they reflected from her eyes, and then his lips were on hers.\n\nFor a few seconds he was shocked that he had been so forward, kissing without permission. She might reject him. But then he felt her arms around him and he let the kiss continue. When they finally broke, she spoke first.\n\n\"Oh my goodness, that felt really good. I haven't had that in over 10 years. Thank you, Hugh. Thank you so much.\"\n\nHe was flustered. \"Ethyl, I hope, I mean, that was so good, and I sort of, well ...\"\n\nShe smiled and let him go on for a while before putting a finger on his lips. \"Hush. You aren't dead yet. Honestly, that's one of the best compliments I've had in years, but if you hope to use that thing for more then pushing against my belly, well, it's been a long time and there's work to do. Now, good night. Dream of me.\" They shared another kiss, him trying to pull his hips back, her holding them tightly against her, then he broke off and went home to try to figure out what was happening.\n\nTwo weeks later he told her he had permission to bring her to the picnic and they celebrated two months of knowing each other with a trip to a local restaurant for a burger and a beer. It was just a bit more than two months, but both felt it had been so good they needed to celebrate.\n\nAs usual now, he had picked her up, and now took her home. She led him by the hand as they went into her house, and he opened his hand to drop hers once inside. She held his hand, tightly, surprising him, and led him to her bedroom. He was rather uncomfortable, knowing this was where she had been with her husband.\n\n\"Hugh, I feel like things between us are going really well, and may be headed in a certain direction. I just want to be very honest with you. Don't run off, please.\" Ethyl pulled her top over her head and tossed it onto the bed. He could see that she wore a full bra, as he had noticed she always did, but really, most women her age weren't wearing sexy lace under their shirts. Then she took off the bra and tossed it onto the bed.\n\nHis look of surprise didn't fade when the bra landed with a soft thud and bounced. He wasn't looking at the bra. He was looking at her chest. Her beautiful chest with two long, horizontal scars where her breasts should have been. One odd looking nipple. He looked back to her face. \"Ethyl, why are you doing this?\"\n\nHer eyes stayed on his. \"I'm tired of hiding this part of me. If we get intimate, I want you to know this is all I can offer you. I'm too old to be embarrassed by showing skin.\"\n\nHe nodded a little, then gently held up his hand, one finger extended, and asked, \"May I?\"\n\nShe nodded and he touched her, running his finger lightly along the scar from the right side, then across smooth skin and across the scar on her left. She smiled. \"That's more than Grant touched in 12 years.\"\n\n\"Then he was foolish,\" Hugh responded, a little surprised at his forwardness. \"What's the nipple thing?\" His finger kept moving back and forth and he took a small step closer to her.\n\n\"They were taken 10 years apart. After the first surgery I got an implant. They tattoo on an areola so it looks more natural. That was back before they tried to save the nipple. So, I'm a girl with a tattoo.\" She laughed her light, happy laugh. \"It wasn't comfortable, though. They took a lot of skin in the surgery and what was left had to stretch. I always liked laying on my belly, but that bag of a breast pushed against me and hurt. When I had the second surgery, I decided to just do bra forms and had them take out the implant.\" Hugh looked at her, eyebrows up. \"Grant had a fit and tried to get me to change my mind, and maybe even get larger breasts put in. I think part of not touching me was payback for my decision.\"\n\nHe was very close to her now, holding her sides, looking into her eyes. \"It wasn't his decision. Your body, your comfort, your decision.\" His lips pressed against hers and she put her arms around him. No clothes went flying. They were 78 and 80, after all, but in time they were on the bed naked.\n\nHe kissed his way down, then kissed her womanhood, licking, preparing her as much as pleasing her. He responded when he heard her moans of pleasure. When he thought the time was right, he moved back up, kissing, licking her scars. When his mouth once again met hers she reached down and grabbed his shaft, guiding it to her as she whispered, \"Be gentle, it's been years.\"\n\nThe beginning was good. He was as gentle as he had ever been, moving steadily, listening for her responses, feeling her hands on his naked body. His body let him down, though, and despite everything they tried, he felt himself fading to softness. Finally, it seemed the more he tried, the less he responded and she kissed her way to his ear before whispering, \"Hugh, it's good. We can stop here.\"\n\nHugh looked into her eyes with his own, wetness showing. He so wanted to give her fulfillment, so wanted to share this intimate time with that most wonderful part of sex, and he couldn't. Ethyl pulled him down, holding him close as he continued to soften and finally fall free of her. They pulled up the sheets and she turned off the light, closing the door rather than going through the house to turn off lights and ruining what they had. Then they slept.\n\nHe woke early, but she was already up and making breakfast. She wore a light robe that came to her knees. He wore only his boxers. On her face was that smile that seemed almost permanent.\n\n\"Ethyl, I'm, I don't know what happened. Suddenly I just wanted ...\"\n\nShe put down her spatula and walked over to him. \"Good morning to you, too. You silly old goat, I'm not a teenage girl getting seduced by an older man. If I'd wanted to say no, I would have said it.\" She hugged him and looked up for a kiss, which he willingly gave her. \"As for this,\" she gently grabbed his cock through the cloth, \"if it works that's nice, but your mouth was really good. Just being that close is exciting for me. I've missed that for a lot more than three years.\"",
        "After breakfast they showered together, commenting as they dried off that it had been at least 30 years since either had showered with somebody else. Then he returned home and logged onto his computer. It was time to begin putting his thoughts down.\n\nIn early May, he happily agreed when she asked him to go to a garden center and help her pick out flower boxes for her house. She had a hard time bending to weed and care for a regular garden, she told him. He was doing things he had always balked at before, and could only think it was because he had a second chance to be with somebody special. Many nights he would think back on the day and regret not spending that time with Betty. She had been so good for him, and the years had made her seem so common. There was also the ever-present knowledge that he didn't have years and years with Ethyl, and the time needed to have more meaning.\n\nOn the even numbered Saturday, they drove to the cemetery. Ethyl walked on to her husband's grave, giving Hugh a few minutes by himself. He looked at the headstone, wishing he had left the clippers in the back of his car.\n\n\"I hope it's ok, Betty. You'll always be my first love, and I'm sorry it took the second one to show me how much I took you for granted. She'll be meeting the family soon, and I'm sure they'll all love her. Except maybe Cass. She was so close to you. Maybe you can whisper in her dreams so she'll be more welcoming. I miss you, girl. Ethyl isn't a replacement. She's a gift for after you went away. You'll always be in my heart.\"\n\nHe glanced up and saw Ethyl walking over, realizing she had been standing aside waiting. She spent less and less time actually at the grave, but she was sweet enough to give him time alone with his wife. She was special, and he felt so lucky to have had two special women in his life, even if he was a selfish bastard.\n\nBy Memorial Day they had been seeing each other for almost three months, he had spent a few nights with her, and they had developed a kind of intimacy that worked for them. This was a major step, though, moving their relationship out in front of the family. They arrived early so Ethyl could meet them more one family at a time. Everybody was welcoming, some of the younger ones calling her Grammama because they were uncomfortable with using a first name. And then came the test.\n\nThe family made the rounds as a group, father and mother leading their two children, and when they got to Hugh he got hugs from three of them. Cass just said, \"Hi Gramps,\" and was on to Ethyl. Ethyl, who always seemed to have the sparkling smile. They all waited, and it didn't take long.\n\n\"Ok,\" Cass led off, \"so you're the woman who's trying to make my great grandfather forget he was married to another woman.\" Cass's mother opened her mouth to speak, but Hugh made a motion to shut them all down.\n\nThe smile was still there, with a twinkle in her eye. \"You must be Cass, the woman who decides what she wants and says and does whatever the hell is on her mind without caring shit about what anybody else thinks.\"\n\nThe parents were stunned and looked from Ethyl to Cass to Hugh. Hugh was smiling and nodding. When they looked back to Cass, she was smiling as well.\n\n\"I guess you aren't dainty all the time. Nobody in my family, except Gramps, ever talks to me like that.\" She looked down for a moment. \"Or, Grandmother.\"\n\nEthyl still hadn't moved. \"Honey, I'm not your grandmother and never will be, but that doesn't mean I can't care. You're halfway from what Hugh tells me? If he's right, you look great.\"\n\nCass looked back, now showing surprise for the first time. \"Gramps told you? Shit, I though he didn't even notice stuff like that. Yeah, halfway. We hope. The little girl is kicking me around pretty good lately. Should I be worried?\"\n\n\"That might be a better question to ask your mother or grandmother.\" She saw Cass scowl and send an angry glance toward her mother. \"Meanwhile, will I get to meet the father today?\" Ethyl managed to defuse every situation with tension and learned a lot by asking questions. By the time food was ready, Cass wanted to sit with Ethyl. They talked about babies, and how surprised Cass was that the older woman wasn't shocked by the pregnancy.\n\nThe smile faded a little. \"Cass, honey, we're a lot alike, and very different. I had my first child when I was 19. I was married, but had the wrong man. You'll be 18, not married, but from what I've seen and heard, he's the right guy for you. Then again, it took me three tries to find the right man, so I may not know what I'm talking about.\"\n\n\"Eth, I, OHH, sorry, I, is it ok if I call you that?\" The older woman nodded, smiling at the brazen, wonderful impertinence of it. \"Are you Grammama come back? You're so like her. Or maybe it bothers you to have us compare her.\"\n\n\"Everybody here seems to have loved Betty very much. No, I'm not her, and I'm very different in some ways. You were all very lucky to have her and I had to wait my turn. But keep in mind, I have my own family, and we have our issues as well. Grant was an ass a lot of the time, but one thing he always said was that the peace of a family comes from the top.\"\n\nEthyl made sure to spend time with Cass's mother and grandmother and assure them she was not out to displace them. They seemed to truly appreciate her taking the time with Cass. As people began leaving, they each took time to say goodbye to Gramps and Ethyl, thanking her for coming and saying they hoped to see her again.\n\nThat night, Hugh stayed with Ethyl. He cuddled and kissed, but there was something on his mind and he wanted to talk about it in the morning. She told him he had a wonderful family. And then they slept. Hugh woke twice in the night, but he felt peace after the second time when he talked with Betty. Of course, the conversation was all from one side, but he felt better after 20 minutes and went back to bed.\n\nAfter a nice breakfast, he decided it was time. \"Ethyl, I've been thinking about us. I'd love to have this keep going, but I don't think marriage would be a good idea and don't want you waiting for something that won't happen.\"\n\nShe walked over and put her cup down hard on the table. \"How dare you think you'd get to marry me just because I let you sleep in my bed and because I make you breakfast. Where do you get these crazy ideas from? Honestly, I had no intention of ever marrying you.\" She tried, she really tried, to keep a straight face, but after 30 seconds of looking at his stunned expression she burst into laughter.\n\n\"Oh Hugh, how could I not be flattered. But I've thought about it as well and come up with the same answer for the same reasons. We have something special, but our affairs are in order and there are so many things that can happen at our age. Why risk a mess that doesn't need to happen?\" She turned his chair a little more and hiked her nightgown so she could sit on his lap, facing him. \"Oh, if only we were 30 years younger. OHHhhh, Hugh, you dirty old man. I feel that.\"\n\nHe looked embarrassed but she got off his lap and took his hand, hurrying him to the bedroom. He used his mouth to arouse her more and prepare her, she used her mouth to get him hard, and then a couple more times to restore the firmness when it began to fade, and finally he reached his climax. She didn't quite go over the crest, but it put a warm glow in her that was just as good right now.\n\nOn the Fourth of July it was time to meet her family. His natural desire to be alone rose up and he had to fight it, but then when he actually met the family he found it much harder to fight. Where his family was mostly in harmony, hers was broken into small groups. Her son and daughters were obviously just waiting for her to pass so they could get their inheritance, and the grandchildren were all busy with their own children, many of whom were unruly to the point Cass looked well behaved. There were a few really nice people, but he struggled to understand how somebody as kind and loving as Ethyl could have a family so full of anger and greed.\n\nAs they drove home, she confided that Cass had been calling her almost every day. She enjoyed being trusted, and tried to give advice that would support the whole family, but she did not want to tell the younger woman to stop calling. She said it was a critical time and if Cass wouldn't go to her family, she felt she needed to be there.\n\nHugh nodded and decided not to say anything right now. Instead, he asked how her family was so messed up. For the first time, he saw anger in her eyes and heard it in her voice. He had touched a nerve and made a mental note to never go there again. When she was done berating him for judging her family harshly while she tried to be so supportive of his family, he simply nodded and said, \"You're right.\"\n\nIt stopped her in her tracks. She pulled to the side of the road and looked at him. \"What did you just say? And did you mean it?\"\n\nHe was a little confused, but he answered her. \"I said you're right. I just met your family and maybe the first impression was wrong. You've got some good people tucked in there, but I guess most weren't trying real hard to welcome me.\"\n\n\"Huh!\" She grabbed the wheel and put the car in drive again. \"I think that's the first time a man who wasn't my son or younger ever told me I was right about anything.\"\n\nHe was quiet for a moment, then said, \"In the not very humble opinion of this selfish bastard, they were fools.\" Inside, he couldn't believe he said that. He loved Betty, but had a very hard time admitting she was right because it usually meant he was wrong. But second chances were hard to find, and he didn't want to waste this one.\n\nThey continued going out almost every day, and by this time the people at the retirement community knew he wasn't spending much time in his apartment. Her home was very inviting, and she made sure her bed was also inviting. They rarely did more than snuggle, but at their age it seemed enough just to hold each other and enjoy the company.\n\nIn early August, Cass called while Hugh was with Ethyl. She gput a finger to her mouth to tell him to stay quiet and let him listen. Cass was feeling a lot of kicking and some pain and wanted to know if that was normal. What struck Hugh the most, she sounded downright scared. Ethyl spoke calmy, encouraging her, and several times asked if she had talked to somebody in her own family about it. Each time, Cass gave a reason for not talking to them.\n\n\"Cass, honey, I really appreciate you asking me for advice, but I last had children a long time ago and you have a mother, aunts, grandmothers, so many people who have had more recent, more modern experiences. I wish you would also talk with them.\"\n\n\"Eth, they don't understand me. They all just want to say it's my fault for spreading my legs before I was married. Come on, out of all of them not one did the same thing? I just can't believe that. You don't judge me. I feel safe with you.\"\n\nEthyl sighed and looked at Hugh with a 'what do I say now' kind of look. \"Cass, you're right. At least one of them probably did spread their legs before they were married. But you got pregnant and it might remind them of the risk they took. Life is complicated, honey. They worry you may not be ready, and now you're adding a baby.\"\n\nThere was a short silence. \"I chose to keep the baby. I talked with Rand and we made the decision together. I think I'm ready.\"\n\nHugh was surprised by the laugh that came from across the table. \"Cass, honey, I'm 60 years older than you and I don't think I'm ready. You make it up as you go. Just remember, if something doesn't work, you can try something different next time. Don't ever feel you've got all the answers for raising a child and you will likely do well.\"\n\nWhen the call ended, Hugh looked at her. \"Eth?\"\n\nShe wiped a tear from her cheek and smiled. \"I hate it, but if it keeps the door open, she can call me whatever she wants. You heard her. Always an answer why it's me and not her mother. There's a crisis point coming, Hugh, and I really need you to stand with me when it comes.\"\n\n\"If I feel it's the right thing, you know I'll be there for you. And I can't imagine I won't agree, so, I guess I've got your back. It's a pretty nice back to have.\"\n\nShe got up to tease him, waving her ass in front of him, but he got her back and surprised her by reaching around and opening her button and zipper. While she made a half hearted protest, he pulled her pants down and kissed her. She was barely aware as he kissed his way around her hip, then he was kissing her belly, helping her sit, and spreading her legs. This time he succeeded and she climaxed. She caught her breath, then he pulled her to the floor and they held each other as they lay on the carpet. Twilight love, she called it later. Just obeying an urge to please the other person, enjoying the time left in every way, emotionally and physically.\n\nThey were planning to be with his family again on Labor Day, but a week before, at the end of August, Ethyl got a call from Cass. \"Eth, my water broke. I don't know what to do. Can you come over? If I need the hospital, I'd like you to go with me.\"\n\nHugh and Ethyl exchanged looks, but he couldn't read what she was thinking. \"Cass, are you at home? Stay there and we'll be over as soon as we can.\"\n\nShe ended the call and looked at Hugh. \"I need you to support me on this. Whatever I do, I have to know you're completely with me on it.\"\n\nHe smiled. \"I should insist on knowing your plan, or at least what you're thinking before I agree to anything. But you seem to have a pretty clear idea. I think going to the hospital with her is a bad idea.\"\n\n\"Hush, and don't ask questions. This is it, and it works or it doesn't. Let's go before she panics.\"\n\nCass was standing outside with a backpack when they arrived. She ran right up to the car and reached for the door, but Ethyl got out quickly and stopped her. Brenda came out of the house with an angry look on her face. Once again, Hugh stepped in, simply putting a finger to his lips to stop his granddaughter. He motioned her to join them and noticed Cass moved to keep Ethyl between her and her mother.\n\n\"Hello, Brenda,\" Ethyl said. \"Can we help with something?\"\n\nBrenda glanced at her grandfather, who nodded, then back at the older woman. \"Her water broke. She didn't want to tell me but I couldn't help but notice the wetness on her shorts. She needs to get to the hospital, but she won't even talk to me. I didn't realize she had called you until you pulled up.\"\n\nEthyl nodded. \"I see. Cass?\"\n\nCass saw her chance and started laying out everything. \"She doesn't love me. She doesn't even care about me. This is all about her being embarrassed. She wanted me to get rid of the baby, then she wanted to hide me, and now she wants me to get into a car and trust that she'll get me to the hospital. No way. Eth, you're the only woman in the family who has shown any concern. Nobody else cares.\"By the end she was hugging Ethyl so hard that it took considerable effort to pry her arms off.\n\nOnce again Brenda wanted to talk, but this time both Ethyl and Hugh hushed her. She looked at them with a lost look in her eyes, but Hugh had his twinkle and a slight smile that told her to relax and wait.\n\n\"Brenda, do you have Rand's phone number? Good, go inside and call him. Tell him to meet us at the hospital.\" She waited and looked on with mild annoyance when Brenda pulled out her cell phone and started looking for the number. \"Honey, go INSIDE and call. I know you don't need to stand next to a wall, just please do it.\" Ethyl turned to Hugh as soon as the mother was gone. \"Disappear for five minutes.\" Hugh smiled, nodded his head politely, and walked off to look at a flower garden he cared nothing about. \n\nCass looked at her with fear. \"Are you going to abandon me now? You're going to tell me my mother should take me and how that's the right thing, but she doesn't care. She wanted to keep this minute from ever happening. And now you abandon me? I thought I could trust you. Grammama would have gone with me.\"\n\nThe older woman leaned against the car. \"Cass, honey, I'm not going to abandon you. One way or another, Hugh and I are going to be at the hospital with you. But let me talk about a little reality.\" She motioned for Cass to a spot next to her. \"First, I'm not your Grammama. She has a special place and I'm not her. Second, I'm not young. I might be around another 20 years to see you become a grandmother, but I may not. Your mother, though, will probably be here longer than me. There are things you will want help with, or just some advice now and then, and I may not be around to help you. She will.\"\n\nCass reached out to hold hands. \"But she doesn't love me. And she doesn't love my baby. Why would I care what she thinks?\"\n\n\"Oh, honey, because she does love you. Ok, she didn't want you to have a baby, but she didn't really try to force you to get rid of it, did she? And you still have her roof over you? She could have tossed you, baby and all, on your ass when you turned 18 last month. She's afraid for you, and some of that fear is for good reasons. You're young and have stars in your eyes of what having a baby will be like. She knows the work you have ahead of you.\"\n\nAfter some silence, the younger woman asked, \"So what do I do? Trust her?\"\n\nEthyl smiled. \"Eventually, yes. For now, start building a bridge. Let her at least share your excitement. She's going to want to find out what I told you, and I want to be honest with her. She needs to start building from her side, too.\"\n\nCass looked around and laughed. \"You know, Eth, you're a real powerful woman. You tell mom and Gramps to get lost and both of them stay away until you call them back. Ok, I'll trust YOU. And you'll be there?\"\n\n\"I'll be at the hospital with Hugh. Rand and Brenda will be with you when the baby is born. I think that's how they do it now. When I had my children, nobody was allowed near me. Looking back from now, I think that's a very lonely way to have a baby, without family in the room with you.\"\n\nEthyl motioned and Brenda came out, calling to Hugh who was watching a bee move from flower to flower. Cass drove with her mother, while Hugh and Ethyl followed. Rand met them at Labor and six hard hours later there was another baby girl in the world. The young mother smiled when she said proudly that the baby would be named Betty Ethyl. Rand just smiled and nodded agreement.\n\nWhen Hugh and Ethyl got back to Ethyl's house after their very long day, he turned her around and gave her a long kiss. \"You're amazing. Nobody but Betty could ever tame that girl and you managed to get her calmed down and going with her mother in about five minutes.\"\n\nShe smiled. \"I just cranked the engine. Now they need to get things working. You know, Hugh, I understand Brenda, and agree with a lot of how she feels. I also know that Cass needs to absolutely know her baby is accepted, and that she is accepted. I was a young mother. Not quite that young, but still, it's a lot of work and she doesn't need to be pushing people away.\"\n\n\"She's certainly been a handful. I wish I could enjoy a handful of you, but I'm beat.\"\n\n\"Me too, but I'll make you a nice breakfast. Now let's get off to bed before we both collapse.\"\n\nIn the morning, Hugh woke up and realized Ethyl was already out of bed. He could smell bacon and knew he was expected up to get his hot breakfast. Walking into the kitchen he stopped short and rubbed his eyes. She was turned with her back to him, working at the stove, wearing only an apron. Her cute ass was bare to him and he felt his response quickly.\n\n\"Finally awake, Mister Sleepy? You have 30 seconds to get out of those boxers.\"\n\n\"Yes Ma'am,\" he grinned and quickly pushed them to the floor. He was a little surprised when she didn't turn to him. Instead, she spread her legs and leaned over, resting her elbows on the kitchen counter.",
        "\"Your choice. You can have hot woman and cold breakfast, or hot food and cold ...OHHhhhh.\"\n\nHe had taken advantage of the time she was talking and made up his mind. Her sentence ended when he put his hand on her ass, lovingly running his palms across her curves. She reached for the lube she had put on the counter and handed it to him. After applying a generous amount to both of them, he put the tube down and pushed into her, gently, working his way in with short, slow thrusts.\n\nWith patience and time, he was able to stroke his full length, and as time passed he was surprised he kept his erection enough to continue. His hands reached around to tease her breasts, slipping under the apron top, or under the flap that now hung from her waist to tease her clit. She was breathing harder, but he sensed a difference from past love making. After a while, he pulled back and tried to turn her to face him, but she got upset.\n\n\"No, Hugh, please, just keep going. Follow me on this, please. It's important.\" Her voice was choked, full of emotion. Unsure of her reasons, he began thrusting harder and was reassured when her moaning grew louder and more intense.\n\nWithout warning, she turned and dropped to her knees in front of him, grabbing his cock and stroking him hard and fast, as if he might fade any second. She was so beautiful in front of him. She looked up and their eyes met. In a minute he was tensing, arching his hips forward. Then he released, watching as his cum arced through the air and dropped onto the apron she wore. In past years, he could have coated her breasts, but now, in his 80s, he dripped onto her legs and, as she slid under him, her apron.\n\nShe squeezed out the last of his cream, ending by sucking on him as he quickly returned to his normal state. Their eyes met again and he saw her eyes were smiling through tears. He dropped to his knees in front of her and pulled her close, feeling her sobs and leaving the story for later.\n\nAfter holding her for several minutes, he decided it was time to ask. \"Ethyl, what was that about? You had a reason, and as much as I enjoyed it, there's more. I want to know.\"\n\nHe felt her cheeks tighten into a smile. \"It was a fantasy, delayed by several decades. My first husband, we had two kids at the time. I wanted to surprise him and dressed in just an apron when he got home from work. At first, he was excited. He got his pants off, and I didn't need lube back then. Oh, it was so good. Then Meredith started crying. More a screaming cry. It couldn't be ignored, even though he wanted me to ignore it.\"\n\nEthyl paused and he felt her hold him tighter. \"I went to take care of her. She had gotten her leg stuck in the side of her crib. Morris didn't care. He got on me about getting him excited then dumping him for the kid. We were divorced a year later, five months before our third child was born. Everything changed. I just, I needed to finish. Hugh, you're so amazing, I wanted to finish with you. I hope you understand.\" She was sobbing by now, totally wiping out his enjoyment of what they had just had, but he didn't care. She was releasing her pain, and he could help her with the time he had left. To him, it was a fair trade.\n\nAs was the cold bacon and eggs they ate. He told her how happy he was that she trusted him, and how amazingly blessed he was to have had two wonderful women. She told him how fortunate she felt, after a failure, a \"got through it\" relationship, and some time alone, to have found somebody she felt she could trust. He understood why she had treated Cass as she had. Nobody had helped her through the pain. She was there for the younger woman.\n\nLabor Day was different from Memorial Day, because now there was baby Betty. The family seemed to rally around the newest member. Ethyl was always nearby, but made sure Cass handled almost everything by herself. They had developed a bond that was stronger than even the family, and both knew and trusted that it was the best approach. Brenda even talked to Ethyl and thanked her for influencing Cass. For her part, Ethyl told Brenda how important it was now to dispel the memory of wanting to end the pregnancy. \"Love the child with everything you have,\" was her advice. Brenda hugged her.\n\nHard discussions followed. They decided to do Ethyl's family for Thanksgiving and Hugh's family for Christmas. She insisted, however, that she be allowed to invite Cass to her family's gathering in November. By this time, Hugh was past questioning. He knew there was a reason, and he agreed. Cass was less sure, but trusted Ethyl, and said she would see, but only if Rand was also invited. It took some arm twisting, but the family agreed.\n\nHugh and Ethyl continued seeing each other. Ethyl continued to keep in touch with Cass. Ethyl was assigned the role of honorary grandmother to little Betty, and even her mother agreed to the title. It was fun for her to see mother, daughter, and now the daughter's daughter, growing closer. Hugh loved Ethyl and all she did, but he was sensing that this was a time when Ethyl was pulling together loose ends. Unfulfilled dreams, relationships, even her way of handling people, all seemed to be making up for things gone wrong.\n\nOn Thanksgiving, Hugh drove them all to the rented hall the family was using. There were too many people to fit inside anybody's home and with the November weather a question, everybody put in a few dollars to rent a hall. By going together, Cass knew she couldn't just walk out if she was a little uncomfortable. Happily, a baby brings a lot of good attention and few of the guests seemed to care that mother and father weren't married. \n\nAn hour later, Cass was sitting in a corner, blanket over her shoulder while she nursed her baby. A girl about her age walked up and sat next to her, arms folded, legs apart with the hem of her black lacy poodle dress pushed down between them. She sat in silence for a while as Cass tried to figure out why she was there. Rand came over, but Cass shook her head and he moved away again. From across the room, Hugh watched and thought she was definitely absorbing Ethyl's influence. He smiled and whispered something to Ethyl.\n\nFinally the girl spoke. \"Did your parents give you a bunch of shit about the baby?\" Her head hadn't turned, but there was no question who she was asking.\n\n\"Yeah, my mother and grandmother especially. It was really rough.\" She checked the time and adjusted the blanket.\n\nAfter a long pause, the girl finally turned to look at Cass. A scowl seemed permanently fixed on her face, but the eyes were wrong. They showed pain. \"At least you know who the father is, I guess.\" She started to stand, but Cass reached out quickly and grabbed her hand. The blanket slipped from the sudden movement and now there were a few shocked looks, but Cass kept her focus, as she had learned to do.\n\n\"Sit, please,\" she told the girl, then while she adjusted the blanket to cover her breast again she stuck her tongue out at the gawkers. That brought a giggle from the other girl and a few smiles from people watching. \"How far are you?\"\n\n\"Seven months. I told my grandmother in July. I guess she kept it to herself. You're from the old guy's family?\"\n\nCass smiled. \"Old guy. Don't let Gramps hear you call him old or he might sprain something trying to prove you wrong.\" The girls laughed. \"Yeah, he's with Eth. Actually, he's my great grandfather, but everybody just calls him Gramps.\"\n\n\"He seems like a nice guy. So out of place with this family.\"\n\nThe baby was shifted to a shoulder for burping. \"He was always a bit uptight, but Grammama kept him in line. He got really gloomy when she passed, then when he met Eth it was like watering a flower that was almost dead. He's got a twinkle in his eye again and a woman to keep him in line. Men need that, you know.\" She grinned and lowered the baby, reaching under the blanket to clip the bra cup up and adjust her top. \"You don't know who the father is?\"\n\n\"I was told not to go to the party, but what's a window if you can't sneak out of it once in a while? There were drinks and drugs and after an hour I don't remember anything. By then I was already naked, I know that much. One of my girlfriends told me the guys just kept taking turns. I was sore and a mess. And pregnant, though of course I didn't know that at the time.\"\n\n\"Damn. That's a hell of a way to do it.\" She looked at her baby, then at Rand chatting with a group of younger people. \"I guess you're keeping the kid. Oh, I'm Cass, if you didn't know.\"\n\nThe girl looked at her feet. \"I try not to use my name much any more. It doesn't seem to fit.\" She waited, then in the silence looked at Cass who looked back, waiting. \"Hope. I'm Hope. I think my parents were hoping for something better.\"\n\n\"I like that name. I think it suits you. And as long as you have Eth in your family, I think you'll have hope.\" She smiled and looked at the ceiling. \"Damn that lady rubs off on you if she gets a chance. I can't believe I'm not being a bitch. She told me I can still be myself, but I need to also be a mother now.\"\n\n\"Yeah, she's good now. For years she just looked the other way. My grandfather would flirt with the girls, pat our bottoms, I wouldn't be surprised to find he took some of our mothers to bed. My grandmother put up with him. I think your Gramps is part of her pennance. She has to be with somebody nice now to pay for not doing anything before.\"\n\n\"They're good for each other, for sure. I think they even have sex, if you can imagine people that age moaning and messing up the sheets.\" They laughed and talked about life, Hope asking a lot of questions about being a young mother. They sat next to each other when they ate and by the end of the day had exchanged phone numbers and addresses.\n\nAs Hugh drove them home later, Cass asked, \"Eth, did you invite me just for Hope?\"\n\nEthyl was silent, knowing she was caught. \"She needs a friend. I was hoping you wouldn't mind.\"\n\n\"No, I don't mind. If you had told me, I would have been different. I hope I get as wise as you one day.\"\n\n\"Honey, I hope you don't have to learn it the way I did. You talked with her a lot. I'm sure she told you about my failures.\"\n\nThey arranged for Hope to spend part of Christmas with her own family, then join her grandmother for the evening with Hugh's family. Cass met her at the door and introduced her to her sister, brother, and parents, then any other introductions came as they met people. This time, black poodle dress or not, she was definitely looking pregnant. Both of them were surprised when her older brother asked to feel if the baby was kicking. He explained that he was enjoying being an uncle and had missed that part because he was too much of a jerk about the situation when it was his sister.\n\nCass and Rand took the opportunity, with most of the family gathered, to announce that the end of June would bring a wedding. Hugh and Ethyl were among the first to congratulate them, everybody else making way for the family patriarch. Little Betty would be nearly a year old, but it also meant they needed to find a place to live together. Both were still living with parents.\n\nEthyl drove Hope home after the party. Hugh said he wasn't feeling up to driving. She thought he looked a little pale and suggested a stop at the hospital on the way home. He declined, saying he'd be fine and she surprised him by driving him back to his place. \"You need to be where you can get help if you need it. I don't like how you look, but I'm not going to fight with a stubborn old coot to change your mind.\"\n\nIt was the first night in months they had not been together. Christmas had been good, but now it had an ending that took the shine off the day. She was back to check on him in the morning. Some of the staff noticed her come in alone and were surprised, having gotten to know her over the months. She had a stern look on her face, but it softened once she saw he had his color back and was obviously feeling better.\n\nThey celebrated the new year at her house, fulfilling a fantasy both had held onto for decades. They drank champagne and danced naked. After a few songs, he sat her in a chair and gave her new year's fireworks with his mouth. She tried to return the celebration, but this time he wasn't responding and they agreed it was time for bed. She knew she couldn't call his doctor, but the Christmas incident and now this had her concerned.\n\nA few weeks later they got a call from Cass that Hope had delivered a baby boy. They drove to the hospital and joined a small crowd in the room. Hope's parents were there, Cass with Rand and little Betty, and now the two older ones. Half an hour later, they were surprised when Rob, Cass's older brother, arrived with flowers. Cass saw Ethyl turn and kiss Hugh on the cheek.\n\nThe winter was cold and wet, with many days spent at Ethyl's house. Half as a joke, Hugh told her he was going to wear nothing but boxers for a week. She surprised him by saying if that was the case, she was wearing nothing but panties. And that was what they did. He found himself often grabbing her, holding her, kissing her chest and scars, and even following her around the house. Once he managed to get an erection and, with her oral assistance, kept up long enough to make love and empty inside her. She told him he needed to see a doctor, that she didn't like the sudden change. He shrugged it off.\n\nNear the end of March they returned to the Lake Forest Lodge, this time arriving together, to celebrate a year since their first date. There was no sunset this time. It was cloudy and raining off and on, with cold temperatures. They sat inside but as close to the veranda as they could. Ethyl noticed that Hugh was gloomy, reflecting the weather, though he was friendly enough. His mood was off more and more lately, and she looked out the window wishing for that brilliant sunset again, like last year, that would herald the beginning of another year of wonders.\n\nA few weeks later he was at her house and said he needed to lay down for a while. She tucked him in and kissed him, then went back to the kitchen for a cup of coffee. When she sat at the table, she noticed his phone. She knew his PIN, and for a few minutes debated with herself, then picked up the phone and unlocked it. The calendar was well used, and she saw that he had been to his doctor several weeks ago. He'd been getting more and more stubborn lately, going back to his selfish bastard role, and she decided it was time to force that issue, even at the risk of losing him.\n\nShe woke him in time for dinner and they had a nice chat during the meal. As she was cleaning up, she turned to him. He was still sitting at the table, swirling the wine in his goblet.\n\n\"I'll be honest. I looked at your phone after you went to bed. What did the doctor say?\"\n\nHe kept swirling his wine, seemingly unaffected by her confession and question. She waited and finally he spoke. \"He said I should have opted for chemo a year ago. Maybe I should have, but at the time, I had no reason to extend life. And then I didn't want to disrupt what we had.\"\n\nEthyl sat across from him. \"The whole time I've known you, you knew you were dying? And for some reason you felt I didn't need to know? That hurts, Hugh. It hurts a lot.\"\n\n\"By the time I decided maybe I wanted to try, the doc said it was already too late. You were right back at Christmas. It was a really bad day, but I wasn't going to miss what might have been my last holiday with the family.\"\n\n\"You sit there and shrug and pull the selfish bastard thing on me and you think that makes it all good? What the hell does that say about how important I've been. I've shared a bed with you, Hugh, and a lot more than that. And you just shrug and say you're stubborn and selfish?\"\n\nHe kept swirling the wine, not drinking. \"Ethyl, you're right, it doesn't make it all good. I was hoping for something better, longer. I was in a dark place and you brought me the sun again. I can't put into words how important that has been to me. I don't want to admit to myself I have cancer. I just can't ignore it any more.\" Now he took a sip. \"And I'm a coward. I left my phone, thinking you might check it.\"\n\nShe took a deep breath. \"Hugh, look at me. No, not the glass. Look .. at .. me. I'm hurt. I feel like you don't trust me, or just wouldn't be honest with me. I asked you about it. I'm not going to throw you out. I want to know what you were thinking.\"\n\nHe finished the glass and looked at the window. \"Years ago, Betty and I took a trip to visit one of our grandchildren. The flight was a little later in the day and the sun set while we were at the gate. It was a really pretty sunset. Before we took off, the pilot told us we would climb back into the sun and could enjoy a second sunset that day. We did. It was beautiful, short, and then the darkness set in as it always does.\" He looked back at her. \"I didn't want to spoil this beautiful second sunset.\"\n\nShe stared at him for a long moment. \"This hasn't done much for mine. But I'm in this with you. We need to tell the family, and we need to get you set up for hospice either here or at the home.\"\n\nThe evening was spent making plans, and discussing what plans were already made. It was their hardest time together, but they were together. They both realized their sexy romps were finished and other things they had enjoyed would be dropping off one by one. He had been through this before, from the other side, but it was new for her and he promised to help her help him from now on.\n\nCass was furious with him for not telling her. She had hoped little Betty would at least be able to recognize her Gramps, but now she might not be a year old when he left them. Ethyl took her aside to calm her while Hugh kept an eye on the little girl. He wanted to hold her in his lap on the chair, but realized he needed to sit on the floor if he held her. As it was, she squirmed so much he had to put her down anyway.\n\nBy the end of April he was in a motorized wheelchair, but they celebrated the anniversary of their second trip to Lake Forest Lodge. This time the weather was perfect and the sunset magnificent. Ethyl commented how it was fitting that the sky was so brilliantly colored since he had lived such a spectacular life this past year. He was tired early and they went home to get him to bed.\n\nShe told the four children to go into his room at the home and sort things out. They went with a list of things she wanted at her house, where Hugh was staying now. Everything else was to be divided among the family or given to a charity. He gave up his apartment, since they were now pretty sure he would be the first to go. Family that lived locally began stopping by more often, but Hugh was now falling asleep several times a day.\n\nMemorial Day brought a difficult choice, but they decided to go to Ethyl's family for an hour in the afternoon, then spend an hour with Hugh's family in the evening. Realizing he was done driving himself, she convinced him to sell his car. He completed the sale, wrote checks for the proceeds for the people he wanted to share with, and Ethyl put the checks into envelopes to take for the family visits.\n\nThe parties were strange with him there. By this time, Hugh was a welcome guest with either family, but they knew this might be his last visit. There were many comments about how sweet it was that they held hands. Hope spent an extra amount of time with the older people, making sure Hugh knew how much she appreciated his support and how good he had been for her grandmother. By the time they were at his family's picnic, he was tired and people had to come to him. Ethyl stayed with him unless she was getting some food or drink and the same comments of how good they looked together helped him smile.\n\nThey went home after their hour and he went right to bed. His envelopes had gone to the youngest of each family, with the admonition to use the money wisely. Several broke down crying, hugging their Gramps and thanking him for caring so much.",
        "The wedding came at the end of June and Hugh and Ethyl were there for a couple of hours. Hugh played with little Betty and talked about how much fun older Betty would have had with her, but the job had passed to Ethyl and she had done an amazing job. The bride wanted to dance with her Gramps, so a few of the men helped him onto the dance floor and he and Cass danced for a minute, then she kissed him and thanked him.\n\nOn July 4, several members of both families stopped by, but Hugh was no longer going out for much more than local visits. He insisted Ethyl continue her weekly visits with Cass and Hope. They had become best friends and they made it easy by being together at one of their houses. \n\nIn late July the time came for hospice and a hospital bed was moved into the living room of Ethyl's house. There would be a nurse all day now. Hugh joked that Ethyl wouldn't be able to flash him any more and he would miss that. The twinkle was in his eyes and everybody laughed at the joke.\n\nFour days later, she woke early in the morning and watched him as the nurse left to use the bathroom. Looking down at the peaceful face with his twinkling eyes closed, she leaned over, pulled her nightgown a little and put his hand on her chest. The hand didn't move, and she could never be sure if he actually smiled or if it was her imagination. She put his hand back down and kissed him softly. \"Thank you for letting me share your brilliant second sunset. Sleep now, sweet Hugh.\" In the early afternoon he had a few minutes difficulty breathing, then there was silence.\n\nEthyl made the initial contacts, then called the lawyer who would take care of the estate. Plans had been made in advance, so there wasn't much to do. Most of his property was already gone. Cass and Hope came over to be with Ethyl and they talked about the past year and how good it had been for them all.\n\nEthyl showed them a note he had left for her. It had instructions on it.\n\n1. Visit the cemetery every even numbered Saturday.\n\n2. Go to Lake Forest Lodge to watch the sunset on our anniversary.\n\n3. Keep an eye on Cass, Rand, Little Betty, Hope, and Gray.\n\n4. Never ever give up.\n\n5. Take the clippers to the cemetery to keep the grass neat.\n\nThey laughed again at the last line. He had managed to keep his humor. Little Betty would never know Gramps, but she would hear lots of stories about him.\n\nA few months later, Ethyl stood in the cemetery. Hugh had insisted she continue visiting Grant's grave, but since Hugh died she hadn't walked the additional distance. She looked at the stone with his name and this year as the year of death. \"It's a lovely day, Hugh. Warm with a slight breeze. You would have enjoyed it.\"\n\nShe knelt on Betty's grave and touched the headstone. \"And thank you, Betty, for sharing him with me. All I have left now is my memories. And Cass. My sunset will be quite different. I'm alone again, but I suppose I have a mission this time. I'll try to keep an eye on your great great granddaughter.\"\n\nShe got to her feet and looked at Hugh's grave again, memories flowing until her tears were flowing with them. She smiled. \"You selfish bastard, you had to go first, didn't you?\" Her phone sounded with Hope's ringtone. \"Hi, honey. What's up?\" Baby Gray had a rash on his arms and Ethyl's expert knowledge was needed. \"I'm on my way, honey. In the meantime, call your mother. I'm not going to be here forever, you know.\" She smiled and got into her car.\n\nThere was definitely a mission. She blew a kiss toward Hugh's grave and drove off to rescue her grandchild."
    ],
    "authorname": "LoxNChanis",
    "tags": [
        "romantic",
        "pregnancy",
        "love",
        "romance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/second-sunset"
}