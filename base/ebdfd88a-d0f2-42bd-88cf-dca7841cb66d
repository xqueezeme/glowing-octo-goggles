{
    "title": "Ashen Master Pt. 02",
    "pages": [
        "Author's Note: This one is heavier on the BDSM Master side with light reluctance again. I hope you have fun again and, as always, feedback is welcome :)! And sorry for the terrible part separation on this one.\n\nJezebel\n\nAfter he used my name, I thought it was all over with, and it left me so frazzled that I spoke without thinking, asking him questions like that about his past because it felt like something had definitely happened there. The more I learned about him, the more it seemed clear that he was capable extreme violence. Strangely, I couldn't say that I had any fear of that violence. Whatever it was, I knew that he wouldn't ever truly hurt me. He was too steady, too calm. Even when his crop felt like it was too much, it never was. He was perfect like that and he looked at me with possession, not murderous intent. I had played with some shady people before, too, when I needed to satisfy my dom compass somehow and didn't want real control, so I knew dangerous violence and he wasn't it. I knew that without even thinking about it.\n\nBut I was still curious. What kind of lines had he crossed? What kind of violence had he done, and why? What would drive him to it? I wasn't sure what made me think that he had been driven to do something terrible, except to say that he had this air of confidence when talking about it that seemed to speak of experience.\n\nBut he left after the movie we watched and I sank against the door, breathing a kind of strangely disappointed relief. He had replaced all thoughts of my drugs lately, fueling me with a kind of continual fear and adrenaline. Each time I toyed with him and teased him felt like another time when he might just decide he tired of waiting for me to give in. It made me flinch to remember calling myself his slave to his face. \n\nAnd yet, I had lain in bed after the night with Deirdre and Lily, and thought that it was wrong for me to have gotten pleasure. That had felt like the most strangely perverse bit of everything that had happened. I had dreams that night of his watching the two of them until they left, and then using my mouth for his release while I was left horny at his knees, eager for more, and pleased to have his approval and the taste of his cum.\n\nGod, what was happening to me? I was in a constant state of arousal and even though I was masturbating more than ever, I felt less satisfaction from doing it, too. My whole body felt like it itched for his dominance, for just one aggressive curl of his fingers around my throat, for one more flick of his crop to command me to be still and stand straight for his viewing pleasure. But he wasn't giving me any of that at all now. He was letting me tease him while taking my own release from his touch, and that was driving me even crazier.\n\nI thought about the night he held me and forced me to look at his dungeon door in silence. He hadn't said a word, and there was nothing but pure menace and threat in his hold. I had merely trembled with my ass up, my face held low, looking at that door and knowing what it was. He hadn't even needed to clarify. I knew with every fiber of my being what lay behind that door.\n\nWhy wasn't I going to him now? He was right. What did I have to lose by giving him just a month? I was bored as all bloody fuck when I wasn't flirting or playing with him. He was my only friend and I was even running out of books to read. So why not just kneel and say okay to that one month? I wouldn't be bored anymore and I could lose myself to him.\n\nBut I needed it to be a struggle. I didn't know why that was the case, only knew that it was probably fucked up, and that I definitely didn't care. His force would be something to make me feel all the safer. On some basic level it felt like proof he could take care of me, that if he had the strength to subdue me, then that meant he was capable in some way. I knew animals acted that way, specifically predators. They instinctively had to be forced because force was indicative of better hunters. It didn't make sense for humans though, unless Norman was onto something with some of his theologies, with the thought that some instincts came from hunter-and-gatherer days, and that humans were the most basically violent of any other predator.\n\nI turned all of those thoughts over in my head while I went to the bathroom, going through the mental possibilities, thinking of him and buried instincts. The only thing that mildly kept the arousal at bay anymore was taking a bath, and these weird mental logical trails, but even they were turning purely sexual in nature. Even so, I tried because I was kind of going insane, kind of dreaming about him every night now.\n\nI got my toothbrush and lifted my head to the mirror, only to try to scream.\n\nThe creature behind me cut me off before I could, clasping one hand over my mouth, while the other arm wrapped around me with a wiry strength that I knew well. And then I got even more terrified than before, when I realized what was happening.\n\nGod, it was him but he was wearing a demon mask, a terrifying fitted skull shape with curling horns above his head. And what was more, he wasn't in a cock cage anymore. No, he was hard as hell against my ass, and I bucked back against that length with a groan behind his hand, even when every instinct told me that this was my last chance to run. If I didn't want to end up on my knees in that dungeon, if I didn't want to lose the entirety of my freedom by the end of the night, then this was it. But I only started to fight after I arched back to his length and felt how large he was.\n\nAnd then I struggled, horny and frantic and needy in his arms. I wasn't thinking at all, which was amazing to me. God, no, I was all need, all feeling, even when I rammed my elbow back against him. But that only resulted in his grabbing my arm and pulling it across my chest in punishment. If I managed to even hurt him at all, he didn't show a thing or make a sound, but of course he wouldn't. His control was so perfect that he had worn a cock cage for weeks now, without letting me see a bit of his denial pain, until he wished to let me know. Everything was always, perfectly, on his terms and this was no different. \n\nHe chuckled in my ear and grappled with me, cooing with little shushing sounds, as if trying to ease the fear of a small animal that didn't know what was happening was for its own good. \"That's enough, lovely girl. Was this your Hannibal Lecter fantasy all along? Was this how you needed to feel your V for Vendetta desire come alive, your Phantom of the Opera romanticizing made real?\" I moaned when all of my secret daydreams came back at me, but of course, they had never been so secret had they? I had teasingly shown or referenced all of them to him. I couldn't look away from that mask in the mirror, from how he looked at me with such possessive violence in his gaze. God, my pussy was drenched, hotter and wetter than it had ever been. \"Fuck, I can smell you, kotik.\"\n\nHe laughed when I struggled all the harder, a dark sound, and I whimpered behind his palm, which he took from my mouth. \"Going to scream out?\"\n\nBut he already knew the answer that. No, I never was. I had only been about to scream out of a jump scare, and I would never scream for help now that I knew it was him. That sense of endangerment grew even more terrible and I grappled against his touch, while he lightly forced me to my small college apartment bedroom. He tore at my yoga shorts, shoving me back so that I fell on the bed, and he tugged them down. He got one leg free before I recovered and tried to kick him, but he caught that easily, laughing, and all he'd needed was one leg free anyway. He was so slight, but his strength was pure anyway, and he was so exact, composed, while my struggles were panicked flailing.\n\nBut I did find one opening. He reached for my hand to turn me on my stomach on the bed, and I shoved, hard enough to break his grip on my waist. I ran for the door, kicking off the yoga shorts, and reached it right as he reached me. And that time, he locked one hand around my throat and used the other to shove two fingers into my pussy, letting me have my hands free.\n\nI didn't do a thing with them. We moaned together, his a deep growl and mine an animalistic gasp of sex. I fell to my knees on the floor and he followed, shoving me forward and thrusting those fingers so that I obeyed his touch with a soft cry. \"That's it. That's enough fighting. I was going to use this hot little pussy, lovely, but now that you made me work so hard for our first time, I think I'm going to make it a nice, hard anal raping instead.\" He undid his jeans just enough to free his cock, and I had to bite my wrist to keep from screaming with the pleasure when he pressed inside of my pussy. Just as quickly he was gone, only using it to lubricate himself with the cum I poured for him.\n\nI clawed at the scratchy carpet when he pressed into my asshole instead, burying my face into it when cold sweat broke over my body from the sweetest pain. But he wasn't having it. He hissed and pulled me up with a fist in my hair instead. \"No, you watch in the mirror when I have you. Watch yourself when you submit.\" Obediently, I did, staring into the mirror on the back of the door, whimpering at the sight of him in the theatrical mask. He looked down at me, watching his cock press inside of me centimeter by centimeter, watching my pain at the pure debasement of it. His lips parted with a heated pleasure at how it must have looked, and I...\n\nI crouched low, arching so that he could have me better, lifting so that he could use me harder and feel me in more pain for him. The sight of his desire, of his pleasure made me mentally soar and that sweet, searing pressure only threw me higher, as if I had been tethered to a wire. He had left my shirt on and I scrabbled suddenly, because that was wrong and I knew it. He was the Master who could wear clothes when he wanted, while I was supposed to be naked in front of him. \n\n\"Good girl,\" he whispered in approval when I yanked the rest of my clothes off, and freed my breasts for him to see. His gaze went to them in the mirror, momentarily distracted from the image of my asshole being stretched around him. He was hurting me and it was the most wonderful thing I'd ever felt. I pulsed around his dick, quivering around him in such a way that even I was aware it was happening. \"Cup your tits and punish your nipples for me. When you feel pain, your asshole squeezes on me and you want to give me more pleasure, don't you?\"\n\nI wanted that more than I'd ever wanted anything. His patient teacher's voice made me love him even now, even if it meant my pain. And I was happy to obey that because somehow the more pain it caused me to please him, the more satisfying it felt to do so, too. So I cinched my nipples, crying out with how hard I hurt myself, and his eyes lit with a dark light. \"What do you say for the chance to please me?\"\n\n\"Thank you, Master!\" It came out of me like a dance I had known my whole life. I knew this. I knew it so fucking easily that it was like breathing for me.\n\n\"Such a good girl. You should have behaved sooner, though. Now that I've felt this tighter asshole, I won't want to use anything else for a while when we're training you in the dungeon. And you do belong in the dungeon with me, don't you?\"\n\n\"Oh yes, Master.\" I gasped when he thrust the rest of the way into me, and finally my body processed the pain and fullness until all that remained was the sharp edged bliss of pleasing him, of being where I belonged. This had been the right way all along. This had been why it felt so wrong to tease him and leave him unsatisfied, while I took my own orgasms. I cried out when he withdrew and sawed back into me, tumbling even further into subspace, flying so high. I twisted my nipples and thrilled to his pleased grunt in response, looking up at his eyes through the bone white demon mask. I saw him through a haze of desire and groaned when his eyes lifted to meet mine in the mirror. \n\nHe looked like a dark god above me, his hands around my waist. He used his grip to pull me back in a strict, hard rhythm and every surge of him in my asshole made me more aware of every sign of pleasure he gave. I thrust my tits out and the motion drew his gaze, made his eyes darken with his delight in the view. I dipped lower in more submission and he growled a low sound of approval. I stared up and hurt my tits, the way he would if it were his hands instead. Time lifted away into something endless and there was nothing but my bowing, letting him use me. He didn't speed up, didn't change his rhythm, instead keeping to his harsh pace, riding me into the floor like I was a little animal.\n\nAnd I no longer fought him at all, didn't even so much as beg for an orgasm. No, even that much didn't feel right with the way he dominated me. If he wanted me to have an orgasm for his pleasure, he would give me one. If he wanted me to have more pain, he would give that too. That latter one was what he decided on, slapping my thighs between his strokes, so that my body tensed and tightened around his fucking. I was torn someplace where I was dying to cum from his treatment, but I also kind of didn't want him to be nice enough to allow me. Part of me wanted to be left to burn for him when he took me to his dungeon, wanted to know that my Master was sated on my body, and I was the one who had been used.\n\nHe hissed a moment later and grabbed my hair, abruptly quickening his pace to something brutal and violent and I pant from the feeling and then I gasped when I felt him go still, moaned when I felt him fill my asshole with his cum. Automatically, from far away, I heard myself say, \"Thank you, Master!\"\n\nBecause he'd filled me and hadn't given me release and I loved him for it, wanted to bow at his feet in gratitude for it. And he let me do that too. He lifted me to my knees and circled around me, his cock softening slightly from his release. He slapped my cheek gently. \"Open up. You clean my cock the same way you clean my fingers and toys.\"\n\nI spasmed with bliss and obeyed eagerly, licking his cock in a slutty way, the way I knew he wanted me to. I sucked greedily, cleaning him and making sure to get every inch of him. When I finally pulled away and met his gaze, he had a faint smile and there was a sense of serenity now that the next steps forward were so very clear, and I couldn't even think of resisting.\n\nI burst into tears instead, wrapped my arm around his calf so that he chuckled and stroked my hair. \"Please, love me!\"\n\n\"Such an emotional little slave. Look at me, Pet.\" Obediently I did, looking up while he bent forward to stroke his fingertips across my wet eyes, lifting them so that I could see the tears on them. While I watched, he licked them off and winked. \"I already do, and already have.\" I went still while he fitted my pink collar on me and this time when he closed it, I bowed my head with the sensation that it wasn't coming off for a long while.\n\n\u2014\u2014\u2014\u2014\n\nAsh\n\nThere was nothing like having her in my dungeon. My blood raced when I unlocked the door and held it open. I stood to the side and made her walk in before me, made her look me in the eyes in acknowledgement of what awaited her. And she did, brave little slave. She looked up, swallowed nervously, and walked through the door so that I followed, locking us both in together.\n\nI wrapped my arms around her while she shivered and took in the sight of the cage in the corner, of the medical table that was centered against one wall with a light that would display her, of the bed that was slightly less of a monstrosity than my own was. She looked around at the implements on the wall, at the suspension hook from the ceiling, at the spanking bench and restraints and harnesses. \"This is going to be your home for the next few weeks,\" I said softly, and she shivered, but her head fell back against my shoulder. She arched to my touch while I kissed her head and tucked her hair back behind her ears. \n\nI took my time now that I had her, even though there was a kind of delicious pain in it. My body craved to have her right then, but I forced myself to turn her in my arms, to lift her cute little shirt over her head, unhook her bra. Each motion felt like an eternity, a thought that made me smile. I had to keep track of things like time, but in this windowless place, she would soon lose track of it and everything else, except for the art of pleasure and giving it. The sight of her nipple under my thumb seemed to taunt me with that thought. The sight of my hand sliding down her cute little workout shorts, and cupping her pussy while she lifted with a cry was even more so a tease. I pulled those down and tossed them to the side with the rest of her clothes. \"You won't be needing clothing for a while. I have different clothes for you.\"\n\nShe stood, shivering with nerves, while I paced away from her to get her wrist cuffs and ankle cuffs. Eventually she'd feel insecure without them, the same way she had once felt insecure without clothes. I had chosen metal for her a while ago, because it was easy to keep clean and multi purpose. Each one would move a little ways on her wrists and ankles, so I could do things like shave her around them, and each one was sturdy. She watched me while I locked them on her, securing her. \"I have a lot of rules in this room, but all of them can be summarized into two ideas, Pet. The first is you obey and you show respect. Whatever I want you to take, you take. Whatever I want to fill these holes with, however I want you to serve, you will. Understood?\"\n\nShe nodded, her eyes wide, and she glanced fearfully at the gleaming silver cuffs on her wrists. I took up the crop since it worked so well and tapped her cheek. \"Eyes on me. You'll have plenty of time to get used to those cuffs, but when I'm speaking and training, you look at me unless I say otherwise. Answer me out loud.\"\n\n\"Yes, Master.\" Her voice was hoarse, afraid, anxious. It was all the delicious things that made me feel my control with every syllable.\n\n\"Good girl. The second idea is that everything in this room is for my pleasure and that includes you, your orgasms, everything. When I want you to cum for me, I'll command you to. Asking for it is a good way to end up with more suffering. If it pleases me, I'll order it, understood?\"\n\n\"Yes, Master.\"\n\nI smiled. \"Good girl. Let's start with some basics, some things you already know. From now on, now that we have those two things clarified, you're on your speech restrictions until I say otherwise.\" Her eyes went wide and she opened her mouth in a panic, but I clasped my hand over it before she could argue. She whimpered instead and I stroked my thumb over her cheek. \"No. Hush. You've done this before and it's no different here. I'll be displeased if I have to get the gag to reinforce it. Is that really how you want to begin?\"\n\nShe hesitated, but then shook her head, brow furrowing. But she was calmer and she went still, eyes on me like she knew. \"Good girl. Trust me. Now, let's start nice and easy. Kneel in your slave pose, the way I like. I want to see you that way, with your pretty cuffs and collar in this room.\"\n\nHer eyes cleared, which was my intent and goal. I enjoyed her fear, but I wanted her to be nice and cozy in this room, wanted her to feel comfortable. It was a harsh room and she would sleep in chains, would learn to feel safe in them, but the key was that I wanted her to feel at home. I wanted her steadied while she slept in regular penetration and bondage. But we would get there. I'm sure she expected me to use her hard and often as soon as I got her in that room, but training took a priority. I wanted her well disciplined before I took my pleasure, and that meant first thing was first.\n\nI was going to condition her to hunger for cock and cum. I wanted her to crave it even more than orgasms and I had already planned out exactly how I was going to do it. I had already planned out all of her conditioning routines actually, but that was the first one I was going to start with.",
        "But even before that, I paced around her, tapping her thighs with the crop to make her spread wider. I lifted her chin with the slapper so that she had to raise up, snapped it against her tits so that she'd thrust them out. She sank down into the obedience easily when given the security of repetition, the comfort of familiarity.\n\n\u2014\u2014\u2014\u2014\n\nJezebel\n\nOh God, he had only just started and I was dying already. Cum ran hot and sticky between my thighs, so that every motion made me more aware of my arousal. It wasn't just that he had used me so recently. It was also the sheer power and dominance in the way he looked in that room. When he crossed to get the cuffs, my skin turned flush with need. When he commanded me to spread wide for his viewing pleasure, my pussy clenched on air and felt so very empty. I had to work to think straight and I stared up at him, giving him my attention without looking away, because I couldn't even look anywhere else anymore. There was nothing so wonderful as the sight of him in that room with that crop. He was a god, a distant creature who I got the joy of serving.\n\nAnd I got to see him like that for a whole month, got to feel his instruction with each and every crop lick, with each hard command. \"Good girl,\" he said when I was posed correctly, and it felt like ecstasy. Shivers of pleasure ran down my spine at the sound of those words. \"Let's see you standing now.\" But when I made to stand, he lifted an eyebrow and chuckled, stopping me. \"You'll learn to automatically clean up the messes you leave.\" He tapped the floor where I had dripped cum and I groaned, bowing low to lap it up, closing my eyes with my desire. And oh, there was so much of it.\n\n\"That's it. Now you may stand.\" I obeyed, vision turning hazy with greedy lust, but I tried to ignore it, remembering what he had said. His pleasure. If it pleased him to have me orgasm, he would make me do so and until then, I wasn't so much as allowed to beg or ask for one. So I stared into his eyes instead, thinking of that phrase. His pleasure. It helped a lot more than I ever would have expected it to. \n\nI automatically spread wide, obscenely wide, like he had shown me with the spreader bar. I arched my back, so that my tits were displayed, and clasped my hands behind my neck, so that I was defenseless and open. And it made him beam with pride. \"Good girl. You remembered well.\" I moaned when he tapped the crop between my legs, watching him smile while he teased me. The haze of lust turned insistent and I made a sound, whimpering with desire, though I didn't dare speak. He didn't want me to, and I was scared of his displeasure in the same way I craved for his pleasure. He switched between tapping my clit and the lips of my sex to slapping my thighs and I rose up on my toes, giving over to the sensation.\n\nAnd that's when he stopped. I whimpered again and his smile deepened, his eyes darkening with satisfaction at my obvious arousal and discomfort. Instead of answering it, he circled around me and stroked a hand around my waist, instead asking, \"Are you hungry?\"\n\nI had to work to even focus on the change of pace. I made to open my mouth, but he was kind enough to stop me with a finger over my lips. \"It's a yes or no question,\" he said softly. \"Nod or shake your head.\" And there was no anger. There never was with him. There was only stern reprimand when I failed him or strict reminder that I shouldn't fail him. This was the latter. I thought about his question, trying to think. Yes or no? Wasn't that supposed to be easy? But my mind said that I should be hungry while my body said that I didn't feel that way, but that was probably only because of nerves. And food would be a bodily pleasure that might temporarily get my mind off the unrequited pleasure I was suffering. \"Pet, that's enough.\" He smacked my cheek so that my mind snapped back to focus on his eyes, on his pleasure. There was exasperation in his gaze and that made me whimper. \"My patience is not without end. Yes or no, it's simple.\"\n\nI nodded, mostly because I hoped food would get my mind off of how horny I was. And that assumption? Oh, it was dead wrong.\n\nHe smiled in encouragement. \"There, see? It was that easy, Pet. The next time you let your mind go, I'll refocus your attention with clover clamps.\" I shivered with dread and nodded that I understood perfectly. My focus was to be totally on him. Bad Pet. No. \"But I'm glad to hear you're hungry. It gives me a chance to acquaint you with your new predominant form of eating. Breakfast will be the only exception. Come here and let me show you how it works.\"\n\nHe pat the spanking bench, which made me curious as to how this would go. I watched him warily, suddenly cautious as to what kind of food would involve the spanking bench, but I lowered my hands and automatically got to my knees to crawl to him. It had been another lesson of his that he preferred my crawling and it was obvious I pleased him by remembering. He pet my hair lovingly. \"Bend over and reach your hands down to these bars here.\" He indicated the other side of the bench and when I crawled over, the result was an actually fairly comfortable position. There were two little holders for my knees, and they were cushioned so I could stay in that form for extended lengths of time. He chained my ankle cuffs to the strange backwards stirrups and then chained my wrist cuffs to the bars that I held. When I was safely cuffed and tethered, he checked me over with a loving brush of his hand down my body, and then he went and got a strange kind of post, adjusting it so that the top was level with my face.\n\nI felt my eyes go wide when he came back with a molded cock toy. And I wasn't sure, but it looked a lot like one of the realistic shapings that could be molded after a partner's cock. While I watched, he fixed it to the attachment at the top of the post. \"Open up, Pet.\"\n\nI had a brief moment while I opened my mouth to realize that I was starting to think of myself as Pet, not Jezebel. And then I realized that my thoughts had started turning to the third person, as if I were a toy, an object, not someone. But then I was too busy choking on the toy to think about it.\n\n\"Shh. Such a good girl. Just accept it. Relax your throat.\" I obeyed, my pussy pulsing in need at whatever this was. Hadn't he asked about food? I didn't care much anymore, lost to the thought that I was likely sucking a mold of his cock, and enjoying the thought of having practice to better please him in the future. I had to work to relax my throat and take the toy, had to focus on swallowing to get the entirety of it down, and his relentless coaxing helped.\n\nAnd then I had finally reached the end and my lips pressed a button on the base, so that a spritz of thick, chalky liquid hit the back of my throat. I swallowed automatically while my mind went crazy with the most intense and depraved arousal I had ever felt. I snorted around the toy, moaning, and he pet me to soothe me again. \"Easy. Let the arousal wash over you. I know it turns you on and I'm afraid you won't be getting relief for a few days yet. I like my slave horny and ready for me. I enjoy seeing you drip cum so that you can clean it with your tongue. You don't mind to suffer a little for me, do you, Pet?\" I shook my head even while I whined with a wild desire at what he was doing to me with nothing but a cock toy. \"Good girl. You should have enough room to move on that toy nice and safe. Why don't you try it for me? I have to take care of the bar while you eat, but we need to make sure my little slave is safe. Go on.\" I groaned with tears in my eyes.\n\nAnd he was right. I had more than enough leeway with my chained cuffs, and the cock toy post in front of me moved at my touch so that I could fuck it with my mouth. I sucked on it, thrust it deep down my throat until I felt the spritz, and then pushed it away so that I could breathe easily. There was no danger at all of suffocating while he worked, of having problems. And I knew instinctively that these were the things he was worried about.\n\nI looked up to meet his eyes where he watched with perverted joy. \"You're going to be a slut for cocksucking, Pet. How deep do you think the conditioning will go? Will you start to salivate when you see cock after a week of taking food from one? At the very least, you'll get a lot of practice on the shape of my cock.\" I moaned with eager lust at the thoughts he gave me. I had once heard that hypnotism only worked if the receptor's mind was open to the suggestions. You couldn't just hypnotize someone to anything. They had to be willing on some level.\n\nI wondered if conditioning had similar effects if its receptor was willing. Because I was more than willing, eager for what might happen from his twisted training.\n\nI sucked the cock toy that fed me while my pussy dripped with desire for what was happening to me, for what he was hoping to do to me. Oh, yes, I was insanely willing for what he wanted to do. I fed myself the chalky fluid that simulated cum, moaning, and the hardest part was that I had to work to refrain from orgasming. There was no stimulation on my pussy or asshole, but the twisted perversion of what he was doing got to me so fucking much that I had to focus to not cum from it.\n\nWhich made me hotter because my own denial made me horny with the thought that it was to service him. Everything done in submission made me burn and in slavery, that meant even eating made me burn alive with desire.\n\n\u2014\u2014\u2014\u2014\n\nHe started routines instantly, beginning with that night. When he came back from taking care of Sulfur's, I was lost in a daze of painful desire and my mind wouldn't go down those long winded journeys. All I could focus on was my Master and what he said, the look in his eyes. I jumped in anticipation when he opened the door again and looked up to him with my mouth full of the toy molded after his cock. He smiled with his head lifted slightly, as if he were taking a minute to enjoy the sight of me finally bowed and subdued, the way he had been so determined to have me. That look made me lower my gaze, not because I was thinking of disobeying, but because the act of lowering my eyes felt submissive in a natural sense. I quickly learned that even if it felt naturally submissive, that did not mean that it pleased my Master. He corrected me with a crop strike to my cheek. \"No. I want my slave's gaze on mine, so look at me.\" And I instantly obeyed. His look cleared and he seemed pleased.\n\n\"Much better. Let's see how you've done.\" I watched him open the custom toy and pull out something like a cartridge. He studied it and placed it back in the end. \"You'll have to suck cock quicker than that from now on, Pet. The next time I set you up for food, you finish it, or you'll take the cane in punishment.\" The inferno of desire inside of me flared and I moaned. \"Quiet. Open up. I'll help you finish this time since you're getting used to it. And I'll show you how you should do it for yourself.\" \n\nBy help me and show me, he meant brutally fucking my face with the toy. He lifted the stand out of the way first, and stood in front of me, having set the crop down for a time. Instead, he grasped my chin with one hand while he gave the stern command to, \"Open.\" When I obeyed, he thrust the toy between my lips, and I lifted. At first I choked with his abrupt working me, but I had gotten used to that cock shape down my throat and swallowed the reflex down, taking it. I blanked my mind and just accepted what my Master desired. \"Look at me.\" When I did, my pussy spasmed from the look of strict ownership in his eyes. \"This is how you eat, understood? Don't forget this.\"\n\nChrist, I definitely wouldn't. He fucked the hole in my face like he had fucked my asshole, and it wasn't something I would ever forget. I held his gaze, stared into the cold distance there, and burned alive from it. Even this, food, was a way for me to be used or trained for better use. He kept going until the cartridge was empty and, as per his devious intent, I felt strangely satisfied and full. Where I had been physically hungry before, I no longer was. I sank into that feeling, letting it take effect in me. He pet my hair, while I stayed still for a while and soothed under his touch.\n\n\"Come on. Let's get you to sleep now. It's been a long day for both of us.\" It had been, but it was a good day, one I was glad had happened. Despite all the fear I had once felt, I was deep in the most comfortable waters I had ever known. Oh, I was still scared, but his petting me and keeping me on edge made it difficult to stay scared. His twisted routines distracted me too much, as well.\n\nFor instance, I forgot all my fears when he left me kneeling by the cage and came back holding the chastity belt, a butt plug, and a large dildo. Instead I felt new terror, like how I might actually go crazy from that. Speaking and begging didn't cross my mind. I cried out, though, and scrabbled away, whimpering pathetically.\n\nAnd damn him, but he didn't do anything at all in response. He just stared down at me with that implacable, flat gaze, a silent message that this was what was happening and there wasn't anything I could do about it. It succeeded in making me crawl back to him, but I gave him my most pathetic gaze. Was this punishment? I thought I had been doing so well.\n\nHis eyes softened when he had me kneeling up on my knees before him. Master's touch was soothing and careful while he inserted the dildo first, then the butt plug. Both applications made me groan and I cried just a little, scared that I really would lose my mind. \"Hush. This is how you dress for bed now, that's all. You'll grow used to the arousal, used to the need. It makes you a better slave for me when you feel so eager, Pet, and continual arousal is a slave's natural state. Behave for Master and get into your cage.\"\n\nI crawled into it, insanely horny. He did one last thing and that was to feed a chain through the bars of the cage, which he clipped to my collar. I felt a tremor of fear when he went to the light switch, wondering if I had ever mentioned my fear of the dark.\n\nBut when he flicked the light off, it became apparent that I had either mentioned it or he had noticed it, because there was a night light in the corner of the room. I covered up with the soft fleece blankets in my cage and tried to fall asleep while my holes were twitching around the toys that held me.\n\nThe first night was the hardest. I woke up four times from the toys holding me in extended penetration, feeling hot, feeling needy. All I could think in those moments was that I missed my Master and his touch. Everything made sense under his voice and touch. But then my back touched the bars of the cage and the chain attached to my collar rattled and, when I shifted, the metal of my cuffs twisted around my wrist and ankle.\n\nAnd I felt secure again, falling back into sleep while my body kept itself naturally lubricated around the toys stuffing me. No mercy, no release. Just slavery.\n\nIt was terrifyingly one of the greatest, most peaceful, feelings I had ever experienced.\n\n\u2014\u2014\u2014\u2014\n\nMore routines. More control. He wrapped me in layers of both of those so tightly that it felt like home, felt like something I could never break from and didn't want to break from. When he came to me in the morning, he woke me by rattling my chain, and I jumped awake, moaning when I automatically pulsed on the toys inside of me. My Master opened the cage door and when I crawled out, his hand was automatically around my throat, stroking my collar. I looked up at him, horny and eager to be in his hands after the long night. Whatever he saw of my gaze seemed to intensely please him because he stroked my hair back. \n\n\"Good morning, little Pet. Let's go over how you greet me.\" He pulled me close to his waist and I automatically knew what he wanted. \"As a sexual slave, you'll be serving my cock rather often. It's better you get used to that now.\" I groaned because that was something I very much wanted to be used to. I kissed him and stroked him over the fabric of his jeans, until he undressed enough to free himself. \"Open up.\" I obeyed that before he even finished speaking, taking him in my mouth greedily, eagerly. Because it felt right to be stuffed full of toys with his dick down my throat, and I could take him much easier after I had fed on the toy mold for so long the night before. \n\nBlowing him was something I already enjoyed doing because I knew after his training that I was good at it. He held me with a hand around the back of my head and one on my neck while I worked him, using both hands to stroke his balls and his cock when it wasn't fully in my mouth and down my throat. It was unlike my having blown anyone else, too, hotter than some of the sex I'd even had. Every movement of my head only served to make me hornier for him, make me greedier, make me higher from subspace. He drove me wild and I never wanted his hand to leave my throat, but I'd settle for the collar holding me encased, for the chastity belt holding me heated.\n\n\"Jesus Christ.\" Wild pleasure whipped through me at the sound of his growl and I lifted, moaning around him when he finished. I swallowed automatically and when he pulled me away he kept his hand over my collar, lifted my face with his thumb under my jaw. For a while he just stared into my eyes, as if he felt too feral from seeing me kneel, and needed to calm himself. \"Good girl. It's time for that belt to come off, then for a shower and cleaning you. I warn you that you won't like it and if you struggle, I'll punish you. Understood?\"\n\nI nodded, accepting that as part of my fate, something that came from being a slave. And he was right, I hated it. Well, I hated it at first. The slave's shower was a set of chains that he tethered me with, by my cuffs. He bathed me with a sprayer that made me shiver with cold, while calmly demanding that I stay with my legs spread open still. When I didn't comply with that to his liking, he silently used the spreader bar to give me practice. It was awful, until he stroked the shampoo and conditioner into my hair.\n\nAnd then I couldn't think about what I liked or disliked anymore. His touch returned me back to that special place where it was his pleasure that ruled me, his control that was perfect. I fell back under those dark waves, wondering why I had struggled against them in the first place. The enema afterwards was worse, but I lay in the floor and trembled while he gave it to me. He watched me release it, watched me piss, watched everything while I blushed in furious humiliation.\n\nHe fed me, too, and he had already promised that breakfast was the one time I wouldn't have a cock feeder. Instead, it was a kind of nutritional oatmeal, nearly flavorless and probably insanely healthy for me. \n\nBut he had a daily routine of his own and he had work he had to do. For that, he chained me over the medical table. \"You'll be in the spreader bar, remembering the way I want you to be open for me, since you had trouble in the shower.\" That made me whimper a little since the bar could hurt after a while, but he wasn't done after that. \n\nNo, once he had me helplessly spread open and chained, he used a lubricant and a butt plug that made me tearful. Whatever the lubricant was, it felt hot, like peppermint burning me without pause. When the plug seated, I was already shivering in pain. And he made it worse by stroking that oil into my ass, the one from my very first punishment. This time, he gave me a belting instead of the paddle. For extra measure, he blindfolded me and left me in pure hellish sensation. It wasn't long before I learned that setup was what waited for me if I tried to close myself, or cover myself, from him. I was to always be open and never fight and that message became very clear.\n\nRoutines. Rules. When I heard the door open again, I tensed with both fear and joy. I felt his hand in my hair and his cool voice, ever so calm, commanding me. \"Kiss my cock hello.\" And it was becoming very clear that being degraded did something for me, because I had left a mess on the floor that he made me clean up when he freed me from my bondage. I cowered at his feet and licked it up, like a dog.",
        "He fed me from the cock toy again and that time he connected it to a fucking machine. Every push down my throat resulted in a spritz, every pull away resulted in the cock leaving me... and a stripe from his belt. I started to jump forward to take the toy, jarring in my chains with dread when it wasn't in my mouth. After that, he set up the machine with a different dildo for my asshole while he left again, saying he didn't want to have to fight every time he decided to use my tighter hole. And I wondered when that would be for those first four days.\n\nI suffered through them, every second a wild flame of painful desire, and he only used my mouth. I learned to choke myself on my feeding toy, learned to not ever close myself to him. I turned used to being a sexual creature, in constant need, and I started to crave his cum. I stared up at him whenever he was in the dungeon with me, drinking in the sight of him like he was life. Whenever he got a toy, whenever he turned to me holding a whip, whenever he brought me clamps, my asshole and my cunt pulsed in anticipation.\n\nAnd that was another thing. He hurt me, often, but it was never terrible pain. His sadism seemed tempered with the desire to see me degraded, which was obviously the more prominent pleasure for him. Sometimes his pain was to discipline me, like when I didn't spread wide enough. Most often, it was for his pleasure and I loved those moments. He would pet my pussy and praise me for taking his pain to please him. \n\nMore rarely, it was for punishment, like the third night when I struggled for the first, and only, time against the chastity belt. He was tired and I knew as much, but I was going a little bit insane too, because he had spent the whole day casually training me in that way he had. My body felt like a punishment straight out of Dante's hell. He finally lost his patience and used the cane, striping me until I sobbed at his feet. And then the belt still went on, except he used even larger toys, so that I shuddered with every passing second. \"You will never win, Pet. Get that through your head. This is what happens to you and there's nothing you can do to stop it, to stop me. Accept that and life will be far easier for both of us.\"\n\nI cried into my pillow, looking up at him from my cage, and sad that I had so disappointed him. But, like always, he left and came back with the same routine. He never deviated from course, never held anger towards me when I fucked up. No, he came back the same as always and I eagerly facefucked his cock, desperate for his approval to make me feel steady again. And he gave it, with a gentle, even smile. \"Good girl. There we are again. Come on. Shower and breakfast.\" And I crawled, staring up at him adoringly again, trained to the feel of the leash and collar.\n\nIt was horrible. It was wonderful. He soothed me with things like pain and enemas. And I responded with more and more obedience, craving him.\n\nIt was in that state, in that mental place, that he finally took use of something other than my mouth. After my first incurred punishment I was strangely subdued, jumping to every command for each little scrap of approval. Every earned \"good girl\" felt like my own private bliss. The energy fueled both of us, so that I dripped cum as soon as he removed my toys, and crawled frantically to lap it up in the most obscene ways I could think of. Maybe that was what made him need something other than my mouth. I wasn't sure, but he bent me forward over the medical table and he was using a brutal dildo in my asshole, but I took it. I took it and whined and begged wordlessly, pleading with sounds.\n\nInstead of mercy, he gave me his degrading comments. \"That's it. I think this asshole is ruined enough to be a comfortable fit. Why don't we find out?\" He lubricated himself, barely, and pressed into my hole. I keened and squealed like an animal, thrashed in frantic panic. It wasn't that it hurt. Because it didn't so much anymore, after his relentless, torturous training. There was nothing but a pervasive stretch and press that shot me into a mental arousal more than I had ever felt. There was a basic debasement that came with having my ass fucked, one that was terrible and wonderful. I sobbed out, convinced that I would never orgasm again by that time, and horrified that I was probably going to fail him because of the perfectly degrading away he thrust inside of me.\n\n\"Shh. Breathe and take it.\"\n\nBreathe! I sobbed instead, but I gulped in air desperately too, praying for the strength to obey. Please! Master, please have mercy! I was a wild thing around him, more desperate than ever, and I struggled against my cuffs so hard I was shocked I didn't hurt myself. Perhaps that was why he covered me with his body, and held my wrists in each of his hands. \"Such a beautiful slave. This is why I want you painfully aroused 24/7, Pet, to feel this. The way you squeeze and fuck back so desperately on my cock is like heaven. It's like every hole in your body is my own personal fucktoy that you take care of, and keep wet for my pleasure. Listen to me, Pet. Are you listening to me? Answer out loud like a good girl.\"\n\nThere was an intensity in his voice that made me so fucking desperate, and it was the only saving grace that I had. \"Yes, Master, Pet is listening!\"\n\nHis cock hardened, and I knew it turned him on to hear me say the third person of the name he had given. \"Good little slut.\" I shuddered at the humiliation of his cruel approval, and he slapped my ass. \"When I say to cum for me, it's going to make your asshole tighten so fucking hard on my cock that I'll cum from the pressure. So you are to cum exactly when I say and on fucking command. Do you understand?\"\n\nI spasmed, dying for that orgasm. \"Yes, Master!\"\n\nHe snarled and slapped my ass five times, a vicious assault that left my flesh singing. \"Don't finish beforehand, or this will stop and you won't fucking orgasm for the rest of the month, little slave girl. Do you understand me?\"\n\nHis tone terrified me, but I did understand. So long as I could obey, he would allow me orgasm. \"Yes! Yes, Master, Pet understands!\" I said it in the third person to please him more, hoping that it would reinforce his confidence in me so he would keep going.\n\n\"Alright, then.\" I felt my eyes go wide and I gasped a soundless cry when he really started to use me. And suddenly, I understood why he wanted to reiterate his point. I opened my mouth to beg for mercy, but no sound came out. I shook around him, but he only tightened his hold on my hair and fucked me harder, far harder than I had ever been fucked in my life.\n\nI wasn't sure if I was allowed to keep speaking, but it didn't matter. The cries were forced out of me when he pistoned in and out of my asshole. \"Master! Master! Fuck, oh please, oh God, Master, please-\" A stupid, pointless list of ravings.\n\nUntil he finally snarled, \"Cum for me, little slave.\"\n\nI screamed. The world fell from me and all I knew was an inferno of nerve endings. My whole body seized up with the force of the pleasure and I knew I would do anything, suffer anything, to feel it again. When he gasped above me and choked out the words, \"Good fucking girl!\" I knew I would walk over broken goddamned glass to hear it again. It was the way he brokenly groaned it, the way his voice was taut with so much fucking pleasure that it was sinful.\n\nI collapsed on that table with four words screaming in my head. \"Pet loves you, Master!\"\n\nFrom far away, when I lay defeated in oblivion, I heard the soft answer. \"I love you too, kotik.\"\n\n\u2014\u2014\u2014\u2014\n\nHis fucking me was the ultimate mastery. I had been deep in submission beforehand, but after he fucked me, it was like a magic took effect.\n\nIt was as if I had been in the middle of the ocean during a hurricane, had been battered and tossed. It was as if a sea monster had wrapped me in tentacles to drag me down, and I had fought its grip. Invariably that sea monster succeeded and I discovered something. I discovered that I could breathe under the water, and that the monster had known that the entire time.\n\nThere were no more storms beneath the surface. Far enough down, there was only calm and an abyssal blackness, and the monster dragged me downwards and downwards, even farther than that abyss. He took his time, so that I could acclimate to the pressure and he went so far that it felt like I would never again see the light of day. Except, now that I knew I could breathe, I didn't care about the daylight anymore. That darkness was something that others might call suffocating, or terrifyingly eternal. I felt nothing but peace, cared for nothing but more of the monster's embrace, more of its tentacles spreading my holes open and pumping them full of lust.\n\nAnd God, after that first time, he took to doing that like I was his drug of choice. He used my mouth most often after his hard conditioning, and I never got to orgasm that way, because it didn't serve a purpose in pleasing him. But, sometimes, I wanted to blow him even more than I wanted to get to cum. I craved his cock down my throat, burned to feel the merciless way he thrust between my lips, the way he growled out degrading intimacies above me. \"That's right. You're my cum hungry slut, aren't you?\" And God, the way he grunted with heated pleasure when he orgasmed and flooded my mouth, filling me so far down my throat that there was nothing left for me to do but to swallow it, like I did my food.\n\nThat was another thing. I remembered him asking a while ago for me to keep up regular testing, just in case. He had asked about birth control and I had an IUD for extra backup, because I had zero intention of reproduction. After asking, he hadn't taken advantage of that fact, even after he showed me his own clean paperwork. But now, he did. \n\nWhatever part of me he wanted to use, I could guarantee that I would take his cum. I had known some guys who got turned on by pulling out and covering my stomach or back. He was not one of those. He filled me full and when I turned my head to see him, he would be looking down in feral possession, stroking whichever hole he had filled. He would pet my pussy or stroke his fingers over my asshole. When I swallowed it, he would brush my lips with his thumb, in crass satisfaction.\n\nAnd that look would only make me burn all over again. It was like I was filled with a hellfire all the time for him. It took a week of sleeping in penetration, but something seemed to break in me after that, and I started to love the feeling of my arousal. The smell of it made me hunger and the taste of it off his dungeon floor made me instantly moan with delight, as if I had just tasted the most delicious treat.\n\nMy life under his hand was pleasure and serving for pleasure. Everything part of, in, or around my world existed to be of service to him. He kept me tame and in deepest submission with a relentless grindstone of precedents and rules. I threw myself in it, losing myself to the revelry. I was stripped down and reverted back to a form of savagery.\n\nAnd I loved it.\n\n\u2014\u2014\u2014\u2014\n\nAsh\n\nI had been right to think she would be the perfect slave. She fell to it, gave herself into everything I desired her to, and she was a depraved demoness who sucked cock like an angel. It was the same way she had given herself up to the sensation of her drugs, the same way she had chased desires with me without ever once asking for a safeword. Thoughts of safety just never seemed to cross her mind, unless she was confronted with it.\n\nI was convinced this was what had been the call to me. From the very beginning she had had this locked inside of her and I had been lost to the need to dance with her. Dominance. Submission. Pain. Pleasure. It was fire between us, a choreography of wild desire. I would take care of the clubs and bars, work tirelessly with such a coldness that I couldn't even play with my other playmates anymore. Even Deirdre and Lily skirted me, but I didn't fucking care. Because that coldness that terrified them was one that Pet ate up like candy, and I couldn't put my facade back on to save my life. I tried. I really did. But the face usually wouldn't come and when it did, it was only for the minute that I actively thought about it.\n\nBecause when I wasn't working, I was in that dungeon with her. It had always felt like a special place for me, one that was part of a fantasy I would never get to make a reality. But now, it was a reality and that room became magical. It was like a purifying hell cell, a perfectly sterile room. There was nothing between her and I. No laws of civility, no pretenses, no names, no barriers. Nothing but her perfect surrender and my total control. And that was everything.\n\nIt was a week and a half in when I felt the desire to leave that pure place with her. It might sound odd that I would have that.\n\nYou see, I walked in the dungeon and turned the light on and my gaze automatically fixed on hers. She was already awake in her iron cage, staring up at me eagerly, as if she hadn't been able to wait for my presence. She held the bars of the cage and a sexual purr escaped her, her body dipping in a wanton way, like it always did after she slept in her chastity belt. \"Good morning, Pet.\"\n\nEven her voice was a sexual sound. \"Good morning, Master.\" Jesus, in submission she had discovered such confidence that she acted with the boldness of a dominatrix, even while she bowed with the respect of the lowest slave. She had no inhibitions anymore, not that she'd had many to begin with, and it was the most magnificent thing I'd ever seen in my life, a work of fucking art at my knees.\n\nI opened the cage and unclipped the chain from her collar. Pet crawled out with eagerness to get to me. She pressed her lips to the front of my jeans, and instantly moaned when she felt my hard on. Her whole body shuddered just to feel my arousal now. I had so corrupted and defiled her that the continuous horny hell of her life made her addicted to worshipping me. Everything felt like pleasure to her after enough time. And sometimes I spent mornings with her lips at my jeans, content to just let her worship my cock while I watched.\n\nThat morning wasn't one of those. I clasped my hand around her collar and she gave a sexed up cry of need, lifting. Her eyes fluttered closed and her lips parted. God, every action was an aphrodisiac. I undid my jeans just enough to take my cock out, only ever enough for that. In this room, I was rarely naked. Any inconvenience of that was worth it for the feeling of power imbalance for me. \"Look at me, Pet.\" And her eyes snapped open to fix on mine, so easily and quickly that it went to my soul with how high it made me. My voice was at its most cold and sterile when I was with her, but she loved it. She loved me for me, and I hadn't even known that was something I had craved all this time. \"Would you like my cock down your throat and my cum before breakfast?\"\n\nShe keened in fiendish desire, her legs spreading even wider around the chastity belt. \"Yes, Master! Oh please, yes, Master...\"\n\n\"Suck, then. And make sure to show me how grateful you are with every thrust. I want you to give me the sluttiest show yet, understood?\"\n\nFuck yes, she understood. She nodded eagerly, her eyes so hot that they scorched me. Her lips parted and she held still, fixing her face between my palms so naturally. And those lips of hers were always red and swollen since I fed her on a cock, made her suck me off so fucking often. She always had that look of being recently kissed hard.\n\nBecause I used her mouth like my personal fucktoy. I held her head with my hands threaded through her hair and fucked her face forward to meet my thrusts. I was brutal about these moments, gritting my teeth like an animal to feel her so degraded. The result was a moan from her that vibrated around my dick, and I hissed with pleasure. She ripped the sounds from my chest and my God, that day she was even darker about it, even more feral. She gave herself completely over to my control and after so long of eating by blowing a toy, there was an obvious effect. Pet didn't suck like a well practiced whore, didn't even suck with the fervor of a slave. Pet sucked me off like I was a necessity, like I was air.\n\nLike my cum was her food and she had to get to it.\n\nBetween the two of us, there was nothing but the purity of Master and Slave. I stopped only for a second, pulling away from her while she opened her mouth and held out her tongue. Her gaze was fixed on my cock as if she suffered with the loss of it, and it made me hot. \"Grab the bars of the cage and don't let go of it. Kneel with your legs so wide that you could hump the floor, if you weren't in chastity.\" She obeyed hurriedly, her gaze greedy with such hunger and fixed on my cock. She looked at it with far more need than she had ever had while speaking of or thinking of her drugs. She thrust her tits out automatically, arching to display them for me. \"Good fucking girl. You want some cum to eat, don't you?\"\n\nHer cry around my cock made me grip the cage top instead of her head, because I was almost afraid to touch her. Instead, I railed her open mouth, my breath leaving me in sharp gasps. There was nothing like this, nothing so pure as what was between us. I had never gotten head like what she gave me.\n\nPleasure shot through my balls, tightened me, and I grasped her head with one hand, looking down to watch her arch and contort when I spurted into the back of her throat. Her whole body seemed to shudder in reaction to my finishing. I pulled away from her with a violent growl to watch her spasm, her mouth still left gaping open. She gulped and tears streaked her eyes from my rough use, but she was in clear ecstasy. I had trained Pet to such joy in cocksucking that she took even more from it than she did from orgasms. Her cry was hot, so hot. \"Thank you, Master!\" And it was so fucking real that it hurt my chest.\n\nAnd that's when the desire came to me. She could leave that dungeon then. Our purity had been so reinforced with the steel tethers of my routines that it no longer required those four walls anymore. And I wanted to. I wanted to show her off on a leash at my feet, wanted her in Sulfur's where anyone could see it. And I wanted to watch her fuck someone else even, wanted to show off how my slave could be used, how she wouldn't even cum unless she was expressly told to. She wouldn't even ask to cum anymore.\n\nAnd I wanted to show off how she sucked cock like she was starved for it. It was beautiful and it pleased me to no end how fucked up it was that I had trained her from her feeder toy. Every blow job made me horny as hell because of that. The thought of showing it off to others made me burn.\n\n\"Jesus, Pet.\" I fixed my jeans back and smiled down at her and she beamed in reply, her face radiant with her joy at pleasing me. \"Such a good little slave I own. We'll be having at least two different routine changes for the night. First, I think you're ready to be shown off in Sulfur's, and you're going to take whatever cock I want you to in whichever hole I want you to, and be on your best behavior, understood?\"\n\n\"Oh yes, Master, I understand.\" There was no hesitation in her answer. I had trained her with punishments for hesitations. But she didn't hide from me either. \"I'm nervous of failing you, Master.\"\n\nI stroked her hair, smiling. \"A slave like you would be. Have faith that Master knows how to guide you. I've proven that to you, haven't I?\"\n\nHer smile was clear, easy, satisfied. It seemed like an impossible thing to me because I had known her emotional sides. But she wasn't emotional anymore. There was nothing but happiness left in her eyes every time I saw her. \"Yes, Master. I didn't mean to insult you.\"\n\n\"I know you didn't.\" God, she'd never do that in that state. She was so purely the slave that it couldn't cross her mind. \"The second thing is that I'm going to change that toy in your asshole. You'll be sleeping with larger base holding you wide, instead of the kind butt plug. I've had to force my way inside you the past two times. Your asshole needs better training.\"",
        "She moaned and arched, still holding the bars of the cage because I hadn't told her to let go. \"Oh yes, Master. Thank you, Master, for training me.\"\n\n\"You're welcome, little slave. Let go of the cage and crawl beside me. We're going to feed you breakfast and bathe you. After that, I'm going to let you rest in your cage for the day before we spend the night showing off what a perfect little slut you are. Would you like something to read for the day?\" She was already crawling beside me, her ass a sensuous tease where she curved around her toys.\n\n\"Yes, please, Master.\" I knew better than to let her get bored, even without trial and error. It was rare anymore that she got free moments. With my leaving her to be fucked by machines and casually using her in between working, she was often either recovering from my use or suffering it. I would often reach a point between calls to finish renovations and walk to the dungeon. During these moments, I wouldn't say a thing. I would just go to the cage, pull her out from her resting, and fuck her compliant lips. Only then would I talk to her, in the height of ecstasy, and I would call her my personal toy, remind her that this was what she fucking existed for.\n\nGod, she was my delight. \"Anything for you, Pet.\" And I meant those words to all of their depth. Anything for her. It was true. I had reached a dangerous level of devotion and I would truly do anything to keep her in my service. I would give her jewels and furs and anything at all her heart desired. And I was starting to feel more and more that we were something meant to be, that my eternity collar belonged on her throat. I was starting to feel that this was absolutely where our relationship was headed. For me, it was the most natural thought in the world that at the end of the month she would be wearing that glistening, slim black collar, and it wouldn't come off.\n\nI stroked her hair and pet her head, purring over her. \"Anything at all for you. Stroke my cock over my jeans and show me your gratitude.\"\n\nObediently, she did until I left her touch. I asked her which book she wanted and she politely answered. \"Lovecraft, please, Master.\"\n\n\"Of course.\" And I happily did, after she was cleaned and released from her chastity. I gave her the book and locked her back in her kennel. \"Such a good little girl, Pet.\"\n\n\"Yes, Master. Pet loves you.\"\n\nThe only way she had been able to say it was in a third person, but she said it often. \"I love you more than life, slave mine.\" And my answer was always in the first person to let her know that it was okay. In my own language, I told her that I understood her fear, that it was okay and always would be. When she was ready to say it in the first person, I was ready to hear it and answer it. I was ready to pet her and tell her over and over again that she was the most precious thing I had ever had in my life, that she was my sweetest angel and my exotic slave, more intimate to me than a spouse ever fucking could imagine. And that was true. I knew her body, every part of it, like the back of my hand. I knew her heart like my own soul, knew her submission like I knew the feel of my cock in my hand. She was more precious than life to me whenever she was comfortable enough to confess it to me.\n\nIn the meantime, I left her nice and comfortable with her book, harnessed in a chastity belt without the toys. I more than trusted her to not touch herself, but the metal reminder that she couldn't would make her hot, and that was always a desire of mine. \n\n\u2014\u2014\u2014\u2014\n\nI set her up to eat from the feeder toy for the afternoon, but I didn't use her like I normally took to doing, and I didn't set her up to feed for the night time. I broke my routine.\n\nIt threw her off, and I watched for any sign of breaking her out of her blissful submission. But she gave none. Where her mind would have built its anxiety with a hellish thought processing before, now it seemed calmer. When I led her out of the dungeon on a leash, she crawled close to my ankles and nuzzled me as if I was her safety and security. God, it made me hard, but it made me feel like a king too. It gave me this warmth I never expected to feel, made me reach down to pet her hair. She was beautiful, amazing.\n\nI had to focus to even lead her to where I wanted, and that was something new. Part of me craved to lock her away and use her for myself again, but I really wanted to display her. Even so, the desire to do so only marginally overpowered the urge to bind her to my bed and fuck every hole she had until she couldn't walk anymore.\n\nJesus. Concentrate. Yes, concentrate. I centered myself with the reminding thought that everything indicated her belonging to me at the end of the month. \"Come here, lovely. Let's display you, so I can show off my slave.\" She made me into an animal. I led her to a center little play platform with a nifty adjustable table, and patted it. \"On your back. Legs spread wide and feet in the stirrups.\" The cool thing about the table was that the head part was more like a sling that would hold her safe, while allowing her face to be pressed back so that she could take a cock down it hard, and often. And the setup displayed her pussy and asshole, while making sure it wouldn't be convenient to fuck either one. I wanted her toyed with and tormented, but I did have a slight amount of possessive jealousy.\n\nOf course, if it did happen, I would watch her take the fucking and stare into her eyes with the violent ownership it gave me, too. Either way, it was a win-win for me.\n\n\"How do we feel? Nice and comfy?\"\n\nShe tugged on her restraints and then smiled up at me. \"Not as comfy as your table, Master.\"\n\nGod, the way she looked up at me and flirted with me, the way she was so happy and so trusting. She adored me enough to try to make me smile with her playfulness no matter what, even in front of an audience, even though I tormented her. And it worked. I smiled down at her with delighted affection and stroked her hair, while she leaned into my palm. \"Well, forgive me, Pet. I doubt I can make anything feel as good as the table you were trained on, but I can try to distract you with a line of other doms to please. You must be hungry.\"\n\nShe moaned, with a sensuous little smile up at me, and purred. \"Anything for you, Master.\"\n\nGod. Jesus fucking God. Those words hit me like a solar plexus blow. She'd shown them to me, but she hadn't directly said them like that. \"Time to turn out the lights. Just relax, Pet, and take what you're given. I might let you out of the blindfold, but for right now, why don't you just relax into a dark little world of submission?\"\n\nShe closed her eyes even before the blindfold fell into place and tilted her head back, as if in offering. For a moment, I had a clear image of her as a willing sacrifice on an altar to the religion of indulgence and perversion. Her breasts rose and fell with her breathing and she was so perfectly defenseless. I stroked her cheek and then gave her a gentle slap. \"Open your mouth.\"\n\nObediently, she did and I stood to the side, out of the way while I gestured to Matt.\n\nPet hadn't gotten to play for long at Sulfur's, but there was a structure to it. It wasn't just my life and my bar. It was something far more, a kind of tight knit community of people who had found each other, and discovered they weren't alone in life. I had my dungeon monitors, who often came to play too, and on the night I had chosen to allow Pet out of the dungeon, it was a closed door night. And they were there. But so were my regulars.\n\nWe all had an unspoken joy with each other, too. We shared and took part in each other's scenes often, because it made an energy that turned everyone on. Of course, if we wanted it private, there were indicators. Generally, a decent \"fuck off\" glance would do it. Doms weren't usually subtle or coy types about their desires while they played.\n\nBut I didn't have that \"fuck off\" look. I had the stance that said, \"Come and play with me\".I had the look that said I wanted to show off and Matt and I knew each other well.\n\nHe curled a hand around her throat, while I circled her to get my fitted demon mask from the duffel bag I kept for toys. She had liked that mask and I liked to please her. So I put it on and stroked her body while Matt fitted a flavored rubber on himself. He surged into her open mouth and Pet took it. She didn't just take it. She tilted her head back and lifted, straining to get to more of him. Maybe another Master would have looked at her hunger and felt displeasure, or some form of jealousy. Maybe someone else would have felt a kind of upset possession by the obvious arousal she got off blowing another man.\n\nI wasn't one of those. I buried two fingers inside of her pussy to make her hotter, to make her wilder. I adored her for being such a sexual creature, because it was that kind of creature that I had fallen in love with. Shaming her for it, or disliking it, would have felt like a terrible crime on my part. How could I ever dislike a quality that was such a large part of the person I loved?\n\nIt wouldn't make sense to. I studied the emotions in me and was pleased to find them logical and consistent, pleased that I felt nothing but playful arousal and perverted pride in how well my slave could serve. And oh, she did. Matt threw his head back and had to work for control, because she was so eager, so cock hungry, that she nearly undid him. \"Fucking Jesus. When you're good, you're a goddamned angel.\"\n\nShe moaned in response, then squealed around his cock when I used my other hand to finger her asshole. Matt hissed and leaned forward to twist her nipples, while I laughed at the abrupt, dark light that appeared in his eyes. He wasn't a hard player, but she could bring the demon out in anyone. \"She really is. And she's been much better behaved after a little hard discipline and training.\"\n\nHe thrust deep down her throat and tightened his grip on her neck. \"My god, what did you do to her? She-\" He cut off with a growl, humping her face. \"She's amazing.\" It came out a groan while he finished in the condom and she arched, keening and whining in pleasure.\n\n\"Oh, please! Please, Master. Please, sir...\"\n\nI smiled in depraved heaven. I knew why she was begging, knew why she arched so frantically, why she cried out so desperately. I handed Matt a flogger. \"Why don't you give her pussy some pain for more pleasure? She'll enjoy it.\" His eyes lit up with a fun playfulness and he took the heavy flogger with a grin, fixing his suit pants. I went to Pet's head to stroke her cheek. \"Look at you. Look at how hungry you are. It's so mean that he had to finish inside of a condom instead of feeding it to you, I know, but we have to be safe, Pet. If you're good, I'll feed you from your toy in a little bit. For right now, you have some more cock to suck.\"\n\n\"Yes, Ma-\" She was cut off when one of my DM's thrust into her mouth, and she worked even harder now that her pussy and abdomen were taking a flogging. I was at the perfect place to reach across her and torture her nipples. My DM talked with Matt while I interjected and stood above my Pet, talking over her to make her feel even more like a plaything, to make her feel more humiliated.\n\nIt must have turned Pet on something fierce because Matt laughed and asked, \"Is she allowed to cum?\"\n\nI gave him the obvious reply. \"If it pleases you.\"\n\nMy DM answered. \"Do it. I want to feel what it sounds like.\"\n\nPet screamed with her orgasm when the command was given to her in Matt's growl and after I had so thoroughly trained her, the release only served to make her hotter and take her deeper in subservience. She worked all the harder while we played on her all too willing body. Kinky games. Fun times.\n\nBut if I was being honest? This was the most fun I had ever managed to display in Sulfur's. I had always had some pretty good scenes, but with her? Holy shit.\n\n\u2014\u2014\u2014\u2014\n\nJezebel\n\nI loved it when he displayed me at Sulfur's. Fucking adored it. He took to doing it every now and again, when the night and the atmosphere fit just right. Sometimes he wouldn't even set me up to play. He would just tether me to a Saint Andrew's cross, or over a spanking bench, and fuck my mouth with the feeder toy, where anyone could see. It felt like a dirty secret between us that I was eating, like everyone else would just see a slave being used as a hole for a toy. It was hot as fuck, and I would crawl at his feet at the end of the night, a horny and needy mess begging to serve his pleasure in any way it would satisfy him. He usually blindfolded me when he displayed me, so that the voices around me felt like something so profane, so humiliating, that the sound of every one made me vibrate with horniness.\n\nAnd he wore the demon mask I loved so much. Whenever he would leave me without my blindfold, I couldn't look away from that mask, from the way his stern features looked when they were fitted with the fearsome, bone white appearance. The way his mouth curved beneath it made me shiver, made me greedy to drink down his cum. Any way he played, I would crawl by his monstrous bondage bed at the end of the night, and bow low, obscenely spread like a slut for him. He noticed it, too, like he noticed everything, and he commented on it often, telling me how he loved my slavery energy. That was another thing I loved about my Master. He told me clearly the things that he enjoyed, and he strictly let me know the things he disapproved of or didn't like. If it didn't please him, he didn't allow me to do it. It was that easy.\n\nHe was good to his threats, too, and that included the threat to change the toy in my asshole. He was careful to give me an enema both before bed and in the morning when he decided to do so, which was more than humiliating. And I don't know what it looked like after he took my chastity belt off in the slavery bathroom the next morning, but I know what it felt like. It felt like I was a slutty display. It felt fucking pornographic, the way my hole twitched and didn't seem to close all the way anymore. The toy he had chosen wasn't quite a dildo and it did have a flange base, but it was the widest version possible that could still be used for extended wear. \n\nMy Master saw the results and inhaled with pleasure. \"Hold your asscheeks apart and let me see it better.\" Obediently, I did while I whimpered in arousal. My face was to the floor, my knees were spread wide apart, and I held myself open for him. \"Fucking beautiful.\" I moaned when he fell on me and grabbed me, thrusting into me, and he didn't have to fight at all anymore. No, my asshole gaped wide to take him when he filled me so deliciously full. My whole body shook with the pleasure of that feeling that came from existing to serve him. I thought about how my Master wasn't a small person, yet I took him like a whore after his training, and that made me moan hardest of all. My sounds made him turn even harder. \"Yeah, pretty girl? Are you my anal craving slut?\"\n\nMy moans turned to depraved cries. \"Oh yes, Master! I'm not sure if I like this more or feeling you down my throat, so I get to drink your cum, more.\"\n\n\"Oh, no, slave girl. That is a hard choice, isn't it? Why don't we spend all day together switching between the two, so you can try to answer before bed? Whichever one you choose is the one we'll do to say goodnight to each other.\"\n\nI gasped in pleasure, having to work to not orgasm from the thought of it. \"Oh! Oh, yes please, Master! Please use me all day, Master.\"\n\nHe laughed and groaned, making me cum so that he could cum harder and fill my asshole with his semen. And he did use me all day. He must have had a chance for a break for a while because he gave me a sex spree, switching between my asshole and my mouth just like he promised. My world melted into bliss, while he took me around every surface of the dungeon. He tied me down a different way with each use, and it was heaven. And when we were both exhausted, he cuddled with me on the bondage bed, his eyes relaxed and hazy with replete satisfaction. \"Choose, little slave girl.\"\n\nI purred when he stroked my hair, and smiled sleepily. \"I choose both.\"\n\nHe laughed. \"Such a greedy little Pet. You can't choose both and you can't say that I choose for you.\" He added that last when I instantly opened my mouth and I closed it again, grinning guiltily.\n\n\"That's very mean of you. Okay, if I have to choose then I decide my mouth but only because after today, I have this really great fantasy of being chained to your bathroom, and used as a personal cum drinking toy for an entire day. Or, like, during one of the orgies you have, when you have to wear a condom while you fuck, I have a fantasy of being tied in the bathroom, while you come and use me, and tell me it'd be a waste to finish in a rubber when I'm so hungry for it. So, that's the only reason I can decide.\"\n\nHe laughed in twisted pleasure and turned me onto stomach, so he could lift my knees and spread me wide. \"Such a good girl, with such hot fantasies of service to Master. Just for that, I'll be kind and give you both. Well, for that and so I can watch you clean your asshole from my cock.\"\n\nI squealed in sexual desire, moaned at the feeling of him. \"Oh, thank you, Master!\"\n\nAnd he loved it when I begged and flirted like that, too. In the mornings, I woke up before he even opened the door and my cage, my body accustomed to his routine. \"Good morning, Master. I hope you slept well.\"\n\nIt was instinctual to avoid questions. So it was never something like, \"Did you sleep well?\" Or \"How are you this evening, Master?\" It was a natural thing for my greetings to always be polite statements of submission, for me to smile in adoration because it pleased him.\n\nBut he always answered as if it was a question, always reassured me of his pleasure. \"Of course I slept well, lovely. How could I not after using such a beautiful slave before bed?\" And I would grin, a full silly look that always made him laugh. \"Such a sweet girl. Come here. That look makes me need more, Pet. Open your mouth for some cum before breakfast.\"\n\n\"Oh, yes, Master!\" If I was a puppy girl, I would have wagged my tail every time he said those words. I was eager for it. After his conditioning with food, my God, it made me so horny just to think about how that had affected me. I was an addict for cock and cum. Like he had hoped for, my mouth literally watered when I so much as thought about taking him in mouth. And because I was always trapped in an eager world of arousal, my body reacted to hunger with physical pleasure as well. I equated fear with arousal, equated his pleasure with it, equated submission and his hand around my throat with it. \"Thank you, Master.\" I whispered it in worshipful adoration before I took him in my mouth and fed at his sex.\n\nWhen he finished we would both arch. He would groan with orgasm, and I would cry out with something I needed even more than any orgasm.\n\nAfter he displayed me, he took to leashing me and having me crawl with him to his office. The first time, he was smiling in a pure, sexy serenity. \"Now that your conditioning has taken such obvious hold, I can have you at my side more often. It's been the only thing I've missed during your training, actually.\"\n\n\"I'm sorry, Master.\"\n\nHe laughed and ruffled my hair at that. \"Oh, don't be. Don't ever apologize for your training. That was one of the most wonderful things I've ever had.\"\n\nAnd my concern was soothed, just like that. \"I'm glad then, Master.\"\n\nHe had me curl up on the floor by his desk, and he set up an odd little nest for me there, with a comfortable fluffy dog pillow and blankets. I curled up in a lazy little display for him, while I read a book of my choice, until he decided that he wanted to take use of his slave. And then he would stand without a word, and lift me by my hair. My mouth always opened automatically to take him, but sometimes he would shock me and bend me over the dog pillow. I would always moan with frantic desire when he did, knowing he would make me cum so I would constrict on his cock, my pleasure serving him as it always did.",
        "It was perfect, so fucking perfect. And at some point during all of his care and domination, all of his continual use and his hard touches, I finished swallowing more of his cum one day and stared up at him with glazed eyes. I felt like Sleeping Beauty, as if we were both in the most magical slumber and protected by the dragon of his mastery, and maybe that magic was what made me open my mouth and finally whisper, \"I love you, Master.\"\n\nNot \"Pet loves you\". For the first time, I bowed my head and broke that barrier. He curled his fingers through my o-ring and lifted my face up so he could kiss me. \"I love you, too, darling.\"\n\nHe let me curl up over his feet while I nuzzled his ankles and licked his fingertips adoringly. It was something like 45 minutes that he let me curl there. But he didn't stay that way the entire time. No, he left about 10 minutes after I held him and came back with the demon mask I loved so much. That time, he knelt over me, holding me close while I breathed in his scent, and whimpered my gratitude. After that, he added a new routine between us, where he would cradle me or hold me close for minutes at a time. Sometimes, I would be in his office and he would lift me onto his lap. Sometimes, we would be in his bedroom and he would pull me onto his bed. Still other times, we would be in the dungeon and he took us both to the floor, with that demon mask. God, I loved that mask too. He took to even waking me up with it, and I would grin in joy.\n\nHe did that until the morning when he didn't. I don't know how many days passed from that mark. I had started to measure things in terms of new routines and changes to our dynamic, added things. I thought it was, at the very least, five days of waking up to that demon face. I started to have the feeling that I wouldn't mind if that demon mask waited to wake me up when I was in hell, just so I could see it forever. Demons had been turned into creatures of fiery lust for me. When he turned on the light without it, I looked up at him and blinked curiously, smiling. Changes in a routine made me excited and curious.\n\n\"Good morning, Master. I hope you had good dreams.\"\n\nHe leaned against the cage, with that soft little chuckle that made me turn wet just to hear it. Alright, that wasn't saying much, since everything he did made me turn wet. \"I did, actually. Dreams of you.\"\n\nI grinned and reached up to the top of the cage, to stroke his fingers where he held it. \"What a coincidence! I dreamed of you, too.\"\n\nHe laughed and finally opened the door, so that I crawled out eagerly. Like every morning, my lips went instantly to his jeans. I kissed his cock through the fabric, opening my mouth to moan in my pleasure at feeling his hardness. My pussy pulsed and my asshole squeezed the wide toy that spread me so brutally. I could barely think about the anal toy anymore, or it drove me to such arousal that it was dangerous. My mouth watered at the thought of getting to him, of being able to swallow his cum. \"Oh, Master...\" I sighed it, turned on and greedy.\n\nHe growled low in his throat, but he didn't feed me like he usually did. He stepped away instead, to pet my hair, and I stared up at him, adoring him. \"Dear God. This is painful, but we have to do this right. You might hate me in a few minutes, Pet, after I tug you from the waters I've had you under.\"\n\nI felt a little bit of fear and glanced up at him worriedly, but he was my Master and he knew how to do everything the right way. He pet my hair and held out his hand. \"Come on.\" When I took it, he tugged me to my feet and I blinked, but he didn't let me stay afraid for long. He lifted me into his arms and I grinned.\n\n\"Such a romantic Master.\" I teased him and he laughed.\n\n\"Well, you know the saying. 'At the touch of love, everyone becomes a poet.'\"\n\nI giggled and watched him take me from the dungeon. Instead of going to the slave bathroom, he went to his own, and I went giddy with excitement. His bathroom was so soft in comparison, and so wonderful. He had luxuriant water jets in his bathtub, and everything in it was decorated to make someone feel like royalty. Even with all that, it was still pretty small and cozy and that was my favorite part. I made a soft little squeak of happiness when he set me on the side of the bathtub and started the water.\n\nHe laughed in response. \"Ridiculous girl. Is the slave's bathroom really so awful?\"\n\n\"Well, not when you're in it to bathe me, but it's not as good as a jacuzzi.\"\n\n\"Fair enough. Let me unlock your belt. Turn around and bend over the side.\" I obeyed that, moaning when he slid each toy out of me. He took a brief moment to fuck me open with the anal toy and I cried out in bliss, then bit my wrist when the toy disappeared and I was left gaping. His fingertips fluttered over the opening and his thumb stroked through my pussy. \"You're so fucking wet just from having the toys. And you drip just from having your asshole touched and played with now. Your body gets hotter from that than when I play with you cunt, even.\"\n\nIt was true. I went wild from anal stimulation now, after what he had done to me. \"Oh yes, Master.\"\n\nHe pulled away with a soft little noise in the back of his throat that made me look over my shoulder at him. At the sight of my curiosity, he took a breath. \"Sit in the water, Pet, and I hope you can appreciate the pain this is causing me. I've never been so close to doing something illegal in my life, to breaking my word.\"\n\nI curled up in the bath and leaned over the side, while he knelt opposite me. \"I never want to cause you pain, Master. And I'm not quite sure what you mean.\"\n\nHe smiled and reached around my neck. To my fear, I felt him twist at the collar, felt it tugged away. The sight of it in his hands seemed surreal after so long wearing it, and I watched in a kind of daze as he used a key to unlock the metal cuffs at my wrists. I jumped when the locks clicked and stared at my wrists, which felt far too light. I had forgotten how heavy the cuffs had initially felt, had forgotten that the metal wasn't part of me. When I lifted my foot at his gesture, he kissed my ankle and unlocked that cuff as well. And then did the same with the other one.\n\n\"You survived,\" he finally said softly. \"One whole month. I hope it was everything you could have fantasized it to be. And if you never want to call me 'Master' again, you don't have to. But I sincerely hope you do want that.\"\n\nWhat I wanted. For the first time in my life, he had opened me to the consideration of what someone else wanted, had kicked down all of my self centered bitchiness and found the slave curled up behind it, that secret side of me that thrived from someone else's desires and approvals. Now, the thought of what I wanted kind of scared me. What if I considered it and was just a bitch again? What if the past month had been nothing but a fairy tale and I had always just been a terrible creature?\n\nInstead of answering like an adult, I did what the other me would have done... and burst into tears.\n\nHe made an exasperated, slightly amused sound, and cradled my head. \"Such an emotional little slave girl. Hold on.\" I watched him pull away through my tears, watched him undress. And then he got into the water, pulled me close, and I was back in the safe circle of his arms, sniffling into his shoulder. \"Deep breaths. Disorienting after I held you so far under, isn't it? We'll take this slowly. How about we finish the bath and go for a walk together?\"\n\n\"O-okay. Yes, Master.\" And I could do that, when he laid it out like that. Everything seemed less confusing coming from his soothing voice. He put everything in a nice, listed order while my mind devolved into chaos.\n\nHe made another of those soft, pained sounds and when I looked up at him, he seemed to be forcing himself to talk. \"Call me Ash,\" he finally said. \"Well, my real name is Asher Lavrov, but I go by Ash.\"\n\nMy tongue felt too thick in my mouth when I answered. \"Ash.\" Having his name felt like I had the name of a god. I threw myself into his arms again and held on tight, using him as an anchor.\n\n\u2014\u2014\u2014\u2014\n\nAsh\n\nI hadn't anticipated how goddamned difficult it would be to let her up from her slavery. Not for her, necessarily. I had long been wary of that, because I knew how deep subspace scenes could work, knew that the drop from them could be flat fucking brutal at times. For both sides. It had to be done slowly, easily. Little adjustments. For instance, I knew better than to show her the closet I had for her. You see, with her as my slave, during those moments when I was away from her, I would sometimes see outfits I thought she would like, or shoes or scarfs, and I bought them. There was also an eternity collar and set of cuffs in that closet, ones I had special ordered from Ivory's jewelry stores. I wasn't sure what the logic was for doing so, didn't really even think about where our relationship was going, but it had become clear that it was going somewhere.\n\nBut I couldn't just take her to that closet and tell her to get dressed. It'd be cruel to do so, in the same way it'd be cruel to take her to eat and tell her to choose whatever she wanted. She hadn't chosen those things, or even worn clothes, for a month now. But I couldn't just choose an outfit for her, either, because I needed her to make some decisions and get used to that feeling again. I had to have her back to reality, so we could talk about where our relationship might go.\n\nAnd that's where the difficult part came in for me. Because my thoughts would answer that with, Do you really have to have that though? Why not choose her clothes for her and guide her along the path of being your slave, while getting her used to going back to school instead? Why not go for the walk and make quiet suggestions that end with her kneeling at your feet again by the end of the night? I had to focus and snarl at that voice to shut the fuck up.\n\nAlmost angrily, I chose three outfits, laid them out, and then I took a deep breath before I went to get her from the bathroom where she was drying her hair. I grinned at the sight of her staring at herself in the mirror, because she was turning this way and that. She touched her lips and pressed her fingertips to her ass, where there were some lingering marks from the braided whip. But then she jumped back when she saw me watching, and there was just a little bit of shy fear in her eyes, the kind that taunted my beast. I had to ignore my raging hard on as it was, just from the sight of her pressing my marks. \"Come on. Come and get dressed, lovely.\"\n\nObediently, warily, she did. She followed me and studied the outfits on the bed, her eyes going wide. All three were something to be worn outside, something comfortable. \"Oh! They're all so pretty. Thank you, M- um. Ash?\"\n\nI touched her nose, even though inside I was having my own little morality war. I itched to hear her say that unspoken word again. \"You're welcome, Jezebel. They're yours if you like them. Choose your favorite and let's have fun and talk. No more of those tears. There's nothing to cry about.\"\n\nAnd her eyes were clear again. She seemed to be okay when I laid out the choices, and I was both glad for that and chafed to that. Goddamnit. I can see how to do it. Which meant I didn't have any fucking excuse to not guide her out of it, had a responsibility to do it after I had so thoroughly enslaved her. I sought solace in that cold place, wondering what this strange feeling was that made me want to feel the emotions, even though some of them hurt me. Because the bad ones only seemed to intensify the ones that felt so very good. Like pain intensifying pleasure in my sex.\n\nI spoke softly with her on the way to the trail I knew of, asking her about the book she was reading, which was an alternate history of the Tapestry of Bayeux. It animated her like it had done even in her slavery to me. Books and histories, anything mentally stimulating, made her alive no matter what state we were in together. Master and slave. Friend and friend. She spoke happily of Normandy's conquest of England in 1066 and it amazed me how into it she got. She felt so much emotion for even these crazy things and I had learned things about my little slave, her likes and dislikes.\n\n\"But still not as interesting as the Battle of Stalingrad and WWII?\"\n\n\"Nowhere close!\" Her eyes were shining when she got out of my car. She had chosen jeans, with a light sparkly jacket, and she looked downright adorable with her hands in the pockets. \"There's nothing as good as WWII, though.\" She moved close to me when we walked together. After our stint, she curled into my arms with the ease of a lover, the familiarity of someone close. It soothed me to see it. Where once my eyes had been so analytical, I watched these motions with the pleasure of someone involved. God, what was I thinking? She was years younger than me, emotionally unstable, but that instability also spoke of loyalty. I had seen that adoration in her eyes, the gratitude for someone who could calm her. What was more, she was capable of empathy. I had to force her face in it, break her down, but she wasn't a bad soul. No, she was warm and sweet and I knew she was young. I didn't want to take her life and experiences away from her.\n\nI wanted to be part of them. If she insisted on trying different doms or people out, I would understand. It would hurt like hell, but she had a right to live and find out whether I was really what she wanted. Maybe she would consider the idea of an open kind of relationship. Tricky, that, but if there was anyone it could work with, then I had to admit I was a good person for it.\n\nHer laughter broke through to me and I turned my focus back to her. \"I had to work up the courage to ask this, because it felt like breaking the rules to ask a question. What are you thinking about?\"\n\nWe had reached the trail now and I smiled at her question. \"Well, then, I feel I must encourage the behavior of asking me questions during certain conversations, and this is most certainly one of those conversations. I was thinking about how to propose a relationship with you.\"\n\nHer nose wrinkled and I rolled my eyes. Relationship was a terrible choice of words, apparently. \"You mean the last legal form of slavery?\" I lifted my eyebrow and she grinned. \"I'll take the real slavery to you any day, rather than a... than a... gilded cage...\" Her voice trailed off and she swallowed and just like that, warning bells sounded in my head. I didn't know where her thoughts were.\n\nHow did I not know where they were? I had always been able to tell and yet now in this horribly fragile moment, I was at a loss. For God's sake, I had experienced a month in the most intimate relationship with her, and I couldn't tell now? Fucking really? \"Than a gilded cage?\" I prompted softly.\n\n\"Oh! Um, sorry. Than a gilded cage under a different name. I lost my train of thought.\"\n\n\"It's alright. I understand.\" My fear soothed a little bit, because her focus was back on me and not down whatever dark alleyway it had disappeared to. Her expression was cleared again. \"And that's fair, really. I was going to say that I'd like to be in a relationship with you, if you're willing, and it can be whatever type of relationship you'd like, however open you'd like. You can date others and go to bookstores with me, use me for domination sessions to clear your mind, if you like. I'd have to warn you that would be hard for me, though. Or you can be my slave still, if you want.\" I grinned shyly. \"That'd be easiest for me. And we can talk about you going to classes and living off campus and obeying me.\" My grin turned teasing and happy. \"I think you'll find I can keep a little slave girl's focus where it belongs, instead of having her run wild on weekends, or going to sex clubs while rolling Ecstasy.\"\n\nShe laughed easily for a moment. \"You're crazy if you think it will be anything less than slavery to you after what we just did for a month, especially after that feeling of... of...\" And then she fell away from me again, and I heard those alarm bells. It was like I was talking to two people. One was the calm girl I had seen in the dungeon, but the other was the wild, terrified thing I had known beforehand. \"That feeling of disappearing.\"\n\nDisappearing.\n\nDisappearing?\n\nFor a moment, I was more furious than I'd ever been in my life. The force of it stunned me and I had to focus to wrap myself in the icy coldness, regain my control. \"How do you mean by disappearing?\"\n\nShe frowned and considered it, but it was like I was watching her fade away right in front of me. Fear took over her little by little. Her stance turned defensive. \"I don't... I don't know. Um, just there wasn't a feeling of being all there, I guess? Or maybe I was so calm and I'm never calm and I always feel like this instead where my thoughts are racing.\"\n\n\"Hey. Look at me, Pet. Take a breath. You're working yourself up. You need to calm down and think clearly for me, or else we can't have this conversation yet. Breathe for me and calm down.\" She obeyed automatically, but her thoughts still raced and her face still twisted with them. \"Are you hungry, Pet?\"\n\nI was thinking of a change of scenery, but it turned out to be the question that would damn me. She nodded and then without thinking about it, her gaze lowered to my jeans, and she choked. And this time, there was nothing I could do to stop the panic that rose in her so fast that it stunned me. \"Oh, my God. Holy shit, I just- No. I have to get out of here. I have to go home. I have to... I- I-\" She cut off and stared at me with wide eyes that cut me. Without another word, she turned to run.\n\n\"Wait! Jezebel, please, don't leave. Talk with me.\" I caught her wrist in a last effort and she turned with so much panic.\n\n\"Let me go!\" When she turned, her voice was a shriek and she clawed at my wrist and hers, cutting herself and breaking off one of the nails I had so carefully manicured. She tossed the icy hair I had glossed and tamed to a lovely shine, tousled it into a mess with her panic.\n\nI let her go because somewhere, somehow, I had already fucked up. I had missed something crucial to her if I had given her the impression that she was disappearing under my care.\n\nThe worst part was that I didn't even know what I had missed. I had seen everything, noticed everything, except for something necessary. My chest felt hollow, aching, as if some part of me had been gruesomely ripped out and I should bleed to death from it. But there was no blood from this wound.\n\nI made it back to my car without going insane, which was amazing, because all I could see was her face. But by the end of the week, my sanity was fraying. She wasn't at her apartment, I quickly learned, wasn't answering her phone calls or Facebook messages, at least not from me. Even days later she was gone, disappeared, and I stalked her like a creepy motherfucker, but couldn't find her. Her classes would be starting soon, and I didn't know if she was getting to them or if I had seriously fucked her up somehow. If she was active around campus, she wasn't staying at her place.\n\nIt was torture. The worry ate me alive.\n\n\u2014\u2014\u2014\u2014\n\n\"Holy shit.\" I covered my face with my hands and groaned, feeling terrible. I vaguely remembered that it was Sunday and after Sulfur's had closed down the night before, I had gone a little batshit. Because it was the first day I wouldn't have the club to distract me from the goddamned heartache that sucked so freaking bad. I remembered pouring a glass of the maple bourbon that Ivory liked, and thinking it tasted terrible, even while I drank another sip because it made me feel fuzzy. And then I remembered taking a leaf out of her book.\n\nI had taken an Oxy for recreational use for the first time in my life. \"How does she do this all the time?\" I felt like freaking death.",
        "\"Good morning, sleeping beauty.\" The voice was wry and made my head hurt just to hear it. When I opened my eyes, I looked up at Ivory and because he's an amazing person, he had the blinds closed, and minimal light on. He sat beside the bed I lay on and I had the presence of mind to realize it was his guest bed.\n\nI vaguely remembered deciding to go to his house, to tell him... everything. I remembered how the doorman hadn't let me up to his apartment, how Ivory had been forced to come down to get me. I remembered staggering when he did, so that he had to catch me before I fell, remembered his whispered, \"What the hell? Are you high and drunk, Ash?\"\n\nAnd then I remembered answering, \"I killed dad, Ivy. Do you think she was my punishment for doing it?\"\n\nI flinched at the memory. \"Well, shit.\"\n\nIvory chuckled lightly. \"Here, man. Drink this and take these.\" He held out a bottle of Powerade and two pills. One I recognized as an aspirin and the other I glanced at warily.\n\n\"Um, what's that one?\"\n\n\"Well, since you're already down the experimental drug route, I thought a light dose of that might help you out for the conversation we're getting ready to have. It's a tranquilizer, little brother, because you have some answers to give me.\"\n\nI sighed and sat up in the bed, wondering how it came to be that I was in Ivory's hands while he took care of me for once. Usually, I had ended up with Ivory sleeping in the back of Sulfur's, collapsed after he was on some emo shit from how dark he liked to play. Always before, it was me waking him up with gentle words of how nothing was wrong with him, and how he obviously had a conscience.\n\nAnd now here I was. In his guest room. And oh God, the door guy. I drained the Powerade, took the aspirin and light dose tranquilizer. \"So how does this stuff feel? The OxyContin last night was super weird. Does this do the same thing?\"\n\nHe laughed. \"You know, it's questions like that one that made me the most scared about what happened last night. I have never seen you take a single drug, or pick up so much as a beer. Not one, Ash. What did you end up drinking, by the way? Whatever it was, you sucked at handling it.\"\n\nI flinched. \"Yeah. It was whatever stuff you drink. It tasted like hell.\"\n\nHe leaned back with a grin. \"Only if you're not used to fucking liquor, little brother.\"\n\nI stared at him and then down at my hands. \"Oh. Oh, that's what this stuff feels like. How fascinating. I imagine this would be more addictive than the painkillers, for most people. All the emotions are dulled out and easier.\"\n\n\"Great, now I can play psychologist. So what happened to you as a kid, Ash? This might shock you, but it was very easy for me to believe that you killed dad. I didn't know him, but I know you, and I know that you have always seemed hollow or something. No one can ever look you in the eyes for long, because there's something missing. So, when you said that in a drunken haze, it was pretty easy to believe you. What happened, Ash? I'm your fucking brother. Whatever it is, I'm going to take your side. And, while we're at it, who is the 'she' you keep talking about?\"\n\nI opened my mouth and the words just started. The walls were gone now and it felt like I had shed a skin. It felt kind of like a wound that was scabbed over and accidentally been ripped open again. It was a feeling that hurt like hell and felt raw, but also felt kind of good. The sensation from the tranquilizer made everything easier, and once it started pouring out, it was like a dam bursting wide.\n\nI told the whole horror story, about a father who had a, shall we say, illegitimate job. I told about the late night drives across state lines that seemed innocuous, told about the way violence seemed to flood like a poison into our dad, told how his boss liked him that way and encouraged it. I told about how he was turned more and more mean, like a dog pushed into brutality, told about how I never really blamed him. No, I always felt a deep sadness and fear of him, for how he was so volatile and so unstable. Alcohol was his best friend first and foremost, which probably had bearing on why I wouldn't touch most substances, for fear of losing control. I told about my first pet puppy and how he had been killed in a rage. And I told about how I finally turned old enough to realize what the late night drives were, finally turned old enough to realize that the drunken violence was going to end my life if I didn't do something and do it quickly. The breaking point was when he fell out of favor with his boss, and every second was torture. Russians were not exactly the most trusted, and he had done one too many drugs, so the paranoia made him into a screaming nightmare.\n\nKilling him had always felt more like a mercy than anything else. I had done it silently, when he was asleep one night. It was only after I realized he had talked himself into the thought of murdering me, before someone else got to me. I don't know that he ever would have done it, but I did know my mother's sudden disappearance wasn't innocuous, so he might have been capable of it by that time. The act had definitely broken something in me, definitely made me realize that I had done something akin to selling my soul. Murder was the ultimate disconnect from humanity, even when done in desperation. No one would ever know or suspect that it was me, given my dad's known past affiliations. No, all anyone found was a traumatized teenage boy who was quiet, but brilliant. I kept my head down in all things, and played the victim card for the first and last time in my life. And I made a deal with myself.\n\nI had broken a rather terrible legal line and there was a danger in doing that. Like any depravity, it would be so easy the second time and a time after that. I had gotten away with it and that feeling was, horrifically, pretty powerful. So I swore I'd be good. I never felt much of anything anymore and it was easy to get through life.\n\nAnd at that part I smiled ruefully, while Ivory and I took another drink from a bottle together. This time, I was in moderation with it. He watched me and tilted his head at the change in my expression. \"It wouldn't be much of a story if I got to keep that control, I suppose. Maybe you can guess what happens next, based on what you've heard. I met her.\"\n\n\u2014\u2014\u2014\u2014\n\n\"Holy shit.\" The second time it was Ivory's turn to say it. Somewhere in the middle of talking, we had ended up on his balcony. We hadn't drank much, and I especially hadn't with the tranquilizer I had taken. I wanted enough sensibility to finish the story and Ivory turned out to be correct. Moderation was a good word. \"Fuck me, Ash, why the fuck wouldn't you tell me this? You've been through, like, actual hell.\"\n\nI laughed. \"Honestly, I didn't think it would feel this good to tell someone. And it was in the past and a dead thing that was settled. I didn't think you needed that shit in your life, in your head. Why would I bother you with it?\"\n\n\"So it could make you feel not fucking alone, that's why! I'm your brother. Jesus... Think he's the reason why we're both violent fucks?\"\n\nI snorted at that. \"Fuck no.\" I thought about the words before I said them. \"His was a way different kind of violence, Ivy, a guilty kind. The two things aren't even in the same sphere.\"\n\n\"Ah. I just wondered.\" To be fair, I could see why he would wonder that. \"And... Ash, I think your girl might come back to you.\"\n\nI rubbed my forehead. \"Why do you think that? Because... I don't.\" Which was what was killing me if I was being honest.\n\n\"Well.\" He leaned back in his chair, having taken the day off to deal with my bullshit, because he was awesome like that. \"Because if you think her running was entirely your fault then, no offense, but that makes you the most narcissistic fuck alive. It sounds like she doesn't even know what she meant when she talked about disappearing, or what was missing for her. I think she'll come back because... because I think she has to figure that out so she can tell you. Also, you're kind of adorable when you're in love.\"\n\nI threw a cup at him and he laughed and I had to grin, feeling alive again. Maybe Ivory was right. Maybe I just needed to wait and hope, as the Count of Monte Cristo would say. And he had ended up with Haydee the slave, so maybe there was a chance I would end up with mine.\n\n\u2014\u2014\u2014\u2014\n\nJezebel\n\nMy life for a few weeks was a haze. Not the acute, wonderfully focused, lustful haze that my Master had given me, either.\n\nDon't think about him.\n\nIt was a bad, bad haze instead. I switched my drugs as I needed to, since classes had started back. I would go through the lectures in a downer spell, sitting in the back sometimes so I could drink and hide it. And once my homework piled up on me, I would switch to Adderall and burn through the work in a focused kind of haze. Though it still wasn't the controlled type of focus that my Master gave me.\n\nNo. Stop it. Don't think about him.\n\nAnd then I was back to being down. I would do awesome work and turn it in miserably, with no pride in it, because it still wasn't my best work. I wasn't at my best and even not at my best, I was still academically amazing. But, my Master wouldn't have let me settle for that.\n\nHe's not here. Stop thinking about him!\n\nI vaguely remembered switching apartments with my roommates' friend, vaguely remembered passing out someplace different, showering someplace different. For a while, I would see him around, looking for me probably. And I would hide like a rat, too scared to have an adult conversation with him. I had hurt him, I knew, and maybe that meant I deserved this feeling of pain. But staring at the sun that day with him had been like waking from a dream-\n\nYou mean like this is a dream?\n\nHad been like realizing the happiest moments of my life were lies-\n\nYou mean like this is a fucking lie?\n\nHad been like raising above foggy waters that I could drown beneath-\n\nYou mean like you're drowning now?\n\nWeekends were a nightmare-\n\nWhat are these razor cuts?\n\nStarted to get worse-\n\nYou're going to die.\n\nStarted to get unbearable-\n\nThere's a cure and you won't take it.\n\nStarted to get dangerous-\n\nLet me help you, kotik.\n\nAnd then, I finally broke and I couldn't even remember what I had taken, couldn't remember the cocktail. All I knew was that I was suddenly standing in front of a very familiar door, and I couldn't remember how I had gotten there. I raised my hand to knock and fell to my knees instead. I vaguely remembered crawling to the side of the wall, in the back alley, and curling up, cuddling in my jacket. I wasn't where he was, but maybe this was enough, to just be near that dark world where everything made sense. Maybe I would start to make sense again. I laughed softly, with my eyes closed, and remembered telling him it had felt like I was disappearing.\n\nI had been lying and now I knew what disappearing felt like. It felt like curling up on that wall, as a shadow of the person I had been. It felt like hurting the most loving person I had ever met. Goddamn him and how wonderfully amazing he was.\n\nI don't know how long it was before someone touched my shoulder, and I heard a voice that wasn't his. I growled at it to go away and rolled over, tugging on the cheap pleather collar I had taken to wearing for comfort. That voice spoke again, but I was halfway back asleep, and only dimly aware of someone telling me it was too cold at night, and this was bad. That voice could go fuck itself. I was so freaking tired from being scared all the time.\n\nI growled again when I was tugged to my feet, forced up with my arm around someone's shoulder. And then there was another voice. \"What the fuck?\"\n\n\"I don't know who she is, but ask Ash what to do.\"\n\nThere was arguing and I wished they'd all just shut up and leave me alone to my misery, because I'd hurt the one person who had ever actually liked me for me, and deserved it.\n\nBut then it was all erased, washed away, because I heard that voice, his voice. And he was cooing above me. \"Kotyonok,\" he whispered. And he spoke a sentence in Russian. I had spent most of my free time, while drugged, learning that Rosetta Stone course. Somehow, it had stuck this time because I whispered back in Russian. Something about me being crazy.\n\nHe laughed and lifted me and finally, finally, I was back in the arms of that wonderful demon, the only person I had met so far who wouldn't put up with my bullshit, who would keep me secure from myself.\n\n\u2014\u2014\u2014\u2014\n\nI groaned awake, already knowing where I was. I felt too safe, too wonderful, and there was only one place that made me feel like that. I opened my eyes and looked out of the bars of my cage. But then I frowned because there were bars and it was a cage, but the view was wrong.\n\nAnd there was someone else with me. My cage was not big enough for two people to cuddle so comfortably. It took me a minute to piece it together, but I realized I was asleep under his huge sex bed.\n\nAnd he was with me. I rolled over to look at him and he was already awake, smiling at me. \"Good afternoon, Pet.\"\n\nOnce again, I did exactly what the old me would do. I burst into tears and launched myself back into the safety of his arms. \"I miss my Master!\" I wailed it, letting out all the terrible pain and loneliness and sorrow that had taken hold of me in one cry. \n\nHe tsked and chuckled, cradling me. \"Such an emotional little slave. It's alright. I'm here and I've always been here. You never have to leave again, if you don't want to.\"\n\nI sniffled pathetically against his chest. \"You promise?\"\n\nHe laughed above me. \"Pet, so... here's the thing. After you showed up like that, I- Ah, I did something bad.\"\n\nThere was something in his voice that made me scared, just a little, some note of remorseful guilt. When I looked up at him, he glanced back and almost flinched. \"W-what do you mean?\"\n\n\"I couldn't let you go again. I don't know what it is about you and your crazy antics, but I can't just let you run again, not without some mark of mine.\" That's when he lifted my hands and I blinked down at my wrists.\n\nEach one had a seamless black circlet wrapped around it. I twisted one and studied it and found no clasps, no release.\n\n\"They're called eternity bands,\" he said softly, lifting my fingertips to touch my neck, so that I could feel the one there. \"They're very discreet, but they don't come off easily. Please don't hate me, Pet, but I'm keeping you and loving you whether you want me to or not.\"\n\nMy crying intensified and I burrowed into his embrace, though I couldn't really get much closer. I sobbed and started pouring out with everything. \"I'll never hate you and I couldn't ever hate you and I miss you so much, Master, and I miss showing you movies and things and I miss flirting with you and cuddling with you most of all and I think that's the one thing I'll miss most when I'm your slave and - and - and I miss my Master!\"\n\nHe pulled away from me to stare into my eyes with a look like I had struck him. \"That's what I missed! God, how could I have been that blind...\"\n\nI sniffled and stared into his deep, soothing eyes, so cold that they tamed me. \"What do you mean?\"\n\nHis expression was changing, turning into something lighter, his mouth curving upward into a grin of excitement. \"I've been wondering all this time where I went wrong, Pet, because you said you felt like you had disappeared. I had thought I was filling all of your needs. When I took you out of the dungeon, you had company. When I spoke with you about the books you had chosen, you had mental stimulation. You weren't stagnant, and I didn't leave you alone or bored long enough to let your mind get too cluttered.\n\n\"But then you said you'd disappeared and that's an interesting choice of words, isn't it? I had already known that what I was doing, while hotter than hell, was borderline brainwashing you. I'm not exactly a moral person, but I was trying to be careful about it because I loved those date nights too, Jezebel. I loved them more than anything, and I never wanted to erase you or suppress all of that crazy personality.\" He stroked a thumb under my eyes and I tilted my head, not entirely sure what he was talking about, but having a vague idea. As intellectually brilliant as I was, I was exactly as emotionally stupid. I couldn't remember emotions to save my life, but I did remember the words I had said and the fact that they had felt real when I first said them. But then I had felt an actual disappearance over the past few weeks and now, in the wake of that, I couldn't remember the other disappearance. \"Look, will you let me try again, Pet? And this time, you're not allowed to run when it's scary or when I mess up because, despite your romantic fantasies, I'm not perfect and I'm only human.\"\n\nI curled closer to him. \"I don't think I can live without you, Master. Can you fix me?\"\n\nHe laughed and cradled me. \"Lovely kotik. There is nothing in you that needs to be fixed. There is something that needs to be filled and satisfied, but nothing that needs to be fixed. Come on. Let's take a bath together. You've ruined your lovely hair and I need to fix it. And then there's all these scratches and all these wounds. Let me be Master again and let me get to work. For right now, that's where we'll start, little Holly Golightly.\"\n\nIt wasn't a choice and I crawled out of the cage after him, taking his hand when he held it out. When he tugged me into his arms, he tsked over my hair and stroked it back. I had taken scissors to parts of it, I remembered, on a bored spur of the moment attempt to cut the locks. I remembered an irritation when I looked in the mirror and saw how glossy he had made me look, how he had pampered me into a well groomed Pet at his knees. Already that thought made me wet again, for how good he was at taking care of me.\n\nHe didn't take me to the slave bathroom either, which I partly expected. After showing up drugged and shivering to death on his doorstep, and after he had shown me the eternity collars, I partly expected him to drag me to the dungeon, to start a new version of training that involved my school and classes. So I squeaked in delight when he took me to the bathtub, instead.\n\nHe smiled at the response. \"You seem like you could use a friend and some decadence for the moment, Pet. Come here and get in.\" He was ever the Master, ever the caretaker, and his touch was gentle when he smoothed his shampoo and conditioner into my hair. He poured water over me and washed me down, with the touch of all of his routines.\n\nAfter that was his haircut. He stroked his hand down my hair and went to work evening the locks, until they were as perfect as he needed. My hair was a hell of a lot shorter afterwards, though, and he tsked again. \"Sorry, Pet. I tried to keep as much as I could, but you must have razored some of it.\"\n\n\"It's okay. I was high and my hand kept shaking, actually.\"\n\nTo which he shook his head and sighed. \"Come on. Bend over the bed so we can both feel better.\"\n\nI swallowed nervously, but I obeyed, staring at my strange little delicate cuffs, and feeling a little surreal. I turned around to watch him come back with the belt and whimpered, but I fell into the role like I had been born for it, fell back into the rules and the position with all the need I had felt for weeks now. \"What is this for, kotik?\"\n\nI sighed into the bedspread, my legs spread so wide and my hands clasped behind my neck. \"Because I ran and went back to being bad without talking things out with you first.\" And then, because I really had missed him and this was really where I wanted to be, I looked over my shoulder at him, with a slightly bratty grin, while he rubbed an all too familiar oil into my asscheeks. \"And there is no playing under the influence at Sulfur's.\"",
        "But it was only slightly bratty, because I loved my Master, and never really wanted to disrespect him. I just wanted to flirt some and see him smile. And it worked. He laughed, with a shake of his head. \"Naughty girl.\" I gasped when he slapped each ass cheek and down on my thighs, like he always did to start the burn of the oil. \"Count what I give you. We both know you've been missing routines, so we'll start with a lot of those again.\"\n\n\"Yes, Master.\" I gasped with the first stripe and groaned, my legs already sticky with cum just from the sight of him with that belt. \"One, Master. Thank you.\"\n\n\"Good girl. How well you remember. Ivy thought I was a little crazy when I tried to tell him about you, about how you were born to be a slave.\" He cooed it lovingly. \"But it's true. Let's try again together, with a few differences this time.\"\n\n\"Okay, Master.\" I gasped with another belt strike, enjoying it. \"Two, Master.\"\n\nHe noticed how hot it made me, too, because I thought he was the perfect Master even while he seemed to think I was the perfect slave. \"Bad little slave girl. This is supposed to be a punishment. You're enjoying it way too much and you haven't even started to sleep in the chastity belt again, yet. But you still can't control yourself, can you?\"\n\nI lifted when his fingers stroked my pussy, trailing through so much arousal it felt like bliss. \"Oh, Master! I'm sorry. Three, Master.\"\n\nHe laughed when I jarred. \"We'll adjust you back to your habits yet. Pretty little Pet. But it's going to be a slightly different routine this time and I don't want anymore running, understood?\"\n\nLike I could do that anymore. I grinned at the feel of my cuffs and collar, glad he had locked them on me. No more outs and no more ruining myself with bullshit. Just a relationship and him and working it out.\n\nThank God. I was so tired of being scared, of overthinking everything, of running and coming back. I couldn't deal with it anymore and I was grateful to him for taking those things away.\n\nI cried into his bed, a captured little slave, subdued and happy. All I could do was hope that he was true to his word, that he wouldn't erase me, that he would love me and be the kind teacher of a Master I had experienced so far. Either way, I knew it wouldn't be bad being his slave and I wouldn't want for much of anything. He had already shown that.\n\nMaybe if I gained enough of his favor, he'd even let me use that perfect bathroom more often too.\n\nI fell into obedience because there wasn't really any other choice, but then there hadn't been one anyway. After I had felt the peace he could give me, I had always been destined to end in his arms.\n\n\u2014\u2014\u2014\u2014\n\nAsh\n\n\"Jezebel, that's enough. Come on.\"\n\nShe flinched at the sound of her name. I used it sometimes now to keep her attached to it, but we both preferred my pet names for her and my fitting slave name. Pet. She was the perfect one. \"One second. Just one more run through.\"\n\nSo, in a hilarious twist, once we had gotten her back to sobriety and back to performance, without drugs both clouding and enhancing her mind, we discovered that she was intellectually perfect. Except for a few areas. One of those areas was Biology. And she needed a last science class to finish her degree, because apparently the science credits bored the fuck out of her. It was amazing, the way her mind would go full speed with Vector Calculus, but then it would suddenly go straight the hell to sleep when she looked at animal classifications.\n\nHer lips moved over flash cards, because that'd been the one way she could get anything to stick. Basic, child like flash cards.\n\nShe moaned. \"I can't do this. I can't do it. I'm going to fail.\"\n\nI leaned against the doorway. \"You say that every test, literally every one. You're going to be fine. Come on or we'll forego our date afterwards for a punishment, one where you'll think about the words 'that's enough' and what they mean.\"\n\nShe flinched at that again and stood, running her fingers through her glossy hair. I had it back to its sleek shine, and today I had given her a headband to wear with the jeans and T-shirt I had chosen for her. \"Okay, okay, I'm coming. I can do this. I can do this. I've got this. It's not so bad. It's just animal kingdoms. Why are Biologists so goddamned specific?\"\n\n\"I would imagine because of the sheer amount of animals that exist on planet Earth, Pet.\" She was following me at least, her mind running through the cards. And I sighed when I had her in the car. \"Pet, pay attention. Are you listening?\"\n\nShe looked at me instantly, eyes focusing on nothing but me, her mind ceasing its wandering. \"Yes, Master.\"\n\n\"Which was harder, Calculus II or Vector Calculus after that?\"\n\nI had taken to driving her to her classes because of moments like these, where she was mine to care for and mine to control. \"Calculus II, easy. That class was a nightmare.\"\n\n\"Yeah, know why?\"\n\nShe considered it. \"No, I guess I hadn't thought about it, or cared much.\"\n\nI smiled. \"Fair, but there's an actual reason why that's the case. You go to a large college, and Calculus II is one of the classes that is required for things like engineering and pre-med. There's a lot of people, in large colleges, who are in those majors who shouldn't be, so they make Calculus II a goddamned nightmare to get rid of people. But you want to know which majors are using basic Biology to get rid of people? Fucking none of them, kotik, so take a deep breath and calm the hell down. It's going to be okay and easy unless you work yourself up like you always do. The T.A. giving this is going to not even care about it, and probably be thinking about the date they have tonight, because it's fucking Friday. Seriously, chill.\"\n\nShe was laughing by the end of it, far more relaxed, and I had to smile. I let her lay down in her seat and stare up at me while he spoke about her decision to take the LSAT, while we spoke of our dates, spoke of how Sulfur's was doing. \"How do you know all this stuff? And where did you go to school? And you said you would tell a slave that sad past story you have and I'm your slave now, aren't I?\"\n\nI smiled at her and parked to let her out when I got to her drop off. \"I know all this stuff because I pay attention to life and people and most of them are similar creatures, Pet. And I'll tell you the rest tonight after our date. Go on, go take your test, and text me when you're done.\"\n\nShe got out and left, blowing me a kiss that made me shake my head. I waited for her at a coffee shop, planning the way to go about the rest of the day, how to do it without ruining my surprise. But mostly I drank a latte and read my book, the same book Pet was reading when she had free time in between her classes. Throughout most of the week, her classes were at night, which both worked out perfectly for us and kind of made me crazy. I liked having her safe where I could drive her, but I couldn't do that when she had to be there at night. She took the subway instead, and she had begged me to let her do that one night. When I asked why the hell she was so keen on the subway of all fucking things, she curled up on her pet bed in my office. It was a minute before she softly said, \"You'll think I'm stupid, but I like seeing interesting people and there's usually someone interesting there. I like thinking of their life stories.\"\n\nI hadn't thought her stupid. I had sighed because it made my heart throb, how pure and sweet she could be. So long as I didn't let herself get worked up because of her fears, she was an angel. \"Alright, Pet.\" And really it was, because I had already learned a life lesson. I had tried to shelter her from her own emotions so hard our first go round that she had been right. I had suppressed some key part of her, something that the world needed a little more of. I couldn't protect her from everything without it costing something bad, no matter how much I may have wanted to.\n\nWith things like our date nights, and my allowing her some decisions, came those crazy emotions. They still tortured her and made her cry on my shoulder, but all I could do was stroke her hair and softly say, \"Such an emotional little slave.\" And then I would help her stand back up again, help her calm down, and feed her ice cream after her dinner from the cock toy.\n\nBecause I had for damn sure taken to that again. I allowed her more variety of foods, though. She always slept in her chastity belt again, and she was to always spread wide when I commanded her to. But there were other times when I would curl up on the bed with her, with some skittles, and she would show me another show or movie. Or we would discover one together. Lately it was Amazon's The Boys which had her in laughing tears during every episode.\n\nIt was hard at times. Control was my drug and her happiness was something I tried to work for, but I couldn't take emotions from her. They were part of the girl I loved and I had accepted that.\n\nI smiled when my phone lit up with her message. It hadn't even been 20 minutes for a one hour class and I sent her the coffee shop name, so she could come to me.\n\nHer eyes were vibrant with excitement and she skipped to me, sitting across the table. \"Holy shit, you were totally right. That was the easiest damn thing I've ever done.\"\n\n\"Easier than Vector Calculus? Surely not.\"\n\nShe slapped my shoulder playfully and I laughed. \"Okay, now where to? The book store, right?\"\n\n\"Yes.\" I stood and she followed suit, a happy little bundle of energy now that she'd finished and gotten her stress over with. I was more calm when I followed, and she danced by my side.\n\n\"Master, I think I did very well.\"\n\nI snorted. \"Right, what do you want?\" Because she was going to use good behavior to bargain with me.\n\n\"I want three things.\" The first time it had happened, she had been coy and shy about asking, but after enough times, she didn't even hide it anymore. \"I want a week where I get to use your bathroom, a pumpkin spice latte with a chocolate donut, and for you to meet a friend of mine.\"\n\n\"I'll do the last one for free, but you have to choose between those first two. However amazing you did wasn't worth both of those things.\"\n\n\"Damn it. Um. Okay.\" She considered and then sighed. \"The latte and donut. I really like your bathroom, but I miss chocolate so much. Come here. This is my friend.\" I watched her tug at her collar absently, as if reminding herself that it was there, and she always got this sweet little smile when she did that.\n\nI decided she could have an extra two days in my bathroom. She really was a sweet slave and she rarely gave me any trouble, even when I limited her or punished her. The first few weeks were the hardest, when she wanted to do things like cut her hair and had made assumptions that she could. But after a few punishments where I ended by tugging that collar on her neck, I would harshly ask her, \"Feel this? What does this collar mean for you, Pet?\"\n\nShe had sniffled, crying into the bed, and answered back, \"That I'm a slave.\" And after that she had started to adjust to it. So the truth was she really did deserve those days in my bathroom.\n\nAnd as for meeting her friend, I felt a little bit of trepidation, but I was glad she was making those. I couldn't give her all the companionship a basic human would crave and she needed a few more friends. But I very quickly realized this girl was not just any ordinary friend.\n\nPet went to get her, laughing and grabbing her hand with a familiarity. Her friend was cute, too, a dark haired girl who was taller than Pet was, and she moved with a shy glance that made me pause.\n\nAh. This was... interesting. I was already smiling, considering the possibilities. The night before, Pet had asked me about our relationship, soft little questions where she wondered about playing with other people, and I suddenly had a guess as to why that might be. \"Come on, it's okay,\" I heard her say. God, her friend was painfully shy. Pet seemed to think it was cute, though, and tugged her to me. \"This is Nynaeve, but that was mean of her parents, so we call her Eve for short. And Eve, this is... my boyfriend.\" She said it with a mischievous grin that made me lift an eyebrow, and her friend blushed but waved politely.\n\n\"Hi.\"\n\nI was on my best behavior and smiled. \"Hello. And for the record, Robert Jordan is still pretty amazing.\"\n\nShe laughed. \"That's true, but I still have to shorten it.\" She hesitated for a moment and then said it in a burst, as if she had to work up the courage to it. \"You own Sulfur's.\"\n\nI knew exactly who was to blame for this scenario. Pet grinned at me while she toyed with her cuffs and I had to laugh. Jesus Christ. \"I do.\" And then because I knew where this was going, I asked it. \"Would you like to go to the book store with us and let us show it to you tonight? You'll need your ID.\"\n\nAnd the shy girl fell away, like so many other shy submissives, when faced with the chance. \"Yes, please! And I have it with me.\"\n\nMy surprise for the day just so happened to be a book signing from an author that Pet loved, the same one who had something to do with the series Nynaeve got her namesake from. Having two of them was a lot like herding and leading two very excitable puppies. I didn't know what it was about submissives when they were around a dom, but they loved innocent games. The more time Eve spent around me, the more she bowed her head a little and it wasn't from shyness, because that was fading fast in favor of excited recklessness.\n\nUntil finally she reached her threshold and outright flirted with me. By teasing me? No, that would be too normal. She looked me dead in the eye and dropped her newly signed book onto my foot. \"Oops.\" But the grin on her face made me lift an eyebrow, and Pet's giggle made me turn to her too, so that she hid her face behind her hand and stifled it.\n\nDear God, this one was a good friend and a bad influence on my little slave at the same time. I picked up her book and handed it back to her with a smile, and then I waited for her to turn around, making sure we were safely hidden in our section. When she was caught unawares, I slapped her ass so that she gasped and dropped the book again to cover her mouth. She turned around, with her face blood red, and her eyes were wide and excited.\n\nThis was fun.\n\nI picked the book up again and wrapped my hand around her neck, to pull her close enough to whisper in her ear. \"You're not very good at holding onto that, little brat. My slave can tell you I'm rather keen on things like discipline, so maybe we should go to Sulfur's, where I can teach you a little bit of that.\"\n\nHer lips parted and her eyes fluttered closed, but when she opened them, she whispered back, \"Yes, please.\"\n\n\"Pretty manners. You'll find those get you a long way with me. But try again, with a 'sir' at the end.\"\n\nShe didn't hesitate and Pet whimpered with arousal beside me. \"Yes, please, sir.\"\n\n\"Good girl.\" I gave her a smile of approval and gestured. \"Come on. Let's show you mine and Pet's home.\" When I guided them to my car, they were quiet, and I had ideas going through my head on the things I could do, the games I could play. Eve clutched at Pet's hand for comfort, and inhaled when I turned to them both. But I only opened the car door for Pet to get in the backseat, and stroked her hair to let her know I was pleased. And oh, I was. I liked her definition of friends, a lot.\n\nI turned around from the driver's seat and smiled at her. \"Your friend is very shy, kotik. Why don't you help her with that, so she's a little more comfortable by the time we get home?\"\n\nPet moaned because she knew what I meant, and she switched seats to the middle one. While I drove, I listened to Eve whimper and then cry out while Pet rubbed her pussy through her thin yoga pants, heard the sounds of muffled little moans when she kissed Eve.\n\nBy the time I got to Sulfur's, my car smelled like fucking sex and Eve wasn't shy at all anymore. I made her stand while holding the book she had dropped, with her palms up at chest height, and her feet wide apart. She was already whimpering in fear and arousal while I grabbed her by her hair. \"Now, Pet is going to eat your pussy while I belt you. There are two rules. You do not cum without permission and you do not drop that book on my slave. Understood?\"\n\n\"Yes, sir,\" she whispered.\n\nI nodded to Pet, who stared at me with adoration in her eyes, and lifted her face to her friend's pussy. Eve's reaction was instant and her thighs shook with her tensing. \"Oh! Oh my God!\"\n\nI laughed and struck the belt across her ass, lightly. \"Did I mention that Pet has been heavily trained for oral sex? I feed her from a cock toy, so she hasn't had nearly as much practice with eating a cunt out, but you'll find that she's a horny little slut for the taste of cum, and so very eager to have it.\"\n\nEve cried out with hot arousal and I smiled, striping her ass. \"Oh, my God, please! Please, it's so good and- Oh!\" She loved the belt, I soon realized, fucking loved it. Her whole body jarred in response and she thrust on Pet's tongue, who moaned with how hot this made her.\n\nI circled around to her, needing to feel her for a moment. She lifted her head at the touch of my hand and her eyes met mine, so I could see how they glowed with her pleasure. I smiled down at her, loving the way she forced me to stand straighter and be more, just with her gaze. \"You can do better than that, Pet. If she isn't crying with her need to cum in the next few minutes, you'll spend the next few nights with a vibrator held to you, while you practice eating pussy with a few toys of mine. I'll leave my little Pet in pain for a week.\"\n\nShe cried out in answer. \"Oh, yes, Master!\"\n\nAnd then when she pressed her face to Eve again, she more than fulfilled my command. She used both of her hands and her tongue, while Eve turned into a sobbing mess. I was a kind Master for both of them that night and allowed Eve several orgasms. Pet got hers after her friend was gone, since she still only got them while my cock was in her pussy or her asshole to give me pleasure. But I allowed her a couple, for once.\n\n\"Thank you, Master!\" She shouted the words after each one, ever the polite, sweet little slave of mine. And I allowed her to sleep in my bed, a treat that made her bow low in a gesture that reminded me of a puppy.\n\nI laughed and touched her nose. \"Such an emotional little slave girl. Ridiculous thing.\"\n\nMaybe it was wrong of me, because it was true that the second time I took her, I didn't give her a choice. Ivory had thought I was crazy when I insisted that she was a born slave, until he met her and his eyes went wide, because she busted the shit out of a dom's radar. Even so, what I did was immoral. But I was too selfish and I couldn't let her go again. So instead, I made sure to give her kisses and love every morning and night, made sure to let her know how much of a good girl she was, made sure she had everything she desired. I made sure to guide her through her life path, helped her finally settle on a career she preferred. I was a careful, nurturing Master to her.\n\nAnd most of all, I made sure that she could safely feel those emotions that made her the most vibrant slave I had ever imagined. I'd never suppress them again, never make her feel as if she disappeared. I made that my life creed, that she stay with me and be the girl I adored, no matter how wild that girl could be.\n\nOh, and she never did get that card for Sulfur's. She just got to live there instead."
    ],
    "authorname": "Payne_Hall",
    "tags": [
        "slave",
        "sex slave",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ashen-master-pt-02"
}