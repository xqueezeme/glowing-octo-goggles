{
    "title": "Along Came A Spider Ch. 01",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n\n\nPart 1 - Prologue \n\n\"He is the Napoleon of crime, Watson! He is the organizer of half that is evil and of nearly all that is undetected in this great city. He is a genius, a philosopher, an abstract thinker. He has a brain of the first order. He sits motionless, like a spider in the center of its web, but that web has a thousand radiations, and he knows well every quiver of each of them.\"\n\n------ Sir Arthur Conan Doyle, 'The Final Problem'\n\n* * * * * * * * * * * * * * *\n\n\"Would you like a shot... at the title?\"\n\nThe words were uttered by defending Police Boxing Matches champion Cindy Ross as she stood in the ring for the final match of this year's tournament. It was Saturday, June 4th.\n\n\"Don't mind if I do.\"\n\nThe reply came from me, Your Iron Crowbar. Loud cheering followed as I stepped into the ring, ready to do battle for the title.\n\nWe had each won our previous contests, leading to this inevitable clash. The smack talk and betting throughout the Force had been tremendous since the quarter-final rounds. In the semis the day before, Detective Joanne Warner, who had been sparring with Cindy for months, made a very impressive showing. She fought well, and hard, and actually lasted into the second round before Cindy finally subdued her. She may have tired Cindy out some.\n\nMy semi-final was against Teresa Croyle. I don't know what it says about my Police Force that three of the Final Four were women, but these were tough Warrior Women. As Teresa and I 'boxed', I became aware that she had good knowledge of Aikido It struck me that she had been working out with my nephew Todd, who was a student of Aikido, as Elizabeth and I had been as youths. For the past several months, I'd continued my Aikido training with a master. I actually was glad; it was good to see the skills of Aikido being used.\n\nExpecting a tough fight against Teresa, I was surprised when she seemingly slipped early on. After taking her down and forcing her to yield, she just gave me a knowing look and said \"Take her down hard.\" I realized what was going on.\n\nAnd now, it was time. Cindy had on her white plastic protective gear, trimmed in blue, her football helmet blue as well; my gear was trimmed in red, with red football helmet. And our crowbars.\n\n\"The rule is suspended,\" announced referee Micah Rudistan, \"in order to allow the finalists to use their own crowbars!\" The crowd of almost 200 Police Officers cheered loudly. He then had us come to the center, where we crossed swords, so to speak, my red crowbar against Cindy's blue crowbar, as Rudistan said to follow his instructions and to not beat up the referee. We then went to our corners.\n\n\"Box!\" ordered the referee Rudistan.\n\nAs we came out, the thrill of the competition was flowing through me. I had prepared for this for months. All of the sweat, tears, and pain of the long, hard runs with the ROTC cadets, the combat training with Sergeant Tate, the weightlifting, agility training, and the Aikido... it had not been just to get in shape, or to battle the Consultant of Crime. It was for this moment, for this match. It was all done to defeat Cindy Ross in this tournament. Would it be enough?\n\n*CLANG!*\n\nIn addition, I thought as our crowbars clanged, I had declined to get into the ring with Cindy, so she could not see my progress. She'd tried to get me into the ring with her, or with Joanne, but I'd avoided it, knowing why she wanted me in the ring, and knowing that I was not going to show my hand. But I had watched her in the ring with Joanne, studying her moves and her tactics, making sure I was mentally ready for everything she could throw at me.\n\n*CLANG!* *WHANG!*\n\nAnd then came the psychology. The buttering up. While she talked smack, I talked about having no chance, that she was going to just beat up everyone. Did it work? I thought. We'll soon see...\n\nThere were three rounds of three minutes apiece. For the first thirty seconds of round one, Cindy made some feints and thrusts, feeling me out. I deftly avoided them all, but did not rise to the bait of her seeming allowing me to advance, knowing the pain that would follow if I did. However, when she made one of her martial arts moved, I had learned that I could move in a different direction than expected.\n\n*WHAM!*\n\nI avoided her kick, and my backhand slap with the crowbar caught her right on the side of her ribs... right over her previous gunshot wound. The smack of iron on plastic protection reverberated through the gym.\n\nI could see it in her eyes. She was starting to understand the new level of my training. She went for a series of overwhelming shots with the crowbar to my armor, but only got in a glancing blow as I parried the rest. The bell rang... the first round was over.\n\nAs I got water from my corner and tried to breathe, I realized I could barely hear all the noise in the gym. It was LOUD. Everyone in the packed gym was cheering, rooting for or against one or the other of us. Money would change hands at the end of this.\n\nRound 2. Cindy had decided what her line of attack would be, and she began using more of her martial arts. The big problem with her mastery of two black belts was that the techniques were mostly defensive, not offensive... and I was not attacking blindly like most contestants would. Then she made a move I'd noticed her make when sparring with Joanne, a variant of her trademark punishing kick. As she went for it, I saw that it was a feint, and she swung her crowbar high. But I was already ducking straight down, the blue crowbar flashing over my head, and before she could get out of her swing, my backhand shot came solid and hard, right to her helmet. \n\n*THWACK!*\n\nWe weren't supposed to go for head shots, but as long as they weren't to the visors, they weren't illegal. Mine was a lawful retaliatory strike, and it was a good one; Cindy had forgotten that I'm ambidextrous, and my left-hand shot was good and powerful.\n\nShe was affected by the blow, and we exchanged several more blows, the clang of iron-on-iron ringing throughout the gym over the shouts of the crowd watching. I got in two good blows to her ribs, over her wound again, and I could tell she was feeling them. But she also got in some good blows, learning from my strategy and successfully hitting me over my old wound, as well as to the hips and legs. Despite the protection, the blows HURT.\n\nAs the bell to end Round Two clanged and Rudistan jumped in to force us to our corners, I realized that if neither of us were defeated, she'd retain the title as the defending champion. Needless to say, that is not what I wanted. I sucked it up, thought about the pain, let it drive me. It was now or it was never!\n\nThe bell rang. Cindy was tiring. Those months of working out, of running, were paying off for me; I had a second wind. And I needed it: Cindy had worked out, too, but not with the same sense of driven purpose that I had. But now, she was pressing, pushing harder. She wanted to beat me to a pulp, to force me to yield just as much as I wanted to win. She made several martial arts moves, but I was ready for them, and made sure to give glancing blows along the way.\n\nAnd then... it happened. Cindy went for a hard headshot with her crowbar, and it glanced off my helmet. But in that second, that split-second, I saw a shoulder joint flash by. Ah yes, a joint.\n\nI know what to do with those.\n\n*WHAM!* I had her arm and shoulder and I slammed her down to the ground, head first. She hit hard, her helmet protecting her head from what was a powerful, and potentially fatal blow to the unprotected and uninitiated. Aikido is a punishing art if need be. I followed up with my crowbar to the back of her neck, pushing down with my weight and what strength I had left. She was stunned, and now completely helpless. And I forced Cindy Ross to utter the words she'd never had to say before:\n\n\"I yield.\"\n\nThe room erupted as Rudistan came in to break us apart. By the rules, I had to stand erect to win, and I managed to push myself onto my feet. It was hard; I was exhausted. But I made it and went to the neutral corner.\n\nCindy was slapping the floor of the ring in frustration, and she slowly got to her knees, then was helped to her feet by Rudistan. She turned to me and I went out and our handshake became a hug. I noticed out of the corner of my eye that Teresa had a mischievous little smile on her face.\n\n\"Fair and square.\" was all Cindy said as we went to our corners and came out of the ring. It was a compliment, I knew. I tried hard to be calm about it, but inside I was exulting. I had just won the Police Boxing Matches, but in doing that I had beaten the best to be the best. I had managed to defeat the undefeatable Cindy Ross... and that would never be forgotten.\n\nAnd of course, that was the point.\n\n* * * * * * * * * * * * * * *\n\n\"And the winner of the Boxing Division,\" said Chief Sean Moynahan, \"is Sergeant Micah Rudistan!\" Rudistan was presented the trophy to loud cheers. He'd boxed well, taking out more veteran boxers. And he'd had the heart and will to win.\n\n\"And for the Freestyle Division, first runner up goes to Captain Cindy Ross!\" said Moynahan. There was a strong acclaim for Cindy by about half the number in the room; the others were being a bit polite. Cindy was stoic but clearly disappointed in getting the second place trophy.\n\n\"And the Freestyle Division Champion is Commander Donald Troy!\" said Captain Moynahan said. The other half of the room cheered loudly; the first half were more polite in their acclaim. I tried not to rub it in and be a jerk about it, but I did hold up the trophy after being awarded it... hell, I earned that thing!\n\nOne bucket list item checked off... two to go.\n\nPart 2 - Friends and Family \n\n\"Okay,\" said Dr. Laura Fredricson as she examined Cindy in the Police Headquarters Infirmary Room, \"you have a mild concussion. It shouldn't be a problem, but if you start experiencing severe headaches, blurry vision, or vomiting, then you need to let me know immediately. In fact, I'd really like for you to stay with us overnight, stay in the guest room.\"\n\n\"If I have these symptoms after drinking a lot of alcohol tonight, does that count?\" Cindy asked.\n\n\"Very funny. Not a good idea to do that.\" Laura said. She was listening to Cindy's heartbeat with a stethoscope. \"Breathe in.\" Cindy did, and winced.\n\n\"Sore ribs?\" Laura said, examining Cindy's side and front.\n\n\"Yeah, he really worked me over there.\" Cindy said. \"He showed absolutely no mercy.\"\n\n\"He wanted it more than you did.\" Laura said. That earned Laura a harsh look, but she just came right back. \"I think he's been training for months just for those ten minutes in that ring. You beat the shit out of him, too, but I think he was pretty determined to win that one.\"\n\n\"Well, I hate these words,\" Cindy said, \"but they sound good right now: Wait 'till next year!\" She noticed Laura get quiet. \"What?\" she asked, feeling Laura's sense of concern.\n\n\"If there is a next year.\" Laura finally replied.\n\n\"What do you mean?\" Cindy asked.\n\n\"There's a lot of stuff going on.\" Laura said. \"Nationally, internationally, and right around this County. I am really worried about what this Consultant of Crime that Don has been hunting down is going to do if he actually gets caught.\"\n\n\"Don's going to win.\" said Cindy, trying to sound hopeful. \"If he can beat me, he is really going to whip the Consultant.\"\n\n\"I hope so.\" Laura said. \"Do me one favor.\"\n\n\u2028\"What's that?\" Cindy asked.\n\n\"Watch his back.\" Laura replied. \"He doesn't do that well enough.\"\n\n\"Now you tell me.\" Cindy joked. She then got somber... Laura's face was not one of humor...\n\n* * * * * * * * * * * * * * *\n\n\"You really enjoyed that.\" I said in my office. I'd already had my exam. I had no injuries other than a few bruises, but I still hurt. And I was tired. A tiredness born of euphoria and relaxation from tremendous tension, but a creeping exhaustion nonetheless.\n\n\"Not as much as you did.\" Teresa Croyle replied, sitting in one of the hot chairs in front of my desk. She could not hide a grin, though.\n\n\"Oh, I dunno.\" I said. \"I think you did.\"\n\n\"Okay, I did.\" said Teresa. \"I love Cindy more than life itself, but she needed that. She needed a reminder that she's not invulnerable, that she's not going to win every time.\"\n\n\"And me?\" I asked.\n\nTeresa looked up at the wall to my right, where the framed badges of Pete Feeley and Tanya Perlman were displayed side-by-side. \"You get yours every time you look at that wall, and those shields.\" she said. A part of me was amazed at her insight, her astuteness. Another part of me was feeling a pain beyond the physical. Her words were right, but nonetheless seared deep into my soul.\n\n\"You're right.\" I said. \"And that is coming to a head, pretty soon. You were right on Memorial Day, when you said my fight was just beginning.\"\n\n\"Our fight, Don... our fight.\" Teresa said as our eyes locked. The moment only lasted a second, as Cindy and Laura came into the office. The platinum blonde looked sheepish; the raven-haired beauty, more concerned. Laura gave her report, and told us to watch Cindy for concussion symptoms.\n\n\"Well, if you Police Officers are done beating the hell out of each other,\" Laura said, \"I'll head back home and get the guest room ready for Cindy. She's going to be staying over tonight. It's either that or the hospital.\"\n\n\"Carole will love having her stay with us.\" I said. \"By the way, Laura, we're about to go to lunch. Care to join us?\"\n\n\"I'll take a raincheck.\" With that, Laura made her goodbyes and left.\n\n\"Well,\" I said, \"let's head on over to the Cop Bar.\"\n\n\"Is Cindy paying for it?\" Teresa asked. \"Don't tell me you two didn't have a bet on it.\"\n\n\"Tell you what. I'll pay for this one.\" said a voice at the door. Jack Muscone of the FBI was letting himself in. Martin Nash and Sandra Speer were behind him. \n\n\"And then Don and I can have a private conversation.\" Jack said.\n\n* * * * * * * * * * * * * * *\n\nThe six of us had a table in the back room of the Cop Bar. 'Pop', the owner and barkeep, brought Cindy a large bowl of chicken noodle soup, saying it was to heal her body and her hurt pride. That was Teresa's little ploy, and it had not taken Cindy long to realize who was behind it. \n\n\"If my neck wasn't so sore,\" Cindy said, \"I'd come over there and smack you.\"\n\n\"Don't let your excuses stop you from trying.\" shot back Teresa.\n\n\"Don,\" Cindy said, \"next year, I am doing the schedule... and making damn sure this trash-talking Lieutenant gets placed right in my bracket.\"\n\n\"As compared to the trash talking the last several weeks?\" Teresa replied. \"I agree, Commander: set those brackets up right!\"\n\nBy now I was laughing so hard it hurt. Martin and Sandra were laughing, too. I said \"I will be damn sure to make sure you two meet in the semi-finals. And then I am going to spank the winner and defend my title.\"\n\n\"Oooooooooo.\" said Sandra Speer.\n\n\"Ooooh, yes, I dolike the sound of that...\" I said. \"defend MY title...\" Almost everyone burst into laughter. It was my first rub-it-in jab at Cindy, and the look I received could've melted iron...\n\n\"So Martin,\" I said, \"who in the FBI lost their money on the outcome?\" Sandra and Martin got quiet, while Jack Muscone beamed.\n\n\"I took 'em all to the cleaners.\" said Muscone. \"Makes paying for lunch easier, for sure. And my new strategy of never betting against the Iron Crowbar is paying off.\"\n\n\"Until next year...\" murmured Cindy. \"And you'd better not bet against the Blue Crowbar.\"\n\n\"Won't matter.\" Teresa replied. \"I won't need any color crowbar.\" That got a huge amount of banter going.\n\nDouble cheeseburgers and beer were a very good celebration lunch, and afterwards Jack and I went to a side booth to talk privately.\n\n\"Your Mouseketeers are really doing a super job.\" said Muscone. \"The stuff they've given us is tying your Consultant as well as the Oldeeds Group to dozens of organizations across the country. Money laundering, RICO violations, smuggling, fraud, the whole ball of wax. We can't move too soon, though. Your boy must be seeing what we're doing.\"\n\n\"Enough to try to put it all on the Oldeeds Organization while he crawls away like a cockroach in the dark.\" I said. \"In all honesty, I don't know what's keeping him in Town now.\"\n\n\"Does he have something planned against you?\" Jack asked.\n\n\"Yes, of course.\" I said. \"Something he's been planning for months... at least a year. And it's about to come down on me like a freight train roaring out of the High Sierras.\"\n\n\"So what are you planning to do?\" Jack asked.\n\n\"Monday is my son Jim's second birthday.\" I said. \"We're going to have the party for him at The Cabin tomorrow. You and Tanya and baby Pete are invited, by the way. On Monday, I am fully expecting your boss to call me to a meeting and clue me in to what's going on in Apple Grove. If he doesn't... then there will have to be a reconsideration of my level of cooperation with the FBI.\"\n\nMuscone was stunned. \"You're kidding.\"\n\n\"No.\" I said. \"And I hate having to say the words out loud. But I'm tired of being treated like a mushroom... kept in the dark and fed a lot of shit. I really hope he and the rest of you don't think I'm a stupid idiot like the SBI apparently did when they sent Sharples to assassinate me.\"\n\nMuscone looked very discomfited, and I was thinking those double cheeseburgers felt like lead weights in his stomach right about now. But he rallied.\n\n\"Okay,\" he said, \"I'll let him know. And I'll give him my strongest advice to stop playing games with you.\"\n\n* * * * * * * * * * * * * * *\n\nSunday, June 5th. The party at The Cabin went well. Molly had stayed over at the Cabin Saturday night, and brought over Ross and Ian. We'd had a big supper at the Mountain Nest, where Cindy was staying, and if you think Molly showed her sister any sympathy, guess again. Teresa was tame by comparison. Sisters...\n\nTanya brought baby Pete to the birthday party. I'd invited Paulina and Tasha, but Paulina declined, citing other matters she needed to address. Todd and Teresa came with little Doug. My mother and Cindy, Jack Muscone, and of course Buddy and the redoubtable Bowser.\n\nCarole did not seem happy that Jim was getting toys and she wasn't, which required an explanation from her mother and her dad both that this was Jim's special day. And when Jim looked over at his sister and said \"MY toys!\", I knew I was in for years of smack talk that would make the Police Boxing Matches seem like a lovefest.\n\nPart 3 - Ripening Apples \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette at 7:00am, Monday, June 6th. \"Channel Two News has learned that a Federal Court has issued a stay in the case of Eckhart v. Town & County Council, enjoining the Council from proceeding with the sale of the Community Center property to Northwest Properties Development Corp. Although it would appear the Council has acted legally, there are several side issues over which P. Harvey Eckhart, founder of 'The Vision' self-help enterprises, is suing the Council, and the Federal Court will grant a trial.\"\n\n\"In other news,\" said Bettina, \"plans for the Fourth of July celebration are under way! Anyone who wants to enter the Town & County Triathlon must do so by June 20th. Todd Burke and Teddy Franklin, last year's champions, have already entered, as have the twice-runners-up, the Bradley Rangers.\"",
        "\"In political news,\" Bettina went on, \"a scheduled debate between District Attorney Gil Krasney and challenger Jenna Stiles was postponed by mutual agreement. It will be rescheduled for later in July or early August. Mr. Krasney leads in the polls by a 50-46 margin. \n\n\"In the Governor's race, it was a devastating blow to SBI Director Jack Lewis when the Fraternal Order of Police endorsed Governor Val Jared. The State Police Chief's Organization has postponed making an endorsement, but the State Sheriff's Society has strongly endorsed Governor Jared. Polls remain 48-40, with an increasing number of likely voters choosing to wait and hear more before making their decisions...\"\n\n\"Any idea why Jenna agreed to postpone the debate?\" I asked Cindy as we went to my office after the morning coffee klatch.\n\n\"She didn't.\" Cindy said. \"Krasney postponed it, said it was due to an increasingly heavy workload. He even told the Press that 'Commander Troy is too good at catching criminals; it gives us a lot of extra work to do'. Jenna wanted to raise a stink about it, but Bettina told her 'off the record' that the Press was not going to cover it, and would cast her complaints in a bad light.\"\n\n\"Good grief.\" I said. We sat down in our respective chairs in my office, me behind my desk of course, Cindy on the sofa (of course). \"Okay, Captain, I am going to meet with the FBI today at the Federal Building. I may have to leave Town for some days after that, so you'll be in charge. Don't let the power go to your head, and keep the Chief and Commander Harlow well informed of what's going on.\"\n\n\"And don't let them be surprised by the Media.\" said Cindy. \"Your number one rule, of course.\"\n\n\"Make it so, Number One.\" I replied.\n\n\"What about Scott Peterson in Public Relations?\" Cindy asked. \"I know Della's his boss, but you're the one he's afraid of.\"\n\n\"No, he's afraid of the Chief right now.\" I said. \"Peterson better thank whatever he considers holy that Moynahan and not Griswold is Chief... Chief Griswold would've barbecued him alive.\"\n\n* * * * * * * * * * * * * * *\n\nI went into the FBI's well-hidden offices on the third floor of the Federal Building on the north side of Courthouse Square. Jack Muscone was there waiting for me, telling the cute receptionist that he'd take me into the conference room. And it was the conference room in the 'cube', designed to prevent any bugging or listening-in attempts. The DepDirector was waiting for us.\n\n\"Glad to see you, Commander.\" said the DepDirector, extending his hand. I shook it firmly. \"I haven't seen you since you put me in my place at the Hospital.\"\n\n\"The interviews there went a long way in helping me solve the case.\" I said.\n\n\"So they did.\" said the DepDirector, peering at me. He had us sit down, Jack to my left as usual. Then he did a surprising thing... he sat down himself.\n\nKeeping his voice quiet, the DepDirector said \"I suspect you know a lot more than you've been officially told about what's going on in Apple Grove, and it's county... what's the name of that county?\n\n\"Fillmore County, sir.\" I said. \"Named after President Millard Fillmore, 13th President of the United States, and last to not be a Democrat or Republican. Very exciting kind of guy, sir.\"\n\n\"I see your sense of sarcasm has not been lost.\" said the DepDirector, making Muscone chuckle. \"I didn't even know there was a President Fillmore. Anyway, Fillmore County is about to get a lot more exciting. But it's getting ugly, too.\"\n\nHe continued: \"Sheriff Spaulding has really clamped down over there. The whole county is in fear of him. Several blacks have been murdered or disappeared. But worse... in the last two weeks, two families in Apple Grove were attacked. The wives were raped in front of their husbands and the husbands beaten, and in one of the cases in front of their children.\"\n\nThe DepDirector leaned forward, lowering his voice as he said \"One of those couples, the one without the children, were FBI informants. They've been working for us, giving us information on what's been going on up there.\"\n\n\"What about the other family?\" I asked.\n\n\"We don't know what happened there.\" the DepDirector said. \"They were not informants of ours. They lived only three houses down on the same street, though.\"\n\n\"Hmmm,\" I said, \"I wonder if the perps had an idea that one of the two families were working with you, so they just attacked both of them.\"\n\n\"400 years ago...\" Jack Muscone said. The DepDirector nodded. Jack continued: \"We pulled our people out before someone decided to finish the job and kill them. But we have other assets up there. By the way, what do you know of the town of Springer?\"\n\n\"It's in the northwest corner of the county.\" I said. \"They're cut off from the rest of the county by a ridgeline and a river, and they don't consider themselves to be really part of the county. I heard they tried to have the State Legislature redraw the county lines so they could be in the county north of Fillmore County.\"\n\n\"Generally true.\" said the DepDirector. \"They also recently drew a proverbial line in the sand and said that any blacks from Providence Springs that come to Springer would be arrested and sent to the Sheriff and the County Jail... and that pretty much means death for the arrested black person. They further said they did not want anyone from Apple Grove or Rome to be coming over, either.\"\n\n\"Yeah, someone might spot an FBI Special Agent in the area.\" I said. \"Can't have that, now can you?\" The DepDirector and Muscone just looked at each other.\n\n\"How much do you know?\" asked the DepDirector.\n\n\"A lot.\" I said, leaning back in my chair. \"Do you two have money on this?\" Muscone grinned; yes, they had money on it.\n\nI began: \"There has been gunrunning going on in and around my County. And while my sister and the Consultant of Crime both wanted to help themselves to some of that weaponry, the main reason for going around my County is because you do not want the ol' Iron Crowbar to know what's going on. What is going on is that two separate groups are smuggling arms into Fillmore County. One of those groups is Superior Bloodlines, the other is the Federal Government... not really sure which agency, but it's the Government at work.\"\n\nI continued: \"I can only surmise that the white supremacists would like to start a race war by attacking and killing a lot of black people in Providence Springs. Now I don't know if that's to just clear the county of blacks, or if it's meant to get to the Media and so start a chain reaction. Whoever thought this one up... 'Helter Skelter'' and Manson ain't got nothing on them.\"\n\nI finished up: \"I would say that Hamilton Phillips of Grove & Partners, P.C. is heavily involved in this, as will be the bank president, the Sheriff, maybe a Developer or Real Estate type... they'll want to seize the land left by the dead in Providence Springs. So what assets do you have up there? HUMINT-wise, that is?\" 'HUMINT' meant 'human intelligence', or people on the ground collecting and distributing information... you know, spies.\n\n\"Well, we had that couple,\" said the DepDirector, \"we have a couple of people embedded in Providence Springs. You remember Special Agent Julius Jefferson?\" I nodded and he said \"He's been up there a lot. Comes in out of the west, so he can get to Providence Springs without having to go through Apple Grove.\"\n\n\"Tell me this.\" I said. \"Why you don't just call up the National Guard.\"\n\n\"We can't.\" said the DepDirector. \"The Governor of that State is very hostile to us, and won't allow the State to bring up the Guard. There's also Posse comitatus issues. We could federalize the Guard, but that would just tip off the white supremacists, so they'd just lay low and we're just sitting there with our pants around our knees... and burning through Federal tax dollars.\"\n\n\"Like that's ever stopped Congress.\" I said. \"But I digress. So the white supremacists are going to come up against Providence Springs, and you're going to try to stop them.\"\n\n\"Yes.\" said the DepDirector. \"And it's worse than you might realize... their plan is to kill everyone in Providence Springs, literally. They intend to leave no black person alive within the county borders by the next morning.\"\n\n\"So...\" I said, \"why bring me here?\"\n\n\"Special Agent Muscone here convinced me to.\" said the DepDirector. \"He said leaving you out of the loop was acting in bad faith, and after what happened at the hospital... and your wife having a pretty strong conversation with me herself... I realized that it would be better to tell you. But I don't want you trying to barge in there and save the world. This is going to take an operation much, much bigger.\"\n\nDon't laugh, I thought to myself, don't laugh, don't laugh, don't laugh...\n\n\"All right.\" I said. \"So now you've told me, but expect me to do nothing.\"\n\n\"Well,\" said Muscone, \"if you have any contacts in that county that could help us...\"\n\n\"I don't.\" I said. \"I burned those on my last trip up there. And I'm also known up there, as well as having grown up there. When do you think this is going to happen?\"\n\n\"That is why we're talking with you now.\" said the DepDirector. \"We think it's going to be soon... this month. And with you about to shut the legal trap on your Consultant's fingers, he might just time things to, shall we say, 'coincide' with the breakout of hostilities, and make his escape.\"\n\n\"But he's not behind this thing with Apple Grove, is he?\" I asked. \"Oh, why am I asking... no, he's not... but he's the ultimate Consultant, so he's advising them, through Nathan Bedford and Henry Boxman, Lawrence Kendrick, and Perry Richards...\" I went into a reverie.\n\nWhen I came out, I asked \"Yes, he is the Spider at the center of every Web of crime. So, is there anything else?\"\n\n\"No, unless you have something you can give us.\" said the DepDirector.\n\n\"Well,\" I said, getting up as the Agents also stood, \"it's what you need to give Agent Muscone, Mr. Director. Pay the man, he won the bet.\"\n\n\"How in the....\" the DepDirector started as Muscone laughed. Then the DepDirector got out his wallet and handed over a $100 bill.. and a $50 bill. \"The fifty is that you knew who won the bet.\"\n\n\"Thank you, sir.\" said Muscone. \"My policy of never, ever betting against the Iron Crowbar is paying off.\"\n\n\"Uh huh.\" said the DepDirector, not very amused. \"We'll be talking with you again, Commander.\"\n\nPart 4 - The Black Beauty \n\nWhen I got back to Police Headquarters, I called Cindy into my office. When she got there, I pulled out the bug-killer and turned it on.\n\n\"Cindy,\" I said, \"can you call your father and tell him I asked if the 'Black Beauty' is ready?\"\n\n\"You guys aren't getting into drugs, are you?\" Cindy asked. I just shook my head.\n\n\"Okay, I'll make the call...\" Cindy said.\n\n* * * * * * * * * * * * * * *\n\nAt 2:00pm, Cindy and I were headed south in my Police SUV. We were wearing civilian clothes, and I'd told the Chief we might not be back for the day.\n\nUpon arriving at 'The Vision' World Headquarters, we were met by a number of young persons, all wearing black slacks, the women wearing blue shirts and the young men red shirts, all with the 'The Vision' logo. They seemed very happy to see us.\n\n\"Must be 'Happy Juice in the Prune Juice Day' here.\" I whispered to Cindy as we got out of the car.\n\n\"Stoppit.\" she replied. We allowed the acolytes to guide us into the building. I expected that young Tommy would take us up to Dr. Eckhart's office, but to my surprise the man himself was right there in the lobby to greet us.\"\n\n\"Ah, my dear,\" P. Harvey Eckhart said as he hugged his daughter Cindy, \"it is always so good to see you.\" He then gave me a warm hug, which I returned after getting over the surprise. \"And you, young Donald, you're looking very well. All that training for the Police Boxing Matches has paid off... and in more ways than one.\"\n\n\"Uhhh.\" Cindy groaned. \"Don't remind me.\" Eckhart put his arm around her.\n\n\"Ah, my dear,\" he said, \"it's in our losses that we find the strength and the keys to our victories. Come, both of you. I know why you have come. Let's show you both that, now.\"\n\nWe went to the left, past the rooms where 'evaluations' took place, and on around. We went through a set of double doors that led to offices and to seminar theatre rooms. At the end, I could see out the window, seeing the dorm buildings in the distance, and the River off to the right.\n\n\"Ah, just step in here,\" said Eckhart,\" and we shall go down into the garage areas.\" We got on an elevator. Eckhart put his hand on a lighted panel and the door shut. The elevator began going down.\n\n\"Biometric hand reader.\" I said. \"Cool stuff.\"\n\n\"Yes, and both of your handprints will be read most favorably, as mine is.\" said Eckhart. \n\nThe elevator stopped. I thought it would stop at a garage on a lower floor, as the first floor entrance is actually an above floor as the ground slopes downward on the left side of the building. But instead, we were in a darkish tunnel.\n\n\"Ah, young Donald, and dear Cindy,\" said Eckhart, \"this is one of the secrets I need to show you both. This tunnel goes towards the dorms. It can be blocked off in several places. Another tunnel running parallel to it is the one we used to escape when that despicable Mr. Wargrave tried to have you brainwashed by my methods.\"\n\n\"His brain does not need washing, Father.\" Cindy said. Eckhart chuckled.\n\n\"No, indeed.\" he said. \"Here, come this way.\" We went down the tunnel for a distance, maybe 50 yards, then turned left and down another tunnel. At the door, the reader accepted Harvey's handprint. The door opened, and we walked into a long, multi-car garage.\n\n\"The access doors lead to a tunnel that goes to the surface. One of those garage doors is really to this location.\" said Eckhart. \"I have three such garages here; it's one reason you don't see so many cars in our parking lots.\"\n\n\"You're not afraid of flooding?\" I asked.\n\n\"Oh dear me, no.\" said Eckhart. \"The Headquarters building and the dorms are built on 1000-year and 500-year flood plains, respectively. And these tunnels are built well, and very low... like the New York City subways, but without the leaks.\" I nodded.\n\nEckhart then took us down to the far end of the garage, where two beaming acolytes were waiting for us. Beside them was a very old model car, but in flawless shape, the dark green paint gleaming.\n\n\"It's all ready to go sir.\" said one of them. \"Good afternoon, Commander, Captain.\"\n\n\"Hi guys.\" Cindy said. \"Wow, is this what I think it is? 1965 Chrysler Imperial Crown?\"\n\n\"Yes ma'am.\" said one of the young men. \"Well, assembled from various junkyard parts.\"\n\n\"Wow!\" Cindy said, \"but what's it...\" she looked over at me. \"...for?\"\n\n\"Yes.\" I said. \"Cue 'Flight of the Bumblebee' music, Kato.\" Eckhart laughed.\n\n\"Gentlemen,\" he said, \"show the Iron Hornet and his Kato their new car.\"\n\nCindy was stunned as the guys talked: \"The tires are heavy-duty, to handle extra weight. All of the panels, and especially the door panels and around the gas tank, have layers of kevlar in them. All the glass is bulletproof... well, don't subject it to sustained M60 fire, but it should hold for most pistols and rifles... and here's our baby...\"\n\nHe'd raised the hood. I whistled. \"That's a million dollar motor!\" I exclaimed.\n\n\"Yes, young Donald.\" said Eckhart. \"Race car quality, can outrun most cars. And then there's the nitrous boost if you really need it. I wouldn't drag race it, though... way too much power. This is for chasing down people, or running from them as your case may be.\" The acolytes spent a few minutes showing us the engine and telling us of its capabilities. Cindy was enthralled, and I was appreciative.\n\n\"As you can see,\" Eckhart continued, \"the outer headlights are green tinted. Actually, they're not lights. Show them, boys!\" The 'boys' took off a panel on each side of the massive power plant. Underneath were small Gatling guns, one on each side.\"\n\n\"Plenty of firepower to the front.\" I said, realizing the green 'headlights' would move aside and the bullets would fire. There were several hundred rounds under the guns, ready to be fired.\n\n\"In the back,\" said Eckhart, \"we have the old caltrops release.\" Caltrops are like little jacks in the game of jacks, but have all spike rays coming out from the central sphere. These could cut up the tires of a pursuer. \"Sorry, but I couldn't manage to fit in a backward-firing machine gun, nor any missiles. You are not James Bond, my young friend.\"\n\n\"Tell that to all the women he sleeps with.\" said Cindy. Eckhart laughed out loud as a red crowbar was waved in her general direction.\n\n\"This is fantastic.\" I said. \"Thanks, Uncle Harvey.\"\n\n\"He asked you to build this, Father?\" Cindy queried.\n\n\"He said he was inspired by your Green Hornet and Kato talk.\" said Eckhart. \"And I hope this green-painted Black Beauty will be of service to you.\"\n\n\"It will.\" I said. \"I'm very grateful. But I do suspect... that you had as much fun building this as your two young friends, there.\" Eckhart grinned.\n\n\"Oh, indeed I did, young Donald.\" said Eckhart. \"And I just might have driven it at a speed that some would consider... unsafe.\" I just grinned, remembering how fast and carelessly Eckhart drove motorcycles.\n\nCindy was behind the steering wheel, learning about the sonar and radar devices (not great, but could be useful if taken out of the car and set up), the infrared reader, the powerful radios, shortwave and regular, how to fire the machine guns.\n\n\"Okay, it's time to take her out, young Donald!\" said Eckhart. As I went over to the driver's side door, Cindy was vigorously shaking her head.\n\n\"No.\" she said. \"I'm Kato, I'm the chauffeur, I'm driving.\" I just smiled and relented, and went and got into the shotgun seat.\n\n\"Atomic power to battery, turbine to speed.\" I said, remembering the old Adam West/Burt Ward 'Batman' show.\n\n\"Roger, ready to move out.\" Cindy replied. She gunned it, and the car moved out of the door that was opening. She drove unerringly up the tunnel, which curved around. We then had to stop at what seemed like a wall, but I realized it was an elevator. Cindy pressed her finger to a biometric glass circle, like an iPhone fingerprint reader, and the elevator took the car up. Once up, a garage door opened and we drove out into the parking lot. \n\nFor the next half hour, Cindy drove at high rates of speed along back roads and two-lane roads in Coltrane County. The engine was amazingly efficient and quiet, considering its incredible power. The muffler system must've cost Dr. Eckhart a fortune, I realized. The ride was smooth, the handling like a modern-day C5 Corvette, not an O65 Imperial Crown.\n\nThen we switched places and I drove it around, maybe not quite as fast as she did. Actually nowhere near as fast. Then we went back to 'The Vision' World Headquarters, and parked inside the garage. Harvey insisted we stay for 'afternoon tea', and then we came home... Cindy driving my SUV.\n\nI took the 'Black Beauty' to The Cabin, and parked it in the far-side garage, which was next to my office. Okay, I had transportation ready. It was only a matter of time before the call came...\n\n* * * * * * * * * * * * * * *\n\n\"So why do you need that kind of car, and that kind of firepower?\" Cindy asked as we had a beer on the outside patio of the Cop Bar.\n\n\"You remember last year, when some things were going on in my old hometown of Apple Grove?\" I asked.\n\n\"Yeah, right about the time Teresa's father died.\" Cindy said.\n\n\"Yes.\" I replied. \"Well, things are flaring up there again, and this time worse. The things the Superior Bloodlines types were trying to do here, and started in Teresa's hometown but got nipped in the bud pretty quick; well, they're embedded a lot deeper in Apple Grove, and I'm going to have to root them out and give them a good Crowbar beatdown. I can't really drive around in a TCPD Police SUV, and I really may need to move fast or fight my way out of there. Ergo, the Black Beauty.\"",
        "\"I love it.\" Cindy said. \"So when are we leaving?\"\n\n\"We are not.\" I said. \"You are going to stay here, hold down the fort for me, and look after my children... your cousins... if you don't mind. Don't worry, I'll have help up there.. even though they don't realize it yet.\"\n\nCindy thought about it, then said, \"Oh, the FBI.\" She thought about it some more. \"Ahhhh, the gunrunning. Something to do with that?\"\n\n\"Your insight serves you well, O! Daughter of Psychic Eckhart.\" I replied. \"But I'm going to leave that to them... for me... it's about cleaning out some trash and exacting some serious Justice...\"\n\nI thought about it and said \"Well, not Justice... Revenge...\"\n\nA moment later, Teresa Croyle and Todd Burke appeared with a pitcher of beer. \"Hi guys.\" Teresa said. \"Mind if we join you?\"\n\nPart 5 - Rotten Apples \n\n\"Ah, that's good bourbon.\" said Sheriff Spaulding as he sat behind his desk in his office, his feet propped up on the desk. His red hair, darker than the Iron Crowbar's titian hair, seemed to have a 'flaming' quality to it in the light of the bulb above him.\n\n\"Yes, it is.\" said Mitchell T. Baker, IV, the president of the Fillmore Bank and Trust, the only bank in the county. Baker was originally from North Carolina, having worked in the Big Banks there, and carefully groomed and schooled by their leadership. He was tall, with a full head of now-graying black hair, a chiseled face with a square jaw. He'd been brought to lead the Fillmore Bank and Trust after the previous owners of the small bank had been 'encouraged' to sell to Baker's financial group. \"Hamilton, do you like bourbon?\"\n\n\"This is good, but I'm a Scotch drinker myself.\" said Hamilton Phillips, Esq., who was more elderly. He was the lead partner of Grove & Partners, P.C., the law firm that had bought out all competition, including Douglass Troy's practice not too long before Troy had died. \"And right now, it doesn't really matter what it is, as long as there is alcohol in it.\"\n\n\"Well,\" said Baker, \"it won't be much longer.\"\n\n\"No, it won't be.\" said Sheriff Spaulding. \"Maybe even just days. 'Operation Apple Grove' is set and ready to be implemented. I'm just waiting for the word. We're going to have to move soon. One of those families we took it to the mattresses with were FBI informants. We have to strike quick, before they get time to implement counter-measures.\"\n\n\"Just let me know when.\" said Phillips. \"I want to be a good distance from here when it happens. I'm not a man of violence; I'd just as soon let you and your people handle all that.\"\n\n\"You have nothing to worry about, Hamilton.\" said 'Mitt' Baker cheerfully. \"Nothing is going to happen in Apple Grove itself.\"\n\n\"That's right.\" said Spaulding. \"And me and my boys will be hanging back here to make sure nothing does happen. My only question is, what other areas of the country are going to implement the plan, and when?\"\n\n\"From what I've been told,\" said Baker, who was well-connected with the country's Financial Elites, \"this is the first major operation. If it... er, when it goes well, we'll begin implementing it in other places, and fairly quickly.\"\n\n\"It's a good plan.\" said Spaulding. \"It will work. After we have eradicated the nigger filth in this county, we'll begin setting up operations to move 'supplies' into neighboring areas.\" By 'supplies', Spaulding meant military-grade guns. \"We'll also start stocking up on foodstuffs and other essentials for the time when shit hits the fan. I've even heard some rumors that FEMA might work with us to set up some camps, though I don't really want them in here, either. But we'll have a solid base. Once a few more are set up in various strategic locations around the Nation, we'll be in good position to expand outward.\"\n\n\"Yes, it'll be good when that happens.\" said Mitt Baker. \"It's time the common people understand that we know better than them what is best for them. They call us the 'Elites'... and that is exactly what we are. We have 95% of all the money, the wealth, because we are the intelligent ones, the ones who know what to do and how to do it. If we didn't, and the common pukes out there did, then they'd have all the money.\"\n\n\"All the money in the world won't matter when the blacks began rioting.\" said Phillips. \"Some Government agencies are actually behind some of these incidents we've seen the last few years. Stirring up chaos.\" Baker and Spaulding grinned at that.\n\n\"Hamilton,\" said Mitt Baker, \"don't you know that the people controlling those rioting blacks are the same people controlling the white supremacists, and controlling the Government, as well? You realize of course, that it is our hands holding the puppet strings over all of them? We rule both political parties, and they know it. Our friends all over the world are implementing the same plans in their countries.\"\n\n\"Yep.\" said Spaulding laconically, making a carving into a wooden stick with a sharp hunting knife. \"If it weren't for the Second Amendment, and so many of your so-called 'common men' having guns, your plans for the world would've been successful decades ago.\"\n\n\"Your plans, too, Spaulding.\" said Phillips.\n\n\"Harrumph.\" said Spaulding. \"All I want is my county here. Once 'Operation Apple Grove' is successfully completed, I'll have full control. You can have the rest of the world, Mr. Baker, and I'll rule this corner of it for you.\"\n\n\"And friends like you are what we need.\" said Baker. \"Your part in this is valuable, and we recognize it, and will reward it. You're at the center of your web here, and we have many Spiders like you, all across the country, ready to help us with our noble goal of serving the People by taking care of them as they cannot take care of themselves.\"\n\n\"And all will be right with the world.\" said Spaulding sarcastically, as he seemingly lazily carved his stick, \"Of course, there are only three things wrong with this world now: niggers, common people with guns, and dogs. Once we eradicate all three, I'll be a happy man.\"\n\n\"Why do you hate dogs so much?\" asked Phillips.\n\n\"The man we're working with, consulting with, who is advising us on setting up our nation-wide operations... you know, the real Spider at the center of all webs...\" said Spaulding, \"... he explained it to me once. He said that dogs are filth, represent filth. The Muslims hate dogs, too, and rightly so. He said that people who love filthy dogs are inferior, and weak in their hearts. They are food for the strong, and pawns for us to use at our whim, for our betterment. Show me a dog owner, and I will show you a piece of dog shit.\"\n\nMitt Baker and Sheriff Spaulding helped themselves to more bourbon, toasting to an end to all dogs. Phillips passed, citing indigestion. And it wasn't indigestion from age and liquor not mixing... he was sick to his stomach at what was going on, the violent aspects of it. He wanted nothing to do with it, but knew that he was also a pawn, and had to toe the line with Sheriff Spaulding... a man of temper, of violence, and of an insidiously evil mind...\n\nPart 6 - Warning Flags \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette at 7:00am, Wednesday, June 8th. \"It's official! The Reverend Robert Patterson, now head pastor of the Oldeeds Ministries, will include our Town on his twelve-city speaking tour! The event is set for Wednesday, June 22d! There will be a special service at 6:00pm in the 2000-seat auditorium of First Baptist Church, then a rally at University Stadium at 9:00pm!\"\n\n\"Oh, that will be so great!\" squealed Detective Joanne Cummings Warner. \"I can't wait to hear Rev. Patterson's inspiring message!\"\n\nHoo boy, I thought to myself. \"As long as he doesn't try to speak at the Fairgrounds.\" I replied.\n\n\"Stoppit.\" said Cindy, knowing what my underlying message there was.\n\n\"Okay, okay.\" I said. \"Joanne, better put in for leave time now... or you might end up on security duty.\"\n\n\"Oh, put me on his personal security detail, if you're asked to have one.\" Joanne replied. \"I'll get to hear him anyway.\" I could not argue with that logic.\n\n\"And in other news,\" said Bettina as we were talking, \"a formal lawsuit was filed by the office of State Senator Katherine Woodburn, on behalf of several Members of the Legislature, against the State Office of Ethics and Review, and specifically SBI Inspector General Brittany Maxwell. Senator Woodburn charges that she and others have presented evidence of corruption by Town & County Police Commander Donald Troy, and that Inspector Maxwell is refusing to investigate Commander Troy and indeed is stonewalling on his behalf.\n\nBettina continued: \"The State OER has filed a counter-claim to the suit, stating that no evidence has been presented to their office concerning Commander Troy, and that Senator Woodburn is attempting to make political points to counter the corruption of the SBI's Narcotics Task Force. As you know, SBI Agent Leonard Sharples is in custody and awaits trial on charges of murder as well as the attempted murder of Commander Troy.\"\n\n* * * * * * * * * * * * * * *\n\n\"This is Priya Ajmani, Five Alive News in the Morning!\" Priya said at 8:00am as Cindy and I watched in my office. Priya was made up, her hair just so, her lipstick glossy, and a smile molded onto her pretty face as she made her report.\n\n\"State Senator Katherine Woodburn has filed a lawsuit against the State Office of Ethics and Review, citing that SBI Inspector General Britt Maxwell is refusing to investigate Town & County Police Commander Donald Troy despite clear evidence of corruption on the part of Commander Troy. Specific charges include physically assaulting suspects in his custody with his crowbar, intimidating suspects and witnesses and other citizens, acting outside his jurisdiction on criminal cases, physically assaulting fellow police officers, graft, taking bribes and unauthorized perks, and withholding evidence from the SBI in the course of their lawful investigations. The State OER has responded to the lawsuit with a counterclaim.\"\n\nElaborating no further on that side of the story, Priya then said \"Inspector Maxwell was once the University Campus Police Captain, and worked closely with Commander Troy during that time. She was appointed to her position by Governor Val Jared, who is a close friend of both Commander Troy and his former Chief, Antonio Griswold. Jared is running for Governor against SBI Director Jack Lewis, whom Commander Troy has openly and heavily criticized in the past.\"\n\nPriya went on, obviously enjoying herself as she said: \"Lieutenant Frank Soltis of the SBI's Office of Ethics and Review worked on the same team in the Midtown Police Department with now-TCPD Chief Sean Moynahan as well as Nextdoor County Lieutenant Molly Ross Evans. Evans is the sister of Town & County Police Captain Cindy Ross, who is Commander Troy's formal partner in the TCPD. We have to wonder if these close personal friendships are the real reason that Inspector Maxwell refuses to investigate these serious charges....\"\n\n\"Damn, one hell of a hatchet job.\" Cindy said.\n\nTurning on my anti-bugging device, I said \"I am honestly surprised Priya didn't tell them that Molly's children were fathered by me, and that you and I both have had sexual relationships with Britt Maxwell.\"\n\n\"Why are they gunning for you so hard?\" Cindy asked. \"I know they hate you immeasurably, but still...\" After a pause, she asked \"Do you think you're hurting Lewis's chances in the polls a lot more than we realize?\"\u2028\n\n\"We can only hope so.\" I said. \"But I've been anticipating an attack of this nature, upon my reputation, by the Consultant of Crime for some time. The Spider is now weaving his web to ensnare me. And as you know, the time of his reckoning draws near.\"\n\nI continued: \"It's the worst possible timing for me, though. I have to respond to this just when I might have to go out of Town-------\" \n\nI stopped dead in my tracks as it hit me like a freight train roaring out of the High Sierras. \"Oh my God.\" I whispered.\n\n\"What?\" asked Cindy, peering hard at me, and I could feel her mind trying to reach into mine. \"The Consultant is about to do something?\"\n\n\"No...\" I said. \"Something else.\" Gathering my wits, I said \"Okay, Captain, let's get to work. Go get ready for the 'Detective Fiction' meeting while I send some emails.\" Cindy looked puzzled and a bit peeved, but she did what I wanted her to do: she left the office.\n\nOnce alone, I took out my most valuable of burner phones and fired it up. I sent a text that said \"Check your sources. Within five days?\"\n\n* * * * * * * * * * * * * * *\n\n\"Look, Don,\" said Chief Moynahan, as we sat in his office at 8:30am. Sheriff Allgood was also in the office, and sitting in the chair next to mine. \"This lawsuit by Woodburn is very serious for you. You saw what some politically corrupt people tried to do to me and to Frank Soltis down in Midtown. Katherine Woodburn is doing the same to you, and she's using the Media as her bullhorn.\"\n\n\"Yes sir, I know.\" I said. \"It's a hatchet job, pure and simple. And I believe it's to help Jack Lewis politically. I'm not counting on people to know that and to not believe the lies the Media are telling them, so we'll have to counter it.\"\n\n\"I've learned enough from you, Don,\" said Daniel Allgood, \"to know a coordinated attack when I see one. I've had three Members of the Council call me this morning already, and verbally beat me about the head and shoulders as if it were the Police Boxing Matches of politics. They are outright demanding I suspend you.\"\n\n\"Three guesses who they are.\" said Moynahan. \"They woke me up this morning, as well.\"\n\n\"Kelly Carnes, Thomas P. Cook,\" I said, \"and... well, it could be Malinda Adams or Pastor Westboro.\"\n\n\"Westboro.\" said the Sheriff. \"He says he's concerned that you are not setting a good example for his Flock, and the children of his church in particular.\"\n\n\"The children.\" I muttered. \"That's always their mantra, isn't it?\" I then said \"Sorry, I digressed.\"\n\nSheriff Allgood said \"I also got a call from Councilman Reginald B.F. Lewis. He supports you, but he is very concerned about all this. He says that your personal integrity is respected among his people, and that if you were to be found to be corrupt, it would have a negative impact upon relations between Blacks and the Police.\"\n\n\"So, what are you going to do, Mr. Crowbar?\" asked the Chief.\n\n\"First, I'll make a statement that the Press will not read on the air.\" I said. \"Then, I'll offer Bettina an exclusive interview, as long as it's broadcast live. Then ...\"\n\nI broke off, looking around. \"Er, where is our Press Relations Officer, Lt. Peterson?\"\n\n\"In his office.\" said the Chief. \"And still in my doghouse. I'll be dictating terms to him through Commander Harlow. Just let me know what you want him to do, and to set up.\"\n\n\"I'll set up the Bettina interview myself.\" I said. \"Now... is there any possible way I can co-opt KSTD, and break them to my fist, to use a little falconry lingo, there...\" I began thinking...\n\nPart 7 - Dog Days \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded MILF reporter at 7:00am, Thursday June 9th, standing outside Police Headquarters. She was looking hot today, dressed in a clingy red and white dress with a red jacket, and red pumps. I knew this because I was standing next to her.\n\n\"Channel Two News is bringing you an exclusive interview with Police Commander Donald Troy, who has been accused of corruption by State Senator Katherine Woodburn.\" She turned to me, having to look up as I was much taller than her. The camera panned out to include us both. \"Commander, what is your response to the Senator's charges?\"\n\n\"As you know, Bettina,\" I said, looking down at her and not at the camera (the correct thing to do), \"there are a lot of fireworks going on in political circles, especially at the State level, and I'm not surprised some politicians would try to drag me into the mud with them. I'll also say that there were no specific charges leveled against me, and that any past issues have had Boards of Inquiry investigating them. The results of these Boards of Inquiry are a matter of the Public Record, and you or any Citizen can see them.\"\n\n\"So you are denying guilt of the charges Senator Woodburn has accused you of?\" asked Bettina.\n\n\"Again, Bettina,\" I said, \"the First District State Senator has not made any specific allegations to be investigated, much less for me to deny. If she would care to state specifics, I'll have a response at that time.\"\n\n\"If there's nothing wrong here, Commander,\" said Bettina, \"why not have Inspector Maxwell investigate?\"\n\n\"Again, Bettina, investigate what?\" I countered. \"If someone thinks I've done something wrong, state the specific allegation, and it'll be addressed. Again, this is just political posturing by a political party whose candidate for Governor is the Director of the SBI, and is embarrassed that one of his SBI Agents is now in jail and awaiting trial for trying to murder me.\"\n\n\"Allegedly trying------\" Bettina started, doing the legal thing. I was having none of it.\n\n\"Bettina, it was not 'allegedly' for me when a bullet was whizzing by my head.\" I said.\n\n\"Do you have any idea why Agent Sharples tried to kill you, Commander?\" Bettina asked. This question was off-script, but I rolled with it.\n\n\"I have no comment on that.\" I said. \"All of that will come out in his trial, I would think. I'll have to refer you to the D.A.'s Office, for any further comment on that case.\"\n\n\"Speaking of that,\" said Bettina, again off-script, \"what do you think of the race for District Attorney?\"\n\n\"I know that I've worked with both of them, and I'll be working with the winner of that race going forward.\" I said. Bettina was not getting any more out of me, so she wrapped it up.\n\n* * * * * * * * * * * * * * *\n\nApple Grove, 10:25am, Thursday, June 9th.\n\nEight-year-old Timmy Owens was sitting on the front porch of his house, playing with his short-haired terrier Skippy. Timmy's father was the pharmacist at Apple Grove Pharmacy, the town's only apothecary.\n\nSkippy was fetching a small rubber ball and bringing it back to Timmy when a car pulled up in front. It was the Sheriff's car. He was technically out of jurisdiction, as this was inside Apple Grove, but no Apple Grove Police Officer nor any citizen dared make a complaint; they might well endure a beating, or be forced to watch the rape of their spouse (of either gender).\n\n\"Boy, your dog is supposed to be leashed.\" snarled Sheriff Spaulding, walking up the walkway towards the porch.\n\n\"He ain't hurtin' nothin'.\" said Timmy. \"And he's in the yard.\"\n\n\"You talking back to me, boy?\" growled the Sheriff. \"I'll take that dog to the pound, and they'll put him in the gas chamber.\" Just then, Skippy came up to the Sheriff and sniffed around him, then barked.\n\n\"Fucking little shit.\" snarled the Sheriff. He kicked at Skippy. Skippy dodged the blow, and started barking angrily, snapping at Spaulding's leg.\n\n\"You bastard!\" snarled Spaulding. He kicked again, this time catching Skippy hard. The dog flew several feet and landed hard on his side, yelping loudly in pain.\n\n\"Skippy!\" cried out Timmy, running up to help his dog.\n\n\"Get away from him.\" shouted Spaulding as he drew his gun. He aimed at Skippy and fired. Skippy yelped, shivered, and was still.\n\n\"Skippy!\" yelled Timmy, going to Skippy. \"Skippy! No!\" He began crying as he held his dead dog's head.\n\nBy now several people were coming out of their homes, alerted by the gunfire.\n\n\"Everyone, get back in your homes, or I swear to God I'll arrest every one of you!\" shouted Spaulding. Timmy's mother had come to the door as well.\n\n\"Get your kid back in the house, bitch!\" said Spaulding.\n\n\"You bastard!\" yelled the eight year old boy. \"You shot my dog!\" Timmy rushed the Sheriff, hitting and kicking his legs. Spaulding raised his hand up and slapped Timmy hard on the side of the head. The child went sprawling.",
        "\"If your kid does that again, bitch,\" Spaulding said to the shocked mother, \"I'll shoot him just like I shot that god-damned dog.\" To emphasize the point, Spaulding fired another round into Skippy's lifeless body. Blood flew everywhere.\n\n\"Tell your husband,\" said Spaulding, \"that he should consider selling the pharmacy and leaving this county. Otherwise, something bad is going to happen to all of you.\" With that, Spaulding went back to his car and drove off.\n\n* * * * * * * * * * * * * * *\n\nAt 7:30pm, the Apple Grove Fire Department got a call that a downtown building was on fire. It was the Apple Grove Pharmacy. As the fire trucks rushed to the scene, they were blocked by Sheriff Deputy cars.\n\n\"Y'all ain't goin' nowhere.\" one Deputy said to the Fire Engine driver. \"Not until it's... safe to approach.\" The message was clear.\n\nTimmy Owens's father watched as his pharmacy and the building it was in burned to the ground, nothing but ashes remaining. Tears ran down his face as he heard the explosions of alcohol bottles and medicines inside. It had been his father's pharmacy, and his great-uncle's before that. Now it was engulfed in flames.\n\nSheriff Spaulding came up to him. \"Too fucking bad about your pharmacy, Owens.\" he hissed. \"You're going to find that it will be found to be arson. The Insurance Company is not going to pay you a dime until it's all figured out... and that might be years. And my own report will be very... discouraging for your claim.\"\n\nSpaulding continued, hurling the words at Owens: \"Guess you have no reason to be in the county any more, do you? Guess you better move your pretty little wife and that fucking brat of yours out of this county, before something worse happens to you, and especially before something happens to that little shit brat.\"\n\n\"You son of a bitch...\" hissed Owens. He saw several Deputies surrounding him, knowing they were there to kill him if he tried anything.\n\n\"Watch your language, boy. Better get home to your wife.\" said Spaulding. \"Leaving her alone is bad... niggers might break in and rape her while you're gone.\"\n\nOwens knew that several other residents were protecting his family while he'd come to see about his now-burning pharmacy. Still, he knew he had no choice but to leave, go home, and get his guns ready for the attack that was sure to come...\n\n* * * * * * * * * * * * * * *\n\nI received a phone call at 9:30pm at home. The phone said the number was 'Blocked', and the person on the other side of the line spoke in a low growl, and I didn't recognize the voice. The person told me that the Apple Grove Pharmacy had been burned to the ashes, and that a dog had been shot by Sheriff Spaulding in front of an eight year old child. Needless to say, Your Iron Crowbar felt the burn of anger when he heard about what happened to that child and his dog.\n\n\"Looks like we're close.\" I said, mostly to myself. Laura looked up at me, and I explained what was going on.\n\nAt 11:30pm, I got a text from a burner phone. It simply said \"Within two days.\"\n\n* * * * * * * * * * * * * * *\n\n\"Okay,\" I said, \"I'm ready.\" I had a bag packed with some clothes. I was dressed in civilian clothes black pants and black pullover collared golf shirt. And the Tilley Hat with Airborne wings but no Police insignia.\n\n\"What should I tell Carole when she wakes up?\" Laura said as we looked upon our sleeping daughter in her bed. \n\n\"Tell her I went to meetings, like her Mommy sometimes has to do.\" I said. \"She sort of understands that.\" Laura nodded. I reached down and petted Bowser, who was looking at us skeptically. He settled down as we left the room. We then went into Jim's room, where I patted his back, then gave Buddy a petting.\n\nBack downstairs, I hugged Laura. \"I love you, baby.\" I said. \"I'll be back soon.\"\n\n\"Be careful, darling.\" Laura whispered as she held me tightly. \"I might can send some intel, but I can't help you much with this.\"\n\n\"Thanks.\" I said. I kissed her, then began wheeling my bag out the front door. Cindy was waiting for me in her SUV. She transported me up to the Cabin. \n\nAs I opened the garage door to let out the Black Beauty, she came up to me. \"Be careful, Don.\" she said. \"And come back in one piece, please?\" She hugged me, and I returned the hug as warmly as I could.\n\n\"I will.\" I said. \"I know you'll keep things in order here while I'm gone. Don't tell anyone but the Chief and Teresa where I am, though.\" Cindy agreed. She then handed me an envelope.\n\n\"It's what you asked for.\" she said simply. I put the envelope into a pocket of my trenchcoat as Cindy went back to her Police SUV and headed home.\n\n* * * * * * * * * * * * * * *\n\nAs I drove the Black Beauty, which was actually green, down North Avenue to go west, I was actually pulled over by TCPD Officers! Since the night of Steven Moschel's capture, there had been a standing alert for an old green car...\n\nAs Sergeant Irwin and Patrolman Phil Goodwright approached cautiously, I rolled down the window.\n\n\"Sir, may I see.... Commander?\" said Sergeant Irwin, stunned to see his Police Commander in the car.\n\n\"Yes, Sergeant, it's me.\" I said. Both officers relaxed, considerably relieved.\n\n\"Heck of a car, sir.\" said Irwin.\n\n\"Yeah, a relative of mine reconditions them.\" I said. \"I'm going to take it for a spin on the bypass while there's not much traffic... unless you're going to arrest me, of course.\"\n\nBoth officers laughed. \"No sir.\" said Irwin. \"We'd prefer not to tangle with the Police Boxing Matches Champion.\" I grinned, we all said goodnight, and I was on my way...\n\nPart 8 - Going Home Again \n\n\"Life is a mystery,\n\neveryone must stand alone.\n\nI hear you call my name,\n\nand it feels like... home...\"\n\n------Madonna, 'Like A Prayer'\n\n\"Wow, look at this!\" said a teenaged boy as I pulled into a strip mall in Rome, fifteen miles from Apple Grove at 9:00am, Friday, June 10th. \"Nineteen-sixty-five Chrysler Imperial Crown! You ride in style, Mister!\" Several teen boys, all wearing white t-shirts and blue jeans, gathered around to look. They were suitably awed.\n\n\"Thanks.\" I said, grinning. \"Just don't try to steal it. It'll blow up if you do.\" I let the boys decide if I was telling the truth or lying about that. I went into the shop in front of me, the local ASPCA...\n\n* * * * * * * * * * * * * * *\n\n\"That was aggressive, Spaulding, very aggressive.\" said Mitt Baker as he and the Sheriff talked in the Sheriff's office. \"We're coming up on it. We don't need any distractions like that.\" He was referring to the shooting of the dog and the burning of the pharmacy.\n\n\"Don't worry, Mittens.\" said Spaulding derisively. \"It's all going as planned. In fact, that pharmacy incident has allowed us to sneak more people in unnoticed while they're looking at the downtown mess.\n\n\"I'll take your word for it.\" said Baker. \"Okay, I've got to run. I've got some big meetings in Rome today. You won't see me in person again... until this is all over.\"\n\n* * * * * * * * * * * * * * *\n\nEight-year-old Timmy Owens sat on his front porch, moping, trying not to cry at the loss of his beloved dog Skippy. The day was clear and sunny, and would be warm later, but there was a pall in the air, and one could still smell the smoke of the pharmacy fire. Timmy had heard his parents whispering in the night, heard his mother crying. His dad had told him they had to be strong, but he didn't feel strong right now... he felt helpless, completely without hope.\n\nHe looked up to see a very tall man with a full-brim hat, a matching beige trenchcoat, and black pants and shirt coming up the walk. He looked warily at the man, whose hair was a lighter red than the Sheriff that had murdered his dog the day before. The man had a package of some kind under his trenchcoat, the boy observed.\n\n\"Hi, Timmy.\" I said. \"My name is Don, and I grew up in this town. Can I talk to you for a minute?\"\n\n\"I guess so.\" the kid said. I could sense the presence of his parents inside the house, looking out the screen door.\n\n\"I heard about your dog, Timmy.\" I said. I reached into my trenchcoat, into one of the spacious inner pockets. Love those inner pockets, I thought to myself. \"I've brought you something.\"\n\nI took out a puppy, only a few months old. \"He's had his shots, and he needs a good home. How about here?\"\n\nTimmy smiled, then frowned. \"He... he's not Skippy.\"\n\n\"Well,\" I said, handing him the dog and watching him pet the cute creature, who was a handsome looking beagle puppy, \"when I was growing up here, I had a dog. His name was Tag. I called him Tag because he tagged along with me wherever I went. And Tag and I went everywhere, exploring all over Apple Grove and the county. Then Tag got old, and he died.\" I declined to mention Tag's fatal illness.\n\nTimmy nodded as I continued: \"So a little while later, another puppy came along, and followed me home. Well, that's what I told my mom. But I always believed that my dog Tag was somewhere in Heaven watching over me, and he sent me that new dog to keep me company. And I think Skippy is watching over you, and wants this dog to keep you company.\"\n\n\"What was your new dog's name?\" asked Timmy.\n\n\"Patches. Had a couple of brown patches on his white back. Darn good dog, too.\" I said.\n\nThe puppy was wagging his tail as he sniffed around Timmy, who was warming up to it, and I knew a new bond was being formed. \"Just do me one favor, Timmy... keep him inside for now. I don't want the Sheriff or his Deputies to see him until it's safe.\"\n\n\"When will that be?\" asked Timmy.\n\n\"Soon.\" I said. \"You'll know when it is. Oh, and would you give this to your mom and dad?\" I took an envelope from another trenchcoat pocket and handed it to Timmy.\n\n\"Sure.\" he said.\n\n\"So,\" I said, standing up, \"what are you going to name your new family member?\"\n\n\"Don't know yet.\" Timmy said. \"He'll let us know some way, pretty soon.\" I smiled. Astute boy, this was.\n\n\"Okay, see you later.\" I said.\n\n\"Sir?\" he said. \"What should I tell my mom and dad about this?\"\n\nI smiled and took my red crowbar out of its pocket inside the trenchcoat, displaying it. The boy's eyes grew wide as saucers; he now knew who I was, and the reputation of an old Apple Grove homeboy.\n\nI stood erect and tall. \"Tell them,\" I said in my most authoritative voice, \"that the Iron Crowbar has returned to Apple Grove.\"\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/along-came-a-spider-ch-01-1"
}