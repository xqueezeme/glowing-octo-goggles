{
    "title": "Marion's Story Ch. 06",
    "pages": [
        "Credit here to my friend and fellow author EM Kay (Marina Kelly) who helped with the story and kept me on the straight and narrow and of course did all the editing so thanks Marina....\n\nThings got tricky for a while after that. At school the sole topic of conversation was the lips and who was Mimi. The story circulated quickly that Mimi went to our school. It circulated fast and everyone wanted to know who it was, it was comical to sit in the cafeteria and listen to the other students gossiping about it. Is it her? Or is it her? Nobody suspected little ole me, As Marion I was totally ordinary and ignored by all. The only time students really talked to me was when they needed help with something.\n\nI had developed a bit of a reputation for being good at recording, so for those students looking for help I was an easy target, because I never said no.\n\nThe 'who is Mimi society' was like a secret cult as people claimed they knew her, names were thrown around and it caused a real stir. It was the big mystery on campus and some smart ass posted posters all around school with pictures of Mi on it and captioned 'HELP do you know this girl?'\n\nI had a good laugh but as the week progressed the pressure was building especially with the lips due to play the bottleneck Saturday night. It sounded like the whole school was going to be there.\n\nRehearsal Thursday night Mel informed us. \"We've been asked to play Friday night as well because of the interest and they have thrown in a whole bunch more money.\"\n\nAs we chilled afterwards with some beers, I took a big gulp before complaining. \"Guys there is a group of students running a campaign at school it's the find Mimi campaign, there are posters and everything.\"\n\nJas laughed. \"They aren't just around school, there's some in the music shop as well, they're everywhere.\"\n\n\"Yeah well you have to help me, if word gets out, we might get in trouble.\"\n\nThe girls all agreed and they offered to run interference for me, try and keep people away from me as much as possible. It was really hard after gigs because the crowd hung around wanting to talk and I was scared at some point somebody would recognize me and it would be all over.\n\nI got a really cool email from Sue. 'Little bro you have done well, I am proud, maybe not as proud as mom but still proud sorry I couldn't be there.'\n\nBeverly also left me a message. Sandy and I talked every night and it was getting harder and harder for us to be separated. She was as frustrated as me. She had applied for a ton of jobs in town but had failed to even gain an interview, in the end I spluttered. \"Sandy ask April or if you don't want to, I will ask for you. I am sure she will find you something.\"\n\n\"Mi I don't want to, she is my ex, I don't want to.\"\n\n\"Baby please.\" I almost begged. It took two hours of pleading and imploring to get her to agree but it was only on the condition April asked her. I got on the phone even although it was late and asked, April hesitated, she was more than reluctant but under my constant harassment she finally relented. \"OK little bro, let's talk, you scratch my back and I'll scratch yours.\"\n\n\"Yeah and how is that going to work?\" I asked nervously.\n\n\"Well squirt it's simple. \"Molly hates her job, I think she took it just so we can be together, she never complains or say's anything but I know she misses being involved with the band, running your social media stuff. If you let her get back involved then I will take on Sandy.\"\n\n\"We can't afford to take her on fulltime; we don't make that much but I will ask the others on the weekend, see what they say. April it isn't something I can guarantee, you know that.\"\n\nShe sighed. \"I am not an idiot Marion, I am not asking you to pay her, she just wants to be involved, give her a sense of purpose. If you promise to talk to the band, I will find Sandy a job, I don't want there to be any animosity between us. So, tell Sandy if she is interested and is prepared to work with me, with no drama, she can start next Monday.\"\n\nIt was galling asking for her help, but I mumbled. \"Thanks sis, I will do my best for Molly.\"\n\nWhen I gave Sandy the news, she was both happy and nervous at the same time, it didn't sound like the last thing she wanted was to be under April's thumb. What else was I going to do? Alli wanted was for her to be closer so we could see if it was going to work.\n\nFriday night we were sitting in the green room chilling before going on stage and April and Molly burst in. \"Hey girls.\" Molly screamed. Their welcome was cool, there was plenty of hesitation from the band, Moll's still had some fences to mend. I had already told the girls that Moll's and I had moved on but April was still not popular with the band.\n\nEventually there were hugs and kisses. \"What are you doing here?\" I asked.\n\nMoll's shrugged. \"What you thought we were going to miss our favorite band?\"\n\nThat got the girls attention and Jas asked. \"Are you staying in town, it will be a late finish?\"\n\n\"Well we will be if we can crash at my brother's place?\" April cried out.\n\nI shrugged non-committedly. \"Yeah that's alright as long as you keep it down, but you'll be sleeping in the lounge.\"\n\nShe smiled. \"Thanks, little bro.\"\n\nAs we took stage the place erupted into a raucous volatile eruption of foot stomping and cheering. We started strongly, as I looked down into the mosh pit there was Molly her arms in the air dancing franticly her eyes closed grinding furiously on April who was also off on another planet. We started with a fiery intensity and it just went up wildly there were a ton of stage divers and drunken dancers who just wanted to be on stage. Jas handled them well defusing the situation by dancing with them sexily\n\nThe security couldn't keep up and in the end, I think they gave up. It was only ten when a girl jumped on stage and rather than heading for Jas, she ran towards me and she wanted a kiss and to dance. I had no choice she threw her arms around my neck muting my guitar until I kissed her back and the crowd erupted again and the ground swell was huge. Thankfully security reinforcements arrived and they were able to keep people off the stage.\n\nAt the end of the night there was a huge crowd trying to get into the green room wanting to carry on what had been a huge party. Jas and Mel dealt with most of them and we sold over two hundred CD's that night and that just about used up every one we had.\n\nOnce the crowd had dissipated, we chilled with fresh drinks the manager dropped off. As we sat talking, I raised April's request. \"Oh hell yes, thank god.\" Jas screamed, jeez I am sick of it, somebody needs to do it because I can't keep up.\"\n\nMel nodded. \"Yeah we could use some help that's for sure.\"\n\nMolly and April appeared not long after and Mel gave Moll's the news. The smile on her face lit up the whole room.\"\n\nMolly was straight onto it, she had already been doing some groundwork. \"Guys would you be interested in playing the Stifel theatre again?\"\n\nWe all replied in the affirmative but Mel asked. \"Why do you ask?\"\n\n\"Well we do the cleaning and building maintenance there and the manager saw me hanging around with you guys at the battle of the bands and he said the interest has been so high following the gig they want you to do another show.\"\n\n\"Wow do you think they would provide accommodation?\" Cindy asked.\n\n\"Yeah, I reckon they would, what they offered was a forty percent take of the door. Guys the place holds three thousand people and they are suggesting the entrance price would be twenty bucks.\"\n\n\"Jeez that's over twenty grand.\" Mel muttered.\n\n\"Yeah but only if we can sell the place out, we probably wouldn't get that many people.\" I said.\n\n\"Like hell.\" Moll's grunted. \"They have assured me with the interest they already have it would be a sell-out.\"\n\nOnce we got back to my place I was exhausted a night like that is so electrifying it is impossible to keep the emotions in check, for me I have to throw everything in to it and I am carried along by the adrenalin, but once I get home I crash. April and Molly walked in behind me and I sighed. \"I'm going to sleep, here on the cushions you guys can have the bed.\"\n\nThey both stared at me. \"Are you sure? We didn't expect to get the bed, we just didn't have time to book accommodation.\"\n\n\"Nah you take it, I'm bushed.\"\n\nI crashed and thankfully sleep didn't take long because the noises coming from the bedroom were torture.\"\n\nSaturday night was a repeat, the place was sold out and it was wild. So many fans Jesus it was incredible looking out over the heaving throng of people singing, screaming our words back at us they knew them so well. It was head swelling and ego boosting.\n\nSunday morning, I wanted to sleep in but I had to drive to Dodge and pick up Sandy. It's a long tedious drive of over 5 hours and it was well after lunch when I arrived. Mom was happy and excited to see me, there was a huge lunch spread and mom had invited Bev as well.\n\nLunch was pretty amazing and mom astounded me, she was completely over everything the band was up to she knew every gig and show we were playing.\n\nI loaded Sandy's stuff into the Nova squeezing everything in.\n\nAs we were getting ready to leave I could see the sadness on mom's face. I think she was going to be sad to see the back of her house guest.\n\nWe packed the wagon quickly and hit the road before mom washed us away with her tears. It was after midnight when we rolled into home.\n\nWe both crashed and it was after nine when we woke up. April rang about lunchtime admitting she had slept in as well and wouldn't be there till tomorrow. Sandy and I glanced at each other and smiled whispering. \"Thank god.\"\n\nWe spent the rest of the day carrying all her stuff up and setting up the apartment the way she wanted. It was a side of her I hadn't seen, she was quite forceful.\n\nThe next day April turned up early and she and Sandy disappeared off together, as I watched them drive away, I had a terrible thought. \"What a fucking idiot, after seeing their kiss did I really want them to spend more time together?\n\nAs I walked to school I cursed myself for being a fool.\n\nAt rehearsal we were talking about new songs when Molly walked in with a bag full of papers and things.\n\nShe smiled. \"High gang, so who is busy for the next three weeks\"\n\nWe all glanced around the group, Mel grumbled. \"No games or bullshit Molly... what's up?\"\n\nShe glanced around the room with a big brassy smile. \"Well Next Saturday night you are playing the Stifel theatre, I pushed them and they have offered a guarantee of twenty grand, but if the place does sell out then it will go up to twenty five grand. Then the weekend after you're playing the Midland Theatre in Kansas City then Wednesday night you're playing the Riot bar in KC but the weekend after that Crossroads are running a mini festival, I approached them and as soon as they heard that you were interested they offered you a spot.\"\n\nShe glared at our stunned looking faces and spluttered. \"Don't get your hopes up... it's just an afternoon spot at crossroads, but it is a spot.\"\n\n\"Holy fuck Moll's Jesus that's amazing.\" Cindy hollered with a megawatt smile.\n\n\"Hell yeah!\" Jas added with her best cowgirl yell.\n\nThey all turned to me, what was I going to say? I reluctantly sighed .... \"Yeah I'm in.\"\n\nMel grunted at me with a disbelieving glare. \"Jesus Mi, you could sound a little interested.\"\n\nI laughed. \"Hey it's OK for you layabouts but I have finals coming up and I have plenty of shit to do.\"\n\n\"Fuck school.\" Mel snarled. \"This is a chance to make a real impact, Moll's has done a great job, now we need to bring it.\"\n\n\"Yeah I get that, but I am nearly at the end, my degree is in sight, and I have truckloads still to do.\"\n\nMolly added. \"Mi you could always defer the degree and finish it later, don't turn your nose up at this. It is a great opportunity for the band, think about the future.\"\n\n\"Jeez my mother would kill me, she would be disappointed. A lot of people put a lot of work into getting me here and I don't want to let them down.\"\n\nMel hugged me. \"You can still do it, knowing you the way I do I bet you are so far ahead you could afford to slacken off and still pass top of your class.\"\n\nWhen I told Sandy, she seemed mildly excited but hesitant. \"Jeepers Marion, I have only just arrived and I have a new job it would have been nice to spend some time together.\"\n\nSeeing my look of disappointment she added. \"It would mean spending a lot of time on the road wouldn't it?\"\n\nTrying to appease her I mumbled apologetically. \"But you can come with us, it's only over the weekend, and it's not like we will be gone for weeks.\"\n\nWhen I mentioned about school her face dropped. \"Mi your mom will be disappointed you know how proud she is.\"\n\nI sighed. \"Yeah I know and I will keep trying but it will be hard to commit the time and effort.\"\n\nI think it's fair to say Sandy wasn't impressed, she knew exactly how mom was going to react, to the news.\n\nOver the next month we played too sold out gigs across the state and our reputation continued its exponential growth. The crossroads Festival was incredible, OK we only played the afternoon spot but to be on stage with artists like that was humbling, it certainly brought us back to earth with a crash, suddenly we were the small fish in a much bigger pond.\n\nIt wasn't that we didn't play well or that we weren't appreciated, it was just the adoration the fans had for the headline acts. I learned a lot sitting either in the front or off to the side watching intently the guitar players and how they approached lead solo's was enlightening. I had a lot to learn, the first lesson for my guitar plying was, sometimes it is what you don't play that's important, and I was going to use that.\n\nSandy fell into her job easily, April had fitted her into my old role as a supervisor and I spent the first few days working with her.\n\nAs those first couple of weeks slid by, she became more comfortable in her role, in fact I saw the change, she loved it so much her personality changed from this shy timid little country girl into a real feisty little go getter. She had a drive and energy that had been hiding beneath a sea of insecurity. Every night I had to sit through long drawn out explanations of her day and how she was building and improving her team. Some of the suggestions and ideas she floated were picked up by the company and she received several letters of commendation. She had definitely found her niche. I noted with some trepidation however the amount of time she spent talking on the phone or if not talking then texting, when I asked about it, she shrugged surprised. \"Hon it's only April just work stuff you know.\"\n\nSandy really appreciated the trust April had placed in her, she reveled in the responsibility and rather than shy away from it she threw herself into it with enthusiasm.\n\nFor the first time in her life she had a decent income which manifested itself in clothes, every day there was a new dress or new pair of shoes not that I was complaining, I got to try out lots of new outfits. We often spent the evening exchanging outfits. Hers were far more demure, more everyday where mine were more for stage and were far more risqu\u00e9. It was fun and we always ended up making love. It was apparent straight away that Sandy was more comfortable making love with Mi than me. Not that she was uncomfortable with my genitalia but she obviously enjoyed it more when I was made up.\n\nIt made mornings rushed as I hurried to shower and scrub off all of the makeup before going to school.\n\nThe life of a rockstar, man it was hard work. It seemed almost every day there a new interview or event we had to attend to help promote the battle of the bands showcase. Most of the interviews were band interviews, but the one that scared me the most was the personal one. As I sat surrounded by the film crew and the interviewer started to ask the more personal questions I started to sweat. The usual stuff what age did I start to take an interest in music, where was I from, was my family musical, what was my first guitar, what did I do for a job. I stuttered my way through the interrogation and the interviewer Sharon laughed at my nervousness. When I explained I was studying music she became more interested and delved deeper and it was hard to keep her at bay.\n\nIt got more interesting when she pulled out one of the posters searching for me. \"So, Mimi it seems you have become a real celebrity at your school...why is this circulating? Why the cloak and dagger? Wouldn't it be easier to just tell everybody... or do you have a secret?\"\n\nReluctantly I muttered. \"Well I suppose I do, I come from a very religious family and if my parents saw me dressed the way we do on stage they would be shocked. In my day to day life I don't dress like this, which is why nobody at school recognizes me.\"\n\nShe laughed as she looked up and down my outfit. \"Yes, I've seen some of the outfits you girls wear. So your parents don't know about this?\n\nShaking my head I mumbled guiltily, \"Not really.\"\n\nNodding she sniggered, \" Yeah I can see how it might be embarrassing, so nobody knows your real identity? It's apparent that none of the kids at school know anything about you or your secret life as a rock star\"\n\nI shook my head. \"Nope, I am pretty private.\"\n\n\"Well what about friends? Surely they must know, they must all be laughing seeing the posters.\"\n\nI shrugged off her comment. \"Yeah my closest friends know but they are sworn to secrecy.\"\n\n\"Well then, to put all the screaming girl's heart's to rest do you have a boyfriend?\"\n\nI nodded. \"I have a partner, but no boyfriend I actually have a girlfriend, but that is private.\"\n\nShe didn't look all that surprised, and now she had her juicy tit bit she was happy. \"Well I guess you have just shattered a few hearts. Thanks for being honest.\"\n\nMolly turned up at most of our gigs and as we talked it was obvious that she hated her job working with April, the only reason she took it was she knew she couldn't stay with me and needed to move, which meant a job. When the girls in the band and I talked we agreed she had been doing a pretty good job managing us and if she could maintain the gigs and income, we would pay her ten percent.\"\n\nThe day we told her the news that we were prepared to make her status as manager official and there would be ten percent in it for her she rang April and resigned. Rather than being upset April appeared happy. At the time I thought it was strange...\n\nWith our reputation growing by the day, we were spending more and more time on the road, and we seemed to be spending a lot of time in Kansas City. Molly raised the question. \"Why don't you move to KC? It would save a lot of travel at the moment.\"\n\nThe other girls in the band were pretty keen, unfortunately it was going to have to be an all or none move otherwise we wouldn't be able to rehearse. My studies were my anchor, I wanted that degree and I wasn't moving.\n\nIt got harder when April offered Sandy Molly's old job, but again that would require us moving to KC. When I said no, she became very annoyed, \"Mi it's such a great opportunity for me, it would mean more money ass well.\"\n\n\"Sandy, you told me how much this degree means to mom, it was your idea that I finish it.\"\n\nShe nodded sulkily, \"Yes you're right, of course you need to finish, it will mean that I have to do a lot of driving though.\"\n\nApril came to her rescue when she talked the company into providing a car for her, and April was elevated to hero status.\n\nWith the trip to LA only two weeks away we sunk into some really heavy rehearsals, if we weren't playing, we were rehearsing and it was going great. I had a couple of new songs that I loved, one a deep rock ballad didn't sit to well with Mel it was in the key of F sharp minor and her voice struggled, whereas it suited me perfectly. I tried shifting the key to suit her vocal but it wasn't just the key it was the style. The other girls liked it and we fell into the song easily enough. Jas said after the third fail on the night. \"Mel just let Mi sing it, problem solved.\"",
        "Mel shot her a dagger stare, she hated losing the spotlight. The band style was centered on her being the lead singer and me providing harmony or back up. For me to take the lead vocal was going to take a dramatic shift in where Mel saw the band heading. For the sake of harmony I pulled the song out of our planning and we focused on other stuff. What it meant was my own personal repertoire was growing. I had enough material of my own to do my own album.\n\nJas took over organizing the costumes and she wanted sexy... very sexy outfits. Molly laughed as she looked through Jas's suggestions. \"Shit good luck getting Mi into one of those.\"\n\nI was as Molly suggested mortified when I saw what Jas wanted. We may as well be naked on stage. The shimmering sheer tights that she wanted me to wear showed every curve and line of my legs butt and of course groin. No fucking way was I wearing those. I went with a more refined but still rock goddess like leather skirt and sleek silver top. When I tried it on at home the only thing that I didn't like was the breast line, or in my case the lack thereof. It was how Sandy found me, standing in front of the mirror moving my padded bra around trying to give a more realistic impression of boobs.\n\nShe laughed. \"What the hell are you doing?\"\n\nI turned to face her with a sad look. \"I hate wearing these padded things, they never look right, nothing fits right, everything looks wrong.\"\n\nShe saw the tears forming. \"It will be OK babe you look beautiful.\"\n\nWiping a tear away I muttered. \"Would you like me more if I had real ones?\"\n\n\"What....\" She moaned, \"How could you say that I love you just the way you are.\"\n\n\"But would you like me better if I had boobs?\"\n\n\"Where the hell is this coming from? I have never said anything about you getting tits.\"\n\n\"I don't know I guess I have been feeling this way for a while, I spend more time dressed as Mi and I guess I am more comfortable as Mi, I definitely feel more confident when I'm dressed.\"\n\nWe hugged tightly. \"Babe I like you as you are but if you genuinely feel that way then I would support you one hundred percent. I'll be honest with you I prefer Mi to Marion, I suppose that's obvious to you as well.\"\n\nI nodded. \"Yeah I have known for a while.\"\n\n\"But it doesn't diminish the way I feel about you, I want you to know I it is you the person that I love.\"\n\nThis was the first time we had spoken about love and I had missed it in the early conversation but I suddenly realized she said love. I glanced warily at her out of the corner of my eye. \"Love.... You just said love... is that how you feel?\"\n\nShe nodded. \"Yeah I have wanted to say it before but didn't want to be the first.... I hoped you felt the same way.\"\n\nI smiled crushing my lips on hers in a passionate spine tingling kiss. \"Yes, a hundred times yes, I love you to.\"\n\nWe consummated our confessions with a night of torrid wild sex.\n\nThe next day my problem resurfaced as I stood in front of the mirror, boobs.... I wanted them, I was rapidly becoming more aware that Mi is who I wanted to be. Marion was fast becoming my history, I saw Mi as my future. Everything that was good about my life was based around Mi. Sandy, the band and even when I envisioned my future it was always Mi that was at the center of those dreams.\n\nSandy was so absorbed in her new job that she didn't seem to notice my depression, she was so bubbly and excited all the time. Maybe it was jealousy or my growing lack of self-confidence but April's name seemed to be appearing more and more in her daily briefing session. It was becoming annoying. It got worse when she appeared at home in a beautiful new dress. It was silk and flowed like a river as she walked. The pale blue really made her look glowing.\n\n\"Wow new dress. Very nice.\" I muttered enviously.\n\nShe smiled. \"Do you like it? April brought it for me.\"\n\n\"What.\" I Snarled, \"Why did April buy you a dress?\"\n\nI think my horrified scream scared her and I saw the guilty realization spread over her face. \"It was just her way of saying thanks for the hard work I have been doing.... Honey there was nothing in it, it's just a dress.\"\n\n\"Bullshit, it's not just a dress, I think perhaps you need to take a step back and you should spend less time with her.\"\n\nShe tittered hesitantly. \"Oh, jealous are you babe?\"\n\n\"Yes. I am actually, you know my history with April and Molly and let's not forget she is your ex.\"\n\n\"Ex is the word, babe she's just being nice.\"\n\nI started to pay more attention after that and the first thing I noticed was the amount of time April spent in town. When I worked for her, she came to town once every two weeks or so, sometimes only monthly, recently she was in town at least twice a week. It was starting to really irritate me and the more I tried to make Sandy see the more defensive and protective of April she became.\n\nI tried to put it out of my mind focusing on the fact we would get a week to spend together in LA for the finals. It would be time away from April's interference.\n\nMolly was making every post a winner, she had totally buried herself in the band and she had been doing great things, she had T-shirts printed up, posters printed out and she was marketing us like crazy. She videoed us at rehearsals and posted short video clips.\n\nMaybe the best thing was she sent the recordings I had made off to a proper studio and had them remixed and printed out a thousand new CD's. She had art student's design a new album cover and she brought the new albums along to rehearsal one evening. They were brilliant and we were all blown away by her dedication.\n\nShe looked worn out though and I tackled her. \"Moll's you need to start taking better care of yourself, take a break while we are gone and rest up.\"\n\nShe smiled. \"Hah you get to go to LA and I am going to be stuck here.\"\n\n\"I'm sure April will look after you.\"\n\nHer demeanor changed. \"April... sheesh you can be a jackass, I hardly see her these days she has been working so hard. Still I guess it's my fault as well, I have been ignoring her lately.\"\n\nGiving her a supportive hug, \"I don't mean this because she is my sister but you need to focus on your relationship, we can sort the band stuff out when we get back, take the chance to spend time together.\"\n\nShe kissed me quickly. \"You're right, thanks babe, yeah I will put in a bigger effort.\" She smiled. \"But I would love to go to LA with you guys it's going to be a blast.\"\n\nSandy was as excited as any of us in the days leading up to our departure, she had never been anywhere so this was going to be a big adventure.\n\nSo, we were off the adventure had begun. It was a long haul over three hours stuck in cattle class. Still Sandy and I did manage to get seats together and we snuggled up and watched a movie as she went on and on about the shops she wanted to see and the touristy things, she had it all planned.\n\nBy the time we got to our hotel we were pretty washed out and we all wanted to crash. Sandy and I laid back on our king sized bed, at least the organizers had arranged decent accommodation, any way we were laid back relaxing when Sandy's phone went. When she saw the number she scurried away quickly and locked herself in the bathroom. She came out about ten minutes later looking mysterious. She reached down and pulled me up onto the edge of the bed. \"Close your eyes.\" I did as she asked and then there was silence until she whispered. OK, open them.\"\n\nAs I opened my eyes there was April and Molly. I was completely stunned. \"What the hell are you guys doing here?\"\n\n\"April answered. \"Hey at least try to sound excited, we weren't going to miss seeing our favorite band on their biggest night, especially after all the work Moll's put into it.\"\n\nI think she picked up on my annoyance. \"What... not happy to see your big sis?\"\n\nSighing I muttered. \"I am just surprised that's all.\"\n\nMolly mumbled. \"Sorry Mi, we didn't mean to interrupt your private time, we'll go and leave you to it.\"\n\nI nodded. \"Cool, maybe we could catch up tomorrow sometime?\"\n\nSandy interrupted me. \"Don't be silly babe, we can all have dinner tonight, the other girls are going to be there as well.\"\n\nAfter they left Sandy jumped on me with venom. \"What was that all about? Damn you were so very rude! They came all the way here to support you.\"\n\n\"Yeah sorry but I didn't expect her to be here. Sandy I am still uncomfortable with April, the way she stole Molly away is still a sore point for me and I don't want to see her everywhere I go.\"\n\nWhen she didn't respond immediately I snuck in, \"Plus I'm not happy with all the time you spend with her. I was looking forward to some time away from her.\"\n\n\"But you don't mind spending all your spare time with Molly, though do you?\"\n\n\"What are you getting at?\"\n\nShe snorted derisively. \"Well how am I supposed to feel? you spend a lot of time with Molly and yet I am supposed to just sit back and accept it.\"\n\nI was shocked. \"I'm sorry Sandy, I didn't know you felt that way.... If you had said something I would have stayed out of her way.\"\n\n\"Huh... yeah right, she goes to your rehearsals, she travels with you to every gig, I think she is with you more than I am.\"\n\nI didn't know what to say, she was right but there was nothing going on. She gave me a challenging stare. \"Well come on how come it's different for you?\"\n\nI shrugged. \"You're right, I'm sorry I am being silly.\" She kissed me tenderly. \"Yes, you are, let's just enjoy the week, April and Molly are only here for the show then we have the rest of the week to ourselves.\"\n\nAt dinner there seemed to be a lot of tension, Molly and April were not happy about something, still the chatter from the band sort of lacquered over it and the banter was pretty funny Jas was over exuberant she was so excited, Mel was pretty giggly and as the wine flowed everything settled down. The event organizers turned up and there were introductions all around. We had to go for photo shoots and to meet the other bands. By the time we were finished April, Molly and Sandy were wasted. Sandy was so drunk when we got back to our room she crashed.\n\nThe morning was bright and sunny, well all except for Sandy who was feeling the effects of the previous night. I called down for room service so she could take her time. \"Jesus Mi, why didn't you stop me, my head is pounding.\"\n\nI laughed. \"Me stop you... Jeez babe you were on a mission last night.\"\n\n\"Sorry I was just having fun.\"\n\n\"It's cool, we have interviews this morning with local TV stations, then sound checks this afternoon, so we probably won't catch up till lunch and then again at dinner.\"\n\nShe nodded. \"Yeah well I reckon I might go back to bed for a nap.\"\n\nI think she was asleep before I had finished getting ready. I selected a pair of skin tight jeans, black leather boots an old Sex Pistols T-Shirt I had found in a thrift shop. My lack of boobs hit me again as I stared wishfully in the mirror, T-shirts did tend to cover it up but I still felt uncomfortable with my look.\n\nThe gang were waiting downstairs and there were a couple of thumping headaches there as well. Molly gave me a big smile as I walked up. \"Where's April?\" I asked.\n\n\"She's still asleep I don't think she will get up till lunch if that.\" She gave me an appraising eye up and down. \"You look sexy as hell in that you know.\"\n\nI think I blushed. \"Thanks, you look nice as well.\"\n\n\"Bullcrap I didn't even get a chance to put on makeup, unlike you.\"\n\n\"Yeah well the difference is you don't need it, you look gorgeous without it.\"\n\n\"Settle down you two.\" Mel grumbled.\n\nWe went in to the interviews and it was again pretty daunting, there were three cameras, sound guys, and a lighting tech. We were all seated on a settee and the questions started, it was pretty intense and a lot of the questions seemed to be aimed at me and the mystery around who I was. They had obviously been doing some digging around at school but had been unable to find anyone who matched my name or description.\n\n\"So, Mimi, you seem to be the mystery girl, would it be too much to ask for your real name, or are you going to keep us all in suspense?\"\n\n\"Sorry but what you see is what you get.\"\n\nHe changed his point of attack and talked about how we all got together and how the band started. Molly jumped in thankfully and didn't exactly lie but certainly left out a lot of details. She made it sound quite special.\n\nEventually when the interviewer realized he wasn't getting any dirt he moved on to talk about our music and what they could expect to hear from us.\n\nMel took over. \"Well it's going to be a mix of some old stuff and some new ones, all original and all ours.\"\n\nAfter some promo photos we were shopped off for lunch. I gave Sandy a call and she had showered and was already out looking around some shops.\n\nWe were at a table at the hotel having drinks waiting for Sandy when she walked in with April by her side laughing and giggling like school girls. Molly spotted them at the same time as me and her face dropped and there was no hint of a smile when Sandy and April got to the table. Sandy leaned over and gave me a peck on the cheek. \"Hi babe, wow the shops here are unbelievable, simply wow.\"\n\nApril tried to give Molly a kiss but all she got was air and there were some angry glares exchanged. It seemed I wasn't the only unhappy punter in town.\n\nAs we ate, I asked Sandy if she was coming to sound check. She screwed up her nose. \"Babe I was hoping to look around some more, you don't need me.\"\n\nI shrugged. \"I just thought you might be interested.\"\n\n\"I am it's just we can't talk or anything I'll just be sitting around.\"\n\nI heard April ask Molly if she was going to sound check. \"No I'm not!\"\n\nThat made me feel better at least Molly would be with April, I started to realize I was actually worried, I wasn't just nervous I was genuinely concerned... Something was going on.\n\nSound check well the first thing was WOW what a place. The event was being staged at the Shrine Auditorium &amp; Expo Center and it was amazing holy shit. The sound crews were already flat out when we arrived and they were finishing off one of the other bands. That caused a moment, jeez they were good... I mean really good and their equipment was incredible.\n\nMel gave us all an unbelieving glance. \"Fuck.\" Was all she said, that said it all really.\n\nAfter they finished, we were invited up on stage and we unpacked our gear and finished set up. No VOX amp but it was a Marshall stack. I played around for ages trying to get the right amount of attack and bite without that horrible Marshall muddy growl. The VOX has bite and snarl but it's clear and musical where the Marshall is just all growl, dirty and blunt. The sound guys were getting a bit irritated waiting for me. Mel was fine she uses something similar but for me this was an alien situation.\n\nI finally found a setting I liked and wrote down the settings, I used it clean and would rely on the big muff and my tube screamer to give me some added bite.\n\nWith the sound right I took the opportunity to look out over the auditorium and it was dauntingly huge, easily twice the size of the Stifel in St Louis. With the sound techs working on Cindy's drum sound it gave me a chance to limber up the fingers and I played a few old blues riffs and scales. Then it was vocals one by one until they were happy then just as we were about to begin the sound engineer called out. \"Hey Mi could you play what you were playing before, except this time crank it.\"\n\nI smiled. \"Hell yeah.\" I cranked the volume and started going through my warm up, noticing all the eyes focused on me I extended it a little including some intricate riffs I had been working on. I closed my eyes and let my fingers do the talking. When I was finished there was applause from all the sound techs.\n\nInto our first song, we chose some songs that we weren't performing for the competition and we gave it everything. Jas rocked pumping out an awesome sound. Holy crap it was so good.\n\nAfter sound check I wandered up to the mixing desk and spoke to Jimmy the senior engineer. \"So, did you guys record any of that?\"\n\nHe looked around anxiously. \"Um yeah, sorry but I always run a test.\"\n\nI laughed. \"Its OK dude I just wanted to hear what we sounded like.\"\n\nHe broke into a nervous smile. \"Phew, you had me worried... yeah no probs honey.\"\n\nI let his sexist comment slide as he hit play on the desk and I pulled on some headphones. My smile gave away my emotion, wow what a sound. It was perfect. I gave him a hug. \"Thanks man that's an awesome sound.\"\n\nHe nodded. \"Thanks, you guys rocked by the way, totally awesome.\"\n\nI walked down to catch the girls and stow our gear behind the stage. On the way back to the hotel we bumped into Molly who was walking by herself. \"Where's the girls?\" I asked.\n\nShe shrugged. \"Fuck knows.\" And walked off by herself steam billowing out her ears. \"Jesus.\" Mel whispered. \"All's not well in paradise huh.\"\n\nJas agreed. \"Yeah she ain't happy that's for sure.\"\n\nI rang Sandy as soon as I had some space. \"Hey... Where are you?\"\n\n\"I'm with April, she had a big fight with Molly and I'm just trying to console her, keeping her company.\"\n\n\"We have finished sound check, meet you back in the room in a couple of minutes for a drink.\"\n\n\"Didn't you just hear me?\" She snapped back irritably. \"April is feeling terrible I can't just walk out and leave her, Molly has been a real bitch.\"\n\n\"OK what room are you in I'll meet you there instead.\"\n\nShe gave me the room number and I reluctantly made my way there.\n\nSandy opened the door and let me in, April was on the bed, her red puffy eyes showed that she had indeed been crying. \"OK so what's going on?\"\n\nApril sobbed. \"Molly and I had a big fight and she stormed off, she has become so controlling lately we seem to be fighting over everything.\"\n\n\"Doesn't sound like Molly to me, we lived together and the last thing I would call her is controlling, in fact she might be the most laid back chick I know.\"\n\nSandy growled. \"Stop it Marion... April is upset and she isn't going to lie about it.\"\n\n\"I didn't say she was lying, I'm just saying I think you have your wires crossed. I don't know what you're arguing over but I'm sure if yah say sorry she will be fine.\"\n\nThe pair of them shared glances I decided we needed to move. \"Look sis if you call Molly, she'll be fine, we just bumped into her downstairs so call her.\"\n\nI picked up Sandy's dangling hand. \"Come on we need to give them some space so they can sort things out. us being stuck in the middle ain't going to help.\"\n\nShe reluctantly followed and as we got into the lift I asked. \"So what were you doing there?\"\n\nShe gave me a cool stare. \"Well after her and Molly had their fight, she called me and I went over to comfort her.\"\n\n\"Don't you think that's pushing the bounds of friendship? For god's sake she is your ex and I don't want you spending all this time with her... Why did she call you anyway?\"\n\nGuiltily she mumbled. \"We have become friends again, I mean it's nothing romantic but at least we are friends. She has been such a help at work and she trusted me enough to give me that job, and things are awesomely cool between us.\"\n\n\"Sandy if you are having second thoughts about our relationship I want to know now. If its April you want to be with just say so, don't lead me on.\"\n\n\"What... Why did you say that? jeez Louise I was just being nice to a friend.\"\n\nI scowled. \"Well that's not the way it feels to me, it feels like you and April are more than friends.\"\n\nShe snuggled up against me. \"Babe I am sorry but no there's nothing between us I promise.\"\n\nAs I was preparing for the show doing my makeup and pulling on my costume, I had second thoughts Christ these tights were so tight it was like I was naked but wow they looked sexy as hell the light shone and glistened off the fabric. I spent an age just standing in front of the mirror admiring the fit. Hiding the bulge became my biggest problem... I had never figured out a way to get rid of it... So here I was with a mile of tape pulling my cock back between my legs. It hurt lie hell. There just had to be a better way... After exhausting three rolls of tape my bulge was hidden, now if I could get rid of this feeling of being naked.... What would mom think?",
        "The sparkly sequined top showed a lot of skin as well and it brought my eyes back to the fact, I had no boobs. Sandy came in and checked on me. \"Honey don't worry, for heaven's sake you look incredible.\"\n\nShe looked pretty amazing herself she had brought a new dress which she picked up from her trip down Rodeo drive in Beverly Hills with April. I didn't see the price tag but looking at it there was no way Sandy could afford this. It was a beautiful deep green polyester and lace form fitting dress. It had the thinnest straps ever and fitted her boobs perfectly. The dress itself was black but was laid over the top with a beautiful deep green lace and organza material the flowed as she walked. The top was black but panelled with the green lace. Sexy ..... Oh my god I was so jealous, it was perfect.\n\nWe walked out hand in hand and met the gang down stairs. When Molly saw me, she spluttered. \"Holy smokes are those painted on? Jesus you look gorgeous.\"\n\nI noticed with pride that April looked displeased with her remark, although she added her approval.\n\n\"Yeah well it's OK for you guys but I feel like I am totally exposed.\"\n\nJas who was wearing a similar outfit laughed. \"Yep feels hot don't it?\"\n\nApril saved her comments for Sandy. \"Sandy you look amazing as well, gorgeous.\" The girls in the band agreed and Sandy soaked up all the complimentary comments with her smiling blush.\n\nMel had on the shortest skirt it was possible to wear without being arrested and Cindy.... Wow she looked spectacular. We were taking slutty sexy rock to a new level.\n\nAt the bar we had a few drinks before heading to the venue. It was obvious that things were not great between Molly and Sandy, they never stood close together and they definitely weren't talking, but that could also have been said for Molly and April as well. Seems that maybe Molly felt the same way I did.\n\nAt the venue we were shown to the back of the stage and the chill out room. Molly April and Sandy were shown to their seats out in the crowd.\n\nThere were ten bands in total the winners from the North, South, East, West and Midwest finals plus the next five highest scoring bands. It was good to see the Arkansas boys made it. As we peeked out into the auditorium it was starting to fill up and the nerves started to build.\n\nThe MC brought us all out onto the stage to introduce us. The West Coast band got the biggest cheers but we noted with pride that there was a lone Jayhawks flag waving wildly and the two girls who were waving it were also screaming their pretty heads off.\n\nWe were going to be the sixth band on show, all of the second picks were up first, so we were going to have a long wait before we played. We found a quiet spot and sank a few beers. We talked crazily and went over the set list. I had never seen Mel so nervous. Jas muttered. \"Are we wasting our time, or do you think we have a shot?\"\n\nMel jumped on her. \"Don't talk like that... No negativity, we're here to win this thing, but even if we don't let's at least say we gave it our best shot, let's be proud and walk off with our heads held high!\"\n\nI nodded. \"We' put way too much into this to give up now. C'mon Jas, you know we can win this. God damn it if I am getting up on stage in front of millions of people wearing this thing then I need to know we at least have a chance because my mother is going to have a heart attack when she sees this outfit.\"\n\nThey all laughed, having met my mom they knew how proud she was.\n\nOur turn finally arrived and we were ushered out onto stage and into the light. The MC held us close as he did the introductions.\n\nWe had chosen to start the same way we started in St Louis with Cindy's powerful drum intro. The moment she started the crowd went nuts, the flag started waving and there were screams of exultation.\n\nWe drove powerfully into the song and Jas started dancing with Mel and me, her ass giggling and swaying sexily. As she danced with me using me like a stripper's pole, she maneuvered me so my ass was facing the crowd. \"Shake that tushy baby girl.\" She whispered. When she saw my horrified look she growled, \"Go one babe shake that ass.\"\n\nI played up to her and we danced and bounded around on stage. Mel joined us for a Status quo walk across stage.\n\nThe seats in the front had emptied and there were people dancing in the aisles, people dancing on seats and the security guards had a real problem trying to get them under control. It turned out to be a lost cause and by the time we finished our set they had all but given up.\n\nAs we walked off stage Jas jumped into my arms. \"Baby girl you were amazing, oh my god that dance shit you were so sexy.\"\n\nCindy jumped on the band wagon. \"Jesus you two were off the charts, seismic babe, fucking seismic.\"\n\nEven Mel got on board. \"Man did you hear them screaming...? Holy shit, what a rush.\"\n\nWe collected some beers from the bar and went out to catch up with Moll's. She met us by jumping into our arms. \"Jesus, what a set... It doesn't matter whether you win or not, that first song was a hit... Shit it doesn't matter what happens after this that clip will be on all the news feeds.\"\n\n\"To hell with that Moll's we want to win.\" Mel howled out not caring who heard.\n\nAs we were talking, we were swamped by fans all screaming and trying to climb over us. The two girls with the flag joined in a huge group hug and Moll's took hundreds of photos and the official photographers seeing the hullabaloo came rushing to get involved. There were sparks between one of the girls and Jas when they said they had driven all the way from Kansas City to support us.\n\nI somehow figured Jas wasn't going to be sleeping alone tonight.\n\nThe first half of the show came to an end, this was where the finalists were selected it was being cut from ten to four. Like the previous time we were all invited out on stage and the MC collected the votes from the judges.\n\nThe finalists were read out in no particular order. First out was........ Us.... The screams started for real, Jas jumped around like a firecracker, Mel just stood there staring mouth hanging wide open and me and Cindy fell into each other's arms. I don't know what happened after that all I could hear was Jas screaming in my ear.\n\nIt turned out the other three were the band from Arkansas, the band from New York and the local LA band. We didn't care we made it and that's all that mattered.\n\nThen came the drawing of who was playing in what order. We ended up being third which was good it gave us a chance to regroup and get our breath back.\n\nMoll's, Sandy and April met us back stage and we had a few drinks, April had already had to many by the state of her she looked plastered. Sandy wasn't much better and they were leaning all over each other. Molly got lots of photos of all of us, did some impromptu interviews all of them she shared straight away on Instagram, snapchat and of course Facebook. She even loaded some onto YouTube.\n\nWe sat out back listening to the bands play and I don't know whether it was because we were out the back or what but it didn't sound like the crowd was that into it. They sounded good but the crowd seemed restless.\n\nAs we were getting ready to go on stage Mel grabbed me. \"When we start just make up something, just you by yourself, like in the warm ups and then like when we came in with Cindy the first time, we will come in with you.\"\n\nI gave her a worried frown. \"No don't wait for us Mi you know the song just improvise and make it loud invent something, just start playing.\"\n\nI growled, \"Mel we are in the finals, this is no time to experiment.\"\n\nShe smiled broadly, \"Fuck it, go on just go for it.\"\n\nCindy and Jas nodded. \"Yeah babe, go for it show them how good you are. We will come in when it feels right.\"\n\nThe cheering started the moment we came on stage and the screaming grew as we strung on our instrument. I walked up and stomped on my little old Ibanez tube screamer and started playing some riffs and as I played, I kept pushing up the volume, into some scales and an old classical Dorian riff that I learned. Bent at the waist my eyes screwed shut I played building the tempo until it felt right and then I held a single note letting the sustain carry it before I stomped on my big muff and the feedback took over and it screamed. Jas came barreling in with that descending scale and Cindy fell in with that beautiful tight groove. All the while I just held that note letting the feedback carry it along like a magical plume of smoke drifting on the wind.\n\nThe crowd were all on their collective feet and the stomping and clapping started to build which brought Mel in with her vocal and then we were away into the songs. The auditorium erupted and the seats emptied, the heaving throng pushing forward until there was a makeshift mosh pit in front of the stage it was a sea of heaving pulsating people all moving as one.\n\nThe set was finished before we knew it and the disappointment grew amongst the crowd as they cried for an encore which of course was not allowed.\n\nWe were escorted off stage and the crowd followed trying to push into the corridor leading out the back. The two girls with the flag were right at the front and they were roughly pushed back by the security guards who were trying in vain to get some control. Jas and I ran down and grabbed the girls with the flag yelling to the guards they were with us.\n\nThey joined us as we headed into the chill out room. Mel said to them. \"You will miss the last act.\"\n\nThe cried out together. \"We don't care, we saw the best.\"\n\nJas handed them a beer as we rested and took long pulls on our drinks.\n\nSandy, April, and Molly came wandering in with huge smiles on their faces, again more drinks. I was starting to feel pretty light headed. Sandy threw her arms around my neck. \"Babe that was amazing, oh my god you were soooooo goood and you looked so sexy.\" We kissed swaying and holding each other up.\n\nIt seemed like an eternity as we waited for the last band to finish, but it already sounded quieter and most people were back in their seats. \"You won't believe how many people there are out there from Kansas, we were surrounded by people who drove just like us.\" Jessica one of the flag bearers cried out.\n\nFinally, it was over and the usher called us all on stage. The other bands were already there. Jas, Cindy, Mell and I all stood holding hands and Jas was gripping me so tight it almost hurt.\n\nThe MC started making his announcements thanking the sponsors, the organizers, the crowd and as he built up the tension, he pulled out the sheet of paper. \"All right ladies and Gentleman, in third place we have... Ballistic neutrinos from New York.\"\n\nThe crowd blew up clapping and applauding it took several minutes for him to shush them down. \"In second place we have...... \"Scuttle butt hero's from Arkansas.\"\n\nAgain, the place erupted and our emotions were impossible to describe my heart was racing... Could it be.... Could we actually win?\n\n\"All right... Drum roll please... In first place we have Our Dirty Kissable.... \"He never got to finish because the place went mad yelling screaming clapping foot stomping it was surreal.\n\nHe said OK Ladies do you have anything you would like to say?\"\n\nMel grabbed the mic. \"We want to thank all our amazing fans, our parents, our friends, all the people who believed in us, just everybody.\"\n\nShe handed it to Jas who was crying so hard she couldn't speak, Cindy just waved it past until it was in my hands. \"I just want to thank my mom, my girlfriend, my sister, but like Mel all our fans you know there are people here tonight who drove from Kansas to see us.\" I turned to the MC and asked. \"Would it be OK if some of them came up on stage?\"\n\nHe looked like he didn't want to say yes but he was trapped. \"Yeah sure why not they drove from Kansas for god's sake.\"\n\nWe brought up the flag wavers and their flag and that's when the eruption started there was a huge groundswell of people who flooded the front area below the stage. April and Sandy came rushing onto stage as well followed by Molly. Using the mic, I added. \"We also need to thank our manager Molly who has worked her ass off making this a possibility.\"\n\nApril jumped into my arms and she was tanked. She screamed. \"Little bro I am so proud, oh my god little bro you were amazing.\"\n\nThe MC picked up on it and gave me a funny stare. \"Little Bro? What's that about?\"\n\nFor me the world stopped spinning the room went silent I could hear my heart beat. Making it into a big deal he asked. \"What did she mean by that? Is this your sister? Are you her brother?\"\n\nMolly grabbed the mic snatching it brutally. \"Whoa Mister slow down, don't be ridiculous, we call her little bro because when she isn't playing she is like a tomboy, nothing sinister.\"\n\nMel grabbed the mic. \"Guys this little hottie Mimi is the hottest damn guitar player in the US of A, Gimme a big cheer if you all agree.\"\n\nOff course the yelling and screaming started and the sticky moment passed without further comment, although it was obvious, we weren't getting away without an encore. So, we started playing a couple more songs and the flag wavers went crazy. Molly, April, and Sandy danced away at the front of the stage and the crowd joined in the chaotic moment dancing bouncing arm waving hand clapping foot stomping and the mosh pit overflowing.\n\nThe prize was fifty grand plus a recording deal with EMF records. There were some other prizes as well a new guitar, some cymbals and a pile of endorsed clothing.\n\nAs we were settling down in the chill room April ran up and sat in my lap. \"I'm sorry little bro, it just slipped out I didn't mean to say it.\"\n\nI gave her a hug. \"Hey it's OK all good.\"\n\nAs we walked back to the green room Sandy passed me my phone it was mon. \"Marion congratulations you were amazing, I love you.\"\n\n\"Thanks mom.\"\n\n \n"
    ],
    "authorname": "Cagivagurl",
    "tags": [
        "crossdessing",
        "forced fem",
        "lesbian"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/marions-story-ch-06"
}