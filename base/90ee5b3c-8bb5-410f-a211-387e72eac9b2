{
    "title": "Thank You, Janie",
    "pages": [
        "They were both covered in sweat. Their breaths laboured. \n\nExhausted. \n\nExhilarated. \n\nWith blood pounding through their veins, they could only see one another. Everything else faded away. \n\nJanie's leg swung around in a sloppy roundhouse kick, her padded foot sailing past Jason's shoulder with just a fraction of an inch to spare. He saw an opening and rushed in, a flurry of punches meeting a desperate series of blocks. \n\nLike everyone else in the taekwondo class, their movements weren't nearly as strong and crisp at the end of the hour as they were at the beginning. \n\nTheir eyes were tired and easily lost focus. Which is how Jason found himself on the wrong end of Janie's snap-kick which landed squarely just above his belt. \n\nHe doubled over in surprise more than actual injury, and found himself pelted with a combination of blows to his chest, their sting mitigated by the sparring pads. \n\nJanie smiled triumphantly, making Jason's heart skip a beat. \n\nThey had started taking taekwondo classes as white belts together. He was a sophomore in high school at the time. She was a single mother with two kids and a nurse for a cosmetic surgery clinic. \n\nAfter a year, her kids quit, but she kept going. For the exercise. For the camaraderie. For the chance to kick and punch something\u2014or someone\u2014when she needed to blow off some steam. \n\nAfter another year, of the forty or so white belts who started out together, less than a dozen were left. \n\nA year later, only four remained together: Janie, Melissa, Jason and Steve tested for and received their black belts. Some of the others who had started with them were still training. A couple left and came back. A handful missed a belt test or three due to an injury, but the four of them were the best of friends and sparring partners. \n\nSteve Placilla worked for an accounting firm and Melissa Cavanaugh owned a print shop. Like Janie, they were adults taking martial arts lesson to stay in shape and for a couple of hours' respite from their jobs and young children. \n\nJason graduated from high school and started at the local community college in town. He was a smart kid, and his parents helped him out with his bills as best they could. They continued to pay for his taekwondo classes because his grades were good, and it kept him in shape and (mostly) out of trouble. \n\nHe was well-mannered and shy. Tall and scrawny and uncoordinated, taekwondo helped bring Jason out of his shell as he grew into his lanky teenaged body. The lessons gave him confidence and self-esteem when he needed it most. By the time he started college, he had filled out and grown into a very nice young man. \n\nIt was an open secret that Jason thought the sun rose and set around Janie. She was fifteen years his senior, and could have had him at her beck and call if she wanted. \n\nTo be fair, Janie Collins was on the list of pretty much every man (and some of the women) who ever met her. You know \"the list\": it's the 5 people you'd pick to get a free pass from your spouse to sleep with. \n\nHer body was toned and muscled from three years of regular martial arts classes. Flexible, too. She was slender and moved with a feline grace. Her hair, even after sweating through an hour of taekwondo, was always immaculate, her soft curls often pulled back to keep out of her face when doing push-ups or spin kicks. \n\nEveryone thought she was drop-dead gorgeous. Everyone except Janie. When she looked in the mirror, all she saw was a plain-looking, thirtysomething mother of two. Still, her smile was infectious, and her laugh always joyous. Janie's children were eleven and nine, and she split custody with her ex-husband. \n\nJason absorbed his sparring partner's weak assault, his own counter attack stopped by the instructor calling an end to the matches. The thirty adults lined up by rank and bowed out of the class, quickly making way for the kids' white and yellow belts. \n\nMost of them left the main floor and made their way to the observation and warm-up areas, a few collapsing on to the carpeted floor. As was their custom, Jason and Janie walked a circuit around the room, keeping their arms and legs moving in a leisurely cooldown. \n\nBy the time they got to the water fountain, the line had disappeared. A couple waited on their kids in the current class, but the rest of the adults were already out the door. \n\n\"One day I'm going to take your face off with my foot,\" Janie teased. \n\n\"You wish!\" Jason laughed. He was a full head taller than she and with his considerable talent, even on a good day, her feet only got near his head if he let her. Which was often. \n\n\"Are you going to the Boca Raton tournament next month?\" she asked casually. Within their taekwondo organisation, it was one of the larger regional tournaments. Jason was one of the star students at their school; his regular training combined with substantial natural ability usually led to him placing on the trophy stand at most of the tournaments he attended. If he were to go on the regular tournament circuit, he could seriously contend for a national ranking in his age group. \n\n\"I doubt it,\" he shrugged. Money was his issue. He had a couple of part-time jobs, scholarships for college, but was still taking out more in student loans than was good for him. The tournament entry fees weren't too much, but Boca Raton was a couple of hours away and a weekend tournament meant two nights in a hotel plus meals. \n\nJanie smiled knowingly and didn't press her young friend. She gathered up her sparring bag and headed for her car, pausing only to look back over her shoulder and wink. \"See you Thursday.\" \n\nThen she walked off, unaware that Jason hadn't moved, his eyes lingering on her swaying hips. \n\n********************* \n\n\"We need to get Jason laid,\" Heather said. \n\nCody laughed. \"I've been trying to get him to go out with that girl who works at Buddy's all semester.\" \n\n\"The one with the big boobs?\" \n\n\"Yeah.\" \n\nJason rolled his eyes and turned his attention back to the Xbox. Cody had been his best friend since second grade, and they had known Heather since middle school. All three had graduated the previous May. Where Jason and Cody attended the community college, Heather was on a scholarship at the state university in town. \n\nThe couple lived in an apartment down by the university, and Jason spent a lot of time hanging out with them. It beat staying at his house with his parents. \n\nOstensibly, Cody and Heather had separate rooms, mostly to ease the conscience of her fundy Christian mother, but everyone with half a brain that wasn't in denial knew what \"living together\" meant. Jason was the immediate beneficiary of this arrangement because his friends had a second bedroom which they never used. He slept over often, usually after a night of underage drinking. \n\n\"She's dumb as a box of rocks.\" \n\n\"And?\" Cody smirked, raising a half-empty bottle of beer. \"To dumb chicks with big tits.\" \n\n\"Here, here!\" Jason laughed, toasting with his own. His buzz was fading and his eyes were beginning to glaze over. If he didn't get to the bed in the back room soon, he might spend another night on the recliner in the living room. \n\n\"Hey! I've got big boobs!\" Heather's mock pout drew a laugh from both of the guys. \n\n\"Yes, you do, baby,\" Cody threw his Xbox controller on to the coffee table. He slapped his girlfriend across the backside. \"Now go get them out!\" \n\n\"Yes, sir!\" she flipped up her skirt, flashing both boys her panties. Jason was used to the teasing. Cody liked to show off his girlfriend. \n\n\"G'night, chief,\" he clapped his friend on the shoulder, then dropped his controller on the sofa and retreated into the bedroom where Heather was undressing. \n\nJason sat on the couch as his team, now one man down, was pulverized by some 12 year-old kids from Mississippi. He logged out and flipped channels as his friends got down to business. \n\nHe listened enviously, as Cody and Heather had very enthusiastic and vocal sex on the other side of the cheaply-constructed wall. All the while, Jason wished Janie Collins was on her knees in front of him, taking his aching cock down her throat. \n\n********************* \n\n\"Guess what,\" Janie tugged at his sleeve after class one day. \n\n\"What?\" \n\n\"You need to ask off work next weekend.\" \n\n\"I can't, the schedule is already made up.\" \n\n\"Trade out. You have plans.\" \n\n\"What?\" \n\n\"You're going to the Boca Raton tournament.\" \n\nJason turned, clearly puzzled. \"What are you talking about?\" \n\n\"You're going to the Boca Raton tournament,\" Janie repeated. \n\n\"I can't afford it,\" he looked away, embarrassed. \n\n\"Then you can thank me later.\" Janie patted him on the arm, making his pulse race. \"Missy, Sharon and I are splitting a room, which means we have an extra spot for one more. I got Master Robertson to waive your entry fee after I volunteered you to judge for one of the kids brackets. All you need to do is get someone to cover for you at work and bring some money for food.\" \n\nHe stopped in his tracks, causing a minor traffic jam in the hallway. His jaw fell open. \n\n\"I don't know what to say,\" Jason whispered once he found his voice. \n\n\"Say, 'Thank you, Janie'.\" \n\n\"Thank you, Janie.\" \n\n\"You're very welcome.\" \n\n********************* \n\nThe drive to Boca Raton took about three hours. Neither Jason nor Sharon had Friday afternoon classes, and both Melissa and Janie were able to get off work. The four of them piled into Janie's minivan for the drive. \n\nAt the last count, over sixty students of all ages and ranks from their school were competing in the tournament, which usually had around a thousand participants from the southeastern region. Most were staying in a block of hotel rooms at the Quality Inn reserved for the tournament, and a good number of the participants were driving up in a caravan. \n\nFor most of the ride, Jason was quiet, although the girls managed to draw more than a few laughs from him with their friendly teasing. \n\n\"So who's going to sleep with Jason?\" Missy asked, the innuendo drawing a laugh from Janie and Sharon, and making Jason flush with excitement and embarrassment. \n\n\"Maybe we should take turns,\" Sharon suggested. She was also a student at the university, although she was older than most of the other undergraduates, having served an enlistment in the Air Force. Like the other black belts, she was in fine, athletic shape, but where Janie was short, lithe and slender, Sharon was strong, tall and buxom. Her hair hung down her waist and she could easily kick through three boards. \n\nMelissa was somewhere in between. As the owner of her own business, she worked more than just about anyone else Jason knew, and a couple of times, she almost missed a belt testing. She didn't want to fall behind Janie, Jason and Steve, so she persevered. Like Janie, she had two children who were staying with relatives while she went to the tournament. \n\n\"Hands off, girls,\" Janie called from the driver's seat. She looked up at Jason in the rear-view mirror and winked. \"He's all mine this weekend!\" \n\nThat made Jason blush even more. He had to shift in his seat to hide the sudden excitement in his pants. \n\nUpon arriving at the hotel, they checked in and took their things up to the room. It wasn't anything special, but it was clean with two queen beds and a full bathroom. Jason brought a sleeping bag and an air mattress he'd borrowed from his parents, but the girls made him leave them in the car. \n\nAfter settling in to the room, they got back in the van and drove to the local high school where the tournament would take place over the next two days. \n\nThere was a quick orientation for the judges and then everyone got their assignments. The school hosting the tournament was responsible for registration and most of the logistics, but as black belts, Jason and the girls were expected to help out with setting up the floor and judging the lower ranking divisions. \n\nJason was teamed up with two other judges; one was another first degree black belt and the head judge was a third degree. He knew the other two from other events as competent and fun, although he had never worked a tournament with either. \n\nEach group of tournament participants would be divided up into groups of 10-16 based on age and rank. There were two basic competitions: forms and sparring. The forms were judged on a scale of one to nine, and the sparring was scored based on contact. Each group had an area taped off on the hardwood floor where all of the competition would take place. \n\nAfter a couple dozen tournaments, as both a participant and a judge, Jason knew what he was supposed to do, and the other judges in his group immediately struck him as easy going and efficient, which was a great relief. \n\nJanie and Sharon were in the ring next to Jason's, and Melissa's group was a couple of rows over. Without any matches going on, the gym seemed calm, but at 9 AM the next morning, it was going to be carefully choreographed chaos filled with the sounds of competition and stench of sweaty kids. \n\n\"We're going out to eat once we get wrapped up here,\" Janie told him. \n\n\"Do you know where?\" Jason asked nervously. \n\n\"I think some Chinese buffet that's up the road,\" Janie slipped her hand into the crook of his arm, sensing the source of his apprehension. \"I'll buy.\" \n\n\"Okay.\" He smiled weakly to cover up his embarrassment. Jason's family wasn't rich, but nor were they poor. They were stuck in that uncomfortable bracket where they didn't have enough money to truly afford to send their son to college, but they made too much to qualify for any substantial need-based financial aid. \n\nWhen he wasn't hanging out at Cody and Heather's place, Jason lived at home. He worked in the kitchen at the Outback on the weekends, and was a lifeguard for a few hours during the week at the indoor pool at the university rec center. He could cover his bills, but didn't ever have a lot of money left over. \n\nDinner turned into a not-so-small event as people invited others\u2014and in some cases, themselves\u2014along. The restaurant was packed and the food was typical buffet fare, but the company was good. Surrounded by his friends, many of whom looked up to him as a gifted martial artist, he emerged from his shell, easily switching from talking shop to telling people he hadn't seen since the last tournament about school to fending off the advances of a young lady two years younger who was clearly infatuated with him in the same way he was infatuated with Janie. \n\nAfter dinner, Jason and the girls\u2014his \"roommates\" as some of the others teased\u2014returned to the hotel. The night was young and some of the families planned to meet up at the pool, while those without kids gathered in the bar and lobby. \n\nClose to midnight, Jason returned to the room, before Sharon but after Melissa and Janie. \n\nThe lights were out, but the TV was on. Missy was actively cheering for someone to punch Cersei Lannister in the throat and Janie was reading something on her Kindle. The girls looked up. Both were wearing t-shirts and long pajama bottoms. \n\nJason ruffled through his things, looking for something to sleep in, finally settling on a t-shirt of his own and a pair of workout shorts. He went into the bathroom, changed and brushed his teeth. \n\n\"Are you sure you don't want me to get my sleeping bag?\" he asked. \n\n\"Of course not,\" Janie snorted softly and patted the empty half of the bed next to her. \"I don't bite.\" \n\n\"That's not what I heard,\" Melissa snarked, making Jason's ears turn beet-red. \n\nJanie stuck her tongue out at their friend, who only giggled. Jason plugged his cell phone into the wall charger, then not reluctantly slipped into the bed, going to great lengths to stay on \"his\" side. \n\nHe dozed off, so close to that which he desired more than anything in the world. \n\n********************* \n\nAt first the thought it was a dream. \n\nBecause what was happening surely wasn't reality. \n\nJason lay flat on his back. Soft light shone through the cracks in the curtains of the hotel room from the streetlamp just out the window. \n\nHis cock was hard as a rock, and sticking straight up. \n\nAnd running her hand up and down its length, covered by his shorts and boxers, Janie Collins was giving him a hand job. \n\nHe blinked back the haze, his body paralysed by excitement and fear. His mouth fell open, wanting desperately to cry out or moan, but no sound came forth. \n\nTurning to one side, he saw two shadowy lumps in the other bed. Both were breathing regularly and appeared to be sleeping soundly. \n\nWith an expert touch, Janie stroked him. With each pass, she squeezed gently on his tumescent head. \n\nIt may have been his imagination, or simply part of the dream, but it seemed her other hand was working between her own legs. \n\n\"You've been poking me with this all night,\" she whispered. The words barely registered in his ears. \n\nHis body tensed. \n\nHer pace quickened. \n\nDrawing in a sharp breath, he tried to warn her. \n\nBut then his cock burst in her hand. His shorts filled with cum as she milked him through his shorts. \n\nJason heard a muffled cry and felt her body tense next to his. He almost had to bite his tongue to keep from crying out and waking the people in the next bed over. \n\nHe gasped and tried to speak. \n\n\"Shhhhhh . . . you're asleep.\" With that, Janie rolled over and curled up in a ball. \n\nJason dozed off again, unsure of what had happened. \n\nWhen he woke, the cum in his boxers made him wonder if he simply had a wet dream, or if a woman who was technically old enough to be his mother had really jacked him off. \n\n********************* \n\nThe four of them woke up and took turns rotating through the shower. Jason went last and had to resist the temptation to masturbate. \n\nAll of them dressed in the white heavy cotton pants of their taekwondo uniforms and t-shirts. None of them were competing on Saturday, so they didn't need their sparring gear. They packed up their jackets and belts, then went out for breakfast. \n\n\"Where are we going?\" Sharon asked as they piled into the minivan. \n\nMelissa checked her text messages. \"Mike and Janet said some folks are going up the road to Denny's.\" \n\n\"That's fast and inexpensive.\" Janie looked over at Jason. He shrugged, still unsure of how to approach her over what happened, or at least what he thought happened, the night before. \n\nAs it turned out, Denny's was a zoo. They were ahead of the usual Saturday morning breakfast rush, but with the influx of people in town for the tournament, tables were scarce. Luckily, they found some people from their school and pulled up some extra chairs. \n\nJason didn't say much, and he thought Janie winked at him once or twice. \n\nBy the time they arrived at the tournament site, registration was in full swing. They went to their assigned stations and then prepared for the onslaught of competition. \n\nThe youngest children went first, with each group taking about an hour for the forms and sparring competition. Between groups, they got a short respite to use the restroom or grab a drink. As the day went on, the kids got older, until the first of the adult brackets started. \n\nA couple of times, Jason looked over at Janie, but she was busy charming the socks off of the kids and adults who were lucky enough to be sent to her ring. \n\nOne time, he found himself staring for a second too long at her perfect rear end, which brought him a nudge, smirk and a wink from his head judge, who was doing the exact same thing. \n\nBy the time the first day was over, the sun was setting, and the gymnasium was clearing out. They policed up their area and headed out to the parking lot. \n\n\"There's a local steakhouse between here and the hotel,\" Mike Keller was telling Janie as they loaded up into the minivan. \"We're going to change and then grab a bite to eat.\" ",
        "\"Sounds good to me,\" Janie sighed. \n\nNone of them bothered to shower. Jason went into the bathroom, taking an extra few minutes to let the girls change. \n\nAs they headed out to the parking lot, Janie threw him her keys. \"You're driving.\" \n\n\"Why?\" \n\n\"Because we really need a margarita, and you're underage.\" \n\n\"I could be drinking tonight.\" \n\n\"We need a designated driver and I will rat you out in a heartbeat,\" Melissa teased. \n\nThey got a private room in the back of the restaurant with a score of their friends. \n\n\"So how did your ring go?\" Janie asked, sliding into the seat next to Jason. \n\n\"It was okay,\" he replied. \"I just wish they'd switch us out half way through the day. These two day tournaments are killing me.\" \n\nThe others at the table just smiled. He was eighteen years old and didn't know the first thing about the sore knees and shoulders and back and neck that awaited him when he was forty. \n\nThere were a couple of families, and all of them had known one another for a couple of years. The adults had always watched out for Jason, knowing that he was a good kid who could have had the world at his feet if his family had just been a little bit better off. \n\nEveryone was famished; none of the people who spent the day judging got much more than a hot dog or a bag of chips throughout the day. The conversation was subdued, but friendly. \n\nJason was seated between Mike and Janie. He was a big, jovial guy who liked to give Jason a hard time as the big brother he never had. Or wanted. His wife and ten year-old son were staples at the taekwondo school, and they were red belts on the verge of testing for their black belts. \n\n\"So after this we're going out to the Gold Club, right?\" Mike elbowed him in the side between the salad and entr\u00e9e. \n\n\"Only if you're paying,\" Jason shot back with a smile. \n\n\"Shit, as long as you mention medical supplies, I can write it off as a business expense,\" his friend returned. \n\nMike's wife rolled her eyes, accustomed to the loud-mouthed antics of her husband. He had always been a lot of bluster, especially when it would get a rise out of those around him. Still, he was as loyal a friend as anyone could ask, and generous to a fault. \n\n\"Jason doesn't need to go to the Gold Club; he's got a room full of girls waiting for him at the hotel!\" Janie interjected loudly, pretty much to the surprise of everyone at the table. She latched on to Jason's arm, and her eyes were almost glazed over, partly from having spent all day at a taekwondo tournament, and partly from the pair of margaritas she had already downed. \n\n\"We should all be so lucky,\" Mike winked at his friend, and let the matter drop, lest Janie embarrass herself further. \n\nDinner seemed to sober her up a little, and they drove back to the hotel right afterwards. \n\nThe four of them changed, plugged in their cell phones and then crashed. \n\nJanie was the first to go; she was asleep before Jason was done in the bathroom changing and brushing his teeth. He slipped into the bed as the other girls did their business. The lights went out and he rolled over on his side, his back to the woman of his dreams. \n\nWhen he woke the next morning, Janie's head rested on his shoulder, her arm draped around his waist. \n\nHer breath felt warm against his neck. Her breasts were mashed against his shoulder. \n\nIt took just a fraction of a second for Jason to realise that he never wanted to move again. \n\n********************* \n\nJason didn't see the foot that connected with his solar plexus. He was occupied with the flurry of punches from his opponent, a student from Jacksonville who was every bit his equal in the sparring ring. \n\n\"Point!\" one of the judges yelled, the two young men separating and returning to the marks taped on the floor. \n\n\"Score!\" the head judge called as he checked with the other two judges. Each of them held a long dowel rod with a red flag attached to one end and a white flag to the other. When called upon, they indicated which contestant scored by showing the flag and holding up one, two or three fingers indicating the score. \n\nA kick or punch to the chest was one point. A jump kick to the chest was two points, and a jump kick to the head was three points. Blows landing below the belt or to the back, or punches to the head would result in a warning. Two warnings meant a one point penalty. Three warnings brought forfeiture of the match. \n\n\"One point red, one point red, no-see. Score: one point red!\" \n\nJason rested his hands on his knees, taking a couple of deep breaths. The other boy had very nearly knocked the wind out of him. They were about the same age, and had a friendly ongoing rivalry since they were green belts. \n\nOften when one finished first in forms or sparring, the other finished second. Jason already had the first place forms trophy and wasn't about to \"settle\" for second in sparring this time. \n\n\"The score is now three points red, three points white. Ready?\" the head judge called, giving both fighters about ten seconds to set themselves. If Jason couldn't shake off the kick to his gut, he would have to forfeit. \n\nHe nodded, set his feet and raised his arms. \n\n\"Go!\" \n\nAs soon as the word was out of the judge's mouth, Jason lunged forward, his foot snapped off the floor and straight into his opponent's charging face, his footpad connecting with the other's headgear. \n\n\"Point!\" the three judges shouted in unison. \n\n\"Score!\" \n\nJason smiled as much as his mouthpiece would allow. \n\n\"Two points white, two points white, two points white. Score: two points white!\" \n\nBoth young men bowed to one another, and then shook hands. The head judge moved between them, retrieved the red cloth marker from the other boy's belt and raised Jason's gloved hand. \"Five points white, three points red. Winner: white!\" \n\nThose watching from the bleachers cheered, none of them louder than Janie Collins. \n\nAs with day before, the white belts went first with the black belts competing later. The women's brackets were nearly done, as were some of the men's brackets. Janie finished third in forms and didn't place in sparring. Melissa took third in forms, second in sparring. Sharon was third in forms, and was just beginning the sparring part of her competition. \n\nHis semi-final win put Jason in the final sparring match for first degree black belt division for men aged eighteen to twenty-five. \n\nThe other semi-final match was getting ready to start. He looked over at Janie, Mike and Janet, who all waved. Mike flashed him a thumbs-up, but it was Janie's wink that made his heart race. \n\nJason forced himself to return his attention to the sparring match so he could scout out his potential opponents. \n\nBoth were taller than he, meaning their arms and legs had a greater reach than his. But neither moved as quickly, and it seemed that both were content to range all over the ring, trying to score with their kicks, rather than their hands. \n\nPlus, he had some extra time to rest. \n\nThe winner of the match was a boy named Aaron Byrd, whom Jason knew fairly well. Like a lot of the other regular tournament competitors, they met a handful of times a year and respected each other as fair opponents. \n\nSince Aaron had just finished a sparring match, the head judge declared a five minute rest period. Mike came up to him for what was sure to be either a smart ass remark or some actual constructive coaching. \n\n\"Your arms are twice the speed of his, and he telegraphs his kicks from a mile away. Move in close and you can jam his knee before he can get a kick off. Then block like hell until you can land a hit.\" Mike leaned in so that no one else could hear him. \"And while you were sparring, he spent all that time staring at Janie's ass and trying to look down her jacket at her tits.\" \n\nThen he patted Jason on the shoulder and walked away, clearly knowing which buttons to push. \n\nJason scored the requisite five points in two moves: three points with a jump kick to Aaron's face, and two points with a roundhouse kick that connected with the back of the other boy's head. \n\nHe beamed with pride as he was presented with his two first place trophies, which garnered a visit from Master Robertson, the highest ranking black belt in the region. \n\n\"This puts you in the top twenty for your age bracket. If we can get you to a few more tournaments between now and May, you'll qualify for nationals.\" Master Robertson was as friendly as he was deadly. Short and unassuming, he had started studying taekowondo when he was stationed in Korea. A retired Command Sergeant Major, Master Robertson opened up several branch of taekwondo schools in the central Florida area after he left the Army. He was a shrewd businessman, and was widely respected within the martial arts community. \"We need someone in the Southeast Region to take the title back from that kid in Indianapolis.\" \n\nJason smiled nervously. \"I will see what I can do, Master.\" \n\nMaster Robertson leaned in and patted him on the shoulder. \"If money is the only reason you can't got to nationals, let me know. I'm sure we can find a scholarship for you.\" \n\n\"Thank you, Master Robertson.\" \n\n\"Now I'm going to have to see if I can get you some better competition for the Lake Mary tournament next month.\" Master Robertson laughed and went on to congratulate the next round of winners. \n\n\"We're so proud of you!\" Janie ran up and gave him a big hug. \n\nMike reached out to shake his hand, and others from their school came by to give him a high five or a hug. \n\nIt was late afternoon on Sunday by the time Sharon finished sparring. The van was already packed with things and they all changed in the gym locker rooms. They skipped the closing formalities of the tournament, loaded up their trophies and got back on the road, still facing a three hour drive home. \n\nJason fell asleep in one of the captain's chairs, exhausted from the tournament. \n\n********************* \n\nWhen he awoke, it was dark. He was still sitting upright in the second row captain's chair. The van wasn't moving. \n\nHe blinked back the haze, looking around. It took him a moment to focus in the darkness. There were no streetlights and the van's power was off. The windows were cracked, letting some fresh air circulate. Neither Sharon nor Melissa were around. Janie must have dropped them off earlier. \n\nJanie sat in the chair next to him, leaning back against the headrest. Her eyes were closed. Her breathing regular. \n\nShe looked so beautiful. \n\nHe reached over and gently caressed her cheek. She smiled in her sleep and stirred. \n\nJason jumped slightly when she turned her head and kissed his hand. She suckled on his finger, making his heart race. His cock hardened. \n\nTrembling, he withdrew his hand when Janie started to nibble down to his wrist. \n\n\"Hi,\" she whispered. \n\nHe lost himself in her eyes. Even in the darkness, from the moonlight that shone through the tinted windows, Jason could see her eyes. He had stared into their hazel depths before. \n\nBut never like this. \n\nNever had she stared back at him with the same kind of dough-eyed wonder that seemed to be his usual disposition of late. \n\n\"Hi,\" he managed to return, once the lump in his throat passed. \n\nNeither moved. Neither spoke. \n\nMaybe they were both afraid to break the spell. \n\nHer eyes never left his, but she slowly moved. Jason shifted in his seat as she raised the armrests to the captain's chairs. \n\nHis eyes widened as she leaned in to kiss him. Her lips were so soft. Her body pressed against his. \n\nJanie settled on his lap as she nuzzled up against him. His cock felt like it was going to burst as her rear end settled against it. \n\n\"What\u2014\" \n\n\"Shhhhhh,\" she silenced him with a kiss. \"We'll talk later. Let me do this. . . . Please, Jason . . .\" \n\nAny reply that was forming in his mind was gone the second she took his hand in hers and pressed it against her breast. \n\nThe part of his brain that eschewed reason took over. He pressed his lips against hers. Their tongues intertwined. \n\nJason squeezed the soft, supple breast in his hand through her thin t-shirt. The nipple hardened at his touch. He pinched it through her sports bra, drawing a delighted squeal. \n\nHe leaned in again to kiss her, but was surprised when she pulled away. \n\nShe got down on her knees on the floor of the minivan. Janie's hands tugged at elastic waist on his sweatpants. Jason put up no resistance as she hungrily lifted his hips off the seat just enough to pull this pants and boxers down. \n\nHis cock stuck straight up in the air. \n\nHer hand wrapped around him and he let out a feral moan. \n\n\"Do you like that?\" Janie whispered. \"Do you like me tugging on your cock?\" \n\nHis reply was interrupted when her mouth settled around the head, her lips forming a vacuum-like seal around his tumescent sex. \n\nJason's hand clenched until his knuckles turned white. He had to fight the urge to grab Janie by the hair push her further down on his lap. \n\nInstead, unconsciously thrust his hips up into her mouth. \n\nHe felt her tongue swirling around his head. Along the soft underside. \n\n\"Janie,\" he moaned. \"Oh, god, please . . . please don't . . . don't stop!\" \n\n\"Mmmmmmm,\" she purred, her lips still wrapped around Jason's cock. He heard her take a deep breath, then let out a low, throaty moan as she took his entire length down her throat. \n\nShe choked a little bit as she giggled. Jason felt his toes start to tingle as his friend\u2014and now lover\u2014continued her oral ministrations. \n\nHis fingers dug into her shoulders and she backed off. \n\nAgain and again, she used her mouth to keep his rock-hard cock on the edge of orgasm, stringing him along. \n\nEach time he thought his cock would burst in her mouth, she let him down, then slowly built him back up. \n\nNever once did her hands touch his shaft, balls or head. \n\nHer hair hung down over her face, her curls brushing his thighs. \n\nIn the darkness, his eyes lost focus. Jason sank back into the chair, hovering between the pleasure of Janie's tongue making love to him and the torture of not being able to cum in her mouth. \n\nOn and on she went. Jason lost track of time. \n\nShe never stopped moving. Her lips. Her tongue. Up and down. \n\nAgain and again. \n\nOnce more, she took his entire cock in her mouth, her lips and nose pressing into his pubic hair. \n\nInstinctively, he knew she was about to finish him off. \n\nJanie picked up her pace, but this time did not relent. Her head bobbed up and down in his lap. \n\nFaster. \n\nHarder. \n\nFaster. \n\n\"I'm . . . I'm . . . going to . . .\" \n\nHis voice trailed off when she once again sealed her lips around the head of his cock. He felt her tongue press against the slit on the end of his cock. \n\nJason couldn't help himself and bucked his hips up as he felt his balls constrict. \n\nJanie sucked him in as the head of his cock exploded in her mouth. \n\nHe gasped and rode out the orgasm, which seemed to never end. \n\nThe mouth around his cock kept moving, bringing him down slowly. \n\nShe swallowed with every pulse until there was no more to be had. \n\nWhen his cock went slack, Janie gave his head one more nibble and she pulled back. \n\nJason's eyes were glazed over with pleasure. She sat back and looked up at him expectantly. \n\nHe opened his mouth to speak, but no words came out. \n\nIt took him several minutes to recover. Janie took her seat next to him, her eyes never leaving his. \n\nHer nipples still stuck out under her t-shirt. \n\nAfter several long moments, Jason's heart rate came down. His breathing became regular. \n\nStill he sat in the chair, his sweatpants around his ankles, his cock laying flaccid between his legs. \n\n\"First time?\" Janie whispered. \n\nHe could only nod. \n\n\"Was I good?\" \n\nThe second nod was a little more enthusiastic. \n\n\"Want me to do it again?\" \n\nJason's cock twitched, making Janie giggle like girl half her age. \n\n\"Maybe next time, tiger,\" she snickered. Part of Jason was disappointed that he was going to get \"only\" one blowjob that night. Part of Jason was excited that she was promising him another. \n\nJanie got up out the captains chair and climbed into the driver's seat. Jason's eyes never left her firm, round rear end. It was perfect. \n\nShe reached for the push-start, the engine and dashboard springing to life. Jason pulled his boxers and pants up, and climbed into the passenger's side front seat. \n\nNeither spoke as Janie shifted into drive. Jason looked around and tried to figure out where they were. \n\nMany years before, at the end of the housing bubble, there were scores of unfinished housing and retail developments in the area when the market crashed. Some developers were in the middle of projects, but when credit became hard to obtain, they ran out of cash. So projects were halted, sometimes right in the middle of construction. \n\nEven eight years later, some of the developments remained as they were on the day the crews walked off the job. It took him a couple of minutes, but Jason realised they were just a few miles from his house. \n\nThey had finished the streets, curbs and drains, but no one was paying the bill for the streetlights, and no houses had been started. The grass was high, but someone (probably the city) was maintaining the streets, at least to the point that they were drivable. \n\nAll but forgotten, in that moment, the little sidestreet tucked on the backside of a hill was Jason and Janie's Lover's Lane. \n\nDown past a stop sign and around a corner was a half-completed big box store of some kind; at one time Jason heard it was supposed to be a Target or Home Depot or something like that, but all that had been completed was the foundation, four cinderblock walls and the rusting metal frame for a roof. \n\nTurning on to one of the main roads, Janie reached over and took his hand. \n\nTheir fingers intertwined for the remainder of the drive. \n\nWith a heavy sigh, she pulled into the driveway of his house behind his beat-up old Toyota Corolla. The inside lights were out. His parents were probably still awake, but watching TV in the back bedroom. It was past his little sister's bedtime. \n\n\"Janie . . . what . . .\" \n\n\"Not now,\" she whispered. \"We'll talk about it later. Are you going to the early class on Tuesday?\" \n\n\"Yes.\" \n\n\"Good, the kids will be at their dad's all week. We'll talk then.\" \n\n\"Okay.\" His head was swimming. With confusion. With desire. With love. \n\nThere was so much he wanted to say. So many things he wanted to ask. But he didn't know where to start. \n\nHis duffel, sleeping bag and sparring bag were in the space between the back seats. He reached back for them and opened the door. \n\nTurning once again, his eyes caught Janie's. She smiled tenderly. \n\nHe started to say something, but the words failed him. \n\n\"Say, 'Thank you, Janie'.\" \n\n\"Thank you, Janie.\" \n\nShe winked. \"You're welcome, sweetheart.\" \n\nJason got out of the minivan and stood dumbly in the driveway as she backed out into the street and drove off. \n\n********************* \n\nThe next two days were torture on him. He went to class and work at the university. The adult taekwondo class on Monday night was late, and Janie wasn't in it. \n\nJason and the others who attended the tournament were recognised for their participation and lauded for placing in the competition. \n\nWhen he pulled into the parking lot for the Tuesday night class, his heart skipped a beat when he saw Janie's minivan. He pulled in the space next to hers. The sparring class seemed to drag on forever. \n\nHe spent most of it getting pounded by Sharon and Mark, another first degree who was almost ready to test for his second degree black belt. \n\nJanie didn't seem like she was ignoring him, but nor did she go out of her way to be friendly, which was something of a disappointment. ",
        "After they were dismissed, Jason was talking with Mike as Janie brushed by him with a wink. She was out the door before he could say anything to her, but after a moment, his phone buzzed. \n\nMeet me at the Circle K at 31<sup>st</sup> and Lee the text message read. \n\nHis heart racing, Jason quickly changed into shorts and a t-shirt, then got in his car and drove off, wondering what the night had in store for him. \n\nJanie's van was in the parking lot, the driver's window down. When he pulled in next to her, she looked up from her cell phone and smiled at him. \n\n\"Can you stay out for a while tonight?\" she asked. That made his pulse race. \n\n\"How late?\" he replied coyly. \n\nShe took a deep breath and looked away, clearly nervous. \"I don't know.\" \n\nThey sat in their cars for a long moment. \n\n\"I'll tell my folks I'm staying with Cody tonight.\" \n\nThat made Janie smile weakly. \"Follow me. Park in the garage.\" \n\nShe started up her van and drove off, careful not to lead him by too much. The drive to one of the nice upscale neighborhoods in suburban Orlando took about ten minutes. Jason knew generally where she lived, but had never been to her house. She pulled into a nice single-story home with a stucco and brick fa\u00e7ade. The two-car garage was around the side and there was easily space for both of their cars. \n\nAs soon as the ignitions were off, Janie remotely closed the garage door. \n\nJason got out of his car and followed her swaying hips into the kitchen. The house was big and spacious. She was a nurse anesthetist at a successful cosmetic surgery practice and was smart with her money. Janie was divorced before Jason met her, although she didn't speak much about her ex-husband except to say that he wasn't hurting for money. When her kids were still doing taekwondo, Jason saw him at their belt testings, but they never spoke. \n\nShe dropped the bag containing her sparring gear on the floor just inside the utility room next to the washing machine. Unsure of what was going to happen next, Jason shifted uncomfortably. \n\n\"Can I get you something to drink?\" Janie fetched a pair of glasses out of the cabinet. \n\n\"Um, no thanks,\" he stammered. \n\nJanie shrugged, set one of the glasses on the counter and poured some cold water out of the dispenser on the door of the refrigerator. \n\nAfter emptying it, she turned and walked towards Jason like a lioness stalking her prey. \n\nHis feet wouldn't move. \n\nShe stepped into his arms and rested her head against his shoulder. Even sweaty and dirty from the sparring class, her hair smelled sweet. \n\nJason could hear his heart pounding in his chest. \n\nFinally, she pulled back. They stared into one another's eyes, the moments ticking by. \n\n\"Kiss me,\" she whispered. \n\nFrozen, he couldn't move. \n\nJanie perched herself up on the balls of her feet, her nose almost touching Jason's. \n\n\"Kiss me.\" \n\nThe command in her voice set him in motion, his lips pressing against hers. He felt faint, but steadied himself against the counter. \n\nJason brushed the hair out of Janie's face as she bit gently on his lip. Her skin felt so soft. His hands were shaking. \n\nShe pulled away, then took him by the arm and led him to the living room. Only the light in the kitchen was on. \n\nJanie pushed him back into the plush couch, then straddled his lap, facing him. His arms wrapped around her waist. \n\nThey kissed again, hungrily. \n\nHer hands cupped his face. Her lips danced along his mouth. His chin. His ears. \n\nPulling her close, he began to nibble down her neck. She threw her head back with a moan when his teeth raked her collarbone. \n\n\"Mmmmmmm,\" she purred. \"That was nice.\" \n\n\"What are we doing?\" he asked, as much to himself as to her. \n\nWith a sigh, Janie fell into Jason's arms. He was afraid to press the matter for fear of losing whatever it was that was going on. \n\n\"Jason . . . I'm sorry,\" she whispered. \n\n\"For what?\" \n\n\"For . . . for this . . . I don't know.\" There was fear in her voice. Her hand went to his face, tracing a line from the corner of his eye down his jawline and under his chin, leaving a trail of goosebumps. \n\nShe snuggled up against his neck. Instinctively, he wrapped his arms around her. \n\n\"It's been so long,\" Janie said softly. \"So long since I've felt . . . like I felt the other night. After you fell asleep, you rolled over on top of me. And that big, hard cock of yours was sticking me right in the leg.\" \n\nJason flushed with embarrassment. \"I'm sorry. I\u2014\" \n\n\"You were asleep. I don't think you could help it!\" Janie snickered. \"But I wanted to strip you down and fuck you senseless right there.\" \n\nHis eyes got wide; it was the first time he had ever heard Janie use the word \"fuck\". Or curse anything worse than \"hell\" or \"damn\". \n\n\"I've wanted you for so long.\" The fear crept back into her voice. \"You didn't know that, did you? You've become quite a handsome young man.\" \n\n\"What are you talking about?\" \n\n\"Jason, this is wholly inappropriate of me.\" She pulled back and moved off his lap so she was sitting on the couch next to him. \"I'm thirty-three with two kids. You're just barely eighteen and all I can think about is how much I want you to take me back into my bedroom and fuck my brains out.\" \n\nParalysed, Jason could neither speak nor move. \n\n\"I've lost my goddam mind,\" she muttered and started to shake. \n\nSomehow, he found the strength to reach out and wipe the tear from her eye. \n\n\"I've been in love with you since the day we met,\" Jason blurted out. \n\n\"Is that why you let me beat up on you?\" \n\n\"Yes,\" he looked away. \"I just wanted you to touch me, even if it was to kick me in the head.\" \n\nBoth of them laughed nervously. \n\n\"So why . . . why now?\" \n\n\"Because when I was thirty and you were fifteen, that would have been creepy. And illegal.\" Janie took a deep breath. \"I see the way you look at me. I can feel it when you touch me, even if we're just doing stretches or sparring. Last April, when you were getting ready for prom, I saw the pictures you put up on Facebook of you and Jenny. And I wanted to rip that little tramp's heart out because she was going out with my guy.\" \n\nJason's heart skipped a beat. \n\n\"I don't know what the hell is wrong with me,\" she continued. \"My daughter is closer to your age than I am . . . but no one makes me feel as special as you do. I don't think you're just lusting after me, and I don't think you're after me for my money or my house.\" \n\n\"But I do lust after you,\" Jason said softly. He reached over and took her hands. \"I don't care about anything else. I just want you to be close to me.\" \n\n\"What do you want?\" she dared to ask. \n\nHe tugged at her hands and pulled her close, so their noses brushed. He could feel her breath on his lips. \n\n\"I want . . . I want to kiss you. Every inch of your body,\" he breathed, once again losing himself in her gaze. \"I want to suck on your breasts forever . . .\" \n\n\"There's probably no delicate way to me to put this,\" she continued when the words failed him. \"But I want you to eat me . . . I want you to eat my pussy until I cum . . . And then I want you to make love to me.\" \n\n\"I want to fall asleep inside you.\" Jason closed his eyes and leaned forward, pressing his forehead against hers. \"I want to wake up with you in my arms. And then I want to do you all over again.\" \n\nHer lips brushed his, tentatively at first. Then harder on the next pass. His cock was hard as she began to grind against him. \n\n\"Give me your hands,\" she whispered. \"Do you like that, Jason? Do you like my breasts?\" \n\nTrembling, he caressed her covered bosom. \n\n\"Pinch them, sweetheart. Make them hard and then\u2014oh! Just like that!\" \n\n\"Can I . . . Can I kiss them?\" \n\n\"Yes . . . yes, you can,\" Janie covered is face in soft kisses. \"I am all yours, Jason. Every part of me. Anything you want.\" \n\n\"I want you, Janie,\" he gasped. \"I want you more than anything in the world.\" \n\n\"Are you a virgin, Jason?\" \n\nHis blush only confirmed her question. \n\n\"Then I am going to rock your world, young man.\" \n\nJason interrupted her kiss by scooting forward on the couch and standing up. She wrapped her legs around his waist. \n\nAs she kissed him, Jason's hands cupped the perfect globes of her ass. He easily maneuvered her through the house to the big bedroom. The curtains were open and the room filled with moonlight. \n\nHe set her down on the edge of the bed and they continued to explore one another. She tugged at his t-shirt and pulled away only long enough to pull it over his head, then threw it onto the floor. \n\nJanie's hands ran over his muscular chest and arms. Her featherlight touch made his skin crawl. She kissed him gently, down his neck. To across his collarbone. \n\nJason started when she put her hands inside the elastic waistband of his shorts. His cock sprang to life when she pushed his shorts down to the floor and cupped his rear end, pulling him to her. The head brushed against her covered belly, and he thought he might shoot off. \n\nAs he stood there naked, Janie pulled back and admired his form. Her eyes blazed with desire and lust. \n\nHe leaned in, but was surprised when she pushed him back a step. \n\nSetting her feet on the floor, she stepped into his arms. Her eyes barely came up to his shoulder. She caressed him everywhere. \n\nEverywhere except his rock-hard cock that was sticking straight out at her. \n\n\"Undress me,\" she whispered. \n\nIn an instant, he pulled the t-shirt over her head. His fumbling hands took a long moment to untie the knot on the drawstring holding her uniform pants up, but the fell to the floor soon enough. \n\n\"Touch them,\" Janie's voice was a throaty moan. \n\nHer breasts weren't big, but as far as Jason was concerned they were perfect. Just like the rest of her. \n\nWith almost reverence, Jason lifted the sports bra up over her breasts. She raised her arms until it was off to join his clothes on the floor. \n\nJanie bit her lip as Jason rolled her nipples between his index finger and thumb. She had a little bit of sag, but her chest was still perky for a woman of thirty-three. \n\nHe leaned over and felt her nails dig into his scalp when he took one of her nipples in his mouth. \n\nShe thrust her chest forward, as if to push the entire tit into his mouth. \n\nHis hand cupped the breast that wasn't in his mouth. \n\n\"Careful!\" she giggled when he bit down just a bit too enthusiastically. \n\n\"Sorry,\" Jason smiled feebly. \n\n\"It's okay,\" Janie laughed, pulling her lover to her. \"Take my panties off. Now get on the bed.\" \n\nJason pulled the covers down and lay in the center of the queen-sized mattress. He watched her move around the room, his eyes devouring each bounce of her breasts. Each jiggle of her butt. Each flash of her neatly trimmed pussy. \n\nShe lit a couple of vanilla-scented candles and set them on the nightstand and dresser. Drawing the curtains, the candles bathed her in a soft, warm glow. \n\nJanie climbed up into the bed and lay down next to Jason. The touch of her body was electric. She settled into the crook of his arm and rested her head against his shoulder. \n\n\"I know this probably isn't the best circumstance to ask this, but is this what you want?\" Her voice trembled, as if she was afraid of the answer. \n\n\"Yes . . . yes, it is, Janie.\" \n\n\"I'm old enough to be your mother.\" \n\n\"Reminding me of that when we're both naked doesn't help.\" \n\n\"I suppose not,\" she giggled. \n\nJanie propped herself up on her side and ran her fingers across his chest. \n\n\"I want you to make love to me, Jason. Right. Now. We can figure out the rest later.\" \n\n\"No, we can't,\" Jason said softly. \n\n\"What do you mean?\" \n\n\"After the other night, we can't be friends anymore.\" There was wisdom beyond his years in his voice. \n\n\"I know,\" she whispered. Leaning over, Janie planted a hard sloppy kiss on his lips. Their tongues intertwined. She caressed his face. \"I don't care. I just know I want you.\" \n\nAny reply he thought to give was gone in that instant. His overpowering desire, teenage hormones and blood-engorged cock took control of his actions. \n\nPulling her on top of him, Jason began to grasp eagerly at Janie's willing body. \n\n\"Touch me . . . right there ... Can you feel that? I'm a fucking swamp down there, Jason. I need you inside me . . . please . . .\" Her voice was a plaintive moan. \"Please let me take you inside me . . .\" \n\nHe started to roll her over, but Janie pushed him back into the bed. \"I want to do it.\" \n\nHypnotised by her beauty, all Jason could do was watch as Janie mounted him. Her body was slim and perfectly toned. \n\nHer curly hair hung down, framing her slender cheekbones, wry smile and eyes that were hooded over with pleasure. \n\nWith one hand, she stroked his cock until it was engorged beyond anything he had ever felt. \n\nBoth of them gasped when she began to rub the head of his cock against her swollen labia. \n\n\"Last chance to back out.\" Their eyes met. \n\n\"We passed that a couple of days ago,\" he said softly. \n\nJanie closed her eyes and lowered herself down on to him. Her sex was so wet, Jason's cock met virtually no resistance. \n\nEver so slowly, as if savoring the first entry of her lover into her pussy, Janie settled on his length. \n\nHis hands reflexively went her hips, to that spot right at the bend near the top of her thighs. \n\nFinally, he bottomed out. \n\n\"Oh, god, you're so deep inside me,\" Janie gasped. \n\n\"I can't believe you're letting me do this.\" \n\nJanie looked down at him. Her nipples were rock hard. A thin sheen of sweat covered her brow. She smiled. \n\nThat mischievous smile that was tinged with tenderness and desire and anticipation. \n\n\"Sweetheart, we are never giving this up.\" \n\nHe thrust upwards, but there was no further he could go. \n\n\"Let me do it.\" Janie bent over, so her breasts hung in his face. \"Suck on them. That's it, baby . . . just like that . . .gentle, gentle . . . Mmmmm . . . somebody likes titties.\" \n\n\"I like your titties.\" \n\nThe both snickered, finding a little bit of relief from the sexual tension. \n\n\"I told you before, Jason: they're all yours. Touch them, suck on them, put that big, hard cock between them . . . oh, someone likes that idea! \n\nShe kissed him again and nibbled her way down to his ear. \n\n\"But not before you cum inside me,\" she whispered, and she started to grind her hips against him. \n\nJason cried out, hoping beyond hope that his first sexual encounter would last more than a few minutes. \n\nHer gyrations came faster, each pass of her hips matching a bite to his earlobe or suckle on his neck. \n\n\"Don't fight it, Jason . . . Cum all over me . . . that's what I want . . . fill my pussy with your cum!\" \n\nJanie lifted her hips up until only the head of his cock was inside her, then brought herself down in one swift motion. \n\nA tingling started in his toes. \n\nShe did it again. \n\n\"Cum for me!\" \n\nAgain. \n\nShe raised her self up one more time then threw her head back as she dropped on to his cock. \n\nThe room started to spin. \n\nJason's orgasm left a flood of cum inside his lover as his cock pulsed and pulsed. \n\nJanie collapsed into his arms, her hips still moving, each pass a little shorter than the last. \n\nBlood pounded through his veins. He felt faint. \n\n\"I love you.\" \n\nAnd then he passed out. \n\n********************* \n\nJason's eyes fluttered open. Janie's weight was pressing down on his hips. \n\nHis cock was still inside her as she rode him. \n\nHer hands clutched at her breasts, pinching the nipples indulgently. \n\nA contented smile was on her lips. \n\nShe was so beautiful. \n\nHe could see her biting her lip as his semi-flaccid cock hardened at the sight of his lover. \n\nThe woman to whom he had given his virginity. A woman who was in high school when he was born. The woman who had stolen his heart. \n\nJanie took a deep breath. As she exhaled, she shuddered and collapsed on to him, her head resting on his chest. \n\nHe raised his arms feebly and held her close, their naked bodies warming one another. \n\nJason would have been content to lay there all night. Her hair tickled his chest. His cock was still nestled inside the soaked confines of her pussy. \n\n\"Don't move,\" she whispered. \"Just hold me.\" \n\nKissing the top of her head, Jason wrapped his arms around her, savoring the feel of his lover. \n\nIt wasn't until his spent cock slipped out of her that either of them spoke. \n\n\"How was it?\" \n\n\"You were . . .wonderful,\" Jason replied. \"I . . . I love you.\" \n\nJanie raised her head, and looked into his eyes. Her smile was warm. And bittersweet. And knowing. \n\n\"You don't have to say that just because we made love, Jason,\" she said. \n\n\"But I do,\" he stammered. \n\n\"No, you don't,\" she put her finger to his lips to keep him from saying more. \"You might . . . one day. But today . . . today we're lovers. Don't get me wrong. I like you, Jason. I have wanted you for a long time. And I can see myself falling for you. A part of me already has . . .\" \n\nShe looked away as her voice trailed off. \n\n\"I don't want to be a hook-up for you,\" she continued. \"And I don't want to use you, either. But we're a long way from being in love.\" \n\n\"Why?\" Jason asked softly. \n\n\"Because you're eighteen and I'm thirty-three. Because I've got two kids, an ex-husband and enough baggage to fill an airport carousel.\" She looked him in the eyes. \"Because you've got your whole life ahead of you, and eighteen is way too young for you to settle down with someone like me.\" \n\n\"I don't want someone like you,\" Jason said, unable to keep the twinge of anger and hurt out of his voice. \"I want you.\" \n\n\"I know you do,\" she looked way again. \"And that's why I feel like I'm using you. For my own wants. I want you, Jason. I want every inch of your handsome body. I love the way you look at me. The way you touch me . . . the way you hold me . . .\" \n\n\"Then what's the problem?\" he asked. \n\n\"What will I do when you get tired of me?\" The fear in her voice was nearly overpowering. She started to shake and Jason pulled her close. \n\n\"I will never get tired of you,\" he vowed. \n\n\"You're only saying that because you were just inside me.\" \n\n\"So you're just using me for the sex? Because if you are, I'm okay with that,\" Jason tried to inject a little bit of humour into the otherwise maudlin conversation. \n\n\"When you put it that way . . .\" Janie leaned in and kissed him gently. \"I know that since you were sixteen, you have treated me better than any man in the world. When you entered me, I felt . . . I felt young again.\" \n\n\"So what\u2014?\" \n\n\"Not now,\" she stopped him again. \"Jason, I don't expect you to understand, and I wouldn't blame you if you hated me . . . but I don't want to think about 'us' or about the future or about anything other than being in this moment. Right now . . . just like this.\" \n\n\"Okay,\" he replied, unsure of how to respond. \"What do you mean?\" \n\n\"Jason, from the time we got out of class until the moment we began to make love, what were you thinking?\" \n\nAn awkward silence fell over the pair. \n\n\"About how beautiful you are.\" Jason's voice was so soft to almost be inaudible. \n\n\"You're full of shit,\" Janie pulled back and looked him in the eyes again. \"You were thinking about the handjob I gave you on Friday night and the blowjob you got on Sunday.\" \n\nHe blushed, but she was right. \n\n\"When I invited you over here, did you think to make any preparations?\" \n\n\"What do you mean?\" \n\n\"Did you put a condom on before you entered me?\" \n\nJason's eyes darted around, panicking. His heart rate shot through the roof. \n\n\"Oh, my god! Can you . . . um, can we . . . did you . . .\" \n\nJanie only giggled, and stroked his hair to calm him. \"No, we didn't just make a baby tonight. I've got an IUD in. But did you think that I might have herpes or HIV or something?\" ",
        "\"No,\" he said softly. \n\n\"Jason, look at me,\" Janie drew his eyes up to hers. \"You're thinking with your balls, and that's okay. You're eighteen, and that's what you guys do. That's how I know you only think you love me. And that's why I feel like I robbed the cradle tonight.\" \n\n\"So what are we doing?\" \n\n\"If you want to leave right now and be pissed off at me . . . well, I wouldn't blame you. If you want to be with me, then we can fuck day and night when my kids aren't here. \" There was fear in her eyes again. \"Either way, I've destroyed our friendship.\" \n\n\"No, you haven't,\" Jason took a deep breath, growing up a little bit more as he spoke the words. \"I had a choice, too, Janie. I came over here. I made love to you. I'm still here, even though you're trying to push me away. Don't give me that look; you're trying to give me an excuse to bail. I don't know what's in the future for us, but I want more than just being your fuck date. And the only way you're going to destroy our friendship is for you to kick me out right now and never speak to me again.\" \n\nJanie tried to formulate a response, but no words came. Instead, she lay down next to Jason, falling into the comfort of his arms. \n\nThey held one another for a long time, each lost to their thoughts. Jason absently ran his fingertips over the soft skin of her shoulders. \n\nSuddenly, Janie erupted into giggling. \"You smell like sweaty sparring pads!\" \n\nJason dug his fingers in her ribs and found out that she was ticklish. \n\n\"Then we'd better get cleaned up!\" \n\n\"Why? You're just going to make me dirty again!\" \n\nShe gave out a surprised yelp as he swung his legs off the bed and scooped her up in his strong arms with one motion. \n\n\"You're damn right I am!\" \n\nWith that, he carried her into the bathroom and began a nice, hot bath. After soaking in the tub, they dried off and didn't bother to dress. \n\nReturning to the bed, they made love again. And again. And again. Until neither of them could move. \n\n********************* \n\nAt first, he thought it was a dream. \n\nAfter passing from sleep to wakefulness, he realised that Janie Collins was really sucking his cock. \n\nJason melted into the bed as her head bobbed up and down on his lap. \n\nHe heard soft slurping noises as Janie made love to him with her mouth. \n\nIf he could have moved, he would have swung one of her legs over him, so he could take her pussy in his mouth, but she had her weight across his body. He settled for groping her naked rear end as she went to town on him. \n\nSoon enough, Jason's toes curled up and he started to cum. She milked him with her hand, even as her mouth drank down his spunk. \n\nWhen he was finished, she sat back, turned over her shoulder and smiled. \n\n\"Good morning,\" Janie snuggled up and kissed him. \"I was wondering how long it would take to get you up.\" \n\n\"What time is it?\" \n\n\"A quarter after six,\" she said ruefully. \"I have to get up and go to work.\" \n\n\"Can't you call off and sleep in with me?\" he pulled her close to him, only half-joking. \n\n\"I can call off, but you're not missing school for me.\" \n\n\"It's only one class,\" he pouted. \n\n\"Jason, I'm serious about his,\" she brought out her \"mommy\" voice, even though she probably didn't mean to. \"There will be no skipping school over 'us'. I will not be the reason why you get bad grades.\" \n\n\"So what do I get for good grades?\" he asked incredulously. \n\n\"All the pussy you can handle,\" Janie replied seductively. \n\n\"Weren't you going to give that to me anyway?\" The playfulness returned to his voice. \n\n\"Only if you keep your grades up,\" she shot back. Janie kissed him again. \"When do you get out of class today?\" \n\n\"Two-thirty,\" Jason pulled her to him and took the opportunity to grope her shapely backside. \"But I have to work until six.\" \n\n\"Do you want to get something for dinner?\" \n\n\"Shouldn't I be the one asking you out?\" Although a part of him was teasing, another part was serious. \n\n\"I think we're past that.\" Janie rolled out of the bed, sauntering past the candles that had burned themselves out the night before and into the bathroom. \n\nJason followed her in as she started the shower. He was disappointed that there was no more action that morning, but the promise of a dinner date more than made up for it. \n\nHe left Janie's and returned to his house. His parents had already gone to work and his sister was at school. With no one else around, Jason masturbated to lurid thoughts of Janie Collins. He changed and went to his classes, then work at the rec center. \n\nIn the locker room at the gym, Jason received a text message from Janie. \n\nWhat do you want for dinner? \n\nYou, was his simple reply. \n\nThen hurry up and get over here. \n\nThe garage door was up and he parked next to Janie's minivan again. He pressed the button to close the door and went in to the kitchen. \n\n\"You're late,\" Janie admonished him from the living room. \"I started without you.\" \n\nJason stopped in his tracks as his eyes fell on to Janie. She lay splayed out on the couch. Naked. \n\nOne hand clutched one of her breasts, while the other diddled between her legs. \n\n\"Take your shorts off.\" Her eyes were hooded over with pleasure. \"Take that cock out for me. . . . Now stroke it . . . yes, just like that.\" \n\nHe was hard in an instant. \n\nJanie's fingers moved fast and faster. \n\nShe started to buck her hips into her hand. Jason moved in the same rhythm, his cock seemingly harder than it ever had been. \n\n\"You're so beautiful,\" Jason whispered as he watched his lover pleasure herself. \n\nHe wanted to rush over and take her, but his feet would not move. \n\nJanie began to buck her hips, and she let out a soft moan. \n\nIt seemed that she was going to rub herself raw. \n\nAs he watched, Jason stroked himself faster and faster. \n\nHis breaths came in short spurts. \n\nBoth of them cried out together. \n\n\"Don't cum . . . don't cum, yet,\" Janie pleaded, her voice a plaintive moan. \n\nShe clenched her teeth and her body started her jerk uncontrollably. \n\n\"I'm cumming!\" she gasped, and Jason didn't know how much longer he could hold off. \n\nHypnotized, Jason watched as Janie violently masturbated herself to orgasm, all the while barely able to contain himself. \n\nAfter her initial climax, she slowly let herself down, until she lay shivering on the couch, her toes quivering. \n\n\"Cum on me,\" she whispered, her eyelids hooded over with pleasure. \"Cum on my chest.\" \n\nThat was all Jason needed to hear. He lurched forward and pointed his cock at Janie's breasts. He moaned through clenched teeth. \n\nIt only took a couple of strokes for him to orgasm. \n\nSpurts of cum shot out, landing on Janie's belly and chest. Staggering on his feet, Jason fell on to the couch next to Janie. \n\nIndulgently, she rubbed his cum into her skin, first around her nipples and then up around her neck. \n\nBoth of them gasped for breath. \n\n\"You feel so warm on me,\" she said finally, a contented smile on her lips. \n\nJason lay back, his eyes devouring the lithe form that lay out before him. \n\n\"Next time, I'll let you tittyfuck me,\" Janie promised, flashing the smile that melted Jason's heart. Her hands ran up and down her body, knowing she had Jason right where she wanted him. \"Now you're going to take me out for dinner.\" \n\n\"But I don't\u2014\" \n\n\"Don't worry about that either,\" she said in a way that wasn't dismissive, but nor was she going to accept any excuses or argument. \n\nJanie gracefully rolled off the couch. She sauntered off towards her bedroom, a little extra swing in her hips. Jason watched her backside, wondering what had just happened. \n\nHe realised he was not in control of their relationship. Janie was. He wasn't sure how he felt about that just then. \n\nNone of that really made a difference. He was hypnotised by her swaying backside. The bounce in her breasts. Her wry smile. Her soft, curly locks. \n\nAnd the warmth of her touch. \n\nThe shower was running, and Jason slipped under the warm water, pressing his body against Janie. \n\nWithout speaking, they washed each other off. Their hands lingered on one another. Her touch was gentle. Carefree. \n\n\"What do you want to eat?\" Janie asked as they dried off. \n\n\"You.\" Jason scooped her up in his arms and carried her to the bedroom, the notion of going out leaving them both. \n\nThey took a break about an hour later when the pizza delivery guy showed up, then went right back to bed. \n\n********************* \n\n\"So who is she?\" \n\n\"What the hell are you talking about?\" Jason shrugged Cody's question off. \n\n\"Who's the chick you're banging?\" \n\nHe didn't say anything, which only egged his friend on. \n\n\"You didn't come over all last week. Heather and I even had sex in your spot on the couch because you've been so scarce. Either you're working a third job or you're getting some pussy on the side, because I know you're not staying at your house.\"  \n\nJason blushed, but didn't say anything. \n\nSeeing that he wasn't going to coax it out of his friend right then, Cody clapped his friend on the shoulder. \"Well, whoever she is, I'll bet she's sore today.\" \n\nTheir conversation turned to sports and other inconsequential stuff. The week after the Boca Raton tournament, Jason was with Janie pretty much whenever he wasn't at work or school. He went by his house a couple of times to reassure his parents that he wasn't dead or off doing drugs somewhere, but they mostly left him alone anyway, wrapped up in their own lives and drama. \n\nOn Sunday afternoon, Janie made him leave, at least for a while. \n\n\"My kids are coming back from their dad's,\" she explained apologetically. \"I can't . . . I mean . . . I don't want to have to explain you to them . . . not right now. I'm sorry.\" \n\nJason understood. At least he thought he did. He wasn't sure about how to explain their relationship to anyone, too. \n\nWhen they were at taekwondo class, he wanted to reach out and take her hand. Or drive there together. Or proclaim his eternal love for her. \n\nBut neither of them was ready for that. Not yet. \n\n\"I'll make it up to you,\" she promised meekly. \n\nSo the next week seemed like it was the longest in his life. They exchanged texts frequently. Most were playful. A few were risqu\u00e9. He stayed at Cody and Heather's a couple of nights, and moped around at home the rest of the time. \n\nJason knew Janie's kids would be leaving on Sunday night, but she didn't invite him over after work. \n\nOn Monday afternoon, as he and Cody were sitting in the student center, he received a text. \n\nMeet me for drinks tonight after 9. Come alone. \n\nJason's heart raced. The next text message was the address was one of the dive bars near campus. It was one of the nicer places frequented by upperclassmen and graduate students. \n\nHe skipped the adult black belt class and drove to the bar early. Things were slow on a Monday, but it was Ladies' Night, and things were just starting to pick up when he arrived. \n\nWalking through the door, he saw some people playing pool and darts, the Monday Night Football game was nearing the end of the first quarter, and there was a small group near one end of the bar. \n\nMuch to his surprise, Janie and Sharon were at the center of the crowd. \n\nSharon wore a casual blouse and skirt, but Janie was dressed to kill. \n\nHer hair was pulled back into a tight bun. She had on too much makeup and a low-cut, V-neck sweater that showed off a lot of skin, and jeans that were so tight, you could probably read her lips. \n\nThe crowd of men that was gathered around them seemed to be gravitating to Janie, who had a full glass of wine in her hand, and by the look of things, she certainly hadn't paid for it. \n\nA twinge of jealousy started in the pit of Jason's stomach, and it was all he could do not to rush into the crowd and rip all of their fucking throats out. What gave him pause was that Janie was speaking a strange language and Sharon seemed to be translating. \n\nHe stood by the door for a moment, trying to figure out what the girls were up to. \n\nAnd then it hit him: Sharon knew! \n\nWith no choice, Jason squelched the panic when Janie saw him from across the room. She flashed him a wink and an amused smile. \n\nSharon also saw him and she waved him over. \n\nJason had to push his way past a couple of the guys, and much to their annoyance, Janie's attention seemed to be solely on him. \n\n\"Privet. Menya zovut Svetlana . Vy posmotrite, kak u vas yest' gigantskiy chlen.\" The words rolled off Janie's tongue seamlessly. \n\n\"This is the friend I was telling you about,\" Sharon said before Jason could say anything. There was laughter in her eyes. \"Her name is Svetlana. She thinks you're very handsome.\" \n\n\"Ya khochu vzyat' tebya domoy i zanimat'sya s toboy seksom.\" \n\nSharon almost broke character and giggled. \"Svetlana says you look like a nice American boy.\" \n\n\"I . . . uh, it's nice to meet you.\" \n\n\"Chto on stesnyayetsya segodnya vecherom,\" Sharon made it look like she was translating for Jason to those around them. Many of the guys had sauntered off, seeing that \"Svetlana's\" attention had settled on someone else. \n\n\"Da. Ya vizhu, chto.\" \"Svetlana\" smiled sweetly. \"Davayte razdevat' yego.\" \n\n\"You're killing me,\" Sharon snickered under her breath. \"Svetlana would like to know if you would like to have a drink with us.\" \n\n\"Um . . . I'd love to.\" \n\nJanie slipped her arm into Jason's and they made their way to the relative privacy of a booth on the far side of the room. \n\n\"So, uh, what's this about?\" Jason was confused. He had a fake ID, but drinking probably wasn't a good idea under the circumstances. Especially since it looked like Janie wasn't on her first glass and he was driving. \n\n\"I think she just wanted to mess with some frat guys,\" Sharon said a few words to \"Svetlana\", who answered in turn. \"See those ATO guys over there. One of them came on to her really strong. She led him on for a while and got him to buy her a couple of drinks.\" \n\nJanie smiled innocently. \n\n\"What story did you concoct for this?\" Jason jumped slightly as Janie's hand snaked its way up his thigh. \n\n\"She's a graduate student from Russia,\" Sharon waved one of the servers over and ordered a couple of appetizers, plus drinks for herself and Janie. Jason stuck with a Coke. \"Out looking to have a good time with some young American college boys.\" \n\n\"So . . . you . . . uh, you know, huh?\" \n\nSharon snorted dismissively. \"You two were making eyes at each other all last week. The only way you could have been more obvious was if you kissed her in the middle of the Thursday night class. Besides, I thought I saw her giving you a handjob in bed the other night, so I called her on it. And you're both bad at lying and deception.\" \n\n\"Vy nakhodites' gryaznoy sukoy,\" Svetlana said, her tone somewhere between mocking and a taunt. \n\nThe two women laughed. \n\n\"So what language are you using to talk about me?\" \n\n\"I learned Russian in the Air Force and spent three years in Germany listening to Russian military radio broadcasts,\" Sharon replied, making room for the drinks and light appetizers which just arrived. \"I understand it and can read better than I can speak it. Svetlana over there is almost native-speaker level fluent.\" \n\nJason's eyebrow shot up. Svetlana said something. \n\n\"She'll tell you about it later.\" They sat around the table, making small talk, munching on the food, Sharon pretending to translate for Svetlana, Jason trying to figure out what was going on. \"She says now you need to dance with her. She wants all of these other assholes to be jealous of you.\" \n\nWithout another word, Svetlana took him by the hand and led him over to the small dance floor in the middle of the bar. \n\nJanie made a big show out of running her hands all over him. Jason glanced around nervously and saw the looks of the other men in the bar. Most were somewhere between oogling and envy, but none made any move to cut in or disrupt them. \n\nJust to see how she'd react, Jason reached around and cupped her perfect rear end. She let out a surprised\u2014but delighted\u2014yelp. \n\nHer lips sucked on his ear lobe. \"Davayte idti yebut.\" \n\nEven though he didn't speak a lick of Russian, Jason knew what it meant. \n\nThe room fell silent when Janie pulled back, wrapped her arms around his neck and then stuck her tongue down Jason's throat. He staggered back a step, then blushed a bright shade of red. His ears burned with embarrassment and lust. Still, Jason didn't pull away, and kissed her hard, in full view of everyone in the bar. \n\nAfter a moment, Janie released him with a wink. \n\nHis arm still around her waist, Jason led Janie back to the table where Sharon watched them with a grin. \n\n\"I think someone's ready to go,\" Sharon's eyes danced with amusement. And a touch of envy. \n\nJanie reached into her purse and left some cash on the table. \n\nThe three of them got up and left. All the while, Jason was aware that every guy in the place was watching the swaying rear end of the hottest MILF around. \n\nThat's right, motherfuckers, Jason thought to himself, his shit-eating grin from ear to ear. She's leaving with me. \n\nThey walked over to Sharon's car and Janie retrieved a duffel bag out of the trunk. \n\n\"Thank you for doing this for me,\" Janie said, reverting back to English now that she was out of earshot of anyone inside. \n\n\"You're welcome,\" Sharon replied. \n\n\"Just please . . . please, don't tell anyone about us. Not yet.\" \n\n\"I won't,\" the other woman replied. \"But like I said before, you two are bad at keeping secrets.\" \n\nThey got in Jason's car. He felt bad for making her ride around in his old used Corolla. It was a far cry from the new fully-loaded minivan she drove. \n\n\"Are your friends home?\" Janie wrapped herself around Jason's arm as he started the engine. \n\n\"Probably,\" Jason replied. \n\n\"Let's go there.\" \n\n\"Your place is nicer.\" \n\n\"I just want to see what it's like to get picked up by a college guy,\" Janie laughed. \n\n\"Okay, I . . . uh, I guess.\" \n\nAs he drove, Janie ran her hands all over him, eventually settling on the bulge in his pants. At a red light, she stuck her tongue in his ear. \"You're going to fuck my brains out with this thing tonight, sweetheart.\" \n\nWhen they pulled into Cody and Heather's apartment complex, Jason saw the lights in the main room were out, but there was a soft light on in the big bedroom. They were probably there. \n\nAnd fucking. \n\nJason let himself in with the spare key, and as soon as they were through the door, Janie was all over him. \n\nShe tasted of wine and desire. \n\nThrough the thin walls, music was playing. And something was bumping rhythmically against the wall. \n\nThat only seemed to egg Janie on. \n\n\"Let's go put them to shame,\" she whispered in his ear. \n\nJanie tugged at his shirt as he pushed her into the back bedroom. She dropped her duffel bag on the floor and slammed the door shut. \n\nIt became a race to see which of them could undress the other first. \n\nThe winner was Janie, because her jeans were so tight, she had to wiggle herself out of them. Jason sat on the edge of the bed, suckling on her nipples and stroking his cock at the same time. \n\nFinally naked, she pushed Jason back on the bed, and then mounted him without further foreplay. Not that either of them needed more preparation. \n\nHe slipped into her easily and she bottomed out in one stroke. \n\nHer hair had fallen over her face, but Jason could still see her eyes blazing with lust. He reached up and took her breasts in his hands. She leaned forward, steadying herself. \n\nJanie's hips gyrated in a steady rhythm, slowly picking up speed. \n\n\"Fuck, you feel good,\" she moaned. \n\nJason felt like his cock was on fire. ",
        "\"Did you like watching me tease all of those other guys?\" Janie asked. \"Did you see the way they were looking at me?\" \n\n\"I did, 'Svetlana',\" Jason smiled. \n\n\"And I wanted them all to know what a dirty slut I am for you.\" \n\n\"How dirty are you?\" \n\nShe took his hands from her breasts and placed them on her moving hips. Then Janie leaned forward and pulled Jason's face into her chest. \n\nHer nails dug into his scalp as his teeth raked her nipples. \n\n\"You'll just have to wait and find that out, young man.\" Her voice was a throaty growl. \"But I'm all yours. Whatever you want from me.\" \n\nJanie sat back. Jason's eyes widened at the sight of his lover. Sitting astride him in all of her naked glory. \n\nHer breasts showed a little bit of sag, but for a mother of two, they were surprisingly pert. Her pussy was freshly shaved. \n\n\"Watch my tits,\" Janie whispered. Jason's fingers dug into her hips as she began to bounce up and down on him. \n\nHer nipples traced circles in the air as she rode him. Jason was hypnotized by her breasts. \n\nWith one hand, Janie reached down between her legs and she began to stroke her clit in time with her gyrations. \n\n\"Fuck me, Jason!\" Janie shouted, her hips moving even faster. \"Oh, god . . . oh, god! I'm . . . I'm about to cum!\" \n\nShe clenched her teeth. \n\nThe bed was squeaking. \n\nThe headboard bumped against the wall. \n\nJason felt her pussy contract around him and then she flooded with warmth. \n\n\"I'm cumming! Keep fucking me!\" \n\nJanie's body began to convulse and she collapsed into his arms. She continued to moan, as Jason took over, thrusting his cock up inside her. \n\n\"Oh, Jason,\" she whispered, her voice faint. \n\nWithout warning, Jason lifted her up and flipped Janie on to her back, his cock still rock-hard, never leaving the confines of her steaming-hot pussy. \n\nRaising her legs, Jason hooked his elbows into her knees and then began to jackhammer his cock into the woman of his dreams. \n\n\"I'm still cumming!\" Janie wailed, her voice delirious with pleasure. \n\nHer fingernails dug into his shoulders. Her pussy was slick with excitement and he hit bottom with each stroke. \n\nJason clenched his teeth, trying to hold back his impending orgasm. \n\n\"Cum in me!\" his lover gasped. Her arms flailed around the bed, grasping at the pillows and sheets. \n\nWith one final thrust, Jason buried his cock inside her. His toes began to tingle. \n\n\"I'm cumming!\" he gasped. He never stopped moving. Never stopped fucking. \n\n\"Cum with me!\" Janie's eyes rolled back into her head as Jason's body went limp. \n\nTheir breathing laboured, the pair lay in one another's arms. \n\n\"Damn, you're good,\" Janie kissed him behind the ear. \n\nJason only groaned in reply. \n\n\"Can you do it again, lover?\" Her hands ran up and down his back. \"Can you get that big cock hard for me again? Then fuck me again?\" \n\nHis cock twitched. \n\n\"I've missed you,\" she whispered. \"I've missed having you in my bed . . . and in my arms . . . and in my tight little cunt.\" \n\nEver so slowly, Janie began to grind her hips, trying to bring him back to life. \n\n\"I think someone likes it when I talk dirty, don't they? Do you like it when I say things like 'tits' and 'cunt' and 'fuck me'? I think you do.\" \n\nJason began to match her move for move, their hips grinding together. \n\n\"Can you feel what a mess you've made inside me? I've soaked this bed, Jason. That's it . . . fuck me again with your big, fat cock. . . . Now reach under me and play with my ass . . . maybe one day I'll let you fuck me back there\u2014OH! Maybe I shouldn't promise you that . . .\" \n\nHe pulled back for just a second to look her in the eyes. \n\nEven in the soft light that shone in from behind the cheap blinds, Janie's big blue orbs twinkled with mischief. \n\n\"I'm going to fuck you every day of my life.\" \n\n\"Promise?\" \n\n\"You're goddamn right.\" \n\nShe reached up and caressed his cheek. Her gaze softened, the earlier playfulness gone. \n\n\"Promise me something else,\" she said softly. \n\n\"Anything.\" \n\n\"Promise you'll never leave me.\" \n\n\"Janie . . . I\u2014\" \n\n\"You don't have to mean it; I'll never hold you to a promise you make in bed.\" \n\n\"I will never make a promise that I won't keep\" He leaned in and kissed her gently. \"And I promise, with God as my witness, that I will never leave you.\" \n\n\"Oh, Jason,\" she pulled him down into her arms. It took him a second to realise that she was crying. \n\nHe didn't say anything, instead just pulling his lover closer to him. \n\nWithout another word, Janie wiped the tears from her eyes, then smiled weakly up at him. \"You know just what to say.\" \n\n\"I mean it,\" he said gently. His hips still moving ever so slightly. \n\n\"We'll talk about it later,\" Janie promised. She closed her eyes for a second, then willed away whatever other tension or stress that was going on in her brain. \"Now get back to fucking me. I want your friends to know that you picked up a screamer.\" \n\n********************* \n\nHe jerked awake at the alarm. Janie lifted her head off his shoulder and reached across him for her phone on the nightstand. \n\nIt was 6:30. \n\nShe flipped the alarm off and the cuddled up to him. \n\nHer hair smelled sweet to him. Her touch was warm. \n\n\"Good morning, sleepyhead,\" she said softly. \n\n\"Good morning, Svetlana,\" Jason grinned. \n\n\"Could this bed be any smaller?\" \n\n\"I told you your place was nicer.\" \n\n\"Yeah, but it's cozy . . . in a dumpy, college student kind of way.\" \n\n\"Is that supposed to be a compliment?\" \n\n\"It reminds me of my first apartment, although this room is a lot more girly than mine was.\" \n\n\"That's because Heather keeps it this way in case her parents show up. Her mom thinks she and Cody are just sharing rent.\" \n\nJanie snorted. \"Whatever she has to tell herself, I guess.\" \n\nThe pair lay there for as Janie ran her hands across Jason's chest. He savoured the feeling of her body pressed against his. \n\n\"I want you to come over after work today,\" she whispered. \n\n\"I'm working late tonight,\" he said. \n\n\"That's okay,\" Janie took his hand and began to suck on his fingertips. \"I just don't want to wake up alone tomorrow.\" \n\nHer hand roamed down his body to his cock, which hardened in her grasp. \n\n\"That feels so good,\" Jason gasped when she squeezed his cockhead. \n\n\"Mmm, I know,\" she rolled over on her back and spread her legs. \n\nJason entered her pussy, which was still slick from the night before. \n\n\"When you go to school and work today, I want you to think about all the cum I have inside me.\" Janie arched her back so she could take as much of Jason's length insider as she could. \"All of your cum. And how it's going to be leaking out of me all day long.\" \n\nOne hand reached under her and cupped her rear end. The other caressed one of her breasts, its nipple a sharp little point on the end. \n\n\"Now, let's wake up the neighbours.\" \n\n********************* \n\nAfter their morning love-making, Jason and Janie dressed and he drove her back to her house. She went to work and he went to school. \n\nThe day dragged on for him. His classes were in the morning, and he got most of his homework and reading done in between English Comp and Biology. He finished what was left at the rec center, and then went to his second job at the Outback. \n\nCody sent him several texts and messages throughout the day, mostly of the \"high-five\" variety, including one picture of the rumpled bed and the wet spot he and Janie had left. \n\nJason just smiled and played along, not wanting to let his friend in on the relationship he had with an older woman. Plus, a part of him wanted to draw the reveal out for as long as he could. Janie was not only his first lover, but his first real relationship. \n\nHe was shy and timid in school. When other kids were going out to football games and dances, he was often working a fast food part-time job, or at taekwondo class. \n\nAfter work, Jason pulled into Janie's driveway. The garage door was up and he parked next her to her minivan. He put the door down and retrieved a soft-sided bag out of the car trunk. It was the luggage he lived out of when he was staying at Cody and Heather's place. \n\nMost of the lights were out in the house, but the lights in the back bedroom were on. The scent of vanilla candles filled the air. \n\nJanie was waiting for him, wearing a soft, full-length terrycloth robe. \"You look beat.\" \n\nAll Jason could do was smile weakly. \n\n\"Get undressed.\" Janie turned and dropped her robe. She wasn't wearing anything underneath. \n\nLeading him back to the master bathroom, she turned the hot water on in the giant jacuzzi tub, which was already half full. His eyes lingered on her perfect backside. \n\nJason left a pile of his dirty work clothes in corner and took Janie's hand as she stepped into the tub. \n\nHe leaned back into her arms as the water washed over them. Her breasts were pressed flat against his back. \n\nShe wrapped her legs around him and kissed his neck tenderly. \n\nWithout words, Janie washed dirt and grease and grime away. She massaged his sore muscles. \n\nHe tried to touch her, but she brushed his hands away. \n\nWhen she was done, they sat in the tub, each content to be in the arms of the other. \n\nFinally, Janie opened the drain and they stood, then dried each other off. \n\nJason went to his bag to retrieve a shirt and boxer shorts, but Janie stayed his hand. She blew out the candles and turned down the sheets. \n\nStill naked, they curled up in her king-sized bed, with its memory foam mattress and plush down comforter. \n\n\"Will you stay with me?\" Janie whispered. \n\n\"For how long?\" \n\n\"I don't know,\" she said wistfully. \"Tomorrow . . . this week . . . forever . . .\" \n\nJason lay there for a long time, with Janie's head on his chest, listening to his heartbeat. \n\n\"What . . . last night . . . what did you mean about not leaving you?\" \n\nJanie didn't speak for a long time. She ran her hand up and down his arm. \n\nHer voice quivered. \"My husband left me. I was in love with him. We went to high school together. He promised me the moon . . . and for a while, it was perfect.\" \n\nJason dared not speak as her voice trailed off. \n\n\"But then . . . then six years ago . . . he decided he didn't want to be married any more. He found some young thing and left me for that little cunt.\" Janie's body began to shake. \"I know that this is me being needy and clingy, but . . . but I . . .\" \n\nJanie took a deep breath. \n\n\"It's not right for me to dump all of this on you,\" she sighed. \"Or make you pay for my ex-husband's mistakes.\" \n\nJason took her hand in his. He kissed each of her fingers gently. \"I'll never leave you.\" \n\n\"I believe you,\" Janie pulled her lover close to her. She was shaking. \"But what happens when you get tired of me? Life isn't all passion and romance. You're still in college . . . and I'm an old mother of two . . .\" \n\n\"You're not old . . .\" \n\n\"I'm serious, Jason . . . I could be your mother.\" \n\n\"But you're not,\" he pulled back and looked her in the eyes. \"I've been in love with you since I was fifteen. Before I even knew what being in love meant. And now that I've got you, I'm never letting you go.\" \n\n\"Promise?\" she whispered. \n\n\"You know that girl I went to prom with? Jenny? Do you know why I went to prom with her? Because she looks like you . . . and you know what else?\" \n\n\"What?\" \n\n\"We fooled around a little bit,\" Jason blushed, a little bit embarrassed and a little big ashamed of his admission. \"But we never did it . . . because the only person I could ever imagine being with was you.\" \n\nWithout another word, Janie pushed Jason down into the bed and mounted him. \n\n\"I love feeling you get hard inside me,\" she moaned. \n\n\"I'll only leave when you make me.\" Jason pulled her down and kissed her long and hard. \"I promise.\" \n\n********************* \n\n\"I don't know why you insist on staying here,\" Jason spooned up behind Janie on Heather's meager twin bed. \n\n\"What? You don't like sleeping close to me?\" she teased. \n\nBoth of them reeked of sex. \n\n\"I love sleeping close to you,\" he swatted her playfully on the backside. \"But this bed is lumpy and the bathroom here is a closet.\" \n\n\"It reminds me of being young and in college,\" Janie said playfully. \"And I hope it makes you appreciate how nice my house is.\" \n\nThe mid-morning sun shone through the blinds. After going out for dinner the night before, Janie woke him up with a blowjob, then rode him until he came inside her. During the week, they stayed at her house, but ended up at Cody and Heather's on Friday night. \n\nWith a mischievous wink, Janie untangled herself from Jason and stood. His eyes lingered on her perfect form. She patted him playfully. \"I need to pee.\" \n\nThat's when Jason heard voices from the living room. Before he could stop her, Janie pulled Jason's long t-shirt over her head and opened the bedroom door. It barely covered her up, but that was probably the point. \n\nHis heart racing, He hunted around for his boxer shorts and a t-shirt for himself. \n\nWhen he finally made it out to the living room, he found Janie talking to Heather. Cody looked on sheepishly, unable to keep his gaze off of Janie's nipples which were poking out from beneath the thin t-shirt. \n\nJason was unable to hear what they were saying, but Heather and Janie giggled as he approached. \n\nSetting the bottle of Diet Pepsi in her hands on the counter, Janie turned to Jason and stood up on her tiptoes, causing the t-shirt to ride up and expose her bare rear end. She kissed him on the cheek, causing him to blush uncontrollably, for he could see Cody's eyes pop out of his head. Heather was unable to contain her laughter. \n\nJanie pulled back and winked. Then she bounded off to the bathroom. \n\n\"Oh, my god,\" Heather snickered, once the door closed. \"She's smokin' hawt!\" \n\n\"MILF city, man,\" Cody reached out and gave Jason a congratulatory bro-hug. \n\n\"I would kill her have her ass,\" the other girl said enviously. \n\n\"Yeah, me, too!\" That drew Cody a punch in the shoulder from his girlfriend. \n\nUnable to speak, Jason felt his ears burning with embarrassment. \n\nJanie emerged from the bathroom a moment later. None of them spoke as she sauntered over to the kitchen and began going through the cabinets. \n\n\"I see beer, ketchup, butter, French onion dip, more beer . . . and milk that's three days past the expiration date,\" Janie looked over the contents of the fridge. She was half-bent over, intentionally oblivious to the fact that Jason and his friends could see the bottom half of her cheeks. \"Oh, to be young again!\" \n\n\"There's cereal in the pantry,\" Heather pointed out. \n\n\"Isn't there an IHOP up the road?\" Janie asked. \n\n\"I think so.\" \n\n\"Then let's go,\" she said. \"Someone is going to need a lot of energy today.\" \n\nWith another wink, Janie brushed past Jason, leaving the three teenagers to scramble out of the kitchen. \n\n\"You're an evil woman,\" Jason closed the door to the bedroom just as Janie shed her top. \n\n\"I'm your evil woman,\" she countered and then pulled his shorts down. His cock sprang out and began to harden at her touch. Janie sank down on her knees and looked up before taking the head of his cock in her mouth. \"We have to hurry.\" \n\nHis knees weak, Jason fell back on the bed as Janie went to work on him. Her mouth worked up and down quickly. Her lips formed an airtight seal around his sex. \n\nShe was going for broke. Her tongue ran up and down the sensitive underside of his cock. \n\nHer hands cupped his balls. There was no pretense, no romance. \n\nIn no time, Jason felt his toes begin to tingle. He tried to sit up, but she pushed him back down on to the bed. \n\nJason's eyes rolled back into his head as his cock exploded. \n\nShe released him from her lips and wrapped her breasts around the shaft of his prick. \n\nShooting off on her chest, Jason felt dizzy. His mind barely registered that she was rubbing his cum into her chest until she stood and began dressing. \n\nDonning his t-shirt, Janie pulled a pair of shorts out of her overnight bag and pulled her hair back with a scrunchie. \n\n\"Your friends are waiting,\" she winked, then disappeared out the door, leaving him to wonder what had just happened. \n\n********************* \n\n\"So do you think my breasts are too small?\" As far as loaded questions, that one wasn't too bad. \n\n\"I think your breasts are perfect,\" Jason cupped them as the warm water cascaded over them. \n\nJanie leaned back into his arms in the spacious stand-up shower in her master bathroom. \n\n\"Do you like them covered in your cum?\" \n\n\"I like them any way I can get them,\" his lips raked the back of her neck, causing her nails to reflexively dig into his arms. \n\n\"What about Heather's boobs? They're nice and big.\" \n\n\"More than a handful is a waste.\" Jason may have been young, but he wasn't stupid. \n\n\"Does she always wear low-cut tops?\" Janie purred as he gave her a playful squeeze. \"I wanted to stick my face into her cleavage all through breakfast.\" \n\n\"Yeah,\" Jason whispered in her ear. \"Cody likes her to wear stuff like that.\" \n\n\"And what do you like me to wear?\" \n\n\"Nothing.\" \n\nShe swatted at him playfully. \n\n\"Yoga pants,\" Jason blurted out. \n\n\"I'll be sure to buy more.\" Janie set her hands against the tile wall and pushed her rear end back against Jason's naked body. \n\nBoth were exhausted after spending most of the day in bed. After breakfast with Cody and Heather, they returned to Janie's house and made love. \n\nThey savoured each others's touch. This was their third shower. \n\nThe water rinsed off another round of their exertions. Without another word, he turned the handle to off, and they dried off. \n\nWearing plush terrycloth bathrobes only long enough to change the sheets, Janie and Jason fell into one another's arms. Naked. \n\nHe wrapped his arms around her and pulled her close. \n\n\"My kids are coming home tomorrow,\" Janie whispered, her voice shaking. \"I want you to stay and meet them . . . I mean, you already know them . . . but I want you to meet them as my . . .\" \n\nShe giggled nervously. \n\n\"Your what?\" \n\n\"My boyfriend,\" Janie said. \n\n\"I'd like that,\" he replied once he found his voice. \n\nNeither spoke for a long time, as they processed what this meant for their relationship. \n\n\"I don't ever want to wake up alone again,\" she whispered and Jason's heart skipped a beat. His fingers wrapped around hers. Janie rolled over and their foreheads touched. Their noses brushed, and they kissed gently. \n\nTenderly. \n\nThen Janie started to giggle. \"But that means you can't sleep naked when they're here.\" \n\n\"And you'll have to keep yourself from screaming,\" Jason returned with a smile just as radiant as Janie's. \n\n\"Does this mean we can hold hands at taekwondo now, too?\" Jason cupped her face in his hands, his fingertips tracing her cheekbones. \n\nJanie took a deep breath. \"Yes . . . of course we can.\" \n\n\"Good, because I'm never letting you go.\" \n\n\"You know all the right things to say,\" Janie sighed contentedly. \"Even if you won't admit Heather's boobs are nicer than mine.\" \n\nShe let out a surprised yelp when Jason pinched her on the backside. \n\nIn return, she wrapped her arms around him and pressed her naked body to his. \n\n\"I love you, Janie.\" His voice was so soft she could barely hear him. \n\n\"I love you, too, Jason.\" \n\n********************* \n\nThey walked into the adult black belt class on Monday night holding hands. No one said a word, although the room was filled with wide eyes and slack jaws. \n\nNeither Jason nor Janie stopped smiling. \n\nAt least until Kim Hollandsworth landed a jump roundhouse kick to the back of Jason's head during the sparring matches. Then he was back in martial arts mode. \n\nSharon winked at them mischievously as they left, with Jason driving Janie's minivan. They stopped by a neighbour's who habitually watched Janie's kids when she went to taekwondo during the week. ",
        "During the drive, their phones figuratively blew up with text messages and missed calls from people wanting the scoop. Both enjoyed the mystery and feeding the rumour mill. \n\nJanie's children knew Jason from taekwondo. They sat them down in the living room after returning home. \n\n\"How would you like it if Jason stayed with us for a while?\" Janie asked. \n\n\"Are you dating?\" Caroline was eleven and way too smart for her own good. \n\n\"Yes, we are,\" Janie replied, her eyes wide. \n\n\"So is Jason living with us?\" she asked. \"Like Dad and Brittany did before they got married?\" \n\n\"Kind of like that,\" Janie frowned at the mention of her ex-husband. \n\n\"Are you getting married?\" Olivia was nine and didn't talk as much as her sister, although she was just as smart. \n\n\"No, not any time soon,\" Janie replied, her face flush, although she should have expected these kinds of questions from her children. \n\nJason sat quietly, unsure of how he would fit into the family's established dynamic. The girls liked him, though, and that helped. \n\nThe three of them ended up all sitting around the dining room table doing homework before it was time for showers, a little bit of TV and then bedtime. \n\nIt was 9:30 by the time the girls were in bed. Janie and Jason curled up on the couch. The Monday Night Football game was on, but they weren't paying attention to it. After another half hour, they checked on the girls and found them asleep in their rooms. \n\n\"That's how a typical night goes around here,\" Janie led Jason to the bedroom, where they changed, brushed their teeth and then crawled into bed. \"We have a routine. It's not very exciting.\" \n\n\"I just want to be with you,\" Jason whispered and rolled over to kiss her. \n\nTo his surprise, Janie pulled back. There was a flash of fear in her eyes. The bottom fell out of his stomach when she spoke. \"We need to talk.\" \n\nShe stood, and Jason followed her to the dining room table. Janie reached for a legal pad and a stack of papers. \n\nHe sat in the chair next to her. \n\nJanie's hands were shaking. Her voice was soft, but firm. \"I want to talk to you us. And about money.\" \n\nNeither spoke for a long moment. After a false start or two, Janie reached over and squeezed his hand. Her eyes bored right into his. \n\n\"I make enough for you to live here,\" she said gently, as if she was trying not to belittle or patronise him. \"And I know this sounds kind of crazy, but I want . . . I want to start thinking about 'us' . . . you know . . . in kind of a long-term way.\" \n\nJason's heart skipped a beat. \n\n\"Yes, I'm getting way ahead of where we are now,\" Janie shook her head, as if she couldn't believe the words she was saying. \"But I feel so . . . so . . . safe and comfortable when I'm with you. And I never want to let you go.\" \n\n\"But . . .\" Jason saw where this was going. \n\n\"I have two children who come first,\" she said softly. \"I need to look out for them . . . and myself, before I start thinking about bringing another man into my life. Their lives. I'm going to ask you a bunch of stuff about money. I need you to be completely truthful with me. And you can ask anything you want from me. Do you understand?\" \n\nJason nodded weakly. Janie reached for her notepad. \n\n\"Do you have any credit cards?\" \n\nHe shook his head. \n\n\"Do you have any student loans?\" \n\n\"About seven thousand dollars so far,\" he said nervously as she scribbled away. \n\n\"Is your car paid off?\" \n\n\"Yes.\" \n\n\"Who owns your car? You? Your parents?\" \n\n\"I do.\" \n\n\"Do you have any other debts or loans out?\" \n\n\"No.\" \n\nJanie smiled reassuringly. \"Good.\" \n\n\"Do you know why I want to know all of this?\" \n\n\"Not really.\" \n\nShe sat back and stared off for a moment. \"When my husband and I got married, we had just graduated from college. He is an accountant and I am a nurse. He started working right after getting his CPA and I went on to become a nurse anesthetist. Tuition alone for that was about sixty thousand dollars. Both of us had loans from undergraduate; that was a long time ago but we started life with over a hundred thousand dollars in debt.\" \n\nJanie paused for a moment to take a deep breath. \n\n\"I want . . . well, I want you and I to be together,\" Janie's voice trailed off and she stared off wistfully for a while. She snapped back to the present and picked up her pen. \"I'll make you a deal . . .\" \n\nShe started a list. \n\n\"Tuition at Valencia is, what? . . . A hundred dollars a credit hour?\" \n\nHe was taking a full load of classes plus a lab. \"Yeah, just over three thousand for this year.\" \n\n\"How much are books?\" \n\nJason thought for a second. \"About four-fifty this semester.\" \n\nJanie started rattling off expenses and Jason filled in the blanks. Auto insurance. Gas. Food. Cell phone. \n\n\"Here's what I'll do,\" she said after tallying up his costs. Even with two jobs and some financial aid, he was in the red. \"If you can cover tuition and books, you can live here with us.\" \n\n\"But that\u2014\" \n\n\"I know,\" Janie smiled, and his resistance evaporated without much thought. \"Most of my expenses are fixed. You living here will use a little more water and some more food, but my mortgage, satellite TV and stuff like that will cost me the same either way.\" \n\nShe took his hands again. \n\n\"We'll work the rest out later.\" \n\nJason sat there speechless, his mind racing, trying desperately to process what this meant for their relationship. And wondering whether this woman was his lover or his angel. \n\n\"Say, 'Thank you, Janie',\" she giggled before pulling him to his feet and leading him back to the bedroom, a trail of clothes along the floor. \n\n\"Thank you, Janie,\" he whispered as they fell into the bed and he entered her, Janie's arms and legs wrapping him in their tender embrace. \n\n********************* \n\nTo be continued . . ."
    ],
    "authorname": "HLD",
    "tags": [
        "older woman",
        "younger man",
        "taekwondo",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/thank-you-janie"
}