{
    "title": "Pussy Kandy",
    "pages": [
        "Why is that little girl dressed like a dominatrix? Jaycee thought as she walked toward the front door.\n\nThe \"girl\" was standing on the other side of the storm door, visible through the glass pane. She was wearing an impossibly tight pink catsuit with a plunging neckline and a pink lace harlequin mask. There were pink cat's ears in her hair, and fine little white whiskers painted on her cheeks.\n\nThe main door was open, held ajar by the small table with the candy bowl, so that Jaycee could take in the costumes before handing out the mini Twix bars and boxes of Nerds. The small kids had long-since gone home. For an hour there had been only a few ten-year-old stragglers and a couple of stoned middle-schoolers, so she wasn't expecting the doorbell when it chimed.\n\nShould have shut the door, she thought when she saw the outfit.\n\nBy the time she reached for the bowl, Jaycee knew that whoever was in the catsuit, it was no middle-schooler. She was miniscule --even in 4-inch stilettos, she was barely over 5 feet tall-- but that's where her resemblance to a little girl stopped.\n\nShe was supernaturally curvaceous, and the latex bodysuit clung to her form like a glassy candy shell.\n\nIt was a shade of pink that made your mouth water, with bright white zippers at strategic locations, and a small, plastic ice-cream cone hanging from the zipper fob below her cleavage. The two small, pink sequined cat's ears poked from hair that was as white as whipped cream. Pink ribbons (with plastic cherries at the center of the bows) scooped the fine white strands into ponytails on the sides of her head. Her skin was the color of caramel, and her brown eyes so big you could drown in them. Around her neck was a thin pink leather collar, like a choker, from which hung a ruby-red plastic cherry.\n\nShe looked like an ice cream sundae that you wanted to fuck.\n\nIn one hand was a glittery, hot pink rectangle that Jaycee mistook for a cell phone. In the other was a leash that trailed up behind her to the collar of an all-white Great Dane that towered over her. He too wore a pink collar, but with a plastic bone dangling from the leash ring. He was sitting calmly to her rear, a tongue the size of a paperback book lolled out of his mouth, panting and uninterested.\n\nTo their right stood a massive man who towered over the Great Dane and was nearly as wide as he was tall. He was wearing a black mariachi costume with a wide sombrero and hot pink embroidery (that costume must have been a bitch to find, she thought), also with a black fabric harlequin mask. He had his hands clasped in front of him, one holding the other at the wrist, like he was waiting to tell Jaycee about her Se\u00f1or y Salvador, Jesucristo.\n\nThey looked like villains on a comic book cover.\n\nEven for Halloween it was odd.\n\nJaycee might not have opened the door at all, had it not been for the cameras.\n\nThere were two of them, one on either side of the trio. They had floodlights attached and created a blinding halo when they pointed in Jaycee's direction. She could make out a fuzzy boom mic hanging to one side of the massive dog's head.\n\nWhat fucking TV show is this? she thought as she pushed open the door.\n\n\"Trick or treat!\" yelled the little kitty, as the dog let out a single bark.\n\n\"What is all this? Who are you supposed to be?\" Jaycee asked from around the corner of the storm door. She was holding the bowl in front of her, like the Jolly Ranchers and Tootsie-Rolls might ward off trouble.\n\n\"It's reverse trick-or-treat!\" said the young woman. \"I'm Pussy Kandy --that's 'Kandy' with a 'K'-- and I'm trick-or-treating through neighborhoods, giving away samples of my hot new lip gloss, Pussy Kandy, to all the sexy ladies!\"\n\n\"Pussy Kandy, huh?\" said a dubious Jaycee. \"What's with the cameras?\"\n\n\"I'm streaming this out to all of my fans! You're on the Pussy Kandy and Mr. Snickers Show! 2.8 million total followers!\"\n\nShe leaned forward slightly at the waist, lifting the back of her hand to the side of her glistening pink mouth in a mock conspiratorial pose.\n\n\"Mr. Snickers is the dog,\" she fake-whispered to Jaycee, then straightened and resumed her normal voice, playing to the cameras. \"Right, Mr. Snickers?\"\n\nThe dog barked once, a booming woof she felt in her chest. He was totally, almost impossibly, white.\n\nWhy name a white dog 'Snickers?' Jaycee thought.\n\n\"The big guy is Mister Daddy. He's our security. He doesn't talk unless I say so.\" She gave a broad wink to one of the lenses.\n\n\"Everything OK, babe?\"\n\nJason came up behind his wife, wearing a white sailor costume that made him look like the Stay-Puft Marshmallow Man. He was not prepared for the supernova of sluttiness standing in his doorway.\n\n\"Yeah,\" said Jaycee --annoyed that she hadn't gotten rid of this tiny tart before Jason saw the outfit. God knew that was going in his spank bank now. One more thing to compete against. \"She just wants to sell me lip gloss.\"\n\n\"Buy it.\" said her husband.\n\n\"I'm not selling it! I'm giving out samples!\" said Pussy, \"And I don't just want to just give you lip gloss. I want to give you a taste.\"\n\n\"Do it.\" said Jason.\n\n\"I don't think so.\" said Jaycee, backing into the house.\n\n\"C'mon! It's just a kiss!\" said Pussy. \"It's the sexy way to sample the product on the sexiest holiday! A taste of Pussy Kandy! Just a little peck on the lips! No tongue, even!\"\n\nShe held up a \"Scout's Honor\" sign with three manicured fingers and did a little half-curtsy.\n\n\"I don't know...\" Jaycee said, but she was looking at the young woman's pink lips --full and shimmering, almost dripping. She and Jason had been going through another rough patch, and it had been two months since she'd been laid. The lips made her tingle a little.\n\n\"Pleeease! Just a quick kiss for the fans! Pretend you're back in college!\" said Pussy. \"Your husband will love it! Just look at him!\"\n\nJason blushed, but shrugged at Jaycee, hopefully.\n\n'Why not? It's Halloween,' his eyes said.\n\nShe turned and handed him the candy bowl, giving a look that said, you're such a guy,while thinking to herself, I bet I get laid tonight.\n\n\"OK,\" said Jaycee, turning toward Pussy. \"Just a quick kiss.\"\n\nShe was trying to play it off, but she was suddenly hot and her stomach was fluttering. This tiny dynamo just oozed sex. She bent down, bringing her face close to those big eyes.\n\n\"Could you look at the camera and say, 'I want a taste of Pussy Kandy'?\" Pussy asked.\n\nJaycee could feel herself tingle and flush. She giggled involuntarily as she squinted into the lights, at 2.8 million followers, and said, \"I want a taste of Pussy Kandy!\"\n\nShe had barely faced forward again before the girl's full lips were on hers. Smoothe and pillowy, liquid and silky, they felt wet and warm against her own. Pussy's lips parted and a playful tongue flicked out to tease Jaycee. It tasted like fruit and sex. She felt Pussy's hand at the small of her back, pulling her in. She was getting turned on.\n\nThere was an incredible shooting pain in her armpit that lit up the right side of Jaycee's body. Something was wrong with her arm. Her whole body was rigid and on fire. She tried to yell but couldn't breathe. She was falling. All she could see were colored flashes of light. She felt herself being carried and heard Jason yelling, far away.\n\nShe didn't black out --it was more of a white haze-- but she did forget who and where she was for a minute. When she came back to herself, she was lying on her back in her front hallway, wrists and ankles zip-tied. It felt like she'd been punched in every muscle on her body and her ears were ringing. Her jaw hurt. Everything hurt. She saw Jason on his stomach across from her in the hallway, hands behind his back, his terrified blue eyes impossibly wide.\n\n\"Gag 'em and bag 'em,\" she heard Pussy say. \"Put her on the couch. Put him in the bedroom, on the bed.\"\n\nA man knelt and pushed a pink rubber ball gag into her mouth, then wrapped the leather strap around her head. Her hair caught in the clasp, and Jaycee winced as it was cinched tight behind her skull. He pulled a black cloth bag over her head and she began to feel hot and panicky. Under the hood she began to cry.\n\nSomeone --it had to be that giant of a man, Jaycee thought-- plucked her effortlessly from the hallway floor, tossing her over a shoulder that felt like an oak tree. She could tell she was being carried into her living room. The big man unloaded her confidently, but carefully. She felt herself make contact with the couch cushion. It was familiar, comforting. Jaycee wanted to sink into it and disappear. She settled for continuing to cry, softly.\n\nShe could hear a bustle of activity around her: cables or ropes uncoiling on the wood floor; wheeled carts or crates being brought in from outside; some type of metal poles pinging and scraping around the room. No one spoke. She could hear people moving about, working on something, but whatever they were doing, they were doing it silently.\n\nFinally, she heard Pussy say, \"I'm gonna search the bedroom.\" The thin click of her heels retreated out of the room and down the hall, toward Jason.\n\nJaycee wondered who they were and what they could be looking for. She tried not to let her mind conjure all the terrible possible endings to this scenario but couldn't stop herself. Soon she was shaking with terror. She heard muffled talking from the bedroom, a pained yip from Jason, a bark, then the approaching click of those heels in the hallway.\n\nThey stopped in front of her, near the wall of framed photos that butted against one arm of the couch.\n\n\"Aww!\" she heard Pussy say. \"Those must be your sisters! Three little gingers. Look at your little matching T-Shirts! 'Jaycee,' 'Lacey,' and 'Gracie,' Hmmm.\"\n\n\"I'm not trying to rub salt in your wounds, Jaycee. Especially since I know what's about to happen. But it sounds like your mom bought you guys as a set at a Cracker Barrel gift shop.\"\n\nJaycee began to cry louder. She loved her sisters. And her mom. And Cracker Barrel. The \"especially since I know what's about to happen\" scared her badly; she was scared about what they were doing to Jason; the bag was making her claustrophobic; the flex-cuffs were biting into her wrists; and she was very close to losing it. She began to hyperventilate.\n\n\"Red? How much longer?\" Pussy asked someone.\n\n\"Ready,\" came a reply.\n\n\"Blue?\" she asked the other side of the room.\n\n\"Two minutes,\" said someone else.\n\nJaycee felt a tugging at the bag on her head and then she was looking at her living room, blinking at the banks of lights that had been set up to point at her on the couch. The large man and dog were nowhere to be seen. Four men in black, wearing the same black harlequin masks, were fussing with video equipment.\n\nThe buckle at the back of Jaycee's head made a snick as Pussy worked the clasp. Jaycee pushed at the ball with her tongue, and the gag fell away.\n\nShe looked down at her lap where it landed, noticing streaks of dust and lint around a fresh tear in her Sexy Witch costume dress. She began to cry even harder.\n\nPussy sat down on the couch next to Jaycee.\n\n\"Look at me, Jaycee,\" she said.\n\nJaycee turned her head, trying to blink away tears that were still flowing.\n\n\"You didn't do anything wrong, Jaycee. You're just unlucky. Your husband is fucking the wrong woman. Your husband is fucking my boss's wife.\"\n\nJaycee gasped like she'd been slapped. She felt like she wanted to throw up. She closed her eyes and began to rock back and forth.\n\nI knew it! she thought.\n\n\"The bad news is, my boss happens to be the head of the most powerful cartel in the Western Hemisphere, and he wants your husband to face justice.\"\n\nJaycee wailed.\n\n\"Hey! Hey! Keep it together,\" said Pussy. \"That's almost all of the bad news. Almost. The good news is that no one here wants to hurt you. I'm going to say that again: No one here wants to hurt you. Ok?\"\n\n\"The better news is that, not only can you walk out of this alive, you can walk out of it with a substantial amount of money. Look at me.\"\n\nWhen Jaycee looked, Pussy was holding up something that looked like a pink ballpoint pen, but with a small vending-machine key where the ballpoint would be. She bent and fiddled at the flex-cuffs on Jaycee's ankles and the tension vanished with a refreshing pop.\n\n\"Let me get your wrists,\" said Pussy.\n\nJaycee half-turned/half-fell to her side, and in an instant the biting pinch disappeared. She turned to face Pussy.\n\n\"No one here wants to hurt you, Jaycee. Quite the opposite. I mean, sorry about the stun gun on the porch --couldn't be helped-- but, really, no one wants to do you any more harm. We want you to walk out of here happy. Do you want to walk out of here happy, Jaycee?\"\n\nJaycee didn't believe her but nodded.\n\n\"Good,\" Pussy continued. \"Now, I'd like you to watch a little movie with me. After that movie, I'd like to make you a proposition. I warn you, it will be a hard thing to watch. Are you willing to do that? Will you watch a movie with me?\"\n\nJaycee was terrified of what she was about to see.\n\nPussy turned to a man pecking a laptop on a folding table across the room.\n\n\"Blue?\" she asked.\n\n\"We're hot.\"\n\nCameras pivoted toward Jaycee.\n\n\"Roll the tape,\" said Pussy.\n\nThe large flat screen on the living room wall flashed to life. It had been a wedding present from Jason's parents. Jaycee had watched her honeymoon videos on it. Now she was watching her husband, filmed from across a street, walking in front of a motel. His hand was around the waist of another woman.\n\nThey stopped briefly in front of a numbered door as he fumbled with the key card, and Jaycee glanced at the date imprinted on the stakeout video: three years ago. On screen, Jason opened the door for the woman, and they disappeared into the room.\n\nI fucking knew it! Jaycee thought, feeling sadness, satisfaction, and anger, all at once.\n\nThe shot cut to a montage of footage from various hidden cameras in numerous bedrooms: overhead, profile, full-face from the headboard. Every view was covered. There was no doubt it was Jason. He was fucking the same pretty Latina woman in every scene. Missionary, cowgirl, sixty-nine, doggy style. They got him from every angle. Even his moves were the same.\n\nHe used to do that same thing to me, she kept thinking.\n\nIt went on and on. Jaycee kept looking at the dates digitally imprinted in the corner of the frame. This had been going on for years. She did the cruel math. She had been with Jason for seven years, married for five. He had been having an affair for half the time they'd been together. For most of her marriage. Jaycee's world was crumbling around her. Everything was a lie. She was audibly moaning in pain.\n\nPussy touched Jaycee's knee.\n\n\"Stay with me, Jaycee. This is the important part. This is the rest of the bad news.\"\n\nThe video cut to a view of a bed. The camera was hidden in some appliance on a table at the foot of the bed, aimed toward the head. She could see Jason and the pretty Latina woman, intertwined and reclining into a mountain of pillows against the headboard. Someone had helpfully captioned the conversation in subtitles across the bottom of the screen, like it was a hidden-camera episode of 20/20. It was dated two weeks ago.\n\n\"He knows, Jason,\" the woman said.\n\n\"You're just paranoid. He's thousands of miles away. We've been careful. Besides, he can't touch us. He's in solitary, in Altiplano, twenty-three hours a day. We're in Michigan. You give him too much credit,\" Jason said.\n\n\"You're a fool. He's never far away. He could touch us from the moon! He won't just kill us, Jason. He'll kill my parents. He'll kill your wife and make you watch.\"\n\n\"So, you're saying it won't all be bad?\" Jaycee heard the man she'd thought she'd loved say. Her heart hurt. Her stomach twisted in on itself.\n\n\"JASON!\" his lover exclaimed as she slapped him across his chest. \"Don't even joke like that!\"\n\n\"It's a joke! I'm sorry. It's just...I mean...if she was gone, at least we'd be free.\"\n\n\"You would be free. Then what? We'd still have the most powerful sadist in the world looking to kill us.\"\n\n\"He doesn't own the whole world. There are places we could go, and he'd never find us. I know how to get away. I can't do it if I get divorced --I'll lose the boat and the money we'd need. But if Jaycee died somehow, with the life insurance and her trust fund...\" Jason let the sentence trail off unfinished while the thought hung in the air.\n\n\"Enough!\" said the Latina woman on screen. \"I don't want to hear any more!\"\n\nIn the frame, she rolled over and burrowed down into the bedding. Jason slid down in the bed and wrapped an arm around, spooning her.\n\n\"But that might be nice,\" said the woman. \"If she died, somehow.\"\n\nThe TV went black and Jaycee sat staring at the blank black rectangle on her wall. She felt hollow. Numb. Dazed. Betrayed. Heartbroken. Furious.\n\nLost.\n\nAn hour ago, she and Jason had been drinking wine and laughing in her kitchen, planning their night out.\n\n\"Jaycee, I wish I could give you time to process this, but we're on a schedule, and, well, life comes at ya fast, as they say,\" Pussy said. \"So, I'm gonna give you the pitch.\"\n\n\"A little over three years ago my boss began to suspect his wife was fucking your husband. A few months later, on Halloween night, he saw the first video proof. Do you know what bothered him most while watching that video? How much she obviously enjoyed it. He couldn't get that image out of his head.\"\n\n\"To make matters worse, Halloween is my boss's wedding anniversary. The pain he felt while watching his wife fuck another man and love it? On his anniversary? Well, I guess I don't have to tell you how it feels. It ate him up inside. He vowed to make sure your husband felt the exact same pain he felt. He knew that to do that, he'd have to be patient. He'd have to wait for the right moment. He had to wait for an opening. That tape gave him one, so, here we are.\"\n\n\"Opening for what?\" asked Jaycee.\n\n\"Jaycee, my boss would like to pay you a million dollars to shoot a movie with me and Mister Daddy, here, tonight, in front of your husband, while my boss watches, live, through that camera there.\"\n\nPussy pointed to a small tripod-mounted camera with a solid red light glowing on the front, then waved at the lens.\n\n\"\u00a1Hola, jefe!\" she said, then turned back to look at Jaycee, as she began to tick points off her fingers.\n\n\"In a nutshell: we want to fuck you; we want you to like it; we want to fuck you in front of Jason and make him watch you like it; we want to record it; my boss wants to watch this. For this, we will pay you a million dollars.\"\n\nJaycee felt sick. Stunned. This all felt unreal.\n\n\"I can't do that! What if I say no?\" asked Jaycee.\n\n\"Then we pack up everything and go. Everything including Jason. We won't hurt you, but you'll have nothing: no million dollars, no video evidence, none of the documentary evidence which we'll provide to you --text messages, e-mails, Internet searches, that sort of thing-- just a missing husband and a crazy story about a slutty trick-or-treater and a giant dog.\n\nHow long will it take the police to find out he was having an affair? How long before you're a 'person of interest'? How long before they start looking at his search history? What if they think you were the one searching for untraceable poisons and crime scene cleaning tips? I mean, it will probably all work out for you eventually, but what if it doesn't?\"",
        "Pussy paused to let it sink in.\n\n\"Or, you can have some great orgasms, make a lot of money, and get a little revenge on a man who betrayed you and wanted to murder you. A man who lied to you and cheated on you for years, Jaycee. A man who doesn't even want to touch you anymore.\"\n\n\"I mean, c'mon. I know it's been a crazy, shitty night, but be smart here! Take the money! Make the movie! It may not be what you want, but it's the best choice you can make in this moment. I know women in Juarez who would amputate their own arm for an offer like this, Jaycee.\"\n\nJaycee's mind was racing. She felt trapped and disoriented.\n\n\"You'll kill me anyway,\" she whispered, looking at Pussy. \"You won't pay me. You'll rape me, hurt me, and kill me.\"\n\nJaycee couldn't hold it in any longer, and she began to cry in deep, exhausted sobs.\n\nPussy wrapped an arm around her shoulders and leaned close.\n\n\"Jaycee, if my boss wanted to hurt you, a completely different team would be here. I'm not a killer, I'm a lover. Mister Daddy and I are in the sex business, not the murder business.\"\n\n\"My boss holds you blameless in all this --has great empathy for you, in fact-- but he would very much like to convince you to hurt Jason with sex. He will pay you handsomely to do so.\"\n\n\"He will do this because it appeals to his sense of justice. He's a very literal, 'eye-for-an-eye,' sort of man. Sure, we could tie you up and rape you in front of Jason, but that would defeat the purpose. It wouldn't be the same kind of pain. It wouldn't be justice.\"\n\n\"See, he has to watch you love it. Or, if not 'love,' something in the area of 'very enthusiastic appreciation.' You have to want it. That's why Mister Daddy and I are here. We're very, very good at making people want it. And we want you to want it.\"\n\n\"And that's why we aren't going to hurt you. It's important to us that you're willing; that you're enjoying yourself. If he sees you liking it, that's justice. And that sort of justice is worth a million dollars to my boss.\"\n\nPussy rubbed Jaycee's back, patting her.\n\n\"Your life as you knew it an hour ago is over. You can't get it back. The only thing you have to decide is if you want something to show for it. I can give you that something. What do you say?\"\n\nJaycee looked up at Pussy with wet eyes.\n\n\"You won't hurt me?\" she asked.\n\nPussy turned and reached into a small pink doctor's bag next to her on the couch. She pulled out a tiny pack of pink Kleenex, like kids keep at school, and plucked a few from the top.\n\n\"Tools of the trade,\" she said to Jaycee, in a tone that implied it was just-us-girls.\n\nShe leaned in and dabbed and wiped at Jaycee's eyes and nose. She wiped away tears with her thumbs and ran her small hands along Jaycee's hot cheeks. She took her face between her hands and pulled it down until their eyes were at the same level.\n\n\"Jaycee, I don't want to hurt you. I want to fuck you.\"\n\nPussy kissed her like she was disarming a bomb with her lips. She caressed Jaycee's face with soft hands and light fingers. As Jaycee's tension began to slip away, the kisses became deeper, wetter.\n\nJaycee had begun to breathe a little hard when Pussy pulled away.\n\n\"See? That wasn't so bad, was it?\"\n\n\"No.\"\n\nJaycee thought for a long five-count.\n\n\"How do I know I'd get paid?\" she asked.\n\n\"Good girl! Always get the money first!\" Pussy said, in a 'you-go-girlfriend' tone. She turned toward the men.\n\n\"Green?\" she purred at one of them, making a come-hither crook with her finger.\n\nThe man placed a thick, meaty briefcase at Jaycee's feet. Pussy bent at the waist and massaged the wheel locks with her thumbs. There was a weighty click, and the case cracked open like an oyster, revealing banded stacks of hundred-dollar bills.\n\nJaycee didn't think of herself as materialistic, but she had to admit that seeing that much money was exciting. Still, it had to be a ruse, she thought.\n\n\"How do I know you won't just kill me once you get what you want and take the money back?\"\n\nJaycee felt the heavy beat of the time passing before Pussy responded.\n\n\"Let's just say that demonstrations of power are useful. Tomorrow morning you'll call the police. You'll tell them that kidnappers posing as trick-or-treaters took your husband.\"\n\n\"'They zapped me with a stun gun, officer! See? Look at the marks! Look where the zip ties were!' you'll say.\"\n\n\"We barged in, tied you up, searched the house for a while. You were blindfolded most of the time, couldn't see much. Everyone was wearing masks anyway. We told you your husband fucked up, that we were taking him, told you to watch the video. We told you that we were watching you; to wait until morning to call the police. You'll show them the video and the other documents.\"\n\n\"They'll put two-and-two together, but we will be gone and out of reach; no prosecution will come of it. The story will spread, and it will become known to my boss's enemies that they can be touched, even in Michigan, even from Altiplano prison. That is also worth the money to him.\"\n\nIt all made a sort of sense, and Jaycee started to allow herself to hope. Maybe she could make it out of this.\n\n\"Will you put it on the Internet?\" she asked Pussy.\n\n\"It will be highly incriminating evidence, Jaycee. It is for my boss's purposes, not public consumption. You aren't going to see this on Pornhub.\"\n\nJaycee could feel her resolve crumbling. She was still scared --very scared-- but she also wanted to let herself believe in a way out. Could she really do it? Would they really let her live? The thought of being naked in front of all these people --of having sex in front of strangers with strangers-- made her feel sick. The thought of seeing Jason made her feel like running for the door.\n\n\"It won't be as bad as you think. Trust me. You'll forget they're there,\" Pussy said, seeming to read her mind. \"Or you might get turned on that they're watching. Sometimes I do. Whatever happens, we're gonna make you feel good, Jaycee. You'll get into it. If nothing else, think of this: for the next hour, you'll make over sixteen thousand dollars a minute.\"\n\nJayce did the math in her head. It actually came out to $16,666 per minute.\n\nSexy Witch. 666. How appropriate, she thought.\n\n\"Ok,\" Jaycee said, so softly it was almost a whisper. She regretted it almost immediately.\n\nPussy clapped with her dainty hands. \"Great!\" she said, \"Let's make a movie!\"\n\nJaycee could feel the sweat behind her knees as Pussy stood and clicked away toward the bedroom again. She kept her head down, staring intently at the floor, aware of all the eyes on her. She could feel the weight of the camera lenses. She wasn't sure she could go through with it but couldn't see a way to back out that seemed safe. She closed her eyes and tried to breathe.\n\nMore muffled conversation in the bedroom. A bark. The bassy rumble of casters rolling over the wood floor, growing louder as they made their way up the hallway.\n\nJaycee looked up as the dog rounded the corner. Pussy was right behind him. She snapped and pointed out the door they'd just walked through at the floor in the hallway.\n\n\"No, Mr. Snickers. You can't watch.\"\n\nThe dog barked once.\n\n\"Miiister Sniiickers...\" she chided, pointing again at the spot on the floor she'd chosen. The dog whined, turned, and walked away.\n\nThe wheels rumbled through the doorway. They were attached to the base of a rolling metal A-frame rack. Jason was strapped astride the top of it as if it were a saddle. He was naked, with a black bag over his head, in the same position that a jockey might sit a horse in the home stretch: ass high in the air, knees bent, shins folded tight underneath, and his torso low and hugging his mount. His arms stretched in front of him as if his hands were holding invisible reins. His head seemed unnaturally high, and his neck stretched into the black bag at what had to be an uncomfortably severe angle.\n\nNylon straps were cinched tight at his joints, at six-inch intervals along his limbs, and around his waist and torso, holding him immobilized against the frame. His fingers and toes were all that he could move, and they flexed and folded nervously as Mister Daddy pushed him past the couch.\n\nJaycee looked away.\n\n\"Gonna have to tie down those fingers and toes later, huh, Jason?\" Pussy said. \"Can't have you wiggling your piggies to distract yourself when I want all of your attention.\"\n\nThe flexing stopped.\n\n\"Roll him there, Mister Daddy,\" she said, pointing to a spot eight feet in front of the couch. \"Spin him so he's facing us but leave the bag on.\"\n\nPussy turned her attention back to Jaycee.\n\n\"Time for wardrobe! I found this very nice piece in your bedroom,\" she said, reaching into her small pink medical bag on the couch. She pulled out a crumpled ball of green and black lace, shook it free of itself, and held it up in front of Jaycee.\n\nIt was a sheer, lacy teddy with an emerald green spaghetti-strap harness that framed the tops of the breasts in soft, curving fabric lines, and connected to a green lace choker at the neck. The front was a deep green satin and lace panel, the sides sheer black lace. It looked like a dominatrix had designed an Irish doily.\n\nJaycee had bought it earlier that year for Valentine's Day, but she and Jason had fought that night and she'd never worn it.\n\n\"With your green eyes, your skin tone, that red hair?\" Pussy said. \"I bet you look fucking gorgeous in this.\"\n\n\"I've never worn it,\" Jaycee said.\n\nPussy inhaled, pulling an exaggerated 'shocked' face.\n\n\"Well let's try it on!\"\n\n\"Mister Daddy, would you come here and help me and Jaycee with wardrobe?\"\n\nThe big man moved like water to Pussy's side. He was easily six-and-a-half feet tall. He had ditched the hat, and long, wavy brown hair hung to his shoulders. Pussy reached up and, with deft, practiced fingers, slipped the pink fabric closure loops free. The front of the mariachi jacket slid open like a peep-show window.\n\nHe wasn't wearing a shirt, and Jaycee couldn't help but notice the rippling muscle peeking out.\n\n\"Let's just get this off you,\" Pussy said, as she helped him slide out of the jacket, tugging it over his oaken shoulders.\n\nJaycee almost gasped when she saw him stripped to the waist. It was as if someone had pointed to Thor and Aquaman and said, 'Give me one of those, but the next size up.'\n\nHis skin was the color of coffee with cream, and upholstered with dozens of tattoos, stitched together across his arms, chest, and shoulders --which were the size of bowling balls.\n\n\"That's better,\" said Pussy, tracing her palm across his abs as if they were the fender of a Ferrari.\n\n\"Isn't he gorgeous?\" she said, smiling down at Jaycee on the couch.\n\nJaycee nodded.\n\n\"His body feels amazing. Why don't you feel it?\" She reached down to Jaycee. \"Here, give me your hand.\"\n\nPussy placed Jaycee's hand under hers, just above his beltline. His skin was silky and hot. She could feel firm muscle as Pussy's hand led hers on a guided tour of a torso that felt as if it had been carved from something warm, firm, and delicious. He felt so solid, like he was a pot roast the size of a double-door refrigerator. Pussy guided her hand below his waist, and soon Jaycee's palm was gliding over a bulge so large it scared her. It was like he was smuggling two Coke cans down his pantleg.\n\n\"Don't worry! He's so gentle with it!\" she said, bending to eye-level. Her eyes laughed like they'd heard a dirty joke.\n\n\"Until you tell him not to be.\"\n\nShe bit Jaycee's bottom lip between her perfect white teeth, as carefully as if it were a water balloon, holding Jaycee's gaze the whole time.\n\nShe released Jaycee's lip and said, \"Isn't that right, Mister Daddy?\"\n\n\"Yes, Pussy.\"\n\nHis voice wasn't what Jaycee had imagined. It was a buttery and deep with a hint of bassy gravel. It was like honey dripping from a lion's mouth.\n\nHe sounded flirtatious, too. Jaycee had expected a more monotone reply, but his voice had slid out like smoke, with a curled lip and a winked eye.\n\n\"Jaycee, why dont you stand up so we can get you dressed,\" said Pussy.\n\n\"Give her a hand up, Mister Daddy.\"\n\nHe bent and hooked his hands under her arms, lifting her to her feet with all the effort of a parent lifting a toddler. His hands were warm and firm as he slid them down to her waist, holding her steady.\n\n\"Jaycee, have you ever used a safe word during sex?\" Pussy asked.\n\n\"Yes.\"\n\n\"What's your safe word?\"\n\n\"Pickle.\"\n\n\"Mister Daddy is going to get you into costume. From here on out, if you're uncomfortable, use your safe word. I may ask you at intervals if you'd like to use your safe word. Please be honest. Mister Daddy and I value honest communication.\"\n\n\"Mister Daddy, why do we value honest communication?\"\n\n\"Because communication is the first ingredient of great sex, Pussy.\"\n\n\"Very good. Take off her dress.\"\n\nHis hands trickled over her hips, until his fingers hooked under the jagged hem of her ruined Sexy Witch dress. He was bent over her like she was a garden gate, and he was reaching for the latch.\n\n\"Slowly.\"\n\nHis bare chest pressed against her face as he inched the dress up her thighs. He smelled like vanilla, and cinnamon, and leather, and sweat. His fingernails skated aching lines along her lonely skin. She missed being touched.\n\n\"What's the second ingredient of great sex, Mister Daddy?\" asked Pussy.\n\n\"Enthusiastic participation, Pussy\"\n\nThe hem was just below Jaycee's crotch. Pussy slid her hand underneath the dress and traced a fingertip along the groove in Jaycee's panties like she was rubbing dirt off an artifact.\n\n\"Is that a little enthusiasm on my finger, Jaycee?\" She licked her fingertip like she'd just pulled it from the batter bowl. \"Because it tastes like enthusiasm.\"\n\nPussy stood and lifted the dress over Jaycee's breasts, then reached around and unhooked her bra-strap with expert dexterity. She slid her hands under the cups. Her nimble fingers teased and flicked, pinched and rubbed.\n\n\"Those feel enthusiastic, Jaycee.\"\n\nJaycee was shivering, but no longer from fear.\n\nMister Daddy peeled the dress over her head and dropped it to the floor. Pussy knelt and scraped Jaycee's panties down over her knees and puddled them at her ankles.\n\n\"Step out.\"\n\nJaycee lifted her feet one at a time as Pussy pulled the underwear away. She was very aware that she was naked.\n\n\"Mister Daddy, what's the third ingredient of great sex?\"\n\n\"Eye contact, Pussy.\"\n\n\"That's right, Mister Daddy.\"\n\n\"Jaycee, I'd like you to stand with your feet shoulder-width apart and maintain unbroken eye-contact with Mister Daddy.\"\n\nJaycee's heart was racing as she shifted her feet and stared beyond the mask, into eyes that were the color of rich iced tea.\n\n\"Let's try out that communication. From now on, why don't you respond to my commands and questions with a 'Yes, Pussy' or a 'No, Pussy.' Ok, Jaycee?\"\n\n\"Yes, Pussy,\" said Jaycee, like a defendant before a judge.\n\n\"Mister Daddy? Why don't you see how hard you can get Jaycee's pretty pink nipples,\" Pussy said from her knees.\n\n\"Yes, Pussy.\" A hint of a smile.\n\nJaycee could feel the heat of his eyes on hers, could see how much he wanted to touch her. Could he see how much she wanted to be touched? His large fingers were nimble as he began to stroke, pluck, and tease her.\n\nA hot, wet, almost electric shock caused her eyes to widen, as Pussy's tongue began to lap between her thighs. She was breathing as if she were jogging uphill. The sounds from between her legs became wetter. Her nipples were like pencil erasers between his fingers.\n\nMister Daddy bent until his forehead was touching Jaycee's, their eyes inches apart. She looked up at him, intense and dripping with passion. Jaycee felt like she'd been plugged into an outlet. She could feel Pussy's hot, wet mouth and tongue working her, almost frantically. Her legs began to shake. Mister Daddy's fingers pinched harder --firm, but not cruel, like he was holding something he wanted glued back together. He plucked at the hard little cylinders as if he were pulling lint from a sweater.\n\nHer orgasm struck like lightning, and she gasped as the first wave passed over her. Her toes curled; her knees quivered. Every lap of Pussy's tongue or brush of Mister Daddy's finger brought another gasp and another wave. Throughout it all she kept her eyes locked on the big man and his eyes behind the mask, feeling him fuck her with his gaze. She wanted him inside her the way a junkie's vein wants a needle.\n\nSoon the waves ebbed, and Jaycee leaned into Mister Daddy like a boxer in the clinch, panting like she'd just jumped hurdles. Her eyes bored into him. Her fingers were claws pressed into his chest like she was writing her name in cement.\n\nPussy stood, trailing light fingers up Jaycee's curves as she did so.\n\n\"Looks like we're making friends up here,\" she said, running a hand up Jaycee's neck, her other hand blazed a ticklish trail across Jaycee's abdomen.\n\n\"Mister Daddy, I think Jaycee would like to be kissed. Would you like to be kissed, Jaycee?\"\n\nA long beat.\n\n\"Yes, Pussy,\" she croaked.\n\n\"Well let's use our communication skills and tell Mister Daddy what we want. Say 'Kiss me, Mister Daddy.'\"\n\nAnother beat.\n\n\"Kiss me, Mister Daddy,\" said Jaycee, finally, her voice husky.\n\nHe took her face between his hands and began kissing her as if her mouth were unexplored territory that he was mapping with his tongue. She moaned a little each time he pressed and teased her. Soon she was trembling again. She hadn't shivered from arousal since she was a teenager, but she was shaking like the living room was a walk-in freezer.\n\n\"Let's get her in that teddy, Mister Daddy,\" said Pussy.\n\nHe disengaged his lips like he was playing Operation and her mouth was the wishbone. He plucked the lingerie from the couch and knelt in front of her. She placed a hand on his massive shoulder as she stepped each foot into the lace, like a child stepping into a swimsuit.\n\nPussy turned her back on the pair and pointed at a camera on a tripod like a dealer signaling a pit boss. She walked the few steps to Jason's rack and removed the bag from his head in one motion, as if she were swiping it from a store shelf.\n\nA man in black placed the camera a few feet from Jason's face. In the viewfinder, his panicked eyes and tear-streaked cheeks filled the frame. A U-shaped bracket wrapped around his throat, just below his jaw. The arms of the 'U' extended halfway up his skull, where a thick headband attached, locking Jason's head in place. The bracket was attached at the other end to a telescoping base, allowing the head to be raised or lowered while remaining immobilized. It was adjusted so that his head was high, and neck extended, like a dog on-point.\n\nPussy bent down to whisper in Jason's ear.\n\n\"Remember our conversation, Jason. Not one sound.\"\n\nAcross the room, Mister Daddy was adjusting the pasta-thin fabric harness so that it followed the curve of Jaycee's breasts.\n\n\"Ella se ve bien, \u00bfno es as\u00ed, Jason? Muy follable. \u00bfTe arrepientes de no poder follarla por \u00faltima vez?\" Pussy said in Jason's ear, but for the benefit of the camera.\n\n\"Oh,\" she mocked, \"Did fucking my boss's wife not teach you enough Spanish to understand me?\"\n\n\"I asked if you regret not fucking her one last time. Oh, well. Too late. Now you'll just have to make do by watching Mister Daddy fuck her. He's so good. She's going to cum so hard. Already has once, I think. Enjoy it, Jason. This is the closest you're going to get to having your cock in a woman ever again.\"\n\nAcross the room, Mister Daddy had turned Jaycee so that she was facing the couch, her back to everyone, while he fastened the lace choker at the nape of her neck. Jaycee was surprised at how gentle and nimble his every movement seemed. It was if he were dressing her and petting her at the same time, and she wasn't quite sure which was which.",
        "Pussy stepped in front of Jason, blocking Jaycee's eyeline, but not the camera.\n\n\"Turn around, Jaycee. Let's see you.\"\n\n\"Yes, Pussy.\"\n\nShe turned and faced the room.\n\n\"Oh, yummy!\" said Pussy! \"I wanna eat you like a Girl Scout Thin Mint! We're almost there. But we still need shoes. Mister Daddy, do you think you can keep Jaycee occupied while I find some shoes?\"\n\n\"Yes, Pussy.\"\n\n\"You may speak freely while I'm gone.\"\n\n\"Thank you, Pussy.\"\n\nPussy's shoes tip-tapped through the doorway and back down the hall toward the bedroom. Jaycee couldn't help but glance behind where she'd been standing. She saw Jason, without the hood, staring at her with eyes the size of baseballs, spit dripping from the pink ball gag in his mouth. He looked beyond terrified, like a pig being readied for the spit. Her heart broke.\n\nMister Daddy shifted to his right, blocking her sight line.\n\n\"He's not even there, Jaycee,\" Mister Daddy said. \"He's just a memory that you can still see. He stopped being there a while ago. He stopped being there when he started planning to kill you. He stopped being there when he fucked my boss's wife instead of you. He's just the ghost of someone you used to know, Jaycee. He's not real anymore. He's not part of your present. He's not part of your future. He's got no future. He's just the mirage of a person you haven't known in a long time.\"\n\nHe kissed her again. If the first time had been as urgent as teenagers in a backseat, this time was as gentle as two kids in a prom photo. It was soft, sweet, and tender. His hands stroked her hair, ran down her face, teased along her throat. She wrapped her arms around his waist like it was the mast of a ship in a storm.\n\nShe couldn't see the hot tears pouring out of the corners of Jason's eyes, but the camera transmitted them in high definition to a small monitor, sitting on a stainless steel shelf, bolted to a wall, in a cell in Altiplano prison. Jason made no sound.\n\nJaycee didn't even hear Pussy click-clack back up the hall. She just appeared in the doorway holding a pair of Jaycee's green suede, peep-toe stiletto booties in one hand, and a pair of ribbed, thick, black thigh-high tights in the other.\n\n\"Think I found just the thing for our lassie to wear while you fuck her, Mister Daddy,\" she said.\n\nShe stalked across the room with all the liquid grace of the cat she pretended to be.\n\n\"Jaycee, why don't you sit on the couch, so Mister Daddy and I can finish dressing you.\"\n\n\"Yes, Pussy,\" she said.\n\n\"Such a quick learner!\"\n\nJaycee eased herself down into the cushions and Pussy and Mister Daddy took up positions kneeling on either side of her. Pussy handed him a stocking.\n\n\"Let's dress her up pretty, Mister Daddy,\" she said.\n\nTeasing fingers and fabric inched their way up Jaycee's legs, until the thick stockings were halfway up her thighs. Mister Daddy put a hand on each of her knees and spread them apart with a slowness that made her ache and twitch. He kissed his way up the inside of her thighs, then pulled aside the lace between them with one large finger. He began to flick and tease her with his tongue. She barely felt Pussy zipping on her shoes.\n\n\"Eye contact, Jaycee. Watch him while he eats your pussy. Let him see how much you like it.\"\n\nPussy lifted one of Jaycee's legs by the sole of her shoe and draped it over Mister Daddy's shoulder. She did the same with the other, crossing Jaycee's feet on his back.\n\nPussy walked to one of the cameramen and whispered in his ear. He moved up until he was a foot away from Jaycee, then panned back and forth between her face and Mister Daddy's between her legs.\n\nPussy moved to the man she'd called 'Green' earlier and whispered again. He moved to the rack and rolled Jason forward until he'd halved the distance to the couch, then moved the tripod and camera so that they were focused on Jason's face once more.\n\nPussy moved to the couch beside Jaycee, then began to run a hand over the lace and thin cordage at her breasts. With the other hand, she hooked a finger in the lace choker, tugging lightly on it, in a sweeping motion, as if she were loosening a tie.\n\n\"Jaycee, do you want to use your safe word?\"\n\n\"No, Pussy.\"\n\nJaycee's gaze stayed fixed on Mister Daddy's eyes, staring up at her from behind the mask between her thighs. Pussy nibbled on her earlobe and kissed her neck, sending shivers down her spine. Between her legs, Mister Daddy lapped, and sucked and teased until Jaycee was bucking her hips, pushing her pelvis up toward his mouth.\n\n\"Jaycee, do you want to get fucked?\"\n\nA long pause.\n\n\"Jaycee, do you want to use your safe word?\"\n\n\"No, Pussy.\"\n\n\"Jaycee, do you want to get fucked?\"\n\n\"Yes, Pussy.\"\n\nPussy reached into her little pink bag and removed a small bottle.\n\n\"Ok, Mister Daddy.\"\n\nHe straightened at the waist, disentangling himself from Jaycee's long, ivory legs, and unbuttoned the fly of the mariachi pants. Jaycee felt like someone about to leap from the high dive. What he pulled from the pants was equal parts breathtaking and terrifying. Like everything else about the man's body, it was perfection, but sized up to an almost ludicrous degree. It wasn't quite the size of two Coke cans, but it wasn't that much smaller, either. It was so hard it was pulsing and dancing.\n\nPussy snapped the lid open on the tiny bottle, drizzling lube over the top of his penis like it was mustard on a Hebrew National. Mister Daddy began to stroke himself slowly. Pussy stood and walked around him to the cameraman, whose lens was pointing directly at the large man's member.\n\n\"Stay on her face when he puts it in,\" she whispered in his ear.\n\nJaycee felt his thumb slide the lace crotch of the teddy to the side. He began to slide his cock back and forth through the groove of her vulva, teasing her with slow, heavy friction every time the head rubbed over her clit. It was so big, and hot, and hard. Jaycee hated herself for wanting it so badly.\n\nPussy had been right: he was gentle with it. He entered her like she was a landmine he was trying to unearth. Even still, by the time the head disappeared inside her, her eyes were wide, more with shock than with pleasure. For however large it looked, nothing prepared her for how massive it felt.\n\nHe worked it in an inch at a time, backing in and out with slow, rhythmic strokes. When he finally buried the entire length inside of her, she was in awe of not just the length or girth, but the weight of it. She could feel it laying heavy inside of her. It felt like getting fucked by a sandbag. He pulsed with his hips, still buried to the hilt, letting her get used to the feel of it. The oscillation of weight, pressure, and friction inside of her began to feel less intimidating and more delicious.\n\nAs she began to warm up, he lengthened his stroke, and soon the full shaft was moving in and out of her like a piston. She could feel the ridge of the massive head snag the bump of her G-spot on every stroke, and she began to make a little involuntary noise every time it happened.\n\n\"I think she like it, Mister Daddy!\" said Pussy. \"Does that feel good, Jaycee? Do you like the way Mister Daddy fucks you with his big cock?\"\n\n\"Yes, Pussy.\"\n\n\"Look right here in the camera and say, 'Fuck me, mister Daddy.'\"\n\nAs soon as Jaycee did as she was told, Mister Daddy picked up both the pace and the intensity. With every percussive slap of skin-on-skin, Jaycee let out a little moan. She could feel the warm electricity building inside of her and she began to squirm and fidget.\n\n\"Why, I think you're going to fuck the cum out of her pretty pussy, Mister Daddy! Fuck her harder.\"\n\n\"Yes, Pussy.\"\n\nHe began to move in and out of her with jackhammer frenzy.\n\nIn the camera's viewfinder, Jaycee's eyes squinted, her mouth made a frantic little 'o,' and her breath was flowing in and out in short, hard little gasps.\n\nPussy reached down and began to rub Jaycee's clit like she was trying to start a fire. Jaycee's hips began to dance, thrusting her toward the delicious friction. She began to make a noise like someone stubbing a toe, repeatedly, until there was one final cry --a sort of hybrid grunt-- and Jaycee yelled out, \"Fuuuuuuuuuuuuck!\" as the orgasm took her.\n\nMister Daddy slowed his pace gradually, like a carnival ride coming to a stop, until he was parked, motionless and heavy inside of her. Waiting.\n\nPussy knelt and peered between Jaycee's legs.\n\n\"You're dripping like a bathroom faucet, Jaycee. I think you liked it.\"\n\nJaycee, too winded and overcome to speak, just nodded her panting head, her eyes closed.\n\n\"Ok, Mister Daddy.\"\n\nMister Daddy withdrew from her, leaving Jaycee feeling empty and cold. He moved like a magician's assistant in front of her, screening her view of Jason, his massive cock still twitching and hard in her eyeline. She looked down.\n\nPussy walked to Jason's side, bent down, and began to hiss in his ear.\n\n\"His dick touched parts of her pussy that your bug-fucking cock never knew existed, Jason. Did you hear her scream when she came? Did she scream like that for your needle-dick? I'm betting not. Never even mentioned her safe word, huh? She fucking loved it, Jason. Was it good for you too? I hope it was, because nothing from here on out will be, perrito co\u00f1o. You belong to me now. When you leave here tonight, you're going to Hell, and I rule there.\"\n\nPussy stood and turned toward the camera that led back to her boss's cell. She cocked her head and flashed an inquisitive thumbs up at the red light on the front.\n\n\"\u00bfSomos un buen, jefe?\" she asked.\n\nSeconds passed before one of the silent men in black put a hand to his ear, then gave Pussy a thumbs up.\n\n\"Empalco, chicos,\" she said.\n\nThe men began moving around the room, breaking down equipment, turning off lights, and packing cameras away into cases. Two of them lifted a large box that looked like a road case for a rock band and dropped it wordlessly over the cart where Jason was strapped, locking a half-a-dozen latches at the bottom with ominous clicks.\n\nThis accomplished, Mister Daddy buttoned himself back into his pants, retrieved his jacket, and disappeared through the living room doorway without so much as a backward glance.\n\nPussy also paid Jaycee no attention, but talked in firm, clipped Spanish, both to the silent men and into a pink phone she held at her ear.\n\nIn less than ten minutes, the case containing Jason was the only piece of 'equipment' left in the room.\n\nJaycee's sexual euphoria had faded by the time the crew had finished load-out, and rivulets of silent tears coursed down her face as she sat, hands between clamped knees, head down, waiting on the couch for whatever would come next. Despite herself, she worried about what would happen to Jason. She had heard stories of what the cartels did to people. No one deserved that. And part of her still loved him. Even now, she wanted to save him. She didn't want him to die.\n\nMister Daddy reappeared in the doorway (wearing his hat) as Pussy put her phone into her pink bag. Jaycee felt apprehensive, like a kid outside the principal's office.\n\nThis is when they kill me, she thought.\n\nPussy said, \"Well, Jaycee, I think that does it.\" She turned toward Mister Daddy. \"It's time,\" she said.\n\nHe crossed the room on dancer's feet, handing Pussy a manila envelope.\n\n\"This is the evidence we talked about,\" she said, holding it out toward Jaycee. \"Remember, wait until morning, and then call the police. Don't have the money in the house when you do. Lock it in your car. Hidden. Tell the truth about everything --we barged in, we showed you a video, we left you evidence, we took your husband, told you to wait to call the police-- just leave out the movie and the money. Be very smart in how and when you spend the money, Jaycee. Don't attract attention to yourself, and everything will be fine. Ok?\"\n\nJaycee nodded, still crying softly.\n\n\"Are you going to kill him?\" Jaycee asked, unable to stop herself. She panicked as soon as she asked the question.\n\n\"I told you, I'm not in the murder business, I'm in the sex business. That's all you need to know.\"\n\nPussy flashed a look up at Mister Daddy and he turned toward the case containing Jaycee's former husband, rotated it toward the doorway and began to roll it out.\n\nShe turned back to Jaycee.\n\n\"Remember. Move the money before you call the cops. Then get on with your life, Jaycee. I know that this has been a traumatic day for you, but where I'm from, it wouldn't even be a trauma worth mentioning. You can get over this. Past doesn't have to dictate future. Take care.\"\n\nShe turned on her tiny pink toe and click-clacked toward the door.\n\n\"Poor Mr. Snickers!\" she said in the living room doorway. \"No fun for you, huh, fella.\"\n\nOut in the hall, beyond Jaycee's view, the dog barked once.\n\n\"How do you like it, Mr. Snickers?\"\n\nA single bark.\n\n\"That's right!\" she squealed. \"You like it rrrruuuff!\"\n\nJaycee couldn't help herself.\n\n\"Why 'Snickers?'\" she asked Pussy. \"I mean, he's so white. Snickers are brown.\"\n\nPussy turned a level gaze and a tiny smirk in Jaycee's direction.\n\n\"Oh, I guess you could say it's an inside joke that stuck.\"\n\nShe began to laugh and turned back toward the dog and the front door.\n\n\"C'mon, Mr. Snickers, let's go make a movie!\"\n\n\"Ruff!\" said the dog.\n\n\"That's right,\" Pussy answered.\n\nShe pushed open the storm door and the dog trotted out into the dark Autumn night. She followed behind him, but not before dipping her hand into Jaycee's candy bowl and plucking out some favorite wrapper that she had spied.\n\n\"Goodbye, Jaycee,\" she called over her shoulder, just before the storm door clacked closed.\n\nJaycee counted to thirty, then ran to the front door, moved the table, and closed it with a thud, flicking the deadbolt with her fingers. She walked back to the couch, collapsing into a pile once she reached it. She cried for a long time, mourning her former life, her shattered dignity, her failed marriage, and the husband she hadn't had time to stop loving yet.\n\nWhen the tears receded, she slid onto the floor, next to the briefcase, still open and glittering, and began to count the money."
    ],
    "authorname": "PussyKandy",
    "tags": [
        "dressing",
        "femdom",
        "kink",
        "latex",
        "literary erotica",
        "threesome",
        "voyeur"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/pussy-kandy"
}