{
    "title": "Surefoot 05: Secrets & Lies Ch. 02",
    "pages": [
        "USS Surefoot, Deck 1, Captain's Quarters, 1800 Hours:\n\nCaptain Hrelle reached down into his bowl and drew out a dark purple, bulbous fruit sprinkled with quinoa. \"What in the Seven Hells is this thing?\"\n\nSitting across from him, Kami was leaning back in her own chair, cradling a bowl of her own. \"Betazoid uttaberries. If you don't like them, don't eat them, there are plenty of other different types of fruits in there.\"\n\nHe dropped it back into his bowl, and then looked at hers, sniffing. \"You don't have to have the same as me, just to be supportive. You could have got some grilled shuris sticks.\"\n\n\"Oh? So you could try and charm some of them off me? Of all the things you could charm off of me-\"\n\n\"You're not really enjoying this rabbit food, are you?\"\n\nShe smirked. \"I admit it's an acquired taste, but it's healthier than a purely carnivorous diet. You know, there's a reason Caitians end up with more heart-related problems than they should, even in this day and age.\" She regarded him. \"And I want you to be around for a long, long time. You've got a good example to set for future generations.\"\n\nHe looked back at her. And for the first time since Dr Ling put him on this stupid diet, he began to seriously consider giving in to the inevitable.\n\nThen the monitor chimed, and the voice of Lt. Abed from the bridge filled the room. \"Captain, sorry to bother you, but I have a visual call from Captain Vera Wallachek of the Beholder.\"\n\nHrelle looked to Kami again before setting aside his breakfast and sitting up. \"Put her through, Lieutenant.\"\n\nSeconds later, the table monitor lit up with the image of a middle-aged woman with copper-red hair, a round freckled face and pert nose. She smiled. \"Captain Hrelle? Captain Wallachek here.\"\n\n\"Morning, Captain, it's a pleasure to put a face and voice to the name. We'll be there in a few hours. What can I do for you?\"\n\nNow she looked a little embarrassed. \"Firstly, you have to call me Vera. Secondly, you have to let me apologise for this inconvenience. We have a new crewmember who's barely started shaving, who misread some environmental readings while the rest of us were off-duty, and sent out that distress signal.\"\n\nHrelle grunted. \"We have a few onboard who might have done the same too under the wrong circumstances, Vera, there's no need to apologise. And please, call me Esek.\"\n\nThe woman smiled. \"Don't mind if I do. I've heard a lot about you. It's going to be a pleasure to meet you in person.\"\n\n\"Thank you; I hope I live up to whatever you've heard. You do understand why we still have to come along and do a quick check, don't you?\"\n\n\"Well, Esek, I won't pretend that I'd rather be continuing on my way to Qullik with our shipment and make our bonuses for an early arrival-\"\n\n\"We'll try to minimise the disruption, Vera. We have some cadets we'd like to put through their paces, running a few inspection sweeps and so forth. Just an hour or two, tops.\"\n\nWallachek leaned forward, resting her chin on her hand. \"Two hours? Oh, you'd better keep me properly distracted all that time, Esek, or I'll be chewing the bulkhead.\"\n\nHrelle kept facing the screen, but from the corner of his eye caught the amused expression on Kami's face, before he finally responded. \"Well, how about a beach party?\"\n\n\"Excuse me?\"\n\n\"We've just had installed one of the new holodecks, it's small and primarily for cadet training, but it's still good for recreation. You and your crew can come over for some sun and snacks? A little thank you for allowing us to delay you?\"\n\nVera leaned back, crossing her arms over her chest. \"My crew, huh? I was hoping for something a little more... personal... for us. But my crew has been hauling ass almost non-stop for the last three months. I suppose they could do with a bit of a break.\"\n\n\"Fine. We'll be there at 2000 Hours, and the party will start at 2100. Bring your swimsuit.\"\n\nVera grinned. \"I never wear one. Wallachek out.\"\n\nThe screen darkened, and Hrelle looked to Kami. \"What? Was that inappropriate?\"\n\nThe Caitian female lifted up her spoon again. \"Not at all. But I have a feeling Captain Wallachek was expecting less Beach Party and more Bump and Grind. Maybe your reputation as a horncat has exceeded you?\"\n\n\"Reputation? I don't have a reputation!\"\n\nBut he felt himself flush. And it must have shown on him, because Kami was chuckling now.\n\n*\n\nDeck 3, Shuttlebay:\n\nLt. Velkovsky was checking her PADD as she ran through the pre-flight checklists on the three Surefoot shuttles, with Flight Specialists Giles Arrington, Rina Chaudry and Wileves Drill in tow. \"The Norkova-class freighter's hangar bay is large, as they're usually taking on Type-9 cargo shuttles. It also has a fly-through design, so don't go in too hard and too quick or you'll end up out the other end.\"\n\nBeside Giles, Drill, a Bolian female who looked to him like Neraxis' younger sister (assuming that wasn't racist) elbowed him. \"Good advice at any time, huh, Giles? You leave Sasha happy while you were away?\"\n\nHe blushed and ignored her, allowing Chaudry to chide her. \"There's no need to be rude, Wileves. There's more than enough of that going around.\"\n\n\"Jealous because Jared hasn't shown any interest in you, Rina?\"\n\n\"He may be my Squad Leader, but that doesn't mean I have to approve of his actions and attitude. First Sasha, then Thykrill, Soolamea, Yeager-\"\n\n\"He never got anywhere with Sasha,\" Giles assured her, hating the conversation but not able to just leave the accusation unanswered. Wasn't there anything else to talk about onboard?\n\n\"I believe you,\" Drill added. \"I think he's all talk. Soolamea says she didn't let him get anywhere in her action-\"\n\n\"Is this work boring you three?\" Velkovsky asked. \"Because you can always sign up for the Merchant Fleet. Hell, you can probably hop onto the Beholder before they leave.\"\n\nThe cadets went silent - and Giles frowned with thought. Velkovsky was right; the Merchant Fleet was amazingly flexible with their standards and practices when compared with Starfleet. If he wanted, he could probably get himself a berth onboard the Beholder - or at least, get himself passage to a civilian station where he could get a berth with another ship. He certainly had the qualifications and experience.\n\nHe could start a new life, out here, away from his family and their nagging. Away from hurting Sasha again. Away from the guilt over deceiving Captain Hrelle.\n\nIt was more tempting than he expected.\n\n*\n\nDeck 1, Briefing Room, 1930 Hours:\n\nSasha stood on one end of the line, having made sure that Gamma Squad's leader, the Vulcan male Falok, was between her and Beta Squad's Jared Miro, from the moment they entered the room. But from then she stayed focused on what the senior officers were saying, determined to get back on track and make up for her earlier aberrant behaviour.\n\n\"The Nokova-class freighter is a modular design,\" Captain Hrelle explained, as the related images appeared on the screen behind him. \"With the modules customised for regular cargo, passengers, liquids and so forth, depending on their job; The modules can be switched out at various ports depending on the type of mission. The Beholder is currently transporting deuterium in its three modules to the Qullik mining facility. The forward living sections and the aft engineering sections are connected by catwalks that run around the modules.\"\n\n\"I have compiled individual assignments for each of the three squads,\" T'Varik continued. \"As we do not wish to delay the Beholder any longer than necessary. The three squads will fly over in each of the Surefoot's shuttles and perform standard docking manoeuvres in the freighter's substantial hangar bay. From there, the squads will reorganise, based on the needs of your assignments.\n\nSquad Leader Hrelle, you will supervise the Engineering Specialists with the safety inspections, focusing on the deuterium storage tanks in the midsection, but do not neglect the main engineering systems. Private companies have a reputation for offering a bare minimum of maintenance on such systems, and if necessary, you can make recommendations as to parts we might replicate on their behalf before their departure.\n\nSquad Leader Falok, you will supervise the Medical Specialists with the health checks of the Beholder crew before they beam over to attend a function hosted by Captain Hrelle. A member of Captain Wallachek's crew is a carrier of Type-D Synthococcus Novae, so ensure the inoculations for the rest of her crew are up to date; the Science Specialists will assist.\n\nSquad Leader Miro, you will supervise the Security Specialists in running sweeps for contraband and other unauthorised items.\" She paused and added. \"It is inevitable that you may find among civilian crew items of... questionable legality. I advise you not to be too strident in your confiscation of the odd bottle of Romulan ale or cordafin stimulants.\"\n\n\"You are expected to be onboard the Beholder by 2010 Hours,\" Hrelle finished, \"And hopefully done by 2200 Hours. Then you can come back and enjoy the beach party on the holodeck. Dismissed.\"\n\nSasha led the Squad Leaders out of the room, prepared to proceed straight to the hangar bay and summon Alpha Squad, and maybe even have a quiet word with Giles-\n\n\"Sasha,\" came a familiar, unwelcome voice from behind.\n\nShe never stopped walking. \"I'm busy, Jared. So are you.\"\n\nJared caught up with her and grabbed her forearm. \"Wait-\"\n\nShe froze, glaring. \"Let go of me.\"\n\nThe Argelian frowned. \"You can't keep this up, girl-\"\n\nShe turned to a bemused-looking Falok. \"Mr Falok, you are a witness: Mr Miro put his hands on me, I told him to release me, he has refused. If he continues to hold onto me, I will be lodging formal charges of physical assault against him. Will you corroborate my account?\"\n\n\"I will.\" The Vulcan looked at Miro. \"I would strongly advise that you do as you are asked.\"\n\nMiro hesitated - but then released Sasha. \"I don't mean you any harm-\"\n\n\"You're telling people we slept together when we didn't. That's pretty harmful.\"\n\n\"Is this true?\" Falok asked of him.\n\nMiro smirked - though he was flushed. \"Some human women get emotionally overwhelmed when a relationship breaks down, Falok, and would rather deny reality than face it.\"\n\nSasha glared at him. \"I'm going to say this once, Jared: stop lying about me. If you don't, you'll regret it.\"\n\nMiro leered. \"Be careful there, Sasha, or I'll be making formal charges against you for making threats against me, and poor Falok will have to corroborate my account.\" He left the other two Squad Leaders in the corridor.\n\nSasha forced herself to calm down. \"Thank you for your support, Falok. And please accept my apologies for getting you involved in the first place.\"\n\n\"No apologies are required, Sasha. I must admit finding Mr Miro's attitude towards you most perplexing. He appears to continue to pursue you, when his attitude and dialogue suggests he can obtain satisfaction from any number of willing female companions.\"\n\n\"That's exactly it. I don't think he's used to being turned down.\"\n\nFalok raised an eyebrow. \"That is a reasonable assumption. Will you be lodging a formal complaint against him regarding what just occurred?\"\n\nShe breathed in before replying. \"I'll wait until he does something worse. Which is starting to feel like an inevitability.\"\n\n*\n\nHrelle and T'Varik remained in the briefing room, looking at another display, one meant for their eyes only, as T'Varik spoke. \"The communicator is indeed a sophisticated device, far beyond any conventional Starfleet equipment, providing real-time encrypted subspace communication over an indeterminate number of light years.\"\n\nHrelle let his eyes glaze over the schematics. \"But it's definitely Starfleet issue?\"\n\n\"Chief Grev and Lt. Abed made a thorough examination of the components and energy signature. There is also a history file detailing previous communications.\"\n\n\"Has Giles sent anything?\"\n\n\"No. There has been only one transmission, received from Beta Aquilae.\"\n\n\"Where Admiral William Arrington - Giles' father - is based.\"\n\n\"Indeed.\"\n\n\"And Grev and Abed know to keep this under wraps for now?\"\n\n\"They do. I have also kept the source of the communicator a secret, and have returned it to its hiding place.\" She paused, and then asked, \"Do you intend to continue your present tactic of not confronting the cadet?\"\n\n\"I have faith that he'll come to me.\"\n\n\"Faith is hardly a substantial foundation, Captain.\"\n\nHe shrugged. \"Sometimes it's all we have.\"\n\n*\n\nDeck 3, Shuttlebay:\n\nEydiir rested her hand on the medical kit slung under one arm as she strode up to Jonas and Neraxis. \"Have you seen Sasha and Giles?\"\n\n\"No, but I'm sure they're on their way,\" Jonas replied, nodding to some of the other cadets milling about.\n\n\"In the meantime,\" Neraxis added, indicating Kitirik, who was uncharacteristically standing apart from everyone else, pretending to be particularly interested in his science tricorder. \"Maybe you can shake Kit out of his funk? We're not getting through to him.\"\n\n\"Funk?\"\n\n\"Yeah,\" Jonas elaborated. \"He's been withdrawn since Sasha snapped at him in our quarters for asking too many questions. He keeps insisting that there's nothing wrong, but he doesn't have much of a pokerface.\"\n\nThe Capellan straightened up and proceeded towards the errant squad member without another word. \"Kit?\"\n\nThe Qarari turned to her, round red eyes with vertical pupils narrowing, as his mottled green skin flushed. \"Friend Eydiir.\" Then he returned to focus on his tricorder display.\n\n\"Stop this.\"\n\n\"I do not comprehend your meaning.\"\n\nEydiir reached out and snapped shut the tricorder display lid, making him look back at her. \"You're a Seeker. You're also a member of Starfleet. Both identities demand Truth Above All. You're upset over the incident in our quarters, yes?\"\n\nKit lowered his arms, his skin darkening further. \"I talk too much. I ask too many questions. I annoy and embarrass my friends. I must stop this.\"\n\n\"No. You mustn't. While there may be times when it is not always... appropriate to talk about something, this desire of yours to know is a part of who you are. And it's an admirable, and a precious quality. Your friends both accept and embrace this, and we wouldn't want you to change.\" Eydiir drew closer to him, dropping her voice to a confidential whisper. \"Kit, you have already spent far too much time being something you know you were never meant to be.\"\n\nKit's nostrils flared, his eyes darting around him. \"You- You know? Who told you?\"\n\n\"The information about yourself was passed to me as part of my medical responsibilities to the squad; I have of course kept it confidential. But I speak of it to you now: you have been brave and wise enough to finally embrace who you are. Do not give up any of yourself, for any reason.\"\n\nKit seemed to consider her words, before finally nodding. \"Thank you, Friend Eydiir. Thank you.\"\n\nThe Capellan allowed a smile. \"Now, if I know you as well as I think I do, you have the urge to hug me effusively. Hurry up and get it over with.\"\n\nThe Qarari looked up at her - and embraced her warmly.\n\nEydiir sighed. And hugged back.\n\n\"What's up?\"\n\nBoth cadets turned to see Sasha with the others. Eydiir drew back from Kit. \"It's nothing.\"\n\n\"They're engaged to be married,\" Neraxis quipped, looking around. \"Where's Giles?\"\n\n\"Right behind you.\" He drew up to them, nodding and smiling - though his expression became more formal on seeing Sasha. \"So, have we got a mission, Squad Leader?\"\n\nSasha seemed to have to force herself to stay professional. \"We have, and I'll explain while we're on our way, Crewman.\"\n\nNeraxis blew a raspberry at their attitude. \"Oh, this is gonna be a fun trip.\"\n\n*\n\nAlpha Squad's shuttle passed through the atmospheric force field covering the Surefoot's opened hangar bay doors, as Giles guided the shuttle towards the Beholder, a much larger, boxier starship than their own, with a beaked forward section and an aft with three internally-mounted warp engines rather than on nacelles like Starfleet vessels, and two smaller impulse engines on the outside.\n\nSasha turned in the co-pilot's seat to face the rest of the squad, sitting behind her and Giles. \"Neraxis, you'll be working with the other Security Specialists under Jared-\"\n\n\"Well, that's gonna be a frigging joy and a half,\" the Bolian groused.\n\n\"Stow it. You'll be running security sweeps, contraband scans, that sort of thing. Try not to accidentally phaser him in the nuts.\"\n\n\"No promises.\"\n\n\"Eydiir and Kit, you'll be working with the other Medical and Science Specialists under Falok running health and safety checks on the crew and living quarters, and making sure their vaccinations are up to date. Once the health and safety checks are done, most of the Beholder crew will beam over for a holodeck beach party.\n\nIn the meantime I'll be leading Jonas and the other Engineering Specialists running safety checks on the deuterium tanks; once you're done, join us with your tricorders and we'll finish up that much more quickly. And maybe even get back to get some beach time.\"\n\n\"Sounds good to me,\" Neraxis, nudging Jonas. \"Wait 'til you see my bikini.\"\n\nSasha turned her seat around to face forward, though she really wanted to focus on the young man beside her. \"You okay?\"\n\nGiles kept his eyes on the display in front of him, occasionally looking up to the cockpit window at the freighter gradually filling up the space as they approached. \"I'm fine, thanks.\"\n\n\"I, ah, I wanted to talk to you. About us.\"\n\nHis expression tightened. \"Maybe after we're done on the Beholder, okay?\"\n\nShe looked at him, before leaning back in her seat. \"That was easier than I expected. Thought I'd have to twist your arm.\"\n\nHe never looked at her. \"Maybe I've got things to say...\"\n\n*\n\nSS Beholder, Shuttlebay, 2020 Hours:\n\nThe cadets gathered around their respective squad leaders, many aware of the looks they were getting from the freighter crew who were milling about, watching and commenting amongst themselves.\n\nJonas was recalibrating his engineering tricorder for the twelfth time, as Kit stood beside him. \"Friend Jonas, is there some cultural dichotomy between Starfleet and the Merchant Service Fleet? I have heard what I assume is banter among the cadets, and the visual clues I am receiving from the Beholder crew suggests mild derision and condescension.\"\n\n\"To a point, I guess. Those in the Merchant Fleet tend to look on those in Starfleet as being elitist, too concerned with rules and regulations. Those in Starfleet tend to look on those in the Merchant Fleet as being borderline criminal, lax in discipline and not qualified to join up with us.\" He shrugged. \"It's probably worse because we're just wet behind the ears cadets.\"\n\nKit paused, taking a quick check behind one of Jonas' ears, before asking, \"Does it bother you?\"\n\nHe looked up, smiling a little. \"No. I've dealt with them all my life. They got their own way of doing things.\"\n\n\"Have you met anyone who left Starfleet to join them?\"\n\nJonas and Kit turned to see Giles standing there, looking at the crewmen, Jonas answering Giles with, \"Sure.\"\n\n\"And did they treat them okay?\"\n\nJonas glanced at an equally bemused Kit, before replying. \"I think they gave them a bit of teasing, but once you prove your worth to these guys, they soon take you in as one of them. Why?\"\n\n\"Never mind.\" Then Giles walked off.\n\nNearby, Sasha, Falok and Jared were walking up to a red-headed woman in dust-brown workclothes. \"So, you're the Cadet Squad Leaders?\"\n\nSasha took the lead, holding out her hand and smiling. \"Yes, Captain Wallachek. I'm Squad Leader Sasha Hrelle, this is Squad Leader Falok and Squad Leader Jared Miro.\"\n\nWallachek nodded to the two young men, but focused on Sasha. \"Hrelle? Any relation to your Captain?\"",
        "\"My father, Ma'am.\"\n\nThe older woman smiled and winked. \"I'm assuming you get your looks from your mother.\" She indicated the man at her right hand, a lithe human with a dark pencil moustache and rangy fair hair. \"This is my First Mate Mr Gaines, who will supervise the team running the safety checks in the midsection.\"\n\nThen she nodded to a tall, wide-shouldered Corvallen, a hairless, earless humanoid with sectioned, tangerine-coloured skin and ridges beneath its eyes and open nostrils. \"And my Second Mate Arlandh will escort your security team to the fore section. And as I want to get over and meet your very interesting father as soon as possible, I will take your medical team to our sickbay and make sure I'm the first checked over and on my way to your ship.\"\n\nSasha nodded curiously to her, and then to her colleagues, as the group split up - and she offered a final look at Giles, as he remained with the other Flight Specialists with the shuttles. He was acting strangely, even given what had happened lately. Kami had dropped a hint that there was more going on with him than Sasha knew about.\n\n*\n\nDeck 4, Holodeck:\n\n\"What in the Seven Hells are you wearing?\"\n\nHrelle turned in place, swallowing a moment as he took in the sight of Kami in a flimsy, colourful one-piece dress with a slit up the right side, and in the rear to allow her tail access. \"Me?\"\n\n\"Yes, you, Sodbox.\" She strode up to him. \"You're still in uniform! Is that what you wear to a beach party?\"\n\n\"When I'm still on duty, yes.\" He turned around to continue to admire the simulation: a beach of coral-pink sand, stretching out to the horizon in either direction, lapped at relentlessly by miniature waves from a dark blue-green ocean beneath a cloudless azure sky it with a small, strong white sun above. Behind him, a wall of dark green tropical trees formed a perfect curtain to the jungle beyond, Nearby, a huge open barbecue was cooking scores of different types of meats and grilling vegetables on skewers, while tables offered drinks and percussion-heavy music played from nowhere.\n\nHe had been in holodecks before, but they proved to be limited in scope, and he had been warned about not trying to swim out into the ocean or he'd bump his head on the wall before the computer could compensate. It was fascinating; even the scents in the air felt authentic. The scene reminded him of the archipelago on Cait where he had been born and raised.\n\nThen he remembered why he didn't like remembering that, and shook his head. \"My shorts are in the laundry.\"\n\n\"Then go without. You don't think I'll be staying in this thing all night?\"\n\n\"This is only for a couple of hours. They have a schedule to keep, bonuses to earn.\"\n\nShe drew up and rested a hand on his shoulder. \"Is it Captain Wallachek? Having her come onto you? Feeling guilty because of your relationship with Professor Gianopoulis?\"\n\nHrelle frowned. \"I have no relationship with Gianopoulis. And Wallachek was just being friendly-\"\n\n\"Hi, Captain!\"\n\nBoth Caitians turned at the sight of Wallachek, clad in an aquamarine beach dress, cowboy hat and sunglasses, as she and other members of her crew entered, escorted by Ensign Gorman from the transporter room. The visitor strode up and put her arms around Hrelle. \"Such a pleasure to finally meet you, Captain! I've heard so much about you!\"\n\nHrelle felt himself blush under his fur. What was it with human women and him? \"Thank you, Captain. Welcome onboard.\"\n\n\"Thanks! And it's Vera, remember? You promised.\"\n\n\"Yes, Captain,\" Kami said teasingly beside him, patting him on the shoulder. \"You promised. Hi, Vera, I'm Counselor Kami Shall.\" She held out a hand to the visitor.\n\nWallachek offered a tight, polite smile and her own hand. \"Pleasure, Counselor. Are you two, uh, together?\"\n\n\"Us? No! He's my clan cousin. His mother told me to keep an eye on him and make sure he gets laid often.\" She slapped his muzzle playfully and chuckled as she departed, leaving the two captains, one amused, the other embarrassed.\n\nFortunately Wallachek led with, \"I could do with some food, before the rest of my crew finish their medical scans and beam over. How about you?\"\n\nHe nodded. \"Best idea I've heard all day.\"\n\n*\n\nSS Beholder, Sickbay:\n\nEydiir was impressed with both the freighter's medical officer - a gruff, grey-haired human male named Odegard - and the facilities. They weren't as advanced as what would be found on a Starfleet vessel, even one as old as the Surefoot. But they had a comprehensive dispensary, and a medical setup that accentuated long-term independence, a necessity given that such low-warp vessels would be out in the void alone for months, if not longer.\n\nThe Medical Specialists had been busy checking and updating the freighter crew's inoculations, focusing on the carrier of the Type-D Synthococcus Novae strain that caused so much concern, while the Science Specialists went through the medical manifests, checking the inventory and histories. Kitirik looked up from his PADD. \"Respected Doctor, I have noted a sharp decline in your food rations supply.\"\n\nThe doctor folded his arms across his chest and put his feet up on his desk. \"What exactly does that have to do with a medical inspection, Cadet?\"\n\n\"I am writing a report on nutritional issues arising from long-term space voyages, and was obtaining further data. Your vessel was fully stocked before you left your last port, enough for your twelve-person crew for a year, but they are now almost completely depleted.\"\n\nOdegard shrugged. \"Radiation leak spoiled a lot of it; we had to dump the contaminated foodstuffs.\"\n\n\"Radiation? I did not notice any related reports-\"\n\n\"Reports mean fines. Sometimes it's better to look the other way.\"\n\nBeside Eydiir, Beaudine, Gamma Squad's Medical Specialist, drew in a little closer to her. \"So, what are you doing after we're done here?\"\n\nShe eyed him. \"Returning with everyone else to the Surefoot.\"\n\nHe chuckled. \"Well, if you're not interested in the beach party, maybe you'd like to come back to our quarters and watch some episodes of Fat Cat and Lil' Kitten.\"\n\n\"I am not interested in that inane children's show that seems to have gripped the rest of the cadets.\"\n\nHe grinned. \"We don't have to watch it-\"\n\nShe glowered. \"I'm not interested, thank you.\"\n\nNow Beaudine dropped his grin, muttering, \"Guess Jared was wrong about you.\"\n\nEydiir faced him directly. \"What did he say about me?\"\n\nSomething in her expression gave him pause. \"Uh- nothing- it was nothing-\"\n\nShe stepped closer. \"I want to know what he said about me.\"\n\nBeaudine was paling now. \"Really, Eydiir, it wasn't-\"\n\n\"Is there a problem here?\" Falok asked, stepping up to them.\n\nBeaudine answered first. \"It was just a misunderstanding, that's all-\"\n\nThe Vulcan took a stand beside Eydiir. \"Clearly, based on what I overheard just now. What did Mr Miro say about Ms Eydiir?\"\n\nBeaudine began to sweat now. \"He just- it wasn't anything-\"\n\nEydiir scowled. \"If you say that again...\"\n\n\"Was it an allegation that he had engaged in some form of sexual activity with Ms Eydiir?\" Falok asked. \"Because that appears to be an ongoing characteristic with him and certain female members of our crew.\"\n\nNow Eydiir regarded him. \"Who else?\"\n\nFalok breathed in, almost appearing embarrassed to elaborate. \"I have heard him claim to have relations with Squad Leader Hrelle, Cadets Thykrill, Soolamea, Chaudri, Yeager, Counselor Shall-\"\n\n\"The Counselor?\" Eydiir snorted.\n\nA red-faced Beaudine looked between the two of them. \"Hey, I'm not saying I believe him! It's just talk-\"\n\n\"It is disrespectful,\" Falok corrected.\n\n\"And deceitful,\" Eydiir added. \"Mr Falok, are you prepared to corroborate what you have heard should I make a complaint about this?\"\n\n\"Of course. In fact, I had a similar talk with Ms Hrelle about Mr Faro. Perhaps I should speak with him directly-\"\n\n\"Thank you, but no. I will resist the urge to challenge him to a lethal duel, and file a formal complaint following this mission.\"\n\nThe Vulcan raised an eyebrow. \"That might be for the best.\"\n\n*\n\nSS Beholder, Shuttlebay:\n\nChaudri and Drill were talking together beside one of the three Surefoot shuttles parked nearby; occasionally Giles could feel them looking over at him, but he tried to ignore them as he continued speaking with the freighter's Quartermaster. \"And it's as simple as that? An interview and you can be hired?\"\n\nShe was a portly, elderly woman with curly dark hair peppered with grey, and a charming smile as she indulged the young cadet while running through systems checks. \"Well, obviously if you lie about your qualifications and we find out afterwards, expect to spend your time in the brig until our next port. But Captain Wallachek is a pretty good judge of character. You thinking of jumping ship, kid? And if so, you better have a good reason why, 'coz Vera will ask.\"\n\nGiles considered the suggestion. If he really launched into everything that was pushing him towards leaving Starfleet - the pressure from his family, the guilt over spying on Captain Hrelle, the aborted relationship with Sasha - Captain Wallachek would probably drop him like a hot brick. \"It's just not turning out like I thought it would.\"\n\nThe Quartermaster grunted. \"Life never does. Well, if you want to be considered, let the Captain or me know as soon as you can.\"\n\n\"Giles?\"\n\nHe turned. \"Rina?\"\n\nChaudri walked up to him, looking concerned. \"Can we talk?\"\n\nThe Quartermaster excused herself and moved on, as Chaudri continued. \"Are you okay? You've been acting strangely. And...\"\n\n\"And?\"\n\n\"And I'm wondering if you're thinking of leaving Starfleet and joining the Merchant Service? In fact, leaving with this ship?\"\n\nHe started with how accurate her guess was. \"How-\"\n\nBut she shook her head. \"It doesn't matter. What does matter is that you don't make any rash decisions.\"\n\n\"It's not rash, it-\"\n\nBut she held up a hand to cut him off. \"Go talk with Sasha. I know she's involved in what's making you think this way.\"\n\n\"She hasn't done anything-\"\n\n\"I'm not saying she's making you do this. But she deserves to have a chance to hear you before you go.\" She reached out and gave his hand a quick squeeze, before letting go again. \"And if you want to talk, I'm available.\"\n\nHe considered her words, before nodding. \"Thanks, Rina. I'll go see her now.\"\n\n*\n\nSS Beholder, Midsection:\n\nSasha was used to small, narrow corridors on the Surefoot. No one could have a life in Starfleet with claustrophobia.\n\nBut this place was different. The module, designed to safely transport compartmentalised tanks of deuterium slush held at an unimaginably low cryogenic temperatures, possessed catwalks and ladders built more for functionality than comfort, with larger alcoves where displays provided statuses of the liquids within each compartment. It was cold, it was dark, it was narrow.\n\nAnd Sasha had to fight to keep her mind on her job, as the squads' Engineering Specialists Soolamea, Yeager and her own Jonas, moved from display to display, running checks on the interlocks and temperature and pressure controls, while the freighter's First Mate, Gaines, held back, unable to conceal his boredom over escorting a group of children around his ship doing useless work. Soolamea and Yeager had finished up and returned to the ship, but Jonas was being meticulous.\n\nShe looked to Gaines. \"So, is there anything you might be running short of onboard that we can get replicated for you?\"\n\nThe First Mate frowned, his arms folded across his chest as he seemed to consider the offer, before finally responding. \"We could do with an ID-10T component. Think you can get one for us?\"\n\nSasha's brow furrowed as she lifted up her PADD. \"I'll check for you, Sir-\"\n\n\"No, we can't.\"\n\nSasha looked across at Jonas, who was kneeling down in front of the nearest status panel. He looked over at them. \"No ID-10Ts. We can get you some striped paint, glass hammers, wiremesh airlocks and snipe detectors.\" As Gaines chuckled and Sasha looked confused, Jonas explained to her, \"They're all Fools' Errands, played on newbies. The ID-10T component? ID-10T. 'Idiot'.\"\n\n\"Oh.\" She eyed the grinning Gaines with mock admonishment, before her attention returned to Jonas, who was making sounds to himself. \"What's up?\"\n\n\"This is wrong,\" he was muttering.\n\n\"What is, kid?\" Gaines asked.\n\n\"Yes, Jonas,\" Sasha added. \"What's up?\"\n\nHe indicated the panel he had been inspecting. \"The readings for this compartment - weight, volume, temperature, pressure, storage and inspection times - are identical to the one I checked twenty minutes ago.\"\n\nGaines grunted. \"Kid, it's deuterium. It's deuterium in all of them. Of course the readings are gonna be identical.\"\n\n\"Not absolutely identical; there's always slight variations, even by a percentage of a degree.\" He checked again. \"These compartments get filled individually, one at a time, at the processing plants, for safety reasons. Compartment 47-B has the exact same storage time as the other one, 45-B.\"\n\n\"Why would it be like that?\" Sasha asked.\n\n\"Exactly,\" Gaines agreed. \"You're making a mistake, kid.\"\n\n\"I don't think so. It may be that 47-B's status panel is somehow duplicating the data from 45-B, or vice versa.\" He ran his tricorder over the panel once more.\n\nNow Gaines stepped up beside Sasha, looking concerned. \"Listen, we got a schedule to keep, bonuses to make. We literally can't afford to be delayed because snotnose cadet is trying to make an impression-\"\n\n\"He doesn't do that,\" Sasha defended.\n\n\"Sasha?\"\n\nNow she turned. \"Giles? What are you doing here?\"\n\nGiles drew up to her, looking anxious. \"I came to see you. Thought we could talk-\"\n\nBut she held up a hand. \"Wait a minute.\"\n\n\"What? Are you kidding me-\"\n\nShe turned back to Jonas. \"Why do you think one of them would be displaying the readings from the other?\"\n\n\"I don't know, it-\" He rose, moved over to one of the emergency access portholes, and squatted down again, perusing his tricorder.\n\n\"Kid,\" Gaines insisted, sounding annoyed. \"You're making a mistake. Now I want all of you out of here, and that's an order!\"\n\n\"There's no molecular crystallisation I would expect on this given the subzero materials that are meant to be in the container,\" Jonas was announcing, as much to himself as to others. \"And I think there's an independent power system running inside-\"\n\nBehind Sasha, she heard Giles mutter, \"Sash-\"\n\nShe was prepared to ignore him - but she heard a tone in his voice that made him, and Jonas, turn around.\n\nGiles was standing there, hands raised slightly, as Gaines stood beside him, holding a phaser to the boy's head.\n\n\"What the hell is going on?\" Sasha demanded.\n\nThe First Mate's face was taut. \"Told you this was a mistake.\"\n\nSasha raised her hands slightly, non-threateningly, but kept focused on the freighter's First Mate pressing a phaser against the side of Giles' head. \"Put that down. Whatever is going on, we can sort it out-\"\n\nGaines gripped Giles' shoulder as if he was trying to administer a Vulcan neck pinch, but instead pushed the tip of his phaser harder against the younger man's head, all the while staying focused on Sasha. \"Shut up. It's too late to sort anything out. Now, pick up your equipment and start towards the Equipment Storage Area.\"\n\nSasha looked to Jonas, half-kneeling there by the compartment he had just detected containing something other than deuterium slush. The young man collected his gear and stood up, as they turned and led the way down the corridor.\n\nDead centre of the midsection was an open area, an intersection where the other areas could be reached by catwalk or ladder. Gaines led them to a secured metal door, still holding onto Giles but wrapping on the door with the butt of his phaser.\n\nThe door unlatched and swung open, as several large humanoids in generic grey jumpsuits emerged: large, broad-shouldered Nausicaans, bone-coloured, shaggy-haired males with sharp tusks on either side of their mouths and a vertical row of small horns on their foreheads. The one in front looked at the cadets, and then at Gaines, its gravelly voice accentuating the anger in its words. \"What are you doing, letting them see us?\"\n\n\"It's too late, Nunuchk,\" Gaines explained. \"They discovered 47-B.\"\n\nThe lead Nausicaan glanced at the cadets again before replying simply, \"So kill them.\"\n\nThe breath caught in Sasha's throat. What the hell was happening here? Whatever it was, she had to stall them until someone else came along.\n\nFortunately, Gaines sounded as opposed to that idea as she was - albeit for different reasons. \"We can't do that! Something like that would bring Starfleet down on us like an avalanche!\"\n\n\"Not if you make it look like an accident! An airlock breach, deuterium spill-\"\n\n\"Wait!\" Sasha cried out, capturing their attention again, while she focused on Gaines. \"Look, whatever it is you've got hidden down here, killing us is only going to make it worse for you! Because of who we are, there'll be a full investigation, they'll find out! Giving up now can only be good for you-\"\n\n\"Shut up!\" Gaines snapped, his anxiety now threatening to spill out and risk Giles' life, or the rest of them. \"We have to- We have to do something-\"\n\n\"Hey, guys! Where are you?\"\n\nAll heads turned at the new voices, coming from one of the corridors. Gaines started panicking. \"What the hell are we gonna do, Nunuchk?\"\n\nThe lead Nausicaan motioned to his friends and strode forward, stopping and indicating Gaines. \"Move them to the wall! If they talk, kill them!\" Without waiting for the First Mate to take action, he shoved Sasha and Jonas up against the nearest wall before continuing to the open doorway.\n\nSasha listened to the approach of the others - she heard Neraxis' boisterous voice among others - and wished she had the chance to warn them without getting killed.\n\nMaybe that wasn't possible. Maybe she should take the risk. Whatever these men are doing, it could pose a threat to others.\n\nShe glanced down at her combadge. If the walls weren't shielding signals, she would have secretly opened a channel by now and trusted in T'Varik to interpret and respond appropriately.\n\nNeraxis emerged, along with Eydiir and Kit, just as the Nausicaans grabbed them. Sasha watched as the Bolian and Capellan women responded, their respective training in Starfleet Security and her upbringing giving them a fighting chance. Sasha hoped Kit would be smart and not try to struggle, he couldn't-\n\nKit flipped one of the Nausicaans over his shoulder, twisting and striking the other one with his extended foot, before driving his elbow down onto the first Nausicaan's face. He moved with an ease Sasha had never expected from the meek, mild-mannered Qarari Science Specialist. Where did that come from? Had he been taking secret self-defence lessons?\n\nShe had to do something.\n\nWith seemingly everyone else focused on the fight, Sasha bolted down the corridor at the other end from where they came, ignoring the cries from Gaines to stop. She kept moving, kept tapping her combadge, hoping to find some place where her signal could get through and she could summon help.\n\nShe cried out as a phaser beam caught the outside of her right thigh, almost making her slam into the wall before she could fully turn the corner. She forced herself to keep going, still slapping her combadge.\n\nUntil it chirped. It startled her, but she recovered quickly. \"Dad! I mean Captain Hrell-\"\n\nShe was knocked down, Gaines turning her onto her back and pointing his phaser in her face, fury in his expression. He looked ready to kill her.\n\nThen her combadge chirped back. \"Sasha? Is that you? What's up?\"\n\nGaines whispered, \"Make up something, or I'll kill your friends before he can do anything. Understood?\"\n\nSasha nodded, swallowing and fighting her fear and nausea. \"Sorry, Captain. Didn't mean to disturb you.\"",
        "\"You didn't, sweetheart. Why did you call?\"\n\n\"I just...\" She stared up at Gaines, who silently motioned to her to continue. \"Just wanted to say sorry.\"\n\n\"Sorry? For what?\"\n\nShe swallowed again. \"For upsetting you and Mom this morning. I didn't mean to make her cry like that. Will you tell her I'm sorry?\"\n\nAt first there was no reply, and for a heartbeat she feared she was going to get shot.\n\nThen her father responded, \"That's okay, Sasha. I'll speak to her now. Don't you worry. Hrelle out.\"\n\nGaines reached down and snatched the combadge from her chest. \"Smart girl. That'll keep you alive.\"\n\nShe stared up defiantly. \"For how long? Your friends are going to kill us.\"\n\nHer words made him frown, his conflicting emotions clear on his face. \"They're not going to kill you.\"\n\n\"You really believe that?\"\n\n\"I won't let them.\"\n\nNow she grunted. \"And you really think they're gonna listen to you? Even if you're holding the phaser? Guess we know who's in charge.\"\n\nHe glared. \"You have no idea.\" He grabbed her and helped her back up, before marching her back to the others - only to see just the Nausicaans, prompting Gaines to ask, \"What did you do to them, Nunuchk?\"\n\n\"They're in the locker, you spineless human, until we work out what we do with them! Now put her in with them!\"\n\nGaines looked to Sasha, as if seeing how right she might be now. But still he moved her towards the locker door, opening it and shoving her inside.\n\nEydiir and Giles both moved up to her, Giles asking, \"Are you okay? Did he-\"\n\nShe shook her head. \"I'm fine. And I think I got a message to my father.\"\n\n\"You did? How?\"\n\n\"That doesn't matter. We just have to hold out until he can get here.\" She looked to the others. \"Is everyone else okay?\"\n\nThe storage locker was stark, long and narrow; Neraxis, Jonas and Kit stood up, some nursing bruises or holding their arms, Neraxis grumbling, \"Yeah, but I'm kicking myself for not doing better-\"\n\n\"Against four Nausicaans?\" Sasha assured her. \"We're just cadets, not Augmented soldiers.\"\n\n\"Kit might be,\" Jonas joked, looking to his friend. \"That was something out there, Kit.\"\n\nThe Qarari cadet appeared shocked, agitated, in a way Sasha had never seen before with him. \"It was nothing, Friend Jonas.\"\n\nBut Jonas was shaking his head in wonderment. \"I never thought you had that in you! If you didn't go into the Sciences, you could have been a warrior!\"\n\n\"I am not a Warrior, Friend Jonas.\"\n\n\"I know, but I'm just saying-\"\n\nSuddenly Kit was in Jonas' face, the skin beneath his jaw flared in a blackened hue that Sasha had never seen before, as Kit shouted, \"I'M NOT A WARRIOR! I'M NOT A WARRIOR! I'M-\"\n\nHe was shaking, with rage or terror, or both.\n\nThen he turned away, moving into a corner in the far end of the room, his back to them.\n\nThe other cadets stared dumbfounded. Sasha exchanged confused, alarmed glances with Giles, before starting towards Kit.\n\nBut then Eydiir held up a hand to stop her, the other girl's voice soft, sympathetic. \"No. Let me. You think about what we can do when they come for us.\"\n\nSasha nodded, fighting back the urge to argue, her curiosity over the reason for Kit's dismay suppressed for more immediate concerns. \"Can we open any of these lockers? Find tools, weapons?\"\n\n\"They took our tricorders and tools,\" Jonas muttered, still shaking over Kit's outburst. \"And everything in here is secured.\"\n\nSasha nodded. \"Then we'll have to rely on our wits.\"\n\nAnd on her father getting here on time, she added to herself.\n\n*\n\nUSS Surefoot, Deck 4, Holodeck, 2130 Hours:\n\nCaptain Hrelle surprised himself with how well he still danced, considering his age, experience and weight. But then most Caitians were natural dancers, and he remembered how much he enjoyed dancing with his late wife Hannah.\n\nHe could even do it in uniform, and in front of some his amused-looking crew, including Kami. He didn't care; as the old Caitian saying went, \"Dance like no one is watching\".\n\nAnd Captain Wallachek seemed to be enjoying herself too, though he was secretly glad when the latest song did, and she asked, \"Can we take a break? My old bones can't take too much fun.\"\n\n\"I find that hard to believe,\" he replied, motioning her off the wooden dance floor set up in the middle of the party, and escorting her to the drinks tables. \"I bet when you're on shore leave they have to tear you from the dance floor.\"\n\nShe grinned. \"When I'm on shore leave I find better things to do than dance. How about you?\"\n\nHis gaze narrowed at her as he poured them both some drinks. \"That depends on who I find.\"\n\nThey departed from the table, drinks in hand, and moved away from the table and the other partygoers, to a stretch of sand and quiet. The holodeck program had altered, bringing the sun down and reducing its intensity, and making the surrounding sky blush, as birds swooped and circled overhead. Hrelle sipped at his drink before speaking again. \"When I came back into the rest of the Galaxy, I thought of quitting Starfleet and getting my own freighter, going into business for myself.\"\n\nWallachek shook her head. \"I wouldn't recommend it, Esek. We have the creditors always nipping at our heels, ready for the first time we break down and not make a shipment on schedule.\" She sighed, finished off her drink in one go, somehow becoming more sober afterwards. \"I feel guilty for enjoying ourselves when we need to get to Qullik with that deuterium.\"\n\n\"It's hardly your fault. We appreciate your patience. But I think we're almost done. In fact, if you want I'll beam over and finalise everything-\"\n\nNow she stopped and turned to him, putting her arms around him as she looked up into his eyes. \"Oh, I definitely don't want you leaving me. Let your cadets do the cadet things, while the grown-ups to do the grown-up things.\"\n\nHrelle looked around for a place to put his drink - then remembered the artificial nature of it all and just threw it aside. \"This venue is a little crowded for grown-up things.\"\n\nShe grinned. \"You must have your own quarters.\" Her hands moved down him. \"I really want you.\"\n\nHe felt a rush of arousal at her words, her actions. He could-\n\nNo.\n\nHe drew back, confused at her mixed signals. Or maybe he was thinking of Kami, not that far away. \"I'm- I'm sorry, Vera. I have some things to check up on the bridge.\"\n\n\"No wait- don't go- let's have some more drinks- maybe another dance-\"\n\n\"Maybe another time.\" Feeling more disturbed by the moment, he made his way past the partygoers and towards the holodeck exit, feeling the cooler air in the corridor outside.\n\n\"Hey, Sodbox!\"\n\nHe stopped and waited for the inevitable. \"What is it, Counselor?\"\n\nKami drew up to him, the diaphanous ends of her party dress fluttering about her legs and tail. \"What happened? Something go wrong?\"\n\n\"I-\" He felt himself blush beneath his fur. \"I'm not sure. Maybe I wasn't really interested.\"\n\nHer gaze narrowed. \"You don't sound convinced of that. It wasn't because of me, was it?\"\n\n\"No. I mean, sort of.\" He looked down both ends of the corridor before continuing. \"She was saying the right things, making the right moves. But her... scent wasn't in it.\"\n\nKami smirked. \"Humans are different to us.\"\n\n\"Don't tell me about humans, I was married to one for years. I know when a human female is in the mood. Why would she be making moves on me she doesn't mean?\" He eyed her suspiciously. \"Unless you put her up to it?\"\n\nKami folded her arms over her chest, gaze narrowing. \"And how likely do you think that is?\"\n\nHrelle was about to reply, when his combadge chirped. \"Dad! I mean Captain Hrell-\" Then it went dead.\n\nHrelle looked to Kami, waiting for a further response, before finally responding himself. \"Sasha? Is that you? What's up?\"\n\nThere was another pause. Then Sasha said, \"Sorry, Captain. Didn't mean to disturb you.\"\n\nHe frowned, his hackles rising by her words and tone. \"You didn't, sweetheart. Why did you call?\"\n\n\"I just... Just wanted to say sorry.\"\n\n\"Sorry? For what?\"\n\n\"For upsetting you and Mom this morning. I didn't mean to make her cry like that. Will you tell her I'm sorry?\"\n\nHe froze, looked at an equally confused Kami, and forced himself to keep his voice calm as he responded with, \"That's okay, Sasha. I'll speak to her now. Don't you worry. Hrelle out.\" Once his combadge chirped shut, he reactivated it. \"T'Varik, can you get transporter locks on our cadets?\"\n\nAfter a moment, the Vulcan replied. \"All but Alpha Squad. I believe they are in the midsection, where the kelbonite plating around the deuterium tanks is-\"\n\n\"Listen up,\" he interrupted. \"Something's wrong over there. Keep the freighter crew secure in the holodeck, contact all the cadets that you can and tell them to be on alert, and get Abed and Gorman armed and following me over there.\"\n\n\"Captain, what's happening-\"\n\n\"When I know, I'll tell you. Hrelle out.\" As the combadge chirped again, he started toward the transporter room, not acknowledging Kami beside him until he panted, \"You're not coming-\"\n\n\"Kiss my furry ass, you might need someone who knows her scent almost as well as you do.\"\n\nHe didn't have time or patience to argue. His baby was in some sort of trouble.\n\n*\n\nSS Beholder, Midsection Equipment Locker Room:\n\nThere was a bench in the room, secured to the floor, but Jonas had managed to unbolt it and partially disassemble its support struts, offering them to Neraxis and Eydiir as hand weapons.\n\nSasha stood with Giles at the locker room door, peering out the tiny round window in a failed attempt to see what was happening. \"They could be back at any time.\"\n\n\"I know,\" he muttered, fighting back his anxiety. \"We should be ready-\"\n\n\"Giles,\" she started, continuing as she caught his attention. \"I have to tell you something, just in case we-\"\n\n\"We'll get out of this.\"\n\n\"You don't know that.\" She swallowed, her voice dropping to a whisper. \"Giles... I am so glad you were my first. You were patient, gentle, loving...\" She smiled and blushed as she added, \"Enthusiastic. And the only thing I'm sorry about was the way I treated you afterwards. I was scared that I might have ruined what we had.\" She reached out without looking, found his hand and squeezed it.\n\nGiles blushed. \"You don't have to say anything more-\"\n\n\"Look, just shut up and accept that I probably love you.\"\n\nHe looked to her. \"You do?\"\n\n\"Don't sound so surprised. You're sort of lovable. When you're not being a schmuck who gets himself made a hostage. What idiot does that?\"\n\nHe squeezed her hand again. \"I probably love you too.\"\n\n\"Holy Hraxor,\" Neraxis grumbled, gripping the bar like a baseball bat. \"Get a room, after we get out of here!\"\n\nSasha looked to the Bolian as she squeezed Giles hand back before releasing it. \"Yeah, you're right. Kit? Kit, look at me. Please.\"\n\nKitirik had been facing one of the far corners of the room, having calmed down some following a private talk with Eydiir. But he still appeared shocked and ashamed, unable to meet her gaze. \"Yes, Friend Sasha?\"\n\nShe looked once at her Capellan friend Eydiir, who seemed to know more than the rest of them about what Kit was going through, but refused to share it. And Eydiir continued to appear reticent, leaving Sasha to muddle through blind. \"Kit, I don't know why you behaved that way, and right now I don't care. We need to get out of here alive. All of us. Can you do your duty, and function like a member of this squad? Or do you want to chicken out and stay here?\"\n\nHe seemed taken aback by her response. She didn't blame him. She shocked herself with her brusque tone. But she hoped that it would be enough to snap him out of his current state.\n\nKit straightened up, raising his chin and staring her in the eye. \"No, I do not wish to be a chicken. They seem a most... poultry animal.\"\n\n\"Oh dear God,\" Giles groaned.\n\nSasha grunted; that was more like the Kit she knew. She looked up. \"Jonas, can we kill that light?\"\n\nHe looked up and nodded. \"The control is just behind me. Why?\"\n\n\"When they open this door, I want you to put us in darkness. Then Giles and I will rush out using the bench as a battering ram, and Neraxis and Eydiir will follow with those bars. Kit and Jonas... you make a break for it.\"\n\n\"What?\" Jonas protested. \"No! We're not leaving you guys to face them alone!\"\n\n\"And we don't want to have to be distracted keeping an eye out for you two.\"\n\nKit strode forward to stand beside Jonas. \"You will not need to watch out for us, Respected Squad Leader. And if you protest further, I will respectively invite you to kiss my scaly green ass.\"\n\nSasha looked to Giles. \"How do I argue with that?\"\n\nThey were startled as the heavy latch on the door clicked, and Sasha nodded to Jonas while she and Giles flanked the bench and lifted it up like a battering ram. The lights extinguished, and she whispered, \"Get ready... And...\"\n\nThe door slid open, a large silhouette filling the doorway, as she and Giles charged forward, driving the end of the bench into the silhouette and sending him backwards.\n\nThey dropped the bench on the fallen figure, one of the Nausicaans, as Sasha let her training in the Caitian martial arts take over, attacking another Nausicaan and trusting the others to be able to handle themselves.\n\nThere was a loud crash behind her, and she took a second to look and make sure it wasn't Jonas or Kit. But no, it was - Giles!\n\nGiles was on the floor, clutching the side of his head and looking up helplessly as another Nausicaan raised a large cyclospanner to deliver a killing blow-\n\nSomething huge and fast raced out from one of the corridors, roaring as it tackled the Nausicaan standing over Giles, sending it sprawling.\n\nSasha gasped. Her Dad was here!\n\nThen she had the wind knocked out of her by the Nausicaan she had been fighting, throwing her onto her rear - until she looked up to see Kami leaping onto the Nausicaan's back, getting a choke hold around his throat as she snarled, \"Finish him off!\"\n\nSasha did - driving her foot up into the Nausicaan's crotch.\n\nHe collapsed to his knees, clutching his groin as Kami squeezed harder, making the Nausicaan's eyes roll into the back of his head and sending him into unconsciousness.\n\nAs Kami released him ungently, a noise made Sasha's attention return to her father, as Captain Hrelle struggled with the largest Nausicaan - the tide turning when Hrelle caught the Nausicaan's right arm extended. And broke it in the middle with a crack that was immediately swallowed up by the Nausicaan howling in agony.\n\nHrelle didn't stop there, breaking one of the Nausicaan's legs before grasping his opponent's shaggy hair and slamming his head repeatedly into the nearest wall.\n\nA second Nausicaan attacked Hrelle, but swiftly the Caitian spun around and broke his attacker's neck, letting the body fall to the deck.\n\nNow he turned to the remaining combatants, arms extended as if he still had claws, and roared, daring for another to challenge him.\n\nThe distraction allowed Neraxis and Eydiir to retrieve the phasers and herd the other freighter crew together. Hrelle straightened up. \"Is everyone okay? Sasha? Giles?\"\n\nKami helped Sasha back to her feet, as Sasha replied, \"Yes, Sir.\" She smiled. \"Thank you for saving us.\"\n\nHrelle rushed up and hugged her, before drawing back and noticing Kami's dress had been torn in the fight, leaving her left breast fully exposed. \"Sorry, Counselor.\"\n\nShe shrugged. \"Someone mind telling us what is going on?\"\n\nSasha nodded towards a prone Gaines, who didn't look up at him. \"Compartment 47-B isn't holding deuterium. Jonas found anomalies, and then First Mate Gaines pulled a phaser on us. His Nausicaan friends were hiding out here, and were trying to work out how to kill us and make it look like an accident.\"\n\nHrelle looked down at the First Mate, before drawing up to him, reaching down, grabbing him by his hair and lifting him back to his feet, oblivious to his cries. Then he released the man's hair, only to put his furred hand around his throat. Hrelle's voice was a low, dangerous growl. \"Given that you were getting ready to kill my baby girl, I strongly advise you to make your next response a very, *very* considered one: will you cooperate and show us what's in that compartment?\"\n\nHe squeezed the man's throat. Just a little.\n\nGaines nodded.\n\nFootfalls echoed from a corridor, immediately followed by Lt. Abed and Ensign Gorman, brandishing phasers. \"Captain, what's-\" He was momentarily distracted by Kami's dishevelled state. \"Uh, Counselor, are you aware-\"\n\n\"That I have boobs? Yes, Prakesh, I do, but thank you for reminding me.\"\n\n\"Lieutenant,\" Hrelle snapped, recapturing his Tactical Officer's attention again. \"Have Mr Gorman get the dead and surviving Nausicaans in an airlock. Mr Abed, I want you to secure the bridge. Mr Ostrow, can you follow him and piggyback the internal communications here to the Surefoot and bypass the interference our combadges are getting down here?\"\n\n\"Yes, Sir, uh, no problem.\" Too late Jonas found he was staring in the Counselor's direction, and that others saw him staring.\n\n\"Clean thoughts, Jonas,\" Kami advised.\n\nHrelle continued. \"Neraxis, gather any other cadets still onboard and sweep the rest of the freighter, collect any remaining crew and put them into custody. There'll be no brigs, but there'll be airlocks.\" Hrelle released his grip on Gaines' throat. Slightly. \"Now... show us what you're smuggling.\"\n\n*\n\nGaines took them to an emergency access hatch on Compartment 47-B, a circular porthole normally designed for maintenance crew to enter when the compartments were empty to perform safety checks. He was sweating. \"It's not my fault- it was her idea-\"\n\n\"Captain Wallachek?\" Hrelle watched Kit run checks on the porthole's locks, to make sure Gaines wasn't about to commit murder/suicide by having them flood the corridor with sub-zero deuterium slush. \"You're pinning all this on her?\"\n\n\"She made the deal with the Nausicaans! She didn't want to make you suspicious, so she agreed to let your cadets come play over here while she kept you distracted on your own ship.\"\n\n\"Play?\" Eydiir sneered, holding one of the bars like a club near him.\n\n\"You weren't supposed to find anything! Just run your little checks and go back! Why did you have to-\"\n\n\"Be brilliant at our jobs?\" Sasha knelt down beside Kit and helped him remove the porthole. \"Guess we can't help ourselves-\" She reacted at the smell that came through.\n\nHrelle, and nearby, Kami, reacted more profoundly; the scents from within were almost overpowering. He forced himself to keep control as he watched Sasha activate the torch on her tricorder and peer inside.\n\nThe girl paled, drew back, eyes wide. \"Dad...\"\n\nHe dropped to the floor beside her, looking inside now, the smell of sweat, of waste... of some bodies... almost too much. He forced down his response, allowing his superior vision to adjust to the darkness.\n\nThe compartment was barely a metre in height, but wide and deep.\n\nAnd filled with children: humanoids, grey-skinned, hairless, scaled, with deep black eyes and stubby noses and slit mouths. They were dressed in rags, huddled together, staring fearfully at the intruders, drawing back away from the porthole despite the overcrowded conditions.\n\nBeside him, Sasha whispered, \"Who- Who are they?\"\n\n\"Malurians.\"\n\n\"Who?\"\n\nHis expression hardened. \"They used to be a major pre-Federation power in the Alpha Quadrant, advanced when Terrans were barely leaving the proverbial nest. About a hundred years ago, an artificial intelligence called Nomad sterilised the Malurian system and all the life in it, and allegedly threatened to move onto Earth and do the same, before Captain James Kirk managed to destroy it.\"\n\n\"How can- how can an alien device wipe out a whole system of its life?\"\n\n\"I don't know; like most of the outrageous incidents involving Kirk, the details were classified. Anyway, it was believed the Malurians were all extinct, but since then pockets of small colonies have been found scattered, and attempts have been made to incorporate them to ensure the survival of their race.\"",
        "She checked her tricorder readings. \"There's between eighty and a hundred in here. Some have died. Others are sick. Captain, it's the Synthococcus Novae virus. They're infected. And they definitely do not have sufficient immunity.\"\n\nMother's Cubs... He felt his heart race as he looked into their confused, terrified faces. \"Go in, start leading them out. Be gentle with them, Sasha, they've been through a lot.\"\n\n\"Yes, Dad- I mean, Sir...\"\n\nHrelle shifted to allow her to enter the compartment, before rising and facing Gaines, his mood shifting like sand from a wave. His voice was a dangerous growl. \"Where did they come from?\"\n\nGaines was sweating and shaking. \"The Nausicaans found a small colony of them on an asteroid in the Mazar system... they were cut off from the rest of the Galaxy, struggling to survive there-\"\n\n\"So you decided to help them out? How generous of you. Where are you taking them? And why children and not adults?\"\n\nGaines swallowed, blinking from the sweat dripping into his eyes. \"The pergium mines on Quillik... Malurians make good diggers, they're used to the dark, they can survive on low oxygen levels and temperatures... they took the children because they could get more of them into the compartment, and they were- they were easier to-\"\n\n\"Easier to control?\"\n\nHrelle drew closer, until Gaines was backed against the wall behind him, unable to get further away. The First Mate blinked rapidly. \"It's not my fault-\"\n\n\"If you're smart you won't say another word.\" Eyes still fixed on Gaines, Hrelle snapped, \"Eydiir, find an airlock to put him in and come back. If he resists, use whatever force you desire.\"\n\n\"Aye, Sir.\" Eydiir drew closer. \"Move.\"\n\nHrelle shot a look at Kami, before turning to the wall intercom and calling the bridge. \"Mr Abed, how are things up there?\"\n\n\"Fine, Sir. We have secured the freighter; it's not been too difficult, with most of the crew still over on our ship and our cadets here, we outnumbered them.\"\n\n\"Patch me through to T'Varik.\"\n\nSeconds later, the Vulcan's voice carried over. \"Yes, Sir?\"\n\nHe breathed in. \"Commander, Alpha Squad has discovered a compartment with between eighty and a hundred Malurian children.\"\n\nThere was a pause before T'Varik replied. \"Children, Sir?\"\n\n\"Slaves. The freighter crew are slave traffickers. The children are suffering from exposure to Synthococcus Novae, as well as malnutrition, dehydration, multiple levels of trauma. I want Dr Ling or one of her nurses over here to supervise. Split the cadets and crew, keep one half here carrying the children to the shuttle bay for transfer either by shuttle or the onboard cargo transporters. Set up a triage unit in our own cargo bay.\"\n\n\"Aye, Sir. I should point out that our own resources will be inadequate-\"\n\n\"I know. On my authority as captain of the Surefoot I'm declaring a Class 3 Disaster. The Impala is the nearest Starfleet vessel, so send a direct message to Captain Arrington, they can transport the children and the prisoners to Starbase 154 better and faster than us. And just in case Lucille decides to be obstreperous, remind her you'll also be contacting Starfleet Command.\"\n\n\"Aye, Sir. What about the Beholder crew currently locked in the holodeck?\"\n\n\"They can stay in there for the time being. Lt. Abed is maintaining the freighter's bridge, keep him apprised. Hrelle out.\" He smacked the intercom button.\n\n\"Are you okay?\"\n\nHe looked to Kami, who was standing near him, having fixed enough of her dress to keep people from doing double takes. He breathed out. \"No. But I'm much better than what those children have gone through.\"\n\n\"Captain?\"\n\nHe turned to see Sasha halfway out of the porthole, snapping, \"I told you to get them out of there!\" Then he saw the look on her face, and regretted the harshness of his question, forcing a more gentle, \"What is it, Sash?\"\n\n\"They're- They're scared- or maybe the Universal Translator doesn't work for them-\"\n\n\"It should work, their language was established and well-known up until a century ago.\" He nodded. \"Okay, I'm coming in.\" He looked to Kami. \"You too.\"\n\n\"Of course.\"\n\nThe porthole wasn't big, and for an embarrassing moment Hrelle thought his belly was too much for it, and he would end up stuck there like that bizarre honey-coloured bear in those stories Sasha used to like as a child. But he forced his way through, followed by Kami and Sasha, the three of them just about able to sit up, using tricorders to illuminate the interior.\n\nIt was... mephitic in here, reminding Hrelle too much of the awful conditions under which he had been forced to live as a slave. The children must have been in there for weeks, barely fed, and though he could see the connections to a life support unit and waste recycler, the power systems Jonas had identified earlier, neither was enough. Then there was the sickness... the deaths...\n\nAnd the fear, the fear he saw in their faces, torn from their homes, their lives, by aliens with designs on them. He knew that too. In his softest voice, he announced, \"Hello everyone. My, imagine finding all of you here.\" He tried to smile without baring his teeth. \"My name is-\"\n\n\"Fat Cat,\" said the nearest child, eyes wide.\n\n\"Excuse me?\"\n\n\"It's Fat Cat,\" the child, a female of perhaps four or five years of age, repeated, and it carried behind her like a wave to the rest of the children.\n\n\"They know about Fat Cat?\" Sasha asked.\n\n\"Pretty Red Hair Lady showed us Fat Cat and gave us sleepy candy,\" the child murmured, \"Fat Cat is funny, his belly gets him stuck in places!\" Then she brightened as she noticed Kami. \"And Lil' Kitten!\"\n\nHrelle looked to Kami, who looked amused, and then took over. \"That's right! I'm Lil' Kitten! Fat Cat and I off on another adventure when we found you!\"\n\n\"Make him purr!\" the child pleaded, smiling.\n\nOthers joined in with the request. Kami looked bemused. \"How do I make him purr?\"\n\nHrelle blushed and shook his head, before holding out the back of his hand. \"You have to stroke my paw. Just go with it.\"\n\nKami was smirking now as she reached out and did that. And Hrelle muttered, \"Mother's Cubs...\" before launching into an exaggerated purr, and a rubbing of his head against Kami, which delighted the children.\n\nHe sighed and drew back again, focusing on the girl who seemed least afraid to be close and communicative. \"Yes, I'm Fat Cat. Now, what's your name? Let me see, I bet I could guess it. Is it... Sarjenka? Is it... Cinderella? Is it... Flobbidobbidobbidob?\"\n\nThe last name made the girl giggle.\n\n\"I was right!\" Hrelle exclaimed, nudging Kami. \"It is Flobbidobbidobbidob! I always get it right!\" Then he leaned forward, making no overt moves towards the girl. \"Well, Flobbidobbidobbidob, you remind me of my little girl.\"\n\nHe pointed over to Sasha, who offered them a wave. \"There she is. She used to be as little as you, and I would put her on my shoulders and carry her around so she could touch the sky. Then when I looked away, she started growing, and wouldn't stop. Now, if I carry her around on my shoulders, she bumps her head on the ceiling. Bump! Bump! Bump!\"\n\nThe girl giggled again.\n\nNow Hrelle looked around; they couldn't stay in here for too long without getting them help. \"It's not very nice in here, is it?\"\n\nThe girl sobered up, finally shaking her head.\n\n\"Would you like us to take you home?\"\n\nShe nodded - her eyes welling with tears and her face screwing up.\n\nHrelle held out her arms. \"Come here, sweetheart...\"\n\nHe held her.\n\nSeven Hells, he thought. She felt so thin...\n\n*\n\nGiles had been ready to die.\n\nHe had been ready to fight, and possibly win. But when the Nausicaan had caught him with a glancing blow from a cyclospanner and knocked the wind out of him, he collapsed like a house of cards before his opponent. He looked up, watching. This was it. He was ready to die. His family would have a wonderful funeral for him.\n\nBut he didn't want to die. He had a life. He had Sasha, and Captain Hrelle, and Counselor Kami, and everyone in Alpha Squad, and Rina, and Velkovsky, and he was about to lose it all-\n\nAnd then he wasn't looking at his death anymore. He was looking at Captain Hrelle racing in and tackling the Nausicaan about to deliver his death, grappling him and proceeding to break the Nausicaan like a china doll. Another Nausicaan tried to attack him - and Hrelle promptly broke his neck like it was nothing, before roaring, challenging the others to try the same.\n\nGiles had known Hrelle for weeks, had only seen and heard hints that there was more to the genial, paternal, pot-bellied man than met the eye. He had told Giles in confidence that he had killed with his bare hands. Now he saw the man in action, saw his superior Caitian strength and a lifetime of formidable fighting experience.\n\nAnd he had saved Giles' life in the process.\n\nGiles had kept mostly silent since then, answering others only when spoken to, as he assisted Hrelle, Sasha and Kami in finding out what was being smuggled.\n\nChildren. Slaves. Dear God, what could make people like the Beholder crew commit such a terrible act? They seemed like ordinary, decent people! He couldn't fathom it. He really couldn't.\n\nHe watched as Hrelle carried out the first of them, holding them like they were his own children, carrying the ones too weak to move themselves, speaking to them, reassuring them. He did it so easily; Giles was hesitant about how to approach them, after all they'd been through. What if he said or did the wrong thing, and they ended up worse?\n\n\"It's okay, Giles,\" Kami said as she drew up beside him, looking emotionally drained but still observant, since she had practically read his mind. \"They need gentle guidance and reassurance. Be their big brother. Tell them what you would want to hear when you were young and afraid.\"\n\nGiles thanked her and took the advice, taking the children's hands and guiding them up to the shuttlebay, where other cadets and one of the Surefoot nurses examined them, gave them antibiotics and antivirals, hydrators and vitamin supplements, as well as basic food and water.\n\nAnd someone else had thought of replicating clothes in children's sizes, and other cadets were helping to clean up the children, using the shuttlebay's emergency sonic shower units. He smiled as he saw Neraxis put her experience as a big sister to good use, rounding up the more active ones and keeping them out of trouble - albeit following having a good run around after being cooped up for so long.\n\nThen there were those children who hadn't survived... he had helped there, too, providing the replicated body bags as the captain carried them out, no less gently than he did the living, before taking them on antigrav gurneys to a stasis chamber. Only now Giles saw the tears on the man's face, soaking into the fur on his muzzle, and they were tears that Giles soon echoed; had his father been here, he would have made some cutting remark about being a man.\n\nBut when that terrible task had been done, the Captain was back to his old jovial self, he was kneeling down in front of one of the Malurian children, letting them stroke his hand while he did the Fat Cat purring expected of him. It looked like the first time they had smiled or laughed in weeks.\n\nGiles and the other pilots made the rounds between the Beholder and the Surefoot, carrying sick and healthy children over and returning for more, and when that was done, they were moving back and forth from the industrial replicators, creating sleeping mats and blankets. Occasionally he would nod at Jonas or Kit or Eydiir as they did whatever they could. Those times he saw Sasha, his gaze lingered.\n\nIt was twelve hours after the discovery of the Malurians before Alpha Squad was sent back to their quarters, to get four hours' sleep, before returning and taking over emergency duties, either keeping the ship running or securing the freighter or monitoring the children - or the prisoners, who had been gathered together, patched up where necessary, and then moved into the brig or back into the holodeck.\n\nTheir quarters seemed a strange, unfamiliar place, the exhausted Squad slumping down onto chairs or the floor and wearily removing their boots and socks. They found freshly-replicated sandwiches and drinks waiting from them, presumably from Kami or even the Captain. Sasha muttered, \"Just eat, take a shower, or go straight to bed.\"\n\n\"No argument there,\" Neraxis muttered.\n\nGiles looked around, a thought crossing his mind as he rose. \"Shower sounds good right now.\" He entered their sleeping quarters before anyone else, making sure no one saw him pull out his case from under the bed and take out the secret communicator, before entering their bathroom. He stripped off and took the communicator and a towel into a sonic shower stall and activated it, keeping the sonic waves away from him and the sensitive equipment as he slid down to the floor and activated the communicator.\n\nHe got a response quicker than he expected. \"Son? Is that you?\"\n\nHe swallowed. \"Yes, Dad. I have something important to tell you.\"\n\n\"I got a report from your aunt! The Impala has been ordered to intercept you! What's happening-\"\n\n\"Dad-\"\n\n\"The report mentioned a freighter, the Beholder- did Hrelle attack it-\"\n\n\"Dad, shut up and listen for once.\" He breathed in again, his heart racing. \"Today I was almost killed.\"\n\n\"What?\"\n\n\"The freighter was carrying slaves. When we discovered them, we were attacked. Someone stood over me, ready to crack my skull open.\"\n\n\"Giles! My God, what was that bastard Hrelle thinking, putting you into that situation-\"\n\n\"Dad... SHUT UP. That 'bastard' saved my life! My life and my friends' life! He has been consistently patient and generous and caring to me, when I've given him no reason whatsoever to do so! When you and Aunt Lucille and my brother and everyone else in our family has tried to get me to spy on him, to betray him, condemn him!\"\n\n\"Giles-\"\n\nHe stood up again, approaching the sonic waves. \"No more, Dad. I'm fed up with it all. No more betraying him. No more being your spy. No more Starfleet.\"\n\n\"Giles, damn it, listen to me, boy-\"\n\nBut the boy brought the communicator up to the head of the sonic shower, wincing at the feedback as the waves short-circuited the sensitive components within.\n\nHe let the communicator drop to the floor, and let the sonic waves wash over him...\n\nTO BE CONCLUDED"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fan fiction",
        "space",
        "caitians",
        "science fiction"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-secrets-and-lies-ch-05"
}