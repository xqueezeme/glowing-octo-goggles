{
    "title": "Persephone",
    "pages": [
        "Author's Note: This is a lighthearted rape fantasy, as much as such exists! Obviously, it contains a lot of non-consent & reluctant sex, with enjoyment by the victim. In addition to physical roughness, there is also a lot of anal, rimming, ass to mouth, toys, bondage, verbal degradation, humiliation, and some other stuff I missed. Please don't read if you are easily offended by any of this.\n\n***\n\n\"Yasmin! Oh my God!\" \n\nI hadn't seen Yasmin in years before stumbling into her at a caf\u00e9 on Rodeo Drive that afternoon, but she was as unmistakable as ever. Decked head-to-toe in designer clothes with a Prada tote resting on her table, she had to lower her oversized Gucci sunglasses to confirm my identity. \n\n\"Oh, Hey! Anna, what's up my bitch!\" Yasmin answered. She rose up to give me kisses on both cheeks and an enthusiastic hug. Her makeup was subtle and perfect, and her hair was lustrous and wavy. I felt tawdry, conscious suddenly that I'd dressed casually for what was supposed to be a quick errand rather than an extended shopping outing. \"Sit! Let's catch up before I have to leave.\"\n\nI felt a little surge of pride that she remembered me. We'd been in the same circle of friends in college, but not the tightest ourselves. Yasmin had been a force on campus, beautifully exotic from her half-Persian heritage, and also unrepentantly wealthy, wearing Versace and Dolce and Gabbana clothing on campus and driving a Maserati her senior year. Her personality was even more outsized; she was brash, confident, and full of restless energy. Behind her back, we called her the missing Kardashian sister. She'd been our Queen Bee, and it was good to see her looking as hot and dazzling as I'd remembered her.\n\nWe caught up briefly, my own job working in a big studio as a junior exec was going fine, but I was still in the \"pay your dues\" period of my entertainment career. I wasn't dating anyone right now, and had seen a bunch of the old crew around L.A. at times. My usual boring life.\n\nI was more interested in what Yasmin was doing. I'd heard all kinds of rumors about her being involved in the adult entertainment industry. Such news would be salacious gossip for anyone else I knew, except for her. She'd been a sexual force in college as well as a social force. I'd never met a more liberated woman and she had been shameless about flaunting her body in skimpy outfits and pursuing any man she wanted aggressively. \n\nI was jealous of her in so many ways, but her sexual confidence was what I most admired. I had too much guilt from a conservative and religious upbringing to do more than fantasize about the freedom she'd displayed in college.\n\n\"Funny you should ask, I'd been producing some female directed adult films, you know sex-positive porn for women by women?\" Yasmin said, as if was the most normal job in the world. \"But, I just launched a new business!\"\n\n\"Really, in the, uhm... adult space?\" It was hard for me to even say porn!\n\n\"Sort of, it's more of a dating app. I describe it as a Tinder for consensual non-consensual sex,\" Yasmin said proudly.\n\n\"For... uhh... what?\" I asked, not getting what she meant at all.\n\n\"For rape fantasies,\" Yasmin said matter-of-factly. \"You know, find a hot guy who will come to your house, break in, throw you down, have his way with you as rough as you desire, and then leave. That kind of stuff. And much more creative scenarios, depending on what you work out with your partner.\"\n\n\"Wait, a Tinder for RAPISTS!?\" I cried out, horrified. I aspired to be a sex-positive feminist, but this was too much. I lowered my voice as I realized people were staring, and continued. \"Yasmin, that is awful! Those people are SICK! This will just enable\u2014\"\n\n\"Easy girl, we took that human sexuality class together, remember?\" Yasmin said, grabbing my hand to calm me down. That class, nicknamed \"fapping for credit\", was infamous and featured guest speakers from the adult industry, erotic writers, and sex workers. We even had to watch porn for homework at times! \"You know that rape fantasies, or non-consent fantasies, are the most common types for women. You even wrote your final paper on the topic!\"\n\nI blushed, but was also surprised that she remembered my paper. That class had been one of the few we'd had together and I had enjoyed discussing the materials with her in sometimes vivid detail. I'd never really talked about sex with anyone before and some of our conversations about things she'd done, or fantasized about, had been incredibly arousing. The course had been life changing and eye opening for me. I'd bought a vibrator in the middle of the term and started regularly masturbating, including watching porn, for the first time in my life! My boyfriend at the time was the lucky beneficiary of a crazy surge in my libido coupled with newfound curiosity about a whole bunch of kinks.\n\n\"Yes, but my paper was about how those fantasies are caused by women having their sexuality repressed by societal norms, such as slut shaming. Society doesn't permit us to be horny and desire sex like men, so we subconsciously turn our sexual urges into rape fantasies, in which we are forced or coerced to get what we desire. And then of course, we feel guilty that we are turned on by such a taboo fantasy, which starts a vicious cycle that makes me... I mean, us... more aroused at being some kinky slut that enjoys being raped. And so on, etc.,\" I said, gathering steam as that paper, which I got an \"A\" on, thank you, came roaring back to me. I was getting a little flustered by the end of my speech with all the rape talk. \"Anyway, none of us want to be raped for real, or even play raped, by total strangers! That isn't safe or healthy!\"\n\n\"Sweetie, women have these fantasies, among a million others. Safe exploration of fantasies is healthy! Anyway, you know an awful lot about this topic, it seems,\" said Yasmin, eying me shrewdly. \"Will you take a look at the app for me and let me know what you think, since you have such a... personal... interest?\"\n\n\"I don't have an interest... personal or otherwise... I just wrote that one paper! Anyway, no normal woman is going to sign up for this service. Sorry, I just don't think it will work!\" \n\n\"You say that, but I beta launched last year and the numbers are off the charts. Thousands of women are using it. My customers love it, in fact, and once they schedule a date, their usage just gets higher. Do you think, maybe, you are kink shaming a little bit right now?\" Yasmin said, giving me an accusing look. I blanched and began to protest the accusation, but she started gathering up her stuff and continued blithely. \"We're in three cities and I'm planning on rolling it out to twelve more next year. We have to do a lot of seeding before we launch a market. I should explain, every 'rapist' is background screened for a criminal record and we have a very robust review system that weeds out the bad guys quickly. The app even tracks your location when a date is set up, for extra safety.\"\n\n\"Yasmin, that sounds great, but I don't think I can be helpful. I find it too distasteful.\"\n\n\"I'm going to send you an invite code. Just check it out, you don't have to schedule a rape. Give me your perspective as a woman that is supposedly not into this kink.\" Yasmin continued. Supposedly? What did she mean by emphasizing that word? She was talking fast and I couldn't break in to reaffirm that I was NOT into rape fantasies. \"We need to broaden our customer base long-term for this to really take off so that kind of feedback would be invaluable. I really want your opinion. Please Anna, as a friend?\"\n\nIt was hard to resist Queen Bee, even as a twenty seven year old. She wanted my help and that made me eager to please her still.\n\n\"I don't know. I guess I could take a look.\" \n\n----------\n\nI ignored her invite code for three days. I thought about it a lot for the first day, or rather about all of my secret and repressed rape fantasies.\n\nYou see, the entire conversation I was worried that Yasmin suspected that I wrote that paper because non-consensual fantasies were both my first and, even today, my favorite sex fantasies. My college paper was really a well researched and logical rationalization of why me having these taboo fantasies wasn't my fault, or in any way reflective of me being a pervert, but rather a natural result of our patriarchal society and my conservative upbringing. \n\nI blamed my parents for slut shaming me early on. Sex was bad, girls who liked it were sluts, I should save myself for marriage, and on and on. They refused to let me date until my Senior year of high school, and forced me to lie about seeing my boyfriend when I finally had one. My parents were, of course, just following norms from their Church and projecting onto me their repressed view of the world. Good girls like me didn't like sex, right?\n\nRegardless of who was at fault, I was a horny and sexually active adult now that still found it incredibly dirty to actually want to fuck a guy just for fun. Even joking with my girlfriends about how hot a guy was made me feel slutty. I still felt guilty for wanting sex if it wasn't part of some romantic, long-term relationship, like I'd get a big scarlet \"S\" branded on my forehead if I had a one night stand! My profile on Tinder warns \"No hook-ups!\" in the first line and I finish by writing about how I'm only looking for partners that are seeking a long-term relationship. Despite that, and the fact that all my friends use it, I still feel like a slut for even having a profile on 'that kind of service'.\n\nNeedless to say, Yasmin's app was a Pandora's box that I didn't want to open. I'd kept my non-consensual kinks in the back of my mind mostly, choosing more vanilla porn to get off to when I masturbated. And I'd been doing a lot of masturbation as I had no boyfriend and hadn't had sex in a couple months. Fucking on a first date is too slutty for me, of course, so the casual dates I had been on usually left me horny and unsatisfied. \n\nThat night I gave in and started reading rape fantasy stories and watching non-consensual porn. I'd never just focused exclusively on that genre before for masturbation, usually I just snuck in a rape themed video every now and then when I was especially turned on. I wore out my batteries on my favorite vibe and must have had a dozen massive orgasms over the course of three or four hours. \n\nMy twisted logic was that I could empty all this filth out of my mind if I had enough orgasms and essentially overdosed on the kink. The second night was even worse, and if anything my tastes had gotten more extreme and darker, as if my mind now needed even more taboo content to get the same level of arousal! \n\nThe third night I found myself lying naked in bed again, my laptop fully charged next to me and my vibe with brand new batteries all set to go. I was horny, but also disgusted with myself. The revulsion at my arousal only made me feel dirtier and more eager to masturbate. I felt like a drug addict about to shoot up heroin. \n\nSuddenly, Yasmin texted me.\n\n\"Hey Anna, have you checked out my app yet?!! Please do!\" She added a string of emojis, hands together in thanks, smiling faces, and a couple hearts.\n\n\"Oh - I totally forgot about it!\" I lied and felt butterflies fill my stomach. I should have replied that I didn't want to look at it, that the idea was too perverted, but instead I typed out, \"I will download it right now, Yaz!\"\n\n\"Ok - enjoy!\" She added a string of thumbs up emojis and a winking face.\n\nShe had caught me at my weakest moment, naked, porn on the screen of my laptop, and my vibrator close at hand. With a clear mind I never would have downloaded her evil app. I was worried it would be called \"Rape Me\" or something similarly incriminating that I wouldn't want on my phone, but she'd chosen the name \"Persephone.\" At first I thought she meant the name to be pronounced \"Purse - phone\" and I thought it was both random and terrible, but then I remembered that Persephone was the name of the Greek Goddess that was famously abducted and raped by Hades. Appropriate and tasteful, I suppose, so she did a good job there.\n\nMy heart hammered and I felt a tingling warmth between my legs as I opened the app up. I couldn't believe how turned on I was already.\n\n\"Persephone - Find Consensual Non-Consensual Taboo Fun Near You!\"\n\nThere was some legal stuff to accept and I set up an account quickly using the name \"Curious Amanda\" to maintain some anonymity. A quick tour followed, the app explaining that I could update my public profile later with pictures, a description, and my sexual preferences. \n\nNext up was a \"How This Works\" page, which explained that anyone could browse profiles. When two individuals matched after sending \"Rape Me\" or \"I want to Rape You\" requests, a chat window opened for them to talk. If they hit it off during the chat, the app would let them schedule a \"Rape Date.\" \n\nI couldn't believe the language for these actions. Yasmin had to change them to less offensive terms! Although, to my chagrin, I was finding that seeing the word rape everywhere was so taboo that it was making me really horny... \n\nWhat the fuck was wrong with me? I still couldn't believe I was even looking at this service!\n\nThere was a safety message that popped up, warning me that although all the \"Rapists\" were screened and background checked, I should be careful, keep the app on, have clear communication beforehand on boundaries, and use a safe word. All in person contact should be scheduled with the app so the service knew if you were meeting and when. It was all kind of reassuring.\n\nThen it launched me into the male profiles. Oh boy, oh boy!\n\nI thought I was turned on, but I was literally dripping after skimming through the roster of my potential rapists. The phone was navigated with one hand, while the other began to rub my aching slit. There were hundreds of them to go through, if I had endless time, for just the L.A. area alone.\n\nOf course the top ones were total hunks. Most seemed to cut their heads off for anonymity in their pictures, but were not shy about displaying all of the rest of their body. Every type of physique was represented, including overweight and relatively unattractive guys. Some of the less than model quality men had five star ratings, so I supposed certain woman liked having ugly or average men take them against their will. There were also a lot of Black and Latino men, likely another fetish for women who might have racial hangups and got off on the idea of being forced to have sex with a minority. Plenty of tattoos, beards, biker guys, and anything else a girl might find hot in their \"rapist\".\n\nTurning off the gender filter, I discovered that there were female \"rapists\" as well, which was shocking to me. They ranged from classic butches to very femme, lipstick wearing Dominatrix types. Some seemed to specialize in raping men, although it appeared like the women charged money for their services, which made sense.\n\nSpeaking of filters, there were tons of ways to filter, including height, weight, physique, race, hair color, facial hair, and of course, even dick size. What girl doesn't dream of filtering by dick size? And it quickly became apparent that the guys had their various specialties and niches, ranging from jocky \"date rape\" types, who wouldn't take no for an answer when they got back to your apartment, to burglars, who snuck in and assaulted you while you were sleeping, and of course the classic creeper, who lurked in the dark alley while you were walking home. Roleplay ideas were a big part of the profiles, including bosses, professors, doctors, landlords, and whatever authority figure you wanted to coerce or force you into sex.\n\nMy vibrator had replaced my fingers in my pussy. I was so turned on reading the profiles that I knew I was going to cum soon. A text popped up, from Yasmin, suggesting I look at \"Big Dave\" as a good first time partner. I was annoyed at her presumption that I might want to use the app, versus just looking at it to give her feedback on the design, but found myself searching for his profile. I'd have to write her back later and explicitly remind her that I was never going to actually use the service, of course.\n\nBig Dave was indeed big, his cock was compared favorably to a spray can in length and girth in one of his pictures. I was more turned on by his smooth body, ripped and toned with a killer six pack that transformed into a vee which pointed at his long cock. The bottom of his strong, stubbled jawline was visible in a couple pictures, hinting that he was good looking as well.\n\n\"I'm a nice guy that likes blowing the minds of curious girls with taboo fun. Not into anything too rough or heavy, but if you like a good hard fucking, being bound and restrained, and plenty of spanking, hair pulling, and slapping, I'm your man. I am very good at mind games. I'll do any number of roles or set-ups, but nothing in public. Your place, mine, or a hotel are fine. I have a professional job, so discretion is important to me.\"\n\nI came as I started reading his reviews. He had over fifty of them and most were five star. Girls gushed about him, much as I gushed onto my vibrator reading along, and praised how well he played his role and how sweet he was afterwards. The reviews weren't long, but read like little smutty vignettes of many of my fantasies come to life. \n\n\"Dave pretended to be my Uber driver and took me back to my apartment from my office. His conversation was a bit unprofessional, asking me about whether I had a boyfriend, telling me I was hot, and wondering if I lived alone. He asked to use the bathroom once we got to my place and I let him in reluctantly. After all, even though he was cute, he was a TOTAL stranger and acting a bit sketchy. Once inside, he deadbolted the door and grabbed me. I tried to scream for help, but he muzzled my mouth and threatened to kill me. He stripped me down, tied me up with some rope he brought, and proceeded to fuck me senseless for over an hour while calling me a whore for orgasming so much. Then we showered together, he helped tidy up the mess we'd made, gave me a kiss, and left. Will repeat ASAP!\"\n\n\"Dave pretended to be my ex-boyfriend, jealous over me cheating with a mutual friend. He still had the key to my apartment and lay in wait, pouncing on me when I arrived home. He proceeded to hate-fuck me hard and call me dirty names. He kept character well and I was incredibly turned on the whole time as he verbally abused me while making me tell him the things I did with the other man so he could do them twice as rough, and then some! 5 stars!\"\n\n\"Dave \"hired\" me to model at his apartment for a photography gig. He didn't tell me it was nude instead of the sports wear shoot we discussed, until after I got there. I should have left, but he offered me more money and sweet talked me into staying. I agreed, but he started getting grabby and asking me to use toys on myself. This was way more of a hardcore shoot than I felt comfortable doing! I tried to leave and he wouldn't let me! He was a bit scary. Eventually, to try to appease him, I fucked myself on camera for him with a dildo, but he said that I'd have to do the same with his cock next. No hole was left unstretched and undocumented when our session was over. I especially liked the ending when he made me confess on camera that I was a whore that he paid only $100 to fuck. He sent me the footage the next day!\"\n\nThey went on and on, like my orgasms did while reading them. Yasmin was right, Big Dave seemed like a perfect and trustworthy first partner for this kind of service as I studied his cock again. It didn't seem so sketchy now that I was in the app and reading profiles and reviews. This was just roleplay, the kind of stuff you might do with a significant other, but in reality most couples would be too lazy to pull off scenes like this without breaking character. Plus, doing it with a stranger added an extra edge of thrill, especially given the vulnerability of the scenarios.",
        "I found myself filling out my profile, just to test the functionality of course. I had a couple lingerie shots of my body that didn't have my head, all taken a year ago after I had finished running a half-marathon. My body was still very slender and I may have gained two or three pounds, but why not share myself at my peak? I also added one of my ass that I love. I took that shot looking back at a full length mirror and, with the angle caused by arching my back, my butt looked particularly nice and round.\n\nI had to fill in my measurements, five foot eight inches tall and one hundred twenty five pounds, and the dreaded bra size question. I'm a B or a C cup depending on the bra, usually a C on most them. Given I'm fairly skinny, most guys think they look large on my frame and often guess I'm even a D cup! I went with C cup as my lingerie shot supported that and I didn't want to disappoint my... umm, rapist? Brunette hair and hazel eyes rounded out what felt like a police report on my description, the kind I might fill out after a real assault.\n\nOn to the fun stuff, my kinks and limits! They had some general questions, such as how rough you like sex, that required you to move a slider from \"No Interest\" to \"Favorite\", or any level in between. If you wanted more granularity, every major category had a bunch of optional subquestions for more detail (e.g. Spanking, Face Slapping, Being Spit On, Hair Pulling, Shoving, Physical Domination, Choking, etc.). To do a thorough job would take me an hour or more, so I wound up skipping most of the subquestions.\n\nI was a little nervous publishing these kinks for the world, so I took a moderate approach and marked my preference in the middle for almost everything, which included the major categories Roughness, Humiliation, Bondage, Vaginal, Anal, Oral, Discipline, Toys, Fear, and Public Sex. After some consideration, I ticked up Vaginal to Favorite and bumped down Anal to Somewhat. I marked as favorite a lot of the rougher subquestions, like slapping and being spit on, and also gave high marks to being humiliated via name calling and other dirty talk. The complete list was giving me lots of naughty ideas and turning me on again.\n\nLast thing to do was to write up my bio:\n\n\"Hi, I'm Curious Amanda. I'm a 27 year old trying Persephone to see how I like it. I have a lot of non-consensual fantasies that I'm curious about exploring, but am a little nervous. Hope to meet some fun partners soon!\" A couple emojis balanced it out, a blushing face, covered eyes, and some hearts. There, kind of coy and innocent, but hopefully sexy enough to get someone interested in raping me. Did I just think that?\n\nOkay, I was now published and available in their listings. My stomach churned. Then I realized I had another task still left, but the idea made my heart skip a beat. I went back to Big Dave's profile and eyed the red \"Rape Me\" button. With a gulp, I touched the screen and sent him my rape invitation. This was all just in the spirit of testing the app, mind you! \n\nWell, it looked like I had really done it. Did Yasmin know I had sent him a request? I felt like a freaky slut already. Of course, I rationalized, I could always flirt with him via chat and ghost him, just like on Tinder. It's not like he was going to come kicking down the door right now and take me violently... although that was kind of a hot thought.\n\nThe vibrator flipped back on. \n\nTime for one more orgasm before sleep it seemed...\n\n----------\n\nThe next day was torture. \n\nI woke up full of regret, hoping last night had been a dream. To my horror, I had a bunch of notifications from Persephone of men that had found my new profile and liked it. \"Savage Animal wants to Rape You.\" \"Black Mamba wants to Rape You.\" \"Ass Destroyer 35 wants to Rape You.\" The list streamed on-and-on, before I quickly disabled notifications lest any pop up during my work day. \n\nIt was flattering in a weird way that so many of these men, around twenty so far, were interested in fucking me in a very taboo roleplay. I mean, I guess it's like Tinder where a bunch of thirsty guys hit on you, but the level of violence my mind conjured up as I got each notification and imagined another man getting in line to take advantage of me was way beyond getting \"liked\" on Tinder!\n\nI started to look at their profiles, but got really horny and realized I'd be late for work if this continued. So I forced myself to put down my phone, took a cold shower, and got ready for work instead. The entire morning I was in a weird state of arousal and very distracted in the office. I kept covertly checking Persephone to see who else had sent me a Rape request. \n\nThe one person that hadn't send me a request was Big Dave, and his lack of response was slowly killing me. Unless we matched, we couldn't chat. And without chatting, we couldn't set up something in person. And if we couldn't set up something in person, I couldn't get... raped?! How did I go from being appalled at Yasmin's app to now moping like a nervous teenager waiting for her crush to write her back? Was I that enamored of this guy as my potential \"rapist\" that I was getting depressed? I couldn't help but begin to wonder if I seriously was so ugly that he didn't even want to rape me, no strings attached. Where was my self-esteem!\n\nDoubts persisted as the day wore on, and by the afternoon I was getting pissed. I was ready to delete the stupid app, and send a nasty note to Yasmin, when I saw a new message appear on the home page. I had a match, and could start a chat! Big Dave had decided I was worthy after all!\n\n\"Hey Amanda! Welcome to Persephone. Thanks for wanting me to rape you!\" He added a smirk.\n\nHow the fuck do you respond to that? Technically he was accurate, but I blushed deeply as I sat in my cubicle. It took me five minutes of erasing and editing to tap my stupid reply back, and I still hated it.\n\n\"Oh hey! Yeah, I'm kind of new to this stuff.\"\n\n\"No worries. I like having fun with first timers. I loved your pics, your ass is amazing.\"\n\n\"Thanks, your cock looks great too.\" What the fuck was I typing?\n\n\"Thank you! So... what kind of fantasies do you want to explore?\"\n\nI squirmed in my seat, my breathing suddenly quick. I glanced around furtively to see if any of my co-workers were looking at me. I felt hot between my legs and realized that I'd need to change my underwear when I got home. This was all too much. I was a good girl and did NOT do things like this!\n\n\"Umm, I'm not sure. Is there something you recommend?\"\n\nLame. Lame. Lame. Why was I even typing? I was supposed to close the app and delete it. And, if I wanted to go through with this, why didn't I tell him I wanted him to cuff me and stifle my cries of protest with his big cock! Or any of the hundreds of other acts that I'd been masturbating to for the last three nights!\n\n\"Sure. Well, for a person new to this kind of play, I recommend doing it at your place, so you feel safe.\"\n\n\"Ok.\" God I sounded like a zero personality wet blanket. I added quickly, \"Yeah, I agree, my place would be a lot better for this. I'm nervous enough already!\"\n\n\"If you like, we can play on your nervousness and uncertainty. I can come over, and then you can decide to back out, telling me you don't want to have sex. I will then make you fuck me anyway, whether you want to or not. And as rough and hard as we decide before hand.\"\n\nFUUUUUUCK.\n\nI needed a new pair of underwear, right now. I glanced around at my unsuspecting co-workers. Could I make it to the bathroom and relieve the need emanating from the swampy, hot mess my sex had become? Having a guy take me as I protested that I didn't want to do it, that I wasn't a slut who would sleep with a stranger... that was exactly what I needed for a first time roleplay like this! I could extoll my virtue all night long as he helplessly made me cum over and over again.\n\n\"That sounds really hot, REALLY hot.\"\n\n\"Great. Well when do you want to meet?\"\n\n\"I get home from work around six so anytime after that would work!\" \n\n\"Haha, that's a bit short notice and I'm a busy tonight. Plus the app requires us to schedule meetings at least 24 hours in advance, for cooling off purposes.\"\n\nMy face flushed in embarrassment. How thirsty did I appear to him right now? I knew they made you wait to schedule, to make the encounters a bit more planned and less impromptu, but had totally forgotten in my enthusiasm to get this locked in. My desperate horniness had made my brain stop working!\n\n\"Oh, right. LOL. Well, any evening this week then...\" I sent him a facepalm emoji.\n\nHe said he'd send me a \"Rape Date\" request later and signed off. I sat there and realized I was so frazzled that I was sweating and breathing hard. Had I really just had this conversation, about a guy coming over and pretending to rape me sometime later this week? What the fuck was wrong with me? What evil had Yasmin introduced into my life? I'd never even considered masturbating at work before, but I hurried off to the bathroom to give my tingling sex the attention it craved. \n\nDeep down, I was worried that I was rapidly becoming exactly the kind of the slut I was ashamed to be.\n\n----------\n\nThe \"Rape Date\" request came through that afternoon for Thursday evening at eight o'clock. That was two long days away. I was in agony. Two more days and nights of anticipation. Work was going to be a disaster and the nights would only bring me partial release until the real thing happened. Why was Big Dave so fucking popular? Or was I just not worthy of him trying to fit me into his schedule earlier?\n\nI was out shopping Wednesday evening at the grocery store, my tortured mind eying cucumbers and even eggplants with a critical eye, when he called. I'd forgotten, but he had sent a note saying he would give me a call the night before to discuss logistics.\n\n\"Dave? BIG Dave?\" I said, my heart suddenly hammering. A mom shopping nearby, with her toddler bouncing in her shopping cart, eyed me suspiciously, probably wondering what kind of girl had a friend called \"Big\" Dave.\n\nDave didn't sound at all like I expected, but still very sexy and hot. I guess I was hoping for a deep, gruff voice, but Dave had a nice, mellow tone with a slight Southern California dialect to his expressions. He sounded like the kind of guy that would take me out to a dinner and make sweet love to me by candlelight, not rape me. \n\n\"Hey, I just wanted to go over everything, you know, logistics wise,\" he began, chuckling at my audible excitement. \"And answer any questions. Hopefully you aren't getting cold feet! I'm really looking forward to tomorrow.\"\n\nHe was looking forward to tomorrow? He had no idea how I was feeling, I mean I was in a fucking grocery story and feeling hot between my legs just from talking with him! I assured him that I wasn't getting cold feet and was also looking forward to our 'date' tomorrow. \n\nI saw the Mom eying me with a knowing gaze. I bet she wished she had a date with a guy that was nicknamed \"Big\". I glared at her.\n\n\"So first things first, where do I go?\" he asked.\n\n\"Uhm, my apartment, right?\" was my reply, wondering how stupid Big Dave might be.\n\n\"Yes, but I need your address!\"\n\n\"Oh, RIGHT! Haha, you'd be wandering around knocking on strange doors otherwise, duh!\" I answered, laughing externally while I died on the inside. I hurriedly gave him my address and made sure he got the apartment number right. It would be awkward if he mixed up the apartment as my new neighbor next door kind of resembled me, just with larger breasts.\n\n\"Great, and then, you know, I'll come over at eight as we agreed and we'll just play it like I suggested. Just act like you are having second thoughts, or whatever, and I'll take it from there. It'll be fun... and sexy.\"\n\nI giggled nervously, blushing as I squeezed the cucumber I had picked out. Ten inches long and quite thick, what had my subconscious mind been thinking in choosing this one? I stared at it in admiration and then realized what I was doing in front of the other shoppers and hastily hid it behind my back. Hopefully that nosy mom hadn't noticed, although her smug grin hinted otherwise.\n\n\"I had some other questions about your kinks profile, just to make sure we are on the same page. I saw you marked Anal as a little lower than everything else?\"\n\n\"Yeah, it's cool though. I mean, I didn't want to say I liked it too much, as I thought it would seem slutty, right? But I know guys like anal, so I figured if I put it as 'Somewhat' that the guys that really want it would ask, but not all would, and it would balance out as average, right?\" I quickly answered. The mom had drifted closer and gave a little start when I said the word \"slutty\" and a sharp glance when I followed that with \"anal\". My rating methodology had seemed so clear at the time, but now as I tried to explain my logic it sounded a little bizarre and passive/aggressive. I had this strange urge to please my would be rapist and didn't want him to think I was some prude, so I continued. \"I'll be ready for it, if you want it, that is. I mean, I like it, actually, with the right guy. Yes, please.\"\n\n\"Sure, that sounds great. Your ass looks amazing in your pictures so I'd definitely love to bury my cock in it,\" Dave answered casually. I squirmed and bit my tongue.\n\n\"I'm sure it would love being buried into, or whatever,\" I answered, glaring again at the Mom who was pretending to squeeze avocados while eavesdropping next to me. \"You know what I mean.\"\n\n\"And I see you like a lot of the domination and humiliation kinks, which is great as I love those as well. Anything you are sensitive about? It sounds like I can manhandle you as much as I want, and treat you like a filthy whore? Ha ha.\"\n\n\"Yes, please, Ha ha,\" I answered a bit too quick quickly, then added a forced chuckle at the end. I didn't think his idea was funny at all, but was rather turned on right now imagining him slapping me around my apartment and fucking me silly. \"Anything you want there. Look, you seem to know what you are doing, so just do what you want. I'm sure I'll like it!\"\n\n\"Awesome! That's the best attitude. And if you don't like anything, you can give me your safeword. I always stay in roleplay unless I hear that safeword, it makes it more realistic and fun for both of us. So pick something you'll remember.\"\n\n\"Safeword? Right.\" My mind was struggling and the mom was giving me a disgusted look, like she'd finally certified that I was some sort of kinky slut by saying that word in public. She'd probably read Fifty Shades of Grey a dozen times and even watched the movie, so she considered herself an expert on deviant sexual behavior or something. Well, she shouldn't be offended if she was freaky enough to know what that word meant! I doubted I'd need to use one, but I struggled to think of something memorable. I looked around desperately, picked out a random fruit, and gave it to Dave as my safeword.\n\n\"Perfect. That won't be used accidentally! Any questions for me?\" he asked.\n\n\"Uhm, what should I wear?\" I said finally. It had been bothering me and I'd spent most of the prior night, when not using my vibrator, laying out various outfits. I had even been tempted to go shopping tonight for new lingerie. \"Is there anything you like?\"\n\n\"I'm not picky, but I always love skirts or dresses as they are easy to get off. Also, please wear underwear as I love seeing some sexy lingerie, and even like to keep a piece or two on when we fuck. Nothing too nice though, as things can get rough and I've torn clothing before by accident.\"\n\n\"Got it, I'll definitely wear some sexy underwear then!\"\n\nWe hung up. \n\nI gave a final glare to the horrified mom, tossed her my extra large cucumber, and said, \"I won't be needing this anymore, but you look like you might.\" With a taunting lift of my eyebrows, I pushed my cart away quickly. I saw her catch the cucumber by reflex and drop it with a disgusted expression into her cart, as if she'd just contaminated herself with whatever filthy slut germs I carried!\n\n\"Don't touch that little Tommy!\" I heard her cry out in fear.\n\n----------\n\nYasmin texted me the next afternoon.\n\n\"Hey Anna! Good luck tonight! I saw in the system that you have a rape date scheduled!\" Lots of hot flame and thumbs up emojis followed, a couple kisses, and a smiling face.\n\nSo, she knew I was doing this. I had wondered how anonymous my profile was, but clearly she was able to track my activity with her admin powers. Shit. Part of me had hoped I could sneak in this one, itch scratching date, without Yasmin even knowing. How did I feel about a friend knowing I was signed up to be roughly fucked by a stranger pretending to rape me tonight, even if the friend had created this perverted service?\n\n\"Oh, yeah. Big Dave seemed pretty cool. I don't know, I may get second thoughts tonight.\"\n\n\"You will have a blast! Just do it!\" More emojis. \"Lunch tomorrow?\"\n\nI agreed, hopeful to beg her in person for her absolute discretion about my usage of her service, and we chose a restaurant a short drive away from my office.\n\nI left work early, which was not a big deal as I couldn't focus on anything productive anyway. In an amazing display of self-control, I did not masturbate at all the prior night. As a result, I was so horny, distracted, and tightly wound all day that co-workers were asking me if I felt alright! I sped the entire way home, even running a red light by accident in my distraction. At this point, I knew I was delirious with anticipation and I wanted to get my \"rape date\" over with just to get this kinky shit out of my system and get back to normal! Why did Dave pick 8pm instead of 6pm? Argh!\n\nOnce home I cleaned my apartment thoroughly, again, and even took the extra step of moving easily breakable items from the coffee table and end tables. I didn't know what Dave planned, but thought it prudent to assume some collateral damage. Okay, maybe I was hoping he'd fuck me so hard that we'd be breaking shit!\n\nI laid out a couple more outfits, showered, blew out my hair, wandered around my apartment naked, applied makeup, tried on various lingerie combinations, and otherwise kept myself nervously busy and slightly aroused. Worried about my promise of anal to Dave, I hadn't had any solid food all day, just soup, yogurt, and a smoothie, and my stomach rumbled hungrily.\n\nAnal? That made me remember something. Fuck! I should have tried to stretch out my tight little asshole over the last couple days! That would have been very useful prep as I'm not really that experienced at butt stuff, except for one boyfriend that had loved to try to fuck me in what I considered my dirty hole, especially when I was drunk. In fact, that boyfriend had given me a small crystal ended buttplug as a gift to try and entice me to offer my ass up more. I hadn't used it in years and suddenly wondered where I had stashed it. \n\nI started tearing through my drawers and bins, trying to find the missing buttplug, and at last discovered it in a shoebox along with some embarrassing other items, including an old vibrator, lube, padded handcuffs, a blindfold, a leash and collar, and a pair of nipple clamps. It was my little trove of forgotten kinky stuff that had been gathering dust, because well, I'm not that kinky really. The leash and collar had been a gag prop for a bachelorette party, that I recalled, but I couldn't even remember buying or using the other stuff, especially the nipple clamps!\n\nI did a quick time check and was startled to discover that I only had around thirty minutes before Dave was supposed to arrive. Well, better late than never if my ass was going to get plundered as hard as he hinted it would be. \n\nI went over to the bathroom and examined at my nude body critically in the mirror one last time. My natural breasts were nice and perky, certainly they looked medium-large sized as I had rated them, and had a nice pear shape. Sticking out, straight and hard, were fairly large nipples that always embarrassed me in cold weather, but my dark pink areola were quite small, which overall helped make my breasts look even bigger. My stomach was flat and although I always thought my hips were a tad wide, my slender thighs had a nice gap between them from that extra spacing. ",
        "Above that gap, my bare sex peeked. I'd shaved carefully, and there was not a strand of hair detectable anywhere from my ass crack to the top of my mons. I also waxed fairly regularly, so I was about as perfectly smooth as a woman could be, and also about as aroused as I could be, I realized, as I saw how puffy and engorged my labia were already! My inner lips hung outside of my vulva like they always did when I was turned on and I flushed slightly at the undeniable evidence of how eager I was for Dave's visit.\n\nTurning around, I bent slightly at my waist and craned my neck to peer at my ass. It was definitely my best feature, heart shaped with nice round globes, but not too large, and very, very firm from the gym. Hesitantly, I pulled my cheeks apart and examined my pucker in the mirror as my eager cunt yawned open below it, already ready for Dave's big cock. Compared to that relatively well used hole, my asshole seemed impossibly tiny. Right now it was sealed as tight as drum and my attempt at making it wink didn't even open it a crack! I had to get it ready for Dave's cock, otherwise I'd be in a lot of pain tonight.\n\nUsing a little lube, I began to tease my bum with my middle finger. My butthole was firm and I couldn't even get my fingertip inside at first! Eventually, with a little bit of rubbing, more lube, and some light stimulation on my clit, it yielded to my pressure during a long exhale and my finger slipped past my ring with surprising ease. I used a copious amount of additional lube to get it ready, fucking myself over and over again until I felt like my canal was frictionless. Only then did I start to work the buttplug into my inexperienced ass.\n\nOh my, I was tight! The plug was flared, as they all were, and the bulb shaped head was maybe the width of three fingers at its widest. It still took a lot of pushing, circling, and lots more lube before I got it in. Once seated, the crystal base sparkled in the mirror like a lewd piece of jewelry, and the plug felt very snug and tight. How the hell was I going to get Dave's cock in there? Oh well, maybe I could tell him when he showed up that anal was off the table until the next session, when I could stretch out my hole and prepare more? Wait, I wanted a next session already!?\n\nMy fingers had continued to tease my clit as I studied my plugged ass. I tugged one of my hard nipples and squeezed it between my finger and thumb. A little shiver of pleasure raced down my spine and merged with with the pleasant pulses my clit was sending upwards. I felt like such a slut. Who does this to get ready for a date? \n\nThe plug had made me feel full at first, but the pressure was now fading and I barely noticed its presence. I started to twist it idly, enjoying the little tingles of pleasure it made in my sensitive ring. Pulling it out slightly and pushing it back in intensified the feeling, and I gasped out loud in shock at how good it felt! My fingers began to move faster on my clit and I could feel my arousal weeping out and coating them. I started to fuck my ass with the buttplug, groaning every time it slipped out or pushed back in as waves of dirty pleasure made my thighs tremble. These taboo nerves hadn't been stimulated sexually in so long that they felt almost virginal in their sensitivity.\n\nI was getting close now and closed my eyes. Maybe a quick cum before my date would settle me down and let me enjoy the evening? It would certainly take the edge off. Fuck, I almost felt like I could cum from just the buttplug alone! Tentatively, I removed my fingers from my throbbing clit and began to fuck my ass faster. Yes, I could feel my pleasure building still, a warm fuzzy feeling emanating from my asshole and spreading to my entire core. \n\nMy experiment was becoming self-torture. My body craved some extra stimulus from my vagina, just a touch would be enough to send me over the edge, but I seemed to still be slowly marching towards orgasm from just my ass play alone! The dirty nature of this looming cum was turning me on and I cried out in a mix of shame and lust, trying to encourage my fevered mind to plunge over the edge and have my first anal orgasm. \"Oh, yes. Fuck my ass, Dave. Fuck this little slut!\" Just another second or two and I would be there...\n\nA buzzer rang out. \n\nOh my God, Dave was here already! I frantically checked my phone as I ran out of the bathroom naked, with the buttplug still buried inside me. He was early, damn him! I ran to the door to buzz him in the downstairs gate; I was on the third floor so I'd have a little bit of time to get ready still. I ran back to my room, texting him that I needed a couple minutes. \n\nI tossed the phone and hurriedly got dressed. I grabbed a sheer, black thong and a matching front-clasp bra, the fabric almost see-through. No time to second guess now as I pulled on a short cocktail dress which had a low cut neckline that made the most of my cleavage. I'd rejected it as too dressy earlier in the night, but picked it now because it was quick to get on and only had one short zipper.\n\nDave was knocking on the door. Fuck! I pulled on my stiletto heels one at a time as I jogged back to the living room. One last check of myself in the small mirror by the doorway to make sure my hair and makeup hadn't gotten too disheveled from my masturbation, and I was ready to meet him.\n\nI realized that the fingers on my left hand were still wet with my arousal and clenched them into a fist as I tried to collect myself and act normal. And there was also my middle finger on my right hand, which had been plunging into my ass a couple minutes ago. I balled that into a fist as well. I should run and wash them...\n\nDave knocked again.\n\nNo time! I was breathing heavily and definitely agitated as I opened the door, but forced a big smile on my face.\n\n\"Amanda!\" said Dave with a heart smashing smile. \n\n\"Who?\" I was confused for second, he was too cute to think straight, and then I remembered my pseudonym. \"Oh, yes, I'm Amanda! That's my name!\"\n\n\"Whoah! You look amazing! Even better than your pictures!\" Dave said as he entered. He didn't comment on my strange balled hands, and instead gave me a nice hug and a sweet kiss on the cheek as my fists batted against his back. Did his hand linger a bit too long on the top of my ass, I wondered? Checking out the goods, perhaps? Then again, what was inappropriate for a man I'd agreed to let rape me?\n\nDave looked pretty good himself. Okay, I guess I can admit that he was fucking hot! His jawline was as sexy as his pictures hinted, nicely stubbled and strong. His eyes were blue and piercing, and his light brown hair cut short. You could tell he was muscled, even under the jeans and collared shirt he wore. And he was tall, easily over six foot, and I found myself looking up at him with a goofy expression of adoration already. This was my rapist!\n\n\"Aww, thank you!\" I said, blushing at his compliment as I waved him in. \"You look terrific too.\"\n\nWe made some awkward chit chat and I offered him a drink. Well, I felt awkward, but he seemed very cool and collected as he praised my decor and artwork. I ran off to get a bottle of wine, and wash my hands. He sat on the couch, waiting for me, and placed a small backpack he was carrying on the ground next to him. I started up music from the kitchen, some mellow R&B to get us in the mood, and hurried back, very eager, and gave him a glass of wine. I raised mine for a toast.\n\n\"A toast? Here's to\u2014\"\n\n\"Here's to raping you!\" said Dave with a grin, cutting off my attempt at a more normal toast.\n\n\"Uhm, yeah!\" I replied, at a loss of words. My face flushed and I felt myself turn bright red.\n\nThe word \"rape\" sounded jarring coming from his friendly face and I was suddenly reminded just how perverted this whole roleplay idea was. I was a nice girl, with a fancy apartment in a good part of town, a respectable job, and a degree from a great college. I wasn't some freaky whore with repressed daddy issues, or whatever made girls normally want to be raped. I hadn't been abused and, aside from a filthy masturbation frenzy this week, enjoyed normal porn. \n\nThis didn't feel right anymore.\n\nThe truth hit me like a ton of bricks, I really wasn't a kinky slut! I just wanted Dave to fuck me, and didn't need any of this perverted roleplay bullshit to get turned on. All my deviant fantasies seemed too extreme and bizarre to inflict on him, or anyone, in person. Some things are best left to masturbation in private, with no one else having to know. Those could remain my dirty little secret.\n\nI felt a sudden surge of excitement as my brain jumped on this new train of thought. My reluctance confirmed that I was a normal girl, or at worst slightly slutty. Even being a normal slut suddenly sounded great, yay! I wrote a fucking paper on the topic so I should know that all this perverted non-consent fantasy stuff was just a hangover of my repressed upbringing. Confronted with the opportunity, I now knew that I didn't want to do any of it for real! There was nothing wrong with being horny and wanting a hot guy to smash me hard and if I just embraced that totally normal desire, all the other kinky urges would fade from my mind! \n\nI felt like a weight had been lifted from my chest and smiled at Dave out of the blue. How to tell him, though? He looked so eager right now.\n\nI sat down and emitted a little shocked gasp as I realized I still had my buttplug inside me!\n\n\"Are you ok?\" asked Dave, putting his hand on my knee and leaning closer. He looked very concerned. Aww, he was so sweet! A questioning smile appeared on his handsome face. \"You aren't having second thoughts, are you?\"\n\nI examined his hand nervously. My dress was short and rode up quite high, forcing me to keep my thighs together for modesty. His touch was electric, which scared me for a second, but I was indeed still having cold feet despite the erotic tingle it was giving me. As I thought about it, I realized my doubts were only getting stronger because of his gentle touch. I craved more of that kind of tender intimacy, not the kinky shit I'd foolishly signed up for. All of it just confirmed in my mind that I was normal!\n\nI couldn't wait to tell Yasmin that I'd just had hot sex and did nothing kinky involving non-consent! I placed my wine glass on the table and nodded my head.\n\n\"Uhm, kind of,\" I answered, giggling nervously. \n\nI still wanted to fuck him, so he shouldn't be that let down. Plus, he didn't seem like the kind of guy that would really want to do all that fucked up stuff anyway, I rationalized. Just look at the adorable concerned expression still on his face right now! He probably forced himself to be a scary rapist for the messed up sluts that typically used Persephone. I was sure that he preferred hot normal sex with well adjusted women like myself, and would be as relieved as I was to skip the roleplay nonsense.\n\n\"I mean, I think you are incredibly sexy and I would love to make love with you tonight, but I'm not sure I'm ready for a heavy roleplay now that you are here, in person. I don't think I'm that kinky, actually. Maybe next time?\" I said, giving him a sweet smile. \n\n\"That's okay,\" Dave replied, his head nodding as if he expected my words. I relaxed and smiled back at him. I knew he wouldn't be upset! He was such a gentleman. Tonight was going to be fun! \n\nHe slid a bit closer. His hand went up my thigh aggressively. \n\nOh, I guess he was ready to start the lovemaking! \n\nI instinctively lowered my hands to stop his advance. His fingers had reached the hem of my skirt, which hovered at my upper thigh, and I was a bit shocked at how out of the blue his move had been. His firm touch did send tingles up my leg and I felt a little sympathetic heat grow between my thighs.\n\n\"Dave!\" I said, with another nervous giggle, as I slid away a couple inches. I tried to give him a reprimanding look and clutched his wayward hand tightly to keep it at bay. \"Let's take it slow! Why don't we drink a glass of\u2014\"\n\n\"I knew you were going to chicken out,\" he interrupted. His smile was smug now and I fell a little chill run down my spine. The caring was gone from his eyes and there was a hunger in them that made me suddenly scared. Paradoxically, the heat in my sex only seemed to increase as I got more alarmed. His eyes ogled my body brazenly. \"Good thing I don't take no for an answer.\"\n\n\"Oh wait, are you starting the roleplay?\" I asked, flashing him a nervous smile. I felt relieved as I decided that he just didn't understand that I was serious about skipping that stuff. He was only acting aggressive because he thought we were playing a game! \"No, don't start it yet. I really don't want to\u2014\"\n\nI squirmed away from him and tried vainly to fend off both of his hands as he aggressively moved them under my dress. He rose up, placing one knee on the couch, and followed me like a cat after a mouse. I scooted back, then scooted back again, all in a failed attempt to avoid his relentless fingers. My butt hit the arm of the couch and I was out of room! \n\n\"Roleplay? What fuckin' roleplay?\" snarled Dave. One of his hands latched onto my thigh, high under my skirt. He grabbed my other thigh for good measure and tugged me back towards him easily, jerking my legs onto the couch and parting them around his planted knee. My dress rode up as my ass slid down the couch, and the fabric bunched around my waist. His hands felt like vises as I pried at his fingers futilely. I was suddenly flat on my back and looking up at him!\n\n\"No, I don't want to do the roleplay, I just want sex!\" I whined, now truly alarmed and hoping my offer of sex would slow him down. That's all he really wanted, right? \n\n\"Don't worry, you'll get your sex,\" he said with a smirk.\n\nHe was so much bigger and stronger than me that another stab of fear shot through my body. I tried to push against his chest as he loomed over me, hoping my futile resistance would at least send the message that he should slow down. His knee forced its way higher, between my thighs, and spread them open by pinning one against the back of the couch. He sat down on my other thigh, trapping it with his weight. I gasped in shock, acutely aware that I was now pinned down, splayed before him, and fully exposed below the waist in just my see-through thong! \n\n\"Please, Dave, let's slow down! Take it easy!\" I shouted at him, eyes wide with fear as I pushed with all my might against his chest. It felt like I was shoving a stone wall. I yelled at him again, my voice breaking, \"I-I'm not a kinky slut!\"\n\nThis was WAY too aggressive for my idea of lovemaking! Sure, I had been very willing to have sex with him a minute ago, but he was still a stranger and I liked being seduced a bit. I'm a three course meal, not fast food! He was already manhandling me like I was some loose slut just minutes after meeting me. \n\nYet, probably because I had been playing with myself before his arrival, I could also feel how turned on I was by his dominating treatment of my body. I had this strange fear that he'd discover how aroused I was given my exposed position. How could I claim to not be a kinky slut if he noticed my dripping sex? What would he think of me then? He would never stop doing whatever he wanted to me and instead use my obvious enjoyment as his permission!\n\n\"Do you think I give a fuck what you want?\" he said and laughed at me. \"You dumb slut, what do you think this app really is? A roleplay app? No! Men pay money to fuck the shit out of horny whores like you. And we can do whatever we want, because you agreed to get raped by us already as part of accepting the terms of service. Try explaining that to a cop. You are all mine tonight. I can do whatever the fuck I want to you.\"\n\n\"Nooooo! Please!\" I shouted again, hoping against logic that repetition would magically make him stop and that his chilling words were all just part of his script. Could it be true? Was this all just a set-up to let violent perverts like Dave abuse innocent girls like myself?! Already scared, I suddenly felt my body tremble in a new level of terror. I repeated my earlier statement mindlessly, my brain spinning, \"I'm not a kinky slut! I'm not!\"\n\nI was absolutely terrified, I realized, but instead of being turned off, my body felt hot and my heart was pounding in what felt like excitement, not fear. He loomed over me, one of his hands planted by my shoulder to block me in, and his knee still forcing my thighs wide. He was so big, so strong, and so completely overpowering, that I let out a small, plaintive moan of helplessness. \n\nI could do nothing to stop him!\n\nBut, were his words for real?! That question kept flashing in my head over and over again. It couldn't be true, could it? My mind was fixated on the subtle difference between a roleplay gone awry, or a pyschopathic rapist having his way with me. If it was the first, he was still a nice guy and likely respected boundaries, but if the second, well, he could do anything to me at all! My mind was suddenly filled with images of him forcing me to do all kinds of depraved acts against my will. I was panicking, but my body was tingling everywhere from a mix of adrenaline and anticipation.\n\nThe question I didn't want to dwell on was why did the fear that he might be a real rapist turn me on so much?!\n\nI began sobbing slightly, my fists pounding his solid chest like a kitten batting ineffectually at a fully grown lion. I struggled to think, my mind still consumed with the horrible things I was imagining that he was going to force me to do. Focus, Anna. I took a ragged, sputtering breath in an attempt to get a grip on my emotions. He'd said last night that we should begin like this, acting as if I had second thoughts, hadn't he? He likely believed I was just playing along. This was just his script and he didn't realize I was serious. How could I convince him? There was something I was forgetting in my frantic state.\n\n\"Please, just sex! Fuck me! No roleplay!\" I cried out desperately, hoping to cut through his act by upping the sheer terror level in my voice. Couldn't he tell that I was in a full on panic? Surely he'd stop when he saw me like this! \"I don't like this!\"\n\n\"Are you really saying you don't enjoy this?\" asked Dave, his eyes glinted darkly and he smiled at my hysterical words. He seemed to be enjoying this way too much.\n\nTo answer his own question, he reached between my legs with a hand. I tried in vain to squeeze my thighs shut, but he had them pinned them open firmly. I let out a loud gasp as he cupped my sex in one of his beefy hands. I was so aroused that his touch actually made a wet, splashing noise on contact! I felt my face and chest flush in a mix of embarrassment and paradoxically, more arousal. His fingers fluttered in my folds, the sheer fabric of the damp thong offering no protection at all. \n\n\"Wow, you've soaked through your panties, and I haven't even done anything yet!\" Dave said in mocking admiration. He gave my sex a possessive squeeze. \"I've never felt a bigger slut.\"\n\n\"Noooooo,\" I wailed out, closing my eyes and grimacing, trying to will myself to not enjoy the sensations that were sending jolts of pleasure up my spine.\n\n\"Don't you want to cum?\" he teased, then lifted his fingers from my crotch suddenly.\n\n\"Noooooo!\" I groaned out again, but I wasn't sure whether I was answering his question, or complaining about his fingers leaving my sex.\n\nI was tingling between my legs like I'd never felt before, raw sexual arousal mixed with equal doses of adrenaline and shame. It was awful and amazing at the same time. This psychopath was going to have his way with me because I was a horny, naive, and, I hated to admit it, a kinky slut that fell for his bullshit, hook, line and sinker. He wasn't some gentleman, he was a rapist! And even worse, my body was enjoying it! ",
        "\"Please, Dave\u2014\"\n\nHe slapped me, hard, the shock making me gasp for a second. Before I could speak, he shoved three of his fingers into my mouth. They were coated in my own arousal, and now my own taste and smell overwhelmed me with the evidence of my body's betrayal. I groaned as his fingers drove deep, pushing against my tonsils and making me gag.\n\n\"Call me Big Dave, slut,\" he barked. The fingers were abruptly removed and I gasped for air. I swallowed a bit of the bile that had appeared in my mouth, but the acrid flavor actually helped clear my mind by erasing the maddening taste of my own juices.\n\n\"Big Dave, I don't want to\u2014\" I began, than screamed in a mix of pain and pleasure as he slapped my cunt! The wet thwack of his blow was incredibly loud and sprayed my overflowing juices around my crotch. He held his hand again on my mound, my entire vulva a raging fire of stinging pain and tingling pleasure, with pleasure dominating in the end as it throbbed hotly in time with my racing pulse.\n\n\"Shut up,\" he said casually, and placed his free hand around the base of my throat to pin me to the couch. \n\nI found myself obeying, biting my lower lip and nodding as tears flowed out of my eyes. He was just too big and strong, what could I do? His fingers around my neck were terrifying. Even without squeezing me, I felt short of breath, and it seemed that with one clench of his fist he could suffocate me. \n\nMy hands, which had been fluttering around his chest, moved to grab the wrist of the hand that now kneaded my sopping wet slit. I tried to push his arm away, but it was like attempting to budge an iron pole anchored in cement. \n\nThe pleasure he was sending through my body with those fingers was enhanced by the stark contrast of the fading pain from his slap. It as was if his blow had energized all my nerve endings and flooded that already engorged flesh with fresh blood. I was freaking out because it felt too good, better than anything I'd done to myself with fingers, vibrators, and certainly better than anything any other man had done to me. \n\nThe idea that he'd make me cum this quickly, and just from just fingering me outside my panties, was too embarrassing to contemplate. I shouldn't be enjoying this, and he definitely shouldn't know that I was!\n\nI tried to squirm away, but his other hand gripped my neck tighter. A light squeeze of my throat was all the warning I needed to make me keep my upper body still. My attempts at escape shifted to my lower body, my hips rolling as I frantically tried to free my sex from his iron grasp. Unfortunately, all my wriggling was doing was causing my mound to rub against his palm and make me even more aroused! I still tried in vain to buck away from his hand, moaning and sobbing in dismay as my pleasure continued to build despite my efforts.\n\n\"Nooooo! Please!\" I wailed out. I was going to cum very soon and was mortified. How could this be happening? Why was I enjoying his assault so much!?\n\nI'm not sure how long I struggled, but at a certain point, I realized that my sobs had turned into moans of pleasure and I wasn't fighting him any longer. In horror, I discovered that my body had betrayed me yet again, and now I was moving myself rhythmically against him, subtly adjusting my pelvis angle to better push my throbbing clit into the base of his palm. My hands no longer tried to push his wrist away, instead they pulled his hand harder against my slit.\n\nDon't get me wrong, I was still very upset about this vicious assault, but my brain had decided that indignation could wait until after I came. As soon as I orgasmed, I could devote my full attention to talking my way out of this situation or escaping. Just a quick little cum, to clear my head and take the edge off, and I'd be back to being horrified, scared, and definitely not aroused any more! This was rape, or sexual assault, or creepy aggression, whatever you wanted to call it, and I knew I'd be properly upset once this damn surge of pleasure peaked! \n\n\"Now that's an eager little slut, trying to rub yourself off for a quick cum,\" Dave said, a smile on his face. I tried to protest, but the only noise I made was a squeaking, stuttering \"N-noooo\" that sounded more like a \"Yes\" in my ears. The sloppy, wet noises of my folds rubbing against his hand had become so loud that even my ears couldn't deny the evidence of what a slut I'd become. \n\nA tiny voice in my head was worried I was going to soil the cushions with all my arousal.\n\nHe suddenly lifted his teasing hand, easily breaking free from the grip of my fingers as if I hadn't even been clutching his wrist. The wet hand hovered for a second, menacingly, and then he started spanking my cunt again, this time very hard! Not once, or twice, but three times fast in a row! \n\nI howled in pain and swiveled my hips frantically to avoid his blows, my hands unable to block the rapid strikes. My thighs, happily spread as I had quested towards orgasm, now futilely tried to snap shut as his knee pinned me open. \"You haven't earned your cum yet, though. Have you?\"\n\n\"P-please... Dave\u2014\" I began, but was cut off by another vicious slap to my face. I realized my mistake at once and moaned out my next words using his preferred name. \"Sorry, B-big Dave! P-pleaassseee...\"\n\n\"Please what? Make you cum, or stop?\" he asked mockingly. \n\nHis fingers tapped around my mound and I reflexively splayed myself open for him again, thighs spreading wider, as my body sought a return to pleasure. His hand teased me with a horrible and frustrating mix of mini slaps, soft rubs, and pushes into my passage through the sodden fabric of my underwear. Anytime I thought a rhythm was building, he'd stop and torture me with light brushes against my clit or sharp tugs on my swollen lips. The thong itself had become a wet and crumpled strip of cloth that split my slit like a wedgie.\n\n\"Answer me. What do you want?\" he asked. \n\nHad he asked me a question? I'd been simply whimpering and moaning from his teasing.\n\n\"I-I don't know,\" I wailed out, barely remembering the choice he'd given me. I was crying again. My hips moved, chasing his fingers pathetically. My body had a mind of its own and wanted the pleasure back. \"Cum. Please, just let me cum.\"\n\nI hated myself for saying it, knowing that I had legitimized his assault on me in some sick fashion by begging him to give me more pleasure. I should be hating him, scared for my life, and trying to escape, but I was instead begging for an orgasm like a cum hungry whore! I was undeniably turned on by his roughness and my lack of control. \n\nHow had this happened?!\n\n\"Let's have you earn it, then,\" Dave said with a smile. He grabbed a fistful of my hair, pulled me up to sitting, and shoved his juice covered fingers into my throat again, gagging me on my own arousal for the second time. This time he didn't let up, forcing his fingers deep to make me retch, pulling them out briefly, and then jamming them back in again. I thought I was going to vomit, in fact I hoped I would to make him stop, but he seemed to know just how far to push me. \"I doubt you can deep throat my big cock, but I'm sure you'll try your best no matter what.\"\n\n\"Ack, ugh,\" I spat out, saliva streaming from my lips as he pulled his fingers out one last time. I shook my head \"No\" again as he pulled me off the couch by my hair and drove me down onto my knees. As the immediate lure of orgasm faded, some semblance of self-control was coming back and I grabbed at his hand in my hair to try and pry it off and end the searing pain in my scalp. \"No, Please! Da\u2014 BIG Dave, stop! I don't want this! I'm not a kinky slut! Just have normal sex with me!\"\n\nA cuff clicked onto one of my wrists. He'd reached into his backpack and grabbed the handcuffs while I'd been distracted with my hair. With one on, he muscled my arms around behind my back and cuffed them together. My hands twisted frantically as I tested the unyielding metal cuffs. \n\nIn horror, I realized that I was truly helpless now.\n\nA stranger had me cuffed and on my knees, and was about to have his way with me. The setup was a huge fantasy of mine and I'd cum to this exact scenario several times this week while enjoying porn. Reality was a bit different, it seemed, and I was frantic, my stomach roiling in fear as I looked around the room for some means of escape. \n\nYet, I couldn't deny that I was also incredibly turned on, my sex throbbing and tingling with arousal and my nipples hard and aching to be touched. A rosy flush darkened my skin from my neck to my belly. Adrenaline and arousal, fear and lust, all these emotions seemed suddenly jumbled up in my mind and indistinguishable from each other.\n\nDave began stripping off his clothes and I found myself watching in terror-filled fascination. Okay, a sick and perverted part of my brain did admire his body as he pulled his shirt off. He looked like a fucking fitness model with more abs than I could count and muscles growing on top of his muscles, so at least my rapist was really hot! I felt disgusted at myself for even thinking that, but it was true. As he unzipped his jeans, my eyes grew wide. I noticed for the first time the impossibly long and thick bulge going down his thigh that I knew was going to be in my mouth very soon.\n\n\"Big Dave, I don't want to.. oh my GOD!\" I screamed out, a new carnal fear filling my mind as his monster cock erupted from his pants and proudly pointed straight out in front of him. Up close and in person, it was bigger than in his pictures. Perhaps his hands were just very large and had made it seem smaller? In any event, as he kicked off his jeans and fisted himself slowly in front of me, I fell silent in open mouthed horror.\n\nThe thought of that thing in my mouth, let alone my asshole, was terrifying. I could probably get it in my pussy, although it would stretch me like I've never been stretched before. That was a challenge that was worth the risk as I imagined how satisfying it would feel to be filled by that thing. I'd be stuffed like a Thanksgiving turkey! I ran my tongue around my suddenly dry lips as my mouth hung open in what had become pure awe.\n\n\"Look at you, mouth open and hungry for me,\" Dave said. \"That's it, lick your lips and get ready for my cock.\"\n\nI snapped my jaw shut at his words. I cursed myself for the dirty thoughts that had been filling my head, which clearly were sending the wrong impression to Dave. This guy was a monster, as evidenced by his monster cock, and I needed to concentrate on escaping, not wasting my time fantasizing about taking that obscenely large penis in my suddenly hungry vagina. \n\nI shook my head at him and gave him an appealing look, my lower lip quivering, hoping for some shred of sympathy. There was no way that horse cock was going to fit in my mouth!\n\n\"Don't be shy, open up again.\" The slap was unexpected and knocked me into the couch. He yanked me back up and bent over to whisper in my ear as I blinked fresh tears out of my eyes. Both my cheeks stung now. He grabbed me by my throat and shook me, his fingers squeezing hard enough to make me gasp for air. \"You either suck me, and give it your all, and I just might leave after giving you a good cum as well. Or you keep resisting and I fucking hurt you the rest of the night and never let you cum. Do you understand? Either way, I'm fucking the shit out of you, so you choose how much pain you want.\"\n\nTo emphasize his point, he yanked on my hair and jerked my eyes up to meet his own. They were cold and merciless. He was deadly serious. A chill of dread swept through my body and I trembled under his gaze. Again, though, my arousal seemed to spike in lockstep with my fear. I felt my sex grow hot and my thighs quivered with a decidedly different primal emotion. \n\nI nodded reflexively. The threat he made was quite clear and I didn't want to get hurt. My mind reluctantly joined forces with my traitorous body and I shifted into appeasement mode. It seemed obvious that playing along with his perverted plans was the easiest route to getting him out of my apartment quickly, particularly since I might get a cum out of it as well. Wait... that shouldn't matter!\n\n\"Y-yes, yes. I'll do it,\" I said, opening my mouth as wide as I could. \"Please don't hurt me!\"\n\n\"That's my little slut,\" Dave said, rubbing my head like he might a good pet. It was humiliating, but I felt a perplexing sense of happiness that he was pleased with me. The massive cock loomed in front of me as he lifted it to my lips. The bulbous tip looked impossibly swollen and its veined and thick shaft seemed to stretch forever before my face. Straining my jaws wide, I took the head into my mouth and began to suck it gently. He grasped my face and guided me with two hands, unsatisfied with my efforts. I tasted his salty pre-cum and gurgled gently, my tongue toying with the soft and sensitive flesh at the bottom of his circumsized tip. \"Good girl, that's it. Please me.\"\n\nJust the tip was enough to stretch my lips wide, and I tried to focus on my job, ignoring the horror that this night had turned into. His big cock was a nice distraction, in some perverted way, as it gave me something to work that was ostensibly productive to my situation. Dave stretched my cheeks in every direction, bulging them obscenely as he explored the recesses of my mouth. I didn't have to do much at first, just keep my tongue under his shaft and lips wrapped around his meat. Then he started to push against my throat.\n\n\"Ack, ugh, glub, glub, gluck\" was the only thing I could say. I was trying to warn him that I couldn't deep throat that well, and had only done it with much smaller penises in the past. With my nervously clenching hands cuffed behind me, I knew there was nothing I could do to stop him from forcing me to try. He had my head firmly in his grasp and started pushing further into my mouth. I began gagging immediately! He'd pull back, let me gasp for air briefly as a river of spit and bile streamed out of my mouth, then push back in deeper almost immediately.\n\n\"No! Please!\" I'd scream out between thrusts, but his cock battered against my throat again and again. \"Glub, gluck, gluck. Ack.\" I sounded like a choking duck. \n\nEventually, whether he just pounded my throat into submission, or my muscles grew tired of fighting him, he pushed past the back of my mouth and lodged his tip into the top of my throat, leaving me feeling like I was in the middle of inhaling a giant sausage. The mental trick of imagining I was swallowing food caused my gag reflex to wane and he stayed like that as I panted through my nose, bloodshot eyes wide and staring up at him. \n\n\"Ack, Ack. Gluck. Ack. ACK!\" I was spasming on his cock now, trying to tell him to pull out. I could still barely breathe through my nose, but he was on the verge of pinching my airway shut if he want deeper.\n\n\"Excellent, now let's fuck the shit out of this tight little throat,\" Dave grunted out and began to thrust into me. I squirmed and tried to shake my head to dissuade him, but I was impaled on his big cock and gripped tightly by his hands. To my dismay, the back and forth motion of shaking \"no\" just helped his cock slide in deeper! There was nothing I could do to stop him! \n\n\"Keep it open. Mouth wide!\" He started to slide in and out of me, plunging deeper each time. I fought to suck down air when his dick slid out far enough for my airway to open back up. I'd never experienced a cock this big anywhere in my body, let alone my throat, and every forward push made my eyes bulge in terror at the impossibility of that thick tube fitting inside me! My body adjusted it's angle intuitively, my throat lining up with his cock to take it as straight as possible, and he eventually started fucking my face like a hungry pussy! \n\nHe was already filling me so much, going deep down my throat, and yet I still had a lot of cock left to swallow. I realized in mute terror that he was going to go in all the way, that there was no stopping until he was balls deep in me. The pragmatic part of me decided that I better get this over with as quickly as possible and I started trying my best to accommodate him. \n\n\"Gluck. Gluck. Gluck. Gluck. Ack.\" The noises he was forcing out of me made the whole experience even more humiliating, like I was a voiceover artist for some filthy porno.\n\nDrool, bile, and spit were overflowing my mouth when he pulled out, but I hungrily pushed against him with my mouth when he drove back in again. My throat fluttered and spasmed, but I ignored my now overloaded gag reflex and forced myself to picture his cock as a delicious tube of hot meat. I'd never felt so stretched and full before, and frankly I was shocked that I was able to get any of it in my throat, let alone almost the entire thing. I felt a perverted sense of accomplishment, like I'd achieved some slut merit badge for deep throating monster cock!\n\n\"Yeah, that's it. Be a good slut and touch my balls with your tongue,\" said Dave as he pulled me forward one last time and drove his full length into my now eager mouth. He was buried so deep down my throat that it felt like he was pushing into my larynx! My nose smushed into his smooth pubic mound and, sure enough, I could feel his heavy sack on my lower lip. With a groan of effort that vibrated his thick cock, I darted my tongue forward and licked his hairless balls. \n\nI couldn't breathe like this, my airway was totally collapsed, and I started to struggle against him until a primal call for oxygen make me full out panic. At the last second, when I was squirming and jerking on his dick frantically, he released me with no warning. I went flying backwards to sprawl on the floor, a fountain of pent-up drool and spit followed my mouth, spraying into the air and splashing on my disheveled body.\n\n\"I\"m very surprised you haven't tried to use your safe word,\" said Dave as he straddled my torso. \"Not that I'd even give a fuck that is. You know this is real, don't you?\"\n\nThose words sparked a perverse sense of hope. Safeword! That was the missing thing I'd forgotten. I'd given him one while we talked on the phone last night, but hadn't thought I would need it as he'd sounded so sexy, yet considerate. Maybe this was all just a role play, a very good one I'd have to admit, and he was trying to remind me in a gentle and caring way that I had a means to pause it! I just had to give him the safeword to request a time out. That would be great as I could catch my breath, and then we could resume, because, honestly, I was incredibly turned on at getting used like this. I felt a little surge of hope and smiled up at him, not that he acknowledged my expression in the slightest. \n\nHe wasn't a rapist! I clung to the hope like a life preserver in a stormy sea.\n\nNow, what was my safe word? Horror filled me again as I realized I had no fucking clue. I'd been in the grocery store and picked something at random. What was it? Shit. He was squatting down now and I tried to squirm away, but he had me pinned again. His balls were being fed into my mouth and I obediently sucked them as my mind raced. He rubbed his wet cock around my face as I sucked, fisting his ridiculous dong slowly with two hands. \n\nFuck, it was hard to think with that massive cock in front of me.\n\n\"You are such a sloppy little slut. You'd be horrified to see what a mess you pretty little face is already. And I haven't even gotten started,\" Dave said, reaching back to give my cunt another spank.\n\nI actually could imagine what I looked like as I'd seen plenty of perverted porn videos this week in which the actress was turned into a sloppy mess from facefucking. I guessed my face was an explosion of smudged lipstick, drool, tears, and saliva, with my cheeks glowing bright red from all his slaps. And of course, my eye makeup was likely everywhere, maybe running down my cheeks like Cheetah tears. I made a mental note to not put on heavy makeup, especially eyeliner and mascara, the next time I was going to get fucked like a filthy whore.",
        "\"Ack, ugh, mhmm,\" I groaned into his balls. Dave slid up suddenly, reaching down and spreading his ass cheeks as he positioned his pucker above my face. \"NOO! PLEASE! I don't do that\u2014\" I screamed out in horror as his intent became obvious. He silenced me by lowering his asshole onto my mouth. I had no other option but to lick it as he moved himself in a slow circle above me. At least his ass crack was smooth and hairless as well, as I couldn't deal with butt hair right now.\n\nMy vision was obscured as this massive man sat on my face, his balls resting on my forehead and my nose nuzzling into his taint. What was my fucking safeword!? I needed it now more than ever, but my mind was drawing a blank. Trying to remember was a welcome distraction from what my mouth was being forced to do.\n\nAs you probably guessed, I'd never eaten a man's asshole before. In fact, I found such acts disgusting for obvious reasons. Now, several men have done it to me, but I wouldn't even kiss them afterwards until they'd used mouthwash to sanitize themselves. I have to admit, it had felt good when I'd received it, and based on that I had a general idea of what to do. Dave didn't make it easy as he was suffocating me with his ass crack, so my rimming was more out of self-defense than an attempt to please him.\n\nWhat had I written on my profile about rimming? I couldn't remember, so maybe I'd left it blank and he'd assumed that it was covered under anal. I vaguely recall clicking a box that indicated I liked being rimmed, but what if I had picked the wrong one and he thought I enjoyed giving rimjobs?! YUCK! I was certainly not the kind of girl that enjoyed doing something this perverted. The only reason I was feeling even more aroused was out of fear and shame, right?\n\nThe taste and smell of him was overwhelming in the beginning, the musky sexual odor of a man of course, but also the earthy overtones of his ass. Surprisingly, it didn't taste bad after the first lick and I credit him in retrospect with taking care to clean himself before coming over. I started lapping through his crack madly to get him off me, my tongue pressing against his crinkled pucker in passing and making me marvel at the firmness and corrugated texture of that taboo hole, the likes of which had never touched my lips before. \n\nEventually, he stopped moving and hovered over my mouth. With a steady target that I couldn't avoid, I began to focus on his asshole, licking, kissing, sucking, and even probing it lightly with my tongue, anything to please him and get him off of me!\n\n\"That's it, my little slut, make out with my asshole. Stick your tongue in there as deep as you can,\" he ordered. When I hesitated, his hand reached down my body and I tensed for another cunt slap. Instead, he began to rub my sex again. I'm ashamed to admit that I spread my legs immediately for him and was soon writhing again, trying to climb back to the peak I had been approaching earlier. I was still so turned on that I was already close! \n\nMy tongue began pushing hard against him, but his ring was so tight and unyielding that I was getting frustrated. How had I gone from thinking a rimjob was disgusting to being annoyed that I couldn't get my tongue into his ass? \n\nWhat the fuck was wrong with me!\n\nSuddenly, something relaxed and my tongue slipped in. Just the tip at first, but with a foot in the door, I soon was able to push the rest in. I was straining, my tongue quivering from the effort, but soon that slippery eel was fucking his dark hole with wanton eagerness. I felt this perverse need to try and please him. Anything to keep the pleasure coming on my pussy and avoid the spanks! \n\nIf I could make him happy, maybe he'd let me cum finally...\n\nSmack!\n\nJust when I was thinking my orgasm was around the corner, he fucking spanked my pussy! \n\nI was kind of pissed now, howling directly into his butthole in mix of pain and denied pleasure. Some of my fear was gone as I had rationalized that he was still role playing, but I still couldn't remember my safe word. That meant he could do anything he wanted to me and that there was no way to stop him. The idea that I was still just as helpless and in his control as if he was really raping me caused a jolt of dirty fear that made me tremble. Things were getting a little too crazy I realized as I regained my bearings. I should try to get him to be a little gentler, although this feeling of helplessness was pretty hot.\n\n\"Get up you filthy little whore,\" Dave ordered, grabbing my hair and pulling me back to my knees. His hands fumbled at my zipper for a second, then he ripped the back of my dress open, perhaps on purpose, before giving the front a savage tug down.\n\n\"Hey! That is an expensive dr\u2014\" I started to complain, but he slapped my face again hard.\n\n\"Shut the fuck up. Do you think I care?\" he sneered at me. He curled his lip, as if I was distasteful, and spat a huge dollop of hot spit onto my already sloppy face. \"Disgusting slut.\"\n\nWow. I'd never been spit on before, although I had listed that as a \"Fave\" because it seemed fairly kinky. It was pretty demeaning, but I kind of liked it. Alright, my body definitely liked it as I trembled from a sudden wave of hot lust. The act made his words ring true, as I certainly felt like a filthy slut with his saliva dribbling down my cheeks.\n\nThen again, maybe he wasn't acting as ripping my dress, slapping me, and then spitting on me seemed rather rude! You'd think he'd be a little apologetic if he tore my dress and this was just a roleplay, right? \n\nI was clearly being pulled in a hundred different directions mentally, if you haven't noticed, and wound up staring at him with a look of fear and desire that he seemed to enjoy. At this point, I really didn't know if he was role playing, just being an asshole, or was truly a heartless rapist, but I was turned on by all three possibilities. The realization made me quiver and whimper.\n\n\"Nooooo,\" I wailed out again, though I was fooling no one. \"I'm not a slut!\"\n\nHis fingers found my hard nipples and he pinched them painfully through my bra. Both breasts got slapped when I tried to speak again. Everything was tingling now, especially my pussy and my boobs, and my stomach roiled in a perverse mix of dirty lust and fear.\n\nDave pulled me up and yanked the dress over my head. Unfortunately, it had shoulder straps that got stuck on my handcuffs. With an annoyed curse, he ripped the straps apart and threw the dress to the floor, leaving me balanced precariously on my stiletto heels and wearing only my thong and bra. The thong had long ago become a pussy wedgie in the front and I might as well have been naked given how sheer both pieces of underwear were. He stroked his cock as he studied my body with a critical gaze.\n\n\"You are fatter than your pictures, but this ass is still pretty fuckable,\" he said derisively, slapping one of my ass cheeks. I looked at him in shock, but couldn't deny I had been a couple pounds lighter in those pics. Maybe five at most. What the fuck, I was still pretty hot right? Why did I even care what my rapist thought of my body!\n\nHe slapped my face again as I opened my mouth to complain.\n\n\"Shut the fuck up unless I ask you something,\" was all he said as he scooped me up and tossed me over his shoulder as if I weighed nothing! Carrying me, that creepy backpack in his other hand, he walked to the bedroom while giving my ass casual spanks. He gloated, \"I'm going to wreck your other holes now.\" \n\nI felt helpless, like a naughty little girl being carried by her angry daddy for her punishment, but couldn't deny being ridiculously turned on at the thought of what he might do to me. At the bed, he tossed me down like a sack of potatoes.\n\n\"What have we here?\" I heard him ask, a delighted tone in his voice. I was face down, with my ass pointed towards him, and his fingers soon revealed that he'd found my butt plug. He tugged it roughly, almost pulling it out, but not quite. A burst of pleasure from my sphincter made me moan helplessly. \"A little ass whore getting her butt ready for my cock because she wants it so badly? Seriously, what kind of slut wears a buttplug to a blind date?\"\n\n\"N-no, I forgot to take it out,\" I wailed. I was crying now in pure shame. He must really think I'm the biggest slut he's ever seen! \"You got here too soon.\"\n\n\"Liar!\" Dave spanked my ass cheeks hard, peppering them with blows as I tried to wiggle away. The stings lingered painfully, but his slaps also drove the plug into my ass a bit and made me gasp out in pleasure between sobs. \"You've been eager to get my cock all week, haven't you?\"\n\n\"N-no! I just want normal sex, I don't want this!\" I cried out again, trying to roll over and worm away. He laughed and pinned me down, sitting on my lower back while facing my feet. My cuffed hands were fluttering and found his cock, which I began to stroke out of reflex, trying to distract him. \"P-please... stop the roleplay! Please Big Dave! I'm not a kinky slut!\"\n\n\"Liar!\" Dave yelled again, spanking my ass. \"You've been masturbating all week, haven't you?\"\n\nHis fingers pulled my thighs apart and I made no effort to close them. Instead, as soon as he began to tease my slit again, I tilted my ass up to give him better access. My only fear, and it kind of made everything hotter frankly, was that he'd spank my cunt again at any time and interrupt my building pleasure. Why couldn't he just be nice and let me cum? \n\nHis other hand tugged on my buttplug, pulling it out and pushing it back in roughly. My ass was nicely relaxed from my arousal and earlier play, and I could feel that the bulb shaped plug was moving in and out of my sphincter with embarrassing ease. I wasn't so tight anymore, it seemed.\n\n\"Y-yes, I touched myself just a little. Once or twice,\" I moaned out. The plug was driving me crazy, but his thick fingers were also relentless, now slipping past the wadded up gusset of my thong and driving into my hungry passage. A mix of sobs and whimpers erupted from my mouth as pleasure suddenly dominated my mind. Just like that, he had me back at the edge of release again. I started talking, almost to myself. \"I don't want to be raped anymore, please stop. I'm not this kind of girl. I'm not a slut. No. Stop. Oh God, I'm going to cum. No, please. I'm not a slut!\"\n\n\"You look like a slut to me. You are practically humping my fingers right now and your asshole is swallowing this buttplug like it's a pencil,\" Dave commented. I sobbed at the truth of his observations. \"Let's cut the bullshit. You are a dirty little whore and I'm going to fucking destroy you tonight. And you love the idea, don't you?\"\n\n\"NO!\" I gasped out, stiffening my body. My fingers squeezed his cock hard as I tried to deny his assertions. I wasn't a cum hungry whore, I really wasn't. I was a good girl. He was just seeing me in a weak moment. I could convince him still. I used to go to Church...\n\n\"Admit it and I'll let you cum.\"\n\n\"No! NO!\" I screamed out, trying to wriggle away. His weight pinned me down and his fingers redoubled their efforts. My thighs quivered again and that throbbing, fuzzy warmth was returning to my ass, spreading to my core. I wanted to cum so badly. \"Yes... Y-yes! YES! YES! I'm a slut! Big Dave.. let me cum! Oh GOD! P-pleeeease! Let me cum! I'm a whore! Yes! I've been fucking myself all week thinking about you!\"\n\nI was wiggling against him now shamelessly, pleasure my only goal. I no longer cared that he might be raping me and that I was acting like exactly the kind of girl I had tried to claim I wasn't. I just need to fucking cum so badly that I'd say anything and do anything he wanted at this point!\n\n\"Okay, I'll let you cum,\" Dave said, but he pulled the buttplug and his fingers out at the same time. I groaned in frustration, craning my neck to look back at him as I felt him rise off my back. I had almost gotten off, for what felt like the third or fourth time tonight, and I couldn't fathom why he had stopped!\n\n\"Noooooo!\" I cried out, desperate for my orgasm. Dave's hand appeared in front of my face and plopped the buttplug into my open mouth. It turns out when you say \"No\" your mouth opens perfectly to accept a buttplug sized object! I tried to spit it out, revolted at the idea of something that had been in my ass being in my mouth, but Dave held it firmly in place and spanked my cunt again as a warning.\n\n\"Suck on it. Don't spit it out. I'm going to make you cum like a fucking rocket,\" he ordered. I nodded my agreement and buried my face in shame into my bedspread. I couldn't bear to look at him as my humiliation was now complete. I sucked on the metal end of the plug experimentally as a distraction. The taste wasn't bad anymore, my saliva had erased it almost instantly, and it provided some perverted comfort for me, like a pacifier, as Dave repositioned himself behind me. \n\nI would do this humiliating act just to get my orgasm, then I'd spit it out and scream at him to let me go! It was a pretty pathetic plan, but a plan nonetheless.\n\n\"What the fuck is this?\" I heard him say. I felt him get off the bed and I reluctantly lifted my head to see what he was doing. He'd found my shoebox, which I'd left on the floor by closet. \"You are such a kinky little whore. Look at all this shit you left out for me to use!\"\n\n\"MHMM-Noooo!\" I cried out again, twisting my hands in the cuffs and trying to roll over. I spat the buttplug out of my mouth to explain. He had to be told that I didn't plan on him finding that and certainly didn't want him to use any of it! \"That's not my stuff! I forgot to put it away because you showed up early! I don't know how I got it\u2014\"\n\n\"Didn't I tell you to keep this in your fucking mouth?\" Dave snarled. He jammed the buttplug back into my lips and yanked my head up with my hair, lifting my upper body so my tits hung down. My eyes went wide as the first nipple clamp appeared, and the fire in my scalp from his tight grip faded as fear filled me. He didn't bother to take my bra off, instead just jerking the thin fabric of its cups down to expose my jiggling mounds. I groaned as he firmly attached a clamp to each of my large and engorged nipples.\n\nI sucked the buttplug in a mix of pain and pleasure. I'd never used nipple clamps before and they definitely hurt, but at the same time, I could feel my sensitive flesh tingling and swelling, the throbbing sensation somehow still sending pleasure waves into my brain! \n\n\"That's what you get for disobeying me!\"\n\nHe released my hair and I flopped back down, burying my face into my bedspread again. My nipples twinged as the weight of my body drove the nipple clamps into me. At least it was better this way, with my vision obscured by the bed. I tried to imagine this wasn't happening, that this whole night was just a dream. Surely I couldn't be handcuffed, nipple clamped, and facedown on my bed as a stranger was spreading my legs again! At least I had my buttplug to suck on.\n\n\"Damn, your ass is made to be fucked. I bet you've had a lot of cocks in here,\" Dave said as he pressed my tight hole with what felt like his thumb. Lube was being worked into it.\n\n\"Mhmm mmm,\" I grunted back around the buttplug, trying to tell him that it wasn't true.\n\n\"God, you are such a slut,\" he said with a chuckle. I moaned as I felt his tongue replace his thumb. He was licking my ass and wasn't shy at all. His tongue felt incredible, first lapping through my crack and then swirling around my pucker. Before I knew it, he'd snaked it inside me and I groaned and trembled as I felt him tongue-fucking that once tight hole. My dirty heat had returned and I felt my body lifting off the bed to meet his mouth. Fuck this felt so good. Could I have an orgasm just from having my ass tongued? If ever there was a time when my body could find a way, it would be right now. In fact, if he just kept going...\n\n\"Okay, here we go, cum anytime you want and as often as you want, slut,\" said Dave as his tongue disappeared from my ass. I groaned into the buttplug in frustration, yet again.\n\nMy eyes went wide and I lifted my head up in panic as I felt a much larger object suddenly appear at my tight asshole. I knew he was going to try to fuck my ass, I wasn't delusional, but I had assumed he would fuck my pussy first! That was the proper order of things. What kind of girl allowed a guy to go straight to assfucking?! The answer, of course, was that a girl like me would allow such depravity. Technically, though, I wasn't allowing anything as I had no say in the manner. In fact, I tried to squirm away like a non-slutty girl would, but his strong hands gripped my hips and pulled me back. \n\n\"Mhmm mmm!\" I moaned out, the buttplug muzzling my protest. My head turned and I looked at him with a frantic expression of fear. I was still prone on my stomach and wasn't even sure if this position was anatomically the easiest entry method, my prior boyfriend had always pulled my ass up and back so I was on my knees. If he was going to do it, I wanted to have optimal conditions!\n\n\"Oh you want it, don't you! I can hear you begging for it,\" cooed Dave, mocking me. He shoved my head back down roughly. \"Here it comes!\"\n\nHis fingers spread my ass cheeks lewdly and the object, clearly the big, swollen head of his monster cock, nestled in against my suddenly tight and nervous ring. He'd had it practically gaping when his tongue had teased it, but now my fear had turned it into a pinhole. There was just no fucking way he was going to fit! Surely he could tell that? He was no doubt an experienced assfucker and must know that mine was way too small for his girth. \n\n\"Easy, if you don't relax, this is REALLY going to hurt,\" he said, squeezing my buttcheeks with his fingers in what may have been an attempt at a relaxing massage. \"Breathe.\"\n\nI was hyperventilating through my nose as he began to push against my backdoor. My buttplug was probably one half the girth of his dick and was a laughable device to try to stretch me in preparation for him. It was uncomfortable, but every time he pressed against me I also felt a warm tingle spread through my ass. It was similar to the wonderful feelings I'd received from the buttplug earlier. The lure of that now familiar pleasure seemed to soothe my nerves, or maybe my anxious brain finally decided to get out of the picture and let my sluttish body handle its job without needless oversight. Whatever the reason, I could feel my asshole start to relax and stretch with his pushes. I timed my own breathing to his rhythm, exhaling deeply and relaxing my core while squeezing my core muscles tight to open my pucker wide.\n\nA bit of his head was poking inside me now every time he pushed, and my little ring was hungrily trying to take in more. A particularly deep push, that made me groan in pain and pleasure, got enough of his tip inside that Dave took a different tactic. Now keeping my ass half-opened, he started to circle his hips and swirl his head into my ass. Pushing at different angles and with a relentless forward pressure, more and more of his cock slipped into me. \n\nHe didn't let my asshole constrict, only widen, and kept every millimeter of hard fought territory he gained while inexorably sliding deeper and deeper into me. It was too much suddenly. I felt close to breaking, or tearing, or something horrible happening down there. The pleasure was surpassed by pain for second. My asshole felt like it was the diameter of a soda can!\n\n\"MHMMMMMM MMMM!\" I groaned out in warning.\n\nSuddenly, he was in! \n\nWith the helmeted tip past my sphincter, an inch of his cock slid forward easily as my ring contracted and squeezed around his relatively skinnier shaft. His cock now felt remarkably small and comfortable after what had just passed through me. I was back to feeling all pleasure again as he moved back and forth slowly, and I let out a sob of relief and lusty need.",
        "\"Not a problem for an ass whore like you,\" said Dave. I knew his expert assfucking skills played a role, but his comment sent another wave of dirty shame through my body and set my sex on fire anew. What kind of girl takes a cock this large in her ass so easily? The answer, a slut like me obviously!\n\nI had bigger concerns than my embarrassingly whorish anal skills as he moved the end of his cock back and forth in my suddenly relaxed and happy ass. The pleasure I was receiving was frankly ridiculous. Why hadn't I tried masturbating with some anal play before? Oh right, I'm not a slut, that's why! Well, my body certainly reminded me that I had to reevaluate my moral stance on anal masturbation as quivering waves of bliss started to emanate from his gentle rocking motion.\n\nIt felt so good and he wasn't even touching my cunt at all. There was some brief friction from my clit against the bedspread at times and my nipples had gone from painful to throbbingly sensitive from the clamps, but all of the mind numbing goodness I felt was from just the tip of his cock poking around at the entrance of my backdoor. I began to moan to the rhythm of his micro thrusts, my body limp and lifeless as I let the ball of pleasure forming at my asshole begin to grow.\n\n\"You gonna cum already? I haven't even started fucking you,\" Dave teased. I hated him, but couldn't even pause my moaning long enough to try and groan out a reply. \"Let's see if you can do it, ass whore.\"\n\nHe'd started to fuck my ass a tiny bit, just sliding his dick back slightly so the crown of his cock stretched my asshole wide and threatened to slip out, and then shoving himself back in quickly so my ring contracted and gripped his shaft tightly. I was so relaxed and stretched that there was no pain, only pleasure, and my newly elastic asshole somehow knew how to adjust to the contours of his cock perfectly. When he sensed my body's resistance was well and truly gone, he pulled his tip all the way out. Adding to the growing list of shameful betrayals by my body, my traitorous asshole stayed gaped open, hungry for his return. He actually laughed at me, exacerbating my humiliation, before he plunged himself back in again, this time gliding into my rear far too easily.\n\nWow. Just wow. I really was an ass whore.\n\nIt was all too much for me. I'd been horny for over a day, teased myself right before he got to my apartment, and then had been brought to the edge so many times this night, that my body decided that it was time to cum. That's how I defended the incredibly sluttish anal orgasm that erupted from just his tiny, teasing motions.\n\n\"Mhmm. Mhmm. Mhmm,\" I moaned out into the buttplug. Every cry was getting louder as my entire core transformed into a warm, fuzzy ball of pending bliss. My vagina, completely untouched on the outside, was somehow getting pushed internally from the angle of his cock and began sending waves of shocking pleasure that my mind absorbed gratefully. That little extra bit of pleasure helped send me over the edge, but I was falling off regardless.\n\n\"Ahhhh... ahhhh... ahhhhh!\" I cried out, letting the buttplug hang loosely in my mouth so I could make distinct syllables at last.\n\nMy body stiffened as Dave kept up his slow, teasing, and barely noticeable fucking of my backdoor, going in and out, or almost out and back in deeper, in a steady rhythm. I was so eager to cum that I didn't fight it, or try to delay to seek more pleasure, instead I just torpedoed the dam that was building a pool of pent-up pleasure in my core, and let a mind shattering wave of pure ecstasy flood my body. \n\nI went limp as the wave hit me, the satisfaction of release almost as sweet as the pleasure that followed. It was unlike any orgasm I'd had before, centered on my asshole and erupting from my core in sharp waves that made my body jerk and twitch. It went on-and-on, strong at first, but lingering seemingly forever as Dave started to fuck my ass a bit harder just when I thought I was coming down. I sobbed as I came, tears running out of my eyes, and I felt my traitorous asshole contracting thankfully on his driving cock after every burst of bliss that shot through my needy body.\n\nWhen I started to regain my senses, only the hot shame was left at my body's sluttish response to his invasion. Could he tell how massive the orgasm was that I had just enjoyed? \n\n\"You liked that, didn't you? I could feel you cumming on my cock,\" Dave grunted. He had worked a couple inches of his cock into me now and was pumping in and out at a faster pace. There was some admiration in his tone. \"I've never seen a girl cum that quickly from being assfucked. Really, you came just from me slipping my tip into your butt. I've never seen anything so sluttish.\"\n\nI was silent in my misery at his words. How would he ever believe that I wasn't the whore that all evidence so far pointed towards? Why did I even care? He was raping me at this point, whether an act or not, as I wanted him to stop. I did want this to end, I repeated to myself to strengthen my indignation now that my mind was clearing. I was angry with this asshole who was now reaming my asshole. Another little twinge of orgasmic pleasure made me reconsider, but then my resolve stiffened.\n\nHow could I get this guy's monster cock out of my ass with my hands cuffed though? I started to wriggle, flex my hands, and move exploratorily.\n\n\"Easy,\" Dave barked, slapping my ass cheek hard as a warning.\n\nI was helpless. He was going to stick that monster cock all the way up my ass and fuck me hard, and there was nothing I could do about it. I had just cum so I shouldn't find that thought arousing, but to my horror, the idea was making me hot again! I felt a craving for another orgasm starting to build in me despite the anger and outrage I tried to summon. One orgasm wasn't enough, my body seemed to say. Anger turned to lust, and I found myself moving my ass piteously in time to his strokes. One more, just one more, and I'd feel normal again.\n\nWhy not relax and enjoy it? The idea was tempting, and it wasn't like I had much choice in the matter. Dave certainly knew what he was doing, including pausing to add more lube to his cock at times, and my body was obviously enjoying his now quite passionate fucking. About half his cock was sliding into me at this point, filling me nicely as he squeezed my asscheeks in time with his thrusts. \n\nI still tried to convince myself that what I was feeling was wrong, that the only reason I was horny at all was because I had played with myself before Dave arrived, before I knew he was a fucking pyschopath! The guilty shame I felt at my body's response to his abuse suddenly flared, and made me emit another miserable moan full of dismay and pleasure. I couldn't shame myself into not enjoying this, I realized, as the thought of how dirty and slutty my behavior was only made me hotter.\n\nFuck. I was going to cum again. \n\nThe certainty of that observation hit me like a ton of bricks. There was \"relaxing and enjoying it\", and then there was being cum hungry and having another orgasm just minutes after my first one. I whimpered into my bedspread and sucked my pacifier buttplug in new embarrassment. How many orgasms would I have before I was sated and could think straight? When I'd been masturbating this week I'd had marathon sessions, going for hours and cumming over and over again. Six, seven, maybe ten or more distinct orgasms in one night? Had I been training my body inadvertently for an epic performance tonight?\n\nDave's hands gripped my shoulders for extra leverage as almost two thirds of his cock filled me now. God he was huge, almost uncomfortable at this point, but my body ignored that and focused only on the dirty pleasure he was giving me. He was thrusting hard and fast, shaking my entire frame with every stroke and slamming the bed's headboard into the wall. My nipples were sending jolts of pleasure as they rubbed on the bedspread, and my vagina was getting pounded from the inside as his cock stimulated my core again from whatever magical angle he seemed to know how to find to torture me. \n\nFuck, I really was going to cum again!\n\nThis time, it was less intense, fortunately. It almost felt like just a delayed leftover from my first strong orgasm. My moans pitched up high again, my body stiffened and then went limp in a set of spastic waves, and my thighs quivered and shook as every thrust of Dave's cock sent a big surge of pleasure through my cum hungry body. I couldn't get enough, it seemed. The peak wasn't as high, but the waves kept coming, shaking me until at last I was limp again, sobbing into my bedspread and sucking on my buttplug softly.\n\n\"Wow, did you just have another one?\" asked Dave in amazement, but he knew the answer. He'd felt my hungry little asshole squeezing him again involuntarily and saw my body trembling. He didn't need to call me a slut again, or otherwise denigrate me, I'd done worse to myself already with my actions. \n\nI let loose a pathetic wail of denial into the bedspread, but I fooled neither of us.\n\n\"Time for my fun,\" he said as he grabbed my hips and pulled me up with his cock still lodged inside me. I started to raise my head as well, but he shoved it back down so only my ass was in the air. That was fine, I preferred not having any visual reminders of my humiliation anyway.\n\nNow on his knees, he hilted himself into me with one long, deep thrust that slapped his balls against my neglected pussy. That brief touch of my sex made me gasp and almost spit out my buttplug. He hadn't even fucked me there yet, but I knew after that touch that I needed a cock in my pussy to be truly satiated. Or rather, I hoped that a cock in my remaining undefiled hole would satiate my suddenly whorish body. Who knew at this point what would make me stop being turned on! Thoughts of escape, or throwing a fit to see if he would really hurt me vanished. Once he'd fucked my pussy, then I would try to end this humiliation!\n\nDave was really fucking me, finally. Everything he'd done before was evidently just foreplay. He was pounding my ass hard and fast, driving my face into the bed with every thrust, and making my boobs swing wildly. Those damn nipple clamps were grazing the bed randomly, making me gasp at times from the heightened sensitivity of my tortured nipples. \n\nI hadn't been fucked hard like this in quite a while, certainly never by a cock this large, and definitely not this roughly in my ass! I was taking it well, I thought in amazement, and tried to stifle the strange feeling of pride that welled up again. I shouldn't be happy that I'd earned another merit achievement badge in the Filthy Slut Club tonight!\n\nWas I going to cum again? I couldn't tell anymore, as my baseline level of arousal was so high that it felt like all it would take was one extra strong push or lingering touch to push me over the edge again. I wouldn't say I craved cumming anymore, like I had that first time, but my body was definitely addicted to it at this point and I felt like a junkie looking to get back to a high as quickly as possible. If he stopped right now, would I be frustrated, or relieved? I couldn't decide.\n\nDave suddenly pulled out of my ass. \n\nThe answer to my earlier question was clear. I was instantly frustrated and glanced at him imploringly. I felt empty, almost hollow, without his big cock in me. The fucking had almost become a relaxing zen-like state for me, him pounding my ass pleasurably as I meditated face down on my profound whorishness. Had I really become such an insatiable slut?\n\n\"I need to switch holes,\" he said with a grin. Was I just a bunch of holes?\n\n\"Mmhm-my pushy?\" I tried to ask him, the buttplug garbling my words. I felt an unseemly surge of heat in my sex at the idea of finally taking him in that very ready passage. Could he tell how eager I was? I was mortified at my hunger, and of course, that turned me on even further. \n\nDave pulled me up to my knees using a fistful of hair. He turned me around and lowered my face to his throbbing cock. I tried to resist in horror as he pulled the buttplug out of my suddenly possessive lips. I wanted it the plug in my mouth, both for comfort, but also as a blocker for the dick that he clearly wanted to replace it with.\n\n\"Cucumber! Cucumber! I can't! It's been in my ass!\" I wailed as a strong hand on my neck forced my face down. I had tried to remember my safeword and resorted to guessing, but that either clearly either wasn't it, or he didn't care because he was raping me.\n\nI couldn't resist his strength and my lips were parted easily by his cock. I supposed I'd just sucked the buttplug, which had been in my ass, but that wasn't nearly as big as what filled my mouth again now. My further protests were stifled by his meat and soon the familiar feeling of his dong pushing into my throat consumed my attention. My earlier practice had paid off, and he was able to slide into me after only a couple of gagging false starts. I was a bit proud, again, as I buried my nose into his stomach and licked his balls without being asked. It didn't taste as bad as I expected, and whatever flavor his cock had, which I didn't want to dwell on, was masked by my bile and saliva as I drooled everywhere again.\n\nMaybe now he'd fuck my pussy, I hoped, as I drove my nose even harder into his stomach and felt my throat spasm on his giant cock. No, I had to try to defuse this situation. Without his cock in me, self-control was coming back again. I had to get him to stop, or at least slow down. He had to know about my safeword issue.\n\n\"Dave\u2014\" I began when he pulled me off his cock. A big string of drool connected my mouth to his dick still. He slapped me, drool splattering everywhere. \"BIG Dave! Listen to me. You have to stop, I don't remember\u2014\"\n\nThe buttplug slipped back into my mouth, shutting me up. He laughed at me. Why would he gag me if this was an act? Surely he'd want me to keep my mouth open so I could use my safeword? Another chill went through my body. Maybe he was raping me? He didn't seem to care at all about my obvious anxiety. He was just too heartless for this to be an act.\n\nUsing my hair, he pulled me down onto my back and moved between my legs, parting them roughly. Still on his knees, he grabbed my ass with two hands and lifted my pelvis up towards his wet cock. I splayed open before him, my sex barely covered by my ruined thong. Again, I had to stifle the shameful hope that he'd finally fuck my pussy. Instead, he kept raising my hips and lowered his mouth to devour my sopping wet slit. There was a twisted, bunched string of a thong still in my cleft, but it didn't matter. His hungry attack felt amazing!\n\n\"Mhmm Mhmm\" I moaned in pleasure, popping the buttplug in and out of my mouth. \n\nAll my weight was on my shoulders, my body lewdly lifted up and legs spread before his mouth. His stubbly beard was soft enough that it didn't bother me, and maybe even felt good. What really felt good was his mouth, and increasingly his tongue as he ran it around my vulva and lapped up my juices. It was a rough, aggressive, and dominating act of cunnilingus, not so much trying to please me as satiating a hunger he evidently had for my taste. A rapist wouldn't do this, I thought to myself hopefully, and I let myself writhe in response to his attack. \n\nHe grabbed my thong with his teeth and ripped apart the string with a savage tug, leaving me with just a little ribbon of material dangling around my waist like a belt. It hadn't been doing much to cover me anyway, but I felt truly naked for the first time as he held me up and studied my glistening folds. I knew I was yawning open for him, the dark secrets of my passage revealed to his merciless gaze. I felt like he saw my sluttish soul in that hungry cavern, and that I was exposed as a filthy, insatiable whore. \n\nI blushed ferociously at the thought and felt my body yearn for his touch like I'd never craved before. Was I getting close to an orgasm again? The sad truth was that my pussy had been so neglected since being fingered at the start of the night that it was desperate for sensation. All my orgasms had been from my ass, and my clit and passage were tingling with anticipation for their own release. If he just started eating me again, I knew I could eke out another quick cum.\n\n\"Time to fucking cum,\" Dave said. I nodded eagerly and then realized he meant himself as he stood up, still holding my ass in the air. I was a bit confused until he held me with one hand and began to feed his cock back into me. Unfortunately, he was pushing into my ass again, not my desperate cunt. This time it took little effort as my bottom was ready, almost craving his return. \n\nHe slid in half-way, gripped my ass for balance, and began to fuck me while standing up. I was inverted, staring up at him, and it looked like he was pile driving himself into me, knees bending as he squatted down with every thrust. The force of his strokes drove my shoulders into the bed and my neck was crooked awkwardly from the position. He began pistoning faster, my breasts jiggling and my legs askew as my body bounced on the bed from his aggressive attack. \n\nThere was no hiding my shame in the bedspread now. Our eyes were mostly locked as he humiliated me with this ferocious assault on my butt. Occasionally he would gaze at my other normally hidden treasures, ogling my bouncing breasts with those ridiculous clamps jiggling on my nipples, or letting his eyes go up my smooth and taut stomach to peer at my obscenely gaping sex. My arousal was weeping out me, perversely overflowing the top of my slit and dripping down my smooth mons. A rivulet of my slut juice began working its way down my stomach as I watched, conclusive evidence that I was enjoying this way too much.\n\nI felt exposed, used, and thoroughly objectified. I was a piece of fuck meat, my body just visual stimulus to enhance the physical pleasure he was receiving from my ass. There was no lovemaking happening, or even fucking, as his domination of me was so one-sided. It felt as if he was masturbating himself with my willing body, using me like a living breathing sex doll. I had become nothin but a bunch of fuck holes and a nice set of tits, and soon, I knew with a hot surge of depraved desire, I'd just be a cum rag. \n\nEven worse, I was loving being used like this.\n\nThe rivulet of my juice on my stomach picked up speed, becoming a little stream as new arousal flowed out of my whorish slit. My body had been telling me what I was, but my mind now finally coming around to accept it. I was a dirty slut. I loved sucking a buttplug and being pounded in my ass. I wanted this stranger to cum in me, on me, wherever he wanted. I wanted to cum as well. My juices flowed down towards my face, going up one of my upside down and bouncing breasts until a drop came within reach of my mouth. Spitting out my buttplug, I kept my eyes on Dave as my tongue snaked out and lapped up my arousal with a wanton enthusiasm that hinted I had accepted my fate.\n\n\"You dirty little slut,\" Dave snarled at me, his eyes glinting. \"Filthy. Sleazy. Nasty. You want my fucking jizz, don't you?\"\n\nI gripped him now, using my legs around his hips to drive myself against his hard thrusts. I was beginning to do more of the work, pulling my hips up and into his cock so he didn't have to bend as low to drive into me deeply. I was milking him with my ass, trying to coax his seed out of him, clearly hungry for his jizz and seeking to make him cum as fast as possible. \n\n\"Yes,\" I panted out, between moans of pleasure. \"Yes, I want your jizz.\"\n\n\"Amanda you are worse than a kinky whore,\" Dave moaned out, clearly approaching the edge as sweat dripped down his body. \"You are an absolutely insatiable cum bucket, aren't you?\"\n\n\"Yes,\" I nodded, still lapping at any drops of my pussy juice that came within range of my tongue. \"I'm a cum bucket.\"",
        "\"I've never fucked a bigger 'ho,\" he grunted, squeezing my ass tight as I arched my back and drove into his thrusts as hard as i could. He had switched to fast, short thrusts, his cock nearly fully buried in my ass, and his tempo increasing with every stroke. A string of insults came from his mouth as his orgasm built, calling me every dirty name he could think of, repeating some of them multiple times. I nodded happily with each label, accepting them all, as my own third cum began to loom. I squeezed my asshole tight on his cock every time it slid out, coaxing him to the edge.\n\n\"Fuckin' cum again, you ass slut. Do it you fuckin' whore!\" Dave barked out, eyes fluttering as he was torn between staring at my shamelessly undulating body or closing his eyes to cum himself. Holding my lower back with one hand, Dave began to rub my clit with the other. There was nothing subtle in his technique, just a hard, fast thrumming with his finger tips at double the tempo of our fucking bodies. I was so turned on that his touch was all it took to send me over the edge, and I began orgasming instantly.\n\nI tried to keep my eyes open, to watch his face. It made me hotter to know he was seeing me like this, cumming so hard while he used me like his personal fuck toy. I couldn't though, the pleasure that swept through me, originating in a blinding burst from my unmolested clit, was just too strong and I had to shut my eyes at the peak. I arched my body and trembled, ignoring the discomfort in my neck, and my body tensed in dirty expectation. He kept fucking me while I held still, his driving cock and rubbing fingers sending huge bursts of pleasure that made me jerk and dance around his cock.\n\nAgain and again, I came, my body only held against him by the strength of his hand on my lower back and the thick cock that had become my source of stability. I clung to it with my twitching asshole, trying to keep it buried in my core, relishing the stability his dick gave me, like I might an anchor against the storm that swept through me. I knew I was screaming, or moaning, or groaning, because my as I could hear cries in my ears. They sounded like a different woman though, like some complete whore who was having the biggest orgasm of her life and crying out for all to hear that she was a dirty slut. \n\nIt couldn't be me.\n\nJust as I was starting to come down after who knows how long I spent in ecstasy, I realized Dave's cries had joined my own. I felt his cock jolt once inside me and he pulled out with a savage groan, a first load of his seed oozing out of my gaping asshole as his cock exited me. I cried out at first in dismay, feeling empty without his thick rod inside me. Fisting himself, he pointed it at my face and jerked himself off to finish his orgasm. That monster cock delivered a massive series of cumshots, shooting thick ropes of sticky and hot jizz onto me with every twitch as Dave screamed in pleasure.\n\nI felt his cum splash onto me heavily and I opened my mouth eagerly, holding my tongue out to try and catch every drop. He sprayed my stomach, my tits, but most of his spunk landed on my face where my tongue quested eagerly, trying to scoop up anything within its limited range. \n\n\"Damn you are dirty,\" said Dave as he let my languid body fall back to the bed. I craned my neck, discovering that my boobs has his cum on them and that they were within range of my mouth if I arched my hips up slightly to roll them up towards my face to try to reach them with my tongue.\n\nHe started to scoop up fingerfuls of his jizz and began feeding them to me. I was covered in his spunk, so it took a while, but neither of us stopped until he'd cleaned every last drop off my torso and face and fed it to my hungry mouth, usually with some humiliating insult related to my sluttishness. I've never felt happier, sexually that is, than that moment\n\nThere was an awkward moment as he recovered, looking at me with some dirty amazement. Now would have been a good time to plead my case, to beg to be let go, and even explain the situation I was in regarding not remembering my safeword. Surely this was his weak moment, fresh off an orgasm and likely feeling a bit tired. But my pussy was still hungry to be filled, even so quickly after having my third orgasm of the night. Whether or not he was playing a role, or really raping me, I wanted to be fucked hard in that last hole before he left. It was a terrible, horrible, desire, one that I'm not proud to admit, but it was impossible to deny. \n\nSo, I held my tongue to see what he would do next. Maybe he'd check in on me?\n\n\"God you are so fucking dirty,\" he said, casually cupping my pussy and then giving it a light spank. \"Now that I'm warmed up, it's time to have some real fun. I'm going make you regret what a slut you are before I'm through with you. At the beginning of the night, I thought I would take it easy on you, but now, I'm going to absolutely destroy you.\"\n\nThe words sent a bit of a chill through me, although his hand on my still eager sex counterbalanced my fear nicely. If he was roleplaying, surely he didn't have the resolve and acting abilities to maintain his role after his huge orgasm? Wasn't this the point in time when you might giggle and gush about what fun you were having?\n\n\"Dave\u2014\" I began, deciding that it was time to tell him about the safeword issue. I couldn't imagine things escalating further, if that was his intent. I'd gone far beyond any even depraved limits I would have set using a working safeword. The slap that came immediately stunned me. Fuck! Maybe this wasn't a roleplay! \"BIG Dave! Strawberry! Strawberry! I don't\u2014 mmhmmm mmhmm!\"\n\nThe plug was inserted back into my mouth and he held my jaw shut until I stopped talking. His fingers teased my pussy as he waited for me to calm down, and I was soon moving against them helplessly. Despite three orgasms, I clearly craved just one more cum from my pussy. This wasn't so bad, maybe he was all talk about destroying me...\n\n\"MHMMMMM!\" I screamed into the buttplug as he slapped my pussy again. What a fucking jerk! It was tingling with pain and arousal again. Argh. He was killing me.\n\n\"Don't worry, you'll have plenty of orgasms tonight, if you are a good girl,\" he said casually as he pulled his backpack open and started dumping items onto the bed. A coiled length of rope fell out first, making my eyes go wide, then one of those big Hitachi wand vibrators, and finally a couple dildos and a metal hook. I studied the last item with some real fear. I'd seen a bondage video or two this week where the poor girl had one of those inserted in their ass, usually tied to their neck or some other uncomfortable spot that pulled on her. He looked around, \"Where is your leash and collar?\"\n\nOh no!\n\nMy bed looked like he'd spread a medieval torturer's set of work tools across it, and he wanted to use that stupid collar! I knew right then that he was a perverted and sick psychopath. I had to get free before he really hurt me.\n\n\"Let's get you into something more comfortable, shall we?\" Dave said mockingly, holding up the key to the handcuffs. He rolled me onto my belly and knelt over me, unlocking the cuffs slowly. I flexed my wrists and brought my hands up, rolling my shoulders to stretch them out. I felt slightly less helpless for the first time in a while, and a glimmer of hope entered my mind. I played passive, moaning slightly and acting like I'd given up any will to resist.\n\nWhen he reached to grab the rope he lifted off my back briefly. I seized the opening and bolted as fast as I could! Quick as a snake, I slithered off the bed as he grasped at me. I shook off the hand that almost snagged my ankle by kicking him solidly in the face, and scampered up from the floor to run out into the living room. \n\nI didn't have a plan, just the idea that I should flee my apartment and get help. It wasn't fully thought out as I was practically naked. All I had on was the ruined thong, which was like a belt, and my bra, the cups pulled down and nipple clamps attached, so I'd be quite a sight in my fairly posh apartment complex, but I didn't care at this point! Anything was better than the horrors he planned for me!\n\nIn my excitement, I'd forgotten about my heels. That pervert had never taken them off while he had fucked me, like a normal person would have, and they betrayed me as I sprinted towards the door. One of them broke and I went flying at full speed, tumbling over the couch headfirst and flipping onto my coffee table. It was good that I'd removed the candles and other junk that normally sat on it, but my ass smarted from the meaty impact. One of the legs creaked and broke, dumping me and my wine glass from earlier onto the floor unceremoniously.\n\nI got up in a daze, covered in wine, and tried to make it to the door, but Dave tackled me from behind, driving me down onto the rug hard. \n\n\"Mhmmmmm!\" I screamed into the buttplug. I didn't realize I still had it in my mouth until I'd tried to yell, but I kept it in and sucked it like a pacifier against my fear as I tried to slip out of Dave's arms. My hands reached pathetically for the door as his muscular, nude body, slid up mine and covered me. I attempted to stand, then crawl, but he weighed too much and his arms gripped me like pythons. I squirmed against him, trying to get free, and he rolled me around on the carpet for a couple minutes while struggling to get a grip on my wine covered body. I flailed desperately to get away from him, but somehow always seemed to be one limb away from escape!\n\nI wriggled out at one point when my bra ripped off and ruined his handhold, but he grabbed my feet and dragged me back, this time wary of my kicks. Again, he pinned me, his hard muscles rubbing against my soft body. I shimmied up, away from him on my back, and he reached down and grabbed one of my nipple clamps with his mouth, tearing it off savagely. I screamed in pain as my nipple throbbed in agony. The other one was torn off a second later and I beat at his chest helplessly.\n\n\"Mhmmm mhmmm!\" I screamed out again, my words still muzzled by the buttplug.\n\nI twisted and squirmed against him, rolling onto my belly. We were both incredibly sweaty now, and the extra lubrication let me eel out of his grasp as he tried to stand up. His hand barely grabbed a fistful of my hair and brought me up short, before he pulled me all the way back by grabbing another handful. This time he flipped me over onto my back and lay on top of me, his weight pinning me down as I wiggled and fought underneath him. Slippery from sweat, cum, wine, and my arousal, our bodies glided against each other. I moaned in dismay as I felt myself growing tired from struggling against his weight. \n\nI couldn't budge him and... FUCK! Was he getting hard?!\n\n\"Mhmmmmm!\" I groaned out, my eyes flashing angrily. Pervert, is what I tried to scream.\n\nHe was toying with me I realized belatedly, like a cat with a mouse. He had been letting me think I could escape and pulling me back just in time. All my desperate struggling was doing was just turning him on. Now his stupid, monster cock was rubbing against my belly. That thing was obscene! It was like he was measuring how far up my torso that giant dong would go when he stuck it inside me, and I had to admit it looked like it would go halfway up my belly. His thigh was grinding against my sex and I didn't need the contact to remind me that I was still aroused, but it did anyway. I found myself rubbing my clit back against him, seeking more contact as we squirmed together on the floor. Fuck him and his stupid sexy body and big dick. \n\nI was helpless again, I realized with a wail of despair. He was going to fuck me again.\n\n\"Almost made it, didn't you?\" he said mockingly. His motion had changed and now he was lewdly rubbing that big dick against me, our bodies moving together more like lovers in foreplay than a captive and her captor.\n\nWe were both panting heavily, full of adrenaline from our chase and subsequent wrestling match around the apartment. The thrill of escape had turned into a different thrill for me, and I cursed my stupid, horny body for finding this scenario arousing, yet again. Why couldn't I just be scared, turned off, and hate this motherfucker? \n\nHe slid off me and picked me up before I could even think to try to run again. This time he lifted me easily, reminding me of our strength differential, and chucked me onto the couch. I landed on it hard, my limbs askew and boobs bouncing. I didn't want to think what my dirty, sweaty body was doing to those beige cushions again! \n\nUndeterred, I rose up to my knees as he advanced towards me, that monster cock bobbing menacingly. I was torn, part of me thought it might be time to play along with him again as I was a bit bruised and battered, plus my pussy was still aroused and that cock hadn't be in it yet, but my angry brain stubbornly insisted that I try to escape since I wasn't helpless at the moment.\n\nI rolled over the back of the couch and landed on my knees on the other side. The kitchen was to my left and the idea of grabbing a knife popped into my head. Surely that would scare him out of this roleplay, if he was still doing it, or scare him away, if he was raping me? I got up unsteadily and faked as if I was going to bedroom, before veering towards the kitchen. I didn't fool him, however, and I watched in awe as he ran and vaulted over the couch easily to tackle me again. Damn him and his big muscles!\n\n\"Gotcha!\" he exclaimed as he pinned me down. I was on my belly, and I felt his cock nestled between my ass cheeks. Damn it was thick! His arms held me down and he brought his knees inside my own, finding an angle on my slippery legs and then pushing outward to spread my thighs wide. I clawed at the floor in frustration and tried to squirm forward as I felt him lift his pelvis up and reposition his cock. His viselike hands grabbed my wrists, locking my arms in place, and I moaned as the head of his cock pushed down, rubbing against my hot cunt.\n\n\"MHMmm!\" I groaned out, and then finally spit out my buttplug. Why I'd kept it in this long, I still didn't know. I screamed out my feeble, last attempt at warning him off. \"Noooo! Nooooooo!\"\n\nEven though he'd just fucked my asshole silly, given me three orgasms, and reduced my pussy to throbbing need again, I felt like I had to resist. Even worse, and this was a dirty little secret that a dark and depraved part of my mind was trying to hide, all my active struggling had made me keenly aware that the harder I fought him and the more I acted like I didn't like this, the hotter it all felt. And so, I started wailing and screaming, cursing him and telling him to stop as I trembled in anticipation, waiting to be filled again.\n\n\"No?\" he asked, as his hips moved to tease me with the head of his cock. My legs tried to close, but his knees were immovable. The tip of his cock nuzzled around my cleft, poking off target at first as he wasn't using his hands to guide it. All his fumbling around was doing was making me desperate to have it inside of me and I squirmed under him, now trying to get my slit lined up so his cock could find my entrance. At last, he nestled into the right spot and my labia wrapped around his bulbous tip, hugging it in a greedy embrace as he rested at my gaping passage.\n\n\"Fucking stop, you sick rapist!\" I snarled out, squirming and flexing underneath him, my thighs quivering. He was so big and heavy, I felt almost claustrophobic as he lay on top of me. \"I don't want your monster cock in me. Nooooo!\"\n\n\"Since you asked nicely,\" he said and pushed into me. \n\n\"OHHHHHHH GOD!\" I screamed out, my body trying to arch as his weight pinned me to the floor. \n\nThere was something so primal and raw in his taboo taking of me that I was overwhelmed with dirty pleasure and hot shame. Maybe it was the chase, the manhandling, and my desperate quest for a knife that made this feel like a life or death struggle. Perhaps it was his muscled body, sweating and stinking of man musk, that pinned me down and reminded me just how helpless I was. Or maybe it was just that big, fat cock pushing into the last hole that he hadn't defiled yet, filling me like I've never been filled before as my mind pretended to not want it. Whatever stimulus was triggering me was driving my arousal to a new height, mixing fear, anger, lust, desire, and frustration into a delicious cocktail of emotions that literally had me quivering in pleasure.\n\n\"Fuck you! Stop! Nooo!\" I groaned out as he slid into me inch-by-inch. I kept up a running, verbal commentary of my opposition to his act as he ignored me and bullied his thick cock even deeper. \"You SICK PERVERT! GET OFF ME!\"\n\nFucking Christ, his dick was long! I hadn't felt it in my ass quite the way my vagina now tingled as more and more of him continued to stretch me out. I wriggled and squirmed, trying to keep up the pretense that I wasn't enjoying this, but my act was faltering as pleasure was robbing my brain of it's ability to protest. I didn't care, at some point, as the lingering adrenaline of my chase and capture and now the feeling of helpless submission was enough to keep me hot. My insults turned to moans, my moans turned to groans, and eventually, the groans turned to gasped squeals of shock as more of him kept filling me. \n\nWhere was all this cock coming from!?\n\n\"Now I have you!\" he murmured into my ear, then bit it hard enough to make me whimper. I was silent now, keening in a low tone as if meditating on the massive pipe of cock that distorted my passage beyond what it had ever know before. He was finally in all the way, hilted balls deep into my pussy, which was too stretched to even squeeze back as he began to move his hips slowly. I was so turned on that I knew I would come soon, despite the borderline discomfort of his size. Only my arousal and accompanying abundant lubrication had even made taking him in feasible.\n\n\"P-please.... Noooo,\" I moaned out softly, the weak protest making me shudder in pleasure. \"P-please...\"\n\n\"Please what?\" he whispered, his stubbly jaw nuzzling into my cheeks. He licked my face, like I was some lollipop he was enjoying as a treat.\n\n\"P-please....\" I struggled to respond, forgetting his question as I wallowed in the feeling of contentment his big cock was giving me. \n\n\"Please... fuck you?\"\n\n\"Y-yes,\" I groaned out, a little whimper showing my humiliation at consenting to him yet again. I sobbed as I nodded my head. \"Fuck me. Just fuck me with that big cock, you asshole.\"\n\nAnd so he did, right there on the floor of my living room, halfway to my kitchen. It took him a couple minutes of slow pumping to get up to speed, my pleasure building in leaps and bounds with every thrust. I loved that he kept me pinned, his hands on my wrists firmly, his face buried next to mine so he could lick or bite me when he wanted, and most of all the way he kept his weight on me so I felt completely trapped underneath him. Only his hips were free as he began to slam his thick rod into me in a steady rhythm. My body was rocked by his strokes, my throbbing nipples brushing against the carpet and sending jolts of pleasure to my wrecked brain.\n\n\"Oh God, Fuck NO! Not again,\" I wailed out as I felt my orgasm begin to build again. \"You psychopath... oh GOD... fuck me harder!\" \n\nI was so helpless, but this time without cuffs or any other props, just his masculine strength overwhelming me as he took me like a caveman might some prize woman he had stolen in a raid. Trapped under him, crushed by his weight and filled by his manhood, I had never felt so thoroughly and utterly dominated by another person in my life. Of course, the fact that he had taken me, against my will, just made my condition even more thrilling, and I wallowed in a depraved mix of guilt and arousal.\n\nI shouldn't like this anywhere as much as I did.",
        "\"You are mine,\" he grunted out, pumping me harder. \"All mine. I can do whatever I want to you.\"\n\n\"Y-yes!\" I moaned back, then, trying to rekindle some of the hot shame of the situation, I added, \"N-nooooo..... please! STOP!\"\n\nMy little attempt at a protest was the trigger that sent me over the edge. The waves of pleasure he was sending through my entire pelvis were too much, as if my lower body had become a pulsing and smoldering fire that threatened to consume me in its inferno. Some of the heat was pain, for he was surely making me sore, but most of it was hot and dirty pleasure at being used, ostensibly against my will. My mind threw gasoline on that fire as I tried to force myself to fight against him one last time. My arms futilely tugged against his hands and my back arched in a pathetic attempt to throw him off. It was enough, and another orgasm erupted in my tortured body.\n\n\"N-noooo!\" I kept screaming out, a fitting word to cling to as I shuddered and twitched under his dominating body. \"No! No! No! NOOOOO!\" And then, finally, \"YESSSSS!!\"\n\nDave kept fucking me as I came, waves of hot pleasure washing over me in rhythm with his relentless thrusts. He never slowed down and for a while, it felt like I wouldn't stop cumming, but eventually the waves became ripples and my mind started to unfog. \n\nFuck, that had been amazing. I tried to wallow in the dirty guilt of enjoying that cum so much, but I quickly became distracted by a new thrill as Dave started groaning in pleasure. He was cumming as well! Maybe he was done, finally? Did that make me relieved, or a bit sad?\n\n\"Damn you little slut!\" he screamed out, an angry tone in his voice as if he was pissed at me for making him cum so quickly. Was it that quick, though? I couldn't even tell anymore. \"You want my fucking cum badly... don't you?\"\n\nI moaned out what sounded like assent. He was fucking my spent body fast and hard, using me as a fuck toy to get his rocks off like he had before. I couldn't do anything to help him at this point as I was thoroughly spent. Coming down from the adrenaline and fear I had earlier had left me exhausted, and now, basking in post-orgasmic happiness, all I could do was whimper and moan encouragement as I lay there under his weight and took his pistoning cock. He didn't seem to mind and maybe even enjoyed the total control he held over me with his strong arms and large body. A final strong set of thrusts, hilting himself all the way again, and I felt his cock jerk deep inside my passage. \n\nThe wet squirt of his first load of cum erupted deep inside me, and he pulled out as I lay prone under him to finish his orgasm on my skin. Still holding my wrists, as if he thought I'd summon the energy to try and escape again, he let his cock rest on my asscheeks as it fired another series of sloppy cumloads down my back. I whimpered and shuddered as I felt his hot seed hose me down again, heavy and wet splotches falling on me that reached up almost to my neck.\n\n\"Oh fucking god, you are so fucking dirty,\" he breathed out with what sounded like real amazement. He let go of my wrists and rolled over to lie on his side, studying my face. I couldn't even lift my head, I was so spent, and just turned my neck a bit more to stare at him with glazed eyes. I was a little wary still, but too tired to even care anymore if he was a rapist, or still roleplaying, or whatever.\n\n\"What are you going to do to me now?\" I asked eventually, as he lay there breathing hard and just watching me. There a stupid smile on his face, almost friendly, and the look made me annoyed enough to say something despite my utter exhaustion. Part of me was mildly curious what else he might even consider doing to me at this point, as every one of my holes had been throughly fucked. What had I left to offer him?\n\n\"Hmmm,\" he said, rubbing his stubbled chin thoughtfully. \"Maybe fuck you with a banana?\"\n\nA banana? Had he lost his mind?! Wait... BANANA! That was the fucking safeword! \n\nOf course! I remember choosing it now, looking over the produce section and picking them as they stood out so bright and yellow, as well as vaguely phallic. A little smile came to my face and I \n\nchuckled softly as I cursed my stupidity in my head.\n\n\"Banana...\" I whispered, enunciating it as if it was a strange and foreign word. \"Fucking banana.\"\n\nGod, what had I just done to myself?\n\n\"As long as I don't have to move, go ahead,\" I replied a couple seconds later.\n\nDave laughed and leaned forward to give me a surprisingly tender kiss. I kissed him back, but it took all my energy. He reached over with his arms and pulled me into him, holding me tight as I nuzzled into his powerful chest. Just like that, he wasn't scary anymore. Instead, being within his big and burly arms felt safe and comforting. I sighed in deep contentment as I smelled his intoxicating man scent. This was more like it.\n\n\"I've never, ever, had any girl I've fucked not use the safeword,\" he said at last, giving me another soft kiss on my head. \"You are incredible. I mean, and don't take this in the wrong way, but I've never had a girl as wild and... well... as kinky and slutty as you! And you seemed so proper...\"\n\nHe went on and on about all the things I'd let him do, the rimming, the chase and wrestling, and the ass to mouth with the buttplug and his cock. It was an embarrassing catalog of every filthy act I'd permitted, including many I wished to forget, but at least he seemed to have truly enjoyed my \"performance\". I nodded along, praying the list would stop. \n\nBut he kept coming up with more.\n\n\"Oh, and then, when I had you pinned and you were screaming at me to not fuck you! Wow! But you were so wet and ready... it's like the more you fought, the more excited you got!\"\n\n\"Oh yeah, that's me, a crazy slut!\" I said at last, mostly to cut him off. I kept my face buried in his chest the entire time he talked, trying to hide my deep red blush of shame. My only hope during his play-by-play was that he'd forgotten at least one of my sluttish acts, but nope.\n\nWhat did he have a photographic memory for filth?\n\n\"Dave, wait, I have to tell you something. Actually...\" I began, then paused. \n\nShould I tell him that I'd forgotten the safeword? It would explain a lot of my \"sluttish\" behavior and I could argue that I wasn't that kinky after all! But if he knew, he'd probably feel bad about pushing me past my comfort zone in all the various ways he'd just described in detail. I liked him amazed and happy with me, not feeling bad about what he'd done.\n\nNow that I thought about it more, I felt a sudden stab of fear at telling him the truth. How would I explain all the orgasms I had while believing he was really raping me, or at least massively violating my limits? Oh God, I realized with grim certainty that there was no way I could ever tell him, or anyone, what had really happened. I would rather let him think I was just a kinky slut that enjoyed rough roleplays, as opposed to being a perverted whore who enjoyed thinking she was actually being raped!\n\n\"What?\" he asked after I trailed off into silence. He sounded a little concerned.\n\n\"Just, you know,\" I said, my fingers tracing around his strong chest, \"I was hoping you'd have another round in you still.\" I gave him a challenging look. I felt a surge of pride as a bit of worry crept onto his handsome face. Even Big Dave had his limits and got tired it seemed! \"Just kidding, I'm pretty spent now as well and, well, a bit sore... everywhere.\"\n\n----------\n\nI called in sick to work the next day. Everyone thought I'd been coming down with something anyway, it turned out, because of how odd I'd been acting and how distracted I'd been all week. \n\nAs I warned Dave the prior night, I was indeed sore everywhere. My throat was hurting from his deepthroating and my screaming, my voice raspy and hoarse. My ass and pussy were aching for obvious reasons. Those were all expected. What I didn't expect was how the entire rest of my body felt beat up, like I had gone twelve rounds in a prize fight boxing match. My cheeks were still pink and bruised, my ass was already turning purple from his spanking and my slamming into the coffee table, my nipples were still swollen and achy, and I had rug burns all over my body, including in some unexplainable spots. All my muscles had weird aches, including my neck from being pile driven into my bed as Dave had fucked my ass. \n\nEven my psyche hurt as I studied my beat up face in the mirror. I couldn't look myself in the eye with the knowledge of what I'd done, and more specifically, the fucked up shit I had enjoyed. My own face seemed to be accusing me of being a slut, and I couldn't deny it to myself!\n\nMy apartment was also a mess, with the tattered remnants of my clothes strewn around next to pieces of broken furniture, soiled cushions, and scattered sexual toys. Had he really destroyed every article of clothing I had worn, even my shoes? It appeared so. He had been sweet last night about offering to pay for them, although I had turned him down as I felt all of the damage was my fault forgetting the safeword. As further atonement for my depravity, I spent time trying to get the wine out of my rug and cushions, but ultimately decided I was going to have to call a steam cleaner.\n\nThank God it was Friday and I would have the entire weekend to try and recover and clean up!\n\nI still made lunch with Yasmin, although I moved the venue to be far away from my office to avoid running into co-workers. I wore loose clothing, that covered me head to toe, and a pair of oversized, dark sunglasses.\n\n\"Oh my God, Anna!\" said Yasmin after we'd hugged. She looked as glamorous as always, this time in some expensive Ralph Lauren workout outfit. \"You can barely walk! I assume that means you had a good time?\"\n\nI gave her a sour look, as if she was far off the mark. Then, against my better judgment, I cracked a grin as she lifted her eyebrows skeptically. It hurt my cheeks to do that. Her knowing nod turned my grin turned into a full smile, making me wince in pain, and soon we were both laughing, until I begged her to stop as it hurt too much.\n\n\"Fuck, it was intense,\" I said at last. I decided to not tell her about the safeword fiasco. It was definitely more discreet this way and I was suddenly okay with her just thinking I was a normal kinky whore, not a sick perverted whore that enjoyed being actually assaulted. \"I'm not sure I can handle that kind of fucking again. Please swear that you'll tell no one?\"\n\n\"Amazing! Trust me, my lips are sealed! As for the fucking, well, give it a couple days at least. You'll be surprised at how quickly you recover,\" said Yasmin, barely able to contain her excitement that I'd had a good time. She was so great and reassuringly non-judgmental. It felt wonderful that she at least clearly did not think my behavior was at all shameful or deviant. But, a couple of days to recover, yeah right! It felt more like a month at this point. Yasmin continued, \"I texted Dave\u2014\"\n\n\"BIG Dave\" I interjected, getting a giggle out of her.\n\n\"Yes, I texted BIG Dave this morning and he was blown away. He said you were the best he's ever had, and I've even fucked him! You must have had a LOT of fun!\"\n\nI flushed deep red. I couldn't believe Dave had told her that, although I did feel proud at the compliment. Of course, I shouldn't really, because he was basically saying I was the most depraved whore he'd ever fucked, and he'd likely fucked a lot of them. Still, it felt good to excel at something, I rationalized. \n\nThen I felt guilty again. Maybe I should go to Church this Sunday for the first time in a decade? God might save my soul, or perhaps I'd be blasted by lightning at the entrance. Either way, I'd feel better about myself and end this conflict about embracing my kinky side.\n\n\"Uhm, yeah, well he was good too,\" I said at last, picking at my salad a little forlornly. I felt sad thinking about him for some reason.\n\n\"He'll want to see you again,\" said Yasmin with a wink. \"But, you know, I kind of think variety is the spice of life with Persephone. A new person is much more fun, the energy you know?\"\n\nI thought for a second and then nodded enthusiastically in agreement. She was absolutely right! \n\nThere was no way that Dave and I could rekindle the magical combination of fear and uncertainty that had made last night such a turn on. That was why I was depressed! As hot as he was, I knew that any subsequent date would be a disappointment versus the raw emotion I had experienced with him, partly due to my own stupidity. I mean, would I even be scared if we repeated? The fear was half the fun, I shamefully admitted. Maybe more than half, if I was truthful to myself. I guess I'd have to find someone else.\n\nWait, I was already thinking about a second date?\n\n\"Oh, also I want to tell you about a new service I just launched for Persephone users,\" prattled on Yasmin. I perked up, curious and nervous about what else she could dream up.\n\n\"I call it Persephone To Go,\" she said, showing me an app on her phone. It was a map of our area, with a flashing blue dot at the restaurant we sat inside. A couple icons were moving around nearby. I gave her a quizzical look as I realized they were masked men, like robbers. \"You can order a rape date anytime and anywhere, within thirty minutes typically. You don't know who your rapist will be, or what they will do, just that they will come and give you a good time. We have screened participants to be only our highest rated men.\"\n\n\"You can't be serious, Yasmin!\" I said, giving her a horrified look. \"Random people raping you on demand?!\"\n\n\"Yes!\" she said excitedly. \"I am nicknaming it the Uber for Rapists!\"\n\n\"Yasmin!\" I said, getting flustered at the crazy idea. Had she no sense of decency at all? All the safety mechanisms that I admitted now made sense were gone! \"You can't get a feel for your partner, plan ahead of time, set boundaries, have safewords, discuss the roleplay... all that stuff. It's not safe!\"\n\n\"We have a couple basic roleplays they'll follow, depending on the situation. Either snatch and grab or home invasion, typically, with one option for a public setting, say if you go for a jog in a secluded park. They'll follow your preferences for kinks closely and will text you a safeword beforehand. It's only our top and most trustworthy guys,\" she continued smoothly, brushing aside my concerns with a wave of her hand. \"It's great because it's a total surprise! So much fun!\"\n\n\"But, no one will use it!\" I knew I was making up things now.\n\n\"All the girls I've beta tested it with love it! Even more than regular Persephone.\"\n\n\"I don't know... it seems wrong.\"\n\n\"Will you check it out for me, please?\" she asked sweetly.\n\n\"Yasmin...\" \n\n\"I'll send you the download link. It imports your Persephone profile automatically! Just take a look.\"\n\nI tried to appear skeptical, but my mind was already spinning at the idea. Last night had been fun because of the newness, and honestly, a pre-planned roleplay discussed thoroughly in advance might be a little boring. Where was that spark and uncertainty? The fear of what they would do next? How would I react to an unattractive guy forcing himself on me? Had I really become so kinky that a good, hard fucking was not enough to get me turned on?\n\nIt would be interesting to just push a button, and wonder who was going to show up and what they would do. I mean, it could be anyone, maybe that guy over there checking me out, the waiter, my Uber driver...\n\n\"I don't know. I guess I could take a look.\""
    ],
    "authorname": "davybyrne",
    "tags": [
        "non-con",
        "rough",
        "anal",
        "rimming",
        "humiliation",
        "degradation",
        "coercion",
        "buttplug",
        "spanking",
        "slapping"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/persephone-3"
}