{
    "title": "Fictional Fantasies Ch. 04",
    "pages": [
        "Dear Reader - Please read the previous chapters of Fictional Fantasies first, to fully appreciate this story. Please do also provide your feedback which will encourage me to continue publishing subsequent chapters!\n\n-------------------------\n\nMeg's tall, dark-haired nameless stranger was very rarely out of her mind from that point onwards. As he had requested, she wore the gift much of the time, both around the house and whilst out and about. On one memorable occasion out shopping, she had been taken by surprise when the low level rumblings commenced and she'd had to rush into a changing room for privacy, before the vibrations started to ramp up. Despite having no ability to make it vibrate herself, just the feeling of the device moving against her when she walked felt forbidden. Consequently, both he and sex were fairly continuously on her mind and Meg's writing output increased exponentially.\n\n********\n\n'What's up?' asked Meg immediately, as she followed Luke into his kitchen. 'You said it was urgent. Is everything ok?'\n\n'I just wanted to give you this,' he said and gave Meg a huge bear hug, squeezing her tightly.\n\n'What was that in aid of?' she laughed, hugging him back.\n\n'Because things are going really well with Beth.'\n\n'That's great! I'm so happy for you!'\n\n'So well, in fact that I asked her to marry me... And she's accepted.'\n\n'Oh my God!' exclaimed Meg, rushing back up to Luke and pulling him tightly towards her. 'I am so, so happy for you. Luke. Congratulations!'\n\n'Thanks,' grinned Luke shyly.\n\n'Wow, so the hotel break must have done the trick. And some!' laughed Meg.\n\n'You could say that,' smiled Luke shyly. 'Between the advice you and my errant brother gave me, you could say Beth is a very happy girl. I'm not sure she knows what to make of it but she's certainly not complaining. Can I get you a drink, by the way?'\n\n'Yeah, great,' chuckled Meg pulling up a stool at the breakfast bar.\n\nAs Luke turned to organise drinks, Jack strode in through the back door and Meg felt her breath catch. Drop-dead gorgeous gardener alert! Today he wore muddy Levis, steel toe capped boots and a white T-shirt. Jack hid his surprise at seeing Meg admirably, grabbing one of the drinks Luke had made and downing it in one. Luke shook his head and grabbed another glass.\n\n'Meg, this is Jack. Jack...Meg.'\n\n'Hi!' said Meg in an unnaturally high voice, raising her hand. Phew! He was even more faint-making close up and his body was delectable. As he turned the full spotlight of his focus onto her, Meg thanked God she was sitting down; there was no way her knees would have held out if she'd been standing.\n\n'Pleasure,' nodded Jack, leaning against the kitchen work surface. In Meg's dreamy state, she wasn't sure whether the inflection in his voice had been making a statement or an offer.\n\nJack was amused to note that Meg was wearing one of the black silk scarves, which he had previously used to blindfold her, to tie back her hair. A wicked idea suddenly occurred to him and he pulled out his mobile phone, tapping at the screen, eager to know if his hunch would pay off. She wouldn't be wearing it now, would she?\n\n'So, we've set a date for the big day,' Luke explained to Meg. 'October the fifteenth which gives us next to no time, but it would be great if you could be there.'\n\n'Of course, I wouldn't miss it for the world,' smiled Meg. 'And I'm sure planning a wedding in three months is do-able, isn't it? So, tell me about your plans.'\n\nAs Luke launched into the full wedding details, Jack smiled secretly to himself as he noticed Meg's hips jerk in shock. The question on Jack's mind was just how unscrupulous was he feeling? Where sex was concerned, the answer was always the same - very. Luke seemed to be oblivious, as he chatted away happily, that Meg's face had become slightly flushed. Jack tapped the phone to ramp up the vibration settings and then turned his phone face down on the work surface and, with narrowed eyes, watched Meg closely.\n\n'Oh, I meant to say,' said Luke. 'The wedding invitation is for you and a guest, so you can obviously bring a partner, or whoever, if you'd like.'\n\n'Oh no, it'll just be me,' said Meg in a staccato fashion, shaking her head. Jack smiled. She was doing pretty well, but that wouldn't last if Jack had his wicked way. He picked up his phone again.\n\n'Right,' said Luke slowly. 'Its just you seem different recently; more alive somehow. Lit up. I just assumed you'd got a bloke.' Jack glanced up, surprised at Luke's observations.\n\n'No,' gasped Meg as she felt the vibrations increase. Jack smiled broadly, more impressed with this girl the more he saw of her. But Jack knew Meg's body extremely well now, probably better than she knew it herself. He knew her exact limits and was an expert in reading the signs that she was reaching breaking point. By his calculations, the chances of Meg giving herself away within the next thirty seconds were absolute. He decided to do the slightly honourable thing.\n\n'Actually, Luke. Can you give me a quick hand in the garden? If you're ok here for a moment?' Jack asked Meg directly, clocking her increasingly glazed eyes. She nodded and waved her hand as though trying to dismiss them quickly. Jack grinned.\n\n'Sure,' replied Luke. 'I'll only be a sec. What's wrong with your throat?' asked Luke, as they walked out of the back door. 'You haven't got a cold?' Meg didn't hear the rest of the conversation because at that moment, she fell forward in her stool, held tightly onto the work surface and orgasmed hard. A minute later, the vibrations had slowly dropped back down to nothing and when Luke walked back through the door, a still-flushed Meg was able to hold a relatively sensible conversation with him.\n\n***********\n\nMeg was relaxing on her sofa at home, typing up her next chapter that was heavily influenced by her recent experiences, when her laptop pinged to inform her a new message had arrived. Taking a deep breath, she navigated her way through to the message and, with trepidation, read through it several times. Her first thought was a realisation that her mystery stranger was definitely NimbleKimble. The story which she had been sent was surprising, to say the least. For a man who had proved himself to have a relatively potent sexual imagination, this was not what she'd been expecting. Not by a long shot. The next surprise was that, if she understood correctly, the story would be playing out in her own home...tonight.\n\n*********\n\nBy half past eight that evening, Meg was ready. She'd managed to change the bed and have a long, relaxing bubble bath. There didn't seem much point worrying about the housework too much, given that nobody would be able to see anything. As per the storyline she had read earlier, all her curtains had been closed, the front door left unlocked and the electricity fuse box switched off. As a result, the silent house lay in total and utter darkness. She stood quietly in her hallway, facing away from the door, and waited.\n\nShortly, Meg heard steps outside of her house. The front door opened, closed and the Yale lock was applied. Meg sensed a tall man standing behind her and heard the shuffling noise of shoes being kicked off. Nervously, she reached behind to take his hand and guided him through the darkness into her bedroom. Turning to face him, heart racing, Meg reached out in the darkness to encounter a hip, which she gently caressed. His hand had simultaneously reached out for her and was stroking her hair and face.\n\n'May I kiss you please, Meg,' the stranger enquired in a well-educated English accent. Meg's heart began to race and she stepped backwards in shock.\n\n'Your accent?' she gasped. 'It's changed.'\n\n'Of course,' he replied and she could hear the smile in his voice. 'Previously, I've been acting out a part. I thought most women like a sexy Scottish accent.'\n\n'So why change now?' quizzed Meg.\n\n'Because tonight I get to be me,' he said. Great answer, thought Meg as a zing of excitement shot through her body. 'So may I kiss you?' he asked again. Meg chuckled to herself. The things this man had done to her body, and her mind come to that, and here he was asking for permission to kiss her.\n\n'Yes,' she answered simply. In the darkness, Meg leant into his muscled body, lifted her lips and wound her arms around his broad shoulders. She could feel his stubble graze deliciously against her face. At the point their mouths slowly opened and they allowed their tongues to slide against each other, Meg was rocked by a powerful feeling deep down in her core. God, she wanted to remain here, locked into this kiss, forever.\n\nJack's kiss was slow and teasing and served as a clear reminder to Meg of the control that he had previously exerted over her restless, quivering body. At first, his tongue flicked temptingly across her lips, never giving her what she needed, often backing away entirely before commencing once again. Gradually, the kiss deepened as they eventually took everything the other had to give. Meg was in absolutely no doubt whatsoever that she was in the hands of an expert. Slowly, as if on automatic pilot, without breaking their kiss, Meg began to ascertain what clothing he was wearing and systematically stripped him of it. Reaching between them, she slowly unbuttoned the front of what felt like a soft, linen shirt, rolling it away from his body and throwing it behind them. When she unclasped the heavy belt around his waist and unfastened his fly-button jeans, they hit the floor with a satisfying thud.\n\nMeg reached out to remove his underwear, only to find he wasn't wearing any. Instead, she encountered an extremely impressive erection that she gently wrapped her hand around the shaft of. Jack groaned throatily against their kiss, unexpectedly enjoying the unusual feeling of not being in the driving seat and setting the pace for once. Slowly, his natural domination tried to re-exert itself but the wonderful feeling of Meg's soft, gently stroking palm hampered his progress. Jack slowly shifted the focus of his mouth to suckle on Meg's bottom lip as he unzipped the back of her dress, eased the clothing from her shoulders and allowed the dress to fall to the floor between them. She moaned quietly as his hand easily unclasped her bra and removed the unwanted item with practiced skill.\n\nBreaking their kiss, Jack slowly sucked, licked and nibbled his way straight down her body; across her throat, between her breasts and over her stomach, until he was kneeling up in front of her. Gently, he slipped his fingers underneath her knickers and pulled them down to the floor. Registering Meg's slightly shaking legs, Jack then put his nose and mouth against her mound and inhaled deeply; he recognised the musky tang of her desire and felt a burning hunger to overwhelm her with his passion. Before he had chance to act, Meg had dropped to her knees in front of him and her lips had found his once more.\n\n'God, I'm dying to taste you,' she breathed into his mouth and, trailing her tongue down the enviable muscle-definition of his torso, she slowly arrived at his erection. In the darkness, Meg could only imagine what his body looked like, but she instinctively knew it would be a fantastic sight. Holding the base of his thick cock with her hands, she gently pulled back his foreskin and snagged her tongue teasingly around the smooth head. Jack made the sexiest groaning noises in response, which urged Meg to continue. He tasted delightful; masculine yet warm, sweet and clean. Slowly she took more and more of him into her mouth working her hand up and down his thick shaft, glad she was already pre-warned of his considerable girth which would otherwise have been a serious shock.\n\n'You're gonna need to point me in the direction of the bed,' stuttered Jack. 'My legs aren't going to hold out much longer.' Feeling like a Goddess, Meg slowly removed Jack from her mouth, took his hand, helped him up from his knees and guided him onto the bed.\n\n'Actually,' he continued, some of his natural dominance returning. 'I've got a much better idea.' And with that, he lay Meg down on the bed and kneeled over her, so that he was able to give her oral pleasure, as she simultaneously repaid the favour to him. Although Meg was no stranger to the incredible skills of this man, this situation felt much more intimate to those she had previously found herself in and she was shocked to find herself climaxing hard, within moments of his lips gently wrapping around her clit. Groaning loudly in response to the amazing sensations his fingers and tongue were creating and finding it incredibly difficult to maintain focus, Meg took as much of him into her mouth as she could.\n\n'Meg,' he whispered a short while later. 'I'm dying to get inside you. Please.'\n\n'After what you've put me through in the past few weeks,' teased Meg, 'I ought to make you suffer, as you have done to me. I should bring you right to the edge with my mouth,' she said, licking slowly down his shaft. 'And then stop as you teeter on that cliff ledge, not knowing whether or not you'll be allowed to float or fall,' she added, gently massaging his scrotum with her fingers.\n\n'You wouldn't dare,' grunted Jack. 'I'll pay you in orgasms to make love to me right now. How many do you want?'\n\n'Forty-two,' giggled Meg. 'The answer to life, the universe and everything.'\n\n'Deal,' he replied seriously, sitting up. 'Hand me a condom.'\n\n'No, I was only joking,' she replied appalled, leaning across to her bedside table. 'Four is fine. I meant four.'\n\n'Too late. Done deal,' replied Jack, ripping open the packet. 'Get over here now and straddle me.'\n\nMeg obeyed her orders with relish and, with legs spread wide to accommodate his magnificent body, Jack slowly and carefully slid his way past her slick, velvet folds, edging his thick, swollen cock inside her. During that gradual, thrilling surrender, Meg could do nothing but gasp and groan. Once his thick shaft had partly penetrated her, Jack held Meg's weight above him, his hands under her bottom, preventing her from taking any more of him inside.\n\n'What are you doing?' she moaned, pushing down against him, in an attempt to continue the pleasurable journey she'd been experiencing.\n\n'Teasing you of course, Meg,' smiled Jack. 'It's my all-time favourite hobby.'\n\n'I need more of you,' complained Meg. 'All of you.'\n\n'Are you sure you can handle more of me,' said Jack, only half joking. He didn't know if it was the intimate setting of Meg's home but he felt incredibly turned on and almost painfully hard.\n\n'I'm desperate for you.'\n\n'I know,' grinned Jack. 'Hence the word tease.' His strong arms began to lift her body up and down his length, entirely controlling how much of his cock was able to slide into her tight, twitching, desperate body.\n\n'Torment would be a better word,' muttered Meg.\n\n'Poor Meg,' said Jack. 'I can drop you straight down onto the entire length of me. Is that what you're asking for? For me to drive uncontrollably into you?' As Jack spoke the words, he felt Meg's internal muscles clench excitedly around him, answering the question on her behalf. Without giving any warning, Jack released Meg's body allowing it to do just as he'd threatened. Shock and sensation caused Meg to scream out in response as the entirety of Jack ploughed into her tight, wet, swollen pussy.\n\n'You didn't let me answer!' gasped Meg at length.\n\n'Sorry, but your body answered for you,' growled Jack, lifting Meg once again so that she was suspended part way up his cock. 'Let me show you,' he offered, still trying to hold it together himself, after experiencing such a rush of sensations.\n\n'Oh God,' moaned Meg, squeezing him in anticipation as she hovered above.\n\n'Do you want to feel the full extent of my hard, unrestrained cock slamming into you again, Meg?' asked Jack innocently. Immediately he felt Meg's body tightly clamping around him. He pretended to release her once more but didn't let her go. Meg inhaled quickly and her entire body stiffened, clearly expecting him to do so.\n\n'Did you notice your response that time?' teased Jack, raising Meg's body higher above him, so that only the head of his cock remained inside her. 'Your breathing speeds up and becomes shallow and your muscles clench desperately around me? If you don't stop gripping my cock so hard, Meg, I'll be forced to release you again.' Just as Jack had predicted, his words were making Meg's internal muscles involuntarily grasp him even tighter. 'On three...two...one.' Jack released her, allowing Meg's body, under gravity, to plunge down onto him once again. Meg screamed.\n\n'You bastard,' moaned Meg, as she slowly started to recover.\n\n'I aim to please,' murmured Jack as Meg slowly began to glide herself along Jack's length. Despite the mindblowing sensations, Meg closed her eyes and put every ounce of focus into rhythmically rocking her hips to try and repay Jack for some of the pleasure he had selflessly given her in the past.\n\n'You're doing very well,' grinned Jack. 'I can almost hear your concentration through the darkness.'\n\n'Don't put me off,' gasped Meg.\n\n'Poor Meg, don't you understand that my whole purpose is to push you to lose control. If I can't do that, I'd be a really crap lover. And I have all the ammunition I need. I have easy access to, and now an encyclopaedic knowledge of your most sensitive and intimate areas plus the challenge of a shed load of orgasms to coax out of you before I depart. I'm sorry, sweetheart, but you might as well just surrender now. You aren't going to win this one.'\n\nAnd with that, Jack immediately set to work. He enjoyed drawing out Meg's first few orgasms by concentrating on manipulating her nipples alone, although she initially orgasmed so hard around his cock that Jack had to focus hard on not coming himself. He then moved onto her clit and elicited a further flurry, sometimes using his hands to keep her hips rocking, when Meg lost all rhythm, in order that he could drive her through their often violent intensity. Whilst she was desperately trying to recover, she heard Jack's gleeful voice.\n\n'I wanna go behind you.'\n\nObeying his instruction, Meg eased herself apart from him, her desperately over-stretched body experiencing sudden relief. The relief only lasted for a few seconds however, as pushing Meg onto her elbows and knees, Jack very slowly re-entered her from behind. Meg groaned loudly; was it possible that from this angle, he was even bigger?\n\n'Fuck,' she moaned.\n\n'You're so trusting, Meg, bless you.'\n\n'Why?' she grunted, slowly rocking herself backwards, unaware of what she'd done to provoke that comment, but desperate for the amazing sensations she was feeling to never end.\n\n'You didn't realise the reason I wanted to go behind you. You see from here,' he continued, 'you are entirely accessible to me. And I can continue to thrust inside you, long after you've lost the energy to reciprocate.' And with that, Jack's hands began to roam around her body, driving her through an astonishing barrage of climaxes that barely allowed her to draw breath. Without breaking his deep, rhythmical thrusts, Jack started to milk orgasms from Meg with relish, fully exploiting her over-sensitive body. Meg had entered another world at this point. Her throat was agonising from groaning and crying out and she couldn't physically feel anything other than an overriding sensation of pleasure that removed every other thought from existence. From a long way away, Meg heard Jack roar and a final, tremendous set of thrusts knocked her head forward into the pillow and into yet another breathtaking climax.\n\n'Did you keep count?' whispered a cheeky Jack a short while later, removing the spent condom. Meg shook her head in the darkness, unable to form a reply.\n\n'I did. Twenty-six.'\n\n'That's fine,' mumbled Meg, every word spoken an effort. 'Can't do more.' Jack wrapped himself behind Meg, hugging her soft body into him and pulling the duvet over the two of them.",
        "'Now Megan. You know perfectly well that's not true. God, if I were to go down on you right now, my gorgeous girl...' he murmured into the back of her neck, fingers walking slowly down her ribcage. Against her body's will, Meg's felt her internal muscles involuntarily clench and she moaned quietly at the thought. 'Get a couple of hours kip because I can't leave here without making love to you again.'\n\n'I'm not complaining,' said Meg quietly a little while later, just as she was starting to drift away into unconsciousness.\n\n'I'm pleased to hear it,' said Jack cautiously, slightly lifting his head off the pillow.\n\n'But given my past experiences with you, and given that this was your fantasy, it was very conservative.'\n\n'You call forty-two orgasms conservative?' teased Jack. 'Jeez!'\n\n'Not forty-two yet,' challenged Meg. Jack laughed.\n\n'But you know we'll get there, don't you sweetheart? You know enough about me by now to realise I'll do whatever it takes.'\n\n'You know what I mean,' she grumbled.\n\n'Maybe spending the night making love with you and being able to fall asleep holding you is my fantasy, Meg. Perhaps I don't need anything more complicated than that,' said Jack soberly, kissing the back of her neck and closing his eyes.\n\n**************\n\nMeg awoke to the incredible sensation of a warm tongue gently lapping against her clit and two fingers, which must have migrated their slow and slippery way inside her whilst she slept, nudging at her G-spot. Meg involuntarily clenched her muscles tightly around his fingers, providing a surefire signal that she was awake. Meg was surprised at what a giving lover this man demonstrated himself to be when he didn't waver from his mission to give pleasure and, saying nothing, continued on as before. Still recovering from her previous exhaustion, Meg lay back and revelled in the amazing sensations being caused by his slow-moving fingers and terrifyingly skilled tongue.\n\nVery slowly, Jack began to ramp up the sensations. Quickly dipping a finger into the pool of nectar available to him, he slid it gently round and into Meg's tight rosebud of a bottom. Jack thought how very sweet she was, as her whole demeanour suddenly altered; clenching every muscle in her body she uttered a shocked 'Oh!' Continuing relentlessly with his tongue and G-spot massage, Jack kept his finger still until Meg's grip had relaxed once more. Only then did he slowly rotate his wrist, causing a uniquely intense sensation that caused her hips to buck. For good measure, he sucked firmly on her clit and pushed his finger a little further inside. Inevitably, as planned, he was rewarded by Meg achieving an astonishingly barrage of orgasms.\n\nBy the time he'd stopped playing with her body, Meg was shaking with unsuppressed longing and Jack had grown rock hard once more.\n\n'I've no idea of the time,' murmured Jack, 'but I need to be gone before it gets light. I reckon we've got less than two hours, during which time I'd like a guided tour of your house please.'\n\n'But you won't be able to see anything,' replied a confused Meg.\n\n'I don't need to see,' Jack replied mysteriously. 'I'm going to feel my way around.'\n\n'Where would you like to start?' she laughed.\n\n'How about the kitchen?' he suggested, grabbing a pillow.\n\nTaking his hand, a confused Meg groped around the walls and furniture until she got to the kitchen.\n\n'Do you have a clear kitchen work surface?'\n\n'Will the kitchen table do?' she replied questioningly.\n\n'Oh yes,' said Jack gleefully. 'As long as its sturdy.'\n\n'Just here then,' explained Meg, leading him by the hand.\n\n'Perfect,' said Jack, laying the pillow on the table and quickly rolling on a condom. He then easily lifted Meg up, lay her back down onto the pillow, positioned her feet up on his shoulders and quickly entered her. Meg was blown away by the initial sensation that was quickly followed up by his metronome thrusts that smashed her headlong into a wall of pleasure.\n\n'Great places for sex, kitchens,' groaned Jack as he tried to distract himself, teetering on the edge of losing control himself. 'I think it's the food that does it; ice cubes, ice cream, vegetables, chocolate spread, honey, champagne and strawberries. Oh the fun we could have, if only I could see,' he smiled.\n\nOnce he had entirely milked her climax, Jack stopped moving, simply leaving himself inside Meg. He slowly began to stroke his fingertips in waves down her body; starting at her throat, they gradually progressed across her breasts, over her tummy and ended by dancing an incredibly gently fingertip touch across her clit. As he did so, he could feel Meg's body shake and clench around him in pleasure and anticipation.\n\n'Your body is so beautifully responsive,' murmured Jack. 'Like playing an exquisite musical instrument.'\n\n'I've never reacted like this to anyone before,' admitted Meg.\n\n'We'd better take full advantage them,' grinned Jack. 'Can you sit up, wrap your legs around me and guide me to the next room? How about the lounge,' he added, pre-empting the question.\n\n'Sure,' groaned Meg, her body still reeling from his gentle touch. 'Aren't you going to let me get down then?'\n\n'No way! This is exactly where I need you to be. I love you being impaled on me,' laughed Jack. 'Put your arms around my neck and I'll carry you through.' Meg's initial thought of how strong he must be was quickly swept aside by the wicked feelings which flew around her body, as Jack walked around the house, with her precariously balanced, sunken down onto his huge cock. It took all of Meg's concentration to try and utter directions, as she was being transported between rooms.\n\n'In case you hadn't guessed,' grinned Jack, as he lay her body down on the sofa, carefully angling her hips across one of the arms to ensure she would experience amazing pressure once he began to thrust inside of her. 'You're going to be coming in every single room of your house, finishing in the shower. How many rooms do you have by the way?'\n\n------------------------------------\n\nIf you enjoyed this story, please do vote with 5 stars, to enable others to find it. Thank you!"
    ],
    "authorname": "FenellaAshworth",
    "tags": [
        "stranger",
        "tease",
        "hot sex",
        "orgasm",
        "big cock",
        "oral sex"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/fictional-fantasies-ch-04"
}