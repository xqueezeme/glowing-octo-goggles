{
    "title": "House by The Creek",
    "pages": [
        "House by The Creek\n\nI breathed a sigh of relief when the mover truck drove off the engine after an hour of unloading my essentials. I closed the dusty blinds and turned around to give a quick once-over at the stacked boxes in the middle of the living room, feeling eager to unpack, hoping that familiar items could lighten the mood of the absence of its homey atmosphere.\n\nBecause of hiccups with the mover on the lane, my belongings took a longer time to arrive. I was able to scrub the entire house in 4 days and all I needed was repairs and maintenance on some major issues in the house.\n\nI stayed at the local hotel in town and spent my daytime cleaning the run-down house. My king-sized bed and mattress from California was the only piece of furniture that I brought, which stood proudly on end in the master bedroom and I was pleased to spend my first night here later even though the house was still a safety risk.\n\nIt was reasonably priced and appeared to be in a good condition on a house-for-sale website. After my mother decided to marry an addict and became a drunkard, I've started saving money for the past two years to get away from her. And when I heard the news about the sudden death of my father five months ago, it devastated me. He was a devoted man despite him marrying another woman, he would always involve me in every fraction of his life.\n\nHis wife, Sarah, was the kindest woman I have ever met and I was keen to call her my stepmother. She made him happy and I watched my father grow into this remarkable man succeeding in his thriving business with a supportive wife standing by his side. They were beyond perfect.\n\nHe left a huge chunk of money for me in his will and I would be eternally gratified for that. Sarah was an understanding woman, she never felt envious or bitter towards me, instead, she encouraged me to start living the life I deserve and be happy. So I got away from my mother and relocated to this peaceful town, got a new job in marketing to begin a new chapter in my life, away from my non-existent family despite my friends' disapproval.\n\nThe house has two bedrooms, one bathroom and a small living room with an attached kitchen. The layout was ideal for a single woman like me who wished to spend the rest of her life alone. Images, it seems, were quite deceiving, and the house condition appeared to be worse in real life.\n\nIt has been vacant for a decade. Mould and mildew filled the walls, tree foliage smashed into the window, the wooden floor appeared to be broken in some sections, and the ceiling was shattered due to water runoff. The area was covered in trees and a bit secluded from people and the town.\n\nI sat on the new, plastic wrapped sofa with a glass of water in hand, after a long day of extensive cleaning, the water ran down my dry throat felt refreshing. I was wearing my white tank top and black yoga pants, the hot atmosphere caused me to sweat more with a tingling sensation between my legs.\n\n\"Damn it...,\" I cursed softly.\n\nI couldn't comprehend why I was aroused almost every day. Yes, I confessed that I am sexually frustrated to the deepest level but why do I need to get off up to 4 times a day, I wasn't sure if that was normal.\n\nI stripped down to my underwear and laid down on the sofa, started rubbing my clit and moaning in pleasure. I embraced masturbating while naked, my glistening C-cup tits and separate thighs looked amazing from my point of view.\n\nThe house was still at risk of exposure due to broken locks on shattered windows and doors, and anyone could barge in any moment but I couldn't help myself. My surrounding was awfully quiet, other than the chirping birds outside, all I could hear was the juices between my legs and my moans of pleasure. My palm hit my clit and my pubic area hard as I slid my fingers inside my pussy and began frantically fingering myself.\n\n\"Yes, yes, yes...\"\n\nAs the sensation inside my belly began to build, I clamped my thighs together and let out a squeaking noise as orgasm struck my whole body. My gaze was fixed on the ceiling, while the tingling sensation in my pussy lingered. That was satisfying.\n\nI wiped my wet fingers on my stomach once I had my breathing under control, closing my eyes and sighed contently. I bent to the side and used my arm as a cushion, then felt an unmistakable soft caress on my thigh, which jolted me awake.\n\nI straightened up and looked around the room, perplexed, but saw no one. I put my hand on my thigh, the sensation was almost identical except my palm was warm. My mind was most likely playing tricks on me so I shrugged it off.\n\n\u2022\u2022\u2022\n\nI scanned the beverage section, making sure that everything that I needed was in the basket before moving on to the snack aisle. I grabbed three bags of Jalapeno Cheetos and a bunch of Hershey's White Chocolate and tossed them in the basket. I would always prefer white chocolates over the regular ones, and my friends back home would laugh at me and find it unusual.\n\n\"Hello, you don't seem to be familiar,\" the cashier said warmly as she scanned my items.\n\n\"Hello there! I'm new here, I just relocated from California,\" I grinned. \"Ana Taylor,\" I said as I extended my hand to shake hers.\n\n\"Rita Fannings. Wow, you've travelled quite a distance, what brings you here?\" she asked as she stuffed my last item into the shopping bag.\n\n\"Oh, just city life doesn't work for me,\" I said, waving my hand, \"but it's very peaceful here, that's what draws me in.\"\n\n\"Of course dear, I hope you have a pleasant stay here,\" Rita said warmly. \"Do you have a place to stay?\"\n\n\"I bought the house by the creek in Maple Hills, and I'm currently renovating it.\"\n\n\"I know that place,\" she said, her brows furrowed. \"It's nice to see someone might relive it again, I'm certain the house will look just as lovely as it did before.\"\n\nRita's face was filled with concern and uncertainty. Whenever I told people where I live, they looked at me like I had a second head or was insane. Owners attempted to live there, but they didn't last long, perhaps two weeks at most, due to some serious eerie encounters, some believed the house was cursed.\n\n\"I'll give it my all, it's a lot of effort, but hopefully it'll feel like home to me next month... I'll see you around Rita.\"\n\nWe've said our goodbyes, then I went to the hardware store to get some paint.\n\nIt has been two weeks since I stayed in the house and today was surprisingly productive; with the aid of reluctant hired workers throughout the weeks, the ceiling, floor and windows were repaired. I had hired a plumber and an electrician contractor to fix some major issue and make instalments around the house. The locks on all of the windows and doors were installed properly. The only thing missing from the rooms, aside from the unpainted walls, were pieces of furniture and decorations.\n\nNow and then, I could sense it. A light touch and a gentle caress. On my sides, lower back, arms and even my face. It was more prominent around my private when in times of needs. It was startling and perplexing to me every time but it never made me feel threatened.\n\nMy subconscious kept telling me the ghostly presence in the house was true, amidst the talk of the town, a spirit perhaps, but I shrugged it off every time because it didn't show any real signs of danger or threats in the house as some folks described. At one point, I mildly twisted my ankle after falling off a ladder, and I felt a sudden caress on my impacted skin which soothed me. I knew the encounter was kind with no malice intended.\n\nI admit the events that took place here was odd. I noticed my bed was made by itself several times, but I couldn't recall doing it earlier in the day. I remember I was preparing eggs for breakfast and got distracted by a call from a colleague and I rushed towards the kitchen to find it well-cooked and the stove had been turned off.\n\nThe house was a little tidier than I remembered it to be after I made some adjustment to some areas. And whenever I misplaced things, and I spent my time trying to find them, they mysteriously appeared in the most obvious places. These were unexplainable things, and I was certain that the odd encounters were trying to make me feel welcomed.\n\n\"It's not bad here,\" one of the hired worker, Jos\u00e9, looked up at me after he had placed the last cornice floor, \"I'm glad my boss insist us on doing this.\"\n\nHe grinned as he looked at me from head to toe. His stare made me feel uneasy so I moved behind the kitchen counter and nodded at his remark. The heated atmosphere of the house didn't help the situation as my shirt clings to my flushed body like a second skin due to the excessive sweat. He was staring at my body the whole 2 days as if I were a tasty meal, and I pretended to be oblivious and avoided him at all cost. I've had arranged proper ventilation and air-conditioning initially for the house, unfortunately, got called for delays and the expected contractors' arrival was within this week instead.\n\n\"If you like Ma'am, I can come over tomorrow morning again and paint the walls for you,\" he smirked, licking his lips and staring at my cleavage while moving closer towards me. I know that he was hinting at sex, and he was being obvious at his intention, \"free of charge, of course.\"\n\nJos\u00e9 approached me like a predator trying to stalk his prey with a sinister smile plastered across his face. His white tank top clung to his sweaty skin and the filthy scent of his was more pronounced as he got closer towards me. His eyes were staring at my body hungrily, and my mind was reeling in fear when he started to enter my personal space. I stood stiffly with a racing heart as he lifted his finger hooking it to my neckline, shifting it downwards exposing my glistening cleavage.\n\nSuddenly, the dining chair screeched a foot away towards him and abruptly came to a halt beside his leg stopping his impending predatory move.\n\n\"What the fuck?\" He uttered in shock.\n\nI gasped, taken aback at the overtly spiritual sign. Jos\u00e9 stepped back with a puzzled expression on his forehead. Fear and shock radiated off his body as he stared at the chair then he rushed to start packing his tools and equipment hastily.\n\n\"I think we're done here, Ma'am,\" Fred, the other worker who was in his 50's appeared from the bedroom holding his toolbox.\n\n\"A-alright, thank you so much guys, I'll walk you out.\"\n\nJos\u00e9 rushed out of the house without a word once I opened the door which earned me a questioning glance from Fred. As soon as their truck pulled out of the driveway, I let out a huge sigh of relief. Anxiety always crept in whenever male workers came into my home, and it has something to do with the sexual advances these men had in mind for me.\n\n\"Thank you...,\" I whispered as I leaned the back of my head against the door. Somehow, I know that he or she was watching over me and I started to appreciate the spirit's presence over the weeks.\n\nI looked around the house and double-checked the windows and doors making sure they were shut and locked. After a hot shower, I exited the bathroom naked after dabbing my damp skin with the towel and using it to wrap around my wet hair. I stood in front of the mirror, and smeared and rubbed lotions all over my body.\n\nMy hair was damp, so I attempted to dry it as much before bed. My gaze was drawn to my naked body. I must admit that I find myself quite appealing. My fair skin stood out against my dark hair. People describe my face as angelic, with large hazel eyes, a small pointy nose and full lips. My body was not exactly skinny, in fact; I have a sexy curvy figure, compliments from most of my female friends back in California.\n\nIt was a shame that my body hadn't had much fun with sex. No man could ever make me climax with oral or penetration, I could count the times it did though when I had to work myself on being a cowgirl slamming myself on them hard and fast. When I was not, either they finished early or their pace was not up to my likings. But when I was left to my own devices, it was extremely addicting.\n\nI lay naked on the bed, spread my legs apart and began touching my throbbing pussy. I moaned as I slid my middle finger inside my warm canal, slowly stroking in and out. My other hand reached out and squeezed my ample tits hard, closing my eyes and moaning in ecstasy.\n\nPlaying with myself was my everyday routine to get a good night's sleep and I wouldn't miss coming multiple times until I feel sated. I know I was being watched every night by the ghostly presence but I couldn't care less as long as I was not harmed in any way.\n\nAs I slid my finger out to suck it, a cold touch brushed against my clit. I blinked open my eyes, startled. The odd encounters never touched my pussy directly, instead, I always felt it caressing my thighs or legs when I played with myself.\n\nI waited, wondering if I imagined the sensation right, fixing my gaze on the ceiling as another giant flick of touch landed on my wet clit.\n\nWhat the hell?\n\nI lowered my gaze to my pussy then another giant cold flick of touch continued slowly from my pussy hole until my clit, up and down. I'm pretty sure I was getting licked!\n\n\"Oh, my God.\"\n\nI sat up suddenly and tried to buck my hips away from the invisible force, but it persisted.\n\n\"Oh, my God!\"\n\nWhen I reached down my hand between my legs, it felt as if it had passed through nothing and the licking sensation remained. I stared down at my pussy, my labia lips and clit were moving erratically. The sound of my pussy wetness was audible, and I could feel myself becoming wetter at the gentle strong force.\n\nI couldn't fight it; the sensation was incredible. How I wished for someone decent to enjoy foreplay and lick me every night until I reach my orgasm but never have I thought about a certain spirit about to fulfil it, so I might as well grasp the opportunity and see where this leads.\n\nI sagged into the bed, gasping and enjoying the sensation of the strong invisible tongue. I should have been scared, but I was extremely aroused that my judgment was clouded by the intense pleasure it gave me.\n\n\"Yes...,\" I whispered. It has been going on longer than 10 minutes as I spread my legs, squirming and writhing at being licked hard and my orgasm started to develop.\n\n\"Finger me?\" I asked, out of breath.\n\nA cold finger slipped into my pussy with a jolt.\n\n\"Oh, my God... Yes!\"\n\nAnother finger slipped inside me and began to move roughly. The sound of my wetness was wild in the room, it turned me on so good.\n\n\"I'm cumming! I'm cumming!\"\n\nAs I jolted up, clenching the sheets, a massive orgasm washed over my belly. My body shuddered and trembled in response to the sensation then I collapsed into the bed, panting heavily.\n\nThe tongue continued to lick me but at a slower pace. My heart was beating steadily as I recovered from my climax and then... the sensation stopped. I leaned on my elbows to see what will happen next but... nothing.\n\nI gasped in shock as my lips were gently brushed by a cold touch then I parted my lips and felt a tongue slipped in. I closed my eyes at the sensation and lay back in bed. My hand shot out, attempting to reach out the head, instead, passing through the air. The sensation of the invisible kiss was incredible and I moaned aloud as the aggressive tongue explored my mouth.\n\nA cold touch on my breast tickled me slightly. I moaned at the gentle squeezing of my breast and pinching of my nipple. The cold palm sensation trailed down to my pussy, and rubbed my clit gently.\n\n\"Mhmm... Yes more please,\" my voice was muffled by the kiss as the clit rubbing became forceful.\n\nThe cold fingers entered me once again and started to stroke frantically inside me. I squirmed at the fingering sensation as well as a cold thumb, I presumed, rubbing my clit aggressively.\n\n\"Oh, God! Don't stop! Just like that, yes!\" My scream was smothered by the passionate kiss as I jerked my hips towards the invisible force.\n\n\"I'm cumming-,\" I gasped and rolled my eyes as my body shook violently on the bed. My juices gushed over my pussy and inner thigh by the intense pressure.\n\nI whimpered as the spirit broke the kiss and leaned down to pull my thigh to my chest and lick my wetness slurping it down greedily. I could feel a nose poking my asshole and a chin rubbing my pubic area as my pussy was being eaten. My view was extremely arousing, as the strong invisible palm held my thigh still beside my chest, my pussy and ass hung in the air and I could see fast movement on my glistening pussy as I was getting licked.\n\n\"Oh, my God...,\" I panted heavily, stroking my forehead in disbelief as the licking sensation continues. I couldn't believe I got multiple orgasms from a spirit, and it was the most satisfying foreplay that I had ever encounter than any human I dated with.\n\nI looked around in a daze, expecting another round of pleasure on my throbbing pussy as the sensation stopped and my thigh was pulled down gently. Unfortunately, the blanket shifted itself and slid over my naked body softly. I smiled at the kind gesture then clamped my legs together switching into a comfortable position as the lights switched off by themselves and I eventually fell asleep.\n\n\u2022\u2022\u2022\n\nI woke up feeling like I may have had a wet dream about a ghost eating me out. My brow furrowed as I remember vividly how it happened. I yawned and sat up slowly letting the blanket fell off my shoulder, exposing my naked chest.\n\nI let out a gasp as the blanket was suddenly lifted off of me, exposing my privates underneath it. Then, there was a gentle flick of an invisible finger on my pussy.\n\n\"You're real...,\" I said softly, straightening my back at the sensation.\n\nMy heart was beating fast, last night was not a dream. The cold fingers rubbed my pussy slowly and I couldn't help moaning.\n\nThe sun's rays shone through the white sheer curtain, brightening the room, and I was enthralled to see movement on my glistening pussy lips.\n\nA cold touch brushed my lips and I leaned forward to the kiss. I let out my tongue, attempted to explore the lips and was surprised to find cold wet friction. I felt like kissing an invisible human, the physical contact was present.\n\nThe spirit broke the kiss, then the fingers stopped rubbing me. I waited to see what would happen next, and I was not disappointed in the least. A gentle flick of the spirit's tongue was on my pussy, and I moaned as I spread my leg wider, slumping into the bed.\n\n\"You make me feel good...,\" I said softly as my hands reached out, squeezing my breasts.\n\nI lay in bed for more than 40 minutes getting licked and fingered, and I was moaning and writhing in pleasure, as the spirit gave me multiple orgasms throughout the session.\n\n\"No more, no more please...,\" I pleaded, panting heavily.\n\nI bucked my hips upwards attempting to avoid the invisible tongue and the sensation stopped. I clamped my thighs together, I swear I could hear a deep manly chuckle echoing in my ears softly. That was probably the longest oral pleasure I had ever received. I lay in bed, my gaze fixated on the ceiling thinking hard.\n\n\"Who are you?\"\n\nNo answer.\n\n\"Do you live here?\"\n\nNo answer.\n\nI sighed and tried to sit up by the edge of the bed, my legs felt heavy and stiff as a result of my orgasms.\n\n\"Thank you for everything that you've done for me...,\" I smiled, looking around the room.\n\nA gentle caress brushed along my lips and I leaned towards the kiss. The kiss broke and I unmistakably heard a male voice mysteriously echoing in my ears.\n\n'...you're beautiful...'\n\n\u2022\u2022\u2022\n\nThree weeks straight, the male spirit would kiss the ground I walked on. The sensation never ceased to amaze me. I would get an intense release in every part of the house including the kitchen table, the floor of the living room, in the shower and even the front porch.\n\nI wouldn't have to play with myself any longer; instead, I'd lie naked in bed or sofa and he was always there to pleasure me day and night. I'd wake up to a licking sensation to my pussy every morning, came home from work to a rough fingering and tongue fucking and slept in a sated daze from it every night. My body would not even reach the front door to settle inside and he would take off my panty, eating me right then and there on the porch.",
        "I would not miss coming by his fingers and mouth at least 5 times a day. It was mind-blowing. At times, I tried to talk to him, even begged for a fuck, knowing that I would never get a response. He would understand when to give me space, especially when I needed to focus on fixing the house or finishing my paperwork.\n\nSomehow, he respected my privacy and returned whenever I needed him. The occasional caress and fondle would always comfort me, yet I couldn't do the same to him, it was always one-sided.\n\nHe kept crossing my mind and filled my head with filthy thoughts at the office during the day. The distraction caused me to soak my panty and I had to pleasure myself in the cold dingy bathroom stall. These were the times I wished for his presence, unfortunately, he'd never followed me out of the house.\n\nMy car came to a halt in front of a lingerie store after I headed off from my worksite. And I couldn't help but think about the spirit awaiting to pleasure me at home. A mischievous grin crept across my face as I exited my car and entered the store.\n\nUnashamedly, I spent an hour in the store choosing and fitting myself with erotically sexy lingerie I could muster and bought myself some pairs. After I paid for the materials, I entered the fitting room and wear one of them before heading out of the building earning a knowing smile from the cashier.\n\n\"You there?\" I whispered as I dropped my purse and shopping bag by the coffee table. I took off my coat and hung it by the door when I felt a cold arm wrapped around my midsection and I grinned widely at his welcoming presence. His hand immediately trailed downwards to lift my dress.\n\n\"Not so fast,\" I whispered, pulling away from his embrace. I stood in the middle of the living room feeling his eyes watching me as I looked around. \"I have a surprise for you,\" I said, walking slowly towards my bedroom feeling him following my move closely behind.\n\n\"You will not touch me until I tell you to,\" I instructed, smiling mischievously as the door closed by itself.\n\nI stood in the middle of the bedroom, slowly unzipping my textured navy blue sleeveless dress, revealing the new white lingerie underneath. I wore a lacy transparent bra and a g-string with a sheer suspender belt set which looked erotically sensual against my pale skin.\n\nI could hear a gasp echoing in my ears and I got turned on as I could feel his eyes staring at my body hungrily.\n\n\"You like it?\" I asked seductively as I swayed my hips bending over by the edge of the bed arching my back. I could feel light kisses on my bare ass and I jerked my hips away from him.\n\n\"No kisses,\" I instructed teasingly and I could hear him groan in desperation echoing in my ears. I giggled as I could feel his cold breath tickled the skin of my rear.\n\nI swayed my hips in a circle deliberately as I sat on my knees on the bed ass hung in the air. My juice was soaking through the thin material and it was seeping into my inner thigh.\n\n'...please...'\n\nHis plead was echoing in my ears and it made me wetter by the second.\n\n\"I was horny for you in my office, and you weren't there...,\" I moaned, turning around to face his presence by the bed. \"I begged you to fuck me but you don't want to...,\" I moaned, grinding and humping my hips on the bed like I was riding a cock to tease him. My tits were bouncing sensually as I wrapped my fingers around my hair closing my eyes.\n\nI leaned forward in a doggy style position on the bed, pushing and circling my hips behind me pretending to fuck a cock, moaning like I was being fucked hard.\n\n\"When will you let me have your cock?\" I whispered, panting heavily.\n\n'...I want to...'\n\n'...please...'\n\nHe begged again and I could feel soft kisses on my lips as I continued pretending to be fucked. It was cruel of me to tease him like this and I couldn't hold it any longer as my pussy throbbed for his tongue so badly.\n\n\"Oh my god, please make me come,\" I moaned.\n\nI could feel his cold hands gripping my hips tightly, as I realized he had dashed towards the other side of the bed to tend to my needs. The cold sensation of a palm massaged my exposed ass, trailing his finger down to my inner thigh, tickling my throbbing wet pussy.\n\nMy hips swayed slowly in the most sensual way and I screamed as a rough slap echoed in the room.\n\n\"Yes! Spank me!\"\n\nIs he punishing me right now?\n\nI screamed in pleasure as he kept spanking me hard and I could tell my ass cheeks were red from his assault. He hooked his finger around the g-string and pulled it down slowly to my ankle. A quick and rapid flicker of a cold tongue licking and slurping my juice desperately, and I squirmed at the amazing sensation. His palms were trailing softly towards my hanging breast and he squeezed them hard, playing and fondling them like it was his favourite toy.\n\n\"How you like my pussy? You want more of my juices?\" I moaned, swaying my hips in a circle.\n\n\"Make me come hard, use me please, I'm yours!\"\n\nHe grabbed my hips and bucked it harshly towards his awaiting stiff broad tongue and I shuddered as orgasm struck my belly.\n\nMy thigh trembled as he twisted me towards the bed, laying on my back. My thigh was roughly pushed to my shoulder, and my pussy and ass hung in the air as he continued to eat them good.\n\n\"Oh, I love how you eat me!\"\n\nMy glistening pussy was moving erratically at his assault as he holds my thigh with one arm and I screamed as a hard slap tingled my pussy.\n\n\"Harder!\"\n\nSmack.\n\n\"Harder!\"\n\nHe slapped my wet pussy violently with his fingers and I screamed as my orgasm struck again with his continuous assault.\n\n\"Yes! Yes! Yes!\"\n\nI squirmed and writhed in pleasure as he abruptly fingered me hard and multiple orgasms came over my body. My juices were extremely gushing over my pussy and inner thigh, this was probably the wettest I have been. As I wriggled violently on the bed, he let go of my thigh and licked me gently, drinking and slurping all my juices.\n\nMy body relaxed and I moaned in pleasure at his gentle licking. I opened my eyes and gasped at a slight translucent figure on top of my pussy. I could see traces of a face devouring my pussy and his eyes were closed. Silhouette of his head and shoulder were moving frantically as he relished in his juicy meal.\n\n\"Hey...,\" I whispered as I reached out to caress his cheek and the touch barely caused friction. He noticed the sudden caress and he stopped his action, his translucence was gone instantly.\n\n\"No, wait... Don't go yet,\" I said in a panic, as I leaned on my elbows. \"I can see you a bit, can you show me yourself again?\"\n\nI waited instead he gently kissed my lips and I moaned at the touch. I was slightly disappointed as he went back to his invisible self towards the whole evening, nonetheless, he pleasured me for hours and I could still see traces of translucence moving on my pussy but I shrugged it off every time as I couldn't see any of his features.\n\n\u2022\u2022\u2022\n\nIt was the next day and I was dressed loosely in my short satin robe when I felt a gentle kiss and suction on the back of my neck. I smiled as my skin tingled deliciously. My body was covered in hickeys as he loved to suck on my skin whenever he pleased, I could tell he was proud of his work of art on my body.\n\nA cool sensation wrapped around my belly, and I giggled as my robe shifted to the side revealing my right breast. I could feel his hand deliciously squeezing my breast.\n\n\"Stop it,\" I grinned, desperately attempting to avoid him trying to strip me naked. If I were ever to be seen, I might look crazy talking to myself.\n\nI was wriggling out of his soft caresses and kisses, hastily mixing my pancake batter on the small marble countertop.\n\n\"I have to get to work, and I'm already late,\" I sighed.\n\nHe already made me come thrice this morning after I woke up to a licking sensation in my pussy. I swear he was insatiable. Somehow, I could hear him pleading for it, echoing silently in my ears right now.\n\n'... please...'\n\nI sighed and pushed away all the utensils in front of me, arching my back and leaning my partially covered breast against the countertop. The cool marble tickled my nipples nicely.\n\nThe hem of my robe was being lifted from my ass, and the thin material was pooling around my waist softly. His large cold hands squeezing my ass cheeks apart and the slow gentle licks began...\n\n\"Mhmm...,\" I moaned.\n\nHe quickened his licking pace urgently and began to finger me vigorously. I loved the sound of my wetness against my pussy.\n\n\"Almost there...,\" I whispered, closing my eyes in ecstasy.\n\nHis tongue had left my pussy and now he was fingering me violently. I could feel my ass being slammed against a firm palm and my ass cheeks rippled at the force. This was most likely the most aggressive fingering I'd ever receive from him.\n\n\"Oh my God! Yes! Cumming!\"\n\nI gasped and rolled my eyes at the sensation, then a massive orgasm washed over my body and I squirted hard!\n\nI could feel uncontrollable streams of wetness dripping off me violently.\n\n\"Oh my God!\"\n\nI lost my balance due to the force, so I grabbed the counter's edge with my fist. My entire body trembled and shook violently.\n\nWhat the hell just happened?\n\nI squirted for the first time! And that was extremely satisfying!\n\nI pushed myself away from the counter then slowly looked down at my feet but surprisingly the floor was dry and there was no wetness visible on my thigh.\n\nI turned around slowly to meet a translucent silhouette of him, the features on his face was visible and he was beaming at me from ear to ear. I gasped in shock, he was breathtakingly handsome.\n\n\"Hi...,\" I whispered breathlessly.\n\n'...Hi...'\n\nHis naked masculine chest was barely visible, as was the rest of his body. He smiled and took a step forward, reaching out his hands to gently fix my robe to cover my chests and straighten the hem around my hips.\n\n\"We've never formally introduced ourselves, I-I'm Ana...,\" I said out of breath, my hand reached out to shake his out of reflex, but I realised that it might be impossible. He immediately grabbed my hand and pulled it to his lips, giving the back of my hand a gentle kiss. I smiled at the gesture.\n\n'...I know...'\n\nI thought his translucence flickered and faded a bit when he talked. He leaned in and kissed me gently on the lips, which I returned. My hand reached out, and I gasped as it came into contact with firm friction, resistance against his chest.\n\nHe began to kiss me passionately as he felt my gentle caress. I moaned and moved my hands around his shoulder to his soft hair. Oh my God, he felt incredible!\n\nHe kissed and sucked my neck slowly, and I could feel his cheek on my jaw and his hair tickling my skin. As he drew me closer to his chest, his masculine arm wrapped around my waist. He felt alive and surreal at the same time!\n\nI sighed contently as we hugged for the first time.\n\n\"You don't wanna tell me your name?\" I asked softly, looking at his face.\n\nHis eyes shone with wonder as he gazed at me, caressing my cheeks. I waited for his response then there was a slight movement on his lips, his voice echoed in my ears silently and his white silhouette flickered and faded a little bit more.\n\n'...Xavier...'\n\n\"Does talking makes you weak?\"\n\nThere was a slight nod to his head.\n\n\"I assume my juice gave you the energy?\" I asked in embarrassment.\n\nA slight nod to his head and then there was a shrug on his shoulder. So that was a maybe. I could see there was a movement to his lips but I stopped him.\n\n\"Shh... save it. I still want to see you, come to bed with me...,\" I spoke softly, touching his cheeks.\n\nI held his hand and guided him to the room, I could feel him slowly fading. I stripped naked next to the bed, letting the robe fell slowly off my shoulder. My back was facing him and I could feel his eyes watching my every move.\n\nI knelt on the bed, looked at him behind my shoulder seductively and flicked my finger motioning for him to come to me. I gave him a mischievous grin and a silent chuckle echoed in my ears.\n\nI arched my back and leaned my face and breasts towards the bed. As I spread my thighs wide, my pussy and ass hung in the air by the edge of the bed.\n\nWhile I waited for his response, a gentle caress was pressed on my ass. He massaged my cheeks firmly, and I moaned. Then, all of a sudden, I felt a hard spanking.\n\nI shrieked in response.\n\nMy pussy clenched at the sensation, and he followed it up with gentle kisses on my ass cheeks. He repeated his action, and each time he spanked me hard, I screamed and moaned as he replaced it with gentle kisses.\n\nMy pussy was throbbing profusely, and I could feel moisture slowly dripping down my inner thigh. I was extremely aroused. This man can make me come like bat shit crazy.\n\nI could feel his face rocked greedily between my ass as he lapped his cold tongue against my pussy. He devoured and ravaged my pussy like there was no tomorrow.\n\nAs he fingered me hard and rubbed my clit with his other fingers, I jerked my ass and pussy against his face frantically.\n\n\"Oh, please, make me squirt again,\" I moaned. I could feel his fingers stimulating my G-spot violently.\n\n\"I'm cumming! I'm cumming!\"\n\nMy scream was muffled by the bed beneath me, and I clenched the sheets tightly as the intense pressure on my lower hips caused an earth-shattering orgasm. Xavier didn't stop fingering me roughly as I squirted, he drank up all my gushing juices before it hits the sheet.\n\nI collapsed into the bed, leaning on my side in a slight fetal position. My body shook and trembled from the involuntary reflex.\n\nThe bed next to my head dipped slowly, and I gasped as his masculine hands became more pronounced and firmly placed next to my head. As he leaned on the top of me, I followed my gaze from his arm to his face.\n\n\"You're beautiful, Xavier...,\" I sighed, caressing his cheek.\n\nHe leaned in to kiss me and I captured his kiss eagerly. I felt his chest brushed against mine, so I spread my legs and wrapped them around his hips bringing him closer to me. It was amazing how firm his body had gotten, my hands and legs didn't pass through the air this time.\n\nI ground my hips against his and was surprised as something poked my pussy. I broke the kiss and stared at his translucent body, gasping as I noticed a massive cock hanging proudly beneath his belly.\n\n\"Oh my God!\" I shrieked in shock, staring at his smiling face. He was ecstatic that I could finally see his asset, and damn, the man was massive!\n\nHe teased me by slowly grinding his cock against my pussy, and the cold sensation felt incredible against my throbbing warm pussy.\n\nMy hand instinctively reached out to wrap my fingers around his length, and Xavier closed his eyes as I stroked him slowly.\n\n\"You're so big...,\" I stared at it hungrily.\n\nI guided his head against my clit and moaned as it rubbed me slowly. My hip jerked and wiggled against his dickhead, and the slick sound of my wetness turned me on.\n\nI let his head rest on my pussy hole, and I looked at his face as he stared at me in a daze.\n\n\"Fuck me, Xavier.\"\n\nInstantly, his cock jerked forward, filling my pussy slowly. I moaned as he stretched my pussy wide open, the cool sensation helped with the tight burn inside me. It had been over 9 months that I haven't had any real penetration besides my small-sized dildo. And that little toy alone required a lube to make me feel good.\n\nXavier filled my pussy inch by inch, and the pain of him stretching me was excruciating. When he noticed that I had tears in my eyes, he paused and caressed my cheeks, looking at me with concern. He pulled his body away from me and gave me gentle kisses on my face. It looked like he was apologizing to me.\n\n\"No... Don't stop, please...,\" I grabbed his hand pulling him towards me.\n\nInstead, he shook his head then got off the bed, walking back and forth in front of me, hands in his hair. I could see his entire body, which appeared to be masculine and sexy, I wondered what his skin tone might be, I could imagine him tanned, despite his translucent figure now.\n\nI got off the bed and walked slowly towards him and caressed his chest gently. His face was contorted in anger, guilt and pain. I smiled at his concern then placed gentle kisses on his lips.\n\n'...sorry...'\n\n\"Shh... It's okay, don't say a word...,\" I whispered.\n\nI approached my bedside table, and slid out the top drawer, grabbing my lube and motioned for him to come to join me in bed.\n\nXavier looked at me with interest as I spread the liquid on my palm and rubbed it on my pussy. I squeezed a good amount and stroked the liquid on his cock. His eyes closed at the physical contact.\n\nI slowly guided his cock back to my pussy and he entered me with one swift push.\n\n\"Oh my God!\"\n\nHis face stared at me in amazement as his cock moved easily inside my tight vagina.\n\n\"It feels so good!\" I squirmed, slumping my body back into the bed, squeezing my breasts and moaning in pleasure. I've never had a cock stretched me out so good.\n\nXavier grinned and watched in fascination as his translucent cock disappeared inside my vagina, the slick sound of wetness between us was loud and clear. He stroked his dick in and out of me slowly, letting my pussy adjust to his girth.\n\nThe gap between my pussy looked amazing as the translucent force stretched them apart.\n\n\"Fuck me harder.\" I gasped as I bucked my hips in urgency towards his cock.\n\nHe leaned towards me and embraced my body in his arms. I spread my thigh wider and wrapped my ankle around his hips, locking them.\n\nXavier fucked me with urgency, balls deep and fast. The sound of our skin slapping and wetness was loud in the room. I grunted every time his cock hit my deepest wall and the sensation builds up inside my belly.\n\n\"Oh my God, I'm cumming!\"\n\nI screamed in pleasure as I climaxed from his rough fucking. He ejaculated his semen inside me and the sensation of it was more pronounced as I felt the coolness spread inside, but it was gone in a matter of seconds. And my pussy was left throbbing with the lingering after-effect of my orgasm.\n\nXavier slumped on top of me, giving me his weight and I wrapped my arms around his shoulder, locking him in place. I gave gentle kisses on his shoulder, caressing his back. We lay in bed like this for a while until I dozed off to sleep.\n\n\u2022\u2022\u2022\n\nMy body felt sated and I felt like I was floating in my bed when I awoke. I smiled as I remembered what had happened before I fell asleep. I couldn't believe a spirit made me squirt and I had sex with him. That was probably the most intense orgasm I'd ever had.\n\nXavier.\n\nI sat up straight and took a quick scan of my surroundings. There was no translucent figure insight. I waited for my blanket to shift on its own, but it didn't. His presence was noticeably absent.\n\nWhen I reached my phone on the bedside table, I discovered that I had 10 missed calls. That was expected. I slept throughout my morning and afternoon. My boss was going to go nuts with me.\n\nI called my work colleague to apologize and inform them that I was sick today. She laughed at me and told me how ridiculous I am for working so hard on a house in ruins. That was partially true, but a certain sexy translucent figure had also drained my energy to fuel up his. But I couldn't say that, so I just laughed along and agreed.\n\nI took a quick shower and changed into my thin satin robe. It was strange that I hadn't been touched, caressed or fondled by him. As soon as I awoke, he would always greet me in this manner.\n\nI left my room and made my way to the open kitchen. I gasped, as I was taken aback by the sight.\n\nThe kitchen was spotless, and all the dirty dishes from earlier in the day had been cleaned. My attention shifted towards the small round dining table by the corner, I was shocked to see a stack of pancakes topped with maple syrup and blueberries. Next to it was orange juice and a small piece of paper.",
        "As I got closer, I noticed a stiff 'Sorry' written in the centre of it. I smiled as I covered my mouth, it warmed my heart at his effort on my behalf.\n\n\"Xavier?\"\n\nA sudden jolt of cold sensation wrapped around my waist, and I could feel him hugging me from behind. I leaned back against his chest, smiling.\n\n\"Thank you,\" I said softly, \"nobody has ever done anything like this for me before.\"\n\nHe kissed my neck and I turned around to face him. His naked body was still clearly visible in its white translucence. It's no surprise he was always eager to eat me; he wanted to show himself and everything about him was perfect.\n\nI gave him gentle kisses on the lips and he returned it, his cock twitched suddenly on my belly. I laughed in amusement, as he looked at me sheepishly. I gasped as he wrapped his arms around my ass and lifted me off the ground, amazed at how strong he had become.\n\nHe steadily lifted me towards the dining table, then lowered my body to sit on the chair. He slid over to the other side then pushed the plate towards me gently.\n\n\"Are you always this pushy?\" I joked. It was true, he would always plead to pleasure me.\n\nHe smiled and nodded his head.\n\nI moaned as I took a bite at the freshly made pancake. I realised I was famished so I shoved the pancake in my mouth as quickly as I could. I burped as I gulped the juice down in a matter of seconds.\n\nXavier watched me with amusement in his eyes.\n\n\"What?\" I rolled my eyes, \"it's not like you've never seen me burp or fart before.\"\n\nHe shrugged his shoulder, but that look was a person who knew every little thing that I did. Stalker.\n\n\"Xavier, did you live in this house before?\"\n\nHe nodded his head.\n\n\"And you died...?\"\n\nHe didn't nod his head, instead, he shrugged. That was weird.\n\n\"You don't remember that you died?\"\n\nHe nodded his head and crossed his arms. He stared at the table thinking hard.\n\n\"Do you want to talk to me?\"\n\nHe nodded his head as he stared at me intensely.\n\n\"Do you remember your birth date?\"\n\nHe nodded his head. I took the piece of paper and the pencil next to it and push them towards him.\n\n\"Can you write it down for me?\"\n\nXavier tentatively reached for the pencil and scribbled stiffly on the paper. It was as if he was relearning how to write.\n\n'Sept 7, 1920'\n\nWow, I just had sex with a hundred-year-old man.\n\n\"Can you go to other places than here?\" I asked, as I folded the paper and put it aside.\n\nXavier shook his head no.\n\n\"Why?\"\n\n'...burns...'\n\n\"Shh... I'm sorry, I should've asked you a yes or no question,\" I panicked as his translucence flickered abit.\n\n\"I'll try to dig in some information about you in town,\" I said as I grabbed his hand and squeezed it gently.\n\nXavier gave me a thankful smile.\n\n\"Now, were you the one who set a man's shirt on fire when they tried to move in here?\"\n\nXavier's face burst out in laughter, I could hear a deep chuckle echoing in my ears. His translucence flickered as he laughed wrapping his arms around his stomach.\n\n\"Stop... You're gonna fade on me!\" I yelled, trying to hold my laughter.\n\n\"You've caused quite a chaos, you know, they told me this house is haunted, I had to convince my realtor I'm quite capable of living here by myself, just because I am a girl,\" I sighed, waving my hands exasperatedly.\n\nXavier smiled and leaned in to kiss my cheeks as I wiped my mouth with a napkin and he stood up carrying the dishes to the sink. My gaze was drawn to his naked butt, and I couldn't help staring.\n\nIs he going to walk around naked all the time?\n\nCause it made me feel hot and bothered. I scoffed mentally at how pervy I had become.\n\nHe washed the dishes and walked around the kitchen as he belonged, it warmed my heart at the sight. I wrapped my arms around his stomach and spooned his cold body.\n\n\"Thank you, Xavier...,\" I whispered, kissing his back just below his neck.\n\nMy palms dropped south to his chiselled abs then to his pubic hair. I couldn't stop kissing his back as my fingers wrapped around his already hard cock. I began to stroke it gently, teasing the head with my index finger.\n\nXavier grabbed my wrists and yanked them away before slowly turning around and leaning in to kiss me.\n\nI broke the kiss, and slowly kissed his neck and chest then moved down to his abs. I knelt and kissed him gently on his pubic area and thigh. My gaze was drawn to his face as I pressed his cock between my lips.\n\nHis eyes widened in surprise as he cupped my chin and bucked his hips away from my face.\n\n\"What?\" I asked as I wrapped my hands around his cock, trying desperately to guide it back to my mouth.\n\nHis expression was a mix of confusion and disbelief.\n\n\"You never had a blowjob before?\" I smiled, licking the tip of his cock teasingly.\n\nXavier parted his lips, then closed his eyes, a look of pleasure on his face. I gently engulfed his dickhead in my mouth, then slowly suck his thick shaft.\n\nHis cock filled my mouth until it reached the base of my throat, and I fought hard not to gag. As I sucked his cock, bobbled my head up and down, Xavier watched me with intense fascination.\n\nI spit on his translucent cock, and stroked his shaft hard and fast as I sucked on his head. He instinctively wrapped his fingers around my hair, pulling it away from my face.\n\nHe involuntarily bucked his hips towards my face, and I knew he was about to come. I moaned as his palm reached down to grab my tits and pinch my nipples hard. Then, he trembled as he ejaculated his sperm inside my mouth and I swallowed him whole. His semen was tasteless and it felt like I was drinking thick cold water. It refreshed my throat deliciously and I found it addictive!\n\nXavier leaned his back against the counter, he was panting heavily in silence, and I couldn't stop sucking him. My mind was desperate for a second blowjob but he pushed my head away gently.\n\nI looked at his sated expression and he shook his head no. He looked like he needed to take a minute from his orgasm.\n\nI smiled sheepishly, standing up to put my arms around his shoulder.\n\n\"You're delicious... I want to drink you again,\" I grumbled. A deep chuckle echoed in my ears as his face lit up, staring at my lips.\n\n\"Let me suck you again, please...,\" I pleaded.\n\nXavier leaned down to kiss my lips but I dodged it. He wrapped his arms around my ass and lifted my body, my legs instantly wrapped around his hips. He nuzzled my neck with his cold nose and I burst out giggling as it tickled my skin.\n\nHe threw my body on the sofa and I immediately wrapped my palm around his limp cock.\n\nXavier pulled my hand away, and I pleaded with him with my eyes.\n\n\"Let's do a 69 then?\" I whispered, sounding so desperate because everything about him was addictive.\n\nXavier looked at me in confusion, waiting for me to explain.\n\n\"I sit on your face, and you get to lick my pussy and I get to suck your cock again,\" I bit my lips seductively, untying my satin robe, exposing my naked body.\n\nXavier looked at my body hungrily as he slowly sat next to me. His hand reached out my breasts, but I pushed his chest so he lay on his back on the sofa.\n\nI straddled his cock and threw my robe on the floor. He looked at me with utter fascination. It made my pussy throb. I leaned in to kiss him, and he returned the kiss eagerly. My pussy ground on his now hard cock deliciously.\n\n\"I never was eager for a blowjob, until I met you...,\" I whispered against his ear breathlessly, biting his earlobe. \"Do you know how addicting you are...?\"\n\nI sucked on his neck, biting and pulling the translucent skin as I ground him furiously.\n\n\"Nobody has ever made me come like you, Xavier,\" I said, kissing his lips hard. His eyes were in a daze as he stared at me. I straightened my back and leaned my palms on his ankle, and swayed my hips violently. His hands reached out to grab my breasts, squeezing them hard. I shrieked as an orgasm washed over my body.\n\n\"I'm cumming! Oh, God!\"\n\nI could feel him ejaculating his sperm on his stomach, I immediately knelt to drink all his translucent juices, licking his abs and chest greedily as I stroked his cock.\n\nI went back to his cock and sucked it slowly, my eyes drawn to his and he stared at me in bewilderment, hands on his hair.\n\n\"What?\" I asked as I released his cock with a plopping sound. \"I told you I want to drink you again.\"\n\nXavier let out an exasperated sigh, looking at me in disbelief then slumped into the sofa closing his eyes in pleasure, as I continued sucking him.\n\nAfter a while, he considered the 69 position, then lifted my ass towards his face, and we drank each other thirstily.\n\nA sudden knock on the door startled me and I released his cock from my mouth, straightening my back. Xavier was licking me continuously without a care in the world. I waited if I heard it correctly, then another knock came. I lifted my hips off his face, but his arm was wrapped around my thigh and butt tightly and he started to finger me.\n\n\"Xavier, let go... There's someone at the door,\" I whispered sharply as I tried to get away from him.\n\nHe fingered me roughly and I couldn't help myself but stayed still as I was close to my orgasm.\n\n\"Oh, God...\"\n\nKnock. Knock. Knock.\n\n\"Oh God, don't stop...\"\n\nKnock. Knock. Knock.\n\n\"Oh! Oh! Fuck...\"\n\nThen, the knock turned into a banging on the door.\n\n\"Coming!\" I screamed as an orgasm struck over my body.\n\nI squirted hard and shuddered as I leaned my palm on his stomach holding my upper body weight. My thigh shook and trembled as he slurped my juices greedily.\n\n\"Oh, my God.\"\n\nI came to my senses then jerked my hips away from his face and stood up on my trembling feet.\n\n\"You're unbelievable!\" I whispered sharply, glaring at his face.\n\n'...payback...'\n\nHe was chuckling and looking at me in amusement as I hastily tightened the robe around my body. I tried to fix my hair but to no avail, I probably looked flushed and messy as a result of good sex.\n\n\"Quick, go hide,\" I whispered, but Xavier rested his arms behind his head and lay naked on the sofa with a sated expression on his face.\n\nI rolled my eyes at him and opened the front door slightly to see the county sheriff in his uniform.\n\n\"Hello Ms Taylor, I'm Officer Thomas,\" the sheriff smiled charmingly and extended his arm which I shook briefly.\n\n\"Hi,\" I greeted nervously, then went out the door showing myself.\n\n\"I received a call from Mr. Gerard, your realtor, and also your colleague, they asked me to come to check up on you to see how you're doing,\" he said, his gaze travelled down my body, lingering on my protruding nipple on my thin robe.\n\nOh God, why did I choose to dress inappropriately during an officer's visit?\n\n\"Oh yeah, I was not feeling well but I'm fine now, Sir,\" I said.\n\n\"Do you mind if I take a look inside? Rumours were going around that there was a disturbance in your house a few weeks ago.\"\n\nJos\u00e9 came into mind, he probably ran his mouth like a scaredy-cat telling people how haunted this house was based on a moving chair.\n\n\"Yes sure, Sir.\"\n\nI let the door wide open to let him through. I didn't miss the way his gaze travelled to my cleavage for a split second as he passed by me. My eyes widened as I realised Xavier was leaning by the kitchen counter, arms crossed on his chest staring at the officer as he examined the living room.\n\nI waved my hand behind the sheriff to motion him to go for hiding but he didn't care at all. Is he not scared if people are going to see him?!\n\nAs the officer got closer to the kitchen, his gaze travelled past Xavier as if he didn't see him standing in front of him and I let out a huge sigh of relief.\n\n\"So is everything okay here?\" the sheriff asked, as he turned around to face me. Once again, he couldn't keep his gaze on my face, \"you know the rumours about this house-.\"\n\n\"Yeah I know, but everything's good here, Sir,\" I assured, crossing my arms, uncomfortable at his stare.\n\n\"Okay then,\" he said. He smiled then sighed, clearly unhappy with my short answer and disinterest. \"Here's my card, call me anytime if you need anything,\" he said, extending his card while staring at my eyes intensely then lowered his gaze to my cleavage.\n\nThe sheriff sounded suggestive of anything informal. It was a sexual hint if a man stared at a woman's body for her to see. Xavier walked closer towards me and was glaring at the sheriff, furious at the way he looked at me. I could see his hand grasping the coffee table next to the sheriff, and I assumed he'd push it if the sheriff got any closer towards my personal space.\n\n\"I will, thank you, Sir,\" I said briefly, then quickly turned around to walk him out the door before Xavier decided to do anything. I could feel his eyes watching my ass and exposed legs behind me.\n\nAs soon as the sheriff was out of my porch, he gave me a smirk and a quick once-over of my body before walking away towards his car, whistling silently while shaking his head.\n\nXavier wrapped his arm around my waist and guided me back inside protectively, closing the door behind me.\n\n\"Xavier, I think you need to stop moving things around to scare people away.\"\n\nI could hear his scoff ringing in my ears as he strode towards the kitchen and took a glass of water.\n\n\"I don't want people to talk negatively about this house,\" I sighed. \"This is our home now.\"\n\n'...bad people...'\n\nHis voice echoed in my ears sharply, while giving me a stern look and pointing his finger at the door.\n\n\"You don't know that.\"\n\n'...I feel it...\"\n\nHis translucence flickered strongly when he was mad.\n\nI approached him and softly stroked his chest.\n\n\"All right, shh, you need to calm down,\" I spoke softly, kissing his chin.\n\nHe took a deep breath and put the glass of water to my lips.\n\n\"Looks like you're the one who needs a drink,\" I laughed, taking a huge gulp, \"Thank you, you always know when I'm parched.\"\n\n'...always...'\n\nHe grinned, caressing my cheek softly.\n\n\u2022\u2022\u2022\n\nI studied his relaxed face as he peacefully slept; it was odd that he gestured he had never slept in this form before, but ever since he had shown his entire figure to me it was proven otherwise.\n\nIs he slowly becoming human? That is a ridiculous hopeful thought!\n\nI got out of the bed slowly, took a quick shower, and changed into my sundress. It was the weekend and it seemed like a decent day to get out. I've been cooped up in the house with Xavier, spending time with him. I'd run into his arms as soon as I got home from work and we'd have intense sex until our hearts' content. I'd bring Xavier out along with me if I could, I've grown attached to him already.\n\nI slowly crept to my mirror and applied light makeup to accentuate my fair complexion. Xavier was still sleeping in the bed looking like a ball of light, I figured he was worn out by last night's wild activities. He could finally restore his energy by sleeping, and that was something new about him that we've learnt. It was unbelievable knowing that I'd never behaved so carefree and wild with sex before. His semen gave me an energy boost and I'd drink it every day instead of my regular coffee fix if he'd let me.\n\nI leaned down to him slowly and kissed him on the lips, softly stroking his hair. I grinned as his eyes slowly fluttered open.\n\n\"Hi, handsome...\"\n\nXavier grinned and reached out to caress my cheeks with his fingertips.\n\n'...Ana...'\n\n\"I'm going out today, but I have no idea when I'll be back,\" I said softly.\n\nHe had a frown on his face, clearly upset.\n\n\"It's only for a while, Xavier... I promise,\" I said, wrapping my arms around his shoulder as he leaned on his elbows, \"besides, the fridge is empty, and you know how much I enjoy it when you cook for me.\"\n\nI kissed his lips as his disappointed sigh echoed in my ears and he eagerly returned the kiss.\n\n\"Don't miss me too much, handsome,\" I said as I rose to my feet.\n\nHe was about to get off the bed but I shoved his chest gently.\n\n\"Stay and rest some more,\" I advised.\n\nAs I stepped away from the bed, he slowly released his tight grip on my waist. His face looked adorable as he begged me to stay with his eyes and my heart felt warm and fuzzy looking at him. I just smiled and closed the door behind me.\n\n\u2022\u2022\u2022\n\n\"Ms Taylor, what a surprise!\"\n\nMy realtor, Wayne Gerard, rose from his seat and extended his hand to shake mine.\n\n\"I expected you to come banging at my door a week after you've moved in, I did call the sheriff after not hearing anything from you in over a month, is everything okay?\"\n\n\"Please don't do that again, I've been doing fine Mr Gerard,\" I said. \"I know it's a little late but I've come to learn about the history of the house, the people who have lived there before me, the year it was built or whether if anyone has died in there.\"\n\n\"You know, I've known the chain of owners of that house since 1980, and I've never seen one coming here looking calm and relaxed like you,\" Mr Gerard said as he studied my face.\n\n\"I haven't had any unpleasant experiences in my home as people have claimed, and everything seems to be fine,\" I assured.\n\n\"Well, I'm pleased to hear that, everything about the house was already in public records and you can access it here-.\"\n\n\"I'd like a hard copy of it,\" I said interrupting him, \"my laptop isn't working,\" I lied.\n\n\"Of course, Ms Taylor. I'll have my assistant print it out for you in a moment,\" he said, then walked out of the room with a post-it note about details of my house.\n\nAfter a minute, Mr Gerard barged in and took his seat.\n\n\"Is there anything that isn't on the public record?\"\n\n\"There's a reason certain details wasn't made public, and I'm not allowed to share it, Ms Taylor.\"\n\n\"Mr Gerard, I already bought the house and I fell in love with it. Nothing you say can change my mind and I plan to stay there as long as I live,\" I insisted.\n\nHe sighed as he stared at my face.\n\n\"Well, as I remember, most homeowners bought it for a different reason... They live there to produce and sell... drugs since the place was very remote. There was also a case of an abusive marriage, where the wife was found unconscious and her husband just fled... In another case, a man held two children for sex trafficking. We found all the pieces of evidence and stories from witnesses after they ran away due to some serious paranormal encounters.\"\n\nI was taken aback by the news, Xavier would never let anyone with bad intentions into his home. He wanted someone decent to relive it. No wonder he caused so much chaos to these people.\n\n\"I'm sorry Ms Taylor, I shouldn't-,\" he apologized nervously.\n\n\"No, it's okay, thank you for sharing,\" I smiled. \"So nobody had died in there?\"\n\n\"No Ma'am, only one person disappeared and they never found his body, this was the person who built the house in 1955 I believe.\"\n\n\"May I know his name-\"\n\nA sudden knock interrupted me and his assistant appeared by the door handing him a file of papers.\n\n\"Let me see...,\" Mr Gerard put on his reading glasses and flipped through the documents.\n\n\"Oh I'm sorry, I must be mistaken, it was built in March 1957 by the name Xavier Scott, and he disappeared in the same year.\"\n\n\"Any news on this?\" I asked quickly, my heart was beating fast at the new lead.\n\n\"I'm not sure Ms Taylor, they must have it in the local library.\"\n\n\"Alright, thank you, Mr Gerard,\" I stood up as he sorted the papers and handed the file to me.\n\n\"It was a pleasure Ms Taylor, I'm pleased to see you doing well,\" he grinned as he walked me out the door.\n\nI sighed as I studied the documents in my hand; the news of his disappearance broke my heart and I was filled with intense curiosity at what had happened to him. I couldn't bear the thought of him suffering in the past. He was gentle and kind, he deserved the best the world had to offer.\n\nI closed the file then tossed it into my passenger seat. I buckled up then drove to the local library.",
        "\"Hello, how can I help you?\" An elderly lady asked softly behind the reception desk.\n\n\"Hi! I uhh-is there any chance I can go through an old newspaper here?\"\n\n\"May I know which date it is?\"\n\n\"I'm not sure but it's a 1957 newspaper.\"\n\n\"Oh I'm sorry we won't be able to provide you with the actual newspaper if we don't have a date, but you can browse it online in the archive room, it's on the third floor on the left.\"\n\nI said my thanks to the receptionist, then proceeded to the third floor.\n\nThe room was extremely quiet and dim compared to other sections of the library. It was probably the least visited area. There were few computers near the wall and every corner was crammed with metal cabinets. Stacks of current magazines and newspapers were on the shelves in the centre of the room.\n\nI switched on the computer then clicked on the browser, and the listings website popped by default.\n\nI clicked on the year in the newspaper section. It didn't take long for me to locate the newspaper as I typed in his name, and it was found on a newspaper page in August 1957.\n\nAnd there he was standing next to a woman. My heart skipped a beat when I saw his photo. He had a serious look on his face, his hands were in his pockets. He was dressed casually in a loose button-up shirt tucked into his khaki pants. His chest was barely covered as he left some buttons undone. My eyes shifted to the woman next to him. She had a heart-shaped face and her hair was tied into a bun. She wore a loose dress down to her ankle. She too had a serious look on her face.\n\nThe newspaper stated some details about him. Xavier was 6'3\" ft tall and weighed 220 lbs. He had grey eyes, dark hair and a tanned complexion. The newspaper was not only about a missing person, but it was said to be a missing couple. It was rumoured the woman, Marjorie Abbot, was the person he had courted and he had killed her, then fled the country and never was to be found. My brows furrowed at the news.\n\nWas Xavier capable of doing that? He was too good and decent to do anything like this. My body got chills and I could feel goosebumps on my skin.\n\nI quickly rose to my feet and switched on the printer in the corner and printed the page. I searched the house by Maple creek and nothing popped up. I searched for the woman's name and another news about her was on a page from September 1957. Marjorie Abbot was found in France alive and was held for questioning. The news turned back around on her as she was rumoured to have killed him and hid his body, which she denied. I printed the pages then folded them and put them in my bag, then rushed out of the building.\n\nI laid my head on the steering wheel, thinking about Xavier. I needed to find a way for him to talk about Marjorie and what had occurred between them without draining his energy into nothingness.\n\n\u2022\u2022\u2022\n\nI entered the house and was greeted by a cold embrace. I knew he was waiting behind the door. I laughed as he clutched me so tightly that some of the grocery items fell out of the shopping bag.\n\nXavier cupped my head then smothered me with kisses all over my face. He must be missing my company because I've been gone all day long. The living room TV was on, and it appeared that he was watching a Netflix action movie. The flat-screen was his current obsession and I had to remind him to turn the volume down whenever I was out for work. I didn't want any uninvited visitors to question me if they heard noises inside the house when I was gone.\n\n\"Okay, slow down please,\" I said as I tried to get away from his grip, \"you miss me huh?\" I teased.\n\nXavier took a step back and glared at me.\n\n\"I'm sorry okay! I lost track of time Xavier. Will you please help me with the groceries? It's heavy.\"\n\nHis expression softened as he effortlessly took some of the shopping bags from my grip and unpacked them on the kitchen counter. I pulled out the document folder from one of the bags in my hand and slipped it on the bookshelf in the corner of the room.\n\n\"Thank you,\" I said softly.\n\nI kissed his cheek, then hurriedly organized the items in their proper places. He didn't smile at me once and his face remained sulky.\n\n\"Xavier, I'm sorry... Will you forgive me?\"\n\nI took his arm and spun him around to face me. He was extremely upset that I had left him alone the entire day. Being alone for so long and unable to clearly express his feelings must be tough and frustrating for him. And now that he was attached to me, he finds it harder to let go every single day. He nodded his head and raised his eyes from the floor, smiling and pulling me in for a hug.\n\n\"I'd like to take a quick shower, then we can cook dinner and watch a movie together. Does that sound good?\"\n\nI kissed him on the lips and walked away from him as he nodded and continued organizing the cleaning supplies.\n\n\u2022\u2022\u2022\n\n'...boo...'\n\n\"Oh come on, you're not even throwing it properly!\" I laughed.\n\nXavier chuckled and threw another popcorn at me, which I managed to catch with my mouth.\n\nI smiled as he threw another popcorn at me, but it fell through my shirt and landed on the sofa.\n\nI stared at him as he tried to find the most coated one from the bowl, and my heart broke at the sight. I was unaware that my tears began to pool in my eyes.\n\nXavier realized I was crying, he dropped the bowl and hurried over to me, cupping my tear-stained cheeks. His gaze was pleading with me to tell him what was wrong.\n\nI shook my head, smiling through my tears and hugged him tightly. God, I think I'm falling for him. If I could do anything to make him feel better, I would. And the thought of him watching me eat this whole time made me think he'd miss the taste of it.\n\nXavier pulled away from the hug and stared at me questioningly.\n\n\"I'm just being silly...,\" I laughed as I wiped my tears away. \"Do you miss eating food?\"\n\nXavier chuckled then shook his head no, flicking my nose.\n\n'...only miss you...'\n\nHe kissed my lips and wiped the remaining tears on my cheeks.\n\n'...only taste you...'\n\nHe kissed me again, stroking my hair gently out of my face, staring at me intensely.\n\n'...only want you...'\n\nHe kissed me so passionately and I sobbed as I looked at his translucence fading away so quickly.\n\n\"Shh Xavier...,\" I cried, covering my face with my hands. \"You won't be wanting me anymore if I grow old here,\" I choked, tears streaming down my cheeks. I sobbed as I finally let out my biggest concern about our situation.\n\n\"I don't know why this is happening, why we found each other, why you didn't push me away like the others, why you're so different from anything I've heard about spirits, why you're trapped in this house, and why I'm probably the only person who can see you... What's the meaning of all this Xavier? I don't know... but if I could help you get through every day for the rest of my life... I would, regardless of what you are.\"\n\nXavier had a broken expression on his face as he caressed my face.\n\n\"No, shh stop...\"\n\nI stopped him as he was about to speak. I knew the moment he'd talk he would fade completely and I was scared if I couldn't see him anymore. We were still learning new things about him. And I wouldn't take that chance, not for a second.\n\n\"I'm glad I chose this house, and I'm so lucky I got to meet you, Xavier, cause you're the kindest and sweetest person I know.\"\n\nXavier started to tear up as he caressed my cheeks softly. He pulled me to his chest, rocking my body slowly while stroking my hair. After a moment of cuddling together, I fell asleep in his embrace.\n\n\u2022\u2022\u2022\n\nI woke up this morning sensing the bed was empty next to me. My head felt drowsy and I realised I had woken an hour earlier than usual. I was still wearing my long-sleeve shirt and panty, Xavier must have pulled off my pants last night.\n\nI strode dizzily towards my bathroom to wash my face and brush my teeth. It was a lazy Monday and I had to go to work, which was Xavier's biggest problem every day. He was clingy like that.\n\nI walked out of the room towards the kitchen to find him leaning by the countertop reading a cookbook. He was always eager to learn the new food menus of today's generation. He had probably read all the books on the bookshelves by now and I knew his favourite book was the Kama Sutra: The Book of Sex Positions, which I unashamedly owned that was sitting proudly on my shelf. He was eager to try them every time I got off from work and he made me scream with pleasure at his new skills. He was certifiably my sex God.\n\nI taught him how to use my laptop to browse online and use the keyboard. To this day, he still finds it complicated and struggles to get it right. I guess he preferred to read books than using complex technology, and I would need to buy more to keep him occupied when I was gone.\n\n\"Hi, handsome,\" I greeted as I leaned against the wall, smiling at him.\n\nXavier looked up at me and his eyes lit up. He walked swiftly and pulled me into his chest. I loved how comforting his hug was in the morning. He kissed me gently on the lips and I returned it eagerly.\n\n'I'm thirsty,\" I said, staring at his face expectantly.\n\nXavier turned around to reach out a glass but I laughed.\n\n\"No, Xavier... I'm thirsty for you,\" I said, staring at his rode hungrily.\n\nXavier parted his lips in surprise as I stripped naked and knelt by his limp cock. It hardened instantly as I wrapped my fingers around it. He closed his eyes and leaned his back against the countertop as I twirled my tongue around his head and sucked him slowly. His fingers were wrapped around my hair as I bobbed my head up and down his cock.\n\nHis grasp on my head became stronger after a while and I increased my pace. I sucked him sloppily and aggresively, while stroking his shaft. I could feel my saliva dripping down to my cleavage. I moaned sensually staring at his face as I blew him mad. I knew he was about to come as he started to breathe fast. Then, he ejaculated violently inside my mouth and I swallowed him whole greedily.\n\n\"Mhmm...,\" I moaned, loving the juice down my throat.\n\nI continued sucking him as he looked down at me with a sated expression across his face.\n\nXavier wrapped his hands around my arms and pulled me up. He kissed me passionately as his hands roamed around my body wildly. He squeezed my breasts hard and I moaned at the sensation. He trailed his kisses down to my throat then licked and sucked my nipples.\n\n\"Mhmm... So good...,\" I moaned, arching my back so my breasts were firmly lifted for him to play.\n\nXavier reached out his fingers to rub my pussy as he deliciously sucked on my nipples.\n\n\"Oh, yes...\"\n\nHe slipped in his finger and continued to stroke it inside me slowly. Another finger slipped into me and he increased his pace and began to finger me frantically. He jerked my body sideways in front of him as he sucked my nipple and squeezed my other breast while ferociously fingering my pussy hard and fast. His cold palm hit my clit hard and I loved the sound of it.\n\n\"Yes! Yes! Don't stop!\"\n\nI clamped my thighs together as an orgasm hit me hard and I screamed in pleasure at his rough assault. My body trembled as he continued his actions. Xavier didn't give me time to recover as he turned my body around to face the counter and stood behind me, slipping his cock inside my pussy with one swift push.\n\n\"Oh, my God, yes!\" I screamed as his massive dick stretched my wet pussy. I arched my back and grabbed the counter as he started to move inside me.\n\nHe grabbed my shoulder then continued to stroke inside me slow and deep. His pace started to increase as I jerked my hips towards his cock, then he wrapped his arm underneath my armpit and pulled my body towards his as he fucked me with urgency.\n\nHe slammed his cock inside pussy fast and deep and I could feel his cold balls hitting my clit hard. Our skin slapping echoed in the kitchen and Xavier squeezed my breasts hard as he kissed me on the lips, my grunts and moans were muffled by his mouth.\n\nThe heated sensation started to build up inside my belly and I screamed in pleasure as my pussy clenched hard at the waves of orgasm washing over my body. His rough fucking continued until he ejaculated madly inside my pussy and the sensation felt amazing. I leaned forward on the counter to hold my trembling body and Xavier leaned in to kiss my back gently while holding my hips as he slowly fuck me.\n\nMy breathing was still heavy and Xavier pulled out his slick cock from my pussy. He grasped my body and turned me around to face him and he gave me gentle kisses on the lips. He pulled my body towards him as he sat on the chair, letting me sit on his lap and we lay still caressing each other until our breathing recovered from the intense orgasms.\n\n\"I have something to show you...,\" I whispered. Xavier looked down at my face questioningly as my head lay on his broad shoulder.\n\nI rose to my feet and walked away from him towards the living room and grabbed the hidden folder on the bookshelf. His eyes gazed intensely at the movement of my naked body and I smiled in amusement at how adorable he looked. I placed the folder on the round table and he stared at it in confusion. I slipped on my panty and shirt as he began to flip through the documents.\n\nI didnt know what his reaction was going to be, so I let him be and started to prepare my breakfast despite his protests and eagerness to cook something for me from the cookbook every morning. I watched his serious face scanning through the pages and his eyes widened at something he skimmed.\n\nI approached him slowly as his breathing changed and I could tell his expression was furious. His translucent figure flickered strongly and I've never seen him almost opaque.\n\n\"Xavier? Are you okay?\"\n\nI touched his shoulder gently, but he stood abruptly, rubbing his hair in frustration. He must have remembered something from his past as he dropped the copy of the newspaper.\n\nXavier was walking back and forth fuming and I could see his eyes starting to turn black.\n\nI gasped as he screamed in agony and it echoed loudly in my ears. I panicked at the sudden vibration of the objects and windows around the house. Xavier was gripping his hair tightly, kneeling on the floor as he continued to scream, his black eyes were staring at me with malice. He looked like a possessed man, but his scream told me otherwise, as if he was trying to resist whatever was controlling him.\n\n\"Xavier!\" I reached out his hand but he pushed me away, and I fell hard, hitting my back against the countertop.\n\n\"Stop! Please! You're scaring me!\" I cried.\n\n\"Xavier stop!\"\n\n\"You're scaring me!\" My hands were shaking and my heart was beating fast.\n\nI tried to hug his body but he thrashed his arms around him, hitting my cheek hard, it stung. Xavier lunged at me and wrapped his palm around my neck, trying to choke me. His eyes were fully black and his body was solid white. It was a terrifying sight as I tried to get away from his grasp.\n\nI struggled to breathe as he was strangling me. I kicked and pushed him but to no avail, he was stronger than me. I thought I was going to die as flashbacks of us spending time together ran through my mind. Those were the sweetest memories I will forever cherish. Tears streamed down my cheeks as I begged him with my eyes. For a split second, his eyes blinked in realisation, then released his grasp around my neck and continued to scream in agony as he backed away in pain.\n\n\"Oh, my God!\" I cried in panic, gasping for air. His scream got worse and the ceiling rattled as the vibration in the house got stronger.\n\nI screamed and covered my ears in shock as one of the windows shattered, then I sprinted towards my room to grab my clothes and purse in a panic. I fled from the house, whimpering as another window shattered and I drove away as fast as I could, sobbing in tears.\n\n\u2022\u2022\u2022\n\nI stopped my car in front of my workplace and I quickly pulled up my pants. I wrapped a thick sweater around me to cover my protruding nipples through my thin shirt.\n\nI sat back and tried to breathe normally. Truthfully, I was traumatized. The image of him with his black eyes screaming in agony and frustration was haunting my mind throughout the forty-minute drive. I was terrified, and the thought of him hurting me was out of character. That was not Xavier, that was something else possessing him.\n\nI looked at my reflection in the front view mirror. My eyes looked puffy, my cheek and neck were swollen pretty badly against my pale skin. I don't know how to explain to a workspace full of nosy colleagues about my red skin. I rummaged through my purse to find my lipstick and smeared it lightly across my lips and cheek so it wouldn't appear obvious. Hopefully, it won't turn into a bruise too quickly. I sighed dreadfully, then faced the day as if nothing had happened.\n\nThe day went on uneventfully, apart from getting remarks from my colleagues about how shitty I looked today and the guys would comment otherwise to make me feel good. I would smile at them but acted distant and withdrawn whenever I was alone. I packed up my stuff then headed down to exit the empty building.\n\nI deliberately finished my work later than normal so I could avoid going home. I entered my car and started my engine. My mind was racing dreadfully, I didn't know if I could face him yet. I wasn't ready. My mind was still filled with doubt and fear, and I was pretty certain the house would look like a mess right now.\n\nI cruised around the town having nowhere in mind, rain pouring down the car heavily. I hadn't eaten the whole day and my stomach was rumbling painfully despite my loss of appetite. I looked at my watch and it was already 10 PM and I was still frightened to go home.\n\nMy car stopped in front of the local hotel where I first stayed when I moved in here. I made up my mind to stay there overnight instead. I carried the littlest belongings I had and booked a single bedroom to settle for the night.\n\n\u2022\u2022\u2022\n\nIt has been 3 days since I stayed in the hotel, and I looked terrible. I hadn't eaten much and my skin complexion was pale as a ghost. My days were filled with doubt and uncertainty, and I have been feeling miserable ever since the incident. I missed him so much. I don't know how he was doing right now, but I was too scared to go home and see him.\n\nMy colleagues have been avoiding me due to how depressing I looked in the office. I stayed up late in the office, then went back to the hotel late at night, and I had to wear spare clothes that I got in my trunk.\n\nI slumped into the messy bed as soon as I entered the room. Work has been draining my energy more than it did before and I can't remember if I were ever this exhausted.\n\nMy phone buzzed with notification, then I drowsily pulled it out of my purse to check it.\n\n'1 Unread Email'\n\nI tapped on the notification and gasped as I read the sender.\n\n'Xavier Scott'\n\nMy body straightened on the bed as I stared at the name in shock. He sent me an email. Xavier sent me an email. I left my laptop in haste at the house and he must have probably figured out how to use it on his own. I was too stiff to even move, my heart was racing fast.\n\nI tapped on his name and his message popped up.\n\nDearest Ana, \n\n \n\nI hope this email finds you well. I apologize for my behaviour 4 days ago. It was out of character and truly unacceptable. I do not know what had happened, but all I remember is I felt excruciating pain all over my body after I saw the newspaper remembering the woman and when it stopped, you were gone. I apologize if I made you feel terrified or if I hurt you. It was never my intention. I have been waiting for you the whole night but you did not return.\n\n \n\nI have been desperately learning and trying to reach you through this device for the last three days and, hopefully, this will be a success. Please come back home to me, Ana. I need you here and I shall wait for your return every day. My heart aches and longs for your presence, Ana.",
        " \n\nWith love,\n\nXavier\n\nI read his email again and again and I burst into tears. I could imagine his voice saying all this and this was the longest phrase he ever communicated to me.\n\nGod, I miss him so much. \n\nMy phone buzzed again and there was another unread email from him. I sighed and took a shaky breath as I tapped on the screen.\n\nDearest Ana, \n\n \n\nI see the email was delivered just now. Please forgive me. Ever since you left, I have tried to remember what happened, I know I hurt you but I never meant to harm you, Ana. Something else came over me. You know you are the greatest gift to me since you came into my life and I will cherish you as long as I'm here. Please come home. I need to be with you, Ana...\n\n \n\nWith Love, \n\nXavier\n\nI sobbed, heartbroken by this distance between us. My body craved his touch badly and my mind needed the comfort and peace that his soul provided. I wiped my tears quickly and rose to my feet. I couldn't stand it any longer, and I immediately packed my belongings and rushed to check out of the hotel.\n\nMy car screeched to a halt in front of the house and I could see warm lights through the front window. I grabbed my stuff and rushed out of the car. The front door flung open, and I immediately was engulfed in his cold embrace.\n\n\"Oh, my God, Xavier,\" I cried, sobbing in his chest. We hugged each other tightly and I could feel his strong arms lifting my body off the floor.\n\n'...forgive me...'\n\nI could hear his sobs echoing in my ears and my heart broke at his pain. I shouldn't have left him alone. It was selfish of me. I abandoned him when he truly needed me the most.\n\n\"I'm sorry I left you. Please forgive me, Xavier, I was so scared.\"\n\nI could feel his body trembling while he was holding me. Xavier let go of me and looked at my face properly, brushing the strands of hair out of my face.\n\n'...you okay?...'\n\nHis fingers caressed my cheek and neck gently. I nodded and leaned into his palm. Xavier wrapped his arm around my waist and guided me inside the house and locked the door behind us before pulling me in for a passionate kiss. His kisses trailed all across my face like I was his delicate treasure.\n\nI looked at the living room and it appeared to be neat and nothing was out of place. I took a step back from Xavier to inspect the kitchen, and there were no shattered glasses on the counter or the floor. He had covered the broken windows with a large white sheet. I may have to get the windows fixed again soon.\n\nI turned around to look at Xavier and his expression was contorted with immense guilt. I caressed his cheeks, letting him know it was okay.\n\n\"It's really fine Xavier, please don't worry about it.\"\n\nI kissed him gently on the lips and he pulled me again to his chest.\n\n\"Let's get some sleep, I'm exhausted...,\" I whispered.\n\nXavier nodded his head, then helped me get undressed, and we lay naked in bed holding and caressing each other until we dozed off to sleep.\n\n\u2022\u2022\u2022\n\nI awoke with the impression that I'd slept well enough, and I was greeted with concerned eyes and caresses on my cheek. Xavier was lying next to me watching me sleep and I grinned. I've never felt happier after being apart from each other for so long.\n\n\"Hi, stalker...\"\n\nXavier smiled then leaned in to kiss my lips. His translucence was not as strong as it was before, he looked almost transparent and I stared at him with concern.\n\n\"Did you not sleep well?\"\n\nXavier shrugged, giving me a half-smile before squeezing my breasts gently.\n\n\"I miss you, Xavier. What happened to you?\"\n\nXavier sighed, then reached out to the bedside table next to me and grabbed my phone. He typed in something in there for a while and showed me the text.\n\n'I will explain it later, I remember the woman in the newspaper and what she had done to me.'\n\n\"Okay Xavier,\" I said in uncertainty. I had a doubt, worried if the last incident would be repeated.\n\nI sighed sitting in bed slowly then stretched my body, yawning. Xavier had his arm behind his head, watching my body hungrily and I smirked at him as I pulled the blanket and dropped it to the floor, exposing our naked bodies.\n\n\"Wanna have a quickie?\" I asked seductively, kneeling towards him sensually with my hanging breasts.\n\nXavier chuckled and lunged towards me to ravage my body and I squealed in delight as his cold kisses trailed down to my pussy. God, I miss his tongue.\n\nOur morning consisted of intense oral and passionate sex which lasted for two hours, and he made me scream with multiple orgasms throughout the session. He was gentle and sweet but could be rough and demanding. My body was controlled by him in every position he wanted and it turned me on at how aggressive he could be. Either way, he never failed to make me scream in pleasure. He was beyond perfect to be true.\n\nI scrubbed my body and washed my hair thoroughly to get rid of the hours of sweaty sex. My body felt satisfied, my pussy was sore and my thigh was still trembling, but overall, I was pleased with how I felt physically and emotionally.\n\nI probably spent 45 minutes in the shower. I called in sick today and they agreed to dismiss me due to how depressed I looked these last few days.\n\nI exited the bathroom with my towels and spent 10 minutes drying my hair before walking out of the bedroom in my thin satin robe.\n\nXavier was busy preparing some breakfast at the counter and my heart melted at the sight. This selfless man would always cook me something, making sure I'm always full despite him being unable to consume the food himself.\n\nI walked behind him and kissed his neck, but he wrapped his arms around me and pushed me towards the dining table.\n\n\"I want to help, Xavier!\" I grumbled.\n\nXavier pushed my shoulders down to sit on the chair and he massaged them and my neck briefly, which made me moan in pleasure. He then walked away and took a piece of paper, then placed it in front of me.\n\n\"What's this?\" I asked in confusion. He pointed at the paper with his eyes gesturing to me to read and he proceeded to continue preparing breakfast.\n\nMy eyes scanned the paper and it was a handwritten note from him. His handwriting has improved as of late and I smiled at some mistaken words he had crossed throughout the paragraphs. I sighed, then began to read the letter.\n\nDearest Ana, \n\n \n\nI'm glad you've come to your decision to come home and you make me the happiest man alive, or dead, literally. I didn't sleep much last night for fear of you walking away from me again, and I couldn't bear the thought of losing you. You are my light, Ana, no matter what, I will always choose you to be with me the moment you first walk into this house. \n\n \n\nAs I mentioned before, I wanted to explain my view regarding the woman in the newspaper. So I'm taking the time to write when you're still in the shower right now. \n\n \n\nHer name was Marjorie Abbot. She was the woman I courted for a few months back then. We were not exactly a compatible couple as she had a different lifestyle than me. But I was a naive man who had never courted a woman before and gave her whatever she wanted may it be jewellery, money, clothes and so much more. In my time, people would look up at me and describe me as a rich man, I owned land, acres of farm and a couple of businesses here and there. I was a famous bachelor, women lined up and desperate to be courted by me but I was too occupied with expanding my business.\n\n \n\nUntil I met Marjorie, I was naive and stupid when it came to love and women. I was fooled and handed everything to her per her request to invest and she sold everything I owned for money. I have left with nothing except the house that I built and we're standing in it right now. I dreamt of getting married and having children of my own, living here, but it was never going to happen.\n\n \n\nThe woman was cynical and vindictive. She was the truest form of evil and I finally realised that the moment I found out she had been practising dangerous black magic. She would cast a spell on any rich man to be in her favour all the time. I was surprised that I had been her longest lover to obey what she wanted, and as a result, she was furious that I wanted to leave her and I demanded my possessions back. I humiliated her in front of the townspeople. I remember her last words that she swore, I will never get another woman and see the light of day again.\n\n \n\nOne night, she broke into my home for revenge and punished me by chanting a powerful mantra next to my bed while I was asleep. I awoke in shock, and for a split second, I felt my body lifted off the bed, while she stood there emotionless, her eyes black and her skin white. I had a feeling something else was possessing her to assist her in carrying out her revenge, the same entity who had possessed me a few days ago trying to stop me from remembering what had happened.\n\n \n\nSoon after, my world turned black and I woke up in this house without a body. I was invisible for a long time. I spent my years roaming around the house with no purpose. I was trapped here. I didn't understand nor remember what had happened to me, whether if I was still alive or dead. My only entertainment was scaring people away as they thrashed my home and doing bad things to other people.\n\n \n\nBut the moment you stepped on my front porch, I was blown away, Ana... You are the most beautiful person I have ever met and I fell in love with you at first sight. I let you stay and clean my house. I studied your every move. All I see is light from you. Your intention was pure and innocent.\n\n \n\nAnd the first time I touched you, I was in shock because my hand didn't pass through you. I felt your warmth, and for the first time in a while, I felt alive and human again. I craved, I longed and I ached to be with you. I learned new things about myself when I'm around you. I get to make love to you, sleep with you, talk to you, cry with you and laugh with you. It was the best feeling in the world and never have I ever felt this good in my human form. You are my greatest gift and I will forever cherish you, Ana... I love you with all my heart.\n\n \n\nWith my deepest love, \n\nXavier \n\nI wept silently as I read the end of the letter and my eyes lifted to look at his face. He was staring at me with a nervous expression across his face. I squealed in delight, rose to my feet and lunged into his arms. He hugged me and twirled me around as I sobbed with happy tears. I could hear his chuckle echoing in my ears.\n\n\"I love you! I love you so much, Xavier!\" I exclaimed, kissing his grinning face eagerly.\n\nXavier put me down to look at my face and he had tears in his eyes too. He stared at me questioningly whether it was real or not.\n\n\"Yes!\" I nodded my head and laughed happily. I kissed him passionately, caressing his cheeks. \"I love you, Xavier.\"\n\n'... I love you too, Ana...'\n\nWe kissed each other intensely and after a while, my lips felt warm and my palm roaming around his skin felt warm. I fluttered open my eyes while kissing him and gasped in shock.\n\nI jumped a foot away from him, covering my mouth as he stared at me questioningly.\n\n'...what?...'\n\n\"Xavier! Look at you!\" I shrieked.\n\nXavier looked down at himself and gasped as his translucent body turned into a tanned complexion.\n\n\"Oh, my God!\"\n\nHe touched his chest and arms, looking at himself in disbelief. His entire naked body was now in his human form and Xavier looked at me in shock.\n\nHe was a handsome young man. My eyes teared up at the sight. He was too beautiful for this world.\n\nI could see his dark hair, thick eyebrows, grey eyes, pink lips and beautiful tanned skin. His veins filled his muscular arms, and his chiseled packs were sexy as hell. His tanned penis was hanging beautifully with its pink head, and I drooled looking at it. He was every woman's dream.\n\n\"You look perfect, Xavier...,\" I whispered, looking at him lovingly, with tears in my eyes.\n\n\"Thank you,\" he said in his deep gentle voice and we gasped in unison. \"I can-I can talk now,\" he laughed heartily, rubbing his forehead in disbelief, \"all we need was to profess our love to break the spell, and you save me... so thank you, Ana...,\" he said, staring at my eyes intensely.\n\n\"Well, we could have done it sooner before you broke our windows,\" I joked, waving at the white sheets covering the windows.\n\n\"I apologize! I'll replace it myself, Ana...,\" he smiled sheepishly, holding my hand and kissing the back of my palm gently, \"I assure you I'm pretty good with my hands.\"\n\n\"Oh, yes, I don't doubt that at all.\"\n\nWe laughed in happiness as we hugged and proceeded to talk eagerly about each other like we were meeting for the first time. He hid himself behind a blanket as sudden embarassment came over him when I couldn't stop staring at every feature of his body. After a while, Xavier decided to rush outside, and I was delighted to see him feel the sun on his face, which made me weep with joy.\n\n\u2022\u2022\u2022\n\nAs we lay down on the soft grass, our surroundings were peaceful, with birds chirping and the soothing sounds of the river in the distance.\n\nWe were fully naked in the open, unconcerned about anyone catching a glimpse of our lovemaking. It has become our regular morning before we go to work. We took a jog in the wilderness which ended up in intense lovemaking by the creek.\n\nThe best part of this was I could finally see Xavier relinquishing my body wholly and hearing him moan my name with soothing whispers of love, which made it further satisfying.\n\n\"Mhmm,\" he moaned, \"come for me, my love,\" he whispered, staring at my face lustfully.\n\nHe was spooning me tightly as he stroked his cock inside me with urgency. His hands were occupied with fondling my breasts and rubbing my wet clit. He knew all these sensations would make me come for him.\n\n\"Xavier! Right there! Yes!\" I screamed in delight, rolling my eyes at the sensation as he grunted and fucked me hard. An intense orgasm washed over my body forcefully and Xavier wouldn't stop fucking me until he ejaculated inside, spilling his warmth inside my belly.\n\n\"I love you, baby...,\" he whispered after kissing me with so much passion.\n\n\"I love you too, Xavier,\" I whispered, breathing heavily.\n\nXavier sat up and leaned down to rub my big belly, planting gentle kisses all around. He was ecstatic to find me pregnant carrying his child and he would spoil me non-stop with delicious food, body massages, hot baths and constant lovemaking every day. It has been almost two years since we professed our love and living like a normal happy couple.\n\nXavier needed time to get used to his surroundings aside from our home. He got to see new buildings in town, fast cars, different technologies and new kinds of things in the supermarket. He was blown away by his discovery and I would laugh in tears at his innocence.\n\nIt took me 3 months to finally track a person who could fake an ID for Xavier along with his other important documents with the help of my long-distant friends in California. I guessed telling the truth about Marjorie or Xavier coming back to life was not exactly possible. Or else we would be labelled the freaks of the town. Nobody was going to believe us. We found out Marjorie had died in her home 15 years ago due to paranormal disturbances and possessions. I guessed playing with black magic had its consequences.\n\nXavier got a job soon after in the woodworking shop which offered a minimum requirement as long as he was creative, strong and skilful and I've never seen him so happy coming home with bruises and cuts on his hands, showing them to me proudly. His happiness came from all the little things and he would appreciate everything around him after being invisible for so long.\n\n\"Let's do the doggy style by the tree,\" he whispered, suggestively, interrupting my thoughts as we lay sated on the grass.\n\nI laughed at his notion and caressed his innocent face. Life couldn't get any better.\n\n \n"
    ],
    "authorname": "LushLuscious",
    "tags": [
        "erotic horror",
        "supernatural",
        "nonhuman",
        "oral"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/house-by-the-creek"
}