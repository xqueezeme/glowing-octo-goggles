{
    "title": "The Sultanah Ch. 03",
    "pages": [
        "Dear Reader, thank you so much for reading this story. It has taken nearly a year of my writing life to get the whole thing finished. This is Chapter 3 of 14 chapters and the total is over 250,000 words. It is my Dirk Diggler/Jack Horner act of hubris: my attempt to write an erotic adventure story that pulls you in with a story you want to read, even when there isn't any sex going on (though there is a lot of sex. Crazy, weird, fun sex). It is the most ambitious piece of erotic fiction I have ever attempted. So I hope you enjoy it.\n\nWith that said, this book is not for everyone. It will be too long for many people (no shame in that, it is a big time investment). Some of the sex scenes are intense and include themes like hermaphroditism, non-consensual activity, incest, etc. For some people, that will likely be the appeal. In fact, while this story is definitely not for everyone, I think for a select group of people this story will essentially have everything you could ever ask for. So if that is you, congratulations, you found that thing you have been searching for. You can skip ahead to the sex and I won't be offended, but I think this story is more than the sum of its parts. If you read this whole story, you will not be disappointed. \n\nIn Chapter 1, our main character, Princess Varis, finds that her father has died and that, by virtue of the fact that she is a hermaphrodite and can father a child, she is now the Sultanah. In Chapter 2, Varis unearthed a conspiracy to destroy her Empire led by Rahip, the Cardinal of the \"New Religion\" and later she received her coronation.\n\nSome recurring characters you might want by name are Varis (the Sultanah and narrator), Cin (the head priestess of Gunes), Arkadas (Varis' friend and servant), Kardes (Varis' older sister), Nislani (Varis' younger sister), Rahip (a Cardinal of the 'new religion'), Duke Hain (an important lord opposing Varis), Lord Sadik (a minor lord who has spoken in support of Varis); King Sican (the leader of Dusman, a rival kingdom), Prince Lider (Sican's son); King K\u00f6yl\u00fc (the leader of Temsilci, a rival kingdom); Agiz and Got (Subordinate Sun Priestesses); Saygili (Varis' guard). Further, Gunes is the name of the Sun God, Tanri is the name of the 'new god.' The city where the story is set is \u015eehir in the country of \u00dclke and the Empire of B\u00fct\u00fcn D\u00fcnya. If you need more...reread the earlier chapters.\n\nPlease, please, please, please, please tell me what you think after you read this. I put an embarrassing amount of work into this and I want to know what you think. Especially if it is good things.\n\n*****\n\nPart II: The Siege\n\nChapter 3: Sucking Out the Venom\n\n\"Sultanah Varis, the Steward estimates that, given your rationing decree, there is sufficient corn in the market to last another week and a half...\" Dan\u0131\u015fman, my Secretary, stated nervously. He shifted from foot to foot and refused to look me in the eye. I stared at him intently, as if there was no one else in the throne room.\n\n\"How much corn is saved in the palace reserve,\" I interrupted him. I looked down from my throne as I spoke. Dan\u0131\u015fman was a portly man with a long, flowing mustache. I trusted him very little and I knew he had grown fat on my father's inattention. He could sense my displeasure. I enjoyed that everyone got to see me make him squirm. He looked around the room anxiously. The peers stared from their seats without movement. \n\nAlmost all of the Peers of the realm were present, in their traditional seats. More seats had actually been added to accommodate the lower nobility, who were only now being included. It was our daily planning session. I had called them since the day after my coronation. I lacked the actual authority to do anything on my own at that point, I was very weak. I wanted the Peers to feel flattered and to feel that they were an important part of the decision making process, such as it was. Truth to Gunes, I was actually hoping that one of them might come up with some useful idea. That eventuality never actually occurred.\n\n\"If is rationed wisely, it may last two months...\"\n\n\"That is impossible, there must be half a million people in the city right now, the reserve is...\" I started.\n\n\"I apologize for the confusion my lady,\" the Secretary sputtered. I should've cut his tongue out for interrupting me, to give the Peers a sense of my justice, but I wanted to hear what he said, so I took no offense, \"I estimated only for the members of the royal household, the Peers, and the soldiers.\"\n\n\"Everyone must eat,\" I said. It might have been a mundane opinion, but it was becoming more and more poignant as the siege stretched on, \"What good will it do us to eat in a month if all my subjects are starved to death?\" I asked.\n\n\"I apologize again your grace,\" the Secretary sputtered, I heard a Peer laugh at his discomfort, \"I will have to recalculate to account for everyone. The food in the reserve will likely only last a day or two at that rate...we were not prepared for this siege.\"\n\nThe Secretary was right about that. It had been almost a month since my father's death, a few weeks since my coronation, and it appeared I would have the shortest reign of any member of my house since A\u00e7l\u0131ktan \u00f6len V. Our enemies, King Sican of Dusman, his son Lider, and their allies from Temsilci and Surgun were still camped outside my walls. They had further squeezed trade and choked the rivers that even fish became impossible to procure. The city was starving. I had been forced to shut down the market and seize all the food to avoid profiteering. It was an action that had made me extremely unpopular with the merchants, but it had ensured small meals for every person trying to live in \u015eehir. Even so, we were rapidly running out of time. Something needed to be done to break the siege, to return the city to life.\n\n\"How many soldiers are fit for duty today?\" I asked, turning to my right and finding my newest general, Sir Albay. Of late, Surgun's archers had been targeting my officers on the walls. I was rapidly running out of anyone with leadership experience. My most recent general had been killed the day before while taking a piss. I had already forgotten his name. He, like his predecessors, was little more than glorified security guards. Sir Albay had been in charge of keeping the powder room dry before the siege, now he was my Marshal. He had rheumy eyes, smelled of rot and the arm pits of his tunic were constantly damp. A far cry from the General Mare\u015fal in the glory days of the empire.\n\n\"2,206 Infantry, negligible cavalry, 291 on the gun and trebuchet, and 1,528 archers of some ability. There are about as many again militia at the wall, but they serve primarily to deceive the enemy and inflate the numbers, they would not be useful in a fight,\" Albay responded.\n\n\"That implies the regular soldiers would be,\" I heard a Peer whisper loudly so that all could hear him. His comment met with some laughs I felt my lips pull back from my teeth but otherwise pretended that I didn't notice.\n\n\"The legions have dropped to 8,000 soldiers, only 4,000 of which can fight\" I whispered to myself. I knew the value of our actual soldiers, brave and willing to fight. But nonetheless, I shook my head. \n\n\"What are the Orders of the day my Sultanah,\" Albay asked after a long moment. Any thought that I may have had about taking decisive action with respect to the army at our gates had dried up upon hearing the numbers. Not that I would have hesitated to take action if it had been remotely possible.\n\nAfter my coronation and the ceremony with my divine wives, I had found that I sat more comfortably on my throne. I cannot explain it, other than to say that a light had shown into my soul, finding deep reserves that I had not known existed. That is not to say that I had any more idea of what I was doing, I was simply better able to project a calmness and interest I had been unable to fain before. I understood the depths of my own ignorance now, and I suppose that was something. At least I could follow the conversations and preside over my own meetings. I sensed the Peers grudgingly respected that fact. The end result was that while I still had no idea of how I would drive the 75,000 soldiers from before my walls, I was not constantly gripped with panic and confusion. I suppose that was something.\n\n\"Same as yesterday, 8 hour shifts for each man, trained soldiers at weak points, tell everyone to keep their eyes open, prepare to swarm to trouble areas if necessary,\" I said to Albay. He nodded sagely as though we'd ever had another plan. This was the order the Peers had suggested at our first session and it was invariably followed now. There was no solution to our problem that could be found by the in the army. The best we could do was trick our enemies into thinking we could repulse an assault.\n\n\"Perhaps, your grace,\" Lord \u00d6rnek stated, \"We should reconsider Prince Lider's offer of parley. It is possible that they do not realize how dire our straits have become. Perhaps we can sue for peace on advantageous terms now, they must be tired of their siege as well. I hear there is some sickness in their ranks.\" \u00d6rnek was a member of the Collaborationist party. I had been hearing some version of this advice paired with my military orders since my coronation, that it was time to surrender while we still had some leverage. I did not believe it then, I did not believe it now. Still, the Collaborationists were the strongest party at court. And every day, as the food dwindled, their case became stronger. Soon there would be no choice but to sue for peace or starve to death. My stomach rumbled at the thought. Or maybe it was because I was on half rations as well.\n\n\"Yes, Prince Lider's offer, I should consider that seriously,\" I said, trying to hide my true thoughts. Cin had been coaching me in kingship for weeks. I knew that it was essential to be all things to all people, and that meant keeping quiet and letting my Peers project their preferences onto me. \n\nStill, I did think for a moment about the peace offer. I had to admit, based on what Cin told me of statecraft, and my own instincts, it had been somewhat clever of King Sican to offer peace through the auspices of his son. First, Sican had a reputation for being brutal, his son was seen as softer, his offer of peace more probable (even if he had no real authority to offer peace on his own). Perhaps more importantly, it left the impression that the marriage pact between the Prince and my sister could be revived. The Collaborationist had grasped hold of it. That was what they had sought since the beginning, to pretend my father had never been killed and that I was not Sultanah. I was running out of ways to put it off.\n\n\"May I send up a flag of truce?\" \u00d6rnek asked, and as he spoke his eyes darted nervously towards Duke Hain, the leader of the Collaborationists. I guess they had sensed weakness in my avowed interest in Lider's mission. They thought that maybe, I had finally seen the writing on the wall.\n\n\"No,\" I said quickly. I saw the heads of peers look up, I had spoken too quickly, my thoughts were apparent. I dared not look at Cin, for I knew she would be disappointed. All the same, \u00d6rnek's eyes dropped quickly, whatever illusion he had about my willingness to speak with our enemies was punctured. Hain looked away, not wanting to be associated with the premature request. But I could feel the hostility from the Collaborationists in the room. My Gunes given title of Sultanah was buying their acquiescence now, but not for long. \n\nBesides, I still felt uncomfortable challenging these men, they had been trained and prepared. I blushed at my harsh words and felt ashamed of myself. They were men. I felt embarrassed whenever I asserted myself in front of them, \"I apologize if I sounded blunt my good Lord \u00d6rnek,\" I soothed, \"I meant that I cannot make any decision without prayer. And I intend to do so now, to seek guidance from god,\" I did not say the name \"Gunes\" for fear of offending the numerous followers of Tanri, but after my ceremony with my spiritual wives, what I had seen, had made me a devout follower of the Sun god. I certainly would pray to her.\n\n\"A wise posture my lady,\" Lord \u00d6rnek responded and then sat back down in his seat. I looked around at the other Peers, trying to gauge their thoughts. Mostly I saw apprehension, mixed with boredom. I looked out the window and saw the sun hanging high in the sky. There was little more we could do, I stood only a chance of harming my position further by extending the meeting.\n\n\"I believe this meeting has gone long enough. I release you all and thank you for your attendance today. I will have a definitive answer for you at tomorrow's session,\" I said. \u00d6rnek nodded, placated by my avowed uncertainty and the fact that the meeting was breaking earlier than intended. Many of the other Collaborationists seemed to feel the same. But Hain, and the smarter members, could tell that I was just buying a little extra time. He and his closest associates stared daggers at me as they rose and left the chamber. I watched them all go, while I stayed motionless in my throne, projecting permanency but not feeling it.\n\nOnce the peers had left, I let out a long sigh and sank down deeply into the throne. I looked around the room, left now only with the people I trusted, the only non-Peers allowed in the meeting. Cin stood directly to my right, on the floor below me. Behind her were Got and Agiz, my other spiritual wives. To my left was my sister Kardes, sitting in her traditional seat. No other family members were present, as Nislani was still mourning her marriage and spitting angry over my rationing orders. My personal guard Saygili stood next to Kardes, the only guard (and man) allowed in the throne room. \n\nOnce the door closed behind the last Peer left the room, I felt the formality slip out as well. These meetings were also a tradition, a meeting of my private Inner Council. Here is where I felt comfortable being myself, speaking my own mind, and where I earnestly sought a solution to my predicament.\n\n\"They grow restless,\" Got said, once we had sat in agreeable silence for several minutes. I nodded and no one seemed inclined to disagree.\n\n\"The affair with the traitor Rahip sapped the Collaborationist strength. But it grows again, day by day.\" Agiz said. It always sounded like the three priestesses were thinking from one brain. Perhaps it was just three copies of Cin, always wise, but always blunt. \n\n\"In a few days, maybe as soon as tomorrow, Hain and his ilk will not sit quietly when you turn down the chance to sue for peace. In a week, they will be taking drastic action to force your hand, within 10 days, unless something else changes, you will either capitulate or there will be a coup,\" Cin said. I felt a chill run down my spine. I knew that she was right. I had been sensing something of that nature myself.\n\nIn the time since my coronation, I had done nothing but wait. I dared not surrender my throne but, I could not risk war. Unfortunately, our enemies were better suited to wait. If I sat for too long, I would lose just as certainly as if I surrendered now. When my power ebbed completely, the people (and the Peers) would know that I was not a true Sultan, they would kill me, and they would quit the fight. I had to act, but how?\n\n\"Then we, those still loyal to my empire, and the Collaborationists agree on one thing,\" I said to my Inner Council, \"We cannot sit idly by forever. Time is running out, we must act.\" We were quickly sinking into the well-worn path of previous discussions. We had been over this and over this a million times.\n\n\"But how?\" Kardes asked. That was the real question. I had been running that through my mind for weeks, trying to devise some plan. I had spoken with the Inner Council daily. No one had devised a workable plan. We just kept going in circles, never resolving anything. Cin claimed that Gunes gave her no hints of the future. I sighed deeply.\n\n\"Saygili,\" I said and my guard turned to me, \"Have you rounded up the messengers I requested?\" I was referring to the only practical plan I had devised.\n\n\"Yes your majesty,\" my guarded nodded, \"Our fastest men, ready to move at a moment's notice.\"\n\n\"I cannot see all the future,\" Cin said, \"But I can sense that this gambit will fail, it is a waste of time.\"\n\n\"We cannot break the siege ourselves,\" I said, \"We need an army. The only way to obtain an army is an alliance with some other power. I am the Sultanah and therefore the most eligible bachelor in the world. Certainly some prince with some army will give me his daughter's hand in exchange for the use of his army.\" That was the best we had been able to do. Even then, there was little time to act. The Army would need to arrive in the next few days. That was why I would send my fastest men, and only to nearby countries with large standing armies.\n\n\"Even if, and it is by no means a small thing, that your messengers can get out of the city and reach the court of the princes of this world, you chances of success are miniscule,\" Cin said, repeating her earlier objections, \"Any prince that would give you his daughter would be doing so for the sake of his ambition. Only a weak prince with nothing to lose would take on King Sican at this time, only a fool with a small army and no future. And even if such a prince were agree, he could not get his army here in time. But I don't think we have to worry about that, I think the world will reject you, no man will think you appropriate as a husband for his daughter,\" Cin said, her voice never changing in tone. This was as blunt as she had ever been.\n\n\"You cannot speak to her in that way!\" Kardes shot back, protecting me. Cins words hurt, but I knew what she was trying to tell me. I raised my hand. I demanded absolute candor from my Inner Council.\n\n\"Cin meant no offense,\" I said to my sister, \"She does not see anything...unnatural in my body. She is placing herself in the mindset of our possible benefactors. And she is probably right,\" I said. I could not imagine a father who would want me as a husband for his daughter, no matter how rich I might be (especially with my riches consisting of a single city that was doomed to fall). My nobles barely respected me, despite my absolute right to rule, the rest of the world likely saw me as an illegitimate circus freak. As a result, we focused exclusively on courts where my sisters lived, hoping that familial relations would lessen some of the stigma. \n\n\"Thank you your majesty,\" Cin said and nodded to my sister. Kardes seemed to accept that explanation.\n\n\"But, while she is likely right, I find no harm in acting. Saygili, send the messengers,\" I added. As I said, I was attempting to be decisive.\n\n\"If a messenger is caught, they will know you're desperate,\" Got warned. That was certainly true.\n\n\"If they looked at our meager legions guarding our walls they will know I am desperate,\" I replied, speaking a deeper truth \"Saygili, go,\" I ordered.\n\n\"Yes your grace,\" My guard said and he walked out from the throne room, to seek his hand-selected messengers and to hand them the scrolls I had drafted the previous evening. I was begging the crowned fathers of the old empire to let me fuck one of their daughters. To make her a whore for their blind ambition. So there was still some hope.\n\nThe plan was to coordinate with some other power, to have them arrive at some instant immediately after my legions sallied forth from the city. If we could catch our enemies unaware, then we could drive them back in confusion. We would attempt to hit them where they were weakest and find spots on the battlefield where we could briefly have superiority in numbers. It was desperate and weak on details, but it was all we had.\n\nAs such, once Saygili was gone, we sat in silence for some time. There was nothing left to talk about. I supposed I should release them, let them attend to their own matters while I thought. But I needed them now. The world seemed to be growing more hostile by the day. The peers were cooling, my enemies heating up. Even the people, who had embraced me earlier during my adventure with Rahip and during my coronation, were holding back. They were apprehensive about their future. I did not blame them. But it meant that outside of this room, I was friendless.",
        "I looked out the window as I considered my plight. The sun had already reached its apex and was now starting to slip back down towards the horizon. The light had taken on a slightly orange glow that gave my throne room an intimate air. I saw the light splashing through nearest window, and spilling out over the floor like a flaming sword through the darkness.\n\n\"My Sultanah,\" Cin said suddenly. I jolted, as though I had been asleep and looked at my priestess. She was looking up from the floor, her beautiful face looking serene, as it always did. I noticed that a streak of that beautiful light was across Cin's eyes, giving them a shimmering brightness.\n\n\"Yes Cin?\" I said in response.\n\n\"As I said, this gambit will fail,\" She replied. Her eyes stayed on me, locked with an intensity they had not possessed of late.\n\n\"Yes, I heard you,\" I said, feeling a bit annoyed. I had made a decision about that. I was sticking to it. It was all I could do to avoid rolling my eyes. Cin shook her head, as though I did not understand her.\n\n\"I think, Sultanah, that you have been focused on the wrong problem,\" she explained, \"I have had a new thought. You have been looking at this siege as a material, military, and political problem.\"\n\n\"Are you suggesting it is not those things?\" I said. I stood now, this was a different tack that taken before. Cin was going to suggest something new. Anything new was better. I walked down the stairs of the throne slowly, to stand with the priestesses, my sister and Arkadas stood as well.\n\n\"Not primarily,\" Cin replied.\n\n\"Well what is it then?\" Kardes asked. I appreciated that my sister always seemed able to ask the curt, blunt questions that I feared to ask, even when surrounded only by my female advisors.\n\n\"It is a spiritual battle,\" Cin stated, \"Spiritual impurity haunts this city.\" I felt my heart sink. This was hardly what I needed now.\n\n\"Cin, I do not have time for ecclesiastical matters now. You see my heart, you know I love Gunes as I love the sun, for Gunes is the sun,\" I replied, \"but have more pressing matters now,\" I said, now unable to hide my annoyance.\n\n\"You are not only an individual, you represent the empire, and the spirit of the Empire is ripped in two,\" Cin responded, nodding to herself slowly. I looked at Arkadas, who seemed not to be paying attention. Kardes' brow was furrowed. The other sun priestess stared at me impassively.\n\n\"Cin, what good would converting everyone to Gunes be if we are all dead in a week anyway?\" Kardes asked, her words dripping with malice. A just question. I could not believe that Cin would worry about such distant matters when we balanced on the knife's edge of total destruction.\n\n\"Do not create artificial distinctions in your mind,\" Gunes responded, not returning Kardes' heat, \"the solution to your material, military, and political problems can only be solved by curing the spiritual problem in our midst.\"\n\n\"I have eliminated Cardinal Rahip,\" I replied, \"He is 500 feet below us in the darkest dungeon of the palace. He is in a place that light cannot reach, sitting in a pool of water filled with rats. He must relieve himself in the same water he drinks. He is not given a food ration. As a holy man, I cannot execute him. But he will not last much longer.\" For a moment I considered the fate of the old man, who I had known all my life, and shivered. But he had crossed me and threatened my dynasty. It was imperative that I not succumb to pity or mercy.\n\n\"So when you pull the snakes fangs from your flesh you simultaneously draw the venom?\" Cin asked sharply. \n\n\"Don't speak in riddles!\" Kardes shot back. But I felt the hair pricking up on my head. I felt a chill, but suddenly the sun felt brighter in the room, growing yellow where it was once orange. I looked at Cin.\n\n\"What are you saying?\" I asked. Cin took a breath and looked at her sister priestesses before speaking.\n\n\"All throughout this city, people are becoming more desperate. People who might not usually turn to prayer are finding they have nothing left but to ask for guidance. While many correctly pray to Gunes, many from ignorance and habit pray to the false god. That god is the god of our enemies. When they ask Tanri to deliver the city, to whom does Tanri look? Their prayers aid our enemy. And every day there are more prayers. Prayers for peace through our destruction. Tanri's strength grows greater in the city. You feel it yourself, you feel you cannot say Gunes' name at your meeting for fear of offending your enemies. You have eliminated Rahip, but there are thousands of other people in this city who are infected with his views. With knowledge or not, they bring the calamity to our city. When you clean this spiritual impurity, you will cure your political problems as well.\" \n\n\"Oh, so religious babble disguised as political advice then?\" Kardes said angrily. But Cin's words had washed over me in an almost physical way as they poured from her mouth. I could sense Gunes in her words, just as certainly as her red light had guided me to Rahip in the past. I did not know how, but I could sense that Cin was right. Perhaps not in the direct way that she implied, but the core of her point seemed nonetheless absolutely true.\n\nThere were still people in the city who wished it to fall to our enemies, that they took solace in Tanri, and that they led astray citizens who would otherwise be loyal. Other people, who only wanted peace, could be driven to accept the fall of the city if it meant an end to war. The will of the city to resist was falling and some of that drop in morale was caused by those who worshipped Tanri. I had to stem the tide and reverse this action. I had to convince the people that we could resist somehow, that Gunes (or something) was more powerful than our enemies' god and that we could be protected. If I could solve that problem, perhaps it would put my other problems in perspective, give my city unity, and show us a path to victory. I didn't know the mechanics of how the solution would work itself, but I could sense the truth in Cin's suggestion. I owed everything to Gunes, perhaps she would reward me again if I served her now.\n\nAnd, to a certain extent, I was tired of sitting on my throne worrying. I wanted something I could actually do, something that could make me feel like I was actively seeking a solution to my city's doom. Cin's words had placed some action in my mind, a desire to stop hunkering down and waiting for a savior, a desire to make something happen. I had become the Sultanah and I was tired of waiting for something to happen that would allow me to lead. I had to just do it. I turned and started to walk towards the door of the throne room.\n\n\"Are we dismissed?\" Arkadas asked sleepily. She had clearly not been paying attention. \n\n\"Where are you going?\" Kardes asked. I turned and looked over my shoulder at my advisors.\n\n\"To suck out the poison,\" I said and turned and left.\n\n* * * * *\n\nHalf an hour later I was out in the middle of \u015eehir. There were thousands of people in the streets, so much so that even the wide boulevards felt like they were crammed from doorway to doorway on either side. This was not surprising; farmers and their families had been sneaking into the city at night with the aid of their families in town (a major security concern, but something I could not bear to end). On top of that, the constant shelling from our enemies' siege machines had destroyed many homes and businesses. People had few places to go other than out into the street. \n\nDespite the bulging crowds, the streets if \u015eehir lacked their usual vibrancy. There were more people in the public squares, but less life. The people of the city, and therefore most of the people of the empire, had an air of gloom about them that I had never felt before. I had always loved venturing into the city to see the street performers, hear the merchants yelling at customers, and breathe in the excitement of life. But that city no longer seemed to exist. Large crowds were mostly silent. Stooped shouldered men and glassy-eyed women stood with long faces in lines for their daily rations of food. Children, too tired from fear to play, lay on straw heaps looking at the sky while their mothers and fathers gazed around nervously. You could hear the shuffle of feet on the ground and the sound of an individual cough.\n\nAs I moved through the listless crowd, I wore dark, peasant clothing and covered my face against recognition, but I wondered if it was necessary. Everyone seemed so engrossed by their own fears and misery that it was unlikely they would have noticed me if I'd walked naked down the thoroughfares. Well...perhaps not naked. But the point remained, the people of \u015eehir appeared to have been beaten already.\n\nThis was the morale crises that I had feared. If the enemy had come crashing into the city now, I believed the people would simply drop to their knees and beg for mercy. They would turn me over quickly. Not because they hated me, but because they found no reason to resist. They could think only of their own worries. Those worries were all they had left, I could not blame them. But I had to change the tenor. I had to make the people believe that we could win.\n\nAs I left wended my way slowly through the streets, I did not so much have an idea of what I was doing or where I was going as I had an urge to move. I trekked through markets and alleys, always keeping my eyes open but not seeing anything. Despite the tension I felt in the streets, it was good to be out of the palace. Seeing my own worry reflected in the eyes of my subjects was oddly comforting. Ideas, half formed, percolated up from the sympathy I felt for their strife. Nothing solid yet, but I felt closer than I had in days to some sort of breakthrough.\n\nAbout an hour into my journey I suddenly found myself standing in a large square near the center of the city. I had not been paying attention to where I was walking, so engrossed was I in thought. But I briefly looked up as I heard more noise in the street than that to which I had become accustomed. There was a slight murmur in the crowd and a little bit of electricity. After a moment, I looked up and instantly recognized where I was located. Kilise Square. Here was the Ibadethane Cathedral, the chief house of worship for Tanri in the city. It was one of the tallest and most beautiful buildings in the city, with sweeping pillars, beautiful stained glass windows, and a massive, ornate bell tower. It was Rahip's former seat and a symbol of the new God's power\n\nAs I looked up I heard a loud clanging sound. I heard the murmur in the crowd grow louder and all turned towards the bell tower. It was 5:00 o'clock, time for prayers. As the clock began to chime, the large oak doors to the Cathedral flew open. The crowd grew silent, and actually took a few collective steps back. As the second chime of the bell rang, people began to make their way out of the Cathedral. On the left were men wearing loose brown robes, their heads shaved in the monkish fashion. On the right were the nuns, wearing long, loose white dresses and elaborate headscarves. I thought for a moment that it was strange that in a different life, I would have been joining them. That didn't feel as though it was just a few weeks in the past.\n\nBut I quickly pushed those thoughts out of my mind. Instead, I was intrigued by what was happening. I pushed my way slowly through the crowd, trying to get closer. Of course, I had seen the hourly prayers of the followers of Tanri in the past. This was not a new tradition; they had been doing it since they first came to the city. But it had a new urgency now, and I wanted to gauge the reactions of the people. \n\nThe monks and the nuns worked their way down the steps of the Cathedral as the bell continued to toll. Their heads were bowed reverently and they moved in perfect unison. They looked like a snake, slithering over the steps. As they made their way out of the doors they fanned out, the monks to the left and the nuns to the right, spreading out in front of the Cathedral. In a few moments, all twenty nuns and all twenty monks (there were hundreds of Tanri followers in the community, but only 40 participated in each hourly prayer ceremony on a rotating basis. Forty was a sacred number to Tanri). As they reached their final positions in a semi-circle in front of the church, they all turned in an instant. In unison, their heads shifted so their eyes were facing the church.\n\n\"Glory be to Tanri!\" they all yelled at once. In the silence of the square, their voices carried impressively. While I was still a few ranks back in the crowd, I was almost overwhelmed by the sound. I had seen this ceremony before. But never in so quiet a square. Usually, most people just ignored the zealots and commenced their shopping. Today was different. I found that it made my stomach turn and my head ache just to hear their overwhelming noise. Others in the crowd had a different reaction. As the holy men and holy women spoke, many of my subjects reflexively fell to their knees in prayer. I would not say that it was half of the crowd, but it was not far short. Further, even those who did not dropped to pray looked reverently at the Cathedral.\n\nAnd not just the Cathedral. They were looking at what the nuns and the monks were looking at, the object of their prayers. When Sultan K\u00e2fir III had tried to move the seat of worship for the New Religion from Kasaba to \u015eehir, he had attempted to entice the leaders of the religion through the purchase of a holy relic. In fact, the Sultan had still been a wealthy man at that time, and he had purchased one of the most important artifacts of the religion. It was a gem of enormous size. I had never been close enough to the object to know what it was, but I could not deny its beauty. It was the size of two men's heads and it was cut into a perfect sphere. Its color was a pale, ephemeral blue that gave the gem the appearance of ice or of a grandfather's eyes. Legend had it that the gem had appeared in the exact spot Tanri had been standing when he ascended into the heavens. \n\nK\u00e2fir III's attempt to woo the leaders of the New Religion to the city had failed, but the gem had stayed. The Cardinals of \u015eehir were still renowned figures in the New Religion and the gem stood as a symbol of their power. They had placed it in the center of their great clock tower and, as their religion required, they prayed towards it every hour on the hour from sun up until the sun finally set. \n\nEvidently, the people felt the same reverence for the gem that the nuns and the monks felt. It was a physical manifestation of the authority of Tanri. A physical link to the spiritual word. Despite the fact that I no longer felt any affinity towards Tanri, I could feel the power of that symbol. And if I could feel it, how could my subjects in their misery fail to feel.\n\n\"Lord Tanri,\" a voice called out, emanating from one of the monks, \"We humbly pray that you deliver us from the scourge of war. We ask that you give our Sultan..ah, the wisdom to put aside her pride and to think first of her people who suffer greatly. We ask that your will be done so that peace may come without further bloodshed. Amen!\" The crowd, even those who were not on their knees, largely repeated the \"Amen\" to close the prayer. I felt a chill run down my spine. It was exactly as Cin had explained and what I feared. The New Religion was truly undermining me in the guise of calling for peace. I had eliminated their Cardinal, but the roots of the New Religion were too deep. This was a cancer in my Empire, it made certain subjects more closely aligned with my enemies than with me. I had to rip it out. But how?\n\nI was watching as the nuns and the monks slowly began to file back into the Cathedral, the prayer was over. People in the square remained largely still and reverent. I tried to overhear conversations, but everyone was whispering and I could not make anything out without leaning in too closely. But I could tell from the tone of the group that there was great reverence for the New Religion and its followers. And I now understood that each gram of respect the New Religion received was yet another nail in the coffin of the Empire.\n\nAs I was thinking these dreary thoughts, I found myself walking towards the Cathedral. I certainly had no intention of going inside, but I found myself drawn to the building. I gazed at its stone pillars and bright windows, searching for the key, for the way of undermining its authority. But the building yielded no secrets. It, and the stone that crowned it, were a symbol of authority, not the authority itself. That authority was granted from the hearts of my people, cleaved in two with divided loyalty.\n\nI looked back over my shoulder and saw those people, still standing quietly and appearing humble. I wondered briefly if they would kill me for their God in that moment if they knew who I was. If they would answer their own prayers. But as I looked at them, I noticed something. While the vast majority of people were on their knees or standing with mouths agape, there was someone moving around. \n\nThe person was wearing a long black robe and their head was covered such that only the eyes were exposed. In a dark alley this person would be invisible. My years moving through the city had sharpened my eyes to all of the various activities in the city. I had always prided myself on my ability to spot pickpockets and this one was particularly bold. I watched the thief walk up behind anxious mothers and reach into their backs quickly, or rifle imperceptibly through the pockets of a worshipping farmer. No doubt the thief was looking for food. I did not raise the alarm; instead I watched the pickpocket work.\n\nAfter a few seconds in which the pickpocket had silently and without notice extracted goods from ten different people in the square, he quickly began to move towards the cathedral, towards me. I knew that the pickpocket was likely trying to get out before anyone noticed their items were missing. I briefly considered calling out \"thief!\" and summoning guards to arrest the pickpocket. People would once again be surprised and delighted by the adventures of their Sultanah, perhaps it would buy me a little more good will.\n\nBut, something more powerful was at work inside of me. Here was the only person in the square besides me who had been completely unaffected by the Tanril Hours Ceremony. If nothing else, that should have earned my silence. But beyond that, this person, so brazen and purposeful, intrigued me. For reasons I could not explained, I chose to simply watch the pickpocket move.\n\nHe was walking towards me at first, but before he reached the area directly in front of the cathedral he turned right. He started walking down the side of the cathedral, into a somewhat darkened alley off the square. After a moment to give him space, I turned and followed. I don't know why I followed; I just wanted to see where this type of person might be going. \n\nHe moved slowly, likely so that he would not draw attention if people in the square began to notice their thefts. But as the alley got darker and darker along the length of the cathedral, he began to move faster. Soon, he was jogging and I was jogging behind him, as quiet as possible. About three quarters of the way down the length of the cathedral, the pickpocket suddenly stopped, turned and faced the building, and dove forward towards the base. He disappeared in an instant. \n\nI began to spring towards where the pickpocket had disappeared. I would have expected that his head would have been crushed against the base of the building by the speed with which he had dived toward it. But from the distance, there was no sign of him. I was confused and a little scared. What sort of sorcery was this?\n\nAfter a few seconds, I made it to the place where the pickpocket had disappeared. I realized quickly that there was no sorcery at all. A large hole existed where the cobbles of the alley met the base of the cathedral. It was about two feet high and four feet wide. It was so dark that I would have believed it a mere pothole if I had not seen the pickpocket act. I realized that the pickpocket had entered the cathedral basement through the hole.",
        "For a second, I considered this the end of my pursuit, a nice diversion from the worries of the day ended. But I still felt an intense curiosity to see where the pickpocket was going. Besides, he had presented me with the opportunity to enter the seat of my enemy's power within the city unnoticed. I didn't know if there was anything in there that would help me, but it could. \n\nWithout thinking more deeply about the possible dangers involved in my actions, I dove down toward the hole. The hole itself was quite smooth and I slid down it quickly, but comfortably. It was like a tube that extended from the street below the surface. It felt like polished stone. It had been there a long time. I tried to remain quiet as I slid down the chute. After just a few seconds the tube disappeared. I briefly saw a room with soft, orange light but then I crashed into the ground with a loud thump. I heard myself give a yelp before the air rushed from my lungs and then I felt pain all over.\n\nI didn't even have time to gain my senses or determine if I was badly injured before I felt someone scoop my head off of the ground. In an instant a strong arm was wrapped tightly around my throat, nearly choking me. I felt a sharp point, likely a dagger against my side, and I felt hot breath in my ear.\n\n\"Who the fuck are you and why are you following me?\" the voice hissed. The pickpocket. The voice sounded strange in some way, perhaps it was a bit high, but serious. I felt my limbs grow cold and bile back up in my throat. My head was still swimming from my fall and my ankle ached terribly. But I was more concerned about this person. I had dived into the darkness headfirst, away from the protective light of the sun. Now I was in someone's control. This person did not know who I was. I could be killed without a second thought, to be discovered by a Tanril nun.\n\nIf anyone. I realized. As my vision came back to me in the darkness I saw where I was located. It looked like a vast tunnel stretching the length of the cathedral. It was only a few feet wide and largely dark, except for a few torches against the outer walls. I looked briefly to my left and the corridor extended on into the darkness as far as I could see. I looked to my right and saw the same thing. I did not know if anyone besides my captor knew about this place. I was totally within the pickpocket's power.\n\n\"I am...\" I started to speak.\n\n\"Quiet you fool!\" the voice hissed again, pressing the knife harder into my side, \"Your fall has already made too much noise, the fools in the cathedral will hear you.\" As the pickpocket spoke, he gestured quickly with his hand toward the wall in front of me. The arm quickly returned to my throat. Ahead of me was a long wall of misshapen bricks. Apparently that was the cathedral and I was in some sort of passage underground, just running along side of the basement. \n\n\"I apologize for my noise,\" I whispered back quietly. The knife eased slightly.\n\n\"Why were you following me?\" the voice said again, tightening the grasp.\n\n\"I was not...\"\n\n\"Don't lie you fool, it will get you killed,\" the voice responded. I nodded my head slowly. I looked down at my ankle. It was hard to see in the darkness, but it appeared slightly red. Perhaps sprained, but not broken. I wondered if I moved quickly enough if I could escape at a run. But where would I go?\n\n\"I saw you picking pockets in the square...\"\n\n\"You saw no such thing!\"\n\n\"And I was curious about where you were going. And then you entered the side of the cathedral and I had to see where you went. It was curiosity that drew me here. I had no ill will towards you and would not turn you in. If I had desired that, I would have called to you in the square,\" I said. I had spoken the truth, and wondered what it would profit me. The knife eased back even further.\n\n\"Are you one of the Cardinal's guards?\" the pickpocket asked, \"I can tell when you are lying.\"\n\n\"The Cardinal has guards?\" I asked.\n\n\"Exactly what the Cardinal's guards would say,\" the pickpocket responded.\n\n\"The Cardinal is imprisoned,\" I replied quickly, trying to change the subject. \n\n\"Yeah, the smartest thing our dear Sultanah has ever done, Gunes bless her cock!\" the pickpocket said wryly, \"Would that she imprisoned the whole lot of these hypocrites and traitors!\" I was more certain what was happening now (and I could not help at smile at the blessing for my cock). The cardinal hired guards to patrol for pickpockets. The thief thought I was trying to arrest him. But I liked his politics.\n\n\"Let me ask you, would a Cardinal of Tanri ever hire a woman to serve as his guard,\" I said. I swallowed hard, hoping that would be convincing. I felt the arm slip from my neck and the knife moved completely from my side.\n\n\"No, I suppose not,\" The thief said slowly, \"They have never been smart about hiring their spies, always big muscular young monks who made a lot of noise. You really are just a curious, silly girl,\" the thief said. I scrambled away from the pickpockets knife quickly. My ankle screamed as I moved and I collapsed again quickly, sitting with my back against the far wall. I was panting. The pickpocket was giggling.\n\n\"I'm no murderer, I am not going to kill a silly girl for sport. If you aren't a guard we have no beef,\" the pickpocket said and slipped his knife back into its sheath.\n\n\"I am not used to knives at my side,\" I said harshly.\n\n\"Well you shouldn't be diving into strange passages where the light of Gunes does not shine,\" he responded truthfully. It gave me an idea\n\n\"Gunes seems to shine few places in this city,\" I said, testing out a theory.\n\n\"Aye, it is true,\" said the pickpocket, \"and it is because of these fools here. These traitors and their Cardinal. I do the Sun God a favor by taking their ill-gotten goods.\" This confirmed a suspicion. The pickpocket had not mentioned Gunes as an idle blaspheme, he was a follower.\n\n\"Do you follow Gunes? Do you support the Sultanah, who worships the sun?\" I asked somewhat aloofly. If this person was loyal to the Sultanah, perhaps I could convince him to help me (as a fellow loyal subject) get out of the Cathedral and avoid an embarrassing detection.\n\n\"I always follow Gunes. And I follow the Sultanah when she does the same,\" the pickpocket replied.\n\n\"Oh how wonderful!\" I said loudly, smiling brightly. It was strange, it seemed that Gunes was always putting me onto some new path, now that I had opened myself to her. I wondered where she was leading me next.\n\n\"What was that?\" I heard a voice say through the wall. It was a woman's voice.\n\n\"Oh fuck, now you've done it you stupid bitch!\" the pickpocket hissed.\n\n\"Is someone out in the passage?\" I heard the voice clearly. I suddenly realized what had happened. I had spoken too loudly. A nun in the basement of the cathedral (where the dorms were kept) had heard me. We were discovered! The pickpocket moved quickly across the distance between us, sat down next to me and clamped his hand over my mouth.\n\n\"Keep your fucking mouth shut, maybe she will go away,\" the pickpocket responded.\n\n\"Did anyone else hear that?\" the voice said from behind the wall. The voice was very clear and I realized the wall was much thinner than I had supposed, the blocks were only an inch or so wide.\n\n\"Yes, I did,\" another woman's voice said.\n\n\"I heard nothing,\" a third, timid voice stated, \"We are along the outside wall and underground. No one can be there.\"\n\n\"Shut up Acemi, you are a novice. What would you know about what happens within and beyond the walls?\" the first voice stated.\n\n\"Rahibe, don't be rude to the novice, She just began her studies this week. She has much to learn. In fact, if I am right, she is about to learn a most important lesson,\" the second voice said. There was something knowing, almost sultry in her voice and I wondered what she meant. My heart was pounding like a hammer in my chest and the thief's hand was squeezing tighter on my mouth.\n\n\"Oh Ikiy\u00fczl\u00fc, I hadn't thought of that. I hope you are right,\" Rahibe said, her voice now also taking on the knowing cadence, \"I was wondering when someone would call on one of our new monkish novices,\" she replied.\n\n\"What are you two talking about?\" Acemi, the novice, asked, \"Is this some kind of prank? This is the edge of the building, are you just trying to scare me?\" The novice sounded nervous, as though she was not enjoying her early stay as a Tanril virgin. For a moment, I thought about the fact that it could have been me.\n\n\"Who is out in the passage, we know you are there,\" Rahibe said, loudly. She was totally ignoring Acemi's question. I darted my eyes over to the pickpocket, who shook his head. There was a moment of silence. Suddenly, there was a sound like a panel sliding. Then another. I looked ahead of me and saw two circles of light on the far wall, where I had dropped in. The top circle was smaller than the bottom circle. I looked towards the pickpocket. I saw a beam of light pouring out from a round hole in the wall behind our backs. It was directly between our heads where we sat. The other beam of light was higher. The nuns had removed some sort of panel in their dormitory. They could see out into the passage. The pickpocket's eyes looked surprised, he had not known they existed.\n\n\"Can you see anything?\" Ikiy\u00fczl\u00fc's voice said.\n\n\"I think I see feet or...something, it is dark in the passage,\" Rahibe responded.\n\n\"May I look? What is going on?\" added Acemi. The pickpocket and I sat deadly still, hoping that they would just ignore us.\n\n\"It is probably a novice priest.\" Rahibe said.\n\n\"Heard about this place from a more...seasoned student and is getting cold feet? Don't be shy. We don't discriminate,\" Ikiy\u00fczl\u00fc said from the room beyond. I looked into the pickpockets eyes, but he just shrugged his shoulders. He did not know what was going on either.\n\n\"What are you all talking about? I don't like this prank. I will tell the Mother Superior that you are hazing me and she will be most...\" Acemi began.\n\n\"Stop whining you twit,\" Ikiy\u00fczl\u00fc cut her off. Then Rahibe began to speak, she spoke clearly and slowly and it seemed she was speaking to the imagined novice priest in the corridor as much as she spoke to Acemi.\n\n\"This room is a special room Acemi. As you see the walls are very thin and there are...holes cut into them. On the far side of this wall is a corridor. That corridor was built at the time the Cathedral was built, when it was far less certain that Tanri would be accepted in this city. It is part of an escape hatch. The years have proven that system unnecessary. But you see, the priests and nuns have always known about that passage. \n\n\"As you know, Acemi, you were brought here by your father as an offering, to be a Tanril Virgin,\" Rahibe said, suddenly changing tack, \"What does that mean?\"\n\n\"What does what mean? To be a Tanril Virgin? It means to maintain my purity here in this cathedral for the rest of my life,\" Acemi responded. I wondered what was going on, this little test seemed completely unrelated to the existence of a passage.\n\n\"What does it mean to maintain your purity?\" Rahibe asked. There was a long pause.\n\n\"To...to refrain from all...sexual...contact,\" Acemi said and I could practically hear her cheeks turning red as she spoke. I shuddered to think that she could have been me. A life of celibacy worshipping a false god with a bunch of mean spirited nuns.\n\n\"Close, but wrong,\" Ikiy\u00fczl\u00fc responded. And I was surprised.\n\n\"In the second century after the Cathedral's construction, the great scholar O\u011fretmen was the prior of the monks and priests. He re-discovered an obscure passage in the Incil, the very word of God, that shined new light on the role of the Tanril Virgin. A Tanril Virgin must maintain her purity to the world. That means to refrain from engaging in sexual contact with any man, woman, or creature of this Earth,\" Rahibe explained.\n\n\"I do not see the distinction,\" Acemi said and I tended to agree.\n\n\"Tanri, our God, is not of this Earth. But he is a man, like any other. With a man's needs. He cannot soil himself by coupling with normal, fallen women. Instead, he requires a pure touch. The touch of a Tanril Virgin. Unsoiled by all but the God himself,\" Ikiy\u00fczl\u00fc explained. My mind was spinning, I had studied religion for many years at my father's behest. I had never heard of this doctrine. Frankly, it sounded strange given the avowed prudishness of the New Religion.\n\n\"Where does it say that in the Incil? And what does it mean? How can one...lie with Tanri? He lives in heaven.\"\n\n\"Do not worry about the location of the passage,\" Rahibe said quickly, raising my suspicions further, \"as for your other concern. Does not Tanri have vicars on this Earth? Do not some men, pure men, whose actions exist as though they are the actions of Tanri?\" Again a pause.\n\n\"Priests?\" Acemi responded uneasily.\n\n\"She is not as stupid as she looks,\" Ikiy\u00fczl\u00fc.\n\n\"I don't understand...\" Acemi stated. Rahibe went onto to explain, but I had figured out the hypocrites deception already.\n\n\"Do I need to draw you a diagram novice?\" Rahibe began, \"Our god Tanri comes to use this wall. He gazes upon us from this top hole so that we may please his eye and from this lower hole he slides his cock so that we might please his body.\" Acemi let out a squeal.\n\n\"No...That can't be right...It is not Tanri, it is a priest,\" She whined.\n\n\"You are wrong. As O\u011fretmen explained, when the Tanril virgin cannot see the face of the priest and therefore know his identity, the priest exists only as a vicar of Tanril. A special unity occurs and the Virgin moves completely past the priest, and communes solely with Tanri. It is not actually sexual contact, it just appears as though it is,\" Rahibe concluded.\n\n\"Why can the priest gaze upon us? Certainly he will know who we are...\"\n\n\"It is not a priest you fool! It is the spirit of Tanri\" Ikiy\u00fczl\u00fc spat.\n\n\"The eye that gazes upon you experiences the same mystic communion. It is likely that the priest through which Tanri enters the Virgin will not even recall her appearance. He sees only for Tanri. Therefore the Virgin remains a virgin and experiences a deeply spiritual connection with God,\" Rahibe explained. \n\nI did not need to know the exact passage of the Incil used to justify the actions I had heard described. The pickpocket was right, the people within these walls were hypocrites, tying their scripture and their logic in knots to justify what, to them, amounted to a sin of the flesh. I burned in rage at the thought of all of my people, condemned as sinners by the priests and nuns of this order over the centuries, who had committed far less dire offenses. Still, despite myself, I felt my pulse quickening and my cheeks grow warm as I thought of what Rahibe had described. I pushed that thought aside.\n\n\"We heard once such vicar in the corridor, though perhaps he is scared to fulfil his role,\" Ikiy\u00fczl\u00fc stated.\n\n\"This is wrong, we cannot do this. I will tell the Mother Suprior...\"\n\n\"She was down here last night performing the ceremony, she insists all novices do so at the early possible opportunity, to feel the power of God,\" Rahibe explained in a voice that clearly spoke the truth and I confess I was shocked. This was not some silly young nuns trying to skirt the rules. This hypocrisy traveled all the way to the top.\n\n\"So young novice priest, please assume your position as God's chosen and we can begin the ceremony,\" Ikiy\u00fczl\u00fc said, not directly at the wall. Clearly she was speaking to me and the pickpocket. We looked at each other in silence, not exactly sure what to do. I began to hope that if we waited long enough that they would just leave. A few minutes of waiting dashed my hopes.\n\n\"Novice, the other priests will not let you return until you complete the ceremony, so you may as well get started. I assure you it is a most inoffensive rite,\" Rahibe stated. I looked again at pickpocket again. He was still not moving. I leaned in towards him, carefully avoided the hole in the wall, and placed my lips near his ear.\n\n\"They will not leave. You must stand in for the priest,\" I said. I pulled back slightly and looked at the pickpocket and he shook his head vigorously, \"They are not going to leave until they are satisfied!\" I beseeched in a low hiss.\n\n\"I cannot do it,\" the pickpocket stated.\n\n\"You have said yourself that you believe they are hypocrites, what difference does it make to you? You say you follow Gunes. The Sun God makes no bizarre prohibitions against sexual contact. Obtain free pleasure and we may leave,\" I said more quickly than before.\n\n\"I cannot,\" the pickpocket repeated.\n\n\"You must!\" I responded. The pickpocket sighed quietly and made frantic motion with his hands.\n\n\"You fool I am not being difficult with you. I...\" he paused for a moment. Then he sighed again and reached up to facial covering her wore. Her worked his hands over the knots and carefully removed the black fabric. I felt a jolt. The face looking back at me was feminine with large almond shaped (and colored) eyes, a narrow nose, wide lips, and soft features. In fact, the pickpocket had a beautiful face. The pickpocket grabbed my hand and placed it against her chest. I could feel the soft flesh of her breast through her robe, \"I cannot.\" She repeated finally her voice sounding even softer than before. I realized now why she had sounded so strange, a woman attempting to sound like a man.\n\nI felt sunk. The pickpocket could certainly not perform the required task to give us freedom. The nuns did not seem likely to back down from their insistence. I thought, briefly about whether I could step into Tanri's shoes for this farce of a ritual. I felt my nipples rubs against the fabric of my robe and my cock twitched slightly at the thought. I was aroused by the word spoken by the nuns and the sound of their sultry voices. I had once again ignored my libido after my coronation. There was too much to do and too much worry to consider sex. \n\nBesides, I was still not wholly comfortable with the strength and nature of my sexual desires. I could not trust myself; I did not know if I sought a place against the wall because it was a wise way to avoid detection or because I desired the touch of the women inside. Beyond that, exposing my body would let the pickpocket know of my identity, and I was not certain I could trust her. She was a thief with a knife after all.\n\n\"Something strange is going on out there,\" Rahibe said uneasily, \"Perhaps we should get the Bishop to investigate the cause of the delay.\" I felt my blood run cold. I did not know if this was simply a ploy to get to \"novice priest\" to act or if the nuns truly intended to call for assistance, but the threat felt legitimate. The pickpocket and I could get up and run, but I didn't know where I was going. The pickpocket owed me nothing. I could be captured down here, but the forces of Tanri. They might turn me in to my enemies! What a horrible situation, why had I dived into the Cathedral behind the thief? I had not realized the magnitude of the risk I was running until that moment.\n\nSuddenly, my previous concerns seemed smaller. Being caught by the guards and the acting Cardinal (the Bishop) were a far greater danger than the pickpocket, a single woman. Besides, she spoke somewhat warmly of the Sultanah and claimed to be a follower of Gunes. It was better to place my faith in the Sun God than to take my chances with Tanri.\n\nI stood quickly and turned to face the wall. The pickpocket looked alarmed and she reached up to grab my arm and pull me back down. She was unbalanced where she sat and I flicked my wrist, knocking her back. While she was still trying to get her bearings, I quickly grabbed at my garments. \n\nThe nature of my robe was such that it was a long piece of fabric that was tied in a series of ingenious knots I had learned since childhood so that it covered my entire body. It was long and billowy and I enjoyed the freedom it provided so much that I wore nothing underneath. This was the robe I always wore on clandestine trips around the city, it was the only one I trusted to keep my secret even if my cock was unbound. Because I knew the robe so well, I also knew how to take it off quickly. I pulled in four or five different places and moved my arms in a gentle swinging motion. In an instant, the robe lay in a pile on the floor.",
        "The pickpocket had regained her seat now and for a moment, she reached up again to pull me down. But I saw in her eyes as she did so that she now saw my body. I felt her black pupils drop from my long braided hair, across my face, over my small firm breasts, my flat stomach, and stop at my limp, 5-inch cock and chicken-egg sized balls. My skin, as always, was smooth and there was no obstruction of the pickpocket's view. Her hand dropped instantly and her eyes grew wide. Her mouth opened slightly. I was afraid she would make noise; I lifted my finger to my lips begging silence. Then I turned back toward the holes in the wall.\n\nMy skin tingled all over and my mouth was dry. My stomach was roiling and I felt incredibly warm. This, despite the fact that the passage was quite cool and a slight breeze stroked my naked body. I didn't know if I was nervous because of my peril, aroused because of the situation, or both. I knew that my actions here were not a choice; this was the best solution to the problem I faced. I tried to ignore the signals of my body, and I leaned my eye into the top hole.\n\nI was almost blinded by the brightness in the room. All of the walls were painted white and there were several torches, giving the room the appearance of daylight. It was a small square room, no bigger than a privy in the palace and only a single door led inside and it was closed. There were a few benches around the outside walls. It was clear this room was used for only this particular ceremony.\n\n\"Oh, someone has finally graced us with his presence,\" One of the nuns said. As my eyes began to focus I saw the three nuns clearly for the first time. They were all wearing their informal, dormitory clothing (I had seen them a few times before) that consisted of a tight white, sleeveless tunic and a long white robe. The one who spoke was pointing at my eye and I recognized her voice as Rahibe. She was the oldest of the three, though still quite young, maybe 25. She had long brown hair and a pretty (though not beautiful) face. She had very large breasts and thin hips, her breasts making her small body look deceptively slender. \n\nI recognized the two without hearing their voices. Ikiy\u00fczl\u00fc was very tall with medium-length reddish brown hair. Her face was severe but beautiful and she had a very slender frame. Her breasts were small and her legs very long. I could tell by the look of her sensuous mouth the voice that belonged to her. She looked around 23 years old. Acemi looked younger, likely 18 (the minimum age for a nun). She was the picture of innocence with long black hair, a long neck, and a compact body. Her breasts were small and firm, her stomach flat, and her legs thin and youthful. Her most striking feature were her large, gray, round eyes that gave her an appearance of beautiful naivet\u00e9. There were three Tanril Virgins, my spiritual sisters in another life. And hypocrites who wanted my cock. At least they were all quite attractive.\n\n\"Do not be shy, Lord Tanri,\" Ikiy\u00fczl\u00fc said to me, \"We desire your body as well as your gaze.\" I realized that while my eye was pressed against the rough stone of the wall, my cock was still several inches away. I looked down between my legs and saw my limp cock there. I knew that the pickpocket could see me, but I felt less self-conscious about it than I had before. Hell, the whole world knew I had a cock now. Still, it was strange place it in a rough hole in the wall for these strange women. But I did not have a choice.\n\nThe eye and cock holes in the wall were almost perfectly placed for the size of my body. I guessed the old priests must've been short like me. I took a deep breath and pressed my hips against the cold material of the wall. I reached down with one of my hands to guide my cock into the hole. It was wide enough (and the wall itself thin enough) that I pushed my balls through the hole as well. The wall around the hole was smooth and I felt no discomfort, save for the cold feeling of the stone against my breasts and stomach. Luckily, my cunny rested directly on the edge of the wall, where it could not be seen below my balls. The room on the far side was warmer than the passage and I knew that the women could see it. \n\nFor a brief moment, I looked over at the pickpocket. She was free to run now, if she was so inclined. But she was still looking at me in shock, unwilling or unable to move. A voice from the far side of the wall drew my attention back.\n\n\"I knew it was a novice,\" Ikiy\u00fczl\u00fc said, \"I do not recognize this visage of Tanri's cock. What big balls this one has!\" My eyes widened. This \"ritual\" was performed often enough that this \"virgin\" could recognize the identity of the priest behind the wall.\n\n\"Ah, I see why Tanri is a bit nervous. His cock is not yet hard. But it is a cute one, so pink and smooth,\" Rahibe said, pointing to my limp cock. Despite the absurdity of the situation, I felt myself blush, \"Do not be alarmed Tanri. It is our job to stimulate you, if you cannot achieve arousal, the failure is ours.\" Rahibe licked her lips as she spoke. I wondered briefly if I was supposed to say anything to these women. But Rahibe and Ikiy\u00fczl\u00fc seemed quite able to handle the situation on their own. \n\n\"Shall we make the novice start?\" Ikiy\u00fczl\u00fc asked. I saw Acemi's eyes grow wide and she shook her head. Clearly she was not enamored of this \n\n\"Two novices together? I think that Tanri would be less than pleased,\" Rahibe said, \"Let us show these new members our community how it is done, before they complete the communion.\" Ikiy\u00fczl\u00fc smiled lewdly, bit her lip, and nodded. Without further word, the two older nuns began to grab at the fabric of their robes. The two nuns displayed the same ease in removing there robes as I had with mine. In a moment, their white clothes lay in heaps on the floor and the two nuns stood naked before me. Rahibe's breasts seemed even larger now than they had before and stood up high on her chest despite their size. Ikiy\u00fczl\u00fc's robe had made her appear more angular than she was and her round breasts, the curve of her hips, and the swell of her thighs were far more pleasant exposed than they initially appeared. Both women were completely clean shaven and I could see the tight, pink slits of their cunnies. I felt my cock twitch slightly in the hole.\n\n\"You see, it does not take much to entice Tanri, he is quite virile,\" Rahibe said, turning towards Acemi. The young nun was looking at my cock and her two naked companions with a mixture of awe and disgust. She didn't move, she just stared at us all with her wide, innocent eyes. Rahibe and Ikiy\u00fczl\u00fc did not seem to take any notice. In fact, I noticed something lupine now in their eyes. They were looking at my cock with unconcealed lust. I could practically see their mouths watering. Clearly they enjoyed this rite.\n\nRahibe and Ikiy\u00fczl\u00fc dropped down onto their knees in the room. I saw their breasts (especially Rahibe's) hang down towards the floor and their asses stick up in the air. Together they began to crawl towards me. My heart was pounding faster now and my knees felt weak. Only the fact that I would jerk my cock viciously if I fell kept me, precariously, on my feet. I kept my eye plastered to the hole, watching the women as the crawled ever closer.\n\nIn a moment, they were just inches away from the wall. Almost in unison they sat back so that they were sitting up on their knees. Their breasts were now level with my cock and I looked down at them, my body trembling. The two nuns stared at my cock for a few moments.\n\n\"I got bottom last time,\" Ikiy\u00fczl\u00fc said, \"I want top this time.\"\n\n\"I am better at top, and these balls are huge!\" Rahibe said. I was not sure what they were talking about doing.\n\n\"There is no time for this nonsense,\" Ikiy\u00fczl\u00fc said and acted quickly. I saw her hand dart forward and in a moment, I felt her soft, warm finger tips against the soft base of my cock. Rahibe let out some noise of protest but I could not really hear it. I bit my lip, wanting desperately to moan but afraid of the information my voice would provide. Ikiy\u00fczl\u00fc formed her index finger and her thumb into a ring and slid it up near the tip of my cock. She pulled my limp (but aching) cock upwards toward her face. She gave a quick look up toward my eye and I saw a sensual spark in her gaze. Then her head dropped quickly and I was looking at her hair. \n\nA moment later I felt something that was now somewhat familiar, though no less amazing. I felt the hot, wet sensation of Ikiy\u00fczl\u00fc's mouth wrapping around my cock. She created a vacuum in her mouth and I felt it pull blood into the tip of my cock. Every conceivable part of the tip of my cock was being caressed by the inside of her mouth. She released the vacuum, but kept my cock in her mouth. I felt her tongue begin to explore my shaft, working around it thick and soft. I felt the tip of her tongue exploring my foreskin, poking inside and tasting at my salty musk.\n\nWhile Ikiy\u00fczl\u00fc worked, Rahibe was not idle. When Ikiy\u00fczl\u00fc lifted my cock to place it in her mouth, Rahibe had dropped her head and craned her neck. The back of her head was pressed into Ikiy\u00fczl\u00fc's belly (I could just barely see it around Ikiy\u00fczl\u00fc's head. I felt a small amount of wet pressure against my right ball. For a second, I didn't know what was happening. Then, as the wet warmth spread, I realized that Rahibe was bouncing my ball on her tongue. She swirled her tongue around briefly on the bottom of my sack, giving me a delightful chill.\n\nI felt the tongue disappear from my balls. But, a second later, I felt something else. I felt Rahibe's lips as they kissed my right ball. Then, her lips began to spread out as her mouth opened. Like Ikiy\u00fczl\u00fc had worked with my cock, Rahibe made a vacuum with her mouth. I felt a slight pinch but also felt intense warmth as my ball slipped into Rahibe's body. I felt the walls of the insides of her cheek tightly hugging my balls, warm and wet. I felt her tongue darting around on my scrotum, lapping at my flesh. Her lips pursed tight, holding me firmly but gently in place. I felt her nose pressing into the side of my shaft even as Ikiy\u00fczl\u00fc tongue slipped around my foreskin.\n\nOn the far side of the wall, I was having a difficult time maintaining my composure. The nuns' tongues felt so incredible on my body. That is not to say I was still nervous. As the women played with my cock, the nerves that had prevented my cock from hardening seemed to dissipate. My breathing slowed slightly, though my heart continued to pound. My body still felt warm, but my stomach settled. I felt my cock stirring, growing hard against Ikiy\u00fczl\u00fc's lips, stretching against her fingers. I just enjoyed the sensation and my mind ceased to dwell on the fear and the anxiety I had felt before. \n\nHowever, that relaxation was, in itself, a danger. I felt a moan erupting from my throat and wanted nothing more than to let it free. But I knew that was wrong. I bit so hard on my lips that I feared that it would bleed. My cock was nearly full erect now, my foreskin pulling back across my tip. Now Ikiy\u00fczl\u00fc's tongue was better able to explore my cock. I tried to close my eyes, to avoid watching at the pretty young nuns massaged my cock with their mouths, but I found it impossible to look away.\n\nAnd so I watched (and felt) as their ministrations became more intense. Now that my cock was fully erect, Ikiy\u00fczl\u00fc's fingers slipped off of it. The tip of my cock was still firmly planted in her mouth. She looked up briefly, just flicking her eyes towards the top hole. Her lips spread in a sly smile, my cock planted directly in the middle of it. She reached up with her hands and pulled her hair out of her face. Then, slowly, she began to slide her lips forward. She kept her eyes open as she did, looking up along the wall. I watched as her pink lips slipped over my engorged shaft. Inch by inch, I watched as my cock disappeared into Ikiy\u00fczl\u00fc's mouth. The sensation was divine, her tongue swirling around and tasting my shaft, her cheeks tight and hot against my skin. Occasionally, her tongue would dip out of her mouth and play along the underside of my cock, bathing it in her saliva and lubricating my journey into her throat.\n\nRahibe's actions were no less enticing. Despite the fact that my balls were, apparently, quite large, the nun was unwilling to lessen her ambitions. I felt her tongue slide out of her mouth, underneath my balls. Soon, I felt rubbing against the soft skin of my scrotum, bouncing my other ball. With the side of her tongue she tried to tuck my right ball into her cheek. Finally, she realized they were too large and I felt her hands on my balls. For a moment, she slid my right ball from her mouth and I felt the cool air against it. I felt my legs tremble and again resisted a moan. She squeezed my balls slightly (a little wince of pain), but I felt her lips against them. In a moment, I could feel both balls, together, entering her mouth. Her lips felt tight and there was a slight pain. But after a moment, she gave my scrotum a gentle nudge and my balls poured into her mouth. I felt her hot, tight cheeks wrap around them and her tongue exploring the space between them.\n\nI could scarcely believe it when I realized what the two nuns had achieved. I felt, rather than saw, their lips meet near the hole in the wall. My cock was buried all the way into Ikiy\u00fczl\u00fc's throat. I could feel the muscles pulsing around it and her tongue rubbing against the bottom. At the same time, Rahibe's mouth had completely engulfed my balls. She was pursing her lips, pushing them up towards my shaft. That is where their lips met partially; in an unholy (according to my understanding of Tanri) kiss. My cock and my balls were completely within the mouths of the two young nuns and their tongues moved around furiously. I could hear them both choking slightly on their respective tasks, but they kept at it. \n\nAfter a few moments, Ikiy\u00fczl\u00fc slid her mouth backwards, exposing my wet cock to the air. But she kept the tip in her mouth, swirling once around it, before plunging my cock back into her throat. She moved very quickly, bobbing her head up and down on my shaft. The sensation was intense and disorienting. Rahibe's motions were less manic, but no less extreme. She moved my balls around in her mouth (extremely carefully around her teeth), letting her tongue caress every inch of me. I felt her nose press into the small amount of flesh above my cock that poked through hole. Occasionally still, her lips and Ikiy\u00fczl\u00fc's lips would meet. \n\nOn the far side of the wall, I was losing control of my mind. I had only placed my cock through the wall in order to prevent the calling of guards. I had tried, in the seconds during which I made the decision, to prepare myself for the awkward fumblings of a couple of nuns. I expected something that felt much like Arkadas touch of the day I exposed myself to the Peers. Nothing could prepare me with the overwhelming erotic skill with which Rahibe and Ikiy\u00fczl\u00fc assailed my body.\n\nI pressed my whole body against the cool rocks of the wall, trying to soothe the unbearable tension. But it was like all my anxiety and fear in the days since my coronation had suddenly found a release. I had been under such immense pressure, the pressure of centuries of Imperial Rule coming to a crushing end, and had ignored that pressure (and my more common sexual desires) in the interest of deep focus. Now, these nuns had broken something open. Rather than pacify me, the hard wall added to my dilemma. \n\nIf felt the rough coolness of the wall against my thighs, my stomach, and my face. My breasts scratched softly against the rock and my nipples pressed against the wet coolness of the mortar. I reached my left hand up, covering my left breast with my palm and feeling my hard, cool nipple against the skin. My right breast continued to press into the wall, and I could feel reverberations from the sensation running down the small of my back. My cunny was dripping wet and I felt it rubbing against the smooth, cool surface of the hole and dripping back down into the passage.\n\nIt was now impossible to deny that I had been aroused by these saucy nuns and their dirty talk. My heart had been fluttering from nerves, both from the pickpocket and the possibility of discovery, but no one had twisted my arm either. I could have tried to flee. I could have done something different. I had been more than willing to jump up against the wall, to feel the touch of Rahibe and Ikiy\u00fczl\u00fc. And I was enjoying it. Perhaps a little too much.\n\nAs the nuns continued to suck and lick at my cock, I found my body shaking wildly against the wall. My hand squeeze hard against my breast and my teeth bit into my lip. But despite all my efforts, I could feel the desire to moan overwhelming me, the desire to make some kind of noise to acknowledge the intensity of what I was experiencing. I knew that this would be dangerous, and fought against it will all of my might. I shook my head and tried to focus on something, anything else. I fought my urge as long as possible, but finally, I could not hold it any longer. I felt it welling up from my stomach, rising up through my throat. My mouth opened.\n\nAnd was filled quickly with the taste of leather. I pulled my eye away from the hole in the wall, confused. Rahibe and Ikiy\u00fczl\u00fc were still sucking away at my cock, but the tension had lessened slightly. I looked to my side and saw the pickpocket, standing next to me. Her robe was billowing more than before and I realized quickly she had removed her belt and stuck it into my mouth. She was staring at me intently and leaned in towards my ear.\n\n\"Sultanah Varis,\" the pickpocket whispered quickly, apparently figuring out who I was, \"I apologize for my forwardness. You are doing well and saving up both. Bite down hard,\" she said, looking directly into my eye. Her hand moved up and my body trembled as it lay against the small of my back. Her hand was warm and soft (supple, I supposed, as befits a thief) and she rubbed gently, soothing. In this way, I was able to keep myself from crying out. And I received further assurances in the favor of Gunes. I returned my eye to the hole in the wall, though part of my focus remained on the hand of the pickpocket.\n\nI bit down hard on the belt, and further stifled any need for noise. But that did not change the fact that my cock was deep in Ikiy\u00fczl\u00fc's mouth and her throat was squeezing tight around it. It did not lessen the slick, velvety feel of her wet tongue against the bottom of my shaft. Nor did it eliminate Rahibe's hot lips wrapped tightly around my balls. Their tongues moved more and more quickly all the time and Ikiy\u00fczl\u00fc's head bobbed up and down on my cock with increasing speed.\n\nThe room was filled with the slurping sound of the nuns' mouths. I could hear dribbles and drabs as their saliva dripped from their mouths onto the cold stone floor. I could smell, over the dank mustiness of the corridor, the smell of the nun's cunnies, wet and excited. I likely picked up the scent of my own as well. I could see their heads bobbing and slipping around on my cock and I could make out other, smooth curves of their beautiful bodies. But while I gazed at them, moving like whores around my body, I noticed something behind them as well.\n\nAcemi was watching the entire display without movement. Her hand was up over her mouth and her knees looked weak as she took in everything around her. But the most important thing I could see was her eyes. They were wide with astonishment and twinkled like stars. I could see confusion and disgust in them as befitted her obvious innocence, but something else as well. Back behind her eyes, I could see inside of her. I could see an excitement that she might not have recognized herself. After a moment, her hand moved down away from her lips, and I saw her mouth. It was open wide in shock, but the right corner was pulled back slightly, giving her the appearance almost of an astonished grin. She was shocked and appalled, but also enticed. I was sure she was in absolute turmoil, I had felt it as well. The wickedness of the other nuns, their hypocrisy had infected her, just like Tanri had infected my people. She was losing her innocence and replacing it with desire.",
        "Something about that thought seemed to push me deeper into the pleasures provided by the other nuns, like I was finally understanding the nature of my problem. And it also pushed me over the edge. My cock brushed the back of Ikiy\u00fczl\u00fc's throat and I felt Rahibe's nose press into the base of my shaft. At the same instant, their mouths and throats tightened on me. I think my surprise and confusion with the entire situation had allowed me to hold on longer than I would have otherwise. But all of the sudden the intense pleasure of their mouths on my body because overwhelming.\n\nI felt my balls seize up first, they pulled hard, slipping an inch out of Rahibe's tight lips. I bit down harder on the belt as the tension inside of me reach a new level. My whole body became rigid and my eyes involuntarily slammed shut. I felt my cock quivering in Ikiy\u00fczl\u00fc's mouth. My nipple ached into cold stone wall while my fingernails dug into the flesh of my other breasts. I made a low noise in my throat, low enough that it could barely be heard, but in doing so, I felt the release.\n\nIn one beautiful instant my eyes open, my lips quivered uncontrollably, my throat closed around a scream, my breast pressed harder against the wall, involuntarily, my knees bent, my toes stiffened and the whole world around me went black. I forgot for a moment that I was in the bowels of my enemies' cathedral and being pleasured by their perfidious nuns. I focused only on the pleasure. It was a liquid warmth that swelled from my shaft down into my balls and then spread from there. It was a familiar pleasure now, something I could recall. But, it lost nothing in the familiarity, in fact it was better. It is easy to ignore a hunger when you've never tasted food, but I now had a taste for pleasure and it was overwhelming to have it back. My climax rolled lazily through my body, slow but with unbearable force. It found its way into all of the various crevices and secret places of my body, dousing every part of me, eventually, in a euphoric haze.\n\nAfter a moment contained totally within myself, my vision came into focus. I leaned in more closely to the eye hole in the wall. I saw the result of my orgasm on the women in the room opposite me. Rahibe was still on her knees with my balls in her mouth. I could feel my balls seizing up over and over again in her mouth as my cock spurted my seed. I could still feel Rahibe's tongue against me, lapping at my emptying balls. \n\nMore dramatically, Ikiy\u00fczl\u00fc had fallen backward, away from the wall. She was sitting on her ass with her arms thrown back behind her and her legs spread and bent. Her cunny was lewdly exposed and I believe that even through the barrier of the wall I could smell her wet excitement. Ikiy\u00fczl\u00fc's mouth was open and I could see thick globs of my seed resting on her tongue. A large mouthful, in fact and her tongue and lower teeth were barely visible under the translucent liquid. But that was not all; I had produced an almost unbelievable amount of seed. I could see it on Ikiy\u00fczl\u00fc's face (especially her eyes), dribbling down her chin, in thin streams across her pert breasts and pink nipples, and even dripping down between her legs and puddling on the floor below her cunny. Her eyes were wide with astonishment and she looked completely incredulous.\n\nFor a moment, everything in the room stayed completely still. I could vaguely hear the burglar beside me stirring slightly, but I did not move. Even the slurping noise of Rahibe's efforts slowed as my balls ceased to seize and the last dribble of my seed fell onto Rahibe's knee. She stopped sucking and, in fact, I could feel the cool breeze on my scrotum as she dropped by balls from her mouth. Finally, a large globule of my seed dripped down from Ikiy\u00fczl\u00fc's chin and landed with a splat on the white marble floor. At the noise, Ikiy\u00fczl\u00fc's eyes seemed to come into focus. She closed her mouth and I watched as she swallowed my seed. Her tongue stuck out quickly, scooping up slightly more from her lips and then swallowed it as well.\n\n\"Tanri be praised!\" she said after a moment, \"I have never seen so much seed in my life! And it tastes divine!\" I felt myself blush at the comment, though I could not say why. I noticed Rahibe stirring below me. I watched as she scooped some of my seed off Ikiy\u00fczl\u00fc's leg with her finger and then popped it into her mouth.\n\n\"You are right on both counts Ikiy\u00fczl\u00fc,\" She said, and then more frantically began to collect my seed from her friend's body. Soon Ikiy\u00fczl\u00fc was searching for more was well, lifting her breast as well as she could to her lips and sucking my seed off of her nipples.\n\n\"It is a sin,\" Ikiy\u00fczl\u00fc explained, \"To let any of Tanri's seed go to waste. Sometimes it is a chore, but sometimes, like today it is a delight.\" Rahibe laughed in agreement. I watched, despite the fact that I knew I should leave, with intense curiosity. My spiritual wives, Cin and the others, had devoured my seed as well. But that had seemed less...hungry, more sensual. I watched as Ikiy\u00fczl\u00fc's and Rahibe exhausted the supply of see on skin and ravenously dropped to the floor, actually licking the tile to taste Tanri's seed. It was arousing in its debauchery and degradation.\n\n\"What in the name of Tanri has just happened?\" Acemi said suddenly. I had nearly forgotten that she was there. Apparently, the other nuns had as well. They looked up quickly at the young novice. Her eyes were wide and she was still stuck in place, looking beautiful and innocent. \n\n\"Is that the sound of rebuke in your voice?\" Ikiy\u00fczl\u00fc said accusatorily. She licked up the last of my seed on the floor and then stood up. Rahibe did as well.\n\n\"Your edifice of lies and sharp tongues kept me in check before and...shock kept me silent during your sin. But I cannot ignore what I have seen here. My father prepared me for my induction as a nun since childhood. I have read all of the books of Tanri, I have read the scholars' commentaries. Sexual congress for anyone is a sin and it is banned in all forms for nuns. You have invented a 'ritual' to satisfy your base desires. Or maybe it was not you, perhaps this tradition is as old as you claim, but it still finds no basis in the laws of Tanri. It is in direct contradiction of everything our Lord stands for. You are liars and hypocrites!\" Acemi said boldly, but her body shook as she spoke. For a moment, the other nuns were silent. I wondered if the young nun had shamed them into silence. Then, to my surprise, I heard laughter. Both Rahibe and Ikiy\u00fczl\u00fc began to laugh uproariously at Acemi's impassioned moralizing.\n\n\"A true believer it seems? It think I hear Tanri laughing on the other side of the wall,\" Ikiy\u00fczl\u00fc said between bouts of high-pitched giggling. She placed her hand on her soft breast as she did so. I did not laugh, I watched from the other side, not sure of the reason but unable to look away.\n\n\"You were once as well,\" Rahibe said casually, as her laughter faded. Acemi looked shocked by the fact that her outburst produced no great effect. The weight of her morals and her god's beliefs afforded her nothing. In fact, I could see her resolve crumbling. The things she had believed to be true collapsed around her and her shoulders went limp.\n\n\"I was never that bad,\" Ikiy\u00fczl\u00fc said. Rahibe started to walk toward Acemi now, Ikiy\u00fczl\u00fc noticed and followed her lead. While she walked, she spoke.\n\n\"Be that as it may, Acemi needs, like you once did, to understand the true nature of the world and to be bound more closely to her Tanril Sisters. Despite her more acute case of fanaticism, I think that which cured you will cure her as well.\" Now the two older nuns were standing on either side of Acemi, staring at her. Acemi was looking towards my wall, her eyes glassy and nervous. Ikiy\u00fczl\u00fc smiled and turned towards my wall as well.\n\n\"It appears that Tanri is prepared for that rite as well,\" she said lasciviously. She was staring directly at my cock, which had never truly softened, even after my powerful orgasm. If ever I had wanted to pull out from the wall and run before (as I should have), that option was now foreclosed to me. I was once again called to remain at the wall for some reason.\n\n\"It is truly a miracle!\" Rahibe said with heavy jest on her voice, \"A cock that rises twice!\" Without further word, Rahibe and Ikiy\u00fczl\u00fc began to grab at Acemi's clothing. The younger nun made a few noises of protest, barely above squeaks and not substantial enough to constitute words. It was as though she had expected her anger at their hypocrisy to set them straight and, failing that, had nothing else to fall back on. Her eyes showed innocence, trapped behind chains of fear.\n\nIn a few moments, Acemi's robes lay in a pile at her feet. Her small, pert breasts and youthful, feminine body making her look more innocent, rather than less. Her long black hair tumbled down over her shoulders and framed around her breasts, her nipples sticking out hard in the cooler air of the basement. Or perhaps it was arousal, unbidden but present nonetheless. I knew that feeling, I had once believed my life was destined for celibacy, and I had known the passions that roiled just below the surface, unknown until confronted. Or perhaps, I just wanted to believe that it was there is Acemi as well, an animal need for contact that I now associated with Gunes. I knew since my ceremony with Cin that Gunes lived in that need and its satisfaction, it was the stuff of which she was made. My eye fell to the area between her curved hips. A small, short patch of black hair stood over her cunny. She was too far away, but I thought that perhaps she was wet with excitement. The view did not last long, Acemi threw one arm across her large pink nipples and her free hand over her cunny. I felt my cock growing harder and my cunny growing wet against the hole in the wall.\n\nWhatever the political situation in the city might be, or even my peril in the passage under the Cathedral, was no longer even a shadow of a concern. I ignored it all. I focused on what I was looking at and feeling. Whatever would happen after this would happen, but I was savoring the moment. My body, so long denied, demanded it and my mind, so tired from troubles, was happy to give way. I focused so intently on the three nuns in the room next to me that I nearly forgot about my burglar or even the passage around me.\n\nRahibe and Ikiy\u00fczl\u00fc closed ranks around Acemi. Rahibe was on her left and Ikiy\u00fczl\u00fc on her right. Rahibe grabbed the arm across Acemi's tits and Ikiy\u00fczl\u00fc grabbed the hand over her cunny. Acemi gave a slight struggle but she seemed almost dazed, like she was in some sort of trance now. The older nuns jerked her arms away from her body, exposing her again. They each took her now limp arms and threw it over their respective shoulders. They bent at the knee. Their arms closer to Acemi snaked behind her back well, their outside arms relative to the younger nun grasped her legs, scooping each one under the knee. The two nuns stood quickly now, easily lifting the petite Acemi. As they stood, Acemi's feet rose from the floor. Rahibe and Ikiy\u00fczl\u00fc pulled out slightly on her knee as they lifted, spreading her legs wide.\n\nRahibe and Ikiy\u00fczl\u00fc started to walk towards me. They kept their feet in unison, though they did not seem to need much coordination. Acemi gave them no trouble, she was so delicate that it was as though they were carrying a bird, rather than a young woman. Acemi's eyes looked wild with fright and her mouth was pursed tightly. She shook her head to the side slightly, but did not actually resist in anyway. She could've easily twisted and kicked, made it difficult (likely impossible) for the other two nuns to move. But it seemed she was too broken by the circumstances around her to do anything.\n\nIn a moment, Rahibe and Ikiy\u00fczl\u00fc were standing just a foot from the wall. I looked out of my small peephole at Acemi. She was staring down at my cock, her eyes slightly veiled. Her body was trembling all over and was covered in goosebumps. However, I could now see that her cheeks were flushed, her nipples were taut, and there was a slight glistening between her legs. She was torn between desire and the rejection of that desire and the result was paralysis. This suited Rahibe and Ikiy\u00fczl\u00fc nicely.\n\n\"Tanri, we know from long experience that you prefer the purest brides for your ritual. Look at our delicate flower? Is she not beautiful? And pure as the driven snow?\" Rahibe asked and bit her lip. I took a moment to savor the view of Acemi. I don't know if I was enticed simply by the fact that she was a naked woman, opened for my enjoyment or if there was something more. I don't know if I liked her degradation and the humiliation of her false beliefs. Perhaps a chance to stain Tanri's virgin would strike a blow for Gunes as well. Regardless, I felt my cock quiver and my breath catch in my throat. I found myself pressing against the cold wall eagerly, my cunny rubbing against the barrier. I wanted nothing more at that moment than to look into Acemi's big, innocent eyes while I poured my seed inside of her.\n\n\"Tanri appears to be quite ready,\" Ikiy\u00fczl\u00fc said, looking at my shaking cock. Rahibe smiled.\n\n\"Is our virgin ready?\" Rahibe asked. But it did not seem that they particularly cared about Acemi's opinion. Even before she had finished speaking, the two older nuns were lifting Acemi a little higher and pushed her forward so that her knees were against the wall. Acemi's pink cunny was suspended just an inch above my quivering cock and I could feel the heat of her body.\n\n\"Say a prayer to Tanri, and see it fulfilled,\" Ikiy\u00fczl\u00fc said. It was hard to tell whether she was serious or mocking. Regardless, I could hear the barest whisper of Acemi's voice.\n\n\"Tanri give me strength,\" she whispered.\n\n\"Gunes give us victory,\" I whispered back even more quietly, around the belt that was still clamped tightly in my mouth. As though that unheard prayer was a signal, Rahibe and Ikiy\u00fczl\u00fc started to lower Acemi down onto my cock. After a moment, I felt the warm, wet kiss of Acemi's cunny lips as they pressed against the tip of my cock. It groaned as quietly as possible. Her warmth was overwhelming and I felt the sensation spread down the base of my cock. I looked out of my eyehole and saw Acemi's breasts at eye level.\n\nBut soon she began to fall and I saw her throat, and then her chin. More importantly, I could feel the lips of her cunny spread and I could feel my cock piercing her body. Acemi let out a high groan as the bulbous tip of my cock passed her cunny lips and entered her. I sucked in breath quickly. Acemi's cunt was incredibly tight. As I entered her I felt a hot tightness squeezing around me. I felt her cherry give way.\n\n\"Not a virgin any longer!\" Ikiy\u00fczl\u00fc cried and Acemi let out a low whimper. As if that were a cue, I could see through my hole as Rahibe and Ikiy\u00fczl\u00fc turned their heads quickly towards the younger nun. I watched as their heads tilted slightly inwards and their mouths opened. In a moment, Acemi's nipples slipped into their respective mouths. I heard a slight sucking sound and Acemi gasped. I knew that Rahibe and Ikiy\u00fczl\u00fc's tongues, still coated in some of my seed, were lapping at Acemi's nipples and that their teeth were nibbling on her gently.\n\nBut even as they sucked on the younger nun's nipples, they did not cease to slip her body down onto me. Some of the pressure had given way with Acemi's cherry, but she was still incredibly tight. But she was wet as well, I felt her, a fraction of an inch at a time, allow me to enter her. She moaned and groaned (though I could not tell if she was enraptured or enraged) as I disappeared inside of her.\n\nAfter a few moments, I felt the curve of Acemi's ass press against my balls and then stop. I had completely entered the young nun. He cunny was hotter, wetter, and tighter than I had imagined possible. Even the slightest motion in my body or hers seemed to tighten her around me. I could feel every speck of my cock and the way her virgin body felt around it. My body was aching on the far side of the barrier and I wanted nothing more than to reach through the wall and feel Acemi's soft skin wrap around me. Instead, I moved my remaining hand to my other breast so that I was grasping both of them now. I started to knead my breasts, feeling my nipples against my palms and trying to soothe my passion. \n\nI looked through the peephole and now saw Acemi's face. Her eyes were open wide and she was looking forward, almost directly at me. Her innocence and beauty was even more pronounced here. Her body was shaking, but the look on her face was far from clear. I saw a slightly pained and confused expression, but roiling beneath the surface was something more. I could sense Gunes inside of her, desperately trying to get out.\n\nThis thought took me out of my passive state. I had stood quietly while Rahibe and Ikiy\u00fczl\u00fc sucked my cock and drank my seed, I had watched quietly while they lifted Acemi and placed her on my cock. But now, looking into the nun's eyes, I could sit still no longer. Without thought, I pulled my cock back through the hole in the wall. I felt the cool air on my wet cock and the release of pressure was divine. I felt my balls slip back into the passage. When simply the tip of my cock remained inside of Acemi, I paused for a moment and savored the concentrated pressure. I could hear Acemi panting, I wondered if she wanted my cock out of her entirely, or if she wanted me to put the whole thing back in.\n\nRegardless of her desires, I chose the latter. In a swift motion, I thrust my hips forward. I heard Acemi moan loudly. My cock pushed through her tight cunny, slipping back inside of her body. I groaned as well, feeling it wrap around me once again.  \n\n\"Tanri has grown bold!\" Ikiy\u00fczl\u00fc exclaimed, pulling her head briefly away from Acemi's breast. I heard Rahibe groan and the vibrations from her voice seemed to made Acemi shake. Her trembling squeezed my cock tighter. But I was not content with mere vibrations. The feeling of slipping my cock in and out of Acemi's tight cunt was too delicious to do just a single time. \n\nI squeezed my breasts harder and pulled my cock out again. Just as I reached the point where only the tip remained, I slammed it back home into Acemi's cunny. Acemi had sucked in sharply when I'd pulled my cock out and moaned loudly when I returned it. But the moan she gave now was different than her earlier noises. This was not pain or anger. This was more primal. It was pleasure. Acemi moaned like a whore.\n\nAfter that, I could not control my body if I desired it. My cock once again slipped out of Acemi's cunt and them pressed back into it. I began to pick up my momentum, slipping my cock in and out of the young nun's body as quickly as my hips would allow me. I moved faster and faster as Acemi's cunny grew wetter and wetter from her arousal. Though it became easier to get inside of her as her cunny began to drip, she was no less tight on the first thrust than the thirty-first. \n\nWhile I thrust into Acemi, I kept my eye tight to the peephole. I could see Rahibe and Ikiy\u00fczl\u00fc's heads moving around on Acemi's breasts as they licked at her nipples, I could see Acemi's eyes staring with wanton abandon at the wall, her long hair thrown back. I could hear Acemi's loud moans which grew more and more impassioned with each thrust. Whatever she would feel about this encounter when it was finished, she was totally within the moment at that time. She screamed out Tanri's name and groaned out her most obscene desires. I could hear the slurping sound of the older nuns' tongues and their giggles as she did so. I could also hear my own panting in the echoing confines of the passage. I could smell the musky aroma of Acemi's cunt and my own arousal all around me.\n\nAfter a few minutes, I noticed something change. It was, in many ways, imperceptible. Perhaps it built slowly. But after a while, while I grabbed at my own nipples and thrust my hips wildly, I felt Acemi asserting herself. I looked out the peephole and I saw her eyes. The innocence had been completely subsumed by something greater. The spirit of Gunes, the heat of the sun, lust. And I felt her cunny more forcefully. Acemi was thrusting her hips into me! She was forcing herself down from the grip of Rahibe and Ikiy\u00fczl\u00fc. She was shoving my cock deeper into her body.",
        "\"Tanri's bride has finally felt the hand of god!\" Rahibe remarked, feeling Acemi's new interest. The older nuns began to help her. They pulled her back when my cock slipped out of her and thrust her back down hard as I sought to re-enter. The end result was faster, more powerful thrusts. The older nuns continued to suck on Acemi's nipples and her body twisted in their arms as she moaned lewdly. \n\nFor several minutes, this motion continued unabated. I moved my hands off my breasts, letting my nipples fall against the cold stone. I placed my hands on my hips, panting with exertion as my hips continued to pound into the wall. Rahibe and Ikiy\u00fczl\u00fc continued to lift Acemi up and slam her down hard on my cock. Acemi's cunny squeezed my aching cock tightly. I felt my balls sagging as they filled with new seed. My head felt light and my body felt weak. I did not think that I could continue to move, but still the sweet release from tension I needed did not come.\n\nIn fact, that pleasure found Acemi first. I felt her motions grow more frantic and her eyes looked more unfocused with each passing second. Finally, Rahibe and Ikiy\u00fczl\u00fc gave her a final hard thrust down onto my cock, their mouths slurping loudly on her nipples. I felt something different, even as my cock slipped deep inside of her. It was tighter than before, rippling. I heard her screaming now, not in short bursts as before but in one long, sustained screech. Her body was shaking wildly and I could feel it through the wall. Acemi was reaching a climax. I thrust my hips out hard, burying myself in Acemi finally. Rahibe and Ikiy\u00fczl\u00fc sensed what was happening, and kept Acemi hard against the wall.\n\nAcemi's contracting cunny finally provided the relief my thrusts would not. I felt her cunt squeezing on me, trying to milk me of my seed. Finally, my body obliged. The relief I felt as the tension crested is indescribable. My breath was coming in ragged gasps. It wasn't so much that I felt the warm pleasures I had felt the first time, now I felt supreme relaxation, like a hard day's labor come to a satisfying end. This relaxation rolled from my cock all throughout my body.\n\nWhile this occurred, I was acutely aware of my balls seizing up against my body. I could feel the vessels in my cock contracting. The seed poured from my cock so rapidly that I could feel the pressure as it sought to overwhelm my capacity. I felt my seed entering Acemi's tight cunny. It was already so constricted that I felt like her body would be unable to take it, but it just kept filling her. She groaned and twisted, but kept pushing her hips into me, willing more and more of my seed into her body. \n\nFinally, I felt my cock give one final twitch and the last of my seed spilled into Acemi. I became aware that I had started holding my breath over the last several seconds. I was already light headed from exertion and beyond the breadth of my stamina. I stumbled back slightly. I felt my cock finally slip out of Acemi's cunny. I could feel my seed spurt out as that happened and I heard Acemi gasp. But by then my struggle was merely to stay on my feet. But, in that, I failed. I fell back into the passage, onto the floor on my ass. I let out a low groan as I landed, sucking in air like a beached fish.\n\nMy mind was still focused on one thing: the actions of the room beyond. I could not have stood at that moment if I had needed to, my legs were made of jelly. But I was able to pull myself quickly up onto my knees. I fell, rather than leaned, forward against the wall once again. I placed my eye against the larger hole, where my cock had been. The scent of my cunny (and Acemi's) was overwhelming in that location. But I was focused on the sights, wondering what had happened after I filled the young nun. \n\nIt had only been a few seconds since my eye had moved from the peephole, but already the women had moved. If I had been shocked and surprised by the nuns when I had first arrived at this place, I was absolutely dumbfounded by what I saw now. Rahibe and Ikiy\u00fczl\u00fc had set Acemi down on her back on the floor of the cathedral. Her legs were now spread very wide. The two older nuns were kneeling between her legs, their heads pressed against her cunny. I could see their bodies writhing and I could hear a significant slurping and sucking noise. Rahibe and Ikiy\u00fczl\u00fc were fighting over my seed! They were licking it from the insides of Acemi's legs and sucking it out of her cunt. I could hear them moaning with pleasure as they sucked it down. The two older nuns jockeyed for prime position between the young novice's legs, contesting with one another for the choicest location. \n\nI looked up towards Acemi's face, wondering what the pious nun thought of her sister nuns' action. Acemi's eyes looked glazed, but a slight smile was formed on her face. She writhed slightly as their tongues moved about on her cunny. I could see her breasts rising and falling rapidly as she panted. After a few moments, I watched as her hands rose slowly from her side. Her palms landed down her own nipples, pressing against the spit-shimmering skin. She moaned loudly as her hands grasped around her own breasts and her palms rubbed gently on her nipples. Whatever resistance Acemi had was completely broken. She was just like the others now.\n\n\"Stop staring you fool...or grace. We don't have time, we should leave while we can,\" I felt a tugging on my arm and turned to look. The thief. I had nearly forgotten she was there. Her face was still exposed and her eyes looked tight and tense. I shook my head violently, coming out of what felt like a trance. I looked around the darkened chamber and remembered who I was and what I was doing. And I thought of something else as well. In an instant, a stroke of inspiration, the provenance of which I could not but guess.\n\n\"Do you know how to reach the clock?\" I asked as I stood, grabbing quickly at my clothes.\n\n* * * * *\n\nI heard the bell calling once again, this time heralding the six o'clock hour. I was standing in the square, in the exact location I had been one hour earlier. The crowd in the square was larger this time. Those who still worked were now off and they had come to witness the hourly prayer to Tanri. All eyes turned to the door as nuns and monks began to walk out slowly and solemnly (some of them, perhaps, covered in my seed). Already, people were dropping to their knees to pray to the God of chastity and self-discipline.\n\nMy time in the passage below the cathedral with Soyguncu (for I had learned that this was the name of the pickpocket) had been, amongst other things, instructive. When I had stood in the same spot an hour previously and looked up at the beautiful, forbidding cathedral I had felt the power of the place as symbolized by the massive structure and the weighty symbols. I had sought the power behind those symbols, to find a way to undermine it.\n\nWhen I pulled my eye away from the hole in the wall in the basement of the cathedral, I had realized that I had been looking for an illusion. Tanri was, and always had been, a false god foisted upon my people by foreigners. There could be no power in this place because any power had to come from Tanri. I had stood in for Tanri in a ritual and I had not felt him. All I felt was the hypocrisy of a religion that taught self-discipline and celibacy but found elaborate means to avoid practicing what it preached. The only God I could feel while spilling my seed on three of Tanri's \"virgins\" was my God Gunes, a true God. If Tanri had been a true god and believed the tenets of his own faith, he would have cast down the church that bore his name for betraying his legacy. He would have behaved as Gunes had when we turned our back on her, destroying to teach submission. Instead, Tanri's church had plodded along, sapping the strength and wealth of my people.\n\nI could not deny that the Cathedral in the square, and the church it represented, had power. I could feel that power in its symbols, its icons. But I now recognized that these symbols were its power. Just as the nuns seemed pious on the surface but were hypocrites in their souls, the symbols of the cathedral shone forth on the outside, but were hollow within. The symbols and the chaste nuns hinted at a power that did not exist, and tricked my scared people into believing the lie. But I had seen past that now, I had seen what the church truly was. And in so learning, I devised a method to enlighten my people.\n\nI glanced quickly up at the clock once again. The large, pacific blue gem stared down at me. I tried to strain to see any indication of change, but it was too far to tell. I thought, for a moment, I could see someone moving in the shadows, in the eaves to the left of the clock. The clock was still ringing and the nuns and priests had formed their semi-circle before the door. They were not yet looking up.\n\nThe third strike of the bell. Now I saw a black figure slip out from the eaves. The figure moved very slowly, keeping low against the ledge below the hands of the clock. I looked around nervously. The crowd was looking and the nuns or at the doors and seemed not to notice. The figure was very small from down below and I doubted I would have seen it, save for the fact that I expected it there.\n\nThe fourth strike of the bell. The black figure had crept all the way out so that it was laying below the gem in the center of the clock. In a half instant the figure rose, just to the left of the gem so that it did not obstruct the view. The figure held a vessel in its hand and it quickly upturned it on top of the gem. I could see some liquid pour from the vessel, but once it landed on the gem it became invisible. I ventured to look again at the crowd. I felt my heart pounding wildly in my chest, my mouth was dry, and my stomach was in knots. This was the riskiest moment, and discovery would be fatal. I heard the crowd mumbling slightly, but only as they had mumbled before, reverent for Tanri.\n\nThe fifth strike of the bell. The black figure dropped quickly down onto its stomach once again, clutching the vessel closely in its hand. It crawled quickly back toward the eaves from whence it had come, never rising or exposing anything but a dark tunic in the rapidly dying light of evening. I breathed easier now and my stomach eased. I was not completely at ease; the ultimate act was still to come. But I felt almost certain now in the red evening light of Gunes that the attempt would be a success.\n\nThe six and final strike of the bell. The dark figure had returned to the darkness of the eaves. But I could see a slight light in the darkness beyond. As the reverberations from the bell continued, I something fly from the darkness, tossed by the hand of the figured. A ball of oily rags, set alight flying across the sky. The ball was very small, no larger than a turkey's egg. The wind whipped at it as it flew through the air, almost extinguishing it (and, luckily, making it almost invisible from view below). I held my breath and said a silent prayer to Gunes. Just as the bell ceased to vibrate, the ball of rags struck the doused gem.\n\n\"Glory be to...\" the voice of the nuns and priests began the ritual start of their prayer. I took a step forward into the crowd. I tossed back the hood on my cloak, exposing my face.\n\n\"Gunes be praised!\" I yelled at the top of my lungs, \"The gem!\" The nuns and priests ceased their prayer in shock at my outburst. All eyes in the area quickly extended up towards the gem in the center of the clock. The crowd gasped in unison. The perfectly smooth blue ball seemed to have disappeared entirely. Replacing it was a jagged, red and yellow ball of fire in the center of the clock.\n\n\"The Sun of Gunes shines forth from the usurper's Cathedral!\" I moaned in agony, \"Gunes punishes us for our lack of faith, failing to remain steadfast and for following a false God. But Gunes has remained in this city despite our perfidy! In her infinite wisdom she offers another chance.\" I dropped to my knees and stared up at the glowing red ball. At that moment (though I could not have planned it if I tried), the sun sank down in the sky on its descent so that it seemed perched on the top of the spire. Two suns, one on earth and one in heaven, the sun God and her vicar.\n\n\"It is the Sultanah!\" I heard some voices call in shock, \"She brings a miracle!\"\n\n\"Gunes save us!\" others called in response. Soon, all around me my people were dropping to their knees and staring up at the fiery ball. There were no abstainers now, save the nuns and priests (who stood in mute, shocked silence, tears of rage in their eyes). All knelt before Gunes. I could hear their prayers all around me. \n\nI looked up again at the burning stone and then turned my eyes towards the darkness of the eaves. I could just make out the sly smile of Soyguncu in the shadows. I resisted the urge to smile back at her. She had known the way to reach the clock, she had known a place to find oil and rags, and she had known how to get me back in the square with a few moments to spare. She was loyal to her Sultanah, loyal to Gunes, and more than willing to do anything to undermine the hypocrites of Tanri. She would be richly rewarded.\n\n\"Gunes is the true God!\" I heard voices clamoring. I drop my head as the others did and for a long while, simply breathed and felt relief that my gambit had seemed to pay off. I had taken his stone; I had defeated it with a more powerful symbol, infused with the reality of Gunes. Only time would tell the scope of my victory. But I felt a lightness in my heart that I took for a positive omen.\n\nI felt no remorse for my deception, as I heard the people clamoring to abandon Tanri. It was true that Gunes had not directly caused the ball to light aflame. But was I not Gunes' representative on Earth? Had I not made it happen? Besides, if it turned my people from the false and harmful God to the true path, could it possibly be a deception? Tanri was an empty concept; his power came solely from symbolism. \n\nEven as I was justifying my actions, my eyes rose and I felt the breath catch in my throat and my eyes fill with tears. There had been little oil on the stone, only as much as Soyguncu had been able to carry quickly to the apex of the cathedral. It had quickly burned through its supply. But now, in the fading of my manufactured miracle, I saw something more substantial. An actual miracle.\n\nThe beautiful, blue ball that had stood for centuries as the symbol of Tanri had been changed. But not in the way I suspected. I had anticipated that it would be charred and black when the burning completed, a symbol of the fires eating up the false god. I was shocked to find something else entirely. The ball was just a clear as before; it sparkled just as brightly in the dying light of the day. No soot marred its beauty. But the blue color had been entirely eradicated. The ball was a deep, dark red. The color of blood. The color of Gunes!\n\nI closed my eyes and bowed my head, now with real rather than affected reverence. I could not explain this miracle. Gunes had entered the Cathedral with fire and filled the empty symbol with her power. I could not think about what that meant in the moment. I could only cry and feel the warmth of euphoria as it filled my soul.\n\nEnd Chapter 3\n\n*****\n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. Especially on a massive project like this, it took a year to write and could take longer to edit. So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks.\n\nYKN"
    ],
    "authorname": "YKN4949",
    "tags": [
        "oral",
        "tranny of female",
        "epic",
        "medieval",
        "reluctant",
        "gloryhole",
        "serial",
        "orgy",
        "cum fetish",
        "shemale of female"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-sultanah-ch-03"
}