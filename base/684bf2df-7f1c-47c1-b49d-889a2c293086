{
    "title": "Senior Year Memories Ch. 30",
    "pages": [
        "(Usual Disclaimer Time: Even though this story almost entirely takes place in a high school setting, all the characters in this story are 18 years old or older, and since we're living in the wide wonderful world of porno-land here, where clich\u00e9s roam free and things might get a little unrealistic from time to time, please remember it's all in good fun. This story is highly serialized, and though it's not 100% necessary to have read the whole story up until this point to enjoy the content of the chapter, it's definitely advisable to understand some of the ongoing plots.)\n\n(Author's Note: I know it's been a while, but I wanted to thank you for your patience while I dealt with some necessary issues while battling my writing burnout. I hope this chapter proves worth the wait. On top of everything else, I want to give special thanks to fellow Literotica author and SYM reader Lil_kitty for many excellent ideas and acting as a second set of eyes on this chapter, for letting me know what did and didn't work and that I wasn't completely crazy for how long this chapter turned out to be. Thank you very much!)\n\nPreviously, on Senior Year Memories: The first week back after winter break has been busy for 18-year-old Ryan Collins, from a quickie in the library with slutty library aide Marie Halpern, to the curious affections of many of the school's female teachers, and the challenges of balancing tutoring three of his classmates. Much of this came to a head at the offices of the school's newspaper, when Ryan chatted up beautiful and kind assistant editor Nica Dubois. Though their conversation started with working on Ryan's articles, it soon progressed to hot sex in the dark room, where Ryan was happy to help Nica face some of her demons about sex. Returning home, Ryan was surprised to find bubbly blonde cheerleader Brooke King waiting for him, and even more surprised that she was there to profess her love for him, made more complicated by Ryan's love for her and for his absent girlfriend, Josie Wong. With an uncertain future, Ryan has much to consider.\n\n***\n\nWhat do you do when someone tells you they're in love with you?\n\nWell, in the ideal event that they're someone you want to be in love with you, you tell them you love them back, cheer, and reap all the rewards that come with having someone you love love you back.\n\nIf it's someone you'd rather steer clear of, then let them down however you can and get as far away as you can before things get any worse.\n\nThese are the kinds of situations our parents tell us about, the ones movies and songs and epic poems are written about. They don't tell you what to do when someone tells you they love you when you're in love with someone else, especially when you love them too.\n\nThis is why I had trouble sleeping the night after Brooke King told me she loved me. The blonde cheerleader with the ever-present pigtails, a love for the color pink and one of the freakiest minds I ever knew when it came to sex had slowly become my best friend over the past few months, and my feelings for her had only gotten more confused as the year went on. Before this year, Brooke was one of those people I'd just never talked to, we were just so different, but with this being the year of one thing leading to another, this was where I was stuck.\n\nI loved Brooke, that much was clear. I also loved Josie Wong, my beautiful and equally dirty goth girlfriend. I hadn't seen her for weeks since she left with the rest of her family to visit her sick grandmother in Hawaii, and maybe that had weakened my resolve, made it more possible for me to follow up on bad instincts.\n\nThis didn't feel bad, though. That was the fucked-up part of it, I think. Loving Brooke felt every bit as natural as loving Josie, but it was still undeniably a problem.\n\nLying in bed, wakefulness came upon me slowly as I came to the morning after I found Brooke sitting sorrowfully on my front porch. I had flashes of the night before, of pleasure and melancholy as Brooke and I talked, then had sex, then talked some more, then had more sex before turning in for the night curled up next to each other in bed. I'd hoped that between the two of us that we'd be able to put something resembling a plan together, but this was uncharted territory for both of us.\n\nI tried to focus on the brighter moments of that night, of the way Brooke's face looked when she came while riding me, how utterly tight she felt as I took her from behind, but the reality of what we faced had a way of intruding into the fantasy that there was nothing amiss in our world.\n\nI didn't want to fuck anything up. That was the long and the short of it. I didn't want to fuck anything up, but it felt like I had no choice that wouldn't fuck things up for someone. I had this image of teetering on the edge of a cliff, just waiting to go over and lose the best people I'd met this year. I didn't want to do that. I just wanted everybody to be happy, but that just didn't seem to be in the cards, and in a year where I'd already had the fallout of what happened with Rachel and Tori I was not looking forward to another disaster.\n\nUntil then, I could still wrap myself in the warm and comforting blanket of denial. Denial, and Brooke in the bed next to me. Just being around her always had a way of lighting up my life in the past, and her being here now was the only thing keeping me from losing my mind.\n\nThere was shifting in the bed next to me, enough that I was stirred closer toward consciousness. I rolled over, hoping to wrap an arm around Brooke, but found her side of the bed strangely empty.\n\n\"Brooke?\" I muttered, wiping the sleep from my eyes.\n\n\"Not even close.\"\n\nThat voice snapped my eyes wide open. It was impossible, it had to be a dream, but if it was a dream it was the most vivid dream I'd ever had. I looked around the room, caught her sitting on the edge of the bed. In my waking state, she was a dark angel, dressed from head to toe in a long black coat, with choppy, jet black hair cut back to the same pixie length she had when I first met her and a pale face. Her lips, painted black, curled in an amused smile at me.\n\nJosie.\n\n\"You're real,\" I said in wonderment.\n\n\"Uh, last time I checked, yeah, I was real,\" she said, scooting a little more in my direction.\n\nI sat up and, overjoyed, instantly leaned into her and hugged her tightly. She hugged me back enthusiastically. \"Why didn't you tell me you were back?\"\n\n\"It's called a surprise, and I wanted to drop a big one on you,\" Josie said, kissing me. Fuck, I'd forgotten how good it felt to kiss her. Part of it felt grim, like I was betraying her by not being completely honest right now, but it felt too good to tell her right now.\n\n\"Mission accomplished,\" I said.\n\n\"I thought you'd think so,\" she replied, smiling. \"You know, I've really missed you.\"\n\n\"The feeling's mutual,\" I said, wanting to keep the conversation flowing. \"How's...?\"\n\n\"Grandmother? Recovering, but well enough that she can take care of herself with the help of her local friends. She's a tough old lady,\" Josie replied.\n\n\"Good,\" I said, dancing around a subject that was coming into much clearer focus whether I wanted it to or not. I had a hard time meeting her eyes, something she caught on to quickly.\n\n\"Brooke's not here,\" Josie said, her tone cautious. \"But she'll be back in a little while.\"\n\n\"She will?\" I asked, confused and more than a little frightened.\n\n\"My family and I, we got in early, and I came over as soon as I could so you and me could... reconnect. I found Brooke getting ready to go out for a jog, and... well, we got to talking,\" Josie said.\n\n\"Oh?\" I asked, feeling as if my heart was beating so hard it might explode. \"And what did you talk about?\"\n\n\"You know, girl stuff, this and that,\" Josie said. \"And about how she loves you, and you love her, and how bad she felt about all of it with you and me.\"\n\nThat was it. That was the sound of the other shoe dropping, the sound of my heart exploding, the sound of everything in my life falling down around me.\n\nFuck.\n\nI started, \"Josie, I can-\"\n\n\"Ryan, if you tell me 'I can explain', I'll scream. I'm not here asking for an explanation,\" Josie said, standing up and taking off her long coat. She wore her usual outfit of a dark, tight tank top that showed off her nice round tits, short black skirt, fishnets and boots. Her pale, perfect skin with her slight collection of tattoos and strategic facial and navel piercings was on full display, enough to get me a little hard. If I'd been any less terrified, I might have asked her how she spent a couple weeks in Hawaii without getting a tan, but if anyone knew how to stay consciously pale, it was Josie.\n\n\"You're not?\" I asked.\n\n\"This isn't one of those things that needs... explanation, it needs discussion. Brooke's gone out to grab us some coffee and breakfast, and when she comes back, the three of us need to have a serious talk. I saw that your dad isn't in... should we expect him anytime soon?\" Josie asked.\n\n\"No,\" I explained. \"He's in San Diego getting some of his dinosaur fossil collection appraised; he'll be out all weekend.\"\n\n\"Good,\" Josie said simply. \"Then the three of us can have a nice, long discussion, like adults, about what happens next. Until then...\"\n\nJosie reached down to the hem of her tank top and pulled it up over her head, revealing her bare D-cup tits to me. I knew these breasts well, from the tattoo under her right tit of Chinese characters that said \"If you can read this, then you speak Chinese\", to her pierced left nipple and its shiny metal bar, and whatever timidity my cock had completely disappeared. It was rock hard in all of its ten-inch-long, very thick glory.\n\nJosie undid her leather skirt and dropped it to the floor, revealing a similarly dark thong. \"...we've only got a little while before Brooke comes back, and I want you to fuck the shit out of me before she does, okay?\"\n\nI gulped, but I couldn't be tempted away from an offer like that. \"Okay.\"\n\n\"Good,\" she purred, crawling up over me on the bed, kissing me and giving me full access to her body. I ran my hands over her perfect tits, squeezing them, massaging them, running my fingers over her hard, dark nipples and enjoying the way it made her groan. My hands quickly moved on though, finding her round, full ass and latching on, squeezing what I knew to be Josie's favorite part about herself.\n\n\"Oh, you've missed that ass, haven't you?\" she said, reaching down under the blanket, one of her small, strong hands snaking underneath my underwear and grabbing my cock. \"I've missed this, too.\"\n\nShe pulled the blanket back and tore my underwear down in one smooth move, leaving me naked in bed, and her most promisingly in her thong, fishnets and boots almost on top of me.\n\n\"Lie down,\" she commanded. Missing her so badly she could've gotten me to do pretty much anything now, I did as she said. She crawled up on the bed with her knees beside my head and turned around, then straddled my face. Her amazing ass was above me, the only thing between my lips and her mouthwatering asshole a thin strip of fabric.\n\nReaching back to pull the thong aside, Josie revealed her tight hole to me and said, \"Open wide...\"\n\nJosie sat down, settling her weight on my face and her asshole on my mouth. Having been in this position plenty before and absolutely loving being back here, I dove in without hesitation. My tongue worshipped her tight hole, licking and sucking, probing inside. Sharing a bed with her like this, even if it was so abrupt and unexpected, was something I couldn't even begin to describe how happy it made me.\n\n\"Fucking hell, I've missed this,\" Josie said, writhing around on my face. I reached around front and began to finger her pussy as she rode my face. She was wet, and I hoped to get my mouth on those lips sooner rather than later, but I knew better than anyone that when Josie set her mind to something, she was going to get it.\n\n\"You and me, we've been fucking around like crazy while we had an ocean between us, but it's not the same, is it? You went to an orgy, I got gangbanged, but at the end of the day it's just not the same as being here with each other, is it? We're just two perfect little sluts, made for each other and best when we're together, but better than that, we actually like each other, too. Do you have any idea how hard it is to find a guy you're sexually compatible with when you got a sex drive and imagination like mine, *and* like to hang out with too?\" Josie asked me.\n\nI answered her, but the words were probably unintelligible through her ass.\n\n\"What was that?\" Josie asked, distracted. \"Oh, yes, silly me. It's not fair that I talk to you and keep your mouth full, is it? Well, perhaps I should even things up...\" Josie said, leaning down and inhaling my cock to the root. Her shift in position brought her dripping pussy to my face, and I dove in with equal fervor.\n\nNow, normally when I'm in the midst of a 69, I always find it to be a slow, intimate act, the kind that brought two people together on a different level than traditional sex as we focused on each other's' pleasure, but this was different. This was frantic, intense, both of us trying to get the other ready for something we didn't fully know, yet. I tongued her clit hard as she sucked me deeper and deeper, her lips and throat heavenly and oh so tight.\n\nJosie took her mouth off my cock and climbed off of my face. She turned around to face me, still kneeling on the bed and looking down at me.\n\n\"I've missed you, Ryan. I've missed talking with you, being in the same room with you, your cheesy fucking jokes and the way you're still somehow surprised by all the action you're getting this year, which to be honest stopped being surprising a while ago. I've missed this cock,\" Josie said, reaching down and wrapping her hand around my throbbing pole. \"I've missed feeling you inside of me, and how you could make me feel better than any other guy I've ever been with... but most of all I've missed you.\"\n\n\"I've missed you too, Josie. You don't know how much... no, you do know, don't you?\" I asked.\n\n\"I do,\" Josie replied, swinging her leg over me and squatting over my cock. I saw a great internal debate going through her mind as she debated what, precisely, she wanted to do with me, her hand drifting the head of my cock back and forth between her pussy and her ass indecisively. In the end, she decided on pressing my thick head into her pussy lips, groaning loudly as she settled all ten inches deep inside of her sloppy cunt. \n\n\"That's what I'm talkin' about,\" she practically cheered, looking down through the valley of her cleavage at our conjoined genitals. \"That... that is perfection.\"\n\n\"None of the guys at the gangbang this big?\" I teased.\n\nJosie squeezed me with her pussy. \"Most of 'em weren't. One of 'em was close. Another was bigger, I think, but he didn't know how to use it for shit. They were all fun, though.\"\n\nShe began bouncing up and down on my cock, taking much of my cock with each stroke. I'd forgotten how good she felt, and sincerely hoped I'd never forget again, because as ever Josie was absolutely amazing. Tight, hot and so completely enthusiastic, she fucked me as hard as she could without even breaking a sweat, looking down on me with a face masked by lust and love, a sweetness hiding behind a perfectly cultivated dark exterior. If she had a problem with what Brooke had told me, and her, she wasn't letting it show, but if there was a fire hiding in her eye, one that was trying to reestablish a former status quo and remind me of what we'd had before, well I wouldn't have been surprised.\n\n\"I'd tease you, ask you if you had any cunts as perfect as mine, but you'd tell me something about how all the girls out there each bring something special to the table and that you just feel grateful to share this experience with them, wouldn't you?\" Josie asked.\n\nHonestly, I replied, \"Something like that, but if there was such a thing as sexual perfection, your pussy would probably be up there.\"\n\n\"Good non-answer,\" Josie replied, bouncing even harder. \"Motherfucker, fuck I want this, give it to me, fuck me hard! Fuck me harder! Keep fucking me... I haven't cum in days, do it, fuck me, fuck me, make me fucking cum, Ryan, fuck me and make my slutty little cunt cum, fucking... FUCK YEAH, I'M CUMMING, I'M CUMMING ALL OVER YOUR HUGE, FUCKING COCK!!!\"\n\nJosie was good to her word, cumming hard on top of me, a gush of juices from her juicy cunt splashing into my pubic hair. She cried out and cursed, sounding more a beast than a beautiful, sweet young woman as she got out some necessary pressure relief on top of me. She kept going, riding it out even past the point where she should have been putty in my hands, her eyes closed tight with pure ecstasy that threatened to set me off inside of her.\n\nWhen the endorphins finally hit her, she opened her eyes drowsily and looked down at me pleasurably.\n\n\"Okay... so it may have been a few days since I've cum,\" Josie said without any hint of apology. I wouldn't have wanted her any other way.\n\n\"I guessed something like that,\" I replied, smiling and squeezing her tits. She leaned down and kissed me, and I kissed her back. I wrapped my arms around her, holding her close to me while we made out. My cock, still so hard and in desperate need of release, remained buried pleasantly inside of her slick cunt, but I meant to do more than just leave it there.\n\nGently, I pushed Josie off of me and got up on my knees, grabbing her by the hips and rotating her so she was on her hands and knees. Her pussy and asshole were once again temptingly exposed to me, and though I was torn by my choice, I ultimately decided on the easiest path and buried myself right back in her pussy.\n\n\"Awww, I wanted you to fuck my ass,\" Josie pouted.\n\n\"In time,\" I said, grabbing her hips as I began to fuck her properly. \"There... there is time, right?\"\n\n\"All the time you want. I'm not going anywhere,\" Josie said.\n\nThat comforted me, even if there was something in her tone I couldn't fully read.\n\nWhile she may have ridden me with a sense of sexual desperation, now that I was behind her it was my turn to do the same. I had missed Josie for the weeks that she was gone, and needed her more than I knew. My hips were a blinding blur as I drove into her, fucking her with everything I had and some of what I didn't have. Her pussy gripped my cock and held me in, which was necessary given the wild pace of my thrusts.\n\n\"That's it, that's what I've fucking needed, come on, fuck me, fuck me harder, keep fucking that slutty little cunt until you've filled me up with everything you've got!\" Josie wailed, dropping from her hands so she could reach back and finger herself while I fucked her.\n\nI was less eloquent, breathing heavily and grunted as I gave my girlfriend everything I had, fucking her down into my bed as we reached our natural and utterly messy conclusion.\n\nNeither of us could last very long like this. Josie came first, once again, crying out into my mattress as her pussy clamped down on me and set me off. I slowed my pace so I could fill her up, but as I came and came hard, it felt like she'd drained every drop of fluid, every ounce of my being, from my body.\n\nPanting from the exertion, I finally pulled my cock from her sopping cunt, unleashing a small river of juices onto my comforter. I'd have worried about this, but I was more concerned with not falling down on top of Josie. I managed to land just beside her, our faces inches from each other. Her hair and makeup were an utter smeared mess from such an insane fuck, but her smeared lips were smiling with pride.\n\nI returned the smile. \"Fuck, I love you.\"\n\nShe leaned over to kiss me. \"I love you too. That was... wow.\"\n\nI laughed. \"I may have gone overboard. A little.\"",
        "\"Why? To make sure I didn't forget you?\" Josie asked.\n\nThat sounded as good an explanation as any. \"Sure.\"\n\n\"I didn't,\" Josie giggled back, kissing me deeply.\n\nSomeone started clapping. Josie and I looked up toward the doorway to catch the petite blonde figure smiling down at us. Wearing a light pink sweater, a matching knee-length skirt and her hair in her usual loose pair of pigtails, she looked cute as a button and utterly wholesome, though I knew she was far from the latter description.\n\n\"Wow, guys, that was, like, super hot; I think you got me all moist and juicy just standin' here watching,\" Brooke said, squirming around slightly.\n\nSuddenly awkward and uncertain of myself as the reality of the unresolved question between the three of us needed to be addressed, I said, \"Uh... thanks.\"\n\n\"You brought breakfast?\" Josie asked, speaking completely naturally, as if there was nothing strange about this arrangement.\n\n\"Totally,\" Brooke replied.\n\n\"Fantastic,\" Josie said, turning to kiss me. \"Give Ryan and me a few minutes to clean up, and we'll meet you in the kitchen? I'm starving, and the three of us have a lot to talk about.\"\n\n\"Oh, right... okay,\" Brooke said, smiling nervously, then darting down the hallway.\n\nI gulped.\n\nJosie looked at me, kissing me quickly. \"It's gonna be okay. We'll work this out.\"\n\nI wanted to believe her, but a solution that didn't manage to break some hearts seemed impossible.\n\n***\n\nI doubted you could've found two girls at Regan Hills High School with more surface-level differences than Brooke King and Josie Wong.\n\nBrooke was a bubbly blonde cheerleader, Josie was a Chinese goth with a love for photography.\n\nBrooke often dressed in pink, while Josie dressed in black.\n\nBrooke was petite, Josie had killer curves.\n\nI loved both of them, romantically, and I knew that they both loved me the same. At the beginning of the year, sharing a love with one of these girls would've felt impossible, and here I was hoping that I'd be able to juggle both of them. No matter how many times Josie tried to reassure me as we cleaned up and got dressed to join Brooke for breakfast, I was still nervous as I joined the two of them in the kitchen.\n\nBrooke had gone overboard in her breakfast run, getting a bag full of pastries and enough coffee to probably drown all of us three times over. The way her eyes darted from Josie to me, I got the feeling that she was trying to apologize for something, and when she spoke she only confirmed it.\n\n\"I just wanna say, Josie, that I didn't mean for any of this to happen,\" Brooke said quickly. \"Like, I thought I knew what I was doin' when it came to love and sex this year, that I had a good handle on what I, like, did and didn't want to do and who I would and wouldn't do it with, and I thought, like, hey, I'm probably not gonna fall in love, but it would be fun if I did, but I probably wouldn't, so why not have all the fun that I could?\"\n\n\"That was an impressive run-on sentence,\" Josie mused.\n\n\"Hey, we're totally not in class now, I can run-on all I want,\" Brooke snapped.\n\n\"Sorry,\" Josie replied.\n\n\"No, no, I'm sorry, sorry,\" Brooke said, twirling one of her pigtails nervously around one of her fingers. \"I didn't think I'd fall in love this year and that was pretty cool, I'd just have fun with all the girls and boys and keep on keepin' on... and then Ryan got into the picture. I didn't think... ya know, Kaitlyn told me about him, and I didn't think it was possible, but he was fuckin' awesome at fuckin' awesomely, and I thought, cool, I got a new fuck buddy, and that's awesome, but when Ryan and me started hangin' out when we weren't fuckin', I found he was... well, nice. He looked at me nice. He thought of me nicely. More nicely than I think almost any other guy I been with did. We, like, became friends, then you and he got together, and I was so happy because if any guy deserves a kickass girlfriend it's Ryan, and then I got a boyfriend, and things seemed cool... but I never stopped thinking about Ryan, and maybe I got a little jealous, but I didn't want to do anything because I respect Ryan and even though I don't know you too well I totally respect you too, and I thought it'd be cool just being besties with Ryan, but it wasn't just that, I, like, wanted more, so I told Ryan, and... don't blame Ryan for any of this, please? He didn't encourage any of this. This is on me.\"\n\n\"It isn't, Brooke,\" I said, not wanting her to take all the blame when the blame wasn't hers alone.\n\n\"It is!\" Brooke defended.\n\nJosie sipped on her coffee, looking at Brooke with great consideration. These were two people who hadn't had a lot of reason to be in the same room with each other outside of class, but had been thrown together more than a few times this year thanks to me. Whether it was me getting Brooke to help Josie and me with the Halloween Scream, or both of them immediately coming to my side and helping me with my mad Christmas plan, I knew these two had spent some time together, but I didn't know if they'd spent any more time together than we had right now.\n\n\"So, you two love each other? This is a sure thing?\" Josie asked.\n\nBrooke and I looked at each other, then her.\n\n\"Yeah,\" I said.\n\n\"Totally,\" Brooke confirmed.\n\n\"And neither of you tried to hide it from me?\" Josie asked.\n\n\"Not for a second,\" I said. Brooke nodded vigorously next to me, sending her blonde pigtails bobbing.\n\n\"Then you didn't fuck up. You didn't try to go behind my back, you didn't try to fuck around with my head or gaslight me or anything like that... and that's good. I've been on the receiving end of that gaslighting shit before. Jackson really fucked me up and put me in a bad place, and it's not a place I ever want to be again. You came to me, and you told me, and I appreciate that. I really do. I don't... I don't know you well, Brooke, but I know you don't seem bad for a ditzy cheer slut,\" Josie said.\n\n\"Thanks, I get that a lot!\" Brooke exclaimed brightly. \"I don't really know a lot of the whole goth thing, but, it's not hard to tell you're crazy hot too!\"\n\n\"That... wasn't what I was trying to say, but... I'll take it,\" Josie admitted, smiling at the compliment.\n\nI hadn't had to say much so far, and this was probably the main thing that had me hopeful that this was going to end better than expected. If I didn't have to say anything, I didn't run the risk of fucking anything up, and if these two kept getting on like they did...\n\n\"Ryan?\" Josie asked.\n\nWell, fuck.\n\n\"Yeah?\" I asked.\n\n\"What's your thought on this?\" Josie asked.\n\nI looked into Josie's curious eyes, and Brooke's hopeful eyes, and I had absolutely no answer. I had some inklings of some ideas, some hopes and dreams, but stuff that I wouldn't dare hope to bring up and be taken seriously.\n\nSighing, I started talking off the cuff. \"More than anything, I just don't want any of us to walk away hurt. I really don't. I know that you've been badly hurt before, Josie, and I know you've had your share of heartaches before, Brooke-\"\n\n\"Totally,\" Brooke interrupted.\n\n\"-and the less said about the mess with Tori and me, the better. We've all been hurt when it comes to love in the past, and we've all got some love on the line here, and I don't want that to blow up in any of our faces. If we could figure out something that'd work for all of us, I think that'd be best. I just don't know how possible that is,\" I said.\n\nJosie nodded. Brooke blew a lock of hair out of her eyes.\n\n\"Something I want to make clear, is I don't want to make this a competition with any of us. Friendly competitions I can live with, they add some of that spice of life, but when those competitions become unfriendly and nasty shit starts coming out...\" Josie said, looking intently at Brooke.\n\n\"Oh, totally, I hate that catty shit. It's such a bitchy girl thing. I mean, I'm all about being a bitchy girl when it suits, but it's, like, totally tiring and I just can't with it for too long. You don't wanna fight, I don't wanna fight, I want to figure something out that makes us all happy, like Ryan does,\" Brooke said.\n\n\"Good,\" Josie agreed.\n\nBrooke's face brightened so quickly that I could've sworn I heard the ding of the cartoon lightbulb appearing above her head. \"Should we work out, like, a calendar where we can share Ryan? Like, alternating days of the week, or alternating weeks, or-?\"\n\n\"While I enjoy being treated as a piece of meat sometimes, I don't want to be passed around like that. It kinda takes the romance out of things when we're all talking about how to manage an awkward romance,\" I said.\n\n\"Oh,\" Brooke said, looking down sheepishly. \"I'm sorry.\"\n\n\"Don't be. That suggestion was about the closest I had to an idea too,\" Josie said, looking thoughtfully into her coffee as if it had all the answers. Now, while coffee may have the answer to many of life's greatest questions, this just was not one of those times.\n\nI had honestly hoped that one of them would have the idea that would make all the puzzle pieces drop into place, but when that didn't happen, it got me thinking back on a conversation I'd had about a week back. After my encounter with Fatima, I'd talked to Rachel on Skype about the issue I was having with my complicated love life, and after some back and forth she threw out a couple ideas that sounded interesting. They were ideas I hadn't brought up before because I didn't think anyone would go for them, but with the ball firmly in my court now, I knew I had to try something.\n\n\"I think... something we can all agree on, is that the three of us have some fairly non-traditional interpretations of monogamy, right? That even in the confines of a relationship, that we're the kinds of people who couldn't fully be ourselves if we couldn't embrace our less traditional sexual habits, right?\" I asked.\n\n\"Totally,\" Brooke agreed.\n\n\"That's for damn sure,\" Josie said.\n\n\"But I also know, that it seems like we're also the kind of people who want someone we can share that with and still have something resembling, if not entirely closely, an intimate relationship with. Someone we can spend time with without sex needing to be a thing, someone we can hold hands with and tell we love and be loved back, someone we look forward to seeing every day and who we know will be there for us as more than just a friend, right?\" I said.\n\nAgain, Josie and Brooke agreed.\n\n\"Then...\" Okay, this next part was going to be the hard part. I took a breath, and said, \"Then maybe we should consider discussion of polyamory.\"\n\nThis seemed to hit both Brooke and Josie curiously. Josie asked, \"You want to have us both as girlfriends?\"\n\n\"Like a harem?\" Brooke asked skeptically. I had to nip that word in the bud right away.\n\n\"No, no, no, I would never call it that. Harems, they're a kind of ownership of one man throwing his power around a bunch of vulnerable women and that's not what any of us want. No... I was thinking, at least as it was explained to me by one of the wisest people I know, that we should perhaps talk the terms of an open, jealousy-free relationship where the three of us can be in one big partnership together. Maybe one with me as a center if that's what we had to do, but, it'd be really cool if it were one with the possibility where all three of us would be completely equal partners. I won't try to tell the two of you how to feel about each other, and I won't demand that of you, but it was something I wanted to put out there.\"\n\nJosie and Brooke looked at me, then at each other, both of them thinking this over. I don't think it was a matter of the idea being so outside the realm of their understandings, as both of them had a tremendously open view of sexuality, but more a matter of thinking about whether or not they could see spending this much time with each other.\n\n\"It... could work. I'll admit, that I didn't think before this year that I'd ever be with anyone like Ryan, and that's worked out so well so far. You seem a good person, Brooke, and if Ryan believes in you, then I can believe in you. I... I've had problems with cheerleaders in the past, but I think it definitely could work if we tried,\" Josie said.\n\nBrooke squealed with delight. \"You mean it? I mean, you, like, really, truly mean it? 'cause if you do that'd be soooooooooo amazing; I never had a problem with you, and every time I hung out with you this year I thought you were cool and hot and if it means you're cool with me and Ryan and I'm cool with you and Ryan and we're all cool and happy and not hurting or anything then I'm totally, totally, totally one hundred and fifty thousand-million-billion-zillion onboard with this idea!\"\n\n\"Zillion's not a number,\" Josie said.\n\n\"Duh!\" Brooke shot back, tossing her head so both of her pigtails were over her shoulders. \"I know that, I'm not a dummy! But a girl's got a reputation to keep up so people'll continue to underestimate her and so she can surprise them by busting out her non-ditz side, and so, I, like, say zillion.\"\n\nJosie rocked her head from side to side, thinking this over. \"Okay. There's definite potential there.\"\n\nTo say this had gone remarkably well would have been an understatement, mostly because I expected everything to explode. I shouldn't have really worried too much because these were two smart girls I trusted and knew well, but still, it was a surprise. So much I'd hoped not to go wrong this year had found a way of going wrong, and instead of something immediately jumping to the worst case scenario, I should've known some things were actually bound to work out favorably.\n\nI looked at Josie, then leaned over to kiss her. Then I did the same with Brooke.\n\nWithout needing prompting, Brooke then stood up and practically skipped over to Josie's chair, leaning down and kissing her. The two of them kissed for a good, long while, making out not for my benefit but because it was them getting to understand each other on a new level. That didn't mean I wouldn't enjoy the image, but it was a unique form of communication that the two shared well.\n\n\"You're a good kisser,\" Josie admitted, smiling almost drunkenly up at Brooke.\n\n\"If you think that's somethin', you should totally see me fuck! Or, like, actually fuck if you wanna instead of just watching!\" Brooke squealed, looking back and forth from me to Josie so enthusiastically her pigtails swung wildly. \"Are you guys thinkin' threesome? Because I'm, like, so totally horny from watching you earlier and from relief that we're not all fighting right now when we really could be fighting and I sorta expected us to be fighting and I'm thinkin' threesome? Might be a good way to, like, figure out terms and the like like you were talking about, Ryan?\" Brooke suggested.\n\n\"I think you just want a threesome,\" I said.\n\n\"And?\" Brooke asked.\n\n\"Gonna have to say I'm with her on this one,\" Josie said.\n\n\"You are? Sweet!\" Brooke exclaimed. \"Ryan? You down?\"\n\nI might've still been surprised by how this had developed, but I was slowly starting to feel relief and excitement for where this was going.\n\nIt was no longer slowly when Brooke jumped up and sat down on the kitchen table between us. Excitedly, she pulled up her skirt over her thighs and spread her legs, showing us her bare pussy with the light golden patch of pubic hair above it, shaved as ever in the shape of a heart. True to her word, her pussy lips were quite moist and engorged, and were every bit as pink as Brooke's favorite color.\n\n\"No panties?\" Josie mused, staring appreciatively at Brooke's slit.\n\nBrooke giggled. \"So if I'm bein' honest, and I got no reason to be dishonest, I was totally afraid goin' into this, like, totally petrified that everything in the world was about to explode all over us with screaming and shouting and people saying mean things (and mean things totally suck), but there was a teensy part of me that was, like, totally hoping something like this would happen and that there might be happiness and fun and a hot threesome, so... I came prepared, just in case.\"\n\n\"You really are smarter than you look,\" Josie said, impressed.\n\n\"I could've told you that,\" I said.\n\nJosie shrugged, but still didn't take her eyes off of Brooke's pussy. \"I've got some long-ingrained biases about cheerleaders, some of which I might need to check.\"\n\n\"Hey, I had to deal with my biases too this year, so it's cool. And you're not, like, *all* wrong, there's a lotta cunts out there in uniform, but me and my friends, we're most of us good and I'm, like, the sweetest of the bunch. Up here...\" Brooke said, pointing at her head, then dropping her finger toward her pussy. \"...and down here. So I'm told. Ryan?\"\n\n\"It is pretty sweet,\" I admitted, my mouth watering at the sight of her damp lips. No matter how many times I saw them, they always looked so perfect and sweet to me.\n\nI looked at Josie, almost for permission, but when she looked at me as if what I wanted to do was the most obvious thing in the world, I didn't have a problem diving in. I licked at Brooke's pussy as I'd licked at it countless times before, teasing her clit and savoring the flavor of her juices almost as much as I did the squeals of delight she made while I went down on her.\n\n\"Ooh, yes! That is, like, totally awesome! I love you, Ryan!\" Brooke squealed, running her hands through my hair as I ate her out.\n\nJosie watched the two of us curiously, and though I half-expected this to end badly, instead she stood up and kissed Brooke. The two of them made out while I ate Brooke's pussy, running their hands over each other and rubbing their tits against each other's through their tops. As images I'd fantasized about that I never actually expected to see went, this was pretty high on my list, so you could say I was pretty happy.\n\nWith a loud smacking of lips, Josie broke off from Brooke and leaned in next to me.\n\n\"Ryan's good at eating pussy. I'm better,\" Josie said, leaning in close to me and sticking out her tongue. Brooke's legs were spread wide enough to just barely accommodate the two of us between them, but with two tongues on her pussy at once, Brooke might have been in fucking heaven.\n\n\"Hahaha, oh, fucking wow, this is great, this is sooooooooooooo great... fuck, we should've done this sooner, we should've done this ages ago, fuckfuckfuckfuck I love it, I love it!\" Brooke squealed.\n\nThough I didn't want to leave, Josie pushed me away from Brooke's cunt not so subtly, leaving me to need to find a place to jump in. I might've pouted a little, but Brooke wasn't going to let me feel left out.\n\n\"Awww, don't blame her for... fuck she really does have a nice mouth... one of the best, no offense Ryan... don't blame Josie for wanting to play with my cute little kitty, like, you know how nice it is. C'mere, Ryan, there's still plenty more of me to play with...\" Brooke said, pulling me in close.\n\nI knew about as well as anyone who'd had the pleasure of having sex with Brooke how true that was. I made out with her while Josie had at her pussy. While I was happy that this kind of pleasure was going around for two girls I loved, now that my worries had dissipated, I was looking to be a little more greedy. I reached down and pulled Brooke's sweater up around her neck and over her firm A-cup tits. Unsurprisingly, her nipples were rock hard and incredibly sensitive, and I played with them and tweaked them while she writhed and rocked her hips against Josie's face. Though I still kissed Brooke, I looked down at Josie and she up at me, the two of us silently agreeing that we were going to get Brooke off and get her off hard.\n\nJosie and I redoubled our efforts, with our mouths on both of Brooke's sets of lips and my hands playing with her sensitive tits, Brooke didn't really stand a chance. It only took a few minutes before she cried out into my mouth and she shuddered heavily, coating Josie's face with her juices.",
        "\"Oh shit,\" Brooke said as she came down. \"Ooooooooooh, shit, fuck that was fun, so, so, fun, you guys, fuck... I love you Ryan, and I could love you, Josie, easily, your mouth, so good... yeah, you weren't fucking lying. I mean, like, Ryan, you're good, but, my god she knows her way around a cunt!\"\n\nJosie stood up and kissed Brooke, and then I did the same. Josie then leaned in to me, kissing me deeply. Brooke leaned in, and though it was awkward, we had something of a three-way kiss going for a moment. It wasn't terribly effective, but it was a fantastic share of affection that felt like an amazing bond had formed between us.\n\n\"Thank you, thank you two so much, that was so cool, I mean... totally,\" Brooke purred, beaming at the two of us.\n\nJosie smirked. \"You didn't think we were finished, did you?\"\n\nBrooke smiled. \"No, but-\"\n\nJosie pushed Brooke back so she was lying down on the table at a slight diagonal, her ass still sitting on the corner near Josie while Brooke's head lolled over upside down right near my crotch.\n\n\"Hi!\" Brooke said cheerfully as she looked at me upside-down.\n\n\"Ryan, why don't you give Brooke something to do with her mouth while I show her how I really like to handle things?\" Josie said authoritatively.\n\nI didn't need a lot of encouragement for this, and even though her smile was upside down I don't think Brooke needed much more either. I undid my pants and pulled them down, bopping her on the chin with my cock. She giggled at the impact, but soon craned her neck until she could lavish the head of my cock with a flurry of kisses, then taking the head into her lips. She sucked on it joyfully, like a lollipop, before spitting it out and looking up at me.\n\n\"You know, Ryan, that, like, you can totally fuck my throat like a total whore if you want? I'll totally letcha know when I need to breathe,\" Brooke said, smiling cutely.\n\n\"You sure?\" I asked.\n\n\"Totally,\" Brooke giggled.\n\nI knew as well as anyone who'd had the pleasure that Brooke was more than fine with a good throat-fucking, but the encouragement was welcome. Though I stroked her face once, fondly, looking down into her beautiful blue eyes with a great fondness, when I shoved my cock into her mouth and down her throat I was as satisfied as ever by how amazing it felt. Brooke King was a prodigy when it came to taking dick, and as she encouraged me, I began to thrust back and forth into her mouth and throat. She gagged and choked, her eyes watering and smearing her makeup, but since this was nothing new for her she took it like a champ.\n\nStill standing between Brooke's legs, Josie looked down at her impressed. \"Wow, Blondie really can take a cock.\"\n\n\"Totally,\" I moaned with pleasure. Though her mouth was full of my pulsing cock, Brooke let out some sounds of approval and threw a thumbs up at Josie.\n\n\"I was gonna consider offering her lessons, but she might be able to show me a thing or two,\" Josie said, stroking Brooke's inner thighs. Brooke cooed around my cock as I continued to thrust into her mouth and throat, withdrawing long enough to catch her breath before plowing back in.\n\n\"Yeah, keep fucking her mouth, like that, Ryan, keep fucking her like a cheap cheer slut...\" Josie instructed, getting more and more into it, dropping her hands toward Brooke's cunt. She started stroking Brooke's pussy, which seemed to drive Brooke wild, but without warning soon forced a few fingers into Brooke's tight, pink sex. Brooke groaned enthusiastically as Josie began to finger her.\n\n\"So, you cheerleader sluts all really do have nice, tight cunts... that's fucking good to know. I never thought a lot of you cheerleader bitches before since most of you look down on people like me and my friends, but you, you've done something special for Ryan even among all the other cheer bimbos. You respect him, you like him, and if I've heard right...\" Josie said, sucking a couple fingers from her other hand before drifting it closer to Brooke's ass.\n\nShe thrust forward into Brooke's ass, and Brooke howled in a rather pleasant way around my cock. Josie finished, \"...you might be the biggest anal queen in school, outside of me, of course. How do you like that, huh? You like getting it rough in all your holes at once?\"\n\nThough Josie hissed this comment as a truly dark sound, Brooke only flashed her an enthusiastic double thumbs up as the two of us went at her.\n\n\"Really?\" Josie asked, continuing to be impressed as the two of us fucked Brooke hard. Josie looked up at me as Brooke writhed and sucked harder on my cock. \"Is she always like this?\"\n\n\"Actually, she's kinda mellow today. Let her really cut loose, and... well, when you see it, you'll believe it,\" I said, groaning when Brooke pushed my cock from her mouth, gagging for air and somehow licking my balls all at once, before diving back in and deepthroating me as if it were nothing.\n\n\"Well, you're right, I'll believe it when I see it, but I like what I'm seeing so far,\" Josie said, double-penetrating Brooke even more vigorously with her fingers. \"I want to play some with Ryan's toybox, because let's face it, Brooke, fingers are one thing, and toys are another. Right now, I'm gonna make you cum harder than any of your bitchy cheerleader friends have ever made you cum, and then you're gonna make Ryan cum all over your sweet little whore face, isn't that nice?\"\n\n\"Actually,\" I said, feeling my balls boiling from the amazing blowjob. \"That might have to be the other way around.\"\n\nJosie rolled her eyes. \"Really? She's that good?\"\n\n\"Uh huh,\" I nodded.\n\nJosie sighed. \"Fine, Ryan, paint her face, then I'll make her scream.\"\n\nFeeling the orgasm overcome me, I pulled my cock from Brooke's mouth and said, \"Thanks.\"\n\nI pulled my cock out of Brooke's mouth and jacked it for only a couple seconds more before pleasure overtook me and I started to cum on her. I followed Josie's instructions to the letter, painting Brooke's face in streaks of thick, white cum. Brooke opened her mouth enthusiastically, trying to catch as much as she could in her mouth, even though most wound up on her face, her neck, and some even streaking over onto her sweater. A single small splash landed on one of her nipples, which Josie couldn't help herself from leaning over and licking off.\n\nProudly, Brooke leaned her head back up so she was looking at Josie, a cum-drenched angel showing off her cum-filled mouth, before swallowing it all and crying out, \"Please, keep fucking me, it's so good, yesyesyesyesyes, like that, please keep going and you'll make me cum all over your hands, like that, keep going, keep going please, totally like that, like that, like, like.... WHEEEEEEEEEEEEEEEEEEEEEEE!!!\"\n\nBrooke cried out in jubilation as she came hard all over Josie's hands, a good squirt of pussy juice taking even Josie off guard. Brooke giggled and laughed, muttering gleefully as she kept twitching and cumming, smiling through her mask of semen at Josie and me with a look of nothing but love and joy on her face.\n\n\"Come on down here and lick that off my face and I could, like, totally learn to love you,\" Brooke told Josie with the cutest smile.\n\nShrugging, Josie leaned down and began to do exactly that, licking my cum luxuriantly off of Brooke's features, their hands pawing at each other as they did. Though my legs couldn't hold me up anymore after the hard cum I'd had, from my chair I had a good time watching them and thinking that maybe, just maybe this was an arrangement we could make work.\n\n***\n\nNothing refreshes like a good, hot shower, and if you happen to share it with Brooke King, well that makes it all the sweeter. Both of us were looking to wash off the previous day and some of the early morning sex, and in a rarity for us this shower was almost completely sex free. Oh, sure, there were strokes and laughs and occasional squeezes, and some definite making out with her pressed against the wall at one point, but with Josie in my bedroom sorting through the Christmas toybox the girls had gotten me, we didn't have the time to linger. So, we showered, we shaved, we washed each other's backs and I helped her with our hair.\n\nThough she looked absolutely luscious with the water cascading down her toned, perky body, I couldn't help the swell of love I felt for her that had nothing to do with that. Brooke was such a beacon of light and joy, and seeing her smiling, lost in whatever song she was lowly singing to herself made me happy beyond description.\n\nAdmittedly, once I sorted out just what she was singing, I had to laugh a little.\n\n\"What's funny?\" Brooke asked, looking at me brightly.\n\n\"Were you singing 'Free Bird'?\" I asked.\n\n\"Well, duh! It's a totally kickass song,\" Brooke replied.\n\n\"I know that, it's just, not what I expected,\" I admitted. As always, Brooke managed to be full of surprises.\n\n\"Me neither, but you, like, know Dakota, right? She's got all these totally weird and interesting and strange interests and lately she's been on this classic rock bent, shot us all this Spotify playlist she made and I've, like, been listening. Some of it's actually pretty great,\" Brooke admitted.\n\n\"Cool,\" I replied. I didn't know cheer captain Dakota Lewis well, but the days I spent with her and the other girls at the New Year's orgy told me there was a lot more to her than being a rich bitch cheerleader. Come to think of it, that'd been my experience with most of the cheerleaders, Brooke chief among them.\n\n\"I think so, yeah,\" Brooke said, pulling me in for a quick, sweet kiss.\n\n\"So,\" I said, wanting to take advantage of the privacy we had in the shower. \"What do you think?\"\n\n\"Of what?\" Brooke asked, though I knew she knew damn well what I was talking about and just wanted me to verbalize.\n\n\"Of... well, all this. You. Me. Josie. Especially Josie, actually,\" I said.\n\n\"Josie's cool. Definitely hot, and that thing she does with her lips... I could totally fall in love with that shit,\" Brooke said, smiling. It was a smile I knew well, a smile I loved, but it was also one I knew wasn't telling the whole truth.\n\n\"But what do you think of her... beyond the sex stuff,\" I said.\n\nBrooke sighed. \"Look... I don't know her well, that's, like, obvious. We totally got our different circles we run in, and that's okay, everyone's, like, got their own things. I worked with her and you for Halloween and Christmas, and I know she's good, and that you like her, and that if you like her there's gotta be something special about her, something I'd really like to see, but right now with me and her... I just don't know her, which is, like, the problem I guess.\"\n\n\"But would you *like* to know her? Or would you only want to know her because of me?\" I asked. It was one thing to talk about this strange romantic arrangement we were considering, it was another to do what it took to make it work.\n\nBrooke pondered this question for a long moment, running her hands through her hair to help wash the shampoo out with a look of great concentration. Finally, she said, \"You know what? Yeah, I would like to get to know her for her. Me and her, we could, like, totally get into some true mischief together, and if she's so willing to let me in right away when I'm kinda the one invading your guys' thing, she's gotta be an awesome lady, and I wanna give her the same benefit of the doubt she gave me. So, yeah, I'd totally like to get to know her because I wanna get to know her. That's good to know, actually.\"\n\n\"Good,\" I said. \"Good. I'm done when you are.\"\n\nBrooke stood under the showerhead for a couple more seconds, eagerly washing herself of the last remnants of soap and shampoo, before saying, \"Yeah, me too.\"\n\nI turned off the water and we both stepped out, wrapping ourselves in towels. As we dried ourselves, I couldn't help but watch her running the towel over her tight, lithe frame, watching as she cutely sang a song I couldn't hear into the mirror as she blow-dried her hair. Her sparkling eyes looked over at me in the mirror occasionally, smiling without losing the beat as she kept singing and put her hair up into her signature pigtails.\n\nWhen she finally turned off the hairdryer and set it down, still looking at me in the mirror she asked, \"See anything you like?\"\n\nDry enough, I dropped my towel to the floor to show her my erection. \"What do you think?\"\n\nIn kind, Brooke dropped her towel and said, \"All my thoughts begin with YUM and end in MY, so you probably got a clue about what I'm thinking.\"\n\nI knew Josie was in the next room waiting for us while she checked out my \"toybox\", but I couldn't wait any longer for Brooke. Hungrily, I grabbed her by the hips and spun her around, at which point the two of us began to furiously make out. Brooke was always an enthusiastic lover, but there was something different to her now, a different spark between us that was less spark and more electrical storm. As I pressed her against the wall of my bathroom, I could practically hear thunder as the two of us went at each other, kissing and groping and rubbing up against each other as if our lives depended on it.\n\nWhat a difference \"I love you\" can make.\n\n\"I love you! I love you! I love you!\" Brooke practically squealed, accenting each kiss with an exclamation.\n\n\"I love you,\" I said, rubbing my cock up against her pussy. \"God, I love you so much.\"\n\n\"I can't wait until the bedroom. I need you to fuck me now,\" she said, reaching down and lining my cock up with her tight pussy. With only the slightest thrust, I was buried deep inside her, pressing her against the wall as she squealed with glee.\n\nMy bedroom was only a few feet away, but if she didn't want to wait, I wasn't going to force her. The pleasure of her perfect pussy wrapped around my cock was so intense that I found myself thankful for my earlier orgasms. It might have been the only thing that kept me from popping off here and now.\n\n\"If we... fuck... if we want to make this work... we should go in there and get Josie...\" I grunted, thrusting into Brooke with enough strength that I was almost certain I'd take her off the floor.\n\n\"Yeah... but then I'd have to take you outta me, and that's, like, no fun,\" Brooke pouted, before her face lit up with an idea so bright I almost expected to see a lightbulb appear above her head. She yelled, \"HEY, JOSIE! WE COULDN'T WAIT AND STARTED FUCKING IN HERE, WANNA COME IN?\"\n\nThat was one way to deal with this problem.\n\nIt was only a matter of seconds before Josie, gloriously naked, opened the bathroom door and stood staring at us, looking only mildly annoyed.\n\n\"You guys couldn't walk another five feet?\" she asked, hands on her hips and tapping her foot impatiently.\n\n\"Sorry, I got horny! Can you blame meeeeeeeeee?\" Brooke groaned as I continued to thrust inside of her.\n\nJosie rolled her eyes and said, \"It's called self-restraint.\"\n\n\"FUCK SELF-RESTRAINT!\" Brooke yelled, laughing and smiling and showering me with kisses.\n\n\"Well, you've a point there,\" Josie admitted, going into the bedroom and coming back in lubing a very large butt plug. \"And I've got a point here. I intend to DP you like crazy with Ryan's help later-\"\n\n\"Yay!\" Brooke squealed.\n\n\"-But for now, this will have to do. Ryan, you think you can pull out and hold back just long enough for me to shove this in Brooke's tight little asshole?\" Josie asked sweetly.\n\nIt would have taken a lot for Brooke to stop fucking me, but a promise this sweet managed to do the job just fine. I pulled out of her and let the two girls face each other.\n\nBrooke looked down at the large, black sex toy with wide eyes. \"I dunno if I've ever taken anything *that* big in my ass before.\"\n\n\"Well, there's a first time for everything,\" Josie said, stepping forward and pressing herself tightly against Brooke. Seeing the two of them naked, Josie's large breasts crushed against Brooke's smaller pair, the two of them making out passionately, it was an insanely hot sight to behold.\n\nIt only got hotter when Josie spun Brooke around and leaned her over, facing me. I leaned over to kiss Brooke while Josie slowly teased the toy up Brooke's ass, enjoying the enthusiastic handjob that Brooke gave me.\n\n\"I'm gonna shove it up your ass now, slut,\" Josie hissed, pressing herself against Brooke's back.\n\n\"Bring it on,\" Brooke taunted, looking over her shoulder at Josie tauntingly.\n\nFrom the way Josie thrust forward and Brooke's eyes bugged out, I assumed that Josie did indeed bring it on.\n\n\"OH MOTHERFUCKER, FUCK THAT'S BIG, GONNA, LIKE, TEAR ME UP! FUCKING FUCK!\" Brooke screamed. When Josie looked at her with concern, Brooke added, \"KEEP GOING, DON'T YOU DARE FUCKING STOP YOU GOTH SLUT, FUCK IT'S GOOD, FEED THAT TOY INTO MY TIGHT, CUTE LITTLE ASS, STRETCH ME THE FUCK OUT, MAKE ME YOUR FUCKING BITCH, FUCK!\" \n\nJosie locked eyes with me, no doubt impressed with Brooke's expansive vocabulary, before doing as she was requested. I helped Brooke along, playing with her tits, reaching down to finger her pussy while we kissed and Josie fed the last of the massive plug into Brooke's ass. Once it settled into place, a look of the greatest relief crossed Brooke's face.\n\nJumping back into character now that she had no longer had to be concerned for Brooke, Josie grabbed Brooke by the pigtails and pulled her face up alongside hers, hissing, \"How do you like it, cheer slut?\"\n\n\"It's, like, fucking amazing,\" Brooke groaned back, arching her neck and kissing Josie passionately. \"You should totally understand, though, when I've had my cum, I'm putting this monster in you.\"\n\n\"Challenge accepted,\" Josie smiled, leaning past Brooke to kiss me, then kiss Brooke again, before the three of us all began kissing each other. Making out with Josie while Brooke was sandwiched between us may have been one of my greatest sexual fantasies come to life, and I had a lot of mileage I wanted to get out of it. The three of us were a groaning, grinding, stroking mess, kissing and rubbing against one another in absolute ecstasy.\n\nI pulled Brooke away from Josie and pressed her back against the wall. I didn't know when I'd be able to cum again soon, but I wanted to fuck Brooke until she couldn't see straight. I lined my cock up with her pussy and pressed it back inside.\n\n\"Holy shit!\" Brooke and I exclaimed in unison. Her pussy was tighter than ever, and the way her eyes rolled back as I slid more and more of my cock inside, I knew she was feeling some pretty intense sensations from this impromptu double penetration.\n\n\"It's... uuungh... fucking hell... totally... gaaaanh....\" Brooke said, trying to find words and failing as I bottomed out in her. Even those chunks of words soon gave way to bestial roars, grunts and groans of appreciation as I started to move around inside of her.\n\nAnd this was before Josie began to help. She pressed in beside us, running her hands over Brooke and me. With one hand she pushed against my ass, urging me on as I fucked Brooke, while with her other she toyed with Brooke's clit. Beyond that, she dipped down, suckling at Brooke's tiny and perfect tits, only taking breaths to offer us foul encouragement.\n\n\"You put her past words, keep fucking that tight little cunt, make her squeal, make her fucking scream, fuck her like she deserves to be fucked,\" Josie whispered to me, kissing me before turning her attention to Brooke. \"You've taken this cock before, you know what it can fucking do, fuck him back, squeeze him hard, you want to surrender to the pleasure but you don't have my permission to do that yet, if you want Ryan, make him know it, fuck him like *he* deserves to be fucked.\"\n\nBrooke looked up at me with glassy, lustful eyes, pulling me down to kiss her passionately. She reached one leg up and wrapped it around my ass, encouraging me to fuck her even harder, while I myself was in fucking heaven. She squeezed me with her hot, wet slit, holding me tighter than she'd ever held me before as she worked my cock over. She looked up at me with the greatest determination, spurred on by Josie to give me the best fuck she'd ever given anyone.",
        "Unfortunately for her, I don't think she was able to stem the tide of pleasure well enough from Josie's and my onslaught.\n\n\"HOLY JESUS FUCK, THIS IS.... GNAAAAAAAAAAAH FUCKFUCKFUCKINGHELLAWESOOOOOOOOOOOME!!!\" Brooke cried out, laughing and squealing as she came so hard her legs gave out underneath her. She was a shrieking, shaking mess, held up by Josie and me before she could slip and hit her head on the floor. For my own safety and despite my own intense arousal, I pulled out of her and focused on holding her up. It was an orgasm that went on for a long time at Josie's insistence, leaving Brooke a babbling, dribbling mess with her juices leaking down her thighs.\n\n\"Fucking... awesome...\" Brooke moaned through half-lidded eyes, leaning in to kiss my chest, then blindly seeking out Josie for a sweet, lingering kiss. \"We should totally do this more often... now if I could only walk...\"\n\n\"We got you,\" Josie said, nodding to me. I nodded back, and between the two of us we helped Brooke out of the bathroom and plopped her down on the bed. It was hard finding a spot that wasn't occupied by the impressive pile of sex toys from my \"toybox\", but with a little clearing we managed.\n\nFor a moment, I was taken with fear by the light pouring through my window. The three of us were naked, the window was open, and that gave my 18-year-old neighbor and friend Alice Talbot a great view of us. Though we'd had a pretty good flirtation since meeting a few weeks prior, I wasn't sure if I was ready for this.\n\nI went to close the curtains.\n\n\"She's already watching, if you want to know. I saw her when I was getting naked and decided to put on a little bit of a show. I think she liked it,\" Josie said, turning and waving out the window. \"Hi, Alice!\"\n\nI didn't get a good look at Alice, but I did keep out of view. Alice and me were in an interesting sort of holding pattern, and while I was hoping one day the two of us might be naked and having fun with each other, I didn't want her to have to see me naked if it wasn't something she wanted.\n\nNeither Josie nor Brooke had such restraints. Through eyes that had regained some of their life, Brooke rolled over on the bed and waved out the window. \"Hi, Alice! I know you can't hear me, but, look at me!\"\n\nI knew that Alice and Brooke had spent a night together, and that Josie had been talking with her over the phone while she was away. I was happy that the three of them were chummy, but I would have been even happier if they'd all been chummy with the curtains closed.\n\nAnd yet, looking at Brooke and Josie on the bed, smiling and happy and having a good time with each other, an inspiration hit me.\n\nI found my clothes, and I started getting dressed.\n\nJosie looked at me, amused. \"You know, this is kind of the exact fucking opposite of the expected dress code for what we're doing right now.\"\n\n\"Yeah, Ryan,\" Brooke said cheerfully, rolling over onto her stomach and looking at me cutely. \"Get naked and pumping and fill one of us with cum!\"\n\n\"I will,\" I said, pulling on my underpants, then my jeans. \"But not yet.\"\n\n\"Still not understanding the clothes,\" Josie replied.\n\n\"Let me explain,\" I said. \"I know both of you, but you two don't know each other very well, right?\"\n\n\"Right,\" Josie and Brooke confirmed.\n\n\"And you could get to know each other with me here, but I don't want you to get to know each other only because I'm here. So, in the spirit of today being unhurried and the exploration of a new relationship, I think I'll leave you two alone for a little while. Step outside, get some fresh air, maybe even take in a bike ride,\" I said.\n\n\"And your boner?\" Brooke asked, pointing to the rather pronounced bulge in my pants.\n\nI pulled on my shirt. \"It'll go down, shortly, and it will be ready for you when I get back.\"\n\n\"Hey, if it's not hurting you, I'm totally down for some private time with this hottie,\" Brooke said, reaching over and playfully running a couple fingers up Josie's slit.\n\nJosie hissed with pleasure, opening her eyes only halfway and giving me a wry smile. \"You're sure?\"\n\n\"Positive,\" I replied.\n\nShe cocked her head toward the door. \"Then get the fuck out of here.\"\n\n\"I'm working on it, I'm working on it,\" I said, picking up my shoes and socks and exiting the room.\n\n\"Oh, once I can feel my legs again, I'm so gonna fuck you so hard with my strap-on...\" Brooke promised Josie.\n\n\"You're on,\" Josie replied.\n\n***\n\nA few minutes later, I sat on the front porch of my house, taking in a cool-but-not-cold winter day and smiling at all that had happened. Uncertainty had fallen by the wayside in my life, and I felt well and truly free. Josie, Brooke and I were going to make a go of this in an unconventional relationship, and though I still didn't know what form that was going to take, I was excited to see where it would take us.\n\nI pulled my phone from my pocket and fired off a few quick texts.\n\nMe: So much has happened today\n\nMe: Josie is back in town\n\nMe: She found me and Brooke together\n\nMe: We had the polyamory talk\n\nI wanted to say more, but it was difficult to say how I wanted to put it. So I left it there, hoping to have my thoughts together by the time she replied.\n\nI hadn't expected her to reply so quickly.\n\nRachel: And?\n\nI smiled. It always felt good to talk to Rachel.\n\nMe: And we're giving it a go. The two of them are in my room right now, probably getting ready to have sex if they haven't started already\n\nMe: After what we all did this morning, it might take them a while to get started\n\nRachel: Busy morning\n\nMe: You don't know the half of it\n\nMe: Wish you were here so I could tell you everything\n\nRachel: Not just because you want a redhead for a foursome?\n\nMe: Well, the thought had crossed my mind...\n\nRachel: Hey, if I were there, I'd be there in a heartbeat. Those two are hot.\n\nMe: You have no idea.\n\nRachel: And why aren't you with them? Not just to talk to me, I hope.\n\nRachel: You got two beautiful girls in your bed; you better be treating them right.\n\nI laughed, and I explained to her why I was sitting out here talking to her rather than pleasuring my girlfriends. She seemed to understand.\n\nRachel: I'm proud of you.\n\nMe: Thanks.\n\nFuck, what else could I say to Rachel McNeil? I'd gotten into a lot of trouble for what I'd done with her, but ever since then she'd been one of my closest confidantes and a person I trusted more than anyone for advice. I'd never even considered polyamory before I talked with her, and now that the subject had been broached I couldn't have been happier.\n\nThough the words felt inadequate, I finally typed out.\n\nMe: I owe you for this one.\n\nRachel: Damn right you do.\n\nRachel: Introduce me to them when I'm in town. That'll be a start.\n\nI smiled.\n\nMe: Deal.\n\n\"Seems like you're having an interesting morning.\"\n\nI looked up to see the source of the lightly accented voice, and was hardly surprised to see Alice Talbot standing before me. She was as beautiful as ever, with her pretty face, soft dark skin and lovely and large loose afro of curls. Her tight, athletic body was shown off quite well in her black yoga pants and tank top, the visible straps of her sports bra holding up her firm, C-cup tits. I looked her over appreciatively because I liked looking over appreciatively, but I was most happy for her presence because I was happy to have a friend to talk to.\n\n\"Interesting... that's one word that could be used for it,\" I said, taking in her attire. \"You going out for a jog?\"\n\n\"I was, but then the funniest thing happened. I got to see the lovely Josie Wong in the flesh for the first time through your window, all luscious and naked and putting on a show for me. It was quite a fun sight until she disappeared, only to bring back Brooke and you with her. You were quite timid, but Brooke and her, they started to put on a real fun show after you disappeared. I was thinking I'd delay my run somewhat to enjoy the show, but then what do you know, I get an urgent text from Brooke telling me that you were about to leave them alone, and that I should come and take you to my room so you wouldn't be alone and could watch the show,\" Alice said, her tone every bit as mischievous as her smile.\n\n\"Really?\" I asked. It made sense, actually. I wanted to give Brooke and Josie some alone time together, and they wanted to take it while keeping me close. What better a way to do this than stay a short distance away where I could look but not touch, watch but not hear.\n\nNot bad.\n\n\"Really,\" Alice confirmed. \"So... you wanna?\"\n\nThis didn't take much debate. \"Yeah.\"\n\n\"Alright then,\" Alice said, cocking her head back toward her house. \"Then, why don't you step into my parlor...\"\n\n***\n\nAlice's house wasn't so much a parlor as it was a house for two people who'd quite recently moved in, with furniture yet to find its place mixed in with unassembled boxes from IKEA, and tall towers of moving boxes that had yet to be attended to. Alice's room was a little more lived in already, with her bed, desk and dresser all looking well used, a few family photos hung up among pictures of Alice and what I assumed to be old friends dressed for renaissance faire, and some band posters.\n\nWe sat on her bed looking out the window, sipping on ice cold bottles of water from the fridge and watching Josie and Brooke. Though they knew they were being watched, they were keeping rather sedate, chatting and looking at toys, occasionally experimenting with something or making out a little. After a time, they settled in with the Hitachi vibrator, which they definitely seemed to enjoy as they greedily fucked each other.\n\n\"So... the three of you?\" Alice said, taking a long, luxuriant sip as she watched the two of them play with each other. \"Impressive. You're a lucky man.\"\n\n\"I think we're all lucky we found each other. What we've got is definitely different and not for everyone, but it might just be for us,\" I admitted.\n\nAlice shook her head. \"This fucking town...\"\n\nShe'd only moved here recently, and while she definitely fit in with the girls I'd come to know, she'd also come from a background where she'd been judged and given a hard time for her own sexual proclivities.\n\n\"Hey, even I'm surprised by it sometimes. I didn't know it was like this until September,\" I said.\n\n\"With the volume of sexual activity that seems to go on here, you must've been rather willfully ignorant to not see all of it,\" Alice replied.\n\n\"Probably. Or maybe my sudden ascension to manhood brought it all out of the woodwork,\" I replied.\n\n\"So, you think your magic cock led to all of this?\" Alice teased.\n\n\"I always heard it was something in the water. Or perhaps this town was blessed to be given a particularly cliched narrative by a porn-loving god,\" I said.\n\nAlice paused, mulling things over and looking at her bottle. \"Water sounds most likely.\"\n\nFor emphasis, she took a nice, long drink.\n\n\"That probably wasn't bottled here,\" I quipped.\n\nAlice smiled. \"It's called a joke, you prick.\"\n\n\"Though you've got me thinking I should try to open a bottling plant here when I grow up. 'Regan Hills Magic Sex Juice', we could take it on the road out of the back of a wagon and charge two bits a bottle,\" I suggested.\n\nAlice stayed silent for a moment, crossing her arms under her breasts and cocking her head in a mocking way.\n\n\"I should let someone else do the marketing,\" I said.\n\n\"You should let someone else do the marketing,\" she mirrored, smirking at the joke.\n\nI looked back out the window at Josie and Brooke. \"Though if we put the two of them in all the advertisements, I doubt anyone would actually care about what I'd call it.\"\n\n\"This is true,\" Alice said, following my gaze and shifting uncomfortably in her seat. \"I'd still sell it for more than two bits, though.\"\n\n\"Three bits?\" I suggested.\n\n\"Now we're talking,\" she said, not taking her eyes off of the other two.\n\nNow, Alice and I had been in plenty of sexually charged situations, having an oddly intense flirtation with each other almost since she moved in. At first it was notes through the window, and then in person. We'd danced around the tension between us for a while, always assuming there would be a resolution of some sorts, but never being sure of when or how that would be.\n\nThis, truthfully, didn't help with the confusion in the slightest.\n\nThere was something about the way she watched them with such intensity, the way she was writhing without fully writhing in her seat that was, while undeniably enticing, spoke to something we'd never discussed before.\n\n\"So... I knew you were an exhibitionist,\" I said. \"But I never took you for a voyeur as well.\"\n\n\"You don't define yourself by one sexual inclination, and neither do I,\" Alice answered easily without once taking her eyes off of them. \"I get off hardest by being seen, but having someone know that I'm watching, wanting me to watch and enjoy myself is powerfully erotic as well.\"\n\nI looked her up and down, noting her ragged breathing and pointed nipples stretching against the fabric of her tank top. \"I can tell. Do you want me to leave the room so you can do something about that?\"\n\nBiting her lip, Alice looked at me, then got up from bed. She scrawled a quick message I couldn't see on her white board and placed it in the window for Brooke and Josie to see.\n\n\"What does it say?\" I asked.\n\nAlice didn't answer.\n\nI looked out the window at the others across the way. It took a moment before Josie and Brooke noticed, but when they did, I saw them flash broad smiles and thumbs up, urging Alice on.\n\nThough I had a sneaking suspicion, once again I asked Alice, \"What does it say?\"\n\nAlice turned the sign around to show me its text: SHOULD WE PLAY TOO?\n\nMy heart beat heavily as months of anticipation and hope seemingly came to a head all at once. This was the day when Josie, Brooke and I were establishing a new status quo. That was a major enough milestone to have to deal with. Was I really ready for Alice's and my connection to develop into something new?\n\n\"It seems as if your girlfriends have given a resounding endorsement,\" Alice said, nervous yet clearly full of anticipation.\n\n\"It does seem that way,\" I said, unconsciously shifting in my own seat. I was already quite hard from Brooke's efforts earlier and the show we'd been watching, but if it was possible it felt like I'd gotten even harder.\n\n\"I don't know what I want to happen here. You'd think that would be clear, but it isn't,\" Alice said.\n\nSince I was full of seemingly good ideas today, I took a stab at a suggestion, \"Maybe... let's watch them, masturbate, clear our heads and see what happens from there?\"\n\nAlice considered this. \"Yes. Yes, that sounds good.\"\n\nShe bent over, taking off her shoes and socks. Her yoga pants were tight enough that I expected she might touch herself through them, but I was greeted to a very pleasant sight when she hooked her thumbs into the waistband and began to pull them down. I watched with growing anticipation as the clingy fabric traveled down her impressively toned legs, every inch of her gorgeous, dark skin exposed to me. Her panties were pale blue and sensible, but she managed to make a show of them anyway by turning slightly to me and showing off her tight ass.\n\n\"Wow,\" I whispered, looking her over.\n\nShe smiled at this. \"Thank you. Since I'm going to go full Pooh Bear on this, I think it might be sensible for you to do the same, no?\"\n\nI glanced out the window, and while Brooke and Josie had gone back to playing with each other, it was clear they were watching us with some anticipation.\n\nSilently, I took off my shoes and socks and pulled my jeans to the floor. My erection was quite apparent straining underneath the fabric of my underwear.\n\n\"Same time?\" I asked, putting a thumb under the elastic of my underwear.\n\n\"Same time,\" she confirmed, doing the same with hers.\n\nWith a wordless countdown, we then pulled down our underwear simultaneously. My thick ten inches stood at proud attention, but I couldn't have cared about what it was doing at that moment for how focused I was on Alice's pussy. She shaved, allowing me to take in the dark outer folds of her sex and the swollen, moist pink underneath. I could smell, even more than see, that she was utterly soaked, and her scent was utterly intoxicating. My mouth watered, wanting more than anything else to bury it between her thighs and lick her until she came all over my face.\n\nMaybe that would even happen, but that wasn't the plan.\n\nFirst things first.\n\nAlice sat beside me, looking down at my cock. \"I see the rumors weren't just rumors.\"\n\nI looked down at her engorged sex. \"You're not so bad yourself.\"\n\nShe lowered her head, blushing. \"So... I know that your girlfriends are a truly enticing sight and that looking away must take something resembling a labour of Hercules, but can I offer one request while we do this?\"\n\n\"Anything,\" I replied.\n\n\"Would you... watch me?\" Alice asked.\n\nUnhesitatingly, I said, \"I would love to watch you.\"\n\nQuietly, she replied, \"Thank you.\"\n\nWithout another word, she spread her legs, running her hands down her body until they settled on her sopping wet sex. She groaned, a low, deep sound of pleasure I knew I wanted to hear more of. Her fingers were deft, knowing her pleasure as no one else could, running tight circles around her clit as she moaned and tensed.\n\nThough the sight was undeniably erotic, and one I wanted to get lost in, I also watched for exactly what she liked. Not taking notes, exactly, but if she ever wanted my help, I wanted to be ready. She was forceful, but precise, playing her sex like a finely tuned musical instrument. I would need to be attentive and use all of my skills if I wanted to make her cum, but it was something I knew I could manage.\n\n\"Touch yourself...\" she whispered huskily, never slowing down in her pace. \"Stroke yourself for me. Take pleasure in my pleasure, please...\"\n\nAlice was in desperate need of release, and if it helped her to watch me, I wasn't going to disappoint her. I took my cock in my hand, spreading the precum liberally around the head and began to stroke myself while we watched each other.\n\nShe groaned in response, fingering herself more vigorously as she watched me. I tried to keep up with her, masturbating neither too swiftly, or too slowly. We touched ourselves as we wanted to touch each other, the short bit of distance between us strangely bringing us even closer, as the gap between our houses had for this past month. \n\nI didn't know what I was aiming for on my end, whether I was trying to cum or simply put on a good show for our first time nearly naked and in the same room as each other, but it felt good to touch myself while watching Alice touch herself.\n\nShe'd become very vocal after I joined her, writhing and shaking in her seat as she masturbated. I looked into her eyes, both of us never losing focus of the other as we touched ourselves. I'd never done anything exactly like this before, but it felt amazing. There were only a few feet between us, and we weren't yet touching, but it felt as if we had a greater intimacy than if we'd just gone in and started fucking each other. Our entire world might as well have just been each other, our soft sounds of excitement, the way each of us tensed and released in pleasure, getting so close to cumming but never pushing past that barrier.\n\nI wanted to do so much to Alice, for Alice, after all the buildup we'd had to this exact moment, but keeping this distance between us by choice, getting lost in touching ourselves while watching the other do the same, it was incredibly hot.\n\nThat Brooke and Josie were fucking each other only a short distance away, occasionally taking a glance our way, only made it that much more erotic.\n\n\"You like this?\" I taunted, hoping I was going in the right direction for Alice's desires. \"You like me touching myself while I watch you? Does it feel that much better knowing I'm watching you?\"",
        "\"Yes... god yes...\" Alice groaned.\n\n\"You wish we'd done this sooner, don't you?\" I teased.\n\n\"I should've been teasing you through the glass ages ago. I should've shown you my tits... my pussy... my ass... we could've had so much fun, you and me, window to window... closer...\" she moaned, closing her eyes tightly in pleasure.\n\n\"But we kept the tease going instead,\" I said.\n\n\"It was a fun tease, but I think I'm ready to evolve our unique relationship,\" Alice whispered, her voice getting fluttery, her body tensing with what I knew was an imminent release.\n\nI continued. \"Then you know what you have to do next. You have to push past whatever barriers you've given yourself. No more waiting, no more hesitation, just find that sweet release and know that I will be watching every single second of it. Cum for me Alice. Touch yourself and fucking cum for-\"\n\n\"OH GOD!\" Alice cried out, collapsing against her bed, moaning and screaming and shaking as if she'd been electrified. She didn't stop touching herself as she came, fingering herself and running tight, firm circles over her clit as she kept cumming. The room smelled quite thickly of her intoxicating, musky aroma, and as I looked down at her I felt like I might have been as hard as I'd ever been in my life.\n\nI looked over at Brooke and Josie across the way. They had stopped paying attention to us, as I saw that Brooke had put on her strap-on and was rather savagely facefucking Josie. It was a hot sight, but Brooke was all cute and perky smiles, no doubt loving how filthy Josie was willing to get.\n\nIt was fun to watch, and I couldn't wait to rejoin them, but since they'd sent me over here and I was with Alice, I wanted to give her my full attention.\n\nI looked back at her, watching as she breathed heavily, the swell of her breasts rising and falling in time with her breathing, her half-lidded eyes watching me as a pleased smile crossed her face.\n\n\"That was... wonderful...\" she moaned, stretching her arms out over her head and looking absolutely gorgeous.\n\nI took a breath, still enjoying her rich, intoxicating scent. \"I want you to know, that I can keep stroking myself like this while I look at you if you'd like. I can cum wherever you want, be as clean or as messy as you want. I want you to know that while I'm here, I'm really happy to follow your lead because I'm in your house, and I've wanted to do this for a while with you. I want you to know all of that, because I also want you to know that, while I would certainly have a lot of fun doing that, there's one thing I want to do more.\"\n\n\"What's that?\" Alice asked, still sounding a little groggy.\n\nI smiled at her. \"I would like to taste your pussy. Not just licking your fingers clean, fun as that may be. I want to taste your pussy with my own lips and tongue. I want to lick you and finger you, to touch you how you like to be touched, until you cum all over my face. Then I might even do it a second time, because I really like doing that. I can keep stroking myself while you watched, if you'd like, but that is what I really want to do with you.\"\n\nAlice licked her lips at the thought. \"I can see why you're so popular with the ladies.\"\n\n\"I'd rather you felt it,\" I said.\n\n\"Ooooh...\" she purred. \"You know how to sound oh, so, tempting.\"\n\n\"So tempting you might even grant my wish?\" I asked.\n\n\"Don't you need attention?\" she replied.\n\n\"I've had some this morning. And I'll have more again. Since I'm here with you, and I don't think I'll have you all to myself for terribly long today, I was really hoping you'd agree to let me eat you out and make you cum about as hard as you'd ever cum,\" I said.\n\n\"You've a real way with words, you know?\" Alice replied.\n\n\"So, that's a yes?\" I asked.\n\n\"No,\" Alice said, spreading her legs wider. \"*This* is a yes.\"\n\nHer glistening, quivering lips opened for me, sweet with dew and begging to be sucked on. I turned, crawling across the bed between her legs, loving how her thighs began to slowly close around me in anticipation.\n\nThis could have been a moment to dive in, to go all out and show her all of the oral skills I'd gained over the course of these past months, but where was the fun in that? Our flirtation had been long and drawn out, and I didn't want to hurry this any more.\n\nGently, I kissed her inner thighs, teasing her by running the tips of my fingers along the undersides of her legs.\n\nAlice cooed, \"So you're a fucking tease now, are you?\"\n\n\"I am many things,\" I said, sucking gently on one thigh, only a matter of inches away from her moist pussy.\n\nShe groaned, and as I listed off what I was to her, I punctuated every point with a kiss near her sex. Never on, but ever closer, making her want more.\n\n\"I am your neighbor.\"\n\n\"I am your friend.\"\n\n\"I am a nerd.\"\n\n\"I am a lover.\"\n\n\"I am a boyfriend to two of the most beautiful women I know, and I am here right now, with you, between your legs with my girlfriends only a window away from us.\"\n\n\"And most importantly... I am going to do everything in my power to give you the greatest orgasm of your life.\"\n\nAlice smiled, looking down at me as I placed the closest, longest kiss yet near the outer edge of her pussy lips. Not too close, not enough to touch her as she wanted to be touched, but enough to have her whining.\n\n\"Ego much?\" she asked.\n\n\"I don't know. You tell me,\" I said, sticking out my tongue and finally running it up her soaked slit. Momentarily, I was almost overwhelmed by her taste, a taste I'd imagined on my lips for months now finally on my lips and every bit as sweet and luscious as I'd hoped. I could never be fully overwhelmed, though, not when she was crying out with pleasure, closing her thighs around my face as I continued to go down on her.\n\n\"Okay, okay, okayokayokay, that might not be... FUCK! That's not just ego,\" she groaned, placing her hands first in my hair before working them up to her breasts, squeezing and flicking at her nipples through her top.\n\nI came up for a brief breath of air. \"I could've told you that.\"\n\nAlice retorted, \"But I wouldn't have- HOOOOOOOOLY....!\" she trailed off as I went back to her pussy, licking and suckling at her tender, sensitive flesh, savoring every drop of her delicious juices as she writhed against me. Her hands desperately sought purchase on her nipples through her clothes, but when that wasn't enough she reached down, yanking off first her tank top, then her sports bra.\n\nThough the vantage point wasn't perfect, I was given my first view of Alice Talbot completely nude. Her breasts were high and firm, with small, dark, pointed nipples just begging to be sucked on. If my mouth were less occupied, I knew exactly where I would have wanted it to be. They rose and fell with every shaky breath of hers, responding to her touch as she flicked and pinched them in time with my oral ministrations.\n\n\"Yes, please... keep going, keep going, it's so good...\" she purred, looking down at me with a smile. It was a satisfied grin, but a challenging one at the same time. I'd promised her one of the best cums of her life, and she was trying to collect.\n\nIf she wanted to collect, I wanted to deliver.\n\nI tentatively pressed two fingers against her, sliding them inside when she yielded to me. I began to thrust them in and out of her, gently pressing deeper into her tight, hot pussy, curling them, searching for that elusive spot deep within that I knew would drive her absolutely wild.\n\n\"HOLY MOTHER OF FUCK!\" she yelled, grabbing onto my head with her hands and thighs as if she needed to hold on for dear life.\n\nYup, I definitely found her G-spot.\n\nI quickened my pace, bringing her closer to the brink, using every trick I knew with my lips, tongue and fingers. I suckled gently on her clit, massaging her G-spot as I ran whatever available fingers I had on her moist slit, pushing her closer and closer to the shuddering, hot climax I knew was right around the corner.\n\nI wanted to draw this out, but sometimes once you start something, you couldn't stop it even if you wanted to.\n\n\"I'M CUMMING, I'M CUMMING, RYAN... GOOOOOOOOOOOOOOOOOOOOOOOD!!!!!\" Alice cried out, her whole body tensing, jerking against the bed as waves of pleasure overwhelmed her. I continued lapping at her pussy, drinking up her juices while I continued to massage her from within.\n\nEventually she stopped shuddering and looked a beautiful, nude mess. Hair splayed out, cheeks flushed, she grinned down at me with luxuriant pride. If you'd told me in this moment that she was a queen, I'd have believed you for the superior satisfaction on her face.\n\n\"That was... amazing...\" she said through ragged breaths. Her skin practically shimmered, and it was entirely possible that I'd never seen a more erotic sight than her in that very moment. I hoped that Brooke and Josie, if they weren't in the midst of some deep conversation where they better got to know each other (or mind-blowing sex), had a chance to see her as I did then.\n\n\"I told you I'd try to give you the greatest orgasm of your life,\" I said, kissing her swollen clit once more. She jolted in the bed, laughing at me as her eyes went wide.\n\n\"You came close,\" Alice said, trying to regain some of her playful, superior smirk.\n\n\"Oh? It wasn't?\" I said.\n\n\"Almost,\" she quipped.\n\n\"Oh well,\" I said, rocking my head from side to side playfully. \"I guess I'll have to try harder.\n\nAlice's eyes went wide. \"Ryan, I was only kidding, I wasn't- FUCK!\"\n\nI'd given her my best the first time, but to make good on my promise I gave her more than my best the second time around. If the first time I was going with precision, this time it was an all out attack on her pussy, playing with her furiously with my fingers, tongue and lips. While the first time I was taking my time, this time there was an almost frantic urgency to what we were doing, spurred on by Alice's body responding with waves of ecstasy every time I changed up my strategy.\n\nWhen the second orgasm I'd given her finally came around, I was a mess, my face covered in saliva and her juices, so much that I thought my breath might smell of her for a week, my hair messed up, glasses askew. Alice was a shuddering, screaming mess, her skin glistening with a fine layer of sweat as the waves of pleasure overtook her. I thought she might break my neck for how hard her thighs clamped around me, and if it was my end, it would've been the sweetest end in the world.\n\nHer orgasm seemed to go on forever, and if it had lasted that long, well, I'd have been one happy guy. It didn't, though, and soon she'd collapsed to her bed trembling and giggling, her breath coming out in big, ragged gasps. I sat up on the edge of the bed next to her, watching her in her splayed out, nude glory, our eyes boring into one another and sharing the intense eroticism of the moment. Neither of us said anything, we just stayed where we were, watching, sharing.\n\nBriefly, I turned my attention toward the window. Josie was up on her hands and knees with Brooke behind her, giving her a nice, savage fuck with a strap on. Josie's mouth was open in a great cry of pleasure. It would have been an exquisite pleasure to share with her, but if I couldn't share with them, I couldn't have picked a better place to be than where I was right now.\n\nThere was a shifting on the bed beside me. I turned my attention to Alice, who'd gotten onto her wobbly hands and knees and crawled over to me. With one hand, she pulled me in close, and for the first time we kissed. Her lips were soft and full, oh so wet with an eager tongue that happily licked her juices off my face. She sighed peacefully as we kissed, gently encouraging me to pull my shirt off and join her in happy nakedness.\n\nI obliged, and when I did, she kissed her way down my neck to my chest, sucking one of my nipples hard enough to make me gasp, before kissing her way down my abs before planting one deeply pleased kiss on the head of my cock. She opened her lips slightly, teasing the tip with her tongue.\n\nI hissed with pleasure.\n\nAlice wrapped her hand around my cock, slowly jacking it as she looked up at me and smiled. \"You were right, that might've been the best orgasm of my life. If it were up to me, I'd try to return the favor and show you the pleasures that my mouth is capable of, but I want you to stay hard, and if I put all of my oral skills to the test then you'd be useless for days. And in the spirit of wanting to keep you hard for later, I'm only going to give you a sample of how good I am at giving head, okay?\"\n\nI didn't think I had any room to argue here, especially when she opened wide and began sucking on the head in earnest.\n\n\"Oh... wow,\" I groaned, running a hand through her bountiful curls as she bobbed up and down on my cock, taking a little more in with each stroke. She was good, that much I knew, and if you forced me to choose just then I would've said that she was probably the best, but only because it is difficult to make a rational inventory and truly rank girls when they're inhaling much of your cock.\n\nAlice was amazing, though, sucking and licking me with an expert's mouth for detail, taking more and more a bit at a time until she'd taken my whole length into her mouth and throat. Alice gagged noisily as she continued to suck on my cock, getting it nice and sloppy, licking and sucking the head every time she reached the top. Her tongue ran over the head in firm, intoxicatingly exquisite circles, making me moan out loud. With everything that had happened since the shower with Brooke this morning, I was ready to explode at any moment, and Alice was bringing me closer and closer to the brink.\n\nShe knew this. She knew this when she started, and she knew this when she stopped, holding onto the base of my cock while I moaned like a wounded animal.\n\n\"Oh, don't be such a baby about it,\" Alice said, pushing me back onto the bed and urging me further up toward the head so I was entirely on it. She climbed on top of me, straddling my legs and hovering her pussy only inches away from my cock.\n\nWell, it was definitely easy to not be a baby about something when she offered that kind of motivation.\n\n\"You're amazing,\" I said.\n\nShe laughed, cocking her head toward the window. \"As amazing as them?\"\n\nBrooke now had Josie on her back and was fucking her missionary. It wasn't one of the positions I knew that Josie could be held in for long, but there was a distinctly beautiful look of intimacy as Brooke now slowly fucked Josie with her strap-on, kissing her periodically while they both eyed each other with something close to love.\n\n\"I don't know if anyone's as amazing as they are,\" I admitted. \"But I'm always ready to find out.\"\n\n\"Smooth answer,\" Alice replied, creeping forward, her pussy lips lightly grazing my cock. I hissed, she moaned, and we both looked into each other's eyes. This had been a long time coming, and a long time welcome. I don't know how long she'd wanted this, but I'd wanted this almost from the moment I first set eyes on Alice Talbot. That didn't stop my heart from beating as hard as it was. There was something between us, something distinct and intense that was difficult to shake and easy to urge me onward.\n\n\"I want you,\" I said, staring deeply into her warm brown eyes. There was so much I wanted to do, for her, with her, that I was paralyzed by indecision and need.\n\nI was grateful that Alice was not similarly held by indecision, leaning over to kiss me once, twice, three times, each more lingering than the last, each one full of heat and promise.\n\n\"I know,\" she replied, reaching between her legs to line the head of my cock up with her pussy. She rubbed her lips against me slowly, spreading her juices along the head. She took her time as I took mine, applying only the slightest pressure, slowly parting her lips around my head but going no further. It was a cruel, sweet tease that was only made sweeter by the look of pleasure on her face as she rubbed our sexes up against one another.\n\n\"You're having fun,\" I said, my voice full of need.\n\n\"Aren't you?\" Alice purred back.\n\n\"I am,\" I admitted. \"I just thought this was going to go different.\"\n\n\"Has everything today gone as you expected?\" she teased.\n\nShe had a point there. She also must have hit her teasing limit, because she settled oh so slightly onto my cock, pressing the head into her tight, hot, moist flesh.\n\n\"Yes...\" I hissed with relief, taking in the sheer joy of finally being inside her pussy.\n\nAlice was slow and deliberate, taking only a fraction of an inch at a time, but the soft moans that escaped her told me she was having a very good time. \"Oh... you looked big... you were big in my mouth... but you don't know how big until... goddamn...\"\n\n\"Too much for you?\" I taunted, running my fingertips lightly up and down her sides as she took my cock.\n\n\"Hardly. I'm just... savoring the moment,\" she said through gritted teeth, forcing slightly more of my cock into her waiting pussy.\n\nShe was more than halfway, gritting her teeth, grunting and cursing as she forced every little bit of me inside of her. I was in heaven, and I hoped she was too, but when she got past those final inches and sat on me completely, I knew from that smug smile that she was too. Playfully she reached behind her, reaching between my legs and toying with my balls.\n\nI quivered at her touch, in awe of the beauty on top of me.\n\n\"So, full admission,\" Alice said, looking down at the joining of our sexes, \"this is every bit as mad and wonderful as I'd been told. I've never been with anyone of quite your... aptitude, but it is, quite frankly, amazing. Well done, Ryan. Truly, well done.\"\n\nI didn't have any part in growing the way I had, and probably would've joked about that if her tightness hadn't put me into a sort of pleasurable overdrive, so all I could say was a truly shaky, \"Thanks.\"\n\n\"There's every chance we should have done this sooner. I could continue the tease and slowly torture you,\" Alice said, continuing to play with my balls, \"but if this feels as good for you as it does for me, why don't we get past that pleasantry and make up for lost time?\"\n\n\"Yes,\" I agreed, still in awe of being buried deep within her pussy. \"That sounds absolutely wonderful.\"\n\n\"Good,\" she said, raising herself off my cock ever so slightly before dropping back down. She repeated the process, rolling her hips to take more of me in, then out. The amazing tightness of her pussy was intense, but as we began to fuck more properly, it became easier and easier. Between my precum and her juices, we were well and truly lubed, and it didn't take much for her to start fucking nearly half of my cock in and out of her with each bounce.\n\nAt first we made out while we fucked, sharing wet, intense kisses that felt like they matched the intensity of our union, but as much as I enjoyed feeling this, I wanted to watch even more. I pushed her up into a sitting position, watching her impeccable tits bounce in time with our fuck. With my hands on her hips, squeezing her ass and guiding her progress, we soon got a fairly fierce rhythm going.\n\n\"Oh fuck, oh holy fuck this is amazing... biggest cock I've ever had... fuck, Ryan, you are truly something else...\" Alice groaned, running her hands through her curls and stretching them to the sky in a form of triumph.\n\n\"You're amazing. Fuck, you're so hot... so tight... so perfect,\" I said, the words just coming as she rode me.\n\n\"Oh yeah? So I'm perfect, huh?\" she challenged, falling back down on top of me without messing up her rhythm. She used her height to advantage, arching her back and pressing her tits against my face.\n\n\"If I'm so perfect, why don't you show these perfect tits a little of the worship they need?\" she proposed.\n\nWith every bounce of her body, her breasts rubbed up against my face, those rock-hard nipples temptingly tracing along my cheek, my lips. I'd had tempting invitations before, but this one was all too welcome in its absolute directness. I pulled one of her nipples into my mouth, suckling it, licking, worshipping it.",
        "It seemed to do the trick.\n\n\"Fuck, that's nice. Keep going like that, suck me like that while I fuck you...\" she intoned, looking down at me with a rather delightful look of superiority in her position. It was a good look on her, even better when I switched over to give her other nipple the exact same loving treatment.\n\nI didn't mean to be predictable, though, not with all the buildup we'd had to this sexual encounter. Wrapping my arms around her, I rolled so that I was on top of Alice.\n\nShe squealed with delight as I finally began to fuck down into her, giving her everything I had with every stroke. She grunted exquisitely every time I forcefully slid all the way home, my balls slapping against her ass with increasing speed as I fucked her.\n\n\"How's this for making up for lost time?\" I grunted.\n\n\"Fucking... fantastic!\" Alice cried out, her eyes nearly rolling back into her head as I fucked her hard, her hair splayed out in a beautiful mess about her on the bed. She wrapped her legs around me, pulling me in closer, deeper, wanting everything I had as it felt like we were both building up to orgasms. I wouldn't hold out like this for very long, not with Alice looking so hot and feeling so good beneath me. It was as if the strange emotions of this morning had opened up something long-simmering between Alice and me, and that we weren't going to be fully satisfied until this reached a truly explosive conclusion.\n\nI knew we could do better than this, though.\n\nI pulled out of her. She looked up at me, whining and desperate. \"What the fuck is that for?\"\n\n\"Get up on your hands and knees,\" I commanded.\n\nAlice looked up at me, confused. I added, \"If you get up on your knees and face the window, I can fuck you from behind while we both watch Josie and Brooke. I know you like to watch, and can you tell me that view honestly wouldn't make you cum even harder?\"\n\n\"Honestly, I'm quite well on the brink as it is, but if you want to make it even stronger for me, I shan't complain,\" she said, getting up on her knees as she faced the window. I got in behind her, marveling at the beautiful curves of her tight ass, wanting to do so much more but desperately needing to cum at the same time.\n\nI looked out the window toward Josie and Brooke. Brooke was on her back, while Josie was riding her strap-on, massaging her massive tits as her mouth hung open pleasurably. She looked over toward the window, toward Alice and me, and for a moment, our eyes locked.\n\nThat was the moment I slid my cock back home inside of Alice, grabbing her hips and fucking up into her hard. Gravity threatened to pull her forward, but I wrapped an arm around her stomach, holding her vertically so she could give a better show to Josie and Brooke should they chance a look over at us. Alice understood what I was going for well, and the way her body responded I was pretty sure it got her even more into it. She squeezed her tits, running her hands over her body and playing with her clit in a display of exhibitionist perfection. The two of us were a grunting, moaning blur, our bodies slapping together, her tits and hair bouncing wildly as I gave Alice almost my entire length with every stroke.\n\n\"Holy fucking god, so fucking big, so fucking deep, if you keep it like that, you'll make me cum again...\" she squealed. \"Just a little longer, like that, keep going, keep fucking me deep.\"\n\n\"Me too. It's gonna be soon, I can't hold out much longer,\" I said.\n\n\"Just a little longer, keep it going a little longer, I'm so close,\" she moaned.\n\n\"I'll try,\" I grunted back. I looked over at Josie, her eyes still boring into mine. Though we were separated by the windows between us, it felt like we had never been closer. She rode Brooke's strap-on harder and harder, matching the ferocity of Alice's and my fuck.\n\n\"Gonna be soon, so soon, fuckfuckfuck, keep going, almost there, almost there and cum in me, fill me up, almost there, keep going, keep going... FUUUUUUUUUUUUUUUUUUUUUCK!!!!!\" Alice cried out, her pussy clamping down on me as she came hard, shaking and squirting against my thighs.\n\n\"GODDAMN... FUCK!\" I grunted, almost going blind from the pleasure as I felt a long pent-up release finally set free. My balls contracted hard as shot after shot of thick cum flew out, filling Alice's pussy deep with my cum. I was dizzy from the exertion, and the release, holding onto her as if my life depended on it.\n\nWe were both on autopilot for a good while there after the cum, me still thrusting up into her every so often, her squeezing and twitching against me. I collapsed first, pulling out of her and falling onto my back on her bed, panting and staring at the ceiling. She wasn't far behind me, rolling over onto her back and desperately trying to catch her breath.\n\nWe turned our heads to look at each other, smiling faintly through our exhaustion. With seemingly great effort, she slid over beside me, and I put an arm around her shoulders. Wordlessly, she kissed me, a long, slow, deep kiss that conveyed a satisfaction that I hope I returned in kind.\n\n\"Amazing,\" Alice said between kisses.\n\n\"Perfection,\" I replied, kissing her again.\n\n\"When we've caught our breath, and I remember how my legs work, I think I'll grab a cold soda and get some popcorn so we can have something to snack on while those two finish up. What do you say?\" Alice suggested.\n\nI thought the suggestion over for maybe half a second before smiling and replying, \"Perfection.\"\n\n***\n\nAlice and I lay on our stomachs, sprawled out naked on her bed, a bowl of popcorn between us, and enough pillows propped beneath our heads to let us watch Brooke and Josie next door. The two of them alternated between some pretty savage fucking and quieter moments where they would sit or lay next to each other, talking about whatever it was they wanted to talk about. By their body language, I could see the two of them becoming closer, more casual. It was true, they didn't have much in common between them beyond me, but it looked like that was changing.\n\nStill, since we didn't know how much time they needed, Alice and I were content to watch and laze, still basking in the afterglow of our union. I toyed with the phone in my hand, wanting to look through the gallery almost as much as I wanted a text from next door.\n\n\"So... you're happy with your picture?\" Alice asked.\n\n\"I'm very happy with it,\" I said, thinking back to the obscene yet beautiful picture of Alice sprawled out on the bed, looking seductively into the camera while my cum still flowed freely from her pussy. Another amazing addition to the Senior Year Memories album.\n\n\"Because I can take another if you need,\" she suggested.\n\n\"You that desperate to fill up my phone with you naked?\" I teased.\n\n\"Hardly,\" she laughed. \"But I am a perfectionist, and if I'm going to have a picture as part of your legacy, then I want it to be a good one.\"\n\n\"My legacy?\" I asked. This wasn't quite how I'd thought of the album.\n\n\"It's what it is, isn't it?\" she replied.\n\n\"I don't... I don't think so,\" I said. \"I think a legacy is what you want to be remembered for, and I've still got a lot of life ahead of me that I hope to do something truly great in. I mean, I don't want to be forgotten for this year, but I don't want to be that guy who peaked in high school either.\"\n\n\"Well, I didn't mean to sound like I presumed you wouldn't do anything else, but you're making a fine time for the girls of this town, I'll say. You aren't the only one making memories, you know. A lot of us weren't exactly looking forward to this year, but you made it something special. I know I'm not the only one, so while it may not be the main legacy you wish to be remembered for in life, it is definitely a part of your legacy you should be proud of,\" Alice replied.\n\nShe had a point. The more I thought about it, the more I realized how proud I truly was. I'd had a lot of fun, and I'd tried to make sure the women I was with had even more fun, but it was nice to hear some confirmation.\n\n\"Thank you. Does that earn me a gold star?\" I quipped.\n\n\"One from me, sure,\" Alice joked back. \"The other girls, though, you'll have to ask them.\"\n\nMy phone vibrated from a new text.\n\n\"Speak of the devil,\" I said, unlocking the screen.\n\nBrooke: You guys wanna come over and get really freaky?\n\nI smirked. \"Brooke wants to know if we want to go over there and get *really* freaky.\"\n\nAlice didn't need to think on this too hard. \"Uh, fuck yeah!\"\n\nMe: That would be lovely. Be there soon!\n\nI looked across the way to my bedroom window. Though I couldn't see Josie, Brooke was as beautiful and naked as ever, enthusiastically blowing us kisses.\n\n\"We should get dressed, shouldn't we?\" Alice said.\n\n\"We should. Sounds a little counterintuitive to get dressed to have a foursome, but there you have it,\" I replied.\n\nPiece by piece we found our clothes and put them on. I had to pull on what I came in here with and hope that none of our stray juices had gotten wet, while Alice had the benefit of this being her room full of nice, clean clothes. After pulling on some fresh underwear and a bra, she pulled a nice and comfortable-looking pale blue dress from her closet.\n\nShe went into her attached bathroom to fix up her makeup and hair, but leaving the door open let me talk to her.\n\n\"Have you ever done anything like this before?\" I asked.\n\n\"It depends on what you mean. Having sex with three other people at once?\" she replied.\n\n\"Yeah, that was sort of what I was getting at,\" I said.\n\n\"No, that would be thoroughly new,\" she said. \"I've been with girls before, and guys, but usually in a one-on-one fashion.\"\n\n\"Is that why I detect a sense of nervousness in your voice?\" I teased, only slightly. I was hoping to rile her up a little, maybe even make her laugh.\n\n\"Yes,\" she replied plainly, finally stepping out of the bathroom after a fair few minutes of straightening up. \"How do I look?\"\n\n\"Gorgeous,\" I answered honestly.\n\n\"Thank you,\" she said, giving me a little twirl and sighing nervously. \"Come on, let's not keep them waiting.\"\n\nWe walked from house to house, no doubt looking like perfectly normal people who hadn't just savagely fucked and were on their way for something even more intense.\n\n\"Any words of advice on what we're going to get ourselves into here?\" Alice asked.\n\nI laughed. \"This is Brooke and Josie. You know them. Just relax and you'll have fun, trust me.\"\n\n\"Just relax, says the guy who's done this, what, how many times?\" she teased.\n\n\"A few,\" I admitted, thinking back on them quite fondly. \"Quality group sex has a way of following Brooke.\"\n\n\"Yeah?\" Alice asked.\n\n\"Yeah,\" I admitted. \"The first time I ever really had a good group moment was with Brooke, Kaitlyn and...\"\n\nI trailed off, finding it difficult to say Tori's name. Fuck, had Homecoming really been that long ago? It was only a few months, but it felt like a lifetime away. So much had changed and happened since then that I could barely recognize myself as the person I was then anymore.\n\n\"...and it was a lot of fun,\" I finished. Alice knew the story, so she didn't press me more.\n\nI forced a smile as we entered my house. \"And look at it this way: yeah, it'll be overwhelming at first, but you got me, you got Brooke, and you got Josie, three friends, people who like you, and who know each other sexually well enough that we should be able to bring you in without any trouble. Well, any serious trouble anyway.\"\n\n\"Oh?\" Alice asked.\n\n\"It all depends on how much you can fit up your ass, I guess; these two are kind of anal queens,\" I said as we approached my bedroom.\n\n\"Kinda?\" Brooke called out from the bedroom.\n\nWe stepped inside to see the glorious, messy sight of Josie and Brooke, naked on the bed. Both of them looked like they'd been to war in back, with messed up hair, smeared makeup, and lube and juices all over their bodies. Brooke lazily slid out of her well-used pink strap-on and tossed it aside before collapsing back on the bed, while Josie sat on the edge of the bed, watching us with predatory hunger.\n\n\"There's no *kind of* to it. We are *the* anal queens of Regan Hills,\" Josie said firmly, eying Alice and me appreciatively.\n\n\"Totally,\" Brooke replied, raising a thumb's up to us. \"BTW, Ryan, stepping out and letting us get to know each other was, like, the best idea in the world. Five stars, would totally recommend again. If we're all gonna be boyfriend and girlfriends, that was totally a good way to start.\"\n\nJosie nodded. \"Brooke here's a great fuck and a better conversationalist. You really should've gotten the two of us in one room like this before; god only knows what the two of us could be doing to you now if we'd gotten an earlier start.\"\n\n\"Well, today seems to be a day for making up for lost time...\" I said, looking at Alice.\n\nJosie looked at the both of us and smiled. \"Yeah. It is. I don't know how today went the way it did, but I'm glad it did.\"\n\n\"So sorry I roped you into this, Alice,\" Brooke said. \"This was supposed to be Josie and Ryan's and my day while we were celebrating figuring something out that, like, needed figuring out. We didn't want him to go far, so I'm sorry we kinda thrust you into our day.\"\n\n\"I'm not sorry,\" Alice said, a little bashful. \"We had a fine time.\n\nJosie laughed. \"A fine time? I'd call that more than a fine time. You two were fucking hot, and we were hot, so why don't the four of us just be hot together and see what comes of that?\"\n\nI looked at Alice. \"You game?\"\n\nAlice looked from me, to the luscious nude bodies of Brooke and Josie. \"Fuck yes, I'm game.\"\n\n\"Good. Then strip,\" Josie said bluntly.\n\nI didn't need much incentive to get naked in front of Josie and Brooke, and neither as it turned out did Alice. Our clothes must have hit the floor in record time, and if Alice had any timidity in this encounter, you wouldn't have seen it in her anymore. She stepped closer to the bed, her hips swaying provocatively as she did, sitting down next to Brooke, pulling her up and giving her a nice, long kiss.\n\n\"Mmmm, been too long since we did that!\" Brooke purred, smacking her lips.\n\n\"Tell me about it,\" Alice said, kissing her again.\n\nFrom behind, Josie wrapped her arms around Alice, gently squeezing her breasts and fingering her nipples. Alice moaned at the contact, letting herself get pulled into Josie's embrace.\n\n\"You two have had your fun before. You and me, we've only talked. I want to do more than talk with you,\" Josie said, getting a good handful of Alice's hair and pulling her head back, arching her back and giving Josie the perfect angle to passionately kiss her. You wouldn't have known that this was the first time the two of them were in the same room together for how easily they took to each other, making out and moaning as if they had done this plenty of times before.\n\nI knew that they'd texted and talked on the phone plenty before, but clearly I hadn't known the intensity of Alice and Josie's conversations.\n\n\"C'mere!\" Brooke exclaimed, beckoning me over to the bed. \"Don't wanna leave my new boyfriend outta the hot action.\"\n\nI smiled, sitting next to Brooke. She sat in my lap, rubbing her ass against my cock, wrapping her arms around my neck and kissing me playfully.\n\n\"I love you,\" I told her, loving the way it rolled off my tongue.\n\nShe kissed me again. \"Love ya too!\"\n\nNot wanting to be left out, Josie let go of Alice long enough to lean over to me and kiss me as well. It was longer, more fiery than Brooke's playful little kisses, a stamp on me that she was here first. It was all in good fun, and very, very hot.\n\nWhen she let go of me, I said, \"I love you too.\"\n\n\"Damn straight,\" Josie replied.\n\nCrossing her arms under her breasts in mock indignity, Alice said, \"And what about me?\"\n\nFollowing her playfulness, I said, \"I *like* you.\"\n\nShe nodded. \"I *like* you too. That sounds correct.\"\n\n\"Yeah, but when it comes to lovin', we, like, saw him first!\" Brooke exclaimed, wrapping her arms more tightly around me.\n\n\"Blondie's right; if you want to get to him, you'll have to get through us first,\" Josie said, pulling Alice back to her by the hair with one hand, while dropping another between her thighs to finger Alice.\n\n\"Oh my god...\" Alice moaned. \"Is that a challenge... or an invitation...?\"\n\nBrooke bobbed her head from side to side, sending her pigtails swaying. \"Both, probably.\"\n\nBefore Alice could respond, Brooke leaned forward and began sucking on one of her nipples. Not wanting the other to be left out, I leaned over and did the same. Alice, the newcomer to my bed, sat moaning and writhing in place, held in Josie's embrace as she was being fingered while Brooke and I sucked on her tits. Any hesitance was thrown out the window long ago, because from the brief looks I had of her face in this position, she looked like she was in heaven.\n\nI joined one of my hands with Josie's between Alice's legs, and Brooke soon did the same, allowing Josie to free her hand and slide it behind Alice.\n\n\"Oh... FUCK!\" Alice exclaimed as Josie began to play with her.\n\n\"Oh, you like getting your ass played with, don't you?\" Josie taunted.\n\n\"I like more than that,\" Alice challenged back, her voice fluttery and light from the pleasure she was receiving all over.\n\n\"So, you like to get fucked in the ass too? Good. Always nice to have another anal slut in bed with us; we're going to have so much fun with you,\" Josie said, kissing Alice's neck. \"Ryan may be intimidating at first, but when it's inside of you... oh fuck, there's nothing like it.\"\n\n\"I would imagine,\" Alice groaned.\n\n\"Don't worry about imagining now. Let us spoil you, make you cum hard; it'll loosen you up and make the next parts more fun,\" Josie declared.\n\n\"That... fuck... shouldn't... take... much,\" Alice moaned as her breasts, pussy and ass were pleasured by the three of us. I had a good time looking up at her, watching as her face went through the wild rounds of overstimulation, every so often closing her eyes tightly in concentration over what she was feeling, only for them and her mouth to soon open wide as if in shock over what was happening to her. Josie, Brooke and I had a lot of experience playing with other girls between us, and though the three of us had never worked together before, we were acquitting ourselves quite well on Alice.\n\nWe managed to get her oh so close, to a point where she was quivering and tensing up, ready for another good, hard cum.\n\n\"Okay, I think we've edged her long enough; I need to sit on this bitch's face,\" Josie said, disentangling herself from behind Alice. Gently, yet still forcefully, Josie pushed the Brooke and me away. Alice whined, but wasn't whining for long as Josie playfully pushed her onto her back on my bed, then straddled Alice's face. Josie sat there for a moment, grinding on Alice while looking a bit disgruntled.\n\n\"You know I like you, Alice, but if you don't want your breath to smell permanently like my cunt, I'd recommend you get eating and show me what you GOOOOOOOOOOOOOOOOOOOOOOT, MOTHERFUCKER!\" Josie cried out.\n\nI assumed by her response that Alice had begun to eat her pussy, and was pretty good at it too.\n\n\"Mmmm, that looks nice,\" Brooke said.\n\nI looked over at her, taking in her cute sexiness and how much I loved her. I kissed her quickly on the lips, palming one of her tits because I couldn't help myself and enjoying the moan I pulled from deep inside her.\n\n\"You want me to eat your pussy?\"\n\nBrooke squealed. \"I would totally *love* for you to eat my pussy!\"\n\n\"Good,\" I said, pushing her to the bed and crawling between her legs.\n\n\"Best! Boyfriend! EVER!\" Brooke cried out as I began to lap at her slit.\n\n\"Damn straight,\" Josie replied, continuing to ride Alice's face. Feeling a little bad for Alice, I reached over and meant to finger her pussy, but a single look from Josie stopped me in my tracks.",
        "\"She'll cum when the time's right. We all will. For now, we have fun,\" Josie replied, groaning and rubbing her tits as Alice seemed to be doing a rather remarkable job eating her out.\n\nI was trying to do much of the same, just getting lost in Brooke's pussy. I may have known her body as well as I knew my own, every turn on, every little button that got her going, and though it looked like she was positively overwhelmed by what Josie had been doing for her, I meant to go one up on Josie. Don't get me wrong, I loved her, but there was nothing wrong with a little friendly competition, especially when it got Brooke squealing and running her fingers through my hair.\n\n\"Like, fucking wow... I never get tired of this, never ever ever, fuckfuckfuckfuckfuckfuckfuck, I love this mouth, love this tongue, love that cock, I love my new boyfriend, *our* boyfriend and my new girlfriend and, fucking yes, this is soooooooooooo awesome!\" Brooke declared, laughing and squealing with pleasure as she ground her sex against my face.\n\n\"I gotta admit, I wasn't expecting this to work this well this quick. We get things going between the three of us for a few hours, and Ryan's already bringing a sexy new partner to bed with us. I could get used to a relationship like this,\" Josie said.\n\nNot wanting to be left out, Alice smacked Josie on the ass hard. Josie laughed. \"I think you were trying to be cheeky with that one, but believe me when I say my ass can take a lot more punishment than that.\"\n\nAlice smacked her even harder, causing Josie to hiss. \"Better.\"\n\n\"Yesyesyesyes, I fucking love it, fucking love it!\" Brooke exclaimed, getting a little shaky as she looked down at me with my face between her thighs, pinching her nipples in ecstasy. She looked at me with such a loving smile, one that I would've returned to her easily if my mouth weren't so full of pussy at the time.\n\nAnd then her face went from one of joy to concern. She pushed my head away.\n\n\"Hey, guys, like, we should totally stop real quick,\" Brooke said.\n\n\"I don't wanna,\" Josie pouted.\n\nWith one of her surprisingly strong arms, Brooke pulled Josie off of Alice's face, sending her sprawling on top of Brooke.\n\n\"Air!\" Alice gasped, taking in a very welcome breath.\n\n\"The fuck was that for? I was getting close!\" Josie exclaimed. I was with Josie on this one; Brooke voluntarily stopping herself as she was about to have an orgasm might well have been a sign of the coming apocalypse.\n\nBrooke began, \"Look, we're all having fun, but Ryan here, he's the one that, like, brought us all together, and he's right there with his cock pressed beneath him not having a lick of fun-\"\n\n\"I am having fun licking,\" I joked.\n\nBrooke rolled her eyes at me. \"-and that's a shame. Each of us got real close-like, and that's great and frustrating and a lot of fun, but, like, we're gonna totally go all in for some anal fun and other proper debauchery soon, right? So why don't we worship that cock first, all three of us get him all nice and slippery and lubed up, and then we can let him split our asses open one at a time like we oh so sweetly love?\"\n\nMy heart swelled at Brooke's suggestion, and while I'd have been very happy to continue pleasing her, the image of the three of them getting my cock all nice and wet did manage to make me twitch a little.\n\nWhile Josie didn't have an immediate response, still a little annoyed at being pulled off Alice's face, Alice wasn't held back by such constraints. She crawled over toward me pushed me into a sitting position, and kissed the throbbing head of my cock happily.\n\n\"As is often the case, Brooke presents some truly sound logic. If I'm going to squeeze this into my ass, I'd prefer it was nice and ready first,\" she said, kissing and licking the head of my cock.\n\n\"You do know we have a large stash of lube in here, right?\" Josie asked.\n\n\"As anyone practical and well-versed in the anal arts would have, but let's just agree that it's still fun to play with him with our mouths first, especially when he tastes as good as he does?\" Alice proposed, licking my head again.\n\n\"Thanks,\" I replied, smiling.\n\n\"Don't mention it,\" Alice replied, dropping her mouth onto my cock and inhaling as much as she could.\n\n\"Well, I'll never say no to sucking this cock,\" Josie said, sliding in beside Alice. She began licking my shaft and working my balls, kissing everything she could reach that wasn't in Alice's mouth.\n\nNow, admittedly a good blowjob is a pleasure like no other, and a good blowjob with two girls working my cock was even better. Having a third jump in...\n\nBrooke eyed the other girls sucking on my cock with a cute little smirk on her face. Quietly, she mused, \"One cock to please them all, one cock to find them; one cock to fuck them all and in the bedroom bind them.\"\n\nBrooke King, always full of surprises. At that, she leaned forward from the other side, sucking and licking and otherwise treating the other side of my cock as if I was a king. I leaned back onto the bed, moaning and losing myself to the pleasure. It was a strange sensation, three different girls I cared about greatly, each of them fighting over my cock for my pleasure. Honestly I was probably pretty lucky that I never got bitten by accident the way they were going at me, but they were gentle and oh so good. When one would get to the top, another would push her way, in, quickly bobbing up and down for a little while before another jumped in. Sometimes all three of them at once would be licking the head, kissing each other against my cock in a display that threatened to make me cum then and there.\n\nThey could've done this for seconds, hours or weeks as far as I was aware. I didn't care, really, lost in a sea of exquisite pleasure and never wanting to get out.\n\nThankfully, there was at least one person in the room who cared to take this to the next level.\n\n\"Alright, ladies, I think we, like, got him hard and wet enough,\" Brooke said.\n\n\"Not that I wouldn't mind a bit of that lube, anyway,\" Alice replied.\n\n\"Totally,\" Brooke replied.\n\n\"So, how do we want to play it?\" Josie asked.\n\n\"I'll get the lube,\" I suggested. \"You three line up and show me your asses, and I'll get you each one at a time. And... which one of those vibrators is the strongest?\"\n\n\"The magic wand,\" Josie said, smiling fondly. \"Oh, how I love the magic wand...\"\n\n\"Well, if you two haven't run out the charge on it already, keep it handy,\" I said.\n\nJosie nodded. \"I'm liking where this was going.\"\n\nI got off the bed and found my lube stash right where I'd left it in my toybox (even if the toybox looked like it'd been ransacked after a natural disaster with what Brooke and Josie had been up to), and pulled out a fresh bottle. Hey, better safe than sorry, right?\n\nWhen I turned back to the bed I was greeted by one of the most beautiful sights I think I'd ever seen.\n\nThree girls bent over on their knees, asses pressed right next to each other with their hands reaching back pulling the cheeks apart and showing me their beautiful pussies and assholes. From left to right I had an exquisite view of Alice's tight ass spread, showing me her tight, puckered hole, Brooke's round little butt with an asshole I knew like no other, and Josie's nice and juicy ass, spread ready and waiting. At their feet they'd placed the magic wand, leaving it to my disposal how to use it.\n\nIf ever there had been an impossible choice in my life, this was definitely one, but it was one I was willing to make. For the greater good, of course.\n\nI lubed up my cock generously, and after an agonizing moment of choice I crawled up behind Alice.\n\n\"Please take no offense, ladies, but I've never fucked Alice's ass before, so...\" I trailed off.\n\n\"Hey, I'd do the same if I was you,\" Brooke said.\n\n\"You already have,\" Alice replied.\n\n\"Oh, yeah, right!\" Brooke giggled.\n\n\"Just get her nice and ready for the rest of us, okay?\" Josie commanded.\n\n\"You got it,\" I said, running my lubed-up cock between Alice's ass cheeks. She quivered as I teased the head of my cock against her puckered hole, twitching and instinctively squeezing me with her ass cheeks. It was a nice feeling, and she had a tight grip; I only hoped the rest of her was so tight.\n\nI reached over for the vibrator and slid it under Alice, then, still grinding her ass, I bent over so that I could whisper in her ear.\n\n\"I'm going to fuck your ass now. If it's too much, let me know, but if it isn't, I'm probably going to be pretty merciless on you. I want to fuck all of you, make you cum with my cock up your asses, but since I know I don't quite have that much magic in me, I want you to turn this to its highest setting and start vibing your clit the moment I've bottomed out inside of you. You get me?\" I asked.\n\n\"Oh... holy fuck I get you,\" Alice moaned at my words alone.\n\n\"Good,\" I said, kissing her back before I got back up behind her. I savored her ass for the moment, and the looks of the other girls waiting in anticipation, running it up and down the valley between her two muscular cheeks. Deciding I was done with teasing, however, I soon took hold of my cock and aimed it at her tight, puckered hole, and began to press inside of her.\n\n\"Oh, holy mother of... FUCK THAT'S A BIG DICK!\" Alice cried out as I pressed the head inside of her. I couldn't see her, but I had to imagine that her eyes were about as big as saucers as I pressed inside.\n\n\"I thought you said you had experience?\" Josie taunted, knocking her hips against Brooke's, who knocked into Alice.\n\n\"I do, and I know how big he is, but... MOTHERFUCKER!\" Alice cried out.\n\n\"Yeah, it's pretty flippin' huge, but it gets more fun the more's inside of ya, trust me,\" Brooke said.\n\nPersonally, I was in heaven as my cock invaded her tight, forbidden hole, but before I went any further I wanted to make sure she was going to enjoy it too. I leaned back over her, whispering in her ear, \"You want me to stop?\"\n\nAlice turned her head, arching her neck to kiss me, then said, \"Not on your fucking life.\"\n\nShe pressed her ass against me, swallowing another couple inches of cock. She winced with pain, but it was a pain mixed with pure pleasure.\n\n\"Good,\" I said, smiling and getting back into character. \"Because you feel that? That's my cock feeding into your ass an inch at a time, stretching you out like you've never been stretched before. I'm pushing into you, and I'm not going to stop until I've got every one of my ten, thick inches inside of this tight little asshole of yours. I'm going to make you scream. I'm going to make you beg me to make you scream. And when I start fucking you and you've got that vibrator against your clit, I'd wager you're going to have the biggest fucking orgasm you've ever had in your life. Would you take those odds?\"\n\nAlice wasn't much for words at this point, but she was for whimpering and nodding her head.\n\n\"Good,\" I said with one last thrust, bottoming out inside of her. \"Because all of my cock's inside of you now. Turn on the fucking vibrator.\"\n\nAlice groaned a primal, almost inhuman groan, but when I heard the sudden mechanical vibrating sound beneath her, I knew we were in for some fun. I got up on my knees behind her, grabbed onto her hips, and I began to fuck her.\n\nThis wasn't a big, emotional joining of bodies and minds, no, that was our first time together. At this point, all three of us knew each other's bodies well enough. This time we were just fucking. Pure, animalistic fucking as I pounded almost the entire length of my cock into her ass with every stroke. Between my efforts and the vibrator, Alice was a screaming, swearing mess, thrusting her ass back at me as hard as she could as I fucked her mercilessly.\n\nWaiting in line, so to speak, Brooke and Josie looked on and offered encouragements, fingering each other and cheering us on. What they were saying, I couldn't tell you, so lost was I with what I was doing to Alice, but I knew that it was good, and that it was foul.\n\nWith how worked up she'd been before, it was little surprise to me that Alice came once again and came hard after only a few minutes of our fuck. She collapsed against the bed, writhing and panting, my cock sliding easily from her ass and leaving a gaping hole in its wake. I couldn't say if it truly was the best orgasm she'd ever had, but by the way she kept shaking, rolling over and with eyes rolled back into her head, I knew it must have been pretty damn good.\n\n\"One down,\" I said, picking up the vibrator and handing it off to Brooke.\n\n\"Oh, goodie!\" she squealed as I climbed between her legs and lined my cock up with her ass. By this point in my life, I was about as familiar with Brooke's ass as I was with anything on my body, and still it amazed me how fucking tight she was. I still had plenty of lube, and even then it felt like I might risk cumming just by sliding inside of her. Thankfully, the number of orgasms I'd had today already delayed that quite handily, and sliding inside of her tightest hole still felt, as ever, like going home.\n\nTossing her pigtails over her shoulder, she smirked up at me cutely, daring me to lean in and kiss her as I bottomed out inside of her. This, I didn't have a problem doing.\n\n\"Admit it, of all the asses in all the whole big, wide world, you ain't never had any like mine,\" she said, gyrating against me and squeezing at the same time.\n\nI pulled out slightly and thrust back in nice and hard, making her squeal. \"No, I haven't, but you've never had a cock like mine either. I may not be the biggest a cute little cheerleader slut like you has ever had, but I know how to use mine like no other guy has. I know your every switch and button, every little square inch of you that will set you off like a fucking fireworks factory set ablaze. I'm going to fuck your tight little ass, Brooke, because I love doing it, and I love you, and I know how much you love me making you scream,\" I hissed at her, kissing her once more for emphasis.\n\nSweetly, she smiled at me, and I heard the sound of the vibrator being turned on. \"Oh, this is so fucking on. Fuck my slutty ass Ryan, fuck me hard!\"\n\nI did. Oh how I did. I reared up behind her, grabbing her hips and giving her all I had, fucking Brooke as hard and as dirty as I knew she liked to be fucked. I realized that this may have been at this point a show, letting Josie and Alice know now that Brooke was my girlfriend now, and I wanted to show how I fucked my girlfriends. Josie knew this well, but at the same time the way she watched me fucking Brooke told me that she enjoyed a chance to watch.\n\nAlice watched Brooke and me fuck with something approaching religious awe in her eyes, watching the two of us go at it with a look of growing lust on her face. She crawled up beside me, pressing her breasts into my side and getting up on her knees to kiss me, but with legs as shaky as hers still were, she collapsed quickly. She rolled onto her side, kissing and touching Brooke, playing with her tits and grabbing her ass, helping Brooke and me fuck as best as she could.\n\nShe was a little late to this party, though, as Brooke came quickly, screaming and squirting and clamping down on me so hard that I felt like I truly was in danger of cumming this time, but no, I held firm, I held strong. I wasn't ready to cum just yet.\n\nNot when I still had...\n\n\"Ready for the main event?\" Josie said, looking over her shoulder at me. She flexed her amazing, round ass at me, teasing me with her exquisitely tight hole.\n\n\"Fuck, I love you...\" I said as I crawled up behind her.\n\n\"I love you too,\" she said, reaching back and playfully squeezing my erection.\n\n\"Nuh uh, no way,\" Alice said, sliding up next to Josie. \"I may have been too cum drunk to get in on Brooke here (sorry about that, by the way)...\"\n\n\"Hey, don't worry about it. You'll, like, totally make it up to me later,\" Brooke said.\n\n\"You know it,\" Alice continued. \"...but there's no way I'm going to miss out on giving Josie the best fucking time of her life.\"\n\n\"I have no idea what you're talking about, but whatever it is, I'm onboard,\" Josie said.\n\n\"Good,\" Alice said. \"Up on your knees.\"\n\n\"Ooh, this sounds fun,\" Brooke replied, watching as Josie listened and got up on her knees. I couldn't help but wrap my arms around her, massaging her tits and making out with her a little while Alice slid into position beneath Josie, her face only inches from my goth girlfriend's cunt.\n\nAlice said, \"That's because it will be fun. I've wanted to 69 with Josie almost since we started chatting-\"\n\n\"Awww, thank you,\" Josie replied.\n\n\"My pleasure,\" Alice said. \"So why don't we have a little of that fun right here and now. Ryan gives your ass a nice, savage fuck, you and me have a nice, frantic 69, and Brooke here fills in wherever her wicked little imagination guides her.\"\n\nImmediately, I replied, \"I see absolutely nothing wrong with any part of what you just said.\"\n\n\"Me neither,\" Brooke replied perkily.\n\n\"I really like being in a room full of hot, smart people,\" Josie admitted as Alice slid in beneath her.\n\n\"Amen,\" Alice replied, pulling Josie's bountiful ass down on her face. Josie moaned with great pleasure as my neighbor expertly ate her out.\n\n\"You should really, ohfuck, you should really get your cock up my ass and start fucking me like there's no tomorrow before I forget why I'm here,\" Josie purred as Alice noisily lapped at her pussy.\n\n\"Working on it,\" I said. Brooke had slid off the bed momentarily, but only to grab some more lube to get my cock nice and sloppy.\n\n\"Thanks,\" I said, rather enjoying the slick handjob she gave me.\n\nBrooke got up on her tip toes, enough to whisper in my ear. \"Oh, this isn't just for your cock.\"\n\nShe kissed me on my cheek, leaving me nice and confused, before she lined my cock up with Josie's asshole and helped me press inside.\n\nJosie and I shared a nice hiss as I sank into her ass. The only girl whose ass I might have known better than Brooke's, I groaned happily as I sank deep inside of her. She may not have had the tightest ass in the world, but she was still damn tight, and damn comfortable.\n\nAs I had with the other girls, I leaned over her. I did this gingerly, not wanting to put any additional weight on Alice beneath both of us, but I was going to still give her every bit of dirty talk I'd given the other two.\n\nI kissed her hard, then whispered in her ear. \"You know I love you, but don't think that means I'm going to go easy on you. While you've got your mouth full of cunt, I'm going to be railing your perfect, slutty ass. I'm going to make you scream, and I'm going to make you cum hard all over Alice's pretty face, because that's something you like, isn't it? A nice bit of defiling? Does that get you nice and hot, juicing all over her face? We can make it better, you know, because I'm going to cum soon. I'm gonna cum right inside of your ass, and you're gonna drip it all over her face, and then I'm gonna take a picture as you and Brooke lick her clean. How's that for a nice bit of defiling?\"\n\nJosie looked up at me as if she'd never seen this side of me before, but rather than say anything she kissed me deeply and dove into licking Alice's pussy.\n\nI knew the two of them would be going at this for a while, and I meant to make good on every word I'd hissed in Josie's ear. I began to fuck her without mercy, pounding her ass with almost the entire length of my cock, my balls slapping against her flesh and stroking Alice's face as the two of them did their best to make each other cum. Though I didn't know Alice's recovery time just yet, I knew that between Alice and me, Josie would be cumming hard and cumming soon.\n\nI just wanted to be there to join her.\n\nOn its own, this didn't seem a very difficult task, but when I felt Brooke press herself behind me, I knew I wouldn't have any problems. She rubbed herself against me, her nipples scraping my back and the moistness from her pussy pressing against my ass. That wasn't the only moistness I felt, however, as she ran her lubed up fingers between my ass cheeks. She probed only experimentally at first, but when she reached my asshole and made me groan, I knew she was smiling.",
        "\"One finger, or two?\" she asked me, running her lubed fingers in circles around my own asshole.\n\nI caught her meaning well enough. I grunted, \"Two. Please.\"\n\nPlayfully, Brooke lightly bit my shoulder, then whispered huskily into my ear, \"Goodie.\"\n\nShe pressed two fingers against my tight hole, and with some effort managed to slide them into me as I fucked Josie up the ass. It was pure filth, the best kind of filth in my honest opinion, and it felt amazing. The pressure set my nerves alight and managed to spur me on to fuck Josie even harder. How we all managed to stay entwined is probably a miracle in and of itself, but somehow we did it.\n\nWith Josie's amazing ass and Brooke's expert thrusts into mine, I was close to cumming. The way she squeezed my cock with her ass, I knew Josie was close to cumming. The way she writhed and moaned beneath us, I knew that Alice was getting pretty close as well. The only one who wasn't close was Brooke, but she seemed to be having so much fun fingering my ass and pushing me to my limit that I doubted she minded much, especially since we'd no doubt be helping her out shortly.\n\nIt was all a matter of who was going to go first, and truly I didn't care. With pleasure like this, it could have gone on for days for all I cared.\n\nIt wasn't going to, of course, because while we were good, none of us were *that* good.\n\nJosie broke first, cumming with a gush of fluid all over Alice's face that even I could feel from behind her. Alice wasn't far behind her, crying out from Josie's ministrations and shuddering beneath her, holding onto my girlfriend for dear life as she was racked by another powerful orgasm.\n\nAnd this was where I hit my limit. All the buildup, all the exquisite tightness, and Brooke's insistent fingering of my ass pushed me over the edge. With a grunt and a surge of pleasure that threatened to take all the strength my body had from me, I came up Josie's ass. I'd cum a number of times already today, so it wasn't the most earth-shattering flood of cum you'd ever seen, but the way it came out of me it felt like a pretty solid flow.\n\nI made good on my promise to Josie, pulling out of her stretched-open asshole for a moment and saving some of my last shots for Alice's face, while the rest of my cum began to dribble out of her onto Alice. Alice didn't seem to mind in the slightest, catching what she could on her tongue while laughing in a post orgasm haze as other drops landed on her cheeks and forehead. It was a dirty, glorious sight, one I truly hoped to never forget.\n\nI actually did try to move, to stand and go get my camera, but my legs barely worked. Brooke pulled her fingers from me, and I collapsed on the bed on my back next to Alice, and when Josie rolled off of her and onto her back next to me, we must have made a perfectly obscene trio.\n\nMy eyes fluttered closed for a moment, luxuriating in the pleasure of the afterglow as it wrapped around my body like a comfortable blanket. Josie curled up around me very pleasantly, and though I couldn't see her, I kissed her forehead. She purred contentedly, running a hand down my abs rather pleasantly.\n\nThe flash of a camera showed clearly through my eyelids, and without seeing, I knew exactly what happened.\n\n\"Thanks, Brooke,\" I said.\n\n\"Hey, any time! You were all lookin' so perfect and sexy, someone had to get a pic!\" she said excitedly. I opened my eyes in time to see her bounce back onto the bed and begin to lick all the various juices off of Alice's face.\n\n\"Hey, leave some for me,\" Josie said, groggily getting to her knees and crawling over to the other two. I had front row seats to the three of them making out, sharing Josie's and my cum as if the mix were the greatest, sweetest concoction in the world.\n\nMy cock twitched at the image.\n\n\"I hope you ladies understand that we've only just begun, right?\" I asked.\n\nJosie and Brooke looked up from Alice for a moment, first at me, then at each other. Brooke smiled.\n\n\"Best,\" Brooke said.\n\n\"Boyfriend,\" Josie continued.\n\n\"EVER!\" Brooke squealed, jumping up onto me and playfully smothering me with her boobs.\n\n***\n\nI lay in bed between Josie and Brooke. All of us were naked, covered in various sex juices and lube, and in a state approaching comatose for all the intense fucking we'd taken part in that day. It was like we'd run a marathon, but unlike the orgy when you could take a break while other people took their turns, with only four of us we held each others' attention well, and that meant little breaks. Sure, we'd occasionally take breaks to hydrate to hydrate, go to the bathroom, nap and eat, but then we were back to each other.\n\nJosie, Brooke and I could afford to collapse after all we'd done. Alice wasn't so lucky. She dressed gingerly, moving slowly and wobbily on her legs, looking like she'd been through war. She'd washed most of the cum and juices off of her face, but her hair was still a mess. Her clothes were uneven and haphazard, and no matter how hard she tried, there was a visible wet spot in the front where all the cum had leaked out of her, especially with her panties long discarded.\n\n\"You guys are... fucking amazing... I just... wow...\" Alice said. Josie, Brooke and I stayed curled up on the bed together, silently observing her but much too tired to do anything about it.\n\nAlice continued, \"If I didn't have to dinner with Mom, I'd be here forever, but I do, so... fucking hell, my god, that was amazing! I've never been fucked like that before! If you all want to party like that again, sometime, please call me, please, please, please?\"\n\n\"No problem,\" Josie said. Brooke only managed a weak thumb's up.\n\nAlice and I exchanged a lusty smile. Things had built up between us for a while, and the release was everything I'd hoped it would be. The way she smiled back, I was pretty sure it was for her as well. It wasn't going to be the same between us as it was with Josie and Brooke, because Alice and I had our own strange thing going on, but I was curious to see how it developed.\n\nAnd very, *very* glad that she was my neighbor.\n\n\"I want to stay... I really do... but I should really let myself out before I stay forever... god I need to shower before Mom sees me... But... fuck, you guys were amazing,\" Alice said, walking out of my room. For a brief moment, there was silence, but then she called back once more, \"AMAZING!\"\n\nWhen we heard the front door close, I said, \"Did you hear that, guys? I think we're amazing.\"\n\n\"I don't need to be told we're amazing. I know we're amazing,\" Josie said confidently.\n\n\"Fuck yeah we do,\" Brooke replied, cuddling up next to me. \"We totally make a cute and slutty throuple.\"\n\n\"Throuple?\" Josie replied.\n\n\"Mhm, there's, like, three of us, so we're more than a couple, so, throuple,\" Brooke replied.\n\n\"I've heard the word,\" Josie responded. \"I just never thought I'd be in a relationship with someone who used the word 'throuple.'\"\n\n\"Hey, AP English, bitch,\" Brooke teased. \"You'd be surprised at the words stocking my vocabulary.\"\n\n\"Totally,\" I replied, sinking back into the bed. \"I love you. Both of you.\"\n\n\"Hey, the feeling's mutual,\" Josie replied.\n\n\"Totally,\" Brooke said.\n\nI smiled, because I honestly could have fallen asleep right then, but images of the filth that went down between the three of us over this day kept me from doing so. Images that would forever be burned into my memory, and that I would hold onto whenever I needed a moment of brightness.\n\nJosie's tits wrapped around my cock while Brooke and Alice fucked her senseless from behind with whatever toys they could get their hands on.\n\nAlice with my cock buried deep in her ass and Josie fucking her while wearing Brooke's strap-on. Alice likely would've been screaming from the double-penetration if her mouth weren't full of Brooke's ass.\n\nBrooke tied to the bed for close to an hour while we did what we could to see just how many times we could make her cum. I think she topped out at nine, but some of them were hard to be sure of.\n\nLying on the bed, blindfolded and with my arms bound above me, while the girls took turns sitting on my face, seeing how good I was at guessing who was who while making them cum.\n\nAll three girls wrapped in a sort of triangle, Brooke's face buried in Alice's pussy, Alice's face buried in Josie's pussy and Josie's face buried in Brooke's pussy. They ate each other with gusto, trading orgasms freely while I stood over them masturbating until I came all over them.\n\nAll of these were but glimpses into the debauchery that we'd gotten up to, but at the end of the day the feeling I cherished most was holding Josie in one arm and Brooke in my other, each of them with an arm draped across my chest so they could hold hands with each other.\n\n\"You know, I think we can actually make this work,\" I said.\n\n\"Fuck thinking about it, I, like, *know* we can make it work,\" Brooke replied.\n\n\"Totally,\" Josie replied. Brooke squeezed her hand on me, and I couldn't help but smile.\n\nHonestly, it was pretty hard not feeling like I might just have been the luckiest man in the world at this moment. With arms wrapped around each of them, I fell into what must have been one of the most pleasant slumbers I'd ever had.\n\n***\n\n(Author's Note 2: Writing this story is something I do in my spare time for fun, so if you're enjoying this, please, please, please drop some stars, reviews or shoot me some feedback, as they really keep me going (and please vote on any earlier chapters you enjoyed if you haven't already!). Though I may not always respond, I do love hearing from all of you and seeing that you're enjoying the series. It motivates me to continue writing more. You've all been wonderful and I can't thank you enough for all of your kind words and encouragement and yes, even the constructive criticisms!\n\nAnd after some recent crises and battles, I want to add one last note on a more practical concern. When it comes to mental health, I hope everyone out there is taking the time to take care of themselves. Mental health may seem like a never-ending battle, but it's a never-ending battle that is always worth fighting, and one that there are plenty of resources to be found to help with should you ever be struggling. Be good to yourselves, and to everyone else.)"
    ],
    "authorname": "aimingtomisbehave33",
    "tags": [
        "18-year-old",
        "anal",
        "asian girl",
        "black girl",
        "cheerleader",
        "goth",
        "group sex",
        "high school",
        "slut",
        "voyeur"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/senior-year-memories-ch-30"
}