{
    "title": "Orphan Ch. 05",
    "pages": [
        "Just a quick thank you for all the comments on this story, I'm very pleased that everyone is enjoying it. I really appreciate the support. V\n\n*\n\nThe storm broke loose at midnight.\n\nThe sound of hard heavy rain on the metal roof of the house roused Alexander from a dead sleep. The week in the mountains had been good but tiring. After getting home from the yard and taking a quick shower he had fallen almost instantly asleep. Now the pounding rain beating out a cadence on the roof had him staring at the offending ceiling.\n\nThunder boomed, echoing off the mountains and shaking the house to its foundations. Alexander felt his pulse increase. It had always been this way. He loved the fury and power of such storms, the unassailable nature of their force. Alexander took comfort from such things, feeling that it provided a stark reminder that there were things in the world that could not be controlled, that were far stronger than anything wrought by man.\n\nHe remembered many a night spent on the orphanage roof when he would stand in the face of a Nor'easter. The biting wind and icy rain wrapped his body in its power. Much to the chagrin of the nuns when they inevitably found him in the morning.\n\nAlexander arose, the darkened room momentarily illuminated by a flash of lightning arcing down from the heavens to strike nearby, the sonic crash came almost immediately after. Alexander smiled in the darkness as his eyes tried to readjust following the blinding flash.\n\n\"Mother nature's putting on a good show tonight.\"\n\nAs he stepped out onto the porch his words were drowned out by another wave of sound from thunder further up in the mountains.\n\nThe trees swayed violently in the coursing wind that came with the storm. The night was pure dark, whitecaps roiled in the lake like specters when the lightning illuminated their ivory dance. Alexander was soaking wet in an instant. He didn't care; he reveled in being so close to so much primal power. It made his blood pulse faster through his veins, his muscles flex involuntarily as the cool hard rain ricocheted off his taut body.\n\nHe stood there for a long time, eyes closed, arms out as Mother Nature proved once again what true power and fury were. Alexander felt a part of her, seemed to pull power and purpose from standing within the whirlwind of her display.\n\nWith a smile Alexander gave the storm a brief nod of appreciation, a small thank you for allowing him to be a spectator at her dance. Turning to the door he paused when, between the thunder and rain and wind, another sound found its way to his ear.\n\nAlexander's body tensed as he turned back to face the storm. Senses heightened he closed his eyes knowing that they would do him no good searching for the sound he heard. Seconds ticked by in time with his heartbeat as his ears strained to cut through the noises of the storm...\n\nThe creak of the ancient trees as they bent against the winds fury.\n\nRain pounding against the earth in a background roar.\n\nThunder bellowing through the mountains, seeming to gain tenor and pitch as its vibrations jarred his bones.\n\nAlexander became calmer, tuned out more and more of the tumult.\n\nAnd then it was there, a small sound amongst giants, a plaintive whimper behind the whirling fury of the storm. Alexander's eyes snapped open as he streaked into the storms gaping maw intent on finding the source of the whimper.\n\n-vVv-\n\nJenabel rose so quickly from her bed that she fell right off with a hard drop to the floor.\n\n\"God damn it!\" She cried rubbing her aching hip. The earth-shattering crash that roused her sounded as though a train had decided to make a run through her house.\n\nShe looked around dazed for a moment, her place on the floor skewing her perspective for a moment before full consciousness found her. A storm raged outside her window but that was not what had pulled her from sleeps sweet embrace. She was born and raised in these mountains, had long ago tuned out their various rumblings. No, the unnatural sound of something way too large meeting the earth was what roused her from sleep and dreams of Alexander.\n\n\"Alexander.\"\n\nThe name slipped past her lips in whisper. It did not bring the longing ache that it usually did when she indulged herself to hear her voice give name to that which should be hers. This time it brought comfort, in the way a favorite blanket does in the deep end of night when the monsters of our imagination crawl forth from our psyche.\n\nPulling on her robe Jenabel hurried to the door. Opening it the rain slashed in and she was surprised when Brad bolted through it. She slammed it after him, cutting off the downpour and the howl of the gale.\n\n\"What is it?\" Jenabel's voice was tense, thick with emotion. She knew something must be wrong if Brad was already darkening her door at this hour - in this storm. She glanced over him quickly and her apprehension only grew. He was dirty, in the minute or so he had run between his home and Jenabel's, mud had caked his jeans and rain slicker. Jenabel noted the high intensity flash lights they used at the mine in his hand.\n\nBrad took deep breaths, trying to fill his lungs with oxygen and calm his frenetic heartbeat before answering.\n\n\"The Halston's house had a tree come down right through the middle of it.\"\n\nJenabel nodded as she dashed for her room. Retuning quickly she was dressed much as Brad was.\n\n\"Let's go.\" Jenabel's voice was strong but as they made their way out into the storm she thought of the Halston's and tears flooded her eyes. The Halston's were one of the first families to join the Benton's in the wilderness. Their strength and easy ways would be greatly missed. Jenabel's sorrow turned quickly to fear as her eyes met Brads.\n\nThey sprinted across the compound to join the others who had gathered, her father was just about to enter the wreckage when he saw Jenabel and Brad.\n\n\"Jenabel, you shouldn't be here.\"\n\nShe knew her father meant well but it did make her weary how often he tried to protect her. Grabbing the light out of Brad's hand she looked at her father for a moment before running into the mangled house.\n\nThe roof was completely destroyed. Floor joists from the upstairs hung down at odd angles as Jenabel picked her way through the damage. The Halstons, John and Karen and their three kids, Missy, John Jr. and Amy would most assuredly have been home. Jenabel, seeing the destruction first hand felt hope slipping away.\n\n\"I'm sure they are alright Jenabel.\"\n\nBrad's voice comforted her as they made their way around the ancient oak which had chosen this night to finally give up its long battle with gravity. A low moan could be heard to their right. Jenabel and Brad made there way toward it.\n\n\"There!\" Jenabel cried as she saw a hand move weakly from under some debris.\n\nBrad moved quickly, clearing away the sodden sheet rock to uncover Karen and John Sr. They were moving, eyes open but they looked to be in shock. Jenabel couldn't blame them. It looked as thought the tree had pushed their bed from the second floor to the first floor, paying little attention to the wood and stone that separated the two.\n\n\"Let's get them over to the infirmary.\"\n\nCarl Benton directed his neighbors to Karen and John as Jenabel moved deeper into the wrecked house. Behind a door knocked off its hinges and around tree branches the size of telephone poles, they made their way further into the house until they finally heard a small cry.\n\n\"Over here!\"\n\nBrad moved a piece of a half fallen wall to find both Missy and John Jr. huddled together.\n\n\"It's okay now; we'll get you out of here.\" The kids nodded and calmed somewhat at seeing Brad and then Jenabel.\n\n\"Let me have Missy.\" Jenabel said as she reached for the girl.\n\nBrad handed her up to Jenabel then grabbed John Jr. Together they made their way out of the ruined husk.\n\n\"Where's Amy?\" Missy asked Jenabel as they cleared the debris.\n\n\"I don't know honey we'll find her. Don't you worry.\"\n\nMissy tried to be brave but the tears overwhelmed her as Jenabel handed the girl over to one of the others that had come to help.\n\n\"Get her over to the infirmary with her folks.\"\n\nThe man wrapped Missy in a blanket and hurried off.\n\n\"We have to find Amy!\" Jenabel yelled over the storm. She was about to run back into the shattered house but her father grabbed her before she could move.\n\n\"She's not in there Jenabel, she must have gotten scared and run away.\" She knew her father was right, she hadn't sensed anyone else in the home.\n\nBrad and Carl saw the blood drain out of Jenabel's face as the truth of what happened to Amy began to sink in. After a moment her shoulders squared and her eyes took on a steely gleam.\n\n\"Well let's go, the middle of this storm is no place for a three year old girl to be alone.\" Jenabel's words were quick and cutting; Brad and her father understood why.\n\nWhen Jenabel had been four she got lost in the woods around the compound during a very similar storm. It raged for two days. With all the wind and rain they couldn't track her and had to wait 'til the storm broke. She had spent thirty hours out in the forest alone before her father and brothers finally found her. Brad and Jenabel moved out into the storm, their only thoughts on finding the child, neither very hopeful that it would be an easy task.\n\n-vVv-\n\nThe storm fought Alexander every step of the way as he moved with purpose toward the sound. Wind whipped branches left deep, livid scratches against his bare chest and back. The unrelenting rain blurred his vision and burned his eyes. With only brief pauses where he would allow the storm to quiet in his consciousness to ensure his bearing was true, he made his way closer and closer to the sorrowful whimpering that had cut through the storms rage to find his ears.\n\nAlexander came to a halt before a felled tree. It was an old giant that had finally given up its deep hold in the earth. He was surprised that this beast hitting the ground hadn't woken him. Searching through the littered branches and debris the whimpering grew quite loud as whatever it was noted his arrival.\n\nAlexander moved methodically around the fallen tree, searching every inch of space he could until finally, moving a tangled mat of branches he found the source of the whimpering.\n\nThe wolf pup stared up at him in obvious pain and fear, one of the larger branches of the tree had trapped its leg effectively immobilizing it. With a strong jerk accompanied by a loud crack Alexander snapped the large branch from the rest of the tree and threw it into the still howling storm. As soon as it was free of the branch, the pup moved fast, trying to run away. Unfortunately its back leg buckled under the strain and the pup tumbled to the ground with loud yip.\n\n\"Easy there little guy, I won't hurt you.\"\n\nAlexander's words cut through the surrounding din; the young wolf focused on him, its wild fear noticeable for a moment before it gave a small sigh and went limp. Alexander quickly but gently picked the wolf up, shielding it in his arms against the rain he made his way back to the house.\n\n\"I'm glad I turned the house lights on little one or neither of us would get dry tonight.\"\n\nAlexander's words were soothing and he felt the animal push closer to the warmth of his body. This brought a weary grin to his lips as he made his way up on the porch and pushed through his half open door. Placing the soaked little animal on his bed Alexander retrieved two towels and dried himself off. Hooking the towel around his waist he turned his attention to the young wolf. It was looking around but didn't seem nearly as frightened as it had.\n\n\"Let's get you dried off, okay? You look like a drowned rat.\" Alexander said with a smile as he bundled the small wolf into the other large fluffy towel and began to gently dry it. He noted the small yip the wolf made when he dried its back right leg.\n\n\"Looks like you got banged up a little there, let's have a peek.\"\n\nAlexander turned the wolf on its back and looked over what he found to be her back legs. The left one looked fine. The right one however showed a deep gouge that was slowly oozing blood.\n\n\"Ouch, that can't feel good, don't worry honey we'll get you fixed up.\" Alexander crossed the room and retrieved his well equipped first aid kit.\n\n\"This is going to sting some.\" Alexander laughed at himself for talking to the pup as if it were a child. He put a gentle restraining hand on her belly before pouring a good portion of hydrogen peroxide into her wound. He felt bad when she yelped but there was nothing for it.\n\n\"Shhh, the worst is over now little one.\" His words were soft and gentle as he carefully wrapped her leg in gauze. She watched him with curious eyes, her little body still quivering now and again.\n\n\"There we go, you should be good as new in a few days.\"\n\nAlexander gently rubbed her belly with the towel. Finished drying he watched as she curled up into a tight ball and fell asleep. As the storm raged outside Alexander thought she had the right idea. Pulling on a pair of boxers he turned out the lights and slid back into bed, his young charge wrapped in a dry blanket at his side.\n\n-vVv-\n\n\"The storms too strong Jenabel, we have to go in, we'll start the search again as soon as the storm clears.\" Carl yelled.\n\nCarl Benton understood his daughter's single minded focus on finding the lost child but the storm was getting worse, putting her and the rest of the searchers in jeopardy.\n\n\"But we can't stop looking.\" Jenabel yelled over the wind.\n\n\"We have no choice. I can't put so many at risk. She probably found a dry spot and curled up there to wait out the storm. Don't worry we'll find her Jenabel, but we have to wait 'til this storm lets up.\"\n\nEven through the blinding rain Carl could see the tears in his daughter's eyes as she finally nodded her agreement. He wrapped her in a strong hug and led her and the rest of the searchers back to his house. The house was warm as Sophie passed out towels to everyone. They all looked harried after nearly two hours out in the storm searching for Amy.\n\n\"Where's Cross? I thought he was coming up yesterday; he's the best tracker we have. He should be out there trying to find her!\"\n\nSophie noted the almost manic tone of Jenabel's voice.\n\n\"He called about eight o' clock; he won't be able to come up. He was running out the door to catch a flight to San Diego, something about a new grad student that he had to put in her place.\"\n\nSophie knew Jenabel would not appreciate her brother's absence.\n\n\"Damn him, everything and everyone is always more important to him than us.\" Jenabel's words were cold and filled with ire.\n\n\"Now Jenabel, Cross lives his own life, makes his own choices. He is the same as you in that.\"\n\nCarl's words were brusque and Jenabel felt the weight of them. Hugging her father tight her words were a whisper.\n\n\"I know Daddy, I'm sorry, it's just I'm so worried.\"\n\nCarl pulled her tighter against him.\n\n\"We all are Jenabel, she'll be alright, you'll see.\"\n\nShe wasn't at all confident in her fathers words as she went to one of the guest rooms to get a few hours sleep before the search resumed.\n\n-vVv-\n\nThe storm blew itself out just before dawn. In the space of five minutes the wind went from a blowing maelstrom to a gentle breeze. The rain stopped as the clouds slowly began to disperse in the face of the coming dawn. Alexander was awakened by a wet tongue on his forehead. Cracking one eye open, he looked up into the playful eyes of the wolf pup.\n\n\"Time to get up is it?\" Alexander laughed as he gently pushed the pup away and sat up in bed.\n\nThe world was quiet.\n\n\"The storm passed eh?\" He asked the now tail wagging wolf as he stood up and opened the door.\n\n\"What a mess.\"\n\nTrees and branches littered the yard. The lake was a maze of floating debris.\n\n\"Guess I know what I'll be doing this morning.\" The pup growled good naturedly at him as he turned from the open door to look at her.\n\n\"We'll need to figure out what to do with you of course. You must be hungry, Blondie seemed to like the jerky, let's see if you're the same.\"\n\nRummaging through his cabinets he found the bag of home made deer jerky he had gotten on his last trip to the store. Tearing a piece into smaller bits he laid them on the bed by the wolf. He watched her as she nosed the pieces for a minute before giving a little bark and digging in.\n\nShe was a pretty little thing, dark brown fur the color of chocolate with white socks and belly. One ear drooping while the other stayed up, then they would switch. Alexander laughed as he watched her wrestle with the strips of dried meat.\n\nNot having any better ideas he grabbed his phone and dialed Brad's number. While it rang, it never connected up or went to voice mail. The wolf had finished its breakfast and was limping around in tight circles on the bed giving Alexander a baleful stare.\n\n\"Okay, okay, I get it, sorry.\" Alexander picked the pup up and gently put it on the ground. She made a beeline for the still open door.\n\n\"I know how she feels.\" He said as he stepped into the bathroom to take care of his morning necessities.\n\nFinishing up and dressing in jeans and t-shirt Alexander grabbed himself a piece of the jerky before going out to the porch looking for the young wolf. He found her wrestling a downed branch at the bottom of the stairs.\n\n\"Well you seem to be on the mend there Honey. What say you and I go see if Sophie has an idea of what to do with you and how to get you home?\"\n\nAlexander stepped back in the house to grab his shoes, not noticing that the little wolf stilled as he mentioned Sophie's name or that its tail began to wag in earnest.\n\nNot for the first time Alexander questioned the viability of only having the Harley for transportation. Grabbing a clean towel he picked up the wolf and wrapped it up. Zipping his jacket half way up he slid the pup inside where she would be relatively safe for the short trip to the Benton's place.\n\nThe wolf, tongue lolling happily out of its mouth peaked out of Alexander's jacket as he kick started the bike to life.\n\n\"Hold on Honey, it will be a quick ride.\" His words were lost in the growling howl of the Harley's engine as he pulled away from his house.\n\n-vVv-\n\n\"Jenabel, wake up honey, the storms broken.\"\n\nJenabel sat up with a start.\n\nSophie stood over her daughter, a cup of coffee in her hand.\n\n\"How long was I asleep?\"\n\nJenabel asked sitting up and taking the coffee from her mother.\n\n\"About three hours, the storm let up about twenty minutes ago. It's almost dawn. Your father and Brad are putting together search groups now. We'll be leaving in ten minutes.\"\n\nJenabel nodded to her mother as she finished the coffee in three gulps, wincing as the hot liquid landed heavily in her empty stomach.\n\n\"I'll be ready in five.\" Jenabel said as she made her way to the bathroom.\n\nFifteen people milled about in front of the Benton home. All of them looked tired but had a fire in their eyes. One of their own was missing and they were bound and determined to find her.\n\nJenabel stepped onto the porch and stretched. Her mind was already whirling trying to think where Amy would have wound up after the accident. She saw the Halston's sitting on the porch. Walking over to them she bent down and gave Karen a gentle hug. Karen's right arm was in a sling; John had a cast on his left leg.\n\n\"Don't worry, we'll find her.\" Jenabel's whispered words elicited a mere nod from Karen, the stress of the previous night still weighed heavily on the frightened mother. Jenabel gave John's shoulder a reassuring squeeze as she turned her attention back to her father.\n\n\"You four go with Brad, search to the west toward the mountain. My group will head south. Sophie you go east and check the lake perimeter.\" Carl paused, seeing Jenabel on the porch he gave her a quick nod before continuing. \"The rest of you head north with Jenabel, work from the compound out in a clockwise circle, Amy has to be somewhere, now lets go find her.\"",
        "Carl's tone was hard, he took his responsibility as leader seriously, having one of his own, and especially a child in harms way just wouldn't do. The groups split up, all of them keyed up as they readied themselves for the hunt. The sound of an engine cut through the morning stillness, all of them tensed at the sound.\n\nJenabel's head turned in the direction of the low rumble that rose in volume as the seconds ticked by. She knew that sound, it was Alexander and he seemed to be coming their way.\n\n\"I thought he was on the east face for another week?\" Jenabel's question was aimed at her father.\n\n\"He is, we're not supposed to pick him up till...\" Carl's response trailed off as he turned an accusing eye to his wife.\n\nSophie was having none of it.\n\n\"You can just stop looking at me like that Carl Benton, yes I went and got Alexander yesterday afternoon, I invited him to the party.\"\n\nCarl's anger spiked, even though she was his wife he didn't take kindly to his decisions being questioned. Having them totally dismissed stoked his growing fury. Jenabel cut in before her parents could really get going.\n\n\"This doesn't matter right now, we have to find Amy. Dad, Brad you take your groups and get going. My group and Mom's go as well, we will catch up as soon as we can.\"\n\nJenabel's body hummed with emotion. Her overriding fear for Amy was now balanced by the impending arrival of her mate who she hadn't seen in over a week.\n\nCarl, Brad and the other groups headed out. Carl gave Sophie a withering glare before doing so.\n\n\"Why don't you stay here Jenabel, I'll go see what has Alexander showing up eight hours earlier than expected and ruining my surprise.\" Sophie was undaunted by her husbands growling, she knew deep down that her decision was the right one.\n\n\"But I...\" Jenabel's words trailed off as her own emotions warred within her.\n\nSophie understood her daughter's tumultuous emotions.\n\n\"I know Jenabel, you want to see him but you don't know what will happen. Just stay here.\"\n\nSophie walked fast toward the entrance, her own thoughts just as muddled as her daughters.\n\n'Maybe this wasn't the best idea.' She thought to herself as she heard the big motorcycle draw ever closer.\n\nAlexander was surprised when he turned down the road which Sophie had indicated led to their home. She had told him on the drive back from the east face that, along with her home, there were several others. As he navigated the small winding road questions blossomed in his mind as he caught subtle details along the way.\n\nSmall cleared areas on high ground. \n\nThe occasional well camouflaged surveillance camera in the trees.\n\nHow the roadsides had been cleared to make sure there were no places one could hide a car.\n\nAlexander slowed his progress as the little wolf started to squirm.\n\n\"Easy there girl, we're almost there, Mrs. Benton will know what to do with you.\"\n\nThe pup stared up at him for a moment and then retreated inside his jacket with a small yip.\n\n\"She's not that scary.\" Alexander said with a smile.\n\nComing out of the final long turn he was greeted by a sturdy wall that ran north and south out of sight from the gated entrance. It looked ornamental. But to Alexander's trained eye he understood it was anything but. The wall was nearly nine feet high. Security lights were mounted unobtrusively every twenty or so feet around its top. The gate itself, while beautiful and well wrought looked, upon closer examination, to be sturdy enough to stop a speeding truck.\n\n'Interesting', was Alexander's only thought before the gate slid back into the wall.\n\n\"I guess they heard us coming little one.\"\n\nAlexander drove through the gate, stopping just inside. He had no need to continue following the large winding driveway further as Sophie Benton was waiting for him. Shutting off the bike and kicking down the stand, Alexander gently swung off and stood before Sophie.\n\n\"Good morning Mrs. Benton, I am sorry to intrude so early.\"\n\nAlexander's tone was tentative. He could sense that Mrs. Benton was on edge, he was sure it was his presence that was fueling the chaotic emotions he felt from the woman. Sophie smiled and relaxed, the smile was one of relief, which Alexander found odd. \n\n\"You're not intruding at all Alexander, what can I do for you this morning, is everything alright?\"\n\nIt took a good amount of control for Sophie to maintain her cool facade. Alexander relaxed some while reaching into his jacket.\n\n\"Well, I found this little lady out in the storm last night; her leg was pretty banged up. I thought you might have an idea of what to do to get her back with the pack you mentioned roamed this area.\"\n\nAlexander said this as he pulled the pup from his jacket. He cradled her in his arms as he spoke. Sophie's smile widened as she crossed the few steps between.\n\n\"Oh Alexander.\" Her voice was rich with emotion. She had to struggle to not hug the life out of him. Instead she gave his arm a comforting squeeze.\n\n\"Yes, the pups do get separated from their pack from time to time. We can look out for her, let her mend then get her back where she belongs.\"\n\nSophie gently took the pup from Alexander's arms. She was greeted with slobbery wolf kisses on her cheeks. Alexander smiled at the pups antics.\n\n\"I heard her whimpering during the storm, she got pinned underneath a fallen tree, I found her and got the bleeding stopped. I tried Brad this morning but couldn't get him so I was hoping you would know what to do.\" Alexander patted the pup tenderly as he related the story.\n\nSophie smiled at him, reaching up to gently cup his cheek.\n\n\"You most definitely saved her Alexander, thank you so much.\"\n\nAlexander was a little surprised by the strength of her emotions but chocked it up to the Benton's love of the mountains and everything that lived within them.\n\n\"Well, I'm glad that you can take care of her and get her back where she belongs.\" Alexander said as he walked back to his Harley. \"I have a good amount to clean up after last nights storm, if the invitation is still open I'll see you this afternoon?\"\n\nSophie picked up his hesitation about the invitation.\n\n\"Of course it is still open. I'm looking forward to having you meet everyone. I think you'll really enjoy yourself. After all the work you did this week, you earned it.\" Sophie noticed that his big body un-tensed.\n\n\"I'm looking forward to it.\" Alexander paused as he straddled the Harley. The wind shifted and a familiar scent caught his attention. Sophie watched as Alexander's eyes closed involuntarily as his head turned in the direction of her house.\n\nAlexander shook his head to clear it. As soon as the scent found him the wind shifted again and it was gone. Returning his attention to Sophie he kick started the motorcycle.\n\n\"I'll see you at two then.\" He said with a thankful smile before turning the bike and heading out of the compound.\n\nSophie stood at the gate watching Alexander's retreating form until he disappeared around the bend. She turned to find Jenabel standing behind her. Sophie noted the flush on her youngest child's cheeks and the feral smile that graced her beautiful face. Sophie shook her head and laughed at the absurdity of the situation. Jenabel had found her mate, there was no denying it.\n\n\"Here, take her over to the infirmary and have Doc check her out. I'll go catch up with your father and the others.\"\n\nHer mother's words broke her from the longing stare she gave the road which Alexander had disappeared down.\n\n\"You invited him to the party?\" There was so much hope in Jenabel's voice that Sophie could do nothing but pull her into a gentle hug, the wolf pup cradled between them.\n\n\"He's your mate Jenabel. Whatever else happens, however it works out; that is the truth of it. If you fight the call you'll live a life of misery, I can't let that happen. Now get out of here, we have a ton to do before this afternoon.\"\n\nJenabel kissed her mothers cheek before running off with the pup in her arms.\n\n-vVv-\n\nAlexander couldn't get the scent out of his head as he manhandled the large branches that had been brought down by the storm. On the ride home from the Benton's he had remembered when the scent had found him before.\n\nThe deep musky feminine scent had set his blood to fire that night at his place just a week ago. Though this time it was different, it was deeper. It had the essences of clove and the subtle nuance of spring rain. These coupled with the erotic feral and oh so feminine musk had Alexander grinding his teeth as he worked.\n\nThere was nothing in his experience to relate it too, nothing in his past that even came close to eliciting the powerful emotions of need and want that this did, and now he couldn't break its hold on his attention.\n\n\"Fuck!\"\n\nAlexander was none too pleased when his errant thoughts led to the large branch he was carrying slipping from his grasp.\n\n'What the fuck.' Alexander chided himself as he picked the branch up and muscled it over to the ever growing pile at the side of the house. Seeing the Benton's compound, the hurt wolf, the scent, all of it had his thoughts whirling. A quiet chuff behind him caused all of these thoughts to fly from his mind. His big body tensed as he slowly turned around.\n\nSitting just inside the clearing behind his house, Blondie lay on her belly with her snout on her paws watching him. Alexander relaxed, a smile crossing his lips.\n\n\"I didn't expect to see you again; you're kind of far from home aren't you?\"\n\nThe young wolf chuffed again, as if responding to his question. Alexander found it curious that a young wolf would range so close to civilization.\n\n\"I didn't expect to see you again Blondie.\" He didn't know why he found himself talking to animals so often these days. It was a good thing he was going to the party this afternoon. Being around people seemed like a good idea considering his current penchant for talking to himself, or whatever breathing thing happened to be in close proximity.\n\nAlexander walked into the house and retrieved the bag of jerky. Pulling out two large pieces he stepped back out onto the porch, only to find the young wolf now sitting expectantly at the bottom of the porch stairs. Alexander tensed once again. While he appreciated the animal's beauty and seemingly tame ways, he was not a fool. A wild animal was just that, wild.\n\nHe took a hesitant step backwards and the wolf chuffed again as it lay down and then surprisingly rolled over. Her tongue lolled out of her mouth as she watched him. Alexander couldn't help but smile. Wild or not she was the friendliest damn thing he had ever met.\n\nHe walked forward slowly and sat on the top step. About four feet separated the two as they regarded each other. The wolf flipped over but stayed on her belly. Alexander couldn't resist the smile that came to his lips.\n\n\"You're trouble, I can tell.\" He said with a happy tone as he tossed the wolf a piece of the jerky. As before on the mountain, she moved fast, catching the morsel in her mouth, downing it with one gulp.\n\n\"Not very lady like are you?\" He laughed at her quiet growl. \"I'd swear you could understand me.\"\n\nStepping off the porch, Alexander went back to work. It was almost noon and he still had about an hours worth of work to get done which would leave him time to shower and change before going to the Benton's. Alexander picked up another branch and dragged it to the pile.\n\n\"I may have found one of your pack mates last night. You really shouldn't let the young ones out alone you know.\"\n\nHe could have sworn the wolf scowled at him but brushed it off as his imagination.\n\nThe hour passed quickly as Alexander squared away the last of the debris, the young wolf staying close the whole time. Sitting back down on the steps, the wolf walked slowly toward him.\n\n\"I'm going in Blondie, I appreciate the company but I have a party to get to.\"\n\nThe wolf barked at him and moved closer.\n\n\"Ah, you're looking for that other piece of jerky aren't you?\"\n\nAlexander pulled it off the railing and offered it to the wolf. He didn't throw it, simply held it in his hand, waiting to see what she would do. The wolf gave him a look that almost seemed as if she was raising her eye brows at him, well if she had eye brows that is. She walked slowly forward and gently took the piece of meat from his fingers. She didn't move away as she ate this piece more slowly than the first.\n\n\"See isn't it better when you savor it.\" Alexander laughed as the wolf looked mortified.\n\n\"I never knew wolves could be this expressive, you're an amazing young lady to be sure. Well, thanks for keeping me company Blondie I've got to get moving.\"\n\nAlexander was surprised when, as he stood, the wolf moved closer to him, running her head gently against his thigh. With a tentative touch he reached down and scratched behind her ears. They stood that way for a moment, and then she was off, running in a few tight circles and yipping happily before bolting off into the woods.\n\n\"Could this day get any stranger?\"\n\nAlexander's question hung in the air as he turned and went in the house to get ready.\n\nShould the universe had deigned to answer his question, the gentle spring breeze would have most assuredly whispered...yes.\n\n-vVv-\n\n\"You had no right to go behind my back Sophie!\"\n\nCarl was, to say the least, upset with his wife.\n\nThat she had invited Alexander to the party was bad enough, but it hurt him to his core that his mate would keep something like this from him. Sophie felt the pain emanating off her husband as he paced around their bedroom. In all the years they had been together, neither of them had ever kept anything from the other, until now.\n\nShe walked behind him where he stood looking out over the compound from their window and placed a gentle hand on his shoulder.\n\n\"I'm sorry I didn't tell you. It was wrong of me to keep you in the dark and for that I apologize.\" Her tone shifted from conciliatory to a stronger timbre. \"However, I'm not sorry I invited him Carl, he's meant to be with Jenabel. There is no fighting it. You and she, all of us will just have to see where this path leads. You know it Carl; you feel the pull to him just as we all do. Hell Willow is so convinced she stood up to Brad when he told her to drop it.\"\n\nThis surprised Carl. He turned and pulled his wife into his arms.\n\n\"What do you mean? With Brad's position, she knows better than to question him.\" The group's hierarchy was clearly defined, to have a child argue with Brad was unfathomable.\n\n\"Last weekend Willow found Alexander in the woods, she thought he was a new member, she took him to the gl\u00e4nta. Brad found them there, caught her just before she was going to say things she shouldn't to an outsider. When Brad told her he wasn't one of us she basically scoffed at him.\"\n\nCarl had to smile at that; he could imagine young Willow giving Brad a dressing down. While it was no where close to appropriate it was most definitely amusing. Sophie's tone dropped low again as she looked up into his eyes, her hand gently cupping his cheek.\n\n\"I am sorry my love. Jenabel is in so much pain. I can't believe the universe would be this cruel. I have to have hope that there is a way they can be together.\"\n\nCarl gave his wife a gentle smile as he bent to tenderly kiss her soft lips. He could never stay angry with her for long, but this had hurt him to his very core. Through their bond he let her feel his pain at her not trusting him. In return he felt the true remorse she had for not trusting him with what she thought was best for their daughter.\n\nPulling away from him, he saw the tears in her eyes. He brushed them away with his thumb.\n\n\"I love you. If Jenabel and Alexander are meant to be as you believe, I'll move heaven and earth to see that it's done.\"\n\nSophie smiled at her husband, her love for him was boundless, the joy she received from being his mate and having him as hers was what drove her to help Jenabel. Determined that she and Alexander could know the completeness, the joy, the safety of what having a mate truly means.\n\n\"And I love you Carl, always and forever. Now let's go, I have to make sure everything is ready for this damn party. And you have to figure out how you are going to handle Mr. Bouchard and Jason when they get here.\"\n\nCarl scowled at the thought of the two men who were undoubtedly on their way. Thomas Bouchard had been pushing his son Jason toward Jenabel since almost the day they were born. While the tradition of a Bouchard and a Benton wedding once every generation was long standing, he had never felt quite right about leading Jenabel in that direction. He always assumed that if it was to be, then they would feel the attraction and that would be that.\n\nWith Alexander capturing Jenabel's heart, that was never going to happen. Carl doubted that Thomas or Jason would be too pleased with this turn of events.\n\n'Ah well, there is nothing else for it, they'll both just have to get used to it.' Carl thought as he made his way down stairs. The party would be starting in less than an hour and there were still a few details to work out. \n\n'If there's time, a conversation with Willow is in order as well.' Carl smiled once again at the thought of the girl standing up to Brad as he headed off to take care of his honey do list.\n\n-vVv-\n\nAs was always the case with such get togethers, people started showing up early. By one-thirty the party was in full swing with folks from the compound mingling easily with people from town and Jenabel's friends.\n\nThe ages ranged from toddlers to senior citizens and every age in between.\n\nSophie and Carl moved easily through the crowd. They had known most of these people for more decades than either of them cared to count. All of them they greeted by name, passed a moment to ask about family and business before moving on to the next person.\n\nWhile they seemed the perfect host and hostess, both had anxiety levels that were well beyond tolerance. Jenabel had been like a cat on a hot tin roof since Alexander's surprise arrival that morning. Now she sat pensively on the sidelines, holding herself back, watching the gate with growing uncertainty.\n\nCarl was on the other side of the grounds, talking with a few of the workers at the mine when he noticed Thomas and Jason Bouchard making there way toward Jenabel where she was perched on the front porch railing.\n\n'This isn't good.' He thought to himself as he excused himself from the men and began to hurry toward the house. Sophie heard Carl in her mind.\n\n'The Bouchard's are here, they're heading toward Jenabel, see if you can head them off.' Sophie looked around, it only took her a moment to find Jenabel then locate the Bouchard's who were moving in her direction.\n\nAt the same time one of the company jeeps pulled through the gate and parked. Alexander, after checking the weather forecast and finding more rain in the offing he decided to run by the yard and borrow a jeep for the day in case the rain decided to let loose before the party was over.\n\nStepping out of the Jeep he smiled at the generally happy vibe that permeated the place. Families and friends were spread out all over the compound. A large barbecue had been set up with what looked like more than twenty picnic tables surrounding it. The compound itself had the feeling of a small subdivision. Houses lined small lanes that radiated out from the central circular entrance drive. A large three story house dominated the main area.\n\n\"Probably the Benton's home.\" Alexander said to himself.\n\nHe was surprised to get a response.\n\n\"It is the Alp...Benton's home. Hello Alexander.\"\n\nAlexander recognized the voice as he turned to find Willow smiling up at him.\n\n\"Good afternoon Miss Willow, it is nice to see you again.\"\n\nWillow giggled at his use of Miss before her name.\n\n\"I was surprised when you...when I found out that you were coming Alexander. Here, let me show you around.\" And with that Willow slipped her small hand into his and proceeded to give him the fifty dollar tour.",
        "Brad watched as Willow walked away with Alexander. His father had told him the whole story. He was hopeful that his mother's belief that Alexander and Jenabel could be together was true. The last thing he wanted was for her to get hurt. Since it seemed Alexander was her mate then it was his duty to watch out for them both. As Willow and Alexander passed out of site he saw both his mother and father moving quickly toward their house.\n\nFollowing their eyes he saw Jenabel. What he saw next had him moving toward her with purpose.\n\n\"Why Jenabel, so good to see you again.\"\n\nJenabel tensed at the man's easy words and familiar tone. Thomas Bouchard was not one of her favorite people. She had never been able to put words to why she didn't like him, only that there was something that always seemed disconcerting about him.\n\n\"Good afternoon Mr. Bouchard.\" She said, turning to face the man before adding. \"And hello to you as well Jason.\" She was going to seriously consider causing her father some serious harm.\n\nJason Bouchard was much like his father only a younger version. Dark brown hair and eyes with a tall wide build, he thought far too much of himself. Raised by his father to be his heir apparent, Jason had a combination of ego and carelessness that she found barely tolerable.\n\nJason eyed her like he always did, with a slight smirk on his thin lips and a leer in his eye.\n\n\"It's good to see you Jenabel. It's been a long time, too long.\"\n\nThomas supported his son's response.\n\n\"You're so right Jason. It has been far too long since the two of you had a chance to catch up. Now seems as good a time as any, I'll just go off and find your folks Jenabel.\"\n\nThomas gave his son a barely noticeable nod before moving off down the steps to intercept the Benton's.\n\n\"Let's take a walk.\"\n\nJason's tone surprised Jenabel as she raised an eye to him. It sounded more like an order than a request. She was having none of it.\n\n\"I'm fine right here Jason, if you have something to say just say it.\" Her tone was harsh. This surprised Jason, they had known each other for years and he had never known her to be anything but cordial. He knew she didn't really like him but that had little to do with his family's goals. Her like or dislike was unimportant and unnecessary. He looked her over like a hungry animal perusing his next meal. Jenabel just shook her head, basically dismissing the egotistical ass while she resumed her vigil for Alexander's arrival.\n\n\"What happened here Willow?\"\n\nThey had navigated almost the entire compound and Alexander was impressed. The design had subtle military cues that would be missed by most people. The central hub design, the small straight streets radiating off from the center. Ancillary buildings like garages and work sheds placed on the outer perimeter near the compound wall limiting the amount of cover anyone would have trying to get at the center. He doubted anyone else noted these things. They screamed at him and he found it more and more interesting that the Benton's maintained such a secure home base.\n\nAlexander's question was about the house before them. Its roof was caved in, a giant swath of the house just gone.\n\n\"A tree fell during last night's storm, it took them all morning to get it cut up and hauled away. We thought we might have to cancel the party but it all turned out okay.\"\n\nAlexander looked at the damage with a critical eye.\n\n\"Was there anyone in there when it happened?\"\n\n\"Oh yes, that's the Halstons house, everyone was in bed asleep. The parents were pretty banged up but the kids were okay. It took awhile to find Amy but then you already...\"\n\nAlexander noted the pregnant pause as Willow, now for the third time, stopped herself in mid sentence.\n\n\"I already know...what Willow.\"\n\nShe could feel Brad trying to get into her head. It was all so stupid, first Brad chastised her at the gl\u00e4nta and then this morning Mr. Benton made it perfectly clear that NOTHING was to be said to Alexander that may expose them.\n\nWith a sigh she answered him.\n\n\"What I meant to say was that since the party still happened, you already knew that everything probably worked out alright.\"\n\nHe raised an eyebrow high as he regarded the girl.\n\n'She is hiding something.' He thought but decided not to push.\n\n\"I'm glad they are alright. Last nights storm was pretty wicked, I'm not surprised a few trees were brought down.\"\n\nWillow was glad he chose to move on.\n\n\"Come on Alexander wait till you see the boar they have on the spit, you must be hungry after all of that work you did this morning.\" Willow didn't even realize that she had said too much and kept on walking even as Alexander stopped in his tracks. While Willow's statement about how he spent his morning was puzzling, it was something else that grabbed his full attention, caused him to stop and his body to go rigid.\n\nAs they had passed beyond a house heading toward the center of the small compound the wind had hit him. On it was the heady scent of clove and spring rains...\n\nWillow stopped when she discovered Alexander was no longer following her. Looking back she saw him standing with his eyes closed, chin slightly lifted into the cool spring breeze. She scented the air as well, a goofy grin crossing her lips as she shook her head and mentally rung her hands together.\n\n'Oh boy, this ought to be good.' She thought as she waited for the fireworks to begin.\n\nJason didn't like how Jenabel dismissed him so easily. No one had dared do anything like that in years.\n\n'Time to teach her just who she is dealing with.'\n\nHis thoughts were cruel as his hand reached out to grab her arm.\n\nAway from the porch in the crowd, another Bouchard was pushing his luck.\n\n\"Thomas we can talk about this later. Please get out of my way.\"\n\nCarl's patience with Thomas Bouchard was quickly running out. He had intercepted him as he was heading toward Jenabel. Now it seemed he was intent on keeping him away.\n\n\"Now just one minute Benton, we need to clarify a few things.\"\n\n'Need to give Jason a chance to turn on the charm and let Jenabel know what's good for her.'\n\nThomas' thoughts mirrored those of his son. A marriage between Jason and Jenabel was just what his family needed to finally get what was coming to them.\n\n\"Ow, Jason, god damn it let me go.\"\n\nJenabel was surprised when Jason's hand coiled around her bicep and tightened down hard.\n\n\"I don't think so Jenabel, it's about time you learned your place. Our families have been linked for generations, now it's our turn.\" Jason's eyes burned with a feral glee that made Jenabel's blood run cold. She could feel his intentions through the touch and they sickened her. She tried to break free from his grip but found he was too strong. She was about to scream when, across the compound she caught a flash of electric blue and a blur of blond hair.\n\nAlexander's eyes flew open as the nuance of the scent that he found so compelling changed. It took on an acrid dark tone that set his blood to boiling. He found her in an instant, took another to acknowledge the dead man holding her. And then his soul took control of his body as he blazed into motion.\n\nThe power which coursed through his body was ten fold what it had been before. He felt whole for the first time. The power that had come in brief flashes when he most needed it through his life flared brightly and became part of him down to his marrow. He was caught in a rushing flood of energy and emotion as his need to protect what was his infused him with feral might.\n\nThose that lived in the compound tensed and hushed.\n\nAll of them knew that one of their kind, a stranger to them, now walked amongst them. None understood how that could be. The tension only mounted as this newcomer, infused with hungering wrath moved like lightening through them toward its goal.\n\nCarl turned in time to watch Alexander sprint across the distance that separated him from Jenabel with unerring accuracy, processing what was happening in that instance.\n\n\"Willow was right.\" His words found his wife's ear, who had just then moved to his side.\n\nShe too followed the blond fury that was Alexander as he wove his way through the crowd toward his goal. Alexander's true essence slammed into Jenabel with the force of a raging tsunami. Her legs buckled as she was enveloped by the deep warm scent of amber warmed by a desert wind.\n\nHe was of them.\n\nHe was one of them.\n\nHe was Were.\n\nIn the next instant Jenabel was shielded from Jason behind a wall of hard flesh. She could feel the fury rolling off him as he stood between her and Jason. The hand that had a moment ago been wrapped around her arm now held high above their heads bent backwards at a ninety degree angle. She and everyone within twenty feet heard the sharp snap as the wrist bones broke.\n\n\"Touch her again...please.\"\n\nAlexander's words hissed out of his mouth thick with derision and malice. His eyes were trained on the man before him. Jason cried out and took a step back as he cradled his now useless hand. The blond man in front of him was huge, nearly six foot six and broad across the chest. His blue eyes burned with lethal desire.\n\nJason was a strong beta, his father's number two. He knew a challenge when he saw it. Even with his broken wrist, he wouldn't let this nobody stand between himself and what he was due.\n\n\"I'll touch that bitc...\"\n\nJason never got the chance to finish his statement. Alexander's hand flashed out in a blur, catching Jason by the throat. In the next instant Alexander lifted him off the ground and threw him ten feet away. Once again those close by heard a sickening crunch when Jason brutally landed on the pavement.\n\nAlexander turned to Jenabel, moved close to her. She could feel the heat of his body as his breath heated the skin at her throat. His whisper was gentle, full of longing and need.\n\n\"Stay here...Jenabel\"\n\nHer name from his lips was soft and sensual. it stirred Jenabel to her core as she looked into his endlessly deep blue eyes for an instant, and then he was gone, leaping over the balcony railing to land standing over the still prone Jason.\n\nHis heavy motorcycle boot found a none to gentle resting place on Jason's throat.\n\n\"Touch her again.\"\n\n\"Speak to her again.\"\n\n\"Think of her again.\"\n\n\"And I will be the very last thing you see as death takes you.\"\n\nNone who heard the quiet, icy words that Alexander said had any doubt at all that it was one of the truest statements they had ever heard.\n\nA stunned Carl Benton had watched the scene unfold, understood as the rest of them did that Alexander was one of them. In the passing of a heartbeat, when faced with his mate being in danger Alexander's wolf had come fully forward.\n\nIt happened with their children all the time. But never this late in life, always by puberty did the wolf assert itself. And the children were blessed with time and knowledge. They knew what they were, knew that within them lived something magical, something that made them different. \n\nThat it only manifested for Alexander now, this late in his life explained why the DNA tests came back negative. It was a recessive gene, never activated. He would need to call Dmitri; he needed to figure how this was possible.\n\nThe truth of it was incontrovertible. The speed, the power, the need to protect his mate. The none too subtle scent of him screamed Were. But a Were who was untrained? Didn't know what he was? Had never...changed?\n\nSophie had moved to Carl's side, she along with everyone else was speechless at the display of raw power she had just witnessed as Alexander and his wolf became one for the first time.\n\n\"Today is the new moon isn't it?\"\n\nIt took a moment for Carl's question to break through the ongoing drama playing out before her.\n\n\"Yes, today's the new moon.\" She answered, wondering why this came up in this moment.\n\n\"He only has fourteen days Sophie. Fourteen days to come to grips with and accept what he is or the change will surely...\"\n\nSophie finished her husband's sentence. Her voice catching with it, saying \"...kill him.\"\n\n*\n\nGl\u00e4nta: Swedish for Glade or Clearing\n\nEdited By: Mikothebaby"
    ],
    "authorname": "Vjax",
    "tags": [],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/orphan-ch-05"
}