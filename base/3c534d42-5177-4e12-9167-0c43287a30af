{
    "title": "The Speedo Doesn't Lie Ch. 06",
    "pages": [
        "This story is posted on the Literotica website; the author does not give permission for it to be reposted or reprinted anywhere else without consent. This is the sixth chapter in a multi-chapter interracial cuckold story. If you haven't read the previous chapters, I encourage you to do so, but I'm confident you'll enjoy it as a standalone too. \n\n***** \n\nOne year later \n\nApril 2019 \n\n\"Yeah, I wish I was going down there with you guys, I can't believe my PT conference landed on the same weekend as State Finals - but we agreed long ago, the day job has to be the priority,\" Justin Dawson, Head Dive Coach at Sacramento State University reminded his beautiful wife. \n\n\"I know, I wish you were too, but I think I can handle it,\" Abbie Dawson replied with a confident smile. \n\n\"Of course you can, not to mention Sac State will have the hottest coach on the pool deck!\" \n\n\"Oh stop it Justin, besides as I recall you were pretty into Jennifer Clark from San Diego State last year!\" \n\n\"Oops...forgot about her, yeah well one of the hottest coaches on the deck,\" he corrected playfully. \n\n\"Fuck you Justin!\" Abbie spat with an \"I hate you\" smile before she threw a pile of napkins at him. \n\n\"Just kidding...Jennifer's not even in your league baby, and she certainly doesn't have as nice of tits!\" \n\nA suspicious smile formed on her beautiful face, \"Oh, you've checked out her boobs that closely too?\" \n\n\"I take the fifth...\" he admitted guiltily before changing the subject, \"Okay babe, text me when you guys land in Orange County. Are you just going to catch an Uber from the airport to the hotel?\" \n\nAbbie let the previous discussion drop, \"Yeah, we'll probably have to grab a couple of cars as there are five of us. I sure wish it was six, it's not going to be the same without you. I expect they'll all do great, but I can't imagine they wouldn't feel better having their head coach's guidance and support.\" \n\n\"You mean co-head coach's guidance and support. Ab, you are as good as any coach in the state of California, plus the team is going to have to start getting used to me not being on the road with you guys. Next year it's going to be up to you and Nick to handle all the away meets. As for this weekend, I suspect I won't be missed, they're an experienced group and you'll be everything they need Abbie Dawson!\" He smiled as he leaned forward and kissed her wetly on her succulent lips. \"Same schedule as last year?\" \n\n\"Yeah, except for flying down this morning, remember last year we went down on Thursday night. This time we'll head straight over to the Irvine pool after we land to get in our review and final prep dives. I'm going to try and encourage them all to get to bed early tonight, first dive is at eleven tomorrow. Nick is the only holdover, so hopefully he can help me convince the rest of them as to the importance of a good night's sleep tonight. But I'm sure tomorrow night will be a different story. I know the way Nick is, and I suspect the rest of this group will want to do some serious partying if they perform as well as we expect!\" \n\n\"Yeah, I think you can count on that - especially if Nick sets the meet record!\" \n\n\"If that happens, you know it will be crazy! It certainly won't be anything like last year when everyone crashed early following all that drama.\" \n\nSuddenly a mischievous look appeared on Justin's face as he moved forward and wrapped his arms around his gorgeous wife, gripping her firm ass cheeks in the process, \"As I recall, there were a couple of people who didn't crash so early!\"  \n\n\"Oh, leave it to you to remember that!\" Abbie giggled remembering the champagne induced celebration sex they had the previous year. \n\nJustin smiled pridefully, \"But, I agree I could envision this group doing some serious partying if they win. But with Amber and Tommy long gone and Nick unlikely to have his sights set on the other girls this time around, getting the group to the airport on Sunday will hopefully be your only challenge!\" \n\nA weird flutter formed in Abbie's stomach, \"Yeah, you're probably right about that honey...say what time do you guys take off?\" She asked, happy to get the subject off of Nick Thomas' \"sights\". \n\n\"Jay is coming by to pick me up at ten. Our first meeting is in San Jose at three-thirty.\" \n\n\"Well babe, I hope you have a great conference and I'll look forward to seeing you Sunday night after we Sac State Hornets kick some ass and take some names!\" \n\nJustin gripped her ass cheeks more firmly, \"I can't wait for this ass to return triumphantly and claim its spoils! I'll be your sex slave for as long as you like upon your return your highness!\" \n\nAbbie laughed and kissed him one final time, \"Why do I know you would look forward to all that punishment? I'll text you when we land my slave!\" \n\n***** \n\nAs Abbie made her way on Highway 80 to the Sacramento airport, her thoughts turned to the previous year's State Championships and all the drama that occurred between Nick, Amber and Tommy. So much had changed since then. Amber had moved to New York, Tommy had virtually disappeared from the radar, and Nick Thomas had all but dominated the California collegiate diving scene. \n\nIn addition to his diving development, Nick had undergone an amazing personal transformation. Gone was the gang-banger cocky kid from Stockton who Abbie and Justin had first recruited - in his place was a confident team leader who would soon be graduating near the top of his class. He had recently accepted a position in the Exercise Sciences department for the fall semester on the recommendation of Abbie herself. \n\nShe had vacillated with the decision to adamantly go to bat for him with the dean, not because she didn't think he would be a great addition to the department, but because somewhere deep in her recesses, she still harbored apprehensions regarding the undeniable magnetism between them and how it might someday result in issues with her job and more concerningly her marriage. \n\nIn addition, Justin had recently received a promotion that would not allow him to be as involved in coaching the team in the fall. At his suggestion, Abbie had agonizingly agreed to take Nick on as the assistant coach. \n\nAnd while this past year had not provided the same number of sexually implicit interactions between them, Abbie still felt an unrelenting tug of attraction towards the muscled black diver. For his part, Nick had been more subtle in his pursuit of his hot coach, all part of his concerted plan to set the hook as deeply down her throat as possible before replacing it with something thicker, blacker, and much more palatable (well not exactly...). \n\nIronically now as she drove to meet him and his teammates at the airport, her thoughts drifted to Nick Thomas' big black cock. She wasn't sure exactly why she was thinking about BBC, but perhaps it was due to all the sexual drama Nick had been involved in at the previous year's championships with Amber and Tommy and now not having Justin along her side. Without thinking, Abbie found her fingers inside the leg of her shorts, immediately feeling the dampness on her slippery panties. \n\nAs she did her best to keep her focus on the road, Abbie rubbed along her swelling labia beneath the silky wetness of her thong as she imagined, \"How big must it really be when he's totally hard?\" She rubbed little circles around her button as she thought back to her vague recollection of how big it felt when she'd held it in her hands that drunken night at the Masked Masculinity show over a year previously. \n\nAbbie captured her clit between two fingers as her thoughts turned to the words she had overheard Christina Chin, one her former divers, use to describe her unforgettable sex with Nick and the distance she held her hands apart when demonstrating his size to her friends. Abbie could feel a mini-orgasm building as she frigged herself excitedly while then also recalling Justin's recount of Amber's joyful climax on Nick's big cock from the cell phone playback the previous year at State Championships. \n\nAbbie bit her lower lip and her vision blurred as her orgasm surged through her and a gush of wetness seeped onto her fingers just before steering the car onto the airport parkway. \n\nAfter catching her breath, a smug smile came to her face, not only from the scintillating mini-cum, but from the recollection of her last-minute decision to slip her vibrator into her overnight bag. Being around Nick Thomas all weekend without Justin's presence was likely to have her testing the new toy's battery life. \n\n***** \n\nLater that night after dinner and an early return to her room, Abbie did what Justin had begged her to on so many occasions...she rented and watched an interracial porn flick. Upon its arousing end, she came to a necessary realization - she would need to stop by the hotel store and get more batteries. \n\n***** \n\nLate the following afternoon \n\nNick Thomas stood on the award stand with four gold medals around his neck. Abbie Dawson and Angie Thomas hugged with tears in their eyes as the crowd cheered. \"Coach, I can't thank you enough for all that you and Justin have done for Nick. You guys took a chance on this cocky kid from Stockton and now look at him. My son is a now a man who will graduate in a couple of weeks and also thanks to your recommendation, will begin working in your department while he attends grad school at Davis next fall. I have to pinch myself.\" \n\n\"Don't forget, he'll be working with Justin and me as an assistant coach on the dive team next year too!\" Abbie reminded with an ear to ear smile. \n\n\"Yes, that too! I never would have believed any of this just two years ago! I am so proud of him!\" \n\n\"You should be Angie!\" Abbie finished saying just as Nick ran up, hugged his mom and lifted her off the ground. \n\n\"Can you believe it mom? Four medals?\" \n\n\"Four gold medals Nicky! I am so proud of you!\" \n\nThe rest of the team including his coach, surrounded the triumphant diver, they all posed for a handful of celebratory selfies with Nick and his mom. Finally Angie Thomas pulled her son aside, \"Nick I have to catch the shuttle back so I'm not late for my flight. I have to work in the morning, so I better get going. You guys have fun tonight, I love you and I'm so proud of you! I'll see you in a few weeks at graduation!\" \n\n\"Love you too mom, I'll see you in a couple of weeks!\" \n\nAngie Thomas waved to the group before departing. \n\n\"Okay everyone, you all agreed that if I won that fourth medal that I got to pick where we go tonight!\" Nick shouted excitedly. \n\n\"Shit Nick, if you hadn't won that fourth medal, you'd be choosing where we go tonight!\" Riley Siebert, the other Sac State male diver in the group joked. Everyone laughed. \n\nNick shrugged his shoulders and grinned guiltily, \"Riley my man, you have a point there! Anyway, all of you better be ready to do some serious clubbing tonight, that includes you coach!\" The handsome black diver reminded Coach Abbie with a confident smile. \n\nShe returned the gaze sheepishly, \"I know I agreed, but now I'm kinda scared...\" She feigned drawing laughter from the group again. \n\n\"Okay everyone meet in my room at seven for cocktails. I got beer, vodka, tequila, whiskey and some mixers! Bring anything else you want and be sure to wear your drinking shoes!\" \n\n***** \n\n\"Yeah Nick got the sweep! Absolutely dominant is the only way I can describe it! He got his highest score for the year in every dive he performed!\" Abbie gushed to Justin on Facetime. \n\n\"That's unbelievable honey, remember just a few years ago when we weren't sure whether to give him the scholarship. Now he is a six-time gold medal state champ! Be sure to tell Nick how proud I am of him! How did the rest of them do?\" \n\n\"Great, Riley got silver in the 3 meter and the girls both got one bronze each. I think next year both Lauren and Juliana could be pushing for gold's in a couple events!\" \n\n\"That's fantastic! Tell them all how happy I am for them! So I'm guessing it's going to be quite a party tonight? Besides lots of booze, what's on the agenda?\" \n\n\"We agreed that if Nick got the medal sweep he could pick where we go, I'm not sure that was such a great idea...\" She rolled her eyes, feigning nervousness as she smiled into the tablet camera. \n\n\"Oh yeah? Big party plans?\" \n\n\"He said we're going to do some serious clubbing and he warned us all to wear our party shoes!\" Abbie giggled. \"We are all meeting at his room for cocktails at seven!\" \n\nJustin laughed, \"I'm scared for you honey!\" \n\n\"I know, me too,\" she laughed again, \"but hun I should probably get going I gotta shower and stuff!\" \n\n\"No prob sweetheart, have a great time tonight. You guys all deserve it! And don't forget your highness; I'm expecting your claiming of the spoils to be thorough and unforgiving when you return.\" \n\nAbbie laughed again, \"You can count on it my slave!\" \n\n***** \n\nAn hour and a half later, Nick answered the door to his hotel room, standing before him was one of the hottest 27-year-olds the black man had ever seen. Abbie Dawson's bronze hair was kinked playfully. Her beautiful blue eyes were circled with heavier than usual black eye-liner and accentuated by longer than usual dark eyelashes. Her facial makeup highlighted the swell of her model-like cheekbones and perfectly smooth skin. The whole look was brought together by a shimmering lipstick that looked like it was designed specifically to make guys dream about getting their dick sucked. \n\nIt was having that affect on Nick Thomas as he ogled his hot coach. \n\nAbbie wore a very short gold shimmering strapless dress that exposed her ample cleavage on top and hugged the rest of her body like a silky glove. Her long tanned legs looked like they went on forever, raised by a set of 4\" heels that brought her almost eye-to-eye with the 6'-2\" black man who stood before her. \n\nA friendly smile appeared on her gorgeous face, \"Aren't you going to invite me in?\" \n\n\"Not till I have another minute to admire that dress...WOW!\" \n\nAbbie giggled embarrassingly as she looked down at herself knowing she looked really good, \"Okay, times up!\" \n\n\"Are you sure about that? It felt too short...\" They both laughed as he stepped aside and watched as she moved past him. He closed the door and turned to watch her spectacular ass swaying perfectly. \n\nThe rest of the group was already assembled, dressed to impress as well - still, not a single member of the group could believe Coach Abbie looked like that. \n\nNick broke out the shot glasses and before long, none of them were feeling any pain. After a good hour and a half of heavy partying, they hopped in a couple of Uber's and made the trip up to LA. The first place, called Lure Nightclub, was bumping from the outset. A scantily attired hostess led them through the crowded club to a table Nick reserved the week before. Abbie noticed as he flirted with the cute hostess unabashedly before giving her a $20 tip. The hot blonde squeezed Nick's arm and promised him their table would get plenty of attention from the servers. He looked around at several of the provocatively dressed hotties and shouted enthusiastically, \"Yeah honey, the more attention the better!\" \n\nOver the next few hours, the five of them drank, danced, and celebrated their dominant performances from earlier in the day. The sexy servers kept their drinks full and went out of their way to flirt and flaunt their assets. Nick noticed that the Hollywood provocateurs didn't just exhibit for he and Riley, they openly flirted with the girls too, especially Abbie whose tits were pretty much the center of attention at the table. \n\nFor the most part, they danced and partied as a group, but occasionally Nick or Riley would pair off and dance with one of the girl's individually. \n\nThe shots and cocktails continued to flow...mostly at Nick's urgings. Everyone was pretty much fucked-up by the time the clock reached one in the morning. They all laughed when as Abbie excused herself to use the ladies room and stumbled slightly in her unaccustomed heels before catching herself. She turned and admonished them all with an embarrassed yet playful smile before everyone busted up. \n\nNick immediately turned to Riley, \"So dude, there is this other place I really want to check out, it's called Boulevard3 over on Sunset. Why don't you, Lauren, and Juliana grab a ride and I'll settle up on this last round and we'll meet you there in a few.\" \n\n\"Sounds good Nick, I heard that place is pretty rippin', we'll see you there in a bit.\" \n\nTen minutes later as Abbie made her way back to the table, Nick took in every sexy curve of her rockin' body as she approached semi-drunkenly. He wasn't the only one, half the dudes in the place were eyeing her deviously, several of whom had already hit on her along the way to and/or from the john. \n\n\"Where is everyone?\" She asked with an inebriated grin. \n\n\"They all decided to go to this other place down on Sunset, I told them I would settle up and we'd meet them there in a bit!\" \n\n\"Oh, okay. But this place is great, why did they would want to leave?\" \n\nThat was exactly the response Nick was hoping for, \"I know huh, I'm not sure either. We should hang here a little longer!\" Just then the song changed and a loud roar sounded from the crowd before a new wave headed to the already crowded dance floor. Nick grabbed Abbie by the hand, \"Hey, I really like this song, let's dance!\" \n\nThe two of them had danced plenty together throughout the night, but Nick had kept it cool due to the presence of the others. Now he finally had her alone and had every intention of turning up the heat. His hot married coach was obviously quite drunk and he had picked up on lots of flirty cues throughout the night. \n\nButterflies formed in Abbie's stomach as Nick led her deep into the crowd. \n\nThe hip hop bump was so loud, they could barely hear each other talk, even from the close proximity the crowded dance floor required. Nick had a perfect view of Abbie's tits as they spilled enticingly out of the sexy dress. In minutes, they each developed a sweaty sheen on their exposed skin from the heat of the dance floor. Nick could actually see small beads forming on Abbie's chest and trickling down between her impressive cleavage. He leaned in close, \"Hey, that dress really does look great on you!\" \n\nAbbie smiled a wide smile and returned the compliment, \"You don't look so bad in that outfit either!\" Again she could feel flirtatious nervousness permeating her insides. \n\nNick looked down at his physique, he had unbuttoned one additional button on his tight shirt and his shiny muscled chest now shown impressively, \"...Looked pretty good with four gold medals hanging off of it earlier didn't it?\" He stated more than asked with an ear to ear grin plastered on his face. \n\nAbbie laughed, \"Yeah, it sure did!\" \n\n\"So you and Justin both won state gold's at the same competition back in the day?\" Nick yelled above the loud beat of a new song by Post Malone. \n\n\"Yes we did, but don't make it sound like it was that long ago, it was only like six years!\" She laughed as she slapped him playfully on the chest. \n\nHe laughed too, \"SIX YEARS? DAMN, I THOUGHT IT WAS ONLY LIKE THREE? YOU GUYS REALLY ARE OLD!\" \n\n\"Oh shut up Nick, you've known us for almost three!\" She countered playfully followed by more laughter. \n\n\"I bet you guys had plenty of fun that night?\" \n\n\"Nick Thomas...that's none of your business!\" She admonished him as she rolled her eyes cutely and smiled. \n\n\"No, I meant partying and shit...Wow, your mind went in the gutter immediately girl!\" \n\nAn embarrassed gaze formed on her face before she giggled, \"Oh, I misunderstood you, yes we partied pretty hard at a place not too far from here! Justin got so wasted, he almost barfed on the trip back up to UCSB!\" ",
        "Nick laughed just as a slow song from Drake transitioned into the mix. Nick instinctively reached around her hips with his large hands and pulled her close. \n\nThe butterflies in Abbie's stomach turned into eagles as for the first time in this nearly two and half year flirtation, Nick Thomas actually held her in his arms. She could feel the rigidity of the muscles in his arms and chest and she immediately found his masculine scent captivating. They danced tightly together for several minutes without saying a word before the DJ teed up another slow one. Nick's hands drifted down Abbie's back until they circled her tight ass cheeks. \n\nEverything in Abbie's head warned her to tell him to remove them, but her mind was quickly losing control to her leaking pussy as he pulled her tighter. The married dive coach felt the connection with the inescapable lump in his pants as it pressed against her for the first time since the male stripper show over a year previously. \n\nThe muscled black diver cupped his coach's tight ass cheeks more firmly as he pulled her to him, the lump now feeling more like a hunk of cured meat pressed against her. As the song played, their bodies pushed together tightly as suddenly this moment felt to both of them like the inevitable sensual collision they suspected would happen ever since that first time they had met at the recruiting interview. Nick whispered in her ear, \"You dance nice baby...\" \n\nHearing him call her 'baby' should have been enough to pull Abbie from the dangerous connection, but before her mind could process the words, a response formed on her lips, \"Mmmm...you do too...\" \n\nNick knew she was fucked-up and not showing any objection to his initial advances so he pressed further, \"Hey I got to ask you, when you were wearing that victory gold around your neck a few years ago, did it arouse you as much as it did me?\" \n\nThe question caught Abbie off guard, but in spite of her intoxication, she fully realized where he was going with this line of questioning. Surprisingly, she found herself not wanting to change the subject, \"Um...well it was like six years ago...\" they both smiled recalling their previous banter, \"but...uh...yeah, I seem to recall getting kind of excited!\" This time the flutter in her tummy nearly overwhelmed her as she couldn't believe she had just shared that with him. \n\nNick smiled broadly, \"Remind me, how many medals you won?\" \n\n\"Two...\" she answered quizzically wondering what he was getting at. \n\n\"Well just imagine how aroused you'd been if you won four...!\" Nick toyed as he pulled subtly away and led her gaze to the now rock-hard bulge in his pants. \n\nAbbie's eyes widened and an audible gasp escaped her lips, \"...Ah...um...I...uh...\" They were in the center of a huge dance floor, circled by hundreds of people, but at the moment Abbie felt like they were the only two people in the world. \n\nNick stared deep into her deer-in-headlights gaze with his piercingly mesmerizing eyes, \"You can't possibly know how I feel by looking at it, you need to touch it...\" \n\n\"Oh Nick...no...I...I can't...Justin...I'm married...this is crazy we are even dancing like this...\" She stuttered unconvincingly. \n\n\"C'mon baby, we both always knew it would come to this at some point...all the times you've seen me in my Speedo...I've seen it in your eyes. Touch it Abbie...\" \n\nFor some reason, hearing him call her by her name instead of coach or Coach Abbie, felt more strange than what he was actually asking her to do, \"...Ugh...Oh God Nick...I...I...can't...I've never cheated on Jus...Justin...\" She answered breathlessly, not yet taking her eyes off of his massive bulge. \n\n\"It won't be cheating, it's not like we'd be having wild, passionate sex or anything - it's just two people a million miles away relieving some pent up sensual curiosity.\" \n\nThe term 'sensual curiosity' seemed to sooth Abbie's palpable anxiety. She finally broke eye contact with Nick's cock as she turned her gaze to his handsome face and bit down nervously on her lower lip, \"...you won't tell anyone?\" \n\n\"...Shit no...why would I do that?\" He answered confidently as he reached for her hand. He could feel her shaking as he moved it towards his cock. \n\nSuddenly every recollection of Justin's fetish fantasies and his encouragement for her to someday sample an endowed man came flooding to Abbie at once as her small shaking fingers came in contact with Nick Thomas' rock hard shaft. \n\nNick gripped her ass tightly again and pulled her to him, obscuring the connection her hand was now making with his big cock from the sweat-covered horde of tangled bodies surrounding them - many of whom, were engaged in similar transgressions. \n\nThey stared into each other's eyes as Abbie's fingers squeezed and massaged an area in the middle of his shaft. Her small digits hadn't yet made the intoxicating journey from top to bottom, she was still just trying to come to grips (no pun intended) with the unfathomable diameter. \n\n\"...That feels nice baby!\" Nick groaned as he squeezed her swollen ass cheeks while checking out the sexy swell of her phenomenal tits. \n\nAbbie's tongue slipped from her mouth and subtly circled her glossy lips, \"Yeah it does...\" Her gaze remained fixed on his mesmerizing eyes, but her thoughts turned to all the times she had stared at his huge bulge, wondering what really lie beneath that Speedo. Now it was in her hand and every previous vision evaporated immediately as its thickness overwhelmed her sense of possibility. \n\nNick moved his head near her ear, \"That's a good spot baby, but there's about twelve others who would like to introduce themselves to those little fingers and a couple of their buds down below that have waited a long time to thank the person who helped them squeeze into that tight-ass altered Speedo.\" \n\nAbbie got the hint as she moved her fingers downward along its rutted length. She didn't know how her mind could feel totally blank and full of so many thoughts at the same time - but regardless she couldn't recall ever feeling like this. She was intoxicated with arousal and her pussy was filling her panties with moisture. Eventually she circled one Nick's huge balls in the palm of her hand. It felt like a large lime as she playfully squeezed and fondled it with her entire hand, \"...oh my...God...\" she gasped unthinkingly. \n\n\"Yeah...that a girl...get the other one too...uh huh...just like that...\" \n\nAbbie suddenly felt an urge to drop both of her hands and grip one in each, but she knew that would be too conspicuous so she carried on with her one-handed ministrations. \n\nAs it was, Nick caught a young white couple dancing nearby watching them excitedly. Nick hadn't said anything to the others before, but he had picked this particular club as it had a reputation for allowing and even condoning provocative behavior after hours. With his huge nuts firmly in his hot coach's grasp, Nick looked around to see lots and lots of people dancing and groping erotically under the flash of the sporadic strobe lights in the steamy venue. \n\nAbbie's hand had now made it up to the head of his fat cock and was rubbing and squeezing its fullness. \n\n\"Feels nice don't it?\" Nick whispered. \n\nAbbie just stared into his eyes and nodded. \n\n\"Hey, why don't we take this dance back to hotel...\" Nick suggested subtly. \n\nAbbie hesitated for what seemed like a full minute, obviously contemplating the possibilities, before responding in a sultry voice, \"...I like it here, let's dance some more.\" Nick felt her grip tighten around his cock. \n\nNick squeezed her ass roughly as an erotic gasp escaped her lips. \n\nEventually the music transitioned back to more upbeat hip hop. Nick swung Abbie around and pulled her tight ass against his crotch. For the next several minutes they danced suggestively as he ground himself against the sweet folds of her bubbled ass. Again he noticed the young white couple and now a few others watching them. He saw the little blonde subtly point her ring finger out to her guy, apparently acknowledging that Abbie was wearing a wedding ring. \n\nThis only spurred Nick on to enhance the show. \n\nAbbie didn't notice as her eyes were glazed and she was too busy pressing her ass against Nick's rigid cock. \n\nNick pulled her close again and buried his face in her thick hair from behind. Her scent permeated his senses, prompting him to run his nose along her long neck and take in more of her perfume mixed with perspiration. With his hands circling her waist and his cock grinding against her he began planting little kisses along her neck. \n\nAbbie stiffened initially before eventually reaching back and gripping the back of his head. She ran her fingers through his short kinky dreads as she turned her head slightly and encouraged his efforts. She could feel her rock hard nipples scraping against the silky fabric of her short dress. \n\nSuddenly she felt Nick's big hand cup the back of her exposed thigh just below the hem. She nearly lost her breath as his strong fingers traveled tantalizingly underneath and gripped her ass cheek, her soaked thong allowing uninhibited access, \"Nice baby...\" He muttered provocatively in her ear before biting it softly. \n\nAbbie knew she was quickly approaching the point of no return, if she let Nick touch her pussy then... \"Oh my God, I thought they left!\" She practically screamed out loud as she pushed Nick's hand away and pulled from his grasp in a sudden panic. \n\nNick looked up to see Riley, Lauren, and Juliana walking along the edge of the dance floor towards the main bar. \n\nApparently in their erotic hypnosis, Abbie and Nick had gravitated from the center of the dance floor to the outer edge nearest the bar. Nick tried to convince her to move back towards the middle, but the damage was already done. Abbie 'sobered' quickly and the realization of her infidelity finally crystallized in her mind, \"Nick we can't do this! I'm married!\" \n\nHe tried again to convince her to reconsider, but she wasn't having any of it. They made their way over to the others, Nick doing his best to conceal his hard-on. \n\n\"Hey what happened to you guys,\" Riley asked as he saw them approach. \n\n\"Sorry it's my fault,\" Abbie answered, \"I really like this club and I convinced Nick we should stay for a while. What are you guys doing back here?\" \n\n\"I left my damn credit card at the bar. I didn't realize it till after we waited nearly an hour to get into that other place.\" \n\n\"Oh shit, I'm sorry Riles, I had no idea there would be a line!\" Nick expounded with a chuckle. \n\n\"No worries, I'm just gonna grab my card and head back to the hotel.\" \n\n\"We'll go with you guys!\" Abbie blurted quickly before Nick could respond. \n\nThey called two Uber's and Abbie jumped into the first one with Lauren and Juliana. She was already back in her room when Nick's first text dinged on her phone, \"Hey, I still got plenty to drink over here, why don't you come down for a bit...the night's still young.\" \n\nButterflies circled Abbie's stomach as she glanced at the clock...2:45 a.m. \"Young my ass...\" she muttered to herself. Yet in spite of the late hour and a subtly clearer perspective, an unyielding force was pulling her towards Nick's room - Nick's room and that big black cock... \n\nAfter painstakingly wrestling with her thoughts and desires, she texted him back - she had typed and erased several iterations that included apologies and justifications, but she finally settled on, \"Nick, I can't...\" \n\nHe sent several follow-up responses but they all went ignored. Abbie had built up enough resolve to resist her temptations and she had since located her vibrator. It worked overtime for the next hour while she watched another rented porn flick. \n\nNick grew anxious after several unreturned messages so he bee-lined for her room on the seventh floor hoping to convince her in person. As he approached, he put his ear to the door - what he heard caused him to smile. In addition to a feint humming sound he heard a man's deep voice, \"C'mon you hot little married slut, put your white-girl cum all over this big black cock!\" \n\nNick knew the hook was set, it was only a matter of time till she swallowed... \n\n***** \n\nTwo weeks later \n\n\"Hey I got this big jar for them to all put their keys into tonight. Nobody is going to drink and drive when they leave here,\" Justin announced, proud of himself for coming up with the idea. \"I'll put it out on the porch in the morning and they can pick them up then.\" \n\n\"Good idea honey, what else do we need to do to get ready?\" Abbie asked with an energetic smile. \n\n\"That should just about do it. The solo cups and shot glasses are all out up here and down in the basement. The big bottle of Patron and the keg are on ice. The pizza arrives at 8. My ping-pong table is set up downstairs. They all love to play that beer pong game, so we'll see how crazy that gets.\" \n\n\"Did I hear you say Nick is in charge of the music?\" Abbie asked. \n\n\"Yes, they all wouldn't have it any other way, he's like the resident DJ and that hip hop shit will undoubtedly be blaring loudly all night long!\" Justin frowned before an accepting smile reappeared. \n\nAbbie's thoughts turned to the eroticism of the night club from two weeks previously. That night the thunderous bump of the hip hop blasting from the speakers was intoxicatingly hot. That, combined with the surreal experience of Nick's firm hands on her while grinding his big hard cock against her ass had nearly led her down a path to marital infidelity. Only the arrival of the rest of the group saved her from that fate. \n\nThe past two weeks had gone by in a blur as memories of that night came flooding back to her time and time again each and every day. But in spite of Justin's encouraging fetish fantasies, she couldn't bring herself to tell him of her transgressions, now cautiously hopeful it would be a distant memory before long. Still, feelings of anxiety and excitement coursed through her as this would be the first night she would see Nick since State Championships. \n\nThe conclusion of the dive season and both dead week and finals week in the interim had altered their typical schedules since. For the seniors, tonight's end of year team party was their last hurrah before graduation the following weekend. \n\nTeam members began arriving at seven o'clock, by eight nearly the entire team was there. Abbie had greeted Nick at the door in an awkward exchange that found her shaking his hand as he entered. Nick had to hold back a laugh as only two weeks earlier that same dainty hand had been stroking his big cock on the dance floor. \n\nIt was a warm night in the Sacramento area. Nick wore a tight tee shirt, shorts, and flip flops. Abbie was dressed pretty casual as well in a flowery sun dress and sandals. Her hair was up and she sported the sexy librarian glasses that Nick had seen on her only about a dozen times over the past couple of years. The pretty dress had thin straps and was cut relatively low in the front showing a fair amount of cleavage. It wasn't unusually tight, but it showed off her curves nicely. Her tan was already looking really good for early May. \n\nAs expected, Nick became NTDJ (BDNDJ would have been hard to explain) when he connected his phone to Justin's Sonos speaker system. The rap tunes soon blared from his Spotify mix to the delight of everyone on the team except the head coach...Justin gritted his teeth and accepted the fact it was only one night. Abbie's panties dampened like Pavlov's dog hearing the dinner bell as she recollected several songs from the erotic night at the dance club. \n\nAt several points throughout the night when one of those songs played, she and Nick would make knowing eye contact. Abbie would subconsciously look away quickly, but he knew what she was thinking. \n\nOver the course of the next four hours, beers and shots flowed continuously. One of the junior divers, Derek Lattimore, brought his famous Hornet beer bong which got plenty of use down in the basement. Justin pounded down a few like he was back at UCSB again. He had no idea each time he did that Nick Thomas added a little sleepy juice to the funnel. Although Nick suspected Justin might have cuckold tendencies, he had every intention of fucking his wife's brains out and wasn't going to take the chance of him being in the way. By the time the crowd dwindled to only a few, the coach was well on his way to Nyquil night-night. \n\nAfter Abbie walked Riley and Derek to the door laughing and joking about a story Riley recounted from his sophomore year, she turned and saw only Nick still waiting upstairs. Butterflies filled her stomach before she suggested nervously, \"Hey, let's go see what's happening downstairs.\" \n\nShe led the way with Nick following closely. He checked out her hot little ass and tanned legs as they made their way down. To Abbie's disbelief, the only person remaining in the basement was her husband. He was passed out on the couch sitting up with a half-full beer still in his hand. The sleep cocktail and all the booze the coach consumed had done the job. Nick's buddy Carl from the MM show had concocted the sleep drink and assured him it was safe, but warned him whoever consumed it would be out like Rip Van Winkle for the next ten to twelve hours. \n\nNick had to hold back a laugh as Abbie removed the cup from Justin's hand and tried desperately to wake him. Her efforts failed miserably. Finally she gave up and Nick helped direct his head to a pillow before Abbie covered him with a light blanket and flipped off the light. \n\nAbbie's butterflies morphed into pterodactyls once again as they ascended the stairs, \"So that was a good night, are you as tired as I am?\" She asked leadingly. \n\nNick didn't respond but instead made a bee-line for the fridge and grabbed a beer. Abbie's angst grew as he hopped his butt up on one of the only vacant counter spaces, \"Nah, I'm not too wiped, let's hang out for a bit.\" \n\nAbbie filled a water glass and took a big drink before turning and looking back at him. She'd had a lot to drink while playing beer pong downstairs and worse, had gulped down a handful of Patron shots mixed with a couple more beers over the past few hours while hanging out with the girls upstairs. Nick could see the drunkenness in her eyes. He could also see the telltale signs of the drugs he'd slipped into several of her keg pours. He knew the affect they had on her the night of the show, so he had been a bit more conservative with the volume this time around, but still made sure she got enough to enhance her level of arousal. \n\n\"So how come you didn't respond to any of my text's when we got back to the hotel the other night?\" \n\n\"Oh God...here it goes.\" Abbie said to herself. \"Nick...it was wrong what we...I did at the dance club!\" \n\n\"You didn't seem to think so at the time - you seemed to really enjoy yourself!\" \n\n\"That doesn't mean it wasn't wrong...\" \n\n\"Right or wrong, I think it was just two people acting out on an obvious attraction that's been building for a long time!\" \n\n\"What...what do you mean a long time?\" She stuttered nervously. \n\n\"Oh c'mon coach, don't tell me you haven't felt it from way back in the beginning. I've seen the way you look at it all the time.\" \n\n\"Look...look at what?\" \n\nNick laughed, \"The bulge in my Speedo, I've seen you stare at it hundreds of times over the past couple of years.\" \n\nAbbie gulped, \"You must be mistaken Nick...\" \n\n\"Tell me this, does Justin know you stare at it that much?\" Nick asked as he spread his legs exposing his bulge even in his baggy shorts. \n\nAbbie could feel wetness in her panties as she unconsciously glanced down between his legs before answering absently, \"I...I'm not sure...but...he...he would probably be okay if he did...\" ",
        "\"Bingo!\" Nick now knew that inevitable truth would lead to the outcome he had anticipated for a long time, \"Did you tell him about the dance club?\" \n\n\"No...no of course not!\" \n\n\"Why not, if he would have been okay with it, why didn't you tell him how much you liked stroking my big cock?\" \n\n\"Ugh...Nick...I didn't...I didn't...uh...tell him...\" \n\n\"You didn't tell him that you did it or didn't tell him you loved it?\" \n\n\"...Uh...I didn't tell him I...uh...did it.\" \n\n\"But you did love it didn't you?\" \n\nShe stared blankly into his eyes, both of them knowing how she'd felt. \"Tell me Abbie, if Justin would have been okay with it as you suggested, can I assume you guys are swingers or something?\" \n\n\"Swingers? Absolutely not, we've never been unfaithful to one another!\" \n\nA sly smile formed on Nick's face, \"Hmm, but he's okay if you check out another dude's package all the time?\" \n\nAbbie stammered again, \"I...I...uh...don't stare at it all the time, but...\" she swallowed nervously and dropped her eyes back into his crotch, \"...I think he would be.\" \n\nNick smiled widely and hopped down from the counter, grabbed her by the hand, and led her to the couch in the living room, \"Wait here for a minute.\" He grabbed his nearby backpack and headed for the adjacent bathroom. Abbie felt a tingling in her panties when moments later he returned wearing only his Hornet Speedo and tee-shirt. He quickly moved in front of her and tantalizingly removed his shirt exposing his tattoo covered muscular torso and gunned biceps. \n\nNick witnessed Abbie's sporadic heavy breathing as she looked up into his mesmerizing eyes. He then watched as her gaze followed a path down his muscled chest and rippled stomach before fixing on the incomprehensible lump directly in front of her stunned face. In spite of thousands of subtle and not so subtle stares, only once before, the night of the show, had she ever been this close to it. She licked her lips unthinkingly. \n\n\"Now you can look at it all you want!\" \n\nAbbie couldn't believe how every inch of the Speedo fabric was stretched so tightly. Her mouth watered as she wondered if it would burst out at any moment. She licked her lips again before biting her lower one and gazing back up into his eyes. \n\n\"Baby, we have both wanted this for a long time, why don't you go into your room, take off your clothes, and wait for me on the bed.\" \n\nAbbie's heart felt like it was going to explode in her chest, \"But...but what about him? What about...uh...Justin?\" She asked in a distracted absent tone. \n\n\"What about him? Based on how much he drank, something tells me he is going to be out for a while. But if he does wake, he can come in and watch...\" \n\n\"Watch?\" \n\n\"Watch us fuck baby!\" \n\n\"...oh God Nick. We ca...can't. I love him.\" \n\n\"Of course you do, but you said yourself he is okay with you ogling my bulge, I'm sure he's told you he would love to watch you have sex with a hung dude.\" \n\n\"Oh my God Nick...how could you know that?\" \n\nHe laughed, \"C'mon coach, you can't be that na\u00efve. As soon as you acknowledged that he would be okay with you ogling my junk, it's the natural next step. This is the 21<sup>st</sup> century, lots of husbands and boyfriends get off on watching their wives or girlfriends getting some big strange cock!\" \n\n\"Jesus...he said the same thing!\" \n\nNick laughed again, \"So we both know he wants this as much as the two of us, go on in and get ready for me Abbie,\" The muscular athlete nodded in the direction of her bedroom. \n\nAbbie stared at him absently before she finally did as he instructed as if some invisible puppet master controlled the strings to her aroused body. A surreal feeling of being in Nick's control overcame her. Here she was in her own home with her husband only a stairway away, but Nick Thomas, the young black man they had recruited and coached for the past two years, was the one now calling the shots. \n\nIt felt so wrong and so right at the same time. \n\nAbbie could barely feel her legs as she moved towards the bedroom, but just before entering she turned, \"...Nick...can you...uh...keep the Speedo on when you come in...\" \n\nA knowing smile formed on his face, he nodded. As she turned to move away he had every sense this was a fantasy she had waited a long time to live out. \n\nWhen she got into the room, every part of her was trembling. Abbie went to her lingerie drawer before entering her master bath. The young dive coach stared into the mirror before removing her glasses, slipping the sundress from her shoulders and letting it fall to the floor. Her fingers shook nervously as she disconnected the strapless bra clasp before stretching her tight silky panties over her lithe hips. Both sexy garments joined her dress on the floor. Abbie stared at her naked body in the mirror, knowing that a man who wasn't her husband would soon see her like this, but that wasn't all, he would touch her...he would kiss her...he would lick her...he would fuck her. \n\nAbbie swallowed uneasily before applying perfume to her neck, her breasts and her pussy mound. She slipped on one of Justin's favorite pink baby dolls and checked herself out in the full length mirror behind the door. She knew she always looked really good in this piece and right now her tits looked perfect spilling out the top and filling out the sexwear. She released her hair from its hold and let it fall over her shoulders. She kinked it a bit and applied wet lip gloss before exiting the bathroom. She hurriedly lit several candles around the room before dimming the lights and crawling up on the soft surface. Justin was the last thing on her mind. \n\nMoments later Nick Thomas, her black diving prot\u00e9g\u00e9, entered the room dressed only in his shorts. Abbie felt a tinge of disappointment that he had covered back up his Speedo, but her attention moved hurriedly to his black-skinned muscle-covered chest and rippled stomach. His tats that had been a source of annoyance in the past were now drawing her gaze curiously. \n\nNick himself couldn't remember ever being more aroused. Before him on her marital bed knelt his gorgeous white coach waiting innocently for a blacking she couldn't possibly fathom. He had seen her dressed in hundreds of outfits including string bikinis and party dresses over the past couple of years, but never had she looked as good as she did at this moment. Dressed in a shear pink baby doll that did very little to obscure its heavenly contents, Nick took in every inch of her stunning body. Her gorgeous face wore the gaze of a young movie actress waiting for her first sex scene with an experienced heartthrob...nervousness mixed with unbridled excitement. \n\nThe knowledge that her husband was only one floor below cemented Nick's arousal as he knew that the next time Justin Dawson saw her, his previously innocent wife would no longer be a virgin to big black cock. This seduction had gone on long enough - tonight Abbie Dawson would learn what it was like to be taken by a black bull. Nick Thomas eyed her hungrily as he made his way towards the bed. \n\n\"I thought I said to take off your clothes,\" an authoritative tone resonated in his voice. \n\n\"Mmm, you did, but I thought you might like this.\" Abbie apologized as she gazed down at her scantily clad tits in the shear lingerie. \n\nHe nodded, not showing any outward emotion but aroused as hell at how fucking good she looked. \"Tell me what you want?\" \n\nAbbie licked her lips while staring at his crotch. He was now only a few feet away. \"I want you to take those shorts off...\" she breathed lustily without making eye-contact with his face. \n\n\"You want me to strip for you?\" \n\n\"Yes please Nick...take them off...now!\" Nick could hear a strained impatience in her voice. \n\nA knowing smile appeared on his face as he watched Abbie move closer to him, \"You know good things come to those who wait don't you bitch?\" \n\nAbbie was practically hyperventilating, subtly aware he was making her wait for what she had fantasized about for so long - him calling her a bitch would have been inappropriate in any other setting, at this moment it enhanced her arousal. \n\n\"Please Nick, take them off...I want to see it.\" \n\n\"I can see by the look in your eyes you want it bad...tell me!\" \n\nAbbie nodded impatiently and licked her lips, \"Yes...yes...I want it...please do it! Show it to me.\" \n\nNick laughed before slowly disengaging the top button and teasingly releasing the others, allowing his shorts to fall to the floor. Abbie gasped out loud and moved closer to him once again. She reached out instinctively but Nick pushed her hand away before pressing forward, \"Use your mouth!\" \n\nIn spite of her surprise at his directive, she didn't hesitate. Her breath was heavy as she leaned in until her lips came in contact with it through the silky material. The young wife immediately felt a shudder surge through her body as its intoxicatingly masculine scent nearly overwhelmed her. Abbie would later admit to her husband that for the first time ever in her life she thought she might die if she didn't have sex. \n\nThe horny wife started running her lips all along Nick's semi-limp shaft. She couldn't believe the heat coming off through his suit. She reached for it, but Nick pushed her hands away again, instructing her to keep doing what she was doing. \n\nAbbie felt like she was in a dream as the surreal experience that she'd imagined so many times was finally a reality. She'd seen him in his Speedo so many times over the past two years and had fantasized about this moment more times than she would admit, even to herself. Now as her lips and tongue massaged its rutted contours she began to sense his arousal. She was amazed that he wasn't already hard. Abbie tried to imagine Justin's much smaller cock possibly remaining flaccid as she licked and kissed his cock while dressed like this for him. \n\nShe knew that would never have been the case, but the longer she used her mouth, even Nick's previously steel resolve slowly dissolved as his magnificent cock began to harden and grow. Nick wrapped his long fingers in her hair and guided her head as Abbie's efforts caused it to expand and lengthen so quickly she could hear the seams of the Speedo stretching. \n\nWhen it finally sprang free, she screamed and practically jumped in surprise. \n\nHer eyes got huge as she finally saw the object that had pervaded her thoughts so often over the past few years. She was astonished at its size. Nick heard an audible gasp as his hot married coach tried to come to grips with what now stood powerfully rigid in front of her face. The dark black head and veiny contours gave it a powerfully threatening appearance, yet the only thought that came to her mind was how stunningly beautiful it looked. \n\nShe wanted to suck it. \n\nNick let her move her head forward and kiss it unsheathed for the first time. His fingers remained tangled in her thick hair as she planted little kisses and nibbles along its length. The heat and electricity she felt without the restrictiveness of the suit made her pussy drip and her nipples turn to stone. \n\n\"Stick out your tongue,\" his authoritativeness returning. \n\nAbbie did as he said before he wrapped a large hand around his girth and brought it to her lips. \n\n\"Taste what's leaking out!\" \n\nAbbie nervously wiggled her tongue around the tip and lapped at his pre-cum, \"Mmm...\" Nick heard from somewhere deep in her throat. He grunted approvingly before rubbing it more forcefully around her wet tongue and plump lips. \n\nAbbie opened her mouth, showing him the wetness inside. Inviting him to enter. She couldn't wait for it. \n\n\"You like giving head?\" \n\nHis young coach nodded despite the fact it had never been her thing. He could see a nervous excitement on her face. \n\n\"Show me,\" he said as he pushed the fat head between her succulent lips. Abbie's mouth was quickly stretched so wide that she found breathing difficult. His circumference challenged her capabilities, but she quickly learned she could breathe through her nose and still use her tongue to tickle the fleshy underside to his grunting approval. He pressed deeper, but in spite of her best efforts, he came to a hasty realization that she was going to need a lot more practice. The irony was not lost on either of them as she had been the teacher for the past few years in the pool, but he would now be the one providing instruction in the bedroom. \n\nNick liked it that way and despite her inexperience, he loved the way she looked with his big black cock in her mouth, \"I'm surprised you aren't a little more comfortable sucking cock, but I'll teach you...I'll teach you how to please a black man with your mouth! Spit on it baby...mmm...that's better now lick and suck it!\" He groaned as he reached down and squeezed one of her heavy tits, \"Nice baby, suck it while I play with these big titties!\" \n\nNick pulled her to the edge of the bed. He stood between her legs as she anxiously stroked her saliva with both hands, one on top of the other while slutishly sucking and kissing the head. Then she found his balls. Abbie pulled his cock from her mouth to get a look at her new discovery. Her eyes went wide as she stared at the huge black sack that enveloped her small hand as she kneaded the lemon sized spheres with her fingers and muttered, \"Oh my God, no wonder you don't fit in those Speedos...\" \n\n\"Take that shit in your mouth too...\" the black diver brusquely directed as he raised one foot up on the bed exposing his heavy hanging sack. Abbie observed that since they'd entered the bedroom, Nick's recently evolved persona took a back seat to the edgier ghetto character she and Justin had first come to know. Regardless, she latched onto one of his big balls and sucked it enthusiastically, not giving a shit at this moment about their socio-cultural differences. \n\nNick's hands found her tits and squeezed them roughly. It startled her at first, but she soon found she liked the way he manipulated them as he pressed her mounds upward while thumbing her nipples. She moaned her pleasure. \n\n\"Show them to me...show me those big titties,\" he grunted. \n\nIn spite of her arousal and desire to get naked for him, Abbie playfully teased with a naughty grin, \"My husband is the only one allowed to see them...\" \n\nHer response surprised him at first, but immediately the reluctantly playful interaction aroused him. However, instead of playing along, he took the opportunity to remind her who was in charge, \"Oh is that right? Well I've waited too long for this!\" He growled in a mockingly authoritarian tone before yanking the front of the sexy lingerie from her chest. The tiny straps snapped like rubber bands and his hot coach's perfect tits bounded out. \n\nThe action surprised her and a startled scream escaped Abbie's lips as she looked down to see her tits bouncing with the destroyed baby doll now bunched around her waist. She looked back up at him in amazement before a smile formed on his face. Moments later they were both laughing before he moved in and their lips locked passionately. They kissed like teenagers as Nick squeezed her fully exposed tits and she stroked his huge cock. \n\n\"Wrap them around it...\" Nick directed when their lips finally separated. \n\nThe suggestion surprised her, \"Wrap them around...?\" \n\n\"Your fuckin' tits...wrap them around my cock!\" Nick clarified as his dark manhood stood majestically in front of her face, slick with her saliva and glistening from the flickering candles. \n\nHe watched as she pulled him forward against her chest. Nick couldn't get over the flawlessness of her big rack. The aroused black man couldn't recall ever seeing a nicer set than the d-cup pair heaving enticingly on his young coach's slender frame. Round and shaped to perfection they looked like they had been sculpted by an artist to serve as the focal point of her stunning body. Sitting heavily above her flat stomach they contained that perfect shape that forced her hard nipples upward towards his ogling stare. He would soon feel the contrast of just how soft they felt as Abbie positioned them around his big aching cock and began an up and down movement. \n\nNick's head fell backwards when the warm comfort engulfed him, \"Fuh...uh huh...those big titties feel real good baby. Now get it all nice and wet...spit on it!\" \n\nAbbie looked down to see the huge black head emerge from between them. Her mouth was already wet with arousal - she let a large saliva stream spill from her lips and land across Nick's partially opened slit. He then used her wetness to lubricate the heavenly tunnel engulfing his cock as he fucked her tits in long slow strokes, \"Yeah baby...do it again.\" He groaned before watching her release another slippery loog from between her plump lips, \"Mmmph...that's what I'm fucking talking about!\" \n\nNick picked up the pace and was soon giving Abbie's sexy tits a good fucking while she excitedly squeezed them around it, played with her nipples, and watched. The contrast of his dark black head entering and exiting her creamy white tits aroused her in the same way she had felt watching Justin's interracial videos. \n\nNow she wanted his big black cock back in her mouth. \n\nAbbie lowered her head and licked the tip each time it thrust forward. She was amazed that his cock was long enough to accommodate such an action. When Nick saw what she was doing he surprised her further. Till now he'd only planted about two-thirds of his meat between her pillowy folds in an effort to maximize the time his sensitive head and fleshy underside spent between them, but his focus was now on another location of desire, \"Open your mouth and suck on it while I fuck your big tits!\" \n\nHis aggressive move startled Abbie momentarily before the head of his cock sunk between her parted lips and his huge balls slapped against the base of her tits. Abbie's arousal only built as he took her this way for several minutes creating a sloppy mess on her chest as she slobbered uncontrollably and his pre-cum oozed . \n\nFor the first time in Abbie's life she felt like her body was being used completely as it was designed - to provide pleasure for a confident man who knew exactly what to do with it. Her desire to please him superseded even her own pleasurable feelings. She also realized she really liked sucking his cock, \"Uhn...Nick your big cock tastes so good, I love having it in my mouth...and I love the way you're fucking my tits!\" \n\nSuddenly she heard Nick groan loudly. Thinking she may have hurt him, she pulled back only to hear him grunt again. This time, his guttural howl was followed by a burst of milky cream exploding from the tip of his cock. The first string landed heavily across her stunned face causing her to gasp in surprise. With her mouth open, the second blast splattered partially inside and down her chin. Abbie reached for his cock in an attempt to guide it away from her face, but not before two more spurts erupted from the engorged head. The first coated one of her eye sockets and the other landed haphazardly in her hair like a heavy slather of shampoo. When she finally pressed his spurting cock downward, her upper chest and breasts received the heaviest dousing as she counted a half-dozen more powerful spurts before his huge balls finally subsided and the remainder dribbled across her fingers. \n\nStill not comprehending what she'd just witnessed and not aware how much was in her mouth, the stunned wife swallowed and tasted his rich ejaculate for the first time. She had rarely if ever tasted Justin's cum, but she was immediately surprised that Nick's possessed a unique, almost buttery quality about it, \"God Nick...I didn't know anyone could...\" \n\nHe cut her off, \"...Those sweet wet titties milked it right out of me. Now clean me up!\" He suggested matter-of-factly as he brought the cum covered head to her lips. Abbie's eyes got wide as she thought to herself, \"...clean you up? I'm the one covered in this mess!\" But before she could process another thought, Nick's plumb-sized head pushed her lips apart and entered her mouth. ",
        "Her second helping was just as agreeable as the first and she soon found herself licking and sucking it from his spongy head before using it to coral more from around her face and direct it towards her mouth. Nick held the back of her head and watched pridefully, \"That a girl, tastes nice don't it?\" \n\nAgain Abbie picked up on the Stockton hood in his tone and word choice, but surprisingly she found something about it intriguing. She nodded in response with the full head of his cock back in her mouth. She sucked him hungrily until most of the heavy stuff was cleaned from her beautiful face. \n\nIn spite of her inexperience, Nick concluded his dive coach had an affinity for sucking black cock and the fact she hadn't shown opposition to swallowing his jis only added to his level of desire for this woman. \n\nBut after two long years of seduction, he was ready for more than her mouth. \n\nNick pulled his rigid cock from between her lips and positioned her on her back near the edge of the bed. Abbie whimpered excitedly as he pulled her tattered lingerie from her hips and tossed it aside. Nick took a moment to absorb the perfection of Abbie's naked body before he gripped her thighs and slowly worked them apart. Staring him in the face was the sexiest of white married pussies dripping with excitement. His young coach had a cute little dark patch cut sexily above glistening pink pussy lips. He liked that her slightly puffy outer labia gave way to excess-fleshed inner lips - there was something about a little dangling pussy skin that really turned him on...especially on white chicks. Nick spread her legs wider before dropping his head between them and tasting her for the first time. \n\nAbbie practically bounced off the bed when she felt his tongue. \n\nBefore too long her ass did actually lift off the bed as she tried to enhance the connection between her pussy and his long tongue. He had already brought her to the edge several times until she begged him to make her orgasm, \"Please Nick, it feels so good, please make me cum,\" she whined as her hips rotated desperately while her hands smeared his ample cum around her tits. \n\nNick had to hold back a laugh as his married coach's pitiful cries exposed her level of need. He contemplated eating her sweet cunt to release, but decided her first of countless orgasms would take place with her tight pussy impaled on his big black cock. Confidently he stood and gripped his rigid dick and positioned it at the entrance to her pink dripping slit, \"Time for that little pussy to get fucked by something that'll make it forget all about them tongue cums!\" \n\nNick rubbed the big spongy head up and down her dripping slit, paying special attention to her swelling clit. \"God Nick, I want you in me...but you need to use something,\" she gasped, suddenly wishing she and Justin hadn't decided to go off the pill. \n\n\"C'mon baby, you know how much better it'll feel. Little white pussies were made to feel big black cocks skin to skin!\" \n\n\"...Ugh Nick...please...I can't risk it...Justin has some in his nightstand!\" \n\nNick let out a little chuckle which caught her by surprise, \"Nah, I got some shit...\" \n\nAn audible gasp of disappointment escaped her lips as he released her legs and walked around to the base of the bed. Her hand fell between her legs and rubbed her pussy while she followed his muscle covered physique around the bed. He reached into his shorts before tossing them back down. As he moved back in her direction her attention was clearly focused on the most overwhelming presence in the room. This time when he moved back between her legs, it was her who gripped his rigid pole and guided it up and down her pussy slit, \"God Nick...it's hot and big...please fffffuck me...I need you in me,\" she begged in a desperate whimper. \n\nAs Nick tore open the box of BIGFOOT XXX MAGNUM PLUS rubbers they stared into each other's eyes, both fully aware that the past couple of years of erotic seduction had finally reached the inevitable precipice they had always known they would eventually climb. \n\nAbbie's thoughts turned to Justin one final time as Nick lined up his sheathed trunk at the opening of her waiting pussy. All the subtle and not so subtle fetish moments, encouragements, enticements, and urgings her husband had bestowed upon her over the past several years had led her to this point - naked and truly ready to be taken by an endowed man who wasn't her husband. And not just any man, the black man whose massive cock had been the central point of so much of their erotic infidelic foreplay ever since they'd first viewed the incomprehensible lump in his Speedo from his dive tapes years before. \n\nThe young wife took one final deep breath before she felt Nick Thomas' big black cock push inside her. \n\n\"Ohhhh myyyy Godddd Nick...please go slow...shit...ohhhh,\" she groaned as the swollen head sunk past her stretched lips. \n\nNick held her calves up near his shoulders as he slowly pressed millimeter after millimeter of his stone-hard cock into the young wife's tight pussy. He pridefully watched as her gorgeous face writhed in an unending array of pained yet pleasurable visual responses that aligned with the gasps and grunts escaping her gaped mouth, \"...slow Nick...fuck...uhn...Jesus...ohh...ohh.\" \n\n\"Fuck your pussy is tight coach.\" \n\n\"Oh Nick...uhn...uhn...God...I've never felt anything...anything like this...so big...ohh...ohh...yeah...\" \n\n\"Now you know what you been missin' all this time, feels good don't it,\" he grunted in his best Stockton hooded dialect. \n\nAbbie simply nodded before cautioning, \"You're so big...keep going slow...it feels so good but it hurts too!\" \n\n\"Don't worry baby, once that tight married pussy gets messy all over it, the only thing you'll feel is Nirvana. You ain't ever gonna wanna stop!\" \n\n\"Oh God...\" Abbie whimpered as the handsome stud began slow in and out movements with about a third of his cock now buried inside. \n\n\"Play with those big titties baby!\" Nick directed as he pulled her legs together and wrapped one muscular arm around them against his torso. He ran his long tongue along her calves as he moved his free hand to her pussy and pressed his thumb against her clit while feeding more veiny cock inside her. \n\n\"Oh fuh...Nick...that feels sooo good, keeping doing that!\" Abbie whined as she pinched and pulled her hard nipples. \n\nWith his big black cock reaching the halfway point and his thumb having unleashed her swollen clit from its glistening little teepee, Nick began to see the telltale signs of an impending orgasm forming on his coach's gorgeous face. Her breathing was strained and her moans intensifying while her hips undulated ever so slightly, seeking to maximize the immense pleasure she was experiencing balanced with the dull ache of being stuffed so thoroughly. \n\nNick's cockhead had already reached places within her that had never been discovered and his rutted thickness wasn't deflowering them tenderly. The mushroomed phallus scraped roughly along nerve endings that instinctively bathed it in secretions never having been tested before. \n\nTo Nick Thomas, they were working to perfection. Abbie's unbelievably tight fuck tunnel immersed his cock in a heavenly welcoming party of slippery juices mixed with the softest tissues imaginable, \"Fuck baby, your tight-ass pussy feels so damn good!\" \n\n\"Oh yeah Nick, you're making me feel so good...I never knew it could be like this. Please...please don't stop doing anything...ohh...ohh...God...I love it!\" \n\nNick had fucked countless women in his young life, but due perhaps to their extended erotic seduction, or possibly because Abbie was hot as fuck, he couldn't remember ever feeling more aroused at the prospect of a bitch creaming on his big cock like his married coach was about to, \"Go on baby let it out, put that married cum all over that big black stick! You know you want to!\" \n\n\"Uhn...uhn...yeah...you're gonna make me do it! Ohh...ohh...shit it feels sooo good Nick...don't stop! I wanna cum for you...\" Abbie wailed. \n\n\"Give it to me baby...give me all that sweet married pussy juice! Put it on my black dick bitch!\" Nick implored as he shoved his cock deeper into her than he had any point while continuing the titillating thumb ministrations around her dripping swollen clit. \n\n\"OH MY GOD NICK YES! FFFFFFUCK ME...FFFFFFUCK ME!\" The uncontrollable young wife screamed, making Nick wonder if she might wake her passed out husband. \n\n\"I'M CUMMING NICK...OH MY GOD...I'M CUMMING!\" She wailed as her entire body shook violently and a burst of juice spilled out copiously around the edges of his deeply buried cock. \n\nThe ejaculation startled even Nick Thomas. He pulled his massive dick from between her gaped lips and a gush of pussy juice splashed onto the sheets, \"Holy fuck! Now that's what I call a good cum bitch!\" He cheered. \n\nAbbie barely heard his words as her head was still arched backwards against the sheets with her mouth wide open as she fought to replace the oxygen that had been fucked out of her lungs by Nick's amazing cock. \n\nHe shimmied her semi-limp body up towards the center of the bed with his cock still buried inside her. Abbie's gushing climax had assisted in a far deeper penetration by his long cock - most of him now being squeezed by her still hungry pussy. He started right back where he'd left off, fucking her right through her orgasm. Her taught legs were now spread wide as he held himself above her with his muscular arms in an upward pushup position. \n\nAbbie moaned loudly as her hands roamed from his chest to his shoulders to his gunned biceps. Finally she pulled him down and practically swallowed his tongue as hers swirled and sucked on it like a starving women. Nick began fucking her in long slow strokes, burying himself deeper on each thrust. He still couldn't believe that in spite of her squirting climax, she could still feel so tight. The room was filled with the sounds of Abbie's ever present moans and wet smacking sounds as her pussy had become completely sodden following her orgasm and Nick's subsequent pounding. \n\n\"Uhn...uhn...uhn...God Nick...yes...you're so deep inside me. Please keep going slow like that...it feels sooo good...uhn...uhn...yes!\" \n\nNick was now only an inch or so away from full penetration. He was impressed that Abbie's unbelievably tight pussy was capable of taking him so deep so quickly. Some chicks were never able to accept him at the depth his hot coach was at this moment. He was quickly confirming what he had expected for so long, this married bitch had a body built for fucking. And better yet, it was obvious she fucking loved it. He leaned forward and took one of her rock hard nipples between his teeth and bit down playfully as he thrust powerfully into her yet again. \n\n\"Oh yeah Nick, I love that - bite my nipples while you fuck me,\" she whined while tangling her fingers through his short dreads. \n\nHis coach's dirty pillow talk spurred him on to pound her harder. Nick had to hold back a laugh at the divergence between her and Justin's strict rules about profanity on the pool deck versus her resemblance to a foul-mouthed banshee while impaled on his big cock. He plunged his rutted shaft into her with more force as they both felt his huge balls bounce off her ass for the first time. Abbie cried out again, \"Shit...it's so deep Nick...so deep...Jesus! I can't believe I can take it all...\" \n\n\"Oh you can take it and you're gonna take deep it all night long!\" \n\n\"Oh yes Nick...fuck me...fuck me harder...Oh shit...you're going to make me cum again!\" Abbie could feel another big orgasm developing deep in her pussy. \n\n\"Squirt that pussy juice all over my big cock again bitch!\" Nick growled as he pummeled away at her married hole. \n\n\"Yes..yes...ohh...ohh...big...so big...fuck me deep with your wonderful cock Nick...make me cum...OHHHH GAAAAWWWDDD!\" She screamed as her fingernails dug into the flesh of his rigid ass. \n\nExperiencing her in the throes of complete sexual decadence with her big beautiful tits bounding across her chest while plunging deeply into her squirting pussy was too much for Nick to handle, \"Shit Abbie, your tight wet pussy is gonna milk it right out of me!\" He shouted as every muscle in his body flexed, the head of his cock swelled, and his huge balls bounced off her ass as he deposited a torrent of cum into the oversized rubber. \n\nAgain Abbie's copious juices flowed out of her well-fucked hole when Nick pulled his cock out and they collapsed together on her marital bed. \n\nThey both fought to capture their breath as Nick took the opportunity to get in a little jab, \"Shit baby, at this rate we ain't gonna have any dry spots to sleep in tonight!\" They both glanced down towards the mess on the sheets between Abbie's legs and laughed breathlessly. \n\n\"Who said we're going to sleep?\" Abbie answered with a naughty smile that Nick took as containing undertones that she might not be kidding. \n\nMoments later another mischievous grin formed on her face before she jumped from the bed and entered her closet. Nick's eyes followed her stunning bubble ass as she disappeared through the doorway. She returned with another naughty look on her face and a silky black box in hand. Her perfect d-cups jiggling all the way. \n\n\"What have we here?\" Nick questioned, suddenly wondering if his innocent dive coach was really all that innocent. \n\n\"Just some fun stuff,\" she giggled as she plopped the box down between them. The first thing she pulled out was Justin's soft-covered DVD case containing over a dozen porn videos. Abbie flipped quickly to the one titled 'Chocolate Decadence', \"I think this is appropriate, don't you?\" She bit her lower lip and asked as she held it up for him. \n\n\"I'd say so, put that shit on...\" \n\nAbbie rushed to the DVD player, flipped it and their big flat screen TV on and returned to the bed with remote in hand. When she arrived Nick was holding up a pair of fuzzy handcuffs. Her eyes got wide before knowing smiles formed on both of their faces. \n\nMoments later the first scene that Abbie vaguely recalled from the one time she and Justin had watched this video came on the screen. A beautiful blonde wife and muscular black man were making out on a hotel bed as the woman's husband watched nearby. \n\n\"Hmm, is this the kind of shit you and Justin like to watch?\" Nick asked, obviously picking up on the interracial cuckold element. \n\nAnother mischievous grin formed on Abbie's face as she simply nodded. \n\n\"I guess I should have known...\" Nick responded as he watched the blonde on screen reach for the black bull's big cock. \n\nAbbie's words interrupted his gaze, \"We also like to do what they do,\" she teased playfully as she wrapped her dainty little fingers around his semi-rigid dick. \n\n\"Uh huh...makes sense to me.\" Nick answered as he propped a pillow behind his head and did the same with his intertwined fingers, elbows out. \n\nHe watched as his hot coach moved between his legs and stroked his pussy juice covered shaft. She moved in close and stared at it as she slowly stroked it, a mesmerized gaze painted on her face. The huge rubber reservoir tip of the BIGFOOT MAGNUM, was filled completely and actually ballooning out with Nick's spunk. He wondered what her intentions were before his gorgeous coach surprised him by extending her tongue and flicking it across the semen filled bubble. Nick watched as she playfully bobbed her tongue against it for nearly a minute before she kissed and licked around the sheathed head of his cock, obviously lapping at her own essence as it coated the enormous condom. Finally, she tilted her head back and looked at him with a hungry gaze, \"I want to clean you up.\" \n\nAgain Nick was taken aback - his married coach was full of surprises. She would tell her husband later that Nick had instructed her to clean him, but the fact was, she wanted to taste him again. Abbie worked the incredibly tight sheathing from his hardening cock, taking care to ensure that as much remained inside in spite of her desire for its creamy richness. When she finally got the massive stretched-out prophylactic removed, she was dumbstruck by the volume and weight of its contents. She felt like she was back in sixth grade again holding an oversized water balloon at her friend's birthday party. \n\nNick watched in prideful satisfaction as he suspected what was going through her mind. But her next move surprised him. His typically conscientious, fastidious coach simply dropped the sodden, bulging condom onto the hardwood floor on her husband's side of the bed before attacking his cock with an impatient fervor that soon had her lips dripping with the remainder of his viscous spooge. \n\n\"Yeah baby clean that shit all up,\" he cheered, one hand now on the back of her head. Abbie's hungry tongue licked and nibbled up and down the length of his re-engaging shaft. \n\n\"Oomph...mmm...you taste good...\" Nick's hot coach groaned as her tongue fluttered slutishly. \n\n\"Uh-huh...there's lots more where that came from...now give me another little taste of that married slit.\" He directed as he manipulated her body around until her gaped pussy was only inches from his face. They dined on one another's genitalia in a luscious sixty-nine until Abbie's juice literally ran down his face and her rapidly improving cock-sucking skills made him stone-hard yet again. Nick announced he was ready for more fucking. \n\nHe slid out from under her sweat covered body, keeping her in the same basic position and bringing her hot bubbled ass into play. He moved behind her with a sleek expertise, as fucking from behind was his unquestioned position of choice. To Nick, there was just something primally correct about taking white women doggy-style. Not only did it feel fucking great, but in no other tangling of body parts was the alpha black male, submissive white female element more in play. And in no other position did his huge nuts get to have more fun slapping against dripping clits and stunning white asses. \n\nThis wasn't just Nick's opinion either. It was a running joke with all his buddies from the Bull Pen how much white couples got off on it when the alpha black bulls fucked the shit out of the wives or girlfriends doggy-style while the husbands or boyfriends watched. A couple of the older more tenured bulls theorized some of those couples needed BBC doggy mating as much as the air they breathed every day. \n\nNick would soon learn that his hot coach might fit right in with that group. \n\nAbbie had always been somewhat reticent to Justin's urgings for rear entry sex, considering it kind of inappropriate for husbands and wives. Even the porn that Justin had introduced to their sex lives which featured a lot of doggy-style fucking, while arousing her to watch, hadn't altered her conservative opinion about practice. To her, it was great for porn stars, but not something she and Justin should indulge often. \n\nShe hadn't been fucked doggy yet by Nick Thomas and her opinion was already changing. \n\nAbbie squealed excitedly when Nick positioned her on her hands and knees. He pushed her smooth tanned legs apart exposing her dripping lips and puckered hole. Nick considered his coach's ass basically flawless, especially for someone her age. Lots of time in the gym and swimming laps had contributed to its God given ripeness. Abbie's bubbled cheeks framed her deep cleft crack highlighting the wetness along it brought about by his expertly orchestrated tongue-fuck. \n\nThe black stud pushed her shoulders downward until her head rested against the bed sheets. Her breathing was ragged as she waited nervously for the thorough fucking she knew she would soon receive. Nick aligned his fat cock with her ass crack before flopping the heavy meat up on top just above her hole. A startled scream escaped her lips as the shear mass of his rigid log caused her to grasp handfuls of bed sheets to brace herself. ",
        "Nick slowly retracted his ass, letting the fat head of his cock slip naturally down and nuzzle against the circular ring of her married asshole. Abbie gasped loudly. He let the spongy head rest against her asshole, teasingly pushing and retracting as if he intended to penetrate. Abbie waited nervously now knowing his intentions. \n\nFinally after a tantalizingly long delay Nick gripped his cock and smeared Abbie's juices up and down her crack. Along the way he tortured her as he playfully slapped the glistening head against her pussy lips and puckered hole. Abbie moaned loudly before desperately whimpering for Nick to fuck her. \n\nHe held back a laugh as he teased her for another minute until she was practically begging. But then without warning just as he was about to shove it into her, she surprised him with a request out of left field, \"Nick, what did you do with those handcuffs?\" \n\nNick's eyes widened, \"Did she really just ask that? \"Their right here baby...\" \n\n\"Nick...oh God...can you cuff me to the bed before you...um...do it?\" \n\nNow in addition to the stunned expression on his face, Nick's cock swelled to unmatched proportions, \"You really are full of surprises Abbie Dawson! I have to admit I didn't expect you and Justin to be into some of these hot kinks...\" \n\nAbbie peered back over her shoulder, her breath ragged, \"I've...uh...never let him put those on me...but there's...something about doing it with you...God Nick...I can't believe I'm saying this...but I want you to own me.\" \n\nNick knew he had just received, albeit completely unexpectedly, the ultimate green light - now he had every intention of using it to the full extent of its power, \"Yeah I'm not surprised bitch, but what you're telling me is you want to be my little fuck slut, is that right?\" \n\nAbbie dropped her head back to the sheets in shamed acknowledgement before nodding while facing downward, her muffled voice still audible, \"Oh God Nick...I can't believe I'm doing this...\" \n\n\"Oh yes you can...but tell me you want it!\" Nick growled as she spanked her ass for the first time. \"Say it!\" \n\nAbbie yelped loudly as her head fell to the side, \"...Fuh...Jesus...yes I...I...want it! I want to be your slut Nick!\" \n\n\"Uh huh...that's more like it,\" he spanked her again. \"Grab hold of that headboard slut!\" \n\nAbbie gasped again before doing what she was told. Nick, being an expert in usage from his time at the Bull Pen cuffed his hot coach to her marital bed in a matter of seconds. He stuffed a pillow under her hips before returning to his knees behind her stunning ass. Nick's big balls bounced together in excitement as he pondered his unbelievably good fortune, \"Damn...Coach Abbie is naked and bound to her bed and begging to be my slut while Justin is just downstairs!\" \n\nThis type of submissively slutty behavior wasn't uncommon for the cuckold wives at the Bull Pen, but this was his conservative married dive coach for fuck sakes. \n\nNick slapped his huge cock against her dripping pussy lips, \"Beg for it slut!\" \n\n\"Oh God...\" She whined. \"You know how bad I want it.\" Now as she was about to be fucked from behind while handcuffed to her bed as interracial porn that she had initiated, played on their bedroom television, the depravity of her actions resonated in Abbie's mind. She had denied her husband all of these same desires on countless occasions, but now as Nick Thomas slapped his fat cock against her sensitive pussy lips she knew her guilt should feel more profound, but it didn't, the only thing she cared about at the moment was getting that big thick cock back inside her. \n\n\"Put it in Nick...please! Make me your slut!\" \n\n\"That a girl, here's what you been waiting for...\" Nick bragged as he fed several inches of his fat cock inside her. \n\n\"Ugh...Jeez...so big...uhn...uhn...God...YES!\" Abbie grunted as his knarled cock sunk continually deeper with each steady thrust. It wasn't long before his heavy balls slapped up against her silky thighs. Abbie's pussy felt full and stretched from the thickness of his cock and the unfathomable depth of his penetration, but as he moved steadily and slowly and her pussy gushed with wetness, the tenderness subsided and the earlier feelings of immeasurable pleasure quickly returned, \"Yes Nick I love it...GODDDD...your big black cock is so deep! Fuck me with it!\" \n\n\"Yeah, feels great being my slut, don't it coach?\" Nick voiced as a satisfied smile formed on his face. After all this time, his hot married coach was finally on the end of his dick. He had obviously put in more time with her seduction than any he ever had or would likely ever again. But now as he fucked her in long deep powerful strokes as her continuous moans filled the room while handcuffed to her headboard and committing to being his slut, it was all worth it. Now he just wanted to savor it before giving his hot married coach a fucking she would never forget. \n\nHe reached forward and gripped her bounding tits with both of his big hands. She gasped her approval and encouraged him to keep doing it. Nick thought again to himself that this horny bitch's tits were as good as any he could remember. Taught and heavy yet wrapped in the softest purest skin imaginable, Abbie's breasts had exceeded even his wildest expectations. \n\n\"Yes Nick, that feels so good! Oh yeah...do that...my nipples are so sensitive keep pinching them like that...God I love it!\" \n\nHe squeezed her tits and played with her nipples while hammering into her relentlessly before dropping one of his hands to her pussy. Abbie practically came on the spot when he worked his fingers over her swollen clit. The combination of his hammering cock and his fingering delights soon had his hot coach moaning again and begging him not to stop. \n\n\"Ohhh...Ohhh...shit Nick...it feels so good being your slut! Do anything you want to me! Your big cock is so fucking good, I can't believe I waited so long for it...ohhh...ohhh...fuck me harder!\" \n\n\"Damn this is my formerly conservative coach sluttin' it up!\" Abbie's nasty responses spurred him on and before long he has hammering into her mercilessly, bringing out a litany of louder more urgent moans and grunts from her beautiful mouth. \n\nThen he spanked her hard on the ass bringing out a startled and different reaction. \n\n\"Yes stud, oh God spank me again...\" Abbie begged, never having felt anything delivered with so much authority. Justin had playfully slapped her butt on occasion, but if she hadn't been in a place of such building ecstasy, Nick's firm spankings might actually feel like punishment. \n\nThey actually were, but this was the kind of punishment intended to make pussies drip. \n\nAbbie's cunt leaked as he slapped her harder each time leaving a quilted tapestry of large red hand prints on her sexy ass. Each connection bringing an arousal filled guttural squeal from her slacked mouth. \n\n\"Sluts get spanked hard on their ass don't they?\" \n\n\"Ohhh...yes...\" \n\n\"Why are you getting spanked?\" \n\n\"Because I'm you slut Nick! Spank me again...\" \n\nAbbie's body was undergoing a complete sexual awakening. Nick's incredible prowess and authoritative demeanor bringing new waves of pleasure and submissive responses she didn't know existed within her. His actions waking every nerve ending from deep within her pussy to the ends of her toes, she could feel an orgasm building within her unlike anything she had ever experienced. She writhed in satisfied delight as his huge cock plunged into her over and over again. \n\nNick knew she wasn't going to last much longer. He couldn't have been more contented with any aspect of how this night had progressed. Not only had he finally gotten in Abbie's pants, but their subsequent mating had exceeded any dream of sexual decadence he could have imagined. Her body truly was a wonderland and she had given it to him fully and without constraint. And to his astonishment, he had exposed and succeeded in bringing out a submissive sluttish demeanor in her that fanned his own satisfaction and made his balls bounce with arousal. \n\n\"Fuck me Nick...pleeeeaaase don't stop! I wanna cum on your big black cock again!\" \n\n\"Whose pussy is going to cum on my big dick slut? Who owns that tight slippery pussy?\" \n\n\"Oh God Nick...you do...you own this pussy! I'm your slut and you can fuck me with your big dick anytime you want...uhn...uhn...uhn!\" \n\n\"You like being cuffed to the bed while I fuck you slut?\" \n\n\"Oh shit...yes...yes I love it. I told you I wanted you to own me...my little pussy is yours!\" Abbie breathed as an unending chorus of satisfied grunts and moans escaped her lips as her head flopped side to side against the bed sheets. Nick's big cock pistoned in and out of her sated pussy at a blurring pace as her juices flowed onto his scrotum before being redistributed against her thighs as his massive balls splashed against them on each powerful thrust. \n\nNow he had one final surprise for her as she grunted and gasped on a collision course with the most intense orgasm of her life. Nick pulled his slick fingers from her dripping clit while simultaneously releasing a long saliva stream that splattered on her asshole. Abbie moaned loudly at the new sensation but practically hyperventilated when he positioned his thumb and messaged it around. \n\n\"Nick I don't know what you are doing that feels so good, but please don't stop!\" \n\nThe aroused black man had no intention of stopping, instead he wiggled another of his long fingers against his coach's hot little asshole before sinking it inside. \n\n\"Oh my God Nick did you just put your finger in my ass...you can't...no...no...\" she practically screamed before he expertly wiggled it around. Moments later her opinion changed as intense new waves of pleasure racked Abbie's incredible body cascading her towards a mind blowing climax. \"Jesus Nick...I've...never...I've never felt anything like that. Please don't stop, keep it in my butt...OH GOD YES...I love the way you fuck me Nick...fuck me harder you fuckin stud! I wanna cum all over your big cock again!\" Nick heeded her words and slammed into her with reckless abandon while his thick finger simultaneously applied pleasure to undiscovered nerve endings in her asshole while somehow creating additional pressure to her g-spot. \n\nAbbie Dawson was gone. \n\nA squealing cry unlike anything Nick had heard before escaped the lips of his gorgeous married coach as her already tight pussy gripped his huge cock so snugly it made it nearly impossible to move before she found her voice one final time, \"YES NICK I'M CUMMMIIINNGG...OH GOD...KEEP FUCKING ME...DON'T STOP...SO GOOD...OHHH...OHHH! Her bound wrists pulled against their restraints as her body shook uncontrollably followed by a gush of ejaculate that was so strong it squirted around her stretched pussy lips as they clung to Nick's fat rutted cock. \n\nNick was sure Justin would be at the doorway within seconds. Abbie's pleasure squeal had been so loud he expected to hear dogs barking in the neighborhood. \n\nAs it turned out, the sleep juice did its job and Justin never woke to the ever present sounds of his wife's moans or climatic screams as the two lovers fucked long throughout the dissolute night. Nick Thomas was unaccustomed to ever being out-fucked by anyone, but his insatiable coach was so resolute in her desire for more that she convinced him to take some of Justin's Viagra at one point after they'd fucked so much that even Nick's typically strident powers of resumption were ineffective. \n\nSometime well into the wee hours they passed out. \n\nNick was awoken to muted light streaming into the mostly covered windows and his coach's gorgeous mouth lopped over his semi-rigid black cock. He was truly amazed at her sexual stamina. She had sucked his cock a lot throughout the previous night and as he lay here now watching her work, he observed a noticeable passion in her eyes that suggested she really enjoyed sucking his big cock, \"You don't give up do you?\" He questioned with a sleepy smile on his face as he reached down and ran his fingers through her messy hair. \n\nA startled look of embarrassment appeared on her face. Nick was impressed that she still looked hot even with her mussed hair, smeared makeup, and remnants of his jism on her chin, neck and chest. \"I didn't know you were awake.\" Her bloodshot eyes flashed as she smiled while still stroking his cock. \n\n\"I wasn't, but someone else was obviously restless. There's a lot worse ways I could be woken I suppose.\" He joked and they both laughed quietly, trying not to make too much noise. \n\nNick glanced at the clock radio, the time read 9:15 a.m. He did some quick math in his head and figured Justin would be passed out only another hour or maybe a bit more. \"So you couldn't sleep anymore, I guess I wasn't satisfying enough to tire you out!\" \n\nAbbie bit her lower lip sexily as she continued stroking her saliva on his glistening shaft before a sheepish smile formed, \"You were so satisfying I woke up wanting more...\" \n\nNicks ego swelled, \"You do remember your husband is only downstairs?\" \n\nA deep look of reflection formed on her beautiful face, \"I know he is, but I'm not going to hide it from him. I would prefer he didn't walk in on us, but I'm not really sure that would matter. He has made it clear it arouses him to fantasize about me having sex with an endowed man,\" she stopped to admire Nick's now nearly fully-erect cock as her small hand stroked it, \"obviously this qualifies!\" She smirked, bringing about a prideful smile on Nick's face. \n\nShe continued, \"We've had our fair share of teasing banter about your huge Speedo bulge over the past couple of years as well as other stuff like the Masked Masculinity show and this video,\" she nodded in the direction of the interracial porn that they had put on looped playback before muting at some point during the night, \"I can't help but feel that your endowment is probably the one he most wanted to have pleasuring me.\" \n\n\"Damn coach, that's some deep shit. What took us so long, I wanted to fuck you the first time I saw you at the interview. We could've fucked long before now!\" He joked. \n\n\"Just because he condoned it didn't mean I was necessarily ready. Having sex outside of my marriage was never something I ever considered before I met you - but the more I was around you and the more he pushed me, the more attracted I became. Eventually some of his fantasies eventually became mine - you don't know how hard it was for me to not go to your room after we got back from the dance club.\" \n\nNick nodded his understanding but saw no purpose admitting to any of his devious schemes to get in her pants. That was now all water under the bridge and his only concern was how much he would get to fuck her moving forward. \"I'm sure we'll have a lot more to discuss in the future, but right now why don't you put your mouth back to work doing what it was doing before I woke up and so rudely interrupted you...\" \n\nAn excited smile formed on her face before she took the engorged head back in her mouth. Nick pulled her body around so he could play with her pussy and tits while she pleasured him. \n\n\"Ummm...your fingers feel good Nick and uh...\" she paused momentarily as a naughty smile formed on her lips, \"...your cock tastes really good too!\" Abbie chimed before ticklishly licking along the full length of the sensitive underside of his now fully stiff black shaft. They played for several minutes before Abbie cooed, \"Nick, I want you to fuck me again!\" \n\n\"You know I'm happy to do that baby, but I'm out of rubbers!\" \n\n\"There are some in Justin's nightstand, we can use those!\" She volunteered, excited to have a solution. \n\nNick chuckled, \"No offense to Justin, but I'm not sure those are going to work, but grab em' and we can check em' out!\" \n\nAbbie climbed across the bed and pulled the box of standard Trojan sized condoms from Justin's night stand drawer. As she turned her head back towards the bed, she noticed Nick's pile of used ones on the floor in what was now a large sticky puddle. She committed to herself to remember to clean that up when they were done before Justin woke up. As she anxiously ripped open the fold on the condom box and removed one, Nick laughed again, \"Baby, as I said before, I don't think those are going to work!\" \n\n\"I know it will be a tight fit Nick, but they're made out of rubber, I'm sure they'll stretch.\" \n\nHe laughed again, \"Okay you put it on me.\" \n\nAbbie pulled off the foil wrapper and tossed it back onto the night stand before she pressed the rubber ring across the top of Nick's dark black head. The rubber sheathing was literally half the circumference of his cock. Abbie gasped frustratingly before still trying to unroll it over him. After failing miserably, Nick watched in amusement while playing with her engorged nipples as Abbie unraveled the entire length of the rolled sheathing and tried again. She looped one side over the fat ring that defined Nick's oversized helmet but as she tried to stretch the rest wide enough to accommodate his fat head, the undersized condom ripped in pieces. Nick laughed. She tried another and got the same result before she desperately looked into his eyes, \"Can you pull out before you cum in me?\" \n\n\"I can try,\" Nick could barely get the words out of his mouth before Abbie was on her hands and knees waving her hot ass in front of him. Nick took up positioning behind her. After rubbing his cock up and down her crack until it was slick with her dripping juices, he plunged it inside. They both moaned loudly as Abbie once again felt the incredible thickness of his massive cock and Nick felt the heavenly wetted tightness of her married pussy without protection. They fucked through two Abbie orgasm's before Nick began to feel that familiar sensation in his massive balls. He had just deposited a finger in her ass moments before and now his married coach was moaning loudly and begging him not to stop. \n\nNick grunted and announced he was about to nut when Abbie screamed, \"Don't stop Nick...you feel so good in me...fuck me and make me cum again!\" She could feel her orgasm building and was on the verge of one of her biggest climaxes of their fuck marathon. \n\n\"I'm gonna nut slut! You sure?\" \n\n\"Don't you dare pull out,\" Abbie screamed again as Nick's huge cock pistoned in and out of her relentlessly. And when she finally felt his hot seed painting the walls deep inside her cunt, it was too much for her sex fatigued pussy to take as she let out another eardrum shattering shrill before her entire body shook in what could best be described as an orgasmic seizure before all of her limbs basically collapsed and she crashed face first onto the bed. \n\nThe final couple of streams of Nick's prodigious eruption splattered across her back when his cock popped from her pussy during her unexpected collapse. \n\nHad this been his first time witnessing a woman experiencing this type of climactic reaction, he would have called 911, but this wasn't Nick Thomas' first fuck rodeo. He'd seen enough women experience this to know that he had basically just fucked his hot coach out cold. She would wake eventually none the worse for wear. \n\nNick rolled over onto his back as he contemplated this entire situation. He had just spent the night fucking the brains out of his gorgeous married dive coach while her husband was passed out in the basement. He always considered Justin more than a coach but also a friend. But their relationship wasn't enough to keep him from wanting to fuck the shit out of Abbie. Only her continued refusal of his subtle and not so subtle advances had kept his big black cock out of her pants until now. But after their long passionate night of sex and her acknowledgment that Justin had shown all the signs of a cuck in the making, the wheels now began to turn in his brain about where this relationship might go moving forward. ",
        "He would be joining the staff in her department at the college in the fall and would be hiring on as an assistant dive coach at the same time. Only he and Abbie would be coaching the team on the overnight away meets. \n\nNick stroked his cock he imagined the possibilities. A thick sheath of their combined juices and leaking cum still covered his sore dick. He glanced over at the clock and was surprised to see it was already 10:25 a.m. He hopped out of bed and located his Speedo on the floor next to him. He slipped it on to keep from dripping fuck juice all the way to the bathroom. He made one final turn and admired Abbie's thoroughly fucked body. Somehow it had repositioned into a fetal tuck, perhaps due to the chill of the morning air filtering through the windows. The bed sheets were all splayed on the floor at the base. Nick would cover her up before departing but that would have to wait, his need to piss like a literal race horse took precedent. After draining his huge cock and washing up, Nick exited the bathroom only to see Justin Dawson standing at the base of the bed with his jaw practically hanging to his chest in disbelief. \n\n***** \n\nAuthor's Note: \n\nWow! What a long strange trip it's been. Six chapters later we've finally come full circle back to where the first one started. I honestly have to admit I wasn't anticipating that long a path, but while most of chapters 2 &amp; 3 were written at the time of the release of chapter 1, I didn't expect all the twists and turns that have brought the story back to now. But I'm very proud of what has transpired and can only tell you I am even more looking forward to sharing future chapters with you. A good amount of chapter 7 is complete and I hope to release it in the early New Year. Based on what's already written, I believe chapter 7 has the potential to be the best one yet. Justin will learn much more about what being a BBC cuckold is all about...no more hints. \n\nAs for Chapter 6, I hope you enjoyed learning the true dirty details of Abbie's passionate BBC mating with Nick! The two of them have only just begun... \n\nPlease take the time to comment and vote, both are greatly appreciated. I am very motivated by your responses. I also read and respond to nearly every email I get, but remember you must include your e-address if you want me to reply. \n\nCheers, \n\nFifthEstate"
    ],
    "authorname": "FifthEstate",
    "tags": [
        "bbc",
        "big black cock",
        "coach",
        "creampie",
        "interracial",
        "ir",
        "speedo",
        "squirting",
        "white wife"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-speedo-doesnt-lie-ch-06"
}