{
    "title": "Life after the Lottery Ch. 53",
    "pages": [
        "Something interesting happens\n\nTuesday morning Dawn was up at 6:00 getting ready to go to the University. When she came out of the shower, I was lying there waiting for her.\n\n\"You didn't get to talk to the girls this weekend,\" I said.\n\n\"I know.\"\n\n\"Can you do it tonight after dinner?\"\n\n\"Yes. I will be home by 3:00. I'm not staying all day. I have to see the Dean and meet with some other department heads and schedule a time with my advisor.\"\n\nI watched Dawn slip on some new sexy white lingerie then go to her closet. She brought out a nice skirt, short, but modest, and a silk top and slipped it on.\n\n\"What are you doing today?\" Dawn asked.\n\n\"Sherri will be here at 9:00. I will spend the day with her and get things started. I have to make some appointments with our lawyers and talk to Linda's business guy.\"\n\n\"James, don't hit on Sherri.\"\n\n\"I won't.\"\n\n\"I know you saw her naked, and you want her, but not right now.\"\n\n\"All work.\"\n\n\"Including Brenda?\" Dawn asked.\n\n\"She has wanted me to do her for a few years. She will be here Thursday all day.\"\n\n\"Just hold off for a while with her too.\"\n\n\"Maybe.\"\n\nDawn put her heels on and headed out of the bedroom. I got up to shower. By the time I got dressed and went downstairs, everyone had gone. They had left me breakfast, so I sat and ate and drank my coffee. A little after 8:00, I called our attorney and told him what I needed to see him about. We made an appointment for Friday morning. About 8:45, I heard the gate buzzer. I went to the intercom.\n\n\"Is that you, Sherri?\" I said.\n\n\"Mr. Smith?\"\n\n\"Yes. I'll open the gate for you.\"\n\nI let her in the gate. A few minutes later she was knocking on the door.\n\n\"Come on in,\" I told her as I opened the door. She walked in looking around.\n\n\"Your house is fantastic,\" she said.\n\n\"I'll give you the tour.\"\n\nI walked her around downstairs and showed her everything, then took her upstairs. She walked down the hall looking in the bedrooms.\n\n\"James, do other people live with you?\"\n\n\"You know the two redheads that come to the store with us?\"\n\n\"Yes.\"\n\n\"They live here. They will both be going to school soon.\"\n\n\"Okay, but what does live here mean?\"\n\n\"They live here with Dawn and me, all the time, and will be living here for a long time.\"\n\n\"Are you telling me that you all...emm...live together, as in cohabitating?\"\n\n\"Yes. Samantha and Amy are our lovers for lack of a better word to explain it to you, for now, Sherri.\"\n\n\"And all this is okay with your wife?\"\n\n\"Sherri, we are very close to the two of them. We all have sex,\" I told her.\n\n\"I see.\"\n\n\"Does that offend you?\"\n\n\"No! I think if everyone is cool with it, great!\"\n\n\"I will explain it more another time, Sherri.\"\n\n\"I guess that is why your wife didn't have a fit when she found out you saw me naked.\"\n\n\"She doesn't have a problem with things like that, Sherri. She knows I like looking at beautiful women and appreciate them.\"\n\n\"Look, but not touch?\"\n\n\"Maybe,\" I told her.\n\n\"Some time you will have to tell me how all this got started.\"\n\n\"I will. I just didn't want any surprises for you,\" I told her.\n\n\"Where are they now?\"\n\n\"Amy is a nurse at the hospital; Sam is her sister, and she is working with her as an intern before she starts back to school. Sam is working on her BSN degree, and Amy will be starting graduate school in September. So that you know, Dawn will be working on her Ph.D. in nursing. I guess there are a few other things I need to tell you about.\"\n\n\"Does everyone sleep up here?\" Sherri asked.\n\n\"Yes. Amy and Sam have separate bedrooms. There is one left up here.\"\n\nSherri walked back down the hall and went in my bedroom; I followed her. She looked around and walked into the bathroom.\n\n\"Damn, this is huge,\" she said.\n\n\"We spend a lot of time in here.\"\n\n\"All of you?\"\n\n\"Yes, all of us. Sherri, my wife and I sleep with the girls and have sex with them. You need to know that.\"\n\n\"I'm cool with that. I just wanted to understand the relationship all of you have.\"\n\nSherri walked back out to the bedroom and looked in Dawn's open closet.\n\n\"This is bigger than my bedroom. You two have a huge closet.\"\n\n\"That's Dawn's; mine is over here.\"\n\nSherri walked out and looked. \"What is the other set of doors then?\"\n\n\"That is Dawn's too.\"\n\nSherri walked to the bed and sat on the edge.\n\n\"James, is this bigger than a regular king?\" She asked looking at the bed. I was looking at her legs.\n\n\"It's bigger. I had it made longer for me and wider.\"\n\n\"Why does the house have so many bedrooms? There are only two of you, or four.\"\n\n\"We have friends over to visit often.\"\n\nSherri got up from the bed.\n\n\"Let's go back downstairs,\" I said. I thought it was the best idea because I was about to push her back on the bed and ravish her.\n\nWe went back downstairs and stopped in the kitchen.\n\n\"My study is over there. We will be using it as our office for now.\"\n\n\"My roommate freaked out when she found out about you hiring me and the new car.\"\n\n\"I'll have to meet her sometime.\"\n\nWe went to my study and spent the morning talking and making notes. About noon, I told her we would go into town for lunch. We went out to the Escalade and left.\n\n\"When we get back, I will set up your code for the gate and the electronic locks on the door.\"\n\n\"Okay.\"\n\nShe had worn a pretty white top and a short skirt like she usually wore at the store. I liked looking at her long tanned legs as we drove.\n\n\"Sherri, until things change, or if we will be meeting with someone, you can dress more casually if you would be more comfortable,\" I told her.\n\n\"It doesn't make any difference to me. Do you want me to dress more casual?\"\n\n\"You look fine. Dress the way you are comfortable.\"\n\n\"I'm comfortable if you like what I wear,\" she said smiling at me. I was fine.\n\nI drove to a restaurant near Sam's store. We went in and had a good working lunch. When we finished, I drove to his store, and we went in and walked back to his office.\n\n\"Hey, the computers are ready,\" Sam said.\n\n\"Sam, this is Sherri. One of the computers is for her.\"\n\n\"Let's go get them.\"\n\nWe followed Sam, and he brought out two new portables.\n\n\"These are top of the line and have all the software on them,\" he said setting them down.\n\n\"I will need nice carrying cases for them, Sam.\"\n\n\"I have them,\" he walked off.\n\n\"Sherri, do you have a cell phone?\" I asked.\n\n\"Yes, but it has a limited plan on it.\"\n\n\"That will be our next stop.\"\n\nSam came back with two nice leather cases.\n\n\"I need you to do something for me, Sam. I need something set up for another email address for our business.\"\n\n\"I can set that up. You will need to get a domain name.\"\n\n\"Okay, that needs to be done ASAP. I will set her up on my server for now.\"\n\n\"Just let me know, I will set it up from here once you get the domain name.\"\n\nAfter about 30 minutes, Sam had everything ready and had Sherri setup on one of the portables. Sherri told me her printer was old, so I got her a new color laser printer. We left, and I stopped at the phone store and had two new smartphones added to my plan for her and Brenda. We were heading back to the house.\n\n\"Thanks for the computer and phone.\"\n\n\"Those are for work and your personal use. You will be using them plenty. Bring them with you when you come. That will be your business phone number.\"\n\n\"I have a lot of research and bookmarks on my computer at home where I have been watching fashion for years,\" Sherri told me.\n\n\"Do you know how to transfer it all over?\"\n\n\"Yes, I do.\"\n\n\"Great. When you travel, take your computer. Brenda, the other lady, will also be taking hers.\"\n\n\"James, most of the swimwear designers have people in the states. Most of the different designers from around the world all have brokers.\"\n\n\"Are they on the internet?\"\n\n\"Most of them are.\"\n\n\"Show me when we get back, but I also want you to find nice things from Europe, they will be the pricier items,\" I said.\n\n\"There are some lesser-known designers in France that make some very sexy suits. They are exclusives and can get expensive.\"\n\n\"What kind of prices?\"\n\n\"Most of the nice suits from the better designers are going to be $300 and up. The things from the exclusive designers can be $500 and up easy.\"\n\n\"That will be your area. We need to consider the wholesale cost and how much we can mark them up. Make the necessary contacts in France or where ever you need. When you go to France, you will be ready to deal with them.\"\n\n\"I can't wait to go to France; I don't get to use my French much.\"\n\n\"You speak French?\"\n\n\"Yes, my parents and grandparents are French-Canadian. I was born here.\"\n\n\"Linda speaks French. That is going to help a lot. Sometime this week, we will call the lingerie store owner we met in Paris and get things started with her.\"\n\n\"Do you have her email address?\" Sherri asked.\n\n\"Yes, she gave me a card. I told her I would be getting back with her.\"\n\n\"Get me the information; I will send her and introductory letter when we get back. We will have to call her early one morning when you are ready.\"\n\n\"Okay, email her and set it up. We can do it when Brenda is here.\"\n\n\"James, I didn't ask, but do employees get to use the pool, and the gym at the house?\" Sherri asked me with a big smile.\n\n\"Of course.\"\n\n\"I will bring the bikinis you bought me. I can work on my tan at lunch.\"\n\n\"Sherri, listen. I know I have flirted with you, and I have seen you naked, but it is all business now. I don't want to offend you or think I want anything from you as part of your job.\"\n\n\"James, don't worry about that. I didn't mind you looking at me while I was naked...or flirting with me. You're fine.\"\n\n\"I have to worry. I will probably have to have you sign something since you will be working in a bathing suit.\"\n\n\"Whatever you need, Dr. Smith. It won't be a problem.\"\n\n*****\n\nWhen we got back, Sherri sent an email to the lady in Paris; then she sat at my computer, and we looked over swimwear the rest of the afternoon. I bookmarked all the places we found so I could get back to them. Sherri showed me the designer swimwear that ranged in prices from $175 to $500 or more. We talked about what the markup had been at the store she worked in. She was convincing me we should carry some less expensive, but nicer swimwear. Then she showed me some very nice suits from a French designer. I was finding out she knew quite a bit about all of this.\n\nAbout 3:15, I heard Dawn come in; she came to the study.\n\n\"Hi, Mrs. Smith,\" Sherri said.\n\n\"Hello, Sherri, and call me Dawn, please. Have you two been working hard all day?\"\n\n\"We have. I think I found a diamond in the rough,\" I told Dawn.\n\nDawn came in and sat down on the sofa.\n\n\"We have made some good progress today, and guess what, Sherri speaks French.\"\n\n\"Oh, that will help,\" Dawn said. \"James, have you talked to Sherri about the things here?\"\n\n\"Some.\"\n\n\"I'm going to get out of these clothes,\" Dawn said as she stood.\n\n\"All of them?\" I asked teasing her. She turned and smiled at me then left the study.\n\n\"Would you tell me about the photos on the walls,\" Sherri said looking at a big black and white print of Dawn in my study.\n\n\"I took all of them.\"\n\n\"Does she mind other people seeing her like this?\"\n\n\"No.\"\n\n\"Do you mind?\"\n\n\"Sherri, my wife is a beautiful woman and she is okay with other people seeing her naked. You have seen her at the store.\"\n\n\"Yes, I have. She is very pretty.\"\n\nI talked to Sherri for about an hour about how we came by the money and other things. A little after 4:30, Dawn came back in.\n\n\"Sherri, are you staying for dinner?\" She asked.\n\n\"Oh, I don't guess so.\"\n\n\"Why don't you stay and get to know everyone,\" Dawn said.\n\n\"Oh...okay.\"\n\nThe two of us went back over our notes until a little after 5:00. Sherri went back to her new computer. We stopped for the day later and went to talk to Dawn. She was sitting on the sofa sipping a glass of wine.\n\n\"Sherri, would you like some wine?\" I asked.\n\n\"I'm not a big drinker.\"\n\n\"How about a soda?\" I asked.\n\n\"That would be fine.\"\n\n\"We will make a wine drinker out of you,\" Dawn said.\n\nI walked her to the kitchen and told her she had access to anything she wanted. We went back and sat with Dawn. She was in her sports bra and some short shorts.\n\n\"Sherri, are you ready for all of this?\" Dawn asked.\n\n\"Oh, yes! This is my dream job.\"\n\n\"Good. Don't let him work you too hard.\"\n\n\"I'm a hard worker. He can work me as hard as he wants too.\"\n\nI heard the girls coming in the front door.\n\n\"Who's sports car?\" Amy asked. \"Oh, hi Sherri.\"\n\n\"That is Sherri's signing bonus,\" I said.\n\n\"Where's my signing bonus?\" Sam asked as she walked to the den carrying the mail.\n\n\"You two come here,\" I said.\n\nThey walked over and sat down in their scrubs.\n\n\"Sherri is going to have dinner with us so she can get to know everyone,\" I told them.\n\n\"Great,\" Sam said. \"Dawn, you have another package in the mail. I think it is from Peru. Last week you got one from someplace in Africa. What are they?\"\n\n\"Just some things I ordered,\" Dawn told her.\n\n\"Let's go get out of these scrubs,\" Amy said. She and Sam got up.\n\n\"And...\" I said.\n\n\"We got it,\" Amy said walking up the stairs.\n\n\"The two of them are so pretty,\" Sherri said.\n\nWhile they were gone, we talked to Dawn about everything we had discovered and the plans we were making. Sam and Amy came back down a few minutes later. They were wearing shorts and T-shirts, no bras. They each got a glass of wine and sat with us, and we talked for a while until Dawn took Amy to help get dinner started.\n\n\"Sam, may I ask how old you are?\" Sherri asked.\n\n\"I'm 18, 19 soon.\"\n\n\"I love your hair. Yours too, Amy.\"\n\n\"Thank you. James does too.\" Sam said winking at me.\n\nThe three of them talked while I went to check on Dawn.\n\n\"How did your meetings go today?\" I asked.\n\n\"Fine. I talked to the Dean and the other department heads.\"\n\n\"What about some help?\"\n\n\"I will be getting a couple of grad students when school starts.\"\n\n\"Good.\"\n\nOnce dinner was ready, we all sat down to eat and talk. By the end of dinner, Sherri and the girls were all laughing about different things. About 7:45, Sherri left to go home.\n\n\"She is really cute,\" Sam said.\n\n\"And off limits,\" Dawn told both of them.\n\n\"Ahh!\" Came from Sam.\n\n\"Did you two fool around today?\" Amy asked.\n\n\"No. Can I see you in my study?\" I asked her.\n\nI got up, and she followed me. I closed the door, and we sat down.\n\n\"I need to talk to you about something, sweetie.\"\n\n\"What?\"\n\n\"Why won't you go ahead and turn in your notice at work, honey?\"\n\n\"I can keep working until school starts.\"\n\n\"I know you can, but I would like to see you take a break for several weeks. You and Sam.\"\n\n\"I don't need to.\"\n\n\"Why not?\"\n\n\"I just need to keep working.\"\n\n\"Why?\"\n\n\"James...\"\n\n\"Amy, tell me the truth. Why do you need to keep working? We are covering school and all of your expenses.\"\n\n\"I...just...\"\n\n\"Is it the money?\" I asked her.\n\n\"James!\"\n\n\"Okay, let's talk.\"\n\n\"I still have a car payment and other things.\"\n\n\"Okay. Honey, I know you have always been shy about letting us spend money on you and Sam. In a month, you will not be working; Sam will not be working, where do you think your money is going to come from?\"\n\nAmy was quiet for a minute.\n\n\"You know it is hard for me to accept money from you two. We talked about this.\"\n\n\"I know we did; that is why we are talking right now. When you start school, when you need money, you just ask, okay?\"\n\n\"I have some saved.\"\n\n\"Amy, that is your money. We don't expect you to spend it. Now...you and your sister are our family. Dawn and I don't mind giving either of you anything you need. You are going to have to get used to that. We will take care of your car payment and insurance and other expenses. Do you understand?\"\n\n\"I guess.\"\n\n\"I know you are very independent, but you have to accept this from us, please.\"\n\n\"Okay.\"\n\n\"Then I want you to turn in your notice tomorrow, please. I could use your help before you start school. Just consider yourself working for me for now.\"\n\n\"Okay, but if Sherri is going to be here all the time, she will have to get used to some things.\"\n\n\"Just ease into it slowly, please, because Brenda will be working here also in a few weeks.\"\n\n\"Brenda won't care,\" Amy said.\n\n\"I know.\" She laughed. \"Tomorrow then?\"\n\n\"Okay,\" Amy replied.\n\nShe got up, and I kissed her. We went back to the den, Sam and Dawn were laughing about something. Amy sat next to them.\n\n\"Sis, I will be turning in my notice tomorrow,\" Amy said.\n\n\"Thank god!!\" Sam exclaimed. Dawn and I laughed.\n\n\"I guess it will be two weeks; then I can burn up the rest of my vacation time.\"\n\n\"Good, I want you to have some time before school,\" Dawn said.\n\n\"I can help you at school now,\" Amy told her.\n\n\"Not all the time. You and your sister are going to be working for me too,\" I reminded Amy.\n\n\"Sam, have you decided when you want to go home and get your things?\" Dawn asked.\n\n\"Not yet.\"\n\n\"Make it soon, before school starts, please,\" I said.\n\n\"Okay. I'm going to work on your notes,\" Sam said and got up and went upstairs.\n\n\"Amy?\"\n\n\"Give her some time,\" Amy said. \"I will talk to her.\"\n\n\"James, what are your plans for the rest of the week?\" Dawn asked.\n\n\"I have to call Linda's business people and talk to them so I can get the corporation set up and the bank accounts. Sherri is going to set up a call to the lady that owns the lingerie shop in Paris tomorrow so we can talk to her. Thursday, Brenda will be here, and we will put our heads together and create a starting point. Then I have to meet with our lawyers Friday morning.\"\n\n\"Linda is coming Friday afternoon, don't forget.\"\n\n\"What are your plans?\" I asked Dawn.\n\n\"To get organized.\"\n\n\"Did you set up a time with your advisor?\" I asked.\n\n\"Thursday. I found out the Dean of the nursing school will be on my committee.\"\n\n\"That should be beneficial.\"\n\n\"What committee?\" Amy asked.\n\nDawn and I explained the process of earning a Ph.D. to her and all the advisors and dissertation committees you had to work with.\n\n\"That is too much work,\" Amy said,\n\n\"Oh, you will find out about thesis committees soon enough,\" Dawn told her.\n\nDawn and Amy started talking about grad school. I went upstairs to check on Sam. She was sitting on her bed hard at work on my notes.\n\n\"Making any progress?\" I asked.\n\n\"Yes. Look at this.\"\n\nI sat on the edge of the bed; she handed me a spreadsheet printout.\n\n\"I added up all the money that was promised. The total is around $1,000,000. \"Where do these people get that kind of money?\"\n\n\"Most of them have been saving money for years to buy their own limo. One can be $80,000 or more. And that doesn't include the money Sam and Olivia want to invest.\"\n\n\"How much is it going to cost to buy all the limos?\"\n\n\"Between 1 and 2 million dollars.\"\n\n\"Damn!\"\n\n\"Honey, starting a business like this is not cheap. We will be spending another 2 or 3 million on the store.\"\n\n\"Do you have that much money?\" Sam asked looking at me.\n\n\"That is something you have never asked us about, why?\"\n\n\"It is none of my business. I know you have millions,\" Sam said.\n\n\"Sam, in cash and investments, we have around 200 million dollars.\"\n\n\"Fuck!\"\n\nI laughed at Sam.\n\n\"That is why we don't want you or your sister to worry about asking us for money when you need it.\"\n\n\"Can I ask what it cost to build this house?\"\n\n\"You can ask anything. The house and the land were over 6 million.\"\n\n\"Fuck!\"\n\nI laughed again.\n\n\"I'm happy to see they are willing to invest that much. I won't have to put so much money in and dilute their shares.\" I told her.\n\n\"How much will each of them own?\"\n\n\"That is your next project. Take the number each of them has committed and figure out what percentage that will be of 2 and 3 million for each of them and make me a nice spreadsheet. Add $500,000 for Sam and Olivia.\"",
        "\"Okay. That will be about 25% for Sam and Olivia.\"\n\n\"Are you pretty good with numbers?\" I asked Sam.\n\n\"I do okay. I took a business class as an elective last year. And now you have to learn how to use spreadsheets and word processors and all that.\"\n\n\"Good. A few more business classes for electives wouldn't hurt you.\"\n\nI sat with Sam, and we worked on the notes and talked some more. She told me she would have everything ready to print out tomorrow.\n\n\"Sam, you need to talk to me.\"\n\n\"About what?\"\n\n\"Every time we bring up you going home to get your things, you shut down on us.\"\n\n\"It's just a big step. I need to make sure this I what I want to do,\" Sam said looking down at the computer.\n\nI sat and looked at Sam.\n\n\"What?\" She said.\n\n\"You are not telling me the truth, Samantha.\" She looked down at the computer and fiddled with it. \"Will you talk to me, please?\"\n\n\"James, it is something I have to work through with my sister, please?\"\n\n\"Okay. Will you promise me you will come to me if you need to talk?\"\n\n\"Yes...\"\n\n\"Okay. Good night, honey.\" I kissed Sam and left.\n\nI walked down the hall and stopped on the balcony. I looked down, and Dawn was under Amy while she sat on her mouth. I stood and watched for a while until Amy had a huge orgasm. Amy had her head thrown back with her eyes closed as she came. She opened her eyes and looked up at me.\n\n\"Oh, hi,\" Amy said with a smile.\n\n\"Having fun?\"\n\n\"Of course, I am. You want to join us?\"\n\n\"You two enjoy yourselves. I'll be in bed,\" I told her.\n\nI went on to bed and watched TV. I heard Dawn scream several times before I turned the TV off. Dawn came in a few minutes later.\n\n\"You should have come down and joined us.\"\n\n\"I don't need to do that when you two want to be together,\" I said.\n\nDawn laid on the bed and began to play with my cock. She got me good, and hard then began sucking on my cock. I looked down, and she was working her mouth up and down slowly. She slipped her mouth off and looked up at me.\n\n\"Are you still thinking about her?\" Dawn asked with a smile.\n\n\"Who?\"\n\n\"Sherri.\"\n\n\"Are you?\"\n\n\"She is cute.\"\n\n\"She is also very confident,\" I told Dawn.\n\nI got a big smile from my wife. I sat up and pulled her up and turned her to lie on her back. I ran my hand between her legs, and she was very wet. I spread her legs apart and got between them and picked up her hips and pulled her up onto my thighs and slid my cock into her.\n\n\"You want me on top?\" I asked.\n\n\"You better not yet.\"\n\nI held Dawn by her hips and pulled her up my thighs onto my cock hard. Her naked body looked so nice.\n\n\"Let me,\" Dawn said.\n\nShe wrapped her legs around my back, and I let go of her hips. She began working her pussy on my cock as she pulled with her legs. I always thought she was so sexy when she would lie back and do this while I had her on my thighs.\n\n\"I like watching when you do this,\" I told her. \"I get to look at your beautiful body and watch my cock slide in and out of you.\"\n\n\"I know you do,\" Dawn said with a big smile.\n\nI placed my hand on her mound and took my thumb and began rubbing her clit.\n\n\"Ohhhh, yes!\"\n\nDawn worked her pussy on my cock for a long time as I rubbed her clit slowly. As I rubbed, she got wetter and wetter and could pull my cock into her all the way. She started humping me hard then came in a gush.\n\n\"Ohhh, yes!!\" She exclaimed with a giggle.\n\nDawn was lying there giggling with my hard cock still inside her.\n\n\"What time is it?\" She asked.\n\n\"10:45.\"\n\n\"I want to try something,\" Dawn said.\n\n\"What?\"\n\n\"We haven't tried this, but I want to see if you can work your cock in my ass when I am like this. You will have to pull me onto it! That should be hot!\"\n\n\"You are plenty wet; you gushed everywhere.\"\n\n\"Try it!\"\n\nI slowly slid Dawn down my thighs until my cock popped out. I grabbed it and bent it down and placed the end where it needed to be. I grabbed Dawn's hips tight and pulled her. My cock began to slip into her ass.\n\n\"Oh, my, yesss!\"\n\nI held her tight and kept pulling as I watched her smile at me.\n\n\"Pull, honey!\" She said.\n\nShe was arching her back up as I pulled harder. I felt my cock sliding deeper into her ass as she moaned.\n\n\"Oh, this feels good!\" Dawn said.\n\nI pulled some more and soon had her pulled onto my cock as far as I could.\n\n\"Now, slide me on and off!\" Dawn was having fun.\n\nI worked and managed to slide her on and off my cock for a while slowly. She was smiling and even giggling. I pulled her all the way onto me and felt her legs squeeze me hard.\n\n\"Ahhhhh...let me do it!\" Dawn said.\n\nI gently held her hips as she relaxed her grip with her legs, she slowly slid down my thighs, sliding my cock partially out; then she gripped me tight with her legs pulling her ass back on my cock. IT was easy for her because my thighs were wet from her juices.\n\n\"Oh, fuck. This is so different!\" Dawn said laughing.\n\n\"I'm happy to see you loosen up.\"\n\nI watched her as she kept repeating this over and over. I was still getting used to watching my cock slide in and out of her ass. She got to a point she was doing it harder and faster.\n\n\"Ahhh, that feels so good!!\"\n\nI held her hips and helped her for a while longer until she started arching her back up hard.\n\n\"James!! I'm going to come!! Fill me up!!\"\n\nDawn arched up and down several more times then started coming. She squeezed me tight with her legs, and I began filling her hot ass full of cum.\n\n\"Ohhhh! Yes! Emmm, this is so different,\" Dawn said.\n\n\"I liked you doing the work,\" I told her.\n\nI reached up and rubbed her nipples.\n\n\"Dawn, if you liked that, I will have to show you two something,\" I heard Amy say from the door.\n\n\"You still up, honey,\" Dawn said. Amy walked to the bed.\n\n\"With all the noise, yes. That would be a good position for me to have you eat me again while you do that,\" Amy said smiling.\n\n\"Get up here,\" Dawn said.\n\nAmy smiled and got on the bed and straddled Dawn's mouth. Once Dawn was working on Amy's pussy, I reached forward and caressed Dawn's nipples. I felt her ass squeeze my cock. Amy looked at me while Dawn pleased her for a while.\n\n\"Hey!\" I heard Sam yell from the doorway. \n\n\"Come here,\" I told her. She came and got on the bed.\n\n\"Suck Dawn's nipples,\" I told her. \n\nSam leaned over and began to kiss and suck on Dawn's nipples. I could hear Dawn start to moan. I started rubbing her clit, and she moaned louder.\n\n\"Ohhh, yes...\" Amy moaned.\n\nThe four of us kept going for about 15 minutes.\n\n\"Ahhh, god, yes!\" Amy let out and started coming.\n\n\"Emmmmmm!!\" Came from Dawn and she started gushing on me as I rubbed her clit.\n\nAmy slowly lifted her pussy off of Dawn's mouth.\n\n\"Sam...stop...\" Dawn said.\n\nDawn was breathing hard underneath Amy. Sam leaned over and kissed Dawn for a minute. I slid my wilting cock from Dawn's ass and laid her on the bed. Sam sat up and was gently rubbing Dawn's breasts.\n\n\"Still sensitive?\" I asked.\n\n\"Oh, yes.\"\n\n\"It's late, you two need to go to bed,\" I told them.\n\n\"In a minute.\" Sam laid next to Dawn and held her.\n\nI left the two of them and went to the bathroom to cleanup. About 5 minutes later Dawn came in. She wrapped her arms around my neck and pulled me down and kissed me.\n\n\"What did Sam want?\" I asked.\n\n\"Just to hold me.\"\n\nDawn cleaned up, and we got in bed.\n\n\"Honey, Amy looked like she had a good time.\"\n\n\"She did. We were talking, and I pulled her clothes off. I wanted to make love to her,\" Dawn said while she held me.\n\n\"Are things different between you two now?\"\n\n\"Yes, they are. Amy seems to enjoy me doing her more and seems to get off more now.\"\n\n\"That's good.\"\n\nDawn hugged me tight for a minute.\n\n\"Are you okay?\" I asked.\n\n\"Yes. I'm just having to get used to not being with you all day.\"\n\n\"I'll make it up to you when you I get home.\"\n\n\"James, I will need that for a while.\"\n\n\"I guess I will really have to make it up to you then,\" I said and pulled Dawn to me.\n\n*****\n\nDawn woke me very early Wednesday morning so we could make love. She had her bra off and was sitting on my hips when I opened my eyes.\n\n\"What time is it?\" \n\n\"4:00,\" Dawn said.\n\n\"Did you sleep at all?\"\n\n\"Yes.\"\n\n\"You are up early.\"\n\n\"I just woke up and wanted you.\"\n\n\"I'm glad you are ready to wake up early and have sex again,\" I told her.\n\n\"I am too. I missed it. You know how much I like going to work after having great sex.\"\n\n\"I do honey. What would you like this morning?\"\n\n\"I need you to hold me,\" Dawn said.\n\nI knew she wanted to sit in my lap and take her time while I held her. I sat up and crossed my legs. After a minute, Dawn was sitting in my lap.\n\n\"Make love to me,\" Dawn said looking into my eyes.\n\n\"Sure, honey. Are you wet?\" I asked.\n\n\"I need to be wetter.\"\n\n\"I want to see how sensitive your nipples are; you can do the rest,\" I said.\n\nDawn smiled at me. I took my hands and used my fingers to caress her nipples. \n\n\"Damn,\" Dawn said.\n\nI kept caressing them and pinching them. Dawn moved her hand down to her pussy and began to tease herself. We worked together for a bit. Dawn started to moan.\n\n\"Honey, I'm ready. If you keep going, I'll come.\" Dawn said looking at me.\n\nDawn lifted her pussy and grabbed my cock and worked the end between her pussy lips and slowly started sliding down. I felt her hot pussy slide down my cock slowly.\n\n\"Oh, my, god!\" Dawn cried out.\n\n\"Honey, are you okay?\"\n\n\"Yes! I don't know why, but as soon as I slid down, I felt all of your energy entering me.\"\n\n\"I guess it has been a while.\"\n\nDawn closed her eyes and sat a minute.\n\n\"Oh, fuck. James, dial it down some.\"\n\n\"Honey...I am not doing anything?\" I told her.\n\n\"Emmmmm!\"\n\nDawn started slowly working her pussy as she moaned.\n\n\"Oh, god, yes!\" She exclaimed, then I felt it.\n\n\"Slow down, honey,\" I said. I could feel Dawn drawing a lot of sexual energy and love from me.\n\n\"Ahhhh!\" She worked her pussy harder as she pulled more from me. \"James! Slow down! You are going to make me come!\"\n\nI wrapped my arms around Dawn and held her tight. She was getting extremely aroused and seemed to think I was doing it to her. She worked her pussy faster on my cock as she moaned over and over. It had only been about 10 minutes since she slid down on my cock, but she was about to explode.\n\n\"Oh, god, James!! I'm coming!!\"\n\nShe started jerking hard on my cock and gushing on me over and over. I felt her hot juices flowing around my cock.\n\n\"Ahhhhhhhh!! Oh, my, god!!\"\n\nDawn began jamming her pussy onto my cock as hard as she could. A few minutes later she came again, gushing and squirting on me.\n\n\"Jaaamesss!!\"\n\nDawn was frantic as she kept jamming her pussy onto my cock. I leaned forward as best as I could and laid her on the bed and slid my cock out of her.\n\n\"Noooo!! Don't stop!!\" She screamed looking at me. She was reaching up for me.\n\n\"Dawn!!\" I screamed and leaned forward and grabbed her arms and pinned them to the bed.\n\n\"James, you started this! Don't stop now!!\"\n\n\"Dawn!! Dial it down!!\" I yelled at her.\n\nI had her by the arms and was holding her down as she huffed and puffed.\n\n\"Oh, honey. Don't tease me like this!\" She yelled.\n\nI laid on top of Dawn so that I would be touching her. I could feel her full of arousal. I took a deep breath and began drawing off her excitement.\n\n\"No!!\" She screamed.\n\nI kept concentrating hard. I didn't know what was happening, but I needed to get her under control.\n\n\"No...\"\n\nI felt her calming down, but now I was full of her energy. I pushed myself back up and sat, making sure I wasn't touching her.\n\n\"Dawn! What the hell is going on!?\" I asked.\n\n\"Why did you do that to me?\" Dawn asked pleading.\n\n\"I didn't do a damn thing! What is going on?\"\n\n\"You weren't trying to make me come fast?\"\n\n\"Honey, we don't do that. As soon as you slid down on my cock, you started sucking arousal out of me.\"\n\n\"I did?\"\n\n\"Yes!\"\n\nI looked at Dawn and could see her thinking, and probably feeling.\n\n\"Honey, I didn't intentionally draw that from you,\" Dawn said. \"But, I can feel the remnants of it.\"\n\nDawn sat up in bed. She moved to hug me.\n\n\"Wait! You shouldn't touch me right now,\" I told her.\n\n\"Why?\"\n\n\"Where do you think all of your arousal went?\"\n\n\"Oh. I'm okay now.\"\n\n\"Not, yet. I can deal with this. We need to figure out what happened to you,\" I said.\n\n\"I don't know,\" Dawn said looking confused.\n\n\"What were you thinking about when we started?\" I asked.\n\n\"I was thinking about how sensitive my nipples are now. It felt so good, and I was so happy.\"\n\n\"I need to tell you something,\" I said.\n\n\"What?\"\n\n\"I'm sorting through what happened and what I felt. It's strange because I am used to you drawing whatever you need from me. But, you really went overboard. I have never felt you like that.\"\n\n\"How was if different?\" Dawn asked.\n\nI sat and thought and felt for a minute.\n\n\"Oh.\"\n\n\"What, James?\"\n\n\"Honey...how have you been feeling about us lately?\"\n\n\"James, what do you mean?\"\n\n\"I know you don't get jealous, but have you been thinking about anything like that?\"\n\n\"You know better than that.\"\n\n\"Think. Anything, honey?\"\n\nShe sat for a minute.\n\n\"I have been happy that the girls now feel what they need. And you have been busy; I'm worried about that.\"\n\n\"Is that it?\"\n\nDawn was quiet a minute.\n\n\"Honey?\"\n\nDawn looked up at me, and I could see tears forming in her eyes.\n\n\"Hey...\" I said and reached over and took her hand. \"What's going on?\"\n\n\"I don't know!\"\n\nDawn started crying.\n\n\"I'll be right back,\" I said and got up and closed the bedroom door and went back to Dawn. I sat next to her on the bed and wrapped my arms around her. \"Talk to me.\"\n\n\"It's just...you have been so busy. I don't want things to go back like they were when we worked all the time!\"\n\n\"Hey. That will never happen. Have you felt like I have been neglecting you?\"\n\n\"You have been busy with Linda and Sam and Amy, and now Brenda and Sherri. They get to spend more time with you than I do!\"\n\n\"I'm sorry, honey. I didn't mean to neglect you.\"\n\n\"You didn't...I just miss being around you all day.\"\n\n\"Honey, are you having problems going back to work?\"\n\n\"I don't know...\"\n\n\"We need to figure this out. I don't want you feeling like this,\" I said.\n\n\"I just need you!\" Dawn said and started crying. I held her tighter.\n\n\"I know you did.\"\n\nI held Dawn for a few minutes until she started to calm down.\n\n\"What did you mean you know I did?\" Dawn asked.\n\n\"Something came to me a minute ago. I was sorting through what I felt from you. There was something different than when you just want love and arousal from me.\"\n\n\"What was it?\"\n\n\"You are so strong when we want each other. You always take what you need in the amount you want. Your energy is so pure and clean; I almost missed it.\"\n\n\"What?\"\n\n\"I wouldn't know the difference if it wasn't for what happened with Amy. The energy you were using to pull from me was raw, not pure like it usually is. That is what I felt from Amy. Honey, why did you need me on that level?\"\n\nDawn sat thinking.\n\n\"I really thought you were pushing all of that into me. I don't understand,\" Dawn said looking confused.\n\n\"Did you feel like you needed all of that from me?\"\n\n\"I...\"\n\nDawn stopped a minute.\n\n\"James, when I woke up, I was thinking about how much I needed you?\"\n\n\"What do you mean?\"\n\n\"I woke up with the feeling I just needed your love and passion,\" Dawn said looking at me closely.\n\n\"Did you feel like that because things have been slow from the surgery and from me being busy?\"\n\n\"I don't know. Now I just know I needed you? I don't know what is going on.\"\n\n\"But you don't remember drawing from me like that?\" I asked.\n\n\"No. But, it felt great.\"\n\n\"It appeared to. I'm sorry you are upset over all of this. We need to figure a few things out,\" I said.\n\n\"I wasn't that upset...I just started feeling all of this like I couldn't control it. I think I know what happened.\" Dawn said.\n\n\"What?\"\n\n\"I'm not sure about what I did, but when you pulled off all of my arousal, you pulled too much, or something, I got upset. I'm feeling better now.\"\n\n\"Is it because I am holding you?\"\n\nDawn looked at me and smiled.\n\n\"Yes.\"\n\n\"Dawn!!\" We heard screamed through the door as Sam beat on the door.\n\n\"Just a minute Sam!\" I said.\n\n\"Are you okay!!\" Sam screamed.\n\n\"You better see what is going on,\" Dawn said.\n\nI got up and went to the door and opened it.\n\n\"Why's the door closed!? Dawn!?\"\n\nSam pushed past me and went to the bed.\n\n\"What's wrong!\" She said sitting next to Dawn.\n\n\"Nothing, honey.\"\n\n\"Yes, there is!\"\n\nI went and sat next to Sam.\n\n\"Sam, why do you think there is something wrong?\" Dawn asked.\n\n\"I woke up in a panic. I knew there was something wrong with you. What is it?\" Dawn looked over Sam at me. \"You two stop it! What is wrong?\" Sam said again upset.\n\n\"Honey, calm down. Everything is okay,\" Dawn told her.\n\nSam wrapped her arms around Dawn and held her for a minute as Dawn looked at me. Sam looked up at Dawn like she was confused.\n\n\"Why would you feel like that?\" Sam said looking into Dawn's eyes.\n\n\"Sam, we can talk later,\" Dawn said.\n\n\"Why would you feel like James doesn't need you?\" Sam asked.\n\n\"Sam! Not now!\" Dawn exclaimed.\n\nSam pulled Dawn to her tight.\n\n\"We all need you,\" Sam said.\n\nDawn wouldn't look up at me.\n\n\"Sam, she is okay. Can you let us talk?\" I asked.\n\nSam looked at Dawn then kissed her. She released her grip on her and got up and walked to the door.\n\n\"Do you want me to close the door?\" Sam asked.\n\n\"Please,\" I said.\n\nSam left and closed the door. I sat and looked at Dawn.\n\n\"Dawn...I don't know what is going on. What is happening with you and Sam? What was she talking about? Why would she say that?\"\n\n\"I'm sorry,\" Dawn said and wrapped her arms around me.\n\n\"Do you really feel that way?\"\n\n\"No! I just woke up with a strange feeling.\"\n\n\"Like I didn't need you?\"\n\n\"I told you I don't know what it was. It was something strange. I had a weird dream that upset me.\"\n\n\"You don't still feel that way do you?\" I asked.\n\n\"No! Whatever it was went away.\"\n\n\"Then why did Sam say that?\"\n\n\"I don't know. Maybe she felt the residual feelings,\" Dawn said.\n\n\"Dawn, get on the bed,\" I told her.\n\nShe looked at me and got in the middle of the bed and laid back. I lay next to her and placed my hand on her heart. Dawn knew what I wanted and lay there quietly. I closed my eyes and concentrated for a while. Dawn was letting me know she loved me. I kept concentrating. All I could feel was her love and some concern. I stopped and kissed her.\n\n\"Thank you,\" I told her.\n\n\"Did you feel it?\"\n\n\"I felt your love, but you are concerned about something.\"\n\n\"Nothing else?\"\n\n\"No. What are you concerned about?\"\n\n\"Sam.\"\n\n\"What is going on with you two?\" I asked.\n\n\"I don't really know.\"\n\n\"Something has changed.\"\n\n\"I know,\" Dawn said.\n\n\"What?\"\n\n\"Honey, since you have connected with her and Amy now, something has changed within me.\"\n\n\"Honey, I told you I still need you and love you. I always will.\" I said. \"Is there anything else?\"\n\n\"Not that, something else.\"\n\n\"You are losing me, Dawn.\"\n\n\"You know how I can feel your feelings most of the time.\"\n\n\"Yes. I'm not like you, but I can feel yours too.\"\n\n\"I can feel Sam and Amy now.\"\n\n\"You have been doing that.\"\n\n\"Not like now, James.\"\n\n\"It's changed?\" I asked.\n\n\"Yes. Since Amy found it in us and the three of us felt each other so strong,\" Dawn said.\n\n\"What happened?\"\n\n\"Something happened to me that day. I'm not sure what, but I feel the two of them now.\"\n\n\"Stronger?\"\n\n\"Yes! As I told you yesterday, I knew they were making love when I went to their room. Things like that.\"\n\n\"That's good...isn't it?\" I asked.\n\n\"Maybe, but now Sam seems to have some kind of attachment to me. I think she feels me like I feel her but she doesn't understand.\"",
        "\"What about Amy?\"\n\n\"Not like Sam. I've noticed she seems to feel things from me now too.\"\n\n\"I am going to have to let you feel this out, honey. This is beyond what I can do,\" I said.\n\n\"I'll let you know what is going on when I figure it out.\"\n\n\"Anything else?\" I asked.\n\n\"No. You know I would tell you.\"\n\n*****\n\nBy 6:00 we were out of the shower getting ready for our day, leaving the rest behind. We ate breakfast with Sam and Amy. Sam was quiet and didn't say anything. The three of them were getting ready to leave about 7:00. I saw Sam hug and hold Dawn for a minute. They kissed, and they all left.\n\nI was in the study working on some numbers when I heard Sherri come through the gate. She knocked on the door even though I had given her a code to the new locks. I went and let her in.\n\n\"Good morning, Sherri.\"\n\n\"Good morning, James.\"\n\nSherri walked in with her computer and a portfolio. She was still wearing a short skirt and nice loose top. We went to the study.\n\n\"I brought all the information I have for now. I am going to work on getting it all organized and on the computer,\" Sherri told me.\n\n\"Good. I have a call at 10:00 to the people setting up the corporation, it will take an hour or more. I have decided to name the company Allure Holdings. I got the web name last night.\"\n\n\"That sounds interesting and sexy.\"\n\n\"Dawn and I are going to start a photography business soon, and she wanted to call it Allure Photography, so I thought the name would fit.\"\n\n\"What kind of photography?\" Sherri asked.\n\n\"Like the pictures you see around the house. It will be very expensive and high-end. It is just going to be a hobby.\"\n\n\"Are you that good of a photographer?\"\n\n\"I'm pretty good, Sherri.\"\n\n\"Hmmm,\" came from Sherri as she looked around the study at the pictures on the walls. \"Your photos do look very nice. Have you done fashion photography before?\"\n\n\"Not high-fashion stuff. Just the nudes and lingerie photos mostly. I have a studio and a darkroom downstairs, and I process and print all of the photos. Dawn is remodeling a room up here that was initially designed for a larger studio. We will be using it for the new stuff.\"\n\n\"I like the photos; they are hot and sexy.\"\n\n\"Remind me, and I will show you some more later.\"\n\n\"Okay.\"\n\nSherri set up her computer on a table in the study while I worked. At 10:00, I called Linda's guy, and we talked for over 2 hours. He told me he would have everything registered and set up by Friday at a commercial bank in town. I explained the division of the company to him and other things. He was pretty smart and told me he set up most of Linda's new corporations now when she needed them. He even told me that her new jet and helicopter would be a separate company. Before I got off the phone, he told me I needed to come to his office Friday to pick all the paperwork up to have it signed by everyone. I told him I would come by after I had met with my lawyers.\n\n\"That all sounded intense,\" Sherri said after I hung up.\n\n\"That type of stuff is, but he knows what he is doing, and it will speed things up. You want to go to lunch?\"\n\n\"Sure.\"\n\n\"Let's go.\"\n\nI led Sherri to the garage, and we got in my Vette and pulled out of the garage.\n\n\"What would you like?\" I asked Sherri.\n\n\"What is out this way?\"\n\n\"Steak, Chinese, Pizza, Mexican, drive-throughs.\"\n\n\"You like Mexican?\" She asked.\n\n\"Fine with me.\"\n\nI drove to the Mexican restaurant on the other side of the interstate. I walked around to her door and opened it. I watched as she turned in the seat and spread her legs to get out of the car. Her short skirt exposed her nice looking thighs and her panties. We went in to eat.\n\n\"After lunch, I need to take you to my insurance agent to transfer your car insurance,\" I told her as we nibbled on the chips and salsa.\n\n\"James, thank you for all of this. I am going to make sure that we are successful. I have some marketing ideas I want to talk to you about.\"\n\n\"Good. Right now, we are planning on a fashion show for the Grand Opening, maybe two nights.\"\n\n\"That would be great. What about the designer clothes the first night and the lingerie and swimwear the second night?\"\n\n\"Linda is working on that. When you meet her, ask her about it. I'm sure it will be an invite only.\"\n\n\"Where will the fashion show be at?\" Sherri asked me.\n\n\"Linda was talking about it being in the store. Maybe she is planning on having it on the top floor. Would you like to go see the store after we stop at the insurance agent?\"\n\n\"Yes! I can get some ideas.\"\n\n\"Okay.\"\n\nWe talked more while we ate. After lunch I drove her to transfer the insurance on her car, then we drove out to the mall. Linda had given me a key to the front door, so I took Sherri inside.\n\n\"This is a big place. Does Ms. Williams own it?\"\n\n\"She owns the entire strip center here and 25% of the mall.\"\n\n\"Wow. How much money does she have?\"\n\n\"A lot. Each floor is just a shell like the first floor. As soon as we finalize the interior design, they will start work.\"\n\n\"What kind of stores will be next door?\"\n\n\"Linda is thinking exclusive stores to compliment this one. Designer shoes, handbags, jewelry store, things like that. What do you think?\"\n\n\"If they are upscale, that will be great. This will become a high-fashion center,\" Sherri said.\n\n\"That is what we are hoping.\"\n\n\"This will be great. A one-stop place for a lady to buy all of her high-fashion items. That is perfect. There is no place like that in this area at all.\" Sherri said excitedly.\n\n\"I'm glad you like the idea. We are hoping it will be a big draw.\"\n\n\"James, it will.\"\n\nWe toured the building while Sherri threw out some ideas. She was ready to see what Linda was planning for a design theme. I told her we would know more after the trip to New York.\n\n\"This is going to be great!\" She exclaimed.\n\nI took a very excited young lady back to the house. When we got there, she wanted to talk about what kind of swimwear was being sold in our area and what she thought we should sell. She pulled up some sites on the internet and showed me some swimwear.\n\n\"As you can see, nice swimwear starts around $200. Bikinis start there and go up. I think that should be our starting price point, and we can go from there. Let me show you the expensive stuff.\"\n\nShe pulled up some designers from Europe.\n\n\"These are exclusive designers. They focus more on beautiful mono-bikinis and swimwear. The retail prices start around $500 and go up. This is what I wanted Margaret to buy for the store, but she didn't have the money. I'm not sure what kind of wholesale prices we can get, but we can mark them up. Carrying these types of suits in different sizes will not be cheap.\"\n\n\"What kind of value did the other store have in inventory?\" I asked.\n\n\"Counting everything, about $50,000.\"\n\n\"Where did the designer suits come from?\"\n\n\"New York and California. She only had about 25% margin on them because she couldn't buy in enough quantity.\"\n\n\"We will have to do better than that.\"\n\n\"James, I think in the quantity we will need, we can get 50% or better.\"\n\n\"That's better.\"\n\nWe spent the rest of the afternoon talking about prices and the number of items we would have to stock. Sherri did know her stuff. When she finished, we had a rough estimate of the number of units we would need. She told me she would use that to come up with a cost estimate. About 4:00 we took a break.\n\n\"James, the exclusive designer world of swimwear is competitive. All of the small designers will work with you to get in your store if they think you will get them exposure.\"\n\n\"How do we leverage that?\"\n\n\"If we buy about 60% of the stock in the well-known designers we can get from New York and California, that will give us some affordable items that will bring people in. That will expose them to the high-end items. For the rest of the stock, we should pick 4 or 5 smaller designers with their exclusive products. If they move like I think they will, we will have a good mix. Once word gets out around the country we are moving a lot of high-end swimwear; the designers will come to you. In a year, we could be carrying many of them and at a lower cost.\"\n\n\"Sherri, how do you know all of this?\"\n\n\"I only worked at the boutique to explore the market. I have wanted to open my own store since I graduated.\"\n\n\"Well, you are going to treat this like your own store. If it succeeds, you will be well rewarded.\"\n\nSherri gave me a big smile.\n\n\"Why don't we stop for the day,\" I said.\n\n\"Will it be okay if I start contacting suppliers and designers?\"\n\n\"Sure, just tell them you are with Allure Holdings and what you plan on doing.\"\n\n\"Great!\"\n\n\"We had another great day,\" I said.\n\n\"Can I go swimming?\"\n\n\"Of course. Use the bedroom across the hall to change. Plan on staying for dinner.\"\n\n\"Okay.\"\n\nSherri got up and went out to her car. I pulled up my email. I saw one from Linda. I opened it up.\n\n\"Allure Holdings? I like that! We could call it Bella Dame and Allure.\n\nWe are in San Francisco. I have to deal with some issues here tomorrow, then fly to LA to work on some shipping problems. We will be home late Thursday. \n\nI got some good news today. Joe at Gulfstream called me and told me the jet I was going to get around January would be coming in off lease sooner and they will have it ready in early November. They are going to overhaul it and paint it. We can use it to travel for the store. \n\nJames, I can't wait to see you this weekend. I need you.\n\nLove, Linda.\"\n\nI sent her back a long email telling her about Sherri and how fast she was moving and some other things.\n\n\"Are you going to join me?\" I heard Sherri ask.\n\nI looked up, and Sherri was standing in the doorway naked holding her bikini. I had to pause and look over her body. Her young firm tits and bare mound looked so enticing.\n\n\"Sherri, what are you doing?\" She walked toward my desk.\n\n\"I just wanted to see if you wanted to join me,\" she said standing in front of my desk.\n\n\"You need to put some clothes on.\"\n\n\"James, I told you I didn't mind you seeing me naked. I was about to put my suit on, but I just wanted to ask.\"\n\nI looked her over again. I could see her lovely pussy lips as she stood there in front of me.\n\n\"Not today. If you want to swim, you need to put your suit on.\"\n\nSherri sat down on the sofa slipped her suit on as I watched.\n\n\"James, do you not want to see me naked?\"\n\n\"Sherri, you are beautiful. You have a beautiful body. But, now you work for me. You can't do this.\"\n\n\"I told you it wasn't a problem.\"\n\n\"I know you did, but, we can't do this.\"\n\n\"We'll see,\" Sherri said as she stood and headed toward the door.\n\n\"Sherri?\"\n\n\"Yes?\"\n\n\"You need to work on your tan.\" She smiled at me and left the study.\n\n*****\n\n\"Where is Sherri?\" Dawn ask when she came into the study.\n\n\"In the pool.\"\n\n\"And you are not out there looking?\"\n\n\"I have work to do.\"\n\n\"The pool sounds like a good idea; I have had a busy day. Is she wearing anything?\"\n\n\"She is now.\"\n\n\"What do you mean now?\"\n\n\"She came in here naked before she put her bikini on.\"\n\n\"And...\"\n\n\"I looked, then told her to put on that last bikini I bought for her.\"\n\n\"Okay. Did you talk to her?\"\n\n\"Yes.\"\n\nDawn left the study. I was answering an email from Sam about the limo company when Dawn came back in. I looked up, and she had on the same bikini Sherri did. I looked for a moment.\n\n\"You look nice. Can you wear that for a while?\" I asked.\n\n\"I little while.\"\n\n\"Come here.\"\n\nDawn walked over and sat in my lap.\n\n\"You look very sexy.\"\n\n\"Thank you.\"\n\nI reached up and pulled the triangle trying to cover her nipple to the side and kissed her nipple. Dawn didn't have any un-tanned places.\n\n\"Still sensitive?\"\n\n\"Yes!\"\n\nI pulled her nipple into my mouth and sucked on it for a minute.\n\n\"Wow!\"\n\n\"Is everything okay?\" I asked.\n\n\"Yes. I'm sorry about this morning.\"\n\n\"Any other thoughts about it?\"\n\n\"Not really.\"\n\n\"Go swim with Sherri.\"\n\nDawn slid her hand down and grabbed my cock through my pants.\n\n\"Is this for me?\" Dawn asked as she felt my hard cock.\n\n\"Of course it is.\"\n\n\"Liar. Did she come in here so you could look?\"\n\n\"Yes, she did.\"\n\n\"She is cute. Did you like looking her over?\"\n\n\"Honey, you know I like to look, and she is beautiful.\"\n\n\"I know. I don't care. Are you going to be able to work close to her, honey?\"\n\n\"Dawn, I spend most of my days with three very beautiful women. One more is not going to be an issue.\"\n\nDawn smiled at me and squeezed my hard cock some more.\n\n\"Yes, you do. But, we are not your employees,\" Dawn said with a smile and kissed me.\n\nDawn got up and left the study. I finished my email to Sam and told him to think about bringing Olivia over one night for dinner because I had a craving for a Mexican taco. I got up and went to the kitchen and got a beer then went out to the pool. Dawn and Sherri were leaning against the wall talking. I stood and looked for a while as I sipped my beer.\n\n\"Do they have anything on?\" I heard Amy ask from behind me.\n\n\"Yes, they do. Not much, but something.\"\n\nI turned to look at Amy. She and Sam were looking. Amy grabbed me and kissed me then Sam kissed me.\n\n\"Did you do what I asked?\"\n\n\"Yes!\" Sam yelled.\n\n\"Oh, yes,\" Amy said. \"Come with us; I need to tell you the good news.\"\n\nI followed them into the house and up to Amy's room. Amy started taking off her scrubs.\n\n\"So, what is the news?\"\n\n\"You won't believe what happened. I told my supervisor I was turning in my two-week notice, and she smiled and told me she was planning on that happening and already had another nurse ready to transfer in. My last day is Friday!\"\n\n\"Great!\"\n\n\"I know! Oh, is that okay with you?\"\n\n\"Amy, we talked about this. I think it is great.\"\n\nAmy had all her clothes off and was standing in front of me naked. Sam had gone to her room. Amy wrapped her arms around my neck.\n\n\"What's going on?\" She asked.\n\n\"Honey, that is something Dawn and you and your sister are going to have to figure out.\"\n\n\"Okay. As long as everything is okay. Sis was upset this morning. Are you getting to know Sherri better?\" Amy asked.\n\n\"She is off limits,\" I said.\n\n\"For now. She doesn't work for me,\" Amy said.\n\n\"Yes, she does young lady! Remember you own part of this, she is your employee also.\"\n\n\"Bummer.\"\n\nAmy walked to her dresser and dug through the drawer. I saw her retrieve the tiny metallic bikini she had worn in Hawaii.\n\n\"Is this enough?\" She asked.\n\n\"I guess so. This is your house; you can go naked if you want.\"\n\n\"Don't tempt me, James.\"\n\n\"Let's go!\" Sam yelled from the door.\n\nI turned and looked; she had on a very skimpy white bikini she had bought recently.\n\n\"Sam, I just reminded your sister that Sherri is also your employee. Remember that.\"\n\n\"Rats!\"\n\nI walked to Sam and wrapped my arms around her and rubbed her ass.\n\n\"Everything okay?\" I asked.\n\n\"Everything is fine!\"\n\nAmy slipped her bikini on, and we walked downstairs.\n\n\"You two go on outside, I will get some towels,\" I told them.\n\nI went to the closet and grabbed four large towels and went outside. Amy and Sam were in the pool with Dawn and Sherri. I walked over to the edge where they were all talking.\n\n\"Join us,\" Dawn said.\n\n\"Not tonight. What do you four want to do about dinner?\"\n\n\"It's nice out here, we don't want to cook,\" Dawn said.\n\n\"You want to go out to eat?\"\n\n\"We want to swim and talk,\" Dawn said.\n\n\"Pizza?\"\n\n\"That's okay.\"\n\n\"Is that okay with you three?\"\n\n\"Sure.\"\n\n\"Sherri, what do you like on your pizza?\" I asked.\n\n\"I'll eat anything.\"\n\n\"It will be about an hour,\" I said.\n\n\"Go order and then join us,\" Dawn told me.\n\nI went in and ordered the pizzas then went upstairs and put on some shorts. I went back outside to the pool and walked down the steps into the water.\n\n\"The last time Bob delivered pizza, he asked about you,\" I told Dawn. She smiled at me.\n\n\"They were telling me about going to Hawaii in December to do some modeling,\" Sherri said. \"I'm familiar with the company that makes the swimsuits they will be modeling. I have one of their catalogs inside.\"\n\n\"Where do they fall on the price point scale?\" I asked.\n\n\"In that $200 and up area, we were talking about. They are one of the companies I was thinking about for the less expensive suits.\"\n\n\"You want to go to Hawaii with them?\" I asked.\n\n\"I would, but it sounds like it is the last two weeks of December. I am not sure what my schedule will be,\" Sherri said.\n\n\"Well, the sooner you go to Europe the better off we will be, don't you think?\"\n\n\"The new designs come out in February; that will be too late for us. If I go before December, we can probably get some great deals on this year's designs. That will give us plenty for the opening. We can pick up the new designs in the summer. If I can go to Hawaii, I can see their new designs before February, and we can order some of them.\"\n\n\"You really know this stuff don't you?\" Dawn asked.\n\n\"Yes, she does,\" I said. \"That sounds like a good idea. You start working on your schedule. I will leave that up to you. Maybe you can go to Europe in November.\"\n\n\"Do you think you can go to Hawaii with us?!\" Sam asked.\n\n\"I will try and work it out,\" Sherri said. \"I will call the manufacturers and talk to them about it and see if I can set up some time with their people when they are in Hawaii.\"\n\n\"Maybe they will let you model some of their suits,\" Dawn said. \"You have the body for it.\" Sherri smiled.\n\n\"I hope you get to go,\" Amy said. \"I'm sure we will have fun.\"\n\n\"I will try. Anything I order we won't get until early March probably.\"\n\n\"That would be a good start for summer,\" I said.\n\n\"With the store opening in February, I may not get to go to the shows for next year's designs, but I hope I can develop a good relationship with a few designers before then,\" Sherri told us.\n\n\"Maybe you can talk them into letting you see the new designs early,\" I said. \"If you need to go overseas to do it, that is okay.\"\n\n\"Maybe. I bet I can get the exclusive designers in France to help us out.\"\n\nI saw Dawn rub her breasts.\n\n\"Do you need to get out?\" I asked her.\n\n\"Probably. I have been up a lot today,\" Dawn said. \"You stay, I will go dry off and wait for the pizza.\"\n\nDawn walked out of the pool and went inside.\n\n\"James, the pool, and everything is beautiful,\" Sherri said.\n\n\"Dawn designed all of it and a lot of the house.\"\n\n\"The house is beautiful too, but I have a question? What is that thing over there? They are all over the house?\" Sherri asked looking at the Tantra chair.\n\nAmy looked at me and smiled, waiting for me to answer her question.\n\n\"That is a Tantra Chair,\" I told her.\n\n\"A what?\"\n\n\"Have you heard of Tantric Sex?\" I asked.\n\n\"Sure.\"\n\n\"It is for that.\"\n\n\"Oh. Oh!!\" Came from Sherri. \"Now it makes sense!\"\n\nI spent a little while with the girls in the pool.\n\n\"You three don't forget the pizza will be here soon,\" I told them and headed to the stairs.\n\nI ran into Dawn coming out of the downstairs bathroom. She only had on her tiny bikini bottom and was drying her hair with a towel. I took her in my arms and held her and kissed her.\n\n\"I like your new tits,\" I told her.\n\n\"I hope you do. Help me put the sports bra back on.\"\n\nWe went upstairs, and I helped her put the sports bra back on. She walked to the bathroom and picked up a comb and started combing her hair while I dried off.\n\n\"What did you say to her?\" Dawn asked.\n\n\"I told her that since she worked for me know she couldn't do that.\"\n\n\"What did she say?\"\n\n\"She said she didn't have a problem with it.\"\n\nI got a pair of blue jeans and slipped them on and a shirt.\n\n\"Are you going to finish changing?\" I asked.\n\n\"Nope.\"\n\nWhen we went back downstairs, we saw the three of them outside on the patio drying off. Dawn went to the kitchen to get some plates out.",
        "\"...it's okay Sherri; we're not going to change.\" I heard Amy saying as they came inside.\n\n\"Okay,\" I heard Sherri reply.\n\nI watched Sam as she dried off. She smiled at me and took her bikini top off and wrapped herself in a towel as Sherri watched. The gate buzzed, and I let the pizza guy in.\n\n\"Sam, get some money for the pizzas,\" Dawn said.\n\nSam took her towel off and walked to the front door and opened it and stood there in her tiny bikini bottom. \n\n\"Hi, Bob,\" she said.\n\n\"Oh...uhh, you're Sam, right?\"\n\n\"Yep. How much?\"\n\nBob told her and handed her the pizzas. She walked to the table and set them down then walked over to me. I gave her the cash, and she went back to Bob.\n\n\"Thanks, Bob.\" \n\n\"Is Mrs. Smith here?\"\n\n\"Yep.\"\n\n\"I didn't see her last time,\" Bob said looking over Sam's shoulder.\n\n\"You will get to see her again.\"\n\nI watched Bob as he looked Sam over.\n\n\"Anything else?\" Sam asked.\n\n\"Oh...no.\"\n\nSam closed the door while Bob was looking at her. I heard Sherri giggle.\n\n\"Sam, you are crazy!\" Sherri said.\n\n\"We have to give him something for driving all the way out here. He is used to it,\" Sam replied as she picked up her towel and wrapped it back around her.\n\nDawn walked to the table and spread out the pizza boxes.\n\n\"You all come eat,\" Dawn told them.\n\nDawn picked up some pizza and put it on a plate, then poured herself a glass of wine and went and sat in the den. I watched the girls and Sherri do the same. I got Sherri a soda and handed it to her. I grabbed some food and went to the den and sat on the fireplace so that I could look.\n\n\"Dawn, how long do you have to wear the sports bra?\" Sherri asked.\n\n\"A few more weeks. My doctor wants to make sure I don't scar and get stretch marks. We are trying a new procedure to reduce scarring.\"\n\n\"You and your doctor?\" Sherri asked.\n\n\"Sherri, that is what I do. I am a surgical nurse for a reconstructive surgeon. We came up with an idea to reduce scars for women getting implants and reconstruction.\"\n\n\"Is that what you do at the University?\"\n\n\"I only help him on serious cases of reconstruction now. I have been doing it a while. The University is starting a graduate program for nurses wanting advanced surgical experience and graduate degrees. I am the Acting Dean of the new program now.\"\n\n\"That is what we are going to do,\" Sam added.\n\n\"That must be interesting,\" Sherri said.\n\n\"It is going to be a challenge,\" Dawn said.\n\n\"Dawn, I didn't ask you if it was okay if I used the pool,\" Sherri said.\n\n\"Sherri, it is okay; if you can put up with my husband staring at you and these two.\"\n\n\"He is being a gentleman,\" Sherri said. Amy and Sam laughed. \"Anyway, I am very comfortable with my body; I don't mind if men look.\"\n\n\"I hope not since you will be working half naked,\" Dawn said. All of them laughed.\n\nI was enjoying looking at Sherri in her tiny suit. Since she had gotten it wet, it was a little loose on her, and I could see parts of her nipples as she moved around. She did have a nice body. I especially liked the richness of her wet brunette hair hanging over her shoulders. We ate and talked. Sam kept pulling her towel up as it got to lose. After a while she just let it slide off of her tits. Sherri looked over and smiled at her. After another 45 minutes, we were finsihed, and Sherri went to get dressed. When she came out it was almost 8:00.\n\n\"I will see you in the morning, at 8:00,\" Sherri said.\n\n\"Make it 9:30. Brenda will be here at 8:00 and I need to talk to her for a bit.\"\n\nI walked Sherri to the front door and walked out to her car with her.\n\n\"I need to talk to you a minute,\" I told her.\n\n\"Okay.\"\n\n\"Dawn, Sam, and Amy are like you; they have a strong opinion of themselves and their bodies. They don't mind men looking at them either.\"\n\n\"That's good.\"\n\n\"Sam and Amy want to work part-time in the store for you and Brenda.\"\n\n\"Cool.\"\n\n\"Sherri, you are a very beautiful woman. I am fine with you swimming in the pool if you want to, but, I hope you don't mind if I look. If you do, it may not be a good idea for you to be in that bikini.\"\n\n\"James...I know you like to look. I let you look at me naked. You were a gentleman and didn't make a big deal out of it. That made me feel better. I don't have a problem wearing that bikini around you if your wife doesn't mind. She and the girls looked nice in theirs.\"\n\n\"Okay, but let me explain one more thing. My wife will tell me if she minds, so will Sam and Amy. They don't, but I need you to know that my relationship with Sam and Amy is very special, and they also have a say in things like that.\"\n\n\"You three are that close?\"\n\n\"The four of us are that close. If you have questions, you can ask me or one of them; they will tell you anything you want to know. You need to understand because you will be working around them. This is our house, and they may surprise you some time because they will forget you are here. All of the girls usually run around the house naked.\"\n\n\"I noticed. Listen, James. I am pretty open about things like that. I told you I think it is wonderful you all have a relationship like that. If they want to run around the house naked when I am here, that is fine. Don't let me interrupt your lifestyle.\"\n\n\"Okay, thanks,\" I told her.\n\n\"Besides, that would be a cool way to work. Let me know if you want to do that,\" she said with a smile.\n\nShe got in her car; the top was down.\n\n\"Besides, I wouldn't mind seeing them naked too,\" Sherri said with a big smile.\n\n\"I won't tell them that. Be careful driving home.\"\n\nSherri started her new car and left. I went back inside.\n\n\"Problem?\" Dawn asked.\n\n\"No, I just needed to talk to her. Where did they go?\"\n\n\"To change.\"\n\n\"Oh, now they want to change.\"\n\nI sat down with Dawn, she picked up the remote and pulled up Sherri in my study and watched. \n\n\"She is very pretty and has a got hot body,\" Dawn said.\n\n\"Yes, she does.\"\n\nShe turned it off before the girls came down. When they did, they were naked. They sat on the sofa with us. I pulled up a movie off the satellite, and we watched until 10:30.\n\n\"You three ready for bed?\" I asked.\n\n\"Who with?\" Sam asked.\n\n\"I don't care who you sleep with, but I am sleeping with Dawn,\" I told her with a smile.\n\n\"Rats!\"\n\n\"Stop saying that,\" Amy told her.\n\n\"Do you want me to sleep with you, or are you going to be using your vibrator thinking about Sherri!\" Sam teased her sister.\n\n\"Sam!\" Amy yelled at her.\n\nSam got up and ran up the stairs.\n\n\"I'll kill her!\"\n\n\"Why don't you sleep with her. I know both of you are thinking about her,\" Dawn said.\n\nAmy smiled at us then got up and went upstairs.\n\n\"Are you going to fuck me because you have been thinking about her?\" Dawn asked.\n\n\"No. I'm going to fuck you because of how hot you looked in that bikini.\"\n\n\"Liar.\"\n\nWe got up and went to the bedroom. Dawn sat on the bed and slid the bikini bottom off. She laid back on the bed. \n\n\"You need to keep the bra on?\"\n\n\"I better. I'm a little sore.\"\n\nI took all of my clothes off and lay next to my wife.\n\n\"How are things going?\" I asked.\n\n\"Okay.\"\n\n\"No more intrusive thoughts?\"\n\n\"Not like that. Sam was upset this morning at breakfast.\"\n\n\"I knew that.\"\n\n\"She was mad at you.\"\n\n\"I didn't know that. Why?\"\n\n\"I called her and talked to her at lunch. She is okay now.\"\n\nDawn rolled on her back and started rubbing her breasts.\n\n\"Sore?\"\n\n\"No.\" She stopped and looked at me.\n\n\"I know you said everything is alright, but once I get the limo thing under control, and Sherri and Brenda headed in the right direction, we will spend some time together.\"\n\n\"Honey...emm...school will be starting. I will...be...busy too.\" Dawn said as she rubbed herself.\n\n\"Not on the weekends. We can take off someplace like we used too.\"\n\nDawn closed her eyes for a minute as she rubbed her breasts.\n\n\"What about the girls?\" She asked.\n\n\"They would understand.\"\n\nDawn closed her eyes again and slid her hand down and rubbed her mound gently for a minute as I watched.\n\n\"Honey, are you horny from thinking about Sherri?\"\n\n\"No...\"\n\nDawn was now squirming on the bed. I placed my hand over the one that was rubbing her mound and pushed it down to her pussy.\n\n\"Wait...\" she said.\n\nDawn was breathing hard now and moving around a lot.\n\n\"Are you doing this to yourself?\" I asked.\n\n\"No! Ahhhhhhh...\"\n\n\"What's happening then?\"\n\n\"I think Amy is making love to Sam...\"\n\n\"You feel that?!\"\n\n\"Yes! Ohhh...James, go check. I need to know.\"\n\nI left Dawn moaning on the bed and walked down the hall to Sam's room. Their door was open. Amy was face down between Sam's legs while she held them up.\n\n\"Damn,\" I mumbled.\n\nI watched for a few minutes then walked back to our bedroom door and watched; Dawn was rubbing her pussy and moaning hard.\n\n\"Ahhhh!!\" I heard come from Sam's room.\n\n\"Ahhhh!!\" Came from Dawn as she arched her back up.\n\nI went to the bed and laid next to her and rubbed her stomach.\n\n\"James! Tell me that didn't happen!\"\n\n\"Afraid it did.\"\n\n\"Noooo. That can't happen!\"\n\n\"I'm afraid it did, honey. Can you separate yourself from her?\"\n\n\"Yes. I just needed to know that is what was happening.\"\n\n\"Honey, has anything like this ever happened to you before?\" I asked.\n\n\"Yes.\"\n\n\"When?\"\n\n\"Sometimes, I used to have orgasms when my mother had one.\"\n\n\"Really? Cool.\"\n\n\"A few times, if I let it happen. My mom and I had to work on dealing with it,\" Dawn said. \"My parents are very sexual. Sometimes, I let it happen a lot.\" Dawn said smiling. \"That is why I went to college here, to get out of the house.\"\n\n\"Interesting. Does Sam need to know this?\"\n\n\"Let me see what I can do first. I don't want to discourage her. Now, I need you.\"\n\nDawn was dripping wet when she rolled me on my back. I watched as she moved and straddled my body. She grabbed my hard cock and stroked it a few minutes as she looked at me.\n\n\"Are you going to be thinking about her?\" Dawn asked as she smiled.\n\n\"Honey, I will be thinking about you.\"\n\n\"You know I don't care, honey. If you want to think about fucking her, go ahead.\"\n\nDawn moved back and lifted her pussy up with her knees and aimed my cock between her lips. She guided my cock into her and slowly slid all the way down.\n\n\"Emmmm...\"\n\n\"Dawn, will Sam feel you now?\"\n\n\"I guess we will find out,\" she said smiling.\n\nI watched my wife as she lifted each leg out from under her and placed her feet next to me. She sat up in a nice cowgirl and went to work. Dawn was sliding her ass on me and working my cock inside her. She was still horny and working hard. I always enjoyed watching my cock sliding in and out of her when she did this, no matter how many years she had been doing it.\n\n\"Ohhh...I love this.\"\n\n\"You just love having my cock inside of you.\"\n\n\"I do!\"\n\nDawn kept going for a long time until she had a nice first orgasm. She kept riding me hard.\n\n\"What do you like about Sherri?!\" Dawn exclaimed as she rode me.\n\n\"Her hot little body.\"\n\n\"She is hot!\" Dawn said.\n\n\"You want to do her, don't you!\"\n\n\"Ohhhh...yes! I want the two of us to do her, hard!\"\n\n\"You told me not to do anything,\" I said as Dawn fucked me harder.\n\n\"Ahhhh...I still want her!\"\n\nDawn rode me harder and harder.\n\n\"Honey, I'm so horny, come with me next time!\"\n\nDawn went to work harder on my cock. Sliding her ass around or stopping and wiggling. It was only about 10 minutes before I knew she was ready to come again.\n\n\"Oh, god, yes! James! I'm coming!\"\n\nI lifted her off the bed by pushing my hips up as she rode me harder.\n\n\"Ahhhhh!! Like that!!\"\n\nDawn started coming hard. I kept thrusting up and started pumping cum into her.\n\n\"Oh, my! Ahhhhhhhhhhh!\"\n\nDawn slowed down after her orgasm subsided and I lowered her back to the bed. She sat for a minute with her eyes closed.\n\n\"Did she feel it?\" I asked.\n\n\"I don't think so.\"\n\n\"She must not have that strong of a sensation for you.\"\n\n\"Yes, she does. I have ways to reduce what someone feels from me.\"\n\n\"You do?\" I asked. \"Have you ever done that with me?\"\n\n\"No. There are only a few people that I have to do that with. One is my mom.\"\n\n\"You want to go again?\" I asked.\n\n\"I need some sleep.\"\n\n\"You really want to do Sherri, don't you?\" I asked.\n\nDawn smiled at me then slid off my cock and went to the bathroom. When she came back out, she got in bed next to me.\n\n*****\n\nI woke up Thursday morning because the bed was bouncing around.\n\n\"Wake up!\" I heard Sam yell.\n\n\"Samantha!\" Dawn yelled.\n\n\"Wake up!\"\n\nI reached up and grabbed her and pulled her down between us. Her hair was wet, and she was giggling.\n\n\"What are you doing?\" I asked her.\n\n\"After today, just one more day of getting up early!\"\n\nI looked over at the clock, and it was 5:00.\n\n\"Why are you waking us up so early?\" I asked.\n\n\"Well, tomorrow is Amy's day. Today is mine.\"\n\n\"For what?\" I asked.\n\n\"I want to go to work after having great sex!\"\n\n\"You do?\" Dawn said.\n\n\"Yes!\"\n\nDawn teased Sam but soon had here sitting on her mouth.\n\n\"I didn't know I would get to start this way!\" Sam said as Dawn worked on her pussy.\n\nI didn't want to leave Dawn out, and I knew Sam couldn't lay on her yet, so I moved to the end of the bed and spread Dawn's legs apart and crawled between them. Dawn got Sam off after a while, and I got her off.\n\nSam was leaning against the headboard next to Dawn while she breathed hard. \n\nAfter a few minutes, she straddled my stomach and worked her way down in a reverse cowgirl and slid my cock into her pussy. She began working her ass back and forth on my cock. Dawn had her head on my chest as she watched Sam.\n\n\"Oh...yeah!\" Came from Sam as she worked hard.\n\nShe kept going harder and harder. She was moaning loudly as she sped up. She worked for a while.\n\n\"Oh, god!! I'm coming!!\" Sam screamed. Dawn and I watched as she tensed up and shook.\n\n\"Oh, fuck!!\" Sam screamed.\n\n\"Pull her back and fuck her,\" Dawn whispered. \n\nShe sat up, and I grabbed Sam's shoulders and pulled her back on top of me.\n\n\"Oh, yes! Fuck me hard!\" Sam exclaimed.\n\nShe spread her legs apart, and I started working my cock in and out of her pussy as she lay back.\n\n\"Yes!! Fuck me!!\"\n\nI was thrusting my cock in and out of her pussy as I held her tight.\n\n\"Oh, god!! Oh, god!! Oh, god!!\" Sam screamed.\n\nI felt Dawn rub my balls and knew she had her mouth over Sam's clit.\n\n\"Dawn!!\" Sam screamed.\n\n\"What is all the screaming?\" I heard and saw Amy walk into the bedroom.\n\nI kept thrusting into Sam as she screamed while Dawn tongued and sucked on her clit. Amy stood there and watched.\n\n\"Ahhhhhh!!\" I felt Sam having another orgasm. \n\nI thrust into her harder.\n\n\"Ohhhh, fuck!!\"\n\nDawn and I kept working her over for a while.\n\n\"I'm going to come again!!\" Sam screamed.\n\nShe started jerking on top of me as she screamed. I jammed my cock up into her and began filling her pussy full of cum.\n\n\"Yes!! Yes!! Yes!!\" Sam screamed as she bucked.\n\nI felt Sam tense up, and another orgasm shot through her body.\n\n\"Ahhhhhh!! You two stop!!\"\n\nI felt Dawn remove her mouth from Sam and saw her sit up. I held Sam as she moaned.\n\n\"I know how to get her out of bed now,\" Amy said.\n\n\"Oh, my. I don't know if I can go to work now,\" Sam said.\n\n\"Yes, you will!\" Her sister told her.\n\nDawn took Sam's hands and pulled her up.\n\n\"Ohhhh...\" came from Sam.\n\n\"Was that what you wanted to start your day with?\" Dawn asked.\n\nSam grabbed Dawn and kissed her.\n\n\"Sam, why did you get up so early? Just to fuck?\" Amy asked.\n\n\"I'll tell you tonight!\" Sam said removing herself from my cock.\n\nShe took Amy's hand and led her out of the bedroom.\n\n\"She is crazy,\" Dawn said then worked her way up and straddled my cock and sat.\n\n\"I remember plenty of mornings we had wild sex before going to work,\" I said.\n\nDawn pulled her sports bra off and leaned forward and held herself up on her arms and dangled her tits in my face.\n\n\"I think we need to start having wild sex again in the mornings before I go to work,\" Dawn said. She lowered a nipple to my mouth, and I sucked on it.\n\nDawn began rubbing her pussy on my cock as she moaned while I sucked on her nipple. After about 15 minutes she had my cock hard again and inside of her while I nursed her nipples some more. She moaned as I drew her nipple into my mouth.\n\n\"Ohhhh. Honey, you won't have any problem driving me to an orgasm just by sucking my nipples now.\"\n\nDawn moaned as she worked her pussy on my cock slowly. I could tell she was getting very aroused from me sucking her nipples. She kept going for a while.\n\n\"Ahh...ahhh...ahhhhhhh!\" Came from Dawn as she shook. \"Oh, wow.\"\n\n\"You liked that,\" I said.\n\n\"Oh, yes...you made me come sucking on my nipples.\"\n\n\"Great.\"\n\n\"Yes, it was!\"\n\nDawn sat up and started her sexy wiggle on my cock. I watched her as she wiggled and squeezed her tits. Dawn had been going about 15 minutes when Amy came in.\n\n\"Are you two coming down for breakfast?\"\n\n\"I don't think so,\" I said. Amy smiled and left.\n\n\"Oh, honey! I'm going to come!!\" Dawn yelled.\n\nShe sped up and a minute later gushed on me as she came.\n\n\"Ahhhhh!! Yes!!\"\n\nDawn stopped and sat on my cock for a few minutes.\n\n\"Emmm, that felt so good.\"\n\n\"Honey, did you get horny from doing Sam?\"\n\n\"I got horny from watching you do Sam,\" Dawn said. \"I'm still horny.\"\n\nI watched as Dawn turned her back to me while she sat on my cock. She spread her legs apart and straddled my hips then leaned back and held herself up. I watched as she began to work her pussy up and down on my cock. Her perfect ass was bouncing up and down as she worked my cock inside her.\n\n\"Oh, yes!\"\n\nDawn worked her ass up and down for a long time as I watched.\n\n\"Ahhh! Ahhh! Yes!\"\n\nI could feel Dawn's pussy beginning to tighten around my cock. It felt great as she worked her pussy up and down.\n\n\"Oh, god, honey!! Come with me!!\" Dawn screamed as she started coming hard. \"Ahhhhhhh!!\" She screamed as she worked her pussy as fast as she could.\n\nI thrust my hips and cock up into her and let her ride it a minute.\n\n\"Now!! Now!! Now!!\"\n\nDawn jammed her pussy down hard onto my cock. I could feel her insides spasming as she shook. I thrust up harder.\n\n\"Yeeeeeesss!!\"\n\nI started pumping cum into Dawn as she screamed repeatedly. I looked as cum began to run out around my cock as I thrust.\n\n\"Ohhhhhh!!\"\n\nMy hips collapsed, and Dawn collapsed onto me. I felt her pussy twitch every few seconds. After a few minutes, Dawn lifted her pussy off of my wilting cock and turned around and sat up.\n\n\"Emmm, I get to start my day now after being fucked nicely,\" Dawn said smiling at me. \"Thank you, honey.\" She slipped off of the end of the bed and went to the shower.\n\nI looked over at the clock, and it was after 7:00, I needed to get up. I joined Dawn in the shower.\n\n\"What were you saying about Sam being crazy?\" I asked.\n\n\"I get to be crazy too.\"\n\nI showered quickly and got out and shaved. It was almost 8:00 after I got dressed and down to the kitchen to get coffee. The girls had left, and a few minutes later Dawn came down in a robe.\n\n\"Brenda will be her at 8:00,\" I said.\n\nIt was almost 8:00. Dawn was sitting at the bar eating breakfast in her robe. I got some food and sat with her. \n\n\"James, you know you said Brenda has wanted you to do her for a long time?\"\n\n\"Yes.\"\n\n\"She has been asking me to have sex with her too.\"\n\nDawn turned and walked to the front door about the time Brenda rang the doorbell.\n\n\"Hi, Brenda.\"\n\n\"Hi, Dawn. You look nice this morning.\"\n\n\"Oh, I feel nice. I'm about to get ready to get dressed and leave for work. You two have a good day.\" Dawn said as Brenda walked in.\n\nI was finishing my breakfast and putting dishes in the sink as Dawn went upstairs and Brenda walked across the den. She was dressed like she did in the store. Short skirt and a revealing blouse.",
        "\"You want some coffee?\" I asked as she walked up to the bar.\n\n\"I'm good.\"\n\n\"Well, I hope you are ready to go to work.\"\n\n\"I am. James, that envelope was all cash, not a check with taxes withdrawn.\"\n\n\"This month is off the books. Come with me; I have something for you.\"\n\n\"That sounds promising,\" Brenda said.\n\nBrenda followed me to my study. I got her new computer and cellphone.\n\n\"The number on that phone will be your business number on your cards. Your email will be Brenda.Mitchell@AllureHoldings.com.\"\n\n\"That was fast,\" Brenda said.\n\n\"I have been busy. The email address will work Monday. We already have a logo. Sherri will be here at 9:30, that gives us some time to talk.\"\n\nI sat Brenda down on the sofa, making sure I got a look up her short skirt when she crossed her legs. I looked closely, and she was missing her underwear, but that was usual when I had gotten to look before.\n\n\"Sherri has been busy as I told you. One of the first things I need you to work on is making contacts with whomever you need to that you want to get lingerie from.\"\n\n\"What about in Europe?\"\n\n\"If you know who to call, start calling them and setting things up. Sherri is working on her contacts tomorrow. I hope from your experience you will know how much stock we will need when we open. I would like to have some cost estimates as soon as you can put them together.\"\n\n\"Do you have a store yet? I need to know how big it is to know how much we will be stocking.\"\n\n\"Yes, the store is going to be out by the new mall. We can run over there at lunch, and you can see. You will have about 4,000 square feet.\"\n\n\"Wow.\"\n\n\"Sherri will have the other half of the floor, but I want the departments to merge together when you two start designing the layout. I know this is going to be a lot of work for you before February.\"\n\n\"Don't worry about that. I can't wait.\"\n\n\"Brenda, I am going to tell you the same thing I told Sherri. This is your store. It will be up to you to determine what to buy, how much, and keep it profitable.\"\n\n\"James, I can do that.\"\n\n\"Another thing, you hire some good people to help you run it. I do not want you or Sherri working long days and weekends all the time.\"\n\n\"That includes you too,\" Dawn said as she walked in ready for work.\n\nI looked, and she had on a short skirt and new top that was unbuttoned enough to show her new cleavage. She also had on dark stockings that I knew ended in a garter belt.\n\n\"Dawn, you look nice,\" Brenda said.\n\n\"Yes, you do,\" I told her.\n\n\"I have a meeting with the finance people this morning. They want to talk about raising money for the new program.\"\n\n\"Come here,\" I said. \n\nDawn walked over to my desk. I lifted her skirt up about three inches and saw the tops of her stockings.\n\n\"Are you meeting with a bunch of old men?\" I asked.\n\n\"No, why?\"\n\n\"Dawn.\"\n\nShe walked around my desk to the door.\n\n\"Honey, remember what Linda said? Fuck it. I will be home early.\" Dawn said as she walked out.\n\n\"What does that mean?\" Brenda asked.\n\n\"I'm afraid to ask.\"\n\n\"James, your wife, has a sexy little body, let her show it off.\"\n\n\"She does, all the time. I'm not sure how she is going to fit into the academic world.\"\n\nI heard Dawn fire up the Ferrari in the garage, then leave.\n\n\"When are we going to New York?\" Brenda asked.\n\n\"The Saturday after your last day. You need to be here before 7:00 in the morning.\"\n\n\"Don't I need to be at the airport?\"\n\n\"Brenda, Linda has her on the jet. We will be flying on it.\"\n\n\"Oh.\"\n\n\"We will fly to New York that morning and visit stores, then fly back that evening.\"\n\n\"Sounds like fun. What time will Sherri, be here?\"\n\n\"I told here 9:30 so we would have time to talk.\"\n\n\"Well, it is 8:15, I think we have time to talk,\" Brenda said as she stood and walked to my chair.\n\nBrenda stood in front of me and unzipped her skirt and let it fall to the floor. I looked at her and her shaved pussy I had seen before.\n\n\"Brenda, what are doing?\"\n\n\"Taking advantage of my contract.\"\n\n\"You don't have a contract yet,\" I told her. \"You work for me; we can't do this.\"\n\n\"If I don't have a contract, I don't work for you.\"\n\nBrenda unbuttoned her top and took it off. I had never seen her wear a bra, and she didn't have one now. Brenda did look nice.\n\n\"Brenda...\"\n\n\"You have seen me naked before.\"\n\n\"Yes, I have, and you still look very nice.\"\n\n\"Then why don't you take me to your bedroom and fuck me. I know Dawn wouldn't care.\"\n\n\"Dawn told me you want to do her too.\"\n\n\"I do.\"\n\n\"Then why don't we wait and the two of us can do you together.\" Brenda smiled. \"Besides, if I do you right now, you will have to take a shower before Sherri gets here because I will cover you in cum.\"\n\n\"That's okay.\"\n\n\"It might look suspicious,\" I told Brenda.\n\n\"Then why don't I do this,\" Brenda said getting down on the floor in front of my chair.\n\nShe reached up and rubbed my crotch; my cock was already hard from looking at her. After a minute she worked on my pants until she had them open. I felt her rubbing my cock through my underwear.\n\n\"Damn! Dawn told me you two had fun, but she didn't tell me about this! Stand up.\"\n\nI stood, and Brenda worked my pants down as my cock stuck out at her. She grabbed it again and began stroking it.\n\n\"James, you are huge.\"\n\n\"What's the problem, Brenda? Can't get it in your mouth?\"\n\n\"That is not a problem,\" she said as she leaned forward and slid her lips over the end of my cock.\n\nI watched as she worked her mouth on my cock while she stroked it. She kept working for a few minutes until she had most of it in her mouth. She looked up and me so I could see her eyes as she slid my cock in and out for a few minutes.\n\n\"Emmm. That is a lot of cock. I can't wait to sit on it.\"\n\n\"We will have to discuss that since you are our employee.\"\n\n\"I don't care that I work for you. I want you to fuck me with this huge thing.\"\n\n\"That could create a problem since you are an employee.\"\n\n\"I don't care. You and Dawn can have your way with me.\"\n\nThat was good enough for the cameras. Brenda went back to work sucking my cock. I stood as her blowjob got better and better. I was watching the clock as she kept going. A little before 9:00 I grabbed her head and helped her work it on my cock. After a few minutes, she grabbed my ass and pulled me to her, so all of my cock slid down her throat. I held her there until she came up for air.\n\n\"Ohh, this is great! James, come for me!\"\n\nShe went back to work, deep throating me some on and off. I was getting ready to fill her mouth full of cum.\n\n\"Are you ready, Brenda!\"\n\n\"Emmmmm!\"\n\nI held her head and worked my cock in and out of her mouth to see if she would let me do that. She was willing, so I kept going for a few more minutes.\n\n\"Ahhhhh!\" I yelled and began pumping cum into her mouth.\n\n\"Emm...emmm...emmm!\"\n\nBrenda kept moaning as I pumped more and more cum into her mouth. I finished, and she ran her tongue around my cock before she swallowed several times. She worked her mouth another minute then slid it off.\n\n\"Emmm. That was nice...and a lot of cum.\"\n\n\"You're good,\" I said.\n\n\"I have sucked a few cocks in my time, but nothing this big.\"\n\n\"That was wonderful. Too bad you won't be able to do that anymore once you have a contract.\"\n\n\"Why not?! Fuck the contract! You can fuck me anytime you want, James!\"\n\n\"We will work on it. You better get dressed before Sherri gets here.\"\n\nBrenda got dressed, and we talked until I heard Sherri come through the gate.\n\n\"That will be Sherri. Remind me before you leave to give you a code for the gate and the front door.\"\n\nA minute later Sherri walked in.\n\n\"You must be Brenda,\" Sherri said.\n\n\"And you must be Sherri.\"\n\nSherri sat next to Brenda on the sofa, and they started talking. I was looking at two sets of gorgeous legs coming out from under short skirts.\n\n\"Let me print out this list I have for Brenda,\" Sherri said picking her computer up.\n\n\"Okay, I'm going to give Brenda the tour.\"\n\nI took Brenda around the house and showed her everything. She looked at all of the pictures of Dawn in the hallway. \n\n\"She looks good in my lingerie,\" Brenda said.\n\nWe walked down to the sun room.\n\n\"Nice looking hot tub.\"\n\n\"There are two more out by the pool.\"\n\n\"Do employees get to use them?\"\n\n\"Of course.\"\n\nI took Brenda upstairs to look around. When she went into our bedroom, she went into the bathroom.\n\n\"My god! This is bigger than my bedroom.\"\n\n\"Brenda, all the bedrooms in the house are suites.\"\n\n\"How many are there?\"\n\n\"There are 8 in the house and two in the pool house.\"\n\nBrenda went back out to the bedroom. She looked at some of the big prints of Dawn.\n\n\"Dawn told me you took all the pictures of her.\"\n\n\"I did. I have a darkroom in the basement where I process and print all of them.\"\n\nBrenda walked to the Tantra Chair and ran her hand over the leather.\n\n\"I hope you will teach me about this one day, James.\"\n\n\"You know what it is?\"\n\n\"Yes, Dawn told me about them and the website. The website has a nice video.\"\n\n\"It does, but there is something missing from the video.\"\n\n\"What's that?\" She asked.\n\n\"Two women.\" Brenda looked at me and smiled.\n\nShe walked up to me and grabbed my crotch.\n\n\"How about me first?\" She asked.\n\n\"We can do that, but not during the work day with Sherri here. Maybe it can be Dawn and me.\"\n\nShe kept rubbing my cock.\n\n\"When?\"\n\n\"As soon as we have an opportunity. But, Dawn wants me to get the non-sexual harassment contracts signed first.\"\n\n\"But I want to harass you now,\" Brenda said with a big smile.\n\n\"Let's go.\"\n\nI walked her downstairs and took her to the basement and showed her everything but the mirror room. She liked the big color print of Dawn and the girls naked in the flowers in Hawaii. I took her back upstairs and showed her where everything was in the kitchen and told her she could have anything in there. We went back to the study.\n\n\"Brenda, give me your email address, and I will mail you a copy also,\" Sherri said handing the printouts to Brenda.\n\n\"Oh, Sherri. I will be setting up email addresses by Monday. Yours will be Sherri.Tremblay@AllureHoldings.com.\"\n\n\"Will we have a website?\" Sherri asked.\n\n\"It will be part of the store. The store will be called Bella Dame...\"\n\n\"Beautiful Lady,\" Sherri said. \"I like that.\"\n\n\"But that is confidential for now,\" I told them.\n\n\"Brenda, did you see all of his fabulous photographs?\"\n\n\"I did, they are nice.\"\n\n\"Let me tell you about an idea I had,\" Sherri said.\n\nShe started telling Brenda about the photos she wanted to put in the store. I went back to the kitchen for a soda. The two of them spent all morning talking and looking at things on the computer. About noon, I got them to slow down.\n\n\"Let's go to lunch, and we will go to the store.\"\n\nI got them to the Escalade; Brenda sat up front. We drove out to the new mall and found a place to eat.\n\n\"James, there are some nice women's clothing stores in the mall,\" Brenda said.\n\n\"Designer?\"\n\n\"Places like Limited and Victoria's Secret. Some boutiques.\"\n\n\"We will be well above their price points. Linda is bringing in designer clothes.\"\n\n\"I have read about Linda; I can't wait to meet her and ride on her jet.\"\n\n\"What jet?\" Sherri asked.\n\n\"Sherri, we will be flying to New York on Linda's private jet,\" I told her.\n\n\"Really!\"\n\n\"Sherri, people like Linda do not fly commercial. Another thing you two need to know, Linda always has security around her, especially in places like New York. She has a personal bodyguard named Rachel that is always with her.\"\n\n\"Wow,\" Sherri said.\n\nWe ate and talked for an hour then I took them to the store, and we got out.\n\n\"Damn, James! The rent of this place will be astronomical,\" Brenda said.\n\n\"It won't be that bad. These stores on the sides are where we plan on having designer accessories like bags, shoes, jewelry, and other things.\"\n\n\"This is going to be expensive.\"\n\n\"Brenda, Linda owns this building and part of the mall. We will get a huge break on the rent.\"\n\n\"I see.\"\n\nI unlocked the door and took them inside. Brenda and Sherri started brainstorming about the layout. I walked around and looked at emergency exits, the stairs, and the elevators. I was going to have to bring Sam in soon to work on a layout. I went back to Brenda and Sherri, and they were going 90 miles per hour. I let them go while I walked around and brainstormed. About an hour later we left for the house.\n\n\"We are going to have a lot of space,\" Brenda said.\n\n\"The week after we go to New York, you two will be meeting with the architects, so get some ideas together.\"\n\n\"A lot of the stores in New York have pictures on the internet showing off the insides of the store. We can start looking at them,\" Brenda said.\n\n\"Brenda, do you work on the weekends?\" Sherri asked.\n\n\"I have to work on Saturday.\"\n\n\"James, can we get together at your house Sunday and work on the store layout?\" Sherri asked.\n\n\"Not this weekend, we have guests.\"\n\n\"Sherri, you can come to my house Sunday,\" Brenda told her.\n\n\"Okay. Can I bring my roommate; she would have fun helping us?\"\n\n\"Sure.\"\n\n\"Great!\"\n\nWe got back to the house about 2:30. Brenda went to work helping Sherri work on her numbers. I pulled up my email. I sent an email to Sam to ask him what day he would be available next week to look over the store. I sent an email to Katrina and asked her if she could come to the house next Thursday and meet with Sherri and Brenda. After that, I opened an email from Linda.\n\n\"James,\n\nWe will finish up about 5:00 and fly back. Rachel has been asking me about Amy; I think she likes her a lot. I am looking forward to this weekend.\n\nIf you ever get me aroused on the phone again when I have to meet people, I will kill you! I have been thinking about sucking your cock since I talked to you. I hope Dawn and the girls don't mind if I lock myself in a bedroom with you this weekend!\n\nAll of your things will be printed by the time I get to work Friday; I will bring them with me. I will see you after lunch.\n\nLinda\"\n\nI sent her back an email.\n\n\"Linda,\n\nI just told you to think about my cock sliding in and out of you; you were the one that thought about it sliding in and out of your mouth. Get your mind out of the gutter.\n\nAmy and Sam can't wait to be with Rachel. You will have to give Dawn something special if you want to monopolize my time.\n\nCan you come to the house for a while next Thursday; Brenda, Sherri, and Katrina will be here. Katrina has offered to help us. We could talk about your plans. I think Brenda and Sherri will have tentative plans about traveling. I am going to see if they have enough time to move things into November.\n\nI can't want to fuck you tomorrow. Or, slide my long cock down your throat like you are thinking about.\n\nJames\"\n\nI sent her the email and finished going through the rest of my email. When I finished, another email popped up from Linda.\n\n\"I can come Thursday after lunch. My buyers will be in town Wednesday to Friday; I will bring them.\n\nI need you to think about something first - my pussy sitting on your face! After I come in your mouth, you can slide your cock into me anywhere you want!\n\nLinda\"\n\nI started laughing. The gate buzzed, I looked, and it was Dawn's code. A few seconds later I heard the Ferrari in front of the house, then Dawn coming in. A few minutes later she walked into the study with a big glass of wine.\n\n\"How are things going?\"\n\n\"Great.\"\n\nDawn walked in and sat on the sofa.\n\n\"Brenda, are you ready for this?\"\n\n\"Oh, yes. I can't wait until I am out of the store next Friday. Are you going to New York with us?\"\n\n\"Has that been finalized?\" Dawn asked.\n\n\"Yes,\" I told her. \"Next Saturday.\"\n\n\"I guess I will be going. James, you will have to move your meeting.\" Dawn said.\n\n\"I sent an email to everyone.\"\n\n\"Honey, what are you going to do with seven beautiful women in New York?\"\n\n\"Look good!\" They all laughed.\n\n\"I will need to talk to Linda about what we should wear,\" Dawn said.\n\n\"Brenda, we are leaving from the house that Saturday about 7:00. Would you like to come after work that Friday and have dinner with us and stay overnight, so you won't have to get up so early and drive here?\" I asked.\n\n\"Of course, I would.\"\n\n\"Plan on doing that then. You too, Sherri.\"\n\n\"Brenda, what time would you like for me to be at your house Sunday?\" Sherri asked.\n\n\"Can you come in the morning?\"\n\n\"Sure, I can be there by 9:00.\"\n\n\"Okay.\"\n\n\"I'm going to change,\" Dawn said.\n\nShe left, and we got back to work. We worked until about 4:30; then I told them to go home. We left the study and went to the den. Dawn was sitting on the sofa in only a short robe with her legs up while she sipped on some wine.\n\n\"Are you all finished for the day?\" Dawn asked.\n\n\"Yes, we are. Dawn, how are you healing?\" Brenda asked.\n\n\"Very well, you want to see?\"\n\n\"Can I?\"\n\n\"Of course.\"\n\nDawn stood and took her robe off as Brenda walked to her.\n\n\"You look perfect, Dawn. Can I feel them?\"\n\n\"Sure.\"\n\nBrenda reached up and felt Dawn's tits for a minute.\n\n\"I like the lift you got from it. I could use that.\"\n\n\"That was what I wanted, plus a little more volume.\"\n\n\"You look great.\"\n\n\"Thanks.\"\n\nDawn picked her wine up while she stood naked.\n\n\"I guess I better get going and try to beat some of the traffic,\" Brenda said then left. Sherri was standing there looking at Dawn.\n\n\"Dawn you look very nice,\" she said. \"You looked nice before, but you really look nice now. May I feel?\"\n\n\"Sure.\"\n\nSherri walked to Dawn placed a hand on one of her breasts and felt it.\n\n\"Oh, Dawn, you don't feel like you have implants.\"\n\n\"I hope not.\"\n\nSherri stood there and ran her hand all over Dawn's breasts. I watched as she looked up into Dawn's eyes. Dawn smiled at her then Sherri ran her fingers out to Dawn's nipple and played with it for a minute.\n\n\"Yes, you look very nice, Dawn,\" Sherri said and removed her fingers from Dawn's nipple. \"I guess I better get going too,\" Sherri said and left.\n\n\"Come here,\" Dawn said to me.\n\nI walked to her.\n\n\"Did you see her?\"\n\n\"Yes.\"\n\nDawn sat her wine down and grabbed my belt and started removing my pants, then my shirt. She sat down on the edge of the sofa and pulled me to her and started playing with my cock.\n\nI watched my wife play with my cock and kiss on it for few minutes until it was hard. She held it with one hand and slid her mouth over the end. Dawn worked her mouth on it as I watched her slide her other hand down between her legs. She sucked and tongued me for a while until she was moaning. I knew she had her fingers deep in her pussy getting herself nice and wet. She looked up at me and slowly slid her mouth off my cock. I watched as she stood then turned around and put her knees on the edge of the sofa and her hands on the back.\n\n\"Are you ready for this?\" I asked.\n\n\"Just fuck me.\"\n\nI got behind her and started the tip of my cock between her wet pussy lips, then slid in all the way.\n\n\"Ohhhhhh. I need you to fuck me.\"\n\nI grabbed her hips and started sliding my cock in and out of her slowly for a few minutes.\n\n\"Harder.\"\n\nDawn wanted me to drive into her hard. I was worried about her tits bouncing around as I did. I held her and started working my cock in and out of her faster. Dawn moaned for a while as I kept going.\n\n\"Honey, I want you to fuck me!! Harder!!\" Dawn yelled.\n\nShe wanted it all. I grabbed her hips tighter and started driving my cock into her hard and fast. \n\n\"Yes!!\"\n\nI was bouncing Dawn off of my cock as I jammed into her. I looked, and her larger tits were swinging as I pounded her pussy.\n\n\"Ahh...ahh...ahh!! Yes!! Fuck me!!\"\n\nI reached up with one hand and wrapped her hair in it and pulled her head back.\n\n\"Oh, fuck, yes!!\"\n\nI held her and drove my cock into as hard as I could. This was what she wanted, so I gave her all I had. Dawn moaned and screamed for about 30 minutes as I thrust in and out of her.",
        "\"Ohhhhh!! Honey, I'm coming!!\"\n\nI pulled back hard on her hair as she jammed her pussy onto my cock. \n\n\"Ahhhhhh!! Yes!!\"\n\nDawn started jerking and gushing as I held her. She screamed again, and I started pumping cum into her.\n\n\"Oh, god, James, yes!!\"\n\nI jerked into her as she shoved her hips back. She had a huge orgasm while I filled her with cum. She pushed up and leaned back against me. Without thinking, I reached around and grabbed her tits like I always did and squeezed them.\n\n\"Oh, god, finally!!\" Dawn screamed.\n\nShe reached back with her hands and grabbed my head and pulled it down beside hers.\n\n\"I'm glad you stopped worrying about grabbing my tits.\"\n\n\"Oh, shit, I forgot.\" I eased up on her tits.\n\n\"James!! Squeeze them, or I will squeeze your balls!\"\n\nI started squeezing her tits again. They were a nice big handful now. Dawn placed her hands over mine and helped me squeeze. She finally released my hands and stood and turned around.\n\n\"You won't break them.\"\n\n\"They were doing a lot of bouncing. Is that okay now?\"\n\n\"Yes. I'm fine.\"\n\nDawn got down on the floor in front of me and grabbed my slippery cock and looked up.\n\n\"I want to go again,\" she said as she sucked my cock into her mouth.\n\nI stood there about 10 minutes until she made sure I was good and hard again. She stood and pulled my head down and kissed me. She wrapped her arms around me and turned me.\n\n\"Sit.\"\n\nI sat on the edge of the sofa, and she straddled my legs and eased down as she grabbed my cock and fed it back into her dripping pussy. She slid all the way down and sat. Dawn wrapped her legs around me then kissed me.\n\n\"Let's get back to normal,\" she said. Dawn started working her pussy on my cock.\n\nWe would usually fuck like this for a long time. Dawn was still holding me and working her pussy on my cock when Sam and Amy came in.\n\n\"Oh, good. We are starting early,\" I heard Amy say.\n\nA moment later, Amy sat on one side of us and Sam sat on the other.\n\n\"Ahhhhh...\" came from Dawn as she worked her pussy harder.\n\nShe had her arms around my neck and was enjoying herself. I held her hips while she started driving her pussy onto me; she was ready to have another orgasm.\n\n\"Yes! Yes! Yes!\" Dawn yelled as she looked at me. \"Oh, I love your big cock!!\"\n\nDawn was getting aggressive as she fucked my cock. She started grunting each time my cock bottomed her out.\n\n\"Oh, god! Yes!\"\n\nDawn sped up, and after a minute I felt her start to shake. \n\n\"Ahhhhhh!! I'm coming!! Come in me now!!\"\n\nDawn was frantic as she shook and jammed her pussy onto my cock. \n\n\"Ahhhhh!!\" Dawn screamed and shoved her pussy on my cock and held it. I wrapped my arms around her and pulled her tight and held her as we each started coming hard.\n\n\"Ahhh, fuck, honey!\" I yelled as I shot load after load into her.\n\nShe started working her pussy a little as she shook and squirted all over me.\n\n\"Yeeessss!!\" Dawn screamed as she threw her head back.\n\nWe held each other for several minutes as our jerking slowed down. Dawn placed her mouth over mine and started kissing me.\n\n\"Thank you, honey. It has been over a week since I have had some serious sex,\" Dawn said.\n\n\"You are more than welcome.\"\n\n\"I'm next,\" Sam said.\n\n\"Sam, you had sex this morning,\" I told her.\n\n\"So?\"\n\nDawn rolled her eyes.\n\n\"Yes, you did. I'm next,\" Amy said.\n\n\"Amy, are you excited about tomorrow?\" Dawn asked.\n\n\"I guess. I will miss people.\"\n\n\"You will still see them.\"\n\n\"Hold on,\" I told Dawn.\n\nShe held on as I stood. I turned her around and sat her on the sofa.\n\n\"Damn, Dawn. You are full of cum,\" Amy said looking between her legs.\n\n\"Yes you are,\" Sam said.\n\nI watched Sam grab Dawn's shoulders and pull her back into her lap. Amy lifted her legs up and spread them.\n\n\"Oh, no,\" Dawn said.\n\nAmy got up and got between her legs and went to work on eating my cum out of her.\n\n\"Ohhh, sweetie...\"\n\nI left Dawn with the girls and went to the bathroom and cleaned up. When I came out, Dawn was moaning loudly. I decided if we were going to eat, I was going to have to cook. I went to the kitchen and retrieved some fresh salmon Dawn had brought home yesterday.\n\nI listen to Dawn moaning, then screaming as Amy drove her to ecstasy. A few minutes later I heard Sam moaning. I looked back, and Dawn had grabbed her and turned her on the sofa and pulled her scrubs off. Dawn was face down in her pussy as Sam moaned. I went back to working on dinner. Amy walked up behind me and wrapped her arms around me.\n\n\"Is it okay if I come to your bedroom early in the morning?\" Amy asked.\n\n\"Well, your sister snuck in this morning. I bet if you ask Dawn, she will sleep with Sam, and you can sleep with me. Then we can start as early as you want.\"\n\n\"I hope once we start school we can have sex in the morning if we have a late class.\"\n\n\"We will work out a schedule. But, Brenda and Sherri will be working here until about December or so.\"\n\n\"So?\"\n\n\"You are terrible. I'll wake you up early.\"\n\n\"Okay.\"\n\n\"Take your clothes off. It looks like we will be eating dinner naked.\"\n\nAmy took off her clothes and helped me finish dinner. Dawn and Sam joined us at the table.\n\n\"Dawn, did you ask Linda what we needed to wear?\" Amy asked.\n\n\"She said wear nice clothes since we would be shopping in the very exclusive stores.\"\n\n\"What time will they be here tomorrow,\" Sam asked.\n\n\"Around lunch time. Will you two be home by 5:00?\" I asked.\n\n\"Should be,\" Amy said. \"Will you wait for us?\"\n\n\"We'll try,\" I told her smiling.\n\n\"I won't be here until about 1:30,\" Dawn said. \"You better wait for me!\"\n\n\"We will have some business to talk about I'm sure,\" I said. \"And, I need to show Rachel a few things.\"\n\n\"I have a few things to show Rachel,\" Amy said.\n\nWe finished eating then we all went up to my bed and watched some porn. Sam was lying next to me playing with my cock. Dawn got up and went to the bathroom to clean up; Amy followed her.\n\n\"James...are you going to do Brenda and Sherri?\" Sam asked.\n\n\"Not anytime soon.\"\n\n\"When? I know Brenda wants you to do her.\"\n\n\"We need to hold off on talking about that,\" I told Sam.\n\n\"I want to do Sherri.\"\n\nSam was slowly stroking my cock while she watched the TV. Amy and Dawn came back out and returned to the bed. Dawn pulled up one of her nice porn videos after the last one stopped. She told the girls how we were going to set up the studio as it played. When it went off about 10:30, Dawn got up and walked around to the side of the bed Sam was lying on.\n\n\"Sam, why don't you come with me,\" Dawn said reaching for Sam's hand.\n\nSam took her hand and led her out of the bedroom. Amy sat up on the bed and moved to me and laid on top of me and kissed me.\n\n\"Honey, before things get busy tomorrow, I wanted to spend some time with you tonight,\" Amy said.\n\n\"That sounds good. You still want me to get you up early?\" I asked.\n\nAmy smiled at me.\n\n\"Since tomorrow is my last day...you may not get to sleep tonight,\" Amy said then kissed me.\n\nShe laid her head on my chest and held me. I turned the lights down in the bedroom.\n\n\"Sweetie, do you feel anything different from Dawn?\"\n\n\"Some. We seem to know what we each feel when we are close. It's kind of cool. But...I feel many more feelings from you know.\"\n\n\"Like what?\"\n\n\"When I am close to you like this...I feel very calm...and very loved.\"\n\n\"Honey, you know I love you.\"\n\n\"James, this is a different feeling. I know you love me...but I haven't fully understood that on an emotional level...a mental level. Now...I feel your love.\"\n\n\"Can you describe it?\"\n\n\"It is just a physical feeling that consumes me. Sometimes I feel like I tingle from it. I am a still getting used to it and figuring it out.\"\n\n\"Do you feel it right now?\" I asked.\n\n\"Yes.\"\n\n\"Honey, I need you to understand that you are the one that is feeling it. It is all you. I am not doing anything to you, other than loving you.\"\n\n\"I guess. But things are different now...since we had that incredible time together.\"\n\n\"That time I was feeding you the love energy you wanted to feel. That was the first time you realized what was happening. The incredible sex and orgasms came from love, not me pushing sexual arousal into you as I have done before. It was very special for me also.\"\n\n\"James. Is that what you do with Dawn? Push love and arousal into her so she has those terrific orgasms?\"\n\n\"Honey, I think you understand now that it is not me pushing that into her. When you had that incredible experience, I told you, it was because you opened up and pulled from me what you needed. Of course, I made sure you got what you wanted. But didn't it feel much different than when I have pushed you to a huge orgasm?\"\n\n\"Yes. It was like Dawn has said; my entire body and brain had an orgasm.\"\n\n\"Amy, you did that.\"\n\n\"Only because you can give me what I need.\"\n\n\"True, but you still have a lot to learn.\"\n\n\"Like what?\" Amy asked looking up and placing her chin on my chest.\n\n\"I can't tell you what can be done; I can only tell you what Dawn tells me. It took Dawn and me a long time to get where we are. But when Dawn and I are going to join together like you and I did, there is much more to it she says.\"\n\n\"James, that was pretty incredible. How much better can it be?\"\n\n\"This is something Dawn will have to teach you, but, she reaches a point when we are like that that she savors the feelings. You have seen her just sit there and ride her orgasms for a long time. Let me see if I can describe it. When we peak at that moment, it stays with us. It is almost like an outer body experience. We are so close at that moment; we just drift in ecstasy until something pulls us back and an incredible orgasm rips through both of us.\"\n\n\"Wow. I wish I could do that.\"\n\n\"You will one day. Dawn and I have been discussing it, and we feel that you and your sister are capable of experiencing that.\"\n\n\"Maybe Sam is.\"\n\n\"Amy. You can too. Dawn can touch you two and feel what you experienced. But I am the one with you, all three of you. Amy, the other day I experienced something very different with you than I do with your sister. You have been very unsure about letting Dawn and me inside your feelings. You and I have talked in private; you told me you tend to hold back your love for anyone but your sister. You have been holding back your love from Dawn and me. You have been searching inside yourself to determine if you are capable of letting go and being vulnerable to us. Somewhere inside you, you let go of that doubt and opened yourself up to us.\"\n\n\"I guess I did.\"\n\n\"When you had that incredible experience, did the love you felt from me feel more like the love you feel from your sister?\"\n\n\"It did. It felt like the love I feel from Sam and my mom.\"\n\n\"It was much different, wasn't it? The love I felt from you was like the love I feel from Dawn. Think about it a minute and see if it felt clean and pure without restrictions.\"\n\nAmy pushed up and looked at me.\n\n\"That was it! I have been trying to describe it, and that is the way it felt!\"\n\n\"Does it make sense to you now?\"\n\n\"Yes! It was such an incredible feeling.\"\n\nI wrapped my arms around her and pulled her back down to my chest.\n\n\"Now, close your eyes for me and relax and breathe nice and deep. I want you to feel that love from me again for a few minutes.\"\n\nSuddenly, I could feel Amy filling with love. I held her and fed her the deep love I had for her for a minute.\n\n\"Oh, god...yes. Just like that,\" she moaned.\n\n\"Now. Explore the feelings in your body. Feel that love filling every muscle and nerve fiber in your body, Amy.\"\n\nI held her. I could slowly feel the energy in her body changing. She was beginning to feel like Dawn always felt.\n\n\"Just relax and let it flow, honey.\"\n\nI helped her some, but she was giving me pure love, nothing held back.\n\n\"Yes, just like that,\" I said softly.\n\nAs I held her naked skin close to mine, I could feel her body beginning to warm. \n\n\"Oh...my,\" came from Amy.\n\n\"What do you feel?\"\n\n\"I feel incredible. I swear I can feel every inch of my body.\"\n\n\"How does it feel?\"\n\n\"So different. Oh, James. I love you so much.\"\n\nI felt Amy beginning to slowly let sexual arousal mix with her energy.\n\n\"Amy, don't do that. No arousal, just feel the love.\"\n\n\"But it is so natural. The arousal comes from the deep love.\"\n\n\"No, it doesn't. Love is pure love; sex energy is sexual energy. Control it.\"\n\nI held her for a few minutes. The love energy in her was growing, but she was still having some arousal mixed with it.\n\n\"You are doing good.\"\n\nI could feel her maintaining the level of deep emotional love. I gently and slowly removed my hands from around her body and stopped deliberately feeding her my love. Just like before, she was drawing from me just what she needed. I let her go for a few minutes.\n\n\"How do you feel?\"\n\n\"I can't describe it, James.\"\n\n\"Amy, you are doing everything. I am not pushing anymore; you are taking what you need to feel this way. That is perfect. If you think you can do it, I want you to try something. I am going to hold your hand so you can still feel me, but if you want to try it, I want you to slowly roll off of me while you maintain this feeling.\"\n\n\"I don't want it to stop.\"\n\n\"It won't if you don't want it to. Trust me. Take my other hand too.\"\n\nAmy wrapped her fingers of both hands into mine and set up and straddled my stomach.\n\n\"Are you okay?\" I asked.\n\n\"Yes.\"\n\n\"I want you to straddle my hips and slide my cock into you,\" I told her.\n\nAmy moved around and got in position then reluctantly released her hold of one hand and grabbed my cock and started it into her pussy. Once she had it started, she grabbed my hand again. \n\n\"Honey, hold onto the feelings you have and lower yourself down.\"\n\nAmy looked into my eyes as she slowly slid all the way down.\n\n\"How do you feel?\" I asked.\n\n\"Wonderful, James.\"\n\n\"Close your eyes and just feel,\" I told her.\n\nShe closed her eyes, and I took both of her hands and placed them on my chest. I sat up slowly and wrapped my arms around her and held her.\n\n\"ohhhhhhh...\"\n\nI held her for a few minutes as she sat quietly.\n\n\"Amy, put your hands anyplace you want.\"\n\nShe moved her hands around and finally placed her palms over my chest. I leaned her to one side and pulled her leg out from under her, then the other side. I now had her sitting in my lap like Dawn did letting her draw as much love from me as she wanted. I pulled her to me and kissed the side of her neck softly.\n\n\"Ohhh, James...\"\n\n\"How do you feel?\" I whispered in her ear.\n\n\"Incredible.\"\n\n\"When Dawn and I hold each other this way it is very intimate, and we can feel each other very deeply. What are you feeling?\"\n\n\"I feel your arms wrapped around me and everywhere your body is touching me. I...I can't explain how wonderful I feel.\"\n\n\"Don't try and explain it. Don't analyze it...just feel what you want to feel, honey.\"\n\nAmy was leaning into me more as I held her. I could feel her pulling more and more love from me. What I could feel from her was the deep and peaceful feelings like Dawn would have. I didn't think she could take much more without becoming overcome with it.\n\n\"Amy...I want you just to feel where you are right now. Like I said, just savor the feelings.\"\n\nAmy was trying too hard.\n\n\"Honey, I love you, I always will. Now just let the feelings you have flow through you and relax.\"\n\nI felt Amy slowly begin to relax and melt in my arms. I deep sigh came from her.\n\n\"Perfect, honey.\"\n\nI held her in the dark and very slowly began to let her body absorb my energy. I let her have my love and my relaxing energy. I could feel her beginning to change as I held her.\n\n\"What do I do...\" Amy whispered.\n\n\"Take in everything you can feel.\"\n\nWhere her body was touching mine, I could feel her warmth and her flow of energy. I slid one hand down to the base of her spine and fed her a little sensation of arousal.\n\n\"ohhhhhhh...yes...that feel so good...\"\n\n\"Honey, anything that happens is up to you. I'm just letting you sample different feelings from me. You find the ones you need and take them slowly,\" I told here.\n\nI let her feel love, arousal, relaxation, and a very deep and concentrated feeling of all that I was getting from her mixed with my energy back to her. Dawn called it our energy. I kept repeating the process waiting for her to take the ones she wanted. I slowly began to feel her drawing different ones from me. First love, then arousal; what I expected.\n\n\"emmm...\"\n\nThen I felt her pull the combined energy from me slowly. I was amazed at what she was doing on her own. A minute later she began to draw it more.\n\n\"Oh...my...what am I feeling...\" she got out.\n\n\"Take all you want.\"\n\nI relaxed and let her take what she needed. When Dawn did this, we got lost in each other and time stopped. Amy wasn't capable at this point to return her combined energies to me, but I could feel them growing inside her. I gently held Amy and let her do what she probably didn't even know she was doing. I just held her and absorbed what she was feeling.\n\n*****\n\n\"James...\" Amy moaned.\n\nI had been lost in her feelings as they had grown. I could feel her becoming slowly aroused without me feeding her any sexual energy. I was hoping she would become completely aroused just from our combined love. She was doing it perfectly.\n\n\"You are doing fine, honey.\"\n\n\"Help me...\"\n\n\"It's up to you. You decide what you need to feel and where.\"\n\n\"How.\"\n\n\"Your feelings and energy flow through your body. You can move the sensation to anyplace you want. Feel my hand on your back and move the feelings there.\"\n\nWhere I had my hand at the base of her spine was where Dawn liked it. It was something she had decided on as a place for her to feel my strongest energy flowing in and out, but Dawn also could draw and feel the energy from me any place I touched her. I wanted Amy to feel where my hand was, but if she were like Dawn, she would eventually determine where she wanted me to touch her. After a few minutes, I could tell she was focusing on drawing energy from where my hand touched her.\n\n\"emmmmm...\"\n\n\"What do you feel?\"\n\n\"I feel everything flowing through my spine. It is incredible, but I need you.\"\n\nI didn't want to push her. I could drive her to an orgasm easily, but I wanted her to find the pleasure and energy and she was not getting it yet. I knew I had to be careful with her at this point.\n\n\"Is my hand touching you helping you focus your energy at that place?\"\n\n\"Ohhh, yes...\"\n\n\"Can you move the sensation to where you want it?\"\n\n\"I just feel where you are touching me.\"\n\nI moved my hands slowly to the tops of her thighs and let her move her focus to those places.\n\n\"Ohhhhhh...\"\n\n\"Better?\"\n\n\"Yes.\"\n\nAmy began to pull more and more energy from me. I held back anything she wasn't pulling on her own. I begin to feel the familiar twitching beginning in her pussy.\n\n\"Relax...\" I told her. \"Just let it build, honey.\"\n\nI felt her building more and more for about 10 minutes. She had focused our energy in her pelvic area. It was so strong I was getting very aroused also.\n\n\"emmmmmmm...\"\n\n\"Relax,\" I told her because I could feel her breathing speeding up. \"Control it, honey.\"\n\nAmy slowly tried to regain control of her breathing, but she kept building.\n\n\"ahhhhhhh...oh god...\"\n\nHer orgasm was starting to build. I wanted to push her over the top, but I didn't. It was hard for me not to flood her with our combined energy like Dawn and I did for each other, but I wanted her to learn.\n\n\"Yes!\"\n\nAmy's energy suddenly changed. Her pussy tightened around my cock and squeezed.\n\n\"Ahhh!!\"\n\nShe jerked several times very hard and started coming. I slid my hands around to her back and pulled her to me and began filling her with cum.\n\n\"Ohhhhhhh!! James!!\"",
        "Amy started shaking and repeatedly jerking as she came over and over. I had to hold her tight.\n\n\"Ahhhhh...ahhhh...ahhhhhhhhhhhh...\" Amy trailed off and went limp.\n\n\"Amy?\"\n\n\"Oh, my...\"\n\n\"Don't pass out on me.\"\n\n\"I'm not...I'm just wasted...\" she whispered.\n\nI held her close to me for a few minutes.\n\n\"You did it,\" I said.\n\n\"What did I do?\"\n\n\"You tell me.\"\n\nAmy slowly sat up in my lap and looked at me a few seconds, then wrapped her arms around my neck and kissed me deeply for several minutes.\n\n\"What was I feeling?\" Amy asked.\n\n\"You tell me.\"\n\n\"I was filled with your love and some arousal from you...but...I felt something incredible coming from you that I don't understand.\"\n\n\"What was it?\"\n\n\"I don't know. It felt so different...I have never felt anything like that.\"\n\n\"I want you to tell me what you felt,\" I said.\n\n\"It was incredible. It was love and pleasure and relaxation, and...and...\"\n\n\"And what?\"\n\n\"And something I can't describe, but it felt incredible.\"\n\n\"How did that feeling make you feel, honey?\"\n\n\"Incredible.\"\n\n\"Other than that, describe it.\"\n\n\"I felt you giving me all of those feelings; it was incredible, James.\"\n\nThis was going to be difficult.\n\n\"Did the feeling seem different to you?\"\n\n\"Not different, but wonderful.\"\n\n\"So it felt like all the love I gave you the other day.\"\n\nAmy was quiet for a minute.\n\n\"Sort of.\"\n\n\"It didn't feel like that?\"\n\n\"It did, but the other day you gave me all of your love and filled me full of that and arousal.\"\n\n\"Is that what you felt this time?\"\n\n\"I felt the love, but it was different in a way. It aroused me.\"\n\n\"Just the feeling of love aroused you?\"\n\n\"Yes, but it was still different. There was something else there.\"\n\n\"More than my love you for you?\"\n\n\"Yes...I think.\"\n\n\"Arousal?\"\n\n\"No, but it felt so good it made me aroused. James that is all I know.\"\n\nI had to make Amy understand what she had felt.\n\n\"How do you feel right now?\" I asked.\n\n\"Wonderful.\"\n\n\"Close your eyes, honey.\"\n\nAmy closed her eyes, and I placed my hand on her chest.\n\n\"What do you feel?\" I asked.\n\n\"I feel something I am starting to like. I feel your love for me.\"\n\n\"How does it feel compared to the love you told me you felt earlier?\"\n\nAmy was quiet a minute.\n\n\"I feel your love, but it is not as strong as what you were pushing into me before.\"\n\n\"Amy, I wasn't pushing anything into you, I was just letting you have what you wanted. How is it different now?\"\n\n\"Your love is so strong now, but it was...different...stronger.\"\n\nI took Amy's hand and placed it on my chest. I could feel her love for me as she touched me.\n\n\"Close your eyes,\" I told her.\n\nFor me to do this without her being full of energy was going to be hard. I closed my eyes and took the feelings of love that Amy was giving me and fed it back to her with my feelings of love for her. What Amy had to understand was she had felt the combination of our love together. I concentrated and amplified the feelings flowing through my hand into her. Amy inhaled sharply.\n\n\"Ahhhhhh...that's it! What is it?\"\n\nIt was hard for me to do what I did next. Dawn had helped me learn to separate feelings, and I had to do it now. I stopped the flow of my love for Amy and just fed hers back to her.\n\n\"Ohh...what is that?\" Amy said. \"Who's love is that?\"\n\nI couldn't break my concentration at this point. I pushed harder.\n\n\"James? What is that?\"\n\n\"Feel it,\" I managed to get out.\n\nI kept it going as long as I could, then I had to stop. Amy was looking at me.\n\n\"I don't know what I was feeling, but that was part of what I felt with your love,\" Amy said.\n\nI didn't know if I should tell her or keep experimenting. I no longer had my hand on her, and she had removed her hand from me. I guess I was asking too much from her.\n\n\"Ohhhh...\" I let out.\n\n\"James? What did you do? What I felt was so...incredible and different.\"\n\nI leaned forward and kissed Amy.\n\n\"What did it feel like, honey?\"\n\n\"Wonderful and peaceful. Where did that come from?\"\n\n\"You.\"\n\n\"What do you mean?\"\n\n\"Honey, what you felt at the end was your love.\"\n\n\"What?\"\n\n\"I was giving you back the love you were giving me. I want you to feel your own love. It is important that you feel your love energy.\"\n\n\"How did you do that?\"\n\n\"A lot of practice with Dawn.\"\n\n\"But...what you are saying is my love...I felt that mixed with your love just before I exploded.\"\n\n\"Great. That is what you should feel. That is what happens between Dawn and me.\"\n\n\"It felt incredible.\"\n\n\"Pure?\"\n\n\"Yes!\"\n\n\"You cannot do it yet, but a day will come when you will give our love back to me at the same time. That is the ultimate experience for us.\"\n\n\"You don't feel that now?\"\n\n\"I could if I took it from you, but, what makes it so special is you realizing what you are doing on your own. It will happen.\"\n\n\"Then what happens?\"\n\n\"The orgasm you just experience will be ten times stronger in ways you can't imagine.\"\n\n\"Oh, my god.\"\n\n\"Now, you will have to work with Dawn to learn more. That is where she is much better than I am. She taught me how to do it.\"\n\nAmy leaned forward and kissed me. I held her and laid both of us on the bed. It didn't take long for Amy to fall into a deep sleep."
    ],
    "authorname": "drmac100",
    "tags": [
        "redhead",
        "lottery",
        "james",
        "dawn",
        "samantha",
        "amy"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/life-after-the-lottery-ch-53"
}