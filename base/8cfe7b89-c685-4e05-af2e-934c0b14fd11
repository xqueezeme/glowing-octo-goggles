{
    "title": "In Matters of Size, Size Matters Ch. 01",
    "pages": [
        "[Thanks to Experimentalslut for the encouragement.]\n\nMy name's Anne Marmos. I'm 35 years old and up until three years ago I was married to an amazing man named Ian. Not only did we \"swing,\" but I think I was what's known as a \"hotwife.\" I mean, I had a husband, but I also had my own reverse harem of other men, in addition to the swing club we belonged to. It was a rare night that I was home doing ordinary things like watching TV. Most nights I was out getting laid. Sucking cock. Doing all those things you watch on porn sites so you can get hard and jerk off. From what I can tell, I got more sex than most guys dream of and enjoyed it all. If there was anything (or anyone) I didn't enjoy, it only happened once. \n\nI fucked guys with average sized dicks. I fucked guys with small dicks. I even had a couple with cocks that made grande burritos look small. What mattered the most, frankly, wasn't the size of the meat, but the man it was attached to. Yeah, a small cock couldn't reach places that monster-sizes could - but so what? The guys I went out with, and the couples we swapped with weren't all caught up in that \"gotta be hung like a porn star and treat women like property\" bullshit. What someone lacked in proportions he made up for in other skills. After all, tongues can do things cocks can't, right?\n\nI did have one friend who might have called herself a \"size queen.\" But in the case of my friend Sylvie, who was 6'2, had 42DD boobs, and weighed in at about 190 without an ounce of fat, she's big. For her, small was a problem! For the rest of us of average height, however, we would be more accommodating. \n\nAnyway, there are size queens. They need big cocks, and according to Sylvie, they don't care all that much if the dude's a dick if he's got their size dick. Seems as though there's a certain quality to their sex that I couldn't quite grasp. Like maybe it is really about what they feel and how it feels more than the overall experience. Well, that's fine with me. There is no right or wrong, and if a man is out to see me please, I almost don't care what size meat is in his pocket. \n\nTo be fair (not that there really is such a thing), when it comes to women, all bets are off. I was (and I am) fairly average at five two and 120 pounds, with 34C boobs. Did I ever wish to be otherwise? Of course! Look, in case you have had your head in some dark, smelly place, almost every woman I know of grew up in the \"your body needs to be some other way\" world we live in. That includes the \"perfect\" ones. We are all somehow conned into think we needed more or less of something: bigger boobs. Smaller boobs. Taller. Skinnier. Bigger butts. Smaller butts. Here's what I discovered for myself, though. I have what I have and don't have what I don't have. If I want to change it I can - at a cost. If I ain't willing to spend (time OR money) then I better love what I have. \n\nSo life was going along good. I had a healthy, abundant sex life. I had a man who adored me and got off on my sexual appetite. I was living in a world where it was all good - until the night I was awakened by two cops at the door. Ian was driving back from a business trip. Or he was supposed to be - but those cops were there to let me know he wouldn't be coming home. Some knuckleheaded drunk ran a stop sign. My only consolation was that they suspect it happened so fast Ian didn't suffer. My world collapsed on me. Within a month of the funeral I sold our house and left town with barely a word to anyone. \n\nI could no longer bear to be with all the men and couples who knew us both. Maybe I invented the idea that they were only in bed with me out of pity for my sorrow - because I know I slipped into that for a bit. In any case, I moved away from what had been our happy home and that close knit community of swingers and lovers and left them behind. I did my best to close off that life, but I wasn't completely successful.\n\nI moved across the country, from Montclair, New Jersey to Fresno, California. I found a job with an insurance company, and that became my world. Up in the morning, to the office, back home at night and watching TV until I fell asleep. Weekends? I took up camping and would spend weekends alone out in the wilderness for the most part. At some point I started taking classes with some vague end in sight like a college degree. At least my mind was alive if my emotions were deadened. Months turned into years. \n\nUltimately, I couldn't deny that I was a sexual being. I tried - I really did. I went from being free about dressing to attract men's eyes to attempting to be as un-sexy as possible. I stopped wearing makeup, heels, stockings, dresses, low cut blouses - all of those things that I had enjoyed for their use in presenting myself as a sex object. As I met people in those classes, however, I eventually began to think about reaching out to others, but always rejected it when it came time for action. \n\nAt the same time, however, I began to go home at night, watch porn and masturbate myself to sleep. It was certainly a step up from TV - it was interactive to some extent, right? While there's a ton of homemade porn filmed by average men and women, the video quality can be chancy. The stuff filmed by studios looks a lot better but at the same time there's an insane attention on big cocks. Hell, one of those Black production companies even advertises for big, Black cocks to contact them for potential jobs. \n\nI had been sexual. I wanted to be, once again, but I was too scared, frankly. What if I found a guy? What if I opened up and then lost him like I had lost Ian? I wanted dick, but there was no way I could be with Dick. Or Tom or Bill or any man who might I might fall for but who would ultimately leave me. So I did what any one would do - I went from reading the stories on Literotica to shopping in the stores on Literotica. At first, I just needed something that vibrated and could stimulate my clit better and faster than my fingers. A \"magic wand,\" with its big bulbous head and large body that made for powerful vibrations became my go to, but I forgot how things work - at least for me.\n\nSee, I get accustomed to things, and then they lose their value. I might not be all that much different from everyone, but, that's not what's important. What is important is that, about two weeks after hours in bed with porn playing on screen and that big bulb of my wand jammed up against my clit, after doing everything I could to stimulate myself, getting lost in the spastic jerking of my body, and seeking out the kind of mind-numbing orgasms I longed for, I needed more. More of what, I wasn't exactly sure, but what I had wasn't enough. My orgasms weren't getting better or bigger or however one describes it. What used to be a wonderful thing was now more or less ordinary. So started by looking for more, better or simply different visual stimulation.\n\nI was no longer as aroused by just watching some actress trying to impress the director with how much cock she could swallow, or how many guys she could handle. What I began to concentrate on was the size of what the women were dealing with. I guess I forgot how altogether painful some of those big burrito dicks could be - instead, I started seeing something in the facial expressions of whoever was being stuffed that suggested that there was something there that wasn't available elsewhere. One night, as I watched what seemed to be a tiny slip of a woman take two BBC in her vag, I wound up with my fist jammed up MY vag!. The orgasm that followed was explosive - I even squirted, for the first time in years! And with my other hand jamming that vibrating rubber ball up against my clit, I only stopped cumming when the hand I had slipped into my hot, wet pussy started cramping! \n\nDo I need to tell you what happened after that? (Of course I will - that's the point of writing on Literotica, isn't it?) I spent the next few nights in that same position. I would come home from work, eat, toss back a few drinks, strip down and get in bed. My tastes were changing - now my searches on the free aggregator sites I used were for fisting videos. I watched, I got wet, I played with myself and I came, over and over again. I began to wonder what it was that that was grabbing my attention, as well as my time and my orgasms, but I decided to just keep going and let it work itself out. I was tiring of the aches brought on by contorting my body - the amazing sensations brought on by working my hand up into my pussy were now beginning to be countered by the aches brought on by the positions I had to use to do it. I tried copying what I saw on screen - from lying on my back with my legs spread wide and working first fingers and then fist into that dark, hot, wet space I couldn't seem to fill, to trying it on my knees, reaching behind myself as if I was doing myself doggy style. If a woman on screen could get her fist into herself, I was going to do it as well. \n\nBy the end of two weeks, however, I was beginning to develop either tennis elbow or carpal tunnel syndrome or just simply a fucked up fucking hand, and knew I needed help. Not \"needed help\" like an alcoholic or an addict needed help to quit - I needed someone to help me go beyond my current limits. With someone doing the fisting I could devote my full attention to the sensations of BEING fisted. Instead of holding back a bit so I could remove my hand, or keep my wrist from aching, I wanted to be able to let go of that and simply surrender to the sensations of something inside me that had me forget everything else while it was there. But finding a fisting friend, given my relative social isolation at the time, seemed like a very tough thing to do. Not exactly a yellow pages listing, if you get my drift. (And if I have to explain what the yellow pages are, then just read on. I'm not about to give a history lesson here!)\n\nObviously, the simplest solution was to find something to replace my fist. I had something right there, and almost as soon as I realized that I could use something other than flesh, I had the bright idea to shift that magic wand vibrator. After all, the rubber head of it was the size of a tennis ball. Bigger around than all but those very few big \"burrito\" boners I remembered - but a little smaller than my hand. I remember how turned on I was when I thought of it, and how in the next breath I got scared crazy, wondering if I could do it, what might happen, would it get stuck - or would I wind up with a yeast infection or some other painful condition. That broke the mood long enough for me to get out of bed, locate all the cleaning products I had purchased for my sex toys, and thoroughly clean my wand. By that time, I was no longer wet and waiting, so I did a deep cleaning and set it aside for the next night. Then I turned off the porn and decided to pursue the different hookup sites I had seen online.\n\nWhy not? I figured I could test the waters and look for some sort of other to further my fisting. And yes, I giggled when that phrase came to mind. Wouldn't you? First, I had to create my profile, and that was pretty easy. \"38 year old widow, lives alone in the Fresno area, very experienced with men and women, looking to explore extreme personal satisfaction\" was how it came out. I called myself Fistually (and was surprised when no one else had claimed it), took a bunch of selfies and selected a nude for the profile that hid my nipples, hinted at my neatly styled pubic hair and cropped it so my face wasn't visible. Enough to interest someone, I thought, and keep my identity private. Then I set about taking a few more explicit ones, as well as a video, to use as private pictures. If you've ever done it, you know how tough it can be to hold a camera and pose. It was a good thing that I had a small tripod!\n\nThe first private picture was me, propped up in bed, my nipples hard and very visible through my legs, which were spread and bent at the knees - effectively showing off my boobs and pussy. Then I had one where I bent one knee and put my hand at my pussy, followed by one where I held one boob in my hand and tweaked the nipple while inserting two fingers in my obviously wet puss. By this point I was becoming oblivious to the camera and just closed my eyes and went with the sensations, which were different than any before for some reason. I stopped, set the camera to keep on snapping stills, and resumed my adventures with myself. Finally, when I was well on the way to inserting my hand I stopped long enough to get out of bed, switch the camera to video mode and then got back in bed. \n\nThis time I spoke to the camera. \"Here's why I'm looking for a friend. I can do this (and at that point I worked my hand between my pussy lips and into my hole) but I have to keep my attention on doing AND being done to. I want someone to do me. Will it be you?\" I then began to rub my clit and move my hand, coming pretty quickly. It's a pretty decent little home movie - as good or better than half the self made pornos I had seen. I went through the pictures and narrowed them down to half a dozen, then went to work on the video. It eventually became two: one showing my little speech, ending after about 15 seconds of masturbation, and the other showing about 10 seconds of very frenzied clit massage followed by a very obvious orgasm. Then I uploaded everything and went to sleep.\n\nI went to work the next day, and began to look around the office, just beginning to wonder what it would be like if someone I worked with found my profile. For the first time in three years, I was at work, wet and wondering. I managed to contain myself, however. I work at the headquarters of a national insurance company, with a few hundred other people who, up until now, had simply been faces. I was suddenly seeing that they were people, probably for the first time. It was like an awakening, actually.  \n\nI got home at my normal time and did my normal stuff, but held off going online. I even turned on the TV for the first time in months, just to see what there was in the world that I had been shutting out. Didn't watch for long - the commercials disgusted me - but long enough to realize I wasn't going to stay there. I had new - and potentially exciting - things to do: either read responses to my profile and see where that might go, or take out that wand and...I felt my pussy get wet and that got me headed to my bedroom.\n\nOnce there, I shed all my clothes. I remember my nipples were extremely hard, so much so that taking off my bra was an exquisite set of sensations. I lifted up my boobs and, one at a time, brought a nipple to my mouth. (It was a stretch, but so what!) As I sucked on one, then the other I heard moaning and didn't realize it was me! I managed to turn on my computer with one hand - the other continuing to mash a nipple between my thumb and forefinger - and once it was on, my hand found my pussy and two fingers easily slipped into the hot, wet hole. Somehow I managed to stop myself from simply giving in and getting off, and I went to the website where I had established that profile. \n\nI already had interested email! Reading through the first three, however, I was getting discouraged. All three were obviously from horny dudes who hadn't read my profile but who merely reacted to the picture they could see. Disappointing, but not hopeless. I responded to all three with something that essentially said \"what's in it for me?\" and figured I might get an interesting reply, but essentially forgot about them. It was the fourth email that renewed my faith in life and love, however. \"Hi, I wanted to let you know that I share your interest in extreme personal satisfaction. I've been at it for a while and have the tools and talent that might be what you are looking for. I'm 30, divorced, and when it comes to men, I am a bona fide size queen. I have my own harem of guys with big, meaty tools, and when they aren't around, I have things I use to entertain myself. I have a house in the suburbs, I'm discrete, and I want everyone to have pleasure however they want it. Take a look at my private pics and videos and let me know if we should get together. Sally.\"\n\nWow! It was as if my wishes had been granted - or at least it sounded that way. So I did what anyone would do: I went to her pics and videos. The first picture was of a woman (likely to be Sally but not certain), naked, on her side facing the camera. Blonde, with long curly hair, her tits were easily DD cups. The areolae were a light pink, and the nipples were not really visible. She wasn't fat, nor was she anorexic. There was meat on her bones, including a belly and thick legs and thighs. But the thing that drew my attention was that, between the leg stretched on the bed and the one bent at the knee, in her hand, was the same magic wand waiting by my bed, but very obviously inserted into her pussy! \n\nThe next picture was the same woman (so it was now almost certainly Sally) with her mouth wrapped around one of the thickest cocks I had ever seen. After staring at that and finding myself getting even wetter, I moved to my bed, set the laptop in front of me and reached for my now fresh and clean wand. I put it on low, brought it up to the lips of my puss and began to tease myself as I flipped to the next picture. And there she was, surrounded by 6 large cocks - like porn star sized large cocks. One very fat one was poised between her outer lips. Since the helmet of it was mostly visible, I could estimate it at ten inches and very fat. The others all seemed to be of a similar size; one was being held between her DD's, one was being held to her lips and there was one in each hand. And one all by itself, but I did notice a hand on it. Probably the owner. \n\nIt was the next picture that blew me away - right into an orgasm as soon as I saw it. The same woman, naked, on her knees, one large boob visible, and one hand deep inside another woman's pussy! And there were more pictures, equally as astounding. Double penetrations. A side view of Sally (I was now convinced it was her.) fucked air tight with large cocks in her ass, pussy and mouth. Except for the size thing, this was me, three years ago! It brought back memories even as I found myself inserting the bulbous head of that wand into my hole and turning on the vibes. I came again and again until I couldn't take it anymore, finally popping it out and collapsing back on the sheets. But what finally flipped me from watching to wanting to participate were the videos.\n\nI had seen a number of other extreme videos. Most notably the ones where large objects were employed. Strangely enough, there were a lot of guys anxious to show off how they could fil their butts with ginormous dildoes. But there were also a number from women, and Sally's videos could have been among them if she wanted. In the first one, she went through a series of toys, each progressively larger, all inserted fully into her pussy. And she began with a thick, six inch realistic dildo that went in balls deep. Once it was in she hit some switch and the sound of muffled vibrations was mixed with her moans and groans until she came. The next one had to have been ten inches and twice as fat, and it too went in all the way. This time her sounds started before she turned on the vibrations and continued until she came - squirting, this time. I came as she did.\n\nThe next video showed her with an even bigger toy. This one seemed like it had been attached to some sort of mythical creature - it had features on it like alligator skin and bumps in odd places, and it was bigger than the previous two combined. This one was anchored to the floor, and the camera not only caught the way it spread her pussy wider and wider as she let herself down onto it, it also caught her facial expression. They ranged from shocked to pained to gasping and then a big grin of satisfaction as she finally had it all up inside her. She began to raise and lower her entire body, and as the speed increased she grabbed her boobs and began to mash them to her chest. I was mesmerized as I watched her clearly approaching an orgasm, and for the first time ever, I came without even touching myself as she did! ",
        "I hit reply on her message, and checked off the box that said to allow her to see my private pictures and videos. In for a penny, in for a pound, as they say. \"Hi Sally. Thank you for letting me see your privates - I can't tell you how many times I came watching them! Watching you ride that big dildo was like nothing I'd ever encountered. I actually came when you did WITHOUT EVEN TOUCHING MYSELF! I don't know the right words for what might happen, but I think we ought to get together and find them. When can we meet? Love, Anne.\" And then I hit send, hoping for the best. \n\nAt that point I turned off the computer and went to sleep. If I recall correctly, I had my first sex dream in years that night! I had forgotten how much fun they were, although I was bit tired when I began my day. And, like the day before, I was noticing things about the people I worked with that I had previously been ignoring. People said \"hello\" and I said it back. People were friendly. Smiling. There were some really good-looking people. Some really hot looking people (meaning both men and women.). It was as if I was emerging from a long sleep or something. Anyway, I made it through the day without incident, and hurried back home. To say I had high hopes would be to put it mildly. \n\nI tried to take my time eating and unwinding from my day. I didn't want to appear as if I was anxious - although I have no idea who was going to see or even care. It took forever for my laptop to start; it decided that an update was necessary and took its sweet time. I used that time to get naked and comfortable. When it finally came up, I went straight to my site and logged in. There was Sally's reply.\n\n\"Wow, Anne, I loved your videos. And when you said you came just watching mine, I was flattered and amazed. What are you doing this weekend? We must get together! Here's my number. Call me - emails are just not enough! Love, Sally.\" It took me a minute or so to pick up my phone and punch in the number, and even longer before I actually pressed the button to connect, but finally I did. It rang briefly and then was answered.\n\n\"I don't recognize this number, so I'm hoping this isn't some sort of insurance pitch\" said the sultry female voice. \n\n\"I think I have some something even better than insurance to discuss. This is Ann. I assume it's Sally.\" \n\n\"You've got that right! I'm so thrilled you called me. God, I loved your videos. And it would seem that mine appealed to you as well. Did you really come from just watching? I can't believe it! I didn't think it was possible! I'm sorry if I'm babbling, but I'm just so excited that you called, especially since I've never done something like this before! What should we do? Do you want to come over now? I'm not sure that would work.\"\n\n\"Hold your horses, Sally. Now would definitely not work, and while I'm new at this as well, in a past life I wasn't a stranger to meeting up for sex. Here's what I'm thinking. I'd be happy to meet you for drinks somewhere near you. If we hit it off, then we can go grab a hotel room on me, or go back to your house and do whatever comes naturally. Including spending the night if it gets to that. How does that sound? Would Friday night work? I can get off work early, and I'll bring along a few changes of clothes. Then we can take whatever time we want. How does that sound?\" \n\n\"It's perfect. We can get dinner and drinks and take it from there.\" We exchanged numbers, she gave me the address of a restaurant near her, and we were set for Friday. Then there was silence. \"It looks like you have an iPhone. Can we Facetime?\"\n\n\"What a great idea! Hang up - I'll call back in a minute.\" I made sure that my camera caught my bare shoulders as well as my head. The audacious nature of it tickled my fancy - and wet my pussy - but I started it out with some dignity and just allowed for the something more interesting. Then I called her back and wouldn't you know it? She had done the same thing except she wasn't being dignified, discrete or demure - her phone was obviously on her desk, and she was framed in it with her arms crossed and a very large set of tits draped over them, grinning ear to ear. \n\n\"Isn't technology wonderful? I LOVE the look, Sally. What I love even more is that you answered my call like that. I started to get naked before I called back, but I just didn't have the courage to start out like that. Let me adjust my camera.\" I managed to find a holder for the phone and pointed it at my recliner, then I sat down and spread my legs, knowing full well that the camera was now showing everything, including my very wet pussy! 'How's that?\" I asked.\n\n\"Hot! Very hot. And it beats that uncertainty of meeting a blind date in a restaurant. I mean, it lacks some things (I'm a big fan of things like taste, smell, aura, feel and tasted - did I mention taste?) but it's like homemade, interactive porn, right? Tell me - are you wet right now? I'm almost dripping!\" With that she pushed back from the camera until I could see hair naked pussy, glistening with her dew.\n\n\"What do you think? I AM dripping! I see why guys have a boob thing - your nipples are amazing. I want to fasten my mouth to them and suck until you come!\" All the while I was busy with both hands - one rubbing my clit, and the other using three fingers to fuck myself. \"Wish I had you here to work something large up into me.\"\n\n\"And I, in turn, wish I was there to accommodate you. I want to push you as far as you are able. I want you to feel so stretched that you can't tell where the border is between pain and pleasure. Then I want to make sure you come like never before! I can't wait for Friday! Go ahead - I want to watch as you get yourself off. I know what a dirty slut you are - just like me - and I want you to know what it feels like to be watched.\"\n\nIt took very little to add my pinky finger, and finally fold my thumb over. I was suddenly filled by my hand deep into my hole. I heard her voice, and tried to follow her instructions. \n\n\"Isn't it amazing? You got your whole hand inserted. You are fucking yourself with your hand, like some depraved, sex starved slut. And you love it, don't you?\" I nodded.\n\n\"Good, now close your eyes. Time to take it to the next level - take out your hand.\" I did, relaxing for a moment.\n\n\"Now, make a fist - because you never did that before did you? You were so turned on by simply getting your whole hand in your hole that you didn't stop to think you could do more. Your fist will stretch you differently. It will make your orgasm even more explosive. Do it, slut!\" The power of her command was something I needed. I followed her instructions and curled my fingers to my palm, wrapping my thumb around them, and could see it was much wider that way than my flat hand. I brought it to my outer lips and began to press.\n\n\"Use your other hand and spread those lips. Spread your legs even wider while you do it. Now press hard!\"\n\nIt was as if I was stuffing a baseball bat into my pussy. I felt stretched in new ways, and in places I had yet to reach as I worked my handle slowly into myself. It was painful, but at the same time I was thrilled by the pain and the sensations it brought. I felt the pains turn into something else as I pressed deeper and deeper. \n\n\"That's right, Ann. You need to feel it burning and stretching. You are nothing but a cunt that needs to be stretched. You know you will love this, and you know that even if you get your arm up in there it eventually won't be enough, will it?\" I shook my head, amazed at how she was able to understand what was going through my mind. Sweat was pouring off me as I continued to press up and in. And then, I was in as far as I could go. I looked up at the screen - Sally was grinning from ear to ear. \n\n\"You did it, Ann. All by yourself. You impaled yourself on the biggest thing you ever used, and you're both ecstatic and in pain, correct?\" I nodded again, unable to speak. \n\n\"Take a moment and appreciate it. Close your eyes and just let go into that feeling of being stretched and pressed and pressured and how amazing it feels. You thought you might tear something, didn't you? But you didn't - you revealed yourself to me as a woman who wants to be filled as full as possible. Hell, I even recorded it, so not only can you make it part of your private videos, you can watch it and appreciate it as often as you want. Are you ready to come now?\" I grinned at her, and nodded vigorously. \n\n\"Yes\" I said through clenched teeth. \"Make me come.\" \n\n\"Oh, you'll come but all I am going to do it talk you through it. So close your eyes and begin to open and close your hand. Feel it press you. Feel it find new places in your cunt. You have two hands. Use that other one on your clit - it isn't going to take much. I want to watch you come like you never have before. Do it!\" \n\nI followed her instructions and gasped as I moved my hand. I can barely describe the feelings; something was alive and moving inside me and places that I had never noticed before were suddenly registering sensations that had never been felt before. And when I added the stimulation of rubbing my swollen clit, I felt my pussy contract and twitch. I felt my muscles jerk and spasm without any ability to control them. My insides exploded and I was transported to some other world. A world of overwhelming sensations. I might even have passed out. I came back into the world to the sound of Sally's voice. \n\n\"Amazing, Ann. Simply amazing. You are really going to have to watch the video to see what you looked like - I can't begin to describe it. Now you should take our time and pull out your hand, then stretch so you don't cramp up from that work.\" Again, I followed instructions. \"How was it, Ann?\"\n\n\"It was the most amazing orgasm ever. I don't know what made it that way. Was it the size of my fist? My being watched? My being told what to do and when? Whatever it was, I am still feeling waves over sensations rolling throughout my body. It's almost like the sensation of being stoned on really, really good weed. I just want to lie here and absorb it. But that's not fair to you.\" I started to protest. \n\n\"Don't worry about that. Really. You should just enjoy it for now, and think about this - it will be orders of magnitude better when you can just lie back and get it done to you. I can hardly wait! I am going to rock your world, woman! Now get some sleep. And, in case you are wondering, I'm going to watch the video I captured while I stuff myself with toys and use my favorite clit vac at its highest setting. Good night, and sleep well!\":\n\nShe hung up and I just got lost in the sensations until I fell asleep. Getting through the next day was a bit challenging - I was tired all day, as well as somewhat sore. I had to work hard at walking normally and not look like I had spent the night with my legs spread wide. Which, of course, they had been, but I wasn't really anxious to broadcast my recent activities. In any case, I managed to get in without a fuss, spent most of my day in my office, at my desk, and between coffee and aspirin - and a covert cat nap or two - I made it until the end of the day. Once I got home I stripped down and threw on a sleep shirt, had a bite and fell asleep on the couch watching the Justice League movie. I didn't even look at my computer! I was up early, refreshed, and took a moment to check into my profile - there were more emails, but for now I was avoiding them. More importantly, I grabbed an overnight bag, put in a couple of changes of clothes, cosmetics and some of my favorite toys and put it in the trunk of the car. \n\nWorked seemed to go on forever - or maybe I was just anxious. In any case, I stayed late to finish some things, but mostly so I wouldn't appear overly anxious by arriving an hour early. I finally left, and before I did I stopped in the ladies room and took off my bra and panties. If there was ever a night for going commando, this was it! Then I headed for the restaurant and my meeting with Sally. As I walked in I was a little self-conscious, wondering if people would notice I was bra-less. When I heard myself worrying about what they would think, I laughed. I was a cum crazy slut who loved stuffing big things into her pussy, coming to meet up with a woman of similar tastes. Who cares what others think! I was chuckling as I entered the restaurant, and saw Sally (thank goodness for Facetime, right?) at the bar at the same time she saw me. We wound up embracing as if we had known each other forever. I already liked this woman!\n\nTaking a seat, she asked me what I had been laughing at when I walked in. \"Simple,\" I said. \"I came here tonight after placing an online ad for some pretty perverted actions and discovering that others didn't think them perverted at all. I was coming here to meet with you because we both have an affinity for extreme sex and we already knew it - and I was laughing because I heard myself worrying about what others might think if they noticed I had taken off my bra - let alone come in with any panties on. Watching how automatically I worried about 'what they might think of me' when I really don't give a fuck struck me as funny. What do you think?\"\n\nSally started giggling. \"I for one definitely noticed how freely your boobs moved, and I liked it. Makes me think I should do the same thing - except mine are bigger and they sag a lot more. We will definitely get some attention if I lose mine!\" \n\n\"Then do it! I'll order drinks while you do. I'm having a slippery nipple - you?\" We laughed. \n\n\"Make that two - and I'll be right back. See if you can see the difference when I come back.\"\n\nIt didn't take very long. The drinks were at the table as I saw Sally emerge from the ladies room. There was a definite difference - her big boobs moved freely as she walked back to the table. I noticed a number of heads turn as she did. \n\n\"You know, every once in a while, I wonder what it would be like to have a pair as large as yours. They are eye catching, and very inviting. I notice you unbuttoned a good deal as well. How much are you planning to show?\" I asked. \n\n\"As much as I can without legal consequences.\" And with that she unfasted another button to show a v of flesh that almost reached her navel, and displayed the inner halves of her large tits. I had to work to drag my attention from them to her face. \"And while the girls can definitely draw a crowd, they're also heavy. That bra now sitting in my back is specially made to add back support. I'll live, and I like the attention. Especially from you! Drink up!\"\n\nI downed my drink and let the waitress know we wanted another round with our dinner (we both ordered burgers and fries). It was fun watching her try not to stare at Sally's display of mammary flesh. We laughed about it when she left, and then I gave her a commentary on who I could see around the place still staring, hoping to see more. She, in turn, let me know that I evidently had some admirers there as well.\n\n\"Probably because of your nipples appearing very prominently\" she said. \"Aren't we the pair? Sluts-are-us, at your service!\" We were still laughing when our food arrived, and I made sure to stick out my chest was the waitress placed my meal in front of me. I watched her eyes as she did - it sure looked to me as if she would be very happy if we invited her to join us for a more private meal. When she left I checked in with Sally.\n\n\"She seemed awfully interested. Maybe we should see if she's interested...\" \n\n\"If we come back here for any reason, and she's here on duty, we will. The more, the merrier. But not tonight, Ann. Tonight you are mine to manipulate. Mine to tantalize. Mine to torture. After that, we'll see. So let's leave and get dessert back at my house, shall we?\" I nodded, we called for the check, and walked out to the parking lot, well aware of all the eyes on our boobs. Just before we walked out the door, Sally muttered \"Watch this,\" then turned around to face the room and pulled her blouse open, flashing everyone. The reactions were wild - and then she closed the curtain and we left, laughing. \n\nWe somehow made it back to her house, a single floor, single family home in a neighborhood with lots of space between homes. I mean, we were both under the influence, and I was following her since I didn't know where to go. She pulled into her drive, I pulled up behind her and we stumbled to the door, her shirt flapping in the breeze and her boobs seemingly with a life of their own. We got inside and she turned on some lights. \n\n\"The bedroom is down the hall. Use the bathroom and get good and empty. Then get naked, get up on the bed and on your hands and knees. I'll be there in a minute. Now move, bitch!\" I was a little surprised at what seemed to be a change of personality, but I had put myself in her hands, so I simply followed instructions. When I got to the bathroom, I found an enema kit in the sink. In lipstick, on the mirror was a note: \"Use it!\" and an arrow pointing to the sink. So I did. I was never a big fan, but she was in charge, so I got naked, set my clothes aside and did what was needed. I stepped out of the bathroom into a darkened room, lit by candles. Sally stood there, naked, with a very large dildo protruding from a contraption around her waist. I stopped and looked at it. \n\n\"That's bigger than I'm used to\" I said. \n\n\"I'm sure it is. But don't worry - by the time we use it, you'll be ready. Now, up on the bed. Face the wall and spread your legs wide. And the proper response, by the way, is yes, Mistress. Understood?\"\n\n\"Yes, Mistress.\" \n\n\"Remember what you are here for. You came here for pain and pleasure. You came here because you can only be satisfied by suffering as you come. I know that. I am an expert in that because I am the same way. You are mine. Your pussy is mine. Your ass is mine. If you need me to slow down, the safe word is yellow. If you need me to stop completely, use the word red. We'll pause on yellow and drop out of role to discuss things. We'll stop immediately on red and do the same. Other than that, you are free to say anything you want and I'll probably ignore it. Are you nervous?\"\n\n\"Yes, mistress.\" \n\n\"Good. As it should be.\" And then I felt the bed shift as she got on it. Suddenly, warm hands were holding the globes of my ass and caressing them. The circles they were making were getting closer and closer to my sensitive spots, and soon her hands were toying with my lips. They were moving up and down my crack, slowly pressing into the flesh around both my asshole and my pussy. I felt myself getting moist, and my hips began to respond to her strokes. Then I felt hot breath in my crack and the sudden stabbing of a hot, wet tongue on my newly freshened asshole. I moaned.\n\n\"You like that, don't you? You weren't expecting that, were you? No need to answer, just enjoy the sensations.\" Then her tongue was once again probing that rear hole, pressing harder until I began to relax the muscles and allowed her entry. The minute her tongue was in me, she inserted a finger deep in my pussy. As she continued her oral attack, she soon added another finger, then another, and when she slipped her pinky in as well, I began to come! \n\n\"Oh, this is going to be fun! I need to record this!\" With that she left me on my hands and knees, my asshole wet and now empty, my pussy pulsing with the remains of the orgasm. I had put my head down on the bed and had closed my eyes to enjoy the sensations. Though my eyes were closed I heard a snap as sensed the room brightening as she turned on the lights. As I found out later, she had a pretty elaborate camera setup that she then activated - it later let me watch my facial expressions as she kept expanding me, as well as what and how she was doing. The end result is far better than any amateur porn I ever encountered. I became an art film, essentially. ",
        "\"Turn over and lie down. Spread your legs wide, girl. Now we are going to get started for real!\" I did as she said, and opened my eyes to see what she had in mind. Her mind was definitely more devious than mine - I watched as she lubed a butt plug. I tilted my pelvis to make my ass more available, and reached down to separate my ass cheeks in preparation. She smiled, nodded, and spilled lube on my ass. She quickly began pushing it in and around my hole, and I did my best to relax and let her. Soon she had two fingers moistening the insides of my butt, and then she began to insert the bulb of the plug. I had taken cocks up my ass that were bigger, but that had actually been years ago. I relaxed and kept breathing deeply until I felt that tiny circle of flesh contract around the base of it, essentially locking it in place and leaving me feeling stuffed. \n\n\"Like that?\" She asked.\n\n\"Yes, Mistress.\" \n\n\"Good. It's a good start. Now spread those legs wide.\" With my eyes closed I did as she told me, and gasped when I felt her hot mouth suddenly slurping away at my gash. She fucked me with her tongue. She sucked on my clit. She inserted three fingers in my hole and began to fuck me with them. Once again I wound up coming. Harder than before, actually. But this time she took it in stride and continued to like and suck. I was concentrating on those sensations and was suddenly alert to something much larger than three fingers attempting to enter me. \n\n\"Keep your eyes closed. Relax and open up. That's all there is to do.\" I nodded, unable to speak. Whatever it was, it seemed bigger than her hand so far. As odd as it sounds, I concentrated on relax the muscles of my pussy and felt whatever it was begin to move into me, slowly. As is pressed deeper, I realized it was a large dildo and that allowed me to relax even more. Just writing about it brings back the memory of feeling myself stuffed and stretched. Soon it was deeper in me than I recalled anything. I had the fleeting thought it was going to go so deep it would come out of my mouth, like an enormous alien tentacle. I miggled - a combination of moan and giggled - and shared it with her. Soon we were both laughing out loud, although when I watch the video my voice doesn't even sound like me. Weird. \n\nEventually, having driven that massive hunk of silicone deep up inside me, she withdrew it slowly. \"Ready for what 's next?\" \n\nI could only nod. My now empty cunt was anxious to be filled again. I didn't have long to wait, however, as I felt what was clearly her fist begin to insert itself between my folds and into my hungry tunnel. The stretch was different; it was uneven as different parts of her hand pressed into my walls. Instead of a uniform expansion like that of the dildo, I had a moving, live thing up inside me and I was intrigued by every new sensation. I was also VERY stimulated by it, as well. At some point she couldn't get any further and began to withdraw her hand. She pulled it out as slowly as she had inserted it, but before it was completely out she began to put it back into me. It was the beginning of her fist fucking me and I loved it! \n\n\"Grab your boobs. Especially your nipples - twist them and squeeze them and feel the sensations spread to your cunt. And get ready for more.\" Her hand was on the upstroke, almost out of my cunt. As she pulled out, she uncurled the fist and slipped her fingers back in - and then I felt her other hand make its way into me to meet it. Holding her hands together as if in prayer, she began to work both of them into my tortured pussy. I was stretched. Filled. Expanded. It hurt like nothing every had, and yet it wasn't enough to call a stop to things - I was on the verge of coming with every fiber of my being. The video shows how I was straining every muscle of my body until her mouth fastened on my clit and I exploded! Watching, I looked as if I was having an epileptic seizure, twitching and jerking and spasming. I was incoherently babbling throughout. Tears ran down my face. My eyes rolled back in my head - I actually had never seen that until we watched the video, but it really happened. Ultimately, I passed out.\n\nAt some point, I came to. My pussy was empty. Sore. I felt minor earthquakes of sensation in and around my body. When I opened my eyes, there was Sally, wiping her hands and arms with a towel and grinning like a fool!\n\n\"Ready for more?\" \n\n[To be continued? You tell me.]"
    ],
    "authorname": "ndeavour",
    "tags": [
        "exhibitionism",
        "fisting",
        "lesbian sex",
        "masturbation",
        "extreme dildo play"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/in-matters-of-size-size-matters-ch-01"
}