{
    "title": "Reichenbach Ch. 04",
    "pages": [
        "The chronological order of my stories is as follows:\n\nTodd & Melina series, Interludes 1-5, Sperm Wars series, Russian Roulette series, Case of the Murdered Lovers series, Case of the Murdered Chessplayer series, The Swap series, Interludes 6-10, The Murdered Football Player Series, Case of the Black Widow series, Teresa's Christmas Story, The Case of the Black Badge series, A Case of Revenge series, Teresa's Summer Race, The Trilogy series, Dark Side Of The Force series, Caught In The Act series, The Phyllis Files 1-2, Case of the Murdered Bride series, The Credit Card Caper series, The Phyllis Files 3, The Hot Wives Investment Club series, Seriously Inconvenienced series, Case of the Paper Trail series, Christmas Mystery Theater, The Porno Set Mystery series, The Medical Murder Mystery series, The Eightfold Fence series, The Phyllis Files 4, Pale Morning Light series, Silverfish series, Cold As Ice series, Secrets of Apple Grove series, Sting of the Scorpion series.\n\nReichenbach, Ch. 01-04.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n\n\nPart 14 - A Missing Crowbar \n\nCaptain Cindy Ross, Chief of Detectives of the Town & County Police Force, came up the driveway of the Cabin. She saw Lt. Tanya Perlman and Crime Lab Technician Christina Cho beside Don's Police SUV, and several Uniformed officers on the periphery. The road at the end of the driveway and below the cabin were a blaze of blue and white lights.\n\nShe also noticed Police Chief Harold Bennett and Town & County Sheriff Daniel Allgood were already here. She'd been delayed by taking Jenna to the Mountain Nest. Jenna and Phyllis were staying with the kids while Laura came up with Cindy.\n\nLaura was calm, but unnervingly so, and Cindy both knew and sensed in her soul that she was in the presence of a woman whose years of training were overcoming some intense emotion. She realized that she would need the same resolve in order to be professional and not let what she was feeling right now... a fear that was almost paralyzing... overcome her. They arrived at the scene, which was busy with activity but abnormally somber and quiet.\n\n\"Rudistan!\" Cindy called out immediately when she saw him. \"Get on the radio and tell everyone to turn off all the lightbars. Every last one of them. There's no traffic on that road, and all we're doing is begging the Media to see the lights and come up to investigate them.\"\n\n\"Yes ma'am.\" Rudistan said. He got on the radio and soon there were no more flashing lights, except for one car's lights inside the back window for the benefit of any traffic that might drive up. Meanwhile, Cindy was at the SUV, ignoring Chief Bennett, who had been peering hard at her from the moment she'd arrived.\n\n\"What's going on, Perlman?\" Cindy asked.\n\n\"Rudistan and Morton got here first.\" Tanya said. The driver side door of the SUV was open. The Commander's gun belt, gun, radio, and badge were on the driver's seat. Looks like they were thrown in there. His cellphone is also in there.\"\n\n\"So we can't trace the RFID chips and transmitters in his gun holster or his badge, nor triangulate the radio's signal nor the cell phone.\" Cindy said. \"Someone knew enough to do that.\"\n\n\"That's right.\" Tanya said. \"Also, a thin metal chain dog leash was found on the ground, but the dog is not here, either.\"\n\n\"The dog is okay.\" Cindy said. \"Bowser ran back to the Mountain Nest and got Laura's attention. She called me, and I had the Duty Desk call you and send a patrol up here. Any signs of... something bad happening?\"\n\n\"No blood.\" said Tanya, which instantly made Cindy feel some relief... and Laura even more relief as she was not far behind Cindy, listening in. \"But his car keys were on the ground right under the door, as if he'd dropped them right there. And... uh, ah...\" Tanya paused, then said with a rush \"... his crowbar is still in the SUV, too. He hadn't taken it out yet.\"\n\n\"Ah, shit.\" Cindy groaned. \"He'd have that in his hands if he was looking around. That means someone ambushed him.\"\n\n\"Yes ma'am.\" Tanya said, her face somber. \"This dirt and gravel driveway isn't much for leaving traces, but it looks like there was some displacement here right by the door., then a little path for about five feet... I think someone came up behind Don as he was getting the dog out of the car, knocked him out, then began dragging him before picking him up and carrying him out of here. The dog must've run home.\"\n\n\"Yes. He's a good dog.\" Cindy said, wondering why she was thinking of small things like that at that moment in the face of her world about to come apart. \"Sergeant Rudistan!\" she yelled out.\n\nThe Sergeant came running up as fast as his semi-portly body would allow. He was in better shaped than he looked, and hustled up quickly.\n\n\"Rudistan,\" Cindy said, \"it's way too early to begin panicking and putting out public APBs or anything that will get the Media excited and starting rumors. Get with the Duty Desk and have them put out quiet messages, through the Precincts, to be on watch for the Commander. But keep it on the down-low. He may just have gone off following some clue that he doesn't want me to know about, or he may be in real trouble, so we need to start looking, but quietly.\"\n\nShe continued: \"Start securing all video footage of this entire road, all the way down to University Avenue and over the hill to Reservoir Lake, whatever exists, which I doubt is much. And for what it's worth, have Myron check the GPS in this vehicle.\" Rudistan acknowledged his orders and stalked off.\n\nCindy walked up to Chief Bennett and Sheriff Allgood, who'd been watching from the driveway, halfway between the gate and the SUV. She reported on what had been found, and what had not been found (blood).\n\n\"We should put out APBs.\" said Chief Bennett. \"And let the FBI know.\"\n\n\"Sir,\" said Cindy, \"I'm about to call the FBI now, but we should not put out public bulletins until we get an idea of a vehicle that came up here, or more information. And that's to keep the Media from getting onto this prematurely.\"\n\n\"But he could be coming to harm right now, and we're standing here doing nothing?\" Bennett asked skeptically.\n\n\"Chief,\" Cindy said, working hard to keep herself calm and restrained. \"If whoever took the Commander wanted him dead, we'd be examining his dead body right here and right now. And until we get some video footage of a vehicle, we have absolutely no idea what to ask anyone to look for.\"\n\n\"She's right, Chief.\" said Daniel Allgood quietly as Chief Bennett was about to say something. \"We can't do anything hasty. Let's let these guys do their jobs.\"\n\n\"All right.\" Bennett said, almost sighing with resignation. \"By the way, Captain, why is the Commander's wife over there at the crime scene? I know she's his wife, but she shouldn't be there.\"\n\nCindy whirled to face Bennett, her mouth gaping. Daniel intervened again.\n\n\"Go ahead on over there, Captain.\" said Allgood. \"I'll explain to the Chief.\" As Cindy went back towards the SUV, Daniel said to Bennett: \"Chief, Dr. Fredricson is technically an Auxiliary Police Officer as well as one of our Police Psychiatrists, so she can legitimately be there. But beyond that, Harold, if you want to try to tell a Deputy Director of the CIA to leave the scene of her husband's disappearance, be my guest. Just leave your Last Will and Testament with me before you do.\"\n\nChief Bennett said no more. He continued to watch Ross, waiting to see if the pressure and her own emotions would break her. He was watching to see if Cindy Ross was capable of being a Police Captain, if she was good enough to get the job done.\n\n* * * * * * * * * * * * * * * *\n\n\"Ah, shit.\" said Cindy. The KXTC van had hurtled up the road and almost collided with police cruisers along the road. Bettina Wurtzburg and her cameraman Scott Turnbull rushed out of the van and tried to run up the driveway, where they were roughly pushed back by TCPD officers, who then rushed to form a human barrier to prevent not only their access, but their lines of sight to take camera footage.\n\n\"Captain Ross!\" called out Bettina, having seen Cindy already. \"What's going on here, Captain? Why are all these police vehicles at Commander Troy's home?\"\n\nAll eyes were on Captain Ross as she walked resolutely to the gate. Cindy said with alacrity \"The Commander's dog is missing, and was last seen at this location. We're looking for it.\"\n\n\"C'mon, Captain,\" said Bettina, her voice turning scornful and full of acid wit. \"All these officers? And acting more like their dog died than just being missing? And the last time police officers got this rough with us was when Pete Feeley was murdered. What's going on up there?\"\n\nCindy glared hard at Bettina. The reminder of Pete Feeley's death did not go over well with her. \"I'm sure the dog will tell you when he's found and interviewed.\" she said. Feeling herself losing restraint, she turned away from the reporterette and went back to the SUV.\n\n\"Okay, let's wrap this up.\" Cindy said. \"Just lock the SUV and leave it here when you're done. Give me the keys. And no one is to say one god-damned word to the Press...\"\n\n* * * * * * * * * * * * * * * *\n\nI was unable to move as I lay uncomfortably on the floor of the back of the van. My hands were secured behind my back by my own handcuffs. But I wasn't as unconscious as my kidnappers might have hoped; their knockout drug must've been weak and had not fully knocked me out. I was dimly aware of the streetlights going by the windows outside the van. And I was aware enough to realize that we'd turned off the road coming down the mountain onto University Avenue, and had stayed on it, going straight south.\n\nThe road became the highway to Coltrane County and ultimately Midtown. It was now dark outside the van as we traveled through the countryside. Everyone in the van was totally silent, and I could sense the nervousness of these perps.\n\nNot long later, the van slowed down, and I knew I was correct about our destination. We turned right, and went down a road that could use a re-paving. We stopped.\n\n\"Nobody's here.\" whispered one of the perps.\n\n\"Open the gate.\" said another perp, the leader. I recognized the voice through the mask.\n\nTwo perps got out of the vehicle and I heard a gate being opened. The van drove through, stopped as the gate was closed, then everyone got back in and we drove a few hundred feet further.\n\n\"It's dark.\" said the driver. \"Looks like no one is there.\"\n\n\"They're there.\" said the leader. \"Eckhart has a bedroom near his office on that top floor. Number 2 and I will scale the wall. You two stay here. If Troy wakes up, don't knock him out again.\"\n\nAs I'd surmised, we were at the World Headquarters of Dr. P. Harvey Eckhart's 'The Vision'.\n\n* * * * * * * * * * * * * * * *\n\nDr. Eckhart's office was circular, with windows as the walls and giving a view in all directions. On the back side, which was west and overlooking the River, was Eckhart's desk, with the sofas and chairs being in the middle under the domed skylight. Just to the left of the desk, west-by-northwest as the crow flies, were French doors that led onto a balcony that served as a small deck for anyone to sit on and view the River and farms beyond it, and the lush grass of the back lawn of the building.\n\nRopes with grappling hooks were shot up by crossbows to the rails of the balcony. Once they secured themselves, the two masked, black-clad men climbed the ropes and went over the rail onto the balcony. Somewhat to the perps' surprise, the door was not locked, and they went inside.\n\nSitting on one of the sofas in the middle of the dark room was Dr. Eckhart. The shock of bright white hair was clearly visible. The perps walked up to him, and one man put a silencer-equipped .22 Magnum semi-auto pistol to his head, waking him up.\n\n\"Oh!\" he said as he jolted awake. \"Ah, I see I have guests.\" he said. \"What can I do for you... Mr. Wargrave?\"\n\nPart 15 - Brainwashing \n\n\"You are a psychic.\" said Wargrave, taking off his mask. \"But we don't have much time. I want four of your people to get my prisoner out of the back of the van parked out front, and bring him inside here. You will then use the techniques on him that you used on Eleanor Burke and your acolytes Tommy and Candy, for a purpose I'll tell you at the proper time. Don't get cute, or my people will start killing as many of your people here that we can get to.\"\n\n\"No, no, I'm not a violent man.\" said Eckhart. \"I'll do as you require.\" He got up, and keeping his hands where they could be seen, he went to his desk and picked up the phone. \"Yes, Tommy, would you and four young men come to my office for a task of some importance? Thank you.\"\n\nWargrave figured that the words 'for a task of some importance' was code for this situation... and he was right. But it was committed now, there was no backing out, and he couldn't kill anyone until the mission was completed.\n\nMoments later, Tommy and three other young men, dressed in red 'Vision' golf shirts and black slacks, appeared in the office. They were confronted by their great leader being held at gunpoint by two masked men, but showed no shock nor visible distress.\n\n\"Tommy,\" said Eckhart, \"I don't want any foolishness. Get that gurney out of the infirmary room and take it to the front of the building. There will be a man in the back of the van. Bring him up here and take him to the Therapy Room.\"\n\nThe Therapy Room was one floor below the office. Eckhart led the way down the stairs as Wargrave kept him at gunpoint. Minutes later, they were joined by the acolytes and three masked men, wheeling in an unconscious man on the gurney. Eckhart groaned as he saw the man; it was the Iron Crowbar.\n\n* * * * * * * * * * * * * * * *\n\nIt was painful and I had to work to not yell out as I was roughly transferred from the gurney to the massage-like table in the room. My handcuffs had been removed. The room was wood-paneled, with cabinets of chemicals along the walls. Above was a strange, semi-spherical device with multi-colored glass circles that I guessed would emit lights.\n\n\"So,\" said Eckhart, \"what exactly do you want me to do with young Donald, here?\"\n\nI heard the voice, which I knew was Henry Wargrave's, say: \"I want you to induce the suggestion that when he hears the correct phrase, he will kill his wife.\"\n\n\"I can't do that.\" said Eckhart. \"It won't---\"\n\n\"If you don't do it,\" one of the other masked men hissed, \"I'm going to start killing people. Starting with this piece of crap.\" He put his silencer-equipped gun practically into Tommy's earhole. Tommy did not flinch, but looked at Eckhart as if for instructions.\n\n\"Let me finish, young man!\" ordered Eckhart. \"What I'm trying to tell you is that it won't work. The man loves his wife, not even the process run ten times over would make him kill her. He'd be able to pull back from it; the emotions are too strong.\"\n\n\"Maybe killing some people will change your mind.\" said the second perp. He raised the gun to Tommy's head again, but Wargrave stopped him.\n\n\"So how did you make it work on Eleanor Burke?\" Wargrave asked.\n\n\"This is very advanced hypnosis,\" said Eckhart, \"but it's still hypnosis, and you can't force someone to do what they would abhor doing. Eleanor wanted to kill Ned, so it was easy to program her to do what she wanted to do in the first place. The others wanted the results the process gave them, whether to forget an act of violence upon them, or to give up a severe drug addiction, or whatever. But no matter how deep we go, or how many times, there is no way this programming could force young Donald to murder his wife.\"\n\nWargrave was not happy to hear that, but he sensed that Eckhart was telling the truth. \"Okay...\" he said, thinking about it, \"what if you programmed him to induce him to believe he's playing a joke with a fake gun on his wife?\"\n\n\"Young man, ears are to hear with.\" said Eckhart. \"Listen to my words: there is no way this process can be used to program this man to murder his wife. He cannot be tricked into it, either. His subconscious will reject the programming immediately.\"\n\nWargrave sighed, seeing that his master plan wasn't going to work as he initially envisioned (pun fully intended). \"Okay,\" he said, \"what about someone else, say, Jack Muscone? Have him believe he's playing a joke on his friend with a toy gun, and that his service weapon is actually a harmless toy. Would that work?\"\n\n\"Er, that might work.\" said Eckhart. \"It will take a hard, deep process, but he could be made to believe his gun is a toy, and that it's all a joke on Mr. Muscone.\"\n\n\"Do it, then.\" said Wargrave. \"You have until dawn to get it done.\"\n\n* * * * * * * * * * * * * * * *\n\nI heard a lot of bustling around for a while, then suddenly the smell of ammonia salts blasted through my nose. \"Uhhh!\" I said, shaking my head.\n\n\"Just relax, Don.\" I heard a voice say. \"We're going to give you a relaxing massage... a massage for the mind.\" I felt earplugs, like Apple iPhone earplugs, being put in my ears, followed by the sounds of soft music and waves lapping at the shore. \"Just relax.\" the voice said. Then that strange spherical device in the ceiling came to life, and multicolored lights were flashing in my eyes. I felt myself drifting...\n\n\"He's under, the spell is working...\" said Eckhart some moments later. That caused me to have a feeling of d\u00e9j\u00e0 vu; I felt like I'd been here and heard that before... I must've dreamed it...\n\nThe multi-colored lights continued to flicker, and I smelled something that resembled patchouli oil. I then felt myself being injected with drugs. I felt the burning sensation as the drugs spread up the vein in my arm, then through my body. I felt like I had to pee, then something right painful in my penis... I was being catheterized.\n\nThe delta waves assaulting my ears were then joined by voice, a voice almost too quiet to hear, but was persistently there. \"You are getting very sleepy.... close your eyes...\"\n\nVoices continued. Then I heard \"Take out the toy gun.... shoot Jack Muscone.... he's laughing at the joke...\" I felt thirsty, I had to pee. I let the pee go, and it seemed to go on forever. Another needle in my arm, this time an I.V...\n\nEverything was swirling before my eyes now, the glittering lights fusing into one blurry mass of color. I was seeing Officer Pete Feeley standing over me, telling me to relax... then I heard the words \"Jabberwocky Joyful Jehosephat\". Over and over again, I heard those words... then was told to forget them until I heard them again...\n\n* * * * * * * * * * * * * * * *\n\nIt was 3:00am, and Police Headquarters was as busy as if it were 3:00pm. Though it was not their shifts, many officers had come in. Their Commander was missing, and sleep could wait.\n\nThe Chief was in his office with Sheriff Allgood and Jack Muscone, who had been called and apprised of the situation. Cindy Ross was in her office; she'd gotten tired of feeling the Chief watching her relentlessly. Teresa Croyle and Tanya Perlman were also in Cindy's office, drinking strong coffee.\n\nMyron Milton and Mary Mahoney Milton had worked the computers like never before in their lives. Fifteen minutes ago, they'd put together video images cobbled together from various street cameras and other cameras to which they could electronically access, and they were not giving a damn about warrants at the moment.",
        "\"So, a black van was videoed going up the road towards Don's cabin.\" Cindy told her Lieutenants. \"Just before 10:00, which was when Don did a radio check with the duty desk. It came back into Town about 10:20, and headed straight down University Avenue, going south out of Town. Our last shot of it was crossing the railroad tracks just south of Junction Station.\"\n\n\"Coltrane County?\" Tanya asked.\n\n\"We've got patrols on all of the farm roads down there.\" said Cindy. \"Looking in ditches and everything. I called Sheriff Sorrells in Coltrane County and told him about the van, gave the license plates and told him it might be a kidnapping. He caught on quick that it was Don.\"\n\n\"No Media, at least not yet.\" said Teresa. \"Who's with the kids?\"\n\n\"I convinced Laura to go home.\" Cindy said. \"Don's mom and Melina are also there. And we have a patrol cruiser station at the entrance to their driveway, and Campus Police are guarding the walking path down to Campus from the house. A bit like closing the barn door after the horse has left, if you ask me.\"\n\n\"If it keeps the kids safe, it's worth it.\" Teresa said. \"Want me to go there, too?\"\n\n\"No, I need you here.\" Cindy said. \"Both of you. Tanya, you're the liaison with Jack Muscone and the FBI. I don't think I've ever seen that man as worried as he looked when he barreled into the Station. Teresa, I'll need you to coordinate working Confidential Informants all over the place. Get any word you can.\"\n\n\u2028\"Grubby Paul and Lorena Rose have been doing that for two hours.\" said Teresa. \"As of about twenty minutes ago, nothing was going on. I'm afraid that if we ask too many questions, that in itself will start rumors.\"\n\n\"Yeah.\" said Cindy. \"Shit. I really wish I was a Troy right now, or at least could think like one.\" Her eyes glazed as she went into a reverie, trying to make her mind work.\n\nTeresa peered at Cindy, and then whispered to Tanya \"Why don't you go check with Jack and see what the FBI has?\" Tanya looked funny at Teresa, but left the office. Teresa got up and went over to Cindy's side of her desk, and pulled her out of the chair.\n\n\"Don't.\" Cindy said. \"I'll break down, and Chief Bennett is watching me like a dog, just waiting for me to slip.\"\n\n\"Forget him.\" Teresa said, hugging Cindy. \"You need this.\" Cindy gave in and hugged Teresa back. It was like clinging to a life raft as Cindy tried not to let her emotions overcome her.\n\n\"It'll be okay.\" Teresa whispered. \"We'll find him. It'll be okay...\"\n\n\"Oh God, I hope so!\" Cindy whispered. The tears could not be stopped and she held on to her friend for a very long minute.\n\n* * * * * * * * * * * * * * * *\n\nTanya Perlman knocked on the Chief's door and was admitted. \"I'm now the official liaison to the FBI.\" she announced. \"Any information?\"\n\n\"No.\" said Jack Muscone, looking very much like he needed a drink, his face beset with worry. \"You guys have come up with a van and plates and put out an APB. I contacted all the airports in the area, but I don't think that's going to do any good. And I called my boss. Other than that, I feel totally helpless right now.\"\n\n\"We all do.\" said Daniel Allgood. \"But Don can take care of himself. He's gotten out of worlds of shit before.\"\n\n\"Yeah.\" Tanya said, trying to put a positive face on things. \"I'm hoping this is just some undercover trick he's doing, and he'll walk in the door and look at us and say 'What are you guys worried about?' or something.\" Daniel nodded, trying to hold on to the positive, also.\n\n\"Lieutenant Perlman, how is Captain Ross doing?\" asked Chief Bennett. Tanya immediately knew what he was asking. Daniel did too, peering hard at Chief Bennett.\n\n\"Like an Iron Crowbar.\" said Tanya flatly and pointedly. \"Holding rock steady through anything and everything.\" Muscone grunted agreement.\n\n\"Jack, Tanya,\" said the Sheriff, \"why don't you two go get some coffee or check in on something. I need a moment with the Chief.\" Tanya helped to get Jack up and moving and they left.\n\nTurning to Chief Bennett, Daniel Allgood said \"Chief, I am more than impressed with how Captain Ross has handled this situation, and herself as well. She did a brilliant job at the crime scene, having them turn off the lightbars to keep the Media from seeing the commotion, taking charge, getting the facts, not overreacting. I don't think a Police Captain with ten or even twenty more years experience could better exhibit leadership.\"\n\n\"Oh, I agree.\" said Chief Bennett. \"I very much agree.\"\n\n\"Good.\" said the Sheriff. \"You know, Harold, it's been uncanny how well the Iron Crowbar has been at putting the right people in the right places. No one would ever have put Teresa Croyle in charge of any unit, much less a Vice Squad, but Don saw through that and she's been a spectacular success there. He was the one that put you in that Chief's chair, and I think that has been very good, and... if I do say so myself... he saw more than I did when he had me run for Sheriff instead of being pressured to run himself.\n\nAllgood peered hard at his Police Chief as he said \"So when he said that Cindy Ross was the right choice for that Captain slot, I knew he was absolutely right. And he didn't put her there to be his pet dog... he put her there to lead in exactly times like this... when he's not here. I hope to God he'll be found safe, and soon... but if he's not, you'll have no better situation than Cindy Ross taking over for him.\"\n\n\"I hope we don't have to find that out, Sheriff.\" said Chief Bennett, trying to not get the message the young Sheriff was pointedly delivering. \"I do hope we don't have to find that out...\"\n\n* * * * * * * * * * * * * * * *\n\n\"About two more hours.\" said Eckhart. \"It's all autopilot now. The tape and the program will have to run its course and finish. If you interrupt it, then everything is undone and the process will not work.\"\n\n\"Good.\" said Wargrave. \"What then?\"\n\n\"Just let him wake up normally. Make sure you don't mention those three words to him until you're ready to set him off. Once they're said, he'll move to do his mission... but it's a one-shot deal.\" Eckhart's arms were folded, and Wargrave did not see the older man's left hand under his right elbow giving signals to Tommy and the two other acolytes in the room.\n\nEckhart slowly walked over to a cabinet, seeming to check on a bottle. Tommy was against the far wall, where there was no cabinet or countertop, the other two young men behind him. Suddenly, trap doors opened, and the 'Vision' acolytes and Eckhart sprang through them!\n\n\"Get them!\" roared Wargrave. They rushed to the panels, but the doors were secured. There were no hostages left. Wargrave and his associates had intended to kill them, but they'd gotten away from him!\n\nEckhart and the acolytes quickly descended the circular stairs in the secret passages to the basement. Other 'Vision' people were at another passage, and as the group joined them, they all scurried down the passage, sealing doors along the way. This passage led to the dorms, which doubled as a very secure fortress. Despite his love of Peace, Eckhart's people were exceptionally well-armed, and nothing short of a nuclear attack would root out his people from their defensive stronghold.\n\n* * * * * * * * * * * * * * * *\n\n\"Okay, lets think about this.\" Cindy said as she, Tanya, Teresa, Jack Muscone, Sheriff Allgood, Chief Bennett and Detective Martin Nash sat in Classroom 'E'. \"We know the van went south. We've scoured the southern part of this County, there is nothing there. So I'm thinking they went into Coltrane County.\"\n\nThe clock said 4:45am. Coffee was no longer an option; bladders were protesting harshly by now.\n\n\"They didn't go through Buford,\" said Jack Muscone. \"I authorized Myron to access FBI resources, and he went through all the cameras on the streets approaching Buford as well as businesses like gas stations along the road. I'm sure you'll deny ever having heard this, but we looked into The Asylum's cameras that cover the road, as well. No black vans at all drove by there.\"\n\n\"So they didn't get that far.\" said Tanya. \"That leaves that farm cooperative just south of the border, and 'The Vision' World Headquarters.\"\n\n\"They might take Commander Troy to the cooperative if they wanted to dump his body there.\" said Nash.\n\n\"Or maybe Eckhart and The Vision people wanted him for some reason.\" said Muscone.\n\n\"I tend to doubt Dr. Eckhart would want to harm Donald.\" said Sheriff Allgood. \"They seem to be friends, from what I'm hearing.\"\n\n\"That guy is very dangerous.\" said Muscone. \"He had run-ins with the FBI some years ago. We still don't trust him nor his motives. He knows a lot of stuff, too. If I didn't know better, I'd think he was this Shadow Man Don keeps talking about. He's certainly capable of being that person.\"\n\n\"I have my doubts about that... about him being the Consultant of Crime.\" Cindy said, not revealing that Eckhart had not made Don's 'Eightfold Fence' list... but that one person in the room now had made the list, and was now the one defending Eckhart. \"But that doesn't mean he wasn't taken down there for some reason.\"\n\n\"Can anyone go down there and visit them?\" asked Chief Bennett. \"I doubt we'll get a warrant to go in there. The judges down there are sketchy.\"\n\n\"They're downright corrupt.\" said Tanya Perlman. \"We could send Joanne Cummings down there, undercover. She could pretend to need Enlightenment.\"\n\n\"Tell you what.\" said Captain Ross. \"I'll contact Deputy Strait and ask him to just check in with them, and also look along the road to the place. If nothing turns up, those of us who can play SBI and FBI agents will have to cross the County line and start looking around northern Coltrane County.\"\n\n\"I'm putting out a State-wide APB for that van at 9:00am.\" said Chief Bennett. \"We can't wait any longer.\"\n\n\"I agree, Chief.\" said Cindy. \"That just leaves one other very important mission.\"\n\n\"What's that?\" asked Sheriff Allgood.\n\n\"Who's going to make the run for '5-hour Energy's?\" asked Cindy. That made everyone realize how tired they were.\n\n* * * * * * * * * * * * * * * *\n\nI must've been drifting in and out of sleep. Those lights were just blinking relentlessly, shifting and changing, brighter then darker, the noise in my ears more irritating than soothing. I felt like I had to pee again... oh, wait, I don't think I ever stopped peeing. I kept hearing words, over and over again....\n\nPart 16 - Recovery \n\nI woke up. I felt cold. Not like the cold I felt on the night Ned shot me, but cold nonetheless. I realized I was wearing only underwear, and lying on a metal table. The I.V. had been removed from my arm, but I was still catheterized. I removed that and slowly sat up on the table. I felt dizzy, and groggy.\n\nThere was absolutely no one in the room. I got up off the table, walking slowly and jerkily as I regained control of my body. My clothes were on a chair in the corner of the room, including my bulletproof vest, but my gun belt and its contents weren't there... oh that's right, someone took them off. My memory was hazy. All I could really remember were flashing lights. I remember words being said to me, but I couldn't remember what they were.\n\nI exited the Therapy Chamber, carrying my clothes. The only unlocked door led to stairs going up, so I slowly climbed them, feeling tired as I did. At the top was a landing which opened into P. Harvey Eckhart's office.\n\nThe office was empty. Looking out the windows, I could see the light of pre-dawn in the east. I remembered I needed to get dressed, and I did so, sitting on a sofa to put on my shoes and socks. As I finished I looked up. The sun was just peaking over the eastern horizon, first a tiny red line, then a larger, brighter orange sliver.\n\nI looked around the empty office, seeing the two Fourth Runes still hanging on the posts behind Eckhart's desk. Time for him to give those out, I thought to myself as I headed towards the elevator.\n\nThe first floor was empty. Indeed, the entire building appeared to be totally empty. I looked around, seeing the room where visitors were 'analyzed' to see how they could be helped by The Vision. But I didn't dawdle, I had to be on my way.\n\nAs I walked out the front door, the rays of the sun were in my face. I could see that the driveway was empty. No vans, nor any other vehicles. And that's when I realized I had no cellphone on me. The front door to the building was locked; I could not get back inside, even if I wanted to. I went towards the guardhouse at the front gate. No one was there, which was totally strange, and the guardhouse doors were unlocked. The telephone inside was simply a direct line to the security offices inside the main building; there was no way to contact the outside world. Okay, then, I thought to myself, I get to walk home. I started out, feeling the warmth of the sun on my face as I headed east along the road.\n\nI stopped to pee, still feeling the need to do so after having those drugs in me the night before. Now why was I given those drugs? I thought to myself. I started out again, remembering that Bowser had been with me when everything had gone to shit. Was my dog okay? I wondered to myself.\n\nFortune favored me. As I got about halfway down the road to the main highway, I saw a car coming out of the sunlight. It was a police vehicle!\n\n\"Well, well, well.\" said Sheriff Sorrells, pulling up alongside me. Deputy Strait was riding shotgun. \"What in the world are you doing here, Commander Troy?\"\n\n\"That's a good question, Sheriff.\" I said. \"And I have no answers right now. Think I can get a ride back home, or to Buford so I can call for one?\"\n\n* * * * * * * * * * * * * * * *\n\nWhen the Coltrane County Sheriff's car got to the gate to enter the secure employee's parking lot of TCPD Headquarters, it was manned by Patrolman Johnson. \"What can I do for you, Sheriff?\" asked Johnson.\n\n\"Oh, I'm just giving this gentleman a ride to work, son.\" said Sorrells. Patrolman Johnson looked into the backseat and saw me.\n\n\"Commander!\" he gasped out. \"Thank God your safe!... er... sorry sir, that's not professional.\"\n\n\"Yeah, don't worry about it, I'm not looking too professional, either.\" I said, realizing I didn't have my badge nor I.D. \"Can you let me into the building?\"\n\nI thanked the Coltrane County officers and asked if they'd like to come in for coffee. Being police officers, they accepted an offer of coffee, of course.\n\n* * * * * * * * * * * * * * * *\n\nWe went to my office, where I had an extra badge. I put it on my belt, then made the coffee. As we drank, we watched the one and only Bettina!\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the reporterette. \"Channel Two News is investigating an incident that occurred at the home of Police Commander Donald Troy. Police arrived at Commander Troy's home last night, where a statement was made they were looking for his dog. While we at Channel Two News love dogs, including the dog rescued from Bryan Thatcher that survived and was adopted by Commander Troy, we do not believe that a dog is involved. Police will not confirm, however, that something happened to Commander Troy, that he may have been injured at his home. As always, Channel Two News will bring you any developments as they happen. And now for Chuck Pringle's Sports report...\"\n\n\"Well, not much there.\" I said as I poured coffee and handed mugs to Sheriff Sorrells and Deputy Strait. I asked Sorrells how they'd happened to be coming down that road.\n\n\"Oh, your people are all in a frenzy up here, Commander.\" said Sheriff Sorrells. They found your car at your house, got videos of a van going south but not getting to The Asylum. I didn't ask how they got Asylum camera footage.\"\n\n\"Probably something I don't want to know about, either.\" I said.\n\n\"Uh sir,\" said Strait, \"aren't you going to let them know you're here?\"\n\nI smiled. \"Yes, but only after we've had our coffee. Let's see how long it takes them to realize I'm back.\"\n\nThe wait was not long. I heard a commotion outside my office, in my assistant Helena's anteroom, then the door burst open. Consider me not surprised to see that Cindy Ross was first through the door.\n\n\"What do you mean he's back....\" she was saying. Upon sight of me, she stopped, but I could see tremendous relief on her face. Following her was Tanya Perlman, Jack Muscone, and Chief Bennett.\n\n\"What are you guys worried about?\" I said, sipping my coffee as if nothing had happened.\n\n\"I told you, Jack!\" Tanya practically yelled, a grin on her face that I didn't quite understand.\n\n\"Yes, yes you did.\" said Jack Muscone. \"Don, you scared the living hell out of us! What happened?\n\n\"Sheriff Sorrells and Deputy Strait, do you know all of these people?\" I asked. I made introductions where necessary, partly due to good manners, and partly to string them along. Once that was over, I had to explain.\n\n\"The Sheriff and Deputy found me walking along the road leading to The Vision's Headquarters.\" I said. \"I got ambushed last night, and came to on the road right before they found me. Looks like they took my badge, gun belt and gun, and radio, so I'll need to make reports and get new ones...\"\n\n\"No, we've got those.\" Cindy said as she texted on her cell phone. They were left in the your SUV.\"\n\n\"Was Bowser up there?\" I asked, concerned about the dog.\n\n\"He ran to your other home.\" said Tanya. \"Scratched at the door to get your wife's attention, and she called the Police. We've been searching for you all night.\"\n\n\"Oh wow.\" I said.\n\n\"So what happened, Don?\" asked Jack Muscone. I felt a wave of dizziness as I looked at Jack, hearing his name in my head for some reason.\n\n\"I don't know.\" I said. \"Like I said, I got ambushed at the Cabin, then woke up on the road. I remember seeing a lot of colors and lights, and it was like I was having dreams, but that's about it.\"\n\nThe stirring in Headquarters reached a fever pitch, and soon there was a big crowd in the anteroom and hall in front of my office.\n\n\"Okay, let's restore order here.\" said Chief Bennett. \"Put out the word that Commander Troy has been found and is safe. Everyone back to your jobs! Lieutenant Perlman, take the Commander's formal statement.\"\n\n\"That can wait.\" said a woman's voice. It was my wife Laura, working her way through the crowd. It was she that Cindy had been texting. \"First he's going to get a medical examination in your infirmary. Doctor's orders. Come along, darling.\"\n\n\"Good morning to you, too.\" I said, standing up. \"The best medicine I need right now is to hug my lovely wife.\" I suited the deed to the word, and hugged Laura tightly.\n\n* * * * * * * * * * * * * * * *\n\nThe infirmary room, where I'd been given medical attention after the confrontation with Ned nearly a year before, was also about to get crowded, until the Doctor in charge kicked everyone but the Chief, Muscone, and Cindy out. She did all the usual doctor stuff, looking into my eyes with a penlight, making me stick out my tongue and say 'aaah', and examining my arms.\n\n\"You've been injected with drugs.\" Laura said. \"I'm going to take some blood samples.\" As she did, I told her that I'd been catheterized, as it hurt to pee.\n\nShe finally said \"Well, I see no physical problems with you. You weren't hit hard on the head, but there's a knot on your neck where you were given a drug, probably a knockout drug. Looks like you were given an I.V. of something, too, and if you were catheterized....\"\n\n\"Like that night in your office?\" I asked quietly. Laura just nodded, keeping her back to the others. I saw Chief Bennett peering at us.\n\nJack Muscone said \"Don, do you think The Vision had anything to do with this?\"\n\n\"I don't know why they'd want to kidnap me, drug me, and let me go.\" I said. \"I think this is some kind of Wargrave stunt, maybe as a warning to you guys to back off him.\"\n\n\"Maybe we should get a warrant to search The Vision's Headquarters.\" said Muscone. \"Since you were found near there. Maybe they did some kind of experiment on you.\" He was not being distracted, even by my bringing up Wargrave. Time to try a new tactic.",
        "\"And upon what will you base that warrant?\" I asked. \"The Coltrane County Sheriff will tell you I was found well outside their property, albeit on the road to the place. There's no probable cause, at least not yet, and no evidence to connect them to any of this.\"\n\n\"Well...\" Jack said haltingly, then said, \"Look, Don, someone just kidnapped you and administered drugs into your system. Speaking of which... Dr. Fredricson, I'd like a report on what those drugs were when you get the results back.\"\n\n\"You'll be the first to know.\" Laura said.\n\n\"I'd like a copy of that, too.\" said Chief Bennett.\n\n\"That's not so easy, Chief.\" I said. \"These guys are talking about something at a different level than our pay grade.\"\n\n\"Well no disrespect to Agent Muscone or your wife, Commander,\" said Bennett with something bordering on exasperation, \"but you're this Police Force's Commander, you were kidnapped, drugged, and who knows what else, maybe brainwashed. Now I don't know what all the Federal stuff you do with these guys is about, but I don't like my police officers being treated this way, and I want some answers on it.\"\n\n\"And you will have them, Chief.\" I said, getting off the inclined table I'd been lying on. \"Just as soon as I get them. By the way, Laura, is Bowser okay?\"\n\n\"Jack, this man loves that dog more than he loves me.\" Laura said.\n\n\"Not true at all.\" I said. \"But seriously, the dog?\"\n\n\"He's fine.\" Laura said. \"He apparently ran straight back home after you were attacked, and he was whimpering outside the door. He knew something was wrong.\"\n\n\"Sounds like a good dog to me.\" said Cindy.\n\n\"Want to keep him?\" asked Laura.\n\n\"Better ask Carole about that first.\" I said. \"Besides, Laura, you love that dog, too; you just won't admit it.\" Laura gave up.\n\nPart 17 - Baiting The Trap \n\n10:00am, Monday, June 22d. Laura went to her office with my bloodwork, and Cindy drove me up to the Cabin to get my vehicle. She'd given me my belt, gun, radio, badge, cellphone and wallet at Headquarters, and the keys to the SUV as well.\n\n\u2028\"The Fire Department EOD checked the SUV for explosives.\" Cindy said as we arrived, opening the gate with the remote from my SUV. I told her to keep it for emergencies, as I had an extra at the Cabin.\n\n\"Tell you what.\" I said. \"I'm going in and taking a shower and changing clothes. Want to come inside?''\n\n\"Sure.\" Cindy said. \"I tempted to join you in the shower, too.\"\n\n\"Fine with me, but Molly will get jealous.\" I said.\n\n\"So would Jenna.\" Cindy replied. \"So you go first, and I'll take one afterwards.\"\n\n* * * * * * * * * * * * * * * *\n\nAfter Cindy and I took (separate) showers, we convened on the back deck to eat some late breakfast and talk. There was nothing in the refrigerator, so I whipped up some instant grits and we were eating bowls of the Southern staple cereal.\n\n\"So,\" Cindy said, \"what really happened?\"\n\n\"For your ears alone, my friend.\" I said. \"I was hit as I was getting out of my car. I'd just put Bowser down on the ground when I got jumped and injected with some knockout drug. When I came to, I think I was inside The Vision's headquarters, but the perps had some of Eckhart's people hostage and forced him to do one of their procedures on me.\"\n\n\"The one you had done to Eleanor Burke?\" Cindy asked.\n\n\"I would have no idea about that.\" I said. \"Whatever happened there was fortuitous, but I'll never be heard taking credit for that brilliant piece of work.\"\n\n\"I understand.\" Cindy said, grinning in understanding. \"So you were saying...\"\n\n\"Yes.\" I said. \"I am not sure what was going on, as I was drugged up. But if they have programmed me, you are going to have to really be on watch. If I start acting funny, you might have to take me down.\"\n\n\"Hoo boy.\" Cindy said. \"I'll restrain from taking advantage of that too much. So, who's behind this?\"\n\n\"Henry Wargrave.\" I said. \"I recognized his voice. By the way, Eckhart and his people are okay, they had secret bolt holes to run to, and got away.\"\n\n\"Good.\" Cindy said, looking over the magnificent view of the Town. \"I'm just glad you're okay. By the way, does the Chief have something against me? Hates lesbians or something?\"\n\n\"No, nothing like that.\" I said understanding. \"He does fear that you are too much my follower and not enough your own person, and he wonders if you have the leadership qualities a Police Captain should have. Of course I know you do, and then some, but we all have to prove ourselves to the new boss.\"\n\n\"I got a little tired of how hard he was watching me last night.\" Cindy said. \"It was close to bird-dogging.\"\n\n\"Well, you're a Captain, so he can't just fuck with you.\" I said. \"But don't sweat it. I'll bet you did a great job while I was missing, and he'll have seen it.\"\n\n\"Speaking of that.\" Cindy said, putting her empty bowl down on the table, having practically inhaled the grits, \"you said there was another reason you had them promote me to Captain. Care to share it?\"\n\n\"In due time, mon ami,\" I said, \"in due time. Want some more grits before we go back to the Station?\"\n\n* * * * * * * * * * * * * * * *\n\nThe press conference at 11:30am at Headquarters was pandemonium. Reporters filled the Press room to overflowing, smelling blood in the water. Something had happened to the Police Commander, and the Press wanted to know what that incident was.\n\n\"You'll have to talk to them.\" said Lt. Scott Peterson, Media Relations Officer. \"Whatever you and the Chief say, I'll go along, but it's out of my hands.\"\n\n\"Oh, I do have a plan.\" I said. Moments later, at my request, my mother Phyllis came in, wearing her Police Auxiliary Detective uniform. \"Oh, I am so glad you're safe.\" she said. I hugged her warmly.\n\n\"And you're not the only one.\" I said, seeing my mother's companion about to wet the floor with happiness.\n\nI knelt down. \"Hey Bowser, you okay?\" Bowser's tail was wagging as hard as I'd ever seen it as he licked my hand. I gave him a good petting as officers came around to see Bowser; after all, we were in the hallway. \"You did a great job, Bowser!\" I said. \"You're my hero.\"\n\n\"Why did you ask me to bring him, son?\" Phyllis asked.\n\n\"Oh, you'll love this.\" I said, scooping up Bowser. \"Let's go to the press conference.\" I put on my Tilley hat indoors, as well.\n\nThe press room just about exploded as I entered it, carrying Bowser. We assumed the podium, where questions were being shouted at me with a total lack of control. I finally raised my hand to get some quiet, and it worked.\n\n\"Ladies and gentlemen,\" I said, \"no doubt you have heard of an incident near my home on the mountain. What happened is that my dog Bowser here, who I was fortunate to adopt after the Thatcher trial, ran back home to get help after I fell down and hit my head. I'm a bit embarrassed at the commotion, but I'm okay, and I'm proud to own this excellent dog. Bowser, look at these Media people.\"\n\nBowser looked over the group as I said \"These guys are not your friends, Bowser. Do not give them even one single interview about this. And that will conclude my comments on this, as well. Thank you.\" I left the room, escorted out by a cordon of police officers, as the Media angrily shouted both questions and insults at me and my dog. I did happen to catch Bettina Wurtzburg glaring at me; she knew exactly what I had done to sabotage her previous reporting...\n\n* * * * * * * * * * * * * * * *\n\nBowser was a smash hit with the Detectives of MCD, especially Joanne Cummings. He was getting a bit nervous about all the people, though, as the loud noise of the Media circus had bothered him. I regretted taking him in and exposing him to that, so after a good fifteen minutes of one-on-one time to get him calm and happy again, followed by giving Joanne a few minutes to get to know him in the quiet setting of my office, I asked my mother to take him back home... with a police escort: there were Media people trying to follow her, and those cars were quickly pulled over by Police and detained until they couldn't follow her any longer.\n\nAt 2:00pm, I had a meeting with Jack Muscone, Chief Bennett, Captain Cindy Ross, and Sheriff Allgood... at the FBI offices. I introduced the Chief to Jack's boss, who filled the Chief in on some of the details of the Wargrave case. Chief Bennett seemed mollified now that he was getting some answers.\n\n\"So Don,\" said the DepDirector, \"this is not The Vision's work?\"\n\n\"I know you FBI guys had some problems with Eckhart in the past.\" I said. \"But this is not the one to be trying to mess with him over. He's more friend than foe to me.\" The DepDirector noticed I was not directly answering the question, but he (most very wisely) let it go.\n\n\"Well guys,\" said Jack Muscone, \"the reason for this meeting is to let you County LEOs know that we're going to take Henry Wargrave into custody tonight. Dr. Wellman, president of the University, is giving some awards at University Conference Center, and Wellman tipped us off that Wargrave will be there. We will make the arrest at that time, and in front of all those people, if necessary.\"\n\n\"You're sure he'll be there?\" I asked. \"I'm stunned that Wellman would give Wargrave up like that. They were tight; they've been BFFs for a long time.\"\n\n\"That's what I said.\" said Muscone. \"But Dr. Wellman said that Wargrave is becoming a publicity liability for his University, and that cooperating with us will put him and the School in a more positive light.\"\n\n\"By the way,\" said the DepDirector, \"your wife was supposed to attend this function, but we've asked her to make regrets and not be there, for her own security. After what happened to you, we're very concerned that it might have been a dry run for doing something worse, to you or her.\"\n\n\"That's a thought.\" I said, as if struck by it. Cindy looked at me as if surprised.... that I'd not thought of something someone else had. The DepDirector did not quite hide his pleasure at that.\n\n\"So,\" said Muscone, \"you, Don, and you, Cindy, can be on Campus as FBI consultants. I'm not sure where Chief Bennett and Sheriff Allgood stand, with the University being State property.\"\n\n\"The Chief has no jurisdiction there, though you could ask him to 'assist' with your operations there.\" I said. \"Sheriff Allgood has jurisdiction over every square inch of this County, per a tiny clause in the SBI Law passed earlier this year, so he and his Deputies are fully jurisdictional agents of the Law on Campus.\"\n\n\"Good.\" said the DepDirector. \"Should be an easy enough takedown.\"\n\n* * * * * * * * * * * * * * * *\n\nI went by my wife's office. \"Hello, darling.\" she said. \"How are you feeling?\"\n\n\"Pretty good.\" I said. \"Having a Jack's Double Cheeseburger at the Cop Bar has a way of restoring one's vitality after a long night.\"\n\n\"I'll apply for a grant to study the recovery effects after sex.\" Laura said drily. \"Your blood tests aren't done yet. Might not be for a few days. And I do apologize for trying to give away the dog; he really is a very good dog, and Carole does love him as much as you do.\"\n\n\"Yes, and no reason for you to be jealous of him.\" I said, grinning. \"But that's not why I'm here. I have a couple of favors to ask of you.\"\n\nWhen I told her what I wanted, Laura's eyes widened. \"That is not a small thing.\" she said. \"But I think I can make it happen.\"\n\nI then left and made my last preparation... a visit to the hardware store.\n\nPart 18 - Springing The Trap \n\n7:30pm, Monday, June 22d. The University Campus was not especially busy, as it was the Summer semester. The Conference Center was just north of the Hospital on Campus, and was attached to the Student Union. And it was a bit too easy to spot the various men in suit with little clear wires and earpieces. They were FBI agents, brought in from the City to make the arrest of Henry R. Wargrave.\n\nI saw Jack Muscone in the hallway leading to the room where the banquet was. He was nervous. \"I just hope he shows up.\" Jack said. \"We're going to look a bit silly if he doesn't. But his limo was spotted driving into the back area.\"\n\n\"I hate to tell you this, Jack.\" I said. \"But I don't think you're going to get him. Now or ever. Henry Wargrave will never be placed under arrest by the FBI.\"\n\n\"Aw, don't say that.\" said Muscone. \"You're always right about everything, and I want you to be wrong about that.\"\n\n\"Time will tell.\" I said. \"Oh... hello Dr. Wellman.\"\n\n\"Ah, Commander.\" said University President Dr. Sidney P. Wellman, his hair slicked back, that set sinister smile on his face, looking full of vitality for his age. \"I don't know what that dog business was about, but whatever happened, I am so glad to see that you are okay. I'm just sorry your wife could not make it tonight. I have the feeling it's going to be a quite... eventful evening. Would you not agree, Agent Muscone?\"\n\n\"I'm hoping for a quiet evening with a quiet arrest, Mr. President.\" said Muscone politely.\n\n\"I have to go inside. I'll speak with you later, gentlemen.\" said Wellman. He went on into the room.\n\n\"Think your Consultant of Crime will be here to witness this?\" asked Muscone. I peered at him.\n\n\"As a matter of fact,\" I said, \"yes I do.\" Muscone then peered at me.\n\n\"Okay,\" he said. \"I'm going to be in the banquet room, in the back, just inside the door to the left if you need me. Where are you going to be?\"\n\n\"Out here in the hallway.\" I said. Jack went on inside. A moment later Cindy Ross came up, wearing a thin black shirt and black slacks and what looked like black tennis shoes.\n\n\"Mmm, you look good in black.\" I said. \"But it must be hot.\"\n\n\"Not that bad.\" said Cindy. \"Gonna get hotter later on, though. You look good yourself.\" I was wearing my darker gray suit, with a very light gray, dri-fit mock turtleneck shirt.\n\n\"Thank you. And yes, it sure is going to get a lot hotter, and soon.\" I said. \"You ready?\" Cindy nodded that she was.\n\n* * * * * * * * * * * * * * * *\n\nThe dinner went along without a hitch. Dr. Wellman made introductory remarks, then Pastor Westboro gave the invocation. I didn't think invocations were allowed anymore, especially on college campuses, but I digress. Dinner was next, and there was general chitchat. But there was not yet any sign of Henry R. Wargrave.\n\n\"Ah, Commander,\" said a voice, coming up behind me. It was Tom Riordan, booster for the football team. He shook my hand somewhat like a politician. \"It's been some time since I've seen you. Everything well with you and your family?\"\n\n\"Oh yes, yes indeed.\" I said. \"I'm sorry to hear of your own family troubles, your separation from you wife.\"\n\n\"Ah, it's unfortunate.\" said Riordan. \"But it was probably inevitable. You've been through a divorce, haven't you?\" Hmmm, interesting that he knows that, I thought.\n\n\"Yes, yes I have.\" I said. \"Fortunately it was amicable.\"\n\n\"As I hope mine to be.\" said Riordan. \"I just spoke with Mr. Wargrave; he should be here momentarily. I need to get inside before Dr. Wellman sends out a posse for me, if you'll excuse me.\" He went inside. Speaking of posses, it looked like the one for Wargrave was not bearing fruit, as the man had not yet arrived, despite Riordan's assurances.\n\nThe presentation portion started. Again, Wargrave had not made himself visible in public. But then I got a text from Myron: \"Wargrave cellphone pinging off University cell tower.\" So he was around here somewhere. But where?\n\nThen, it happened. My cellphone, my Police cellphone rang. Because it was the Police cellphone, any 'blocked' numbers were supposed to show up. But amazingly, this one said 'Blocked', anyway. I answered it.\n\n\"Commander Troy.\" I said.\n\n\"Jabberwocky. Joyful. Jehosephat.\" said the voice at the other end.\n\nI felt my eyes blink hard. Suddenly, my brain was flooded with sensation, and words. Lights appeared, though I could still see.\n\n\"Kill Jack Muscone.\" said the voice. It was not Wargrave's voice, but it sounded familiar... nasally, and punkish.\n\nI blinked again. The voice said \"Take your toy gun and shoot Jack Muscone. He'll laugh at the joke. Go. Do it now. Jabberwocky, Joyful, Jehosephat. Do it! Shoot Muscone!\"\n\nI slowly put the phone into my pocket, looking straight ahead. In my peripheral vision, I thought I could see someone behind a door, peering at me. I barely saw Cindy rush past me towards that door, followed by Sergeant Rudistan.\n\nBut none of that mattered. I was on a mission, and it was all important that I do this, I thought to myself. I had to do it, the only thought in my mind was to shoot Jack Muscone with the toy gun in my holster under my jacket.\n\nI entered the banquet hall, not really hearing President Wellman's speech. I saw Jack Muscone to my left, and turned towards him. As I approached, I slid my hand under my jacket, gripping my very real, not-a-toy, holstered service weapon...\n\nTo be continued.\n\nSo, readers? How can this possibly end well? Is Jack Muscone doomed? Is there any hope for the Iron Crowbar to save the day? Has Henry R. Wargrave won? Tune in next time for the answers... and some incredible, shocking twists. All will be revealed... well, almost all....\n\n\n"
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "hypnosis"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/reichenbach-ch-04"
}