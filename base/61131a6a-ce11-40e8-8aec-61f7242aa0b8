{
    "title": "Magic Panties",
    "pages": [
        "One of the nice things about working in, as well as owning an adult novelty store, is the perks associated with doing so. I'm a people person, anyway. I love watching people. Often going to the mall to pick up one thing or another and finding myself sitting down, watching people walk by. It's interesting to wonder what they are thinking about, who they really are inside. Which is one of the reasons I love my job so much. When people enter my store, I have a pretty good idea of what they are thinking about. Sex. \n\nAdmittedly, the majority of clients who enter my store are men. Most of which are there to find something that will put the spice back into their sex-life, or pick out something that they've been harboring as a fantasy for a while, that they've managed to persuade their respective partner into going along with. Or at the very least, hoping they will. I do however, get a fair share of women too. And they are, of course, the ones I really enjoy watching whenever they come into my store to shop.\n\nMost women tend to buy gag gifts, things for bridal showers, things like that. Though occasionally, one or two will browse through the toy section, looking for a particular vibrator or dildo so that they might pleasure themselves or in a few cases, their female partners. Usually most of these women spend less than five or ten minutes inside the store. They seem to know exactly what they are looking for, searching briefly, selecting something and then bringing it up to me to purchase. Rarely do I ever get anyone who actually asks me for help, though this does happen. I love working with these kinds of women, as they seem to be more open-minded and at ease with themselves. More so than anyone else, including the men who come in.\n\nAs I like to do, I usually come in about an hour or so before the store opens. Generally I restock the shelves or straighten up the merchandise, though occasionally I may try out one of the new toys that have come in, especially if they are designed for a man. Though most of these are merely novelty items, which I've found actually have very little to offer.\n\nI had just finished restocking some body oils on the shelf when I turned to see a nerdy looking guy standing just outside the door, peering in. \"We're still closed!\" I said, approaching the door and pointing at the closed sign, which had the hours I was open clearly indicated on it. I watched as he looked down one side of the street and then the other, before turning back to face me. Just the way he acted made me a little suspicious of him; suddenly glad there was a locked door between us. Not that he looked violent, or even capable of being able to cause anyone physical harm, but as I watched him open a plastic bag he was carrying, I half expected to see him withdraw a gun or something. Instead, he reached in and brought out a pair of women's white cotton panties. The kind you would see sold in generally most stores, certainly not the kind I sold in mine. I looked at him inquisitively, once again yelling through the closed door.\n\n\"Not interested!\" I yelled, knowing he could hear me, at least. \"Now if they were crotchless...maybe!\"\n\nI honestly expected him simply to turn and walk away. But he did not \"They're not normal panties!\" he exclaimed back at me. \"I've invented something...and I think you might be interested in seeing what I've done,\" he implored.\n\nAgainst my better judgment, I unlocked the door letting him inside. He immediately introduced himself.\n\n\"Name's Mat Wilder,\" he told me. Even his name sounded nerdy. I was almost afraid to shake his hand as he offered it to me.\n\n\"Benjamin Roberts\", I said introducing myself, \"Though everyone calls me Ben.\"\n\n\"Thanks for letting me in...Ben,\"he began. \"You're the first person who's actually been willing to see what it is I have to offer.\" Once again he withdrew the pair of white cotton, obviously women's panties. The fact they looked brand new still did not tell me anything, though I was curious.\n\n\"If you're trying to interest me in a pair of women's panties, it's really not my thing. And I don't care who you might claim actually wore them, it's not something I'd actually be interested in.\"\n\nMy comment seemed to catch him in mid-stride. For a moment, I thought he would stuff them back into his bag, turn and leave. Which in a way, was something I was now hoping for, already regretting that I had let him in. He smiled awkwardly, looking almost embarrassed.\n\n\"No...you misunderstand. They look like normal women's panties, but they're far from it. My panties are special, very special.\" \n\nOnce again I was starting to believe I was standing there talking to some kind of a pervert, or worse. And not that I had any problems with any particular fetish of course, after all, I sold a lot of things a hell of a lot kinkier than women's underwear. \n\nHe must have noticed the look of doubt on my face, worried perhaps that I was a second away from asking him to leave, which I was.\n\n\"Hear me out....please,\" he begged. Being the people person that I am, I decided to give him a few more minutes. I was now interested in what he really did have to offer, or at the very least, discover what it was that he thought he had and why I would be interested in them.\n\n\"Ok, but keep it short. The store opens in fifteen minutes,\" I told him.\n\nMat relaxed considerably, genuinely relieved. \"I work for a major micro-chip computer factory,\" he began. \"Research and development specifically. For several years I've worked on an idea I had, on my own time. With the access that I have to certain materials, as well as the freedom to work on my own in relative privacy, I eventually perfected, and made a very small microchip that's designed to do only one simple thing. And that's bring pleasure to a woman.\"\n\n\"Ah huh,\" I said dubiously. \"And just what does this little microchip of yours have to do with women's panties?\"\n\nObviously he was excited to finally be able to tell someone about his little invention. Opening a small tiny little envelope he poured the contents of it out on top of a white handkerchief he had spread out. What I saw were perhaps a dozen or so small razor thin translucent little disks no bigger than the size of an aspirin. Once again showing me the panties, he pointed directly at the crotch area. \n\n\"One of these microchips is inside these,\" he said. \"You can easily insert them into any woman's panties, purchased from any store. As you can see, the chips are so thin that you can make a simple cut with any sharp razor, insert the chip between the layers of material, a tiny, very tiny dab of superglue is more than enough to hold it in place.\"\n\n\"Yeah, right,\" I said going along, becoming more and more sure this guy really was some kind of a nut case. \"Listen, I really do need to open the store,\" I said, hoping to convey in not so many words that I was no longer curious or interested in his panties.\n\nHe was too excited explaining things to me though, to have listened. \"The chip is triggered by body temperature, as well as moisture,\" he said continuing. \"It sends out a pulsating electrical energy wave that is very...stimulating.\"\n\nThat got my attention.\n\n\"It does what?\" I had started towards the door to turn the sign around and invite him to leave. Hearing what he had just told me, I froze with my hand still on the doorknob.\n\n\"These panties induce orgasms,\" he said simply. \"But the best part is, most women don't even know why, or how it could possibly even happen, as there's nothing to detect in the panties they're wearing to indicate how or why. They're completely washable, the chips are virtually indestructible unless you burn them of course, and I've yet to find a chip that's gone bad or worn out.\"\n\n\"You mean to tell me, women wear these panties and simply experience an orgasm from doing so?\"\n\n\"Well in theory...yes.\"\n\n\"In theory?\" I asked, suddenly thinking I really had been duped into some guy's get rich quick scheme here, thankful that I had not agreed or worse, actually given him any money for his so-called climax-chips. \n\n\"I've only been able to test them on one or two subjects, without their knowledge of course...\"\n\n\"Of course,\" I said skeptical as hell, wishing I had never allowed him to enter my store.\n\n\"But both women appeared to have some kind of pleasurable experience, one eventually even fainting from it, though admittedly that was my fault because I'd sort of increased the intensity just a little too much I think.\"\n\n\"Ok, you lost me,\" I told him. \"How do you increase the intensity of this little super-cum ship, or whatever the hell you call it?\" I asked\n\n\"Well, that's the other part I haven't told you about yet,\" he said, once again speaking in low tones as though worried I had surveillance cameras or microphones hidden inside my store, which suddenly, I wish I did have.\n\n\"There are two ways the chip can be activated. One is simply by the increase of body temperature, coupled with the slightest trace of moisture. So, in other words, if a woman becomes aroused, even slightly, the chip picks up on that. It begins to send out miniscule little pulses that a woman wouldn't even associate with anything except her own body causing it to happen. She would initially feel nothing more than a nice \"itch\" no different from the first stirrings of arousal in any woman. The more she becomes aroused however, the greater the signal that begins actually to interact with the sexual nerve endings with a woman's clitoris. Before she knows what's happening, or why, she can actually experience an orgasm without ever having had to even touch herself!\"\n\nI know I was standing there looking at him with my mouth open in disbelief. But truth was, he had my complete and undivided attention now.\n\n\"Go on,\" I prompted, letting go of the doorknob, having no intention of turning the sign around now.\n\nSeeing that I had done so, he looked particularly relieved. \"The second part is that you can by remote control activate the chip too.\" Now he was grinning, and even more excited to explain to me what he had invented than he had been. And frankly. so was I.\n\n\"Each chip has its own private identification number, or access code if you will. You can actually bring up the 'clit-chip' program on your home computer, preferably a lap-top of course, especially if the subject is within view when you access the panties she's wearing.\"\n\nI was not about to interrupt him this time, and found myself actually sitting down on the stool behind the counter willing to let him explain the rest of it to me, even if it took him all day to do so.\n\n\"Once you've accessed the memory, you can increase the levels of intensity, though I'd recommend if you've got the time and patience to begin at one, possibly level setting two but no more than that. That way she'll subconsciously never really know why she became aroused, only that she did. Gradually you can increase the levels one at a time until you can see where it is that she's actually experiencing pleasure. I'd certainly never go right to level seven, for a woman, it would be like having her clit licked rapidly. And that WOULD make anyone suspicious I would think. But getting to that point slowly, gradually, you'd probably never even need to go any higher than a three or possibly even a four to see a woman eventually experience some sort of unexpected, unexplained orgasm.\"\n\nThe sound of someone knocking at the door turned my attention from him momentarily. I saw a potential customer pointing at my sign, then at his watch expectantly. For the first time since I had opened for business, I turned a customer away. \"I hope I don't come to regret doing that,\" I told Mat.\n\n\"I promise you won't,\" he replied. \"But...\"\n\nOf course, I knew there was a but some place. I had known that from the beginning. But as they say, 'In for a penny'. \"Ok, what's the catch Mat?\" I asked, expecting the worst, hoping for the best.\n\n\"I've sunk every single penny I have into this,\" he began to explain to me. \"I'm completely tapped out, if I don't recoup at least half of what I've put into it soon, I'll not only lose my job, but I'll lose the ability to even make any more of these,\" he finished indicating the twelve or so tiny little disks still sitting atop the hanky.\n\n\"How much is half?\"\n\n\"Fifteen thousand.\"\n\n\"Jesus H Mat! That's like over a thousand dollars a pair. No one in their right mind would pay that kind of money for a pair of women's underwear, no matter how many times she was able to cum while wearing them!\" I shot back at him.\n\n\"That's just what I need to cover the start up costs,\" he told me. \"I can now make each chip for less than ten dollars. If we could just get enough of these out there, well, you can see the potential,\" he stated hopefully.\n\n\"Like I said Mat, fifteen thousands a lot of coin, even for me!\" Mat looked dejected, even reaching for his handkerchief. \"Tell you what, let me have these chips of yours, for a week, maybe even two weeks. Plus, you show me how to access and use the codes from my laptop. I've got a couple of possible subjects to try these out on. If, and I mean 'if' they do as well you say they will. Then, we've got a deal. How's that sound?\"\n\n\"A week Ben. I can't wait any longer than that. I'm already pushing it as it is.\"\n\n\"OK, since tomorrow's Saturday, give me this weekend, and the next weekend at least. I'll need that time if I'm going to have any chance to try these out for myself. On Monday, if I think it's worth taking the risk, I'll have the money for you then. Deal?\"\n\nMat didn't even hesitate, grinning as he offered me his hand. \"Deal!\" he said.\n\nWe spent the next two hours together going over the entire program. Mat downloaded the access codes onto my laptop, and showed me the fairly simple process on how to access, and gradually increase their intensity levels. He also explained to me that they had a range of over two miles, though at the moment, I could not see the practical application for that as I would much rather be close enough at least to see what was actually going on.\n\nBy the time Mat left, I had turned away at least a dozen customers, already worried and concerned that I had already invested more into this deal than it was really worth. At least I had the weekend to experiment a little. And I had two perfect candidates. Christy and Diane, my neighbors and unsuspecting friends.\n\nI lived in one half of a fairly large duplex. I had been there for nearly ten years after my divorce, happily remaining single meanwhile. I rented the other half of my duplex out, which is how I had initially gotten to know Christy. Christy had moved in and we had gotten to know each other fairly well, after a time, even intimately even though she had a \"girl-friend\", being more lesbian than bi-sexual actually. Diane had come to live with her a couple of months later. I had thought initially that she was the girlfriend, and was quite surprised when I found out a short time later, she was not. Diane was in fact pretty straight-laced having grown up in a fairly strict religious family. She had been a high school friend with Christy, which is how she came to know her, eventually moving in with her, as she needed a place to live after she had moved out. All in all they made for a fairly strange pair of friends as well as roommates, especially as Diane was not very approving of Christy's intimate relationship with other women. Which was one reason Christy's girlfriend rarely if ever came over unless Diane was not planning on being there.\n\nChristy worked as an X-ray technician at a local nearby clinic. Diane was a flight attendant, so she was periodically away which Christy enjoyed as she could then invite her lover over without bumping heads with Diane over it. \n\nI had installed a fairly large pool in the backyard, seeing no reason to divide the property, allowing both myself as well as the tenants to have access to it, which had been a main factor in getting and keeping fairly decent renters. I eventually left work leaving my two employees to run things and headed home. I knew Christy would be open to hearing what I had to tell her, deciding she would be the best one to try these 'Magic Panties' of Mat's on first. Christy was lying out by the pool when I arrived. Though I had gotten home a little earlier than usual, it was not any big surprise to find her lying out without her top on. I made no pretense of trying to hide my approach either.\n\n\"Hi Christy,\" I said simply crossing the back yard.\n\nShe had been lying on her back, though she did not exactly cover the fact she was topless, she did roll onto her stomach smiling at me. \"Hi Ben, home a little early aren't you?\"\n\n\"A little,\" I responded. \"But that's because I have something I want to tell you about, and then show you,\" I said seriously.\n\nI spent the next hour telling her about Mat and his invention. To my surprise, Christy sat listening to me the whole time not even interrupting me once. She had gotten so interested, finally sitting up to become a little more comfortable, forgetting entirely that her full sized breasts were suddenly and very prominently displayed. \n\n\"Show me!\" Christy said wide-eyed, obviously excited when I was done telling her about them. Reaching into my jacket pocket I removed the simple pair of white cotton briefs handing them to her.\n\n\"Put them on I said. But remember, for them to actually start to work, you have to be a little aroused anyway, unless you want me to get on the computer,\" I said grinning.\n\n\"I don't think that's going to be a problem,\" standing up, removing her bikini bottoms without even batting an eyelash. \"Though I would like to see what you mean by increasing the intensity level later,\" she said lustfully.\n\nWithin seconds she had replaced her bikini with the panties. \"I don't feel anything,\" she said disappointedly.\n\nOnce again, I began to wonder if I'd been had.\n\n\"Wait a minute!\" She exclaimed a moment later. \"Maybe I do after all!\" Christy gave me a quick wondrous look just before collapsing down onto the chase lounge she had been sitting on.\n\nI continued watching her as the look in her eyes became even more expressive. \"Holy shit Ben, these are for real!\" she exclaimed excitedly. \"It's almost, almost like someone was gently thrumming my clit. Nothing major mind you, just a delicious little tingling between my legs, but the more excited I'm getting, the more I seem to be feeling it!\" Christy shuddered involuntarily. \"Oh Ben, it's definitely working!\" .\n\nI watched as she slipped her finger down between her legs, pressing it against the material, in turn pressing the material against her self. \"I don't feel anything either,\" she said in surprise.\n\n\"You're not supposed to Christy. I think that's the whole point, most women won't even be aware that it's in there unless someone tells them it is!\" I watched as Christy continued to slide her finger up and down her cloth-covered slit. It was obvious that she was becoming more and more aroused by the sudden discoloration of the garment as it pressed against her suddenly very wet, very aroused pussy lips.\n\n\"Well?\" I asked her. \"Is it getting stronger or what?\"\n\nChristy looked at me as though seeing me for the first time. The look on her face was sheer pleasure.\n\n\"Christy?\"\n\n\"Huh?\"\n\n\"What are you feeling right now?\" I asked curiously.\n\n\"Shut up...give me a moment, I think I'm going to cum,\" she said by way of an answer.\n\nIt was evident by her reactions a moment later that she was. Christy seemed to recover slightly, but then much to my surprise, she appeared to start the whole process all over again. \"Good heavens Ben, I think...I think... I'm going to cum again!\" \n\nBy the third climax, Christy forced herself to remove the garment, holding it in her hand like it was some sort of a cherished friend. \"Can I have these?\" she asked.",
        "And then I knew how I could persuade her to help me. \"You can, if you'll help me perform a really, really important test.\" \n\nChristy grinned almost evilly. \"Diane?\" I nodded my head smiling back at her.\n\n\"How?\" she asked. I produced a small little envelope, pouring the contents out into the palm of my hand. \n\n\"With these. What I need you to help me to do, is figure out which of Diane's panties she's most likely to wear over the course of the next few days. Then, we need to put these inside each pair. The tricky part is, you'll need to somehow let me know if she's wearing a pair of them that has one of these in them. Once you do, I'll take things from there.\"\n\nChristy sat back smiling even wider than before. \"That's going to be fairly easy actually,\" she said. \"You're never going to believe this Ben, but she wears those panties that have each day of the week on them? And even better, I know for a fact she wears them in order too!\"\n\nI had already known that Diane was flying in on Saturday, she would have at least a week before taking another transatlantic flight over to London. The window of opportunity was now; it could not have worked out any more perfectly. \n\n\"Then lets get these inside her panties as soon as possible! Starting with Sunday I guess?\" \n\n\"Probably, since I'm sure she'll be wearing Saturday's,\" she giggled. \"We just need to make sure that all of her next weeks undies are on top, all of which will have one of these little chips tucked away inside.\"\n\n\"Then we'd better get busy.\" \n\n\"How about after?\" Christy questioned.\n\n\"After?\" I said somewhat confused. \"After what?\"\n\n\"After, you make me cum again.\" Christy said, already beginning to unbuckle my belt, unzipping my fly. Obviously she did not need the panties at the moment, but I could not help but wonder if they had gone a long way in getting her here to begin with.\n\nThe feel of Christy's warm velvet mouth engulfing my shaft took my breath away. She nibbled the head teasingly, licking up one side and down the other in slow tantalizing strokes, sucking me in, engulfing me, sucking harder, firmer this time.\n\n\"Oh, let me get out of these clothes!\" I said forcing her head away from me momentarily. \"And maybe, we should take this inside,\" I suggested.\n\n\"Why? No one can see us unless they're using binoculars,\" she said. \"And even if they are, doesn't the thought of that sort of excite you?\" \n\nI finished taking my clothes off, spreading out the towel she had brought outside with her. \"Lay down, I'm going to eat your cunt until you're screaming.\" \n\n\"Now that might alert a few neighbors,\" she said laughing, laying down on the towel knee's already bent, spread wide waiting for me. \"Ok Ben, make me scream!\"\n\nChristy and I had not been together all that often. The fact that she was into women more than men might have had something to do with that. But at the moment, she was the wettest I believe I had ever seen her. I slipped my tongue into the wet juicy folds of her slit, tasting the musky scent that greeted me, reveling in it like a perfectly aged wine.\n\n\"Damn Christy, I truly do love licking your pussy.\" \n\nChristy moaned. \"You're not bad either, for a man,\" she said teasingly. I sucked her lips inside my mouth, chewing them gently, sucking, licking and chewing again.\n\n\"Actually Christy, I've always believed I was really a lesbian. A man trapped in a woman's body.\"\n\nIt had been a running joke between us, every time we had been together, few times that they were, she had always compared me to some of her women lovers. Each time however she'd let me off the hook by winking at me, sufficient ego stroking so that I at least felt 'competent' in whatever I was doing to make her feel good. \n\n\"Hmm, I wonder what it would be like eating you with those panties on,\" I said jokingly.\n\n\"Want me to get them?\" she said seriously. I sucked her clit between my lips, pulling on it. \"Oh shit, never mind! Just keep doing that!\" she said groaning as I continued pleasuring that tiny little nubbin of flesh. Christy was soon bucking against my face, arching her back thrusting herself against my tongue. I'd already reached up, filling my hands with the softness of her breasts, toying and teasing her aroused nipples. Christy loved it when I did that, especially when she was close. I had learned how she liked it when I tapped them with my fingers, rapidly keeping tempo with the way I flicked her clit with my tongue.\n\n\"Faster!\" she demanded. \"Harder Ben, harder!\" she screamed deliriously as she came. \n\nFor a moment or two, I really did worry about the neighbors.\n\nChristy and I switched places. This time when her warm wet mouth took me in, I had no intention of interrupting her. She continued milking my prick with her hands as well as her lips, going so far as to insert the tip of her finger inside my ass, tickling my prostate, triggering within moments the orgasm that had been building. I'd never cum in her mouth, knowing that was one thing I never would do. Not with Christy anyway. The moment my orgasm began, she quickly removed my penis, placing it comfortably against her tits instead, where I joyfully began emptying a very large thick load of cream.\n\n\"Oh shit, Christy!\" I groaned loudly, still trying to keep it down in the event someone really had heard us. Watching the copious discharge bathing her breasts was extremely gratifying, very sensual to me. Christy jacked my cock rapidly, delighting in each and every rope of semen that shot from the tip of my dick to cover her luscious breasts, as well as her chocolate colored nipples.\n\nI remained on the ground for long moments afterwards, trying to catch my breath. \"I'm going inside to shower,\" she told me. \"You can join me if you'd like, then I'd like to see what those panties can really do!\" she said laughing.\n\n\"Not until we've inserted the rest of those chips,\" I told her, sitting up finally. \"Then, maybe,\" I said.\n\nChristy pouted briefly, winked, taking her cute naked little ass into the house. I followed her seconds later. \"Well, maybe after I've inserted something else,\" I thought to myself as I chased her inside.\n\n#\n\nWe had finished inserting the chips inside several pairs of Diane's 'week-day' panties. Christy meticulously restacked, folded and ensured that every pair was exactly the way they were before we began. \n\n\"Have you got any of those things left?\" she asked. I checked inside the small little envelope.\n\n\"One.\"\n\n\"Cool. It might not be a bad idea to put that one inside Diane's swim suit,\" she suggested.\n\n\"Which one though?\" I asked. Christy laughed.\n\n\"She really only wears one, that dark blue single piece thing. You'd think with a body like she has, she'd wear a decent bikini at least. But the only thing I've ever seen her wear out to the pool is that very modest one piece she owns.\"\n\nChristy quickly located it in another drawer, seconds later we'd inserted the last chip, once again folding it back where it belonged.\n\n\"I wonder if the water from the pool will have any adverse effects,\" I questioned aloud.\n\n\"Don't know, might be another interesting test,\" Christy commented. \"But if nothing else, you should be able to watch her from your bedroom window if she comes outside to sit by the pool to sunbath, as she usually does on the weekends.\"\n\n\"That's true,\" I said, considering the possibilities. \"Now, maybe we should see about testing out the intensity levels through my laptop,\" I suggested. Christy was already grinning, once again slipping on the white panties.\n\n\"Do you think we can remove the chip from these and put it in a pair of my favorite ones?\" she asked. \"Not that I mind these really, I just haven't worn white cotton panties since high school.\"\n\n\"Actually Christy, seeing you in those is pretty damn sexy,\" I told her. \"Sort of takes me back to my high school days.\"\n\nI saw a familiar look suddenly appear in her face. \"All this talk,\" she said with some difficulty. \"Is already causing things to...to happen,\" she said, grinning broadly.\n\nJust watching Christy already becoming excited even without using the laptop made me wonder. \"You think Diane ever fantasizes?\" I asked\n\n\"Huh? What?\" She said, grinning almost stupidly.\n\n\"Never mind, you're already too far gone to pay any attention to me,\" I laughed. Christy's face was already screwing up in a look of rapturous pleasure. \"Hurry up Ben, plug me in!\" She exclaimed.\n\nAt the moment, there was nothing I'd rather do. But I turned on the laptop anyway.\n\nMat was right, I'd slowly increased the electrical pulsations inside the chip to a level five. Christy hadn't made it past four before experiencing a fairly intense climax. She had begun the roller coaster ride through ecstasy when I increased it one more level, watching as she nearly doubled over on the bed, her hands down between her legs moaning and groaning furiously as she came one more time.\n\n\"Fuck Ben, you said that was only a level five intensity?\" She was already skimming the panties off of herself, beads of perspiration dotting her face. \"I think a six, certainly a seven setting would in all likelihood kill me! I hope you plan on going slowly with that thing, especially with Diane. If you're not careful, you'll freak her out. I'm not even sure she knows what an orgasm is!\"\n\nI hadn't really thought of that. One thing was for sure, in the time I had gotten to know the girls; Diane had remained very private, very aloof about anything sexual. Christy had even tried to pry information from her, learning only that Diane was indeed still a virgin, believing that \"that stuff\" was only meant for marriage. As Diane had exasperatedly told her, after a lengthy, uncomfortable discussion when Christy had continued to press her.\n\n\"Yeah, I can see that I'd better go about as slowly with her as I can. I've already made arrangements at work to spend a little more time away from the shop. I have a feeling that I'm going to need it. Especially as I plan on following Diane around whenever she goes anyplace. I want to test her reactions, especially in a public place where I'm confident she won't be able to say or do much of anything. Especially if she does become a little suspicious and begins to wonder if it does have anything to do with the panties she's wearing. Though I don't see why she would. I'm hoping she'll just be confused and somehow begin to learn to deal with it, possibly even begin to enjoy the experience. If she does, I think Mat and I are going to become very rich men!\"\n\n\"Well, she and I are scheduled to go to lunch together Sunday afternoon. That might be a good time to check things out too,\" she told me. \"That's not a bad idea Christy. Especially if you're going to that little outdoors caf\u00e9 like you usually do.\"\n\n\"We are,\" she said smiling.\n\n\"Great! I'll sit across the street at the coffee shop. You see what you can do about getting a table as close to the sidewalk as possible so I can watch you from there.\"\n\n\"Will that be close enough for you to see much of anything?\" she asked. \n\n\"I hope so, but I also came up with another little idea too.\" I produced a small miniature microphone. \"You'll also be wearing this so I can hear what's going on.\"\n\n\"Sneaky!\" Christy said fingering the device. \"Maybe we should come up with a few private signals, something like that.\" \n\n\"Now who's being sneaky?\" I asked.\n\n\"This really could be fun you know,\" Christy stated, getting into the clandestine type mood of the moment.\n\n\"Sorta like spy vs. spy. You know, like the cartoon of the guy's in the black and white hats and trench coats?\" I asked.\n\n\"Yeah, only which one's are we?\" she asked.\n\n\"Why, we're the good guys of course!\" I exclaimed. Christy frowned.\n\n\"Ok, we'll wear black and be the evil naughty spy's then,\" I added quickly. Christy's frown turned into an evil grin.\n\n\"Fuck me, you evil dirty little spy you,\" she told me\n\n#\n\nDiane arrived home late Saturday morning. I'd gone into work, wanting to ensure everything was still running smoothly, though I had planned on being away most of the day when Christy called me.\n\n\"She's home,\" Christy said after I had answered. \"She's in the shower now.\"\n\nI glanced at my watch. \"Good, I should be home in about half an hour, I'll come in and head straight for my bedroom. Think you can convince her to lay out by the pool with you?\" \n\n\"Already have, she's planning on it. And she seems to be in a pretty good mood too!\"\n\n\"Good, that might help. You never know, I guess.\"\n\n\"Should I wear the microphone?\" \n\n\"That might not be a bad idea Christy. It will give us a chance to test it out at least. I'll prompt you to maybe ask her certain questions too. I want to see if we can get her thinking in sexual terms before I attempt to do anything through the program.\"\n\n\"Ok. I think she's getting out now, see you in a few,\" she said hanging up.\n\n#\n\nBy the time I arrived home, heading immediately upstairs to my bedroom, Christy and Diane were sitting out by the pool. My blinds had already been closed at an angle, giving me a limited view of the backyard, but at least I could see the two of them in relative safety without being seen. Problem was, Diane was sitting in her chaise lounge facing the pool with her back turned towards me. About all I could see was the back of her head. Christy at least was sitting at an angle facing her, which gave me a pretty good view of her from the side. We'd rigged her CD player to appear as though she was listening to music when in fact, the earpiece she had on was the receiver so she could hear me talking to her.\n\n\"I'm here Christy. Re-cross your legs if you're hearing me ok.\" I watched as she immediately did that. \"Good! Now, I can't see Diane very well from up here. Is she wearing the one piece with the chip in it? Take a drink if she is,\" I said. Christy reached over to the small little table sitting next to her, picking up her iced tea and drinking from it.\n\n\"Cool, now can you say something to Diane so I can see if I'm hearing you ok?\" I asked.\n\n\"So, Diane, tell me, did you meet any interesting guys on the flight over?\" she asked her.\n\nDiane responded, but it was obvious she was still too far away for me to pick up whatever it was she said very clearly.\n\n\"Christy, you're too far away from her for me to hear her. Can you do something to get a little closer?\" I asked.\n\nI watched as Christy glanced up towards the sun, shielding her eyes momentarily and making some pretense of it giving her difficulty in seeing Diane comfortably.\n\n\"That sun's bright,\" I heard her say. \"Think I'll move my chair over on the other side of you,\" she announced. Moments later she had repositioned herself, sitting right beside Diane when she did. Then I watched as Diane scooted her chair a bit further away from where Christy had positioned herself.\n\n\"Good old Diane,\" I thought to myself. \"Even around Christy she needs space between them. Almost as though she's worried that some of Christy's lack of inhibitions might rub off on her.\"\n\nDiane was talking however, so I listened carefully. \"Not really, I worked First Class this trip which was nice, there was one guy who flirted with me a little,\" she admitted.\n\n\"Alright!\" I said again to myself. \"Maybe she'll start thinking about him and that will trigger the chip,\" I thought hopefully.\n\n\"He was a real jerk though,\" Diane continued. \"On top of which, he was bald, fat and ugly.\"\n\n\"Fuck!\" I said into the earpiece. Christy coughed, then giggled for a second. \n\n\"Sorry!\" I heard Christy say. \"I know it's not amusing, Diane, but I was just picturing what you said, and it sort of struck me as funny.\"\n\nObviously Diane must have given Christy one of her patented looks or something. There was a brief moment of silence. I began thinking that maybe I was going to have to access the computer chip after all if we were going to get anywhere here.\n\n\"There was one guy, he reminded me of Ben a little bit,\" Diane said, from out of the blue.\n\nI accessed the program, dialed in that particular computer chips code and set a level one intensity. I wasn't about to let that comment go. If she was thinking about me, even remotely, I was going to act on it.\n\n\"Oh? How's that?\" Christy asked her, once again crossing, and then re-crossing her legs as though she was having trouble deciding which was more comfortable.\n\n\"Yeah, I heard that,\" I said to Christy, talking over Diane as she'd already begun to answer her.\n\n\"Same sort of mustache, besides his eyes.\"\n\nAgain silence for just a second as Diane suddenly quit talking.\n\n\"Diane? You ok? You look like something's wrong,\" Christy said, somewhat alarmed. Which in turn, alarmed me a little too.\n\n\"Oh, no. I'm fine. Was just thinking about something there for a second, sort of got lost in the thought I guess,\" she responded.\n\nFrom above I watched, as Diane appeared to squirm in her seat a little. Subtle movements, but enough so that I could see she was suddenly uncomfortable for some reason.\n\n\"I think I'll go for a swim,\" she announced, suddenly standing up.\n\n\"Shit!\" I said into the earpiece, watching Diane as she moved over to the edge of the pool, diving in.\n\nChristy spoke to me directly as Diane swam beneath the water. \"Well at least maybe we'll find out if this thing works in the water,\" she said openly. \"What level have you got it on anyway?\" she asked.\n\n\"One,\" I said.\n\n\"Maybe you should go to two,\" Christy suggested quietly, as Diane broke the surface.\n\n\"Why not? What have we got to lose?\" I said back to her. \"Though even Mat doesn't know if it will work under the water,\" I added.\n\n\"May as well find out,\" Christy said, once again quietly. I set level two on the program. Diane didn't appear any different, or show any signs that anything was unusual. For several minutes she swam a few laps, then swam over to the side of the pool. Rather than climbing out however, she lay her head down on the bank, resting there.\n\n\"Diane, you sure you're ok?\" I heard Christy ask her.\n\n\"Careful Christy,\" I cautioned her. \"Don't press it.\" Once again I watched as Diane said something to her, but she was too far away for me to hear her clearly. In the next instant she pulled herself out of the water, walked by her lounge chair grabbing her towel, heading into the house.\n\n\"What happened?\" I asked. \"I couldn't hear what she said.\"\n\nI heard Christy laugh. \"I think she felt something,\" Christy said, looking directly up towards the window I was looking out of. \"When I asked if she was ok, she said something about feeling a little bit dizzy and decided that maybe she'd better go in and lay down for a while.\"\n\n\"Damn,\" I responded. \"Maybe, but we really don't know do we?\" I stated. \"Well, I guess that's about all we can hope for today,\" I said, giving in.\n\n\"Ben?\" \n\n\"Yeah?\" I said looking back out the window at Christy.\n\n\"All this secret, naughty stuff's made me horny,\" she said. I watched as Christy continued looking up at me, watched as she pulled one of the cups away from her breast, revealing that well-rounded tit of hers. She caressed it, cupping the fleshiness of her boob, and then fingered the nipple momentarily. \"Like that?\" I heard.\n\n\"Very much,\" I told her, watching.\n\nChristy reached down pulling the bottom of her bikini off to one side. Though I couldn't see nearly as clearly at this distance as I would have liked, it was obvious what she was doing to herself.\n\n\"Can you see what I'm doing?\"she asked.\n\n\"Sort of, not very clearly. But yes. I at least know what you're doing, and it looks nice,\" I told her, fishing my cock out of my pants as we spoke.\n\n\"You playing with yourself yet?\" she asked, as though reading my mind.\n\n\"Ah huh.\"\n\n\"Kind of kinky isn't it?\" she said. \"Sort of like phone-sex, and though I can't see you at all, you can at least see what I'm doing, yes?\" I saw as Christy clearly inserted at least one, possibly two fingers inside of herself.",
        "\"Yes,\" I said lustily, \"You going to finger yourself off for me?\" I asked her.\n\n\"I will, if you will,\" she said. \"I might not be able to see you, but at least I can hear you,\" she told me. \n\n\"Hey, I just had a thought,\" I said to her suddenly. \"After we're done here, go inside and see if she's asleep or not. Maybe even find out if she's wearing any panties.\"\n\n\"While she's asleep?\"\n\n\"Why not? If she is, can you imagine?\"\n\n\"How come we didn't think of this before?\" Christy asked. \"Talk about sweet dreams!\" Christy said with a little bit of awe and wonder in her voice.\n\n\"Yeah, something else to experiment with,\" I agreed. \"Anyway, show me those boobs of yours again,\" I told her. I watched as Christy reached up, removing her top entirely, throwing it behind her. \"Like this?\" She said, grinning.\n\n\"Yeah, just like that,\" I said, pounding my hard stiff cock towards release.\n\n# \"Well?\" I asked.\n\nChristy had just returned from sneaking down the hallway. She'd opened Diane's door just a crack peeking in.\n\n\"I can't tell. I think she's asleep, but she has the sheet pulled up. I saw her tits though, so I think she's actually naked.\"\n\nOn the one hand, I was disappointed to discover she probably wasn't wearing any panties. On the other...\n\n\"You could see her tits though huh?\" I asked again, wickedly. Christy smiled...\n\n\"Go see for yourself, just be fucking careful,\" she warned me. \"If she catches you...\"\n\nChristy didn't need to finish that one. If Diane did catch me peeking at her, there would be hell to pay. I crept down the hall towards her room. My heart was beating so fast I was worried that she might actually hear it. Not to mention my breathing, which I held as I approached her door, slowly, carefully turning the knob, then pushing it open just barely.\n\nI almost closed it just as quickly. I saw Diane move, but it wasn't as though she was getting up, or even aware that her door had been opened, if even just a crack. Beneath the sheet, I saw her bend her knee, forcing the sheet up into a mini tent, still lying on her back while she did. The best part however, was that the sheet fell even further away from her breasts when she did that. Diane certainly wasn't large breasted. Her boobs weren't nearly as big as Christy's, for that matter, but they were certainly beautiful. Small busted would be perhaps the correct term, though far from being flat-chested by any stretch of the imagination. Standing there at the doorway peering in with one eye only, I got a wonderful glimpse not only of her tits with the light pink small sized areola's capping each one, but saw what I could only believe was a very subtle movement taking place beneath the sheet as first one leg bent, then the other. On top of that, she moaned. Not wanting to press my luck, I immediately closed the door just as quietly and as slowly as I had opened it.\n\nChristy was still waiting for me at the end of the hallway leading back into the living room. \"Well? Did you get to see her titties?\" she asked conspiritorially.\n\nI was grinning like a Cheshire cat. \"Yeah, and even better, I saw her bend her knees beneath the sheet, then watched as the sheet moved up and down slightly. I think she was masturbating!\"\n\n\"No shit! Really? Diane?\"\n\n\"Yeah really, I think she was!\" I said still grinning. \"Damn, wish I'd taken her to level three at least,\" I pondered.\n\n\"I have a feeling she's taking herself there now, maybe even to a four,\" Christy snickered. \"Why don't we go back to your place and you can take me to a four, maybe even a five,\" she said wickedly.\n\n\"Hell, why don't we go for the whole nine yards?\" I asked her. \"Why not all the way to a seven then?\"\n\nChristy looked at me, just about as wantonly as I'd ever seen her look. \"You do that, and I might even let you cum in my mouth,\" she told me.\n\n#\n\nI had no desire to leave things up to chance, I dropped by the resturant a full hour earlier than when I knew the girls would be arriving. I tipped the waiter handsomely, not only for giving them excellent service, but ensuring that the table I wanted would be available for them when they arrived. I planted myself down at a table across the street at the coffee shop, bringing a paper along with me. Though the likelihood of being spotted by Diane was remote, I planned on hiding behind my newspaper as much as possible. Unlike out by the pool, this time I wouldn't be able to speak to Christy directly, though I would, or should be able to hear anything and everything the two of them discussed. More importantly, I hoped Christy would remember all the various signals we'd agreed on. If she touched her hair in anyway, that would mean to increase the level. If she scratched her nose however, that was an immediate signal to decrease it. I hoped however that I would hear enough to have a pretty good feel for what was actually taking place, reacting to it, as I couldn't actually talk to Christy or ask her any questions.\n\nMy biggest worry had been if Diane would actually wear her 'Sunday' panties. If she wasn't, I could end up wasting a lot of time trying to figure out which pair she was wearing. Thankfully, Christy had had the foresight to barge into the bathroom while Diane was in there, on the pretense of needing to pee beyond her ability to hold it. In doing so, she confirmed that Diane was in fact wearing her pink 'Sunday' briefs. She'd managed to tell me that just before I left.\n\n\"Mat also told me there's like a two mile range,\" I told Christy. \"I think to get a little bit of a head start, I'm going to program it at level one. The moment she comes within range, it will hopefully begin working on her. Maybe by the time you guys get to the restaurant, there will have been enough time that she's at least starting to think in sexual terms.\"\n\n\"Yeah right. Diane?\"\n\n\"Well, she was playing with herself, or at least I think she was,\" I'd responded. \"Anyway, any edge we can get will give us some sort of advantage. When you're two miles from the caf\u00e9, just be aware that it should start working. Sort of look for any odd signs of behavior, if by the time you get there and feel it's worth jumping it up to a two, run your fingers through your hair or something.\"\n\nI'd been at the coffee house for half an hour when I saw the waiter I'd tipped lead them over to their table. Christy knew where I would be of course, quickly looking in my direction. Before she'd even sat down, I watched as she brushed her hair with her fingers.\n\n\"You're kidding!\" I said to myself. I already had my laptop open. I quickly accessed the code and set a stage two excitement level. I sat there listening to them discussing what they were considering for lunch, ordering, even talking about the weather. I'd expected that of course, waiting patiently. Christy and I had discussed her eventually steering, or trying to anyway, the conversation towards more intimate topics. As she'd expressed a brief interest in the guy on board the plane who'd reminded her of me, we thought it might be a good idea for Christy to bring up some made-up story by way of a piece of juicy gossip to see how Diane might react to it. All I was doing was waiting for the right moment and opportunity for her to do it. It came unexpectedly when it did, as I sat there listening.\n\n\"Have you noticed that Ben never brings anyone home?\" Diane asked. Christy was silent for a moment, surprised perhaps, as I was, no doubt trying to think of something to say to keep the momentum going. Diane didn't wait for a response however, continuing.\n\n\"You don't think he's...he's,\"\n\n\"Gay?\" Christy burst out laughing. I almost fell out of my chair when I heard that.\n\n\"Heavens no Diane, and I happen to know that for a fact!\"\n\n\"Ah oh,\" I thought. \"Careful here Christy.\"\n\n\"Well I guess you might at that,\" Diane said, with a little bit of an uptight sounding tone to her voice. \n\n\"What's that supposed to mean?\" Christy responded a little testily.\n\n\"Well this is going to hell in a hand basket,\" I said to myself. \"If this keeps up, they'll be throwing their lunch at one another, if they wait even that long,\" I thought.\n\n\"I'm sorry Christy, I didn't mean it to sound like that. I really don't know what's come over me, maybe I'm coming down with something. I just feel, well, I feel a little peculiar is all.\"\n\nI was half tempted to lower the setting back to one. It seemed that even a level two setting was becoming troublesome for her.\n\n\"I just figured since you also like women, that maybe you had discussed...well, you know sexual preferences or something. Actually, I guess I shouldn't even be asking you this question. Frankly, I don't know why I did or why I suddenly started wondering about it.\"\n\n\"Go! Go! Go!\" I tried to will Christy from across the street.\n\nI watched as Christy leaned across the table towards Diane in a conspiratorial manner. \"Just between you and me? Ben and I have fooled around once or twice, but if Sharon ever found out, she'd kill me!\" Christy told her.\n\nNow it was Diane's turn to sit there silently for a moment. \"You and Ben?\" she said in disbelief. \"The two of you have, have...\"\n\n\"Fooled around? Yes, a few times. Don't worry Diane, it's nothing serious, we just have fun every once in a while, that's all!\"\n\n\"You don't think its wrong, fooling around with Ben outside of marriage?\" Diane questioned her.\n\n\"Of course not silly. We have a good time, and Ben's a very tender, very, very good lover,\" she added.\n\nI wasn't sure if Christy had honestly meant what she'd just said, but it made me smile anyway. I was so involved in listening to their discussion that I nearly missed it when Christy ran her hand through her hair again.\n\n\"God, I hope you know what you're doing Christy,\" I said, punching in the number for level three now.\n\n\"And something else too Diane, as you are already well aware, I do generally prefer women over men. But Ben's as good, if not better even than most women I've been with as far as his tongues concerned, he's given me the strongest most intense....\"\n\n\"I'm not sure I should be hearing this!\" Diane interrupted her. \"It's...it's...oh my, can I have your water?\"\n\nI'd seen her drain her own glass just a few minutes ago. Now she was asking Christy if she could have hers. Obviously something was happening to her.\n\nWhile Diane drank down her second glass of water in as many minutes, Christy picked up the tempo, turning up the heat as it were. \"Anyway, like I was saying, he really does know how to pleasure a woman Diane, I've even found myself masturbating while thinking about it,\" she confessed openly.\n\n\"Would you excuse me a minute?\" Diane said suddenly standing up. \"I need to use the bathroom.\" \n\nOnce again I was half tempted to turn the level down. To my total and complete surprise however, I saw Christy stand up actually waving at me and running both hands through her hair frantically. Almost immediately she chased after Diane, heading for the bathroom.\n\n\"This could blow up in our faces,\" I thought, but then reprogrammed Diane's microchip to a level four setting. Even Christy had had an orgasm at this level. And I began to wonder if that's what she was hoping for now.\n\n\"I hope you can hear me Ben,\" she said suddenly. \"I'm following Diane into the bathroom, her face is flushed, she's obviously feeling something, and I think now's the time to push things just a little.\"\n\nThough I could no longer see either one of them of course, I could at least hear what was going on. The sounds of a door opening, then closing, a metallic \"click\" sounding much like Christy had actually locked the bathroom door behind her.\n\n\"Diane? Are you in here?\" Christy asked. \n\n\"Go away,\" I heard Diane say. There was an obvious quiver to her voice, and she sounded even a little frightened. \"I'll...I'll be out in a few minutes,\" I heard her say a little more softly.\n\n\"Open the door Diane,\" Christy demanded. \"I'm worried about you.\"\n\n\"I'm fine,\" Diane stated, obviously sounding not fine at all.\n\n\"I mean it Diane, if you don't open the door, I'll slide in beneath it, and I'm not looking forward to having to do that!\"\n\n\"Please Christy, don't! I...I...I don't know what's happening, but I'm sure I'll be fine in just a few minutes.\"\n\n\"I warned you Diane...ok, here I come,\" Christy said. The sound of the stall door opening could be heard.\n\n\"See? I told you I'm...(THUNK).\" I sat there listening to nothing but silence for a moment.\n\n\"Ben? Can you hear me? If you can, go ahead and turn the chip off,\" Christy said. \n\n\"Shit!\" I exclaimed, startling the waitress when she came over to refill my coffee.\n\n\"Don't worry,\" Christy said a moment later. \"I think she just fainted. Oh, and Ben? I think she just finished cumming too!\" I heard her laugh, making me feel greatly relieved, but also more than just a little worried and concerned for her also.\n\nAgain there was silence for a few minutes though I could hear the sound of movement. \"Diane? You ok now? I think you must have fainted...or something,\" she told her. \"Here, let me help you up, and then maybe I'd better drive you back home,\" she said.\n\n\"Oh Christy, I'm so sorry, it was just so strange! I don't know what happened, one moment I was feeling, uh, feeling fine, then I felt a little light-headed, weak-kneed, and the next thing I knew, I was...\"\n\n\"Having an orgasm?\" Christy asked.\n\nI dropped my keys in the gutter as I was about to insert them into the door of my car. I was still listening of course, but wanted to get home before them so I could be there when they got home. Hearing Christy's comment stunned me. \"Shit Christy, don't over do it!\"\n\nDiane's voice was so low I nearly didn't hear her. \"How'd you know?\" She asked.\n\nChristy laughed, though just as softly. \"I saw the look in your eyes at the table,\" she told her. \"Which is pretty close to the way I look just before I do,\" she said. \"Haven't you ever watched yourself in a mirror when you're cumming?\" Christy asked her.\n\n\"Fuck Christy!\" I said climbing into the front seat of my car. \"What the hell kind of a question is that? Don't freak her out for hells sake!\" I admonished her uselessly.\n\n\"No...\" Diane said, simply.\n\n\"But admittedly, you do masturbate, yes?\"\n\nAgain there was silence. \"Can we talk about this on the way home?\" she asked. \"I feel sort of funny discussing this in the women's bathroom,\" she said.\n\n\"Of course, I'll go out and get the check, meet me out front by the car. Sure you're going to be ok?\" she asked her again.\n\n\"Yes...yes, I'm fine now, seriously. I don't feel weird or anything anymore. Just a little something, different,\" Diane actually laughed sounding nervous.\n\n\"I guess I can tell you Christy, you're about the only person I think I could say this too. I actually think I'm horny!\"\n\nI nearly drove my car into a ditch.\n\n\"Oh yeah, we need to get you home, and quick too!\" Christy said laughing with her. \"We have a LOT to talk about, girlfriend, a LOT to talk about!\"\n\nI soon got out of range of the microphone. Though curious as to what else they had talked about, I could only hope that Christy would maybe fill me in later. I'd gotten home about fifteen minutes before they did, watching as they entered the house. I hoped that Christy would come over and say something to me, but it wasn't until well after Diane had gone to bed that Christy snuck over to my place. I was preparing to go to bed myself, when I heard her knocking at the backdoor. I opened it, and saw her standing there naked.\n\n\"Well? You gonna ask me in or not?\" \n\n\"Only if you promise to tell me what happened after you left.\" I said. Christy walked over to me, reaching down, unzipping my fly and grasping my flaccid penis.\n\n\"After you fuck me,\" she said. \"Then I will.\"\n\n\"I take it things went well after you left?\" I said, feeling my prick growing rapidly as she continued to fondle it.\n\n\"Lets just say she got me very horny on the drive home. Very horny in fact.\"\n\nWe didn't make it past the kitchen table. \n\nNearly ripping off my clothing, Christy pulled me towards the table, hopping up on it. \"Hurry Ben, I need you!\"\n\nI moved towards the edge of the table. She was situated at the perfect height. Taking my penis in hand, I began teasing her already wet slit, running the length of my member back and forth, tickling her clit before allowing it to rest against her. \n\n\"Quit teasing and fuck me, you bastard!\" Christy demanded. I slid myself against her one more time, relishing the heat and warmth of her split before slipping deeply, quickly inside of her.\n\n\"Better?\" I asked, as I rammed myself into her fully.\n\n\"Oh fuck yes!\" Christy groaned, thrusting back against me. I began a rhythmic coupling with her that soon had both of us racing towards climax. Whatever foreplay either one of us might have enjoyed had been going on all day. Christy was at a fever pitch, drawing me along with her in a frenzy of lust, passion and unfulfilled need.\n\n\"Harder! Faster!\" she screamed, wrapping her legs around me tightly. I continued to slam into her with a rapidity that threatened to collapse the table. Barely touching it now, she had dug her hands, particularly her fingernails into my back, raking me as her pleasure began to build, taking her to unimaginable heights of ecstasy. \n\n\"Oh yes...fuck me...fuck me...fuck me!\" Christy screamed loudly over and over again. I felt her tense suddenly, sucking in her breath, holding it. As she did, I felt my cock expand, felt the first tremendous discharge escape my prick, filling her cunt with fluid. She screamed, every ounce of her breath exploding from her lips in wild abandonment as her orgasm overwhelmed her.\n\n#\n\nIt was quite a while before either of us had recovered sufficiently to even speak. \"Damn girl, what was that all about anyway? Not that I didn't enjoy it mind you, but shit! You gotta tell me what made you so fucking horny!\" I said.\n\n\"The drive home? You never shut down the program did you?\" she asked. I sat there for a moment thinking.\n\n\"I thought I did,\" I said finally. \"But in all the excitement, I'm not entirely sure that I did. Why?\"\n\n\"On the way home, Diane was squirming, fidgeting around in her seat. I figured that she was still being stimulated somehow. Either you'd forgotten and left the program running, or she was causing it to work on its own by being aroused herself. Either way, I decided to try and take advantage of the situation. That's when I asked her what she was thinking about back at the restaurant. If she hadn't been as aroused as she already was, I don't think she'd have told me. But since she looked like she was on the verge of having another orgasm, she was in the mood to be sharing!\"\n\n\"What did she say?\"\n\n\"Well, I guess when I had mentioned that you and I had fooled around before, especially telling her how good you are with that tongue of yours...\" Christy winked, \"Diane started imagining that. Coupled with the stimulation she was already getting, she became more and more aroused. She admitted to me, of course, that's never happened to her before, duh. And she was really embarrassed by it initially. Anyway, telling me about it on the drive home, she got aroused all over again. And that's when I wondered if you'd left the program on. It was at that point I decided to gamble a little bit.\"\n\n\"Gamble? Christy? What did you do?\"\n\nChristy smiled, reaching down to actually touch herself as she remembered. \"Listening to her, I told her to tell me specific's, to describe to me what she was thinking about when she came. Surprisingly, she did. And she told me in pretty juicy detail, imagining you down between her legs licking her cunt, I began playing with myself, slipping a finger beneath my panties underneath my skirt. Diane knew what I was doing of course, continued watching me, AND telling me what had turned her on so much. The more she watched, talked...the more she became excited. Shit Ben, she joined me!\"",
        "\"You mean to tell me she actually played with herself in front of you on the drive home?\" \n\n\"Ah huh, she did. And even came again too! The only bad thing, the moment we got home, she raced upstairs to her bedroom, slammed the door and never came out again.\"\n\n\"Shit! Hope we didn't freak her out,\" I said.\n\n\"I think she freaked herself out,\" Christy replied. \"I'm tempted to believe that's maybe the first time she'd ever been that horny, certainly that uninhibited. I'm serious Ben, she sat there watching me finger myself, and the next moment, she'd lifted up her skirt, slid her hand down inside the front of her panties, and was doing the same thing I was!\"\n\nI glanced at my watch, it was nearing midnight. \"I wonder if she's still wearing them?\" I asked. \"Do you know if she sleeps naked, or what?\"\n\n\"I'm pretty sure she just wears panties and a tee shirt to bed. At least that's all I've ever seen her in first thing in the morning.\"\n\n\"Hmmm, maybe now would be the time to experiment a little more,\" I suggested. Christy followed me into the den where I opened my laptop. \"Well at least that's settled,\" I told her. \"I was pretty sure I'd turned the program off, and I did. So her arousal and excitement was all due to herself, and the panties.\"\n\n\"Damn, they really are magic panties aren't they?\" Christy said in wonder and surprise.\n\n\"Well shall we?\" I asked, already accessing the program.\n\nChristy giggled. \"Better not set it too high though, she's already had an interesting day.\"\n\nI set the level at two. \"Guess we'll find out in the morning hopefully, maybe she'll find herself having some very interesting dreams.\"\n\n\"Well, I have to get up and go into work in the morning, but at least I should be up when she is. Even when she isn't working, Diane always gets up around the same time I do. I'll call you from work if I learn anything interesting,\" she said.\n\n#\n\nIt was shortly after eight the next morning when Christy called me from work. I knew it had to be important for her to have done so, this early.\n\n\"Oh Ben, you should have seen her this morning. She was already up when I came downstairs. She was sitting at the kitchen table drinking a cup of coffee, but more importantly, she looked like hell.\"\n\n\"You're kidding!\" I exclaimed.\n\n\"No...seriously. She looked like she'd been put through a ringer. In all the time we've lived together, I've never seen her look like that in the morning. You know Diane; she's always immaculate, even when she gets up in the morning, she fixes herself up first before ever coming downstairs, but not today!\"\n\n\"Did she say anything?\"\n\nChristy laughed. \"Yeah, that's the best part. When I asked her if she was ok, especially because she knew she looked like hell, she told me she'd had really strange dreams all night long.\"\n\n\"Did she tell you anything about them?\"\n\n\"No. I asked, but she refused to tell me, though she said she couldn't really remember them, only that they were strange. Oh, and one other thing, I did notice she was wearing her yellow 'Monday' panties this morning. So she had changed them. That much I do know.\"\n\n\"Did she say anything about what her plans were for today?\"\n\n\"Oh yeah, she did in fact. She mentioned she was planning on going to the mall later to do some shopping.\"\n\n\"Hmmm, I guess I'll follow her, see if I can experiment a little more with the settings,\" I told her.\n\n\"Damn, wish I could go with you,\" Christy said. \"I bet that will be interesting!\"\n\n\"I'll let you know how it went after you get home,\" I said. \n\n\"You better. Oh and Ben?\"\n\n\"Yeah?\"\n\n\"I'm wearing my panties today too. \n\nI laughed, \"Be sure and think naughty thoughts then kiddo. And make sure you share that experience with me later too!\" I added.\n\n#\n\nI had no idea what time Diane would leave, if in fact she would, after what Christy had told me over the phone. About all I could do was dress, sit patiently watching out the window in the event she decided to still go shopping. The morning dragged by. I had just about given up on her when she suddenly appeared outside heading towards her car. I quickly gathered up my laptop and keys waiting for her to pull out. After that I followed her at a fairly safe distance, fairly confident of where she was going in the event that I lost her in traffic. As an afterthought, I flipped open the laptop, accessing her 'Monday' panties code, setting the level at one.\n\n\"Might as well give her a head start,\" I thought. I figured it was highly unlikely that she was thinking in any terms sexual. Giving her a jumpstart to begin thinking along those lines probably wasn't a bad idea. \n\nDiane pulled into the parking lot at the mall. Luckily, I managed to find a spot considerably closer than she had, waiting for her to go in ahead of me where I could then follow her at a relatively safe distance. As she reached the doors, about to go in, I set the level at two, shutting my computer and exiting the car. I caught up with her just as she reached a shoe store. I quickly ducked in to another one, pretending to be window shopping, when she moved on. For nearly twenty minutes she wandered around like that, with me following. In all that time I saw nothing to indicate she was either feeling or experiencing anything. Nothing in her actions even hinted that she was remotely aroused. Moments later, she stopped in front of yet another store, seemed to consider going in, and then did. I looked up at the sign overhead and smiled.\n\n\"Victoria's Secret,\" I said to myself. \"Hmm, I wonder if she is becoming aroused after all?\"\n\nObviously I couldn't very well follow her into the store without her becoming suspicious if she spotted me. I was fairly certain she would see me if I did. I chose instead, to position myself a short distance away, sitting down on an available bench seat where I had often sat before when I'd enjoyed my favorite past-time of simply sitting there watching the people go by. Only this time, I was only interested in one person. Diane.\n\nAs she was inside that particular store, I decided to increase the arousal level to three. No doubt that she would be feeling, or would be aware of something this time, but I hoped she would simply attribute it to being in that particular store. I also had no idea what she might be purchasing, or why for that matter. But whatever it was, I was fairly confident now that she was thinking in sexual terms.\n\nThirty minutes later she still hadn't come out. I'd been watching the store faithfully, so I knew she couldn't have slipped past me. Even so, I was half tempted to walk in, take a quick look around to see if I could spot her, then hopefully exit the store before she did. Instead, I accessed the code once again, and reset the level up to four.\n\n\"Come on Diane, where are you and what are you doing?\" I asked myself worriedly. Fifteen minutes after that, she reappeared carrying a fairly large bag. Obviously she had made several purchases. I was dying to know what, hoping she hadn't purchased any panties and was now wearing them. Again, I didn't see anything unusual about her demeanor, suddenly becoming worried that maybe she had. As she headed towards the escalator to head upstairs to where there were even more stores, I quickly sat down on yet another bench, flipped the laptop open, accessing the code once again.\n\n\"Here we go!\" I thought. I'd meant to key in level five, missing, and hitting six instead. When I did, I glanced up towards her just as she stepped on to the escalator. In the next instant I saw her appear to stumble as she stepped, grabbing hard onto the rail with both hands, appearing weak-kneed all of a sudden, frantically looking around, embarrassed as she did. I watched as she continued to ride upwards, gradually getting a hold of herself, straightening. But she maintained her firm grip on the railing as she continued up. I couldn't afford to let her out of my sight.\n\n\"Not now!\" I thought.\n\nI quickly followed after her, purposely looking off in another direction, turning my head in the event she looked back down the escalator and spotted me. By the time I had reached the upper level she was gone.\n\n\"Damn it! I lost her!\" I belittled myself. I began frantically looking for her, worried enough that I stopped long enough to lower the setting back down to four, at least. Having done that, I continued on my search for her quickening my pace, glancing inside nearly every store as I passed. I was about to give up when I slipped by a bed & bathroom shop that also specialized in health food items, as well as a few 'body' relaxation kinds of items. I knew that from having in fact shopped there before myself when comparing items you could find in any health store, to those I sold in mine.\n\n\"Ah hah!\" I said happily. \"She's buying a vibrator!\" I quickly did an immediate turnabout and sure enough, spotted her towards the back of the store, which is where they displayed all sorts of toys that they sold, under what I considered, false pretense. \n\n\"Great for working out those sore muscles,\" I remembered reading on one such vibrating wand. \"Yeah, sure helped me out with my stiff sore muscle.\" I said to myself.\n\nI was able to see her clearly from where I stood out in the hallway. Balancing my computer on the railing, I once again accessed the code, inputting level five this time, ensuring I was very careful about doing that. Even so, I expected, even anticipated, some sort of noticeable change. I did, but once again not in the manner I had expected.\n\nDucking behind a large fake tree that was apart of the decorations of the mall, I watched as Diane approached the checkout desk. Close enough to see, I saw her place one of those wands I'd purchased for myself upon it, as well as another, much smaller box, along with a package of batteries. She paid for everything, and I prepared to follow her out of the store when she left, when I saw her talking to the clerk who then pointed her towards the far back corner of the store once again. I watched as Diane headed off in that direction, disappearing a moment later. Curious, and unable to help myself, I quickly entered the store and approached the same sales clerk.\n\n\"Excuse me, and I feel silly having to ask you, but may I use your restroom?\" I asked, appearing anxious and in badly need of having to pee.\n\nThe clerk blushed knowingly, once again pointing off in the same direction that I'd just seen Diane head for.\n\n\"Thank you,\" I told her, and quickly headed towards the restrooms.\n\nI'd already noticed while standing outside that no one else had either entered or exited the store. Aside from the clerk at the register, there was only one other and she was still helping the only other person besides Diane who had gone in. I quickly made my way down the back hallway, reaching an alcove. On the right was a door marked 'Men's room'. On the left, 'Women's', I listened carefully for a moment just outside the door, hearing nothing. Scared shitless, I decided to chance it, pressing against the door and praying at the same time that it wouldn't make any noise upon opening. Thankfully it didn't. I stopped once again, listening for anyone's approach, not wanting to be caught peeking into the woman's bathroom, and turned my ear for any noises coming from inside. This time when I listened, I heard something. A very faint humming buzzing noise, almost too faint to have really heard had I not been purposely aware of what I was expecting, hoping to hear.\n\n\"Shit!\" I said to myself. \"She's fucking masturbating!\"\n\nNot wanting to press my luck, I quickly left passing by the clerk and giving her a \"thank you\" look, trying to appear a little sheepish and embarrassed as I did. She smiled back at me knowingly, quickly looking away.\n\n\"Well, that was certainly interesting,\" I said aloud when I finally reached the outside hallway once again. I considered waiting there for her, but then decided against it. If Diane was in fact masturbating, then I would let her off the hook for the time being and head home. I quickly shut down the program, turning it off completely, and made my way back to the car.\n\n\"See you at home kiddo,\" I said, satisfied that this little adventure had been a complete success. \n\n#\n\nAs I had nearly the entire afternoon to myself, I decided to head out back to the pool, catch a little sun, perhaps even grabbing a nap along the way. I'd been sitting there for less than an hour when I heard Diane's car pull into the driveway. As much as I would have liked to see her, even speak with her, I refrained from getting up, continuing to lay there instead, acting as though I was asleep. To my surprise, a short time later I heard Diane's approach as she came out back to join me.\n\n\"Hi Ben. I wondered if you were staying home today when I saw your car sitting in the driveway earlier.\"\n\nStanding behind me with the bright sun to her back, I still had to shield my eyes even with my sunglasses on, trying to look at her. The way the sunlight wrapped itself around her, especially filtering through her golden hair the way it did gave her the appearance of a goddess having just descended from the heavens.\n\n\"Yeah, decided to take a couple of days off, just sit around, relax, ya know, that sorta thing,\" I said cordially to her.\n\nThough we'd certainly been friendly towards one another ever since she'd moved in, we'd never in all that time even remotely flirted. Which is to say, she hadn't, anyway. And I had given up trying to flirt with her as soon as I realized it wasn't going anywhere.\n\n\"Mind if I join you?\" she asked unnecessarily.\n\n\"Not at all, me casa, seu casa,\" I replied.\n\nDiane walked around the chair, sitting down. Which surprised me as I'd fully expected her to move her chair away from me, even if it was only a few inches. She'd always done that. The fact she hadn't, I found to be extremely interesting.\n\nThe next thing I found interesting, I suddenly realized, was the fact she was wearing her one-piece swimsuit. I must have been staring at her, which wasn't any surprise as I had all kinds of thoughts bouncing around inside my head.\n\nShe turned, facing away from me and I thought I saw her blush. \"Is, is something wrong with me?\" she asked suddenly.\n\n\"Ah, what? No! Of course not, I was...just looking at you. The light maybe, I don't know, something, yes,\" I said. Here I was, caught with my mouth open, taken by surprise, and she was the one feeling awkward, uncomfortable here.\n\nDiane turned back around facing me, still blushing but curious by the expression on her face. \"What do you mean?\" she asked.\n\n\"You look different somehow,\"I suggested. \"Maybe your hair? No, not that, but something I said, playing it out. \"Ah, you wearing different makeup?\" I asked.\n\n\"No, not really,\" she said, blushing even more than she had been.\n\n\"Well, whatever it is, you look even more beautiful than you normally do,\" I said frankly. This time she turned crimson, but surprisingly, she didn't react negatively as I half expected her to, or even turn away from me.\n\n\"Thank you,\" she said simply.\n\nWe sat in silence for a time. The last thing I wanted to do was scare her off. I figured if she was thinking in any terms sexual, then I had to allow the chip, which was tucked away inside her suit, to work it's magic. If Diane became even a little aroused, then hopefully the chip would activate and do what it was supposed to do. All I could do now was wait.\n\n\"Can I ask you a personal question?\" she asked, finally breaking the silence. It was all I could do to contain the excitement in my voice when I answered her.\n\n\"Sure, feel free to ask me anything,\" I said, as calmly as possible.\n\nDiane didn't speak immediately, however I could tell she was still thinking about what, and how she wanted to say it. \"Christy said that you and she have been, intimate,\" she said finally.\n\n\"Yes, we have,\" I responded, not wanting to say too little or, too much.\n\n\"Doesn't that bother you any?\" Diane asked. Her question confused me a little, and I wasn't sure where she was going with this.\n\n\"Careful Ben. This isn't going very well,\" I thought. \"Bother me?\" I countered.\n\n\"Yeah, the fact that she has a woman lover she's involved with, as well as being with you occasionally.\"\n\n\"Diane, if you're asking me if it bothers me she likes women? The answer is no. I for one find the thought of that rather arousing, to be honest with you. If you were asking me if it bothers me that she also enjoys being with me, or with men occasionally, then I'd also have to say no to that, too. I think Christy is a very sensual, sexy woman. I think that you are a very sexy, sensual woman. Obviously you don't have the same desires or feelings that Christy has, it doesn't make either one of you worse, or better than the other in my eyes...just different.\"\n\nI didn't know if I'd just stepped in a pile of shit here or not. I expected some sort of tirade from Diane at this point, but I figured I didn't have a whole lot to lose either.\n\n\"You think I'm sensual? Sexy?\" She asked me with obvious surprise. \"Why would you think that? I don't wear sexy clothes like Christy does; hell...I don't even own a bikini. You can see what kind of swim-wear I own.\"\n\n\"You don't need to wear a bikini to look sexy, Diane. Or even be sensual. The look on your face you were showing me earlier was about as sensual as I've ever seen any woman look. And even though you're not flashing a lot of bare skin in that suit, it still doesn't stop me from wondering what you'd look like beneath it.\"\n\n\"You, you think about what I look like naked?\" She again asked, in semi-surprised shock.\n\n\"Since you've asked me...yes. Yes I do. And maybe you'll get mad at me for saying this to you Diane, but, since we're being honest here, I'll be truthful with you and confess that I have in fact masturbated while fantasizing about you. And yes, wondering what you look like naked, wondering how you'd feel in my arms. Wondering...how you'd taste!\"\n\nI'd strung out a hell of a lot of information as quickly as I could say it. Expecting her to suddenly stand up and run off into the house. Frankly, I was surprised she hadn't, surprised at the very least that she hadn't hauled off and slapped me or something.\n\nShe sat there looking at me. I kept waiting for her arm to go back, expecting it any moment. Or at the very least her getting up and all but running back into the house.\n\n\"I've never experienced that,\" she said quietly. Now I really was confused, it wasn't the answer, or even the reaction I was expecting. Worse...I'd forgotten the question if there had in fact been one.\n\n\"Ah, experienced what?\" I asked tentatively.\n\nDiane was blushing again, profusely. \"What you said. Wondering what I would taste like. I've never had anyone do that to me,\" she admitted. Now I really was shocked.\n\n\"You've, you've never had anyone go down on you before?\" I asked incredulously.\n\n\"No...never!\" \n\nI'd noticed for perhaps the past five minutes or so that Diane had also appeared a little fidgety. I couldn't help but wonder if she had triggered the computer chip, and that now it was helping her become even more aroused than she obviously had been.\n\n\"As beautiful and attractive as you are? You mean to tell me that no one has ever done that for you?\"\n\nDiane shook her head no. \"I'm sure Christy has told you...I'm still a virgin Ben. And I plan on staying that way until my wedding night,\" she said truthfully. \n\nI swallowed, maybe Diane was out of reach here after all, but it hadn't been the point to see if I could seduce her actually. Just arouse her, prove that Mat's micro-\"cum\" chips as he called them really did work. Diane had been the perfect unbiased subject.\n\nI was about to answer her, though I wasn't sure what exactly I was going to say when she stood up. I figured our conversation was over with. Obviously I had treaded on thin ice here with her, and had fallen through.",
        "\"Diane,\" I began, trying to think of something else to say to her when she pulled her top down, exposing her marvelous pink-tipped breasts.\n\n\"I am sensual Ben, even sexy maybe. Just because I'm a virgin doesn't mean I don't have feelings, or experience desires. Especially lately,\" she said as though still curiously wondering about that. \"And I'll tell you something else too, I've been fantasizing a lot lately, more than I ever have it seems, and...I've been fantasizing about you!\"\n\nDiane almost teasingly pulled her suit down the rest of the way, stepping out of it. The fact she had done so in the backyard in broad daylight spoke volumes. The fact I had a very high privacy fence might have helped. But as demure and shy as Diane had been previously regarding anything of a sexual nature, she had shocked me by this sudden, dramatic change in attitude.\n\nI found myself staring at the thin, neatly trimmed patch of blonde hair covering her mound. It was almost mesmerizing, drawing me towards her like a magnet. I held out my arms towards her, she in turn walking forwards towards me. Sitting up, I found myself perfectly positioned and sweetly kissed her fur-lined slit. As I held her there, I felt her tremble, felt a thousand tiny goose bumps suddenly break out all over her arms and legs.\n\nI nuzzled her sweet smelling quim with my nose, drinking in her fragrance, tentatively touching her with the tip of my tongue. Once again she shivered, I felt the sudden pressure of her hand on the top of my head for balance, security. I licked her again, a little more forcefully, pushing my tongue through the barrier of her lips, forcing my way in.\n\n\"Oh Ben!\" She moaned softly.\n\nShe spread her legs for me almost involuntarily. Diane was wet, very wet. I couldn't help but wonder if that little microchip had had anything to do with Diane's particular state of arousal. Even if it had, where she was now, and climbing quickly, was all her. \n\nI found her hard tiny little knot of sensitized flesh. I kissed it, and then licked it lightly, tenderly. Again she groaned, again she seemed to almost collapse against me, stepping away from me now, settling down on the bath towel she'd brought outside with her. I followed, once again placing myself between her legs, reaching up simultaneously to feel, caress and play with those soft sweet tits for the first time.\n\nDiane was on fire. In all the time I'd known her, I had never seen her act this way! Never in a million years would I have thought that I would one day be lying down between her legs licking her pussy the way I was doing now either!\n\n\"Oh my gawd Ben! I can't believe what this feels like!\" she exclaimed. I continued tonguing her slit, flicking her clit with a series of rapid strokes, alternating with kissing and sucking it, in between. I was also enjoying the feel of those incredible firm nipples. Diane had longer, fatter, thicker nipples than Christy had. As I pulled on them, stretching them away from her breasts, rolling them between my fingers, her pussy seemed to flow with an even greater abundance of female nectar.\n\n\"You're driving me crazy!\" Diane groaned wildly. \"Oh Ben...Oh Ben...Oh Ben!\"\n\nDiane wasn't the only one going nuts here. I could feel my erection trying to burrow a hole into the ground. I knew she was only a few seconds away from climaxing, wondering briefly if she would in turn do something to alleviate and satisfy my own rapidly growing need.\n\nAs her back began to arch upwards, tensing, I knew that she was dangling off the edge. Switching tactics slightly, I captured her clitoris between my lips, holding onto it, sucking it gently. \n\n\"Oh fuck! Ben! I'm cumming!\" She wailed. I sucked her clit into my mouth as hard as I could without hurting her. Diane's loud unexpected scream of pure pleasure split the silence of the day. Like her orgasm, the high pitched scream gradually diminished, as did my sucking of her clit in response to her slow decent back from her trip to paradise. \n\nThe sounds of dogs barking nearby alerted us both that if the neighbors had been curious, they'd certainly be aware of what we'd been doing now.\n\n\"Lets go inside,\" she implored me, scurrying away before I could say anything to her. My face was slick with her juices, wiping it as I chased after her; I once again enjoyed the sweet taste of her pussy, reminding me of what she had told me earlier. We'd barely gotten inside my place when she turned, facing me as I entered.\n\nI stood just inside the door of my kitchen, inserting my finger into my mouth licking the juices off that I had wiped from my face. Diane's look was of incredulous rapture as she watched me.\n\n\"You taste fucking good Diane!\" I told her continuing to lick my fingers. For a moment, I thought she was going to cry. Walking over towards me, she took my hand from my mouth, she guided me down between her legs, where I caressed her pussy, sliding my index finger up her still very moist wet slit. She next pulled my hand back up to her mouth; sucking the finger I had just finished gliding over her.\n\n\"Hmm, yes I do, don't I?\" She smiled wickedly. I was a little stunned by this sudden change in her, this naughty delicious change I was seeing in this vixen that had miraculously transformed before my very eyes. She dropped down to her knees before me, yanking my swim trunks down as she did, freeing my erection that stood hard, throbbing. Looking up at me, my prick resting comfortably against her cheek, she spoke.\n\n\"I've never done this before either!\"she confessed. \"So tell me, help me to please you,\" she asked, slipping my cock inside her mouth.\n\nAt first her touch was almost too gentle, gradually she began to explore me with her mouth however, increasing the pressure of her lips as her excitement increased. The touch of her hand as she softly cupped and began to fondle my balls was exquisite.\n\n\"Oh yeah...that's nice Diane,\" I hissed. Removing my cock, she again looked at me expectantly. \n\n\"Am I doing it right?\"\n\n\"Fuck yes...you're doing it perfectly,\" I told her. \"Keep sucking, I promise I'll tell you before I cum.\"\n\n\"Will you cum in my mouth?\" she asked. I stared at her, disbelief. \n\n\"No...unless you want me to,\" I added. She smiled, licking the shaft momentarily.\n\n\"I'd like to experience that,\" she smiled sucking me again.\n\n\"Fuck Diane...now who's driving who crazy?\" I responded. She giggled, drawing me fully between her lips, sucking me furiously, jacking my prick with easy up and down motions designed to take me over the edge.\n\nNow it was my turn to place my hands on her head for support. Running my fingers through her soft silken hair, I caressed her scalp, enjoying the sensuality and intimacy of so simple an act. Even as her mouth brought me closer and closer towards orgasm, I marveled at how good she felt, how nice it was to simply be touching her in this way.\n\n\"I'm, almost, there,\" I barely managed, still trying to give her some sort of warning of my impending release. If anything, she increased the pressure of her lips on me, drawing out my orgasm. I felt the first wondrous mind-numbing ejaculation escape from the tip of my cock, squirting forcefully inside her mouth. Diane flinched slightly as it did, I expected her to withdraw my penis, feeling that she was still unprepared for the continued onslaught as I continued pumping, spilling copious amounts of my semen into her mouth, down her throat.\n\nFrankly I was surprised. As much as I had cum, Diane had taken every bit of it. Sucking me completely dry. I finally helped her to stand back up on her feet.\n\n\"That wasn't anything like I thought it would be,\" she said. I couldn't help but wonder if that was a good...or bad thing. But she went on, answering my unspoken question.\n\n\"I rather liked it,\" she said, with a hint of surprise in her voice.\n\nWe both stumbled over to the table, sitting down. \"I'm starting to think I should maybe move my bed down here to the kitchen,\" I told her. \"Seems like I'm never going to make it that far with any women.\"\n\n\"I take it you and Christy didn't make it upstairs the other night either,\" she said watching my face curiously. \"I figured you two were doing something, especially since she didn't come home until well after midnight.\"\n\nI wasn't sure how to respond to that. Obviously neither Christy or I were fooling anybody. \n\n\"I may be blonde, even na\u00efve, but I'm certainly not dumb Ben. Even before Christy admitted to me that the two of you fooled around once in a while, I already had my suspicions. Even with her having a female lover, I knew that wouldn't bother you...more likely, arouse you,\" she laughed out loud.\n\n\"What?\" I asked.\n\n\"Boy, won't Christy be shocked when she hears about what we did this afternoon,\" she said, still giggling.\n\n\"Diane...there's no reason she needs to know...I promise...\"\n\nDiane quit laughing, suddenly becoming quite serious as she interrupted me. \"Like I said Ben, I'm not dumb. Just because you and I had a little fun this afternoon, I'm not stupid enough to think that the two of you won't continue to be intimate, or share things, especially things about me. I know the two of you have discussed my non-existent sex-life, hell, Christy told me that much already.\"\n\n\"So it wouldn't upset you if I were to tell her?\" I asked, seeking some sort of reassurance from her that she wouldn't be hurt...or worse, angry.\n\n\"Are you kidding? I want to be there when you do tell her. If for nothing else then just to see the expression on her face!\"\n\nI sat there staring at Diane. It had been like watching a beautiful butterfly suddenly emerging from its cocoon. \"I have to admit Diane, you've surprised me. It's like you're suddenly this entirely different person. Like I said, you've always been sexy, sensual in your own way, but I confess, you're even more so now!\"\n\n\"I know what you mean,\" she began. \"I don't know exactly what's been happening to me lately either. Like the other night when I figured the two of you were over here messing around. I started thinking about it, fantasizing...in the next instant, I was horny as hell. I even started masturbating while picturing the two of you together, which honestly isn't really like me. Then on top of that, I had these really weird dreams all night long. In the dreams, I was doing things that I'd never even thought of or considered doing before like sucking your cock,\" she added smiling. \"Hell, an hour ago I'd have never even said the word cock in front of you,\" she laughed out loud.\n\nSuddenly I was experiencing a major guilt trip. I liked Diane; perhaps more than I would have thought I really did. Seeing her acting like this however, gave me a much deeper appreciation for her true personality, her honest blooming flower of sensuality that was so damn refreshing. I couldn't in good conscience not tell her what I had done.\n\n\"Diane, there's something I need to tell you,\" I said seriously. \"But I want you to promise to listen to me, to hear everything that I have to tell you. I know in fact, I'm pretty sure you will, become angry with me, though I hope not. But I need to tell you anyway, and I also want to ask for your forgiveness before I do, as you might very well never speak to me again after this.\"\n\nI certainly had her attention. Diane straightened up in her chair, suddenly aware of her nudity. \"Should I dress for the occasion?\" she asked, still trying to keep things friendly and comfortable between us, fearful however that all that was about to change for whatever reason.\n\n\"Actually, I'd prefer it if you didn't. I like looking at you...love it in fact. But after what I'm about to tell you, chances are you'll never let me see you naked again.\"\n\nThere was an obvious look of concern in her eyes; Diane even crossed her hands over her breasts, covering them, though I'm not sure she'd done so consciously. \n\n\"Go on,\" she said expectantly though a bit more icely, waiting for me to continue. I took a deep breath and began.\n\n\"Last week, I'd arrived early at the shop as I usually do, you know, straightening up, putting things away when I noticed this guy standing outside my door, holding up a pair of panties...\"\n\nI told Diane everything. For a solid hour I kept talking, expecting her to stand up at any moment ending our relationship, not to mention my explanation, if I could even hope to try and call it that, for what I had done to her. Several times I saw her eyes widen with what could only be construed as shock; sometimes even anger. But to my complete and total surprise, she continued to sit there without speaking, without so much as uttering a single word until I had finished. When I was done, I looked at her expectantly, waiting for the anger, humiliation, to come exploding out of her in a fashion that I wasn't looking forward to seeing.\n\n\"So, you and Christy put one of these chips in every pair of panties I own, including my swimsuit?\" she asked.\n\n\"Well, only about a weeks worth actually,\" I said, as though that would somehow make a difference. I looked at her, still trying to gage her expression, finding her unreadable, wondering when the end would finally come. When it did I sat dumbfounded, as Diane began laughing...hysterically.\n\n\"So you mean to tell me, you actually followed me into the mall, arousing me with that computer of yours activating that whatever the hell you call it chip thingy, making me as horny as I've been lately?\"\n\n\"Ah huh,\" I said sheepishly, but more confused now than ever. Diane stood, finally uncrossing her hands from in front of her breasts, totally unaware of her nudity as she paced back and forth across my kitchen. I was still waiting for the explosion to come, sure that it was building to an even greater explosion than I'd been worried about seeing in the first place.\n\n\"So, all these feelings I've been having, all these thoughts I've been experiencing, all these orgasms I've suddenly started having, they're all because of what you did with these panties?\"\n\nI didn't dare answer. All I could do was nod my head yes.\n\n\"You beautiful naughty little bastard, you!\" she said from out of the blue. You could have knocked me over with a feather at that point.\n\n\"So, how high did you take me up to?\" she questioned. Flabbergasted, I could only answer her honestly.\n\n\"To level six...I think, but that was by accident, and only for a minute or so before I turned it down.\"\n\n\"And you said that Christy's even wearing a pair at work today?\" she asked me again.\n\n\"Yes, why?\" The look on her face said it all. \n\n\"Because I want you to do me a little favor,\" she said wickedly. \"After all you owe me, as does Christy. I want you to access her panties,\" she giggled at the sound of that. \"And give her the whole nine yards worth!\" she said evilly.\n\n\"I'm not sure it will work at this range. Mat mentioned something about knowing they worked at two miles, but not beyond that.\" We both knew that Christy worked less than five miles away.\n\n\"It's still worth a try,\" Diane said, winking at me. \"I'm sure we'll find out in a hurry if they do work at that distance, don't you?\"\n\nSuddenly, the thought of doing that was tempting. Very tempting. \"Ok...why not. If nothing else, we'll at least get an idea of the true range of this thing.\" I all but ran down to my den, retrieving my laptop. Moments later, we'd accessed the memory of the chip that was contained inside the panties Christy was wearing.\n\n\"You did say seven yes?\"\n\n\"Yes.\" Diane said lustfully. I accessed the code, set level seven, and closed the laptop.\n\n\"Guess we'll soon find out,\" I told her. \"Now, is there anything else I haven't answered that you want to know about?\"\n\n\"Yeah, what's the most times you've made a woman cum with that tongue of yours?\" she asked.\n\n\"I don't know, should we try and find out?\" I answered, smiling.\n\n\"Sounds like a fine idea,\" she said, climbing onto my kitchen table.\n\n\"I really do need to think about bringing my damn bed down here,\" I told her as I scooted my chair up to the table, already beginning to draw my tongue down that delicious precious slit.\n\nThree orgasms later, the phone started ringing. We ignored it, as I was well on my way to giving Diane her fourth climax. By the sixth ring, we both knew who it had to be.\n\n\"Maybe you'd better answer it,\" she said. \"I have a feeling if it is her, that she's desperate to speak with you.\"\n\nI picked up the phone, but before I could even say hello, I heard Christy already speaking into it. \"What the fuck are you doing?\" If she'd been able to, she'd have been yelling. It was obvious by the sound of her hand half-covering the mouthpiece that she wasn't anyplace where she could openly yell at me, let alone speak as frankly or as freely as she would have liked.\n\n\"Something wrong?\" I said giggling, letting Diane listen in as I held the earpiece between us.\n\n\"You know damn well what's wrong!\" she said a little too loudly, suddenly quieting again, whispering. \"I've been climaxing constantly for the last twenty minutes you prick. For the first five or so, I actually got a kick out of it, knowing full well what'd you'd done. But when I was called in to do a mammogram, standing there having an orgasm, beads of sweat popping out all over my face, trembling to beat the band, well the poor lady I was trying to do the X-rays for actually asked me if she needed to call a doctor. I finally told her I was just having a minor epileptic fit. Even then, she still wanted me to get someone. So I finally did manage to leave the room until I'd finished cumming outside in the hallway.\"\n\n\"Why didn't you simply take off the panties?\" I asked her.\n\n\"I can't numb-nuts!\" she said a bit too loudly once again. \"I wear a white uniform, remember? I can't NOT wear panties for one thing, it would be too obvious. And for another, I seem to be having this major problem at the moment with my having soaked them, can you even begin to imagine?\"\n\nI had to cover my mouth to keep from laughing into the phone.\n\n\"And worse, one of the physician's came by while I was standing out in the hall, he saw me just as I started cumming again. Even HE thought something was wrong, immediately escorting me into one of the examination rooms. Started taking my pulse, listening to my heart, ever had that done when you're in the middle of an orgasm?\" she asked. \"Well...I HAVE!\"\n\n\"I'm sorry Christy,\" I said, laughing openly. I couldn't help myself now, the image she'd painted of herself standing out in the hall then lying down on some examination table while the doctor attempted to listen to her heartbeat while she climaxed was simply too damn funny. \"I'm shutting off the program, now,\" I said, doing so as I terminated the access to her.\n\nThere was a momentary silence. \"Thank god!\" Christy said. \"I'm off in half an hour. We're gonna have a little talk you and I,\" she said hanging up.\n\n\"Sounds like Christy's a little pissed,\" Diane said, stating the obvious.\n\n\"A little?\" I added, no longer laughing quite as much, though I was still smiling.\n\n\"Don't worry, by the time she gets home, she'll forget ALL about being mad at you, at us,\" she added confidently.\n\n\"Oh? And how are you going to accomplish that?\" I asked her.\n\n\"Easy, we'll give her something else to think about,\"she said. \"Now, about that fourth orgasm you were about to give me?\" she asked.\n\n#\n\nDiane was confident that Christy would come to my place before going inside to her own, so we waited for her here.\n\n\"I can't believe you're doing this,\" I told her. \"Christy's going to just die!\" I added. I was still a little bewildered over Diane's sudden, almost too drastic change. We were both still naked. I stood at the window peering out through the blinds waiting for Christy to pull up. Diane was lying on the couch in my front room, gently stroking herself, keeping herself aroused, which she'd pretty much been all afternoon.\n\n\"I'm anxious to see the look on her face when she sees me like this,\" Diane stated excitedly. \"Won't she be surprised!\"",
        "\"Surprised isn't exactly the word I'd use,\" I retorted back to her. \"You're sure about this?\" I asked her once again.\n\n\"Very,\" Diane said. \"I've been thinking about it all afternoon now, I can't think of a better way to blow her away,\" Diane added. \n\n\"Oh, you'll do that alright. The moment she sees you lying there like that?\" I laughed lustfully. I was becoming more and more aroused now myself. My cock was bouncing up and down all by itself in excited expectation. \"She's here!\" I announced having just seen her pulling into the drive.\n\n\"Ok, come over here and lie down on the floor like we discussed. I'll get on top so it will look like we're actually fucking, don't forget to be moaning a lot when she walks in,\" she told me.\n\nDoing as I was told, Diane then climbed on top of me, tucking my cock down between her legs, but bent at the wrong angle so that it wasn't actually anywhere's close to going inside her, or even attempting to. But it still felt nice, pressed against her the way it was. I was delighted of course to reach up and begin playing with her breasts again however. Something I didn't have to fake, immediately enjoying myself and not really faking my moans at all as we began playing. A second after that, we both heard Christy come inside my backdoor into the kitchen without even knocking.\n\n\"Ben? Ben? Are you in here?\" she called out. Neither of us answered her of course, though we both began grunting and groaning as though we'd been at it for an hour. \n\n\"Diane?\" We heard her question, more to herself than to anyone else as the sound of footsteps rapidly approached down the hallway towards my living room.\n\n\"Holy shit!\" Christy said a moment later when she entered the room. \"Diane? Is that really you?\"\n\n\"Hi Christy! Yes, it really is me. I think those panties I've been wearing has had something to do with it. I decided to fuck the information out of Ben...but so far, he's been uncooperative. Would you care to come over here and help me?\" she asked.\n\nThe look on Christy's face was priceless. For a moment, I actually thought she might topple over, but she seemed to compose herself and actually began taking off her clothing.\n\n\"You're serious?\" Christy said doubtfully, even as she all but tore off her blouse, undoing her bra faster than anyone I'd ever seen do it before.\n\n\"Oh yeah,\" Diane moaned happily, bouncing up and down on top of me just as though we really were fucking, though her pussy was stimulating my cock, anyway.\n\nChristy quickly finished undressing, even tossing her special panties halfway across the room with her foot when she slipped them off. \"I still can't believe I'm actually seeing this,\" she stated cautiously, as she approached.\n\nI was fully expecting that now Diane had gotten Christy naked, she'd let her in on the joke. But her next action confused me just as much as it had to have confused Christy.\n\nDiane and I both watched as Christy slowly approached. In the next instant however, Diane motioned for her to come and stand next to her. When she did, I saw Diane run her hand, then fingers up Christy's slit, spreading her a part with her fingers as she did. Christy gave me an inquisitive \"What the fuck's going on\" look, which I in turn gave one back to her with the same sort of expression on my face.\n\nBefore either one of us knew what was happening, Diane suddenly was running her tongue over Christy's widely spread lips, tickling her clit the same way I'd been doing to Diane's all afternoon. \n\n\"I've always wondered what it would be like to do that,\" she said a moment later, now I can see why you enjoy doing it so much, Christy!\" \n\nDiane immediately continued licking, Christy now succumbing to the delicious sensations she was feeling, all anger, if there truly had been any to begin with, all but forgotten as she tossed her head back in gleeful ecstasy as Diane's tongue played beautifully upon her hard swollen cunt nipple.\n\nFor myself, I was more than content to continue lying there caressing and playing with Diane's tits. I enjoyed the softness of each as they filled my hands, marveled at the hard twin marbles as I rolled them between my fingers, eliciting moans of pleasure and ecstasy from Diane as I did. Even the not quite dry humping of her pussy against my cock was stimulating enough to feel exceptionally good.\n\nWhen I felt Diane reaching down between us, I assumed she was going to do nothing more than play with me, which I was more than happy to let her do. Truth of it was, my cock was aching for a little more direct contact than it had been getting. I felt her hand surround me as she lifted up slightly, allowing me to readjust things so that I was considerably more comfortable. What happened next took me totally and completely by surprise. I felt Diane position my cock, felt the head of my prick nuzzle itself softly against the wet moist folds of her lips. Diane began pressing down upon me in the next instant.\n\n\"Diane?\" I just managed to get out.\n\nShe removed her mouth from Christy's pussy long enough to speak. \"Shut up Ben, before I change my mind.\"\n\n\"What's going on?\" Christy asked.\n\nI felt the tip of my prick forcing it's way through Diane's hymen. I felt it stretch, felt the pressure as she struggled through the obvious pain. Suddenly, it gave way. I felt my cock slide quickly and deeply inside her. Diane let out a small painful little cry, holding herself completely still, just as I did.\n\n\"Oh Diane!\" Christy said, catching on suddenly...you...you...\"\n\n\"Just lost my virginity,\" she said through clenched teeth, slowly adjusting to the sudden intrusion of my cock having just ravished her virginal cunt. Diane remained motionless, gradually getting used to the sensation. As the initial pain ebbed away, she began moving, but so subtly that for a moment or so, I wasn't even aware that she was.\n\n\"Why did you decide to do it?\" I had to ask. \"Didn't you say you wanted to wait until you were married?\"\n\n\"I've been saying that ever since I was eighteen. Ten years later I'm still unmarried, and up until a few moments ago...a virgin. Now at least I can quit wasting time and start enjoying all the things I've obviously been missing out on,\" she announced with a great deal of satisfaction.\n\n\"Well Ben? You just gonna lie there, or are you really going to fuck me now?\"\n\nAfter a very brief discussion, we switched positions. Diane now made herself a little more comfortable, as I re-entered her, carefully doing so, sliding in and out of her as carefully as possible until she began telling me to do otherwise. Christy knelt down next to her, lovingly kissing, sucking Diane's sweet hard nipples. I watched as Diane reached beneath her, obviously fingering her quim while I continued thrusting in and out of her rapidly awakening pussy.\n\n\"I can't believe I've let all this time go by!\" she said enthusiastically, after a time. \"Damn Christy, this really does feel good doesn't it?\"\n\n\"Just make sure you save a little of that for me,\" Christy said. \"After what the two of you did to me today, you owe me that much!\"\n\n\"I'd best not cum in you,\" I told her honestly. Diane had to agree with that, especially as neither one of us was using any form of protection at the moment. As I felt my own orgasm quickly approaching, I told her so...pulling out well ahead of anything happening.\n\n\"Why don't you cum in my mouth again?\" she said.\n\n\"What did you just say?\" Christy suddenly asked. Diane laughed...\n\n\"Oh, I guess you didn't know that part...earlier, after Ben had driven me nuts with that tongue you kept telling me about, I gave him a very nice \"thank you\" blowjob. Rather liked doing that actually.\"\n\nChristy looked back and forth between us. \"She really did that huh?\" she said. I nodded my head, grinning quite happily, already looking forward to another repeat performance.\n\n\"Well...ok, seems there's a hell of a lot of 'firsts'happening here,\" she said. \"So I might as well discover for myself what the big fucking mystery's all about.\" \n\n\"Wanna share?\" Diane asked her. \n\n\"Sure. why not, another first?\" They both laughed then. Though I wasn't...just smiling like hell, was all.\n\nThe feel of both pairs of lips, tongues teasing my shaft, licking me, kissing me up and down was the best thing I'd ever experienced before in my entire life. Diane and Christy took wonderfully nice turns sucking and then licking my prick. For the first time in my life I enjoyed the sensation of pure unadulterated selfishness, as the two women stroked me, coaxed me, and drove me crazy with pleasure. When I came, I came as hard as I ever had, watching with delight as they both shared in the taking of my fluid pleasures, delighting in the sensations and experience of something that had gone far beyond my wildest dreams.\n\n#\n\nHaving watched Diane and Christy go down on one another had been the proverbial icing on the cake. \"Tapped out\" as I'd called it earlier, I was content to lay there and enjoy watching the two of them together until they had both sung out in harmonious joy as their respective orgasms were achieved. We talked for a long time after that. We discussed the possible future, our living arrangements, expectations and of course, the panties themselves.\n\nThe following day I contacted Mat, letting him know that I would have the money for him by the end of the week. I then contacted one of the distributors that supplied my store, Diane as well as Christy willingly giving him first hand information of their experiences. Two months after that, we'd sold nearly five hundred pairs of panties at fifty dollars a pair in less than two weeks, already holding backorders for nearly three times that amount. Though we were still a long way from recouping our investment, Mat and I could now see the light at the end of the tunnel. \n\nIt had been Diane's suggestion that we market the panties as something dreams were made of, simply because as she'd already discovered, she'd had the most erotic, sensual dreams she'd ever had while wearing them. We came up with a new name for my store, selling Mat's magic panties under The Sandman ltd, \"Panties for the sweetest dreams\".\n\nWith luck, women all across the nation will be wearing The Sandman's panties. What more could a guy ask for?\n\nOh...Diane and I were married a short time after all this happened. Christy now lives with her girlfriend next door to us. And yes, we all get together every once in a while for a little exciting fun.\n\nAs for Mat? Well, he thinks he's just about perfected a new microchip. \"The penis pal\" he calls it. Fits inside a comfortable sexy looking jock strap.\n\nI for one am looking forward to trying it when it's done. As are the girls. "
    ],
    "authorname": "Many Feathers",
    "tags": [],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/magic-panties"
}