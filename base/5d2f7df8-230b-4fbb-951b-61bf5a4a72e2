{
    "title": "Boston to Birmingham Ch. 04",
    "pages": [
        "All right, you caught me. This story was my tribute to DQS, for all his great work. I did a story called 'The Cost', influenced by Ohio, and its' had over sixty thousand views, my best effort so far. I figured if it worked once, maybe it would again.\n\nAs for DQS and HDK praising my writing, it's like\n\nBruce Springsteen and Bob Dylan saying the boy can carry a tune. Many thanks.\n\nOh, HDK, you're next.\n\nEnjoy.\n\n................................................. \n\nHardy found himself in the office of an old friend, waiting anxiously for his appointment.\n\nRabbi William Goldberg had retired, gotten bored, and opened a counseling practice, specializing in marriage and relationship problems. His work with veterans had been gratifying, but the stress and the daily reminders of the horrors of war wore on his soul. Between active duty when he was younger and twenty five years the reserves, he was able to retire with honor and full benefits.\n\nHe truly felt God moved him in this direction, and didn't want to be a disappointment. A New Yorker by birth, he had spent a lot of time in the South, and when he retired he surprised his friends and family by moving to Montgomery, Alabama. He loved the area, close to the coast but far enough inland to take the edge off the occasional hurricane, plus the mild winters were a balm to his arthritis.\n\nHe was moderately surprised at the size of the Jewish population there, but a friend told him they had been there since the late eighteen hundreds. It still took awhile before the phrase \"Shalom, ya'll\" to lose its' novelty.\n\nHe remembered Hardy Wilkes well, one of his most interesting patients. Always smiling and friendly, he seemed opposite of his dossier description. Peeling away layers of defensive protection, he found an incomplete man, results of having an unstable, stressful childhood and poor role models. His moral compass was almost nonexistent during his formative years, and despite his best attempts to become a better person, he would sometimes revert to his childhood beliefs, especially under great duress or emotional upheavals.\n\n\"Rabbi Bill\" as Hardy addressed him, spent the better part of a year with him between physical therapy for his wounds and broken bones and analysis sessions with Major Stein. He taught him to play the organ, to help focus his mind and relieve stress, amazed at how quickly he learned, and the intensely emotional way he played. It was like he poured his whole being into the music. It became standard to spend a few minutes playing before they talked.\n\nBill was surprised with his profession and marital status. Years ago, he would never have envisioned Hardy as a lawyer, dressed in expensive suits, or actually being married, to a beautiful woman, an heiress and daughter of the principal owner of his firm. The term 'married well' definitely applied. But he wasn't surprised to see him, trouble in paradise was his stock in trade. He would have bet his bottom dollar this was going to be very interesting.\n\nThey shook, then hugged. Bill looked him over, noticing the shaggy hair and short beard, giving him a totally different look than he remembered, the smooth face and military brush cut gone. It wasn't that he looked unkempt, more like unruly.\n\nAll in all, it gave the impression of being slightly out of control.\n\n\"So, rabbi, the sunny South, huh?\"\n\n\"Yeah Hardy, what can I say, I'm hooked on grits. Try getting that in a New York kosher deli. Believe it or not, there's a very good bagel shop just around the corner. This must be a lot like heaven.\"\n\nThey talked about mutual friends and colleagues for a bit, then Bill leaned back in his recliner, he found a desk setting too impersonal, and besides, it was comfortable. He added or deleted furniture, depending on the outcome he was trying to achieve.\n\n\"So, this isn't a social call. How did you find me?\"\n\n\"Major Stein told me. Up front, you should know I see him twice a month for a three hour session, and yes, it's related to this.\"\n\nHe filed away a mental note to call him. He knew Stein was still active military, there was something he wasn't seeing.\n\n\"Hardy, I'll be glad to provide counseling, but why me. It takes almost two hours to get here, I'm sure there are qualified professionals in Birmingham.\"\n\n\"Two reasons. I know you, and the drive will probably piss my wife off.\"\n\n\"Hardy, I have to tell you up front, if these sessions are going to be just a way to irritate your wife, don't drag me into it. I don't need the business that bad. Why don't you tell me what you want up front, and what caused you to seek counseling.\"\n\nSo for two hours he told him as much as he knew. About Paris, about what happened at home, including his reaction. Bill kept as good a poker face as he could, but he was shocked. He told him how he resisted her advances at first, their courtship, the arguments towards the end, the disrespect he felt she had for him.\n\n\"Even without the cheating, we were heading down the wrong road. She made promises to me I began to understand she was never gonna keep. The cheating tore it, I'll never trust her again, and damned if I'm going to look over her shoulder and worry when she was gonna cheat again. Better a clean break.\"\n\n\"Tell me Hardy, do you still love her?\"\n\n\"You know, I'm sick of everybody asking me that question. Yes, I can't seem to stop. But I'm hoping with enough practice I can.\"\n\n\"So you don't see a reconciliation? Then why the sessions?\"\n\n\"Court ordered, can't get out of them. I'm hoping you'll see how hopeless it is and pull the plug early.\"\n\nBill leaned back, turning on the back massage control to high. Damn, he loved this chair!\n\n\"Based on what you told me, I have no interest in seeing you. I can tell it will get ugly, and I just don't need the aggravation. But in the interest of fairness, give me your wifes' number. I'll set up an individual session with her, two hours minimum. After that we'll see. And before you ask, this session and hers won't count towards your mandated visits. Take it or leave it Hardy. Remember, you came to me.\"\n\nHardy argued, but accepted the terms in the end.\n\n..............................................\n\nGwen cursed and fumed at the rush hour traffic on I-65. Seventy mph speed limit and she was crawling along at twenty five. She had to smile, Hardy had gotten her good on the counselor. J.T. was a little pissed also, but as he pointed out, they did agree he could choose, and nothing was said about location.\n\nBill hung the phone up smiling. Mrs. Wilkes had called three times, a good sign. Looked like one of the spouses was committed to the counseling.\n\nShe was still twenty minutes late, apologizing as she came through the door. The short bearded man with the skull cap didn't fit her mental picture of a counselor.\n\n\"Sorry, sorry, damn traffic. I'll know better next time, adjust for travel.\"\n\n\"Relax Mrs. Wilkes, you're too stressed to make sense right now. Let's do some breathing exercises, get you centered. Close your eyes.\"\n\nFor the next five minute she listened to his calm voice, breathing in and out as directed. When they finished, she was breathing normally and was much more relaxed.\n\n\"Thanks doc... wait, what should I call you, doctor? rabbi? counselor?\"\n\n\"I find Bill works best, and I'm not a doctor, just a licensed therapist. Do you prefer Mrs. Wilkes, or Gwen?\"\n\n\"Oh, it's been so long since anyone called me Mrs. Wilkes that I enjoy hearing it. But Gwen would probably relax me more.\"\n\n\"All right then. Gwen, what do you want from me?\"\n\nThe question surprised her.\n\n\"I want you to help me get my husband back.\"\n\n\"Why?\"\n\n\"Why, what?\"\n\n\"Why do you want him back?\"\n\n\"Why? Because I love him. I miss him. I need him.\"\n\n\"Excuse me for being direct, but according to your husband you cheated on him, treated him disrespectfully, went back on your agreement of your family goals. If that's the case it sounds like you don't need him at all. It sounds more like he was just comfortable, a fall back.\"\n\n\"That's not true at all! I did neglect him, I was wrapped up in a big project, and it became my focus temporarily.\"\n\n\"So you're saying that as soon as your project was over you were going back to being an attentive, faithful wife? What would happen if a newer, bigger project came up? Would you have put him on the back burner again until you were done? Did you ever intend to start the family you promised your husband?\"\n\n\"You're making me sound like the bad guy here! I was supposed to go into a new department in the firm, court litigation. I would have been home, we could have worked on our marriage.\"\n\n\"But didn't the fact that your boss, your father, kind of force you into that, precipitating Hardys'\n\ndeparture temporarily? He told me you lashed out, saying he and your father conspired to change your responsibilities, to force you to spend time at home. Then when he returned, he finds you in bed with another.\"\n\n\"I've already explained that! I was more or less raped!\"\n\n\"I find your terminology interesting. Were you more raped of less raped?\"\n\n\"I was drugged. He took advantage of me. Truthfully, I now realize I put myself in the position for it to happen, but it was at the least nonconsentual. Even in my drugged state I tried to make him stop.\"\n\n\"Why didn't you press charges?\"\n\n\"You forget I'm a lawyer. It would never had stuck, I had prior sex with him in almost the same set of circumstances, willingly taking the drugs. I doubt I would have won, and I didn't feel like putting my family through the pain. The admission of drug use alone would have killed my career, embarrassed my family. It would have just publicized what kind of person I was.\"\n\n\"Ah, tell me Gwen, what kind of person are you? What were you like before this came about, and are you different now?\" \n\nShe sat silent for a few minutes, collecting her thoughts.\n\n\"Before, I wasn't an adult. I was just a spoiled little rich girl pretending. My mother was a compulsive cheater, my father finally got tired of it and divorced her. I spent nearly a year in her custody before going back to my father, and she wasn't really much of a role model. My dad was so glad to have me back he catered to my whims. I just got used to saying 'I want' and seeing it happen I didn't understand how the real world works. Hardy tried his best to get me to understand, and my dad did too. In fact, he begged me not to marry him, not because he didn't approve of him, but because secretly he didn't approve of me.\"\n\n\"Were you happy with Hardy? Truth now.\"\n\nShe frowned, wrinkling her forehead in concentration.\n\n\"Yes, overall. I was very happy. There were things I wished I could change, of course, what spouse doesn't? But when he looked at me with those warm grey eyes and that goofy smile of his, professing his love for me in that soft, almost musical drawl of his, I would melt. He loved me, heart and soul, I knew it without a doubt.\"\n\n\"When did you start withdrawing from him?\"\n\n\"Who said I withdrew from him?\"\n\n\"He did. Said he wondered why you didn't think you were good enough for her anymore, why you seemed embarrassed by him sometimes. Any truth to that?\"\n\nShe hung her head.\n\n\"Looking back, I have to admit there were times when I wished he was a little more urbane, a little less 'countryfied'. He didn't really care for the most of the people I socialized with, thinking them pretentious, and boring. Sadly, I now feel he was right. I didn't like his friends that much either, cops, black ghetto kids, people at his gym. And I hated his paralegal, that bitch is still trying to get him to fall in love with her. They were scary, but at least they were real, and real scared me.\"\n\n\"I realized later that his Southern charms, while real, were often exaggerated to achieve a certain result. He would amp them up or down, depending on the results he wanted to achieve. It's one of the reasons he was so successful in Boston. Opponents would listen to him, watch him. They assumed because he talked slow, moved slow, he was slow. The next thing they knew they were lying on the ground watching the taillights of the truck that just ran over them recede, with a rebel flag for a tag and the words 'Honk If You Love Dixie' emblazoned across it.\"\n\n\"So, you're proud of him then?\"\n\n\"Yes, very. He takes difficult cases that no one else would, for free, thanks to my dad. He would use every resource to get justice for that individual. He chose carefully, never representing anyone unless he was sure they were innocent. He would occasionally take one where guilt was established but he felt the punishment was excessive to. His success rate is exceptional.\"\n\n\"Have you told him you were proud of him?\"\n\n\"Not often. His cases were depressing, and I was too shallow to hear about them.\"\n\nBill looked at the clock.\n\n\"Mrs. Wilkes, we've got about forty minute left, but I'm willing to stay a little longer if you are. Let's make a pot of coffee, relax for a few minutes.\"\n\nThey stood up, to get the circulation going and to make the coffee. Bill had been to the bagel shop, and had half a dozen assorted, with toppings. Gwen hadn't eaten since lunch, and had been too nervous to eat much then, worrying about the session. The bagel was very satisfying. They joked since they were in the South, he should have had a platter of buttermilk biscuits.\n\nSitting back down, Bill asked if could review what was said so far, just to make sure he didn't miss anything. She nodded.\n\n\"All right, so far we've established that you were a shallow, spoiled immature child who had no idea how the real world worked, used to get anything you wanted with no effort, or bearing responsibility for your actions. Now, that being said, who are you now? Have you changed, and why?\"\n\nGwen drew a deep breath.\n\n\"For good or bad, I'm definitely not the same person I was before. I'm not a girl anymore, I'm a woman now.\"\n\n\"I hated my dad for sending me down here, for cutting off my money. I hated it here for the first couple of months, actually cried myself to sleep a number of times. Spent myself broke for awhile, almost didn't leave enough to eat or for gas.\"\n\n\"But then I started learning. I planned a budget and stuck to it. Ive always been driven to succeed, a legacy from my dad, I guess, so I threw myself into my job.\"\n\n\"It was a far cry from dealing with people in five thousand dollars suits over a bottle of expensive wine in a five star restaurant to dealing with the lowest levels of society in a small dirty, airless room. I learned to tell the difference between liars and kids who were so scared they almost wet their pants. I put away drug dealers, thieves, pimps, violent criminals, looking them in the face, knowing that they would hate me for what I did to them. I did it anyway, society was better off with them off the streets. I became very good at what I did, gaining a reputation for being tough but fair.\" \n\n\"The single biggest motivation for change was meeting my family. I was an only child of an only child, remember, and there was no family ties to anyone but my father. My mother had a sister, but I haven't seen her since I was eight.\"\n\n\"At first, it was my husbands' relatives, his grandfather, Joshua Hardy, and enough Wilkes to start a new nation. I would eat Sunday dinner with them about every other week, and they accepted me. Some may have resented what I did to my husband, but were mostly too gracious to express them.\"\n\n\"It was one of the greatest pleasures I have ever know. These people weren't social climbers, didn't have an agenda to speak of, they just accepted me as one of their own and treated me accordingly. Suddenly I was 'Aunt Gwen', bombarded with attention from the younger generation, tolerance and even in some cases love by the older.\"\n\n\"Then I met my great aunt, did I tell you my grandmother was from Birmingham? Anyway, that brought a whole new set of cousins to the fold.\n\nI'm officially related to most everyone in a four county area, including the black population. That's a story for another time, but the point is I came here a Yankee and stayed as a relative. I didn't tell my dad, but regardless of whether Hardy and I work things out, I'm never going back to Boston. I'm home now.\"\n\nShe sat for awhile, sniffling with emotion. \n\nBill could empathize. As long as he had been here, he got asked almost weekly if he was related to this person or that. At first he was resentful, thinking they assumed all Jews were related. After a few weeks he realized that no matter what your color or religious affiliations were, establishing family ties were as natural as commenting on the weather.\n\n\"The point I'm trying to make is that I've grown up. I'm willing to bear responsibility for my actions. And the actions of a foolish girl are not those of a saddened, mature woman. I know I may never get him back, Bill, but I need to show him if he does, he's not coming back to the child he knew, but the newer, better woman I've become. One that is nowhere near as foolish and shallow as the old one. I want to make sure he knows I don't want the old marriage back, but a better, stronger one instead. Please try to get him to understand that. And no matter which way it goes, I'll always love him.\"\n\nBill was impressed enough to accept them as clients. He wanted one more individual session with each before he met with them together. \n\nHis parting comment was \"Tell Hardy not to miss any, and yes I'll make sure the individual sessions are counted in the agreement.\"\n\n................................................\n\nRabbi Bill called up Major Stein, and had a lengthy discussion about a Mr. Hardy Wilkes.\n\nThe agreement was that he was a work in progress, and should be watched carefully.\n\nMajor Stein sat, thinking. Reaching a decision, he picked up the phone. Hardy had cancelled his upcoming session, saying he would be out of the country and couldn't make it. Maybe now it was time to talk to someone else. He had discussed talking to the wife, Hardy was reluctant but agreed that if it was necessary he could do so.\n\n\"Mrs. Wilkes? Good morning. You don't know me, my name is Ben Stein, actually Major Stein. I don't know if you know it but I'm doing some sessions with Hardy, strictly followup from his military past, through the local VA. I want, and let me assure you that Hardy agrees, to meet with you. He can't make his appointment this week and I was wondering if you could take it instead. You will? Thanks, let me give you the address, you can google it. It's Friday afternoon, if that's all right. Thank you.\"\n\n.................................................\n\nGwen took the day off, her workload was light due to the Escobar trial, and she actually had a few vacation days coming. She just told Paul she had to go out of town unexpectedly and he let her off without argument.\n\n\"Maybe she\"ll go some where and blow off steam\" he thought, \"It'll probably do her some good.\"\n\nShe mentally thanked her dad for putting ten thousand in her checking account. She had updated him on the scheduled counseling and her visit to Major Stein. When he found out she was going to drive the seven hours it would take to get to Ft. Stewart, he insisted she fly, not wanting her to go that distance alone.\n\n\"Daddy, I can't afford the plane ticket, the rental car, or a hotel stay.\"\n\n\"You can now, I'll put the money in your account. Take it as a gift from a nervous dad. If you had let me release the trust fund we wouldn't be having this discussion.\"\n\n\"I gave you my reasons. It's important to me to make this year, it's only less than two months. I'll take the money, as a loan. I'll pay you back. That's the only was I'm going to take it.\"\n\nHe agreed, heart swelling with pride.\n\nThe flight to Savannah was uneventful. It was the first time she had been in a plane in over a year, and the small commuter jet made her nervous. The Lexus she had reserved didn't feel right either, it seemed gawky after a year in her Focus.",
        "It was even more uncomfortable on base. She had never seen so many uniforms in one place. Even though the dress she wore was conservative, just below the knees with a high neckline, her beauty was obvious, and there was an ocean of admirers around. She was very glad the building was easy to find.\n\nMajor Stein met her in the lobby and escorted her into his office.\n\n\"Don't worry, we won't be disturbed. Can I offer you something to drink?\"\n\n\"No, thank you. I don't think a lot of liquids would help me with my nervousness.\"\n\nHe rushed to reassure her.\n\n\"Please, this is just an informal talk between two people concerned with the welfare of your husband. How is he? Do you speak often?\"\n\n\"She laughed. \n\n\"No, in fact, I had to drag him into court to get him to speak to me at all. We are starting marriage counseling, I had to get a friendly judge to facilitate that, so I'm hoping for the best. Perhaps you could tell me, how is he mentally? That is what you do, right, deal with veterans with mental issues?\"\n\nInstead of answering directly, he surprised he by asking, \"Tell me Mrs. Wilkes, has your husband been into any altercations lately? Physically, I mean.\"\n\nHe fought with a cousin a while back, beat him pretty badly from what I hear. It was a family issue.\"\n\n\"Did it have anything to do with you?\"\n\n\"Yes, his cousin and another man threatened me. The one he beat was physical with me, not sexually, just grabbed me.\"\n\n\"Anything else?\"\n\n\"Not that I know of.\" Luckily for Hardy, J.T. never told her about the fight in the cell. \n\n\"Mrs. Wilkes, please understand that what you tell me is covered under patient client confidentiality. Would you describe the events leading to your separation? Please don't leave anything out, it might be important.\"\n\nGwen shamefully told her story yet again.\n\n\"Tell me, before the incident,was he abusive to you in any way, physically speaking?\"\n\n\"No! In fact, I once almost stepped into the path of a car, and Hardy pulled me back so hard I had bruises on my arm. He apologized for three weeks.\n\nUntil that morning, almost three years together including the courtship, he hardly even raised his voice to me. Of course, any couple has arguments, but he was always so calm, so reasonable. It was like he was a totally different person that morning.\"\n\n\"How much do you know about his military experience?\"\n\n\"He told me he did two tours in Iraq, including the invasion. I know he was wounded, I've seen the scars, but he doesn't talk about it.\"\n\n\"Mrs. Wilkes, much of what he did is classified, so I can't go into details. Your husband has a very specialized skill set, and he was very good at what he did. He could have been an officer, his rapid assessment of troops, terrain, and objectives was amazingly perceptive. His flaw was he didn't work well with others. Many were actually afraid of him or afraid he would get them killed. Once he focuses on an objective the only way to stop him was to kill him.\"\n\n\"We did many, many tests on your husband, physically and mentally. We exposed him to different stress levels and measured his responses. Your husband is a very unique individual.\"\n\n\"Are you familiar with the term 'flight or fight' \n\nMrs. Wilkes? Good. In a flight or fight situation the individual person feels threatened, and adrenalin is released into the blood stream, speeding up the decision to fight or run, and giving the body a boost of energy.\"\n\n\"Your husband Mrs. Wilkes, has adrenal glands that are capable of releasing six to ten times the normal amount of adrenalin into the body.\n\nIt's very, very rare, research has found it to be most evident among Scandinavians and people of the Southern U.S. No one is exactly sure why. It may be why you hear stories about Viking berserkers of legend and rowdy rednecks. The closest analogy I can give you is it's like people who overdose on crystal meth. I've seen cases where the individuals struggle so hard after being strapped down to a bed they break their bones, and don't even realize it, not feeling the pain.\"\n\n\"It's has a nickname among the medical community, Hulk syndrome, for the comic book character who changes from an ordinary man to a raging beast because of anger. That pretty much describes your husband. He was fine, in control, for years. Your infidelity triggered the resurgence. Do you know I have him on medication to curb the release of adrenalin? He hates it, but takes it anyway.\"\n\nHe paused, letting her digest the information. She took the opportunity to ask a question.\n\n\"Sir, why is the military involved? Charges were never pressed, the whole thing was kept out of the public eye.\"\n\nHe tried to sound reassuring.\n\n\"We're the military, Mrs. Wilkes, we have our ways. Our concern is making sure your husband is all right, not a danger to himself or others.\"\n\n\"You consider him a danger to society?\"\n\n\"Not really, if he keeps taking the medication and stays out of stressful situations.\"\n\n\"You think he can do that? Life by its' very definition is stressful.\"\n\n\"I think if he continues to see me for awhile, and you work out your marital issues, he'll be all right. Bill Goldberg is a fine man and a skilled therapist. More important, he's worked with Hardy before and he trusts his opinions. I wish you the best. He really loves you, you know that, don't you? If anyone in this universe could keep him centered, it would be you. All you have to do is get him to trust you again.\"\n\n\"By the way, do you know why your husband is in Mexico?\"\n\n\"I didn't know he was out of the country, we don't exactly share details of our lives right now.\"\n\nThey talked for another hour, him asking questions, her countering with questions of her own.\n\nHe told her about his rescue of the troops pinned down in that small valley, leaving nothing out. To her shame, she had no idea he had three purple hearts, several letters of commendation, and a silver star with oak leaf clusters. Another important part of her husbands life she was excluded from.\n\n................................................\n\nMentally exhausted, she returned to her hotel and took a nap. Rising, she dressed, wondering how to spend her night. \n\nShe took a walk by the ocean, something else she hadn't been near in a year. The waves were calming.\n\nPaula Deens' restaurant, Lady and Sons, was nice, the food good, but she found herself comparing it to what she had at the Sunday dinners at home, and decided homemade was definitely better. Food prepared by strangers, no matter how tasty or well presented, couldn't compare something made with love, to be eaten by relatives, people you'll see everyday. It tended to make one try harder.\n\nBack at the hotel, she decided to have one drink at the bar. She hadn't touched alcohol except for an occasional beer she drank with Joshua, the episode with the ginger fizz still fresh in her mind.\n\nThey had a band, they were just starting. She sat and listened to a couple of songs, tapping a foot absently. The place was packed. Hunter Air field was just outside of town, and Ft. Stewart was just over an hour away, and apparently Savannah was the largest city around. Gwen had them around her three deep, asking her to dance and buy her drinks. She shook her head no until her neck was sore, trying to leave.\n\nThe boys parted like the sea for Moses when a short woman with red hair moved to the bar beside her. She nodded to Gwen while she waited for her drink.\n\n\"It's mean of you, you know.\" She said out of the blue.\n\n\"What?\"\n\n\"Coming in here, looking like that, and shooting the boys down. A lot of them are far from home, lonely, and let's face it, they're all young guys, hornier than hell. You're fresh meat, and shooting them down is like waving a steak in front of a starving dog a foot past the end of their chain.\"\n\nGwen was uncomfortable.\n\n\"I just wanted a drink, then back to my room for bed.\"\n\n\"Got a man up there waiting for you?\"\n\n\"No, I'm in town on business. I'll be gone tomorrow.\"\n\n\"Then why not stay awhile, dance a time or two, give the boys something new to fantasize about?\n\nIt'll be fun.\"\n\n\"That's what I'm afraid of. I've found I make poor decisions while trying to have fun. I'm fighting to keep my husband now because of that.\n\nWe're finally close to talking again, I'm not about to screw that up.\"\n\n\"Do people here know your husband?\"\n\n\"Some do. Like I said, my days of screwing up my life are over. I have too much to lose.\"\n\nThe woman held out her hand.\n\n\"I'm Anne.\"\n\nShe shook the hand offered.\n\n\"Gwen.\"\n\n\"Well Gwen, nice to meet you. Sure you can't stay a bit? I could use a wingman.\"\n\nThe band was about to start another set, and a tall young man, obviously military, came up to Anne, asking for a dance.\n\n\"Sorry, soldier, not this one. But my friend Gwen might. Forewarned, she's married and intends to stay that way, so anything funny and she's gone.\n\nUnderstand me?\"\n\nThe last phrase was said with such authority that the man almost stood at attention by reflex.\n\n\"Understood, Ma'am.\"\n\n\"Good.\"\n\nShe turned to Gwen.\n\n\"I'll get us a table and watch your purse. Go. Dance. He'll behave, I guarantee you.\"\n\nSo she danced, and enjoyed it. By the time she got to the table Anne had found they were crowded around. She handed Gwen her purse.\n\n\"My turn.\"\n\nGwen watched her dance, amazed at how graceful she was. Drinks were bought, but after they saw she wasn't drinking they stopped wasting their money.\n\nWhen she came back, she took their purses and had the bartender put them behind the bar. Gwen looked at her funny.\n\n\"Thieves cluster round military towns like vultures over a carcass. Now, we can both dance without worry.\"\n\nSo they did. Gwen only danced two slow dances, one with a boy who didn't look out of his teens, because she thought he would be safe. It felt like she was dancing with an octopus, his hands were everywhere. She finally broke his grasp and went back to her table. He never asked her to dance again.\n\nThe other dance was with a man easily in his fifties, another traveler no doubt, and he was almost formal in the way he held her, and was a very good dancer. He had on a band, and she had never removed her rings, vowing not to until the divorce was final, so she felt safe. She kissed his cheek and thanked him, he flushed but smiled and squeezed her hand.\n\nShe ended up dancing the night away. The sheer physical release was welcome. Before she knew it, the night was over. The band had stopped, and everyone was enjoying the last drink of the evening. Anne was watching her closely, it was like she had a personal mission to assure her safety.\n\nGwen had finally given in and had a few more drinks. They boys hadn't stopped buying, hoping to loosen her up, but they mostly sat on the table untouched. Now that the night was over and she was going straight up to her room, she downed a few more, becoming more than a littler buzzed.\n\nWhen she stood and wobbled, Anne quickly stabilized her.\n\n\"Come on sweetheart, let's get you to your room.\"\n\nIt seemed like a good idea, so she left her arm around her waist and fished the room card out of her purse. Anne pulled her along to the elevators.\n\nThe ride was silent, and Anne noticed tears welling up.\n\n\"What's wrong, Gwen?\"\n\n\"I miss my husband, damn it! He should be helping me, not you. We used to go out like this, I always ended up horny as hell, and he would take care of me, real good care. Now I'm horny, alone, and frustrated. I need to tell you, I don't think I'll ever get him back.\"\n\nShe was sobbing, hugging Anne like a drowning person holds onto a life preserver. She patted her back, rubbed her shoulders. It was all the comfort she could give her.\n\nAnne had more than a few herself, so they staggered down the hall using each other for support. She dropped the key card twice, and they, practically fell through the door when it opened. giggling like little girls.\n\nGwen looked ay the minibar.\n\n\"Want a night cap?\"\n\nAnne grinned, \"one more couldn't hurt, could it?\"\n\nOne more didn't hurt, but six did. By then Anne knew she was in no shape to drive, and Gwen was practically passed out. Anne helped her to the bathroom, undressed her, and put her to bed.\n\nShe stood back, admiring her beauty. Bisexual for fifteen years, she preferred men, but occasionally, under the right circumstances, a womans' touch appealed to her.\n\nSlowly, she undressed. Planning to use the other bed, she changed her mind. She wasn't going to try anything while she was passed out, but if they woke up in bed together, who knows? She did say it had been awhile. And a warm attractive body to sleep next to was far more appealing than sleeping alone.\n\nShe pulled the covers back and Gwens' purse fell to the floor, spilling. She picked it up, gathering the spilled items. Her wallet had flopped open, and when she picked it up she got one of the biggest shocks of her life. A picture of Gwen and a man, obviously her husband.\n\nSomething looked familiar about the man, so she held the picture up to a lamp. Mentally lengthening his hair and giving him a beard, she knew exactly who he was.\n\nHardy Wilkes!\n\nThis must be the infamous wife sleeping in the bed. Anne was glad to her soul she hadn't tried anything, it could have gotten very messy.\n\nStill, she was lonely, Gwen was available, and it would be good to at least sleep together. She gently eased into the bed, and Gwen immediately spooned up to her. Anne went to sleep with her arms around her.\n\nShe awoke sometime in the night to found they had turned over, and now she was spooned to Gwen, who had her hands wrapped around her breasts. She reveled in the feeling, fighting temptation before falling asleep again.\n\n.................................................\n\nThe scream woke Anne. She found Gwen sitting up, clutching the covers to her chest.\n\n\"WHAT HAPPENED LAST NIGHT?!\"\n\nAnne was about to tell her, but thought she would have a little fun first.\n\n\"You don't remember? God, you were amazing! The best I've ever had. Baby, your tongue should be gilded. sonnets published about it, songs written.\n\nAnd you just went on and on and on, where did you get the energy? I know we just met, but is it too soon to talk about love?\"\n\nGwen screamed again and ran to the bathroom. Anne gave her a minute and went in, she was sitting on the toilet crying.\n\n\"Gwen, Gwen, nothing happened. I was just having a little fun. You were drunk, I was drunk, and I didn't want to sleep alone. You hear me? Nothing happened.\"\n\n\"But, but, but, when I woke up you were spooned against me, rubbing my nipples.\"\n\n\"We were in bed together, honey. People tend to spoon. As far as rubbing you, you know by now I was asleep. It didn't mean anything.\"\n\nShe stuck her tongue out at her.\n\n\"That is, unless you want it to. I'm bi, and I've got a pretty good tongue myself. You'd have fun, I promise.\"\n\nGwen tried to shove her out of the bathroom but Anne wouldn't let her.\n\n\"Gwen, stop! I'm just teasing you. Gee, being hungover is affecting your sense of humor. Nothing happened. Nothing is going to happen. Calm down.\"\n\n\"Now, do you want to shower first, or shall we do it together?\"\n\nGwen slammed the door to Anne laughing.\n\nShowered and dressed, she felt a bit better.\n\nAnne showered, and they talked afterward. Sober, she found Anne to be witty, intelligent, and grounded.\n\n\"Are you really bi?\" She couldn't help but ask.\n\n\"Yes, does that bother you?\"\n\n\"Not really. I'm probably never going to see you again, so would you satisfy my curiousity? What's it like, with another woman?\"\n\n\"I can't describe it, honey. It would be like explaining what an orange tastes like to a person that's only eaten apples. I can tell you it tends to be gentler and more emotional, at least in my case.\"\n\nShe had an evil glint in her eye.\n\n\"I could just show you, you know.\"\n\nHer answer astounded her.\n\n\"I've often thought about it. I had a friend in college who chased me relentlessly. I almost gave in a couple of times. If I was single I believe I would take you up on your offer, but I still want my husband back. Tell you what though, if it doesn't happen with my husband, give me your card, maybe I'll call you.\"\n\nShe quickly gave her a card. Gwen glanced at it. \n\nCaptain Anne Burnside, U.S. Army.\n\n\"You're a soldier?\"\n\n\"Yep, career, been in twelve years.\"\n\n\"What do you do?\"\n\n\"Intelligence, and that's all I can tell you.\"\n\nIt was too late for breakfast, but Anne knew a small place that served brunch. Things were going fine until Anne ordered a mimosa. She saw her face.\n\n\"What?\"\n\n\"Nothing, I just have bad memories associated with that drink. Please, though, enjoy.\"\n\nAnne insisted on seeing her off. At the airport she held out her hand.\n\n\"Thanks, Gwen, It's been an adventure. Hope your life works out.\"\n\nGwen astounded everyone in the waiting area by gathering the smaller woman into her arms and giving her a smouldering kiss. She let her go and stepped back.\n\n\"There, that should fuel a few fantasies. I'll never forget you. I hope when you settle down, whoever he or she is, that they appreciate you.\n\nAnd who knows? If I don't get my husband back, I've got your number. Bye.\"\n\nShe walked off laughing.\n\n\"Damn\" Anne thought, \"If anybody could handle Hardy, it's her.\"\n\n.................................................\n\nThe Escobar case was getting close, and Don Vincente was starting to get worried. His indirect attempts at pressuring the D. A. and the police were getting him nowhere. The same with bribery. It was time to up the ante.\n\nHis first thought was the arresting officer, but the guy was a veteran, had no close family, and was a hard nosed son of a bitch. Every time he made contact the cop reported it to the D.E.A. who wanted to take over jurisdiction.\n\nHis next step was the D.A. and his employees.\n\nDirect pressure wasn't working, it was time to get devious.\n\nHis first attempt failed miserably and landed two of his people in jail. He knew of Gwen's past experience with cocaine, and was going to exploit it. He intended to plant felony amounts in her car, and leave an anonymous tip. That would get her removed from the case at the very least, buying time.\n\nHis people monitored her movements. She was fairly predictable, boring really. The only time she was away from home was the weekends she spent with her husbands' grandfather, and that was only over night. Her complex had security cameras, but he had the technology available to overcome it.\n\nTo lessen risk, it was decided to plant it in her car. They chose a night that was overcast and stormy, keeping people indoors. They easily opened her trunk and put a baggy with twelve ounces of cocaine underneath the spare tire. The baggie had her fingerprints on it, stolen from her trash.\n\nWhat he didn't know was his people weren't the only ones watching Gwen.\n\nHardy had recruited eight men, six of them cousins, to keep an eye on her. The leader and all but two of the others were ex military from a variety of fields. Four had their own vehicles, and he bought six more and titled them to the crew, theirs to keep as a bonus. The only thing they had in common were powerful engines. Two people, in separate cars, watched over her twenty four hours a day. They were pretty good at their jobs, and no one noticed them. They on the other hand, noticed everyone, even filming persons they deemed interesting.\n\nThus they were there the night the two men rummaged through her garbage, taking the baggie with her fingerprints, and there the night when they planted the cocaine. One was local, the other Hispanic. Waiting until they left, they carefully opened the trunk and retrieved the baggie. They then divided the contents into two separate baggies, put one in the car of the local, the other in the car of the visitor.\n\nDon Vincente wanted a lot of publicity, so he tipped off the local TV stations that a prominent public official was about to be arrested. Deciding to treat himself, he was watching from a limo the next morning when Gwen arrived at work.",
        "Police immediately swarmed around the car while crews filmed the action. \n\nGwen, of course, had no idea what was going on and was suitably pissed. In deference to her standing, they didn't handcuff her, but had her wait in the backseat of a car. No drugs were found.\n\nWhen he finally understood there were no drugs in the car, an angry Don Vincente ordered his driver to leave, but before he could move, an old truck pulled in front and backed up to his bumper, and a large SUV pulled behind him. He had a moment of panic, this is one of the ways he eliminated enemies at home.\n\nA young man dressed in a suit, carrying a manila envelope, walked up, shoved it under the wiper, waved and walked away. The truck and SUV sped away. The driver sat for a second, frozen.\n\n\"Don't just sit there, get me the envelope!\" Don Vincente snarled. He had one of his bodyguards open it. A little firework known as a party popper was inside, and went off with a soft pop, sending a small amount of confetti into the air.\n\nAlready on edge, everyone jumped when the popper went off. There was one piece of paper in the envelope, with a short message written in block letters.\n\n\"BACK OFF\"\n\n.................................................\n\nThe police were suitably embarrassed and in a statement to the stations, the assistant chief apologized and issued a dire warning to anyone filing false accusations and wasting police time and resources.\n\nThe announcer said\n\n\"In related stories, a local man with a lengthy criminal record was arrested after police found a felony amount of cocaine in a baggie in the trunk. The man denies all knowledge of the drugs being in his vehicle.\"\n\n\"An as yet unnamed foreign national was stopped on interstate sixty five south and arrested for almost the exact same amount of drugs, packaged similarly. The D.E.A. has expressed interest in both cases.\"\n\nThe station manager gave an editorial, crying out for law enforcement to curb the spread of drugs and lawlessness creeping up from below the border.\n\nThe next day almost every paper in Birmingham had the same editorial appear in the paper. A ground swell of public opinion was rising, powered by a bipartisan political action committee with seemingly unlimited funding. Things were starting to get hot for the Escobar interests.\n\n................................................ \n\nGwen had no idea she was being watched at first. She was angry someone had filed a false report and tried to embarrass her, but soon forgot about it.\n\nShe was coming out of The Chambers, a favorite watering hole of lawyers and court officials, when three men appeared, two grabbing her while the other pulled a hood over her face. Just before the hood covered her eyes she saw a blur of blonde hurtle out of the darkness, followed by yells and screams. Some one snatched her up and was carrying her away, she was trying to scream when the hood came off and a man clamped his hand over her mouth.\n\n\"Be quiet now, Aunt Gwen. I gotta get you outta here.\"\n\nIt was the magic words, she put her arms around his neck and started crying. She was placed in the back of a van. Another man she didn't know quickly checked her over.\n\n\"You're all right, Miss Gwen, calm down now, we've got you.\"\n\n\"Who are you?\"\n\n\"Family, that's all you need to know right now.\n\nWe're gonna take you out to Grandpa Hardys' house for the night. We'll have you home tomorrow morning, all right?\"\n\nAunt Hildy welcomed her in, putting her in the bed and sitting by her until she was calmed.\n\n\"What's going on, Aunt Hildy?\"\n\n\"Child, don't ask me to break a confidence.\"\n\n\"It's Hardy, isn't it? He's watching over me.\"\n\nHildy smiled.\n\n\"In the words of a famous politician, I can neither confirm of deny that statement.\"\n\n\"But how did he know when to be there?\"\n\n\"Hypothetically, let's say there's a man who loves a woman very much, even if he won't do anything about it. Let's also say, for the sake of discussion, that he is determined she not come into harms way. Let's also say, thanks to the foolish actions of the woman, the man has a tremendous amount of disposable income, and chooses to spend some of it protecting her.\"\n\n\"Speaking of Hardy, he's all right isn't he?\n\nHe didn't get hurt protecting me, did he?\"\n\nGwen spoke the words in a rush.\n\n\"I don't think so, honey, your cousins didn't say, so expect not. Now, go to sleep. Ham and eggs for breakfast.\"\n\nAfter a restless night she tried to eat the hearty breakfast Hildy made with little success. Her new found cousins didn't mind destroying it, though. She was hugging them goodbye, when she felt a lump at Joshua's side. Pulling back the shirt she saw a large revolver strapped to his belt.\n\n\"I want the truth. What have I gotten you into?\"\n\nJoshua looked kind of embarrassed.\n\n\"Well, child, when you can't get to someone, sometimes it's easier to get to a relative. We'd rather be safe than sorry. Don't worry, you take care of business and it'll all be over soon.\"\n\nShe noticed a few more cousins than usual around the place.\n\n\"How many does Hardy have watching Grandpa and Hildy?\" She asked as they pulled away.\n\n\"Enough, some you can't see. They'll be fine.\"\n\nWhen he dropped her off he escorted her in. He gave her a little advice before he left.\n\n\"You'll see me, and a few others you recognize from time to time. Don't acknowledge us or let on you know us. Remember, when this is over we'll all be gone.\"\n\n\"One more question. How did Hardy know they were going to try that last night?\"\n\n\"He didn't, he was just getting an update from us. It was a right time, right place sort of thing.\" \n\nShe hugged him and told him to thank the rest of his crew for her.\n\n...............................................\n\nKaren talked to her at lunch.\n\n\"Hear what happened last night at The Chambers?\"\n\nGwen was glad she had her mouth full, it gave her time to frame her answer.\n\n\"No, I was there last night but left early. What happened?\"\n\n\"There was some sort of fight in the back parking lot. When the cops got there they found two Mexicans, beat half to death. They wouldn't talk, so they held them for a few hours and let them go.\"\n\n\"What were they doing in the parking lot\"\n\n\"The police think it was a drug deal gone bad. Man, they're everywhere these days.\"\n\nGwen agreed.\n\n\"Yeah, you're just not safe anywhere any more.\"\n\nAs they got up to leave she asked how the counseling sessions were going.\n\n\"We got the individual sessions out of the way, and our first joint session is this week.\"\n\n\"I hope it works out for you. Will Hardy be able to drive by then?\"\n\n\"Why wouldn't he be?\"\n\n\"Well grandpa told me this morning his arm was sprained and he had a nasty cut, took eighteen stitches and six staples to close up. He's got it in a sling. Grandpa said he fell off a tractor while helping Joshua.\"\n\nGwen felt a little faint. \n\n\"Grandpa also treated a Mexican fella, broke leg, broke arm, several cuts. He fell off a tractor too. Dangerous things, tractors.\"\n\n................................................\n\nThings escalated. One of the cousins not even involved was beaten pretty badly. In retaliation, six of Don Vincentes' low level dealers were found in a stolen van with felony amounts of drugs, all stolen from his couriers.\n\nDon Vincente had to fly out to San Diego to open a new supply line. His mini war was costing him millions, D.E.A. and local law enforcement seemed to know about shipments before they even left the country, and very few major shipments were getting through. A Coast Guard cutter, acting on a tip, seized one of his boats with ten million in cocaine and marijuana. He had a leak, a serious one, that he needed to plug, fast. The other cartels thought he was losing his edge, and they were circling, nibbling at his business.\n\nHe had always enjoyed San Diego. He was talking to people, discussing routes and schedules when the name of a local lawyer came up.\n\n\"You might want to put him on retainer. He knows what we do and doesn't care, in fact, he's a customer, even invested some money. He's pretty sharp when he isn't high.\"\n\n...............................................\n\nAllan Hovis hated his life. Forced to keep his word, he had moved West, finally settling in San Diego. He had resumes out to all the major law firms, but the few interviews he got led him nowhere. He was actually hired twice, but turned them down when he discovered he had to take a drug test. His funds dwindling, he opened his own office.\n\nIt was terrible, he went from riding in jets to international destinations to chasing ambulances to the local hospital. \n\nHis luck seemed to change when he defended a mid level drug dealer, getting him off on a technicality. The dealer gave him an ounce as a bonus, and he made gentle inquiries about investing. He had seventy thousand left from his settlement.\n\nHe was allowed to invest fifty thousand on the promise he would defend the dealer and his friends when they needed it. The need arose from time to time, he won some, lost others, but always did his best for them. They still paid him.\n\nHis original investment had grown to almost two hundred thousand and he continued to let it ride. His goal was ten million, then he would retire to an island somewhere, buy a villa, and furnish it with young, willing, beach bunnies.\n\nDon Vincente caught Allan on a good day, not high, but just enough in his system to keep him stable. Allan was afraid of him, he radiated power.\n\n\"Diego speaks highly of you. I'm pursuing some business interests in the area, and he suggested you may be able to help me from time to time, should I need it.\"\n\nAllan could smell money.\n\n\"Diego is too kind. I do what I can, when I can. I would be delighted to help a friend of his.\"\n\n\"Thank you, My business has hit a small snag on the East coast, so I find myself seeking alternatives here in the West. Your Southern Americans are vulgar, and resist reason at times.\"\n\n\"I can relate to that, Don Vincente. Last year I had a run in with a particularly disagreeable Southerner. It's one of the reasons I came West myself. But I have promised myself, if I ever get the chance, I would make him and his wife regret ever meeting me.\"\n\nDon Vincente was in a good mood and had a little too much to drink, or he would have been more guarded.\n\n\"Ah, yes, never forget your enemies. After this little difficulty is settled, Senor Wilkes and his puta wife will regret hearing my name.\"\n\nAllan choked on his drink.\n\n\"Wilkes? That wouldn't be Hardy and Gwen Wilkes, would it?\"\n\n\"Indeed. You know of them?\"\n\n\"Yes, Don Vincente, I do. They have cost me much, recently.\"\n\nDon Vincente laughed.\n\n\"Well then, ever heard the expression 'the enemy of my enemy is my friend'? I think, Allan, you could be my friend. Let me tell you of my troubles. Perhaps you could be of greater help than I thought.\"\n\nHe gave Allan a brief history of his interactions with the family Wilkes.\n\n\"I've tried several things to resolve this, to no avail. It seems every time I think I have a little leverage, I'm thwarted.\"\n\n\"What would it be worth to you for me to fix this?\"\n\n\"You would have my eternal gratitude, plus a very nice financial reward. Your dream of retiring soon would be moved up by years if you could accomplish this.\"\n\n\"Consider it done, my patron. I will leave for the east coast tomorrow. Anything else I can be of service with, let me know.\"\n\nThere was something else he could do. Unknown to Allan, his corvette was packed with cocaine. A little something extra. Don Vincente so enjoyed multitasking. He gave Allan ten thousand dollars to drive, telling him to pay cash at Mom and Pop gas stations and small diners, to avoid cameras.\n\nIt would look like he never left the state.\n\n................................................\n\nThe individual sessions went reasonably well. Hardy already knew, but Gwen found out quickly evasions and half truths would not be tolerated. Bill insisted on the truth and wouldn't let go until he got it.\n\nAfter the sessions he reviewed and collated his notes, and waited for the fireworks.\n\n.................................................\n\nGwen was fifteen minute early, vowing to never be late after the first session. Hardy was already there.\n\n\"Good, we'll start a little early since you're both here. Here is what is going to happen. I'll do a lot of talking the first little while, then you'll each get a chance to speak. I warn you, stick to the topic at hand or the session will terminate immediately, and it won't be counted. Do you understand? I expect a verbal confirmation from each of you. Hardy?\"\n\n\"I understand the rules, Bill. Can we get on with it?\"\n\n\"In due time. Gwen, do you understand?\"\n\n\"Yes, Bill, I'll play by the rules.\"\n\n\"Good, good, now that's what I want to hear. Now, for the next few minutes, I'm the only one allowed to speak, okay? I want to go over some of the stuff from your solo sessions, and start my course of therapy.\"\n\nHe paused, looking at them. They were in chairs placed at opposite ends of the room. Gwen went to pull hers closer but Bill stopped her.\n\n\"Please leave the furniture in place, there's a reason for it.\"\n\n\"First, you two come from totally different worlds. Next, you're almost a half generation apart in age. Your values, at least during your marriage were widely different. In fact you're almost complete opposite in every aspect but two.\" \n\n\"One, for some reason not known to man, you love each other. Now, Hardy, don't blow up, I didn't say you had to stay together, just stating what you both have admitted. Second, and most important, you have no idea who each other are.\n\nYou've never actually met. You both went into a marriage based on lies and half truths. I'm, no we, are going to change that. The rest of the session and maybe one or two more will be spent by introducing yourselves to each other. Put it on the same footing as a first date. You're interested or you wouldn't have agreed to the date. So, we're going to start by physical introductions. Hardy, get up, go over, shake the woman's hand, and introduce yourself. Go on now, don't be bashful.\"\n\nHe looked like he was going to an execution. Bill encouraged him.\n\n\"Go on, Hardy. Speak up, the lady is waiting.\"\n\nGwen had stood up. Hardy stopped in front of her, not close, but not far.\n\n\"Hello, my name is Hardy Wilkes. How are you this evening?\"\n\nIt was said in a monotone, but it was clear and direct.\n\n\"I'm pleased to meet you, Mr. Wilkes. I'm Gwen Wil...I mean Canaday. I feel better tonight than I have in a long time, thank you for asking.\"\n\nShe held out her hand.\n\n\"Don't be rude, Hardy, shake her hand. It won't kill you.\"\n\nBill was grinning, but they couldn't see it.\n\nHe had never seen the man so tentative, holding out his hand like he expected it to be cut off.\n\nGwen took it gently, holding it for a second.\n\n\"Good, good. Now, please be seated. Would you like to ask her some questions, get to know her a little better? I bet she's fascinating. Remember now, first date questions, nothing about past relationships.\"\n\nHe was trying to frame a question when Gwen spoke up.\n\n\"Maybe I should start. As I said, my name is Gwen. I'm a lawyer by trade, right now I'm an assistant district attorney in Jefferson County.\n\nI grew up in Boston, did you catch my accent? It's not as strong as when I first moved her, but people still turn and look. I'm twenty seven, was home schooled during my teen years, entered college just past my sixteenth birthday. Didn't take breaks between semesters, had my law license at twenty two. I went to work for my dad, he is the principal owner in a firm, you may have heard of it, Canaday and Associates? He's a fifth generation lawyer, it runs in the family.\"\n\nShe paused for breath, afraid she had said too much.\n\n\"Good, Gwen, good. Now, Hardy, would you like to tell Gwen a little about where you grew up? Maybe comment on what you heard?\"\n\nHe took a deep breath, as if considering his words carefully.\n\n\"I have heard of Canaday and Associates, they have an office here too. Good firm, very respected. I happen to know Greg Canaday personally, a fine man. Someone to be proud of.\n\nI've heard his daughter was a bit spoiled, but you can't trust rumors.\"\n\nBill was about to interject but Hardy kept going, noting Gwen wince at the last statement.\n\n\"As for me, the common term around here was 'poor white trash' when describing my family. My mother was a cheater, and my sister followed in her footsteps. My dad was a petty criminal, and I pretty much followed in his footsteps. Luckily for me, some influential friends managed to get me into the military. I served most of two tours in Iraq and was invalided out of the Army. Never got the ducking thing, I guess. I had physical and emotional therapy, and lo and behold, ended up a lawyer. I have more relatives than you can shake a stick at around here, some good people, some lowlifes of the worst stripe. I guess I'm somewhere in the middle, nobody is sure where I'll land.\"\n\n\"I'm sure you'll land on your feet, good men always do. Despite your beginnings and upbringing, you've managed to better yourself through hard work and determination. I admire that. By, the way, I see your arm is injured. Are you alright?\"\n\nGwen couldn't keep the concern out of her voice.\n\nHardy laughed.\n\n\"I'll be fine soon. Farming accident. Doesn't pay to get inattentive working with dangerous equipment.\"\n\n\"Did you damage the equipment?\" She was smiling.\n\n\"Well, I did knock some paint off, and a couple of the moving parts got broken, but they were repaired and seem to be mending.\"\n\nBill interrupted, trying to get them back on track.\n\n\"As interesting as that exchange was, let's stay on track. Maybe I should direct a question or two.\"\n\n\"Gwen, let's start with an easy one. Where do you see yourself in ten years, career wise, what kind of relationship do you see yourself in, where do you think you'll settle down?\"\n\n\"That's an easy one, Bill. I see myself in a loving relationship, happily married to the man of my dreams, with a child or two, maybe even three. I intend to stay in this area, I have family and friends and I like it here. Career wise, I couldn't tell you. We won't need to work for a living, so I may become a housewife, at least until the children are older. I can see my husband as a gentleman farmer, provided he stays away from heavy equipment.\"\n\nShe couldn't resist a little smirk.\n\n\"And you, Hardy, what do you think of that plan?\" \n\n\"I must admit, that's not the vision I'm getting. You seem too goal oriented, forgive me, but too self centered to be settled down with a family.\"\n\nBefore Bill could interject, Gwen came back.\n\n\"That would have been true a year ago. But my priorities have changed, my extended family have become important to me. I've found the more I think about making others happy, the less I worry about foolish things. I love my career as a lawyer, be it in court or in a boardroom, but I've found it won't keep you warm at night, won't snuggle you, hold you and tell you it will all be fine, because it loves you. And believe me, that's far more important\"\n\nBill was watching the exchange closely, noting the reactions of Hardy, going from incredibly sad, to frustrated, to disbelieving. Time for a change.\n\n\"Tell us Hardy, where do you see yourself in ten years?\"\n\nHardy grunted.\n\n\"The way my life is going, I'll probably be dead in ten years. If not, I'll hopefully still be practicing law, and maybe, just maybe, I 'll have people around me who love me, there's even an outside chance I'll have someone, maybe even a child or two, if I'm not too old. Who knows?\"\n\nBill looked at the clock.\n\n\"Well, time to stop. I want you to think about something before next time. I want you to give it serious thought. Write it down if it helps you clarify your thoughts. \"",
        "\"Here is what I want you to do. I want you to define love, not in the abstract, but your personal definition of love. I want to compare your definitions alone first, and then in the session I want you to read your definition to each other, giving explanations and clarifications if needed. See you next week.\"\n\nGwen hung back as Hardy left.\n\n\"Do I have a chance with him?\"\n\nBill gave her a classic non answer.\n\n\"That's not up to me to say. Good night, Gwen.\"\n\n................................................\n\nAllan was cranky. Two days on the road. A fucking ticket in Texas, fifteen miles over the speed limit. There went the low profile. He managed to talk the cop down to ten over the limit so he didn't have to go to court, promising to pay the fine before it came to court.\n\nGood party in Phoenix, though. Two hookers, lots of coke, he didn't want it to end.\n\nTwo hours out from Birmingham he called Gwen, Don Vincente was kind enough to give him her new number.\n\n\"Gwen, baby, what's up. Miss me?\"\n\nShe knew who it was, but had to ask.\n\n\"Who the hell is this?\"\n\n\"It's Allen, baby. Ready for some more blond on blond lovin'?\"\n\n\"I don't know how you got my number, don't really care. Lose it, never call me again. I hope you have a miserable, shitty life.\"\n\nShe hung up. He called right back.\n\n\"Baby, before you hang up, I need to tell you I got pictures of you doing coke in Paris, butt naked with the straw up your nose. We need to talk.\"\n\nShe sighed, this was just perfect. Another asshole out to ruin her life.\n\n\"Cut to the chase Allan, what do you want?\"\n\n\"Well babe, as much as I would love a repeat of the last time we met, this is business. Thanks to you, your dad, and that asshole husband of yours, mu life sucks. But I've made new friends, started a new career. Meet me somewhere, and I'll tell you everything.\"\n\nShe made arrangements to meet him at a truck stop just outside of town. Just as soon as she hung up she called the judge, quickly explaining.\n\n\"I can't let Hardy find out he's here, he'll kill him. If he finds out he came to see me Hardy will read it all wrong and never take me back. What am I gonna do?\"\n\nJ.T. was frail in body, but his mind was sharp as ever.\n\n\"Call him back, change the meet location to the address I'm giving you. Tell him whatever he wants to hear, just get him there.\"\n\nAfter she rang off he called his son in law.\n\n\"Will Rob, you are about to have one doozy of a problem.\"\n\nHe filled him in and they quickly made plans.\n\nHardy was just coming out of the courthouse when a deputy, his cousin Ebb, stopped him.\n\n\"Hardy, I need you to come with me. Don't get mad, but let me put the cuffs on you, make it look like I'm arresting you. I'm even gonna put you in the back. I'll explain everything later, please, Will Rob said it was important.\"\n\nHe wasn't thrilled about being cuffed, but he and Will went way back, and he knew he had his reasons.\n\nIt was just getting twilight, the shadows were getting long, and they were driving into the sun so he couldn't exactly see where he was when they stopped.\n\nIt was an old abandoned farm house, over grown with weeds and crumbling with neglect. There were three cars already there, Wills', Gwens', and a red corvette he didn't recognize. He was starting to get a tingling in his forehead, his adrenalin was rushing. He had stopped taking the pills until the thing with the Escobar kid was over. Felt like he needed the edge.\n\nEbb turned the car slightly and he recognized Allan. He spoke in a very quiet voice that still set chills running up and down the deputy's spine.\n\n\"Ebb, I need you to take these cuffs off me and let me out of the car.\"\n\n\"Hardy, Will said to keep you here. He'll be along in a minute to explain things. J.T. is with him, they're not gonna let any harm come to Gwen. Try to relax.\"\n\n\"I need out, right now, Ebb. Do it!\"\n\nWill came over.\n\n\"Hardy, you need to stay calm. Gwen called us, said this guy was threatening her, and she was afraid you'd find out and get the wrong idea. He and I are gonna have a little talk, then I'm going to invite him to leave our fair state, never to return. It'll be over soon and we can all go home.\"\n\nAllan was scared. Sheriff Andy and deputy dog didn't act friendly, and he had no idea who the old guy was, but he looked downright pissed. He realized he was an idiot for agreeing to such an isolated meeting, but he had already decided it would work for him. He'd show her the pictures, get her to do something to screw up the Escobar trial, and maybe get a little pussy as a bonus.\n\nThen the cops showed up and it went south fast. While he wouldn't admit it, every time he looked at Hardy he felt queasy, flashing back to the pain he had experienced.\n\nHe was also a little high, snorting a line just before he met Gwen for an added boost of confidence. There was at least an ounce left in the dash, he would be up shit creek if they decided to look.\n\nThe sheriff came over, just looking at him until he became uncomfortable. He actually jumped a little when he started talking.\n\n\"Mr. Hovis, I'm hearing disturbing things about you. Coming into my county, threatening one of our locals. I take a dim view of that. Know how long you could get for attempted blackmail in our state? The guys in Huntsville would love you, a Yankee and a lawyer. Some of them might even think you're pretty, those black boys really like blonds.\"\n\nSuddenly his grand plan seemed foolish and he started looking for a way out. He had just enough coke in him to try to bluster and threaten. \n\n\"Hold on, now. I was just stopping by to say hello to an old friend, maybe share a memory or two. I have no idea what she told you, but unless I've done something illegal that you can substantiated, I believe I'll be on my way.\"\n\n\"That man,\" he said, pointing at Hardy, \"has already assaulted me once. Luckily for him I was in no position to defend myself, being balls deep in his wife at the time, or it would have ended much differently. You're a pussy, Wilkes, you couldn't come close to me in a heads up fight.\n\nGood thing you're locked up, I'd love to embarrass you in front of your woman. No, wait, she was fucking me so that must have made her mine.\"\n\nHardy leaned back and kicked the car door as hard as he could. Seeing how sturdy it was, he changed tactics and kicked the window several times. It wouldn't break, but started leaning outwards. Frustrated, he tried the other window, hitting it just right after a few kicks, shattering it. He tried to crawl through, with Ebb and Will pushing him back. He was flushed and was practically screaming. \n\nJ.T used a voice that had four decades of courtroom authority behind it, Hitting the hood of the corvette with his cane, he shouted.\n\n\"Enough! Hardy, behave yourself, right this instant. YOU, Yankee boy, shut the fuck up. One more peep out of you and I'll tell them to let him go. I'll defend him myself, he won't do three years in a looney bin, after all, I got witnesses to swear he was legally insane at the time. You'll be dead so no one will argue about it. Now, if you want to live, I suggest you listen to our sheriff.\"\n\n\"Mr. Hovis, if it was up to me, and it is, I'd arrest your ass right now. But, since it could easily get messy for some very fine people, you get one chance. They would get hurt, but you'd still end up in jail. Get your ass in that shiny little car and get the hell out of my county. Don't come back. Ever. This is your only chance, take it before I change my mind.\"\n\nHe was partly stoned, but he had enough brain cells firing to know it was time to cut and run.\n\nDon Vincente would be displeased, but he would find a way to make it up to him. They had him empty his pockets, and as he was retrieving his items he noticed his cell phone missing. It had the pictures on it, he needed it back, he might still be able to use it.\n\n\"Where's my phone?\"\n\nGwen smiled sweetly.\n\n\"I'm so sorry, Allan, it must have fallen off your hood, and I stepped on it. My oops. Tell you what, send me the bill for a new one. Now leave, and have a miserable, shitty life.\"\n\nShe had literally stomped the phone to pieces. He was going to try to retrieve it and see if he could salvage anything, but the sheriff told him to leave it. Hardy was still struggling, and that damn dog in the deputy's car was barking like mad.\n\nHe left as fast he thought he could go.\n\nHardy calmed down after about ten minutes. The dog was still barking.\n\n\"What the hell's the matter with Belle? She's been going crazy since you got here.\"\n\nEbb grinned at his boss.\n\n\"I'd bet my bottom dollar there were drugs in that car. A good bit judging by the way she's acting.\"\n\n\"Interesting\" said Will Rob, fishing out his phone.\n\n\"Coy, how the hell are you? Got a good feeling about the election? That state trooper wants to be sheriff bad, and he's got some money boys behind him.\"\n\n\"Tell me, you still got that tough on crime campaign going? Still fond of Yankees, lawyers, and drug dealers? Okay then, I might just make your day.\"\n\n\"I've got a gift for you, might make you look good to the voters. In oh, say thirty minutes, a big blond guy in a shiny red corvette is about to go breezing through your county on sixty five heading north. I got a hot tip he was carrying drugs, but it came in too late for me to do anything about it.\"\n\n\"Yeah, I'm still getting anonymous tips right and left on my hot line. Somebody must really have a hardon for those Mexicans, and I'm reaping the benefits. I was gonna retire next year, but if this keeps up the voters will lynch me if I try it.\"\n\n\"Coy, one thing, you didn't hear this from me. I don't want my source to get upset, they might have some more information. Your welcome. Say hey to Myra. See ya.\"\n\nHe hung up the phone with what can only be described as a shit eating grin.\n\n\"Well, children, I've done my civic duty for today. Time to go home, supper's waiting. Hardy, you're gonna pay for those windows. And you're welcome. Good night to you, Miss Gwen, see you in court.\"\n\nGwen was trying to explain things to Hardy, but he sat stone faced. Sighing, she gave up and left.\n\n................................................\n\nAn hour later, Allan was still fuming over his failure. He had pulled over at a rest stop and did a couple lines to calm him. It helped, some.\n\nSuddenly blue lights went on behind him. Fuck, what is it with these rednecks? First Texas, now this. He looked down and swore, the speedometer was sitting on ninety five.\n\nPulling over, he was about to put his sorrowful face on when another cruiser pulled in front of him, and another pulled beside him, boxing him in.\n\nTwo deputies and a state patrolman pulled their service weapons and ordered him out of the car and on the ground. Ten minutes later he's handcuffed in the back of one of the cruisers when the Sheriff and two DEA vans pulled up, followed by two TV news crews. Shit, they must really hate speeders.\n\nOne DEA van had two dogs, and they were practically trying to eat his car. He got a real, real, real bad feeling. It was all over the news the next morning.\n\nThe announcer almost couldn't talk for glee.\n\n\"A traffic stop last night yielded unexpected results. Allan Hovis, a lawyer from California, was pulled for doing twenty five miles an hour over the speed limit. A routine examination resulted in evidence there were drugs in the car. It was towed to the DEA lab in Montgomery, where it was disassembled and was found to have nine pounds of cocaine stored in several different locations in the car. There are rumors that the lawyer is somehow associated with a Mexican drug cartel. Just another instance of the growing tide of drugs flowing up from the south.\"\n\nThey held Allan in isolation, citing homeland security, as the cartels have been known to deal with terrorists. He was in deep shit and knew it.\n\nHe sang like a bird, after getting guarantees of safety.\n\nThe DEA guys gave him assurances he was safe, but they knew from experience, if the cartel wanted you, nothing could save you. Their hope was to keep him alive long enough to testify.\n\n..................................................\n\nDon Vicente was in a rage. He knew the weak character of the California lawyer. He would definitely talk. It might be a good time to go back home for awhile.\n\nIn truth, he didn't like his nephew much, but he had sworn to his dying sister he would keep him safe. Plus it had now become a point of pride. If he were to lose this, his power base would be compromised.\n\nHe was at his wit's end when providence gave him a gift.\n\nA man who could be useful contacted one of his subordinates, was checked out, and found interesting. A meeting was set.\n\nHe disliked Ronnie Wilkes on sight. Any man who would betray his family was not to be trusted. But he had put together a plan that would probably work.\n\n\"Look, you and I know there is no way you can get to his wife, they've got her wrapped in three levels of security. But the man he loves most in the world, his grandfather, is a creature of habit.\"\n\n\"Every two weeks he and Aunt Hildy go to town. She grocery shops and gets her hair done while Hardy gets his haircut and gets what farm supplies he needs before they meet for lunch at the diner.\"\n\nHe's at Tommys' Barber Shop no later than ten. He'll have two guys with him. One stays outside while the other goes in. That's where he's accessible. I'll have a car waiting in the alley out back. I'll go in with some story about how he has to get out now and hustle him out the back door. We'll have him in the car before he knows what's going on.\"\n\n\"He won't suspect a thing, after all, I'm family and supposed to be helping keep an eye on them.\"\n\n\"What do you want?\"\n\nRonnie looked uncomfortable for the first time.\n\n\"I need a good payoff for my boys, enough to get out of town and start somewhere else. And I'd like to work for you, I'm sure I could be useful.\"\n\nDon Vincente agreed to everything, knowing there was no way he would trust a traitor.\n\n................................................\n\nHe was right. When all this first started, Hardy went to see Roy. \n\n\"Roy, I'm sure by now you know trouble is coming. Your business is going to get hurt, I can't help that. When the law cracks down, they'll have to crack down on everybody. Before you get tore up, tell me, what does your crew average a month. Don't try to bullshit me.\"\n\nThe number was a lot smaller than he thought.\n\n\"Okay, here's the deal. I'll pay you that plus ten percent to lie low for the next two or three months. I'll also need some of your guys to keep an eye on a few people. I'm willing to pay extra for that. Can we reach an agreement?\"\n\nThey could and did. All activity except bookmaking would stop. He had commitments with 'some gentlemen from New Orleans' he couldn't break.\n\nHe surprised Hardy.\n\n\"You know, I would have done this for nothing. Family ties.\"\n\nHe was moved. \n\n\"Thanks cousin Roy, but your business is going to hurt from my actions, and I can't have that on my conscience, family ties.\"\n\nThey shook.\n\n................................................\n\nWill Rob dropped by his office.\n\n\"Got a minute?\"\n\nHardy pointed to a chair and had Crystal make a pot of coffee.\n\n\"What's up Will?\"\n\n\"First, Bonnie is going to be in town for a few days and wants to see you.\"\n\nBonnie was his daughter, a couple years younger than Hardy.\n\nHardy brightened.\n\n\"How is the esteemed state senator? Tell her to name the time and place.\"\n\n\"I'll let her give you an update on her life. I'm sure she'll call.\"\n\nHe sat silent for a minute.\n\n\"Spit it out Will, before it gives you indigestion.\"\n\n\"I see what's happening. I'm pretty sure who's behind all those hot line tips I'm getting. Still not sure where the information is coming from, actually, as long as they keep coming I don't care.\"\n\n\"When the thieves go quiet it makes me nervous. Thank goodness for the pimps, it gives the guys something to do. Bad things are coming, sure as shootin'. I want your word that you'll use whatever influence you have that average people don't get hurt. Keep your war private, and I'll have no reason to start asking embarrassing questions. Understand me?\"\n\nHardy grinned.\n\n\"Will Rob, I have no idea what you're talking about. But in a hypothetical situation, I would assure you that no expense would be spared to make that happen. Happy now?\"\n\n\"As happy as I'm gonna be, I reckon. Damn Hardy, I like you, but every time you're around my life gets more complicated. I'll tell Bonnie to call. Thanks for the coffee.\"\n\n................................................\n\nIt went off without a hitch. Ronnie burst into the barber shop just as Joshua got out of the chair.\n\n\"Joshua, we got to get you out, now! I got a car waiting out back, they're watching the front. Roy found out they were gonna try to grab you, Let's go!\"\n\nHe led him through the back of the shop, the young cousin trailing behind.\n\n\"Quick, behind you!\"\n\nThe young man turned and Ronnie hit him with the blackjack, knocking him unconscious instantly.\n\nJoshua started to struggle, but he tapped him, dazing him into submission.\n\nHardy got the email with pictures in forty five minutes.\n\nJoshua tied to a chair, with an obvious lump on his forehead. The message was short.\n\n\"She throws the trial or he dies. Respond by ten tomorrow.\" \n\nHardy felt the rage rising, welcoming it with open arms.\n\nIt was a long night. His first act was to get Gwen out of town without knowing they had Joshua.\n\nFour carloads left town, and no one knew which one she was in. Outside of town they picked up four more vehicles, they split into pairs with the first four and went in different directions.\n\nThe next morning at nine a.m. Don Vincente got a response. There was a picture of Raul, beaten almost past recognition. The message was short and to the point.\n\n\"Call this cell before eleven, or Raul dies at noon. No one can protect him.\"\n\nDon Vincente checked the prison. There had been a near riot, oddly Raul was the only one seriously hurt. Security was tight, rumor was someone was going to die at noon.\n\nAt ten thirty he made the call.\n\n\"There will be a man in a black four wheel truck in the parking lot of the Piggly Wiggly on ninth. Follow him, bring as many as you want with you, as long as one of them is my grandfather. No later than four. Raul lives until six unless I get what I want. There will be a few more pictures at two, just as an incentive.\"\n\nHe disconnected. Don Vincente found it disconcerting. No offer to negotiate, no threats, no discussion.\n\nHe paled when he got the next pictures. His wife, his twin daughters, laughing at his villa in Cozumel. The time stamp was forty five minutes ago.\n\nFive big Suvs followed the truck out of town.\n\nThey went down a rural two lane until the truck stopped at a gate. The driver opened it, motioning them through. He then locked the gate, turned around, and left. A well tended lane led through fields and sparse woods before stopping by a pond. There were two oaks beside the pond with picnic tables under the shade. The area was clear for four hundred yards, with plowed fields and short wheat just coming up. Hardy sat under the trees, a fishing rod and cooler beside him. There was a beer in his hand. He rose and placed the bottle on the table.\n\nEighteen men got out of the vehicles, sixteen fully armed with everything from Uzis to pump shotguns.\n\nDon Vincente strode forward, trying to control his temper.\n\nHardy spoke before he could explode. \n\n\"Please sign this, and give me a hundred dollars.\"\n\nIt was a contract calling for Hardy to consult on the defense of his nephew.\n\n\"This gives us client lawyer protection. I'll be bound by law not to give any information about this meeting. Surely you see the advantage.\"\n\nA hundred dollar bill appeared and the paper was signed.",
        "Vincente exploded. \n\n\"You arrogant bastard! How dare you threaten and harm my family. I'm going to take pleasure in watching you die slow.\"\n\nHardy waited his tirade out. When he finally wound down Hardy simply said \"beer bottle\". It exploded into small pieces, without the sound of a shot. He looked into the shocked faces around him before smiling.\n\n\"Suppressors are wonderful, aren't they? And these ear buds, you'd be amazed at the range they have. Look at your chests.\"\n\nVincente looked down, three red dots were centered on his chest. He looked round.\n\n\"They're in the tree line.\"\n\n\"That's over four hundred yards!\" he exclaimed.\n\nHardy grinned. \n\n\"Yes, three of the people in the trees are ex military, snipers. One holds the record for the third most distant kill, almost nine hundred yards. The rest are just good ol' boys who cut their eyeteeth hunting deer. You can't see them, but there are another three a lot closer. Don't worry, all I want to do is talk, I just wanted to get your attention. Tell your guys to be calm, nobody has to die today. What say you and I sit down in the shade and have a beer? But first, send Grandpa across the field. You don't need him anymore, you've got me. I give you my word, unless you start it, there will be no violence here today.\"\n\nVincente said something in Spanish. One of his men opened a door, and Joshua and Ronnie got out.\n\n\"Damn, Ronnie, they got you too? Well. Do me a favor and help him across the field.\"\n\nHardy had heard his grandpa cuss before, but never like this.\n\n\"He's in on it, boy! He's the one got me, the one that gave me this lump! He's the lowest kind of snake. You don't expect this shit from family.\"\n\n\"That true, Ronnie?\"\n\nIt was said softly, but Ronnie looked in his eyes and saw death.\n\n\"Well, not exactly, I.......\"\n\nJoshua blew up.\n\n\"Yes, fucking exactly. Ask him!\"\n\nHe pointed at Vincente. He nodded.\n\n\"You know how it is. Use whatever tools available to get the job done.\"\n\nHardy looked Ronnie over.\n\n\"When this is over, me and you are gonna talk.\"\n\nRonnie felt the hair rise on the back of his neck. Old people said that happened when somebody stepped on your grave.\n\n\"Enough family chit chat. Don Vincente, if you would.\"\n\nThey walked to the picnic table and watched Joshua walk into the trees.\n\nHardy flipped open a laptop.\n\n\"Look at this.\"\n\nIt was a video of his villa, with his family on the beach. They seemed to be looking for something. They started pointing and laughing.\n\nA large, remote control boat was crashing through the waves, shooting fireworks out of the smokestacks. There were three packages on the deck.\n\nWhen it beached, the bodyguards pulled it in, laughing. The women and two children tore into the packages. He watched in horror.\n\n\"Relax, Mr. Escobar. You just surprised your family with a loving gift. They were told it was coming, but not what it was. There's a note in you wifes' present, telling them how sorry you are for being away from home so much lately.\n\nThe girls, aren't they lovely? They got a gold locket each and a brand new, state of the art smart phone with international capabilities, so you can tell them goodnight no matter where you are in the world. Your wife got the same phone, and you know how much she likes emeralds, she got a nice, really nice necklace. I won't embarrass us by telling you what it costs, but you said in your note she was the moon and stars to you, and it was just a small token. You're gonna get some good loving when you get home. And if you're wondering, the note is in your handwriting, even using the pet name you have for your wife while you make love.\"\n\n\"Here, this one is yours, and I know you'll check them out, but they're all clean. She should be calling in about thirty seconds.\"\n\nThe phone rang before he stopped talking. He held it like a snake before putting it to his ear. It was his wife, crying, telling how wonderful he was, how much she loved him, when was he coming home? And yes, she did tell him he would get a very special welcome home gift. As soon as he hung up his children called, one after the other.\n\nHardy smiled.\n\n\"Family is wonderful, isn't it? I don't know what I would do without mine. Now down to business.\"\n\n\"Those presents could just as easily been bombs. I don't have your money, but I've got some, and part of it is in a fund that can only be accessed by me or two designated agents. If I and anyone in my family comes to harm, your family dies. You get to live, I want you to carry the memory for a long time.\"\n\nVincente looked into his eyes.\n\n\"You're a monster!\"\n\nHardy replied in kind.\n\n\"We're both monsters, Mr. Escobar. What you and I are capable of goes far beyond the understanding of most people, yet we can do it and sleep at night. If we continue, people are going to start dying, people who don't have anything to do with this, on both sides. Let's stop it now.\"\n\n\"What do you suggest?\"\n\n\"Let the kid take a plea deal. He's a punk, you know it as well as I. He's traded on your name to the point he believes himself untouchable. I'm sure this morning gave him a wake up call. He's twenty, he could be out in eight years. Maybe it'll make a man of him. Or he might end up with a bitch tag, but I'm sure you'll make sure he's protected.\"\n\n\"This little war has cost you what, thirty million? And it's going to get worse. Your California lawyer is no doubt singing like a bird.\n\nHeard from Diego in San Diego lately? You won't.\n\nCut your losses, mend your fences, rebuild your business before it's too late. Give me your word, and all of this grief will go away, or at least my part of it.\"\n\nVincente was still shocked about the depth of his information. He made a decision.\n\n\"If I give you my word, would you trust it?\"\n\n\"Yes I would, in all my research, your word apparently means something to you. I'll give you my hand on it.\"\n\nHe held out his hand, and Don Vincente Escobar, feared by millions, took it. He knew there was no fear in this man, and he would honor his word.\n\nRising he told Hardy to have Gwen write up the agreement, he would make sure it was signed. They walked back to the vehicles.\n\nRonnie stood there in shock as they loaded up.\n\n\"No,\" he screamed, \"He's supposed to die!\"\n\nHe raised his shotgun, to have it knocked out of his hands by a man with a cane. He had his leg in a cast and his arm in a sling.\n\nHardy thanked him.\n\nPulling his shirt off,the men could see the fresh scar of the cut, and a smaller one on his neck no one had seen before. The group also saw all the old scars and bullet holes. Their eyes widened at the sight.\n\n\"Tell him he's a malo hombre, and he almost got me.\"\n\nAnother translated, and the man grinned. They shook.\n\nVincente looked at Ronnie.\n\n\"Do you want him?\"\n\n\"Not now, too many witnesses. Ronnie, run. You stay and I'll kill you slow, you understand?\"\n\nHe nodded, crawling into a vehicle.\n\n\"One last word of advice. Leave now, don't even go back to your place. DEA is closing in, soon. Don't use your jet, they're watching it. Make other travel arrangements, now. Good bye, I honestly hope I never see you again.\"\n\nVincente thanked him, and drove away, south. Hardy did indeed never see him again.\n\nVincente looked back as they drove away, seeing men in gillie suits rising out of the fields, and what looked like a skirmish line coming out of the woods. He was very grateful no one had done anything foolish. He literally pushed Ronnie out of the car on the edge of town, and he watched on hands and knees as they sped away. \n\n................................................\n\nGwen was stunned when the Escobar lawyers wanted to talk. She was even more shocked when they agreed to a deal, He got a lengthy sentence but could get out as early as seven years. All the tension, all the drama, and suddenly it all went away. Somehow, she knew Hardy was behind it.\n\nHer year was up. Paul and Karen were begging her to stay, Paul even hinting she would make a fine district attorney when he retired in two years.\n\nShe was tired. the last twenty months had been at the least, interesting. She was exposed to a totally different world, and for the most part liked it immensely.\n\nShe promised Paul she would think about it, but was going to take some time off to 'recharge'.\n\nThe counseling had ups and downs. She didn't realize it at first, but the chairs were gradually moved closer, and one day they were gone, replaced by a large sofa. They were closer than they had been in a while, even if it was strained. The next session saw the sofa replaced by a small loveseat.\n\nShe often wondered about what he did for sex. She made good use of the internet, buying enough toys to have a little variety. Two sessions ago she brought it up, with Bill's encouragement. He wondered too. She had told him about her toys in the individual session when he asked if she was seeing other men.\n\n\"Until I'm divorced, I'll never touch another man.\n\nI promised myself.\"\n\nShe delicately brought sex up, explaining to Hardy she was never going to stray again. He shocked them both by laughing.\n\n\"You love sex, Gwen. Do you seriously think I believe you're doing without?\"\n\nHe laughed even harder when she told him about her toys. Finally she said in anger she could last as long as he could.\n\nThat started a fresh round of laughter.\n\n\"You've already lasted almost a year longer than I have, then. You destroyed the marriage covenant in my mind when you cheated. I've had a steady lover for the last ten months. I held out for awhile, then figured you were doing it, what difference did it make if I did it too.\"\n\n\"Before you ask, it isn't Crystal. You don't know her, she doesn't even live in this area. I'm not in love, neither is she, but we're good together, she's a fun person. Intelligent, and definitely sexy.\"\n\nGwen almost went into shock. He Hardy with another woman! How could he! She lashed out.\n\n\"You need to stop this foolishness right now! I'm more than willing to give you all the sex you can handle, all you have to do is ask. The sooner you ask the better.\"\n\n\"Sorry, Gwen, stomp your foot all you want. I may have already broken it off. I may still be going hot and heavy, but you'll never know, will you?\n\nHow does it feel, wondering? Welcome to my world the last few months of our marriage.\" \n\nIt was too much for Gwen, she rushed out of the office. When she didn't come back in five minutes, Bill went looking. Her car was gone.\n\n\"She's gone. You really hurt her, you know that?\"\n\n\"I\"ll apologize when I see her next, but not for doing it. She broke the marriage, not me.\"\n\n\"You're not going to reconcile, are you?\"\n\n\"I don't see it happening. Yes, she's grown up. Yes she's more mature. Yes, I still love her. But really Bill, how much has she changed? It's been almost two years, and she won't let go. As far as the marriage is concerned, she's still stamping her foot saying 'I want'. She should have realized by now I can't forgive her, not for the infidelity, but for the disrespect.\"\n\nBill sighed. He thought several times they were going to make it.\n\n\"All right then. Next session will be the last, but promise me you'll tell her what you told me as gently as possible.\"\n\n\"Are you still seeing the woman?.\"\n\n\"No, she broke it off with me, suddenly. She said she was starting to have feelings for me, but for some reason that didn't ring true, but it was fun while it lasted.\"\n\nHe really missed her.\n\n...........................................\n\nHe was sitting at the bar, nursing a drink and minding his own business, when she approached him.\n\nShort, red hair, cute, and very well built. The band was on break and you could actually hold a conversation.\n\n\"Why aren't you dancing? I've seen at least four girls ask, and you've turned them all down. What's the problem?\"\n\nHe grinned.\n\n\"Maybe I can't dance. Maybe I'm gay. Maybe I like minding my own business.\"\n\nShe grinned back, no offense taken.\n\n\"I doubt all of that. I bet you're a good dancer, I don't get the least gay vibe at all, and maybe I like minding your business too.\"\n\nShe held out her hand.\n\n\"Anne Burnside. Actually Captain Anne Burnside, U. S. Army.\"\n\n\"Hardy Wilkes, Sergeant, U.S. Marines. Sorry about the Army thing, I bet you're still a nice person.\" \n\n\"That remark will cost you a dance, soldier. Come on, fall too.\"\n\n\"The band had started again.\n\nShe was right, he was a pretty decent dancer, surprising for his size. He was a full foot taller than her. She still fit pretty good against he when they danced slow.\n\nThey laughed, danced, drank. Both drank sparingly, the others seemed angry when he monopolized her time, but no one was brave enough to do anything about it. As for her, she seemed quite fine with his company.\n\nDuring the last set he got up.\n\n\"I'm going to my room now.\"\n\nHe strode off without another word. She sat there, shocked. He didn't even say good night.\n\nShe got her purse and headed towards the door.\n\nHe was standing there.\n\n\"About time. I was about to give up on you. Come on.\"\n\nHe led her gently to the elevator. She stood passively while he opened the door. He waited for her to enter first, but she just stood there.\n\nHe took her arm gently.\n\n\"Maybe this was a bad idea. Let me see you safe to your car.\"\n\n\"No! I want you, but you make me nervous.\"\n\n\"Why? Have I behaved badly? Made you uncomfortable? Are you afraid of me?\"\n\n\"Yes.\"\n\nHardy was surprised.\n\n\"Why do I scare you?\"\n\n\"My job has turned me into a pretty good people watcher. I usually have them pegged within fifteen minutes. You, I can't place. You seem nice, you're well behaved, but something in you simmers, just beneath the surface. You could be a very bad man.\"\n\n\"Surprisingly, you're not the first to make that assessment. But I assure you, I've never hurt anyone who didn't try to hurt me first. And except for one time, I've never harmed a woman. Part of that was an accident. But I understand.\n\nGive me a kiss goodnight, surely I've earned that, and I'll leave you to the rest of your evening.\"\n\nShe leaned forward as he bent his head, and for a fleeting second knew what the moth found attractive about the flame.\n\nIt was a slow, sensual kiss, with a hint of the power and passion she knew he possessed. Forgetting her reservations, she kissed him back, forcing her tongue into his mouth, surprised he would allow it, when she felt his tongue come alive, overpowering hers and driving it back. She was lost and knew it.\n\nIn his room, she found him forceful but surprisingly gentle. He was definite in what he wanted while not forcing her, and she responded in kind, pliable, willing to let him set the pace.\n\nHe undressed her leisurely, like she was a present he was unwrapping, taking time to taste and explore each new area before moving to the next. By the time he had her down to her panties she was almost ready to explode. Despite her best efforts he would not be rushed. Finally both nude, she marveled at his body, well toned and muscular. She also noted his maze of scars, validation that this was indeed a dangerous man. She counted at least four bullet wounds.\n\n\"Combat?\" she whispered, tracing one particularly long scar with her fingertips.\n\n\"Not that one. Most of these are from a youth lived badly.\"\n\nShe decided to kiss every scar, trying to erase some of the memories he held.\n\n\"From now on, every time you look at these, remember my lips on them. Change the memories to pleasant ones.\"\n\nShe gripped his erection.\n\n\"I think I need to check this for scars.\"\n\nShe slid down his stomach, kissing his scars on the way down.\n\nStoking his cock, she moved it back and forth, examining it.\n\n\"Humm. No visible signs of damage. Maybe I need to take a closer look.\"\n\nHe felt her tongue on the crown, so light he could have easily been imagining it. It took every ounce of control to keep from grabbing her head and forcing her down. \n\nHe didn't have to wait long. Her warm lips engulfed him, it felt like he had dipped it in warmed honey.\n\nShe was making little approving noises, varying the speed and depth of her assault. He felt the almost forgotten tingle of the approaching explosion, and tried to pull her up.\n\n\"Anne, Anne! I'm about to cum!\"\n\nShe looked up into his eyes and plunged all the way down, burying her face in his pubic hair. Her throat seemed to be massaging him, and despite his efforts not to he gripped her head and poured months of frustration into her mouth. She never came off, even as her jaws bulged with the volume.\n\nAfter he was soft and cleaned, she slipped her mouth off and snuggled.\n\n\"My God! That was fantastic! Thank you for that, but why didn't you let me pull off?\"\n\nShe grinned like a Cheshire cat.\n\n\"Don't you know the Army always finishes what it starts. I must admit, I didn't expect the volume. How long has it been since you've bedded a woman?\"\n\n\"Almost a year.\"\n\nShe couldn't keep the amazement out of her voice.\n\n\"A year? That's a story worth listening to, and it can only have two spins. Either you were in jail, or somebody you loved fucked you over. I want you to tell me about it later.\"\n\nHis lips had captured a nipple, while his hand massaged the other. She moaned.\n\n\"Much later works for me.\"\n\n\"Damn, he's almost as good as a woman.\" she thought as his tongue and fingers became familiar with her clit and pussy. He was in no hurry, pleasuring her through multiple orgasms. \n\nWhen he finally mounted her, she lost complete control. He went from soft and gentle to rough and demanding several times. Finally she surrendered, determined to give him what he needed.\n\nThey loved, slept, and two hours later he would take her with fingers, tongue, or steel rod hardness.\n\nThe third time she taunted him, saying he had tried everything but her ass, maybe he should go for the full package. She thanked her stars she had lube in her purse. How could something that hurts so bad at the start feel so good at the finish?\n\nShe woke sore, bruised, and completely satisfied.\n\nHis morning wood was quickly taken care of orally, citing soreness and a need to recover.\n\nThey pretty much spent the whole weekend in bed, going out when they absolutely had to. In between lovemaking bouts he got the story of his marriage from him.\n\n\"The girl sounds like a spoiled brat, but she seems to be growing up. Gonna take her back?\"\n\nHis look made her want to grab him and love the hurt away.\n\n\"I doubt it. I still love her but just can't get over it. Too much redneck in me, I guess.\"\n\n\"Not trying to cut my throat here, I'd love to see you again, but think about it hard. Maybe she is a better person now. You might want to give her a chance.\"\n\nHe just grunted before capturing her nipple again.\n\nThey agreed to meet when he came back in two weeks. Soon she couldn't wait until Friday. They became pretty much an item.\n\nThe days he didn't spend the night or weekend hurt her, but he made it a point to take her to dinner or a club every time. Sometimes they even got in a quickie.\n\nThe weekends were the best. They didn't spend ALL their time in bed. They did touristy things, went down to Florida, Amelia Island once, Jacksonville twice. They read with fascination about the local a.d.a. and his troubles with a drug cartel. The man seemed larger than life, and was constantly pictured, usually with a stunning woman on his arm.\n\nHardy looked at the latest story and mumbled something about being able to relate. Their conversation later took an odd turn.\n\nThey were lying in bed in post sexual bliss, snuggling. She felt him pull away and rise up on his arms. She opened her eyes to see him looking at her with an expression she had never seen.\n\n\"Anne, honey, in all the time we've been together, have I've ever asked about your work, or presumed to ask a favor?\"\n\n\"No, we rarely talk about what we do. I thought you were in construction, you could have floored me with a feather when I found out you were a lawyer. What's on your mind?\"",
        "\"I need to find a man. A man with a specific skill set. A dangerous man, who stays loyal to the job he contracts. He needs to be familiar with Mexico and comfortable working there. Can you help me?\"\n\nShe rose and sat against the headboard.\n\n\"Are you looking for a killer?\"\n\n\"Yes and no. I don't want anyone hurt, but I want him prepared to do whatever necessary to achieve the end I want. And I want the people I'm going to deal with to know he's prepared to kill if he has too.\"\n\n\"What are you into? No, don't tell me, I'm pretty sure I don't want to know. Somehow I see your wife tied up in this. Wait, I've changed my mind,\n\ntell me a little more and I might help you.\"\n\nHe told her of the situation his wife was in, and how he intended to help her.\n\n\"You may not understand this, Anne, but until the divorce is final the family sees her as belonging to me. I can't let harm come to her, they may take things into their own hands and I won't be able to control them. It could get ugly, fast. Innocent people, people not even aware of what is going on, will be caught in the crossfire. I don't want that on my conscience.\"\n\n\"Can you help me? If not, I'll go down to Mexico and recruit people myself.\"\n\n\"Can you give me a few days? I could get into trouble helping you.\"\n\n\"Sure, and if there's the least bit of doubt, don't help me.\"\n\nHe gave her a big kiss and jumped into the shower. She sat on the bed, marveling again at his tight butt as it went through the door. She knew she would at least try to help, hoping she didn't help get him killed.\n\n..................................................\n\nShe was no fool, you didn't hold her job in military intelligence by being one. She had researched Hardy pretty hard after their first encounter. The information made her nervous, it was hard to reconcile the man on paper to the happy, smiling guy with the goofy sense of humor she slept with. But she had learned to trust her instincts, and her first assessment of him had been pretty much on the money.\n\nDeciding to take a chance, she made some discreet overtures to the 'farm boys', telling them it was purely research.\n\nThat flimsy excuse got her called on the carpet of her commanding officer. Knowing better than to lie, she told him everything. He frowned, made a phone call, and she found herself in the office of Major Stein. She repeated the story.\n\nHe sat, rocking slightly in his office chair, as he considered the news. Sitting up, he was suddenly all business.\n\n\"Hypothetically, could you find someone who fits his parameters?\"\n\n\"Of course, sir. Already have.\"\n\nHe eyed her sharply.\n\n\"Your relationship with Mr. Wilkes, define it.\"\n\n\"We're lovers, the new term is friends with benefits. I only see him when he is in town, I've never been to his home, met his friends and family, if that's what you're asking. There is a fondness between us, but we both know there's nothing long term for us. He's in the middle of a pretty interesting divorce, and I'm married to the Army for at least the next eight years.\"\n\n\"Do you know why he needs this man?\"\n\n\"Not really, something to do with protecting his soon to be ex from some drug people I surmise.\"\n\nHe sat back again, tenting his fingers.\n\n\"Do it.\"\n\nShe almost didn't catch his words.\n\n\"I'm sorry sir, would you repeat that?\"\n\n\"Do it. Put him in contact with your man. And monitor Mr. Wilkes, if he looks even remotely on the edge of doing something unwise, alert your commander.\"\n\nAnne looked distressed.\n\n\"Sir, I don't know if I could spy on....\"\n\nHe cut her off.\n\n\"Nonsense! You knew when you sent out feelers it was going to get back to your boss. You're too sharp to have been so sloppy, you wanted us to question you so the situation would be exposed.\n\nYou'll want to watch over him, this just gets you the means to do so through channels. We don't want details, just information that may be pertinent. Go on now, you have your orders.\"\n\nHe sat back, thinking.\n\n\"Hardy, Hardy, what are you up to now? Maybe Bill has some insight.\"\n\nSo it came to pass that \"Wilkes War\" was closely monitored by the army. It lead to a wealth of information on the Escobar cartel, particularly North American contacts, on the East and West Coast. Some of the hot line tips even came from them. The information was very helpful to various agencies.\n\nHardy never knew it, and Anne made sure the watchers didn't slip. Then, in a fluke chance of fate, while Hardy was in Mexico making contact with the man she had provided, she ended up drunk in a hotel room with his wife.\n\nAnne didn't believe in coincidence, and decided fate had told her to end it with Hardy. She did the next weekend they were together, in her normal upfront manner. She knew he suspected something, but was too considerate to last. Instead, he did his utmost to make their last time together memorable. As she watched the jet fade into the distance, she sat in her car and cried, wondering what if.\n\n................................................\n\nThe last session with Bill was brutal in intensity.\n\nGwen tried to be upbeat, but Bill stopped her.\n\n\"Gwen, Hardy has some things to say to you. Please listen and try not to interrupt. Could you do that?\"\n\nShe nodded, felling the first tendrils of fear clutch her throat.\n\nHardy slid a chair over to the loveseat, so he could face her. He held her hand gently.\n\n\"When I was in Iraq the second time, I was tasked to meet and cultivate a local tribal leader. My interpreter and I happened onto a pre-marriage lecture to three couples. The cleric was speaking slowly, making sure the couples could hear and understand. We had to wait, so my interpreter explained what he was saying. I remember the words to this day.\"\n\n\"My children, marriage is a sacred temple, supported by three columns. Love. Trust. Respect.\n\nTopple any one of those columns and the temple wobbles. Topple two, and the temple crashes to the ground Love is the strongest column, supported by respect and trust, for if either of those two weaken, love cannot be supported.\"\n\n\"Do you understand, Gwen? I still love you, heart and soul. But you destroyed the temple, honey. You've destroyed my trust with your lack of respect. I believe you when you say you realize your mistakes, that you're a stronger, more mature person.\"\n\n\"As such a person, you should know this marriage is over. But in this instance, because you want it so bad, you're still the spoiled little girl, saying 'I want'. I'm sorry, but this time it won't work.\"\n\n\"I'm not coming back to counseling. Bill knows and understands. This is it. I'm leaving the papers here, if you truly are the person you say you've become, sign them.\"\n\nHe leaned over and kissed her cheek before rising.\n\n\"Goodbye, Gwen.\" "
    ],
    "authorname": "qhml1",
    "tags": [
        "drama"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/boston-to-birmingham-ch-04"
}