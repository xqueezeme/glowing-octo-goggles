{
    "title": "Teaching Chantelle Ch. 01",
    "pages": [
        "[MF, Toys and Masturbation]\n\nTag: Chantelle still doesn't have her own vibrator\n\nIf you read the prologue, you'd know that Chantelle and I had had numerous conversations about sex during work-related car rides to pick up work supplies. We had never hooked up, although I fantasized about it often. Then she moved away to be with her boyfriend. Things changed when she came back to town for a visit.\n\n***********************\n\nI'd had several pretty personal conversations with my friend Chantelle over the years. Unfortunately, even though I knew an awful lot about her sex life, we'd never consummated anything. After she moved away to be with her boyfriend Tom, I didn't get to see her for well over a year. But one September, out of the blue, I got a call from her. She was back in town and wanted to see if I had time to get together. No way I'd pass up seeing her, and we planned lunch a few days later.\n\nOver lunch, I learned that things were still good with Tom, but he was on an assignment out of town for an extended period, and so she had taken the time to come and visit her family for three weeks. During lunch, I asked if she'd like to join me for the 2 hour drive down to our pet supplier later that week.\n\n\"I can't wait! It's been a long time since we had a fun chat,\" she responded. I thought (and hoped) that I detected a little devilish sparkle in her eye when she said this\n\nI couldn't wait. I didn't really expect anything to happen on the trip, but was hoping just maybe to find out more about what was going on in her current sex life, get to share about mine, and have some sexy conversation. I'd also thought of some ways that we might be able to get physical, if she was willing. Did I really expect them to work? Maybe not, but you never know.\n\nAs we drove, we talked about all kinds of things - how she'd settled in to a new part of the country, her new job, Tom's work, how she'd met new people. All of it sounded good. I asked if they'd finished initiating every room of the house, and laughing, she said they'd definitely initiated every room at least once. They had even worked on the more unconventional places like the walk-in closet, the 1/2 bath on the first floor, and the patio.\n\nChantelle asked about my sex life, which was pretty OK but mostly vanilla, and I admitted I'd gotten a shower massage of my own. She asked if I was enjoying it, and I admitted that I was, on a regular basis. I reminded her that she had told me that she and her old boyfriend had had a threesome at one point and asked if she'd done the same yet with Tom. She blushed, and said they'd met one friend who they thought might be interested, but they hadn't actually gotten tried to get her in bed yet. She did admit it had led to some pretty good sessions when they talked about her. It all sounded good; Tom was keeping her pretty well satisfied.\n\nShe was staying alone in a hotel room and admitted that she missed Tom, especially the regular sex. (You were telling instead of showing -- see how my edit changed it?)\n\n\"I just have to tell him I'm feeling a little frisky, and I'm going upstairs to take care of it, and he drops everything to help out. But I don't have anyone else to help out here! And I don't even have a shower massage. Mom's house has one, but I can't really go over there just to take a shower.\"\n\nI made appropriate sympathetic noises. \"Too bad, but I guess you're right. You could sneak in, maybe. But you still don't have a vibrator? Even after seeing them at your mom's a while back? You must have gotten one.\"\n\n\"No, really, I still don't. With Tom and the shower massage, I really don't need one. Oh, and by the way, I did figure out how to use that on Tom, and you're right, he likes it.\"\n\n\"Told you so, it's all about the right technique. But back to you, hasn't he ever been out of town this long before? How'd you survive? This is definitely time for a vibrator!\"\n\n\"No, he hasn't. But I just don't even know where I'd get one, even if I decided to.\"\n\nI said, \"Hey, do you remember every time we come down here, we pass that adult store, and we joke about it? It's still there. And you know, they have vibrators.\"\n\n\"They do? How do you know?\"\n\n\"Well, I stopped in and bought some stuff one Valentine's day when I was down here. Just to get something different as a present.\"\n\n\"What did you get? What's it like?\"\n\n\"It's not bad, actually, inside it's not dirty or anything, just racks of magazines and videos, and a section of, uh, 'hardware' around the sides. There were a few other people there when I was in, a few guys, but actually two women came in while I was there too. \"What did you get?\"\n\n\"I was really trying to figure out what the best magazine was, and they were all sealed in plastic. So even though it was weird, the salesperson asked if I needed help, and I figured she should know, so I asked if what I was looking at was really explicit. She said, I think so, but let's check, and she opened it and said she'd just reseal it after. Very nice, kind of nonchalant about the whole thing. Just like any other store.\"\n\n\"And they had vibrators?\"\n\n\"A whole wall of them. They aren't that expensive. You know, I'll even buy you one as a going-away-again present. I'm helpful like that.\"\n\nShe laughed. \"Very thoughtful! Well, I'll think about it.\"\n\n\"OK, but don't think too long, because we'll be driving by it again on the way back.\"\n\nWe proceeded to do our business at the animal store. I joked a couple of times when we found phallic objects like syringes of the right sizes. But it wasn't until we got back in the car that she said, \"OK, I thought about it.\"\n\n\"What?\"\n\n\"That we can stop at that store on the way home.\"\n\nScore. \"Good call. Trust me, you'll be glad you did. \"\n\nWhen we got there, we parked in the back, and walked past a couple of other cars to go in. A few people were inside; a couple looking through some DVDs, a man by the magazine rack, and another man just going into some \"private viewing\" booths in back. There was a nondescript looking woman behind the counter, could have been the same person from a few years before, but I couldn't really tell. We did a slow circuit of the store (it wasn't that big), walking past shelves with lube on them, past a few sexy outfits that I said would probably look really good on her (she posed and fluttered her eyelashes at me), past some BDSM stuff that she gave a good look at, and past a selection of strap-ons. She slowed at these, and she wondered out loud when someone would want them.\n\n\"For two women, or maybe for a threesome. Or you could do your boyfriend with it.\"\n\n\"Hmm, interesting.\" she said, looking thoughtful.\n\nI then pointed at one of the giant size models and said,\n\n\"But not with THAT!\" She laughed and agreed that there were probably ones that would be more fun, rather than just buying size for the sake of size. And with that, we got to the vibrators.\n\nThey had lots, and lots, of vibrators. I gave her a lesson. \"So, you have the realistic ones\" (pointing at the rubberized ones that looked like a realistic cock), \"the big ones\" (more of the 3\" diameter models), \"and more of your standard type.\" These were the regular smooth plastic vibrators we all know and love. \"You also have this 'rabbit' type. I haven't used one of these with anyone, but this part goes inside, and this part is supposed to tickle your clit. Supposedly it's great. I think it was featured on Oprah or something.\"\n\nChatelle burst out laughing, then looked around self-consciously. \"Oprah? No way.\"\n\n\"That's what I read. Like I say, I've never really seen one used.\" I pointed at some with cords. \"But you definitely want battery powered, and waterproof in case you want to take it in the shower.\" She agreed on that.\n\n\"I've always thought the realistic ones were kind of creepy looking,\" I remarked, \"and if you ever think you might play with it with your boyfriend, well, most straight men probably don't want another thing looking like that,\" I pointed to the realistic rubber one, \"anywhere near them. I know I don't.\"\n\n\"So what would you look for to use it with a guy?\"\n\n\"Well, for just kind of playing around, any of these standard ones would work. But if you wanted to do some, uh, anal stuff with him, and he's not used to it, then maybe a little slimmer.\" I pointed to some super slim ones. \"These are really thin, maybe too thin, there's actually no point to it. Kind of just like a vibrating finger, you know? You could probably pretty easily use something like this\" (I pointed to a 3/4\" diameter model) \"and it would be fine. You still need to be gentle, and use lots of lube to make it really slippery, but that's do-able. Now, for you, you could probably go a little bit bigger.\" I pointed to a silver model, waterproof, maybe an inch or more in diameter, and longer than the other one. \"What do you think of this?\"\n\n\"It's a little longer than most guys, at least the ones I know.\"\n\n\"You don't have put the whole thing in, you know. Some has to be sticking out. Besides, you may not want it inside all the time anyway.\"\n\n\"Really? Isn't that the point?\"\n\n\"Kind of, but the vibration is really the point, along with that. On the outside, just holding it there, maybe even with clothes on. Sometimes right on your clit, or all around, or sometimes inside. There are a lot of possibilities.\"\n\n\"And you've tried them all?\"\n\n\"Look, it's not just a solo thing, it's just another sex toy. So yeah, I've used them a few different times, with different people.\"\n\nWe looked at a few more things, including the g-spot vibrators that she thought looked a little weird, and butterfly vibrators just designed to strap around the front. I told her I had heard these were supposed to be really good and intense, but definitely not the traditional vibrator. Finally, she asked me my advice.\n\n\"OK, since I'm buying, and I'm cheap, here's what I would do. I'd get two basic vibrators, one a little bigger and one a little smaller. Like that silver one and this pink one. You can try them, see how big you like, you can use them on Tom, or if you get together with that friend of yours, you'll have a couple of options. And it leaves more to come back for if you really get into it.\"\n\nShe thought for just a second. \"OK, I'm in your hands. That sounds fine, whatever you think.\"\n\nGreat! We grabbed the two vibrators, and I also grabbed a bottle of lube as we paid. Chantelle asked me about it as we left.\n\n\"Do you really think we need that? I've never had a problem with being wet.\"\n\n\"Do you get, uh, wet pretty fast?\"\n\n\"I guess, although I've never done a comparison to anyone. Once I'm going though, I'm good until I'm done!\"\n\n\"Well, think of it as a safety blanket, or if you are in a hurry. But also, if you do end up wanting to use it on Tom, you'll need it. Actually, I suppose it would be 'in' Tom, not just 'on.'\" She laughed.\n\n\"Do you really think I should try that with him?\" We got into the car.\n\n\"Well, does he have any interest? Not all guys like anal, but some do. You said you'd done it with your old boyfriend once, right? Haven't you done it with Tom as part of your housewarming? Or has Tom ever poked around back there, at least? Any clues if he might be interested?\"\n\n\"Well, he used his finger once or twice, and sometimes I do play with his butt a little when I'm going down on him. I like it and he doesn't last long once I start rubbing.\"\n\n\"Then I think it might be worth a try. Start with a finger, see if he likes it, and then you'll know if he's ready for the vibrator sometime later. I have to admit, I like being done with a vibrator that way. Not every time I have sex, but when I'm in the mood.\"\n\n\"I remember you told me about doing that guy in high school. Is it like that?\"\n\n\"I dunno, it's not another guy, it's with a girl, and the vibrator is more fun. More comfortable, maybe? Or maybe it's just experience.\"\n\nI had another thought. \"Actually, you might want to try it yourself that way. You remember my old friend I told you about who told me all about her shower massage? I bought her a vibrator too one time. After I got it for her, she'd tell me about using it, including using it anally. I'd ask in the morning if she used her new toy, and she'd say yes, and then I'd ask how she used it, in the front or back, and she always said both. She really liked it. But she was funny - she told me she'd never have anal sex with a guy. She said she never knew why guys always wanted it that way. She just didn't want to. She said it would just be too different from smooth plastic vs. what she thought a real guy would be like. And she really did like the vibrator that way!\"\n\n\"She doesn't know what she missed. But I guess she was happy with the present, at least.\"\n\n\"Yes, she was. One of the most exciting gifts I ever gave. You'll like it too, I'm sure. \"\n\n\"I sure hope so, after all this.\"\n\nWe drove along for a while. Then Chantelle said,\n\n\"You know, I am a little nervous. I've never used this before. What do I need to know?\"\n\nI tried not to laugh at her. \"What's there to know? It vibrates, it's long and thin and smooth and will be slippery... It's going to be pretty self explanatory. But we have some time before we get home, so maybe you should get it out and make sure you know how to use it.\"\n\nShe got the two vibrators out of the bag and took them out of their packaging. Then she turned the dial way up on the first one, and when it buzzed, she jumped and almost dropped it. I laughed.\n\n\"Careful, it might bite!\"\n\n\"Shut up! I just wasn't ready for it.\"\n\n\"Uh huh. Turn it down and try it again.\" She turned the dial a little more slowly. \"Depending on how you feel, you might want it faster, or slower, at different times. You'll need to experiment.\"\n\n\"But... should I just keep it on the whole time? Or only turn it on once it's in? How do most people do it?\"\n\n\"Look, it's not like there's a right answer! And not being a girl, I really don't know. There's not a wrong way, it's whatever feels good. Just wash it when you're done.\" After looking really interested in the store, she still looked dubious. \"You really do seem a little nervous about this though. What's the matter? \"\n\n\"I don't know, it's just different.\"\n\n\"Than your hand? Or someone's fingers? It's the same, just better.\" Then I had an inspiration. If I was going to make a move to do more than fantasize, this had to be the moment to try. \"But, you know, if you are really still worried, maybe I could, um, that is, I'd be happy to try to help.\" I blushed, but tried to put on my cutest grin. \"I could demonstrate, or maybe not exactly demonstrate, but I could help show you how to use it. I'm not trying to move in on Tom, but I know he's away, and I have some experience here, and I could help out, just as a friend. After all, you let me buy it, so it could be like an in-home demonstration. I could help, just clinically, you know. Really, I'd be happy to.\"\n\nI was blushing and my heart was pounding as I stammered out my offer. Chantelle just kind of looked me for a second. Then she got just a small smile and said \"Have you been trying to set me up all this time?\"\n\n\"Oh, God, no, I would never, I mean, we always just talk and stuff, I'd never try to do anything I shouldn't, I know it's a little different, but kind of like friends with benefits, I just thought it would be fun and you were a little worried and stuff...\"\n\nShe burst out laughing. \"It's OK, you goof, I was just yanking your chain. I thought you'd never ask. I'd love your help. I've been sitting here, not saying anything, just figuring you didn't want to cheat.\"\n\nDamn. It was that easy? She was a very special girl.\n\n\"Well it's not really cheating, we're not going to have sex, it's, uh, I'm just helping you learn something you can't get at home. And it's not something I'm doing at home either.\"\n\n\"Teaching about vibrators, you mean?\"\n\n\"Yeah, I'm not running around doing that, I'm covered at home. And you're going to be leaving soon and I won't see you for a really long time. If it's not something I can do at home, doesn't that make it a little different? And I'm just a helpful kind of guy. Like a class. Just kind of a hands-on class.\"\n\n\"Oh, so it's just a student-teacher thing?\"\n\nBetter not make it too clinical. \"Well, OK, you know I like you a lot, we get along really well. And I haven't said it, but I've always thought you were really pretty. I'm really, um, excited, here. I would love to do this. I wouldn't do it with just anyone! There hasn't been a chance for us to ever do anything like this. But this could be really good.\" I wasn't sure if I was pleading, or trying to explain myself. \"But I have to say, student-teacher relations can be very interesting. I'll probably have to give a lot of lessons, and give you a lot of quizzes to see if you pass. I'll need to give you a grade, things like that. So far you have an \"A\" for interest.\"\n\n\"Hmm.\" She thought. \"I never thought I'd look forward to being tested, but it could be fun. OK, it's a deal. We'll have some \"class time\" and you can help me with this.\"\n\nOh, baby.\n\nI asked Chantelle to swing me by my place so I could freshen up. No one was home, so I ran in, changed and showered in record time. I met her back at work in my car, and as we dropped off what we had to there, there was a definite tension to our flirting that hadn't been there before. As we were unloading, when we were out of sight of everyone else, I went out of my way to brush up close to her in tight spaces, and I reached over and gave her a little caress on her cheek a couple of times. She responded with little jiggles back against me (there was no doubt she felt a lump in my pants a couple of times), and with a few shivers. As we were finishing up, I asked her if she thought she was almost ready. She reddened and said, \"I think I'm very ready.\"\n\nWhen we arrived at her room, I tried to figure out just how much role-playing we were going to do with this. \"You know, since my job here is as a teacher, how about we treat your room like my office, at least to start. That way I can teach you everything you need to know and I'll be sure we don't miss anything.\"\n\n\"OK,\" she said. \"How should we start? I could really use a shower.\"\n\n\"That'll work. How about a quick shower, and then report to my classroom for your extra study session.\" I said, gesturing around the room. Pointing toward the bed, I said \"I'll probably be working at my desk over here. I'll get things ready while you're in there. Just wear your towel. Remember that I'm your teacher, though. I might need to ask you some questions, and you'll need to do your best to answer to earn a decent grade.\"\n\n\"Questions?\" she asked.\n\n\"Yes, you know, to teach you, I need to know what you already know. I want to build off where you are already.\n\nI got the room ready while Chantelle went in the bathroom to shower. I drew the curtains, although we had plenty of light to see (I really wanted to see what I was doing), and turned down the bed. I put the vibrators on the side table, along with the bottle of lube, and pulled my \"office chair\" up to the side of my \"desk.\" I kept on my shorts and shirt, but got rid of my shoes and socks. Then I waited.\n\nAfter a minute the shower stopped, and a couple of minutes later Chantelle opened the door and asked \"Are you ready for me now, Mr. Jackson?\"\n\n\"Come on in!\" Chantelle stepped out wearing her towel wrapped around her. \"Hi Chantelle, glad you made it for your study session. It's much easier to answer questions when you can get some individual attention. Here, have a seat at my desk.\" I motioned for her to sit on the bed.\n\n\"So, let me be sure I understand where you are in terms of background for your extra work this afternoon. I understand that you've never used a vibrator before, and you are a little bit nervous about it.\"",
        "\"Yes, Mr. Jackson, I understand that a lot of girls have them, but I've never used one.\"\n\n\"That's just fine. Everyone is a little nervous at times, and I think this will go just fine. You just need a little extra lesson, then you'll be set to keep going with the rest of the class. That's what I'm here for.\" I adjusted my chair and pretended to consult a piece of paper I had in my hands. \"Now, I do need to get some background so we start at the right point. I need to be sure that you know the basics. So, you do know how to masturbate, correct? And, do you do that on a regular basis?\"\n\n\"Yes, if I'm not with my boyfriend, then every day.\"\n\n\"Excellent,\" I said, pretending to mark something on my paper. \"And, do you reach orgasm every time?\"\n\n\"Definitely. After I first learned how, that's never been a problem for me.\"\n\n\"And when did you first learn to have an orgasm?\"\n\n\"Hmm.\" She thought for a second. \"I guess when I was 16?\"\n\n\"OK, so you have, let's see, coming up on 10 years of experience. Do you ever have multiple orgasms? So, if you reach your first, but you keep going with stimulation, are you able to reach a second, or more? Or do you need to take a long break in between?\"\n\n\"I can if I'm in the right mood. Like, maybe 3 in a row?\"\n\n\"Great. And has lubrication ever been an issue for you? Dryness is something that you don't want when you are using a vibrator.\"\n\n\"No, not a problem.\"\n\n\"Great. We have lubricant if we should need it, that's something you should always have handy, just in case.\" I pointed to the bottle on the table.\n\n\"OK, now here's our lesson plan for today. What I'll do is demonstrate how to use these,\" I pointed to the vibrators, \"step by step. Feel free to ask questions at any point, or give guidance about what's making sense to you, or not. We can always repeat part of what we are learning until we get it right.\"\n\nI licked my lips, which were dry from talking about our plans. My hands were trembling a little too. \"Now, our lesson here in the office today is how to reach orgasm with the vibrator. But later you can use it together with a partner, or in conjunction with a hand, or in the shower, or however else you might want to. Now, since you haven't used a vibrator before, do you usually use your hands to masturbate?\" She nodded. \"Some women use one hand, some two, do you have a normal technique, or does it vary?\"\n\n\"A lot of times I use just my left hand, but sometimes I use both.\"\n\n\"OK. Well, as I'm demonstrating, you should feel free to participate. As you get comfortable, I'll give you a chance to use the vibrator too. There's nothing like repeated practice that makes this go more smoothly. So once you are home, you should probably practice, say, at least a few times a week to make sure the lesson sticks. Feel free to practice as often as you like, that's just a guideline.\"\n\nI stood for a minute and motioned for Chantelle to lie down. \"So let's see about getting started here. Please, lie down on the desk, face up, right, just like that. This is the best position for practicing. Are you comfortable? Let me know if you are cold, we have some blankets in case you need them.\" Chantelle got comfortable, her towel covering her from above her breasts and down almost to her knees. I sat down and pulled up my chair next to her so that I was even with her torso.\n\nI leaned over and picked up the larger vibrator, and slid my chair up a little more. \"The first thing we want to do is start with some foreplay. Are your breasts very sensitive? Do you ever touch them when you are masturbating?\"\n\n\"Well, only occasionally when I'm alone, but they are sensitive during sex.\"\n\n\"Then that's where we're going to start. I'm going to pull down your robe a bit here to start the lesson, OK?\" She nodded, biting her lip a little in anticipation. She was a little flushed (I was too). I turned the vibrator on a very low buzz, then reached up and undid the towel at the top. I folded it down, exposing her breasts. I took a deep breath, and took a very good look at her for the first time. Chantelle's areolas were pink and the size of a quarter. Her right nipple was very erect, the other just a little.\n\nLetting out my breath, I brought the vibrator to the underside center of her left breast, saying \"This might be a little cold at first, so don't jump!\" Despite that, she gave a little shiver as I put the vibrator on her breast. I began to run it around her breast, moving it slowly toward the center. I soon reached her erect nipple, and ran the vibrator back and forth over it for a minute.\n\nI shifted the vibrator to the other breast, again starting at the underside and working my way up. Before I even reached it, her left nipple was as erect as the right. \"Now, so that you can compare to normal sex, I'm going to touch you as I use the vibrator. The combination can be much better than either alone.\" And while I continued to run the vibrator over her left nipple, I cupped her other breast and slowly slid my hand up. I took her nipple in my fingers, and rubbed over it and her areola. I switched sides, running the vibrator over her right nipple while I stroked her left breast.\n\nAfter a minute of this, I had one more trick. I switched the vibrator and leaned over and took her right nipple in my mouth. Chantelle let out a breath, and reached out to put her hand behind my head. I licked around her nipple and then kissed across to the other breast. On that one, I licked one side of her nipple while I continued to hold the vibrator to the other side. Then I placed my mouth over that nipple and sucked in hard, pulling it deep into my mouth. I alternated sucking, licking, and vibrating like this for a few more minutes, and then leaned back. Chantelle's upper chest was flushed red, and she looked up at me. \"What do you think?\" I asked as I continued to play the vibrator across her breasts. I could tell that she was fidgeting, her legs moving slightly under the towel.\n\n\"Good.\" she said in a husky voice. \"I like it so far.\"\n\n\"Great. So, are you ready for the next part of the lesson?\"\n\nShe nodded hurriedly. \"Definitely, I'm definitely ready.\"\n\n\"OK. I'm going to gradually work the vibrator down from your breasts. It's going to feel a little different at first, but at least now it's not cold!\"\n\nI continued to play with her nipple with my left hand while I began to work the vibrator down her body. I made half-circles under her breasts, then strokes towards her belly. With each stroke down, I let the vibrator push her towel out of the way on each side, like opening a robe. Reaching the bottom of her rib cage, I made circles on her belly. One side of the towel fell away, with the other side lying across her lap, just barely concealing her now. I thought I could smell her arousal as I continued to drift the vibrator up and down and around, gradually reaching further. Maybe it was my imagination. But I'd find out soon enough, the way things looked.\n\nI lifted the vibrator up off her skin and ran it over her on top of the towel for a minute, down over her pubic area and the one thigh that was covered through the towel. Bringing it back up, I slid it under the last corner of the towel that was still covering her. I slowly pulled the towel away to reveal a small strip of pubic hair as I ran the vibrator over her skin again, down to the top of her hair. She was neatly trimmed, with hair running to the top of her slit. It looked like she was shaved further down, and I continued to look as I ran the vibrator over her hair, then out to the sides and down one thigh. I ran it back up the other leg, getting very close to her lips but not touching, and then down her thigh again. Her legs were still mostly together, and I pressed the vibrator slightly out to encourage them to open.\n\nAs she moved them a little wider, I ran the vibrator up her inner thighs, and finally over the sides of her lips. Her lips were puffy and a little red, with her inner lips peeking out. I thought I could see moisture glistening in her center, and I could definitely smell her scent now. I repeated this a few times, making a circle on the sides of her lips, on her thighs, and over the top. I gradually brought my other hand down over her belly to the top of her bikini line.\n\nStill avoiding her clit, I placed the length of the vibrator against the length of her slit. Chantelle had been breathing in little gasps through much of this, but now I pressed a little, and she moaned softly. I started sliding the vibrator up and down, and angling it inward. This had the effect of starting to open her lips, getting the vibrator slick with her juices, and positioning the head right at her entrance.\n\nAs I ran the vibrator up and down, I began to gently rub with my other hand at the top of her slit. I slipped two fingers down her lips to the opening of her pussy, sliding them between her lips to discover that she was not just wet, but was soaking. Her clit peeked out and I ran my wet fingers back up to rub around it, bringing it all the way out of its sheathe. The vibrator was also getting slippery just from sliding between her lips, and when I finally brought the tip of it up and placed it by her clit, she moaned \"Oh, God\" as I held it there.\n\nAfter a few more strokes up and down, I returned the vibrator to an angle where I could begin sliding it into her. I stroked her clit with the wet fingers of my left hand, and gradually worked the vibrator into her pussy with my right, stroking in and out, getting deeper each time. Not knowing quite what she liked, I didn't want to go too deep too fast, so I focused on keeping the vibrator shallow while getting it well-lubricated. After several strokes in, I pulled it out, and she first moaned \"no\" but then gave another husky \"Oh...\" when I ran it back up to clit.\n\nAs I moved the vibrator around, rubbing it over her clit along with my fingers, her breathing was becoming faster and faster. Could she be that close already? I wasn't ready for her to come yet. Keeping my fingers rubbing her clit, I ran the vibrator back up to her breasts, running over her nipples before returning to her wet opening. Dipping it in, I again ran it up her, repeating the process and getting her nipples wet with her own juices. After a final time, as I ran the vibrator back down to her pussy, I watched her bring one hand to her left breast, with her eyes half-lidded, and she rubbed her juices in and pinched her own nipple. Beautiful.\n\nI began the sliding the vibrator deeper into her than I had before. Chantelle's eyes were closed now, but flickered open and she gasped as I pushed it in the last few inches. I began to move it in and out with deep strokes now, before pulling it out to lay it back against her clit. I rubbed over her whole slit, down almost as far as her anus. I pressed it back harder against her clit, and Chantelle began moaning more urgently, both hands now grasping her breasts, bucking her hips against it. Sensing that now was the time, I took the vibrator off her clit and slipped it back into her as deep as it would go. \"Uh!\" she grunted, and \"yesss...\" I then leaned close to her ear and whispered \"One of the great things about a vibrator is that you can use it with someone as well as alone. Let me just show you one of the ways this can work with two.\"\n\nWith that, I moved my body down between her legs and put my mouth on her, keeping the vibrator moving in and out of her vagina. I sucked her clit between my lips and licked over it, lapping and then sucking for all I was worth. With my tongue on her clit, and the vibrator pushing into her, she pulled up her legs and then pulled my head in tight. In what seemed like just a few seconds, she exploded. Her thighs came together around my head and she convulsed as I continued to lick and hold the vibrator inside her.\n\nShe shuddered three or four times, thrashing around, until she finally released my head from her grip, pushing me away saying \"Oh, no more, stop, stop.\" I kept my head down, giving her just an occasional gentle lick, while she recovered. Each lick elicited a new shiver, and I turned the vibrator low, but kept it inside her. Chantelle seemed content to lay there in bliss for a few minutes.\n\nI didn't want to stop if she was really going to be able to go again soon. Keeping my hand on the vibrator to hold it buzzing gently in her, I crept up next to her to lay my head next to hers. \"So what do you think?\" I asked.\n\n\"That was worth the wait,\" she husked, still catching her breath. \"And to think I can have that anytime!\"\n\n\"Yes, you can. You have lots of experimenting to do while you practice your lessons at home. The mechanics won't be exactly the same without a partner, but close enough.\"\n\nLying on my side, I nuzzled down her neck as she lay there, eventually reaching her breast again. Her nipples had softened, but her upper chest was still red. I gave wide licks up the side of her breast, then from the underside up, ending at her areola. I continued to lick around her breast, moving towards the nipple, but never quite getting there. She put one hand behind my head and caressed the back of my head, encouraging me towards the center of her breast. Eventually, I placed my mouth over her whole areola and sucked gently, and I felt her nipple harden again. I went to move to the other breast, and was surprised to find that her other hand was there already, with her fingers playing gently with her other erect nipple. It had only been 5 minutes, and it looked like she was ready for a bit more stimulation again.\n\n\"I have a better way for you to use that hand. The next part of the lesson should be to learn to do this yourself.\" I looked up at her from her breast. I took my hand off the vibrator, which I was still holding inside her as it purred gently, and took her hand from her breast. Guiding it down her body, I brought it to the base of the vibrator. \"Here, you be in charge. You can adjust the speed, and decide how to move it around.\"\n\nWith Chantelle's fingers under mine, we grasped the base of the vibrator and I turned it up a little. She continued turning it up, and it suddenly jumped into high gear. Chantelle gave a little squeak before she turned it back down. Then, still holding her hand, I pulled the vibrator most of the way out before pushing it back in. She got the idea, and began working it in and out. I took my hand off of hers, but kept it right there so that I could feel the vibrator sliding in and out. I reached up with my index finger and slowly rubbed her clit before returning it to the edge of her vagina.\n\nGod, this is awesome, don't let it be a dream. My cock was as hard as it had ever been in my shorts - every time we reached some new activity it seemed to grow - but I wasn't about to spoil the scene by turning my attention to it. Hopefully, waiting would eventually have its rewards.\n\nWith my hand still right on her pussy, after a few minutes Chantelle pulled the vibrator out of her and slid it up to her clit. She moved it around, finding a good spot, and when she did she gave a sigh and just held it there. Taking advantage of her vacant pussy, I slid two fingers into her. She was still very wet. I moved my fingers around until they were very wet too, then pulled them out and brought them up to her breasts. Entranced by feeling her working the vibrator in her pussy, I had neglected her breasts, but now I used my wet fingers to play with her nipples again. Her pungent scent, somehow different since her first orgasm, hit both of us as I smeared her juices on her nipple. I brought my mouth to her breast and licked it clean.\n\n\"Mmm, delicious.\" I whispered, and winked up at her. She just kind of looked at me, her eyes a little glazed and her attention obviously elsewhere, as she worked the vibrator in and around her pussy. I repeated my trip south once more, sliding my fingers into her, and bringing them back up. This time, I brought my fingers directly to my lips as I looked into her eyes, and then, daringly, brought one finger to her lips. She sucked it into her mouth, swirling her tongue around it. \"You are so turned on.\" She nodded jerkily, still concentrating on moving the vibrator around and getting those sensations from her pussy and clit.\n\nWanting to watch her, and to let her have both hands free, I sat up and then slid a little further down next to her so that she wasn't holding me. Things had gotten quite warm, so I pulled my shirt off, sitting against her just in my shorts. I leaned over, right next to her hips, where I could watch her fingers and vibrator on her pussy. Chantelle's hand, no longer trapped under me, drifted to her breast and she rubbed over it, moving to the center to pinch her nipple. She then slid her hand down over her belly, past her belly button, and through her landing strip. She rubbed around her clit and then moved even further down to get her fingers wet. I was close enough to watch her dip into her vagina and then pull a wet finger back up to rub over her clit. With her other hand, she slid the vibrator back into her. After a few strokes, she pulled the vibrator out again and laid it on her clit while her other hand went back to her vagina. I could again see her fingers sliding in and her hands alternately pushing the vibrator on her clit and moving it nearby. Her breath started coming faster and faster as she held the vibrator deep inside for a minute while she rubbed her fingers on herself, and then pulled it out to hold the slippery object tight against the length of her slit.\n\nI had leaned in as I watching, unable to resist getting the best view I could of this very personal act. Chantelle wasn't just masturbating, but was masturbating with a new toy and with my face just a foot away from her wet pussy. Her scent was intoxicating, but I resisted the urge to taste her again, concentrating instead on just memorizing every detail of what I was seeing. Her very wet slit was deep red, her lips were fully engorged and puffy, and her clit was visible under her fingers and the vibrator as she rubbed it. I did reach back up to play with one breast as I kept my eyes on the vibrator. Her nipple was rock hard as I played with it, while she was turning and moving the vibrator all over to get different sensations.\n\nLooking up at Chantelle's face, her eyes were closed again as the rubbed her fingers and the vibrator around her clit. With her breath still getting faster and faster, she slid the vibrator into her wet pussy one last time, as deep as before, and turned it up as high as it would go. She held it there with her left hand, her right hand covering her clit and her fingers reaching down to where the vibrator was in her, transferring the vibrations from it to her hand. She was making little \"ah - hnh - hnh - huh\" noises in her throat and nose, almost squeaking, as her orgasm built. Her hand became frantic on her clit, and then she spasmed, her legs straightening, then contracting, as she burst out \"Oh! Oh - oooh.\" Her legs clenched around her hands and the vibrator, and she rolled onto her side as she thrashed, bringing her leg over to capture her hands tight on her pussy. Holding her hands still there, she slowed, giving a shudder, clenching, and giving a shudder again, spasming several times.\n\nFinally, Chantelle loosened up her legs just enough to begin pulling her hand with the vibrator out. As it slid out of her pussy, she gave one more shudder and moan, and then let it fall to the bed. Her other hand was still in the crack of her legs, and I could just see her fingers were pressed against her mound. I reached out and took the vibrator, turning it off. I put my hand on her hip, rubbing very gently, on her hip, thigh, and the side of her buttock. Gradually, her breathing slowed, and she pulled her hand from between her legs.\n\n\"Wow,\" I said. \"That was beautiful.\"\n\nChantelle looked at me, and at her hand, stretching her sticky fingers.",
        "\"How was it for you?\" I asked, and she burst out laughing.\n\n\"It was awesome. I DEFINITELY like the toy you bought me!\"\n\n\"It sure looked good for you from here.\"\n\nLooking sheepish, Chantelle took in the fact that my head was still just a couple of feet from her pussy. \"You probably had a quite a good look.\"\n\n\"I did, and like I said, it was beautiful!\"\n\n\"Something I didn't know about you - do you like to watch?\"\n\n\"Yeah, I do. I love the way you feel and look, and I think you love it too, so I love to watch you doing it.\"\n\nI thought for a second. \"I really haven't gotten to watch a girl that many times. It was all I could do not to dive in. But it was really important for the lesson.\" I grinned. \"Remember, we are having lessons here, you know.\"\n\nShe sighed. \"I think we're a little past the lesson now. But I'm glad we had it!\"\n\n\"Still nervous? Think you'll have any trouble remembering what to do for homework when I'm not here?\"\n\n\"No, I don't think so. Once you got me going, no problem.\"\n\n\"I told you! And I'm sure you'll be able to have some good thoughts to get you going again.\"\n\nShe laughed again. \"I'm sure I will! Did you know that I like to watch too?\"\n\n\"Watch men get off? No, I didn't know.\"\n\n\"Mostly men, but women are pretty too. Remember my high school friends?\"\n\n\"Yes.\"\n\n\"I watched them together once. We were hanging out, it was late and we were pretty drunk. I fell asleep. But then I woke up. They'd covered me with a blanket. They must have thought I was totally passed out, because they were going at it on the couch in the same room.\"\n\n\"What were they doing?\"\n\n\"They were on the couch in a 69, actually, not quite naked, but enough that I got a good view. I just stayed still and watched.\"\n\n\"Cool!\"\n\n\"Yes it was!\" Chantelle laughed. \"I was happy they'd covered me with a blanket. I got off while they were doing it, watching them. I kept my eyes mostly closed so they wouldn't see me, and they were lost in what they were doing. At one point I thought my one friend kind of looked my way, but I'm not sure, and they didn't stop.\"\n\n\"You didn't go over to get in on the action?\"\n\n\"That would be your fantasy, wouldn't it! I wasn't sure then that I wanted to. And neither one had ever come on to me, so I wasn't sure it would go over well even if I tried.\"\n\n\"Probably smart. At least you got to watch. You like seeing guys too?\"\n\n\"Yeah, you're all so cute when you come; your faces always get so serious just before the end. I've only watched solo a couple of times, though.\"\n\n\"Well maybe you need some other lessons in that, too. Just on 'how to watch.'\"\n\n\"I don't think I'll need a lesson in that!\"\n\n\"We'll see, we'll see. It depends if you need to learn to keep your hands off. Something to work on.\""
    ],
    "authorname": "BlueTang",
    "tags": [
        "vibrators",
        "toys",
        "female masturbation"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/teaching-chantelle-ch-01"
}