{
    "title": "A Gipsy at the Door",
    "pages": [
        "It was way back in the early 1950's, but the memory remains so strong. As it should. Surely no one ever forgets their first sexual experience, whether it be with shame, disappointment or pure joy it has to fix itself into the memory bank. After all those decades, I can still classify that time as a mix of all three, with perhaps the addition of shock and surprise.\n\nIt was summer and I had a long break before taking a place at university, where, I was informed there would be willing girls galore, all longing to experience \"their first stiff cock up them.\" Those were the words of Lenny Canning, who, weeks earlier, told me how he'd had Betty Danton in the long grass in Byker Park.\n\n\"Everybody's had Betty Danton,\" I told him, knowing I should have kept my mouth shut.\n\n\"You haven't.\"\n\nTruth was I had no real experience of any girl, save a quick grope at Jenny Logan's left breast through her woolen cardigan at a party, before she had knocked my hand away.\n\nLenny Canning, I knew would make the most of my ignorance, \"In fact, you've never had it with any girl, have you?\" He never stopped rubbing it in about how 'slow' I was. But it was he who told me how university girls were available, because his brother was there, and he knew. \n\nYou have to remember that this was still a time when the majority of young women believed in keeping it until they were married. The trick seemed to be to find somebody like Betty Danton, a girl who was \"easy\", but for some crazy reason I just feared failure, even with them.\n\nIn those days the only chance a young man without a woman, had of learning about a woman's body was in magazines like 'Health and Efficiency', which somehow got away with showing photographs of bare breasted women being active, but always with their thighs lifted to shield their lower regions. This made Lenny Canning's added taunt, sadly true, when he sneered, \"I'll bet you don't even know that women have a moustache, a bush, down there.\" \n\nSo here came this particular summer, and as I looked forward to the easy days ahead, I was also faced with the prospect of having our two bed-roomed flat to myself for the very first time. My parents had decided to take their first continental holiday, and my mother was nervous of her first experience of flying. But my father had enthused, \"Seven days on the Costa Brava. What could be better? Sun, sand and ssss-\" He deliberately spun it out as my mother nudged him, \"-ssangria!\"\n\nOn the morning they left my mother was full of warnings and advice, \"Don't just live on fish and chips. I've left plenty of food in the fridge. And keep the place tidy. No wild parties.\"\n\n\"And no loose women,\" my father had laughed.\n\n\"Be careful who you open the door to,\" was my mother's final advice.\n\n\"Oh, mother, I'm eighteen years old.\"\n\n\"And he's big enough to look after himself,\" my father added.\n\nFor the first two days I had no bother looking after myself. Late night at the local pubs with some pals, late mornings after. Eating when I felt like it. Going to the pictures, and keeping my eye open for a chance with a girl. I had hopes of losing my cherry before I even got to university. Trouble was, I didn't know how. None of the girls I had tried to get 'into the long grass' would have any of it.\n\nThen came that morning. It was a Wednesday, and there was no sun. I remember that so exactly. I had got out of bed before ten, and that was early for me. In my thin summer pants and an unbuttoned shirt I was down in the kitchen making myself coffee and toast, trying to decide how to spend the day, when there was a knock at the front door.\n\nNot expecting anybody I went through into the front room and peered through the curtains. A figure with a long red and black shawl, that covered her head and reached down over the top half of her body, was standing there.\n\nA gipsy. Of course it was the fortnight of the summer fair, when several caravans and an assortment of stalls and rides were set up in the field just two streets away. At such times we could always expect gipsies calling at the door as they did their rounds selling lucky white heather or clothes pegs. My mother always used to say, \"I'll give them short shrift. One once said she'd put a curse on me.\" She would laugh then and add, \"That was the year you were born. Funny that.\" \n\nMy mother loved her little joke, but now I went to the door, mug of coffee still in my hand, and ready to give this visitor \"short shrift.\" But the moment I opened the door, the world turned around, my breath caught in my throat, my heart pounded inside my chest and the mug shook in my hand.\n\nI had been expecting some old crone. In front of me, framed by the shawl was a young, bright face, with wide green eyes that strayed from my own face and down the opening in my shirt. This was a face, with full moist lips, high cheek bones and such delicate skin, so stunning that it was as though I had never seen a woman before. \n\nThe full lips parted as she said in a voice that, to my befuddled mind made her words sound like a song, \"Tell your fortune for half a crown?\" \n\nHer lips were still parted as the tip of her pink tongue licked lightly over them, and, filling my abject silence, she went on, \"Tell your fortune for a cup of that delicious smelling coffee.\" And she sniffed her delicate little nose in the direction of the mug I held in my trembling hand, \n\n\"Would you like one?\" Was that my own shaky voice speaking out of the stupor I was in?\n\nHer face lit up as she asked, \"Is that okay?\" And that lighting up sent a warm surge into my chest. \n\nI tore my eyes away to glance nervously up and down the street, which appeared to be deserted, but unable to think straight I immediately said, \"Better come through to the kitchen.\"\n\n\"Are you sure?\" she asked but immediately added, \"Thanks,\" and stepped over the threshold.\n\nNo, I wasn't at all sure. A voice in my head screamed to know what the hell I was doing? With my legs feeling as though they belonged to somebody else, I led the way to the kitchen. I waved vaguely at a chair, while thinking, 'My mother will go nuts.' A gipsy, loose in the house! But, this was the only way I could keep that wondrous face in view, even though it had me all a-tremble. \n\nI was all fingers and thumbs as I fumbled with a mug and the coffee preparation, and again her voice wafted around me, \"You don't live here alone, do you?\"\n\nSomehow I managed to stammer where my parents were.\n\n\"I imagine it's lovely there. So hot. No sugar, thank you.\" She had seen me scoop into the bowl with the teaspoon. I turned towards her with the mug, and how could my trembling ever increase? She had sat down at the kitchen table, had shrugged her shawl off over the back of the chair, and what I found myself looking at was nothing less than a pure dream image.\n\nHer hair, cascading to her shoulders, was not black as I had expected but was a light sandy colour. A vivid red blouse seemed to emphasise subtle curves underneath, but with two buttons undone I could see the tempting flesh tones of the beginning of those curves. The table obstructed any view I might have had lower down but I could well imagine a continued line of a very trim figure.\n\n\"Don't you want to give it to me?\"\n\nWas I hearing right? \"I beg your pardon?\" I asked dumbly.\n\n\"The coffee,\" she said, a slight smile playing around those lovely lips. \n\nGod, I needed to get a grip on the situation. \"Oh, sorry,\" I said, placing the mug in front of her. \"I thought gipsies always had black hair.\"\n\n\"I was adopted by the Mantelas when I was a baby. My real parents were killed in a motor accident.\"\n\n\"I'm sorry.\"\n\nShe shrugged, \"I never knew them. The Mantelas have been so good to me. It was good growing up with a travelling fair. They put me through university. This is good coffee,\"\n\nI had sat across the table from her, still slightly bewitched. \"I'm glad you like it. University, you say?\" I couldn't understand how she could be doing this door to door stuff. \"How long ago?\"\n\nShe grinned, \"I'm still there now. Entering my final year at Edinburgh. Doing a relaxing two week stint with the show. My gipsy roots.\"\n\nThat was a quick clarification of her situation, and her final year, that would make her twenty one. Three years older than me, but why did that matter? Managing to relax just a little, I told her I was starting at Loughborough in September. But that gap at the neckline of her blouse kept catching my eye.\n\nA gentle smile played on her lips as she asked what I was studying.\n\n\"Mechanical engineering,\" I told her, \"with some sport.\"\n\n\"Ah, yes,\" she said, and didn't her eyes glance down at my open shirt once more? \"I thought you looked--quite athletic. I'm doing psychology, with French and Spanish.\"\n\nPsychology? The way her green eyes lingered on me I wondered if she could read my mind at that moment as I wondered what it would be like to be kissed by those full lips. But I grappled to hang on to my composure as I observed, \"A lot to cram into a three year course.\"\n\n\"It's a four year course. I'll be an old woman of nearly twenty five when I qualify.\" I voiced my puzzlement at her maths\n\n\"I didn't start until I was twenty,\" She looked away, far away it seemed, before adding,\" A romantic entanglement that-\" She shrugged and her eyes fixed on mine as she pushed her empty mug away, \"Anyway, thanks for the coffee. If you give me your hand I'll do your fortune.\"\n\nNot sure that it mattered that much I uncertainly held out my right hand, and the moment the fingers of her right hand nestled underneath it, keeping my palm upwards, darts of electricity shot up my arm. Those fingers were so smooth so gentle, so alive, my breath quickened.\n\n\"Now just relax.\" she said, as she leaned forward to look down into my palm, before bringing her left hand to hover over it, and for the first time I noticed her long, unpolished finger nails. The next instant one of those nails on her left hand index finger was tracing a line up the centre of my palm, and what had been darts of electricity, became lasers that probed way beyond my arm and were felt deep down low in my belly where the twitch in my cock startled me.\n\nAccompanying the trail of her finger nail she was speaking in lowered tones, \"I don't know your name.\" When I told her she went on, \"Mark's a manly name. Call me Melita. It's from the Spanish. Ah, you have a very long life line. That's good.\" \n\nHer nail changed direction slightly, and she whispered, \"And you are going to be very successful, oh, yes, all very positive.\" Another movement and each trail of that fingernail sent a fresh surge through my body. God, this was just her touch on the palm of my hand. What might it be like if--I buried the thought and watched that face brighten and then darken.\n\nWhen she spoke again there was a surprised tone in her voice, \"Strange I cannot find a trace for your romance line.\" Her green eyes were wide as she looked up into my face, \"Is there no girl friend?\"\n\nWhen I told her that there wasn't, she leaned forward to look more closely, before her finger nail seemed to be scratching at one section of my palm. \"Oh, I'm sorry, Mark, am I reading this correctly? You've never experienced a woman's body?\"\n\nHow had that probing finger nail revealed that worrying fact? Now there was an intensity in her eyes as they fixed on my face Those eyes were so green, and I was sure my face must be so red. Hell, she had discovered my basic immaturity. All I could manage was a despairing shake of my head. \n\nAt this point she gave a little tug on my hand and said, \"This is uncomfortable across your wide table. It's too strained. Could you come round and sit in this chair alongside me?\"\n\nI could, but I was very aware of the pressure that had developed in my pants, and worried she would notice. As I edged around the side of the table I got to see that below a trim waist this woman called Melita was wearing a wide summer skirt of mixed colours. As I took that in I was pretty sure her eyes glanced down to where my pants had to be bulging.\n\nSitting down just a few feet from her so that my knees were almost touching hers, I kept my left hand across m y lap in a vain attempt to disguise my lack of physical control. I was just wondering whether it would be sensible to end this whole business immediately to save me further embarrassment, when she gave a kindly smile, reached for my right hand, and that magical finger nail began to trace once more..\n\nAgain electronic spasms ran through my body. How, from such a small surface area, could this happen? But her face, that smile,even her voice seemed to have alerted my skin to receive messages that my wild imagination fed on.\n\n\"There's no doubt, Mark,\" her voice was low and haunting, \"that your course is set for good fortune.\"\n\nHer eyes came up to hold mine and her brow furrowed as she said, \"But no female experience, that is unacceptable for a handsome man like you.\"\n\nWhy should that bother her? I could only let out a stammering, \"Y-y-es,\" as her hand pulled mine gently towards her.\n\n\"You have kissed girls and women, I hope?\"\n\n\"Of course, \" I said with a positivity I wasn't feeling.\n\n\"Touched a bare female breast?\"\n\nMy God, what was she asking that for? Involuntarily my head shook and my whole arm trembled as she placed her right hand against her blouse front, bringing my fingers to rest on the smooth skin where the buttons were unfastened and the subtle rise of her breasts began. Had she made that move on purpose? I didn't dare let myself think that. Heat filled my face, and a less subtle rise was increasing in my pants, but her next question left little doubt about where this might be leading. .\n\n\"Would you consider kissing me?\"\n\nBreath shuddered in my throat. Raw anxiety filled my mind. Was I supposed to act with confidence? Was she just teasing me, seeing how inept I was? Or had she just simply read my mind? Whichever it was, lying about it seemed pointless.\n\n\"That might be nice,\" I mumbled. God, how dumb did that sound?\n\n\"Then move closer,\" she whispered, leaning forward herself.\n\nMy fingers were trembling against the warm skin of her upper chest, and the moment our lips touched, her hand released mine for just a second, made some vague movement and returned to grip my wrist. As my mouth relished the sweet softness of her lips, they parted slightly and her tongue probed to set my whole mouth tingling. \n\nSuch warm, sweet moistness, but at the same moment the hand gripping my wrist dragged my heated fingers under her blouse to slide over the incredible smoothness of her left breast. She guided my fingers over a firm nipple, before releasing my hand , and some instinct beyond my own experience had my hand closing completely over that glorious globe. I was touching a real live breast! \n\nMy tongue, as though already trained, wrestled madly with hers as my mouth became an oven of pulsing heat. All incredibly sensuous apart from the discomfort of my imprisoned erection\n\nMelita broke the kiss, and I had a moment of disappointment, but when she drew back her head I could see immediately that this break was only temporary. The expression on her face had completely changed. From that fresh openness, her lustrous green eyes were clouded as they looked at me, her lips were parted , and when she spoke her voice no longer tinkled. It had become so husky, it was almost a growl as she grunted,.\"You have a lovely touch. Finger my nipple, rub it. Oh, yes, just like that.\"\n\nCrazily, I almost had a sense of power as I drew my fingers together on that hard little bud, and I watched her face appear to melt, eyes closed, mouth agape, brow furrowed and pink tongue fluttering at her upper lip.\n\nMelita's knee pushed along my inner thigh as she leaned forward, the constriction of my eagerly swollen cock became real pain. I could not recall ever having such an erection.\n\nHer face came close to mine and I anticipated another kiss, but, with her eyelids lowered, her warm breath on my face, and the spicy scent of her storming into my head, she whispered huskily, \"I like how I'm feeling with you, Mark. Would you like to learn more about a woman's body?\"\n\nHer words were so startling that despite what had happened up to this point, I could not let myself believe she would go further. One part of my brain was telling me to refuse, I wasn't ready for this. I would be like a blind man in a garden of delights. She could end up laughing at my ineptitude. At the same time, a crazed imp in my head was screaming, \"Not ready? With an erection like that? Go on, man, grasp this nettle of sexual knowledge, squeeze out the sting, make yourself ready for the promised joys of university.\"\n\nMy doubts made my broken responses sound as though I was a retard, \"I don't\u2014Can we-? It'll be-\" Yet even while I was struggling with an answer, her left hand had trailed up my thigh, and was suddenly resting on my bulging pants. That touch had me jerking, and a gasping croak escaped my lips, so she was able to answer her own question. \n\n\"Oh, you would, wouldn't you?\" A sensuous smile was lighting her, now, lust-filled face. \"Is there anywhere a bit more comfortable?\"\n\nWe both stood up, facing each other, and I immediately saw that she had, somehow unbuttoned all the buttons on her blouse, so it hung like a curtain tempting to be opened to reveal the already half visible twin mounds. My breathing had never been relaxed, now I felt I was gasping for air. Melita moved in close, saying, \"You hesitate?\" Putting her arms around me, she ground her lower belly against my bulge.\n\nShe was about six inches shorter than me, and her next instruction surprised me. \"Bend your knees slightly. \" I did as I was told, and immediately knew what she was doing as my bulge pressed up between her parted thighs, and the sensation of that was hardly dulled by the thinness of her skirt.\n\nShe ground against me and sighed, \"That's only the beginning.\"\n\nWith the gap in my open shirt, against the gap in her blouse I was getting, apart from the hint of what lay between her thighs, the sensation of how amazing skin against skin might be. There could be little more resistance as my strained voice gasped, \"My bedroom. My bed.\" \n\nShe released me and said, \"Good. Lead the way.\" But as I half turned to move to my bedroom, she gripped my arm to hold me back. I looked again into the promise in those green eyes and that unbuttoned blouse, as she told me, \"Mark, before we go ahead, I want you to know this kind of action is not normal for me. After near four years in university I have only had three brief, less than satisfying, liaisons. So I'm probably in need of this as much as you are. Understand?\"\n\nI understood but at that moment I wouldn't have cared if she was the biggest whore in the world. As I nodded my head and turned away, I saw her reach towards the roll of paper towels on the bench. Next instant I was pushing open my bedroom door, and hurrying to the window to draw the curtains, not that people on the street would be likely to see through my mother's essential netting.\n\nWhen I turned to face her, my heart, already on a higher beat, pounded like some mad thing. Between the kitchen and my bedroom she had slid out of the red blouse, and under her lasciviously smiling face, her two perfectly formed breasts pointed pink nipples directly at me.\n\nBefore I could drink it all in she had moved in close, whispering, \"You are overdressed.\" Her two hands came up and with a flourish she pushed my shirt off my shoulders. Then those exquisite breasts were pressed against my bare chest, and I discovered how right I had been in anticipating the pleasure of skin against skin, as our lips and tongues went into a repeat overture.\n\nHer hands roamed over my back, and I explored up and down hers, heaving at the circling of her belly against my bulge. Then she broke the kiss to move her lips to nuzzle close to my ear as she murmured, \"If you just let your hands push under the waist band, my skirt is elasticated. It should go down quite easily.\"",
        "The invitation alone was stimulating, so the action of stripping off her remaining clothing was a gift to add to my so highly charged libido. In pushing under the waistband and down my open palms discovered the edge of her panties, and again she broke our kiss to hiss, \"Yes, yes, take them too.\" It just got better and better.\n\nNow my hands were basking over the glories of her rounded buttocks. I could have allowed them to play there forever, such silkiness, such curves, but she gave a little wriggle, as skirt and panties fell away to the floor.\n\nImmediately she took a couple of steps away from me, and struck such a sensuous pose, saying, \"Like what you see?\"\n\nI drew in a deep breath. We had been strangers less than an hour ago and there she was completely naked, all subtle curves, as she swayed her hips in a teasing dance. From head to toe she was perfect, shoulders, breasts, belly, thighs, and that patch of hair, her 'moustache', was not a triangle as I had read it could be. It was more of an oval shape, and only a slightly darker tawny shade than the hair on her head.\n\nThe total image had my blood surging through my veins, bringing a pounding in my head, in my chest, and in my groin. God, if I couldn't perform with this kind of stimulus, I never would? Would I?\n\nShe swayed towards me, and I feared I was about to find out. \"I think we should free that poor creature you have locked in there.\" Her hands reached for my belt buckle, and now my skin changed from heated to chilled. I had just viewed a willingly naked woman for the first time, and it had been thrilling. But another first was only seconds away, and it was terrifying me. \n\nNo woman had ever set eyes on my erect penis!\n\nWith alarming speed Melita had my belt undone and my pants tumbling to the floor. I could see the playful smile on her face as she bent to pull down my boxer shorts. Oh, God, the touch of her hands on my bare hips, as the shorts snagged on an obvious obstruction.\n\nA further push and boxers dropped away and my erect cock appeared to leap out right under her nose. My embarrassed gasp must have sounded like a duet with Melita's gasp of approval.\n\n\"Jesus, Mark, that is magnificent.\" And as I stood transfixed, her hands wrapped around it, and she stooped to place her lips on the bulbous purple head of my so delicate throbbing cock.\n\nKissed and stroked! In just a few minutes I had fondled a bare breast, played with a nipple, and gazed at a totally naked delectable woman. Now this, as her fingers and lips lightly caressing my bulging tip. It was all too much for my virgin cock. In despair, I knew what was going to happen. A dam burst deep inside me, and I groaned as the surge poured through my untrained cock. With a mixture of anguish and release, I looked down to see the first spurts shoot whitely up Melita's arm.\n\nSwiftly she was reaching to where her blouse lay and from there she produced a bundle of kitchen paper, which she clasped loosely over my spouting end. \"Just as I expected.\" she murmured.\n\nGod, she had thought ahead. Had prepared for this debacle. I just wanted the ground to open under my feet. Even though Melita looked completely unperturbed, I had to groan, \"Oh, I'm sorry, so sorry.\"\n\n\"Don't be,\" she said quietly as she wiped her arm. \"How many women have stroked you there?\"\n\n\"None.\"\n\n\"Exactly. And I'll wager that ninety per cent of men touched for the first time have exactly that result.\" She cast the towel into my waste bin. \n\nUnable to shake off the despair that had come over me since my ill-timed ejaculation, I mumbled, \"But I won't be able to--\"\n\nMelita held up her hand to silence me, as she asked, \"What was our reason for coming through to your bedroom?\"\n\nMy mind was still in no controlled state to think that far back, \"To do it?\" I asked lamely.\n\nHer smile was kindly as she took my hands and drew me close, skin on skin, and my limp cock, thankfully, out of her view. \"Well, that may yet be the outcome. But I asked if you wanted-\"\n\nIt was as though having her warm breast feathering against my chest suddenly restored my memory, quickly I butted in, \"To learn about a woman's body.\"\n\n\"Exactly,\" she said, and drawing away from me she clambered up onto the bed as she added,\"That tool of yours will be redundant, while you become my stimulus.\"\n\nSaying that she lay back flat on the bed, her thighs slightly parted, and was that the beginning of a crack I could see amid the bush of hair down there? I stood there staring at this image that blessed the blue counterpane of my very own bed. \n\n\"Aren't you going to kiss me?\" Melita asked, and as I climbed quickly alongside her, I was sure I heard her add, \"Everywhere?\"\n\nI had a degree of confidence as our lips came together and our tongues meshed and fought. God, that was so naturally good. My left arm lay behind her head while my right snuggled into the concavity of her waistline. I was very aware of her hands stroking up and down my back and over my buttocks.\n\nMelita broke our mouth tingling kiss to whisper, \"Stroke my shoulders, and down onto my breasts.\"\n\nIn moving my right hand from her waist it became breast before shoulders, but each was an exquisite sensation. Tracing the curve of her shoulders was dream-like, but moving back over those breasts, both breasts this time, was a pure joy. They were so soft yet so firm and silky. As she had advised me earlier, I finger-tipped her nipples, always being as gentle as I could.\n\nFor a second her tongue felt to spread and fill my mouth before she broke the kiss and, on a heavy sigh, she whispered,\"Kiss my nipples, Mark. Tongue, lips and teeth.\"\n\nTeeth? What did that mean? But the notion of running my mouth and tongue over the surfaces my fingers were now possessing excited me so much that I was sure that in my groin there was an awakening twitch. With a final glance into the depths of those hopeful green eyes, my lips parted slightly so that I traced lips and tongue-tip over each luscious orb. Instinct rather than any skill had my mouth moving in a slowly decreasing circle around her left bosom, until my tongue centred on caressing that nipple.\n\n\"Suck on it, Mark,\" came a rather strained instruction. As soon as I was carrying out that order, drawing her nipple into my mouth her voice hissed again, \"Oh, that's so\u2014so good.\"\n\nMy groin made an added twitch from just knowing that I could actually give her pleasure in doing this. Her fingernails were trailing a magical scoring very gently up and down my back and buttocks, as she sighed, \"Your teeth, Mark. Scratch each nipple gently with your teeth. That's it,-oh, yesss-\" And her voice trailed away in another blissful sigh, and, without doubt, I felt my excitement increasing.\n\nShe moaned gently, and it made me feel like the world's greatest lover, as she murmured her next instruction, \"Don't stop what you're doing, but rub your hand over my belly.\"\n\nMy hand had been stroking the under-slope of her breasts, while my mouth did the main work, but now I allowed my palm to stroke over the flatness of her belly, and even before her next instruction came, I guessed I was heading towards what had always been, in my mind, forbidden territory. \"Run your fingers through my bush.\" Her voice came to me as though she was short of breath, as my fingers roamed in that near wonderland of tight hair that would lead to\u2014God, would I dare to go there? \n\nOut of the corner of my eye I saw her knees rise slightly as her thighs parted, and her next instruction was not the one I had expected. \"Fingers along my inner thigh, Mark. You've really got me going.\"\n\nMy hand reluctantly left her bush, and next moment I was experiencing the most incredible smoothness of her inner thigh. I thought her breasts and belly had been silky, then this area of her body was so exquisite to the touch that it was to be a source of pleasure to me with so many women and for the rest of my life.\n\nBut that |I didn't know then, I only knew that her skin was an electric charge, and my fingers moved lavishly up and down her thigh. I was greatly aware that on the upward stroke I was coming fascinatingly close to that area of a woman that I had only read about, or heard boasting stories about. \n\n\"Oh, Mark, you have to feel me now.\" It sounded like she was having difficulty speaking as she reached down for my hand and placed it so deliberately on the point in her bush where her thighs parted. \"Find my crevice, just a movement--Ah, oh yes, that's it.\"\n\nI had simply, gingerly slid my fingers downwards and had immediately encountered a split. Another little nudge and there was moistness. \"Yes, I'm ready. Can you tell?\"\n\nAll I could do, as my fingers tingled where they touched, was stupidly nod my head as I became aware of my stiffened cock pressing against her leg. \"Further in. My little nub. My clit.\"\n\nAgain I had heard this name, and knew it was important, and hard to find, I had been told. In Melita's case it wasn't hard to find at all. Just a short way into her moistness it jutted like a mini erection, and the moment I touched it, Melita's whole body tensed and her nails dug more deeply into my back.\n\nWith what was a near squeal she cried , \"Explore me, Mark. Search me out.\"\n\nI needed no encouragement now. My erection was almost up to full scale again, and Melita was rubbing her thigh against it. I wanted to warn her, but I became too busy in trailing through the deep, warm moisture between those magical lips. But where was it? Where was the promised entry hole. In a way, I was surprised how far I had to probe back through her eager wetness before my fingers suddenly sank into her deep passage. \n\nDesperately excited, worrying about my staying power as my erection pulsed against her thigh, and so aware of her gasping breaths, I allowed one finger to poke into her secret place as deeply as I could. The walls were hot and wet and pulsed on my finger, but then she was grabbing at me, and screaming, \"Get it into me. Do me. Fuck me--now. Quick\u2014oh, God quick.\"\n\nFrantically one of her hands was pulling me upwards while the other grabbed for my throbbing cock. As I moved up towards her face, I felt her fingers close around it and I gasped, \" No, Melita, I'll--\"\n\nHer gasps matched mine as she said, \"No you won't\u2014not before-\" And I sensed her placing my penis head right into her entry, as her body jerked at it \"Push\u2014push deep -Oh, God yes.\"\n\nMy rampant cock was at last gliding hard and fast up where her vaginal muscles heaved at it like the coils of a spring and her squeals of delight were almost as intoxicating as this most physical act. My penis head struck somewhere deep inside her and I was able to draw back and thrust again. My God, I was fucking a woman--I was really doing it, at last.\n\nMy attempt at a third thrust, together with the demanding heaving of her hips and her ecstatic cries were just too much. As all tension was released inside me I managed a series of deep hard thrusts to cascade my seed deep into her. My body jerked with each expulsion.\n\nMelita recognised what was happening and she sighed, \"Ooh, yes, Mark, cum inside me. I'm safe.\"\n\nNo sooner had the last drop been expelled than my penis collapsed like a pricked balloon, and slid out of Melita's channel. \"Is he dead?\" she asked lightly, as her fingers poked briefly at my wet flaccid cock.\n\n\"Totally\"\n\n\"He'll soon recover.\" Her eyes were bright as she looked up at me and I leaned forward to kiss her gently on the lips. When we broke apart she said, \"I'm sorry about that.\"\n\nWhat a strange thing for her to say. \"How could you be sorry? Was it no good for you?\"\n\n\"Quite the opposite. I haven't had an orgasm like that --well, for a very long time, and haven't had a man inside me for quite a few months. I just wasn't aware how much I wanted it. When I saw you I became greedy.\"\n\nI could hardly come to terms with what she was telling me. \"But you were keeping me on the right track.\"\n\n\"Maybe to satisfy my own needs,\" she said, and reached up to place a large moist kiss on my mouth. \"Next time will be even better.\"\n\nNext time? Did she mean--? \"We can do it again?\"\n\nHer smile was teasing as she said, \"Only if you have the strength. I can take what you've got down there all day,\" Her eyes were wide and honest as she stared up at me, \"Mark, I've been f-- had sex-\" she paused, as though making a count, \"-yes, eight times. And none have matched the length that you've got there. For a first time, it makes me eager for more.\"\n\nI had to smile at her caution with the language she used. She had been unable to keep a check on it at the height of her passion. But what she had just said might have made my ego expand but, I told myself, maybe she was just being kind. Without even thinking about it I lay a hand over her left breast, an almost natural action, which would have been unthinkable just over an hour ago. \n\n\"You like my breasts, don't you? That's good,\" she said, and again there was a teasing in her voice and on her face, before she added, \"Could I take a shower?\"\n\n\"We don't have a shower, only a bath.\"\n\nShe shrugged, \"Okay, anything to freshen my body for you.\"\n\nFreshen her body for me? What did that mean? But I sat up and asked, \"Should I run it for you? It's the door straight across from this one.\"\n\n\"That would be nice.\"\n\nWithin three minutes I had the bath filling up and found two large towels in the airing cupboard. I was about to call her when she suddenly pressed against my buttocks, and I could feel the tickle of her bush'\n\n\"All set,\" I told her.\n\n\"Care to share?\" she asked, with a devilish glint in those green eyes. I might have been the shy boy earlier but she was swiftly guiding me through that thankless stage, and without any delay we were settled together in the warm water. Holy hell, I was in the bath with a naked lady, her bare back against my chest, her hands on my thighs. All so very intimate.\n\nEven more intimate and arousing was the application of my well soaped hands passing around her to wash lavishly over her breasts and belly.\n\n\"Down lower,\" she said quietly, turning her head back to receive my warm kiss, before adding, \"Give a thorough rub. You have more work to do there when we're dry.\" She giggled, \"Although I'm never going to be totally dry everywhere while you're stroking me.\"\n\nLavishing in this new world of sensuality, I did as ordered and my fingers slid so easily between her thighs. I knew my confidence was rising when I trailed them directly to her opening, and tested two fingers up inside her as far as my hand would permit. Her sharp intake of breath told me I'd had the desired effect.\n\n\"Hell, aren't you a quick learner,\" she hissed. It was a statement rather than a question, and very quickly she was adding, giving a little wriggle, \"I do believe I'm being prodded by a big stick. Where has that come from?\"\n\nHer hand felt behind her and closed around my erect cock, \"I thought we left him dying in the bedroom. Anyway, it's my turn now.\" Twisting and turning, raising her legs over mine so that briefly I had a lovely view of the pink of her that I had been so recently fingering, she managed to end up facing me\n\nMileta began soaping me from shoulders, over my chest, down onto my belly. Then she leaned back on her arms and stared down, \"Oh, look,\" she declared cheerily, \"it's up periscope.\"\n\nThe purple head of my erect cock was peeping through the surface of the water. Despite feeling just a little discomfited, I had to chuckle. Melita clearly shared my amusement as she said, \"That little eye is looking straight at me. Am I in danger?\"\n\n\"Am I?\"\n\n\"Most definitely,\" she laughed. \"Let's get dried.\" And before I could argue she was up and reaching for the towels, as I watched the streams of water spraying and tracking down her fantastic body.\n\n\"Come on,\" she said, pushing one towel towards me as I slowly rose from the water. Then we were quickly dabbing at each other with the towels, paying an exaggerated time on our respective genitalia, where fingers were so ready to avoid the towels. The sensations were pure magic. For me it was like being locked in an incredible dream from which I did not want to wake up.\n\nMileta's next sudden move was a complete surprise. Barely dry, she hurried out of the bathroom, and across to my bedroom, calling over her shoulder, \"Come on, slowcoach.\"\n\nIf you get an instruction like that from a naked lady there is only one thing to do-follow! Walking into the bedroom, with my erection bobbing in front of me like a recently used diving board, I found her seated on the side of the bed, thighs parted, arms held out.\n\nWith a sly smile on her face, she said, \"Better bring that wayward thing over here.\"\n\nUncertain of what might happen next, but sure that I was longing to be thrusting inside her just like before, I stood hesitantly in front of her. She leaned forward and said, \"Ah, well, if you're going to wave that in my face.\" Her hand closed around my solid cock and at the same time her tongue licked around the smooth purple head.\n\nRemembering my shame the last time we had been in this position, I tried to ease back, \"I might--\" I started to warn.\n\n\"Oh, no you won't,\" Melita told me, her voice a near growl. Her fingers tightened on the base of my cock, and I watched in a mix of dismay and wonder as she opened her mouth wide so I could see my erection lying snug along her tongue. Remember this was in a time before the term 'blow-job' had become common currency. I had heard talk about 'cock-sucking' and it sounded dirty, but I wasn't sure if people actually did it.\n\nBriefly her challenging green eyes looked up at me before her mouth closed around my cock, and her head pushed forward so I could relish the delight of being propelled right to the back of her throat. \n\nThe way her cheeks went concave and the sensations it engendered around my cock and all through my quivering body I knew she was actually, genuinely sucking. So it was true and it felt so different, with the movement of her tongue, the warm moist pressures she was able to apply, it was pure ecstasy. I realised that Melita's fingers had remained tight around my shaft and that was why I wasn't spouting into her mouth. Wouldn't that have been horrific for her?\n\nIn the grip of such elation I had dropped my hands onto her bare thighs, and the thought had occurred that I might reciprocate this joy. How easy might it be to find her clit again? I allowed my right hand to slide between her parted thighs and into her welcoming wetlands. Almost instantly my fingers found her clit, jutting, waiting for me like an old friend.\n\nAt my touch Melita's lips seemed to flutter around my cock and a grunting gasp escaped her crowded mouth. Then she drew back her head to release me, and placed her hands on either side of my head as she stared into my eyes. Her own eyes had become clouded and she said, \"Mark, some day, some lucky lady will take you into her mouth, and will happily swallow all you have to give.\" Her head shook, and she shuddered as my fingers strummed over and around her clit. When she spoke again her voice had become breathless, \"But I'm too selfish today. Today I want that iron rod of yours to travel up inside me once more. But first-\"\n\nShe leaned back on her elbows as she went on, \"--I would like you to lick where your fingers are working right now.\" \n\nShe must have seen the look of disgust on my face. \"Lick down there?\" I gasped.\n\n\"I did it for you,\" she said quietly, and there was no petulance in her.\n\nvoice. \"And if you really want to know about a woman's body, much of the answer lies between her legs.\" \n\nDespite my misgivings there was a rising curiosity of what it might be like. I dropped to my knees so I was between her open thighs, my face level with that spot where my fingers had never stopped teasing.\n\n\"Now, do you see what is like two lips.\"",
        "\"Slightly parted?\"\n\nMelita's delighted chuckle was punctuated by her heavy breathing, \"Oh, yes, I suppose they are by now. Use your thumbs to widen the gap.\"\n\nTo carry out that instruction I had to move my fingers from her clit. As my thumbs opened her out, my eyes were feasting on what looked like the heart of a pink rose, with layers of fleshy petals, the obvious nub of her erect clit and further back the secret darker spot of her entry.\n\nWithout further delay I leaned forward to place the tip of my tongue tentatively on her clit. Instantly her body wriggled and a little, \"Ooh\" sound escaped her lips. The only aroma was a slight muskiness, which wasn't at all what I had expected. Encouraged, a pushed my tongue more firmly over that erect nub, and again I was aware of her body tremor.\n\nConfidence running wild and my own body aflame, I ploughed my tongue right through the many pink folds until it was poking into her entry and I was sure secret forces tried to pull it deeper. I moved my mouth back to attend to her clit but two fingers of my left hand slipped up inside her.\n\nThat seemed to be the trigger point for Melita. Her whole pubic area lunged up in my face, as she squealed, \"In me, Harry. Oh, God, quick, quick.\"\n\nAs much as I had been engrossed in mouthing over her pink folds I knew that the pulsing in my cock was an early warning. I swiftly rose and plunged my body over hers, while delivering my penis head into that eager entry. With one solid push my cock was travelling like an express train in a dripping tunnel, and like a train it ran into some part of her that served as a buffer. The sensation was pure heaven for me but the groans, squeaks and heaving that emerged from Melita left me in no doubt that she was in the middle of a premature climax.\n\nWith a certain degree of satisfaction, I found that I was much more in control than I had been on our first encounter, and while Melita continued to bump and grind against my lusty thrusting, I was able to make a count of nine thrusts before my ejaculation started. Then I felt I could not stop grunting at each spasm of discharge.\n\nAs I calmed and we shuffled around the bed into positions of greater comfort, Melita said, \"I didn't expect that. Cumming so quick. Were you all right with it?\"\n\nI kissed her fondly, \"Slightly better than all right.\"\n\n\"And mouthing me?\"\n\nI gave her a smile,\"Surprisingly tasty.\"\n\nShe returned my smile as she said, \"You know what my name means?\"\n\nI shook my head,\n\n\"It means 'honey'. Did I taste like that?\"\n\nI hugged her, and we laughed together when I told her, \"Oh, yes, but with lashings of cream.\"\n\nThen we lay silent in each others arms, and I am sure her mind, like mine, was dwelling on this being so near the end of something.\n\nAt last she said, \"If anyone had told me this morning how I'd be spending the rest of the day, I'd have said they were crazy.\"\n\n\"Maybe you were crazy to waste your time on me.\" \n\n\"Have I not helped you?\"\n\n\"I can't tell you how much.\"\n\n\"Then my time wasn't wasted. I envy those lucky ladies at your university.\" Then she sat up, leaned over me, and we shared another warm kiss, before she said, \"One thing you should look forward to-\" And she paused to kiss me once more, \"-when you meet that one that you want to spend your life with, the kind of coming together we have shared today becomes absolutely marvellous.\"\n\n\"You've had this,\" I asked her, and her face took on that far away look that she'd had when telling me why she had been late in university.\n\n\"Yes, I have,\" she said vaguely, adding, \"It's wonderful, but there can be hurt in with it.\" And then she shocked me by asking, \"Can we do it one last time?\"\n\nThis surprise final time, started with warm kisses which gradually became wilder, as tentative caresses became more eagerly directed. The touching took us nowhere near the desperate needs of our previous sessions, so it was from this relatively controlled foreplay that my erection was soon gliding with exquisite ease up into her warm wet channel.\n\nMelita's hips rose to meet each stroke, and her vaginal muscles pulled at me from the start. About halfway through I noticed her breathing quicken and soon after that her vocalisation of her pleasure, brought now familiar grunts and gasps to my ears.\n\nI did not count how many of my deep thrusts buffered up against her cervix. It was certainly more than a dozen which was much more than I had managed before. Maybe my staying power was better because my mind was distracted by the fact that this was our last time and parting was imminent. Or was it just possible that I was improving?\n\nMelita was groaning and heaving under me, and I bent to kiss over her breasts and suck at a nipple as the pressure in my scrotum served a warning. I would have liked to have taken Melita on that final ride with me, but could tell she was not quite at that level. I tried desperately to hold back, but the surge would not be denied, and the next second, and with several short sharp thrusts I was emptying my load deep inside her.\n\nPure elation was mixed with regret that we hadn't made it together. Yet, as my cock released its final burst, I found that my late flurries of ejaculation had somehow, triggered Melita's own climax as she squealed her delight and ground her hips with some force against my hard penis, seconds before it started to fade.\n\n\"Oh, God, I'm not going to forget this--ever,\" she sighed as I collapsed against her and our sweating bodies welded together. \n\nAs we reluctantly got dressed, Melita said, \" I feel so guilty about what I've taken from this.\"\n\nI watched those delicious breasts disappear as she fastened up her blouse, and I said, \"Guilty? After what you've done for me?\"\n\n\"I didn't expect to get so much out of it.\"\n\nA wave of egotism, as I asked lightly, \" Was I so good?\"\n\nShe laughed, \"Oh, I don't want to give you a big head. But you were a fast learner.\"\n\n\"But I had a beautiful body to practice on\u2014not to mention the lovely face that forced me to offer coffee.\"\n\nShe kissed me lightly and said, \"Should we have another one?\"\n\nKnowing what she meant, I gave a shocked look towards the bed, and Melita gently thumped my shoulder and laughed, \"Coffee, you glutton.\"\n\nWe went through to the kitchen and slowly sipped coffee, dragging out our final minutes together. I managed to pluck up the courage to ask the question of our chances of meeting again.\n\nMelita reached out and took my hand, and with her thumb stroking it gently, she said, \"The idea has much appeal, but I have some experience of these things. Distance doesn't always make the heart grow fonder.\" She squeezed my hand, \"I've already told you how I'm envious of the women you will continue your intimate education with.\"\n\nI just did not want this to happen, and I began, \"But I only want-\"\n\nMelita held up a hand, \"Mark, you are only eighteen and have so many bridges to cross. I was just one of them.\"\n\n\"But you read so accurately about my lack of sexual experience.\"\n\nSmiling gently Melita took hold of both my hands. \"Confession time. You do have a positive life line, allied to a hopeful success line, but there is no known line on the palm of your hand that would tell me whether you had experience of the opposite sex.\" \n\nHer smile was so appealing that I was compelled to return it, even though I was puzzled by what she was telling me. \"So when you asked if I'd had any experience--?\"\n\n\"I wasn't reading that in your hand, but it was so evident in your body language. Your nervousness, your eyes when you looked into my face, before looking away, and my cleavage was given so much attention--I was pretty certain. You were ready for instruction--or put another way--for seduction. I quickly realised that I was ready too.\"\n\nShould I have felt annoyed, or cheated? How could I when she had given me her body so willingly?\n\n\"Are you annoyed?\" she asked, and when I shook my head she added, \"Don't be. From the moment you opened your door to me, I was attracted to you. All I needed was an excuse.\"\n\nI tried to treat the situation light- heartedly, \"And from the moment you opened your special door to me I knew -\"\n\n\"Knew what?\"\n\n\"That it would be hard to let you go.\" \n\nShe gave a little shiver, and stood up, \"Yes, it is ever thus.\" There was a sadness in her voice which matched how I was feeling, \"Tomorrow we're away down south. Then university, and life slips into its ordained pattern.\"\n\nMelita picked up her shawl from the back of a chair and when she turned her face to me I was sure her green eyes had moistened. Slowly we walked to the front door. How long had it been since I had opened it to her? Time didn't matter. The things I had experienced with Mileta were all that mattered. And that is what I told her as she unlatched the door.\n\nWithout pulling the door open she turned to me and reached up to give me a final kiss. It was tender and full of feeling as she said, \"I came to tell your fortune. I found your life line and your line of good fortune.\" And there was a definite tear on her cheek as she added, \" I hope I've helped you towards finding the elusive romance line.\" She pulled the shawl over her head and became a gipsy once more. Pulling the door open, she murmured, \"I'm sure you will have plenty to choose from. Choose carefully and love her well.\"\n\nMoist green eyes regarded me for a last time, and she said, \"Goodbye, Mark.\"\n\n\"I'll never forget you, Mileta,\" I said weakly, raising a hand to touch her face, but she was gone. I was left standing watching her neat hooded figure disappear down the street. \n\nOver the years Mileta's predictions for me proved most accurate and the love I eventually found at the age of twenty nine, blossomed for all of fifty years, thanks, in part, to those brief blessed hours with Mileta, my gipsy."
    ],
    "authorname": "EdDivers",
    "tags": [
        "gypsy",
        "temtation",
        "first time",
        "bulge",
        "kissing",
        "nudity",
        "naked woman",
        "nipple"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/a-gipsy-at-the-door"
}