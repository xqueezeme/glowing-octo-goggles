{
    "title": "The New Principal Ch. 12",
    "pages": [
        "I was heading back to the admin building when I saw a familiar silhouette entering the building in front of me. I followed along discretely.\n\n\"Hello? Anyone home?\"\n\nKimberly spun around and nearly jogged out of the room. \"Ms Lashgari!\"\n\nI entered the room behind Jennifer to see the cheerful meeting.\n\n\"Kimberly, I was just here yesterday, and I'll be here tomorrow. I'm not even your teacher anymore, so you don't need to fawn all over me. It's not like I'm a long lost sister or something.\" Her tone made this less of an admonishment than a grateful acknowledgement of the respect and love Kimberly had for her.\n\n\"I just dunno if I believe it. You have been gone such a long time.\" She smiled at her for a moment that seemed to mean a lot, but then a portion of her professional bearing came back.\n\n\"We do have a lot of work to do. Principal Lee said that you did meet, right?\"\n\nI stepped forward with my hand out. \"Yes, we've met, but in much less formal circumstances. Ms. Lashgari, it's good to see you again.\"\n\n\"Jennifer, please.\" As she shook my hand, I remembered the last time we shook hands, when her hand was slick with her own cum. I smiled at the memory as I felt a slight shock of my little trick jump between our flesh.\n\n\"Jennifer then. I can't tell you how happy I was when Kimberly told me that you had agreed to come back, and so soon. Pardon me for being so blunt, but my impression was that you had strong reservations about working here again. I wouldn't want you to join us here unless you really wanted to be here. It's not going to be easy moving forward.\"\n\n\"That's thoughtful of you. The main reason I didn't want to come back isn't an issue anymore.\" She arched her eyebrow and smiled. \"But the reason I want to be here now, is rather contingent on a little proposal I want to put in front of you.\"\n\n\"I see. Kimberly has been teasing me with the mystery of it all this whole morning. I'm intrigued. Let's come into my office and have a talk.\"\n\nKimberly piped up. \"Can I get you coffee or anything?\"\n\nI shot her a quick glance.\n\n\"Ah. Old habits.\" She grimaced.\n\n\"Kimberly has agreed to take a promotion. We're still working on the title, but she's in on all major decisions now.\"\n\nJennifer smiled. \"I knew something seemed different. She wouldn't tell me anything yesterday.\" She turned to Kimberly with an arch smile. \"So many secrets, Little Kimberly. Congratulations! I think that is an excellent decision.\" Then in a lower confidential tone, \"Her talents have always been wasted here.\"\n\nWhen we finally got arranged in my office, it seemed like both women were getting more nervous. This might be Jennifer's idea, but Kimberly had bought in and they were both hopeful, but unsure. I didn't know if it would work, but I tried to use my trick to push out a sense of comfort and safety to the both of them. I trusted Kimberly fully, and from what I'd seen of Jennifer, plus her reputation among the students and the information in her files, she was brilliant and someone with good judgment, so I was genuinely excited about what they might have put together.\n\n\"Ok, Jennifer, give me the top-level pitch, and then we can fight out the specifics.\"\n\n\"Good.\" A pause and a deep breath. \"Bright Hall's reputation is uneven. We used to have outstanding teaching, decent facilities, and a strong relationship with high schools and alumni, but in the past few years, frankly, all of those have significantly weakened. Luckily, our traditions are strong and news of our decline hasn't really travelled too far or too deep, but we need to act quickly to stem the damage. I believe if we make a big visible change, we could benefit a great deal from the PR. And of course, if the change were a positive one, we could bring back the reputation for quality we used to have.\"\n\n\"Jennifer, that's exactly what I've been wanting to do here. Let's take all the background as read. Give me the big idea, then we'll dig back into details if we need to.\"\n\n\"Ok. Well. Bright Hall should become a women-only school.\"\n\nThey both looked at me anxiously.\n\nI only had to think for a second or two. \"Of course! That would solve a couple of problems I've been thinking about. Ok, let's talk this out. Hypothetically, we become women-only. What are the problems?\"\n\nJennifer spoke up immediately. \"The biggest one is money. There's almost certainly a tuition drop for a while as the boys leave. It will take a while to make up that number in women.\"\n\nKimberly added, \"But, we're already at nearly a seventy-thirty ratio, so the loss won't be as bad as you might think.\"\n\n\"Ok. Other downsides.\"\n\n\"Some people might think it's regressive. The arguments for and against single-gender education are old, and everyone's heard them. Folks here on the island are quite conservative, they might actually favor women-only, but it might be a harder sell in more progressive areas where we get a lot of our students. Of course, we could lean into that -- say that we're a more conservative, traditional school, but that really doesn't fit with our curriculum.\"\n\n\"Another problem. What do we do with the male students we have? There are also some of our female students who might leave without the male company.\"\n\n\"And the other problem is that this would be a major change that you would have to run by the Board of Directors. I told you earlier that they seem to like you, but I have no idea whether they would support this or not.\"\n\n\"And, this isn't a huge issue, but the change will mean a bureaucratic mess. We'll need to spend a lot of time and money just reorganizing and rewriting the handbooks, and that low-level stuff.\"\n\n\"Ok. Other major downsides? No? Ok, positives?\"\n\n\"It would be a real differentiator. We're already a special enough place that our name is pretty well-known in the high schools, but if we make this a part of the new ad campaign, we really would be staking a claim to a space that is simply unique.\" Jennifer paused then added. \"I think it would be best to push this as a new type of women's only school. A school for empowering women.\"\n\n\"We double down on this being a commitment to education. The work we've done building the idea of Bright Hall as a remote place of concentration and undisturbed scholarship would fit right into this.\"\n\n\"It also rolls into the prestige line. 'This is a special place for special women,' that kind of thing.\"\n\nI liked the way they were thinking this through. \"Alright. One more problem. You've got a male principal. Isn't that hypocritical?\"\n\n\"No, it's not a nunnery. We will still have male faculty and staff as well. It should be part of our pitch -- we bring the best we can, regardless of gender, to guide and educate the best young women.\"\n\n\"Ok.\" I thought for a bit longer, even though I had basically made up my mind as soon as Jennifer told me what the idea was. I could feel both of them looking at me, and I kind of enjoyed the sense of anticipation that I was getting. This is how petty managers become awful people lording over a tiny amount of power, isn't it?\n\n\"Ok. Let's do it. Kimberly, start the process of setting up whatever communication we need to have with the Board. I'd like to talk to them as soon as possible. Jennifer, can I have you work with Kimberly to put together an executive summary for the Board?\" Jennifer nodded quickly, and Kimberly's smile could have lit up the room. \"Positives, negatives, all that we talked about and more. With as much detail and as many numbers as possible. Don't sugarcoat anything, particularly the potential loss of student numbers and attached tuition drop. We will probably need to dig into the endowment to make up that loss, and they'll need to know that from the beginning. Would it be possible to start this in the summer term?\"\n\n\"I think that might be too fast. We've already got male students enrolled and paid up to date for summer.\"\n\n\"What about if we announce it, and allow the men currently enrolled to stay on, but we accept no more starting this fall.\"\n\n\"That could work.\" Jennifer considered. \"I'll put that in as a preferred option. We'll see what the Board says.\"\n\n\"Ok. First huge decision made. Feels good. I'll get out of your hair and let you start with that work. Oh, right -- Kimberly, you needed to talk about the gym?\"\n\n\"Oh, yes. It's a couple of small things. I'm not sure it's a problem, but I wanted to at least let you know. If we do the gym and the pool at the same time as the dorms, we're going to have to bring on another contractor, and the only one I think we can work with is one I don't know well. They're more expensive, but their work seems good. I don't know. Nothing seems wrong, but I'm a little unsure.\"\n\n\"I would much rather have the gym and pool on their way to getting ready. Waiting on that would really hold us back. Also, the work on the pool and athletics center doesn't need the craftsmanship that the dorms need. I'll leave the final call to you, but my strong preference is to go ahead with it. Maybe with a little more oversight on their work?\"\n\n\"Ok, and the other thing about that is if we are going women-only, then we can do renovations for the gym to combine the showers and make things a little nicer.\"\n\n\"How difficult would it be to put in a sauna? I said that to the students as a joke, but that might be really nice. Could we actually do that?\"\n\n\"No reason we can't ask. I don't know if you know about all the hot springs around here, but we might be able to tap into one of the springs around here and do a natural sauna. I'll ask anyway.\"\n\nI signed the approvals to get things moving, and the three of us walked out into the reception area.\n\nKimberly and Jennifer went into her office and left me to my own devices.\n\nBack in my office, I started going over the faculty reports. If Veronica was coming back, then we would mostly be staffed up. We could use another English teacher, and the guy we had taking care of history wasn't stellar and he only focused on US history. I hadn't talked to Jennifer about it, but hopefully she would be willing to cover some of the gym classes.\n\nWe had the sciences covered, but not well enough. Kimberly had mentioned a teacher named Melissa Sten who used to handle Chemistry, so I supposed I should go meet up with her. From what Kimberly had said, she would be more of a challenge to bring in. I sent an email to Kimberly to see if she could set up a meeting.\n\nThe only areas we were completely unable to give classes for were foreign languages and theater arts. It was just wrong that we couldn't offer at least Spanish or French. We had several faculty members who were fluent in another language, but none of them were language teachers. We'd need to put out a call and hope to get someone in place by the fall. We had someone who could teach art, but he was already also handling a couple of English classes too, and he wasn't really trained for theater. Besides, I thought it would be better to have one person who handle drama, dance, and music. That would be another hire for the fall. All that was of course assuming I was still here in the fall.\n\nThe break was also going to be a challenge. Because we ran year-round, just about everyone left on vacation for the time between semesters. I was going to stay around to watch over the renovations and take care of any emergencies, but just about everyone else would be gone. Most importantly, Kimberly was going to go visit family, so I would be without her guidance. Who knows what I would screw up without her advice. I assumed Veronica and Jennifer would be out as well.\n\nAh well, nothing to be gained by stewing on things that I couldn't control.\n\nI spent the rest of the day replying to the barrage of emails that had started coming in. It seemed like for every one email I answered, there were two meaningless ones to delete and three new ones in the inbox that required thought or research.\n\nI didn't even realize how much time had passed when there was a knock on the doorjamb. I looked up to see someone who looked like Veronica peeking around the doorway, but clearly wearing very different clothes.\n\nThis woman had Veronica's lovely rich skin tone, and that same slim shape, with just the right amount of curve in the hip and bust. But now this woman had her hair up and in a tight bun, which drew back the framing hair from her face, and, with her angular face and bone structure, it made her look almost severe. She was wearing makeup, with deep eyeliner and a subtle green in the eyeshadow.\n\nBut her clothes were the most dramatic change. Instead of the loose casual clothes I seen her wear before, she had a crisp formal white blouse with some kind of frill up the front. She had a low black vest that nearly functioned like a bustier making her breasts even more enticing even though they were covered by that high neckline. She wore a long dark brown skirt that nearly covered some serious boots that were underneath.\n\nShe had always looked incredibly hot to me, but this image, somewhere between a goth fantasy and a steampunk dream, made me rethink things. Perhaps I needed to start looking for a different variety of porn. Then again, perhaps I wouldn't need to, if Veronica just kept dressing like this.\n\nI must have shown the surprise and appreciation on my face, because she arched a thick eyebrow and gave me a sardonic grin.\n\n\"Down, boy.\" Her voice was low and crisp. Clearly, she knew the effect her clothes had on men.\n\n\"You look incredible...\"\n\nI had much more to say, but she put a finger to her lips and motioned for me to come out of the office into the reception area. I hesitated, but obeyed. When we were outside, she continued out onto the portico at the front of the building and then out to the quad area, which was currently empty.\n\nShe seemed a little uneasy.\n\n\"Here's the thing. I'm a bit paranoid to begin with. So, I need someone more level-headed than I am to bounce this off of.\"\n\n\"I'm not sure how level-headed I am, but I'll help if I can.\"\n\n\"Did Kimberly tell you about any security or surveillance systems here on campus?\"\n\n\"No. We did talk about something along those lines when we were talking about staffing. We've got a few campus security officers, but they're mainly for chasing down petty theft and walking students around campus at night. Kimberly suggested that you would be the right person to arrange security from a technical angle.\"\n\n\"Well, that's good news. I think.\"\n\n\"What's going on? Is there a security problem?\"\n\n\"I'm not sure. Well, yes, there is. I just don't know how bad it is. I was checking the systems in my office. I hadn't even been in the building in years, and it looked like the library had been closed for quite a while. I'm not even sure if anyone used the room at all since I left... Anyway. Something seemed off about the computer. I poked around a bit and found evidence of tracking software and other fishy spyware.\"\n\n\"Weird. How bad?\"\n\n\"I'm not sure. I don't have the time to do any real investigation right now. I just shut everything down and disconnected it. To add to my very bad feeling about all of this, I did a quick once-over of the office and found one of those mini cameras in a neat little hole bored into a shelf. It looks like it's aimed right at the monitor and keyboard. Like it could see over my shoulder as I use the computer. This was pretty cleverly installed, not just an off the shelf camera glued to the wall. And it looks like it's been there for awhile.\"\n\n\"What the hell?\"\n\n\"Yeah. I know it wasn't there when I used to work here, or at least I think it wasn't. I'm sure I would have noticed. Anyway, I don't want to tear it out until I can do the whole system all at once. There's no reason to think my office is the only one that's bugged.\"\n\nImmediately, I started thinking about the little creep cellar in the Green House. That feed of Kimberly's room... Maybe she wasn't a cam girl after all. It was a hidden camera in her bedroom. This couldn't be a coincidence.\n\nVeronica was watching me closely as I thought through the possibilities. I was struggling whether or not I should tell her about it, and again, I didn't hide my emotions well.\n\n\"You... You did it? You bugged my office?\" Her voice broke a little, full of emotion.\n\n\"No! Oh, god, no!\" I took a deep breath. Kimberly's advice was to always be honest with Veronica, and that had to be the right option now. \"Veronica. This is a disturbing discovery, but I think it's even weirder than you think it is. Can you come by the Green House tonight?\"\n\nShe seemed put off a bit by the suggestion, but seemed a bit apologetic. \"Hey, I'd love to come by to play, but I've got a lot of work to do. I've already started on the ad campaign, but I'm going to have to be working all day every day if I'm going to be able to get out on vacation on time. And,\" her voice lowered slightly. \"In any case, we need to be discrete. My reputation in this town isn't exactly spotless. And... well, small town gossips will figure us out sooner or later, but the later, the better.\"\n\n\"No, that's not... I mean, that would be great,\" I smiled, maybe a little too lecherously. \"But I totally understand keeping this on the down low. It's just that there's something in the house you need to see.\"\n\n\"The Green House is bugged too?\" She mouthed silently.\n\n\"Not exactly. But maybe?\"\n\n\"Huh.\"\n\n\"Yeah. Can you come by?\"\n\n\"Yes. But it'll have to be later. Say nine or ten. Are you allowed to stay up that late?\"\n\nI chuckled. \"I'll ask my mom.\"\n\n She smiled slightly, still concerned about this new revelation.\n\n\"Well, nothing to do now but keep on keeping on. Come on in and we'll get your paperwork taken care of and have a quick chat with Kimberly and Jennifer. We've got some exciting new information about the school for your ad campaign.\"\n\n\"Ok, but let's keep this under wraps for now. I trust Kimberly. I'm sure Jennifer is fine too, but I think it's better to not tip our hand to anyone until we can roll up the whole system. Just be aware that anything in your office might be recorded.\"\n\nI started walking back into the building. \"Well, that's not a little bit creepy...\"\n\nWe walked over to Kimberly's office. I turned into the doorway and was getting ready to knock on the door to announce us, but I was caught up a bit short.\n\nThe scene that welcomed us was almost entirely professional. Both Jennifer and Kimberly were sitting at a glass-topped table facing the doorway. They were sitting nearly hip to hip in separate chairs with a single laptop in front of them on the table.\n\nWhat made me pull up was that, because the table was glass, I could see Jennifer's hand, and it was resting high on the inside of Kimberly's thigh. Based on the beet-red shade of Kimberly's face, and the wide nervous smile she was sporting, it seemed like her enthusiasm for her old teacher was coming to a new peak.\n\nI was trying to think of a stealthy way to sneak out, so maybe we could make some noise and try another entrance, but Veronica fixed the problem by just taking the path of least resistance.\n\n\"Jennifer! It's so great to see you!\"\n\nBoth women nearly jumped out of their skin, further confirming that there had been something going on. Kimberly made a kind of yelping noise and then started coughing, which made her turn even a deeper shade of red.\n\nJennifer recovered more quickly, standing up and heading over to greet Veronica at the door. As she did, she shot a glance back at Kimberly to make sure she wasn't going to need assistance.\n\nVeronica stepped forward making up the distance between them. They hugged warmly but quickly. I couldn't help but notice that even though Veronica wasn't Amazon-tall, thanks to Jennifer's stature, her head was basically level with Veronica's breasts. A flash of jealousy passed as I thought of how much I would like to be in her position.\n\nWhen they pulled back from their hug, they held hands and looked each other over.",
        "\"How are you always so insanely fit? You look incredible.\"\n\n\"Judging by your costume, it looks like Ben has convinced you to take over the library?\"\n\n\"Yes, I'm back. I couldn't run that library in sweatpants, could I? What kind of librarian doesn't like playing with expectations a little bit?\" Her eyebrow arched.\n\n\"Well, thank god we've got you. We've got a lot of work, and we're going to need you.\"\n\n\"What about you? How did they convince you to come back?\"\n\nShe laughed lightly. \"Our dear principal doesn't even know what he's gotten himself into. He's given me cart blanche to run my courses my way. And, we're going to shake things up in a big way here.\"\n\n\"Sounds fun. I can't wait to hear the details.\"\n\nI piped up. \"Kimberly, could you get Veronica's paperwork set up? And Jennifer, why don't you give Veronica a rundown of what fun little things we've got in store. I'm odd man out, so I'll go get drinks. Coffee? Tea? Soda?\"\n\nKimberly smiled in her utter flustered embarrassment, doubly so now that I was going to do what used to be her job.\n\nVeronica and Jennifer both took it in stride. Both asked for tea and settled down in chairs to talk over the school strategy. I looked back at Kimberly with a questioning look.\n\n\"Tea?\" She said softly, and flushed again, utterly adorable.\n\n\"You got it!\" I spun on my heel and went to get three teas.\n\nOn the way back, I ran into Kimberly at the printer, printing out some papers for Veronica and me to sign. She had recovered mostly.\n\n\"How are things going? Are we going to be able to get everything ready for the summer term?\"\n\n\"Yeah! Yes. I think we're going to be ok. It will be a little awkward with the all-girls change, but Jennifer says if we all buy into it and really push the advantages, it'll work out. I think she's right. Oh, and the Board of Directors replied to my message almost immediately, really weird, but anyway I've got a video conference with the Board lined up for you tomorrow morning. They won't all be there, but you'll have a quorum, so if you can convince them, we'll have the go ahead to start. I also thought it would be a good idea for you to have a meeting with the full faculty before everyone scatters with the wind over break. If it's okay, I have that tentatively scheduled for immediately after the last exams tomorrow afternoon.\"\n\n\"You read my mind. Excellent work. Go ahead and give the okay on that faculty meeting. I know it's short notice, so you can let them know it's not strictly mandatory. I imagine most of them will come anyway. It should be a good show.\"\n\nShe smiled and looked down at the papers she had just printed. It looked like she was going to ask me something important, but then she just looked up at me sweetly and said, \"I'm really glad you're here. I wasn't completely convinced at first, but it's only been a couple of days, and I think we're going to be okay.\"\n\n\"Me too. We're all going to be okay, and we're going to have some fun.\"\n\nWhen I got back to Kimberly's office, I could tell that Jennifer had given Veronica the full rundown.\n\nI set down the teas on the table and tried to read their faces.\n\nJennifer was smiling hopefully.\n\nVeronica was on the verge of laughter, then broke over.\n\n\"Oh, my god, this is perfect! If I hadn't already agreed to come back, this would clinch it. Let me add one thing. If we're going to do all this, let's really rebrand. How does Bright Hall Academy sound?\"\n\n\"That's wonderful! That would fit with the recommitment to classical learning that I'm going to be building in my classes. Ben? What do you think?\"\n\nI could tell getting these two women together could be dangerous. Or very entertaining. \"I think that would look very smart on a brochure. How difficult would that be?\"\n\n\"Not too hard.\" Kimberly had come in and heard the conversation. \"There would be some legal work to take care of, but if we're going all women, then we're already going to be rewriting a lot, and the folks we have on retainer should be able to handle it. It might cost a bit of money though. Of course, rebranding would involve signs, letterhead, business cards... You'd be amazed about all the things the name of the school turns up on.\"\n\n\"I'll bring it up with the board tomorrow.\"\n\nThe rest of the afternoon was spent brainstorming the ad campaign. Veronica had an old classmate friend who ran a marketing firm and owed her a favor. She was sure they would be able to take on our plan and turn it into something powerful that we would be able to afford. We wouldn't see real results until the fall, but we hoped that the summer term would be a time when we could build excitement about the new direction of the school.\n\nOne difficulty was that Veronica was indeed going to be heading out of town for break. She would only be able to be in intermittent contact with us. She was confident that she could get everything set up to run on its own before leaving though.\n\nJennifer was also leaving over break, but she didn't need to be in town to take care of her new curricular work. She was still pretty vague about her plans, but we wouldn't be implementing anything until the fall anyway, so that wasn't a big problem, but it would mean I would be basically alone for the next couple of weeks as I had feared.\n\nWe had taken care of most of the big problems by five o'clock, so I told everyone to go home. We didn't need to be working late if we didn't have to. Kimberly and Jennifer had a couple more things to put in the information packet for the board, so I was going to head out with Veronica, but she shot me a quick look, and I remembered that we needed to pay attention to appearances, even here in the office.\n\n\"Ok then, Ben, ladies, I'm going to swing by the library to make sure everything is ship-shape there. I don't think I'll be in tomorrow until the faculty meeting. Have a nice night, all!\"\n\nAfter a decent amount of time passed, so that we wouldn't be seen leaving together, I left as well, heading back to Green House. As soon as I passed through the door, I took off my suit and changed into a pair of shorts and an old college hoodie\n\nI hadn't eaten lunch, so I fixed a light dinner and ate while surfing the internet. I didn't really have much to do but wait until Veronica showed up to check out the cellar. I still wasn't totally at ease about letting her see it. I didn't see any reason not to trust her, and there was no way I was going to figure out anything about it myself. I needed her expertise, and also it seemed very plausible that my monitor set-up and the cameras in the library office were installed by the same person or people.\n\nI took a little bit of time to clean up, and even tidied up the bedroom, perhaps a little optimistically.\n\nWhen the doorbell rang, I was in the middle of emptying the last couple of boxes of my books that had arrived. Books always look so much nicer in a quality bookshelf, and this house certainly had those. I was so engrossed in the project that I didn't realize it was already that late. I headed over from the library, laughingly reminding myself that I lived in a house that had a library now, to the door.\n\nVeronica was back in what I was now thinking of as her civilian clothes, in contrast to the high-concept librarian garb she had on that afternoon. Both certainly had their advantages, and she looked as lovely as ever in thin loose brown pants and simple dark red t-shirt. She slid in the door smoothly as soon as I opened it.\n\n\"I know I shouldn't care, but I just hate the idea that people might be watching your house, or watching where I go at night. I really don't want to live my life hiding from people. But for right now, we still need to be quiet and inconspicuous. The break between terms might help. The townies will get used to you being around and maybe stop caring so much. But now? Ugh.\"\n\nWhile she vented, I led her to the kitchen to get drinks.\n\n\"Water? Tea? Booze?\"\n\nHer face lit up at 'booze.'\n\n\"I shouldn't. I'm not a hard drinker, and I have a lot to do tomorrow...\"\n\nI went to the cabinet and pulled out a bottle of whiskey. I held it in one hand and shook it back and forth slightly. I doubted it was as good as what she had at her house, but it seemed good enough to me.\n\n\"Yeah... light pour though, okay?\"\n\n\"Not a worry.\" I poured two tumblers and handed one over to her.\n\nShe used the handoff to lean close to me. I started to get excited. I didn't think she would want to start something tonight. But she leaned to one side and ended up whispering in my ear.\n\n\"You really have a one-track mind, don't you? Mind out of the gutter, Lee.\" I could hear the smile on her face. \"Did you look for any microphones or cameras?\"\n\n\"No. I mean, I wouldn't even know where to look.\"\n\n\"What did you want to show me then?\"\n\n\"Well, ah... follow me.\"\n\nI led her into the library, suddenly incredibly conscious of the possibility that there might be cameras and microphones anywhere. Nothing to be done but go through with it now though.\n\nWe walked over to the bookcase without speaking. When I reached down to undo the latch and started to pull the case up, she gasped audibly.\n\n\"Holy crap.\"\n\n\"Yeah. Come on down here. It gets weirder.\"\n\nI sipped the last of my drink and started down the ladder.\n\n\"A secret bookcase? Who builds a secret bookcase for crying out loud?\"\n\nAt the bottom of the ladder I turned on the lights and watched her set foot onto the cellar floor.\n\n\"Told you it got weird. Take a look at this.\"\n\nI waved her toward the system of monitors to the side. As she walked over, mouth agape, I realized that there was only one feed I had ever seen on the system: Kimberly's bedroom. Veronica sat down in the chair and I rushed over to try and explain about that feed. Did Veronica really need to know that I perved on sweet little Kimberly?\n\n\"Ah, it's a really weird setup Veronica. I'm not even sure how all of it...\"\n\nShe had already powered everything up, and suddenly she started bringing up all sorts of camera feeds.\n\n\"How did you? Where are those?\"\n\n\"This is really interesting. I know most of these places... and... Voila! There's my office. See, I told you it was aimed to show right over my shoulder and onto the monitor and keyboard. Very professional.\"\n\nMy jaw dropped as she flipped from feed to feed. I had never seen any of these other cameras.\n\n\"Here's... downtown. A few different feeds from the town, interesting. And here's... ah, I think I see what's going on here. Here are some from campus... the dorm showers, women's showers, naturally, first floor, second floor, and third floor.\" She brought each one up on different monitors. I could see a handful of students in towels and robes move into frame and start taking off their clothes.\n\nShe closed those feeds and started looking elsewhere.\n\n\"Hmmm... yup, here's Kimberly's office and some other admin rooms. Your office doesn't seem to be here though. I suppose that makes sense though.\"\n\n\"Does it? How does that make sense?\"\n\nShe kept scrolling through feeds. \"Here's the changing room and here's the shower in the gym. Again, women's side only. There are a few other ones... Aha! This gets really deep. There's a whole other system over here. I suppose this is probably the only one you found, right?\"\n\nShe clicked on the icon I had used, and Kimberly's room flashed into view. Full color, not green-tinted this time.\n\n\"A bedroom? Where is this?\"\n\n\"It's Kimberly's.\"\n\n\"What? Like, in her house, in her bedroom?\"\n\n\"Yeah... You're right, that's the only feed I found. I didn't even see that other group you got to.\"\n\nVeronica spun around in her chair and looked at me.\n\n\"So, this is a pretty huge thing.\" She looked around the rest of the cellar. \"So, he walled this part of the cellar off? That's not too hard to do, but that bookshelf is really kind of clever. I don't know anything about carpentry, but I'd bet you'd need a real craftsman.\"\n\n\"Like those guys Kimberly has renovating the dorms?\"\n\n\"Or the gym.\"\n\n\"But would you get an entire contractor's group to put something in that was meant to be private? When was all this done? I can't be that old, can it?\"\n\n\"Oh, that's no mystery. This had to be Steven.\"\n\n\"The previous principal?\"\n\n\"Yeah.\"\n\nShe stood up and started pacing back and forth in the small room. I wanted to give her time to compose herself, so I sat down in the chair facing away from the computer, and watched her pace.\n\n\"Steven. Steven Billanson. Honestly, the only thing you need to know about him is that he was an asshole. A predatory asshole. Everyone... nearly everyone hated him or lived in fear of him. You wonder why the students act like little military school cadet toy soldiers? That's because of Steven. But this set up... This might explain some of the things. If he had cameras and microphones all over campus...\"\n\nSomehow, she had held onto her drink going down the ladder, and she sipped it as she paced. I sat quietly and let her work things through.\n\n\"But he doesn't really matter. Not anymore. What we need to think about it what we do about this. I was going to let everything be for the time being, but now maybe we need to do something right away. What do you think?\"\n\nShe stopped and turned to look at me.\n\n\"I'm not sure. If this is just a system left in place by the last guy, then does anyone else have access to the cameras? Are these things hard-wired or could someone log in remotely?\"\n\n\"I don't know. The cameras are spread around so wide, I can't imagine they are wired. This is clearly the main terminal for the system, but it's not impossible that it could be accessed remotely. There might be a way we could monitor that from here though.\"\n\nAs she spoke, she seemed to get distracted, as if she was thinking of something else. Her eyes weren't on me anymore.\n\n\"Well, you're the expert. What do you think we should do?\"\n\nShe sighed deeply. \"I suppose... There's really not much we can do right now. I would want a good deal of uninterrupted time... to really dig into the system and make sure I understand the system before doing anything...\"\n\nShe still seemed distracted, but a smile spread slowly across her face. I looked into her eyes, and again I was struck at how smoothly I was able to connect with her mind.\n\nI was able to see a side of her that I hadn't really seen before. At the front of her mind was what I supposed must be her technical proficiency. It was incredibly impressive. I couldn't understand it, but it was clear she was very good at this kind of thing. She had been thinking hard about the camera system and how to take care of it. Who might have access and how they might react to having it shut down. She seemed to have come to a decision about the next step, and her anxiety began to ebb.\n\nAs usual though, I was unable to hold onto those thoughts. My view always slid toward the erotic centers of whomever I was looking at.\n\nI was surprised to see that her arousal was already on the rise. I hadn't done anything, and I'm sure I didn't look attractive down here in the concrete cellar in my hoodie, but she was clearly seeing something that was getting her worked up. Flattered, I pushed a bit on her arousal and saw her respond. Her mind lit up in all the right places, and the technical professional part of her mind receded as the pool of lust started to crest. It moved back so easily, I was a bit surprised, especially since we had just hooked up earlier that day, but I wasn't going to look a gift horse in the eye.\n\n\"So, we just wait until you get back? That seems... I don't know... dangerous. We don't even know why the whole town is under surveillance.\"\n\n\"Oh, come on. You're not that dim, are you? And I know you're a horny little beast. Why would you put cameras all over town? Why cameras in the showers and changing rooms?\" She walked toward me, and her voice dropped an octave, exposing her rising interest. \"And why would you put a camera in that adorable little Disney princess Kimberly's room?\"\n\nThere was no hiding the guilt on my face.\n\n\"Oh...\" She was now right in front of me. She leaned over me, resting her hands on the desk behind me. \"You've been watching our cute little redhead, haven't you? No, no... don't deny it. It's kind of hot. Watching those students today in the library was a huge turn on. Maybe I like watching people sometimes. That's a new discovery for me.\"\n\nI leaned back in the chair, so she could hover over me.\n\n\"The first night I was here. I found this system and saw Kimberly. I thought she was a cam girl. She was masturbating. She was so hot, sprawled out on her bed, I just couldn't resist. But she's not a cam girl. She doesn't know the camera is there, does she?\"\n\nVeronica slid closer, her chest coming down to rest on mine. Her head lowered down for a delicate, almost pure kiss. I wanted more, but she moved her head past mine, and I realized that she was operating the computer behind me.\n\n\"And... there.\" She clicked the mouse and suddenly there was audio piping through the speakers.\n\nShe turned around and sat down on my lap. She was so thin, I barely felt her weight come down on me. What I did feel was the way her butt grinded up against my already responding penis.\n\nAs she sat down on me, she spun us both in the chair to face the monitor and I finally saw what had been distracting her. Kimberly was home.\n\nAnd she was talking to someone.\n\n\"...this is happening. I mean, I'd always hoped, hell everyone in class was hot for you.\" Her southern twang made her voice just drip with honey.\n\nKimberly lay on the bed as if she had just been pushed down. Her gaze was locked to someone off camera.\n\n\"Jennifer?\" I said as a wrapped my arms around Veronica and she leaned back into me.\n\n\"It has to be Jennifer,\" she purred in arousal. \"You don't know much about Jennifer yet...\"\n\nI let that comment go. I did know a little bit about her. As least what I saw in the forest, anyway. I turned my attention back to the monitor. Kimberly was squirming a bit on the bed, trying to find a pose that showed herself off in the sexiest may, letting her hair spread around her.\n\nA voice came from off camera. It was clearly Jennifer.\n\n\"Oh, I know. I knew back then. I could see the way you looked at me. It was so hard to keep my hands off you. But now you aren't my student anymore. Now, I don't have to keep my hands off you, do I? Why don't you show me how excited you are? Why don't you show me that gorgeous body of yours?\"\n\nKimberly smiled wide and started to take off her jacket.\n\n\"No. No, no. You need to perform for me. I want you to dance for me. Stand up. Get over here.\"\n\nKimberly looked confused for a moment, but her smile widened as she jumped off the bed to obey. \"Shouldn't you lie down? Let me dance for you.\"\n\nAs Kimberly moved off camera, we finally saw Jennifer move to the bed. She was wearing the same clothes she had on in the office, a dark, conservative, and very well-tailored suit. She took off her own jacket and folded it neatly on a table next to the bed. Then she sat down and leaned back on the headboard pillows. She looked incredible, such a small woman, but full of confidence in herself and her own body.\n\nWe couldn't see Kimberly dancing, but we watched the effect she was having on Jennifer. She might have been in command, but she was clearly very turned on, and as the dance continued, her face showed the difficulty she had in keeping control. Her eyes widened, and she licked her lips, long and slow, surely for Kimberly to see.\n\nVeronica lifted my arms from her belly to her breasts. I wrenched my hands free and ran them up under her t-shirt to get a better feel, and she yelped in surprise, but then pushed my hands against her more urgently. I moved slowly, lightly squeezing and gently caressing her nipples. I kept my eyes on the monitor, but moved my mouth down to place kisses lightly all over her neck. She responded with a happy moan, but kept her eyes on the action in Kimberly's room.",
        "Before long, we could tell by the way Jennifer was reacting that Kimberly was done with her dance and approaching the bed. She slid down to receive the redhead bombshell. And soon enough we saw her come into frame. She was completely nude. We could see from above and behind, so she was not much more than a wild cascade of curly kinky red hair, and underneath there was her wonderful, full ass. I had never gotten anything but suggestions of it through her dresses, but it was everything those curves promised. Not unnaturally big, but in perfect proportion with her body, and an excellent balance to those incredible tits of hers.\n\nJennifer crawled up and over Jennifer's body. We couldn't see their faces, but we heard the light touch of their first kiss, and the moans as it deepened in passion. Jennifer's hands moved to caress Kimberly's back, rubbing up and down, one hand resting on that amazing ass.\n\nAs Kimberly moved on top of Jennifer, her hair flowed down over her, exposing more of that milky-white back. Kimberly's hands were active, too, clearly tangled in Jennifer's hair and stroking down her sides.\n\nThen Kimberly eased off her kissing and leaned back.\n\n\"Yes?\" Jennifer seemed to respond to an unspoken question. \"You don't need to raise your hand. Do you have a question, Miss Adams?\"\n\n\"I'd like... I... Could I see you now?\"\n\nJennifer beamed at her former student. \"Of course you may. Why don't you get back down here and help me take all this off?\"\n\nKimberly obeyed immediately, scrambling for snaps and buckles.\n\n\"There's no hurry, Kimmy, I'll still be here. Enjoy it.\"\n\nShe tried to slow down, but not by much.\n\nAs they struggled to get naked, I stepped up my assault on Veronica. I pulled her gaze from the monitor and brought her head back to the side, so I could kiss those succulent lips. She willingly spun a bit in my lap to get better access to me.\n\n\"Maybe we should follow their lead?\"\n\nI looked into Veronica's eyes and saw she didn't need any pushing. I was reminded what an incredibly voracious sexual woman she was. She was ready for anything, but I wanted to draw this out. I wanted for us to enjoy this illicit show together for as long as we could. It was just a pity that all we had down here was this one chair. Even though she didn't need it, I focused hard to encourage the lust that was already taking over her entire consciousness. At the same time, I pinched her nipple with a good bit of force.\n\nMaybe I pushed too hard. What I didn't expect was that that would trip her over into an orgasm right away. She spasmed and squirmed on me, grinding her ass all over as she twisted in my arms. She dove forward to kiss me and her left hand slipped into her pants to bring herself down smoothly.\n\n\"Ohfuck... Ohfuck... That came out of nowhere... god that was good... I've got to get out of these pants or I'm going to ruin them!\"\n\nShe hopped up and stripped unceremoniously, throwing her clothes in the corner of the room. Then she stood there and looked at me expectantly.\n\n\"Well? Strip! I'm going to use you like one of my toys here, so get that cock out for me!\" She giggled as she tried to mimic Jennifer's orders.\n\nI slipped out of my shorts and was getting my hoodie over my head when I felt her settle down again, her back to me. My cock slipped between us, and she lifted up again to reposition it in between her legs. With my hoodie finally off, I could look down over her shoulder and see my dick pointing out proudly from in between her legs.\n\nShe giggled again.\n\n\"Look at this huge cock of mine!\" She laughed and grabbed hold of it and stroked it a few times, driving me crazy. At the same time, she started rubbing back and forth on it and moaning her pleasure.\n\nWith her back down on me, I reached my left hand back to fondle her boobs and my right hand went down toward her pussy, still wet with her excitement.\n\n\"Oh, look... Mhhmmm... Looks like they're gotten themselves arranged now...\"\n\nI ran my hand around her legs and belly, teasingly never going straight for the heart of her desire.\n\nOn the screen, Jennifer and Kimberly were now on their sides facing each other, both completely nude, and Kimberly was whispering something to Jennifer.\n\nKimberley's tits were still showstoppers, big, firm, and perky, with those big, bright pink nipples jutting out so proudly. Jennifer's body was now revealed to us, and it was everything I had hoped it would be. She was incredibly fit. Even at rest, her muscles were clearly defined, but I couldn't wait to see them clench in passion. Maybe it was just because she was so short, but her boobs were even a little bigger than I thought they might be, lovely and just begging to be licked.\n\nJennifer's hand was on Kimberly's hip, and she ran it up her side, over her shoulder and to the back of her head. She pulled Kimberly in and kissed her deeply. Kimberly pulled Jennifer by the hip into her body. Their boobs pushed together as they groaned into each other. Jennifer lifted her leg over Kimberly's hip and wrapped her leg around her waist, clinging even closer.\n\nThey broke off their kiss and stared into each other's eyes as their hands slid over each other, discovering the sensitive parts of the body of their new lover.\n\nI whispered into Veronica's ear. \"Look how sexy they are. You said you weren't sure if you were into girls, right? I can feel you right now. I know you are enjoying this. Do you wish you were there with them?\"\n\nI slid my hand closer to her pussy.\n\n\"Mmm-huh. Ohhh.\"\n\n\"Do you want to be there, in the room? Do you want to watch up close?\"\n\n\"Yeah... I want... to...\" She started rocking on top of my cock with more urgency.\n\n\"What do you want? What do you want to do? Oh, look at that. Do you see where Jennifer's hand is going?\"\n\n\"YES... ughh... keep... keep that up. You're driving me crazy.\" Her hands were braced against the desk as I explored her body but her eyes were locked on the monitor.\n\n\"Jennifer's hand is down there, touching Kimberly's pussy. She rubbing up and down on her clit. Do you want me to rub your clit?\"\n\n\"Yes... no... not yet... I won't last... I'm already on the edge again. I want to last...\"\n\nI slid my hand over her pussy, barely grazing her engorged lips but avoiding that little nub that was poking out with such urgency.\n\n\"uuuunnnggghhh... Yes...\"\n\nJennifer spoke up, breaking my concentration.\n\n\"Kimmy, I think it's time you pay me back. Pay me back for all those classes and learn something new. Were you a good girl in class?\"\n\nKimberly's eyes were slightly glazed as she answered. \"I was a good girl... I'm not so sure I'm a good girl now though.\"\n\n\"Oh, you are so very good. Have you ever been with a girl?\"\n\n\"I've kissed... but nothing like this...\"\n\n\"Are you okay with this?\"\n\n\"YES. I want more. I want everything with you. Can I? Will you let me?\"\n\n\"Of course. You are a good girl. Let's see if you can still learn something from your old teacher.\" She put pressure on the back of Kimberly's head and pushed her down.\n\nKimberly smiled wide and shimmied down quickly in her excitement.\n\n\"I haven't done this before, but I'm going to be so good. You're going to love this. Let me know if I'm doing it wrong.\"\n\n\"I know you're going to be great. Can you see how wet I am for you? You're so sexy there on your knees between my legs. Is this what you wanted? Is this what you girls thought about back in class?\"\n\nJennifer laid back, leaving her hands in Kimberly's hair to guide her.\n\n\"I'm so ready for you, Kimmy. We'll work on building a girl up and getting her ready later. Right now, I just need you to eat me out... UNGH aaahhhh oooofuck yeahyeah, that's it.\" Just as I hoped, her stomach, half covered with Kimberly's mane, clenched tight and showed off all her hard work. She didn't have hard-lined abs like a body builder, her entire body was just perfectly toned and sexy as hell. \"Oh, lick me... oooo...\" She flung her head back into the pillows, flinging her brown hair everywhere as Kimberly dove in with no preliminaries.\n\nRight at that moment, and without any notice, Veronica lifted up and positioned herself over my cock. I could feel her excitement dripping down over me. She hesitated a fraction of a second, then started lowering herself onto my cock. It had only been a handful of hours since I had been inside her, but, god, it was heaven. She went down an inch or two, then pulled up and nearly off, then back down again, slightly deeper each time, tight, and slippery, and perfect.\n\n\"Ohfuckfuck I'm not going to last. The way you open me up.... How? Ooogod... it's like nothing else... I can't take it.... Ugh... don't move don't move don't move... Let me sit here a sec.... ungh...\"\n\nIt was almost impossible for me to keep from moving. I squeezed her tits every time she lowered herself on me, and my other hand was down on her belly. I slid my hand over her silky skin, down to the inside of her thighs, then back up again trailing fingernails that raised goosebumps.\n\nOn screen, Jennifer was already shaking and pulling Kimberly's head down hard onto her pussy.\n\n\"Kimkimkimkimmy don't stop.... This is how I go... lots of little ones... oooofuck keep going... keep licking...\"\n\nKimberly was clearly loving the effect she was having on her ex-teacher. Her head wove back and forth with even more enthusiasm, and one hand shot up to caress Jennifer's chest. The other hand was under her ass, pulling her pussy up closer to her hungry mouth.\n\nBoth Veronica and I were glued to the scene playing out on the monitor, but our bodies were starting to move on their own.\n\nJennifer started to yelp softly as Kimberly drove her higher and higher. It really did look like she was having waves of light orgasms.\n\n\"Oh, god, is she just cumming over and over? I wish I could see them closer, don't you? Just imagine Kimberly's tongue gliding up and down on Jennifer's slippery pussy.\"\n\n\"Ohhh mhhhhph\" Veronica started moving almost unconsciously around me.\n\n \"Can you imagine what her pussy might look like? Do you want to know? Do you wish it were you down there, licking her, tasting her?\"\n\n\"Ohhhyes... I do? I do... ooofuck... I can't...\" Now with more force, grinding back and forth.\n\n \"Can you imagine how she would taste? Just imagine her legs, look at them how they are twitching, clenching tight around Kimberly's back. Think about how they would feel wrapped around you.\"\n\n\"OHGOD... I can't stop... I can't... I'm gunna...\"\n\nHearing that, I slipped my hand down and finally slid over to feel her clit, poking out with such need. The second I touched it she spasmed and pushed down hard as deep as she could.\n\n\"OHFUCK! Shitshitshitshit... yeah, yeah... more...\"\n\nI went to work on her clit with a steady firm rhythm.\n\n\"Don't stop... justlikethatdontstop... yeah yeah yeahgnn...\"\n\nNow she was driving herself down with force, and I was pushing up in time with her. She threw her head back on my shoulder, flinging her hair all over my head.\n\nShe screamed out, \"Nononono not yet... I want more... I don't want...OH GOD!\"\n\nHer head pulled back upright, and I used the hand not strumming her clit to hold her neck and aim her toward the screen.\n\n\"Look at them. Look at Jennifer. She's totally lost control. She was in charge and now Kimberly has her going crazy. Is she still cumming? Is she still cumming on Kimberly's tongue? What if she were going down on you? Just imagine how good that would feel. Just imagine Kimberly down there right now. My cock inside pounding up inside you and cute little adorable Kimberly lapping away at your pussy lips, sucking down hard on your clit right where my fingers are right...\"\n\nWhat I was saying was clearly pushing her closer and closer, but talking about Kimberly eating her out really seemed to do magic.\n\n\"OOOOOHHHHFUCKDAmmitdammit GOD! Dontstop! Keep going goodgod... keep... going... ohfuck...\"\n\nShe tried to keep upright, but as the orgasm ripped through her body, she couldn't keep control of herself. Her legs started twitching and just won't stop. I had to move my hand off her clit just to keep her with me in the chair.\n\nAs she started to come down, she lifted up and I slipped out of her. She spun around, and sat back down, my sloppy cock sliding up between us. Now we were face to face and she fell, exhausted, into a kiss. Her hands wrapped around me and held me warm and tight. I grabbed onto her too, and pulled her into me.\n\nShe leaned back out of the kiss and looked at me with a tired, but very happy smile.\n\nWithout even trying, I saw into her relaxed, contented mind. Her post-orgasmic mind was wonderfully welcoming and cozy. She wasn't sore at all, in fact I could feel her entire body buzzing with happy energy. Her lust was still flowing everywhere even after such a strong orgasm, so I massaged it a little to make sure, rather than ebbing back, it would stay powerful and at the front of her mind. She responded immediately, thrusting her hips back and forth, rubbing herself up against me.\n\nI laughed. \"You're raring to go again?\"\n\n\"Well, you didn't get off, did you? We can't leave you like that. And I can cum just as well as Jennifer can. I don't want her to show me up, do I?\" With that, she lifted herself up and on to my cock again.\n\nSliding down with a little more ease than moments ago, she groaned low and sexy.\n\n\"I don't know what you do to me. I love sex, but when you're inside me, I think I could just go forever.\" She looked at me with fiery passionate eyes.\n\nI looked back, pushed her lust, and felt her drop down on me harder. She hugged me tight and rocked her hips back and forth hard.\n\n\"I'm gonna make you cum... ugh... gonna make you cum hard... in me again... But you've gotta tell me... tell me what's going on... what are they doing back there... tell me how hot they are...\"\n\nI looked back up to the screen to see the two women back on their sides, but in a sixty-nine now.\n\n\"Holy crap... Veronica, they're eating each other out at the same time. Oh damn, Jennifer looks just wrung out... I can just barely see how she's smiling in between Kimberly's legs. They're both covered in sweat, but Jennifer must have been cumming the whole time. Just listen. Can you hear her? Her voice is raw, but she's locked in there eating her.\"\n\n\"Ugh... guhh... tell me... tell me about Kimber...ughfuck... Kimberly.\"\n\n\"Her hair is everywhere, it's matted down over her back and down her side... Ughh... Her tits are mashed up against Jennifer. She has to reach down to get to her pussy. Do you think she's that good? She's got Jennifer going wild.\"\n\nHearing about Kimberly got Veronica slamming down on me, and it felt so good, I couldn't keep up. Every time she came down on me, her tits slid down my chest, her nipples hard little points as the rubbed through my chest hair.\n\n \"Ohfuck... God you are incredible... You feel so good.\" I saw them shift and tried to narrate. \"Kimberly's ugh... Jennifer's got Kimberly on her back now... Kimberley... ohgod, she's going all red... she's going to cum.... Jennifer is down on her going crazy... just listen, Kimberly's losing control...\"\n\nJust then Kimberly wailed out in ecstasy, something between and squeal and a shout of joy. There was a couple of gasping minutes, then Kimberly's voice came out ragged but clear.\n\n\"Ohgodohgod... nomore no no... stop god... lord, it's too much.\" Jennifer had already pulled back and was on her knees looking over her conquest. \"ohfuck... Ms...Lashgari... ungg... what did you do to me...\"\n\nHearing that, Veronica lost all inhibitions and started riding me like a madwoman.\n\nI had barely been able to keep myself from cumming this whole time, but I knew I wouldn't be able to make it through this.\n\n\"Gonna make you cum, Ben... Look at me now, Ben... those two... so hot... but I'm here now and I'm... gonna make you cum in me... fuck... How? Now... You're gonna cum...\"\n\nShe had me by the shoulders now as she rocked down on me, squeezing her pussy tight on my cock. She looked me in the eyes as she rolled her hips and worked around me.\n\nI took advantage of that and locked into her mind. She was already near to another orgasm, and all I had to do was push her and encourage that huge pool of lust within her. Focusing on that allowed me to hold off just long enough.\n\n\"You're gonna cum in me... fuck... I can't stop... I'm... you're gonna\n\nHer eyes went wide as she realized she was getting too close.\n\nThen finally my control gave out. I grabbed her hips hard and pulled her down onto me.\n\n\"OHFuck! GODdaaammmmit!\" I grunted and let go as I shot deep into her, my legs shaking with the power of the orgasm.\n\nAs I lost control, she took over. She felt me cum and now she worked for her own release, pounding down on me even harder, with the urgency of her lust.\n\nIt wasn't more that three or four extra thrusts until she went off with a loud, but shaky, exhausted moan.\n\nAfter a few spasms, she collapsed onto me. I was already totally drained and could only reach around her waist and hold her tight against me so we didn't slide to the ground. I ran one hand lazily up and down her back, fingernails lingering on a spot on her lower back that she seemed to respond best to.\n\nShe purred into my neck.\n\n\"Damn... Ben Lee, you are so very very good for me. It's going to be really hard to be away from this lovely cock of yours over break. The rest of you is okay too.\" She kissed my neck wearily.\n\nAs we recovered, my attention was brought back to the monitor where Kimberly was back in between Jennifer's legs, eating her with a passion into one final orgasm.\n\nJennifer pulled her back up into her embrace, and Kimberly curled up next to her with her head on Jennifer's chest, that incredible red hair nearly obscuring Jennifer's entire body.\n\nThey both seemed to be drifting off into sleep. And we were drifting too. Even in this awkward position, Veronica was quiet and breathing deep and even into my ear.\n\nI reached out to turn off the feed, looking one more time at the gorgeous erotic vision the two women presented.\n\nI clicked the power button to shut the whole system down. In the millisecond before the monitor went dark, I swear I saw something.\n\nI swear I saw Jennifer look directly at the camera with a wild mischievous smile. And I swear I saw her wink."
    ],
    "authorname": "shudai",
    "tags": [
        "ff",
        "mf",
        "vouyeurism",
        "mind reading",
        "spy camera",
        "chair",
        "redhead",
        "teacher"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-new-principal-ch-12"
}