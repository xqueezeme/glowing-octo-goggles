{
    "title": "The Clinic",
    "pages": [
        "The Clinic\n\nIt took a long time for Jessica to save up for the new panties. The procedure wasn't all that expensive, but it took time when she could only put away a few dollars each week. But they would be worth it, the very latest in latex-toy tech, they were formed to fit a person perfectly, and you got to choose 'inserts' that could stimulate a person the entire time they were worn. Jessica had done her research, but the dangers reported were all very mild and she couldn't wait.\n\nShe'd made her appointment and signed all the papers, paying the fee with pleasure. When it was time to have them made, Jessica went to the Clinic bright and early. It had a waiting room like you'd find at any doctor's office and the attendant smiled and led her back right away. Jessica found herself in a small, clean room with a display that was covered in a white sheet. \"Welcome to the Clinic,\" the attendant said with a smile. She even bowed slightly, then tucked her long, red hair behind one ear as she straightened and moved to the display. \"These are the inserts that come with your panties, you paid for two, so please choose what you'd like,\" she said and removed the sheet with a small flourish.\n\nJessica moved forward, her eyes widening slightly at the selection. There were maybe a dozen different shapes and lengths of fleshy dildos, each in five sizes from small to enormous-looking. They were all a creamy off-white color, made of the same material the panties would be. Some were bumpy, others designed to be veiny, one that drew Jessica's eye was just a huge spiral, with the twisting lines running the full length of the thing. This was a fairly serious choice, and Jessica took a long time before choosing both.\n\nThe redheaded attendant waited patiently until Jessica had chosen, then led her down to another room. \"If you would kindly undress please. And you can put in your inserts,\" she said sweetly. Jessica could feel herself blush a little, but this was what the Clinic did -- exclusively -- so she was sure everyone here was quite used to this sort of thing. She stripped slowly and settled onto a small bench and spread her legs.\n\nThere was a thoughtfully placed container of lube, and Jessica used it to slick up the first insert she had chosen. It was the smallest size, but it was long with little textured bumps all over its surface, and it didn't take long before Jessica had slid the little dildo into her ass. She was blushing more now, slightly aroused from the whole process as she began to rub slick lube all over the second insert. This one was much larger, the second biggest of the prepared sizes. It had a curved tip, specifically textured to tease her g-spot, though the rest of it was smooth. It took a little more time to slide this dildo in, and Jessica had to bite her lip to keep quiet as she worked herself up to it. It was tempting to just come and relieve that tension, but as Jessica glanced at the attendant, she found the redhead was unabashedly watching. Jessica swallowed once and pulled her hand back before announcing, \"I'm ready.\"\n\nThe attendant smiled and immediately crossed to her and knelt. She held a pair of very shiny, very tight shorts, which she rolled up Jessica's legs. \"These will make it easier once the gel has set, to get it off your skin.\" Jessica nodded in understanding, standing as needed to get the shorts on. They were still crotchless, she noticed, to allow the inserts to adhere to the fresh goo. \"And these,\" the attendant said, showing off two small plastic plugs, \"will allow us to keep your inserts open.\"\n\nJessica nodded again -- that was one of the wonderful features of the panties. Once they were made, not only were the inserts there, to constantly drive you mad, but you could slide in another dildo, deep inside you and the inserts. It made the intrusions grow and pulse or vibrate, depending on what dildo you slid inside. You even got to keep the plugs, as a way to keep a remote controlled tormentor firmly in place. Jessica grinned slightly, she already had several fantasies of long days spent with a barely-there vibration driving her mad, followed by a night of screaming orgasms when she turned it all up.\n\nSlowly, because walking was a little more difficult now, Jessica was led over to something resembling a bathtub and helped to climb in. It was comfortable, padded a little and designed with a neck and head rest so she could lean back happily. As Jessica got comfortable, the attendant fixed the plugs in place and began to explain what would happen next. \"It will take some time for the gel to fill the tub space, it will cover your hips and your back, like a regular bath. It will take more time for it to harden and you have to stay still or the fit will be less exact.\"\n\n\"What happens if I move too much?\" Jessica asked with a bit of worry. Holding still for long periods was never one of her strong points.\n\nThe attendant just smiled, waving her hand lazily. \"It is not dangerous at all. The worst that could happen is we would have to try again.\" Then it's right back into her speech, and the professional certainty helps to calm Jessica. \"Once the gel is completely set, we go about shaping and removing any excess to be cleaned and re-used. Where the gel touches your skin, we have to use a solvent, but it is one hundred percent non-toxic, and the removal usually takes no more than an hour or two.\"\n\nThat was just to dissolve the goo away from her skin, Jessica knew from her research. Once they got to the parts that were covered by the shorts, they could slide it all off and the rest was done in some back room. An hour or so after that, Jessica would be walking away with a sleek, skin tight pair of flawless panties. But that was after several hours spent making them, she thought with a sigh. Hearing the exasperation, the attendant smiles. \"I know it's a long time, but you don't have to be totally still, just no big motions. Did you bring music?\"\n\n\"Oh, of course, in my purse!\" Jessica smiled wide with relief, she had almost forgotten. The Clinic had suggested she put together a nice long playlist, and the attendant went to grab her player and bring the device over. Jessica thanked her, putting on the earphones and getting the playlist started. She pulled off one earphone, asking \"Is there anything else?\"\n\nThe redhead shook her head. \"You read all the information, you know what we're doing. It'll be a little warm,\" was the last warning as she reached over and opened a small tap. Jessica replaced her earphone, leaning back as the tub began to slowly fill with goo about as hot as a warm bath. She propped her arms up, resting them on the edge of the tub and closed her eyes. With nothing else to do, she soon drifted off listening to her music.\n\n-o-o-o-o-o-\n\nJessica woke to someone gently shaking her shoulder, calling her name. She opened her eyes to see a frowning gentleman, which startled her since she was in the bath. No, not the bath, her sleepy mind sorted out. But still naked, and as she tugged at her hands, they didn't move.\n\n\"It's all right,\" the man said, before the panic really had a chance to set in.\n\n\"What happened!\" Was her first question. Jessica lifted her head slightly to see her arms at her sides, encased in a creamy white solid that barely gave way to her struggles.\n\n\"It's all right,\" the man said again, and as Jessica focused on his face she could see his identification, Dr. Zee. The title and his smile did reassure her slightly, but Jessica knew something had gone wrong. \"I run the Clinic,\" the doctor said, reassuring more. \"You're fine, and we'll have you out of there as soon as we can.\"\n\nJessica was calmer after the spike of adrenaline, and she asked more reasonably, \"What happened?\"\n\nThe attendant was there, and she leaned in with a small, apologetic smile. \"Your arms fell while I was tending to another client. I'm very sorry, but we will free you soon.\"\n\n\"However there has been a slight problem,\" the doctor said softly and Jessica looked back at him. She tugged at her arms again as she remembered a few of the dangers of the material, stories of being stuck there for hours while they slowly dissolved away stubborn gel. Sure enough, Dr. Zee turned a computer screen so Jessica could see the incomprehensible numbers and gauges represented on the screen. \"As I know you're aware, this material is new, and sometimes the mixture is off slightly. I'm afraid yours came out harder than usual, less elastic.\"\n\n\"You're not in any danger,\" the attendant assured quickly with her confident smile. \"But it is going to take longer than usual to dissolve.\"\n\nJessica could feel her entire weekend slipping away. \"How much longer?\" she asked, staring at the semi-clear surface that looked as if she could simply lift her hand out. She tried, again, and found she remained quite firmly trapped up to her elbows.\n\nDr. Zee frowned and studied the computer for a minute before moving to a tray of tools. \"One of us will be working constantly, but it's still going to take several hours.\" Jessica looked around the room, instinctively looking for a wall clock and finding one off to the side. It was already past noon, that meant the process would take the rest of the afternoon. She sighed deeply, but there was nothing to be done as the two went to work.\n\nShe had assumed they would work to free her arms and hands first, but the work began at her feet instead. It was possible, they explained very patiently, that Jessica would forget herself and start trying to tear the goop away if they cut her hands free. Although the doctor had very thoughtfully put her music program back onto her playlist, giving them all music to listen to.\n\nAfter an hour, Jessica found her legs were mostly free. Up to where the shorts stopped at her thighs, the gel was dissolved and scooped away, though she was still sitting in the tub and confined that way. This forced her to maintain the same posture she had been in, legs crossed at the ankles and knees spread to either side of the tub. An hour in and Jessica was also acutely aware of another problem now. Her music was mostly made up of techno and clubbing songs, all with deep, heavy base lines. For the best sound quality for the three people in the room, her player had been placed on the hard-yet-pliable gel, and all that base traveled through in tiny little vibrations straight to the two insertions.\n\nThere wasn't nearly enough sensation to cause any true annoyance. But the tremors and gentle rhythm awakened the denial from earlier when she slid the soft, unyielding intruders into her openings. Jessica pulled and twisted slightly against her bonds, blushing and wishing she'd gotten satisfaction then. Instead she was trapped prematurely in one of her fantasies, suddenly turned all too real. The dance songs didn't so much as pause, only change the beat and strength of the vibrations. After an hour of this, Jessica found it harder and harder to keep quiet, but she didn't want to embarrass herself more by calling attention to it.\n\nAs her legs were freed, the doctor stepped back to stretch, leaning far back. \"Amanda, our next client should be here by now,\" he said and the redhead nodded and turned for the door. For a brief second, Jessica was sure she would be taken advantage of. For a second, she wasn't sure she cared after an hour of being slowly wound up by nothing more than music. But Dr. Zee just pointed at the player and nodded, \"I like your music.\" He moved up beside Jessica's shoulder to begin work there, apparently taking no notice of her blush and not mentioning her quickened breath.\n\nJessica stayed there another half hour with the doctor patiently dissolving away gel from her torso and waist. Then the attendant was back and the two traded positions as he went to deal with this new client. For the first time, Jessica really took notice of the attendant; dressed in a fairly short, fairly tight dress that reminded her of the old-timey nurse outfits. Then Jessica noticed the white waist cincher, pinching the woman's figure into more of an hour glass shape. It made her chest pop, both breasts pushed up into perfect little round globes. Jessica swallowed and licked her lips, forcing her eyes away from the attractive display.\n\n\"How are we doing?\" the attendant asked as she stepped closer. Jessica was about to answer, to ask that the music be turned off, when she noticed the smile the other woman was wearing. Suddenly she realized that this attendant, this Amanda, knew exactly what those base vibrations were doing, she was not unawares as the doctor seemed to be. Suddenly she remembered the redhead wearing a jacket this morning, hiding the more attractive outfit -- she must have changed because of Jessica's predicament.\n\nAmanda chuckled softly, leaning across the tub to get something and letting her hair fall casually over her shoulder. The soft strands landed on Jessica's pert nipple, gliding across the nub back and forth as she wiggled slightly. The trapped girl couldn't help gasping softly, pulling up in a futile effort for more contact. \"Less than two hours,\" Amanda whispered, bending close so her breath ghosted over those painfully stiff nipples. \"Is that the longest you've been denied?\" Her voice was rich and dark, commanding without being intimidating. It promised sex and sensuality and was nothing but arousing.\n\n\"It's been longer than that,\" Jessica argued breathlessly.\n\nAmanda just chuckled again, reaching out to ever so gently brush one nipple with her bare finger. Jessica let out a quiet squeak, struggling again for freedom and relief and more, but Amanda pulled her hand away again before once more blowing over the little nubs. \"I'm not counting the time you slept. It's your own fault for leaving that job half done.\"\n\nJessica couldn't believe what she was hearing, she hadn't expected it from another woman. \"What- I, I wasn't going to... not with you watching me like that!\"\n\n\"And look where it's gotten you,\" Amanda answered playfully. She turned her attention to the music and began to poke at the touch screen with purpose. \"This is a great phone,\" she mentioned, expertly navigating the menus. \"I have the same one. Same music program, too,\" she said with a grin and in moments the base was turned higher, amplifying every vibration.\n\nJessica couldn't help it as a groan escaped her throat. Her head fell back in frustration, the gentle vibe was still less than the lowest setting of her vibrator at home, but it had been constant now for far too long. She could feel Amanda move back up to her head and one of the woman's hands landed on her chest. Her manicured nails rested against a nipple as if by accident, stimulating it innocently as Amanda leaned close. \"Now now, hold still. I have work to do.\"\n\nMore than another hour passed, and Jessica was moaning more frequently now. She tensed and flexed her muscles, but she didn't have enough control to get off on just the motionless intruders inside of her. The vibration from the music wasn't enough to push her over the edge, just to draw her painfully close and hold her there. Amanda had been no help, speaking in that dark, seductive tone and making sure her breath fell across Jessica's helpless breasts, or whispered close to her neck or ear, anywhere sensitive and exposed. Most of her words were hushed and Jessica couldn't remember any for more than a few seconds, but that wasn't the point of speaking for Amanda, and she seemed pleased with the frequency she had to repeat directions.\n\nShe'd been there, being constantly wound tighter and tighter for three hours now. Finally, the doctor returned and Amanda had to stop her added torment, but Jessica found herself still trapped on the edge, even as the redhead took the phone in her hand. \"This needs a charge, I'll plug it in for us.\"\n\nJessica didn't respond beyond swallowing and trying to return some measure of focus. But even though the vibration was gone, the dildos were still trapped deep inside of her, and focus was not exactly an easy thing to find. She was only vaguely aware that Amanda should have gotten much more done than she did. The doctor seemed to chalk it up to the thicker solution and simply set to work, but Jessica still lay there trapped up to her elbows.\n\nAfter a little while, she realized Amanda was gone again. That must mean another client, she thought vaguely, finally starting to regain some of her faculties. She found the clock and saw now that it was nearly four. Sure enough, it wasn't long before Amanda was back and the doctor left again and Jessica struggled in her little prison once more. The doctor worked much faster than Amanda, possibly because the redhead didn't seem interested in setting the other girl free at all. But now the goo had been chiseled away down her forearm, now her hands were only trapped to just above the wrists.\n\nAmanda crossed to a little desk with a computer. This was where she had the phone plugged in and she brought it back to its previous resting spot, directly above Jessica's encased crotch. Amanda took the time to attach a little stand, angling the device so Jessica could see the screen. \"I thought music might be getting a little old, so I downloaded a movie for you to watch.\" She sounded so cheerful saying it that Jessica felt it must have been some sort of trick. Amanda attached the headphones again, making sure they were firmly in place as the movie began.\n\nAlmost immediately, porn movies started to play. Not just a porno, it was specifically the sex scenes from a whole bunch of pornos. The first was several minutes long, then moved right into another scene with completely different actors. There was no end to the visual onslaught and plenty of moaning to entice the ears. Just watching normally, it wouldn't have been long before Jessica went and found her toys for some satisfaction. But now she was stuck, hands trapped and with soft, unyielding dildos deep inside of her that she just couldn't move enough to come.\n\n\"You should have something to drink,\" Amanda said and produced a cup of water with a straw in it. Jessica was quite thirsty and sucked eagerly until Amanda pulled the liquid away again. \"And I'll get a fan, you look a bit warm.\" Jessica had no doubt she was flushed a bright red, but they both know it wasn't because of the heat.\n\n\"Wha- what are you doing?\" she asked vaguely, watching Amanda instead of the screen before her. The redhead had retrieved a rotating fan with several streamers attached to it. She didn't realize their true purpose until Amanda flipped the device on. The cool air actually did feel good against her skin, but as the fan shifted first up and then down Jessica's torso, the strings flew out to tickle her. The little strands flickered over her nipples, her stomach and right side, and even just up to her neck. Jessica let out a soft cry and an uncompromised moan, wanting anything now that meant satisfaction. But the soft, tickling streamers were merely one more sensation that would not fulfill her, would not bring the satisfaction she now craved.\n\nAmanda settled at the end of the tub, mostly out of view, and Jessica's eyes were drawn to the screen again in time to see a shapely Latina get pulled up as a muscular man plowed into her from behind. Her ample tits jiggled up and down and her high-pitched moans filled Jessica's ears as the trapped woman added several moans of her own, unable to hold them back. Meanwhile Amanda went to work on the excess gel, not needing to be as careful with the stuff not close to skin.\n\nIt took most of the remaining hour before the doctor returned. He rushed in and said something about a family emergency, but Amanda just smiled, assuring him the treatment would be finished in another hour at most. The man hurried out without once noticing the movies on Jessica's screen. Before much longer, Amanda had finished with her task and triumphantly removed the plugs from the inserts, all the excess cleared away.",
        "She stood, finally stopping the movie and drawing Jessica's attention. By now, five hours with no relief, her eyes were dark and unfocussed, this only made Amanda smile. \"Tell me, do you want to come?\" Jessica nodded without hesitation, desperate and no longer caring about embarrassment. \"There will be a price,\" Amanda warned, but Jessica just nodded again, writhing desperately as she tried to move her hips. \"Okay, hang on then.\"\n\nShe started another movie, a new one, and left Jessica to it. This movie was worse than the last, not because it was any more graphic, but because the situations were so similar. The woman in this fell into a hole, her arms trapped at her side and her openings left exposed for any who come along. And right away a couple of handsome, well-hung gentlemen do happen along, taking advantage of this poor trapped maiden. As she watched, Jessica repeatedly pulled at her hands, tensing and wriggling around her own invaders to no avail while the on-screen star moaned and cried out in pleasure.\n\nIt took several minutes for Amanda to return. Long enough for the heroine on screen to reach more than one incredible orgasm. Then the redhead was back and reaching, stealing away the movie and the headphones so suddenly that their lack was like losing the music's vibration earlier. Jessica protested, writhing now, completely unable to get any relief and only pushed further by the streamers dancing mercilessly overly sensitized flesh. Then Amanda was leaning in again and the fan pushed her hair over Jessica's chest, too, right across her nipples. She almost cried in frustration.\n\n\"You want to come?\" Amanda questioned again.\n\nJessica knew she shouldn't say yes, she knew by now that this was a game. But gods, she couldn't stand it any longer, she needed release and she couldn't get it alone. \"Please, yes!\" she answered enthusiastically.\n\nThen Amanda moved to her waist and something thick was sliding into each of the insertions. Jessica moaned loudly, her head falling back again at the added girth. Amanda shifted back to her previous position and held up a red rubber ball gag for Jessica to see. Immediately her eyes widened, teeth clamping shut as she shook her head. \"But I thought you wanted to come?\" Amanda acted disappointed and put the gag down on Jessica's chest.\n\nJessica was left to consider for a few seconds as Amanda brought up another program that looked freshly installed onto her phone. Jessica looked from the ball up to the phone and she could just see the words 'increasing over' and then she could feel the vibrator. The one in her ass started, on what must have been the lowest setting, and Jessica understood. It was going to start low and get higher, but over how long? She was still for a moment and could not feel a change, so it was probably a long time, long enough that she might go mad first.\n\nAmanda leaned in again, idly tracing around Jessica's erect nipples without touching them. \"We're alone in this office, but there are other offices in the building. Do you want them to hear you screaming?\"\n\nJessica was finding it harder and harder to concentrate. It was another sensation, another thing winding her up, but she couldn't come from this, and she didn't know how long before the vibration would increase to enough. \"A-all right.\"\n\n\"That's what I thought you'd say,\" Amanda said as she moved to take the gag. She held it out and after a hesitation, Jessica allowed her to push the stiff ball between her teeth. As the redhead moved behind her to fasten the strap, Jessica saw her phone's screen and she let out a groan of protest. 'Increase over 3 hours'. The gag had already clicked into place and Amanda reached forward to lightly graze a nipple with her nails. \"I need to go out and get something to eat. Do you think you'll be okay?\" Jessica jerked her head no, struggled and pulled against her bonds, but she was trapped too securely to get away, the gel was still stuck to the tub, too firm for her to even attempt to rise.\n\n\"But you'll get to come, I promised that.\" Amanda moved down beside her legs, taking the phone to adjust settings again. Jessica felt the vibrator in his pussy come to life, also on its absolute lowest setting. She thrashed, wanting more than that, needing something more. But the little bit of vibration was enough, steadily pushing her to the very edge. Within a minute, she reached the edge and just as she was about to come, the vibrators both went silent.\n\nJessica screamed protest around the ball gag, her back arching and thrusting her perky breasts high into the air. But all sensation had stopped and she was left alone to claw her way to completion. She was too close now and the orgasm came regardless, but it was so bland, so quiet that it seeped into her, utterly ruined. The relief didn't come, only a raging desire for a real orgasm, one that would set her nerves on fire and make her need the gag. Every muscle in Jessica's hips and stomach twitched, wanting more, needing release and complaining loudly about their denial.\n\nAs the girl struggled and groaned around her gag, Amanda just smiled. She calmly programmed the remote dildos, then set up her special movies again and started the clips. Jessica's eyes were locked on her, pleading for mercy, but Amanda just smiled as she placed the earphones again. \"Don't worry, you'll come,\" she whispered, and then all Jessica could hear were the moans and the sounds of sex that slowly drew her eyes back to the screen. Amanda scooted the fan a touch closer, pulled her hair back into a tail, and left the room, dimming the lights as she went.\n\nJessica lay there helplessly, panting and writhing for some form of relief. The fan no longer spun, its cool breeze and taunting streamers were pointing directly at her breasts to constantly tease her nipples. The vibrator in her ass started again, but still so low she knew it couldn't get her to completion. Regardless of how unfulfilling it was, the ruined orgasm did give her muscles some measure of rest, it would take that much longer before such weak stimulation would allow her to come again. If she could come at all, the dildo in her pussy still sitting cold and motionless.\n\nShe struggled, trying to pull her hands any direction, but even with all her strength she couldn't move the insertions inside of her, they sat exactly where they were placed, held by gel and dildos and plugs. She twisted, but couldn't turn enough to get away from the fan at all, and her hooked earphones stayed in place, forcing her to listen to the sounds of pleasure she couldn't get. Jessica let out a cry of pure frustration around the gag, moaning and fighting until she had no choice but to rest.\n\nThe program had said three hours, Jessica remembered faintly. A glance at the clock showed barely a half hour had passed. She supposed the vibrator increased, but she still could not tell, too wound up to make sense of fine differences like that. Then, with no warning, the dildo in her pussy sprang to life. It started small, as low as it had been before, but as the vibration quickly grew and swelled, Jessica nearly cried with relief. She tensed and rode the waves of vibration as they pushed her closer, closer-\n\nThe vibe died completely, a little too soon for her to come. She screamed around the gag, thrashing again with absolutely no result. So close, she had been so close to that mind-blowing orgasm she could feel lurking, growing, just out of her reach. Then she noticed something on the screen of her phone - a little bar that was slowly filling with color, just barely visible behind the movie that was playing. She could guess the bar was a timer, and she could make out a tic mark that had just been passed by the growing green bar. That had to be the vibe program, and that meant more pleasure would come with the little lines...\n\nJessica strained to see clearly, making out the fraction that is visible. For a moment she couldn't see any other little lines, but then she noticed them at the end of the timer. They were very hard to see, but the clumping towards the end let her know what to look for. Until the end, the lines are very spaced out however, and the girl knew she had time. There was no way to move the clock faster, she could only lay there in torment and hope the next time would be enough.\n\nHer eyes were drawn to the movie again, no choice but to watch as a shapely actress was taken from both sides. At one point the man behind her took hold of her arms and held them back. Jessica moaned, pulling at her own hands. It was easy to imagine that man behind her, the gag in her mouth was a poor substitute for a cock, but it was enough to drive her mad with desire and need.\n\nJessica didn't check the clock again, she couldn't focus enough to remember silly things like time. But every half hour, the vibrator in her pussy would start again, always low but building fast, always cutting out before she could reach what she needed. The third time, a full hour and a half into her solitary torment, she came close, so close. But in a way, that was much worse because the one in her ass was moving enough by then that it managed to push her over the edge. Jessica sobbed around the gag as another pathetic, worthless, ruined orgasm slowly soaked into her muscles, spreading out from her crotch. Like a reset button without any sort of actual relief, the tension and feelings quickly started building again, driving her further and further into torment.\n\nBy the time the final half hour approached, tears ran down Jessica's cheeks. She could hardly see the screen of her phone, but that didn't matter with the chorus of erotic moans and shouts filling her ears. She needed to come, really come. The vibrator in her pussy started again, and just like every time before it cut out abruptly a few seconds too soon for Jessica. She gnawed at the gag, but by now was well out of energy to thrash about in an effort to reach completion. It was a few minutes before the vibe started again, sudden and strong and then just as quickly gone. It surprised her and the sudden start meant she had no chance to make use of the sensation.\n\nThen again, just as sudden and short, and nothing. Jessica screamed again around the gag, managing to thrash slightly before slumping back and panting tiredly. The vibe went off again. And again, at completely random intervals and never long enough to bring her to her end. Jessica twitched and jerked, filling the air in the room with moans and whimpers and muffled pleas for more, but more didn't seem as if it would ever come. These were the clustered lines she had seen, a distant part of Jessica realized. This same part remembered how many lines there had been...dozens, all clumped in that last bit of the timer. She began to fight again, struggling to flex long exhausted muscles for any help.\n\nThe vibrator in her ass was going at full speed now, and Jessica could feel the little textured nubs sending each vibration through every sensitive nerve she had. Her gspot was throbbing, wanting more sensation and disappointed at every too-brief buzz of attention. Every part of her sex was hot and wet, begging for enough sensation to satisfy. Only her clit remained untouched, trapped against just the unmoving white gel. The vibrations traveled, yes, but not as well, it was simply not enough.\n\nBehind her, Jessica heard the door open and in a moment, Amanda was walking into view again. She was absolutely poured into the dress she was wearing -- was it that tight before? Jessica couldn't look away from her perfect, bouncing breasts that were trying oh so hard to pop out of that tiny, low cut top. Jessica moaned wantonly and Amanda turned with a knowing smile. \"Having fun?\"\n\nSlowly, Amanda crossed the room, swaying her hips as she went and only looking back once to ensure the other girl was still watching. She wore stilettoes now and the strappy heels only increased the attractive sway. As she retrieved something from the desk and turned, Jessica's eyes were drawn up to admire the way those heels made her breasts jiggle and sway to and fro as she returned.\n\nAmanda set the items on Jessica's stomach for easy access and the trapped girl found herself staring at one of the largest inserts and a solid purple dildo that was just as big. Then Amanda was moving again, carefully climbing up onto the tub, facing the other woman. She put her legs on the wide ledges of the sides and hooked her feet over the far end. In just a few moments she was kneeling, straddling the tub and Jessica in it. Her skirt rolled up, bunched around her hips to allow her legs to spread and showing off her smooth pussy, covered in only a very small red thong the same dark shade as the woman's hair.\n\nSlowly, oh so slowly, she undid the top button of her dress, then the next. Jessica didn't even blink, wanting this and not thinking enough anymore to fight. Amanda grinned that sexy smile as she leaned down, turning the phone so she could adjust the programs. Gravity pulled her tits low, straining against the fabric and pushing it further apart. Hey silky red bra was too small, stretched completely tight to contain the pale orbs. Jessica found herself trying to lean forward, pulling at her hands and wanting to touch but of course still quite trapped.\n\nAmanda chuckled as she sat back. The vibrators died off slowly, the one in her ass decreasing to nothing while the one in her pussy gave on final teasing burst of pleasure and then silence. Amanda put in a quick command to the movie program so it would gradually fade to silence over a minute or so. Then she leaned forward again, and this time she undid the front clasp of her bra so her boobs fell forward more. She grabbed the two dildos and sat up again to adjust her breasts. The pale globes were bursting toward freedom, but the dress and all the rest of the fabric still held them together and up, her nipples just peeking out from the fabric. Amanda adjusted them to make sure of this, and spent a minute just playing with the bars that pierced the small nubs.\n\nThe fan was still going, the only sensation left as it constantly teased Jessica's own breasts, relentless and maddening. She shifted, but could get no relief as Amanda took hold of one soft insert. The redhead brought the dildo to her moist, wanting sex, sliding the thong to one side. She pressed the thick girth slowly forward, moaning loudly as it slid into her passage. Slowly she began to move and shift the monster back and forth, pushing just a little deeper each time. Soon she didn't need her other hand to guide it and moved back to her breasts, pulling and pinching, teasing first one engorged nipple and then the other.\n\nJessica didn't notice the movie soundtrack fade, but within minutes she was listening only to her own muffled moans and pleas, and Amanda's unhindered noises of ecstasy. It wasn't long before the redhead was moving her hips, swirling and thrusting, riding her dildo with no restraint. But finally she slowed, pulling the insert free with a low moan of protest. The look on her face was one of want and denial, the same look Jessica had hours ago when all of this was still just beginning.\n\nExcept Amanda had the power to end her suffering. She took the other dildo in hand and raised it to her mouth. She parted her lips deliberately, pushing in just the curved tip and then letting her tongue dart out to slicken the whole surface as far as she could reach. Then she slowly pulled it back, moaning and twisting her tongue all around until it was too far away. She lowered it to her waiting entrance, steadied herself and slid it in to the hilt. For a moment she was still, her eyes rolled back slightly. Then she activated the thing and her whole body jerked, a loud and low moan pulled from her throat. Slowly she pulled the dildo out, then pressed it back in just as deep before she pulled it out again. Amanda's breath hitched and she hesitated a long moment before pulling the dildo free again, away from her dripping need. She bit her lip and her free hand briefly pulled at her nipple piercings, but her will held out and she kept herself on the edge.\n\nAs the redhead regained a little control, she held her vibrator out for Jessica to see. The entire thing shook faintly, but the tip was pulsing in a distinct pattern, and obviously a higher speed. A section of the shaft was covered in dozens of little balls beneath the surface, creating a smooth and bumpy mass, all of which was rotating slowly around as the tip spun. Amanda reached for the controls at the base and turned it up, showing it was still on a low setting and just how fast it could become. Jessica could hear the plastic buzzing, but as if it needed proof Amanda held it down, pressing against her clit hard. For the briefest second, the vibration traveled through the inch of gel and Jessica jerked and twitched, then screamed around her gag for more, please gods, more!\n\nAmanda gave a breathy laugh and turned the vibrator off again as she held it up. Slowly Jessica regained enough focus to watch as the redhead slowly pushed the large vibe inside the insertion, her own juices providing plenty of lube. Then she turned it on again, and Jessica could see the entire upper half twitch and jerk and turn as the powerful motor activated. She begged with her eyes, anything if she could just have that vibrator and be allowed to come.\n\nAmanda sat back again, still kneeling on the sides of the tub and suspended over the trapped girl. She leaned further back this time, once again turning off the vibe and using both hands to guide the beast into her waiting pussy. Immediately she moaned again, gasping and thrusting unconsciously as the thick dildo split her slowly, until finally sinking as deep as it could go and leaving only the base sitting just past her throbbing lips. She sat up fully again, feeling the controls and counting them without the need for sight. \"Increasing, to full power,\" she moaned as her fingers flipped different switches on and off.\n\nJessica could hear the faint buzz as it started, but it was barely audible, starting at its lowest setting in a quickened mirror of Jessica's own torture. Then the redhead slid in the plastic stopper that kept the dildo in place and moved her thong to hold the whole package in. She was already panting, muscles twitching slightly as the pleasure built. Amanda leaned forward, putting her hands by Jessica's arms and letting her soft hair fall down into the path of the fan. Her eyes closed in an expression of barely restrained bliss and she bit her lip again.\n\nSlowly, Amanda looked at Jessica below her, still flushed and panting, struggling but out of any energy to fight. \"It's about half strength now,\" she whispered and then moaned long and low. Jessica could only whimper around her gag, pushed on by the display and still unable to get any relief herself. Amanda's mouth fell open, momentarily frozen and letting out several sharp gasps and moans. She groaned deeply as she forced herself to move again, tapping Jessica's phone a few times. \"Increasing,\" she said again, and her voice was shaking with pleasure. \"To full power.\"\n\nJessica could feel the vibrators start, the sensation building quickly as their strength grew. The redhead was locked above her on all fours, those luscious breasts hanging practically free, swaying back and forth as Amanda shifted and thrust against nothing. Her face was a mask of complete ecstasy as her mouth opened again in a round 'o' of bliss and her eyes rolled back. Her moans cut off, and Jessica knew she must have been holding back the screams of pleasure as her body twitched and tensed and then jerked once and froze.\n\nJessica was writhing again, struggling for more sensation herself, praying the vibrations wouldn't cut out again. Praying to Amanda, her new redheaded god, because the vibes didn't die. A moment after the redhead began to move again, twisting and grinding against her private tormentor, Jessica finally toppled over the edge she'd been held on all day. She screamed and jerked, her back arched as high as it could go. She felt a mouth on her nipples and knew it must be the redhead, but nothing mattered except the crashing, spinning orgasm that stole her breath, her sight, her very senses.",
        "She collapsed back into the tub, glistening in sweat which quickly cooled in the breeze of the fan. Slowly the world came back to her and Jessica could hear her own voice moaning, still muffled by rubber. Amanda's quick, high pants and cries filled the room and Jessica watched as she twisted and bounced, helplessly grinding back and forth. She had moved one hand back, alternately pinching and teasing her nipples, or unabashedly working her clit as she moaned around another orgasm.\n\nJessica realized the inserts inside of her are still buzzing away, slowly getting stronger as the seconds ticked by. That was what drove her smothered moans as she was pushed to another orgasm herself. Suddenly Amanda reached down, mercilessly tweaking Jessica's nipples. She was far beyond pain by now and the rough sensation tipped her over the edge, screaming again as her body shook with completion. Still the vibrators rose and eventually reached their highest setting, staying there. Jessica shook and twitched as another orgasm ripped through her, just as powerful as the others. It seemed after a day of forced denial now she was trapped in endless pleasure that kept building and building until it broke and sent her into screaming pleasure, only to start the cycle all over again.\n\nAmanda showed no signs of tiring, still rocking and thrashing, moaning and touching and shuddering in the grip of her own bliss. Jessica barely even noticed as she was pushed further and further, coming again and again and again until that was all she was aware of. Finally, after hours of denial andmore than a dozen orgasms, Jessica reached a peak and fell over into darkness, passing out from the overload.\n\n-o-o-o-o-o-\n\nWhen Jessica woke again, she lay naked in the padded tub. There was no vibration, no insertions, no goo. She shifted slowly and each movement brought on complaint from tired muscles. But she was free, completely, and she slowly got up and climbed out into the room. Everything had been cleaned and put away. A glance at the wall clock showed it was approaching midnight, so she knew it had been a few hours since she passed out. She seemed to be alone now, and after a quick search she located her clothing, folded on a bench beside several small boxes.\n\nJessica went to the packages slowly, her legs were still shaking, barely able to hold her weight. She sat on the bench and took the largest into her hands and opened the lid. Inside were her new panties, shaped and polished and looking perfect with the two inserts resting inside attached to the crotch. Jessica actually moaned slightly as she studied them, then set the box aside.\n\nThe next box contained the two vibrators that had been driving her mad, glistening and smelling faintly of some fruity cleaner. A hand written note rested in the box with the devices that read \"An apology from Dr. Zee, for the extra time you had to spend here today. The program is still on your phone.\" Jessica paused to lift her phone -- fully charged again and resting on top of her clothes. Sure enough, an icon titled FUN was on her main page.\n\nJessica set the phone down again, lifting the last box. As she opened it, she saw the massive rotating behemoth that Amanda had been using -- or at least one of the same model, it looked brand new. There was another written note resting with it, this one reading \"A thank you from me.\" Jessica lifted the paper and was surprised when a printed business card fell free. She set the note aside and examined this brightly colored card instead.\n\n\"The Redhead!\" It read in bold print on one side, giving an address and hours of operation. It opened at midnight, she noticed and then flipped it over to read the printed message. \"Mistress Amanda invites you to The Redhead, a private club for open minded adults.\"\n\nJessica just sat there, looking at the card for a long time. Finally she looked at the clock again -- five to the hour, this club would be opening soon. She stared for a while longer at the card, re-reading the most important words. Private. Invite. And especially Mistress Amanda. Finally Jessica began to move and get ready to leave. She put the card into her wallet and put that and her phone in her purse with the box holding the enormous vibe.\n\nThen she stood, slowly sliding the new panties on. The inserts slid home with little resistance and drew a moan from her throat. Then she took the vibrators, slipping them into the inserts and popping in the plastic stops to keep them in place. She tried them out, walking and even jumping a couple of times. Every stride sent a little thrill up her spine, but everything stayed where it was meant to, exactly like the new material promised. This is what made the process all worth it.\n\nQuickly Jessica pulled on her jeans, then her bra and shirt. She grabbed her purse and headed out, noticing a little post-it that told her the door would lock behind her. Jessica's was the only car in the lot, still close to the door where she parked this morning. She climbed in and had to pause as she started it, gasping as the vibration of the car traveled through her inserts, just as the music had done before.\n\nWell, if she hadn't been sure before, she was positive now. Jessica pulled the little card from her wallet, checking the address one more time. It wasn't far, she could be there in ten minutes even if the lights were bad. As she drove the streets, her foot felt heavy and the club doors were just opening as she snagged a spot across the street to park.\n\nJessica got out of her car, staring across as a few redheaded girls greeted guests and invited them inside. She could see Amanda, dressed in black now with less skin showing, but every inch of fabric looking painted on. Amanda looked back across the street and she smiled when she saw the other girl. She stepped back towards the doors as their eyes met, crooking her finger at Jessica in a beckoning way. Jessica clutched her purse and made sure the car was locked before checking traffic and hurrying after her new mistress, already eagerly looking forward to another several hours of fun."
    ],
    "authorname": "LilyKalanoa",
    "tags": [
        "bondage",
        "denial",
        "vibrator",
        "tease",
        "gag",
        "forced orgasm",
        "toys"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-clinic-12"
}