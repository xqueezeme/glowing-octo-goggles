{
    "title": "The Morrisons Ch. 29",
    "pages": [
        "I appreciate the excellent job Fat_Dad has done editing this chapter of \"The Morrisons\" we have combined our story characters, but each story is separate from the other. \n\n~ ~ ~ ~ ~ ~ ~ ~\n\n**PLEASE NOTE:\n\n**Author's Note: The Morrisons is a continuing story where each chapter builds on previous chapters. If this is your first encounter with The Morrisons, I'd like to suggest you read the previous chapters prior to reading this one. Please enjoy! \n\n**Before you read this chapter, be advised that it contains very graphic depictions of raw sex between two or more consenting people. IF such depictions upset you or make you lose sleep, PLEASE don't read any further. It's a different-strokes-for-different-folks kind of story. \n\n**This chapter contains incest between father-daughter, sister-sister, mother-daughter. \n\n**It also contains plenty of nudism and more exhibitionism than in other chapters of The Morrisons. Please remember the plot for this story is a family setting and things happen in their lives just like things are not always the same in your life. If this isn't your thing, please don't read this chapter and then leave a derogatory comment. \n\n~ ~ ~ ~ ~ ~ ~ ~\n\nFor the record: All characters engaging in any sexual activities - are of legal age!\n\n~ ~ ~ ~ ~ ~ ~ ~\n\n******************\n\nChapter 29\n\nWe continued our flight without any problems, and we landed in Frankfurt, Germany approximately thirty minutes earlier than our pilot had predicted. As before we waited on the plane for the flight crew to go through their post flight checks and make the arrangements for our plane to be checked over and stored at the airport until we finished our business.\n\nWhen everything was arranged, we left the plane and met the ground crew who transported our luggage into the terminal. We cleared customs without a problem and met Hans who had a cart and a wide grin on his face when he spotted us. We put our luggage on the cart and Hans walked over to me and gave me a man hug that lasted more than a few seconds. Then he turned to Beth and gave her a gentler hug and a kiss on each cheek. I introduced Hans to my secretaries, flight attendants and flight crew. Hans greeted each one with a simple handshake and then told us to follow him. He pulled the cart and we went out to the apron next to his vehicle. While we got in, Hans stored our luggage in the back. It didn't take him long to get to our hotel and even though they had bellboys, Hans once again grabbed a cart and loaded our luggage on it.\n\nBeth went to the desk and picked up all the room key cards before she returned to our group. The bellboy took the cart from Hans and we followed him. Hans stayed with me and we talked as we were led to our rooms. I invited Hans into our room, but he politely refused and said he would take a rain check and come by later after we rested. I shook his hand and he walked back down the hall and I closed the door. Even though there was plenty of room on the plane to stretch out, it felt great to be in a room.\n\nI asked Beth if she made any arrangements for dinner and she told me she'd told everyone, except me, to meet at the hotel restaurant around eight. I looked at my watch and saw we had a couple of hours to take a nap. I inquired which room she put Connie in, and she told me she had the connecting room to our suite. I walked to the door and opened our side and knocked on the other door. A few seconds later Connie answered the door with a wide smile on her face.\n\n\"Dan, I'm lost in this large room all by myself, this is nothing like what I am used to. The room is so huge, and I don't have anyone to share it with. Can you leave your door open, so I don't feel so alone?\"\n\n\"The reason I opened the door was to invite you in here. Beth purposely put you in that room, so we had this door between us.\"\n\n\"Oh, thank you, both of you. I thought I was going to be stuck in there by myself. I mean I'm not complaining, it's just something I'm not used to. I hope you understand.\"\n\n\"Yes, I do sweetheart. May I call you sweetheart in private Connie?\"\n\n\"Oh God yes, that makes me feel like I'm with someone who loves me, even though I don't have a partner on this trip. I really don't want a male partner because then they would expect me to fuck them. Well, that is unless I find someone who is really special, and we are attracted to each other immediately. Do you know what I mean? If I'm going to fuck anyone, I'd rather have you, Dan.\"\n\nConnie looked at Beth and said, \"My apologies to you Beth, I'm not trying to steal your man.\"\n\nBeth hurried over to Connie and hugged her and reassured her that she understood and told Connie she wasn't worried about me. Beth said, \"If you want to play with Dan, you have my permission. He's a good man Connie and he'd never hurt you or any other female. While we are in private, please feel free to do whatever your little heart desires with Dan or me. We, as you know, are not the traditional bosses.\"\n\n\"What am I going to be doing while you are in your meetings?\" Connie asked.\n\nI spoke up and said, \"Connie, you signed a confidentiality statement when you moved up to our offices, didn't you? Do you know what that means?\"\n\n\"Yes Dan, I know I can't reveal any information I learn or see, to anyone other than those who are supposed to hear it.\"\n\n\"Good, as long as you understand that, I am going to allow you to attend the meeting with us. I will make sure you have a steno pad and I want you to take notes of the information as the meeting progresses. Beth, Allison and Kelly will be busy with details about the other company and their computers will be hooked up with our company back home, to gather information I will need as I negotiate during the meeting. So, you aren't along on this trip to be just another pretty face, you are going to impress me with your ability to understand what's going on and take notes. After each meeting, I'm going to review your notes with you for anything you observed and heard that may be useful in my negotiations.\"\n\n\"Do you really mean I'm going to play an important part of this trip? I thought you only wanted Taffy and I to come along as, pardon the expression, as sexy toys.\"\n\n\"Connie dear\" Beth started, \"Dan does want you to dress sexy, just like he loves to have me dress in something sexy. However, Dan is not going to make you into a sex toy or object. He may request you wear something more revealing than you are used to but to put you out there as a \"sex toy\" he won't do that.\n\n\"Dan, Beth, may I speak freely without either of you getting upset?\"\n\nI spoke up and said, \"Anytime we are in a private setting like this Connie, I want you to feel like you can say whatever you want to me or Beth. You see, Beth started to work for me shortly after she graduated from high school, like you and Taffy. The only difference between then and now is, back then I was a nobody in our company. I was working as a department head at the bottom level and Beth was hired as my secretary. WE and I do mean WE, BETH AND I worked very hard to make our department the best in the company and that hard work paid off. As I was given the opportunity to advance up through the company, I wouldn't take the job at the next level up, unless Beth moved up with me as my secretary. It became quite a joke with the administration, especially Tom Banks the CEO, that if he was going to promote me, he had to promote Beth.\"\n\n\"Beth and I worked hard, and we worked together many nights very late and sometimes into the early mornings to improve our department. In all those years, Beth and I never fooled around even a little bit. We never even kissed each other. Did I notice that Beth had a sexy body, yes, I did, but I didn't do anything improper with her? What I'm trying to say is, although I've seen you naked, and we've shopped for sexy clothes, I would NEVER take advantage of you in any way and that includes asking you to fuck someone for the benefit of the company. Also, back then I was only a pee-on department manager, so I didn't really have any authority.\" \n\n\"That brings me to NOW! Now I am the CEO of our company and although we have the same work ethics of working hard, I really don't have anyone to impress anymore. I am at the top of the company and Beth is still my secretary. So, I hope you see, I'm not going to use you or your body to advance anything. However, as Beth said, I will most likely ask you to dress sexy, but still business like. When we are alone or in private, Beth and I cut loose. \n\n\"If both of you will indulge me for a few minutes, I know what you said when we bought all those clothes, but Taffy and I talked after, when we were by ourselves and thought Dan was going to have us fuck his clients. At that time our chain of thought was, why would a CEO of the company pay any attention to two young girls like us and on top of that go out of his way to buy us expensive clothes and lingerie. We are young and naive, and our old supervisor treated us like shit. We were new-hires we half expected that. As you know Dan, he called us all kinds of disparaging names and made both Taffy and I almost regret working for our company.\"\n\n\"I heard what you said on the plane and I listened carefully to the example you used for the flight attendants. All of that plus what you said here has given me a better understanding of what you expect of us. I can't wait to talk to Taffy and tell her that we were wrong about you.\"\n\n\"When you talk to Taffy, let her know that she will get to go on trips with us as well. Today's trip was a semi-emergency, so your number was the first dialed.\"\n\n\"Connie, we are going to take a shower and rest for a little bit before dinner would you like to join us?\" Beth asked.\n\n\"Are you sure that would be ok with Dan? I mean ...\" Connie paused\n\n\"Yes, my dear, the three of us can shower together. Our shower is a walk-in and there's plenty of room. Come with me and we can go into the bathroom and let Dan undress in the bedroom.\"\n\nAs the two of them walked away, Connie whispered something to Beth before they broke out in schoolgirl laughter.\n\nAfter I took off my clothes in the bedroom I walked into the bathroom and found both girls naked and still talking quietly. When I entered, their conversation stopped, and they stepped into the shower area. I stopped in front of the toilet and started to pee. I looked to my left and saw Connie watching the fluid blasting out of my cock. When she noticed me looking back at her she blushed but continued watching. I gave my cock a couple of shakes and then flushed the toilet.\n\nWhen I stepped into the shower I stood between Connie and Beth. Both were facing me, so I looked at one and then the other before saying, \"All of us are going to be squeaky clean before we get out of here.\"\n\nAfter our shower we took turns drying each other just like we took turns washing each other. When we were dry, Beth took Connie's hand and led her over to the king-sized bed. I watched both beautiful asses get on the bed before Beth beckoned me to join them by getting in the middle. I crawled up the bed and laid on my back between them and soon I had a young lady snuggle up to me from either side. I smiled and said, \"I love this. Thank you, ladies.\"\n\nWe sort of snoozed a little before Beth looked at the clock and announced it was time to get dressed for dinner. As I was getting up, I asked both girls to wear a semi-see through button up blouse without a bra and leave the top three buttons undone. I also asked them not to wear panties.\n\nIn return Beth told me she wanted me to wear my khaki slacks and a polo shirt. She said she wanted to see the hair on my chest so not to button any of the buttons.\n\nConnie left us and went to her room and when she returned, she had touched up her makeup and put her hair in a bun. Beth looked at her and said, \"I love the way you look. You truly are special. I love how your puffy nipples show through that blouse. That's not one of the blouses we bought when we went shopping is it?\"\n\nConnie smiled as she said, \"As you remember, Taffy and I talked after we went shopping with you. So, after we talked and after we got our first check, we went shopping again for more revealing clothes. We figured if Dan was going to use us for sex toys, we were going to dress the part because both of us are so grateful for everything he did for us. Not only did he hire us as secretaries but he hired our dads so our family could survive. We are very thankful and appreciative of everything. So now, I present to you, the new Connie Swensen. I was hoping for an opportunity to wear this without a bra so I could show off my titties to other people. I hope it's not too much, is it? I want people to look at my body.\" \n\n\"Oh girl!\" Beth exclaimed, \"You and I are going to get along just fine. I love people to look at my body also. I am, and I'll admit it to you, an exhibitionist.\"\n\nWe met all the others at the entrance to the dining room. We were escorted to a table so all of us could be seated together. I immediately noticed that Allison and Kelly weren't wearing a bra either and even though they didn't have see-through blouses on, every move they made, caused their breasts to swing.\n\nOnce seated, I announced to everyone to order what they want, it's on the company. As we enjoyed a few drinks while waiting for our dinners to arrive, I told everyone again, they could eat with us or they can wander off and find other places to eat. Also, if they did want to find other places to eat by themselves, to collect a receipt and fill out a voucher when we returned home. I stressed the fact that when they ate meals with us, it would go on the company account and they could save their money for personal items.\n\nWhen our meals arrived the aroma from all the different meals blended together and made me hungry enough to eat a horse, so to speak. Suddenly all that could be heard was the clinking of knives and forks on the plates, everyone ate their meal in silence. I ordered a few more bottles of wine to share around the table and when the meal was over, we relaxed, and the conversation flowed freely. I answered any question that was asked of me including our nudist habits. \n\nEven the flight crew asked questions about flying nude and I just told them, Beth and I loved to relax on a long trip, and we didn't find it comfortable to be bound up in clothes. I remined everyone they signed a confidentiality statement so any information they learned would stay between us, and not with anyone else in the company. Everyone at the table agreed. \n\nThe pilot asked me if it was true Captain Bob McGrath, Tom and Sam along with the flight attendants were in Hawaii at a nudist resort? I smiled at everyone and said, \"Up until the other day, Allison and Kelly were with us while Beth and I were at that same resort enjoying our honeymoon. I didn't go into any details but explained the four of us left early because we needed to get back to take care of some business that came up. \n\nWe took a break in our conversation to decide on what each of us wanted for dessert and to order coffee all around. As the coffee was being poured, I said, \"I don't want to cause any problems between the pilots and flight crews but when you take me places, unlike other CEOs, you most likely will stay where I stay, and if you want, eat where I eat. Notwithstanding, the exception will be when I need to attend a business-related dinner. But to answer your question, yes all of them are still at the resort but I think I heard, they will be leaving tomorrow.\"\n\nThe pilot said, \"I've never been a nudist but for a chance to go to Hawaii, I'd learn to be one, really quick. I've heard stories of the white sand beaches and the temperatures run about the same unless they have a storm and the gentle warm breezes. I'd love to take my wife to Hawaii and go lay in the nude, on a Hawaiian beach.\"\n\n\"That was a first time for me in Hawaii also and yes there is white sand and gentle warm breezes even at night. What I want to tell you is, I just took over as the company's CEO so it's not unrealistic to have a dream like that. I am different than Tom Banks and I anticipate a long career as the CEO. There might come a day when you will get to fly me to some place, you'll enjoy even more than here in Germany. Remember I plan to go to the thermal bath while I'm here. I think all of you will love that place. It's large and very family oriented. It also has steam baths and a very large communal shower. When we were here a short while ago, no one wanted to leave at the end of the night. We enjoyed it so much.\"\n\nOnce again when there was silence at our table, I told everyone I was going to retire to my room and get some rest because tomorrow would be an interesting day. As we stood up, Allison, Kelly and Connie stood up also. After we said our \"good nights\" to everyone, the five of us turned to leave. I heard the flight attendants and flight crew talking about going outside and checking out some of the local pubs. I guess they decided they didn't have to get up so early in the morning so they could party a little.\n\nWhile riding up in the elevator, I made sure to comment how I enjoyed seeing Connie's and Beth's breasts this evening. Then I turned to Allison and Kelly and congratulated them on their lack of a bra and how wonderful they looked when their breasts wobbled every time they moved. I told all of them how sexy they looked.\n\nAllison said, \"We were debating on wearing something like Connie and Beth but didn't know if you would approve so we decided to go braless. Next time we will know.\"\n\nBeth and Connie giggled and lifted their skirts and Beth said, \"We're not only braless we aren't wearing panties either.\"\n\nAllison and Kelly started laughing and raised their skirts up to their waists as they announced they weren't wearing panties either. While they had their skirts up, the elevator stopped, and two older couples entered. Both guys grinned and both women huffed.\n\nWhen we arrived at our floor, on the way out of the elevator, all four girls with me lifted the back of their skirts as they walked off the elevator to show both old couples none of them were wearing panties. As the doors closed, all four girls broke out in hysterical laughter and it reverberated down the hall of the quiet floor. When we got to our room, all of us entered and the girls continued to laugh and joke about the look on the guy's faces. They also joked about the four of them lifting their skirts together without even planning it in advance.\n\nAs always, the minute I entered my room, I started undressing. Beth was the second one to undress as we carried on our side of the conversation. Before long Kelly, Allison and Connie were also nude. I offered everyone a drink of either wine or a beer. The four girls wanted wine and I pulled a beer out of the refrigerator. We sat for maybe a half hour talking before, I said, \"You will have to excuse me in a few minutes, I am really getting tired.\"\n\nBefore I stood up, I looked at Allison and Kelly and told them if they wanted to spend time with us, all they had to do was knock on the door. Allison expressed the same sentiments that Connie had by telling us she was lonely in her big room. Kelly concurred.\n\nBeth looked at Connie as she asked, \"Do you want some company in your room and split between that room and ours. We can move Allison and Kelly into your room, leave the door open and you can go between our bed and the bed in that room. The only difference will be the bathroom time in the morning when we are all getting ready for the day. If the three of you agree, I can cancel the other two rooms tomorrow.\"\n\nAllison, Kelly and Connie talked amongst themselves before turning to Beth with Kelly saying, \"Ok, we'll share with you and Connie. The three of us were in Hawaii and we got to know each other well so why not continue our relationship? The only thing Allison and I need to do is go to our rooms and bring our luggage back here.\"",
        "Beth smiled as she said, \"OK, let's go get your luggage and move both of you in here tonight. Allison, I'll go with you and Connie can go with Kelly and we should be able to make it all in one trip.\"\n\nConnie started to pick up her dress when Beth stopped her and said, \"Oh no you don't. We are going to go just like we are. Dan will stay here with the door open.\"\n\nConnie looked around the room before the smile on her face widened at the thought of walking or running down the hall completely naked. Beth walked to the door and opened it without looking into the hallway first. She signaled for the other three girls to follow her and for me to hold the door. I followed the girls and then as I was instructed, I held the door open and watched as the four girls walked out into the hall and down towards the other rooms. \n\nWhile I was waiting, I stood in the open doorway and looked up and down the hall. I heard the elevator ding signaling the elevator stopped at our floor. I looked down that way but didn't see anyone. A few minutes later I heard Beth and Allison before I saw them enter the hall. They stopped and knocked on Kelly's room door. Someone answered the door and soon all four of the girls were walking towards me. Beth said, \"Hey look! I see a nice hard cock that I'm going to be riding in a few minutes. All of you are welcome to come into our bedroom and watch me manage that mean machine.\"\n\nBeth was first to pass by me entering the room and she gave my cock a quick stroke before she moved on. Next was Allison, she also stroked my cock as she passed by me. Connie hesitated but once I told her it was ok; she stroked my cock a few times before she moved into the room giving Kelly her turn to do the same.\n\nI closed the door and strolled into the bedroom and left the girls to sort out the details of their combined living. I crawled up on the bed and reached for a folder I'd placed on the nightstand. I opened it and turned over to the stats page to review some of my notes. I was alone for possibly fifteen or twenty minutes before I heard female voices coming closer. When I looked up, my eyes were once again greeted with the beauty of four naked females. All four of them bounced on my bed and I had to fold up my work and place it back on the nightstand. \n\nBefore things got out of hand, I said, \"I want the three of you to get on your computers early tomorrow morning and get me all the update information our investigation team has learned. I have a plan and I hope we can pull it off.\"\n\n\"Did Allison and Kelly get settled in the other room?\"\n\n\"Oh yes they did.\" Connie quickly replied.\n\nConnie was sitting on our bed between my feet, with her puffy nipples prominently enhancing her smallish breasts. She caught me looking so I said, \"I loved seeing your pink puffy nipples tonight all during dinner.\" \n\nConnie giggled. \"I saw you and the flight crew looking at me, well at my chest and it excited me. May I ask both of you a question?\"\n\n\"Sure, go ahead.\"\n\n\"May I sleep in here with both of you? I know Allison and Kelly are in the other room and I'll share the bed with them but, this is the first time I've ever been away from home and I'd really like to hug against you tonight. I'll do whatever you want me to do if you let me stay here.\"\n\n\"Connie, as you know we sleep in the nude and since Beth and I are a couple, we will most likely have sex before we go to sleep. Will it bother you being in bed with us while we have sex?\"\n\n\"Dan, we were in bed together earlier and I cuddled up to you, I actually loved the feeling it gave me knowing that I'm in a strange country and I have you to protect me. No offense Beth but your man has a way about him that makes me feel loved and safe.\"\n\n\"I know what you mean Connie and I'm not offended. As Dan said, we are going to have sex in a few minutes and if you want to be in bed with us or even if you want to join me taking care of him, you are welcome to join in. That's an open invitation from me that has nothing to do with Dan wanting your body.\"\n\nAllison and Kelly were sitting on the bed near Beth when Allison asked, \"Beth, may Kelly and I help you take care of Dan too? I mean, look at that wonderful tool of his, I envy you.\"\n\n\"Hey, what am I a piece of meat to you four lovely vultures. Isn't this reverse discrimination? I'm outnumbered by estrogen generated lovely ladies.\"\n\nAll four of them started to laugh at my puppy dog face, but I wasn't convincing enough. Beth saved me by saying, \"Allison and Kelly, you know that Dan is trying to get me pregnant and until he does, he's being a faithful husband and I'm the only one receiving all his baby making juice. Connie now you know, Dan won't be having sex with you either.\"\n\n\"Each of you have a lovely bald pussy, which I am willing to satisfy your oral needs, however if you sit on Dan's face, I'm positive he won't reject you.\"\n\n\"If I have my cycle figured out right, Terri and I should be able to produce twins from different mothers for Dan. Both Terri and I have been the only girls sharing Dan's cock since we figured out, we should be ovulating, and we hope Dan's sperm will fertilize the egg we have for him. \n\nAgain, as girls are known to do, they moved quickly to hug Beth and congratulate her. They kissed her cheeks and wished her good luck before they moved back to their spot. The conversation quickly turned to babies and how cute they were. The other three girls said they would do their best to tease me and keep me hard so Beth would have more chances to get pregnant.\n\nI interrupted them by saying, \"Ladies, if none of you have noticed, I don't need any more teasing, I've been laying here with a hardon and not one of you have done anything to solve the problem. Now, Beth you talked a good story, but can you fix the problem?\"\n\nLike lightening, Beth straddled my hips and raised up enough to line my cock up with her slightly open pink pussy. I reached out and put my hands on her hips to steady her and once she was lined up, she slowly slid down my dry pole, raised up, then down again and the next time she raised up my cock was coated with her juices.\n\n\"I love to watch people make love. In Hawaii, there were so much love making, I was horny all the time.\" Allison said quietly.\n\n\"Oh, this is so beautiful, I really envy Beth. I wish that was me up there.\" Connie whispered.\n\nKelly wasn't going to be left out by saying, \"Beth honey, I certainly hope this is the one time when he fertilizes your egg. That way I can say I was there at the very start of your baby.\"\n\nBeth was busy pumping up and down on my cock but took a breathless nanosecond to acknowledge the three other lady's comments. I helped lift Beth up after each thrust and combined with the fact that Connie had reached out and cupped my balls and were fondling them, I let Beth know I wasn't far from cummming.\n\nI felt a second hand and then a third hand on my balls and I shouted, \"BETH, I serious, I am going to cum soon, VERY SOON!\"\n\nBeth didn't respond to me, but she did start groaning and panting as her body started to shake. The tremors only increased.\n\nI felt one of the girls on my left move around and then felt her hair on my thigh before I felt a wet tongue swipe across my sack. The hands moved out of the way and suddenly both of my balls were enclosed in a warm wet mouth.\n\nThat's all it took for me, I yelled, \"BETH I'M CUMMMING! OH GOD! I CAN'T BELIEVE ...\n\nBeth on the other hand went rigid and she stopped breathing. Her body jerked in convulsions and her eyes rolled back in her head. I emptied my load into her womb, and she remained braced with her hands on my chest. When she didn't move, I became concerned and I started calling her name repeatedly with no response.\n\nThe three other girls moved out of the way and I quickly sat up and laid Beth backwards on the bed. She remained frozen in place and it took me a second to move away from her and move up to listen for her breathing and checking her heartbeat. The girls started asking if she was alright and it wasn't until a little over a minute before Beth's muscles relaxed and she started gasping for breath. Relief passed through all of us as we watched Beth slowly return to life.\n\n\"HOLY ... - OH MY GOD!\" Beth finally yelled. \"What the fuck did you guys do to me?\"\n\nAllison acting as the wise one said, \"I think Dan fucked you silly. You weren't even breathing.\"\n\n\"All I know is my body started to twirl and it got worse. Everything went black and all I can remember is the feeling, oh the wonderful feeling, damn that was ...\"\n\n\"I have to agree with Allison. I've heard about some people having such strong orgasms that they black out. In all my years, I've never seen it, that is, until now.\"\n\n\"WOW! I thought you were hurt. But I'm glad you are ok. You are ok, aren't you Beth?\" Connie added.\n\nBeth smiled and said, \"I can't even describe what I felt. Yes, I am ok.\"\n\nAll of us remained focused on Beth until she started to move on her own. I looked down in her face and said, \"You scared me baby. I don't want anything to happen to you. I love you.\"\n\nBeth smiled up at me as she said, \"You mean lil ole me scared to big bad Dan Morrison? Mark this on the calendar so we don't forget this day.\"\n\n\"You smart ass, I should turn you over my knee and spank you bottom until it was rosy red.\"\n\n\"WOW that's a switch. Feeling scared for me and then a second later you want to spank my bottom. Hummmmm, I think a spanking could be fun, now that I've had a second to think about it.\"\n\nBeth moved up the bed and reached for a pillow to put under her ass because she was told that's the best way to keep the sperm in her so it could get to her egg. She positioned herself with her legs spread and all three girls had a perfect view of her open pink pussy. \n\nWithout saying a word, Kelly crawled up between my legs and picked up my limp member and tentatively licked under the head and then to the top followed by going all the way down my shaft. When she raised up, she engulfed the whole mushroom head of my cock in her mouth and slid down until I entered her throat and her nose was pressed against my bald pubic area.\n\nConnie observed all of that with an astonished look on her face. Kelly didn't stop there, she kept moving up and down even when I started to get hard again. \n\nAllison wasn't going to be outdone even though she was the one who sucked my balls into her mouth while Beth was riding my cock. She leaned forward and licked Beth's clit and then looked up at her before asking, \"Are you up for this?\"\n\nBeth smiled and said, \"Sex is my favorite sport. I would love for you to lick me. I'll return the favor when I'm up to moving around again. Maybe tomorrow night, before I take Dan on for another round.\"\n\nConnie didn't want to be left out, so she moved up and presented her puffy nipples to me. While I sucked on them alternating between each one, I slipped two fingers into her sopping wet pussy. She was very tight, and her clit stood out prominently like the tiny button everyone uses to describe it. I'd circle around it and then rub across it a few times causing her hips to pump up and down every time I moved my wet finger across it.\n\nFinally, I said, \"Connie move up here and straddle my face, I want to taste your pussy.\"\n\nConnie moved quickly and put her left leg over to the other side, so she was facing toward Kelly, who was still sucking my cock. When she was situated herself, I had access not only to her open, pink pussy but her tiny rosebud ass ring.\n\nAt first, I kissed her clit and then licked her asshole. When I did the later, she visibly shivered and moaned softly. When I attacked her pussy and asshole with my tongue, within a few minutes I had Connie bouncing on my face trying desperately to get my tongue deeper inside her tight pussy. She leaned back and when she did, she almost smothered me when her lil asshole settled over my nose and her tender pussy sealed around my lips and she ground against me. I had to lift her hips so I could draw a breath before I let her back down. When her orgasm struck, she pressed down even harder on my face while her hips jerked erratically until it passed. Slowly, she leaned forward which allowed me to breathe again. She moved off my face and moved around until she was in position to lay a lip lock on me, which I never expected from someone so young. Our tongues battled as I filled Kelly's mouth full of my sperm. Kelly kept licking me until she had totally cleaned my cock. When I finished, Connie pulled back and said, \"WOW, that's a new experience for me. I've never kissed a guy while he was cumming before. It was fun and I want to do it again some time. Dan, I hope you don't think I'm being to forward with you.\"\n\n\"Connie, look around on the bed. Do we look bothered by anything that has been happening?\"\n\n\"No sir, what it does look like is everyone is having fun.\"\n\n\"Connie,\" Kelly said, \"Dan, Kim and Beth are not the jealous type and as long as all the participants agree, they have no problem with others having fun with them. I learned that on the way to Hawaii. I was like you not long ago. Now I enjoy being pleased and pleasing.\"\n\n\"Talk about being pleased, Kelly have you cum yet?\"\n\nKelly looked at me and said, \"No I haven't yet Dan, but I can wait until tomorrow.\"\n\n\"Well, get up here girl and I'll take care of your void.\"\n\nKelly didn't have to be asked twice, she moved forward facing me while I watched her beautiful pussy open and move closer to my mouth. I kissed the inside of her thighs as she moved into position. I looked up at her and said, \"Damn, you and the other girls are so beautiful. The view from down here is stupendous. \n\nAllison had stopped licking Beth's pussy because she didn't want her to cum again right away. When Allison rolled over on the bed while I was giving Kelly's pussy the licking she needed, Connie got up on her knees and said, \"Allison, I'm not really into girls but if you lie back and spread your legs, I'll give you an orgasm so all of us will be equal tonight.\"\n\nAllison moved into position and spread her legs before she said, \"Connie dear, you are going to fit in nicely with all of us. I'm glad Dan saved you from that asshole and brought you and Taffy up to our offices.\n\nConnie moved timidly between Allison's legs and kissed the lips of her pussy before she licked her clit a few times. Connie said, \"I don't have much experience with sex so all I can do is what feels good for me when I play with myself.\"\n\nBeth said, \"Honey, no one is ever an expert in sex. Each time we do it, we find something new which we like. So, do what makes you feel good and I'm sure you will make Allison feel good too.\"\n\nConnie went to work on Allison' pink slit with her little nub being the center of Connie's attention. It didn't take long to get Allison's hips moving in radical directions and her voice expressing her pleasure. Soon both Kelly and Allison were rivals for the most erotic noises and a race to the finish. \n\nKelly pressed your pussy tight against my face with her hips moving in intermittent and jerky motions while wild noises escaped her lips. Allison was right behind Kelly as she too began to make more sounds of satisfaction and bounced her hips in many directions making it hard for Connie to maintain contact to finish what she started. When the noise died down and only heavy breathing remained, I moved Kelly off me so I could catch my breath as well. \n\nThe five of us laid on the bed for several minutes before I said, \"I think I'm going to go take a leak and a quick shower before I go to sleep.\" I didn't move but the bed did as it was automatically vacated by Beth, followed closely by Allison, not far behind was Kelly while Connie looked up at me asking, \"I thought you were the one who had to take a leak?\"\n\nI smiled at Connie and said, \"Come up here and give me a hug and I'll tell you a story.\"\n\nConnie moved up so I could hug her, and I said, \"Every time I say something about taking a leak, I've learned that I'm going to be the last one to get that privilege when Beth, Kim and Terri are around. Now add Allison and Kelly to that list. When you are ready to jump and run into the bathroom, go ahead, I won't feel bad.\"\n\n\"Dan, I'm going to stay with you. I don't want you to think I'm brown-nosing either. I'll walk with you when you're ready.\"\n\n\"OK, let's walk because it should be our turn by the time, we get in there. Do you know about my habit for Beth, Kim and Terri?\"\n\n\"No, remember I'm a new player around here.\"\n\n\"Well Connie, you may think I'm a little kinky, but I have a habit of waiting for them to pee first, not to be construed with them racing into the bathroom when I say I have to pee. I love to wipe them after they pee. If you want to try it, I'll let you pee first and then I'll wipe you when you are finished.\"\n\n\"ARE YOU KIDDING ME?\" Connie exclaimed.\n\n\"No dear, you can ask any of the three already in there if that's true and they will tell you.\"\n\nConnie and I moved and got off the bed and we walked arm in arm into the bathroom. Kelly was just getting up from the toilet while Beth and Allison were already in the shower, washing each other's body. I offered Connie to pee first but said, \"Sit with your legs open while you pee. I'll wipe you when you're finished.\"\n\n\"Beth, does Dan wipe your pussy when you pee?\"\n\n\"Yes, he does and he's very good at it too. Connie, when he pees, you can hold his cock and make circles in the toilet water if you want.\"\n\nConnie timidly opened her legs and I squatted in front of her while she peed. I reached over and took a few sheets of toilet paper off the roll and folded while I waited for her to finish. When she did, I reached between her legs and wiped her. Connie giggled and when I asked her why she said, \"It just feels weird having a guy wipe my pussy for me.\"\n\nI dropped the paper in the toilet and Connie stood up and looked up at me. Her face was all rosy red from embarrassment. I took her in my arms and said, \"Sweetheart, there is nothing to be embarrassed about. You had to pee, and I don't mind wiping you when you finish. I've never been asked to wipe someone's ass after they took a shit but if I was asked, I would probably do that too.\"\n\nI stepped up to the toilet, lifted the seat before I asked Connie, \"Do you want to hold this for me?\"\n\nShe stepped beside me and I reached out for her hand and guided it to my cock and warned her not to squeeze to tight. She was nervous but she moved my cock around when the flow started and immediately started giggling. \"Beth, this is so fucking weird. Even more weird than Dan wiping my pussy. God, I love this adventure, I can't wait to see what happens next.\"\n\n\"Next we get in the shower and like all of them in there now, you wash me, and I'll wash you.\"\n\n\"This is so wild. Let's go Dan, I want to feel your hands all over my body.\"\n\nConnie and I entered the shower and with her standing in front of me while we waited to get under the spray, I put my arms around her and cupped her young titties and tweaked her puffy nipples while gently massaging them. She leaned back into me and put her head on my chest and made small noises to let me know she appreciated what I was doing.\n\nOur turn came when the other three females stepped out and grabbed towels. Beth patted Connie on her ass and said, \"Have fun in there. It's fun getting all slippery in the shower.\"\n\nConnie smiled and replied, \"I'm only going with the flow. So far the flow has been a blast and almost like a dream I don't want to wake up from.\"\n\nI let Connie get her hair wet before I applied the shampoo. Again, she leaned into me but this time she was facing me. I washed her hair thoroughly before we rinsed out the shampoo. I reached for the conditioner while she finished rinsing. I administered the conditioner to her hair and made sure it coated all her hair.",
        "Connie, in the meantime picked up my scroungy, applied my manly body wash before she started at my neck and working her way down my chest and abdomen. I finished the conditioner in her hair, and we rinsed it out before we washed each other's body. I made sure I spent plenty of time washing her titties and pussy and she made sure to spend plenty of time washing my cock. Towards the end of our shower she looked up at me, \"May I kiss you?\"\n\nInstead of answering, I leaned down and our lips met momentarily before we hugged each other's naked body tightly and kissed passionately. My hard cock was trapped between our bellies and Connie moved side to side to roll my cock on her belly. When our kiss ended, she looked into my eyes and simply said, \"Thank you for everything you've down for me and my family. I will work hard to prove you didn't make a wrong choice.\"\n\nI looked into her eyes as I said, \"I already know I made the right choice with both you and Taffy. This part of you being chosen was not in the plan when I gave you your current positions. I am the one who is grateful for you trusting me enough to allow me to view and play with your naked body. I am also thrilled beyond belief that you allowed me to take you shopping to buy some clothes. Sweetheart, as long as you work for me, I will protect you. Both of you girls are special and I'm sorry you were treated badly when you first started working at our company.\"\n\n\"Tomorrow, I'm going to surprise you with my note taking. I promise to get as much as I can even though I might not know all the terms you use in doing business.\"\n\n\"Don't worry sweetheart, you will find out that I'm a different type of boss. I believe everyone deserves a chance to prove their worth. It's not always the college graduate who is the most impressive although they can usually interview for a position better than someone who only graduated high school. Sometimes college graduates are too cocky because of their education and they sometimes think they are too good to do unskilled jobs. I'm betting you will exceed my expectations.\"\n\nWe finished drying each other and walked into the bedroom to find only Beth laying on our bed. She still had her ass propped up on the pillow and her legs spread so we had a clear view of her lovely pussy. We stopped and I said, \"I love your pose darling. If I didn't need to get some sleep, I'd crawl between those lovely legs of yours and have a third or fourth dessert tonight.\"\n\n\"Come to bed, both of you. Connie my dear, you get the other side of Dan tonight. I heard you two talking in the shower. Connie everything Dan told you in there is absolutely true. I also expect you to go far in our company.\" Beth said sweetly.\n\nThe three of us cuddled on the bed, to fall asleep. I don't remember anything until I slowly woke up and realized my morning wood was tenting the sheet and I couldn't move because I had Beth lying up against me on one side and Connie in the same position on my other side. I wiggled a little and mumbled the fateful words, \"I have to pee.\"\n\nThose few words were like the gates opening at the races, with Beth throwing off the sheet and, in a flash, she darted for the bathroom. I looked at Connie and said, \"Come on, let's go, she'll be done in a second.\"\n\nWe rolled out of bed and Beth was still on the toilet when we walked in. Connie got embarrassed and started to back out of the door, but I told her in our relationship we don't have any privacy. Our house always has open doors. With that I walked over and tore off a few pieces of toilet paper and folded it and waited for Beth to open her legs. When she did, I reach between them and wiped her pussy. Connie was by the door and exclaimed, \"Wow, you do wipe her pussy after she pees. I thought you were joking with me last night.\"\n\n\"Yes, I do and if you come over here and pee, I'll wipe your pussy again when you finish. I been trying to tell you; I am a different kind of guy. I don't mind helping my lady or ladies, whatever the case.\"\n\nConnie took her position on the toilet seat and kept her knees mostly closed until I squatted down in front of her and ripped some paper off the roll and folded it. She opened her legs in time for me to see the last bit of her stream gushing out of her. When she stopped dripping, I reached between her legs and wiped her pussy. Connie's face was rosy red again, but she took my hand and I helped her stand up.\n\nBeth saw her hesitation and walked over to us and said, \"Connie you get on that side and I'll stay on this side. When Dan steps up to the toilet, reach around him and take a hold of his cock. Don't squeeze it too hard otherwise we will be here all day.\" \n\nI stepped up to the toilet and Beth was the first to hold my cock. Tentatively, Connie reached around me and used only her index finger and her thumb to hold me. I felt the urge to turn the water hose on, but it took a few seconds to reach the end of the hose. When it did, Connie jumped and moved my cock just enough to cause me to piss on the back of the bowl for a split second before Beth got me under control and I pissed in the water. Beth moved my cock around and made circles in the water at the same time she said, \"Kim and I do this all the time for him. I've even written my name a few times while he was peeing.\"\n\n\"This is so fucking weird. First a guy wipes my pussy and now I'm holding his cock while he pisses. Does it get anymore weird than this?\" Connie asked.\n\n\"Is this something that you don't want to do again Connie?\" I asked\n\n\"Oh no, don't get me wrong, this is something I've never done before last night and I'm slightly embarrassed. What's even more strange is, I can feel your pee coming through your cock before it squirts out the end of it. Us girls can't feel that, it's a bit weird. But I want to learn everything, so I'll continue to do this until I am not embarrassed anymore.\"\n\n\"I want both of you to know, I am ready to learn anything you want to teach me. I want to be the second female CEO, after Beth of course.\"\n\n\"I want to do whatever it takes to get ahead in the company. I will work hard, and I will do whatever is required of me. However, as I said last night, I don't want to fuck my way to the top so people can spread rumors about me. I want to be known as a hard worker.\" \n\n\"I know I had to sign a confidentiality statement and I'm banking on each of you having to sign one also, I want to admit something to both of you that should stay between just the three of us. I love Taffy to death, but I don't even want you to mention this to her, PLEASE?\"\n\n\"Connie, you don't have to worry, everything you say to us in private will be kept private. As I told you last night you can talk to us about anything and I do mean anything. I may be your boss and I may be the CEO of our company but I'm also banking on you to do your job and do it to the best of your ability. If I ever ask you to do something that you are not willing to do, write me a note or let me know some way that you don't. OK?\"\n\n\"Yes Dan, I can do that.\"\n\n\"I know what I said a few minutes ago but, I want both of you to know, I am willing to do stuff that might be frowned upon by others. Beth told me earlier that she's been naked in a men's bathroom. I don't know the circumstances of why that happened, but I would be willing to do that too. Dan, Beth, if either of you want me to do something all you have to do is tell me what you want, and I'll do it. If you want me to show off my body to someone, I will do that. I prefer not to fuck someone but if either of you want me to do that, I only request that at least one if not both of you be in the room with me to make sure I don't get hurt or abused. I've never been exposed to a lot of sexual stuff so it's all new to me. What I'm saying is on top of working hard, I will do whatever else you want me to do.\"\n\n\"Connie, we understand what you are saying, and we will try to go slow with you. If you truly want to do \"stuff\" as you call it. If you are ready for the challenge, I'll tell you what I want you to wear today. If you do it ok, if not that's ok too. Did you bring your business suits with you?\"\n\n\"Yes, I did.\"\n\n\"Very well, when you get dressed today, if you are up to it, I would like for you to wear your shear blouse without a bra today. I want you to leave your jacket unbuttoned and I don't want you to use your hands to hold it together. Let your jacket move as it will. You have very lovely titties and if you want others to see your body, here's a start for you. I'm certain your jacket will hide your titties unless you reach for something and your jacket opens.\"\n\n\"Connie, to help you get started, I'll dress the same way but I'm not sure I have a shear blouse like you do. But I won't wear a bra so my titties can flop around.\" Beth added.\n\nWe got into the shower and this time Connie didn't hesitate to wash me or help me wash Beth. When it came time to wash her, she spread her legs and lifted her arms, so Beth and I had total access to her body. When we were finished, we did the same thing drying each other. I left the bathroom after I shaved and let the girls do what they needed.\n\nBeth asked us what we wanted to eat and then went in and asked Allison and Kelly what they wanted for breakfast. While Connie was blow-drying her hair, Beth walked back into the room where Allison and Kelly moved and told them she ordered room service for everyone and it would be delivered shortly. By the time Beth finished that, Connie was finished with her hair and moved out of the way for Beth to blow dry her hair.\n\nI remained naked and placed my towel on the desk chair before I sat down. I turned on my computer so I could play catch up on any information there may be for me. What I saw made me smile and I sent a message back to Jerry Wilber and asked him to have someone dig deeper into the financial status of the company that wanted to take over Stefan's company. \n\nI asked him to get me a list of the current suppliers for that company. I also asked Jerry to find out who was the major stockholders and how many shares they controlled. Then I included a short sentence for him to use during his search. It read; he was making enquiries because he heard rumors about a buyout of that company. I asked Jerry to keep me current on that company's stock prices. I told him if the price went down, I needed to know immediately, and he should text my cell phone to get the information to me. Other than that, he could message me the rest of the information on the computer and I would get it.\n\nBeth was finishing her make up in the bathroom when there was a knock on the door. I asked Connie to get the door and she started searching around for something to put on. I smiled and her and simply said, \"Answer it like you are, you don't need to cover up.\" She looked at me for a few seconds when the second knock sounded. Only then, she turned and headed towards the door.\n\nI heard her greet someone and then said, \"I guess you should bring that in please.\"\n\nI looked up to see a male room service person pushing a cart into the room. Beth came out of the bathroom completely naked and walked over to the cart and was handed the bill. Beth took his pen and wrote on the slip before she handed it back to him. I walked out and handed him his tip and he thanked us and promptly left the room.\n\nConnie looked at both of us as she said, \"Wow, I never thought both of you would let him see you naked.\"\n\n\"We tried to tell you, we are nudists and there are times for people to see us nude and then there are times when we unfortunately have to be seen dressed. While we are in our room, we don't normally get dressed until it's time to leave.\" Beth replied\n\nI walked into Allison and Kelly's room and told them breakfast had been delivered and to come and get it while it was hot. Meanwhile, Beth uncovered breakfast and put it out on the table. I came back and was pouring the coffee, there was another knock on the door. Connie shrugged her shoulders and said, \"I'll get it.\"\n\nWhen she opened the door, she stood directly in front of it without covering her titties or bald pussy, she looked at the man standing there and she said, \"Dan, the guy who drove us here is at the door.\"\n\n\"Invite him in, that's Hans.\"\n\n\"Please come in, Dan and Beth are in the other room.\"\n\nBeth and I stopped what we were doing and walked out to greet Hans. He shook my hand but gave Beth a meaningful hug. When he stepped back from Beth I said, \"Hans, I'd like you to meet Connie, she is one of my secretaries.\"\n\nHans stepped over to Connie and pulled her gently into a hug before he released her, he kissed each of her cheeks and said, \"Welcome to Germany.\"\n\nAs Hans finished welcoming Connie, Allison and Kelly strolled into the room and both were naked. I looked before I said, \"Hans, those two young ladies are also my secretaries, Allison and Kelly.\" Hans hugged and kissed both before he welcomed them to Germany.\n\nI offered Hans a cup of coffee, when he accepted, I poured him a cup as well. Hans apologized for showing up without letting us know first but I told him it wasn't a problem. He's seen both Beth and I naked before so there wasn't any sense for us to run and get something on.\n\nBeth handed Connie her plate and cup of coffee and she went to a nearby chair and sat down. Beth did the same for Allison and Kelly before she set both her breakfast and mine on the table close to the cart. \n\nHans pulled up a chair on the other side of Beth, across from me, and asked why we were back so soon. I gave him the short version and then followed it up that we needed to be in the office for a meeting at nine o'clock. Hans told us that Stefan had called him and told him he needed to pick us up this morning and that's why he came early.\n\nI told him right after we eat our breakfast, we'll get ready to go. I reminded Beth she needed to call the other rooms and tell them we would be leaving for our meeting so they will be on their own for their meals until we call them. We finished eating and while Hans sat and waited for us, we started getting dressed.\n\nConnie had all her clothes in her assigned room, so she went in there to get dressed. A few minutes after going in there, she came to the door and called out, \"Dan do you want me to wear panties today or go without them?\"\n\nI called back, \"Are you going to wear a skirt or slacks with your suit jacket?\"\n\n\"I'm going to wear my skirt today. Does that mean you prefer I didn't wear panties?\"\n\n\"Yes, don't wear any panties today. Hans might want to look up your skirt and see your beautiful bald pussy.\" I said as I laughed.\n\n\"Hans is looking at my pussy right now. I'm not in my room.\"\n\nHans smiled at Connie and said, \"Your pussy looks good enough to eat darling. You better watch out; I may ask you to taste it.\"\n\n\"Do you really want to do that Hans? I'm new to all this and I'm trying to learn.\"\n\n\"Come closer to me and you'll find out what I would do.\" Hans replied.\n\nConnie walked closer to Hans and stood right in front of him. He leaned forward and took a deep breath of her pussy before he asked her to spread her legs so he could taste her. Connie did as he asked without hesitation and when he licked her clit, she had to hold his head, so she didn't fall. Hans licked her clit several times before he said, \"You better go get dressed before I get other ideas.\"\n\nConnie hurried into her room to finish dressing. There was a lot of giggling coming from the room as Connie told Allison and Kelly what happened with Hans. \n\nConnie put on thigh high stockings and then pulled on her skirt. She put on her shear blouse and left the top three buttons undone like she had last night. When she walked out of the room back into our suite, she was carrying her jacket. I complimented her on how beautiful she looked. Beth also had her jacket off and I told her she was very beautiful too.\n\nAllison and Kelly strolled casually into our suite and it was apparent they had been listening to Connie's conversation with me because both were braless with the top buttons on their blouses undone. I smiled at them and faked a smack to my forehead before I said, \"What am I going to do? I am surrounded by female exhibitionists. However, I'm not complaining, not even a little bit. But when we are in the business meeting, I want all of you to know, you will have to wear your jackets.\"\n\nThere was a chorus of varied agreements before they started laughing. Beth made her phone calls to the flight attendants and flight crew and told them we would be leaving for our meeting soon and she would call them again when the meeting was over so we could coordinate our plans for later. When everything was done, we walked out the door and caught the elevator to the first floor. Hans led the way to his vehicle which was parked just to the side of the main entrance.\n\nWe had general chit chat between all of us, on the way to Stefan's office building. When we pulled up in front of the building, I saw Stefan and Klaudia standing by the entrance way. They started walking towards us as our limo came to a stop. Stefan was all smiles to see us and almost couldn't wait to grab my hand and shake it. I could tell by his voice he was very nervous, but I didn't say anything. I stood by and did all the introductions until everyone was out of the car.\n\nWe walked into the building and took the elevator up to the top floor where we had met previously. As before, Stefan took us into a room where he had morning breakfast snacks and fresh coffee waiting for us. While we were selecting our food, Stefan asked how our flight had been. I told him it was very uneventful, and we arrived one half hour earlier than our pilot had anticipated. We sat at the big table and once again enjoyed idle chit chat.\n\nI asked Klaudia if she had an extra steno pad, because I left mine in the plane. Klaudia told me she would get one before the meeting started. I asked Stefan who we were going to meet with, and he told me we were going to have a preliminary meeting with the company that wanted to do the takeover. Stefan said the CEO would be at a meeting the day after tomorrow. I suddenly understood what the other company's CEO was planning to, so I had 48 hours to outsmart him.\n\nI wanted to proceed cautiously and gather all the information I could about the other company, but I needed to get all the details I could in the shortest amount of time. Suddenly I was on a mission to undermine some wannabe CEO. From the information I already had, I could see the bluff, but Stefan was too scared for his company to understand he had the upper hand.\n\nWe finished our snacks and Stefan made an offer to have coffee in the conference room and all of us elected to drink coffee and do business. I asked Stefan if he could get my secretaries hooked up on the secure internet again and he replied that he had already installed several cables in the room. He told us, when we were ready, he'd have his tech give them the password to hook up.\n\nJust as we were getting ready to move into the conference room, Wilheim Strauss Stefan's CFO walked into the room. Stefan stood and introduced Wilheim to everyone who had not met him before, and I walked over and shook his hand. He shook hands with Beth and told her it was great to see her again. We walked into the conference room together and I motioned for my team to take a chair on the right side of the table. \n\nThe tech came in and made sure the secretaries and I were all hooked up to the internet and gave us the password to log into the secure net they had set us. The tech stayed long enough to make sure all of us were connected to the internet and offered to come back if any of us had a problem. \n\nAs the tech was finishing up with us, there was a knock on the door and Klaudia invited another man and woman into the room. Stefan stood up and introduced me to Mila Weber, Sr. Financial Advisor and Felix Fischer, Financial Representative. I, in turn, introduced them to the members of my team.",
        "When the tech finished hooking them up to the internet, he left the room. I could see that Stefan was nervous as hell as he started the meeting. I sat back and soaked in the information and watched as Beth typed almost word for word, what was being said, to our team back at home. I watched my computer screen and asked questions intermittently. Mila did most of the talking but at the same time she didn't tip her hand. She played her cards very close to the vest. \n\nI got tired of listening to her bullshit, so I asked Mila outright what her company's stock price was currently. After she conferred with Felix, she gave me the numbers from the closing of the previous day. I asked her how her company was doing early in the trading this morning and she stumbled and said she didn't have the current numbers. I asked her a few more questions that made her very nervous and she started to back pedal. I looked at Felix and asked him a couple of forthright questions about his company's finances and he replied with a bullshit answer.\n\nI didn't want to reveal too much, but I did tell both Felix and Mila that my company was a long-term buyer of Stefan's product and if I needed to, I would buy out his company today. I let them know I was serious, and they needed to re-think their takeover bid.\n\nSuddenly Mila asked if we could take a recess for a half hour and Stefan looked at me. I told everyone I had no problem with a recess. As soon as I said that Mila poked Felix and they got up, took their laptops and exited the room. Once they were out and the door was closed, I asked Klaudia to ask one of her trusted people to stand outside the door while we were in recess. I didn't want anyone to hear what I had to say other than those in the room.\n\nWhen Klaudia came back into the room and assured me that she had someone standing just outside the door, I turned to Stefan and said, \"NO, I'm not going to buy up your company.\"\n\nHe gave a sigh of relief and said, \"Dan, I thought for a second that you had betrayed me and that you were the one who was going to take over our company.\"\n\nI looked at Stefan with the most serious face I could muster and said, \"Stefan, I want you to know, IF I wanted your company, I could have bought it months ago when we first came here. I had the authority from my CEO to do it if you were going to be our supplier. However, I promised you back then that I wasn't going to take over your company and that I was willing to deal with you and Klaudia and be a long-term buyer. Think about it Stefan, when you called me yesterday so excited about this other company, I could have sent my CFO and lawyers here to buy you out because as you know, I'm the CEO now for my company. But instead, I made this emergency trip instead.\n\nNow what I want you to do and Wilheim this is where you come in. I need to know who the major stockholders of that company are, and I need the information today, like about 6 hours ago. I have a plan of my own and if everything works right, you'll never have to worry about that company bothering you again. So Wilheim get to your contacts and get that information for me.\n\nStefan and Klaudia, I need both of you to maintain your concern about the takeover and don't let anything I've said get out of this room. I know what I'm doing is not good business practice, but I hate bullies and I deal with them in my own way.\n\nBeth cheered and said, \"Dan I've got something here that you may want to see.\"\n\nI looked at her computer screen and said, \"Now, that's what I'm talking about!\"\n\nStefan looked inquisitively at me and I just smiled at him and said, \"In due time my friend, in due time.\"\n\nThere was a knock on the door and the person that was standing outside opened the door slightly and asked, \"Mrs. Weber wants to know if we can recess until after lunch?\"\n\nStefan looked at me and asked, \"What the hell is going on?\"\n\nI smiled back at Stefan and said, \"There's an old TV program called the \"A\" Team and during that program one of the actors, George Preppard, said, \"I love it when a plan comes together.\"\n\nI told Stefan the other company wasn't ready to deal with us together. \"They saw you as a target and wanted to swallow up your small family business. I'm sure they are checking my stock prices as we speak and looking at the size of my company. When they come back, I think their attitude will be greatly changed. Honestly, I think they might try to find a way to back out gracefully.\" \n\nStefan looked at Klaudia and Wilheim before he looked back at me with a smile on his face. I smiled back at him and said, we have a few hours, let's go someplace we can relax. Let's get out of the office.\n\nKlaudia said, \"I know a place we can go to relax but you may want to change into something less business like. We have a wonderful park not too far away and I go there a lot to relax and watch the people. We can walk around it since you've never been there before.\"\n\nI looked at my team and told them to close their laptops and we'll stop by our hotel and change our clothes. Stefan said, \"Klaudia if you will be so kind as to go into my office and select something for you and me to wear and will take our clothes with us and change in Dan's room too.\n\nKlaudia did as she was asked and while she was at it, she called Hans to bring the limo around to the main entrance. We were all ready to go in a few minutes and promptly left the office. We went to our rooms with the idea to be ready as soon as we changed clothes. When Stefan and Klaudia entered our suite along with Connie, Allison, Kelly, Beth and me, there were no preliminaries, all of us started undressing right after the door closed. Connie looked at us only for a moment and then she started undressing herself. Allison and Kelly walked into their room.\n\nI was down to my boxers, Beth was naked, Stefan folded his suit and he stood in his boxers and by that time Klaudia was in her panties and Connie was standing completely naked. Stefan looked at Connie and said, \"Dan she is very beautiful.\"\n\n\"I know she is, but that's not the reason she is here. She assured me she wants to work hard and be the second female CEO of our company. I am giving her a chance to prove herself.\"\n\nStefan said, \"Aww yes, it is hard to find young people who are willing to do what it takes to succeed in today's business world. Young lady, I hope you do work hard and fulfill your dreams.\"\n\nConnie thanked Stefan for his kind words before she asked me, \"What are we going to wear Dan?\"\n\nKlaudia interrupted and said, \"Shorts and a top will look good in the park.\"\n\nConnie went into the other room where Allison and Kelly were undressing and pulled on a pair of shorts and button up the front type blouse. When all three were dressed in something comfortable they walked back into our suite. By that time, we were dressed and ready.\n\nWe walked out the front door of the hotel and Hans was right there with the door open for us. It only took us a few minutes to get to the park and when we stepped out of the limo I marveled at the size of the place.\n\nKlaudia told us to walk with her and she would give us a tour of her favorite place. As we walked, I told Stefan and Klaudia that Beth and I were recently married and that stopped everything while they congratulated and hugged both Beth and me. I told them about our trip to the nude resort we went to in Hawaii. Beth added that was the place we were married by a military chaplain in a huge ceremony with the Hawaiian touch. Then Stefan told us about their trip to South France. He said Klaudia, his wife Kerstin and he went there for a short vacation and enjoyed the famous nude beaches. \n\nWhile we walked in the park, Klaudia was an excellent guide and explained all the monuments to us in detail. We stopped by a food stand and each of us ordered a bratwurst with sauerkraut and a beer. We sat down at one of the tables and enjoyed a real German treat. \n\nStefan asked if he could talk to me privately and I reminded him that we were supposed to relax and that if it had anything to do with business it would have to wait until we were back at the office. He relented and we re-joined the conversation. When we were finished eating, we stood up and finished the tour around the park. We met up with Hans where he had let us out of the limo and had him take us back to the hotel.\n\nAs we were walking down the hall to our rooms, Stefan said it would be a great idea if we didn't get back to the office until two o'clock. He said if they made us wait, we need to make them wait. I fully agreed since it was the other company on the run now. We set a time to be ready for one thirty and until then everyone could relax a bit more. I opened the door to our suite, and we entered with Allison and Kelly going into the room connected to our suite. Stefan and Klaudia stayed in our suite with Beth, Connie and me.\n\nIt wasn't long before all of us were naked and enjoying a cold drink. Allison and Kelly started to walk into our suite and stopped when they saw we were naked, and they were wearing only their panties. Kelly laughed and said, \"Ok, so two of us are a little overdressed. We can solve that. Everyone in our suite watched as Kelly hooked her thumbs into her panties and did the female shimmy until they dropped on the floor. Allison was nanoseconds behind Kelly before the two were naked and left their panties where they fell. They continued into the suite and I offered them a cold drink.\n\nBeth invited the girls to go out on the balcony with her and all agreed, leaving Stefan and I in the living room. I asked what Stefan wanted to ask me and at first, he looked at me before he said, \"It's business.\"\n\n\"I know but we are here, and we are more or less killing time so go ahead and ask me.\"\n\n\"Well, what did you say that scared Mila?\"\n\n\"I think it was the fact that I said I could buy your company outright and given the fact we were meeting in your conference room; I think that shook them up. But between you and me, I'm not looking to buy up your company.\"\n\nStefan jumped and leaned towards me when I said that. \"What do you mean Dan?\"\n\n\"Stefan, just sit back and enjoy the ride. I haven't got all of my information yet and until I do, I don't want to disclose any part of my plans.\"\n\nAll five women came in off the balcony, through the living room and disappeared into the bedroom but Stefan and I didn't pay much attention to them. We were deep into our conversation.\n\n\"You've got to be kidding me! You're going to buy them out, Dan?\"\n\n\"I didn't say that Stefan. All I said was I wasn't interested in buying up your company.\"\n\n\"Stefan, I don't need any part of this conversation being told to anyone including Klaudia, Beth or my secretaries. We are only having a confidential conversation between you and me. It is in your best interest to not say a word. I like you Stefan but that doesn't mean squat when I have to do business for my company.\"\n\n\"I understand Dan. When I called you to have you come here, I didn't think you would come with both guns blazing like they used to say in your old American West movies.\"\n\n\"You watched American westerns?\"\n\n\"Yes, they were my favorites. I remember The Rifleman who could fire his rifle so fast and cut down the bad guys. Then there was Gun Smoke and Matt Dillion always got his man with the help of his limping partner Festus. I love all of John Wayne's movies and then there was Rambo who always won too. Of course, I can't count out Clint Eastwood who in later years became Dirty Harry. I love how he used to say \"Was that five rounds or was that six, I don't remember. Do you feel lucky punk, well do ya?\"\n\nI laughed and said, \"Yes, the old movies are the best. I prefer to watch them when I have time because the new movies are crap. They can't hold a candle to the old movies. But I must correct you on one thing. Rambo wasn't an old western movie. Sylvester Stallone, by his movies, tried to prove to all of us, the government was wrong, and there were more POWs left alive in Vietnam.\"\n\nOur conversation continued about the old American movies and I was taken by surprise that a German boy would find those movies so fascinating. He quoted scenes almost word for word, well at least what I could remember of them. I added scenes to different movies Stefan was recounting. We laughed and really enjoyed ourselves. \n\nIt was getting close to the time we had to get dressed again when Stefan's cell chimed. He walked over to his pants and pulled his phone out and talked in German, so I didn't know what he was saying until he pushed the button on this phone. Stefan turned to me and said, \"They asked if we could postpone our meeting until eleven o'clock tomorrow, and I told my secretary I agreed to the meeting being postponed until tomorrow. But I also told her to be stern and let them know that there wouldn't be any further delays after eleven o'clock tomorrow. \n\n\"Good for you Stefan. Now you are sounding more like the Stefan I remember when I came here to do business with a you few months ago. It's a good sign that they are stalling the meeting but that doesn't mean anything to me, I have a plan.\"\n\n\"Yes, you have a plan Dan and you love it when a plan comes together.\" Stefan added.\n\nWe both roared with laughter and I heard Beth yell out from the bedroom, \"What's so funny?\"\n\nStefan and I got up and walked to the bedroom and saw a tangle of five naked female bodies, but I answered, \"Stefan just quoted something I said a while ago. I told him I like the \"A\" Team and the phrase that was in each show, \"I love it when I plan comes together.\" The other company just called and wants to defer our meeting until eleven o'clock tomorrow. Stefan told his secretary to be stern when she called them back and let them know there wouldn't be any further delays after eleven tomorrow.\"\n\nBeth asked me, \"Please call rooms 1197, 1198, 1199, 1200, 1201 and 1202 and let them know they need to be ready for dinner at seven this evening. Tell them to meet us in the lobby.\"\n\nShe continued with, \"As you can see, we are rather busy now.\"\n\n\"Yes ma'am, I will get right on it like the good servant I am.\" \n\n\"Ghee, Beth is sounding more like the boss than you are, boss.\" Stefan said with a laugh.\n\nI said, \"Oh shut up, you're married. I'm sure when your wife speaks, you jump too.\"\n\nWe both laughed as we turned and went back to the living room and left the girls to play. I made all the calls which Beth requested me to make and when I finished, I checked the small refrigerator and saw we were out of beer. I asked Stefan what kind of beer he liked and then called room service for them to bring some and restock the refrigerator.\n\nWhen the knock on the door came, I stood up and opened the door and a male room service person wheeled a cart into the room and went right to the refrigerator and restocked it and then asked if we wanted a beer before he left. I nodded my head and Stefan answered him in German. He handed each of us a beer and I signed the slip he handed me and added a tip on that since I was naked and didn't have my wallet near me.\n\nStefan and I enjoyed our beer before we got up and walked over to the bedroom door. An extraordinary sight greeting our eyes with Beth laying on her back and munching on Klaudia's pussy and Connie on all fours with her ass up in the air while she was having lunch at the \"Y\" on Beth. Allison was on her back under Connie licking her clit while Kelly was feasting on Allison's pussy. Stefan looked at me and said, \"Wow, Kelly's pussy looks so inviting, I wish I knew her better, I'd ask her if I could indulge myself on her lovely treats.\"\n\nI told him there was only one way to find out, and that was to go and ask her. Stefan looked at me and said, \"Are you sure you won't be offended if I lick that lovely pussy?\"\n\n\"No Stefan, we've been down this road before. If you get her permission, or any of the females traveling with me, you'll never hear me complain. I have always said that BOTH parties have to agree.\"\n\nStefan walked over beside the bed and tapped Kelly on the shoulder and asked her if he could lick her pussy. Kelly pulled away just enough to say, \"Oh yes, please feel free to lick my pussy.\"\n\nI walked up beside the bed and stood on the mattress and offered my cock to Klaudia and without any hesitation she turned her head and opened her mouth wide enough to allow my whole cock to sink into her mouth. The room filled with sexual gratification noises as each of us enjoyed the attention we were receiving. One by one there were increased breathing and moaning as each of us worked towards sexual fulfillment.\n\nWhen it was over, all of us who experienced an orgasm, crashed down on the bed to catch our breath and enjoy the afterglow of our experience. That is all except Stefan who was the end of the chain. Once Connie caught her breath, she looked at Stefan and said, \"You didn't get to cum, and I'm more than willing to help you with your problem.\"\n\nStefan reach out and hugged Connie's naked body to his own and said, \"Young lady, you don't have to do that for me.\"\n\nConnie blushed a little as she began to stroke Stefan's cock. She told him, \"I'm not really sexually experienced so please accept my apologies in advance for fucking up your blow job.\"\n\nConnie leaned down and took Stefan's cock in her mouth and as she moved his cock in and out of her mouth, she moved her hand up and down his cock in a rhythm she set. Stefan put his hand on the back of her head, and we watched Connie give him oral pleasure. It didn't take long before Stefan was moving his hips trying to get more of his cock into her mouth. Connie gagged a few times before she got back into her own tempo. Soon Stefan announced he was going to cum, but Connie didn't stop until Stefan was finished shooting his complete load in her mouth. Connie pulled off his cock and showed all of us some of his cum was still in her mouth before she made an embellished move to swallow the rest. She smiled at us and said, \"I really didn't know what I was doing but I've seen it a few times and I copied what I saw. I guess I did it right because I made you cum in my mouth.\"\n\nStefan said, \"Young lady, you did a fine job. And if you want to suck my cock again, just ask me and I'll make it available to you.\"\n\nConnie got up and moved over to me, lifted my cock as she replied, \"The next cock I suck will be my boss's cock. He has done so much for me and I appreciate every chance he's given me.\"\n\nStefan replied, \"Dan, it sounds like you have some dedicated employees working for you. What did you do to get her to develop that attitude?\"\n\n\"Well let me see, the first time I met this young lady and the other young lady, Taffy, they were working in my office the day I caught their immediate supervisor calling them horrible names and belittling them with very unkind accusations. As I recall it, he no longer works for our company because he didn't like his demotion to dirt manager.\" (janitor) \n\n\"Then, I heard both their families were going through very hard times. Their fathers had been laid off from work and both young ladies were basically supporting their parents and siblings. I personally interviewed each father and found a place for them in our company. I don't really want to take credit for them doing so well, all I did was give both girls and their fathers a chance to work. They've done the rest by doing an excellent job, for our company.\"\n\nKlaudia sighed and had a tear in her eyes by the time I finished the story. She reached over and pulled Connie into a hug and said, \"You poor baby. You've been through so much and still you have a grateful heart and a perfect attitude. I hope all your dreams come true young lady; you deserve it.\"\n\nConnie acknowledged Klaudia's compliment and graciously thanked her. She said, \"All of us are so grateful for Dan giving us a chance when other's most likely would not have. He is a very good man.\"",
        "Stefan spoke up, \"Dan, I want to take all of you out to dinner and then we can go out to dance tonight.\"\n\n\"Stefan, I can't let you do that, I have my flight crew and attendants that I have to take to dinner, and I can't let you feed all of us. I'll tell you what, if you, your wife, Klaudia, Hans and his wife want to join us, I buy dinner tonight and let you buy dinner maybe tomorrow night when it's just us. By tomorrow night, I will have had a chance to tell my flight crew and attendants to find some place to eat even if it's here in the hotel. I've already told all of them to be ready to go out at seven this evening.\"\n\n\"Ok, that sounds like a plan but not because I don't want to take everyone including your flight crew out to dinner. Klaudia you know where I want to go, would you be so kind to make reservations for us?\"\n\n\"How many people am I making reservations for?\"\n\n\"There are six in my flight crew, then there is you, Stefan, his wife Kerstin, Hans, his wife Karin, Allison, Kelly, Beth, Connie and me. So that makes sixteen if my count is right.\"\n\n\"Dan, tell everyone to dress casually and wear comfortable shoes, that way they won't have sore feet from dancing. Klaudia and I need to go home to change clothes and pick up Kerstin. We'll be back here at six thirty. It's about a half hour to the place where I want to take you for dinner and then the night club for some dancing which is only about fifteen minutes from the restaurant.\" \n\nWe watched as Stefan and Klaudia got dressed and left the room. I asked Beth to call all our people and tell them to be dressed casually, in comfortable shoes to dance in, and ready to leave at six thirty instead of seven. \n\nWhile Beth was on the phone, Connie, Allison, Kelly and I were sitting on the bed leaning up against the headboard. Connie broke the silence by asking me, \"I hope I didn't say anything out of place today? I didn't know if you wanted to reveal how you saved me.\"\n\n\"It's perfectly ok sweetheart, you have been very brave today. I never expected you to jump in with both feet and be nude with all of us and participate in all the sexual activities. I have to tell you; you have a very beautiful body.\" \n\n\"When Stefan and I walked into the bedroom and you had your lil ass up in the air, we saw your little asshole, but I looked directly at your spread open pussy while Allison was licking your clit. Connie, I wish I had taken a picture of you like that because you looked so sexy and I really wanted to be the one to move up behind you and bury my cock in you. I hope you don't mind me being so blunt.\" \n\n\"Gosh darn-it Dan, I would have told you yes if you asked to put your cock inside me. I have never been so horny as I have since we arrived here. As I told you, I don't have a lot of experience with cocks and you are really driving me crazy walking around in front of me with that beautiful cock swinging. When you are ready to put that cock inside me, please let me know because I'm not sure if I can hold out much longer. I just might have to rape you.\"\n\n\"Connie, you'll love Dan's cock when he does put it in you. If you need him to go slow and careful, he will. He's not like most other guys who think that have to push hard and fast.\" Kelly added.\n\n\"But Connie I'm old enough to be your father. Do you really want an old guy driving his cock into your tight pussy? Oh God, that would feel great, come to think of it.\"\n\nConnie picked up my hand at that same time she spread her legs. She placed my hand on her pussy and encouraged me to insert my middle finger. When I did, I was treated to a very hot, very wet, very tight pussy that gripped my finger. \"Dan, I want your cock right in there.\"\n\n\"BUT, if you are ready to put your cock in there, I would like you to do it out on the balcony where we might be seen from the other tall buildings surrounding us.\" Connie said with a huge grin on her face.\n\n\"Are you absolutely sure you want to have sex with me?\"\n\n\"I'm in lust with you Dan, and after today, I want you to use me any way you want to. You can ask me to do anything you want at any time. I want people to see my naked body but not only that, I want you to play with my naked body where others can see us. I don't want to upset Beth, so we'd have to ask her if she is ok with all that. Do you understand what I'm asking you to do to me? I am so fucking horny right now.\"\n\nAs luck would have it, Beth heard everything Connie had said as she was coming into the bedroom. Beth smiled and said to Connie, \"You sound just like me after I met Kim, Dan's wife. I wanted Dan to do all those things for me too and we have done all of those things and way more.\"\n\n\"Wait, I thought you were Dan's wife? Didn't you just get married?\" Connie queried.\n\nKelly and Allison started laughing in a girlish kind of way when they heard Connie ask her question. Allison said, \"This handsome hunk of a man is so popular with the ladies, he has two wives now. We are so lucky to know them and him.\"\n\n\"Connie, it's complicated are you sure you want to hear it?\" Beth asked.\n\n\"Do you trust me enough to tell me, I can promise you that I will never say a word to anyone.\" Connie added.\n\n\"OK here it goes, the short version though. Yes, my name is Beth Morrison and yes, Dan I exchanged vows in a ceremony in Hawaii. However, we aren't technically married because Dan has been married to Kim Morrison for many years. Kim wanted to have another baby but because of complications when they had their daughter Jenna, she can't have any more.\" \n\n\"Dan and I worked together ever since I got out of high school because I didn't want to stay on the family farm. We never fooled around or had any sexual relations until after I went to Dan's house one night and met his wife and daughter. During our many hours of conversations Kim told me how unhappy she was with everyone around having babies and she wanted another one. Without even realizing it, I became part of Dan's family after many visits to his home. Everyone there is so accepting and full of love. After many conversations with both Dan and Kim, I legally changed my last name to Morrison so when I have Dan's baby, we can name the baby, Morrison.\"\n\n\"Once Dan and I started enjoying sex, like you I wanted to experiment because I grew up on an isolated dairy farm. Even though I grew up in a nudist family, when I left home, I wanted other people to see my nude body.\" \n\n\"It was only after those many hours with Dan, Kim and Jenna (his daughter) I wanted Dan to protect me but at the same time make me do things that would show off my naked body. At that time, I didn't care who saw me, but I didn't want to get arrested either. Dan took me to a park one time, and I went into the men's restroom and peed. That first time wasn't bad because no one came into the restroom, while I was in there.\" \n\n\"Another time we went to the same park, Dan told me strip naked and walk into the men's restroom with nothing to cover my body, if someone came in. I want you to understand, I could have stopped all of that at any time because Dan didn't force me, he was there to protect me. That time a couple came into the men's restroom and I was terrified at first. I hid in one of the stalls. I heard a guy telling someone to \"Take off your dress and give it to me. We are going to stay in here until someone comes in and sees you naked.\"\n\n\"I suddenly realized the couple was in the restroom to do the same thing I was doing. Finally, I worked up the courage to open the stall door and step out so they could see me. The guy looked at me and I looked at him before my eyes traveled up and down the naked body of his companion. She had a similar body to mine, and she was also shaved bald. I walked out further into the room and turned and faced them so they could get a good look at my body. As we talked, I started to feel comfortable standing there completely naked.\"\n\n\"I found out the other girl was in there for the same reason I was there. She wanted another guy to see her completely naked and enjoy her body. I told them Dan had my clothes in the car with him and I didn't have anything to cover myself with, even if I wanted to. They asked if I walked into the restroom naked, and I told them I did.\"\n\n\"I told them I had to get going because Dan would be worried and as I opened the door, I saw Dan standing outside his car looking towards the restroom. I turned and told them if she wanted another guy to see her naked, to follow me and Dan was only over by the car. So, I walked over to Dan and a few seconds later they came out and she was still naked.\"\n\n\"So, now that you have heard all of that, I'm positive if you truly want Dan to expose you, I'm sure he will oblige. However, any time he tells you to do something, you are still in control if you don't want to do it. But if you are truly like me, even though you may be nervous the first few times, you'll do what he says. Oh, and so you know, there are many other women who love to show off parts or their whole naked body.\"\n\n\"Thank you, Beth, I really appreciate you sharing your personal information with me. I promise I will never speak a word of it with anyone, including Taffy.\"\n\nKelly and Allison stood up and said they were going to their room to rest and promptly left us.\n\nI asked, \"Can we rest for a few minutes before we have to get up and get dressed?\"\n\nBeth crawled up the bed on the opposite side of where Connie was and laid her head on my shoulder. I'm certainly a satisfied man.\n\nWe rested for a while until it was time to get up and get showered and dressed for dinner. We crawled to the edge of our large king bed and headed for the bathroom. Just as we entered, Connie said, \"I'll go check on Kelly and Allison and make sure they are getting around.\"\n\nWhen Connie left the bathroom, Beth turned to me and said, \"Well husband of mine, you seemed to have scored another young lady who will willingly show off her body for you. If you want us to really dress casually tonight just say so and I'm sure both Connie and I will be willing. I know I will.\"\n\n\"What will the flight crew say if you and Connie show your goodies?\"\n\n\"They'll probably just think it has something to do with our nudist lifestyle.\" Beth replied.\n\n\"Ok, wear a white blouse without a bra. If you're going to wear a seven-buttonhole blouse, leave four buttons undone. Three if it's a six-buttonhole blouse. I want both of you to wear skirts without panties and some comfortable shoes or even some sneakers if you have them with you.\"\n\n\"Wow Dan, that sounds like our tits are going to be showing all night long. Not that I mind if someone sees me, but I'm not sure if Connie is ready for that kind of exposure.\" Beth replied.\n\n\"So, run it by her when she comes back. You do understand I'm going to expose your ass while we are dancing, don't you?\"\n\n\"I figured as much.\" Beth said while smiling at me.\n\n\"You figured as much, what Beth?\" Connie inquired when she returned to the room.\n\nBeth looked at me with questioning eyes for a few moments and when I didn't respond, she turned to Connie and picked up her hand before she asked, \"Connie are you really ready to be exposed by Dan? As I told you before, you still have to power to tell him not to do something or stop doing something.\"\n\n\"What are you talking about Beth? I've walked around here naked when we've had visitors in our room. I've been involved with some serious sexual activities with all of you. What could Dan do to me that would be any worse than that?\"\n\nBeth explained in detail what Dan and she were talking about when she went to the other room to let the girls know we were getting ready. Connie smiled for most of it but when Beth told her that Dan would most likely play with her uncovered ass while dancing with her, Connie squealed with excitement.\n\nConnie ran over to me and threw her arms around my neck and hugged me tightly saying, \"Yes, yes, yes, I'd do it or let you do it. I'm getting wet right now and we haven't done anything yet. I want you to help me Dan. I want you to show off my body and play with my body if Beth doesn't mind. I will do anything you want me to do.\"\n\nI looked at Beth and Connie a moment to see if they had any second thoughts before I said, \"OK get your blouses and skirts. I don't care how long your skirt is, but I will say the shorter the better. I can tell you; people are going to see your bare ass when you dance with me.\"\n\nI watched both Beth and Connie put on their skirts which weren't that short. Their skirts were just a little longer than mid-thigh. Beth showed Connie how to button the bottom couple of buttons first and tuck the tail into the skirt before zipping and buttoning the skirt into place. I was pleased to see the huge gap in their blouses with a full view of their lovely titties. When Beth was finished with Connie's skirt, she fastened her own and then both buttoned their blouse from the bottom up leaving the top four buttons undone. I continued to check them out as they finished and was pleased to see no matter how they moved, I could see one breast or the other all the way out to their nipple. I gave them an approving hug and kiss before saying, \"You should take a light jacket with you in case it gets cool later. I don't know what time we'll be coming back here.\"\n\nWe went out in the living room and waited for Kelly and Allison. When they came out of their room they stopped and looked at both Beth and Connie. It was Kelly who asked, \"Why didn't you two tell us you were going to show your tits to everyone tonight?\" \n\nWithout giving anything away that they had talked to me Beth said, \"I selected my clothes and Connie just followed what I was going to wear. She watched me dress and followed what I did.\"\n\nKelly immediately responded, \"If my boss can let her tits loose and visible for everyone to see, I'm part of this fucking team and I'm going to do the same thing. Be right back.\"\n\nBoth girls disappeared into their room and a couple minutes later Allison yelled, \"Are you two wearing panties?\"\n\nBeth ran to their door and pulled up her skirt. Both girls laughed and Allison said, \"I'm glad I asked.\"\n\nBeth said, \"It wouldn't matter, you could have taken them off and given them to Dan to put in his pocket. How many secretaries can honestly say the CEO of their company is so good, he'll even hold your wet panties for you?\"\n\nAll the girls started laughing but Kelly said to Beth, \"The next time you get dressed, I want you to tell us what you are wearing so we can dress the same. OK?\"\n\n\"I'll be honest with you girls,\" Beth said, \"I know we have messed around sexually and have been naked at the nudist resort, but I didn't think you were exhibitionists like me. If you had told me, I would have made sure to tell you so we could all be dressed the same. I want both of you to know, you are my employees but you've both become very close friends and I value that friendship.\n\n\"Beth, we've been talking too, and we want you to know we appreciate everything you and Dan have done for us. I know we had to go through the interviews and the selection process and when we did, you didn't know us from Joe Blow in the trash department. We are glad to have been selected and we are even more happy to have been invited to go with you to Hawaii. With all that we've been through is this short time, WE, Allison and I are committed to do whatever it takes to make our company the best that it can be. That means we are ready to support you and Dan with whatever you need. At the same time, we want to be invited to participate in what you do. You will never have to worry about either of us filing a sexual harassment case against you even if you strip us naked in the middle of Macys on the most popular holiday of the year.\" Kelly said.\n\n\"What Kelly is trying her best to say is, we are whatever you want us to be, or whatever you want us to do, you can count on us. The company may be our employer, but the boss and his executive secretary are our friends and we also value that friendship.\" Allison finished what Kelly was saying,\n\nThere were hugs all around and even a few tears between all the girls before I said in my best command voice. \"Well ladies, it's time go down to the lobby and meet the others. Oh, Allison and Kelly, I'm looking forward to dancing with both of you tonight.\"\n\nConnie started laughing as she opened the door, \"Allison, Kelly we left out a part when we were talking. While you are dancing with Dan tonight, you better be ready for him to show off your ass to anyone who will be looking.\"\n\n\"Oh my God! Tits are one thing but our asses too?\" Kelly shrieked.\n\nI smiled at Allison and Kelly before I reached over and lifted their skirts. They laughed and backed away from me and I only made one noise when I did, \"Hummmmmm!\"\n\nWe walked down the hall towards the elevator and took that to the lobby. We sat on the couch and chairs and waited for the others to show up. We weren't there that long before Hans and Stefan walked into the lobby. Neither of them missed the fact they could see titty on all four of the girls.\n\nWhen out flight attendants and flight crew arrived, we stood up and walked out to the small luxury bus that had plenty of room for all of us to ride in. As we boarded the bus, we were greeted by Klaudia, Kerstin (Stefan's wife) and Karin (Hans's wife). Hans took us through the narrow streets and out on the open autobahn where he smoothly moved from one lane to another at a high rate of speed. Stefan was correct when he said the restaurant was about one half hour from our hotel.\n\nHans pulled up in front of the restaurant and let us out before he moved the bus around to the parking lot behind the restaurant. Stefan told the ma\u00eetre d we wanted to wait for our driver to park and come in. When Hans entered, the ma\u00eetre d escorted us to the tables they had set up for our group. Once seated the ma\u00eetre d welcomed us and informed us, he was at our service during our visit.\n\nBefore he left our table, he had a waiter there to take our drink order. He went around the table and there were a variety of drinks ordered. When he returned, he had another waiter bring menus and he brought our drinks. He told us to take our time to review the menu and he would return soon.\n\nMy group knew they could order anything they wanted so there was no need for me to tell them while we were seated. We had a wonderful conversation that flowed both ways up and down the table with almost everyone participating. I ordered a few bottles of wine with Stefan and Hans assistance, before our meals arrived. When our meals arrived, the conversation died immediately while everyone enjoyed their food. I complimented Stefan a couple of times for bringing us to such a wonderful place.\n\nWe relaxed after our meal and within minutes and some whispering, all the women stood up and deserted our table for a trip to the lady's restroom. All of us guys were left the watch the waiter come and take all the plates and anything we didn't need any more off the table.\n\nI sat up in my chair before saying, \"When the ladies come back, we should get up and leave the table.\"\n\nHan's smiled at me as he said, \"Dan none of us are gay and that's exactly what the women would say if we did that. However, it's a women's privilege to all go to the restroom together.\"\n\nThe waiter came back and gave us a dessert menu, but Stefan told him we were waiting on our ladies. He nodded his head and told us he would give them some time to look it over before he came back.\n\nWe saw our ladies returning from a distance but as they walked closer Stefan, Hans, our pilot, co-pilot and navigator loudly gasped and their eyes got as big and round as possible. I sat and smiled to myself as I watched all the ladies come back to the table and each one of them had their blouses unbuttoned and none of them were wearing a bra. Stefan's wife was the only one carrying a handbag, so it was my guess she was the one carrying the bras for those who were wearing one. As they sat down, we were treated to smiles from all the ladies.",
        "Stefan and Hans looked at their wives and smiled, but there was an elephant in the room for at least a couple of minutes. Klaudia (Stefan's sister) is the one who broke the silence and made the elephant disappear by saying, \"We, all of us, want our men, either attached or just escorting some to be proud of us. Do any of you have any complaints?\"\n\nHans spoke first saying, \"I love and have always loved you my dear. The change looks lovely, so you won't get any complaints from me.\"\n\n\"I'm not going to complain either.\" Stefan said.\n\nAll three of the flight crew took turns telling the flight attendants they looked spectacular also.\n\nWe engaged in small talk while waiting for the waiter to come back, but it was the ma\u00eetre d who came by first to check on us and ask how our dinner was. He looked around the table and I noticed a gigantic smile spread across his face as he openly stared down the blouse of each lady while he listened to the compliments on our meal and service. When it was his turn to respond, he was slow to do so. The ladies giggled.\n\nOur waiter came back to take our dessert orders and that process took way longer than ordering our meals. It seems the waiter found excuses to move around the table to take the lady's order. After he left Kerstin picked up and opened her handbag she reached inside and pulled out some lace panties and asked whose they were. Klaudia proudly claimed them and then placed her panties beside her water glass.\n\nNext she pulled out a white thong that was barely there and held it up for all to see. Julia (flight attendant) proudly said, \"They are mine Kirsten.\" The panties were passed down the table until they reached Julia who placed them on the table.\n\nNext out of the handbag was a pair of silk, bikini cut, fluorescent panties. When Kerstin held them up, once again they were claimed proudly by Epi Sanchez. (Flight attendant)\n\nKerstin was in the middle of pulling out a pair of white lace bikini panties when our waiter came back with our desserts. She held them up despite the waiter stopping and looking at the panties. When no one claimed them, Kristen smiled as she said, \"Oh my, they must be my panties and she unbashful placed her lace panties on the dinner table next to the location where her dessert would be placed in a few seconds.\n\nLast but not least, Kerstin pulled out a pair of light blue bikini panties and held them up on her finger as she had done with all the others waiting for the owner to claim her panties. Rose (Flight attendant) with rosy cheeks said, \"I think those are mine.\" \n\nKerstin being playful since Rose was way down on the other end of the table asked the waiter to hand the panties to Rose. He visibly gulped, looked at the panties and then at Rose a couple times before he pinched them between his thumb and index finger and gingerly carried the panties down the table to Rose, who was bright red by the time she took her panties from the waiter. Like the others, Rose took her panties and placed them on the table next to her dessert plate.\n\nKerstin looked around the table and said, \"We want you to know, we had a long talk in the lady's restroom, and we decided to be commando tonight as well as braless.\"\n\nEvery one of us complimented the ladies on being brave enough to go commando. Then normal conversation resumed until our dessert and finally coffee was finished. We had a chance to let our dinner settle before the ma\u00eetre d came back to check on us and make sure we were happy with our meal, dessert and service. Stefan gave him high praise on everything. The ma\u00eetre d looked around the table and saw all the panties lying on the table and remarked, \"I will take your compliments because you enjoyed your meal so much I see some had to take off their H\u00f6schen to finish their dessert.\"\n\nOur American girls didn't understand what he said until he clarified H\u00f6schen was German for panties.\n\nI took the bill for our dinner and handed it to Beth for review which was my normal habit. She handed it back to me with our company credit card. I included a tip on the bill for the exemplary service we had received. I handed him the bill and the card before he scurried off to process it.\n\nWhen he returned, I signed the slip and handed the receipt and credit card to Beth, who put it in her small clutch.\n\nHans stood up first and told us he would bring the bus around to the front. We waited a few more minutes before we stood and walked towards the front of the restaurant. Stefan, the flight crew and I followed our ladies out and we noticed they received many lustful stares. When we walked out the door, Hans was already parked and waiting for us.\n\nWe boarded the bus and the ladies broke loose with laughter while comparing their observances of the men who looked at them then jerked their head around for a second look on the way out of the restaurant. I was sitting with Beth and she hugged close to me quietly saying, \"I love you Dan. I don't know what it is about you but now all of us are braless and commando. I'm afraid you are not the only one who will be uncovering your dance partner's ass tonight. You'll have to come up with something different if you want to retain your position as the main man.\"\n\nHans expertly navigated us towards the night club and when we arrived, everyone was all wound up. Again, Hans let us out of the bus in the front of the club before moving the bus around to the back-parking lot. It wasn't long before Hans rejoined us, and we entered the club and found a suitable spot for all of us to sit. The waitress came by to take our drink orders and Stefan asked her in German if we could move the tables together for our group.\n\nShe put her tray down on a table and helped us move enough tables and chairs around so all of us were seated together. We needed Stefan, Hans, Kerstin, Klaudia and Karin to help us order our drinks. However, they willingly assisted us with plenty of smiles. \n\nMusic is the international language so even though we couldn't understand any words of the songs sung in German, the beat of the music made one tap their toes or their hand keeping the beat on the table. For my tastes, we were a little too close to the live band because of the noise levels. However, I am one of the older people in our group, so who was I to complain, everyone else seemed to be happy.\n\nOur drinks arrived but no one from our group stood up to dance. The old saying you must have a couple of drinks before being brave enough to get up and dance, was prevalent in our group. Although we talked during dinner, we found new things to talk about here. It was great that Klaudia sat between the flight crew and attendants. Hans and his wife Karin sat with Allison, Kelly and Connie while Stefan and his wife Kerstin sat with Beth and me.\n\nBeth squeezed my hand about halfway through her drink and I knew she wanted to dance. I stood up and so did Stefan and Kerstin quickly stood up next to her husband. We moved to the dance floor for a slow dance and we were soon joined by a few others from our group who paired up with someone.\n\nAs Beth and I danced I pulled her close to me so she could feel I was excited being so close to her. We kissed and danced through three slow songs before we decided to take a break. Beth whispered to me on the way back to the table that I should dance with Connie next.\n\nWe sat at the table for a few minutes before a fast dance tune was played and I invited Connie to dance with me. I can't believe the attention she received while shaking her booty and her boobies. Her blouse did nothing to hide her lovely puffy nipples as we rocked to the music. I saw plenty of guys and even some girls staring at Connie's titties pop in and out of the opening of her blouse. When a slow song came on next a young man came over to us and offered to dance with Connie, but she refused and danced with me. She pressed her body against me and felt my semi hard cock down my left pantleg. I whispered in her ear that she should accept the offer to dance with the young man. She smiled and nodded her head while it rested on my shoulder.\n\nI noticed the young man watching us from a place not far from us. He was in a spot that wasn't crowded so I turned Connie's back towards him and dropped my hands to her lovely ass. As we slowly moved to the music, while standing in place, I slowly massaged her ass and at the same time raised her skirt. The song was almost over when I felt the hem of her skirt at my fingertips. I looked directly at him and raised Connie's skirt in the back, all the way up to her waist. I knew her whole ass was visible to him and his eyes got very wide as I put my hands on her bare cheeks and massaged them. The music ended and I kept Connie facing me as I watched the young man make his way across the short distance to us. He stepped to our side and asked Connie, with hand movements for a dance. I smiled at him and even though neither Connie nor I spoke German, we mutually agreed for her to dance with him.\n\nI left Connie with him and they were holding hands while I walked back to the place where he had been standing. I watched him try to communicate with her, but she obviously didn't understand him. A fast dance was the next song to come on and I watched as Connie's lovely titties once again moved in and out of view. The young German guy was wide-eyed during the whole dance. There were two more fast dances and while I watched Connie, I saw Beth work her way over towards Connie while dancing with our pilot. I enjoyed watching both Beth and Connie expose their boobies.\n\nI thought Connie would take a break from dancing however when the next song, a slow one, started playing, she moved in towards the young German guy and pressed her body against his. I watched as she moved one of his hands between them and then step back momentarily until his hand was on her titty. She stepped back into him, trapping his hand between them as they danced. I noticed she kept looking up at him and smiling and that he made no attempts to grope her other than her permission she'd given him to feel her breast.\n\nBeth saw what Connie had done so she followed suit and put our pilot's hand on her breast and then moved back against him. I enjoyed watching both girls enjoying themselves. When the dance was over, I saw both were going to take a break. I also saw Connie pulling on the German guy's hand trying to ask him to come to our table. I stepped out from where I had been standing and walked over to the two of them and put my arm around his shoulders and moved my other hand as an invitation to walk forward.\n\nWhen we reached our table, I asked Stefan to translate for us. He stood up and spoke German to the young fellow and a smile spread across his face. I told Connie to ask him her questions. Connie started out with, \"Are you here with someone and do you have a girlfriend?'\n\nStefan spoke to the German guy and both answers came back with \"No\"\n\nConnie asked if he would like to join us for a little while but that she would be dancing with others also.\n\nStefan again interpreted what Connie asked and his reply in German was, \"I am here by myself and although I enjoyed dancing with you, I don't want to tie you down. You looked so lovely dancing with that fellow over there and I would love to see that again. If I join you, I will be way over here and miss the joy of seeing you. If you don't mind, I'll watch and then join you for some dances. You are a very brave and beautiful young lady. Please don't be upset with me. You make my heart beat fast when I see you dance with him. Thank you for allowing me to be a part of your evening.\"\n\nConnie smiled and leaned forward and pressed her lips against his in a kiss that lasted at least twenty seconds. When she stepped back, she placed his hand inside her blouse while all of us were watching. His hand remained on her breast for a short time before he leaned down and returned her kiss. He removed his hand and turned and walked away.\n\nConnie watched him go and then turned to me and said, \"Now I know he loved to see my ass when you had my skirt up. When we dance again, I want you to show him the rest of me.\"\n\nBeth stood up and said, \"Wow, he sure had a way with words. I like him, he seems like a very respectful young man.\"\n\nStefan puffed out his chest a little as he said, \"We have our share of bad apples as you Americans say, but Germany also has many young men who are respectful and hard working. I am so glad that you met one of our best examples for our younger generation Connie.\"\n\nWe all sat down at the table and rotated up and down for different dances until Connie came over to me and said, \"He's back in that place over there. I want to dance with you.\"\n\nWe walked hand in hand out on the dance floor and when we reached that side of the dance floor I reached out and unbuttoned two more buttons on Connie's blouse. She was facing him when I pulled her blouse completely open and exposed both her breasts to his view. I put my arm around Connie and kept her facing towards him, as we slowly moved our hips to the music. When I reached down and grasped the front of Connie's skirt, his eyes followed my hand. I paused for a moment and then without any further hesitation I raised her skirt all the way up to her waist and tucked the hem in the waistband so it would remain in that position without me holding it.\n\nConnie and I kissed while we moved in slow motion towards the young man. No one behind or beside us could see what the young man was seeing. Connie's bald pussy was on full display for him and some of her steps she moved her leg off to the side so her pink pussy spread open. We were about five feet away from him when I reached down and dipped my finger inside Connie. She gasped as I found her clit and immediately started to shake and shudder as her orgasm gripped her body. As the last notes of the song were played, I moved Connie, so she was standing right in front of him. Her breasts were out of her blouse and all he had to do was reach out his hand and he would be able to touch her bald, pink pussy.\n\nAs I said before, we were in the far corner of the dance floor and with a few more steps, the area was shadowed enough to be darker than the rest of the room. I remained standing where I was so I could block Connie from anyone seeing her. She reached out and took the young German guy's hand and placed it on her pussy. She moved it down until his fingers were covering her crack before she leaned up and kissed him. I can only guess that he inserted a finger or two inside Connie because I felt her tremble and heard her soft moans. They continued to kiss for a few minutes and during that time, I saw Connie reach out and stroke his cock through his slacks.\n\nAfter a few minutes of them making out in that dark corner, I saw Connie smile and motion for the young man to follow her, and me of course. She took a couple of seconds to drop her skirt and button only one button of her blouse and pull the sides together, somewhat. Again, she motioned with her hand for him to follow her before she reached down and took his hand in hers and started towards the door. I had a feeling I knew what she was going to do so when we were out on the dance floor, I motioned for Hans to come with me. It took a couple of seconds for him to realize what I wanted and when the light came on (so to speak) he stood up and walked swiftly to catch up with us.\n\nThe young German guy looked at Hans until he said a few words in German and then he seemed to relax. He had been through this before, so he knew Hans was there to interpret what was said.\n\nConnie walked around in the back of the club and found where Hans had parked the bus. She walked towards it as she asked Hans, \"Is it locked?\"\n\nHe answered that it was as he reached in his pocket and took out the keys. He opened the door and Connie pulled the young man inside the bus. She turned to the young man and pulled her blouse out of her skirt. She unbuttoned it and dropped it on a seat. Then she unbuttoned and unzipped her skirt and let it fall to the floor. She bent over and picked it up and placed it on her blouse. She stood for a moment and let the young man view her naked body before she stepped forward and pressed her body against his and kissed him. The kiss lasted a while.\n\nWhen she stepped back, she asked Hans if he had any tissues in his bus. Hans moved to the front of the bus and picked up the box of tissues and came back and handed them to Connie. Connie said to Hans, \"Please tell him, I'm going to strip him naked like me.\"\n\nHans told the young man what Connie said. He smiled. Connie started to unbutton his shirt and when she was finished, she placed in on top of her skirt. Connie kneeled in front of him, unbuckled his belt, unbuttoned his slacks, unzipped them while looking up at him. After all this she lowered his slacks and when they reached his ankles, he kicked off his shoes and allowed Connie to remove them. Once again, she was careful and folded them and placed them on his shirt. She leaned forward and kissed the tent in his boxers and then pulled back and looked up at him again.\n\nHans and I could see the young man was very excited as we watched him breathe rapidly. Connie leaned in again and this time opened her mouth and took the head of his cock in with only the thin layer of cloth separating his cock from the warm wet fluid of her mouth. She held his cock in her mouth and reached up and cupped his balls in her hand all the while maintaining eye contact with him. He placed his hands on the back of Connie's head and encouraged her to take more of his covered cock into her mouth.\n\nConnie did what he wanted her to do without saying a word. She even adjusted his boxers so she could take most of his cock into her mouth. She started to move back and forth and the saliva from her mouth made his boxers wet so they would slide better.\n\nWith his cock still in her mouth she reached up and hooked her fingers into the waistband of his boxers and started to slowly lower them. He started speaking in German and Hans was right there to tell Connie what he was saying. When it came to the decision to take or not take his boxers down past his cock, Connie gave him a little nibble on the head of his cock, pulled her mouth off, yanked his boxers down and re-inserted his cock into her mouth. She sucked for a few minutes before she pulled off and looked up at him and said, \"If you have a condom then you can fuck me, if not you will have to be satisfied with a blowjob.\"\n\nHans told the young man what she said and when he finished, the young man smiled and reached for his slacks. He pulled a condom out of the pocket and showed it to Connie. She returned his smile, gave his cock a kiss on the head of it, then stood up and planted a kiss on his lips as she pressed her body tight against his.\n\nThe young man kissed Connie's neck and behind her ears before he slowly moved down to her lovely breasts. He delayed any further southern movement while he feasted on her puffy nipples. When he was ready, he moved Connie sideways in the aisle and encouraged her without words being spoken to lay down on the seat. She followed his wordless instructions and was happy she did when he tickled her belly button with his tongue, hoisted her legs in the air and kissed inside each thigh before he kissed and licked behind her knees. When he did that Connie let out the most sensuous set of feminine moans. The young man continued his journey until his lips reached the promise land. He took his time tongue fucking her before his tongue touched her clit. The second he did, Connie's hips bucked up to keep the contact, but he pulled away. She begged, \"PLEASE, don't tease me, let me have my orgasm.\"\n\nHans once again translated what she said to the young man and his response was, \"In due time my love.\" \n\nThis time Hans told Connie what he said.",
        "Hans and I watched as the young man brought Connie to several small orgasms before he stood up and rolled the condom down his cock. By that time Connie was begging him to fuck her and Hans was very busy translating everything she said. The young man looked at Hans and said in German, \"Tell Connie I am now going to give her the most terrific orgasm she's had tonight.\"\n\nHans repeated what he said to Connie and she only moaned, which didn't need any translation. The young man inserted his cock into her slowly and carefully until he was all the way inside her. He paused for a couple of minutes to allow her to adjust to his cock while he told her, \"You are so lovely, I wish you lived here in Germany. Your pussy is so tight and wet. You feel so good gripping my cock that's why I am waiting for you to adjust to my size.\"\n\nHans once again was busy telling Connie everything he said. Connie however was enjoying his hard cock that had invaded her womb. The young man started pumping into Connie slowly and everything she said, Hans translated. Connie came a few more times on his cock but she could tell the \"big one\" was coming. She was constantly talking to him and Hans kept up with her translating all that she said.\n\nThe young man said out loud that he was getting close and Hans told Connie he was close. Connie said out loud she was almost there too. Hans and I listened to the mutual noises as both worked towards the end and when it came, he grunted loudly as he blew his load into the condom and Connie screamed and bucked her hips radically as her orgasm overtook her body and caused her to spasm with each tingle her orgasm produced. Both made satisfied noises as their bodies came down from their orgasm.\n\nHans pulled a few tissues out of the box and handed them to the young man when he pulled out of Connie and stood up. He helped Connie stand up and both kissed passionately with their naked bodies pressed tightly together. A few minutes passed before Connie took the tissues from him and squatted on her knees. She reached out and peeled the condom off his cock and then thoroughly wiped his cock with the tissues. He took the condom and tied a knot in the end of it so none would leak out. They wrapped both the tissues and the condom in a fresh tissue. \n\nHe turned to Hans and said, \"Please tell her that I am pleased that she allowed me the pleasure of enjoying her body and that I truly am sorry that she is from America and one day she will have to go home. I wish she would stay here and become my girlfriend. She is brave to display her body to me in there and I hope she will do it again even though I have seen her completely naked. She is a lovely young lady.\"\n\nHans did as he asked and translated what he said to Connie. She made soft noises while Hans was talking but her attention was on the young man.\n\nIn return, Connie asked Hans to tell him what she had to say and then she started talking. She started off by saying that he was a very polite man and that's the only reason she allowed him to enjoy her body. \n\nShe continued by saying, \"I am an exhibitionist, so I didn't mind showing you my body in there. However, if you had been rude, we would not be here right now. I like you too, but I am here to do my job and Dan over there is my boss. If I was here by myself, I might seriously consider your offer to stay. Yes, we can have more fun in there when we go back in. I'm sure Dan would rather dance than be my bodyguard all night. You see, he is here to make sure no one hurts me. I would like it if you sat beside me and then dance with me.\" \n\nHans finished telling him what Connie said.\n\nHe looked at me and nodded his head, he looked at Hans before he looked back at Connie saying, \"I would love to sit with you and your boss. I think all of you are a little crazy, but I love crazy. You seem to be a special girl and I would love to have your address and your phone number so we can text even when you go back to America. I will try to learn English if you promise to try to learn to speak Deutsche the German language. But we can discuss this inside, let's get dressed and go back in.\"\n\nOnce again Hans was tasked with translating what was the young man said.\n\nConnie picked up his boxers since they were on top of the pile and got down on her knees and held them open for him to step into them. As she was drawing them up his legs she leaned forward and once more opened her mouth and took his whole drooping cock into her mouth until her lips were in the hair of his pubic area. We watched as she sucked on it a few seconds before he pulled off and pulled his boxers up. He adjusted his cock, so it was facing down next to his left leg. Connie remained on her knees and she held his slacks for him. He stepped into them and as she pulled them up, she stood up. He picked up his own shirt and started to put it on. When he saw Connie reach for her skirt, he stopped her and finished with his shirt while she stood naked in front of him.\n\nThe young man, after he finished with his clothes, reached for Connie's skirt and before he held it for her to step into, he kissed both puffy nipples and fingered her bald pussy. He opened the skirt and intentionally held it high, so Connie had to lift her leg to step into it, while he closely watched her pussy. Connie giggled and took her time. With both legs in the skirt, and pulled up to her waist, she held it while she motioned for him to pick up her blouse. She put one arm in at a time and then motioned with two fingers and pointed to the two bottom buttons. He took the hint very well and did as she instructed him. She tucked the bottom of her blouse into her skirt and then turned so he could zip her up and fasten the button. She fluffed the bottom of her blouse and turned to look at me and Hans.\n\n\"I am so sorry to have ruined your evening of dancing with my shellfish acts. Will both of you please accept my apology?\" Connie said to Hans and me.\n\nI motioned for her to come to me and while I was hugging and kissing her cheek, Hans was telling the young man what she had said. \n\nI told her there was no need to be sorry for anything. I enjoyed watching out for her and making sure she was safe just as I promised to do. I said, we have no time limit on dancing so let's go back in and enjoy ourselves.\n\nWhile I was talking Hans was translating what I said to the young man. He came forward and held out his hand to Connie and they waited for us to move off the bus before they followed us. There was a garbage dumpster a few feet away from the bus, so the young man walked over and deposited the used tissues and condom in it.\n\nThey walked hand in hand back into the club following Hans and me. We found another chair for the young man to sit down in and re-arranged the seating enough, so Hans and Karin were sitting near the young German.\n\nBeth had plenty of questions for me, and Stefan, along with his wife Kerstin listened to the short version about Connie meeting the young man, liking him and taking him out to the bus to make love to him. I told Beth I was there to make sure she didn't get hurt just like I promised I would be.\n\nBeth kissed me passionately and said, \"Thank you sweetheart, you are the man I love just for the way your treat women.\"\n\nStefan leaned over and asked me if that relationship might go somewhere. I looked at him and said, \"He wants to learn English, he asked her to learn speak Deutsche. He said he wished she didn't have to go home but he also asked for her address and her phone number so he could text her. I would say, based on what I saw, they just might make a couple. I'm no expert but as I said, I stood by to make sure she didn't get hurt and all I saw was him treating her like I would, very gently.\"\n\nStefan excused himself and walked over to Hans, Connie and the young German. Stefan said in German to Hans, \"I want you to tell Connie in English everything I say to this young man.\" Hans shook his head to confirm what Stefan said to him and then turned to Connie and told her what was said. \n\nConnie looked confused at first but then listened to Hans say, \"Everything Stefan says to that young man, I'm going to translate in English for you. I don't know why Stefan is talking to him, but we will know soon enough.\"\n\nConnie smiled at Hans before saying, \"Thank you Hans, I really appreciate it. Actually, I thought you did a wonderful job telling him everything I said while we were having sex out there.\" \n\n(****** I'm going to be typing all Stefan's questions and the guy's answers in English so just imagine if you will, the conversation Connie hears will all be in German until Han's translates it to her.)\n\nStefan introduced himself, then Hans and finally Connie. He asked the young man if it would be ok if he asked him a few questions. The young man replied \"Yes\"\n\nStefan started off talking to the young man by asking him his name. \n\nHe replied in German, \"Henri Wolff\"\n\n\"How old are you Henri?\"\n\n\"I am twenty years old.\"\n\n\"Do you have a girlfriend?\"\n\n\"I wish I could have her (pointing at Connie) for a girlfriend but she is from America. But no, I don't have a girlfriend here. I'm normally very unlucky with girls my age. That is until tonight. Wouldn't you know it, the one girl who pays attention to me lives so far away on the other side of the ocean. But that's my luck.\"\n\n\"Why do you say you are usually very unlucky with girls?\"\n\n\"I think it's because I study too much. I think they call me a geek.\"\n\n\"Have you graduated from school?\"\n\n\"Yes, I graduated from regular school when I was a little over sixteen. I am an \"A\" student. I'm going to the Uni for computer science, now.\"\n\nStefan pulled his card out of his wallet and handed it to Henri. He asked Henri to come and see him the next day. He told Henri he had a meeting at eleven o'clock and if he came to the office around noon time, they could talk some more. He smiled at Henri and told him Connie would be there also.\n\nHenri smiled broadly and looked at Connie then leaned over and kissed her. Stefan stood up and came back to his original seat. I looked at him and he saw I had a question, so he said, \"I'm going to do a Dan Morrison. I'm going to talk to him tomorrow, I invited him to the office at noon. We should be taking a break for lunch by then. I told him Connie will be there for the meeting.\"\n\n\"Are you going to hire him?\" I asked.\n\nStefan smiled at me and said, \"He graduated from school before he was seventeen and he's at the Uni taking courses in computer science. My computer tech is older and very reliable, but it wouldn't hurt to have a young person ready to take over if he decides to retire. I will let him give the young man a test and put him through his paces. If my computer tech is impressed with him, I'll most likely hire him and give him a schedule that will allow him to continue his studies.\" \n\nI asked Beth if she wanted to dance and when she accepted, we walked out on the floor and like I did with Connie, I unbuttoned another button her blouse and steered us into the center of the crowd doing a fast dance. I was almost delirious with joy watching my wife shake her breasts and so many guys around us, staring at them. Beth pulled the sides of her blouse open and smiled at me as her chest was totally on display. When the music switched to a slow song, Beth moved into my arms and pressed her bare chest against me. One fellow near us gave me the thumbs up when the woman he was dancing with, had her back to us. I smiled at him and turned Beth sideways and openly fondled her breasts while he watched me over his partner's shoulder.\n\nWhen his partner started to turn, I pulled Beth back against me and we continued to dance. We stayed out on the dance floor through a few more dances until Beth told me she needed a drink. When we walked back to the table, I looked at Connie and Henri and saw her skirt was hiked up so far that her pussy was almost visible. I also noticed a few other of the girls had their blouses unbuttoned with their breasts showing all but the nipple. \n\nAfter Beth and I had a chance to have a drink and rest a moment, Karin asked me to dance and I immediately accepted. I looked over my shoulder as we neared the middle of the dance floor and saw Hans begin to dance with Beth. The four of us moved around the floor and like I had done with Connie and Beth, I unbuttoned another button on Karin's blouse and pulled it open until only her nipples were covered. She smiled up and me as she pushed against me and kissed me passionately. I reached my hands down her back until I cupped her ass cheeks. She purred into my shoulder and I said to her, \"Do you want me to do what I've done to Connie and Beth?\" \n\nShe pulled her head back and looked deeply into my eyes before she slowly nodded her head. I moved us until I had Hans's attention and then reached down and pulled the back of his wife's skirt up to her waist, putting her ass on display. I held it there and watched Hans do the same thing with Beth. I turned Karin so she could see what Hans had followed my lead, but at the same time, my actions bared Karin's ass to the others on the dance floor.\n\nWe were still enjoying our night out but the crowd in the club started to thin out. Stefan and I switched wives and while dancing a slow dance we once again bared each other's wife's ass. This time Connie and Henri were out on the dance floor and Henri moved over by us and pulled up the front of Connie's skirt and bared her bald pussy and turned her towards Stefan and Beth. Stefan saw the challenge, so he turned Beth towards Henri and Connie and lifted Beth's skirt up all the way and showed off her ass first and then twirled her around and let Henri look at my wife's bald pussy.\n\nKarin and I watched before I lifted Karin's skirt up all the way and pulled her blouse open baring both her breasts and turned her so both Stefan and Beth could see her and then Connie and Henri could view her lovely bald pussy. We danced a little more but when we went back to sit down, I pulled up Beth's skirt, so her pussy was on display. Henri did the same to Connie and Stefan pulled his wife's blouse out of her skirt and opened it so both her breasts where on display to anyone in the room.\n\nOur waitress kept coming and going all night and she seemed to enjoy the display. She openly stared at the exposed pussy and tits and smiled while she was either taking a drink order or delivered a drink. I saw this and said to myself, \"Fuck it let's go for broke.\" I asked Beth, while she was sitting to pull her skirt all the way up and spread her legs so I could view her lovely pussy. Henri saw what I had Beth do and he encouraged Connie to do the same thing. Connie looked at Beth and then mimicked her by spreading her legs and pulling her skirt up in the front and tucking the hem in the waist of her skirt.\n\nWith them basically naked form the waist down I again watched our waitress came back to our table and move so she could have the best view of both Connie and Beth. I smiled at her when she caught me watching her and she gave me the thumbs up also.\n\nI left Beth and Connie sitting like that and took Klaudia out on the dance floor. While we danced a slow dance, I openly fondled her breasts and she said, \"Your wife is sitting over here with her lovely pussy on display and I'm so fucking jealous that you haven't tried to put me on display.\"\n\nI said, \"Oh but you are wrong. That guy over there to your left has been watching me switch between your breasts. I was just about to unbutton your blouse and give him a good look at you instead of a side view that he's been getting.\"\n\n\"I did not know we were being observed. Please Dan, show me off like you have done with the others. I want to know what it's like to be seen in a place other than in the thermal bath or on a nude beach.\"\n\n\"You asked for it my dear. I'm not going to wait.\" I reached down and grabbed the hem of Klaudia's skirt and pulled it up and tucked it in the waist. Her pink bald pussy was now on display. I turned Klaudia towards the guy and he stared directly at the pussy I was showing him before I reached down dipped my finger into her. His eyes bugged out and I held her in that position and asked her to spread her legs while I reached up and pulled her blouse open. We danced in place with him staring at Klaudia's naked body. Finally, I reached over and released her skirt and let it fall but I kept her breasts on display. I turned Klaudia so she was facing me and pulled the back of her skirt up before asking her to spread her legs again. This time I noticed a few guys were looking in our direction and smiling. I told Klaudia, \"All together, there are five guys staring at your lovely ass right now. I want you to leave your blouse alone so they can see your lovely breasts. Now turn and wave at each one.\"\n\nKlaudia turned in my arms with her back to me and her breasts on display as she followed my suggestion and waved at each one. As she was waving at the third one, I reached down and pulled up the front of her skirt and held it up a few seconds longer than it took her to finish waving at the last guy. I dropped her skirt in both the front and the back but kept her facing the other guys until I saw one start to turn, so I turned Klaudia back to me, I didn't need any jealous girlfriends or wives getting disturbed by be showing off the girls.\n\nKlaudia buried her face in my neck and said, \"Dan, I'm so fucking wet, I could fuck you right here on the dance floor. I've done accidental displays of my pussy and tits but to have you blatantly shown off my body in a public place, I'm in heaven.\"\n\n\"To tell you the truth Klaudia, I didn't think the displays would go so far. Connie is the one who asked me to show her to the seemingly shy guy, Henri. I only did what she wanted me to do and she ended up liking the guy and now she wants more of him. I may have to leave her here with you and Stefan and fly her home again in a month or so.\"\n\n\"If she wants to stay with us Dan, she can stay in my flat with me. I would love to have her there and Henri can come and stay if he wants.\" Klaudia said.\n\nWe finished our dance and walked back to the table where I found our pilot had taken my chair next to Beth so he could have an up close and personal view. I also noticed he had his hand on her leg less than two inches away from her beautiful love tunnel. I followed Klaudia around the table and sat in an empty chair and when I looked around, I saw Allison and Kelly out on the dance floor. One was with Henri and the other was with Hans. I looked across the table and saw the co-pilot had taken Henri's chair. \n\nI watched as Allison's breasts swayed to the beat of the music and Kelly's blouse was completely unbuttoned and it only covered her breasts when she held the sides. While she was dancing, she wasn't holding the sides and I enjoyed that.\n\nConnie caught me looking her way and she smiled as she pulled her blouse out of her skirt and unbuttoned the bottom two buttons. She pulled her blouse open and left it that way. The co-pilot leaned over and licked one nipple and then licked the other. I smiled back at Connie and she knew I approved.\n\nEpi saw me sitting and came over to me and sat on my lap. I opened her blouse and looked at her lovely breasts before I reached in and played with them. She wiggled on my lap and leaned over saying she found a place to get her pussy waxed. I looked at her and said, \"Oh, I'd love to see it after you've had it done.\"\n\nEpi said, \"I'll do one better than that. I want you to be the first to eat my pussy like you did Julia, tomorrow night. Then I want you to fuck me silly.\"\n\nI looked directly in Epi's eyes and said, \"Is this the same girl who said, \"FUCK HIM\" when you were asked to fly nude?\"\n\nEpi said, \"I'm not blind Dan. I've watched you tonight how treat all the ladies. I've seen you expose them, and they were so happy. Girls talk and I can tell you if there was a vote tonight to elect you president, you would be in the white house tomorrow if these ladies have anything to say about it. I mean look over there, our pilot is finger fucking your wife and she's loving every minute of it and yet you aren't in a rage like a jealous man would normally be. Dan, I made a mistake in judging you before I got to know you. I can't wait to make other trips with you. But first I want you to take care of me.\""
    ],
    "authorname": "RecHiker",
    "tags": [
        "brother sister sex",
        "daughter",
        "exhibitionism",
        "father",
        "father daughter incest",
        "incest",
        "mother",
        "nude",
        "sister"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-morrisons-ch-29"
}