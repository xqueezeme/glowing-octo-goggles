{
    "title": "Wheels In Motion Ch. 05",
    "pages": [
        "*** This series was awarded the Most Literary/Genre Transcending award in the 2020 Reader's Choice Awards. Thank you to all my readers and all who voted. ***\n\nHello friend. Welcome to Chapter Five of my series, Wheels In Motion.\n\nIf you haven't read Chapters One through Four, then... You know what? You do you, my friend. If you want to go into this chapter blind and be all confused and stuff, that's your jam? Who am I to stop you?\n\nI hope you enjoy this chapter, however you got here.\n\nAs always, this chapter owes a huge debt to my beta-reader, ArmyGal33 and my indispensable editor, AwkwardMD.\n\n~~ Tenleytown, Washington DC, August ~~\n\nLIZ\n\nAddison stared questioningly into my eyes.\n\n\"Did you hear me, Addie?\" I asked. \"Go get my chair. I don't want anyone messing with it while we talk.\"\n\nShe nervously licked her lips. Then licked them again. I wondered if our kiss had tasted as good to her as it had to me. She still hadn't moved so I gently poked her in the ribs with my fingers, making her flinch and sit up away from me.\n\n\"Go on,\" I said, softly.\n\n\"O... okay,\" she said. She stood and looked down at me. \"I... I'll be right back.\" She walked slowly down the hallway, glancing over her shoulder at me, as if dazed.\n\nAs soon as her white-blond hair disappeared down the steps, I rolled down onto my stomach and crawled into her apartment. My wheelchair was surprisingly lightweight, but it was bulky. I knew it would take Addison a few seconds to wrestle it up the steps, and when she did I didn't want to let her have the power move of helping me back up into it. She rolled my chair into her apartment and found me sitting on one end of her small couch.\n\nShe looked back and forth between me and the spot in the hallway where I'd kissed her, and actually smiled.\n\n\"You really are determined, aren't you?\"\n\n\"I don't fuck around when it comes to getting what I want,\" I said, putting a hard emphasis on the curse word. I also didn't return her smile. Yet.\n\nHer smile vanished as she sucked in a nervous breath, as if I'd poked her again, and shifted her weight from foot to foot.\n\n\"Well?\" I asked.\n\n\"'Well' what? You're the one who said we had to talk.\"\n\n\"I meant, 'well, are you going to close the door and sit down,' or do you want to leave it open so all your neighbors can hear more than what we've already yelled at each other out in the hall.\"\n\n\"Oh, right.\" She gave my chair a gentle push, so it glided over toward me and turned to shut the door. I reached out to stop my chair before it bumped into her side table, then watched her while she moved to sit on the other end of the couch.\n\n\"So,\" she said, folding her arms across her chest, \"go ahead. Talk.\"\n\nThis time I did let myself smile.\n\n\"As you may have gathered, I feel some things were left unresolved between us. I think we should... talk. I think we both need that.\"\n\n\"But...\" She lapsed into uncomfortable silence.\n\n\"But what?\" I asked, gently.\n\n\"It's... I mean... I didn't want to talk because I thought nothing would change. Or... could change. But... you just kissed me. Has something changed?\" The look of desperate hope in her eyes was heartbreaking.\n\n\"Lots of things have changed. You kissed me, then cut me out of your life. You started dating someone. From what I hear, that didn't work out so well for you. From what I hear, you're in a pretty bad place now.\"\n\nHer face darkened. \"Amber,\" she muttered.\n\n\"Hey, knock that off. She's a good friend and she's worried about you. Is she being a busybody, or does she actually have a reason to worry?\"\n\nAddie didn't say anything. She tried to stare a hole in the floor.\n\n\"Fine. I get it. You're going to make me do all the talking. I wasn't happy with the way you walked out of my life. Especially when you kissed me right before you did it. That wasn't cool.\"\n\n\"I'm sorry,\" she whispered.\n\n\"I was pissed... for a long time... but I think the reason I was especially pissed was...\" I shook my head, looking for the right words.\n\n\"Tell me. Please.\"\n\nI took a deep breath. This was the moment. I took the plunge.\n\n\"It was because I wished you hadn't run off like that. I wished you'd hung around to talk about it. And maybe... maybe kissed me some more.\"\n\nThis time her intake of breath was less like I'd poked her and more like I'd gut punched her. Tears sprang into her eyes.\n\n\"Please tell me this is real? That you're not messing with me?\"\n\n\"I'm serious, Addison.\"\n\n\"Oh my god... Liz...\" She held a hand over her mouth as tears spilled down her cheeks. Then she leaned forward, reaching out for me.\n\n\"Whoa, settle down,\" I said, putting my hand out to stop her. \"We have a lot to talk about before we go there, and you have a lot of work to do.\n\n\"What?\" I'd thrown her off balance again, which had been my goal.\n\n\"I said you have a lot of work to do. First off, you just broke up with Vivian, right?\"\n\nShe sat back, sniffed, and lifted her hand to wipe the tears off her cheeks with the back of her hand. \"Yes. Well, like, a month ago. I'm not sure I really broke up with her. She cheated on me. I was... done after that.\"\n\n\"I'm sorry that happened to you. Do you want to talk about your thing with her?\"\n\n\"No, I really don't.\"\n\n\"Let me rephrase that. I need you to tell me about your thing with her.\"\n\n\"Why?\" she asked, sullenly.\n\n\"Well, because... You tell me you're in love with me, you kiss me, then run away and cut me out of your life completely. Then you start dating someone else, like, immediately. How do you think that makes me feel after what you told me that night?\"\n\nShe sniffed, then said \"Okay, that's fair.\"\n\n\"So, tell me about her.\"\n\n\"She's just... No, I shouldn't say just. She's a woman I met at the League when I was there with Amber and Nora. She sent me a drink. We ended up talking for a while. Then I went on a date with her, like, two weeks later.\"\n\n\"I remember you telling me about her. This was before you told me you fell for me, right?\"\n\nShe nodded. \"When I met her, I was still lying to myself that you and I were only friends. I mean... that you were just a friend to me. I think, at some level, I knew I was falling for you then, but I was trying to ignore it and she was someone I thought I could redirect my feelings toward.\"\n\n\"Okay. So, then we go to the Rotors' show, you tell me you love me, and you bail. What happened next?\"\n\nShe looked anguished. \"Do I really have to tell you all this?\"\n\n\"No, you don't. But if you want us to try and work out whatever we have going on between us, then yes. You do.\"\n\nShe took a few moments, obviously gathering her thoughts, then she continued while still looking at the floor, unable to meet my eyes.\n\n\"I met with her to tell her I had feelings for you and that I thought we shouldn't see each other since I was hung up on you. I didn't want to hurt her, and I wanted to be up front about it. She told me she wasn't really looking for anything serious, so if we wanted to hang out as friends\" --she closed her eyes for a moment and seemed to collect herself-- \"and maybe friends with benefits... that she was game.\"\n\n\"So, you took her up on it.\"\n\n\"This is so fucking embarrassing,\" She muttered. \"Yes! I did. I've made dumb decisions when it comes to dating, for like my entire life, and this was one of the dumbest. It was stupid, but at the time I had no idea how I was going to get over you. She seemed like... I don't know. I thought maybe if I threw myself into it with her it would help me, but I'm not built for 'friends-with-benefits'. Eventually I found myself pushing her to be more than that, which was... She didn't want it. I didn't want it... with her. Not really, anyway, but I knew I couldn't have you... So, I pushed and pushed and tried to get her to be my girlfriend or whatever. It was a disaster of my own making.\"\n\n\"So, what happened?\"\n\n\"I finally talked her into trying to make a real go of it, or at least I thought I did. Amber tried to warn me I was trading one problem for a different one, and she ended up being right. I hate that she was right. A few weeks after we saw you at the E.R., after the Metro crash, Viv and I were supposed to have a date, but she called and cancelled at the last minute. Said she had to work. I was complaining about it to Amber, so she invited me to go to the Mystics game with her and Nora... where I saw Viv with another woman.\"\n\n\"I'm sorry.\"\n\n\"It was my fault. She was using me for sex. I was using her to try and get over you, but I was pushing us into something that was wrong for both of us.\"\n\n\"I imagine you have some baggage leftover from that.\n\n\"No.\"\n\nI gave her a skeptical look. \"Really?\"\n\n\"I don't. I... I have baggage from you,\" she whispered, as a tear ran down her cheek. \"I'm pretty sure that's why she cheated on me. She knew I wasn't into her so much as I wanted to be distracted from you, and I think it really hurt her.\"\n\nThat rocked me back on my mental heels. \"Um, okay. Let's... let's table that subject for now then.\"\n\nShe smiled through her tears. \"Okay.\"\n\n\"The other thing we need to talk about is me. Well, about me and you and me.\"\n\n\"What do you mean?\"\n\n\"Addison, I'm not sure that I'm... gay or whatever. Sorry, I know that sounds flip. It's just... when you kissed me, I felt something I haven't felt since before I broke my back. Something I haven't felt with any of the guys I've been with since then. I can't say for sure yet if this is the right thing for me. For us. If we go down this road it's entirely possible that it won't work out, and that it'll have been a spark I felt because no one's kissed me in forever. Also...\" I paused as I felt my own eyes get a little teary.\n\nShe reached out and squeezed my hand. \"Tell me. Whatever it is, good or bad, I need to hear it now.\"\n\n\"I don't think I... I mean... it's possible I just don't have a sex drive anymore. I've been thinking about it a lot in the last few months. No one has turned me on since my injury. No one has...\" I huffed out a breath before continuing. \"Sex, and any attempts thereof, have been pathetic at best for me. I'm worried that trying and failing with you would... would hurt more. Would hurt you... me... but... Addison, I haven't been able to forget our kiss.\"\n\n\"I haven't been able to either,\" she said, quietly.\n\n\"Right. Good. So... things went pear shaped between us. You were my best friend. I miss that, but I think I... want more than that. Maybe.\"\n\n\"God Liz, I want that too!\" She leaned forward towards me again, and again I put my hand on her chest to stop her. \"What?\" she asked, confused.\n\n\"I told you, you have more work to do. It's not going to be that easy.\"\n\n\"What do you mean?\"\n\n\"I mean, girl, you and I have only been friends! I'm not going to jump in bed with you here and now. You're gonna have to put in the time. You need to woo me.\"\n\n\"What?!\" She let out a short, surprised laugh. \"I have to 'woo' you?\"\n\n\"I mean it, Addison. I'm up for giving this a shot, but I'm not up for us going from being best friends, to not talking for months, to me trying sex with a woman for the first time. Especially with you. I don't... I guess I'm saying I'm not interested in just having you fuck me. If we're going to do this, I want it to be a relationship. I want you to take me out on a date. Maybe a couple. I'm not easy, you know. We need to build our relationship back up and, more importantly, we need to rebuild our trust in each other. It took a pretty good hit. You don't just skip past that like nothing happened.\"\n\nShe pursed her lips and considered me for a long time. \"So... a real date. You and me.\"\n\n\"I don't know how you lesbians do it, but in my experience, traditionally the first step if you're interested in seeing if a relationship will work is a date. Don't you think?\"\n\n\"I believe so,\" she laughed, \"yes.\"\n\n\"Okay. Lucky you, I'm off this Saturday. You can pick me up any time after noon. I just need you to tell me before Friday night what time you want me to be ready and how fancy I need to dress. It's entirely up to you, though: t-shirts and a baseball game, evening gowns at the Kennedy Center, anything in between. You're in charge.\"\n\nThat earned me a skeptical look. \"Really? You are so not the type of woman to not be in charge.\"\n\n\"Don't get used to that. This will be my first date in nearly two years and my first date with a woman ever, so for now you've got the aircraft.\"\n\n\"What?\"\n\n\"Sorry. That's a helicopter thing Jo says all the time. It means for this mission, you're at the controls.\" I pulled my chair closer to me and slid myself over onto it.\n\n\"That's it? We're done talking, huh?\" She smiled at me. \"Kinda sounds like you're in charge after all.\"\n\n\"I had to be in charge to get you to talk to me. You're in charge Saturday. Oh, one more thing...\" I spun my chair around and rolled into her little kitchen. She followed me. I spied her recycling bin and saw it was completely full of empty wine bottles. I rolled forward and bumped the bin with the footrest of my chair, causing a cacophony of clinks, then turned to look back at her. \"This needs to stop, now. I don't know how much of a problem this is for you, but I do know dealing with pain through alcohol isn't good.\"\n\nShe looked away, embarrassed. \"Fucking Amber,\" she muttered.\n\n\"This isn't on Amber! I could smell the empties when I crawled in here! You've been hurting, and you've been trying to numb your pain with booze. I mean, look at how many bottles you've got here. That's not good. I want you to stop while you and I feel each other out. Uh, I mean... not feel each other... I mean, like in our new... not... I didn't... you know what I mean!\" My skin felt hot.\n\nShe grinned at me, then turned serious. \"Okay. If that's what you want me to do, I'll do it.\"\n\n\"Okay, then.\" I looked at her expectantly.\n\n\"What?\"\n\n\"Pour it all out,\" I said.\n\n\"Oh... you want me to--\"\n\n\"I want all the booze in your apartment to go down this sink, right now.\"\n\n\"Seriously?\"\n\n\"As a heart attack.\" I crossed my arms and stared at her.\n\nShe did little more than blink before saying, \"Okay.\" She opened her tiny pantry and pulled out three bottles of wine. Two had screw tops, which she quickly cracked open and poured down the sink. The third bottle she had to struggle with for a few moments to get the cork out, then the contents of that one followed its two siblings down the drain.\n\n\"That's everything?\"\n\n\"I have a bottle of Hendricks. I haven't been drinking too much of that.\"\n\nI nodded at the sink. \"It goes too.\"\n\n\"It's expensive,\" she said, as she reached back into the cabinet and picked up the black cylinder.\n\n\"I'll buy you a new one if I think you don't have a problem.\"\n\n\"Okay.\" She pulled out the cork and, without hesitation, poured the gin down the sink as well.\n\n\"Nice. Thank you for doing that.\"\n\n\"If we're really going to try this dating thing,\" she said, almost making eye contact, \"I'll do anything for you.\" Her eyes were glistening and I swallowed hard.\n\n\"Okay, good talk. I'm going to go now, so you can think about what we're going to do on our first date.\"\n\n\"No pressure,\" she said, with a smile.\n\n\"Now comes the hardest part,\" I mused.\n\n\"What's that?\"\n\n\"How am I going to get back down the stairs?\"\n\n~~Capitol Heights, Washington, DC ~~\n\nADDISON\n\nAfter our talk, Liz wheeled herself down the hall to the steps, slid out of her chair to the floor and waited for me to carry it to the bottom of the stairs. Then I came back up, sat down on the step below the top landing and pulled Liz's legs around my waist while she put her arms around my neck. I carefully stood and carried her on my back down the stairs, holding the railing with one hand. Then I sat on the bottom step and set her down where she took care of the rest, using her arms to slide herself over into her chair. She was surprisingly nimble, the way she threw her body around with just her arms.\n\nI walked her outside, and then, after our goodbyes, stood on the sidewalk and watched as she rolled herself away down the street towards the Metro until I lost sight of her. I turned and skipped back to the door and up the stairs to my apartment, looking at the end of the couch where she'd been sitting as she'd told me...\n\n...she'd wished I'd kissed her some more instead of running away from her...\n\nShe wanted me to kiss her! I flung my arms out and spun in a circle in my living room, giggling madly. It was hard to get a grip. Nothing about this was a sure thing. I knew I couldn't sit there and obsess about this by myself. I'd go crazy. I needed to talk it out.\n\nI picked up my phone and hit a button in my favorites list.\n\n\"Hey, it's me! Can I come over?\"\n\n\"I can't believe she crawled up your stairs,\" Amber said, incredulously, while she scrubbed a frying pan. I sat next to Nora at the breakfast bar in their townhouse in Capitol Heights while we watched Amber attack the pile of dishes in their sink. They'd been in the middle of dinner when I'd called.\n\n\"It was like something out of a movie!\"\n\n\"Or the act of a nutbar,\" Amber murmured.\n\n\"Sweetie, don't say that. It's incredibly romantic!\" Nora said, as she held out her empty wine glass. Amber picked up the bottle next to the sink and gave her a refill.\n\n\"Want some?\" she asked, picking up a clean wine glass from the drain board and offering it to me.\n\n\"Can I have some water instead? I told Liz I'd stop drinking while we figured this thing out between us.\"\n\n\"Wait, what?\" Amber asked.\n\n\"She insisted on it. She asked me to pour out all my booze before she left, so I did.\"\n\nAmber's eyebrows tried to crawl up into her hair. She set the wine bottle and glass down without saying anything and picked up a clean drinking glass from the drain board to fill from the refrigerator door dispenser, with an otherwise blank expression.\n\n\"What?\" I asked.\n\nAmber simply shook her head and handed me my water.\n\n\"It's never nothing when your eyebrows do that, sweetie. Go ahead and say whatever it was,\" Nora prodded her.\n\n\"I was going to be very skeptical of this whole enterprise. I thought you two should talk it out, not... whatever this is going to be. I mean, this is a woman who, up until now, has considered herself completely straight. There is a ton of emotional baggage between the two of you, plus you're all jacked up over Viv cheating on you. Now, all of a sudden, you're going to go on a romantic date with Liz? Her first? I mean, at first blush, this sounds both too good to be true and a fucking disaster in the making, all at once,\" Amber said.\n\n\"I know, I know,\" I said. \"I'm worried about all that too. My heart is over the moon right now, but my head is telling me if this blows up I'll be worse off than I was.\"\n\n\"You didn't let me finish,\" Amber said, as she picked up a dish towel and started drying plates in the rack. \"I said I was going to be skeptical, but the fact she wants you to stop drinking speaks volumes for her common sense, her observational skills and her concern for your well-being. The fact you up and did it when she asked you to is a good sign, too, I think.\"\n\n\"So, you think I should go through with this?\" I asked.\n\n\"Honey, there's a less-than-zero percent chance you aren't going to give this a try,\" Nora said. \"Amber's saying it sounds less like a terrible idea after everything you've told us. I agree with her, for what it's worth.\"\n\n\"Oh my gosh. Okay. Okay! So... what do I do? Where should I take her? Is there some fancy thing this Saturday I could score tickets to? Some gala maybe? Wait! She mentioned the Kennedy Center. Maybe there's a concert?\" I pulled out my phone and started to Google options but Nora gently laid her hand over my screen.",
        "\"Slow down Addie,\" Amber said with a grin.\n\n\"What?\"\n\n\"Look, honey, this is a first date. Not an engagement, not an anniversary,\" Nora said patiently. \"Don't go overboard. Don't make what you're going to do more important than who you're with.\"\n\n\"See? This is how Nora landed me,\" Amber said. \"I'd have never phrased it that well. For this date, the most important thing is you guys having time to talk. Get to know each other again. You haven't spoken for months. Time to reconnect is the thing you should focus on.\"\n\n\"So... what do I do?\"\n\n\"I'd stick with dinner,\" Nora said. \"Maybe some restaurant that you both love. Someplace quiet that you can sit for a few hours and just be with her. Maybe take a walk after. The heat's supposed to break a little this weekend, go enjoy it.\"\n\n\"You're right. That's smart.\" I sat lost in thought. Then, suddenly, I smiled and looked up at my friends.\n\n\"What?\" Amber asked.\n\n\"I know the perfect place.\"\n\n~~ GW Hospital, Washington, DC ~~\n\nLIZ\n\n\"You are s-o-o-o nervous\" Kat said, chuckling while she sipped her latte.\n\n\"No, I'm not,\" I said, poker face on. I took a drink of my own flat white.\n\n\"Totally nervous. 'Prom night in high school' nervous,\" she said.\n\nIt was the usual slow Friday afternoon. Things didn't usually get crazy on Fridays in the E.R. until after happy hour had started. Kat, Angel and I were in the doctor's lounge enjoying the downtime and the fruits of a Starbucks run. Jimmy was asleep on the couch with his lab coat draped over his face.\n\n\"How can you tell?\" asked Angel. \"She looks like normal ice-cold Doc Liz to me.\"\n\n\"That's how I can tell. Ice-cold Doc Liz only comes out when the shit hits the fan, when she's got to do emergency surgery or triage three different MVAs that all came in at the same time. We're just sitting here talking about her date tomorrow. There's no reason for the ice except to cover up the nerves.\"\n\n\"How did you get so good at reading me?\" I groused. \"I'm never playing poker with you again, by the way.\"\n\n\"Where is she taking you?\" she asked.\n\n\"I have no idea. When I told her she was in charge, she really took it to heart. She told me to be ready at six and wear something 'nice, but not too fancy', whatever that means.\"\n\n\"You have something picked out to wear?\" she asked.\n\n\"Yeah. I need to do my hair though. And makeup too, I guess. God, it's been so long since I've done myself up for a date.\" A stray lock of my hair had escaped my ponytail and I irritably reached up to tuck it behind my ear.\n\n\"You want Megan and me to come over and help you?\"\n\n\"What? No, I can do my own hair and makeup.\"\n\nKat looked at me with a raised eyebrow, as she took another sip of her coffee.\n\n\"Fine, yes, please. You're right. I'm so nervous about this, I could use a second opinion. Is Megan good at hair or something?\"\n\nKat laughed. \"Have you seen her hair? Listen, Megan is hot, but elegant? Not her look; she's all about the shag. I'll help you with your hair and makeup. Cait can crack jokes to keep you calm while Megan does your nails. That's her true medium. We'll bring pizza for lunch.\"\n\n\"You gonna take pictures when Addison picks her up?\" Angel joked.\n\n\"That's a fantastic idea,\" Kat said, and grinned at me.\n\nI wadded up a napkin from the table and threw it at him. It bounced off his forehead.\n\n\"Seriously, Doc, I'm happy for you. I hope you have fun.\" He picked up the napkin and threw it back at me, but I ducked to the side and it sailed past me.\n\n\"Me too. I've been messed up over this whole situation for so long. If it blows up in my face again I don't know what I'll do.\"\n\n\"I'm sure it'll work out,\" Kat said, \"You guys were thick as thieves. You have a good foundation to start from.\"\n\n\"I know. I'm just worried about the whole... you know...\"\n\n\"The sex part?\" Kat said.\n\n\"Well, yeah, but not only that. The whole relationship thing too. I just hope... I just hope things work out.\" I said worriedly.\n\n\"You're shitting us, right?\" Jimmy's muffled voice came from the sofa.\n\n\"What?\" I said, as all our heads swiveled towards the couch to look at his recumbent form.\n\nThe rising whine of an ambulance siren approaching the hospital reached us from outside. He lifted his lab coat off his face, stood up and stretched. He yawned, as he put on his coat, then said, \"Anyone with two brain cells to rub together knows you and Addison were made for each other.\"\n\nI stammered wordlessly.\n\n\"We'll get this one. You ladies can chill until the next one,\" he said, nodding towards the ambulance bay while straightening his tie. He motioned to Angel who got up from the table. \"Liz, anyone who ever saw your face light up when Addison walked into the E.R. would know, you got this on lock. It's in the bag,\" he said, then he walked out of the lounge, Angel in tow.\n\nI stared after him, then turned to look at Kat.\n\nShe shrugged. \"He's proving to be a pretty savvy guy, despite his rough start.\"\n\nThe next day, Kat and her family showed up at my place at noon, bearing pizza and a bag with seemingly an entire salon's worth of hair implements.\n\n\"If I'd known this was going to be such a production I'm not sure I would have agreed to it,\" I grumped. Kat had had me wash my hair, spent two hours adding highlights, then had put the entire mess up in curlers. Caitlyn sat in a chair next to me with her hair up in a smaller, matching set of curlers.\n\n\"Oh c'mon Dr. Liz! It's going to look so good! Mom did my hair for the Spring dance in May,\" Caitlyn said. \"The few boys who weren't too chicken to dance wanted to dance with me, 'cause my hair was a-w-e-s-o-m-e!\" She finished in a sing-song voice.\n\n\"It's true. Kat is pretty awesome at hair,\" Megan said, an amused grin on her face. She sat on my couch nursing a beer.\n\n\"Then how come you're always the shag queen?\" I asked, gesturing at her mop of black hair.\n\n\"'Cause this rock 'n' roll girl likes rock 'n' roll hair,\" she said. The leather choker she favored when not working seemed to back her up.\n\n\"I've tried to style her up,\" Kat said, as she started taking the rollers out of my hair. \"It never lasts. She ends up looking like Joan Jett again after a couple of days.\"\n\n\"Are you nervous about your date, Dr. Liz?\" Caitlyn asked.\n\n\"A little. Were you nervous dancing with the boys at the spring dance?\"\n\n\"Nah. I can kick most of the boys' butts in Call of Duty now. And in grades.\"\n\n\"Your mothers are prouder of that one,\" Kat said.\n\n\"Whatevs. Anyway, I think I intimidate them,\" Cait said.\n\n\"Except Tommy Harriman, right?\" Kat asked\n\nCait turned bright red. \"Shut up, Mom!\"\n\n\"O-ho! There's a Tommy Harriman, is there?\" I teased.\n\n\"No! I mean, we haven't gone out or anything.\"\n\n\"He asked her to his birthday party next week. It's a very big deal,\" Megan said.\n\n\"You shut up too, Mom-Megs!\"\n\n\"Ah, I see. You're a little nervous about that?\" I asked Caitlyn.\n\n\"No! Maybe. He's so cool, I don't know why he asked me over Jamie Foster. She's the prettiest girl in school.\"\n\n\"Is she interesting?\" I asked.\n\n\"Well... no, she's kind dumb.\"\n\n\"Then Tommy must be smart too. Going for the girl who's pretty and smart shows good taste.\"\n\n\"Thanks,\" Caitlyn said, still blushing. \"Why are you nervous though? I mean, you're a doctor, you're smarter than anyone I know!\"\n\n\"Hey!\" Both Kat and Megan protested in unison.\n\nI laughed. \"Listen, I got nothing on your moms. I'm just... It's been a long time since I've been on a date. Plus, Addison was my best friend for a long time, so I don't want to mess it up.\"\n\n\"Oh! You won't mess it up! You're so cool, Addison doesn't stand a chance! Especially once mom gives you the extra special hair.\"\n\n\"And that's why we're here, sweetie.\" Kat said as she teased my hair out of the last roller. \"Alright, let's get started putting this up so I can work on your makeup. Megan, get over here and start on her nails. Cait, she'll do yours next.\"\n\n~~ DuPont Circle, Washington DC ~~\n\nADDISON\n\nI stood nervously on the curb outside Liz's apartment next to the black Lexus sedan I'd ordered through Lyft. It was exactly six o'clock. I'd texted Liz as my driver had found room to park in the loading zone in front of her building. She'd replied that she'd be right out.\n\nThe butterflies were doing the YMCA dance in my stomach as the handicapped mechanism swung open her door and she rolled out onto the sidewalk.\n\n\"Wow...\" I breathed. I'd spent the afternoon trying to look as nice as I could. I'd done my nails, my hair. I'd bought a new dress this week, even worn my favorite heels with the thick straps around my ankles that made my calves look good. But Liz... \"You look so... beautiful,\" I breathed.\n\nShe ducked her head and blushed a dark crimson. It made her even more attractive to me.\n\nHer hair was up, the first time I'd ever seen it not in a ponytail. The elaborate hairstyle piled on top of her head was held in place by two crossed black lacquered chopsticks. A simple gold necklace adorned the graceful curve of her neck. She wore an elegant purple silk blouse, with the quarter sleeves slit up to the shoulders, revealing and accenting her strong arms. Simple, but expensive looking black slacks completed her outfit, and she wore strappy heels of her own. I couldn't remember ever seeing her in heels before. Not very practical in a wheelchair, but they were sexy as hell.\n\nBoth her fingernails and toenails had clearly been done, in a subtle, soft peach color. I didn't know if I'd seen her in real makeup before either, but tonight it was exquisite, with the tiniest hint of purple eyeshadow that caught the color of her blouse and soft, red lipstick.\n\n\"I mean it, Liz. You really look amazing. In fact,\" I smirked at her, \"I might not have recognized you without your wheelchair.\"\n\nShe laughed, then said, \"Yeah? I still think you don't look like yourself without your dreadlocks! Are you sure you're not a pod-person?\"\n\n\"If you win me over, you can make me grow them back if that's what you want.\"\n\n\"Hold the phone, you're supposed to be doing the wooing, not me.\"\n\nThe butterflies vanished from my stomach. It felt like our connection had never been broken, like I was right back with my old friend Liz. Except this Liz looked hot. And she was looking hot for me. I gave her a conciliatory nod, and she smiled.\n\nI stepped back and opened the rear door of our Lyft. \"Ready to go?\"\n\n\"Wait!\" I heard a voice from the doorway of her building. I looked up and saw Liz's friends Kat and Megan standing there, grinning like the cats who'd caught the canary. A young girl was with them. Kat's daughter Caitlyn, judging by the resemblance. \"Picture time before you go!\" Kat said, holding up her phone.\n\n\"Do you guys think this is prom night or something?\" I asked.\n\nLiz rolled her eyes as Kat's family all laughed, and said, \"Kat said it was the price for her helping me with my hair. Roll with it.\"\n\n\"I don't have a special chair for rolling,\" I quipped.\n\n\"Ha ha, smart-ass. tand next to me and look pretty. I know you can manage that.\"\n\nWe stood on the street next to the car while Kat, Megan and Caitlyn all started taking pictures of us, maneuvering around the occasional pedestrian passing by on the sidewalk while the Lyft driver stood next to the car grinning at the scene. I felt as self-conscious as when my parents had taken photos on my actual prom night. I stood behind Liz's chair and put my hands on her shoulders. She brought one hand up to rest on mine and it felt like the most natural thing in the world.\n\n\"Okay, that's enough. You guys had your fun!\" Liz said, and turned her chair towards the car.\n\n\"We expect you to have her home before midnight,\" Megan called out to us, \"and not a minute after!\"\n\nLiz rolled her eyes again, even more emphatically, and grinned at me as she reached into the car for the hand hold and lifted herself inside. I folded up her chair and the driver put it in his trunk while I slid in next to Liz.\n\n\"So, where are we going?\" Liz asked, once we pulled away from her building.\n\n\"Not far, actually. I thought it would be nice to travel in style instead of taking the Metro since we're all fancy and stuff.\"\n\n\"I don't know. I might be less nervous riding the Metro. It's what I'm used to.\"\n\n\"You're nervous?\" I asked.\n\n\"Aren't you?\"\n\n\"I was. A lot. I don't think I am anymore.\"\n\nShe looked at me pensively, then broke into a shy smile. \"You know, I don't think I am either. That's a good sign, right?\"\n\n\"I hope so.\"\n\nWe drove down Connecticut Avenue, making small talk, until the driver pulled up next to the Woodley Park Metro stop, across from the Lebanese Taverna.\n\n\"We're here,\" I said, opening the door and stepping out of the car.\n\nShe looked across the street at the restaurant, then turned back to me with a smile. \"Full marks for nostalgia.\"\n\nOur driver took Liz's chair out of the trunk and handed it to me. I thanked him as I unfolded it, and set it next to the car.\n\n\"I figured we should have a do-over from what I thought was our first date.\"\n\nWhen we entered the restaurant, the manager, who I'd spoken to the day before, spied me and came over. \"Miss Wagner, welcome. Your table is waiting.\"\n\nHe showed us to the same small table for two in the window where Liz and I had sat all those months ago. The chair where Liz had sat the first time had already been removed and the table held a small vase with a bouquet of orange roses. A small 'reserved' sign perched on the edge of the table as well. The manager seated us, holding my chair for me, then presented us with menus and left, taking the reserved sign with him.\n\nI took Liz's menu from her hand and laid it on my unopened one. She arched an eyebrow at me.\n\n\"Are you planning on ordering for me?\"\n\n\"I'm in charge, remember?\"\n\nShe grinned at me. \"Make sure you take full advantage of that tonight. It may not ever happen again.\"\n\nOur waiter appeared and asked if we wanted to hear the specials.\n\n\"No, thank you. We'll start with the olive and hummus plate, and then we'll have the lamb skewers and falafel for our entrees.\"\n\n\"Excellent,\" he nodded. \"And to drink?\"\n\n\"Please bring her a glass of Chateau Kefraya and I'll have an iced tea.\"\n\nLiz blinked as the waiter took our menus and left. \"You... How did you remember all that? I couldn't have begun to tell you what we had last time until you said it.\"\n\n\"There's very little from that night I don't remember,\" I said seriously. \"Vividly.\"\n\n\"Really?\" She gave me a bemused look. \"And what else are we going to repeat from that night?\"\n\n\"Not my wheelchair ride down to the Fro-Yo place. We're dressed too nice for that.\" That earned me a laugh. \"Why don't you start by telling me how come you aren't seeing anyone?\"\n\nShe picked up on the thread I was pulling from my memory and quietly said, \"Dating's pretty tough as a resident. I work crazy hours and no one's asked me out in a long time... until tonight.\"\n\nI reached across the table and took her hand in mine. \"I find that hard to believe. You're quite the catch.\"\n\nShe sucked in a little breath as my thumb caressed the back of her hand, then she covered my hand with her other one, gently caressing my skin in return.\n\n\"Addison...\" she said with a smile, \"I might owe you an apology. A really big one.\"\n\n\"About what?\"\n\n\"I'm not sure I'm straight after all.\"\n\nI laughed delightedly and squeezed her hand, as the waiter arrived to drop off our drinks.\n\nLIZ\n\nThe first time Addison had reached out to hold my hand, when we'd sat at this table all those months ago, I'd felt distinctly uncomfortable. In retrospect, it was because of our different expectations, not because it had felt wrong.\n\nAnd tonight, it felt extremely... right. When she rubbed her thumb across the back of my hand I felt a small zing course through me. Not as strong as when our lips had touched, but definitely a similar sensation. When our drinks showed up and she let go of my hand to pick up her drink, I felt a surge of resentment at the waiter for his timing.\n\nShe held her glass out to me. \"Here's to do-overs.\"\n\n\"To do-overs,\" I said, and touched her glass with mine. After I took a sip of my wine, I asked her, \"Did you order iced tea because I asked you not to drink?\"\n\n\"Well, not only because of that, but... basically.\"\n\n\"You can have a glass of wine, Addison. I just don't want you sitting at home, drinking by yourself every night.\"\n\n\"I know. I wanted to wait until you and I have worked things out. I'm feeling a lot better than I did last week. Most of that is us talking again, but some of it is not drinking. I don't feel like I have a problem; I don't feel like I want or need a drink. But I've definitely felt better this week without the wine.\"\n\nI set my glass down and held out my hand. She took it with hers.\n\nZing!\n\nThe rest of the meal seemed to fly by, our conversation as easy as it had ever been. It was like our friendship had picked up right where it had been that afternoon at the Tidal Basin under the cherry blossoms, only with an undercurrent of sexual tension that, frankly, was delicious.\n\n\"Turkish coffee for dessert?\" I asked.\n\n\"Why not? Everything else we've repeated has gone pretty well.\"\n\n\"So, you think tonight is going well? I'm only asking because it's been so long since I was on a date that I'm not sure I'd know if things were going bad.\"\n\n\"I think the fact that you haven't let go of my hand most of tonight says this is going well.\"\n\nI looked down and found my fingers entwined with hers and blushed. I pulled my hand back and she made an unhappy sound.\n\n\"I didn't mean for you to let go!\" she protested.\n\n\"Well, now you have me all self-conscious about it! We can try again later.\"\n\nShe smiled with amusement. \"What makes you think there's a later? Maybe after dinner, I'm going to take you home and drop you off.\"\n\n\"Girl, you're supposed to be wooing me. You'd better have more than just dinner on tap.\"\n\n\"Maybe I have something else in mind.\"\n\nAnother Lyft ride later and we were back up near DuPont Circle where the Seventeenth Street Festival was taking place. I'd seen the tents two blocks from my apartment all week when coming and going to work, but I hadn't had time to check it out. Two city blocks had been closed off, and there were dozens of craftsmen and artists displaying their talents and wares. The sun had set while we'd been at the Taverna, but each tent had colorful lights casting warm, inviting glows.\n\nWe wandered from tent to tent, checking out the wide variety and styles of art. In one tent we found a woman selling some of the most beautiful handmade scarves and tapestries I'd ever seen. I saw Addison looking at a particularly amazing scarf, with deep blue and green colors that perfectly set off her white blond hair. The designs looked very similar to ones I'd seen in the market outside Bagram air base. I looked at the woman and made an educated guess.\n\n\"As-salaamu' alaykum,\" I said.\n\nShe brightened. \"Khah maakhaam, and how are you this evening?\" I think she assumed I only knew the one phrase.\n\n\"Teh kha. Da somra di?\" I asked, indicating the scarf Addison had been admiring.\n\nThe woman's smile grew even broader. \"P\u0259njos, but I can usually be bargained down to forty-five. Calwe\u015dt, for the lady who speaks Pashto so excellently to me.\"\n\n\"Nah, mala leglug Pukhtun razi,\" I replied, rocking my hand back and forth in the universal 'so-so' gesture. I reached around into the backpack on my chair, pulled out my wallet, extracted fifty dollars and offered it to her.\n\nShe looked at the bills, pursed her lips, then said, \"Aty\u00e2.\"",
        "\"Wabakhai?\" I asked, confused.\n\n\"Two for eighty, and you can have that one and its sister hanging next to it. That way you and your friend can match when you wear my scarves.\"\n\nI laughed and nodded. \"Kha, daera manana,\" I said and fished out a few more bills. She made them disappear into her apron and indicated for us to take the two scarves.\n\n\"Har kala Rasha. Jor' aw Rogh Ose,\" she said, bidding us goodbye.\n\n\"Khad aw Abad Ose,\" I returned.\n\nI gave myself a little push and coasted out of her tent into the street, draping the scarf Addison had gotten down for me around my neck, and caught Addison's bemused look as she walked beside me.\n\n\"What?\"\n\n\"Just when I think I can't find you any more attractive, you go and show off your big brain. What are you doing buying me a present anyway? I'm supposed to be in charge tonight.\"\n\nI laughed and reached out to run my hand down the silky softness of my scarf's twin hanging around her neck.\n\n\"You can still be in charge. What's next, counselor?\"\n\nShe looked around and spotted a vendor a few tents away. \"Ice cream, doctor?\" she asked.\n\n\"Ooh, you wicked woman. You've found the surest path into my heart.\"\n\nLate in the evening the festival started shutting down, and Addison and I headed over to my apartment. I rolled up to the front door and reached around to fish for my keys in my backpack.\n\n\"Want to come in and watch something? I restarted my Netflix account when we stopped hanging out since I had more time on my hands,\" I said, sheepishly, as I opened the front door and she followed me into the lobby.\n\n\"No, I think I'm going to say goodnight now,\" she answered.\n\nI felt a pang in my stomach.\n\n\"No? You don't want to come in for a little bit?\" I said, wondering if I sounded desperate.\n\n\"No, not tonight,\" she said. Then she stepped closer, gracefully sat down across my lap and gently wound an arm around my neck to pull me closer. Her voice was low and heated as she said, \"Anytime I've had a really good first date, I always try to leave her wanting more.\"\n\nThen she leaned her head down and soft lips met mine.\n\nZ-I-N-G!\n\nIt was all I could do not to moan. I wrapped my arms around her waist as her tongue caressed mine. Her mouth was so warm. I felt her other hand gently rubbing up and down my arm. I pulled her tightly to me, my hand slipping a little lower on her hip and gently stroking the curve of her.\n\nTime stretched out. My nipples hardened almost painfully, pressing against my blouse through my bra as I feasted on her lips. It felt like it would never be possible to get enough of these kisses.\n\nI'd decided it was time to drag her inside my apartment when she gently nipped my bottom lip with her teeth, and, just as gracefully as she'd sat, stood up and stepped back from me. I leaned forward in my chair as she rose, trying to prolong our contact, and I almost didn't recognize my own voice as it gave a tiny whimper of protest.\n\n\"Until next time,\" she said, and turned to go.\n\n\"You're kidding me!\" I said.\n\nShe turned back and winked at me. Her smile made me want to melt into a puddle.\n\n\"I'm in charge tonight.\"\n\nI made an animal sound of frustration. \"Fine! But you'd better believe I'm going to be in charge next time!\"\n\nHer laugh rang through the lobby as she pulled open the door and left me sitting there watching her through the glass security door. As she walked away, she strutted in her high heels like a runway model. It made her hips do... fascinating things.\n\nOh, goddammit, I thought to myself. I'm one hundred percent certain I am not completely straight.\n\nI went into my apartment and started getting ready for bed. As if I was going to be able to sleep now.\n\nI stripped off my clothes and brushed my teeth, then went through my awkward bathroom process, including changing my diaper and underwear and putting on one of my favorite sleep shirts. I rolled into my bedroom and flopped into bed, then reached for the TV remote on my nightstand but hesitated, looking at the drawer below. I'd just pulled it open when my phone pinged with a text.\n\n(Addison) I remember U told me U R a Hitachi fan\n\nI stared at the words on the screen. It was like she was reading my mind.\n\n(Liz) Especially tonight, you tease.\n\nI held my phone, watching the little dots on the screen, indicating she was typing.\n\n(Addison) Tonight? Don't.\n\nI made a sound of disbelief. I quickly typed back.\n\n(Liz) Are you kidding me?!\n\nShe made me wait a couple of minutes, then,\n\n(Addison) Remember, tonight I'm in charge\n\n(Addison) Don't\n\nI bit my lip, simultaneously grinning and groaning in frustration as I typed.\n\n(Liz) Do you know how much I wanted you tonight?\n\n(Addison) Not half as much as I wanted U\n\n(Addison) But this was only our first date, we have more work to do\n\n(Addison) So tonight... don't\n\n\"Aaaah!\" I cried out in frustration and pounded my fist into my mattress, then I reached over and slammed the drawer to my side table closed.\n\n(Liz) Fine! But you'd better not either!\n\n(Addison) Baby you're not in charge\n\nI grinned at the 'baby'.\n\n(Addison) But I won't\n\n(Addison) For U\n\nI laid back and looked at the ceiling. Other than being a girl, she was everything I'd ever wanted in a romantic partner. She was smart, funny, quirky, bold. She challenged me. And I think I really wanted her. Nope, no more doubts. I picked up my phone again.\n\n(Liz) I wish you were here kissing me some more.\n\n(Addison) Me too. I just walked in. Getting ready for bed. BRB\n\nI impatiently waited, switching back and forth between scrolling through Twitter and checking my texts in case my phone had decided not to notify me I'd gotten one. Which happened, like, never.\n\n(Addison) In bed.\n\n(Liz) You're so mean\n\n(Addison) What do U sleep in?\n\nI rolled my eyes and grinned.\n\n(Liz) What am I wearing? That's what you're going with?\n\n(Addison) It's just a question. ;)\n\n(Liz) An old t-shirt\n\n(Liz) Hardly sexy\n\n(Addison) I bet U look hot in it\n\nTwo can play this game, I thought.\n\n(Liz) What about you?\n\n(Addison) I don't wear anything to bed. That'll make things easier when I start spending the night there, don't U think?\n\nI stared at the screen as my nipples hardened again.\n\n\"Jesus, woman!\" I growled, as I gave one of my nipples a pinch. I wanted to scream.\n\n(Addison) I don't think you ever told me, do you still get wet?\n\nI slid a hand down into my underwear. My fingers came out damp.\n\n(Liz) I'm soaked right now.\n\n(Addison) When is your next night off?\n\nI quickly switched to my calendar app and checked my schedule. I groaned again.\n\n(Liz) I don't have a full day off until Thurs\n\n(Liz) Off Tues nite but I get off a 24 hr shift at 4\n\n(Addison) Ok. Dinner at your place on Tuesday? I can bring food.\n\n(Liz) You sure? I don't want to fall asleep on you.\n\n(Addison) If U do, I'll tuck U into bed. Still will only be our 2nd date.\n\nI squeezed my eyes shut, smiling at the thought of Addison tucking me in.\n\n(Liz) You're on\n\n(Addison) It's a date then. I'll bring sushi. See U there at 5?\n\n(Liz) You better not be late\n\n(Addison) I won't be\n\n(Addison) Night\n\n(Liz) Good night\n\nI dropped my phone onto the bed, turned out the light and rolled over, staring at the shadows on the curtains of my bedroom window. I wanted to say more. A part of me felt like adding 'I love you' or something equally stupid, but clamped down on the urge. Take it easy, Liz! It was one date!\n\nI ran my hands over my breasts. My nipples were achingly hard again. I dipped my hand into my underwear once more, then regarded the wetness on my fingers as it gleamed in the light from the lamp next to my bed. I hesitantly brought my fingers to my mouth and licked them. Not unpleasant. It wasn't as if I'd never tasted myself before. I'd gone down on my last boyfriend after we'd fucked in order to finish him off on more than one occasion.\n\nI contemplated a more direct sampling from the source, imagining what it would be like to go down on Addison, to taste her. To look up at her face from between her legs as I made her feel like I wanted to feel now. Another little zing went through me. Would she taste different? Better, maybe?\n\nI glanced at my side table drawer again. It felt like I probably could have made myself come in seconds, rather than the fifteen or twenty minutes it usually took me; giving myself an orgasm was hard work since my crash. Old fears crept in again. What if I couldn't get off with Addison, like I hadn't been able to with my boyfriends? Would that spell doom for our budding romance? I tried not to imagine a look of disappointment on her face after trying and failing.\n\nI felt tears bubbling up at the idea of not being successful in bed with her, but quickly pushed them down. No one had made me as hot as she had tonight. I reached into my shorts again and rubbed at my clit. As usual, no dramatic sensations, but I did feel a dull throb I recognized. I rubbed my fingers back and forth and felt the rush starting to build. I stopped, out of deference to Addison's wishes, but I was sure I could probably come right then. With only my fingers, even. That was unheard of for me since my injury. I was definitely hot and bothered.\n\nMy phone buzzed.\n\n(Addison) And remember...\n\n(Addison) Don't\n\nI laughed and shrieked in frustration at the same time. This girl was more than a match for me.\n\nI turned my lights out, lay back down and hugged one of my pillows tight to my chest, thinking of Addison sitting on my lap, kissing me.\n\nNo more doubts.\n\n~~ DuPont Circle, Washington DC ~~\n\nADDISON\n\nI looked at my phone to check the time again. Liz and I had been texting constantly since our date on Saturday night. I was surprised at how flirty she'd gotten with me since then. It was clear my 'leave her wanting more' strategy had paid off, as the last few days she'd seemed as eager as I was to have dinner tonight. I didn't think anything would happen this evening besides maybe some more kissing, but I was looking forward to seeing what would happen.\n\nThen again, even though this was only our second date, we had spent months hanging out before we'd decided to try dating, so was it really a second date? I didn't entirely know what to expect tonight. Just in case, I'd worn one of my nicest matching bra and panty sets under my jeans and t-shirt.\n\nI'd been standing outside Liz's building holding a bag from Tono Sushi for fifteen minutes when I got a text from her.\n\n(Liz) Coming up from Metro now\n\nShe finally rolled down the sidewalk from the direction of the Metro station.\n\n\"Oh, my God, are you okay?! You look terrible!\" I heard myself blurt out.\n\n\"That's what a girl likes to hear,\" she said wearily. She had dark circles under her eyes. She'd pulled her hair out of its usual ponytail and it was a tangled mess. Her scrubs were wrinkled and sweat-stained.\n\n\"Oh, Jesus, I'm sorry. You just look... I'm sorry, but you look awful! What happened?\" I asked, as she unlocked the door to the lobby and we went inside.\n\n\"I had a twelve-hour overnight shift on Sunday, then I got twelve hours off. I had to take my car in for service Monday morning and instead of it taking an hour it took seven. They had to replace the door opening mechanism, the bearings were shot. So I only got about two hours sleep before I had to go back for a twenty-four hour shift. And it was a doozy.\"\n\n\"Bad?\"\n\n\"Started off with a double GSW. Two assholes who shot each other during a drug deal apparently. We saved 'em both. Then a cardiac event. Then--\"\n\n\"Is a cardiac event a--\" I asked.\n\n\"Heart attack, yeah. Lost that one. Then we had another heart attack, saved that one. Then I was about to get some sleep, but along comes another GSW. Saved that one. Then the sun came up and I thought I might get to grab some sleep, but a city bus hit a school bus and we had a mass-casualty event. Nothing critical or life threatening, but it took until after lunch to get all the cases sorted out. Then another heart attack. Then I was ready to get off work but a stroke victim came in and I had to assist Jimmy on that. So, I haven't stopped moving or slept since yesterday morning.\" She opened her door and rolled inside her condo. She let her chair coast across the room until her feet bumped into her sofa. She softly rebounded and sat there staring into space.\n\nI put a hand on her shoulder. \"Why don't we rain-check sushi tonight?\"\n\n\"I don't want to,\" she whined. Then she took a shuddering breath. \"Might be a good idea though. I'm about to collapse.\"\n\n\"It's totally fine. I'll put this in your fridge, you can eat it tomorrow.\"\n\nI went into her kitchen and put the bag of sushi in her refrigerator. I saw some little bottles of Gatorade, grabbed one of them for her and came back to find her fast asleep. She looked almost child-like, slumped over in her chair. I gently shook her shoulder.\n\n\"Liz, c'mon, I'll help you into bed.\"\n\nShe started violently, then stared up at me uncomprehendingly. \"What?\"\n\n\"I said, I'll help you get into bed.\"\n\nShe shook her head. \"I have to take a bath first. Wash my hair. I can't get in bed this nasty.\" She made no motion towards her bathroom, just sat staring into space.\n\nI made my decision. \"Okay, come on. I'll help.\"\n\nShe sat up a little straighter. \"What? No, I can bathe myself.\" She reached down and missed, her hands slipping off the push wheels. She managed to grab them on the second try and pushed herself towards her bathroom. I followed her.\n\n\"I'm helping, whether you want me to or not. I've waited too long for you to come around on me only for you to drown in your bathtub because you fell asleep.\"\n\nIt was a testament to how tired she was that she didn't argue or complain. She rolled up to the hydraulic chair lift attached to her bathtub and wearily slid herself over onto it. I had to catch her to keep her from falling out. I got her steadied, then reached into the tub and started the water, waiting until it was hot, then adjusted the temperature and let the tub start filling.\n\nI turned back to Liz. \"Okay, let's get these scrubs off,\" I said. She let me pull off her top, then as I reached for her again, she folded her arms across her sports bra and started crying. I knelt down in front of her, putting my hands on her knees to hold her in place.\n\n\"What's wrong?\" I asked softly.\n\n\"I'm sorry, it's stupid,\" she said, sniffing and rubbing her nose. She wouldn't look at me.\n\nI had a feeling I knew what had set her off.\n\n\"Is it because you don't want me to see you naked for the first time like this?\"\n\nHer face scrunched up, then nodded and started crying harder.\n\n\"It's okay, s-h-h-h, it's okay. Tonight, I'm not the girl you're dating. I'm your friend, who knows you need help right now.\"\n\nShe took a big gulp of air and nodded. \"I know.\" A fat tear rolled off the end of her nose. \"I hate needing help, but I'm so fucking tired. And I just... this wasn't how I pictured tonight going.\"\n\n\"I know, but it's okay. Tonight doesn't count, alright?\" I held out my arms.\n\nShe leaned forward to hug me, her head resting on my shoulder. She smelled like hospital antiseptic and sweat.\n\n\"You're a good friend, Addie,\" she murmured.\n\n\"If I wasn't, I wouldn't be worth dating. Come on, let's get you in the tub.\"\n\nI quickly figured out how her bathtub chair lift worked, then got her sports bra and scrub pants off and had her in the tub, the water cloudy from the handful of bath salts I'd added. I kept her from sliding down into the water with one hand and with my other I shampooed her hair. She laid back against the porcelain with her eyes closed, making tired little sounds. She'd folded her arms self-consciously over her breasts at first, but weariness quickly overcame her shyness and she simply slumped back against the tub. I did my best to be Nurse Addison and take no more than clinical notice of the fact her breasts were gorgeous.\n\nAfter I rinsed her hair with the hand-held shower head, I gave her body a quick scrub, then let out the water and rinsed her off.\n\nAfter getting into her underwear and a t-shirt, I helped her out of her chair and into bed. I made her sit up and drink some of the Gatorade. Then I spread a dry towel over her pillow and she laid down. Just as I'd promised in our text messages, I tucked her in. Her eyes closed immediately.\n\n\"Good night, baby,\" I whispered, and kissed her on her forehead. I stood to go, but I felt her catch my hand. I turned back and saw her looking at me.\n\n\"I know it's only like six o'clock and you aren't tired, but would you stay with me?\" she said in a hoarse voice. \"For a little bit?\" Her eyes drifted closed again.\n\nI sat on the edge of the bed. \"You sure? Remember, tonight doesn't count.\"\n\nHer eyes opened to meet mine. \"Tonight counts for more than you'll ever know, Addison.\"\n\nI felt a lump in my throat, and reached out to stroke her damp hair.\n\n\"Okay,\" I whispered.\n\nShe used the last of her energy to scoot over in her bed and pull the covers back. I stood, kicked off my sandals and slid my jeans down, leaving me in my t-shirt and underwear. I slid into the bed next to her and she rolled over into my arms to rest her head on my shoulder, using her hand to pull one of her legs over the top of mine.\n\n\"Thank you,\" she whispered, wrapping her arm around me.\n\nShe was out in seconds.\n\nOnce I was sure she was soundly sleeping, I gently slid out from under her and padded out towards the kitchen. My t-shirt was damp from her hair, so I took it off and hung it on the doorknob of her bedroom. I helped myself to two of the sushi rolls I'd brought and a glass of water. After my little dinner, I sat on her couch, answered some work emails on my phone, and then opened my Kindle app and started to read a book I'd bought that week.\n\nAround nine-thirty I found an unopened toothbrush in her bathroom cabinet and took care of that particular bedtime chore. Then I set the alarm on my phone, turned out all the lights in her apartment and crept back into bed. She snuggled up against me without waking up.\n\nAs I lay there, smelling her hair, I thought back to the night that I'd left her at the top of the Metro escalator. When I'd gone home and forced myself to admit I'd fallen in love with her. I'd imagined living with her. Growing old with her.\n\nI reached up with my hand and stroked her hair. She made a small, happy sound in her sleep.\n\nThis was perfect. This was everything I wanted.\n\nI laid there a long time, listening to her breathe before I gave myself to sleep as well.\n\nLIZ\n\nWhen I woke up, I started to stretch, but found my arms trapped, unable to move. I had a brief moment of panic before I realized that it was Addison's arm holding me down. I was on my side and she was curled up behind me, her arm thrown over me, holding me tightly to her. I relaxed, taking a deep breath as I remembered how she'd helped me into bed last night.\n\nI curled one hand up to cradle her forearm. I'd been so upset last night, but hadn't had the energy to do anything differently. The first time we'd seen each other since our first date, and that was the state I'd been in. I hadn't wanted her to see me naked like that either. It's not like I was bashful; after three years in the Army, basic-training, living on an airbase in Afghanistan, base housing at Fort Bragg, I hadn't been afforded the luxury of being modest. Being naked in front of other women had never bothered me. Even with the openly gay squad-mates I'd had, I had never cared.",
        "But with Addison... I had wanted my first time with her to be romantic... special. I wanted that feeling of revealing yourself to a lover for the first time. Of seeing... her, for the first time as well. I was with a her now. Last night, I'd felt like that moment had been stolen from me.\n\nOnce my brain kicked on, I found I was fine with it. She'd been so caring, so helpful, so matter of fact that she was going to be there for me and that was that. It somehow made it alright. Not alright, better than alright. She had taken care of me. She cared for me. I felt... happy. She stirred behind me and I rolled myself over to look at her.\n\nHer pale blonde locks had fallen over her face, but I could see her green eyes open beneath the curtain of her hair.\n\n\"Hey...\" I whispered.\n\n\"M-m-m-m-m, morning,\" she replied, stretching. She finished her stretch by brushing her hair off her face then laying her arm back over me again. \"How are you feeling?\"\n\n\"Better. Thank you for last night.\"\n\n\"You're very welcome. Thanks for inviting me to stay.\"\n\n\"I didn't mean you had to stay the whole night, but I'm happy you did. Not how I imagined the first time we'd spend the night together, though.\"\n\n\"Me either. Still nice, right?\" she asked.\n\n\"Nice waking up next to you for sure. I'd kiss you, but I'm pretty sure I have morning breath.\"\n\n\"Like that would stop me,\" she said then leaned towards me and our lips met.\n\nZing!\n\nI pulled her tightly to me.\n\nAfter a few minutes, I laid my hand on her side, gently stroking her ribs. Her skin was so soft. I was getting ready to slide my hand to a more interesting place when the alarm on her phone went off.\n\n\"Hit snooze!\" I groaned, as she broke off our kiss and rolled away from me to grab her phone from the nightstand.\n\n\"Hang on,\" she tapped at the screen a couple of times, then said, \"I can't, I gotta get going.\"\n\n\"Really?\" I said. \"You can't stay for like... twenty minutes?\"\n\nShe set her phone down and kissed me again. \"Do you really,\" she said, our faces intimately close, \"want our first time to be a twenty-minute rush job?\"\n\n\"No,\" I grumped.\n\n\"I have to be in court with a client in an hour and a half. You know what that's all about, right? People counting on you?\"\n\n\"Fine,\" I said, only slightly less grumpily. I sighed. She kissed me once more.\n\n\"We're still on for Thursday, right?\" she asked, getting out of bed. She picked up her phone again and started looking through her email, facing away from me.\n\nI sat up on my elbows. She was only wearing underwear, a matching white lace bra and panty set. The hourglass shape of her waist curving down into her beautiful, round bottom stirred something in me. Yep, definitely not totally straight anymore. She shifted her weight from one foot to the other and I couldn't resist. I let out a loud wolf-whistle.\n\nShe spun around, grinning. \"Enjoying the view?\" she asked, and bent one knee, pointing her toe and striking a sexy pose.\n\n\"I certainly am! I thought you slept naked though,\" I said with a grin.\n\nShe blushed and it was adorable. \"It was only our second date.\"\n\n\"That's not what you were wearing when you got into bed with me last night. For sure I wouldn't have gone to sleep.\"\n\nShe stuck out her tongue at me. \"In fact, I was wearing this, just with a t-shirt over it. Your hair got my shirt all damp last night, so this is your fault.\" She turned and spied the t-shirt in question on the door knob of my bedroom and started pulling it over her head.\n\nI pushed myself up further to lean back against my headboard and crossed my arms in a fake pout. \"First you can't stay and now you're even depriving me of my view while you get ready to leave me.\"\n\n\"Sorry. Them's the breaks. You'll have to wait,\" she said, pulling her jeans up her legs, then she sat on the edge of the bed to put on her sandals.\n\nI pulled myself forward so I could embrace her from behind. \"Okay, I'll wait. But just so you know, on Thursday I'm in charge.\" Then I started planting soft kisses on her neck. Her skin was so smooth.\n\nShe leaned back into me with her eyes closed and made a humming sound. \"I think I'm going to like you being in charge.\"\n\n\"Me in charge starts now, by the way.\" I nipped her earlobe, making her jump. \"So, until Thursday... don't.\"\n\nShe laughed, then turned in my arms to kiss me again. Zing! Would that ever stop happening? I hoped not.\n\n\"Okay, now I really have to go, or I won't be able to make myself go and then I'll miss my court date and then I'll get disbarred and then I'll get fired and then I'll be penniless and then you'll have to take me in and feed and clothe me.\"\n\nI let her go and she rose from the bed, sliding her phone into her pocket.\n\n\"I'll feed you, but you'll have to earn clothes. Until you do, you'll have to do chores around the house while naked.\"\n\nShe grinned at me. \"Oh no, that sounds awful! How will I ever suffer through the trials and tribulations of being your naked maid?\" We shared a laugh.\n\n\"Push my chair over here please?\" She did and I slid into it so I could see her to the door.\n\n\"What should I wear Thursday? Or do you know yet.\"\n\n\"Were you able to get off Thursday and Friday?\" I asked.\n\n\"Not entirely. I was able to take off Thursday. I have a hearing on Friday I can't get out of, but it's not until two o'clock.\"\n\n\"Perfect, I have to go in at four on Friday myself anyway. Be here at noon, and wear something for being outside during the day. Shorts and a t-shirt are fine, but bring your court clothes. You can hang them in my closet.\"\n\n\"Really? Being a little presumptuous, aren't we?\"\n\n\"I'm in charge, I'm allowed. Bring a dress to change into also. Nothing fancy, just something for dinner. Oh! And a bathing suit.\"\n\nShe cocked an eyebrow at me. \"Sounds like you have an elaborate day of activities planned out.\n\n\"You'll have to wait and see on Thursday. I'm in charge, remember.\"\n\n\"Yes ma'am!\" she said, and gave me the most awful salute I'd seen since boot camp.\n\nI winced and said, \"Oh god, no, not like that. Do it right, like this,\" I gave a crisp salute, palm flat, fingers rigid, the tips touching the corner of my eyebrow.\n\nShe tried to mirror my movements, \"Better?\" she asked, grinning.\n\n\"Better, but still needs work. That first one would have earned you fifty push-ups if a drill sergeant had seen it.\"\n\n\"You'll just have to beat it into me, Sgt. Charles. I have to go.\" She leaned down and kissed me once more. \"See you Thursday.\"\n\n\"That's Specialist Charles!\" I called after her as she walked out of my door.\n\n~~ DuPont Circle, Washington DC, August ~~\n\nADDISON\n\n\"What's this?\" I asked, as Liz met me at her door holding out a navy-blue baseball cap with a red bill.\n\n\"Your uniform for the afternoon,\" she said, grinning at me.\n\nI took it and held it up to see the curly \"W\" of the Washington Nationals on the front of the hat. She was wearing an identical one, her ponytail pulled out of the hole in the back.\n\n\"I have to wear this? I'm a Brewers fan you know.\"\n\n\"I know, but they aren't playing the Brewers this afternoon, they're playing the Phillies. I think we can all get behind the idea that the Phillies suck, right?\"\n\n\"That train, I will board,\" I said, putting the cap on my head. I was pleased with how it went with my denim shorts and my Wisconsin Badgers t-shirt.\n\n\"Do you need everything in your backpack for tonight? Can you fit whatever you need in mine?\"\n\n\"Uh, I'm not sure. I brought a dress and a bathing suit like you told me to. Are we not coming back here before dinner?\"\n\n\"That's for me to know and you to find out,\" she said with a sly smile. \"Give me everything you need from your backpack, and I'll squeeze it in mine while you hang up your suit for tomorrow.\"\n\nI handed her my folded dress and my bathing suit, then went into her closet and hung up my suit for court. I took a moment to get one additional item from my backpack and shoved it in the bottom of my shoulder bag. When I came back she was zipping her backpack shut then turned to hang it on the back of her chair.\n\n\"I think we're ready to roll!\" she said.\n\nWe arrived at Nationals Park for their day game with the Phillies in time to find our seats before the National Anthem. Liz swept off her hat and sat ramrod straight with her hand on her heart from the opening notes. I followed her example, standing a little straighter than I normally would have.\n\nShe'd gotten us really good tickets, on the concourse above the box seats behind home plate, where there were some single seats next to spaces marked with the handicapped symbol for wheelchairs. This was the final game of the home stand, with Stephen Strasberg taking the mound to try to complete a four-game sweep of the Phils.\n\nIt was hot, and we both opted for big bottles of water instead of beer, as well as a gigantic tub of popcorn to share.\n\nIn the bottom of the fifth inning Trea Turner got jammed and hit a foul back towards us. Liz sat up excitedly in her chair but the ball curved away from us, smacking down on the concrete of the concourse out of reach and bouncing another twenty rows back.\n\n\"Dang it!\" she said with a grin. \"I've never caught a foul ball! My dad used to take me to minor league games when I was a kid. I've come close a few times but I've never caught one.\"\n\n\"You don't talk about your folks much,\" I said.\n\nShe got a little frown on her face.\n\n\"You don't have to!\" I quickly added.\n\n\"No, it's okay. It's just... I've never really told you much about where I came from other than joining the Army, have I? I don't talk about it much.\"\n\n\"It's okay, Liz. I don't want to pry.\"\n\nShe turned and looked at me with a surprised look on her face. \"If we're dating, this subject is hardly prying. It's fine.\" She took a sip of water and cleared her throat. \"I told you I grew up in Indianapolis. My dad worked at an auto-parts manufacturing plant. It was a union shop, so we did okay. Mom cleaned houses. Dad liked baseball and that was about the only thing he and I ever bonded over. I think as a kid I just decided to like it so we'd have something to do together.\"\n\nI reached out and took her hand. Her tone was light, but I could sense an undercurrent of tension in her voice.\n\n\"When I was thirteen, dad got sick. Mesothelioma, probably from working with asbestos while making brake pads. He declined pretty quickly. We lost him six months after he was diagnosed.\"\n\n\"I'm so sorry,\" I said and squeezed her hand.\n\n\"Thanks. Anyway, mom didn't take it well. She drank. A lot. Eventually did some harder stuff too. She burned through dad's life insurance pretty fast and had a hard time holding on to her cleaning customers. We ended up moving from a little house in a good neighborhood to a crappy little trailer home, and I moved from an average school district to one of the worst. I--\"\n\nShe was interrupted as Anthony Rend\u00f3n smacked a home run into the left field bleachers. Once the crowd settled down, a few minutes later, I asked, \"So how did you end up being a doctor with everything stacked against you like that?\"\n\n\"One thing my dad told me over and over was, 'Liz, it doesn't matter how smart you are. If you don't work harder than the person next to you, you're going to lose. You're plenty smart, so don't waste it.' I knew I wanted to go to college. I didn't know what I wanted to study, I knew I didn't want to clean houses or work in an auto plant. I also knew there was no money for it. So, I worked my ass off and graduated first in my class.\"\n\n\"That must have opened a few doors.\"\n\n\"You'd think. Too bad it was such a shitty school. Finishing first there wasn't apparently much of an achievement to the colleges I applied to. I got a few scholarship offers but nothing that would have made it actually possible for me to go anywhere other than the local community college, and that would have meant staying at home with mom.\"\n\nHer eyes unfocused, staring at nothing in particular.\n\n\"The month I graduated, I was with some friends at the mall and there was an Army recruitment center, with a big sign on the window saying 'forty thousand dollars for college!' I walked right in. My friends were horrified. They followed me, trying to get me to leave, but I made them go home without me. I sat and listened to the recruiter's whole pitch. I took the ASVAB the next weekend and maxed it out. The recruiter told me I could ask for any enlisted MOS I wanted with that score.\"\n\n\"MOS? What's that?\"\n\n\"Military Occupation Specialty. Basically, what your job was going to be in the service. I had no idea what to do so I asked his opinion. He talked me into 68W.\"\n\n\"What's that?\"\n\n\"Sorry, that's the code for combat medic. He sold me on it as 'a great skill that translates immediately into a job after the Army!' He persuaded me I could get out and be a paramedic while I went to college. In hindsight, I know it was only because he was missing some recruitment goals for that MOS and not because he really thought it was the best job for me, personally. But it turned out for the best, in the end.\"\n\nShe turned and fished out a bottle of sunscreen from her backpack and started slathering it on her legs.\n\n\"I loved medic training. When they said I was going to a medevac unit and was going to get to fly, I thought that was pretty cool. My first deployment, though, I was so scared the first time we flew in to pick up a casualty\"\n\n\"Were you scared about getting shot at?\" I asked.\n\n\"Surprisingly, no. By that time in Afghanistan, it was actually pretty rare for a medevac bird to come under fire, although Jo told me some stories that would curl your hair. At any rate, I was more worried about screwing up, or letting someone under my care not make it alive to the hospital back at Bagram or a FOB.\"\n\n\"I almost forgot how many acronyms you use,\" I said with a smile. \"That one I can guess: forward operating base? So, what happened your first time?\"\n\n\"We got called in to evac a soldier. He was hit bad, shot in the gut and he was circling the drain fast. That seven-six-two round can really mess you up. I was the newbie on the crew; I'd only been on Jo's bird for a few weeks. There was a senior medic with us and he went right to work on the wound, to try to slow the bleeding.\" She offered me the sunscreen.\n\n\"Thanks,\" I said and started putting on my second coat of the day.\n\n\"He told me to start a line, to try and replace some of his fluid volume. Imagine the first time you ever have to start an IV in a real person, when it's not training, when it's real life and death, it's in the back of a helicopter doing a full power takeoff, the turbines are roaring, the patient is screaming. I was trying not to get tangled in my safety line, and maintain my focus. I had to put my knee on his wrist to hold his arm down while I did the stick.\"\n\nShe paused, taking a deep breath as she remembered. I didn't say a word, not wanting to interrupt her story.\n\n\"To my surprise, I got it on the first try. Hung the bag, and the other medic and I worked the whole flight to keep this guy alive. We landed at the hospital pad and the nurses took him. And then we got back in our chopper and flew back to our base. That was it.\"\n\n\"Wait, so you didn't even know if he lived or not?\"\n\n\"Not right away, and I was really upset about that. We landed at the base and got to work cleaning our bird, washing all the blood out, restocking our first-aid supplies. As the newbie I got the scut-work, hosing out the back. There was so much blood, I convinced myself there was no way he would have survived. Then, just as we were finishing up, Jo came back from the ready room and told us the guy pulled through surgery and was going to be flown home in a day or two.\"\n\n\"Wow,\" was all I could say. I'd completely stopped paying attention to the game and was hanging on her every word.\n\n\"Yeah. And I immediately lost my shit. I started bawling, and couldn't stop. My training medic got all uncomfortable and made himself scarce, but Jo and one of the other crew, Sgt. Ben Jackson, sat with me while I got my shit together. Then they told me they knew I was going to be good at my job because it showed both that I cared, and that I could keep my cool when it counted and let go when I could. Ben told me it was nothing to be ashamed of. It was to be embraced.\"\n\n\"You let yourself go when it was safe to do so,\" I said.\n\n\"Yeah. Anyway, I grew addicted to it. Making the save. Bringing them in alive. I'd started taking college classes online as soon as I was past basic. I knew I shouldn't waste the opportunity, but I wasn't sure that I really wanted to go to college anymore. I knew what I wanted to do. I wanted to be the one who was there when people were in their worst moments, and I wanted to pull them back from the edge. To make the save. To get them to help. So, I figured I'd either stay in the Army, doing the job until retirement or I'd do my six years, then get out and be a paramedic.\"\n\nShe took a long swallow of water, staring at the field.\n\n\"And then we got shot down. When I got to Walter Reed, the first thing they asked was for me to come up with some goals for my recovery, and I got so mad. I'd already had my goals, and they'd been taken away from me! Can't be a paramedic in a wheelchair! I was such an asshole to my therapist and my treatment coordinator.\"\n\nI rubbed her arm, and she put her hand over mine.\n\n\"I started talking to one of the doctors there about my frustration. And one day, he showed up and told my physical therapist that he needed me for the afternoon. He wheeled me out to his car and took me to Montgomery General, where he had privileges. We hung out in the E.R. for a few hours. An MVA came in while I was there, and the energy of the staff... it was the exact same as when I'd been a flight medic. Controlled chaos, with one goal. Making the save.\"\n\nShe sat back and smiled faintly. \"That was when I knew what I was going to do. I went back to my room at Reed that night and started researching colleges with pre-med programs. With all the courses I'd been taking online, I was maybe only a year and a half from getting a bachelors. I picked GW because it had both pre-med and a medical school, and it was supposed to be one of the best in the region. I mean apart from Johns Hopkins, but Hopkins is in one of the shittiest neighborhoods in Baltimore and Baltimore doesn't have a subway. I didn't even apply there. I landed at GW and I've been here ever since.\"\n\nI gave her hand another squeeze. \"That's an amazing story.\"\n\n\"Well... thanks.\"\n\n\"Where's your mom now?\"\n\n\"Still in Indiana. She's never really pulled herself together since dad died. We're not very close anymore. I think the last time we talked was at Christmas. Or, no, Mother's Day. She's shacked up with some guy who works in a tire shop.\"\n\n\"I guess I understand why you don't talk about your parents, or anything before the Army much.\"\n\n\"Well, it wasn't great, that's for sure, but life is what you make of it and I feel like I've done a decent job of hitting what I was aiming for.\"\n\n\"I'll say. You told me you don't fuck around when it comes to getting what you want. I can see you weren't kidding.\"\n\nShe turned in her chair to face me. \"That's right. And what I want now is sitting right here next to me.\"\n\nShe reached over, pulled me to her and kissed me. When she let me go, I was sure my skin was a shade pinker than I could blame the sun for.\n\nThe Nationals ended up completing the sweep and I had to admit I enjoyed seeing the Phillies fall. Washington was a fun team to watch. Not that I was in danger of giving up on my Brew-Crew, but I could see myself becoming a fair weather Nats fan. At least when they weren't playing Milwaukee.\n\nAfter the game we made our way back down into the metro. Liz surprised me by having us get off the Green Line at L'Enfant Plaza, then we switched to the Yellow Line, headed south across the Potomac into Virginia, where we got off at the Pentagon City station.",
        "\"Holy crap, it's hot,\" I complained, as she led me away from the station. \"How much further are we walking?\"\n\nShe grinned at me as she led me down the sidewalk. \"We just spent three hours sitting in the sun, and you're complaining about a little stroll?\"\n\n\"I'm complaining because we sat in the sun for three hours. Heat is cumulative you know.\"\n\n\"No, it's not wuss,\" she teased me. \"Besides, I knew we were going to be dying when we got out of the game, so I have a plan.\"\n\n\"I hope it involves, oh, say... a bathing suit.\"\n\n\"Got it in one!\" she said, with a laugh.\n\nAfter a ten-minute walk (for me, a roll for her), we arrived at a DoubleTree hotel. Liz led us into the elevator and up to the second-floor lobby to check in. The woman at the front desk took Liz's ID and credit card, then she handed us two key-cards and two small bags, each containing a bottle of water and a chocolate chip cookie.\n\n\"Nice touch,\" I said, checking out the contents of my bag as we rode up in the elevator. \"How did you know about this hotel?\"\n\n\"I have friends from Bragg who come up to run the Ten-Miler every year and they usually stay here. It's a really nice hotel and right across from the Pentagon where the race starts. I usually hang out with them here the night before.\"\n\nWe got out on the fourteenth floor, and Liz headed right towards a hallway of rooms. I noticed a sign on a door to the left of the elevators.\n\n\"Whoa! The swimming pool is up here?\"\n\nShe laughed. \"Right? How cool is that? Let's get changed. Teasing aside, I'm as sweaty as you are.\"\n\nWe found our room, which turned out to be a suite with a panoramic view of the Pentagon laid out below us with the Capitol dome and Washington Monument rising over the city beyond.\n\n\"This is beautiful,\" I said, looking out the window. The living area was tastefully appointed and I saw a big king-sized bed through the door into the bedroom. I felt myself flush at the thought of what might happen there later.\n\nShe rolled over to me and tugged me down to sit on her lap. \"I'm glad you like it,\" she said softly, \"I want tonight to be special for us. It's going to be really special for me.\" She leaned her upper body against mine and kissed me. I circled my arm around her neck. Her lips were so eager against mine.\n\n\"Do you want to go check and make sure the mattress is comfy? You know, in case we might need to change rooms if it's bad?\" I asked breathlessly after a few minutes.\n\n\"I would love nothing more,\" she said and kissed me again, \"But, I'm hot and stinky. Let's go swimming first.\" She pushed me up off her lap.\n\n\"...really?!\" I asked in mock frustration. \"You sit me down and kiss me like that, then you want to put me on hold?\"\n\nShe grinned. \"Payback for you revving me up last Saturday night. Remember, I'm in charge today.\"\n\nLIZ\n\nThe glass-enclosed indoor pool on the fourteenth floor had the same magnificent view as our suite. Until a group of rowdy teenaged tourists came in, we'd had the pool to ourselves for almost two hours, and by then we were as wrinkled and prune-y as we could stand anyway.\n\nI loved swimming. I hadn't been much of a swimmer as a kid, but during my recovery at Walter Reed I'd learned that I felt much less handicapped in the water. The sleek one-piece that Addison wore made it even more enjoyable for me.\n\nAfter the pool, we took turns getting showered and I put on a dress for the first time since my undergrad commencement ceremony. Fortunately for me, the hotel had a suite with a handicapped accessible bathroom.\n\nThe Skydome on the top floor of the hotel was an honest-to-god revolving restaurant, making a full circle once an hour. When the Pentagon slowly came into view for the third time, I realized how long we'd been there. It just as slowly occurred to me that I was stalling.\n\nWe had shared an appetizer, then salads before the main course. Then I'd insisted we share a dessert.\n\n\"Should we get the check?\" Addison, asked me, her thumb stroking the back of my hand as she held it. She seemed to love that gesture. So did I.\n\n\"Sure... or, do you want coffee maybe?\" I could hear the tension in my voice, and saw Addison's eyes as she caught it as well.\n\n\"Liz... what's wrong?\"\n\nI turned and looked out the window at the Pentagon as my vision started clouding up. Damn it.\n\n\"Hey, hey... what's the matter?\"\n\n\"I'm scared,\" I heard myself whisper. I couldn't believe the words coming out of my mouth.\n\n\"What? Why are you... oh. Liz, we don't have to do anything tonight if it's too soon. This has been such a great day, we could just--\"\n\n\"It's not...\" I interrupted her. \"Addison, I...\"\n\nShe waited patiently, still stroking the back of my hand with her thumb. I looked around the restaurant. It was mostly empty by now and our waiter was chatting up the bartender.\n\n\"I'm... I'm... I'm not scared of you. I'm scared of me. I'm scared that it's going to be like it's been with all the guys since my crash. That we'll go back to the room, and things will get heavy and then it'll... not happen. That I'll disappoint you. That I'm broken. That I'm... frigid or--\"\n\n\"Hey,\" she interrupted me. \"I am not worried about that. You know why?\"\n\nI shook my head, a tear finally spilling down my cheek. I angrily wiped it away.\n\nShe reached out and lifted my chin with her finger so she could look me in the eye. \"Because I've kissed you. And I know, I know, you want to be with me, and that's enough for me. I'm not a guy, Liz. Getting off isn't the point, or even the most important part of sex. Whatever we can do together, we'll do together. And I want you. As you are. Not your orgasm or for you to be clawing the bed, screaming 'oh baby!' or... well, I mean I do want that, let's not get crazy.\"\n\nI laughed through my tears then wiped my eyes with my napkin.\n\n\"But I want you. However, and whatever we can do. Together. Okay? Don't pressure yourself. If we go to our room and just kiss until we fall asleep, I'll be more than happy. If we get naked and explore each other, and nothing happens, I'm still over the moon for you. We'll find our happy place. We'll find what works for us.\"\n\nI took a deep shuddering breath and squeezed her hand. \"I needed to hear that.\"\n\n\"Are you okay?\"\n\n\"I... yeah. Thanks, Addie.\"\n\nShe leaned towards me, lowered her voice and said again, \"So... should we get the check?\"\n\nBack in our suite, I let Addison use the bathroom first, since it was going to take me longer to get ready for bed.\n\nI spent a little extra time on the toilet, then skipped the adult diaper and put on the underwear I'd brought to wear to bed. Navy blue cotton boy shorts and a matching camisole that didn't quite come down to my navel. I cursed myself for the umpteenth time as I brushed my teeth for not finding a chance to go shopping for fancier underwear. Then I opened the door and clicked off the light as I rolled into the bedroom. It took a few seconds for my eyes to adjust, then I sucked in a deep breath.\n\n\"Wow...\" was all I could get out.\n\nAll the lights were off, but Addison had opened the curtains. The wall of windows let in the lights from the Pentagon below, as well as the glow from a full moon rising over the Capitol building. She'd pulled back the comforter and was laying on the sheets, one hand propped up supporting her head, the other sensuously trailing over her stomach. Her legs were stretched out, one ankle crossed over the other. And what she was wearing... Wow, I thought again.\n\nIt was a teddy, made of an almost transparently sheer fabric, cut high on her hips, and plunging low between her breasts, with small patches of more opaque lace over her breasts and between her legs. The spaghetti strap on the shoulder nearest the bed had fallen down her arm. At first it looked black but as my eyes continued to adapt to the dim light I saw it was a deep, wine red color.\n\n\"Where... where did you get that?\" I murmured.\n\n\"I had it in my bag. You like it?\"\n\n\"I do.\" I rolled my chair over and lifted myself onto the mattress, then rolled my body over once to meet her in the middle of the bed. As I finished my roll, I found myself intimately close to her.\n\nA tiny bit of fear clouded my mind again. She saw it in my eyes immediately.\n\n\"Hey. No expectations, remember? Let's just... be with each other. Okay?\"\n\n\"Okay.\" Her breath smelled sweet. It had been two years since I'd been in another person's space like this, except for when I'd woken up in bed with her earlier in the week. I found I didn't mind. At all. She was my best friend. She was more. She could be so much more.\n\nShe kissed me.\n\nZing!\n\nThere it was. The fear fled from me, and I opened my mouth, reaching for her tongue with mine. My hand rested on her shoulder, playing with the strap of her teddy. After a while, I felt her palm on my skin, as it slid up my side, under my camisole. I briefly tensed, but she hummed into my mouth and it comforted me. She didn't go beyond slowly stroking the skin over my ribs, letting me get accustomed to her touch.\n\nShe broke off our kiss to trail her mouth down my neck and I raised my chin to give her better access. She rewarded my compliance by sucking on my earlobe and I moaned in appreciation. I suddenly realized my hand had trailed down her chest and I was stroking the tip of her breast with the backs of my fingers. I turned my head to look and saw her nipples were hard, poking at the sheer fabric.\n\nI looked back at her. \"Is this okay?\"\n\nShe smiled and kissed me again, then sat up, and pulled down both straps off her shoulders, baring herself to me. Her breasts looked heavy, yet not too large: slightly bigger than mine. Her nipples were tight, standing up as if waiting for my touch.\n\n\"Wow,\" I whispered, \"you have really great tits.\" She laughed delightedly, which turned into an intake of breath as I cupped one in my hand, caressing her nipple with my thumb. I used my other hand to push myself to sit up as well, and started to lean over to reach for her with my mouth, then hesitated. \"Is this okay?\" I asked again.\n\nShe kissed me once more. \"Anything you want to do is okay with me. You don't have to ask.\" Then she tangled her hand in my ponytail and pulled my head towards her chest.\n\nI'd played with a man's nipples during sex before. This was totally different. Hers were so hard that I knew she must be aching, so I took it in my mouth as delicately as I could, avoiding teeth. I gently licked it, then softly sucked and was rewarded with a low moan from deep in her throat. She brought her hands back to me and I felt her tugging at the hem of my camisole. I released her breast from my mouth, raised my arms and suddenly found myself topless.\n\nI'd been naked in the tub when she'd washed me, helping me get in bed the other night. This felt so much more naked, and I still had my boy shorts on. I sat there, letting her look at me, her eyes roving over my body.\n\n\"What?\" I asked finally.\n\n\"I can't believe you think I have great tits. Yours are perfect.\"\n\nI felt myself blush. \"They're only B's,\" I said, looking down at them. I jiggled my torso to give them a shake.\n\n\"They're beautiful.\" She pushed me to lay on my back then got up on all fours, hovering over me. She began kissing my stomach, down my side, to my thighs.\n\n\"Can you feel this?\" she asked.\n\n\"No. I mean, I can feel the pressure your mouth puts on me there with my upper body, but I can't feel your lips on my skin.\"\n\n\"Tell me when you start to feel it.\"\n\nShe started planting kisses on my leg, moving a half inch higher with each one. When she kissed the hollow where my thigh met my hip, I said, \"I can start to feel that. It's very faint.\" Another kiss, a little higher. \"I feel that more.\"\n\nShe moved over to my cotton covered mound and nuzzled her nose against it. \"I can barely feel that,\" I said.\n\n\"You smell so good. I can't wait to taste you there.\" The thought of it heightened my excitement. She planted a small kiss between my legs, then started kissing her way further up my body. By the time she reached about an inch above the waistband of my underwear, I could fully feel her lips and tongue.\n\n\"You've reached the sacred line of demarcation,\" I said breathlessly as she swirled her tongue into my belly button. I reached down and tried to pull her up higher towards my breasts. She grabbed both my hands with hers and held them down to the mattress.\n\n\"I brought... I brought my Hitachi,\" I said, embarrassed. \"You, know... in case. It's in my backpack.\"\n\n\"Let's play for now, we can do that later,\" she said. She was making her way up my stomach with excruciating slowness, kissing and licking me. My breath was coming quicker. When she finally reached my breasts, she greeted them with a gentle nip of her teeth at the swell underneath, making me jump. I tried to raise my hands to grab her hair, but she continued to hold them tightly.\n\n\"Addie,\" I moaned. She ran her tongue in circles over my breast, first one, then the other. Her lips felt like fire on my tender skin. I don't think my nipples had ever been harder in my life and I ached to have her mouth on them, but she continued to tease me, dragging her tongue right to the edge then darting away. I began to shift my body back and forth, chasing her mouth with the tips of my breasts in a vain attempt to feel her lips on me there.\n\n\"Oh god, please!\" Through my frustration I was surprised to feel a dull throb start between my legs, the throb I normally only felt through a lengthy application of my vibrator.\n\nShe raised up slightly, opened her mouth wide and breathed hot air onto one of my nipples as I arched my back, straining to raise it into her mouth. She smiled, then pursed her lips and blew a cool stream of air at me. Unbelievably, my nipples got even harder. They were aching.\n\n\"Addie, I can't take much--\"\n\nHer mouth engulfed my nipple, and I moaned loudly. Her tongue was so hot, it felt like liquid fire.\n\n\"Oh my god, oh my god, oh my god,\" I chanted as she sucked at my breast. I tore my hands from her grasp and grabbed her head. She moved her mouth to my other breast, and the sensation was even more intense, if that was even possible. Her leg came up between mine and pressed firmly between them. I could feel the pressure of her knee against my clit. She brought her hand up to caress and pinch my other nipple while she sucked on me and the throb between my legs sharply increased.\n\n\"Oh god, Addie, don't stop, don't stop, please, I think... I think...\" I stopped speaking. I stopped breathing. It felt like I might stop existing. My body tensed up and my fingers tightened in her hair.\n\nThe orgasm coursed through me like electricity.\n\nZ-Z-Z-I-I-I-N-N-N-G-G-G!\n\nThe next thing I was aware of was clutching onto Addison like a drowning swimmer clutching a life ring, sobs wracking my body. Addison was stroking my hair, murmuring, \"It's okay, baby. It's okay, you're okay.\" Her voice was filled with concern.\n\n\"Addison!\" I gasped through the tears raining down my cheeks. \"Oh my god... oh my god!\" The relief I was feeling was so overwhelming I didn't know if I'd ever be able to stop crying.\n\nI wasn't broken.\n\nIn one small way, at least, I was still whole.\n\n\"S-h-h-h, it's okay baby.\"\n\nI finally started to calm myself, my breathing ragged. I kissed her harder than I'd ever kissed anyone.\n\n\"Are you okay?\" she asked, as we broke apart.\n\nI nodded, wordlessly, pressing my forehead to hers, my eyes closed.\n\n\"What happened?\" she asked.\n\n\"I came,\" I said. Such an insignificant word for what had just happened.\n\n\"I mean, I know that, but...\" Her tone was worried.\n\n\"No one has...\" I felt like I couldn't catch my breath.\n\n\"Made you come playing with your nipples?\"\n\n\"No, no one has given me an orgasm since my crash. I told you, it's been...\" I drew in a long, shuddering breath. I opened my eyes and looked at her.\n\nShe smiled at me. I could see wetness on her face where my tears had rubbed off on her. \"Well, I hope that's the first of many to come,\" she said.\n\nI stifled another sob of relief, from the lifting of weight from me. I could feel the four years of failure in bed taken off my shoulders. \"I'm just... I'm so grateful to you right now. For showing me I can still...\"\n\nShe caressed my cheek and looked at me with such tenderness. \"I want to make you feel good. I'm so glad I could.\"\n\n\"You must have a magic mouth,\" I said, smiling.\n\nShe sat up and I shakily pushed myself to sit up with her.\n\n\"What I did to you had nothing to do with my mouth. Ok, it had a little to do with my mouth,\" she said, laughing at my skeptical look. Then she turned serious. \"What just happened was because of this.\" She touched the side of her head, and then caressed my temple. \"It's our relationship.\" She touched the spot between her breasts then reached out to put her palm flat between mine.\n\n\"It's our connection,\" she whispered.\n\nI raised my hand and put my palm flat on the center of her chest. I could feel her pulse under her skin. \"Addie,\" I whispered.\n\n\"What?\"\n\nI put on my best poker face, then I moved my palm two inches to the left side of her chest while I took her hand and moved it a little to the left on mine.\n\n\"Our hearts are actually here,\" I said.\n\nHer eyes widened as she yelled, \"Did you just 'well, actually' me?!\" She dove at me, pinning me to the mattress and started tickling me.\n\nI squealed with laughter, trying to fight her off. My arms were stronger than hers but she'd pinned me with her body and I didn't have the leverage to get away. \"I give up, stop, stop, I'm sorry, stop, uncle!\" I managed to get out through my giggles. She finally relented and I wrapped my arms around her, hugging her tightly to me. \"Sorry, I couldn't resist.\"\n\n\"You're terrible,\" she said, tucking my head under her chin.\n\n\"I love you,\" I heard myself whisper.\n\nShe pulled away so she could see my face. \"What did you say?\"\n\nMy brain went into high gear as I realized what had come out of my mouth. Had I meant to say that? Did I mean it? I thought about everything we'd been through, our friendship, our implosion, my forcing her to talk to me, the last week back together. All our texting. Our date last weekend. Her being there for me, helping me when I had come home so exhausted. Her patience and acceptance of my physical limitations. What she meant to me.\n\nNo more doubts.\n\nI looked up at her. \"I love you.\"\n\nShe was silent for moment, then said, \"You know, I've heard it said you probably shouldn't say 'I love you' to someone right after the first time you have sex together, because--\"\n\n\"Sex-schmex,\" I interrupted. \"This has nothing to do with the sex. I think a part of me already knew when I crawled up your stairs. Otherwise I don't think I'd have crawled up your stairs. I love you, Addison Wagner.\"\n\nShe teared up so fast, I almost felt guilt at being the cause. Instead my heart soared as she hugged me and crushed the breath out of my lungs.\n\nShe finally let me go and kissed me.\n\n\"Um, are you going to say anything?\" I asked.\n\n\"Like what?\" she asked, then kept kissing my neck\n\n\"Like, 'I love you too' maybe?\"\n\n\"Nope,\" she said, then softly bit my collarbone.\n\n\"'Nope'?! What do you mean 'nope'?! What the hell?!\"\n\nShe gave me a goofy grin. \"I said it to you in April, and I had to wait a really long time for my 'I love you' back. Now you get to wait.\"\n\n\"Ouch, that's cold!\" I tried to roll over and pin her to do some tickling of my own. She'd expected it and fended me off, so I took the opportunity to slide in between her legs. I found myself kissing my way down her stomach, pushing my body down with my hands. My tongue pressed the lacy fabric of her garment into her belly button and she giggled, then softly exhaled. I lifted myself with my arms and gave another push, so that I slid down further, putting my face above the v-shape of her legs. I reached out and softly stroked her mound over the lace of her teddy, and she purred. I pushed her legs further open, then my fingers found the snaps underneath. As they popped open, she leaned up on her elbows and looked at me, a bit worriedly.",
        "\"Liz, if this is too fast or you aren't--\"\n\nI interrupted her with my operating room voice. \"Miss Wagner, you can stay if you lay right there and don't talk. Just be grateful I'm not making you wear a mask.\"\n\nShe giggled, then grabbed a pillow and pulled it under her head so she could lay back and still watch me. I pushed her teddy up so it was gathered around her waist like a lacy belt, and took in the sight of the first pussy I was ever going to play with besides my own.\n\nHer lips were puffy, with a tiny drop of wetness between them, gleaming in the soft light. She had a narrow landing strip of hair that was so pale that, at first, I thought she was shaved. It started above her lips and went up only a few inches.\n\n\"Your hair is just as blonde here,\" I said, in wonder. I'd never seen pubic hair that color. It was so sexy. I stroked it gently with my fingers and she made a little cooing sound. I took my time, tracing the tip of one finger around, stroking the sensitive skin.\n\nAs I ran my finger in between her lips, she gave a little moan and I could smell her scent. It was earthy, and I found my mouth was watering. I lowered my head and with, the tip of my tongue, rescued the glistening drop from between her folds. She did taste different from me. Better. I wanted more. I flattened my tongue and ran it the length of her slit, from bottom to top, looking her in the eye the whole time.\n\nShe gasped when I ran my taste buds over the hard nub of her clit, so I decided I it was a good idea to stay there for a while, swirling my tongue on it. She watched as long as she could, then her eyes closed and her head tilted back. She used one hand to grab the ponytail on top of my head in her fist and pressed my mouth into her. I leaned my body up enough to free a hand, rubbed my finger up and down her, getting it nice and slippery then smoothly slid it inside her.\n\nShe felt similar, yet different from myself, as her muscles clenched around my finger.\n\n\"A... another...\" she gasped. I withdrew my hand far enough so that I could add a second finger. Recalling what I'd liked back when I could still feel things there, I started curling my fingertips against the spongy flesh on the front wall inside.\n\nHer hand clenched in my hair, almost painful, yet delicious. I bent to licking her with determination and soon she was crying out, legs quivering as they clamped on the side of my head.\n\n\"Liz... Liz! ...Oh... Oh... Oh God!\" she cried out. I kept my tongue busy, fingers moving and stroked her through her orgasm as her body thrashed. She finally arched her shoulders off the mattress and pushed my mouth away from her, panting. I pushed up on my elbows and rested my chin on her stomach, watching her face while the strip of her soft, downy hair tickled my neck.\n\n\"Was that okay?\" I asked softly. I felt incredibly invested in her answer.\n\nShe couldn't answer me right away, which, in and of itself, was answer enough. When she got her breathing under control she finally said, \"My god, Liz. If I didn't know better I'd never believe you haven't been with a woman. I'm not sure I do anyway. Did you learn that in medical school or something?\"\n\n\"Absolutely. In anatomy class we spent a week learning the ins and outs of the female orgasm. The practical exam was a real bitch.\"\n\n\"Smart ass.\" She grabbed my shoulders and rolled me over onto my back. \"I told you I couldn't wait to taste you.\" Addison sat up and started tugging my underwear down my hips. She had difficulty since my legs were dead weight. As she struggled, my self-consciousness started to return.\n\n\"Addie, you don't have to--\"\n\n\"Hush, my turn now.\"\n\nShe finally got my shorts down my legs and tossed them to the floor, leaving me naked. Pushing my legs apart, she settled into the same position I'd been in moments ago. She stroked the bare skin there.\n\n\"Did you shave this morning?\"\n\n\"Yeah, it was kind of a jungle down there, so I just took it all off. I haven't had much reason for keeping up appearances until now.\"\n\n\"Oh baby, you cut yourself pretty badly here! And you've got a terrible razor burn, doesn't that...\" She trailed off.\n\n\"Uh, no, it doesn't hurt at all in fact.\"\n\nShe rested her cheek on my leg and looked up at me. \"I'm sorry. I can't believe I almost said that.\" I saw her hand start to stroke me, but I could barely feel it. She leaned down and licked at me. I felt almost nothing. My self-consciousness threatened to overwhelm me, and my throat got hot. Do. Not. Cry, I told myself.\n\n\"Hey,\" I said, trying not to sound choked up, \"that's not... you really don't have to--\"\n\n\"S-h-h-h, I know, this isn't going to do it for you.\" She scooted up next to me and kissed me. \"I just wanted a taste. I don't know if you can tell, but you're really wet. And yummy.\" She kissed me again, while reaching down between my legs. I felt pressure and heard a soft, wet sound that announced she'd slid her fingers into me.\n\n\"I can... I can feel that. A little.\"\n\n\"Does it feel good? Or just kind of there?\"\n\n\"Just kind of there, right now.\" A band of tension released from around my chest, and I felt like I could breathe again. She wasn't expecting me to react like a non-disabled woman. She was 'feeling me out', so to speak.\n\n\"Well we know one thing that works,\" she said, then ducked her head and took one of my nipples in her mouth. It felt really good, but nothing like earlier. I guess she'd really primed me the first time. I could feel her bumping her hand against me, still fingering me.\n\n\"Do you want to grab my vibrator?\" I asked.\n\n\"If you want me to. I'm just enjoying touching you right now.\"\n\nI relaxed even more, her no-expectations approach relieving me of the last of my reticence. I closed my eyes and surrendered to her attention. She kissed and licked up and down my chest and neck, giving me a soft kiss on the lips now and then.\n\nShe withdrew her hand from me and slid her palm up my stomach to cup one of my breasts while she nursed at the other. I could feel the slickness on her fingers from being inside me. Soon my nipples had reached glass-cutting levels of hardness again and my breathing grew shallow.\n\n\"Rub my clit,\" I whispered. I was remembering after our first date, when she'd forbidden me from touching myself. I was sure I could have come from my fingers that night. That hadn't happened since before my crash.\n\nAddison slid one arm under my neck, cradling me to her as she tended to my nipple with her mouth. Her other hand slid back down my stomach and I could feel the pressure as she started rubbing me.\n\nMy breathing sped up and quiet little moans started coming out of my mouth. I grabbed her hair.\n\n\"Harder,\" I said quietly.\n\n\"Are you sure? I don't want to hurt you.\"\n\n\"You won't. Just... harder!\" I whispered, my eyes shut in concentration.\n\nShe sped up her pace and the throb returned. I focused on the throb. Addison seemed to know just what to do. She sucked and licked at my nipple, occasionally giving it the gentlest bite, as she kept rubbing at my clit.\n\n\"I think you're going to make me come again,\" I whispered.\n\nWe lay there, mostly silent other than my heavy breathing. I kept my eyes shut and focused on the sensations. Her mouth on my breast. Her arm under my neck. Feeling her long body stretched out along mine. The throb. I could feel her watching me, then she leaned down and nibbled on my earlobe.\n\nMy orgasm surprised me when it arrived. It came in a rush, not as overwhelming as the first, but still strong. I let out a small cry, as my upper body jerked and spasmed. She kept rubbing me through the tremors, until I fell back completely limp. Then she pulled herself up to kiss me. She was staring down at me with a smile on her face when I opened my eyes.\n\n\"I don't think I can move,\" I whispered.\n\n\"I know, you're paralyzed.\"\n\n\"Smart ass!\" I poked her in the ribs, but didn't have the energy to follow it up with tickling. \"You made me come twice.\"\n\n\"Yay me!\" she said, bouncing her breasts on mine.\n\nI chuckled. \"That's twice more than my last two boyfriends combined.\"\n\n\"I'm sorry about that. It sucks they weren't more considerate, or patient. It's not as if your body's hard to read.\"\n\n\"I'm not sorry. If they had been, I might not be here with you.\"\n\nShe laid her head on my shoulder and we were quiet for a few minutes, then she asked, \"What are you thinking?\"\n\nI laughed. \"I'm thinking that after all the worry I had about us, about trying sex with a woman, having sex with you specifically, about a relationship with you, worrying about messing up our friendship any more than we already had... If I'd only known the truth, I don't think I'd have worried at all.\"\n\nShe turned her head to look up at me. \"What truth?\"\n\n\"Lesbian sex is the best.\"\n\nShe grinned at me. \"Damn right!\" she exclaimed, as I started running my hands over her body again. Sometime after the moon had risen out of our view out the window, and after we'd drained the battery in my Hitachi, we decided we were too tired to be able to wring any more pleasure out of each other. I made a trip to the bathroom, and, after donning a diaper and a fresh pair of underwear, I brought a glass of water back to Addison.\n\n\"Oh my god, you're possibly my favorite lover ever right now,\" she said, before downing half of it then handing it back to me. I took a smaller sip, and set it on the nightstand before locking my wheels and shifting over back into bed.\n\n\"Tomorrow's going to be a long shift now, but this was totally worth it,\" I said, laying down. \"I got us a late checkout, so we don't have to be out until noon. Does that work for you to make your court hearing?\"\n\n\"Yeah, as long as we take a Lyft home instead of the Metro. How do you normally sleep?\"\n\n\"On my side. I usually hug a pillow to my chest.\"\n\n\"Perfect, I usually sleep on my back. C'mere.\" She laid down and held out her arm. I eagerly snuggled up against her, my head on her shoulder. It did, indeed, feel perfect.\n\n\"Sleep tight,\" she said softly.\n\n\"I love you,\" I said, for the second time that night.\n\n\"I love you, too.\"\n\nA thrill ran through me, hearing the words from her.\n\nWe laid quietly for a few minutes. I reached down and pulled my leg over hers, and she hugged me tighter to her body.\n\n\"I'm so happy you climbed up my stairs. And I'm so sorry you had to do that to get through to me. And I'm so, so sorry I ran away from you in the first place.\"\n\n\"It's okay.\"\n\n\"Really?\" Her voice held so much yearning.\n\nI gave her a squeeze. \"After everything we've been through to get together? Nothing's going to keep us apart now Addison.\"\n\nTo be continued.... Maybe\n\nI want close this chapter by saying, Black Lives Matter, Gay and Trans Rights are Human Rights, Trans Women are Women, Trans Men are Men. If you disagree with any of that, then clearly my stuff is not for you. If you haven't gotten it yet from my writing, LOVE is what makes the world go 'round, and we need more of it, not less...\n\nTake care of each other, friends..."
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "disabled",
        "gay",
        "gay romance",
        "happily ever after",
        "lesbian",
        "lesbian romance",
        "love story",
        "romance",
        "wheelchair"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/wheels-in-motion-ch-05"
}