{
    "title": "Coffee & Poetry",
    "pages": [
        "Ella held her ground out of sheer stubbornness. She needed some form of strength and stubbornness was her forerunner that morning \u2013 who was she to knock it?\n\nIf her plans to have a ten o'clock brunch in a casual restaurant out west had played out as she would've liked... well, basically she would not have ended up in the far glitzier Sandton side of the north instead. Aside from not being dressed for Sandton, she didn't quite feel... qualified to be there either.\n\n\"No, no, it's not a bad time \u2013 I'm glad you called. Lucky for us, I'll be free from noon until about two. But I need you to meet me at Sandton City \u2013 we can have lunch on the Square. I need to be ready to bolt should my next appointment call unexpectedly.\"\n\nThat had been the phone call between her and her dear friend, Cassie. On a personality level, they had so much in common. Lifestyle-wise, though, Ella always felt out of depth in Cassie's world. Ballet pumps could only walk you so far \u2013 which was nowhere near the land of stilettos and botox.\n\nWhen Ella had walked out of her rented cottage that morning, her fitted harem pants, wrapped top and wild afro had felt just right. She never needed more than a dash of lip-gloss and barely made eye contact with the rest of the world from behind her glasses.\n\nPart of it was shyness, sure; a hint of her realism in knowing girls like her didn't adorn the pages the world scoured for beauty definitions and tips. But mostly, she dealt constantly with a lack of interest in becoming that glossy girl who wore expensive labels and stayed out of the rain. Besides, she'd never be able to pull off perfection as elegantly as Cassandra did.\n\n10:35\n\nAll right then \u2013 only an hour since the slightly-less-endeared Kai had abandoned her. And well over an hour to go before Cassie would come to her rescue. \n\nMeanwhile Sandton gleamed in the sun \u2013 all diamonds and gold.\n\nWell, one thing one could always count on was the presence of bookshops. Ella's steadfast life security blanket was knowing there was always one place she could feel at home everywhere.\n\nShe parked in the cool underground basement in Johannesburg's most affluent shopping tower and rode a glass elevator up towards the daylight. This specific one passed two shopping levels before breaking out into the sunlight on the plaza level. On the way up Ella watched ladies carrying boutique bags and gentleman speaking on their mobile phones. Everyone was busy; each one ignored the others.\n\nOne man on the level just before the plaza was standing outside a bag shop, looking bored as the woman beside him pointed out four different bags through the window. It took her two seconds to pick favourites that Ella knew to cost the same as a year's rent at her cottage. As the elevator slowly carried her out of sight, Ella took in the man's tailored midnight suit and his fearless light eyes. Money was the last thing to worry him, no doubt. His hands were the last thing she stared at, large and strong.\n\nThe bookshop took some finding.\n\nIt had been two years since her last visit and the tower had been renovated since then.\n\nAt first she'd cringed at the line of restaurants in the sunlight, watching impossibly striking couples laughing behind expensive sunglasses. Then she'd frowned at the directory board: it was no longer the simple map she knew, but an interactive system that kept asking her to clarify her search. After that a security guard had pointed out the nearby library with a shrug then moved on.\n\nShe didn't mind the delays so much. After all, passing time was the point of the whole exercise.\n\nWhich is why she was most annoyed the next time she checked her watch as she entered Stranger Than Fiction: 10:45\n\n\"Fuck.\"\n\n<center>***</center>\n\nSandton City was a dream come true and a living nightmare rolled into one.\n\nThis was Rylan's thought every time he strode its gleaming corridors. How much of this assessment was due to his personal tastes and how much a result of shopping experiences with Diane was debatable. \n\nHe was too busy and driven a man to be spending random Friday mornings over expensive breakfasts and bag-shopping. Yet there he was, more mornings than he cared to count. His main reason for putting up with the boredom was because he liked Diane in most other areas of their (so far) short dating relationship \u2013 and it was time to settle down. At least those had been his mother's words for over a decade now.\n\nKeeping his cool this morning was a small price to pay. Certainly smaller than the bill would be by the time Diane left the centre.\n\nThe boredom bothered Rylan more than he admitted, even to himself. And he refrained from admitting it because he felt it was simply a part of this stage of life. Everyone grew up and settled down. Besides, there was no way he could have lived the spontaneous adventure of his youth with Derek and Ben indefinitely. If nothing else, the fact that between them those two had already been married five times and fathered four children was proof of that.\n\nThe glare of the brightly lit line of shops and expensively tiled floors was too much.\n\nDiane had insisted on them having lunch together as well once he'd made the mistake of letting slip that the morning's work could be delegated though he preferred not to do so. She preferred tapas in the sunshine \u2013 so that is what they would be having at noon. He'd then handed her a credit card, negotiated an hour to himself to make some calls and marched out of the store even as she called after him.\n\nHe'd agreed to the lunch because he knew that she, for all her poise and assertiveness, was still insecure about their relationship. They'd been out a few times over the last two months, but he'd never made what could be construed as a serious move. Like letting her spend the night. Gods knew she'd tried \u2013 but he always sent her packing or insisted on visiting her... and then leaving before morning. \n\nAnd, even though he'd never intentionally set out to become a focal point, he found himself the centre of much interest and speculation. He was very eligible on paper: a self-made success considered fair-minded yet exceptionally driven; the right age to make a mature and reliable husband; and good-looking enough not to have faced rejection yet. Actually the opposite was truer. Considering how many tall, dark-haired, blue-eyed men walked the planet, Rylan still found it rather baffling that he had to fight off women as much as he did.\n\nAwareness of the interest also made him sensitive to Diane's skittishness, though. So, he showed some consideration by agreeing to some of her moments of neediness. She wanted to feel like her place by his side was a broadcasted message; and he wanted to grow into this stage of life everyone hyped about.\n\nIt seemed a fair compromise.\n\nHe would be breaking one promise made this morning, though: there was no way he'd consider staying away from the gourmet ice cream parlour until after lunchtime. A man needed his vices. Diane meant well, but telling him what to eat and when was beyond his patience capabilities.\n\nNow, if he could only remember how to get there.\n\nBy the time he turned into what must have been the twentieth endless corridor, he was very sure that he didn't know the shopping tower as well as he'd always assumed he did. But that thought soon evaporated as he approached the huge bookstore near the elevators.\n\nThere was a girl standing outside it with one hand on her hip.\n\nAt first she caught his eye because she didn't look like anyone else around her. She wore black pants in an interesting cut that was a mid-calf length and outlined her curves without actually being tight. They made her look like an enthralling African elf. Her top was a deep sinful red that made her brown skin glow, though Rylan doubted she had any idea how breath-taking her natural beauty was beneath the unforgiving lights and in contrast to the made-up pinched faces that passed her.\n\nShe was fairly tall even in flat, snug shoes; with an innate elegance that slowed his march. She stood out even as she tried not to.\n\nAnd that is what held Rylan's eye more than everything else. She stood out, sure \u2013 but she was also such a collage of contradictions. She had enough confidence to make a unique fashion statement yet seemed unsure of how to carry her own creation. She stood there in front of the enormous store, clearly not really wanting to be there \u2013 yet also defying all with a lift her chin to challenge her presence. Her hand was on the tempting curve of her hip, her shoulders back one moment; then she suddenly switched to fidgeting with the bag hanging on the crook of her arm and pushing her glasses up her nose.\n\nHe was at a snail's pace by the time he neared her, but wasn't too worried about alarming her. She was making a point of not looking at anyone at all.\n\nUp close he was even more drawn in by her flawless coffee skin and full lips. She couldn't be more than twenty \u2013 almost certainly out of his league. He was no young Adonis anymore. \n\nHe watched her eyes soften as she looked past all the people and took in aisle upon aisle of books. A bookworm then; the thought made him smile. Her hands came up and she tangled her fingers in her massive afro, a move he instantly somehow recognised as a habit of comfort. She was in her element around books; and the way she expressed the comfortable familiarity made him want to touch her.\n\nWith her hair up, he became aware of the beautiful lines of her structure: she had a high brow and cheekbones; her jaw was angular, interesting, and her chin defined. The sharp cut of her black glasses seemed to have been chosen to draw one's eye to her own angles and lines. Her neck and arms were slim. Not skinny, just... graceful.\n\nThe biggest surprise was feeling heat slowly roll over his skin and then settle at his groin. There was no way he was getting hard while staring at a complete stranger in a busy shopping centre. Rylan shoved his hands in his pockets to hide a state he hadn't found himself in since his bloody twenties and picked up his pace again.\n\nAs he passed behind her, the scent of lilies, lemons and mint reached him; just as she checked her watched, checked it again then muttered, \"Fuck.\"\n\nRylan grinned even as his heart thudded at the intoxicating scent that wouldn't leave him.\n\n\n\n<center>***</center>\n\nThe bookshop was five times the size of Ella's cottage and miles more complex to navigate.\n\nIt was a good thing that she was just looking for looking's sake. Her first ten minutes in there passed in mute wonder at the plush carpets, gorgeous leather armchairs and categorisation that beat any stretch of the imagination. One moment she stood before an enormous section on low carb, gluten-free, dairy-free, GMO-free, environmentally friendly, unprocessed food recipes... and the next she was tilting her head curiously at books on interracial gay adoptive parenting.\n\nSome of the blurbs in the non-human fantasy erotica aisle gave her a good giggle. And then piqued her curiosity. She quickly moved along before letting herself get tempted into taking Lucien, vengeful lord of the oppressed vampire nation of the Ancient Dimension, home with her to find out exactly how he intended awakening Sonya Cleary's true desires and bringing her to life as only the undead could.\n\nPoetry. Ella beamed. She was at home in this section.\n\nShe took slow steps along the shelves then bent down when she got to the C's.\n\nCe... Ch... Co...\n\nShe bent even lower.\n\nAh. Cu...\n\nOn the second-lowest shelf she spotted e.e. cummings.\n\nShe sat down on the thick carpet and crossed her legs. She knew what she was looking for and within seconds she found it:\n\ni carry your heart with me (i carry it \nin my heart) i am never without it (anywhere \ni go you go, my dear; and whatever is done \nby only me is your doing, my darling)\ni fear\nno fate (for you are my fate, my sweet) \ni want\nno world (for beautiful you are my world, my true)\nand it's you are whatever a moon has always meant\nand whatever a sun will always sing is you\n\n\"Um, excuse me, miss?\"\n\nElla jolted out of her romantic musings to look up into the polite smile of a freckled boy. It took her a moment to remember that she was in a bookshop and understand the young man was one of the employees... and that giving her heart to e.e. cummings and fictional characters was the most exquisite heartbreak anyone could (and should not solely) choose for themselves.\n\nA croak came out when she tried to speak, so she cleared her throat. \"Yes?\"\n\nHe seemed a little in awe of her which was ridiculous. More likely he was stumped by the adult sitting on the floor like an unruly child.\n\n\"I just wanted to check if you needed anything,\" he said. \"And let you know that, aside from the little seating areas within the book side, we also have a new coffee area built in at the far end.\"\n\nBefore Ella could voice a defensive response, he added, \"It just looks like you're really enjoying your read and I wanted to make sure you were as comfortable and happy as possible.\"\n\nHer self-consciousness was replaced by appreciative surprise and Ella smiled. \"Thank you. I... yes. Thank you.\"\n\nHe watched her a moment longer, a moment too long actually. Then came to his senses and with a quick nod left her. Ella resumed back to her poem:\n\nhere is the deepest secret nobody knows \n(here is the root of the root and the bud of the bud\nand the sky of the sky of a tree called life; which grows \nhigher than soul can hope or mind can hide)\nand this is the wonder that's keeping the stars apart<br> <br> i carry your heart (i carry it in my heart)\n\nElla closed the book with a sigh. There had to be someone like that out there \u2013 somewhere \u2013 for her as well. Or else what is all the rest worth?\n\n\"Now turn to page 44,\" a deep voice instructed softly.\n\n<center>***</center>\n\nIt turned out the ice cream parlour was on the level above.\n\nRylan joined the long line reluctantly, suddenly significantly less keen to have any. This queue would undoubtedly take a good twenty minutes to get through \u2013 which would mean he'd then have little time left before needing to head back to meet Diane. And he still hadn't made any of his calls.\n\nIn the time he vacillated, a petite woman walked by with a huge bouquet of lilies. The scent alone began reawakening his waning erection.\n\n\nThis is ridiculous. I haven't responded to anyone like this in...\n\n\"Excuse me, are you in this line?\"\n\nHe didn't even look at the speaker. \"No, I'm not.\"\n\nHe was on his way back to the elevators before he could question his impulsive decision.\n\nAs the lift began its descent, Rylan turned to the back wall and squeezed his cock. How was it even possible for some girl no one else noticed to possess him as she has? Was this some sort of previously unrecognised fetish? A sudden lust for Black women? Or maybe it was her age or completely different style and air that enchanted him.\n\n\n\nEnchanted? He scoffed at his own word.\n\n\n\nYou're not \"enchanted\" \u2013 you're just bored with your life and a little unsatisfied with how... proper... Di is in the bedroom. That's it. You're horny and uninspired \u2013 feng shui some shit and fuck someone. Di \u2013 fuck Di. Quit the suburban bliss act and start showing her more of yourself \u2013 start fucking her the way you're craving to do. Hell, she just might love it as much as the others have. And it'll kill this fascination or whatever it is you have with \u2013 \n\nThe ping of the elevator door silenced his inner lech.\n\nAs he stood outside the bookstore, Rylan spent some time watching the women walking by. He looked at all sorts: sophisticated businesswomen, slender girls in short skirts, Black, White, Asian... Nothing, he felt nothing.\n\n\n\nWhat the hell?\n\nHis phone rang then. His heart dropped just a little when he say Diane's picture on the screen \u2013 and not just because it still irritated him that she had set up a profile with her picture on his contacts list.\n\n\"Hey.\"\n\n\"Hi, darling, just checking how you're doing.\"\n\nHe scowled. \"We saw each other half an hour ago and I haven't left the centre \u2013 what is there to check?\"\n\nShe gave her throaty laugh; the one that usually made him feel sympathetic towards her because of how practised it sounded. \"Don't be such a grouch. I just missed you, Ry. We're still meeting on the plaza in an hour, right?\"\n\n\"Yep.\" He hung up before she could make a \"Ry and Di\" comment \u2013 another peeve.\n\nThe bookstore window provided a reflection as clear as a mirror's. His suit, like all his suits, was specially tailored. He ran three times a week \u2013 more when stressed \u2013 and had a small gym at home. Partly because good health was important to him; but also because he liked entering a room and looking his best. He knew he owned most boardrooms he entered before even saying a word because people took in his height, powerful form and unwavering grey gaze and felt he had a presence compelling enough to make them want to hear what he had to say. And either obey or agree to it. Much like the women whose bedrooms he entered.\n\nBut what did any of that mean to a twenty-year-old who couldn't be bothered with the crowd's latest hype and who cursed before entering bookstores?\n\n\n\nOnly one way to find out, old man.\n\nHe stared at the entrance then glanced at his watch.\n\n\"Fuck it.\" \n\nHe entered.\n\nHe did a quick walk around then told himself he was happy that he couldn't find her. She'd obviously left. And that was good.\n\nRight?\n\n\"Since when are you this inept, Kade? And over a girl in glasses and nothing you usually go for. Get outta here.\"\n\nAnd then he saw her.\n\nShe'd wandered into the poetry section and looked so content he couldn't help but approach her. She disappeared from sight when she bent over; and when he got to her aisle, he was greeted by the sight of her lush behind stretching her pants out to accommodate her new position.\n\nThat heat returned. Right in his cock this time.\n\nWhen she bent lower still, he almost groaned. How the hell was he meant to resist grabbing a hold of her, pulling her pants down and simply slamming his entire engorged length into her heat?\n\nShe pulled a book from one of the lower shelves and sat down. Again the elegance as she lifted the soft thickness of her hair off her neck with one hand while paging through the book with the other. Her movements were unrushed and genuine.\n\nRylan roughly ran his fingers through his hair. In the next instant he succumbed to her pull and stepped a little closer.\n\nIt was while he was formulating his first words to her that the red-headed kid approached.\n\nThe first thing Rylan noticed was the boy's enraptured expression. The next were his own clenched hands and bunched up shoulders. Gods, when was the last time he even had the urge to pulverise another man? Let alone a boy... over a girl he didn't know and who most likely wouldn't want to know him?\n\nHe watched them speak and then her smile as she thanked him shyly. Something dark bubbled inside him.\n\nAfter the boy left Rylan's eyes traced the line of the girl's spine as he told himself to turn around and leave. His heart betrayed him and his mind went wild. Vivid images of them naked together flashed before him. The dip at the small of her back, the scent of lilies as she moaned his name, the taste of her... \n\nHe didn't notice his feet moving until he was right behind her.\n\nShe was reading e.e. cummings, softly mouthing one of his favourite poems to herself. Lilies reached him first. Then the lemons followed by mint.\n\nWhen she finished the poem, the silence that followed was torment.\n\nAs with her scent, the husky warmth of her voice was intoxicating. He needed to hear more.",
        "\"Turn to page 44.\"\n\n<center>***</center>\n\nIt was the man with the captivating hands.\n\nElla gaped up at him for far too long before snapping her lips shut. Poetry was such a gift to her, exquisite and sacred, that she didn't know how to share it with this man. An utter stranger.\n\nUp close she pegged him as a natural, pampered northerner: that suit had to have been expensive and those hands were too perfect. What in heaven's name did he do with them? Uninvited images promptly filled her mind: the contrast of his faint tan against her chocolate skin; his fingers pinching her dark nipples; his hard \u2013 \n\n\"Hi,\" he smiled.\n\nThere was something almost arrogant in the curve of his lips and a commanding glint in his grey eyes that made her realise how stupid she must look. She was bemused by the predator he clearly was. No matter how much she willed herself to be 'normal', she simply couldn't think of anything to say to him. Oh, how she longed for Cassie's poise and confidence right then!\n\nHer eyes lowered to the book in her hands.\n\n\"Page 44,\" he repeated. \"I'm a massive cummings fan and have this specific book.\"\n\n\"I don't know you.\" Way to go, Einstein.\n\n\"I'd like to know you.\"\n\nShe lifted an eyebrow at his reply. Was this how it was done nowadays? Did sexy white men with black hair and grey \u2013 were there flecks of blue in there? \u2013 eyes just memorise entire volumes of poetry then walk up to gauche misfits and win their hearts with romantic intelligence?\n\nElla pressed the book to her chest. Partly to still the thud of her heart, but also because she felt her nipples tighten and didn't want him to see them.\n\n\"I'm sorry for bothering you, but I just had to say hello. My name's Rylan Kade.\"\n\nHer big brown eyes held his for a heartbeat longer then flicked to his outstretched hand. She watched hers rise to meet his and the sparks that crackled between their palms made her thighs spasm slightly. She wished her legs were together so she could squeeze to ease the lava rising in her core. How witless and embarrassing to be turned on by a stranger who wanted only to share a love of poetry. \n\n\"I'm Ella.\"\n\nShe hadn't let go yet, but noted with some comfort that neither had he. Their contrasting skin tones made something tingle along the back of her neck.\n\n\"So, you're a romantic, Ella?\"\n\nHe phrased it like a question but she didn't feel that it was one. \n\nHe didn't wait for her to answer. \"I am. Probably not your conventional sort, though... but I do love to bring a beautiful woman flowers and woo her with poetry perfectly suited to her... after spanking her 'til my name is all she speaks and making love to her 'til she can't stand up straight.\"\n\nElla pulled her hand free. \"Excuse me?\"\n\n\"That came out too... raw.\" His eyes were unapologetic, though. \"I meant no offense \u2013 I did, however, mean every word.\"\n\nShe would have practise caution around this man who held no interest in hiding the dangerous glimmer in his eyes.\n\n\"Then you should probably find yourself some girl, a brat in need of some spanking.\"\n\nHe grinned, unfazed. \"I prefer women. I find a woman who knows herself \u2013 as you do \u2013 irresistible.\n\n\"You don't know me.\" She snapped the book shut and rose to her feet.\n\nShe'd always considered herself quite tall, but standing before Rylan Kade still made her feel delicate. If she rose onto her toes... and he bowed his head her way just right... she'd be able to meet his lips with hers. Just. His shoulders were broad and his chest clearly defined within his designer shirt. His blue-flecked diamond eyes invited her to come closer and nuzzle into that chest.\n\nWhat the hell was going on?\n\n\"There is lot about you I don't know,\" he conceded, \"but I saw enough outside the store to know you intrigue me.\"\n\n\"So, this is a game of yours? Picking up women in Sandton?\"\n\nThe blue in his eyes lightened. \"Never actually.\"\n\nShe didn't know how, but she believed him. He wouldn't need to do this, chase random women in bookstores. So, was his focus on her, his interest, true as well? \n\nThere was something urgent in him calling out to her. When he took a step forward, so did she. Her breath stilled the instant his scent wrapped around her. He smelled so good the need to taste him hummed through her.\n\nThey weren't touching yet Ella felt like she'd never experienced a connection like this before. \n\nRylan's head lowered further and more than anything she wanted him to kiss her. She wanted what she felt to be real, to unfold and grow. Wanted his hands to grip her hips and for him to slam into her, turn her inside-out and make her scream. All the things she wanted from this man with his piercing eyes rushed through her... her desires frightened her.\n\nShe had far too much to lose to a man like this.\n\n\"Look, I don't know what the heck you think this is, Rylan,\" Her whisper was hoarse, but she forced the words out anyway, \"but I'm not keen on being picked up by a fetish-crazed wolf in a in a posh suit.\"\n\nShe delivered the line with adequate decorum then turned and left him standing there.\n\n<center>***</center>\n\nRylan followed her without a second thought.\n\nElla. Her name encompassed a vulnerable and sensuality that suited her. He didn't really know what he was doing or what he was after. He just knew that there was a fire in his chest and a hunger in his groin that were driving him insane. Whatever those half-understood questions were that were shooting through him, the answer was Ella.\n\nShe moved swiftly, but with a hypnotic sway to her hips that made him realise all women should be her understudies.\n\nWhere the bookstore ended, the chatter-filled coffee corner began. Most patrons sat at tables showing each other their literary finds. Unoccupied double-seater leather couches were set up near the far wall, facing different directions and interspersed with side tables and magazine racks. The smell of roasted beans tripped and tumbled over the deeper hunger that had him watching the young lady with the luxuriant hair. \n\nShe wove a path between the tall tables and stools then proceeded to a couch removed from the rest of the crowd. It was far enough for no one to see her unless someone was specifically looking for her.\n\nRylan watched her sit down, slip a pump off and tuck that foot beneath her.\n\nWhy the fuck was even that such a turn-on?\n\nHe'd been around women who wore skimpy outfits and bought attention with their flesh. Women who figured out what the men they desired preferred to hear; then hid their strengths, giggled and said only that. Hell, he'd even had a few employees greet him varying in states of nudity in his office.\n\nDiane wasn't like any of those. He truly believed Diane to be an intelligent and self-sufficient woman. It's just that she lost most of that around him. She didn't flaunt herself, but then again she didn't trust who she was enough to know that that was enough either.\n\nElla was the opposite. She didn't know how to be anything but herself, even when convinced she didn't fit in. Something in that boy had recognised the same and Rylan didn't like that. The thought of how many men must fall in love with her each day made his jaw clench.\n\nHow long before she fell for one of them?\n\nHe most likely wasn't what she wanted... but he couldn't just walk away either, not from a beauty who slipped a shoe off to sit like that... and filled him while having completely forgotten about him already.\n\nThe boy again.\n\nThere were two employees in the coffee corner, taking orders and serving hot brews. This kid must've been purposely watching out for Ella so he could leave the books and be the one to serve her. Rylan glare narrowed in on him.\n\nElla looked up from her book and smiled at him. Again.\n\nRylan rolled his shoulders. What was this \u2013 jealousy? Couldn't be.\n\nHe didn't know her and wouldn't be seeing her again after today. And she was closer in age to the boy anyway; they'd have more in common. Like being single \u2013 which he wasn't.\n\nHe ran a hand down his face then ruffled his hair. But didn't leave.\n\nElla's laugh spurred him into action. He approached the two of them smoothly. Ella was facing away from him and didn't register him nearing, but the kid did and his shy smile diminished a little. \n\nRylan sat down right behind Ella, his leg just barely brushing against the curve of her derriere. She turned and recognised him with more surprise and less joy than he would have liked. Then something else entered her gaze, something that made him wish they were alone. What he wouldn't give to see that heat in her eyes with her lying naked in his white sheets with her hair all over the place.\n\nHe pulled back fractionally. What? You keep women out of your bed, that's your thing. Since when do you fantasise about one you know nothing about waking up in it... and looking at you like that? \n\n\n\nOnly you.\n\n\"Rylan.\"\n\nFor a second time he noted that she'd gotten his name right. And that her huskiness made him want to make her say it like that again and again.\n\n\"Ella,\" he drew back a smidge more and smiled. \"Can I buy you something to drink?\"\n\nHe was pretty sure she was unaware of leaning a fraction closer each time he drew back. He'd come on far too strongly earlier and didn't want to mess this \u2013 whatever this intoxication was \u2013 up. He wanted her to want him as much as he did her; he wanted her to come to him willingly, as hot for him as he was for her.\n\nShe took her time weighing up her decision, more self-assured now than at their initial meeting.\n\nThen she turned back to the freckled boy. \"I'll have a chai tea, thanks.\"\n\n\"Just an espresso for me, no sugar.\" He didn't look up as he said it.\n\nElla gazed back over her shoulder at Rylan. Her shoulder was lifted slightly, her lips nearly touching it. Something playful and curious danced in her eyes framed by her severely rectangular glasses and the soft mass of rich, black hair. He could get over the flow of her lines.\n\nHe reached out and slowly grabbed a handful of hair, lifting it to reveal her delicate neck again then dropping it. Her exhalation was long and heavy.\n\n\"What are you doing here?\" she asked.\n\n\"I work nearby.\"\n\n\"You know what I mean.\"\n\nHe liked that she could put him on the spot like that, challenge him. Fuck knew how he was supposed to answer that, but he did like her directness.\n\n\"I don't know. I just saw you and wanted to be near you.\"\n\nShe laughed. \"Yeah, right.\"\n\n\"What's that supposed to mean?\"\n\nHer laugh was as beautiful as the rest of her, but it was marred by the cynicism in her eyes.\n\n\"This is no romantic comedy, Rylan,\" her tone was reasonable and composed. \"And even if it were, I'm not exactly the sort of woman who gets the lead role.\"\n\nHe put his hand on her bare foot that peeked out at him. Her skin was so warm and smooth. Again the drawn out exhalation as she eased into the backrest.\n\nWith the flat of his palm resting along the bridge of her foot, he rubbed in miniscule circles. She bit her lip and dropped her gaze. Rylan leaned in and lifted her hair again. Behind him, the rest of the coffee shop was unaware of his raging hard on fighting to break free and his intense desire to lick the full lip Ella was biting.\n\nHe ran his thumb over her ankle and, with his touch, told her all the things he desperately wanted to do to her. With her.\n\nHe leaned closer still until his lips were right by her ear. \"So, have you read page 44 yet?\"\n\nThe line of her neck. The dip of her jaw. The way the softness of her temple called for a kiss. He couldn't understand why she'd laughed at being considered any man's leading lady. She was that to him - already. Fuck. She was also all he'd never even known he needed in an erotic fantasy \u2013 and so much more.\n\nHe was starting to worry about how much more.\n\n\"I'd just started the poem a few minutes ago.\" She had her finger holding a place in the book she'd brought with her.\n\n\"Then let's finish it... together.\"\n\n<center>***</center>\n\nCalling that tall man a fetish-crazed stranger had been a little disingenuous. Ella knew it but would probably never admit that.\n\nShe'd never had a man speak to her like that before, painting such raw images in her mind. Without even knowing her. How could he claim to want her like that when he clearly had eyes, could see what she looked like? And didn't look like... More than that, what was this effect he had on her? His voice alone, deep and smooth, had been enough to send waves of yearning rolling through her.\n\nOn the couch in the coffee corner, she'd snuggled into the leather... and then turned to page 44.\n\nmay i feel said he\n(i'll squeal said she\njust once said he)\nit's fun said she\n\n(may i touch said he\nhow much said she\na lot said he)\nwhy not said she\n\n(let's go said he\nnot too far said she\nwhat's too far said he\nwhere you are said she)\n\nmay i stay said he\n(which way said she\nlike this said he\nif you kiss said she<br> <br> <br> \n\n\"Would you like a coffee or something?\"\n\nElla gasped at the interruption.\n\nThe poem... She snapped the book shut guiltily and looked up at the boy from before. Her thighs squeezed together as she tried to remember what he had said.\n\n\"Uh... pardon?\"\n\nHe smiled into her gaze. \"You came over to the coffee shop \u2013 I thought you might like something to drink.\"\n\nShe laughed. \"Yeah, I guess that's logical.\"\n\n\"I'll get you a menu then.\"\n\n\"Oh, you don't have to do that,\" she shook her head. \"Just tell me what's popular.\"\n\n\"Okay, well, our cappuccino range is very popular. So, are the spicy and herbal teas like...\"\n\nShe noticed his gaze jump from her to something behind her but she just figured something in the busy book area had distracted him. Then his smile faded and she wondered at that \u2013 until she felt the couch dip behind her and a masculine scent teased her senses.\n\nShe peeked over her shoulder knowing very well whom she would find. \"Rylan.\"\n\nOrdering her tea and laughing at his flirtation \u2013 was it flirtation? \u2013 was harder than she made it look. Men didn't usually come on this strongly around her. Especially men who looked like this. She was suspicious of his motives and didn't hide her scepticism.\n\nWhen he touched her Ella knew she was lost. He couldn't keep getting close like that, making her melt so effortlessly, without her breaking soon.\n\nWhen he leaned in and whispered in her ear, Ella decided she was done cowering and running. An attractive man was (most certainly now) flirting with her. His reasons for doing so were irrelevant. The ruling inevitabilities were that nothing would happen in a crowded bookshop; and that they would never see each again.\n\nSo, why not have fun and bask in her soul-deep fervour?\n\n\"I'd just started the poem a few minutes ago,\" she told him.\n\nHis palm brushed up the length of her thigh; she felt her muscles loosen. Then, at the crook of her elbow which rested at her hip, he changed direction and ran it down the slope of her forearm until it met both of hers on her book.\n\n\"Then let's finish it... together.\"\n\nShe held his searing gaze for an extra heartbeat before opening the book. The words danced before her, sensuous and now dizzying. She couldn't be sure she understood what she was reading.\n\n\"Out loud, beautiful.\" His lips were at her ear again, his chest solid and strong behind her.\n\nElla cleared her throat.\n\n\n\"may i stay said he\n(which way said she\nlike this said he\nif you kiss said she\"\n\nRylan's lips touched her then. He'd lifted her hair again and, as she read, put his lips to the milk chocolate softness just behind her ear. Ella's voice shook slightly.\n\n\"may i move said he\nis it love said she)\nif you're willing said he...\"\n\nHis hand moved to her knee and she gasped, turning her face to his instinctively. Her ragged breaths landed on his lips as he moved his hand higher, suavely tucking it into the heat between her thighs. Squeezing, stimulating more wetness without yet having touched her there.\n\n\"Read,\" his order cut through her sweet gasps.\n\nWhen she turned back to her book, he returned his lips to her skin. Her neck this time.\n\n\n\n\"(but you're killing said she...\"\n\nThat was all she managed before her next moan was drawn out. His hand was at the top of her thigh, his breath hot on her neck.\n\n\n\n\"but it's life said he,\" he quoted without looking at the pages.\n\nHe was teasing her, squeezing and rubbing her thighs but avoiding her helplessly engorged clit.\n\n\"Read,\" he insisted; this time with a bite.\n\nA small cry escaped her, flung his way when she reflexively turned to him again. She quickly faced the shimmering pages again.\n\n\n\n\"but your wife said she\nnow said he)\"\n\nHis teeth again. Oh, heavens...\n\n\n\n\"ow said she\n\n(tiptop said he\ndon't stop said she\"\n\nHer voice, like her mind, was no longer hers. The words flowed and toppled, often interrupted by her need to breathe.\n\n\"oh no said he\ngo slow said she\n\n(cccome said he\nummm said she\"\n\nHis hand finally touched her. He cupped her hot sex, pressed into her, rubbed two firm fingers along the sides of her clit. Ella bit her lip right on her next cry. There is no way she could manage the last lines.\n\n\n\n\"you're divine! said he,\" Rylan's deep timbre coaxed her on.\n\nHer head fell back, her neck vulnerable and exposed. She rested against his chest, her eyes closed now. He watched her heartbeat pulsing away near the top of her throat; then looked down at the swell of her breasts inside her wrapped top.\n\nElla's lips were millimetres from his as she whispered the last line. \"(you are Mine said she)\"\n\n<center>***</center>\n\nHe had to have her.\n\n\"Give me your number.\"\n\nThe shake of her head was barely noticeable. \"No.\"\n\nHis hand tightened on her again. \"Why not?\"\n\n\"I told you,\" her gaze met his from beneath heavy lids. \"None of this is real.\"\n\nHe crushed his lips to hers then, the fullness and the sweet taste of her making him groan.\n\nHe was hungry for her, but he was also angry. It frustrated him that she laughed at herself and believed so strongly that they stood no chance. Or was her amusement directed at his efforts? Did she want nothing to do with him past this encounter?\n\nHe poured his fire and need into the kiss, made her feel what he wanted the whole tower to know. That no man could want her as much as he did right then. His fingers tightened in her hair as their tongues met; his other hand rubbing her faster.\n\nMore than anything, he was mad at himself for needing her like this and not knowing how to stop his feelings. It pissed him off that he so strongly craved someone who laughed at the idea of them having anything together, despite the way he had her melting in his arms. That no one else he'd ever been with could compare to her.\n\nThis had to mean something to her as well. It had to.\n\nShe gasped again, turning more towards him and lifting a hand to his shadowed jaw. Her legs spread a little further apart, her hips gyrating to his rhythm. Rylan moved when she moved, shifting to keep her shielded from the rest of the shop behind him. She was all his and he couldn't stand the thought of anyone seeing her like this. Not this side of her that was just for him.\n\n\"One chai tea and one espress\u2013 oh, shit. Er...\"\n\nElla pulled back with a look of horror, her fists bunched on Rylan's shirt. He removed his hand from between her legs and pulled her to him, protectively tucking her face to his chest.\n\nThe red-haired boy, of course. The only person with any reason to come to this far corner of the coffee shop. Rylan wanted to grab him by his shirt and throw him back in the busier part of the coffee shop \u2013 or into his next lifetime. He held himself in check, though, watching the kid's hands tremble as he placed their order on the low coffee table before them.",
        "Then he made the mistake of trying to stutter something polite.\n\n\"Just go,\" Rylan barked.\n\nHe immediately stumbled off.\n\nElla freed herself from his embrace and moved all the way to the opposite end of the couch. Facing him. And he didn't like what he was seeing.\n\n\"I have to go as well.\"\n\nHe shook his head. \"No. Don't do this.\"\n\nHer shock was fading, but her embarrassment and resolve weren't. \"I shouldn't have done any of this, Rylan. Let's just quit now while we're still ahead \u2013 sort of.\"\n\n\"Ella, please,\" he'd never had much practice at pleading and felt he was doing it wrong. \"Just stay a little longer and talk to me. Have your tea.\"\n\n\"Thank you for the tea, but I can't.\" She was already standing up as she spoke. \n\nHer bag was at her feet. She picked it up then hesitated a moment, looking at the book in her hands. Shoulders straightening, she put the book on the table, hooked her bag on her arm and looked down at him.\n\nShe wanted to say more, he could see it. But she didn't.\n\nShe simply left.\n\n\n\nLet her go. Let her go.\n\nRylan sat back and stretched his arms along the back of the couch. With an ankle crossed over the other knee, he cursed himself even as his eyes stayed on Ella. He still ached for her.\n\nShe still looked flustered \u2013 and upset. She passed the remaining couches then wound a path between the occupied tables in the other half. Instead of heading through the bookstore and straight to the exit, she was at the coffee counter.\n\nAfter a word with the barista, she shook her head. Followed by another more vehement shake. The blonde girl seemed concerned; and after a long sympathetic look, pointed to a corner just beyond the end of the long coffee counter. There were tall potted plants in that corner and he couldn't figure out what the barista was pointing at.\n\n\n\nLet her go.\n\nRylan picked up his espresso and took a sip.\n\nElla squeezed the other girl's hand then headed off to the corner. Once there she circled around the tall plants and disappeared into what had to have been a concealed corridor.\n\n\n\nLet her go.\n\nWhen he felt fit to walk, he beckoned for the bill.\n\nOn his way out, his eyes drifted to the poetry section.\n\n\"Damn it...\"\n\n<center>***</center>\n\nWhat was happening to her?\n\nElla had never been with any man before who could make her feel like lava flowed through her veins. No one had ever gotten her that wet or that wanton before. In a public shop, for crying out loud!\n\nHer hands shook as she approached the girl behind the counter.\n\n\"Where are the restrooms?\"\n\n\"We don't have any for the customers, I'm afraid.\" The blonde girl replied. \"You'll have to go out the bookshop doors and use the bathrooms around the corner from the elevators.\"\n\nElla's lip quivered.\n\n\"Are you all right, miss?\"\n\nElla tried to nod, but the concern in the girl's eyes made her shake her head instead.\n\n\"I'll be fine,\" she answered. \"I just need to freshen up a bit.\"\n\nAfter a long look, the girl had a suggestion. \"Look, we have a staff restroom in the back. You could \u2013\"\n\nElla shook her head again. \"No. I wouldn't want to get you into any trouble.\"\n\n\"You won't,\" the girl smiled. \"Don't take this the wrong way, but you really look like you need a time-out. I'll explain to anyone who kicks up a fuss \u2013 just go. It's right at the back, at the end of a corridor that you'll see behind those plants over there.\"\n\nElla was more grateful than she knew how to express.\n\nAs she hurried along the corridor, a stray tear fell and she knew there was no way she would have made it all the way to the public bathrooms in one piece. She had started her whole morning wrong and needed to recoup.\n\nAt the end of the corridor was a door that opened onto a large room. The front portion had a couch, a few chairs and a table in it \u2013 most likely a breakroom for the staff. Beyond that were many rows of oversized metal shelves, all stacked with massive boxes and piles of books.\n\nElla passed them and found another door with a sign indicating two bathrooms.\n\nA splash of water cured her tears. She watched her reflection as she dried off and straightened her hair. The heat between her legs still throbbed on; she could still feel his touch, taste him...\n\nWhat had started out as her thinking she could handle a casual fling, was now backfiring catastrophically. She had lost her mind back there \u2013 and now couldn't shake her need for Rylan.\n\nMadness.\n\n\"You are a very, very silly woman,\" she huffed. \"Stop this now.\"\n\nWith no real desire to refresh even the bare minimum of makeup she'd been wearing, she tugged at her clothes neatly into place then decided to leave. She'd wait for Cassie in her car if she had to. A dark, quiet basement was actually sounding rather inviting now. \n\nShe felt notably better by the time she stepped out.\n\nRylan Kade.\n\nHe was in the couch area, waiting for her.\n\n\"What are you doing here?\"\n\nHis light gaze swept over her body, making her shiver. \"I wanted to give you this. I bought it for you.\"\n\nHe held up a small leather-bound book similar to the one she'd been reading. This one was burgundy, though.\n\n\"I don't want it.\"\n\nHis hand lowered, his eyes challenging. \"Just like you don't want me, huh?\"\n\nElla opted for frustrated candidness. \"Why do you say that? What could I possibly not want about you?\"\n\nHis stare gentled slightly. \"Then what are we doing? If you're not uncomfortable with our age difference, what else has you so spooked?\"\n\n\"That was the last of my worries,\" she sighed wryly. \"There are many more differences between us than our age, Rylan.\"\n\n\"So, it's the race thing then? You don't like white men?\"\n\nThat made her laugh, a real albeit short laugh. \"How can you even ask me that after...? I think it's safe to say that, at the very least, you're one white man I like far too much. No, this isn't about racial differences. I go with my feelings most times.\"\n\nHe took a step closer. \"Except with me. Why is that?\"\n\n\"What exactly did you mean about our age difference?\" Her brow furrowed. \"Why would, what, a six or seven year difference bother me?\"\n\n\"It shouldn't, if seven years were accurate.\" He stopped before her. \"I imagine you're far closer to that freckled fop in age than you are to me.\"\n\nShe laughed again. \"'Fop', huh? Now I am wondering how old you are. You look...\"\n\nHe placed a large hand on her hip. There was his scent again. The curve of his sensual lips and the allure of his stubble.\n\nHints of amusement lit his eyes. \"I look...?\"\n\nShe ignored her warming cheeks. \"Uh, thirty-ish... thirty-five maybe? That puts me closer to you than that guy.\"\n\n\"So, you're not twenty?\"\n\nAnother laugh from her, her eyes wide. \"I haven't been for some time \u2013 I'm twenty-eight. And he looked... twelve.\"\n\nThat got him; and the sound of his chuckle pleased her. Whenever he touched her, she instantly slipped into a private little universe with him.\n\n\"And I'm forty.\"\n\nHer head tilted back at that. \"Really?\"\n\n\"Uh huh.\" His fingers slipped beneath the edge of her top. \"And you're avoiding my question: why are you fighting this so hard?\"\n\nShe sucked a breath in. \"It's complicated. I'm complicated.\"\n\nHis head lowered. \"Aren't we all? I'm far from perfect or uncomplicated, beautiful.\"\n\n\"All the more reason to walk away from each other then.\"\n\n\"Except I don't want to,\" he growled. \"I can't.\"\n\nMore than anything else, Ella was moved by what that admission must have cost him.\n\nHis lips found hers and again she lost herself.\n\nHer tongue eagerly met his, but her hands were less sure. She lifted seeking palms as he pulled her to him, but didn't know where to put them.\n\nHe broke their kiss. \"Touch me.\"\n\nThe vibrations of his forceful command made her stomach tighten. She slipped her hands beneath his jacket and smooth them along his white shirt. A muscle twitched in his jaw, a reaction she would have missed if she hadn't been watching him as he watched her.\n\nHis back was so firm, muscles bunched along his sides and abs as her hands trailed over them. His chest hard. He was in fantastic shape and he knew it. His grip on her hips tightened as she unbutton his shirt.\n\nSkin. \n\nElla lowered her gaze to his chest. Her fingertips roamed up well-defined abs and then she skimmed her palms along his pecs. He had hair on his chest, dark against his light tan and a faint trail below his belly button. Ella swallowed reflexively.\n\nWhen she looked up again, she saw the flecks of blue darkening within his grey eyes.\n\nHe grabbed her and lifted her, his hands gripping her firmly beneath her thighs as he walked her towards the nearest wall and pushed her up against it. Her arms clung to his neck, her head dropping back.\n\n\"I wanted to do this at your pace, bella, make it good for you,\" he groaned into her neck, \"but I just can't. Need you now.\"\n\nAnd then he bit her.\n\nA breathless scream stuttered out of her and her own need rose to meet his. She pushed his jacket and shirt off. His tongue met hers again, a growl of approval rising from him as her swollen lips clung to his. He pressed up against her, her breasts squashed between them and her heart tripped as she felt his erection. It was big and brutal, rubbing against her, enticing her hips into thrusting back as her panties got wetter.\n\n\"I need you... too.\" She couldn't believe she'd managed the words.\n\nRylan's response to her confession was harder thrusts, a more insistent rhythm. She knew he could feel her swollen pussy through the thin materials separating them. She knew when his fingers tightened on her thighs, opening her even more to him.\n\nShe leaned back even further, her shoulderblades meeting the wall. He immediately took a nipple in his mouth, sucking hard. Her groan was guttural. One hand went up and her palm braced itself against a high shelf above them, the leverage gained allowing her to push her pelvis closer to him. \n\nShe felt like a dancer in his arms, gyrating for his blazing blue-grey eyes.\n\nRylan wrapped muscular arms around her and turned with her to the table behind him. He pushed her bag aside and gently eased her onto the cool surface. She loved the contrast, loved that his breathing was ragged and his mouth was devouring her breasts yet he still took such care of her. He honoured something precious in her.\n\nElla lay back, pulling him on top of her.\n\nOne of her legs was hooked over his slim hip, resting on his arse; the other cast wide, inviting him in. He resisted long enough to pull her pants off then came to rest between her thighs. He grabbed a breast again, drawing her aching nipple into his hot mouth. Her hips bucked.\n\nOne hand gripped the edge of the table above her head, seeking an anchor in their storm of lava and meteors. The other had a grip on his hair that had to be hurting him as she pulled him closer to her, feeding herself to him.\n\nHis hand was on her pussy again, massaging her through the silky material. She was almost self-conscious about how wet she was, but he wasn't giving her much chance to shrink away from what she'd become. His fingers were soaked and she parted so eagerly for him, knowing this only seemed to drive him crazier.\n\nSuddenly his hand grabbed one of hers and drew it down to his overwhelming hardness. \"Open it. Take me out. Look at what you do to me, bella.\"\n\nElla moaned. With her fingers wrapped around him, rubbing along the length of him, she suddenly ached for him in a way that had her glad he had pursued her until he got his way. She wanted him so badly. Needed him to fill the burning void in her.\n\n\"Fuck, I need you...\"\n\n\"You have me, bella. Whatever you want, take it.\"\n\nShe tugged at his belt and undid his pants.\n\nHis fingers had slipped beneath her silk underwear already. \"Ugh, Ella...\"\n\nThe way he said it made it something between a grunt and a curse. She marvelled at the intensity he shared with her. He circled her clit with the tip of his middle finger, taking dark pleasure in the way her body jerked. Her wetness flowed hotly into the crevice between her buttocks. The first finger entered her smoothly.\n\n\"Fuck...\" His forehead touched the valley between her breasts as his snarl invoked goosebumps all along her navel. \"Fuck, baby...\"\n\nHer back arched. \"Rylan, please...\"\n\nHer phone rang. \n\nFor a moment Ella had no idea what was happening. The vibrations on the table drew her attention to the little black rectangle as it shifted along the surface in rhythm with the tune.\n\nRylan froze and looked at her, his eyes dark. Her heart hammered at the searing intensity in his eyes and his finger still inside her. She knew what he was thinking and she shook her head. He watched her still.\n\nThere was no way she was retreating now. \n\nElla rose up onto her elbows, spreading her thighs further and reaching down over her panties to press on the back of his hand. \"Leave it. Don't stop.\"\n\nHe kissed her then, a brief and hard consummation. Then he pulled back and watched her as he pushed a second finger into her.\n\nShe cried out his name, barely able to see him properly from behind her tilted glasses and the hair that had fallen forward. The ringing stopped which only served to make her cries sound louder.\n\nHe kissed her again, his tongue exploring her as his fingers pushed deeper then began a slow pump that coaxed more wetness from her. She surrendered to his mastery.\n\nElla had only ever been with four men, enough to make her believe no one could ever get her as wet as she did herself. Until now. Not only was Rylan mind-blowingly in tune with her needs, he had her wetter she'd ever been. And losing her hold on sanity on top of that.\n\nHer phone rang again.\n\n<center>***</center>\n\nWhen her phone rang a second time, her breathing deflated a little. Rylan knew what that meant.\n\nElla glanced at her phone then back at him. \"I'm sorry... I'm meant to be meeting a friend.\"\n\nHe narrowed his eyes at her. He wanted to be mad, but she was so breathless and hoarse... \n\n\"She won't stop if I don't answer,\" she explained, her chest still heaving.\n\nShe took off her glasses and tapped the screen before putting the phone to her ear. \"Cass.\"\n\nA female voice chirped at the other end and Rylan let his shoulders relax. Somewhat. Sure, he had a roiling jealousy in his gut that wanted to strike out any men around Ella. It was what it was. And there was nothing quite like the agony of feeling possessive of one who wasn't yours and never would be. He'd never been the insecure type \u2013 but he'd also never been the unwanted before. There was a difference between knowing a woman was yours and you were hers... and knowing you could only want each other just for one day, one inferno.\n\n\"No, it's not a problem.\" Her husk had gotten deeper, rougher. \"Okay, let me know when you... get here.\"\n\nHis cock twitched. \n\nHe travelled a lot for work and could just imagine calling home and hearing that at the other end. Fuck, he'd probably try to drag her with him everywhere he went. There is no way he could call, listen to her come as he told her to touch herself... and then simply hang up and carry on with business. He'd go cra\u2013\n\n\"No, of course I'm fine, Cassie.\"\n\nRylan pushed his fingers deeper as she spoke and her voice hitched on her friend's name. He smiled slightly at that. His eyes hard.\n\nShe was his. And he would be damned if he'd share her with anyone right now.\n\n\"What do you mean I sound funny? Don't be... silly.\"\n\nHe'd slowly extracted his fingers from and reached for the lace flowers along her hips to tug her underwear down. He wondered how many varieties of this look she had. Her clothes hinted at Afro gypsy-like tastes, rich fabrics in creative cuts. So her underwear had been a delicious surprise. One of many.\n\nHe'd didn't think he'd really expected anything in particular. Cute cotton maybe. Or something else, feminine yet comfortable. Thinking of it made him realise she would actually look hot in simple cotton panties, snuggled up in bed with her glasses on, reading poetry. He refused to dwell on the fact that the bed he pictured was his \u2013 yet again.\n\nRegardless, the discovery of sexy silk boy shorts that matched her black bra had unleashed something feral in him. Strips of lace that matched the violet bow on front showed more skin at the hips. It wasn't just the sexiness of the underwear that had him counting down from twenty to keep from coming at the sight of her and the sound of her voice. It was also knowing that this was the sort of sensuality innate to Ella \u2013 wearing something this gorgeous and alluring was as natural to whom she was as the natural hair and ballet pumps.\n\n\"Yes, I'm sure... I still want... lunch. Just come.\"\n\nThe scent of her scorched through him. The lilies and lemons were one thing \u2013 but this... Her pussy... His mouth watered as his world tipped. He put his mouth to her without a second thought; lapped his tongue up the length of her slit then again and again when the taste of her made ecstasy snap at the synapses shooting a need that sparked along the peripheries of his skull and down his spine.\n\nHer free hand pulled at his hair, feebly trying to make him stop. He ignored her and pumped his fingers into her. When he curled them inside her, her back arched.\n\n\"No, no... I can't, not now. I need... to go, Cass.\"\n\nHe pushed her thighs wider apart and latched onto her clit with his mouth. It was so swollen, so sweet as he nudged the tip of his tongue beneath its hood, flicking back and forth.\n\n\"Ugh, shit...\"\n\nHer hand had switched to pulling him closer now, riding his face.\n\n\"Uh uh, no... fine... Bye...\"\n\nElla let her phone drop from her hand, no longer interested in it.\n\nRylan watched her rise up on her elbows again to watch him. He gripped her hips, pulling her forward and he stabbed his tongue into her. Her body locked into the new position, her toes pointing.\n\n\"God, Rylan...!\"\n\nThere. That is what he wanted to hear, his name on her lips like that. Again and again.\n\nHe pushed her thigh higher with one hand, strumming her with the other. Licking her, eating her out like he never wanted to stop. He felt her inner walls tighten on his fingers, rippling and squeezing. Making him want to be inside her, all of him consuming all of her.\n\n\"Rylan, I... Shit, you're going to make me... ahhh...\"\n\n\"Come for me, bella.\"\n\nHe locked his lips onto her and sped up his rhythm. Her hips bucked off the table as she thrust up at him. He reached up and pinched her nipple, twisted it 'til she made bucked again. And then it happened. She cried out his name, pulled at his hair and flowed into his mouth.\n\nHe withdrew his fingers and continued to lick her until her cries subdued into moans.\n\nThen he straightened and kicked off his pants. He took in the tiny sweat beads glistening on her face, her chest, between her breasts and on the soft curve of her belly.\n\nHer large dark eyes held a feline-like satisfaction as she watched him reveal himself to her. Each time she took in his body, now and before, each time she touched him, he knew she liked what she saw. He went crazy every time she bit or licked her full lips \u2013 but he was also proud of having that effect on her.\n\nShe sat up as soon as he was naked.\n\nRylan stepped forward into the heat she emanated and watched as Ella touched her lips to his chest. Her hands came up behind him and he felt her nails gently rake down his back. When they got to his buttocks, she cupped him, straightening up against him until his cock pressed against her swollen pussy lips. She ran her tongue around one nipple, watching it pebble. When he grunted, she bit into the other, extending his next grunt into a groan.\n\nThat would leave a mark.\n\nThe idea of being marked excited him. Regardless of whatever else wasn't real, right now this was: he was hers.",
        "And she his.\n\nHe clamped his teeth onto her neck, bending her back a bit, rubbing himself along her heat. Her legs came up and wrapped around him.\n\n\"Rylan... Rylan...\"\n\nHe couldn't take any of it much longer.\n\nWith his hands on hers, he guided her down to his throbbing erection. Her breath puffed from between her parted lips as she took hold of him, pumping up and down the length of him. He pushed her wild hair back so he could see her face as he entered her.\n\n\"You want this? You want me?\" he watched her eyes darken with each question.\n\nHer fingers tightened around him. \"Yes... I need you, Rylan.\"\n\n\"Then come here.\"\n\nWithout waiting for a response, he tugged her off the table and stood her with her back to his chest. His hands kneaded her shoulders then went down her arms, outlined her waist and ultimately rested on her hips. They fit so well together. He wished there was a mirror so he could see if they looked as good as they did in his head; dark and light, both untamed.\n\nShe was made for him.\n\nShe pushed back at him, teasing his cock, rubbing up and down until he fit snugly into the crack of her arse, wet with her juices. He watched her move, moved with her, pulled at her hips to make her backward thrusts more emphatic.\n\nThen he couldn't anymore.\n\n\"Now.\" It was a command.\n\n\"Yes.\"\n\nHis hands wrenched her top from her \u2013 something ripped \u2013 and he cupped her bare breasts. More than beautiful. He bent her over the table and positioned the tip of his cock at her entrance. She was so fucking wet, there was no other way to \u2013 \n\nHe slammed his full length in. Ella screamed.\n\nRylan gritted his teeth and forced himself to keep still. Her back glistened, the globes of her derriere lush. He stood and took in the light tones of his throbbing penis buried in the dark mocha exquisiteness of her and felt something thud in his chest. He bent forward to get away from the feeling and wrapped his strength around her.\n\n\"Ella, baby, are you okay?\"\n\nShe nodded, making her hair dance.\n\n\"Are you hurt? I'm sorry, did I \u2013?\"\n\nAnd then he felt it \u2013 faint ripples within her, endless ripples: a smaller, longer orgasm avalanching off her previous one.\n\n\"Bella, shit... I need to \u2013\"\n\nHer face turned to his, tears clinging to her thick lashes. \"Fuck me, Rylan. Please just make love to me now.\"\n\nHe pushed further in at her words. His tip grazed her cervix as the rest of him stretched her out.\n\n\"Yes, like that... God, yes...\"\n\nHe pulled all the way out then pushed all the way back in. Her knees buckled and he held up by her hips, slamming her back into him as he thrust into her.\n\n\"Ah, fuck... Harder, baby...!\"\n\nWhich was all he needed to hear. He moved forward with her until she was kneeling on the table, her head low and her thighs wide, and he climbed up behind her. He pumped into her, faster, pushing as deep as he could go.\n\nHer whole body shook as he slammed into her, passion gathering in waves and washing over her, scorching her. He brought a firm hand down sharply on her flawless arse. Ella's body jerked as she cried out something wordless. When he did it again, he thought she might be trying to say his name but just couldn't form words anymore. He smacked each globe again, yanking her back to him by the hips when she lost control of her body.\n\n\"Ah, god... Rylan...\" Her words were back. \"I'm going to come. I, ahh... I want you... come with me. Come inside me...\"\n\nHe pulled out of her then despite weak protests. \n\nWhen he turned her over the sight of her stole his breath again. Her lips were pink and swollen; the hair at her temple sweat-drenched and coiling. Red marks had started appearing along her breasts and hips. His marks. The bruised bite marks on her neck were darker.\n\nHis.\n\nHe could only imagine the marks and welts she'd left on him, but he relished the idea.\n\nHers.\n\nHe entered her forcefully. His.\n\nHe shook his head, trying to dislodge the idea. This was sex. Mind-blowing, soul-melting sex... but still only sex. No matter how good it felt to be on top of her... wrapped in her.\n\nIt would all come to an end.\n\nThat was another thought he shook from his mind, the end \u2013 choosing to drown himself in her kisses and the scent of lilies. Her legs were around his waist, her firm calves over his buttocks, her heels urging him closer, deeper... \n\n\"You want more, bella?\" His lips were over hers, his voice a hushed rumble.\n\n\"Yes...\" She kept her eyes on his even when her eyebrows drew together in excruciating pleasure. \"More, love...\"\n\nThat word undid him. He kissed her, plundered her 'til her eyes closed not wanting her to see what she had done to him with just one word.\n\nThey moved together, danced; urgent and primal. Completing an ancient ritual, sealing a vow between them.\n\nWhen Ella's nails scored his back harder than before, Rylan roared. He lost it.\n\n\"Come with me, Ella.\"\n\nHe wasn't sure if he'd actually said any of that. It felt more as if the plea erupted within him and she must have just felt it.\n\nThe arch of her back sharpened as he held her to him. One hand reached out blindly above her, the other pulling at his hair, making his scalp burn. And the tightness. Ah, fuck, the unbearable blaze of her that tautened around him as her most ferocious orgasm took over.\n\n\"Ella...!\"\n\nIt was all he could manage before all that he was exploded into her. It was like his entire body pulsated his orgasm out of him as he roared her name. His hips, with a life of their own, rolled and pumped and pushed his very soul into her. And she moved with him, murmuring and kissing.\n\nWith his eyes closed he could see her there. Always. Understanding him and his needs; saying what he needed to hear, whether he wanted to hear it or not. He could see her kissing him in the dark. He could picture them together.\n\nRylan snapped his eyes open.\n\nElla was looking up at him, a mystical smile on her lips.\n\n\"What?\" He couldn't help easing into her contentment.\n\n\"Whatever you're thinking, stop it,\" she replied.\n\nHe looked down at the rest of her. \"Why?\"\n\n\"Because we just made love in a way I never have before. I'm not very experienced, but I do know that what we just shared... it just doesn't happen. Not like this.\"\n\nHis eyes were serious as they met hers. \"Well, I am experienced \u2013 and there was a time when I really thought I understood sex and why I was having so much of it. That changed many years ago \u2013 but it's only today that I think I truly get why two people would do this.\"\n\n\"Good.\" She kissed him. \"Now hush and let me recover.\"\n\nHe chuckled and buried his fingers in her hair, just holding her to him, as his cock subsided within her.\n\nUntil someone yanked at the door handle.\n\nElla's entire form stiffened immediately beneath Rylan. But the intruder was thwarted: it was locked.\n\nHer eyes were still panicked, though.\n\n\"It's okay,\" he told her as he stood up, pulling his pants on. \"Get dressed and don't worry. I'll deal with this.\"\n\n\"But we weren't even supposed to be here in the first place.\" She was sitting up straight, a hand to her mouth. \"It'll be so much worse that they find us like this.\"\n\nHe figured this would be the wrong moment to tell her he'd never seen a woman so stunning.\n\nHer breasts hung heavy and her hips were a sinful curve away from a waist that constantly invited his arms to hold her. Her hair was a mess and parts of her bruised. As she spoke all he noted was how swollen and sweet her lips looked.\n\nThere was a knock at the door and a muffled voice. It had to be the blonde barista.\n\n\"I told you that I will handle this.\" His socks and shoes were on and he was buttoning his shirt. \n\n\"Oh, no...\" Ella was holding her torn shirt up.\n\nHints of a smile tugged at Rylan's lips, but he bit it back. Something told him she'd cut him down to size if she saw his proud amusement.\n\nHe picked up his jacket and draped it across her shoulders.\n\nWhich made her look sexier. Fuck.\n\nHe lifted her chin and kissed her pink lips. No peck like the last one. A thorough kiss, one that made her cup his stubbled jaw again.\n\n\"Oh...\"\n\nHe smiled then stepped out the door.\n\n<center>***</center>\n\nElla managed to move from the table to the couch... and that was about the extent of her productivity.\n\nShe could hear Rylan speaking to the girl just outside the door, but couldn't make out any words. How could he sound so assertive in the middle of being caught with his pants down? Literally.\n\nHer body was so languid all she managed to do was pull her panties and pants on... and stare at her torn top. That definitely axed the lunch idea \u2013 she couldn't meet Cassie in her bra out on the Square. She'd have to call and cancel. And figure out how to get home half naked.\n\nAnd how to forget about Rylan Kade and the way he made her feel.\n\nAs if summoned by her thoughts, Rylan stepped back into the room. The door clicked shut behind him and he smiled at her.\n\nElla didn't know what had just happened nor what he'd said to that employee \u2013 all she trusted was that everything was all right.\n\nShe watched as Rylan picked up her bra and handed it to her. Then gathered her phone, purse and everything else that had fallen onto the table and packed them back in her bag.\n\nAfter putting her bra on, she donned her useless top and scowled.\n\n\"Wear this on top,\" he murmured, making her shiver again.\n\nElla slipped her arms into the jacket he held up for her, twisting her lips at how big it was. She rolled up her sleeves watching amusement skip in blues and greys as he watched her.\n\n\"What?\" she asked.\n\n\"Nothing,\" he chuckled. \"It's just that that jacket is very expensive. My PA practically wept the last time I wore it and she sneezed in my direction.\"\n\n\"Huh?\" She looked down at the roughly rolled sleeves, hoping she hadn't ruined it.\n\n\"Leave it \u2013 it looks good on you like that,\" he assured. \"Besides, one of the things I lo\u2013 like best about you is that you don't tiptoe around me.\"\n\nShe could have asked him many things. She could have asked him why people tiptoed around him and about that word he'd cut short. But she didn't.\n\nWrapping the jacket tightly around her and cinching her belt high up her waist, she scrunched her nose as she picked up her bag. \"You're going to have to walk me to my car if you want your jacket back. I think I have something I could change into in my trunk. Sorry.\"\n\n\"Don't be,\" he said as he took her hand. \"I'm happy to walk with you.\"\n\nElla didn't know what to expect as they exited and had no desire to walk through the coffee corner and bookshop. The corridor was deserted and when they stepped out into the garish lights... everyone was going about their business without a care in the world. As they passed through the bookshop, she caught the eye of the freckled guy. If he found anything strange in her outfit change, he gave no sign of that as he gave her a slight smile and waved.\n\nShe felt Rylan's hand at the small of her back as she nodded back.\n\nShe noticed some glances on their way to the elevator and her curiosity rose as she noted that half of them were zeroed in on Rylan. Fortunately it was a short walk and they were soon in a glass and metal box descending to the underground garage alongside an immaculate brunette.\n\nThe other woman wasn't even trying to conceal the fact that she was staring at Rylan.\n\nElla swept her ticklish hair out of her face and turned her back on them. It was none of her business who was attracted to him nor how they showed it. Nor how he felt about the attention. All she wanted was to get to her car and regain equilibrium.\n\n\"Oh, my... you are, aren't you? You're Rylan Kade.\"\n\nElla's brow furrowed at the slightly high pitch of the woman's voice.\n\n\"Yes.\"\n\nThe response sounded loud to Ella, as if he were turned her way and not towards the woman. Her face softened slightly when she noted that he had told her his real name. \n\nHe was obviously well-known and, understandably, many notable people preferred to keep their identities and their lives private. He could have given her a fake name back in the bookshop and she would have been none the wiser.\n\nBut he hadn't.\n\nFrom the moment he first spoke to her, he had made Ella feel his honesty. She'd trusted him right from the beginning. It didn't change the reality of their imminent parting, but it did make her feel good to know that everything they had shared had been real.\n\n\"I've read sooo much about the branch of your empire that lies in investment,\" the other woman chirped. \"I'm building an investment company of my own and would love an opportunity to collaborate with you and your... expertise.\"\n\nRylan's voice was cool. \"If you've read as much as you would have me believe you have, you would know to contact the Pyramid and work your way up. Just like everyone else.\"\n\nThe other woman tittered.\n\nAt first Ella was mortified on her behalf. Her entire encounter with Rylan had been so warm and connected that it chilled her to hear him ruthless and devoid. But her sympathy faded at the brunette's very next words.\n\nTall and sleek, the woman stepped right up to him, close enough for Ella to almost feel her. \"Fine. That was just my opening gambit anyway. What I'd really love is a date with the infamous \u2013\"\n\n\"No.\"\n\nThere was a shift, some movement, and then she felt Ryan's body curving into hers.\n\nElla was already sick of the blatant flirtation by then and was turning to face the audacious stranger. Rylan looked down at her, hints of a warning in his eyes, but he didn't say anything.\n\nElla simply met the other woman's eyes with her dark ones and didn't say a word. She watched as the brunette stared at her down haughtily as if show no regret for her behaviour. Seconds later that changed, though. Her hazel eyes noted exactly how close Rylan was standing to Ella... and his jacket familiarly completing her outfit.\n\nQuestions flitted across her face, but she never got any out. The ping of the elevator snapped her out of her outrage \u2013 somewhat.\n\n\"Bye.\" Rylan said when she took too long to leave.\n\nWhen they were alone again, Ella looked up at him. There was so much she didn't know about him \u2013 and never would.\n\nOn the lower level she marched out as soon as the doors opened. Rylan strode after her.\n\n\"Ella, I don't know that woman.\"\n\nElla fed her parking card into the token machine then searched her purse for coins. \"I know.\"\n\n\"Women like that... The way they are is just how they are and that has nothing to do with me.\"\n\nThe machine offered her the token back and she snatched it out. \"Women? Plural. Okay, I get it.\"\n\n\"No. No, you don't!\" He was right beside her as she stomped off to her car. \"That woman was nothing compared to you, bella.\"\n\nElla stopped at her hatchback. \"It doesn't matter anyway, does it?\"\n\n\"Of course it does.\"\n\n\"I don't belong in your world nor you in mine, Rylan.\" She watched his eyes darken. \"That is fine, though. We both knew the reality right from the beginning.\"\n\nShe was grateful to see her car. It was good to be so close to slipping into something so familiar and dependable. She beeped the doors open and immediately searched her trunk for something to wear. \n\nRylan's jacket made her wish she belonged in it and she needed to take it off as soon as possible.\n\nHe came up behind her, stilling her with his hands on her arms. \"Leave it; it doesn't look you have anything in there anyway. Just take the jacket.\"\n\n\"I can't.\" She shook her head.\n\nHe lifted her bag from the trunk and slammed it shut. \"Yes, you can.\"\n\nHe opened the driver's door for her then stood and watched her hesitate. She could tell that there was still so much he wanted to say to her; this wasn't a man accustomed to admitting defeat or not getting what he wanted. But she could also see that a man was too proud for another rejection. Or sick and tired of her and her fears and antics, most likely.\n\n\"You're okay with not getting it back?\" She asked the question more to make it clear that she didn't want anything tying her to him, didn't want a reason to see him again.\n\n\"It's just a jacket, bella. I have plenty more.\" He'd understood her insinuation and was fine with walking away.\n\nElla got into her car just as another pulled up beside her. Her heart dropped at the cheerful hoot from the yellow convertible.\n\n\"What are the chances?!\" Cassie was grinning at her from behind the wheel. \"I saw your car from all the way over there! Then I was all, like, 'No way, it can't be' \u2013 but it could be; it was you, Ella! Did you just get here as well? And what on earth are you wearing??\"\n\nElla gripped her steering wheel as her friend practically skipped over. \"Uh, no. I got here a while ago.\"\n\nCassie's eyes were on Rylan by then \u2013 and she was clearly impressed.\n\nWhen Ella didn't say anymore, he held a hand out. \"Hi, I'm Rylan.\"\n\n\"Oh, I know who you are,\" Cassie's voice was suddenly slightly breathless. \"How do you know Ella?\"\n\n\"He doesn't,\" Ella quickly interjected. \"I had a little accident earlier, tore my top. Rylan here came to my rescue. I'm wearing his... uh, jacket.\"\n\nAnd his scent \u2013 which still had her nipples hard.\n\nRylan's eyes narrowed in on her, steely grey.\n\n\"I'm Cassandra,\" her friend offered.\n\n\"Nice meeting you, Cassandra \u2013 and I need to be on my way.\" He straightened to his full height, holding Ella's bag out to her. \"Ella... It's been beautiful.\"\n\nShe took her bag then sat deflated, watching him walk away.\n\n\"You know who he is, right?\" For some reason Cassie suddenly felt the need to resort to whispers. \n\n\"I don't actually. And it doesn't matter.\"\n\nElla didn't want to walk through that door. Enough had already happened to hint at the sort of man Rylan Kade was and could be in... love. Enough had also happened to hint at the world's fascination with him. She just knew if she let Cass tell her anything now, it would only lead to wanting to know more and more. And missing him more than she already did.\n\n\"I have to go, Cass. I'm sorry, but I don't think I'd be great lunch company.\"\n\n\"Are you kidding? I think you'd be a hit \u2013 who could possibly get pissed off at seeing a topless lady at the next table?!\" Cassie was giggling, ever carefree. \"Just kidding, sweets. Go on. And I hope you had the sense to get that gorgeous god's number \u2013 calling him is the first order of the day, even before getting dressed.\"\n\nElla bit her lip. \"I didn't \u2013 so I won't... call him, that is. Cheers darling.\"\n\nCassie was disappointed by her answer and still eager to talk, but could tell that something was up and Ella wasn't ready to share yet. She cast a quick speculative glance in the direction Rylan Kade had disappeared. Something was up \u2013 hopefully nothing that resulted in her friend being as subdued as she was.\n\n\"Later, sweets. Call me anytime if you need to.\"\n\nElla drove off.\n\nConsidering how bright a day it was, Ella found it strange to feel as gloomy as she was. The whole way home she focused on breathing; long, slow, deep and steady. \n\nBreathe. Read the signs; obey the rules. Breathe.\n\n\n\nDon't die. Breathe.\n\nConstantia Kloof was quiet, her cottage another welcome sight. She was home. The view from the top of the hill was all blues, greens and specks of buildings. She'd taken the place because of the view and the enormous peaceful garden.\n\nOne of the landlord's dogs raced out to greet her at her door.\n\n\"Hey, Dali,\" She smiled, scratching behind his ears. \n\nShe'd never admit it, but one of the things that made her love this place was the fact that the owner had named his dogs after painters. An utterly irresponsible and irrelevant factor to most when home-hunting, but beautifully poetic to her.\n\n\"So, what did you get up to this morning, boy?\"\n\nDali danced.",
        "\"Oh, is that right? Sounds great.\" Ella's keys were below a book that hadn't been in her bag the last time she'd dug in it. \"Wanna know what I did? I went out and gave my heart away.\" \n\nThe Dalmatian followed her inside and hopped onto her couch, grinning up at her.\n\n\"Funny huh?\" Ella pulled the book from her bag and sat next to Dali. \"Well, one of us deserves a good laugh from all this silliness.\"\n\nIt was the book Rylan had tried to give her back at the bookshop. He'd bought it and she'd refused it. He must have snuck into her bag just before walking away.\n\nShe turned it over. Poetry.\n\n\"How am I supposed to get over him now, Dali?\"\n\nThe dog snuggled his head into her lap. Ella petted him absentmindedly, not sure what to do next.\n\nShe paged through the book, not really reading yet, just taking in the sight of poems on pages. Suddenly, about halfway through, the pages seemed to flip themselves. She soon realised why: further along a beautiful, plain white card marked a specific page.\n\nElla moved the card, taking in the words on the page:\n\nPablo Neruda...\n\nCarnal apple, Woman filled, burning moon,\ndark smell of seaweed, crush of mud and light,\nwhat secret knowledge is clasped between your pillars?\nWhat primal night does Man touch with his senses?\nAy, Love is a journey through waters and stars,\nThrough suffocating air, sharp tempests of grain:\nLove is a war of lightning,\nand two bodies ruined by a single sweetness.\nKiss by kiss I cover your tiny infinity\nyour margins, your rivers, your diminutive villages\nand a genital fire, transformed by delight\nslips through the narrow channels of blood\nto precipitate a nocturnal carnation\nto be, and be nothing but light in the dark. \n\nElla pushed up the sleeves of the jacket she hadn't yet managed to take off, and asked herself why Rylan seemed to insist on imprinting himself on her... and why she had been so receptive. If nothing else, she did love that she got to meet him at all. And she knew that she would never forget him.\n\n\"And they all lived bittersweet ever after,\" she murmured wryly to Dali.\n\nShe picked up the immaculate card to mark the poem again. She would be reading it many times.\n\nAs she inserted it in its place, Ella realised that it wasn't all plain. On the other side, without any flair or gimmick were two printed lines.\n\n\n\nRylan Kade\n\n+2711 217 2007\n\nShe wondered about this man who owned business cards that needed no expansion or explanation.\n\nBelow the print, he'd scrawled an extra number. Ella's heart slammed. Having his handwriting on something, even just a card, felt so intimate and special. This was no love note \u2013 oh, no, it was far more. Most especially because it was clearly his mobile number he had shared there.\n\nElla's smile was wistful.\n\nBittersweet ever after."
    ],
    "authorname": "BaalatErotas",
    "tags": [
        "interracial",
        "exhibitionism",
        "black woman",
        "poetry",
        "african",
        "romantic",
        "white man",
        "rough sex",
        "alpha",
        "cheating"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/coffee-and-poetry"
}