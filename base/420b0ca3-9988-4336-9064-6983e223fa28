{
    "title": "Silver Pt. 06",
    "pages": [
        "******************************\n\n*** If you are under the age of 18 or are not of legal age in your jurisdiction, please exit this story immediately ***\n\nThis story is for adults only and contains content that is sexual in nature.\n\nThis is part 06 in the \"Silver\" series. I had intended this to be the final chapter, but there was no possible way to close it out with all that was going on in Michael and Marlene's lives! I also had to break this chapter into two separate portions, so this Part is Pt. 06, with Pt. 07 immediately following. It would have been over 15 pages as one story, and I felt it to be too long for a person to read all at once. So C_F, you get a reprieve, my friend, this is not the last chapter! Once again, my deepest apologies for my pho pas in chapter 05. Duh...\n\nI welcome all of you to vote, comment, and leave suggestions with your thoughts on this story! Thanks to all of you for your votes, kind words, and yes, criticisms on the five previous parts!\n\n*** A very special thank you goes out to \"WickedInside\" for her editing skills and suggestions that made this story so much better! ***\n\n******************************\n\nAs the season changed to autumn, Marlene and I couldn't have been any more in love. The leaves crunched under our feet during our walks in the late September night. I pictured Marlene looking as sexy as ever in her pink zip up hoody, tight jeans, and adorable Reeboks; the face of innocence complimented by her hair pulled back in a pony tail. \"Michael, the moon is peeking over the tree line,\" she said as we walked arm in arm. \"It looks like it will be full in a couple of nights.\"\n\n\"Hmm, I may turn into a werewolf,\" I laughed, taking Marlene into my arms and playfully chewing on her neck.\n\n\"Oh no, Mr. Werewolf, you're not going to eat me up, are you?\" she asked in her best frightened tone.\n\n\"I am,\" I responded, \"but not before taking all of your clothes off, my dear,\" I growled.\n\nWe laughed and teased each other as we continued our walk home. Misty looked up at the two of us as if we were insane, while walking by our sides. \"I heard on the news that it's going to be a Blood Moon. Actually, it is going to be a Super Harvest Moon from what I understand.\"\n\n\"A what moon?\" she asked.\n\n\"A Blood Moon. It has something to do with a Total Lunar Eclipse. When the Earth casts its shadow on the Full Moon and eclipses it, the moon sometimes gets a red glow to it. This time though, the moon will be at it's closest point to earth, which will make it a Super Moon, and since it is at the end of September, it will also be considered a Harvest Moon! It only happens every eighteen, or fifty-one years, or something like that.\"\n\n\"Michael, how do you know all of this stuff? How do you remember everything?\"\n\n\"I'm just brilliant!\" I joked.\n\n\"You are brilliant; you just don't give yourself the credit. Anyway, that Blood Moon thing sounds kind of creepy,\" she replied with a shiver.\n\n\"Actually, it has some kind of religious apocalyptic origin,\" I explained, not knowing much more than it having to do with the last of four consecutive full moons or something like that.\n\n\"Well, maybe we'll celebrate the Super Harvest Blood Moon or whatever it's called, but have a... How should I put this... happyier ending,\" Marlene seductively said.\n\n\"Sounds good to me!\" I laughed.\n\n\"Oh, before I forget, Handsome, the girls have been hounding me about going out and dancing!\"\n\n\"Oh god, Marlene, I'm still trying to recover from the wedding,\" I laughed. \"When do they want to go?\"\n\n\"Next Friday,\" Marlene answered. \"Michael, I have to warn you, you may not be walking for a week after the two of them get done with you!\"\n\n\"Why me? Why can't they pick up a guy at the club?\" I asked with a groan.\n\n\"They don't trust guys.\"\n\n\"Marlene, I'm a guy.\"\n\n\"You're a different type of guy; you're special,\" she whispered as she cupped my face in her cool hand. \"They trust you.\"\n\n\"Great...\" I sighed.\n\nWe walked back to her house, stopping inside for a minute to check in on her mom. \"Hi Mom,\" I said to Mrs. Cassidy as we entered the house.\n\n\"Hi Michael, how are you? And how is my precious baby?\" she asked in a high pitched voice.\n\n\"Mom, Misty's in her harness,\" Marlene whispered.\n\n\"Oh, I'm sorry, Michael, I didn't realize that she was working tonight,\" Marlene's mom apologetically replied.\n\n\"It's OK, Mom; I'll take it off so you can talk to her,\" I said as I bent over and removed Misty's harness.\n\nMisty raced over to Mrs. Cassidy, slapping her tail against the side of the sofa. \"Hi, baby-girl, how is my precious puppy?\"\n\nI could hear Misty licking her face before the usual sound of the thump of her dropping onto the floor and raising her belly high into the air. \"Oh, you are such a beautiful girl,\" Marlene's mom excitedly said as she leaned over and scratched the black Lab's soft belly.\n\n\"I swear, I'm coming back as a dog in my next life,\" I laughed, listening to the constant pampering that was given to beautiful Misty.\n\n\"I'm coming back as Misty,\" Marlene sighed.\n\n\"You get your belly rubbed enough just being you,\" I responded.\n\n\"Michael, shhh...stop,\" Marlene giggled.\n\nWe only stayed for a few minutes before I called Misty over and saddled her back up for the walk home. \"I still can't get over how her face changes when you put on the harness,\" Marlene stated. \"Make sure that you call me when you get home, OK?\"\n\n\"Yes Dear,\" I replied in a sarcastic voice.\n\nIt was funny how Marlene still worried about me walking home even though I only lived a couple of blocks away. I said my goodbyes to Mrs. Cassidy and walked out the front door and out into the crisp September night. Marlene followed, grabbing me from behind, squeezing me tight and playfully biting me on the neck. \"I'll be over for the Blood Moon, Mr. Werewolf,\" she breathed in my ear. \"I'll wear something appropriate for the night!\"\n\nChills raced down my spine from her biting my ear, but even more with those words. \"Mmm, I can't wait,\" I moaned. I turned and gave her a tender kiss before Misty and I started home. \"I love you, Marlene.\"\n\n\"I love you too, Michael. Don't forget to call me when you get home,\" Marlene said as I walked down the steps with Misty leading the way.\n\nIt took us less than ten minutes to get home. We've made this trip countless times, and it was no different that night. I called my beautiful baby when I got home to let her know that we made it home safely. We talked for another half hour about more trivial things that happened during the day. It was funny how we could spend two hours together, walking, talking, and stopping for a kiss or two and could still talk on the phone for awhile after getting home. We were born to fall in love with each other.\n\nSure as the sun rises in the east, the lunar eclipse occured two nights later. The crystal clear Sunday night made the air seem a bit cooler than usual. I heard Marlene's door close and in seconds she walked into my house. \"Hey there, Handsome,\" she said with a big smile in her voice.\n\n\"Hi there, Beautiful! How are you?\"\n\n\"Better now, I'm here,\" Marlene said as she walked into me with quick steps. I could tell that she was wearing heels by the clicking sound on the hardwood floors, but I never heard her walk in that short of a pace. \"Mmm, I love you, Michael,\" she moaned as she squeezed me tightly.\n\n\"I love you too my dear,\" I said in a mock growl. \"Your pink zip up?\" I asked while holding her in my arms.\n\n\"Yep.\"\n\nShe was standing taller than normal, maybe an inch or two higher than her usual height in heels. Reaching down, I took her ass in my hands. \"Are these sweatpants?\" I asked in surprise.\n\n\"Yep, they're pink too,\" Marlene answered.\n\n\"Is this what you were talking about the other night when you said something about wearing appropriate clothing for the night? And why are you wearing high heels with sweatpants?\" I asked in surprise.\n\n\"Yes, I'm wearing heels with sweatpants... Sexy isn't it?\" she mused.\n\n\"Yeah, I guess,\" I stammered.\n\nMarlene unzipped her sweatshirt and placed it on the arm of the sofa. She sat down and I heard her rustling with something. She stood and walked towards me; her heels clicking noticeably on the hardwood floor. \"Is this better?\" she asked, taking my hands and placing them on her sides.\n\nMy hands felt the soft skin of her waist and the edge of a silky satin fabric. Marlene pulled my hands up towards her breast. The softness of the material was mind-numbing as it tightly encased her rib cage. Marlene guided my hands up to her breasts. \"Oh my god, Marlene, this is beautiful,\" I whispered as my hands trembled while feeling the satin material which was pushing her breasts up.\n\nMarlene cupped her hands over mine and pressed them into her. Her tender flesh was pushing up from the edge of whatever she was wearing. \"You like?\" she asked with a smile in her voice.\n\n\"How could I not,\" I said in a shaky voice. \"It's gorgeous.\"\n\n\"It's a bustier... This is what I was going to change into when we got back to our room after the reception. It's deep red. Kind of ironic, huh?\"\n\n\"Marlene, you have me speechless... It is the silkiest thing that I've ever felt and well, your tits... They're really, how can I say this? Pushed together and um, big...\"\n\n\"That's the purpose of a bustier, Handsome... Oh, I wish I had a camera right now so I could catch the look on your face!\" she giggled. \"But, there is more...\"\n\nMarlene slowly guided my hands back down the satin fabric. The roughness of my skin would catch on the material every now and again as it slid down. I returned to the soft skin of her stomach and onto more satin. She was wearing panties tonight and not her usual thong. I brought my hands around to her beautiful ass. The feeling of the satin fabric as it curved over her butt was indescribable. No it wasn't; it was what the designers of the front fenders of a 1932 Ford Coupe had in mind when they created the car. The smooth paint replaced by the satin material, and the beautiful curves of the fender being replaced by the sensual curve of Marlene's ass as it extended smoothly out from the small of her back.\n\nThe panties covered Marlene's ass, but came up high on her hips before dropping in between the valley of her creamy thighs. \"They're the same deep red as the bustier,\" she said with a smile.\n\n\"Marlene, you are seriously trying to kill me,\" I whispered, pulling her into me and brushing my lips across her mouth.\n\n\"You're not done yet,\" she whispered back. I felt her smile widen before she reached down for my hands. She pushed them down along her thighs until I felt the top of the thigh high stockings that she was wearing. \"Marlene, please...\" I moaned.\n\n\"Keep going, Handsome.\"\n\nI knelt down as my hands drifted over the silky stockings that covered her perfectly toned legs. My fingers graced the curve of her straining calves before they came to a halt when reaching the top of her heels. \"Go ahead,\" she moaned.\n\nI dropped my hands over the soft leather, grabbing onto the slim heel and working down along it's length. I didn't think that it was ever going to stop as I continued my journey. When my hands finally reached the floor, I looked up at Marlene in amazement. \"These have to be five inches,\" I whispered in the same shaky voice as before.\n\n\"Six,\" she responded. \"Deep red...\"\n\n\"Marlene, how...why? How can you be any more sexy than I already picture you? And why do you do this for me?\" I stammered.\n\n\"I do it because I love you more than any one person could ever say, and I love to watch your face because it says the things that words just can't,\" she said as she stepped back before kneeling down on the floor with me. She ran her fingers through my hair and raked them to the back of my head. She took two fists full of hair and pulled me in for a long, sensual kiss. \"You my dear Michael, are the love of my life. You don't understand how you changed my life. I will love you until the good Lord takes me, and even after then,\" she tearfully said.\n\n\"Marlene...\" I began.\n\n\"Michael, please, you don't need to say anything.\"\n\n\"But...\" I tried again.\n\n\"But, we have a Blood Moon to celebrate don't we?\" she whispered as she brushed her soft hand along my cheek. \"How about you go and get naked on the bed for me?\"\n\nMarlene raised up from the floor and stood tall in front of me. I groaned in an attempt to stand as my knees cracked beneath me. \"Need help old man?\" Marlene giggled as she grabbed onto my arm to help me up.\n\n\"It seems that you said that to me once upon a time,\" I moaned as I straightened my stiff legs.\n\n\"Yes, once upon a time...\" she replied in a dreamy tone.\n\nMarlene led the way back to the bedroom as I wrapped my arms around her waist and followed her every step. I stripped out of my clothes after being led to the bed and crawled onto it. \"On your stomach, Handsome,\" she said. \"Time to pay you back for that unbelievable and unselfish love you showed me in the hotel.\"\n\nMy cock was rock hard against my stomach as I laid down. I wiggled my ass in anticipation of what Marlene had planned. I heard the mattress creak as she slipped onto the bed and placed herself between my legs. She ran her hands up my calves and thighs, grabbing the warm cheeks of my ass. I let out a deep moan, listneing to her laugh at my bear-like growls. Marlene released her grip and repeated her way up my leg, this time leaving soft wet kisses along the way. She stopped and sucked the back of my knee between her full lips, sucking and massaging the tender area with her tongue. She playfully chewed and giggled as the chills raced up to the back of my throat. Marlene kissed her way up to the cheeks of my ass, lightely biting and kissing each one. And then it happened; she backed down to my calves and like a long, slender cat, pressed her satin covered breast onto my legs and seductively slid the silky smooth material up my body. I tensed and moaned out loud, \"Jesus, Marlene, that is incredible... You feel so good... Please...don't...stop...\"\n\nHer satin tits were resting at the nape of my neck as she eased the weight of her body onto me. Everything was soft, silky, and smooth. She raised up on her hands and swept her satin tits back and forth across my back. Marlene continued down until her tits were resting on my ass. Her breasts circled my cheeks in an erotic massage before she stretched back up to my shoulders. In one swift move, she straddled my ass and began to grind her satin panties onto my tailbone while rubbing my shoulders with her hands.\n\n\"Marlene, please, that feels so good... Keep grinding into my ass, Sweetheart; I want to hear you come.\"\n\nMarlene ground harder into me and I could feel her fingers digging into my shoulders. I could tell that she was getting close to her first climax of the night. Her pace quickened and her breathing became more eratic as she reached her breaking point. I felt her stocking covered legs and the six inch heels clamp against my thighs as her long nails gripped my shoulders. She let out a final gasp as her satin covered pussy raced across the cheeks of my ass. She dropped onto me, shaking and breathing heavily as she continued to grind through her orgasm. \"Michael, Michael... Oh God... Oh God, I can't stop... I can't stop coming.\"\n\nHer body continued sliding against me as she grabbed my hair and held it firmly while another orgasm ripped through her body. Within seconds, she fell limp and melted into me. Her breathing was heavy and her hands kept a tight hold of my hair. \"Mi...hael, I was...the...one who was...supposed...to be pleasuring...you,\" she panted. \"How...do you...keep...doing that...to...me?\"\n\n\"Just a gift, I guess,\" I said into the mattress.\n\nI felt Marlene's head drop into my back in equal parts frustration and amusement. She released my hair and slid her arms under me as she pressed tighter into my back. I could feel her long High-heeled shoes draped over the inside of my calves and her long legs bending out sideways at the knees. \"You, you... Oh, you are so impossible sometimes!\" she said after breaking out into a frustrated laugh. \"What is it about you? How come I don't have any self control when I'm with you?\"\n\n\"It must be the curse of the Blood Moon!\" I laughed into the bed. My body was shaking up and down as Marlene wrapped her hands around my neck and playfully shook it.\n\n\"I'll give you a Blood Moon,\" she giggled. \"You are simply incorrigible; do you know that?\"\n\n\"If I say yes, will you stop trying to strangle me?\" I laughed as my body continued to shake.\n\n\"Ooooh, you... Turn your ass over; I'm going to play with you until you come if it's the last thing that I do!\"\n\n\"What's the matter, Sweetheart, are you mad because you came first,\" I asked, laughing as I began to turn over.\n\n\"Ooohhh, Michael, you're in for it now, buddy boy,\" she giggled while trying to keep a serious tone to her voice. \"Go ahead, keep grinning, Handsome, because you won't be doing that for long...\"\n\nMarlene was correct with her prediction. My grin didn't last long, as she dipped her head down and let her soft hair fall across my cock and balls. I let out a low moan as the long strands of hair traced down my thighs and back up across my balls. \"Marlene, God, that feels so good... Please...yes...\" I moaned out loud.\n\n\"What was that you were saying, Mr. Funny Man? What do you want me to do? Huh? Hmm, what should I do with this lovely cock?\"\n\nMarlene's hair lightly grazed my stomach until I felt the unimaginable sensation of her satin covered tits rubbing along the length of my cock. I let out a long gasp and grabbed onto her head. She switched from one breast to the other as they continued to glide along the length of my shaft. My cock strained as I moaned out in pleasure. \"What's the matter, Handsome? Do you want me to stop? Do you want me to take my soft, satin tits off of your cock? Oh, you should see them, Michael, they're bulging out of the bustier!\"\n\nGroaning out loud, I thrust my cock up into her breast and pleaded, \"No, please don't stop... Please, Marlene, keep going...\"\n\nMarlene kept up her teasing as my cock pressed against her gorgeous breasts. \"Oh, what's the matter? Are you getting frustrated? Michael, you should see your cock sliding against the deep red satin. Mmm, it looks like you're leaving some pre-cum... My tits are getting wet. Do you want to come on my tits, Michael? Do you want to spray your hot cum on my blood red tits? Do you?\"\n\nI pleaded for Marlene to make me come, but she kept gliding her tits up and down the length of my shaft, teasing me with her words. I began to buck my hips wildly, thrusting my cock hard against her tits. \"Marlene, I'm going to come... I'm , oh God, yes...going to...come\"\n\n\"Yes, Michael, come on me... C'mon, come on my silky titss.\"\n\nShe flattened her body onto me and continued to rub herself against my shaft as my cum sprayed out of my cock. I let out a long, gasping breath as the jets of cum soaked her beautiful satin bustier. I couldn't stop; the cum continued spurting out from the head and drenching Marlene's bustier and my stomach.\n\n\"Oh yes, Michael, yes, yes, it's so much; it's so hot, so...hot.\"\n\nMarlene quickly raised up and straddled my hard cock and agressively ground her wet satin panties against it. Her thrusts were rapid, and her breathing suddenly increased as she pressed down harder. The pressure squeezed the last drops of cum from my shaft as she continued to wildly thrust against it. She slid her pussy up further to the head of my cock, sucking up the last remnants of cum into her satin panties. Her clit rubbing against the ridge of my head sent her over the edge and she came hard on top of me. Marlene kept up her rapid pace as the tremendous orgasm streaked through her. Her head fell forward and her hair danced across my chest before she collapsed on top of me. I could feel the damp fabric of the bustier against my chest as she gasped for air. Again, Marlene reached up and took my hair into her hands and rubbed it through her fingers. \"Michael...you did...it...again.\" she panted. \"I have...no... I...can't help...myself,\" she gasped into my shoulder.",
        "I rubbed her satin covered back after catching my breath. \"It's OK, it's OK, Sweetheart; you are amazing and so, so beautiful. I absolutely love everything that you do to me,\" I softly said as my fingers trickled down her back to the silky round cheeks of her ass. She kept caressing my hair between her fingers before eventually reaching down and running them lightly across my eyebrows. Her breathing was beginning to return to normal, but she said nothing as my fingers slithered over her satin panties.\n\nMarlene eased her body downwards until her face laid sideways onto my chest. Her legs were still bent beneath her and her cute little hiney was raised slightly in the air. \"How I wish I could see her,\" I thought to myself. My cock twitched under her at the thought. Marlene let out a slight laugh when she felt my shaft jerk against her belly.\n\n\"What are you thinking?\" she softly giggled.\n\n\"Well, first of all, how absolutely beautiful you are, but also, I was picturing you with your long legs covered with those red stockings bent under you and those incredibley sexy shoes that are pressing into me. But what made my cock really twitch, was the picture of that beautiful red satin covered ass of yours raised into the air and your back sloping down into me.\"\n\n\"Mmm, you like my ass, Michael?\" she moaned into my chest.\n\n\"Sweetheart, I may be blind, but I have a very clear picture of what your ass looks like when it is sticking up like that!\" I replied.\n\n\"Do you like it that much?\"\n\n\"Uh, yes,\" I said in an exaggerated tone.\n\n\"Hmm, I think that I might want to try that some day.\"\n\n\"Try what?\" I asked in surprise.\n\n\"You know... That,\" she replied in an embarrassed voice.\n\n\"Say that one more time,\" I said, not knowing if I were hearing things.\n\n\"Michael, please, I might want to feel you... You know... In my , you know, ass.\"\n\n\"Marlene, you may want to try that with me one day?\"\n\n\"Yeah, I want to try it... And yes, with you silly!\" she giggled in more embarrassment. \"Why, don't you want to?\"\n\n\"Um, Marlene, you're going to make me come,\" I said as I listened to her tell me that she wanted to feel my cock in her ass.\n\n\"Oh Michael, Stop...\"\n\n\"No Marlene, I'm serious, I'm going to come,\" I told her as I thrust my cock into her belly.\n\n\"Oh my god, really?\" she asked as she quickly sat up and took my cock in her hand and began stroking it.\n\n\"Oh fuck, Marlene, yes, God, I'm coming,\" I loudly groaned.\n\nAs spurts of cum exited my cock, Marlene continued stroking it and begging for more. \"Oh yes, Michael, come, come for me... Oh, it's so beautiful... It's so, so sexy,\" she said in a mesmerized tone. I was on the verge of passing out as the nerves in my body lit up, and my orgasm raced through me. I could feel my eyes roll back into my head as Marlene continued to rapidly stroke my cock. She dropped her mouth over my shaft, sucking the last drops into her mouth, moaning loudly as she finished cleaning my entire length. \"Mmm... Mmm... That was amazing; I never saw you like this before,\" she said in a surprised voice.\n\nI was trying to catch my breath before I said anything. \"Sweetheart...I...can't talk...yet.\"\n\n\"Wow, that was so intense huh?\" she asked. \"You really liked what I told you I wanted to try, huh?\"\n\n\"Yes,\" I panted. \"You are so unbelievably sexy. You just don't realize it, do you?\"\n\n\"Actually, you are starting to make me believe it,\" she giggled as she took one last suck on the length of my withering shaft. She laid down on top of me before I rolled us onto our sides. Marlene giggled as I turned her side to side. It was almost like she was on a thrill ride at the amusement park. She threw her long leg over my thigh and pulled herself into me as our lips met for one of the longest, most passionate kisses that I had ever experienced. \"Michael,\" she moaned into my mouth, \"I love you so, so much.\"\n\nI continued rolling her side to side as our passion grew. Moans and groans filled the bedroom as our bodies slid together. We were a tangled mess of sweat by the time our kiss ended. Our breathing was heavy as our lips remained connected. I didn't want them to part; I wanted to feel her lips slide across mine forever. They were so full, so soft, so sensual, and I was in heaven when they were pressed against me.\n\nWe laid together, tenderly stroking, caressing, and talking to each other. As my rough fingers occasionally tugged on the satin fabric, I told Marlene that her gorgeous bustier, panties, and stockings were going to be ruined. \"Then I'll buy more,\" she said, tracing her fingers across my lips. \"Hey Michael, can I ask you something?\"\n\nIt was so funny that after all of our time together, Marlene always asked if she could ask me a question! I think that is what made her so innocent, and so very adorable! \"Sure Sweetheart, you can ask me anything that you like,\" I whispered as her fingers traced along my jawline.\n\n\"Remember when we were walking home from the reception and you said something about being a member of the family, and someday making it legal?\"\n\n\"No, I don't remember any such thing,\" I said with a smirk.\n\n\"You do so, Michael...\" she giggled.\n\n\"I don't have a clue as to what you're talking about, Marlene,\" I replied, trying my best to hold back my smile.\n\n\"You do so, and stop trying to hide that smile of yours,\" she laughed, reaching down and tickling my side.\n\n\"OK, OK, I think I'm beginning to remember bits and pieces of something,\" I laughed.\n\n\"Bits and pieces?\" she giggled, reaching up and playfully chewing in the nook of my neck.\n\n\"Ok, I remember everything, I remember,\" I laughed as the chills tingled along my spine. \"What about it?\"\n\n\"Did you really mean it?\" she asked as she temporarly stopped attacking my neck.\n\n\"Maybe,\" I teasingly replied.\n\n\"Maybe? Maybe?\" she asked with a disbelieving laugh. \"You're so bad, Michael; you are so, so bad...\"\n\n\"Oh Marlene, you knew that I was serious,\" I laughed.\n\n\"Really Michael? Really? When? When can we?\"\n\n\"I have some things to work out first, so give me a little time and we'll talk about it later,\" I answered.\n\n\"Things to work out?\" she asked. \"What things?\"\n\n\"None of your beeswax,\" I laughed, piching her cheek just as she always did to me.\n\n\"Oh, you're just going to make me suffer, aren't you?\" she giggled.\n\n\"Yep, that's my main goal in life, Sweetheart, making you suffer,\" I laughed, rolling her onto her back and straddling her stomach. \"I'm going to make you suffer along with me for the rest of your life!\"\n\nI cupped her face in my hands, holding her with all of the tenderness that I could, and told her that I loved her more than I ever thought possible. Leaning down, I kissed her pouty lips as I continued holding her beautiful face. \"How about we get cleaned up and take a walk outside to see if the moon is bloody?\"\n\nWe struggled to get up from the bed, moaning and groaning as the mattress creaked under our movements. I began to walk towards the bathroom for a shower when I heard the window shade slide up. \"Oh my god,\" Marlene exclaimed.\n\n\"What? Are you alright?\" I asked as I turned around and re-entered the bedroom.\n\n\"The moon, it's huge... It's brilliant, Michael... It lookds like I could reach out and touch it!\"\n\n\"It must look amazing,\" I said. \"It's supposed to be at a full eclipse around ten o'clock,\" I told her. \"What time is it now?\"\n\n\"Um, the clock on your radio says five minutes after nine.\"\n\n\"That gives us plenty of time to clean up,\" I replied, turning around and heading for the shower.\n\n\"Handsome, I swear, if the street lights weren't on, you could see your shadow; that's how bright it is,\" she said in amazement.\n\nWe showered, soaping each other's bodies, rinsing off, and soaping each other up again. I loved the way that my hands glided effortlessly over the curves of Marlene's body. I especially loved the feel of her soapy tits slipping through my hands as I attempted to pinch her erect nipples. There was nothing about Marlene that I didn't love. I ran my hands down her back and over the soapy cheeks of her ass. \"Yes, a 1932 Ford Coupe,\" I whispered.\n\n\"What was that about a Ford?\" she asked, not understanding what I was talking about.\n\n\"Oh nothing, I was just thinking about something,\" I whispered as my hands continuously slid over her soapy ass.\n\nWe rinsed off for the final time before stepping out of the shower and drying each other. As we were getting dressed, me in my jeans and a sweatshirt, and Marlene in her pink sweat pants and hoodie, I asked her if she were going to wear her six inch heels! \"I could if I wanted,\" she began with a giggle, \"But if I did, I have the feeling that we wouldn't make it outside to see the moon! I brought my sneakers; they're by the front door.\"\n\n\"Marlene, we would be seeing the moon alright, it just wouldn't be the one outside!\" I laughed. I sat on the edge of the bed and began to slip my socks over my feet. I asked Marlene as she was packing up her, what should I call them, things, if I could see her shoes.\n\n\"Hey Handsome, do you know why it it is hard for me to remember that you are blind sometimes?\"\n\n\"No, why?\"\n\n\"You talk like you can see. You just asked me if you could see my heels. And you say things like, do you want to watch TV, look at that, or let's go out and look at the moon.\"\n\n\"Marlene, I had sight for so long, that I talk like I can see. I told you when we first met that I really don't consider myself blind; I say those things because first of all, that's what I've always said, and second, I picture things before I speak.\"\n\n\"But, you say it so naturally and well, for instance, you actually look at the TV when we're watching it.\"\n\n\"Yeah, because that is what I did all of my life. And if you notice, I look at people when I talk to them, or they are talking to me.\"\n\n\"You know, it's so funny that you just said that because the girls mentioned that after I returned to the office that day. They said that if you didn't have Misty with you, they wouldn't have noticed that you couldn't see. Poor Margie thought that you could see, until she heard Misty shake in front of her desk. She really felt embarrassed.\"\n\n\"Is that the only thing they talked about when you got back?\" I asked with a raised eyebrow.\n\n\"They may have had some comments about the wrinkles in my skirt,\" she mused. \"In fact, they checked my skirts for the next couple of days!\"\n\nMarlene leaned over and kissed my forehead as I sat on the bed before placing the red shoe on my lap. I held it up and ran my hands over the leather and down the length of the heel. \"Jesus Marlene, how do you manage to walk in these? How do you even stand in them?\" I asked in amazement.\n\n\"I had previous experience, remember?\" she giggled as she ran her hand through my hair.\n\n\"Yes, I remember,\" I whispered, \"But that was a long time ago.\"\n\n\"It's like riding a bike, Handsome; some things you just never forget,\" she laughed.\n\n\"Marlene?\"\n\n\"Yes Sweetie, what?\" she softly asked in my ear as her lips brushed across the sensitive skin.\n\n\"Promise me that you'll never change... Promise that you'll always do this kind of thing for me?\"\n\n\"Michael, my love, everything that I see, I think of you. I see your face in everything that I look at. But, just to make sure that you believe me, yes, I promise that I'll always do these things for you.\"\n\n\"Sweetheart?\"\n\n\"What Handsome?\" she asked now sucking on my earlobe.\n\n\"Nothing... Well, I just wanted to say that I could picture you in your things tonight. I want you to know that you are stunning.\"\n\n\"Oh Michael, please, stunning?\"\n\n\"No, you don't understand, I can see things that other people can't.\"\n\n\"I knew it, I knew it, you do see things that we can't... I told you before...\"\n\n\"No, not like that ,\" I responded. \"I can see things with my hands; I can feel the curves, valleys, peaks, and slopes of your body. Each one flawlessly merges into the other as it descends along your body. You are perfectly proportioned; my hands feel like they are sliding down a beautiful piece of crystal.\"\n\n\"Michael...\"\n\n\"No, hold on,\" I said, \"Stand up for a second and I'll show you.\"\n\nMarlene stood, and as I raised up from the bed, I turned her to the side. \"Look,\" I said as I began at her shoulders and worked my way down, \"I'm running down your back and watch, it takes a little dip at the small of your back. Now watch, it makes a perfect transition and raises perfectly over your ass. And then, watch this... It circles under and connects to your long legs, which are another story in itself.\"\n\n\"Oh Michael, stop, it does not...\"\n\n\"No Marlene, it does, and it works from the sides and front of your body too!\" I said, concentrating on my hands as they traveled the length of her body from every angle.\n\n\"Michael, please... That's just the way that I was made; it's not everything that you think,\" she said in an embarrassed tone.\n\n\"Oh, but it is,you see, the things that you wear don't accentuate your body; your body accentuates the things that wear you,\" I said, looking up from her sculptured calves. \"So yes, you are stunning, Marlene, absolutely stunning.\"\n\n\"Well... Well... Let's get dressed and get outside,\" she stammered, changing the subject.\n\nWe finished getting dressed before I hooked Misty up to her leash and walked out the front door into the chilly September night. \"Michael, I wish so much that you could see this. The moon is absolutely magnificent... It looks like it is halfway covered.\"\n\n\"They said that it will be at a full eclipse a little after ten o'clock,\" I said. \"They also said that it will last for a little over an hour.\"\n\n\"How about if we take a walk then,\" Marlene suggested. \"Can I hold Misty's leash this time?\"\n\n\"Sure, if you want,\" I said in surprise.\n\n\"Well, you know, if I'm going to be, you know...legal,\" she said with a sly smile to her voice.\n\n\"Marlene, you can hold the dog's leash anytime you want; we don't have to be marr...\"\n\n\"What was that? What was that last word? C'mon, Handsome, finish your sentence,\" she giggled, attempting to get me to say the word \"married.\"\n\n\"What? Marinated?\" I laughed.\n\n\"Michael, stop, that is not what you were going to say. And why would I be marinated?\" she said in a frustrated, but amused tone.\n\n\"Mmm, I could think of a good reason to marinate you!\" I joked.\n\n\"Ooooh, you... You are impossible,\" she laughed, playfully banging her head into my chest.\n\nOf course I was going to marry Marlene. I was never more in love with a person, and I don't think that I could ever be either. The thing was, I wasn't going to make it a stereotypical engagement. I mean, I wasn't going to give her a ring at Christmas, New Years, or Valentine's Day. I wanted it to be when she very least expected it, and I had an idea in mind. We began our walk as Marlene continued to hound me about what I almost said, and I fended off her assaults with laughter! Turning onto the main street of our town, we began to head back toward the house when Marlene stopped dead in her tracks. \"Oh Michael, oh geezz, it's right in front of us,\" she whispered.\n\n\"What's in front of us? What are you talking about?\"\n\n\"The Blood Moon; it's right there,\" she said taking my hand and raising it up to the sky directly ahead where we were standing. \"It's the most beautiful, eerie thing that I've ever seen,\" she said. I felt her body shiver as the words left her mouth.\n\nI began a low growl as I turned into her and tenderly bit her neck. Misty wasn't having any part of this, and she put her nose between us and pushed me away. She grumbled and shook as I stepped back. She didn't like particular noises, such as loud sounds, and I assumed that she wasn't real pleased at what I did to Marlene. \"It's OK, pup; I was just playing with your mommy,\" I said in a calm voice as I knelt down in front of her and rubbed her face. \"I would never hurt her,\" I continued as she settled down with a shake and a long stretch.\n\n\"Mommy?\" Marlene asked with a big smile to her tone.\n\n\"Boy, you don't miss a thing, do you?\" I said as I raised up and gave Marlene a soft kiss. \"Yes, Mommy, alright?\" I laughed.\n\n\"Sounds good to me, Daddy,\" she giggled before running her tongue over my lips. \"It seems as if Misty-girl is a bit protective of me!\"\n\n\"Traitor,\" I replied.\n\nMarlene continued to describe exactly what the \"Full Harvest Blood Moon\" looked like. We continued to talk about it the rest of the way home as it seemed to follow our every step. Aftrer turning into my driveway and making our way to the front steps, I stepped up and turned around to face Marlene. \"You do want to get married, right?\" I asked.\n\nMarlene began to cry, weakly saying, \"Of course I do, Michael, of course I do.\" She wrapped her arms around my waist and buried her head into me as the tears poured from her eyes. I could feel her body shaking as she let everything out. The audible sounds of her pure emotion filled the night air as she repeated my name over and over again. She continued crying uncontrollably as I held her head in my chest.\n\n\"It's OK, Baby,\" I whispered, \"It's OK.\"\n\n\"Michael,\" she sobbed in a shaky voice, \"I never dreamed, I never dreamed. I didn't even have the ability to dream,\" she trembled.\n\n\"It's OK, Sweetheart, you're safe,\" I assured her.\n\n\"But you, of all people... It was you on that incredibly frigid morning that came walking down our street when I was feeling my absolute worst,\" she stuttered, sniffing and wiping her tears on my chest. \"You were the one who changed my whole outlook on life and gave me a reason to continue on.\"\n\n\"Sweetheart, things happen for a reason,\" I whispered as I softly stroked her hair.\n\n\"Do you really think that, Michael? Do you really think we are part of a bigger plan?\"\n\n\"i don't know about a bigger plan, but I think that we were brought together for a reason. As to why? That's not for me to answer.\"\n\n\"But, I loved you from the very first time that I laid eyes on you,\" she whimpered, \"Why?\"\n\n\"I don't know, you are the only one who can answer that,\" I whispered. \"Maybe because I was just so irresistable! You know, kind of Clooney-like!\" I said with a grin.\n\nMarlene began to shake again. \"There you go again, making me laugh in the middle of a cry.\"\n\n\"Hey, why are you laughing? Maybe I am Clooney-like and you won't admit it!\" I laughed.\n\n\"I love you so much, Michael. I can't wait to be your wife!\" she said as she looked up at me as I stood on the step.\n\n\"I love you too, Marlene, and no, I can't wait until you're my wife too,\" I said.\n\nWe said our good night to the Blood Moon and went inside the house. I let Misty out for her last call of the night while Marlene wiped her face off in the bathroom. As I stood on the deck in the silent night air, I thought about how our life would be together and how happy I was finally going to be. The sticks and leaves crunched under Misty's paws as she continued her hunt for the perfect place to go. The door opened and Marlene stepped onto the deck and wrapped her arms around me from behind. \"Mmm, it's so quiet out here,\" she whispered in my ear. \"It was a beautiful night, Handsome, just beautiful,\" she said with contentment in her voice. The sound of crunching leaves quickened before Misty finally pounced up the steps and ran to the door.\n\n\"You can get your dog her bone,\" I laughed as I turned to Marlene and gave her a soft kiss.\n\n\"OK, I can do that,\" she said as her lips widened into a big smile.\n\nMarlene didn't stay too much longer. She had a busy Monday ahead of her with new clients and other business decisions that she, Ed, and Janet had to review. \"I'll call you tomorrow, OK?\" she said as she gave me the last kiss of the night.\n\n\"That sounds great; be careful going home, and get some sleep.\"\n\n\"I will, Handsome, you too.\"\n\n\"Sweet dreams,\" I said, \"I love you.\"\n\n\"I love you too, Michael; sweet dreams to you too!\"",
        "**********\n\n**********\n\nThe days and nights passed by quickly as Marlene continued to drop suptle hints regarding our eventual marriage. I really didn't want to keep Marlene frustrated with my avoidance of the subject, but the fact was that I did indeed have things that I needed to take care of before the big event. Money certainly was a problem for me at the time. I didn't have the adequate funds that I thought that I would need for a ring. I knew that Marlene wouldn't have cared about a ring at all, yet the size. As I said, I didn't want to present her the ring in the stereotypical way; I had a plan, and I was going to stick to it! And so, the week was flying by, faster than I would have liked. The girls were ramping up their rhetoric at the law firm, and Marlene advised me of their warnings every night during our walks. Apparently, they were coordinating their outfits together and my Marlene was now a full fledged part of it!\n\n\"Michael, you might want to invest in some Duct tape,\" she told me one night as we walked along the streets of our town.\n\n\"Duct tape? For what?\" I asked in bewilderment.\n\n\"Well... You might have a little problem keeping a certain appendage of yours under control when you see what the girls and I are wearing,\" she laughed.\n\n\"What do you mean, see?\" I asked with a laugh after Marlene danced around calling my \"cock\" an \"appendage\".\n\n\"Well, I might have told them how I show you what I am wearing when we go out; or you know, when I wear, um, certain things for you,\" she sheepishly admitted.\n\n\"You told them waht?\" I asked with a long sigh.\n\n\"Well Handsome, when we first started dating, they would ask me how you knew about the sexy things that they helped me order for you,\" she informed me.\n\n\"They helped you do what? Do you mean that they know about the things that you wear for me when we, you know...do stuff?\"\n\n\"Weelllll, kind of,\" she said in a long exaggerated statement. \"They kind of, well, gave me ideas about what would look good on me.\"\n\n\"Oh god, Marlene, I'm not going to be able to look at them anymore... Oh shit, the crotchless thing that you wore, the silver bikini too?\"\n\n\"Well, yeah, kind of,\" she giggled. \"That's why you might want to think about the Duct tape,\" she giggled harder. \"Don't be embarrassed, Handsome; they just want to go out and have some fun!\"\n\n\"Oh god, I'll probably pass out right in front of them, Sweetheart. Maybe I should have a couple of drinks first.\"\n\n\"There won't be any need for alcohol, Handsome. Just relax and we'll have a great night dancing,\" she said as if we were going to a family picnic in the park.\n\nOh boy, I was in trouble and there was no way out of it. Marlene did her best to calm me down, changing the subject to the holidays of all things. It actually worked because I was looking forward to finally spending the upcoming holidays with someone that I absolutely adored. I couldn't wait to shop, decorate, sit by the fire, and spend a romantic Christmas Eve with her. I loved gifts. I loved buying them and getting them. I loved the excitement of ripping wrapping paper off of a box and seeing what was inside. In truth, I was still a kid when it came to Christmas. I thought about me and Marlene going out and looking for our first tree together. I pictured a cold, blustery day with snow flurries whipping around the lot of freshly cut trees. I could already smell the wonderful scent of the Frazier and Douglas firs as we walked through them in search of the perfect one. I would hold the tree for Marlene to view as she told me to twist it around so she could see if there were any bare spots. I pictured us picking out a nice, full seven footer and having the men who worked in the lot, bind it in netting, and place it into the back of Marlene's SUV.\n\n\"Michael, Michael, helloooo...\" Marlene's voice said, bringing me out of my dreamy state.\n\n\"Thinking about how beautiful I am again?\" she sarcastically asked.\n\n\"Oh... Yeah...\" I grinned.\n\nThe final two days passed, and Friday was staring me right in the balls. Marlene told me that they would all be over around seven o'clock because they wanted to see my house and have a glass or two of wine. Oh my god, I was so screwed. My hands shook as I attempted to button my shirt before tucking it into my Khakis. As I slipped my belt through the loops of my pants, I heard a couple of doors close. Misty raced for the front door and tapped her paws on the floor as she waited for Marlene and the girls to come to the door. My armpits began to sweat as the belt slid through the last loop. I buckled it quickly, sat on the edge of the bed and put on my shoes.\n\nI heard the front door open without a knock and Marlene say, \"Oh Michael, we're here!\"\n\n\"Be out in a minute, Sweetheart; make yourselves comfortable. I could hear the tapping and clicking of heels on the hardwood floors of the living room and the voices of the girls talking to Misty. The unmistakable sound of Misty floundering on the floor, and Margie making a big fuss over her was next.\n\nI heard a set of heels clicking down the hallway towards my room. \"Hey Sweetheart, how are you, Love?\" I asked as I tied the final lace of my shoe.\n\n\"Hey there yourself!\" I heard Dianne say. \"Wow, you dress up well!\"\n\n\"Oh hi, Dianne Sweetheart, how are you?\"\n\n\"I'm doing much better now,\" she mused. \"So, is this where all of the action takes place?\" she asked with a sly smile to her voice.\n\n\"Yep, this is where all of the...action takes place,\" I smiled as I looked up at her from the bed. I could smell her perfume filling the room as she stood in the doorway.\n\n\"You might want to come out here soon, because if I come in there, we'll never make it out dancing,\" she said in a teasing voice.\n\n\"Fuck, I should have listened to Marlene about the Duct tape,\" I thought as my cock strained against my pants.\n\n\"C'mon, I'll guide you out; Marlene told me how,\" she said as she walked into my bedroom and took my hand to stand up. I froze in place, afraid to move. \"It's OK, I won't bite you,\" she laughed.\n\nI reluctantly stood and took Dianne's hand. \"Mmm, very nice,\" she said as she turned around and folded my arms around her waist. She was a bit taller than me because of the height of her heels. \"Thank god for that,\" I thought to myself, \"My cock might not press into her ass.\"\n\nWell, that wasn't exactly the case as Dianne's ass ground into my crotch. \"Very nice, Michael,\" she giggled as she began to guide me out into the living room, holding my hands around her thin waist. The material of her shirt, blouse, or whatever she was wearing was slick and form fitting to her body. the curls of her long hair tickled my nose as we began the agonizing journey out to Marlene and Margie. \"Oh my god, her fucking body is unbelievable,\" I thought as the sound of her heels tapped slowly on the floor.\n\n\"Look who I found,\" Dianne said with a smile to her voice as we entered the living room.\n\n\"Oh geez, Dianne,\" Marlene laughed, \"I take my eyes off of you for one second and you're already torturing my poor baby!\"\n\n\"Marlene, the torture has yet to begin,\" Dianne said in a sexy voice.\n\n\"My poor baby,\" Marlene giggled, \"Let me have him,\" she said, taking my hands from around Dianne's waist. \"Look at his poor face; it's red,\" Marlene said as she cupped my face into her soft hands and gave me a tender kiss.\n\n\"Blood red?\" Margie interjected.\n\n\"Marlene...\" I whispered in embarrassment.\n\n\"It's OK, Handsome; they helped with that too,\" she whispered in my ear before giving it a little bite.\n\n\"Yeah, Michael, did we do a good job?\" Dianne asked.\n\n\"Yeah, how about it? Did we, Michael?\" Margie chimed in.\n\n\"Um, yes, you actually did quite a nice job,\" I said with a smile, knowing that I might as well just go with the flow and join in on their fun. \"You did an outstanding job as a matter of fact,\" I teased as my lips pressed onto my baby's lipstick covered mouth.\n\nMarlene showed the girls around the house as I gathered some wine glasses from the dinette. I could hear the gasps and shrieks coming from the basement as Marlene showed them my workshop. The sound of doors opening and closing followed, until the unmistakable sound of Misty racing up the steps signaled the girls' return. Marlene opened the back door and brought the girls out onto the deck. \"Sweetheart, can you bring Misty out with you?\" I yelled. Marlene called Misty outside as I opened the bottle of wine that Marlene said she had placed on the kitchen counter. I was pouring the wine as the girls and Misty returned inside. The chaotic sound of heels clicking on the floor filled the house and I could smell the scent of cigarette coming from someone. \"Whoever is smoking better quit,\" I said in a serious tone.\n\n\"Margie!\" Marlene and Dianne said together.\n\n\"Margie, that's bad,\" I said as I walked toward the girls with two glasses of wine. \"Here you go... I'll get the other one,\" I said as I handed each glass into a soft pair of hands. I grabbed the other glass, bringing it into the dining room where the girls were gathered. \"Thanks, Handsome,\" Marlene said as she took the glass from me and kissed my neck. \"Mmm, you smell good,\" she whispered.\n\n\"Good enough to eat?\" Dianne asked with a smile in her voice.\n\n\"Dianne, you have the ears of an owl,\" Marlene laughed. \"But to answer your question; yes, good enough to eat!\"\n\nMarlene showed the girls the bathroom and bedrooms. \"Oh, this bathroom is gorgeous!\" Margie exclaimed.\n\n\"He designed it himself,\" Marlene told her.\n\n\"A piano!\" Margie said next.\n\n\"Oh fuck, she's going to ask me to play something, I just know it,\" I thought.\n\n\"Michael, can you play me something?\" Margie asked.\n\n\"Yeah, Handsome, can you play a song for us?\" Dianne asked next.\n\n\"He doesn't like to play in front of people,\" Marlene explained. \"He gets a little nervous, but he really does play beautifully.\"\n\n\"Michael, please? Please, won't you just play us one song?\" Margie pleaded.\n\nI heard a pair of heels approaching from the piano room along with the scent of sweet perfume. Dianne stepped in front of me and kissed me on my forehead. \"Can you please just play something, Michael? I know that you don't want to, but can you just do it for the three of us? Just tonight?\" she asked in an innocent, almost childish voice; one that I wasn't expecting to come from her. She took my shaking hand into hers, \"Please?\"\n\n\"OK, I'll try,\" I said.\n\nDianne squeezed me tightly as her beautiful, large breasts pressed into me. \"Thank you, Michael; you are the sweetest man that I ever met,\" she said, in an almost tearful voice.\n\n\"It's OK, Dianne,\" I said, brushing the side of her face with my fingers. \"C'mon, lead the way,\" I smiled.\n\nShe kissed my forehead again, wiped her lipstick away and brought my hands around her waist. We walked back to the piano room where Dianne told Marlene and Margie that I agreed to play something. The three girls sat on the same sofa where Marlene had sat when I played her my first love song. As I pulled the bench away from the piano and sat down, I felt a set of hands rub my back. Marlene leaned over and told me that she loved me and that i should see the look on the girls' faces. \"What should I play?\" I whispered to her.\n\n\"I don't know; whatever you are comfortable with,\" she whispered in my ear.\n\n\"That would be nothing!\" I laughed.\n\nMarlene pinched my cheek and told me that anything would be fine, before retreating to the sofa with the girls.\n\nSo I began, I started to play a song that I absolutely loved and knew that I could play well. My index finger and pinky struck a \"C\" and a \"G\" simultaneously, alternating with an \"A\" with my thumb. I repeated the sequence three times before I began, \"Once there was a way,\" hitting a \"D\" with my left ring finger, \"To get back home...\"\n\n\"What the fuck was I doing?\" I thought to myself. \"What in God's name was I doing? Why did I start to sing? Fuck...\"\n\nAnd there I was, sitting there playing and singing the first part of the \"Golden Slumbers\" melody. I played through the song; I couldn't stop with just singing the first few wwords. I ended, \"Sleep pretty darling, do not cry, and I will sing a lullabye.\"\n\nThe piano echoed the ending of the beautiful melody and as it fell silent, I could hear sniffles coming from the girls as they sat on the sofa behind me.\n\nI turned to them and asked, \"Was that enough?\"\n\n\"Uh huh,\" Marlene sniffled.\n\nEach one of them got up and kissed me before going into the bathroom and redoing their makeup. Marlene was the last one. She walked over to me and kissed my face repeatedly, and said, \"Michael, that was beautiful... You sang... It was absolutely beautiful. Both of the girls grabbed my hand when you began to play, and when you began to sing, the tears just poured down their faces. To say that they were overwhelmed would be an understatement.\"\n\n\"I'm glad that you liked it,\" I said as I got up and gave my sweet Marlene a long kiss. \"Sweetheart, is Dianne alright?\" I asked.\n\n\"She's had a really rough life, Michael. I'll tell you about it later, OK? But, I'll tell you this now, she is different with you... She trusts you and believe me, she doesn't trust any man. There's something about you, Handsome; I keep telling you that and you don't believe me,\" she whispered as her lips lightly brushed across mine.\n\nWe all sat on the sofa chatting about my house and my life. I explained to the girls how I lost my sight when I was twenty-eight years old and painfully began the long road to accepting that I would never see again. They told me how beautiful my house was and spent a lot of time discussing my workshop in the basement. I heard the unbelievable story of how the both of them came to work for Marlene, Ed, and Janet at the firm. I found out that Margie happened to be Marlene's room mate while she was out in California working at the club. It just so happened that Margie also worked there with Marlene, but was left behind when Ed brought her back home. Unknown to Marlene at the time, Ed had promised Margie that he and Marlene would be back for her one day. They kept their promise after Marlene settled back into life at home with her mom and enrolled into law school. She actually moved in with Marlene and her mom until she took a job at the firm and enrolled in school herself. After getting back on her feet, she moved into an apartment of her own. \"I'll let Marlene tell you the rest of the story,\" Margie said as she finished her glass of wine.\n\nDianne however, sat quietly without saying a word. As I looked her way after Margie had finished, she just said, \"Michael, how about if I let Marlene tell you my story, OK?\"\n\n\"Sure Sweetheart, that's fine,\" I said to Dianne as I took her soft hand into mine.\n\n\"OK Michael,\" Margie said, breaking the silence, \"It's time to see what we look like!\"\n\n\"No, that's alright, I already know what you two look like,\" I stammered, trying to get out of what I knew would end up in total embarrassment for me.\n\n\"No way, Michael,\" Dianne chimed in, cheerfully changing the tone of her voice. \"Me first,\" she said as she stood up and took my hand, pulling me behind her to the floor.\n\nI could hear Marlene and Margie giggling behind me as I stood before Dianne. I looked back where Marlene was seated and gave her the \"look\" before Dianne took my hands and placed them on her waist. \"Marlene told us how you did this to her the first night that you met,\" she said with a smile. \"Oh wait, I'm doing this backwards,\" she giggled. Dianne brought me to the loveseat and sat down with me. She raised my hands to her hair. \"This is what you did, right Marlene?\"\n\nMarlene reassured her that was indeed how she started the first night that we met. \"OK, Michael, go ahead,\" she said with a smile. My hands began to drift down the long curly locks of Dianne's hair, past her neck, and stopped at the middle of her back. \"Mmm, that feels nice; do that again,\" Dianne purred. So, I did; I retraced my hands down, letting her soft hair slowly slip between my fingers.\n\n\"What color?\" I asked.\n\n\"Blond,\" she answered, sounding as if her eyes were closed. \"Not bleach blonde, kind of a dirty blond, wouldn't you say girls?\" she asked Marlene and Margie. They must of agreed since she excitedly sat straight. \"Ok, do my face,\" she said next. I heard Margie start to giggle at what Dianne told me what to do next. \"Margie, that's not what I meant... But...\"\n\n\"Enough you two,\" Marlene giggled, \"Don't get my poor baby started.\"\n\nI cupped Dianne's face in my hands and trailed my thumbs across her eyebrows. They were very thin and incredibly soft to the touch. My hands slipped down along the side of her face and met at her chin. She let out a low moan as my fingers lightly danced along her soft skin. I raised my thumbs up to her cheeks and ran them across her face and back to her ears where I felt pierced earings. I let my hands slip down to her long delicate neck. Dianne let out a long, seductive moan; almost a growl. \"Mmm, Michael, that is so nice; I could certainly get used to this,\" she groaned as her head fell back.\n\n\"Michael, I think that you just killed Dianne,\" Marlene laughed as she sipped her wine.\n\nDianne just let her head hang back as my fingers traced around her neck. \"OK, let's get a move on,\" Margie said, \"I'm next and we don't have all night!\"\n\n\"OK,\" Dianne moaned as she awoke from her trance. She stood up and again took my hand and helped me stand up in front of her. She placed my hands on her smooth waist and rubbed them a little against the silky fabric. She started to raise my hands up her sides, pressing them into her as they effortlessly slid up. She suddenly stopped and I felt her body turn the slightest bit, looking over to where Marlene and Margie were seated. \"Can I?\" she asked.\n\n\"Oh geez, go ahead...\" Marlene sighed.\n\nDianne raised my hands up and cupped them over the large braless breasts that adorned her body. I jerked my head around to look at Marlene, shocked at what I felt. \"It's OK, Sweetheart, relax and enjoy what you're feeling, because it is going to be the last time that you feel another woman's breast.\"\n\n\"Hmmm...\" Margie coughed.\n\n\"OK, so you'll feel one more set,\" Marlene sighed with a laugh.\n\nDianne's breasts were beautiful. They were full and firm and most impressively, they were real. Her nipples hardened under my hands and she squeezzed my fingers onto them, assisting me in pinching and rolling them together. My cock was aching in my pants as Dianne continued to press my hands into her. She moaned out loud as I squeezed her nipples one last time. \"Um, they're beautiful, Dianne,\" I stammered, not knowing what else to say or do.\n\n\"Oh god...thank you...Michael,\" she seductively moaned.\n\nI had to remove my hands from her breast before I came in my pants, so I moved them around to her back and felt the soft skin that was hidden under her long curls. My fingers tapped down her back until they reached the material that appeared about six inches above her waist line. I turned to look at Marlene. I felt this before and knew exactly what it was. Marlene laughed and said, \"Yep, it's leopard, Handsome... Dianne's is pink though. She's wearing a white mini skirt, and white five inch heels, just in case you were wondering.\"\n\n\"Hey, that's not fair,\" Dianne stated, \"He was supposed to feel them.\"\n\n\"Oh, go ahead, let him feel,\" Margie said, \"Hurry up though, we have to leave soon.\"\n\nDianne reached back and grabbed my hands, pulling them down over her ass. It was gorgeous to say the least, round, full, and firm, but not as nice as my Marlene's. Nobody's ass could ever be as nice as Marlene's. Dianne's white mini skirt was indeed \"mini,\" as the leather material stopped just below her ass. Shocking me even more, she placed my hands on the back of her legs and pulled them inside her skirt and over the soft skin of her ass. I almost fainted as my hands pressed into Dianne's delectable cheeks.",
        "\"Dianne, stop!\" Marlene yelled. \"That's enough...\"\n\n\"Oh Marlene, it's just my ass, it's not a big deal,\" she continued as she withdrew my hands from under her skirt. \"OK, Michael, feel my legs and shoes before Margie has a conniption,\" she laughed. I ran my hands down Dianne's very toned thighs and calves until they reached her white heels. They were indeed five inches, if not more. They were pointed at the front and covered maybe a third of her foot. I looked up at her and said, \"Very, very nice, Dianne. You certainly are beautiful.\"\n\n\"Oh Michael, thank you,\" she said, smiling as she lifted me up and hugged me tightly. \"You are so sweet!\"\n\nShe led me back to Marlene, who took me in her hands and sat me down next to her. \"Are you alright, Handsome?\"\n\n\"Um, yeah, I think so... Sorry about that,\" I said as I looked her in the eyes.\n\n\"It's OK, Sweetheart, but remember, this is your last time for the rest of our lives,\" she smiled as she pinched my cheek.\n\nI know that Marlene was OK with what just happened because she pinched my cheek. She always pinched my cheek when she teased me. \"Marlene, can you please do me a favor?\" I asked.\n\n\"Sure, Handsome; what do you want?\"\n\n\"Can you grab me a diet coke out of the fridge?\"\n\n\"Need something to cool yourself down?\" she giggled as she got up and grabbed a soda from the refrigerator. I took a long sip after Marlene handed it to me and let out a burp from the carbonation. \"Typical guy,\" Marlene laughed.\n\n\"Oh god, I'm sorry... Excuse me... That came from nowhere,\" I laughed.\n\n\"OK, my turn!\" Margie exclaimed as she stood up and took my hands.\n\n\"Oh geez, I forgot too!\" Margie giggled as she returned me to the sofa and sat down along side of me. We repeated the same process that I had done with Dianne. My hands ran down along her wavey hair, where it ended just above her shoulder line. \"Red,\" she said, letting me know it's color without having to ask. I cupped her face and felt her eyebrows next. They were a bit fuller than Dianne's, but tightly trimmed. I traced my way along her jawline, just as I had done to Dianne, and met at her chin. Tracing my fingers across her cheeks, I trailed back to her ears, each one having double piercings. Her neck was a bit more full, but delicate and smooth just the same. She let out an appreciative moan as my fingers tickled their way around to the back of her neck. I continued down her silky back, and sure enough, the material of her top began six inches above her waist. Again, I looked back to Marlene, who sat and said, \"Do I have to tell you? It's purple though. She's also wearing a mini skirt, but it's black. And yes, she is wearing black four inch heels!\"\n\n\"I didn't know that they made different color leopard prints,\" I said in surprise.\n\n\"Michael, you should see what they have these days,\" Dianne stated. \"Oh Michael, I'm sorry, I didn't mean to offend you,\" she said in an embarrassed voice.\n\n\"Dianne, how did you offend me?\" I asked, not knowing what she was talking about.\n\n\"I said that you should see...\" she answered in a worried voice.\n\nMarlene laughed and explained to Dianne how I spoke, and how I was never offended by the things people said. \"Well, I'm sorry anyway,\" she said in a relieved voice.\n\n\"OK, Michael, time for you to get busy again,\" Margie said as she took my hands and placed them on her waist. \"C'mon,let's go,\" she laughed as she began to guide my hands up her sides and onto her breasts. She was braless, just as Dianne, and her nipples were already protruding through her bodysuit with excitement when my hands cupped over them. Margie's tits were a little bigger than Marlene's, maybe a 34C, but her nipples were quite large and very hard. She let out a long moan as I squeezed my fingers together over the overly sensitive beauties. \"Oh god, Michael, that is so good,\" she whispered. \"Oh yes, keep squeezing them...please...please,\" she begged.\n\nI looked back at Marlene, not knowing how to act. \"Go ahead, it's the last pair that you'll ever feel... Besides mine of course!\" she said.\n\n\"Oh, yes...yes...yes, that's it... Ddon't stop, don't stop...\" she moaned before tensing and falling into my shoulder. I held the two large nipples between my fingers as her orgasm raced through her body. \"Oh Michael, I'm sorry; I didn't mean to do that to you,\" she whimpered as her orgasm subsided.\n\n\"OK, I'm not going to put you through any more,\" Margie said in a blushing tone.\n\n\"Wow, that was so hot,\" Dianne exclaimed, \"I should have gone last instead,\" she laughed.\n\nMargie excused her self to the bathroom after she returned me to Marlene. \"Are you alright, Handsome?\" she asked as I sat close to her.\n\n\"NO, I'm not, Marlene. I never want to do that again; I only want to do that with you, OK? Promise me?\" I said.\n\n\"Michael, I'm sorry, Sweetheart, of course, you'll only do that with me,\" she softly said as her soft hand took ahold of my face. She leaned in and kissed me with her beautiful pouty lips. \"I love you, Michael,\" she whispered in my mouth. \"You're sweating pretty bad,\" she giggled, \"You had a bit of a workout huh?\"\n\n\"Yeah, you could say that,\" I said with a grin.\n\n\"Do you want to see what I have on?\" she asked in a teasing voice.\n\n\"Sure, let's go!\" I enthusiastically said.\n\n\"Excuse us, Dianne, but I'm going to show Michael what I'm wearing before we leave,\" she said. \"We'll be back in the bedroom... See you in a few minutes!\"\n\n\"Have fun... If you need any help...\" Dianne laughed.\n\nMarlene led me back to the bedroom and closed the door behind us. She immediately dropped to her knees and began to unbuckle my belt. \"Marlene, what are you doing?\" I asked as she tugged down my pants next.\n\n\"I was going crazy watching you with the girls,\" she said in a hungry tone, \"And I have to have your cock right now.\"\n\nMy cock leaped out of my shorts as Marlene dropped them to the floor. She didn't waste any time as she took the length into her throat. It was all business; there was no playing, no teasing, no licking the head; just a straight, hungry blow job. She sucked furiously on my cock while taking my balls into her soft hand. The slurping noises filled the room as she continued to bob her head up and down on my shaft. \"Sweetheart, yes, yes, that is so good,\" I quietly moaned. My orgasm was approaching fast as Marlene tightened her mouth around my cock and sucked harder. I held onto her head as my balls tightened in her hand. She began to moan, realizing that a load was about to fill her mouth. My body tensed as jets of cum began to shoot out of my cock into Marlene's mouth. I could hear her trying to swallow as fast as she could as cum continued shooting from my shaft. \"Mmm, mmm, mmm,\" Marlene moaned as she swallowed repeatedly. Her hand reached around and grabbed my ass, pulling me deeper into her throat. I have no idea how she did it, but every blow job that she gave me ended with her pulling my cock deeper into her mouth. She sucked every last drop from my cock before releasing it and sitting back on her heels as she breathed heavily. \"Michael...that...was so...unbelievable,\" she gasped. \"I love your cock. I love the feel of it in my mouth, and feeling you shoot your load into my throat. I want to do it again tonight...\"\n\nI was trying to catch my breath as Marlene's words echoed through my head. \"Sweetheart, you can do that any time that your little heart desires,\" I panted.\n\nMarlene gave my cock one last suck, the way that she always did before pulling my pants back up. I reached down to help her, tucking in my shirt and buckling my belt as she raised up from the floor and gave me a beautiful, long, sensuous kiss. \"I love you so much, Michael... I just absolutely adore you,\" she whispered. \"By the way, I'm wearing the same leopard prinnt bodysuit that I wore for our night out to dinner, but I have a black mini skirt on too!\"\n\nMarlene smiled as she took my hands and ran them down the soft leather material. She also brought them up under her skirt to the leopard covered cheeks of her ass. \"I have my black four inch heels on just in case you were wondering!\"\n\n\"Marlene, you are so beautiful and so, so sexy. I am at the happiest point I have ever been in my life, Sweetheart, and it is all because of you,\" I softly whispered as I kissed her tender lips.\n\n\"The girls and I coordinated our outfits together in my office one night last week,\" she whispered in my ear. \"We really did have a good time doing it. We laughed and giggled at some of the outfits that they had to offer on the website. We were going to go a bit more risque, but we settled on this instead. There were some other things that also caught our eyes,\" she seductively whispered in my ear. \"C'mon, we better get back out there before the girls try to knock the door down!\"\n\nAs we stepped from the bedroom and walked into the living room, Dianne said, \"Did you like what Marlene has on, Michael?\"\n\n\"Um, yeah, it's really sexy,\" I said with a shit eating grin pasted across my face.\n\n\"Look at his face,\" Margie laughed. \"You look like the cat that ate the canary!\"\n\n\"Actually, Marlene looks like she might have been eating something herself!\" Dianne teased.\n\n\"Hey, the two of you don't exactly look innocent,\" Marlene giggled.\n\n\"What?\" I asked.\n\n\"I'll tell you later, Handsome,\" Marlene murmured. \"Are you girls ready to go?\"\n\nAs the girls gathered themselves, made their last minute visits to the bathroom, and placed their wine glasses in the dishwasher, I brought Misty out for her last call of the night. For once, she quickly did what she needed to do and bounced up on the deck and headed for the door. She ran to the kitchen cabinet, just as she did every other night, and waited for me to grab her bone. She gently took it from my hand and scampered back to the spare room.\n\nThe girls were ready and soon we were off to the club to dance the night away! As we entered the club, the sound of the heavy bass was prevalent. I walked arm in arm with Marlene, with Dianne and Margie following close behind. In all of my life, I never had the experience of walking into a club, yet with three beautiful women, and even more so when they were all dressed in leopard print bodysuits, mini skirts, and high heels. I could hear the sound of men whistling from every angle as we entered the main part of the club where the dancing was taking place. Dianne leaned into me from behind and whispered in my ear, \"That's what those assholes are going to be doing while they're jerking themselves off tonight!\"\n\nI laughed as we continued walking inside, feeling her tousel my hair after backing away with a laugh. Marlene told me that the waitress that we had before was waving us over to a table, so we made a beeline over to her.\n\n\"Hey guys! Great to see you again,\" she said in an excited voice. We gave our greetings and introduced her to Margie and Dianne. She took our orders for drinks after we settled into our seats.\n\n\"Michael, are you ready to do some dancing?\" Margie yelled across the table.\n\n\"As ready as I'll ever be,\" I laughed, attempting to yell to her over the loud music.\n\nMarlene leaned over and said, \"You probably should have ordered regular Coke because you're going to need the extra sugar!\"\n\nI placed my hand on my forehead and leaned on the table, knowing that it was going to be a long evening. The waitress was back with our drinks and placed them in front of each of us. As she placed my Diet Coke on the table, she took my hand and put it on the glass so I would know where it was. I looked up at her with a smile and thanked her, pulling out money to cover the bill for the drinks, including a nice tip. \"Michael, that's the last time that you're paying tonight,\" Marlene said as she thanked me with a soft kiss and a big smile.\n\nWe sat and chatted as best we could over the volume of the music before Margie suggested that it was time to get on the dance floor and give me a little lesson on real dancing. I was so fucked; I knew that I was going to get absolutely pummeled out there. Marlene wrapped my arms around her gorgeous waist and held them tightly as we all worked our way onto the floor. Well, it didn't take long before there were hips, asses, breasts, and hands rubbing all over me as the girls let loose. Marlene placed my hands on her gyrating hips after I began to drift off, as I lost my location in front of the girls. \"C'mon, Handsome, get those hips moving,\" she laughed as she rested her arms on my shoulders and stepped closer. I could feel the heat from her body as she began to grind into me. She twisted and ground her ass into my crotch, moving her ass to the beat of the music. I felt Dianne's large breast push into my shoulders and her crotch pressed into my ass as she sandwiched me into Marlene. \"Christ, I thought that they would give me a little time at least,\" I thought as I pictured myself disappearing between them.\n\nAs they broke away, Margie stepped in and rubbed against me as she twisted and turned around my body. \"C'mon, Michael, show me what you have,\" she laughed as she brushed her long nails through my hair. To say that I didn't have a snowball's chance in hell would have been an understatement! The music continued to pound through the speakers as the girls put on a show. Even in my mind, I couldn't picture the movements of what was going on in front of me, behind me, or against me!\n\nI heard a, \"C'mon Mike,\" come from the speakers and I stopped. The DJ knew me, but I had no idea who he was. Marlene grabbed my hands to get me started again before jumping behind me and wrapping her hands around my chest as she rubbed her fingers over my nipples. She laughed as Margie backed into me with her wiggling ass and pulled my arms around her waist. It actually helped me out, since I could now hold onto her and follow her movements, or at least try to. As I floundered my way through the song, I thoughtt of what Marlene had done to my poor brother-in-law, Matt at the wedding. \"Karma,\" I thought with a smile. I only wished Matt could have witnessed this trio of women around me!\n\nThe song finally ended, and was instantly followed by another. I asked Marlene if she could get me back to our table so I could grab a drink. She took my hands and placed them on her hips and wiggled her way off of the floor with me close behind, hanging on for dear life! As we got back to the table, I sat and grabbed my glass, taking a quick sip. My breathing was still heavy and the sweat was pouring down my back. \"You made it through the first one,\" Marlene laughed. \"You did great!\"\n\n\"Marlene, you're right; they're trying to kill me out there,\" I laughed, still breathing heavily.\n\n\"Michael, you should have seen their faces; they had smiles that I've never witnessed on either of them before,\" she said, \"And it's all because of you!\" she continued as she kissed my lips again and again.\n\n\"I'm glad that they're having a good time,\" I said with a big smile. \"I love you, Sweetheart,\" I said as her lips continued to press into me.\n\n\"Mike and...Marlene, right?\" a male voice said at the end of the table.\n\n\"Oh my god,\" Marlene gasped.\n\n\"What?\" I asked.\n\n\"Michael, it's the DJ from the wedding!\" she exclaimed.\n\n\"Hey guys, I'm Johnny; I DJ here all week, and do weddings on the weekends. How are the both of you?\"\n\nI stood up to shake Johnny's hand, telling him that I was shocked to hear my name over the speakers. He laughed and told me that I looked like I was in serious trouble out there. I leaned over to say something in his ear as the music continued to blast throughout the club. \"Johnny, do you have a business card you can give me?\" I asked. He put his hand on my shoulder and asked if Marlene and I were getting married. I told him yes, but wasn't sure when it would be. He pulled a card from his front shirt pocket and slipped it into mine. \"Johnny, can I ask you one more thing?\"\n\n\"Yeah, sure, what can I do for you, Mike? Besides take one of these gorgeous women off of your hands,\" he laughed.\n\n\"Yeah, I could use some help here,\" I laughed. \"Do you think that you could play me a song if you get a chance tonight? That's if you get a chance to slow the music down,\" I added.\n\n\"Anything you want,\" Johnny replied.\n\nI told him my request before he said that he had to get back to his booth. He gave Marlene a kiss and told her that it was nice to see her again before patting me on the back and walking away.\n\n\"What were you talking to him about?\" Marlene asked as I sat back in my seat.\n\n\"Music,\" I said with a grin.\n\n\"Michael, I know that look very well by now, and I know that you're up to something once again,\" she said with a smile as she grabbed my cheek and gave it a light squeeze. I loved when she squeezed my cheek; it gave me comfort and I thought that it was an endearing symbol of her trust.\n\n\"Utt oh, the girls are trying to fend off some guys out there,\" Marlene said in a bit of a worried voice.\n\n\"C'mon, let's go,\" I said, \"You dance with one of them and I'll take the other,\" I continued as I got up from the chair and took Marlene's hand.\n\nAs we entered the dance floor, Marlene handed me off to Dianne, while she danced with Margie, pushing the sharks away for the moment. \"Thanks, Michael,\" Dianne yelled as she took my hands and placed them on her hips. Her movements were dizzying as they rotated and gyrated to the music. She placed her arms on my shoulders the same way that Marlene had, and started playing with my hair. I could feel her nails caressing the back of my neck as she playfully danced in front of me. She turned around and ground her ass into me and threw her head back along mine as my overly excited cock pressed into her. She let out a long moan as she continued wiggling her beautiful body against me. Dianne held my arms tight into her stomach, squeezing my hands into her as a sign of her comfort and happiness. The song soon ended and we all made our way back to the table for a rest. Marlene took my hand and kissed my salty lips before placing them around her waist and walking to the table. \"Thank you, Handsome,\" she whispered in my ear, giving it a lick and a little bite before she sat down.\n\nI had every right to cum right there in my pants with everything that had gone on so far that night, but for some reason, it didn't happen. The girls thanked both me and Marlene as they sipped their drinks. \"We're having so much fun,\" Margie yelled. \"I've been wanting to do this for so long!\"\n\n\"Yeah guys, this is so much fun; I love it!\" Dianne exclaimed. \"And Michael, you're not bad out there! You have all of the moves!\"\n\n\"Please Dianne, don't try to paint a pretty picture of my dancing abilities,\" I laughed.\n\n\"Michael, compared to some of the guys out there, you are really good,\" Margie chimed in.\n\n\"I think that the both of you should get your eyes checked,\" I laughed as I inconspicuously placed my hand on Marlene's bare thigh. \"Mmm,\" I moaned with a grin.\n\n\"You better watch yourself,\" Marlene giggled as she leaned her head against my shoulder.\n\n\"I would love to watch what my hands are on!\" I whispered as I lightly rubbed the tender skin of her thigh.\n\n\"Hmm, maybe we should get going soon,\" Marlene seductively said as she breathed in my ear.\n\n\"Hey you two, knock it off; you're getting me all hot and bothered over here,\" Dianne laughed.\n\nAfter some bantering back and forth with Dianne and Margie, we decided to go back to the floor and dance a bit more. All three girls switched on and off with me, taking turns tormenting me with their bodies. I was holding my own rather well now, and became more relaxed as the night went on. As the third song ended, Johnny, the DJ announced that he was going to slow the music down and the next song would go out to a very special man and his lovely fiance. I instantly took Marlene tight into my arms as the song began. A beautiful solo piano began the introduction to the song and then the female voice started to sing, \"There are places I remember, all my life, but some have changed.\"",
        "Marlene melted into me and began to cry. Michael... You are so romantic, so, so romantic... This is absolutely beautiful.\"\n\nI never heard the version that Johnny had selected, but it was slower and incredibly romantic to dance to. Marlene and I swayed to the beautiful song and our bodies became one as the haunting sound of the piano echoed throughout the room. \"I love you, Sweetheart,\" I whispered as we gracefully moved together. \"I'll never stop.\"\n\nMarlene reached up and began to play with my hair as the tears streamed down her cheeks. \"I love you too, Michael; you are all that I have ever wanted,\" she whispered, sniffling in my ear.\n\nAs the song came to an end, another began. \"There's a spark of magic in your eyes,\" the male voice began to sing. \"Michael, it was Johnny the first time that we were here, wasn't it?\" she asked in surprise.\n\n\"Yes, it must have been,\" I replied as we graced the floor in fluid movements to the very first song that Marlene and I ever danced to.\n\n\"Did he say fiance?\" she asked with a smile.\n\n\"I don't know, I didn't hear that,\" I said with a grin slapped across my face.\n\n\"You did so, Michael; stop making pretend that you didn't hear it!\" she giggled.\n\n\"Huh, what did you say?\" I asked with a laugh.\n\n\"You are in so much trouble when we get home,\" she whispered in her best sensual, and seductive voice.\n\nAs the song ended, Marlene kissed me softly, keeping her pouty lips pressed onto mine for what seemed like an hour. \"I should have used the Duct tape!\" I said with a big smile. Marlene laughed as she led me off of the floor and back to our table.\n\n\"Ut oh, the sharks are back,\" she said. \"They're sitting in our seats trying to talk to the girls.\"\n\nAs we approached the table, I asked the two men if they could get up from our seats. There was no response. One of them asked a question to the girls, ignoring my request. \"Excuse me guys, you're in our seats,\" I said in a louder tone. Again, there was no response. I looked over towards Dianne and Margie, asking them if they had any interest in having a conversation with the two men. They told me no and that they wouldn't leave them alone. \"Get the fuck out of our seats,\" I said to the closest guy, pointing my finger towards his voice.\n\n\"What, do you think you're some kind of badass wearing those sunglasses in here?\" the guy said.\n\nI took off my sunglasses and slammed them into the table, breaking the handle off one side and looked him in the face. \"How would you like to get your ass beat by a blind man,\" I said in a direct, steady voice.\n\n\"Michael, stop,\" Marlene said as she grabbed onto my arm.\n\n\"Sorry dude, I didn't know,\" the guy said as I heard him begin to slide his chair away from the table.\n\n\"Jimmy, Frankie,\" voiced through the speakers.\n\n\"What? Do you have to get your little leopard girlfriend to defend you?\" the other guy asked as he continued to sit in Marlene's chair.\n\nIn one quick move, my left hand was on the table and I leaned across, ready to take a swipe at the fucking prick. I felt a very large arm sweep me up from around my chest. \"Easy there, tiger,\" the man's voice said as he placed my one hundred and thirty-five pounds of pure masculinity down onto the floor! \"You two gentlemen, get your asses up and get out of here,\" he firmly said after releasing me.\n\n\"That skinny little bastard started with us,\" the guy whom I was about to kill said.\n\nDianne and Margie jumped from their seats and told the guy that he was full of shit and that he and his friend wouldn't leave them alone. As I was told later on by Marlene and the girls, he was picked up out of his seat by the other bouncer and thrown out of the club along with his friend.\n\n\"Michael, please, don't do that again; I don't like seeing you like that,\" Marlene cried into my chest.\n\n\"I'm sorry Sweetheart, but I'm not going to let those guys, or any other guy talk to you that way,\" I said as I held her shaking body. \"I promised that I would never let anyone hurt you and I meant it.\"\n\n\"Are you alright there, tiger?\" the first bouncer, Frankie said as he returned to check in on us. \"You won't have to worry about those two anymore, they're, let's say, gone for the night.\"\n\nI thanked Frankie, telling him to thank the other bouncer for me also. \"Wow, Michael, you don't take any shit from anybody, do you?\" Dianne asked in shock.\n\n\"No Dianne, I don't put up with assholes,\" I replied. \"I'm sorry if I upset you girls.\"\n\n\"Oh no, you don't need to apologize to me... You're a real man; a man that will stick up for the woman that he loves. And her girlfriends too!\" she laughed, lightening the spirit around the table.\n\n\"Are you alright, Sweetheart?\" I asked Marlene.\n\n\"Yes, thanks Sweetie, but you're still in trouble when we get home,\" she said with a hesitant smile to her voice as she pinched my cheek. \"Do you want to go soon?\"\n\n\"Whenever you girls are ready.\"\n\n\"Let's dance one more time,\" Dianne exclaimed.\n\nI turned to Marlene and asked her if she would mind if I sat this one out so I could calm down a bit. \"Michael, I'm not leaving you here by yourself,\" she said before asking me to go out and dance.\n\n\"No, please Sweetheart, you and the girls go out and have fun for awhile. Come back and get me after the next song ends and I'll come out then,\" I said with a forced smile.\n\n\"OK, but I'll be right back to get you,\" she said as she kissed me and left with the girls.\n\nI sat at the table, not believing what I had just done. My body began to shake as my nerves released and the tension eased from my body. \"That was a really nice thing that you did,\" the young female voice said as she sat in front of me. \"I'm Jeannie, your waitress.\"\n\nI held my hand out to greet her. \"Thank you, I would have gotten my ass kicked, but not before one of them left with sore testicles,\" I said with a grin.\n\nJeannie laughed out loud and complimented me on my bravery and the way that Marlene and I acted around each other. \"Mike, you should see her face while you are dancing with her; she looks like she is the happiest woman in the world. You two are so special together.\"\n\nThere it was again, someone telling me that Marlene and I were special together. \"Thank you, Honey, we'll be married by this time next year,\" I said with a smile.\n\n\"Oh, that is so nice!\" she said in a high pitched voice. \"You guys are still going to come back here to dance, aren't you?\" she continued with excitement in her voice.\n\n\"According to Marlene,\" I began, \"We'll be out once every month,\" I laughed. \"That's if I can walk after tonight!\"\n\nJeannie got up and kissed my forehead, telling me that she had to get back to work. Marlene arrived back and grabbed my arm, dragging me out onto the dance floor for the last couple of songs for the night. It was the same ritual out on the floor, the girls wiggled and gyrated around, behind, in front, and against me as the music thumped through the speakers. I was sandwiched from every angle, twirled, and ground into as the girls laughed and danced the rest of the night away. By the time they were finished with me, they basically had to carry me from the dance floor, with Marlene and Dianne holding each of my arms as they guided me back to the table. We sat for another half hour, trying to regain our strength while letting the sweat dry from our bodies.\n\nThe girls paid the final bill before we began snaking our way through the crowd and out to the car. Johnny greeted us as we were leaving, saying his goodbyes to me and the girls, while apologizing for the unfortunate event that took place earlier in the night. \"Mike, you're a stud,\"he said as he patted my back. He presented a gift card to Marlene, telling her that the management wanted to have us back for dinner on their behalf. Marlene told him that it wasn't necessary for them to do that, but Johnny insisted that we all come back to visit.\n\nWe walked out to Marlene's SUV, as the girls repeatedly told us what a great time they had. \"That was the most fun that I've had in a long, long time,\" Dianne exclaimed as we piled into the SUV.\n\n\"Oh my god, thank you guys so much,\" Margie added, \"That was so, so much fun! We have to do that again!\"\n\n\"You girls are going to kill me,\" I groaned. \"It was a lot of fun though!\" I added.\n\n\"Well, we'll all be going back for dinner together,\" Marlene said, \"This gift certificate is for a hundred and fifty dollars! Do you believe that, Michael?\"\n\n\"That was really nice of them,\" I replied with a moan.\n\n\"Oh, is my poor baby sore?\" she cooed. \"I'll make you feel better when we get home,\" she said in a pampering voice while patting my thigh.\n\n\"Can we help?\" Dianne and Margie asked from the back seat.\n\n\"Nooo... I can fix his problem alone,\" Marlene laughed.\n\n\"Oh Marlene, you're no fun,\" Dianne laughed.\n\nThe girls met at Marlene's house in order for them to drive together. As we pulled up to her house, we got out of the SUV and gave each other hugs and kisses goodbye. I received more hugs and kisses from Dianne before she left. \"Thank you so much, Michael, you are the absolute sweethest man that I've ever met,\" she tearfully said as she hugged me for the last time.\n\n\"You're welcome, Sweetie, be careful going home, OK?\"\n\n\"OK,\" she sniffled.\n\n\"Good night, Margie,\" I said as I gave her a last hug and kiss goodbye.\n\nAs the girls pulled away, Marlene asked if I would go in the house with her to check in on her mom. We entered to a quiet house, with the exception of the faint sound of a Distant TV. \"I'll be right back, Handsome, I just want to check on mom; I think that she fell asleep watching TV.\"\n\nI sat on the sofa while Marlene walked back to look in on her mom. She returned in a few minutes saying that her mom was fast asleep. She sat down next to me and fell into my arms. \"It looks like you need to get a new pair of sunglasses,\" she softly said as she nuzzled into my chest. \"Thank you for standing up for me and the girls tonight. You gave me a bit of a scare though.\"\n\n\"I'm sorry, Sweetheart, I didn't mean to upset you, but as I told you before, I'll never let anyone hurt you again.\"\n\n\"I know, but I never saw you that way, you've always been smiling and happy. It just brought back...you know, things,\" she softly whispered.\n\nI could feel her soft eyes staring up at me as she lifted her face from my chest. I ran my rough hand over her cheek and gave her a caring smile. \"How about if we go shopping for glasses tomorrow,\" I suggested, guiding her away from the painful thoughts of her past.\n\n\"Pizza at the food court first?\" she asked with a smile.\n\n\"Now that, my dear, sounds like a plan,\" I replied with a smile. I ran my hand roughly over her hair, playfully tossing it around in disarray.\n\n\"Hey you, stop that; you're ruining all of my beauty!\" she laughed.\n\n\"Marlene, whether your hair is perfectly brushed, or you look like you just walked in from a hurricane, you'll always look amazing and sexy!\" I replied.\n\n\"How about if you take your amazing fiance to bed!\" she giggled.\n\n\"Fiance?\" I asked.\n\n\"That's what Johnny said when he announced the song that you requested,\" she shrewdly replied, bringing out the lawyer within her.\n\n\"Oh brother, I'm screwed no matter what I say or do, aren't I?\"\n\n\"Yep, it's about time that you realized that!\" she giggled. \"Now, how about bringing me back to bed and making slow, passionate love to me,\" she purred.\n\n\"Here? In your mom's house? In your bedroom?\" I asked in disbelief. \"But your mom...\"\n\n\"But nothing,\" Marlene seductively whispered in my ear. \"You'll be the first and only man to ever fuck me in my bed,\" she added in a heavy breath.\n\n\"But...\" I stammered.\n\nMarlene stood up from the sofa, took ahold of my hand and led me down the hallway to her bedroom. I could smell the scent of various perfumes which gave the room a sweet, sexy atmosphere. As she led me to her bed, she suggested that I remove her mini skirt. \"The zipper is in the back,\" she giggled, knowing that I had no clue where to start. She placed her arms on my shoulders, hanging them carelessly behind me, and pressed her lips onto mine as I slid the zipper down. The black leather skirt dropped to the floor as my hands took ahold of her beautiful, leopard covered ass. The material tightly graced the curves and vally of her beautiful backside. A smile grew across her face as my hands squeezed and caressed her firm cheeks. I reached my right hand around and took her left breast into my palm. Her nipple was straining through the thin material. The feeling of the hard nipple and crinkled areola, along with the silky leopard print of her bodysuit would be forever etched in my mind.\n\nKnowing that I caused the arousal of a beautiful woman would have me wanting for nothing else. \"Marlene, you are so beautiful,\" I whispered as I squeezed her ass and nipple.\n\n\"Mmm, thank you, Handsome,\" she moaned. \"Keep pinching my nipple, Michael; keep doing that...yes...harder,\" she whimpered as she ground her pussy against my pants. I turned Marlene around and cupped her tits in my hands, pressing them together and lifting them upwards. My fingers held her nipples as they continued to firmly roll and pinch them together. \"Oh yes, yes, keep...squeezing...them, harder...harder...yes, Michael, don't...stop,\" she gasped as she ground her ass into my hard cock. Her breathing was becoming heavy and rapid as my fingers continued their actions on her nipples. She let her head fall back into my shoulder, opening her neck for my lips to lavish. Marlene's body stiffened as I sucked the tender skin of her neck into my mouth. \"Oh, Mich...eal, I'm...coming...yes...yes, I'm com...ing...so...hard,\" she cried as her hand dropped to her covered pussy and rubbed it through her orgasm. She fell limp into me as her legs buckled beneath her. I quickly reached under her arms to support her weight and gently guided her to the bed where she collapsed in heavy breaths.\n\nI sat on the edge of the bed next to her, as she laid curled up and shaking. I rubbed her back until she regained her strength and ability to speak. \"Michael, wow, that was pretty strong,\" she said as she turned over and curled up into me. I eased her back onto the bed before removing my clothes. I slid onto the bed and snuggled behind her, wrapping my arm around her and squeezing her tightly. \"Do you mind if I take off that beautiful leopard bodysuit?\"\n\nMarlene reached between her legs and released the snaps. She sat up and I aided her in lifting the stretchy material from her body. Throwing it to the side, she backed into me as I laid back down waiting for her. I grabbed my cock and guided it between her thighs and up to her pussy as she spread her legs for me. I slid the head along her moist lips, letting it sink in a bit deeper with each stroke. Marlene moaned softly as the head began to disappear between her velvet lips. She reached back and grabbed my ass, encouraging me to slide into her. As my cock eased into her hole, Marlene let out a long, sultry moan. As I reached the halfway point, I withdrew back to the head before gliding easily into her deepest depth. My pelvis pressed into her soft ass as my cock bottomed out inside her.\n\n\"Yes, Michael, that feels so good... Fuck me slowly... Slowly...\"\n\nI began a very slow, rhythmic pace, pulling out inch by agonizing inch, giving several short strokes before sliding in deep, feeling the walls of her pussy as they enveloped my entire length. Marlene's fingernails were digging into my ass as I entered her again and again. Her ass pressed hard against my pelvis, grinding into me every time that I hit bottom. \"Oh, yes...just...like that,\" she whimpered. \"Just like...that...\"\n\nI wrapped my arms around her and pulled her close into me as my hands caressed her tits. Placing a finger in her mouth to suck before returning it to her nipple, I slid it around it's beautiful hardness. Marlene moaned softly and began to push back into me with more force. I knew that she was getting close to climaxing. Her sensitive nipples were the turning point from soft love making, to aggressive and hard fucking. \"Yes, Michael, fuck me harder... Do it harder now,\" she begged as her hands cupped over mine and began to press them hard into her tits. I began to quicken my pace as my pelvis began to make light slapping noises against her ass. \"Oh yes, I'm coming, yes, I'm going to come again,\" she whimpered as she assisted me in pushing her tits together. Marlene forced her chest out as she pressed hard against my cock and began to tremble. Her hand reached down and grabbed my balls, pulling them up against her clit. I buried my cock deep inside of her as her pussy spasmed around it, sending another orgasm racing through her body. \"Oh god, yes, Michael, god yes, I'm coming on your cock,\" she groaned.\n\nMy cock began to twitch against the wals of her pussy as my orgasm began to rumble in my balls which had tightened in Marlene's warm hand. \"I'm coming, Sweetheart,\" I whispered in her ear. \"Oh God, I'm coming, Marlene,\" I moaned as the jets of cum began racing into her pussy. My hips jerked and pressed harder into her as the cum continued to surge from my shaft. I squeezed Marlene's tits harder as the final spurts of cum drained into her depth. Our breathing was heavy as we fell limply into the soft mattress of Marlene's bed. Her pussy was still contracting around my cock as we silently laid against each other. Her tits were straining under my grip as I began to move my cock in and out of her once again. Marlene moaned softly, bringing her fingers to her clit and circling it'ss sensitive skin. She worked her nub more agressively as I squeezed her tits together. Suddenly, her body began to spasm and a long gasp came from her throat as she orgasmed once again with more intensity. She couldn't take any more, and broke away from my grasp, rolling onto her stomach, releasing my still hard cock from her pussy. She screamed into the comforter as her third climax of the night ssurged through her body.\n\nI waited for a minute before gently placing my hand on her back. She moaned softly into the mattress again as her body continued to quiver. It took a couple of minutes before she rolled back into me and kissed me with a passion and hunger that I never experienced. She caressed my hair as her tongue twisted and curled in my mouth. Her soft lips slid effortlessly against mine as she continued to tug and play with my hair. \"Mmm, I love you so much, Michael; I absolutely love you so, so much,\" she moaned in my mouth.\n\nAfter pulling her lips away, Marlene dropped down and took my cock into her mouth and sucked the entire length into her throat. She caressed and squeezed my balls as her head bobbed up and down my vein textured dick. She paused at the head, swirling her tongue around it before rapidly sucking it between her lips. Her hand released my balls and grasped the base of my shaft, jerking and twisting it as she continued to feast on my head. I could feel my balls begin to tingle, signaling another orgasm. Marlene felt my cock grow in her mouth and began to jerk me off faster as her tongue continued it's assault on my head. As the first spurt of cum shot from my cock, she released it from her lips and pointed it to her tits, switching from one to the other as the shots of hot cum splattered against them. \"Oh Michael, that is so good, I love to feel your cum on my tits.\"\n\nMarlene continued to rub my head around her areolas and nipples as the last dribblets painted her breasts. She cleaned my cock with one last suck into her throat. \"Michael,\" she gasped, \"I'm rubbing your hot cum into my tits. It feels so good, so warm, so sexy,\" she moaned. \"Michael, you know how I love to see how your cum makes my tits so shiny, don't you?\" she seductively asked. \"I'm going to feed them to you next; I want you to lick my tits and suck them into your mouth. I want you to suck them clean...\"",
        "Marlene climbed on top of me and began to slide her tits across my face. As in the past, I stuck out my tongue in an attempt to catch a breast in my mouth. \"Do you want them, Michael? Do you want my nipple in your hot mouth? Do you want to suck my cum coated tits?\" she teased while tracing her nipples over every inch of my face.\n\nAs I laid there with my mouth gaped open, waiting for Marlene to drop her tit inside, I grabbed her back and lurched my face up to grasp ahold of one. My lips clamped down on her breast and I sucked it hard into my hungry mouth, tasting the remnants of my cum. Marlene groaned as her head fell forward. She reached behind my head and held it against her tit as I licked and sucked the beautiful flesh. I switched to the other breast which was dangling down, waiting to be taken. I sucked the nipple and licked around her areola before slipping the entire breast into my mouth. Marlene gasped and continued to encourage me to suck her harder as her pussy began to grind against me in short, rapid thrusts. It wasn't long before Marlene achieved another short, strong orgasm. She collapsed and her tits pressed hard into my face. I was in absolute heaven as the feeling of her breasts smothered me. I mumbled a sentence while under the confines of her tits.\n\n\"What was that?\" Marlene giggled as she lifted her breast from my face.\n\n\"I said, how was that for your first time having sex in your bed?\"\n\n\"Not bad for the first time,\" she teased, tickling my sides as she sat on top of me.\n\n\"Not bad? Not bad?\" I laughed in a questionable voice. \"Maybe it's your bed, because I recall hearing a lot of moaning and begging!\" I laughed again.\n\n\"Oh Michael, it certainly wasn't my bed, it was amazing, simply amazing... It gets better every time that I'm with you. You make my body feel things that it never felt before,\" she said in a sensual voice, while leaning into me and kissing me softly.\n\nWe laid together for awhile and talked about the night's events before rising up and getting dressed. Marlene checked in on her mom one last time before closing her bedroom door and making her way down the hallway and grabbing her purse. \"I'm staying over, OK?\" she asked.\n\n\"Yes, sure, Sweetheart. You know, you don't have to ask if you can stay over, you can just stay,\" I said, stepping behind her and giving her a hug as she scribbled her mom a note and left it by the coffee maker.\n\n**********\n\n********\n\nThe days passed quickly into the month of November and soon Marlene and her mom were stopping at my house to pick me and Monica up to go to my mom's house for Thanksgiving dinner. It would be the first time that Mrs. Cassidy met Monica and the rest of my family. My daughter, Monica, and Marlene's mom sat in the back of the SUV chatting about Monica's studies at the university and her plans for the future as we continued on our way.\n\nAs we entered my mother's house, We found the dinner tables stretching from the dining room, and into the living room of my mom's house. All twenty-eight of us sat down for a very special Thanksgiving dinner. Marlene's poor mother was overwhelmed by the size of my family and the amount of food on the table. We held hands with each other, as we gave thanks for all that we had, for our health, and for the very special people in our lives. I held my precious Marlene's hand and squeezed it tightly during our prayers of thanks, kissing her after they ended. My mom gave the toast to family, and especially to it's newest members. I heard Marlene sniffle as we lifted our glasses, clinging them into each other before taking a drink. The chatter around the table was vibrant, as the food was passed and the plates were filled. Talk turned to laughter as stories were told about the things we did when we were young and our mom never knew about. The laughter grew as my brother-in-laws relived Marlene and Matt's dance at the wedding. Matt fended off the insults as the laughter increased. Marlene defended Matt, saying that he did a great job on the dance floor. She ran around the table and gave him a kiss, telling him that he could be her dance partner anytime he wanted. \"That would be great,\" I said, \"We could always use another laugh!\"\n\nMarlene slapped my back, telling me that if I didn't stop, she would take me out on the dance floor and teach me another lesson herself. The laughter and chatter continued through dinner, as the sound of knives cutting turkey, and forks scraping the plates filled the room.\n\nAs dinner wound down, the men cleared the table while the girls filled the dishwasher and packed up the leftovers. The two matriarchs, my mom who had just turned eighty-six, and Mrs. Cassidy, who was a feisty seventy-eight, sat at the head of the table discussing their lives. They discovered that they had both worked in Philadelphia when they were younger, but at different banks during the nineteen-eighties and nineties.\n\nPies of all types were placed on the table, and coffee was served to those who wanted it. How people could eat dessert after devouring such a large amount of food was hard for me to conceive, but nonetheless, pumpkin, pecan, and cherry pies were sliced and served. For those who didn't care for pie, there was cheese cake, double chocolate chip cookies, and the giant cannolis that Marlene had purchased at a famous Italian bakery in the city. The atmosphere in the room was just perfect as Marlene's mom got to know most of my family as they sat and chatted away. Marlene and my daughter, Monica had a very long discussion with a few of my sisters and nieces about God knows what. Most likely shoes! They giggled and laughed at the topic of conversation while most of the guys sat and caught the end of the football game that was being televised.\n\nAfter a couple more hours, it was time for us to pack up and get back home. Hugs and kisses were given to all as we made our way to the front door. My mom and Mrs. Cassidy said their goodbyes, promising to call each other and get together before Christmas. I leaned down and kissed my mom, thanking her for everything that she did. I told her that I loved her before handing her over to Marlene. My mom adored Marlene and was so relieved to see me the happiest that i've ever been. We yelled our goodbyes again as we walked out the door together. Mrs. Cassidy talked the whole way home, still not realizing just how large and nice my family was. She laughed at the conversation that had gone on around the table during dinner and mentioned how much she ate time after time.\n\nMarlene held my hand tight as her mom happily talked during our short ride home. That Thanksgiving will be one that I will remember forever.\n\n**********\n\n**********\n\nIn five weeks, Christmas would be here, and Marlene and I were making plans on how we wanted to spend it. I told her that I didn't have to worry about going anywhere because my family went to their in-laws for Christmas dinner, and Monica went to her grandparents on the other side. \"Michael, have you been spending Christmas alone?\" Marlene asked.\n\n\"Yeah, kind of.\"\n\n\"That's horrible,\" Marlene gasped as she grabbed my hand. \"Well, you'll never, ever have to spend another Christmas alone,\" she smiled, giving me a soft kiss on the nose. \"And what do you want Santa to bring you, little boy?\" she seductively asked.\n\n\"I don't need anything, he brought me my gift back in July,\" I grinned.\n\nHe did, my gift was delivered to me on that warm July evening when Misty and me were sitting on my front steps. There would never be another thing that I would ever ask for. There was nothing else that I would ever need.\n\n\"But, you must want something, little boy,\" she cooed.\n\n\"Well, maybe Santa will surprise me with something that she, I mean he thinks I will really enjoy,\" I replied. \"I love when Santa surprises me!\"\n\nMarlene let out a little giggle and said that she would have to relay the message to Santa. I leaned forward on the sofa as she rubbed my back. I moaned out loud, a long, drawn out moan. \"There's that big old bear again,\" she giggled as she continued to expertly work over the muscles in my back.\n\n\"What do you want from Santa, Marlene?\" I asked with a moan.\n\n\"Hmm, I don't know, I like surprises too! Maybe something sparkly to decorate my finger!\" she suggested excitedly.\n\n\"Is that right?\" I responded with a laugh.\n\n\"Yes Santa, that's right,\" she responded with a smile to her voice.\n\nHow I so much wanted to give Marlene a ring for Christmas, but I had other plans for that. I felt terrible knowing that she wouldn't be opening a small box containing a ring, but it wouldn't be too much longer when she would! I couldn't wait to go out and shop for Marlene's gifts. I loved surprising her with things and I would finally celebrate Christmas the way that I had always dreamed. I would call Margie at work to get her and Dianne to help me out with ideas.\n\n\"What are you thinking, Handsome?\" she asked as her hand continued it's magic on my back.\n\n\"Just how beautiful you are and how lucky I am,\" I responded with a laugh.\n\nMarlene slapped my back, telling me that I wasn't funny as she tickled my sides. \"You're not thinking how beautiful I am; you're thinking about something else; something like Christmas presents,\" she accusingly stated as her assault on my sides continued. \n\n\"Marlene, stop, you're giving me chills!\"\n\n\"I'll give you chills, Michael; you better fess up!\" she laughed before tackling me on the sofa.\n\nMarlene attacked my neck, sucking and biting my bare skin. \"Marlene, Marlene, please...\" I laughed, squirming underneath her.\n\n\"You better start telling me more things, besides your old standby that I'm so beautiful!\" she giggled while sucking me harder into her mouth.\n\n\"Sweetheart,\" I said with a shiver, \"If I told you, it wouldn't be a surprise!\"\n\nMarlene was like a little girl who wanted to know what her gifts were before the big day! Her excitement and attempted persuations were too cute. \"You know, you'll have to be in bed by eight o'clock on Christmas Eve, so you will be asleep when Santa arrives,\" I told her.\n\n\"Oh, is that right?\" she said. \"Well, let me tell you something right now, Pal; I won't be in bed alone!\"\n\n\"That's right, Misty has to be in bed by eight too!\" I added.\n\n\"Ooohhh, Michael, you are so impossible... How do you manage to always have a comeback when I think that I have you cornered?\"\n\n\"I told you before; it's just a gift!\"\n\n**********\n\n**********\n\nIt was God awful cold the night when we had planned to go out in search for a tree. There was something about shopping for a tree at night; the lights that lit the lot, along with the static Christmas music blasting from the cheap speakers somehow made it more romantic. Maybe it was the tradition of looking for the perfect tree, but in our case, tradition and romance would always be the same for Christmas. The wind blew between the standing trees as me and Marlene entered the rolled fence that surrounded the lot. The fresh smell of balsam filled the air, not affected by the wind. I was wearing a heavy sweatshirt under my winter coat, a heavy pair of gloves, and yes, a warm hat! Marlene was bundled up with a beautiful green sweater under a sweatshirt and coat. She wore gloves, a scarf, and knitted hat, along with boots on her feet. I could just picture how adorable she looked in her winter attire as we trampled through the abundance of trees.\n\nAs she considered several possibilities, I assisted her by holding the candidate, turning it around and pulling at the needles to make sure that the tree wasn't dry. At times, I would peroette with the tree and dip it in my arms as if we were doing a tango. Marlene would giggle at my silliness, saying that the icey wind was going to my brain. After much thought and discussion, we, or should I say, she, decided on a beautiful Douglas Fir. Marlene ran to retrieve one of the employees while I stood guard over the winner.\n\nAfter trimming our tree, the man slipped the tree through a shoot which bound it with netting. He carried it to Marlene's SUV and slid it in through the hatch. \"Make sure that you give it a lot of water when you get it inside,\" he said before wishing us a Merry Christmas.\n\n\"Burrrr...\" Marlene groaned while the SUV warmed up. \"Michael, that was so much fun! I haven't done that since, well, since my dad was alive.\"\n\n\"I'm sure that he was with you as we walked through all of those trees, letting you know which one that he liked.\"\n\n\"I would love so much to believe that,\" she said with a far away tone to her voice.\n\n\"How about we get this baby home and get it in the stand. Then it's time for a good old cup of hot cocoa,\" I suggested with a smile.\n\n\"Oh Michael, that is a great idea, let's go; oh, I can't wait!\"\n\nMarlene was indeed like a little kid when it came to traditional things. Actually, I was too, but never found anyone that matched my dreams. I would never have to worry about that again; this was going to be a wonderful Christmas.\n\nAfter returning home, I ran into the house and retrieved the tree stand, bringing it outside and connecting it to the bottom of the tree as it laid in the SUV. \"Why didn't we bring the tree inside and set it in the stand? How come you did it this way?\" Marlene asked.\n\n\"My dad showed this to me when I was just a wee kid. It's easier to screw in these bolts while you're standing up, instead of trying to screw them in while you're lying on your stomach underneath it!\"\n\n\"Hmm, I never would have thought of that,\" she said as she helped me tighten the screws.\n\n\"You don't have to tighten them too much, sweetheart; we'll have to adjust it when we stand it up in the living room.\"\n\n\"So, I guess that you'll be the one on your stomach, and I'll be the one who eyes it up and holds it steady!\" she giggled as we lifted the tree from her SUV and carried it into the house. \"Hmm, maybe I'll pinch those little ass cheeks of yours while you're indisposed!\"\n\nMisty pranced and played as we entered the house. The excitement of something new was too much for her to bare as she raced back to the bedroom and came running out with her stuffed monkey. I could feel the cold coming off of the tree after Marlene cut the netting and it fell open. As predicted, I laid on the floor and loosened the screws until Marlene could adjust the tree until it stood perfectly straight. Misty crawled along side of me on the floor as I retightened the screws, securing the tree in it's place. I heard a click and a laugh come from Marlene.\n\n\"What are you up to now?\" I laughed while under the tree.\n\n\"The two asses that are sticking out from under the tree!\" she hysterically said. There's a skinny one in jeans, and a fat black one with a wagging tail!\"\n\n\"I'm sure it will be making the rounds in the office Monday morning,\" I said as I eased myself from beneath the beautiful tree.\n\n\"Oh Michael, it's making the rounds right now,\" Marlene laughed as she text it to the girls and God knows who else!\n\n\"Can you get a couple pitchers of water to fill the stand?\" I asked as I attemptted to rub the sap from my hands.\n\n\"Sure, Sweetheart! Dianne says, nice ass, which one is Michael's!\"\n\n\"She's just a regular riot!\" I laughed. \"I'll put some water on for hot chocolate, OK?\"\n\n\"That sounds like a great idea, Handsome,\" Marlene giggled, still amused at Dianne's reply.\n\n\"Marshmellows in yours?\" I asked.\n\n\"Mmm, yeah, that sounds even better!\"\n\nWe sat on the sofa together, sipping the hot mugs of cocoa while watching a sit-com on the TV. We laughed at the silliness that the program provided. Marlene turned to me and began to laugh. \"What's wrong?\" I asked.\n\n\"You have a marshmellow mustache!\"\n\n\"How do I look in a mustache?\" I asked in amusement.\n\n\"Edible!\"\n\nMarlene pplaced her mug on the end table and proceedded to lick the sticky white mustache from my upper lip. I marveled at the feeling of her soft, warm tongue licking my lips before sucking them in, and removing the last remnent of marshmellow and chocolate from my mouth. After Marlene was finished, we laid together, taking in the scent of the fresh, green tree that graced the living room. \"How about if we let it settle tonight, and we'll decorate it tomorrow,\" I suggested.\n\n\"That sounds nice, Michael. You know, it seems like a lifetime since I last decorated a tree without feeling either lonely or terrified.\"\n\n\"Marlene, I'm sorry, Sweetheart, you'll never have to feel that way again,\" I reassured her. \"Do you put up a tree at your mom's house?\"\n\n\"Yes, but it is just a small, artificial tree.\"\n\n\"Why don't we go over and put it up after we're finished decorating here?\"\n\n\"Michael, my mom would love that!\" Marlene replied in a trembling voice.\n\n\"We'll bring Misty to help! She'll certainly lift mom's spirits!\"\n\n\"Oh Handsome, she absolutely loves that dog,\" Marlene said with a smile returning to her voice.\n\n**********\n\n**********\n\nAfter eating breakfast at the local diner, Marlene and I returned home and began pulling out the Christmas lights and ornaments. After testing the strings of lights, I began to string them around the soft branches of the tree. Marlene fetched a few pitchers of water and refilled the tree stand as I circled the tree, lying the lights gently along the branches. When I finished the last string of lights, I asked Marlene to make any adjustments that were needed to even them out. She stepped back, looking at the lit tree and made some small changes before telling me how beautiful it looked. We opened the boxes of ornaments and colorful balls and began hanging them on the branches. Marlene questioned me on some of the decorations that I possessed. I told her the story behind them, drifting back to when I was younger and lived in my very first apartment. After an hour or more of hanging, and rearranging the ornaments, I remembered that I had purchased candy canes. I retrieved them from the kitchen cabinet, giving Misty a bone after she got her head stuck in the box in an attempt to fit as many as she could put in her mouth at once. Marlene laughed hysterically at the sight of the black Lab with the box of bones over her head.\n\nAfter detaching the box from Misty's head and sending her off to the bedroom, we placed the traditional candy canes on the tree, placed the Christmas angel on the tree top, and cleaned up the mess that we made in the room. Marlene placed the tree skirt around the base of the tree before walking back to the sofa and taking in it's beauty. \"Michael, it is absolutely beautiful! It almost seems like the tree is boasting about it's beauty!\"\n\n\"Kind of like you,\" I commented as I took her into my arms and kissed her.\n\n\"Yes, kind of like me... And that is because of you,\" she whispered as she took my hair into her hands and ran it through her fingers.\n\n\"Wait, I have something for you,\" I said as I walked back into my bedroom.\n\nI returned with a bag and handed it to Marlene. She was like a little kid as she nervously opened the bag and pulled out it's contents. \"Michael, it's a stocking, and it has my name on it!\" she exclaimed. \"I haven't had a stocking since I was a young child,\" she said in a shaky voice. \"You think of everything; you just have everything planned perfectly, don't you?\" she asked.\n\n\"I try to be thoughtful,\" I replied as I pulled out some hooks and screwed them under the base of the mantel of the fireplace. And there on the fireplace, were the stockings of Marlene, Michael, Monica, and Misty, hanging with care!\n\nAfter taking a few pictures of the finished tree and the stockings hanging on the fireplace, Marlene, Misty, and I walked over to her mom's house to put up her tree. We entered the house with Marlene's mom greeting us, before making a fuss over Misty after I removed her harness. \"Mom, we're going to put up your tree, OK?\" Marlene asked.\n\n\"Oh my, that would be so nice, kids!\" she happily said.",
        "It was the first time that I heard her call us kids. We had all become a family, and it felt so nice just to belong. While Marlene left to retrieve the artificial tree from the basement, I sat down on the sofa to speak with her mom.\n\n\"Mom,\" I said in a very light whisper, \"Would it be alright if I stopped by tomorrow to talk to you?\"\n\n\"Sure, Michael, is everything alright?\" she asked in a low voice.\n\n\"Yes, I just need to discuss something with you,\" I replied with a smile. \"Would ten o'clock be OK?\"\n\n\"Yes, ten would be fine,\" she whispered as the sound of Marlene coming up the steps ended our conversation.\n\nMarlene entered the living room with the box containing the tree. \"I'm sorry, Sweetheart, I should have helped you with that,\" I said.\n\nMarlene laid the small box in front of me and said with a laugh, \"I think that I can handle it!\"\n\nI felt the box and began to laugh. \"What kind of tree is this?\"\n\n\"Michael, you leave my little Charlie Brown tree alone,\" Mrs. Cassidy laughed.\n\nMarlene pulled the three pieces of the prelit artificial tree from the box. \"Michael, how about you put these pieces together while I move the chairs away from the front window.\"\n\nI connected the three pieces together, unfolding the branches and connecting the lights. It took all of five minutes to assemble, and after forgetting about the box in front of me, I tripped and fell onto the floor with the artificial tree following close behind. \"Oh my god, Michael, are you alright?\" Marlene asked as she ran over to me.\n\n\"Michael...\" Marlene's mom gasped as she rose from the sofa.\n\nMisty ran to me and began licking my face. \"Misty, enough girl; your breath is brutal,\" I laughed as I laid sprawled out on the floor with a tree on top of me.\n\n\"Michael, are you OK?\" Marlene asked in concern once again as she pulled the tree off of me.\n\nI laid on the floor laughing at my stupidity. \"Yes, Sweetheart, I'm fine... How about the tree? Did it survive?\"\n\n\"Don't worry about the stupid tree... Here, let me help you up,\" Marlene said as she knelt before me.\n\n\"I would tackle you right now if your mom wasn't here,\" I whispered to her as she helped me up.\n\n\"He's fine, mom,\" Marlene said with a smile returning to her voice.\n\n\"How's the tree?\" I asked again.\n\n\"Michael, really? Is that all you're worried about?\" Marlene asked.\n\n\"No, I worry about a lot of things,\" I smiled.\n\n\"You are absolutely impossible!\" Marlene said in a flustered voice. \"Oh wow, you have quite a bruise on your forearm already.\"\n\n\"I'm sure that I'll survive,\" I replied. \"I'll let you move the tree over to the window though.\"\n\n\"The things we do for love,\" Marlene said as she picked up the five foot tree and centered it in front of the window.\n\nAfter grabbing the boxes containing the Christmas balls and ornaments, Marlene and her mom decorated the tree while I sat and gave Misty her belly rub. It didn't take long for the job to be completed and soon, the tree was brought to life as the traditional skirt was placed around the bottom.\n\n\"It looks beautiful!\" Mrs. Cassidy exclaimed. \"Thank you so much, kids!\"\n\n\"A job well done,\" I added as Marlene placed the star on top of the tree.\n\n\"Now, all we have to do is wait for Santa to come!\" Mrs. Cassidy said with a smile to her voice.\n\nAfter eating a spaghetti dinner that Mrs. Cassidy had prepared, Marlene, Misty, and myself made our way back to my house. Marlene plugged in the tree upon arrival and after feeding Misty her dinner, we sat on the sofa in total silence, looking at the beautifully lit tree. Christmas was indeed going to be very special for me and Marlene this year. Both of us had not had a happy holiday in many, many years, but the both of us knew that night, that all was about to change for the better. We fell into each other's arms as we toppled over. Marlene fell asleep on my chest, as did I, under the comforting weight of her body. She woke me up around ten o'clock, telling me that she had to get home and get her clothes set out for work. We kissed each other good night in front of our very first Christmas tree. I could picture the sparkle in her green eyes, knowing that this time next year, we would be husband and wife.\n\n**********\n\n***********\n\nThe next morning, after grabbing a cup of coffee and showering, Misty and I walked along the cold sidewalks of our town on our way to Marlene's mom's home. As we crossed the last street, I gave Misty the command to make a left turn. She did the turn as I knew she would and we continued down Marlene's street. \"Find Mommy's house, girl,\" I said excitedly. \"C'mon pup, let's go see Mommy!\"\n\nMisty's pace picked up as the cold wind was now in our face. She loved this weather, and quite frankly, it was easier not only for her, but for me to walk in the cold rather than the heat of summer. Misty made a sharp right onto Mrs. Cassidy's sidewalk and led me to the door. I knocked at the door and in seconds, Mrs. Cassidy was opening it and hurrying us inside out of the cold.\n\nAfter removing Misty's harness, she ran through the house before racing to Mrs. Cassidy's feet. \"How is my pretty girl?\" she asked in a high voice. \"You are such a pretty baby!\"\n\nI heard Misty fall to the floor and knew that she had assumed her usual position on her back with her belly raised high. \"Oh, does my pretty girl want a belly rub?\" Mrs. Cassidy asked with excitement.\n\nI walked towards her voice, running into Misty's butt before leaning over and giving Marlene's mom a kiss. \"Hi mom, how are you this morning?\" I asked with a smile.\n\n\"I'm fine, Michael, how are you? Is everything alright? How about a cup of coffee?\"\n\n\"I'm fine mom... No thanks, I had my one cup already.\"\n\n\"Here Michael, come sit,\" Mrs. Cassidy said as she patted the sofa.\n\nI sat down nervously next to her, not knowing how to start. \"Michael, what's the matter, Sweetheart?\" she asked in a soft motherly tone.\n\nI took her hand into mine and held it gently. \"Mom, I want you to know that I love Marlene more than I have ever loved anyone in my life... And, um...I know that this may seem old fashioned, or it might seem silly for a man of my age to say this, but...I, um...would like to ask you...\"\n\nThe tears began to well up in my eyes and soon they were running down my cheeks under my sunglasses.\n\n\"Michael, sweetheart, it's alright, what do you need?\" she asked in concern.\n\n\"Mom, I want to...ask your...permission to...marry...Marlene.\"\n\nI was overwhelmed with emotion as the tears trickled from my chin and dropped onto my jeans. I was shaking terribly as I held onto her hand.\n\n\"Oh Michael, Michael, you sweet, sweet man... There is no need to ask me permission; Marlene is a grown woman.\"\n\n\"I know, mom, but I wanted to ask you because I never got the opportunity to ask a parent for their daughter's hand in marriage before.\"\n\n\"But you were married before, weren't you son?\"\n\n\"Yes, but well, um, her father had passed away two years previous to our engagement, and her mom lived in another state.\"\n\nOh Sweetheart, of course you can marry Marlene; you have saved her life. Michael, she was beaten so badly, and her emotional state was so hard to witness; I thought that I had lost my little girl again,\" Mrs Cassidy said in a trembling voice. \"And then, that one morning; that one cold morning, you and Misty appeared in front of her like two angels sent from above. You changed her entire outlook, and gave her a reason to go on with her life. She fell in love with you from the very first second that she laid her eyes on you.\"\n\n\"Thank you, mom, I instantly fell in love with her too,\" I replied as the tears began to dry on my skin. \"But mom, there's something else that I need to discuss with you.\"\n\n\"What is it, Michael?\" she asked, holding my hand in both of hers.\n\n\"I'm worried about you; I don't want to take Marlene away and leave you here alone.\"\n\n\"Son, you don't have to worry about me; I'm fine on my own,\" she said as she rubbed my hand.\n\n\"But that's it, mom; I don't want you to be on your own; that means you are alone. I was thinking that maybe you could live with me and Marlene. Maybe we could buy a house and have a mother-in-law suite built onto it. It would be like your own little apartment, only you'll be with us.\"\n\n\"Michael, this house is really Marlene's,\" she whispered as if someone were to hear her.\n\n\"What do you mean?\"\n\n\"She, Ed, and Janet had the house put in my name and on the mortgage to hide from that aweful, rotten thing she was married to. Marlene pays all of the expenses for this house; I just live here with her.\"\n\n\"That's amazing news, mom, but still, I don't want to take Marlene from you and leave you here, or anywhere alone.\"\n\n\"Michael, that is sweet of you, but I'll be fine where ever I am. You know, we can still make a trade for Misty!\" she laughed as she rocked my hand back and forth.\n\nI laughed at her statement, replying, \"You're just not going to give up on that, are you?\"\n\n\"I'll never give up on my precious girl,\" she said in a high pitched voice as she let go of my hand and began to rub Misty again. \"May I ask when you plan on asking her?\"\n\n\"Sometime after the holidays,\" I replied. \"I want to really surprise her and not do the stereotypical Christmas, New Year's, or Valentine's Day engagement. She is making me feel really guilty because I think she believes that there is going to be a ring in her stocking for Christmas.\"\n\n\"Michael, I can't wait, she is going to be over the moon when you give her a ring,\" Mrs. Cassidy said in complete happiness.\n\n\"Mom, I might need your help during Christmas because she will probably be feeling a little blue when she doesn't get a ring. You might have to talk to her if she gets down, OK?\"\n\n\"Sure, Sweetheart, I'll take care of her,\" she said, reassuring me about my decision.\n\n\"Mom, I'll make sure that when I ask Marlene for her hand, we discuss your situation.\"\n\nWe chatted a bit longer about my plans and other things before I told her that I had to get a move on. I saddled up Misty in her harness, kissed Mrs. Cassidy goodbye and thanked her for her time and kindness before leaving for home. I had some major shopping to do, and Christmas was just around the corner.\n\n**********\n\n**********\n\nHoping that you have enjoyed Pt. 06! Please continue on to Pt. 07 at your convenience, where some shopping escapades occur, and Marlene and Michael spend their first Christmas together!\n\nThank you all for your support throughout the Silver series. Your votes and feedback are very much appreciated! It gives me as an author, guidance as to how the story will progress.\n\nSee you all in, Silver Pt. 07!\n\n**********\n\n**********"
    ],
    "authorname": "CantC54",
    "tags": [
        "romantic story",
        "romance",
        "blow job",
        "lingerie",
        "sex",
        "teasing"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/silver-pt-06"
}