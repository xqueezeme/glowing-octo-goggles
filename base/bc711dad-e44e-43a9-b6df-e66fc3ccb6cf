{
    "title": "The Circle of Love",
    "pages": [
        "This story is a work of fiction. All of the characters and events are fictional. This story portrays some graphic sex. If you are in an area where reading this is illegal or you are offended by any of this then please stop reading now.\n\nWhile the description may have you think that there is some incest in this story, there is none. Also, the erotic scenes don't come quickly and although the story is a little lengthy, I tried to keep it moving and there are erotic scenes, which I believe enhance the message and tone of the story. \n\nOne of the things I am thankful for this holiday season is for a great editor in LadyCibelle. Again, her help with this story was wonderful.\n\nMy thanks for everyone's support and kind comments regarding my first two stories. Hopefully this one will touch your heart and you will be moved in some way.\n\nThis is dedicated to my little cousin Allison. \n\n*\n\nAllison watched as her mother stared out the hospital window on the other side of the waiting room. She could tell by the movement of her shoulders that she was quietly sobbing. She knew she had moved to the other side of the room so she wouldn't hear her softly crying. Her hand was rising to her face every so often to wipe the tears. Her mom was trying to hide the fact that she was not emotionally strong at the moment.\n\nShe could see past her momma, out the window, that a light snowstorm had begun, which was a little rare for early November in Columbus. It looked beautiful from the third story window of the Hematology/Oncology Clinic at the Columbus Children's Hospital that she had visited for most of her life and was her second home. She heard the chime of the elevator and smiled when she looked up and saw Jacob exit from the lift. She smiled at him and thought, \"He'll cheer her up\".\n\nJacob walked over to the cute little eight year old. Her big blue eyes and smile melted his heart every time he saw them. He could already sense things were not good but he forced a big smile back at her. He ran his hand through her hair as he said, \"Hi there, pipsqueak. How's my favorite angel?\"\n\n\"Hiya J.J.\", Allison said perking up. His smile and presence always seem to give her a little more strength. She motioned for him to bend down closer and as he did she whispered in his ear. \"Momma's not feeling well though, maybe you can share a smile with her.\"\n\n\"You got it Cap'n\", Jacob whispered back and then gave Allison a quick peck on the cheek.\n\nShe watched as Jacob crossed the room and gently put a hand on her mom's shoulder.\n\n\"Hey Elizabeth\", Jacob said softly. \"I was just in the neighborhood and thought I would stop by to see how the appointment went.\"\n\n\"Oh, hi Jay\", Elizabeth said, sniffing quickly and composing herself. \"It was nice of you to stop by after work, you didn't have to. You should be getting home in case the snow gets worse.\"\n\n\"The weather reports just calling for a light dusting.\" Jacob replied. Just wanted to make sure you and Allison were okay.\n\n\"Oh Jacob, it's so hard.\" Elizabeth sobbed slightly, struggling hard to hold her composure. \"The CT Scan confirms that one of the tumors is growing again. All this after the MIBG scan had preliminarily shown a significant improvement in most areas.\"\n\nIt was the one area in the scan that had shown an 'increased uptake' that caused the doctors to schedule another CT Scan for Allison.\n\n\"What am I going to tell Allison? Her latest interview with Time Magazine went wonderfully and her Cookie Jar fundraiser is going so well. She has been the happiest I've ever seen her in awhile. She has been so looking forward to this holiday season. Oh god, what am I going to do.\"\n\n\"I'm so sorry to hear that\", said Jacob. He had weathered this illness with them for the past several years and this news was a bomb to him too. But he wanted to be strong for the two of them. \"Boy, that's tough. But as Allison always says, 'take the time to appreciate what you have'. And you know how tough a little fighter she is.\"\n\n\"Yeah, she's tough. She's trying her best to fight this, but how can I appreciate what I have?\" Elizabeth said with an undertone of sarcasm. My only baby is fighting a battle for her life. How could God be so cruel to give her hope and then rip it away?\" Elizabeth was starting to lose the emotional battle within her.\n\n\"Tell you what\", Jacob said touching her hand gently, \"I promised Allison I would try to make you smile. Try to give her one and I'll get one of the Candy Stripers to keep her company for a few minutes.\" Elizabeth turned and tried her best to smile at her angel as Jacob moved back to the wheelchair that Allison was seated in.\n\n\"Come on Cap'n. I'll bet you are getting a little tired after today's tests.\" Jacob said to Allison as he spun her chair out around and out the waiting room door. There's your favorite Candy Striper, Nancy and I'll bet she would love to take you back to your room.\"\n\n\"Going to take a little more to get momma to smile, huh.\" Said Allison. Jacob was always surprised at how intuitive this little 8-year-old girl was. \"Things don't look good, do they?\"\n\nJacob stuttered for a moment, not know what to say. \"I'm... er... well, you know... uhm... your mom... She cares for you so much and wants the best for you. She's just a little tired right now.\"\n\n\"I know J.J.\" Allison said as she gave a little smile. \"I'm not really that tired, but I'll go with Nancy. Besides, she always gives the best wheelchair rides. I like it when she spins me around.\" Then she turned slightly to look up at him with her big blue eyes. \"Promise you will help momma to feel better.\"\n\n\"I promise\", said Jacob not looking into Allison's eyes. He wasn't sure it was a promise he could keep.\n\n\"Promise what?\" Elizabeth asked as she approached and caught the tail end of the conversation.\n\n\"Uhmm.. er... I promised to make her a special Thanksgiving dessert.\" Jacob finally got his little fib out. \"As long as Allison keeps smiling.\" He gave Allison a little wink.\n\n\"No problem!\" Allison tried to straighten up in her chair as she put on as big a smile as she could, winking back at Jacob. \"Mom, why don't you and Jacob go get a cup of coffee together? I'll be fine with Nancy. Just behave yourselves!\" She called out to them then burst into a giggle.\n\nJacob and Elizabeth had to giggle themselves but it was also tough to fight back the tears that had been welling up as they watched Nancy wheel her into the elevator.\n\n****************\n\nAt just 1 \u00bd years old, Allison had been diagnosed with neuroblastoma, a tumor that impacts 1 out of every 100,000 children. Kids show little signs of the cancer and only after Elizabeth had rushed her to the hospital because Allison's stomach seemed bloated and having stomach pains did they discover she had the disease. Of course, Elizabeth was devastated. Her husband had been killed a year earlier serving in Afghanistan and Elizabeth had still not even recovered from that. Immediately, Allison was put into the hospital and a battery of tests and treatments began. The tests showed that the tumors had spread to several places in her body already. The worst one being near her abdomen. It was a rough time as the treatments took its toll on Allison's little body.\n\nBut one thing everyone seem to notice, from the doctors, to the nurses to the Candy Stripers, was Allison's resilient attitude. While only 2 years old at the time, they were amazed at her ability to smile through the adversity. She would joke with the staff and make them smile. Her bright and sunny disposition was contagious.\n\nBy age five, the various treatments continued. Allison became a fixture at the Columbus Children's Hospital. Being a little older now, one of her favorite thing to do was to bake some cookies with her momma and bring them in for the staff. They especially loved the chocolate chip, snicker doodle and peanut butter ones.\n\nThen one day while walking through the hospital lobby, a nice man saw the cellophane bag of cookies she was carrying. \"Boy, those look so yummy!\" The nice man said.\n\n\"They are for the people who take care of me.\" Said little Allison with her ever-present smile. \"But I will share one with you, 'cause you look like a nice man.\"\n\n\"Oh, I couldn't do that.\" Said the nice man. \"That would take away cookies from your friends.\"\n\n\"There's plenty to go around.\" Said Allison, her bonnet, which she wore to keep her bald- head covered, slightly falling off.\n\nThe man saw that she was a cancer patient and knew this is where they came to be treated. \"I tell you what.\" He began to make his deal. \"I will buy a cookie from you for, let's see, $10. If you promise me you will donate that money towards the research for a cure for children's cancer. Is that a deal?\"\n\n\"Wow, a whole $10!\" Exclaimed Allison. \"For just one cookie?\"\n\n\"That's the deal, Cap'n!\" Said the nice man. \"Take it or leave it.\"\n\n\"You got yourself a deal, mister!\" Shouted Allison.\n\nElizabeth had watched the whole thing and smiled at the man. \"That's so very nice of you. Thank you very much.\"\n\n\"Well, I couldn't help but be charmed by two pretty ladies.\" He said smiling at her. \"I couldn't resist her smile. My name is Jacob Jensen by the way. My friends call me J.J. or Jay for short.\"\n\nJacob noticed Elizabeth was a very attractive woman; about 5' 6\" tall and very fit. Not overly skinny or overweight. One of those women you would say was average, but with lots of curves. She had dark brown hair and hazel eyes. It was those eyes though, which showed the hurt: The proverbial windows to the soul. He also noticed the wedding ring on her finger and was a little disappointed such a pretty lady was not available.\n\n\"Very infectious smile, isn't it? I'm Elizabeth and the little baker is Allison.\" Elizabeth said trying to smile herself.\n\nJust in that brief moment, a quick expression, and Jacob could sense the hurt she had buried underneath. He wanted to help. He turned to Elizabeth and said, \"I tell you what, I have some friends who would also love some wonderful cookies. I bet if you made them real good, they would pay... say... two dollars each for the cookies, if you would donate the money also.\"\n\n\"That would be super fantastic!\" Exclaimed Allison. \"I'll be back on Tuesday for my next treatment, four in the afternoon. Momma told me the schedule.\"\n\n\"I'll be here and I'll take a dozen cookies.\" Smiled Jacob giving her a ten-dollar bill for today's cookie. Allison gave him a chocolate chip cookie and he took a bite. \"Yum! If I had known these tasted this good I would have offered a hundred dollars per cookie. You should have asked for more!\"\n\nAllison giggled as the thanked him. \"See you Tuesday she called out as she entered the elevator.\"\n\nThat Tuesday, Jacob was back waiting in the lobby at 3:45p. Allison gave him another big smile when she entered the lobby and recognized him. She had two bags of cookies and she held out one. \"Hi J.J.! I brought you your cookies. Did you get the money?\" She asked quizzically.\n\n\"When I told them how good the cookies were, my co-workers were happy to donate the money. Here you are! Twenty-four big ones plus a one dollar tip makes twenty-five.\" Jacob said laying out the money on her lap.\n\n\"Yippee! And here you go! Thirteen cookies. Momma says that's a baker's dozen. But I hope you eat the extra one yourself.\" Allison said again giggling. \"This is fun. Can we keep doing this? I bet I could raise a million dollars!\"\n\nAnd at that moment Allison's Cookie Jar fundraiser to find a cure for children's cancer was born. Jacob would meet them at the hospital or even pick up the cookies from their house, always with a handful of donation dollars for Allison's Cookie Jar. Being the owner of a deli/restaurant, Jacob then talked to a bakery that supplied his shop with bread and desserts and they agreed to add a dozen cookies to each day's order for free. He had his printer make him a sign with Allison's picture, a brief description of her fundraiser and instructions that they could take a cookie if they left two-dollars in the jar. He displayed it on the counter and was surprised when they sold out every day. His produce vendor noticed the sign one day and offered to include some cookies in their delivery three times a week.\n\nSoon they were collecting over two dozen cookies worth of donations every day. Many days he would even find a little extra in the jar. Allison was always so happy when he would stop by at their house or when she had to stay at the hospital, always bringing the donation money.\n\nThen other stores near Jacob's also started putting out a jar and a box of cookies and asking for donations too. Everyday one or two of them would stop by his shop for a cup of coffee and drop off an envelop with donations in it. Jacob was just amazed at how generous everyone was at how quickly this fundraiser was gaining momentum.\n\nThen one day the local news station came in wanting to do an interview with him. \"No way, uh, uh\", Jacob told them. \"The real story is this little girl\", he said pointing to her picture on the sign. Meet me at the Columbus Children's hospital this afternoon and that's where you will find your interview.\n\nAfter they left, Jacob quickly called Elizabeth and Allison and got their permission to be interviewed. Elizabeth was hesitant but Allison jumped on it right away, sensing it would bring in more money towards her million-dollar goal.\n\nThe news crew showed up and Allison's smile and giggles were on everyone's TV on the evening news. \"We want to raise a million dollars!\" Allison exclaimed in the interview, her blue eyes sparkling. \n\nImmediately, Jacob's shop was inundated with calls on how they could set up a cookie jar. Schools, restaurants, community centers, firehouses, shopping malls, and even the city's visitor center all wanted to know how to set one up. Then the local newspaper also wanted an interview and a tremendous momentum began to grow.\n\nHe called Elizabeth for some help and she dove in. She got more signs made up. Went to a local craft store and bought out their supply of cookie jars. She went to her sister's daughter's girl scout troop where they painted them all and soon jars started popping up all over town.\n\nElizabeth and Jacob began to spend more and more time together working on this project in their little spare time. They found they enjoyed each other's company and soon became good friends. But with all the whirlwind of activity, both of them working and taking care of Allison, neither had time to nurture anything else between the two of them.\n\n************\n\n\"What did she mean behave ourselves?\" Elizabeth asked Jacob suspecting something was up. \"And what about these promises?\"\n\n\"Let's go somewhere quiet.\" Jacob gently said holding out his arm for her to take.\n\nThere had been little physical contact between the two over the past three years. A touch of the hand here, a hug there, a quick peck on the cheek between friends. But today Elizabeth found comfort in taking his arm. She held it tightly as he led her to a vacant conference room. This one also had a sofa as to make the patients and family comfortable when the doctors sometimes had to deliver painful news.\n\nHe sat her on the sofa and sat beside her. They sat close but not touching just slightly facing each other. He could tell she was all bottled up. \"How are you doing through all of this?\" Jacob asked.\n\n\"Oh Jacob, it's just so much.\" She let out with a sigh as tears began to form again in the corner of her eyes. \"Her red blood count is starting to worry the doctors even though her ANC is almost back to normal. Still they want to go to a transfusion every 10 days. Although she tolerated the new chemo pretty well with the oral Temador and oral Irintotecan, it has definitely hit her counts. Unfortunately, it also looks like her belly is starting to fill back up with fluids as it looks like the tumor there is growing again.\" Elizabeth started to choke up and remembered how nice Jacob's arm had felt. She reached over and took his hand.\n\nWith that Jacob reached an arm around her and pulled her close. She buried her head on his shoulder and he could smell the sweet fragrance of her hair.\n\n\"She's getting nauseous again and the doctor is giving her Zofran.\" Elizabeth said starting to sob. \"It's just so much for one little girl.\"\n\n\"And for this big girl too?\" Asked Jacob putting his hand under her chin and raising her head up so he could look in her eyes. They were red and swollen but Jacob still thought she looked beautiful.\n\n\"Oh Jay...\" Elizabeth sobbed again burying her head back on his chest. \"And you're such a dear friend. What would I have done without you?\"\n\n\"Not blamed me for you 'thinking' you are not eating well because there are cookies around all the time.\" Jacob tried to interject a little humor to cheer her up.\n\n\"I'll always blame you for that!\" Elizabeth blurted out between sobs, a chuckle came out too and it made Jacob happy to know he succeeded a little.\n\nBut then she looked down again. \"Oh, what will I do if I lose my Ally? My angel. She's so young; so innocent. She deserves better. And I miss Frank too. You know, my husband. Why couldn't he be here to help me through this? But he's gone. I have to accept that. And poor Allison didn't even know get to know him. It's not fair! It's not fair! It's just god dam not fair!\" Elizabeth yelled and then she lost it. The catharsis that had been building for years finally came flooding out as she buried her face in Jacob's sweater. She cried and pounded her fists into his chest and he just let her release. She cried for over 30 minutes until she finally exhausted herself. Jacob stroked her hair and held her tight and in her exhaustion she fell asleep. \n\n***********\n\nTwo hours later, she awoke with a start not realizing where she was. She looked around the conference room and it began to come back to her. She hadn't let out her emotions like that since she first heard Allison had come down with her disease. She had vowed to be strong and to show Ally how to fight this nasty villain. She then looked up at Jacob who had also fallen asleep, sitting up on the sofa, his arm still around her.\n\n\"He's been so good to us\", she thought brushing a lock of his curvy brown hair that had fallen into his face. For the first time, she noticed how really handsome he was. A little over six feet tall and fit from being on his feet all day at the shop. Blue-grayish eyes, strong cheek bones and a handsome smile. He looked wise even for only being in his early 30's. He always seemed to know what to say to her and Allison. \"I guess I haven't appreciated having you in my life enough\", she thought to herself remembering his reminder of Allison's words. \"I just haven't had the time or the strength. Until now I've not been able to release Allison's father. But Jacob's been like a father to her. He's so good to us.\"\n\nJacob stirred as he felt Elizabeth put her head back on his shoulder. She looked back up at him as she felt him stir. \"Uhmm.. hi there...\", Jacob said not sure if Elizabeth was mad that his arm was around her. He relaxed when she gave him a little hug.\n\n\"Hi sleepy... guess I bored you to sleep, huh?\" Elizabeth joked.\n\n\"Yup, all that talk about red and white blood count will do it every time\", Jacob smiled causing Elizabeth to smile back.\n\n\"Oh jeez, nine o'clock. I better get home.\" Jacob said noticing the time on the clock on the wall. \"I have to open the shop in the morning. We're closed this Thursday though. Thanksgiving, you know. Mind if I bring that dessert I promised Allison?\"\n\n\"We would love that.\" Elizabeth said. \"I'm going to sleep here tonight\" Elizabeth was glad they had parent's beds in the rooms to stay so they could be close to their children. Elizabeth used it many times. She had learned to always have a change of clothes and toiletries handy.",
        "**********\n\nElizabeth crept into Allison's room. She looked like a little angel sleeping. She bent over and kissed her on the forehead. \"Night, my angel\", Elizabeth said softly. Allison stirred and opened her eyes. \"Hi momma\", she whispered back. \"Is it still snowing?\"\n\n\"No, I think it's stopped.\" Allison's momma replied.\n\n\"I like the snow.\" Allison said half asleep.\n\n\"I know.\" Said Elizabeth\n\n\"You and J.J. were gone a long time. Did you have fun?\" Allison's question startled Elizabeth.\n\n\"Uhm.. why... yes... we had a nice talk.\" She replied.\n\n\"All you did was talk?\" Murmured Allison.\n\n\"Just talked. Go back to sleep, baby.\" Elizabeth said stroking her daughter's face.\n\n\"I like J.J. too.\" Allison murmured as she started to drift back asleep.\n\n\"Me too.\" Whispered Elizabeth.\n\n\"Actually, I think I love him momma. Do you?\" Allison said, almost in a dream-like state.\n\nElizabeth didn't answer and could only stare at her baby as she fell back asleep. \"Love him? Do I?\" She asked herself. That emotional part of her had shut down. But tonight felt so nice to have his comfort. She changed and crawled into bed but had a hard time falling asleep. \"Allison loves him, do I?\" She kept thinking.\n\n***************\n\nThanksgiving was a bright, sunny day. A chill still lingered in the air from the recent snow. Allison was feeling better enough to come home before she started her next round of chemotherapy treatments. It would be nice to spend the Thanksgiving holiday in their house, instead of the hospital. All the family was over. Both of Allison's Grandmas and Grandpas, Elizabeth's sister, Sue, and her husband and two daughters. Allison was also always glad to see Dinger, the black Labrador Elizabeth had bought for Allison two years ago. He brought many smiles to her face and Elizabeth never regretted getting him. Besides, he added a little protection for the two girls there alone.\n\nJacob showed up around four with two freshly baked pumpkin pies. He knew Elizabeth's parents, Ben and Peggy, and her sister, but he had not met Frank's parents. They seemed like nice people and they chatted about the Cookie Jar charity. Saying how they had raised over $700, 000 in the little over three years it had been running.\n\nDinner was scrumptious although Allison couldn't eat much. Her stomach was still giving her a few problems and the doctors wanted her to watch her diet. But she relished in having all these people around, everyone laughing, talking and enjoying the holiday. She thought this is what a holiday is all about.\n\n\"I love you all.\" She said as she giggled as dessert was being served. \"You all make these dinners so fun.\" Everyone smiled at her. \"And you my Cap'n, are the life of the party!\" Jacob said, making her giggle all over again.\n\nEveryone settled in the living room after dinner and a game of scrabble and some cards appeared. Everyone got lost for a few hours enjoying some games and more laughter. Everyone was stuffed from a full turkey dinner with all the trimmings topped off with Jacob's delicious pie.\n\nFrank's parents got up to leave around nine and said their good-byes. Elizabeth retrieved their coats and walked them out onto the porch. \"What a lovely dinner.\" Frank's mother said, giving Elizabeth a kiss on the cheek. \"Thank you very much.\" Frank's father chimed in. \"Yes, very lovely time. It was good to see you and the family again. Been missing you all.\"\n\n\"And you know that Jacob's a nice guy.\" Frank's mother added. \"He's also good looking\", she added with a smile.\n\n\"Uhmm, yes he is.\" Elizabeth replied, uncomfortable with her late husband's parents talking this way.\n\n\"Oh don't be afraid of those feelings.\" Frank's mom continued. \"You deserve someone in your life. God knows, how tough it is to go it alone. Frank would have wanted it. You know that.\"\n\n\"I don't know, mom.\" Elizabeth had not been sure of her feelings this past week. \"It's so much. I do miss Frank.\"\n\n\"I know you do, dear. But Allison is enamored with this Jacob guy. And just know, it's okay with us.\"\n\n\"Thanks mom, thanks dad. Have a safe drive.\" Elizabeth said, still processing what they said.\n\n************\n\nElizabeth returned to see the rest of the family gathering their jackets. Jacob and Allison though, where engrossed in an intense game of Go Fish. After the rest of the family said their good-byes Elizabeth returned to join them and for the next thirty minutes the Go Fish battle continued. She would look over at Jacob smiling and laughing with Allison. She felt a glow in her heart, a feeling she had not felt in a long time. It made her tingle.\n\n\"Momma, got any eights\", Allison shouted again. \"Momma, pay attention.\"\n\n\"Oh, right, eights... let's see, yup, two of them! How did you know?\" Asked Elizabeth.\n\n\"Just a smart little girl!\" Allison giggled, not letting on that she had caught her mom staring at Jacob. And while she was staring her cards tilt down so she could see what was in her hand.\n\n\"I'm all out!\" Exclaimed Allison. \"I win again!\"\n\n\"You're so good at this game.\" Smiled Jacob. \"I may just need to tickle you for winning so much!\"\n\nAllison screamed and giggled as Jacob started to reach towards her. \"No, don't, stop!\"\n\nNot wanting to push it too far and risk hurting Allison, Jacob backed off.\n\n\"Okay, bedtime.\" Elizabeth said.\n\n\"Oh darn, I was having so much fun.\" Allison said. \"Will you both tuck me in?\"\n\nThis was the first time Jacob had been over at bedtime and he looked nervously at Elizabeth.\n\n\"Okay by me. If you promise to go right to sleep.\" Elizabeth said.\n\n\"Promise, momma.\" Allison said smiling.\n\nElizabeth and Allison excused themselves so they could get Allison ready for bed. Fifteen minutes later, Elizabeth called Jacob down to Allison's room. Allison was already under the covers with her mom sitting beside her. Jacob sat down next to her.\n\n\"Tell me a story?\" Asked Allison.\n\n\"No, you promised straight to sleep.\" Elizabeth reminded her.\n\n\"Oh, alright momma. Can I at least make a Christmas wish?\" Allison asked innocently.\n\n\"I would love to know what I could get my favorite little girl from Christmas.\" Jacob chimed in.\n\n\"Oh don't encourage her.\" Elizabeth smiled, and she suddenly realized she had been smiling more. \"She will want everything in the toy store.\"\n\n\"Then I'll buy her the whole store!\" Jacob said laughing. \"Mr. Mastercard won't mind.\"\n\n\"Okay, Ally angel. What would you like for Christmas?\" Elizabeth asked hoping to get Allison to sleep soon as she didn't want to wear her out.\n\nAllison took her mom's hand that was resting next to her on the bed. \"Give me your hand, J.J.\" Allison asked holding out her free hand. Not knowing where this was going, Jacob gave her his hand. Allison brought their two hands together and then brought them to her mouth and gave them a kiss.\n\n\"I love you both so much! You have made this the best Thanksgiving ever. I don't want any toys for Christmas. Momma, my Christmas wish is that you and Jacob would love each other and get married!\" Allison then push their hands together so they were holding then released her hands and pulled the covers over her head and started giggling incessantly.\n\n\"What... oh.. uhm.. but sweetheart, we haven't even gone on a date.\" Elizabeth stammered.\n\n\"Oh momma\", Allison said from under the covers. \"You see Jacob almost every day. Why do you need a date? But if you do need one, you have 'till Christmas. If you want go on a date, I'll go stay at gramps and nana's house.\" The giggling continued.\n\n\"Oh baby, I don't know.\" Elizabeth said looking over to Jacob for support. He was just sitting there looking at her. A look she had seen in him before but didn't realize; could it be a look of love. \"Was he already in love with her?\" Elizabeth wondered.\n\n\"What do you say, J.J.?\" Allison asked again from under the covers. Again, giggling afterwards.\n\n\"You're enjoying this too much, young lady.\" Jacob said. \"But if your mom, is willing I am willing to try a date.\"\n\nAllison quickly pulled down the covers exposing her smiling face. \"You would!\" She shouted. \"Momma, please say yes... please... please... please!\"\n\nElizabeth looked at Jacob, then at Allison and smiled. \"As I see you won't go to bed unless I do, I guess I don't have a choice.\"\n\n\"Oh goodie, goodie!\" Allison cried. \"Okay, I'm asleep. See eyes close.\" Allison closed her eyes tightly and gave a couple of fake snores. \"Night momma!\" She said puckering her lips for a good night kiss.\n\nElizabeth kissed her. \"Goodnight Angel. Sweet dreams.\"\n\n\"Night J.J.\" Allison puckered again.\n\n\"Night Cap'n.\" Jacob gave her a quick peck too.\n\nThey heard more giggles as they left the room, turning off the light behind them.\n\n**********\n\nThey both went back to the living room and settled on the sofa. \"Whew, what was that all about?\" Elizabeth exacerbated. \"Jay, you don't need to take me on a date.\"\n\n\"But what if I want to?\" Asked Jacob. \"Would it be alright with you?\"\n\n\"I don't know if I'm ready. We're such good friends too. I don't want to spoil that.\" Elizabeth pondered, wondering if she was really looking for an out.\n\n\"Look Liz, you know you took a risk trying the Topotecan chemo type treatment on Ally a year ago. You don't know if it has helped or was the right thing to do, but you took the risk to try to save Allison. Life is uncertain. You do your best. Sometimes you have to take risks and can only hope things work out.\" Jacob reached over and took Elizabeth's hand. \"I'm willing to risk it, if you are.\"\n\n\"But I don't even know where to begin.\" Stammered Elizabeth.\n\n\"How about like this?\" With that Jacob leaned over and brought his face close to Elizabeth's. His free hand came up and gently caressed her cheek. This caused Elizabeth to close her eyes. She forgot how nice it was to be caressed. She gasped a little as she then felt Jacob's lips touch hers. Gently she pressed her lips back and put her other hand around his waist so she could pull him closer. It was a gentle kiss that lasted for about 20 seconds. His tongue gently tasting her lower lip as they parted. That sent a tingle down Elizabeth's back. She slowly opened her eyes to look in his.\n\n\"That was nice.\" She sighed. \"It's been so long.\"\n\n\"You're a wonderful kisser.\" Jacob said smiling. \"You haven't lost your touch.\"\n\nElizabeth's breath started coming a little quicker as she felt his hand move down to caress her back. She took a deep breath and pushed him back onto the sofa. She adjusted and climbed slightly on him and slightly on the side, pressing her upper body into his; she brought her mouth to Jacob's again. This time her kiss was more passionate and Jacob responded. Their tongues played a dance between their two mouths. Playfully teasing each other as they moved back and forth. Her hands rubbed his chest and she felt how nice his broad shoulders felt.\n\nShe then kicked off her shoes and climbed fully on top of him. Pressing her bosom to his chest, feeling them getting crushed between their two bodies. A tingle ran through them. One that had not been there since Frank had caressed them. Her long skirt hiked up and her legs wrapped around his. She could feel her mound moistening as she rubbed against his thigh. She felt a bulge in his trousers growing under her belly and she shuddered.\n\nThey kissed this way for ten minutes or so. Jacob letting her take the lead, not wanting to push her too fast. But he ached to have her. He had not been with a woman either in over four years. His hand traveled down to her bottom and rubbed her gently through her skirt, helping her to grind herself against him. She moaned softly.\n\nShe moved to the side of Jacob, on the inside of the couch. Her legs thrown over him, her hand on his chest, the other behind his head. She nibbled his neck and he responded by moaning softly too. She then opened her eyes to look at Jacob.\n\nBut what her eyes caught instead was the mantel of the fireplace beyond him. Staring back, from atop the mantle, was the 11x14 photo of Frank. She rose up suddenly, staring at the monument of her late husband over the fireplace. Several photos, the flag she was given at his funeral and the medals he had won. She glanced over to the end table where several pictures of Frank, her and the newborn Allison sat. More family pictures from the wedding rested on the bookshelf to the side. Then she noticed the wedding band that was still on her ring finger. She had worn it so long that many times she often forgot it was even there. But there it was, staring back at her.\n\nShe tightened up and felt a lump in her throat and sat up more, pulling away from Jacob. What was she doing? An in front of Frank, even. \"But he's not here anymore.\" She tried to reason with herself but it was too late. The passion of the moment was taken away.\n\n\"Jay dear, that was very nice.\" Elizabeth explained. \"But I'm tired now. I also need to think this through. Please understand.\"\n\n\"Liz dear, there's no need to explain. Take your time with this. I think Ally's Christmas wish took us both by surprise. I'd like to take you on that date still. How's Saturday? Dinner? Allison doesn't start her new treatment until Monday, right?\"\n\nElizabeth hugged Jacob back. \"That's right. Saturday would work just fine.\"\n\n\"I'll pick you both up around 6p?\" Asked Jacob.\n\n\"Both of us? I'm not sure Allison will be up to it. Why don't we play that by ear?\" Elizabeth said, now feeling a little guilty that she might be leaving Allison. But she left her with her parents when she worked three days a week.\n\n\"That's fine.\" Jacob said standing and adjusting his clothes. Elizabeth grabbed his jacket and they met at the front door. \"Thank you for everything.\" Jacob said, smiling. \"You know I wanted to kiss you that first day I met you in the hospital lobby. Elizabeth, it definitely was worth the wait. Thank you for dinner. Thank you for the company. But most of all, thank you for being you.\" With that Jacob gave Elizabeth another quick kiss.\n\n\"Thank you too.\" Elizabeth said pressing against Jacob for one last hug. \"He feels so nice.\" She thought to herself.\n\nAfter he left, she wandered around the house, straightening it up slightly from the family gathering. She shuddered slightly as she straightened the pillows on the sofa remembering his touch. She put away the remaining dishes, checked to make sure Allison was sleeping and then she slowly walked to her bedroom; all this time, lingering over the thought of their passionate make-out session. She took off her top and bra and touched her breasts lightly. She gasped at her touch, remembering the feeling of them being crushed between their bodies. She entered the bathroom and turned on the shower. She unzipped her skirt and let it fall to the floor. She then pulled down her panties and let them fall on top of her skirt stepping out of both of them. Glancing in the mirror she looked at the curly hair between her legs and remembered grinding against him. It had been so long.\n\nShe strangely noticed that this bathroom was probably one of the few places in the house where a reminder of Frank didn't exist. Even Allison's room had a little photo of him by her bed. She thought back to her mother-in-law's words. \"Don't be afraid of those feelings,\" she had told her. Confused at the time, she now better understood what 'those feelings\" are. The one's Jacob had awoken on the sofa an hour ago.\n\nShe felt a warmth down between her legs as she thought of the passion they had briefly shared. She reached down and ran a finger between her lower lips, surprised to find it moist. She shuddered as her finger ran across her growing bud. She adjusted the water temperature and stepped into the shower. She hesitated and then knew what she wanted. She pulled the removable showerhead off its holder and brought it down to her breast. She sprayed one and then the other and felt them harden under the pulsing water. Then she brought the spray down between her legs and immediately convulsed when the water hit her pleasure spot.\n\nHer knees weakened and she leaned against the wall for support. She slipped a finger inside her as she continued to water her growing passion. It didn't take long as she hadn't released in so long. She relaxed and put thoughts of Frank out of her head and let memories of her and Jacob kissing passionately fill her mind. She let out a quiet moan and this pushed her over the brink. Her spasms engulfing her body and she finally let go.\n\nAt the exact same moment, just a few miles away, Jacob also groaned and released spurts of his manhood onto the shower wall as he too was immersed in thoughts of their passionate kisses.\n\n*************\n\nSaturday morning, Jacob decided to make some rounds to meet with many of the places where the Cookie Jars were located. The throngs of shoppers out on Black Friday made for a great day at the jars. Jacob was happy to see indications that they may break a record for the most money collected in a weekend. He knew Elizabeth and Allison would be happy.\n\nIt had become so large, that they had set up with a local bookkeeping office to handle where the donations were sent. They counted the donations, deposited the money into the account to be set up to transfer to the charity and they provided a weekly report of all the transactions. They would have to wait until then to see exactly how much had been brought in.\n\nHe stopped at the barber for a haircut and then went home to get ready for the evening. He showered and then shaved his five o'clock shadow then splashed on a little cologne. He put on his tan Dockers, a Perry-Ellis button-up shirt and covered it with a cream-colored cable knit sweater.\n\nHe arrived at the house a little before six and rang the bell. Elizabeth's dad answered the door. \"Oh hi, Ben.\" Jacob said feeling like a teenager taking out this man's daughter. He hoped he would not get the fatherly lecture. He was also a little surprised at seeing him there. \"I'm here to pick up the girls, I think. Everything okay.\"\n\n\"Everything's great.\" Ben said. \"Allison called this morning and wanted Peggy and I to come over to be with her tonight. \"Frankly, I think when she heard you had invited the two of them; she didn't want to be in the way. Smart little girl, that one, wouldn't you say.\" Ben winked, shook Jacob's hand then he backed away to let him enter.\n\nPeggy wheeled Allison into the room and she smiled when she saw Jacob. \"Woo-wee, you're looking sharp!\" Allison exclaimed. \"Wait 'till you see momma though. She's been getting ready all afternoon. I even got to put some make-up on. Can you tell?\"\n\nJacob came over and pretended to examine Allison closely. \"You look marvelous, my darling... simply ma' volous....\" Allison giggled as Jacob gave her a quick peck on the cheek.\n\n\"Hey, stop that! You'll ruin my make-up!\" Allison giggled. \"Besides, save it for mama,\" she added with a smile.\n\n\"Save what for me?\" Elizabeth said as she entered the room. Jacob's mouth dropped and he was enthralled by the beauty before him. She had on a lovely red dress that cut straight across the top, held up by two spaghetti straps. The back plunged way down with a few strands holding the back together. The length was just below the knees with a slight slit up the side. Her toes and nails were also painted red to accentuate the dress. Her feet were wrapped in some red two-inch heels and her fishnet stockings had a little design up the sides. She had on a pearl necklace to match her earrings. Her hair was up. Jacob had never seen her with her hair up and he thought it was being held up by magic, as he couldn't see any signs of berets or clips. Her lips were painted with the same red lipstick that he faintly saw on Allison earlier.\n\n\"Wow, my lady in red!\" Jacob finally got out, his jaw still on the floor. He had never seen her dressed this way before. \"You look beautiful!\"\n\n\"Doesn't she!\" Exclaimed Allison. \"My mom's a real beauty, huh?! You two go have fun. I'm going to have fun with Gramps and Nana. Don't worry about us, kay! I'll be fine momma. No need to worry about me.\"",
        "\"Oh sugar, you're such a sweetie.\" Elizabeth started to choke up. She knew her daughter was trying to be brave and strong so she would enjoy her evening. Even though she had a rough night and had thrown up some. \"Thank you! And thank you mom and dad for watching her. I have my cell phone. Call me if you need anything.\"\n\n\"Don't worry.\" Peggy chimed in. \"You kids go have a good time.\"\n\n************\n\n\"I have reservations at La Scala in Dublin. Hope Italian is okay tonight. Maybe dancing or a comedy club after? We can play it by ear.\" Jacob said after they settled in the car and were heading down the road. \"Did I already say you look fantastic?\"\n\n\"Yes, well sort of but you can keep saying it. It sounds nice. You look very nice too.\" Elizabeth said, realizing she had not been complimented by a man in a long time. And it made her feel good.\n\n\"How was Allison doing today?\" Asked Jacob. It was sort of a regular question he asked every time he saw her.\n\n\"She had a bit of a rough night. I was thinking of canceling today. Then this morning she woke up like a trouper and had a good day. I didn't know she called my parents until after they called me back and asked what time to show up. I was going to tell them not to come but they insisted.\" She reached over and put her hand on Jacob's. \"Now that you're here, I'm glad they did.\"\n\n\"Me too.\" Jacob said, liking the feel of her hand. He looked down to admire her red painted nails again. Then he noticed it. He looked again and confirmed. She had taken off her wedding ring.\n\n\"But let's make tonight about us.\" Elizabeth said. \"No more talk about the Cookie Jar or Allison.\"\n\n\"You got a deal.\" Jacob agreed.\n\nDinner was wonderful. It was nice getting away from the non-stop life of work, the charity and taking care of Allison. It was a break both of them needed desperately. They talked about themselves. Their past and what they wanted in the future. They talked about their other interests.\n\nElizabeth shared that she had met Frank in college. He was ROTC and at the time, she liked men in uniform. They married right after college and he joined the Army and was recruited into the Rangers. He was a patriot and would do anything for his country, including going off while she was pregnant with Allison. But she supported his belief and honored him as much as she could when he didn't come home.\n\nJacob shared that he had only two serious relationships. The first was with a high school sweetheart that lasted almost through college. Then five years ago, he met another gal and they spent just under two years together. But he was struggling to get his deli/restaurant going and she didn't feel he was spending enough time on her. He didn't blame her. At that time, his business consumed him. Now it was running pretty well and he could afford time to work on things like the Cookie Jar charity.\n\nAfter dinner they decided to head to the Adam's Mark downtown where they had a nightclub with some dancing. They played a mix of 70's and early 80's music, with a little Latin and Big Band thrown in. It was definitely a slightly older crowd but the two didn't mind. They both hadn't danced in so long, and never having danced together, they kind of awkwardly moved around the floor at first. Then after a few songs, it started to come back and they got more comfortable. A few drinks helped too. Soon they were flowing around the floor, not caring if they were dancing well or not. Just enjoying being together.\n\nThen the DJ slowed it down with Louie Armstrong's \"A Wonderful World\". Jacob took Elizabeth in his arms and pulled her close. His hand felt the naked skin of her back and it felt warm and soft. He took her hand and brought her in close to his chest and began to move with the music. Elizabeth snuggled in close. She liked the smell of his cologne and the feel of his arms. She felt warm and safe being held by him.\n\nShe could feel herself falling for him. Yet as she heard the words \"What a wonderful world this would be\", she couldn't help but think of how terrible this world has been to Frank and Allison. A tear started to form in her eye.\n\n\"What's wrong?\" Asked Jacob.\n\n\"Just having trouble staying in the moment.\" Explained Elizabeth. \"Help me... please...\" With that she leaned in, opened her mouth and closed her eyes. Jacob immediately took the invitation and brought his mouth to hers. They rocked gently to the music as they tasted each other's lips. Elizabeth melted from the touch. It felt so right. It made the troubles of her world disappear. And even if it was just for a moment, she was glad for the moment. It was at that time, she knew she wanted to take the risk.\n\nThe song ended and they were sad to let each other go. \"I know we only got here a little while ago,\" said Elizabeth, her voice quivering a little, \"but can we go?\"\n\n\"Okay. Are you tired already?\" Asked Jacob, disappointed that she wanted to end the evening already.\n\n\"No, I'm not tired.\" Replied Elizabeth. \"Can you please take me to your place?\"\n\nJacob's heart leaped. He quickly got the car out of valet and they were on their way. Even though only a few words were spoken, the touch of his hand to hers; her hand brushing his leg; her tongue wetting her lips; his gentle smile; her crossing of her legs to expose the top of her stockings; were communication enough to know what each other was thinking and wanting.\n\nJacob pulled into his garage and pushed the button to close it behind them, locking out the cold night air. Jacob opened her door and took her by the hand into the house. The garage door led into the kitchen and once inside, Jacob removed his coat let it drop to the floor. He turned to Elizabeth and asked, \"Are you sure about this?\"\n\n\"Jay, I don't want to have any regrets and if I don't risk this, I know I will regret it for the rest of my life.\" With that Elizabeth also removed her coat and let it also drop to the floor. Then she stepped into Jacob, closing the gap between them. She caressed his chest for a moment and then ran her hands up through his newly cut hair. \"Nice.\" She said and then parted her lips and kissed his bottom lip. She then moved to his top lip and he returned the kiss. Her tongue snaked out and she wanted to feel the passion again. The passion she felt that night on her sofa. She felt his tongue respond and she moaned as she felt a shiver run up her body.\n\n\"Please take care of me, Jacob. I want to feel you. Please make love to me.\"\n\nWith that Jacob, picked her up in his arms and carried her to his bedroom. He sat her on the edge of the bed and stepped back and pulled off his sweater. He started to unbutton his shirt and Elizabeth reached up to pulled off his belt. He got to the fourth button as she finished with the belt and reached for the button and zipper on his pants. He kicked off his shoes as he finished taking off his shirt and throwing it to the corner of the room. He stepped out of the pants that Elizabeth had pulled down and took off his socks. He stood before her in his boxers, a tent already forming in the front.\n\n\"Oh my, someone's happy to be home,\" Elizabeth blushed. She had forgotten how nice it was to see she was turning on a man. She felt her bra-less nipples raise and brush the front of her dress.\n\nJacob took her hand and stood her up. He pushed the spaghetti straps off her shoulders and his hands caressed her arms, then body, and continued down until he reached the zipper. He pulled that down and then let the dress fall to the floor. He gasped as her naked breasts came into view. They were gorgeous. Finally seeing the 34C breasts of her curvy body. His hands came back to her trim waist, which led flared back out to her perfect hips. She had on some lace v-cut panties. The cut accentuated her long, shapely legs. Her perfect bottom led down to the thigh high stockings she was wearing.\n\nHe stepped in and kissed her gently. Allowing her naked chest to touch his. They both moaned into each other's mouth as they touched. His hand came up to caress her breasts and she eagerly gave them to him. Her hands moved to feel his growing hardness and she gasped at the size.\n\nShe reached for the top of his boxers while he reached for the top of her panties. They continued their wet kisses while they simultaneously moved their hands down, exposing each other's private areas. Jacob's hand came back up and he ran it through her patch. Enjoying the feel of her hair.\n\nCynthia took Jacob's full hardness in her hand and stroked it gently. With the other hand, she reached underneath and caressed his balls. She was happy, when this elicited a moan from Jacob.\n\nBut she was soon distracted as his fingers moved lower, probing her moist lips. She spread her legs a little inviting him to explore more. He pushed her back onto the bed and as she lay back her legs came up as they tried to pull him to her. She shivered at the site of her legs still covered with the thigh-high stockings and her red heels still on her painted feet. What a sexy sight, she thought, hoping the Jacob felt the same way.\n\nIf Elizabeth only knew, the sight of her still covered sexy legs caused the blood to rush to his penis and he grew larger than ever before. The sight of Elizabeth's naked form below him was such an incredible turn-on. He kissed her again and moved down her neck. She moaned. He moved his mouth to her right nipple and sucked gently. She moaned a little louder. He then moved to her left nipple and gently squeezed her right nipple with his hand as he sucked on her left. She added some squirming to her moans. He then kissed his way down her stomach. She groaned when he passed her patch and moved down her legs. This sent small twitches through her body. Then he slowly, teasingly licked back up her inner thigh. \"God, he's driving me crazy,\" she thought to herself.\n\nThen as his tongue finally tasted the lips between her legs, she let out the loudest moan of the night. \"Oh Jay, that feels so wonderful.\" Elizabeth moaned as she pushed her hips up to meet him.\n\n\"This is all for you, baby,\" Jacob said between licks. \"Get lost for a little while and let nothing but my caresses and kisses fill your thoughts.\" Jacob reached to his nightstand where he had some condoms. Without breaking a stride, he opened the package and slipped one on.\n\nElizabeth didn't even notice as she was lost in his tongue's ministrations. She could feel the orgasm building from down deep. A small tingle began and it started to spread throughout her groin area. \"Oh.. ohh... yes... faster... don't stop...\" she moaned.\n\nJacob tried to read her body signs. He wanted to apply just the right amount of pressure on just the right spot. Then he hit it right on. On a scale from one to ten, with ten being the orgasm, she was at about an eight. Jacob suddenly pulled his tongue away. \"Oh no, why did you stop? You felt so good!\" Cried Elizabeth.\n\n\"I want to keep you on the edge.\" Jacob said, smiling as he looked into her eyes. He was amazed at the beauty of her face and relished in her expressions as she squirmed to find some contact to finish her off.\n\n\"Please keep going...\" Elizabeth said, her breath panting.\n\nJacob complied, slipping a finger this time into her.\n\n\"Yesss... oh.. my.. \" Elizabeth moaned. Again, with his finger he started her on the climb again. Level three... then four... five... then at six, his tongue moved to her button and he gently licked. \"Oh... jeez....\" Gasped Elizabeth as she quickly shot up to a level eight... almost there... nine... it was coming... then he pulled away again.\n\n\"Ooohhhhhhhhhhh... you bad boy!\" Groaned Elizabeth she wanted him so bad.\n\n\"Yes, so bad but it makes you feel so good, doesn't it?\" Exalted Jacob just before running his tongue up her slit again.\n\n\"Ugh... uh... oh...\" twitched Elizabeth. She was under his magical spell and he was playing her like a finely tuned instrument.\n\nShe gasped as she felt him move up above her, his warm body now pressing down onto her. She reached one hand up and removing a couple of hidden bobby pins, she shook her hair loose. She then reached down with her hands and grabbed his arse and pulled him to her. Jacob moaned at the sight of this beauty letting her hair down. He pressed his cock against her clit as she moaned and ground her hips against him. It wouldn't take long; as she started to build, yet again. She felt Jacob reach down and position his hard manhood at her entrance, poised to thrust.\n\n\"Wait!\" She gasped. \"I'm not on the pill.\"\n\n\"Don't worry baby, I already slipped on some protection.\" He lifted up so she could look down to see him sheathed in latex.\n\n\"You're a sneaky one, getting that on without me noticing.\" She smiled.\n\n\"You were too busy doing this.\" He said as he rubbed his cock back up and down her slit again, coating it with her wetness. This caused immediately more moans to come out of Elizabeth's mouth.\n\n\"Oh, you're right, this would ... uh... have me... oh... completely distracted...\" God, she was building again.\n\nThis time he positioned himself and pushed gently into her. She clamped her hands to his back and buried her head into his shoulder. She bit slightly but he didn't even feel it as the intense pleasure encompassing his throbbing member overwhelmed him.\n\nShe was so tight as she hadn't even used a vibrator or dildo down there in so many years. Her sexual desires had disappeared as she had to focus her care on Allison. Now those desires returned with a flood. She felt him push and slowly fill her and she would gasp and twitch as he moved deeper into her. Her build to her orgasm had dropped back down and seemed to now linger at around a level five as he slowly entered her, centimeter by centimeter.\n\nFinally, she had all of him in her and she began to grind her hips, her hands moving back down to his ass. He knew she was close and he brought one hand to her face and caressed her gently, his mouth came down to ravish hers, his tongue probing deep into her mouth. He knew what it would take to finish her off and started with some slow long strokes in and out.\n\n\"Oh, god,\" she moaned again. \"Deeper... give it to me deeper...\"\n\nJacob sped up his strokes but kept them long. He felt her tighten her grip on his ass and he knew he had her on the edge. He kept up his pace wanting her to finally release.\n\nElizabeth felt him speed up and immediately felt warmth start to fill her insides. This was followed by a tingle in her groin that spread and grew. Jacob suddenly shortened his strokes and moved up slightly rubbing against her pelvic bone. It hit her perfectly and it gave more friction to her swollen pleasure spot. She felt herself quickly rise... level eight... nine... to the edge of an orgasm and it seem to linger there for a moment... then 10! Finally, it splashed over her as wave after wave crashed over her body.\n\n\"Oohhh... yess... jjjaayyy... babbyyy...II'mmmm ...ohhhhhhhhhh\" Elizabeth couldn't speak any more. Only grunts came out of her mouth. Each wave she would grunt and pull him closer. Her head thrashed back and forth beneath him as he gave up trying to hold her mouth still long enough to kiss her again.\n\nFinally, the waves stopped and she lay there panting... She finally opened her eyes and found him staring into hers. \"Oh... hello...\" she said smiling.\n\n\"Go for a nice ride?\" He asked.\n\n\"I don't think it's done yet.\" She said grinning, as she tightened her muscles and felt him still hard inside her.\n\nThis caused him to grunt and he pulled out and slowly entered her again.\n\n\"Your turn, sweetie. You gave it to me good; it's your turn now.\" Elizabeth encouraged him on.\n\nJacob had been putting off his pleasure, but now that she had been satisfied he turned his focus to himself. He knew it wouldn't be long as he had struggled to hold back earlier.\n\n\"Roll me over\" Elizabeth said. He obliged and staying together they managed to roll her on top. She put her hands on his chest and started to grind her hips. \"I'll take care of you.\" She said wryly and she then started to pump up and down.\n\nThis position allowed Elizabeth to rub her clit more efficiently on Jacob and she was surprised to feel another orgasm coming on. This had happened only rarely to her before. \"Ughh... God Liz, you feel so good\", she heard Jacob gasp. This prompted her to move faster.\n\n\"You're driving me crazy.\" Jacob continued, but now Elizabeth was lost too.\n\nThis one snuck up on her quickly as she rode Jacob fast. \"Oohhhhhhh... she moaned as a smaller but very pleasant orgasm shook her body.\"\n\nJacob felt Elizabeth's muscles tighten up on his throbbing member and that sent him over the edge too. \"Yes, lover... yes...\" He called out as he emptied his balls into the reservoir tip.\n\nElizabeth collapsed onto his chest breathing hard. Jacob reached over for a blanket and covered the both of them. \n\n\"That was great.\" Elizabeth whispered to Jacob. \"That was more then great, Jay, that was wonderful... wow!\"\n\n\"It was a wow for me too.\" Said Jacob in reply, \"I wish we could do that all night.\"\n\n\"I know, darling. But I must get back to the house to relieve my parents.\" Elizabeth said looking at the clock. \"It's already almost eleven and my dad will shoot you if you keep me out past my curfew.\" She smiled at him and gave him another kiss.\n\nJacob had her back to the house by 11:30 and kissed Elizabeth good-bye on the porch. She put her key in the lock but the door opened as her mom, met her at the door.\n\n\"Looks like you had a nice time, sweetie,\" Peggy said to Elizabeth as she entered. She winked and Elizabeth blushed with embarrassment that her mom could tell she had just gotten 'lucky'. Her dad was more oblivious, probably because he had also fallen asleep in front the TV. He was groggy but helped gather their things and they headed back to their house.\n\nElizabeth checked on Allison leaned over to give her a good nice kiss. \"Was it a nice date?\" Allison surprised her. The sound of her coming home had woken her up.\n\n\"Yes, sweetheart, a very nice date. How was your night?\" Elizabeth asked back.\n\n\"Fine, I beat Grandpa three times in Go Fish. Do you love J.J. now?\" Asked Allison.\n\n\"Oh honey... yes... I think I do.\" Elizabeth said, realizing how good he had made her feel tonight.\n\n\"I'm so happy, momma! Maybe I'll get my wish.\" Allison murmured; sleep taking over her little body again.\n\n\"I don't know, baby. Don't get your hopes up to high. You just keep fighting your disease.\" But Allison didn't hear her as she had fallen fast asleep.\n\n***************\n\nJacob spent almost every day now with Elizabeth and Allison. Allison would delight in seeing her mom smile whenever Jacob would kiss her or stroke her hand. They went out once to a Chuck E. Cheese where Allison enjoyed the animated character show. She was too weak to play any of the games. She was in and out for treatments and she was trying her hardest to fight. She wanted so much to see her mom and J.J. together.\n\nElizabeth and Jacob were able to go out on a couple more dates together. They enjoyed each other's company and were both happy that after so many years of being friends, they had taken it to the next level. It felt so right for the two of them. They were also happy that they were compatible lovers, wanting to spend as much time playing between the sheets but their busy schedules precluded much of that. Still their passion for each other burned and it made them feel alive.\n\nThen on Friday, December 18th Jacob called to see if they were available. Allison's stomach had filled with fluid again indicating that the tumor in her stomach area was growing again. They were at the hospital getting ready for another round of chemotherapy. Jacob showed up with some flowers for Elizabeth and flowers and balloons from Allison.\n\nEven though Allison was in pain, she smiled and could sense something was up. Jacob was pacing nervously back and forth as Elizabeth sat on the bed comforting Allison.",
        "\"What's the matter?\" Asked Allison, sensing Jacob's nervousness.\n\n\"Uhmm... nothing...\" replied Jacob, still amazed at this little girl's perceptiveness.\n\n\"I know you better, J.J., spill it!\" Allison said, trying to look stern.\n\n\"Okay, I want to ask you both something.\" With that he sat on Allison's bed next to Elizabeth and took her hand. \"You both mean the world to me,\" Jacob proceeded. He then took Allison's hand and placed it on top of her mom's. He then placed one of his hands on both of theirs. With his other hand he then reached into his pocket and removed a beautiful diamond ring.\n\nAllison's eyes lit up. With her free hand she quickly reached for the nurses call button and pushed it several times. This caused several of the shift nurses to come running followed by Nancy, the Candy Striper.\n\n\"Lookie! Lookie! Lookie!\" Allison yelled as they all entered the room. \"Oh, I'm so happy!\"\n\n\"Well, uhmm..\" Jacob stammered. \"I didn't expect an audience, but here goes. Elizabeth, I love you so very much. And I love you too Allison. You would both make me so happy, if I could join your family. Me, Elizabeth, Allison and Dinger! Elizabeth, darling, what do you say?\"\n\n\"Yes! Yes! Yes!\" Exclaimed Allison with tears now streaming down her cheeks. \"Oh yes, my wish will come true! Oh mommy, please say yes!\"\n\nNancy grabbed the tissue box next to the bed and passed it around to the other nurses as they all started to cry at this site. \n\n\"Oh Ally sweetie, I love Jacob so much too. Of course I will marry him! Now give me one of those tissues!\" Elizabeth cried.\n\nThe three of them hugged while the nurses scrambled to find the doctors and some sparkling cider, juice or anything to toast and celebrate.\n\n*************\n\nJacob and Elizabeth talked and agreed to try to rush to make Allison's Christmas wish come true. They scrambled to put things together quickly. This wasn't easy doing all this while also having to balance work and taking care of Allison's visits to the hospital for treatments. It took a day for Elizabeth to find a copy of her husband's death certificate and then she and Jacob were down at the county office to file for a marriage license. They smiled when they saw an Allison's Cookie Jar on the counter of the County Registrars office. Then they rushed out to find Elizabeth a wedding dress and rent Jacob a tux. They also found a cute little maid-of-honor dress for Allison. They paid extra to have the clothes altered by Friday.\n\nThey had to do some serious convincing to the hospital executives that a quick ceremony in their waiting room would not be disruptive to hospital business and that it would be Christmas anyway and most patients would be home with their families. As Allison's Cookie Jar fund was now helping to fund some of the research at the Children's Hospital, they finally acquiesced.\n\nJacob had a regular Jewish customer who was a local judge and who he saw putting money in the Cookie Jar every week. He asked if he would preside as the Justice of the Peace at their wedding. He was more than happily to obliged as he usually just spent that day with his other Jewish friends kibitzing and he could take an hour out of the day to make this a special one for Allison.\n\nElizabeth and Jacob also spent some time talking about another special Christmas present they could get Allison. Actually, it would be a special gift for the whole family. They agreed and set about making plans.\n\nDuring all this time, the number of smiles it brought to Allison's face made it all worthwhile. Allison bravely told them to go do their things and not to worry about her. She was doing fine and would spend more time with Nana and Gramps or Nancy at the hospital.\n\n*********\n\nChristmas Eve. Arrived and it was a calm before the storm, well, in rushing around at least. A small snowstorm moved in started laying down a dusting of virgin snow across the area. Everything became very white and tranquil.\n\nBoth Allison's white and red blood count started to drop again, so the doctor's had recommended her to come into the hospital for fear of an infection at this point could be dangerous. They didn't mind as they would all be there in the morning anyways. Elizabeth took her wedding dress so she could sleep with her at the hospital.\n\nAll day and into the early evening, all the family came by for a little while to sit and share in the Christmas spirit. Sue had even picked up Dinger and brought him by which brought smiles to everyone's face. Even Ted, from the bookkeeping company came by and told them that the donations were coming in at a record pace. If this kept up, they might reach their goal of one million dollars by the middle of next year.\n\nThey set up a little fake tree in her room and decorated it with some lights and garland. They put some gifts under the tree and Allison lit up with excitement. \"Are any of those for me?\" She asked.\n\n\"This little one here, is for you\", said Elizabeth, pointing to a little box with a card attached. But you can't open it until we say you can.\"\n\n\"I'm so glad you are getting married.\" Smiled Allison. \"You two will be together forever and that makes me happy.\"\n\n\"We all will be together forever.\" Reminded Elizabeth.\n\n\"That's right, Cap'n. As a family.\" Jacob chimed in.\n\n\"I love you both so much.\" Allison gave both a hug and then closed her eyes to sleep; knowing tomorrow would be such a happy day.\n\n***************\n\nIt was Sunday morning, December 25th, 2005 and they awoke to three inches of newly fallen snow. The sun came out and made for a glorious morning. The air smelled fresh, clean and crisp. A perfect white Christmas morning: A perfect day for a wedding.\n\nAt eleven in the morning they all gathered in the waiting room. Jacob's parents had flown in from Florida and his brother had driven in from Cincinnati to serve as his best man, all of them luckily getting in the yesterday before the weather turned to snow. Ben and Peggy, of course were there as well as Sue and her family. Frank's parents had also shown up, much to the surprise and joy of Elizabeth, Jacob and Allison. Even Dinger got special permission to join them and he sat happily in the back of the room working on his chew stick. A few other friends and staff from the shop were there. In addition, the family of nurses and doctors and staff on duty, crowded into the small waiting room on the third floor as they also felt like family to this group. A few of them had even come in on their own accord, what with it being their holiday day off, to share this with them.\n\nAllison smiled the whole time thinking it was the most of perfect of days as Elizabeth and Jacob were bound together in marriage, making them the complete family that Allison always wanted.\n\nThey celebrated with cake and punch and Elizabeth threw the bouquet right to Allison. \"Oh momma, I already got married. Today I got married to J.J. too, in the most beautifullest of ceremonies.\" She smiled and everyone in the room cheered.\n\nElizabeth and Jacob had planned a quick honeymoon back at the Adam's Mark hotel, where they went on their first date. Elizabeth was hesitant at leaving Allison, knowing she was going through a particularly rough time.\n\n\"Momma, you go on your honeymoon and do whatever it is that you do. I'm fine! Besides Nana said she would sleep here with me tonight.\" Allison tried to sit up straight in her chair and smiled.\n\n\"We'll be fine.\" Peggy also reassured, \"Plus with the ward is almost empty and we have the nurses to ourselves too.\" \n\n\"Okay.\" Elizabeth finally agreed. She thanked and kissed her parents and then kissed Allison good-bye as did Jacob.\n\n***********\n\nJacob carried Elizabeth over the threshold of the honeymoon suite they had rented for the night. Elizabeth laughed at the gesture. \"I guess you're moving in with me and Ally as your place doesn't have room for all of us.\" Elizabeth said, smiling. \"You'll have to carry me across that threshold too.\"\n\n\"You sure know how to get a man tired, carrying you all over the place, Mrs. Jensen.\" Jacoob laughed.\n\n\"Well, Mr. Jensen. I can think of a few more ways to tire you out!\" With that she motioned for him to follow her to the bedroom.\n\nTonight there would be no rushing. It was their night to spend together, escaping the troubles of their real world. Jacob slowly undressed Elizabeth from her wedding dress, reveling in the beauty of her naked body.\n\n\"I love a man in a tux!\" Elizabeth exclaimed. \"However at this moment, I prefer this man, out of his tux!\" She pulled on his cumber bund and then his belt.\n\nSoon they were both naked. And Elizabeth pushed Jacob into the lounge chair overlooking a large picture window. In the darkness, they could still see the empty snow covered streets. Elizabeth knelt in front of Jacob and kissed down his body until she came to his hardened staff. She stroked it a few times with her hand and then her tongue came out and gently licked the tip.\n\n\"Ohhh...my... that's nice.\" Jacob moaned.\n\n\"And there's more where that came from.\" Elizabeth said between licks.\n\nJacob leaned back as Elizabeth took more and more of him into her mouth. She stroked the exposed shaft with her hand, milking the pre-cum up to the tip and then sucking it off gently. She then started into a rhythm with her mouth, hand and tongue that caused Jacob to arch his back and moan in pleasure. Soon Jacob could feel an orgasm start to build. Elizabeth sped up, faster and faster. She brought him to the very edge of his orgasm and then suddenly stopped.\n\n\"Paybacks are a bitch, aren't they?\" Elizabeth said smiling up at Jacob.\n\n\"Oh, you're a bad girl!\" Jacob groaned. \"Oh, you have me so wound up!\"\n\n\"Yup, very bad!\" Elizabeth groaned as she brought him to the brink again. At the same time she was rubbing herself and she could feel herself getting very wet below. Just before he exploded she stopped again and the look on Jacob's face was excruciating. She loved teasing him like this and paying him back from their first night of making love. She then stood up and went to the bed and laid down.\n\n\"Come take me, Mr. Jensen\" Elizabeth said in her most sultry voice. Weak in the knees, Jacob managed to make it to the bed.\n\n\"I want you, Jay!\" Moaned Elizabeth. \"Sweetheart, hurry and come here.\" \n\nJacob climbed on top of her and slowly lowered himself. Elizabeth reached down to guide Jacob to her entrance. Then she reached around and put her hands on his arse and pulled him down.\n\nThey both moaned as they coupled for the first time as husband and wife. Jacob was already close and he fought to hold it back. But at that moment, Elizabeth didn't care about her own pleasure. She was happy enough being married to this wonderful man. He had opened up her soul again and in the midst of her struggles with Allison, she felt like a woman again.\n\nShe felt Jacob increase in speed and knew he was getting close. She wrapped her legs around him. Listening to Jacob's heated breathing and feeling him plunging into her sent her into a small orgasm. It snuck up and surprised her. \"Oh yes, my husband. You made me cum. Oh, you're so good. Oh... yes... Now, I want you to give it to me too. Deep inside me! Do it, baby! Cum for me!\"\n\nWith that prodding Jacob exploded. It felt like it wouldn't stop as stream after stream rushed out of him.\n\nThey collapsed and fell asleep. Finally resting after the few weeks of running around to get the wedding done.\n\nThey awoke in the middle of the night, still on top of the bed shivering. They climbed under the covers and the feel of each other's naked skin brought the lust out again. Under the covers they made love again. This time quick and to the point before they drifted back to sleep.\n\nThey awoke in the morning to a knock on the door. They forgot they had put out the sign for the hotel to bring breakfast at nine. Jacob threw on a robe and opened the door to find a tray of pastries, juice and coffee. They both ate, then took a quick shower together. Washing each other from head to toes. When Elizabeth soaped Jacob's cock he immediately started to grow again.\n\n\"Boy he sure is hungry.\" She giggled.\n\n\"'Cause you're such good eating.\" Jacob replied.\n\n\"Merry Christmas, Mr. Jensen\" She said as she bent down and took his wet member into her mouth.\n\n\"Merry Christmas, Mrs. Jensen\" He said as he reached around to her behind and brought his fingers to her wet lower lips.\n\nThey spent a few minutes caressing each other but then wanting to get more comfortable, they turned off the shower, dried off and headed for the bed. They only made it as far as the sofa, where they sank into each other's arms. They kissed passionately remembering their first night making out on her sofa. They felt like teenagers who couldn't get enough of each other. Jacob sat up and Elizabeth came up and straddled him, gently lowering herself onto his raised shaft. She moved up and down on him, relishing each stroke as he filled her.\n\nThey slowly made love, Elizabeth in awe as he brought her to another mind shattering orgasm before erupting himself.\n\nAs they were relaxing from their post-coital bliss, Elizabeth's cell phone rang. It was Peggy. \"Elizabeth darling, I'm so sorry to bother you this morning, but it's Allison. I think you and Jacob better come down here right away.\"\n\n**********\n\nWhen they got to the hospital, the doctor met them outside the room. He took them into the conference room and sat them down.\n\n\"I have to say that Allison is one tough fighter.\" The doctor began. \"We are surprised that with how far the tumors have progressed that she has even gotten this far.\"\n\nElizabeth grasped Jacob's hand. Tears began to well up in her eyes.\n\n\"She has been fighting hard these past few months and I think it's because she wanted to see that you are happy, Elizabeth. Your wedding was very important to her. But now the tumors are winning. I don't know what else we can do.\"\n\n\"Oh, my God!\" Elizabeth groaned, realizing what the doctor was saying. \"You're sure there's nothing else we can do? Please, there has to be something else.\"\n\n\"Her Cookie Jar project gave her hope, your marriage gave her hope and her tough spirit kept her going much longer than anyone could have imagined. All we can do now is to make her as comfortable as possible. I'm sorry to tell you this so soon after such a happy occasion, but I felt you could make the best of the little time left.\"\n\n\"Thank you doctor. We know you and your staff have done their best.\" Jacob answered, as Elizabeth was too stunned and shocked to say anything.\n\nThe doctor left and the two broke down and cried. At least they had each other to lean on and they used it as they wept uncontrollably. Finally after they had let it all out, Elizabeth looked at Jacob, \"We have to be strong for her now. If she sees us upset, she will worry and it won't be easy.\"\n\n\"Yes, I agree.\" Said Jacob. \"I am here for you. For the both of you.\" He wiped his eyes and hugged Elizabeth.\n\nThey walked to Allison's room and did their best to put on a brave face.\n\n\"Hi momma! Hi Daddy.\" Allison smiled. \"Can I call you Daddy now, J.J.? Did Nana or the doctors call you? I'm sorry. I threw up a couple of times. But I didn't want them to bother you.\" Her smile turned to a frown.\n\n\"Oh... Angel\", Elizabeth said, fighting hard to maintain her composure. \"We just missed you and wanted to see you as soon as we could.\"\n\n\"That's right Cap'n. It's Christmas and we want to share it with you as much as we could.\" Jacob added in.\n\n\"Momma? Daddy? I know I'm getting real tired.\" Allison said, her normally cheery mood gone. It was as she seemed to know. \" It hurts more too. Can we just go home? I just want us to be a family.\"\n\n\"I'm sure that can be arranged, sweetheart. Let us talk with the doctor.\" Elizabeth said, stroking Allison's forehead.\n\nThe doctors felt that was a good idea. They prescribed some pain medicine and set up a schedule for an outcall nurse to stop by every day. They signed the release papers and packed Allison's things. While everyone tried to remain upbeat, there was an underlying tone that this might be the last the staff would see of little Allison and it was hard saying good-bye. Candy Striper Nancy gave her a quick kiss and hug and then ran back into the hospital so she wouldn't break down and cry in front of her.\n\nThey made her comfortable at home and even set back up the tree and Christmas decorations in her room for her to see. Jacob and Elizabeth told their work that they wouldn't be in for a few days and they spent all their time together. They told stories and played Go Fish, watched movies and held hands. Even Dinger was allowed up on her bed for her to pet.\n\nAllison enjoyed those days and felt like they were a real family. She was grateful that she was able to experience this but she could feel herself getting more tired every day.\n\nIt was Saturday, December 31st and they had spent another day together. Many of the family, friends and staff from the hospital took the time to stop by to see how they were doing. Allison was happy to see how many kind people were in their lives.\n\nIt was getting close to midnight. They had moved a T.V. into Allison's room and they had fallen asleep waiting for the New Year. The T.V. showed the various New Year's celebrations from around the world.\n\n\"Momma? Daddy?\" They heard Allison call. Elizabeth and Jacob woke up with a start, hearing her soft voice.\n\n\"I'm so tired.\" Allison said, her cheeks hollow and her face was drained from fighting the battle with her cancer nemesis.\n\n\"I know, Angel.\" Elizabeth whispered. \"We're here.\" Jacob and Elizabeth took her hand. \"Can you feel us?\"\n\n\"Yes, I can. And it makes me happy, even though I hurt. I'm so happy you two are together because I think I have to go now. I'm so tired of the pain.\"\n\nElizabeth let out a small gasp, then sighed as she resigned herself to the inevitable. \"Okay, you rest, Angel. You deserve peace and release from your pain. You don't worry about us, we will see you again in your special place.\"\n\n\"I'm... I'm... oh momma, please no more pain. Momma?\" Allison's tired body was struggling hard to stay awake.\n\n\"Yes, baby.\" Elizabeth said, choking back her tears.\n\n\"And you will have my special present too!\" Allison struggled and got out a little smile.\n\n\"What do you mean, Ally.\" Jacob said quizzically.\n\n\"My other special Christmas present.\" Allison tried to explain in her lucid state. \"You... you see... I... I... wasn't a good girl.\"\n\nJacob and Elizabeth realized the other special present they had for Allison was still under her tree unopened. They looked at each other because at that point they didn't want her to open it since her condition had worsened. They had hoped she would forget about it.\n\n\"Why is that?\" Said Elizabeth softly, squeezing Allison's hand.\n\n\"Because I asked Nana to let me... let me hold it. You know... the... the present. And when I held it... I... I... shook it and I knew what... what... it was. And I'm so happy. It's... it's... a baby rattle! You... want a... a... baby for Christmas.\" Allison squeezed both their hands back and a weak smile crept onto her face for the last time. She was getting weaker by the moment.\n\nWith tired eyes she finally looked at both of them.\n\n\"I love Nana and Gramps. I love Dinger. I love the new baby and I love you both...\"\n\nWith that she closed her eyes for the last time.\n\nElizabeth and Jacob sobbed and held her hand. Fireworks could be heard in the background as the New Year came in. But they didn't hear them as they wept for their little Angel, his Cap'n and the sunshine of their lives.\n\nAnd while one love was now lost and gone, deep in Elizabeth's womb, the life that had been created on their wedding night continued to grow, thus starting another circle of love...\n\nThe End\n\n**********\n\nThis Story is dedicated to my cousin Allison, who at the passed away of this terrible disease over thirty years ago at a very young age. Tremendous strides have been made towards curing this disease but we still lose children to it every year. Little Alex Scott, who passed away last year on August 1st, 2004 at the age of 8, also inspired this story. She is the inspiration behind Alex's Lemonade Stand, which has raised millions of dollars to help fight this disease. They have a goal to reach $5 Million. We can help.",
        "It is still a battle. Did you know?\n\n\u2022 One in every 330 Americans develops cancer before the age of twenty.\n\n\u2022 On the average, 46 children and adolescents are diagnosed with cancer every weekday in the United States\n\n\u2022 On the average, one in every four elementary schools has a child with cancer. The average high school has two students who are current or former cancer patients.\n\n\u2022 Cancer is the leading cause of death by disease in children under the age of 15 in the United States. \n\n\u2022 Childhood cancers affect more potential patient-years of life than any other cancer except breast and lung cancer.\n\n\u2022 The causes of most childhood cancers are unknown. At present, childhood cancer cannot be prevented.\n\n\u2022 Childhood cancer occurs regularly, randomly and spares no ethnic group, socioeconomic class, or geographic region.\n\n\u2022 In the United States, the incidence of cancer among adolescents and young adults is increasing at a greater rate than any other age group, except those over 65 years.\n\nFor these young children, they had no choice. Fate has given them this disease. But we can help continue to cure them. Maybe, one day, we will also find a way to prevent it. This holiday season, be thankful for what you are blessed with and help those who aren't as blessed. \n\n*\n\nCopyright \u00a9 11/16/2005 by XCL "
    ],
    "authorname": "CrossCountryLover",
    "tags": [
        "holidays",
        "masturbation",
        "cancer",
        "charity"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-circle-of-love"
}