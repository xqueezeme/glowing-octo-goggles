{
    "title": "Do Over",
    "pages": [
        "My meditations lately had settled upon the female form, the gentle curve of the breast, the roundness of the hip flowing into the buttock. My sensei would say that I was allowing my body to direct my meditation. I personally would say that I was horny. That was my dilemma. \n\nI had moved to the north woods because I was too caught up in the material things of this world and I had worked hard to quell those desires. Unfortunately, I had brought my body with me, and it had its own agenda.\n\nShe pulled up in a nondescript SUV on a cool August morning as robins hopped about the lawn and a woodpecker hammered from a white pine. \n\nPerhaps she was the vanguard of a family getting ready to spend a few weeks in the north woods. I watched from my gazebo.\n\nThe opening windows traced her path from front to back through her house. She emerged from the rear door with an armful of blankets that she threw over a clothesline to air out. The slender brunette intended to stay there a while with or without company. \n\nI tried to resume my meditation, but the spell had been broken. I am still at the shallow end of the meditation pool. \n\nMy solitary life was going to change. I would have to wear clothing when I stepped outside.\n\nMy home faced my neighbor's home fifty yards away across an inlet off a small lake. No other cabins sat around that lake because it is part of the Huron National Forest, and there is nothing but white pine and cedar swamp. For the past year, I had been the only soul except for the occasional fisherman who launched his canoe and paddled around the lake casting for pike. Even he did not enter the inlet where my house and the other sat.\n\nThe day passed as it normally did. The laughing call of the loons floated from across the lake, and cicadas buzzed high up in the trees. \n\nMy new neighbor frequently walked outside to talk on her cell phone. Her reception was as bad as mine. She waved to me in the afternoon when she wandered down to the water's edge. I waved back unsure if she could tell I was naked on my patio.\n\nThat evening as shadows deepened into night, the woman screamed for help from the cedar swamp. I knew immediately what had happened, as I raced across my lawn to the dense stand of cedars where the inlet's water flowed into a swamp that drained into Lower Turtle Lake.\n\nDodging low branches and blackberry canes, I pushed into the forbidding darkness.\n\n\"Where are you?\" I called into the gloom.\n\n\"Follow my voice and please hurry. I'm sinking,\" the urgency in her voice hovered on the edge of panic.\n\nI spied her through a tangle of dead branches. She had fallen into the slough that had nearly claimed me a couple weeks before, and was fighting to get out of the waist deep muck. During the dry summer, the mud crusted over that seep and sparse grass grew in the leaf litter that fell onto it. It looked like firm ground until you stepped on it and fell into mud the consistency of oatmeal that was so cold it took your breath away.\n\nI pushed through the dead branches and knelt down on the last bit of firm ground.\n\n\"Can you reach my hand?\" \n\nShe shook her head. \"Please hurry. I keep sinking lower.\"\n\n\"I'll be right back.\"\n\nI walked back into the woods and found a dead sapling that was still standing. I pushed it over and then dragged it to the pool and slid it out to her. \"Grab this, and I'll pull you closer.\"\n\nShe gripped it for dear life, but it slid through her hands when I pulled. \n\n\"The suction of the mud was too strong,\" panic shrilled her voice.\n\n\"All right, I'm coming in.\"\n\nI waded into the muck shuddering as the spring fed water chilled me. I held onto the sapling with one hand and extended my other to her. \"Grab my hand.\"\n\nShe did and I slowly tugged her to me against the resistance of the clinging mud. While I was supporting my weight and hers, the sapling slipped a little further into the muck, but it held for now. We needed to get out of this before this quagmire trapped both of us.\n\n\"I'm going to push you onto solid ground.\"\n\nI grabbed her by the waist and in stages moved her along the sapling closer to the shore. \"I've got a toehold on a root. Get ready, I'm going to hoist you onto firm ground.\"\n\nI slid my arm between her legs up to my elbow, and lifted her with all my might throwing her toward the tangled roots of a cedar. She lay panting on ground barely firm enough to hold her.\n\n\"Now grab those roots in front of you and use it to pull your legs out of the muck.\"\n\n\"I can't,\" she gasped, \"I'm afraid I'll slide back in if I move.\"\n\n\"Wait a minute.\" I pulled myself closer to the shore until my head was squarely between her legs. I leaned my head into her mud covered crotch and braced her ass against my forehead.\n\n\"Okay, grab that bush. I'll keep you from sliding back.\"\n\nShe gasped when she slid back, but I braced her with my face, and with a little work, she managed to crawl away from the swamp's edge.\n\n\"How are you going to get out? I can't pull you out.\" She sat on the roots of a cedar tree covered in a muck that refused to be wiped off.\n\nI pointed to the sapling. \"I want you to stand on it, and try to anchor it to the ground while I work myself out.\"\n\nShe did and a few minutes later I lay gasping at the edge of the muck covered from chest down in thick clinging mud.\n\nShe sat down next to me laughing. \"That's a hell of a way to meet your new neighbor by having him shove his head up your ass.\" She wiped mud off her face. \"It looked like solid ground. I thought I was going to die. Are you okay?\"\n\n\"I'm fine. I need to catch my breath.\"\n\n\"I came over to see if you knew how to start my well pump. Every time I turn it on, it kicks off again. I was going to drive over, but it looked like I had to go five miles around the lake to get to your house. Then I saw the woods and thought I'd cut through.\" She looked down at her clothes. \"Now look at me.\"\n\nI stood. \"Let's go down by the water, and wash this mud off.\"\n\nShe cocked an eyebrow at me. \"You want me to take off my clothes in front of you?\"\n\n\"What else are you going to do? You have no water at your house, and I don't want all that mud dragged into my house. Rinse yourself off, and then you can take a shower at my house. I'll give you a bathrobe to wear.\"\n\nShe followed me down to the water in the gathering gloom. I waded in and submerged myself scrubbing to get the mud off me. She waded in a modest ten yards away, and scraped at the mud on her blouse without taking it off. \n\n\"This isn't working,\" she muttered. \n\nShe waded deeper. I thought she was going to swim back to her house, but she stopped when the water was up to her shoulders, removed her blouse and wrung it. \n\n\"My blouse is still too muddy to wear. Every time I wring it out, I get more mud.\" \n\nWith a mumbled curse, she threw the wadded blouse up onto the bank. \n\n\"I think I'll just dog paddle my way back to my house, and I'll pick up my blouse tomorrow.\"\n\n\"You don't have water, how are you going to get clean?\"\n\nThat stopped her.\n\n\"Come up to my house. You can take a warm shower, and then I can take you home with some water so you can brew coffee in the morning.\"\n\n\"Let me see what I can do with these pants.\"\n\nI watched her bob back and forth struggling to get out of her pants in the water. When the white pants floated to the surface she eyed them critically. \"They're worse than my top.\" She cursed under her breath, and threw them onto the shore too.\n\n\"I think I will accept your kind offer,\" she sighed with a touch of resignation in her voice.\n\nWith that she waded out of the water wearing a mud stained bra and pantie set. \n\n\"I don't even know your name, and now you see me in all my glory.\" She curtsied.\n\nShe was tall and had a nice trim figure. I estimated she was in her late thirties or early forties. The muscle tone in the arms and legs told me that she spent time in the gym. She had taken care of herself over the years.\n\nI waded out of the water.\n\nShe put her hand to her mouth. \"You're naked!\"\n\nI nodded. \"I've been since you called for help.\" I held out my hand. \"Hi, neighbor. My name is Dave.\"\n\nShe gave me a firm hand shake while riveting her eyes to mine. \"I'm Loren. Were you in the shower when you heard me calling?\"\n\n\"Not exactly, but we can talk about that when we get to the house.\"\n\nI led her into the house and showed her where the bathroom was. She pretended not to peek at me, but her eyes wandered over my body when she thought I wasn't looking.\n\nWhen the bathroom door closed, I grabbed a bar of soap, a towel and headed back down the lawn to the water where I washed myself as thoroughly as I could in the near total darkness, dried myself, and finally threw Loren's clothes over a line to dry.\n\nWhen she opened the door to the bathroom looking undersized in my bathrobe, she stopped. \"You're still naked?\"\n\nI smiled up at her from the table where I was sitting. \"It's what I wear around the house.\"\n\nShe cocked her head. \"You're a nudist?\"\n\n\"I guess. I never really thought about it.\"\n\nIf she was going to bolt, it would be now. Instead, she walked over to the table and sat across from me being careful that her bathrobe did not gap out when she leaned forward to sit. Her fatigue was visible in her face.\n\nHer combed out, but still wet chestnut hair touched her shoulders. She had a pleasant face that looked radiant when she smiled. I really noticed her green eyes, her slightly turned up nose, and full lips. I had scored pretty high in the good looking neighbor category.\n\n\"Why don't you wear clothes?\"\n\nI shrugged. \"I spent years as the owner of an engineering firm that designed paint shops for car companies. The last few years have been tough. First I lost my wife of thirty years, and I just didn't want to work anymore. I had built my career for the 'us' that no longer existed. I sold the business to a competitor, and moved up here. I needed to get away from the constant reminders of what I had lost.\"\n\nI watched myself babble away, and couldn't stop it. Perhaps I'd been away from people too long. If I was serving up too much information, she didn't show it. I rattled on. \n\n\"The first morning I got up, I started to get dressed, and realized that I had no idea what I should wear.\"\n\nShe still looked interested so I plunged on.\n\n\"I had a closet full of suits and business wear. I had plenty of golfing clothes, I even had some grubbies to wear when I was doing chores. None of it reflected the person I now was. I vowed to not get dressed until I knew who I was or until it got cold. I spent last winter fully dressed, I'm not crazy. Then this spring, I lost the clothes again as the weather got nice.\"\n\n\"That's it? You don't know who you are so you can't get dressed?\" Her robe kept slipping off her perfect shoulders. The only thing keeping her modest was the hand full of robe that she clenched over her cleavage. \n\n\"That was the start, then I realized how delicious it was to go without clothing. It's so much cooler on the really hot days. I enjoy wading into the water anytime I get too hot.\" I smiled at her. \"You should try it. A cool breeze across exposed skin is exquisite.\" I changed the subject. \"What about you? Why are you here?\"\n\nShe sat back. \"I recently got divorced. My husband got the cool condo in Ann Arbor, and I got the vacation home with the busted well pump.\" I got up and pulled out the blender. \"You look like you could use a Margarita.\"\n\n\"You're not trying to seduce me, are you?\" I took her comment as an attempt to talk out her anxiety about her current situation.\n\nI held up my hand. \"Swear to God, I'm not. Although now that I think about it, you probably should spend the night. I've got a guest bedroom ready to go. You have no water, that means no toilet. If you go home tonight, bathroom calls are out in the woods.\"\n\nShe shrugged. \"I'm a big girl, I can take it.\"\n\nThe whine of the blender drowned out all conversation. When it was done, I placed a margarita in front of her.\n\nShe took a sip and nodded. \"That is amazing.\" She sat back. \"What's your secret?\"\n\n\"I make them from scratch with fresh ingredients.\"\n\nShe took another sip. \"I discovered my husband was having an affair about six months back.\"\n\nI winced. \"Ouch, that must have hurt.\"\n\nShe nodded. \"I know, right? Here's the kicker. The affair was with another man.\"\n\nShe took a rather big gulp of margarita. \"Look at me, what do you see?\"\n\n\"I see a woman who's taken care of herself. You've kept your figure, and you'd be a knockout in a little black dress. I wouldn't mind seeing you in a bikini either.\"\n\nShe leaned forward forgetting that the robe gapped when she did. \"I look pretty darn good. I held up my end of the bargain. I became the good corporate wife. I sacrificed my career as a journalist for his, and now I find after twenty years of marriage that I was a damn stage prop. He needed to show the corporation that he was a good, solid, hetero citizen.\" She drummed her nails on the table. \"I want a do over.\"\n\n\"A what?\"\n\n\"A do over. Remember when you were a kid playing baseball and you swung and whiffed. You'd call 'do over' and make them pitch the ball to you again? Well, I'm calling a do over. I'm erasing the last twenty years, and starting again.\" \n\nShe ran her fingers through her hair, and drained the margarita glass. \"Now I find myself out in the middle of no where living in a house that requires a well pump to be livable. I'm two hundred miles from friends and family sitting in a borrowed bathrobe while relying on the good will of my naked neighbor. I am living proof that God has a sense of humor.\"\n\nShe grabbed the pitcher and poured herself a second margarita. \"I spent the day fighting my way up here through road work every other mile, the first thing I discover is that the house is not livable, then I nearly drown myself in a swamp. I've had better days.\"\n\nShe drank half of the margarita in one gulp. \"The best thing that's happened to me today is this margarita.\" She held the glass up to me in toast. \"You may be naked as a jay bird, but you make one hell of a margarita.\"\n\nShe looked at me with the critical eye of a horse trader. \"How old are you?\n\n\"I'm fifty.\"\n\n\"You know, you're in good shape. You have a hairy back. I don't like hairy backs.\" She wrinkled her nose.\n\nShe drained her second margarita, and reached for the pitcher.\n\n\"You're drinking those pretty fast. Would you like me to make you a sandwich?\"\n\nShe let go of the robe to hold both hands in front of her. \"I can handle my booze. You don't have to worry about me. I could party all night before I got married.\"\n\nShe had nice, firm, tan-line free breasts that would fit perfectly in my hands. They weren't huge, but I don't like huge. I like the ones compact enough to look as good at forty as they did at twenty. The robe had slid off her back and down onto the chair without her noticing. After putting down her glass, she glanced down and frowned like she was trying to remember something important, but could not figure out what it was. She returned her attention to me.\n\n\"I can't figure out if you're a weirdo or not. You walk around naked, but other than that you seem like a nice guy.\"\n\nI had to smile considering her current state of dress. \"Relax. I'm fairly well off. If I wanted female companionship, I could find plenty of volunteers. I don't need to lure beautiful women into my den of iniquity.\"\n\nShe set down the margarita glass, and half of her third glass was gone. \"You think I'm beautiful?\"\n\n\"Of course I do.\" \n\nShe frowned. \"Where did my robe go? What did you do with it?\"\n\n\"It slid down onto your chair when you let go of it.\"\n\nShe looked down, then looked up and shrugged. \"Well, you're naked too. I guess we're a matched set.\"\n\nShe looked down at herself. \"You don't think my breasts are too small?\"\n\n\"Why would anyone think that?\"\n\nShe shrugged. \"My husband wanted me to get a boob job.\"\n\n\"Your former husband is an idiot.\"\n\nShe gave me a fifty thousand watt smile. \"You like them?\"\n\n\"They're perky and they seem to like me looking at them.\"\n\nShe examined them closely. \"My nipples are all crinkled up, aren't they?\"\n\nShe licked her lips and frowned. \"I need to go to the bathroom.\" She stood leaving my bathrobe on the chair and tottered through the kitchen to the bathroom. \n\nShe had a firm ass with nice hips. I like hips on a woman. The last thing I want is a skinny woman shaped like a boy. \n\nI put all naughty thoughts out of my mind. She was a neighbor, and a damsel in distress. I, for better or worse, was an old school gentleman. What she needed was a little sympathy and a little help.\n\nWhen she came back, she sat down and laid her head on the table. \"I was cold and scared when I was up to my neck in that swamp now I'm so tired,\" she mumbled and drifted off to sleep.\n\nI got up and turned down the bed in the guest room. Then picked her up and carried her to the bed. I did take a moment to ogle her luscious body, I am human, after all. I cleaned up and then went to the bed myself. It had been one hell of a Friday.\n\n I had completed my morning meditation when Loren stumbled out of the bedroom wrapped in a sheet. I drew her a glass of water and placed two ibuprofen on the counter beside it.\n\n\"You're dehydrated and you need a pain killer. You'll feel better in an hour or two.\"\n\nShe took the tablets and drained the glass. \"What happened?\"\n\n\"You were exhausted, then you drank too many margaritas on an empty stomach. When you fell asleep at the table, I put you to bed.\"\n\n\"Why am I naked?\"\n\n\"You abandoned my robe when you got drunk.\"\n\nShe sat down at the kitchen table and covered her face with her hands. \"What must you think of me?\"\n\n\"I think you had a brutal drive, a busted well pump, a drowning scare, then you drank on an empty stomach but you got through it with a little help from a neighbor who was looking out for your best interests.\"\n\nShe winced. \"I am so sorry.\"\n\nShe looked like a refugee with her crazy hair, hung over frown, and bed sheet.\n\n\"Think nothing of it. You would do the same for me.\" I handed her a Hawaiian shirt. \"This is the longest shirt I have. Put it on, then sit down for breakfast.\n\nThe shirt covered what it needed to, but just barely. Her butt cheeks still peeked out in a charming manner from time to time, but she seemed happy with it.\n\nI tried not to stare at her breasts, but I wanted to. They looked positively perky considering her age, and quite frankly, it had been a while since I had enjoyed female companionship.\n\nI gave her a plate of dry whole wheat toast along with a jar of strawberry jelly, and a cup of coffee. She ate while I sipped my coffee.\n\n\"I figure after breakfast, I'll take you back to your house by canoe. While you gather a few things, I'll take a look at your well pump. If I can't fix it, come back to the house. You can call the well guy on Monday.\"\n\n\"I feel like I'm imposing. I can stay at my house. I'll drive into town and purchase water.\"\n\n\"Actually, I enjoy having you around. It does get quiet around here. I've lived alone since my wife died, and I think it's time I got back to living my life.\"\n\nThat elicited a smile. \"I still think you're crazy wandering around here naked, but I also think you're a nice guy.\" She looked around at my furniture. \"Besides, it's a well known fact that ax murderers never employ interior decorators. You didn't do this by yourself.\"\n\n\"You like it?\"\n\nShe nodded. \"I do, but it needs a woman's touch.\"\n\n\"What would that include?\"\n\nShe wrinkled her nose. \"A few throw pillows wouldn't hurt, and you could use drapes on your windows.\"\n\nI nodded. \"I can see that.\"\n\nThe trip by canoe across the bay was short. When she got out of the canoe, she caught me admiring the view. \"Are you looking at my ass?\" She didn't seem upset about it.\n\nI grinned as she pulled the shirt down over her hips.",
        "While she gathered clothing, I checked out the well. The circuit breaker was tripped, and when I threw the switch, the pump whirred for a second, and died with a clunk. When I threw the circuit breaker again, it tripped off immediately. I returned to the living room. \n\n\"Your pump has shorted out. It's dead.\"\n\nShe stood with a tote of clothing, and a frown on her face. \"Is that expensive?\"\n\n\"It's a couple hundred dollars. I'll loan you the money if you need help.\"\n\nI looked at the tote she was bringing to my house. \"There's not much stuff there.\"\n\nShe wiggled her shoulders. \"Travel light, but travel right. You don't seem to have much need for clothing, why should I?\"\n\nWe bundled the tote into a garbage bag and stashed it in the center of the canoe. She was wearing shorts and a top now so the view was not nearly as compelling on the way back. At my house, she disappeared into her room carrying the tote, then a few minutes later she came out wearing a form fitting tank suit.\n\n\"I'm going for a swim.\"\n\nShe sashayed down to the water very much aware that I was watching, threw her towel over the end of the beached canoe, and waded into the water. A few strokes later, Loren disappeared down the inlet and into the lake. A half hour later, she returned to the house wrapped in a towel. \n\n\"I left my suit on the line to dry,\" she answered the question I was about to ask. \n\nShe disappeared into her room and a few minutes later she came out in an over-size Red Wings jersey. When she twirled to show me her outfit, I saw a bit of naked hip.\n\n\"Experimenting with nudity, I see.\"\n\nShe looked down at the shirt. \"Can you see through this? Should I change?\"\n\nI shook my head. \"Your ensemble looks perfect. I can't see through it.\" \n\nShe gave me a sly look. \"What? This old thing?\"\n\n\"Want lunch?\"\n\nShe nodded. \"I'm famished.\"\n\nI made grilled cheese. We lunched in the gazebo. \n\n\"It gets a little warm out here in the sun.\" She fanned herself with her hand. \"Maybe we should eat inside.\"\n\n\"Why don't you take off that jersey. It feels pretty good out here to me.\"\n\nShe frowned for a moment deep in thought, \"You'd like that wouldn't you?\"\n\n\"I'm pretty sure you would like it, too.\"\n\nShe stood and pulled the jersey off before settling in her chair again. After a brief silence, she nodded. \"It is much nicer when the breeze can get to your skin. Look at my goose flesh.\"\n\nShe never stopped exploring her nudity. Her hands would brush her midriff just below her breasts before dropping to her lap where they would explore her naked hips. \n\n\"I can't believe that I'm eating a naked lunch with a guy I've known less than twenty-four hours,\" she looked down at her lap once again.\n\n\"I, on the other hand, feel only happiness that a beautiful woman is sharing a naked lunch with me.\" \n\n\"I feel so exposed.\" She said after putting down her glass of iced tea. \"I want to cover up, but then I realize that there's no sense in doing it. This isn't about sex, it's about comfort. Then again, I feel so...\"\n\n\"Aroused?\"\n\nShe shook her shoulders. \"No, I think the word is aware. I'm aware of my body, and quite frankly I find it pleasant that you're ogling me.\"\n\n\"It's all true, but I want to remind you that I am neighbor, and will continue to treat you as one until you decide that our relationship should change.\" I took her plate and stacked it on mine.\n\n\"Why?\"\n\nI shrugged. \"It's pretty simple. I don't want to be a rebound lover. I'm not your husband and I don't want to pay for his sins against you.\"\n\n\"You don't want to have sex with me?\"\n\nI smiled. \"Of course I do; you're beautiful. I meditated this morning on my wants and what you need. Your divorce has messed with your head. From what you told me last night, you harbor a lot of anger and resentment. You're suspicious of men in general and of me in particular. I think it's going to be a while before you figure out that there are men who you can trust.\"\n\nI tried to read her face. Certainly there was relief that I had no plans to seduce her. I caught a flash of anger too, but I couldn't figure out why. It sure killed the conversation for the rest of the lunch.\n\nWhen lunch was done, I stood. \"I'm going to spend the afternoon cutting the lawn. If you want to lay out in the sun, use my patio.\"\n\nShe smiled. \"I would like that very much.\"\n\nIt took her a few minutes to gather up her towel, sunglasses, sun screen, and Kindle.\n\nAs I was leaving to get the lawnmower, she stopped me. \"What SPF sunblock are you wearing?\"\n\n\"SPF none.\"\n\nShe shook her head. \"You need sunblock.\" A slightly evil smile crossed her face. She squeezed the sunblock into her hand. \"Turn around.\"\n\nShe started at my neck, and worked her way down to my shoulders and my back stopping at my waist. Then she walked around front and did my chest and stomach. She did my ass next followed by the back of my legs before coming around to the front. She devoted careful attention to my dick and ball sack. I rose to the occasion becoming hard in her hand. She made no comment as she moved on to coat my ass and legs. When my feet had been adequately covered, she stood and playfully knocked my hard on with her finger. \"It's good to see that. I was beginning to think you were gay.\"\n\n\"You're teasing me because I told you that I may not want a relationship with you.\"\n\n\"Me?\" She put her hands over her chest feigning innocence. \"You bet I am, buster. I'm standing here with all my naughty bits hanging out, and you have nerve to tell me that you may not be sexually interested in me? I had twenty years of that. You bet I'm teasing you, and now I have evidence that at least one part of you finds me sexy.\" \n\nAs I turned to leave, she pouted. \"You're not going to do me?\"\n\nI loaded my hands with lotion and stood behind her coating her neck, shoulders and arms before moving on to her breasts. Her nipples became hard as I massaged them. They were already dark against her skin, and got even darker as they crinkled. Two can play the stimulation game. From there I moved on to her back and her ass before coating to her hips then her stomach and finally her vagina. She let out a little gasp as my hand brushed her labia as I rubbed the top of her silky thighs. I spent a great deal of time and did a very thorough job. It must have been very good work judging by the slightly glazed look in her eyes.\n\nWhen I was done, she lay back on the lounger. \"I don't think I've ever been so thoroughly covered with sun block. Thank you. Your attention to detail was admirable.\"\n\n\"I'm an engineer.\" I winked at her. \"I was trained to be thorough.\"\n\nShe settled into a chaise and I walked to the shed.\n\n\"I'll probably need another application in two hours or so,\" she shouted as I opened the shed door.\n\nI spent the three hours on my riding lawnmower thinking about the seductress laying naked on my chaise as I passed her on every lap. I knew two things for sure. First, I was attracted to her. Yes, she was sexy as hell, but there was a certain vulnerability to her that brought out my protective instincts. Not only that, she was also smart and cheeky. Secondly, I knew that I had to let her come to me. Any attempt on my part to initiate a relationship would cause her to bolt instantly.\n\nAfter I put the lawnmower away, I grabbed two glasses of ice tea, walked to the patio,and sat facing the cutest upturned bare ass I had seen in a while. I wanted to cover it in little bites that made her ass jump as she giggled. \n\n\"Let's go swimming.\"\n\nShe sat up and stretched. \"That was nice, I may have fallen asleep.\" She took a sip of the ice tea I had brought out for her. \"I'd love to go swimming.\"\n\nThe day was hot and the water cooled us. I swam to a platform I had anchored in the middle of the inlet. It consisted of two metal drums I had boxed in with marine plywood. A pool ladder I had attached to the side allowed a swimmer to climb on top. I hung from the side and faced outward waiting for her to swim up.\n\nShe playfully slid her legs around my waist and slid her arms around my neck. \n\n\"Ha, you can't touch me. Your hands are holding us up.\" She kissed me slipping me her tongue.\n\nShe swam away. I followed, and grabbed her ass as she tried to climb up the ladder.\n\n\"Didst thou coppeth a feel upon my royal body?\" She quoted a line from an old Woody Allen movie.\n\n\"I am so sorry, milady. Should I stop touching your royal ass?\"\n\n\"No, I quite like it, and so do you.\"\n\n\"When a beautiful woman presses her luscious body against mine, that sort of thing is bound to happen.\"\n\nShe smiled, then turned and kissed me.\n\nI kissed back allowing her to control the length and the intensity.\n\n\"I've been wondering what that would feel like.\"\n\n\"And?\"\n\n\"You pass, you're definitely a good kisser.\"\n\nShe patted my cheek, pushed away from me and swam a few strokes around me. The play continued, but those were the only kisses. She did cop a feel on me a time or two. Once she did swim up behind me and give me a hug.\n\n\"I love the feel of your wet skin against me,\" she rubbed her breasts against my back. \n\nWhen I spun around to grab her and pull her in, she swam away. I enjoyed her teasing at least as much as she enjoyed teasing me. \n\nThat evening, when the heat of the day had passed and a breeze redolent of pine and marsh blew through the windows pushing the sheers away from the walls, I made fish tacos. We ate at the kitchen table. She sat across from me and stared at me with her head slightly tilted.\n\n\"Penny for your thoughts.\"\n\nShe smiled. \"I was trying to decide if we should go to bed together. Everything we've done today has sort of led up to it.\"\n\n\"Do I get a vote?\"\n\nShe shook her head. \"You really don't. You've been out of the dating pool so long you've forgotten the rules.\"\n\nI smiled. \"Enlighten me.\" \"The first rule is that I make all the rules, the second rule is when I give you the 'come hither' look, you come running.\"\n\n\"I like your approach. As a boss, I always liked those people who brought an assertive, can-do attitude with them. I really got tired of ordering people around.\"\n\n\"We're almost exact opposites. I placed myself in my husband's hands and let him control my world for a very long time. I like the fact that you've laid back, and are letting me decide how this relationship proceeds. You, on the other hand, are tired of ordering people around all day. We were made for each other.\" \n\n\"You said you're trying to decide if you want to take me to your bed, what are my positives and negatives? I make a list when faced with a difficult decision.\"\n\n\"Well, on the basis of the last twenty-four hours, I can say you seem like a very nice person. Of course, you could be a monster masquerading as a nice person.\"\n\nI nodded. \"Valid point.\"\n\n\"Then you do stuff like that, and that makes me think that you are either brutally honest with yourself or you're trying to seduce me.\"\n\n\"Stuff like what?\"\n\n\"Like agreeing with me when I say you may be a potential monster.\"\n\nI poured myself a little more wine. Potential monsters should always have a glass of wine on hand. \n\n\"I was putting myself in your place. You have a valid point. About the only thing I can do to convince you is show you my merit badges from Scouting. You're a smart woman, you looked me up on the internet the second I gave you my wi-fi password.\" I squinted at her. \"You also called a friend, and told her what was going on. I would have to be depraved and an idiot to harm you. I am neither.\"\n\nShe nodded. \"You're not bad looking for a guy, but you are older than me.\"\n\n\"Too old?\" I poured a little more wine for her. \"Not much I can do about that.\"\n\n\"I didn't say you're too old. You've got a nice body, but a little too much back hair for my taste.\"\n\nI may have leered at her. I'd been waiting for her to fall into my trap. \"I'd be willing to let you shave it off.\"\n\nShe brightened. \"You would?\"\n\nI nodded. \"I have no deep emotional attachment to it. Besides, hair removal can be fun.\"\n\nThe elicited a belly laugh from her. \"I suppose that would mean that I would have to join you in the shower.\"\n\n\"Well, of course. How am I going to shave my own back? We could do it right after I clean up in the kitchen unless you have other plans.\"\n\n\"Due to mechanical problems beyond my control, I happen to have a clear schedule.\"\n\nShe stood and gathered up the dishes while I put on an apron and carried dirty pots and pans to the sink. After we had cleaned up, we met in the bathroom where I handed her my hair clippers.\n\n\"Shear off what you want.\"\n\nShe give me her slightly evil smile, turned on the clippers and began raking them across my back. Small clumps of hair began falling onto my butt and calves. \n\nWhen she was done, she walked around to the front of me. \"How do you feel about your chest hair?\"\n\nI shrugged. I had lived with that curly mat on my chest for my whole adult life, but really had no preference between furry and baby smooth. \"Shave it if you want.\"\n\nShe started at my waist and removed the mat from my chest and stomach. She stood back and admired her work.\n\n\"You're still pretty wild below the belt. Mind if I clean that up a little?\"\n\n\"You're not going to shave me bald?\"\n\nShe shook her head. \"I don't like that look on a man. I'm going to clean you up a bit.\"\n\nWhen I winced when the electric clipper head came too close to my erection, she grinned up at me. \n\n \"Relax, I used to do this for my husband all the time. I hardly ever drew blood.\"\n\nShe grabbed her hand mirror and showed me her work when she was done. I had a neat triangle of pubes around my groin, and peach fuzz across my chest, stomach and back.\n\n\"What?\" Her voice was suspicious.\n\n\"I've never looked at my dick in a mirror being held by a naked woman. It's a mental snapshot I want to remember.\" I rubbed my chin. \"It's a definite improvement. I don't look like a Yeti.\" \n\nShe set down the clippers. \"Okay. I need your razor now.\"\n\nWe stepped in the shower, but she was all business when I tried to play. She lathered up my back, and shaved me smooth. Then she turned me around and shaved my chest and stomach.\n\n\"Alright, you're done, now get out. I've got to work on myself.\"\n\nI stepped out and toweled off in the bedroom to give her some privacy. A few minutes later, she stepped into the bedroom as hairless as a newborn baby.\n\n\"You like?\" She did a pirouette. \n\nI ran my hand across her now hairless groin. \"I like it very much. The skin is so soft.\"\n\n\"Consider yourself special. I've never done that for anybody else. I read in one of my magazines that it makes oral sex really intense. Hint, hint.\"\n\nI pulled her to me, tipped her chin up, and kissed her. She melted into my arms as eager to kiss me as I was to kiss her. I scooped her up and laid her on the bed. \n\n\"I want you,\" I whispered. \"I want you because you're smart and beautiful and managed to shave my chest without nicking my nipple.\"\n\nShe chuckled. \"Not only are you a weird but nice guy, you're also a goof ball. Now are you going to screw me, or are you going to talk me to death?\"\n\nI pushed her legs apart and kissed my way up her inner thigh raising goosebumps along the way. Tonguing a hairless vagina was a new sensation for me, but I learned to appreciate it quickly. I took my time kissing the outer lips and then tongued my way around the inner lips. A low moan escaped her lips. I spent a few more minutes tonguing her inner lips.\n\n\"I really like that.\" She rocked her hips up to give be better access. \n\nI plunged my tongue as deep as I could then made it as wide as I could as I lapped her sex from bottom to top. I knew I was doing good when she thrust her hips up into my face. She gasped and then moaned as I laved attention on her clit stroking it again and again varying the speed and the rhythm forcing her to anticipate what I would do next. \n\n\"Oh my God.\" She shouted and then clamped my head between her thighs as orgasm after orgasm shuddered through her body. When she was done, I came up for air and lay down next to her. I draped my hand across her breasts because I really like boobs. She responded my turning on her side to make them available to me.\n\nWhen she had caught her breath, she rolled onto her back. \"You should screw me now.\"\n\nI settled in between her legs. She guided me in, and I made tiny thrusts until my moistened dick could move freely in and out of her.\n\n\"Wow, you're bigger than my husband. \n\n\"Too big?\"\n\n\"No, just right. You're stretching me a little and I need to get used to it.\"\n\nI waited as she wiggled her hips beneath me.\n\n\"Thank you. I'm okay now.\"\n\nI smiled down at her. Her flush face and luscious lips looked inviting. I wanted to make this special for her. \n\n\"Hold on tight around my neck and wrap your legs around my waist.\" I instructed.\n\nWhen she complied, I lifted her up and then sat down on the edge of the bed. She was now sitting on my lap facing me. Her eyes grew wide as the weight of her body forced my erection deeper into her.\n\nShe gave me a slow wet kiss ending it by gently biting my lower lip. \"You feel pretty good inside me.\" She wiggled her hips sending a tingle up my spine.\n\nShe began rocking back and forth on me increasing the tempo. She stopped, dug her nails into my back, and an orgasm rippled through her.\n\nI held her close and kissed her neck. She sat back with a smile on her lovely face and began grinding her hips into my groin again. The orgasm came quicker this time. She hung on around my neck as she clamped down on my erection with her vagina and shivered with the strength of the orgasm.\n\nThis time when she started rocking on me, I helped her by holding her hips and moving her back and forth. I tried to time our orgasm together, but she began doing a little flick with her hips that added more stimulation to my already tingling balls. Then every muscle in my body locked up with the impending pleasure.\n\n\"I'm going to cum,\" I moaned seconds before I pulled her hard against me and pumped and pumped. She slid her arms around me and dug her nails into my back as an orgasm overtook her. When we were both done, I collapsed to the bed taking her with me.\n\nShe lay across me gasping for air. \"Where did you learn how to do that?\"\n\n\"What?\" I asked between gulps of air.\n\n\"Drive a woman into a frenzy of desire, and then send an orgasm crashing down on her.\"\n\n\"I'd guess I'm pretty average as a lover.\"\n\nShe shook her head. \"No way is that average.\" She thought a minute. \"Then again, how would I know? I consider myself basically a virgin. The only sex I've had is with a gay guy who clearly would have preferred a guy in bed with him. Our sexual encounters were rare, brief and humdrum. You are far more enthusiastic than he ever was. My husband did enjoy oral sex though.\" She thought for a moment. \"You know, I need a sampler of men so I can figure out what good sex is.\"\n\n\"Now is the time to do it.\" I refused to take the bait. \"There's an upscale golf course and lounge on the other side of town. I imagine you could assemble a collection there in no time.\"\n\n\"You're no fun,\" she rolled over and kissed me. \"I wanted you to go all caveman on me.\"\n\n\"I'm fifty. The best I can do is hire a cave man, if you need it.\" I kissed her on the cheek. \"You poor thing. Sex can be so many things. It can be mind blowing, but it can also be comforting, it can be reassuring, it can be fun, and it can be a haven in a cold cruel world. The one thing it shouldn't be is dull. I need to put together a sex sampler for you.\"\n\nShe turned to me suppressing a grin. \"I see, you're volunteering to have sex with me over and over again until I've experienced all that sex has to offer? How very kind of you.\"\n\nI smiled back. \"I'm a very giving person.\"\n\nShe cuddled in next to me. \"I would like to spend the night here if you don't mind.\"\n\nI wrapped my arm around her. \"I think you should. I've saved a spot for you right here.\" I pulled her in until she was spooning with me.",
        "In the morning, Loren went for her swim with only a towel draped around her shoulders. She left her swim suit laying on the bed.\n\nWhen she joined me for breakfast a half hour later, her nipples were still hard from the coldness of the water. \n\n\"How was your swim?\" I asked as I buttered my toast.\n\n\"The water feels so sensuous flowing across my naked body. I never want to wear a suit again.\"\n\nShe poured herself a cup of coffee. \"There was a fisherman on the other side of the lake, but he never got close enough to see that I was swimming in the buff. So I waited for him to pass closer when I was on the shore and waved to him. I don't think he knew I was naked. All he did was wave back.\"\n\n\"Aren't you getting bold.\"\n\n\"I was kind of disappointed that he didn't see that I was nude. I guess that makes me a little pervy.\"\n\n\"It makes you human.\"\n\n\"I honestly never knew how nice it was to wander around this world naked. I feel so free.\" She took a fork full of scrambled eggs. \"M-m-m-m. These are good. What are we going to do today?\"\n\n\"I thought we might go on a hike.\"\n\n\"Naked?\"\n\nI nodded. \"There are all sorts of seldom traveled trails through the national forest. I thought we might take one of my favorite hikes.\"\n\n\"What if we meet people?\"\n\n\"I usually nod 'hello'. Sometimes they want to stop and talk. I convince a few of them to try hiking naked, others I don't. Then I say goodbye and continue on my way.\" I grinned at her. \"With you along, it's going to be different. Any men we meet will definitely want to talk to you. You may even be invited to a party.\" I studied her. \"How do you feel about a stranger or two ogling your body?\"\n\n\"Torn between embarrassment and excitement.\"\n\n\"We don't have to do it.\"\n\n\"I want to do it, but I'm afraid it makes me a slut.\"\n\n\"How about we give it a try, but if you get too uncomfortable, tell me, and we will immediately turn around.\"\n\n\"Can we take clothes along in case we have to get into them?\"\n\n\"I usually do. I'll tell you what. I'll put you in charge of packing the clothes if it will make you feel better.\"\n\n\"What do I need to bring?\"\n\n\"Bring the clothes you want to wear in case we meet people, bring a hat, sunglasses, and sunscreen. I've got everything else.\"\n\nWe left after lunch. She looked cute as hell in her broad brimmed beach hat, sun glasses, white socks, hiking boots and nothing else. The dimples on her hips above her ass swayed hypnotically when she walked in front of me. I enjoyed rubbing her down with sunscreen, and enjoyed it more when she did me.\n\n\"I can't believe I'm doing this.\" She muttered as we passed the sign saying that we were entering the Huron National Forest.\n\nWe crossed a boggy area on an old beaver dam, scared up a doe and her fawn, and climbed to the crest of a hill. Below, a forest interspersed with patches of grassland stretched in all directions baking under an afternoon sun. It was miles and miles without a soul in sight.\n\nI climbed atop a small hill and began walking down the length of it.\n\n\"What is this? It looks like an old trail.\"\n\n\"It's what's left of a logging railroad.\" I walked over and kicked at the edge of the mound. Then I reached down and pulled up a rusty railroad spike and handed it to her.\n\nWe walked for a while and I pointed out sights along the way until we crossed a fire trail.\n\n\"If we're going to run into people, it'll be along here. There's a small stream up ahead where you can catch brook trout. I'm not the only one who knows about it.\n\nLoren scanned ahead. \"I'm used to being naked. I'm hoping we don't run into anyone because I don't want to wear clothes.\"\n\nA few minutes later I smelled a campfire. Loren smelled it too.\n\n\"What are we going to do?\" she whispered.\n\n\"We're going to walk into camp and talk with them.\" I marched ahead leaving Loren behind. I wanted to march into camp naked before she decided to chicken out.\n\n\"Hello, the camp.\" I shouted as Loren joined me. She had decided to face the campers naked along with me.\n\n\"Come on in.\" A male voice shouted back.\n\nThe guy by the fire stood speechless as we walked in naked. A young woman with flaming red hair crawled out of the tent, took one look at us, and walked over to the man.\n\n\"I told you it was okay if we camped naked.\" She gave him a little punch in the shoulder, then proceeded to strip in front of us throwing her t-shirt, bra, shorts and panties across a line stretched between two trees.\n\nShe had a lovely body covered in freckles, and my first thought was to slap the guy for trapping that sweet young thing in clothes when she wanted to run free. She was a natural redhead, and she possessed those full, young breasts that never survive long into adulthood. They needed to be appreciated now. I could have spent a contented afternoon counting the freckles on them.\n\nThe twenty something guy blushed as he looked at us, then at his friend/wife. \"What happens if the DNR or park rangers see us?\"\n\n\"The ones I've met really don't care as long as you're not chopping down trees or poaching. Now if you choose to wander naked through a church picnic, you might get in trouble, but for the most part it's live and let live.\"\n\nWhile we were talking, the women moved away and began a conversation of their own.\n\n\"We're heading up to Mio Pond. Is that the way you hiked in?\" \n\n He shook his head. \"We hiked in from the trail head on 609. We saw one group of about a dozen men and women camping beside a lake along the way. Everybody was drunk and about half of them were naked.\" \n\nI wasn't sure which he considered the greater moral lapse, their nakedness or their drinking. He was not a party animal. I wasn't even sure what he was doing out here. He was a short butter ball of a guy. I pictured him as the kind who spends his days playing video games on a couch in his mom's basement.\n\nI looked at my watch. \"We have to get going.\"\n\nWe shook hands, and I called to Loren.\n\nThe women hugged. That was another snap shot I wanted to keep in my mind.\n\nAt the edge of the camp, we waved and followed the trail north.\n\nWhen we were well out of earshot, Loren leaned in. \"The first thing Sandy asked me, that was her name, was how many years have I and my husband been hiking naked. Can you believe it? I told her I was new at it too, and she said she wanted to get naked but Tom wouldn't let her, and he wouldn't tell her why.\"\n\n\"Is he shy?\"\n\n\"I asked her if he was unusually small in the man root department. She said no, but he wasn't big like your husband is.\"\n\nShe let out a cackle.\n\n\"What did you say to that?\"\n\n\"I told her that we were compatible and that I thoroughly enjoyed what you brought to the bedroom.\" She chuckled again. \"I was pretty sure she was going to ask what it felt like, but you called right then.\"\n\n\"We could go back if you want to.\" I was working hard to keep a straight face.\n\nShe shook her head. \"No, we better not. She's probably talked him out of his blue jeans by now, and if he's sporting a tiny little thing, I know I won't be able to keep from laughing.\"\n\nI grabbed her hand and we walked along side by side. \"Enjoying yourself?\"\n\nShe gleamed back. \"I really am. I swear my breasts swelled an entire cup size when he ogled me. What a turn on. It never occurred to me that people like to get naked when they're out in the woods. I am getting tired however. How much longer do we have to go?\"\n\n\"We're not far from one of my favorite places.\"\n\nI took her to a wooded grove at the crest of a ridge overlooking the Ausable River. To the east we could see Mio Pond glittering in the afternoon sunlight. To the west, the dark green of pine forest rolled to the horizon interspersed by lakes.\n\nI put out a blanket and we ate an energy bar and drank water while Loren used my binoculars to scan the river below us.\n\n\"There's not a lot of clothing on those rafters down there.\" She put down the binoculars and sat beside me.\n\n\"Have you ever made love out under the sky?\" She laid back on the blanket with arms and legs spread wide as if she were embracing the sky.\n\n\"I have, but I was a whole lot younger than I am now.\"\n\n\"I never have,\" she pouted. \"I have been continuously aware of my body since the moment we stepped out of the house. There's something arousing about not knowing if a stranger is around the next bend who will see me naked. I can't imagine what it would feel like if a stranger caught us making love.\" \n\nShe rolled onto her side and propped her head on her hand. \"If only there was someone to help me cross making love under the blue sky off my bucket list.\"\n\nI saluted. \"I hereby volunteer for duty.\"\n\n\"Okay, good. Now first things first. Please remove your boots and socks.\" She took on the haughty tone of a dowager. \"We are not savages, we crawl into bed naked, no matter where or what the bed may be.\"\n\n\"You're funny.\" I said as I removed my shoes and socks as ordered.\n\nWhen she had removed hers, we sat across from each other cross legged.\n\n\"I owe you a blow job, so let's do that first.\" She reached out and plunked my magic twanger.\n\n\"Why do you owe me a blow job?\"\n\nLast night, you did a marvelous job of bringing me to orgasm during oral sex, but I never got a chance to return the favor. You side-tracked me with mind blowing sex.\"\n\n\"I don't feel cheated.\" She continued to stare at my erection.\n\n\"Well, you should.\" She got on all fours and crawled over to me. \"Blow jobs are my specialty. It was the one thing that my husband truly enjoyed. I'm really good at it, and I want to show you what I can do.\"\n\nShe pushed me back until I was laying down. \"Now, I don't want you to do anything but enjoy it. You don't have to stroke my hair or squeeze my breasts or anything.\"\n\nWith that she leaned over and kissed me. When I reached up to hold her head in my hands, she gently pushed my hands away. \"Don't touch me, let me work.\"\n\nFrom there she dropped to my nipples. She kissed and teased them until they were hard then kissed down my chest and belly until she encountered my very erect penis laying atop my navel.\n\nShe frowned at my penis. \"You're not circumcised.\" She ran her hand up and down the shaft a few times watching the foreskin advance and retract. \"That is amazing. I want one of these to play with.\"\n\n\"We can schedule a few play dates.\"\n\nHer hand gently cupped my balls. \"I love the way they move when I touch them.\" She gave them a gentle kiss. The tip of her tongue touched the base of my shaft. She slowly licked upward until her tongue was on the head. Her lips surrounded it and she slowly took it into her mouth. She began slowly bobbing on me taking it deeper and deeper.\n\nShe drove me into a frenzy. I wanted to hold her, to stroke her, but I forced myself to lay there as every muscle in my body tensed for the coming orgasm. I swear just before I shot my wad, the only parts of my body touching the blanket were my shoulders and my heels. When I could stand it no more, I moaned, \"I going to cum.\" \n\nShe merely looked up at me with those big green eyes and waited with her lips around my throbbing cock. I will remember that look until the day I die.\n\nHer eyes got big for a moment as I pumped my load into her mouth, then she lay down with her head on my stomach still sucking me as my penis slowly shrank.\n\nWhen I caught my breath, she looked up at me. \"How was that?\"\n\n\"Without a doubt, the best I've ever had.\"\n\nShe beamed at me. \"I'm really good, aren't I? I especially like the feel of it shrinking in my mouth after you cum.\"\n\nShe laid her head on my shoulder and threw her leg over mine. \"God, this feels good. Let's spend the night here.\"\n\n\"You know there are bears in these woods.\"\n\nShe thought about that for a moment. \"On second thought, let's go home and screw each other's brains out.\"\n\nI kissed her. It was a deep, passionate kiss, the kind that makes your toes curl.\n\nI sat up, \"Let's make love in the missionary position, but when I get close to orgasm. I'm going to basically do a push up above you. The only place that we will be touching each other is my shaft in your vagina.\"\n\n\"It sounds complicated.\"\n\n\"It really isn't. \n\nI wetted my finger in her vagina, found her clit and stroked it barely touching it until she cocked her hips up begging for more direct stimulation. She moved closer and closer to orgasm. Occasionally I would stop so that I could kiss her. She gave memorable full lipped, deep kisses when perched on the edge of orgasm. Finally she grabbed my hand as an orgasm wracked her body. When she was done, I spread her legs and slid easily into her very moist vagina.\n\nI slowly began rocking my hips in and out. I increased the tempo at her urging matching the speed at which she thrust into me. She reached orgasm first digging her nails into my back as her muscles in her pussy clamped on me. When she was done, I resumed thrusting going slow at first until she began building to a second orgasm. As I approached my orgasm, I basically did a push up over her making sure that only my penis touched her vagina. I held it as long as I could, then released into her. My penis throbbed and danced inside of her.\n\n\"Oh my god!\" she shouted as the sensation threw her into an orgasm. \n\nWhen it was over, I lay down beside her.\n\n\"That was amazing. I've never experienced anything like that. It's like your penis was a wild thing inside me.\" She kissed me. \"Thank you for a lovely day. Now let's call a Lyft and go home. I'm tired.\"\n\n\"Good luck with that. While we're waiting, let's start walking in the direction of the house.\"\n\nWe settled into a comfortable silence as we retraced our steps. When we passed the camp of the young couple, we waved from a distance, but continued walking.\"Did you see that?\" Loren asked when we were safely out of ear shot. \"They were both naked.\" She thought for a moment. \"I guess I've made my first converts to this hedonist life style.\"\n\nShe gave me a hip check that nearly pushed me off the trail into a bramble of blackberry vines.\n\n\"Hey! Be careful. There are things that I do not want scratched up.\"\n\nShe grinned at me. \"Come to think of it, I don't want those things all scratched up either.\n\nShe grew silent after that.\n\n\"Something wrong,\" I asked.\n\nShe shook her head. \"I was just thinking that our fun is nearly over. Tomorrow morning, I call the well driller guy, and in the next day or two, I'll be living in my own house separated from you by a lake.\" \n\n\"You know, you'll be welcome to come over any time you want.\"\n\nShe nodded. \"I guess I really enjoy living with you. You've opened up my mind and my eyes. Three days ago, I was looking upon this move as a banishment. I figured that I would spend my time up here alone hoping that one of my friends would come up occasionally. I was going to sell the place as quickly as I could and move back to the Detroit area.\"\n\nShe threw out her arms and did a slow twirl. \"Now, I'm beginning to think that this will be one of my best moves. Except now, I have to live alone.\"\n\n\"So you're going to retreat across the lake and never come out of your house?\"\n\n\"Of course I will, but it won't be the same. When I start my writing again, I'll spend hours hunched over my laptop.\"\n\n\"I could build a bridge over the swamp.\"\n\nShe put the tops of both hands under her chin as she fluttered her eyelashes. \"Would you do that for me? I like it, but it's still not living with you.\"\n\n\"You and I will never frolic around outside anymore? No moonlight swims? No dancing in the warm summer rain? No more spending the night together? No trips to nude beaches?\"\n\n\"You know where there's a nude beach?\" She stopped. \"I've never been to a nude beach. What's it like?\"\n\n\"It's actually clothing optional, but it's attached to a nudist resort over on Lake Huron. You'll find that most of the women will go topless, only a few strip down to their birthday suit. There's usually more men than women. It's the perfect place to go if letting other people ogle your naked body turns you on.\"\n\nShe thought about it for a moment. \"I do get a thrill from it. I don't think I'll ever flash people at the grocery store, but men and women admiring my boobs and ass kind of gets me going.\"\n\n \"I'll be happy to show you how to indulge your inner exhibitionist.\"\n\nShe smiled. \"I would like that very much, in the meantime, how long until we get home?\"\n\n\"Not long,\" I pointed up ahead on the trail. \"See that copse of trees up there?\" They sit on the shore of our lake. We'll be home in half an hour.\"\n\nLoren dragged herself the last mile, when we reached my house, she dropped her backpack and trudged down to the beach were she waded into the water and dog paddled out to the raft and hauled herself up on top allowing her naked body full access to the sun. I followed and crawled out beside her.\n\n\"That was unbelievably fun, but I'm so tired.\" She seemed well on her way to taking a nap.\n\nI took a nipple in my mouth, and sucked it a few times before playing with it using my tongue. When it stood at attention, I concentrated on the other one.\n\n\"Mmmm, that feels good. My husband was never one for foreplay.\"\n\n\"Do you even know what turns you on?\"\n\nShe thought about it for a while. \"I really don't. When I masturbate, I pull at my nipples, and I do like my vibrator, but beyond that, I have no idea.\" She rolled over to look at me. \"What turns you on?\"\n\n\"Pleasuring a naked woman turns me on. I do like your blow jobs. My wife never liked to do them, so she put very little enthusiasm into them.\n\nShe sat up, \"We need to do a little research. Let's watch porn tonight.\"\n\n\"Have you ever heard of Literotica?\"\n\nShe shook her head, \"Sounds like a high school class that I would not have minded taking.\"\n\n\"You and I are going to read erotica to each other until we find out what each of us likes.\"\n\n\"Do we get to, you know, act out the scenes we like?\" She gave her shoulders a wiggle.\n\nI leaned over and kissed her. \"I hope the reading leads to other stuff.\"\n\nThat evening after the dinner dishes were done, we sat cross legged against the headboard of my bed looking at my laptop. I pulled up the Literotica website.\n\n\"Let's go to top stories. We might as well start with the best of the best.\"\n\n\"You don't want to go to videos? I thought men liked watching people do it.\" She rested her hand in my lap.\n\n\"The stories get me going better than the videos. Everything looks better in my imagination, I guess.\"\n\nI scrolled down the screen. \"Let's see... How about exhibitionism?\"\n\nShe sat up and squinted at the screen. \"We've done a bit of that today. What else you got?\"\n\n\"How about Wild Consensual Sex. There's a story about a repressed woman being introduced to Exhibitionism and new sex techniques by a man who wanders around nude most of the time. We may have done a little of that.\"\n\nShe unconsciously stroked her breast until she saw me watching. \"Look at me. Just talking about this stuff gets me going.\"\n\nShe forced her hands down into her lap. \"I think we're doing pretty well in the new positions and locations department. What else you got?\"\n\n\"Girl on girl?\"\n\nShe shook her head. \"Tried that in college and it did nothing for me.\" She grinned at me. \"I need a man.\"\n\nShe looked down and discovered her hands stroking her clit. \"Dammit, I am shameless around you. I used to be a good girl.\" She batted her eyelashes.\n\nI scanned down the list. \"How about May-December relationships.\n\n\"You're not that old and I'm not that young. Next.\"\n\n\"Anal?\"\n\nShe thought a moment. \"I'm not saying no, but let's let our relationship mature a bit. It's not the kind of thing a girl does on the first date.\"\n\nI scrolled further down the page. \"What about domination?\"\n\nShe frowned. \"Is that like you tying me up?\"\n\n\"It could be, but it can also be you tying me up. It can also be a couple agreeing that for one night, one partner will only do what the other orders them to do. Let's try a dominatrix story. Here's one about a wife who decides her man needs a little discipline along with her love.\"",
        "She sat up. \"I could get into that. My husband never let me take charge.\" She looked at me. \"Are you okay with me taking charge?\"\n\n\"I don't want to be whipped or forced to do disgusting things, but I'm okay with you tying me up if you want to.\"\n\nHer hand dropped into my lap where my erection welcomed her attention. \"What about now?\"\n\n\"I'm game. The way it works is you must tell me exactly what you want.\"\n\n\"I want you to eat out my newly shaved pussy. It was amazing the last time you did it. I especially like it when you tongue my inner lips.\"\n\nShe laid back and spread her legs. I crept between them and kissed her mons and her clit before slipping my tongue into the salty sea of her arousal.\n\n\"Oh my.\" Her words ended in a throaty moan. \"I want a long slow lick from my taint to my clit.\"\n\nI complied suddenly aware of my raging hard on.\n\n\"Okay, now flick at my clit with your tongue and insert two fingers into me.\"\n\nI did as ordered. She clamped down on my head with her thighs. I continued licking and thrusting my fingers in and out until she bridged driving my face into her crotch. Finally, she pushed me away. I kissed her inner thighs until she got her breathing under control.\n\nShe ran her fingers through my hair. \"My breasts need attention.\"\n\nI crept up kissing her tummy, navel and midriff along the way.\n\n\"Use your lips to pull at my nipple. Perfect. It's okay to use your teeth, but you have to be gentle.\n\nI played with her breasts until they were both hard and crinkled.\n\nShe moaned, \"Now, really deep kiss me. The other stuff is fun, but kissing really gets me horny.\"\n\n\"You don't mind tasting your own arousal?\"\n\nShe shook her head. \"I want hard, wet kisses that last forever and leave me gasping for more.\"\n\nI let her bring my lips to hers. She shoved her tongue into my mouth taking what pleasure she could. I stroked my hand down her side and then slid my knee up against her vagina where she wrapped her legs around it.\n\n\"That feels like the biggest dick in the world trying to fuck me.\"\n\nShe released me. \n\n\"I want you to fuck me doggie style.\" She got up on all fours.\n\nI mounted her, gave her ass a little slap, and slowly slid into her wet depths.\n\n\"God, that's good. Now pound me, you're hitting my G-spot.\"\n\nI did as ordered and was rewarded with a moan. \"Keep going, I'm cumming.\"\n\nShe tightened down on me pushing her luscious ass into my groin. I stopped pounding, and let her orgasm roll through her on wave after wave of pleasure. \n\nShe sprawled flat on the bed and I lost my position inside her. She rolled over and looked up at me. \"Why haven't you cum yet?\"\n\n\"I'm waiting for you to tell me it's okay to,\" I smiled. \"You're in control, remember?\" I lay down on the bed beside her. \"I've studied Tantra and have pretty good control over my body. A very small part of Tantra is learning through meditation how to separate my orgasms from ejaculation. We can screw all night if you choose, and I won't cum.\"\n\nShe reached down and stroked my raging hard on attempting to push me over the edge. \"You can control that until I order you to ejaculate?\"\n\n\"Absolutely,\" I nearly moaned as an orgasm seized me, but I did not ejaculate.\n\nShe pouted. \"Me controlling when you ejaculate seems hardly fair.\"\n\nRelief washed through me. \"I don't think you're cut out to be a dominatrix.\"\n\nShe shrugged. \"I'm still wild about sex with you. What position haven't we tried yet?\"\n\n\"How about reverse cowgirl?\"\n\n\"What's that?\" I relaxed as she finally stopped stroking me. I had had to devote more and more attention to not ejaculating. \n\n\"It's like cowgirl except you face my feet rather than my face.\"\n\n\"What's the advantage of that?\"\n\n\"My dick hits you in a different spot, and I get to play with your breasts while we're screwing.\"\n\n\"I order you to lay down and prepare to be mounted.\" She let out a giggle. \"It's time for me to climb back in the saddle.\"\n\nShe positioned her pussy over my shaft, and slowly sat down upon me. \"Ooh, this is different.\" She wiggled her hips sending a tingle through me. \"Okay, you promised your hands on my boobs. Let's get to work.\"\n\nI did a sit up and wrapped my arms around her cupping her breasts.\n\n\"Rub, my, nipples, between, your, fingers. Yessss, that's, it.\" She spoke one word each time her ass bounced on my hips.\n\nIt didn't take long, three or four orgasms coursed through her well primed body. I could tell because she would stop rocking as her pussy clenched around my cock. Then she would begin rocking again. Her juices flowed down between my ball sack and my thigh wetting the sheet beneath us.\n\nI continued to cup her breasts, but stopped tweaking them until she could speak. \n\n\"You now have my permission to come.\" She rocked back and reached down between her legs to fondle my balls. \n\nThe moment she did it, I released pulse after pulse of cum into her. \n\n\"Oh wow, that feels good.\"\n\nI pulled her close to me until I was done. When I released her, she fell to the bed, and sprawled where she landed.\n\n\"You're full of surprises. What else you got?\"\n\n\"I'm done. Three times in one day is my limit. We can do other fun things though,\" I thought about it for a moment. \"I'm going to try something, tell me what you think.\"\n\nI spread her legs and collected some juices from her inner lips onto my index finger. Then I rubbed it around her brown pucker, and slipped my finger in to the first knuckle.\n\n\"Hey!\"\n\nI kept my finger where it was. \"What do you think?\"\n\n\"It was a bit of a shock at first, but it made me clench in a tingly sort of way.\" She wiggled her hips.\n\nI popped my finger out. \"We can do more with that later if you like. Right now, I don't have another orgasm in me.\"\n\nI slid up until I rested my head on the pillow next to her. She patted my arm.\n\n\"Thank you for changing the worst weekend in my life to one of the best. Tomorrow's Monday and I have to see about getting the well working in my house.\"\n\nI took her hand and kissed it. \"I'm pretty sure you'll be here tomorrow night and possibly Tuesday. It's going to take the well guy a while to get out here.\"\n\n\"Good,\" she purred. \"It'll give me time to read Literotica and take notes while I'm sunbathing.\"\n\n\"You'll always be welcome on my sun deck as long as you remember the dress code.\"\n\nShe sat up. \"I have a friend, Leah, coming up next weekend.\"\n\n\"It's not a problem. I can wear clothes while she's here.\"\n\n\"You may not have to. Leah likes adventure. A weekend running around nude may be what she needs.\"\n\nI patted her thigh. \"Your wish is my command, within limits.\"\n\nShe flashed a slightly evil grin. \"Let's find where our limits are. I may even order in a few things off the internet. This is going to be one heck of a do-over.\""
    ],
    "authorname": "Vaguewriter",
    "tags": [
        "exhibitionism"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/do-over-5"
}