{
    "title": "A Big Shiny Blue Marble Ch. 59",
    "pages": [
        "***Still in Colorado, there are some chance meetings in this and an unusual relationship gets ironed out.\n\nUnusual is a key word here, so I'd suggest reading the tags before diving in. 0_0\n\n------------------\n\nBook of the Forsaken part 13\n\nThere was something about Katje that could get to Talon's heart every time and neither of them had much of a say in it. Likewise, Talon had the unconscious ability to stop Katje dead in her tracks to fall hopelessly in love with him all over again. These things usually came out of nowhere.\n\nThe first time that Katje had agreed to sit on his chest with her knees on either side of his head was a case in point. She sat on him as though she was afraid that either her weight would crush him -- all 94 pounds of her, or as though she was worried about something which Talon couldn't understand.\n\n\"You don't have to do this,\" Talon said, \"Maybe we shouldn't. You look too uncomfortable to me and I don't like it. I'd rather not do anything that you don't like.\"\n\nShe'd looked at him suddenly trying to see if he was angry or disappointed in her, but he wasn't.\n\n\"I've done this before,\" she said, \"with Cor and with Sonja and now you more than anyone. I don't know what's wrong with me.\"\n\n\"I think it's the position,\" Talon said, \"We've already done this like twenty times with you on your back because that little thing you've got is making me its prisoner.\"\n\nShe laughed so hard that she had to lean over him to hold herself up on her hands. When she could even speak, she had to know, \"It's prisoner?\"\n\nTalon nodded, \"Yeah, I've already spent hours licking you those times before. I could do that forever. You made me stop yesterday after you passed out for a second.\"\n\nShe stopped laughing and the way that she looked twisted his heart yet again. \n\n\"It got to be too much. But I know what you mean. I've already had the same kind of thing happen to me when I suck you and I know it's stupid. You came, my lips were so numb, nothing was going to happen for a long time after that -- and I still wanted to have it in my mouth because it's you. I think I'd love to just lie there and do that all day sometime.\"\n\nHe nodded, \"But I think that like this, you feel like I can see too much and you're shy.\"\n\nKatje thought about it and she said, \"You might be right. So we're gonna do this now just because of that.\"\n\nShe moved back a little and smiled down at him, \"Take a good look, Talon. I'd never want to hide anything from you.\"\n\nHe smiled and coaxed her forward so that he could begin.\n\nAbout a minute into it, he noticed that while Katje was feeling it, she was also watching him, holding her hair and her breasts so that she could see better and she was also playing a little with her nipples.\n\nShe looked so little and sweet like that and Talon's heart almost broke then so he told her that he loved her because he thought that he might die if he didn't say it right then.\n\nThey went on and it ended with her trembling in his hands as he held her up. Her head was bent and her throat was raw from pleading out her love to him. Tears fell on his face and neither of them cared. She was clutching his head and holding herself against him as the fluttering inside of her faded.\n\nShe sniffled a little. There were times when they made love that it could make her cry a little out of love for him and she'd been a little ashamed over it the first few times, but now Katje regarded it as a point of pride. \n\n\"I'm yours Talon,\" she smiled and sniffled again, \"I can't help myself. I'm so in love with you it makes me cry, but I'm happy.\"\n\nShe moved back a few minutes later to ease herself down on him slowly, and he loved the way that her soft voice took just the slightest edge when she finally bottomed out on him carefully.\n\nShe wiggled herself around for a minute to hear him groan. Then she nodded, \"Gonna rock your little world, Talon.\"\n\nShe smiled and lifted herself just a little and then she dropped on him gently, maybe an eighth of an inch to make the groan come out a little like a cry. Right at the end, she leaned forward and ground on him. The effect of her voice then, ...\n\n\"Gonna fuck my sweet baby's brains out now,\" she sighed.\n\nHe didn't know why he hadn't come just from that.\n\nOnce she'd abandoned the pretense and just got on with it, Talon stared at the small goddess who'd chosen his heart to rule as she writhed on him. There were times when she needed to go short and as fast as hell and he watched her looking into nothing in front of her when her eyes opened. Mostly, they were closed and he liked that because of the times when she'd open them and he could look at her light irises for a few seconds. Her breathing then was so shallow and fast and she leaned forward with her hands on his chest or his shoulders.\n\nShe wouldn't put them anywhere else then and he knew that she needed them to be on him. Her sweet mouth was open and he could look at her wonderful teeth and he didn't give a shit if she drooled a little then. He doubted if she was even aware that she did, thinking that if she knew of it when it happened, she'd feel embarrassed. \n\nBut there was something about them and they knew it. It was similar to when they ate together and it got messy, ending up with the two of them often holding the same large piece of meat in their teeth at the same time and snarling a little as they looked into each other's eyes. It was just their way.\n\nSo at times like this, when she was feeling it and working herself so hard and fast, he didn't mind it if she drooled on him a little. He never said a thing. He just reveled in the mating of her.\n\nWhen she'd shift to the long strokes, Katje would often lean back as her hips went on as though they were a part of an exercise machine left on auto-pilot. Her gasps and little sounds were the things then that tugged at his heartstrings. \n\nShe needed three things at once so often at those times. \n\nThe constant was the fucking, of course. That was central and had to go on. It was like a holy act between them; the engine that was driving it all. So that went like a machine, each stroke a grinding whipping of her spine, her hips being thrown just the last little bit at the end. It was the only thing that Talon would have ever needed a little pubic hair for. \n\nShe could keep them pretty wet from her own moisture, but she didn't grow any hair on her mound and she was adamant that Talon keep himself bare for her there so he did, shaving every day. He knew that she could get sore there, but it boggled his mind that long before that, it had happened before that she'd turned the area of skin over his pubic bone pink and sore for a while.\n\nThe other things that she needed were two-fold and they'd be a conundrum for her, were it not that she was mating with a male who had two hands himself.\n\nKatje needed to lean backwards sometimes and to do that, she either had to be held by him or she had to support herself with her own hands for most of it.\n\nBut at times like that, her wonderful breasts cried out for attention too and had to be looked after. She'd taught him what she liked and he'd been an eager student. Talon didn't mind either way, whether his hands ran over those tits or he held her up so that he could watch her love them.\n\nIt just made him a little sad that when his Katje was like that, he often couldn't see her face because her head was back so far that her hair was draped over his thighs for a good part of its length.\n\nShe'd cry out sometimes and it was as though she was someone else, the cry sounding very primal to him and depending on where he was in it, he'd answer her in the same tone. It often brought him a thrill because she'd be bent backwards and he'd be wondering if she'd snap her own neck at this one day and then she'd cry and howl in a wild and sad way as she trembled a bit in his grip for a moment or two.\n\nHe'd answer her sometimes and then her head would rise over the horizon of her breasts to look down on him. Katje would be in full lust then, but she'd look at him with those light eyes and she'd do it again, but it would sound hopeful to him then and he'd answer. She'd smile and her eyes might close for a few seconds and in that time, she looked happy and moving in almost a dancing, fucking sort of way that he could never categorize to fit into his mind properly.\n\nIf it was one of those times and it had gone well, this ritual that she seemed to follow unconsciously; she'd come and he'd know it by the barest and quickest build up to him. He didn't know how fast it was for her, but he knew that he had to be paying attention if he didn't want to miss it.\n\nThe build-up could appear and go by so fast but it was the only warning that he'd get. Then her orgasm would be on her.\n\nShe'd come and howl out his name sometimes in a way that he could feel inside of him. Her mouth would open and her eyes might be open or not. But it was her wings then, ...\n\nKatje's wings would almost explode outward and she'd flap once or twice before he'd get to watch them quiver for him. Those long seconds were when he'd feel her working him inside of her to draw his seed forth. \n\nSometimes he wasn't ready and sometimes she made him ready with it all, but she always told him afterward how she loved to look at him then. He didn't get it until she'd described it for him, but what she saw then were his eyes almost flashing as they glittered and his mouth would open and his head would thrash there under her and the sight of his teeth could push her higher. \n\nEvery tendon, every artery and every single muscle that he had in her view would be distended then as his semen came to her and Katje wanted it all. His hips would thrust a little then but that wasn't what she waited for.\n\nIt was the way that the last thrust -- the seminal stroke, as it were, would be done with his hands holding her hips tightly against him as he arched his back and actually lifted her up a good half foot into the air.\n\nThat was when she'd often grunt to him in a needy way -- right at the moment that she was taking it from him and grinding a bit to make it good.\n\nThe moment would drag on and when she knew somehow that she'd gotten the seed of her male, she'd lean forward suddenly and work him even harder from inside her as the screeched at him from inches away and he answered for as long as they had the breath for it. \n\nThis was no language other than what had always been done in caves and grottos and in between a few rocks on a hill by their kind, back when any male tried to impregnate every female that he had the chance at and every female was after any male. After the frenzy each time, there was only a little time for small and quiet little strokes and kindnesses passed between them until they met again the next year to mate again. It was before the pairings which were sought today by the present generations of that unknown predator, but the elements were still the same.\n\nIf there was anything left for her that she hadn't drawn out in the way of their kind, she'd get it then; a small offering of the last of it, almost a tiny second orgasm to him, but sweet nonetheless.\n\nThe magic would fade after that and the two of them would look at each other for just a moment before she'd reach for his head and they'd share a long and frantic, though weakening kiss.\n\nAfter that, she was just on top of him with her head next to his, telling him how much she loved and needed him. Talon had absolutely no doubt of it because though it hadn't been planned - just like the way that they'd gotten together that first night -- they'd become something that Cor and Sonja hadn't attained. Whatever they were and only half-breeds at that, ...\n\nThey were now a mated pair of something.\n\n--------------------------------\n\n\"I can't believe that I'm letting you do this,\" she said as she stood looking at him while he knelt a little nervously before her looking right at her cleft.\n\nShe was showing him where to place his finger so that he could direct her stream. He got it -- or he thought that he did, so he got to his feet and stepped around behind her.\n\n\"I should have never asked if I could hold yours,\" she said, feeling him reach around her and loving it even so.\n\n\"Come on,\" Talon said, \"It might be a smile or two to you to hold mine, but I've hung onto it all my life when I've had to pee. It's like a hose, though it's short like that. There's no subtlety to it like the way that you can control yours. That's what I want to learn.\"\n\n\"I get that,\"Katje said, \"and on the one hand I guess I don't mind because we're just close. I think I even want you to do this for me. There's no risk of me getting my own finger wet if it's yours. \n\nBut so help me, Talon. I'm trusting you here. If you get my feet wet, there won't be a second time.\"\n\nHe slid his hand over her belly and extended his index finger, \"Oh, no pressure here, huh Katje? And is this about right?\"\n\nKatje sighed and reached up to touch his cheek and hold her head against his, \"Yeah, that ought to work. I'm sorry. I just never thought that this would ever be such a big deal to us. I have to admit, it's fun.\n\nOk, you have to keep your fingertip there and lift a little, just by the slight pressure against my skin. Don't lift up too much but be sure to lift at least some.\" She moved her feet apart a little more.\n\n\"Ready?\"\n\nHe nodded over her shoulder and she drew a breath and began, hoping that she wouldn't have to wash her feet and legs in a minute if he got this wrong.\n\nBut he didn't and she was a little surprised. \n\n\"Hey, you're pretty good at this,\" she smiled, \"I might let you do this a lot more -- but I'm gonna want you to do it naked against me, since it feels really good to me then.\n\nHe was smiling and then he groaned, thinking about the end to this. \"Katje, there's nothing to shake. How do you end this?\"\n\nShe kept at it, not done just yet, but she still held his head against hers as she grinned a little wickedly.\n\n\"Your problem to see to it that it doesn't become my problem. I didn't bring anything to wipe with.\"\n\nTalon was puzzled for only a moment and she was a little disappointed that he seemed to have a solution a few seconds later, since he was smiling, \"Don't you even think about picking me up to shake me. That would be bad.\"\n\nHe tried to adjust the stream as she slowed and she had to admit that it was plain that he'd been thinking this over beforehand. She said it to him too.\n\n\"Christ, Katje, I'm a guy. That's what we do. Now step backward at least three steps or turn around or something, ok?\"\n\nShe nodded and he guided her and the next thing that she knew, he was there in front of her again and there was no need to wipe anything.\n\n\"Talon!\" she said, very surprised.\n\nHe just looked up a little shyly, \"The things that we do to each other every night, Katje, how could I mind doing something like this for you now? Like you said the other week, it's a non-sexual thing. I think I'd rather that you bring something to wipe with, but, ... \" \n\nHe shrugged while she looked down at him, wondering just how much she did want to make a sexual thing out of it -- since he was there and all. \n\nKatje gave up then and held his head against her with a sigh, \"Never mind, Talon.\n\nJust lick me some more.\"\n\n-----------------------------------\n\n\"I keep thinking about Ellie,\" she said to the other side of the room as they waited. Katje was on her knees waiting for him to soften and pull out of her slowly so that it wouldn't be such a shock when he left.\n\n\"Those are the first coherent words that you've said for a while,\" Talon observed as he hugged her from behind.\n\n\"It's the first thing that I've been able to say for a while, \"she said over her shoulder to him, \"I haven't had much of a mind to work with the last twenty minutes or so. No matter where you put that thing in me, speaking can be difficult -- ok, it's right out in one place, but, ... \n\nI was just wondering about her and I hope she's ok. I liked her until she started making eyes at you. I sure wasn't ready for that then.\"\n\n\"What do you mean ' then'?\" he asked.\n\n\"She was just so lost when we found her,\" Katje said, \"So, ... unequipped to deal with things and way too trusting. I kind of worry a little. I liked her a lot. \n\nIt was a little weird when I got the bath ready for her. I mean, we were a couple of girls. Girls aren't as nervous as guys are in a situation like that, but she was far more nervous than I ever expected. She wasn't going to even take her hand away from her crotch until I was out of the room. \n\nIt was a little silly, I mean, she was naked to start with, though I guess that she was upset over everything and all. She did have some clothes, but the demons ripped them off. She looked so thankful when you found her a set of coveralls close to her size.\"\n\n\"You're avoiding my question,\" he whispered as he pulled back and she fell forward with a groan.\n\n\"Sorry,\" she groaned with her face in the pillow, \"I guess this is the part where I come clean about having little daydreams about her.\"\n\nHe collapsed on the other pillow and looked over, \"Really?\"\n\n\"Uh-huh,\" she sighed, \"I like girls too, well a very few girls. Most, I'd never have the thought of it, but, ... \" \n\nShe lifted her head then to smile at him, \"I don't know why it would surprise me to see it now, but we're still the same -- even like that.\"\n\nShe smiled at him softly, \"You miss her a lot, don't you? I know that you're mine and you'd be happy to die that way, but even so, you miss Ellie. You don't even look at most females - of ANY sort when we go anywhere. But I know you liked her a lot. I can tell.\"\n\n\"I do,\" he said, \"What about you?\"\n\nShe dove at him weakly and he caught her and pulled her to his chest, running his hands over her back and wings as though she weighed nothing and carried no inertia because of it. She kissed his nipple and settled against him happily. \n\n\"Idiot. I'm the one who's just admitted something to you. Of course I miss her a lot. We were almost friends and I'd still want that.\"\n\n\"Would you want to go to bed with her?\" he asked, \"You know, just in a hypothetical sense.\"\n\nShe blew past her lips and almost made it a raspberry, \"No. I'd want to go to bed with her in a real sense and make out with her. I thought she was really sweet-looking and so lost, I just wanted to hold onto her. She's really close to my size.\"\n\n\"I liked her boobs,\" Talon grinned and Katje laughed at him.\n\n\"And I liked her boobs,\" she smiled as though he hadn't said it, \"They're a lot smaller than mine, but I thought they were awesome. Would you want to go to bed with her?\"\n\nHe exhaled and she just cut him off then. \"Don't answer, ok? I already know the song.\" \n\nShe tried to imitate his voice and she did a fair job at it, \"I'm a guy, that's what we do -- want to take a girl to bed.\"\n\nShe laughed at his expression and then she settled down and they were silent for a little while. It came out of her as a statement of fact when it did.\n\n\"My Talon loves me,\" she said, \"But even so; I just know that you'd love to do exactly the same thing to her that you've just made me happy over. It's not your normal way to think like that, but she's got just as nice a little butt to you as me, though in a different way. It's got the same effect on me, Talon. All I'm doing is saying what's there.\n\nI know it won't ever happen and that makes me a little sad, because I think she's about the only one that I'd allow it with - in a fantasy sort of way. Mostly, I'm worried for her as a friend.\"\n\nThere was a sort silence then until Katje broke it.\n\n\"I'd probably kill anybody else but her, but, ...\"\n\nShe rolled over to look at him, \"I think with her, I'd love to watch it with you. Would you want to see me with her?\"\n\n\"For a girl who's smarter than I am, you say some really silly things when you don't think them over first,\" he smiled back, \"I think it's juat another of those things that keep me helpless for you. I'd love to see that, Katje.\"",
        "You know what's really strange?\" she asked him and he looked over.\n\n\"I get the sense -- and I can't say how I know -- that she isn't fitting in with my sister and brother and that's a little odd to me if I'm right. \"\n\nShe lifted her head and kissed Talon for a moment and then she said as she looked down at him, \"I had issues because you and I were just starting then, but I think that now, she'd fit with us in some way. She'd need to be protected for sure, but if she likes girls even a little bit, I think she'd fit right here with us. \"\n\nHer hand slipped down low on him and in a minute, he gasped and she smiled at the way that she'd caused him to raise his knees involuntarily. Katje pulled her hand back and slid her finger into her mouth for a moment to wet it. It made a little side-trip into her for more slickness and then she had him groaning in a few seconds.\n\n\"What if she was just like us, Talon?\" she whispered as she untangled her tail from his and brought the end of it up to his lips. He began to suck it instantly and she kissed his cheek before she lowered her head right beside his ear and her words came out like a soft breeze to him.\n\n\"Roll over, baby.\"\n\nA few minutes later, it was Talon who had no mind as Katje clenched her thighs together, holding her tail between them as she lay on his back, hanging on while she worked it so slowly into and out of him.\n\nHe was listening as she fucked him and she was still whispering.\n\n\"She's a half-demon, Talon. What if she was like us? Half-demons have tails too, honey. I'd give a lot to see her do this to you.\"\n\n------------------------------- \n\nThe next day, Talon was just doing odd little jobs and he stopped often to think about a few things. Katje had gone early in the morning, off to her sibling's place to check up on Ellie. To his mind, the little interlude the night before was just something that they often did for each other and her words about Ellie were just that. It was just something that Katje had said as a nice but naughty little thing to spur them both while she made love to him.\n\n-----------------------------------\n\nKatje was on her way home, more worried now than the night before. Sonja hadn't said much, other than a very brief statement that Ellie had gone. It was Cor who told her that no matter what had been said, intimated, done -- anything, there was nothing that would get that girl to even think about mating with them and, he said, there was nothing under the sun that would make her lift her hands from her own genitals or take off the coveralls that Talon had given her.\n\nKatje had said nothing about it, but she saw something during her morning with them that said so much about Sonja to her. The 'Talon' haircut was starting to grow out and she hadn't shaved the sides again, so that was either because of Cor or, more likely, it was just that Sonja's interest was passing.\n\nNow, Katje couldn't even begin to have the slightest idea where she might look for Ellie. It really bothered her. Ellie could probably get herself into something right over her head and not know a thing until it was already far too late.\n\nThe only thing that she could think to do was to fly home to Talon. He needed to know and then they'd try to figure out a search pattern for her to fly, since he knew the area around where they lived a lot better.\n\nBut in the end, Katje didn't have to really do much at all. She saw a flock up there ahead of and about a thousand feet below her. What drew her attention was the ragged way that they flew. Demons don't usually fly in organized groups, but they don't fly as though they were trying to claw over the backs of the ones in front of them either.\n\nThat was when she saw the lone flyer way out in front and fading. She could see it from all the way back to where she was flying. It was the sandy-blonde hair that caused her to want to pour on the coals as she accelerated and shifted to the shadow form and she wasn't after stealth here, either. \n\nKatje wanted nothing more than the shape which would allow her to do the most damage in the shortest amount of time.\n\n---------------------------\n\nEllie was frantic after her last look over her shoulder. She couldn't tell for sure, but there must have been twenty of them at least. She didn't know why they were picking on her, or why they'd want to hurt her, but she knew that they weren't flapping that hard just to stop and say hello. She knew that now.\n\nShe looked ahead and she could see the flat place where Talon and Katje lived and she tried hard to get just a little more speed out of her tired muscles. If she could have just the tiniest bit of luck now, she might make it to the gatehouse.\n\nBut she had other thoughts which almost took the wind out of her sails. What if they weren't there? What if the door was locked? She almost faltered then, but she had nothing else, so she just went on, trying not to fly too raggedly and wishing that she had better than the weaker wings of a half-breed. \n\nShe looked behind her and groaned.\n\nThey were gaining on her so quickly that she'd probably be overtaken before she was over the remains of the rusted-out fence.\n\n-----------------------------\n\nTalon hadn't been watching. He hadn't even been looking up. He'd just been walking back from the end of the runway, finished with the task of clearing it finally. He'd walked all the way back to the hangar and then he'd had a drink from his water bottle and then just sat down to roll a smoke. \n\nHe was halfway through it when he heard the fury in the shrieking cry and he snapped his head up to look, squinting into the bright sunlight above.\n\nEllie heard it too, but she mistook it for the sound of a demon not all that far behind her and it caused her to redouble her failing efforts to get to what safety she prayed might lie there for her on that flat ground, The beginning of her flapping decent allowed her to gain a little more speed at least.\n\nBut neither of them had been the ones who were supposed to have felt much of anything from that cry. It had come from Katje during her plummeting drop into the front few demons in the ragged flock and she'd timed it just right.\n\nShe'd left them little if any time for any of them to look and react. The sound had been to make them uncertain. \n\nAnd in that, it had succeeded magnificently.\n\nShe'd just blasted almost straight down, killing two of the three that she'd collided with and leaving the third crippled as that female fell to earth just barely conscious. As Katje extended her wings to peel around under them, there were seven mid-air collisions in the confusion as the front runners slowed and the ones behind overran them. That resulted in two more fatalities. \n\nAs she rocketed over the remains of the gaggle from behind, she saw that she had two on her tail trying to catch her and she had to fight off the desire to kill them first. She did it by forcing herself to think of Ellie and she came in lower this time in a slanting attack from left to right. \n\nIt had the desired effect, but it also caused her to slow. Before she lost all forward motion to the arms which reached to seize her, Katje just pulled her arms and legs together, pulled her wings in tight and dropped away, turning over to point herself head-first at the ground, knowing that she'd be followed down.\n\nTalon was onto things now and he'd grabbed his CAR-15 and almost shot Ellie, not recognizing her at first. But then he wondered why that demon was out so far in front of the rest and yet obviously wasn't a better flyer. He recognized her at the same time that he saw the pandemonium in the flock which was pursuing her.\n\nHe called and waved to Ellie and when she sort of semi-crashed near him, he was there in seconds, helping her up and getting her into the hangar through a man-door. \"Hide in that corner, behind those red chests.\" He told her, wanting to hold her until she'd at least found the strength to stand on her own before he dealt with the weeping. \n\n\"I've got to go help Katje. Here,\" he said, handing her his carbine, \"Try not to shoot us. If you have a little time, there's a pair of coveralls over there on the bench. I don't think they're too dirty.\"\n\nShe gasped and wheezed, her sides feeling like they were in fire as she looked at him, \"T-Talon, ... Demons, ... following me.\"\n\n\"I know,\" he said, his shape changing to something hard and gray, his voice along with it.\n\n\"Hide!\" and then he was gone.\n\nTalon was out front when Katje sailed in across the edge of the concrete with several demons trying hard to catch her. \n\nKatje saw him and she veered off to the side as he began feel his breathing shifting. He was looking forward to this now.\n\nThe ones who had followed Katje down were already coming for him when she appeared beside him. She asked, and he said that Ellie was in the hangar behind them and she nodded, pointing to the rest of the flock as they approached.\n\n---------------------\n\nTalon felt strange -- that is, even more strange, he supposed, as he walked to the hangar man-door a few minutes later. He was thinking about having another mess to clean up. Katje had flown off after the three demons who had finally figured out that they might not be up against someone who was easy to kill.\n\nHe hadn't walked seven steps when the gunfire erupted and he felt an impact against his shoulder. He dropped to one knee and looked around. A demon was curled in a ball on the floor, wounded and snarling. He jumped up and ran over, tearing the demon's head almost right off while he screeched.\n\nThere was silence then and he looked up. Ellie was pointing his rifle at his chest. It looked as though if she held it any tighter, she'd either break it or it would squirt out of her hands like a wet bar of soap.\n\n\"Ellie!\" he exclaimed, \"Christ, you've already shot me. Relax. Ok? It's me.\"\n\nEllie looked as though she was about to cry again, and wasn't sure if this were a trick. Talon changed shapes to the one that she'd seen the most and she relaxed visibly. He supposed that he might have faulted her for her lapse in judgement, since she had seen him like that before, but she was obviously at the long end of her tether. He looked at his shoulder and saw only what would likely become a bruise. \n\nHe looked back at her, \"Are we ok now, you and me?\"\n\nShe nodded and then she did begin to cry. He stepped over and took the carbine from her. She just wailed into his chest after throwing her arms around his neck. \"Thank you,\" she sobbed in a voice so much smaller than the one that he'd heard from her before.\n\n\"Come on,\" he said quietly, \"Let's go wait for Katje. It's her you need to thank more than me. Try to remember that if you see me or Katje and we're gray and have NO horns, that it's us, ok?\"\n\nShe nodded and he asked her what happened. \n\n\"I didn't want to be with Sonja and Cor anymore and I , ... I just, ... \"\n\nTalon looked over, \"Wanted to come home?\"\n\nShe nodded eagerly, not catching what he'd said, \"I wanted to go home, but I haven't really got one anymore so I thought that I'd come here to ask you if I could still have that gatehouse and, -\"\n\nShe looked up a little searchingly, \"What did you say?\"\n\n\"Welcome back home,\" Talon smiled, \"but you're not going to the gatehouse until we all have dinner. We can talk then. Whatever we come up with, Katje and I have missed you and we have to come up with some way to keep you safe.\" \n\nHe chuckled, \"I dunno, you seem to have a knack for getting demons to follow you.\"\n\nShe nodded, \"I do, somehow. I want to get some kinda start where I don't have them trying to get me every day. I had to hide and dodge like crazy yesterday.\"\n\n\"Sounds like you're learning,\" he smiled.\n\n\"I don't know why they're after me,\" Ellie said.\n\n\"I think it's a couple of things,\" Talon smiled, \"They're after everyone, Ellie, not just you. The ones that you seem to attract are probably interested because they see you when you fly and hair that shade isn't natural for any demon but a half-breed, I don't think. Other than that, it's probably your cute butt or something. Look, there's Katje now.\"\n\nEllie looked a little nervous again, \"Hey, Talon? I wanted to say that I'm sorry if I made you nervous before I left. I don't know why I did that,\" She looked down, \"I don't really know how to act around guys and I tend to make a fool of myself.\"\n\nThe statement was only partially true. Ellie didn't really know how to act around anyone. It was what caused her to withdraw and stay there.\n\nIt took him a second to get what she was talking about, but then he nodded, still smiling, \"It's ok, Ellie. The only thing wrong was that I was really nervous, like you said, because Katje and I had just gotten together and I didn't want her to think the wrong thing and we've been talking and we think it was just kind of your way. We've been together for a little while now and we've figured it out. \n\nWe're both glad that you're here and that you made it. We really did miss you. You kind of grew on us or something.\"\n\nKatje landed and almost ran to them. When she got to them, she threw her arms around them both and looked at them grinning.\n\n\"Katje,\" Ellie began quietly, \"Thank you. Thank you both for saving me again.\" She sobbed a little and began to cry again.\n\n\"Oh no,\" Katje grinned, \"You're just trying to deflect me and keep me off-balance, hoping that I won't ask just what you're doing there in a flightsuit with the zipper most of the way down and you got my boyfriend out here naked. I'm no fool, Ellie.\"\n\nThe blonde looked up in a little horror and was already shaking her head when she saw Katje's laughing grin.\n\n\"Kidding,\" she chuckled, \"just kidding. I'm so happy to see you again!\" She hugged them both as much as she could and then she kissed Talon and then Ellie as well. While Ellie stood in a little shock, Katje said, \"Thanks, Talon. You wasted about as many as me that time. You're getting better.\"\n\nHer expression changed as she looked at him a lot harder. \n\nBy that point, Talon was fading out and they eased him onto the concrete in a bit of a heap.\n\n\"I must have shot him!\" Ellie cried, \"He said I did.\"\n\n\"Where? Was he like this then?\"\n\nEllie shook her head, \"No. He was like that way that you guys can look, all gray and mean-looking. When he changed, he was looking at this shoulder.\"\n\nKatje reached over, looking,\" No, Ellie. You might have hit him here, but it's only gonna be a bruise. If he was gray, you can't kill him with a gun. But I see the problem right here,\" she pointed to his back.\n\n\"His wings are coming out. We'll need to get him into bed and I can already tell that he's gonna smell pretty bad before it's done. Can you help me? I hope he doesn't make either or both of us barf.\"\n\nThey couldn't drag him, so they found one of the flat trailers and laid him out there on his stomach, grabbing the tow bar to pull him along until they got to the shelter. From there, they moved him inside and to the spare bed. \n\nKatje was right, though, it took most of the night, even with her making little incisions to help ease things and with them both cleaning away the mess which seeped from the places where the wings sought to emerge now. He smelled awful.\n\nEllie didn't understand, so Katje explained as they worked, why it was that he even had wings. She supposed that if anyone could understand, it helped that Ellie was somebody who had a pair herself.\n\n\"He was supposed to get them like everybody else, but they stayed inside. Now they're coming out and his body's made fluid as though the wings don't belong. But they do belong. He won't smell at all after they're out and we've washed the junk off them.\"\n\nTalon had found a means of temperature regulation which could be used to turn small amounts of thermal energy into enough mechanical energy to run a smallish generator. \n\nKatje knew how to make it all work, but there wouldn't be enough to run much of the ventilation system, so they had to use a small fan to help the odor and the drying of his wings. \n\nEllie was a great help when it came time to ease the wings out slowly so that they could clean everything themselves and dry them a little bit. Talon was out through it all and Ellie was a real trooper.\n\nLater that night, they sat drinking a little tea which they'd found there in one of the cupboards. \n\n\"I don't really know what I'm going to do now,\" Ellie said at one point, \"and I'm very thankful that you said that I could have the gatehouse and all, ... \"\n\n\"Are you still afraid to be there alone?\" Katje asked, \"And I'm not saying it out of looking down at you. If it was me in your place, I'm sure I'd be shit-scared to live alone.\"\n\nEllie wanted to protest and shake her head, but she hung it instead, \"I'm still afraid, but if you and Talon show me how to keep myself safe, I'd --\"\n\nThis time, Katje was shaking her head, \"You can do that if you want to, Ellie, but it's too far away for us to even know if you're in trouble. Look, there's enough room in here for us all. We just have to re-arrange things so you can have your own room. I'm saying that we'd like you to stay here with us -- at least until we can teach you --and even so, we'd like you closer. I'm sure we can get along.\"\n\nEllie had an objection then, squirming rather uncomfortably and apologizing all over again to Katje about the way that she'd acted.\n\nKatje said the same things that Talon had, \"We think that we can handle it now. We were too new and shaky before, but we're ok now.\n\nThey talked a lot more; Ellie feeling a lot better. Eventually, Katje carefully asked Ellie why she was so shy and always seemed to be so nervous and withdrawn.\n\nShe sipped her tea, \"I mean, you can be anyway that you want to be, but I know that I'd feel a lot better -- and I'd feel a lot more like I had a friend if I could see you loosen up a bit. If you can accept a little friendly criticism, Ellie, you've always got a look to you like you're afraid that everybody is trying to get into your pants.\" \n\nShe laughed a little, \"Hell. It might be so, but if you're going to live here, it would go easier if you could relax. Talon and I tend to joke around a lot and it would be easier for us to include you in it that way.\"\n\n\"It's always been my trouble, \"Ellie said a little shyly, \"But I'll try, Katje.\"\n\n\"That'll be good enough,\" Katje smiled, \"I'd take that.\"\n\nEllie smirked, \"I doubt that anyone's trying to get into my pants, though.\"\n\nKatje chuckled, \"Why not? You look awesome enough to get heaps of demons to chase you. They can't all be wrong. \n\nTalon likes you. Heck, I like you. But let's get off that topic before you feel like you've gotta zip up that flightsuit. It's not going to get any cooler in here before tomorrow.\"\n\n\"But you meant that, um, didn't you?\" Ellie asked and Katje nodded.\n\n\"Sure I did,\" she said, \"but that's not something to talk about while my male is lying there like that. I've got too much on my mind. But I can tell you, Ellie, if you ever want an honest opinion, well, neither of us would joke then, ok? I was being honest there.\"\n\nWhile Katje got up to wash Talon and his wings down again, Ellie tried to think about what she'd heard. But there was only so far that she could go. She'd always been the way that she was for a reason and she kept that to herself. It was lonely, but it was the safest -- and the only way that she knew.\n\n\"I'll sleep in that big old chair,\" Ellie volunteered and there was a brief half-hearted and joking argument from Katje over it. And then she put her hand on Ellie's. \"I know you're shy. That's ok. I think I'd like it if we could share that big bed, since there's room and you'd be cooler if you slept like me, but I understand about being shy.\"\n\nThey tried to get some sleep and after a while, they both drifted off, though not at the same time. Katje was a plenty weary after the struggle and her worry over Talon and she fell asleep first.",
        "Ellie was tired from her frantic flight and her fear, but she was still awake enough to want to be thinking of things, trying to process everything. She saw that things were different now and she couldn't be completely certain because of what had happened to Talon, but she did feel a lot more welcome with them. She wasn't unwelcome before, but there was an awkwardness that was absent now.\n\nShe sat slouched in the overstuffed chair, her hand supporting her head and her eyes were closed, but her mind was awake. \n\nEllie liked them. She could admit that to herself. Both of them were so beautiful to her. She thought of herself and her situation and though she was sad -- and she was always a little sad, she thought about Katje's kiss and wondered a little. It was only the fast friendly kiss of the moment, but it was on Ellie's mind all the same.\n\nShe opened her eyes a little and looked through one of the spaces between her fingers at Katje, who was quite obviously sleeping. But it was already quite warm in here and Katje slept on top of the covers and she was still naked. It was something that Ellie liked about her most of all -- a beautiful woman who was not shy the way that Ellie always had to be. \n\nShe felt a droplet of sweat begin its long, slow trip down her chest, running right between her small breasts on its way to join the rest of the pool there in her navel. Ellie's hand drifted to the zipper of her flightsuit and she carefully and silently opened it a few inches more, wanting to make the most of any cooling effect that she could get. She wanted to reach inside, but even like this she didn't have the courage.\n\nTalon had changed a little from her time here before, she noticed. He was the same as his female now, not shy about his body. She liked that too. \n\nOk, she really liked that too. \n\nTalon was such an attractive male. They both were so kind to her, and even before when there had been the awkwardness, it was easy even for Ellie to see that they cared about her. They even seemed worried for her, wanting her to feel safe with them before she tried to be safe on her own.\n\nEllie decided that she'd see what might be made of her stay here if she ever developed a spine. They seemed to want her to stay with them, and though she had her usual misgivings, Ellie was a little thrilled to be asked.\n\nIt was her last thought for a little while. \n\nDespite her position, the chair was comfortable and she was tired. Her eyes closed and she drifted off.\n\n----------------------------\n\nThirty-nine minutes later, the sound of the groan snapped Ellie's eyes open and she looked across the room. Talon was awake, -\n\nNo he wasn't. \n\nHe was thrashing in a dream or some kind of non-aware state, but he was about to non-aware himself right out of bed and onto the floor. Ellie was trying to find a clue in the fog of her mind. \n\nIt suddenly came to her that she didn't know about his wings. What if he landed on them? She kept thinking of the way that Katje had been so gentle with them. Talon was about to fall. Though it wasn't far, she was suddenly worried. What if he rolled as he fell and landed on them?\n\nShe groaned as she jumped up. Her head hurt with a bang. \n\nHer head felt like there had been a gremlin camped out inside her body near her asshole and he'd had a slingshot and a rock; just waiting for his moment and when she'd jumped up, he'd fired that stone up through her body and her neck to bang against the inside of her skull. She hated waking up after just getting to sleep. Fucking sleep gremlins.\n\nShe was beside Talon in a second, trying to talk to him and keep him in the bed. A second later, Katje was there helping. Ellie was glad of that. Talon wasn't awake or maybe not asleep either and he was a lot stronger than he looked like this and of course, she knew why that was. \n\n\"Stop it, Talon,\" Katje said calmly, \"You need to rest.\"\n\n\"Stop. Your wings have come in and you'll wreck them if you don't let them dry properly.\"\n\nShe bent down and kissed his forehead, \"Stop, baby. Just rest.\"\n\nThey struggled on for a few minutes. Ellie let Katje do most of the talking while they tried to restrain him as well as calm him. He wasn't frantic, he was just trying to go somewhere in his sleep, the more that they watched him.\n\nAnd then, suddenly it was over and he relaxed as Ellie gasped. His eyes were open and he had a temperature, by the way that his skin felt, but he wasn't struggling anymore. He was smiling, still not really with it and it was obvious that he was just about a quarter of an inch above going back to sleep because he sure wasn't awake. \n\nHe turned his head a little and he smiled at Katje and Ellie and then he looked at his outstretched hand and arm. It wasn't a death grip or anything, but Talon's arm had gotten away from them as they'd tried to restrain him gently and keep his wings opened. Sometime during its travels, it had gone right into the wide opening of Ellie's unzipped flightsuit.\n\nHe held her genitals gently in his hand. \n\n\"Nice,\" he smiled and then he drifted off.\n\nEllie was horror-stricken, but Katje still had a brain and she stepped over to Ellie and put her arm over her shoulder as she reached down and gently freed a smallish set of male genitalia from Talon's sleeping fingers.\n\nBefore Ellie could look up or even react, Katje kissed her cheek softly for just an instant. \n\n\"Thanks so much for getting to him so fast, Ellie. Can you go bring me the pan with the water and the dishcloth please? We need to wipe him down. He's burning up.\"\n\nEllie looked at Katje with wide eyes, but Katje's face only carried a small smile, \"Please?\"\n\nEllie nodded and turned to walk away, reaching down to pull the zipper up so that it was over her navel. She poured out most of the water and added a little fresh water to the pan and then she walked back carefully and held it for Katje as she swabbed Talon very gently. Ellie didn't know what to say.\n\n\"Katje,\" she whispered, \"Katje, I, ...\"\n\n\"Sshh,\" Katje hissed softly, \"Let sleeping boys lie. This won't take long.\"\n\nElle stared and then she nodded, beginning to turn away again, but Katje asked her to stay. Ellie had no better plan and so she stayed, feeling stupid and mortified.\n\nKatje finished up and then she took the pan away with Ellie following, still not knowing what she ought to be doing now. Katje took Ellie's hand and pulled her gently to the bed, \"Sit.\"\n\nEllie sat.\n\n\"I'm sorry,\" she blurted, but Katje just shook her head.\n\n\"For what? You didn't do anything wrong. You got there so fast, Ellie. I can't thank you enough.\" \n\nShe smiled a little, \"I was more worried that he might have squeezed you without meaning to. He didn't, did he?\"\n\nEllie shook her head. \n\nKatje looked at Ellie a little seriously, \"One thing. Big rule here, ok?\n\nI think you might be feeling like you've just wrecked something and now you want to run to the door, open it and just run away. Is that about right?\"\n\nEllie stared for a second and then she nodded, looking down, \"Something like that.\"\n\n\"I think you've been doing that a fair bit in your life lately. I can understand it, but Ellie, I don't really know what Talon might have said to you earlier. If I know him, he was trying to tell you that you have a home here if you want it. We want you to stay. We think you belong with us.\n\nMy sister and brother were trying to get you into bed, weren't they?\"\n\nEllie looked up and Katje could see the tears about to begin, so she shook her head again, \"Neither of us need the waterworks, baby. I have my answer.\" She grabbed the corner of the sheet and handed it over. Ellie nodded her thanks and wiped her eyes.\n\n\"They have reasons that I'm not sure that I can actually agree with anymore, but I think that the main one is that you're beautiful and desirable. Talon and me, we think so too, but we're not gonna try to get you into bed out of just that.\" \n\nShe smirked, \"Knowing what I know now, I think you'd about have heart failure then.\"\n\n\"Katje, I -- \"\n\n\"You hate yourself,\" the other one said, \"God only knows why, but that's just dripping off you, now that I know. Why is that? You didn't do anything. You're just the way that you are.\"\n\n\"But I'm nothing,\" Ellie began -- I'm --\"\n\nKatje chuckled, \"Near-sighted, is what you are. Stop feeling sorry for yourself. Not all at once, just try to ease out of hating yourself. Try not to read anything into my question, but, ... does everything work?\"\n\nEllie's eyes had just gotten a little near to their proper size. Now they were widening again and Katje was shaking her head again too.\n\n\"What I mean is - and just answer the question, Ellie. \n\nIt's me, Katje; one of two people who saved your ass again today and would go on doing that even now because I'm your friend. Actually, there is no 'even now'. Nothing's changed in how I feel about you. What I meant to ask was, is there a vagina under those balls? That's all I meant.\"\n\nEllie looked at Katje's face and nodded very slowly, \"Why?\"\n\nKatje's smile stayed. \"Because like a lot of things, it's all in how you look at stuff. You might see yourself as something a little different, but if you think about it, you're the only one here who's complete.\"\n\nEllie's eyes looked about ready to leave her head, so Katje took Ellie's hand in hers, \"When I was growing up, I only had Sonja and Cor, but they're both pretty smart and they've always read like crazy. One of the places we lived must have belonged to a doctor or something and Cor read every one of his books. So when it was time for me to know about things, he told me.\n\nWhen we're made, and we're inside our mothers, things are decided even before that about how we're gonna be. We grow and we're born. But at certain points, things happen to make sure that we're like the plan. At certain places, we develop what we'll have between our legs, our eye and hair color; stuff like that. The cock on every male starts out the same as the little bump at the top of a girl's hole. All kinds of things like that. \n\nIf you think about it, it makes a lot of sense. That way, there only has to be one set of parts. They just grow the way that the plan says they have to for that one little person inside their mom. We're born and off we go, but either way, we grow up needing a part from the other kind. In your case, things just went a little of both ways, that's all. I remember that I was really curious about that and Cor told me that it just happens every so often -- every couple of hundred thousand births in any kind of animal, but it doesn't usually come out as well as with you. Maybe it was more from the demon side of things.\n\nIf you think about it like that; you're not put together wrong at all. You're special -- something that doesn't happen every day. \n\nYou might know what you need, or you might not even be sure, but I think you have a clue. To live your life, everybody's gotta be something -- or they gotta look like something and live that way.\n\nLooking at you, I see Ellie, and Ellie is a girl.\"\n\nEllie looked as though she was about to argue, but Katje held up her finger, \"That cunny that you've got, do you get periods?\"\n\nEllie nodded and Katje grinned, \"See? A girl. If you didn't have periods, I'd say you were a guy even with the vagina. The important thing here; the really, really important thing, Ellie, ... you ready?\"\n\nEllie looked as though she was about to hold her breath.\n\n\"No holding your breath,\" Katje grinned, \"'Cause the answer to that is the same as for the rest. \n\nIt's not important.\n\nWhat's important is how you see yourself and you'd enjoy the only life you've got a whole lot more if you just live it. I sure don't care, and I still think you're beautiful.\"\n\nShe saw Ellie's eyes flick over to where Talon slept and she chuckled quietly, \"Ok, at some point, he's gonna get curious and the best thing that you can do is let him in on it, so he won't have to care either. He thinks you're beautiful, the same as I do, and that won't change because you have a dick. It might be a big deal to a lot of males, but not that one. And he's your friend too. \n\nHow was it that you shot him? You were all freaked out?\"\n\nEllie nodded, \"I didn't shoot at Talon. There was a demon in the building and right in front of me. I shot him, but he didn't die right away. I guess I must have hit Talon. He ran over and killed the demon.\"\n\n\"See? You think that he'd have let that thing hurt you if he knew then what's between your legs?\"\n\nKatje's smile looked to Ellie like it could survive anything. She wanted one like that.\n\nEllie felt better. More importantly, she felt odd, because she was beginning to really feel a little better overall and it was a feeling that she had never had long enough to get used to. \"What was the big rule you mentioned?\"\n\n\"I already told you. It's not important. That's the big rule. What's important is that you're alive and healthy, and you've got a couple of friends. That's what's important.\n\nOk, so you've got everything. And starting right now, you have no more fucking reasons to hate yourself. It's hard enough just to get by. Something we're big on, Talon and me, is that we like our bodies and we like each other's bodies. I know you're probably gonna get a little freaked out, but we don't usually wear a lot of clothes when we're in here. So you'll just have to get used to that.\n\nOh, and we fuck a lot. Hope you're not a light sleeper.\n\nLike I said, nothing's a big deal. Think you can handle that, or will you need Talon to build you a little fortress over in the corner to hide yourself away in? I know I'd like it better if we didn't have to tiptoe and worry that we might be disturbing you. We make noises when we screw; that's how it is.\n\nEllie had been smiling through all of that. Now she was laughing a little, \"Do I get to watch sometimes?\"\n\nKatje laughed too, \"I don't think you'll have much choice, unless you get earplugs and a good book. But hey, fair's fair. We get to watch if you play with yourself.\"\n\nEllie's eyes were growing again and Katje hugged her before the thought came to her to jump up and bolt. \"What I meant was, you don't have to hide it real hard. I'd probably love to see that, but I'm not gonna leer over the edge of the bed while you do.\"\n\nEllie nodded and said that she'd think about it.\n\n\"I might cheer you on, though,\" Katje said as she got up to make tea. \n\nEllie had to really struggle not to laugh out loud then. She got up and went over to where Katje was trying to see if the kettle still had hot water. The way that her throat felt right now, she'd love a tea even if it was only half-steeped in warm water.\n\n\"Can I have some?\" she asked.\n\n\"I wasn't going to ask you, I was just gonna make one for you,\"Katje said, \"You feeling any better now? I hope so.\"\n\nEllie nodded.\n\n\"Ok, here's where I try to talk Ellie out of her clothes, but for a totally different reason,\" Katje smiled.\n\n\"This place smells like a swamp and there's nothing we can do about it until morning when we open up. There's always a risk that there might be more idiots out there and I don't feel like having to protect two people that I care about at the same time if I can avoid it. \n\nBut I'm sweating a little right here, just like this and I'm naked. Ellie, you make me sweat even more just to look at you in that flightsuit. A hot cup of tea isn't gonna make it any better. So if you think that you can, I know you'd feel better with that off. Talon won't be in any shape to even have a thought on the subject for a long while yet, the way that he looks to me, so if I swear that I won't look, do you think you can ...\"\n\nEllie didn't want to, but she knew that Katje was right. Staying in her suit wasn't going to make sleeping one bit easier and, ... well she had been listening, as uncertain as she'd been through it all. \n\nJust like she always had been, she thought.\n\nThat was what decided things for her and she nodded, \"I'm gonna try not to care, but please, just don't stare at me, ok?\"\n\n\"Deal,\" Katje smiled, so Ellie began to try to get the soaked clothing off her sweaty body.\n\nShe almost ended up on the floor, so she asked for a little help and half a minute later, she felt better. \n\nShe also felt as though she was being really daring and it felt good to feel that way. She looked at Katje who was still smiling and looking only at her face.\n\n\"Thanks, Katje,\" Ellie said.\n\nKatje nodded and spoke through her smiling teeth as though she was facing such a struggle. \n\n\"I will not look. \n\nI will not look. \n\nEllie is lovely and this is killing me, but I will NOT look.\"\n\nEllie giggled and just said, \"Oh fuck, Katje, go ahead. You might as well look and I'll try not to crawl under the bed. I didn't say you couldn't look. I only asked you not to stare.\"\n\nKatje heaved a sigh as though she'd been carrying a heavy weight and had just been told that she could set it down. \"Oh thank God.\"\n\nEllie smiled and wished that she'd known these two all of her life.\n\n---------------------------------\n\nIt started as just the two of them sitting on the bed and with their mugs of tea, but it became obvious in fairly short order that there wasn't really a comfortable way to do it. They muttered and grumbled as they each spilled a little over the rims of their mugs and burned their hands a little. \n\n\"This would be easier even if we were sitting side-by-side on one of the long stones outside, \"Ellie said, meaning the curbstones which were there for cars which no longer came to park there, \"THAT would be the way.\"\n\nKatje nodded, \"I want to do that with you now. Tomorrow, that's what we'll do.\"\n\nEllie nodded and after more looking around for a better way, they just ended up sitting on the bed cross-legged facing each other. It was a huge step for Ellie and Katje noticed it.\n\n\"Have you always been alone?\" she asked, though Ellie's actions to this point told her enough to be certain that she likely had.\n\n\"Pretty much,\" Ellie nodded, \"I never managed to make many friends growing up and there were always the things that human people do which terrified me. Like if a friend invited me to sleep over at her house. \n\nI'd have to say no and once, I could even see it as our friendship changed right there on the spot.\n\nBut what was I going to do? If they saw me getting into my PJs, I'd have looked like their brothers back then and one of the girls who had been a friend had already tried to get a little touchy-feely the way that kids can get while they're figuring things out before puberty. And what if I changed while I was sleeping? I had enough trouble as it was. My mom knew it and she always said no so I had an out. \n\nShe was around for most of my childhood and then she caught the fever and died. My dad was the demon, like I told you, and he was a professional hunter. That was how he made the money that we needed to stay alive. He taught me, but he never taught me how to shoot more than once. Said bullets cost too much money to really show me more than that. How was it for you?\"\n\n\"I never really had much in the way of friends,\" Katje said, \"We moved too much for a long time. I never had much of a chance to make any and there was always the other side of me underneath. You must have had it even harder -- well, you did, I can see that, between trying not to let anybody find out about two things instead of one.\"\n\nEllie looked at Katje for a moment and then she said, \"Hey, I think I've just thought of this, but, ... well, can I ask -\"\n\n\"What am I?\" Katje asked and Ellie nodded. \n\n\"What are Talon and I? Ellie, we don't even know. \n\nMamma told Cor once I think, but as to a name for what we are, ...\" she shrugged, \"Make up what suits you. All we know is that we seem to be something which can hunt and kill demons to eat them, not that we usually do much of that. We'd never do that to you, just saying. ",
        "I guess it just shows how screwed up things can get if you take something out of its natural place and stick it somewhere else. We're like you though, half-human, so I hope that helps.\"\n\n\"I wasn't really worried, \"Ellie smiled, \"Not like I was the first time that I saw it. I could have crapped myself then. Even when Talon came back to see if I was alright, I was afraid. I don't think I'd be now, though.\" \n\nShe looked at Katje for a second, \"I think you have more shapes than me. I only have two.\"\n\n\"We have like three and a half,\" Katje chuckled, \"though you might see it as four. We can look human like this -- no wings or tail. We can look kind of, sort of like that, but with those things, so we think that's our natural way to be, and we can look like something else, but that is really like two things that aren't the same, but feel like they are to us. It's a really small shift from one to the other, and we don't have horns in any of them. \n\nActually, I kind of wish we did. I like the way that horns look on some demons. I love your horns whenever I see them.\"\n\nEllie was a little surprised, \"You do? Really?\"\n\nKatje nodded, \"Change for me? Let me see them, please?\"\n\nEllie didn't think it was anything other than a little odd that she'd want to see that, but she switched her shapes in the blink of an eye -- and then cursed for the way that she was sitting on her tail, so she fixed it. \n\n\"How's this?\"\n\nKatje grinned as she reached out slowly to touch them lightly, \"Yup, I really love them on you. I guess they don't serve much of a purpose to demons here, but to me, they're sexy as anything.\" \n\nShe chuckled, \"Probably the perfect fashion accessory, other than you can't change them if you don't like what nature gave you or if you want to change your clothes. Something like a pullover must give you fits,\" she chuckled.\n\nEllie thought it was funny and she nodded, \"I never gave them any thought before, but after hearing you, I feel a little proud.\"\n\n\"You should,\" Katje nodded, \"between them and your teeth, you're one sex-beast like that. Well, in my opinion. Makes sense why you get all the howlers chasing your ass now.\"\n\nEllie was surprised, \"You like me like this?\"\n\nKatje nodded, \"I like you either way. Like this, you look wilder. Better change back before I get too many dirty thoughts.\"\n\nEllie tilted her head at that. She couldn't understand it. \"But if, ... if you're something that hunts demons -- or , ... you can, ... why would the way that I look affect you? I think that I'd probably look like more of a meal or something. No?\"\n\nKatje shook her head, \"The point is -- at least I think the point is; that we're here, and we're the same inside in a way because we have some of the same blood swirling around in us. I see you and, ... \"\n\n\"Ok,\" Katje groaned a little, \"I can't really sit here and tell you that it doesn't matter and everything's gonna be alright -- all while I've got things about me that I haven't shared. So I'll fess up now, Ellie.\n\nI love guys, mostly um, mine. I need Talon just to breathe and be able to think, well, if we're not fucking each other stupid ... er. \n\nBut I also like girls too. I'm really afraid to make you uncomfortable, but I am being honest. I'm not gonna make a move on you or anything, but if I don't tell you out of a desire to be honest with the friend I want to have in you, then to hide it would just make me feel like I'm being dishonest. Do you get all that?\"\n\nEllie thought about it and nodded.\n\n\"You ok with all that?\" Katje asked, looking a little fearful and on her, Ellie didn't like it at all. She nodded.\n\n\"Good,\" Katje sighed in a little relief, \"My point is -- before I forget it; is that I wasn't kidding you.\" \n\nShe pointed, \"He likes you and he thinks you're beautiful and he really missed you. I like you and I think you're REALLY beautiful and I'm so glad that you're back. And that was before I knew about that.\" She pointed a little, \"Now, well, the way that I feel hasn't changed at all.\"\n\nShe was feeling a little uncomfortable herself. Katje was a person who didn't like feeling that way the same as anyone, and since Talon had come into her life, she'd been far more inclined to challenge her feelings instead of allow them to make her back away from things. But this?\n\nShe decided to change the subject, \"So do you want to see all of my shapes? You never asked me and I really thought that you would.\"\n\nEllie nodded slowly, \"I'd love that, Katje.\"\n\nShe'd been curious about it, but didn't have the nerve to ask. Having Katje change her shapes would give her a little time to think about what she'd just been told. Part of Ellie was terrified.\n\nThe rest wanted to jump on the dark-haired girl in front of her. \n\nShe had no clue what to do if she did that; she just knew that it was what she had the thought to do right then.\n\nRight after that, though, she was amazed as Katje shifted and looked at her hopefully, as though she really hoped that Ellie would like her in these shapes.\n\n\"That one,\" Ellie grinned, \"No no. Go back one. I like the way that you are like this too, but it takes a lot of getting used to because every time I've seen either of you like this, there's been blood flying all over. That other one, ...\"\n\nKatje changed back to the shape which was purely for stealth, sneaking through some form of undergrowth which none of them had ever seen and never would. This suited that and a short burst of speed, followed by a quick kill and a meal. Ellie knew nothing of this, but she smiled then.\n\n\"Oh yeah,\" she sighed, \"I love the way that you can look in any way, but I think this one is my favorite. Love those stripes too. Could you please stay like this for me? I'll stay the way that I am if you do.\"\n\nKatje beamed at Ellie. She knew that no matter what, they'd just become real friends at that instant. The uncertainty was gone. She was still struggling with her feelings in terms of sex, and she still didn't want to screw this up, but she was happy now that she could see that she had a friend in Ellie. She even said it.\n\n\"I think we've just become serious friends, Ellie -- at least I'm hoping.\"\n\nEllie looked at her for a second and then she grinned, \"Yeah. That's how I feel too.\"\n\n---------------------------------\n\nThey talked for a little while after that, but they decided that they needed to get at least some sleep. But Katje was adamant that Ellie not sleep in the chair.\n\n\"You're sleeping here with me. We don't have to touch and we can sweat side by side. I don't want to sleep any other way, and with you in that chair over there, ... well that's right off the list. I hope I've convinced you that I'm not gonna hurt you and I'd rather forget that I even could, if it's all the same to you. Ok?\"\n\nEllie was almost game, but, ... \n\n\"But what about what you said? You said you think I'm uh, ... \"\n\n\"Beautiful,\" Katje nodded, \"So? Does that mean that we can't sleep in the same bed? I'm not gonna spring a stiffy or anything.\" \n\nShe chuckled, hoping that Ellie would agree. She didn't want to have any kind of play between them. She really did want them to get some sleep and she didn't like the chair as an option for either of them.\n\nEllie hesitated for a second and then she nodded, setting her empty mug down and then coming to the bed while Katje tried to keep her heart rate down as she watched someone so lovely lie down near the edge of the bed.\n\nThe thought crossed her mind about a saying that she'd heard and never understood.\n\nThe lamb lying down with the lion.\n\nShe pushed it away, telling herself that the important thing here right now was to cement their friendship. She moved to lie down beside Ellie.\n\n\"I think we'd still have a safe space between us if we got just a little closer,\" Katje said softly, but meaning it, \"Less chance of either one of us falling out like that.\"\n\nEllie kept looking at Katje and looked as though she had nothing to say, but then she did move a little closer after she'd nodded, \"Try to remember something, Katje,\" she whispered.\n\n\"This is all really strange and new and wonderful to me, but, ... well, you made a joke about you not getting a stiffy. You can't 'cause you're a girl. \n\nBut I might. That's what I'm afraid of.\"\n\nKatje smiled and moved a little closer. She put her arm over Ellie and sighed, \"Talon has those all the time. I'm used to them, Ellie. I won't mind, so don't let it bother you. Tell you what, ...\"\n\nShe wore such a soft smile on her lovely face that Ellie would have likely agreed to anything right then and she knew it. \n\nThat was what she was afraid of -- at least a little. She was confused and even so, she was almost aroused; not that she knew that to do about it in much of any way, but still ... \n\n\"Put your arm over my shoulders,\" Katje whispered. \n\nEllie tried not to be terrified. She knew that this friend stuff -- especially under these circumstances -- was going to need some give and take, and in her case specifically, it was going to require a little bit of daring. But she was happy to still be breathing after the way that her day had gone and she was very happy overall. She raised her arm after Katje had removed hers, and she set it very carefully over the girl's shoulders. It didn't feel quite right, and so a second later, she moved even closer and then it felt good.\n\n\"Like this?\" she asked Katje, who nodded and moved very slightly to kiss Ellie goodnight.\n\n\"I've found lately,\" she whispered to Ellie, \"that the best way -- if I'm feeling uncertain about something -- is to face it and see. I only got that way because of Talon. \n\nJust wait and you'll see. He'll give you confidence that you need even while he's being a little goofy. It just comes from him like that. \n\nYou're worried about getting a little hard and not being able to help it. I don't have one, but I've learned how it is. So I'm going to just get this out of the way, and then we can sleep without your needing to think about it, since I know that you will.\"\n\nShe moved her hand and very gently took Ellie's erection and what she could hold of her scrotum in her hand, the shaft of it along the inside of her wrist. She didn't squeeze and she didn't rub or stroke. She just moved it so that it was against Ellie's abdomen and she held it there cupped as much as she could.\n\nShe kissed Ellie very softly once more and then she smiled, \"If it gets worse and it need a little attention, Ellie, just let me know. Good night.\"\n\n\"Good night, Katje,\" Ellie whispered, \"and thanks for everything. If there's anything that I can ever -- \"\n\nKatje sighed then, happy as a well-fed and loved cat and Ellie didn't even mind it as her face came close enough to her own to nuzzle against her cheek before they were almost touching noses when she eased her head back down.\n\n\"We'll have to see about this new wrinkle,\" Katje whispered, \"since it wasn't something that we thought of as more than a nice little thought when we told each other that we missed you and wanted to see how you were doing. \n\nBut if you want to do something for me sometime, and you want to tell me yes for what we haven't even talked about, then shave this for me after that - after you decide,\" she smiled and Ellie felt the smile.\n\nShe also felt Katje's fingers as they squeezed her so softly only once.\n\n\"Then I'll know. But no matter what, I'm happy right now. It doesn't feel like it's just Talon and me against the world now.\"\n\n--------------------------------\n\nEllie was now officially dog-tired, she thought to herself. She still had her erection, as small as it was to her mind. Katje had fallen asleep again after saying things to Ellie which almost guaranteed that she wouldn't sleep after hearing them.\n\nKatje probably couldn't have known the effect of her words on someone like Ellie, who'd always felt like more of a different and unwanted species for all of her life. Now she knew that she was and yet she wasn't at the same time. Ellie had always been that - some of one thing, some of another, half human, half-demon, ...\n\n100% fucked-up and unwanted - other than to stare at for a moment and then to ridicule. \n\nBut the black-haired girl sleeping next to her hadn't seemed to care and from her words, Talon wouldn't either. She'd been accepted. If that were true, it boggled her mind. There hadn't even been any conditions set for her admission. \n\nThey were just trying to tell her that if she wanted it from them, ...\n\nShe was already home.\n\nEllie had to blink furiously for a few moments. At least it took her mind off her little erection. It might not be like the big things that she'd seen now and then, but that didn't absolve her of the incessant urging that it sent to her, the same as likely any other in the world, she guessed.\n\nJust then, Katje made it worse by moving her hand. the touch was gone and it was a change.\n\nWell any change under the right circum -\n\nEllie wanted to groan. She might not have more than a breakfast sausage, she thought, but at the moment and for the next little while at least, it was going to pretend that it was a breakfast sausage-sized piece of steel.\n\nKatje opened her eyes a little and realized that her hand had moved away. She looked over and saw Ellie looking back.\n\n\"Not sleeping?\"\n\nEllie shook her head a little and Katje reached over again just because.\n\n\"You'll never get to sleep with it like this,\" she whispered, \"You can have ten stiffies while you're sleeping and not know, but just one when you need to drop off and it'll never happen. \n\nOk, roll onto your back, Ellie. I'll help.\"\n\nEllie's eyes opened and Katje smiled and kissed Ellie's nose, \"I don't know if you get the feelings of needing it the same way that I do, or if what you feel is like what Talon might feel.\n\nSo I have to think that it's maybe BOTH - so you just lie on your back, Ellie. I think you need to learn what it's like to have someone do something good for you just because they want to.\"\n\nEllie was scared to death, but that thing stood up, ready to do its best to be counted, as it were.\n\nShe didn't even have time to think and grow more unsettled - as if that were possible. \n\nKatje just moved her gently and then she took the end into her mouth for a moment while she worked back on the foreskin to expose the glans and then she took it in again with a sound which Ellie was startled to hear as a pleased little sigh.\n\nThe sensations - once Ellie could settle down - caused her to want to reach for Katje and her hands hovered in the air out of uncertainty for a few moments. But Katje had been watching there in the dark and she lifted one hand at a time and took Ellie's, placing them where she wanted them on her head.\n\nIt didn't take long at all; Ellie never having had anything like that in her life. She came and her little balls gave their best seminal heave-ho and to Katje's surprise, there was more for her than either one of them would have guessed.\n\nShe worked it all from Ellie very gently, not wanting it all to be too much for her and then she crawled up and they shared a long and soft kiss. \n\nEllie held Katje and looked up at the ceiling. Wasn't something like this supposed to be a bigger deal? Nobody had even died - especially her. There had been no vengeful hate-filled stroke from Heaven in anger over the mal-formed thing getting to feel a little pleasure. \n\nEllie realized that she was being a little melodramatic, so she just tossed that bullshit right there. What she was left with was a very strong sense of thankfulness and affection for someone who wanted them to be friends so much that even Ellie could sense it.\n\nWell alright then.\n\n\"Thanks - \"\n\nKatje kissed Ellie's chest right in the middle and then she looked up. \"It's ok. You needed it and I wanted it. I got a lot, too. Really nice.\"\n\n\"I've never felt something like, ... I never knew it could feel like that for my little um, sausage.\"\n\nKatje snorted a little through her nose and Ellie felt her smile against her chest before she raised her head to look into Ellie's eyes. \n\n\"Oh shut up, Ellie. At least you have one. The number of times when I've actually WANTED one for Talon when even I could see that he wanted it and didn't even know it himself ... \n\nBesides, this is not a breakfast sausage. I told you about honest opinions and that's what you get from us. What you have here is no monster, but that doesn't mean a thing. Talon's is a little bigger, and he's no monster, either.\n\nWhat you have here - and I'm only joking a little bit - is a wiener with only about a small bite off the end - and I like it, Ellie, so no more sausage crap, ok?.\"\n\nShe laid her head down and began to suckle one of Ellie's nipples gently as she reached to hold Ellie's genitals again.\n\nShe stopped suckling after a moment and said, \"I hope you can have sweet dreams now, baby. You deserve to have them now. Good night.\"\n\nEllie said goodnight and she lay there on her back for a little while looking up, but not for long. She laid her arms over Katje and they were both asleep in minutes.\n\n----------------------\n\nIt was mid-morning when Talon woke up, still feeling like shit on a stick, but better somehow. The edge of something in his peripheral vision drew his attention and he tried to look at it.\n\nHe had a little trouble focusing on it, since it was fairly close to his face and so he tried to lift himself up on that side. He was startled to see it move then. Worse, it didn't move away, the way that it might have if he were under it if it were a blanket or a sheet.\n\nIt confused him, even after he'd figured out that it wasn't something bad, necessarily. He reached for what he could of it and almost jumped when he could feel his own touch there when he did. His being startled caused more movement and then he just felt that and exerted more. \n\nHe stared as a wing came slowly and uncertainly into view. \n\nWell it sure couldn't have been anything else.\n\nHe sat up cautiously and as he did, he moved that wing a little experimentally. That was when the smell hit him and while he recoiled from that, it jogged his memory a little of the events the previous day and what he could remember of the evening. He remembered Katje saying to him that his wings were coming in.\n\nHe looked over toward the bed and he saw, ... \n\nWell, he wasn't sure, but he did recognize Katje there and a moment later, he saw Ellie in the bed as well, but the odor of what he carried on his back reminded him that he wanted to wash.\n\nOk, just how the fuck does one go about something like that, uh, specifically?\n\nHe had no idea, but he reasoned that he'd need a little help, so he stood up. His balance was different, he decided, and it came to him that to minimize the effect, he'd have to, ...\n\nIt was better once he'd figured out how to pull the wings against his back, though the smell still wanted to make him gag. He began to try to think of any place here where there was enough water to jump into. He came up uh, dry for the moment at least.\n\nHe suddenly remembered a pond on the other side of the place, but that was a good walk away. He did think of the wings on his back, but he decided that he needed a little guidance first, so he put that off. More importantly, he knew that there was no means of opening the blast door from the outside, once it was all the way closed and he wouldn't just walk off and leave it open, not while the others were there asleep and defenseless.\n\nTalon wanted to just look up and curse loudly, but that wasn't an option. He had a memory of the two females struggling with him sometime during the night, so he knew that they likely hadn't had as much sleep as he'd had. What to do?\n\nHe had that decided in three seconds and he smirked to himself as he walked over to there that one backpack hung from a peg on the wall. His journey took him past the bed and he looked down at two of the loveliest people that he'd ever seen. But that was just the start of another brainbuster to him.",
        "Katje lay on her front and she wore that look that he loved to see on her face when she slept. But she wasn't lying on her front on the bed, at least not completely.\n\nShe was lying on Ellie with her face on Ellie's chest. Ellie slept on her back and snored very softly. Katje was sandy toned, stripes and all, and Ellie was a demon girl, and still a lovely one, too. The thing of it was, that Katje's hand held something and as he watched, she moved her hand, releasing what she'd been holding and Talon now stood blinking at Ellie the demon girl and her um, ... well, her gear.\n\nTalon blinked again and looked one more time, before he made the rest of his little journey and reached into the hanging pack to draw out the pouch.\n\nHe smiled and shook his head a little. Between waking up with stinking wings and the sight of the two in the bed well, ...\n\nIf this wasn't a time to have a smoke and think, ...\n\nHe was outside with his carbine in a minute, leaving the door ajar so that he could get back inside if he had to, and he'd set a rock there that they kept for the purpose so that the door wouldn't close and lock him outside. \n\nBecause it left them vulnerable, he elected not to go very far from it and after a good look around, he stepped to a corner and looked around that. Certain now, he had his pee and then went back to sit down and roll a smoke -- almost dying to and not from the nicotine either.\n\nHaving a means of ignition had originally been a problem, matches being expensive and all, but after a time, he'd found these curious metal boxes and opening the first one told him all that he needed to know. \n\nAfter that, he'd looked for them and found more than a few in various states. Swapping parts, he assembled a few which worked and after that, it was a hunt for some sort of readily-ignitable fuel, but at length, he'd found a tall tin of benzene, still full. \n\nThe first time that he'd tried to use it after filling one of the 'zippo' things, by the name that he read on the bottom of every one, he'd almost burned his nose off, as well as his hand from overfilling it. But it worked and had become a favorite thing of his, just for the pitted picture of the woman on the side.\n\nHe sat in the sunshine and smoked.\n\nAnd thought.\n\nAnd then he tried doing both at the same time.\n\nHe put a few things together then and he smiled. Ellie's painful shyness made a lot more sense to him now. It changed nothing for Talon. He just wondered a little if anything had gone on between them the night before, not that it bothered him particularly.\n\nA few minutes later, he went back inside and with a little quiet fiddling, he found life in the stove and added a little kindling, enough to get some heat to cook on later, but for now, he got the kettle filled and after that, ...\n\nTalon sat out in the sunshine, feeling the heat of it on his wings and appreciating the way that a little sunshine could always kill a bad odor, given time. He smelled just a little better and he had a coffee and a smoke, and then he was just fine.\n\nKatje came to the door a little later and ran out to hug him and he felt even better. The thing that made him feel a little like a king -- as though he didn't already feel that way because of Katje's love for him was the shy and slow way that Ellie stepped out into the sunshine.\n\nShe was still sandy blonde, gorgeous -- as lovely as his female -- and she was just as naked as he was as she walked over so bashfully, yet determined to let him see what she looked like. Katje's eyes were closed as she hugged him and before he knew it, Ellie kissed him softly and hugged him too.\n\nTalon wondered if he was in Heaven now.\n\n----------------------------\n\nThe talking over the meal settled things and though he was still just a little confused; on non-existent paper at least, Talon now had two females -- kind of. \n\nThey'd all been very up front about things -- even Ellie, though Katje and Talon did have to wait for her to say what she wanted and they didn't mind at all. Talon still had Katje and he had Ellie. He also had, ... \n\nIt had taken Katje to explain it -- or more correctly, to define it, when she'd pointed out that she wanted them to live together and the point of it all was to survive and to help and protect Ellie if she needed it. She also said, though everyone wondered how it would go, that Ellie had two, uh, ... well one female in Katje, they thought, and someone else to play with who also needed to learn a lot, so there was that relationship possible. \n\nNone of them knew just how it would work out, but that didn't matter. There were now three of them. With a carbine of her own in Ellie's hands and two people who grew to love her, it improved the odds for all of them. \n\nA large surprise was that Ellie, the shy and uncertain natural-born and complete hermaphrodite, had learned how to hunt from her father, and she was far better at it than Talon, who became a willing pupil to her. \n\nThe next few nights were bliss as they tried to iron things out between them. The commonality of being part-human helped a lot. \n\nThey always began in the same way. They'd decided that their wilder sides aside, they each wanted to be equal in the eyes of the others, so to begin, they were all on their knees -- a triumvirate who faced each other, sharing kisses and caresses as three tails whipped back and forth between them.\n\nEllie could have conventional intercourse and she liked the free feeling of offering it to Talon, especially with Katje's blessing. It was even better for them all because of what she was. She loved the feelings, but she couldn't achieve orgasm from it, her clitoris being something which was too far away from the action, as it were. That's when both Talon and Katje did absolutely anything that they could think of to make it good for Ellie. \n\nKatje had two lovers to fuck her now, though she had to be a little careful not to go too wild with Ellie -- and it had to be said that once Ellie saw and understood why Talon and Katje were like that, she was a willing participant and loved to make the same noises at the others in it and sharing a large chunk of meat in their messy and meatjuice-soaked way resulted in some kind of sex in only moments after it was consumed. None of them would have ever thought just how close a demon could come to their kind and what they were. But it lay there waiting anyway. Ellie wasn't made to be an effective demon-killer; she just was what she was. She just needed the help of human weapons and she had no desire to harm demons or anyone. But if she was attacked, well ...\n\n\"Well that was certainly different,\" Ellie grinned as she stretched to kiss Talon, \"Are you ok? I didn't hurt you, did I?\"\n\n\"No,\" Talon smiled a little shyly, \"That was , .... That was as nice as I'd ever imagined that it might be, once you got in. Hurt me again like that anytime.\"\n\nEllie hugged him again, \"It's really nice for me - all of this. I see myself as so lucky. I get to feel what it's like for both of you in many of the things that we do.\" She kissed Talon softly as she slid her hand over his sweat-soaked muscles, \"That was something that I never even dreamed that I'd ever do. And it was so good. I'd fuck you anytime, Talon. I could get to need it from you.\"\n\nKatje giggled a little then, holding out the pillow, \"I always use this afterwards, Talon.\" It brought laughter from all three.\n\nBut Katje wasn't laughing a little later while she gasped and shuddered between two lovers who penetrated her at the same time and loved to do that for her. And when she was fucking on either of them, lost in it and needing to be held up as she writhed, Katje was so happy that she now had another lover who could kneel behind her, kissing her while they loved her breasts for her.\n\nAs far as Ellie and Katje could tell, one of the most important things in this was between the two of them, no matter what, Katje had said. Talon never minded and always allowed time for it when Ellie crawled on top of Katje or vice versa and the thing that she'd hated about herself her whole life allowed her to copulate with the woman who loved her as much as Talon did.\n\nKatje was also adamant that Talon and Ellie have their moments as well. The bond need to be maintained, was her view, though she did love to lie there and watch, no matter how it went.\n\n\"Hey, aren't you and I gonna get pregnant from all of this, Katje?\"\n\nKatje shook her head, \"If we were what Mamma was, it wouldn't be possible. We're not the same things. I could get pregnant by Talon, but Mamma said that we're not the way that her kind used to be at first. \n\nIt's something that a girl can change, if she wants and she has a safe place to have young. I can change it in me and it takes about a month here, Mamma said. Talon can change it in himself too and it only takes a few days and he can make kids. He's been shooting blanks every time until now.\n\nBut we're all part human too. I think that's what allows us all to be in love with each other. You and I can get pregnant and you don't have to do anything. Talon and I have to change and then I can have his young - and yours too, now that I think about it. We all gotta talk about that, but I already know that I'd want kids by both of you, and if it's possible for you, then - \"\n\n\"My father took me to a special doctor one time when I was about sixteen,\" Ellie said, \"I know it cost him a lot of money, but he said that it was something that I ought to be able to know a little about to see before it might happen. He was afraid that if somebody got to me - as he said it, he wanted to have a little peace of mind to know that it likely wouldn't kill me. What he found out was that in the opinion of that doctor, it was possible. \n\nBut then that doctor said that I was something to make a medical case out of or something like that. The next appointment that we went to, there were like seven more doctors there and Dad almost had to kill a couple of them so that we could get out of there. We had to move not long after that.\"\n\nShe sighed, \"I know my father did that for me and I'm grateful to know it. I just wish that it hadn't cost him so much gold. After that, he had to work even harder to feed us and he was killed after that - I guess from working so long and being tired.\" \n\nShe looked at Katje, \"If you want it from me and it's ok with Talon, I'd love to make a kid with you, and if he wants one with me, well, I'd love that just as much.\"\n\nTalon walked in then and came over to the bed, \"Have I missed anything?\"\n\nKatje laughed, \"No, actually. We were just deciding about the way that it's going to be when we want kids.\"\n\n\"Yeah,\" Ellie grinned as she rolled over to look at him, \"And you get off easy. Katje and I have to do the hard part.\"\n\nTalon wasn't stupid, but he didn't get it right away. He thought that it would just be Katje bearing their young. He'd already thought about them wanting to her to have Ellie's children too. That hadn't been a thought to him.\n\n\"He's not thinking about it the right way, Katje smiled, \"Talon, Ellie wants to make a kid with you. She wants to have your little ones, just like I do.\"\n\nHe looked at Ellie and smiled, thanking her for thinking of him that way.\n\nShe chuckled, \"Talon, that's a no-brainer for me. It's just that you get off easy.\" He watched as she stroked herself a little.\n\n\"So you're gonna be busy too. Bring that sweet face here and - \"\n\nBut he'd already gotten it by then and he already had her in his hand, opening his mouth to suck.\n\n---------------------------\n\nThings settled down for them a little after that, but more importantly, it remained. They all knew who was who and what could go where; they just stopped thinking in terms of what male and which female.\n\nAnd out of it all, Ellie gained a place where she belonged; people to love and who loved her as well as self-confidence and more than a little pride in all of them. Talon had been surprised and pleased when Ellie's pubic hair had disappeared. He'd been thinking about it the next day as he'd worked, checking the fluid levels of the idol when he'd seen a motion and was about to reach for his rifle.\n\nBut what he saw made him forget about it and smile a little slowly. They were walking toward him, still a way off, the two most beautiful people that he knew, holding hands and smiling as they talked, their hair cut just like his. He liked it, but he really wondered about it. He finished up and began to walk toward them.\n\n\"Come on, Talon,\" Katje said, smiling the way that she knew could make him feel the weight of his own stones, \"Enough work for today. You can tell us all about what that thing is tomorrow.\"\n\nHe smiled back, but then his eye fell on Ellie's face and the smile that she wore for him. She sure wasn't wearing anything else.\n\n\"Gonna rock your world, today, Talon,\" Katje smiled.\n\nHe sighed, \"You always rock my world.\"\n\n\"More today,\" she laughed, \"We have food. We've cut each other's hair, Ellie and I even found some more of that wine. Makes us want to play with our boy, you know?\"\n\n\"I never knew that I'd be starting anything that day when I cut my hair,\" he laughed, \"I just had an idea and wanted to try it.\"\n\n\"Yeah well, we like it and we're a freaking tribe, aren't we?\"\n\nHe walked to them and he was in their arms the second after that.\n\n\"Come on, Talon,\" Ellie said softly as she hugged him. Her voice dropped off to a shy half-whisper in his ear, \"I'd just love you even more if you'd do what I did to you yesterday to me today, honey. Could we?\"\n\nShe was only asking in her sometimes shy way, but to the other two, it had a powerful effect and Katje answered her, \"Talon needs that, Ellie, and I need to see it.\"\n\n--------------------------------\n\n\"So you're telling us that this thing can fly? With hard wings and without flapping?\" \n\nEllie was incredulous. So was Katje, but he nodded, \"I just wish that I knew where I could get a few tons of diesel fuel. The legend says that whoever had ones like this built; they had ships that they could fly from and land on again on the ocean far from here. They were worried about using the fuel that they had been using because it was too flammable. So they had these made to run on other fuel and diesel is one that's still around.\n\nIt can carry three people in it -- the pilot who controls it, another person who works some stuff to search for other ships that they can't see because they're too far away to see, and the third person is there to drop stuff on them when they find them.\"\n\n\"Why?\" Katje asked.\n\n\"Because back then, they were fighting those other people -- or they were ready to and stayed that way.\n\nThis has two engines to turn those black things really fast. The two engines are really in the same case -- side by side. Once it's flying, I can turn one engine off and it'll fly for hours before I have to come back. But I only have enough fuel now to start it. It's really noisy.\"\n\nThe girls asked questions and Talon answered them to the best of his knowledge. They asked him then if they could see it run.\n\n----------------------------\n\nCopper wanted to know why they'd had to stop and Simmit pointed ahead. It did no good, since Copper couldn't see through several inches of armor plate. She ran back and swiveled her optics around to point at the obstruction and she stared at what she saw. She inhaled and what was about to come out was a long line of imaginative profanity when she noticed Simmit's voice in her helmet reminding her.\n\nSimmit had been trying for a time to get Copper to clean up her vocabulary around the twins, and though she strained awfully hard in her efforts, to overcome a lifetime of colorful cursing in the finest Dwarvish traditions was not something easily done and Copper filled in the blanks with words she'd seen on store goods from long ago.\n\n\"What in the name of Aunt Betty Jemima is that?\" she whispered as her jaw fell open. She'd have known exactly what it was -- other than the generality -- if she wasn't looking at it from this close up in optics meant to pick things out of landscapes -- far away landscapes.\n\nShe slammed in a feed tray for the chain gun and tried to remember if she'd read about any weak spots that she could hammer at repeatedly and as she did, she was muttering to herself. \n\nAs far as she could recall, the turret on this type was thick armored steel, so that was pretty much all week to get through, since this was the thickest part of all. The short range wouldn't allow for the discarding sabots to fall free. She just couldn't recall about the front plating on the body.\n\nShe was carrying two TOW missiles, though she hadn't taken the time to run diagnostics on them. She accessed the screens for that and saw that one missile wasn't even responding to queries. The other was in an outboard launcher tube. She'd have to turn the turret to even get a piece of that thing outside so it was too close for the missile to even arm itself.\n\nShe took another look and groaned.\n\nThe plating was angled to deflect shells. \n\nOf course it was. \n\nFrom this range in her optics, there was way too much slant to it. From this close, she'd never drill one in through there. \n\nShe looked up a little and saw that mother of a gun; six times the caliber of her chain gun as it moved to point right at her.\n\nCopper just barely managed to keep her muttering a little clean now.\n\n\"Lord twenty-freaking-mule-team Special Cornflakes almighty; there's a tank out there and a freaking whackload of gunners sittin' on their horses laughing at us. I gotta get my head outta my arse right quick now.\"\n\nLittle Neath was the more vocal one and he hung in his harness next to his twin brother and toyed with what he'd heard.\n\n\"Whack-load,\" he said, parroting Copper.\n\n\"Whack-LOAD! WHACK WHACK-LOoaad!\"\n\nCopper raised her head and looked over, \"You're not helping, sweetie.\"\n\nHe looked at her and decided to shift his little gears a bit. He didn't know just what it all meant, he just liked Copper's tone of voice when she said words that steamed his other mom. He opened his mouth.\n\n\"AAR -\"\n\n\"No!\" Copper glared, \"You say that, and even if we don't get blasted, your mom's gonna paddle both of us.\"\n\nNeath smiled.\n\n-----------------------------\n\n\"Main gun on target,\" Lindsay called out. Then to Sam, he said \"Load up with an anti-tank shot.\" Sam nodded and ducked her head to step over to the rack.\n\n\"Lindsay!\" Randi called over, \"I didn't tell you to lay that gun on anything.\"\n\n\"Should I point it away for now?\" he asked and she said \"No, leave it where it is. Just don't do anything else unless I ask you to.\"\n\n\"What's she doing?\" Randi asked herself as she saw the Bradley there in her targeting optics. She thought something must be wrong for Copper to be stonewalling like this. She'd have expected that Copper would have taken one look at the Sheridan and known what it was and where it had come from -- as well as have at least a guess about who owned it. Copper had done a lot of the work on this herself.\n\n\"Loaded,\" Lindsay called forward, \"Can Sam shoot?\"\n\nRandi snapped her head around, \"NO! I know who's in there! Do NOT shoot! \n\nNot - like in, don't you freakin' dare, Lindsay.\" \n\n\"I think she means not to, uh, ... Ok, I'm gonna unload now,\" Sam said.\n\n\"Thanks, Sam,\" Randi said.\n\nRandi strode back and moved to climb up, reaching to pat Ayt'han's thigh gently, \"Hey, move a little baby, I gotta go see about something.\"\n\nShe climbed out of the hatch and stood on the top of the turret, glaring at the Bradley with her hands on her hips. But there was no visible response from the other machine. Ayt'han only looked at her, not knowing what was going on.\n\nBut he loved that ass, he thought.\n\n\"What is wrong?\" Rudhi called over from the back of her horse as Randi jumped down and began to stride across the few yards which separated the vehicles.",
        "\"I don't know,\" she answered, \"My friend Copper must be blind. I just hope there's nothing wrong.\"\n\nShe jumped up at a run and climbed the sloping front of the Bradley before she climbed up onto the top of the turret. Simmit called back to Copper, but the half-dwarf was a little lost in thought and missed it.\n\nRachel saw someone from very close up in the targeting screen. And then she was so close that all that could be seen was her jeans and that was only for an instant before they moved sideways out of the picture. \n\n\"There's somebody on top of us,\" she said to Copper.\n\nCopper turned her head, \"What?\"\n\nShe was fuming now, \"What kind of - \" \n\nShe looked at Neath and saw that he was watching her intently, so she revised her thoughts, \" -- Fogging ICE-hole just walks over and climbs up on my GOSH-darned Bradley?\"\n\nShe glared at little Neath as though daring him.\n\nHe looked at her and did his best, but Neath was just a little guy and, ...\n\nIt still came out of him.\n\n\"Icehole,\" he said, \"Fog-ging icehole!\"\n\n\"ICEHOLE!!!\"\n\nSimmit glared at Copper, but the half-dwarf grinned at Neath and winked. She sighed to herself then.\n\nAh, she loved those kids.\n\nThe little demon laughed and laughed.\n\nThe top hatch of the Bradley opened and Randi hollered down into the cavern as she began to climb down inside, \"Copper Kettlebottom, what the hell is the matter with you? It's ME! It's --\"\n\nA large male demon stepped in front of her just as she was working up to full volume, \"COPPE-\n\nOh, ...\" she looked up, \"Sorry, um, excuse me,\" she stepped around him in the cramped crewspace and came up almost against Rachel, who was staring at her, more than a little bewildered.\n\n\"Nice, um, ...\" she looked back at the demon, \"He's uh, yours?\"\n\nRachel nodded, looking past Randi momentarily, \"Rokhanh, she's ok.\"\n\nIt was a little satisfying to hear the quiet grunt behind her.\n\n\"My husband,\" Rachel said, \"Who are you and who's the beast on top of your uh, ... tank-thing?\"\n\n\"My husband Ayt'han and I'm um, Randi, is Copper in here? I mean at all?\"\n\nCopper yelled and ran around to collide with Randi, who hugged her tightly, \"Nice crawler, Randi!\"\n\nThe two friends were the only ones who had a clue what was going on, but eventually, everyone tumbled out of both vehicles and the many introductions were made. Rachel and Randi formed a really quick friendship only because they liked the way that their husbands found a lot of common ground. Rokhanh still had a lot of trouble with English, but he liked Ayt'han right off the bat because he was understood by him fairly well. Their wives just laughed at them. Rudhi and D'Arcy were amazed at it all.\n\nThe questions and answers looked to be about to take the rest of the day, but everything stopped as a peculiar sound began from a ways off and rose in pitch and volume. While everyone looked around, Ayt'han was the only one who knew what it was, though he hadn't heard one on a long while now. A second series of sounds began underneath the howl of the first. Aythan ran to the top of the hill which had almost caused the collision between the two armored vehicles.\n\n---------------------------\n\nKatje and Ellie stood looking at the blur of the contra-rotating propellers at the front of the ancient machine with their hands over their ears. Talon looked at the fuel state gauges and knew he was listening to a sound which he'd always loved, but that now he was listening to it for the last time. He pulled back the throttles to ground idle and reached to flip the igniter switches off.\n\nThe sound died off and he kept a wary eye on his two girls, hoping that they remembered his very explicit warnings about staying the hell away from the exhausts and most especially, those black and difficult to see blades.\n\nHe slid back the canopy and prepared to climb down, sad now that he'd never get to give them a ride in something that had been the central focus of his life for most of it. He looked down at them, but they were looking to their right at something, so his gaze went there as well.\n\nThere were two large machines there at the far end of the runway approaching at about a walking pace.\n\nAlong with twelve riders on horseback.\n\n-----------------------------\n\nTalon climbed down and the three of them began to walk with their weapons held loosely in their hands. Within twenty feet, Ellie looked like a demon who walked in the company of two things which were very seldom seen there and could hunt demons if the mood was on them.\n\nAyt'han had told both Copper, Simmit and Randi not to drive on the long ribbon. \"Stay off to the sides of it. The horses can walk there, but these things will ruin what's left of the runway with their tracks. There's only three people. I don't think they're a threat. Let's just go see what this is all about.\"\n\n-----------------------------------\n\nThey met in the middle, or near to it. Nobody pointed a weapon at anyone, they just talked.\n\n\"You're shitting me,\" Copper exclaimed, \"That's all you need?\"\n\nShe laughed and pointed to the trailers that each vehicle was hauling, \"What dya think is in those? We can get you a swimming hole full.\"\n\n-----------------------------------\n\nTalon flew all day. He took everyone up, two riders at a time- more if he could squeeze them in and gave them sightseeing tours, of all things. When it was Rachel's turn, she told him where to fly after she got used to the headphones.\n\nNot four minutes from where the Gannet was housed in its hangar, Talon stared at a mountain where Rachel and Rokhanh often stayed and she told him of the others there and said that she'd arrange a meeting. When they landed and before he took off with the next sightseers, Rachel spread her wings with Rokhanh and they flew off toward the mountain.\n\nCopper and Simmit took their kids up with them, though the space was cramped in the rearmost compartment, but after finding that the oxygen cylinders were still full with functional valves, Talon took Ellie and Katje up to where they'd never been. They admitted that things looked a good deal different from forty thousand feet.\n\nWhen he landed the last time that day, Talon pulled the old aircraft back inside of its home with the old tractor and when he stepped outside; he was met by Copper and Rachel.\n\n\"Talon,\" Rachel said as he walked over with Katje and Ellie, \"There's somebody that you all have to meet. \n\nA lot of somebodies, actually. \n\nThat mountain that I showed you? A lot of us live there and there are more coming. Could you three find your way to coming with us tonight? We'll spring for dinner and you can stay the night. There are things we need to talk about. Will you come?\"\n\nThey talked it over for a minute, but all three nodded and they were guided to the Bradley, which rumbled off along with the roadmen and the Sheridan into the darkening gloom. "
    ],
    "authorname": "TaLtos6",
    "tags": [
        "demon",
        "two-spirit",
        "love",
        "belonging",
        "aircraft",
        "tank",
        "androgyny",
        "anal",
        "hunting",
        "chance-meeting"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-big-shiny-blue-marble-ch-59"
}