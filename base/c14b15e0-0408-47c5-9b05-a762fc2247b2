{
    "title": "Showing Myself Ch. 06",
    "pages": [
        "Here's another installment of how my life progressed during the present after meeting Jim in Chicago. Those events turned me loose again, and although I obviously changed the names of the others, everything else is true to life. I even used my own real name, since I was na\u00efve when I started this whole thing. Anyway, this is how my week went when I got back:\n\nWhen I got back home, all I could think of was Jim and our tryst in Chicago. It brought back so many memories, and it was like something was switched back on inside of me. It's why I looked up my stories I wrote here earlier and started furiously typing again. And, I'm not ashamed to admit that I have been masturbating almost constantly- when I wake up, when I go to bed, when I watch TV, always. Even when I cook, I'm walking around in panties and a silky t-shirt with no bra, just in case I have the urge to lean against the counter and take care of myself. \n\nSeveral people wrote to me and asked what I look like. Ok, I guess there is no harm in that and I'll be completely truthful. I'm fairly short, at about 5-2, and weigh about 105. I have dirty blonde, shoulder length hair. I am a 32C, but my breasts look bigger because I have such a slender figure and narrow shoulders. I'm told I'm pretty and very cute, but I can't judge that myself. I always get compliments on my butt, which I guess is a good thing. I look younger that I am, because I've always worked out and take care of myself and I have good genes, I guess. Hope you aren't disappointed and was expecting something else!\n\nAnyway, Jim and I constantly texted and called each other day and night since we met. I wanted to send him a few romantic pics, but nothing came out right. Selfies looked dumb, and when I set the timer on the phone, it looked rushed. \n\nSo, one evening I was outside trying to cook something on the grill and I couldn't get it lit, and saw my neighbor's son in the backyard. He is 23, is home from college, and I have known him for a few years. He has helped me on occasion with my car and shoveling snow and things like that, and is a nice guy. So, I asked him to look at my grill, and in minutes he had it working again. We started talking, and I brought up my recent trip to Chicago. His name is Mike.\n\n\"Mike, I met this amazing guy in Chicago, and we really hit it off! We talk all the time, and might meet again next week!\"\n\n\"That's great Jennifer, you deserve that. You're so cool.\"\n\n\"Aww, thank you, but I'm over 30 years older than you so I don't see how you think I'm cool, but I'll take it. But I was wondering if you could do me one more favor. Could you take some pics of me so I can send him one?\"\n\n\"Sure, you want me to use your phone?\"\n\n\"Yes, take a pic of me out here sitting in lounge chair. I'll hold a glass of wine and try to look sexy. Can you do that?\"\n\nI hadn't planned this in advance, but I do think I really looked pretty sexy sitting there. I was wearing a pink t-shirt and tight white shorts that contrasted so well with my tanned legs, and Mike took a few pics. I sent one to Jim immediately, and kissed Mike on the cheek and told him I'd call if I needed more. But when I went back in to get the veggies I was going to grill, I realized how exciting it was to have a man take a picture of me like that! I looked through the patio door and didn't see anyone within view, and leaned against the wall while pushing my shorts down to my knees. I slipped my hands into my panties and I was already dripping wet. I started playing, all the while wishing that Mike would come back and say he forgot something and catch me like this. Of course, I wouldn't be able to stop even if he did come back, and I'd keep on pleasuring myself while he watched. But I can do whatever I want in my own house anyway, right?\n\nThat night I was lying in bed texting Jim, and of course I was slowly masturbating as we teased each other. Then, I started thinking how hot it would be if Mike was there watching me and taking pics of me so I could send one to Jim. I spun around so I was facing the dresser mirror and looked at myself. As I had started doing many years ago after advice from Monika, my lips were shaved smooth and were accentuated by the soft brown hair above. My breasts still looked great, and they gently jiggled back and forth with my gyrations between my legs. Looking at myself in the mirror, I saw what countless men had seen over the years and understood what turned them on so much. I started talking out loud, imagining that Mike was outside my open window and could hear me. \n\n\"Mike, could you take a few pics like this? Jim would really like one. Imagine that just a few days ago, he was giving me soft kisses up the inside of these thighs, just before he kissed my pussy. I can't wait to see him again! Can you see how wet I am? Watch my middle finger as it slides through me and then glides over my clitoris. I wish you could know how that feels.\"\n\nI rubbed myself harder and texted Jim quickly that I was about to cum, and wished he could see me. Within seconds, my body was heaving on the bed, and I quickly brought my fingers to my mouth. I told Jim that I was tasting myself and I wish I was tasting his fingers instead! Also, at that moment, I knew I had to start feeding my exhibitionist tendencies again.\n\nThe next day I saw Mike again as he was about to get in his car and drive off. I called over and said, \"Mike, your pictures were perfect! Jim said I looked so sexy sitting there! Can you come over later and take some more?\"\n\n\"Sure, what time? Wait, here's my number, you just let me know. I should be back by six.\"\n\nI know I'm going to hell for this, but I was already planning to be a little naughty with Mike. I can't help it! When he was taking my pictures the previous day, I felt something stirring inside of me. I wanted him to look at me and desire me, like the men did many years ago. \n\nFinally he texted and said he could come over anytime after seven. So, I got ready for him, and I really didn't think I would go through with it since he did live next door and I didn't want to create an awkward situation. Anyway, I decided to wear the same lime green panties that I wore that time when Jim came on them the first time he came to my room, and also a pretty white bra. I was wearing the same tight white shorts as yesterday, and this time I had on a white button up blouse. \n\nSoon the door bell rang, and Mike walked in. He really is a sweet guy, and I had to tread lightly. I started off by telling him what I wanted.\n\n\"Ok Mike, I want to send Jim a few risqu\u00e9 pics this time. Do you mind? You won't be embarrassed? I just want to feel sexy. I'm older now, you know. When people are your age, they are always sexy. But not me.\" I was really pouring it on, trying to draw sympathy. If he only knew I had already rubbed by pussy against the counter I was leaning against just two hours ago!\n\n\"Of course Jennifer, I'll do anything you want. Nothing wrong with feeing sexy! And trust me, you are a babe, really!\"\n\n\"Yeah, ok, whatever. Here, take my phone and take some pics. Oh, and by the way, this is between us, right? You aren't going to tell all your friends about me are you? That would be so immature, and humiliating for me.\"\n\n\"Honest Jenn, I won't. This is between us, I promise.\"\n\nI leaned against the countertop and gave Mike my innocent look and he took a few pics like this. I poured a couple of glasses of wine and tried to get him to relax. We talked and joked around, and then I said I wanted him to take more pics while I looked more demure. I only had a vague clue what that meant, but he seemed convinced.\n\nHe stood back, and I unbuttoned the top two buttons of my blouse, spreading it out a bit so my bra was a little bit visible. Mike replied, \"Nice!\", and I told him to keep talking pics until I say stop. I leaned back and pushed my shoulders back to make my breasts stick out, and let my hands caress my midsection. I could tell that Mike was doing his best to take pics, and I decided to just let myself go. \n\nI moved my hands down to my shorts, and opened the button and pushed the zipper down. I folded the front open so you could see the color of my panties, and Mike said, \"You sure you want me to keep going?\" I nodded yes, and Mike got on his knees so he could get shots from different angles. \n\nI unbuttoned my blouse completely and opened it slightly. I slid my hands into my shorts, and slowly pushed them down just over the widest part of my hips. I looked down at Mike, and could see that he had an erection, so I guess I didn't look too bad after all! I told him to take a few shots like this, and then I pulled my shorts up and buttoned my blouse.\n\n\"So Mike, think Jim will be impressed? I'm sorry if I made you uncomfortable, but my bra and panties are really no different than a bathing suit, right?\"\n\n\"You didn't make me uncomfortable at all, Jenn. You really are quite beautiful. I was glad to help.\"\n\nI thought to myself, \"Yeah, I bet you were. You probably can't wait to get back to your house so you can take out your cock and take care of business.\"\n\nBut, I didn't say that. Instead, I said, \"Speaking of bathing suits, I could have sworn a couple of years ago when I was outside sunbathing that you were looking over the fence checking me out. Maybe you remember the dark blue bikini?\"\n\n\"No Jenn, I never peeked on you.\"\n\n\"Mike, I know you're lying. I saw you. Tell me, did you like how I looked?\"\n\nMike hesitated, and said, \"Yeah, I looked. You really are hot. Even the girls I date kind of look like you.\"\n\n\"Oh, that is so sweet! You are great for my ego. Come over and sit down and we'll finish our wine, and I'll send one of the pics to Jim and see what he thinks.\"\n\nWe sat down, and I messaged Jim. Within a minute, he responded and said, \"Wow! I even recognize the panties! So hot!\"\n\nI told Mike what he said, and he just said, \"See? I told you, you are a babe.\"\n\nThen Jim texted again, saying, \"By the way, who took the pic?\"\n\nOh no, I hadn't thought about that! I told Mike what he said, and obviously he was feeling the wine. \"Just tell him your hot stud neighbor came over for some wine and couldn't help himself.\"\n\n\"Yeah, right Mike. I'm going to tell him a girlfriend stopped over and took the pics. I won't mention anything about the college kid that got a hard-on looking at me.\"\n\nSo I texted Jim and he laughed and said he assumed that anyway, and that he would be in Chicago again next week just in case I could arrange a trip too. Oh my god, I was definitely going to make that happen!\n\nMike and I chatted some more and finished our wine, and then I told him that now that I had his number to expect me to have him over for another photo session. Oh, and I pointed down to his pants and said, \"Make sure you take care of that when you get home. I don't want you knocking over a table lamp or something.\"\n\nHe was embarrassed and mumbled something, and I laughed inside. Poor guy!\n\nI went to bed, and you know by now what I did. It was my fifth orgasm of the day, and I can't imagine anyone else not doing the same thing. Maybe they do, but won't admit it like I do!\n\nThe next day, I really tried to have some self-control, but at noon when I took a break from work, I texted Mike. \"Can you stop by tonight? I want to send Jim another pic, OK?\"\n\n\"Sure, around 8?\"\n\n\"Sounds like a plan, see you then!\"\n\nI couldn't wait, and even at work I was soaking wet just imagining Mike looking it me. I even went to the store and bought some bright red panties and bra, just to have something new for Jim to look at in my pics.\n\nAt exactly 8, the doorbell rang and I let Mike in. This time I gave him a friendly peck on his lips, and I sensed that he noticed the dynamic changing.\n\n\"Ok Mike, this time I want to take it a little further. If this is too uncomfortable for you, just say so.\"\n\n\"No Jenn, we're cool, I'm glad to help out. I want you to be happy.\"\n\nYeah, the only happiness he's thinking of is right in his pants. If there is anything I know, it's how men think.\n\nAnyway, we started the routine and I handed him a glass of wine. I told him I wanted to send Jim a series of pics that showed what my evenings were like while I was thinking of him.\n\nFirst, I curled up in my easy chair and held Mike's phone, pretending to be anxiously waiting to hear from Jim. Next, I started running my hands over my thighs in obvious frustration.\n\n\"Mike, do I look sexy acting like this? What if you weren't just a friend taking pictures, would you like looking at me anyway?\"\n\n\"Oh yeah, you look amazing Jenn, really!\"\n\n\"Tell me Mike, did you, you know, masturbate after you went home last night? Please tell me you did. I felt so foolish after you left, trying to act sexy in front of someone like you.\"\n\nMike hesitated, and finally said, \"Yeah, I thought of you. You really are beautiful.\"\n\nI smiled and stood up, and pulled by shirt up over my head and sat back down in my red bra and tight jeans. \"What about now? Tell me what you see.\" I was thinking about how the men used to look at me in the theater. I was starting to feel that power! But not in a bad way. I really just wanted Mike to desire me and excite him.\n\n\"Uh, I see a beautiful woman sitting in a chair in front of me.\"\n\n\"God Mike, you must have gotten a D in College Comp 101. Tell me what you really see and think.\"\n\n\"You really are lovely. I see your flat stomach, and I love the way your breasts are pushed out from your bra. Your hair falling over your cheeks down to your shoulders make you even more sexy. Jeez, I can't believe I'm talking like this.\"\n\n\"Relax Mike, you should start talking to all of your many girlfriends like this. Trust me, they will love it.\"\n\n\"I don't have a lot of girlfriends, but I'm seeing a girl, and we'll meet up again when school starts.\"\n\n\"Oh, really? Tell me what she looks like. Don't leave out a thing. I'll level with you Mike, I'm an exhibitionist and am very visual. I want to know everything.\"\n\n\"Well, she's kind of short like you, blonde, shorter hair, kind of a round butt like you, smaller breasts but really perky.\"\n\n\"What color are her eyes?\"\n\n\"Uh, I don't know.\"\n\n\"Mike, you need to know that! I guarantee she knows what color your eyes are. But since you are just being superficial, tell me if she dresses sexy. Has she ever worn a bra like I'm wearing?\"\n\n\"Not really, she usually wears a sports bra.\"\n\nI immediately thought of Monika and how she helped me. I said to Mike, \"We'll talk about this later, but I want to meet her and teach her a few things. Now, tell me if she ever acted like this.\"\n\nI stood and pushed my jeans to the floor and kicked them across the room. All Mike could see was my petite figure in red bra and panties, and after letting him look in stunned silence, I sat back down with my legs crossed.\n\n\"Well?\"\n\n\"No, she's usually lounging around in sweats doing homework or something.\"\n\n\"You know how I looked when I was doing homework and expecting my boyfriend to come over? I would tell you, but I think you know. Now, take some more pictures for Jim.\"\n\nI acted as sexy as I could, rubbing my hands over my body, and never looking into the camera. I pulled one bra cup away from my breast and caressed the nipple before letting it fall back into place.'\n\n\"Keep taking shots. Just tell me to stop if you feel weird.\"\n\nHe took maybe a dozen shots, and I started talking to him again.\n\n\"You said your girlfriend had perky breasts. So they are small and stand out? Describe her body, tell me how she likes to be touched. I assume you're having sex. I want every detail.\"\n\n\"Yeah, they are small with nice nipples, and barely move even when she's jogging. I would say her butt is her best feature, and I love holding it when she is on top of me when having sex.\"\n\n\"Does she shave or is she natural? Describe her pussy. I'm sure you've seen enough porn to know they are all different.\"\n\n\"Wow, you sure are full of questions. She's shaved smooth. I would say that her pussy lips are thick, and she has no problem getting wet. Enough detail for you?\"\n\n\"Not bad Mike. Ok, you know what I would love? I would like to finish removing my clothes so you can look at me and fantasize about me. Or, we can just call it a night. Your choice.\"\n\nMike thought for a moment, and said, \"I don't want you to do something you might regret. Maybe I should leave.\"\n\n\"Oh Mike, you're such a gentleman. I like that. But I promise I will have no regrets. Tell you what, I'll start undressing very seductively, and you can either stay or let yourself out. But at least make a video of me until you leave, OK?\"\n\nI relaxed and started rubbing my breasts, knowing that even though I'm older than his girlfriend, he will like them. I slipped one hand into my panties and barely touched my clitoris, while the other pushed the bra straps down off my shoulders. I brought my fingers to my lips, and savored my wetness.\n\nI stood up and reached around my back and unsnapped my bra, and let it fall to the floor. I cupped my breasts and looked at them, and then sat back down.\n\n\"Is this what you were imagining that my breasts looked like when you peeked at me when I was sunbathing?\"\n\n\"You're amazing Jenn, even better than I imagined.\"\n\n\"You know, I won't mind at all if you want to rub yourself through your jeans. In fact, it would be great for my ego to see you get excited.\"\n\nMike brought his hand down to his crotch, and he gripped his cock though his jeans and then released it.\n\n\"Are you really hard, Mike? You can't tell, but I am so wet right now. I have to do something about it.\"\n\nI lifted my butt off the chair and slipped my panties off, and revealed by nakedness to Mike.\n\n\"As you can see Mike, I like the natural look. You like? Or should I shave too?\"\n\n\"I love it. I'm going to suggest to my girlfriend that she should give it a try for a few weeks.\"\n\n\"Do you like my tan lines? I am totally white where I wear my bikini. I heard that men are turned on by tan lines. Is that true?\"\n\n\"Oh yeah, it's so hot!\"\n\n\"Continue taking a video of me Mike, I'm going to stop talking now and start playing. Again, you can leave if you want.\"\n\nObviously Mike stayed where he was, and I brought my hand down to my pussy. I was so wound up at this point that I just had to get myself off. I ran my fingers through my wet lips and then rubbed them back and forth over my clitoris. My nipples responded, and stuck out from my breasts. I pulled at one and let it snap back, and Mike groaned. I slid down into the chair a little more and threw one leg up on the arm of the chair and opened myself up so Mike could see everything.\n\n\"You know what I would really love? If I was doing this, and you brought your girlfriend over to meet me but saw what I was doing through the patio door, and just watched. You think she would like that? I know I would love it if I stumbled on to you two and she was on top of you with those perky breasts sticking out.\"\n\nMike was rubbing himself, but was able to continue with the video. I sensed his discomfort, so offered him a way out.\n\n\"You know Mike, I wouldn't care if you took your cock out and stroked it. There will be no touching between us, but we've gone this far. No pressure, just do what you want. I'm going to keep going until I get off.\"\n\nI resumed my play, and Mike looked at the lamp on the table beside him and carefully leaned my phone against it so it would continue recording. He opened his jeans and his cock popped it. I've seen a lot of cocks in my life, and could see that he had nothing to worry about in that department.\n\n\"Go ahead Mike, I want to see your hand stroke it. Do you and your girlfriend ever masturbate together like this? You should, it's so erotic.\"\n\nHe said no, and that he didn't think she would like it, and started moving his hand up and down as I've seen so many men do in the past. I'm so glad that men still like to look at me, especially a young guy like Mike!",
        "I was running my hand over myself and bringing myself close to the edge, and then backing off. I told Mike that I could cum anytime, but that I'd wait for him. \n\n\"I like watching you Mike. How often do you masturbate? Do you cum a lot? Does your girlfriend like your cum? Does she suck your cock? I know I would if I was your girlfriend. Tell me what you do with her and by yourself.\"\n\n\"I masturbate every day I guess, sometimes twice, and I guess I cum a lot. My girlfriend will suck my cock, but she isn't really into it and would never want me to cum in her mouth. I have cum on her before, but she really isn't into that either and always keeps a towel handy.\"\n\n\"She has a lot to learn, Mike, but give her time. Be honest with her, and say how hot it looks to see your cum dripping from her breasts. I know I get hot even imagining her perky breasts covered with cum, and I'm not even a lesbian. Are you close Mike?\"\n\n\"Yeah, where do you want me to cum?\"\n\n\"Well, not on the carpet and not in the kitchen sink. Tell you what, since you've behaved and helped me out, when you are ready just step over here and cum in my hand. I want to see it up close.\"\n\nWith that, I started convulsing with an incredibly intense orgasm. Mike was also on the verge and stood up and I held my hand out. He carefully aimed for my palm, and true to his word he did cum a lot, and I had a palm full by the time he squeezed the last drops out.\n\n\"Oh my, that was so hot Mike. Tell me, would your girlfriend do this?\" I lifted my hand to my mouth and let his cum flow onto my tongue. I swallowed, and then licked up the remaining cum left on my hand.\n\n\"No, that would be the furthest thing from her mind. But that was amazing. You really like the taste?\"\n\n\"Oh yes, and in fact I like it so much that whenever you are at home taking care of business, just text me to see what I'm up to and maybe you can give me many more tastes. I would like that. I have so many ideas. Maybe I'll text you once just before I get in the shower, and you can pretend to be a voyeur.\"\n\n\"Are you serious? I'm going to wear out your number. I can do it again right now if you want.\"\n\nWow, young guys are incredible! I told him to get completely undressed like I was, and stand a few feet from me and watch me. He did as he was told, and soon his hand was stroking his hard cock again. I started a dialog to make him feel good.\n\n\"This is so hot, Mike. I love the way you touch yourself. I'll be honest, I masturbate four or five times a day, but having someone like you watch me is a hundred times better than all alone. Oh, the stories I could tell!\"\n\nMike increased the speed of his masturbation, and I responded in kind. \n\n\"Do you think we can time our orgasms together again? And, I want your cum in my hand again, ok?\"\n\nBefore those words got past my lips, I started orgasming. I slid off the chair and knelt in front of him, and held out one hand while the other continued in a blur on my clitoris. One problem with masturbating five times a day is that it takes more and more pressure each time.\n\nMike stopped stroking and once again aimed his cock at my hand. It wasn't as much as the first time, but still impressive. This time, I dipped my tongue into the little puddle and swallowed some of it, and then finished licking it from my hand.\n\n\"Whew, that was intense. You ok Mike? I want you to text your girlfriend that you want to cum in her hand and watch her lick it up.\"\n\n\"Yeah, right, if I do that I'll be looking for a new girlfriend. Maybe I do need to bring her by sometime if she ever visits, and you can tell her yourself.\"\n\nI watched him get dressed while I remained naked, and I thanked him profusely. As he was about to leave, I gave him another kiss on the lips, and said I hoped to hear from him soon."
    ],
    "authorname": "IndianaWoman",
    "tags": [
        "exhibitionism",
        "panties",
        "bra",
        "masturbation",
        "bikini"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/showing-myself-ch-06"
}