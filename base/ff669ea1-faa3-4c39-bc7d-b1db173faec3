{
    "title": "The Test Shoot",
    "pages": [
        "Some quick admin before we start: This story comes in at a little over 30K words; the sexy stuff is spread throughout, but as usual, it's definitely more in the back half than the front. Furthermore, my apologies to anyone who speaks Hindi for my use of Google Translate; I've never had much luck soliciting help through the forums, and asking my Indian friends for help with my jerkoff stories is...a little awkward. But please, feel free to drag me in the comments if you deem it necessary.\n\nOther than that, I hope you enjoy!\n\n<p align=\"center\">= = = = =</p>\n\nDevika Singh didn't move out to Los Angeles to be \"discovered.\"\n\nOne day, it occurred to her that there was a whole subculture of humanity that was obsessed with celebrity, emotionally invested in Brad Pitt's relationships with Jennifer Aniston or Angelina Jolie or Marion Cotillard or whomever he was going to cheat on Marion Cotillard with. She wondered what that had to be like, to have every aspect of your private life speculated on by vain teenagers and bored housewives as if it was their favorite TV show, to have every last piece of shitty, smoky gossip scrutinized as fire. She asked herself how one would stay sane under such suffocating circumstances; she couldn't come up with a good answer. So while some of her friends entertained wild pipe dreams of red carpets and glamour, Devika set her sights lower: A menial job with good pay, a small house in a friendly neighborhood. If she could find that in her life and hold onto it, she'd be happy.\n\nStill, when she was staring down the barrel of college and the next phase of her life, her knack for coding and yearning for sunshine led her to California. She expected to move to the Bay Area after graduating magna cum laude from USC and land a Silicon Valley gig. Instead, she got a competitive offer from Umbrla, an LA-based startup that would save her the trouble of a move upstate.\n\nIt was work, no matter how much they tried to gin it up with casual language, yoga classes, and an arcade and fro-yo machine in the break room. In fact, it was work that never seemed to end; Devika went from 8 to 8 Mondays through Fridays and every other Saturday and was on call 24/7. But maybe that was the point, she thought: To find life in the spaces between the gears. She thought she did a pretty good job with what little she had to work with. She moved into a Marina Del Rey apartment with a couple of other friends, did her morning jogs out on Venice Beach, and kept trying new and curious spots for her dates (which, to her chagrin, were always first or second dates). Work sucked, but it was part of the ebb of life that made its flow more satisfying. Right?\n\nShe slept in on the Saturdays she had off; she needed it. Usually, she was out cold until 10 or 11, but that particular Saturday she barely got any sleep because she was told she had a performance review when she came back on Monday\u2014a \"check-in hang,\" they called it. These were usually excuses to subtly berate her for not being devoted to Umbrla's \"mission.\" The culture there was mostly white, mostly male, and scarcely private, both physically (\"Walls are, like, bad, brah. Why should we put them between you guys?\") and emotionally (she hadn't heard this much catty, gossipy bullshit from and about her peers even in high school). She could tolerate it, and she still did good work, but she didn't slide into it, and all she could think about from the cold comfort of her bed was how her management team always seemed to turn her lack of devotion to The Mission into a liability.\n\nThat, and how it wasn't her fault that every time they talked about \"Umbrla's mission,\" her mind went to the zombie apocalypse. The question she always wanted to ask in these \"check-in hangs\" was \"Seriously? You've never played a Resident Evil game? Watched any of the movies?\"\n\nShe thought about these things while watching the sky brighten into dawn through her tiny bedroom window. She used to welcome the sight, but she was running on four-maybe-five hours of sleep and her leg kept shaking and her mind kept screaming until finally, she realized she wasn't going to make herself feel any better by staying still.\n\nIt was a Saturday in June, not even 7 AM when she got to the beach and already 84 degrees, so Devika dressed a little skimpier than she usually did for a morning run: white sports bra, powder blue nylon shorts, her dark, frizzy hair tied back in a tight ponytail. She had already gone about a mile by the time she reached Groundwork Coffee; normally around this time, she'd consider turning back. But there was the matter of all that nothing waiting back at the apartment, and despite the temperature, there was a nice breeze coming off the Pacific and the sky was a beautiful shade of crystal blue, accented by the occasional wisp of a cloud. So she figured she'd push herself a little farther before relaxing on the beach for an hour or so, maybe with a breakfast smoothie. With all the stress she was under, a peaceful-ish change of scenery could only do her good.\n\nBeing discovered was the last thing on Devika's mind.\n\nBut during that jog, just past Groundwork Coffee, discovered she was.\n\nA voice called out to her, barely above Adam Levine's hook on \"Stereo Hearts\": \"Excuse me, ma'am? Ma'am?\"\n\nShe pulled out her earbuds and came face to face with a trim dude in a dark green Hawaiian shirt and board shorts, with wavy golden hair under a trilby hat that screamed: \"I am a big, big fan of that band you never heard of.\" Yet it somehow worked for him; his vibe was an odd mix of \"cute surfer boy\" and \"artsy hipster type,\" the appeal bolstered by the narrow yet sculpted arms that hinted at a toned figure underneath his clothes.\n\nAnyway, he didn't seem to be holding anything she might have dropped. Devika connected her inquisitive brown eyes to his friendly blues.\n\n\"Hi, I'm sorry to bother you,\" he said, taking out his phone, opening the back of its case with a click. \"I normally don't do this because it's super rude, but I'm in a bad spot and you might be able to help.\" Off Devika's cocked eyebrow, the man handed Devika an off-white business card he fished from the compartment of his phone case. \"My name's Levi Fisher,\" he introduced himself; his card had his name, phone number, e-mail, Twitter handle, and website printed on durable, textured stock. \"I'm a photographer,\" he continued, \"and I was hoping you could model for me.\"\n\nDevika blushed, taken aback by the unexpected, roundabout compliment. She did have a damn good shape about her; a soft, petite hourglass figure with hips that were slightly wider than her bust, and dark cinnamon skin that shimmered like bronze whenever she worked up a sweat. \"Wow,\" she giggled. \"Seriously?\"\n\n\"Yeah, I know,\" said Levi. \"It sounds like a line, but I'm dead serious. Listen, have you eaten? Can I at least buy you some breakfast while I tell you what's up?\"\n\n<p align=\"center\">* * * * *</p>\n\nIf it was a line, it worked; stuck in the thick of a year-long dry spell, Devika was more than happy to be plied with free food by a cute guy. After she introduced herself, Levi took her back to Groundwork Coffee. While she tucked into her breakfast burrito, he laid out the situation as plainly as he could: He had come here to meet up with a model he was doing a test shoot with, only for her to call and tell him she'd been throwing up all night. \"Test shoots being what they are, it's hard to find a last-minute replacement; you normally just reschedule. But I've got a way bigger shoot happening Monday, and I'd really like to put my new camera through its paces before then.\"\n\n\"So I'm assuming that's where I come in?\"\n\nLevi nodded.\n\n\"You know, Levi, I think we've both seen a few movies on the internet that started just like this.\"\n\nHe laughed and ultimately nodded in acknowledgment. \"Here's what I'll tell you,\" he said. \"One, this won't make you a star. It's a test shoot, it's bullshit. I'm not going to show the pictures I take to all the 'talent agents' that I 'rub shoulders' with. So now that I've dashed any hopes you might have had for fame and fortune, I can't hold them over your head.\"\n\n\"For what it's worth, I don't give a shit about fame.\"\n\n\"Really?\" Levi seemed genuinely, pleasantly thrown by this.\n\n\"I mean, I still love money,\" said Devika. \"Don't start thinking I'm all Zen Buddhist just because of the color of my skin.\"\n\n\"Ah, this is LA,\" shrugged Levi. \"We all need to love money to live out here.\"\n\n\"Very true. But yeah, I know enough about celebrity culture to know I'd rather not be one.\"\n\n\"I get that,\" said Levi. \"I meet a lot of people chasing stardom in my line of work, and...well, look, I shouldn't judge, but it's cool that you're not like that.\"\n\n\"You seem like a decent fella, Levi,\" Devika admitted after swallowing a bite of her burrito. \"Even if you are a big perv.\"\n\n\"Well, that's number two,\" laughed Levi; he had a good laugh, light and genuine. \"By all means, visit my website, my LinkedIn, Google me, check my Twitter mentions, do whatever homework you have to do. I'm not some shitbird frat boy with a camera. I take my work seriously, I respect the people I work with, and I'm very, very good at it.\"\n\n\"Those sound like all the right answers,\" said Devika.\n\n\"Good, because here's a wrong one: When you do poke around, you'll find I've worked with my fair share of nude models.\"\n\n\"Ah.\"\n\n\"Yeah, look, I can defend it as art, but art is subjective and nudes are nudes. Point is, I don't want you to think that we have to go there just because I do that a lot.\"\n\n\"I get that,\" said Devika.\n\n\"That said,\" said Levi, \"The girl I was going to work with was a friend of mine, so I'm not working with any crew on this shoot, and I'm doing it out of my home. I mean, all things considered, I figure this might feel like, you know, a lot. So if you want to bring one or two friends along to hang out, I won't mind at all.\"\n\nDevika nodded, appreciative; Levi seemed pretty chill all around. Of course, those were the types one had to be extra careful of, and he did seem to be trying pretty hard to convince Devika he was all right, but it wasn't in a way that suggested he had an ulterior motive; just someone painfully self-aware of what he was asking.\n\n\"Okay,\" Devika finally said. \"So if I say yes, what's in it for me?\"\n\n\"Well, for every hour of your time today\u2014at least two, likely four, maybe more if I feel like I'm on a roll...\"\n\n\"Okay.\"\n\n\"...I'll pay you fifty bucks, and I'll send you the shots I take after I touch them up. Like I said, I can't make you famous; a kind word from me doesn't get that far. But assuming you enjoy it and you photograph well, I'll point you to some agencies that could set you up to model on the side if they like you.\"\n\n\"But you need me today.\"\n\n\"I need you today,\" admitted Levi. \"And at the risk of putting you under pressure, it'd be irresponsible of me to stop looking for a replacement while I wait for your answer, hard as I think it'll be to get one.\"\n\n\"Of course!\" Her burrito finished, Devika stood up and stretched her legs.\n\nEven though their talk was strictly business, and he did most of the talking, Levi turned out to be pleasant company. Painfully self-aware, but upfront and honest. He was casual, but not \"cool.\" He always looked her in the eyes while he pitched her, and didn't seem to hold any expectations or demands of her acceptance. The only problem she had with him is that she didn't get a chance to know him better.\n\nDevika picked up Levi's business card from the table while taking out her own phone. \"I'm assuming this is your cell number?\" she asked while tapping out a text message.\n\n\"That's right.\"\n\nAfter a final, definitive tap, Devika locked her phone and put it back in her pocket. \"Okay, so let me think about this, and I'll get back to you within the hour. If you do find someone else\u2014\" Levi's phone buzzed. \"That should be my number. Just give me a call and let me know.\"\n\n\"Sure thing.\"\n\n\"Great!\" Devika extended her hand. \"Well, if nothing else, thanks for the burrito!\"\n\n\"My pleasure, Devika!\" Levi shook the hand she offered. \"Thanks for not macing me!\"\n\n\"Well,\" Devika said, dipping her toe into the metaphorical sex water, \"I wouldn't want to send you back to your girlfriend with your eyes all burned out.\"\n\n\"Joke's on you,\" said Levi, \"I don't have a girlfriend.\"\n\n\"Ah!\" Devika nodded. \"That would make it way easier to bang your models!\"\n\n\"Uh, yeah,\" said Levi, from his back foot. He pulled himself together and tapped the temple of his head. \"Yeah, that's the galaxy brain shit right there.\"\n\nAnd he was funny, too. Damn, why couldn't this have been a date? \n\n<p align=\"center\">* * * * *</p>\n\nDevika did have a few acquaintances who were well-versed in LA's modeling and fashion scene, so on her jog back, she blasted a text to them with his name and picture. She didn't expect them to get back to her within the hour, though, so once she got back to her car, she directed her phone to Levi's website for a little research.\n\nAny doubts that Levi was legit vaporized upon setting eyes on his portfolio, which covered a wide range of subjects and styles. He shot landscapes and portraits; people at work, play, and rest; snowy mountains and sunny beaches. She never knew black and white photography could feel so warm and inviting, or that a colorful meadow could be so depressing. He seemed medium-time at best, but he clearly knew what he was doing.\n\nShe poked around the internet beyond his website, finding many more pictures he shot with models who would constantly associate him with terms like \"joy,\" \"privilege,\" \"fun,\" \"brilliant,\" and \"wonderful.\" In the middle of this, one of Devika's acquaintances, Cassie, texted her back:\n\n<blockquote>Oh, I worked with him! He's a good guy! A little thirsty, but I still had fun; never felt unsafe, never felt pushed into doing anything uncomfortable. Granted, his approach here is...interesting, and if it was anyone else, I'd say \"don't.\" But I think you can trust him.\n\nJust to cover your bases, though, have him send you something in writing that lays out the ground rules: no nudity, pre-approval on outfits, etc. Get your lawyer friend to look it over before you sign, too. Have fun!</blockquote>\n\nA fair assessment...and a curiously intriguing one. It inspired Devika to go looking for his NSFW portfolio\u2014which, oddly enough for her, pushed her over the top.\n\nIt was clear from those pictures that Levi loved women in the same ways any average straight guy did. The difference between him and the average straight guy, however, was as vast as Hell was hot. For one, Levi seemed to understand the power of imagination. Many of his best pictures were teases, hints, suggestions. The ones that weren't relied on more than the woman's form to sell her beauty; one of her favorites was of a skinny redhead, fully and joyously nude, with flowers in her hair. Levi had washed out the colors a bit to give the picture more of a 60s vibe, which enhanced the girl's innocent appeal. Later, Devika found another picture of that same girl\u2014this one, her hands-down favorite. This one was noir-inspired; her figure was draped across a bed, now bathed in hard shadows with splashes of rain-soaked amber street light cast across her face and her breasts. Levi had taken his model from sweet to sultry as easily as one could snap their fingers.\n\nAnd God Almighty did it drive her wild. A man as cute and charming as he was, who could look at a woman like that? Forget it; she was about to have what could politely be referred to as \"a problem.\" She reached for her key to turn over the engine so she could go home and take care of this problem, but suddenly remembered that Levi wasn't waiting up for her. So she picked her phone back up and dialed him, quickly, before she could wake up from this dream.\n\n\"So I looked at your portfolio,\" she said after they greeted each other. \"First of all, you're an amazing photographer.\"\n\n\"Thank you!\"\n\n\"But here's the thing: You actually worked with a friend of mine a while back, Cassie MacGregor?\"\n\n\"Uh...sounds vaguely familiar.\"\n\n\"Really? She said\u2014oh, I'm an idiot. You'd know her as Cat Gregory.\"\n\n\"Oh, Cat!\" Just from the sound of his voice, Devika could tell Levi's entire body had lit up at the mention of her friend's name. She took no offense; Cassie had that effect on people. \"Holy shit, that's crazy,\" he exclaimed. \"How's she doing?\"\n\n\"Good! She actually had a really good time working with you and she told me I should go for it. She's a pretty smart person, being British and all...\" Devika took a second to laugh at her own joke, another to worry that she laughed too much at it, yet another to chastise herself because Cassie was Scottish, God that was so stupid. \"Anyway, uh, if you can send me something in writing, I'm in.\"\n\n\"You seriously just made my day,\" he said after a brief, excited silence, and Devika wondered how he could be so excited if he could've been photographing her actual model friend that liked working with him. \"Absolutely,\" he continued, \"text me your e-mail and I'll send you a contract. It's pretty straightforward, should only take five, maybe ten minutes to read through; it just goes over what we're going to do, what we're going to get out of it, and what happens if we want to change things up. But feel free to read it carefully, do whatever you have to do, and call me back if you have any concerns.\"\n\n\"Awesome. Thanks a lot!\"\n\n\"Believe me, you're saving my life here. It's my pleasure. Actually, can I trouble you for one more\u2014sorry, two more things?\"\n\n\"Shoot.\"\n\n\"First, by all means, bring an outfit you'd like to be photographed in, but I've also got a specific idea I wanted to shoot, so if I can get your measurements, I can set aside something that should look good on you\u2014assuming you're okay with it, of course.\"\n\n\"Sure! Last I checked, 32D-24-34.\"\n\n\"24...34. Got it! Thanks!\"\n\n\"Of course! What's the other thing?\"\n\n\"I'm texting you a menu,\" he said. \"Let me know what you'd like for lunch.\"\n\n<p align=\"center\">* * * * *</p>\n\nDevika one-timed the contract into her friend Sandip's inbox as soon as it landed in her own; she had called his office in advance, and he agreed to help her out, if only because the thought of Miss Celebrity-Culture-Is-Soooo-Fucked-Up moving to LA for the weather and falling into modeling was delicious.\n\n\"Look, in my defense,\" she said on the phone, \"I'm doing it for a really cute guy who isn't you for once.\"\n\n\"Right,\" he laughed. Devika had a thing for Sandip since 9th grade. Sandip found the tragedy of it adorable. \"A really cute guy who may or may not work for Reality Kings,\" he added.\n\n\"Reality Kings is based in Florida!\"\n\n\"How do YOU know Reality Kings is based in Florida?\"\n\n\"How do you know Reality Kings is a thing?\"\n\n\"I watch straight porn the same way Joel Hodgson watches shitty movies or white people watch Worldstar videos.\"\n\n\"Those are different things!\"\n\n\"Well, yeah,\" sneered Sandip. \"It depends on the porn, obviously.\"\n\nWith the contract out to Sandip, Devika opened the PDF and looked it over for herself. It was, as promised, quite straightforward; only a couple pages long, light on legalese, clearly laying out their responsibilities to each other and what they're each allowed to do with the pictures he would take. There was one paragraph that caught her eye, though, one she was warned about up front. Sandip called back to talk about it while she drove back to her apartment.\n\n\"I don't know if I'd call it a problem, but it's something you should be aware of,\" he said.\n\n\"Paragraph 4 of section 1?\"\n\n\"Mmm-hmm. You know what it says?\"\n\n\"Well, the paragraph before says I can turn down any outfit he lays out, and that I'm not obligated to strip for him. He might ask anyway, but I can still say no, right?\"",
        "\"Close enough.\"\n\n\"Yeah, Levi actually gave me a heads up about that in his e-mail. Is there anything that I missed, something that might stop me from telling him 'no' besides men being trash?\"\n\n\"Yeah, no, obviously I'd bring a friend or two to back you up, but as far as I can see, there's nothing that legally discourages you from telling him to fuck off. But what it says exactly is, 'In the event of a request made by the photographer for the model to go beyond her responsibilities as expressed in this document, the model may request an informal renegotiation of terms in exchange for her consent.' So say he asks you to flash some sideboob in the middle of the shoot, and you kinda like him, but you're a little nervous. If you think some extra cash can make that nervousness go away, him asking that question opens the door to an immediate renegotiation of the contract.\"\n\nDevika hummed, interested. It hadn't quite hit home for her until Sandip spelled it out.\n\n\"What I find really cool, though, is that if you do decide to be a shameful whore for this guy\u2014\" Devika laughed at his overstatement; their parents tended to get a little dramatic whenever the subject of casual sex came up, a source of endless amusement between each other ever since they were old enough to know what sex was. \"\u2014the contract says he still can't publish or even share those pictures without separate express written consent. He only retains publishing rights to what's covered in the initial agreement. He's giving you a lot of power here, Devi.\"\n\n\"So it's okay to sign?\"\n\n\"If you like the guy, yeah. The only other thing I'd be aware of is that any pictures he takes will still be his property, regardless of if he's allowed to share them or not. So he could still show those pictures to any friends that come to his place, or just generally jack off to them until he dies of old age. These are things he'd be well within his rights to do. Also, if he does breach contract and spread those shots around, you can sue his ass and get paid for your trouble\u2014I'll even come out and represent you, I believe California will let me do that\u2014but because the Internet's gonna Internet, that wouldn't stop those pictures from spreading. So if he asks you to strip, think about that and ask yourself how comfortable you'd really be.\"\n\nDevika thought of the noir picture with the redhead and decided that Sandip didn't need to know the answer to that.\n\nThere was something she needed to know from him, though. \"Generally jacking off? I thought you guys either jacked off or you didn't.\" Sandip laughed on the other end. \"You're telling me there are specific ways you guys jack off for special occasions? Like, you do it sideways or something if you're running late for work because that gets you off quicker?\"\n\n\"Oh, Devi,\" said Sandip, still laughing, \"let me tell you about 'The Stranger...'\"\n\nLong after she thanked Sandip (\"I guess\") and got off the phone with him, even having just learned that sometimes guys sit on their hands before rubbing one out, that picture was still at the front of her mind, leaving her as drenched as the rain on the window within. So Devika turned into a parking garage, driving up the winding ramp until she reached the empty roof, and double parked in a space near the wall.\n\nShe loaded up Levi's portfolio on her phone once more. Returned to the picture that vexed her.\n\nShe tilted her seat back, just a little. Just enough to bring her pelvis forward, so her right hand could slide down her stomach and comfortably breach the waistband of her shorts. She wasn't waiting for a numb hand for this one; her imagination would have to do, and as it turned out, Levi's photography was strong enough to carry it farther than it had ever been.\n\nHer mind was corrupted with thoughts of the blonde surf hipster with a penchant for turning women into sex bombs, who picked her out of a crowded Venice Beach jogging path. Sure, he was a gentleman and tried to assure her that he wasn't interested in doing anything risqu\u00e9 with her, but the thought that she could, the idea that he might want to...\n\nDevika studied the picture, tried to imagine herself in the same pose; laying on that bed, dressed only in hard shadows and rain-distorted street light. Levi hovering over her, capturing the sultry beauty under him. Was he a professional to the core? Or could the redhead see the lust in his eyes? Devika knew there had to be lust; everything he wanted to do to her was somehow expressed in that single picture.\n\nHow many shots did he take of this? How much did she writhe on the bed, letting that wet light dance across her body, before she landed on that pose? How much of herself did she show to him? What did they do when it inevitably became too much? She pictured them both on the bed, naked, him venting furiously into her while she gasped again and again in fulfillment, tossing her head back and stretching out her neck to the spotted glow from the rainy street, moaning, crying, screaming her bliss from the joyous, privileged, fun, brilliant, wonderful cock within her.\n\nSinking back into her seat in a sweaty and briefly satisfied heap, Devika saved the picture to her phone and reminded herself that Levi was a professional.\n\nBut maybe he doesn't always want to be, she thought.\n\nWouldn't it be more fun if he wasn't?\n\n<p align=\"center\">* * * * *</p>\n\nDevika was taken aback by Levi's house. When he said he lived in the Palisades, she expected to pull up to some kind of beautiful monstrosity, but this shack, dwarfed by a large building to the left and a tall, bushy alder tree in front, might have been even smaller than her apartment. \"Right,\" she said to herself, slightly disappointed but far from distraught, \"freelance photographer.\"\n\nDevika approached the house wearing a casual tank top and leggings, signed contract in hand and gym bag slung over her shoulder. The door was already open\u2014Levi texted her earlier to show herself in, which she did. Yep, it was far smaller than her apartment; Devika figured she could make it from the front door, through the living area, through the kitchen, and out the back in about 10 steps. Still, Levi did a lot to make it look cozy and inviting; there was a plush leather couch with a lounge across from the fireplace, a TV mounted above its mantle. The walls were painted a pleasant sky blue and mounted with all sorts of beach paraphernalia; a picture of the sunset over surf above the couch, a surfboard mounted in the hallway leading to the bedrooms, the phrase \"Eddie would go\" over the front door, which she heard about from a 30 For 30 documentary. Levi stood in the kitchen, behind the island counter, laying out food from the Mexican place down the street. \"Hey, Devika!\" he beamed. \"Perfect timing! Just got in from Nelly's!\" He pointed to the takeout dishes he unbagged: \"Swordfish tacos here, chips and salsa here. Leave the bag on the couch, take any seat you'd like.\"\n\n\"Thanks,\" said Devika, unburdening herself of her bag. \"Glad you still recognize me without my face.\"\n\n\"It's a hard face to forget,\" said Levi, \"even without makeup.\"\n\nLevi also texted Devika with a request to take off all her makeup before coming over, so he could start with a fresh canvas, so to speak. Devika was surprised at\u2014and a little ashamed of\u2014how uncomfortable she was going out without even a little lipstick on, but she understood the point. It helped even more that Levi was polite and real smooth about it.\n\nTaking a seat at Levi's island, Devika grabbed a swordfish taco and bit into it. \"Mmm,\" she moaned as she chewed up the taco and let it slide down into her once-more empty stomach, \"this is so good.\"\n\n\"Yeah, Nelly's is one of the best Mexican joints on the beach,\" said Levi. \"Having it down the street single-handedly justifies the rent for this place.\"\n\n\"There's a Caribbean place near me on Lincoln Boulevard, Golden Sunsets? The jerk wings are to die for. I'd eat there every day if I could afford it.\"\n\n\"I feel that,\" said Levi. \"Hey, is it just you?\"\n\n\"Is it just me...what?\" asked Devika, before realizing that Levi was trying to look out the door. \"Oh! You know what, I didn't think there was any reason to ruin anyone's Saturday with my bullshit.\" Half-true; it was more like she didn't want them to ruin her Saturday. \"I just texted a few people your picture and this address; my friend Paul plans to show up with a bat if he doesn't hear from me by morning. He's like 220 pounds of muscle, so I'd leave the Rohypnol and meat hooks in the closet if I were you.\" This was very true; she may have been feeling herself (figuratively and literally) more than usual that day, but she hadn't gone crazy.\n\n\"Fair enough,\" laughed Levi. \"But seriously, I really do appreciate the trust you're willing to put in me. It means a lot.\"\n\n\"Of course! You seem worth the gamble.\" Devika finished the taco in her hand. \"So what's the plan? I washed and brought my jogging outfit since you obviously like how it looks on me...\" Devika motioned to her gym bag; there was actually one other outfit in there, but Levi didn't need to know about it at that moment. \"...but I'm happy to do whatever you wanted to do first.\"\n\nDevika was about to bite into her next fish taco when she realized that Levi hadn't said anything. She looked over and found him deep in thought. He looked at his watch, whispered some calculations to himself, and finally said \"You know what? Let's shoot the jogging outfit first. I wanna do it outside, while the sun's still high.\"\n\n<p align=\"center\">* * * * *</p>\n\nLevi's house had two bedrooms; he converted the spare one into a small portrait studio with a makeup station, a computer, and a clothing rack, with the dress Levi picked out for Devika\u2014a red number that looked quite nice from the short glimpse she had\u2014spaced away from the others. Levi invited Devika to change in this room, which she did, and now they were doing makeup. To Devika's surprise, \"This is a lot of makeup for a jog.\"\n\n\"You would think,\" said Levi. \"Actually, photographs capture a lack of makeup differently than the human eye, so it's not enough to just go natural; you have to create a whole 'natural' look. I actually learned that the hard way in college.\"\n\n\"Where'd you go?\"\n\n\"San Francisco Art Institute.\"\n\n\"Really?\"\n\nLevi smiled. \"You sound surprised.\"\n\n\"I mean, it shows in the work, definitely, I just...then again, if you're paying off student loans, then\u2014\"\n\n\"Ah,\" said Levi, acknowledging his surroundings.\n\n\"I don't mean any offense,\" insisted Devika. \"I actually really like this place. It just caught me off guard, is all.\"\n\n\"Of course,\" assured Levi. \"I'll say this: I'm not worried about student loans. Not really worried about my career, either; I'm still young, and I'm getting a reputation. And even though it's kind of a douchebag thing to say, I love what I do. I hope I die with a camera in my hand.\"\n\n\"What's douchey about loving your work?\"\n\n\"Well,\" said Levi, \"it's easy to say you love your work, isn't it?\"\n\n\"Sure,\" said Devika. \"It's easier to believe when your love comes through in that work.\"\n\nLevi's hand faltered just a bit. Devika caught his face in the mirror, trying not to smile too hard. \"That's one of the nicest things anyone's ever said about me,\" he admitted. \"Thank you.\"\n\n\"My pleasure,\" said Devika, warmly.\n\n\"Makes it all the harder to tell you what I'm about to tell you.\"\n\nShe cocked an eyebrow. \"What's that?\"\n\n\"We're doing this at Inspiration Point,\" he said. \"It's only a 5-minute air-conditioned car ride from here, but it's 15 minutes on foot in the 90-degree heat. And one of us needs to have a nice sheen of sweat for this.\"\n\n<p align=\"center\">* * * * *</p>\n\nModeling fucking sucked.\n\nSeriously, Devika thought as she pushed her way up and down the winding road to Inspiration Point, Levi close by. What kind of asshole thought THIS was easy? Fucking having to run a mile...half a mile...actually a little less, and also she had just run two or so miles that morning without a problem\u2014look, it was hot as balls outside, Levi was nice and cool in the Kia Soul creeping behind her, the sweat was saturating her eyebrows and dripping down her face, and still she had to keep running and it fucking sucked.\n\nThey made it, though. Inspiration Point offered a great view of the PCH, the Beach Club, and the Pacific Ocean beyond. So naturally, there was a gentle buzz of tourists dotting the area who had long since gotten the memo. It seemed a little counterproductive for even a quick photo shoot.\n\n\"Yeah,\" Levi admitted, looking at her through his lens as they both jogged up to the scenic spot. \"The location is a bit of an afterthought; all I care about is that it doesn't look like shit and it's easy to get to. You're the subject, and you look great.\" Satisfied, he screwed his lens onto his camera. \"Anyway, this won't be too complicated. You're just drinking some water and stretching yourself out. I'll call out any specific instructions.\"\n\n\"Got it.\"\n\n\"Just so you know, I might get a little loud,\" he added. \"That won't be on you. That's just what happens when I get into a groove. So try not to get too discouraged if you hear me shouting. In fact, if I start barking at you, then you're probably doing great. All right?\"\n\n\"Sure.\" Devika bounced on her toes, swinging her arms to and fro.\n\n\"Nervous?\"\n\n\"A little, I guess.\" It was more than a little. She wanted to be awesome for him and was hoping the concept of \"beginner's luck\" applied to more than just gambling.\n\n\"Don't worry about it. You just ran all the way to Inspiration Point, you're a little winded, and you're ready for a break. What comes naturally?\"\n\nDevika grabbed her water bottle and took a sip, letting the cool water\n\nka-chik ka-chik \"Tilt your head back a little more.\"\n\nShe tilted her head back, sucking down\n\nka-chik ka-chik \"Little more.\"\n\nShe did so.\n\nLevi circled around her, snapping, snapping, snapping away. \"Push your chest out a little more, I want your neck craned nice and smooth.\"\n\nShe did so. Maybe? It felt weird.\n\n\"Good.\"\n\nOnly moments later did she realize there was supposed to be a subtle sexual significance to the way she was presenting herself. Which was fine; she just liked this guy and didn't want to look like a goon, which, well\n\n\"All right, put the water down for a minute.\"\n\nShe did. Should she be looking at the camera? Should she\n\n\"Do some cooldown stretches for me. Whatever comes naturally.\"\n\nWell, she guessed, her legs were tired and a little sore, so she should start there. But he wanted sexy, right? So she should bend down, touch her toes, show off her ass?\n\nka-chik ka-chik ka-chik \"Nice. Very good.\"\n\nHe wasn't shouting. Shouting was supposed to be good, right? I mean, it could be intimidating, so maybe it was okay that he wasn't shouting.\n\n\"All right, let's stretch out that core. Do like a sun salutation for me, show me that midriff.\"\n\nShe really wanted to know if he liked her ass. Then again, of course he wouldn't tell her because how the hell would one tell her that without sounding like\n\n\"Hey, are you alright?\" Levi asked.\n\n\"Yeah, I'm, uh,\" Devika sighed, rolling her eyes a bit\u2014Levi snapped a couple of pictures of that. \"I'm sorry, I don't think I'm what you were hoping for.\"\n\n\"Nah, you're fine! Really!\"\n\n\"Are you sure? Because I feel like I'm all stiff and self-conscious.\"\n\n\"That's what happens when you're not used to being on camera.\" Levi put his camera down and approached Devika. \"Look, in the movies, you ever hear somebody say to a model 'Oh, the camera loves you, you're a natural?' It's a line. The truth is, once there's a camera involved, anxiety is natural. Even if you're a very outgoing person, a camera adds so many other X-factors that it's easy to freeze and second-guess yourself. It's something you either get over or you don't.\"\n\n\"What if I don't?\"\n\nLevi shrugged. \"Worst case scenario? I thank you for your time, pay you a hundred bucks, and after I send you the shots, you never hear from me again.\"\n\nDevika cast her eyes downward. \"That would be a real shame.\"\n\n\"Well, not for you,\" Levi said. \"I think you're pretty awesome, so I figure that would only happen if I somehow pissed you off.\"\n\nDevika perked up.\n\nLevi snapped some pictures of her. \"I'm...still shooting. Sorry. Force of habit.\"\n\n\"Not at all.\" Devika thought it was a very endearing habit.\n\n\"Okay, go back to stretching,\" he said. \"And look, if you're nervous, let yourself feel nervous. Let me worry about how it looks. It's a test shoot. Maxim isn't expecting you to move magazines with your best 'fuck me' pout. We're just goofing off here, so hit my marks as best as you can, and let me worry about the rest. Cool?\"\n\n\"Yeah,\" said Devika. \"I think I can do that.\"\n\nLevi raised his camera to keep shooting, but suddenly put it down. \"Actually, check this out...\" Levi reached into his camera bag and pulled out a pair of aviator sunglasses. \"Try these.\"\n\nDevika slipped the aviators on; the world around her get a little darker.\n\n\"Oh yeah,\" said Levi, a little louder than usual. \"Yeah, that is striking! Ties everything together.\"\n\nThat was closer to what Devika was hoping to hear. She laughed, validated, and Levi took multiple shots of it.\n\n\"Okay, go back to that sun salutation. But this time keep your back straight and clasp your hands together.\"\n\n\"That's not really a sun salutation,\" smirked Devika, doing as told all the same.\n\n\"That's because I'm not really smart.\" Levi snapped away. \"Perfect. Perfect. Okay, now spread your arms for me.\"\n\n<p align=\"center\">* * * * *</p>\n\nModeling fucking ruled.\n\nAt least, it ruled when you were shooting with a good photographer, someone who encouraged you to have fun and never judged you for your feelings. Someone you were excited to do right by, yet never made you feel bad for letting him down.\n\nOh, she almost certainly let Levi down on some level. That self-consciousness never really went away, and after a while Levi just stopped trying to put her in poses, settling for just having a conversation with her about where she came from (\"Taylor, Michigan; when I first landed at LAX I think I lost three pounds just from thawing out.\"), what her family was like (\"Very traditional, very conservative, but mostly respectful. Always loving.\"), and why she moved out here. Levi tried to be as forthcoming in turn\u2014lived in LA all his life, loved the beach, supportive family, all things Devika could relate to in theory\u2014but was quietly, apologetically evasive when it came to details.\n\nStill, it was fun! Once Levi gave her permission to be nervous, she just rolled with it, finding a sort of ironic joy in trying to be sexy despite being caked in sweat and awkwardness. Eventually, the irony of it faded away, leaving only the joy; however goofy Devika felt in front of the camera, she soon started to feel actually sexy on top of that. It helped that Levi just couldn't stop taking pictures of her even when she wasn't in one of his setups; maybe she actually was a natural, in some weird way.\n\nDevika went right into the shower after she got back to Levi's house, rinsing the sweat and grime from her run right off her body. The loofah and the Oil of Olay on one of the shelves told her that she was far from the first woman to use this shower\u2014a small square enclosure with a frosted glass door, in a bathroom with tiled walls that were tinted to ugly southwestern hues. It wasn't really the first choice for a softcore porn shoot...\n\n...yet that's exactly where Devika imagined herself, with the camera being manned by Levi, of course. Practice made perfect, right?\n\nSo what would he find sexy?\n\nPush your chest out a little.\n\nOf course; based on all the poses he called out that emphasized the top half of her body, Levi was probably a tit man. Devika pushed her chest out into the running water.",
        "Not too much. Make it look natural.\n\nShe retracted, just a bit. Drew attention to her heavy brown breasts by brushing her fingers across their tops, where the water fell upon her.\n\nNice. Nice. Good.\n\nHe never made any specific comments about her body. Why would he? It was already a shady situation; he wanted her to be as comfortable as possible, and that meant no catcalling, which was kind of adorable.\n\nSomething's missing...\n\nThere was a slight flaw in her fantasy; the girls in porn shoots, their nipples were usually stiff. Her nipples weren't, not quite. How would a guy like Levi ask her to bring them to attention, though?\n\nWasn't there usually a trick to this in shower scenes? That's right, Cassie once got drunk and told her as an aside related to some other story,\n\nThis is going to suck, but turn the water down to cold.\n\nThe shock of it almost hurt, but Devika got used to it, and her dark nipples soon stood proud and engorged.\n\nThere we go! Beautiful! Now, let's lather up.\n\nDevika stepped back from the spray of the water and soaped up the loofah. Once it was nice and sudsy, she ran the loofah up between her breasts; she looked out past the shower door while she did so, giving the imaginary Levi her best sultry look.\n\nShe then looked down and watched herself soap up the rest of her chest in slow, luscious circles, watching the white suds slip and settle against her dark cinnamon skin, sighing every time the rough loofah pushed against the stiff black buds atop each tit. She made a second pass, a third pass. Each time, the juncture between her legs got soaked with something warmer than the shower water, pushed along by an itch that compelled her to scrub lower, and lower, and lower.\n\nThat's it. Get yourself nice and clean.\n\nShe leaned back against the tiled wall, raising her knee, planting her foot against the glass of the shower stall as she exposed her smooth, thick innie pussy to Levi's imaginary camera, rubbing the loofah up and down her lips, letting the mesh drag within her slit, against the tiny pale pearl of her clit, and tangle and mix with her thick pubic landing strip.\n\nMore. Give me more.\n\nAbove, bright soap bubbles popped and slid down her smooth dark skin.\n\nMore.\n\nOne of her breasts jiggled from the loofah's ministrations down below.\n\nMore!\n\nThe other was held down by her free hand, its stiff dark nub at the peak pulled and tweaked between her fingertips. She opened her mouth but tightened the muscles in her voicebox so that a breath went out in place of a moan.\n\nMORE!\n\nShe thrust her chest forward, reared her hips back, ground herself against the loofah, looked into the phantom lens and licked her lips, there was a knock at the door\n\nBANG BANG BANG!\n\nIn the space of a half-syllable\u2014\"Fuh!\"\u2014Devika realized she was diddling herself in a friendly stranger's bathroom, officially making her a bigger creep than the guy who pulled her from the street and offered her cash to photograph her in his tiny house. \"Hold on one second!\" Devika shouted, instinctively covering herself.\n\n\"Oh, sorry, I'm not coming in,\" Levi casually shouted through the door. Devika shut the water to hear him better. \"When you're done,\" he said, \"put on the robe and meet me in the studio. I wanna show you something before you get changed.\"\n\n\"Oh! Yeah, sure!\" After a deep breath to slow her heart down, Devika turned the water back on and rinsed the soap off her body, giving her a chance to stop her head from spinning.\n\nShe kept it cold. What the hell, it was hot out there anyway.\n\n<p align=\"center\">* * * * *</p>\n\nAfter her shower, after she toweled off and blew her hair dry, Devika checked herself out in the bathroom mirror; the soft, fluffy blue robe covered her well...maybe a little too well. Creepy or not, she was still pulled from the brink of coitus at the last minute, and it left her in a mood. So she loosened the sash of the robe, letting it open all the way down to her navel, revealing much of the inner slopes of her breasts. The idea of walking out to meet Levi like filled her with hormonal glee, but she convinced herself that it wouldn't play out the way it did in her mind. She closed the robe up a little more to raise its plunge and hide more of her chest; still a little south of classy, but now well north of skanky. Leaning forward sent a good amount of titflesh spilling out, but her still-stiff nipples remained concealed under the cotton.\n\nPerfect.\n\nThe door to the spare bedroom-cum-studio was open, but Devika knocked before entering anyway, partly out of courtesy. \"Ah, good,\" Levi said. There was a MacBook on the vanity; he was putting a few finishing touches on a picture before turning around. \"I just wanted to show you a couple of...uh...\" \n\nLevi had made the mistake of turning back to look at Devika as she entered. For just the lesser half of a split second, she could see him turn into the wolf from Tex Avery's cartoons before he quickly pulled his gaze up to her eyes and fought the reaction back.\n\n\"I...wanted to show you some pictures from the shoot,\" said Levi, barely without stammering. With all the signals Devika had been sending...well, maybe it was just that one big signal, but she still wished he'd make some advances, even if they were crude. She wanted some recognition of this little game she couldn't help but play with him.\n\nInstead, Levi pulled himself away from the view and went back to his Macbook, loading up a picture of Devika drinking her water. \"So here's how you started,\" he said, \"before our talk.\"\n\n\"God. I look like I learned about fitting in with 'the humans' from Playboy magazine.\"\n\n\"Yes, you do,\" said Levi. \"But it's still pretty decent for a first timer.\"\n\n\"You don't have to coddle me,\" said Devika, casually.\n\n\"I'd like to keep shooting you, so I kind of want to. But I'm serious.\"\n\n\"What, I'm not the first girl you pulled off the street?\"\n\n\"You're not the first amateur I've shot,\" said Levi. \"Everyone starts somewhere; sometimes they start with me. But I'm not referring to them.\" Levi went into his photo browser, into a folder labeled \"SFAI MEMORIES,\" and pulled up the goofiest looking black-and-white portrait of himself Devika ever could have imagined.\n\n\"Get the fuck out!\" she squealed. He was going for an \"Eternity by Calvin Klein\" thing, giving the camera his best Blue Steel, coming up with something like Teal Aluminum instead. He looked so awkward and out of place, it didn't even seem to matter that he was shirtless and nicely cut with a soft six-pack. (Though now that she noticed...God damn, boy.)\n\n\"'Y'know the thing about a bad model,'\" Levi said in a faux-Robert Shaw voice as Devika laughed, \"'he's got...lifeless eyes, black eyes, like a doll's eyes.'\" He switched back to his normal voice: \"Yeah, compared to me? You did awesome. Especially after you put on the glasses. Check this out.\"\n\nHe wasn't kidding; the aviators hid Devika's nervous eyes while granting her an air of mysterious, venue-appropriate coolness that played into her sexuality. Her poses became twice as confident and ten times hotter when they were on.\n\n\"Those glasses bring out a more assertive side of you,\" said Levi, flipping through the pictures. \"Look: Every now and then you can see somebody in the background turning to check you out. This is one of the most popular sightseeing spots in LA, and for a moment, you completely owned it.\"\n\nDevika was physically drawn to the pictures; she had no idea she could look this hot. Of course, when she leaned in, her bust hung down right next to Levi's face. He had stopped himself from turning his head, but Devika kept feeling his side-eye towards the smooth chocolate pudding-like slope of her breast, barely held in by the robe, and she knew right then that she was getting naked for him before this day was over.\n\n\"It still looks a little stiff, I think,\" said Devika. She was totally talking about her posing in the images. Sure.\n\n\"Well...yeah. I mean, that's the thing,\" said Levi. \"These are all shots where I posed you. Meanwhile, when I started taking casual shots...\" Levi pulled up some of the pictures he took of her between poses. Shots of her laughing, hanging around, looking less concerned.\n\n\"Ooh, I see it.\"\n\n\"Yeah. I think you don't really know how to take specific direction.\" Levi spun in his chair to face Devika. \"Which isn't your fault.You never had, uh...\"\n\nDevika realized he was having trouble looking her in the eye; having had her fun, she closed up her robe. \"Sorry,\" she said, giggling.\n\n\"No, don't, don't worry about it,\" Levi insisted, shaking his head. \"I'm the one who was staring, so really, I'm sorry.\"\n\nThe Angel on Devika's shoulder felt bad about being such a ruthless tease, causing him to presumably question his ethical standing. Here was a good guy trying to make her feel comfortable after she agreed to an outrageous request, and she was making him uncomfortable in turn. The Devil, of course, couldn't get enough of it. He had seen some of the world's most beautiful women in all their glory, and she's the one he can't handle? If this was a ruse, she had to accept that it was working. If it wasn't a ruse, however, it was fucking amazing.\n\nLevi quickly jumped back into his groove. \"I was saying: I think for this next set, I'm going to try not to pose you so much and see what happens when I just guide you emotionally. Sound good?\"\n\n\"Sure.\"\n\n\"Great. There's a catch.\"\n\n\"Uh oh.\"\n\n\"The concept is a girl waiting to be picked up by a date that'll never come,\" he said. \"So you can imagine I'll be asking about some heavy stuff.\"\n\nDevika shrugged it off. \"Beats running a mile in a million degree heat.\"\n\n\"True,\" said Levi. \"Plus you get to wear an awesome dress.\"\n\n<p align=\"center\">* * * * *</p>\n\nDevika applied the makeup herself this time, with no shortage of guidance from Levi, who took pictures of the process. \"Talk about something that excited you,\" said Levi.\n\n\"Moving here,\" said Devika. \"Getting a chance to build something that was mine.\"\n\n\"What was going through your head when you were getting on the plane to first fly out here?\" He added, \"Try to bring yourself back into that moment.\"\n\n\"Well, I kept feeling like there was this invisible hand trying to pull me back,\" said Devika. \"Back to my home, back to my family. Back to everyone I ever knew. Back to where I knew I'd be comfortable and taken care of.\" She barely noticed the snapping of Levi's shutter; too busy picturing herself at the security gate in Wayne County Airport, hugging Mom and Dad goodbye, vision blurred all around by tears while quiet, encouraging sobs echoed in her mind.\n\n\"And what kept you going?\"\n\n\"Honestly? It was the obligation. It was like, 'you bought the plane ticket, you're registered at USC, you can't back out just because you suddenly think that this is no longer everything you ever wanted.\"\n\n\"When did you realize it was going to be okay? When did you get that excitement back?\"\n\n\"Well...it's funny, my flight was actually delayed; I was hoping to land in the afternoon, but the way everything shook out, I ended up making the final approach into LAX just as the sun was going down. I'd been there before for campus visits, orientation, all that stuff, but I never had a chance to actually just stop and watch a California sunset. And now that I was seeing one from the air, I just felt like, 'Yeah. This is where I'm supposed to be.'\"\n\nWhen Devika finished her makeup, Levi showed her some of the pictures he took while she was beaming about seeing her first sunset. \"Exactly what I was hoping for,\" he said, which left Devika with no shortage of pride. \"Go put your dress on.\"\n\nThe dress was awesome; it was a sleeveless red satin slip gown with a surplice front and a column silhouette. Simple, elegant, classically sexy. After she put it on, she called in Levi and asked if he somehow happened to have a matching set of panties.\n\n\"Even if you won't see them,\" she explained, \"it helps sell the attitude. If I'm going out in a dress like this, I don't want to be wearing my usual whites underneath.\"\n\n\"Uh, yeah, I get that,\" he conceded. \"Hang on one second\u2014all of this is washed, by the way.\"\n\n\"And I sure do appreciate it.\"\n\nLevi came up with lacy red hipsters that matched the dress perfectly. After leaving for a moment so Devika could put them on, he completed the ensemble with a pearl necklace, gold bracelet, and matching clutch, and directed her to check herself out in the mirror.\n\n\"Do you like it?\" he asked.\n\n\"I'm half-tempted to fantasize about buying it from you,\" said Devika. \"How much did this cost?\"\n\n\"Enough,\" said Levi, shooting while Devika twisted herself in front of the mirror, taking particular interest when she stuck her leg out of the high, dramatic slit of the dress. \"I shoot fashion shows for people in exchange for a wardrobe, so I don't really know how much this cost. You really do wear that dress, though.\"\n\n\"I'm assuming you want me to feel really happy and excited now to contrast with how dejected I'm supposed to feel later?\" Devika said this without losing any of her perkiness.\n\n\"That's the plan.\" Levi snapped away as Devika treated herself to one more twirl in front of the mirror. \"Let's move to the couch and put it into motion.\"\n\nDevika took one last look at herself in the mirror; probably the 20th \"last\" look she'd had. She tried to remember the last time she looked this pretty and couldn't come up with anything; she had simply never worn a dress this nice before, not even to her prom. Oh God, this dress must be a pain in the ass to maintain somehow. Is there a wrong way to sit on it? What if I\u2014\n\nShe had an idea. \"Hey, Levi, maybe you should give me direction at first, make me self-conscious about how I look.\"\n\n\"Really? What are you thinking?\" Levi motioned Devika to follow him.\n\n\"I'm thinking that if I'm going out, I don't want to ruin the lines of my dress, so I'm going to sit really carefully and awkwardly, right? But as the night goes on and the date doesn't show up\u2014\"\n\n\"You care less and less. I like that! Let's give it a shot!\"\n\n<p align=\"center\">* * * * *</p>\n\nThe TV area by the front door was now set up like the photo studios she saw in movies, with umbrellas attached to lamps that shone on the couch after the light bounced off them. The bay window was covered from the outside with a blue screen, blocking any light from seeping in. All across Devika's body, her nerves pressed against the underside of her skin and her stomach churned, suddenly reminded that she was a total amateur walking into a quasi-professional situation.\n\nYou're anxious, she reminded herself, and that's exactly where he wants you. Her eyes darted back to Levi, smiling, gentle, beautiful, and she realized that she had this.\n\n\"Okay, take a seat like it's your first day of class and you want to get on the teacher's good side.\" Devika sat down carefully, back straight, hands on her knees, her toes doing a little tap-dance while her heels remained grounded.\n\nLevi snapped his pictures\u2014POP POP POP, lights flashed in startling succession, throwing Devika off balance. \"Oh, yeah, you wouldn't have expected that,\" said Levi, mentally kicking himself. \"Sorry. The lighting rig here works a little differently.\" \n\n\"No, it's fine,\" said Devika, pulling herself together, \"I can get used to it. Let's try that again.\" When she first said it, she was just trying to keep things rolling. Shortly afterward, she realized it was true; she got used to being on camera over the course of the outdoor shoot, after all.\n\nPop-pop-pop! In fact, she was already mostly used to it. The flashes and bangs made it feel more real, more glamorous. Like she was actually a fashion model and not just moonlighting for a day to impress some guy.\n\nPop-pop-pop! \"Good, good. Smile for me,\" he said, and she did. \"A little wider,\" he said, and she complied. \"Okay, ignore the camera. Put yourself in your own little world. Think about a guy you really like.\"\n\nUnfortunately, the guy she really liked was the guy holding the damn camera she was supposed to ignore. Who else? Well, there was Sandip. Cute, reliable, kind, cute, smart, funny, cute...did she remember that he was cute twice?\n\nPop-pop-pop! \"Perfect!\" Devika suddenly giggled, and Levi snapped pictures of that, too. He pushed some buttons on the back of the camera, then approached her, bringing her attention to the camera's display. \"Here's what you looked like before,\" he said; it looked like Devika was posing for an awkward school picture. \"Now, here's what you looked like when I asked you to think about a guy.\" She looked like she was daydreaming; excited, nervous, exactly like she'd look if she was waiting for a dream date.\n\n\"Nice,\" Devika observed. With a friendly grin, she cheerfully instructed Levi to \"Never listen to my ideas again.\"\n\n\"Your ideas got me this pose,\" Levi assured her. \"I just needed the face.\" He went back into position. \"Who was the guy you were thinking of?\" he asked. \"Do you mind me asking?\"\n\n\"Not at all!\" Levi continued snapping away as Devika talked. \"His name's Sandip, he was the son of my mother's friend, and we used to play together all the time when I was growing up. And then as we got older, I started to notice that he always seemed to be the most handsome guy in any room.\"\n\n\"And he must've noticed you were the most beautiful girl in any room.\"\n\n\"Yeah,\" Devika said, drawing the word out, raising her eyebrows, causing Levi to shrug as if there was nothing else he could reasonably say to that, \"but not in the way I would've liked.\"\n\n\"Really?\" Pop-pop-pop! \"Well, what did you like about him?\"\n\n\"He was strong; stronger than he realized, I think. And he loved to love things. When everybody was growing up and trying to look cool by talking shit about whatever was popular, he just jumped into his passions with his whole heart and ignored the things that bothered him. He didn't care how it looked. I mean, that's so rare. And he always listened to anything I had to say. He didn't always know exactly how to respond\u2014actually, he's a real smartass, it drives me crazy sometimes, even now\u2014but he always made me feel better just by being there.\"\n\n\"So what happened?\" Levi had been taking pictures the entire time; Devika barely noticed the flashbulbs. \"Why didn't he go out with you? Did you ever ask him?\"\n\n\"Well, the thing is, we were too alike. We both loved computers, we both hated growing up in Taylor, we both thought David Archuleta was cute...\"\n\n\"Okay, so...?\"\n\nDevika motioned for Levi to put two and two together.\n\n\"Oh,\" he said. \"OH,\" he added.\n\nDevika laughed. \"We did end up going to prom together, though. We had a great time, too,\" she said. \"And he knew how I felt about him. I think he even felt a little guilty that he couldn't reciprocate, but I was all right. I've been rejected in worse ways...but I should probably save that for the depressing part of the shoot.\"\n\nLevi nodded. \"Speaking of which: I'm gonna shoot you for a while with no guidance. Feel free to riff, do whatever, but once you start feeling the boredom and frustration kick in, embrace that. Let me see it in your face and poise.\"\n\n\"Got it.\"\n\nLevi snapped away for a good five minutes while Devika tried different poses, some basic, some silly. A precious few of them were flirtatious, like the one where she laid on her back, her right leg up in the air, the skirt of her dress falling away to reveal a long, luscious leg darkened by her pantyhose and the beginning of its curve into her rump.\n\n\"You're okay with that?\" Levi asked.\n\n\"I think so. Why, am I showing anything?\"\n\n\"Not really. Some women...don't like showing that much thigh, is all.\"",
        "\"Ah.\"\n\n\"I mean I'm fine with it, you've got gorgeous legs, I love shooting them, I just want to make sure\u2014\"\n\n\"Breathe, Levi.\" Devika smiled. \"No second thoughts here.\" Her only worry was if she was going too fast for him, though he looked pretty cute when he got flustered.\n\nLevi took her advice, breathing out in relief. \"You know, I can tell you a story about my big crush if you want,\" he said. \"Quid pro quo and all.\"\n\n\"Sure.\"\n\n\"Her name was Mari. Always nice to me whenever we talked, but we never really hung out outside school...and you know what? There's no story here, I'm sorry.\" Devika laughed. She was sure she wasn't supposed to laugh, but Levi snapped pictures of it anyway. \"Yeah, I never asked her out, we graduated, she married a guy she met in college, the end. No moral.\"\n\nDevika found this fascinating and a little hot. \"But now you see a random girl minding her own business on a morning jog,\" she wondered out loud, \"and you go after her. What changed?\"\n\n\"I don't know if anything changed, really,\" said Levi. \"I loved your look, I was desperate to do this shoot, I was tired of not taking chances...I was kinda running after you before I even realized I was running after you, if that makes sense.\"\n\n\"Sure,\" Devika said with a smirk. \"Good to know I'm irresistible.\"\n\nShe could tell from the brief silence before his response that Levi was trying not to tug at the collar of his shirt. \"Yep,\" he finally admitted. \"That's you.\"\n\nAfter Levi slipped some amber gels in front of the lights, giving the room a sunset glow, they continued shooting. Devika kept looking for more and more interesting poses, and the only direction she got from Levi was what didn't work\u2014which was the point. The lack of positive reinforcement would create frustration, the lack of movement would create boredom, and it would build and build until Levi finally said \"I think we got our second act. Thanks for bearing with me.\"\n\n\"Sure thing,\" she said with a sigh. \"Whatever works.\"\n\n\"Wanna take a break?\"\n\n\"No, no, I think I can use this mood.\"\n\nLevi seemed to light up. \"Wow,\" he said, snagging a couple of profile close-ups, \"that is not what I expected to hear.\" He put the camera down and grabbed a couple of blue gels from the island counter.\n\n\"Just like a professional, huh?\"\n\n\"I think we're a little beyond 'professional,' Devika.\" Levi winced. \"I mean, in a way.\" While Devika squeed inwardly about how often she was catching this hipster snack of hers on the back foot, he changed the gels, flooding the room with midnight lighting, and was plowing ahead with some more direction as he changed the lens on his camera. \"Okay, so for this next part, I want you to bring yourself back to a time in your life that you were disappointed or hurt.\"\n\nShe actually didn't have to go back too far. Given proper warning, she had intended to reflect back on a high school \"boyfriend\" who turned out to be an utter shitheel. Instead, she found herself suddenly thinking about work and how much she dreaded going in on Monday.\n\nShe had no life. She had no respect in the office. She had no family she could lean on out here. Within this moment, it felt like all she had was this fantasy, this little play at being a model for a day with a guy that she admired on so many levels, and it would soon be over and the goddamn bro squad over at Umbrla was going to determine whether or not she was going to keep making money for the immediate future. And if they did, fucking nothing would change and it would happen again in another 3 months.\n\n\"Oh...\" Levi started to say something but opted to quietly take his pictures. \"Lay down, on your back,\" he gently suggested at one point, and she did, raising her hands in front of her face, examining her fingers for no particular reason as Levi's camera shuttered away. \"You okay? You don't have to talk to me about it, that mood you found just seems really raw and I want to make sure you're not stuck in it.\"\n\nDevika gave him a weak smile. \"Thanks,\" she said. \"I'll be okay. I was just thinking...\"\n\nWell, she could tell him about work, but that seemed boring. She wanted a good segue into naked time. She wanted to give him an opening to be courageous. She wanted to use her shitty high school boyfriend as a positive for once.\n\n\"I used to go out with this guy in high school. He was sweet and kind, and yeah, pretty hot, and after a few months of dating, I said, 'heyyyy, you know, I think I'm ready for it.' So it happened: In his room, to a Pitbull album while his parents were out of town. And it wasn't, like, bad. But a couple of days later I overheard him talking shit to his friends about how he was 'smashing terrorist pussy.'\"\n\n\"Jesus Christ!\"\n\n\"I'd like to say I beat the shit out of him,\" said Devika. \"But it probably looked more like a little kid throwing a tantrum, fucking asshole laughed through the whole thing. If I'm being honest...\" She looked right at Levi for the parting shot. \"...I'm still not over it.\"\n\nHe had an idea.\n\nDevika could see his eyes flash with some kind of emotion. There was something he wanted to tell her that he then made a conscious decision to repress.\n\n\"What?\"\n\n\"I was just thinking, I had this girlfriend at SFAI\u2014\"\n\n\"That's not what you were thinking!\" Devika laughed. \"You looked like you just had an idea. What was it?\"\n\n\"Nothing, really.\"\n\n\"It's okay, I want to hear it.\"\n\n\"I'm not sure you really do?\" He seemed to be itching to share, though.\n\n\"Levi. I wouldn't be here if you didn't have a little courage earlier. Have a little more now; the worst I can do is say 'no.'\"\n\n\"I kinda doubt that.\" Levi scratched his neck. \"But so we're clear, you CAN say 'no' to this. It's one of those questions.\"\n\n\"Fire away,\" Devika said, with her warmest, most welcoming smile.\n\n\"Okay, well...\" Levi took a few moments to gather up the nerve. \"If you didn't like your first time that much,\" he finally asked, \"then what did you WISH your first time was like?\"\n\n\"Interesting!\"\n\n\"But weird and totally unprofessional.\" He was starting to sound like a nervous little boy and Devika was loving it. \"So if you want to move on\u2014\"\n\n\"Not necessarily! I mean, I'm assuming you want to photograph something along those lines, right?\"\n\n\"Well, that would push things into full-on erotic territory, which I doubt you're interested in. I did have an idea that would require nudity, and I'd be willing to pay more, but if you're not comfortable...\" Levi shook his head and made a cutting motion with his hand. \"End of discussion.\"\n\n\"Hm.\" Devika made a show of weighing it, drinking in the ways Levi's face contoured in barely-restrained interest, telling himself to not be so damn hopeful. Finally, she asked, \"How much more?\"\n\n\"How much were you thinking?\"\n\nDevika's mind locked up. \"Um...I was thinking you'd give me a number.\" She would've stripped for him free of charge at this point; what she really wanted to know was how badly he wanted it.\n\n\"Okay, let's see...let me just...\" Levi excused himself and ran back to his studio, returning with two post-its and two pens. \"Right now you're getting fifty an hour. You write down how much you'd be willing to show and a number you'd be happy to get for it. I'll write down mine, we'll fold the papers up, trade, and open at the same time. Then we'll see if we can find a happy medium. Sound good?\"\n\n\"Let's do it.\" Devika took a pen and paper from Levi, and he retreated to the kitchen counter.\n\nIt was a little easier than Devika thought it'd be. She was willing to do full nudity, so she assumed that would mean triple the rate. Add a little more to compensate for the risk of the pictures getting leaked, plus the fact that she probably wasn't going to parlay them into more work...but maybe then take a little off from that so she wouldn't intimidate the poor guy...\n\nDevika arrived at $175 / hour. She was probably looking at $100, maybe $125 if she was lucky, but she wasn't terribly concerned about what she deserved. After all, after adding in the $100 from the two-hour jogging shoot (one hour in makeup, one on set), she'd be getting more than a typical day's pay for an afternoon of work. From a purely financial angle, she was ecstatic. \"All set,\" said Devika, folding up her paper.\n\nLevi walked over, folded offer in hand. \"My offer's for full nudity,\" he explained, \"but don't freak out if you'd rather just do topless or whatever. That's how we figure out the final number.\" Devika suppressed a smirk, and they traded papers. On the count of three, they both opened their offers.\n\nLevi was offering $350 / hour. Retroactive.\n\n\"Uh,\" started Devika.\n\n\"Shit,\" finished Levi, looking at Devika's lowball.\n\nDevika blinked. \"You can afford this?\"\n\nLevi cringed. \"Well...so my family's actually rich?\"\n\n\"Bullshit.\" She said this, yet she didn't catch so much as a hint of a charm offensive from Levi's eyes or voice.\n\n\"No, seriously,\" he said. \"'Fisher' is my mom's maiden name.\" He crossed over to the counter and handed Devika her phone. \"Google Phil Reubenstein, Jr. R-E-U-B-E-N-Stein. I'll be back.\" Levi slipped out to his room.\n\nDevika typed his already-familiar name into her phone; according to Wikipedia, Reubenstein was a Wall Street guy who made his money in the 80s, moved out west in the 90s, then made even more money as a producer of slick and kind of schlocky action movies. His shingle, Oak Road Pictures, had given Paramount several hits over the last couple of decades including the disaster thriller SOS, classic buddy flick Blue Fire, and off-brand WWII drama The Rains of November, which caused Devika to break up with her college boyfriend after he wouldn't stop fucking riffing on it. The superhero stampede in Hollywood had reduced his standing, but he was still cranking out movies through Netflix and apparently kept his nose for good investments; his net worth stood at about $7.3 billion. His picture showed him as a bit of a silver fox; deep tan, well-kept hair, laid-back smile.\n\nLevi returned with a framed picture; a family photograph. He pointed them out: \"Me, my brother Dave, my mom Lisa\u2014\" His finger slid above Reubenstein's smiling face. \"\u2014and my dad.\"\n\nDevika's eyes bugged out of her head.\n\nWell.\n\nHuh.\n\n\"Yeah,\" Levi said with a cringe, \"I take it you have questions.\"\n\n\"Wh...um, what are you doing here?\"\n\n\"Honestly? I prefer to use my trust fund for charity and cushioning. I'm never going to be 'on my own,' but I take a lot of pride in making my own money on my own talents. And you know, this place has been kind of good for my soul. Low overhead by LA standards, cool neighbors, great fish tacos...\"\n\n\"Those fish tacos were good,\" mused Devika, before getting back to the point. \"Why didn't you tell me when I was, like, concern trolling you about this place like an asshole, though?\"\n\n\"Yeah, you were confused. You heard 'Palisades,' you thought you'd be walking into a modernist mansion, and you got this instead. You weren't being an asshole. Me, I grew up with assholes. I used to know kids who probably lit puppies on fire because they knew they'd get away with it.\"\n\n\"Ohh,\" whined Devika, her heart breaking a little for the hypothetical puppies.\n\n\"Look, what I mean is, rich people suck. And I'm including myself; I was a spoiled little prick when I was a teenager. Now that I'm trying something different, I'd rather it not be the first thing people know about me. I'm probably fucking that up in my own way, but what's the harm in trying, right?\"\n\nDevika nodded. \"Totally understandable,\" she said. It wasn't that big of a leap from \"celebrity must suck because there's no corner of your life that's off-limits\" to \"it's so easy to prejudge someone based on their wealth.\" Levi was a bit of a tourist, sure, but he never treated Devika with anything less than the utmost respect, and she knew he'd continue to do so.\n\n\"Listen,\" he said, \"if you're not comfortable with this anymore, I understand.\"\n\n\"No, I'm all in. Look, I lied to you too. That place I went to earlier when I had to be depressed? I've got a job in tech that I really hate. I don't mind paying my dues, but my co-workers are arrogant pricks, my bosses are douchebags who think they're cooler than they are, one of them called me an 'ethnic' last week...\"\n\n\"Yeah, that sounds like tech.\"\n\n\"Yeah, well...I like being the center of attention for once. I like that I've got you tripping over your own tongue. I really don't want this to end! But it's going to end at some point, and while I'm here, I might as well take it as far as I can, right?\" \n\nLevi nodded. \"All right, then. 350 an hour, full nudity?\" He reached out his hand to complete the deal.\n\nDevika shook her head. \"Two hundred, starting with this set. I'm not doing enough work to justify 350.\"\n\n\"You sure?\"\n\n\"Positive. Any more than two hundred gets into 'indecent proposal' territory for me.\"\n\nLevi smiled and shrugged. \"Fair enough! Two hundred it is.\" Devika gladly shook his hand on that. \"One last thing; might sound discouraging, but I don't mean it that way.\"\n\n\"Go for it.\"\n\n\"Take a seat.\" Levi motioned for her to sit on the couch. When she did, Levi sat next to her. \"So once I tell you to start unzipping the dress, or maybe even a little before that\u2014hell, are you feeling a little anxious now that you've agreed to this?\"\n\nAs a matter of fact, right on cue, her heart was starting to flutter, and she could hear vague, confused voices in her head asking Wait, what did we just agree to? that would almost certainly evolve into OH MY GOD WE DID NOT AGREE TO THIS RUN AWAY. Devika had shed her conservative upbringing shortly after coming out here, but it still manifested itself in other ways. \"Actually, yeah,\" Devika said, giggling the way one would before their first bungee jump. \"Yeah, I'm starting to freak out a little.\"\n\n\"Okay, well, two ways you can approach this. One, you have got an amazing body. What's your routine? Obviously you run, how often?\"\n\n\"Um, every day. And I hit the gym three times a week. I don't think my diet's anything special, but\u2014\"\n\n\"I don't know what your diet is, but it's fine,\" said Levi, breaking into her nervous ramble. \"You're soft, smooth, and filled out in all the right places. You're beautiful, and you should be proud. So why not show all of yourself off? Why not be somebody other than the me...the put-upon tech worker for one day?\" Levi scratched the back of his head. \"Sorry, I was going to say 'meek,' but that's clearly not you.\"\n\n\"Oh no,\" said Devika, giggling some more. \"When it comes to my job, 'meek' definitely works!\"\n\n\"Okay, well, that's one way to look at things. The other way is...you are a smart, funny, beautiful woman. It comes through in every last picture I've taken of you, even the awkward ones. You've shared a lot of yourself today, and if you feel that there's a part you'd rather save for someone special, someone who's earned your trust on a very personal level, that's okay too.\"\n\nA little dust got into Devika's eye; she casually wiped the resulting tear away before it could get too far. Levi had to be the sweetest man to ever ask her to strip naked.\n\n\"Look,\" Levi continued, \"I can't tell you what to do when the moment comes. I'm only here to make you look good on camera. At the risk of sounding pretentious, your only responsibility is to portray yourself honestly, whether you're bold and adventurous or reserved and modest. I hold all of those things in equal regard, and I will be grateful for and respectful of whatever you decide to share. All right?\"\n\nDevika nodded, suddenly at ease. \"Thank you,\" she said with a breath.\n\n\"Anytime,\" said Levi, patting her on the shoulder. He left his hand on her bare skin for just a little longer than he probably should have, long enough for her to relish his gentle touch, then he pulled away and snapped back to his feet. \"Yeah, okay, let's get back into the rhythm.\"\n\nDevika thought \"rhythm\" was a good word for it. For a moment she had forgotten that she was doing a photoshoot, and found herself trying to get used to the snaps of the camera and the pops of the bulbs all over again. She went back to simple busywork to create the illusion of waiting; tousling her hair, stretching her limbs, checking herself out in a compact Levi loaned her.\n\nEventually, he asked, \"Why tech?\"\n\nThe question was so simple Devika actually needed a moment to remember how simple the answer was. \"It's...what I'm good at,\" she said. \"It's my thing, it's what people come to me for.\"\n\n\"Did you ever see it taking you anywhere beyond being a drone at...wherever you are?\"\n\nDevika lounged back on the couch, prompting more pictures. \"Not really,\" she said. \"But for me, my work is...well, it's just work. It's not a calling, it's just a grind.\"\n\n\"What is your calling?\"\n\nShe was silent for a relative while before admitting, \"I'm not sure I have one, not like you.\" Devika raised her arms in surrender above her head, crossing one leg over another. \"I always thought I'd find it outside of work. Between the gears, you might say.\"\n\n\"Doesn't seem like it's gotten you too far,\" said Levi, snapping pictures.\n\nDevika closed her eyes and shook her head. \"But it's a marathon, not a sprint, right? I mean I can't just quit, then what would I have?\" A thought occurred to Devika that made her smirk in recognition. She opened her eyes and looked at Levi like the clever little bastard he was. \"You might say I'd be naked without it.\"\n\n\"You might,\" Levi acknowledged.\n\nDevika looked him over; his face was patient, eyes free of expectation, hands still with anticipation. Regardless of any line he fed her about not having to undress, it was obvious that Levi was, as Cassie put it, thirsty as hell. And ultimately, this wasn't part of some higher calling; this was all for one rich white guy. He just happened to be upfront (eventually), respectful, and incredibly friendly, the kind of guy she'd want to date even if he wasn't loaded.\n\nOf course, she'd never gotten naked for anyone on a first date. But there was always a first time for everything, and while this might have been for him, that didn't mean she couldn't do this for herself.\n\nDevika kicked her shoes off.\n\nPop-pop-pop! Pop-pop-pop!\n\nTook off her bracelet. Unsnapped her pearls.\n\nPop-pop-pop! Pop-pop-pop!\n\nShe reached behind her and began to unzip her dress.\n\nPop-pop-pop! She flinched. She looked at Levi; before she could apologize, he nodded, patient as ever. His words echoed in her head: Portray yourself honestly. Sure, she had a wild streak. She wasn't a stranger to raunch. But at heart, she was a modest woman who preferred to keep her antics behind bedroom doors. She was shy. She was reserved.\n\nAnd she decided she was done being that way, if only for now.\n\nThe dress was still a little too snug to take off, so Devika reached behind her once more, powering through the pops of the lights until she could feel the top of her dress fall away from her skin. Then with both hands, she took hold of the dress and slid it downwards, away from her breasts.\n\nPOP-POP-POP!\n\nThere it was; Levi snapped the picture as soon as her dark chocolate nipples came into view, creating a permanent record of her body's more intimate details. As Devika fought her reflex to cover up, she tingled with complicated emotions; the exhilaration of her liberation, the shame of her scandal, the...arousal? Yeah, definitely arousal over being exposed in such an enduring way. But given that she already knew she was attracted to Levi, she had no problem taking it as it was while her mind worked to assure her body that this was no mistake.\n\nOf course, this wasn't Levi's first naked rodeo, and he knew exactly what to say, starting with, \"Beautiful, Devika. You're absolutely beautiful.\"\n\n\"Thank you,\" Devika breathed with a smile, looking at him with gentle, thankful eyes, warmth washing over her skin, arousal trickling between her lips. She turned her dress around to more easily unzip it the rest of the way, then pushed it down over her smooth cinnamon body, still clad in a lace thong that matched the red of the dress.",
        "\"So, uh, let me ask you something,\" said Levi, casually floating from one end of the set to another, snapping pictures at various angles. \"You watch any movies?\"\n\nDevika let go of the dress, now pooled around her hips, and covered up her breasts. \"Why?\" she asked between giggles. \"Am I about to re-enact a scene from Showgirls?\"\n\nLevi held up his right hand. \"Honest-to-God innocent question,\" he swore.\n\n\"It's just a weird question to ask me when my boobs are out!\"\n\n\"Just roll with me on this,\" said Levi. \"There's a method here, I promise.\"\n\n\"Well...I don't really have a ton of time for myself because I apparently signed my life over to Umbrla when I took a job with them, but\u2014\"\n\n\"Wait, did you say Umbrla? That's the tech job you've got?\" Devika nodded, and Levi cringed. \"Ohhhhhmigodddd,\" he groaned. \"You're going to have to convince me not to add an extra $50 to your rate because I feel SO sorry for you.\"\n\n\"You've heard stories, huh?\"\n\n\"I've GOT stories,\" Levi said, crouching to her level to take more pictures. \"I used to go to school with Tucker Handel, that little bitch.\"\n\nOh God, Devika thought. Tucker Handel didn't visit the peons regularly enough to be thought of as a direct threat. Still, she knew enough about him to want to know more, such as \"Did he call himself the Head...nnn In Charge back then as well?\" \n\n\"No, but\u2014\" Devika could see Levi's brain spasm through his fine eyes. \"N...no, he...what?\"\n\n\"That's what's on his business card,\" said Devika, sitting up, framing the words out with her hands. \"Tucker Handel. HNIC, Umbrla.\"\n\nLevi's face froze exactly the way it was, at the moment before he lost his innocence. Then his head started to shake in disbelief, only for him to mutter \"Of course he would. Of course he would.\" Levi rose and began meandering around the room, camera hanging off his neck while he brushed his golden hair back.\n\n\"Full disclosure,\" said Devika, \"he probably pronounces it with the gah, not the hard R. So, you know, totally not racist.\"\n\n\"Really?\" Levi was laughing now, relaxing off of Devika's joke. \"Because Tucker was totally racist when we went to school together,\" he continued, returning to set. \"One time at school, day before Thanksgiving break, turkey was on the menu. I'm eating with Mari\u2014who's half-black, half-Mexican, by the way\u2014I'm working up some courage to try and say more than five words to her, see what she's got planned for the weekend.\" Levi shook his head and readied his camera before he practically spat out the punchline: \"Tucker shoves himself into our table, starts playing with the turkey he gets, and says 'GOTTA SEPARATE THE WHITE MEAT FROM THE DARK, AM I RIGHT? HEH-HEH-HEH-HEH-HEH!'\"\n\nDevika's hand snapped to her mouth to cover her shocked, mortified laughter, and Levi snapped pictures of it. \"Yeah,\" he said. \"I'd like to apologize to you and every minority in the world for not punching him in the face right fucking there.\"\n\n\"I'm sure that would've made things so much different,\" Devika said, recovering her composure.\n\n\"I was shellshocked.\"\n\nA pleasant breeze across her nipples from Levi passing close reminded her, oh yeah, this was a photo shoot, she was topless, and was working up to \"naked.\" There was a slight rush of embarrassment, but it passed quickly; turned out Levi really did have a method.\n\n\"Anyway,\" said Levi, \"fuck Umbrla, fuck Tucker Handel, and fuck white people.\"\n\n\"Even you?\" Devika batted her eyelashes.\n\n\"Even me,\" chuckled Levi, blushing for a moment. \"Yeah. Ready to lose the dress?\"\n\nDevika nodded; she hooked her thumbs into the dress bunched around her waist and slid it down her long legs.\n\n\"You get the metaphor I'm going for here,\" said Levi, \"so once the dress is off, just kinda show me how you feel about it.\"\n\nHer first instinct was to fling it away, but she couldn't; something about the satin texture caused her to stop and consider it. She laid her mostly naked body back down across the sofa, her large breasts splaying outwards to her sides, and unfurled the dress atop her, running her fingertips across its satin fabric. It really was a beautiful dress\u2014she recalled when the shoot started that she worried about wrinkling it, and she looked it over remembering how well it fit her, how comfortable she was in it. How she should have felt proud to have worn it. How she could have felt proud if only someone (else) wanted to see her in it (and it wasn't so absurdly racist), and how proud she was to be seen in this whole other way, beyond the dress.\n\nWell, as long as \"This looks good, right?\"\n\n\"Oh yeah, sorry,\" affirmed Levi, \"it looks excellent!\"\n\n\"You're sure I don't need to act out what's going through my head more? It's kind of this weird mix of wistfulness and acceptance and excitement...\"\n\n\"Hm. I'm picking up the wistfulness, and that's enough for me, but let me...okay, roll onto your stomach, but keep holding the dress to your arms.\"\n\n\"You sure? I don't want to\u2014\"\n\n\"Ruin it? That's what dry cleaners are for. Let's give it a shot.\" Holding the dress to her arms, Devika did as told while Levi pulled out his phone. \"This might go a little too far in the other direction, so let me play some music to bring it back.\"\n\nA few taps of his screen later, a song started through the speaker of Levi's phone. The introduction of the song seemed familiar; gentle and glittery, laced with a hint of gloom.\n\n\"Your body's covering the dress,\" said Levi. \"Move it up so that your head is resting on its middle.\" Devika did so, draping the top of the dress over the armrest. Pop-pop-pop! \"Good, good.\"\n\nA woman started singing in French, and that's when Devika recognized the song as \"Saint Claude.\" \"Christine and the Queens,\" Devika identified the band with an impish grin. \"You fucking hipster!\"\n\n\"Oh, I'm the hipster?\" Pop-pop-pop! \"You recognized the band in under a minute!\"\n\nMore specifically, Devika recognized them from her last year of college, when her then-boyfriend, a film student, was explaining the finer points of the difference between \"mood\" and \"tone\" with his penis. But she didn't want to be that brazen. \"I may or may not have a type,\" she cutely offered instead, her grin getting wider if anything.\n\nLevi glanced downward, smiling. When he looked up, he sailed right past the question: \"Push your ass up a bit,\" he said, and she followed, inwardly celebrating him not saying \"hips.\" \"No, too much, down a little,\" he corrected.\n\n\"Oh, sorry.\"\n\n\"No no, all in the game. A little more\u2014a little less\u2014perfect.\" Pop-pop-pop! \"Just wanted to emphasize the curve a bit,\" he explained, putting down the camera and looking her over. \"Though now that I think about it, this pose might look better without the panties and stockings. Is that cool?\"\n\n\"Sure,\" said Devika. She moved to pull her arm out from underneath but stopped before it could be more than a twitch. She had an idea. A mean one. \"Actually,\" she said, \"I'm worried I'll lose this pose. Would you mind taking them off for me?\"\n\nA very loud pause. A very quiet \"You're sure?\"\n\n\"Yeah,\" said Devika. \"It's fine, I trust you.\"\n\nLevi nodded and approached Devika from behind. Christine of The Queens launched into the chorus for \"Saint Claude\", and Devika glanced back as far as she could without breaking her pose too much.\n\nUnfortunately, she couldn't see him, but she could feel him, careful yet firm as he rolled her stocking off her right leg. She turned her head back and closed her eyes, relishing his fine fingertips over her firm flesh, running an unbreaking trail downwards from thigh to calf to foot that sent heat streaking up to her lips. He repeated with her other leg, so gentle and sweet yet with such control...\n\nThen she felt him take hold of her panties and slide them over her rear, fully exposing her ass to him; she couldn't help but give him a slight wiggle that she hoped could halfway pass as a nervous twitch, just to keep him wondering. Soon the panties were off, Devika kicking each leg back a little as each foot was released from the lacy undergarment, and then she was as nature, smiling and nervous and free.\n\n\"Give me one second,\" said Levi, walking off the set and into his kitchen, behind his counter. Devika craned her head as high up and discreet as she could and saw him make some kind of adjustment below his waist. Before she could take too much pride in her effect on him, he called out, \"So you never answered my question.\"\n\n\"What question?\"\n\n\"Favorite movies?\" Done with whatever funny thing he had to do, Levi went back to set and resumed snapping pictures. \"I know you were saying you were a little too busy to watch them, but do you ever find time for any?\"\n\n\"Well,\" said Devika, \"it's a little basic for your tastes I'm sure, but I'm big into superhero movies.\"\n\n\"Marvel or DC?\" There was a certain clipped urgency to Levi's voice, like he was trying to rush so he could be somewhere...or possibly relieve some private pressure. Discreet as she could manage, Devika glanced at his shorts and noticed a fairly vague but very large bulge around his crotch.\n\n\"Both,\" said Devika, \"though I lean toward DC. Fewer movies to keep track of, more complicated and, I dunno, psychological.\"\n\nShe squeezed her thighs together, suppressing the urge to rub herself as she pictured the shirtless wannabe model from SFAI standing over her, eyes no longer black and lifeless but bright and wide as his mouth, gasping for air as he stroked himself furiously.\n\n\"You know, I'm pretty comfortable right now,\" said Devika, equally clipped now. \"You don't have to make small talk. If you wanna just run to the bathroom...\"\n\n\"Oh no\u2014I mean, I do, but there's just one more pose and we're at the end of the hour anyway, so...\"\n\n\"No, I'm just saying, if you need to go\u2014\"\n\n\"I can wait, it's fine.\"\n\n\"\u2014then maybe I can help?\"\n\nIt just came out; Devika was too horny because Levi was too horny and the dam just cracked, leaving the both of them in silent awe of the flood that was about to wash them away. Christine launched into the bridge of her song, the recording indifferent to the energy of the room yet fueling the atmosphere all the same.\n\n\"Sure,\" said Levi, before he could realize what that last word meant. \"I-I mean, no, that's okay\u2014\"\n\n\"Mm-hmm.\" The arousal all over Levi's face was too obvious for even Devika to feel embarrassed.\n\n\"I mean, you're very beautiful\u2014no, you're fucking amazing, I want to, but, um, I don't want you to regret anything?\"\n\n\"No, I hear you.\"\n\n\"Like, 'Oh fuck, I slept with the guy who took naked pictures of me, he said he was a professional, now I...' Uh...\"\n\n\"Feel like a cheap slut?\" Devika had a wry smile on her face. She already felt like a cheap slut. It was actually kind of liberating.\n\n\"I...\" Levi was clearly trying to walk it back but could only get one letter deep.\n\n\"Levi? You're very cute when you're neurotic, but let's just get that last pose.\" She said it with a light lilt that showed nary a trace of a hard feeling, which seemed to put Levi at ease.\n\n\"All right...dress on the floor, on your back.\" Devika did as told. \"Arms up, over your head,\" Levi said, arranging the clothes in a specific setup, dress on one side, shoes on the other. \"Relax. Feel the music.\"\n\nDevika stretched herself out on the sofa, linking her hands together; for the first time, breasts and bush were exposed for Levi and his camera. Pop-pop-pop!\n\n\"Move your right hand over your...uh...your area.\" Devika looked at Levi, eyebrows raised in mischief; he was kneeling on the floor, flustered. Pop-pop-pop! \"Sorry,\" he said, \"I'm usually more casual about this, I swear.\" Presumably, he was taking his shots from a low angle that framed her and the couch between the dress and the shoes; divorced from this context, he looked like he was pleading to an irascible higher power.\n\n\"It's okay,\" said Devika, sliding her right hand down her body.\n\n\"Just let it kinda fall on there...that's it.\" Pop-pop-pop! The last few moments were a cool breeze of directions and flashes. \"Head up.\" Pop-pop-pop! \"Arch your right leg.\" Pop-pop-pop! \"Okay, on your side, towards me. Keep covering up. Look at the TV.\" Pop-pop-pop! \"Good! A little more wistful.\" Pop-pop-pop! \"Okay, more detached, bored. You're doing great!\" Pop-pop-pop! \"Okay, on your other side...\" Pop-pop-pop! \"Flare your ass for me just a bit...\" Pop-pop-pop! \"...and I think we've got it!\"\n\nDevika turned back and sat up, beaming with pride that dulled only a bit when Levi tossed her a robe.\n\n<p align=\"center\">* * * * *</p>\n\nCleanup took only a few minutes, but Devika was happy to help with whatever she could. Likewise, the portrait studio was just a few steps away, but Levi wanted to walk them with her all the same.\n\nHe said, \"So I was thinking...dinner? Not tonight, but maybe Monday night, after my next shoot?\"\n\n\"Mmm, you know, I would, but my work schedule is 8 to 8. It'd have to be a quick bite.\"\n\n\"Hey, that's fine. Maybe we can do something more formal next Saturday?\"\n\n\"Working next Saturday.\"\n\n\"Damn,\" said Levi. \"Night never ends for you, huh?\"\n\n\"Nope.\" Devika leaned against the door to the studio. She sighed. \"And I just remembered, I've got a check-in hang on Monday\u2014no, sorry, performance review. That's what they call a performance review.\" She groaned, clutching her face with both hands. \"This job is destroying me.\"\n\nNow Levi was leaning against the bathroom door, looking up in disbelief, or maybe something else. He casually wiped his brow in thought; once again, it seemed like something was on his mind.\n\nBefore Devika could ask what it was, though, he went ahead and said it: \"You know, you could probably do this for a living if you wanted.\"\n\n\"What, take my clothes off for strangers?\"\n\n\"No\u2014well, you could do that too, but I mean modeling. Full time. Not necessarily naked modeling, either.\"\n\nDevika looked at Levi, half-expecting him to have a sarcastic grin on his face.\n\n\"I don't want to tell you it's a sure thing,\" said Levi, without a trace of jest. \"Far from it. And I'm sure you'd have reservations. It's not the fame thing; very few people actually become famous as models, so I wouldn't be too concerned about that. But it's still competitive as hell, a lot of bad actors hanging around\u2014Cat could probably tell you all about that\u2014and there's a ton of racist bullshit too. Even if you get past that, it's a constant assault on your self-esteem. You keep worrying whether you're too fat or too thin or if your eyes are too close together or anything else. Maybe you already worry about these things, but try worrying about them when looking good is literally your job.\"\n\n\"Mmm, sounds fun.\" Devika cocked her head. \"What are the downsides?\"\n\nLevi smilled. \"The thing is...you're one of the most beautiful women I've ever shot. I'm not saying that because I'm trying to get laid. If you sent some of these pictures around, I'd bet money\u2014like, change-your-life money\u2014that you'd be repped within a month.\"\n\nFor all the teasing Devika had subjected poor Levi to, hearing that still took her aback. \"Okay, Levi, I'm sure you think that's true because I've been flirting with you a little...well, a lot, and I appreciate what a good guy you are, but\u2014\"\n\n\"I'm a good guy who's been working with agencies and publications for five years,\" he interrupted. \"I'm no Hugh Hefner, but I'm not some teenager with a crush, either. Look, you want me to be brutally honest? If you wanted to do this, it wouldn't kill you to invest in some acting classes so you can learn to emote, get a better sense of how you project to others, and knock some of the self-consciousness out of you.\"\n\n\"That's fair,\" said Devika, not meaning to laugh.\n\n\"Other than that? You photograph well, you're friendly, you're easy to work with...Who in their right mind wouldn't want to be in business with you?\"\n\n\"Well, I, uh...God, I did not expect this today!\"\n\n\"Well, me neither,\" said Levi. \"And you know how self-conscious I can be. Tell you what: We don't need to hash this out right now. Think about it while I touch up these pictures over the next couple of weeks. I can give you what I have, or we can keep going and take some proper headshots, maybe even do a few other sets with you and give you a more varied portfolio to go out to agencies with.\"\n\n\"How much would that be?\"\n\n\"Just a few hours of your time.\" Before Devika could protest, Levi headed her off. \"Look, I could tell you that it's good karma for you to pay forward, or that I want to apologize for how my classmate's company treated you. I could even try to say that it's part of some convoluted revenge scheme against him so you can feel like this isn't too good to be true. But the truth is, I don't need your money, and I really like you, even if you are a ruthless tease.\" Again, Devika laughed. \"So if this is what you want, then it's your lucky day.\"\n\n\"Well, I'm flattered, Levi,\" said Devika, shaking his hand. \"Thank you! I'll think about it!\"\n\n\"Whatever you decide,\" said Levi. \"Okay, go ahead and get changed; I really have to hit the bathroom now.\"\n\nDevika turned away and Levi slipped into the bathroom, shutting the door behind him. She opened the door of the studio and took her first step inside.\n\nTo get changed.\n\nWhile Levi was in the bathroom with a hard-on.\n\nDevika looked behind her. A nasty little movie played out in her head about what might be happening, what could yet happen just behind that door, and it was making her heart pound and her pussy sweat. She closed the door of the studio without entering. Tiptoed the two steps to the bathroom. Gently pushed her ear against the door, straining to hear anything that suggested he wasn't evacuating his bladder or bowels.\n\nThere was panting. It was faint but it was there, rapid and irregular, and nobody ever panted their way through a tough shit like that.\n\nOn the surface, it shouldn't have been a dilemma. Levi seemed to want to take any burgeoning relationship between the two of them slowly\u2014which was admirable in a man\u2014and having been on the wrong end of a couple of unwanted, aggressive advances in college (that thankfully didn't go anywhere too traumatic), Devika didn't want to put anyone through that.\n\nYet the advance she had in mind was so hot; she was dripping just thinking about it. And there was a sense that Levi didn't really want to take it slow, it was just a well-intentioned courtesy extended to the girl he literally picked up off the street. He said it himself: \"I want to, but...I don't want you to regret anything.\"\n\nThe only thing she would have regretted was if she had damaged a possible friendship with an act of, well, wanton sluttery. But she never knew a guy who didn't want help from a woman he was clearly into when he was jerking off, and frankly, it was time to act before he finished up without her. She rapped her knuckles on the door three times, and before Levi could even have a chance to register the sound, she opened the door.\n\n\"SHIT,\" Levi screamed out, jumping in shock, nearly tripping on the shorts and underwear around his ankles, one hand around his boner and the other rushing to cover it up further. He'd been standing over the open toilet\u2014his target, presumably. He's about to have a new one.\n\nDevika slammed the door behind her and approached her photographer.\n\n\"I-I'm sorry,\" he said, \"I should've waited until youmph\u2014\"\n\nWith her left hand, Devika grabbed Levi by the back of the head and pulled him in for a kiss, sucking his upper lip into her mouth and tracing it with her tongue.\n\nHe's sorry? thought Devika, too committed to back out. I'm the one sexually assaulting him.\n\nThe assault, legally speaking, didn't last long; after a second to adjust to the situation, Levi took Devika's head in hand and started slipping his tongue across her lip, so she opened up and started swapping proper spit with him.",
        "While all this was happening, Devika deftly reached over to the toilet seat with her free hand and dropped it down with a loud crash. This didn't break Levi's commitment to the kiss, so she grabbed him by the shoulders, spun him around, and planted him on the seat.\n\nShe turned so that her robe would fall behind her, a soft cotton puddle for her knees to rest on. \"Oh my God,\" she heard Levi mutter when the robe fell away from her body, as if he had looked up to find debris from a space station plummeting towards him. Devika turned back around and gave her lover-to-be no additional time to admire her body, dropping right to her knees and bringing her head to his cock.\n\nThe bulge she had seen earlier was no mere trick of the light; Levi's flesh was long and thick, jutting profanely into her face from a thin sheet of trimmed pubic hair at a smooth angle. She had planned to suck him off, but there was something she needed to do first, so to show her approval she took one long lick up the shaft, drawing an erratic gasp from Levi. To steady him, Devika pushed her left hand against his chest, pinning him against the toilet tank while she drew her tongue upwards across the clean, loose skin until she captured the clear drop of precum that had gathered on his tip.\n\nLooking up at him, Devika smiled, smacking her tongue against the roof of her mouth in appreciation of his taste; a little fishy, becoming of a man on what she presumed was a mainly pescatarian diet, but novel and far from unpleasant. Levi looked back with amazed, dumbstruck horniness, watching helplessly as Devika's other hand rose to quickly unbutton his Hawaiian shirt, revealing the firm, lean flesh and soft, sinewy lines of his chest and abs.\n\nEverything Devika could have said in praise of Levi's figure was all over the naughty grin on her face as she sank back down to his thick manhood. Her left hand rested once more on his chest, connecting her directly to his quickening heartbeat, while her right wrapped around his girth, her thumb barely connecting with her middle finger. She pushed his length back, observing how the tip remarkably reached his belly button. She squeezed her hand around him, relishing the slight spongy give of his turgid arousal. It had been a good while since she'd seen any cock, longer still since she'd seen a good one, and yet her instinct was to play with it, test it, sniff it, kiss it, lick it, inching her man closer and closer to making him blurt...\n\n\"Holy shit! Please suck it!\"\n\nShe looked up, still smirking\u2014she never stopped\u2014eyes widening to ask if he was suuuuuuure even though she already knew the answer and wasn't planning to wait for it. She took one more lick up the shaft, dragging it out for as long as she could, and then fed the head into her mouth before sinking back down on him.\n\nAs long as it had been since Devika had given anyone a blowjob, it was an act that was well within her comfort zone, something that she'd been complimented on, breathlessly, time and again by her few boyfriends. She wished she could explain it, if only to the prudish high school girl that still lurked somewhere within; she just liked the feel of a dick in her mouth, even a larger one that threatened to cut off her air supply like Levi's. It was both tough and soft, flexible and rigid. A warm, living thing with a pulse and a mind of its own that at times controlled its owner. To take such a thing anywhere inside her was a pleasure; to take it into her mouth was a deeply personal honor that made her feel like she was reading her partner's mind at times.\n\nFor instance, glancing up at Levi while she bobbed and jerked zestfully up and down his length, twisting her tongue around his shaft in any direction she could perceive and strumming her fingers along his untouched inches of flesh, she could see his head tilted back, his eyes out of view. But from the way his heart beat against her hand and from the soft, somewhat hesitant moans that came from his throat, she could picture his eyes wide with shock, maybe a little panic. And from that, she could hear the voice in his head, repeatedly chanting something along the lines of, \"Oh my God, this is real, this is really fucking real.\" It was rare for her to meet a guy who was excited to get his dick wet like this; the thought of driving him wild had always excited her, but now here they were, nearly as intimate as two people could be, and he seemed just as flustered and thrilled as ever. Devika had never felt hotter in her life.\n\nShe needed to catch her breath and give her jaw a break, so with a final suck and a loud pop, she pulled herself off his cock, now soaked with her drool, and licked up the sides, with a couple of extra sucks on his cockhead in between for good measure. That settled, Devika slipped under Levi's cock and started tongue-washing his balls; she alternated between one side of his thickening sack and another, bouncing each testicle with her tongue while her right hand jerked him off with a corkscrew motion and the left registered the rapid thump-thump-thump of his heart.\n\n\"Shit...fuck...coming...\"\n\nShe knew what to do. Her left hand pushing back more firmly against his chest, Devika shot back up to his cock, wet with adoration, pulsing red with passion. She dove back down on it and moved her saliva-slick right hand down her body to her own throbbing need, rapidly circling her pale pink clit while she tried to get him as deep as she could through multiple passes, going a little further each time until his head forced its way past her gag reflex and she took him to the root, her nose crushed against his down and taking in his thick musk while she squeezed him within her throat.\n\n\"RrrRRRGOHD,\" Levi gasped before seizing up. His hand snapped to the back of her head, his cock twitched, and molten lust poured down her throat in one, two, ten thick shots, warming her chest and belly from the inside out while the hand on his chest picked up the totality of his orgasm, sending her to her own long-awaited release, making her moan around his cock, coaxing out more of his cum in turn.\n\nShe pulled herself off to catch her breath, watching the last of his release bubble over his cockhead in little spurts, hearing him pant in amazement. After a few seconds to admire the white cream glazing his glans and a few more to feel pride in conquering such a monster despite being so out of practice, Devika sank back down to clean him up and suck out whatever might have been left, making him groan and stiffen up once more. She decided she loved his fishy taste, unorthodox as it was; it reminded her of the surf he clearly loved so much. It was a part of him, and she loved him, whether it be only in this moment or far beyond.\n\nIn an impromptu bout of curiosity, Devika pushed herself up to try and kiss him; to her delight, he gladly accepted her tongue, making out with her for a good fifteen seconds before Devika broke off and whispered in his ear the only words she planned to say to him in this bathroom:\n\n\"I'm not a fucking tease.\"\n\nLeaving her robe on the floor, she strolled casually out of the bathroom, giving Levi one last look at her round ass before shutting the door behind her.\n\n<p align=\"center\">* * * * *</p>\n\nDevika managed to get fully dressed and take off her makeup before she felt the urge to scream.\n\nShe suppressed the urge, barely able to remind herself that nobody would understand why she was screaming but her; because all the self-doubt flooded in at once and she wondered if Levi would think of her as a slut, or if he would decide that he didn't really like what she did to him, or if he would burst through the door and pay her back in a way that was rougher than she would've preferred. Suddenly there seemed to be more bad outcomes than good to the blowjob and of fucking course she would think of them AFTER it was already done.\n\nIt was done, though, and Devika was going to have to own it. She just hoped she didn't have to own it while a bunch of naked pictures of her circled around the internet, possibly even for her parents\u2014or worse, her little brother to find. Because as long as she was revelling in misery, why not add that pleasant thought to the pile?\n\n...Actually, it was a pleasant thought. Vijay wouldn't engage with her pictures; he'd call and yell at her for ten minutes for ruining internet porn for him forever, creating a strange, powerful tangle of humiliation and rib-shattering hilarity that would kill her before she was forced to carry the worst of her shame.\n\nSo briefly entertained and comforted, she stood up, grabbed her packed gym bag, and left to face Levi.\n\nShe found him on the couch, staring into the middle distance for a moment before he turned to her with some expression on his face; maybe joy, maybe embarrassment, maybe anger. Devika felt like she should say something besides \"Thanks and goodbye,\" and figured maybe a joke would work.\n\n\"So be honest,\" she said, trying to smile. \"When you grabbed me off the street and asked to take pictures of me, you didn't think you'd be the one who got sexually harassed, did you?\" She started cringing three-quarters of the way through her sentence. Nope, that was wrong. That was really bad.\n\nLevi, for his part, blinked a couple of times, parsing Devika's words.\n\nThen he fell back on the couch and cracked up, causing Devika to crack up in turn, relieved.\n\n\"Yeah,\" he laughed. Devika plopped onto the couch next to him, dropping her gym bag at her feet. \"Yeah, I feel so violated right now. Do you do this to every guy who takes pictures of you? Is that like the only way you can get off?\"\n\n\"Oh yeah,\" said Devika, rolling with it, \"I'm the Harvey Weinstein of head.\"\n\nLevi fell sideways on the couch, shaking with laughter, nearly out of breath. Devika reached over and patted him on the shoulder, calming him down. \"Goddamn,\" he said, recovering, sitting back up. \"Goddamn you're fucking amazing.\"\n\n\"So you're really okay with what happened?\" asked Devika, quite seriously. \"How I went about it?\"\n\n\"'Okay?' Devika, that was the best blowjob I've ever had in my life! How the fuck\u2014how did you do that?\"\n\n\"I mean...do you really want to know how much practice I've had?\"\n\n\"Well, not in explicit detail or anything, but I can live with it, sure!\"\n\nDevika sank into the couch, head back, reveling in her glorious whoredom. \"I'll say this: it's been a while since I've been with a guy, so...good to know I still got it.\"\n\n\"You sure do,\" sighed Levi. \"Can't say it's been so long for me, which I feel like I should apologize for considering I sounded like a Mormon at Burning Man in there.\"\n\n\"Oh, I'm sure you've been getting it,\" said Devika. \"I'd be horrified if you weren't.\"\n\nLevi nodded. \"Never with another model, though,\" he stressed. \"You should know that. I always...how do I put this without making you feel guilty?\"\n\n\"You don't shit where you eat,\" she said. \"I get that.\"\n\n\"No, it's more than that,\" explained Levi. \"Okay, if I'm being honest? Most of the women I work with, I would not turn down under normal circumstances; some of them I'd go after in a heartbeat. But if I'm shooting someone\u2014especially if they're working nude\u2014I have a responsibility to them; I have to create a space where they can feel safe. They can't do their job if they have to worry too much about impressing me, or if I'm going to try and make a move on them, or whatever. Introducing sex into that relationship usually complicates everything. I've seen it happen, and I just decided not to be that guy. Even if they seem interested, hell, even if they're openly flirting with me. Now I'm not saying you shouldn't have done anything because holy shit am I glad you did. I just wanted to, you know, explain myself so you understand how much I mean it when I say you're a very, very special case.\"\n\n\"Mmm,\" said Devika, wrapping her arm around Levi. She closed in, cooed \"I believe you,\" and kissed him once more, which he happily returned, bringing his hand up to steady her face.\n\nThis kiss was slow and thick and sweaty. It wasn't long before their hands were roaming and exploring each other's bodies. When Devika felt Levi's hand move toward her hip, she got up, kicking her gym bag away\u2014Wait, wasn't there something important in that bag?\u2014and climbed into his lap so he could squeeze her ass through her nylon leggings while her crotch pressed down on his rapidly re-hardening cock.\n\nLevi pushed her head forward, until his mouth was directly in her ear. \"You know how badly I wanted to eat this ass when I was taking off those panties earlier?\" he asked, and Devika moaned her approval. \"You don't mind dirty-talk, do you?\"\n\n\"Not at all,\" she said\u2014or moaned, while Levi licked up her collarbone and took the strap of her tank top between his teeth. \"Tell me how much you wanted to fuck me on that set.\"\n\nLevi let go of the strap, having gotten it past her shoulder. \"A woman like you deserves a good fuck if she wants it,\" he growled. \"You shouldn't have to work so hard that you don't have time for a hard dick like mine.\" To emphasize the point, Levi pushed up against Devika's crotch, making her moan once more.\n\n\"Yeah, baby,\" she prodded, beaming over the highly fuckable monster she created, \"tell me how you'd give it to me.\"\n\n\"You remember when you were lifting your leg during the shoot?\" he asked. \"I'd hold it there and lick down until I plunged right into your snatch.\"\n\n\"Unh!\" Devika ground herself into his lap. Her mind briefly drifted to her gym bag again.\n\n\"Yeah, I'd dine on you until you screamed, then I'd rip that fucking dress right off you and devour the rest of your gorgeous body.\"\n\n\"Anh!\" Devika gripped his shoulders. Her pussy was soaking her underwear and she swore it was going through the nylon pants.\n\n\"And when I finally fucked you, it'd be hard and borderline disrespectful cause you drive me so goddamn crazy. You know those pearls looked so good around your neck I think I'd leave them on, paint the rest of your body white.\"\n\n\"Oh yeah? Would you take a picture of me covered in your cum like that?\"\n\n\"Fuck! You'd be into that?\"\n\nDevika was going to say \"Yes\" before ripping her tank top off, or perhaps even open, but then she remembered what was in her gym bag. \"Wait,\" she said. \"Sorry, stop for a minute.\"\n\n\"Sure.\" Levi slipped out of his aggression with impeccable ease. \"You all right?\"\n\n\"Yeah, I'm great,\" said Devika, pulling her gym bag up to the couch. \"I just remembered: I brought a third outfit just in case this started happening!\"\n\n\"Really?\" Levi popped, leaning into Devika's space to look inside the bag she was unzipping. \"Wait, you came here expecting to have sex?\"\n\n\"Well, I wouldn't say I was expecting it,\" said Devika, laying out a sheer blue top with gold medallion trim across the cups. \"But would I say that I found you extremely attractive, suspected the feeling was mutual, and decided to come prepared? Maybe.\"\n\nShe continued pulling out the rest of the matching outfit: a pair of harem pants with a gold waistband and open sides, a facemask with the same trim as the bra, and a pair of leather high heels, painted gold. It evoked a curious mix of Princess Jasmine and The Genie from Disney's Aladdin, which begged the question:\n\n\"Um, Devika, not to go all Liberal White Dude on you, but isn't this a little...\"\n\n\"Racist?\"\n\n\"I was gonna say 'problematic,' but we can go with 'racist,' sure.\"\n\n\"No, 'problematic' works. So the last guy I dated had a thing for Indian girls. Wanted me to talk dirty in Hindi, which is apparently possible, but always felt weird to me because of how that language works?\"\n\n\"Really?\"\n\n\"Yeah, it's complicated, but in a nutshell, I wouldn't dirty-talk someone in Hindi unless I thought I was marrying him. Anyway, I found out he was cheating on me with a Pakistani girl that he thought was also Indian because God is great.\"\n\nLevi rolled his eyes. \"White people.\"\n\n\"Actually, this guy was Hispanic. Go figure. Before I found the nerve to break up with him I'd gotten blackout drunk for the first time in my life. A week later, this $200 outfit showed up at my apartment. I was going to return it, but I got curious, tried it on, and couldn't let it go. Thought I'd save it for somebody I really trusted.\" Devika looked at Levi. \"Maybe it's a little soon to say I trust you like that, but what the hell; at least I'll get some cool pictures out of it.\"\n\nShe smiled at him, but he didn't smile back. She recognized the look on Levi's face from before; his mind was working. He took the top and held it against Devika's chest, pushing the straps of her tank away to get a slightly better sense of how it would look on her.\n\n\"I'm sure this looks amazing on you, all stereotypes aside,\" he said. \"If I had an idea to make you look even hotter, but it leaned harder into the stereotype and required two hours in makeup instead of one, would you do it?\"\n\n\"Out of sheer curiosity? Absolutely.\"\n\nLevi nodded. \"Let me make a phone call.\"\n\n<p align=\"center\">* * * * *</p>\n\nThe studio called itself \"Blueprint,\" a 2000-plus square-foot full-service studio and event venue nestled in the heart of Downtown that, as Devika understood, was used for no-bullshit Hollywood promo and magazine shoots. This place had a functional kitchen. What would a photography studio need with a functional kitchen? Who knew? But it was there, so therefore it had everything, and Levi had somehow convinced a friend of his to use this wholly-professional state of the art studio for a wholly-unprofessional private pornography session after closing. \"This may or may not happen more often than you think,\" explained Levi, trying not to sound too ominous.\n\nIt turned out to be the wildest coincidence: Another photographer friend of Levi's was doing an Arabian Nights-themed shoot at the studio for a small fashion publication, and when Levi saw Devika's outfit, he recalled that completely random piece of information and decided to see if they'd be willing to leave the set up and maybe add a bed so he could \"impress\" a girl, promising to pay for it.\n\nHe got the okay, but they had to wait until 9, 9:15, which is when the studio closed its doors and everyone was out. With time to kill until then, Levi told Devika to get into the shower, \"scrub yourself up really well, then I'm going to come in and spray you down with some pigment to make your skin glow some more. By the way, would you be willing to shave your bush?\"\n\n\"Um, why?\" She liked getting waxed for the comfort of it (well, the comfort that came after), but the thought of going completely bare down below felt a little strange.\n\n\"It might get in the way of what I want to do.\" Before Devika could ask what that might be, Levi motioned for her to follow him to the studio. In one of the lower drawers of the vanity there was a massive stock of Swarovski flat-back crystals in various colors and sizes. \"There's a chance this could come off as tacky,\" said Levi, \"but if I do this right, it'll be breathtaking.\"\n\n\"Mmm-hmm,\" said Devika, picturing it in her mind's eye. Loving it. \"Where's the razor?\"\n\nIn the shower, Devika scrubbed herself off and shaved her pubis bare as requested. Afterwards, Levi came in with a spray bottle full of brown liquid that he sprayed all over Devika's body, before applying it manually to her face. As promised, the light seemed to bounce off Devika's skin in a different way, giving her delectable body an ethereal shine. Levi wasn't done, though; he'd also brought a container of golden Unicorn Snot, which he spread all over Devika to give her skin an additional golden shimmer. In the mirror, she saw herself as a living, fuckable jewel, and Devika moved her hand to Levi's boner to show her appreciation.\n\n\"Gotta save that for later,\" he said, gently pushing her off. \"Let's braid your hair at the vanity before we go.\"",
        "The drive to the studio was short and fraught with anticipation; the summer sky had long since gone dark, the city lighting the way for them as they rode together; Devika in the backseat, her hair now in a thick, tight braid, Levi playing the chauffeur.\n\nWhen they arrived at the studio there was a U-Haul truck backed into the loading bay. \"That probably has our bed for the shoot,\" said Levi, after swallowing a bite of an Animal Style Double-Double; they stopped at In-N-Out on the way to fuel up.\n\n\"Bringing in a prop bed for us to have sex in,\" mused Devika, who went with a Protein Style single cheeseburger because apparently it doesn't take that long to become self-conscious in the modeling game. \"Power move, Levi.\"\n\nHe smiled, nodded, but couldn't quite engage. \"Those guys bringing it in probably aren't union,\" he said, partly to himself. \"Normally I'd be helping them out.\"\n\n\"So help them out,\" said Devika. \"I'll be fine here.\"\n\n\"And leave you in a parked car at night in Downtown? I don't know what comes next in that story, but I'm pretty sure it ends with me running from the cops while David Bowie sings 'The Heart's Filthy Lesson.'\"\n\n\"I understood that reference.\"\n\n\"Really?\"\n\n\"No.\"\n\nLevi shrugged. \"Forget it.\" He stretched himself out in his seat. \"You know, back at the house, when we were on the couch,\" he continued, \"I never talked to any of my girlfriends like that before...Actually, no, I talked to somebody like that once and I made her really uncomfortable. At that point I was just starting to figure out this whole 'maybe my shit actually does stink' thing and figured 'oh, that's disrespectful.' And I know it isn't necessarily, I know some women are into that, but...I dunno. Stuff like that, stuff like hiring movers at the ass end of the night, sometimes I wonder if I'm a bad person pretending to be a good one.\"\n\n\"Your dad's a billionaire, Levi. Of course you're a bad person.\" Levi chuckled, and Devika put a hand on his shoulder. \"I'll tell you what,\" she continued earnestly. \"Maybe you're not the ideal feminist or champion of the working class, but you're very considerate, and I appreciate that.\" There was more to say, but Devika decided to retreat a bit before saying it, giving him room to react. \"I don't know if you know this,\" she continued, \"but Cat could tell you were into her and gave me a slight heads up about it.\"\n\n\"Really?\" Levi sounded ashamed of that.\n\n\"I believe she described you as 'a little thirsty.'\"\n\n\"Shit.\"\n\n\"But here's the thing: You still made her feel comfortable! You still created that space you try to create for all your models, and she said that she'd love to work with you again! Look, would I be surprised if your vibe bothered some people? Not at all. But it definitely doesn't bother me, and anyway, I don't think a guy who constantly examines how his behavior affects the people in his life can ever truly be a bad person.\"\n\nLevi took in her words, quiet for a moment, and nodded. \"Thanks,\" he said. \"Sorry to make you play my therapist for a minute.\"\n\n\"Gosh, Levi, I really hope you don't fuck your therapist the way you're going to fuck me later.\"\n\n\"I would, but she's kind of a prude.\"\n\nDevika shoved him, grinning.\n\nIn the distance, a couple of the guys made their way to the front of the truck, looking exhausted. Levi unsnapped his seatbelt. \"I'm just gonna tip these guys,\" he said, kissing her quickly before opening the door. \"Don't get kidnapped or anything.\"\n\n\"I make no promises,\" said Devika.\n\n<p align=\"center\">* * * * *</p>\n\nDevika assumed she'd be impressed, but holy shit was she impressed. In the midst of this very modernist studio with clean lines and monochromatic colors, there was a large, colorful bedroom fit for a king and his favorite concubine. The set had three painted walls and a faux-marble floor, gaudy stone carvings flanking the bed and fine Middle Eastern art on the wall behind. The bed itself was a four poster canopy, made with ornate silk sheets and draped with gauzy curtains. Devika couldn't wait to fall backwards into it, nor could she wait for Levi to fall forwards into her.\n\nFirst, though, she had to be dressed. And before she could be dressed, she needed to put her jewelry on.\n\nOn Levi's order, she stripped bare for him in the dressing room, putting on the veil that covered her nose and mouth with a translucent blue mesh. Levi stopped whatever he was doing and gawked at her glowing, glittering glory.\n\n\"I take it I look good?\" she asked.\n\n\"You don't know what it's taking for me to not pin you down and fuck you now,\" he admitted.\n\n\"Easy, boy,\" said Devika, feeling a little spicy. \"Don't blow your wad before you show me where this is going.\"\n\n\"Oh don't worry,\" he said, pulling out a bottle of spirit gum. \"A woman like you only comes around once in a lifetime. I'm gonna make this count.\"\n\nBoy did it feel good to see him take a little charge.\n\nThe next little while, unfortunately, promised tedium. After rubbing down Devika with additional coats of Unicorn Snot, Levi had to glue silver Swarovski crystals onto her body one at a time. He worked from the ground up, starting with little wavy line designs that went up her outer thighs and spiraled over the sides of her rump. After gluing a silver sunburst on her belly around a large orange crystal, he then outlined her pelvis, circling the crystals around her hips and across her lower back, where they met over her tailbone in a purple-silver moon before shooting up her spine in a straight line. He outlined the tops of her breasts in a similar fashion, placing a large blue crystal over her heart and gluing a line of silver crystals down her breastbone, until they reached the sunburst design on her stomach. Finally, he outlined the brow and the front of her scalp. At the point above her nose where the crystal lines met, he placed a slightly larger red crystal that he then outlined with smaller silver crystals to create an ornate bindi. He topped off Devika's makeup with crimson lipstick, gold eyeshadow, a liberal amount of mascara, and thick eyeliner that flared outwards for a bold look. On a lark, he added various other bits to the costume: long red press-on nails, a golden arm cuff and wrist bands left over from the last shoot's wardrobe, diamond pendant earrings, a gold lace choker, and painted Devika's toenails to match the press-ons.\n\nThe process took the better part of 90 minutes. When Devika looked at herself in the mirror, dressed in full costume, she felt like it was worth it; Levi's designs accented her beauty as opposed to making her look trashy. He'd already left to do some setup, and she had planned to hang out for two minutes or so after dressing to create some anticipation, but ended up staying back for another five just trying out possible poses, admiring the beautiful brown body that peeked through the gossamer outfit; the dark circles of her areolae, the visible cleft of her labia. A literal painted lady, enhanced with sparkling crystals, golden glitter, and glowing pigment, made to look like someone bigger than she really was, someone powerful and essential...there was an obvious word for this. What's the word?\n\nShortly after Devika figured it out, she walked onto set; a very chill instrumental track with sitars and tablas was playing on the set, which Levi was currently dressing with lit candles on either side of the bed. Intimacy gave him permission to be more brazen when he gawked at her, which Devika liked. What she liked even more was that Levi seemed to be just as impressed with her (technically) clothed than he was with her buck-naked. \"You done setting the mood, Levi?\" she asked as she walked by with a gentle brush of his cheek.\n\n\"Just about,\" said Levi, passing up the banter but clearly leaning into his obvious arousal now. \"Need to see how the lights look on my subject. Stand in front of the bed for me?\"\n\nDevika followed his direction, hands on her cocked hips, looking well below the camera Levi raised to his face. He smiled, noticing her gaze, then moved to a nearby laptop and swiped his fingers on the trackpad a few times, dimming the lights on set.\n\n\"Don't want to overlight this,\" he said, looking through his lens. \"Low light is always more erotic, plus the glitter and jewelry's going to catch anything we shine on you.\" He went back to the computer and punched a few keys. \"I'm gonna add a little orange, too. Give the set more of a candlelit feel.\" The lights above and around dissolved from bright yellow to a dark amber.\n\n\"Don't get too arty,\" fired Devika. \"I want you to see me clearly when you jerk off to these pics later.\"\n\n\"Oh, I won't need these pics to jerk off to you,\" Levi returned. \"But I'll do my best anyway.\"\n\nDevika leaned back against the foot of the bed, smiling. Levi shot his first pictures of her doing that. \"Confident horndog's a good look on you, Levi.\"\n\n\"Thanks,\" he said. \"Smartass slut's a good look on you.\" He quickly added, \"Um, no offense. I mean that in a positive way. Somehow.\"\n\n\"Of course.\" Devika went back to her first pose, which Levi finally shot. \"Funny how we each bring it out of each other. I don't know if you'd believe me, but I'm never this forward with guys.\"\n\n\"Yeah, I can see that,\" said Levi. Devika turned into profile and he snapped more pictures; she was barely registering the clicks of his shutter now. \"Overworked, undersexed, cute thirsty dude you get along well with,\" he continued. \"I probably shouldn't treat it as a given, but I can see how the pieces fit together.\"\n\n\"Mmm.\" Devika turned her back to Levi and put her hands behind her head, swaying her butt gently back and forth for his camera. \"It's a shame I don't know how to belly dance,\" she said. \"That would've helped me figure out what to do for this part of the shoot besides, well, this.\"\n\n\"I'm not worried,\" said Levi. \"We'll figure it out. Can you kind of hang off one of the posts of the bed?\"\n\n\"Sure.\" Devika crossed to a corner and grabbed onto the bed post like it was a stripper pole. Holding on with one hand, she leaned away, as if she was dancing around it.\n\n\"Good, good.\" Levi got the pictures.\n\n\"You know, I probably should've learned to belly dance when I decided to keep this outfit,\" said Devika. She leaned back against the post, holding her face close to it as she slid her hands up and down. \"What kind of concubine doesn't know how to dance seductively for her master?\"\n\n\"Put your back against the post and slide down,\" said Levi. \"Hold onto it above your head. One hand.\" Devika did so, locking her eyes on Levi's constantly shuttering lens. \"You're doing great so far,\" he said. \"You've already gotten better at taking direction.\"\n\n\"Thank you,\" said Devika, smiling.\n\n\"Ready for this to get wild?\"\n\n\"Sure.\" She stopped herself from shaking her head; this was clearly ending in sex and yet he still asked for permission to escalate things.\n\n\"Reach down your pants with your free hand,\" he said. \"Start touching yourself.\"\n\n\"Mind if I change hands so I'm working with my right?\"\n\n\"Of course. And just keep sliding up and down the post while you're at it.\"\n\nDevika went to follow Levi's direction, but some twist of her gut stopped her. It was interesting; she thought she had gotten as naked as she could have gotten for Levi, but playing with herself on camera, even covered with these strips of so-called \"clothing,\" suddenly felt like a level beyond even that.\n\n\"You okay?\" asked Levi. \"Too much for you?\" He kept asking for permission, and he kept making sure she was comfortable. What a guy\u2014what a man.\n\n\"I'll be fine,\" she said. \"Just suddenly felt weird for some stupid reason. I'll get over it.\"\n\n\"All right, let's pump the brakes.\" Levi brushed off the wrench in his plans like it was nothing. \"Stand up in profile, show me those legs.\"\n\nHolding onto the post for support, Devika arched her leg up, thigh forward, calf down. The open sides of the sheer harem pants left her thigh fully exposed.\n\n\"Nice! Can you pull those pants away from your ass a bit?\"\n\nOn a lark, Devika dragged her hand over the crystals on the side of her rump on her way to the pant material.\n\n\"Actually! Actually!\" Levi broke in, animated, a little intense. It threw Devika off before she remembered that this meant Levi was into everything and that she shouldn't be intimidated. \"Keep your leg up, run your fingers over the crystals on your thigh, that was super hot.\"\n\nShe went slow, relishing every cool little bump from under the pads of her fingers. So exotic, so unlike her.\n\n\"Open your mouth,\" Levi said midway through her hand's journey. \"Not wide, though. More like you're about to drool.\"\n\nShe did so, and Levi mimicking her lustful expression while he snapped the pictures. Finally she reached her ass and pulled the mesh away to show its unimpeded skin.\n\n\"Fucking A,\" he said. \"That's amazing. Sit on the edge of the bed; feet on the floor, spread your legs.\"\n\nLevi came in close now, on his knees, shooting extreme closeups of her lips through her gauzy harem pants, then looking up to shoot her from a low angle. She gently took her tits in hand and began to knead them.\n\n\"Nice, nice, pinch those nipples a bit.\"\n\nShe did so, tilting her head back.\n\n\"Tell me about that first time you wish you had.\"\n\n\"Hmm.\" Devika reared back onto the bed, sitting cross-legged. \"Well, you know how I had that crush on Sandip, right? From Michigan, turned out to be gay?\" Levi nodded. \"Well, God help me, I still fantasize about him sometimes.\"\n\n\"Shit, that can't be comfortable.\"\n\n\"Oh, he knows. He finds it hilarious, actually. You have to understand, he's my number one; we tell each other everything. Maybe things would be different if he wasn't gay, but he'd still be the guy I trust the most, and I'd always put that over his dick.\"\n\n\"I have a similar thing with the girl I was going to work with today,\" said Levi. \"The one who got sick? We've been helping each other out with projects since SFAI, and we could talk with each other for hours, but we've never seriously considered sleeping together for whatever reason.\"\n\n\"Oh yeah? So are you telling her all about what a hot piece of ass I am?\"\n\n\"Am I telling her that I'm smashing terrorist pussy thanks to the bad shellfish she had last night? Damn straight, girl.\"\n\nDevika turned her head and laughed. \"Fuck you,\" she said, jovially, as Levi snapped a picture.\n\n\"Don't worry,\" he said. \"Even around her, I tend to hold back on details. Speaking of which, I want details about this deep, dark sexual fantasy about your GBF.\"\n\n\"Right!\" Devika snapped her fingers for effect. \"Some context first. When we were younger, he used to steal my toys, and I'd have to chase him around wherever we were before he'd tell me where he hid them. And I'd whine 'Sandip, Sandip, mera khilaune kahaan hai?' Or, 'Where is my toy?' Our parents always watched us when we were that young and we had to speak in Hindi around them. Anyway, he'd go, 'Devi, Devi, meree gupt jagah se bachaav ka intajaar!'\u2014'Awaiting rescue from my secret place!' It ended up becoming a running gag between us because he'd always borrow from me without asking. We added lines to it, too, made it a little poem between us. So we'd say the other guy's name twice, and the lines\u2014again, in Hindi\u2014would be: 'How dare you hide it away?' 'It's better when we share!' 'Give it to me now!' 'Only if you make me!' 'You're so cruel!' 'Would we play if I was kind?' It wasn't a very good poem, but it was between us and we didn't give a shit.\n\n\"So like I said, we went to prom together, but it was with a big group of our friends, and the limo we were sent ended up being too small for all of us, so I ended up having to sit in Sandip's lap. He was still mostly in the closet back then, it was just his parents and close friends who knew, so I pretended like he was having a good time, but yeah; entirely innocent. We went to prom, we partied downtown, we checked into a hotel room and slept it off while everyone happily assumed we were fucking.\n\n\"Every now and then, though, my head goes back to that night, both of us drunk, me a little horny from all the couples hooking up around us, and I wondered how different things would be if I felt him get hard against me. And I remembered our little poem.\" \n\n\"Hold on,\" said Levi. \"Why don't you get up on your knees, turn for me. Show me that ass.\" Devika obliged. \"Flare it out.\" She did. \"Perfect. Can you sit on your haunches?\" She did that too. \"Great. Twist your upper body a bit and give me a slight profile from your left side...Cup your tit, too...good, now play with it. Thanks. Keep going with your story, sorry.\"\n\n\"It's no problem,\" said Devika. \"So I'd have these fantasies of climbing into his bed on prom night, naked, holding his body close, and I'd whisper in his ear, 'Sandip, Sandip, mera khilaune kahaan hai?' And he'd turn his head, kiss me, and gently lead me by the wrist down his body until my hand was resting over the bulge of his boxers, and he'd whisper back, 'Devi, Devi, meree gupt jagah se bachaav ka intajaar.'\"\n\nIt felt right at this point, so Devika reached behind her and undid her top. The gold strings fell away, revealing her naked, sparkling back, her spine and hips highlighted by the silver crystals and purple moon.\n\n\"Can you go on your back, hang your head off the bed?\" asked Levi. \"Cover your tits with an arm as you come down.\"\n\nFalling into position, her head came down just below Levi's crotch, giving her an upside down view of his considerable bulge. She smiled, and licked the palm of her free hand. \"So I'd fish him out,\" she continued, placing her wet hand on Levi's bulge and unzipping his fly, reaching inside to pull out her prize. \"And I'd stroke him, he'd already be so hard, and I'd say 'Sandip, Sandip, aap ise kaise chhipaate hain.'\"\n\n\"'How dare you hide this?'\" asked Levi, trying to remember.\n\n\"Uh-huh,\" said Devika, lazily stroking Levi's member.\n\n\"I don't know the Hindi for whatever comes next, in case you're starting some kind of game with me. I think it's 'I like it when we share?'\"\n\n\"Close enough.\" Devika pulled her top free from her chest and opened her breasts back up to Levi's camera. \"He'd say, 'Devi, Devi...'\" She pulled Levi's right hand over her body until it came to rest over the crotch of her pants, until he could feel her warm, wet lips soaking his digits through the gauzy material. \"'...jab ham saajha karate hain to yah behatar hota hai.'\"\n\nLevi gasped. \"Your pussy feels fucking amazing,\" he said, continuing to lightly stroke her through the harem pants.\n\n\"So does your cock,\" said Devika, continuing to stroke him, \"but I already knew that.\"\n\nRealizing that it would be all too easy to just keep masturbating each other and never see this session through, Devika broke away soon after and turned her entire body around, getting up on her hands and knees. Holding up one hand to keep her lover and photographer back, Devika used the other to slide her harem pants off of her ass, eventually holding her legs out to let them fall to the floor with her top.\n\nNow, finally, what felt like too much too fast was going to be just what she needed at the right time. She flipped once again, her veiled face craned forward, her bountiful bejeweled chest pushed up, her legs spread wide open, her fingers slicking back and forth between the juicy pink juncture between her legs.\n\n\"He'd slide down my body and eat me out,\" she moaned. \"His tongue would feel so good...strong yet nimble...careful and caring...he'd take me right to the edge, and I'd say 'Sandip, Sandip, ab mujhe de do!'\" She grinned. \"Bastard would shake his head...'Devi, Devi, keval agar tum mujhe banao!'\"\n\nLevi had taken one or two pictures, but was more invested in getting out of his board shorts at this point.\n\nDevika licked her lips at the sight of Levi's turgid length now free and unobstructed. She crooked her finger toward her, reeling Levi in. He snapped a couple of pictures of it, then took off his shirt, leaving him naked but for the camera around his neck. Then he followed her direction, documenting in pictures the journey up the landscape of her body; the bend of her knee, the pink of her pussy, the dazzling brown traverse of her belly.",
        "\"So I'd lure him up my body,\" she said, \"and he'd kiss me along the way.\" Levi did just that. \"All the way up to my breasts, until he was suckling at my stiff little nipples.\" Levi cupped Devika's tit and took her sparkling dark nipple between his teeth, flicking at the stiff nub in one direction or the other, sending jolts of painful pleasure through Devika's chest.\n\n\"That's it,\" she said, \"keep doing that.\" Levi switched nipples, tugging the one he left behind between the fingers of his left hand. There was a brief minute where he pulled his head off her chest entirely and got some profile shots of his hand pulling Devika's nipple upward while she looked on with blissful, lidded eyes. Then he went right back in, massaging the blue jewel at the top of her sternum before running his hand across the stones between her breasts and across their tops.\n\nDevika, in response, started to stroke Levi's fine, toned arms, up and down, up and down, moving a little further up each time until she reached the top of Levi's biceps. \"And then,\" she said, gripping his shoulders, \"when he least expects it...\"\n\nDevika was proud of herself; she had realized that if she turned Levi over like she originally planned to, his camera would be pointed outside of the set. So she pushed him off instead, throwing him onto his back, pouncing on his body with such astonishing quickness that he thought his fight-or-flight response would activate. Frozen in place, he could only watch, scaroused, as Devika sat astride his crotch and leaned into his face with a predator's grin, her nether-lips sliding back and forth, back and forth across his now-soaking maleness.\n\n\"'Sandip, Sandip...'\" She blushed, looking away. \"Actually, this is weird playing it out with a white guy who barely knows what I'm saying.\"\n\n\"I can see how it's awkward,\" said Levi, snapping a picture, \"but finish what you started. It's hot.\"\n\nShe smiled, brushed her hand down his rigid chest. \"'Sandip, Sandip,'\" she started again with tremors of barely-contained anticipation in her voice, \"'tum bahut kroor ho...'\" Her hand reached down to Levi's skeine-slick cock; she raised her hips and took it within her grasp, pointing him towards the center of her passion. \"'Devi, Devi,'\" she finished, sinking down, \"'agar main dayaa'aaaaaa FUCK! Holy fuck, that's so good!\"\n\nLevi's eyes were rolled back from Devika squeezing him inside her but he still managed to snap an on-the-fly picture of his model's fulfillment. Gasping, grinding, she dropped upon Levi's frame, shaking, sliding, hands secure on his shoulders, bejeweled breasts flattened against his chest. She lifted her veil and made out with him, their tongues slipping sloppily against each other, then she broke, panting, looking down at her photographer with his camera to his side and a proud smile on his face.\n\n\"Did you come just from putting it in?\" asked Levi.\n\n\"I think I did a little bit, or a lot,\" she answered, still a little dazed.\n\n\"That's actually possible?\"\n\n\"...Apparently yes.\" Devika collapsed once more onto Levi's body, her head falling next to his. \"On the bright side,\" she continued, \"I don't think I'll ever awkwardly fantasize about Sandip again.\"\n\n\"Really? Because I was about to put on some brownface and bust out my Apu accent.\"\n\n\"Shut the fuck up!\" whined Devika, playfully slapping Levi on the shoulder.\n\n\"What?\" Levi took on a stuffed-shirt preppie affect. \"Father loves the whole act! I do it for his country club all the time!\"\n\n\"You're such an asshole,\" she said, laughing.\n\n\"Roger Stone adorrrres it whenever he's in town.\"\n\n\"Okay, I'm gonna ride you now.\" Devika pushed herself back up above Levi. \"Hush up before you actually don't mean to be stupid.\"\n\nLevi smiled, raised two fingers to his lips, and zipped them shut.\n\nOrgasms aside, Devika was never much of a moaner when it came to sex. She was a breather; when she set the pace, sex was almost like a zen exercise for her. The rhythm of her strokes were connected to the rhythm of her breath which set the rhythm of her life. She rode Levi gently, the orgasm opening up the nerves in her pussy and making every bounce blissful.\n\n\"You're okay with this pace, right?\"\n\n\"Absolutely,\" said Levi. She believed him before he could explain why because she saw him reach for his camera. \"The slow pace means I don't have to crank up the shutterspeed to keep it from being blurry, which means the pictures won't be underexposed due to the low light.\"\n\n\"God, you're a nerd.\"\n\n\"Yeah yeah, cup your tits for me.\" Ka-chik, ka-chik. \"Good. Pinch those nipples.\" Ka-chik, ka-chik\n\nDevika was hearing the clicks of the shutter again. Each one vibrated through her skin, making her pussy twinge with the idea that her lewdness, her scandal, was being memorialized for a potential eternity. They used to bother her, make her feel off-balance. Then she didn't notice them. Now she did again, and they turned her on.\n\n\"Do you think you can lick them for me? Just raise a tit up to your mouth...that's it!\" Ka-chik, ka-chik.\n\nDevika turned her head to try and scrape the flecks of glitter off her tongue with her teeth.\n\n\"Yeah, sorry,\" said Levi, \"I didn't think this all the way through.\"\n\n\"Worth it,\" said Devika. Some of her glitter had rubbed off on Levi's body, leaving him with a sparkling chest of his own for her to admire, and somehow that led her to wonder, for the briefest second, how exactly she stacked up to his other conquests or fantasies. \"Quid pro quo,\" she asked. \"What's your fucked-up fantasy?\"\n\n\"Actually?\" Levi took a deep breath. \"This is it. Having sex with one of my models on set while I photograph her.\"\n\n\"Really?\" Devika's smile was wide and obvious through the gossamer veil. Ka-chik, ka-chik. Her pussy throbbed.\n\n\"Ever since my first nude model assignment as SFAI,\" explained Levi. \"There's supposed to be a plainness to it that makes it, you know, not sexy, but this girl...\" He winced. \"You know, let's just say I'm not proud of how I handled it, and it informed my whole 'no sleeping with the talent' policy.\"\n\n\"He said, while sleeping with the talent.\"\n\nLevi smiled, putting down the camera. \"I'm glad you came along. I'm glad I flagged you down. I hope you're getting something out of this and you don't ever feel like you were taken advantage of.\"\n\n\"I am getting something out of this,\" said Devika, realizing it almost as she was saying it. \"I'm finally getting to look between the gears.\" Ka-chik, ka-chik. \"Hey,\" Devika chided playfully, crossing her arms over her chest, \"don't photograph my intensely personal revelations!\"\n\nKa-chik, ka-chik. \"Sorry,\" laughed Levi. \"Tell you what: Put your hands behind your head. I know you can't belly dance, but try to fake like you can.\" Ka-chik, ka-chik. Her bounces started to pick up speed. \"Thrust your chest out some more,\" he said. Ka-chik, ka-chik. She recalled those few moments in the dressing room, trying to decide what she actually looked like. She slowed down. \"Good. Lean back, show me how that cock of mine goes in and out of you.\" Ka-chik, ka-chik, ka-chik.\n\n\"Mind if I get off for a minute and suck your cock?\"\n\n\"Not at all.\"\n\nDevika climbed off and slid down Levi's body. His prick was hard and angry, sopping wet with her juices. She leaned in and gave it a sniff, taking in the pungent, spicy aroma of their fluids. She took it in her hand and gave it a curious look. Ka-chik, ka-chik.\n\n\"You know,\" confessed Devika, lazily beating him off once more, \"when I first heard that girls sometimes put penises in their mouths, I freaked out. I thought it was so gross.\"\n\n\"You know what? So did I. Hand to God.\"\n\n\"Right? Imagine hearing how that worked for the first time ever!\"\n\n\"'You mean the place where we pee from?'\"\n\n\"Yeah,\" Devika exclaimed, laughing. \"But the more I learned about it, the more degrading it seemed. Like, you mean to tell me I have to literally go on my knees to make him feel good, and I get nothing in return? Fuck that, right?\"\n\n\"Sure, I get it. Obviously that didn't stick.\"\n\nDevika nodded, picking up the pace of her handjob a bit. \"My college roommate, Aggie. Kinda mousy, liked to play The Sims a lot, had Planned Parenthood stickers on her laptop. Imagine my surprise when we get a little drunk one night and she admits that she goes down on her boyfriend all the time. Loves it.\"\n\nDevika moved the veil away from her face\u2014she loved the way it made her look but it was one more thing in the way of oral sex. She kissed her way up his shaft\u2014ka-chik, ka-chik\u2014took little loving licks of his skin\u2014ka-chik, ka-chik\u2014feeling the subtle veins and curves under her tongue, watching with delight his twitches and throbs in response to her playful ministrations.\n\n\"She tells me that good blowjobs are all about balance,\" she continued, before engulfing his glans for a precious few licks, drawing out a moan and a curse. Ka-chik, ka-chik. \"In theory they're acts of submission,\" she said, popping off him, \"but in reality, a woman never has more control over a man than when she's swallowing the core of his sexual being.\"\n\nShe went down again, deeper, longer this time, bobbing her head up and down his shaft, squeezing his base in pulses, gently scraping her nails against his sack. Levi could barely hold his camera; her point was proven, but she came back up anyway.\n\n\"See, women, our sexuality is our whole being. It doesn't define us, obviously, but we can take our pleasure from anywhere. Our clits, our breasts, our necks, our wrists, behind our knees, even our minds.\"\n\n\"Your minds?\"\n\n\"Imagination and anticipation are powerful tools,\" she explained. \"They're available to you too, but because society's been so kind to you men, you've only ever concerned yourself with your primary weapon.\" She picked up the pace on her handjob for emphasis. \"All your lives, from puberty onwards, you've been trained to believe that sex was just about getting your dick wet, and even if you know better, you still place so much emphasis on this. When you fuck a woman, you can always set the pace, but when she takes you into her mouth, she owns it.\"\n\nDevika went back down, sucking Levi at a more leisurely pace this time. Levi waited only a few moments for her to finish the sentence, then fell into the rhythm of her pleasure. Devika thought of the sea that Levi loved, going down just a little faster than she went back up, keeping a nice steady rhythm that one could even fall asleep to. She kept it up for a full minute, glancing up at Levi on occasion; head down, arms limp, in surrender to his lover.\n\n\"It's kind of like this whole thing,\" said Devika, disengaging from Levi. \"Maybe I'm being objectified on some level, but I'm not being disrespected.\" She crawled up his body, kissing him once more. \"You value me as a human being,\" she continued. \"You direct me, but only as far as I'm willing to be directed. And between the way you look at me...and the way I affect you...I'm beginning to think that maybe I'm not a concubine.\" She turned onto her back, arching her body offering her breasts up to the heavens as she recalled the word she thought of in the dressing room. \"Maybe I'm a queen,\" she said, inviting Levi on top of her with a single, smoldering look. \"Maybe I objectify you.\"\n\nLevi rolled on top of Devika, causing her to coo. \"Be careful what you wish for, your majesty,\" he said, grabbing one of her wrists and pinning it above the head while Devika moved the other up to meet it. Wrists secure with one hand, Levi moved his other downward to guide himself into his subject, his mistress, his love.\n\n\"Yes, Levi, fuck your queen,\" she moaned as he pushed into her with ease. Her head sank back onto the royal mattress; she closed her eyes, relishing the penetrations of her worthy lover, the rhythms of fulfillment and withdrawal, the pleasures of vaginal nerves being caressed and warmed with stroke after thick, glorious stroke. She'd open her eyes every now and then and see Levi looking down on her, somewhat silhouetted by the hot lights, but his fine form glistening with sweat and clearly mesmerized from watching her shimmering tits bounce and adorned skin ripple with every piston of his hips.\n\nShe really did objectify him. She objectified him objectifying her.\n\n\"Yessss,\" she seethed, her smoldering brown leopard eyes locked on his wide blue beagle eyes. \"That's it, you can go harder. I don't need to come again. Just show me how bad you've wanted this.\"\n\nHe released her arms, pushed her legs up. She reached out for her ankles to hold them in place while he grabbed her hips, cranking up his pace, his intensity, slapping wetly against her lips making her whole pelvis vibrating. One look in his half-lidded eyes and gritted teeth and Devika knew he was trying to hold back.\n\n\"Harder, Levi,\" she urged. \"Give me more!\"\n\n\"Fuck, if I go any harder I'm gonna come!\"\n\n\"Then come,\" she ordered. \"Your queen demands her tribute!\"\n\nLevi pulled out, his right hand flying to his cock, his knees quick to straddle her hips. Devika raised her head to face his lust, and with his strangled groan, a great white gout spurted forth across the front of her scalp, trailing onto her red crystal bindi. After another shot splattered onto her veil, Devika fell back and held up her breasts to catch the rest of Levi's load. He cried out with each thick spurt, several of them coating her sparkling chest, the rest dribbling onto and around the sunburst on her belly.\n\n\"Holy fucking shit,\" Levi cried out, falling back on his haunches. \"Holy shit that was amazing.\"\n\n\"You're welcome, achhoot.\"\n\n\"What was that?\"\n\n\"Nothing.\" Devika propped herself up on her elbows, smiling. \"Just adding to the fantasy for myself.\" She reached down to collect some of his spunk with her finger.\n\n\"Wait! Don't touch that yet.\" Levi stood up, grabbing his camera off the bed. \"Turn your body 90 degrees for me, lay left to right.\" Devika followed, wondering how she must have looked so covered in cum. \"Keep yourself propped up, toss your head back like you're relishing how it feels on your skin.\" Ka-chik, ka-chik, ka-chik. \"Now take some of my cum from your stomach. Make a big show of it.\"\n\nDevika pulled a finger through the drops of white on her stomach. Keeping her head back, she moved the veil, opened her mouth, raised her finger directly overhead\u2014ka-chik, ka-chik\u2014stuck out her tongue\u2014ka-chik, ka-chik, ka-chik\u2014and let his fishy passion drip down\u2014ka-chik, ka-chik, ka-chik\u2014before dipping the coated finger into her mouth entirely.\n\n\"Jesus Christ,\" said Levi. \"Turn on your side, facing me. Look at me.\" She eyed him, naked but for the camera around his neck, his wet, softening dong still hanging thick and lewd between his legs. \"Look at me like you did when I was about to come for you.\" That wasn't hard at all. Ka-chik, ka-chik. \"Look at me like you want more.\"\n\n\"I do want more.\" Ka-chik, ka-chik, ka-chik.\n\nHe smiled. \"Soon,\" he said. \"Turn your body back around. Lay flat, dangle your feet off the bed.\" While Devika switched positions, Levi went back to his laptop. With a few quick taps of the keyboard, the overhead lights adjusted themselves to better shine on Devika now that she was flat on her back.\n\nA few clinks and clanks perked Devika's head upward; Levi was setting his camera up on a tripod, mounted high and close and tilted down to pick up bird's-eye shots of Devika's adorned body. \"Close your eyes and finish yourself off,\" said Levi, his camera clicking away. \"Just let yourself go.\"\n\nSo she did, swiping another fingerful of cum from her breast, bringing it under her veil. Ka-chik. Taking in it thick, masculine scent, relishing its oceanic taste.\n\nKa-chik. Her hand drifted downward, teasing her clit, sliding between her lips.\n\nKa-chik. She thought of playing with herself in Levi's shower, and teasing him with her loose robe afterwards.\n\nKa-chik. She thought of exposing her breasts to him for the first time, the way he worked to make her feel comfortable despite his obvious arousal.\n\nKa-chik. She thought of Levi taking her panties off, and having to adjust himself afterwards.\n\nKa-chik. She thought of storming into the bathroom and blowing him, and how he reacted after.\n\nKa-chik. She felt his hands on her hips, his tongue tracing the outer edges of her labia.\n\nKa-chik. Devika looked up; Levi's head was between her legs, the camera snapping of its own volition. Ka-chik.\n\n\"Oh fuck!\" Ka-chik. \"Oh fuck, Levi, that's so good.\" Ka-chik.\n\nLevi looked up. Ka-chik. \"Payback's a bitch,\" he said before diving back down.\n\nKa-chik. Devika clutched her chest and spasmed as Levi drilled his tongue inside her.\n\nKa-chik. He lapped at her walls, reaching deeper than Devika thought would be possible, touching parts of herself that had never been touched.\n\nKa-chik. She gasped, one hand flung above her head, the other smearing his cooling passion across her body, luxuriating in it.\n\nKa-chik. He made one, two precious swipes across her clit. She bucked her hips, squeezed her thighs around his head.\n\nKa-chick. She clutched the bedsheets above her head, pulling them off. Her jaw fell into a moan and a scream, and her eyes bugged open, watching the camera above dispassionately capture every moment of her beautiful crescendo for him, for her, for anyone who knew they existed and how to find them, for anyone who was just plain lucky, for eternity.\n\nKa-chick.\n\nKa-chick.\n\nKa-chick.\n\nKa-chick.\n\n<p align=\"center\">* * * * *</p>\n\nAfter her orgasm, Levi found himself ready for round 2\u2014or 3, depending on when one started counting. He took her hard from behind, first standing, then kneeling, then laying, until he slid through the cleft of her behind and busted on the crystal moon that adorned her lower back. Having gotten everything he needed, they then washed each other down in the dressing room's shower; even that got wild, with Levi fingering Devika to another good come, and Devika returning the favor by tit-fucking him until he spurted (or really, sputtered) over her neck and breasts. After that, they were finally well and truly satisfied.\n\nDevika finished showering alone. When she left the dressing room in her normal clothes, looking fresh and relaxed, she found a clean set with a similarly fresh Levi, back in his Hawaiian shirt and board shorts, phone in hand. \"Hey, you've got Venmo, right?\"\n\n\"I do.\"\n\n\"Okay, here's the other reason why seducing the talent is a bad idea. I owe you money for being my model. But giving you that money after we just fucked each other's brains out sends kind of an awkward message, don't you think?\"\n\n\"Excuses, excuses.\" Devika gave Levi a love tap on his shoulder. \"Pay me, you bougie fuck.\" Levi giggled and went back to his phone.\n\n\"Okay, three photo shoots. One was two hours at 50 per, another two at 200 per, and this one ran four hours at the same\u2014\"\n\n\"Oh, it was only three and a half.\"\n\n\"We go over, I pay you for the full hour,\" said Levi. \"That's not just your rule, that's everyone's rule. Heads up.\"\n\nDevika's phone dinged; $1300 had been deposited into her Venmo. \"Holy shit,\" she said, \"that's my whole overhead for the month!\"\n\n\"Good, enjoy it,\" said Levi. \"Just so you know, if you decide to go forward as a model, the nude rates are usually a touch lower. In fact, pros aren't supposed to be paid for test shoots; it's a trade for fresh headshots. But since you weren't necessarily interested\u2014\"\n\n\"Right, right,\" said Devika. \"No, this is...God, this is great! Thank you! I promise I won't let this spoil me.\"\n\n\"Thank you,\" said Levi. \"This was really special and I appreciate you...well, in general.\"",
        "Devika pulled Levi in for a short, soft kiss. \"You're a perverted, talented sweetheart, Levi,\" she said. \"It was my pleasure.\" Arms around each other's shoulders, they walked to the car. \"Tell you what. We'll meet for a nice, fancy dinner on Monday, and it'll be my treat. I can start paying you back for the test shoot you weren't supposed to pay me for.\"\n\n\"Uh, one, you don't owe me anything,\" insisted Levi, \"and two, I thought you had to work.\"\n\n\"One, I do owe you something,\" retorted Devika, \"and two, that's what I owe you for.\"\n\n<p align=\"center\">* * * * *</p>\n\nIt was Monday afternoon, and Devika had been called into her \"check-in hang.\" Her cubicle already packed up, she marched through the bullpen with an unmarked envelope in her hand, past the yoga studio, past the arcade, past the fucking fro-yo machines, and into a glass-walled office with three supervisors she'd already forgotten the names of and an empty beanbag chair she was supposed to sit in.\n\n\"Good afternoon!\" She had the biggest, brightest smile on her face, one that was surprisingly easy to put on when she thought of how little she was going to miss this place.\n\n\"What's up,\" said Some Guy, \"You seem like you're in a good mood! That's the Umbrla way!\"\n\n\"Yeah, you know, I'm great,\" said Devika. \"I watched The 40-Year-Old Virgin last night, and I'm feeling confident, and strong, and I'm so happy that I'm finally ready to tell all of you that this is the worst fucking job in LA and I'd rather mop up after a donkey show in Tijuana run by MS-13 after giving myself papercuts across my clit than work another minute in this piece of shit office run by you racist, sexist pricks.\"\n\nThere was a long processing silence that Devika barely even noticed because she gave nary a fuck about what these idiots thought.\n\n\"Well,\" Other Douche finally said.\n\n\"Actually, actually, I'm sorry,\" Devika broke in. \"I don't know if MS-13 runs donkey shows, they probably don't. I shouldn't slander them like that. I mean, they're evil and all, but you need to be honest about that evil; know your enemy, right? Anyway, here's my two weeks notice.\" Devika flung the envelope in her hand at her now former bosses; it landed at their feet. \"Oops. By the way, I've got vacation time that you pressured me not to use because you wanted me to be a 'team player,' whatever the shit that meant. I mean, you certainly never made me feel like I mattered, what with all the times you called me by nicknames I didn't ask for, forced me to work overtime on top of my 60 hour weeks, never paid me for that overtime, never once showed concern over my personal life, or defended me from employees who harassed me. Anyway, I'm just going to go ahead and take my vacation now.\"\n\n\"Look,\" asked What's-His-Fuck, \"can we\u2014\"\n\nThey couldn't. \"I know, I know,\" said Devika, \"It's a really bad time. I mean there are audits coming, and there's that overhaul to the GUI you've been pumping us up for, plus somebody just hacked the website and plastered Tucker Handel's racist business card on the front page, so the thought of taking a vacation\u2014\"\n\n\"Whoa whoa, WHAT?\"\n\n\"Oh, I thought you would've heard by now?\" Devika was honestly surprised; these dumbasses were more incompetent and disconnected than she thought. How the hell did I waste two years of my life here? \"Yeah, Twitter is blowing up. Check your mentions; #FuckerHandel is trending. It's juvenile, but I can't lie, I respect the passion behind it.\"\n\nThe bros opted to stare at her instead.\n\n\"No, seriously, go...oh, wait. You think I did it? I actually tried to delete it before I was called up here, check my keylogs. And check out where it came from because it couldn't have been from here.\" Last night, with a little of her tech wizardry, Devika was able to anonymously pass along some helpful information to a young South Korean hacktivist who relished the chance to get his name in lights. Nobody would ever know where it came from. \"You know,\" she continued, shameless, \"it's shit like this that's made working for you such a nightmare over the last couple of years. You put on this big, friendly smile and try to pass yourselves off as the cool kids on the block, but you don't trust your employees or listen to them. I'm not angry, though; I'm just done.\"\n\nBefore any of the now-faceless bros could respond, Devika turned for the door. \"You can mail me my last paycheck,\" she said. \"I'll leave my badge with security.\" Strolling out of the office, without looking back, she added, \"Good hang, assholes.\"\n\nShe left with a smile on her face. She wasn't confident that modeling would work out for her, and she didn't want to think about her chances of getting another job in tech after quitting like this, but the thought that it was over was enough for her to feel weightless and happy as she drove through the security gate of Umbrla's campus, never to return.\n\n<p align=\"center\">* * * * *</p>\n\nDevika celebrated her freedom with Levi at Musso & Frank's that night, which was somewhere she always wanted to go but never thought to on her rare night off. Over dinner, they scheduled two more shoots, and used images from them to complete a portfolio that was sent out to various agencies; the prospect of doing porn was discussed, and she wasn't necessarily opposed to it, but while she thought she could deal with a hypothetical leak of their pictures (as uncomfortable as that would be), she wasn't sure she could turn to her family and say she chose to have sex on camera for a wide audience. \"I can see myself changing my mind in a year or so,\" she admitted, \"but right now, I'd rather just be your pornstar.\"\n\nAlso, young as she was and still looked, she didn't think she could claim she was 18 with a straight face.\n\nAfter 5 weeks and a couple of callbacks that went nowhere, Devika signed with an agency specializing in models of color. Her new agent, Dana, was honest with her about her prospects, and how much she needed to invest in herself to maximize her opportunities. Still, she wasn't rude or flippant about it. Devika was grateful to have somebody behind her who wouldn't lead her on, and felt ready to take on the world after talking with her, even if she wasn't quite sure how she was going to do it.\n\nHer answer arrived in the mail a few days later, in a bubble-cushioned manila envelope with a return address from the Palisades.\n\nDevika was alone when it came, as she had hoped. Inside was the external hard drive that she had been expecting; red, with a white heart-shaped sticker on it and a note to call Levi for the password. What she didn't expect was the smaller envelope within; she figured it'd be some kind of mushy love note, or whatever kind of note you send to a fuck buddy.\n\nIt wasn't.\n\nMostly she was shocked. She was a little angry too, but she didn't understand why. She guessed she was elated, but she felt like she shouldn't be. Mostly she just felt like she needed to call and air it out.\n\nLevi picked up after two rings. \"Hey, babe,\" he said, as if he didn't just send her\n\n\"$25,000?\" Devika didn't know how she kept herself from screaming. \"Are you fucking high?\"\n\n\"Oh good, you got the hard drive.\"\n\n\"Levi,\" she said. \"LEVI,\" she repeated. \"I can't,\" she started. \"This is,\" she added. She didn't get much further.\n\n\"You make a powerful argument,\" Levi finally said. \"Look, I bet you 'a life changing amount of money' that you'd get represented in four weeks, you remember that?\"\n\nShe did. \"THAT'S NOT HOW A BET WORKS!\" This time, she didn't stop herself from screaming. \"I didn't offer anything against that bet, I never even accepted it to begin with...oh my God, Levi, this is too much!\"\n\n\"Okay, okay, take a seat.\"\n\n\"I am sitting.\"\n\n\"All right, then get something to drink.\"\n\n\"Do you want me to sit or get a drink?\"\n\n\"All right, then don't get a drink, just take a few deep breaths. In and out, like this.\" Devika breathed over the phone a few times, Levi guiding her down. \"Good. Now listen. I hate to break it to you...but you kinda got yourself a sugar daddy.\"\n\n\"Sugar daddy?\" Devika shook her head. \"Levi, you're like two years older than me.\"\n\n\"Okay,\" laughed Levi, \"sugar brother then. It might feel a little iffy, but I'm not giving you money because I think I own you. It's because I like you. You don't have to worry about me trying to buy my way into your heart or bail you out of all your problems, but I can tell you need a little help, and I can afford to be a bit of a sucker every now and then. So there; if you're really not comfortable, just tear up the check.\"\n\n\"Fuck you, you know I can't tear up that check.\" The shoots paid for her overhead, but not having a regular check made getting herself fed a little more of a challenge, one that promised to only get harder.\n\n\"Cool, then cash it and do whatever you'd like. Set it aside for rent money. Go invest in your look. Go see your family. Hell, go wherever you want. Have fun with it. Find out what's between the gears. Whatever it is, it really doesn't have to involve me. Honest.\"\n\nDevika sighed. \"Unbelievable,\" she said, \"I fell into a fucking E.L. James novel.\"\n\nLevi laughed. \"Look,\" he said, \"if it helps, my trust spends about a million on charitable causes every year. 25K's a drop in the bucket.\"\n\n\"I guess,\" said Devika. \"Thank you, Levi. I really appreciate this. Just don't make a habit of it, okay? If I need help, I'll ask, but I like living on my own terms too, you know?\"\n\n\"Devika, I promise; I wouldn't have done it if I didn't get that vibe from you.\"\n\nThe warmth in Levi's voice gave Devika something to believe in, and it inspired her to speak up about an idea that hadn't quite fully formed, but drove her a little wild every time she thought of it. \"By the way,\" she said, \"I'm taking some of that 25K and earmarking it for our next test shoot.\"\n\n\"Oh really?\"\n\n\"Yes, really. And since we leaned hard into a stereotype for the last one, I think it's important that our next shoot really breaks away from that mold.\"\n\n\"What'd you have in mind?\"\n\n\"Hmm.\" She had vague images in her head; nighttime, rooftops, eyemasks, leather or maybe spandex. \"It's not crystal clear in my head yet,\" she said, \"but you know, you don't see a lot of Indian girls as superheroes...\"\n\n<p align=\"center\">* * * * *</p>\n\nLevi was, as ever, a genius.\n\nThe evening gown set took Devika through the exact journey he had envisioned, from hope to anguish to heartbreak to acceptance, and her naked skin in the simulated moonlight looked astonishing and truly artistic. The concubine/queen set was not artistic. However, it was sexy as hell, with nary a trace of tortured programmer to be found. The shot of Devika taking off her bra with her back to the camera was magical, as was the shot of her leaning back to show Levi's cock inside of her. The picture that ultimately got her off was one of her on her back, taken from above. Her mouth was open in a sated gasp, one hand draped over the head, the other holding his blonde head between her legs. Her cinnamon skin sparkled with gold, her body outlined with crystals and frosted with Levi's passion. She didn't look used or humiliated; the cum wasn't proof of her conquest. It was a mark of desire and liberation, her posture that of a woman who loved freely, openly, and without remorse. She was proud of Levi for framing it so well. She was proud of herself for nailing the pose, unintentional as it was in the heat of her climax.\n\nHowever, that wasn't her favorite picture of the three shoots.\n\nDevika's favorite actually wound up in the outtakes folder, pictures that Levi didn't even bother to touch up. He had an obvious reason, one that the model even respected; it was a blurry snapshot taken in the heat of the moment, with lots of unintentional negative space above Devika's head. She was barely in frame, eyes closed and crying out. It was the moment when Levi first entered her, uncontrolled and hasty and absolutely beautiful.\n\nOn a sweltering Saturday in June, Devika Singh was discovered on a beach by Levi Fisher.\n\nSix weeks later, in the privacy of her apartment, Devika Singh discovered herself.\n\n<p align=\"center\">= = = = =</p>\n\nThank you all so much for reading this story! Before you go, take a few seconds and rate it below. Any feedback is good feedback, and this is the easiest way to give it. Of course, if you REALLY want to make my day, leave a comment. Doesn't matter if it's complimentary or critical; as long as it doesn't have any death threats, personal attacks, or otherwise promotes or encourages noxious or illegal behavior, I thrive off it. Also, I leave extended author's notes in the comments for anyone interested in how the sausage gets made, and I try to respond to anything that brings up a good talking point. So if you do leave a comment, check back in a day or so. And if you really like this story, feel free to throw me a follow and check out my other work!\n\nThank you all again for reading!"
    ],
    "authorname": "member9458",
    "tags": [
        "model",
        "photographer",
        "indian",
        "interracial",
        "cumshot",
        "cosplay",
        "blowjob",
        "porn shoot",
        "costume",
        "intercourse"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-test-shoot"
}