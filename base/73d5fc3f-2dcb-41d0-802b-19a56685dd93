{
    "title": "Life as a New Hire Ch. 46",
    "pages": [
        "*Editing magic performed by KJ24 and Shyqash, plus contributions by the regular gang of brigands and neer-do-wells*\n\n*It is selfish to believe that your family will always love you. At some point you will be asked to earn it*\n\n*****\n\n{7:35 am Sunday, September 7th ~ Last day}\n\n{Right where we left off}\n\nMy rage over Aya wasn't called into question or challenged. Practicality had trumped tradition in the inevitable Amazon fashion. The only one elevated in anyone's eyes was Aya. Krasimira's apparent political adventurism was probably hard for the others to deal with. But in context, only Mahdi, Katrina and St. Marie had seen her denounce Hayden, so this seemed a new side of Krasimira to most people in the room.\n\nKrasimira wasn't the spiritual authority - that was Hayden. She wasn't the Generalissimo - that was St. Marie. Katrina and I were both appointed officials - we retained our House status. St. Marie would die a member of House Inara and join her ancestors with pride. Her litany of accomplishments were well known to the Host.\n\nBut Krasimira? She would die a member of House Cybele unheralded. The Keeper of Records recorded the feats of others, not their own. Nearly two generations ago, a young Krasimira had joined the Keeper's House as a guardian to an un-remembered (save by her) augur. The augur passed and she took up other duties within the house.\n\nWhen the old Keeper faced her final months, she elevated Krasimira to her spot. High Priestess Hayden had approved the choice without really knowing who Krasimira was. (No one outside the House of the Keeper had personal bonds with her anymore.) Seamlessly, she had sat in the old Keeper's seat and the Council kept chugging along.\n\nFor the past eight years, she had sat quietly at Hayden's side and only speaking when addressed. Mostly, she did nothing overt. The actual note-taking was done by an underling. The Keeper took her own private notes squirreled away in her mind, to be written when she was by herself. Those notes would be handed over to her successor, for the Keepers' eyes and theirs alone.\n\nI don't think Krasimira knew me in particular when she dutifully followed Hayden into these chambers the day my death, or life in a cage, was bantered about. It was the day we first crossed paths. She would have known of Shawnee's request for the tooth of an Isharan, though she lacked the authority to ask why. (She wasn't a voting member of the Council.)\n\nBut when Shawnee made her claim ... Krasimira hadn't balked in her support, despite the oddity of Shawnee's declarations - I was indeed Ishara and my sisters could not dispose of me. The outrage of the others meant nothing to her. She pursued her obligations with true Amazon fearlessness both inside and outside of the Council.\n\nOn the night of the 2nd Betrayal, a Keeper had sat there in silence as her fellow Amazons - the Ash Men - were sentenced to an unjust death. She'd had neither the numbers nor the authority to alter events ... what else could she have done? \n\nSo the Keepers kept track of the names of nineteen 'unaccounted for' Ash Men. For what purpose? An episode of Amazon history no one would ever want to revisit? Yet in my hour of need, coming back 2,600 years was the name 'Vranus of Ishara', sitting only a few keystrokes away. No one, save a few Arinniti diehards, wanted to know the truth of the Amazon Ash Men; and even they didn't want to remember us as individuals. To them, Vranus existed as a notation on the secret Charter of the Arinniti Sons.\n\nTo Krasimira, Vranus had been a living, breathing warrior of the Host ... not even dead ... still mythically fighting the enemies of our race because his death had never been officially recorded. With my appearance, I stood in mute testimony to his death ... and that of his sons and their sons for a damn long time.\n\nStill ... I hated playing catch-up.\n\nWith the Amazon custom of adoption, had no one asked if another possible Isharan heritage still persisted?\n\nI would bet they had. And I'd bet they had sought for that knowledge in the Rolls of the Host, always finding that pathway devoid of hope. But if the Keeper had known, why had she kept quiet?\n\nPride ... shame ... Krasimira's words: we show anger when we should show humility. We are proud of our shame. We are arrogant of our weaknesses. We have heaped insult upon insult on our ancestors, yet are now aghast that they turn away from us ... I had confused her soliloquy with that of an accusation, not the long held understanding of her office.\n\nEven staring extinction in face, the modern Host hadn't truly accepted the answer - the line of Vranus. Faced with the truth, the Amazons would have 'forgotten' the descendants of Vranus all those centuries ago in the same way they 'forgot' all the other Ash Men on the day I was brought into the Host.\n\n...\n\nBut the Keepers did something more than maintain the rolls and records of the Amazons, more than watch over the augurs and make sure their messages made it to the proper ears. They safeguarded the truth. No matter what the Council decided and the High Priestess commanded, the Keepers remained honest stewards of the real history of the Amazons.\n\nWhy?\n\nThe Amazons were terribly practical and the truth could run contrary to the needs of political reality. Honesty wasn't a highly stressed Amazon virtue - loyalty was. So was bravery. And thus generation after generation of Keepers had lied to the Council and the High Priestesses. Every time those august personages had committed something to 'the nothingness', the Keepers had defied them and not forgotten.\n\nThe first heads of the first twenty houses had surrendered their names for the unity of their people ... but the Keepers remembered. All twenty of those women had been of the Amazon tribe of the Pala people living on the southern coast of the Black Sea when the Trojan Wars began. Over time, their true blood descendants had founded new houses and been adopted into others.\n\nAya was truly a daughter of Kururiyahhssi; I had no doubt of that anymore. Had she not shared the same blood as the first Amazon, Krasimira wouldn't have brought Aya and Kwen together. Resurrecting an ancient tradition in a complicated fallacious coup attempt wasn't in her; nor was such a maneuver even a necessity. The Host would elect a Regency eventually and St. Marie was handling the war in a highly competent fashion. \n\nSo Krasimira hadn't sought out the heirs of Vranus, yet when one appeared, she welcomed 'him'. And when she stepped into the President's office with Hayden while waiting for me to be brought upstairs to face judgement that night, I imagined sending Hayden to the cliffs was the farthest thing from her mind.\n\nThe rest were playing politics - gender politics - and couldn't see the truth staring Krasimira in the face. The truth was a bitch and didn't play favorites, or worry about the sensibilities of others. Krasimira had seen her sisters refusing to acknowledge the ugly reality they had created for themselves.\n\nKrasimira wasn't an advocate for Ishara - that was my job, and my crappy performance was something between Dot and me. She wasn't an advocate for the males and the New Directive. That was what Katrina was for. No, like a hundred Keepers before her, Krasimira was the silent sentinel for the Truth and ... the Truth didn't care about anything but the Truth. \n\n\"The assassin is indeed in this room. Its name is Amazon was a rather grand pronouncement from the Chief Librarian, wasn't it? Krasimira didn't chastise Hayden. That wasn't her place. Technically, neither was she disputing Hayden's ability to rule. \n\nThis wasn't the climax of a dinner-theater 'Who Done It'. The crime before the High Priestess was High Treason and I was the pre-ordained guilty party. My 'ally', Katrina Epona, had not been an advocate for my defense. No. Again in my Hour of Need it was Krasimira.\n\nLacking any true authority, she had defied her sisters and made her definitive statement. What truly transpired was Krasimira staring Hayden straight in the eyes and saying 'you cannot lie your way out of this one, High Priestess. We (as in all the Keepers past and present) will not let you'.\n\nHad she used those words, St. Marie would have gotten around to asking what Krasimira meant. Krasimira would have rather died, because once those bitches discovered their nerdy sisters hadn't erased a damn thing in 3,000 years ... they would insist they do so immediately. Krasimira wasn't about to do that. Thanks to the chaos surrounding Hayden's departure, no one had confronted her over her crucial action.\n\nTo put it more precisely, the Golden Mare had been too busy and Mahdi had been wrapped up in Hayden's Decree and the resulting pressure on the Heads of House to pick the Regency. Katrina was probably a case of I'm not going to ask you so you don't have to lie to me. The only other living person in the room when Hayden's fate was sealed was me, and I'd had my hands full as well.\n\nI had to think about what I should and could do. I couldn't beat her up over Aya anymore than I could punish my Isharans for their misplaced arrogance. I decided to extend a 'thank you'; and not only for myself, but for every conceited bitch who had ever sat at this table, or all the other physical mediums the Council had used before this one.\n\nWe held three votes: The Council couldn't collectively decide on how to implement Aya's other likes (1), so they agreed on her suggestion for a Regency instead (2). The final vote was to set a date for the next Council meeting (3). A date within 9 days of the Winter Solstice with the Regency to decide the precise date and give the House Heads two weeks warning. \n\nThe last calamity at the meeting was initiated by a question of etiquette.\n\n\"How do we address the Princess at Council meetings?\" the Head of House Hanwasuit inquired of Krasimira.\n\n\"There is no precedent for addressing the Iwaruwa alone. By our laws, she is not truly Dumalugal Aya either. She is Nasusara,\" Krasimira responded. Queen.\n\n\"She is a child,\" a third House Head declared, \"not an Amazon.\"\n\n\"No,\" Mahdi shook her head. \"A ... Aya is 'un-casted'. She bears an honorific presented to her by the leader of an established stronghold (Summer Camp) and confirmed by the Golden Mare minutes ago.\"\n\n\"Congratulations my mam\u0113tu me\u0161eda,\" I winked to my past and present Princess, \"you've just become a single-digit aged teenager.\"\n\n\"Go Aya,\" Daphne and Buffy whispered behind me. Aya raised her hand, waiting for St. Marie's recognition.\n\nHowever, St. Marie moved steadily forward, declaring: \"Until the Regency alters my decision, I decline assigning anyone to the Iwaruwa (heiress) whose sole purpose would be to stop her from sneaking off to endure her 12th Year Test. I judge it to be better we know where we placed her as opposed to failing to outsmart her as she needlessly proves to the Host she is, in fact, already an Amazon of the Host.\" Aya lowered her hand.\n\nThus,\n\n'Yes, Aya is an Amazon of the Host' and 'Aya will take her 12th Year Test because she wants to take it, won't let us talk her out of taking it and the rest of us had better accept it'.\n\n\"So, she is our Queen then?\"\n\nNo one appeared to have an answer. Aya raised her hand once more.\n\n\"Yes?\" the Golden Mare smiled down at her.\n\n\"Am I in charge?\" Aya's other hand squeezed St. Marie's as she spoke in a barely audible voice.\n\n\"Perhaps.\"\n\n\"If I was in charge, I would like it if there was a law that declared the Queen of the Amazons would be officially represented by a Regency until she becomes casted ... and antedate the law by one hour so this never, ever comes up again,\" Aya kept looking up at St. Marie.\n\n\"Aya ...\" Katrina exhaled. \n\nThe council chamber was a mixture of awe, resentment and amusement. If Aya was Queen, she could make such a law. The Queen-ship was a Bronze Age autocratic institution designed to provide leadership to a 'state' in near-constant warfare with is neighbors. \n\nIt was guided by oral traditions and military necessity, not written laws. As long as the queens provided successes on the battlefield and through diplomacy, she was deemed fit to rule. The traditional way of choosing a House Head was the same for the Royal House - the ruling Queen chose an heir. \n\nIn the long list of Queens, less than half had been the 'eldest' child. No - those ancient War Leaders picked the bravest, smartest and most successful daughters to succeed them. Their wisdom in those selections showed in the fact the Amazons had held off a male-dominated world for over 600 years before fatally marching off to answer an ally's call to fight in the Trojan War.\n\n\"I advise  against it,\" St. Marie shook her head. \"You are young. You are also the only Royal we have. Duty demands and sisters must always answer their sister's call.\"\n\nTranslation: Aya WAS an adult now. It was similar to the first lesson Pamela gave me upon learning I was Ishara. We lived with bitches - it doesn't pay to play nice with bitches.\n\n\"Thank you,\" Aya nodded. She was 'thanking' St. Marie for the lesson, no matter how hard it was to accept. Krasimira coughed.\n\n\"Now that the matter is settled,\" she spoke. The matter wasn't settled. Krasimira was steamrollering the discussion. \"What do we call you?\" - to Aya.\n\n\"I ... oh ...,\" in a very small voice. Aya's brow furrowed and her tiny nose wiggled. \"I wish to be known by the legacy of my Anna (mother) and Atta (me - C\u00e1el). I will be Assiyai\u0161hamai.\"\n\n\"Love song?\" Daphne murmured to Buffy. \n\n\"Assiyai\u0161hamai?\" Krasimira asked for clarification. 'Love-song' was hardly the name of a 'fierce' Amazon Queen.\n\n\"The only other name I could come up with was Markappidusmene ... which seemed less auspicious,\" she meeped. Markappidusmene meant 'Tiny Smile'.\n\n\"Perhaps Talliyahulla would be more auspicious?\" St. Marie nudged Aya. 'War Cry'.\n\n\"Oh no!\" Aya balked. \"That's your job.\"\n\n\"What do you think your job is?\" the Golden Mare questioned, suddenly realizing she'd made the mistake of making assumptions where Aya was concerned.\n\n\"To go to the cliffs with twice as many Amazon daughters, each equal to the likes of St. Marie, Katrina, Oneida, Buffy, Elsa, Kohar and Tad\u00eafi as exist today. We must not 'survive', or simply replenish our numbers.\n\n\"We must become stronger because the World is a terribly messed up place,\" she raised her wounded hand and splayed her digits for the others to see the two she was missing, \"and has become too small for us to seek safety in hidden freeholds any longer. If we cannot hide, we must rule openly. We are Amazons. Having no equals, we must rule alone. The only people we can trust - really trust - are the sisters at our sides. \n\n\"My job is to advance my People's cause with both compassion and cruelty and I will do so alone ... because the Amazon Queen has no equals, only daughters.\"\n\nNot a sound. I could count out the individual fan blades recycling the air.\n\n\"Let our enemies tremble ...\" St. Marie nodded, repeating an earlier declaration.\n\n\"Assiyai\u0161hamai,\" Krasimira intoned, making Aya's royal name official before adding, \"Assiyai\u0161hamai, you are mistaken about one thing. You are not alone. You have a mam\u0113tu me\u0161eda.\"\n\n\"Oh,\" she perked up, shedding the gloom which surrounded her. She looked at me, our eyes met and we both grinned ... then she giggled...and yet again, up her hand went.\n\n\"Yes?\" St. Marie looked upon Aya respectfully and then at me with much suspicion.\n\n\"Is the mam\u0113tu me\u0161eda of my mam\u0113tu me\u0161eda also my mam\u0113tu me\u0161eda?\" Aya asked. \n\nJust like old times, only Katrina was ahead of the game. \"Oh ... by Epona ...\" the Spy-mistress snorted.\n\n\"C\u00e1el Wakko Ishara, who is your mam\u0113tu me\u0161eda ... oh no,\" St. Marie bristled.\n\n\"Ah, indeed,\" Krasimira nodded. \"An unlooked for bonus.\"\n\n\"Does someone care to enlighten the rest of us?\" the head of House Nemain prodded.\n\n\"Oh!\" That was Elsa.\n\n\"That's right!\" Oneida ... she was definitely a fan of me and my spasmodic lifestyle.\n\n\"Wakko Ishara's mam\u0113tu me\u0161eda - other mam\u0113tu me\u0161eda - is Temujin, Great Khan of the Reborn Mongol-Turkish Khanate and ally of the Host,\" St. Marie let them know. \"They are bonded by C\u00e1el risking his own life to save Temujin's. It is actually a privately understood and publically declared fact.\"\n\n\"In Temujin's words to the international press when our C\u00e1el and our new Queen were kidnapped : I believe C\u00e1el is still alive. If he wasn't, we would be seeing piles upon piles of dead enemy around him and his 'boon companion', clearly visible from orbit. Until they discover this carnal pit from Hell, I am sure they are both still alive,\" Oneida added. Rhada flashed ill-distilled hate her way.\n\n\"Shawnee, is your Apprentice's mind addled with the birthing hormones of their child?\" Mahdi snipped. That was merely a cultural zing, not an attempt to expose my sinister erotic misdoings. Unfortunately, she was somewhat correct. Okay, she was TOTALLY correct.\n\n\"That was uncalled for,\" Shawnee graciously chided Mahdi - thus demonstrating her ignorance of the facts soon to be in evidence.\n\n\"Yes, I am carrying a child of Arinniti and Ishara,\" Oneida proclaimed loud and proud. \"We share a Warrior's Love.\"\n\nI wasn't really sure how anyone else reacted to the news because House Ishara exploded into violence. That is the politic way of saying Daphne and Juanita were trying to stop Buffy from beating me to death. Here was yet another Ishara-baby and it wasn't gestating inside her. I was too stunned to defend myself.\n\nAnd the old refrain: 'and then it got worse'.\n\n\"Ta \u0161ah kattanda!\" [OKH for 'you pig's ass'], Rhada howled. I missed her drawing her blade, vaulting to the top of the table and lunging at Oneida. Most of the Amazons in the room stood, yet held their ground.\n\nThey weren't shocked into indecisiveness, only trying to understand the nature of the conflict before intervening. This was not the first 'your Amazon did something my Amazon found infuriating' public threat they had to have dealt with. Rhada was more volatile than the average woman of her breed and station, true ... but a violent in-chamber assault?\n\nThat wasn't the 'worse' though. Oneida drawing her blade in an open challenge to Rhada wasn't the worse either, nor was her shouting. \n\n\"He loves me! He merely saved you!\"\n\nSt. Marie yelling 'Ishara! Ishara!' over and over again, demanding I put my house back in order wasn't the end of my woes - nope. \n\nMe being yanked free of my House fur-ball into the volcanic gaze of Elsa as she seethed ... \"Rhada?\" Oh yeah ... Elsa's people and Rhada's people had a bit of a blood feud going on ... how could I have forgotten that?\n\nBut wait!\n\n\"Not Fabiola!\" gasped Messina - bizarrely assuming I slept with ... okay, not such a huge assumption.\n\n\"Gael?\" voiced by the Head of House Bendis ... followed by Gael's \"I'm late.\"\n\n\"Damn it!\" I pulled away from Elsa (slightly).\n\n\"No. She only lets me ejaculate on 'safe days',\" to Messina, Fabiola's Mom.\n\n\"Oh, come on! We had sex ONE TIME!\" to Gael of Bendis, and finally ... \n\n\"Stop it!\" to Rhada and Oneida ... (deep breathe). \"Really?\" with my most believable happy face plastered on. \"This is great news!\"\n\nNo. No it wasn't, and I could read the ugly emotional undercurrents on the faces of everyone present ... except Aya, who kept the faith.\n\n\"Ishara,\" St. Marie rumbled. I held up one finger to forestall her wrath.\n\n\"Oneida - Rhada and I have already decided to name our daughter Parvati. My daughter by Tad\u00eafi, ordained by the Goddess to be the first born, will be named Shala while my first son will be called Harki\u0161heni [White Hair - I'd call him Raider when we were in the 'outside' world].\"\n\n\"My daughter by Miyako Yuri will be named Suwais-ur\u0101ni - Fushichou in her Mother's tongue - in honor of Sakuniyas. My ... other relationships ...\" I would have liked to say 'none of your business', except Amazon mothers, or not, those children would be of Ishara's blood and potentially their kin.",
        "\"Hana and I are still thinking over names ... the other three cases are ... perhaps more complicated than we should get into this morning,\" I finished off. Yeah ... my Illuminati aunt, the Hashashin advisor and my Seven Pillars' 'kidnapper turned Prisoner of War' cases. \n\nOnce the two crazy chicks (Buffy and Rhada) were contained, things quieted down quickly. I was left with the opportunity to immediately make things worse. There were four angry Amazons, yet only one in urgent need of succor. I pulled away from Elsa successfully this time. Her emotional focus on me couldn't withstand the volatility washing over the scene. She'd make me pay for it later.\n\n\"Buffy, I'm am all yours in 30 minutes,\" I touched her cheek. Juanita and Daphne didn't release her and I couldn't wait around for her blistering response.\n\n\"Oneida, please call me this afternoon so we can look to our next steps,\" I gave her my best 'I'm SO Happy everyone knows about our shared Warrior's Love' ... because lying was my only option at that second.\n\nI walked straight into the frothing Rhada. My arms wrapped her up. As I pressed in, she collapsed on to me. The two Amazons - the Head and Apprentice of House Nammu - released her into my care. Rhada's sobs disturbed everyone present. They weren't thinking 'he's broken her'. Had they felt that way, I would have been attacked.\n\nNo, they were worried that Rhada, like too many of their daughters, was 'weak' in the mind. I curled her body into mine as I went to the floor. As few people as possible around us needed to participate in our 'private' moment. Mahdi was coming around the table rapidly. I had to move fast.\n\n\"Hey,\" I whispered to her. \"You have a knife. Why are you not stabbing me?\"\n\n\"I am shattered inside,\" she sobbed.\n\n\"No - no, you don't,\" I kissed her forehead, aborting her pity party. \"Get up right now, or no more kitten showers for you.\" Rhada jolted. I had blindfolded and bound her, then let kittens lick her body. Afterwards, we had shared our first shower together. \n\n\"What ...\" hissed Mahdi. I had visions of Day #2 on the job and her whipping me with my own belt.\n\n\"Rhada has been protecting me since the day we first met,\" I looked up into Mahdi's eyes. \"She has been making sure I didn't flee after I knew your secret, though it took Oneida to explain to us why it was so. Right Oneida?\"\n\nI didn't look at Oneida. I gave her no hint on how to proceed. I'm a horrible influence on the hearts and minds of true romantics.\n\n\"Yes. I once found them in combat. I also misunderstood Rhada's desires, yet attest to my sister's fierceness,\" Oneida backed me up. \"We continue to disagree over where C\u00e1el's attentions are best directed,\" she tacked on. Whoops.\n\n\"I should have ...\" Rhada mumbled. Her next words would have been 'killed you ...' so I smothered her lips with a kiss. As I pulled her head back I mouthed 'stab me'. Rhada stabbed me. I winced.\n\n\"Fuck,\" I grunted.\n\n\"You stabbed him!\" the Apprentice of Nammu declared.\n\n\"He has left himself vulnerable,\" Rhada sniffled. \"He should know better by now.\"\n\n\"You are teaching him?\" she and Mahdi queried at the same time.\n\n\"He's a male,\" Rhada answered with more confidence and affection. She also snuck me a smile. Yep, I had masked her vulnerability with my own ~ silly male. Did ANYONE buy our deception? Not hardly. Once more it was a case of the lie you prefer over the obvious evidence. It was good to have friends too.\n\n\"C\u00e1el Wakko Ishara,\" Beyonc\u00e9 spoke up, \"how many heirs to Ishara are there now and what happened to the 'no-sex for the first 84 days' policy?\"\n\nI grabbed the proffered social lifeline with gusto. I regained my feet, pulling Rhada up with me.\n\n\"Ten ...,\" I looked over to Gael of House Bendis, \"Eleven. As for the 84 Day Rule - I am a reprehensible human being, the Poster Child for unreliable males everywhere, glib of tongue and when I find a woman I resonate with, I can't stay away.\" Ah yes, me and my old literary favorite resonate.\n\n\"He's been lying to us,\" \"ten?\" and \"what does resonate mean?\"\n\n\"Best Daddy Ever!\" Queen Aya declared in her piping faerie voice.\n\n\"WAIT!\" one woman's scream overwhelmed the others. It was Febe Mielikki. \"Is this what you do to our enemies? Tear them apart from inside?\" She was looking at me.\n\n\"Yes, it is (a lie - well, such things were her job, not mine),\" Katrina nodded. \"He is far harder on them. Witness the piles of dead he has lain before us in defense of our children, in revenge of the Hylonome and to protect our Queen. Ask the Seven Pillars and Condottieri how much they hate and fear the name Ishara over all other Amazon Houses. Better yet, ask a member of the Earth & Sky, or Nine Clans if they would unite our forces against our enemies without the clever council of Ishara.\"\n\nThat last sentence might have been scoffed at ... it certainly was derided with snorts and sneers by many initially. Then those Amazons saw the grim acceptance on the faces of their House sisters based in Africa, India and Indonesia - the front lines of the struggle. To them, the Alliance with the 9 Clans was fresh on their minds and deemed critical to any hope of success.\n\nThe seizure of the PRC's South China Sea island bases had been a combined effort of the Black Lotus, three Amazon houses and the E&S. The theft of the nuclear aircraft carrier had been a combination of the same factors with even greater risk of exposure, yet none denied the morale boost which permeated the Host because of the humiliation their warriors had heaped upon the Seven Pillars. \n\nThe trust their sisters had exhibited toward non-Amazons was appalling to the skeptical, although obviously necessary in hindsight. After all, defending your freeholds was important, yet every Amazon knew you won wars on the offensive - attacking, killing and seizing things from your enemies was the pathway to victory.\n\n\"We cannot ask Ajax,\" Rhada turned to Mahdi. \"C\u00e1el killed him for us.\"\n\n\"Did you really kill Ajax,\" Mahdi's eyes burrowed through my soul, \"the way we were told you did?\"\n\n\"Did I feed him to the Goddess Sz\u00e9lAnya?\" I looked to make sure this was the version of events St. Marie had conveyed to the Council. It was.\n\n\"Yes. I swear to you all, but it would not have been possible if Kwenhamai had not rekindled her love for her people and Bolu of Illuyankamunus had not remained steadfast and loyal when the rest of the Host betrayed him. Eternal love and deathless loyalty had as much to do with the death of Ajax as Sz\u00e9lAnya's might and any cleverness I can lay claim to.\" \n\n\"In truth, Ajax should have feared the Amazons. 3000 years ago, he belittled, betrayed and humiliated us. In turn, we tricked him into his own death. When given a second chance at life, he did the last thing any Amazon would do - he repeated the exact same mistake and paid for it with his life - again. Amazon love, loyalty, strength and wit are as strong today as they've ever been. He didn't learn from his mistakes; that is the real reason he's dead.\"\n\n\"150 words to basically say 'yes',\" St. Marie muttered.\n\n\"Those are the words of an Ash Man,\" Oneida sighed amorously. St. Marie was correct. I could have used one word instead of one hundred and fifty. I didn't because of people not yet present in this room. Every word spoken in Council was officially recorded unless the Keeper of Records was told to 'commit it to the nothingness'. From this day forth, when young Amazons girls would be told the stories about our most recent wars they would hear about the Slaughter of the Hylonome and the vengeance visited upon their slayers.\n\nSure, I'd play a prominent role. Ajax's return was intertwined with the return of House Ishara and that meant me, C\u00e1el, Vranus' heir. Sz\u00e9lAnya would get the credit for the kill, which would make everyone happy. An Amazon Queen couldn't even land a blow on him three thousand years ago, so a male Amazon having to feed him to a goddess was just fine in their book. Bizarrely, 'clever tricky' men were okay. It was the macho heroes which gave them problems.\n\nNow, with my hastily conjured prose, I had reminded everyone Kwenhamai was there as well. At the Seven Skulls, she had begun her path to redemption. Amazons were big on killing traitors, not rehabilitating them. Without Kwenhamai's betrayal of Ajax to me, there would have been no revenge and no birth of House Sz\u00e9lAnya.\n\nWhen those Amazon lore-mistresses repeated my words in the future, their daughters would ask, 'Who was Bolu of Illuyankamunus?'\n\nAnd then the lore-mistresses would have to say ... 'Bolu was an Ash Man and it was his devotion and that of his descendants which brought Sz\u00e9lAnya to fight at C\u00e1el's side that day.' \n\nFuck it all. He deserved at least a mention for all his courage and devotion. I had to believe when the Arinniti handed him their three sons and his orders, he knew something wasn't right. Vranus was a young man and gripped by the immediate desperation of his people. \n\nBolu though, was a seasoned fighter. More to the point, by his mid-thirties, he was a senior member of his House and most certainly his voice had been heard around the council fires of the Illuyankamunus.\n\nIn that moment, as the Arinniti spoke, did he want to confer with the elders of his House first? Did he ask about any of his own sons, or daughters? He was certainly old enough to have had a few. Or, did he look into their eyes and know the truth? \n\nYou have butchered my sons and nephews, and my daughters and my sisters let them die.\n\nAnd then he carried out his mission anyway. Because he was an Amazon and, unlike his sisters, he would never surrender to despair, no matter how grim the outlook, or heavy the odds. Unable to save his own offspring, he saved the three children of Arinniti and the one young warrior of Ishara. From Dot Ishara's own description, old Vranus wasn't terribly bright, yet the five had survived.\n\nHell - they'd thrived. 2600 years later, Bolu's actions had not only saved the true House Illuyankamunus - now Sz\u00e9lAnya, he'd saved House Ishara too ... and through me, House Anat - Saku ... and the Royal House of the Amazons through Kwenhamai and Aya ... \n\nAnd he'd lived long enough to have another family and teach them to be good little Amazons, even passing on the Hittite cuneiform in their religious practices. \n\nI couldn't imagine his final night before taking himself to the cliffs. Would he die alone without a Goddess and ancestors to welcome him? Would the religion he had passed on to his children be a lie? It hadn't. He was no augur. He had no way beyond faith to be sure. Still, he jumped. Generation after generation had taken themselves to the cliffs after him as well, proving his lessons had taken hold. For all that and more, I could give him a mention in our official records - his fierce determination reaching thru the millennia, guiding me to my rendezvous with Ajax. \n\n\"To answer the question which led us to this ... revelation,\" Krasimira interjected. \"The phrase is Meikkiz Kisetta! That is the formal greeting of Amazons to their Queen.\"\n\n'Meikkiz Kisetta' meant 'from many become one'; the ancient Amazon pledge which I felt had been echoed many centuries later ... All for one and one for all.\n\n\"Meikkiz Kisetta!\" they repeated.\n\n\"Thank the Goddesses,\" St. Marie groaned. \"Meeting adjourned.\"\n\n[THANK YOU FOR REMEMBERING]\n\n\"Krasimira, a moment in private?\" I requested as soon as the council meeting was concluded. She nodded. We walked side by side out of the chamber and into the hall. When the noises of the others grew muted, I dismissed Buffy, Juanita and Daphne. Krasimira motioned her followers to give us room as well.\n\n\"Two things,\" I exhaled. I placed a hand on her upper arm, stroking it affectionately. I doubt she'd ever beheld the gesture before. She was uncertain.\n\n\"First - thank you. Thank you for all that you and the other Keepers have done down through the ages. Thank you for the loneliness you have endured. I will take the reason for my thanks to the grave. You have been right. No one else should ever know.\"\n\n\"Secondly, I humbly request you tell me 'her' name. I would like to use it when I greet her when I pass. I imagine she hasn't heard it in a long, long time.\" By 'her' I meant Yakko Ishara. The second question was both a quest to determine if I had guessed right about how things had unfolded and as an indicator that I sympathized with her burden.\n\n\"Firstly, you are welcome. Secondly, whose name are you referring to?\" she smiled. Yep, I was right.\n\n\"It is okay.\"\n\n\"Thank you, Ishara. If I give you a fortune cookie to give to your goddess, will it remained unopened except for her eyes alone?\" Krasimira offered.\n\n\"Yes.\"\n\n\"I have never given a direct offering to a goddess before,\" she nodded. \"I would like to try. I will have the fortune cookie delivered to you before five o'clock Monday afternoon. Take care, Ishara,\" she bowed an inch, or two, then slipped past me and left.\n\n[SPINNING PLATES]\n\nI walked into my place right before nine. Odette was spending the day with her parents, so I had promised myself a little 'unwinding' time. Sovann, Timothy's Cambodian-American boyfriend, was on the sofa, hair wet, towel around his shoulders and 'boy shorts' underwear on (with nothing else) looked my way. Juanita was right behind me. At least they had met before. The shower was running.\n\n\"Hey Sovann,\" I headed his way. \"Good night last night?\"\n\n\"Yeah,\" he grinned. \"How's life been treating you?\"\n\n\"Stuff I can't talk about,\" I grimaced. \"Has Timothy talked to you about us getting a new place?\"\n\n\"Yes,\" he nodded. \"We are both of the opinion you need to keep the few sane friends you have.\" Ah, the advance in a relationship when the couple starts thinking of one of their friends as a friend of both of them.\n\n\"I appreciate it,\" I grinned. I was about to plop down on the sofa beside him when I recalled my 'company'. \"Juanita, can I get you anything?\"\n\n\"No,\" she paused then, \"what's next on the agenda?\"\n\n\"I am planning on hanging around for a half hour before calling my neighbor in 3F and inviting her out to brunch. She's done a great deal for me and, since I'm about to move out, I figure I would like to repay her kindness before I go.\"\n\n\"He means 'fuck her',\" Juanita sniped. Sovann arched a questioning eyebrow.\n\n\"Rough morning meeting,\" I mumbled. As my ass hit the sofa cushions, the shower cut off. Juanita's displeasure over the revelation of my sexual misadventures earlier this morning was amplified by the idea I might be talking 'shop' with non-Amazons.\n\nI'd talked down Buffy at Havenstone after the meeting. She had official business to take care of, which curtailed her ability to make my life miserable at the moment, so Juanita felt obliged to take over those duties. I had about had it with that shit. I was reordering my thoughts for the umpteenth time since Aya had become Queen and I'd become a Father ten times over when Timothy came out, a towel around his waist.\n\nOne look told him something was wrong with my soul. \n\n\"Bro,\" he murmured. I stood up as he approached. He wrapped me up in a hug. Sovann joined us a few seconds later. After a bit Timothy pulled back. \"What can you tell me?\"\n\n\"They screwed Aya over big time,\" I sighed, \"and I'm going to be a dad more than once. Everyone woman I know is either too good for me, or violently-bitchy fucking nuts.\" Sovann stole a quick glance Juanita's way. Timothy didn't.\n\n\"We were planning on catching a 12:30 showing of 'As Above, So Below'. You should come along,\" Timothy suggested. Normal guy-stuff.\n\n\"I could invite the girl in 3F,\" I amended the offer. \"We could do brunch at the Egyptian place first.\"\n\n\"Great,\" Timothy grinned. \"You go ask her and I'll get dressed.\"\n\nAs I was heading for the door, he called out from the bedroom.\n\n\"One of your Kazak buddies stopped by after they found out we were moving. They have scouted out a few place for 'their Prince' - eight in fact. They left a bundle for us to consider.\" Ugh. My 'Brother', the Great Khan, had heard I was moving, was currently living like a pauper and decided to do something about it. My 2014 Tax Returns were going to be ... interesting.\n\nJuanita tailed me to 3F. I rang the doorbell and waited. Movement ... hesitation ... \n\n\"Hey!\" through the door. \n\n\"It is C\u00e1el Nyilas from down the hall,\" I responded. \"You've been kind to me on numerous occasions and I've been remiss in thanking you. My roommate, his boyfriend, my 'buddy' and I are going out for brunch and a movie and I'd like it if you could come along. I apologize for the short notice. My life's been a mess recently.\"\n\n\"Oh ... OH!\" she gasped. \"Hold on!\" I could make out the sounds of her running around before the door swung open. She was blushing in embarrassment and it wasn't hard to see why. Her place as a pigsty. The girl in 3F was cute, zesty and vibrant ~ 5' 2\" and 110 lbs. She was busty, bra-less with dark-coppery hair pulled back in a loose bun and pale skin.\n\nShe was wearing a white wife-beater and cut-off jeans - no socks, or shoes. Both were stained. Her place was a mess with discarded fast food containers, pizza boxes, grocery bags, shipping boxes and other such debris lying about.\n\n\"Come in. Let me get dressed,\" she ushered me - us in.\n\n\"This is my bodyguard, Juanita. She's going to take a quick peek around then make herself scarce,\" I tried to smooth things over.\n\n\"In this dump?\" Juanita scoffed cruelly. \"I don't know where to begin.\"\n\nBlink. The girl in 3F's lower lip trembled and her eyes grew watery. She sniffled. I'd had it with ... everybody. \n\n\"That is uncalled for,\" I said in a dead voice as I pivoted toward Juanita. \"Go home.\" Juanita glared. \"I don't mean my home. I mean 'home' as in wherever you go when you aren't with me, because you are passed being on my last nerve. Don't call in a replacement either. I've had it with you and your fucking attitude ~ and today - right now - I am pulling rank. Get out of my sight.\"\n\n\"I'll be out in the hallway,\" Juanita backed away.\n\n\"No,\" I shook my head. \"You are not welcome in Ishara's presence for the rest of the day. Your crass words to a person who has only shown me kindness were the last in a long list of insults today which have had a detrimental effect on my quality of life. Go home and contemplate your failure.\"\n\nShe tried to match wills with me with her gaze.\n\n\"Let me at least call in a replacement before I go,\" she retreated.\n\n\"No.\"\n\n\"You are being unreasonable.\"\n\n\"Yes I am. A minute ago, you ceased being worthy of an explanation.\"\n\n\"I'm sorry,\" 3F spoke up. \"I didn't mean to make you and your friend get into a fight.\"\n\n\"We aren't fighting,\" I kept my eyes on Juanita. \"She made me a promise to respect my desire to live a somewhat private life. The way she treated you is showing the utmost disrespect to both you and me. She assumed no matter how horrible her behavior, I would stomach it. And I'm letting her know she's mistaken. Good-bye Juanita.\"\n\n\"Don't do this, Ishara,\" Juanita tried to guilt me by authority. \n\n\"You should have thought over your obligation to our House before you opened your damn mouth and insulted my neighbor, Juanita. The next words out of your mouth will be taken as an assault on my prestige.\" Basically, a 'fuck-you' to Juanita for being a bitch and then trying to guilt me out of over me punishing her over lousy attitude. By sending her away, I was punishing her, there was no doubt of that in my mind. \n\nThe agreement I had with my bodyguards was simple - I accepted the necessity of their presence because my life really was in danger and they accepted I wished to maintain some illusion of normalcy. Juanita crossed the line - again - and I'd had enough, so now NO Isharan was going to be around to both protect me and intrude on my normalcy and I was forcing the responsibility for my decision on both of us ... because it WAS her fucking fault. ",
        "Juanita bowed slightly, turned and left. Oh, she'd be calling this in. The difference was, she'd have to explain I was furious and why I was furious and that would make Buffy furious with her. And deep down, Juanita knew she was in the wrong. The next bodyguard(s) to show up would either be highly discrete, or someone I couldn't easily shove away.\n\nI had an immediate emotional crisis to deal with.\n\n\"I ...\" the girl in 3F mumbled, looking at everything, but me.\n\n\"Ya know, your decision to give the maid the week off was really inopportune,\" I grinned at her.\n\n\"Ah?\" She was stumped.\n\n\"I owe you a favor, or three, don't I?\" I inquired.\n\n\"You don't have to look at it that way,\" she evaded verbally while making eye contact.\n\n\"Deal,\" I widened my smile. \"We are going out to the Egyptian place a few blocks over. Get dressed. While you are doing so, I'm going to go completely OCD on you and pick up your living room. Pretend to be surprised when you come out,\" I finished with a chuckle. \n\n\"You ... ah ... don't have ... ah ... to,\" she worked through the weirdness of it all. My smile won her over.\n\n\"Good. Get dressed. I'll call my roommate and his boyfriend to hurry over here and help. Hurry!\"\n\n\"My place is a mess,\" she gulped.\n\n\"But it won't be ... and face it, after seeing me and my bodyguard get into a spat after her 'beyond' rude behavior and my offer to clean up your apartment, today can't get much more bizarre, now can it?\"\n\nYes. Yes it could, but by burying the bizarreness of me and Juanita, I was actually doing her a tangible favor - cleaning up her place - and taking her out with the option for sensuality later.\n\n\"Oh ... you are right. That was pretty weird,\" she agreed with an impish smile. \"I'll get dressed.\"\n\nShe skipped off to her bedroom. I called Timothy and had him and Sovann hot-foot it over to 3F with a box full of trash bags. Her place was a mess - capital 'M'.\n\nTake an impossibly awkward situation of finding a guy you are sexually curious about, his gay roommate and his gay roommate's boyfriend in your apartment's main room cleaning up the place and turn it into a game. Forty-five minutes later, Theddy (Theodora) wasn't sure why she felt embarrassed about having the three of us over.\n\nWe put sixteen extra-large trash bags on the curb along with her old sofa. We gave her our brand new, sleeper-sofa since we would soon be departing. I was also giving her my relatively new bed (we would work out a deal on my suspension equipment). We chiseled her old carpet off the floor - it was beyond gross, tore out her garbage disposal - it was developing intelligent life - and cleaned her bedroom and bathroom too.\n\nAll along, we bantered about numerous topics including ...\n\n[Sovann] \"So what do you do for a living?\"\n\n[Theddy] \"I'm a sound technician ... I dub for ... pornos ...\"\n\n[Me] \"My ... how bizarre. I love porn. Have you done anything I may have listened to?\"\n\n[Theddy] \"Maybe ... I also sell the soundtracks of your sex-capades.\" She was blushing, shuffling her feet and looking down as her confession spilled forth.\n\n[...]\n\n[Theddy] \"I saw a girl break into your place, but didn't report it. Was that okay?\"\n\n[Timothy] \"What did she look like?\"\n\n[Sovann] \"Was she armed?\"\n\n[Me] \"Hey now!\"\n\n[Sovann] \"You're right. Stupid question. Of course she was armed.\"\n\n[Theddy] \"Really?\"\n\n[Me] \"Plenty of women show up to my place unarmed. Odette has never shown up armed. Neither has Brooke, or Libra.\"\n\n[Timothy] \"It is so sad when it is easier for you to name your unarmed girlfriends than your armed ones.\"\n\n[Me] \"It is NOT that bad.\"\n\n[Timothy] \"Yes it is.\"\n\n[Me] \"No it isn't.\"\n\n[Sovann] \"Yes it is. Shall I name five?\"\n\n[Me] \"Fine,\" I hung my head. \"Let's not.\"\n\n[Theddy] \"Do you hang out with really deadly women?\"\n\n[Me] \"Define 'deadly'.\"\n\n[Timothy] \"Yes, he does.\"\n\n[Sovann] \"Bro, it's gotten so bad, Odette started giving a technical critique to the last action movie we watched together.\"\n\n[Me] \"That's not my fault.\"\n\n[Timothy] \"Right. It's your crazy Grandmother's and your buddy in the SAS' faults.\"\n\n[Me] \"Pamela's not really my Grandmother and he's not in the SAS. He's in the SRR. They're totally different.\"\n\n[Theddy] \"I noticed you didn't say she wasn't crazy... and who is the SRR?\"\n\n[Timothy] \"The British Special Reconnaissance Regiment.\"\n\n[Me] \"They're big map and compass people.\"\n\n[Sovann] \"Like big, delicious Boy Scouts.\"\n\n[Timothy] \"With guns.\"\n\n[Sovann] \"Oh. He had a gun?\" and then Timothy threw a coach pillow at him.\n\n[...]\n\n[Theddy] \"I'm sorry that guy tried to kill you.\"\n\nPause as we three looked at each other.\n\n[Timothy] \"Which one of us?\"\n\n[Me] \"Which time?\"\n\n[Sovann] \"Hang out with C\u00e1el and you'd be surprised how many people show up trying to kill you ... or him ... or someone else.\"\n\n[Theddy] \"Really?\"\n\n[THE CULT OF THE JAGUAR]\n\nWe were walking back from the eatery. They were walking from the direction of Casa de Timothy, heading our way. There were five Latinos: two girls and three guys. To put it more accurately, there was one lady, one woman and three men. To say it like it was - there was one spirit-creature, one priestess-savant and three foot soldiers.\n\nAs previously revealed, the various members of the 9 Clans operated differently. The Cult of the Jaguar operated like a ... cult. They had a mess of flunkies at the lowest level - cast-offs, ex-drug users, the insane and those not quite right in the head. Essentially those people operated as a nearly endless supply of cannon-fodder for the Cult's activities and served as a base of worship for the Cult's divinities. \n\nNext up the ladder you had the 'messengers'. Normally, they were not actually part of the cults, instead running the more mundane operations the Cult (big 'C') owned and operated as well as interacting with the various cults (little 'c'). Often 'messengers' worked for the Cult for generations in family businesses with some members not knowing the totality of their involvement with the criminal underworld.\n\nThen you had the priestly caste. Priests, priestesses, savants and priest/ess-savants ... the priests and priestesses performed rites, led rituals and ran the organization. Savants, like my Amazon augurs, had mystic powers granted/cursed to them by interactions with supernatural beings.\n\nIn the Cult, there were four ways to get your priestly caste. You could train them. Some divinities had schools who trained their leadership up from a young age. Like any other profession, you learned and progressed as you grew older.\n\nOr, a divinity could 'imprint' the knowledge in you. I understood those priest and priestesses burned out rather rapidly. Less we forget, this was a cabal of ruthless killers we are talking about.\n\nYou could also create a savant in the same method ~ spiritually twist some poor soul to serve a purpose. Their life expectancy wasn't worth writing home about.\n\nOr, you could breed them ... yeah. Breeding people with supernatural horrors ... and these were my allies. Of course, being walking-talking abominations to the Weave had its own psychological pitfalls ...\n\nAnd, at the top of the individual cults were things like the 'lady' coming at me right now. I'd been briefed about them and theorized I could make one out for what it really was because of my own mixed-up noggin - and I was right. Heading up each individual cult in the Cult of the Jaguar were avatars for the various divinities within the Cult pantheon.\n\nDespite its name, the Cult of the Jaguar was not devoted to the jaguar (the animal), or even the Jaguar God (alone). It was an amalgamation of various Northern and Southern Native American divinities ~ okay FUCKING NASTY ASS divinities who feasted on death to keep a toe-hold in our reality. They had NOT gotten along with Christianity, nor agreed with the Weave's verdict that their time had passed.\n\nThe Weave's response was pretty clear. It had things like measles and smallpox to undercut those divinities' worship base to which these powers had no counter. Every other pantheon had retired into legend, like the Amazon Goddesses, or behind layers of mundane ritual, like the Hindi. These guys, and gals, refused to accept the message and still practiced that Old Time Religion.\n\nHow they ended up in the 9 Clans wasn't explained to me. They killed people - that was for damn sure. The only true assassins were the cult leaders. Of all the 9 Clans, they were the worst. No person had EVER survived having a contract accepted by the Cult of the Jaguar ... no amount of hiding, running, or fighting back had ever saved anyone. They always killed their targets. Always.\n\nThe reason was their leaders weren't human. They were monsters - think Grendel from Beowulf's Saga. Sure they looked human on the outside. Somewhere around the tenth shotgun blast to the face, they looked a whole lot less human, but that didn't stop them. According to my Alal-knowledge ... you dismembered it rapidly (they healed pretty quick) and then burned the severed bits. He'd done it before ... to more than one of them ... just not this one ... 'cause it wasn't like any of those creatures stayed dead ... or forgave, or forgot a damn thing. Oh joy. Me, him and our extremely distinctive emerald-green eyes.\n\nAs a final note: technically the Cult of the Jaguar controlled all 9 Clans' territory in North and South America. In actuality: in Canada, they let the Brotherhood of the Wolf establish bases. In the US east of the Mississippi and north of the Gulf, they allowed the Black Hand and Brotherhood to work. In Brazil and the Caribbean, they allowed the Coils of the Serpent to set up shop. All three did so knowing they operated under sufferance of the Cult and the Cult didn't fuck around.\n\nSo, why didn't they send a representative to my Father's funeral? They had no clue who he was, or how things would turn out. Send the head of a cult? Dad wasn't worthy enough. (Recall, the Earth & Sky sent Iskender, not someone of note at the time.) Sending a mere 'messenger' would have been insulting to the Amazons. Instead, they let the other 9 Clans handle it ... and look how that turned out. Or ... I'm a fucking idiot.\n\n[AND BACK TO ME]\n\nNo one outside the Cult of the Jaguar knew the precise number of composite cults made up the organization, but many of the divinities had a history. I was looking at ... the Obsidian Butterfly ... okay ~ a walking patch of starless night in the form of a constantly mutating voluptuous, hourglass-shaped woman, bipedal bat and eight-winged butterfly. \n\nA quick mental 'background check' matched to her image gave me a name - \u012atzp\u0101p\u0101l\u014dtl, so the wacked-out side-kick had to be her half-human 'daughter'. I had a feeling the various divinities didn't share offspring much, considering the spiritual investment actually breeding one took. \n\n\"Bro,\" Timothy whispered. \"Freaky-looking chick staring our way.\"\n\n\"Yeah. I'm afraid so,\" I agreed. I subtly snuck an arm around Theddy who had picked up on our changing tone of conversation.\n\n\"I think we can take them,\" Sovann noted after studying them a moment.\n\n\"Let me clarify things for you,\" I snorted. \"Tricycle, tricycle, tricycle, 4x4, Land Leviathan.\"\n\nYeah, we could kick the three guys' asses. Their basic brutality couldn't compensate for Sovann and Timothy's courage, bulk and brawling expertise. They were essentially for show anyway. The priestess-savant looked pretty young ~ say 19 to 23 ~ and fit, but not martially adept. I could take her. Timothy, or Sovann probably could take her, being bigger and stronger. The avatar was utterly deceptive in her lethality. None of us stood a chance against such a creature.\n\n\"I feel weird,\" Theddy shivered. She pressed tightly against me.\n\n\"Ever had a near-death experience?\" I asked while keeping my eyes forward.\n\n\"Yeah. How did you know it felt like that?\" Theddy looked up at me. I was peripherally aware of her head movement.\n\n\"Call it a hunch.\"\n\n\"That chick is seriously weirding me out,\" Sovann muttered.\n\n\"And she's looking pissed,\" Timothy added.\n\nOh yeah. She was probably trying to mystically scope me out and getting nowhere, thanks to Dot Ishara. Bitch (not Dot). We were closing with their group fast. I had to think faster.\n\n\"Take this,\" I handed Theddy my food container. I drew forth my phone and called my No. 5 ... no 6 ... no No. 7 Go-To Gal.\n\n\"Estere,\" I opened up. Estere Abed, the Hashashin assassin and current 9 Clans liaison with JIKIT. \n\n\"Yes C\u00e1el?\" \n\n\"Did you send someone to meet with me?\"\n\n\"Yes. Per your 'office's' request, an emissary should be talking to you momentarily. I was led to believe your schedule had opened up. Is there a problem?\"\n\n\"Composition of said embassy?\" \n\n\"I was supposed to be ... it isn't a messenger, is it?\"\n\n\"Nah.\"\n\n\"Are you in danger?\"\n\n\"Hmmm ... too late now. Give Buffy a very special 'fuck you very much' in case I never get to see any of you ever again,\" I jibed.\n\n\"C\u00e1el ...\"\n\n\"I've got a not-amused Bat-girl to talk to. Take care. I'll update you later,\" and I hung up. What else could either of us say? To get around my pique and still protect me, Buffy had sent in the 9 Clans to chat with me, not understanding the nature of the chatters. In the past, Estere and Miyako had both protected me and calmed me down. Oh well.\n\n\"C\u00e1el Wakko Ishara,\" the 'lady' greeted me.\n\n\"Yep. This is Timothy, Sovann and Theddy. We are on our way to see 'As Above, So Below'.\" I took the initiative. She was confused. \"It's a movie.\"\n\n\"That is not why ...\"\n\n\"Listen,\" I cut her off. \"I apologize in advance for my brusque manner, but I'd rather try to ass-fuck a wild rhino than discuss business right now. \n\n\"I know who and what you are and I don't care. For the next eighteen hours I'm a 22 year old directionless moron who doesn't want to see things Man was not meant to see, the restless dead, or the look of disappointment on a woman's face. I don't mean to insult you. You are merely on the tail end of a three-month long Conga line which has been stomping all the happiness out of my God-damn life ... \n\n\"So smile and say 'hey, a movie sounds like a great idea' and join us, \n\n\"Let us go on our way for now while promising me endless agony later like every other fucking divine bitch in my life, \n\n\"Or give me thirty seconds to say good-bye to these nice normal people then I'm going to draw down on your merry little band of murderers and you're going to kill me, or I'm going to kill the rest and seriously inconvenience you. \n\n\"Now, has anything I said been unclear and, if not, can I please have my answer now? The movie starts in 30 minutes and I don't want to miss any of the previews.\" \n\n\"Teoyotlni?\" she exhaled extenuating sexual menace. No, she had not given us her name. Nah, in the Olmec-derivative she was speaking, she had asked me 'do you know I am a goddess?' One word ~ cool.\n\n\"Acampa nic\u00e3catzahuacatlhuatl cuel cuitlananaca,\" I responded smoothly. Loosely translated as no one in my shitty world gives a crap right now.\n\nNow I knew why Alal knew their lingo. \n\nWhat kind of body was he walking around in at this moment? It wasn't mine, my aunts claimed it wasn't his original one and Pamela had noted it wasn't right, the one time she'd met Alal since his return ... and here I was looking at an avatar ... which is basically a spirit made flesh. Fuck a duck. Somehow, somewhere along the line, Grandpa had figured out the mystic trick these divinities used. Probably through the judicious use of torture ... because that's the kind of role model he was - the Fucktard.\n\nHe didn't have their full range of supernatural powers, so his 'avatar solution' was temporary at best. Fuck, fuck, fuck, fuck, fuck. I still had this problem at hand. A little body politics was going on. The 9 Clans delegation had stopped, but the avatar kept coming. Timothy knew better and Theddy was rightly terrified for no obvious reason. Sovann decided he had to do something.\n\n\"I know you are having a bad day,\" he quietly chastised me as he tried to step forward to confront the woman. Timothy's powerful arm slammed out like a crosswalk bar, stopping his progress.\n\n\"Don't,\" was all he said. The intensity of his tone was enough. I pushed Theddy away and to my rear. There was a blind, deaf-mute across town in a coma who knew this bitch was furious with me - him and about a million other New Yorkers. NO ONE talked to her the way I had done - horrible-fucking day be damned - and lived long enough to joke about it.\n\nThe priestess-savant was distressed, not angry. Her guiding light in life was focused elsewhere. The three goons were equally adrift, yet their minimal attachment to social normalcy left them uncertain. There were precisely two things - okay, four things - keeping me alive. The fourth thing would come to her later when her 'furious was replaced by her 'curious' ~ as in how I knew her inhuman lingo ~ which would lead to my legacy with Grandpa.\n\nThe top three reasons -\n\nShe had poked my chest. It was a challenge, calling for one of my guardians to come out and play. The avatar knew I was the chosen heir of the Goddess Ishara and my goddess had devoted a good deal of time and effort to my survival and continued service in her cause. If Ishara made an 'appearance', it would be enough reason to not eviscerate me for my foul treatment of her august personage.\n\nNope. It seemed Ishara was busy at the moment.\n\nStill, she most likely knew Sz\u00e9lAnya had shown a keen interest in me in Romania, though I'd never told Selena, or any other member of the 9 Clans, the Dragon's Daughter had killed Ajax for me. Figuring out Sz\u00e9lAnya, a storm deity, had helped me and Aya escape from our kidnapping in the midst of a cyclone in the Pacific Ocean wasn't much of a reach.\n\nBut no bolt of lightning coalesced from my chest to singe her finger. No clap of thunder. Not even a cloud with a hint of disfavor appeared above us.\n\nHer obsidian fingernail began penetrating my shirt, touched my skin, then drew my blood ... and something 'twitched'.\n\nThat would be Contestant Goddess #3. She wasn't actually hanging around me. She didn't have to. She'd left me a memento of our last shindig before we parted ways. That was the nightmare-inducing episode where she, the chthonic goddess Sarrat Irkalli, had compressed one man's body into a dagger and then proceeded to suck another's soul into it to use as a power source for an Airbus 350 (a commercial airliner, if you didn't know). \n\nI still had that snaggletooth-looking thing at my back. Well who the Hell was I going to leave it with? Honestly, the only people I felt could keep it safe I loved too much to curse with it. Anyway, the second her divine claw touched my blood, the long dormant weapon whispered to me in a somewhat bored, lofty feminine voice from beyond the grave,\n\n Do you want me to discorporate this pathetic has-been for you? \n\nQuick check. Only the avatar and I ... and her priestess-savant heard that. Of course, in downtown, New York City, noon Sunday, how weird would such a declaration be? The avatar's eyebrow arched. Her big bat-ears (still looking human to the normal viewing public) flicked this way and that, figuring out precisely where the threat originated from. Slowly, her once poking hand began to slide across my chest, along my ribs and around my back.\n\nShe touched the dagger. Nothing.\n\nGingerly, she drew it forth. I'd had a makeshift sheath made. As the blade made its journey around me, she took a half-step back to better observe it.\n\n\"Please don't kill him!\" Theddy squealed. \"We haven't had sex yet!\"\n\nBeing 'who' and 'what' she was, the avatar did what came natural. Fortunately for Theddy, I'd become accustomed to working with psychopaths.",
        "She stabbed the dagger at Theddy. I clamped my hand down on her wrist. The claws of her left hand came down on my constraining wrist. My free hand came down on that hand, trying to pry it free. It was a hopeless struggle ... except.\n\nYes, my old friend 'except'. Except the avatar was holding the dagger. As powerful as \u012atzp\u0101p\u0101l\u014dtl was, she wasn't pushing against me. She was pushing against Sarrat Irkalli.\n\n\u012atzp\u0101p\u0101l\u014dtl was a living, breathing terror machine who killed and received sacrifices on a regular basis.\n\nSarrat Irkalli hadn't been actively worshipped in 3,000 years.\n\nUneven contest? Oh yeah.\n\nSee, \u012atzp\u0101p\u0101l\u014dtl had spent the past 500 years continuously fighting against the Weave to keep her fingers on this side of reality.\n\nMeanwhile, for the most part, Sarrat Irkalli had sat upon her throne in the Sumerian Underworld with hundreds upon hundreds of thousands of souls toiling under her watchful gaze for ETERNITY. Sure, her version of Hell wasn't getting any fresh deposits, but she knew how to milk the system well.\n\nEven the bad karma for the dagger's creation wasn't hers. She'd stolen it from the foolish Gong Tau sorcerers who had meant to enslave my soul, aka one-third of the Baraqu-Alal-C\u00e1el deal she'd worked out millennia ago. It was the Weave giving her a 'freebie' for playing by the rules ... if you considered the Weave sentient. \n\nAnd now \u012atzp\u0101p\u0101l\u014dtl was touching it. Whoops. It wasn't as if \u012atzp\u0101p\u0101l\u014dtl was stupid. It isn't like there are tons of magic weapons running around, much less soul-munchers like the one I had. Rationally, who would give a novice like me, a weapon like this? I say again, 'whoops'.\n\nOnce I'd figured this out, I couldn't stop being me.\n\n\"Theddy, do you like girls?\"\n\n\"What?\" she squeaked. Here was this psycho trying to drive a Smilodon incisor into her bosom and I was giving her a sex quiz.\n\n\u012atzp\u0101p\u0101l\u014dtl was really starting to struggle now.\n\n\"I ... ah ... are you okay?\" she continued.\n\n\"Oh, I'm dandy. I'm serious. You think this chick is hot? I mean, would you do her in a three-way?\" I proposed casually.\n\n\"Timothy?\" Sovann.\n\n\"Bro?\" Timothy to me.\n\n\"It's all good. Sovann, you want to know what my life is like? This lady who came to discuss business with me today is an immortal mass murderer. You give the word, I'll let go and this knife is going to cut her up like a Ginsu blade on market day because just cutting her heart out isn't going to be enough. Worse. Eventually she'll get back up.\"\n\n\"Timothy?\" Sovann repeated, this time with more concern. He thought I was nuts. I released my left hand. The blade flipped up, twisting in the avatar's grasp. That was the point her minions figured out something was wrong.\n\n\"El Amado?\" the priestess-savant called out softly. The three goons began reaching for 'things'.\n\n\"Call them off, or I open my other hand,\" I cautioned the avatar. She spared me a swift, hostile look. My fingers tingled.\n\n\"Esten quietos!\" she snapped. They stopped.\n\n\"C\u00e1el, bad day, or not. This isn't you. Stop it. The girl's in danger,\" Timothy spoke up. He didn't mean Theddy. He meant the avatar.\n\n\"I'm being a real asshole, aren't I?\" I sighed.\n\n\"Pretty much. You never let the bitches get to you before. Girl pops an attitude, you smile and move on. Life is too short,\" he reminded me. Too true.\n\n\"I'm going to put my hand over the blade,\" I told \u012atzp\u0101p\u0101l\u014dtl. \"When I do, you can let go.\"\n\nShe didn't say anything for several seconds, even after my left hand covered the semi-serrated edge.\n\n\"Why should I trust you?\" she sizzled.\n\n\"Because 'me' letting anything bad happen to you would make me a total, judgmental jerk. I don't know you. Whatever you did before you showed up today shouldn't matter to me. I acted stupidly. I should have stopped you. I didn't. I didn't even warn you and I could have. I was angry ... and not even at you. Just angry and I apologize. Now, let go.\"\n\n\"Why?\"\n\n\"Hi. I'm C\u00e1el Nyilas. Can I have my knife back? Please?\"\n\nBlink. She released it. For a millisecond, it wanted to do something else because bitches are bitches. It didn't, so my palm wasn't sliced open. My right hand took the hilt. I carefully put the blade away.\n\n\"Yes,\" Theddy gulped.\n\n\"Huh?\" Sovann shook his head at the sudden evaporation of the life and death tension. Welcome to my life. Theddy meant 'yes' to the 'girl-girl-guy' thing I had proposed earlier. It pays to keep things prioritized.\n\n\"What is this movie you were talking about?\" \u012atzp\u0101p\u0101l\u014dtl asked. Had she forgiven me for anything which had transpired? Bwahahaha ... no way. She was taking the initiative and going with Option 1 from my earlier insane diatribe.\n\n\"Wait!\" Sovann nearly shouted. \"You nearly ... I don't know - threatened C\u00e1el's life and tried to stab Theddy and now you think you can go with us to a movie?\"\n\n\"I told you,\" Timothy put an arm around his shoulder, \"life with C\u00e1el is rarely dull.\"\n\n\"I thought you meant he was fun to party with, or something like that,\" Sovann looked up at his lover. \"I thought his uncle showing up ... and trying to kill him and then being blown the fuck away by those women and federal agents ... and that other girl who pointed a gun at us ... is this the new normal?\"\n\n\"I love you, Sovann,\" Timothy grew compassionate. \"C\u00e1el is my best friend. He'd never deliberately hurt either of us and normal friends are something he has in short supply. Today being a great case in point.\"\n\nTen seconds passed.\n\n\"The title is 'As Above, So Below',\" Sovann addressed the avatar, \"and what do we call you?\"\n\nSince 'if you are not a worshiper and addressing me, I normally am about to kill you' would sound really cool in Olmec-ic, but I might be asked to translate, \n\n\"How about we go with 'Obsidian', please?\" I pleaded with her.\n\nShe knew I was currying favor now ~ and behaving like a weather vane caught in the wall of a tornado ~ she gave a gracious bow of her head.\n\n\"Obsidian will do for now. Is the Legend of the dagger 'business'?\" Translation: it had better not be.\n\n\"No,\" I smiled. \"It's pillow talk.\" Rancor - 'how presumptuous' - followed by 'but that dagger ups the count to THREE Goddess interested in him' - and next to recalling all the trivial babble about me being a sexual dynamo (I prayed my PR was that good) having some relevance. Her chimera emotions allowed me to get a few more crucial words out ... because even women who aren't sleeping with me are jealous.\n\n\"Esta mujer fue la primera en ofrecer bienes funerarios tras la muerte de mi padre,\" I reinserted Theddy back into my close company. For some reason, Obsidian considered me unreliable thus had to verify what I'd just said.\n\n\"Did you make funerary offering upon his father's passing?\" she asked Theddy. Let's think about this. The wacko chick questioning Theddy had tried to stab a huge freaking blade into her not a minute ago. Fleeing in terror while screaming for the cops? Nope.\n\n\"Yes. I baked him some walnut and caramel chip cookies,\" she nodded. \"It is a family recipe.\" Sovann looked over the three of us, then back to Timothy.\n\n\"I told you 'that's impressive dicking like I've never seen before',\" he explained.\n\n\"She may remain,\" Obsidian 'permitted'. Theddy wrapped up my right arm with her left and gave it a squeeze. She wanted attention/explanation.\n\n\"Obsidian is a Master Vampire, Theddy,\" I leaned in and whispered. \"Before she was turned, she was captured in a raid by the fey, mentally, spiritually and physically raped and made into their sex-slave. Part of her spirit never healed properly. While this imperfection allows her to walk around in daylight, her heart can never hold on to any emotion for long, so she is forced to forever seek passion, no matter how dangerous, from the world around her.\"\n\nRevealing secrets? Ha. I had noticed Theddy had every work done by Laurel K. Hamilton in her place, including the comic book series. \n\n\"You are not supposed to know, so act like I didn't tell you anything, okay?\" \n\n'Okay,' she mouthed back at me. I could see it in her eyes. My chaotic life suddenly 'made sense' to her because a best-selling fiction author said so.\n\n[...]\n\nObsidian thought the movie was ... HILARIOUS. She couldn't stop snickering, giggling and poking at me as horrible shit happened to the various actors. She thought the plot was 'insightful' and wouldn't stop whispering to me throughout the entire thing. During the closing credits, I told her I'd get her the DVD for Christmas ~ she knew the concept behind digital technology, but didn't own any ~ she kissed me.\n\nThe first kiss was fierce and joyous with the added benefit of her tongue doing things no normal tongue could do - it stretched. Not sure how I felt about that. The second kiss was more sultry, longer and came with some accompanying body action which ... I'm no virgin. Not even close. She was on my left side, so when she twisted in her seat, her left leg insinuated itself between mine. Her left hand cupped my jaw and held my head in place as her lips played along mine.\n\nA dance of the scorpion perhaps? Tender at first, then suddenly stabbing, dominant and brutal. My lips and tongue battled back, using my superior Kiss-fu to nullify her natural strength and agility. She liked it. By her moaning, she liked it a lot. As the kiss progressed, more and more of her flowed from her seat into my seat, body facing me. Her body rose over mine, forcing my neck back to maintain contact. \n\n\"So, Dot Ishara is hovering around somewhere close, isn't she?\" I murmured as our lips separated barely a centimeter apart. One chick kissing you to make another one jealous. It's happened to me plenty of times. Obsidian didn't give a damn about Theddy, or any other mortal woman in close proximity so ...\n\n\"Yes,\" she purred. \"Do you mate with her?\"\n\n\"A man does not brag of such things ... but no, unless heavy petting counts?\"\n\n\"What will she do to you when I steal your seed?\"\n\n'When'? Why was I not surprised? Why was I not surprised another concussion was in my immediate future either? Was it possible I was ... learning?\n\n\"Chastise me for not fighting harder,\" I breathed across her lips, \"and, in case you forgot, I'm on a date with the girl beside me.\"\n\n\"Who I care nothing for,\" she sent a cruelly playful look Theddy's way. Wisely, the girl shivered.\n\n\"Who I am indebted to and how I honor my debts might matter to you,\" I hazarded. My words hurt Theddy's feelings. That was on purpose. Obsidian took pleasure in me hurting Theddy because she was basically a vicious monster.\n\n\"Yes?\" I pressed her gently.\n\n\"Yes,\" Obsidian allowed, easing up slightly both romantically and physically.\n\n\"And Theddy, if you believe I'm with you solely because of some sense of obligation, you clearly haven't been listening to your recordings,\" I shot the human girl a wink.\n\n\"Oh.\"\n\n\"Am I, or am I not, a sex-obsessed little monkey?\" I teased her. Theddy giggled. I paid for my diversion with four obsidian claws to my ribs outside of Theddy's view. After all, it wasn't like Theddy could possibly compete with her for my attention. Considering Obsidian's legendary ability to rip open her opponent's ribcages and feast upon their hearts ... I slipped my left hand - the one next to her between her legs and stroked her cotton-slacks covered pussy. \n\nTheddy hugged my right arm and put her head against my shoulder. Not to be outdone, \n\n\"\u00bfQu\u00e9 un centenar de hombres se quemaron vivos como el sonido?\" Obsidian inquired with sexually sadistic hunger. Ah, memories of burning 7P Commandos.\n\nWhoops. Theddy knew Spanish.\n\n\"No lo s\u00e9. Ten\u00edan respiradores en,\" I replied casually. \"Si lo desea, puedo describir lo que se siente al tirar de una flecha de guerra lanzar mi propio muslo.\"\n\n\"Eep,\" slipped out of Theddy's lips. \n\n\"Why did you do that?\" Obsidian looked over us both.\n\n\"Well, I was showing a little girl I believed in her ...\"\n\n\"And she shot you?\" Theddy gulped.\n\n\"No. She hit the target I was standing next to. A co-worker mistook me for a cardboard cutout of a Jehovah's Witness and let fly. Seems she had issues with organized religion as well as a reaction to the oscillation effect of florescent lighting and ceiling fans.\"\n\n\"But why did you pull the arrow out?\" Theddy asked. \"Couldn't you wait until you got to the hospital?\"\n\n\"Mosquito,\" Obsidian menaced, insinuating Theddy was a pest.\n\n\"I wasn't thinking rationally at the moment ... I work in an asylum ... I had a hot date in a few hours ... any of those three will do,\" I smiled at Theddy.\n\n\"Copil such as C\u00e1el don't bother with petty human conventions,\" Obsidian turned my gaze back her way with her hand on my jaw. 'Copil's were 'god-touched' in her lingo.\n\n\"More than one girl?\" Theddy mused.\n\n\"Four.\"\n\n\"Okay,\" she sighed happily. \n\n\"Theddy, three under-age girls and the police office he was dating acting as their chaperone,\" Timothy intervened. \"He hurried home so he could keep a promise to the children, not for sex.\" Bastard. He really was my best friend. He didn't mention my post-injury, pre-festivity sex with Odette giving me a few extra, urgently needed Brownie Points to suggest I might be a decent human being.\n\n\"You are a wonderful guy,\" Theddy ran a fingernail over my free hand. Clearly I was 'wonderful' enough to risk Obsidian's anger over. The screen went blank as the last credits scrolled away and the room was plunged into darkness. Five seconds later, the lights snapped on.\n\nPAIN!\n\n\"Fuck,\" I hissed. It wasn't any extra physical trauma causing me discomfort. No, a metaphysical dam had burst within and my stream of conscious thought had been turned into a white-water rapids. The competing cyclones of thoughts in my mind had stopped cooperating and my hypothalamus was letting me know I was in danger.\n\n\"C\u00e1el\", \"C\u00e1el\", \"Bro\", and \"Ishara\" all came in rapid succession. I needed some space both tangible and social.\n\n\"I need to step outside,\" I eased Obsidian off me and stood up. My sense of my personal danger was ratcheting up. While I had been studying Obsidian - so I could screw her - I had discovered more and more Alal-badness.\n\nThe light display had ignited a series of pressing implanted memories which had been clamoring for my attention. Things like not all 'divinities' were stewards of the Weave. Some even wanted its destruction, preferring risking all on a chaotic restructuring of reality over what existed now ~ things like Obsidian. They weren't attempting to do so because they thought they had no chance.\n\nBut there was. A real serious chance to unravel reality existed; and it was staring her in the face. It wasn't 'me' as in 'I was the Anti-Christ'. But with the torrent of memories pouring forth, I knew where the peril lay and I was completely responsible for it. Hell, I was a prime ally of Armageddon and hadn't even known it.\n\n'Holy Shit!'\n\nI blinked. Timothy was shaking me. We were out in the lobby.\n\n\"Oh my God, Timothy,\" I nearly wept. \"What am I going to do?\"\n\n\"I have no idea what you are talking about. Is there someone you can talk to about this?\" he suggested. Normal folks were around us. Obsidian was at my side. Sovann was behind Timothy with an arm around Theddy's shoulder.\n\n\"Theddy,\" I looked at her. \"Can I catch up with you later? I just realized I've screwed up something fierce.\" I put my best 'really don't want to go but I gotta' face on. Her worried look brightened, she slipped around Timothy and gave me a tingling French kiss.\n\n\"I'll hold you to that, C\u00e1el,\" she murmured when we parted.\n\n\"Timothy, go home ... I got shit to deal with,\" I hoped my grin didn't become as feeble as I felt it to be.\n\n\"I ...\" he started to say something. \"Time not to ask questions?\"\n\n\"Yeah.\"\n\n\"Okay.\"\n\n\"Wait.\" I pulled us to the side and went on to my toes, leaned in and whispered in his ear, \"Tell Pamela 'he' sent Ajax to kill the Professor, his family and the sisters. They were the targets all along. It wasn't me, or the other women. Just in case ...\"\n\n\"Okay,\" Timothy patted my arm. It was cryptic. It was the best I could do. See ... I wanted to cry so badly. \n\n{2:09 pm Sunday, September 7th ~ Last day}\n\n[WHERE TO BEGIN?]\n\nEvery mythology across the globe has some creature, or creatures, which threatens Existence. Usually a God, or a Hero-God, slays the creature and everything is right with the world ... except such a being, being older than Existence itself, can't really die, so they are carved up, buried ~ what have you.\n\nIlluyankamunus was one such manifestation of this underlying cancerous desire to destroy reality. He'd had a far more real child - Sz\u00e9lAnya - and she's never quite given up on her dad. Of far greater critical importance, she was 'part' of Illuyankamunus, somewhat in the way I was part of Alal and Baraqu. And yes, that meant all the offspring of Bolu, the guy I'd praised a few hours earlier, held the seeds of that malignant deity as well.\n\nAnd Alal knew it. He hadn't been killing off the descendants. He'd left that task up to a group far more capable of the task - the Egyptian Rite, who knew a fucking threat to existence when they saw it. Lest I forget, NO secret society are the 'good guys'. Also lest I forget, I alone decided to go after the Arinniti sons to fulfill Vranus' quest. I had no divine mandate I was aware of nor any real world orders.\n\nInadvertently, I had rounded up the last five mortal remains of Illuyankamunus in one place for convenient disposal in a remote Transylvanian town. The only problem was: if someone didn't get to them quickly, I was also about to whisk them into the loving (and heavy-armed) protective embrace of the Amazon Host, where the completion of centuries of culling would have suddenly become a cast-iron bitch instead of a simple disposal. \n\nEnter Ajax. Yeah, I bet the Egyptians were trying to figure out how I stopped him as well as Alal. I thought I was being clever by not telling most of the world. In fact, they most likely suspected; and the reality of Sz\u00e9lAnya watching over me was much more terrifying. Ishara had put a serious curse on the Amazons, yet her curse only affected her followers, the Amazons, who were fair game. \n\nSz\u00e9lAnya had killed someone for me ... and I hadn't been one of her followers. Thus I had committed a blasphemous act only a magician of some significant ability could have managed. I wasn't a sorcerer, but I had a cornucopia of mystic knowledge rolling around in my noggin. Trying to figure all this out was one of my major headaches.\n\nThe others?\n\nI even suspected I knew who betrayed me ~ kinda. They didn't do it on purpose. At least I hope they didn't, because my odds-on favorite was my Mother by way of Captain Delilah Faircloth. Realistically, there was only one secret society who might help her against Grandpa and that was the Egyptian Rite ... and they did send three people to Dad's funeral including two 'somebodies'. I'm an idiot.\n\nI'd chatted away in fluent New Kingdom Egyptian and it never occurred to me how odd it was for two of them to also be so fluent in it. Know it - sure, but as fluent as Kimberly had taught me to be? That should have been a Red Flag.\n\nThe Earth & Sky had sent Iskender - who should have been the benchmark I judged the other delegations by ... damn it.\n\nThree Condos? They'd killed my Dad and their guys had been flunkies.\n\nThe 7 Pillars had been nobodies, which they'd proven by their inaction.\n\nNow I had to question why I had THREE ACTUAL 9 CLANS ASSASSINS at my dad's funeral too. Holy Ishara, I wasn't nearly paranoid enough.\n\nAnyway, why would the Amazons be aiding and abetting the End of All Life on Earth? Normally, they wouldn't be, but 3000 years ago, the majority of Human life did a colossal dump on the Amazons. And when they needed help, they got it in the form of Sz\u00e9lAnya and her dual-sex followers. I seriously doubt they told the Amazons their purpose was to resurrect Sz\u00e9lAnya's daddy. I imagine the Amazons didn't pry too much either. ",
        "It turned out almost to be okay. During the 2nd Betrayal, the Amazons betrayed Sz\u00e9lAnya and almost short-circuited her plans by exterminating her lineage.\n\nExcept for the Arinniti elders and Bolu. Good old 'except'.\n\nI can imagine when the Egyptians heard about the 2nd Betrayal, they figured they were 'okay'. Those wacky Amazons had inadvertently done the world a favor. Except an act of maternal love kept a slender hope of Illuyankamunus' return alive. By the time the Egyptians realized they'd been prematurely hopeful, Bolu's descendants were all over the Balkans and hunting them down had proven difficult.\n\nBut, it gets worse. Much worse.\n\nWhen those Gods shattered Illuyankamunus, they scattered him in the relative certainty no one would ever gather the parts back together. \n\nHis flesh was scattered across the land - modern day Turkey, but encompassing everything from Pakistan to Italy and Egypt to Poland. The flesh became soil, then plants, the things that eat plants, then food for humans. Get the picture.\n\nWhoops. Sz\u00e9lAnya had been doing just that for centuries upon centuries every time she mated with a mortal of Illuyankamunus' line and had offspring, they accumulated his energy ... which made hunting down the few remaining ones easier to find, since they were 'beacons of badness' ... except...\n\nThere were two key pieces missing which Sz\u00e9lAnya could never get. After all, you would think burying them on the far side of the world would matter, right?\n\nThe 'breath of Illuyankamunus' ~ his cosmic fire ~ they buried in a volcano in a distant land far across the Great Sea. His spirit 'body' they imprisoned in a great river - again, across the Great Sea.\n\nBut wait - it gets worse.\n\nThe being standing next to me knew precisely where the 'breath of Illuyankamunus' was. Seems Mesoamerica is laced with volcanos. They'd discovered 'the breath' long ago and used it as a weapon called Xiuhcoatl. Better yet, Alal suspected she and her buddies were more than happy to reunite it with the rest if they thought the Weave itself wouldn't annihilate them for daring to do so. \n\nIn their current, weakened state they were vulnerable to such a karmic backlash. In theory, a reborn Illuyankamunus would have access to power beyond the bounds of the Weave ... older and more terrifying. Still ... without the mortal remains to anchor the energy, giving it to the spirit would be pointless.\n\nAlal knew where the spirit body was (in general), but that wasn't the worst part. The worst part was where it was ... \n\nOf all the places the Arinniti sons could have fled to, they had to choose Brazil, the burial place of the restive spirit body of Illuyankamunus. Mother-fucker.\n\nAnd Ildiko 'Alkonyka' aka Dusk Lovasz had sworn she'd travel to Brazil to fulfill Bolu's side of the quest in the same way I was holding up Vranus' end. If I tried to stop her, Sz\u00e9lAnya would know something was up. Fuck.\n\nI was processing all of this when Obsidian violently yanked me out of the way. A cabby had swerved to avoid a flurry of trash and nearly run over us. It was the third near-concussive experience in the past five minutes she'd help me avoid while she had walked by my side. I'd been mumbling like a madman.\n\n\"That would be my Goddess wanting to talk with me,\" I looked her way.\n\n\"I know,\" she gave me a clever smile.\n\n\"She's really not going to like that,\" I shook my head.\n\n\"I know that too,\" she kept smiling. \"Where is your mind?\"\n\n\"Five lives away from making the world a safer place,\" I sighed.\n\n\"Safer for who?\" she purred. Where WERE all the bimbos? Not only was it an insightful question, it cut straight to the heart of my dilemma.\n\nWhat decision could I make? If I elected to help my fellow Amazons, I risked screwing with the world. In truth, I was risking everything even if I did nothing. Well Dad was always clear that things didn't change by themselves. You needed to do something that would have an effect. So,  'What are you going to do?'\n\nMore to the point, I wasn't Grandad. Killing the last five of the line of Illuyankamunus wasn't 'me', so it wasn't going to be something I'd worry about.\n\nSz\u00e9lAnya wanted to bring back her Dad ... I could understand that. I'd have to figure out a way for her to believe this world sticking around was more important. How? Well ... I had a goddess-like creature right in front of me to probe for ideas.\n\n\"You are an immortal,\" Obsidian commented. She'd been weighing her opinion for some time. I could tell by the wonderment with which she gifted each word.\n\n\"What? No. I can die.\"\n\n\"No. I don't think so. Your wounds. Normally the wounds I inflict flow freely for some time. Yours have already scabbed over,\" her eyes flickered to the various minor scars she'd imparted to me in the few hours we'd been together.\n\nOf course, her idea was insane ... OH GOD NO! I was in Grandad's body. Well DUH! HIS BODY was supposed to be immortal.\n\n\"Are you sure?\" I looked deep into her eyes.\n\n\"You are a young immortal - the youngest I've ever met, but you are an immortal,\" she seemed to be convincing herself as much as me. \n\nStupid Assumption (on my part)! I wasn't in Alal's body. I was in C\u00e1el's. Because the C\u00e1el soul shard was young ... Alal hadn't been able to find it because it had moved through Time - to me - sonofabitch! 'I' hadn't been around for him to find. No! I was making yet another damn assumption.\n\nWhat did I know? When Pamela found Baraqu, it had been in an object, not a person, though she had been short on details. When the Alal-shard went to the Land of the Endless Black Sands to bring Saku back, the C\u00e1el-shard had been in reality, so it had been allowed to create a body - 'me'. Still, the curse Sarrat Irkalli placed on Baraqu was on Alal and myself as well ... which meant I might just be immortal.\n\nMy Alal-mind agreed with Obsidian's assessment. In his first years, his healing had been slow, still taking days for what took mortal people weeks. I'd stupidly attributed my swift recovery to Amazon medicines ... ugh. Because I got wounded more than most Security Detail trainees while concurrently entertaining two and three sex partners. \n\n\"Can you talk with Dot Ishara?\" I asked her.\n\n\"Yes, but why would I?\"\n\n\"Sex?\"\n\n\"We are going to have sex anyway,\" she smiled. I'd tricked her. Set her up with the right so I could now drop her with the left.\n\n\"I can bring the mbo\u00ee tat\u00e1 back to life,\" I pledged. That was not what she was expecting at all. \"If you bring the Xiuhcoatl, I can bring the flesh and we can unite the three.\" Mbo\u00ee tat\u00e1 was the Tupi name for the legendary 'fiery serpent' of the Amazon Basin. In Portuguese, it had become Boi-tat\u00e1, a will-o-wisp with a confused, Christianized mythology ~ a serpent dwelling in darkness, devouring the eyes of corpses, glowing in the forests at night.\n\n\"Where is the flesh?\" she whispered.\n\n\"In his mortal children,\" I replied.\n\n\"Who?\"\n\n\"You are a monster, \u012atzp\u0101p\u0101l\u014dtl. I'm not going to tell you and you don't have the time to drag the information out of my mind before my allies drop on you like a nuclear detonation,\" I drew my body tightly to her.\n\n\"Why would the Amazons do this?\"\n\n\"They are not. This is a deal between you and me,\" I kissed her lips. I pulled back. A few seconds later she kissed me back.\n\n\"Why?\"\n\n\"My grandfather had my father murdered and I would avenge him. In the end, despite my father's Amazon heritage, my 'Sisters' will let his death go unavenged for the greater good of the Host. He was a man and they will never look beyond that ~ they will never value his life as they would that of a woman.\"\n\n\"Your mother's father?\"\n\n\"Yes. C\u00e1el O'Shea of the Illuminati.\"\n\n\"We are not at war with the Illuminati,\" she murmured. It was a casual observation, not a protest. \n\n\"You are at war with C\u00e1el O'Shea.\"\n\n\"He was slain.\"\n\n\"He didn't stay dead.\"\n\n\"You know much more than you are saying,\" she was finally catching on.\n\n\"Absolutely.\"\n\n\"I need much more than a few names to convince my kin to help,\" she purred, a cocktail of sexual immersion and flesh-flaying pain.\n\n\"I don't work for you. You are agreeing to work for me,\" I was hard as iron in more than one way. Why? Boundaries. She lived in a world where only the fundamentals of reality constrained her. Having a human, no matter how polished my pedigree, or how much I might appear to be 'special', tell her 'you are not the boss' in a reasonable fashion was new and very unwelcome.\n\n\"What would make you think that?\"\n\n\"My mentor taught me knowledge is a curse. It is our inability to forget ... and I can see into your soul, \u012atzp\u0101p\u0101l\u014dtl. You care not one wit for the life of an assassin. But the thought of the other 'Factors' of the 9 Clans treating you as an equal galls you almost as much as the crushing reality that you need them.\n\n\"You have lived 500 years in chains and I'm offering you a desperate grab at freedom,\" I added.\n\n\"Your brief glimpse of immortality gives you no insight into my existence,\" she bristled. \n\n\"Oh ... how many have given up? How many have decided the fight was no longer worth it and faded from the Sunlight to make their final trip into the Underworld, never to return? Do you even visit them?\" I spoke with a voice tinged with compassion and loss. I pulled upon the pitiless, blank memories of a childless Alal all those centuries and imprinted on them my own fears of fatherhood and failure.\n\n\"How do you know so much?\" she let her fa\u00e7ade crack, then blow away, in the hollowness of her own sorrow. How could I pity such a monster? I could because I was me and I wouldn't surrender that to the barbaric past and most likely horrific future. I pulled her close, resting my chin on the top of her head.\n\n\"You are not the first, wonderful, very bright woman who has stepped into my life, Obsidian,\" I whispered. \"You are not even the first divinity. For all the millions of differences enforced by power and time, I think love, hate and the conflict between the two wear upon us all. If anything, you face an endless parade of hope and misery. Even if you chose to ignore it, you have seen it and perhaps it leaves its marks ~ water scarring the rocks of a riverbed.\"\n\nWe paused. I was able to peripherally scan about and realize we'd made it to Central Park ~ the Ramble and off the beaten path.\n\n\"Your Goddess is a fool for not keeping you closer,\" she murmured.\n\n\"She does keep me close. You have been actively keeping me from her,\" I reminded my guest. \"She also plays by the rules, so is of limited help in my plans for vengeance.\"\n\nTranslation: I could enlist \u012atzp\u0101p\u0101l\u014dtl's aid while still remaining loyal to my matron Goddess. Ishara could not provide what I needed and my Amazons wouldn't agree with my scheme, so I needed her. Three hours ago, she wouldn't have considered me a worthy supplicant, much less an allied equal, yet here she was conspiring with me to shake the foundations of Creation.\n\nPersonally, I was thanking Mamitu - Destiny. Had I not been having my worst Sunday ever when we first crossed paths and then acted like a total dickhead, pissed her off and led her to holding Sarrat Irkalli's dagger, thus putting her life in my hands ... and not had Timothy as a best friend, I wouldn't have taken her to the movie ... and my mind wouldn't have wandered down those dark corridors of Alal's memories to piece things together. \n\nWhatever itinerary Obsidian had approached me with, my abrasive behavior had forced her to it cast aside. Dagger - movie - revelations - I was now so much more in her eyes than she had envisioned.\n\n\"Share my need and share with me an ounce of your sorrow,\" I murmured to her as I gently curled my fingers in her hair and directed her head up until she faced me.\n\n\"The dagger,\" she rumbled. While she was stroking my hard-on, I knew she was using it as a double meaning.\n\n\"I was pinned to an onyx sacrificial table,\" I began my tale. We worked off pants to mid-thigh then 'got busy'. Penetration was only going to be possible by turning her around. Ground-breaking was her ready acceptance of my instruction. I leaned against a tree, then pulled her onto my lap. She guided my cock home.\n\nOne locomotion and I sunk in deep. It was warm molasses until I hit and pressed against her cervix. For a second Obsidian trembled, then her muscles clamped down tightly, gripping my manhood firmly in a vise, keeping me still.\n\n\"Ah,\" I groaned. Obsidian had her neck twisted, so we were kissing with eye contact as I described my adventures with the Gong tau sorcerers. She shot me a quick twinkle of delight - a connection. She'd relayed physical pleasure in the way I was giving her cerebral gratification, aka hope.\n\nI rolled up her shirt, and gave both nipples a brutal tweak in response. She gasped. I was applying a little 'rough' with my tender intercourse. She rolled her tush against my groin - an invitation to double-down on my nipple-play. I kept my left hand working over each tit while working my fingernails down her abdomen. As I described the terror in old Tsu's face as he shouted out 'M\u00e9iy\u01d2u! [Mandarin for 'No!'] as he recognized too late the curse he was invoking. She relished the visual of the Han necromancer's terror.\n\n'Me' smacking two fingers down on her clit earned me a squeal and a small gush of fluids on my nut-sack. Her look of astonishment was something I'd always cherish. Before me, sex was something she demanded from her followers/victims and definitely orchestrated. Her partners being fearful/worshipful must have limited their initiative.\n\n\"A-a-a-ah ... we are being observed,\" she groaned, her lips less than an inch from mine. It took me a second.\n\n\"Which direction?\" I kept pumping her, strumming her clit and treating her tit like taffy on a hot Coney Island summer afternoon. Her hooded eyes flickered to our right. I gave it ten seconds. I had to get Obsidian refocused on what I was going to do to her next, in case this was innocent voyeurism. Nope. It was Chaz.\n\nWhy Chaz? See, I'm an idiot. My cryptic warning to Timothy for Pamela had been good for all of one minute. He'd called her and she'd gathered what she could and come looking for me.\n\nWhy was she concerned? I was babbling to Timothy then wandering off with a 'beyond-freaky' chick I had just met named 'Obsidian' who came my way courtesy of another chick with the name of Estere.\n\nLet me see ... Estere was Hashashin and for Timothy to describe someone in my life as 'beyond freaky' was bad news. Timothy was seriously worried about me and Timothy was an emotional rock ~ he didn't panic. Lest we forget, I was in a FEDERAL taskforce. A quick peek into New York traffic cameras revealed me and Obsidian wandering into Central Park from the south, so in the rescue party went, splitting up and Chaz 'lucked-out'.\n\nI still had two - no, three problems. I was really enjoying my sexual excursion with Obsidian and she was seeming to truly enjoy her experience with me. Oh, and Central Park is big, Pamela had been pressed for people, so she had pressed some unlikely participants into my rescue party.\n\n\"He's,\" smooch, \"my brother ... by adoption,\" I headed off the whole idea she'd been briefed on me already.\n\n\"Visual, Peacekeeper Six, OS2, L-11,\" Chaz muttered into his headset before taking up a casual stance on the path overlooking our trysting spot. Sex with an audience didn't bother her, so ... we worked out as much action from twist, turns and two inches of in-and-out motions (she liked to keep our bodies tight) as we could. Obsidian was humming along in no time. Her vaginal walls were undulating, wearing away at my self-control.\n\nPanting ... not from us ...\n\n\"Is he o ... are they ... who is she?\" huffed and puffed a trio of voices from Chaz's locale. Oh. Pamela had recruited my 'Hounds'.\n\nI accidently (from a timing perspective) took that moment to grind my nails into her left nipple, pinched her clit and hammered her as hard as I could. Obsidian howled. Her vocalization exited the human realm in a cataclysmic manner.\n\nThe noise scared avians a mile away into terrorized flight. Cats hissed, then raced for cover. Dogs tucked tail and ran. Streetlights a hundred yards away shattered in sprays of glass. Better yet, for the entertainment of my viewing public, she lashed out with her right hand at the closest Black Cherry sapling, exploding it into a mist of sap and pulverizing the bark and wood fiber into pulp.\n\nOn the downside, her cervix gave my balls an ultimatum ~ release my seed at once, or she was going to twist off my cockhead. My cock and balls have a long history of making decisions without me. I began lavishing her uterus with my semen ... five ... six ... seven powerful shots before I finally got the feeling I was out of the danger zone. She was back to rubbing against me and purring in blissful satisfaction.\n\n\"Onun g\u00f6zleri,\" whispered Belgin, one of the Turks. 'Her eyes'? \n\n\"C\u00e1el, are you aware of the alternative nature of your liaison?\" Chaz coolly cautioned me. Translation: 'mate, do you know you have your dick in a demon?'\n\n\"Yeah,\" I coughed. I had a face full of her hair. I was working on some post-coital nuzzling along with slowly helping her get her pants back up.\n\n\"Ininzqueoccehpa,\" she hummed to me, ignoring our gathering. That was 'let's do this again'.\n\n\"Tehuatlcochitlehua,\" I replied with some fondness. She studied me for a second before deciding my term was one of endearment, thus 'you are what dreams are made of', not 'nightmares'.\n\nObsidian had another issue to deal with. Timothy would call it a righteous dicking. Whatever it was, her hold on her human mein had slipped and her inhumanity was slipping through ... mainly in her glass-like, black, multi-facetted eyes and her fingers which now ended in molten obsidian talons. On the subconscious level, her predatory nature was setting everyone close-by on edge. I could also make out the high pitched, ultrasonic pipping of her chiropteran cries ~ purpose unknown.\n\nObsidian made her way off farther into the underbrush leaving me a few precious seconds to appreciate her retreating posterior while holstering my equipment. More people were arriving. I had one more thing to take care of before ... oh look, Nikita had brought her Mom along, the NYPD Sergeant.\n\n\"Chaz, I need to have a quick chat with Dot before I can explain things. She's been waiting and that's unwise,\" I looked to the Brit. He nodded.\n\n\"C\u00e1el? Mr. Nyilas? Prince?\" all came my way. I relaxed as best I could. Chaz went to a body blow to stagger me, then an epic upper cut to send me to Lullaby Land.\n\n[DOT AND THE DRAGONESS]\n\nDot and Sz\u00e9lAnya, in dragon form, were waiting as I tumbled forward. By the state of my haziness, I knew my unconsciousness wouldn't last long.\n\n\"You gave her your seed ...\" came the accusation.\n\n\"Yes,\" I staggered, \"and now you should be able to track her,\" I pointed out the bonus part of the arrangement. No comment.\n\n\"I've got to make this quick - Sz\u00e9lAnya, I've found your father, geographically speaking,\" I dropped the bomb.\n\n\"Don't,\" Dot Ishara commanded. After all, she and her divine cohorts had done the killing and corpse-dividing eons ago. Undoubtedly, they'd executed their own oaths to one another to 'never reveal what they had done' as well.\n\n\"Too late,\" I shook my head. Sz\u00e9lAnya's attention was magnetized. \"I owe you and I'm paying my debts. I'm not blind to the dangers, believe me.\"\n\n\"You have no idea what power you are invoking,\" Dot's undercurrent of displeasure was the worst I'd experienced.\n\n\"Wrong. I've got thousands of years of Alal boiling around in my head ... PLUS the rest of you betrayed her 2600 years ago. It doesn't mean I have to. And now, given the chance, I'm not. Even if you kill me, she's got enough to go on to eventually figure out what I know without me,\" I ground out. Wakefulness was drawing me back.",
        "\"Sz\u00e9lAnya, all I ask is when he comes back, you give the rest of us a chance,\" I pleaded. \"Please don't forget the loyalty and love a small fragment of mankind has shown you.\"\n\nNo reply.\n\n\"I need a moment with Dot,\" I mumbled. Concentrating was becoming difficult. I heard the rustling of scales as she moved off.\n\n\"Dot,\" I reached out. It took her a moment. I hugged her tightly and whispered into her ear. \"You must reunite Sakuniyas and Anat.\"\n\n\"Anat is but a shadow of what she once was,\" Dot Ishara's breath played out on my cheek.\n\n\"It is the best shot we have,\" I urged her. \"I have the secret of creating avatars like the Cult of the Jaguar does ... if we could unite the remains of her power and her sole surviving ...\" I pressed a fortune cookie into Dot's hand then finished tumbling forward. \n\nMy final piece of the puzzle wasn't from Alal, or a co-conspirator. It was from Dr. Kimberly Geisler and her stories of ancient love and loves lost. In virtually all ancient mythologies, dragon-slayers were male, except one ... and that was Anat, the Slayer of Litanu/Leviathan ~ the Amazonian Berserker Queen. She'd also killed the personification of Death, which might come in handy.\n\nHistory had robbed her of a future until the Weave had tossed us back her once devoted follower, S\u0113rku\u0113n aka Sakuniyas, lover of Alal ... and since Illuyankamunus's very existence put him on a collision course with Grandpa ... I was once more counting on love to (almost) save the day or (I hoped) avenge Alal once Illuyankamunus had re-written reality to remove Sarrat Irkalli's 'Deathless' curse and then either killed him, or paved the way for one of the avenging Cult divinities to take him out.\n\n[BACK IN THE RAMBLE]\n\n\"... really expect me to believe ...\" Nikita's mom was growling.\n\n\"Man down,\" I waved a weak arm skyward.\n\n\"Mr. Nyilas, what is going on here?\" the Sergeant addressed me. I was reclining in a circle of my 'Hounds'; most were kneeling. Chaz was in a tiny bit of trouble for having clocked me.\n\n\"Ummm ... thanks for coming out and looking for me. I assure you, Mr. Tomorrow did what he did as a matter of his professional duties ~ intelligence gathering.\" As I struggled to stand, my ladies helped me. I saw Pamela with three Hounds coming up fast from one direction and Virginia with three more coming from the other. The gang was all here.\n\nThe mutterings in non-English tongues suggested a bit of explaining was already going on.\n\n\"You've been bleeding,\" Nikita pointed out with an unspoken 'again'.\n\n\"This?\" I pulled my shirt out and looked at the first bloodstain of my encounter. \"This is the just the start of the bad news.\" I shed my windbreaker and then t-shirt.\n\nThe professionals shouldered aside the others to take a closer look.\n\n\"All of these are from noon and less than an hour ago,\" I identified the damage. Sarge was skeptical. Chaz, Nikita and Virginia less so.\n\n\"They look older,\" the senior lawman noted. \n\n\"I've been curious about that,\" Chaz frowned.\n\n\"I've inherited my Grandfather's curse. My soul fragment was in the 'Here and Now' twenty-three years ago while his was ... 'over there', so I was allowed to come into creation. According to my recently departed guest ...\"\n\n\"You are immortal,\" Virginia mumbled to finish the thought. Had the speaker not been a member of the FBI, who knows how the thought would have been received.\n\n\"From the memories I've been gifted with,\" I tapped the tiny divot on my forehead, \"his healing abilities started out rather slowly too. I certainly don't want to test this theory, so no worries there,\" I scanned the group.\n\n\"How do you explain seeing your Grandfather in Hungary and again in Rome?\" Virginia wondered.\n\n\"Again, that woman who just left ...\" I got out.\n\n\"Was no woman,\" Nuray, another one of my Turkish Hounds interrupted. \"Her eyes...\" she tried to explain, \"and look what she did to that tree,\" she pointed to the greatest piece of evidence of supernatural wrongdoing. The other two witnesses nodded.\n\n\"We all saw the same thing. Her eyes were ... bottomless ... definitely not human,\" Belgin affirmed. The veteran players looked to Chaz.\n\n\"She had a collapsed nose-bridge - lacked a blink response - her dental work was carnivorous and her tongue was extremely clipped and showed prehensile qualities,\" he reported calmly. Pause. Chaz WAS a freaking intelligence operative, after all.\n\n\"If her hands were a type of glove weaponry, I've never seen its like before. While I know it is possible for a human to exert the force-pounds necessary to snap a two inch diameter tree trunk in one blow, it is a rare skill and requires intense discipline. This appeared to be done spontaneously, without preparation of any kind and as a reaction to other stimuli,\" he added.\n\n\"It was also your assessment he needed to be knocked unconscious?\" Nikita's mom countered.\n\n\"Mr. Nyilas' psychological constructs are something the whole team has to work around. At times, he seeks 'insight' from his mind in a deliberately unconscious/non-sleep state,\" he replied. \n\n\"He claims to be talking with spirit powers. I know when he returns to consciousness, he delivers useful intelligence. I'm not a psychologist, psychiatrist, or psychic. I don't know why his mind functions that way. I do know results. And I know I work with people who would achieve those results by other means if it were at all possible. Since we haven't found another method, we accept that from time to time, Mr. Nyilas will be rendered unconscious for the benefit of the team.\"\n\n\"So you would beat him to death for 'results'?\" she squared off with the Brit.\n\n\"No. That is horribly simplistic, Ms. Kutuzov,\" Chaz exhaled evenly. \"I value C\u00e1el's life deeply. Not only is he a genuinely decent human being, his actions have saved millions of lives. It is not a matter of hurting him in order to save one life, or five, or ten. It is never that clear-cut. I know C\u00e1el is in his right mind and trying to make a difference. I owe it to him to support him when I can.\" \n\n\"Today, right now, it means I fulfilled a requirement for his inner psychic workings. Had he been confused, or near death, I would have refused. As your daughter can explain better than I, working with C\u00e1el Nyilas gives 'complicated' a whole new meaning.\"\n\nNikita nodded vigorously.\n\n\"Fine,\" Sarge folded her arms. To me: \"Maybe you can explain what the panic is all about.\"\n\n\"This will make as much sense as the plot of A Stranger Gets Mean,\" I rolled my shoulders. I was putting my shirt back on, buying time.\n\n\"Which one is that?\" Pamela gave me a twist of the lips ~ a smirk-in-training.\n\n\"The last of the A Stranger films with Tony Anthony,\" I smiled her way.\n\n\"The one with the sneaky gunslinger, the Princess, the Moors and the generic barbarian horde?\"\n\n\"Yeah.\"\n\n\"How can you know ... ah, in the first film - the girl with the whip,\" Pamela got snarky.\n\n\"Don't obfuscate the question,\" Sarge persisted.\n\n\"I'm not. How does a young man not know Unforgiven, which won four Academy Awards, yet knows all four of the A Stranger films, which I'm sure no one else here has ever heard of,\" Pamela grinned at the other older woman.\n\n\"Maybe, kinda, sorta and it was at a film festival in Keene,\" I supplied the alternate answer.\n\n\"Sgt. Kutuzov, I work with horrible people and the best reason I can think of to keep going back to work is around me right now,\" I let my eyes flicker from her steely gaze to the assembly. \"The truth is, I was in danger and at a moment's notice, seventeen people showed up to help. That I worked my way through the dilemma before you arrived doesn't diminish, in my eyes, what so many were willing to do on my behalf.\"\n\n\"So ...\"\n\n\"So, the women is evil and part of the leadership of a faction your government is allied with in the goings-on elsewhere around the globe. By evil, I mean ritualized rape to breed future pawns for their struggle, plus human sacrifice and blood offerings on a regular basis, in addition to the usual bad. I had to impress upon her I was going to be a useful ally,\" and heading off the accusing looks, \"and in a manner which went way beyond bedroom antics.\n\n\"See, it turns out my side is inadvertently doing shit which could bring about the end of the world,\" I lathered it on. \"No lie. Don't trust me. Trust the look in the eyes of people who know and work with me.\" I let the Hounds and Sarge do just that. \"So, the people we are fighting, are trying to save the world, but for their own selfish ends ... which don't work out well for anyone standing in this circle we have today.\"\n\n\"So, I have to balance keeping my side safe ~ thus endangering existence ~ and stop our opposition, yet keep them in play long enough to tie up the forces actually trying to destroy all life on Earth, at least until I can deal with them too. That has been my afternoon so far,\" I finished up.\n\nYep. I was a nutty-nut bar slathered in nut crumbs and buttered in nut oil. Then the 'sane' folks looked at the other supposedly 'sane' folks who doubled as my co-workers. Even Nikita, who hadn't been 'read-in' to most of what JIKIT did, was nodding along, totally accepting my blathering's as gospel.\n\n\"Special Agent Maddox, is it?\" Mamma Kutuzov turned on the one other adult she might respect - the Federal law-dog.\n\n\"Sergeant, I've seen things I'm unsure about. Of greater importance, I've seen otherwise completely sane, rational people behave inexplicably around C\u00e1el, for both good and ill.\"\n\n\"Would I stand in front of the Head of the FBI and testify C\u00e1el Nyilas Wakko Ishara was a supernatural entity ... I'm afraid I would. I can't pinpoint any precise act. It is more how those who know him react to things he does which he shouldn't be able to do, telling us things he has no rational explanation to know and speaking in languages he's never been known to be in contact with before,\" Virginia forged ahead.\n\n\"Then you take in the evaluations of the other 'normal' people we work with - people like the Colour Sergeant here and Special Agent Loire. When service professionals start referring to the people in the field they are working with as 'Ninja'. Or how the Great Khan, a man C\u00e1el's age, ruthlessly leads one of the largest nation's on Earth and considers C\u00e1el his brother ...\" she left her thoughts about the Great Khan dangling. \n\n\"So your engagement to this Sulkanen woman is politically-based,\" Mamma turned on me. Oh, the 'had I been toying with Nikita' question.\n\n\"I don't look at it that way,\" I met her stare. \"Hana has been working overtime to make our union something more than a hollow parody. Sadly, my grotesque life is relentless and maturity is not something I ever had planned to embrace.\"\n\n\"Now I'm looking at fatherhood times eleven ...\" I got out in a wistful tone.\n\n\"Eleven?\" multiple voices chorused. \n\n\"One is with Hana,\" I aimed at Nikita and Nikita's mom. The pace of my declaration meant I wasn't a Lothario, or dead-beat Dad. I was happy about having children, unhappy about marriage, yet accepting my 'screw-ups' as my responsibilities.\n\n\"This is because you are the last of your bloodline?\" Flannery questioned.\n\n\"I don't like thinking of my sons and daughters that way, but yes. Of my Father's family, outside his unmarried sister, I'm it. I am also expected to establish alliances with other entities and often the only value we share is our love of our offspring.\"\n\n\"Is anyone else 'contributing'?\" Mamma persisted. Pamela frowned. Not good.\n\n\"Havenstone is notorious for not sharing, working poorly with others and for holding male lives valueless, so until my arrival, such deals were not possible. Within Havenstone, they do have the custom of adopting daughters,\" I hurried things along. \"Within the other two groups we are allying with, such blood exchanges are more common.\"\n\n\"Is this practice going to stop when you are married?\"\n\n\"No.\"\n\n\"Mom,\" Nikita intervened, \"C\u00e1el isn't leading these women on. I admit his, and their, behavior is odd. His whole life is rather inexplicable. You'd have to see him interacting with his co-workers to understand how much words fail to describe what it's like around him.\"\n\n\"Nikita, we can start by talking about these twelve,\" Mamma took in my Hounds with a sweeping arm gesture, \"European girls showing up at the drop of a hat, plus my long history dealing with Marilyn St. James and Desiree Fredrickson - both of whom I have suddenly stopped seeing... right after he showed up in their lives. I know Mr. Nyilas - C\u00e1el - is miles beyond what you find in the pages of the New York Times. I'm worried about you.\" \n\n\"Wonderful. Let's get out of here,\" Pamela began to corral us. As we began moving along, Virginia pulled out her phone and gave 'work' a call: They'd found me and I was okay. Me? I couldn't chat at the moment. I had a 3:30 pm with Oneida (and Shawnee for some portion of the meeting no doubt; I was making her a grandmother).\n\n\"I've been talking with Pamela and I may have a way out of your conundrum with these twelve,\" Chaz sidled up to me. The twelve in question were in hushed conversation in four languages, going over what the first three had seen.\n\n\"Yes?\" I looked his way. He seemed especially serious.\n\n\"Yes. We Tomorrows have a few people schooled in the military arts. Notably, my Uncle Mason - former SAS with 30 years in, my cousin Tanwen Tomorrow - has been a staff instructor for the Honorable Artillery Company (she was not an artillerists), my older sister Estelle ~ now a Carew - former Royal Marines and my older brother Todd - former SRR - are all currently capable of doing you, me and the world a favor.\"\n\n\"They'd train my ... Hounds? Not kill them?\"\n\n\"As you pointed out, there is more to a person than physical strength. There is character and willingness to dare. There is a spirit of adventure and a desire to risk not only their lives, but save the lives of the woman next to them. Fighting skills, endurance and discipline can be instilled with the proper training and motivation. You provide the motivation. Let my clan provide the rest,\" Chaz offered.\n\n\"Who will I owe?\"\n\n\"Me and mine, C\u00e1el. You are the Head of an Amazon First House, Blood-brother to the Great Khan, Diplomat of the Host, father to a wonderful little girl and grandson to a woman who is as much family to me as anyone born of my blood, or who I have ever had the pleasure to spill blood beside,\" he confided.\n\n\"Okay.\"\n\n\"Do me a favor?\" he asked softly.\n\n\"Sure.\"\n\n\"I think I might be a father. Getting her to talk about it - isn't happening and this isn't something I can ask Pamela to look into,\" he requested. Chaz had been banging one of the SD ladies assigned to JIKIT's protection force. A man of Chaz's character wasn't the type to mosey through the available herd. No, he'd picked one and, since things had worked out, he'd loyally stuck with her.\n\nNeither lover would mention 'word-one' about a commitment. And if she was pregnant, it was easy to conclude she would believe it was none of his concern. If it was a male, we wouldn't know until ... month four and a half, or five ...\n\n\"Name?\"\n\n\"Tavi Gentry, of House Stolgos.\"\n\nI recalled her ~ around thirty, black hair, caramel skin, short (5' 4\") with small breasts with wide hips and a tight, hard body.\n\n\"I'll find out,\" I grinned. \"Of more immediate concern to you, as of 7:30 this morning, all male Amazon children are to be given over to the Royal House instead of slain. I'm already working on exemptions for myself and the future House Sz\u00e9lAnya.\"\n\n\"How did you pull that off?\"\n\n\"Thank Queen Aya next time you see her,\" I grew crafty. I should have known better. Chaz hid his surprise too well.\n\n\"I'll do that.\"\n\nI saw Pamela looking my way intently. Her eyes bugged out and she mouthed 'Aya?', then a huge 'WOW!' I was glad someone was both happy and surprised."
    ],
    "authorname": "FinalStand",
    "tags": [
        "amazon",
        "goddesses",
        "cult of the jaguar",
        "rough sex",
        "aya",
        "assassins",
        "conspiracy",
        "illuminati",
        "non-human sex",
        "pregnancy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/life-as-a-new-hire-ch-46"
}