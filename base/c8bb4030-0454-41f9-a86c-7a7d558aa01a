{
    "title": "Surefoot 13: Vectors",
    "pages": [
        "USS Surefoot, Deck 3, Airlock 1: \n\nCommander T'Varik did not personally greet any of the other crewmembers who had returned via Starbase 154 from their extended leave - but then none of them were her commanding officer. \"Welcome back, Captain Hrelle, Counselor Hrelle, Squad Leader Hrelle, and Cadet Rrori.\" \n\nHrelle indicated the Caitian male bringing up the rear. \"He's actually Cadet Hrelle now, we adopted him, it sounds better. And how have you been, Commander? I trust you have ignored medical advice and common sense and continued working throughout what should have been your leave as well?\" \n\n\"Correct as always, sir. I trust your own leave was relaxing and fruitful?\" \n\n\"Relaxing, yes - and very fruitful,\" He smiled and pulled Kami close to him. \"We're expecting!\" \n\nT'Varik straightened up, looking between the couple. \"My congratulations to you both. It is customary to make enquiries at this time regarding age, gender, overall health and expectations.\" \n\nKami smiled. \"Six weeks now, a male, healthy... and if my time carrying my firstborn is any indication, my expectations are to be getting up to pee frequently through the night over the next six months.\" \n\n\"I am certain you will bear your nocturia well.\" She looked to Sasha. \"Is there a problem, Squad Leader? You do not appear pleased by the news.\" \n\nThe young human shook back her blond hair from her rounded face. \"I'm very pleased... for Kami, and she knows it. I'm less pleased having spent the last four days on the cruise having to listen to my Dad boasting to everyone in earshot about the power of his sperm.\" \n\n\"But they're AMAZING!\" he declared loudly. \"My intrepid little warriors found their target and conquered it!\" \n\n\"You see?\" Sasha indicated. \n\n\"I understand completely,\" the Vulcan admitted. \"Squad Leader, Cadet Rrori, the rest of Alpha Squad are currently in their quarters, off-duty until 0800 Hours tomorrow. You will find they have some anecdotes to impart regarding their own leave.\" \n\n\"Thank you, Commander. Um, is Mr Arrington back from his leave yet?\" \n\n\"He returned yesterday.\" T'Varik took .89 seconds to note the ambiguous reaction from Sasha over the answer regarding her paramour, before adding, \"Dismissed.\" \n\nSasha and Rrori looked to each other curiously, before nodding, picking up their luggage and departed. T'Varik witnessed their exit, waiting until the section door slid shut before turning back to Hrelle. \"Captain, we need to speak immediately. An important matter arose during your absence.\" \n\nHrelle tensed. \"Is it a member of the crew? The cadets?\" \n\n\"Neither, Sir. It is literally the ship itself.\" \n\n* \n\nDeck 2, Captain's/Counselor's Quarters: \n\nHrelle's attention was fixed on the wallscreen behind his desk - more specifically, to the image of a swarm of strange-looking single-celling organisms moving over a surface, stopping occasionally and leaving pockmarks in their wake. \"What am I looking at?\" \n\n\"A rare form of metallophagic subatomic bacteria,\" T'Varik explained. \"I believe Mr Ostrow can provide us with some background on this organism. Cadet?\" \n\nBeside Hrelle, Cadet Jonas Ostrow cleared his throat; despite his distraction at this unexpected news, he noted how professional and mature the young man presented himself these days, compared to his more emotionally fragile demeanour only a few months ago. \"Yes, Commander. The silicon-based lifeform has an alphanumeric listing in the Federation Lifeform Database, but the salvage community refers to it Shiprot - which is actually one of its less profane names. It has an affinity for duranium and tritanium, and possesses trace elements of kelbonite, which interferes with normal scans and transporter beams. \n\nIt's these two attributes which has made Shiprot the bane of salvagers, as it's not easily detected, and over the course of just a few months can weaken the spaceframe of a vessel; a lot of credits have been lost over the years from purchasing a wreck that was infested with this. Starfleet has developed a means of detecting and removing Shiprot using tunnelling neutrino beams, and incorporates this into the annual inspections for all Starfleet vessels.\" \n\n\"So presumably the engineering team on Starbase 154 detected this while we've been docked here?\" Kami guessed, sitting beside Hrelle. \n\n\"Yes, Counselor. The infestation was considerable, encompassing most of the decks in the secondary hull, the connecting support pylons, part of the struts leading to the port warp nacelle, and part of the shuttlebay in the primary hull.\" \n\n\"That's a hell of a lot of my ship!\" Hrelle exclaimed with a gasp. \"How fast does this stuff spread?\" \n\nJonas paled. \"Chief Grev and I ran some tests before the Starbase crew purged the spaceframe of the organism; it's been ongoing for the last 12 months at least.\" \n\n\"Twelve months?\" Hrelle frowned; that was just before he had taken command and had it renamed the Surefoot. \"Why wasn't it discovered at the ship's last annual inspection?\" \n\n\"I investigated the records,\" T'Varik informed him. \"When the Surefoot was under another command and named the USS Martin Fettman, its previous inspection was conducted at Deep Space Station K-7 by a private company, Mudd Dynamics, a company whose founder and manager has recently been indicted for corporate fraud - and failure to operate proper spaceframe inspections.\" \n\n\"Well, at least it's been found and dealt with, right?\" Kami concluded - though her tone suggested she knew better. \n\nHrelle's expression and his own tone confirmed it. \"Let's hear the bad news, Commander.\" \n\nT'Varik folded her hands behind her and looked to Jonas. \"You are dismissed, Mr Ostrow. I need not remind you of my earlier orders to keep everything about this matter confidential.\" \n\n\"No, Ma'am.\" He nodded to the Captain and Counselor before departing. \n\nWith the three senior officers alone, T'Varik continued. \"As you may have gathered, Captain, while the bacteria have been purged, the damage left in their wake remains. And the damage is too extensive and pervasive for standard repair protocols. The entire Secondary Hull, the support struts and parts of the shuttlebay in the Primary Hull no longer pass muster. \n\nThe Surefoot has had its spaceflight certification revoked, and the Inspection Team has recommended it be decommissioned. Starfleet Command has already been notified, and the USS Grappler has been reassigned to our previous assignment in the Leonis Sector.\" \n\n\"I don't have a ship anymore,\" Hrelle declared blankly, staring at nothing - and then focusing on T'Varik, his expression tightening. \"And you didn't think it worthwhile to contact me about this?\" \n\nThe Vulcan looked to the Counselor, who admitted, \"You were on medical leave, Esek, and under my orders you were not to be contacted unless it was an invasion or a galactic disaster or something like that.\" \n\nHe stared hard at Kami in sheer disbelief. \"How in the Seven Hells could you do that? I was only on vacation!\" \n\nShe matched him glare for glare. \"You were recovering from nearly being beaten to death by a mob of Ferasans! Not to mention having killed and maimed more than a dozen of them yourself by tooth and claw! You needed a break from everything!\" \n\n\"Captain,\" T'Varik interjected softly, \"Your presence or knowledge of these events would not have altered their outcome in any way. The Surefoot would still be permanently grounded.\" \n\nHe growled, reached out and petulantly knocked an empty coffee mug off the side of the table, but otherwise said nothing. \n\nLeaving Kami to translate. \"He says he fully understands and supports the decision to help him recover from his trauma by not adding to his stress, and is sorry if his initial impression might have suggested otherwise, that it was brought on by the shock at the unexpected news.\" \n\nHe shot his wife a dirty look and told her exactly what he thought she was. \n\nKami remained insouciant. \"That probably doesn't need translating.\" \n\nT'Varik raised an eyebrow. \"Agreed.\" \n\nHrelle leaned back in his chair and rubbed his eyes wearily. \"Can I assume you haven't been spending your time since you learned about this merely planning a decommissioning party for the ship and crew?\" \n\n\"You assume correctly, Sir.\" She lifted up several PADDS from her end of the table and set them down before him. \"I have identified three vessels and missions which would meet the standards required by the Academy for our cadets to continue their final year of education via the Advanced Work Experience Program. However, there is a relatively brief window of opportunity for you to choose, without causing undue delay or disruption to the cadets' schedule.\" \n\nHrelle stared at the PADDS for a moment without touching them, before replying. \"And what makes you think I want to limit myself to just these three?\" \n\nT'Varik seemed almost visibly confused. \"Sir? As stated, these meets the health and safety requirements for the cadets-\" \n\n\"Oh, I have no doubt, Commander.\" Now he looked up at her. \"But what makes you assume I want to continue captaining a boatload of cubs?\" \n\nNow both women stared at him, Kami the first to ask, \"And where's this coming from?\" \n\n\"It comes from the acknowledgement that I originally took command of this old junk heap because I wanted to make up for lost time with Sasha; and I've since done so. It comes from the realisation that I could have nearly any command I want - a scout, a surveyor, a frigate, a heavy cruiser - you know, some ship that's not held together with gaffer tape and good wishes. I could have a mission that matters.\" \n\nT'Varik shifted slightly in place. \"Forgive me, Sir, but I have always considered training the future members of Starfleet to be a mission that 'matters'.\" \n\n\"Yes,\" Kami agreed, setting a hand on her husband's forearm. \"And so do you. And you're being extraordinarily rude to T'Varik. You haven't even bothered to look at the opportunities she's presenting.\" \n\nHe shook her hand off him, leaned forward, reached out and lifted up the first PADD. \"Well, then, let's see what's on offer.\" He activated the display. \"Mmm, USS Raydeen, Sydney-class passenger transport on the Deneva Run. Nice.\" \n\nHe tossed the PADD back to the table, letting it slide away as he picked up the second. \"USS Sanford, Appalachian-class tanker tug. Classy.\" He sent the second PADD to join the first, as he reached for the final one. \"USS Ulix, Fredericks-class buoy seeder/repair ship. Wow.\" \n\nHe sent the third sliding, managing to knock the first two off the edge of the table like it was a miniature game of curling. \"All simply exciting choices, Commander. My compliments to you.\" \n\nT'Varik somehow straightened up even further. \"'The majority of Starfleet personnel will never explore strange new worlds, will never seek out new life and new civilisations. They will most likely boldly go where others have already gone before. But they will still make a difference'. Those were your own words to us when we first boarded the Surefoot almost a year ago. \n\nI believed you when you spoke them. So did my cadets. And so we put our faith in you. \n\nBut if you no longer subscribe to this, if you crave a ship and an assignment more adrenaline-pumping and ego-boosting, please inform me expeditiously, so that I may find your replacement and my cadets are not overly disrupted by your decision.\" \n\nKami rose to her feet now. \"No, T'Varik. I apologise on behalf of him; don't make any decisions until I've knocked some sense into him, Would you excuse us please?\" \n\nThe Vulcan nodded to her, and then to him, before leaving. \n\nShe was barely out the door before Kami smacked the side of his head. \"What in Mother's name is wrong with you? I've never seen you so rude to her before! It was uncalled for!\" \n\nHe shook his head, his pointed ears twitching. \"First of all: that was sore! Second of all: mind your own damn business! It's nothing to do with you!\" \n\n\"Nothing to do with me? Who do you think you're talking to, Esek?\" \n\n\"Right now, a crewmember!\" \n\n\"Oh, really?\" \n\n\"Yes, really! I command the Furyk, I decide how to act, not you!\" \n\nShe blinked. \"The Furyk? Don't you mean the Surefoot?\" \n\nHe started; what was she talking about? \"Why would you bring up my old ship?\" \n\n\"I didn't; you did.\" \n\nHe tensed, before shaking his head. \"I don't have time for your games. I have to go decide on my future.\" \n\n\"Yours? I thought it was ours? Or does my input not matter in this marriage?\" \n\nBut he stormed out, unable and unwilling to talk any further. \n\n* \n\nDeck 3, Alpha Squad Quarters: \n\nSasha and Rrori entered, Sasha looking at their friends and crewmates, smiling and teasing, \"Don't you shavetails know to stand when a superior enters the room?\" \n\nEydiir, Neraxis and Kit had been sitting at the table playing cards, but now rose and greeted the returning crew, Eydiir responding in her crisp Capellan accent, \"Your absence has been keenly felt, both of you.\" \n\n\"Most understandable,\" Rrori agreed, setting down his bag and letting the effusive Kit hug him. \"I trust you have kept yourselves suitably distracted until my return?\" \n\n\"Indeed, Friend Rrori!\" the Qarari Kit replied, his reptilian turning an olive-green. \"I got drunk and head-butted a Nazi!\" \n\nThe Caitian chuckled. \"I have no idea what that means, but I look forward to hearing all about it.\" \n\nNeraxis slapped Sasha on the shoulder, her bald Bolian head turning a brighter-than-usual shade of blue. \"Welcome back, Fearless Leader! What did you guys bring us?\" \n\n\"I brought back some more wine from my clan's vineyards,\" Rrori offered. \n\n\"I brought back vivids and images from Cait,\" Sasha added, smirking at Neraxis' disappointed face. \"I'm naked in some of them, if that helps.\" \n\n\"No thanks, I've seen you naked, I'm not impressed. But save them for Scrappy, he's less discriminating.\" \n\n\"Thanks. Where is Jonas, by the way? Still with Soo?\" \n\n\"On some sort of special assignment for Commander T'Varik,\" Eydiir informed her, adding with a slight smile. \"Giles is back as well, by the way. Beta Squad was on the Morning Shift, but I'm sure he wouldn't mind you disturbing his sleep, however.\" \n\n\"Yes,\" Sasha agreed, albeit less enthusiastically than she would have liked - and knowing it didn't go unnoticed by the other women. She breathed in and asked, \"Rrori, why don't you take Kit down to the Mess Hall so you boys can catch up over a coffee?\" \n\nThe Caitian blinked. \"But I was going to unpack and talk about all the praise I received from my clan-\" \n\nThen Sasha spoke in Old Caitian, knowing the Universal Translator wouldn't pick it up but that he would understand both the words and the context. \"Female Gathering.\" \n\nHe started, but to his credit merely nodded and put an arm around Kit's shoulder. \"Come, my friend, we males must rebond in the face of all this oestrogen!\" \n\nAlone, Neraxis asked, \"What's going on?\" \n\nSasha swallowed, feeling her embarrassment rise like steam from a boiling pot. \"Computer: Squad Leader Priority - Lock Door.\" She focused herself to remain calm. \"Eydiir, please tell me you still keep a medikit under your bunk.\" \n\n\"You know I do. Why?\" \n\nSasha swallowed. \"Just get it.\" As Eydiir complied, she glanced at Neraxis. \"And you: no laughing.\" \n\nThe Bolian shrugged. \"Sure, promise.\" \n\nBut she didn't quite keep her promise, though as Sasha stood facing away from them, her trousers and shorts down around her ankles while Eydiir knelt behind her with an autosuture, repairing all the bite marks and scratches she found, Neraxis at least kept it to just chuckles and titters. Still, it prompted Sasha to snap, \"Don't you have somewhere to go?\" \n\nThe Bolian shook her head, grinning. \"I like the view from here. So, what lie have you come up with to explain this?\" \n\nThe backs of Sasha's legs and buttocks were tingling from the work of the autosuture, like she had pins and needles. \"I had sex with a Caitian female.\" \n\n\"That's your lie?\" Neraxis guffawed. \"The truth must be really embarrassing.\" \n\n\"I suspect it's the truth,\" Eydiir opined. \"Given the nature and location of these marks. Speaking of which, there are a couple of remaining ones that require a bit more intimacy than you're normally accustomed to from me.\" \n\nSasha blushed, adjusting herself. \"Just do it.\" \n\nAs she proceeded, Eydiir asked, \"So, do we get to learn more about this paramour of yours?\" \n\nAs she felt the tingle from the medical device in places best left undisturbed now, Sasha couldn't help but recall her remaining time on Cait. \"Her name was C'Rash. She's a Lieutenant in Starfleet Security, posted to the USS Vigilant.\" \n\nNeraxis grinned again. \"Was she hot?\" \n\nDespite herself, Sasha blushed with the memory: the older black-furred female was shapely, sweet-smelling, with delicious ear tips and a rough tongue and the softest fur on the underside of her tail... \"She was Nova.\" \n\n\"There,\" Eydiir concluded, rising to her feet and running the steriliser sequence on her autosuture. \"Your infidelity will now stay hidden.\" \n\nSasha frowned at the turn of phrase as she pulled up her shorts and trousers. \"It's not- It's not infidelity.\" \n\n\"Yes, it is.\" \n\n\"No it's not! Neraxis exclaimed. \"It doesn't count if it's with another woman!\" \n\n\"Yes it does,\" Eydiir insisted simply, forcefully, focusing on Sasha again. \"You have professed your love for Giles. There is an implicit responsibility to remain exclusive to him.\" \n\n\"Bullshit!\" Neraxis passed her beer bottle to Sasha. \"I love a good Klingon curry, but I'm not being unfaithful to it if I want some chocolate mint ice cream, because each of them gives me something that the other couldn't.\" \n\n\"We are not speaking of your gastronomic excesses. Giles is a person.\" She looked at Sasha with open criticism. \"A good man. He doesn't deserve to be treated this way.\" \n\n\"I didn't set out to do this!\" Sasha insisted, tightening her hold on the bottle. \"I didn't go to Cait on a Bumper call! It just happened!\" \n\n\"Of course it did!\" Neraxis agreed, retrieving the bottle. \"It happens! I mean, not to me, but-\" \n\n\"This isn't about you,\" Eydiir chided. \"Giles is our friend.\" \n\n\"Sure he's our friend! But he's not married to Sash! I can't see why she can't have a little one-off Bump on the side to get it out of her system!\" But then she looked at Sasha. \"It was just a one-off, right? Or are the rest of us in trouble?\" \n\nSasha wasn't sure how to answer. When she had finally succumbed to temptation, she wallowed in it, satisfying a curiosity that had been growing in her for years. Would she sleep with a woman again? Maybe, with the right woman. \n\nBut as she was on her way back to Starbase 154, the guilt regarding Giles grew, and all the justifications she had for doing what she did withered. \n\nAnd her talk with Kami along the way didn't help. \"I told you before, I'm not your morality coach. You had to decide for yourself what was more important: satisfying your urges or maintaining fidelity to Giles. Whichever you decided, there would be consequences of some sort.\" \n\n\"But you- you thought I should do it, didn't you?\" \n\nKami smiled sympathetically. \"Caitians your age are NEVER exclusive to just one other; they use this time to explore their sexuality, with both genders. But you're human. \n\nAs for what I thought: I thought that no one, including your father or myself, could blame you one bit for wanting to sleep with C'Rash; my niece is both attractive and experienced, and you two had good chemistry together. And I thought that if it were really that important to you, then Giles would have been more on your mind from the start, and that any thoughts of loyalty on your part are more out of a sense of old-fashioned human propriety than actual guilt.\" ",
        "\"Damn,\" she said as she stared at the floor of Alpha Squad's quarters. \"I'm gonna tell him, aren't I? Damn.\" \n\nEydiir noted approvingly. \"He deserves to know.\" \n\n\"Not if he drops her,\" Neraxis grumbled. \n\nThe door suddenly chimed, and outside, Giles' voice carried through over the intercom. \"Sash? Are you there? I saw Rrori on the way down here!\" \n\n\"Damn,\" Sasha repeated. \n\n* \n\nDeck 3, Shuttlebay: \n\n\"Captain?\" \n\nHrelle had been poking around, examining the areas detailed in the report about the subatomic bacteria, the so-called Shiprot. He couldn't notice any defects, even with his enhanced senses - it would only be during extended warp travel, or dangerous manoeuvres, that the microscopic damage would become very, very macroscopic. \n\nBut now he turned at the familiar beckoning voice. \"Prakesh! Hello!\" \n\nLt. Abed skidded to a halt, took a moment to catch his breath, and then smiled nervously. \"Good to see you again, Sir. You look rested.\" \n\n\"Yes, I am, thank you, Lieutenant. Now what can I do for my Chief Security Officer? Has something come through from Starfleet Command?\" \n\n\"No, no, Sir, nothing like that. It's just- I know this is very sudden, Sir, but... I'm requesting an immediate transfer.\" \n\n\"What? Is there a problem?\" \n\n\"No problem, Sir. It's just that there's a position open for a Security Instructor at the Academy, one I've been after for years, and now it's mine - if I can get there in a week's time. Which means being on a transport to Earth before it leaves 154 in an hour. Assuming you approve it.\" \n\nThe news took Hrelle by surprise. He had been on friendly terms with Abed since taking command a year ago, but couldn't recall the younger man ever speaking about such ambitions. \"Is Commander T'Varik aware of this?\" \n\n\"Yes, Sir. She says she will expedite it immediately on your approval.\" Now he looked regretful. \"Sir, I know this is incredibly short notice, I certainly didn't know my life would change direction when I woke up this morning. But it's an opportunity I can't pass by-\" \n\n\"No need to apologise, Prakesh. Sometimes the Universe Has Other Plans - and if we're smart, we grab onto those plans by the horns - or whatever is at hand - and ride them.\" He smacked his combadge. \"Hrelle to T'Varik: I approve Lieutenant Abed's transfer.\" \n\nThe Vulcan's voice echoed in the Shuttlebay. \"Acknowledged, Sir. Please advise him his transport is departing earlier than scheduled, to accommodate the arrival of an incoming vessel that has declared an emergency. T'Varik out.\" \n\nHrelle nodded. \"Well, so much for throwing you an impromptu farewell party; now I have to find another excuse for cake.\" He held out his hand, \"Thank you for all your service, Lieutenant Abed.\" \n\nAbed took the proffered hand. \"These cadets are so lucky to have you as a commander, Sir.\" \n\nHrelle's expression was fixed, as he recalled how disparaging he had been about the idea of commanding a boatload of cubs. \"Thanks. Now get off my damn ship, that's an order.\" \n\n\"Yes, Sir!\" He rushed off, like a child given permission to go to the playground with his friends. \n\nHrelle watched him depart. Maybe he would be the first. Maybe others would be deserting the sinking ship, once word about the Shiprot got out. \n\nAnd what about himself? His threat to find an assignment that had nothing to do with Sasha and the cadets? Speaking to his own wife, who was carrying his cub, like she was his subordinate? \n\nFeeling like a total jerk, he headed for the airlock, and the Starbase facilities, before the Universe decided to drop something on his head as punishment. \n\nNot that he wouldn't deserve it. \n\n* \n\nDeck 1, Mess Hall: \n\nJonas picked at the tortilla chips and cheese, preferring to nurse his beer. \n\nSitting opposite, Rrori tucked into a salad, making surprisingly approving sounds. \"I will never complain about rabbit food again, after my clan stuffed me with an endless supply of fried and grilled and broiled meats. Honestly, how any of my people live to a ripe old age, I don't know.\" \n\nJonas nodded perfunctorily. The assessment he had made on the Surefoot led to one obvious conclusion, but Commander T'Varik had ordered he stay silent on it until it was officially announced. It was killing him, that he couldn't confide in someone else. \n\nThe Surefoot would never fly again. What did that mean for Captain Hrelle? For all of them on the AWE Program? Would they be fostered onto another ship? Sent back to the Academy? Would they still be together as a Squad? And what would happen to Captain Hrelle, and the Counselor? \n\nHe knew there would come a day when his life would change direction. It did already, the day he was accepted into the Program, and met Sasha and Neraxis and Kit and the others... some of those changes were awful. But most were exciting, amazing, rewarding in ways he never would have guessed. Was it worth the bad parts? Absolutely. But now came the realisation that the good parts might be over, very soon. \n\nHe looked over at Kit, who had left the table for a second helping of replicated crickets, but had become distracted by a discussion with Chief Grev. Jonas ground his teeth; Kit could be amazingly perceptive at times. He almost considered letting Kit work it out himself. \n\nHe was drawn from his reverie by Rrori, pointing a fork in his direction. \"Now there's a pensive face. What troubles you, my friend?\" \n\n\"Oh... just thinking about the future. Realising we won't be on the Surefoot, or together, forever.\" \n\nRrori made an amused sound. \"I would hope not, as my Matriarch would never let me hear the end of it if I was trapped in my final year for all eternity.\" \n\n\"You know what I mean.\" \n\nRrori set down his fork and smiled. \"Yes, Jonas, I do. And we will miss everyone here when we eventually move on. But there is an old Caitian saying: 'Enjoy the prowl as much as the pounce'. Appreciate what you have today even as make your plans for tomorrow. And who knows? Perhaps when I'm commanding a starship of my own you could be my Chief Engineer?\" \n\nJonas smiled slyly. \"Or maybe I'll be Captain, and you'll be my Chief Helmsman?\" \n\nRrori seemed to consider the possibility, before smirking. \"Or more likely, both of us will be serving under Captain Hrelle's son.\" \n\nJonas blinked. \"Son?\" \n\nRrori resumed eating. \"Yes, Kami's pregnant, with the Captain's son.\" \n\n\"WHAT?\" \n\nThe Caitian stopped chewing to add, with a mouth half-filled with salad, \"They, uh, might want to keep that to themselves for now. Don't tell anyone, okay?\" He made a shushing sound as Kit returned with a second bowl. \n\nJonas thought he was going to burst with secrets. \n\n* \n\nGiles' grin was heartbreaking to her. \"Welcome back, Warp Ten.\" \n\nSasha didn't move towards him, waiting for Eydiir and Neraxis to depart, Eydiir offering her a nod of silent support. When they were alone, he drew up to her, putting his arms around her. \"Sorry I didn't meet you at the airlock, it had been a long shift.\" He moved in to kiss her. \n\nShe put up a hand to stop him. \"How's your family? They didn't give you any problems, have they?\" \n\n\"Mmm? No, not at all. Aunt Lucille is in a rehabilitation facility, recovering, though she will most likely be moved to a planetbound assignment rather than return to command the Impala.\" He smiled. \"I know my Dad's still keeping an eye on the Surefoot, and Grandpa still bitches about 'that damned Caitian', but everyone's been fine with it - and there were a lot of Christmas and birthday presents waiting for me.\" He grinned. \"But you're the only one I wanted to unwrap...\" \n\nHe tried to kiss her again, but she blocked him again, prompting him to ask, \"What's wrong?\" \n\n\"We- We have to talk.\" She moved to the couch, planting herself on one end, waiting for Giles to take the other. Her heart was racing, and a part of her screamed inside to not tell him, to make something up to account for her odd behaviour. Her hands fidgeted with themselves, and it took some considerable effort to keep looking at him rather than them. \"I have to confess something. While I was on Cait, I met a member of Kami's clan, a couple of years older than me. She took me out on the town, we went drinking and dancing.\" \n\nHe smiled. \"Good, I'm glad you weren't feeling lonely-\" \n\n\"And then we slept together.\" \n\nGiles blinked. \"Umm... by 'slept together', do you mean more than just sleeping together?\" \n\nShe felt her face redden; in for a penny... \"She and I had sex.\" \n\nHis jaw dropped, and they sat in uneasy silence before he demanded, \"Is this- Is this some sort of a joke?\" \n\n\"No, Giles, I- I wish it was. I know this is a shock-\" \n\n\"A shock? Are you kidding me? I'm off trying to manage my family while they're in crisis, and you're off having fun with some strange woman!\" \n\nShe felt the tears welling up in her eyes now. \"Giles, I never set out for this to happen! It was hot, there was pheromones in the air, you weren't around-\" \n\n\"Oh, so now it's my fault for not being there?\" \n\n\"No! This is all down to me! I admit it!\" \n\n\"How noble of you,\" he sneered. \"How was she? How often did you do it? What did you do together? Was she better than me? Come on, let's hear all the details!\" \n\n\"Giles, please, listen... I didn't set out for it happen, it just did.\" \n\nHe glared at her. \"So, what, it was some impulse? Are you saying it won't happen again?\" \n\n\"I-\" She was about to confirm that it wouldn't... but she couldn't. She knew she would be saying it just to appease him and dampen her guilt at hurting him. \n\n\"Because it better not!\" he demanded angrily. \"I'm not letting you go off and humiliate me again!\" \n\nHis words made her pause before replying, in a calm, measured tone, \"I know you're upset over this, Giles... but you need to remember: I didn't do this to humiliate you. And we're not married, not engaged, not anything more than two people who live and work and sleep together. And even if we were more than that, you don't get to tell me who I bed. You don't own me.\" \n\nHis face tightened. \"Well, then... there's no point in me hanging around here, is there?\" He rose. \"Enjoy whoring yourself around the Galaxy.\" \n\nShe bolted to her own feet. \"GO TO HELL!\" She pointed to the door. \"Go on, get out!\" \n\nGiles stormed out, almost running into Neraxis and Eydiir, who were prowling around the entrance. The women entered, looking at Sasha, who stood there shaking, her hands balled into fists. \"Where's Rrori's wine?\" \n\n* \n\nEvent Horizon Bar, Promenade, Starbase 154: \n\nHrelle was impressed with the number of women who approached him while he sat at the bar, initially believing it was the uniform - until he realised it was his tail, brushing against their ankles as they walked by, mistaking it for a come-on; he forced it to curl around one of the legs of his barstool. \n\nHe stared into his shotglass, feeling thoroughly sorry for himself. \n\n\"Nice tail, Stud. What have you got to offer on the front side?\" \n\nHrelle never shifted, just looked up at the reflection of his wife in the mirror behind the bar. \"Nothing as impressive in size, I'm afraid.\" \n\n\"Glad to hear it; bigger is not always better.\" She took an adjacent stool, her tail reaching out to encircle around his, curling and holding onto it. \"So what's a girl got to do get a drink off a handsome guy?\" \n\nHe signalled to the bartender, an Andorian whose antennae had undoubtedly already picked up Kami's words and was approaching. \"Scalosian Sunset for the lady, please.\" \n\nShe made a pleasing sound, reaching for a bowl of Argelian nuts. \"Trying to take advantage of me, Stud?\" \n\n\"It's non-alcoholic. You're carrying our child.\" He took away the bowl. \"These are bad for you, too.\" \n\nShe snorted. \"Did Mama ask you to keep an eye on me?\" \n\n\"As a matter of fact, yes. Well, by 'ask', she threatened to ensure I never have any more cubs, with you or anyone else, if I didn't.\" \n\nThe Andorian returned with a thin glass of iced liquid layered in various pastel colours. She sipped at it through a straw appreciatively. \"Good choice.\" \n\n\"I'm surprised you're still speaking to me after the horrible way I talked to you-\" \n\n\"Shush, I'm flirting, and you're gonna kill the mood.\" She smiled seductively. \"So, Stud, what do you do for a living?\" \n\n\"I'm an Umglick.\" \n\n\"I don't know what that is, but I bet you're good at it.\" \n\nHe cradled his shotglass between thumb and forefinger. \"Ooh, I'm great at it, as a matter of fact.\" \n\n\"So, are you gonna explain what it is, or are you leaving me in the dark?\" \n\nHrelle downed his whiskey and signalled to the bartender for a refill. \"There's an old saying: 'To lose one starship is seen as a misfortune to oneself; to lose another warns of misfortune to others'.\" He watched the bartender pour the amber liquid into the glass. \"Many experienced Captains may lose one ship during their careers. But more than one? You get labelled an Umglick.\" \n\n\"And what in the name of my sweet fathers' tails does that mean?\" \n\n\"An Umglick is a midshipmen's term for a Captain cursed with bad luck, a bad luck that will inevitably filter down to the next ship and crew he or she gets. I lost the Furyk, and now I lost the Surefoot. No one will ever want to serve under me with that record.\" \n\n\"So, even though both times you ships due to circumstances entirely outside your control-\" \n\n\"Doesn't matter, bad luck is bad luck.\" \n\nShe smirked at that. \"Well, it's reassuring to know that in the latter half of the Twenty-Fourth Century, there are still men and women willing and able to spout utter superstitious crap. And that a putz like you is willing and able to wallow in self-pity about it.\" \n\nHe eyed her. \"Putz? Where did you pick up that bit of Yiddish?\" \n\n\"Sasha; she gave me a primer on all those words you picked up from her mother.\" \n\n\"I haven't even had the Surefoot for a year.\" \n\n\"And yet you did quite a lot of good with it.\" \n\nHe grunted at that, raising his glass to his reflection. \"Here's to Captain Umglick, of the USS Nothing.\" \n\nHe brought it to his muzzle to drink again, but Kami reached out and stopped him, raising her own glass as she caught his gaze. \"Here's to Captain Esek Hrelle, formerly of the Furyk, formerly of the Surefoot, soon to be of the Something Else, currently my husband and the father of the cub I'm carrying in my belly... and still one of the best captains in Starfleet.\" \n\nHe smiled - and then frowned. \"Only 'one of the best'?\" \n\n\"Yes - your bouts of self pity are off-putting, and your cousin Sa'Rahn is quite attractive.\" \n\nHe growled and drank, as did she. He set down his glass. \"I was an ass to T'Varik.\" \n\n\"No argument there. But I suspect even she realised you were talking crap.\" At his expression she smiled. \"You might have started out taking this assignment to be close to Sasha, but you've grown to adore being Papa Bear to these cubs of ours, passing on your considerable experience and wisdom to them.\" She touched her abdomen. \"And it'll get worse when this little one comes along, and your paternal caregiving hormones flare up-\" \n\nBoth of them started at the sound of the klaxon, accompanied by an announcement. \"All Starbase emergency personnel to your stations! On-duty teams to Docking Bay 4! Incoming vessel with wounded!\" \n\nHe rose to his feet, fighting off the effects of the whiskey. \"Come on, Bay 4's nearby, they might need help!\" \n\nThe Caitians raced out onto the Promenade, and then through into a service corridor, their combadges identifying them to the security network, as they joined personnel with antigrav stretchers and medikits hanging under arms on shoulder straps. He looked to a young man in medical blue. \"What's the situation, Ensign?\" \n\nThe pale human, who looked like he was waiting for the day when he could have his first shave, swallowed. \"The ship picked up a distress signal from a freighter, the SS Carolina, being attacked by pirates. They managed to beam the crew onboard and escape with their lives.\" He swallowed again and added, out of a senses of propriety, \"Sir.\" \n\nHrelle nodded to him. \"First emergency?\" \n\nThe kid nodded. \n\n\"You'll be fine, Ensign,\" Kami assured him calmly. \"Follow your training, focus only on the case immediately in front of you, and trust your people to take care of the others. We're only here to help, not to take over.\" \n\nHe nodded gratefully. \n\nHrelle, meanwhile, peered out the adjacent porthole to see a large but compact-looking vessel manoeuvre into the docking bay. It was a break from the traditional Starfleet saucer-engineering design, with its Secondary hull integrated and bisected into the hexagon-shaped saucer, and the two warp nacelles attached directly to the saucer via reinforced cowlings at the Bussard collectors. In its own way it was as radical a design as old Oberth-class ships like the Surefoot. He couldn't see the ship's name or registry number from here, but he had already recognised it as a Saber-class ship. \n\nThe ship completed docking, the alert signals sounded, and the airlock doors slid aside, as the ensign and the medical crew entered, followed closely behind by Hrelle and Kami. \n\nThey found themselves in a forward shuttlebay, its floorspace covered with several dozen people on emergency mattresses, some being tended to by uniformed personnel. \n\nHrelle and Kami grabbed spare medikits and followed orders barked by the ensign, who had admirably suppressed his nerves and was willing to give commands to people who technically outranked him, except during medical emergencies. The Caitians began checking and confirming diagnoses, though the wounded appeared well-organised. \n\nThen Hrelle's attention was drawn by a tall, lanky, brown-orange skinned humanoid with a gaunt, skeletal face, emerald green eyes, and Lieutenant's pips on his Command-red Starfleet uniform. He didn't recognise the race, but strode up, medical tricorder scanning, his eyes and nose already noting the bleeding from the cut on the Lieutenant's left temple. \n\nImmediately, the tricorder told him he was dealing with a Kelpien male. He grunted to himself; Kelpiens were relatively rare in Starfleet, mostly due to their predilection for a cautious approach to everything, developed from their evolutionary path as prey on their homeworld, a predilection that others mistakenly took for cowardice. \"What's your name, son?\" \n\nThe Kelpien was breathing hard, his eyes on the wounded on the floor. \"Lieutenant Neheru, Sir, Utopia Planitia Conveyance Facilities.\" \n\nHrelle noted the tendrils on the Kelpien's face, fluttering excitedly, recognising it as an instinctive response to threats and potential threats - or just general extreme stress. He opened the medikit and prepared an autosuture. \"Well, Mr Neheru, you have only a slight concussion, which we'll treat now, but the Sickbay team will still want to check you out further. How did you get it?\" \n\nNeheru nodded, and then winced at the effort. \"I... I got it while being thrown out from the Captain's Chair. It was like the ship knew I didn't belong there.\" \n\nHrelle reached up and gently held the jutting chin still as he proceeded to repair the damage. \"And what were you doing in the chair?\" \n\n\"Utopia Planitia assigned me command of a skeleton crew to convey this vessel to Starbase 154. Then we picked up the distress signal from the Carolina, and responded.\" \n\nHrelle nodded, satisfied with the work on the cut, and preparing a mild sedative. \"Must have been terrifying.\" \n\nNeheru made a harsh sound, quickly correcting it with, \"Sorry, Sir. Yes, yes it was. A Saber-class would have had more than sufficient firepower to easily defeat the pirates... were it not standard policy for the weapons systems to be off-line during routine conveyance journeys. So I decided to focus on keeping our shields up between the pirates and the freighter, beam out the freighter crew and escape.\" ",
        "\"Good work, Captain.\" \n\nNeheru shook his head. \"Sir, I'm no Captain, I'm just a glorified valet. I was only given command because of my seniority, and my familiarity with the Saber class.\" \n\n\"Doesn't matter. You were in command, and you did remarkably well. I'll be making sure your commanding officer knows it, too.\" \n\nHe shook his head, as if he could cast away the memories. \"I fear I will have merely reinforced my people's reputation for timidity in his eyes.\" \n\n\"Would you rather be fearless?\" \n\n\"Who wouldn't?\" \n\n\"I wouldn't. Fearless men are idiots. They're reckless. They're dangerous to themselves and others.\" He pressed the hypospray against Neheru's neck. \"You were sent in a direction you didn't expect, placed in a position you weren't prepared for. You faced the possibility of dying. You were terrified - as anyone with brains would be - but you still stuck around to do the right thing.\" \n\nThe Kelpien's threat tendrils receded into his head, as he visibly calmed down. \"The freighter, its cargo, it's lost-\" \n\n\"Screw the freighter, and its cargo. You got the crew and yourselves out of there, and kept your ship intact. That's what matters. You've nothing to be ashamed about.\" He patted the young officer on the shoulder. \"Relax now, while the real medics do a double check on you.\" He chuckled. \"I have no idea what I'm doing here.\" \n\nNeheru looked down at it and made an expression that could be a smile to his people. \"I think you do.\" \n\nHrelle took the medical equipment and moved onto the next patient. But he glanced around the shuttlebay just the same, hie furred brow creased in thought. \n\n* \n\nDeck 2, First Officer's Quarters/Office: \n\nT'Varik never looked up from the multiple desk screens surrounding her when her door chimed. \"Enter.\" \n\nShe didn't have to look up to know it was Giles Arrington who entered, even if he didn't announce formally, \"Beta Squad Leader Giles Arrington reporting as ordered, Ma'am.\" \n\nShe still didn't look up. \"That greeting is no longer appropriate in your fourth year, Mr Arrington. Particularly as I did not order you here. Proceed swiftly to your reason for your presence in my office.\" \n\nGiles swallowed, breathed in sharply and announced, \"Commander, I wish to request an immediate transfer to another ship in the AWE Program.\" \n\nNow she looked up. \"Not possible, Mr Arrington. The cadet squads on the other ships in the Program are already fully staffed.\" \n\n\"Then, perhaps, one of their squad leaders would like to exchange with me?\" \n\n\"And what is your reason for requesting this?\" \n\nHe blinked. \"It's... personal. I don't want to-\" \n\n\"My time is precious. You will elaborate. Or you will leave.\" \n\nHe tensed, visibly struggling with opening up. \"I can't- I can't stay onboard with Sasha anymore. I've... She's humiliated me.\" \n\n\"In what way?\" \n\nSomehow he reddened even more. \"She had an affair with someone while she was on Cait.\" \n\n\"I see. And presumably you dissolved your relationship with her over that?\" \n\nHe blinked. \"Of course I have! Wouldn't you?\" \n\n\"There is no 'of course' about it; people's acceptance and tolerance of such events within relationships is entirely subjective. So as I understand it, now that you and she are no longer intimate, it will be uncomfortable for you to serve onboard the same ship as her, yes?\" \n\nHe nodded. \"Yes, that's exactly it, Ma'am.\" \n\nShe nodded too. \"Request denied.\" \n\nHis face reddened. \"What? You can't refuse me!\" \n\n\"As your Academy Liaison and your superior officer, I certainly can refuse you - and I can overlook your insubordinate tone... albeit to a very limited degree.\" \n\nHe stiffened, his faced creased with disbelief. \"So you expect me to just take her back and forget what she did-\" \n\n\"As I have absolutely no interest in your relationship with her, or with anyone else's relationships, I do not expect you to do anything - except behave in a professional, mature manner as is required by the uniform you wear and the oath you took. \n\nYou and she will not be the first members of Starfleet who have to work together despite a failed relationship, nor will you be the last. And you cannot expect Starfleet to accommodate you at every turn. Is that understood?\" \n\nHe swallowed, clearly appearing eager to either argue further, or drop the subject completely. \"Yes, Commander. I apologise for disturbing you with this, and for being discourteous. I was just... upset.\" \n\n\"Acknowledged.\" \n\n\"May I be dismissed now?\" \n\nShe nodded to the door, but he was almost at it before she added, \"Giles?\" \n\nHe stopped and turned, surprised at the informal use of his first name. \"Commander?\" \n\nShe looked at him fully. \"Did Sasha have to tell you what happened? Could she have conceivably kept it to herself and not been honest with you?\" \n\nHe frowned. \"Um, yes, I suppose she could have. But I don't see-\" \n\n\"And when she did tell you, was she triumphant about it? Callous? Did she make any distasteful or disparaging comparisons between her alleged paramour and yourself?\" \n\n\"Well, no.\" \n\n\"Did she appear regretful about what happened?\" \n\n\"Regretful? Maybe for hurting me, I guess. What does all of this have to do with it? She still did it.\" \n\n\"Yes, and I will not comment on the morality of her actions, or make excuses on her behalf. But I can confidently say, as her instructor and Academy liaison, that she is a good person. Not infallible, but good. And I suspect you concur. \n\nYou once took the Kobayashi Maru test, along with all other cadets on Command courses, and you know it is a test of character more than anything else, a test to understand how you deal with your own failures. But it is equally important, if not more so, to understand how you deal with the failures of others. Because in this life, people will fail. They will fail you. You will fail others. \n\nSpeak to her, calmly. At the very least, establish a truce of civility between the two of you; given your history, it is possible to salvage something out of this. If nothing else, your relationship may move in a new direction that will ultimately be satisfying for you both.\" \n\nHe seemed to genuinely consider her words, finally nodding and replying, \"Thank you, Commander.\" He smile a little. \"Sometimes I envy Vulcans. They never seem to have any problems.\" \n\n\"No,\" she agreed neutrally. \"We never seem to.\" \n\n* \n\nKami had expected to return with Esek to the Surefoot after they assisted moving the wounded to the Starbase sickbay facilities. \n\nBut she'd sensed the change in the mood of her husband along the way, a departure of the gloom and self-pity of before, and towards a new vector, an animated enthusiasm. When Lieutenant Neheru had been released and debriefed by 154's Starfleet Liaison Office, Esek had been waiting for him, cajoling him into escorting them back to the new ship for a tour, asking a plethora of questions along the way, on the vessel's specifications, performance, crew complement, facilities, offensive and defensive capabilities, and questions on things Kami never heard about. Hrelle was as excited as a cub getting his first sniff of a female in Season. \n\nKami wasn't sure yet what was going on. But she liked it. \n\nThey ended the tour where they started, at the docking bay, with Hrelle suggesting to her, \"Why don't you go back to the Surefoot, unpack and put your feet up. Actually, don't unpack, not just yet. I've worn you out in your condition, I'm so sorry-\" \n\n\"If you don't shut up about my condition I'll carry out my mother's threat to your Amazing Sperm.\" She drew in closer. \"What's going on in that gorgeous head of yours, Esek?\" \n\nHe looked almost ready to tell her... but instead he just smiled. \"I have a lot of hurdles to get over first: with Starfleet Command, the Academy, Lt. Neheru's CO at Utopia Planitia, T'Varik - especially T'Varik - but if I'm successful...\" He nodded at the Sabre-class starship outside the docking bay. \"That will be the next Surefoot.\" \n\n\"What? You're drunk. They're not gonna let you take a top-of-the-line brand new ship to do an ordinary supply run-\" \n\nBut he brought a shushing finger up to her muzzle, making a very, very sexy accompanying sound, before drawing in closer to murmur in her ear. \"Trust me, I know what I'm doing. So get that sweet little tail of yours back to our old ship... or I'm liable to take you back onboard this one to test out the bed in the Captain's Quarters.\" He purred for emphasis. \n\nShe recognised he was at least partly deflecting her questions and concerns - but she also recognised how much of a genuine good drive he had now. \n\nAnd the purrs went straight to her nethers and made her tail wag. \n\n\"Get something to eat,\" she suggested. \"Get the smell of whiskey off your breath so you're taken seriously.\" \n\n\"Yes!\" he exclaimed loudly, smacking her on the rear and racing back like a child to a bemused Neheru standing nearby. \"Come on, we never tested those replicators of yours in the Mess Hall!\" \n\nKami returned to the Surefoot, the tingle in her rear from his touch such a pleasing distraction that she barely registered the cadet rushing up to her, until he was practically in her face. \"Jonas! You nearly made me pee myself!\" \n\nHe paled and jumped back. \"Oh! Sorry, Counselor! Terribly sorry! Are you okay?\" \n\nShe smiled. \"Of course I am, I was just- never mind. I'm sorry we didn't get a proper welcome talk in the meeting before and-\" Then she caught him glancing down at the slight bump at her waistline. \"Who told you?\" \n\n\"Um, Rrori accidentally let it slip.\" He flushed. \"Congratulations.\" \n\n\"Thank you. We'll make a formal announcement later, once the more important business with the ship is addressed. What can I do for you?\" \n\nJonas breathed in, determined not to lose his nerve now after making his decision. He glanced around, making sure there was no one in the corridor to hear them. \"It's about that business with the ship. Well, since we both know what it's about, and that we might soon be parting and maybe not see each other again, I just wanted to say: Thank you, Kami. Thank you for your counsel, for your ear, for your patience and understanding. Thank you for pulling me back from the Abyss, for always having a warm, wonderful smile that brightens up everyone's day, and for helping me be a better man.\" Then, with impulsive punctuation, he hugged her tightly, only afterwards squeaking too late, \"I'm not hurting you, am I?\" \n\nKami chuckled, and hugged him back. \"No, you're not.\" She drew back, aware of people watching them as they passed by in the corridor, she stood there, smiling, her tail swishing happily. \"Thank you for saying all those lovely things. But we're not all splitting up. Not just yet.\" \n\nHis eyes widened. \"We're not?\" \n\n\"The Captain's working on something. And from the way he's carrying on, it's something special. So don't be giving anyone else any goodbye hugs - or any other displays of affection - just yet, okay?\" \n\nHe grinned; that was a load off his mind! If anyone could come up with something, it was Captain Hrelle! \"Okay, Counselor! Thanks!\" \n\nSuddenly, Kami's expression changed, and she clutched her belly. \"Oh, no-\" \n\nHe sobered. \"Something wrong?\" \n\n\"Oh, no,\" she repeated, looking to him in alarm. \"When we hugged, I think- I think my cub might have accidentally bonded with you now, believing you're his father! When he's born, he'll reject Esek in favour of you!\" \n\nHis jaw dropped. Oh God, what did he do to her? \"You're kidding!\" \n\n\"Yes,\" she confirmed, sticking her tongue out at him; as she departed, she declared. \"I'm gonna love having another year to tease you!\" \n\nHe watched her go around the corner, his heart still racing. \"Bitch...\" \n\n\"I heard that,\" she called back jovially. \n\n* \n\nT'Varik had been arranging to make preliminary interviews with prospective candidates for a replacement captain when her combadge chirped, and Hrelle's voice filled the air. \"Commander, please report to Airlock 2 for an EVA mission immediately.\" \n\nShe stopped and indulged in a furrowed brow, touching her combadge to reply, \"I am occupied with vital work, Captain. May I ask the reason behind your request for me to engage in Extravehicular Activity?\" \n\n\"It's not a request, it's an order from your superior officer. And I believe I am still your commander.\" \n\n\"Captain-\" \n\n\"Did I mention the word 'immediately'?\" \n\n\"You did, Sir.\" \n\n\"Good. I'm sitting on the Starbase's mooring clamp on the port saucer side. Hurry up and join me before I run out of air and die waiting for you, and then you'll have more paperwork.\" \n\nDuring the periodic EVA certification exercises, T'Varik typically managed a minimum outfitting time of 2.35 minutes. Today it was a disappointing 2.58 minutes, which she attributed to the length of time she had been working on making alternative arrangements since her meeting with Captain Hrelle that morning. Her magnetic boots clamped faithfully onto the underside of the saucer, allowing her to walk over the edge and onto the dorsal side as she approached the Captain. \n\nHe was sitting against the mooring clamp as promised, like it was some tree stump in a bucolic setting; in the distance behind him, the lights of the Starbase's traffic control tower were in sharp contrasts to the purple defector beams stretched periodically along the circumference of the facility, occasionally reaching out and moving stray asteroids away. He waved to her, his voice carrying over the comlink. \"About time, Commander. Did you get lost?\" \n\n\"No, Sir.\" She noted his exosuit was a variant of the typical Starfleet design, with the elongated helmet to accommodate his muzzle and ears, and the armoured, articulated tail sheath swishing behind him some of the obvious differences. \"May one enquire now why we are outside?\" \n\n\"Well, firstly, I wanted to apologise for my earlier behaviour to you. You made a significant effort to find alternative vessels and missions for us, and I kicked you in the toches for it.\" \n\n\"No kick to my posterior was actually given, Sir, and no apology is required. Especially one which involved taking me away from my work to climb into an exosuit and meet you outside.\" \n\n\"Then I'll move on to the 'Secondly'.\" He pointed past her. \"What can you tell me about that ship?\" \n\nT'Varik turned, following his extended finger to the small, tightly-packed-looking Starfleet vessel with blue-lit swept-back nacelles mounted to the sides of a hexagonal saucer with an embedded secondary hull. \"I cannot identify the specific vessel from this distance, but it appears to be a Saber-class starship, first introduced as a potential replacement for older multi-mission designs such as the Mediterranean-class and the Oberth-class. Production of the model has proceeded apace since 2360.\" She paused as she witnessed the ship perform a series of sharp vectors that looked impossible. \"This one appears to have been commandeered by inebriates.\" \n\n\"Worse: our Flight Ops cadets. You know, I think I can discern their individual styles as they take turns at the helm: Rrori's pounces, Chaudri's banks, Drill's spins-\" \n\n\"Why are they piloting another ship?\" \n\n\"I invited them, and Lt. Velkovsky, to try it out. It must be quite a change from the Surefoot's clunky old warp drive.\" \n\n\"And the captain of that vessel agreed to allow our cadets to terrify the Starbase flight control crew with these aerobatics?\" \n\n\"It stopped having a captain the moment Lt. Neheru brought the ship to the Starbase. It doesn't even have a name - yet - just a designation number: NCC-72111. It's waiting for a captain and a crew to be assembled, to become a fleet tender for the front-line vessels on the Cardassian border and the Demilitarised Zone.\" \n\n\"Sir, that is very interesting-\" \n\n\"I think so, too, since that's going to be the next Surefoot.\" \n\nT'Varik paused. \"I beg your pardon, Sir?\" \n\n\"That will be our next ship, and front-line fleet tender work will be our next mission.\" \n\n\"The Academy Superintendent will not allow the cadets to engage in missions near the Cardassian border and the DMZ. The risk to their lives is too great.\" \n\n\"Help me up,\" he asked. As she did so, he grunted. \"They shrunk my exosuit around the waist since I last wore it.\" \n\n\"Of course they did, Sir. Captain, I appreciate your efforts in this, but-\" \n\n\"Did you know,\" he interrupted, \"That 72% of the officers and crew of those front-line vessels consist of Starfleet personnel with less than 2 years' experience? You'd probably recognise most of them from the Academy if you saw them.\" \n\nThe realisation made her pause. \"I was not aware of that fact.\" \n\n\"As you can imagine, Starfleet Command isn't exactly advertising it, either. I know that cubs fresh out of the Academy will often jockey for a front-line posting for their first assignment, because it looks good on their record, because you can advance more quickly, and it probably satisfies some cockamamie sense of adventure. \n\nBut things could heat up out there, so very quickly and easily, thanks to the Cardassians, the Tzenkethi, the Maquis. And having our front line manned by relatively-inexperienced officers and crew could quickly turn into a disaster. \n\nI've been in communication with Admirals Nechayev and Tattok about this, and we think we might have come up with something. They need a front-line Strategic Operations Officer, someone on hand with extensive tactical experience to offer advice and support if requested - and to take overall command if necessary. Now, officially, I'll still be nothing more than the Captain of a support ship, with cadets in training, it will remain my primary job, and I will not taking our cadets into battle - if I can help it.\" \n\n\"A Strategic Operations Officer,\" she repeated, considering his words. \n\n\"Yes - I wanted my official title to be Papa Bear, but they wouldn't allow it.\" \n\n\"That is regrettable,\" she noted dryly. \"Sir, I can see the logic and value in such a change of position and mission. But I am not sanguine about the Superintendent's response.\" \n\n\"Commander, it's no damn good protecting our cubs before they graduate, only to send them out here to risk getting killed before they've even earned their two-year-tour of duty ribbons.\" \n\n\"I cannot argue against that, Captain.\" \n\n\"And as much as I appreciate the old Surefoot and its long and proud history, having a newer, tougher, faster vessel under us will give us a definite edge in any situation that might arise, protecting the cadets more effectively - as well as giving the cadets more relevant experience with state-of-the-art technology.\" \n\nT'Varik looked up again to see the vessel stop its manoeuvres, and carefully glide back to the Starbase's docking bay. \"Captain, you have astounded me.\" \n\n\"I have?\" \n\n\"Indeed. I spent 19.62 hours collating data to select what I believe were appropriate vessels and missions. In a fraction of that time, you actually appropriated your own vessel and created your own mission.\" \n\nHe shifted in place, an approximation of a shrug. \"Thank you. But I know we still need to sell it to the Superintendent. It will take all of my logic and rationality, and all of your charm and sex appeal to win her over.\" \n\n\"You are of course assuming that I approve of this,\" she pointed out. \n\n\"I haven't forgotten.\" \n\nHe held out his hand to her and smiled. One of his more charming ones, too. \n\nShe raised an eyebrow. \n\n\"If it helps,\" he added, \"I'm purring inside my suit.\" \n\n\"Duly noted.\" \n\nShe accepted his hand. \n\n* \n\nDeck 4, Alpha Squad Quarters: \n\nIn the end, they didn't have the heart to take Rrori's family wine from him, settling for Neraxis' Bolian beer, which in the end probably had a stronger alcoholic content anyway. \n\nCertainly it was enough to make Eydiir take the latest bottle that Sasha grabbed from the cooler before she opened it. \"You've had four. That is enough.\" ",
        "Sasha looked ready to argue, leaning forward on the couch, before settling back again. \"You're a good friend, Eydiir.\" She looked around to the others, sitting drinking, reading or playing cards. \"You're all good friends! Who needs lovers when you can have friends? Am I right?\" \n\nNeraxis made a sound and threw the girl a bag of salted potato cubes. \"Here, eat something. And for the record, I'd sell all of you to the Orions for a quick Bump with someone.\" \n\n\"Good Friend Neraxis,\" Kit began, PADD in hand to take notes. \"It surely cannot be too difficult a task for you to find someone with whom you can engage in intimate relations? You have what appears to be many desirable qualities.\" \n\nShe grunted, nursing her beer and looking maudlin. \"Thanks, Kit. But whatever my desirable qualities, they're overwhelmed by my being loud, crude, and annoying. Also, my Bolian biochemistry is caustic, and makes going Bumpers with me a minor health risk.\" \n\n\"Such health risks can be surmounted,\" Eydiir pointed out. \"With the use of protective sheaths and dental dams.\" \n\n\"Hey, who are we talking about, me or Sasha?\" Neraxis drank some more before continuing. \"You were right to dump him. Imagine that, him telling you what you can do with your own body.\" \n\n\"Exactly!\" Sasha agreed, cheeks stuffed with snacks. She wiped crumbs from her mouth with her sleeve. \"My body, my rules!\" \n\n\"But Good Friend Sasha,\" Kit offered, \"My own people possess a sense of romantic love if not a sexual one, and it, like yours and many other humanoid races, involves an element of possession.\" \n\n\"What? What are you talking about?\" \n\n\"Possession and ownership is often implicit: in songs, in poetry, and in marriage vows. 'Will you be mine', 'Be my lover', 'To have and to hold', 'Will you take this man to be yours?'.\" \n\nNearby, Rrori, playing Double Jacks with Jonas, threw down a card and selected another, grimacing slightly at it. \"Perhaps, Kit, but they are not married, they were not Bonded.\" \n\n\"No,\" Kit agreed, looking to Sasha again. \"So how would you classify your relationship with Good Friend Giles?\" \n\n\"I-\" She thought about it, and not for the first time. She couldn't see this as a lifelong commitment with him, not at their ages and at this time in their lives; it wasn't like the old days, when they had to marry and have babies before they died of the plague or something. She loved being with Giles: working, talking, making love. A part of her remained impenitent for being with C'Rash, even as she regretting that Giles was hurt because of it. \"I... don't know, Kit.\" \n\n\"You love him,\" Eydiir reminded her. \n\n\"But that's not always enough,\" Jonas pointed out, sending down his cards and smiling at Rrori. \"Double Jack, again.\" \n\nThe Caitian growled. \"You are not meant to be lucky with both cards and women.\" \n\n\"I recognise that love is often not sufficient in and of itself, Good Friend Jonas,\" Kit replied. \"I am merely speculating if Good Friends Sasha and Giles can possibly renegotiate the terms of their relationship?\" He looked to Sasha again. \"Forgive me if I am overstepping the bounds of our own relationship.\" \n\nShe was about to respond, when the door to their quarters chimed, and then it slid open a second later, to reveal Giles, standing in the doorway, ignoring the looks from the others to focus on Sasha. \"Can I have a word alone with you please?\" \n\n\"Have you come back to make more demands?\" \n\nHe shook his head. \"I just want to talk.\" \n\nShe seemed to consider the request, but remained motionless for so long some of them thought she'd fallen into a drunken stupor with her eyes open, and nudged her. She clambered to her feet, straightened herself with as much dignity as she could muster, and motioned to the bedroom, expecting him to follow without watching him. Once the door slid shut to the rest of her quarters, she leaned against one of the bunk beds and asked, \"Well? What do you want to say?\" \n\nHe fidgeted, visibly gathering his thoughts before finally replying, \"I wanted to apologise for reacting the way I did. It was- It was a shock to hear that you'd have been with someone else. I got a little crazy. I kept thinking about what I had done wrong, what I was doing wrong, to make you look to someone else. I was- I was a total jerk to you.\" \n\nShe wanted to agree with him. She wanted to get smug and triumphant over his admission of blame, and to tell him to go to the Seven Hells and not come back. \n\nBut she didn't. She couldn't. \"You've never done anything wrong, Giles. On the contrary... you've been wonderful to me, more than I deserve. I'm attracted to women as well as men, not to the same degree, but it's there, it was always there, and it was something that I could only ever talk about with our Counselor. Then this Caitian female came along, and she gave me an opportunity to see what this new direction was like. And... I took it. \n\nBut I was wrong not to think about how it might affect you. I'm sorry.\" \n\nHe nodded back, smiling a little. \"So, think we're suitably sorried out now?\" \n\n\"Yes.\" She smiled. \"Maybe we can still be friends?\" \n\n\"I'm hoping so.\" \n\nSasha nodded at that - and then drew up and pulled him into a long, lingering, open-mouthed kiss, one he eagerly returned. \n\n* \n\nMinutes later, the other members of Sasha's team sat around pretending not to hear the rhythmic thumping of the bunk bed frame against the adjacent wall. \n\nUntil Kit declared to no one in particular, \"They appear to be renegotiating.\" \n\nJonas smirked. \"I wonder whose bunk they're in?\" \n\n\"Based on the location of the noise,\" Eydiir declared sullenly, \"Mine.\" \n\n\"Hey, congratulations!\" Neraxis declared, raising her beer bottle in salute. \"Your first damp patch!\" \n\n* \n\nClad in a silk dressing gown, Kami heard the snoring through T'Varik's door as she stopped outside it, and let herself in without introduction as instructed. \n\nShe started at the sight of her husband sprawled out on his first officer's couch, his legs dangling over one end, his tail poking out from between the cushions under his rear, and several PADDs somehow balancing themselves on his belly, constantly threatening to slide off with each slow, deep snore he made. His mouth was open, and drool collected on one side. \n\n\"There's my sexy man,\" she murmured, looking to T'Varik. \"How long has he been out?\" \n\nShe was standing nearby, a PADD of her own in hand. \"8.6 minutes. I appear to have fully exhausted him.\" \n\n\"Boaster,\" Kami teased. \"Why didn't you wake him yourself?\" \n\n\"I tried. He did not respond to verbal clues, and an attempt to physically awaken him resulted in an subconscious and inappropriate gesture on his part. I thought it would be best to leave this in your capable hands.\" \n\nOn the couch, Hrelle made some sleepy sounds and mumbled, \"Come back to bed, darlin...\" \n\n\"Cut it out, idiot,\" Kami scolded loudly. \"I knew you woke up the moment you caught my scent as I entered the room.\" \n\nHrelle opened his eyes and sat up quickly, wiping the drool from his muzzle and scattering his PADDs onto the floor. He looked up at T'Varik and smiled. \"Sorry. Guess I don't have your Vulcan stamina.\" \n\n\"Clearly not. You do compensate, however, with Caitian charm. I did not believe our talk with the Superintendent would have been as successful as it was without your impassioned input.\" \n\n\"She agreed to the new mission?\" Kami asked. \n\n\"More than that,\" Hrelle informed her, beaming, \"We're getting more cadets. Ten more, to be precise: two new squads, Delta and Epsilon, made up of Fourth Year seniors who didn't make it into the Program last year. We're going to need them, to supplement the crew with our new mission parameters on the Surefoot.\" \n\n\"The Surefoot-A, to be precise,\" T'Varik corrected. \"Although of course it is acceptable to neglect the suffix letter in causal conversation. When do you wish to inform the crew?\" \n\n\"The sooner, the better, we have a shipload of work to do in the next two weeks, including transferring our possessions, undergoing certification on some of the necessary systems over on the new ship, yadda yadda... how does 0800 Hours sound?\" \n\nShe nodded, glancing at her wall clock. \"That will be 4 hours 32 minutes from now. Will you be sufficiently rested?\" \n\n\"I will be if my wife can keep her paws to herself for once.\" \n\n\"I just got woke up out of a sound sleep to come collect you,\" she informed him archly. \"You'll be safe for a good while, I would think.\" \n\nHe smirked, and then brightened. \"Cake! We'll need a cake for the briefing!\" \n\n\"Cake will not be appropriate, Sir.\" \n\nBut his eyes were glazed with thought, and his hands made indistinct shapes in front of him. \"Get a cake made in the shape of a Saber-class starship! Devil's Food Cake!\" \n\n\"Good night, Sir; it has been a singular sleepover with you, but you should leave now.\" \n\nKami took him by the elbow and guided him to the door. \"Come on, you can play with your friend in the morning. Say goodnight, sweetie.\" \n\n\"Goodnight, Sweetie,\" he offered T'Varik as he departed. \n\n* \n\nThere was no cake, but Hrelle was too caught up in the buzz of the excitement in the crowded room - and on the three coffees he had downed before the briefing started - to care. \"For those of you not in the know, a fleet tender is a support vessel designed to carry military cargo, arms, relief crew and medical/repair facilities to front-line vessels who can't afford to leave their assigned patrol routes to re-equip themselves, or possess sufficient resources to manage for long on their own. \n\nAlthough not significantly larger than its predecessor, the new Surefoot makes far more efficient use of interior space, allowing for increased cargo capacity, relief crew barracks and living facilities that double as an emergency sickbay, a fabrications bay to facilitate repairs to other vessels, additional transporter units for mass evacuations, superior phaser and photon torpedo capability, and a modified tractor array equal to that of vessels twice its size or more, for salvage and retrieval operations. \n\nThis new ship will also be getting additional crew: two more cadet squads, a new Chief of Security, a surgeon to supplement Dr Ling...\" He indicated the tall, lanky Kelpien in the far corner. \"And a new Chief Operations Officer and third in command. Lt. Neheru here has agreed to sign onboard; his knowledge and experience with the Saber-class vessel will make him invaluable. \n\nWe're going to need him. We're gonna need it all. Our new missions will be more important. As will your responsibilities, commensurate with your status as final-year cadets. More will be expected of you, because there'll be more at stake. But I have faith that you can all rise to meet the challenge.\" \n\nA cheer erupted from the crowd. \n\nBeside him, Kami nudged his belly, prompting him to hold up his furred hands for silence again. \"Oh, and in the spirit of efficiency, as we're all together, we also wanted to announce that my wife and I are expecting a child.\" The crowd let loose another cheer, as he added, \"MY SPERM ARE AMAZING!\" giving Sasha a thumbs up before she hid her face in her hands. \n\nAfterwards, Neheru approached Hrelle, his elongated limbs moving with a flexibility envious to the Captain. \"Sir, I am grateful to you for this unexpected opportunity; one is often not made third in command of a vessel at my age.\" \n\n\"Well normally it might have gone to the Chief Engineer or Chief of Security, but the former will be too busy learning and managing the new engines, and we don't have a latter yet. And in fact Commander T'Varik doubled as our Chief Operations Officer, but she'll have her hands full with her other duties. Besides, you've commanded ships before, so it won't be too new for you.\" \n\n\"As I told you before, Sir, I was merely a glorified valet-\" \n\n\"Who stepped up and proved himself when required.\" \n\n\"Thank you, Sir. But while I am obliged to thank you, I am also obliged to warn you.\" \n\nHrelle's ears twitched with curiosity. \"Warn me? That sounds ominous. What about?\" \n\n\"Well... me, Sir. I will of course perform my duties to the best of my abilities, as per my oath to Starfleet. But I do so under the philosophy of my people: that life is too valuable to risk losing it unless absolutely, positively necessary - and even then, there had better be a very good excuse to fight, if flight is an option. \n\nEspecially when speaking of these cadets of yours. I know I'm not much older than them. But I will not allow any of them to endanger their own or each other's lives, or to act like 'mavericks' or 'hotshots'. I intend that they live long, safe, happy, fulfilling lives. Even if they hate me for it.\" \n\nHrelle smiled. \"I think you and I are going to get along well, Mr Neheru.\" \n\n* \n\n\"Captain's Log, Stardate 42243.01: they've stripped the old Surefoot of everything that isn't being taken with it in tow to the Qualor Shipyards. All our personal possessions have been transferred over to the new Surefoot, orders have been signed and countersigned in triplicate, Commander T'Varik is arranging for the two new cadet Squads to be transported here, and we are employing some of Starbase 154's holosuites as training platforms to gain our certifications for the new systems. Commendations are on file for all my senior officers.\" \n\nHrelle paused, sitting in his Captain's chair on the old bridge for the final time. There were minimal lights, it was cold, and the door behind him was secured open, letting him hear footfalls approaching. \n\nHe tapped the log button on the arm of his chair once more. \"This is my final log onboard this ship. It was not a long partnership we had, but it was my first after my escape from captivity, my first in this new direction my life has taken. I will always remember it, and treasure it. Captain Esek Hrelle, commanding USS Surefoot... out.\" He stared ahead at the blank viewscreen. \"Commander?\" \n\nT'Varik drew closer. \"Am I disturbing you, Sir?\" \n\n\"No. I was merely doing something I never had the chance to do with the Furyk: say goodbye to her.\" \n\nShe folded her hands behind her. \"'Her'. I will never be exuberant about the practice among many races of assigning feminine pronouns to starships. It is both antiquated and sexist.\" \n\n\"Sexist?\" \n\n\"Of course. It is certainly sexist to refer to something one possesses, directs and commands as feminine. It is a practice expected of humans; it is however a surprise to hear it from Caitians, given your matriarchal society.\" \n\nHe smiled. \"That's because we don't look on our ships as objects we own and command, but rather as our mothers: respected and revered, protecting and guiding and commanding us, even as we bask in the illusion of control.\" \n\nShe nodded at that. \"I am aware of the emotional attachments that can be formed, and of various superstitions that arise among vessels... and their Captains. Including that of the Umglick, Sir.\" \n\nHe looked up at her. \"Kami told you? Why am I asking, of course she did.\" \n\n\"I needn't remind you of the absurdity of believing in luck, good or bad.\" \n\n\"Two ships, T'Varik... Two ships...\" he reminded her, though he didn't sound too serious about it. \n\n\"Then if we are employing superstition, I will invoke another: 'Third time's the charm'.\" \n\nHe looked up at her with regard. \"You know, you're right.\" \n\nShe raised an eyebrow. \"I suspect you had already reached that conclusion. You are a resilient, positive force.\" \n\n\"Yes, it's annoying, isn't it?\" Hrelle smiled and rose to his feet. \"Well, if this Surefoot was like a mother to us, I think she would tell us that her time had passed, and that we had to move on. Shall we?\" \n\n\"Yes, Sir.\" \n\nHe stopped at the doorway and took a final farewell glance at the darkened bridge. \n\nAnd reminded himself to get his new chair adjusted to accommodate his tail. \n\n* \n\nUSS Vigilant, Deck 1, Captain's Ready Room: \n\nCaptain Yung looked like a teenager, even in his thirties and with his new sable goatee, thus earning him the secret nickname - Captain Yungster - among his crew. He tolerated it, knowing that someday, this youthfulness would work in his favour. \n\nNow, however, he stayed focused on the crewmember standing before him, and the orders he received ten minutes before. \"Well I have to say, Lieutenant, you must lead a charmed life.\" \n\n\"Sir?\" \n\n\"I'm sure you thought you were being brought in here to face yet another reprimand, perhaps even a court martial; it wouldn't be beyond the realm of possibility, given how you've behaved on my ship since your arrival, now would it?\" \n\n\"Sir?\" \n\nHe held up his PADD. \"But no, you're here because I received this: priority orders to transfer you to another ship, and your promotion to the post of Chief of Security of a fleet tender serving the Cardassian Border and the DMZ.\" \n\n\"Sir?\" \n\nHe glared at her. \"It's called the Surefoot, commanded by a Captain Esek Hrelle. You leave by shuttle within the hour.\" He set aside the PADD. \"Well, I don't know who's pulled these strings for you, but if I did, I'd send them a case of Saurian brandy. You have been an almighty thorn in my side since you arrived, so I'm glad someone else can have the burden of dealing with you.\" He paused and snapped, \"Well? Have you anything to say beside 'Sir'? Come on, speak your mind, this is a rare opportunity, one that doesn't arise.\" \n\nLt. C'Rash regarded the offer before her, smiled and replied, \"Kiss my furry ass, Sir...\" \n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... SHAKEDOWN"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fan fiction",
        "starfleet",
        "federation",
        "caitians",
        "aliens"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-13-vectors"
}