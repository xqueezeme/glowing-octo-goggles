{
    "title": "Confessions of a Mailgirl Ch. 17",
    "pages": [
        "SLAVE\n\nBarbara's words swirled through my head as I knelt silently in front of her. Two words in particular kept assailing my thoughts again and again: \"my love.\" Had Barbara just professed her love for me? And if she had what did that mean for our future? When she used the word \"partner\" did it mean more than just helping her advance her goals?\n\nThose two words sent me spiraling down a rabbit hole of chaos and confusion. I became so lost in thought about the potential implications of those words that it was only later in thinking back to this meeting that I realized that Barbara had said something else to me during the time I was contemplating their meaning. To this day I don't know what it was, but whatever she said to me hadn't registered and I'd remained silent, failing to respond to her. Shortly after that Barbara removed her hand from my cheek, stared at me for a few seconds, then quietly rose to her feet and returned to her desk.\n\nI looked up at her as she removed a small stack of papers from a drawer and placed it on her desk. My new contract, I thought to myself. At that point I still planned on signing it and a nervous excitement surged through my body as I realized I was actually going to surrender to her and live the life she had just described to me, a life of absolute submission. Then I saw her take out a second stack of papers and place it next to the first. \n\nBarbara looked down on me as I knelt naked before her as I had so many times before. I immediately sensed the change in her mood as she began to speak. \"Danica, I have two contracts here,\" she said to me. \"Before you leave this office today you're going to sign one of them.\" \n\nThe personal, intimate tone that she'd been using before was gone now and had been replaced by her businesslike \"my way or the highway\" attitude. My heart sank as I realized that she was no longer trying to persuade me; she was dictating the terms of my surrender.\n\n\"Two contracts?\" I asked puzzled. \"Why two?\"\n\n\"Because I want to give you the opportunity to sign a fair contract first before we move on to discussing the second one.\"\n\nI took a deep breath to steady myself. \"Okay, so what exactly do you consider fair?\" I asked knowing that the words \"fair\" and \"Mailgirls contract\" seldom belonged within shouting distance of each other in the same sentence.\n\n\"It's the current standard two-year deal. $50,000 bonus up front plus $75,000 per year with another $50,000 completion bonus for a total of $250,000 over the life of the contract. In this case, though, the contract is exclusive to DDE so it couldn't be put up for bid to other companies.\"\n\nThe pay was certainly fair since it was meant to entice beautiful young women into the program, but the devil was always in the details. \"And what about the penalties?\" I asked.\n\n\"Failure to complete the contract means repaying the bonus at 19.9% interest compounded weekly plus an additional $75,000 penalty to help the company defray the costs of having to replace you.\" At that usurious interest rate the amount required to repay it would add up fast. Combined with the additional $75,000 penalty it would require a huge financial hit to get out of it. I knew DDE also included a clause in their contracts that made it extremely difficult to reduce these penalties even through bankruptcy. If a mailgirl saved and invested her original $50,000 bonus it would help mitigate some of that but few ever did. Almost all mailgirls spent their bonus money paying off bills or buying stuff. \n\nThe completion bonus at the end of the contract represented the carrot aspect of the carrot and stick approach used to make it as difficult as possible to leave the program. Each day the interest a mailgirl owed would increase while bringing her one day closer to that completion bonus. As a result, no matter how much a mailgirl might want to quit, hardly anyone ever did. Once signed the only realistic way out of the contract was to reach the end of it.\n\n\"God, Barbara, if you think that contract's fair then I'd hate to see the second one,\" I said to her.\n\n\"Yes you would, Danica. And I want you to know that this contract I'm offering you is probably one of the last of its kind. We only offered these high salaried contracts because we thought it would be difficult to find enough qualified women to do this job if we didn't. That's proven to be false.\"\n\n\"So you're going to cut pay in future contracts?\" I asked already guessing the answer.\n\n\"Of course,\" she replied. \"We have a lot more applicants than job openings so why keep paying exorbitant salaries to unskilled labor just to run around as naked couriers when we don't have to?\"\n\nUnskilled labor? The condescension was practically dripping from her words now. \"What about all this crap you've been pitching to the media about how much we increase the bottom line and help improve productivity?\" I asked.\n\n\"That's all true, Danica. That's no reason, though, not to tweak the contracts to try to find the sweet spot of pay and penalties that will maximize profits while still maintaining a sufficient flow of qualified and motivated mailgirls.\"\n\nI was pretty sure that Barbara's \"sweet spot\" for Mailgirl pay was zero if she could find some way to get away with it. \"So you're going to put mailgirls through all of this humiliating and degrading bullshit and not even pay them much for it?\"\n\nBarbara shrugged. \"It's still more money than most of these girls would otherwise be earning, but it's a simple matter of supply and demand. DDE isn't a charity. We have to turn a profit while keeping our shareholders happy. You're an MBA, Danica, you know that.\" \n\nI did know that, in theory anyway. Yet when this calculus was applied to real people in the real world, especially with a group treated as poorly as mailgirls were, it didn't really seem fair to me.\n\n\"So what's in the second contract?\" I asked.\n\n\"Let's just say it's much worse than this one and leave it at that.\"\n\n\"You're not going to tell me?\"\n\n\"No Danica, I'm not. Not unless you reject this one, and I strongly recommend that you don't.\"\n\n\"Well if I don't want to sign this one then what the hell makes you think I'll sign a much worse one? You think you have the leverage to make me sign it?\" My irritation at her hardball tactics was continuing to grow.\n\n\"I know I do, Danica, but I'd rather it not come to that.\"\n\n\"And this supposed leverage has nothing to do with Anna?\"\n\n\"Nothing.\"\n\nWhatever spell Barbara had woven over me earlier had completely dissipated now and my defenses were on full alert. Was she trying to bluff me or did she really have some way to force me to sign the second one if I rejected the first? And how much worse would the second contract be if that happened? \"How long do I have to decide?\" I asked.\n\nBarbara glanced at her watch. \"I'll give you ten minutes, Danica. After that the first contract will be permanently withdrawn and the only option will be for you to sign the second one.\"\n\nI'd witnessed Barbara using these bare knuckled negotiating tactics many times before but my anger began boiling over now seeing her use them on me just minutes after she'd supposedly professed her love. How naive I'd been to believe that I would ever be anything to her other than a little puppet forced to dance on her stage! \"I've got a third option for you, Barbara. How about you go fuck yourself!\" \n\nA startled look came across her face that she quickly tried to mask. Maybe she realized for the first time that she'd overplayed her hand, but I knew her well enough to know that she wouldn't back down now. I also knew that I couldn't either. For better or worse I'd just gone all in and would have to see all of the cards turned over.\n\nBarbara silently picked up the first contract and dumped it into a wastebasket next to her desk. Then she placed her smartphone on the desk where the contract had been sitting. She punched the face of it several times with her index finger, then sat down in her chair and stared at me with a mixture of sadness and anger. Moments later I heard a recording of my voice coming from the phone. I was momentarily puzzled about what this was until I heard another voice emerge from the speaker. I reeled back in shock as I realized where this was from: it was a recording of one of my secret phone calls with Mariko in that little room in the east wing! \n\nI was rocked by an overwhelming feeling of helplessness and despair as I listened to my voice as I told Mariko about a virtual reality program I'd heard was being secretly developed by DDE. Barbara let the recording run for a couple of minutes before shutting it off. \"I have hours of these conversations, Danica. Most of it is worthless gossip but this is the one that will hang you if it gets out.\"\n\n\"W-where...\"\n\n\"Where did I get this? Where do you think? I got it from Hiromoto.\"\n\nMy shock turned to anger. Hiromoto! That bastard had sold me out! Of course he had, you stupid, stupid girl. How could you have ever have placed your trust in a Japanese gangster? What a foolish, naive little girl you are, Danica!\n\n\"A prototype of a virtual reality headset we were developing was stolen not long after that call,\" Barbara said coldly. \"Guess where it ended up? In Japan. Hiromoto secretly sold it to another company that is using it to jumpstart its own VR development program.\"\n\n\"I didn't steal it, Barbara. I swear I didn't. I would never do that!\"\n\n\"It doesn't matter if you did or didn't, Danica. That call makes you complicit in corporate espionage. Your contract has a confidentiality agreement in it that allows us to sue you to recover damages from disclosing proprietary secrets and in this case that could amount to millions. You could also be subject to criminal prosecution.\"\n\nI was having trouble breathing now as the enormity of the situation hit me. This was the leverage that Barbara held over me and it went far beyond whatever I'd imagined she might have. She owns me now, I thought to myself in despair. She absolutely owns me! \n\n\"You know, I guessed what Hiromoto's game was fairly early on,\" Barbara continued. \"I knew he couldn't be earning enough money from Mailgirls licensing to turn a profit from it and he's not one to do anything unless it helps enrich him. I couldn't figure it out until I realized that mailgirls are the only employees other than upper management who have access to every area of the DDE complex. After that I had a pretty good idea what he was up to. He was using his Mailgirls program to gain inside information and steal technology from his licensees. It didn't take me long after that to find that little room in the east wing.\"\n\nGod, I was so stupid to have ever thought that I could get away with this without Barbara finding out. And now I was trapped! \"How long have you known about this?\" I asked, my voice barely above a whisper.\n\n\"I figured it out about a month or so after expanding our Mailgirls program from the tower to the rest of the complex.\"\n\n\"Wait a minute, you knew about Hiromoto's spying before I started doing it and you let me do it anyway?\"\n\n\"I wasn't after you originally when I allowed the spying to continue,\" Barbara said. \"I wanted to nail someone else. But you went to them on your own and got caught up in it. Once you did I had my leverage on you.\"\n\n\"Who were you trying to nail?\"\n\n\"I'll give you a little hint. Kelly just signed an identical version of this second contract this morning.\"\n\nKelly! I knew there had to be someone else spying for Hiromoto besides me. She's the one who must have stolen the VR prototype. I knew she hated Barbara but I couldn't believe she'd go that far. I was willing to pass information on to Hiromoto but I would never have stolen anything.\n\n\"Why would you have Kelly sign a new contract?\" I asked. \"I thought you wanted her gone.\"\n\n\"I changed my mind,\" Barbara replied with a thin smile. \"I decided I'd rather torture her for awhile by making her do the same job for a lot less money, because money is ultimately all Kelly gives a shit about. Eventually I'll sell her to another company, but she's going to remain a mailgirl for a very long time.\" \n\nEarlier Barbara had been charismatic, persuasive and affectionate, but now she was revealing her ugly, vindictive side. Her mercurial nature had always kept me on edge but her sudden transformation from my lover into my blackmailer in just the space of a few minutes was startling even by her standards. Any desire I had to live out her fantasies was gone now.\n\n\"Does anyone else know about these recordings, Barbara?\" I asked.\n\n\"No one. And they won't if you sign the contract.\"\n\n\"So you'd really allow the company to sue me or throw me in jail if I don't? You know that you'd lose me forever if you did that, Barbara.\"\n\n\"I know, Danica. I don't want to but I will if it comes to that. If you walk out that door I'll turn the recordings over to corporate security and it will be out of my hands after that.\"\n\nI frantically searched my mind for an escape route from this trap but I couldn't see one. The company had me dead to rights if they wanted to pursue legal action against me. \n\n\"How long has Hiromoto known that you knew about his spying?\" I asked.\n\n\"Since last summer. I confronted him about it after the VR prototype was stolen.\" \n\n\"Last summer? But I've been talking to Mariko all that time since then. Did she know that you were on to what was going on?\"\n\n\"Of course,\" Barbara replied. \"Mariko's been a part of every conversation I've ever had with Hiromoto. She acts as the interpreter for us.\"\n\nAnother wave of despair washed over me as I realized that Mariko had also betrayed me! She'd allowed me to continue spying for her without warning me that Barbara already knew about it! There's no one I could trust anymore. No one. I realized at last just how far over my head I'd been in these shark infested waters. I never, ever stood a chance.\n\nBut then something Barbara had said struck me. Why would Hiromoto need an interpreter? I knew from my one experience with the man - watching him whip Mariko in his office - that he was fluent in English. Is it possible that Barbara didn't know this? Was this something that Hiromoto normally kept hidden? And if so, why did he speak English in front of me? Was it because I was just a naked mailgirl and not worthy enough to bother hiding it from?\n\nI'd have to return to these questions later because I still had the matter at hand to deal with. \"So what's in the second contract?\" I asked.\n\n$50,000 per year but with no bonuses. There's also no penalty for quitting.\"\n\nI wasn't quite sure what to make of that. \"I don't get it. Other than the crappy pay and no bonuses it sounds like what I've been asking for. I want to keep working as a mailgirl with no strings attached if I ever decide to walk away. So what's the catch?\"\n\n\"The catch is there's no expiration date on it. The knowledge that I have these recordings should be sufficient motivation to keep you from ever quitting, and you're going to keep making those calls to Mariko so I'll always have fresh evidence against you.\" \n\nBarbara placed her hands and elbows on her desk and leaned toward me, her eyes locked onto mine. \"You're going to remain a mailgirl for as long as I want you to be one, Danica. You're going to be my mailgirl and you're going to live the life I described to you earlier.\"\n\nAnger swept through me again and I had to resist the urge to call her bluff, to just get up and walk out the door. I knew I couldn't do that though. Not yet. I had to do what she asked for now and hope that in time an escape path from this trap would reveal itself. I resolved then and there, though, that if the opportunity for payback ever presented itself I would take it. Some way, somehow, I was going to make Barbara pay for this.\n\nI rose to my feet without asking permission and walked to the desk. \"Give me a pen,\" I said angrily. She wordlessly pulled one out of a drawer and slid it across the desk toward me.\n\nUnlike with my original contract I read this one carefully, page by page, making sure there were no hidden surprises. \"What does this mean, that I'll be on call 24 hours a day?\" I asked after reading a clause in it I'd never seen before.\n\n\"It means you'll be contractually obligated to remain in uniform at all times even when off duty.\"\n\n\"I'm already naked all the time now, Barbara.\"\n\n\"Yes, but up until now it's been voluntary. After this it won't be. You'll have to ask my permission to dress, which I don't plan on giving.\" \n\nI soon found another clause that frightened me. \"So you can sell me any time you want to another company?\" I asked her.\n\n\"That's right.\"\n\n\"Do you plan on it?\"\n\n\"Not unless you give me reason to,\" she responded. The implied threat was obvious. If I became too troublesome or disobedient she would sell me off to someone else.\n\nBarbara appeared tense as she watched me read the contract. When I finally reached the end of it I looked up at her. \"You know Barbara, you had me. I was willing to sign a new contract and be everything you wanted me to be if you'd just kept your god damn mouth shut.\"\n\n\"Danica, I know you're angry now, but in time...\"\n\n\"No Barbara, I won't get over this in time!\" I spit out angrily. \"If you want a slave I'll be your slave but that's it. I won't be your partner and I won't be your lover. If you order me to clean your house or follow you around like a dog I'll do that. If you order me to fuck you, I'll do that, too. And if you want to tie me up and whip me I won't resist. But know this, Barbara, none of that will be consensual. Not any more.\"\n\nI scrawled my name at the bottom of the contract, then, without permission to leave, I turned and began walking toward the door.\n\n\"Danica, wait!\" Barbara called out in a desperate tone I'd never heard in her voice before. I stopped and turned back to her.\n\n\"No!\" I hissed. \"I'm not Danica to you anymore. I'm Nine. I'll never be Danica to you ever again. Ma'am.\" \n\nLOST\n\nI felt the MMU on my arm vibrate indicating that I was back on duty and available as I wandered aimlessly through the ninth floor in a daze, barely able to process what had just happened in Barbara's office. I was required to go kneel on the closest Mailgirls mat until I was called out but at that moment I couldn't bear the thought of having people staring at me so I headed for the stairs instead. It was the only place in the complex where a mailgirl could have any semblance of privacy.\n\nI entered the stairwell and walked down several flights until all of the feelings of hurt, anger, and betrayal churning inside of me flooded to the surface and could no longer be contained. I sat down on a stair in between the sixth and seventh floor and began sobbing uncontrollably. \n\nIt wasn't Hiromoto's cynical double-crossing or Barbara's manipulations that hurt the most; they were scorpions, after all, and it was my own damn fault for allowing myself to get in range of their venomous tails. It wasn't even Mariko's apparent betrayal, although that had shocked me. No, it was a deep disappointment in my own actions and decisions that left me feeling so angry and hurt. I'd made so many mistakes over the past two years that I didn't know if I could even trust myself anymore. \n\nI'm the author of my own misfortune, I told myself. I'm the one who signed that terrible contract without really reading or understanding it. I'm the one who allowed Barbara to systematically strip me of my clothes, my identity, my belongings, and my freedom. I'm the one who opened myself up to being sued or arrested by divulging proprietary information to a foreign company. If I was trapped then it was in a prison of my own construction. Barbara had supplied the blueprints and materials but I'd built it myself, brick by brick.\n\nI felt so lost and alone now, untethered from the real world where even something as simple as picking out an outfit to wear or making plans for my free time had become completely foreign to me. The crazy part is that I'd been ready to voluntarily surrender all of my freedom to Barbara until her actions had snapped me out of whatever spell she had me under. There was no longer any doubt in my mind that I really was a submissive, at least to some degree, but there had to be limits to it, didn't there? And now there were none. Barbara owned me. I was going to be her naked slave for as long as she wanted.",
        "My crying jag was interrupted by a vibration on my arm as my MMU alerted me to a pickup order on the fifth floor of the tower. I thought briefly about ignoring it, the demerits be damned, but I couldn't. I was so conditioned to reacting immediately to every tug of this electronic leash that it was nearly impossible for me to resist it now. Blubbering about my situation wasn't going to change anything anyway so I wiped my eyes, got back on my feet and went to work.\n\nMy delivery pickup on the fifth floor took me to the second floor of the south wing. From there I was summoned to the next floor down which led me across the central courtyard to the fourth floor of the north wing. After two years as a mailgirl my body thrived on movement and getting back to this routine helped me regain my equilibrium. My mind went on autopilot - focused only on my next delivery, my next deadline, the fastest route to my next destination - allowing me to temporarily block out the mess I'd gotten myself into.\n\nThe familiar feelings of arousal also returned as they always did, even after two years of this. I was always conscious that I was a naked woman in a sea of clothed \"norms\" and this never failed to turn me on. I'd discovered that I was every bit as much an exhibitionist as I was a submissive.\n\nAt one point I passed Kelly going in the opposite direction on a set of stairs in the south wing. She glanced up at me as she climbed then lowered her eyes in shame as we passed without speaking. I suppose I should have been mad at her for stealing that VR headset which left me so vulnerable, but I wasn't. She was as trapped as I was now and we were both going need each other over the coming months to get through this. And it's not as if I was an innocent lamb in this mess either. Would Hiromoto have found out about the VR project in the first place if I hadn't told Mariko about it? There was no way of knowing but it didn't really matter. I was as guilty as Kelly in its theft.\n\nMy shift was scheduled to end at six p.m. but a mailgirl never knows for sure when it really ends. The company can always add additional unpaid overtime hours based on accumulated demerits so a mailgirl has to keep working until the status message on her MMU updates to OFF DUTY. Only then is she allowed to retrieve her clothes from security, have the metal collar unlocked and removed, and be allowed to leave the building. Whenever one of DDE's games or movies was in \"crunch time\" to meet a release deadline that always meant long hours for us mailgirls. Things were relatively quiet at DDE right now though so I got the OFF DUTY message right at six o'clock. I had no clothes to retrieve and my collar was permanently attached but at least that meant I could get the hell out of here.\n\nI headed immediately for the Mailgirls locker room hoping to find Anna there. Since Barbara didn't allow me to have any possessions, including a key to the condo, that meant I sometimes had a long wait for Anna to escort me home if she was assigned overtime while I wasn't.\n\nThankfully I found Anna in the showers next to Diana who had survived her \"walk of shame\" and the first day of training. Kelly was also there washing the funk off after a day of running the mail in the nude. She looked as shell-shocked by the events of the day as I felt. I hung my MMU and its strap up on my wall hook and headed straight into the shower area toward Kelly. \"You and me need to talk,\" I said to her.\n\nKelly looked at me guiltily. \"Yeah, I think we do,\" she said. \"Where?\"\n\n\"Hooligans,\" I replied. It was an Irish pub where Kelly and I used to meet every Friday night when we first started working the tower together as DDE's only mailgirls. Kelly, with her auburn hair and mischievous smile, was of Irish descent and loved bitching about Barbara over a pint of Guinness during those sessions. That seemed so long ago now and a much simpler time.\n\n\"They're not going to let you in naked,\" she said. \"Probably not anyway.\"\n\n\"I'll borrow some clothes from Anna.\" As far as I was concerned I was still operating under my original contract which didn't expire until midnight on Friday so there was nothing to prevent me from dressing away from work.\n\nAnna had been listening in to our conversation and spoke up now. \"Nine, I have not given you permission to...\"\n\n\"We're not playing that stupid game anymore, Anna,\" I snapped at her. \"And call me Danica from now on.\"\n\nA look of surprise and then relief washed over her face. \"Oh thank god, Danica,\" she said. \"I'm so sick of it!\"\n\n\"I think you should come, too,\" I said to her. \"You need to know what's going on.\"\n\n\"Okay,\" Anna nodded.\n\n\"Can I come?\" Diana asked. My first inclination was to tell her no. This was going to be a conversation between Kelly, Anna, and me that would involve private information and I'd only just met her. But as I looked at the beautiful actress I felt like we'd made an immediate connection today. For whatever reason I instinctively liked and trusted her.\n\n\"Sure. Why not?\" I replied. \"You might as well find out exactly what you've gotten yourself into. You're not in Kansas anymore, Ellie Bixby.\"\n\nHOOLIGANS\n\nAbout an hour later the four of us met in the parking lot of Hooligans. I'd ridden there with Anna who was driving my old car and, for the first time since my mom's visit months earlier, I wasn't naked. I had on a tan dress composed of a soft stretchy fabric that clung tightly to the curves of my body. It had a plunging U-shaped neckline that showed off quite a bit of cleavage and a hemline that covered my ass and not a whole lot else. Beneath the dress I was bare. On my feet I wore a pair of open-toed heels with leather straps and around my neck was the metal collar with the number \"9\" stamped on a plate in front. That latter accessory was a permanent fixture courtesy of Barbara and was almost impossible to remove without the key.\n\nI'd picked the dress and heels out of Anna's closet since I no longer owned any clothes of my own. It felt weird to be wearing something on my body but I knew I looked hot in this dress. I felt sexier than if I'd been completely nude. Heads turned throughout the pub as we walked through the door. Even fully clothed the four of us drew attention. We found an empty table and sat down.\n\nSince it was a Monday evening the bar was relatively quiet so there was no waitress on duty like there normally would be later in the week. A good looking bartender came around the bar and approached our table. He looked to be in his mid-twenties with dark hair, blue eyes, a fashionably stubbled beard and a body that looked like it had been chiseled in a gym. \"Wow, this my lucky night,\" he smiled. \"What can I do for you gorgeous ladies?\"\n\n\"We're here for drinks and some girl talk,\" I said to him. \"Can you help us out?\"\n\n\"I can help you out with the drinks part of that equation. I'm gonna need to see some ID's though.\" I knew this was going to be a problem for both me and Anna. My identification cards were all locked up in Barbara's safe in the condo and Anna wasn't twenty-one yet. \n\n\"I don't have any ID on me but I'm twenty-seven,\" I said.\n\n\"Hey I believe you, but the last bartender got fired after the bar was fined because he served some underage minors, so I've gotta see ID's. Sorry.\"\n\nI was really in the mood to drink tonight and didn't want to go somewhere else where we'd probably have the same problem anyway. \"Have you ever heard of Mailgirl 9?\" I asked him.\n\n\"From the video game? Sure. I don't really play it but my roomie does.\"\n\n\"I'm Mailgirl 9,\" I said. \"I'm a mailgirl at DDE and that character was based on me.\" I pointed to the number 9 on my metal collar. \"This is my ID,\" I said, then pulled down the front of my dress to reveal my tits to him, \"and these are my ID's.\"\n\nThe bartender rocked his head back in laughter. \"Okay, I think I can accept that.\" Then he looked around the table. \"Are all of you DDE mailgirls?\" Anna, Kelly, and Diana all nodded in the affirmative. A mischievous grin spread across his face. \"Alright I'm gonna need to see all of your ID's.\"\n\n\"Show him your ID's, Anna,\" I said to her. She looked at me and rolled her eyes, then unbuttoned her blouse and flashed her bare tits at the bartender. \n\n\"You know I do have a driver's license I can show you,\" Kelly said to the man when he turned to her. \n\n\"How can I be certain that it's not fake?\" he grinned.\n\nKelly let out an exaggerated sigh although I knew she was amused by the situation. \"Well I can promise you these aren't fake,\" she said as she lifted up her shirt. Diana laughed as she unbuttoned her blouse and gave him an eyeful of her perfect pair when it was her turn.\n\n\"Damn, I'm gonna have to get a job at DDE,\" the bartender said shaking his head. \"What can I get you ladies?\"\n\nA few minutes later we had our drinks but the mood at the table had turned somber again as everyone knew something was going on with me. \"So what happened in Barbara's office today?\" Anna asked.\n\n\"Should we really be talking in front of her?\" Kelly asked eyeing Diana suspiciously. \"Nothing personal but you're a new tango and I don't know you.\"\n\n\"I promise you I won't tell anyone about anything that's said here, but if you if you want me to leave I will,\" Diana said.\n\n\"No,\" I said to her. I told Kelly about the movie, Diana's role in it, and her background.\n\n\"The Bixby Girls? I never watched that show,\" Kelly said after I'd finished. \"But if you trust her, Danica, then guess I will, too. I just don't want to see this stuff I think we're about to discuss end up on TMZ.\"\n\n\"I'm not famous enough any more for TMZ to give a shit about me,\" Diana replied defensively.\n\n\"They might once your pussy shaving videos start showing up online courtesy of the Gangsta geeks,\" Kelly said.\n\n\"I do trust her,\" I told Kelly. \"She can stay.\" \n\nDiana gave me a smile. \"Thanks.\"\n\nI took a sip from my vodka tonic and wondered how much I should tell them. Everything, I decided. I would tell them everything. So I began to speak. After I'd finished the table was quiet. Anna was the first to break the silence.\n\n\"So you've been spying for Hiromoto? Why would you do that?\"\n\n\"Mariko offered me Hiromoto's protection from Barbara if I provided him information and I believed her. It turned out to be total bullshit.\"\n\n\"Did you steal that VR headset?\" Anna asked.\n\n\"No,\" I said shaking my head. \"I would never do that. I just gave them information that I figured Hiromoto might use for insider trading or something.\" I glanced over at Kelly who was staring down into her pint of Guinness. I wasn't going to tell them about my suspicions that Kelly had done it, but it turned out I didn't have to.\n\n\"I stole it,\" Kelly said looking up from her pint. \"And now I'm fucked, Danica. We both are. Barbara can sue the shit out of us and have us locked up if she wants.\" Kelly choked back a sob and brushed a tear from her eye. \"I'm so sorry, Danica, that's the second time I've screwed you over. You must hate me.\"\n\nI did want to hate her, but I couldn't. \"Why did you do it Kelly?\" I asked quietly.\n\n\"Why the hell do I do anything, Danica? For money. Mariko offered me ten thousand bucks to steal it and deliver it to that Hiromoto tech in the east wing.\" \n\n\"So how long were you spying for them before that?\" I asked.\n\n\"Mariko recruited me not long after that meeting in Barbara's office where she assigned us numbers. You know, the one where she basically told me to shut the fuck up and stay out of her sight or else. I got a pickup order from that room in the east wing about a week or so after that. The Hiromoto tech was there and handed me the phone with Mariko on the other end. I hated Barbara so much that she didn't need to twist my arm much.\"\n\n\"So does Barbara have security footage to prove that you took it?\" I asked.\n\nKelly shook her head. \"No, I was careful about that. After I handed it off to the Hiromoto tech I talked to Mariko about it on the phone. Barbara has the recording of that.\" God, they have everything on us from those phone calls with Mariko, I thought to myself. We're so screwed.\n\n\"She told me you signed a new contract today. Is that true?\" I asked her.\n\n\"Yeah. The bitch called me into her office first thing this morning and played the recording. I had no choice. It's for less than half the money I'm making now and with no expiration date. I figure I'm stuck working as a mailgirl now until the statute of limitations runs out on the VR theft.\"\n\n\"How long is that?\" \n\nKelly shrugged. \"Who the hell knows? Quite a few years, I'm sure.\" \n\nBarbara really did have us dead to rights, I thought to myself despondently. I couldn't see any way out of this.\n\n\"I'm afraid I have some bad news for you,\" I said turning to Anna. \"Barbara knows about you and Ben.\"\n\n\"What?\" Anna replied in shock, the color draining from her face. \"How?\"\n\n\"Barbara says she set the whole thing up, supposedly to help you move on from me. She claims Ben doesn't know anything about it and she doesn't care if you two hook up as long you're discreet about it.\"\n\n\"And you believe her?\"\n\n\"God no, Anna. I don't believe anything that comes out of her mouth anymore. I'd stay the hell away from Ben if I were you until your contract is up.\"\n\n\"But that's three months!\" Anna protested. \"And you'll be moving in with Barbara so I won't even have you!\"\n\n\"Yeah, it's three months, Anna. So what? What the hell do you have to complain about? Kelly and I are going to be stuck in this shit show for years!\" That came out much more harshly than I intended but I guess my nerves were frayed from everything that had happened that day. I glanced over at Diana who had a look of wide-eyed horror on her face as she listened to all of this.\n\n\"Can I ask a stupid question?\" Diana said. \"Who the hell are Hiromoto and Mariko?\"\n\nI filled her in on Hiromoto's background and told her the story of the trip Kelly and I had made to his headquarters in Tokyo. I even told her the story about watching him whip Mariko on the 14th floor. This was also the first time that Kelly and Anna had heard it.\n\nDiana's eyes were the size of saucers by the time I finished. \"Jesus, what the hell have I gotten myself into here?\" she said. \"Blackmail, whippings, Japanese gangsters, corporate espionage? What the fuck, Danica? I'm going to call my agent tonight and see if I can get out of this!\"\n\n\"I wouldn't if I were you,\" I told her. \"You really don't want to screw with Barbara. She'll eat you and your agent for breakfast. Just do the movie and then get the hell out.\"\n\n\"You also promised to keep your fucking mouth shut about what you heard here tonight,\" Kelly warned her. \"Did you sign a contract with Barbara?\" Diana nodded. \"Well then you might want to take another look at the fine print in it, Bixby girl. You'll want to make sure you really can leave after the movie.\" A look of panic came across Diana's face as Kelly spoke.\n\nIt was Anna's turn to speak up. \"We've got to do something,\" she said to me. \"You and Kelly should go to the media or the police or something and tell them what's going on!\"\n\n\"The media?\" Kelly snorted derisively. \"Do you remember how much media exposure Linda got when she ran to that feminist group for help? Where's she at now, Anna? Right back here running the mail in her birthday suit. And what the hell are we supposed to tell the police? That me and Danica got caught in corporate espionage and now the company is being mean to us by making us stay mailgirls forever? I'm sure the two of us will look smoking hot in our mugshots.\"\n\n\"We have to do something,\" Anna replied desperately. \"Barbara can't just keep getting away with this!\"\n\n\"From where I sit she probably can keep getting away with it,\" Kelly retorted. \"We're fighting her with wooden spears while she's got nukes.\"\n\n\"We'll figure something out,\" I said without enough conviction to convince even myself of it.\n\nWe all sat in miserable silence for a time until we were interrupted by a voice behind me. \"Are you mailgirls having fun on your girls night out?\" I turned to see the bartender standing there. I guess he figured out the answer by the death glares he got from the four of us. \"Um, yeah, not so much it looks like. I just wanted to check and see if you ladies wanted another round.\" \n\n\"Yeah, I think we do,\" I said.\n\nIt wouldn't be our last round of the night.\n\nWEDNESDAY\n\nThe sun was just coming up over the horizon as Anna and I walked hand in hand together into the DDE employee lobby to begin our mailgirl shift.\n\nTanisha, the security guard working the Mailgirls desk, gave me an odd look as I approached. \"I almost didn't recognize you with your clothes on Nine,\" she smirked. \"Is this a new thing?\"\n\n\"Yes, ma'am,\" I replied although I knew it was likely to be a very temporary \"thing.\" I was wearing a simple cotton dress with sandals which was a departure from the many previous months when I'd walk to work naked a step behind Anna as part of the dominant/submissive roleplaying that Barbara demanded of us. She had used Anna as her surrogate to get me accustomed to my role as a submissive until the day came when she would take over the dominant role herself. That day was nearly at hand now and I was about to become her personal mailgirl/slave. The refusal to play Barbara's game for these final few days was our small act of defiance, as futile as that gesture might be.\n\nYesterday had been miserable for me. I'd shown up to work still feeling the aftereffects of my drinking session at Hooligan's the night before and racked up more demerits in one day than I usually did in a week. At least I wasn't feeling hung over today but I remained an emotional train wreck, still reeling from that fateful meeting in Barbara's office on Monday.\n\nI stripped and handed my clothes and sandals to Tanisha to be locked up and she strapped an MMU to my arm. Anna did the same and also had a metal collar displaying the number \"1\" locked onto her neck. Our nudity, the electronic leashes in the form of the MMU's, and our metal collars were meant to remind us, and everyone else, of our status as company slaves. Once stripped of any sense of dignity and normalcy the two of us headed up the stairs to the Mailgirls locker room to begin our preparations for the day. \n\nDiana and Kelly were already there when we arrived. We exchanged some small talk but there wasn't much beyond that to say to each other. Nothing had really been resolved on Monday night other than the promise that the four of us would keep our eyes and ears open for anything we might be able to use as ammunition against Barbara. \n\nThe remainder of Diana's training had been reassigned to Anna so I'd be working a normal shift today, not that the word \"normal\" could ever really describe mailgirl duties. I'm not sure why Diana had originally been assigned to me on Monday. Most likely it was just another of the head games that Barbara loved to play with me. Maybe she somehow knew that I'd once been a \"Bixby Girls\" fan and wanted show me that she even had the power to strip and humiliate one of the icons of my youth. That might even be why she hired Diana for the role in the first place. \"Who the fuck knows?\" I muttered under my breath. I'd grown tired of trying to unravel the reasons behind Barbara's torturous plots and schemes.\n\nI went through my daily ritual of preparing for my shift in front of the unseen audience on the other side of the mirror, a process that made me feel like a combination of entertainer and zoo animal. My body held no mysteries for anyone employed at DDE but I still felt the inevitable stirrings of arousal knowing I was about to put it on display once again for hundreds of clothed people. I'd never become jaded about my constant public nudity and I was actually grateful for that small gift since it appeared now there would be no end in sight to it.",
        "My morning started out fairly routinely as I made my pickups and deliveries. I was familiar now with every inch of DDE's vast complex just as its inhabitants were familiar with every inch of my body. In my role as a lowly servant girl the best that I could usually hope for these days in an interaction with a norm was that it would be brief and businesslike. More likely, though, it would involve some combination of rudeness, condescension, or undisguised lust as they demonstrated their superiority over me. For my part, I had come to accept this degradation with submissive deference.\n\nAt one point during the morning, while kneeling on a Mailgirls mat between runs, I overheard someone say that a team from Hiromoto Industries had arrived this morning to finalize the extension of their Mailgirls deal with DDE. Anger surged through me as I thought about Mr. Hiromoto's betrayal and Mariko's apparent complicity in it. I couldn't help but wonder if they were here, though, or if I would see or talk to Mariko. I wasn't sure I even wanted to anymore or what good could come of it if I did.\n\nIf there was one thing the drinking session at Hooligan's had done, though, was help diminish my feelings of being adrift and alone. Kelly, Anna, and I had re-established the bond that had once been so strong when we were the only mailgirls working together in the tower. Diana, even though we'd just met, also felt like a part of my \"crew\" now, even managing to win Kelly over by the end of the night. \n\nAnd although Lin's current duties and responsibilities had kept the two of us from talking much lately I knew she was another person I could trust. She once told me that she'd kept working naked even after being promoted to lead programmer of the upcoming \"Mailgirl 9\" game out of solidarity with me, although I was pretty sure it was mostly because she got off on it. Her job didn't require the same rules and restrictions as being a mailgirl so she was still the same filterless chatterbox as always, never shy about letting her bosses and co-workers know her opinions even as they stared at her bare tits. I resolved to try to find a way to talk to her by the end of the week. After that I'd be totally under Barbara's thumb and it would become much more difficult.\n\nAlthough I was friendly with other mailgirls, I now considered Anna, Kelly, Lin, and Diana to be my inner circle, people I could trust in the days to come. The meeting with Barbara had snapped me out of whatever spell I'd been under and I'd finally come to understand that the life that she had planned for me was a path of self destruction. But did this realization happen too late to matter? If there was a way out I just couldn't see it.\n\nMy morning runs continued, up stairs and down, through corridors, past cubicles and offices. DDE's Mailgirls program, after two full years, had become a well-oiled machine and I was just one of its cogs. \n\nThe program had taken over the actual mailroom now so every package or piece of mail coming into or leaving the complex was handled by a mailgirl. There were currently thirty mailgirls serving more than three thousand employees working in the vast complex, not to mention a growing number of tangos who would be auctioned off to other licensees at the end of their six weeks of training.\n\nInformation now flowed far more swiftly and efficiently throughout the complex than it ever had before while the company's productivity, morale, profits, and stock price had never been higher. Employee turnover, among both men and women, was at an all-time low. The presence of beautiful nude women in an otherwise normal business environment now seemed so natural and organic to most DDE employees that they couldn't imagine working somewhere without that. The surprising success of the Mailgirls program at DDE had caught the eye of corporate America and resistance to a concept that had once seemed so outlandish was slowly fading. \n\nThe gap between the \"norms\" and the mailgirls had also never been greater. As Barbara had predicted, both groups had, for the most part, internalized their roles as masters and slaves. While inappropriate touching and sexual contact was still strictly forbidden - and there had been incidents that had cost employees their jobs - there was a growing debate at the highest levels about what the company might be able to legally get away with. Could mailgirls be forced to assume even more sexually provocative positions than they already were? Could a mailgirl be requested to \"voluntarily\" masturbate in front of employees since no contact would take place? Could \"light\" corporal punishment and bondage (spankings, paddlings, handcuffs, leashes) as punishment for disobedience and excessive demerits be written into future contracts? Just how far could they go in debasing and humiliating mailgirls and get away with it? Company lawyers had already begun researching these and other thorny legal questions.\n\nThere was also the question of what to do about mailgirls when they were away from work. While they were on the job virtually every step they took and everything they did - from bathroom breaks to the amount and type of food they were allowed to eat - was carefully monitored and controlled by the company. Away from work, however, mailgirls reverted back to being \"real people.\" They could dress as they pleased, eat and drink too much, say whatever they wanted, and otherwise act as equals to anyone else. More and more executives at the top of DDE were finding this \"problematic\" since it undermined the company's emerging caste system with mailgirls at the bottom as its servant class.\n\nAlthough fraternization between norms and mailgirls away from work was strictly prohibited, in reality it was something that was nearly impossible for DDE to enforce. Most of the company's youthful workforce lived in Wildwood near the DDE complex so it was inevitable that norms and mailgirls would run into each other out there in the real world and interact and converse as normal human beings. There was a growing thought in upper management that being a mailgirl needed to be a 24/7 commitment. They obviously couldn't be forced to work all day every day but their \"dress code\" and manner of addressing their superiors (everyone else) must be strictly enforced at all times. In other words, mailgirls must be required to remain naked and subservient even when off duty. Barbara, of course, fully encouraged this idea. Although there was still quite a bit of debate about how the logistics of this would work, the consensus was moving toward making that happen.\n\nAt 12:15 my MMU vibrated alerting me to my thirty minute lunch break. I took a quick shower to wash the morning sweat and grime off and then went to the employee cafeteria to eat my meal alone on the floor surrounded by norms. This was something that Barbara had ordered long ago because of my disobedience and I wondered if it would continue after becoming her full time pet. I actually hoped that it would if for no other reason than to have some time alone away from her.\n\nAfter lunch I went back to work and was just finishing my third delivery of the afternoon when my MMU buzzed with another summons. I glanced at it to check the location and then glanced again to make sure I had read it right. \n\nI was being summoned to that little room in the east wing. Hiromoto's room.\n\nMARIKO\n\nAs I entered the room I found Mariko there waiting for me along with Hideki, the Hiromoto technician. It was the first time I'd seen her since Tokyo nearly two years earlier. She bowed her head in greeting and smiled at me. \"Hello Danica. I am very pleased to see you again,\" she said in her formal, methodical English.\n\nI didn't really know how to respond so I said nothing. In a way I was glad to see her so I could get some answers but I couldn't help but feel an overwhelming sense of betrayal over the release of our phone conversations to Barbara. Mariko spoke a few words in Japanese to Hideki who then turned and exited the room leaving the two of us alone together. Without speaking she removed her heels and then pulled her black business dress up over her head and placed it on a nearby desk.\n\n\"What are you doing?\" I asked.\n\n\"I sense you are angry with me and I wish that we speak together as equals. We cannot do that if I am dressed and you are not.\" Mariko continued stripping until she was completely nude, then knelt down on the floor before me. She was displaying the same uncommon grace and humility that I'd seen in Tokyo no matter the circumstances. My anger began dissipating as a result of this humble gesture. \n\n\"Please? Will you join me?\" she asked. I knelt on the floor facing her. \"I wish you to speak freely, Danica. I will answer your questions as best I can.\" The scent of her delicate perfume wafted in the air and I remembered my first impression of her in that parking garage in Tokyo. Two years later she was still the most beautiful and intoxicating woman I'd ever met. \n\nThere was still much to be resolved though and I wasn't going to leave this room without getting some answers. \"Mariko, you knew that Barbara had found out about my spying and you let me keep doing it anyway.\"\n\n\"Yes.\"\n\n\"Why?\"\n\n\"What would you have done had I warned you, Danica?\"\n\n\"I would have stopped!\" I said.\n\n\"That is why I did not tell you,\" Mariko explained. \"You would have lost Mr. Hiromoto's protection if you had done so.\"\n\n\"What protection? He gave those damn recordings to Barbara. She used them to blackmail me into signing a terrible contract and now I'm stuck as her personal slave!\"\n\nA look of concern came over Mariko's face. \"Please tell me everything that has happened since we last spoke,\" she said. I told her the whole story of my meeting with Barbara on Monday and her plan to strip me of what little freedom I had left. \n\nMariko remained silent for a few moments after I'd finished as if contemplating her next words. \"Danica, please remember that when you first contacted me from this room and asked for help I counseled you to leave Barbara and the company immediately. You chose not to take my advice. I did not wish you to get involved with Mr. Hiromoto in this.\"\n\n\"I know, but that would've wrecked me financially. You're the one who told me I would have Hiromoto's protection if I gave him information. Was that a lie, Mariko?\n\n\"No.\"\n\n\"Then why the hell did he screw me over?\"\n\n\"He did not,\" Mariko replied. \"Mr. Hiromoto gave those recordings to Barbara because he considered them inconsequential.\"\n\n\"Inconsequential? They're evidence that I committed a crime! And he made it worse by having Kelly steal the VR headset.\"\n\n\"They are inconsequential because Mr. Hiromoto believes that Barbara would never allow the company to hear them. That would risk the future of her Mailgirls program and she cannot allow that to happen.\" This had occurred to me as well but I couldn't risk calling Barbara's bluff because the consequences if I was wrong were so high. Those tapes were anything but inconsequential to me.\n\n\"I would never have gotten involved in this if I'd known his plan was to steal technology from DDE,\" I said.\n\n\"What did you believe Mr. Hiromoto was going to do with the information you provided?\" Mariko asked.\n\n\"I don't know. Insider trading or something.\"\n\n\"And is that not also illegal?\"\n\n\"Of course it is. Listen, Mariko, I didn't have any illusions that Hiromoto was going to use the stuff I told him for altruistic reasons. Believe me, I've had a guilty conscience about this for a long time. But I never would have agreed to steal proprietary technology for him.\"\n\n\"That is why you were not asked to do it. Your friend Kelly had no such reservations.\"\n\n\"Did Hiromoto know about DDE's VIrtual Reality program before I told you about it?\" I asked her.\n\n\"No.\"\n\n\"So how did you guys know this prototype even existed because I didn't tell you that. I didn't even know about it myself.\"\n\nMariko was silent for a minute as if wrestling with the decision about how much to tell me. She finally spoke. \"Hideki was asked to look for information involving this program and he discovered the existence of this prototype and where it was kept.\"\n\nHideki! Suddenly I understood the full brilliance of Hiromoto's corporate spying scheme. Mailgirls Tracking Units, also known as MTU's, were located throughout the complex to track mailgirls' movements via the MMU's strapped to their arms. The contract with Hiromoto allowed only his technicians to service these units, allegedly for proprietary reasons. These MTU's were all over the place hanging from ceilings and walls which allowed Hiromoto's techs access to virtually every room in the DDE complex. So Hiromoto not only had mailgirls to supply information but also had his own men on the ground here to help verify this information and coordinate any plans of action. Hiromoto probably used this information for insider trading, technology theft, and maybe even to blackmail executives. \n\n\"God, Mariko, this whole damn Mailgirls thing is just a scam by Hiromoto to rip off his licensees, isn't it?\" \n\nMariko lowered her eyes to the floor. \"Our Mailgirls program does provide real benefits to businesses but I am afraid Mr. Hiromoto has also used it for his own purposes. I wish that were not so.\"\n\n\"Why do you do it then?\" I asked. \"Why are you helping him?\"\n\n\"I do it to protect the girls, Danica. I fear that in many places mailgirls would soon become sex slaves if I did not. Mr. Hiromoto uses his power to prevent this, but only as long as I am providing information that may help enrich him.\"\n\nSo mailgirls like me are nothing more than bargaining chips to get Mariko to do his bidding for him, I thought to myself. What a sick bastard. We were many things to many people, but real, living, breathing human beings seemed to be far down the list.\n\nThere was something else I was curious about. \"What about Linda?\" I asked. \"The girl who quit and went to that feminist group to sue DDE. Did Hiromoto buy her off to get the lawsuit dropped?\"\n\n\"Linda belonged to Mr. Hiromoto all along,\" Mariko replied.\n\n\"What do you mean?\"\n\n\"Mr. Hiromoto knew there would be many challenges to his Mailgirls program in America so he believed it would be useful to discredit his opponents as quickly as possible. He used his contacts in this country to find an actress who would play a role for him in doing this.\"\n\n\"So Linda is just an actress who was hired to discredit the UAW?\"\n\n\"Yes,\" Mariko replied. \n\nThe brilliance of this was stunning. Knowing that there would be legal challenges to the Mailgirls program Hiromoto had planted Linda into the UAW only to have her recant at a time of his choosing and then scorch the feminist organization and its famous attorney on her way out. It had thrown the opposition to the Mailgirls program into disarray. As much as I hated to, I had to admit a little grudging respect for the man. He was playing a very long game and was clearly a master of it.\n\n\"Did Barbara know about any of this?\" I asked.\n\n\"No. Mr. Hiromoto did not need or want Barbara's assistance in this.\"\n\nIt was at this point I think I finally realized the full depth of the mess I was in. I was caught between a crazy woman who wanted to turn me into her slave and a cunning, ruthless Yakuza who was using me for his own twisted purposes. I closed my eyes and wished I could just disappear someplace where no one knew me. Somewhere I could just start all over again. \n\n\"I should have listened to you, Mariko,\" I said quietly. \"I should have just gotten into my car and driven as far away from this place as I could before it was too late.\"\n\n\"I understand why you did not, Danica,\" Mariko said. \"I must admit that protecting my girls is not the only reason I have not left Mr. Hiromoto. The life of a mailgirl has a certain allure to women like us. It is difficult for me to imagine returning now to a normal life. It is why I still work mailgirls shifts when I am able though I am not required to do so.\"\n\n\"I suppose that's true,\" I replied. \"I know there's a part of me who still wants to surrender to Barbara even after everything she's done.\"\n\n\"Do you remember Aiko?\" Mariko asked.\n\n\"Yes, of course.\" Aiko was the mailgirl that Kelly and I had interviewed in Mariko's office in Tokyo. She was the one who Kelly had followed around the next day on her rounds.\n\n\"After Aiko completed her contract I placed her into a good job in the accounting department as she requested. It was the field she had been trained in at the university. Six months later she came to me and begged to be allowed to return to being a mailgirl.\"\n\n\"She did? Why?\"\n\n\"She said she could not bear the thought of another day chained to a desk and encumbered by clothing. A normal job had become slavery to her while being a mailgirl was freedom.\"\n\n\"And you let her come back?\"\n\n\"Yes. She has been a loyal worker and may remain a mailgirl as long as she desires.\"\n\nI understood Aiko's feelings. Even now I still felt the strong gravitational pull of this crazy life. If I ever did manage to gain my freedom I wondered if someday I might also find myself begging Barbara to return to it. But there was really no choice for me anymore. I would rather have the option of begging to return to this life than being trapped in it with no way out.\n\n\"Mariko, I have to get out,\" I said to her. \"If I don't do it now I may never be able to.\"\n\n\"I understand,\" Mariko responded. \"Mr. Hiromoto is not a good man but he has not lasted this long by betraying those who fulfill their agreements with him. You have done as asked so if you wish to leave he will assist you.\"\n\nI looked at her, stunned. For the first time in days I began to feel hope again. \"Really? He will? Is Hiromoto in town with you?\"\n\n\"No,\" she replied shaking her head. \"He is too old now for long journeys. I am here only with a company lawyer to finalize the agreement with DDE.\"\n\n\"So when can he pull me out?\"\n\n\"Any time after the new contract with DDE is signed. Not before.\"\n\n\"When will that happen?\"\n\n\"Everything should be completed by Friday. Mr. Hiromoto is only willing to do this once the new contract is signed with DDE.\"\n\n\"What about Kelly?\" I asked. \"Can he get her out, too?\"\n\n\"Yes.\"\n\n\"And there are others...\"\n\n\"No,\" Mariko interrupted. \"You and Kelly have been useful to Mr. Hiromoto. The others have not. He will not help them. Only the two of you.\"\n\n\"How is he going to do it?\" I asked.\n\nMariko smiled. \"I cannot tell you that. I can only say that Barbara thinks of herself as a master of the game, but she has not been on the playing field with Mr. Hiromoto before.\"\n\n\"What does that mean?\"\n\n\"Mr. Hiromoto believes that once the new contract is signed with DDE his Mailgirls program here can safely continue without Barbara. She is not as indispensable as she believes she is.\"\n\n\"So what will happen to her? He won't hurt her will he?\"\n\n\"No, he will not physically harm her. But you must understand that Mr. Hiromoto intends to ruthlessly destroy her ego and her hubris.\"\n\n\"Really? Why?\" This was suddenly starting to sound very personal between Hiromoto and Barbara. It occurred to me that he had very little interest in me, it was Barbara he was after.\n\n\"Barbara bypassed me and demanded to deal only with Mr. Hiromoto in negotiating the original contract. She presumed to be be his equal and that was a foolish mistake.\" \n\nHearing this reminded me of the time I had bypassed the chain of command to bring Lin to Barbara and had received a whipping as punishment. Had Barbara made the same mistake with Hiromoto? Was she about to receive her own figurative whipping for her arrogance?\n\nI also thought about something else. \"Barbara said you were there during the negotiations as his interpreter. Is that true?\"\n\n\"Yes.\"\n\n\"So Barbara doesn't know he speaks English?\"\n\n\"No,\" Mariko replied. \"Very few people do. He keeps it secret because he believes it gives him an advantage when dealing with English speakers. He only spoke it to you because he considered you inconsequential.\" There was that word again. Inconsequential.",
        "The more I heard about Hiromoto the more it reaffirmed my original opinion after watching him whip Mariko: the man is a misogynistic asshole. It was obvious that his original intent for his Mailgirls program was simply to humiliate and debase women for his own pleasure. It was probably only later that he figured out he could also use mailgirls as spies.\n\nI was almost starting to feel sorry for Barbara after hearing all of this. \"Mariko, I don't know that I actually want to see Hiromoto destroy Barbara or anything like that. Is there another way?\"\n\nMariko shook her head. \"That is the only way out. You may delay that day if you desire, Danica. You can keep playing the game as long as you wish knowing that you can get out whenever you choose.\"\n\nI thought about this and once again I felt the bizarre allure of this life tightening around my will like an invisible bond. I couldn't deny that playing the role of Barbara's slave for awhile still held a perverse appeal to me. If I knew I had a way out why not keep playing her game for awhile? Now that she was taking it to an even deeper level than ever before it would be exciting to experience that for at least a little while, wouldn't it?\n\nFortunately I was able to put a halt to these thoughts before I got sucked too deeply back into Barbara's destructive vortex. No, Danica, you can't do this again, I told myself. Every time you've been given a set of options you've always chosen the path that leads deeper into Barbara's trap. Stop it! You can't trust Hiromoto to keep up his bargain forever. And he is a very old man so what happens if he dies or has a stroke? \n\nIt had taken me two years but I'd finally learned my lesson. I knew what I had to do.\n\n\"I want out now, Mariko,\" I said to her. \"Burn Barbara to the ground if you have to.\"\n\nFRIDAY\n\nI glanced nervously at the clock on the wall as I stood naked in Tom Condell's office waiting to be released after delivering a packet to him. It was 4:27 pm and I hadn't heard anything from Mariko since our meeting on Wednesday. I'd thought everything would be resolved by today but now I realized she'd only said that Hiromoto would get me out after DDE had signed the new contract. I'd assumed that would happen immediately but now I knew it could have meant tomorrow or next week or next month or next year. Or had something gone wrong with the negotiations? What would happen if they fell through?\n\n\"I bet you think you're hot shit don't you?\" I glanced up and saw Condell's eyes roaming up and down my body.\n\n\"Sir?\"\n\n\"Mailgirl Fucking Nine. Everyone knows who you are and you're going to be the star of your own game so you think you're hot shit, don't you?\"\n\n\"No sir.\" Condell was a greasy asshole and I always hated coming to his office.\n\n\"You are a fine piece of ass, I'll give you that,\" Condell sneered. \"But that's all you are. They can make all the games and movies they want about mailgirls but you'll still just be naked eye candy for us real employees.\"\n\n\"Yes sir,\" I replied, my head bowed slightly and my gaze submissively directed toward the floor. There was a time when these types of condescending insults would have upset me but they no longer did. It's not just that I'd gotten used to them, but I'd spent two years attempting to emulate Mariko's preternatural grace and humility. Although I'd made great strides, seeing her the other day reminded me of how far I had yet to go. I would not allow the likes of Condell to make me lose my composure, I told myself. I wouldn't give him that satisfaction.\n\n\"Stupid bitch,\" Condell muttered after failing to get a reaction from me. \"I'm done with you. Get out.\"\n\n\"Thank you sir.\"\n\nI exited Condell's office into a sea of cubicles. I was surrounded by fully clothed norms all doing whatever it was that they did in that little world they inhabited. I'd once been one of them, sitting in my cubicle, striving to one day have my own office in the tower. It all seemed so banal now, that life. Whatever came next, assuming Hiromoto kept his promise, I knew I didn't want to return to it. Not in that way anyway, slaving to move from one cage to a larger, more gilded cage. I wanted now to live on the edges, not in the grey world in between. I longed to either surrender myself and become a slave to a powerful person or to become that powerful person myself. Barbara called these desires my dual natures and I wrestled with both of them, allowing neither to take complete control. So far.\n\nSince I had no current instructions I found the Mailgirls mat and knelt on it. It was located in a spot to provide maximum exposure and I felt the eyes poring over my body. Even now, after all this time, that still gave me a thrill. Even now, I felt myself becoming wet and longed to reach between my legs and give them all a real show.\n\nI thought about Barbara and Hiromoto. As corrupt and manipulative as they were I couldn't help but feel some degree of admiration for their ability to move through this world as predators rather than prey. What would it be like, I wondered, to be the hunter rather than the hunted? To swim through dangerous waters as the shark rather than the meal? Would it be possible to live such a life without without being corrupt and manipulative or were those essential qualities required to survive amongst other predators? \n\nMariko had assured me that Hiromoto would make quick work of Barbara when the time came, but I wasn't so sure of it. She was not one to be underestimated even against someone like Hiromoto. Perhaps she was anticipating what was coming her way and had a counter for it. In a way I hoped she did, even if that wasn't in my best interests. Despite everything she had done I still had feelings for her that I didn't have for Hiromoto. When those two alphas entered the cage together I wasn't entirely sure which one I wanted to emerge from it.\n\nMy thoughts were interrupted by the vibration of the MMU on my arm and my heart raced when I saw the destination. I leapt to my feet and moved quickly down corridors, through doorways, and up stairs until I reached it. I opened the door and entered Conference Room 1A on the tenth floor of the tower. I immediately saw Kelly there kneeling naked on the floor. She glanced up at me nervously, unsure about what was going on. I hadn't told her or anyone else about my meeting with Mariko. She had warned me not to.\n\nSeated around the table were Dan Evans, the CEO of DumpsterDawg Enterprises, several company lawyers, Mariko, and a Japanese man I assumed was the Hiromoto lawyer. And, of course, Barbara was there.\n\nShe glanced at me and gestured to the floor with her head. \"Kneel,\" she commanded. I took my place on the floor next to Kelly.\n\nMariko smiled at me and began to speak. \"I have requested that the two of you, as the original mailgirls, be present at the signing of the new contract between our two companies. Mr. Evans has graciously accepted this request.\"\n\n\"Thank you, sir. Thank you, ma'am.\" I reached over and took hold of Kelly's hand.\n\nThe pieces were all in place. The endgame was about to begin. "
    ],
    "authorname": "Seahawk76",
    "tags": [
        "bdsm",
        "slavery",
        "public nudity",
        "exhibitionism",
        "mailgirls",
        "lesbian",
        "naked at work"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/confessions-of-a-mailgirl-ch-17"
}