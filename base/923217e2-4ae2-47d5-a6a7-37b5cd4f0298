{
    "title": "Fantasy Sex Cruise 12",
    "pages": [
        "This is the twelfth episode in a multi-part story. It is the fifth chapter of Linda's cruise with Bradley but you should read Chapter 01 first, at least to where Linda gets off the shuttle, so you can see how these cruises started and get introduced to the characters then read Chapter 08 for the beginning of Linda's cruise. I hope you enjoy the journey. \n\n***** \n\n* THURSDAY \n\nNormally I don't sleep that well with two people in bed with me. The last time I remember doing it, my youngest daughter was nine years old and was terrified by a really bad thunderstorm. She insisted on sleeping in the bed with Ed and me. So I was very pleasantly surprised when I awoke feeling very rested and refreshed and found myself between Bradley and Gina. I had slept so soundly that I had to think for a moment how this arrangement had happened. Then I remembered that Gina and I had fallen in love and suddenly everything seemed perfect. \n\nI turned my head toward Gina and saw her lying on her back with only the sheet covering her up to her breasts. I watched the gorgeous mounds rise and fall as she breathed and began to get warm. I rarely woke up with the female equivalent of a boner but looking at her tits made me realize I was horny. Then I remembered the pill we had all taken. Damn this stuff was good; it was still in full effect and showed no signs of diminishing anytime soon. OK by me. \n\nI turned my body so I was facing her and looked at her. I couldn't remember being this happy. I felt humbled and privileged to be in her presence. Tears welled up in my eyes, as I wondered why everybody couldn't wake up each day and feel so wonderful. I moved my head slowly toward her right breast. My lips touched the side of the soft flesh and gently kissed it. She didn't stir so I allowed my mouth to sneak closer to her nipple. When I got close I stuck my tongue out and gave it a lick. Her arm moved a little and her head turned slightly. I continued my advance on the pink protuberance and enclosed it in my lips and lightly sucked on it. This caused her to moan softly. \n\nI moved my hand onto her stomach and then slid it down toward her pussy. I stopped when I felt the little heart-shaped tuft of closely cropped pubic hair and rubbed my fingers over it. I heard her sweet sleepy voice say, \"Linda will you promise you'll wake me up like this for the rest of the trip?\" \n\n\"Only if you'll do the same for me if you wake up before I do.\" \n\n\"Now I know for sure this is love. If I still feel this much in love the morning after, it has to be real. Ohhhh God Linda, suck my breast. Put your hand on my pussy and make me wet.\" \n\n\"Funny, that's what I was thinking too.\" I sucked her nipple into my mouth and went to work on it with my tongue. She spread her legs as my hand moved over the silky little hairs above her pussy. She was already hot and moist when my middle finger slid between her labia. My fingertip found her hole and slipped inside to search for her spot and began to rub it. Her left hand moved down and her finger rubbed her clit in little circles. \"Yesss my love. Let's do it together.\" \n\nI loved how her fingers felt playing with her bulbous clit beneath the heel of my hand while my fingers lay on her puffy outer lips and my middle finger tickled her vagina. Her nipple expanded in my mouth under the influence of my sucking and I closed my teeth around it to gently nibble it. \n\n\"Ohhhh Linda you know how to love me so good. I'm going to cum for you. Just a little more and... UNNNNHHHHH... OHHH GODDD LINDA YES, YES I'M CUMMING FOR YOU NOW! \n\nI felt her pussy squeeze my finger and she pressed her breast against my mouth as her climax overcame her. I gently bit her nipple and she moaned loudly enough to wake Bradley. Her legs shook and her fingers continued to rub her clit to prolong her orgasm. \n\nWhen she had calmed down enough to stop moaning, Bradley said, \"Is this a private party or would you two like some male attention?\" \n\nBefore I could answer, Gina said, \"I'd love some male attention. Why don't you get behind me and fuck me while I get my head between Linda's legs.\" \n\nShe pushed me onto my back and crawled between my legs to get on her knees with her pretty ass in the air. I watched Bradley get up and walk to the end of the bed and stand behind her. She was at the perfect height for him to fuck her standing up. Her mouth found my slit a few seconds before Bradley started rubbing the head of his cock up and down her wet slit. \"Oooohhh Gina, you are ready to get fucked aren't you?\" She didn't answer because her mouth was full of my twat and because it was all to obvious just how ready she was. In a few seconds I both heard her and felt her moan when Bradley began to insert his thick hard cock into her hot vagina. \n\nI knew how distracting it could be to feel Bradley's cock stretching your vagina to accommodate his thickness. It was thrilling to feel his mushroom shaped head creeping further and further into you, wondering if it would ever reach its full length and if you could take it when it did. Gina did not let this deter her from what she was doing to me. Her wide open mouth covered my slit and her tongue lapped the length of my gash from my hole to my clit. My pussy was getting hotter and wetter with each lick. \n\nShe paused briefly to emit a muffled grunting moan and I knew that Bradley's cock had finished its journey and was completely buried in her distended cunt. I could almost feel her vagina pulsing around the long brown shaft since I knew what my own pussy did when he was fully inside me. As if in sympathy, my cunt began to pulse and it felt like it was being stretched as I felt my hole open for Gina's tongue. My legs spread wider and I raised my hips up to implore her to lick and suck me as much as she could. \n\nHer hands moved under my hips to spread across my ass cheeks. She pulled me to her so she could comply with my silent entreaty. I could already feel the beginnings of an orgasm arising deep within me. She sucked my swollen clit the same way she wanted her own magnificent clit to be sucked. Then moved her tongue down and inserted it into me to extract the hot nectar flowing from me. I was humping her mouth now beseeching her for more. I couldn't get enough of her oral loving and she couldn't give me enough. We were in a spiral that was taking each of us closer and closer to an epic climax. \n\nWhen I felt her face push against my wet crotch I knew Bradley had begun to fuck her. We quickly adapted to his rhythm; when he pushed deep inside her I pushed against her mouth. She didn't have to move, we were fucking her at both ends now. This excited me even more. She licked my clit with her flattened tongue each time she was pushed forward by Bradley's thrusts. \n\nAs Bradley increased the speed my pussy went wilder with desire, heat and juice. I had no idea how long this would last since my orgasms seemed to ambush me when I least expected it but I just went along for the ride. I was lost in lust; nothing existed except the inescapable rush toward my orgasm. I was helpless to assist it or prevent it. My body made the decision for me. My climax wrenched my guts as my vagina began to spasm. I came all over Gina's face as my hot juice seeped out of me. \n\nMy orgasm incited her own. I could feel her tensing her muscles as her vagina pulsed around Bradley's hard cock. I felt Bradley slam against her ass hard and knew he was now spewing his thick morning load of hot cum deep inside her, grunting with each ejaculation. Gina had to pull her mouth off my slit to lay her forehead on my mound while she gasped for breath and panted, her whole body still trembling in orgasm. \n\nI was stupefied by the intensity of my orgasm and mystified that I wasn't exhausted by it but I still felt great and energetic enough to keep going. I looked down at Gina who still had her forehead on my mound. Her trembling was subsiding until Bradley began withdrawing his half hard cock from her gooey vagina. As her distended pink channel began to return to its natural state she seemed to get a boost and she moaned as an aftershock rippled through her insides. She raised her head to look at me and I saw how beautiful her orgasm looked on her already gorgeous face. \n\n\"Gina come up here and lay on top of me and let me hold you.\" \n\nShe slowly crawled up between my still widespread legs and lay on me. Her lips pressed against mine and I tasted my pussy on her mouth. That kiss was all that needed to be said about what we had just shared. I wrapped my arms and legs around her and held her tight as we continued kissing. Bradley said he was heading for the bathroom. \n\n\"Linda are we ever going to stop wanting to fuck?\" \n\n\"I sure hope not. I've never experienced orgasms like these. Not only are they more powerful but each one makes you want to have another one. This stuff is incredible. You're incredible. Nobody has ever made my pussy feel like you just did. I thought you were going to suck my uterus out; and I would have let you! I 've never been so wet in my life not even when I was your age. If that's a side effect of this pill it will boost sales by a billion.\" \n\n\"I'm running like Niagara falls myself. Feeling my pussy this wet just turns me on more. Feeling your pussy this wet makes me want to put my face in it again.\" \n\n\"God Gina this feels so good to lie here and love you and be so turned on. This is better than my honeymoon. You better tell your company to put a birth control agent in this pill or ninety percent of the girls over thirteen are going to be pregnant soon after they get their hands on this stuff. I guess we really should go take a bath and get something to eat besides each other's pussy. I want to give you another enema so I can bring you back here and play with your ass.\" \n\n\"Oh yes Linda that sounds exciting and fun. Come on, let's get out of here before I start in on you again.\" \n\nWhen we got to the bathroom Bradley was just getting out of the shower. \"Well I see you two managed to tear yourself away from the bed.\" \n\n\"It wasn't easy Bradley but we need to clean up and get something to eat. We may not feel tired but we need to keep our strength up.\" \n\n\"Do you want me to order breakfast in or do you want to go to the dining room?\" \n\n\"If we stay here we'll end up back in bed and probably miss breakfast by the time it arrives so let's go out.\" \n\n\"OK, I'll wait for you two out on the veranda.\" \n\nWe gave each other an enema then got in the tub. We couldn't keep our hands off each other. We took turns washing each other's body then sat in a scissors position so we could press our pussies together and rub our slippery slits up and down. Before we finished we used our fingers to have another climax. We had become insatiable. \n\nWhen we got out of the bathroom Bradley was waiting on us. Gina said she had to go back to her cabin so she could change clothes. I told her to meet us in the dining room. Just as she was leaving, Mark and Ashley showed up. We told them we were going for breakfast and they said they'd join us. \n\n\"So Ashley, what have you two been up to this morning?\" \n\n\"Mark took another Viagra early this morning and woke me up when it started working. We've been fucking ever since. I can't seem to get enough. I've cum four times this morning and I want to start again. What about you? Are you still horny?\" \n\n\"Like a sailor on leave. My pussy has leaked so much juice; I'm surprised I'm not dehydrated. This stuff is incredible.\" \n\n\"Are you sure you want to go out for breakfast? I could stay right here and keep playing.\" \n\n\"We'll be docking in St. Maarten soon and we should go ashore because it's our last port of call. We'll be on the ship for two days going back to Ft. Lauderdale and we can stay in bed the whole time as far as I'm concerned. We took these pills late yesterday so they won't wear off until late Saturday. By then I'll have worn my pussy out so it won't make any difference.\" \n\nWhen we arrived at the dining room Gina was waiting outside the doors for us. We headed inside to our usual table. The food on the ship had been very good and I could see why this cruise line had a reputation for fine dining. I ordered something I had been scrupulously avoiding during the last six months so I could lose weight and exercise to get in shape for this cruise but I was hungry this morning so I decided on the Eggs Benedict; one of my favorite splurges for brunch on the rare occasion. It was accompanied by fresh pineapple juice and a dark roast coffee made in a French press just for me. It was truly a gourmet breakfast. \n\nWe hung around in the dining room until the ship was starting to dock then headed back to the room to get ready to go ashore. There were a lot of things to do on shore but the island was most well known for beautiful beaches and excellent duty free shopping. There was a water taxi that took you to downtown Phillipsburg where the shopping was so we hopped in for the short scenic ride to town. \n\nWe had walked along the main street stopping in various shops when Mark and Bradley wanted to go into an electronics store. We girls decided on a perfume store next door. Gina and Ashley went inside and I told them I'd be in shortly after I took some pictures of the area. \n\nI was looking through the viewfinder of the camera when I suddenly heard a dog bark near me and when I lowered the camera to look around I saw a beautiful German Shepherd sitting next to me wagging his tale and looking up at me. \n\n\"Well hello puppy, what are you doing here?\" \n\nA voice behind me answered, \"He's suppose to be taking care of me and he knows better than to do this.\" \n\nI turned and saw a very pretty blonde girl coming slowly toward me. She looked familiar and then I recognized her. She was the singer in the lounge we had seen the first night of the cruise. \n\n\"Please excuse his deplorable behavior, he's never done anything like this before. I'm very sorry he bothered you.\" \n\n\"There is no need to apologize. He hasn't bothered me at all. In fact it may be me that needs to apologize. I think I may have unintentionally confused him.\" \n\n\"What did you do to him?\" \n\n\"Ummmhhh, it's kind of personal, I've been taking medication to stimulate my libido and it has worked much better than I anticipated. I have a feeling I'm giving off a sexual scent that would be noticeable to a dog and probably distracting.\" \n\n\"You could be right, I've thought for some time now I needed to get him a girlfriend. That sounds like a very effective medication if you can fool a dog into thinking your in heat. I could use some of that.\" \n\n\"Why would a beautiful young woman like you need something to increase her sex drive? I'd think you would need to have men taking numbers to date you.\" \n\n\"Honestly, I think it's the blindness that puts them off.\" \n\n\"Oh darling no! If a man can't see your beauty and realize how much of a woman you are then he's the one who's blind.\" \n\n\"Tell that to my last boyfriend.\" \n\n\"There's a bench a few steps from here under the awning of one of the shops. Would you like to sit down for a minute and talk to me? My name's Linda and I really enjoyed your singing the other night.\" \n\n\"So you're on the cruise too. Thanks for the compliment. I'm not sure many people were as favorably impressed as you were though.\" \n\nI picked up her dog's leash and handed it back to her and escorted her over to the bench so we could get out of the sun. We sat down and her dog sat on the ground at her feet. \n\n\"Now what's you name?\" \n\n\"Oh, sorry, it's Barbara. It's nice to meet you Linda.\" \n\n\"It's nice to meet you and I'm sorry if I did anything to upset your dog. What's his name?\" \n\n\"His name is Jesus.\" \n\n\"Oh how wonderful. That's a perfect name for him.\" \n\n\"Most people think it's sacrilegious. They just don't get it. When I was young my mother told me that Jesus shows us unconditional love and looks out for us and takes care of us when we are lost. So when I lost my sight and needed a dog I named him Jesus because he loves me and he takes care of me. I meant it as a tribute to Jesus, not to make a joke.\" \n\n\"It is a tribute and I'm sure he would be pleased. You're a very intelligent young woman and you have a beautiful voice. Why do you think the audience on the ship didn't like your singing?\" \n\n\"I've developed my other senses because I can't see and I can tell when an audience is receptive to my music. The people in that lounge definitely were lukewarm to me at best.\" \n\n\"As a member of that audience who was favorably impressed could I tell you what I think may have caused the others to be less enthusiastic?\" \n\n\"Please, I have one more chance Saturday night to impress the entertainment director of the ship. I'm on this trip to do an audition for a more permanent job as an entertainer on the cruises. I'd really like to get this gig because I need the money and I'm tired of working in the places I've been playing for the last year.\" \n\n\"Barbara I'm fifty years old and so are most of the people on this ship and that's going to be true for many of the passengers on future cruises. The reason they're on a cruise is to have a good time and hear music they like and recognize. Your music was mostly sad love songs. They were very well done but this audience isn't in the mood to hear them.\" \n\n\"Oh My God Linda you're right. I've been singing the blues for the last six months because my boyfriend dumped me and it's become my way of dealing with it by singing about my broken heart.\" \n\n\"It shows Barbara and that's not what cruisers want to see or hear about while they're out to have fun.\" \n\n\"It's just that I've had my heart broken before and I'm wondering how many times my heart has to break.\" \n\n\"Until it opens.\" \n\n\"What? What do you mean?\" \n\n\"I mean you're letting your past relationships and your blindness keep you from loving completely and that's what is making your lovers feel uneasy.\" \n\n\"And you know this how? You just met me. Who are you to give advice about love?\" \n\n\"It's more of an observation than advice but anyway, I do know something about love. I've been in love with my husband for twenty-seven years so I've got some experience with loving somebody. In addition, in the four days we've been on this cruise I've fallen in love with three other people. Each of them is teaching me new things about love but they all have one thing in common. The love we feel is total. If it's not then it isn't really love.\" \n\n\"You've fallen in love with three other people on this cruise? How does your husband feel about that?\" \n\n\"I intend to ask him the next time I see him. He's not on this cruise with me.\" \n\n\"You came on a cruise by yourself?\" \n\n\"No, I came with my fantasy lover to reinvigorate my sex life. That's what I took the medication for that Jesus reacted to.\" \n\n\"Is your fantasy lover one of the people you've fallen in love with?\" \n\n\"No, he's still just my fantasy lover and he's doing a wonderful job of it. The people I've fallen in love with are a married couple in the suite next to ours and a beautiful young woman about your age that is traveling alone on this cruise.\" \n\n\"You've fallen in love with two women? Are you a lesbian?\" \n\n\"I don't consider myself to be a lesbian. I have no intention of giving up having sex with men just because I've discovered how wonderfully exciting sex with a woman can be. I guess if you must have a label for me you can consider me bi-sexual. Does that bother you Barbara?\" \n\n\"No it doesn't it's just unusual, at least for me. I've never been with a woman that way.\" \n\n\"You can say it Barbara, you've never had sex with another woman. Well I hadn't either until I came on this cruise. I'd never even thought about it. I wasn't for it or against it. It was completely outside my sexual understanding. But that's why I took this trip, to expand my thinking and the opportunity to have sex with a woman presented itself very unexpectedly so I decided to try it. Much to my surprise I discovered that it was wonderful.\" ",
        "\"Maybe that's what I need to discover. I haven't had too much luck with men.\" \n\n\"I'm not sure that's exactly the right attitude but if you would consider it I'd like to ask you one thing?\" \n\n\"What's that?\" \n\n\"Would you let me be your first?\" \n\n\"Wow Linda I didn't expect that. What do you say Jesus, is this woman for real or has she just been hustling me since we've been sitting here.\" \n\nJesus stood up and came over between Barbara and me and put his head in my lap. He barked once. \n\n\"He's never done that before. It violates his first rule of being a guide. You must be for real. And very special.\" \n\nI started softly singing, 'Yes Jesus loves me' and Barbara started giggling. \n\n\"If a recommendation from Jesus isn't good enough for you let me help you with your audition. What you wore the other night to sing looked like something out of the early seventies. Did you bring anything more exciting to wear?\" \n\n\"I don't have much money and I don't have a wardrobe appropriate for a cruise ship so the answer is no I didn't.\" \n\n\"Then we can start there. There are a lot of shops along this street and many of them are women's clothiers. Let's go shopping. My treat. And no you don't have to have sex with me just because I buy you a dress. That's a separate issue and you probably have to think about it some more before you decide.\" \n\n\"How else am I supposed to thank you for doing this?\" \n\n\"By changing your act and impressing the entertainment director to give you the job.\" \n\n\"Linda, I'm already beginning to like you. Your kindness is authentic and I don't need Jesus to tell me that.\" \n\n\"That's a much better attitude Barbara. Let me pop inside this store and find my two female lovers and then we'll all get started looking for an outfit that will do you justice.\" \n\n\"Before we start I need to touch you. It's the only way I have to know you.\" \n\n\"Of course you can touch me Barbara, anywhere you want.\" \n\n\"Since we're on a public street I should probably start with your face.\" \n\nI took her hands and brought them to my face. She slid them softly over my forehead and cheeks then down to my neck. \n\n\"You feel as good as you sound Linda. I think you're pretty. Is that right Jesus? Is she pretty?\" \n\nJesus barked once. His sign of approval. \n\nI walked in the shop and found Ashley and Gina and told them what was going on. They were excited about helping so we went back outside and took Barbara to the first store that sold high-class women's clothing to begin her makeover. Ashley said she was going to find the guys and tell them what we were doing and if they didn't want to tag along they could do their own thing and we'd meet them back at the pier in a couple of hours. When she returned they were both with her and said this sounded like fun and wanted to give their opinion on what looked good on our new prot\u00e9g\u00e9. \n\nOver the next two hours we picked out several candidates at four different stores then retraced our steps to decide on the final choice. The guys were in favor of a very sexy dress that really showed off her body but we decided it was just a little too sexy. We finally agreed on a floor length dress that was split up the front to show some leg and displayed her boobs very well without making her look like a hooker. It was made from a shiny metallic fabric and was silver in color. She literally shone in it. It had long sleeves and covered her back completely so your attention was drawn to her chest. A silver metal rope belt went around the waist. \n\nWe bought her a pushup bra that displayed her nice sized breasts to their full advantage. A black thong, a pair of sparkling silver stockings and some silver high heel shoes completed the outfit. \n\nWhen we were leaving the guys said that they wanted to buy her a gift if she would let them so we went back to the store that had the very sexy dress and they bought it for her complete with all accessories so she could wear it on the second formal night tomorrow as long as she agreed to be our guest for the evening. When Gina saw how good Barbara looked she decided to get her a new dress that looked just as sexy. We were all going to look like girls gone wild tomorrow night. \n\nBarbara had tears in her eyes when she was leaving the store. \n\n\"I don't know how I can possibly thank you for doing this for me. Nobody's ever been this kind and generous to me.\" \n\n\"The only thanks we need is the pleasure of your company tomorrow night for dinner. We like to be seen with beautiful women and you are definitely one of them.\" \n\nOn the way back to the ship I asked her if she could change the songs she sang and she said she had a trick for singing any song. If she downloaded a song to her phone she could sing it while she was listening to it. She developed this skill because she couldn't see the words to the songs. She said she helped her accompanist learn how to do this too so they could sing and play virtually anything. \n\nWe constructed a playlist and picked out about twenty songs that were appropriate for the audience she was playing to. Romantic standards and even some contemporary stuff by Katy Perry and Taylor Swift. It was the kind of music you would want to hear Barbra Streisand sing in a nightclub. I told her to specifically replace 'Breathe Again' with 'Let it Flow' by Toni Braxton because it had a much more positive impact. And it was a lot sexier. I told her I wanted to hear her do it before her performance so I could determine if she was singing it breathlessly enough. \n\nShe looked at me when I said that and even though she couldn't see me I knew she was saying something to me with her eyes. She knew I could be trusted. She was convinced that I really wanted to be her friend and that I wasn't going to join the list of those who had disappointed her. I leaned over and kissed her. She didn't pull away. I knew then that I was going to fall in love with her. I just knew it. I didn't intend to think about it, I was just going to let it happen. I was going to let it flow. \n\nWhen we returned to the ship we asked her to show us where she was staying so we could help her with her clothes. She told us her cabin number and we made our way to it. It was the smallest single cabin on the ship, barely more than a closet with a toilet and a miniscule shower. I took one look at it and said, \"You're moving.\" \n\nI told her to bring everything because she was going to stay in our cabin for the rest of the cruise. The sofa in our living room made into a queen size bed and there was plenty of space in the closets for her stuff. She tried to protest and said that because she was blind it was actually easier to navigate in this little room than in a big suite. I said she had Jesus and now us to help her so she was coming to stay with us. \n\nWe brought her things with us as we made our way to the suite. When we got there we helped her and Jesus get familiar with the suite and put her things away. I made room for her toiletries in the bathroom and showed her where everything was. She began to look more at ease being with us. Bradley and Mark had put the veranda back in order and put the cushions back where they belonged while we were showing Barbara the suite. We took her out on the veranda and made her comfortable in a lounge chair. \n\n\"Barbara would you like something to drink?\" \n\n\"Could I have a pina colada? I hear they make really good ones on this ship.\" \n\nI ordered us all some drinks to be sent to the room and in a few minutes the room steward brought them. We all sat around and talked so we could get to know her. I was thrilled when she said she lived in Savannah and told her I lived in Augusta. She had been singing professionally since she was nineteen, mostly with a band but they had not been very successful so about a year ago she decided to try it on her own with her friend Bobby who accompanied her on the electronic keyboard. They made enough money to live but it was tough going most of the time. They really wanted this job on the ship. It was much better money and they'd have a place to live even if it was just a small room. \n\nThe excitement of the day and the rum in the drink had made her a little drowsy. She asked if there was someplace she could take a nap and I told her she could use Mark and Ashley's suite next door. I got the key card for their room and escorted her over to the other suite. \n\n\"This suite is laid out exactly the same as the other one so you should be able to get around. You can use the bed because the room steward will come in while we're at dinner and make it up again. Mark and Ashley only use this room to sleep at night. The rest of the time they're over at our suite.\" \n\n\"They seem like very nice people. I like them and so does Jesus. He lets me know if there's somebody he thinks I shouldn't be around.\" \n\n\"You two have a very strong connection. He's a very cool dog.\" \n\nI took her hand and led her to the bedroom and had her sit down on the bed. \n\n\"Jesus really likes you too. He'd never let you touch me if he didn't.\" \n\n\"He can lay right here on the floor next to the bed and watch over you. Is there anything you need? Do you want to get undressed?\" \n\n\"I suppose I should take off my blouse and these shorts so they don't get wrinkled.\" \n\nShe removed her blouse and I took it from her and put it on a chair. She took off her shorts and I put them on the chair with her blouse. She looked delectable standing next to the bed in her bra and panties. \n\n\"You're really a very beautiful young woman Barbara. I have a good feeling about your performance Saturday. I think things are going to work out for you.\" \n\n\"Thank you Linda. I really appreciate what you did for me today. I've also been thinking about your offer to be my first woman lover.\" \n\n\"And what have you thought about that?\" \n\n\"I've been thinking about how it felt when you kissed me earlier. It felt really good, soft and friendly yet thrilling. Do you think we could do it again?\" \n\n\"You mean now?\" \n\n\"Yes.\" \n\n\"Nothing would give me greater pleasure, only this time it will be a lot more thrilling than friendly.\" \n\n\"I hope so.\" \n\nShe barely got the words out before I took her hands and placed them around my neck. I put my hands on her sides just above her panty line. I moved my head toward her and touched my lips to hers. It was a tentative, exploring kiss. I pulled back then did it again. This time with a little more pressure. I pulled her closer to me so our breasts touched. My arms went around her lower back. Her arms encircled my neck and the kiss became a lover's kiss. She pressed her body into mine and her tongue parted my lips. I sucked it inside my mouth and slid my tongue against it. \n\nI pulled back from her and asked, \"What did you think of that kiss?\" \n\n\"Wow! That was more like what I had in mind. But I think we can do even better.\" \n\n\"Barbara did you really want to take a nap or was this just an excuse to get me alone so you could seduce me?\" \n\n\"Actually I wanted to get you alone so you could seduce me. I don't think I've ever been properly seduced and I can't think of anyone I'd rather have do it than you.\" \n\n\"Then let's not waste another precious moment.\" \n\nI moved toward her and took her hand. \"I'm going to finish undressing you now and then I'm going to explore your gorgeous body. When I finish, you're going to do it to me.\" I slid my hand up her arm to her shoulder and then down her back to the clasp of her bra. I unfastened it and used my hands to brush the straps from her shoulders so it could fall to the floor. My body breathed in quickly and sharply when I saw her creamy breasts. \n\n\"Your breasts are absolutely luscious. I'm going to spend a lot of time licking them and sucking them. Your nipples are the prettiest shade of pink I've ever seen.\" My hands moved to cradle them and caress them. \n\n\"You do that so tenderly Linda. It feels wonderful and it tells me how much you care for me. I have to rely on touch to know what you're feeling when you do things to me and you're telling me the sweetest things right now.\" \n\n\"I know how much trust it must take for you to let me make love to you and I want you to know I won't betray that trust. All I want from you is your wholehearted participation in what we do with each other because it is for no other purpose than our mutual pleasure and joy. If anything makes you uncomfortable all you have to do is say so and we'll stop. I would never do anything to hurt you Barbara.\" \n\n\"Thank you for saying that Linda but I already know that's how you feel. Every time I've ever been intimate with somebody and Jesus was in the room, he became agitated. He's lying peacefully on the floor and I can't even hear him breathing so if he's this OK with you then I have nothing to worry about.\" \n\n\"I'm very glad to know we have Jesus's blessing. That may be a first for me.\" \n\nI lowered my head and kissed her breasts, licking the pink nipples lightly. I could feel my insides beginning to churn with sexual excitement. My hands slid lower to brush across her stomach and moved to her sides then down to her hips. I slowly bent down to kneel in front of her and put my cheek on her warm stomach. I breathed in deeply to inhale her divine fragrance. There was something so intoxicatingly arousing about the scent of a woman. I experienced it with Ashley first and then with Gina. \n\n\"Oh Barbara, Barbara, can you feel what you're doing to me now? Have you ever experienced desire so powerful and wonderful that it became a sweet aching all over your body? That's what you're doing to me my precious lover. That aching is the basis for the pleasure yet to come. It will turn to joy as it's expressed. Ohhhh God Barbara you can't imagine how much I want you.\" \n\n\"I'm pretty sure I can. You'll feel the proof of it when you get a little lower down.\" \n\nI pulled my head back and put my fingers in the waistband of her panties and dragged them down as slowly as I could, taking my time revealing her pussy. A jolt of pleasure rocked my own pussy when I discovered she was a natural blonde. The sparse hairs that adorned rather than covered her mound were more like peach fuzz than hair and exactly the same color and shade as the hair on her head. From a distance you couldn't even see the almost white fur that blended with her skin tone so perfectly. \n\nI pulled the panties down further to reveal her lips. The hair stopped where her clit began and her lips and inner thighs were naturally bald. Their shape and color were a masterpiece of biological construction. They appeared to have been decorated by nature as though she was meant to be in a painting hanging in a museum. I finished pulling her panties down and she stepped out of them. \n\nI had to stop and just look at her. I had seen many depictions of angels in books and paintings in my life but I had never seen a living breathing one before. I could cross that off my bucket list. I was awestruck by her beauty. Then, as if to torment me more, she moved her feet apart so I could see her pussy in all its glorious splendor. It took all the self control I possessed to keep from pushing her back on the bed and diving between her spread legs to feast on her fabulous pink flesh. Suddenly Carly Simon's song 'Anticipation' started going through my brain and I knew that it would only taste better the longer I waited. \n\n\"You're beautiful Barbara. You are the quintessential blonde goddess, every teenage boy's wet dream and a rare and precious gift for anyone fortunate enough to be this close to you. You should just go ahead and pose for Playboy and get it over with so the whole world can see what the perfect sexual being is supposed to look like.\" \n\n\"Damn Linda, I've had guys tell me they thought I was pretty but nobody has even come close to making me feel as beautiful as you just described. That was some compliment.\" \n\n\"Oh my darling, that was no compliment. That was my poor, pitifully inadequate attempt to put into words just how magnificent you look.\" \n\nMy hands returned to her hips. I moved one across her to the blonde patch of fuzz and lightly stroked it with my fingertips. It was as soft and luxuriant as silk. I let my thumb slide down to her clit and pulled up on the hood to expose it. It was the same size as mine but more prominently displayed above the juncture of her labia so it appeared larger with the hood pulled back. Not anywhere near the size of Gina's but hers was a unique masterpiece of an entirely different construction. \n\nI used the fingertip of my other hand to touch it and she gasped. I slowly moved my finger down to slide through her labia and leaned forward to put my puckered lips on her clit to gently suck it. I could feel my finger being coated by her juice as it made its way to her opening. \n\n\"I see my blonde goddess is not only beautiful but wet. I think you like this.\" \n\n\"Oh God Linda I love it. Nobody has ever done this to me like you're doing it. I can feel your eyes almost penetrating me. You're making me so hot my knees are getting weak. It makes me feel like I'm being worshipped.\" \n\n'Love is what you are seeking and passion the purest form of worship.' \n\n\"A Persian poet said that eight centuries ago. His name was Rumi. This is how you should feel about your lover. Making love is a miraculous act and should be done with the utmost care and awareness. Having an orgasm isn't a goal to be raced to. It's a reward for taking the time to enjoy the journey. I've only recently rediscovered this. It's one of the lessons I needed to learn by taking this cruise. My husband and I both let this understanding slip away from our love life. I hope he's learning this lesson too.\" \n\n\"If he manages not to, then I'm sure you'll be kind enough to remind him of it and show him how it should be done. You're patient and compassionate and that's what makes you the most exciting lover I've ever had. You've already relieved me of my uncertainty about making love with a woman. It no longer makes any difference to me. Your tender loving is a gift and I accept it gratefully regardless of your gender.\" \n\n\"Yes Barbara that's it exactly. Love is a gift and the more you give the more you get back. This is what I meant when I told you that you didn't love completely. You're doing that now with me and it makes us both feel wonderful. Now turn around so I can see that pretty ass of yours.\" \n\nI watched her turn slowly around to face the bed and studied her perfectly shaped ass. Her flawless skin was such a creamy color, completely devoid of tan lines. \"Bend over and put your hands on the bed.\" Her pink pussy lips looked adorable between her cheeks. The beautiful pink color of her lips contrasted perfectly with her creamy cheeks. \"Lower your head down to the bed.\" This caused her lips to stand out between her upper thighs even more and I could see a line of moisture running the length of her labia. \n\n\"You want to kiss them don't you Linda.\" \n\n\"Ohhhhh God Yes.\" \n\n\"Go ahead. I want you to kiss them. I want to feel your lips on mine. I want you to taste them.\" \n\n\"Ohhhhh Barbara, I'm afraid if I do I won't be able to stop. I've never seen anything so erotic and beautiful.\" I moved my head forward and put my hands on her cheeks. I put my puckered lips on hers and softly kissed her pussy from top to bottom. My tongue extended to lick her clit and then slid upwards toward her asshole. I was on fire. I was almost trembling I was so turned on. How I kept from devouring her I'll never know but I pulled back and stood up. \n\n\"Don't worry, I'll get back to that. Now it's your turn. Stand up and turn around and change places with me.\" She pushed herself up from the bed and moved so she was facing me with my back to the bed. \"Take your time and undress me. This is your first time to do this to a woman and I want you to remember it.\" ",
        "She put her hands on my chest to feel that I had on a t-shirt. Her hands slid down to the bottom and lifted it up and I raised my arms so she could remove it. I took it from her and threw it over on the chair. Her hands returned to my chest to discover that I hadn't worn a bra. \"You're making this easy for me, we're already half way there.\" Her hands slid over my breasts and she cupped them to feel their size. \"You have nice breasts Linda. They're larger than mine and they feel very good. Soft and warm and pliant with large nipples.\" \n\n\"My boobs may be a little larger but yours are more perfectly shaped. Kiss them Barbara. See if you remember what it felt like to suck on a breast.\" \n\nShe kissed her way down my chest to my right breast and kissed all over it. Her lips opened when she got to my nipple and her tongue flicked across it. She gently squeezed it with her hand and sucked the nipple into her mouth. I could feel it swell in her hot mouth. She did remember; her tender sucking was just the way my daughters did it when I nursed them as babies. I felt like a direct connection had formed between her mouth, my breast and my pussy. The more she sucked the hotter and wetter my pussy got. My vagina was beginning to buzz and get that achy, needy feeling. \n\nShe removed her mouth and said, \"That was wonderful Linda. I loved it when my boyfriend sucked my tits and now I love to do it to you.\" \n\n\"Wait until you feel how wonderful it is to have two women suck your breasts while somebody else is licking your pussy. It's impossible to keep from cumming for more than two minutes.\" \n\n\"We can do that?\" \n\n\"If you want to. I'm sure the others are dying to get their hands on your beautiful body. The men and the women.\" \n\n\"I've never been with more than one person at a time like that. But if you're there with me I'd like to try it.\" \n\n\"I intend to be with you the rest of this trip unless you tell me to go away. That's why I moved you into our suite. We're lovers now and we should be together.\" \n\n\"Oh Linda that makes me feel so happy to hear you say that. Every minute I'm with you makes me feel closer to you.\" \n\n\"Speaking of being closer, weren't you in the middle of undressing me?\" \n\n\"I seem to have gotten distracted by your breasts. I'll see if I can tear myself away from them long enough to get you naked.\" \n\n\"You can come back to my breasts later. I love the way you suck them.\" \n\nHer hands slid down my stomach to my shorts where her nimble fingers undid the button and the zipper in no time. They slid to the floor and I stepped out of them. She wasted no time in finding the waistband of my thong. When she felt how small it was she slid her fingers along the thin band to my crotch and felt the tiny triangle that almost covered my pussy. \n\n\"That's a very small undergarment you're wearing Linda. Not what I expected for someone your age.\" \n\n\"Bradley told me the underwear I brought on the trip looked like it belonged to a spinster schoolteacher so he took me shopping in San Juan and I threw out all my old undies and replaced them with sexy panties and thongs. When I get home I'm going to get rid of the rest of them and do the same thing. I've rediscovered sex and I'm going to dress more provocatively from now on.\" \n\n\"I wish I could do that but Wal-Mart doesn't sell lingerie as sexy as that.\" \n\n\"There's a store on the ship that has some. I'll take you there and pick out some new things for you.\" \n\n\"You're going to spoil me Linda. You've already been way too nice to me.\" \n\n\"Don't worry about that. Just continue undressing me. I'm getting anxious to get you in this bed with me.\" \n\nHer fingers slipped into the thong's waistband and pulled it down quickly. I stepped out of them and stood naked before her. \"I wish I could see you.\" \n\n\"You may not be able to look at me but you can see me. Use your hands and your lips and tongue. Feel me, smell me and taste me. I'm all yours, explore me.\" \n\nShe resumed her discovery of my body at my navel and ran her hands and mouth all over my stomach and hips. She put her cheek on my mound and rubbed it. \"You have no pubic hair. When did you do that?\" \n\n\"Ashley and I did it Monday as part of our sexual liberation makeover in the ship's spa. Mark had been wanting her to do it for a long time and Ed asked his fantasy lover to do it for him so I decided to go bald too.\" \n\n\"You're just full of surprises Linda. I like that. I like your hairless pussy too. It does feel super sexy. I've never had that much hair down there to begin with.\" \n\n\"Your pussy is a work of art. Don't mess with it, it's perfect just the way it is.\" \n\nShe kissed her way down to my clit and licked it. I shuddered when I felt her tongue touch my nub. I spread my legs like she had done for me and opened my crotch to her. I felt her fingertip slide down my slit between my labia to my hole. I was so wet now I was sure I was leaking all over her finger. She felt this of course and brought her coated finger to her mouth and sucked on it. \n\n\"Oh Linda you taste heavenly. I never thought I'd say this but I can't wait to get my mouth on your pussy.\" \n\nI turned around and her hands went to my ass cheeks. She covered my butt with kisses then told me to bend over the way I had her do it. I lowered my head down onto the bed and spread my legs wider. Her thumbs moved into my crack and she pulled my cheeks apart exposing my pussy. I felt her lips make contact with mine and I shuddered again. Her tongue parted my labia and licked up until it was on my hole. I flinched when I felt it enter my vagina and felt her open mouth cover it. She sucked me and I let out a long moan of pure pleasure. \n\nI expected her to pull away but she didn't. She kept right on sucking and licking my hole and I kept getting closer to my climax. When it was clear she wasn't going to stop I reached down with my hand and started rubbing my clit. It only took another two minutes until I felt my orgasm starting. \n\n\"Ohhhhh Barbara. Ohhhhh baby you're going to make me cum. Ohhhh. Ohhhhh. Ohhhhh. Don't stop baby, don't stop... Ohhhhhhhh Yessssssss I'm cumming.\" \n\nI had to use both hands to keep from collapsing onto the bed as my vagina convulsed and juice flowed out of me into her mouth. \n\nShe finally stopped sucking me and pulled back. I stood up, turned around and put my arms around her. \"I thought you said you'd never done that before.\" \n\n\"I hadn't\" \n\n\"Well for a beginner, you're very good at it. I didn't expect that just yet.\" \n\n\"After I tasted you I didn't want to stop. You're delicious Linda.\" \n\n\"So are you my sweet young lover, so are you.\" \n\nI turned and pulled the spread off the bed then pulled back the sheet. \n\n\"We're going to get into bed now that we've been properly introduced and do some real lovemaking.\" I helped her into bed then got in beside her and put my arms around her. \"Oh Barbara, you feel so good in my arms, like you were made to be here.\" I kissed her and pulled her tightly against me. Her soft warm tits pressed against mine and I felt my pussy start to tingle. \n\n\"I can't believe I made you cum so quickly. You must be as turned on as I am.\" \n\n\"It's this medicine. It heightens your arousal and supercharges your capacity to have orgasms. It also increases the intensity of them. I've never cum like I have since I took this pill. It's incredible.\" \n\n\"Do you think it would work on me?\" \n\n\"Do you want to spend the rest of this cruise having sex?\" \n\n\"Oh Hell Yes! I really don't have anything else to do until my next performance.\" \n\n\"Then stay right here. I'll be back in a minute.\" \n\nI got up and pulled on my t-shirt, not bothering with my thong, and hurried over to the other suite. I knocked on the door and Bradley opened it. \n\n\"We were wondering what happened to you but I can see by the way you're dressed that you've been having fun.\" \n\n\"Barbara and I decided to get to know each other better. Where's Gina?\" \n\n\"Out on the veranda with Mark and Ashley.\" \n\nThe three of them were in a daisy chain sucking each other. \"Gina, I hate to interrupt your fun but do you have any more of those pills we took?\" \n\n\"Oh, hi Linda. Sure, I've got two sample packs with twenty-five pills in each one. I meant to give you and Ashley both one of the packs. Let me get them for you.\" \n\nShe went into the bedroom and Ashley asked me how I was getting along with Barbara. \n\n\"She's absolutely adorable. You're going to love her but you better keep an eye on Mark, he may want to run away with her. If I don't do it first.\" \n\nGina returned and handed me one of the packs and gave the other one to Ashley. \n\n\"I'll bring Barbara back over here after this pill starts working on her. Then you'll get to play with her too.\" I took one pill out of the pack then stopped in the bathroom and put the pack in my makeup case and hurried back to the other suite. I let myself in and got a bottle of cold water out of the fridge and took it into the bedroom. \n\n\"I'm back. Are you ready to experience sex like you never have before?\" \n\n\"I thought I was already doing that.\" \n\n\"Oh, yes, I guess you were but this is going to make it even better. How long does it usually take for you to have an orgasm?\" \n\n\"It depends on how I'm having it. If I'm by myself it can take about ten to twenty minutes depending on what I do or if I'm using a vibrator. If I'm with a partner it can take longer because it takes a little time to work out what we do to each other. Sometimes I don't even have an orgasm even after twenty or thirty minutes.\" \n\n\"Describe to me how you feel when you cum.\" \n\n\"I feel warmth and energy building up in my pussy and usually a tingling sensation in different parts like my clit or even my asshole. Then when I cum the warmth spreads and my vagina pulses and my muscles sometimes tense up. Then I get this flush in my neck that goes up into my brain and makes me kind of lightheaded.\" \n\n\"How soon after you cum are you ready to do it again?\" \n\n\"I'm not sure. I've only done that a couple of times when I masturbate. I usually have to use my vibrator the second time. Only once has a guy been ready to go again with me and it took longer for both of us the second time. Linda, I've never talked to anybody like this before; not even a doctor. It feels comfortable and easy to confide in you about my sex life.\" \n\n\"I want you to be able to talk to me about anything. I know things in general are more complicated for you but sex shouldn't be one of them. I think most women usually have sex in the dark whether they can see or not. It's more about feeling than seeing for women. At least that's been my experience. I have to admit though since I've been on this ship I've wanted to keep the lights on and watch what was happening. The sight of Bradley's big cock really turns me on. I even keep my eyes open when I suck it.\" \n\n\"So how does this pill change things for you?\" \n\n\"The best way to explain it is to think about the best sex you've ever had. When you take this pill, every sexual experience is even better than the best. You're ready to go again much sooner and that feeling you get when you cum is much more intense. The orgasms continue to get better and last longer. It also makes you get wetter, which is a fantastic effect for me because I've been slowing down on my natural lubrication lately.\" \n\n\"One more question. How long do these effects last?\" \n\n\"Seventy-two hours.\" \n\n\"Three days! I'm going to be horny for three days? This won't interfere with my performance Saturday will it?\" \n\n\"I thought about that and I really don't think it will be a problem. While we were on shore shopping none of us had to go in the bathroom and jerk off because we had taken this pill. It doesn't make you a girl gone wild all the time, only when the circumstances are right. In fact I think it will enhance your performance. It needs to have more sex appeal in it and this stuff will definitely provide that. Even Jesus noticed it.\" \n\n\"I guess I don't have much to lose. I didn't make that great an impression last time. Hand it to me, I want to get started.\" \n\nI gave her the bottle of water then told her to open her mouth. When she did, I put it on her tongue. She took a swig of the water and swallowed it. \"When will I start to feel the effects?\" \n\n\"In about thirty or forty minutes. But we're not going to wait until then.\" I took the bottle from her hand and put it over on the nightstand. I pulled my t-shirt off and threw it over on the chair. \"Now where were we?\" \n\n\"We were in each other's arms and I was already feeling like this was the best sex I ever had.\" \n\n\"Before we get back to that I want us to take a bath. We did a lot of walking in warm weather today and I feel like I want to get clean. Come on lets go have a soak.\" \n\nI ran us a bath and while it was filling I put her hair up for her so it wouldn't get wet. I had the strangest feeling while doing it. I was already in love with her and I was so hot for her I couldn't keep my hands off her, but at the same time, I had the same feeling for her that I have for my daughters. She was the same age as Jessica, my youngest, and I was genuinely concerned about her the same way I would be about my daughter. I wanted to help her succeed as an artist and I wanted her to have a healthy and happy sex life. I wanted to be her friend as well as her lover. \n\nSuddenly I had this insight about Jessica. She was still living at home with us and it dawned on me that she didn't have that many dates with men or women either for that matter. She was a pretty young woman, intelligent, a college graduate, working her way into taking over Ed's businesses. \n\nI realized that I had not only been neglecting my sex life and Ed's but I had never really had a down and dirty talk with Jessica about sex. Maybe I wasn't ready before but when I got home I was going to talk to her the same way I had just talked with Barbara. My other daughter Charlotte was married so I assumed that she had worked out sex with her husband by now. But should I assume that? I determined to have a talk with her too. I was definitely going to give her some of these pills. \n\nWe walked over to the tub and I turned the water off and helped her get in. I told her to scoot forward so I could get in behind her with my legs on either side of hers. She laid back on me with her head beside mine. The sensation of her body on mine caused my inner cougar to return and tell my inner mother to go take a hike. \n\nI cupped my hands under her breasts and felt their buoyancy in the water. My thumbs moved across her nipples and rubbed them in little circles. She sighed as I continued to caress her breasts and kiss the side of her neck and face. We didn't speak for a while; there was no need to. Her hands stroked my thighs up and down. I removed one of my hands from her breast and slid it down to her mound. She pulled her knees up and spread her legs to invite my touch. My hand covered her slit and softly rubbed it. \n\n\"Put your hand on top of mine. Do this with me.\" \n\nShe joined me in massaging and stroking her pussy. I moved my fingers to her clit while she moved hers to her vagina. We played with her in concert until her breathing quickened. I moved my hand back and put it on her stomach. \"Let's not go too far in the tub. I want your first orgasm with a woman to be in my mouth.\" \n\n\"Linda, being here with you and doing this is the best thing I've ever done. I can't believe how comfortable and at ease I feel. Nobody has ever touched me with so much tenderness before.\" \n\nI picked up the bar of soap and a washcloth and began to bathe her. I pushed her forward so I could do her back then had her turn around to face me so I could wash her chest and stomach. She lay back against the other end and I washed her legs and then had her raise her hips up so I could wash her crotch. She repeated this treatment on me and we let the water drain out of the tub before rinsing off with the handheld spray. We got out and dried off and I grabbed a bottle of the body lotion the cruise line had put in the bathroom. \n\nWe walked leisurely back to the bedroom with her arm around mine. I noticed that Jesus was quite content to let me be her guide for a while even though he kept a watchful eye on my performance. I had her lie down on the bed on her stomach and rubbed the body lotion all over her backside then told her to turn over so I could do her front. \n\n\"Linda I see what I've been missing by not having a woman lover. It's the intimacy. And the sensuality. Men just don't know how to do this; they want to get right to the sex. You're so wonderful to me. I've needed a friend like you for a long time. Thank you.\" \n\n\"I'll be your friend Barbara but I'll be a lot more if you want me to be. I want to be in your life from now on as often as I can.\" \n\n\"I want that too and I also know you're in love with me. I feel it in your touch and the things you say to me. Jesus knows it too. It may be what he picked up on more than just your sexy scent today. He also knows I love you and I want you to know it. It scares me a little because I've never felt love like this for anybody else. This is so real and right and strong. It envelops me completely and makes me feel safe.\" \n\nI thought about what she said while I finished rubbing her body with the lotion then sat the little bottle on the nightstand. I climbed over her as I got into bed beside her. I was so full of emotion I couldn't speak. I turned toward her and put my arms around her and she did the same. My mouth went to hers and as soon as they met, a tear rolled out of my eye and down my face. We lay there holding each other close and let our hearts tell us how much we loved one another. \n\nI'd never loved anyone that I could share so much with in silence. This just made me love her all the more. She could reveal herself completely without saying a word and it made me want to do the same for her. This is what she had been waiting for. She had heightened her other senses to compensate for her blindness and this had given rise to a sixth sense that had informed her that all her previous lovers suffered from another form of blindness. She couldn't see with her eyes and they couldn't see with their hearts. \n\nThis made them feel uneasy and unworthy. She wanted to be loved but she knew they couldn't love her the way she deserved to be loved. Her mind interpreted their confusion as rejection and it hurt her. But she had to listen to her heart. Like Jesus it was the only really trustworthy guide she had. Now at last she had found someone she could love totally and that would love her the same way. \n\nWe lay together in this loving silence until I felt her body become warmer. I glanced over at the clock on the bedside table. It had been about forty minutes since she had taken the pill. It was time to switch from declaring our love to demonstrating it. I moved down so my mouth could kiss her breast. She sighed as my lips made contact with her nipple. My hand squeezed her breast gently so my mouth could contain as much of the warm mound as possible and began to lick her nipple. \n\nThe pink bud expanded and I relaxed my hand so only the areola was still inside my mouth. I nursed her like a baby with suckling movements of my cheeks and tongue. She moaned softly and I brought my other hand over to cover her other breast and caress it while I sucked her. She put her hand on my head and ran her fingers gently though my hair. My pussy began to heat up and tingle. The feeling I got from sucking her was the same one I got when I sucked Bradley's cock. Only with her I was sucking love. I moved over to her other breast and lavished the same affection on it. \n\nWhen she began to whimper I moved lower, kissing my way to her down covered mound. She pulled her legs up and spread them yielding her crotch to me to plunder at my will. As I slid between her outstretched legs I could feel the heat rising from her pussy. The time for tenderness had passed. I lovingly assaulted her slit and mercilessly lapped at it with my tongue. It was passion she wanted and I was determined to give it to her. The more I tormented her the more she begged for. Her hips undulated as she humped my mouth to facilitate my onslaught of her soaked pussy. ",
        "This is the sex she had always yearned for. Hot, nasty and lustful. She needed someone she loved with all her heart and who loved her enough that she could cede all control to and submit her body to unconditionally. She was lost in sex, not knowing or caring if a climax would come. All she wanted was to keep giving herself to her lover; urging me to take more and more and challenging herself to find more to give. She was panting, moaning, groaning and gasping for breath as she continued her frenzied movements to cooperate with my tongue's relentless ravaging of her pussy. \n\nShe had completely forgotten about the pill. The same first effect that had caught me off guard in the shower now hit her full force. A powerful orgasm overwhelmed her without warning and exploded inside her like a bomb. She pressed her pussy against my face as her hips rose and her back arched up off the bed. She grabbed a pillow and stuffed her mouth with it to stifle a scream that would have caused Jesus to think I was killing her. \n\nShe stayed suspended with her hips raised for at least thirty seconds then her muscles finally began to relax and she lowered slowly back down to the bed where her body continued to jerk as orgasmic aftershocks rippled through her body. She was breathing like she had just finished running a marathon. I crawled out from between her legs and moved up to lie beside her. She was still biting on the pillow. I rubbed her jaw and managed to pry it away from her then leaned over and kissed her. \n\nI stroked her forehead and felt the sweat on her brow. Her breathing calmed and she opened her eyes. \n\n\"Well Barbara, did you enjoy that?\" \n\n\"Enjoy it? I'm still trying to figure out if I survived it. That was unbelievable.\" \n\n\"The first orgasm I had after taking the pill did the same thing to me. It literally knocked me on my ass in the shower. You get used to it after a while.\" \n\n\"How could you possibly get used to something that intense.\" \n\n\"Believe it or not you'll be ready for another one in a few minutes. Eventually you'll get to where you can just keep right on going from one to another.\" \n\n\"Oh My God Linda what's in those pills?\" \n\n\"I don't have the foggiest idea. I just know I'm never going to be without them.\" \n\n\"Linda that wasn't only about the pill. I've never had anybody love me like that. I was able to let go and give myself to you like I've never done before. I always dreamed that sex could be like that but you made it happen.\" \n\nI kissed her again and told her, \"That's what real lovers do for each other. They pay attention and give the other what they need. I love you Barbara.\" \n\n\"If you want to give me what I need now it would be another bath. My crotch is soaked. I think you're right about these pills stimulating a woman's lubrication.\" \n\nI put my hand on hers and said, \"I'd be delighted to bathe you again. But we're going over to the other suite to do it. I'm going to give you an enema first then you're going to give me one.\" \n\n\"Before we do that I need to take Jesus for a walk. There's a place on the top deck just for this purpose where service dogs can do their business and get a little exercise.\" \n\nWe got dressed and took Jesus up on the elevator to the top deck. He knew where we were going and what to do when he got there. He had been very well trained. We walked him around the entire deck and then headed back down to our suite. Barbara thought he might not be comfortable with this many people being around her, especially considering what these people would be doing to her so we decided to put him on Mark and Ashley's veranda so he could hear Barbara's voice and she could reassure him if he got anxious about her. We put down a bowl of water and some dry food for him in case he got hungry and Barbara told him to stay and not worry. He lay down on the deck and seemed to be content. \n\n\"Linda I really appreciate all you're doing to help me and so does Jesus. You're the best friend we've ever had.\" \n\n\"I want to remain your best friend Barbara. You're more than my lover, you're one of my daughters now. I'll be there for you just like I would be for them.\" \n\n\"You don't know how much that means to me. My father left my mother when I was nine. She's been struggling ever since and now she's sick. I try to help her but I just can't do as much for her as I'd like to. I started singing instead of going to college in order to make some money to help her. Hearing you say what you did makes me love you so much I'm going to start crying.\" \n\n\"Don't you dare! We're not on this cruise to cry unless it's from joy. Now let's go get cleaned up.\" \n\nBack in our suite the others were still hard at play with each other. I told them we'd be joining them as soon as we took a bath. As soon as we got in the bathroom Barbara started stripping her clothes off. I gave her an enema and told her to pay attention to what I was doing so she could give me one too. She did a perfect job of it and when I had emptied out the water I took her hand and led her to the shower, which like the tub was large enough for two. \n\nShe asked me if I had a shower cap and I told her I wanted to wash her hair. She really appreciated that because nobody ever did it for her. Standing there running my fingers through her hair while I lathered it up with shampoo was extremely emotional for me. I 'd never had a friend, a lover and a daughter all in one person before. The roles seemed to blend together as I watched the suds stream down her long blonde hair and run down her gorgeous body. I could literally feel myself falling more and more in love with her. \n\nI rinsed her hair and then started washing her. I didn't use a cloth; I wanted my hands on her. Butterflies cavorted wildly in my stomach as my hands slid over her flawless skin. I was giddy with joy over every place I touched her. She leaned back against the wall and accepted my soapy exploration of her with as much happiness as I had for doing it. \n\nWhen I finished with her feet I told her to turn around and face the wall. I washed down her back to her ass and massaged her soft cheeks. I rinsed her, then moved the showerhead so the water wasn't falling on us. I got on my knees and told her, \"This is why I gave you the enema.\" I spread her ass apart and put my lips on her puckered hole and licked it several times. She flinched but then relaxed and spread her feet further apart. \n\n\"Oh yes Linda, anything for you.\" \n\nI covered her tight little hole with my mouth and inserted my tongue. She moaned and pushed back against my face. \"Use your hand to rub your clit.\" Her fingers started rubbing her pink nub and I continued licking and sucking her ass while my hands squeezed her cheeks. \n\nIt didn't take very long before I heard, \"Ohhhhh Godddddd Linda you're doing it to me again. You're going to make me cum. I...I...Ohhhhhhh Yes I'm cumming.\" \n\nI held onto her as her legs began to tremble, then stood up quickly and pressed myself against her and put my hands on her tits and kissed the back of her neck as her orgasm swept through her. I humped my hips against her ass as if I was fucking her and she moaned as if I actually was. \n\n\"Ohhhhh Godddd Linda what you do to me. You just keep taking me higher every time we make love. You know exactly what I need and what I want. Ohhh Linda I love you so much.\" \n\n\"When we leave the bathroom I'm going to have Mark fuck your tight little ass. You're going to love it. Anal orgasms are even more powerful than vaginal orgasms.\" \n\n\"Ohhh Goddd Linda I've never done that before. Will it hurt?\" \n\n\"Not if you don't resist. Relax and open yourself up like you did for me, it will feel fabulous. Mark will take his time and go slowly. Ashley and I will suck your tits while he does it and Gina will kiss you. We'll all make you feel really good.\" \n\nWe got out of the shower and dried off then walked naked out to the veranda where the rest of them were. The cushions were back on the floor making a large bed. \n\n\"We were wondering if you two were ever going to come back. Wow Barbara, you're even more beautiful than I thought. Is there anything I can do for you?\" \n\n\"Thank you Ashley. Linda said you might want to suck my breast while Mark puts his cock in my ass.\" \n\n\"Whoa, Linda's not wasting any time with you. It would be my pleasure to suck that pretty pink nipple of yours while Mark puts his cock in your ass. Would you like me to get your ass ready for his cock first?\" \n\n\"That would be very thoughtful of you. I've never done this before.\" \n\n\"Well Mark, you're going to get to take her anal cherry. You don't mind that do you?\" \n\n\"Somebody's got to do it. I'll be as gentle as I can Barbara. Lay down here on these cushions. I think it would be best if you were on your back.\" \n\nShe lay down and I got between her legs. Ashley moved over and sat next to her hip. \"Raise your knees up and spread your legs as wide as you can.\" Ashley put a pillow under her hips to keep them elevated. I told her to hold out her hand and squeezed out some lube onto her fingers. I sat back on my haunches and watched Ashley rub the lube on Barbara's asshole then insert her index finger into the puckered little hole. She moaned slightly at the intrusion and breathed deeply. \n\n\"How does that feel Barbara?\" \n\n\"It feels good, almost as good as Linda's tongue.\" \n\n\"I see Linda's already got you started.\" \n\nI knelt beside her to watch Ashley apply the lube to her asshole and insert two fingers into her to stretch her aperture in preparation for Mark's cock. Ashley's stretching was causing her perfect pink vagina to open too so I leaned over and licked it. When she seemed to be ready, Ashley told mark to kneel between her legs and when he was in place she told him to lay his cock on her mound. \n\n\"Barbara, reach down with your hand and feel Mark's cock.\" \n\nHer hand moved down and her fingers wrapped around the rigid shaft. \"Ooooohhhh it's so hard... and hot. I can't wait to feel it in my ass.\" \n\n\"I'm going to put some lube on the head of his cock. You rub it in for him and get him nice and slick.\" \n\nShe seemed to like rubbing the slippery lube on him and slid her hand half way down his shaft and back up several times. \n\n\"OK Barbara, pull your knees up as far as you can and I'll put his cock in your ass.\" \n\nHer hands went behind her knees and she pulled back on them. Ashley grasped Mark's cock and brought the tip to her little hole. Mark pushed forward and the head slid into her wrinkled anus. She gasped and breathed deeply. \n\n\"Relax Barbara. Mark will hold it there until you get used to it. Do you feel OK?\" \n\n\"Ooooohh Yeah, I feel fine. It's different but it feels good like your fingers did.\" \n\n\"Are you ready for a little more?\" \n\n\"Yes. Put some more in me Mark.\" \n\nAshley's hand moved down his shaft a couple of inches to indicate where he should stop and Mark pushed forward again. His hard cock moved easily into her rectum down to Ashley's fingers. Barbara took another deep breath and let it out slowly. Ashley stroked the part of Mark's cock that was still in her hand and this caused the part that was inside her ass to move slightly in and out. \n\n\"Uhhhhhhhh, Oh God Mark I didn't think it would feel like this. Because I can't see I feel things more sensitively and I feel your cock stretching my rectum and it's sooo good.\" \n\n\"Barbara he's about half way in you now. I'm going to move up to your breast and he'll finish putting it in you. If you want him to stop again just tell him.\" \n\nAshley took her place across from me and covered her nipple with her mouth. \n\n\"Ohhhh Linda you said it would feel incredible to have two women sucking my tits and it does. Where's Gina? Isn't she supposed to be kissing me?\" \n\n\"I'm right here Barbara. How do you want me to kiss you, with my mouth or with my pussy?\" \n\n\"Ooooooohhhh, I'll have your pussy please.\" \n\nGina swung her leg over her head and straddled her face. Then lowered her pussy down slowly until it touched Barbara's mouth. I could see Barbara go to work on Gina the way I had done to her. I was surprised she could focus on it considering what was happening to her ass. There was a lot more depth to this young woman than I had seen yet. I was going to discover it and nourish it and support it as much as I could. \n\nMark continued pushing more of his cock into her. She was either too overwhelmed with everything else to notice or she had resigned herself to opening to Mark as she had to me, but in any case Mark didn't stop. His cock was buried in her tight ass and she was lost once again in carnal pleasures. This time she had four people filling her with sexual input. Ashley and I sucked her tits like it was the last thing we would ever put in our mouths. I envied her being so stimulated; especially given how heightened the sensations must be under the effect of the pill. Her brain must be close to meltdown. \n\nMark announced, \"Barbara, you've got it all baby. How does it feel?\" \n\nShe managed to quit sucking Gina's pussy long enough to answer him, \"It feels fabulous Mark. I've never had a feeling like this in my body. I'm very full but I'm also incredibly horny. I want you to fuck my ass now; nice and steady so I can experience what it feels like.\" \n\nMark began to give her what she asked for and fucked her with long steady strokes. She tried to return to sucking Gina's pussy but the sensations of Mark's cock sliding in and out of her ass were too demanding on her attention. Gina sensed this and moved off her face. I looked at her face to see the same consumed look she had when I was eating her. This was yet another remarkable effect of the drug. You could focus on what was being done to you to the extent of tuning out virtually everything else. This is probably what allows you to have such intense orgasms. \n\nMark said, \"Linda, Ashley would you please move back and give me some room. She wants to be fucked without distraction. She wants to experience this completely and I want to do that with her.\" \n\nAshley and I moved back and watched as Mark leaned over and laid on top of her. \"Barbara, put your arms and legs around me and hold me tight.\" She did what he told her to do and I saw her surrender to him the way she had to me. A thrill ran through me as I saw how immersed she was in what was being done to her. She was awesome. And so damn beautiful. \n\nI looked at Ashley to see her reaction to her husband going so deeply into a sexual act with a younger, beautiful woman. There wasn't a trace of jealousy on her face. She loved him enough to not only allow him to do this but to enjoy it with him. I hoped that Ed could do this for me because I was never going back to having only one sexual partner. I had confidence that Kealani would bring him to this same realization. \n\nI returned my gaze to Mark and Barbara. They were both completely absorbed in their lovemaking. Mark's head was beside hers with his chin on her shoulder. I was fascinated by the feelings that swept across her face as Mark slid his hard cock in and out of her virgin ass in a steady rhythm. I could see the passion and the lust as he stroked her but when he bottomed out in her I saw a look of supreme fulfillment as she welcomed every inch of him inside her. It was a happy, satisfied look that she was giving herself totally to him and taking him as deeply as he could reach. \n\nThey were beautiful together and seemed to take Ashley and me to the same state of arousal as their desire built higher and higher. Mark increased the speed of his thrusting and Barbara was grunting each time his hips impacted hers. \n\n\"Ohhhh, Ohhhh, Ohhhh Mark I'm going to cum. Please do it with me. I want to feel your hot cum spurt into my ass. Please Mark, cum for me. Ohhhhhhh Godddd Mark I'm cumming.\" \n\nShe squeezed him like a python with her legs and arms. He moved his head over and put his mouth on hers and kissed her. Then he stroked into her as hard and fast as he could and stopped with his cock buried in her hot tight hole. Neither of them moved while Mark emptied the creamy contents of his balls deep inside her. \n\nBarbara's arms and legs finally relaxed and slid from around him and she lay flat on the cushions beneath him. He pulled back and rolled over to lie between her and Ashley. She put her arm over him and told him, \"Oh baby that was beautiful. I really loved watching you do that. I knew exactly how each of you felt and it was wonderful.\" \n\nI lay on her other side and stroked her forehead. \"How did that feel my sweet love?\" \n\n\"Incredible. I would never have done that without you. I felt so secure with you here beside me. I didn't hold back or tense up. I was able to open myself to him like I did with you and do something new and exciting. You've taught me how to trust myself and overcome my fear. That's the most exhilarating part of all.\" \n\n\"That's what I've been doing the entire time I've been on this ship. It's what Ashley and Gina are doing. Now you've joined us. We have two days left to have as much fun as we can and you're going to be a part of it. Now that you've gotten to know her husband, you should spend some time with Ashley. She'll love you as much as I do.\" \n\n\"Ashley would you like to go over to your room and take a bath with me. Then we can spend a little time with Jesus so he doesn't think I've deserted him.\" \n\n\"Barbara I'd be delighted to bathe you and spend some time with your puppy. Then I'd love to spend some time with your pussy. Are we going out for dinner tonight?\" \n\n\"Unless anybody objects, I think we should have dinner sent in so we can spend the rest of the evening playing with each other. We're definitely going out tomorrow night so we can all wear our new dresses.\" \n\nAshley and Barbara stopped off in the bathroom so Ashley could give her another enema to wash Mark's cum out of her. They wore robes to get back to the other suite. They went out on the veranda and sat with Jesus for a few minutes. He came over and sat between both of them and let Ashley pet him. He knew instinctively that the people Barbara was with could be trusted and he felt at ease with them. They decided to take a shower and Ashley put Barbara's hair in a shower cap to keep it dry. Once in the shower Ashley rubbed the pretty blonde's shoulders and neck with soap and let the suds cascade down her back and chest. \n\n\"I've been waiting since I first saw you on shore to get my hands on your beautiful body. Tell me how you liked your first experience with anal sex. It appeared that you were really into it and having a good time.\" \n\n\"Oh I was. It surprised me how good it felt. It only caused me discomfort for a little while when we first started but once Mark's cock was half way in me it felt marvelous. I want to thank you for letting Mark be my first. He was very gentle and considerate. I don't think many wives would let their husband do that with another woman.\" \n\n\"Mark and I came on this cruise to reinvent our sex life. We thought it would just be the two of us having some sheltered time to rediscover our passion. That all changed when we met Linda and found out what she was doing on this cruise. We were both intrigued and excited about what she had arranged for her and her husband. \n\nOnce we got to know them it didn't take long for us to decide we should expand the parameters of our trip to include sex with her and Bradley. Everything changed the minute I kissed her and discovered how turned on I was by it. Before the first night had ended, we were in love with each other. I suppose I should have been shocked by that because I had never been with another woman before but when Linda and I made love it was wonderful and it didn't matter that we were both female.\" \n\n\"That's what happened to me too. I knew something very unusual was happening when Jesus pulled away and went up to her. He's never done that before. He was trying to tell me something. Thank God I had sense enough to listen to him. Once I started to talk to her I felt more and more at ease the longer we talked. When she offered to help me I knew it wasn't just a come on to have sex with me. But she offered sex as an option and it made me think. When she kissed me on the way back to the ship, I knew I wanted to try it with her. I also knew if I asked her to stop she would. Once we did have sex it changed my life just as it did yours.\" ",
        "\"But it didn't change me the way I've heard other women speak about sex with another woman. Even after we did it, I still loved having sex with Mark and I couldn't wait to get Bradley's big brown cock inside me. All that changed for me is that there were now a couple of billion more potential sex partners in the world.\" \n\n\"I want to have sex with Bradley too. I heard Linda talking about how big he is and it sounds like I've never had a cock that could compare to it. Linda said she loved to suck it. That's something else I was never really that keen on doing but I want to now. I've had Mark cum in my ass and loved it, now I want Bradley to cum in my mouth.\" \n\n\"So Barbara you've fallen under Linda's spell too. She has seduced all of us.\" \n\n\"No Ashley, not seduced. She has charmed us. Maybe even beguiled us but she has not led us astray. She has set an example for us to follow. She has challenged us to wake up and get out of our sleepy, comfortable lives and live the life we're capable of and not the one we've settled for. That is why we love her and not merely admire her.\" \n\n\"You're right Barbara. How did you get to be so wise? And so damn beautiful.\" \n\nAshley rubbed her soapy body against Barbara's and put her arms around her. Her hands moved down to caress her ass as her mouth pressed against hers. Barbara echoed her actions and put her hands on Ashley's ass to pull her closer. The pill was at full strength in both of them and was encouraging them to do what they both wanted to do. Ashley put her leg between Barbara's and moved them apart then moved one of her hands to her pussy. She rubbed the soapy foam on her as if washing her but it was much more than bathing. This was naked, undisguised lust. Wanton sexual desire enhanced with pharmaceutical assistance. They both knew and wanted what was about to happen. \n\nThey stayed in the shower until the soap was rinsed away and their passion had risen to a fevered pitch. Ashley turned off the water then took Barbara's hand and dragged her quickly to the bed without even bothering to dry off. She practically threw the young blonde on the bed then said, \"Do you want to be on top or bottom?\" \n\n\"Bottom.\" Was all Barbara said and all Ashley needed to hear. She threw her leg over her head and straddled her. Barbara spread her legs in anticipation and Ashley lowered her chest down to get her mouth on her pussy while spreading her own legs so her wet pussy made contact with Barbara's mouth. Barbara was eager to use her mouth on Ashley's bare twat the way Linda had used hers on her before. \n\nThere was no need for foreplay. Neither of them needed to be any more aroused than they already were and both began licking and sucking the other as if their pussies were gushing ice cream. In no time they brought each other to a climax. It was merely a warm up, a preview of things to come and they continued their oral exchange until they each had two more massive orgasms. \n\nThey finally decided it was time to return to the other suite where they found the others engaged in the same kind of intense sexual activity. The sex continued until one in the morning with only a brief break for some dinner and to take Jesus up for his potty break and a short walk. \n\nI asked Bradley to sleep with Gina on the sleeper sofa while I spent the night with Barbara and Jesus. I didn't let her out of my arms the entire night. I awoke at least once and hour to look at her and kiss her as though I needed to reassure myself that she was still really there. Even asleep she kissed me back and murmured softly as I held her."
    ],
    "authorname": "mountaincat4",
    "tags": [
        "mature",
        "group sex",
        "oral sex",
        "interracial",
        "lesbian"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/fantasy-sex-cruise-12"
}