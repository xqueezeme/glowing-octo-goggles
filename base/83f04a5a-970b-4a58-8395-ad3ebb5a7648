{
    "title": "Only You Ch. 04",
    "pages": [
        "Derek wrinkled his nose in concentration as he typed away furiously on his laptop. He was trying to finish his review for the latest Grand Theft Auto game for NerdsUnite!. While Matt and Jake took care of public appearances at the conventions, Derek stayed behind the scenes to tighten the graphics and layouts of the new site and to work on the business aspects. \n\nThere were a lot of people interested in purchasing his little company. Sooner or later the Geek Trifecta, as he referred to himself, Matt, and Jake would have to make a lot of decisions. He wasn't sure if he wanted to sell his company. After all, it was his baby; he brought it up with his friends and without the help of any others, specifically his brother. Why couldn't people understand that he wasn't just Dex Ryan's little brother? There was definitely more to him than a famous sibling.\n\nDerek made sure there was hardly any connection to Dex in his work. He didn't want to be accused of using his brother's fame to further his own agenda. He had seen too many Hollywood families ruined by siblings' need to constantly compete for the spotlight. He loved his brother was content to remain behind the scenes. After all, he was twenty-four and as Dex joked, the only thing on his mind was sex and girls. \n\nAt the present moment, there was one girl taking up residence in his thoughts. Tegan was fantastic, the complete opposite of Lottie, who hadn't returned his many calls in the past week. That didn't bother him at the moment; as far as he was concerned, their relationship had been over for nearly a month now. Tegan was just the thing he needed to take his mind off the situation that was slowly bubbling under the surface.\n\nIf he had been a more efficient man, he would have wrapped up all his loose ends. But no, he was Derek Ryan, Master of Procrastination. \n\nHe sighed. Life was complicated. He was sitting in Tegan's apartment on a Saturday afternoon trying to get things accomplished but he found himself distracted by her movements. She was fluttering back and forth between her bedroom and the stacks of CDs and cassettes placed haphazardly around the common space. Derek chuckled. She still owned cassette tapes. That was some dedication to tunes. She had her headphones on and seemed to be in deep thought. \n\nDerek's eyes trailed back to the screen in front of him. Just a few more paragraphs to go, then he would call and let the Trifecta know everything was set.\n\n\"Earth to Derek!\" Tegan said. She snapped her fingers in front of his face. \n\n\"Huh?\"\n\nTegan smiled. \"You were totally zoning out.\"\n\n\"Sorry babe,\" he said, giving a huge yawn. \"I was totally lost in this article.\"\n\n\"It's cool. I thought you'd been ignoring me.\" It was then she noticed the square black frame glasses perched on his nose. \"Wait, since when do you wear glasses?\"\n\nHe grinned sheepishly. \"Oh these? Well, I use them for reading and stuff. Dorky, huh?\"\n\nHer lips brushed his cheek before she kissed him gently. \"You look dashing. Like Peter Parker.\"\n\n\"Oh really?\" She noticed that old mischievous gleam in his blue eyes. \"Roleplay?\" He reached out to her from the couch, but Tegan shied away. \n\n\"Oh no, Derek. I've got to get some work done today.\"\n\nHe sighed dramatically. \"I suppose I've got to do work too. Damn you with your vigorous work ethic.\" He looked at the stack of albums in her hand. \"What are you working on, anyway?\"\n\n\"Oh...\" she started. \"It's not actual work; I'm just making a playlist.\"\n\n\"Really?\" he asked. \"What kind of playlist?\"\n\nTegan shrugged. \"Just a random one. Why are you so intrigued? Don't you have work to do?\"\n\n\"I'm nearly finished writing this review of GTA4.\"\n\n\"That's cool. I've never played any of them before.\"\n\nDerek's eyes widened. \"Seriously? You've never played Grand Theft Auto?\"\n\n\"Is that a bad thing?\"\n\n\"Do you even play video games?\"\n\nShe shot him a look. \"You're looking at the girl who owned at Super Mario and Sonic.\"\n\nHe scoffed. \"Old-school gamer, huh?\"\n\n\"Damn straight.\" She put her hands on her hips. \"You got something against us old-heads?\"\n\nDerek laughed. \"Not at all. In fact, I still have my Super NES. I think a lot of the newer games are pretty cool.\"\n\n\"What's your favorite game?\"\n\n\"Jeez, that's like me asking you what your favorite song is.\"\n\nTegan smiled. \"Touch\u00e9. But answer me this: who would win in a Thunderdome-type battle...Lara Croft or Sonya Blade?\"\n\nHe scoffed, setting his laptop on the opposite side of the couch. \"No contest. Sonya Blade would kick Lara's ass. The bicycle kick alone would set those enormous boobs quivering in fear.\"\n\nHer laughter was loud as she took off her headphones. \"Good answer, Ryan. Sonya Blade was my hero back in the day. One of the most badass females in Mortal Kombat.\"\n\nHe nodded. \"For some reason I pictured you as a Tank Girl-type character.\"\n\n\"She was cool. But I seriously am not feeling shaving my hair, or that whole making out with a mutant kangaroo man.\" Tegan straddled his lap. \n\n\"Good thing,\" he said. \"Otherwise I'd be out of a job.\"\n\n\"Do you realize how incredibly random our conversations are?\"\n\n\"I have realized that fact, yes. Do you realize how fucking hot you are right now?\"\n\nTegan waved him away. \"You're just sayin' that because you want some.\"\n\nA guilty grin played on his lips. \"True. It has been nearly four hours.\"\n\n\"You are ridiculous,\" she said chuckling. \"You've got work to finish, don't you?\"\n\nHe shrugged. \"Work can wait. I need a distraction.\" His hands cupped her ass and rocked her hips towards him. \"Hello, distraction.\"\n\nShe giggled softly, something that surprised her. It was a high-pitched sound; she used to make fun of girls that did stuff like that. And now you're one of them, she thought. \"I know there's going to be thousands of little gamer geeks who are going to be severely disappointed that there aren't any updates on their favorite website.\"\n\nDerek sighed dramatically. \"Damn, you are so right. The legions of nerds depend on me and Ryans do not disappoint their fans.\" He pushed Tegan off gently. \"Get off me, you scarlet woman. I've got work to do.\"\n\nTegan went back to sorting her albums while Derek reluctantly returned to his computer. They were quiet for several minutes when she let out a loud gasp. \n\n\"Hot damn, I finally found it!\"\n\nPushing his frames further up on his nose, he peered at her curiously. \"Found what?\"\n\nTegan waved the album triumphantly. \"Only one of my favorite records ever!\"\n\n\"Come again?\"\n\nShe sighed. \"I had a copy of Yaz's album Upstairs at Eric's, but I couldn't find it for weeks. I borrowed Ducky's from the store that night when I DJ'ed at the Romper Room when we first met and had all intentions of looking for mine later on but I've been kind of distracted.\" There was a sly grin on her pretty face. \"And now here it is and it's so damn awesome!\"\n\nDerek grinned as she practically hopped from one foot to the other in excitement. \"That's cool, Tegan. But am I supposed to know why that's so important?\"\n\nThe look she gave him made him feel incredibly sheepish. \"Why this is import...\" she huffed loudly and grabbed her music player. \"Derek Ryan, for shame. Upstairs at Eric's boasts only the greatest love song of all time.\"\n\nTegan sat back on his lap and handed him one of the earbuds before putting the other in her ear. \"Listen to this,\" she said and she pressed play.\n\nDerek was silent as the opening melody burst through the tiny speakers. He had heard the song before, maybe on the radio as an old flashback tune or in the background at a bar. Listening to it now was different. But then again, most things with Tegan were that way. Her eyes were closed and felt free enough to peruse her features. Her long dark lashes fanning out over the tops of her cheeks, the thick layer of black liner on her light eyes giving them a more dramatic look. She was humming along softly with the song; she had a really good voice. \n\nHe closed his eyes too and allowed the song to wash over him completely. Tegan was right; it was really good, in that electro 80s way. \n\nAll I needed was the love you gave All I needed for another day And all I ever knew Only you\n\nThe song faded out as Tegan removed the bud from her ear. \"God,\" she sighed. \"I absolutely love that song.\"\n\nDerek nodded. \"I do like it. I've heard it before but never really paid much attention to it.\"\n\n\"It's such a beautiful song. That's how love songs should be, you know? Sparse and quiet, but so sweet and emotional you can't help but want to play it. It's the stuff mixtapes are made of.\"\n\nHe smiled. \"You really like this song.\"\n\nTegan nodded. \"I can remember sitting in my room when I was like ten or twelve listening to the tape over and over. I was going through a big 80s music phase, you know, when I was still in love with John Cusack and I used to think my very own Lloyd Dobler was going to stand outside my window blasting this song through an old-school boombox. For me, that is the ultimate 'I Love You' moment.\" Her light brown eyes stared wistfully into space. \n\n\"Wow, you really are cheesy.\"\n\nShe shoved Derek playfully. \"I'm serious, jerk! 'Only You' is a very important song, the ultimate ode to unrequited nerd love.\"\n\nHis arms wrapped around her waist, rocking her closer to him. \"Tegan, your obsession with music is so cute.\"\n\nHer dusky lips formed a small pout. \"It's not an obsession per se. I just...music has always been there for me, you know? I can always count on songs to get me through the crazy parts of life.\"\n\nDerek nodded. \"That's understandable. But answer me one question: can music do this?\" He kissed her gently, letting his tongue slide inside her warm mouth as he pressed her tightly to his chest. \n\nTegan groaned, her fingers cupping his face, beckoning to kiss her deeper, wanting to feel all of him at the same time. \n\nHe pulled away reluctantly, gasping for air. \"Damn girl,\" he breathed. \n\nShe smiled. Her heart was pounding furiously as the rest of her body felt deliciously on edge. \"Are you almost done with your work?\" She kissed his neck, sucking the soft skin between her teeth. \n\nDerek's grip on her thighs tightened as she ground herself into his cock. \"Fuck,\" he groaned. \"I'm nearly there.\" He wasn't sure if he was talking about the article anymore. Her touch was slowly driving him crazy; her movements were slow and deliberate and he wondered what spell she possessed to make him so anxious from just a single look. \n\nTegan smiled against his neck. \"Maybe I should let you finish,\" she whispered. \n\n\"Maybe you should stop being such a tease,\" he replied, his voice strong with faux gruffness.\n\nShe giggled. \"Aww, poor baby. I promise I'll make it up to you soon.\" Rubbing his cock gently, Tegan rose from the couch and went back to organizing her music. Derek sighed loudly, his finger running through his dark curls. \n\nHis ringing cell phone stopped the stream of curses threatening to break free. \n\n\"Yeah?\" he answered somewhat rudely.\n\n\"Well, answer the phone like that and a girl will think you don't wanna talk to her.\"\n\nDerek sighed, his erection rapidly deflating. \"Hey Care, what's up?\"\n\n\"Nothing, just thought I'd take you up on that offer of coffee.\"\n\nHe didn't see the point of reminding Carrie she was the one who suggested meeting for coffee and not the other way around. Carrie wasn't big on details. \"Um, I'm kind of busy right now, Carrie.\" He watched Tegan who bustled around the room, humming softly and trying to act as if she wasn't listening.\n\nCarrie's soft chuckled rang loudly through the phone. \"Oh come on, Ryan. I'm sure you can be away from the missus for just an hour.\"\n\nHis eye twitched at her vague dig at his level of involvement with Tegan. He knew she wasn't going to give up until she got her way. \"Alright. I'll meet you in fifteen.\"\n\n\"Great. Let's go to that place on 13th Street. You remember the one, right?\"\n\nDamn, she was good. Rio's on 13th was where he took her when they first started hooking up. In fact, it was one of the places her father owned. He had discovered that little tidbit when she pulled him into the upstairs office for a hot makeout session. Another loud sigh. Part of him was sure this was going to bite him in the ass later on. But again, he was never one to be reasonable. \"Rio's it is. See you in a bit.\"\n\nHe snapped his phone shut. Fuck fuck fuck, he thought. \n\nTegan stared at him curiously. She knew who was on the phone, and from the look on his face he wasn't too happy to hear from her. That made Tegan smile. She was sure something happened between Derek and that Carrie girl, but she wasn't going to push the issue. It's not like you're really dating him, her brain reasoned. Still, the thought of Derek running to her simply because she called kind of irritated her. \n\nShe stacked the last of her albums. \"Done!\" she declared happily. \"I take it you're going out?\" Derek was quiet, his brain trying to process the meaning behind her words. Finding no sarcasm or hidden meaning within them, he nodded. \"Carrie invited me to coffee. I forgot I made plans with her before.\" He watched her for any signs of the usual suspicion. Tegan was determined to remain cool. She wasn't going to be that girl who hounded a guy about his every move. No, she would just play it cool.\n\n\"It's no problem,\" she said, a small smile on her lips. \"You should definitely go and hang out with your friend.\"\n\nA dark eyebrow raised in question. \"Seriously? You're not mad?\"\n\n\"Why should I be? It's not like we had concrete plans.\" She kissed him, allowing her tongue to play gently with his. She would be lying if she said she wasn't giving him something to look forward to when he saw her next. \"When you come back, I'll have something special waiting.\"\n\n********\n\nDerek stood outside Rio for a good five minutes before pushing the glass door and stepping into the caf\u00e9. Rio was an impossibly classy place, from the modern deco art to the clean lines of the classically cut furniture. Several dark wood tables and matching chairs were placed all around with small no-light candles and bowls of floating flowers as centerpieces. The sounds of a mandolin playing softly in the background added to the overall laidback feeling in the caf\u00e9. No wonder it was a favorite among artists and celebrities. \n\nThe place was only a little crowded for a Saturday afternoon. It was relatively quiet, a regular oasis in the midst of a noisy New York summer day. Derek spotted Carrie at a table in the middle of the room. The center of attention, he thought to himself. She was checking her Blackberry as a cute brunette wearing the Rio server uniform of black polo shirt and grey pants poured Pellegrino into her glass. When she saw Derek approaching, she stood up so he could see her outfit. \n\nHe had to admit, she did look good. Carrie was lethal in all things, especially in fashion. She was wearing white skinny jeans that clung to her slender hips and yellow stilettos that matched her yellow designer tank top. A teeny white summer blazer was folded carefully behind her on the back of her chair. She smiled brightly, her white teeth glowing in her olive-colored face. She removed the aviator sunglasses from her face as she opened her arms. \n\n\"Glad you could meet me,\" she said. \n\nDerek stepped into her arms. \"You know I couldn't pass up an opportunity to hang out with a friend,\" he said trying to emphasize the 'friend' part. \n\nCarrie's grin never faltered as she took her seat once more. \"Gloves down, Ryan. I'm not here to start anything.\" She flipped her long chestnut waves over her shoulder, the hot pink still evident in her hair catching the light in the room. \"Do you want anything? You know it's on the house.\" She snapped her fingers and the same bouncy brunette from before rushed over to the table. Everyone in Rio knew the boss' daughter was a hellbeast, and no one dared to cross Carrie DiValenti.\n\nDerek shrugged and smiled up at the server. \"I'll take an apple soda,\" he said. It was one of Rio's signature drinks. The brunette nodded and walked away quickly. He focused back on Carrie; her light green eyes studying him curiously. \"What?\" he asked.\n\nShe smiled again. \"Nothing. I'm just glad I get to hang out with you before you leave.\"\n\n\"Carrie, I'm not leaving until Thursday. I definitely would have called you before then.\"\n\nHer slender nose wrinkled. \"Yeah, right. Not after the way I behaved at your party.\"\n\nDerek flashed the brunette a smile as she set down his drink. The apple soda was mixed with top shelf rum in a tall glass with slices of granny smith apples floating inside. He sipped from the long black straw and stared at the beautiful girl in front of him. She couldn't possibly be apologizing. That just wasn't in DiValenti style. \"Do my ears deceive me?\" he joked. \"Can it really be Ms. DiValenti admitting she was...wrong?\" He gasped in mock surprise. \n\n\"You are such an ass,\" she said even as she cracked a smile. \"But that's what I love about you.\" Her face turned serious for a moment. \"You were right, you know. I was jealous.\" Her green eyes stared into his navy blues. \"I still am.\" She sighed. \"You and I...we could've had something you know.\"\n\nDerek felt his eye twitch yet again. Here was the conversation he didn't want to have, dancing right in front of him. \"We just didn't work out, Carrie. It wasn't like we were even in a relationship.\"\n\n\"Maybe because you didn't give us a chance.\" Her light green eyes gazed at him. \"You just left and gave me some shit excuse about 'not wanting to ruin the friendship'. You could have at least given me the opportunity to tell you how much you meant to me.\" \n\n\"Carrie,\" he started. He couldn't tell her the real reason why he left. How Angie had talked him out of continuing to hook up with her. In the back of his mind, he knew nothing good would come from it. It might have made him an asshole, but their sex was convenient, a sure thing he could count on every time he was in the City; he didn't realize how much she had invested in him, the feelings that had grown. It was all just casual fun, right? All at once he felt like an ass. \"I didn't realize.\"\n\nShe scoffed, a bitter sound that added another stab of guilt to his conscience. \"No, you didn't.\" Carrie shook her hair out and sighed, a loud whoosh of air pushing from her mouth. \"You know what? Let's just drop it.\" The flash of something Derek recognized as hurt flickered briefly in her eyes before it was replaced by a demure smile. \"Let's catch up, eh?\"\n\nDerek nodded. \"Okay. How's the family doing?\"\n\n\"Not too bad. The boys are the same assholes. Daddy's doing the business thing. He always talks about your awesome domino skills.\"\n\nHe laughed, thinking about the time he spent the day at the DiValenti home on Long Island and played dominoes with Carrie's father instead of doing research for the site. He considered it time well spent, as Robert DiValenti was a pretty good opponent. \"Yeah, tell Rob I still owe him a beatdown. How's the step-monster?\"\n\nCarrie rolled her eyes. \"A bitch as usual. Can you believe the other day she tried to tell me I was spending too much money on 'frivolous things'? I tried to explain to her that dropping five hundred dollars on a cookware set is an investment. I'm a fucking chef, not some Podunk housewife!\"\n\nDerek chuckled loudly, his dark curls shaking. \"Carrie, she might be right. That is a little steep, even for you.\"\n\n\"Nonsense. She just thought I was spending her money. Oh wait, correction: my father's money. But I bought it as a gift to myself, with my money from MY job. I don't think that crazy bitch could say something like that.\"\n\n\"True,\" he nodded. Robert DiValenti, though a smart businessman, was not lucky in the love department. He was currently on wife number three. His first wife Donatella he married as a young man while still living in Sicily. Together they had five sons: Carmine, Michael, Paul, Cole, and Nic. She had died in a car accident shortly after Nic was born. Carrie was the product of his second \"marriage\". During his marriage to Donatella, he had been having an affair. ",
        "Carrie's past was quite scandalous. Her mother Ella had been ballet dancer whom Robert had fallen madly in love with. She had been a great beauty; a runaway from New Orleans who came to New York to pursue her dancer dreams, Robert fell for her light caramel skin and startling light green eyes. They had a passionate affair and when Carrie was born, he showered her with gifts and love. \n\nAround this time, Robert was rapidly moving up the chain in organized crime. Though he wasn't a major player in the mafia, his various connections gave him a boost in the business world, helping him to acquire licenses for his business ventures. He was technically legitimate, as the feds could never exactly prove that he was associated with any of the major families. Still, some people had grudges against the suave businessman and some say his wife paid the ultimate price for his success. The car Donatella was in when she died, the brake line was cut. \n\nCarrie's mother left to return home to New Orleans under threat of disownment from her own wealthy parents. She left young Carrie with her father. Robert was a widow with two four young boys and two infant children to care for. For many years, Robert had worked hard, keeping track of his business ventures while caring for his brood. Carrie was his light and joy and she was very close to her brother Nic, as they were the same age. When they were twelve, Robert married Maria, his current wife. \n\nDerek couldn't believe Carrie's life. It was seriously straight out of a soap opera. Her family was loaded and she suffered at times from the 'Poor Little Rich Girl' syndrome. When she had revealed to him the complications of her past, he felt incredibly lucky to have the stability he had in his life. Shit, the most he ever had to deal with growing up was breaking his leg when he was eight after falling out of a tree in his backyard.\n\n\"I know what you're thinking,\" she said, jarring him out his thoughts. \"My family is insane.\"\n\nThe corner of his mouth turned up in a half smile. \"No worries, babe. Everyone's family has a little batshit in 'em. That's what makes it special.\" He reached over to grasp her hand. \"I'm glad I came.\"\n\nCarrie flashed him a warm smile, a rarity for a DiValenti. \"I'm glad you came too.\"\n\n********\n\n\"Hey Audra, it's me. Listen, we're gonna have to cancel this afternoon. Nino scheduled a staff meeting for three and you know how those go. We should get together later though, tonight even. Wear that blue top I like. Bye babe.\"\n\nDrea snapped her cell phone shut. \"Well that's done.\"\n\nTeddy lowered his sunglasses and stared at her. \"You are so sad, Andrea.\"\n\n\"What?\" she asked innocently.\n\n\"You are leading that poor girl on. I don't know why you don't tell her you aren't looking for a relationship.\"\n\nDrea shrugged. \"She'll figure it out sometime. You know how I hate confrontations, especially with girls.\"\n\nTeddy shot her a look. \"Pathetic.\"\n\n\"Whatever, Teddy. Look can we just enjoy our afternoon out please?\" She flipped her bright red hair over her slightly tan shoulder. \n\n\"Sure thing, sweets.\" Teddy shifted the set of bags in each hand. \"Where to next?\"\n\nDrea shrugged. \"Dunno. Maybe we should stop by that one store Tegan loves so much and pick her up a couple of tees.\"\n\nTeddy nodded as they moved easily through the almost crowded street. \"That'd be cool. Some cute summer tops would do her good. Have you heard from her lately? I haven't seen much of her since that day at her loft.\"\n\n\"A couple of phone calls and texts. She did a gig last night at the Romper Room but I was working the early shift that night and didn't get to catch up with her.\"\n\nTeddy grinned. \"Seems like little Ryan's been keeping her very busy. Note to self: call Tegan later on.\"\n\n\"Don't you have a job to do?\" Drea asked, referring to his new project. \n\n\"Pshaw,\" was all he said. \"Doing a series for some stuffy museum, or a night out drinking with good people?\" Teddy grinned. \"Besides, my best work is done under the influence, but that's a trade secret.\"\n\nDrea pretended to zip her lips. \"I'll take it to my grave.\" Her cell buzzed loudly. \"Oh shit, text message from Audra.\" She stopped in front of a glass paneled caf\u00e9 to read the message. \"She's totally fine with the reschedule.\"\n\nTeddy scoffed and wiped the sweat off his brown. \"Of course she is. She's jonesin' for some Drea booty and will do anything to get it. How else do you explain how she bought that flimsy ass lie about a bar meeting in the middle of the damn day?\"\n\nDrea laughed as she typed back a response. \"Well, let's just say Audra isn't the brightest crayon in the box. But she is hot.\" Teddy sucked his teeth and turned back to his reflection in the glass. He adjusted his stark white v-neck designer tee, making sure his large belt buckle showed. His milk chocolate skin shone in the bright summer sun and he was thankful for his shades; it was damn hot outside. Pushing his sunglasses on top his head, Teddy stared up at the sign in the window. Rio's. He had heard of this place before. \n\nHe was about to turn to Drea and see if she wanted to go inside when something caught his eye. The woman in the middle of the caf\u00e9. She was that Carrie chick from Derek's party. She was sitting at a table facing the window and was definitely there with someone, although the server was blocking his view. \"Move bitch,\" he hissed loudly. When the brunette hopped away, giving Teddy a clear view, he gasped loudly. \"You've got to be shitting me!\" he exclaimed. \n\n\"What's wrong?\" Drea asked. \n\nHe waved his arm furiously, beckoning her closer. \"Look at that!\" he pointed to Carrie. Drea followed his finger. \"Oh, there's that Carrie chick. So what?\"\n\nTeddy harrumphed irritably. \"No, not that bitch although she's dressed fabulously. I'm talking about who she's with.\"\n\nDrea looked at the guy sitting across from Carrie. Shaggy black curls, Wiry frame. It couldn't be. \"Is that....DEREK?\"\n\nTeddy nodded. \"You bet your ass it is.\"\n\nThey watched as Derek grasped Carrie's hand in his. Her fingers stroked his cheek, an intimate act that sent Drea's blood boiling. \"What the...oh that bitch is definitely going the right way for a face-punch!\"\n\n\"Andrea wait!\" Teddy exclaimed, barely grabbing hold of her before she went into the caf\u00e9. \"You can't go busting up this kind of place in a bitch-fit. Girl, have some damn class.\"\n\nShe wrestled from his grasp. \"Fine. But I swear, if I see that girl again I'm not responsible for what I do.\" She started walking brusquely down the street, pushing past people.\n\nTeddy practically broke into a run to catch up with her. \"Fine.\"\n\nDrea huffed loudly. \"What the hell is he doing in there?\"\n\n\"Well, they are friends Drea.\"\n\n\"Correction, Theodore. They are former fuck buddies and that girl is clearly still into him. This shit is getting out of hand.\"\n\n\"What are you talking about?\"\n\nDrea suddenly stopped. \"All of this,\" she snapped, spreading her arms wide for emphasis. \"This entire situation. I've kept my mouth shut out of respect for Tegan and the fact that she seems so happy, but I'm about to lose my shit.\"\n\n\"Drea,\" Teddy said slowly. \"I thought we agreed to stay out of Tegan and Derek's business. We said we'd let him tell Tegan everything on his time.\"\n\n\"That's the thing, Teddy. What kind of friends would we be to allow some British Don Juan to play our friend? Tegan, of all people. She's so innocent, Teddy and much too good for Hugh Grant over there and his bumbling yet charming buffoon act.\"\n\nTeddy was silent for a moment. While he agreed with Drea, he still felt like Derek was decent. He was just behaving the way normal twenty-four year old guys do: like an ass ignorant to his actions. \"Andrea, let's go talk to Tegan. I think that's the best we can do for now.\"\n\n********\n\nTegan's phone buzzed loudly on the table next to her bed. She groaned, stirring from sleep. She had only planned to take an hour nap after Derek left to meet Carrie and that was nearly two hours ago. Sitting up, she yawned and rubbed her eyes. The phone still buzzing, she picked it up. It was a text message from Drea wondering where she was. When she flipped open her phone, she noticed a couple of missed calls from Drea. \n\nShe was about to call her back when the phone rang in her hand. \n\n\"Hello?\"\n\n\"Hey gorgeous.\"\n\n\"Derek?\"\n\n\"Yeah, it's me.\"\n\n\"What's up? Did you call earlier?\"\n\n\"I meant to, I just got caught up in some things back here at the hotel.\"\n\n\"Oh okay. Did you finish your article?\" \n\nHe chuckled. \"Yeah, I just turned it in to Matt and Jake. I'm all yours now.\"\n\nTegan smiled. \"Mmm, I like the sound of that.\" She leaned back on her pillows. \"Where are you?\"\n\n\"Why?\" he asked teasingly. \"Miss me?\"\n\n\"Well let me put it this way: what I'm planning to do right now, it's fun by myself but better with you.\"\n\nThere was a short silence on the phone before he spoke again. \"You sure know how to make a man feel wanted, luv. What would you do to me if I was there right now?\"\n\nTegan felt her cheeks flush. She had never done something like this before; dirty talk always made her think of some sleazy late night commercial with those plastic bimbos. But somehow this was different. This was Derek. \"Derek,\" she whispered shyly. She heard the soft groan from the other end of the phone. \n\n\"Tegan J, you are such a little tease.\" His hearty laugh rang in her ear. \"Maybe next time, eh?\"\n\nBreathing a sigh of relief, she smiled. One hurdle at a time. \"I'll make it up to you baby, I promise.\"\n\n\"You can start by buying me a drink tonight. I'm taking you out.\"\n\n\"Really?\" she asked excitedly. \"Where are we going?\"\n\n\"I dunno. It's a surprise for us both. Let's get everyone together. I'll invite Matt and Jake and you bring Drea and Teddy.\"\n\n\"Sounds good. Do you want us to meet you downtown at your hotel?\"\n\n\"That'd be great. See you soon, babe. Wear something smashing so I can show you off.\"\n\nTegan closed her cell phone and picked up her cordless to dial Drea and Teddy's place. The phone rang once before she heard Teddy on the other end. \n\n\"Teddy?\"\n\n\"Tegan?\"\n\n\"Hey, what's up? I saw that Drea texted me.\"\n\n\"Oh yeah, about that. We were just wondering where you were.\"\n\n\"Asleep. I went to take a nap after Derek left to see Carrie.\"\n\n\"Oh,\" Teddy remarked. \"So you knew about that?\"\n\n\"Yeah,\" Tegan said slowly. \"Wait, did you know about that?\"\n\n\"Um, kind of. Drea and I saw them when we were out earlier.\" \n\nThere was a hesitance in his voice which sent a warning flag waving. \"Oh...really?\" she asked. \n\n\"Yeah. Well, anyway what's up? What are we doing tonight?\"\n\n\"Well, Derek wants all of us to hang out tonight. We're gonna go out drinking or something.\"\n\n\"Sounds like fun. Where should we meet you?\"\n\n\"Tell you what, why don't I meet you guys at your place? It's easier to catch a cab or the train from there.\"\n\n\"Cool. See you in like what, an hour?\"\n\nTegan checked her watch. It was nearly eight PM. \"Yeah, that sounds about right.\" She was about to hang up the phone when she heard Teddy shout.\n\n\"Wear whatever, T! You're changing it as soon as you get here!\"\n\n********\n\nNearly an hour and a half later they were sitting in Paddy's, an Irish bar located in the heart of the city. Teddy and Tegan had gone to find a table in the midst of the crowded place while Drea went to score drinks. Tegan pulled up her jeans before climbing onto the stool. \"God, I hate seats like these\" she grumbled. \"I'm always afraid my crack is hanging out for the whole world to see.\"\n\nTeddy laughed as he sat down across from her. \"I'm sure there are many people in here who loved to see your crack.\"\n\n\"Shut up,\" she replied, a giggle spill out. She smoothed down the brand new shirt she was wearing. \"Thanks again for the shirt, Teddy. It's really cute.\" \n\nTeddy waved her praise away as if it were a fly. \"No worries, honey. There was a huge sale at Aqua today. Just think of it as an early birthday gift.\"\n\n\"Teddy, my birthday is in October.\"\n\n\"So it's mad early. You deserve it.\"\n\nTegan smiled. The shirt was cute. It was the same blue as Derek's eyes with little gold stars sprinkled all over. It molded over her ample cleavage and was long enough to cover her hips. It was a rarity to find a shirt that made her feel sexy and comfortable at the same time. But then again, that was Teddy; he always looked out for her. \n\n\"Whew!\" Drea called as she plopped down on the stool next to Teddy. \"That bar is a fucking madhouse!\" With a grunt, she lugged the large bucket of beers onto the table. \n\nTegan let out a low whistle. \"Jesus, Drea how much you planning on knocking back?\"\n\nDrea grinned as she used the opener on her keys to take the top off one of the bottles. \"Hey, one must always be prepared.\" She did the same to two other bottles and handed them to Tegan and Teddy. \"Alright, let's get this night started.\"\n\nThey had barely finished one beer when Derek appeared with Matt and Jake in tow. \"Hey guys!\" he called brightly. Grabbing Tegan by the waist, he lifted her off the stool and planted a large, wet kiss on her cheek. \"How's my sexy girl doing?\"\n\nTegan giggled and tried to release his death grip on her. \"I'm fine, Derek.\" She looked at Matt and Jake who waved hello and sat down. \"Hey guys.\"\n\n\"DJ Girl!\" Matt called to her. \"Cool place. Kind of a madhouse tonight, innit?\"\n\n\"It's Bucket Saturday!\" Drea said excitedly. \"It's always crazy!\" She handed Matt and Jake a beer. \"Drink up boys! We're doing some damage tonight!\"\n\nDerek still held onto Tegan. Leaning forward, he moved to her ear. \"I can't wait to get you alone,\" he whispered. \n\nTegan noticed he was slurring a little. \"Derek, are you already drunk?\"\n\nHe smiled his usual half-grin. \"I might be a lil' buzzed. Not drunk. I'm gonna need a clear head tonight.\"\n\n\"Were you drinking earlier with Carrie?\" Tegan hoped that didn't sound like a jealous accusation. \n\nDerek shook his head. \"Nope. I just started maybe an hour ago.\"\n\n\"Why?\"\n\n\"Derek, you didn't tell her the good news?\" Jake asked, tipping the bottle to his lips. \n\n\"Tell me what?\"\n\n\"We were celebrating earlier,\" Jake said, a grin on his ruddy face. \"We got a major offer from some bigwig who wants to buy our company.\"\n\n\"That's great!\" Teddy exclaimed. \"Congratulations guys!\"\n\n\"Hear hear!\" Matt said, raising his bottle. Drea, Teddy and Jake followed suit, clinking bottles and drinking. \n\nTegan stared at Derek, who had released his grip to sit on the stool next to her. \"Are you alright with this, babe?\" she whispered. \n\nHis blue eyes stared back at her. \"I don't want to think about it,\" he said, shrugging his shoulders. \"Let's not talk about deals. The only thing I want to do is hang out with my mates and my best girl at my side. Now drink up, lads!\" he whizzed around. \"Who the fuck is buying the shots?\" ********\n\nDerek was having a good time. At least that's how it looked from the outside. The offer to buy NerdsUnite! had really thrown him off guard. After his afternoon with Carrie he went back to the hotel to finish his article. He had received a phone call from Simon Slade, some bigwig out in Los Angeles interested in the company. Apparently Slade worked for the same conglomerate that had recently taken over another, larger, networking community. He liked what he saw at NerdsUnite! and was very pleased to meet the Geek Trifecta. \n\nJake had been his usual self, thrilled but wondering about the money aspect. Matt was the sensible one of the three. He was also excited, but also hesitant about what the offer meant. Derek was unsure of how he felt. The company was their baby. It just seemed wrong to just part with it. So, instead of voicing his opinions he kept quiet and celebrated with his friends by cracking open the hotel mini-bar. \n\nSlade wanted the Trifecta to come to Los Angeles to meet with the rest of his company, another reason Derek was so uneasy. Slade was flying them out on Monday, nearly a week earlier than he planned to leave for the West Coast leg of the NerdsUnite! tour. It meant that he'd have to leave New York early. More specifically, he'd be leaving Tegan earlier than he planned. \n\nHe wasn't sure how he felt about that. On one hand, man she was special; completely unlike any other girl he knew. She could carry a conversation and he wasn't constantly worrying whether or not she was impressed by him. She talked to him like he mattered, like being Dex Ryan's little brother wasn't everything to know about him. But there were major drawbacks to the situation. He didn't live in New York, and being with her was more like being on a vacation or honeymoon; sooner or later he'd have to go back to the real world. \n\nDerek shook his curls in an attempt to clear his head. He tried to bring his focus back to the group of people in front of him. They were clearly having a much better time. He felt Tegan's hand rest on his thigh as she gave him a reassuring rub. He smiled at her. She really is fucking great, he thought. Draining his beer, he rejoined the conversation. \n\n\"For fuck's sake!\" Matt bellowed. \"This music is shite!\"\n\nTegan grinned. \"Well I can't be the DJ everywhere, Matt.\"\n\n\"I'll say,\" Jake said. \"Speaking of, Derek tells us you're really good with your hands.\" His green eyes gave her a lewd wink.\n\n\"Oh really?\" she asked, turning to look at Derek who suddenly became very interested in a bottle cap. \"Well if Derek keeps running his mouth, he'll find himself on a lot more solo missions.\"\n\nThe whole table erupted in laughter. \n\n\"That's my girl!\" Drea called out. \n\n\"Somebody better call an ambulance for that burn!\" Matt said gleefully. \n\n\"Oh knock off, you prats!\" Derek said. \"I never even told you anything Jake, you wanker.\"\n\nJake grinned evilly. \"I know, mate.\"\n\nTegan kissed Derek lightly. \"Come on, babe. He's just having a go at you.\" \n\n\"Well ha ha.\" He got up. \"I'll be right back.\" \n\n\"What the hell is his problem?\" Jake asked as Derek pushed his way to the bathroom. \n\nTeddy shook his head. \"Must be that time of the month.\"\n\nWhen he got to the bathroom, Derek splashed cold water on his face. \"Get it together, Ryan\" he said. His foul mood couldn't be helped, but he tried to gloss over everything. No use in everyone else's night being ruined. Giving himself a once-over in the mirror, he headed back to the door. As he stepped out of the bathroom he collided with someone. \n\n\"Oh shit,\" he remarked, righting the person. \"Sorry about that, mate.\"\n\n\"No problem,\" the woman said. \n\nDerek grinned. \"Oh, Drea it's you.\"\n\n\"Yeah, me\" she replied. She was holding on to the wall, swaying slightly.\n\n\"You okay?\" he asked. \n\n\"I'm fine. Just a lil' tipsy.\" She giggled softly. \"Having a good time?\"\n\n\"Sure.\"\n\nDrea snorted loudly. \"Sure. You're a lousy liar, Little Ryan.\"\n\nDerek shot her a look. \"I think I'm gonna go back to the table.\"\n\n\"Yeah, why don't you do that?\"\n\nHe crossed his arms, the frustration evident on his handsome face. \"What is your problem? I thought we were cool.\" A slight frown crossed her pretty face. \"We were, until you started acting like an asshole.\"\n\n\"What are you...\"\n\n\"I know about everything, Derek.\"\n\nHe was shocked into silence. \"What...what do you know?\"\n\nDrea scoffed and leaned against the wall for support. \"About Carrie and your whole friends with benefit deal. And your British girlfriend with the rockstar daddy. You know she's been to rehab for a coke habit?\"\n\nDerek felt as if he'd been slapped. He tried to grasp the words she was saying, but it felt he was getting the spins and it wasn't all from the alcohol. \"Are you going to tell her?\"\n\nShe laughed loudly. \"Is that all you're going to say?\"\n\n\"I just...you don't know the whole story, Drea. How did you even know about Lottie?\"\n\n\"Your friend Nina told me the night of your party. And about the coke thing...I hope you really didn't believe you were the only one that knew about it. Come on, Ryan. She was just in the tabloids the other day about doing lines off the table in a London club.\"",
        "He could have smacked himself. Of course the rest of the world would know about Lottie's issues. \"Drea, you have to understand something. That thing with Carrie is ancient history. And as for Lottie, we're no longer together. Even when we were together we weren't really with each other.\"\n\nDrea shot him a suspicious look. \"Seriously?\"\n\n\"Yes,\" he replied. \"After Tegan and I slept together, I called her to end things. But before I left on my trip I'd been planning to break up with her for good.\" He didn't feel the need to mention that while he was pouring out his heart to Lottie she had fallen asleep on the phone.\n\n\"What about Carrie? Teddy and I saw you two at Rio today. You were holding her hand.\"\n\n\"It was innocent, I say. We were trying to resolve our issues. She even apologized for being rude to Tegan at my birthday party.\" His blue eyes looked at her pleadingly. \"Look, I don't expect you to fully trust me. But believe me, it's all true. I would never do anything to harm Tegan.\"\n\n\"You had better not, Ryan.\" She jabbed a finger into his chest and he tried not to wince. \"Or else there will be hell to pay. She's a good girl, Derek which is a rarity. Don't fuck things up.\" Drea shoved him aside and walked into the ladies' room, leaving a stunned Derek in her wake. \n\nHe sighed loudly. This shit was becoming too much. It was time to come clean.\n\n********\n\nBy the time they arrived back at Tegan's apartment, Derek was pretty much sober. After Drea's revelation, drinking himself into a stupor seemed like the complete opposite of a good idea. \n\nTegan had noticed his seemingly withdrawn behavior. She chalked it up to his shock about the offer from NerdsUnite! and felt like it wasn't her place to push it unless he initiated conversation. \n\nUnlocking the door, she headed straight into her bedroom, peeling off her shirt as she walked. She turned around to watch him. Derek was still standing by the door, hands shoved into his pockets, a dark eyebrow raised curiously at her. He watched her, clad in only her jeans and a violet bra that highlighted the deep brown of her skin. \n\nA sly smile crossed her face as she turned back towards the bedroom, giving him a lovely view of her curvy hips and round ass. \"Are you coming?\" she asked. \n\nHe followed her slowly, stepping into the bedroom. Tegan held out her hand beckoning him closer. She grabbed his striped blue button down and pulled him closer. Reaching up on tiptoes, she kissed his lips softly, her tongue lightly caressing his. Derek wrapped his arm around her waist, her body pulling tightly against his. She kissed him harder, a soft sigh escaping her lips. Nimbly, her fingers unbuttoned his shirt and pushed the material away from his body. \n\nTegan boldly kissed his bare chest, her tongue lingering on his flat pink nipples. Derek groaned loudly, his head tilting back as his fingers wove their way into her hair. There was something different about her tonight. She was stronger, more aggressive...and he kind of liked it. \n\nKneeling down, she unbuckled his jeans and slid them down. She worked silently, making quick work of his boxer briefs. He stood completely naked in front of her. Tegan pushed Derek back, setting him down on the bed. Gingerly, she stepped out of her jeans, kicking them to the side as she reached behind to unclasp her bra. Derek breathed sharply as her beautiful breasts bounced free, her dark nipples already hardening. Tegan pulled down her black panties before straddling his lap. When her soaking pussy came into contact with his half hard cock, a low moan tumbled from her lips. \"Jesus,\" she moaned. \n\nGrabbing his face, she kissed him once more before taking his earlobe into her mouth, sucking on the fleshy skin. \"I've thought about you all day baby,\" she whispered. Her hips began to dance slowly, her pussy rubbing against him. Derek's hands went to cup her ass, his fingers digging into the soft skin. \"Been so wet,\" she continued, her hips moving faster now. Rubbing against him was sending sharp sparks all over her body. \"All day thinking about you.\"\n\n\"Fuck Tegan,\" he said, his voice hoarse. \"I need to have you, baby.\"\n\nTegan's head tilted as she arched her back, her hips still rolling. Derek leaned forward, taking a dark bud into his mouth. She let out a low whimper when he bit down gently. She lifted up a little before sliding him inside her. Derek moaned loudly. \"Ride me,\" he commanded. \n\nHer hips moved again. Her pussy gripping him so tight it was almost painful. Her breath was coming in heavy gasps and she felt like she could come just from the shivery sensations rippling through her body. Tegan stared deeply into his blue eyes before kissing him hard. When she squeezed and held his cock deep inside her, Derek growled. His teeth nipped bluntly at her plump bottom lip. \n\n\"Dammit,\" he groaned. She began to bounce on his cock, her breasts moved rhythmically. He moved against her, every thrust drawing little cries of ecstasy from her lips. When his cock hit her spot in the perfect way, she bucked, her fingers tightening their grip on his shoulders. \"Right there,\" she breathed. \"Don't stop.\"\n\nDerek grabbed a handful of her hair and pulled, leaving her neck open. He kissed the nape of her neck, licking her salty skin and relishing her taste. She looked absolutely beautiful, her dark hair wild, her hips moving smooth like a dancer's. Everything about her turned him on. She was moaning his name now, a sound he could get used to. \n\nHer body began to tremble as her movements became more erratic. \"Come for me Tegan,\" he commanded. She let out a small scream and arched her back as she climaxed, her brown legs wrapping tightly around his waist. With a powerful thrust, he came with a grunt. Derek pulled her to him, cradled her to his chest as he fell back to the bed. \n\n\"Fuck,\" he breathed. \"Holy sweet fuck.\" She stroked his chest, her slender finger tracing the small flat nipple. His fingers twirled in her dark hair, pushing her sweaty bangs out of her eyes. She was pretty quiet. Normally after sex he couldn't get her to shut up. He wasn't used to the quiet. \"What's wrong, Tegan J.?\"\n\n\"I should be asking you the same question,\" she said. \"You seemed kind of down tonight.\"\n\nDerek sighed. She could still hear his heart pounding rapidly. \"Just got a lot on my mind, is all.\"\n\n\"Are you worried about this buy out deal?\"\n\n\"Mostly.\" He lifted her chin to look at him. \"Tegan, there's something I have to tell you.\"\n\n\"What's up?\" Her light brown eyes searched his face. There was a definite look of discomfort. \n\n\"Simon Slade, the bloke who's interested in NerdsUnite!...he wants me, Matt, and Jake to fly out to California and meet the rest of his company.\"\n\nTegan smiled. \"Is that all? That's okay. I mean you're leaving next Friday anyway.\"\n\n\"No, baby you don't understand. He wants us there first thing on Monday. We have to leave New York early Monday morning.\"\n\nHer smile faltered slightly. \"Oh.\" She sat up quickly, wrapping the sheet around her body. \"Seriously?\"\n\n\"I'm sorry Tegan J,\" he said. \"I don't want to leave so early...\"\n\n\"No, I understand. This is your work. You do what you have to do.\" She turned her back to him. She knew she was acting like a baby, wanting him all to herself. But she couldn't deny it, she had grown accustomed to him being around. Yes, she knew he couldn't stay forever. He had another life. But...fuck it was hard to explain. \n\n\"Tegan,\" he said softly. His lips pressed gently against her back. She smelled of sex and him. \"I'm sorry.\"\n\n\"Stop apologizing, you jackass.\" She smiled at him but it was almost a grimace. \"You and I, we're just having fun, right? We don't even live in the same country.\"\n\n\"Well jeez, don't make it sound like a business deal gone wrong.\" Derek pressed his cheek to her back, hugging her to him. \"Otherwise I'll start asking for a refund. I don't pay for shite jobs.\"\n\nTegan laughed loudly, her shoulders shaking with mirth. \"You are such an asshole.\" She sighed softly. \"So I guess this is our last night, huh?\"\n\nDerek was quiet for a moment. There was only one thought dancing around his brain. \"It doesn't have to be.\"\n\nShe turned to face him, surprise evident on her face. \"What are you saying?\" \n\nHis blue eyes sparkled as his impish lopsided grin returned. \"Come with me to L.A.\"\n\nHer brown eyes widened. \"Are you fucking serious?\"\n\n\"As Britney's mental state,\" he replied. \"Come on, Tegan J.! Sojourn with me to the land of fake boobs, orange skin, and meth addictions!\"\n\nTegan stared at him. \"Derek are you serious? I have...work, DJing and photography.\" She didn't want to tell him the other reason. The thought of leaving her life, even for a moment to spontaneously follow after a guy scared the balls outta her. \n\nDerek grabbed her arms. \"Tegan, answer me this: when was the last time you took a crazy ass leap or did something unexpected?\"\n\n\"Derek, since I met you I've been leaping off shit right and left.\"\n\n\"Okay, so what's one more thing? Do it, Tegan J. Let's do something else crazy.\" He could tell he was wearing her down. \"Sunshine,\" he chanted. \"Movie stars...swimming pools...\"\n\n\"Alright already!\" she exclaimed. \"I'll do it just to shut you up. I don't want to hear your Beverly Hillbillies accent.\" \n\nDerek grinned madly. \"So you'll do it? You'll come with me to L.A.?\"\n\nTegan nodded. \"Sure. What's one more leap?\""
    ],
    "authorname": "nerd4music",
    "tags": [
        "interracial romance",
        "interracial novella",
        "interracial drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/only-you-ch-04"
}