{
    "title": "Flowers for All Occasions",
    "pages": [
        "For more information on the characters in this story, please read the following: \n\nWhat Mother-in-Law Wants \n\nBadge of Betrayal \n\nClarissa Gets Served \n\nGrab Life by the Balls \n\nThe Ghost of Red River Falls \n\nDarla's Dilemma \n\nGetting Back to Square One \n\n***WARNING*** This is a long story. How do I know? Because I wrote the damned thing. If plot development, character development and dialogue are important to you, then read on. If not, don't waste your time, especially if you are just going to head to the comments and bomb me with 1-star votes. There is sex in this story but if you are looking for some quick jack-shack material, this isn't it! Move on! \n\n***WARNING #2*** This story deals with a couple of heavy topics - Post-Traumatic Stress Disorder and Islamic extremism. If reading these topics makes you feel uncomfortable, then please move on and skip this one. I won't even know so I won't be offended. As always, supportive comments and constructive criticism are always welcome. If you're just gonna throw hand grenades, move along. Go be a jerk on someone else's time. For the rest of you, I hope you enjoy my offering. - SB \n\nFlowers for All Occasions \n\nA Sheriff Pat Quinn Story \n\nI couldn't get to my Expedition fast enough but once there I turned the key, threw it in gear and slammed my foot on the accelerator. I reached down to the center console and flipped on the emergency flashers and siren. We had installed hands-free radio systems with Blue Tooth headsets in all of our department vehicles for just such an event as the one I was now involved in. I hoped it would make it easier for me to get control of the situation as I sped like a bat out of Hell towards the south side of Red River Falls. \n\n\"Dispatch, 17-01!\" \n\n\"17-01, dispatch. Go ahead.\" \n\n\"Dispatch, contact Minnesota Highway Patrol! Have them contact all sheriffs' departments on their side of the border and establish traffic control points on all bridges and roads leading in from this side! Make sure they understand that both subjects are armed and dangerous!\" \n\n\"10-4, 17-01. I have Minnesota State Patrol on point-to-point. Stand by for confirmation.\" \n\nI was headed to the location of the suspects' house and hoped like hell I might be able to catch a glimpse of them before they got too far away. If they were already on the Minnesota side of the border, it might be too late. There are a hell of a lot more highways and byways that they could get lost in than there were in our state. \n\n\"17-01, dispatch.\" \n\n\"Dispatch, 17-01! Go ahead!\" \n\n\"Minnesota State Patrol advises they have units in place on all bridges between Red River Falls and Fargo. Also, they advise that all bridges between Red River Falls and Cherokee Flats should be controlled within ten minutes. They are also asking if you want all border crossings manned as far south as Sioux Falls.\" \n\n\"10-4, dispatch! If they've got the personnel to do it, tell them to go ahead and shut it down! Contact the Border Patrol and advise all international crossings to be on the lookout as well, in case they break for Canada! Relay the vehicle info as soon as it comes across!\" \n\n\"10-4, 17-01. We have the vehicle info now and will send it via the net. Suspect vehicle is a black 2014 Mercedes E-Class sedan. Mason County plates Lincoln-David-Adam-Seven-Six-Five. Registered to Ibrahim Walad-Hammadi, age 28 with D.O.B. of 4-16-87. Secondary suspect is Muchtada Walad-Hammadi, age 26 with D.O.B. of 3-21-89.\" \n\n\"10-4, dispatch.\" \n\nI turned off Highway 120 and roared west on 25<sup>th</sup> Street Southwest towards a fairly affluent section of Red River Falls. The Hammadis lived on Fairway Drive, a long and winding cul-de-sac near the country club. As I pulled up to the front of the Hammadi's McMansion-style house, there were already several Red River Falls PD cars on site as well as Deputy Brian Kelley. Brian ran over to my vehicle as soon as he saw me. \n\n\"We just missed 'em, Pat! The father says they were just here, grabbed a couple of duffel bags and took off. He either doesn't know where they're headed or he's refusing to tell us! According to a neighbor, it looked like he was going to go with the sons but they took off as soon as they heard sirens! Red River PD is detaining the old man, for now! \" \n\n\"What about the mother?\" \n\n\"She's in the house, screaming and crying for all she's worth! Red River PD is still in the backyard with the girl's body and waiting for BCI!\" Even from my Expedition I could smell that putrid odor. \n\n\"Which way were they headed?\" \n\n\"One of the neighbors said they took off and headed east on 25<sup>th</sup> Street!\" \n\n\"Alright, let's get turned around and head towards 120 again!\" \n\n\"I'm right behind ya!\" \n\nI whipped the big Ford into a u-turn and nearly took out several mailboxes. I gunned it back down the cul-de-sac towards 25<sup>th</sup> street and turned east towards Hwy 120, which is also Broadway Avenue and the main north-south thoroughfare through Red River Falls. I was frantic, at this point, because I had absolutely no idea where the two men were headed and I was dreading the kind of threat they posed to the public. Fortunately, my luck was about to change. \n\n\"17-01, dispatch.\" \n\n\"Dispatch, 17-01. Go!\" \n\n\"We just received multiple 9-1-1 calls of a black four-door sedan traveling southbound on Highway 120 at a high rate of speed. Vehicle matches the description.\" \n\nYes! They were still on this side of the border! \n\n\"Good copy, dispatch! All units! All units! Converge on Highway 120 and prepare to stop! Be advised suspects are armed and extremely dangerous! Be prepared to use deadly force if necessary!\" \n\nI looked in my rear view mirror, just for good measure, to make sure Brian Kelley was still behind me as we turned south from 25<sup>th</sup> onto Highway 120. We both floored it with lights flashing and sirens wailing as we flew by the Auto Mile and headed south out of town. I had no idea what the specs were on a Mercedes E-Class but I knew enough about the quality of Mercedes in general to know that it was a fine brand of automobile. \n\nBoth Brian and I quickly kicked it up to 120 miles per hour as we headed south. I was driving my 2014 Ford Expedition while Brian was operating a 2015 Ford Taurus Police Interceptor Sedan, which had effectively replaced the venerable Ford Crown Victoria as the police cruiser of choice for many departments. Each shift lieutenant also drove an Expedition while each shift sergeant drove a Ford Explorer Police Interceptor SUV. The shift deputies all drove the Taurus sedans. The purpose was to ensure, given the variety of terrain we cover, that we would have at least one 4-wheel drive vehicle available per shift. \n\n\"17-01 from 17-03,\" called Lieutenant Deputy Chris Hayes. \n\n\"17-03, go!\" \n\n\"Pat, I have 17-04 and 17-19 both following me. We're gonna head west on State Highway 5 towards Royal Fork! That way we can cut down either county roads T-65, T-40 or T-15, if we have to, and hopefully stay ahead of them if they cut west.\" \n\n\"Stand by, 17-03. All units, all units! Are there any available deputies or state patrol south of county road Y-29?\" \n\n\"10-4, 17-01! This is 17-15! I'm just pulling up to the intersection of Y-29 and Highway 120 along with State Patrol 83! State Patrol 95 is northbound about a mile behind us! We're setting up a TCP now!\" A TCP is a Traffic Control Point, or road block in layman's terms. \n\n\"Do any of you have stop sticks you can deploy?\" \n\n\"We do, 17-01, but they may not be effective. We can keep the subjects from going south on 120, pretty easily, but that gravel lot on the northwest corner of the intersection gives them a lot of room to bypass us!\" \n\nFuck! I'd forgotten about that. Years ago the state Department of Transportation had set up a flat gravel area at that intersection. They often stockpiled road construction materials there, such as base rock for paved roads and gravel for the rural roads, and also sand during the winter. \n\nThe other problem was that Highway 120 was now four lanes wide. The junction of Y-29 was an at-grade intersection, meaning that the two roads met directly at a T-intersection. It had been a complete waste of money to widen the road to four lanes. But our state's lone congressman, Republican Representative Ben Reynolds, had been able to get an entire barrel of pork money to get it done. It was completely unnecessary to have the interstate linking Fargo, Red River Falls, Cherokee Flats and Sioux Falls along with a now four-lane US Highway 120. \n\nDeputy Billy Shoemaker, 17-15, along with the two State Troopers could effectively block the road going south but there was no way they could cut them off with only three squad cars if the bad guys headed west. They could also jump the median and try to bypass the road block also. Hopefully, they would take Y-29 west if they did anything at all. Otherwise, we could be in for a long and dangerous chase. So \"herding\" the bad guys west on a narrow two-lane road could be our best bet. I cursed Congressman Reynolds under my breath for widening the damned road just because he could! \n\nThe good news was that Lieutenant Hayes (17-03), Lieutenant Angel Ryerson (17-04) and Deputy Amanda Comstock (17-19) were westbound on Highway 5 and had a good shot at cutting them off, provided the bad guys took the bait and headed west on Y-29. If there was a good time for any of this awful shit to happen, at least it happened near afternoon shift change when we had more deputies available. \n\n\"17-01 from 17-10, I have State Patrol 67 with me now and we are headed east on Y-29! We can easily cut 'em off at the junction of T-15, 40 or 65!\" \n\nYes! Thank you, Sergeant Danny Larson! It was almost 45 miles from Highway 120 to Royal Fork but at least we had good options for an intercept! \n\n\"10-4, Danny! Be advised, these guys might be coming right for you!\" \n\nThe other thing we had going in our favor was that, of all the roads we were dealing with, only Highway 120 and County Road T-40 were paved roads leading to the county south of Mason County. It was highly unlikely that the subjects would try their luck with the local dirt and gravel roads that could land them, quite literally, in the middle of nowhere. Both T-15 and T-65 dead ended at County Road Y-29. \n\n\"Dispatch, 17-01!\" \n\n\"17-01, go ahead.\" \n\n\"Dispatch, activate the statewide alert system. Send out a notification that law enforcement is involved in a high speed chase with suspects who are armed and dangerous. Advise them that the chase is in progress near Highway 120 and Y-29. Give a vehicle description and be sure to tell the public not to approach or interfere in any way!\" \n\n\"10-4, 17-01. The message will go out shortly.\" \n\nThank God for Liz Harrison, our lead dispatcher. She was cool as ice under the most extreme circumstances. A lot of people think it is easy for the dispatchers who are sitting in a nice air-conditioned office in front of a bank of computer screens and radios and just sit and listen to the action. But most dispatchers will tell you the anxiety of listening is almost as nerve-wracking as being there - only they have no way to help us other than to relay information. It can be very hard on them. For that reason we always make sure to invite them to attend any time we have a Critical Incident Stress Debriefing. Liz Harrison always makes sure her dispatchers attend if they are involved in a particularly bad call. They don't have to talk but just being there often helps a great deal. \n\nThe Statewide Emergency Notification System, or SENS, is a coordinated system that sends out emergency messages - either statewide or in a specific county or region. This is how we send out Amber Alerts, weather alerts or any other necessary emergency notifications. It has been very popular and the state has over 80% voluntary participation amongst all cell phone users and 100% automatic notification of all landline phones. The legislature passed a law this spring that will soon include mandatory participation amongst all cell phone providers. Liz would send out both an electronic message and recorded voice message, depending on the receiver. \n\nWARNING! LAW ENFORCEMENT IN MASON COUNTY ARE CURRENTLY ENGAGED IN AN ACTIVE HIGH-SPEED PURSUIT! THIS PURSUIT IS OCCURRING IN THE VICINITY OF THE JUNCTION OF US HIGHWAY 120 AND COUNTY ROAD Y-29. SUSPECTS ARE DRIVING A BLACK 2014 MERCEDES SEDAN WITH LICENSE PLATE L-D-A-7-6-5. SUSPECTS ARE TO BE CONSIDERED ARMED AND EXTREMELY DANGEROUS! ALL CITIZENS IN THE AREA SHOULD IMMEDIATELY EXIT THE ROADWAY AND AVOID THE PURSUIT! DO NOT ATTEMPT TO AID LAW ENFORCEMENT IN ANY MANNER! FOR YOUR SAFETY, AVOID OR LEAVE THE AREA IMMEDIATELY! \n\nWe began to crest a small hill. Once at the top, we could look far enough ahead to see the intersection of Highway 120 and Y-29. Even in the daylight, I could easily make out the flashing strobes of a deputy cruiser and two state patrol cruisers. A small dark shape was rapidly approaching the intersection, which I estimated was less than a half-mile front of me, with Brian and me rapidly closing. The Mercedes wasn't running as fast as I thought. \n\n\"17-01, 17-15! Subjects are approaching the intersection!\" \n\n\"10-4, Billy! Be safe!\" \n\nI continued to rapidly close the distance, my gaze fixed less than the half mile ahead. As I descended the hill towards the intersection, it appeared the black sedan slowed way down. HOLY SHIT!! The unmistakable site of rapid puffs of light gray smoke and sparks indicated the sustained firing of automatic weapons! The sedan then sped off obviously squealing the tires and headed, sure enough, westbound on Y-29. \n\n\"All units, all units! This is 17-15! Shots fired! Multiple shots fired!\" \n\n\"Billy, this is Quinn! Are you okay?\" \n\n\"I'm okay, Pat, I'm okay!\" \n\n\"What about the troopers?\" \n\n\"Uh...I uh...I think they're okay, too! But I think all of our vehicles have been shot to hell, Pat!\" \n\n\"Hang tight, Billy! I'll be there in a second!\" \n\nI already had the accelerator buried to the floor but the last quarter mile seemed to take forever to cross. I slowed rapidly and locked up the brakes, screeching to a halt. Billy sprinted to the passenger side of the Expedition and hopped in the front seat, clearly out of breath, his face nearly white as a sheet. As soon as he was in, I stomped the gas and sped off after the black Mercedes. \n\n\"Jesus-H-Christ! Those goddamned, rotten, raghead mother fuckers!!\" Billy shouted, slamming a fresh magazine into his AR-15. \n\nBehind me, it appeared that Brian Kelley had picked up one of the two troopers. Both Billy's cruiser and one of the State Patrol cruisers had been shot up bad with fluids leaking all over the place. The other State Patrol cruiser still appeared to be operating and followed behind Brian as we continued the chase. \n\n\"Are you okay? Are you hit, Billy?\" \n\n\"No, not hit! I'm okay! Just seriously pissed-the-fuck-off! Those worthless, motherfucking camel humpers! Fucking fully automatic AK and an SKS!! How the fucking shit did they sneak those in here???\" \n\n\"That's a helluva question, Billy, and one the BCI is gonna wanna find out, along with the ATF and FBI, I'd imagine!\" \n\n\"Oh, my God, Pat! I swear to God I'm gonna put a fucking slug in both of their Haji skulls!!\" \n\nNormally, I probably would have found that funny. But I was too tense. The shit was real and it wasn't over yet. Not by a long shot. \n\n\"How'd your windshield hold up?\" \n\n\"My what?\" Billy shouted. \n\n\"The windshield! How'd your damned windshield hold up?\" \n\n\"Oh! Right! Fine! Really good, actually,\" Billy said, still trying to catch his breath. \n\n\"That's terrific to hear! Thank God! Money well spent, huh?\" \n\n\"Damned right it is, Sheriff! You probably saved my life and both of those troopers' lives! They took cover behind my cruiser when those fucking camel jockeys showed up!\" \n\nI briefly pondered the thought while keeping my eyes on the sedan in front of me. Every frontline interceptor in our fleet had been retrofitted with thick, heavy bullet-resistant glass. It was an essential addition that I strongly felt would ultimately save the lives of my Deputies. Shortly after I became Sheriff, we had a very large seizure of methamphetamine worth over $1 million on the streets. Along with that seizure was approximately $630,000 in cash. \n\nOnce the trial was over, which went fairly quickly as one dealer after another rolled over on their superiors, we petitioned the US Attorney for a share of the seized and forfeited funds. The majority of the time in a federal case, the seized money just goes into the government coffers. But surprisingly, US Attorney Lane Danielsen was in a generous mood and granted my department $410,000. Since we were the petitioner for the funds, it went directly into my department accounts and bypassed the County Supervisors and the County Treasurer. \n\nAnd so, I immediately pressed the funds into service by ordering replacement of the front windshields and both the front driver and passenger side door windows with ballistic glass that could withstand multiple impacts from rifles ranging from .22 caliber all the way to .308 caliber, and from pistols ranging from .22 caliber all the way up to .45 caliber. \n\nWe were closing quickly on the Mercedes and I wasn't sure why. Surely an E-Class sedan could hold a respectable high speed. \n\n\"One of those cocksuckers is in the back seat, Pat!\" Billy exclaimed. \"That way he can shoot from whatever side of the car he wants and doesn't have to shoot past his brother! That's why the little butt fucker was able to empty sixty goddamned rounds from both of those weapons!\" \n\nThe good old Kalashnikov AK-47, the most mass-produced weapon in the world. The SKS was a cheaper Chinese variant but equally as deadly. They both fired the standard 7.62 X 39mm round that packed one hell of a wallop. \n\n\"17-01 from State Patrol 35.\" \n\n\"35 this is 17-01, go ahead!\" \n\n\"Sheriff, I'm just about to the intersection of T-40 right now! I'm gonna plan like they're heading this way and I'll get stop sticks out right now!\" \n\n\"Good copy, 35! Thanks for the assist!\" \n\n\"No problem, Sheriff! We'll get these suns-a-bitches stopped!\" \n\nStop sticks at the intersection of T-40 would definitely give them something to think about. We were quickly approaching the intersection of T-65. I could see lights flashing coming down from the north. It was a white SUV and a white cruiser, which meant that they had to be mine. \n\n\"Units southbound on T-65, identify!\" \n\n\"This is 17-02, Pat! I've got 17-11 with me! We're gonna try to cut 'em off or at least join in!\" \n\n\"You're not gonna make it! Stop where you are or they'll fire on you for sure! State patrol 35 is gonna throw out stop sticks! Just block the road so they see they can't get around you but stay the hell back!\" \n\n\"Good copy, Pat! We'll stay put!\" \n\nCaptain Ben Villanueva (17-02) and Deputy Chad Goodburn (17-11) were the two deputies on T-65. \n\n\"Shit! They're shooting at 'em, Pat!\" \n\nSure enough, more rapid puffs of smoke burst from the passenger side of the sedan as they flew past the intersection of T-65. \n\n\"17-02! Are you guys okay?\" \n\n\"10-4, Pat! The passenger side of my windshield took a hit but we're both operable and falling in behind you!\" \n\n\"Good copy!\" ",
        "Just then, more smoke erupted from the sedan as the shooter blew out the back windshield of the sedan and was now actively shooting at us. \n\n\"Billy! If you grab that Persuader and stick it out the window, can you fire it?\" \n\n\"Damned right I can!\" \n\n\"Good! Give 'em something to at least think about! I'm gonna gun the accelerator while he's changing magazines!\" \n\nI was weaving all over the road. We were about a quarter-mile behind the sedan. One thing about firing an automatic rifle is a phenomenon known as \"climb\". The longer you fire an automatic weapon on full auto, the front barrel tends to move upwards due to the constant recoil. It is extremely difficult to accurately aim a fully-automatic weapon unless it is mounted to something solid, like a tripod with a fixed traversing and elevation mechanism. The T&amp;E device, used on machine guns, keeps the automatic weapon firing in specific horizontal and vertical planes to keep the rounds shooting in a specific area. As such, the rounds from the AK were not accurate and were pretty much all flying overhead, with the exception of one or two rounds that hit my light bar. \n\nThe form in the backseat stopped shooting after two separate and distinct shooting bursts. I floored the accelerator and quickly caught up and held a distance of about 30 to 40 feet behind the sedan. Just as the subject in the back seat popped up to start shooting, Billy let loose with the big semi-automatic 12-gauge and fired six rapid blasts of .00 buckshot - peppering the back of the sedan and causing the trunk lid to pop open, obscuring the vision of the shooter in the back seat. \n\n\"Yeah, bitch! That's right, you little cocksucker! Run away, you fucking pussy! Woooo-hoooooo!\" Billy shrieked as he slammed fresh shells into the shotgun. \n\nThat must have caught their attention because the E-Class started rapidly accelerating again. Soon, we were hitting speeds of 120 mph. Fortunately, Y-29 was fairly straight as it headed past large farms and sheep and cattle ranches. \n\n\"17-01, this is State Patrol 35! I've got the sticks out on the east side of the intersection of T-40! \n\n\"Good copy, 35! We're about 3 miles out!\" \n\nMost people have the impression that stop sticks are just a line of spikes that law enforcement put out to try and get someone to run over. However, each spike is also covered by a plastic tube that then lodges in the tire and keeps the hole wide open, which even defeats most types of run-flat tires. \n\nI could see the flashing lights of Trooper 35's cruiser up ahead. His vehicle pretty much blocked the entire westbound lane of Y-29. With steep ditches on either side of the roadway and barely any shoulder to the old road, the Mercedes would only have one way to go and wouldn't be able to avoid the sticks without putting the sedan in the ditch. If he hugged the far left lane, he might be able to avoid blowing out all four tires but he would still be running on the rims of the right side wheels. \n\nWe were trailing by about a quarter mile when they got to the intersection. We could clearly see Trooper 35, whose name was Marv Rockney, with his gun drawn and using his cruiser as a shield. The driver of the sedan obviously realized he was about to run over the stop sticks and slowed down dramatically but too late as he swerved to the left to try and avoid them. Sparks flew as the two right side tires caught the sticks and blew out. \n\nBut the shooter in the back seat unleashed a heavy volley of automatic weapon fire, shredding into the state patrol cruiser and causing Trooper Rockney to fall over backwards into the ditch. Trooper Rockney would be unable to pull the sticks before we got there and so we had to stop and get them out of the way. \n\nAs we did so we heard him scream on the radio, \"This is 35! I've been hit! I've been hit! Officer down!\" \n\nBilly jumped out of the Expedition to take care of the sticks as Brian Kelley pulled up behind us. Trooper 83 jumped out of Brian's vehicle and ran down the ditch to aid Trooper Rockney and Trooper 95 pulled his vehicle over and grabbed a medical aid kit before he, too, ran down to assist the fallen officer. All police, deputies and State Troopers are required to be certified First Responders in this state. \n\n\"Dispatch, 17-01! We have an officer down at the intersection of Y-29 and T-40! Roll EMS and launch Eagle Star to the scene immediately!\" \n\n\"10-4, 17-01. We'll be paging Martindale Fire, Red River Falls Fire Department and Eagle Star.\" \n\nBilly jumped back in and I floored it again to catch up to the wounded sedan. \n\n\"17-10, this is 17-01! Hold fast near the intersection of 29 and T-15! Establish a block! They're coming right for you! They hit the stop sticks and are running on two wheels!\" \n\n\"10-4, Pat! We're a ways east of there already, but we'll hold our position!\" \n\nBrian Kelley, Ben Villanueva and Chad Goodburn continued to follow us. Suddenly, the last of the rubber of both tires on the black sedan flew off and the sedan was now riding a wave of sparks coming from the bare rim on the asphalt. The steering was obviously becoming more and more difficult and the driver was desperately trying to keep the sedan going straight but he was steadily losing the fight. \n\nTo my horror, there was a large John Deere tractor towing a large farm implement and starting to pull out of a field and onto the roadway. He realized too late that the chase was in progress and probably hadn't heard the message. He stopped dead in the driveway with the nose of the tractor sticking part way out into the westbound lane. The driver of the sedan over corrected trying to go around the tractor, causing it to swerve wildly before making contact with the gravel shoulder of the roadway and striking and knocking over a road sign. His bare rims were stuck in the soft shoulder of the road and he had no traction to get out. \n\nAs I drove around the nose of the tractor myself, the driver was just getting out of the Mercedes and the second shooter was scrambling out of the vehicle on the passenger side. The driver, positioned between his open door and the vehicle, leveled his own AK-variant assault weapon and loosed a burst of automatic fire point blank. My windshield clouded over from the multiple impacts and I lost site of the shooter. \n\nI punched the accelerator once again, knowing I was pointed directly at the vehicle and immediately brought the Expo up to full speed and T-boned the big Ford violently into the side of the Mercedes, driving it forward a good 25 to 30 feet across a second driveway and nearly into the ditch. I didn't stop pushing until I had slammed the Expo and Mercedes into a large tree by the entrance to the field. There was a massive \"BANG!\" as my airbag simultaneously deployed but, somehow, the passenger side bag failed to activate. I was stunned by the airbag and momentarily lost track of my senses. \n\nBilly immediately bailed out of the Expedition, with his Glock drawn, as Brian Kelley pulled around to the left and slammed the brakes in front of the pulverized Mercedes. Billy headed down into the ditch while Brian exited from his side and moved forward, tactically, with his Glock in front of him. The impact of the crash had flung the backseat shooter forward and down the side of the grassy embankment. He was stunned but not critically injured. \n\nThe shooter immediately grabbed his nearby AK-47. As he tried to figure out who to shoot at first, both Brian Kelly and Billy Shoemaker let loose an intense, rapid fire barrage of .40 caliber rounds. The shooter, who turned out to be Muchtada Walad-Hammadi, was dead before he even hit the ground. Of the 30 shots Brian and Billy had fired in less than 5 seconds, 21 had found their mark and turned Muchtada's head and torso into bloody Swiss cheese. The shooter had fallen backwards against the steep ditch embankment and almost appeared to be standing - except for the fact that he was dead. No wonder so many of Brian and Billy's bullets were on target. \n\n\"Pat! Pat! Are you alright?\" Ben Villanueva had arrived and threw open the door to the Expedition. I fumbled with the seatbelt and struggled to get the cobwebs from the airbag explosion out of my head. \n\nI stumbled out and regained my shaky footing. \"Yeah, Ben. I'm okay, I'm okay.\" \n\n\"I called for additional ambulances from Royal Fork and wherever we can get 'em. Danny and Trooper 67 are headed this way. Trooper Rockney is hurt really bad, too. They're setting up for the helicopter, which will be there in about 5 to 10 minutes.\" \n\n\"Okay, sounds good,\" I said, still trying to get my bearings. \n\n\"Oh, sweet Jesus,\" Ben whispered in horror. \"Look.\" \n\nThe front of the Expedition had only slightly crumpled from the impact, as it was designed to, due to the large combination grill protector/push bumper. But it had penetrated and become entangled in the side doors of the Mercedes. \n\nAnd sandwiched between the Expedition and the Mercedes...was Ibrahim Walad-Hammadi. The bumper had caught him waist-high. His body, too, was enmeshed amongst the twisted metal of the Mercedes and the Expedition. But, morbidly, he was still alive. Somehow, the pressure of being pinched between the two vehicles was enough to keep blood flowing to his vital organs...for now. If the two vehicles were separated, he would surely die within seconds. \n\nI walked slowly to the front as Ben and Chad kept their guns drawn on Ibrahim. The weapon he had been firing at me had been thrown a good 30 feet when I slammed into him. The side of his abdomen had ruptured and a good portion of his intestines had fallen out. But beyond that, there was very little blood. Most likely, the abdominal portion of his aorta and vena cava were completely pinched off. \n\n\"Ambulances are on their way,\" I said softly, \"but I think you probably know that you're not gonna make it. Even if you're still alive when they get here, you're probably not gonna survive getting you untangled.\" \n\n\"That...is fine...with me...Sheriff,\" Hammadi struggled. \"Although...I'm sure...it gives you...some satisfaction...knowing you took...my life.\" \n\n\"No. No, it does not. I'm going to be wondering why this happened for years to come.\" \n\n\"It...happened...because it was...God's will.\" \n\n\"You expect me to believe God wanted you to do what you did? Especially to your own sister?\" \n\n\"It was...for her own...good.\" He was struggling to breathe. \n\n\"How can what you did to her possibly be for her own good?\" \n\n\"She was...corrupted...by this culture...by Tristan. She was...no longer...my sister. This place...had turned her...into a whore. She...looked like...a whore...she dressed...like a whore...she smelled like a whore...she acted...like a whore. She...turned away...from her faith...from her family. She deserved...to die...like a whore.\" \n\n\"So you murdered your sister and her fianc\u00e9 because of the way she dressed and because of the man she fell in love with?\" \n\n\"He...was not...her fianc\u00e9. He...never...asked for...her hand. My father...would...never...have given it...to an...infidel.\" \n\n\"Was it worth it? Are you happy with the fact that taking their lives is going to cost you yours? It already cost your brother his life. He's lying dead in the ditch behind you.\" \n\n\"My brother...has died...firm in...his faith. I...will meet him...in paradise.\" \n\n\"Are you sure about that?\" \n\n\"Yes...I'm sure. My...soul...is prepared.\" \n\n\"Well, it won't be much longer now.\" \n\n\"I shall...welcome death...when it...\" He never finished. His head flopped down and his torso fell forward, resting on the hood of the Expedition. His eyes were still open but quickly glazed over. I couldn't help but stare as I watched the color and the life drain from Ibrahim's body. \n\n\"What a waste,\" I said as Ben led me away. \"What a fucking waste.\" \n\n\"Hey, Pat,\" Danny Larson said. \"You doing okay?\" \n\n\"Yeah, I'm okay. Just a little stunned from the crash and the airbag blowing up in my face. Anybody got any word on Trooper Rockney?\" \n\n\"Yeah, Eagle Star just picked him up and took him in to Holy Family. Sounds like the other two Troopers got most of the bleeding stopped. He took a couple rounds in each arm and got peppered in the legs real bad. But they got tourniquets on quick. His vest did the rest.\" \n\n\"Thank God. Let's hope he makes it. Two funerals are going to be bad enough.\" \n\n\"You got that right,\" Ben agreed. \n\n***** \n\nThe Bureau of Criminal Investigation, or BCI, was on scene within two hours. They had sent multiple units to investigate due to the presence of three separate crime scenes that they had to process. Nearly every investigator, forensics analyst, and a whole host of other personnel from BCI were called in to assist, given the enormity of the crimes that had been committed. Agents from the FBI and ATF in Minneapolis were reportedly en route and would be on scene within the hour. \n\nI stayed on scene long enough to answer questions from about five separate investigators, which I thought was overly excessive. Finally, about 20:00 that evening, I turned things over to Ben Villanueva and the lead BCI investigator for the site, Tom Forsythe. \n\nAt one point, I took advantage of a lull in the action while waiting for BCI and the Feds to arrive and called Shannon. She was ecstatic to hear from me, as always, but had no idea at that point what had happened since she was at work. I told her that something major had happened and that she would be hearing about it soon, if she hadn't already. I told her that I just wanted to let her know that I was okay and would call her after I got back to Red River Falls. \n\nTo her credit, Shannon didn't push it and just told me she loved me and would wait for my call. \n\nSince my vehicle was involved in the shooting it needed to stay at the scene and would eventually be towed to the state crime lab. Besides, with a completely clouded over windshield, the Expedition wasn't drivable anyway. Danny Larson volunteered to give me a ride back to Red River Falls. I told him to go ahead and take me straight to Tristan's house so I could see how the investigation was coming there. \n\n\"You sure you're doing okay, Pat?\" Danny asked as we left the scene. \n\n\"I dunno, Danny. I think so. But I'm not really sure. I don't really know what bothers me more - what happened to me or what happened to Tristan, ya know?\" \n\nDanny let out a long, slow sigh. \"Yeah, I hear ya. Never thought something like this would happen to us. You always think it is going to be some bigger city and department that has to deal with something like this. It's what I always liked about Red River Falls - nothing ever happens in a town like this.\" \n\n\"I guess you could say that nothing like this is ever supposed to happen in a town like Red River Falls.\" \n\nWe rode in silence for a few minutes before I decided I needed to cut through the tension. \n\n\"Was your buddy Daulton Anderson one of the flight medics on the helicopter today?\" \n\n\"Uh, no, he only works on the helicopter one or two days a month. He was actually in one of the ambulances that Red River Falls Fire sent to the scene. He ended up getting stuck hauling in both of the shooters to the morgue. Kind of gross, if you ask me, but Daulton said he's never been more pleased to have to drop someone off at the morgue than those two.\" \n\n\"Nice,\" I said, chuckling. It actually felt good to laugh a bit. \"Say, how are things going between him and his wife, Darla?\" \n\n\"Things are going quite well, actually. They're expecting their first child together.\" \n\n\"Jesus,\" I chuckled. \"I guess those two didn't waste any time.\" \n\n\"You're telling me! She's only about six weeks along and their wedding was back in June. He just told me a couple of days ago. The rest of the family didn't even know about it, at the time he told me, and they haven't told Darla's kids, Natalie and Nathan.\" \n\n\"Do he and Darla ever worry about Randy?\" \n\n\"Who, Daulton? Why? Haven't you heard?\" \n\n\"Heard what?\" \n\nNow Danny chuckled. \"You seriously haven't heard what happened to Randy?\" \n\n\"No. Clue me in.\" \n\n\"Okay, okay,\" Danny chuckled. He was bordering on laughing hysterically as he drove. \"So, Randy got convicted last spring, right? They got him on a felony assault charge for beating Darla to a pulp. Next, they convicted him of interstate flight since he bailed out of Royal Fork and made a run for Kalispell, Montana where his sister lives. She waits until he's asleep, calls 9-1-1 and doesn't answer. They send a couple of cops over to her house to check out a '9-1-1 hang up' and she leads them right to the spare bedroom where Randy's out cold. Talk about a rude awakening!\" \n\n\"Yeah, no shit!\" \n\n\"So anyway, there's like zero room at the state pen up here. So they end up shipping him all the way down to Sioux Falls and paying them to house him down there. So, anyway, (*chuckling*) Randy's in there for a few weeks and he starts getting 'the urge', if you know what I mean. So, for some reason, they've got Randy in a minimum security wing. Why? I don't have the first clue. But anyway, minimum security is where they also house most of the homosexual prisoners. You know, to try and keep them away from the really violent cons and predators, right?\" \n\n\"Sure,\" I agreed. \n\n\"So Randy, by this time he doesn't care, and he tries to get in good with the queers. He's all really nice to them and stuff. Pretty soon he strikes up a thing with one of them and gets his knob polished on a regular basis. Well, down there, the Aryans pretty much run the place so if you wanna do anything with anybody, you gotta go through the Aryans. And those guys run the pimping trade in Sioux Falls!\" \n\n\"Go on,\" I encouraged. \n\n\"So, (*giggling*) a couple of the Aryan dudes figure out that one of their bitches is giving it away for free. So they buy or bribe their way into the minimum security wing and they catch Randy at his job in the kitchen. They absolutely beat the fuck out of Randy Jones! They tell him that if he ever propositions one of their bitches again without paying up he's gonna get his throat slit. There's also a rumor that they may or may not have forced Randy to eat a dick or two that day, not that he'd ever admit to it regardless.\" \n\n\"Boy, I bet ol' Randy learned a tough lesson that day,\" I surmised. \n\n\"No, Pat! He didn't! (*laughing*) That's the best part! Old Randy has as big of a Napoleonic complex if there ever was one! I mean, we're talking major Little Man issues. So, what does he decide to do?\" \n\n\"Go out and get revenge?\" \n\n\"Bingo! He either makes, steals or buys some kind of a shank in there. Then he bribes his way into the Gen Pop, walks right up to one of the guys who beat him up, and proceeds to stab the dude right... in...the...throat,\" he emphasized, gesturing. \"And he does this right in front of the entire Gen Pop during lunch time, no less! So every C.O. in the cafeteria sees him do this!\" \n\n\"No...fucking...way! Did the guy live or die?\" \n\n\"Miraculously, the guy lived! Randy barely, and I mean just barely, missed the guy's carotid artery and jugular vein. He only got about two stabs in before he got piled on by a bunch of Aryan dudes who pretty much beat the living shit out of him for a second time before the C.O.'s cleared everybody out of there with a couple of rubber-filled grenades and flash bangs. I'm sure he got some serious jail cred for doing it, but damn!\" \n\n\"So, I'm sure they brought him up on charges, right?\" I asked. \n\n\"Oh, absolutely! They even have a courtroom right in the prison down there! He didn't even bother fighting the charges! He knew they had him dead to rights, so it was like, 'what's the point'? The only problem was, his fresh-out-of-law-school public defender didn't tell him what the true consequences were and the only trick the rookie lawyer knew was to get Randy to plead guilty to felony aggravated assault instead of an attempted murder rap. So, if you combine the felony assault conviction for beating up Darla with a felony eluding and interstate flight conviction, AND throw in yet another unrelated aggravated assault charge, what does that all add up to? BOOM! BOOM! BOOM!\" ",
        "\"Three strikes and you're out!\" I applauded and laughed. \"Career felon, automatic life sentence! No wonder the prosecution didn't push an attempted murder rap! They got him for life, anyway! Oh, my God! That's one of the most beautiful stories I have ever heard!\" \n\n\"With the possibility of parole, however\", Danny added. \"But no matter what, it is going to be at least 25 years before he ever sees the light of day again. So Daulton, Darla, the kids and even I, for that matter, don't have to worry about Randy Jones for a long, long time.\" \n\n\"That's great to hear, man. It really, really is.\" \n\nDanny finished the story just as we pulled up to 832 North Monroe Avenue. The house was a simple brick one-and-a-half story home with large dormer windows on the second floor that gave the place an elegant New England look to it. Numerous people were bustling in, out and around the residence. As we got out of Danny's Explorer, we were greeted by none other than the Chief of Police for Red River Falls, Roy Banks, and one of his two Captains, Pete Sturgeon. Both had extremely somber looks on their faces and the levity that Danny and I had shared on the way here was short-lived and gone. \n\n\"Pat,\" Banks said as he extended his hand. I took it. \"I speak for every last man and woman on my department when I say how deeply, deeply sorry we are. I know we haven't always seen eye-to-eye, but in times like this we all gotta come together. If there is anything, and I mean anything, that my department can do for yours, please don't hesitate to ask.\" \n\n\"Thanks, Chief. That means a lot.\" \n\nI turned to my right and saw Pete Sturgeon extending his hand. I took his, also. \n\n\"I really don't have the words, Pat, so I'll just echo what Chief Banks said. Please do let us know if there is anything we can do to help. I hope you don't feel offended when I say that it feels like we lost one of our own today, too. At the root of it all, Pat, we're all on the same side.\" \n\n\"Those are very warm sentiments, Pete, and I truly appreciate it.\" \n\n\"Pat,\" Chief Banks said gesturing to his right, \"this is Gregory Skerritt. He's the Agent-in-Charge from BCI. They're processing the house right now but he'll answer any questions you may have.\" \n\n\"Sheriff,\" Skerritt said, extending his hand, \"I, too, want to say how sorry all of us at BCI really are. As much as we all want to do our jobs, we hate having to process scenes where an officer went down in the line of duty.\" \n\n\"Thank you, Mr. Skerritt. Can you just kind of give me the whole run down on what you know so far?\" \n\n\"Absolutely, if think you're ready. I'm not gonna lie to you, Sheriff. It's pretty gruesome in there.\" \n\n\"I'm ready. I need to see it with my own eyes.\" \n\n\"Okay, then. Follow me to the BCI truck. I'll have you put on some non-latex gloves and some booties for your feet, as well as a disposable surgical gown. We're just about finished with the initial processing but we don't want to take any chances of cross-contamination between your scene on the road and this one.\" \n\n\"Very well. Understood.\" \n\nA few minutes later and I was dressed out. Danny decided not to come in. He wanted to remember Tristan the way he was the last time he saw him. \n\nI followed Skerritt to the front entrance. The stairway leading to the second floor met at a landing directly in front of the entrance. To the left was a dining room, which led to the kitchen in the rear of the home. To the right was a fairly good-sized living room with a fireplace at the rear. The walls around the fireplace, as well as the brick hearth and mantle, were all pock-marked from numerous high-caliber rifle fire. A yellow tarp covered the body, except for the right hand that stuck out from underneath it. There was an unbelievable amount of blood all over the walls and a massive pool of blood underneath and around the body - so much so it had been seeping underneath the sliding door that led to the back patio. The air was heavy with the metallic stench of blood and gunpowder. \n\n\"Okay,\" Skerritt said. \"I'll get started. There was no sign of forced entry, none that we could find anyway. So we assume that the shooters were invited into the home, probably by the female.\" \n\n\"Miriam,\" I said. \n\n\"Who?\" \n\n\"The female. She has a name. Miriam.\" \n\n\"Uh, I'm confused. I was told her name was Nazeem.\" \n\n\"She changed her name when she became engaged to Tristan and started going to church with him. She decided to convert and took on a more Christian name. It became legal about two weeks ago.\" \n\nSkerritt looked at me for a moment, nodded his head, and proceeded. \"So Miriam probably answered the door and invited her brothers into the home. We don't believe they were here for very long.\" \n\nWe walked closer to the body. \n\n\"Shortly after they arrived,\" Skerritt continued, \"an argument ensued. One of the brothers was seen wearing a trench coat. He was almost certainly hiding the weapon when they entered. From what we could see, Tristan was blocking the female - uh, I mean, Miriam - and took several rounds to the abdomen. The shots put him down on the floor, of course. One of the shooters then proceeded to grab the girl and dragged her outside to their car. \n\n\"We ended up getting video of the entire scene in the living room on video but the angles of the cameras didn't allow much to be seen at the front entrance. Were you aware, Sheriff, that there was a surveillance system in the home?\" \n\n\"Yes, I was. Tristan confided to me that he had reason to believe his life was in danger, as well as that of his fianc\u00e9e. So I recommended he talk to a friend of mine who now specializes in that sort of thing. Kind of surprised she overlooked the front entry way.\" \n\n\"There was actual video from the outside that captured the two men entering the home, as well as driving up to the house. It was just hard to see who actually answered the door, is all, but we're pretty sure it was Miriam.\" \n\n\"I see. Anything else?\" \n\n\"Uh, yeah, there is. Tristan didn't die right away. The second shooter probably thought he was dead or else thought that he would be dead soon. Out of twenty-six rounds fired from the weapon, only 8 or 9 actually struck Tristan. Our ballistics expert, Lee Ireland, thinks the shooter was spraying back-and-forth as he shot; like something out of Hollywood. The final shot was fired point blank at close range and was a shot to the head. He ended up shooting Tristan just below the left cheekbone and it exited just in front of his right ear. \n\n\"That's significant, Sheriff, because he would assume Tristan to be incapacitated, if not killed. However, the shot missed his brain entirely. As the shooters left with the girl, he dialed 9-1-1 from his cordless land line. Even though he couldn't talk, he knew an officer would be sent to check out a 9-1-1 hang up. Then, he painstakingly typed a text message that was found on his smart phone when the PD arrived. He identified the shooters and even knew the make and model of the car. In a way, he captured his own killers. But by the time EMS arrived, he had already expired.\" \n\nI knelt down by the body and proceeded to lift the corner back and started to expose his head. \n\n\"Uh, I wouldn't do that, Sheriff,\" Skerritt warned. \"It's pretty gruesome under there.\" \n\nI simply looked over my right shoulder and gave Skerritt a \"back off\" look. \n\n\"Okay, then. Have it your way. I'll be outside.\" \n\nI pulled the yellow tarp back further and gazed one final time at Tristan's face. He was such a handsome man in life and was so thoroughly traumatized and violated at the end of it. His eyes, so utterly lifeless, seemed to stare at something thousands of miles away. His courage and willpower astounded me; to be able to be in such pain and agony after being shot by a large caliber weapon and still have the ability to call 9-1-1 and type out a message identifying his attackers. He was truly the very model of what a Law Enforcement Officer should be - even until the very end. \n\nI placed the tarp back over his face, knowing that I was almost surely looking at him for the final time. Almost certainly, he would have a closed casket funeral, which was probably a blessing. Everyone could remember him the way he was in life and not in death. \n\n\"What can you tell me about Miriam?\" I asked Skerritt after I went back outside. \n\n\"The two brothers dragged her from the home and took her back to the family's residence. She resisted the entire time, sounds like, even with a bullet wound to the leg. Apparently, when they got to the house, the mother tried to intervene on the daughter's behalf. The father held the mother back, and the two brothers started beating their sister within an inch of her life. Apparently, she refused to go back to Dubai with them. So they took her out back, doused her in gasoline and lit her on fire. Then, they hauled ass. We were able to determine that they planned on catching a United flight out of MSP. Fortunately, your Deputy's ability to identify the attackers kept them from getting too far. Absolutely unbelievable, if you ask me.\" \n\n\"Yes, yes it is,\" I agreed. \"Thanks for giving me the walkthrough.\" \n\n\"Sorry it was necessary, Sheriff. Oh, by the way, the shooters; what exactly were they doing in Red River Falls? It's obvious they were quite affluent.\" \n\n\"Their father, Khalid Hammadi,\" I explained, \"owns mineral rights to a number of oil shale tracts up north. He's been a key figure in helping develop some and has been a wealthy oil man most of his life. Until today, he and his family were well-liked and highly respected in Red River Falls. This is going to come as a huge shock to everyone.\" \n\n\"I see,\" Skerritt said. \"Damned shame. It'll be interesting to see if the sons were somehow radicalized.\" \n\nHis remark caught me by surprise but also made sense. Did we have a terror problem on our hands? If so, what should we expect from the rest of the family? \n\nI got back to the BCI van and quickly tore off the gloves, gown and booties. Danny hadn't said a word the entire time since we got here. I could see tears in his eyes and knew that he was struggling with everything that had happened today. Tristan wasn't Danny's best friend in the world but the two of them had shared a genuine friendship and socialized often with other members of my department. \n\n\"You gonna be okay, Danny?\" \n\n\"Yeah, Pat, I'm okay. I just wish we could have done more. I'm in awe of what Tristan did today. He went down fighting for his girl, ya know? Absolutely nothing more noble than that.\" \n\n\"Damned right he did. We may not have caught the bastards if it wasn't for him.\" \n\n\"If anything ever happens to me,\" Danny said, choking up, \"I only hope that it means something like Tristan's death did.\" \n\nI couldn't think of anything to say at that moment. Danny was expressing what every LEO inevitably thinks about and hopes for - that if we have to give our lives that it at least has some sort of meaning or purpose. Even in death, Tristan had managed to ensure that justice was served. All I could do was just reach out and bring Danny in for a hug. We probably embraced for almost a minute with everyone, including neighbors and other bystanders, watching. Of those who saw us, many started quietly crying. \n\n\"Pat?\" a voice called from behind me. I turned and saw the county administrator, and my good friend, Mitch Monahan standing there. \n\n\"Mitch,\" I said, reaching out. Mitch ignored my hand and grabbed me for a hug also, though shorter, but equally as heartfelt. \n\n\"God as my judge, Pat, I don't have the words. I really don't.\" \n\n\"None of us do, Mitch.\" \n\n\"I was out on the highway scene for a while. I didn't want to bother you while BCI were questioning you. I can't believe what a beating your vehicles took today. Yours wasn't too bad, but Deputy Shoemaker's car was outrageous!\" \n\n\"Yeah, that ballistic glass is something else, isn't it?\" \n\n\"Hell yes it is, Pat. I'm sorry I ever questioned you about it. I feel like an ass now. One of those things you never know you need until you need it, right?\" \n\n\"Well, Mitch, I just got to thinking one day about how many law enforcement officers are killed on an annual basis and I was struck by the numbers of them who were killed in their own vehicles. A lot of them get shot during car stops when a perp gets out of the car and starts shooting right away. The front windshields are especially vulnerable.\" \n\n\"It was a hell of an idea, Pat. You probably saved yours and Billy's lives today. Does the ballistic glass affect the vehicles much?\" \n\n\"How so? Driving, you mean?\" \n\n\"Yeah.\" \n\n\"It definitely adds a lot of weight but we made up for that with the heavier struts and shocks. Tires need to be watched more closely for additional wear and to make sure they stay rotated and balanced. Same thing for the front end alignment.\" \n\n\"How much weight does it add?\" \n\n\"It varies on the type of vehicle. I didn't have driver and passenger side glass added to my and Ben Villanueva's vehicles, only the windshields. The rest of the Expeditions, Explorers and Tauruses all have both front and side ballistic glass. The glass weighs about 35 pounds per square foot, though.\" \n\n\"Wow,\" Mitch said, impressed. Then he changed gears a bit. \"Have you talked to your fianc\u00e9e yet, Pat?\" \n\n\"Yes, briefly, when I was still out at the scene. She knows something big happened but doesn't know the enormity of it yet.\" \n\n\"I wouldn't bet on that. The local TV and radio stations have been flooding the airwaves for the last four hours, at least. Media are pouring in from all over. Somehow, word got out that a possible terrorist attack occurred here.\" \n\n\"Well, that's not exactly far from the truth now, is it?\" \n\nMitch was shocked. \"Jesus, Pat. You're not really gonna spin it that way, are you?\" \n\n\"Well, let's see, Mitch. A beautiful Arab woman falls in love with one of my deputies. She's a Muslim, no less, and my deputy is a Christian. She decides to leave her faith and her family to be with and marry this man. The family, especially her oldest brothers, hate this idea and do everything they can to threaten them. When their threats fail, they spring into violent action and end up murdering the man and woman whom they discovered they couldn't control. Seems like the very definition of terrorism to me, doesn't it?\" \n\n\"Pat, listen to me,\" Mitch said softly, looking around to see if anyone was listening. \"We have a lot of Middle Eastern people who are living and working in this area because of the oil shale boom. Many of them, like the Hammadis, have been in this country for well over a decade and many more who are life-long citizens and love this country as much as you and I do. We can't afford to offend them and turn this whole thing into something it is not.\" \n\n\"What is this whole thing, Mitch, if it is something that it isn't? What the hell does that even mean?\" \n\n\"I mean, Pat, that we don't need to blow this out of proportion.\" \n\n\"I think the two shooters did that when they blew away one of my deputies and then kidnapped, beat the crap out of and then burned their own sister to death.\" \n\n\"In their culture they consider it an honor killing. They felt their family was disgraced by her actions.\" \n\n\"Honor killing? Explain to me where the honor is in what they did, Mitch,\" I said, getting testy. \n\nMitch held up his hands. \"Pat, truce, okay? Look, I'm your friend. I've always liked you and always admired the job you've done as a deputy and as Sheriff. You're a helluva lawman. But my one criticism of you is that you sometimes get too passionate about things and lead with your heart instead of your head. We have 45,000 people in this entire county who need you to lead with both right now.\" \n\n\"So, what are you saying, Mitch?\" \n\n\"What I'm saying, Pat, is focus on the crime and not the culture. Focus on the actions of the men and not their religion. We have an awful lot of good people in this county we have to look out for. I confess that I don't know what it is like to be in your shoes right now having lost one of your own. But I do understand how angry you are. The bad guys are gone. Two families and our entire community are going to be devastated by this. Please, Pat. Don't put any targets on our citizens by blowing this up any further.\" \n\nWhat Mitch was saying made a lot of sense. As Sheriff, I would have a lot of explaining to do in the coming days, weeks and months. He was right. I was extremely emotional right now. For the third time in my career, I had taken the life of another human being. For the third time, I had done it to protect others. Mitch was right. I needed to cool off. I needed to get my head straight. And I needed to get my anger under control. \n\n\"I'm gonna need you to help me keep my sanity in the next few days and weeks, Mitch.\" \n\n\"I'll be here for whatever you need, Pat.\" And then we hugged again. \"In the meantime,\" Mitch said, as we broke our embrace, \"I think I see just what you need.\" \n\nI turned to my right to see Shannon running up the sidewalk. She had one hand over her mouth and a look of extreme pain and anguish on her face. She knew. She obviously knew. All I could do was just hold my arms open and swallow her in a hug that I never wanted to let go of. The warmth of her body was a welcome and soothing relief from the cold rage that I had been feeling. Sometimes, only the touch of the woman you love can soothe and calm the beast in a man and I needed her more than ever. \n\nWe probably held each other for close to five minutes, with Shannon sobbing profusely and me with tears streaking down my face. Police officers, deputies, BCI and other agents and civilians all stopped what they were doing and just stared at us. We were alone in our own universe, though, and couldn't care less. No one said a word. For most of them, they undoubtedly knew how we felt; understanding for me at the horror of having to take a human life, no matter how justified; empathy for Shannon being the loved one of someone who risks their life. \n\nWhen Shannon finally composed herself, she took both of my hands in hers and led me to her vehicle. \"Come on, babe. Let's get you home. You must be exhausted.\" \n\n\"Truthfully, sweetheart, I don't care where we go as long as you're there.\" \n\nWe rode mostly in silence. Shannon drove with her left hand and held onto my hand in a death grip with the other. She was trembling by the time we got to Rattlesnake Road to turn for home. Just hours ago I passed by the turnoff for my home while engaged in a high-speed pursuit of some really bad men and I couldn't help but feel a sense of vulnerability knowing how closely they passed by the house where my soon-to-be wife and children and I sleep. The wolves are never really that far from the front door, I guess. \n\nShannon had sent Bridget and the boys to her parents, Jack and Suzanne Sullivan's ranch. They were only too happy to welcome them all in. Jack and Suzanne had become absolutely wonderful grandparents to my two boys, Nick and Jake, and treated them like they did Bridget. Nick, my oldest, really hit it off well with Jack and loved helping him do chores around the ranch and riding with Jack on his numerous tractors and other machinery. \n\nShannon led me upstairs to our bedroom. I locked my Glock 22 in its safe and set my equipment belt in its proper place next to the bed. I stripped down to my skivvies and headed for the bathroom where I hoped a good, hot shower would help relieve some of my stress. I dropped my boxers and stepped into the steamy stall and felt the water cascade all over my body. Suddenly, I was almost overcome by the sensation of all that adrenaline finally leaving my body. I had been so amped up and for so long that I now realized I was crashing hard. \n\nI had been standing there in the shower for several minutes and didn't even notice when Shannon had slipped into the shower behind me. Suddenly, I felt her body melt into mine as she hugged me from behind. It was an overwhelmingly pleasant sensation with the hot water flowing over me with Shannon clinging to me, as well. ",
        "I turned around to face her. As always, it is an earth-shattering experience just looking at her magnificent body in the nude. She was wet from head to toe and looked absolutely stunning as she ran her fingers through her hair. I watched intently as the water dripped from her perked nipples and the way it streaked down her tummy and that sexy bump above her pubic area. All I could do was just soak in the sight and feel a brief rush of terror at the thought of never being able to see Shannon in her magnificent glory again. \n\nWithout warning, a wave of emotion and lust washed over me and I almost instantly started sporting a rock hard erection. Shannon must have felt the same emotions, too, because she reached down and gripped my manhood while at the same time my fingers reached her labia and found wetness that wasn't from the shower. She stood there and lightly massaged my penis while I continued to stroke her lips and her clit as she adjusted her stance wider to allow me more access. \n\nSuddenly, her breathing quickened to short gasps for air and she closed her eyes for a moment. She was on the brink of orgasm but stopped short. She quickly reached behind me to shut off the shower, exited the stall and handed me my terry cloth robe while she quickly donned hers. I was somewhat disappointed as I quickly dried off, using the robe and a towel. Shannon returned to me, however, and kissed me deeply and passionately while stroking my shaft again. \n\nShe turned and led me by the hand back to our bed, which was already turned down. She forced me down on the bed and quickly opened my robe, fully exposing me. Then, in the soft glow of the bedside lamp, she dropped her own robe and straddled me, leaning forward to kiss me deeply again. Effortlessly, she slid her own hips back and expertly guided my rock hard penis into her moist, velvety vagina in one smooth motion. \n\nShe lay forward on my chest, grabbing both sides of my face with her hands and kissing me with abandon while I wrapped my arms completely around her and held her so tight a tornado could not take her from me. We quickly established a rhythm where she would slide her hips backwards as I thrust upward. Slow and rock steady; we both savored the passion of our kisses and the exquisite sensations of her warm, tight and soaking-wet pussy gliding effortlessly up and down my rock hard shaft. Soon, we broke our kiss and lay there grinding one another cheek-to-cheek as our breathing picked up quickly. Both of us relished the building of our respective orgasms. \n\nI could feel her vaginal walls tighten like a vice as her relief approached. I could feel the building tension in my big, heavy testicles as the fluid prepared to launch its release. \n\n\"Oh, God, Patrick!\" she whispered, clutching my hair. \"Oh, you make me feel so good! Oh, God, it feels so good!\" \n\nI began grunting and soon a shock wave of intense sensation rocketed from my groin to the tip of my penis as I began shooting every last drop deep inside of her. Shannon quickly sat straight up and began grinding and squeezing for all she was worth, willing every last bit of my seed into her womb as her own orgasm washed over her. Wave after wave consumed her and she viciously reached back and dug her fingernails into my thighs, which added to the ferocity of my own cumming. Her body visibly trembled as she savored every last sensation. The room was heavy with the scent of our sex, which only prolonged our shared bliss. \n\nFinally, after a good minute or two, Shannon collapsed back on top of me and we again embraced each other as though for the last time. Before I knew it, she was softly crying again, which eventually built into all-out sobbing. Her body was wracked with spasms as she cried profusely. The sense of finality and mortality - that moments like we had just had while making love could come to a permanent end - was suddenly a stark reality. \n\n\"Oh, Patrick,\" she sobbed. \"I don't know what I'd do if I ever lost you.\" \n\n\"Don't worry, sweetheart,\" I said, stroking her hair and back. \"I'm not going to let anything happen to me. I promise.\" \n\nWe laid there for a good 15 or 20 minutes before we finally settled into a spoon position and pulled a sheet over us. Almost immediately both of us crashed hard into a deep sleep, the stress and insanity of the day finally taking its toll on us. \n\nIt was not a blissful sleep as both Shannon and I woke several times during the night from horrific dreams. She dreamt that it was me who was killed defending her that day instead of Tristan and Miriam. As for me, I dreamt several times of slamming my Expedition into the side of that Mercedes - only this time, I didn't have a ballistic windshield and the bullets tore into the Expo, shredding both me and Billy Shoemaker. \n\nNeither Shannon nor I were in a lively mood the next morning after having been robbed of so much sleep. Even the comfort of sleeping next to her nude body didn't have the sedating effect it normally did. And so, Shannon called in to Holy Family and took an unscheduled personal day, which no one at the hospital even balked at. Her supervisor, the Director of Nursing for the entire hospital, basically told Shannon to come back when she was ready and that they would cover for her no matter how long she needed. I was grateful for that. \n\nI hadn't set the alarm and we ended up sleeping past eight o'clock, when we both finally reached a point where we could actually get back to sleep from the nightmares. I called into the office and told my secretary, Karen Landingham, that I would probably be in around 10 o'clock. She seemed genuinely surprised that I was coming in at all but I knew things around the office would be chaotic if I didn't. \n\nWhen I was finally dressed, ready and had a couple cups of coffee in me, I kissed Shannon good-bye and she hugged me as though it was for the last time. It wasn't, I promised, and I told her that I would try to get home early just to prove it. She watched me like a hawk as I pulled out of the driveway in my Ford F-150 Crew Cab and didn't stop watching until I was out of sight. I know because I watched her just as close in my rear view mirrors. She was going to leave soon, anyway, to go pick up the kids from Jack and Suzanne's. So I felt better knowing that she was at least going to have something to do and be around people she loved and trusted. \n\nSure enough, there was an absolute media circus surrounding the courthouse when I arrived at work. TV trucks and vans from as far away as Minneapolis, Des Moines, Omaha, Denver, Cheyenne, Billings and everywhere in between were camped out in front of the building. Trucks with huge satellite uplink dishes were beaming reports all across the country and around the globe. Just as Mitch feared, it was getting blown up from a cultural family dispute to a domestic terrorism incident. \n\nI broke my own rules and decided to park my personal vehicle in the Sally Port, which is a two-stall garage where prisoners are brought into for processing into our old, cramped county jail. Only a few more months until the opening of our new public safety center that will house a new jail, sheriff's offices, police department, fire station, National Guard armory, YMCA and a host of other city and government offices. The whole north end of Red River Falls was getting a makeover because of the project with a litany of new retail stores and multiple unit apartment buildings. A new Double Tree hotel and small convention center, which the area desperately needed, were also on the plan for revitalization of the area, thanks to my brain child. \n\nEven the building that housed Tonya Fulbright-Hayes' computer repair/music store was going away to make room for the project. So was the adult book store next door, which pissed off a sizeable group of people who frequented it. The city and county were only required to pay fair market value for the properties (which paid Tonya about $10,000 more than she bought it for!) and then also zoned the book store out of city limits. That meant the adult book store would have probably had to build a store, due to new codes and ordinances severely restricting sexually-themed businesses, and the owner couldn't afford it. So he took the payoff and ran. The building, with its nasty arcade and glory holes, were torn down a week later. \n\nI took the elevator to the top floor of the courthouse, which is where the Sheriff's Office currently is. Stepping into the main office area I was greeted by my secretary, Karen Landingham, who said nothing and just hugged me. I wasn't used to this from her as she is generally very quiet and reserved. \n\n\"Oh, Sheriff,\" she said through her tears, \"I just don't know what to say.\" \n\n\"None of us do, Karen,\" I said, trying to be comforting. I was failing. \n\nWhen she finally let go she wiped her eyes with a tissue and said, \"Some men are here to see you. They're in Captain Villanueva's office.\" \n\n\"Okay, thank you, Karen.\" I made my way towards Ben's office but was greeted with hugs and handshakes by everyone in the entire office along the way. By the time I got to Ben's office, I could see him in there along with Chris Hayes and three men in suits. Feds. \n\n\"Ah, Sheriff,\" Ben said, standing. \"Sheriff, these gentlemen are with the Bureau from the Minneapolis office.\" All three of the men stood as I entered Ben's office. \n\n\"Sheriff, my name is Special Agent Bryce Cooper, FBI. I'm the Agent-in-Charge that will be assisting with the BCI's investigation of yesterday's events.\" Cooper reached out and we shook hands. \"Along with me are Special Agent Miles Pender and Special Agent Hiram Fleischman.\" We all shook hands as well. \n\n\"It's great to have you all here helping out,\" I said. \n\n\"Our pleasure,\" Cooper replied. \"Sheriff, I wonder if we might step into your office for a bit.\" \n\n\"Sure thing,\" I said, leading the way. I got to my office door and unlocked it and gestured to an empty seat in front of my desk as I closed the door behind us. \"What can I help you with, Agent Cooper?\" \n\n\"First of all, Sheriff,\" Cooper said taking a seat, \"I want to extend the condolences of everyone in the Bureau for your department's loss.\" \n\n\"Thank you. We truly appreciate that.\" \n\n\"It's never easy losing our own in the line of duty. We're all in awe of everything your deputy did in the last few moments of his life to help catch his own killers. Truly the stuff of legend. He must've been a helluva deputy.\" \n\n\"He was all that and so much more, thank you.\" \n\n\"I'm sure you probably have some questions about the whole incident that you probably want answers to, especially about the Hammadis.\" \n\n\"I don't have so many questions about the Hammadis. I understand it is some sort of twisted cultural thing, not a religious thing. What I do have a question about, though, is how in the hell a bunch of fully automatic weapons made their way into my county.\" \n\n\"I thought you might ask,\" Cooper said, opening up a small laptop. \"We have reason to believe that the weapons in question came from a group called the Minutemen Militia.\" \n\nI couldn't help but chuckle. \"The Minutemen Militia? Seriously?\" \n\n\"The Federal government takes militias quite seriously, Sheriff.\" \n\n\"I'm sure they do. But where in the hell did the Minutemen Militia come from? The last I knew, they just called themselves The Minutemen and were some fringe offshoot from the Tea Party. They were a political entity. When did they graduate to a militia?\" \n\n\"The government considers them a militia group, Sheriff. We have for quite some time. And they have been a lot more than just politically active. Many of their members are Civil War, World War II, Korea and Vietnam re-enactors. We believe their re-enactment activities are just a cover for more clandestine private military training.\" \n\n\"You can't be serious,\" I said, still grinning. \n\n\"We are absolutely serious, Sheriff,\" Cooper said, annoyed that I found him incredulous. \"We have numerous statements from them indicating possible threats against Congressman Ben Reynolds and Governor Jane Reynolds. Along with that, more than a few members of their group are former military and several others have previous weapons charges on their records.\" \n\n\"Any of them ever been convicted of any weapons charges?\" \n\n\"Not yet,\" Cooper said, somewhat dejected. \"But it is just a matter of time before we get the evidence we need. And we will be charging them with terrorism when we do. The weapons we believe they acquired and subsequently sold to the Hammadis are just the tip of the ice berg. The government has a case. And we will see it to its logical conclusion.\" \n\n\"I'm sure you will, Agent Cooper. I don't mean any offense, I really don't. But I happen to know a few people associated with the Minutemen and I just have a hard time seeing them dressed up in camouflage and running around somebody's farm or ranch playing Army, ya know?\" \n\n\"Lots of people make the mistake of underestimating these people, Quinn. You aren't the first.\" I noticed he dropped the Sheriff title and just called me by my last name only as a slight. So he was going to be like that. \n\n\"Well, Agent,\" I said standing and signaling his time with me was up, \"I'm sure you'll have more info when the time comes. Now, if you'll excuse me, I'm sure you can see we're pretty swamped here and I need to get to work.\" \n\n\"Sure thing,\" he said, trying to cover the fact that he was annoyed. \"We'll let you know the minute we have any new developments for you. I hope you don't think we're stepping on your toes, Quinn, but the Bureau is asking me to take a fairly active role in this investigation. I'll share what we find out and I'll expect the same courtesy from your department, as well.\" \n\n\"Absolutely,\" I said, extending my hand. \"It was great meeting you and I look forward to working with you,\" I lied. \n\n\"Likewise,\" he said, equally full of shit. \"Gentlemen?\" he said, nodding to Pender and Fleischman. They gathered up and started walking towards the elevator. I watched them until they were all in and the door closed. \n\n\"What an asshole,\" I muttered as I returned to my office. I no sooner got sat back down in my office chair when Mitch Monahan showed up at my door. \n\n\"Pat? What the hell are you doing here?\" \n\n\"Uh, being the Sheriff?\" \n\n\"Jesus, Pat!\" he said, having a seat. \"You're supposed to be gone. It's department policy any time a deputy is involved in a shooting that they get 30 days of administrative leave. You have no business being here right now!\" \n\n\"First of all, Mitch, I'm not a deputy. I'm the actual Sheriff.\" \n\n\"I know that, Pat. But you know what I mean!\" \n\n\"Secondly, I'm already down three deputies as it is. Tristan is gone and both Brian Kelly and Billy Shoemaker are already on administrative leave. And, technically, I wasn't involved in a shooting. I slammed a full-size SUV into the Hammadi kid, I didn't shoot him.\" \n\n\"Again, you know damned well what I mean, Pat,\" Mitch said, kinda pissed. \n\nI held my hands up in truce. \"I know, I know. But you gotta understand things from my viewpoint. I'm down three deputies and everyone else's workload just increased. I need to be here for a lot of reasons, as well as just to be seen. I can't afford to be seen as non-existent around here, considering what this entire department is going through.\" \n\n\"I admire your desire to lead from the front, Pat. But I also need to know that you're taking care of yourself, too.\" \n\n\"I have a phenomenal support network at home in my wife-to-be. She'll see to it that I'm taking care of myself or she'll damned well do it for me. One of the benefits to marrying a nurse,\" I chuckled. It was a fake chuckle and Mitch could tell as he just smirked out of courtesy. \n\n\"I'm gonna keep an eye on you, Pat. We need you but we need you whole. If I think for one second that you're anything less than 100%, I'm going to order you to stay away from the courthouse and your office. And don't think for one second that the Supervisors won't back me up, either.\" \n\n\"Fair enough, Mitch. I appreciate you looking out for me.\" \n\nJust then, Karen Landingham buzzed my desk phone. \n\n\"Sheriff? You have a phone call on line 2.\" \n\n\"Thank you, Karen,\" I replied. I picked up the receiver and punched the button for line 2. \"This is Sheriff Quinn. To whom am I speaking?\" For some reason, Mitch Monahan was still sitting there. I didn't mind. It wasn't like I had anything to keep secret from him. \n\n\"Sheriff? My name is Major Del Harrison. I'm with the State Patrol, Commander of the Southeast District.\" \n\n\"Yes, Major. What can I help you with?\" \n\n\"First of all, Sheriff, I want to personally extend my sympathies to you and your entire department on your loss. It's my understanding that Deputy Tristan Embegwe was a superb law enforcement officer.\" \n\n\"Those are very warm sentiments, Major. Deputy Embegwe was, indeed, a consummate professional.\" \n\n\"Secondly,\" he hesitated, \"it is my sad and unfortunate duty to inform you that Trooper Marvin Rockney died of his injuries this morning.\" \n\nI immediately stood up as though I got an electrical shock. I could feel the color drain from my face and a wave of nausea washed over me. I quickly glanced to my right just to make sure that my office waste basket was nearby. It was. \n\nMitch could tell something was wrong and he stood with me, a look of fear and concern across his face. \n\n\"How...I mean...when?\" I stuttered. \n\n\"Trooper Rockney succumbed to his injuries about 45 minutes ago. It's believed that he developed a blood clot near the point where his right leg was amputated. Most likely it traveled to his lungs. He was on a ventilator following surgery. Had he been awake, he might have been able to say he was in pain or having trouble breathing. As it was, it was too late by the time he went into cardiac arrest.\" \n\nI just stood there, unable to process Trooper Rockney's death. By the time I went home last night, the prognosis for him sounded so promising. But now, to find out they had to amputate and there were complications...I couldn't seem to wrap my thick skull around it. \n\n\"Sheriff? Sheriff, are you still there?\" \n\n\"Yes...yes, I am. I'm sorry. I'm just...flabbergasted. I really don't know what to say other than I'm deeply sorry for his family's loss as well as the entire State Patrol. Please extend my regards to his family and let us know if there is anything we can do for them.\" \n\n\"I'll do that, Sheriff. His wife was the one who asked me to contact you. She and the children are there, of course, but the rest of Trooper Rockney's extended family has yet to be notified.\" \n\n\"Thank you, Major. I appreciate the courtesy.\" \n\n\"Take care, Sheriff. I'm sure we will talk soon.\" \n\nI was staring off into space as I put the receiver back down. \n\nMitch closed my office door. \"Jesus, Pat,\" he half-whispered. \"Did I hear what I thought I just heard? Trooper Rockney?\" \n\n\"Yeah,\" I answered, still stunned. \"He...he died...about 45 minutes ago.\" \n\n\"How? I mean, last night they said he was doing well after surgery.\" \n\n\"They, uh...they had to...amputate...his right leg. They think he, uh...developed a blood clot...and it probably traveled to his heart and lungs. He was sedated and didn't even know what was happening to him.\" \n\nMitch and I just stood there, trying to figure out what to say or do. Finally, I walked to my office door and opened it, walking out into the main office floor where almost the entire department was congregating. Many were talking with BCI agents who were still working on reports. But many of my deputies just decided to hang around work just to be around each other. \n\n\"Can I have everyone's attention?\" I half-shouted above all the noise and conversations. Ben Villanueva came out of his office, as well, along with Deputy Lieutenant Chris Hayes. Quickly, the din quieted down and everyone looked at me. \"I'm afraid I have some sad news, everyone,\" I said, trying to steel myself. \"I just got off the phone with Major Del Harrison from the State Patrol. I'm sorry to report that Trooper Marvin Rockney passed away this morning.\" ",
        "I could hear a collective gasp from everyone, including the BCI investigators. \n\nI continued. \"The State Patrol has been kind and gracious to us for our loss and I'm sure you all join me in expressing our deepest sympathies for our Trooper brothers and sisters, as well. At this time, if you all would, please stop what you are doing and stand and join with me in a moment of silence for our fallen brothers.\" \n\nEveryone did as I asked and stood. Many of them were now quietly crying but trying to remain stoic for the moment. After about a half-minute or so, I said, \"Thank you. Let's remember these fine men as we continue our jobs of keeping our citizens safe today. And let's honor them by continuing to look out for one another, as well. God bless you all and stay safe on your patrols today. Make sure everyone goes home at the end of their shift.\" \n\n***** \n\nThe next couple of days were a blur and were spent mostly in preparation for the funerals of Deputy Tristan Embegwe and Trooper Marvin Rockney. Assisting with the funeral prep for a State Patrol member seemed like the least of what we could do considering everything Trooper Rockney did to help stop the threat that day. But out of all the tasks I needed to accomplish, picking up the parents and family of Deputy Embegwe at the airport was the hardest. I tried to anticipate their anger and sadness and prepared for whatever questions and range of emotions they might have. \n\nI drove to Fargo's Hector International Airport. Even though we have a decent-sized airport in Red River Falls, we were currently between providers of our local carrier service. Since it is most decidedly unprofitable for a major carrier to provide service to places like Red River Falls, we have to rely on what is called \"essential air service\", which means occasional flights involving puddle-jumper aircraft that are heavily subsidized by the federal government. When Northwest Airlines was still in business and based out of Minneapolis, we never had to worry about air service since Northwest Air Link provided four flights a day to and from Red River Falls. Now, it seems like we are changing services at least once a year - if not more. The new service, Northland Com-Air, wasn't scheduled to start operations until November. \n\nI greeted the Embegwes at the main terminal. Tristan's father was a rather tall, balding man of around 60 years old with a gentle smile on his face as he greeted me. His mother seemed to be the one bearing the emotional brunt. Although very gracious to me, I guessed that her tears had not stopped flowing since she was told of Tristan's death. Tristan had three brothers and two sisters ranging in age from 13 years old to 24 years old. All of them, including the oldest ones, were single and the two oldest had followed Tristan's footsteps to university. \n\nTristan's father, Daniel Embegwe, rode up front with me while his wife and the five children rode in the back. I knew they were probably hungry for some decent food and so we decided to stop at a Perkins Restaurant just off I-29. I had my department credit card with me and I told them all to order whatever they wanted. I could tell, just by watching them that they had never seen a menu in any restaurant with the abundance of food that they now saw before them. It was a stark contrast of the world Tristan had left behind and the one that he had chosen to build a life and a home in. \n\nDespite my initial ignorance Daniel Embegwe, a professor of economics in Uganda, was extremely well-educated and spoke perfect English, as did his entire family. I thought about how much my own two boys, Nick and Jake, griped about having to go to school and actually having to learn something while they were there. And yet, the entire Embegwe family talked at great length about Tristan and his time in school and at university. All of his children talked with great enthusiasm about their various studies and were incredibly educated and intelligent, especially when one considers that most inner-city schools in the U.S. are better equipped than the ones in Uganda, where Tristan and his family are from. \n\nPerkins isn't anyone's definition of haute cuisine. But if there is one thing they do well, it is definitely breakfast. Most everyone, including myself, ordered breakfast and were so delighted in their meals that they nearly forgot why they were even here in the first place. But I was reminded of that when Daniel Embegwe looked at me as he quietly sipped his coffee and said, \"I must ask you something, Sheriff.\" \n\n\"Ask me anything you wish. And, please. Call me Patrick.\" \n\n\"Thank you, Patrick. I appreciate your candor,\" he said, as he took another sip. He was obviously carefully pondering his question. \"What I wanted to ask you was, did Tristan's death mean something? Was there a purpose behind it?\" \n\nI wiped my mouth with my napkin and carefully considered my response. \n\n\"Well, Mister Embegwe,\" I started. \n\n\"Please. Call me Daniel. You extended the courtesy to me and I must return it.\" \n\n\"Thank you, Daniel. You want to know if there was a meaning behind it or a purpose to it.\" \n\n\"Yes, Patrick. I must know...for myself and for my family.\" \n\nI looked around the table and everyone had stopped eating and was looking at me. Whatever I said in the next few minutes would ultimately determine what they thought of me and what they thought of their son's decision to make a life for himself in America. While I wanted to put the best face on that, for Tristan's sake, I also knew that I needed to be honest with his family. \n\n\"Daniel, your son and his fianc\u00e9e were viciously attacked and murdered. It is difficult for me to sit here and try and attach some sort of meaning to that, let alone a purpose for it. So, no, I cannot say that there was any meaning or purpose behind his death other than to say it was a statement of brutality on the part of the men who took their lives.\" \n\nI could see a crestfallen look befall Daniel's face as well as those of his wife and family. \n\n\"But what I can say for certain is the fact that Tristan died honorably. And while that probably isn't what you want to hear, it is the truth. What Tristan did in the final moments of his life ensured, without a doubt, that his killers and those of his fianc\u00e9e would face justice. His actions undoubtedly saved lives by ensuring that we were able to corral and entrap those evil men before they could get too far and eliminated the risk of a much larger shooting spree in a populated area. While the meaning and purpose are lacking, Tristan showed his true character as a man of courage, honor and conviction before he died. He died a hero. And I think I speak for all of us when I say that is how he should be remembered.\" \n\nDaniel Embegwe sat there and began nodding his head. Soon, tears were streaming down his face but a smile emerged and his face lit up with a mix of joy and sadness. The rest of his family were all crying but smiling, too. \n\n\"Yes, Patrick! That is my son! That is how he shall be remembered!\" \n\nSomething had happened just then that changed the dynamic completely. They finished their meals with great relish and the mood for the remainder of the trip to Red River Falls, while not exactly joyous, was one of reserved contentment and fond remembrance. \n\nI dropped the family off at St Paul's Lutheran Church, where Tristan was a member. One of the more well-to-do members of the church, a local convenience store franchisee, had paid the way for the Embegwes' trip to America and was going to host the family during their stay through the funeral. \n\nSchool had just started and I met Nick, Jake and Bridget as they were getting off the bus. We all walked into the house and the kids were buzzing about their day and all the latest gossip in the school hallway. \n\n\"Hey, Dad,\" Nick called. \"Wanna play some 'Call of Duty' with me and Jake?\" \n\n\"Uh, not right now, boys. I've got a lot of work to do.\" \n\n\"Please, Dad? Just for a little while?\" \n\n\"No! I told you! I've got stuff to do! Just go play with your brother,\" I scolded him. He just stood there as I headed upstairs disappeared into my room. \n\n***** \n\nThe next few days were a flurry of activity as we planned and coordinated Tristan's funeral. St Paul's Lutheran Church was the largest Lutheran church in Red River Falls with well over 2,000 members. St Paul's is where a private funeral service would be held for Tristan. It was the second largest church overall behind St Matthew's Catholic Church, which was where Trooper Marvin Rockney's private funeral would be held the same day as Tristan's. \n\nBut due to the expected arrival of so many law enforcement officers to attend, it was decided that a combined public funeral service would be held for both fallen officers at the spacious Red River Falls High School gymnasium. Overflow seating would be easily provided in the high school performing arts auditorium as well as the Red River Falls Middle School gymnasium. Nearly 5,000 people would be able to be seated and closed circuit viewing would be available for those in the overflow seating. \n\nWell over a thousand law enforcement officers from all over the Plains and Midwest began making their way into Red River Falls. The Minneapolis and St Paul police departments sent a combined bag pipe and drum corps and several other agencies sent their honor guards. As a sign of solidarity, the Red River Falls PD, Mason County Sheriff's Office and the State Patrol would provide the firing squad for the combined funeral. \n\nThe day of the funerals arrived. Regrettably, I could not attend both services at their respective churches. But I was asked by Daniel Embegwe to give the eulogy for Tristan during the public service. \n\nAll of our department's vehicles fell into line with the cortege that included both hearses transporting the bodies of Deputy Embegwe and Trooper Rockney to the school. Brian Kelly drove my Expedition, along with his pregnant and very pretty wife Reba, who rode up front. Shannon and I sat in the back and held hands as we rode to the school. Starting two blocks from the school, the roadway was lined shoulder-to-shoulder with law enforcement officers who saluted in unison as the cortege approached. \n\nOnce we arrived at the school, two separate teams of casket bearers retrieved the coffins and brought them into the gymnasium along with a color guard. They all worked with such polished precision that it would have made the most diehard military Veteran proud. \n\nBoth caskets lay in state for one hour while the public was seated in the auditorium. Both caskets were guarded by a multi-departmental Honor Guard who kept their solemn watch without wavering. The Red River Falls Fire Department had their huge aerial ladder extended all 100 feet with an enormous American flag hanging from it and blowing majestically in the light wind. Every last man and woman from the fire department was also present and at sharp attention as the procession took place. \n\nSurrounding both caskets was nothing short of a multi-colored sea of flowers. Every flower shop in town had to have been sold out of every variety of flower. Both funeral homes were also inundated with so many flowers that they actually had to turn arrangements away and a good number of them ended up at the Sheriff's Office. When we became too overloaded with flowers, we started sending some of them to the local nursing homes to help brighten their day. \n\nFinally, the service started and invocations were given by Pastor Hellevik from St Paul's Lutheran Church and by Monsignor Flannagan from Holy Family. The music was powerful and, yet, soothing. A combined brass band and bag pipers played the most incredible and moving version of \"Amazing Grace\" that you will ever hear in your life and there was not a dry eye or Kleenex in the place by the time they finished. \n\nAnd then, it was my turn. I left Shannon's side and slowly made my way to the podium. The eyes of everyone in the gymnasium were on me but all I could focus on for a few moments were the two flag-draped caskets in front of the dais and wonder how in the hell all of this had come about. But I reminded myself that I had an important job - to provide a eulogy for Tristan and his family that would provide a final summation of his life. I took a sip of water that had been provided at the podium and unfolded the pages of my eulogy. I spoke slowly but methodically. \n\n\"Tristan Daniel Embegwe was born in Kamapala, Uganda on October 27, 1985. He was the first born of Professor Daniel Embegwe and his wife Maruna. Tristan was given a lifelong love of learning from his father, a professor of economics. He finished grammar and secondary school, where he excelled as an athlete and gained local notoriety as a very skilled cricket and soccer player. He would continue his athletics as a player in both disciplines at Kampala University, where he studied both economics and international relations, earning high marks in both fields of study. \n\n\"When Tristan had finished his third year of university, he was recruited in 2006 by the American company Kellogg, Brown and Root to serve as a security specialist for U.S. forces serving in the Middle East. Tristan demonstrated himself to be a model employee and volunteered to serve with American forces in increasingly dangerous assignments and with more responsibility. Tristan would serve a total of two years with KBR and was ultimately rewarded with a student visa to travel to the United States. \n\n\"After coming to America, Tristan was awarded a scholarship to continue his studies at St Olaf College, in Northfield, Minnesota. Tristan would ultimately receive a degree in Liberal Arts and Sciences with honors in 2010. It was during this time that Tristan developed an intense interest in law enforcement and began to pursue that interest. He took additional courses from the University of Minnesota and obtained an additional degree in Criminal Justice in 2012. \n\n\"At that same time, Tristan was granted permanent resident alien status. And so he applied for and was accepted to the Minneapolis Police Academy and graduated in late 2012. He completed 5 months of field training and was subsequently hired as a Patrol Officer with the Cottage Grove, Minnesota Police Department in 2013. \n\n\"In 2014, Tristan took and successfully completed the law enforcement reciprocity examinations for both North and South Dakota. It was with great joy that I was able to extend the offer of employment to Tristan as the first deputy I would hire after becoming Sheriff of Mason County. \n\n\"Tristan demonstrated himself to be level-headed, extremely professional and very calm and collected at all times. He possessed what I called a million-dollar smile and could often defuse intense situations simply with a smile and his soothing demeanor. He had a gift for instilling calm and reason into people who had neither at that particular moment. It was often joked around our department that Tristan could write someone a speeding ticket with the maximum fine and conduct himself in such a way during the entire event that the offending driver would feel compelled to genuinely thank Tristan for the experience,\" I related to light laughter from the audience. \n\n\"Most of all, Tristan quickly demonstrated himself to be someone we could all count on. He accepted every assignment with gusto. And he reminded us all of how great it was to be an American as he relished every moment he got to spend here, especially the joy he felt when he purchased his first home. He became immersed in numerous fraternal and service clubs, as well as his church, St. Paul's. And I'll never forget the joy on his face and the joy we shared with him at the State Capitol the day Tristan officially became a United States citizen. \n\n\"But of all the things Tristan loved in life, nothing would exceed the love he felt for a woman named Miriam. Tristan met her shortly after moving to Red River Falls. Almost immediately, forces came into play that would try diligently to keep them apart. But the heart wants what it wants. And Tristan's heart and Miriam's hearts yearned for each other and they soon became engaged to be married. And although the forces of evil would ultimately take their lives they could not take away the love they had for each other, a love that will now live on for eternity in Heaven. \n\n\"Godspeed, Deputy Tristan Daniel Embegwe. We will miss you.\" \n\nI returned to my seat next to Shannon and she took my hand in hers and gave me a quick kiss. Mitch Monahan had been sitting in the third row behind the families and I could tell from the look on his face that he didn't approve of my mentioning the relationship between Tristan and Miriam. He had warned me ahead of time not to play it up in my eulogy but I felt it would be a disservice to not mention it. \n\nAs the service ended, we followed the procession from the building as the two caskets were again loaded in their respective hearses. The cortege following Tristan's hearse would be short and made up only of Mason County Sheriff's personnel and vehicles as we escorted Tristan's body to Hector International Airport for his return home to be buried in Uganda. Numerous deputies from surrounding counties volunteered to patrol Mason County while the funerals were in progress. \n\nThe remainder of the nearly 1,000 law enforcement officers on hand for the funeral formed a motorcade to the cemetery for Trooper Rockney's interment. Nearly 500 members of the Patriot Guard preceded the cortege and lined the entrance and roadway with each of them holding an American flag. To say that the entire day was moving was a gross understatement. The outpouring of support from the public was massive and incredible. \n\nOnce at the airport, Tristan's casket was removed with solemn dignity by the casket bearer honor guard. I and all of my deputies stood at attention and slowly rendered salutes as the casket was carefully loaded onto a lift and secured in the cargo hold of the belly of the aircraft. My immediate thought was how perverse it seemed to place him there, along with luggage and other inanimate objects. For a moment, I started to lose my composure as I was overwhelmed with the thoughts of Tristan being all alone in there. As I did so, nearly everyone else standing with me did the same. Soon, Tristan's casket was out of sight in the belly of the metal bird and we all slowly lowered our salutes. And that moment was the last I would ever see of Tristan Daniel Embegwe. \n\n***** \n\nThe ride back to Red River Falls was quiet. Neither Brian nor his wife Reba said much, nor did Shannon and I. All we did was just ride in quiet and hold hands, immersed in our thoughts. For Brian and me, our thoughts were constantly replaying the events of the day that had led to this. For Reba and Shannon, their thoughts were undoubtedly obsessed with the horror of how close they came to being widows. \n\nWe returned to the Sheriff's office where Shannon and I retrieved our vehicles. We had driven separate so she could be home when Bridget got out of school. Both Nick and Jake were going to Clarissa's house for a while after school and I would pick them up after supper. I wasn't looking forward to that in the least bit, especially as I could sense some kind of growing panic from my ex-wife the closer Shannon and I got to the wedding. I wasn't sure if Clarissa held out some kind of hope that we wouldn't go through with it or if she just wanted things to torpedo because she was a malevolent bitch. Probably a bit of both, I figured. \n\nShannon and I hugged for a long time and shared more than a few tender kisses. She still wasn't ready to let me out of her sight but I needed to at least make an appearance at the Knights of Columbus Hall where a funeral lunch was being held for Trooper Rockney's family. I had to show my support for them and all of the State Patrol, given the amount of support they gave to my department. ",
        "I spent nearly three hours at the KOC hall visiting with law enforcement officers from all over the upper Midwest and Plains. It was nearly 17:00 and there didn't seem to be much point in going home just to have to come back and pick up the boys from Clarissa's. And so I went back to the office and worked on a few items but didn't really get anything done. I just felt like I needed to be somewhere doing something. \n\nFinally, about 18:30 I got in my truck and made my way over to the condo complex where Clarissa lived. I pretty much had to drag myself to her door and force myself to ring the bell, not because I didn't want to pick up the boys but because I just really didn't want to deal with Clarissa. But ring the bell I did and she answered. She was dressed in a light cream-colored mid-length one-piece form-fitting dress that seemed overly formal - and even a bit inappropriate given how closely it seemed to hug her figure. \n\nThe thing, or things, that stood out were sitting on her chest. Clarissa had always had a very trim and athletic figure. She was a good looking woman, make no mistake about it. I had never griped about that. One would never guess, however, that a black lump of coal beat inside her chest in the same spot that most people actually have a heart. Perhaps that lump of coal where her heart should have been was responsible for fueling the fire of insanity that seemed to have been lit where her brain should have been. Regardless, it wasn't my problem to worry about anymore, save for where my boys were concerned. \n\nBut while Clarissa had always been a very attractive woman, voluptuous was a word that no one had ever described her with; which made me wonder just exactly where the new pair of sweater kittens came from that now graced her upper torso. The entire time Clarissa and I had been married she had sported a set of A-cups that I never once complained about. They did their job adequately in nursing our kids and I had always paid them their proper and due respect every time I made love to her in the past.  \n\nNow, however, she was sporting what was clearly a set of enhanced \"C's\" or maybe even some low-end-of-the-scale \"D's\". I wondered whether her mother, Caroline and her extremely wealthy companion Martin Belmond, had paid for the \"enhancements\" or if Clarissa's on-again-off-again romantic interest, Tom Wellington, had ponied up for the chest pillows. \n\nBut against my efforts not to stare, I apparently glanced a bit too long as Clarissa answered the door and she noticed my extensive gaze, as evidenced by the half-smile half-smirk that crossed her face. \n\n\"Good evening, Patrick,\" she almost cooed. \n\n\"Hello, Clarissa. Are the boys ready to go?\" \n\n\"They're just finishing supper,\" she said. \"Have you eaten? I can fix you a plate before you go. Just some tater tot casserole, but the boys like it. Want some?\" \n\n\"No, thank you. One thing about funerals is that there is no shortage of food and flowers.\" \n\n\"Well, the boys will be finished shortly,\" she said, turning away and obviously arching her shoulders back to push her new boobs out forward in full display. I just shook my head in disbelief. No matter how hard she would try, her tits were no match for Shannon's. And best of all, Shannon's were real! \n\nI waited impatiently for the boys to finish eating and was becoming more and more agitated, especially since Clarissa wanted to engage in endless small talk the entire time. She was slowly sipping on a glass of wine and doing her best to try and look sexy while doing it. No matter how good she looked, she would never again hold any sexual interest for me; not after what she had done to butcher our marriage by fucking numerous other men while still married to me and planning to destroy my life at the same time by plotting a very lengthy prison sentence for me, as well. \n\n\"Come on boys, let's finish up already,\" I finally said, losing my cool. \n\n\"I want seconds before we leave,\" Nick said. \"I love Mom's casserole.\" \n\n\"Come on, Nick, get your stuff. We're leaving. If you're still hungry when we get home, we've got plenty of stuff there to eat.\" \n\n\"Dad, Mom made a lot. Can't I just have some more before we go?\" \n\n\"Nick, I'm warning you. Get your backpack and let's go. Your brother is ready to go and so am I. You can get something to eat when we get home, okay? I've had a very long and stressful day and I'm just ready to get home, okay?\" \n\nNick stood there like I had run over his puppy. But I was getting irritated with him as he generally never challenged me. But he seemed to be getting more surly since he hit his teens. \n\n\"Come on, sweetie,\" Clarissa said. \"I'll put some in a Tupperware container for you to take home.\" \n\n\"Okay,\" Nick said, dejected. \n\n\"Grab your stuff and you and Jake can head on out to the truck,\" I ordered. \n\nNick reluctantly did as I said but not before giving me a look of death in the process. For a brief moment, I was actually tempted to smack him but I held back. He took the container of casserole from his mother and stormed out of the condo, followed by Jake. \n\n\"Patrick,\" Clarissa said. \"I understand you have had a horrible day and week. But the boys don't understand that. Whatever you're feeling right now, you don't have a right to take it out on them.\" \n\n\"Oh, give me a break, Clarissa! You knew damned good and well what time I was picking the boys up tonight. They should have been ready to go. But no, you were just feeding them as I was getting ready to pick them up.\" \n\n\"Yes, dinner was a bit late, but I wanted to actually spend some time with the boys and we lost track of time. I'm sorry, Patrick.\" \n\n\"Oh, please. I show up and you're wearing a form-hugging dress to show off your brand new tits, slowly sucking down a glass of wine and wanting me to have a glass with you, all the while you're dragging way past the time you're supposed to have them.\" \n\n\"What, you think I wore this to try and seduce you or something? Boy, do you have some ego!\" \n\n\"Give it up, Clarissa! The only reason I even let the boys spend time here is out of the goodness of my heart and not because I have to. Keep this up and I'll enforce the actual terms of our divorce and you can see the boys every other weekend!\" \n\nI left Clarissa standing in her doorway, mouth nearly dropped to the floor, as I stormed off back to my truck. As Sheriff, I might have to put up with a lot of people's shit on a daily basis. \n\nBut I didn't have to put up with Clarissa's. \n\n***** \n\nWith the funerals behind us I could finally start to focus on the wedding, which was coming up in only a couple of short weeks. There was still so damned much to do that I was almost dreading it. The church was reserved, we knew who was going to be participating in the wedding party and we knew where the reception and dance was going to be. Now came the part of figuring out all the minutiae that would tie everything together. \n\nI decided to take a day off work and spend it with Shannon helping her get some of those things figured out. First of all we needed to get the flowers finalized. We were working with Cherbourg Floral who had a flower shop in the Red River Mall. Our local shopping mall isn't much to brag about and has had a lot of trouble keeping decent stores in there. Mostly, it was because so many people made the trip to Fargo and St Cloud to the bigger malls. But we felt it important to support a local business and the Cherbourgs had been in business for over 40 years. \n\nA weird thing happened while we were in the store, though. A cold wave washed over me and it was all I could do to keep my hands from trembling. I started sweating and my heart began to feel like it was going to fly out of my chest as it was beating so fast and so hard. Worse, I also felt a range of emotions take hold of me; a combination of both fear and rage. There didn't seem to be an explanation for it. I excused myself from store and went to the bathroom and splashed some cold water on my face. I was in there for almost ten minutes before I felt calm enough to return. I decided not to say anything about it to Shannon and would just claim an upset stomach if she asked. \n\nWe had just finished giving the final order to the florist and decided to grab a snack from Pretzelmaker. As we strolled through the mall, I saw someone who looked so familiar and, yet, so very different. The identity was confirmed - not by recognizing the person - but by recognizing who she was with. And that person was none other than my predecessor, former Mason County Sheriff William \"Bud\" Roberts. And the person he was with was his emaciated wife, Margolene Roberts. \n\nI was shocked as I looked upon her. A smile crept over her face as she saw me. She had never been what I would call an obese woman but Margolene had never been tiny, either. She now looked so terribly thin and her cheeks appeared sunken in. She walked slowly, holding Bud's hand. Her skin was pale and almost ashen. The dead giveaway was the fact that she was wearing an immaculate silk bandana to wrap her head in. Margolene obviously had cancer. \n\n\"Patrick!\" she exclaimed in a voice that was barely louder than a whisper. \n\n\"Margolene! What a surprise!\" \n\nShe delicately reached out to me and took my hands as I leaned in and gave her a platonic kiss on the cheek. \n\n\"It is so good to see you, Patrick! It has been too long.\" \n\n\"Yes, it has. Yes, it has. Margolene? This is my fianc\u00e9e, Shannon Sullivan. Shannon, this is Margolene and Bud Roberts.\" \n\n\"It is a pleasure to meet you,\" Shannon said, shaking both their hands. I damned near felt the need to get an empty ice cream bucket to hold all the drool that Bud was slobbering as he ogled Shannon. \n\n\"She's your fianc\u00e9e?\" Margolene asked. \"I didn't even know you were seeing anyone, Patrick, let alone engaged. How marvelous! And I must say, you are absolutely gorgeous, Shannon!\" \n\n\"Why, thank you!\" Shannon blushed. Bud just stood there and gawked at her, which royally pissed me off. \n\n\"Uh, I don't mean to pry,\" I said, delicately, \"but are you doing well, Margolene?\" \n\n\"Ah, yes. The head wrap gives it away. I was diagnosed with breast cancer this past January. Sixteen weeks of chemo and radiation. But I'm determined to take Old Man Cancer the full fifteen rounds and give it all I've got,\" she said with false motivation. \n\n\"How far are you?\" I asked, afraid to know. \n\n\"Well,\" Margolene said, hesitantly, \"I was stage 3 when I was diagnosed and officially stage 4 by the time I finished my first round of chemo.\" \n\nI was taken aback by her statement. Stage 4 following her chemotherapy could only mean one thing - her cancer was terminal. \n\nMargolene could tell I was shocked by her admission that her cancer was so advanced. Meanwhile, Bud just stood there and said nothing. Worst of all, he acted like Margolene and I were just talking about the weather. It was obvious that he didn't give two shits about his wife's cancer. \n\n\"Margolene, I really don't know what to say.\" \n\n\"You don't need to say anything, Patrick. We're not out of options yet and I don't intend to go quietly into the night,\" she said, reaching out and taking Bud's hand. Bud seemed to shake out of a daydream as he looked at Margolene and flashed her a politician's smile. \"But please, Patrick. Tell me about the wedding. I don't think I ever received an invitation,\" she said, both hopeful and slightly hurt. \n\n\"Oh, gosh,\" Shannon said, coming to my rescue. \"That's probably my fault. I'm the one who put the guest list together and I wonder if I just overlooked it. I'm so sorry. But here,\" she said, handing Margolene an invite from her purse. \"I just happened to have one on me! I'm sorry it isn't personally addressed but, of course, you are cordially invited!\" \n\n\"Oh, how wonderful! Wow, it's really getting close! Only a week from Saturday! But I think we are actually free that day! Oh, I'm so excited!\" \n\n\"Well, we'll be so excited to have you both!\" \n\nI gave Shannon a look of 'what the hell?' But she just reached over and grabbed my hand as a sign of reassurance. \n\n\"Would you mind sitting with me for a while, Shannon? I'm a little tired and need to rest for a bit and I'd love to visit with you and get to know you a little better.\" \n\n\"I'd love to,\" Shannon replied. And the two of them sat down on a bench in front of the Walden's book store. \n\n\"I'm gonna go look at something in Sears real quick,\" I said. \"I'll be back in about five minutes.\" \n\n\"Okay, babe,\" Shannon said. \n\nI didn't really have anything to look at. I just needed to get out of the immediate vicinity of Bud Roberts and I knew that Shannon would be safe as long as she was in the company of Margolene. Plus, she knew all about Bud Roberts and Clarissa. \n\nI was just doing some window shopping for some Craftsman tools when a familiar and unwanted form came up behind me. \n\n\"You decided to excuse yourself from the girl talk, too, huh?\" Bud said. \n\n\"No, Bud. I just decided to change the scenery,\" I acidly replied. \n\n\"Fair enough,\" he said, downtrodden. \"Look, Patrick, I know you don't owe me anything. I've accepted that. But I want you to know that I was sincere when I apologized to you about everything that happened. And now, with everything going on with Margolene, I realize more than ever what a fool I was and how badly I hurt my family.\" \n\n\"Really? I'm supposed to think you had some epiphany from God that made you see your evil ways?\" \n\nBud looked at me for a bit. \"I suppose I deserve that. And, no, it wasn't an epiphany. It took me a long time to get there and to admit to myself what I'd done and how I hurt so many people. And, in the process, I also hurt myself, too.\" \n\n\"Yeah, you looked really broke up about it at the time.\" \n\n\"Look, Patrick. I know I can't expect you to forgive me. But I've learned that I can't live the rest of my life waiting for people to forgive me, either. So, I've basically had to learn to forgive myself; to allow myself to be human and make a human mistake.\" \n\n\"Look at me, Bud,\" I said, moving face-to-face. \"What you did was no mistake. You preyed upon my ex-wife. You took advantage of everything you knew about me and everything you knew about my ex-wife and you used that to manipulate me. You let me believe we had a friendship and a solid professional relationship. And you used both of those things to move in on my wife and my family and to generally plot my eventual destruction. Your plan involved framing me for a lot of shit I didn't do and to have me thrown in fucking jail, you self-centered prick! None of that was a mistake! It was all planned! So get over your damned self!\" \n\nBud sighed and tried to look defeated. \"I understand how you feel, Patrick. If I was in your shoes I would probably feel the same way. I just want you to know I'm sincere.\" \n\n\"You know what the problem is with insincere people, Bud? They always have to try and tell everyone how sincere they are. Because nobody believes them.\" \n\n\"Look, Patrick. My wife is...dying. I'm not dealing with it very well and I'm truly trying to come to grips with some of the decisions I've made in the past. I'm trying to come to terms with the fact that the mother of my children is getting ready to transition from this life to the next. I'm going through a hard time, here.\" \n\nI took a deep breath and faced away from Bud. \"In deference to Margolene, a woman I have the utmost respect for, I'm going to cut you some slack. But don't think that this means we're friends. I'm only doing this for your wife and kids.\" \n\n\"Thank you, Patrick.\" \n\n\"How are your kids these days?\" I asked, trying to change gears. \n\n\"They're fine, they're fine,\" Bud said. \"Billy works as a software analyst for Harley-Davidson in Milwaukee. Absolutely loves it. Bruce works for IBM over in the Twin Cities. Abigail works in public relations for United Airlines, also in the Twin Cities, and Melissa is still going to the University of Minnesota with a major in mortuary science. God only knows where she picked up that interest but no doubt she'll have a job for life.\" \n\n\"I guess we never know how our kids will end up. We can only support them as best we can.\" \n\n\"Yeah, you got that right,\" Bud said. \"So, uh, how are your boys doing these days?\" \n\n\"They're good. Nick is in 8<sup>th</sup> grade and has the attitude to prove it. Getting to the point where he's got it all figured out. But he's a good student and loves playing football. Jake is in 6<sup>th</sup> grade. He's discovered he likes soccer more than football, which gets him a lot of crap from his brother.\" \n\n\"Ah, yes, soccer,\" Bud mused. \"I've always liked Mike Ditka's philosophy about soccer. He said, 'if God wanted us to play soccer, he wouldn't have given us hands'\", he chuckled. \n\nI had to admit it was a good line. And for a brief moment it almost felt like Bud and I were friends again - the way we were before I found out he had been fucking my wife for over a year. But the elongated pause that took place told me that Bud was just dying to ask about Clarissa. I decided not to take the bait and, instead, just let him twist in the wind for a minute or so before he finally got the balls to ask. \n\n\"And their mom?\" he finally asked. \n\n\"Clarissa? What about her?\" I said, narrowing my eyes. Bud obviously didn't get the hint. \n\n\"She's, uh...she's good?\" he asked, sheepishly. \n\n\"She's fine,\" I replied, tersely. \n\nBud just nodded, obviously realizing the danger of going much further. Truth is, I really didn't give a shit about him and Clarissa anymore. Or, at least I thought I didn't. But I did get a kick out of seeing him anguish over the fact that he couldn't have her and the fact that Clarissa really didn't want him anymore, even if she thought I didn't care if they were ever together again. But it was pretty damned distasteful that he was asking about his ex-lover while his long-time spouse with cancer was literally just yards away. \n\n\"I think it's time to end this conversation and get back to Shannon and Margolene,\" I said, turning to go. \n\n\"Right, right.\" \n\n\"Find anything interesting over there?\" Shannon asked as I returned. \n\n\"Nothing we can't live without,\" I said, forcing a smile. \n\n\"So, I guess we'll see you a week from Saturday then! Oh, gosh, I just can't wait,\" Margolene said, ecstatically. \n\n\"It was so nice visiting and getting to know you,\" Shannon said. \"It will be an honor for us to have you there!\" \n\n\"Yes, it will,\" I added. \n\n\"I'll go get the car and pick you up at the entrance,\" Bud interjected. \"I don't want you to have to walk that far.\" \n\n\"Thank you, sweetheart,\" Margolene said, squeezing his hand. \n\nWe visited a few more minutes with Margolene until Bud arrived with the car. She mentioned how she felt Bud wasn't taking her illness very well and how she thought he was in denial and she worried about how he would take care of himself after she was gone. It was tough hearing someone talk about the end of their life and the whole thing made me uncomfortable...and extremely angry. A lot of the old anger was resurfacing, especially because this woman loved Bud Roberts but had absolutely no clue about the depth of his betrayal to her...or me, for that matter. And I never had the guts or the heart to tell her. \n\nShannon took Margolene's arm and walked her the short distance to the front of the mall and helped her into Bud's vehicle. Bud, of course, didn't bother to get out and help, being the caring husband and all. \n\n\"I know how tough that was for you, Patrick,\" Shannon said. \"But I also know how much you like Margolene and I can see why. She's one of the most genuine and caring people I've ever met. Something about her seems so real.\" \n\n\"She is,\" I replied, kissing her. \"She reminds me a lot of you. You're right. She's the real deal. Besides having an affair with Clarissa, I just can't get over the fact that he would do something like that to Margolene.\" "
    ],
    "authorname": "soldierboy50401",
    "tags": [
        "loving wife",
        "betrayal",
        "anger",
        "jealousy",
        "forgiveness",
        "reconciliation"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/flowers-for-all-occasions"
}