{
    "title": "A Love for Micah Ch. 07",
    "pages": [
        "OK, we're at the end, with epilogue, because I never want to leave people wondering what happens next. Don't hate me too much for how Chapter 6 ended!!\n\nI did something a little different with this chapter. It's still Micah's story but I added some sections from Jo's point of view so you could see a little where Jo's head is at. It's a longer, emotional chapter, it was emotional for me to write it, so if you haven't been crying yet, hold on. Thank you for going on this ride with me, Micah and Jo.\n\nI've gotten so much love for this story it's overwhelming, so thank you, truly!\n\n-KK\n\n~~~~~\n\n<p align=\"center\">Chapter 7: If the World Was Ending You'd Come Over, Right?</p>\n\nIvan opened the door with a smile. \"Hey, baby.\"\n\nMicah resisted the urge to sneer at him and walked in. \"Hey, Ivan.\" Ivan closed the door and put his arm around Micah's waist but he smoothly came out of his embrace. \"Ivan, no. I have a boyfriend.\"\n\nIvan scoffed. \"Not for long.\" He walked over to the couch and sat down, and opened his legs wide. He patted his thighs and said, \"C'mere baby.\"\n\nMicah went over to him but sat on the coffee table in front of him. \"Why are you doing this to me? To him?\"\n\n\"Doing what?\" He leaned in to kiss Micah but he moved his head back.\n\n\"I'm serious. You have to tell the truth and let this go.\"\n\nIvan scoffed again. \"I thought you came over here for some dick, not to talk.\"\n\n\"I came for both,\" Micah said convincingly.\n\nIvan smiled. \"Now we're talking.\" He moved to kiss Micah again, but Micah again pulled back.\n\n\"No. I told you I have a boyfriend.\"\n\n\"Yeah? Does your boyfriend know you're here with me?\" Micah did not answer. \"That's what I thought. Fuck now, talk later.\" He moved to kiss Micah for a third time and Micah let their lips touch, but then quickly pulled away before Ivan could put his tongue in his mouth. He reached down between them and started unbuckling his belt.\n\n\"Yeah,\" Ivan said happily and leaned back on the couch.\n\nMicah slowly got on his knees and pulled Ivan's cock out. He pulled the foreskin back and paused for a moment as the guilt washed over him for what he was about to do, but then exhaled and opened his mouth to engulf Ivan's cock in it. Ivan let out a groan and held Micah's head as he deep throated him repeatedly. Micah added the right amount of pressure that he liked, concentrating on the underside of his head.\n\nWithin minutes Ivan was trembling under him. He pleaded, \"Wait, I'm going to cum...wait wait...uuuugh.\"\n\nMicah sped up and brought Ivan to ejaculation on purpose. He immediately closed his throat as his mouth filled up with salty cum, then pulled off him. He turned around and grabbed a used cup from the coffee table and spit out Ivan's semen, then hawked spit again to ensure not one drop was swallowed. He turned to look at Ivan defiantly.\n\nIvan laughed. \"Damn baby, it's like that?\" He stood up and stepped over Micah to go to the bathroom.\n\nMicah eased back onto the coffee table, his hands shaking. He said quietly, \"I'm so sorry, Joseph. I'm so sorry.\" His eyes welled up with tears and he quickly wiped them away as Ivan came back out of the bathroom.\n\n\"Now, where were we?\" He came to sit in front of Micah again and started pulling at his clothes.\n\n\"Ugh, stop,\" Micah said, almost disgusted. He grabbed his wrist to stop him. \"What are you doing, Ivan? Why are you acting like you want me all of sudden?\"\n\n\"What do you mean, I've always wanted you.\"\n\n\"Well that's news to me. Because we weren't dating, we were fucking. And you're not out.\"\n\n\"But so what? We were together, and then you just stopped talking to me. That fucking hurt.\"\n\n\"Why did you do that to me last Saturday?\" Micah asked.\n\n\"Do what?\" Ivan asked. Micah did not answer, needing him to say it on his own. He gave him a look with his eyebrow raised. \"What part? When I hit you or when I spit on your boyfriend?\" he said smirking.\n\nBingo! Micah stayed calm and said, \"Yes, all of it. Start with why you hit me.\"\n\n\"I just told you. You ghosted me and hurt my feelings. You're lucky your boyfriend did come along to defend you or I would have beat the shit out of you right then and there.\"\n\nDouble Bingo. \"You think that gave you the right to put your hands on me and try to physically harm me because I ghosted you? Are you really that obsessed with me?\"\n\n\"If you're looking for an apology you're not going to get one,\" Ivan said arrogantly.\n\n\"Is that why you spit on Joseph? To provoke him and make him angry enough to hit you?\"\n\nIvan laughed. \"I spit on him because he's trash, but yeah, he hit me so now he's fucked. The law is on my side.\" Ivan laughed again.\n\n\"But you know Jo was only defending me because he saw you hit me, so why did you lie to the police?\"\n\nIvan shrugged. \"Fuck him. Once he's out of the picture it won't matter anymore.\"\n\n\"You can't do this, Ivan. You can't ruin a man's life just because you want me back. That's insane.\"\n\n\"I can. And I will.\"\n\n\"So you're just going to lie to the police, your lawyers, everyone and act like Jo violently attacked you for no reason?\"\n\nHe shrugged. \"If you come back to me I won't.\"\n\nMicah scoffed. \"You're fucking nuts. I'm not going to come back to you.\"\n\n\"Why not?\" he whined.\n\nMicah softened. \"Because I love him, Ivan. I love him and I'm asking you, begging you not to do this. Please?\"\n\nIvan's face hardened. \"Let's see if that love lasts when he's sitting in prison for attempted murder.\"\n\nMicah sighed, \"Ivan-\"\n\n\"No, fuck that. I'm going to make sure he suffers because he took you away from me.\" Ivan stood up and towered over Micah. \"I'm going to tell everyone that he called me a faggot while he hit me, making it hate crime. I'm going to do everything I possibly can to make sure he doesn't see the light of day for a long time.\"\n\n\"Even in a court of law? You're going to commit perjury just to get me back?\" Micah asked incredulously.\n\n\"Fuck the court of law!\" Ivan yelled. \"The court of law is going to be whatever I say it is. I even got Troy to back up my story, so he's going to lie too. Your boyfriend isn't going to stand a chance. And when it's all said and done-\" he stroked Micah's cheek. \"...you'll find you're way back to me. Mark my words.\"\n\nMicah had gotten all he needed. He gently took Ivan's hands off his face and stood up. \"Goodbye, Ivan.\"\n\n\"Wait!\" Ivan called. \"I thought we were going to fuck?\"\n\nMicah ignored him, walked to the front door and let himself out. He walked off campus and a few blocks down before he reached into his pocket to pull out his phone to turn off the recorder. He played it back to make sure the whole conversation played clearly, then he copied it and uploaded it to the cloud, praying it was enough to make this nightmare end.\n\n~~~~~~~\n\n<p align=\"center\">*JO*</p>\n\nAfter I listened to the recording on the cloud again, I tossed and turned for the fifth time that night, then just laid there looking at the ceiling in the darkness. The sun will be up soon and that will make day three. I'm in a constant state of depression. I could blame it on what's happening with Randy and that is part of it. They gave him two weeks tops, but Randy is a stubborn bastard. He'll go when he's good and ready, we all know this.\n\nBut I know the other part, the bigger part is that it's been three days without my Angel. I can't sleep, I can't eat, all I do is obsess over him. It's like it was in the beginning when we first met. And once we got together I didn't have to obsess anymore because he was mine. Mine to hold, to love, to care for. But he gave himself to someone else so he's not mine anymore. And it's killing me.\n\nI don't know what to do. Do I go against my principles and take him back? Does he even want me back after the things I said to him? Is it really over between us? I audibly groaned at my thoughts. I need my Angel. I want my Angel back. But how could I be with someone who cheated on me? What kind of man would I be if I went back to someone who thought so little of how I feel about him? I can't do it. I won't do it. I'd rather lay here with my heart breaking as every day passes without Micah's body next to me.\n\nFuck it. I got out of bed and started getting dressed thinking, Might as well go see Randy at the hospital. I'll focus on spending time with Randy for however long he has. I jumped in the car and drove over to Lancaster General and instead of fighting it, I let Micah consume my thoughts.\n\nMicah consumed my thoughts day and night when we first met. I've never had someone give me butterflies before but Micah gave me butterflies right from the beginning. I came into that cafe that first morning and watched him watch me with his light brown eyes with the slight green center, hypnotizing me. I found myself walking toward him so when he tripped it took no time at all for me to get to him to help him up. The feel of him in my arms, the closeness of having his body against mine, his long, thick eyelashes blinking at me in shock and embarrassment, it stirred something deep inside of me.\n\nI held him up that first day and the way he looked at me with those hazel-like eyes was pure adornment. I knew I was coming back to that cafe every single day before he invited me to stay. Seeing him almost every day of the week made me happy. And since he never missed a day of work, I woke up happy every morning just knowing I was going to see his smiling and gorgeous face.\n\nThat morning I ran into him on the street was pure luck. Or fate. He had no idea how sexy he looked, how hard he made me just sitting next to me in my car. I wanted to run my fingers through his curly hair so badly and kiss him. Then he reached over and held my hand, sending me into overdrive. My desire for him reached top level in that five minute ride, and it never left. It's here even now.\n\nJust the thought of his tight little body and round bottom had me growing as I drove to the hospital thinking of him. He was right, the sex is fucking amazing. It's been four days since we last made love and I feel like I'm losing my mind. This is the problem, I lose all sense of myself when I'm not with him. And when I am with him I live to make him happy. To see that smile, to hear him laugh, to taste his skin and have him moan my name. My chest is tight, my dick is hard and I feel like I'm suffocating without him.\n\nI was so afraid in the beginning, afraid of my feelings for him. The more I spent time with him and got to know him, stronger my feelings became, and it scared the shit out of me. Not just because he was a man, although that was a part of it. But because I've never felt that strongly about anyone ever before. I've fucked up every single relationship I've ever had because I didn't really care about them, so I needed to slow everything down between us to be sure that I wouldn't fuck up with him. And now I've gone and fucked up this one too. But this one hurts.\n\nGod, I miss him so much. He's called me every day and I didn't pick up his calls but I listened to all his messages. I'm not ready to talk to him just yet, because I honestly don't know what to say. I'm angry but I'm lost without him. I need to get through Randy's passing and then I'll figure out my future with Micah, if there even is one.\n\nGod, the things I said to him... he'll never forgive me. I'll never forgive myself.\n\nI parked and went upstairs to the 4th floor. It was still early and a nurse eyed me as I casually walked past her but she didn't say anything. I expected Randy to be asleep but I opened the door to the two of them laughing, Randy was in the bed barely able to move and Jerry leaning onto the bed with his elbows saying something that made Randy laugh. I'm going to miss his laugh.\n\n\"Heeeey,\" Randy called out softly as I came in.\n\nI sat on the edge of the bed and said, \"I thought you'd be sleeping.\"\n\n\"Nah. I'll sleep when I'm dead,\" he joked. I just shook my head. \"Why are you here so early?\"\n\n\"I was just thinking of you. Wanted to spend some time with you.\"\n\nRandy gave me a skeptical look. \"Don't use me to take your mind off your problems. You called him yet?\"\n\nI sighed. \"No.\" Randy and Jerry exchanged looks. \"It's over, guys. Just let it go because I have.\"\n\nJerry started laughing. \"No you haven't. You aren't fooling anyone but yourself.\"\n\nI sighed again. \"I didn't come here to talk about Micah.\"\n\n\"Well, I wanna talk about Micah,\" Randy groaned as he tried to move his head and Jerry instinctively adjusted his bed so he could sit up and to make him comfortable. Then Jerry sat in the chair next to him and folded his ankle over the other knee. They looked at me and waited for me to get it all out.\n\n\"You already know how I feel,\" I started. \"He shouldn't have done it. But the thing that bothers me more was how nonchalant he was about it. Like it was the most normal, natural, logical response to persuading Ivan to drop the charges. I'll just suck his dick. What kind of shit is that?\"\n\n\"He did it for you,\" Randy said. \"Because he loves you and wanted to make sure your life wasn't ruined.\"\n\n\"I didn't need him to do that. There were other ways that he could have helped. He could have just talked to him without blowing him,\" I said angrily.\n\n\"He helped the best way he knew how. And get mad all you want, but you're here and not in jail right now,\" said Jerry. \"So maybe forgive him and let it go.\"\n\nI leaned across the bottom of Randy's bed. \"I just don't understand how he could be so casual about it. Just giving what was mine to someone else. We're so different. We see the world differently.\"\n\nRandy said, \"Yes, you see it in black and white and he sees it in colors. Going through colorful things in your life does that to you.\"\n\n\"Then we're not compatible,\" I told them definitively. \"Because I need someone whose moral complex is closer to mine. He's not my type.\"\n\n\"No you don't,\" Jerry said. \"You don't need someone with the same moral complex. You need someone to challenge you, call you out on your shit and force you to see the gray when things aren't just black and white. You're struggling right now because you're outside of your own comfort zone, forced to see the gray. Trust me, I know what that feels like.\" He patted Randy's thigh. \"Also, he's an entire human being, he's not yours. He's person, not an object for you to claim. He was a functioning adult before you came into his life.\"\n\n\"And he's exactly your type,\" Randy chimed in. \"He's funny and loyal. And super fucking cute.\"\n\nThey were annoying me so I just started throwing shit at them. \"He's always late and makes me wait and you know I hate to wait. He rarely takes things seriously. He is 25 years old with no aspirations and still trying to figure out his life and I'm already established. He argues about the dumbest shit. He's too unconventional for me. He's too young for me in general. All these things are incompatible with me.\" Randy chuckled, annoying me more.\n\n\"So what you're saying is, he's his own person and you can't control him,\" Jerry deduced. \"Good. You need a partner, not a lapdog that's going to just do what you want when you want it.\"\n\n\"He cheated on me,\" I reminded them both.\n\n\"He saved you,\" Randy said softly and nudged me with his toe. I know it hurt him just to do that. \"He saved you because he loves you. He'll do anything for you.\"\n\n\"You really don't see anything wrong with what he did?\" I asked incredulously.\n\n\"Eh. Don't ask me because I'm a morally questionable guy anyway. If it was me, I would suck anybody off to keep Jerry safe.\" He shrugged. \"Ask the less morally bankrupt guy over there.\"\n\nJerry laughed. \"It's not that I don't see anything wrong with it. I just understand why he did. So just talk to him and get him to understand how you feel about it, then come to an agreement about what is acceptable and not acceptable in your relationship. Also, if it was Randy, I'd suck a dick too.\" He shrugged and Randy chuckled again.\n\n\"Why are the two of you rooting for this so badly? Because he's the first guy I've really been with? Because there can be others,\" I reminded them.\n\n\"But none like Mikey,\" Randy said what I already knew. \"Someone that will make you happy with his silliness and loved with how he treats you. That boy loves you so much but more importantly, you love him too.\"\n\n\"I do love him. But what if love isn't enough?\"\n\n\"Shuuuudaaaap!\" Randy mused. \"Love is always enough.\"\n\n\"No it's not,\" Jerry disagreed. \"Love is the foundation, but you need trust, honesty and mutual respect. I'm not completely against how you feel about the situation. Randy has cheated on me more times than I can count, so I know it doesn't feel great to know that the love of your life has shared himself with someone else.\"\n\n\"Hey!\" Randy quipped.\n\nJerry turned to him. \"Are we still pretending like you haven't been carpeing every diem that wanted to suck your dick?\" Randy stayed quiet and so did I, knowing I had a hand in his wandering ways.\n\nThey locked eyes, then Jerry said, \"It's been years, I know. And yes, I forgive you. And yes, I love you. Unequivocally.\" He reached over and caressed his husband's face. Then he turned back to me. \"Love is amazing. But I know who I married. I didn't need to change him, I just needed him to tone down his carefree behavior enough to respect our relationship.\"\n\nI told him, \"Well I tried to get him to respect me but he doesn't get it-\"\n\nThey cut me off speaking at the same time with Jerry saying, \"Respect the relationship.\"\n\nAnd Randy saying, \"He's not your fucking son, Jojo.\"\n\nI sighed. \"That came out wrong.\"\n\n\"No, that came out exactly how you wanted it to come out,\" my cousin retorted. \"You want to be the man in the relationship of two men. Cut that shit out. You want Micah to humble himself and respect you? Why don't you try humbling yourself and give him some respect too?\"\n\n\"I do respect him. I treat him like a man-\"\n\n\"Oh, is that why he's living in your house, driving your car and you constantly buy him expensive shit even though he told you to stop, then you had the nerve to throw all that in his face? How you took over his Christmas plans and his Valentine's Day plans? Has Micah made any decisions in your entire relationship? Even the decision to actually get together was dictated by you. You think because he's eight years younger than you that he has nothing to offer you, and that's why you treat him like he's a second class citizen in your conventional world.\"\n\nI stayed quiet as Randy continued to berate me. \"You don't know everything, Jojo. And there is a lot you could learn from him. Like how to relax, enjoy life and not to be a controlling asshole. Like how to listen to your partner instead of shutting him down.\"\n\nHe's wrong, I thought. I don't treat Micah like a second class citizen. I don't control everything. Do I? I clicked my tongue. \"I don't want to talk about this shit anymore.\"\n\nJerry chuckled as Randy said, \"Fine. Instead let's talk about how I'm going to break out of this institution. Because there is no way I'm dying in this bed.\"\n\n<p align=\"center\">*MICAH*</p>\n\nUgh, okay this is getting ridiculous. He's not even picking up his phone and I don't know where he is or if he is okay, although there is really only one place he would go. It's been three days and I'm over waiting for him to get over what I did. I called Randy's cell on my lunch break and left him a voice message letting him know that I know that Jo is hiding out there and he needs to call me so we can work this out. It's not over between us. It can't be over.",
        "I went back to the house after work that Thursday and sulked. I considered just getting in the car and going to Elizabethtown but then thought better of it. I still don't have a license and I haven't really driven anywhere but locally. I called his cell again and he didn't pick up. I left him my hundredth message, \"Jo. Please call me so we can talk. Because I'm still in your house and if I don't hear from you today, I'm just going to pack my stuff and head to Abby's house. Jo...\"\n\nI didn't have anything else to say so I just ended the call. Pumbaa in his floppy way jumped in my lap like a baby and flipped over wanting belly rubs. I rubbed him absentmindedly and thought about Jo for the next couple of hours. Maybe I should have just told him what my plan was. Maybe I shouldn't have told him at all.\n\nEither way I know Ivan, I know who we were dealing with. If I didn't get him to back off he would have tried to destroy Jo. So what if I had to give a little head trim to get him talking? Now he couldn't go to the police and lie even if he wanted to. It's a win-win.\n\nExcept I didn't win. I lost Jo.\n\nTears started falling out of my eyes before I could stop them. He's probably not coming back because he's waiting for me to go. So I figured I would just go and if he wanted to talk to me he knows where to find me. I wiped my eyes and went up to the bedroom to the walk in closet and pulled down my suitcase, the one I took to Curacao. I started slowly putting in my clothes feeling dead inside. The tears just kept falling no matter how much I wiped them away.\n\nMy phone buzzed and I grabbed it. The caller ID was a 717 area code and I know that to be the Lancaster area. I yelled, \"Joseph!\"\n\n\"No, not Jo,\" the voice said. \"It's Jerry. I'm checking Randy's messages.\"\n\n\"Jerry! Is Jo there? Wait, is Randy okay!?\" I asked panicky.\n\nHe sighed. \"Randy caught a kidney infection and his body can't fight it. We brought him to the hospital about two days ago and... he's not going to last very long.\"\n\n\"Oh my God.\" Tears fell out of my eyes for a completely different reason. \"Does Jo know? Is he there?\"\n\n\"Yeah, he got here the day before Randy got admitted to the hospital. Good thing too, we didn't have to call him. He's staying at our house.\"\n\n\"Okay.\" I quickly forgave Jo for not returning any of my calls. Of course our fight will need to take a backseat. \"I'm coming,\" I told Jerry.\n\n\"I knew you would once you knew. I knew the only reason you weren't here was because no one told you what was happening. But you should be here to say goodbye too. Do you need train fare? You can catch an Amtrak train from 30th street and Cassie will pick you up at the train station.\"\n\n\"It's fine, I'm going to drive.\" It's the quickest way to get to Randy. And Jo. \"How are you holding up, Jerry? This can't be easy at all.\"\n\n\"It's not but I've been preparing myself for this since the day I met him vacationing in Denmark all those years ago. I just need to be strong for him. He needs us to be strong for him. All of us.\"\n\nI nodded. \"I'll be there in two hours or less.\" I hung up and looked at my suitcase. Guess I'll be going a little further than North Philly tonight.\n\nI called Koya first to make sure she was able to house sit and look after Pumbaa for however long we were there. The sun was already setting but rush hour was over so I was hoping it would be light traffic on the PA turnpike. I grabbed the keys to the Lexus and headed out, hoping I made it in time to say goodbye to my friend.\n\n~~~\n\nI was doing great. I kept to the speed limit and stayed on the right side of the road. I used my turn signals. I had my GPS on and my music going as I got off exit 266 on the turnpike. I ended up missing a turn because I was singing loudly to Arianna Grande so I casually made a U-turn, not seeing the sign or the police car. But when I saw the flashing blue and red lights behind me I knew I was fucked.\n\n~~~\n\n\"Is it easier to stay, is it easier to go? I don't wanna know. But I know that I'm never ever gonna change, and you know that you're always gonna stay the same... Is it easier to stay, is it easier to go? I don't wanna know. But I know that I'm never ever gonna change and you know you don't want it any other way...\" I sang softly to myself.\n\nAfter laying on the wooden bench for hours singing and contemplating my sad life, the guard finally came around. \"Bermudez. You're out.\"\n\nI sighed. That means he got my voice message to bail me out. Which means he's gotten all my messages for the last three days and has been ignoring me. I should be elated that he came to get me, he could have left me in jail to go before a judge for grand theft auto and driving without a license, but instead I was annoyed.\n\nI followed guard out and walked over to him. He had on a pair of jeans and a plain black t-shirt, looking as sexy as ever, but had the most unreadable expression on his face. I put on a stoic expression myself and said quietly, \"Thanks.\"\n\nHe took a moment, then asked, \"Who called you?\"\n\n\"Jerry. After I left Randy a message and he didn't call me back.\"\n\nHe nodded. \"I should have told you about Randy. I'm sorry.\"\n\nI nodded back and said calmly, \"You should have.\"\n\nHe said, \"You have a court hearing in six weeks. But they let you go because I showed them the title with your name on it and told them we had a family emergency. They will most likely drop the charges if you get your license before the hearing, and register the car in your name, like you were supposed to do months ago.\"\n\nI bit my tongue so I wouldn't have a snappy comeback. \"Okay, I can do that.\"\n\nI wanted to touch him so badly but even more I wanted him to touch me. Instead he said, \"Come on.\" He turned to walk out of the building and I had no choice but to follow him.\n\nWe went to his car and Francis was driving, which surprised me. No one ever drives his Benz but him. \"Hey Micah, you doing alright there?\" he greeted me.\n\n\"Yes, thank you,\" I answered politely as I got in the backseat.\n\nJo slid into the passenger side and gave him the address of the impound lot that the Lexus was in. \"Just drop me off there and take Micah to the hospital to see Randy.\"\n\nNo fucking way. He's not getting rid of me that easily. But of course I didn't say anything. We drove about 15 minutes and I listened to him and his stepfather make small talk. When Francis pulled over in front of the wired gate, Jo got out and I quickly scrambled out of the back door.\n\nHe turned to look at me. \"Go to the hospital, Micah. Randy is going to want to see you.\"\n\n\"Aren't you going to the hospital?\"\n\n\"Yes, but I have to get the car first.\"\n\n\"Okay. So let's get the car and go to the hospital.\" Before he could say another word I closed the back door and said to Francis through the open window, \"We'll see you later. Thanks for picking me up.\"\n\n\"Micah!\" Francis half whispered frantically. I turned back to look at him. \"Keep fighting for him,\" he said quietly. \"He won't say it, but he needs you.\"\n\n\"I'm fighting, Francis. Thank you,\" I whispered back and he gave me a small smile.\n\nJo looked at me as I walked up to him defiantly. He took a deep breath and exhaled all through his nose. Then he turned to the lot attendant at the front of the gate. He gave them the paperwork and we were let in to retrieve the Lexus. I got in the passenger side and put the window down for air. He drove in silence and barely looked at me. It was breaking my heart.\n\n\"Jojo,\" I broke the silence. \"Are we going to talk at all?\"\n\nHe was quiet for a long time, so long I thought he was ignoring me, but it seems he was thinking of what to say. \"Micah, I can't right now. Maybe... after it's all over. But until then I can't think about us right now.\"\n\n\"And I get that, one hundred percent. I just want to know that you are willing to have a conversation with me. That it's not...over. Not yet. Are you?\"\n\nHe was silent for a long time again. Then said quietly, \"I'm willing.\"\n\nBe still my beating heart. It's not over. He still loves me.\n\n~~~\n\n\"Mikey!\" Randy croaked from the bed. \"I knew you would come. I knew you would keep your promise to Jojo.\"\n\n\"And miss your grand finale? Never!\" Randy chuckled as I went over to him and gave him a kiss on his forehead. \"Are you comfortable at least?\" I gently ran my fingers through his hair.\n\n\"Yup, they upped my morphine today so it's all good,\" he said with a smile. \"You doing alright?\"'\n\n\"You know me, I'm always going to be okay,\" I told him with a smile. I could tell he didn't buy it because he smiled right back but his was sarcastic. Tiffany came over to give me a hug. I looked around and asked, \"Where's Jerry?\"\n\n\"I made him go home and spend some time with his son. He hasn't left my side and it was getting a little suffocating,\" Randy said nonchalantly.\n\nI shook my head and continued to stroke his hair. \"Don't be an asshole to the person that loves you with his whole heart. He's going to be here until death do you part, remember? And isn't it a blessing to be loved like that.\"\n\nHe looked up and smiled at me. \"Well aren't you an insightful little queer.\"\n\nI giggled and sat in the chair next to him. I looked over and Jo was quietly watching me, his hard expression gone and with love in his eyes. I made the mistake of smiling at him and he immediately turned away.\n\nWe sat around the bed and Jo and Tiffany told childhood stories as he tried to convince us to take him home. Jerry and his sister Cassie showed up with Ollie in his onesie pajamas and they adjusted Randy's bed so that he could sit up and Ollie could sit with him. We continued to talk as he held his son and rocked him until he fell asleep on his chest. I found out that Cassie was staying at the house taking care of Ollie so that Jerry could focus on being there for Randy in his final days. Jerry stayed at the hospital with Randy day and night.\n\nAfter Ollie fell asleep Cassie offered, \"Micah, I can take you back with us if you want to rest.\"\n\nI said very politely, \"No thank you, I can wait.\" For Jo. Of course I didn't say it, nor did I have to. Jo, Jerry and Randy all looked at me. Even Tiffany felt the heat.\n\nAfter Cassie left and Tiffany left with her, Randy asked casually, \"Hey Jojo, where did you get that cranberry apple raspberry drink?\"\n\n\"A vending machine on the 6th floor.\" Randy smiled at him. Jo smiled back. \"You want me to go get you one?\"\n\nDon't forget to stop by the ice machine and grab a new straw too,\" Randy said. Jo chuckled and left. As soon as the door closed Randy said to me, \"Okay Mikey, what's the plan?\"\n\nMy eyes went to the top of my head and came back down. \"The plan for what?\"\n\nRandy rolled his eyes. \"To get him back. Because you didn't drive 100 miles and get arrested just to say goodbye to me.\"\n\n\"Actually I did. I came here for you.\"\n\n\"And to be here for Jo,\" said Jerry. \"So, how are you going to make it happen?\"\n\n\"And more importantly, how can we help?\" Randy asked.\n\nI could pretend like I didn't want or need their help but who am I kidding? \"Unless you can go back in time and ensure that I do not date that asshole who has managed to destroy my life, I don't see how you can. Jo is so mad at me,\" I said sadly, looking down at my fingers in my lap.\n\n\"Well, you did suck another man's dick,\" Jerry gently scolded. \"He has a right to be upset. There is no way you thought that would go over well, you already know Jo's a very principled man.\"\n\n\"Okay, but....ugh!\" I looked up at them exasperated. \"What was I supposed to do? Just let him ruin Jo's life? Jo has a business and a whole career that I needed to salvage. Even though the charges are dropped he still needs to get the arrest expunged from his record, so the damage is already done.\"\n\n\"You're supposed to trust your partner and trust the system,\" Jerry said.\n\n\"Jerry, you have no idea what it means to be a person of color in the system. So spare me the justice is blind thing, because we both know they would have put him under the jail,\" I said angrily. \"He could have lost everything and it would have been all my fault. I had to do something!\"\n\n\"Okay, fair enough. But did you have to do that? There was absolutely no way you couldn't have just talked to Ivan? And what about trusting your partner?\" he asked. \"You made a lot of mistakes here and you need to start owning it.\"\n\nI opened my mouth, then closed it. Then I said, \"There was no way I wasn't going to do everything possible to make sure that Jo doesn't go to prison for my mess that I didn't clean up before we got together.\"\n\nRandy chimed in, \"Good. Now use that same passion and do everything possible to make sure Jo doesn't walk away. Because he doesn't want to, I know him. It's tearing him up inside not being with you. So as of right now, just be there and remind him of what he's missing. And when he's ready to talk, he will.\"\n\nJerry said, \"He wants you back in his life. He just doesn't know how to put his pride aside and say that.\"\n\nI scoffed. \"And maybe I don't want to do this shit anymore. Because I didn't do anything that wrong.\"\n\n\"And maybe you need to grow up a little,\" Randy said, almost angrily. \"What you did hurt him, tremendously, and you had to know it would. You have to know who you're dealing with and respect how he feels about these things. Now you have to show him how important he is to you. And when he's ready to talk, talk to him, and come to an agreement about what is acceptable and not acceptable in your relationship. You guys love each other and can work it out. Love is the foundation, but it's not enough. You need trust, honesty and mutual respect.\"\n\nJerry looked at Randy amused. \"Wow, that sounds familiar.\"\n\n\"Yeah? Must have been something I said before,\" he said back to his husband just as amusingly.\n\nJerry leaned over and kissed his head. Then he said to me, \"Randy's right. Your actions pushed him away. Now your actions will draw him closer to you than your words will. So just be there for him until he's ready to talk. He'll come around.\"\n\n\"But what if it's really over?\" I asked as my tears started stinging my eyes. \"What if no matter what I say or do, he won't want what we had back? What do I do then?\"\n\nRandy held his arms out to me and I leaned over to hug him. He patted my back and said, \"Don't worry, Jerry will be single soon, he'll take you.\"\n\nI pulled from his arms and clutched my imaginary pearls as my mouth dropped and he laughed. I started laughing with Randy and then Jerry started laughing too. Jo walked in and I saw the corners of his mouth turn up slightly as he looked at me. \"What are we laughing about?\"\n\nRandy answered, \"How your face looks with Micah's dick in your mouth.\"\n\nMy jaw dropped and I swatted Randy's leg. \"Stop that!\" I scolded, making him laugh again then I started laughing. To my surprise Jo's face broke up in a smile and he shook his head.\n\nJerry also shook his head in disbelief saying, \"God, even now, you're the worst.\"\n\n~~~\n\nI got in the car with Jo and we silently drove over to Randy's house. Cassie was sleeping in their bedroom, which left Ollie's room that only had a toddler bed and the third bedroom. Before I could ask, Jo said, \"Take the bedroom. The couch is a pullout and I'll sleep out here. I'll move my things to the basement later.\"\n\n\"That doesn't make sense,\" I told him. \"Your stuff are already in the room so just lay in the bed and I'll take the couch. Or just lay with me. I'm not going to touch you, obviously you don't want me to.\"\n\nI saw a flash of pain in his eyes but then he pushed it back down. \"Just take the fucking room,\" he said almost angrily and went to the half bath on the first floor and closed the door.\n\nI sighed and dragged my suitcase upstairs. I changed my clothes and got in the bed pulling the covers up to my chin. The one solace I had as I closed my eyes was how much the pillow and bed sheets smelled like him. I turned onto the pillow and inhaled deeply, praying for a better day tomorrow.\n\nIn the morning I had my plan in place. I got up early and sent Fen a message asking for a 30 day leave of absence, just so I won't lose my job and she happily gave it to me. I crept downstairs and Jo was still asleep in the living room. I went into the kitchen and started making breakfast: scrambled eggs, three slices of bacon, and sliced tomatoes since there were no avocados in the house. I made coffee, medium roast, and put his cup together with one cream with two sugars. Jo came into the kitchen yawning and looked at me.\n\n\"Good morning Jo,\" I said and handed him a cup of coffee. Then went back to preparing his plate.\n\nHis face was completely stone but he took a sip of his coffee and sat down. I put the paper that came in that morning and his plate in front of him, and began making other plates as Cassie and Ollie came in.\n\n\"Hey guys. Micah, who knew you were so domesticated?\" she teased me.\n\n\"Honey I can do it all,\" I said smugly, making her laugh. They sat at the table with Jo and I served them both. Then I casually made my plate and sashayed my round bottom to sit next to him. He glanced at me, then turned back to his paper. Internally I smiled. I wore him down before and I can do it again, just watch me.\n\n~~~\n\nFor the next couple of weeks we had the same routine. I would get up early and make breakfast for everyone, then he would drive us to the hospital where we would pretty much spend the day. I managed to buy some avocados from a store near the hospital so I was able to make his full breakfast. Randy's mother would be there in the morning, his father in the afternoon and his sister in the evenings.\n\nTiffany took pictures of us with Randall, capturing his last moments, especially with Ollie. Every night Cassie would come by with Ollie, fully bathed and in pajamas ready for bed, and Randy would sit up enough to hold his son against his chest and rock him to sleep. Jerry didn't leave Randy's side unless he absolutely had to.\n\nJo and I didn't talk much but that didn't matter to me. I made sure to paint my eyes the way he likes it, put the Jo Malone fragrance he likes, wear my skinny jeans with tank tops just the way he likes, put my hair in two french braids the way he likes. He barely spoke to me but I would sit close to him anyway and I would watch him when he wasn't looking in my direction. At night we would get back to the house so late that we would just crash in our separate spaces, still not really talking.\n\nBut on the morning of week three, I said my regular, \"Good morning, Jo.\"\n\nAnd he did the unthinkable. He sat down and said casually, \"Good morning, Micah.\"\n\nI gasped internally and paused a bit, but then I walked around the kitchen island and set his coffee down. \"Thank you,\" he mumbled and picked up his paper.\n\n\"You're welcome, sweetie,\" I mumbled back, touched his shoulder gently and went to fix his plate. I wanted to say more but Cassie and Ollie came in just then.\n\nI put his plate in front of him and served the other two, then set my plate next to him and sat down. He looked over at me and this time I looked back at him. His eyes were soft unlike the last couple of days and the corners of his mouth turned up slightly.\n\nI pulled my bottom lip in to moisten it and then released it slowly, and his eyes immediately went down to watch my lips. He looked me in the eyes again and we stared at each other. He turned away first, lifting up his fork and began to eat. I exhaled very slowly, only now realizing I had been holding my breath the whole time, and picked up my fork as well.\n\nThe next few days were more of the same, but at least he was speaking to me. One morning when we got to the hospital Randy was in all sorts. He had taken off all his monitoring patches and was attempting to pull out his IV. Jerry, his mother and two nurses were trying to calm him down and stop him but he was yelling back at them, \"No! Fuck no! I'm not going!\"",
        "Jo came over and yelled, \"Whoa! What's up with all this!?\"\n\nRandy grabbed Jo's arm and said fearfully, \"They want to send me to hospice. I'm not going to a graveyard hospital. Please don't let them take me, Jojo.\"\n\nJerry started with, \"Randy, it's where you'll be more comfortable-\"\n\n\"Fuck that!\" Randy yelled at him. \"I'm not dying in a fucking hospital. Not this one or any other one! I want to go hoooome!\" Jerry was trying to reason with him but Randy was not hearing any of it. \"If you send me there I will walk out and die on the fucking street! I'm not going there!\"\n\n\"Okay Rand, okay,\" Jerry said softly. \"You don't need to figure it out all right now but please calm down. And please put back on your monitoring so they could-\"\n\n\"Monitor me!? For what!? I'm dead already!\" Randy yelled again.\n\nThey all started talking over each other so I just loudly asked the most logical question, \"Why can't Randy go home?\"\n\nTheresa, who had her hands covering her mouth watching her son freak out, answered, \"Because he's going to need round the clock medical care.\"\n\n\"To die?\" I asked incredulously. \"Who needs round the clock care to die?\"\n\n\"He needs pain meds, Micah,\" Jerry told me. \"The right dosages at the right time. He needs fluids through an IV. It's not just about him dying, it's about him being comfortable when he dies.\"\n\n\"Okay well, I've watched enough Grey's Anatomy and Chicago ER to know you can do all that at home. He just needs the medical equipment and instructions from a doctor to tell us what to do and when to do it,\" I said factually.\n\nJerry rolled his eyes but Randy smiled widely at me saying, \"God, I love this fucking kid. Mikey, I love you, man!\"\n\n\"Randy, we don't have the money or the time to put it together,\" Jerry reminded him.\n\nI looked at Jo first and we locked eyes. He knew what I was about to say before I said it. \"We can do it. Jo has the money and I have the time. We can put it together. Just give us a day.\"\n\nI looked at Jo again for him to challenge me but instead he looked at Jerry. \"Let me do this for him, Jerry. We can do it. We'll have it all ready for him at the house by tomorrow.\"\n\nTheresa came closer to her nephew. \"If you can Joseph, please. For my son.\"\n\n\"For my brother,\" he told her. \"I absolutely can.\" Then he turned back to Jerry. \"But only if you're in agreement. I don't want to fight about this today or ever. So it's up to you.\"\n\nJerry sighed and relented. \"Okay, Jo. If you can make it happen, make it happen.\" He turned to Randy. \"Now lay down and let them put back on the monitoring and do all the checks they need to do. I need to make sure you can see tomorrow, so you can go home.\"\n\nRandy leaned up and kissed Jerry's mouth. \"Okay, babe.\" He leaned back and let the nurses take care of him while his mother held his hand.\n\nJo walked over to me and said, \"You always know how to simplify things, don't you?\"\n\nI reached out and touched his arm. \"I'm going to enjoy spending all your money on this.\" He laughed, making me laugh as well. God, I missed his laugh directed at me.\n\nJerry came over and said, \"You won't be spending all his money.\" He pulled out his wallet and gave Jo a couple of cards: Randall's insurance card, a MasterCard that had HSA in one corner, another Visa card with FSA on it, a second Visa gold card and his own Wells Fargo bank card. Then he gave instructions.\n\n\"Call the insurance company first and see what they can cover for a twin hospital bed, medical equipment and a live-in registered nurse familiar with hospice. Once you find out what they cover and what the out-of-pocket expenses are going to be, max out the Health Spending Account card and the Flex Spending Account, it's a couple of thousands of dollars on both of them. Then max out the credit card and the bank card. Once everything is maxed out then whatever is leftover you can put your money in.\"\n\nHmpf. How am just now realizing that Randy chose an uptight and controlling partner just like Jo while Jo chose me, who is more like Randy and free spirited?\n\n\"You really want to go broke doing this?\" Jo asked him.\n\n\"He's my husband, Jo. If anyone is going to go broke over it, it's going to be me first.\"\n\n\"This isn't the time for-\"\n\nI interjected with, \"How about this?\" Because Gaaawd, the last thing we needed was a pissing contest.\n\nI took the cards from Jo, handed Jerry back two of them and said, \"Jerry, how about if we call Randy's insurance, like you suggested and get the insurance company to pay for as much as they can, then we'll spend the HSA and FSA money on the rest, but not your credit card or your personal account. There's going to be a bill for this hospital stay too, so you need money to pay for that. Jo, I still have your emergency card and if there was ever an emergency, this is it. I'll spend all that money first. Then you can supplement the rest. Okay, boys?\" I patted both of their chests.\n\nJo touched Jerry's shoulder. \"We're all here, Jer. You don't have to figure out everything, just do what you're doing, the best thing, and be there for him.\"\n\nJerry reached up and touched his hand. \"Yeah. Yeah, okay.\" He started to walk away but Jo pulled him back and hugged him tightly and Jerry returned the tight hug.\n\nThey held onto each other until Randy called from the bed, \"Look who decided to finally hug it out and make nice. Guess my death will be good for something.\" They both chuckled and let go.\n\nJerry squeezed Jo's shoulder and said, \"Thank you.\"\n\n\"You're welcome,\" he replied. Jerry walked over to Randy and Jo turned to me. \"Come on, Angel. We have work to do.\" He walked out the room and I followed him, never having been so happy to hear him call me Angel since the first time.\n\nWe went back to the house and got to work. I called the insurance company and made a list of things that were covered. Then he called around medical device companies, better at negotiating than I am, to see who can deliver the fastest and I paid the bills over the phone with the cards. It took all day but by the early evening we had secured a hospital bed, an oxygen tank, a portable patient monitor, and IV stand with a week's worth of IV of fluids, including morphine.\n\nWe also managed to find a nurse. I called back to the nurse's station and asked if they knew a freelance nurse that specializes in oncology and hospice care and they had one great suggestion, someone who works nights in their unit PRN. Her name was Amelia Ummah and when I called her she accepted the job right away. Jo negotiated two weeks of pay regardless of when Randy goes and she agreed to start tomorrow.\n\nCassie said to us happily as she walked out with Ollie that evening, \"Well done, guys. I will probably head back to Michigan so you all can have the house. We have some arrangements we need to make anyway. His parents and Tiffany are going to want to stay here so I will give up my spot for one of them. See you tonight.\"\n\nI hung up the phone with non-emergency medical transport and turned to him. \"It's arranged for 9am tomorrow morning. They are bringing Randy home.\"\n\nHe nodded. \"The bed and equipment will arrive in an hour, and the IV and meds we'll get tomorrow morning too, because his doctor still needs to sign off on the prescriptions.\"\n\n\"Okay then. It's done,\" I said happily.\n\nHe nodded and smiled. \"It's done. He gets to die in peace.\"\n\n\"With dignity. And with family around. Just the way he wants it.\"\n\n\"The way he deserves.\" He looked at me for a long moment and said, \"Thank you, Micah.\"\n\nI shrugged. \"Randy is my friend too so-\"\n\nHe cut me off. \"Thank you for being there for me. Like you promised. I don't think I could have gotten through this without you. I know I wouldn't. I...I love you.\"\n\nI let all the air out of my lungs. \"Still?\" I asked.\n\nHe came closer and said, \"I never stopped loving you.\" He traced the braid in my hair then cupped my cheek in his hand and I melted, leaning my face into it and put my hand on his.\n\n\"Joseph.\" I whispered his name as a tear accidentally fell from my eye.\n\nHe wiped my tear and pulled my face upward. We kissed softly and it was the sweetest kiss I've ever had. Our tongues danced and we grabbed hold of each other's lips. He pulled me toward the couch and laid me down on it, then leaned on top of me and rolled his hips against me, his lips covering mine again.\n\nIt was like starting a fire, especially since I haven't jerked off once since he left which was weeks ago. My groin was the match head and his was the strike board. He tongued me down with those needy kissed of his, and sucked my neck hard as he moved against me. I held onto him tight knowing I wasn't going to last long at all.\n\nFor once I regretted wearing jeans so tight as my hard dick was pressed against my jeans. My cock head swelled and my balls pulled up as much as they could go, and I whimpered in his ear as I fell weightless into my orgasm. I came buckets, and felt it seeping through my pants and down my legs, making a huge wet spot.\n\nJo must have felt my dick twitching beneath him and slowed down kissing my neck. He reached down and squeezed my already leaking and sensitive cock and I moaned loudly. He covered my moan with his kisses, his iron cock continuing to rub against me. I used my strength to push him back but who am I kidding, he let me push him. We sat up and I put my arms around his neck and kissed him more aggressively.\n\n\"My turn,\" I snarled at him, and pushed him all the way over onto his back. I lifted up his shirt and licked his nipples, then quickly unbuckled his belt. I needed him so badly, my mouth was watering with desire.\n\nI put his cock in my mouth and immediately swallowed him whole, gagging myself because I moved too quickly and pulled back up to cough. Then I went down again, this time more careful. I circled my tongue on his cock head and relished in his pre-cum. I needed more. I started bringing him further and further into my throat. He took my head between his hands and guided me, twisting my head around his cock.\n\nI bobbed on his dick up and down until it was as far down my throat as it could go, pulled all the way up to the head, then back down again. He held onto my my head but let me do the work, let me fuck him with my mouth until he began to spurt out tangy cum, loads of it filling my mouth, and I swallowed every drop. I looked up at him with his dick in my mouth as I slowly came up and let it plop against his stomach.\n\nI moved up to lay on his chest as he caught his breath. He rubbed my back and whispered, \"I missed you, Angel.\"\n\n\"I missed you too. Does this mean you forgive me?\" I asked softly.\n\nHe hesitated, then said, \"I don't know what this means.\"\n\n\"Fucking hell!\" Why does he always do this to me!? I scooted away from him angrily. \"What do you mean you don't know what this means? Do you want us to work it out or not!?\"\n\n\"I don't... I do but..\"\n\n\"Ugh!!\" I groaned loudly. I stood up and walked away from him.\n\nHe stood up quickly and fixed his pants. \"Micah, please wait, don't walk away, stay and talk to me.\"\n\n\"Okay.\" I turned around quickly and crossed my arms. \"Let's talk.\"\n\nHe looked at me for a moment at a loss for words. I don't think he thought I was going to hear him out this time. He started with, \"First of all-\"\n\nBut I cut him off. \"First of all, I'm sorry. I am sorry for going behind your back and taking matters into my own hands without talking to you. And I will regret it every single day of my life for what it's done to us. But that's all it was, Jojo. There is and never was no secret desire to be with him or anybody else.\"\n\n\"How do I know that? Because the way I see it you happily gave yourself to someone else.\"\n\n\"Are you fucking kidding me about this!?\" I yelled at him. \"You know that I didn't happily give myself to someone else. All of a sudden you don't trust me?\"\n\nI'm trying to but it's hard right now. How can I? What do you expect me to do when you tell me with your own mouth how you sucked another man's dick?\"\n\nI threw my arms out and yelled, \"For you! I did it for you! And you're supposed to believe in me. Believe that I've always had your best interest at heart.\"\n\n\"Your best interest, you mean. Because I would have never allowed it.\"\n\nI scoffed and said sarcastically, \"Well it's a good thing my daddy is dead and I found me a new daddy to take his place.\"\n\n\"Don't do that. Not when you're the one who broke my trust and can't get it back.\"\n\n\"Because you don't want to.\" I finally told him what I've been thinking this whole time, maybe for our entire relationship. \"You've walk away from all your relationships without a fight, so why would I be different to you? You've been waiting for a reason to walk away us, proving my point from the beginning, that you're a fucking coward.\"\n\n\"Fuck you!\" he yelled at me. \"I gave up a shit more than you did for this relationship so don't tell me that I've been waiting for a reason to walk away. I confused myself, my family, tested my livelihood, all because I fell in love with a man. What did you give up, your shitty ass apartment?\"\n\n\"Wow. Okay then. Well I'll just go back to my shitty ass apartment since you think you can control me with your shitty ass money.\" I crossed my arms again.\n\n\"So you kept your apartment, didn't you? But I'm the one that's been waiting to walk away from this, huh?\"\n\nI didn't, but I don't give a shit what he thinks anymore. \"Maybe because I always knew at some point you would wake up one day and realize I'm not what you want.\"\n\n\"Except you're wrong,\" Jo said. \"I wake up every day knowing that you're the right one for me.\"\n\n\"How!?\" I yelled at him. \"You don't trust me, you don't believe in me, why the fuck do you want to be with me?\"\n\n\"I don't know!\" he yelled back. \"I don't fucking know anymore.\"\n\nI hate this. Jo makes me feel like I'm the most amazing person in the world just as I am. But he's also the only person that can make me feel this way, feel stupid for giving all of myself to this perfect man in front of me. And I'm done feeling this way. I turned my back to him and said, \"Well I do know. Since you can't make a decision I'll make it. We're done.\"\n\n\"What!?\"\n\nI turned to him and lifted my head high. \"I said, we're done. I'm done. I can't do this anymore. I can't be with someone who doesn't trust me. Who doesn't believe in me, in us. And because of what I did you'll never trust me again. So it's over.\"\n\nHis mouth was slightly opened and his eyes wide. He couldn't believe what he just heard come out of my mouth and frankly neither did I but it had to be done. I continued. \"I told you I would be here for you and I will. But after the funeral... just give me a few days before you come home. Just enough time for me to move my stuff out of your place and back to Abby's.\"\n\nHe stared at me with that same pained expression on his face but I was unwavering. We were quiet for a long moment that felt like hours, and then he slowly closed his mouth and swallowed. Then he nodded. I nodded back. I slid the Cartier bracelet off my wrist, the first time I've taken it off since last Christmas. I'm not his Angel anymore.\n\nI walked up to him, kissed him on the mouth and put it in his hands. Then I turned around and began to walk up the stairs and he stood frozen, watching me. Halfway up I looked at him and said, \"I didn't keep my apartment, Joseph. I was all in, heart and mind, with you. Just in case you wanted to know what I gave up for you. My heart.\"\n\nI kept walking until I made it to the bedroom, then I collapsed on the floor and cried like a baby.\n\n<p align=\"center\">*JO*</p>\n\nWhat the fuck is wrong with me?\n\nWhy didn't I tell him not to go? Why didn't I make him change his mind? Because I can't. If he wants it to be over then it needs to be over. I can't make him stay as much as it's breaking my heart. And my heart was shattering in a million pieces as I watched him walk away from me.\n\nI stood in that same spot long after the bedroom door closed and it got quiet. A part of me, a huge part was in disbelief that he just ended it. He'll change his mind on his own, right? But I knew the answer before I even thought it. Micah has way too much pride and will walk away from something before it breaks him. His own grandmother told me that. And right now I'm the one causing him pain. So no, he's not coming back to me. And I'm not going to force him to because I'm still hurting. So it's over.\n\nI went into the dining room and to the bar. Of course the first thing I saw was the bourbon. I stared at it for a moment, then grabbed the gin instead. I took a glass and poured some in, then gulped it down, letting it burn my throat.\n\n\"Aaaah!\" I groaned out loud. I took both the bottle and the glass and sat on the couch, waiting for the medical equipment team to arrive. After an hour or so the bell rang and I let them in. Micah didn't even come downstairs, I guess he was leaving it all to me, so I went on autopilot and took charge, rearranging everything in the living room.\n\nAfterwards I set up the single hospital bed so I could sit up and got in with my bottle of gin and my glass. I poured, drank and thought about Micah. I relieved every kiss, every laugh, every touch we shared for the rest of the night. It was so quiet upstairs I might as well have been alone. Maybe he was right. Maybe I was using this one thing as a reason to walk away from something that could be great, that was already great, because it was starting to scare me again. The thought of a future with Micah has always scared me, especially since I fell for him so quickly. But now the thought of a future without him is scaring me more.\n\nI didn't know when I fell asleep but the next thing I knew Micah was tapping me awake. \"Joseph. They'll be here in a few hours,\" he said softly. I looked at him expecting him to look different but he didn't. He had on a regular t-shirt and jeans and smelled fresh from the shower. The complete opposite of what I looked and smelled like, I'm sure of it.\n\nI was afraid to speak because either two things were going to come out, me begging him to stay or vomit. I didn't know what it would be and I didn't want to chance the vomit so I just nodded and sat up. My head was pounding. He helped me off the bed and I walked slowly to the upstairs bathroom, turned on the shower and sat on the tub floor.\n\nAfter I threw up a couple of times and was finally able to stand, I showered and changed, and came back downstairs. Micah had changed the sheets on the hospital bed and took away the empty bottle of gin and my glass. I went into the kitchen and Cassie and Ollie were already there having breakfast. She looked at me and smiled. \"Well you were three sheets to the wind last night, weren't you?\"\n\n\"Yeah,\" I smiled back sheepishly.\n\nShe reached over and touched my hand. \"No need to be embarrassed. This is hard on all of us. But we're family, and we'll get through it together.\"\n\nI glanced at Micah who wouldn't look at me and then back at Cassie. \"Yeah. We'll get through this together.\" I squeezed her hand.\n\nMicah came over to me with a slice of wheat toast, one large pill and water. \"Take this pill but not on an empty stomach. It's an ibuprofen 800. Eat the toast first and take the medicine. Then you get your coffee.\" I did as he ordered, and he set the cup down for me with my plate. I took a sip and immediately perked up.\n\n\"Thank you.\" He touched my shoulder in response before he sat down next to me with his own plate, but he didn't look at me. Even though we were over, he was still taking care of me. I felt like shit.\n\nI was about to turn to him and talk when the doorbell rang. Micah quickly jumped up to grab it and it was Nurse Ummah. She had two huge medical bins, one with a key on it. She said in her African accent, \"I went to the hospital first to pick up supplies and introduce myself to Randall. They were already prepping him for transport. He's a very lively man.\"",
        "I smiled a little as I helped pull the supplies into the house. \"Lively. That's one word for it.\"\n\n\"But I need to tell you, this happens right before. Patients get a burst of energy and seem like their normal selves. Cherish it, but be ready. It won't be long now.\"\n\nI swallowed and closed my eyes slightly. It won't be long now.\n\n~~~\n\nRandall was very lively when he arrived in the ambulance with the cars of his parents and Jerry's car driven by Tiffany right behind him since he rode in the emergency vehicle with his husband. He was smiling as they rolled him out and demanded to get out of the gurney as Ollie ran up to him. He lifted him up against the better wishes of the medical team and Jerry, kissed the boy and put him down to walk into his home holding his son's hand. Tiffany took pictures to capture the moment.\n\nI met him in the doorway and hugged him standing up, knowing it would probably be the last time we hugged like this. Micah did the same, held him a bit longer, and we all walked him to the living room. He looked at the hospital bed and said, \"Uh-uh. I'm going upstairs.\"\n\nI rolled my eyes and Jerry began to lecture him. \"No. You aren't dying in our bed, Rand. You wanted to be home so we're home. Now get in the bed.\"\n\nHe turned to look at his husband. \"I'm going upstairs and going to lay in my comfy bed. And you and Ollie are going to lay with me.\"\n\n\"I will never sleep in that bed again if you do that,\" Jerry gritted through his teeth.\n\nRandy went up to Jerry and kissed him gently, then said softly, \"So buy another fucking bed.\"\n\nHe kissed him again and held Ollie's hand as he walked to the stairs. Jerry angrily stormed out of the house and Cassie went after him. No one said anything at first but of course Micah said what everyone was thinking.\n\n\"Can you just not be an asshole to your husband, especially right now? You just always have to get your way, don't you, Randall Blake?\"\n\nHe glared at him, then smiled sarcastically and said, \"Always. Now take my other hand and help me up the stairs, Mikey.\"\n\nMicah did, and the rest of us dutifully followed Randy to his bedroom. Uncle Stew and I got him into the bed and propped him up with pillows. He looked around and smiled widely at all of us.\n\n\"It's good to be home with my family. Now let's make the most of every moment of every day I have left. That's my legacy that I leave with all of you here. Love each other and carpe every single diem, especially after I'm gone. Do that for me and I will rest in peace, knowing all of you are happy.\" He settled in and played with his son, ignoring our stares at his goodbye speech, because that's exactly what it was.\n\n\"We'll stay in the other bedroom,\" Aunt Theresa said to her son with a kiss on his forehead.\n\nMicah said, \"I'll get my stuff out and sleep....\" He looked at me first and sighed. It was my first sign all day that our break up was affected him. \"The basement, I guess.\"\n\n\"Just sleep downstairs with Jojo on the pullout, Mikey,\" Randy said in an obvious way.\n\n\"No... No I'm not going to do that,\" he said. He turned to my aunt. \"I'll move my stuff to the basement now.\"\n\n\"Okay, but that's where I was going to sleep,\" Tiffany said.\n\n\"Okay well, ugh. I'll just sleep on the floor in Ollie's room. It's no big deal, really. You all should be comfortable, you're family.\" He left the room before anyone had a chance to say anything.\n\nEveryone turned to look at me but I avoided their eyes. Uncle Stew broke the silence by saying, \"We'll go bring up the medical supplies.\" His father, mother and sister left, leaving me and Ollie in the room with my cousin.\n\nI sat on the edge of the bed. \"How are you fe-\"\n\n\"What the fuck did you do now!?\" Randy asked me angrily.\n\nI scoffed at him. \"Why does it have to be me? He broke up with me yesterday. He didn't give me a choice.\"\n\n\"He's been giving you a choice this whole time, what do you mean!? He wasn't coming to the hospital is ass hugging jeans and tank tops so tight his nipples were poking out for my attention...although I did enjoy the view. He's been telling you that he wants you back.\"\n\n\"Well... that's not what happened. We did mess around a little but then we argued right after that and then he told me he was done with me, with us. Because he can't be with someone who doesn't trust him or believes in us. And that he thinks I've been waiting for a reason to run away from what we have. Had.\"\n\n\"Is he wrong? Have you been looking for signs?\"\n\n\"I didn't think I was but... I don't know.\"\n\n\"Jojo, you told me you've never felt this way about anyone before. You remember that? You told me from the moment you met him he makes you feel alive. So how could you just let him walk away?\"\n\n\"I didn't just let him... okay maybe I did, but you told me that I control every aspect of our relationship, so I didn't want to control this for him. If he wanted to leave, who was I to make him stay?\"\n\n\"Now you listen to me!? You're a fucking idiot,\" my best friend said to me. \"Do you know how many times Jerry wanted to leave after I fucked up and I persuaded him not to, that I would be a better man for him? It took me a while to get there but I did get there, because I love him that much.\"\n\n\"Well, you're a selfish asshole.\"\n\n\"For Jerod, you're damn right I am. Because no one has ever loved me the way he loves me. The way Mikey loves you. If you don't fight for this, if you don't put your pride aside and beg for his forgiveness, you are going to lose the best thing that has ever happened to you and you'll regret it until the day you die.\"\n\n\"He's the one that fucked up!\" I said angrily. \"Isn't he the one that is supposed to be begging for my forgiveness?\"\n\n\"Didn't he already do that!? And you practically spit in his face! Ironically!\" Randy yelled at me.\n\nI sighed. He was right. \"I don't know how to make it right. I don't know how to make him stay. I may be ready to forgive him. But now his pride is in the way and I don't think he's going to hear me out.\"\n\n\"Well find a way,\" he said. \"Because I'm not leaving this earth until I know that you and him are back together. Fix it, Cousin. He fucked up but you fucked this up too. You want me to rest in peace? Fix it before I go.\"\n\nI nodded at him. He was right again. Micah fucked this up being stupid and impulsive. I fucked this whole thing up with my insecurities. But I need to be the one to fix it and pray Micah is a better man than I am and forgives me now. \"I'll fix it. I promise.\"\n\nHe nodded, then got comfortable as Ollie played at the bottom of the bed. I looked at him, so frail, his light brown skin almost gray and cheeks sunken in. I thought about what the nurse said.\n\n\"You've been by my side for as long as I can remember. I don't think I ever really thought this day would come. What am I going to do without you, Cuz? Who am I going to talk to that's going to set me straight? Who am I going to go partying and drinking with? I'm not just losing my cousin, I'm losing my brother, my best friend.\" A tear accidentally rolled down my face and I quickly wiped it away.\n\nHe sighed as his eyes began to glisten. \"Why do you think I've been working so hard to make sure you're not alone? It may or may not be Mikey in the end but I just want you to be happy and have someone by your side that's going to do all those things for you. I want you to be okay when I'm gone. And when you begin to miss me, remember that I had 34 amazing years on this earth and you were a major part of my happiness. I love you, Cuz.\"\n\nI leaned over and hugged him. \"I love you too, Cuz.\"\n\nHe pulled back and said, \"Can you do me one last favor?\"\n\n\"Anything. What do you need?\"\n\nHe took out his phone and showed me the link to Mattress Firm. \"Have this California king-size, pillow top, plush bed, delivered to the house two weeks from today.\"\n\n~~~\n\nNurse Ummah was right. We watched Randy deteriorate rapidly. The next day his fever kept spiking to dangerous levels. The day after that he could barely move. By day three he was rarely awake, sleeping most of the day while Ollie played on the bed quietly. Jerry never left his side. My parents came over on the morning of day four to say their goodbyes.\n\nBy the evening, he was taking shallow breaths and his morphine intake was at its highest. Nurse Ummah told us, \"He most likely won't make it through the night. If he doesn't, just page me and I will come right over.\"\n\nI nodded and walked her out. Suddenly it was all too real. We have prepared our whole lives for this and now it's official. Randall, my first cousin, my best friend, my brother, is going to die. This is it. I slowly walked back upstairs to the room and opened the door. The room was dark, and only lit scented candles of lavender and warm vanilla cookie filled the room, his favorite scents. Jerry was in the bed next to him, arm gently laid across his chest, head next to his ear whispering softly with his eyes closed. Ollie was curled up on the other side of him, snugged up against his side fast asleep.\n\nAunt Theresa laid across the bottom of the bed. Tiffany was knelt beside him on the floor in prayer. Uncle Stew was in the chair in the corner quietly watching his son sleep. And there was Micah sitting on the ottoman near the door. When my eyes fell on him he was already watching me. He reached over and took my hand. I leaned against the wall next to him and looked over at my sleeping cousin. I could hear his wheezing breath from here.\n\nI can't do this. I can't watch him die.\n\nI dropped Micah's hand, abruptly turned around and opened the door. I heard Micah call my name but I kept going, all the way downstairs to the living room and laid down on the pullout bed. I put my face in my hands and cried. I was in so much pain emotionally and the crying wouldn't stop, like a dam burst from all the tears I held inside over knowing that this day would come.\n\nHe was close before, when we were 12. Randy was sick in the hospital like this with a serious infection but some miracle drug they gave him turned it around, and he was able to come back stronger and ended up in remission for 19 years. Maybe a part of me thought that he would bounce back again. But Randy's life is over and I feel like the world is closing in on me. Once he's gone, I'll have no one.\n\nLosing Micah and Randy at the same time, the feeling was unbearable. I needed something, anything to take the pain away. I walked over to the bar and picked up the bourbon bottle. I drank from the top and it burned my throat. I drank three more gulps. I could barely see through my tears and I knew I was spiraling out of control but I had no one to ground me.\n\nI stumbled back to the bed and sat at the edge. I was about to take a fifth gulp when suddenly the most logical thought popped in my head. Randy is dying but Micah is not. I promised Randy that I would make it right before he goes and I intend to keep that promise.\n\nI put the bottle down and it fell over. I pulled out my cell phone and sent Micah a text, praying that it wasn't too late for me with either of them.\n\n<p align=\"center\">*MICAH*</p>\n\nMy phone buzzed in my pocket. I wasn't going to look at it but it piqued my interest in who would be texting me at 9:30pm at night. I saw that it was a message from Jo. My heart started beating faster as I read each word, the song instantly playing in my head:\n\nIf the world was ending you'd come over, right? You'd come over and you'd stay the night?\n\nWould you love me for the hell of it? All our fears would be irrelevant.\n\nIf the world was ending you'd come over, right? The sky'd be falling while I'd hold you tight.\n\nNo, there wouldn't be a reason why we would even have to say goodbye.\n\nIf the world was ending, you'd come over....right?\n\nTears instantly fell out of my eyes. Jo needed me. His world was falling apart and it's me he needed. And the truth was, I needed him too. I didn't know for sure what this meant for us, but my heart certainly did. I looked around at the quiet room and knew that no one would miss me if I slipped out. I wiped my eyes completely because I didn't want to cry in front of him. I quietly opened the door and left.\n\nI searched the upstairs rooms first, then I made my way downstairs. It was dark but I saw his silhouette sitting on the edge of the pullout bed, face in his hands, body shaking with sobs. I walked over to him and stood between his legs in a puddle of alcohol. He instantly wrapped his arms around my waist and sobbed on me.\n\nI touched his hair and said in all seriousness, \"Now, I know for a fact...\" I paused for dramatic effect, \"that was definitely from a movie.\"\n\nHe started laughing out loud and crying at the same time, making me laugh as well. I ran my fingers through his hair softly. It had grown an inch in the month we'd been in Lancaster. He tried to talk, \"I... I.... can't... stop-\"\n\n\"Shhh...\" I hushed him. \"I'm here.\"\n\nHe cried some more and then whispered, \"I'm sorry. I'm so, so sorry. Please don't leave me, Micah. I know I don't deserve you, after the way I treated you-\"\n\n\"Shhh...\" I hushed him again and repeated, \"I'm here, Jojo. I'm not going anywhere. I'm yours.\"\n\n\"You're not though.\" He looked up at me and said, \"I don't own you and you don't belong to me. You're not an object for me to claim and possess. You were a fully functioning human being before me.\"\n\nI scoffed. \"Who the fuck told you that?\" He chuckled against my stomach. I wiped his tears and told him, \"I need you, Joseph. You make me a better man.\"\n\n\"You make me a better man,\" he told me. \"You force me to be unconventional in my conventional life. It was true back then and it's still true now.\"\n\n\"Okay, but maybe I can be a little less unconventional,\" I told him. \"Think about how the things I do will affect you in the long run. Consider your feelings and not do things just because you told me not to do them. Because maybe if I would have talked it through with you I would have came up with a better plan to not resort to such drastic measures. Maybe I need to grow up a little. I can do that.\"\n\n\"And maybe I need to humble myself a bit,\" he said as he sniffed. \"Maybe I should have heard you out instead of shutting you down. I can be a little less controlling, give you some autonomy in this relationship. Let you make some decisions. Like, we can sell the house and buy something together.\"\n\nI scoffed again, \"Jojo, no. I love our house. It is big and kind of cold but it's better now because I'm there. I'll just do more decorating and make it colorful and homey.\" He laughed a third time. I pulled his arms from around me and slid to my knees. I took his face in my hands and said, \"I'm so sorry, Joseph. I shouldn't have done it. I need you to forgive me. I need you in my life.\"\n\nHe shook his head. \"I'm sorry, Micah. I know you were trying to save me and I do forgive you. And I said some awful things to you. Inexcusable things. So I'm the one that's sorry now. But I do believe in you and in us. I just get scared of being hurt. But when I start to get scared about our future, I know you'll be there to tell me to stop being a fucking coward.\"\n\nI giggled. \"This is true.\"\n\nWe came together at the same time and our lips touched softly, then our tongues danced and I tasted the bourbon in his mouth. I felt the wetness of his cheeks against mine and I was surprising myself that I was not crying while his tears still flowed.\n\nSuddenly he lifted me up and pulled me toward him as he fell backwards on the bed. He rolled us over onto my back and kissed me deeper. The needy feeling was back. We quickly lost our clothes, him pulling on my t-shirt and jeans, then me pulling on his, until we were completely naked.\n\nFully aware we had a full house, I kept the moaning to soft whimpers as he kissed every part of my body, licking my neck and putting his tongue in my ear, kissing me straight down my spine to my tattoo, then spreading my cheeks and devouring my pucker. He turned me onto my back again and deep throated my cock a few times before reaching over and taking a bottle of lotion out of his bag.\n\nHe came all the way up to my face and asked, \"Do you want to do me?\"\n\nMy mouth opened into a complete O, then I closed it back. \"You... want me to...\"\n\nHe nodded. \"Because you need to know that I'm yours too. And I trust you with every single part of me.\"\n\nBe still my beating heart. As much as I wanted to take him up on that offer, I decided to pass for another time.\n\n\"I love you, Joseph. Just the fact that you would even want to means the world to me. But one, we're not exactly in a room to ourselves and you're gonna need a little more than that lotion.\"\n\nI smiled at him and he looked at the small bottle in his hand and then back at me and smiled. I continued, \"Two, you're so emotional and possibly a little drunk. Let's revisit this when you can think a little more clearly, so there will be no regrets. And three, I need to feel you deep inside of me. Claim me again, possess me, own me. I need you so bad right now.\"\n\nHe kissed my lips softly and said, \"Okay. When we get back home. I won't change my mind.\"\n\n\"Don't worry honey, I won't let you.\" I smirked slyly. Then I turned around and spread my arms out and closed my eyes. \"Please Joseph,\" I softly begged.\n\nHe quickly put an exuberant amount of lotion on his three fingers and pushed them inside of me. I bit my bottom lip not to moan too loud as he moved them around, then massaged the outside of my puckered hole with more lotion. I felt him adjust himself directly behind me and knew he was adding lotion to himself.\n\nHe leaned over and pushed in slowly. He knows I can take it but he wanted me to feel all of him. And I did. He grazed along the inside of my tunnel with one hand on my back to hold me steady, prolonging the pain and the pleasure.\n\nHe slid against my nub and I cried out loudly and grabbed the sheet into my fists before I remembered to breathe and let him all the way in. I moaned softly and he continued until his trimmed pubic hair brushed against my ass, his testicles resting comfortably against me like they always do, his legs on either side of me. He laid down on me and kissed my neck and began to move, slowly, intentionally.\n\nHe laced his hand with mine and we made love this way, his elongated strokes all the way in, pulling back until just the head was left in me, then slowly making his way down again, the bed making a soft squeak with every thrust. The constant pressure against my bundle of nerves while my cock rubbed against the sheets under me was ecstasy, taking me out of consciousness as I focused on my pleasure.\n\nI didn't realize my moaning was getting louder until he used his other hand to cover my mouth and I bit his finger. He laughed softly, then stroked my hair instead. \"I'm close,\" he whispered and put his wet tongue in my ear.\n\nFor some reason that was my undoing. My orgasm surged through me and I cried out and grabbed the sheets again as he slid against my prostate for the umpteenth time. I lost all sense of self and trembled, and my cock twitched out cum underneath me. He felt my body shudder and my walls close up around him, and that was his undoing.\n\nHe started moving faster, the squeaking of the flimsy bed making it obvious to anyone within earshot, slamming into my ass repeatedly and continued to thrust through his ejaculation. I bit my bottom lip to keep from crying out until he completely emptied out, warming up my guts and my heart, then laid still.\n\nHe slowly slid out but rested his cock on my backside and began to gnaw at my neck until his purple mark appeared. That was when I began to cry softly, my body trembling with my quiet sobs. He moved to lay on his side taking me with him backwards, wrapping his arm around my waist and holding my hand as I laid across his other arm. We laid there holding onto each other quietly.",
        "After a long time Jo spoke, \"I can't go back in there. I can't watch him die.\"\n\nI turned around to my belly and looked at him. \"So don't. You've said your goodbye in so many ways and so many times. We'll just stay here.\" I snuggled against his furry chest and he rubbed my back.\n\nHe was quiet for a long time and then I heard him ask tentatively, \"Mine?\"\n\n\"Yours, Jojo,\" I said automatically. \"All yours. Forever yours.\" He squeezed me tighter. I asked back, \"Mine?\"\n\nHis voice was unwavering. \"Forever yours, Micah Angelo. Forever.\" Tears began to trickle out of my eyes again. I was his again, and he was mine.\n\nAt some point we both fell asleep. Randy's father tapped us awake right as dawn was approaching. \"It's time, boys,\" he said quietly and quickly made his way back upstairs. I was thankful that at some point during the night Jo had the good sense to pull the thin sheet over our naked bodies.\n\nWe looked at each other. \"You don't have to go,\" I reminded him.\n\nJoseph said to me, \"I couldn't do it last night because I was alone. But I'm not alone anymore. As long as you're with me, I can be brave.\"\n\nI leaned over and kissed his face. \"Then let's go say goodbye one last time.\"\n\nI got out the bed first and started getting dressed and he followed me. Then we held hands and I led him upstairs. Jerry was holding onto Randy's hand and kneeling on one side of the bed with Tiffany and Theresa,, so we went to the other side of the bed where his father was.\n\nRandall would take a breath and it would seem like forever until he took his next breath. Jo leaned over and whispered something in his ear, then knelt down and took his hand. And surprisingly, Randy squeezed his hand slightly. No one else saw it but the two of us.\n\n\"Wow,\" I whispered. \"What did you say?\"\n\n\"I just kept my last promise to him,\" he whispered to me and kissed the side of my face. He held his cousin and best friend's hand as I held onto his other hand. Together the six of us recited Psalms 23 and watched Randall Terry Blake take his last breath.\n\n~~~\n\nThe funeral was planned out by Randy. He picked out his own casket, the suit he will be buried in, the order of procession and bought the plot at a local cemetery that was big enough for all of them so they could be buried next to each other. He had interviewed the clergy he wanted to speak and pray over him and his family, making sure they were fully supportive of our community because there was going to be a room full of gays.\n\nRandy also had strict instructions: no one was to wear black under any circumstances. So Jo drove back to Haverford the day before the service to gather our suits. After he left that morning I got Francis's number from Jerry and asked him to take me to the nearest PennDot Center so I could take my driver's license test. Jerry came along too for support but he really just needed the distraction from his grief. He was staying strong for Ollie who asked where his Dada was from time to time.\n\nI was in and out in less than an hour with a little plastic card smiling widely on my photo. I couldn't wait to tell Jo but he took forever to get back, and when he did after the dinner hour I was completely distracted because he showed up with my $4000 suit.\n\n\"Jojo!\" I swatted his arm. \"This is not the occasion.\"\n\n\"This is definitely the occasion,\" he said. \"Randy is going to love you in this suit.\" I smiled and then burst into tears. He pulled me closer to him and held me tight. \"I know, Angel. I miss him too.\"\n\nI got myself together and agreed. \"Okay. I'll wear the suit.\" Then I remembered. \"Oh, and I got a surprise for you!\" I showed him my license and he hugged me again.\n\n\"Good job. When we get back we'll take care of the other parts, and then show up at the court hearing in two weeks and turn everything in.\"\n\n\"Hey, what took you so long?\" I asked. \"I expected you back hours ago.\"\n\n\"Oh, I just needed to do a couple of things. Stopped downtown and went by the office, and also went to see my lawyer to start the paperwork for expunging the arrest. I stopped by the cafe too, let them know you were okay. That we are okay.\"\n\n\"Thanks for that,\" I told him with a smile. I've been avoiding calls from my Abby, Shelly, Janai, Devin and Kayla for the last couple of weeks, texting only because I didn't really know what to tell them about the status of my relationship. \"I'll call my family tomorrow after the funeral.\"\n\nHe looked around and asked, \"Where's Jerry? I still don't know what he is wearing.\"\n\n\"He was upstairs putting Ollie to bed.\"\n\nWe went upstairs to find him. On the way to Ollie's room the master bedroom door was open and Jerry was standing there holding a white suit staring at his bed where Randy had laid. We quietly walked in and stood on either side of him. Jo put his hand on Jerry's shoulder and I wrapped my arm around his arm. He looked at Jo, then at me, then back at the bed and sighed audibly.\n\n\"It's gonna be okay,\" I said softly. \"Give yourself all the time in the world to grieve.\"\n\nHe looked at me and said, \"Now you know Randy wouldn't let that happen. I have to get ready for the new addition.\" He sighed again.\n\nJo's mouth opened. \"He didn't!\"\n\n\"He did,\" Jerry confirmed.\n\n\"Did what?\" I asked.\n\nJerry answered, \"Randy set up the surrogacy on the day he went into the hospital. Without telling me. We already had fertilized eggs so all he had to do was make a phone call and sign some papers.\"\n\nI gasped. \"But it doesn't work that fast, right?\"\n\nHe gave me a look. \"I got the call today. Surprise! I'm going to be a daddy. And whether it's a boy or girl, the name is Randall.\"\n\nI gasped again. \"Con...grat...u...lations?\"\n\nJerry shook his head. \"Even after death, he's such an asshole. Leaving me here to raise our kids all by myself.\"\n\nJo nudged him. \"You're not by yourself, Jer. I'm here. Micah's here. And so are his parents and Tiffany.\"\n\n\"And Cassie, apparently,\" he said. \"They are uprooting their lives in Michigan and coming here, Randy convinced them last Thanksgiving. Eric is already looking at houses in Mount Joy. Or they can just build their home on this land here, a four bedroom house. That was Randy's plan. Lots of options.\"\n\nHe looked at the bed and sighed again. \"I just have this feeling that there are going to be lots of surprises coming.\"\n\nJo smiled and turned to him. \"He bought you a bed.\" Jerry glared at him and I giggled. \"A California king-size, pillow top, plush bed. It will be here next week.\"\n\n\"He's such an asshole,\" Jerry said and laughed. \"And I love him so much.\" He sniffed a few times and blew out air to keep from crying.\n\nI squeezed his arm. \"He wanted to make sure you were taken care of. That you won't be raising two kids alone. And that you weren't sleeping on his deathbed. And that you always had a piece of him to remember him by. So maybe not a total asshole. Maybe a slightly self-centered but truly loving and thoughtful husband.\"\n\nHe smiled at me and turned back to the bed. \"I hope it's a girl. I love the name Randall for a girl.\"\n\n~~~\n\nI found Jo after the service at the cemetery under a tree deep in thought. He looked amazing in his navy blue suit. I think it was the suit he wore when he first walked into my cafe. He had his back to me with his hand in his pants pocket. I walked over to him and wrapped my arms around him from the back, rubbing his chest from the front. He looked back at me and said my name, \"Micah.\"\n\n\"You okay, Jojo? You were quiet the whole time.\"\n\n\"Yeah. I just miss him a lot.\"\n\n\"Me too. I'm going to miss him calling me Mikey.\"\n\nJo laughed. \"You want me to start calling you Mikey?\"\n\n\"Nooo. I don't want anyone to call me Mikey ever again. Plus you already have a name for me. A perfect one.\"\n\nJo patted my arm then pulled me around to face him. \"I love you, Angel.\"\n\n\"I love you too, Jo.\"\n\nHe stared into my eyes. \"You are my angel, you know. You've been watching over me, guiding me, protecting my heart and taking care of me since the moment you met me. I knew then like I know now that you're going to be in my life forever.\"\n\n\"That's the plan,\" I said and batted my eyelashes at him. He turned away to look beyond me, then back at me as if he was pondering something. \"What?\" He kissed me gently on the lips then let me go and stepped back. He made me curious so I asked again, \"What?\"\n\nThen he did the unthinkable. He pulled a small ring box out of his pants pocket and got down on one knee.\n\nI put both hands over my mouth and yelled into my palm, \"Be still my beating heart!\"\n\n\"Micah-\"\n\n\"Wait!\" I threw both hands up. \"How long have you had this?\"\n\n\"I just bought it yesterday when I went home to get the suits,\" he said. \"That's what took me so long. I was going to wait until our anniversary in October but why wait? Let's do it.\"\n\nHe opened up the box and there was a white gold ring with one white diamond and four rubies around it. I gasped. He started again, \"Micah-\"\n\n\"Jo, wait!\" I looked around then back down to him. \"You can't do this here.\"\n\n\"Why not?\"\n\n\"Because it's... Randy's funeral... and a cemetery. You can't propose to me in a cemetery! What are you doing?\"\n\nHe smiled and said, \"I'm carpeing the fuck out of this diem.\"\n\nI put both hands on my chest that was pounding. \"Okay. Holy shit, but okay. I'm ready.\"\n\n\"You sure? Because I have a whole movie line to give you,\" he said amusingly.\n\n\"Oh em gee!\" I squealed and bounced on my heels. \"Yes, I'm ready! Go!\" I brought two fists together and covered my mouth with them.\n\n\"Alright,\" he said. \"If this is where it has to happen, then this is where it has to happen. I'm not letting you get rid of me.\" He paused and I wasn't sure if that was part of the movie yet or not. I let him continue.\n\n\"We live in a cynical world, and we work in a business of tough competitors. I love you. You complete me.\"\n\nI yelled loudly, \"Shut up, shut up, you had me at hello!\" I started laughing and so did he. \"Are you going to be serious or not, Mr. Martin?\"\n\nHe grinned at me. \"Will you marry me, Micah Angelo?\"\n\nI breathed out my answer, \"Yaaaassss.\"\n\nI leaned over and kissed his mouth, then took the ring out of the box. He stood up, pulled my face toward his and kissed me deeply, his tongue taking over my mouth. He took the ring from me and slipped it on my left ring finger, and it fit perfectly.\n\n<p align=\"center\">*10 Years Later*</p>\n\nI woke up naked and with a hard on. We made love the night before so neither of had on clothes. We've been getting better at finding times to be intimate, but lately we've both had a lot going on. Overnight seems to be when we find each other the most.\n\nHe was laying on his side, one hand under the pillow and the other stretched outward. I leaned over to the nightstand, added lube to my fingers and gently inserted them inside of him to wake him up. He groaned and moved to his back, his eyes still closed. I added more lube to my fingers and inserted it inside of me, then stroked him into a full erection. I crawled on top of his sleeping body and slid him inside of me, then I began to move.\n\nI moved slow and took control of our lovemaking and he let me. Today I wanted to feel powerful, dominating and in charge. He's going to return the favor tonight and pound my hole mercilessly, but for now, he was mine to claim.\n\nWe made love this way for a while, until he moaned and I squeezed around him, and felt the rush of his seed inside of me. It was enough to make me ejaculate as well, and I coated my lover's chest with my seed feeling satisfied. We laid there together with him still inside of me, breathing hard and feeling each other's fast heartbeats. Eventually I slid to the side of him and he found my face in the dark and kissed me softly, lovingly.\n\nWe kissed for a while but I knew I had to go. \"See you in a few hours?\" I asked quietly.\n\n\"We'll be there,\" he said softly.\n\nWe kissed again and then I left my lover in the bed to take a shower, using all three of the shower heads. Then I got dressed: a white and tan ankle length plaid pants connected to brown suspenders over a white button down short sleeved shirt with the two top buttons open to show my cuban link choker. My hair, which I let grow out past my shoulders recently, was gelled and pulled back in a ponytail.\n\nI put a soft gold eyeshadow on my eyelids and added black eye paint in the corners to ended it with a slight point with a black eye pencil. I sprayed a little CK One on me, feeling nostalgic. Then I stepped back, looked in the mirror and smiled. My face was completely smooth, completing the androgynous look. I crept back into the bedroom hearing the light snoring of my husband, slid on my all white Nike Air Force Ones and left the house to head to the cafe all before the sun rose.\n\nI walked the mile to the place I spent practically my whole life. I looked up at the sign, The M.A.C. and smiled. The official name is Micah Angelo's Cafe but it's also a homage to my father, the late Michael Allen Cooley, who everyone called Mac. I twisted his ring around the index finger on my right hand. I know he's proud of me, wherever his spirit is.\n\nMarisol met me at the door. \"This will be the last time I wait on you, puta.\"\n\nI smiled handed her the key. \"Here you go. It's going to feel good coming back here and making it all mine.\"\n\nShe scoffed. \"Como si pudieras haber hecho esto sin mi.\" (As if you could have done this without me.) \"You were barely able to wipe your own ass before I started working here.\"\n\n\"Si, Verdad,\" I laughed as she opened the door.\n\nI haven't been here in years. Fen sold the cafe about six years ago but by then I had moved on. I was a stay at home dad for three years before I got my cosmetology license and became a makeup artist working right out of the den, doing makeup for bridal showers, birthdays and an entire theater group once for a play that went on for six months. Marisol only stayed on a year after me before she moved on as well, saying the last owner was terrible and ran it to the ground.\n\nShe called me last year to tell me she had passed by and the cafe was for sale. We got to talking and daydreaming about how great it would be to run it the way we used to, happy morning greetings, music, More Coffee Mondays and Free Pie Fridays. For the next couple of days I couldn't stop thinking about it. I so approached Jo with the idea and together we went to see about buying the cafe.\n\nAnd here we are, 15 months later, me as the owner and her as the general manager. Today is our sample day, where we open for free breakfast for the next couple of hours and tomorrow is our grand opening. It was Jo's idea to do this, saying if they really loved the breakfast they will come back the next day and pay for it. It was also his idea to market to all the colleges around. College kids love free food. And I was hiring for servers on the spot too. So it was going to be a long and busy day.\n\nHanson, the new chef, and David, the cook, arrived shortly after we did and the four of us got to work, making trays of scrambled eggs, fried eggs, bacon, sausage, pancakes and waffles. By 6am the line was beginning to form and my pretend servers arrived, Kayla and her new boyfriend, Janai, her husband Gabe, Devon and his partner Elliot, Chevon, Bernice, Sharon and Sarah.\n\nAt 7am we opened the doors and by 9am we were at full capacity with the line down the block. I gave out $3 off coupons for them to return again that was good for a year if they filled out a survey and so many did with great reviews. I think the cafe is going to be booming again.\n\nJo and Jerry arrived at 10am with the kids. My seven year old twin boys, Mikey and Randy ran up excited and talking at once,\n\n\"Can we eat too?\"\n\n\"Daddy, your place is so cool!\"\n\n\"But you know I don't eat scrambled eggs, Dad.\"\n\n\"I made a store called MAC on my island on Animal Crossing.\"\n\nMichael Allen and Randall Francis were the liveliest pair of boys and the reason for my full heart. We used an egg donation and my DNA, not giving any consideration to my family tree. Suddenly we had identical boys, identical to me in every way from their medium brown skin, curly hair and brown eyes with a hint of green in them. Of course twins run in my family, my grandmother had a set of twins boys and so did my mother.\n\nI told them very patiently, \"Slow down, speak one at a time. Come sit here.\" I sat them down at the counter and Kayla came over to hug her nephews and serve them.\n\n12 year old Ollie walked over with his face in his phone. \"None of this food looks appealing but I'll try it. I get to eat too, right?\"\n\n\"Of course Ollie, but put your phone away. What do you want?\"\n\n\"I want you to call me Oliver,\" he said with an attitude.\n\n\"Ugh, who peed in your cereal this morning, Oliver?\" I playfully grimaced at him.\n\nHe rolled his eyes at me and tried to walk away but I pulled him back and hugged him tight. He hugged me back tightly like I knew he would, because underneath that tough exterior, he's a softy just like his birth father. He's also going to be a handful just like his father when he reaches full teenage years but that's Jerry's problem. I glanced up at the photo of a smiling Randy from our trip to Curacao that I keep on the wall. I know he is proud of me too.\n\n\"Have a seat next to the boys. Where's your sister?\"\n\nOllie pointed and left me to go sit at the counter. I looked over to see Jerry had found a table, Jo's table in the corner, and he and nine year old Randall were having a daddy-daughter date. They looked to be in an intense conversation, probably talking about Jerry's boyfriend Marshall, his first serious relationship since Randy died. Randall also looked like her birth father, same light brown skin and facial features, but with green eyes like Jerry. Their family was staying with us for the weekend.\n\nJo walked over to me and handed me our daughter, three year old Joi, so he could grab a plate. \"Daaaadeeee,\" she squealed.\n\n\"She was looking for you this morning,\" he told me.\n\nI kissed her face and blew raspberries on her cheek. But I turned to him and said, \"You know I can't keep her, I have an interviewer waiting in the back for me. So just let her run around and pray nobody takes this sweet faced baby!\" I blew raspberries on her cheek again making her squeal.\n\n\"You look happy,\" he said, ignoring my request. He looked around and said, \"I missed you in this place.\" I smiled widely at him.\n\nJoi whined, \"I wanna eat tooooo!\"\n\nI held my daughter and said, \"Well we can't have you hungry now can we, Miss-Missy?\" I walked her over to the counter to grab her a plate. The candidate will just have to wait a few more minutes.\n\nJoi looks just like Joseph. They have the same milk chocolate complexion and wide brown eyes that draw you in when you look into them. I didn't think we would have a third child but Jo had other plans. He came to me when the boys were still toddlers and said, \"I think I want another one.\"\n\nThe boys had just started a preschool program and I was working from home out of the den and started taking clients so there was no way I was getting pulled back into the full time stay-at-home-dad thing. \"Bye Jo! Boy, bye.\"\n\n\"I'm serious!\" he exclaimed.\n\nI laughed at his baby fever. \"Fiiiiine. You donate your sperm then you take the year off to raise him,\" I said sarcastically.\n\nHe shocked me by doing just what I told him to do, within a month setting up the surrogacy again and then went down to the fertility clinic. And after she was born he took four months off, then worked from home for her first year of life to care for Josephine Mary-Ana, our Joi.\n\nMy mother showed up with my grandmother and my brother Ishmael in the afternoon. Zac and I still don't talk and if we do we don't have kind words to say to each other, but Mel came around with my mother's and Kayla's encouragement when he was about 19. He actually comes to me for brotherly advice now and he and Jo get along great.",
        "My parents divorced just two years after my mother and I reconciled and he doesn't want to have anything to do with me. I'm fine with that because I have a dad now. Francis turned out to be a pretty great father-in-law.\n\nWhen we finally closed the door at 3pm, I sat at Jo's table and watched my worker bees clean up. My mother had Joi and the twins were running around occupied so after ten straight hours on my feet it was my time to rest. Jo came over and sat across from me. I reached over and took his hand.\n\n\"Happy?\" he asked.\n\n\"Very,\" I answered.\n\nHe lifted my hand to his mouth and kissed it. \"You look happy.\"\n\n\"You said that already. Tell me something else.\"\n\n\"I'm still so deep in love with you, Angel.\"\n\n\"Say it again,\" I said softly, squeezing his hand.\n\nHe recited Robert Frost's poem, \" 'Till all the seas gang dry, my dear, and the rocks melt with the sun; I will love thee still, my dear, while the sands of life shall run.' \"\n\nBe still my beating heart. 11 years together, 9 years married, 3 children, 2 dogs and he's still a romantic. My eyes rolled to the top of my head then back down at him. \"I'm gonna need you to learn some love songs lyrics that make sense to me,\" I teased him.\n\nHe chuckled. \"You're impossible.\"\n\n\"I think I've already proven I'm practicable,\" I told him smugly, making him laugh. We leaned in simultaneously to meet our lips with a soft kiss.\n\n~~~\n\nTrying something different and putting together a playlist for this story, mostly pop music. For this chapter here are the songs:\n\nLauv, Paranoid\n\n5 Seconds of Summer, Easier\n\nIssues, Julia Michels\n\nNo Doubt, Don't Speak\n\nX Ambassadors, Unsteady\n\nJP Saxe and Julia Michels, If the World Was Ending\n\nJustin Timberlake, Mirrors\n\n*And the theme song for the whole story: Shawn Mendes, Falling All In You\n\nI would love any comments and feedback you have, and please don't forget to vote!"
    ],
    "authorname": "Kabba118",
    "tags": [
        "african american",
        "drama",
        "family",
        "gay love",
        "gay sex",
        "romance",
        "spanish",
        "twink"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/a-love-for-micah-ch-07"
}