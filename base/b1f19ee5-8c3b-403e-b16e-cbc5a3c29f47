{
    "title": "My Little Ventrue Pt. 02 Ch. 02",
    "pages": [
        "Author's Note: Second edit pass complete! Check out my bio for details.\n\n~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~\n\n~~Beatrice~~\n\nBeatrice had no idea Dolareido had so many dark, hidden corners.\n\n\"You Carthians. It will never cease to amaze me how much you want to adapt the modern,\" Jacob said.\n\n\"Modern?\" The two of them were deep into North Side, and probably near the edge of the city. It was a big city; she'd never been out this far.\n\n\"That you would take a car, instead of this!\" The crazy Nosferatu gave that weird chuckle of his, and jumped. With the old, dark robes he was wearing, he looked like a shadow.\n\nThey were on rooftops in the old business district, old old, back from way before Beatrice was alive. North Side had long ago turned into more a factory district, full of heavy labor workers during the day, and dead silent at night. And it meant that the two monsters could jump from rooftop to rooftop of factories, warehouses, parking garages, foundries and power plants. They had the freedom to let loose, jump from building to building like the predators they were, and even look up at the sky.\n\nEvery so often, that's exactly what they did. Jacob would hold up a hand, look up at the sky \u2014 what the fuck dude your eyes are covered with bandages how the fuck can you see \u2014 and sigh with some weird bliss. But hey, when he did, she did, and she had to admit, damn that was a nice sky. You couldn't see it in South Side, not with all the massive buildings and the constant sources of light.\n\n\"It's hard to go roof jumping when there's a hundred thousand cameras and a couple million eyes looking around,\" she said.\n\n\"Hard for us?\"\n\n\"... no, I suppose not.\" It was true, of course. Any Nosferatu or Mehket could hide in shadows, and the best of them could hide in plain sight. Jacob could. She could.\n\nShe followed after him, jumping from rooftop to rooftop, like cats jumping from tree to tree. \"You put your den way the fuck out here?\"\n\n\"Dolareido started over a couple hundred years ago. Back then, it was just Antoinette, her lover Tony, Viktor, and me.\" He grinned over his shoulder at her. \"Three groups. We all took a corner, and I have since made sure that my corner is... not a focus point of attention.\" He stopped then, and this time gave her a Joker smile. \"Kind of like your Catacomb Fortress of Solitude.\"\n\nShe grumbled and looked away. The fucker was disturbingly pop-culture savvy, considering he was the oldest Kindred in the whole fucking city.\n\n\"Fine. Fuck you, but fine. So I've earned your trust, is that it?\"\n\nHe walked toward her then, and she stood her ground. The elder Nosferatu had had multiple opportunities to kill her; that wasn't his game. So she wasn't afraid of him killing her, or at least that's what she told herself. He was a psycho, and the closer he got, the more her inner-beast told her to shut up the fuck up and run.\n\n\"Of course not.\" He poked her in the shoulder, and she stood there and took it. The fuck was she going to do to him? \"The primogen know of the den. You can do no real harm knowing its location. And besides, I think you'll like it.\"\n\nMore grumbles, but she eventually gave a nod, and clicked her monstrous crocodile teeth side to side. \"Fine, let's go.\"\n\n~~~~~~~~~~~~~~~\n\nAll the way outside the city and further up North Side, they came to the mix of hard, dry forest and rock. Lots of lifeless rock. But Jacob gave her a wink, and jumped down one of the larger drops.\n\nHoly mother fucking shit. There was a cave. An actual real cave buried in a dense bit of wood and bush, at the base of the canyon. The fall would have killed any kine, as it was pretty steep, and the landing was almost nothing but jagged rocks, but the two Kindred were able to jump down without issue. Jacob squeezed through all the twigs and sharp stone like a snake, slick and smooth; she got a thousand cuts trying to follow him. But it was worth it.\n\nThe cave was, for a good long while, just a tunnel, but after a couple minutes of pressing forward through solid black, her Kindred eyes were suddenly forced to adjust to flickering brightness.\n\nShe thought her catacomb was metal, but whatever fucking insanity Jacob had set up in the cave was beyond humbling. The tiny tunnel expanded into a massive, absolutely colossal cavern. A thousand people could have fit in it, and when she glanced around, she could see there were tunnels that lead elsewhere. The floor of the cave had been smoothed out, like a beach stone, and the walls were not only smoothed out as well, they had holes carved into them. They held skulls, and the skulls served as the base for lit candles.\n\nAll along the walls of the rounded cave, there were bones hung in symmetrical arrangements. Where someone else may have hung paintings, or splurged on fancy sidings and curtains, the cave used bones. They weren't just put at random, but arranged as artwork themselves that drew her eye to the center of the room. Skulls were the theme, naturally, and some sort of fountain altar, lined with skulls up and down its rim and sides, stood in that center.\n\nA couple of ghouls were walking around, nothing special about them, except they had brooms and clothes and were casually cleaning.\n\n\"... did you find this?\"\n\n\"No. Decades of effort were required to carve this hole.\" Jacob jumped across the whole of the massive room, and landed by the center altar, just opposite of her. She walked, walking was fine, but her eyes were drawn to that altar; as she approached, she could see it was filled with red liquid, thick and viscous.\n\nOn the way toward the altar, she glanced around. Many of the tunnel holes dug into the walls were actually just small rooms, some ground level and some higher, all rounded and filled with furs. And one of them had noises coming from them.\n\nShe took a peak at Jacob, but he just shrugged at her with a smirk, and looked into his bowl of blood. So she had the freedom to explore, did she? They probably figured she'd be too timid in the new surroundings, well fuck them. She walked toward the noise, got comfy in the doorway with her shoulder against the wall of stone, and folded her arms against her stomach.\n\n\"Beatrice.\"\n\n\"... Othello. Haven't seen you in a while.\" She tried to hide the shock in her voice, but it was true she hadn't seen the man in some time.\n\nOthello was a dark-skinned fellow with delicate brown eyes, long black hair, and whoever had groomed him before embracing him had put him through a grueling training regimen. He was of average height, sure, but he was built like a tank. Steroid abuse had probably been in his history, when he was kine. He was a Daeva too, and as far as Beatrice knew, he was almost a century old, almost as old as Julias. He was one of their strongest Ancillae Kindred; he'd been a Carthian before he kinda just upped and left.\n\nApparently, he'd joined the Circle of the Crone. And apparently he was enjoying himself, as was the woman sitting on his lap. A curvy, short creature with clipped red hair was facing Beatrice, her back to Othello, with her legs spread and her ass grinding into his naked body. The Kindred was just sitting there, letting the girl do all the work, but judging from the noises she was making she was perfectly happy with that. The quiet Daeva's cock had spread her ass open, so the woman's cunt was on full display, and it was a mess of juices. The room smelled thick of her sex.\n\n\"Enjoying the view?\" The big guy's hands reached out for the curvy little fox on his cock, and they started to drift and roam up and down her body. He made a showing of pinching her nipples, lifting her breasts by them to let them drop, jiggle a little too, before sliding down to her pussy. His fingers slipped into her cunt, and from how the girl started moaning, he was probably stroking her insides with his shaft deep in her ass.\n\nBeatrice shook her head for a second to snap her eyes back up to Othello's; now was not the time to think about sex. But there wasn't any harm in looking, right? \n\n\"You could say I'm a little surprised. You witches just fuck like animals, all the time, no privacy?\"\n\n\"We could have privacy, if we wanted,\" he said, \"but we don't. No desire to. It's not really in the spirit of the Circle, is it?\" Suddenly, the ghoul started squirming and mewling; Othello's fingers had started doing a number on her insides.\n\n\"... I suppose not.\" She took a peak around his room. Nothing in there except a mountain of furs to rest on, and fuck on.\n\nMore noises, but not from those two. She gave Othello a small nod, he returned it, and she moved on. She really, very much tried to not think of the girl having the anal sex with the fingering and the wriggling and the squirming and the cumming. Arg, she could smell sex, and it was making her hungry.\n\nThe next room with noises required a good thirty-foot jump to reach, but was otherwise the same, just a really large, carved-out nook in the wall of stone and bones. It was all smooth stone with a couple of skull candles in its walls, and a mountain of furs.\n\nThis time she found Jennifer. The Ventrue was only a decade embraced, a neonate, and they actually looked kind of similar with their ear-length raven hair that framed their face, average height, slightly dark skin, and slim, fighter physiques. Every time Beatrice saw her, it was a painful mirror of what she'd look like if she wasn't Nosferatu.\n\nJennifer's side was to the doorway, and she was laying down on her back on top of a man. And on top of her, was another man, and she had her legs spread around his hips.\n\n\"... you have got to me shitting me.\"\n\n\"Oh, Beatrice. Jacob said he'd be bringing you here today.\" Jennifer let out a quiet sigh of pleasure, and turned her head to look to the Nosferatu.\n\nShe didn't stop fucking though. In fact, the two men -- ghouls, Beatrice assumed -- just continued to fuck her and ignored Beatrice completely. Even knowing she was coming, Jennifer hadn't bothered to hold off her sexual desires until later. Everyone just went with their desires in the Circle, evidently.\n\n\"So you all really do just fuck like animals.\" This time she did look away, but the image was already burned into her skull. One girl, two guys, six legs, the rhythmic back and forth of three sets of hips, and Jennifer's quiet, controlled sighs.\n\nThe Ventrue just laughed, and wrapped her hands to pull the man between her legs closer. \"We are animals, just at the top of the food chain. I think we're entitled to a few perks.\" Spoken like a true Ventrue. \"Come join me. My ghouls won't mind a Nosferatu, what with Jacob terrorizing them regularly.\" \n\nThe two men chuckled at that, but still didn't stop. They'd buried their faces in the girl's neck at that point, and just kept gently fucking the Kindred between them. It was all so surreal, the way their limbs all just entwined on each other, their bodies on the furs. Jennifer was apparently quite comfortable with the position, and she relaxed into their bodies while her hands roamed over one of the men's back. The Ventrue angled her hips in just the right way, and raised her legs in just the right way, to keep everything moving in just a perfect pace of sexual god damn fucking beauty.\n\nWell, Beatrice was definitely down with the Circle's approach to sex. It took everything she had to look away, but she had a boyfriend now though. Shit, now she had thoughts of Julias, naked, doing things to her.\n\n\"Um, can't, but.... I'll... uh.... talk to you later.\"\n\nShe didn't wait to hear whatever Jennifer had to say, or moan. She'd seen more naked bodies fucking in fives minutes than she usually did in weeks of hunting, so that was enough sex thoughts for now. A second later she was down by Jacob.\n\n\"Enjoy the sights?\" he said.\n\n\"This is like, some Phantom of the Opera shit dude.\" She gestured to the array of candles that lined the back wall. Unlike the other candles, the ones along the back were all sitting on hands of bone that jutted out from the wall, instead of sitting in a carved indent. \"... if Erik had been even more horny. You all just fuck all the time?\" Then she gestured to the holes-in-walls with the two Kindred and the sex noises.\n\nJacob just shrugged, like it were the most casual question. \"My acolytes? Jennifer, Othello and Aaron do. The Circle encourages us to embrace our primal desires. You want to fuck? Fuck. You want to kill? Kill.\"\n\nShe winced at that last part. \"That where you got all these bones?\"\n\n\"Indeed, from decades ago. I thought you would be comfortable with killing kine though. I know you have, many times.\"\n\n\"Yeah but... I did try to always make sure anyone I killed deserved it.\"\n\nThat was enough to get Jacob laughing. He put a hand up to his salt and pepper hair, and raised it on the bandage that covered his eyeless eyes. \"Don't we all?\"\n\n\"No, we don't all, you jackass. I know some Kindred who are sickening.\" She put her claws on the edge of his big blood altar, but her eyes were on him. \"You think Tony or Viktor didn't occasionally kill a kine, or maybe someone's new childe, just because they could?\"\n\n\"And now they're both dead.\" That grin of his was massive and disturbing.\n\n\"... ok, ok, but you said you wanted to sew some chaos. The fuck are you aiming for?\"\n\n\"What do you know of the Circle of the Crone, Beatrice?\" Jacob began to circle the altar then, and dragged his finger along the bowl's edge where the skulls surrounded it.\n\n\"Fuck all, cause you've told me fuck all. All I know is that you're all a bunch of primal fucks and... that's it. Carthians are trying to secure modern government for Kindred, with groups and votes and shit, while you disturbing weirdos would prefer anarchy.\"\n\n\"Not anarchy.\" He shook his head, dipped his hands into the bowl of blood, and then ran his fingers along the skulls of the altar. \"Anarchy is bullshit. Freedom for everyone? Everyone gets to just do their own thing? Don't make me laugh.\" He laughed, and raised the finger to lick some of the blood off.\n\nIt was old blood, and most definitely not appetizing. Fucking gross.\n\n\"The Circle,\" he continued, \"wants us to accept what we are. And that's it.\"\n\n\"That some philosophical bullshit?\"\n\n\"Not at all.\" He stepped between her and the altar, and slipped his hands into his robes while he got comfortable leaning back against it. \"Tell me, when you tore Rebecca apart with your claws, how did you feel?\"\n\nShit, Rebecca. She'd sunk her Nosferatu claws right into that bitches back, when she was about to kill her man, and she'd torn her apart. \"... fucking awesome.\"\n\n\"Right? To get your nails right into someone and just destroy them in such a savage way. I'm sure you felt something deep down inside. I only wish my Nosferatu curse had given me such delightful claws.\" Jacob ran his bloody fingers along his face then. His fingers looked normal, but he was forced to wear bandages over his eyes lest a kine see them, or lack there of.\n\nShe frowned. Her inner-beast had reveled in the bath of Kindred blood and ash, but it made no sense for Kindred to just give in to their beasts. Inner-beasts were mindless, incapable of keeping the Masquerade, and if the Masquerade fell, all Kindred everywhere would get wiped out; humans had this nasty perk of outnumbering Kindred ten million to one.\n\n\"Yeah, I get you. Fucking felt satisfying, but-\"\n\n\"Not just satisfying. Don't fucking lie to me, Beatrice.\" He reached out and grabbed her hands. Now she had old, disgusting blood on her huge claws, but she didn't try to remove her hands from his grip. She probably couldn't if she tried. \"It felt natural. Like instinct.\"\n\n\"Instinct.\" She raised an eyebrow, but Jacob gave her a long, waiting gaze. He wanted to know what she thought, no lies, and she had never really thought about it. When Rebecca was about to kill Julias, she'd just acted, no thought to it. Well fuck. \"Then... yeah, I guess. I mean I just... just went with it.\"\n\n\"Exactly! By the grace of God, she's seen the light\" He let go of her hands and raised his own, like a preacher giving praise to the lord, but the dopey and psychotic smile on his face betrayed him. \"Someone wanted what was yours, so you tore them apart when you saw the opportunity.\"\n\n\"Yeah... so?\"\n\n\"So? You ever seen an elder get their hands dirty like that?\" He walked around the altar again until it was between them, and this time he kept his face pointed down at it. \"You think a human, blood-cattle kine, would have the instinct to rip into someone like that, with their bare hands, or their teeth?\"\n\nShe folded her arms across her chest and tapped her foot, but shook her head. \"So elders are bitches, and we're not like kine, is what you're saying?\"\n\n\"That is part of it. The Circle of the Crone is such a simple thing, such a straight forward thing, and there is only one binding view. Just one mother fucking thing you need to believe to be a member.\" With that, he made a large sweeping gesture to the cavern around them. The furs of dead animals, the skulls and bones of dead kine, and the altar of blood before them. \"That we're natural.\"\n\n\"Natural.\"\n\n\"Natural.\"\n\n\"Natural?\"\n\n\"Natural.\"\n\n\"Natural! I get you said natural, ok? Fucking explain it.\"\n\nHer frustration just made the bastard laugh. \"What else is there to explain? Do you think God reached down from the sky and cursed Vlad the Impaler, or Longinus and his spear, with undeath?\"\n\n\"... no.\"\n\n\"Do you think answers to our plight can be solved with governments, monarchies or democracies, totalitarians or councils or politics? You really think the Invictus or the Carthians will be able to carve out something worthwhile out of the clusterfuck of insanity that is a bunch of lone predators trying to live together and share food?\"\n\n\"... no.\"\n\n\"Do you think there is some hidden meaning to being a Kindred? Some explanation to our existence that will raise us to a new level of understanding?\"\n\n\"... no.\"\n\n\"Then you are no Ordo Dracul, Invictus, or Carthian. And thankfully, no Lancea et Sanctum either. Now perhaps, do you think that Kindred simply... are? That we have been around for as long as kine, and we exist just as they do? Do you stare up at the night sky and think of God casting his judgments, or do you think the universe is just really fucking big, and you are one tiny fucking spec inside that infinite cosmos?\"\n\nWell, she didn't look up at the stars much, but yeah, that was exactly what she thought. She clicked her teeth to the side and blinked her snake eyes at him. \"Sure.\"\n\n\"And that is what we believe. We simply are what we are. Lone predators who have been hunting the kine since there were kine to hunt.\"\n\nShe tapped her foot on the ground some more. \"That's a lot of preaching and not much to do with it.\"\n\n\"Too true, too true. The truth is, I have need of a right hand, such as the Invictus have.\"\n\n\"Pretty sure Othello is a lot older than I am, Jacob.\"\n\n\"Perhaps. He has value, but he does not have the same hunter's instinct as you, not the same...\" he tapped his bloody finger on his lip, \"affinity for brutality that you do. Like I do.\"\n\nShe winced again, but found herself taking a small step back. The old Nosferatu loved to leave little implications like that laying around, like candy eggs or land mines.\n\n\"You realize you're asking me to leave the Carthians, right?\"\n\n\"Garry is a friend... of a sort. He will understand, and I do believe you'd prefer some of the tasks I have planned for you, over Garry's meaningless tests of territory with the Invictus.\"\n\nShe did hate the stupid bickering the Carthians and Invictus had all the time. Kindred got hurt, sometimes killed, because someone didn't respect feeding grounds, and it was just a bunch of stupid political bullshit, red tape, and lies to get justice. Jacob had her pegged.\n\n\"Ok, alright, I admit you guys really got a thing going for you that I like. Maybe a little heavy on the Gothic shit,\" she said with a motion to the walls decorated in bones, \"and maybe a little heavy on the porn show,\" and another motion to the rooms where Jennifer and Othello were getting off, \"but yeah, you're talking my language. I'll give it a shot. What's your test?\"",
        "Jacob gave a slow nod. His face turned serious, very serious, which was so very odd on his almost constant Joker expression.\n\n\"Lucas has risen from torpor, and that means there will be conflict soon.\"\n\n\"Lucas?\"\n\n\"An old friend from long ago. When the Prince was finally at the end of her patience, she expelled the Lancea et Sanctum, and killed the Bishops and Priests. Lucas, the Archbishop, disappeared, and no one was able to find him. We had simply assumed he left Dolareido, even me, but I was wrong.\"\n\nShe just listened, and as he talked, her mouth dropped more, and more. He talked about it like it were the most casual thing, but he was talking about the purge of the Second Estate. It was well before Beatrice's time, but she'd heard the stories. She knew about the Prince and the Sheriff, and the killings and the blood hunts. It was the the story Garry told them, when they questioned if they really needed to bother with any of the covenant bullshit.\n\n\"So he was in torpor?\"\n\n\"Yes, deep in the bowels of the city. Only his childe Damien knew where.\"\n\n\"How the fuck do you know all this?\"\n\nAgain with the Joker smile. \"This is not just the Prince's city, as many would believe. It is also mine.\" He shook his head then, and gave a long, slow, psychotic chuckle. \"I like you. You're fun.\"\n\nEvery conversation with this insane Nosferatu elder was like some twisted vision of her future. If she lived another four hundred-years, would she be this ridiculous? She'd be strong enough to do whatever she wanted, but Jacob was so hard to follow.\n\n\"So your test is to confirm something for me. I want you to sneak into Tony's underground network. I am sure that is where Lucas has set up his new nest. Then I want you to determine what you can about this childe of his.\"\n\n\"You don't know him?\"\n\nJacob frowned, turned, and started to pace his altar of blood. \"I don't. This Damien, probably his new Bishop, is a sneaky creature. A sneaky Mehket is something to worry about.\"\n\n~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~\n\n~~Julias~~\n\nSometimes, it disturbed Julias, how quickly he adapted to his new role.\n\nMaria Turio and Michael McDonald seemed happy with him, at least. The Nosferatu ghost woman, and the big brute of a Gangrel slid into a rhythm with him that felt quite natural. They talked as a council, shared views, debated with intelligence, and even wisdom. His two fellow council members did not preach of meaningless values or views like a zealot would, like Viktor sometimes did with his mindless devotion to the Invictus.\n\nIt was pleasant. They could argue sometimes, but he was arguing with equals, and that was satisfying.\n\n\"Miss Amanda Pol and Master Jordan Leval have both disappeared.\" Michael made a grand, sweep gesture to the giant touch screen that covered the wall. They were in their primary meeting room, at the top of the Xnomina HQ, and the three of them were standing and looking at the screen's display of a map of Dolareido.\n\n\"They were only a few years embraced, still young neonates,\" Maria said. \"Perhaps they were caught unawares by sunrise?\"\n\nJulias shook his head. \"I'd thought as much, but I've already asked their sires. They'd looked into it and both agreed it was highly unlikely. The two are simply gone.\"\n\nMichael grumbled, adjusted his tie, and leaned forward until he'd placed a hand against the wall, beside the wall display. \"Last seen here.\" He reached out with his other hand, and drew a circle on the display around a chunk of South Side. The display app circled it in red for him.\n\n\"Near Tony's district.\" Julias got up and stood next to Michael. They were both tall, broad guys in suits, but Julias standing next to Michael felt like standing next to a barely-contained wild animal. He was a Gangrel though, so Julias was just going to have to get used to standing shoulder to shoulder with him.\n\n\"Tony's gone, and Rebecca's gone. We know of no one else in his flock of covenant-less fools who would be both strong enough, and stupid enough to kidnap or kill our Kindred.\"\n\n\"Then perhaps something else is going on?\" Maria walked around the table to join them. Now the ghost woman was on his other side, looking like a freshly dragged river corpse as usual. Just being near her was enough for Julias to feel the unnatural cold pour off her. \"We've seen unusual activity from the anarchists. Even without their leader, they are doing something. They scout their area like it were still their territory.\"\n\nMichael grunted. \"Without Tony or Rebecca to stop us, why don't we just march in there and stake them? Put them out for sunrise one at a time, one kill a day, until one of them tells us what we want to know. They have no covenant to claim them, so the Prince will not mind.\"\n\nJulias shook his head. Staking a vampire in the heart paralyzed them, forced them into torpor until the stake was removed, so Michael's plan would certainly work. But hell no. \"They're all neonates, Mister McDonald. Tony was the only elder, and Rebecca their only ancillae. They are just children.\"\n\n\"No, they are not.\" Maria was the one to frown this time, and the tiny corpse looked up him from behind her flat, black hair. \"Do not let your new role as sire cloud your judgment, Mister Mire. Unless I am correct, your childe was quite thorough in undoing the damage of an error on their first night. Beheading the kine corpse, I believe, of someone he'd killed in frenzy. Not childish behavior.\"\n\nInvictus had good memories. \"... he did, yes. Master Terry is not as easily broken as most fledglings though.\"\n\n\"Perhaps, Mister Mire. Perhaps. But the fact remains, we should not underestimate them, or be lenient simply because they are young. They had every opportunity to join the Invictus, even the Carthians.\" Then she gave a small smile, which was all sorts of disturbing on her quiet face. \"Even if they'd joined the Circle of the Crone, at least they would have been a known factor.\"\n\n\"Then I suggest we investigate first,\" he said. He stepped closer to the screen, and drew several lines along rooftops and subways. \"We send two or three Kindred we can trust to handle themselves. They can report back, and we can make an informed decision then.\"\n\n\"It's a smart choice,\" Michael said, \"but it delays action by a night. Maybe two.\"\n\nJulias gave a small nod, and looked to the animal on his right. \"We do not survive centuries by jumping to conclusions. \"\n\nThat earned a small smile from Michael too. Julias always knew what to say to make them happy, and get his way. He really did have a knack for this; Viktor would have been proud.\n\n~~~~~~~~~~~~~\n\nNatasha and Jessy walked in, and Julias gave them both a small nod. He was leaning back against the table of the meeting room, while Michael and Maria sat further back at the table. They were there to listen, nothing more, he hoped.\n\nLittle Natasha, the Mehket, and Maria's right hand. A bit short, with long black hair and dainty features, he worried she'd one day wake up and find her skeleton had cracked in half. She really was too thin, but she was fifty-years embraced; it was far too late to tell her to eat a sandwich. She was in a casual gray business suit, pants and single-button jacket over a white shirt. It was so plain, so Mehket. She reminded him of the sheriff.\n\nThen of course there was Jessy. Short blonde hair that, he had to admit, looked pretty sexy on her boxer figure. She was almost as tall as him, and had no trouble meeting his eyes and trying to stare him down; she reminded him of a panther. She too was in a suit, black, but her jacket was open, her shirt unbuttoned enough to show some of the black bra underneath, and a pair of sunglasses hung in the pocket. She even had a gold necklace that trickled down between her breasts, and long gold earring chains.\n\nThirty-years out-of-date fashion sense, but that was alright. He knew what that was like.\n\n\"Madame Vola,\" he nodded to Natasha. \"Madame Herrington.\" Another nod for Jessy. Using titles of address was proper for Kindred in the Invictus, whenever discussing things in an official capacity, but for the moment, he just wanted to rub their noses in his success. What good was there in being on the triumvirate if you couldn't tease your old comrades.\n\nThey both give him back their own, weird, slightly embarrassed nods.\n\n\"M-mister Mire. You summoned us?\" Natasha said.\n\n\"Indeed. I have a mission for you two.\" He walked over to the digital map on the wall; for a second, he reminded himself of Viktor, strategizing and giving orders. \"Miss Pol and Master Leval have gone missing. Last we heard, they were hunting near Tony's old grounds.\" He circled the large chunk of South Side where Tony used to nest. It was prime black market territory, with a lot of bars and a lot of dark alleys that made the alleys of the business district seem tame.\n\nNatasha took a tiny step forward. \"T-that...\"\n\n\"Madame Vola?\"\n\n\"Yesterday, my childe Vivienne... Miss Maiorie... she did not report in. I had assumed she had simply forgotten, lost in her w-w-work.\" Natasha looked down, then to the side when worry painted itself on her face. \"Her apartment is near there.\"\n\nJulias looked back at Michael and Maria. Now things were personal for one of his chosen, but the two of them dismissed it with a slight wave of their hands.\n\n\"Keep an eye open for Miss Maiorie then, but understand your primary objective is to determine what happened to Miss Pol and Master Leval. We know Tony and Rebecca are dead, but he had a lot of underground networks built over the centuries. There are entire labyrinths we should get mapped, later. For now, we just need to know what's going on that's caused our young neonates -- three now -- to go missing. The moment you can answer that question, return here.\"\n\n\"And if we find out they were killed?\" Jessy said. Growled, practically.\n\n\"Return here.\"\n\n\"Come on Julias, you can't expect us to\u2014\"\n\n\"Did I stutter, Madame Herrington?\"\n\nCold did not do justice the tone of his voice. Jessy was a powerful, willful Gangrel, but her impulsive bullshit was a liability. He could nearly feel Michael smiling behind him; Jessy's sire was more than happy with his approach to crushing Jessy's juvenile stupidity.\n\n\"... no, Mister Mire.\"\n\n\"The operation is to begin tomorrow night, two hours after sunset. You have the rest of the night to prepare.\"\n\n\"Are we expect-ting a fight?\" Natasha said.\n\n\"Something happened. I trust our Invictus neonates to be more than punctual with their check-ins. So if they're not checking in, then...\" He shrugged, and gestured to the map on the wall again. \"Just be prepared.\"\n\n\"Yes, Mister Mire,\" the two right hands said in unison. After a small nod, they both turned and were gone.\n\nJulias sat back against the table, and kept his eyes on the map. What was going on? There were no attacks against Xnomina lately, no trouble with the Carthians on Invictus borders. Everything was quiet. Even Jacob, or his Circle of the Crone group, hadn't caused any trouble lately.\n\n\"What do you think you'll find?\" Maria said, her elbows on the table, fingers netted and chin on her knuckles.\n\n\"Honestly? I've no fucking idea.\" Julias ran his fingers through his blonde hair, slick backed against his head. \"If it were werewolves, there would be a lot more damage than a few missing neonates.\"\n\n\"The Seven? Perhaps the Strix are connected?\" Michael said.\n\nBut Julias and Maria both shook their head.\n\n\"I can't see a pattern. Until we have one, we can't push forward on this,\" he said.\n\n\"Indeed,\" Maria said. \"In the meantime, I would like to discuss the ball the Prince has planned. The Carthians will be there, Garry will be there...\"\n\nJulias tried to listen, but his mind wandered to thoughts of Natasha and Jessy. Normally he'd be going with them, and he kind of missed the thrill of going on a mission. He'd been in dozens of fights with Tony's anarchists, and sometimes the Carthians when they got rough. Deaths were rare, but they happened, and the last thing he wanted was his old partners coming back in urns.\n\n~~~~~~~~~~~~~\n\nPart of his promotion was getting Viktor's old mansion, and now that he had it, he had no idea what to do with it.\n\nIt was a classic thing, something built a ways out along the edge of South Side where only the most filthy rich lived, where there was actual space for roads, small hills, and grandiose buildings. There was no official name for the district, but most simply called it Rich Side, and the multitude of hills it was built on were enough to raise the heights of his mansion so his window view saw over much of the city. And he did find himself staring out that window on a regular basis, with both hands netted behind his back.\n\nHe'd seen Viktor stand like this a million times, but he never imagined himself doing it.\n\nWhen he looked down behind him, he got flashes of the Victorian era. Massive, curling stairways lead down into spacious rooms with classic furnishings. There were no TVs here, all electronics were hidden and subtle, and his front door was a giant pair of wooden doors. There were pillars of white, carpets with ornate patterns of red and gold, and all sorts of extra rooms that were useless. He did not need six bathrooms. He barely needed the one.\n\nAnd when someone knocked, they used a door knocker that sounded like a club against a church bell. With a groan, he stepped away from the window, walked down the stairs, and headed for the door. He'd seen the car pull up, but his mind was wandering, and his body just went on auto-pilot mode to open the door.\n\nIt snapped back to awareness with jarring effect when he found the Prince at his door. The tall, gorgeous woman was dressed in something white and furry, and it matched her white hair and red lips well. Her red eyes made her look like she'd stepped out of a movie.\n\n\"Prince! I, uh... how can I help you?\"\n\n\"I was hoping we could talk, Mister Mire. May I come in?\"\n\n\"Yes ma'am.\" He stepped back and held the door for her. She returned his words with a nod, a smile, and walked into his abode. She paused for a moment to give her driver a small wave, and when Julias peaked his head out to see, he bit his cheek at the sight of the sheriff.\n\nHe could count on one hand the amount of times he'd had a direct conversation with the Prince, and now she was at his place. At his actual place, and her sheriff was waiting for her when she was done. He tried to suppress the aching fear his beast was emitting.\n\n\"Would you enjoy a drink, Prince?\" Be kind, be courteous. He had the leeway to be an aggressive negotiator in a primogen meeting, but he had no such room to maneuver when it was just the two of them.\n\n\"Thank you, but I am fine.\" She gave a small dismissal with one of her hands; she was wearing white, elbow-length gloves. \"How is your new home, Julias? Viktor's old-fashioned taste must be quite boring for you.\" She gave him a devilish grin before she walked over to one of the couches -- some sort of massive, Victorian lounge chair, he believed -- and sat down. \"It does remind me of my previous home, oh so long ago. Such faded memories.\"\n\nThe lounge chair had plenty of room, so at least it didn't feel awkward when he sat down on its other end and angled himself to face her. \"I forget sometimes that you are from Europe, from a different time. Your Elysium tower, and most of the architecture in Elysium seems much more modern.\"\n\n\"Ah, Mister Mire, I do strive to ride the waves of fashion as best I can. It can be hard, when you are as old as I.\" \n\nShe was a master at manipulation. She'd adjusted the conversation so he knew how old she was, ancient even, while making it seem like it was a weakness, instead of something that gave her massive power. He wasn't about to simply ask her what she wanted though. It'd borderline on rude, even though it was all he could think about.\n\n\"Viktor made no effort to change with the times. I had no idea he was so obsessed with the past until I'd inherited this home. This entrance lobby is just the tip of the iceberg. He has rooms dedicated to reliving ages past,\" he said.\n\n\"Has he now?\"\n\nJulias nodded. \"I'm sure there is clothing and jewelry here worth more than this house, and he has them on display in glass casings.\"\n\n\"Oh Viktor, you always had your eyes to the ground.\" The Daeva gave Julias a knowing glance, and even a soft smile, like she were apologetic about something. \"I am sorry for this talk of Viktor. I did not come to discuss your sire past. I came to discuss your childe.\"\n\nYou mean that you're dating my childe and basically have me by the balls because of it? He almost said it, too. \"I... am not sure that is my business, Prince.\"\n\n\"Of course it is your business. He is your childe. You wish to protect him. He is also a member of the Invictus, while am I Ordo Dracul; our relationship is highly peculiar and you deserve to have any concerns voiced, or questions answered.\"\n\nWell, this was going to be a weird, painful conversation. He'd planned on approaching her about this, not the other way around.\n\n\"... this is all true, Prince, but I can only be so frank.\"\n\n\"Say whatever you wish, however you wish. I grant you complete freedom of speech, Mister Mire.\" She raised a gloved hand to her red lips, and touched one of her fangs while she looked at him with an analyzing eye. \"For now.\"\n\nWas she trying to get him to talk himself into a corner? Those red eyes of hers were so damn hard to read. She just held his gaze, and each time her gaze shifted from one of his own eyes to the other, he could practically see the thousand possibilities she was calculating. If he said the wrong thing, he could make a powerful enemy. But on the other hand, her proposal seemed genuine enough, logical, and he had no reason to distrust her motives other than her impenetrable veil of secrecy.\n\nDamn Dragons.\n\n\"Alright, if that is true. Then... may I ask... why?\"\n\n\"Why what?\"\n\n\"Why Jack?\"\n\nShe raised a brow. \"... why Beatrice?\"\n\nGod mother fucking damn her. Did she know everything? He hadn't brought the relationship up to anyone, and the Nosferatu was good at the shadow arts.\n\n\"Beatrice... why Beatrice.\" He raised a hand to his hair, and let his eyes drift to the carpet. He'd never really thought about why. Can you put into words what draws a kine to gaze into fire? \"She's captivating. She... she's so different than me. She cares nothing for politics, or Kindred webs. Brutal, genuine, direct, all those things I've forgotten how to be, if I ever was..\" A smile forced its way onto his lips. He tried to hide it, but he couldn't. Just the thought of that damn shark-mouth and her brazen attitude, calling him out on his bullshit and forcing him to... to be alive, it was something he wanted more of.\n\n\"There is a secret, Julias dear, that I have told no one.\" She leaned forward then, and folded one leg over the other. He hadn't noticed her white high heels; she really did have great fashion sense. \"You and I are much alike.\"\n\n\"... I'm sorry?\"\n\n\"I first met Jack when he failing at something that came naturally to you, or me. Failing to manipulate kine for an easy meal. And when he saw me, he froze in fear as many do.\" She gave him a grinning wink then. He was one of those people who froze at the sight of her too. \"How many fledglings do you imagine could suffer the fear of meeting someone nearly five centuries their elder?\"\n\n\"... none. You are a scary creature, Prince.\" Careful Julias.\n\nBut his words just made Antoinette chuckle, and she looked to the floor while she traced a finger along her knee. \"Jack did. He sat next to me in that booth, and it was then I noticed a strange thing. Something I'd never seen in another Kindred.\"\n\nJulias blinked, and tilted his head to the side.\n\n\"Jack was afraid of me,\" she said, \"but he was also intrigued. It was all over him, every gesture, every glance, every noise. His eyes spoke volumes, honest and open, and it was indeed captivating. He has a spark in him, Julias, that you found when he was still alive. The boy has an honest soul, and a determined one.\" She chuckled again, but followed it with a longing sigh that had Julias shocked. \"And I know you see similar in Beatrice. The reason she despises our webs of deceit and control is because she too is an honest, determined soul.\"",
        "\"Honest. Determined... you summarize people very well in few words,\" he said.\n\n\"Only because I have been doing it for much, much longer than you.\" She righted her gaze at him then, and a harsh edge joined it. \"You would do well to hold onto Beatrice. She has that inner fire that will warm your cold insides. As Jack will mine.\"\n\nHe did not like that predator look in her eyes. \"Are you saying I'm using Beatrice, and you're using Jack?\"\n\n\"We all use each other, Julias, but that does not mean I don't hold Jack in my arms, and wish happiness upon him. I want nothing more than what is best for Master Terry,\" she said, Invictus title and all, \"and I will fight for that.\" She stood then, and looked down at him. He couldn't bring himself to meet her gaze just then, like she were some goddess casting her gaze down at him from on high. \n\nShe was grabbing what she wanted, she wasn't going to let go, and if he stood in the way, she'd destroy him.\n\nBut, after a while, she let out a slow sigh. \"I am sorry. I made that sound a threat, and I did not mean that. I only wished to say....\"\n\nHe raised his eyes to blink at her, surprised. The Prince was embarrassed about something. She was even squirming a little.\n\n\"To say that Jack is precious to me, Julias, and that is a feeling I have not felt since before your existence. Do you understand what that means to me?\"\n\n\"I... I don't think I can.\"\n\n\"I believe you do, Julias. It is why you sired Jack in the first place, no? You sensed in him that fire that warmed your cold, dying soul.\" She reached out, and poked him in the forehead. It was the first time she'd ever touched him.\n\nShe sure was Daeva. Disgustingly, unabashedly poetic, but painfully truthful.\n\n\"If you do not wish to become Viktor, a broken and paranoid man with no humanity in his withered, dead insides, you will fight for Beatrice, as I will fight for Jack. And I do not wish Viktor's fate upon you, Julias. You are a kind man, and one I would like to keep in my city.\" Again she sighed, and reached up to pull her main of hair over her fur scarf and down her chest so she could comb it with her fingers. \"Forgive my ranting. Do you have anymore questions?\"\n\nThe fuck could he ask after that? A single conversation and she'd made him feel like he was a teenager barely passed puberty, getting a lecture from his mom about love.\n\n\"I'm not sure. I... I'm glad, that you think so highly of Jack. I really do love that kid,\" he said.\n\nShe smiled, was about to say something, but stopped herself. \"... I owe you, Julias. I cannot grant you a boon that would affect the covenants, but whatever personal favor you can think of, please, ask of it.\"\n\nHe just blinked at her. He was doing a lot of that, but Antoinette was not someone he could control in conversation. \"If I think of something I will. Thank you.\"\n\n\"You are most welcome, Mister Mire.\" She gave a small bow, turned, and headed toward the door.\n\nBefore he knew what he was doing, he was up and opening the door for her. For a moment, he thought maybe she'd bewitched him into opening the door, but when she gave him a smile, another nod, and walked on, he knew she hadn't. She just had that affect on people.\n\n\"Ah, Prince?\"\n\nShe stopped, ten feet from the doorway, and looked up the stone pathway up to him. \"Yes, Mister Mire?\"\n\n\"The Ordo Dracul, do you-\"\n\n\"Don't worry, Mister Mire.\" She tapped her lips in a mocking shh. \"Master Terry is Invictus, and it would be decades before I could even open those doors to him. You have nothing to worry about on that front.\"\n\nHe sighed with relief, and gave a nod of his own before watching her go. Well, at least that one was thing he didn't have to worry about; she wouldn't steal Jack that way, and she wasn't stealing the other neonates either.\n\nThen where the hell were they?\n\n~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~\n\n~~Natasha~~\n\n\"Man that Julias has a big pair of balls on him.\" Jessy said. She was smart enough to keep her voice down, but the Gangrel kept getting louder and louder until Natasha had to poke her in the ribs. She'd had to a few times now.\n\n\"He is Viktor's childe, after all.\" It was so much easier to not stutter when it was just the two of them. \"And he was right. It was the right plan.\"\n\n\"Fuck, doesn't mean he should talk down to us like that.\"\n\nNatasha smiled up at the Gangrel next to her. It was just the two of them, and they'd worked their way down the subway tunnels. Natasha was happy to wear one of her typical suits, but Jessy was much happier going all out. She'd put on leather, and all sorts of weird layers of straps, belts, and vests over top of it. It was some sort of modern, secret military espionage armor, probably, maybe. It looked cool, but kind of silly too.\n\nBut then, Natasha was the one with a silenced pistol in her hand, and a short sword on her side. To each their own.\n\nShe'd kept the two of them hidden from eyes with her cloak of night. If there was at least one thing she could do right, it was hide them from prying eyes, even with Jessy's loud voice. Julias trusted her with stealth, even for infiltration, and that made her smile.\n\n\"I still c-can't believe Viktor is dead, and Tony. You think Julias did it?\"\n\n\"Maybe.\" Jessy shrugged. \"Or his little kid Jack. See that kid? Christ he's tiny.\"\n\n\"Hey.\" Natasha frowned up at her partner.\n\nThe Gangrel laughed down at her, and even put a gloved hand on her head to toy with her hair. \"Tiny little thing like you? Bit different than with a guy. A small guy like that, all I can think is, his dick must be the size of a used-up pencil. You though? Guys are thinking 'hot damn, she'd be so fucking tight.'\"\n\nHer friend knew no shame, and Natasha could swear she was blushing, even without the blush of life going. \"He's dating the Prince.\"\n\n\"I know!\" she yelled, and Natasha was quick to give her another jab in the side. \"Sorry, sorry. But yeah, she's so damn tall, and she's a pretty curvy thing you know? The hell she doing with that pipsqueak?\"\n\n\"Size isn't everything.\" She shook her head. Why was she having this conversation? It was such boy talk, talking about penis sizes and breast sizes and vagina sizes. \"And besides, biological differences in size of genitalia are not correlated with frame height at a one-to-one ratio in an adult. His penis size is probably of adequ -- are you making fun of me?\"\n\nJessy had started using her hand as a fake mouth, and was flapping it in the air in front of her. \"Nerd.\"\n\n\"Barbarian.\"\n\n\"Geek.\"\n\n\"Philistine.\"\n\n\"Hermit.\n\n\"Butch.\"\n\n\"Hey hey, now that's below the belt.\" Jessy gave her a frown, and used both her hands to adjust her hair a bit. \"Shit, you got me all self conscious now.\"\n\nThey had to slip through some very old tunnels, older holes, into ancient tunnels that weren't even used anymore. Tony's underground network was very, very old. But at least it was sturdy. Without a fear of a rock falling on their head, they were free to stick to the shadows of the pillars that held the tunnel up, and once they were beyond any lights, there was only darkness. Eventually it got so dark that even Kindred eyes could barely see. But that's where Natasha was her most comfortable.\n\nShe could see where others could not; an unnatural talent for the auspex, her sire had said. Jessy called it Sith sight.\n\nNatasha smiled at the thought, but a noise down the way had her reaching up to grab Jessy, and she pulled her down into a crouch along the railway. Voices rolled off the walls up ahead from far ahead. Natasha crept closer.\n\nLight was starting to bounce off the rocks of the large tunnel, but thankfully its curving nature and metal pillars gave them something to hide behind. Not that they needed it, as Natasha kept the cloak of night upon them both, but better safe than sorry. She crept from corner to corner of the curling tunnel, to pillar to pillar, until the tunnel straightened out and finally, they both could see a gateway.\n\nIt was odd. Deep down, under the earth, in old abandoned tunnels, they'd found what looked quite majestic. The tunnel ceiling rose so the gate had room to stand tall, a pair of pillars of dark metal with a beam that connected them above. But the metal had been shaped into ornate curves that looked like something that would belong in the Prince's Elysium. It was definitely Tony's nest, complete with electric lanterns that dangled from hooks and gave off gentle white light.\n\nAnd they could hear people talking. Not just talking, Natasha noticed, but talking casually. They were... happy? She pressed forward, but stepping out into the light and through a gate was not so easy. Her cloak of night drained her, and doing it so openly was exhausting, but if Vivienne was in there, or Amanda or Jordan, she had to find out.\n\nSo they walked through the gate. Jessy kept low, stuck to her side, and behind a little. They'd worked together for over a decade, had developed great synergy, so all they had to do was make small gestures at each other or tap each other on the shoulder to communicate. They stuck to the walls of what had become a hallway, plain and metal like everything so deep underground, but the further they got into the lit tunnel, the more it became not-so plain. More of the electronic lanterns hung from the walls. Carvings and engravings of ornate, meaningless patterns decorated the floor and ceiling.\n\nAnd then the hallway opened up into a giant room. All it took was a glance left or right to see it was a series of several massive lobbies connected by doorways similar to the one they'd found to enter the complex. There were chairs, there were tables, there were lights and doors with names on them, some open and some closed. And there were ghouls and Kindred walking around, young neonates all of them, minding their own business and chatting with each other. They had smiles on their faces, and many had a large book in their hand.\n\nVivienne. Her childe was sitting at one of the tables, chatting with Jordan, and Amanda too. Others were at the table, Kindred she did not recognize, but none of them were a threat. Now that she looked around at the strange group of Kindred, perhaps nearly fifty, with another fifty ghouls, she sort of recognized them, if only in passing. Tony's brood. The anarchist had a thing for collecting souls for his personal use, she knew, but his brood never looked happy whenever she saw them.\n\nThey looked happy now. So too did the three missing Invictus neonates. Vivienne, a small and quiet little thing like her, was laughing openly, loudly even, with her fellow missing Invictus, and the others.\n\nWhat was going on? She almost said it, but they were too close to make a sound; even her cloak of night wouldn't be able to hide everything from so close. Jessy and her kept to the hallway, with its metal pillars serving as something to hide behind, but they couldn't do this for long. Natasha looked at Jessy, but the Gangrel just shrugged at her and mouthed 'your call.' \n\nThe Mehket bit her lip, and poked her head out to look further down the way. One direction lead through another large lobby, with its own doors along its side -- bedrooms, she guessed -- and the other direction opened to a lobby filled with pews. Pews?\n\nAnd then two men walked out. One of them was of average height, average build, and all around forgettable if not for his hair; she kind of liked the look of it, one side shaved clean, the other half with long black hair. A Mehket, and judging from what her inner-beast felt at the sight of him, one of similar age to her.\n\nShe contemplated talking to him. He did seem like a guy she'd want to talk to. He had a nice, gentle face, and plain clothes; just jeans and a blue shirt. \n\nThe man he was talking to was a fledgling, a Daeva not even a week old. A freshly embraced Kindred. A smiling, freshly embraced Kindred. It was unsettling to see so many content faces.\n\n\"Bishop, I worry about my role in all this. You\u2014\"\n\n\"Jonathan, you spend far too much time worrying about things beyond your control.\" This Bishop fellow put his arm around the fledgling's shoulder. \"Your purpose is clear, and the Archbishop and I will help you with any problems you may have serving in that purpose.\"\n\n\"So, I mean... I just....\"\n\n\"Serve your sire. She will teach you how to seduce kine with but a glance, and you can feed upon them as God demands we should. You are the wolf, and they are God's sheep.\"\n\n\"God's sheep. But then, I don't understand why we're supposed to feed on them, and even kill them sometimes....\"\n\n\"Read the Testament of Longinus. And then, once it has confused you, read it again. And then once you are confused even more, come talk to me,\" the man said with a chuckle, and gave the fledgling a pat on the back. \"But for now, simply know that human kind has sinned, corrupted to the core by Adam and Eve. Earth is their prison, and we their tormentors. Only through total devotion to God will the sheep find salvation, and by preying upon them as the wolf, we will force them to put their faith in the shepherd.\"\n\nNatasha managed a half-smile half-frown. He had a lovely voice, but his words were a loud warning. Lancea et Sanctum. She'd never met one, how could she since the Prince had banished their covenant from the city. It was when she was first embraced, half a century ago, and she could only barely remember the conflict. But there had been violence, and a lot of it.\n\nAnd then the Bishop looked straight at her.\n\nShe jumped. Jessy jumped too, hand on Natasha's shoulder. But it was enough signal for the two of them to immediately turn around, and run. Natasha dropped her cloak of night, ready to put all her speed to use, but she froze.\n\nThe Bishop was already behind them, with his head tilted to the side so his half-head of hair hung over the shaved side. He was fast! Faster than most Mehket. Faster than her. \"I am surprised. It has been not even two weeks since Tony's death, and already scouts have come for his place?\"\n\n\"Well you fuckers stole three of our-\"\n\nNatasha elbowed Jessy in the side. Her friend talked way too much.\n\n\"Oh? Three? Then you are Invictus. You speak of Amanda, Jordan, and Vivienne,\" the bishop said, and gestured behind them.\n\n\"... Sire?\" Vivienne said. The three Invictus members, and a couple dozen Kindred and ghouls stepped up to circle them, but only through sheer intrigue.\n\n\"... Vivienne. I'm g-g-glad... you're well.\" Neither she nor her childe could look each other in the eye. Guilt dripped from Vivienne's face like tears, and Natasha was forced to look away to avoid it. She'd been betrayed, but it need not be said.\n\nJessy, of course, was more than willing to say it. \"So what's up you fucks? The fuck is going on here? Lancea et Sanctum shit? The Second Estate was banned from Dolareido.\"\n\n\"We... we....\" Vivienne tried to talk, but Amanda stepped up. \n\nAmanda Pol, Gloria Jenning's childe, another Mehket of the Invictus, stood her ground. \"They've started again, and we've joined. We're a family here, we belong, and\u2014\"\n\n\"And nothing you stupid little shit. You don't just vanish without a word. Now I don't give a fuck about what church boy here,\" Jessy gestured to the bishop behind her, \"or his 'family' want to do, or whether they exist, but you owe the Invictus. You're coming with us, and you're going to explain everything.\"\n\n\"I'm afraid I can't allow that.\" Damien reached behind him, and slowly withdrew a sword. It was an elegant piece, sleek, modern, and he held it with a confidence that had Natasha almost trembling. \"Please, do not force me to kill you. Surrender, and no one will be harmed. Once my sire is back, he can decide how to deal with this situation. We want only peace.\"\n\nSire? She'd figured this Mehket had avoided notice due to his young age, but if he had a sire, she was thoroughly confused. She knew of no one old enough to be this boy's sire except for the sheriff. And he most definitely was not the sheriff's.\n\n\"Two against one, fucking priest.\" Jessy took a step forward, hunched over slightly, and pointed her hands down. With an almost sickening tear of leather, large claws erupted from her fingers and through her gloves.\n\n\"... Invictus Gangrel, I pity your sire. Your counting ability leaves much to be desired.\"\n\nJessy and Natasha looked back to the crowd that surrounded them. The two of them were at the entrance to the hallway that lead out of the weird underground complex, but the Bishop was in the hallway blocking them, and behind them was a growing half-ring of Kindred. The former Invictus neonates did not join in, but that didn't stop Tony's old brood from stepping up.\n\nAnd Tony's old brood didn't seem too upset by the prospect of beating up some Invictus.\n\nNatasha put on her biggest frown, pathetic as it was, and walked up to the bishop. She motioned for Jessy to cover their six, and the Gangrel gave an annoyed grunt before turning to face the oncoming neonates.\n\n\"... w-what's your name?\" Natasha asked the bishop.\n\n\"Bishop Damien.\" He said it with a small bow.\n\n\"Alright, so no violence? And we c-can't leave?\"\n\n\"Correct. Please submit. You will only be detained until my sire returns, and then he can determine what to do. He wants only peace for the Lancea et Sanctum.\"\n\nShe gave a small smile. He really did have a nice voice.\n\nHe didn't make a sound when she shot him between the eyes, and collapsed with a large hole in his forehead.\n\nA silencer did not reduce a gunshot to quiet levels, not even close. Instead, it was just not ear-splitting loud, so the score of Kindred behind her did not hesitate to jump forward and tackle them when she fired. To their surprise though, Jessy also did not hesitate to throw herself against the tide.\n\n\"You stupid fucks!\" She grabbed one of them by the throat -- she did not spare her claws -- and smashed their skull into the floor and walls. Natasha turned to face Jessy, only to look away at the sight of a Kindred's skull splitting open.\n\nIt wouldn't kill a Kindred, but it'd be a close call with second death for any fledgling. But, to Natasha's surprise, it didn't deter them. In fact, a few of them threw themselves at Jessy, and Natasha was forced to step back and away from the cluster of limbs fighting and scraping.\n\n\"Get off of me! Fucking vermin!\"\n\nThose poor Kindred, they didn't know. They may have known who Jessy was, but none of them had seen her fight, not really. Natasha stepped back a little further, and made room.\n\nOne of the Kindred flew straight up and into the ceiling, and her arm was missing. Another was thrown back and into the lobby, through several chairs and tables and ghouls. The ghouls were not so sturdy as to not break limbs on contact with the flying body. Another Kindred lost a leg, and Jessy screamed murder at those on top of her and drove the limb into one of them like a baseball bat.\n\nThere were too many though. Too many. Get out get out, they had to get out. Don't panic, Natasha. Look at Vivienne, what's she doing? She's just watching, scared. This doesn't need to get worse, just get out.\n\nThen Damien got back up.\n\n\"That... hurt....\"\n\nShe squealed with a jump, but Damien's hand was around her throat and pinning her to the wall before she got two inches into the air. From so close, she got to see the hole in his forehead close itself. The Bishop, this fellow Mehket, was strong. Too strong. His grip was tight enough around her throat to break skin, and his other hand was on his sword and raising it to her eye.\n\nBut she still had her gun in her hand, and she raised it to try and shoot him again. All she got for her efforts was a sword through the palm that stuck her hand to the wall. She screamed.\n\n\"Natasha! Shit, get the fuck off of me,\" Jessy said. Natasha couldn't see the her, not with Damien pinning her by the throat against the wall. But she could hear the crunch of bone, tearing clothes, and ripped skin coming from her friend's direction. Jessy was not happy.",
        "\"I said no harm would come to you if you surrendered, and I was not lying. But I cannot fault you for your caution. The flock will detain your friend, and you will come with me. Understand?\"\n\n\"You... you can't expect me to-\"\n\n\"Tell your friend to stand down.\"\n\n\"No. We -- aaar!\" This time, Damien removed the sword and stabbed her clean through the stomach and into the wall. All thoughts of reaching for her sword to counter attack were washed away by the splitting pain of a blade skewering her insides.\n\n\"One more time. Please, ask your friend to stand down.\"\n\n\"... Jessy... can\u2014\"\n\nA blur cut straight down from Damien's side. A massive blur that moved the air as it past, before slamming into the ground hard enough to make the walls ring.\n\n\"Aaaaaarg!\"\n\nThe noise didn't come from Damien. Damien was gone. Natasha had to close her eyes from the spray of blood, and it wasn't warm kine blood either. There was Kindred blood in the air, and it splattered over her face before soon fading to ash. Whatever that blur was, it had forced Damien away with all the subtlety of a truck.\n\nThe sword had been pulled from her gut, but to the side and harsh enough to cut her guts open, forcing her to hold onto her belly while she collapsed. Damien had held onto the sword, when Jessy had pounced him.\n\nJessy. Damien. She looked to the group of Kindred, but they were a pile of bodies and groans struggling to get their senses back. When she looked to the other side, it was a frenzy of movement and madness. All she could do was drag herself along the floor away from them, with a trail of Kindred blood and ash behind her.\n\nDamien had his sword, and he was blocking and slashing with the speed of a Mehket, but Jessy continued to push forward toward him with wild insanity. She'd let her Gangrel side out, and it was enough to have Natasha back away from them both. Jessy's claws had grown to immense lengths, and had become serrated like something from a horror movie. Her skin had darkened, and her posture was hunched to the point she was leaping and pouncing around like some sort of beast. When Damien managed to land his sword upon her, it did wound the Gangrel, but didn't slow her down. It was like poking a crazed, bloodthirsty animal with a stick, and all it did was make Jessy scream with rage.\n\nJessy's massive claws had already cut Damien's chest open \u2014 it must have been the attack that had dislodged Damien from Natasha \u2014 and it was not a clean wound. Those claws ripped and tore and shredded.\n\n\"Jessy, be careful!\"\n\nBut Jessy was barely there. \"I'll kill you! You don't touch her, ever!\" Jessy roared, screamed, gave voice to that inner-beast they all kept hidden, and let out her Gangrel side. \"Never touch her!\" When those massive claws on Jessy's hands found metal, they sliced through it with heavy, monstrous swings. Each time, Damien had to dodge, and if it weren't for his Mehket speed, the crazed woman would have rendered him a splattered mess in a single hit.\n\nFor a moment, she thought of the Nosferatu Beatrice, and her claws. These were ten fold that size.\n\n\"Ah!\" Natasha fell down, and turned over to find a couple of the Kindred had jumped her. One of them was missing an eye now, a fresh wound, but the neonates were determined. Like brave soldiers, or crazed zealots.\n\n\"Pin her down! We have to get her back and into one of the cells. Lucas will be happy,\" the neonate said.\n\nLucas? She didn't know the name. Damn it, they were too heavy for her, and she'd dropped her gun. Her sword was still on her, but she couldn't get it, they were grabbing her hands and pinning her down, punching and kicking all the while.\n\n\"Jessy! Help!\"\n\n\"Quickly children, get her to the cells!\" Damien lunged forward, and sank his sword into Jessy's neck.\n\nJessy screamed rage, fury, loud enough that it shook the walls.\n\n\"Jessy!\"\n\nDamien pushed the sword forward. \"Don't make me kill you, Invictus. I\u2014\"\n\nNatasha twisted her head to see as best she could; Jessy had turned her neck into the blade so badly that Kindred blood was actually dripping down her body, but she'd bit down onto the Bishop's sword, hard. It was enough to get the shocked Damien to hold still for that split moment, and that was all Jessy needed take one large swing with her hands and land those monstrous claws on him.\n\nHe let go. He jumped back with that same, insane speed he'd used to get behind them, but it wasn't enough, not completely. Jessy's claws managed to sink their way into his chest, and he spun backward into a heap on the floor with four new, massive gashes along his skin.\n\n\"Lucas is here! Hold them!\" Another Kindred said as he rounded the corner. He had no idea. No idea at all.\n\nThe random Kindred probably didn't even register it when Jessy leaped at him. Her claws crashed down onto the unsuspecting man, and in that single slash, she cut him from head to his waist so he fell apart into three chunks of shredded meat. He was too young to turn to ash upon second death, and instead rotted away to decayed flesh before their very eyes until he was bone.\n\n\"What? What's going\u2014\"\n\nJessy wasted no time. Her boxer reflexes knew what to do, Natasha was sure; you followed up a hit with another, and Jessy's other hand swiped out horizontally against the two Kindred holding Natasha down. It was a blood bath. Natasha closed her eyes as fast as she could, just so she wouldn't see the two young Kindred nearly explode from the impact of the serrated claws.\n\nFor just a split moment, Natasha thought Jessy might attack her next. Those eyes were crazed, frenzied, as if she had given into her inner-beast completely and just let the madness consume her. But she scooped Natasha up, held her to her friend's bigger body, and hooked her arms around her neck and shoulders before tossing her onto her back.\n\nBefore she knew it, Jessy was running on all fours, back out the way they came. The light faded quickly, but Natasha could only wish Jessy ran faster. Once blackness covered them, Natasha did her best to guide her partner, but it was like trying to guide a rampaging bull. Jessy even crashed against the tunnel walls with enough force to crack stone, but her body was heavier now, her skin thicker, her bones harder, and she just kept running. \n\n\"You killed some of them.\" Natasha said. She coughed with the pain of her damaged throat. \n\n\"What the fuck was I supposed to do? We don't know who the fuck this Damien is, or Lucas, or Archbishop or Bishop and fucking shit. They wouldn't let us go.\"\n\n\"I know, I know. You made the right call, but....\" She looked behind her at the disappearing light. If this Lucas person came running after them, they were thoroughly fucked. But with time, no one came, and Natasha finally took a minute to start healing her stomach wound.\n\nShe had no idea what to tell Julias, or Maria or Michael. What about Vivienne? She'd betrayed Natasha, and now the Invictus had killed a few of their new group.\n\nShit could not have gone worse. "
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "vampire",
        "vampire romance",
        "supernatural romance",
        "blood",
        "violence",
        "seduction",
        "vampire sex",
        "vampire novella",
        "vampire drama",
        "supernatural"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-02-ch-02"
}