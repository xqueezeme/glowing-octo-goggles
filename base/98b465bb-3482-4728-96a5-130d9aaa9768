{
    "title": "Household God",
    "pages": [
        "Copyright Oggbashan February 2017\n\nThe author asserts the moral right to be identified as the author of this work.\n\nThis is a work of fiction. The events described here are imaginary; the settings and characters are fictitious and are not intended to represent specific places or living persons.\n\n*************************************************\n\n\"Hold it!\" I shouted, grabbing his arm and pulling him back from the road.\n\nThe elderly local man had just started to cross the road but a heavy truck had swerved to the wrong side to avoid another vehicle coming out of a side street.\n\nThe truck missed us by a few inches. I held on to his arm to make sure he was safe. He looked at me. Both of us were shocked by the near miss.\n\n\"Thank you, sir\" he said. \"No local would have done that.\"\n\n\"They wouldn't?\" I was surprised.\n\n\"No. Local customs say that anyone who saves someone's life is responsible for the person they saved -- for the rest of their life and in the hereafter. The saviour carries the saved one's sins for eternity.\"\n\nHe was still obviously shaken and his voice was trembling.\n\n\"It means nothing to me,\" I replied. \"I could stop you, so I did.\"\n\nMy wife's face was pale. She knew that I had risked my life.\n\n\"Where were you going?\" I asked.\n\n\"To the beach to visit my daughter, over there.\" He pointed at a small building about thirty yards away.\n\n\"Where were you going, sir?\" he asked.\n\n\"To a beach cafe for some seafood,\" I replied. \n\n\"Then come with me. My daughter's cafe serves the best and the freshest seafood. It may be small but it is the most popular restaurant here. Normally people have to book a week in advance, but we'll find a table. After all, she would have lost her father but for you. Come on.\"\n\nWe followed him into the restaurant. It was full. His daughter came to meet him. He spoke to her quickly in the local language. She smiled at us.\n\n\"Welcome to my restaurant, and thank you for helping my father. We always have a small table for friends and that you are.\"\n\nThe table was close to the kitchen and could seat four. The owner's father, my wife, and I sat down.\n\n\"My name is Joseph,\" he said. \"My daughter is Mary.\"\n\n\"I'm pleased to meet you, Joseph. I am Harry, and my wife is Paula.\"\n\n\"Not as pleased as I am, Harry. I was nearly the former Joseph.\"\n\n\"But you're not, Joseph. What would you recommend from your daughter's menu?\"\n\n\"I suggest you leave it to her. She will choose the best she has today.\"\n\nWe did. We had some difficulty recognising the various dishes and the fish species were unfamiliar. Of course they were. We were on a beach in West Africa, not eating fish from the North Atlantic. Mary joined us for some of the meal. The lunchtime rush was reducing and her staff appeared very competent, cheerful and delighted with their customers' enjoyment of the food.\n\nOver coffee Mary asked:\n\n\"Why are you here? Cruise ships don't normally come to our port.\"\n\n\"Apparently where we were going has an epidemic of a fever,\" Paula said. \"It's not serious, but the ship diverted.\"\n\n\"I'm enjoying it here,\" I added. \"The ports we have been to so far have been too dedicated to tourists, and expensive.\"\n\n\"Expensive?\" Mary queried. \"Surely not, if you can afford a cruise.\"\n\n\"We're not paying for the cruise,\" I replied. \"We won it as a non-cash prize in a lottery. Before then we couldn't have afforded a cruise. We could now because of the lottery but we've been normal people with bills to pay...\"\n\n\"...and children to support financially,\" Paula added. \"but they own their own houses because of our lottery win. We're not used to having money.\"\n\n\"Which reminds me,\" I said to Mary, \"How much do we owe you for the meals?\"\n\nThat led to protests and arguments between Mary and Joseph in their own language. I cut it short.\n\n\"I helped Joseph. That doesn't mean that Mary and her business owe me anything. We should pay for a wonderful meal.\"\n\nThey accepted that, eventually. The bill was very reasonable, particularly as we paid in US dollars.\n\n\"Harry,\" Joseph said, \"you were right. Mary owes you nothing. She's grateful that I'm still around but the obligation is mine. If you can wait a few minutes I'll bring you a small statue as a token of my thanks. I have no use for him now but he might amuse you.\"\n\n\"Shouldn't he be Mary's?\" I asked.\n\nMary shook her head.\n\n\"I don't need or want him. He's a magical object and despite my father and grandfather I would rather live without magic. There's too much magic and superstition in this country, but please let Joseph give him to you. He might not work for you, but if he does, used with discretion he can be enjoyable.\"\n\n\"I would appreciate it if you accepted him,\" Joseph added. \"Since my wife died a year ago he is useless for me. He only works for married people. I'm a widower now, and Mary has divorced her lazy husband. Please? Otherwise I will feel ashamed that I haven't thanked you.\"\n\nPaula nodded at me.\n\n\"Thank you, Joseph. Whatever he is, we'll accept him from a friend.\"\n\nJoseph went back to his house a couple of hundred yards away to fetch whatever he was. We talked to Mary in the almost empty restaurant. Joseph was back within minutes with a plastic carrier bag bearing the logo of a nearby supermarket.\n\n\"Harry, Paula, if you have time, I'd like to explain how I came to have him.\"\n\nI looked at my watch. We had at least three hours before we needed to get a taxi back to the ship.\n\n\"We have time, Joseph.\"\n\n\"I'll get some more coffee,\" Mary said. \"I know what my father is going to tell you.\"\n\n\"When I was young,\" Joseph started, \"I was a police constable here. I had a girlfriend that I hoped to marry when I was at least a sergeant. Her father approved of me because I had a stable job and prospects. But I nearly got into trouble because of her father.\n\nHe was a local magic man. He could provide spells for better crops, for increased prosperity, for happiness -- for a fee. He would not do as some other magic men do, and do evil. He wouldn't curse, or ill-wish anyone. One day his neighbours argued with some of their relations and asked my father for a curse spell. He offered to mediate their argument and reach a compromise, but he would not, never, curse anyone.\n\nThe neighbours became angry. They offered him more and more money. He refused. They threatened him with violence if he didn't produce the curse spell. They were even suggesting that they would burn his house down. At that point I arrived to take my girlfriend out for a walk. They neighbours didn't know she WAS my girlfriend and were annoyed when I interfered. I threatened them with arrest for assault and intimidation. They complained that magic was against the law. I told them bluntly that good magic wasn't and cursing was. I said they were attempting to get someone to commit a crime.\n\nI was lying. There was and is no law against any magic in this country, but my words had an effect. They calmed down. Instead of taking my girlfriend for a walk I stayed to have dinner with her father, just in case the neighbours wanted to try again. I wasn't on duty but I was still in my uniform.\n\nA few weeks later I proposed and was accepted. My father-in-law to be had gradually persuaded the neighbours to sit down with their relations and work out their problems. Although there was still animosity for a few months the demand for curses ended.\n\nWhen we got married my father gave us him.\"\n\nJoseph held up the bag.\n\n\"He is a household god. He has a long native name but is called 'Joss'. You can buy copies of him in the local market. He usually sits in a prominent place in the couple's bedroom. Joss is a benign god. He brings happiness and harmony. All he asks is a few drops of alcoholic beverage poured into his lap at least two or three times a year. He prefers wine, will accept beer, but he can get overexcited if you give him spirits. I suggest that you don't use spirits.\n\nBut this Joss is not like the ones in the market. This Joss is a real magic one and has the ability to grant wishes. My father-in-law had inherited him from his teacher of magic. Both magic men worked spells into Joss and those spells work.\n\nI don't want to explain in detail now, so I have written a short note giving the characteristics of this Joss. You can read them when you are back on your ship. Please read them before you give Joss a libation.\"\n\nJoseph looked around to check that the restaurant was empty before he took Joss out of the bag. Joss was a plump figure seated cross-legged. He reminded me of some Chinese statuettes I had seen, like a smiling Buddha, but obviously African. He looked as if he had been cast in brass, and about six inches high.\n\n\"You shouldn't have to declare him at Customs. You could buy one that looks very similar for less than five US dollars. But they wouldn't be magic ones.\"\n\n\"Thank you very much, Joseph,\" I said. \"We will look after Joss.\"\n\n\"If you ever want to get rid of him,\" Joseph said, \"please send him to Mary. Her address is on your bill.\"\n\nI reached into my wallet and produced a business card.\n\n\"That's our address, Joseph.\"\n\n\"If you could, I would like to know how you get on with Joss,\" Joseph asked. \"You could write to Joseph, care of Mary's address. She gets her post regularly because of the business. My post is erratic.\"\n\n\"We will,\" Paula said. \n\n\"Please put Joss back into the bag,\" Joseph asked. \"Some local people might be worried that foreigners have a Joss, particularly if they know he's from me. They still know that my father-in-law was a powerful magic man. I'm not. My wife had some of her father's powers. Mary has inherited some of them. Like my wife and my father-in-law Mary only uses her magic for good things. As with her cooking, she brings happiness. Joss should do that for you.\"\n\nJoseph reminded us again before we left. Don't give Joss any spirits.\n\n+++ \n\nWe didn't have to declare Joss on return to the ship nor on disembarking back in England. We had read Joseph's note:\n\n\"Joss grants sexual favours but only to married people. He should be placed in your bedroom where he can see you. If you give him a few drops of alcohol poured on to his lap he usually grants a wish. He likes wine. He accepts beer. He can be mischievous if he is given spirits. From time to time he likes being cleaned with a damp cloth but never polish or any abrasive. If you feel you no longer want him, please send him back to me. If you are unhappily married, Joss will be unhappy too. An unhappy Joss can be dangerous.\"\n\nWe hadn't unwrapped Joss on the ship. We were already enjoying ourselves too much just being a couple again instead of parents and grandparents of our first grandchild.\n\nOnce we were home and had unpacked we cleared a space on the mantelpiece of our sealed bedroom fireplace. Paula placed Joss in the centre.\n\n\"There you are, Joss,\" Paula said. \"You can see everything.\"\n\nI took several pictures of Joss. I would email them to Mary for Joseph.\n\n\"Do we pour a libation to Joss tonight?\" I asked Paula.\n\n\"Not tonight,\" Paula said. \"We still tired from the journey from the port. Tomorrow evening would be better.\"\n\nPaula was right as she usually is. We were relieved to be back home in our own bed. We slept well and felt much more energetic by the next morning. Most of that day was routine chores, washing, shopping, and dealing with the accumulated post. We ordered a take-away meal and ate it with a half bottle of wine. I left a little in the bottle for Joss.\n\n\"What do we want I wish for?\" I asked Paula after we had got ready for bed.\n\n\"A bit more stamina, perhaps?\" She replied. \"We're not as young as we used to be. Both of us get tired when making love.\"\n\n\"OK, Paula, stamina it is.\"\n\nI poured a teaspoonful of wine on Joss's lap.\n\n\"Please can we have some stamina tonight, Joss?\" I said aloud.\n\nPaula giggled.\n\n+++\n\nWhether it was the magic caused by Joss, or the relief of being back in our own home, but we were able to make love for longer that night.\n\nWe didn't bang each other like rabbits. We played with each other for hours before both of us achieved a simultaneous orgasm. That was rare. We both made a point of thanking Joss the next morning.\n\nOver the next few weeks we were able to make love more often and more effectively. Was it Joss, or was it psychosomatic? Or just because we had rediscovered on the cruise just how much we still loved each other? Or maybe that the lottery win had finished all the financial worries we had had for our children? We didn't know. We just enjoyed ourselves several nights a week.\n\nWe gave Joss a few drops of wine or beer once a week and always remembered to thank him every morning after we had made love. We had written to Joseph enclosing pictures of Joss on our mantelpiece. A few weeks later we received his reply reminding us NOT to give Joss spirits.\n\nWe weren't going to give Joss anything more than wine of beer.\n\n+++\n\nOn the last evening of March we went out to a local restaurant with a group of old friends. John had been Best Man at our wedding; another had been one of Paula's bridesmaids. Paula and I drank too much with and after the meal perhaps because we would be walking home.\n\nWe had exchanged token presents for the reunion. John's present to us had been a miniature bottle of a very mature malt whiskey. We decided to drink it before going to bed. It was enough for a single glass for us to share. It slipped down our throats like the liquid nectar it was. \n\nThen it happened. I put the empty glass on the bedroom mantelpiece next to Joss. As I took my hand away the glass slipped. A drop of two of whiskey landed on Joss's lap.\n\n\"Sorry Joss,\" I said. \"I didn't intend to do that. But could we...\"\n\nI looked at Paula. She smiled at me and finished my sentence.\n\n\"...try something different tonight, Joss, please?\"\n\nWe were too happily drunk to think that our request to Joss was dangerous. Joseph had warned us that Joss was mischievous if given spirit. We had just... No. I had just given Joss a few drops of a very potent spirit.\n\nWe got ourselves ready for bed. We had to be slow and deliberate because we were really more intoxicated than we had been for years. We were happy. We had enjoyed the evening. We were too tired and too drunk to make love so we just climbed into bed side by side.\n\n+++\n\nI had left the landing light on because I expected we would both need the bathroom during the night. The glass panel above the bedroom door lit the bedroom dimly. I was aware when Paula went to the bathroom. I watched her naked backside wiggle across the room. I noticed that she had left her white silk nightdress over a chair. Most of the time we both slept naked. \n\nThat nightdress had been special. We had been in a department store for Paula to buy some new bras. An example of that nightdress had been on a mannequin near the bra rack. As I looked at it I imagined Paula wearing it. That produced a rare spontaneous erection. As Paula came back to me clutching the bra packs she looked at the nightdress too. She had noticed the bulge in my trousers.\n\nPaula walked up to the mannequin and lifted the price tag. She winced. I looked over her shoulder. It was expensive -- then. It wouldn't be now we had won the lottery but at that time we couldn't really afford it.\n\n\"It's lovely,\" Paula said, \"and if it does that much for you when on a plastic woman, Harry, what would it do on a real woman?\"\n\n\"On my wife, Paula, I think the impact would be instantaneous,\" I replied.\n\n\"Shame it costs so much. I'd like it -- and not just for what it would do to you.\"\n\nI looked at the price tag, then at Paula. Her eyes were shining. I hadn't seen her covet almost anything that much during all the years we had been married. If we bought it? Both of us would enjoy it.\n\n\"Paula,\" I said diffidently, \"we have a wedding anniversary next month. Would you like that nightdress instead of a restaurant meal?\"\n\nHer answer was instant and definite.\n\n\"YES!\" \n\nIt actually cost slightly less than we would have paid for the two of us in the expensive restaurant we visit once or twice a year. We still went out for our wedding anniversary but to a restaurant where the bill was less than half what it would have been at the other.\n\nI never regretted buying Paula that nightdress. She loved it. She felt sensuous and sexy whenever she wore it. Whenever she did I knew we would have great sex. She never had a headache wearing that silk nightdress. When Paula put it on both of us were happy whatever we had felt like during the day.\n\nPaula must have draped across the chair before we went out for the evening. But leaving it there and not wearing it was a sign that we were too drunk to make love. \n\nI watched Paula walk back into our bedroom. Although I knew I too needed to visit the bathroom I stayed put to watch her cross the room. Her slightly saggy breasts were swinging as she moved. She stopped by the edge of the bed before lifting her breasts with her hands.\n\n\"One thing I love about you, Harry,\" Paula said, \"is that you still appreciate my ancient body. But off you go. We're still too drunk for sex.\"\n\nWe were. I went to the bathroom. Although I was only gone for a couple of minutes Paula was snoring gently again. I snuggled up to her warm body and went back to sleep.\n\n+++\n\nI had a dream of some of the great sex we had had when Paula was wearing that nightdress. I didn't think it odd that Joss, our household god, seemed to feature in the dream. Paula hadn't worn that nightdress since we had installed Joss in our bedroom.\n\n+++\n\nI woke up and rolled slightly. I was aware of silk sliding across my erect nipples. Had Paula put the nightdress on while I was asleep? A warm hand slid between my legs and up towards my crotch.\n\n\"Harry? Are you awake?\"\n\nPaula was asking the questions but it didn't sound like Paula.\n\n\"Barely,\" I replied \"but wha...!\"\n\nThe finger of the hand between my legs slid into my cleft. Cleft? I haven't got a cleft. I reached out for Paula. My hand met a very erect penis and recoiled instinctively. Paula's hand pulled mine back to that erection.\n\n\"I asked Joss for something different,\" Paula said in my voice. \"He has done it. You are in my body. I'm in yours. You're wearing my nightdress and you are going to be well fucked. Any objections?\"\n\nAny objection I might have made was prevented by a kiss with a hand stroking my breast. I responded before jumping slightly as Paula's male hand pushed a finger deep between my lower lips. The sensation was very different but I was enjoying the attention as Paula fingered, stroked and kissed her own body that I was wearing.\n\nStrangely I didn't seem at all worried about having Paula's body. I assumed that Joss had caused the change and was ensuring that I wasn't frightened by the situation. I remembered Joseph's words about Joss - 'can be mischievous if he is given spirits'.\n\nPaula lifted the hem of the nightdress before straddling me. Her erection gently probed inside me. My legs spread as she pushed deeper. Soon she was thrusting hard into me and I was feeling warm, sensuous and aware of her male body against my soft female skin. The warmth spread throughout all of me and became insistent. I was losing myself in the sensation of being penetrated, and yet that wasn't all. I was accepting, holding, surrounding and swallowing Paula's maleness. She might be inside me but an important part of her was imprisoned in me.\n\nI shuddered as the first orgasm overwhelmed me. My brain seemed overloaded with ecstasy. Even as that passed I could appreciate that I could experience that again and again if Paula using my body could keep going. Perhaps Joss was still giving us stamina. I had four orgasms before Paula ejaculated and slumped across me. I wrapped my arms around her holding her in place as her erection shrank.",
        "I remembered what I liked after making love to Paula. I moved so that her head was resting against my breast. She snuggled against me and we both went back to sleep.\n\n+++\n\nWhen we woke again later than we normally do I expected that we would be back in our own bodies. We weren't. I staggered as I climbed out of bed. I hadn't appreciated what a weight Paula's breasts were, and how they unbalanced her body. We had to help each other to dress our unaccustomed bodies. Paula's bra supported the breasts better and transferred some of the weight to my shoulders.\n\nPaula had her usual breakfast of muesli. I made myself a full English breakfast as I usually do after an evening of drinking the night before, so only a few times a year. We commented that our insides would be shocked by the different breakfasts.\n\nWe were also slightly worried that we might be stuck in each other's body. We didn't have anything planned for today so we could learn how to move. Whether we would be able to hide the change from friends or family? We didn't know. We had the appropriate voice with the body but not the thought processes.\n\nI had an idea.\n\n\"Paula? Why don't we give Joss some wine and ask him to switch us back?\"\n\n\"It might not work, Harry, but anything is worth trying,\" she replied. \"I'm worried you might damage my body. I've already got bruises because I underestimate the space I take up in your body. I wear heels most of the time but you'd find them difficult.\"\n\nWe went back to the bedroom with a quarter bottle of wine. I poured a couple of drops into Joss's lap. We both asked him to switch us back before we finished the wine.\n\nBack in the kitchen over coffee we talked about the different sensations that happened when we were making love. I think I had learned how to arouse Paula better. She said she appreciated how quick my response could be.\n\nLast night Paula had asked Joss for something different. He had met her request. We would be reluctant to give Joss spirits again.\n\nWe were drinking a second cup of coffee when the kitchen clock ticked past noon.\n\nSuddenly we were back as Harry and Paula in our own bodies.\n\nI looked at the calendar.\n\n1st April. \n\nJoss had made April Fools of us.\n\nNote: This story was inspired by Thorne Smith's 1931 novel Turnabout. "
    ],
    "authorname": "oggbashan",
    "tags": [
        "harry",
        "paula",
        "joseph",
        "mary",
        "joss",
        "wine",
        "nightdress",
        "cruise",
        "magic",
        "breast"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/household-god"
}