{
    "title": "Collateral Ch. 09",
    "pages": [
        "Two blowjobs in one single fucking morning! Jake felt like floating as he was now all dressed up and ready to accompany Klaus to one of the construction sites to which the guy had promised to take him. And what was pretty amazing, and a bit unnerving at the same time, was how casual Klaus's featherlike touch on his shoulder was. The man was just guiding him around, and it felt so familiar that Jake was starting to wonder about moronic things like whether he had met Klaus Metzger in another life or something mystic like that.\n\nIt was also a bit of a letdown they had to leave the bed. Klaus had promised they were going to play, but, apparently, in this guy's book, there was always room for work. He wasn't in any position to protest. His bones felt weightless. He was certain that must have been like when people talked about walking on cloud nine.\n\nIt was enough to recall just what happened about one hour prior. The gorgeous man on his knees, servicing Jake, like the roles were reversed. He wasn't street trash, and Klaus, the top dog, was not taking advantage. Klaus's lazy blue eyes had flickered upward, watching him, as Jake had surrendered to the sensation of having his cock sucked as never before in his life.\n\nJake wished he could suck cock like that. He could barely wait to give it a go again. The first time now felt a bit blurry, and he could not remember details. Next time, he was going to enjoy it even more.\n\nHe winced and adjusted his jeans. It was clearly not the time to get hard again.\n\n\"Something the matter?\" Klaus blew hot air over his ear, as he walked slightly behind, and pushing Jake through the large entrance door.\n\n\"Do you really need to ask?\" he looked sideways and willed himself to avoid sounding like an amateur.\n\n\"Oh, did we leave the bed too early?\" Klaus feigned pity.\n\n\"Yeah, right. You're a pervert, to always think about that,\" he threw over his shoulder.\n\nThompson was waiting with the door to the car open. They climbed inside, and Jake loved how Klaus chose to sit very close to him, gluing their legs hip to knee. But it was not like he was going to get all mushy and gushy over everything.\n\nAnd the man smelled heavenly. He doubted he had ever met anyone to smell so good. And it was not just because of the expensive cologne. Maybe it was true what people said about perfumes smelling differently depending on the wearer's natural scent. Klaus was one of those people just smelling great by default. Fuck, there was no chip in this guy's armor; just perfect all around and just pissing off people like Jake.\n\n\"Funny, I did not peg you for a thinker,\" Klaus joked and hooked one arm over his shoulders, pulling him closer.\n\nJake turned slightly to stare into the man's impossibly blue eyes.\n\n\"I wasn't thinking,\" he protested, just for the sake of saying the opposite.\n\n\"Ah, so you are just too engrossed in my presence that you cannot even think,\" Klaus joked, his lips quirked into a smile that held a vague, enticing promise.\n\n\"So full of yourself, I cannot believe it,\" Jake mumbled and frowned.\n\nKlaus touched his forehead as if he was trying to smooth out the crease there.\n\n\"You are too young to be all grumpy like this,\" the blond spoke.\n\n\"Well, I got a rep to hold,\" Jake explained right away. \"If I walk around, smiling like a princess, what do you think would happen? I tell you what. Where I come from, you could get punched in the face and lose some teeth for something stupid like this.\"\n\n\"That is true,\" Klaus admitted. \"But when you are with me, you are allowed to smile.\"\n\n\"I'm allowed?\" Jake snorted. \"Like I'm your pet dog or something?\"\n\n\"Interesting. You seem to have an obsession for canines. Could it be that you are really bent on the idea to be taken from behind?\"\n\nJake blushed and bit his bottom lip hard.\n\n\"Could we not get all lovey-dovey like this with Thompson watching?\" Jake turned his head and tried to pry himself free from the man's tight hold.\n\n\"He is not watching. He is an outstanding employee.\"\n\nKlaus straightened up his tie with a cocksure gesture. It was fascinating to see how the man could quickly slip into his social mask, as the occasion demanded. Jake was not surprised to feel the car stopping to a halt.\n\n***\n\nJake felt a bit awkward at first being shown around by Klaus, and introduced to the team present at the construction site. These guys were not old farts coming from money, like the ones at the party. These were people who lived in poor neighborhoods, like his, and they were watching him with a mix of distrust and envy, probably wondering how a nobody like him had ended up in the good graces of such a prominent businessman.\n\n\"Are you interested in putting in some elbow grease? Or would you rather come with me to the foreman's office and look over some blueprints?\" Klaus asked him.\n\nJake looked at the men who were starting to work, now that the pleasantries with the man with the money were finished.\n\n\"I think I'm all up for some demolition work,\" he said with determination.\n\n\"Good,\" Klaus patted his shoulder. \"I guess you will find in the crew's quarters a change of clothes and some overalls. Unless, of course, you do not mind getting your designer jeans all dusty.\"\n\n\"Gods forbid I do that,\" Jake said with a smirk and headed over to the barracks without a single look behind.\n\n***\n\nKlaus was more than pleased with the way things were going. The people were enthusiastic enough about being given well-paid jobs, despite the initial lack of trust in the new management. After all, they were all strangers to this place, he included.\n\n\"Did you say something about bringing a new kid over, to show him the ropes, Mr. Metzger?\" the foreman asked.\n\n\"Yes. But I let him also get a feel of the hard work around here, on his first day. One thing I have to ask. No favors. I am the one to introduce him to this project, but it is to evaluate his possibilities, not to indulge him in believing he is better than others. So, please, be honest when giving me the report. If demolition tasks are everything he is good at, I am perfectly satisfied.\"\n\nThe foreman seemed to hesitate for a second.\n\n\"Has he any former education?\" the older man eventually asked.\n\n\"No. But I believe in his potential, in its native form. You will help me decide whether my hunch was right or not. Do not expect him to be already taught. I have faith in you.\"\n\n\"Certainly, Mr. Metzger,\" the foreman replied and proceeded to roll up the plans spread on the table. \"Can I offer you a cup of coffee?\"\n\n\"I would love a cup of coffee,\" Klaus said politely and followed the man to the improvised cafeteria.\n\nSitting by the window, he brought the Styrofoam cup to his lips and watched outside. Jake was apparently having the time of his life. And, of course, it was a pleasure to watch him moving about, choosing his tools and working together with the others.\n\nWhen Jake suddenly stopped and took off the regular white tee, Klaus smiled. The boy had a nice body, chiseled, hard everywhere. Nobody was allowed even to suspect he had had that gorgeous young man under him just earlier. He understood where Jake was coming from. The boy was part of a rough world, and Klaus knew everything about rough. Not because he belonged there, but because he had never steered clear of that part of the world around him.\n\nSome used to say that he had the manners of a diplomat and the mindset of a kingpin. Of course, those were people who knew him well and were aware of the somewhat underhanded tactics he often used to get the upper hand in the business he ran. But he had always had the best intentions at heart, or at least, he hoped that was the truth. There was always too much red tape to deal with, too many bureaucrats to convince. He was the link between two worlds, and he was known to make the best of any hand he was dealt. And, of course, cheat and bribe when the situation required.\n\nEverything worked well at the moment. There were rough patches to smooth out, but he knew well how things stood. And this town was a promising venture. Plus, he had everything he wanted and needed to entertain himself right under his roof, he thought, as his eyes traveled to the young man swinging a large sledgehammer and hitting a wall with all his might, making his audience hoot in surprise and appreciation.\n\nJake was going to have a fun time by himself, and he had other business to attend. If the boy had offered more than a little play in the sheets, he could have skipped the entire day to enjoy his new lover. But, seeing that Jake was still reluctant, there was nothing wrong with using the time efficiently.\n\nHe let the foreman know that Thompson was going to take Jake back to the house at the end of the day.\n\n\"If you don't mind me asking, Mr. Metzger, where did you find the boy?\" the foreman asked. \"He seems to be getting along with the team just great,\" the man added.\n\n\"I know what you mean,\" Klaus smiled. \"He looks like a punk. He is the younger brother of one of my associates, and the deal is to get his family more involved with the project,\" he answered the question promptly.\n\n\"Well, it looks like he's doing a pretty swell job right now,\" the foreman nodded. \"After the lunch break, I'll show him the ropes, too.\"\n\n\"Do that, please,\" Klaus said, and after shaking the man's hand, he headed over to the car.\n\n***\n\nAt first, he had been a bit taken aback to learn Klaus had left, but it was not like he was left with nothing to do. The physical activity had made him feel really good. Useful, in fact. Only that now he was in the foreman's office and that was making him feel a bit out of place. Maybe he did something stupid?\n\n\"Sit,\" the man showed him a chair. \"Mr. Metzger says you're interested in learning about managing a project.\"\n\n\"He does?\" he asked, feeling his throat a bit dry.\n\nThe foreman watched him with a frown.\n\n\"Look, kid, if you don't want to sit with me here for a while and watch over plans, you're free to go and work with the rest.\"\n\nJake almost hurried to say 'yes' but something in how the man looked at him made him change his mind. This old man was judging him. He was looking at him, and he saw street trash, nothing else. Yet, Klaus had left word that Jake was to learn about this management stuff, and that could mean only one thing; that in Klaus's eyes, he was more than just Jake the Outsider. He was a guy with a bit of brain in his head, and he could not disappoint Klaus by being a chicken and settling only for what was familiar.\n\n\"I'm willing to learn, sir,\" he said firmly, and the foreman looked at him, a bit surprised.\n\n\"Alright kid,\" the man shrugged. \"But I won't spend my entire day trying to get you to understand what I'm saying. Understood?\"\n\n\"Yes, sir,\" Jake replied.\n\n***\n\nIt was the end of the work day, finally, and he felt pretty much spent. Who knew learning all about planning and scheduling had to be so mind-boggling? But he had persisted, and he had followed the foreman in everything he said.\n\n\"Hi, man,\" he saluted Thompson, and the man nodded.\n\nHe was in terrible need of a shower, but the car was already there, and he could not let the driver wait. It was already weird enough that he got to be chauffeured like he was some hot shot when he was nothing but a guy from the streets.\n\n\"Can I ride in front with you?\" he asked the driver who was solemnly holding one of the back doors open.\n\n\"Certainly,\" the man spoke after a short moment of hesitation and closed the door.\n\nJake climbed in front and put on his seatbelt.\n\n\"Say, Thompson, have you been working for Klaus for how long?\" he asked, hoping he didn't sound too nosy.\n\n\"That would be seven years,\" the driver supplied the answer.\n\n\"Wow,\" Jake commented and looked out the window. \"Do you mind if I ask you ... is he like a good guy?\"\n\n\"Mr. Metzger is the best boss I have ever worked for.\"\n\n\"That's cool,\" he replied, not knowing what to say. \"Sorry for bothering you,\" he added.\n\n\"That's okay,\" the man spoke. \"Some work days are boring. It feels good to have someone to talk to.\"\n\n\"Oh, yeah? That's great. Because I definitely like talking,\" Jake said. \"Is it true that Klaus travels all over Europe and stuff like that? Doesn't he have like a home or something?\"\n\n\"If you're asking me about his headquarters, that would be Berlin, but he is involved in so many businesses that he travels, indeed, a lot.\"\n\n\"Have you ever been to France? I mean, because you work for him.\"\n\n\"Yes, I have been there.\"\n\n\"Is it like they say in the movies?\"\n\n\"Depends on the sort of movies you watch,\" the driver replied.\n\n\"Yeah, I guess.\"\n\n\"It is an interesting country. But Europe is too old for new business,\" the man suddenly began talking again. \"That is why Mr. Metzger prefers such locations. He says nothing stays fresh for too long, and one has to seize the opportunity.\"\n\nJake frowned a little. The man was speaking about Klaus's way of doing business, but his words sounded foreboding. He shook off the unpleasant sensation. After all, it had been a great day, and he didn't want to spoil it.\n\n***\n\n\"My room, now,\" Klaus told him the moment he entered the house.\n\nWhat the heck? Was he in trouble? What for? He followed without a word, taking in the man's square shoulders and strong back, as the guy was now wearing just a light blue t-shirt and a pair of slacks, and not the usual suit.\n\nHe was about to speak when the man closed the door and suddenly grabbed him, pinning him against the wall, and kissing him. Strong hands were on his waist, sneaking underneath his t-shirt.\n\n\"I, like, need a bath,\" he pushed the guy away with unfamiliar gentleness.\n\n\"You can use the shower, but be quick,\" Klaus said, his voice a little tight.\n\nJake hurried to walk under the hot spray, wondering what had gotten into the guy. Klaus seemed to be so calculated all the time. That definitely seemed out of character. He didn't bother to wrap himself in the towel, after drying up. He just rubbed his hair a little, skipping blow drying altogether.\n\nKlaus was still dressed, lying on the bed and reading one of his magazines. The blue gaze met him unabashed.\n\n\"Well?\" Jake opened his arms widely. \"Where's the fire?\"\n\n\"I am thinking of an answer, but it would be too crass,\" Klaus replied with a small smile, placing his magazine aside. \"Come here,\" he patted the place on the bed next to him.\n\nWith a shrug, Jake climbed the bed.\n\n\"Jake, you never fail to surprise me,\" Klaus spoke again. \"The foreman tells me you are sharp as a tack.\"\n\n\"Really?\" Jake's eyes glittered. \"Wait, when did you talk to him?\"\n\n\"Right before you got home and on the phone, naturally.\"\n\n\"And was that enough reason to jump me?\"\n\n\"Not really. Yet, the moment you went through the door, I felt the sudden need to kiss you. And I could not do that in front of the staff.\"\n\n\"I guess they're suspecting something,\" Jake's eyes fluttered shut.\n\n\"They are discreet. In return, I am not parading my passion all over the place. It would be bad taste. Although you almost make me want to break this rule.\"\n\n\"No shit,\" Jake shifted in his place. \"Are you doing this with everyone?\"\n\n\"Who?\"\n\n\"You know, your boyfriends,\" Jake crossed his arms over his chest, now overly conscious of his naked body.\n\n\"Are you my boyfriend, Jake? Is that what you are saying?\"\n\n\"I don't know. I'm whatever is called when two dudes give each other head.\"\n\n\"There could be much more than that,\" Klaus threw him a lopsided grin. \"Are you hungry?\"\n\n\"Yeah,\" Jake answered.\n\n\"Then you should dress up, so we can go down for dinner,\" Klaus move to get up. \"I have a change of clothes for you right here.\"\n\nJake grabbed the man's arm swiftly.\n\n\"Wait, didn't you want something?\" he asked.\n\nKlaus looked at him, his blue eyes glinting with something that Jake could only interpret as desire.\n\n\"It is alright,\" the man patted his hand. \"I am old enough to know that some things can wait.\"\n\nJake jumped up and almost cornered the man as he pushed him firmly against the wall. Klaus was now amused.\n\n\"What are you planning to do, Jake?\" the man asked sweetly.\n\n\"Unlike you,\" Jake chose his words carefully, \"I'm not a sadist. If you're a walking hard-on, maybe the people around here will think less of you.\"\n\n\"I must say that I am touched by how much you care. But that still does not answer my question. What are you going to do?\" Klaus repeated the question.\n\nJake's eyes traveled to one side, pondering over his options. It was not like he thought things through. But he was not some chicken.\n\n\"I'll blow you, is that okay?\" he said quickly and looked the man straight in the eyes.\n\nKlaus grinned.\n\n\"I will not say no. But if you back down after starting this, I will not forgive you.\"\n\nJake just nodded solemnly.\n\n***\n\nKlaus was certain he should have found the entire situation amusing and nothing more. His torrid affairs and sex encounters were usually his prerogatives from the planning stage to the end. A lover had once told him that being so clinical about such things was a bit annoying. But not for him. He knew exactly what to expect, down to the oohs and the ahhs, and that had worked just fine until now.\n\nSeduction was a game that could be learned and mastered. Yet, now, he was in the interesting situation of being pinned against the wall by a 21-year old with fire in his eyes, and a body made for sin, who was just demanding to change the rules.\n\nHe let out a small exhale as Jake worked his belt and knelt in front of him. The boy was proud, as he had shown on more than one occasion, yet now he had no qualms about taking that subservient position and wrapping his gorgeous lips around Klaus's hard cock.\n\nJake was someone who did nothing by half. As reluctant as he had been, now that a bridge was passed, he was not looking behind. There was comfort in something like that, Klaus thought and felt a small tremble from the root of his cock to his fingertips, as Jake firmly grabbed his balls with one hand and tried to stuff as much as he could in his mouth.\n\nHe caressed the raven hair. Jake was more enthusiastic than efficient, yet Klaus felt like he would not trade this oral sex session for any of the many others he had enjoyed in the past. The sudden change in rhythm, a coy lick of a tongue that was still uncertain what felt good and what not, the steady hands on the base of his cock, and his balls, they all worked together in a harmony that Klaus could only appreciate as ... thrilling.\n\nUsually, it took him much more sensorial stimulation, and even visual, to come only from being serviced orally. There was no longer the advantage of being a little pent up, like earlier that morning. Yet, when he firmly kept Jake by his nape, to feed him his release, there was nothing forced or pushed or drawn by the sheer power of will.\n\nJake's hands twitched as he was being kept there and made to swallow. Klaus knew the boy appreciated being at the receiving end of assertive dominance, like now. No matter what his mouth could say against it, he liked it. Klaus did not allow him to get up until the last drop was wrung out of him.\n\nJake stood up, wiping his mouth with the back of his hand and a smug look on his face. Klaus should have felt a bit irritated, but he was still panting, leaning against the wall, as he came down from his high.\n\n\"You good?\" Jake smiled, and Klaus grabbed him.\n\nThe kiss was sweet, like everything else about the young man. Klaus had been known all his life as a guy who had never had a problem with skipping dessert. Maybe that was the appeal. He let his hands travel down lean flanks and pulled the boy closer into his embrace.\n\nJake's proud erection rubbed against his spent crotch.\n\n\"You are not good though,\" Klaus's fingers caressed the hard length. \"Do you need a hand?\"\n\n\"If we keep it like this, we'll end up eating tomorrow,\" Jake rejected his offer.",
        "\"Oh, so it is okay for you to be a walking hard-on, but not me?\" Klaus laughed.\n\n\"Well, it's not like people think highly of me anyway. So, no harm done,\" Jake shrugged.\n\n\"Hey,\" Klaus said sharply and tipped the boy's chin to look him in the eyes. \"Stop putting yourself down.\"\n\n\"Why?\" Jake's eyes flickered with what looked like tiny hope mixed with anxiety.\n\n\"That is my job,\" Klaus chose to joke, to clear the air.\n\nAnd it worked. Jake rolled his eyes and began laughing.\n\n\"You're such a pervert, always thinking about that.\"\n\n\"I cannot help it. Especially when you are right in front of me.\"\n\n\"At least your bad jokes killed my hard-on,\" Jake grinned and looked down.\n\n\"You are breaking my heart.\"\n\nTo his surprise, Jake proceeded to stuff Klaus's now flaccid cock inside his pants, with unfamiliar care. When had been the last time someone had shown this type of courtesy towards him? Klaus was about to speak again, but he was interrupted by a short, polite knock on the door.\n\n\"Yes?\" he called.\n\n\"I just want to let you know that a certain Mr. Lopez is downstairs, sir.\"\n\n\"Invite him to join us for dinner,\" Klaus said airily.\n\nHe could go through a meal with Jake's macho brother. His attention turned to the boy. Jake's face was ashen, and he was clutching his hands over his biceps.\n\n\"Fuck,\" Jake whispered.\n\nTBC"
    ],
    "authorname": "laurasfox",
    "tags": [
        "gay romance",
        "gay novel",
        "gay oral",
        "romance",
        "romantic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/collateral-ch-09"
}