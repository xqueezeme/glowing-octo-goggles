{
    "title": "Chemistry Between Nerds and Sluts Ch. 03",
    "pages": [
        "Stef was rudely awakened by her cell going off on her nightstand. She reached for it out of the haze of sleep. She looked at the display on top and tried to focus on the caller ID before answering the call. It was Kendall and it was nine o'clock. \n\n\"You're up early, Kay,\" Stef croaked, clearing her throat as she answered the call.\n\n\"I was curious to hear about your date with your chemistry nerd neighbor. However, I didn't expect you to still be sleeping. Does that mean you were out later than planned?\n\n\"You could say that,\" Stef admitted.\n\n\"Did you do it?\"\n\n\"Yes.\"\n\n\"Bet he loved that,\" Kendall said, with the hint of a smirk in her voice.\n\n\"We both did,\" Stef confessed.\n\n\"You enjoyed sucking Cole's dick?\" Kendall asked, in somewhat disbelief. \n\n\"Yeah...\"\n\n\"You're such a slut. You'd enjoy sucking off your chem. teacher, Mr. Stern,\" Kendall added, with a laugh.\n\n\"Would not! And besides, at least I'm going to get a good grade in chemistry now.\"\n\n\"Heavy price to pay, girl,\" Kendall said.\n\n\"Not really,\" Stef shot back.\n\n\"How so? Cole got a nice...\"\n\n\"It's gorgeous!\"\n\n\"What? Are you saying he has...\"\n\n\"Bigger than Jordan's and thicker too. It's an anaconda.\"\n\n\"It is?\"\n\n\"It's beautiful. A real mouthful.\"\n\n\"My god. Who would'da thunk the geek had a nice dick,\" Kendall said amazed.\n\n\"It was a fun ride too,\" Stef proclaimed.\n\n\"You didn't! You fucked him too?\"\n\n\"Oh, yeah! I couldn't let that big beauty get away without hitching a quick ride,\" Stef confessed.\n\n\"Oh, my god! You're making me hot and jealous. I can't believe it! You took Cole's virginity too?\"\n\n\"Yep! It was great! He reached places inside me I didn't even know I had. We both came together at the end. It was blissful.\"\n\n\"Fuck! I can't believe it. You're making me horny and wishing I had a turn,\" Kendall admitted. \"Are you going to try for another time with him?\"\n\n\"Kay, I think I might. It was more than just a fuck too. It was different than with Chris or Jordan. Cole and I go way back. Being with him was kinda surreal. Different.\"\n\n\"What're you saying? You can't be seriously falling for...\"\n\n\"I don't know what I'm saying. I'm just telling you it was different than just screwing Chris or Jordan. It seemed to have more meaning somehow,\" Stephanie explained.\n\n\"It was just different because it was so big and felt so good,\" Kendall tried to reason.\n\n\"Well, that's true but, no...it was definitely more than that,\" Stef concluded.\n\n\"Geez, that's wild! Here I thought you'd have a good tale about being grossed out but instead you have me wondering about screwing him too,\" Kay admitted.\n\n\"He's mine for now,\" Stef told her friend.\n\n\"Okay...okay, just thinking ahead. How did Michelle make out with the other guy? Don't tell me he was hung like a ...\"\n\n\"I don't know. They were gone by the time we got back to where we left the cars.\"\n\n\"Probably a quick one then,\" Kendall decided aloud.\n\n\"I'd bet Mark came fast the first time too, just like Cole did,\" Stef offered.\n\n\"So you blew Cole first then fucked him?\"\n\n\"Yeah.\"\n\n\"Well, you probably made his day,\" Kendall stated.\n\n\"Yeah...he was going to say something at the end, in front of my house, but he chose not to. He did thank me but I told him no need,\" Stef concluded.\n\n\"Wow, this is getting interesting. What're you going to do now?\" Kendall questioned.\n\n\"Well, I suspect we will be getting together soon to study. I'll see how Michelle feels but I wouldn't be opposed to getting with Cole again,\" Stef proclaimed.\n\n\"Yeah, let me know what happened with Michelle.\n\n\"Okay.\"\n\n\"Want to hit the mall? I have some shopping to do,\" Kendall stated.\n\n\"Sure. When?\"\n\n\"Noon?\"\n\n\"Okay...I'll be ready,\" Stef said.\n\nAbout eleven as she was finishing a late breakfast her cell rang. By the read-out she could tell it was Michelle. She finished the cereal in her mouth and answered the phone.\n\n\"What's up, Michelle,\" Stef said.\n\n\"Hey, Stef. So how did it go with Cole?\" Michelle asked, with a little bounce to her voice.\n\n\"Great actually! How about you and Mark?\" Stef probed.\n\n\"He's actually a very sweet guy,\" Michelle answered.\n\n\"What does that mean?\" Stef probed again. \"You like the taste of him?\"\n\n\"No, silly...well, yeah...but that's not it. I mean he's really quite nice. We had a good time,\" Michelle explained. \"It was different than my normal dates.\"\n\n\"How so?\"\n\n\"Well, usually the guys are so anxious to get their rocks off they are either agitated or pushy for me to do it. Mark was more gentlemanly. It was a refreshing change. Made me feel more appreciated even though it was understood I would blow him,\" Michelle claimed.\n\n\"Did you?\"\n\n\"Of course, but he offered to let me off the hook,\" Michelle mentioned.\n\n\"Cole too,\" Stef agreed.\n\n\"By the time we sat down on one of the benches, I was happy to do it for him,\" Michelle claimed.\n\n\"Me too. How was it?\" Stef asked.\n\n\"Nice. He's about average in the cock department but tasty. It was kinda cute. He was hard as stone the second we sat down. I had trouble getting him out of his pants. He lasted less than one minute once I had my mouth on him,\" Michelle stated.\n\n\"Poor guy, barely got to enjoy it, huh?\" Stef proclaimed.\n\n\"Well, I have to admit something,\" Michelle announced. \"I did him twice!\"\n\n\"You did?\" Stef asked.\n\n\"Yeah. It happened so quickly and he stayed hard while I played with it afterwards. I asked him if he thought he could go again and he just cutely nodded yes,\" Michelle said.\n\n\"I fucked Cole after I blew him,\" Stef offered.\n\n\"No way! You did?\"\n\n\"Yeah, he has a gorgeous cock too.\"\n\n\"He does? I thought about fucking Mark but passed on the idea. So you did it. Wow! How was it?\" Michelle asked.\n\n\"Michelle, when I say he has a gorgeous cock, I mean a big monstrous gorgeous cock,\" Stef elaborated.\n\n\"How big we talking about?\" Michelle queried Stef.\n\n\"Over eight...maybe close to nine when he's fully stimulated. And it's thick too. A real major mouthful,\" Stef claimed, with a giggle in her voice.\n\n\"You got to be kidding me! A science nerd with a real weapon, huh?\" Michelle asked.\n\n\"Oh, my god! It was a phenomenal ride,\" Stef moaned.\n\n\"Damn! I've never had one that big yet,\" Michelle stated.\n\n\"It's a treat,\" Stef claimed, but immediately hushed her voice as her mom entered the room.\n\n\"I bet,\" Michelle agreed, on the other end of the phone.\n\n\"Michelle, I got to get running to meet Kendall to go to the mall. You want to come?\"\n\n\"Sure, when?\"\n\n\"Noon. You can come here if you can make it by then.\"\n\n\"Okay, wait for me. I might be a minute or two late. Bye.\"\n\n\"See ya.\"\n\nWhen Stephanie hung up her mother said, \"What was a treat, dear?\"\n\n\"Oh, nothing.\"\n\n\"Oh, I thought you might be talking about your date with Cole?\" her mom asked. \"How was it?\"\n\n\"It was fun, Mom. He and I still have a lot of fun memories from when we were kids,\" Stef explained.\n\n\"I like Cole. He's a very nice boy and smart too.\"\n\n\"You would like him.\"\n\n\"Well, Chris and Jordan are nice too but I think Cole is a better catch.\"\n\n\"Mom, I'm not trying to catch anyone before I head off to college. Just want to go out on a few dates is all,\" Stef said.\n\n\"Well, I just like Cole,\" her mom concluded.\n\n\"I got to run, Mom. We're going to the mall,\" Stef said, as she placed her now soggy cereal in the sink and washed out the dish. \n\n\"Who's going, Stephanie?\"\n\n\"Michelle, Kendall, and me.\"\n\n\"Who's driving?\"\n\n\"Kay.\"\n\n\"Be home before dinner, okay?\"\n\n\"Sure, Mom,\" Stef said, giving her a peck on the cheek.\n\nStef was ready when Kendall got there but they had to wait ten minutes for Michelle. They were on their way to the mall at quarter after twelve. Kendall had told Stef she wanted to look at casual clothes for after the prom and maybe a new swimsuit. \n\n\"So, Michelle, how was your date with your new chemistry lab partner?\" Kendall asked with a grin. \n\n\"It actually turned out much better than I imagined it would,\" Michelle replied.\n\n\"You too? Stef said she had a better time than she expected.\"\n\n\"Yeah, Mark is okay. Not as nerdy as I feared.\"\n\n\"I'm beginning to worry about you two. Sucking the dicks of two of the brainiacs from school and enjoying it,\" Kendall said, with obvious amusement in her voice.\n\nStef and Michelle laughed too. \"Yeah, and I'd do it again in a minute,\" Stef stated.\n\n\"You fucked Cole. I just blew Mark, but I might consider fucking the poor boy if we go out again,\" Michelle agreed. \"He is kinda cute after all.\"\n\n\"You two are the biggest sluts in school,\" Kendall jokingly stated.\n\n\"Yeah, we are! Fucking the nerds and loving it!\" Stef claimed and they all laughed aloud.\n\nThe shopping at the mall was fun. Kendall did get her casual spring clothes and she and Michelle each picked out bikinis on sale. Stef only bought two new bra and thong sets. She didn't tell the others she hoped to be wearing them for Cole. It made her smile inwardly to think about it.\n\nSunday started out uneventful and it looked like just another boring day around the house until Chris called. He wanted to go for a ride and she knew what that meant. Every time they went for a ride, he ended up between her legs, but she didn't mind. She was actually quite horny for some reason. Thoughts of Cole and their time in the park popped in her head with increasing regularity. In the past her horny thoughts had always involved Jordan's big cock deep inside her or Chris licking her pussy until she had to push him away. Not now though. Her new thoughts focused on Cole.\n\nShe still liked Chris though and decided to wear clothes she knew he would love. She wore one set of her new lingerie, a short skirt, and a tank top. It was a nice spring day so she would not need a jacket. She was ready when he got there and after saying goodbye to her folks, was off.\n\nChris looked over at her as they drove and talked. He had worked on his car all day Saturday and proceeded to tell her all the boring details. She caught him stealing looks at her bare legs often and that made her inwardly smile. He kept looking at her tits too, so Stef glanced down one time when he was turning a corner to see that her nipples were erect. They were poking through the top of her thin lacy bra and the tank top. Chris had his window down and the cool breeze in the car was having an affect on her nipples.\n\nChris' constant glances at her body were making her even hornier and she decided to take matters into her own hands. She shifted in the seat, raising her left leg up, which caused her skirt to ride up. Her thong-covered pussy was just barely hidden away under her tightly stretched skirt. Stef slid her hand onto Chris' upper thigh as she looked at him. When he turned to her reacting to her touch, she smiled. Her twinkling eyes and seductive grin were highlighted further when she licked her lips for him. Chris groaned and squirmed in his seat a little.\n\n\"Fuck, Stef. You're going to make me have an accident,\" Chris claimed.\n\n\"What's the matter, don't you want to play?\" Stephanie asked, knowing full well the answer to that.\n\n\"Oh, god, yes. But we need to park somewhere first,\" Chris pleaded.\n\n\"What do you have in mind?\" Stef asked, sure he had a destination in mind.\n\n\"I thought we would go to the forest preserve. I have a blanket and a small picnic basket in the trunk,\" Chris mentioned.\n\n\"Oh, that sounds delightful,\" Stef replied and her hand squeezed his inner thigh just below his crotch making Chris moan lightly. \n\nStef could see the beginnings of a hardon pushing out the front of his basketball shorts. Chris had come dressed for action too. Just a tee shirt and the loose fitting gym shorts made for easy access and removal. She thought about teasing him further by touching his cock through his shorts or even pulling him out and sucking on it a little for him. She had blown him once before as they drove and he nearly ran off the road when he came in her mouth. She decided to avoid the accident potential and just wait. \n\nIt took another fifteen minutes to get to the park. Her hand had continued to massage his leg and there was no doubt his cock was fully hard inside his shorts. The pained look on Chris' face told Stef what she needed to do for him to start. Chris pulled into the park and tried to find a spot away from everyone else. Many others had the same idea about the park on such a nice day, so finding a somewhat secluded spot meant parking at the back end of the lot. \n\nWhen Chris killed the engine, he looked over at Stef. She knew what he wanted and needed and was all too willing to help him out.\n\n\"Stef, you ready to go?\" Chris asked weakly.\n\n\"Yeah, but I don't think you can walk right now. Am I right?\" she asked, with a sweet grin and amused voice.\n\n\"Well, it might be difficult at that. Looking at you is only going to make matters worse too,\" Chris agreed with a chuckle.\n\n\"Keep an eye out for people,\" Stef said, as she shifted out of her seatbelt into a kneeling position on the seat. \n\nChris shifted in his seat too and helped Stef by lifting his right leg up on the seat. The gym shorts did not even need to be removed. Her hand easily pushed his baggy pant leg up and over his stiff cock. He was not wearing underwear which made it even easier. Stef pulled his cock and balls out to the side of his shorts exposing him to her. His cockhead already had signs of pre-cum at the tip. 'This won't take long,' Stef knew. Good thing too. Her skirt was hiked up in this position, probably exposing her bare, thong-clad ass to anyone that came by.\n\nStephanie looked at Chris' hard cock in her hands. He was not exceptionally endowed like Jordan or Cole, but it was nice and hard and straight. If there was such a thing as a cute cock, Chris' would have fit the bill. It was a pretty pink, without ugly bulging veins. The head was proportionate to the shaft and a slightly deeper pink. He even trimmed his pubes and naturally had hairless balls. \n\nStef looked up at his face before beginning, though her hands teased him tenderly. He still had tension straining his face.\n\n\"Keep a good eye out now. My ass is probably giving everyone looking a good beaver shot,\" Stef said, with a laugh. \n\n\"Okay,' Chris croaked with desire. \n\nShe smiled at him one more time before descending to lick his cockhead. The taste of pre-cum immediately came to her. She loved sucking cock and the bland salty taste of him teased her taste buds. Her tongue teased all around the mushroom shaped head drawing moans from Chris. Her hands continued to tease and massage his shaft and balls. \n\nWhen Stef finally took Chris' cockhead into her warm wet mouth, he groaned like a tortured man. He squirmed on the seat. His balls were already hard nuts beneath his cock shaft. Even though it had only been a couple days since they were last together, at his young age, he recharged quickly, and needed release often. \n\nStef wanted out of this kneeling position with her butt exposed to the world, so she decided to waste little time getting Chris off. She immediately started bobbing up and down on his cock. She applied a healthy bit of suction on the draw backs and pushed deep on the down-strokes. The effect on Chris was mind-numbing. She could feel him stiffen further in her hands and mouth. She knew that he would cum soon.\n\n\"Oh, fuck. Oh, god, Stef,\" Chris growled.\n\nStef knew it was coming exactly when it did. Chris' cock was easy to predict. He exploded with force in her mouth. The first two pulses were strong and painted the back of her mouth. The third coated her tongue with his white, thick seeded cum. The next, milder pulses, oozed even more cum onto her tongue as it teased the underside of his cockhead looking to milk him and prolong his pleasure. She swallowed and continued to suck tenderly on his now sensitive head. The sweet taste of his cum delighted her mouth. She had convinced both Chris and Jordan to drink ample amounts of pineapple juice to sweeten their cum.\n\nWhen Chris started to moan from her voracious mouth on his cock, Stef withdrew. She looked up at him with an amused smile as she licked her lips. He opened his eyes and looked at her with a more drained expression now. \n\n\"God, you are wonderful,\" Chris barked.\n\n\"Thanks. You taste good. I love sucking on you too,\" Stef stated.\n\n\"Is that pineapple juice making a difference?\"\n\n\"Yeah, it definitely is,\" Stef proclaimed, as she sat back down.\n\nChris stuffed his softening cock back in his basketball shorts. They got out of the car and retrieved the blanket and picnic basket from the trunk. They walked down the closest path looking for a good spot to stop. It would be difficult to find the perfect place. They talked about wanting to find a spot with sun but still secluded to allow them privacy. Not an easy task in a public park that was busy on this nice day. \n\nChris noticed a path off the main one. It was somewhat overgrown with vegetation and obviously little used. They both had sandals on and were not interested in treading through deep leaves and anything wet. They managed to walk along a ridge that afforded good footing. The forest was dense and they had to negotiate their way around or over several dead downed trees. \n\nAfter walking about a quarter of a mile through difficult woods, Stef started to think they were going too far when they spotted a more brightly lit area ahead. When they got there, it turned out to be a stream running through the forest. The trail they had taken was probably used only by a few fishermen that knew this spot. \n\n\"Wow, this would be a great trout fishing area,\" Chris remarked.\n\n\"It is pretty,\" Stef agreed, as she looked up and down the rocky stream with Chris. \n\n\"Look over there,\" Chris said, pointing to a mini-waterfall up the stream about fifty yards. \n\n\"Awesome,\" Stef agreed.\n\n\"Hey, Stef. See those big boulders near the waterfall. That would be a good place to throw the blanket,\" Chris explained.\n\n\"Yeah.\"\n\nThey negotiated along the bank. They had to climb over a downed tree. When they reached the boulders, they climbed up onto the top one. It was about six feet across in almost a circle. It was right above the small waterfall and gave a commanding view up and down the steam. The sun beat down on the rock and even in the cool forest was warm to the touch. Chris spread the blanket while Stef held the picnic basket. When the blanket was down, they knelt and unloaded the basket. Chris had brought chips, sodas, and some cold fried chicken. He had napkins, plates, and plastic forks. \n\nIt was about one and they were both a little hungry, so they dug right in. The chicken was from KFC and, though cold, was still good. Stef picked at a breast while Chris ate two legs. They had opened the chips too and each drank a soda. They talked about school, friends, and how beautiful it was along the stream in the forest. Stef had to admit to herself, as she looked at Chris, he was definitely cute. Momentarily her thoughts left Cole and focused entirely on Chris. \n\nThere were many things she loved about Chris. He was caring and of course, he sucked pussy like he was born to it. Jordan was a great fuck and handsome in an athletic and rugged way, but Chris was plain cute and sweet. She realized she care more for him than Jordan. Jordan had been a good time but she could give him up if she had to. She wasn't sure where her feelings with Cole were headed. 'Time will tell me that,' she thought. Her feelings for Chris were more important to her.\n\n\"This is beautiful here, isn't it?\" Chris was saying.\n\nStephanie came back to reality just in time, \"Yes, it is gorgeous.\"\n\n\"I bet right below here there are trout,\" Chris said, hanging over the edge of the rock looking down into the water below. \n\n\"How do you know?\" Stef questioned, looking too. \n\n\"They like to pool below running water like this,\" Chris explained.\n\nStephanie looked down hoping to see one as the water was crystal clear. Unfortunately the churning water at the bottom of the small falls lessened the visibility. ",
        "\"Wish I'd brought a pole,\" Chris remarked.\n\n\"You'd rather go fishing than do something else?\" Stef queried, with amusement.\n\n\"No! Of course not! But it would be fun after,\" Chris stated, but chuckled along with her. \n\nStef laid down on the blanket covered rock. She had already put the food away and the basket off to the side. She reached over and grabbed the waistband of Chris' shorts as he continued to study the water for fish. She pulled down and the top of his butt showed bare.\n\n\"Hey,\" Chris' remarked, turning to lay beside her. \n\n\"What's the matter?\" Stef asked, as she pulled on the bottom of his shirt.\n\n\"Nothing, I guess. Just not used to having my ass showing,\" Chris stated with a laugh.\n\n\"A cute ass it is too,\" Stephanie prodded, and helped him remove his shirt.\n\nChris was practically hairless on his chest. He was in decent shape from sports, not as chiseled as Jordan but still slim and tight. She ran her fingers across his chest and to one nipple. Stef noticed Chris looking around. \n\n\"No one is around here but us,\" Stef said. \"Don't worry.\"\n\n\"We might have to watch for fishermen,\" Chris replied. \"Or worse yet, bear.\"\n\n\"What!\" Stef shouted, bolting upright. \n\n\"Yeah, only black bear but they might smell our food.\"\n\n\"Chris, we better go then!\" Stephanie exclaimed, with obvious nervousness.\n\n\"Don't worry. We're pretty safe up here. We just shouldn't stay here too long is all.\"\n\n\"You don't think we should leave, do you,\" Stef said, still worried.\n\n\"No. Everything will be fine,\" Chris responded, laughing at her as he pulled on her shirt.\n\n\"You're not just saying that?\" Stephanie pleaded, as her shirt came off.\n\n\"No. It's okay for now. Wow! That is beautiful,\" Chris said, staring at her skimpy, lacy black bra.\n\n\"Thanks, it's new,\" Stef said, relaxing a bit at his compliment. \n\nThe material was thin and her reddish pink nipples were clearly visible through the sheer fabric of the bra. Chris' hand reached out and traced a line under the bottom of her left breast. As she teased his nipple, he teased hers too. Both of their nipples were stiff but hers were far larger and more pronounced. Chris had always complimented her on her tits even though they were not the biggest. \n\nShortly they started kissing. The kisses grew hotter as their already simmering passions heated up. It wasn't long before Stef's new bra was on the blanket along with Chris' shorts. His cock was sticking up hard as a pole again. Stef's fingers curled around it as they kissed. His fingers and thumb were deliciously teasing her taut sensitive nipples and drawing moans of delight from Stef. They groaned into each other's kiss as their hands increased their passion. \n\nChris broke the kiss, \"God, I want to eat you,\" he said. \"Lay back.\"\n\nStef wanted him as well. Her pussy was aching and wet from the arousal of sucking his cock nearly an hour ago it seemed now. Chris removed both her skirt and thong in one swift action. He barely noticed and commented on the lacy black thong. Stef was just as glad he didn't stare at it long. She was sure the crotch of it was probably soaked with her juices.\n\nChris wasted no time, which suited Stef fine. She still worried about the bear threat but it was also her desire now driving most of her thoughts. She willingly parted her legs for Chris as he settled between them on the blanket. It was hard even with the blanket on the rock. Fucking might be a bit painful. Chris leaned on his side and brought his face to within inches of her sex. The aroma of her feminine arousal was definitely evident. Chris stared at her already moist inner petals as he spread her pussy lips.\n\n\"Oh, god, Chris. Do it! Please do it for me,\" Stef growled with her need.\n\nChris smiled at her. \"What do you want me to do?\" he teased.\n\n\"You know,\" Stephanie pleaded back.\n\n\"I want to hear you tell me,\" Chris said, with a big shit eating grin.\n\n\"Oh, fuck! You nasty boy. Don't make me tell you,\" Stef implored.\n\n\"Tell me or I won't do it for you,\" Chris chuckled.\n\n\"Oh, shit. God, suck me! Suck my pussy please, Chris,\" Stef begged.\n\n\"You want me to eat you until you cum like I did?\" Chris asked, with a smile.\n\n\"Oh, god, yes! Lick my clit! Make me cum all over your face,\" Stef groaned, feeling like a delicious slut as he made her talk dirty.\n\nChris didn't answer but instead drove his tongue into her splayed cunt. He bored deeply into her right away, tasting her secretions, and teasing her tender flesh with his tongue.\n\n\"Oh, mother of god,\" Stef growled. \n\nThe voraciousness of his attack coupled with her heightened state of arousal had her ready to cum almost immediately. Chris was a good pussy licker though and played her like a fiddle for several minutes bringing her up and down her climatic high. He pleasured her cunt hole for a while until he felt her ready to burst. Just before she did, he pulled back and kissed and sucked on her cunt lips while she groaned her disappointment at not cumming. When she was less aroused, he once again attacked her hole. His fingers worked too, to tease her sensitive flesh and even tweak her bullet hard nipples.\n\nStephanie was going out of her mind. He definitely had a talent with his mouth that she loved. Chris brought her to the brink twice and then backed down. As Stef began to protest and beg him to let her cum, he sucked her clit into his mouth. The distended bud was highly aroused and the sudden exquisite sucking pressure drove Stef right up her orgasmic ladder. \n\n\"Ahh,\" she screamed. \"Geezzzzzz..., oh fuck!\"\n\nWhen Chris' tongue started working her little knob, Stef began to shudder with her approaching climax. His fingers were not idle as they invaded her cunt, seeking her g-spot. When his two fingers grazed over it, Stef arched her back off the blanket and exploded. Rockets burst in her mind like white hot fireworks. She couldn't breathe as the air became trapped in her lungs, yet her mouth was wide open. She trembled as shockwaves of pleasure tore through her. It seemed to last forever but also ended way to soon. Her ass slumped back down to the rock as her orgasm waned.\n\n\"Oh, fuck,\" Stef groaned, as her lungs could finally suck in more air. \n\nChris was over top of her in a second. He kissed her passionately before she barely was able to breathe again. This had happen once before and she knew what was coming. His cock invaded her pussy like a hot spear in one deep plunge. Chris had gotten so turned on sucking her cunt, he need relief bad. He felt huge as his cock pushed to her depths. It felt like he was bigger than normal with his arousal from eating her juicy cunt.\n\nChris wasted little time. As soon as he bottomed out he started fucking Stef. His knees hurt on the hard rock but he knew he could suffer the short time it would take for him to get his rocks off inside her. He pounded Stef, mashing her ass into the hard surface below. She didn't mind though. She was nearly as turned on as he and wanted to cum with him. She teased her own nipples as he sawed his cock into her. \n\nThe ultimate moment of pleasure came to them with blinding speed. Stef felt Chris' cock stiffen more inside her seconds before his cum scalded her insides. She went over the edge too with sweet pleasure as he unloaded his seed deep in her core. She could feel the throbbing of his cock as it spewed ropes of hot cum. When he finally stopped cumming, they held each other and gasped for air. \n\nChris' knees were sore from the rock and he pulled out with a near audible pop and rolled to the side. Immediately a small river of cum began to ooze from Stef's open cunt down the crack of her ass to the blanket. When she had her breath back she asked him for a napkin. He fished several from the picnic basket.\n\nStef sat up and wiped herself from ass to cunt. She tried to soak up the spot pooled on the blanket hoping it wouldn't stain. Chris had flopped back down on his back but used a napkin to wipe his softening cock. They lay back and rested when they were done.\n\n\"That was marvelous,\" Stef said and leaned over to kiss Chris' shoulder.\n\n\"You bring out the best in me,\" Chris responded.\n\n\"I sure do,\" Stef agreed, with a chuckle as she sat up and fondled his flaccid cock. \"I think this guy likes me.\"\n\n\"Oh, for sure,\" Chris' replied.\n\n\"Is he content for now?\" Stef asked mischievously, wiggling his soft cock.\n\n\"I think so,\" Chris admitted.\n\n\"I can't make him happy again?\" Stef asked, with a devilish grin.\n\n\"Well, you might,\" Chris admitted. \"If anyone can, it's you.\"\n\nStephanie had cum twice already but her pussy was still itching for more. She had just taken the edge off her desire but she really wanted a good long slow fuck now. Her fingers teased the head of Chris' cock and after a while it started to respond. Stef knew just where to tickle his cock to bring it back to life. Her left hand massaged the area just under his balls as well causing Chris to moan. It took a few minutes total but she soon had him completely hard again. \n\n\"Oh, fuck,\" Chris gasped, as he felt Stef's mouth engulf his cockhead. \n\nStef sucked on just the head for a few seconds. She then took him to the back of her mouth and pushed down harder. The silky head caressed the back of her throat before popping in and down her throat. She held her breath as she pushed until her nose tickled in his pubic hair. Chris's hands lightly held her head to him as he groaned. It was the most exquisite feeling in the world to have his cock consumed by her tight clenching throat. He could feel the muscles of her throat gripping him like a velvet glove. \n\n\"Shit, Stef,\" he wheezed, between moans.\n\nStef came up for air and when she backed off his cock a string of saliva hung from her lower lip to the head of his cock. She sucked it back in by following it back to engulf his cockhead again. She sucked the head briefly again and then took him deep once more. This time her tongue pushed out and licked his balls, even as his cock was buried in her throat. She held there as long as she could before pulling back. Chris was groaning so much Stef stopped so as not to push him too close to cumming.\n\nPushing Chris lightly backwards, she climbed into his lap, hovering over his cock. Stef reached down and guided Chris' stiff cock into her swollen pussy lips. She found the entrance to her cunt and settled down. Her saliva on Chris' dick, coupled with her own wetness, allowed him to ease smoothly up inside her. In moments she was settling down with his stiff cock buried deep inside her. Soon she was rocking back and forth enjoying the delicious sensations as his cock penetrated her and his pelvis stimulated her clit.\n\nStef rode Chris for a long time. She brought him close to cumming several times but always stopped short. She managed three small mini-orgasms herself before she started riding him in earnest. Chris played with her distended nipples and pulled on them, making her groan more. Stef could tell Chris was about to cum and tried to get off fully with him at the same time. She felt Chris expand inside her just before he fired load after load of cum deep in her cunt. The hot cum pushed her over the edge too.\n\n\"Oh, fuck,\" Stef yelled.\n\n\"Shit,\" Chris growled, as his dick fired bullets of cum. \n\n\"Ahh...I'm cumming,\" Stef moaned. \n\nThey rode out their combined orgasm together. Both could feel the increased wetness inside her cunt. Chris pumped slowly into her until their climaxes waned.\n\n\"That was the best,\" Chris gasped, after he finished unloading his cum into Stef.\n\n\"My god, that was so good,\" Stephanie groaned, when she too stopped cumming. \n\nCum had already begun leaking from her cunt down his shaft to soak his balls. His cock was spent and deflated quickly. Stef could feel their combined cum oozing from her and rolled off Chris. He reached again for napkins from the basket. After wiping themselves, they lay back still panting and sweating from the long fuck. It was then Stef remembered about the bear that Chris had mentioned. She rolled to her side facing him.\n\n\"Maybe we should go now,\" Stef said.\n\n\"What's your hurry? I'm still recovering from that fuck,\" Chris stated, with a chuckle.\n\n\"I just worry about the food attracting a bear like you said,\" Stephanie confessed.\n\n\"It's probably okay but maybe we should start back,\" Chris agreed.\n\nStef stood first and Chris just watched her put her thong and mini skirt back on. When she reached for her bra, she noticed he had not moved and was just watching her. \n\n\"Come on. What're you waiting for?\" Stef asked, with a touch of concern.\n\n\"I just love watching you move when you're nude,\" Chris explained.\n\n\"Well, thanks. But let's get going.\"\n\n\"Okay, but shake your tits for me first,\" Chris asked.\n\n\"What?\"\n\n\"Just wiggle a little.\"\n\n\"Okay,\" Stef said, now smiling at him as she shook her body back and forth.\n\nShe was beautiful and watching her moved drove Chris mad. If he hadn't fucked her twice recently he might have gotten hard again. Chris watched as her firm B-cup breasts jiggled and shook as she moved. He stared at her tits as they quaked. Watching the beautiful nipples shimmy on her chest. Stef gave him a pretty good show to please him.\n\n\"Okay, you. Now let's get going,\" she finally said.\n\nReluctantly Chris took his eyes off her breasts and grabbed his boxers and shorts. He stood and put those on as she secured her bra. They both had their tee shirts on about the same time. Moments later, their sandals were on, and he grabbed the basket. Chris helped Stephanie down off the rock and they made their way back along the stream. Once they found the same path they had used before, they started back into the forest. It took a while again but finally they emerged back out onto the main path. Stef breathed a sigh of relief once they reached the relative safety of the more populated path.\n\nBack in the car, they headed back to Stephanie's. It was getting close to dinner time and they both had to get back home. Chris dropped Stef off but not before they kissed in front of her house in his car.\n\n\"Thanks for such a wonderful time,\" Stef praised.\n\n\"It was great, wasn't it?\" Chris agreed.\n\n\"Yes, it was good fun.\"\n\n\"Thanks. See you at school, babe,\" Chris said.\n\n\"You bet, stud,\" Stef said and reached over to cup his groin before opening the door. \n\nStef smiled at Chris as she exited his car. She waved as he drove off. Once inside, she decided to shower before dinner. She ate dinner with her folks and studied some Spanish afterwards. She grew tired quickly and went to bed early.\n\nMonday at school in advanced chemistry she saw Cole. This time she not only said hi but gave him a wink. Mr. Stern announced they would be choosing lab partners today at the end of class. He passed out a log book for them to fill in the name of their lab partners. It was returned to him just as the bell for the next period sounded. He looked in the log book as the students began to shuffle out. Stef talked to Michelle and watched for his reaction. She saw him look at Cole and Mark with surprise and then over to Michelle and her with what looked like distain. It made her mad to think that Mr. Stern didn't think she was good enough to be Cole's lab partner. She would show him.\n\nThe first lab was the following day. Mr. Stern walked them through a simple experiment and then they were to duplicate it with their lab partners as he observed. It was a simple experiment and everyone got it right. They were given assignments for a slightly more difficult lab the next day and more study points too. After the class, Mark, Cole, Michelle, and Stef agreed to meet at Stef's house for their first study session. \n\nEveryone arrived after dinner. Stef took them into the basement rec room. There they wouldn't be disturbed and there was a big enough table for them all to sit at. The session started a little awkwardly as no one wanted to mention the events that led them to this. Stef helped get the studying going but Cole soon took the lead. Mark and he explained some of the theory behind the new experiment to the girls. They also helped teach Michelle and Stef about the study topics. The whole session lasted about two hours. They all admitted afterward it had gone fine. The session broke up without any mention of their previous activities.\n\nThe group had two more study sessions that week and with each one the tension lessened. They started joking around even. The girls admitted privately that the guys were fun to be with. The guys couldn't think of anything else besides how lucky they were to be studying with these two beauties. They were even surprised how well the sessions went. Both Stef and Michelle had to be taught many of the things they had missed in the beginning of the class but both guys were good patient teachers. The girls worked hard and picked up things quickly.\n\nStef dated both Jordan and Chris that weekend and fucked both. Michelle went to a party on Saturday and left with one of the football players. Kendall along with her boyfriend, Kyle, had gone out with Stef and Jordan this time on Saturday. Jordan's parents had a pool with a cabana out back. The two rooms of the cabana served as their fuck hut for Kendall, Kyle, Stef, and Jordan. \n\nThe second week of labs when smoothly for them, as did the study sessions at night. Most of the study times were at Stef's but on Wednesday they went to Cole's house. After the session, Mark and Michelle left before Stef. She was getting ready to leave and Cole asked if she need him to walk her home. At first she said no but then realized he wanted more time with her alone, so she agreed. On the short walk to her house he was quieter than usual.\n\n\"You okay?\" Stef asked.\n\n\"Yeah, fine,\" Cole answered, as they approached her door.\n\nShe could sense he wanted something more and she had a good idea what that might be. Even though he was too much a gentleman to say, it was not hard to figure out. What eighteen year old guy, that had a taste, wouldn't want more. However, Stef reasoned it might make her seem a total slut if she just walked off in the bushes with him and fucked him or sucked his cock. Instead she kissed him on the cheek and said goodnight.\n\nStef watched a little TV and then got ready for bed. As she brushed her teeth, she thought about the walk home with Cole. He had wanted to say something again but had held back. Stef realized he must be shy or too nervous to ask her what he wanted to. Most of the other guys she knew were more aggressive. They were not afraid to go after what they wanted. Cole was different. Mark most likely was too. \n\nThe rest of the week went smoothly. So far the two groups had gotten all A's on their labs. Michelle and Stephanie were really getting the concepts thanks to the teachings of Mark and Cole. \n\nAfter Thursday night's study group, Stef was once again getting ready for bed and thinking about Cole. She realized he wanted to be with her again. Stef knew boys well enough to know he had to want more. Kendall had warned her one blowjob would lead to more. If Cole wouldn't take the lead and ask her out, what was she to do? If she wanted to be with him again, she would have to be the aggressor.\n\nThe next day Stef ran into Michelle like normal outside their third period classes. Stef had come up with an idea she wanted to run by Michelle.\n\n\"Hey, Michelle, I've got something to talk to you about.\"\n\n\"What?\"\n\n\"I'm getting the sense Cole wants to ask me out again but is too shy.\"\n\n\"I've the same feeling about Mark,\" Michelle stated, with a chuckle.\n\n\"I'd like to go out with Cole but how do you feel about a date with Mark?\"\n\n\"Sure. I'm up for it too. We had fun the last time,\" Michelle agreed.\n\n\"I've got a plan then on how we can get them out without actually coming out and asking them ourselves.\"\n\n\"How's that?\"\n\nStef explained the plan to Michelle and finished just as the bell sounded for the next hour. ",
        "\"When were you planning to do this?\" Michelle asked.\n\n\"I thought we'd try it in advanced chemistry later and try to get them out for ice cream again or a movie tonight,\" Stef said.\n\n\"Tonight...that's quick!\"\n\n\"Do you have plans?\"\n\n\"I was going to go prom dress shopping at the mall,\" Michelle explained.\n\n\"Have you been asked?\"\n\n\"Not yet but I know Wally or James will. I don't want to wait until all the good dresses are gone. The prom's in four weeks, you know.\"\n\n\"Yeah, Kendall and I were planning on going dress shopping on Saturday,\" Stef explained.\n\n\"Have you been invited yet?\" Michelle asked.\n\n\"Jordan and Chris are vying for me to say yes,\" Stef said. \"How about you come shopping with Kendall and me on Saturday so we can go out with the guys tonight?\"\n\n\"Okay, that sounds good,\" Michelle agreed. They parted and hurried into class as their respective teachers were about to close the doors across the hall from each other.\n\nIn advanced chemistry later, they had another lab to work on. Stef and Cole understood the material and the experiment when smoothly. Stephanie looked over at Mark and Michelle and it looked like they were having equal success. Mr. Stern was helping a couple of groups that were apparently less successful. \n\n\"Cole, you think we're going to get another A?\" Stef asked.\n\n\"Well, we achieved the desired state and the experiment proved the hypothesis that was the assignment. Yes, I think we should get another A,\" Cole proclaimed, with a smile.\n\n\"It looks like Michelle and Mark had success too,\" Stef said, looking across the room.\n\n\"Yes, it does look that way,\" Cole agreed. \n\n\"That means we both have all A's in the labs so far.\"\n\n\"Yeah, we're doing well,\" Cole agreed.\n\n\"I guess our little arrangement is working out okay, huh?\" Stef asked.\n\n\"Yeah, I guess so,\" Cole replied.\n\n\"We should celebrate our success,\" Stef claimed. \"How about we team up with Mark and Michelle and go somewhere to celebrate?\" \n\n\"That sounds good to me,\" Cole responded.\n\n\"Let's ask them?\" Stef suggested and started walking towards them even before Cole answered okay.\n\nMichelle spotted them coming and touched Mark on the arm as he was helping clean up. Stef and Cole had already finished cleaning up.\n\n\"Hey, guys. How'd you do?\" Stef asked.\n\n\"We did well,\" Michelle stated. \"Mark said everything worked out.\"\n\n\"Our experiment worked fine,\" Mark agreed.\n\n\"That means more A's all around. I think we ought to plan a celebration and Cole is up for it too. How about you guys? We could go get some ice cream again or to a movie or something,\" Stef offered.\n\n\"That sounds great,\" Michelle pronounced, in on the plan.\n\n\"Sure...I'm up for that,\" Mark claimed. \"How about we go out to dinner?\"\n\nMark's parents had money and unlike many eighteen years olds he didn't have to worry about expenses too much. He even had a credit card of his own. Cole agreed that dinner was a good idea.\n\n\"When should we go?\" Mark asked.\n\n\"Michelle and I were going to go shopping tonight but we can go tomorrow instead,\" Stef offered.\n\n\"Okay, let's go tonight then,\" Mark stated and Cole agreed.\n\nCole's car was big enough for four so they agreed to all meet at Stephanie's house at seven and head out from there. Mark offered to make them a reservation for dinner. They returned to their lab stations for the wrap up of the experiment from Mr. Stern. Stef caught Michelle's eye and they nodded and winked at each other over their success.\n\nThe restaurant Mark chose had good Italian food. They all had salads and an entr\u00e9e but passed on dessert. Cole had led a toast to their success using their water glasses. When the bill came the girls offered to chip in but the guys declined and split the bill. It was only nine o'clock as they left the restaurant in good spirits. \n\n\"How about we do something else?\" Stef offered, as they walked to the car.\n\n\"Like what?\" Mark responded.\n\n\"I don't know. You guys pick,\" Stef stated, but glanced at Michelle for approval.\n\n\"We might be able to still make a movie,\" Cole offered.\n\n\"I could use a walk after that great meal or I might fall asleep,\" Michelle stated.\n\n\"Yeah...that's a good idea,\" Stef agreed.\n\n\"It's a full moon,\" Cole announced. \"We could go for a walk by the river.\"\n\n\"That sounds good,\" Stef exclaimed, and Michelle did too.\n\nCole agreed and they piled back into the car for the short ride to the park by the river. They parked and started walking along the riverbank walking trail. The moonlight coupled with the spaced pole lamps made it easily bright enough to see. As they walked they broke into pairs with Stef and Cole in the lead and Michelle and Mark further back. After they had walked a mile they reached the end of the trail along the river. The path from here veered off and went deeper into the woods. The pole lamps ended too and they opted to head back. \n\nOn the walk back Stef spotted the large kids' playground built away from the trail by the river in an open field. It was one of the attractions of the park and was quite large. It had swings, slides, and was constructed like a fort. It had many wooden enclosures and elevated pathways linking the various parts. It was not lit up though, so little used at night, especially at this late hour. \n\nStef yelled, \"Come on,\" to Cole and the others and headed off the main path at a run to the playground which looked devoid of other people. \n\nCole quickly followed as did Mark and Michelle. There were two banks of four swings each and Stephanie headed right for them. She grabbed one of the swings in the first grouping and jumped on. She started swinging as the others joined in. Soon everyone was swinging back and forth and seeing how high they could go. \n\nAfter they got tired of the swings the group moved off to try the sliding boards. There were several of different heights and they naturally picked the biggest. A few slides each and Stef once again led the party off to explore the large wooden structure that was the main focus of the playground. It was built like an obstacle course with many climbing walls, rope swings, and pathways connecting the various fort-like enclosures. You could negotiate the whole playground structure about six feet off the ground and eventually make your way from one end to the other. You passed through several small enclosed wooden fort-like buildings along the way, mostly at the corners of the playground. \n\nThe group ran around the fort laughing and chasing each other. They played a game of tag and another of hide and seek. After a half hour of running around, Cole and Stef ended up in one of the end forts. Other than the door, it only had small windows on each side of varying heights off the floor. The windows and door did little to allow the moonlight in, so the inside was mostly dark. Both Stef and Cole were breathing hard from the running around and climbing. \n\n\"Wow, that was fun,\" Stef gasped, with a laugh. \"I haven't played on one of these in years.\"\n\n\"Me neither,\" Cole stated, with equal gasps for air. \n\n\"Maybe the last time was with you too,\" Stef said jokingly.\n\n\"It might have been,\" Cole agreed.\n\n\"Whew...I'm hot from running around,\" Stef gasped, wiping her forehead and pulling her long brunette hair back into a ponytail.\n\n\"Yeah...I'm feeling a little sweaty too,\" Cole replied.\n\n\"We should slow down and cool off,\" Stef said.\n\n\"Good idea.\"\n\n\"It's dark in here,\" Stef added.\n\n\"I don't see Michelle and Mark,\" Cole said, looking out one of the higher windows.\n\n\"Maybe they stopped in one of the forts like us.\"\n\n\"Could be,\" Cole agreed, turning back to face Stef.\n\n\"This was a nice celebration, huh?\" Stef offered.\n\n\"It sure was. Good idea, Stef.\"\n\nStef stepped forward which put them face to face. She looked into Cole's eyes in the dim light. Their breathing was finally more normal.\n\n\"Cole?\"\n\n\"Yeah?\"\n\n\"This would be a better celebration if you kissed me right now,\" Stef said.\n\nCole's smile turned to a nervous look but he leaned in and kissed Stephanie. She kissed him back and put her arms around his shoulders and neck. They parted momentarily but then resumed kissing. This time they didn't stop until both were panting again. Cole's hands held her slim waist as they looked at each other.\n\nStef looked like she was going to say something but instead her hands dropped off his shoulders. She continued to look into his eyes as her hands came up to the front of his belt. They just looked at each other as Stef eased his belt open and popped the button on his pants. Next she took his zipper down and pushed his pants off his hips. They dropped in a heap at his feet. Even in the dim light Stef could make out the increasing bulge in his boxers. It began to tent the front of them.\n\nHer hands grabbed the waistband of his boxers and eased them down too. Next she leaned in and kissed him again. He kissed her back passionately and she could feel the stiffening of his cock against her upper abdomen. As they kissed, her hands moved between them and took hold of his dick. The expanding big cock was making it impossible for them to stand close together anymore. Stef's hands teased the head and shaft bringing it to full erection.\n\nStef was still staring into his hungry eyes as she dropped to her knees before him. Her hands never left his cock as she held it before her face. She looked adoringly at the monster dick she had in her hands and then briefly back up at his need-strained face. It was somewhat ironic Stef thought to herself. They had played together in playgrounds just like this before as kids, and here they were as adults in a playground. Only this time the games were a little different with her in this position. \n\nStef kissed the head of Cole's cock and flicked it repeatedly with her tongue. Cole moaned as her wonderful tongue drove him crazy. She licked down the side of his shaft, sucking on the stiff rod as she went. She pushed his cock up onto his stomach and licked his balls, drawing more moans from Cole. When she sucked one into her mouth, Cole's knees almost gave out from the exquisite pleasure.\n\nAs Stef and Cole were occupied in the one fort, Mark and Michelle were equally involved in another. When Michelle saw Stef and Cole disappear into the last fort, she grabbed Mark's hand and pulled him into the one on the opposite end. She boldly backed him to the wall and kissed him. One kiss had become many, and Mark's hands found it hard to resist squeezing Michelle's great tits as they kissed. At one point she had broken the kiss and helped him by removing her shirt. She loved having her nipples played with and Mark's hands felt wonderful as they resumed kissing.\n\nIn this fort the action progressed a little differently though. Mark had kissed Michelle into one of the corners. He had her bra open and was sucking on her supple breasts like a baby trying to get milk. He moved between distended nipples, sucking the beautiful pink buds until they glistened with wetness in the moonlight through the window. Mark kept this action up until Michelle was moaning and ready for more. It was he that dropped to the floor before Michelle. It was Mark that had Michelle's skirt and thong down around her ankles. It was his face buried in her shaved cunt, teasing it with his tongue. He made her groan as his eager tongue feasted on her flesh and sought out her most sensitive places.\n\n\"Oh, geez, Mark,\" Michelle pleaded. \"That feels so good.\"\n\nHaving never eaten a woman before, Mark was experimenting and hoping what he was doing was right. He had watched a few of his father's old porn movies and caught some on the net too. However, watching was much different than actually doing and he hoped he was giving her pleasure. He had always found it incredibly sexy, the idea of sucking on a woman, and here he was actually doing it. \n\n\"Oh, god,\" Michelle groaned, as Mark unknowingly swiped his tongue across her clit. \n\n\"Right there,\" Michelle pleaded, but Mark had already moved lower.\n\nHe worked his way back up though, until he heard her suck in air and moan. Taking that as a good sign, he attacked the little knob he found with his tongue. Michelle's hands grabbed the back of his head and forced it hard to her bursting clit. She could feel her climax rising and if he kept this up for long, he would have her. \n\nMark was just licking all around her clit. He seemed content to just tease her little knob. It was extremely stimulating but not enough to push Michelle over the edge. She hoped he would do more but he wasn't making any move beyond just torturing her clit with his tongue. Michelle desperately needed more.\n\n\"Please, Mark! Suck it! Suck on my clit!\" Michelle begged.\n\nImmediately Mark sucked on the small nub and surprised himself as the little knob drew into his mouth. He sucked and then even teased the end of the trapped bud with his tongue. Michelle must have liked what he was doing because she howled and pushed his face harder to her cunt.\n\n\"Oh, fuck,\" Michelle growled. \"Ahh...oh shit...that's it!\"\n\nMichelle's orgasm was racing towards its end. All this time Mark's fingers had just been holding her open to his tongue. A little remembering from the movies spurred his thinking and he pushed a finger into her moist hole. He clumsily probed around for a second until, as if like a magnet, her cunt hole drew him in. When he pushed his finger into her tight pussy, Michelle arched her back against the wall and held her breath. When his finger reached the second knuckle inside her, it was too much on top of his sucking and teasing of her clit. Her mind exploded like an atomic bomb. \n\n\"Ahh...,\" Michelle groaned, as shockwaves of pleasure coursed through her body. \n\nMark knew enough to keep up the assault even though Michelle was crushing his head now against her cunt like she wanted to push him inside. His breath was near exhausted when he finally felt her hands ease up on his head. If not for the wall behind her and her knees held firm by Mark's chest, Michelle would have surely collapsed down the wall. Her legs felt like putty as the last of her orgasm ran its course. Mark's arms held her legs and he continued to feast on her cunt. Eventually Michelle pushed him back as her breath returned and her clit became over sensitized.\n\n\"Oh, god,\" she gasped. \n\n\"Did you like that?\" Mark asked, looking for assurance after his first attempt at pleasuring a woman orally. \n\n\"Oh, god, yes,\" Michelle gasped. \"You were wonderful, thanks.\"\n\n\"No problem,\" Mark claimed, as he too fought for breath. \n\nIn the far fort, Stef had sucked Cole until he nearly came twice. He was leaking pre-cum like a hose not quite turned off all the way. She had teased him for a few more moments but then had stood up for more kissing. They kissed as they both worked to get her undressed. It was actually quite amazing they could maintain a near perfect lip-lock the whole time they stripped Stephanie naked. They were both so horny that only moments after her clothes were thrown off, his big cock was nestled into her pussy and seeking her hole. Stephanie gasped when he found her center and pushed in. Her cunt lips stretched to accommodate the large intruder. \n\n\"Oh, shit! You're so damn big,\" Stef moaned.\n\n\"Am I hurting you?\" Cole asked.\n\n\"No. You just take some getting used to is all. I love your big cock though. Don't worry, I can handle it,\" Stef informed him.\n\nA few more inches pushed into her, stretching her cunt taut around his dick. A couple more thrusts and he reached deep inside her again. Stef leaned her head back against the wall, enjoying the wonderful feelings of being completely filled. As her head hung back, she felt like he might come out her mouth from inside her body at any second. The feelings of being completely full when he was inside her nearly made her cum right then. \n\n\"Oh, god, you feel so good,\" Stef growled.\n\nCole pulled back a bit and then pushed in deep again.\n\n\"Ahh...fuck, you're so deep inside me,\" Stef groaned.\n\n\"Does it feel good?\" Cole asked.\n\n\"\"Oh, god yes! You make me feel so full, so deeply penetrated. It's incredible,\" Stephanie gasped.\n\nCole withdrew most of his cock. Stef could feel the loss and longed for it to remain. When he shoved back in rather quickly, he nearly took her breath away. \n\n\"Oh, mother of god,\" Stef growled. \"That's so good.\"\n\nCole started long stroking her and Stef rode his cock with joy. She could feel every inch penetrate her core and push deep into her body. The sensations were exquisite and each thrust drove her closer to orgasm. Cole worked the long strokes and picked up speed. Soon he was fucking her like a battering ram into butter. Her insides felt like they were pulling out on the withdrawal and crushing back in on the thrust forward. Climax was eminent and rushing forward.\n\nMark's cock was so hard from sucking Michelle's delicious pussy that they had trouble getting his pants and jockeys down. Michelle was on the floor of the little fort and Mark was thrusting into her like he was drilling for oil. He fucked her for only a few minutes before he came with a grunt. His cock fired pulse after pulse of cum deep into Michelle's excited cunt. He stayed hard inside her and after only a minor rest he started slowly fucking her again. With his immediate pent up need now satisfied, Mark settled into a long, steady rhythm. He fucked Michelle like he had all day and she loved it. The first fuck had been quick and not allowed her to catch up to him so soon after her oral climax. Now she was poised for a good long fuck.\n\nMark worked his cock inside her. He moved his body from side to side and up and down. His movements drew new sensations from Michelle which she gladly encouraged him to continue. Mark fucked her slow, then steady, and finally like a man possessed. He could feel Michelle responding to his thrusts. He could tell she was nearing her climax and he wouldn't be far off either. He sped up even more drawing encouraging remarks from Michelle. His virginity now a thing of the past, he was about to cum again into his first cunt. \n\n\"Oh, so good! Fuck me, Mark! Fuck me harder,\" Michelle pleaded.\n\n\"Oh, shit, Michelle,\" Mark groaned, as his own release again came on.\n\nMark fucked Michelle like a rabbit gone wild. His knees hurt from the wooden floor of the playground fort. Yet he didn't stop. He kept pounding into her until he was sure Michelle couldn't take any more. He sensed her oncoming climax and her words were the biggest clue.\n\n\"Ahh...oh, god...\" Michelle panted.\n\nBlissful pleasure exploded in her brain like a damn that had burst. Her orgasm consumed her. Her cunt spewed her juices making his assault even easier. Seconds later he joined her and together they orgasmed. His hot seed coated her inner walls like molten lava which only heightened her own orgasm. She felt every delicious pulse of his cock and every load of his cum that collected in her inner tube. In seconds she was a sloppy mess and his still pistoning cock now met little resistance. She could feel the growing wetness between them until he pulled out and rolled to the side. His aching knees thanking him for relief. \n\n\"Oh, god! That was great,\" Michelle gasped.\n\n\"It sure was,\" Mark agreed.\n\nStef came like a freight train gone wild. He was battering her into the wall with such force she felt like he might come out her ass with the depth of his strokes. The wonderful feelings of orgasm rushed forward with intense force, making her groan and just hold onto him for dear life. When her orgasm finally waned, he was still fucking her hard. \n\nCole stopped long enough to turn her around. His cock was only momentarily out of her as he helped her turn around. He had watched enough porn to love the idea of fucking a woman with his long thick cock from behind. Even though his fantasies had him doing a woman doggy style, having Steffie standing with her back to him, against the wall, and his long cock buried deep inside her, felt great. He started pounding into her again. Stef's head came back and her back arched with the sheer force of the thrust from his big cock. Her arms supported her away from the wall to keep her tits from being abused against it as his cock pounded her cunt and his hips slapped against her firm ass. ",
        "Cole grabbed a handful of her long brunette hair forcing her to bend backwards even more. Now his cock rammed her g-spot on nearly every thrust. Stef had never felt so fucked in her young life. His big thick cock stretched her tortured cunt to accept it while his thrusts hit ever spot imaginable inside her. The feelings were incredible and she could tell she would cum again soon. \n\nIt was amazing Cole had lasted this long. Somehow Stef nearly sucking him off, then backing him down, had given him some kind of staying power. But now his orgasm threatened like it could not be held back. His right hand reached around and grabbed a fist full of her firm right tit and squeezed. Stephanie's overly stimulated body couldn't take anymore and she came again. She was joined seconds later by Cole.\n\nStef's orgasm crested like a tidal wave and burst upon the shores of her brain with extreme force. She was nearly ready to collapse when she felt the first of his scalding hot ropes of cum hose her insides. She would not have thought it possible but somehow his orgasm was intensifying her already unbelievable one. She bucked back into him as he pumped his cock and seed into her cunt. Cole came for what seemed like hours to him, not the seconds of reality. When they both finally stopped, they were slumped against the wall, with him pinning her to it. \n\n\"Oh, Geez,\" Stephanie moaned. \n\n\"Whew,\" Cole groaned in her ear, with an exhausted sigh.\n\n\"That was intense,\" Stef exclaimed.\n\n\"It was unbelievable,\" Cole agreed.\n\nStef could feel his softening cock slipping back out of her juicy cunt. She could also feel a minor river of their fluids running down one of her thighs. Stef glanced down between her tits and saw huge drops of cum hitting the floor of the fort between her feet. She wondered if she had any tissues in her pocketbook. Otherwise, the first kids in the morning might discover something new and interesting inside this fort. \n\nCole and Stef were barely dressed when they heard Michelle call.\n\n\"Guys, time to go,\" Michelle yelled.\n\n\"Coming,\" Stef replied back.\n\nWhen she saw Cole's smile and heard him laugh, she immediately realized how appropriate her comment was. They had been cumming alright. It was at that moment too she was fishing in her purse for a tissue. Successful, she stooped to wipe up the spot on the floor. It took all of the tissue to absorb the wet spot. \n\nIn short order they joined Mark and Michelle on the ground. Stef spotted a waste receptacle and threw the tissue away. They then began walking back to the car. Once again Mark and Michelle walked a few steps behind as Stef and Cole took the lead. They walked hand in hand as couples might. Cole drove them all back to Stef's where Mark and Michelle's cars were parked. They all kissed goodbye and Mark and Michelle left. \n\nCole walked Stef to the door at 11:45. The lights were out in her house accept for the front porch light.\n\n\"Cole, thanks for a wonderful evening,\" Stef said.\n\n\"It was great,\" Cole agreed.\n\n\"We'll have to celebrate a lot more,\" Stef said, jokingly.\n\n\"We will at that,\" Cole replied.\n\n\"Well, goodnight, Cole,\" Stef said. She kissed him on the lips this time.\n\n\"Goodnight, Steffie,\" Cole said, and the name made her smile.\n\nStef turned to open the door.\n\n\"Stef?\"\n\n\"Yeah?\"\n\n\"It's good fun to be with you again,\" Cole stated.\n\n\"I'm enjoying it too,\" Stef confided.\n\n\"Are you busy after your shopping tomorrow?\"\n\n\"Not really,\" Stef said, she had purposely kept Jordan awaiting her response if she was free or not. \n\n\"I'll call you then,\" Cole said.\n\n\"Great,\" Stef agreed. She looked at him longingly for a minute then kissed him again. \n\nAfter Stef had gone inside, Cole walked to his car with a smile on his face.\n\nEnd Chapter III"
    ],
    "authorname": "BlewWater69",
    "tags": [
        "sluts",
        "nerds",
        "science"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/chemistry-between-nerds-and-sluts-ch-03"
}