{
    "title": "Life after Ex",
    "pages": [
        "Well in some ways I should thank my ex-wife. Life after the divorce is, shall we say, very exciting. But I am getting ahead of myself here, so let me tell you a little of the years before. \n\nI was married to Jean for 19 years and 6 months, three days, 17 hours, 36 minutes and a couple of seconds thrown in for fun. Living in the cultured city of San Diego, California. In what I had thought was domestic bliss. My ex was a social mover and my rough and ready lifestyle was her biggest turn on when we met. \n\nWhen I first met Jean I was a desert rat if I wasn't jeeping, or out riding my quads in the lower deserts or on the sand dunes with my buddies, I was chasing the Baja 1000, down the coast of Baja, Mexico. I met Jean and my world came to an end, she was a red headed beauty with a body to die for, five foot five and one hundred and twenty pounds of pure women. \n\nShe was vacationing in Mexico and I was part of a group of freelance photographers out celebrating the end of the Baja 1000. It was lust at first sight or it was pure love caused by the vast amount of tequila I had been drinking. Gotta love that Anejo tequila and carne asada tacos. After a year of seeing her off and on we were married, in Mexico; yes I know it was the tequila again; and moved off to the wilds of San Diego to be closer to her family and their precious money. I was a novelty to them. My outgoing lifestyle was their only real outdoor adventure outlet in their 9-5 lives. \n\nOver the years we tried for children with no luck. Countless visits to the doctors only made it worst for me since it was me and my lifestyle. The first to go was my weekly 100-mile bicycle rides, then off-roading since they jostled the twins. As the years went by, nothing, we still couldn't have kids and just learned to accept it. I was Jean's starter gun, a big bang, no lethal bullets. I guess when you're looking for kids, and your toy gun doesn't work, you sort of lose interest in shooting. The wild sex went from two or three times a day, to two or three times a week, then month, then year, then never. My novelty to her might have worn off, but to her family, it never wore off and as her rich Uncles and Aunts started passing away we were left a lot of their money, as the favorite Niece and nephew-in-law. \n\nWe moved from the quaint suburbia of Glenview to the plush hood of Balboa Park. Over the years I had gone from a simple floor machinist to a programmer, then to an engineer, with lots of help from night school, sleepless nights finishing school work, lost weekends. Was it worth it? As my income grew, we grew to enjoy the finer things in life. A nicer house, we went from paper plates to those fancy Styrofoam ones. Ok, true china plates, German crystal, you name it, she wanted the finer things in life. Lavish dinner parties with the in-laws, favorite Aunts, and Uncles. \n\nAs the years went along I thought this is where I wanted to be till the death of one of my lifelong buddies back in Arizona. Mat rolled his jeep in Moab and broke his neck. Over the years I had kept in touch with most of my friends via e-mails and phone calls, but we sort of lost contact socially. Well, Mat's death brought home what I had lost. This was my first chance to re-visit that life in nearly seventeen years. \n\nThe funeral was a sobering event, getting to see all of my long lost friends, their wives, kids, and some grandkids hurt. Nearly all of them were still fit and trim whereas I settled into the business world and had let myself get 40 or so pounds overweight. \n\nAfter Mat's funeral I planned on staying over the weekend to 'catch up' with my friends, my ex refused and flew home that night since it was mostly drinking in the garage while wrenching on the toys. \n\nThey had different plans than most to memorialize Mats life. They planned a day-long ride on quads to memorialize his life. Something Mat would have approved of. In borrowed ride gear and bike, I spent the day trying to catch up. Years past most of them always tried to catch up to me. This was humiliating. \n\nOnce I returned home my life wasn't the same. There was a certain fire that had gone out of me over the years. And this trip home had shown me that empty fireplace. I soon traded my Mercedes for a Ford F350 and started looking for a Quad to throw in the back. This didn't go over that well with Jean. \n\n\"People in our social standing don't ride Banshee's in the deserts or drive smelly-ole pick-ups.\" \n\nThis argument went on for the next year till it all came to a head two months before Thanksgiving weekend. I planned on meeting my friends at the annual sand dune run, just outside of Yuma for the first time in 18 years for the traditional thanksgiving weekend, when my wife informed me that I had to cancel due to a white tie party at the museum for a premier opening of some new artist that did art deco type of paintings. \n\nI was in the process of calling my friends when my old roommate John asked me, \"Why are you doing this man? You never canceled a sand duning trip before...especially to go to some funky, white tie party!\" \n\n\"Well, Jean wants to go...and...\" \n\n\"Now tell me, why would you want to go, rent some tux, just to go to some snobbish party anyway?\" \n\n\"Rent! No way John I own two perfectly good tuxes, one is this sweet little Italian made number I had custom made for me...\" \n\nJohn just laughed \"never knew you to own a tux before, 'man' you've changed...who are you...either way, it's your loss.\" \n\nJohn hung up and I just sat their thinking..., \"who am I?\" \n\nI was torn between two worlds, my wife's and my former life. As the party got closer I fought with myself. A week before the dune trip I made my decision and got the quad ready to go with a new set of paddles and two new gas cans. \n\nThe day I loaded my quad my ex informed me that if I went to the dunes she'll never forgive me for this insult. A week later I returned home a new man, unshaven and in desperate need of a bath. Not even a welcome back dear... all I got was a frosty glare that could split a diamond. I didn't care I was alive inside for the first time in years! Oh, I did hurt, but that fire...it was brighter than the noon-day sun! \n\nThat year was hard for my ex. What she carefully changed over the last 18 years, reverted back in less than a year. I was riding at least once a month now all over California. The last straw was when I brought a new jeep a year later and dumped another 20 grand into her for summer trip over the Rubicon trail. We fought constantly over the next four months till I left with my jeep on a trailer behind the truck. \n\n\"If you leave on this trip I will not be here when you get back!\" \n\n\"Your loss Jean...are you sure you don't want to go? John, Tim and the rest, let me know you're more than welcome to come along, their wives are coming.\" \n\nA week later I came home to an empty house and divorce papers. I can live in an empty house, an air mattress, sleeping bag and I was good to go. Called up a riding partner, a senior partner in JP Law. Jean wanted everything, so she got half, but hey so did I. \n\nFour weeks after my lovely homecoming, I was back in Arizona, I bought a nice two bedroom condo in downtown Tempe with the money Jean paid me for my half the house and the artwork we had bought together. I didn't want it, but I wasn't giving it away either. \n\nWith a new house and a new job, it was time to change me. Like I said, I gained almost... 50 pounds since I left Arizona and it was time to lose it, ok I lied, but who really admits their weight? I joined a local gym and started putting this 40-year-old body back into shape. From winter, into late summer I sweated trying to loose the gut. What the gym failed to take off, the summer heat did! Those weekend rides with the old gang melted the pounds off me. 118-degree heat has that effect on some people. \n\nAlong with a trimmer me I grew my hair longer. What hair I had, the forest was thinning a little at the front borders. That left me standing at 5 foot 11 inch weighing in at 180 pounds, with a barrel chest and enough definition to look good shirtless. With honey brown eyes and a salt and pepper goatee and shoulder-length hair. Not bad I thought, looking in the mirror. \n\nNow I chose my new digs with some care since downtown Tempe was home to Arizona State University. There was sure to be a lot of nice looking ladies running around. Ya, like a guy of 40 had a chance with them. My ego told me to buy here but my mind told me you didn't stand a chance pops! Oh, how my ego was so right! Sorry, mind you lose. \n\nMost of the condo owners didn't live there but made their rent by sub-leasing their condos out during the school year to rich people so their precious sons and daughters didn't have to live on campus. Some were owned by some major corporations and had it set up for their people when they needed someone in Arizona for a while. It was constantly moving day around the condos, as some moved in others moved out. \n\nFrom fresh-faced co-eds to mature business people this place constantly changed. When I first moved in I noticed that I didn't get a second look from any of these ladies, but by late summer I did get a lot of second looks. The first one that I knew of was an older woman who moved in two doors down. Older? Maybe fourth five-ish? I knew that condo was owned by some business back east by the constant change in tenants. \n\nShe was a gorgeous redhead with sparkling green eyes that took my breath away... \n\nWhy redheads I thought? I am constantly attracted to them, addicted to them even! \n\nShe carried a few pounds extra here and there, but what little she did carry made her little five foot three frame, shake her business outfits just right. Her short red hair framed her face on both sides, giving her that elfish look. Enough for me to rush back to my place and relieve some of that pent-up frustration every time I saw her. \n\nWe had talked several times, either when we met in the elevator or in the hallways. \n\nI knew her name was Jill. She was divorced and was out here to oversee a new mainframe installation in one of her company's new office. But that was it, until that fateful day in August. \n\nDuring the later parts of summer and early fall, Arizona gets these swift summer storms called monsoons, they sweep out of the southern deserts with hurricane force winds that just plays havoc with power lines. A good set of power flickers can blow any fuse made today, so when your air conditioner is chugging away trying to cool your condo while its 115+ outside and some errant storm come along and flicks the power on and a half a dozen times...do not expect your A/C to be working when you get home.  \n\nJust after I moved in I made it a point to learn where my A/C's fuse box was and kept spares just for those little emergencies. \n\nI came home early one Friday with the wind howling, blowing that 100 degrees, dust filled air, to find all of my clocks flashing 12:00... again. My condo was already in the nineties and threatening to cook my furniture to a well done. A quick change of the main fuses upstairs and the AC was back on-line. Not wishing to sit in a sauna till it cooled down I drove across town to the local store and bought a six pack of coke so I could mix a few drinks and watch the coeds swim from my condo's balcony if the storm abated. My favorite summer activity, it's better than soft porn on cable TV. \n\nWhen I got back, the dust storm was still blowing. Well, there goes my entertainment for the night. As I passed Jill's condo she had the door wide open, waving a paper plate as a fan trying to cool off. \n\nWaving to her I asked, \"What no AC?\" \n\n\"No,\" she replied slumping her shoulders from the heat, \"the super says too many condos blew their fuses and the hardware store doesn't have enough. Some of us won't get power or AC back until tomorrow.\" \n\nI nodded and offered use of my condo, \"Well I have both if you want to get out of this heat.\" \n\n\"You do!?! That's wonderful! I will be there in a moment!\" \n\nAs I opened the door to my condo I turned to see Jill, just locking her door. She had discarded her business jacket but left on her white shirt. I noticed as she walked up that she had the top three buttons of her shirt undone and was giving me my first glimpse of her massive chest. Her gray business skirt clung to her curvaceous legs as she walked by, showing me a glimpse of her narrow hips and shapely ass. \n\nAs she walked through the door I could hear her mumble, \"ah heaven!\" \n\nI stopped in the kitchen to drop off my groceries and called out, \"Can I fix you a drink?\" \n\n\"Yes! Please.\" \n\n\"What would you like?\" \n\n\"Anything as long as it's cold!\" \n\nI made two tall rum and cokes and walked into the front room, what I saw nearly floored me. Jill was lounging in my easy chair with her feet up, with her eyes closed and her arms held over her head trying to cool off under the ceiling fan. Her white button-down shirt was stretched tautly over her massive chest. If I was to guess here, somewhere near a, 38 D? Obviously, she had been sweating in her condo; her perspiration soaked white bra and white cotton shirt certainly didn't leave anything to one's imagination! \n\nAnd I certainly wasn't going to complain here! \n\nHer areola was nearly 2 inches round and her nipples looked like a \u00bc inch steel dowel pins, standing tall in the breeze under my ceiling fan. But that wasn't what piqued my attention... I had situated my easy-chair just under the ceiling fan to cool me off on hot days like today. With the fan on high, it had enough force to lift Jill's skirt up and give me my first view of her womanhood. \n\nShe obvious shaved or waxed, but left a small patch of hair as a landing strip on her little mound. Needless to say, she wasn't wearing any panties. Not only didn't I mind...I almost drop both drinks not minding! I smiled and continued to walk in clearing my throat and hand her a drink. \n\n\"Oh thank you.\" \n\nI smiled and said, \"Your welcome\" as I sat down on the love seat. \n\nShe smiled and looked around my place. Seeing some of the prints I had kept from my divorce she commented on them. \"I have seen that print before I didn't know you like Erte's?\" \n\nI smiled, \"Yes I do I have several of his pieces.\" \n\nLooking closer, she said, \"That isn't a print...is that the original?\" \n\n\"Yes.\" \n\nJill just looked at me. \n\n\"Actually everyone is an original,\" I said somewhat modestly. \n\nJill looked around noting all of the prints. Leaning back enjoying the view she was giving, I related my story to her on how my ex acquired these drawings for me. \n\nAfter several more drinks, she told me hers, how her twenty-five-year marriage didn't work out either. After raising two lovely kids she had went back to work to give her life more meaning. She had first started off, by going back to school when her children had entered high school and worked her way to a bachelor's degree. \n\nNow she was a senior network administrator for a major stock brokerage firm. Her husband was so supportive at first but turned angry when she started to be 'the' major bread winner. After a messy divorce, her only gratification is her job and grandkids. \n\nBy the time she finished her story we had polished off more than half a bottle of rum together. I didn't know about her but I am a lightweight when it came to drinking. \n\nI was feeling no pain when she finished her drink and handed me it, nodding yes on the refill question. \n\nShe was standing under the ceiling fan when I returned with her drink. As I handed it to her she smiled and said, \"That feels good.\" \n\nI frowned at that comment till I followed her eyes as she looked down at her billowing shirt. The ceiling fan was filling her white cotton shirt with air and I could clearly see her hard nipples poking out of her lacey bra. I was smiled when I looked back up at her eyes. Busted! An awkward moment for most guys when caught in the act of staring down a ladies shirt. \n\nJill slowly set her drink down and moved in closer to me. She wrapped her tiny arms around my neck and pulled me down for a kiss. \n\nWith her massive chest flattened against mine and the taste of her sweet lips still on my tongue I managed to say, \"No...this is better.\" \n\nI got a very big smile for that comment. I don't know if it was my idea or hers, but we both sort of managed to find a seat on the 'love seat' together. I smiled inside as we kissed thinking of just that. As we kissed we both let our hands wander, as I explored her back she explored my chest. \n\nI let my hand slip down to feel her smooth legs. As I let my fingers slide under her skirt I hear her moan with pleasure as I lightly brushed the inside of her thigh. I was hesitated here, not sure if it was the alcohol making her like this or it was me. \n\nCome on here folks, it has been twenty years since I had a different sex partner other than my ex, not sure spending any time in jail for rape would be fun. \n\nJill opened her eyes and looked into mine. \"What is it, Steve?\" \n\nI smiled, \"I don't want to take advantage of you here... if it is just the alcohol making...\" \n\nJill placed her fingers against my lips, \"Shush, I am a big girl now and I know what I am doing.\" \n\nWrapping her hand around my head she pulled me in close for another kiss. With her comforting words, I let the moment take me. Heck, it had been almost nine months since I even got a kiss! Alright, it was a cousin...a second cousin at that. Another story, at another time...ok if you must know, it was a pity fuck! Really nosey. \n\nI explored her mouth like a dying man. I explored her lips, tongue, and teeth with mine. My left hand rubbed her everywhere, like a school kid exploring his first lover. From her back to her lower legs I searched for those erogenous zones. Every time I found one I was rewarded with a soft hiss. Each time I got one, I kissed her and unbuttoned another button on her shirt as a reward. \n\nAs the last one was opened I slowly spread her white cotton shirt open, revealing the loveliest set of breasts that I have ever seen. I slowly kissed my way down her chin to her jaw line then moved my way to her ear lobe. I was rewarded with another soft hiss. \n\nSince there were no buttons to reward myself with I slipped my right hand to her back and tried to unhook the first clasp on her bra. As my nervous fingers started their first awkward fumbling of her clasp's she raised herself up giving me room to slide my second hand back there, allowing me to remove her shirt as well. I have never managed to learn how to take off a woman's bra single handed. Yes, the shame in that. Do I still get to keep my man card? It's a simple trick that has eluded men for hundreds of years, and I was one of them. But with two I was able to slip those four clasps apart like a young thief. \n\nWith her shirt off and the clasps undone I allowed her to lean back into the couch and I started my assault on her lips again. Jill definitely had other plans here and worked to get my shirt off as we kissed. \n\nI rose up to remove my shirt. As my hands were lifting it over my head she ran hers over my hairy chest and growled, \"Nice!\" \n\nAfter running her hands all over my chest, she pulled me closer and sucked on my nipple. My ex had done this several times but it always ended up the same, hurting like hell, but Jill knew how to do this. There was no pain...but pure, intense pleasure exploded in my groin, supercharging my hard-on. \n\nAs those little stars exploded in my eyes I hissed and pulled away. \n\nLooking down at this little girl, I knew this couch, was no place to do this lady justice. I stood up and slipped both of my arms under her and picked her up. Thank you, Carlos, my gym torturer, tormenter, ugly, mean, nasty guy who steals my money and spends all his days thinking up nasty shit for me to do at the gym! ",
        "No grunts or groans, and a perfect deadlift. \n\nShe wrapped her arms around my neck and kissed me as I carried her into my bedroom. Laying her on my king size bed, I kicked off my Teva's. Jill discarded her bra while I was doing that and when I turned back she was lying there in just her skirt. \n\nHer two massive breasts pooled on her chest, her areola stood out in contrast to her pure white skin. Both of her nipples stood straight out begging for me to suck them. I was memorized by her sheer beauty lying there, on my bed. Her pearly white skin was unblemished by any tan lines a sure give-away in Arizona that she was from back east. \n\nThe black silk comforter made her pale white skin literally glow. \n\nI couldn't resist anymore and crawled up beside her and kissed her letting my right-hand traced down from her ear to her knee. As my hand made it way up her inner thigh I was rewarded with another hiss. Jill arched her back and my lips came in contact with her ear, which I promptly kissed. \n\nI was rewarded with a hissed, \"Yes,\" this time, and no buttons as a reward...bummer! \n\nWe spent nearly a half an hour just kissing and exploring each others body with our hands. Then I slowly kissed my way down to her chest, kissing all the way around one breast, then the other, before even trying to make my way closer to her nipples. My right hand made its way to the top of her mound and I lightly brushed it with my fingertips. \n\nJill arched her back forcing her nipple into my mouth at the same time. Wee, a reward! A reward that Stevie likes. As I sucked her nipple, my right hand slid down her mound to her labia. My fingers slid across her labia lightly brushing her clitoris on their way down. This woman was ready action. \n\nThis brought another hiss and a slight convulsion. She arched her back forcing her nipple deep into my mouth, causing my right hand to grab her around her mound. My right thumb was directly on her clitoris and my palm over her labia. I could feel her labia convulse with her pre-clitoral orgasm. \n\nI slowly brushed her mound, thighs, and labia while I furiously sucked on her nipples letting her ride out her first orgasm. As she rode out her climax I unzipped her skirt laying it on the floor next to her bra. No button but a zipper was a better reward! \n\nI was told once by a beautiful red head; ya, I know another redhead here, see a theme here folks? That I didn't have the right equipment to keep women coming back just for my cock. I had to sell a service, a total package deal, hands, tongue, and my cock. Give a woman a few orgasms before you get yours and she will always come back for more. Kathryn was right when she told me that. A philosophy I still follow to this day. \n\nI didn't let Jill rest for too long. \n\nI started by kissing her lips, ear, her nipples, and kiss my way down her flat belly. I let my tongue trace along the folds of her inner thigh till I reached its apex. Then I kissed my way back up and down her neatly trimmed mound making sure I didn't miss a single spot. Looking down I saw that her labia was puffy and wide open. I let my breath announce my presences and kissed my way in. I let my tongue do the talking, licking every inch of her soft folds. \n\nHer heavenly scent was like an aphrodisiac urging me on. Not only did I lick inside her labia I showered her inner thighs with kisses and nibbles. Jill had wrapped her hands into my hair and started pulling, trying to force me deeper into her folds. I resisted that and kept my up my teasing on her outer lips. \n\n\"Please Steven...oh god please\" she moaned but I continued to tease her outer lips till she violently pulled my head upwards so my lips came into contact with her clitoris \"please stop teasing me.\" \n\nSucking her clitoris into my mouth I pulled it between my teeth and teased it with my tongue and was rewarded with a big \"Yes!\" \n\nGiving her clit only thirty-second or so of teasing before I went back to working her outer lips, \"Oh God no...please don't tease me like this!\" \n\nI know this is cruel but I always loved the way women withered under my tongue like this. \n\nFinally, when her pulling of my hair started to hurt; easy their lady I thought, I have limited supply at this age! The hair reforestation elves didn't get my change of address card. I flattened my tongue and drove it deep as I could inside her. This brought her to another orgasm. Her labia squeezed my tongue and she drenched my face with her heavenly liquids. I lapped up as much as I could till she forced my face away from her. \n\n\"I need you inside me now!\" \n\nI smiled and looked down at her as a post orgasmic wave passed through her body. Her breasts, hips, and thighs jiggled with her shutters, this excited me even more. I reached down and unbuttoned my shorts. \n\nI am not what you would call well hung. I am only about six and a half inches long but as Kathryn had told me it's not the size of the tool but the mechanic behind it. I slipped my shorts off and half crawled out of them. Apparently, Jill wasn't disappointed at what she saw, she reached up with both hands to my waist and pulled me down to her. I didn't want the moment to end this quickly and held myself out, by starting off just kissing her again. \n\n\"Please, Steven put it in me now.\" \n\nI smiled and teased her swollen lips with the tip if my dick as she furiously tried to line it up. I had placed both of my arms on the insides of her so she couldn't reach it as I teased her labia and clitoris with the tip of my dick. But she found a way around this little restriction as I ran the tip down she reached around with her tiny legs circling my waist and forced me into to her. \n\nI slid all the way in and she screamed into my ear, \"YES!\" \n\nFor an older woman, she was tight and held me snugly in her. I let the first sensations run through my body before I made a move. After thirty seconds or so I started off with two short strokes, then a long one enjoying the feeling of her vagina.  \n\nI kept this pace up for a while, two short and one long stroke till Jill pleaded with me. \n\n\"Faster...harder...please stop teasing me like this.\" \n\nAs I started this steady pace of just long strokes I knew I wouldn't last long. I never have. So I leaned back taking her hips and lifting them up a bit. Then slid my left hand over her clitoris and started twiddling it. \n\nJill exploded in screams, \"Oh my god! Yes! Yes! Don't Stop! Oh, God...I...I am coming! AHhhhhhh.\" \n\nI rode her orgasm out and couldn't hold myself off any longer. Her pussy muscles were contracting furiously and I couldn't hold it. I pulled her in tight and let go. The feeling of orgasming together is wonderful. Jill twitched with hers and that twitching just overloaded my sensitive cock and brought stars to my eyes. \n\nI held her tight till her orgasm subsided and gently laid her back down again. I slowly started to pull myself out but Jill quickly said, \"No,\" and held me tight inside her. I could still feel her Kegel muscles contracting as she laid there between my legs. Every time she contracted, that made me twitch inside of her which made her gasp \"oh my\". After a few minutes, I laid myself flat and started kissing her again. Jill wrapped her legs around my waist and kissed me back. \n\nAs I kissed her, I said, \"Thank you I needed that\". \n\nShe smiled and kissed me back saying, \"No I really needed that...it's been five years since...\" \n\nI stopped her words with a kiss. We laid there intertwined kissing till I felt myself harden again. I start to move my hips again but Jill unlaced her legs from me and quickly rolled us over. With me now on the bottom I let her take control. She placed her tiny hands on my chest she started to grind her pubic mound into mine. \n\n\"Now it's my turn,\" she said with a mischievous smile. She slowly ground her pubic mound into mine with little circles and slowly raised herself and dropped back down. I reached up and gently started to massage her massive breasts. \n\n\"Harder,\" she gasped. \n\nI pinched her nipples harder and twisting them in my fingers. \n\n\"Yes,\" gasped. \"Oh, my...\" \n\nI felt her Kegel muscles squeeze my swollen cock as another orgasm hit her. I dropped her breasts and tried to hold her hips still but she grabbed my wrists and pushed them above my head. I didn't struggle as she started to grind herself harder into me. After a few seconds, she started to ride me more and more like a wild woman. \n\nHer massive breast where hitting me in the face so I tried to capture one of them in my mouth. After a few seconds, I caught one and gently bit down on it. \n\n\"Oh god YES,\" she screamed and forced it deeper into my mouth by leaning down harder into my face. \n\n\"Harder,\" she instructed me. \n\nI gave up all pretense of trying to be gentle and started to abuse her swollen nipple with my teeth. I nibbled on it and bit it as I sucked it in as hard as I could. \n\n\"Yes,\" she screamed as she danced on my cock. \n\nHer other breast was slapping the side of my face but she held onto both of my wrists so I couldn't do anything about it till she sat up straight releasing my hands, with a massive orgasm rocking her body. Her orgasm must have lasted for over two minutes. \n\nAfter she came down I put both hands on her breast and teased her nipples as I withered under her trying to get myself off. She recaptured my wrists pulling my hands off her breasts and moved her ankles over my hips, then her knees pulling herself off of me. She continued to slide down releasing my wrists till both of her hands could grab my cock. Placing it in her mouth she started sucking on it like it was her only lifeline. \n\nHer talented tongue danced on the underside of my dick and one of her tiny hands pumped my shaft for all of its worth. \n\nI could normally hold off quite long when a woman sucks on me but Jill had me going in less than a minute. I felt my balls tighten up and I tried to pull myself out of her. Jill felt my efforts and put her other hand, under my scrotum and wiggled her fingers into my crack of my ass next to my rose bud. With one of her tiny fingers pressing against my anus, I let go with the biggest ejaculation I ever had. Four, five massive squirts and she kept on sucking. \n\nEven after I was done she kept on sucking and pumping my shaft till I had to force myself out of her talented mouth. 'Plop' \n\nI smiled as she slowly crawled up next to me. I leaned in and kissed her, \"Thank you that was...was just wonderful.\" \n\n\"Thank you,\" she replied sleepily. \n\nWe snuggled for several minutes till I heard her give a slight snore. I pulled the comforter over us and enjoyed the pleasant feeling of her warm body next to mine. \n\nThe next thing I knew was a faint jingle of the Waltz of the Blue Daniel and buzzing of the vibrator going off in the middle of the song. \n\nPhone! \n\nI dragged my totally numb left arm out from under Jill waking her as I tried to reach my phone. \n\nI saw it was 4:30 in the morning before I opened the phone saying, \"Hello?\" \n\n\"Steve! Get your lazy ass up, we are already at the restaurant waiting for you.\" \n\nIt was John. \n\n\"What?\" \n\n\"It is Saturday man time to get up and go for a ride dude!\" \n\n\"Oh shit, John I forgot!\" \n\nI heard John laugh as he told someone else who was with him. I recognized Troy's and Tim's laugh in the background. \n\nLooking over at Jill as she slid closer to me and wrapped her tiny hands around my early morning erection I knew I wasn't going to make today's ride. As her lips encircled my engorged head I hissed out, \"Um...John...shit dude I...um...\" \n\n\"You're not going to make it\" John replied. \n\nI gasped out a, 'NO' as Jill swallowed my whole cock in her mouth. \n\nI heard Troy and Tim laughed again as John shared the noised I was making. \n\n\"Well shit, Steve you gone and got yourself a woman again... didn't ya?\" \n\n\"Yes,\" I hissed as Jill worked herself up and down my shaft. \n\nI heard Tim exclaim, \"Well there goes Steve again for another twenty years!\" \n\n\"Well remember dude, you're leading the Jeep club through the rock-garden tomorrow.\" \n\n\"Ya...I knowwwwoew.\" \n\nJohn laughed, \"Well that lady you're with, she better like jeeping and stuff or we are coming over tonight and kidnapping you!\" \n\n\"I will...ILL!\" I hissed as Jill placed her other hand between my butt cheeks. \n\nJohn laughed and said goodbye. \n\nI closed the phone and smiled at Jill. \"Have you ever gone jeeping before?\" \n\nJill licked my cock from the base all the way to the tip and tickled my slit before saying \"No, but it sounds fun.\" \n\nSqueezing my cock she grinned, \"After today we are going to need a break,\" she said that while she pushed her tiny finger past my sphincter muscles and started sucking on my cock again. \n\n\"Ohhh YES!\""
    ],
    "authorname": "Sextus_Propertius",
    "tags": [
        "divorce",
        "humor",
        "intercourse",
        "blowjob",
        "voyeurism"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/life-after-ex-1"
}