{
    "title": "Play Testers Wanted Pt. 03",
    "pages": [
        "All characters are 18 years old or older. Sorry for the delay. While editing this piece I decided to add content to flesh things out and not leave parts of Booker's training and quests down to a simple time jump. I hope you enjoy.\n\n*****\n\nHome Sweet Home:\n\nIt only took a few hours to get Snow's tower the way I wanted it. The perpetual thunderstorm outside kept that pesky sunlight at bay. By the time I was finished I received a message through my HUD that the holocron puzzle was ready to be attacked. Within its crystalline depths were the secrets to mastering my undead nature and who knows what other surprises it might hold. Sweet! I had the symbiote armor change into pj's and brought the holocron out of my inventory. I was so damn excited. I turned the pyramid over in my hands examining it closely. I won't lie, the exterior had changed but I was cool with that. They not only tweaked it, but in my humble opinion it looked way cooler than before.\n\n\"Alright,\" I said as I began running my fingers over the etched Sith runes. \"Let's see what makes you tick.\"\n\nI counted the runes and discovered nearly one hundred characters and out of those one hundred, sixty of them were individual symbols. I also discovered that if you pushed on the runes, they gave off a musical tone. After touching three of them I received an electrical shock.\n\n\"Na'yun!\" A voice declared and I chalked that up to meaning wrong.\n\n\"Shit!\" I cursed when the second jolt I got was stronger than the first. \"No more randomly pressing runes for me. I need to find a way of deciphering these letters.\"\n\nThe tower had a library. Archimedes wasn't any good since this was off world technology and language. I went through the titles of every book in my new library and while it was extensive it didn't cover anything like the life and times of Darth Nocturnal. I returned to my bedroom and stared up at the ceiling trying to puzzle it out. Suddenly, it hit me, and I rolled my eyes.\n\n\"I am so fucking stupid!\" I said and returned the holocron to my inventory. I approached the Magic Mirror and touched it's surface to activate it. \"Mirror, mirror hanging there, New York City is looking fair.\"\n\nWhoosh!\n\nI was standing in the alley next to the Baxter Building. I walked further in looking for the distortion that had caught my eye when I first entered the game. It was still there! I strode through and I went from a warm summer New York day to a bitter freezing Ossus night. I was about to change my armor to arctic mode when I saw the flashes of blaster fire. The temple was under attack! I slipped into stealth mode and raced down the mountain side. There were three large shuttles parked outside the temple. I saw the blaster fire focused near the entrance to the temple. It appeared they were trying to damage the massive locking mechanism that held the doors shut. As I approached the armored soldiers were setting up three tripods with heavy laser cannons to breach the temple doors. \n\n'Not going to happen!' I thought to myself.\n\nI snuck close until I was ready to spring my one-man ambush. I felt I was more than a match for these guys. I waited until they were preparing to mount the cannons to strike. I drew on the storm and worsened it which would only help my attack. I leapt upon them with my weapon ignited and cut them down. One after the other they fell to my blade. I cut a swathe through their ranks until none remained. I was about the pat myself on the back when I felt it. I hadn't felt it since I trained with Ventress. Two figures stood at the base of the ramp of the middle shuttle. They wore the dark robes of the Sith Empire. \n\n\"This place is under my protection.\" I growled as two crimson blades burst into existence. \n\n\"Kill him.\" A third figure ordered as the two Sith warriors leapt at me to close the distance.\n\nI used telekinesis and only managed to knock down one of them. I easily parried the blade of the Sith that had reached me. I went on the offensive and felt the rush of energy fill my entire being. I reveled in the power but before I could take him down his partner joined the fight. The tried to fence me in by attacking from two different directions. I let them have it long enough for them to get cocky. Ten seconds after he had joined the fight, I ducked an overly aggressive horizontal slash and spun behind my foe and my blade bisected him from shoulder to groin.\n\n\"Bastard!\" The remaining Sith roared and went berserk.\n\nWhile his strikes were stronger, they were also sloppier. I was able to disarm him with a quick riposte that allowed me a parry followed up with a strike. My blade left a scar on the back of his weapons hand.\n\n\"Surrender.\" I offered as he glared at me weaponless.\n\n\"Sith do not surrender!\" He screamed just before I impaled him on my blade. \"So cold!\" He whispered as my weapon clove his heart.\n\n\"No. They die.\" I replied as I turned to the third Sith. \"Come on out and perish.\"\n\nThe sense of power coming off her was intense. She wasn't a meager peon. She was the real deal. Whatever her name, she was a lady of the Sith and fully trained. Her robes were elegant and carried the same markings as the holocron I wished to decipher. She took her time and seemed unimpaired by the snowstorm raging around us. I felt her rage but unlike her former students hers was a smoldering thing waiting to be called up at will.\n\n\"Good students are so difficult to find these days.\" She purred. \"You cut them down almost as if you enjoyed it. Well, did you?\" She asked as she reached up and pulled the hood of her robes down revealing her features.\n\n\"Twi'lek! I've never slept with a Twi'lek yet.\" I blurted out stoking her anger.\n\n\"You are bold, and your passion is a palpable thing. Why are you here?\" She asked her curiosity stronger than her anger.\n\n\"I am in possession of the Holocron of Darth Nocturnal.\" I said and that caused her to falter. \"I came here to seek out a way of safely opening it and gleaning its secrets.\"\n\n\"I've never heard of Darth Nocturnal.\" She stated. \"I am a Sith historian and it is unlikely such a holocron exists. Though we may not be at cross purposes.\"\n\n\"I suggest a duel.\" I offered. \"If I am able to mark you with three nonlethal strikes you give me access to your archive.\" My offer intrigued her and so I continued. \"If you mark me once, we work on it together.\"\n\n\"Either way you appear to come away on top.\" She replied.\n\n\"In either situation you walk away with your life.\" I stated and she took affront to that.\n\n\"You seem to think that I lack the skills to defeat you.\" She snapped.\n\n\"Suit yourself. I am sure I can slice your computer's security while your corpse freezes out here on the bitter cold stones.\"\n\nShe never agreed to my challenge, so I took it as a rejection. We crossed blades and a real duel began. She was at least as skilled as I was. It was my first real challenge after Snow, and I was eager to prove myself. It was clear that my hybrid style was giving her problems. I was switching on the fly between forms and she was getting frustrated even though she hadn't left herself open yet. I was confident that I could force her into an opening. She suddenly switched to a one-handed grip on her weapon and I wrapped a static forcefield around my body anticipating either Force lightning or a telekinetic attack. \n\n\"Huh?\" She gasped in surprise when her attack failed. \"Ow!\" She snarled when the tip of my blade marks the back of her weapon hand. \"Bastard!\"\n\nShe redoubled her efforts but now her once clean technique became as sloppy as her students. I frowned when that happened. I intensified my focus and disarmed her a few exchanges later. I snatched her weapon out of the air before she could recover. I moved to strike her down when she surrendered. I took her weapon as a trophy since it was the nicest of the three lightsabers I had claimed.\n\n\"Let's take a look at your archives, shall we?\" I demanded and she relinquished its secrets. We climbed aboard her shuttle and after she unlocked the data vault, I asked a single question.\n\n\"What do you know about Darth Nocturnal?\"\n\n\"Darth Nocturnal lived during the time of Darth Serpentis and the Great Hyperspace War. He was a pureblood Sith and lived to be over a thousand years old. Legends say that he travelled deep into the Unknown Regions of the galaxy and was infected by a strange creature. It was this infection that granted him his long life. Displayed is the lightsaber of Darth Nocturnal.\" The archive declared showing a black bladed lightsaber. Its construction was far more elegant than mine and I was able to copy the image to my own files. \"Displayed is the Holocron of Darth Nocturnal. It has been lost since Nocturnal's tower was raided and he was destroyed by the Jedi Master Nov Ghenlis. Both the lightsaber and holocron are believed to be in the vault of the Jedi Temple on Coruscant.\"\n\n\"So, you are looking for his secret of eternal life.\" The Sith chuckled.\n\n\"No, I've already figured that part out.\" I said and smiled revealing my fangs.\n\n\"Master!\" She groveled. \"How can I serve you?\"\n\n'Trophy earned: Sith Blood Lust.'\n\n\"I need help unlocking the holocron.\" I told her and her excitement only ramped up from there.\n\n\"You have it!\" She moaned. \"I thought you were lying but you have Darth Nocturnal's Holocron. May I see it?\"\n\nI created a hologram of it and let her look that over. I didn't trust her, she had lied about her knowledge of Darth Nocturnal, and she was far from earning my trust. She quickly translated the runes on it. The sequence of runes eluded her. I asked her to tell me about the Sith language. She told me all about its history, but it wasn't until she blurted out what she felt was a useless bit of trivia.\n\n\"Sith runes don't just have just a phonetic element but a mathematical one as well.\" She said and I cried out demanding she display the numerical values of the runes. \"Of course, there must be a mathematical sequence to follow!\"\n\n\"There it is,\" I said picking out the runes that formed what is called a Fibonacci Sequence. \"Time to see if it works.\"\n\n\"I can't believe this!\" She exclaimed and it was clear to me the Lady of the Sith wasn't an NPC but another player. \"I've been looking for this for... a long time.\"\n\nI took out the pyramid and pressed the ten-digit sequence without getting shocked once. The holocron rose out of my grasp and spun and rotated on its axis a few times before the holographic image of Darth Nocturnal appeared. I clenched my teeth to keep from screaming in delight. The holocron sent out beams to scan the Sith and me. Nocturnal turned towards me and spoke.\n\n\"You seek answers, I understand. It is a lonely path we follow. My secrets will be yours.\" \n\n\"Now hold the fuck on! I gave you the means to unlock the damn thing... what about me?!\" The Sith roared as she flew into a rage.\n\n\"A true Sith would expect betrayal.\" Nocturnal purred. \"Pay her for her services.\"\n\n\"Yes, my Lord.\" I said flashing the woman a toothy grin.\n\n\"UNNNNN!!\" She moaned as my fangs sank into her throat. \"Coming!\" She cried out as her body bucked beneath me. \"I don't want to die... please... I'll do anything!\" She begged as her life blood coursed down my throat one pulse after another.\n\n\"You heard her. Anything.\" I barely heard Nocturnal chuckle through the red haze of the feeding frenzy.\n\nI cut my wrist with an elongated fingernail and fed her my blood. Once more the Sith's body shook as she climaxed. Her eyes snapped open and the whites of her eyes turned blood red. The wound in her neck healed as did the one on my wrist. \n\n'Reward: Born of Blood - Treasure Map Provided.'\n\n\"Let us begin.\" Nocturnal stated and my training as a Master Vampire began.\n\nTreasure Hunt:\n\n'Title earned: Darth Valakhor Lord of Shadows.'\n\nIt took five months in game to finish the training and quests connected to mastering both my vampire and Sith skills. Darth Nocturnal's holocron showed me everything from mist form, summon animal, and in my case shadow form. I could take on the shape of a living shadow, but it took a toll by forcing me into a feeding frenzy afterwards. If I used it, I was powerless to control who or what I fed from. My vampiric child Zanna only trained enough to get the very basic skills before she left. I was disappointed that she didn't stick it out. On the bright side I didn't have to share any of the rewards or treasure I accumulated once she was gone. The holocron went dark after the final lesson was completed and I stored it in my inventory. I was anxious to see where the treasure map led and return to the main game once more. I held the treasure map in my hands. It was a star map that led off world. I had two shuttles to pick from the take for my purposes. Before I left, I wanted to make sure Ventress was alright. I went to the sealed doors of the temple.\n\n\"Master?\" I called out and the doors opened.\n\nThe temple was untouched by the Sith's attempt to breech the entrance. The caves that held the Kaiburr crystals glittered and shone as I passed them by. I was intent on finding my teacher and see if there was anything, she needed from me. I heard voices and the sound of multiple lightsabers igniting.\n\n\"Fear not, it is my former student.\" Ventress soothed the fears of her two students. \"Ghost, what brings you to Ossus?\"\n\n\"Much but I came to make sure you were well and see if I could be of help to you before I left.\" I replied.\n\n\"He feels strange Master,\" the red skinned Lethean Twi'lek commented as she looked at me.\n\n\"Indeed, is he a Sith?\" the stunning Togrutan female asked. Her blue and white markings reminded me of the famed former Jedi Ahsoka Tano. \n\n\"He is a Bendu. Ghost Fire follows the old ways of balance between the light and dark side.\" Ventress explained. \"We must respect his path. I wish you well on your journey.\" She stated as she looked at me directly. \"I have no tasks that my two students cannot accomplish. Goodbye.\" She said ending the conversation abruptly.\n\nI bowed and left my former teacher. I returned to the frozen garden and examined the two shuttles and took the more heavily armored of the pair. I preferred a good defense if I ran into trouble. I translated the coordinates on the map and plotted a course for what the map called the Viridian Pulsar. Thank goodness the ship was advanced enough for me to not require piloting skills to get it off the ground. The Exomorph joined me on my quest as we blasted off and slipped into hyperspace. The clock indicated I had three days until I reached the pulsar. I trained, meditated, and played catch with the Exomorph. I wasn't used to having so much free time on my hands. \n\nI spent time examining the hologram of Darth Nocturnal's lightsaber or perhaps it would be more appropriate to call it a darksaber. It burned cold just as mine did, and was whisper silent when activated, and in combat. What I found more interesting though was its construction and the characters decorating it. It became a bit of an obsession really. I desired to be able to one day create such a find work of art. My combat skills were only part of my path as I saw it. Like the Japanese samurai I wanted to be a well rounded warrior and not simply a hack and slash fighter. I wanted to embody both sides of the Force equally. I was the follower of Anackire and her instrument and as such the Shadow Master. \n\n\"I think that has it.\" I said to the Exormorph. \"I have broken it down to these components. You see here that it has a curved hilt just like Count Dooku's weapon. I may have to train with one and see if it helps or hinders my fighting style. I think I can break down the three sabers I took from those Sith and make one with the parts available. What do you think?\"\n\nThe Exomorph rolled onto her side exposing her belly. I took that as a good sign. I had just enough time to take the other sabers apart, set aside the parts I needed and stored the rest in my inventory. I took the finest of the Kairburr crystals into my cupped hands and poured both light side and dark side energy into it. I hoped it would bathe the jewel in an equal amount and allow it to function for me at full potential. I did this until I felt the nature of the gem change on a fundamental level.\n\n\"Done.\" I said as I recuperated. \"Whoa!\" I exclaimed as I opened my hands revealing a dark violet crystal for my back up weapon. \"Nice!\" I said as I eagerly assembled the lightsaber.\n\nSnap! Hiss!\n\nThe weapon functioned perfectly but it was more a traditional weapon making the traditional sound that most lightsabers made upon activation. The vibrant amethyst blade was a deeper shade than what I recalled Mace Windu wielded. I would need to practice with it to use it properly. The hooked handle felt strange in my grasp. I placed it in my inventory for now but later I would set aside time to train. I fed the Exomorph just as the alarm sounded that the ship was about to drop out of hyperspace. The ship's shields came online automatically. The lethal radiation coming off the pulsar would have killed me had I chosen the other shuttle. Score one for paranoia. \n\n\"Scanning for anything unusual.\" I said to the Exomorph who cocked her head to the side as if to say, 'great idea boss'. \"I'm getting some weird readings here. That is a lot of metal. I have no idea what it means. Is it a ship?\"\n\nThe collision claxons sounded, and I took the controls. God help me I don't know how to fly. I did my best and trusted to the Force to keep us alive. It was a ship! The gigantic derelict was pulling us in and there was no fighting it. The ancient star ship somehow survived the area around the pulsar, and I was going to find out whether I liked it or not. I took quick measurements of the ship and tried a second time to get an accurate reading.\n\n\"There is no way anything is that damn big.\" I said and the Exomorph purred. \"It says that it is thirty-five thousand meters long. That's like twenty-two miles.\" \n\nThe ship settled into a massive docking bay. There were dozens of ships of varying sizes. The smallest was a one-man fighter and the largest a small frigate. I didn't know that much about the history of the galaxy but some of these ships felt like they were separated by thousands of years in time and space. The tractor beam that held my shuttle set the craft down amid the mid-sized ships. I checked the atmosphere and there wasn't just a breathable atmosphere, but the radiation was tolerable. It was time to see what treasure I was here to find. I felt like I was off the edge of the world and half expected to see graffiti on the walls that read, here be dragons. I armored up and dropped the ramp. The Exomorph was eager to stretch her legs. She raced ahead and ran back and repeated this behavior while I looked for a map or command area on this deck. That eerie feeling hit me again as I saw the condition the ships were in. They were all in various states of age and weathering but one thing they had in common, they were all functional. I didn't feel that the treasure I was after was here amidst these ships.\n\nThe Exomorph and I left the docking bay again seeking a map or clue. We headed to the left and walked the pristine corridor. There were no signs of wear or tear here. This vessel couldn't have had many missions before she found herself here. The sudden wave of nausea struck out of nowhere. I leaned against the wall until it passed. The hall seemed to twist and corkscrew on itself. I fought the queasiness and even the Exomorph was affected by the anomaly. It passed as quickly as it manifested.\n\n\"What the hell was that?\" I grumbled as I got to my feet. The sound of multiple lightsabers igniting reached me and I raced in the direction of the fighting. I could distinguish the clash of blades and other sounds of combat. \"There!\" I called out as I spied the flashes of multicolored light coming from an open doorway. I reached for my weapon as I cleared the threshold only to find an empty room. \"What the fuck?\"",
        "Was I losing my mind? No, the Exomorph was also bristling. If she had sensed it then something had happened here. I suppose it could have been a hologram. Had the distortion or whatever it was triggered it? That seemed like the most likely explanation. Problem was, I didn't know what that event was well not yet anyway. The map led here but I didn't know what I was looking for. There was little history on the Viridian Pulsar in the shuttle's logs. I didn't want to make an official inquiry because that might be traced back to me and my wayward daughter was out there somewhere. If she sniffed it out, she might know or suspect whatever the hell it was. Child or not I didn't trust that little vamp. \n\nI searched the room and discovered it was the nexus point for this ship's entire scanner array, which was quite vast. Excellent stroke of luck, with some difficulty I was able to pull up sensor and probe logs. Several log entries were flagged. I went to the oldest and worked my way forward. It began as a sensor shadow, a simple anomaly. The head of the ships science division ordered a shielded probe launched. That is when things got interesting. The probe landed on one of the nearby planets. The scientist assumed and quite rightly that this system was devoid of life. There was no way that anything could survive the massive amounts of ionizing radiation. He was wrong. The object named VP103 in fact had a patch of viable atmosphere that had plant and animal life. A shuttle was sent to investigate and that is when everything went wrong. The crew began disappearing, first a few at a time, but then whole deck crews vanished without a trace. In less than three days the entire crew of the ship were gone. The droids were the only inhabitants unaffected by the event that took the others.\n\n\"The Pride of Korriban is now a ghost ship.\" I said and the Exomorph whimpered. \"Yeah, me too, let me see if I can shut down the tractor beam, or whatever the hell dragged us here. We need to get down to VP103 and find out what happened.\" I said in as soothing a tone as I could. \"Got ya! I can tie into other departments through here. Hold on. Fuck! I can't switch it off from here. We need to go up twenty decks to the security station and get access there. You ready?\"\n\nThe Exomorph purred in response as I downloaded a map of the ship to my inventory. I headed for the nearest elevator. We left the scanning station and I stopped in my tracks when I saw the condition of the corridor. Massive stress fractures ran the length of the hallway. They reminded me of a metal coat hanger when you bend it back and forth until it breaks. The spidery cracks seemed to form a pattern and I didn't like it. If we were to get off this death trap, we needed to shut down the security measures or the shuttle was going nowhere. \n\n\"Elevator should be right down this corridor.\" I said aloud feeling on edge. My hand didn't drift far from my weapon. \"I got a bad feeling about this.\"\n\nThe first blaster bolt whizzed by my head and I quick drew, ignited my weapon, and sent the next bolt back at the silver clad figure that had fired it. The smoking hole in his chest a testament to the long hours of training I had endured. I didn't recognize the armor or the weapon he or she was sporting. The design of the suit was clean, streamlined, and had a mirrored finish. I suppose that was to reduce damage from blaster fire. It didn't work too well. I searched the corpse and came up with an identity card. I hoped that would help get us where we needed to go. We continued down the hall and a short sense of nausea hit and when I looked behind me the corpse of the trooper was gone.\n\n\"Spatial anomaly?\" I threw out and the Exomorph just growled. \"I feel it too.\"\n\nThe sense of panic bordering on terror hit out of nowhere. I kept my weapon in hand as we reached the elevator. Whoever they were, they were too scared to show themselves. I used the ID card to summon the elevator. I had to use it inside the elevator as well. It smacked of mistrust or a warship. Only a military vessel would have this kind of overlapping security. If you didn't have the clearance you weren't allowed to go there. The elevator stopped and opened onto a firefight. A cluster of twenty or so troopers were firing on what appeared to a patch of darkness. The blaster bolts were absorbed by the boiling chaos.\n\n\"My Lord!\" One of the troopers called out. \"Over here!\"\n\nI didn't correct him. I joined them behind their makeshift barricade as they continued to fire at the darkness.\n\n\"You aren't doing any damage.\" I stated and the sergeant nodded. \"What is going on?\"\n\n\"This is the thing taking the crew. It shows up and snatches them. They just disappear into it and then it vanishes only to reappear on another deck. You dropped your security badge.\" He said handing me a gleaming gold card. \"What are your orders?\"\n\n\"We pull back to security. I turn off the protocols keeping my shuttle trapped and we all head down to VP103. Whatever that thing is, my gut is telling me the answer is down there.\"\n\n\"We'll cover you.\" He said and I reluctantly agreed to be the first to leave.\n\nI reached out trying to tap into the anomaly they had been firing at. It was nothing. I bit back the sense of raw terror. I could feel the nature of light, darkness, and the middling shadows in-between. This thing didn't register as any of those. It was in fact a block of pure nothingness. It shouldn't exist. If there is a lack of light, we call it dark. If there is a lack of warmth, we call it cold. This was a lack of everything. The mind isn't designed to encounter nothing. Even in the vacuum of space there are things travelling through it from photons, radiation, or of course star ships. I yanked my mind away from the abyss and fled.\n\nThe Exomorph was right behind me as I raced for the security station. The new card opened the door and I turned to call out for the troopers to join me. I wasn't surprised to find the corridor vacant of troopers and the null. I entered the security hub and used the card to access the network. It took me a few minutes to understand the interface and try and turn off protocols. I found that was impossible. What I could do was chose my shuttle and raise its security clearance beyond the protocols currently keeping it grounded.\n\nThere were other aspects of the ship's security available to me. Key to those were sealed files and the captain's log. I skimmed the captain's entries both official and personal. The Pride of Korriban was to be the flagship in a new push to destroy the Republic once and for all. The prototype engines and their power plants were the key to moving so large a vessel. My new security clearance gave me access to the sealed files, files that documented the expedition into the Unknown Region. It was there that the fuel for the flag ship had been discovered. The entire power plant and engine array was dependent on this exotic matter.\n\n\"That doesn't sound good.\" I muttered as I returned to the captain's log.\n\nThey tested the fuel in smaller vessels and had only minor issues that were easily corrected, or so they thought. They went ahead and finished the Pride of Korriban. It was on its maiden voyage when it made its first jump to light speed. The moment this vessel hit hyperspace everything went wrong. The ship was drug off course, and it ended up here. Something happened during its passage here and it is still affecting the ship and those aboard it. One of the science officers filed a report and hypothesized that the ship's fuel was quantum entangled with its source in the Unknown Region. It was that connection that pulled the massive warship off course. Perhaps it was the pulsar that kept triggering and retriggering the fuel causing the disappearances. It was just a theory though.\n\nThe ship shuddered and that wave of nausea hit again. I could hear metal tearing as claxons warned of critical failure. \n\n\"Time to go!\" I exclaimed and the Exomorph seemed equally pleased. \"Let's get the hell out of here before another one of those events hits.\"\n\nWe moved quickly but cautiously back to the elevator. We reached the level where my shuttle was parked and disembarked the elevator. The blast door was closed, and I felt a sense of apprehension steadily growing since I had arrived on this vessel. It had reached its pinnacle as I activated the mechanism that would open that blast door. With a loud 'ka-chunk' the pistons unlocked as steam discharged into the air while the massive door slid apart revealing the flight deck.\n\n\"They are here.\" I whispered as the figure shrouded in the white hood came into view. My palm was sweating as she lifted her head and I felt her penetrating stare through the ceremonial bandages covering her eyes. She was a Miraluka, a rare breed of near humans that while blind to the visible spectrum can see through the Force.\n\n\"It 'is' you.\" She stated genuinely surprised. \"I thought you were just a story to scare Jedi younglings.\"\n\n\"Oh, come now,\" I replied smiling behind my mask. \"I am hardly the boogie man.\"\n\nSnap-hiss!\n\nHer double-bladed lightsaber was the color of deepest amethyst. The Miralukan female launched herself at me and at the last second, I ignited my own weapon and caught her descending blades on my own and the duel began in earnest. She was neither a mere NPC nor a Player Character, the skill behind her attack was a Master ranked A.I. on the offensive. I had to be at my best to endure her withering assault. I blocked each attack and when an opening revealed itself, I threw myself into the offensive. My single blade batted aside both of hers, but I couldn't wound her no matter how hard I tried.\n\n\"Damn this is intense.\" I growled through clenched teeth. I ducked a particularly savage slash for my head and followed that up with a foot sweep of my own that damn near succeeded. She cursed and flipped away throwing back her hood letting long wavy locks spill free. Her beauty clear now the hood was gone. \"Gorgeous!\" I gasped and she blushed.\n\nThe manifestation took us both by surprise. It showed the Miraluka sitting with several children of various species and she was instructing them in the ways of the Force. I didn't miss out that they weren't wearing Jedi robes but general loose-fitting clothing. Her violet bladed weapon hinted at a grey view of the Force rather than the Jedi or Sith way.\n\n\"Master Marr, what was he like?\" One of the children asked.\n\n\"He. He was fierce, brave, and uncompromising. That means he didn't settle for second best. He faced the fiercest foes and taught me how to maintain balance within as well as outside.\" The spectral Visas Marr declared. \"I miss him dearly.\"\n\n\"What happened to him?\" Another student asked.\n\n\"I don't know. My gut tells me that he is still alive.\" She smiled.\n\nIt faded as quickly as it had manifested. I stepped away from her and she did the same. I turned off my weapon and attached it to my belt. Seeing her opportunity, she charged me, and I heard her blades slice the air. I closed my eyes and accepted my end. I felt the heat of the plasma next to my flesh, but I wasn't burnt.\n\n\"Damn you!\" She hissed. \"What's your plan?\"\n\n\"Take my shuttle to the planet, investigate the shielded area, and find out what happened to the crew of this ship. If I have time, make love to you and make you scream.\" I smiled at her discomfort. \"I need a good pilot.\"\n\n\"For the shuttle or for afterwards?\" She laughed as she lowered her weapon.\n\n\"Yes.\" I chuckled as I opened my eyes.\n\nWe raced side by side to my shuttle and found it crushed under fallen debris. I cursed and then I saw another ship prepped and ready for flight. A formidable looking droid waved at me and called me Master. We changed course and sprinted for the open ramp. Visas beat me up the ramp. She raced straight to the pilot's chair and hopped into it. The assassin droid sealed the shuttle behind us.\n\n\"Welcome back Master meat bag.\" The droid said in greeting. \"You still function.\"\n\n\"Yeah, fuck you too asshole.\" I fired back. \"Thanks for the lift.\"\n\n\"It is the least I can do.\" It said. \"Who's the other meat bag?\"\n\n\"Our pilot.\" I said as the shuttle lifted off, spun around, and aggressively raced outward in the direction of our destination.\n\n\"Good. I don't stoop to flying. I am a skilled killer not a mere pilot.\" It intoned emotionlessly. \"Ooh, hello pretty!\" The droid said when it spied the Exomorph. \"I... what is this feeling inside?\"\n\nI reluctantly turned my back on the assassin droid and walked to the front of the vessel. Marr was dodging falling debris and with a whoop of success we left the crumbling ship behind us. She pulled up the navigational display and plotted a course that kept the massive warship between us and the pulsar. I looked around and the interior of the ship had that lived in atmosphere. It reminded me of the Milano from Guardians of the Galaxy or of course the Millennium Falcon. The ship could use a good cleaning and I was sure the assassin droid would never stoop to such menial labor.\n\n\"It'll take two hours for us to reach the planet at sub-light speed.\" Visas declared. \"Nice ship you've got here.\"\n\n\"Not my ship,\" I replied, and she made a disapproving face. \"Mine was crushed in the hanger bay. I only took this one because the droid waved us over here.\"\n\n\"Everyone knows that this is your ship.\" The Miralukan declared. \"The Crimson Shadow is legend among Sith, and Republic held systems.\"\n\n\"Hey droid!\" I called out and it bristled when I didn't use its name.\n\n\"Master meat bag I have a designation, please use it.\" It snapped angrily. \"I am HK-69.\"\n\n\"My deepest apologies HK, who owns this ship?\" I asked expecting anyone but the one it indicated.\n\n\"Why you Lord Meat Bag. As the female indicated the Crimson Shadow is legend and is your ship.\" It stated and then sniffed the air. \"I'll be in my room, if you are going to copulate, I'd rather not watch. Come on pretty thing. I'll feed you.\" The assassin cooed as it led the Exomorph away.\n\n\"Copulate? Me?\" Visas growled. \"I do not copulate! I am a... MMMMM!!\" She moaned into my mouth when I kissed her. \n\nSlap!\n\n\"I have an oath to uphold.\" Marr stated breathlessly.\n\n\"Fine.\" I said and plopped down on the surprisingly comfortable couch. \"I'm not sure my species and yours is um compatible.\" I chuckled as I spread my fingers on both hands and brought them together. \"I am much too... and you are so slim and... it'd never work out.\"\n\n\"By the way Master meat bag,\" HK's voice came over the internal speakers. \"If this isn't your ship, how did it get clearance to escape the warship's tractor beam?\"\n\n\"It uh... I mean... I am so confused.\" I stated as the Miralukan approached slowly.\n\nShe was a willowy creature, with soft generous curves, and a sense of serenity surrounding her. Visas made a show of setting down her weapon out of reach. With a gesture she unzipped her boots and one at a time offered me her feet so I could take them off. She wiggled her toes and then without hesitating performed a standing split. One foot firmly planted on the deck and the other pointing at the ceiling.\n\n\"Impressive.\" I moaned. \n\n\"Thank you,\" She purred. \"I am sure you are equally athletic. I've heard all the stories of your adventures. Did you really steal the Sith Queen's Kaiburr crystal from her crown?\"\n\n\"The Sith have a queen?\" I asked as she brought her leg out and over me as she leisurely straddled me.\n\n\"For a brief time, a mere decade, and all of them worshipped her. The story goes that you... MMMMM... seduced her and slipped away with her favorite and rarest crystal.\"\n\n\"What made the crystal so rare?\" I asked as she unzipped my armor and let me loose.\n\n\"You may be right,\" She purred as she took me in hand. \"I am MMMM so slight, and you are so very... rigid... stiff... eager... my species while blind also have a very sensual touch.\"\n\n\"I know.\" I growled.\n\n\"Your hero,\" Visas whimpered as she stroked me openly. \"She had the heart of his lightsaber and that is why the Sith flocked to her. It looks so tasty...\" Visas kept flipping back and forth between my cock and the story of the Sith Queen and her treasure. \n\n\"My hero... UNNNN... you do have a nice touch!\" Now I was doing it.\n\n\"Yes!\" She whimpered as she spat on her hand and stroked harder. \"Your hero... Exar Kun!\"\n\nThis is where the scene stops, and I grab her by the throat and ask her how the hell she knows about Kun. Visas gasped for breath as I slowly squeezed. She didn't struggle but I also didn't finish what I started.\n\n\"How do you know about that?\" I asked and then let go.\n\n\"You told me of course.\" She admitted. \"We've known each other for a long time.\"\n\n\"I... UNNNN! Naughty minx!!\" I cried out as she slowly impaled her tiny pussy on my erection. \"Tight!\"\n\n\"Just the way you like me!\" The Miraluka moaned as she finally had my entire length inside of her. \"Damn, I've missed you!\"\n\n\"Slow. We have time!\" I demanded and she relented.\n\n\"Yes Sir! Slow full ahead!\" She groaned as she leaned back so I could see my erection slide in and out of her. \"I knew you were a voyeur at heart.\"\n\n\"How did anyone know about Exar Kun?!\" I asked as she began squeezing me with her internal muscles. \"That name has never come up before. I don't get it.\"\n\n\"Shut up and fuck me!\" She giggled as I rolled her onto her back and took over.\n\nI did as she asked. However, I pushed her flexibility to its limits. At one point I had both her feet firmly behind her head and pounding her until my stamina bar ran down twice. As Visas recuperated, I checked on HK and the Exomorph. If I hadn't seen it, I wouldn't have believed it. The hunter killer was shut down and recharging with the apex predator in its lap. I had never seen the Exomorph take to any other being as she had the droid. Like attracts like I suppose. I returned to the cockpit and it reeked of sex. This ship didn't have the sonic showers like the other shuttle. It had a water tank and specialized reclamation system just so we could take a normal shower. I showered and Visas joined me as I washed the sweat off.\n\n\"Can't we just leave?\" She purred. \"Who cares about some silly old planet anyway?\"\n\n\"I do. I need to find out what is happening here and if there is any treasure.\" I stated and she sobered up. That is the best description of her change of attitude and personality. \"This is important to me.\"\n\n\"Nothing will stop us finding it out then,\" she said with determination that bordered on slavish devotion.\n\n\"HK?\" I called out. \"Scan the planet below and see if there are any hostiles.\"\n\n\"Now that is the meat bag I know and tolerate.\" HK replied. \"Damn! There are no hostiles.\" It cursed after a detailed scan of the area covered by the protective shield. \"No weapons... no meat bags to kill... ugh!\"\n\n\"Maybe next time.\" I said and that seemed to lift it's spirits.\n\n\"I've located their landing beacon, taking us in.\" Marr called out as she adjusted the ship's attitude and corrected for the transponder. \"Buckle up, there is a heavy layer of strong weather between us and the surface. The ionizing radiation is keeping the clouds above this zone quite active.\"\n\nI took the copilot's chair and strapped in. Multicolored lightning zipped horizontally across the sky and slammed into the ship's shields. Strong winds buffeted the shuttle, but Visas' piloting skills got us down in one piece. I hated to think of what would have happened if I had tried landing this thing on my own. We managed to reach the ground with only minor damage from the intense weather. A little bruised and shaken but intact. I praised the Miralukan's skills and she blushed, at least I think she did. Her coloring darkened and she slipped into her girlie shyness briefly.\n\n\"Master lied to poor HK,\" the assassin droid cried out giddily. \"I now detect dozens of meat bags to be terminated with extreme prejudice. I take back all those nasty things I calculated about you.\"",
        "\"Stay here HK.\" I ordered.\n\n\"Yes Master,\" the homicidal droid agreed. \"Once you flush them out into the open you can leave the rest to me. I will not fail you.\"\n\n\"You read my mind.\" I replied as I checked the atmosphere to see if it was safe to breathe. As a vampire I didn't need to breath, but Visas did. \"All clear though the radiation is a bit high.\"\n\n\"Considering the only star in this system is a pulsar, it is a miracle that anything lives here at all.\" Visas replied. \"Who built this? More importantly, why did they build this?\"\n\n\"Let's find out.\" I said and we left the shuttle with the crazed HK unit to guard it.\n\nThe area surrounding the ship was a fertile valley with several farms, orchards, and agricultural centers. All that plant life had to be responsible for generating the breathable atmosphere. The only rain appeared to fall at the very edges of the dome shaped protective field. I guessed that underground irrigation brought the water to the fields and maintained the plants as crops and a source of oxygen. It was a pretty elaborate set up for way out in the boonies. Pulsars were avoided like the plague and for good reasons. Whoever built this wanted privacy. \n\n\"There appears to be an entrance over there.\" Visas indicated as she pointed. \n\nI would have likely walked right passed the entrance because of the series of clever holographic fields masking the two massive blast doors. Miralukans appear to be nigh on impossible to fool with visual illusions. I let Visas take point and I followed her. The titanic doors groaned as they pulled apart to reveal the interior of the underground structure. The doors only opened enough to allow a few people to enter easily before they began closing again. The walkway was a smooth ramp that lead down as a casual angle and before long we could make out voices below as the doors clanged shut behind us. There was music, people laughing, shouting, and for all purposes it sounded like a party. The dimly lit ramp led to the front of the casino. The beings were all impeccably dressed, and the display of wealth was obvious, and I felt decidedly out of my comfort zone.\n\n\"It is him!\" A male Iridonian called out. The crown of small horns marking his species instantly. Unlike the scarlet skinned Darth Maul his hue was closer to human Caucasian.\n\n\"It 'is' him,\" His female Twi'lek companion cooed as she waved at me. \"I hope he likes my tits!\"\n\n\"Darling, everyone loves your tits!\" The Iridonian declared knowing the daring cut of her gown put her gorgeous breasts on display and was accentuated by a large gemstone hanging betwixt them.\n\nThe myriad conversations faded as everyone watched Visas and I enter. Just as Visas had a history, I knew nothing about apparently these people also knew me in a celebrity like fashion. A tall emerald skinned Mirialan strolled over and I didn't miss his heavy musculature and equally graceful movement. He was a killer and there could be no doubt about it. I didn't draw my weapon, but I was ready to if I sensed the slightest hostile intent on his part. It never came.\n\n\"Boss! You surprised me! Drinks on the house, the boss is here!\" \n\nThe crowd roared as ladies flashed a variety of body parts in my direction. I half expected Visas to cut the women down in a rage filled slaughter, but she just grabbed and kissed me passionately as if to mark her place by my side. I felt like I was caught up in a fever dream. I was guided to a private table that was isolated and looked out over the gaming tables, the stripper poles, and the dance floor. Unlike some establishments all the entertainment was live and not transmitted over the holonet.\n\n\"Here you go boss!\" The Mirialan cheerfully set down an open bottle of wine and three glasses. \"Oh sorry...\" he apologized and took a sip from my glass. \"...all clear no poison.\"\n\n\"Thanks. How are things going?\" I asked trying to slip into the role of casino owner.\n\n\"There are the occasional winners, but profits are up. She is here though. If I knew you were going to show up, I'd have had her on the first shuttle off world.\"\n\n\"You son of a bitch!\" A voice like liquid sex cursed me out. \n\n\"Good god!\" I exclaimed when I turned to face the speaker. \"Who let you in?\"\n\n\"I see you've been trolling around again.\" The albino Twi'lek hissed as her ruby eyes welled up with tears. \"You haven't forgiven me yet, have you?\"\n\n\"Should I?\" I fired back blindly seeking information from her.\n\n\"I suppose not,\" She replied dapping her eyes with a silk cloth. \"If the roles were reversed, I'd have slain you for such a breach. Why do you keep me around?\" \n\n\"Must be your tits... perhaps your ass... sit down already.\" I ordered and she did so instantly. I recognized as I had in Visas the use of Kiai Jutsu to tame her. She was just a puppet now. While she still fought the effects of the conditioning, she hadn't beaten it yet. \"Do you hate me?\"\n\n\"No, I adore you.\" Her feelings on display for all within earshot. \"I love submitting to you. I am the only one worthy to do so.\"\n\n\"Says you snowflake!\" Visas snarled angrily. \"I am his favorite now!\"\n\n\"Blind slag!\" The Twi'lek cursed at her.\n\n\"Ladies... ladies... the Master doesn't want to hear you two bicker. Show him some respect.\" The Mirialan suggested. \"Frost? Visas? Either yield or leave.\"\n\nFrost, the albino, dropped to her knees staining the expensive dress she was wearing and worked feverishly to undo my pants. Visas not wanting to be anything but compliant followed suit. Soon they were sharing my cock between them. I sat back and enjoyed their attention.\n\n\"Who is the Twi'lek with the great tits?\" I asked gesturing at the blue skinned beauty with the jewel nestled between her breasts.\n\n\"Oh... her! She belongs to Jahl Norisong, the Iridonian merchant. He owns half the Soth system and has fingers in plenty of other ventures. The gem around her neck is in fact an explosive device keeping her in line. He doesn't like being crude when it comes to his property. Shall I invite him to the table?\"\n\n\"Not right now... what is he doing?\" I asked as he removed the necklace from around the Twi'lek's neck and whispered in her ear. \"This could be interesting.\"\n\n\"Perhaps he wants to wipe his debt with a single girl.\" The Mirialan offered. \"He isn't that deep in the red though. Maybe a good will gesture. She is quite striking.\"\n\n\"If it pleases you Sir,\" the girl said shaking. \"My former owner wishes me to place myself in your good graces.\"\n\n\"Sit.\" I said as Visas was deepthroating me. \"You disapprove.\" I asked. \"Your thoughts betray you.\"\n\n\"They are working too hard to pleasure you.\" The girl responded with a knowing smile.\n\n\"What do you suggest?\" I asked trying and failing to hide my own smile.\n\nInstead of kneeling or trying to fit next to or between Visas and Frost the newcomer went above and beyond. She removed her dress, performed a hand stand over my erection and began performing inverted pushups with my cock trapped between her lips.\n\n\"Show off,\" Frost snarled.\n\n\"Impressive.\" Visas giggled. \"How does it feel?\"\n\n\"Wow!\" I said as she deepthroated me repeatedly. \"She's very talented.\"\n\n\"I may have to work on my upper body strength.\" The Miralukan laughed. \"I think he's going to blow.\"\n\n\"Already?\" Frost gasped. \"I think you are right. He's going to...\"\n\nI cried out as a blasted a load down the Twi'lek's throat. I instinctively squeezed my eyes shut for a moment. The sudden silence was deafening. The darkness followed a moment later. I opened my eyes the casino was empty, had been empty for years. Dust covered the tables, and the fallen stripper poles. If I were to guess I'd say the place had been raided and in the ensuing chaos the place had been trashed. I sat up and reached out to see if any living thing remained. I was alone. There was no hint of power or presence. I was about to head for the exit when a single pulse caught my attention. I froze in place and waited. It felt like forever for the second pulse to blossom. I faced the direction of the pulse. Whatever it was it was evil. It was tied intimately with the Dark Side. The whisper of emergency generators kicking in made it difficult to hear it. The third pulse was an assault. I staggered back clutching my head as the crimson emergency lights flickered to life.\n\n\"I'm going to end you!\" I growled as the fourth pulse washed over my mental shield. \"You are down there... in the ground... buried like an old bad weed.\"\n\n\"Forever...\" it sent.\n\n\"Rotting in the black earth like a tumor.\" I addressed it as I vaulted from my table to the dance floor. \"UNNN!\" I grunted as the next pulse hit my shield but this time there was a physical manifestation. The brackish energy washed over my defenses like fetid water. It was old, rotted, and rank. The air stunk of it. \"Nasty.\"\n\nIts laughter hung behind me as I traced the pulses to their origin. I threw my hand up and was stopped cold when the next attack came. It lasted longer this time. This wasn't an instantaneous thing now. It was becoming drawn out and taking more energy to defend against. I had to hurry. If I was too slow, I would be too drained to face it.\n\n\"This isn't a casino; it is a feeding ground. This is your nest.\" I deduced as the next blast of negative energy lashed out. \"Parasite.\"\n\n\"Forever!\" It shouted driving me back a few inches.\n\nThe casino was a death trap for the thing below! Just as certain plants used sweet nectar to lure insects to their doom, this thing used the elusive space out of the middle of nowhere to attract the rich and powerful. So proud and so full of life! I had a choice to make. Stay and kill it or flee and let it continue to feed on the unwary. \n\n\"I'm no hero.\" I said as the next and most devastating attack slammed against my shield. I felt the slightest touch from it. My arm went numb for just a moment, but it was enough to demand a swift and immediate response. \"Oh, hell no!\" I roared. I did the only thing I could do. I drew entirely on the Light. I reached out to the pulsar and all that withering energy. I channeled it into pure clean light and let it spill into this dark place.\n\n\"Forever!\" It roared. \"I AM FOREVER!\"\n\n\"Nothing lasts forever.\" I screamed as the ground shook and split open.\n\n\"Destroy!\" It howled as rancid feelers pushed up through the solid rock to get at me. \"Hunger.\" \n\nI tore the loose stones away exposing the path from the casino to the worm's lair. I fought the urge to retch as I dove into the crude tunnel created by the thing seeking out my life. I felt my legs go numb and remain that way. I landed hard on the broken rocks before the pulsating pustule that formed the main body of the nameless thing. How many centuries had it resided here in the dark feeding from unsuspecting sentients? I reached out again and slammed raw sunlight into the thing and watched its skin dry, crack, and then rupture spilling mind breaking foulness into the cavernous lair. I pulled myself above the floor, so I didn't drown in its filth. I screeched as the ancient thing withered and died. Something inside of me was broken from channeling so much light through my undead form.\n\n\"Ugh!\" I gagged. \"Kill it with fire!\" I said as I called down a cleansing fire and burned everything in sight. \"Just in case.\" I muttered aloud as my mind fought to remain rational. \"Did you kill the crew of the flagship?\" I pondered. \"Did you find a way of reaching out somehow?\"\n\nI got the use of my legs back and searched the burnt-out corpse. The body appeared to be guarding a sealed stone door, a door carved of native stone. My anger got the best of me. I reached out and telekinetically ripped the door from its foundation. I threw up a forcefield to block any traps I might have triggered. Intense beams of lethal energy bounced off the shield. I stepped into the space beyond the door and found myself looking down a hallway, a star ship's hallway. I followed the sense of power like a magnet pulling me along.\n\nThe path to that power was arrow straight and at its end a makeshift crypt. The decorations and even the coffin looked as if they were a last-minute thought. I thought for a moment that it was lazy work on an artist or developer and then I thought it out. A star ship crash lands on this planet. The occupant is mortally wounded and uses the materials at hand to display his or her mortal remains. I liked it. It made sense. The raw power made my brain itch. I took a closer look at the markings of the coffin. \n\n\"Those are runes... Sith Runes. Wait, that looks like the markings on the holocron.\" I stated as I took out the holocron.\n\n\"Holocron.\" A ghostly voice whispered. \"My holocron!\" The voice gathered strength as the Sith wraith manifested.\n\n\"Lord Nocturnal,\" I said dropping to one knee.\n\n\"My heir is finally here.\" He said as he approached. \"You butchered my watchdog.\"\n\n\"I did indeed and would do it again. What the holy hell was that thing?!\" I asked.\n\n\"I don't know. I discovered it during my visit to the Unknown Regions. It is a strange place full of spatial anomalies. I fear when my ship came out of hyperspace too close to the pulsar, the same radiation that poisoned me also affected the tentacled horror.\" He explained. \"How did you get here?\"\n\n\"It all began when I found your holocron.\" I began and went through everything that had happened and left nothing out. \"What can I do to honor your memory?\"\n\n\"Take up my relics and place them somewhere deserving.\" He said. \"Hurry though! This planet's orbit brings it dangerously close to the streams of highest radiation. Hurry!\"\n\n\"You are going nowhere!\" A new voice stated coolly.\n\n\"Who the hell are you?\" I asked as I spun to face the newcomer. He was clad in ebonite armor with bright scarlet accents and if I was expecting witty banter, I was wrong, dead wrong. He was built like a linebacker and moved like a dancer. His ruby blade smashed into my black one. I dug in and slipped into defense so I could observe his style. That nearly cost me my life. I went full on defensive to keep from being sliced to ribbons. \"Who the hell taught you?\"\n\nHis reply was a Force push that sent me flying. I tucked into a ball and landed unharmed. After my run in with Snow I had been developing tactics to deal with just this kind of attack. Instead of being knocked off balance and vulnerable I came up swinging. I took him off guard and nicked his left arm with a spinning slash. He never cried out and came on as fierce as ever. His style was an unknown, his telekinetic blasts hit like a truck, and he was relentless. He never let me go on the offensive and if I didn't change things up, he was going to cut me down.\n\n\"An eighth form,\" I muttered as the crimson blade whirled and lashed out ruthlessly. \"A form designed to take out Jedi weapon masters. Brilliant!\"\n\n\"You talk too much!\" He snarled as he adjusted his grip and altered his attack again.\n\nFour more times he flung me around like a doll and even when I brought my shield into play, he shattered it like glass. Five fucking times was five times too many! I felt my rage push beyond my control as his blade began to hammer at my defenses once more.\n\n\"Idiot!\" I cried out and laughed. \"I am a fucking idiot!\"\n\nI shifted through the shadows and cloaked my presence in the Force at the same moment. The Sith snarled but spun around looking for me. I watched as his head dipped and felt his attempt to find me. I suppressed the urge to laugh. I sent out my voice through the deepening shadows.\n\n\"You picked the wrong environment to pick a fight with me.\" I laughed as his rage built. \"I commend you, Master of the 8th Form. Pity I will have to destroy you!\"\n\n\"So, it is true! There is a Shadow Master!\" The Sith said his fear fueling his rage. \"You can't hide forever.\"\n\n\"I don't need to. I'll let the shadows do the work for me. You'll find yourself in the vacuum of space in a moment. Any last words?\"\n\n\"You are a cheat!\" He snapped. \"I worked so damn hard. All those Sith ruins and now I lose to someone like you!\"\n\n\"Tell you what,\" I replied keeping the shadows in play. \"An exchange of prisoners. I teach you and you teach me. That sounds equitable so, what do you say?\"\n\n\"I am a harsh instructor.\" He grudgingly agreed.\n\n\"How the hell did you get here?\" I asked and he laughed as he deactivated his weapon and placed it on his hip.\n\n\"A quest would you believe it.\" He said as I collected the relics of Darth Nocturnal.\n\n\"Aw man,\" I grumbled. \"They are just for display. Oh well. I was hoping they'd work or be able to be scavenged for parts. They'll look good in the tower. Oh shit! We need to get the hell out of here! This planet is about to pass directly in front of the business end of that damn pulsar! Run!\"\n\nI grabbed him by the shoulder and shifted us through shadows. We appeared beneath the Crimson Shadow and fled up the open ramp passed the disappointed assassin droid. Visas was in her spot in the pilot's seat.\n\n\"Punch it!\" I yelled.\n\nVisas had us up and away just before the planet's orbit was drug into direct line with the lethal poles of the Viridian Pulsar. We all watched as the planet broke up under the assault and my HUD lit up with a triumphant sound.\n\n'Congratulations: You have earned the rare viridian lightsaber crystal.'\n\n\"Sweet!\" The Sith Justicar and I exclaimed holding up the silvery-green jewel.\n\n\"I may have to build a back up weapon with this in it.\" I said and he nodded.\n\n\"I know just the place,\" the Sith Justicar chuckled. \"There is a tree on Malastare VI that has a silver sheen and would be perfect. I spotted it during a particularly hard quest.\"\n\n\"Training first.\" I said and he agreed. \n\nThe Sith Justicar and I took turns training each other. The eighth form really was a work of genius. An A.I. had created it out of the same process I had been using but far more efficiently. Truth is there were few new moves, but it was how those elements were put into practice. The great part of this new style was that it worked one handed or two handed as well. I had to respect him he was a dedicated student and I wished I had run into him instead of my miscreant vampiric daughter. We parted on good company and I dropped him off on Tatooine on my way back to Ossus and my portal back to the Marvel Universe.\n\n\"Hey Bud,\" A voice called out from the depths of the cantina.\n\n\"Who is it?\" I asked as the figure made a dramatic entrance. He was short, had a thin build, and was aquatic, definitely aquatic with his webbed feet and duck billed features. \"Who the hell are you?\" I asked the back lit creature.\n\n\"My name is Howard.\" He said as he stepped out and extended his hand to shake. \"I was wondering if I could get a lift.\"\n\n\"Sure. It's a four-day ride back though.\" I warned him. \n\n\"That's fine, I got enough booze to hold me for that long.\" Howard replied pointing to the pig-like Gammorean and the crates at its feet. \"Here, hold onto this for later.\" He said handing me an ornate gold coin. \"Okay, let's get going. Chop-chop Grizbang! Off we go!\"\n\nM3: \n\nI had returned to the Marvel Universe with Howard in tow six months ago. We had parted ways at the portal after I was kind enough to carry and load the last remaining crate of booze into the trunk of a now familiar cab. I waved as he and Harry drove off and I returned to the Sanctum Sanctorum. Over the next few months I had fought aliens, demons, and villains alike. In between Steph, Bryce, and the Storm Sisters my free time had been spent training and mastering both combat and my vampiric skills. Anackire's gift was far more profound the deeper I dug. \n\nI was staring up at the ceiling when Steph's arm flopped over my chest while she slept. I saw the flashing green zero above her head and grinned triumphantly at a job well done.\n\n\"You are awake.\" She muttered softly. \"And you are grinning... again.\"\n\n\"Says the Screaming Sorceress.\" \n\n\"I... uh... yeah.\" She giggled.",
        "\"It is so good to hear you laugh.\" I said. \n\n\"OOH!\" Steph cried out as she sat up arms flailing around. \"What the actual hell?!\" She declared holding up my official S.H.I.E.LD. wrist communicator. \"Natasha... really!\"\n\n\"She might be in danger.\" I suggested.\n\n\"She might be in heat.\" Steph laughed. \"Fine. Answer it.\"\n\n\"'Bout damn time Ghost I mean Jackal!\" Natasha snapped. \"Are you alone? No. That she-witch is listening in, isn't she?\"\n\n\"You will call her the Sorceress Supreme and show some respect.\" I said as Steph licked her lips.\n\n\"I get all hot and bothered when you take control.\" Steph whispered.\n\n\"She's sucking your cock, isn't she?\" Romanov asked.\n\n\"No... okay yeah... now she's sucking it.\" I let out a little moan.\n\n\"Tell me about it,\" the Widow begged. \"Whoa! What are you doing?\"\n\n\"Letting you feel what I feel.\" I said as I touched her mind. \"So?!\"\n\n\"Suck it bitch!\" Natasha growled and Steph ate it up. \"Uh huh... that's more like it!\"\n\nI grabbed Steph by the hair and that ramped up the intensity. I could feel as Natasha tugged down her uniform and began diddling herself. I could feel her fingers plunging in and out. It got crazy after that. The sensory confusion and entangled consciousnesses became a blur, a good blur. The trinary climax that followed was mind blowing. Steph and I lay together as we heard Widow zip up and let out a satisfied sigh. Steph sat up swallowing and smacking her lips. She took a fingernail and nicked her neck.\n\n\"Feeding time,\" She demanded as the scent of her blood won me over. I licked the wound until it healed. \"I know you hate it but better me that some other poor sod.\"\n\n\"Thank you.\" I told her and she grinned.\n\n\"Oh yeah, by the way... I really did need your help.\" Natasha giggled.\n\n\"Get dressed hero,\" Steph purred. \"I'll portal you there.\"\n\nPause. Mission interrupt. Manual extraction underway. \n\nI awoke with a technician helping me sit up. I was out of the game and my body felt heavier than I remember. I sat on the edge of the bed while I acclimated to flesh and blood. It wasn't a bad sensation just sensory confusion. I wiggled my toes, twiddled my fingers, and moved my arms across my chest a few times. I stood up slowly and followed him to the cafeteria. I was starved after hours inside the game. The other play testers were being brought out. We huddled around a table as we ate and shared some of our experiences. We were warned to avoid details so we didn't spoil quests and plot lines that others might not have experienced yet.\n\n\"Booker, is that really you?\" One of the female gamers asked.\n\n\"Yeah, why are you asking?\"\n\n\"Well, look at you!\" She added and the others agreed.\n\n\"You can look after your meal.\" One of the technicians suggested.\n\n\"So, have any of you discovered any of the princesses yet?\" I asked and they all shook their heads. \n\n\"I got killed by something in Central Park.\" Charlie the engineer blurted out. \"I never saw it though.\"\n\n\"Was it a vampire?\" I asked and they all said they had encountered vampires.\n\n\"No, it got me too. I had seen the news article about the feral dogs being killed. I went in to check it out.\" Mike the programmer stated. \"The next thing I know I'm back in the white room waiting to respawn.\"\n\n\"I tried three times,\" The pro gamer growled. \"I gave up after three times. What about you Booker?\"\n\n\"I ran into Blade in the park.\" I said. \"Maybe I didn't go deep enough.\" I stated feeling bad that the Exomorph was probably responsible.\n\n\"What level are you at?\" Charlie asked everyone. \"I just broke level ten.\" The others were slightly above or below that. \"Booker?\"\n\n\"Um... sixteenth.\" I said and they all looked at me in shock. \"Did you find the hidden training area?\"\n\n\"What secret training area?\" They all asked.\n\n\"When I got into the white room the A.I. told me to look for anything out of the ordinary. I spotted something and it led to that training area. I spent a while there.\"\n\n\"What kind of training?\" Mike asked and I looked over at the technicians and they told me to keep it simple.\n\n\"Well, without spoiling things I guess I would describe it as combat and magic training.\" \n\nThe group broke up and I needed a nap. I returned to my room and checked out my reflection. It felt weird seeing myself after so much game time without one. I had grown accustom to either Susan or Steph shaving my face or trimming my beard for me. I took off my shirt and the changes were drastic. I had lost every ounce of fat and packed on layered muscle. Had the game done this somehow? It had to be. The doctor that had scanned me called out from the hallway.\n\n\"Booker, so it is true. I need another scan.\" He said.\n\n\"I guess you do.\" I replied. \"After you.\"\n\nWe returned to the examination room and I was scanned a second time. He whistled when he compared the two scans. I waited patiently as he and an A.I. cross referenced the two. He made a perplexed face and took out his phone. \n\n\"I need to speak with Ms. Shaw, it is Dr. Wallenstein.\" He stated. Long pause. \"Kat, it is Henry. Remember when I mentioned that one in a million chance. I am sitting with him. Great! We'll be here. Bye.\"\n\n\"Was that 'the' Kat Shaw?\" I asked and he chuckled.\n\n\"Yes. This is one of her pet projects. I'll let her explain what happened to you. It was her genius that made this possible. Want a beer or something to drink while you wait?\"\n\n\"Nah. I'm good.\"\n\nI didn't have long to wait. She arrived ten minutes later. She was dressed in a steel gray suit with dark thin pinstripes. Her long red hair was down and loose. I had seen her on TV dozens of times as the face of Numenor since her brother's death. She didn't look anywhere near her fifty something age. If I had to guess her age it would barely in her twenties. I got to my feet as she entered the room.\n\n\"I'll be damned.\" Were the first words out of her mouth. \"I've checked his stats on the way over. Did you compare his time in game compared to the others yet?\" She asked addressing the doctor.\n\n\"No. Why?\" He replied.\n\n\"Pull up his full file.\" She ordered as she stood next to me.\n\nThe A.I. created a holographic screen and a series of pie charts showed all the play testers statistics. The largest wedge in all those charts was mine. The largest discrepancy was my in-game time. The others had a few months at most while I was two years and going. She pulled up my synaptic activity and shook her head. The next screen showed my neural pathways and again she seemed amazed.\n\n\"No damage or weakening of brain tissue.\" Kat stated.\n\n\"None. He thrives on it.\" The doctor replied. \"I don't get it.\"\n\n\"I do.\" Kat smiled as she turned to face me. \"Can I see?\"\n\n\"Sure.\" I said as I removed the bright green scrubs. \"Tada.\"\n\n\"Damn Booker, can I call you Booker?\" She purred as she walked around me.\n\n\"Ms. Shaw you can call me anytime.\" I growled as I placed my hands over my growing junk.\n\n\"Kat. Call me Kat.\" She demanded. \"There is something you need to know. You were given two injections. One of them established a cluster of nanites in your brain that acts as a mind/machine interface.\"\n\n\"Just like in the game.\" I said and she seemed surprised. \"Archimedes injected my character with them so he could experience physical sensations, mainly sexual ones.\"\n\n\"Interesting. Who wrote the Archimedes script?\" Kat asked and a screen showed the author. She tapped on the programmer's name. \"Jim... Kat. Tell me about Archimedes.\"\n\n\"Archimedes... just the standard in game model. Why?\" Jim explained sounding concerned. \"Did it mess up?\"\n\n\"Depends on what you call a mistake. Would Archimedes inject a player avatar with a machine/brain interface to experience sex?\"\n\n\"Umm... no... did he? Of course, he did, or you wouldn't be asking me. Which character was it?\" He queried and I told him. \"Ghost Fire... hold on just a sec... holy shit! What the hell happened? I don't get it. He shouldn't be acting on his own like that. Do you want me to reset him?\"\n\n\"No! Hell no!\" Kat snapped. \"Keep monitoring the progress in that game for me. Have the others look over Ghost's data and see if there are any other interesting aberrations. Kat out.\" She terminated the call and smiled. \"Would you like to work for me Booker?\"\n\n\"Hell yeah... I mean... yes.\" I said too excited to speak.\n\n\"Great! Get some rest and we'll be watching, but don't let that impact your play style. I want you to have fun.\" She stated quite intensely.\n\n\"Can I ask a question about the game?\" \n\n\"Ask away. I know most of the storylines.\" She replied.\n\n\"I met a teacher early on. A character that went by the name of Nightwind. Do you know him?\" I asked watching her reaction closely.\n\n\"You found him. No wonder your stats are so damn high. He is an old friend of mine. He is also play testing the game. Who knows you might run into him again in another persona?\" Kat chuckled. \"I have to go and look over your data. Have fun.\"\n\nI watched her walk away and I wondered if Snow's ass was patterned off Kat's. I dressed and returned to my room. I plopped on my bed and slept. After my allotted time I was given the okay to return to the game. I was excited knowing that Kat might be watching me in action. I slipped on the gear, closed my eyes, and returned to the scene that had been frozen.\n\nGame paused. Preparing to restart scene. Resume.\n\nNo time had passed since I had been out of game. Natasha, the Black Widow, had called for help and I needed to clean up before I could join her. A quick shower to wash up and I was dressed and ready. Steph kissed my cheek and sent me on my way. Widow was pouring herself a drink while Hawkeye slept soundly nearby. She offered to pour me one and I declined. She dropped ice into the whiskey and tipped it back. \n\n\"That was fucking intense!\" She said after taking her first sip. \n\n\"What was?\" Hawkeye asked as he stretched. \"Oh, hey Jackal. Did I miss something?\"\n\n\"Nah.\" Widow laughed. \"Tell him about them.\"\n\n\"Them?\" I said and then the waves of tension between them came in like static. \"Are you two fighting again?\"\n\n\"NO!\" They both said.\n\n\"It is just a little misunderstanding.\" Hawkeye said. \"That's why she called. We need your help. A team up, y'know.\"\n\n\"Whoa!\" I chuckled. \"I didn't know the Widow was into that sort of thing.\"\n\n\"Only when the mission requires it.\" Natasha purred.\n\n\"I fucking knew it!\" Hawkeye said stabbing an accusing finger at her. \n\n\"Get over it Clint.\" She replied flipping him off. \"It was a one-time thing.\" She lied and poorly at that.\n\nAfter some more bickering over whether Natasha was into anal sex or not, I settled in and closed my eyes. They would tell me what was so damn important when the time came. \n\n\"Can we talk business now or at least get to me tapping Widow's ass.\" I said and that set Clint off on another tirade.\n\n\"You are just plain evil.\" Widow giggled. \"There are two of them. One is an archer the other is a swordsman. He fights two handed style and is at least as good as I am.\"\n\n\"You want me to tip the balance.\" I said and she nodded. \"I got this. Archimedes... aw fuck! I forgot. Do we have any intelligence on their whereabouts?\"\n\n\"Not yet. Reed still pissed off about Susan moving out?\" Hawkeye asked.\n\n\"Yep. On the positive side, he still thinks I am dead. On the bad side he yanked everyone's access to Archimedes, including Susan.\" I explained. \"What data do we have?\"\n\n\"They're stealing rare historical artifacts. They range from a Chinese mummy to the Star of Trinity. All of them are museum pieces and only the gem could be altered and sold easily.\" Widow said as she poured herself another drink.\n\n\"What about the Avengers?\" I asked.\n\n\"Off world,\" Hawkeye said staring at Widow's ass intently. \"This one is ours.\"\n\n\"What's the plan?\" I asked and Widow laid it out for us. \"We find out their next target, stake it out, and ambush them.\"\n\n\"What is their next target?\" I asked and they both shrugged. \"I see. Let's see if we can't figure it out.\"\n\nWidowed sobered up while Hawkeye primed his bows and tech arrows. I just meditated and wondered what this pair of thieves was up to. These thefts had to have a meaning besides the objects themselves. I looked over the list of items and it was a real variety just as Widow had said. I glanced at the value of the items and a pattern emerged. \n\n\"Hey Natasha... Hawkeye... did you look at this list?\" I asked.\n\n\"I told you we missed something.\" Widow purred as she plopped into my lap. \"Show me.\"\n\n\"See the values of these three items here.\" I said pointing to them even as Widow ground her ass against me.\n\n\"How did you do that?\" She asked in a hushed voice. \"I came so hard my knees damn near buckled.\"\n\n\"Ninja magic.\" I replied. \"There is going to be a theft tonight. I don't know where, but it will involve a Chinese item of great value.\" I said loud enough for Hawkeye to hear.\n\n\"I'm on it.\" He said touching his commlink. \"Director? We believe there is going to be another theft tonight. Yes. Chinese and of great value. Yeah. We picked out a pattern in the thefts.\" He touched the link again and talked to us. \"They'll call back when they find something.\" \n\n\"He looks pissed.\" I commented.\n\n\"Angry sex is the best sex. We got time.\" Widow laughed as she launched herself at Hawkeye and drug him into the bedroom of the safe house.\n\n\"Great.\" I muttered as I listened to them go at it for the next thirty minutes.\n\nThe stress level dropped to zero when they reemerged. Hawkeye was in a great mood and Widow appeared to be all smiles. \n\n\"Have you ever heard of a murderer that hides one victim among many?\" I asked and Widow perked up.\n\n\"You think they are concealing their real targets among a string of them?\" Hawkeye asked.\n\n\"Yep. Three of the thefts were exceptionally rare while the others were museum pieces. Sure, you could sell them to private collectors if you have them lined up ahead of time. But the others have a different feel about them. Call it a hunch.\"\n\n\"I lay money on your instincts.\" Widow said sending mixed signals to Hawkeye and his expression screamed confusion.\n\nTheir commlinks chirped and we had a target. A Saudi collector had announced a dinner party where he would show off the heart of his collection a Chinese death mask. S.H.I.E.L.D. provided all the data we would require slipping in unnoticed and ambush the thieves. I decided to remain outside in case the thieves got past Widow and Hawkeye. I looked over the area and examined how I would attack the problem. I pondered an entrance from below but the sewers below were too narrow and far too easy to set a trap and become captured. They would choose an aerial assault or disguise themselves as guests and walk in.\n\n\"Can you get me the guest list?\" I asked.\n\n\"Already got it. What are you looking for?\" Widow asked. \n\n\"Princess Shuri... Wakanda! Holy shit! Maybe she's the target.\" I exclaimed. \"I'd kill for an ingot of vibranium.\"\n\n\"You shouldn't know about that.\" Widow said eyeing me suspiciously.\n\n\"We'll keep an eye out for her.\" Hawkeye said and then added. \"Is she cute?\"\n\n\"Yeah.\" Widow replied with a smile. \"And as smart as Stark without the egomania.\"\n\n\"Hmm.\" He mused.\n\nThirty minutes later I was perched outside the office building overlooking the brownstone home of the Saudi diplomat. Widow and Hawkeye walked in through the front door. Widow had her comm open and I got her narrative as she moved among the rich and powerful. The stunning redhead was a center of attention. It was a two-edged sword. She couldn't exactly sneak around looking that good.\n\n\"Natasha!\" A sensuous voice called out in a sultry Wakandan accent.\n\n\"Shuri. Looking good in that dress! Is that silk or vibranium?\" Widow replied. \"Doesn't hide much.\"\n\n\"I want to make a good first impression now that my country is dealing with the rest of the world.\" Shuri replied. \"You are very tense. Are you on mission or just sexually frustrated?\"\n\n\"Both.\" Romanov replied and they both laughed. \"What would I have to do to get a brick of vibranium? It is for a friend. No, not Hawkeye.\"\n\n\"You Russian tart you!\" Shuri laughed. \"Is he well hung?\" Silence. \"Oh really! Who is it and what do they want it for?\" She asked and I felt my throat go dry. Widow had asked her.\n\n\"Have you heard of the Jackal?\" Natasha asked.\n\n\"Are you kidding me. Susan sent me the selfies of her and his... you know. I heard he carries around an energy weapon of some kind. Maybe I could pick his... brain.\" She purred. \"Why is it every time I see you it ends up with nudity and me regretting things a bit.\"\n\n\"Remember your 'Cage' match?\" Widow asked referring to the hero Luke Cage and I heard Shuri let out a low growl. \"I made that happen.\"\n\n\"Yes. You. Did.\" Shuri said her voice dripping with hunger. \"You hook me up with Jackal and I'll hook him up with enough to get the job done.\"\n\n\"Done and done. I feel like a pimp.\" Widow laughed.\n\n\"We can share, just like last time.\" Shuri promised.\n\n\"That is why you are my favorite princess.\"\n\nI moved around the building keeping an eye out below. That is how she got the drop on me.\n\nThwip! Thwip!\n\nOne moment I was clinging to the side of the building and the next I was stuck to it by a sticky white substance.\n\n\"Ha-ha! Got ya!\" The costumed woman declared above and behind me. \"Sit tight evil doer!\"\n\nI recognized her costume instantly. It was none other than Spider Gwen. Damn! I thought Widow had a fine ass. I let out a deep guttural noise as I watched her climb down to me. Her ass high in the air and on display.\n\n\"Holy Moley!\" I gasped as my armor tightened. \n\nWhy was there a shimmering gold icon over her head? I looked it up on my HUD and nearly cried out a second time. Gwen was a virgin! Thank you, dark mother of shadows.\n\n\"Do you surrender?\" She asked as she moved along side.\n\n\"I'm not a bad guy Spider... Girl?\" I said acting oblivious. \"I am on a mission for S.H.I.E.L.D. and you are hampering my efforts to keep an eye out for two thieves.\"\n\n\"You work with Fury?\" She asked her voice cracking and then she continued determined. \"How do I know you work for him? Where is your I.D.?\"\n\n\"Here.\" I said as I deepened the shadows around both of us and let it draw us in.\n\n\"Yikes!\" She cried out as the pocket dimension gobbled us up. \"Where the hell am I? Why can't I move?\"\n\n\"You are in my web now.\" I said behind her. \"But I will release you to prove I'm not a bad guy.\"\n\n\"O... kay...\" Gwen whimpered with a mixture of fear and something else.\n\n\"Unless you want to stay.\" I asked. \"Do you like being tied up?\" I continued my hand barely brushing her ass.\n\n\"Hey! Hands off shadow man!\" She cried out unable to hide the lilt in her voice.\n\n\"My name is Jackal.\" I told her.\n\n\"No way! I've heard about you. You've worked with Doctor Strange!\" She said her hero worship showing. \"They call me the Ghost Spider. Why did you touch my butt?\"\n\n\"Are you kidding?\" I asked and she remained silent. \"You have an amazing ass... butt. Did I offend you?\"\n\n\"No!\" She said a little too loud. \"I mean. I was surprised that's all.\"\n\n\"I'll let you go. I have a mission to tend to.\" I said and waves of disappointment radiated off her. \"You can hang out if you want. Don't interfere though.\"\n\n\"Thanks!\" She said and I returned us to the real world. \"We are on the roof. That is so cool!\"\n\n\"Our little secret.\" I told her. \"I trust you to keep it.\"\n\n\"Yes. You can count on me.\" \n\nThe evening wore on and Gwen's proximity was difficult to ignore. I answered the occasional spontaneous question honestly and she had both a keen mind and great instincts. The party was about to break up when all hell broke loose. Gwen sensed it just as Widow called it in.\n\n\"Flash bang grenade! Can't see shit! Keep an eye out!\" She hollered into her commlink as the effects of the grenade compromised her hearing.\n\n\"Sit tight!\" I ordered.\n\nI sensed the arrow with enough time to draw my weapon and bat it aside. It should have cut it in half, but the alloy shaft proved immune to the energy blade. I deflected it away from the building and I hoped it didn't hit anyone on the way down. Three more arrows followed the first. Two were aimed at me and one at Gwen. I batted two of them away and tried to telekinetically alter the path of the third and failed.",
        "\"What the fuck?!\" I snarled as Gwen easily dodged the arrow.\n\nI launched myself into the air and activated my suits glide wings. My weapon was still in my grip but deactivated. The enemy archer took aim and waited. They were taking their time. I was within a hundred feet when I lashed out and sent out a wave of telekinetic energy. The archer brought their bow across their body protectively and nothing happened. They should have been slammed against the side of the house. The next arrow crackled with energy and sped from the bow at hypersonic speed. I had to use my weapon this time and it barely deflected the projectile. The black blade slammed into the spine of the bow and sputtered. It nearly went out and I went on the defensive. The bow, like the last arrow, sizzled with a fierce energy, the energy from my weapon that it had stolen.\n\n\"Nice bow.\" I said as the archer gripped the bow at the middle, gave it a savage twist, and pulled the two halves apart. I suddenly realized how sharp the edges of the bow appeared. \"Shit!\" I cursed as I dodged the razor-sharp blades.\n\n\"Potty mouth.\" They said with a clearly modulated voice.\n\nAs I dodged, I looked for any open spots in their technique as well as their armor. If I could reach skin I could try and stun them. While they were a gifted marksman their melee skills sucked. I knocked one of the blades from their hand. I was about to finish disarming them when the other thief arrived. They saw the way things were going and I spotted the grenade sailing through the air. I shifted through the shadows away. By the time I recovered they were gone.\n\n\"Fuck!\" I screamed.\n\n\"They got away.\" Gwen stated the obvious. \"You were amazing!\"\n\n\"How the hell can you say that?\" I asked still fuming. \"Sorry. I didn't mean that.\"\n\n\"Pfft. I understand your frustration.\" She said and my mind went straight to sex. \"Take a look.\"\n\n\"Holy shit!\" I cursed seeing the devastation the last arrow had done to the building we had been observing from. \"That confirms my suspicion.\"\n\n\"Explosive arrows?\" Gwen offered. \"No. What is it then?\"\n\n\"Vibranium.\" I said. \"The first arrow absorbed part of the energy from my sword. The last one was from the bow after it had absorbed my Force Push. The bow transferred that energy into the arrow, and it did that.\"\n\n\"Whoa!\" She said. \"What is vibranium?\"\n\n\"That is classified Ghost Spider.\" Widow declared as she appeared below us.\n\n\"Got to scoot. Oh here, I collected the arrows just in case.\" Gwen said as she handed me the vibranium missiles and clapped me on the back. \"See ya later Jackal.\"\n\n\"Later Spider.\" I replied as I placed the precious arrows into my inventory and climbed down to the balcony, I had fought the archer on. \"Your princess has some explaining to do.\"\n\n\"Hold that thought. I need to debrief you.\" Widow said quite seriously.\n\n\"Fine.\" I said before chuckling. \"I am commando right now.\"\n\n\"Really?!\" Shuri purred. \"Maybe,\" She said licking her lips. \"I could be there for this 'de-briefing' yes?\"\n\n\"Maybe. Let's go back and let the locals deal with the theft. I am more interested on their weapons.\" Widow said spitting out the words angrily. \"Let's go.\"\n\nThe cloaked aircraft appeared and lowered it boarding ramp. The skilled pilot brought the end of the ramp next to the balcony. Shuri touched the necklace around her throat and the dress with the plunging neckline and slit up the side was replaced with a skintight body suit. I watched her leap up and onto the ramp. \n\n\"I've had that.\" Widow whispered in my ear before following Shuri.\n\n\"Dang.\" I said as Hawkeye and I climbed aboard.\n\nThe Quinjet raced off to meet up with the Helicarrier Blackhawk. It was named after an enigmatic World War II war hero that led commando raids against the Nazis. He was a gifted pilot and a skilled strategist. The newly christened carrier was in the middle of its shakedown cruise in and around New York state. I wondered if Nick Fury would greet our plane. How cool would that be?\n\n\"She placed a tracker on you.\" Natasha informed me.\n\n\"I know. She's just starting out. I didn't want to hurt her feelings.\" I said and Widow made a face. \"What?!\"\n\n\"You want to fuck her, don't you?\" Natasha asked just as Shuri returned from her tour of the front of the jet.\n\n\"Of course, he does,\" Shuri growled thinking Natasha was talking about her. \"Have you seen this ass?!\" She said as she gave it a playful smack. \"Mega bootie and poor Widow's is so inferior!\"\n\n\"Fuck you princess chokes a lot!\" Widow fired back.\n\n\"One time!\" Shuri growled. \n\nI tried and failed not to laugh. That brought the ire of both women. I threw up my hands in surrender and they smiled at how good a boy I was. Thank goodness Hawkeye was playing copilot and didn't see the expression on Widow's lovely face. The pilot informed us over the intercom that we had arrived and to buckle up. The ship shook a bit as it vertical thrusters lowered us onto the deck of the carrier. The ramp lowered and we disembarked only to be met by none other than Nick Fury. He fixed us with his one good eye and frowned.\n\n\"Nice job everyone.\" He said and offered me his hand. \"You did your best given the limited intelligence you were provided.\"\n\n\"Thank you.\" I said shaking his hand.\n\n\"Follow me so we can get you debriefed while the events are fresh in your mind.\" He said almost smiling.\n\n\"Thank you, Director Fury.\" I replied and he looked over his shoulder.\n\n\"Did I get a promotion I didn't know about?\" He chuckled and my confusion was clear.\n\n'Welcome Jackal, though I do prefer Ghost Fire, it is far sexier.' A female voice said gently touching my thoughts.\n\n'Thanks.' I sent back even as I raised my defenses. \n\n'Fear not, your secrets are sacrosanct here.' She promised. 'I find it simpler to use telepathy to maintain the S.H.I.E.LD. network. It is faster and more secure.'\n\nI was brought to a debriefing chamber. It was comfortable if a bit starkly decorated. Less distractions were better for questioning I assumed. I was seated alone briefly until the director herself arrived. Why was she doing this? Weren't there better trained agents for this sort of thing?\n\n\"There are.\" She declared as she entered the room. \"I brought coffee. I have been up late again and need a little pick me up. So, it is true, you are a vampire.\"\n\n\"I am director.\" I said trying to keep my excitement at bay.\n\n\"I suppose official introductions are required. I am Doctor Jean Grey the current Director here.\"\n\n\"You already know my name, and I like to think of myself as a paranormal investigator of sorts. I began as an outsider looking in but now, I am a part of it.\" I said.\n\n\"I would ask you how it happened, but my immediate concern are these thefts. I sense a pattern, but I haven't determined its full shape yet. Please tell me what happened. Stop. Tell me all the facts relevant to the case.\" She said smiling.\n\n\"I'll leave the naughty thoughts out.\" I began and her smile widened. \n\nI launched into events leaving out Widow's sitting in my lap, my desire to take Gwen's virginity, and how smoking hot I found Shuri and her. The key parts of my story were my belief that the archer was armed with a vibranium bow and arrows. I described in detail the effects of my telekinetic attack and how the bow had drained my weapon.\n\n\"I concur. The probability that the weapons weren't vibranium is near zero. Your account and observations are greatly appreciated. I must speak with Princess Shuri. These are disturbing events and I am sure she will want to explain how thieves are carrying two hundred million dollars' worth of that rare alloy on their persons.\"\n\n\"You think the other thief had a vibranium weapon as well.\" I said and she neither confirmed nor denied my theory. \"I understand.\" \n\n\"Let's go over your statement one more time to make sure I haven't missed any important details.\" Director Grey ordered and the scene slowed and then stopped.\n\nA bright yellow screen appeared in the middle of the air. It read critical update and sorry for the inconvenience. There were flashes of text and I barely picked up item updates, armor skins, and additional side quests. It didn't seem to take very long from my perspective. The screen vanished and Jean Grey stood and thanked me for my patience. The scene ended and I got to my feet. A moment later I received an alert on my HUD. \"What is it now?\"\n\nI pulled up my HUD and looked at the message. \n\n'Previously inert object has become active.'\n\nWhat the hell does that mean? I went through my stuff and there it was. The amethyst crystal I had pulled off the guy outside the Baxter Building was glowing. While it was active any power or ability it possessed was still a question mark. Did I have to equip it to find out? That might be dangerous but ah hell no guts no glory. I clicked on it and it automatically attached itself to the Helm of Anubis. That was fucking strange. I pulled up the mask and looked it over. I read over its abilities and knew them by heart. \n\n'Heightened senses, check. See the invisible, check. Protect against sensory attacks, right. Secondary Item: Eye of Bast. Affinity for cats, dragons, improved sex craft scores.'\n\nDragons? Why the hell would Bast, the cat goddess, be tied to dragons? Makes no sense. I looked at my skill tree and saw that the stone had given me access to vampiric seduction skills. Sweet! Enthrall sounded interesting. Summon from afar reminded me of the classic Dracula movies. Enslaving bite let me bite someone without killing them, but it also bound them to me on a deeper level than just normal seduction. I wasn't sure I'd put that one to use. I was okay being an antihero but not a full-fledged villain.\n\nI lowered my HUD and the scene resumed. Director Gray thanked me and an agent waiting outside took me to see Widow and Hawkeye. As we neared the command deck, I heard Nick Fury and a woman arguing. They were really going at it.\n\n\"...just listen to my suggestion!\" She argued.\n\n\"I read your proposal and it is an exercise in stupidity and needlessly dangerous!\" Fury snapped. \"Drop it Stark! This conversation is over!\"\n\n\"The hell it is!\" She said as I stepped onto the command deck. \"What the hell are you gawking at?!\"\n\n\"If you want people to take you seriously a cooler demeanor works wonders.\" I fired back and Toni Stark blinked as if slapped.\n\nToni Stark was a strikingly attractive woman dressed in a handmade suit, short cropped black hair, and piercing blue eyes. The rest was hidden under her suit. She looked me over with the same clinical eye I had done with her.\n\n\"Damn Toni, he put you in your place!\" Fury laughed his ass off.\n\n\"He's right. I let my passions get the better of me.\" She said as I joined Widow by the great bay window. The sun was just rising, and I guessed around six in game hours had passed during my debriefing and the update.\n\n\"Hell, of a view.\" I commented. \"Anyone ever have sex up here?\" I blurted out feeling a little impervious now.\n\n\"May-be.\" Nick offered with a definite evasive air.\n\n\"I guess I'm done here.\" I said. \"When do I get a lift home?\"\n\n\"Slow your horses Jackal, or should I call you Ghost.\" Fury said channeling his Samuel L. Jackson aspect. \"The director might have a job offer for you. Being a private dick is cool and all, but uh working for us might have its benefits.\"\n\n\"I'm listening.\" I said feeling a sense of excitement building.\n\n\"I hear you done pissed off Mr. Fantastic. Care to share how you managed to do that?\" He asked letting his serpentine smile show itself.\n\n\"Ghost?\" One of the technicians muttered. \"Not the Ghost?!\" He blurted out and seeing my confusion he held up a tabloid magazine. The front-page article's tag line was 'Who is Susan's Friendly Ghost?' \"Were you fuck... I mean sleeping with Susan Storm?\" \n\n\"That would be indiscreet.\" I said.\n\n\"He's banging both of the Storms.\" Widow said and Nick ran with it.\n\n\"Damn Son! You must be Avenger material to survive both bitc... of them. Ahem. I saw Jenny Storm turn an A.I.M. super tank into slag. Well? Is Widow a liar or not?\"\n\n\"I...\" I began as I glared at Natasha. \"Yeah. I did.\" I admitted and my HUD chimed. My notoriety score just doubled. I guess notoriety was a new stat they added in a recent update.\n\n\"I guess I'd be upset if I found out that not only did you violate my wife but her sister too.\" Nick laughed. \"Wait, there's more. I can see it on your face.\"\n\n\"At the same time.\" I muttered.\n\n\"Speak up son! I didn't hear that.\" Nick egged me on.\n\n\"I said at the same time!\" I snapped and watched everyone on the command deck stare at me in awe.\n\n'Ding! Your notoriety score just doubled again. Great job!'\n\nWhat good was notoriety anyway? I was about to find out, in spades. I received a notification via my HUD about the brand-new notoriety stat. The higher the stat the more people recognize you and the larger your fan base. It will allow for more interesting and spontaneous encounters. Even heroes can succumb it if you learn how to use it. Good hunting! \n\n\"I prefer going by Jackal, Reed thinks Ghost is dead.\" I said and one of the female technicians made a face. \"Well, fuck... I guess you can call me either now. Hell, let's just stick with Ghost Fire.\"\n\nWell, that made things more interesting. I asked about a tour of the carrier and to my surprise Nick Fury agreed to it. To my pleasant shock the Black Widow volunteered. She walked in front of me and my gaze instantly went to her ass. When I looked up, she had caught me checking her out. Instead of bitch slapping me across the deck she smiled. \n\n'Even heroes may be swayed by your notoriety.'\n\n\"What's been going on since that little vampire incident?\" I asked and that triggered an interesting piece of dialogue.\n\n\"Two incursions into Latveria because of weapon trafficking, a whole new scanning protocol to detect the undead and other hostiles, and did you really take on the Storm Sisters at the same damn time?\" Natasha purred.\n\n\"Um yeah.\" I admitted.\n\n\"MMMMMM impressive!\" She moaned. \"Elevator.\"\n\nWe stepped into the elevator and the moment the door closed the lights inside turned scarlet and she pounced. My back hit the rear of the elevator as she kissed me. We tore at each other's uniforms. I told her how much I appreciated her S.H.I.E.LD. issue lingerie. \n\n\"If you like that you're going to love what I call the Widow's Kiss.\" She growled as she knelt in front of me.\n\n\"What is the... UNNNNNN!\" I gasped when she took my entire length from the beginning. \"OH Shit! So that's the Widow's Kiss. I give it a ten out of ten. Wait until you feel my Double Dragon.\"\n\nWidow's eyes went wide in surprise. She closed them and focused on sucking me off. I grabbed her by the back of the head and she just moaned. I slipped my fingers into her short-cropped shoulder length hair and made a fist. It was time to tame the infamous Widow. I moved my hips while Natasha did the rest. \n\n\"Damn, I am close already!\" I growled as that tongue of hers worked its sensual magic. \"Suck it Natasha.\" I whispered tapping into my Kiai Jutsu skill. \"That's it!\" I said as the subliminal message hit her subconscious. \"Blink twice for me love sponge.\" She did and now my tiniest desire was now her top priority. \"Get ready to swallow.\"\n\nI howled as I climaxed, and she dutifully swallowed every drop. She licked her lips as she stood up. It was my turn to make her scream. I knelt and she placed her foot on my shoulder leaving her wide open for my assault. I returned the favor and activated my serpent tongue attack. It always felt weird when it elongated, thickened, and slithered deep inside of her. I felt her nails dig into my scalp and heard her yelp of surprise. Luckily, I had the opportunity to practice with this talent. As it undulated inside of her the battle-hardened warrior melted like butter.\n\n\"Fuck me with your tongue you dirty scoundrel!\" She cried. \"We have twenty more minutes before my little program resolves itself and the elevator begins moving again. What could possibly be better than this?\" She whimpered.\n\n'This!' I thought as I waited for just this sort of prompt.\n\nI pulled back a bit and my second tongue lashed out and went to work inside of her ass. It went in a lot easier than my cock was going to. The Widow shrieked in surprise as I violated her back door. She cursed and thrashed as both tongues worked her over. I watched her carefully and when I detected the signs, I brought my index finger into the fray and teased her clit. Her hands slapped the walls of the elevator as she climaxed. I pulled my tongues back into my mouth as that perfect ass of hers slid to the floor as her knees gave out.\n\n'Attention! You've unlocked Black Widow's alternate appearance number 5! Activate?'\n\nHell yeah! I accepted and watched as we stood opposite one another. Some changes were subtle while the long mane of wavy red hair was obvious. She was a bit softer around the edges, but her eyes were fiercer and more intense. I kissed her and she melted in my grasp. Her body conformed to mine as I lifted her up and impaled her hands free. My erection sought out her pussy and found it. I buried it slowly but bury it I did. I was balls deep in the Widow and damn it felt amazing. I had no idea how the technology worked but it felt as real as anything outside the game. I believed they tweaked the sensory input recently. Widow's pussy felt amazing! Her legs went around my back and I slowly moved. Widow ended the kiss, looked me in the eyes, and said those magic words I will always remember.\n\n\"Hey mister... can you break me? Pretty please.\"\n\n\"Hold on tight little lady! It is about to get really bumpy.\"\n\n\"Make me your little cum dumpster!\" She hissed as I picked up speed. \"You're close... I can tell.\"\n\nI pulled back and slammed it home. Her back arched as she climaxed. I did it again. I went faster from them on and it felt like the elevator cable had broken and the whole thing was falling to the bottom of the shaft. Speaking of shafts.\n\n\"Fuck me!\" She screamed. \"Come on and fuck me!\"\n\nI did. I pounded her and when she begged me, beat on my chest to stop, I ignored her. One orgasm blended with the one after that and so on. My own orgasm was building up fast. I grabbed the Widow by the throat, looked her in the eye, and kissed her. When my load pulsed inside of her, she moaned into my mouth. I broke the kiss. I was panting in her ear as I recovered.\n\n\"Damn... damn... I fucking needed that!\" I gasped. \"Who do you belong to?\" I whispered weaving the last part of the subliminal spell deep into her mind. \"Tell me.\"\n\n\"You!\" She moaned. \"I am yours.\"\n\n\"How many was that for you?\" I asked.\n\n\"I lost count.\" She whispered back. \"Can I call you?\"\n\n\"Sweetheart... you get an itch that needs scratching just use the card I gave you.\" I said.\n\n\"MMMHMMMM!!\" She purred. \"Shit!\" She cursed as one of her wrist tasers sounded an alarm. \"One-minute warning!\"\n\nWe quickly dressed and a got a new alert on my HUD. \n\n'You've unlocked an alternate costume for the Black Widow. Select?'\n\nClick.\n\nThe change was drastic. Natasha's hair was in a severe updo. Not a hair out of place, thin gunmetal gray rims on her glasses, her face painted to perfection, and a soft smile on her lips. She is wearing a crisp white blouse, a black jacket with thin silver pinstriping, and a short black pleated skirt. The skirt was so damn short that if she bent over a table it would ride up and over that firm round bottom of hers revealing whether she was wearing panties. Throw in white translucent stockings, and razor-sharp stiletto heels. I had to reach up and push my mouth closed. Natasha ate up the attention. As the door opened, she whispered in my ear.\n\n\"Schrodinger's Panties.\"\n\n\"I hate you.\" I growled as I felt my cock stiffen.\n\nThe two words referred to a thought experiment called Schrodinger's Cat. You might have heard of it. A cat is placed into a box with a vial of poison. The cat can't be observed until you open the box. Did the vial of poison break? Until the box is open the cat is both alive and dead. In this case I wouldn't know if she were wearing panties or not until she bent over. She never did.",
        "\"Shuri is down that way.\" Natasha directed. \"Something just came up.\"\n\nI didn't bother asking. I followed the corridor until I heard Shuri cry out. I hoped to find her in the middle of something naughty but in fact found she was bent over a lab station watching a silvery web of shimmering alloy take shape. I didn't speak for fear of shattering the moment, so I watched. It didn't hurt that her ass was absolutely off the charts. Yes. Definitely. I was an ass man. The soft thrum of machinery wound down and the Princess caught me checking out her derriere. \n\n\"Hi.\"\n\n\"All you have to say for yourself is hi. You dare profane my backside with your lustful glances and all you can come up with is hi?\" Shuri said trying to be serious.\n\n\"I'd like to quantify the chances of a twenty-five-cent piece successfully rotating after being hurled at your backside.\" I said trying to be clever.\n\n\"So, you'd like to see if you could bounce a quarter off my ass. Is that it?\" The princess asked with a brilliant smile. \"We can try that later, if you want. Before you ask, I am seeing how spider silk infused with vibranium functions. It has distinct possibilities.\"\n\n\"Textile or superhero purposes?\" \n\n\"Both. Though it would be a huge waste of vibranium, for webbing that is.\" She frowned. \"Unless of course the web shooter has a mechanism for absorbing the vibranium afterwards. Two cartridges, one loaded and one waiting to be filled after the fact. A little quantum entanglement and hmm, needs work.\"\n\n\"It is dizzying watching you work.\" I admitted and she smiled. \"Unless of course you didn't use vibranium. You just borrowed some of its properties and added them to the silk somehow. Nah! Wouldn't work!\"\n\n\"The hell it wouldn't.\" She said and that is when I saw the genius of her A.I. at work. \"Look.\" She said using her bracelet to display a hologram of vibranium's structure. \"It isn't exactly a secret just not well known. Plenty of scientists outside of Wakanda are trying to duplicate the element without success. Here are a series of different types of spider silk. Different silks have different functions along with their individual strengths and weaknesses. The problem is creating a silk with the best of most worlds. We want light weight as well as tensile and extensile strength. Open a new project and we'll call it Anansi, after spiders and storytellers.\"\n\n\"Yes Princess.\" The A.I. replied. \"Extrapolating previous incursions into this field... adding vibranium qualities... extrapolating... projecting three possible solutions.\"\n\n\"You've done work into this before?\" I asked and Shuri nodded.\n\n\"When I was younger, I didn't sleep a lot. My mind was always switched on. I would close my eyes and envision ideas and they would crystalize there. There are thousands of these projects that I started but for one reason or another never reached fruition until another idea or element was added. In this case... you.\"\n\n\"I was just brainstorming.\" I said and she glared up at me. \"You didn't like the word just, did you?\"\n\n\"No. People never give themselves the credit due to them. Run three batches and we'll test them out. What do you say hero, want to test fire some sticky white stuff?\"\n\n\"Can you make it black, so it is harder to see?\" I asked. \"I wouldn't be using it to swing across the city.\"\n\n\"MMMMM! How would you use it?\" She purred.\n\n\"Pity we don't have a web shooter here.\" I said and she chuckled.\n\n\"Open file Spiderman mark nine,\" Shuri ordered. \"One cutting edge web shooter thanks to Nick and friends. Print two out for me sweetie.\"\n\n\"Yes Princess.\" The artificial personality complied as another workstation activated and it began printing off the components for the web shooters.\n\n\"We have time on our hands while the webbing and shooters are created... can I see it?\" Shuri asked licking her lips.\n\n\"Right here?\" I asked thinking of my recent encounter with Natasha.\n\n\"Right now!\" She demanded so I reached down and began unzipping my pants. \"Whoa! Hold on! What are you doing?\"\n\n\"You said... what the hell do you want to see?\"\n\n\"Your weapon... the energy sword.\" Shuri said and I blushed. \"Did you really want to... with me?\" She asked in what sounded like complete surprise.\n\n\"Yeah. Here take a look.\" I said handing her my weapon. \"It won't ignite unless I am the one holding it.\"\n\nShe examined it every inch of it and I wish she looked at my cock with that kind of love and attention. She made noises there were certain ticks and habits she did along with the mention of lack of sleep that made me think she was bipolar. I had a sister that suffered through it and she showed all the signs.\n\n\"Sneaky bastard.\" Shuri cursed under her breath when she examined the butt end of the weapon. \"I commend you on a very clever design. No wonder you had so many troubles against a vibranium weapon.\"\n\n\"So, I was right!\" I declared and she admitted that a small shipment of vibranium had been stolen.\n\n\"You need a backup weapon if you are going to survive another encounter. That is one of the reasons I agreed to do some research here under Fury's watchful eye. I feel responsible for the theft and the misuse of that vibranium. I brought a limited supply with me. You must decide. Do you want armor or a weapon?\"\n\n\"Armor.\" I said with little hesitation. \"A set of vibranium armor far outstrips anything I could possibly hope to acquire anywhere else. Besides, that weapon is my signature.\"\n\n\"Armor it is. Get undressed. I need to scan and analyze your current set up.\"\n\nI stripped out of it and stood naked as I looked for any other gear I could wear in my inventory. I had nothing casual to swap out to. A blushing Shuri pointed to one of the lockers at the back of the room. I walked over and shouted out as I donned an official S.H.I.E.L.D. uniform. It had little combat protection but damn it looked good! \n\n\"Where did you get this armor?\" Shuri asked as she held it up. \"I've never seen anything like this before.\"\n\n\"That is saying a lot.\" I replied. \"Mr. Fantastic gave it to me. It is a variant of the Venom symbiote. It had an A.I. interfaced with it but that has since been removed.\"\n\n\"The same Mr. Fantastic whose wife and sister in law you slept with?\" Shuri reminded me.\n\n\"Yeah.\" I said as I gained a few more notoriety points breaking the two hundred mark.\n\n'New trophy acquired: Wakanda Remembers!' +50 notoriety pts.\n\n\"Glide wings, impact armor, improved stealth features, and enhanced spider climb. Not bad.\" She said as she broke down my armor's capabilities. \n\n\"Hey, I collected these from the conflict with the archer.\" I told her as I took the vibranium arrows from my inventory. \"Will this help?\"\n\n\"Absolutely!\" Shuri smiled as she added them to the ingot, she had on her. \"This will tip the balance a bit in your favor I hope.\"\n\nI sat for the next few hours as she brainstormed, took out pieces of material, and worked. I got the classic blacksmith slash inventor montage. I was given a choice of three of the new stealth style armors to choose from. I selected the hybridized suit that covered everything from pure stealth to enhanced melee combat. The hood would accommodate the Helm of Anubis perfectly which had also been given an update. The once metallic helm and mask now gave me the appearance of a living demigod. Gone was the metal and in its place the illusion of living flesh. I would look just like the jackal headed deity. Nice! I got my second cinematic as Shuri went about her work. I didn't get tired, but she did. Just as the sun was setting, she stood, stretched her arms, and declared her work done. \n\nShe had integrated the web shooters into my new armor along with a feature on the belt that generated three types of web fluid all jet black in color. One of the fluids was centered around tensile strength and meant for entrapping villains or such. Another had a higher extensile strength and was good for drag lines or swinging about if I chose. The last was a potent blend of both, but also it was neither as strong as either of the other two. It was a nice general-purpose webbing. The shooter had a programmable dispenser that could change on the fly as it were. One released a 'burst' of webbing that could target a foe. The other would fire off a focused line of webbing in the traditional manner for travel purposes. Thank you Wakanda! It had everything my original suit had plus a few surprises. I placed both into my inventory and walked Shuri back to her accommodations.\n\n\"Thank you for making sure I got back to my room okay.\" Shuri laughed. \"Be careful. You can still get killed if that archer puts a vibranium arrow in your skull. Your suit is only a vibranium weave. It isn't pure vibranium, remember that.\"\n\n\"I need to see if they have tracked down those thieves yet. Sleep tight.\" I said and she went into her room. \"Patience.\" I muttered as I returned to the command deck.\n\nFury was just rising and holding a cup of coffee in his hand when I arrived. I asked about the thieves and he shrugged. I guess they were still gathering intelligence on them. Black Widow strolled in and she looked to be in a pissy mood. She walked right past me without saying a word. I understood that she didn't want to have her reputation tarnished by what happened in the elevator.\n\n\"Thanks for the tour.\" I said and watched her reaction. It wasn't what I had hoped for. \"Fury had you give me a tour... yes?\"\n\n\"No. What the hell are you talking about? I just got here after an Op in Latveria.\" She snapped. \"Your joke isn't funny Jackal.\"\n\n\"Lock it down people!\" Fury was hollering. \"We are code violet. There may be a shapeshifter or hostile agents using chameleon technology aboard! Someone debrief the Widow and her team ASAP!\"\n\n\"We have a missing Quinjet.\" One of the techs announced. \"It left the carrier three hours ago!\"\n\nNatasha spun around and glared at me. I tried and failed not to smile.\n\n\"You fucked her, didn't you?!\" She snarled and it was the way she emphasized 'her' that made me think this was a jealousy thing. \"Damn it all to hell!\" Her anger was more of an opportunity missed than me sleeping with a shapeshifter.\n\nShuri appeared wearing just her pajamas and looked bleary eyed as the claxons and emergency lights made everything more confusing. The princess got on her tippy toes and kissed my cheek before turning and returning to her room. When I asked her why she wanted to make sure I was okay. I cringed when I looked back at Natasha.\n\n\"Come along Agent Romanov.\" One of the security officers said. \"This won't take long.\"\n\n\"Why are you still here Ghost?\" Fury asked suddenly in my face.\n\n\"You said lockdown and...?\"\n\n\"Speaking of and... why the hell are you wearing one of my uniforms?\" He snarled as I quick launched my new vibranium weave uniform. \"Sweet duds... go find my Quinjet!\"\n\nI left the command deck and took a quick GPS check before launching myself off the side of the helicarrier. My hood automatically came up along with the Mask of Anubis. The glide wings opened too and soon I was gliding above and near Avenger's Tower. I had a flashing red line in my field of view and followed it. It was the course the stolen Quinjet had taken. Who was the woman in the elevator? Was it just a bit of technology or could it be shapeshifting? I pulled up my skill tree and sure as shit there it was basic shapeshifting. I peeked at the costs and damn that shit was expensive to master! Did I fuck a Skrull? God, I hope not. Was it a mutant? One name topped that list. Had I fucked Mystique? She was clever enough to sneak onto the helicarrier and ballsy enough to do it. If it was her why was she there?\n\n\"Ghost Fire to Fury over.\"\n\n\"Fury here. What is it Ghost? Over.\"\n\n\"Check your files and anything classified. I have a feeling it might have been Mystique that compromised your carrier. Over.\"\n\n\"Our technicians are all over that shit. Fury, over and out.\"\n\nI continued to track the rogue Quinjet from downtown Manhattan to the Bronx. I ran out of momentum and tall buildings to launch from. Sounds of loud gunfire caught my attention and I traced it to its origin. There was the jet parked decloaked in the middle of an abandoned car park. A group of kids had surrounded it. When they tried to approach it the auto defenses would be triggered and an impressive autocannon would drop down, fire a burst of three shots and then return. None of them had been stupid enough to push their luck so far. I landed behind them and they turned to face me.\n\n\"Yo dog! It is the Ghost Fire!\" One of them declared pointing to the weapon on my hip. \"Dude! You got a new costume. How sick is that?\"\n\n\"I heard you tagged both Storms at the same damn time! No fucking way!\" Another said.\n\n\"Yeah. The life of a superhero can be... aw shit!\" I said as I sensed her arrival.\n\n\"Whoa! He didn't even look back!\" Their leader exclaimed. \"I told you Ghost was number fucking one. Didn't I?!\"\n\n\"You slept with both of them?!\" Gwen growled. \"At the same damn time.\"\n\n\"Oh shit! We should like leave you two to hash tag this shit out.\" The leader continued.\n\nI activated my combat link to the web shooters. I tracked the leader's movements and when he passed in front of a light post, I snared him. The black webbing engulfed him and held him fast. Gwen let out a gasp of surprise and then she got even more pissed off.\n\n\"Now you are stealing my gimmick!\" She roared before I held up my hand. \"What?!\" She said as she sniffled.\n\n\"Hold the fuck on and calm down.\" I fired back. \"I need time to explain after I speak with this guy over here.\"\n\n\"I lost track of you when you went onboard the helicarrier.\" She said coolly.\n\n\"Who got off that jet?\" I asked the leader of the street gang.\n\n\"Just a woman.\" He replied. \"She was like smoking hot and all. She never said a word. The ramp thing came down, she walked down it, and just walked the fuck away. The plane locked itself up nice and tight. If anyone gets too close, they get shot at. We figured we could make it run out of bullets or something. Nope. It just reloaded and we were about to leave when you showed up.\"\n\n\"You've spent the last two hours messing with the jet?\" I asked and he laughed. \"All that gunfire and no one called the cops?\"\n\n\"The cops don't come to this part of the hood y'all. You gonna get freaky with spider chick?\" He asked licking his lips. \"She does look fine in that get up. Maybe you could talk her into a...\"\n\nThwip!\n\nA carefully aimed ball of webbing shut his shit down just that fast.\n\n\"NO! I am not a whore!\" Gwen snapped. \"I don't do threesomes.\" Here was the downside of a high notoriety score. \"You are as bad as Toni Stark. Iron Maiden is the embodiment of all that is bad about being a superhero. She flaunts her affairs around like a badge of honor. Some of us prefer romance to smut.\"\n\n\"I see what you mean. Look at all the trouble surrounding Spiderman. He's been through so many powered and normal women it isn't funny.\" I said and watched her reaction. Just as I thought it hit a nerve. \"You admire him, don't you?\"\n\n\"I did. Past tense.\" Gwen admitted.\n\n\"Can I go now?\" The gang leader asked after removing the webbing somehow.\n\n\"No.\" I said reaching out and attempting to touch his thoughts. I ran into the same barrier I had when I initially scanned the gang upon my arrival. \"Are you a mutant?\"\n\n\"No.\" He squirmed.\n\n\"Any hidden superpowers I should know of?\" I asked as Gwen picked up on my line of questioning and took on a defensive position.\n\n\"Not really.\" The leader chuckled.\n\n\"What did you steal from the helicarrier?\" I asked as he oozed through the spaces in the webbing and reformed.\n\n\"Mystique!\" Gwen exclaimed raising her hands.\n\n\"Wait! Listen! I only tapped into their files to...\" She never finished the statement because Gwen body slammed me to the ground so that the vibranium arrow aimed at my back missed.\n\n\"Fools!\" Mystique cried out as she raced off into the dark while a masked figure armed with a gleaming sword closed the distance. \n\nThe archer backed up the swordsman with clean precise cover fire. I took on the archer while Gwen harassed the other. I had learned my lesson and didn't draw out my weapon. Instead I defaulted to form five, Shien, and the art of arrow catching. The archer took aim and fired. I snatched the arrows out of the air and kept them. I placed them in my inventory as fast as I could. Unlike many games this archer had a finite number of vibranium arrows. After I managed to snatch twenty out of the air, they switched to carbon fiber missiles. The archer's frustration turned to rage, and they charged me. Once again, they broke the bow into two swords and kept up the offensive. \n\n\"Now, that is more like it.\" I commented as Gwen kept the swordsman equally frustrated.\n\nAll was well until the bolts of mystical energy came out of nowhere. The villains used our confusion to escape. While we may have been thwarted, we knew more now than we did before. There were four of them. Mystique was the only one we had a name to, but she had an archer, a swordsman, and now a sorcerer working for her. Steph showed up dressed for battle when she sensed the use of magic so close to the Sanctum. She and Bryce both appeared via portal. \n\n\"Ghost!\" The Sorceress Supreme said with great exasperation. \"I might have known. Is this your sidekick?\"\n\n\"I am no one's sidekick lady!\" Gwen snapped. \"I am an independent operator.\"\n\n\"She's plucky,\" Steph said with a smile. \"I like her.\"\n\n\"New threads Ghost man?\" Bryce asked noticing my uniform.\n\n\"Yeah. I must report back to Fury. Our pair is now at least a trio if not a... hmm... what is a nonsexual word for a foursome?\"\n\n\"Group?\" Steph offered laughing now. \"Got time for a coffee before you go racing back to S.H.I.E.L.D. headquarters?\"\n\n\"That would be nice.\" I accepted. \"Can Spider come along. I bet she would love to shower after that one on one with the swordsman.\"\n\n\"A shower would be nice.\" Gwen agreed. \"But uh... it's not a swordsman... it is a swordswoman.\"\n\n\"How can you be so sure it is a woman under that mask?\" I asked as Steph opened another portal.\n\n\"Because... oh wow... the Sanctum Sanctorum! I've read all about this place when Better Homes and Gardens interviewed you last year.\" Gwen rambled a bit before returning to the question. \"Oh yeah, body mechanics really. I've fought a ton of bad guys and gals. Women move differently than men do. We are designed differently, and her kicks were way too wide and sweeping to be a dude.\"\n\n\"I wonder if the archer is a woman too?\" I asked thinking out loud.\n\n\"Could be.\" Steph muttered. \"Mystique makes for an interesting face to the group. She is probably the source of magic I detected.\"\n\n\"I thought she was just a shapeshifter.\" I said surprised at the news.\n\n\"Was just a shapeshifter.\" Steph corrected me. \"I have it on pretty good authority that her and Von Doom were pretty hot and heavy for a few years. I suspected that is where she picked up her mystic training. Von Doom is a world class sorcerer and not to be underestimated. Mystique is as clever as she ruthless.\"\n\n\"There's that name again... Von Doom.\" I growled. \"He sold weapons to the Darkholders and now he could be behind these thefts.\"\n\n\"Down to the right and second door. Enjoy!\" Steph said as Gwen began undressing. \"She's a sweet kid. Break her heart and I'll teleport you to the heart of the Dark Dimension.\"\n\n\"That wasn't my plan.\" I assured her even as the images of a naked Gwen Stacey danced in my head.\n\n\"I am too jaded to think anybody can be monogamous anymore. Just... go slow.\" Steph said a hint of bitterness in her voice.\n\n\"Get going dumbass.\" Bryce said grinning. \"Someone has to wash her back.\"\n\nI took the urging to heart and walked down the hall. Gwen was singing in the shower. I knocked on the bathroom door and she told me to come in. I shouldn't have been shocked at the ethereal nature of the room. A naked Gwen Stacy stood under a waterfall whose rocks were covered in water plants and algae, however Gwen herself was shrouded in an annoying cloud like mist that hid her naughty bits from view. Thanks Steph! A moment later I had a flashback to Snow's shower but instead of the storm cloud pouring down rain it was a waterfall. I took a step back and gasped.",
        "\"Is this cool or what?!\" Gwen said and turned to face me. \"Just what I needed... Hey! Are you okay?\"\n\n\"I will be Snow.\" I muttered.\n\n\"Snow? Is my butt that white?\" Gwen asked, her face a mask of concern.\n\n\"Not really, sorry... just a flashback is all.\" I said as the tears fell without warning.\n\n\"Hey! I got you!\" She cried out and held me close. I reacted to the proximity of her wet naked form so close to mine. \"OOH! Hey there big fella! Talk to me!\" \n\n\"She breathed her last breath into my mouth.\" I blurted out and the rest followed. Why was I telling Gwen what happened? I couldn't stop the tumbling words as I wept over Snow's death. I had killed her but not with my weapon. \"I took on her curse.\" I grimaced revealing my needle like canines.\n\n\"Wow, they look sharp.\" Gwen said her hand against my cheek. \"You are my hero. You gave her the one thing the curse could never allow. She died happy.\"\n\n\"You think so?\" I said sniffling and blinking the tears from my eyes. \n\n\"Being a card-carrying member of the V club, yeah you gave her that moment of bliss.\" Gwen declared and I corrected her. \"Okay fine... half an hour of bliss.\"\n\n\"So, you and Spiderman haven't...?\" \n\n\"NO! He's a bigger man whore than you are.\" She stated and I laughed.\n\n\"I guess I'll back off then.\" I began and she became upset. \"Okay, I'll leave the pace entirely to you!\"\n\n\"Great suggestion by the way.\" Gwen said changing the subject. She stood and returned to her shower the ever-present cloud still obscuring her form. \"What do I call you? You introduced yourself as Jackal but the gang and Strange called you Ghost. I'm confused.\"\n\n\"I played dead so that Reed Richards would move on and leave me be.\" I explained and she nodded. \"Besides, you've read too many tabloids.\" I told her as I approached.\n\n\"Maybe, but still amazed.\" She giggled nervously. \"Did you sleep with all those women?\"\n\n\"All?\" I asked and a holographic screen came down with a laundry list of celebrities and superheroines that claimed to have slept with me. \"No. If I been this busy, I wouldn't have gotten anything accomplished.\"\n\n\"But you did tag both of the Storm Sisters at the same time.\" She said with a twinkle in her eye.\n\n\"Yes.\" I admitted.\n\n\"How?!\" She asked as I whispered two words, double dragon. \"OH! What is that?\" She asked and I explained it to her. She blushed and then I saw the wheels turning in her head. \"That could prove... umm... beneficial.\"\n\n\"I think so.\" I replied. \"I'll let you finish up. Call me when you decide on me or someone else and the other details.\"\n\n\"It'll be you,\" Gwen promised. \"Just not here and not now. I've dreamt of losing it, but not with so much company. I hope you understand.\"\n\n\"Absolutely. I respect that. If you want it to be with me, I'll do whatever you want to make it memorable. It will be for me.\" I said and she blushed again. \n\n\"Good! Move on Ghost and let me put some serious thought to it.\" She emphasized it by smacking herself on the ass. \n\nI was haunted by that sound. I walked into the room Steph and Bryce were lounging in. They weren't alone, the Black Widow was filling them in on the state of the Quinjet and her time in Latveria. That all ended when I walked in. Natasha's eyes locked on target, the erection that Gwen had inspired, as she fell silent.\n\n\"Now that is a real magic spell.\" Steph giggled.\n\n\"Hey! Get the hell out of my head Ghost!\" The Widow growled as I not so passively scanned her thoughts.\n\n\"I apologize. I had to make sure you weren't Mystique. She has developed a strong mental barrier. How can I make it up to you?\" I asked as Steph gestured. \"What was that for?\"\n\n\"Spider Gwen has left the building. Her thoughts were interesting. Want me to share?\" The Sorceress Supreme purred.\n\n\"I have an idea.\" I stated and was rewarded with a nod of approval from Steph. \"I don't want to hurt her.\"\n\n\"Admirable.\" Natasha told me as she made a disappointed face. \"Should have been me in that elevator.\"\n\n\"Ghost?\" Bryce asked looking at me and then Natasha. \"Care to share?\"\n\n\"I swear I thought it was Widow. She hacked the elevator just to have sex. It seemed like something Natasha would do for the occasion.\"\n\n\"Wait! You never mentioned the elevator getting hacked!\" Natasha cursed as she touched her commlink. \"Widow to Fury!\" Pause. \"Mystique hacked one of the elevators. See if you can track her from there.\" Pause. \"I'll see if there is anything else...\" She paused as I stood behind her and slipped my arms around her. \"...no, I was just lost in thought.\" She stated as I unzipped the front of her uniform and sent my gear to my inventory. \"I don't know which elevator.\" She snapped as I cupped her naked breasts. I whispered the path I had taken as she ground her ass against me. \"Try number 11C.\" She said as cool and professional as ever.\n\n\"I love a great floor shore.\" Steph moaned. \"Let's give Ghost a hand.\" She said as she gestured, and Widows slacks fell to the floor. \"Ooh... wrong time to go commando Widow.\"\n\n\"You know what to do Ghost.\" Bryce urged.\n\n\"I'll wait.\" Natasha managed as the length of my erection teased her labia. \"Really Ghost? Just had to take advantage while I'm on the damn radio.\"\n\n\"You are soaked Widow. Maybe I should leave?\" I asked and she flinched. \"I didn't think so. Say it.\"\n\n\"Fuck me.\" She whispered playing the game expertly.\n\n\"I know I didn't hear that.\" Steph giggled.\n\n\"Fuck me!\" She growled as I bent her over. \"Bury it in me!\" She begged as I pulled back and took aim. \"I need it so... IRK!! TWO?!\" She yelped as I buried the Double Dragon deep into both available access points. \"Oh gawd!\" She moaned as I began moving.\n\n'Trophy earned: Backstabbing the Widow.'\n\n\"Damn Widow, you do like it in the ass.\" I moaned as I moved slowly. \"Is the term cock slot too vulgar?\"\n\n\"What I do for my country.\" She whispered. \"Yes. Still here.\" Widow snapped back to all business. \"You did! That's great! Widow out!\" She said exasperated but eager to continue. \"Fuck me Ghost... break me if you can.\"\n\n\"Challenge accepted.\" I stated as I pounded her a bit faster now. \"Time to take this up a notch.\"\n\n\"Yes!\" Natasha howled as I took her off her feet and supported her inner thighs in my hands. \"I feel so exposed.\"\n\n\"Do I look like that?\" Bryce asked as Steph laughed.\n\n\"Love of my life, we all look like that when Ghost takes over.\" She giggled. \"Ooh! She's about to...\"\n\n\"UNNNNNN!!\" Widow howled as she climaxed.\n\n\"...blow.\" Steph laughed. \"Damn, I hope I look that good once he's done with us.\"\n\n\"Lie down Ghost.\" Bryce pointed to the floor. \"It is time for us to milk your balls.\"\n\n\"Says you,\" Natasha panted as I lowered her to her feet. \"Just need to catch my breath.\"\n\nI did as Bryce wanted. I had barely laid down when the pair pounced. Widow saw that my face was available and parked her pussy over it. I surprised her a second time when I called on the serpent tongue technique and that nearly sent her into her second climax. I wasn't sure I was going to like being a vampire, what with having to have blood every day to keep my shit together. I learned one of its bright sides when it came to sex my stamina was greatly increased and it restored itself quickly. The ladies learned this firsthand. By the time I was done even the Sorceress Supreme conceded. As they rested, I borrowed Steph's mystical shower to wash up.\n\nIt was a long night indeed. I had picked up limited shapeshifting from Mystique and to my surprise a hint of a modified super soldier serum from Natasha. I had no idea she had been given it. While those two things might seem like a lot, they overlapped existing abilities I already had. On the bright side I could spend points to improve and follow those paths. The problem is that I was leveling up slower and slower. The more I experienced the more it took to reach the next level. While the ladies recovered and chatted in the hot tub, I checked out the maze that was my skill tree. I tweaked the display and looked at it from a top down perspective, that made it a lot easier. My core skills were at the center and the new ones were on the peripheral. \n\n\"Points... points... where to spend my points?\" I muttered.\n\n\"I'd choose the more unique skills if I were you?\" A voice said.\n\n\"What the... who are you?\" I asked as the water from the waterfall began to alter its shape.\n\n\"I am Agamotto.\" The spectral image announced. \"I have found you fit to appear to.\"\n\n\"I am honored!\" I said and Agamotto continued.\n\n\"I will this one time allow you to pool your accumulated points into a neutral place and spend your points in any fashion you see fit. It will allow you to rebalance your life.\" The Buddha like being said smiling. \"Choose wisely.\"\n\nIt was gone as swiftly as it had appeared. The skill tree spun apart into separate unrelated fields of my vision. I spent the time to see which skills overlapped and created synergetic links. It took an hour but in the end my character was more powerful and as Agamotto had said more balanced. My vampire and assassin skills and powers blended seamlessly. My shadow abilities tied well with Susan's invisibility and forcefields making them formidable and bordering on epic. My Kiai Jutsu and mystical dove tailed perfectly. I tapped into the shapeshifting and super soldier trees enough to enhance my climbing and tactical skill set to just under hero level. I liked the new me.\n\n'New Tree New Man.' The trophy flashed across my HUD.\n\nI checked up on the hot tub and the ladies were sitting on the edge of it while they exchanged experiences.\n\n\"My first time was when I was with my mentor.\" Bryce giggled. \"I was undercover. Women didn't go to University back then.\"\n\n\"How deep under the covers?\" Steph asked and they all laughed.\n\n\"So deep his balls were slapping against my nose.\" Bryce bragged.\n\n\"I could never do that.\" Natasha joked.\n\n\"Pfft! When a guy buries his tongue deep in your pussy and makes you come so hard you see spots... you'll do it.\" Bryce continued. \"You'll beg him to let you try and deepthroat him.\"\n\n\"What happens when his tongues invade your pussy and ass at the same time?\" Natasha continued remembering my little maneuver. \"And they fuck you like crazy.\"\n\n\"You let him!\" The others said in one voice and busted out in laughter.\n\n\"You look better somehow.\" Steph said looking me over.\n\n\"I had a little chat with Agamotto.\" I told her as I climbed into the tub. \"Ahh!\"\n\n\"You look more centered. Your aura is stronger and clearer now.\" She continued.\n\n\"I am.\" I said feeling better than ever.\n\nElsewhere in the city. \n\nThe two elderly men stood on the stoop of the four-family flat. They each had a nice cold beer in their hand. The weather was pleasant and clear with a light breeze making it a near perfect moment. The moment was shattered when a dark sedan crept up the street and automatic gunfire erupted from the passenger side of the vehicle. Two people lay dead on the sidewalk, three others were critically injured. Cries and screams from onlookers accentuated the sound of squealing tires as the car sped from the scene of the drive by shooting.\n\n\"This place is turning into Hell on Earth!\" The elderly Hispanic man said to the other.\n\n\"I know what you mean. Kids these days have no respect for life. It is just too damn cheap to them.\" The elderly black man replied shaking his head.\n\n\"If'n there was a portal to the Abyss it would be somewhere on this block.\" The elderly Hispanic man continued.\n\nThe truth was that there was in fact a dimensional crack that led to hellish plane of Tartarus. On quiet nights the soft moans of the damned could be heard and disturbed the dreams of sleeping humans on this very block. When the alignment was especially auspicious mid-level demons could crawl their way through the gap and take a human as its host. Coincidently, the slum lord that owned half this block was just such a vessel for a particularly nasty demon name Soth'Amon or just Soth to his friends. Would it surprise you that Soth was a rather popular demon among his fellows? He has quite the enterprise employing minor demons as drug dealers, prostitutes, and even taxi drivers. Yes, Soth'Amon was quite the popular demon. That is until everything changed.\n\n\"What in the Nine Hells is that?!\" Soth'Amon growled from his luxury apartment in upper Manhattan.\n\n\"Oh, come to bed baby!\" The succubus purred. \"You still haven't fucked my ass yet.\"\n\n\"While that is enticing my dear,\" He said looking over his shoulder at the blue skinned slut. \"Something is coming.\"\n\n\"And it isn't me.\" She pouted. \"Wait! I feel it too. What is that?\" The succubus whimpered as a nameless fear entered her and not in a pleasant way. \"I can feel it down to my hooves.\"\n\n\"I don't know, but I don't like it. Pack your shit. We are going to vacation in L.A. until this shit blows over. Put on your skin suit and let's get the fuck out of Dodge.\"\n\nSoth'Amon and his favorite succubus packed at a breakneck pace, took their customized limo to the airport and as he put it so eloquently, got the fuck out of Dodge. Meanwhile at the edge of the city. The roar of the engine, the blaze of hell fire, and the howl of the demon Zarathos informed all of those that witnessed the ethereal image that the Ghost Rider had come to New York. Now was not a good time to be an evil doer in the Big Apple.\n\nFade to Black."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "magic",
        "superheroes",
        "threesome",
        "celebrity",
        "celebrities",
        "group",
        "group sex"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/play-testers-wanted-pt-03"
}