{
    "title": "Warming the IcePrincess Pt. 02",
    "pages": [
        "Authors note: I strongly urge you to read the preceding chapters. With the context they provide, this chapter and those that follow will be much more enjoyable for you. Without knowing the characters and from whence they sprang the story may not make much sense. Many of the chapters contain highly erotic scenes of adults having intimate sexual relations. If you are somehow offended by this or are under 18, please stop reading here. To all the rest I wish you the very best and Thank you for reading.\n\nJ-stroke \n\n Part 2\n\n\n\nChapter 5\n\nFeel the burn \n\nMonday\n\nI awoke a little after 7:00 am with Claire leaning over me, dressed for work and lightly kissing my ear. I groaned and rolled away from her asking, \"What time is it?\"\n\nWhen she told me, I asked immediately in a petulant tone, \"Why didn't you wake me sooner, now we'll both be late for work.\" \n\nAnswering my complaint dismissively she said, \"Because you're taking the day off, there's nothing there that requires your immediate attention today.\"\n\nI barked incredulously at her, \"Well, what about that damned audit I never finished?\"\n\nHer amused tone caught me off guard when she answered, \"Don't worry about it baby, It's been handled,\" then added, \"the only reason I'm going in today is to see that Adams is taken care of and then I can join you back here and maybe we'll go do a little shopping.\" \n\nI asked again suspiciously, \"Claire, who took care of the audit?\"\n\nShe evaded any specific explanations and said, \"Oh some people I know. They're really quite good and have a reputation for being thorough. Don't about it worry babe.\" \n\nStill uneasy about playing hooky I asked again, \"You're sure?\"\n\nThe confidence returned to her voice and smiled saying, \"Absolutely, Now go back to sleep you still look a little tired.\"\n\nIt was my turn to smile and as I slumped back against the downy pillow.\n\nI cracked one eye open after her parting kiss to watch her scrumptious ass moving through the doorway out of sight. I smiled remembering exactly how delicious her ass was last night when it was chocolate frosted and straddling my face. Mmmmmm. Chocolate frosting and girl cum right from the source, what a flavor sensation that was. I closed my eyes and smiled with the happy memory replaying in my mind as I slipped easily into a few extra hours of shuteye.\n\nAt nine thirty, I woke with a desperate need that wouldn't be ignored. Finished with that, I decided to get started on the dirty little job I had to do. I've never been a regulation \"Suzy-Homemaker type\" but when I saw what awaited me in the kitchen I decided a professional maid service would have been a wonderful thing, regardless of the cost. The place was a disaster! Cake crumbs and chocolate frosting were everywhere. On the table, most of the chairs, the floor, there was a chocolate handprint on the cupboard doors, and even a streak of chocolate almost six feet up on the wall. (How that happened I couldn't imagine, oh yeah... ah...never mind.) While my coffee brewed, I went in search of cleaning supplies. Still lying where I'd dumped it near the door was my duffle bag. I remembered the box hidden inside and decided that I could do a bit of laundry while I cleaned the kitchen. I found both her cleaning supplies and the washer cleverly tucked inside the same snug closet. Setting the washer on gentle, I loaded in the shirt, socks, and skirt, and headed back to the kitchen to have a sip of coffee before starting on that chore. As I breezed through the living room, I flipped on the wide screen T.V. for some background noise to listen to as I worked. \n\nTaking the time to enjoy a cup of coffee, I listened to a teaser for the midday news (which of course comes on at eleven, go figure.) The smooth talking announcer told of a breaking news story about a scandal hitting the financial sector. It involved a local firm, Continental Casualty and Insurance Incorporated \"We'll have all the details for you at eleven\" the disembodied voice said while I damn near choked to death on hot coffee. I rushed to the phone frantically dialing Claire's cell. When I was shunted directly into her voice mail after redialing I had to give up on that. She was either too busy to answer or had it turned off. So, despite my burning curiosity I'd just have to wait for her to come home.\n\nWhen I felt the kitchen was clean enough I was sweating like a pig. I stopped by the laundry flipping the clean garments into the dryer as I made my way to the shower. While I indulged in the delightful spray, I remembered the strange telephone conversation I overheard Claire making yesterday. I couldn't help wondering if it was somehow related to the news on TV. For some reason my overactive imagination went into overdrive. I started wondering if Claire was somehow involved. Wait a minute, what about the audit I couldn't balance. Holy shit! Now I started to worry that I was somehow in trouble too. I decided to settle down until I had some real information, and let the soothing spray jets work their magic to calm my nerves. Worrying about it at this point was just a foolish waste of time. Besides everyone knew how the newsies fucked up almost every story they reported. Hell it might even be a different company entirely. Those clowns hardly ever gave you the whole story and usually managed to screw up damn near everything.\n\nAfter I dried my hair and body I went to the dryer to collect my outfit and wasting no time I started putting my things on. I was combing my hair to put in the second of my pigtails when I heard the news begin and since I could hear it clearly where I was, I felt no great urgency to rush and get myself in front of the T. V. The anchor started with the usual banalities before digging right in to the breaking news story. As I listened to the story with half an ear, I found out that it was indeed C.C. & I. that was involved in the scandal. When the news anchor said that the Feds had arrested Chief Financial Officer Clifton L. Adams, and he was being charged with embezzling over $55 million over four years I almost shit! I couldn't believe it! Next they played a press announcement from some company official named Katharine Stilwell but the voice I heard in the bathroom sounded an awful lot like my Claire.\n\nShe said, \"This case has been a long and difficult one but working in cooperation with federal authorities we were able to uncover and document the fraud perpetrated By Mr. Adams. Many of those involved do not yet know the vital role that they played in this investigation. We do plan to address that situation in the very near future now that the investigation has been concluded and an arrest has been made.\" I nearly broke my damn neck trying to get into the living room. By the time I did the video on the screen was footage of Adams holding his hands up the hide his face as he was lead away in handcuffs. As the video played, the velvet-throated anchorman explained that Adams faced up to 212 years in prison if he was convicted on all counts. I was totally stunned I always knew something was crooked about that bastard, streamlined system my ass! \"You conniving shit-fuck,\" I said aloud to the T.V., \"it serves you right.\" Deciding that I had enough of the news, I shut the T.V. off before heading back to the bathroom, to finish my transformation into a naughty schoolgirl.\n\nChecking myself in the mirror, I thought damn, for an old lady of thirty-one I could still pull off the schoolgirl routine. The pigtails were perfect the ribbons high set with evenly tied bows. I straightened the short necktie and could clearly see my pointed nipples through the thin white shirt. (No bra required for this outfit thank you very much.) The socks fit snuggly along the contours of my muscular calves. After a little attention with some leather cleaner and a good brushing the saddle shoes looked perfect. However, best of all was the short pleated skirt it washed up beautifully. Thank goodness, I remembered to pull it out of the dryer before the wool could start shrinking. It looked fabulous even damp and I suspected I wouldn't be wearing it long enough for that to be a problem. As I stood there it smiling at my reflection I decided that I could probably walk into any convent school in town and bang every nun in the place. I swirled the skirt around before lifting it to peek underneath and oops, I seem to have forgotten my panties. \n\nIt was almost 1:00 and Claire wasn't home yet so I decided to entertain myself by exploring the smokin' audio system I saw yesterday while she was busy in the kitchen. Every component in the rack was top of the line. I scanned the room for speakers but could only detect a subwoofer discretely tucked under a table. All the rest were cleverly deployed to remain out of sight. I pressed the power switch and the lights and displays came alive. I scoped out the FM tuner but found nothing to my liking on the air. So I shifted my attention to the 60-disc CD changer half-expecting to find Rachmaninoff, Chopin or Mozart but surprise, surprise, it was fully loaded with an awesome array of classic rock. I scrolled down Claire's library list impressed, The Stones, Springsteen, a couple of Clapton discs, Cream, Boston, Styx, U2, Utopia, Van Halen, and of course, the Beatles were well represented. I finally found one to suit my mood, punched up Chicago's Greatest Hits, and pressed play. The volume was already well up when the drums, bass, horns, and guitar began. By the third measure I had figured out which was the volume knob and gave it a savage twist cranking this baby up.\n\nThe sound pounded through my body and the whole room I responded to it instinctively, shaking everything I had in time with the music. When Terry Kath started signing in his soulful gritty voice, I was belting it out right along with him.\n\n Children play in the park they don't know,\n\nI'm alone in the dark even though,\n\nTime and time again, I see your face smiling inside,\n\nI'm so happy, that you love me,\n\nLife is lovely, when you're near me, \n\nTell you will stay, make me smile, \n\nMy body moved of its own volition now beyond any conscious controls, seized by the power of the music throbbing through me. Singing along was almost therapeutic giving vent to a host of emotions that welled up from inside me.\n\n Living life is just a game, so they say,\n\nAll the games we used to play, went away,\n\nWe may now enjoy the dreams we shared so long ago,\n\nOh my darling, got to have you,\n\nFeel the magic, when I hold you,\n\nCry sweet tears of joy, Kiss the sky\n\nI was so into the spell of the music dancing and singing just didn't seem enough. I started playing an energetic mix of air guitar, air drums, and even a wicked trombone that couldn't be seen, switching between them as the music moved me. Chills raced up my spine as I thought about the songs lyrics. The second verse especially could have been written about Claire and me. When the final verse erupted, I sang with gusto and a tear moistening the corner of my eye.\n\n Now I need you, more than ever,\n\nNo more crying, we're together,\n\nTell me you will stay,\n\nMake me smile, \n\nThe final strains of horn, drum, and brass, died away plunging the room into an eerie silence but only for a second as very loud deliberate clapping echoed inside the room. Before the next track could start, I spun around self-consciously and found Claire was the one applauding. It was very, very loud in the quiet room and I suddenly felt intimidated by her sudden appearance and unhappy expression.\n\nI rushed to the stereo quickly shutting it off and muttered a contrite, \"Sorry.\" \n\nShe folded her arms and said in an exasperated tone, \"Well now, that was quite a performance you put on there young lady, what do you have to say for yourself?\"\n\nA huge smile flashed across my face but just as quickly, I schooled my expression casting my eyes downward. I could immediately tell she really dug my outfit. Her scowl and the white blouse covered by a rather plain dark cardigan and grey skirt, in my mind transformed her into the sexiest schoolmarm I could ever have dreamed up. Not knowing how far she might want to push things had me so fucking excited I almost peed.\n\nI answered after a lengthy hesitation I told her, \"I'm sorry I didn't think I was hurting anything.\"\n\nThe anger coming through in her tone was harsh but very controlled, \"You didn't think abusing my audio equipment and dancing around like a trollop would hurt anything?\"\n\nIt was so hard not to giggle but I managed to squeak out a scared sounding, \"No mam.\"\n\nPointing to a spot on the floor in front of her, she ordered, \"Come here this instant young lady.\" \n\nI went to that spot head down stopping in front of her, saying nothing.\n\nShe asked me around a sigh of long-suffering, \"How can I leave you here alone and expect that you won't act the fool when I'm not here watching over you?\"\n\n\"I don't know,\" was my meek reply.\n\n\"You do realize you will have to be punished for this young lady,\" she pronounced.\n\nI almost giggled again but said, \"Please no mam it won't happen again, I promise.\"\n\n\"Ha,\" she quipped, \"you promise,\" and she roughly grabbed my arm dragging me into the kitchen.\n\nShe grabbed my arm roughly and dragged me into the kitchen and scolded, \"You promised to clean this kitchen and look,\" her finger pointed at the edge of the table where I had missed a streak of dry cracked chocolate frosting that still clung to it. \n\nShe ordered, \"Clean it now and when you are finished, you will be punished.\"\n\nI turned to get a rag to clean up the smudge but she stopped me instantly, \"And where do you think you are going?\"\n\n\"To get a rag mam,\" I answered in my best little girl voice.\n\nWith her hands on her hips she leaned in only inches from my face and said sternly, \"Oh no, we don't let dirty tramps alone with rags so they can rub their pussies with them. You can just use your filthy mouth to clean it, and when you've finished you will bend over that table and wait for me there,\" she commanded.\n\nTrying not to grin I returned to the chocolate stain and knelt to begin doing as she instructed. I could hear her angry breathing directly behind me as she stood watching in silence before leaving the room. This was turning out so wild I reached down and touched my pussy for a just second and it was soaked, my god I was totally jazzed.\n\nMy nipples were rock hard against the cool tabletop as I lay there waiting. The thin material of my shirt did nothing to prevent them from chilling completely. They ached with every slight movement as I lay against the hard polished surface trying not to put any pressure on them. I was bent over the table for what seemed forever before I heard her reenter the room. Her heels clicking against the tile floor in the silent room behind me sounded thunderous as she approached. I could hear her moving around behind me and when she finally stepped near, I could already feel my juices trickling down the inside of my thigh. She began setting a few things on the table where I could see them though I still didn't get one glimpse of her. A long handled wooden spoon was the first item to find a place inches from my wide-open eyes. A long slender rattan cane followed and my mouth formed a silent \"oh.\" The last to find its place was a worn leather razor strop almost three inches wide and my knees nearly buckled just from the sight of it.\n\nHer voice brought me out of my vaporous fog as I stared at the instruments wondering if I could take them all, \"I really don't have time for this Jane.\"\n\nAfter a few long seconds pause, she bent to look me in the eye before continuing, \"However, what you must understand is that to forgo your punishment now would be negligent on my part and would just make it all the more difficult next time.\"\n\nI nodded wordlessly against the hard surface my eyes locked on hers almost gasping at the wicked gleam I saw there. \n\n\"Good.\" She said with finality stepping out of my view with her heels clicking sharply.\n\nWhen her hand first pressed down on my lower back my nerves came alive dancing and tingling up and down my lower body. I could feel my pussy muscles twitching deep inside in anticipation. The trickle of my juices I felt before was now threatening to become a flood. Cool air started pressing in on my ass telling me I would not have much longer to wait as my skirt was being slowly raised.\n\n\"Oh...And what is this I see Miss De Marco, No panties?\" Claire asked her voice rising to an incredulous tone.\n\nI smiled naughtily without uttering a syllable.\n\nWhen her hand brushed across my bare skin and I nearly came from the slight contact.\n\nWhen she announced she'd decided for me and I was almost giddy just waiting for her to start, \"We will begin with some simple counting Miss De Marco, do you think you handle that Hmmm?\"\n\nI answered for the first time my voice shaking, \"Yes mam.\"\n\n\"Good,\" she said smugly, \"see that you do it properly.\"\n\nHer hand withdrew from my ass as she continued, \"I was thinking twenty might be a nice number to begin with but in light of your missing panties and your recent birthday I think perhaps thirty-one would be more appropriate.\"\n\nI groaned inwardly thinking thirty-one would indeed be a nice number, for starters.\n\nI could almost feel the smile on her face through the air currents in the room when she said, \"Do not lose count Miss De Marco; you know what happens then, Yes?\"\n\n\"Smack!\"\n\nI answered, \"Yes mam back to the beginning, One.\"\n\nBefore I could even finish my recitation of the rules, my ass exploded with heat under another powerful blow.\n\n\"Smack!\"\n\n\"Two,\" I barked as the nerves suddenly jumped to life tingling through my whole body.\n\n\"Smack!\"\n\n\"Three,\" the heat radiating from ass was starting to creep towards my dripping slit.\n\n\"Smack!\"\n\n\"Four,\" I grunted as her hand began sliding lightly across my ass cheeks between blows.\n\n\"Smack!\"\n\n\"Five.\"\n\n\"Smack!\"\n\n\"Six,\" I was really getting into it now my hips began swaying involuntarily.\n\n\"Smack!\"\n\n\"Seven,\" I said my voice thinning with each new blow.\n\n\"Smack!\"\n\n\"Seven,\" I repeated and when the eighth, ninth, and tenth blows rained down in quick succession they jarred through to my pussy nudging me over the top, just a little. A clenching mini orgasm throbbed through me and soon had the juices running down my inner thighs almost to the tops of my knee socks. My ass was now burning but regardless of how badly I wanted to massage the warm pink glow I knew was there, I kept my hands tightly balled and tucked under my body while my gasps resounded through the kitchen. The sound of Claire's heels told me she was coming nearer again, I remained silent and quivering in anticipation for her to retake the initiative, and she by god did.\n\nLeaning in very closely, whispering just behind my ear as she harshly gripped my throbbing ass cheeks she asked me, \"One should be reasonably able to expect that a trained professional accountant should be able to count past seven, isn't that correct Miss De Marco?\" \n\nI couldn't suppress my grin and answered sheepishly, \"Yes mam.\"\n\nI saw a hint of the devil flicker in her eyes when she caught my smile and said, \"Well, well now I think I understand the problem here.\"\n\n\"Perhaps you just aren't taking this seriously enough young lady,\" and I watched as the thin cane start to move as Claire declared, \"perhaps this will help you.\"\n\nLifting it by the handle she let the tip drag across the tabletop inches from my face and the sound as it slid out of sight had my heart hammering to the same beat as my dribbling pussy. Shhhick!!!! She drew it across the glossy oak tabletop and then gave it a few experimental swipes through the air swoosh...swish...shwick. Oh God, the sound alone almost had me cumming.\n\nClaire lightly touched it down on my glowing left ass cheek and said to me, \"You needn't count them any longer Jane, but you can rest assured that I will not loose my place.\" ",
        "She started lightly trailing it across to my equally heated right cheek before adding, \"You can also be quite certain that we will be reaching that count of \"Thirty-one\" before this is over.\"\n\nThirty, Holy shit! I panicked and began pleading with her seriously, I'd never taken thirty strokes with a cane but she shushed me calmly and told me that it was after all for my own good. God I almost squealed this was so fucking hot!\n\nThwack!!\n\nMy ass was instantly on fire, and tears popped into the corners of my eyes.\n\nThwack!!\n\nI grunted and my hands shot out to grip the edges of the table pressing my aching nipples hard into the wooden surface of the table.\n\nThwack!!\n\nThwack!!\n\nThwack!!\n\nOh god, I thought I would pass out, the juices pouring down my legs felt more like creamy porridge now.\n\nThwack!!\n\nThwack!!\n\nShe had discovered my untouched outer thighs and they sizzled with a few stinging blows.\n\nThwack!!\n\nThwack!!\n\nThwack!!\n\nChrist almighty, I had another twenty to go and I was already on the verge of cumming like a geyser and passing out simultaneously. My brain had ceased normal functioning unable to decide whether to anticipate the next stroke or find some way to cope with the pain from the last. \n\nSomehow I remained conscious after the thirty-first welt-razing stroke and lay sprawled across the table limply. My pussy was pulsing furiously now but still aching for release.\n\nClaire said sharply in a tone that had me reeling again instantly, \"What, young lady is the meaning of this?!\"\n\nI felt the tip of her cane running up my inner thigh before it began expertly probing my sopping folds. She seemed to be inspecting the effects of her handiwork along my dangling lips before she probed my opening with the thin hard tip.\n\nShe gasped and withdrew it roughly and barked, \"Good lord girl now you've soiled my cane.\"\n\nThrusting it in front of my eyes, she ordered me, \"Clean it Jane! Clean it Now!\n\nI glanced at the thick semi-viscous fluid coating the tip and was amazed how creamy the musky liquid was. It started sagging and dripping from the bottom of the slender instrument. Giving it a couple of shakes toward my mouth, I opened up for her never lifting my head as she pushed it past my lips. I noisily sucked it clean as she commanded. Tired and sore now I still desperately wanted to cum. It was such a shame she had stopped when she did because only a few more and I would have blown, I think. I was so totally ready to cum I wouldn't have needed much.\n\nEven though I had never taken quite such a caning before, I think I could have endured, even enjoyed a little bit more. Claire ordered me to stand and when the wool of my skirt sagged across my ruby toned ass, it brought every welt instantly back to life with prickly intensity. Only now, did I get my first look at Claire. She looked exactly as I had fantasized dozens of times alone in my bedroom. She was an awesome visage of feminine domination.\n\nShe wore a black lace up corset that left her proud jutting breasts fully exposed. Her nipples immediately drew my eye as they stood out a full half inch tall and nearly as thick with her own excitement. At its bottom edge below the lacing, her corset trailed diaphanous layered skirting that when the lighting caught it just right I could see the shadowy outline of her lower body. Even the dusky shape of her pussy was visible through the translucent fabric. What most turned up my heat was her incredible black thing high leather boots with stiletto heals at least eight inches tall! My god she was a sight I started panting again just from looking at her.\n\nShe brought me back to earth by tapping her cane on the table next to me, \"Sit,\" she insisted.\n\nHesitantly I rested one cheek lightly on the edge to accustom my burning buns to the cold surface slowly. By the time, I had fully seated myself she had the cane tip tilting my chin up to look at her.\n\n\"You've taken your punishment fairly well Jane,\" she dragged out the \"fairly\" to put some emphasis on my lapse in counting.\n\nLeaning against the center island behind her she continued, \"I've decided a small reward might be in order.\" she paused as thought mulling some serious issue and said at last, \"Yes I think I have a small one that will do.\"\n\nShe tilted her head looking down on me and said, \"Jane you have my permission to touch yourself.\"\n\nOoooo, I thought, this was a twist I never saw coming. Even though I really liked it, I reacted slowly as not to reveal too much excitement, too soon anyway. No this was such an unexpected turn-on I wanted to drag it out a bit. I carefully lifted my skirt acting shy about revealing my pussy to her and leaned back a little before lowering my hand. The instant I touched the sensitive tissue I flinched with the intense rush from being forced to masturbate for her while she stood watching. In just a few strokes on my outer lips and I was already getting very close to cumming. My left hand reached up to pinch my throbbing nipples but before my hand touched either of them, she pushed it away roughly with the tip of the cane.\n\n\"Those you will leave to me,\" was her terse command.\n\n\"Bitch,\" I thought silently, one or two hard tweaks and I'd be cumming all over her fucking boots. She had to see how stiff they were as they poked against the fabric of my shirt but I continued fingering only my pussy as I glared at her. Finally, feeling the build up getting stronger I closed my eyes in response. My hips began making very tentative humps at my fingers the skin of my ass resting on the hard table was still very tender. A slight whimper slipped past my lips as my need mounted when I heard a \"thwick!\" and my right nipple exploded with sizzling heat. My mouth and eyes flew open just in time to hear and see it a second time, \"\"thwick!\"\" this time my left nipple blazed with burning intensity. I gasped loudly and my hand on my pussy became a blur.\n\nClaire asked softly with a wicked smile, \"Ah...so you do like your reward, don't you my dirty little slut?\" \n\nI nodded never slowing my hand furiously mashing it against my throbbing vulva, god I was so close \"\"thwick!\"\" right nipple again, \"\"thwick!\" and oh god the left, Her aim was uncanny, catching just the nipple nothing else, the burn was so fucking intense I was already growling deep in my throat. \"thwick!\" \"thwick!\" \"thwick!\" Oh dear god, I couldn't take much more just a little and I would blast off heading into the stars. \"thwick!\" \"thwick!\" I was completely delirious now grunting as my hips ground into my frantic fingers. I was millimeters from rocket land when the tip of the cane suddenly shoved my fingers aside and \"thwick!\"\n\nOh, Goddamn! My clit burst with a violent fiery jolt! \"Thwick!\" \"Thwick!\" I was completely gone now and not a sound escaped my lips I threw my legs wide open and felt the muscles in my back tightening my hips rocked upward completely exposing my cunt to her. \"Thwick!\" The nerves throughout my thighs, belly, and pussy, erupted into trembling convulsions and I heard the distant sound of splashing to the floor as powerful spasms rocked my existence. \"Thwick!\" I convulsed uncontrollably as my cunt pumped out one powerful stream of hot creamy cum, after another. More than I ever had before, or thought was even possible for one human body. The throbbing glow was coursing through my whole body. When she brushed the tip of her cane lightly across my drenched asshole, I pumped out several more streams of liquid as I convulsed through the inhumanly massive orgasm. All of the tension left my muscles at once. I lay limply across the table my ass, pussy, and nipples, all beat out a steady rhythm, each on its own unique wavelength.\n\nI don't really know how long I lay there spent, but I was thoroughly sore, indescribably tired. I was however, at last blissfully and completely satisfied. I wouldn't have moved a muscle for hours but Claire it seemed wasn't quite finished with me... \n\n\"Jane, Jane get up from that table!\" she said her voice so stentorian I couldn't make myself ignore her.\n\nI stood in stages trembling legs first, my upper body rising slowly after to a posture that was vaguely upright. As I looked up from where I leaned against the table and my eyes met hers that wicked gleam in her eyes was still there. \n\nShe tapped the reedy instrument against her boot and asked harshly, \"What, young lady do you suppose this is?\"\n\nMy eyes dropped to see a dribble of thick juice sliding down the glossy surface of her boot but didn't have the energy answer her.\n\n\"It's your girl cum Jane!\" She said it like a dark accusation, even my name. \n\n\"Since you've proven so adept at cleaning with your mouth you can clean this up too, and Now young lady!\" Her tone wasn't the least mischievous and she was still holding the cane so I walked stiffly over to her and dropped to my knees to obey her command. The creamy juice was still very warm and I knew immediately it wasn't from me at all. (There was also that drip that landed on the top of my head to help clue me in while I licked it up.) She was drenched! My, my missy dominatrix must have gotten off on this whole thing as much as I did!\n\nAs I finished with her boots, Claire leaned forward against the center island and said, \"I have something else for you to clean up, and Jane dear, please do be thorough.\"\n\nI felt a hand grab one of my pigtails pulling my face roughly upward. When my view was fully shrouded inside the wispy dark fabric, the guiding hand slid to the back of my head and pulled my face hard into her molten pussy. My god what a flood. I licked and sucked for several minutes inside the hot house of her feminine musk. Her legs were drenched down into her boots and her seething cleft kept pumping out more. The scent of her permeated my every breath as I swallowed and gasped and went in search of more. I finally gave up and plunged my face tongue first onto her inundated groove. She moaned aloud but my ears only heard the thin rattle of the cane hitting the floor as it slipped from her grasp. Her stance widened and I quickly turned myself around beneath her. I began licking from her crimped aperture to her proudly rigid clit with my tongue spread as wide as I could make it. Several passes like that and she was purring like a contented cat. I thrust my hands out from under her skirts seeking her smooth plump tits and traced along them until I found and gripped her stony teats. I could feel them throb in it between my fingers and every slight additional pressure I added drew a grunt from her deep within her body.\n\nMy tongue traced around the pursed ring of her ass and I paused there tickling it while my hands were busy attacking her nipples. After a few seconds of this, an idea popped into my head and I released her globes and spun around beneath her. She groaned in frustration the instant I let go of her glorious boobs but the tone change back to a purr when my wide-open mouth seated overtop the upper reaches of her split. I began mercilessly flicking my tongue across her nubbin while sucking her fleshy lips into my mouth. Even the short hairs of her bush tasted deliciously female, tickling my lips as I sucked up her juices. I could feel her legs start to tremble against my cheeks and decided now was the time to throw a little surprise her way. \n\nI slipped one of my fingers into her heated cavern letting her juices flow downward coating it with her slick hot secretions. I quickly slipped it out of her pussy and pressed it against her gathered puncture. I wasn't gentle about it and didn't much care to be. Holding my finger stiff I prodded her asshole. Poke, poke, and then in, I it buried it deep inside her. Her hips came alive wildly humping my open mouth as my tongue continued thrashing her clit. My finger wedged itself deeper inside her ass and she ground her pussy against my face using a guiding hand to hold my head steady against her gyrations. I reached up blindly with my free hand finding one of her nipples. I seized it roughly, my fingers squeezing it down to a tiny waist while the rest of the rubbery nub bulged out of my tight grip. My tongue was whipping against her clit ruthlessly while my finger hammering into her ass accelerated. Without warning, I abandoned her pulsing clit and lowered my face to force my tongue deep into her steaming hole. \n\nMy neck strained from the awkward position but I kept stabbing into her keeping my tongue stiff as I drove it deep into her. Each thrust into her seeping cunt squished another hot flavorful mouthful that I had to swallow quickly or I would surely drown. Her leg muscles began shaking with uncontrollable spasms and her throat released guttural grunts as her pussy flooded my face with her savory scent and flavor. \"Uhg...Oh...fuck...Uhg... ahhhhh...Yes uhg...Shit...Oh...Ohhhh... She gasped as and arched her back erratically as I assaulted her ass and pussy shamelessly. When did she cum, I was completely unprepared for it. Suddenly her full weight was balanced only on my chin, and the tip of one finger. Her throbbing pussy was flooding my mouth to overflowing and her precious cum dribbled down my cheeks to land on my own heaving chest. My hands flailed grabbing at anything to keep us upright but we finally tumbled to the ground together in an exhausted heap among loud panting and fits of weary laughter.\n\nClaire still panting, sweat plastering her hair to various portions of her face glanced at her watch and gasped in shock, \"Aw shit babe its almost five o'clock if we're going to shop we better haul ass.\"\n\nI shook my head and answered telling her with a tired grin, \"I aint hauling this ass much of anywhere it still smarts.\" \n\nShe leaned up on one elbow and said with a chuckle, \"Serves you right messing with the stereo like that.\" \n\n\"Hey I was just having a little fun, besides that song kinda does it for me!\" I protested.\n\nShe nodded a smile curling the corners of her mouth before she burst into a decent rendition of the last line of the second verse, \"Cry sweet tears of joy, Kiss the sky.\"\n\n\"What a song, what a voice he had,\" she said with a dreamy expression.\n\nShe asked me with a smile and one eyebrow raised, \"Well now that you know what happens when you get caught, are you gonna do it again?\"\n\n\"Abso-fucking-lutely!\" I answered her with a huge Cheshire, cat grin, as I dragged myself a few feet to sit up against the cupboard. \n\nWith four wobbly legs and tired arms clinging to each other for support, the two of us made our way toward the shower leaving the kitchen. It was arguably cleaner now but was redolent with the aroma of hot female passion, times two. \n\n\n\nChapter 6\n\nThe Truth will set you Free\n\nClaire had thoughtfully adjusted the water to a cool gentle mist. When it landed on my welted ass it still felt like sharp needles stabbing into my skin. I endured it without complaint just to stand close to her inside the palatial shower. She gently washed my back and shoulders with a soft soapy cloth working her way down toward my tender rump. The soft cotton felt like coarse sand paper when she gingerly glanced across the angry raised lines before slathering my legs with tender soapy caresses.\n\nWith definite regret in her voice she said, \"Oh honey I think maybe I went a little too far.\"\n\nI turned tilting her face up to look her in the eye and said, \"Nonsense, you were exquisite. I've never had so much fun in any time any where, I wouldn't change a thing.\"\n\nPulling her body against me and ignoring the pulse of my still tender nipples pressing into her we kissed tenderly. Her relieved smile was enough for me to forgive anything she had done or would ever do. I wanted to make love to her again and slipped a soapy hand lower exploring her tight buns while I our mouths were locked together. \n\nAs soon as my fingers started tracing along the valley between those firm hills she purred happily but said, \"Oh honey I'd so love to go there again but we really do have to get moving.\"\n\nI whined, \"Why? I'd much rather be naked and soapy with you than anywhere else in the world.\"\n\nShe grinned happily and said \"Thank you for that,\" punctuating it with a quick peck. \n\nShe explained patiently, \"Something pretty important happened at work today that affects pretty much everyone. The executives have scheduled a reception this evening to explain it all to a select group of people. It mainly involves how we caught a certain scummy criminal bastard today.\"\n\nI gasped with the sudden recollection of the T. V. news report, which to me seemed ages ago.\n\n\"I saw it on the news,\" I cried excitedly.\n\n\"Oh, how much did they show?\" She asked her voice sounding strangely guarded.\n\nI answered her with the blur of impressions zipping through my mind, \"Well I heard some of it while I was out of the room, but I did get to there in time to see Adams being lead away in handcuffs, Oh Claire is it really true, $55 million?\"\n\nSighing her answer to me she said, \"Unfortunately yes it's all true.\"\n\nShe reached up lightly tousling my wet hair and said a little more brightly, \"But, because of the great people at Continental he was caught, the money he stole was traced and seized, and he'll be spending a very long time behind bars.\"\n\n\"Serves the fucker right,\" I told her heatedly. \"I always knew there was something crooked about that bastard!\"\n\nShe smiled and said with a sparkle in her eye, \"You my dear miss De Marco were one of the people who put us on to his little scheme.\" \n\nI was stunned into silence, and she continued, \"You're also one of that select group the upper management would like to thank, so let's move it girlfriend, it just won't do to keep them all waiting.\"\n\nShe turned toward the door and as I stepped behind her to follow, I said brightly, \"This is way too cool!\" \n\nBefore she made it out the door, I asked her out of curiosity, \"Hey Claire when I was listening to it on the news today there was some company rep. who gave a statement to the press before I could get to the T.V. I never did see her but I swear to god she sounded exactly like you. A Katharine something or other, do you know who she is? I'm pretty sure I've ever seen her around the office.\"\n\nClaire froze, I could see tension knotting the muscles across her back and shoulders as she gripped the door handle, something was wrong.\n\nI moved close and touching her lightly asked, \"Hon, what's wrong, are you O.K.?\"\n\nIn a tone filled with resignation she answered, \"Yeah I'm alright but I think we might end up being late after all.\"\n\nI had no idea how to respond to her odd remark and didn't get the chance, \"C'mon lets dry off and then I'll tell you all about her,\" she said in a languid tone, stepping outside and handing me a dry towel.\n\nWe sat at the dinning room table in robes of warm fluffy terry. Claire extracted her wallet from her purse setting it aside on the table before staring off into space. Her face displayed a range of emotions before she thoughtfully looked into my eyes and began.\n\n\"Jane, before I get too deeply into everything, I want you to know I Love You. I'm very sorry that I had to keep certain things from you, but I had to keep it from everybody.\"\n\nShe paused gathering herself and said, \"I hate to admit it, but even with you I haven't been completely honest. But it was only because I couldn't,\" she then slipped her drivers license out of the wallet and placed it on the table.\n\nShe cleared her throat nervously and began, the words sticking in her throat, \"I would have told everything sooner babe but I couldn't, not until that rat bastard Adams was arrested. There was just too much at stake to allow one tiny slip to destroy the work from the last four years. We had to catch him and needed enough proof to makes it stick. I only hope that you will be able to understand.\" \n\nI was so thoroughly confused now my head was a whirl. My brows were so tightly bunched and I felt a headache building in my temples. She turned the plastic card around and with a single finger pushed across the table to me without a word. At first, I saw nothing amiss it seemed a perfectly normal driver's license issued by the state. Height, (Ohhh, a very sexy five nine.) Weight, 148 lbs. (not bad baby.) Eye color (hazel) the picture was not flattering but to me she managed to look beautiful even in a driver's license photo. All right, where's the problem here? My eyes scanned down to the name entry and read over it without understanding. So, I read it again and a crashing wave of recognition slammed into me. The name of the woman I heard on television earlier was the same as the name I was now reading. Katharine Clarisse Stilwell. My mouth dropped open but no sound came out, I looked up at her and she nodded twice in admission her eyes never leaving mine.",
        "\"So that was your voice I heard on the television today,\" were the first words I uttered as my brain tried to process this alteration in the fabric of my reality.\n\nHer soft answer came in the form of a single word, \"Yes.\"\n\nI tried to keep the hurt from my voice but was completely unsuccessful, \"So Katharine... is there anything else you'd like to tell me, like oh perhaps you're actually a man hiding under those shapely curves and pretty curls?\" \n\nShe cringed briefly at my barb but answered in the clear soft tone said, \"There's a great deal I wanted to tell you Jane and now that Adams has been arrested, I can tell you all of it.\"\n\nI leaned back against the stiff chair still looking at her license card and read the name aloud, \"Katharine Clarisse Stilwell,\" and shook my head in disbelief.\n\n\"Actually I do prefer Claire,\" she said with a small hopeful smile.\n\nMy hands fell into my lap as I looked over at her trying to get my seething anger under control. She was still the same gorgeous woman I had lusted after in a four-year secret obsession. In the last three amazing days, she had become the lover I could only have invented in my dreams. I decided finally that it didn't really matter what her name was. I loved her anyway. Even though it was difficult for me to open my heart to anyone, I still trusted her somehow. It hurt me deeply to have that trust trampled on even a little. Intellectually I knew I needed to hear the rest story and right now! Emotionally I was still a bit fragile and deep in my subconscious some of my mental armor snapped into place. \n\nCasually flipping the plastic card onto the table top where it spun to a stop against her fingers I said, \"Alright Katharine, lets have the rest of it,\" I was still was having considerable trouble keeping the anguish from my voice. I had to calm myself down and listen to her. Although emotionally I still wanted to run from the room and cry like a baby.\n\n\"Jane do you recall ever seeing or hearing the name K.C. Stilwell around the office,\" she asked tentatively.\n\nInstantly recognizing the name I answered, \"Yeah, as a matter of fact I do. Salesperson of the year for six straight years out of the L.A. office and then \"poof\" that name disappeared from the awards roster about four years ago.\"\n\nBefore she could say another word I bounced forward in my chair pointing at her and erupted into giddy laughter, \"You! You are K.C. Stilwell!\"\n\nMy mind instantly recalled scenes of the break room at work where the sales staff was bitching about that effing K.C. Stilwell winning top honors again. I laughed softly and said to her, \"I don't think the salespeople in the home office ever realized you weren't a man.\"\n\nShe smiled ruefully before saying, \"We were counting on that.\"\n\n\"You see four years ago Jane my dad along with the board of directors had already approved the position of Vice President of sales for me after Avery Crumpler retired. But, before it would be officially acknowledged he asked me to do him and the company a favor. A big one.\" \n\nTaking a deep breath and letting half of it out through pursed lips she added, \"This is where it gets complicated. The company was in the midst of the merger with Allied. At the last minute, they threw in the provision that Clifton Adams and another pair of V. P.'s were to be given comparable slots in our organization. Dad was under immense pressure from the board to close the deal and reluctantly agreed to it.\"\n\nShe paused thoughtfully and then resumed her narrative, \"My dad was never comfortable with the arrangement and Adams bothered him most of all with his \"streamlined accounting system.\" \n\nHer expression changed and stared off into space continuing, \"You see Jane, Pop was an old school accountant before he started Continental insurance forty some years ago. What he saw Adams doing with the books at Allied made him uncomfortable, but neither he nor an FBI investigation of Allied years before could ever prove anything was going on.\" \n\n\"He wanted someone he could trust to keep an eye on Adams and see if he was up to something. Naturally he reached out to me, his only daughter who was at that time completely anonymous inside the home office.\"\n\nSuddenly all of the disquieting things I had learned about Claire started to fit into place. The car, the condo, the furnishings, the clothes. On an executive assistant's salary, my ass! Things were beginning to make some sense to me so I quickly tuned back into her story.\n\n\"We tried to slip me into a position that wouldn't arouse his suspicions and when his executive assistant quit unexpectedly, I was in,\" She said excitedly almost as though she where talking about someone else.\n\n\"The name was totally my father's invention, my middle name, and a variation on his first name which very few people even know, luckily for us it worked. We fooled everyone. No one ever caught on to who I really was. Including some people I never wanted to mislead, I am sorry Jane, but it just couldn't be helped.\"\n\nI nodded accepting her explanation completely. She was still every bit the woman I was in love with secretly for the past four years. I was forced to come to grips now that to keep from deceiving me she would have had to betray her father. That was a standard I wouldn't hold myself to and would be monstrously unfair for me to apply to her. \n\nAfter asking myself honestly, what had really changed? The answer that peaked out from behind my bruised ego was not one damn thing! \n\n\"Claire,\" I stuttered, \"I do love you, I can't change that,\" I said with absolute sincerity, \"but, for future reference, don't ever do anything like this again. I don't like being lied to or deceived, I can't handle it. Call it a character defect if you have to but honesty is something I prize above anything else. I won't let myself compromise on that, do we understand each other?\"\n\n\"Yes absolutely!\" was her immediate reply as her tight expression relaxed into a smile.\n\nI stood holding my arms open and she exploded out her chair to fill the vacant space. Her mouth found mine in a warm, loving kiss was but when the tear sliding down her cheek touched my skin I realized with some surprise that she was sobbing in my arms. I held her tightly trying to communicate the affection I felt for her through the embrace but after a moment, I pulled back a bit and rested my forehead lightly against hers.\n\nI asked her, \"This has really been bothering you hasn't it ...babe?\"\n\nA tearful, \"Yes,\" was her reply as her soft sobs continued.\n\nI told her gently, \"It's alright now honey, I'm not upset with you.\"\n\nHer voice squeaked thinly as her crying continued, \"But I was so scared that you would be so mad. I was afraid that you might be angry and you'd leave because I didn't tell you the truth. I felt like I was risking everything that mattered to me because I just couldn't risk telling you who I really was.\"\n\n\"Ah ...Claire honey,\" I said in a lighter tone, \"That was before I knew that you've spent so much time in sales.\" I paused to let out a little giggle and told her, \"Well shit, now I kind of expect that sort of behavior.\"\n\nHer head rose slowly and her teary eyes held mine in an incredulous stare for about three seconds. Her sobs ceased and her body began shaking again but this time with quiet relieved laughter. The sound filling the quite room helped lift the heavy atmosphere from both of us.\n\nShe shook her head and said snuffling her now running nose, \"Very funny Jane, Very funny indeed.\" I pecked her on the lips tasting her salty tears and immediately leaned in for a longer more intimate kiss that she needed as much as I did.\n\n\"Alright funny girl,\" she smiled at me and said, \"Let's get going to this damn reception so you can find out the rest of the gory details.\"\n\nHooking my arm through hers, as started for the bedroom in search of proper attire, I said, \"With pleasure my love, with pleasure.\" \n\nJust watching her dress was incredibly erotic for me, her movements were so smoothly efficient, and her selections so impeccable I was getting all hot and bothered just watching her get dressed. She pulled on her dark crimson hose and adjusted the garter belt suspenders until they were just right. I stopped what I was doing completely to marvel at her faultless beauty. Watching someone getting dressed would not normally do this to me but I was so captivated with watching her, I couldn't even properly run a brush through my hair. Her unrestrained breasts swayed with her movements as she slipped into a pair of scandalously brief panties I had to force myself to turn away or I would never get myself ready to go. I had to choose between putting on my own clothes so I could go with her or keep watching her and masturbating. It was a very close call which would win out. Finally able to finish with my hair and plucked a very lightweight thong from the boutique bag I was given on my birthday. I carefully slid it up and over my still tender ass and decided to dispense with a bra. The dress Claire had loaned me was essentially a shapeless tube in mercifully lightweight silk. The russet colored dress had thin spaghetti straps and had a loose scooping cowl neck. The color complimented my sandy blonde hair and seemed to make my clear blue eyes sparkle when I finished with my mascara and stepped back from the mirror for a final appraisal.\n\nI heard an appreciative whistle behind me and then her reflection emerged over my shoulder to join me admiring my reflection in the mirror. I smiled for her and she dangled a pair of open toed leather high-heeled pumps with copper accents over my shoulder. I reached for them but as I did, the gathers at my neckline shifted a bit and Claire gasped in my ear.\n\nShe asked me with a smile and pointed at my reflection, \"Are you sure you want go without a bra Jane?\"\n\n\"Absolutely,\" I answered her in all seriousness, \"I want everyone to know how excited I am to be with you.\"\n\nShe smiled brightly and said, \"You go girl,\" punctuating it with a light smack on my cheek as she stepped around me to perform her own facial ablutions.\n\n\n\nChapter 7\n\nRevelations\n\nThe ride to the hotel where this shindig was taking place was as brief as 600 plus horsepower could make it. The two of us walking together seemed to draw quite a few stares as we made our way through the hotel's lobby. I wasn't deluding myself that they were gawking at the stick woman in the russet dress walking next to the clock-stopping enchantress I was trying to keep pace with. \n\nBedecked in deep crimson from her lovely throat to the floorboards, she was stunning. Her ensemble's continuity was only broken by two delectable expanses of creamy white skin. Under the short upright collar encircling her slender neck where the dress began, the shimmering fabric covered her shoulders terminating in very short sleeves leaving the rest of her arms bare. From there things became much more interesting. The front of the dress opened into a scooping teardrop to reveal just enough cleavage to hint at the treasures hidden below. Connecting the collar with the sleeves there was a small stretch of fabric that spilled over her shoulders. After that, the entire back of the dress was missing from her shoulder blades downward to her waist. It resumed concealing her flesh from view just in time to shroud the first smooth swelling of her scrumptious derri\u00e8re. (Oh how I wanted to get her back home and out of that damn dress!) As we approached the open ballroom doors, she paused bending her arm out to me saying, \"Shall we?\"\n\nSlipping my own arm through hers, I answered, \"Absolutely! What do ya say, you give them all something to look at, and I'll give them something to talk about.\"\n\nHer relaxed smile was a delight to see when she glanced over her shoulder at me and said just before we stepped inside, \"You are just too damn cute girl.\" She then abruptly turned in front of me and lightly brushed a nonexistent fleck of dust from my dress. Her fingers swiped across the material near my nipple giving her the opportunity to surreptitiously brush across it.\n\nI protested, \"Now that's not fair you, you, devious woman, now that one's gonna stick out way farther than the other,\" I tried rearranging the loose folds at my neck in a futile attempt at preserving my now seriously imbalanced immodesty.\n\nShe whispered into my ear, \"You said you wanted everyone to see how excited you were to be with me, well I guess I do too.\"\n\nUnder my breath I muttered, \"Just wait till I get you home woman you're gonna pay for that.\"\n\nLaughing openly she answered, \"Promises, promises.\" \n\nI pulled her close so that I could be certain she would be the only one to hear. I whispered in a husky tone, \"Lady, I don't really care what name you have on your drivers license, as long as it is MY name you're screaming when you cum.\"\n\nSlipping my arm from hers, I snuck it behind her for a quick pinch to reinforce of my declaration. Her yelp and surprised throaty giggle had heads all over the room turning in our direction. Regaining her composure, she acknowledged several people that she recognized as we made our way deeper inside the sparsely populated ballroom. \n\nWe were still walking together when she stopped and said, \"Oh, I didn't expect to see them here tonight.\" \n\nI scanned the room asking her, \"Who Babe?\" \n\n\"Them,\" she said pointing toward two uncomfortable looking men across the room. One was older and rather distinguished looking. The younger of the pair was a bit more disheveled, but both men wore unimpressive grey suits with dark narrow ties and black utilitarian shoes.\n\nI asked her flatly, \"You mean the cops?\"\n\nShe laughed answering, \"Yes, but actually they're Feds. FBI for your information and they have both been very helpful in this case.\"\n\n\"And such snappy dressers too,\" I clowned to her in an exaggerated mocking tone.\n\nShe slapped my arm in their defense, \"I would like to go thank them for coming,\" then asked me, \"Do you mind?\"\n\n\"Sure thing toots,\" I said in my best Jimmy Cagney voice, \"Go ahead toss me aside to go schmooze with the G-men,\" I couldn't keep it up and added chuckling in my own voice, \"If there's a bar in this place that's where you'll find me, I think I need a drink.\" \n\nShe pointed vaguely toward one corner of the room and said, \"I'll catch up with you there babe,\" and as I turned away she gave me a pinch every bit as good as the one she got in the doorway.\n\nI couldn't resist watching her in motion as she went to greet the two Feds. God was she a amazing. I smiled hugely with the secret knowledge that tonight I would be the only one here to find out how spectacular those parts that her dress did cover up really were. I felt like I had just won the lottery. (Honey I've hit the jackpot! Yehaw!) I made my way in the general direction she indicated and found a typical hotel cash bar. It was a slightly upscale version somewhat longer and sturdier looking. My heart sank when I noticed that the top was covered in pre-poured champagne flutes and the basic ingredients for bone-dry gin martinis. Neither was to my liking so I asked the barkeep if that was all he had and his answer was a disheartening, \"Yeah pretty much.\" \n\n\nShaking my head in disappointment, I said aloud, \"Damn, I'd kill for a beer. You know something with some flavor and a little color.\"\n\n\"I wish I could help you, but the only beer I have back here is reserved,\" he said as I turned away from him leaning heavily against the bar to look around the people bustling into room.\n\nOff to my right I heard a soft raspy drawl say just loud enough to be heard over the din, \"Don't be an ass Stu, give the lady a beer.\"\n\nI turned to see a tanned very handsome gentleman with starkly silver hair hoist a dark brown bottle to his mustached lips and wink at me as he tipped it back. I heard a church key in action behind me and spun to find the recalcitrant bartender reaching toward me to hand over an ice-cold bottle of dark imported ale. I saluted my generous bar mate with a tip of the bottle before hoisting it and talking a long thirst quenching pull.\n\n\"Ahhh, damn that's good,\" I said stepping down the bar to thank my benefactor.\n\n\"Jane De Marco\" I said offering my hand, \"and you sir, are my new hero.\"\n\nHe smiled up at me the small creases on his weathered face crinkling at the corners of his hazel eyes. He took my hand and said, \"Don't be lying now little lady I saw you coming in,\" he pointed with his bottle toward the main doors and said, \"You already got yourself a hero.\"\n\nI smiled around a sip and asked him, \"Does it show?\"\n\n\"It surely does,\" he said not letting go of my hand and continued introducing himself, \"Bartholomew Stilwell, but my drink 'in buddies call me Bart,\" he finished with another barely perceptible wink. \n\nMy mouth fell open in instant recognition of the name, \"Well fancy meeting you here,\" I laughed uncomfortably.\n\nHe looked me over, then nodded as if settling some internal debate about me, and said looking into my eyes, \"I've heard some good things about you Miss De Marco, and I hope to hell they're all true.\"\n\nHis smile evaporated as he went on, \"Only one thing means a damn to me though, you gonna make my baby girl happy?\"\n\nMomentarily stunned by his directness I set my beer down and looked at my empty hands deciding now was not the time to tap-dance around the truth. I needed to be just as honest and direct as he was being and told him, \"I'm damn sure gonna try.\"\n\nI looked up into his eyes recognizing the same inherent strength there that I saw when I looked at his daughter and finished my thought, \"I don't really have a choice sir, I love her.\"\n\nSearching my face, he finally patted my arm warmly and said, \"That's all I can ask honey, I thank you for being straight with me.\"\n\n\"I don't know any other way to be ...sir,\" I said returning my eyes to my empty hands.\n\nHe said under a mock scowl, \"You can knock off that sir crap any time now, call me Bart.\"\n\nStill unsettled I answered him reflexively, \"Yes sir...Bart...sir.\"\n\nWith his smile masked beneath his wide white moustache he chortled, \"Slow learner.\"\n\nHis jab had me chuckling quietly along with him, still looking down at my beer and said, \"That may be Bart, but once I get a fix on something it pretty much stays learned.\"\n\n\"She sure is something our Claire, isn't she?\" He said never taking his eyes off me. \n\nHearing the undisguised love and admiration for her coming through in his voice I answered with enchantment, \"She's wonderful Bart. She's so much more than I'd ever hoped for or dreamed of, I have to keep asking myself how the hell did I get so...lucky.\"\n\nHe tipped my chin up gently and said in his smooth southwestern drawl, \"I know just how you feel little lady. I been in love before, couple times actually. Felt the same way about her mama, she sure was something too, damn how I miss her. She was an awful lot like our girl, a real fireball.\"\n\nI smiled with understanding as we both searched the room. When I found her happily chatting and working the crowd, I didn't have to point her out because the pride in his misty eyes told me he already found her well before I did. \n\nSetting his empty on the bar and he straightened and stepped close to me, with a last appraising glance said with quiet finality, \"You'll do,\" and gave me a warm fatherly hug around my shoulders before moving away from the bar to catch up with her.\n\nHe looked back at me and said over his shoulder with another wink, \"You want another beer honey you tell that jackass behind the bar I said it's alright now, you got that Jane?\"\n\nI answered him with a broad smile, \"Yes sir I got it... Bart,\" and watched him head off through the crowd vaguely in Claire's direction. \n\nDamn, that went well I thought to myself. I decided that his pronouncement \"You'll do,\" was high praise indeed from the folksy founder of the company. The room was warm but I had goose bumps all over my body and a half a cold beer wasn't doing it to me. His acceptance meant more to me than I imagined it might. I felt a flush of pride that he hadn't found me somehow lacking. Finishing my beer, I heard the crowd beginning to hush and thought that for only fifty odd people they sure were a noisy lot. I watched as Claire heading over to the raised dais with her father and the two G-men in tow.",
        "Moving quickly get myself a front row seat, I cut the corner near the one side of the dais and smacked right into someone executing the same maneuver. It was my friend and unrelenting suitor from the computer room Database Dan.\n\n\"Shit, I'm sorry Dan,\" I said after looking up at the hulking obstruction in my path.\n\nHe was as startled as I was and asked in his normal rapid-fire delivery, \"What the hell is going on Jane? I was told to be here tonight but no one told me why. Damn don't you look nice.\"\n\nI grabbed his hand and pulled him along without a word finding a seat right in front of the assembling dignitaries, \"Sit down, shut up, and you'll find out any minute now buddy,\" I told him growing more excited as the crowd settled into their seats.\n\nClaire's father stood behind a small podium and began thumping the microphone asking tersely, \"Is this damn thing working, or do I have ta yell?\" \n\nI gave him two thumbs up and he flashed me a grateful smile and began, \"I think you all know me, some better than others, but just to be clear I'm Bart Stilwell board chairman and C.E.O. and to my left here is a little lady most of you know as Claire McAllister.\" \n\nHe paused for effect and then loosed the first bombshell of the evening, \"Well she aint, she's really my baby girl Katharine Clarisse Stilwell or Katie as I sometimes call her.\" He paused to let the hushed murmurs die down before continuing, \"As a favor to me, the company, and the U. S. Justice Department, She has been working under wraps for the past few years trying to uncover how that snake Clifton Adams was stealing this company blind.\"\n\nThe two Gentlemen to my right here are with the FBI they have been coordinating her efforts to document his criminal activity. There were some strong suspicions that he had done the same damn thing over at Allied before the merger. But no one there could ever figure out his dirty tricks and catch him with his hand in the cookie jar.\" \n\nHe went on smiling and looking right at me now and said, \"For certain legal reasons we can't let all of the cats out of the bag but I can tell you that the one who first uncovered Adams scheme was one of our own accounting people. Sneaky as he was Clifton Adams couldn't outsmart our own Jane De Marco.\"\n\nHe pointed right down at me and motioned for me to stand, \"Get up there for us Jane honey and let everyone get a look at you.\"\n\nI was so shocked I'm sure my face was as red as Claire's dress when I did get my legs to work. I glanced around the room shyly giving a quick wave as every eye in place was riveted on me. I quickly sat to escape their scrutiny.\n\nI heard a soft chuckle from Mr. Stillwell before he continued as I bowed my head in embarrassment. \"She provided the forensic accountants in the FBI with the hidden clues they needed to unravel his whole criminal enterprise and help us shut him down.\" \n\nStill feeling the scrutiny of the entire room, I wanted to crawl under the table and hide. Finally I looked up at Claire and her father they were both smiling warmly down at me. I saw nothing but love and pride on their faces and I felt my discomfort quickly melting away. \n\nHe continued with his explanation no longer drawing attention toward me, \"It appears now that Adams was trying to hide his double dealing in among the flurry of claims that comes in after each hurricane in the past few years. There were indications that He may have been doing it over at Allied for years before that. Miss De Marco found out how he was running a shadowy scheme electronically duplicating payments to our legitimate customers and sending that money to his own offshore account before erasing his tracks. Jane caught on to it and brought it straight to my baby girl here. That's when the FBI was called in. It took quite some time to track where the money was going after he stole it, but just this week we found than out too. That's why he was taken into custody this morning and I can tell you all about it now.\" \n\nThe room erupted into applause as everyone picked up on the relief in Bart's voice. \n\nHis voice strained to brake through the excited murmurs so he could continue when the group was slow to settle down, \"That young fella sitting next to Jane there is Mr. Daniel Phillips. He designed a sophisticated data trap on Adams computer activity without ever being told what it was about. He did such a fine job of it we have an unbroken record of every dirty little trick Adams tried to pull on the good people at Continental. That information is now in the hands of the U. S. Justice Department. Actually, I can tell you now the data trap he designed collected information from every workstation in the company. Therefore, in the next few days some of you may be hearing from the Human Resources department. They seem to feel some of our folks need a reminder of the proper behavior on the company's computers,\" his wide smile brought a quiet murmur of uneasy laughter from the assembled group.\n\n\"Thankfully thought, Ms. De Marco and Mr. Phillips uncovered only the one thief. Because of the solid work done by our own people with the help of the authorities that evidence will be used to help send him to prison for a very long time.\" The spontaneous applause exploded around us but my eyes were fixed on a single point in the room, Claire's radiant face and happy smiling eyes.\n\nEven though his voice grew more serious, his mood remained buoyed, \"Now the board members will have to get to work. We will have some hard decisions to make in the next few days.\" He scanned the room looking for the faces of those he was addressing, \"We will be filling the vacancy of a corporate officer. As well as beginning some preliminary reworking of the budgets we've all had to strangle. Those changes need to be ready to implement as soon as the funds are released by the courts. The funds recovered from his off-shore account will give us a bit of elbowroom that we haven't had in a good long time.\"\n\nEveryone was on their feet clapping wildly when he turned away from the podium and the older of the two FBI agents stepped toward it. I watched him as he stood and moved along the dais. For some reason as he walked to the podium, his eyes never left mine. He was a very handsome man, tall, distinguished, and impeccably groomed but something in the way he kept his eyes fixed on me was a little unnerving. When he finally spoke his voice carried with the instantly recognizable accent of an upper crust native New Englander. I smiled to myself privately deciding that was something else not to like him for.\n\n\"Without taking up too much of your time this evening,\" he started finally looking away from me to scan the room. \"I'd just like to extend to the thanks of everyone in the Bureaus fraud investigation unit to the people of Continental.\"\n\n\"Without their help and cooperation,\" he paused, his gaze sweeping over me again, \"we might never have been able to arrest a man we have been tracking for years.\" \n\nI looked away from him focusing my attention on Claire while he droned on, \"With the evidence that has been collected in this case, I consider the eventual conviction of Clifton Adams a virtual certainty.\" \n\n\"Thanks to the bright and talented people here and in the Bureau we were able to conclude this long investigation in a very satisfactory way,\" He smiled through a bit of polite applause.\n\n\"It is the belief of many at the Bureau that once Mr. Adams is confronted with the weight of the evidence against him he will want to be cooperative.\" He grinned adding in an ominous tone, \"If not, well let me assure you the Justice Department knows how to play hardball.\"\n\nA smattering unsettled laugher from the group behind me indicated that no one present doubted that for an instant. He continued in that same vein saying, \"We can play it just as rough as Mr. Adams wants us to. It might even include the liquidation of his considerable personal assets.\"\n\nI couldn't help the private grin that slipped across my face when I thought to myself, \"Good god won't this guy ever shut up?\" \n\nWith that statement, he scanned the happily clapping crowd once more before surrendering the podium and returning to his chair.\n\nClaire's father raised his hands for quite and said, \"That about wraps it up for tonight, I'll be seeing see many of you bright and early tomorrow so let's not stretch this out too long tonight. For now though the bar is open, but the beer is mine,\" he added scowling around the room before breaking into a lopsided grin. \"Now they'll be serving some dinner in just few minutes so go ahead and relax a little, I think we could all use it now that this thing is over. Thank you all for coming.\" \n\nHe offered his hand to Claire and left the two flatfoots sitting like statues as he made a beeline for the bar. \n\nThe rest of the evening was a blur of happy chatter and congratulations coming from a mess of people I didn't even know. I saw Claire only twice through out the night and then only briefly before she was hauled away into yet another round of congratulatory conservations with one group or another. When the wait staff began setting tables to begin serving, I made my way back to the corner bar and found my old drinking buddy with a fresh longneck in his hand.\n\n\"Mind if I join you?\" I asked stepping up next to him and leaning against the simulated wood rail.\n\nHis eye's brightened immediately and he roared, \"Barkeep another beer here,\" his speech was becoming slightly slurred.\n\nA cold brown bottle came sliding down the bar to smack into my waiting palm, he said warmly \"I was wondering if I'd see you again tonight little lady.\" \n\nI sipped the smooth malty liquid and answered him, \"I have no where else I want to be as long she's still here.\" I pointed my bottle roughly in Claire's direction.\n\nHis smile was warm and his eyes misty when he chuckled to me, \"Damn that's good to hear, I don't mind telling you how relieved I am that she finally has someone, and from all she tells me a pretty good someone at that.\"\n\nSurprised by his admission I finally said to him gratefully, \"Thanks...Bart, it means a lot to me to hear you say that.\"\n\n\"Aw,\" he said waving my gratitude away, \"Claire spent nine years in Los Angeles trying to hide from her mother, and me that she wasn't never going have no husband,\" he said wistfully.\n\n\"She wasn't fool'in her mamma none though, but I had a real hard time accepting it at first,\" he said his voice tinged with regret. \"But before Emma passed away she finally got it knocked it into my tick skull the only thing I should ever want is for my baby to be happy.\" His grin widened and he stared hard down the bar at me and said, \"From the looks of the two of you together coming in that door tonight I figure she's doing alright.\"\n\nWe shared a quiet laugh, and then a thought popped into my head that might nudge this conversation in an entirely new direction. So I asked him, \"Claire tells me not many people around here know what your real name is, how come?\"\n\nHe looked at me his eyes hardening for a second before his smile warmed and he answered, \"Because my mamma had a perverse sense of humor that's why,\" he leaned a bit closer, and asked me, \"Did she tell you what it is?\"\n\nAnswering truthfully I said, \"Nope, her lips were sealed when she got to that part.\" \n\n\"God bless her,\" he said in his quiet drawl, before telling me conspiratorially \"If you grew up with a name like \"Alistair\" in southern Oklahoma you wouldn't want no one knowing about it neither.\"\n\n\"Thank god the woman gave me a decent middle name that shortened up into \"Bart\" sounded lots tougher,\" he said with a smirk.\n\nBefore I could say anything more he pointed his bottle in my direction and said sternly, \"Now don't you go spread' in that name around or I'll whoop your ass for ya girlie.\" \n\nTipping my bottle for another sip that I damn near choked on, I said defiantly, \"Oh yeah, you might wanna pack a lunch ya old coot, you might need it.\"\n\nWe were still laughing at each other's tough-guy routines when Claire appeared between us and said tiredly, \"Well it's nice to see you two are enjoying the evening.\"\n\nHe smiled proudly up at her after giving me one of his trademark winks and answered, \"Yup, found me a new drink'in buddy. Truth be told, all she wants to talk about is some pretty girl she met up with. You know anything about that Katie?\"\n\nShe beamed down at me and answered, \"I might, and you can stop calling me Katie or Katharine right now old man. You know my name same as I know yours... Alistair.\"\n\nShe slapped him on the shoulder and then snatched his beer from the bar stealing a quick gulp like a mischievous teenager.\n\nHe smiled over at me and said drunkenly, \"Her hide's bout as thick as her ol' man's. You might want to remember that, Jane honey.\"\n\nI looked from one smiling face to the other, deciding that this was an ongoing game with these two, I answered, \" Doesn't worry me a bit Bart, the way I figure it if she gets out of line I'll just have to knock her down a peg or two.\" I turned my grin on him and added, \"Same goes for you.\"\n\nThey both chuckled at my inflated bravado and Claire returned her fathers bottle before asking him slyly, \"So tell me dad, this girl she's been going on about all night is she anyone I know?\"\n\nAfter pausing to savor a flavor of his beer her father said, \"Could be, could be, I'll tell ya something sweetie, if it was me she was looking after so hard I wouldn't let this one slip away, she's a sharp cookie.\"\n\nThat did it, now I was blushing furiously again as they both stared at me grinning, \"Cut that out the both of you,\" I said trying to hide behind another sip of beer.\n\nHer father finally ended the teasing by announcing in a surprisingly sober voice, \"I'll need to see the both of you in my office sometime Wednesday morning I'll be tied up all damn day tomorrow with board, maybe knocking a few heads together.\" His smile turned a little wicked with that phrase suggesting that some long-standing scores were about to be settled.\n\nWe both grinned with him and then briefly at each other until he made his next pronouncement, \"You two take the day off tomorrow you've earned it, Don't let me hear you've been up to anything except making travel arrangements tomorrow young lady,\" his menacing bottle neck was pointing squarely at his daughter.\n\n\"Yes daddy, \"she answered sweetly and asked, \"Can we go now?\"\n\nHe said sternly, \"Go on git the both of you. You don't want to be sitt'in around here with a drunken old fart anyway.\"\n\nGiving his arm a squeeze as I stood, \"That all depends on who that drunken old fart is, wouldn't you agree Claire?\"\n\nShe laughed at my quip but before she could interject her thoughts he cut her off saying, \"You keep talking like that missy and I'll be taking you home with me.\"\n\nI was really enjoying being with her father and decided it was Claire's turn to for a little teasing and said, \"You keep feeding me this fine tasting beer and I just might go with you.\"\n\nClaire, finally finding her voice barked decisively, \"Not damn likely,\" and pulled me away from the bar and my new drinking buddy with a parting, \"see you daddy,\" as we hurried toward the door.\n\n\n\n\n\nChapter 8\n\nA Satisfactory Surcease\n\nClaire occupied the center of the enormous bed lying flat on her back when I slithered overtop the sheets to snuggle close beside her. With a contended sigh, she wrapped an arm around me and kissed my cheek before lying her head wearily back down on the downy pillow.\n\nI could hear the satisfaction in her voice when she said, \"Now that was quite and day.\"\n\nSnuggling against her shoulder I mumbled an agreeable, \"Ah huh,\" While my eyes feasted on her nude body from this interesting new perspective. My eyes traced all along her curves broken only by my arm lying across her middle.\n\n\"You made quite an impression on my dad you know. He reserves that \"sharp cookie\" remark only for people he really thinks highly of. In fact other than my mother I can only remember him using it one other time.\" \n\nCaressing the smooth skin under my hand I asked her softly, \"Oh, so who else earned this marker of his high esteem?\"\n\n\"She was some retired math professor he consulted with a few years ago when this whole Adams thing began. He told me it was just to brush up on his rusty accounting skills but I think he may have found time to have a little fling with her,\" she said with little amusement in her tone, along with some genuine warmth for her dad.\n\nLying against her still admiring the curvy surfaces of her body I said, \"Hmm...Good for him, she must have been special, wonder who she was?\"\n\n\"He told me once,\" she paused trying to remember and then said a name I recognized instantly, \"it was Emily... no...Elizabeth Cromwell I think, yeah that sounds right.\"\n\nFor a second I didn't know whether to laugh or cry but my inner clown took control and I burst into gales of laughter, \"Holy shit I don't believe it.\"\n\nClaire sat up and asked insistently, \"What's so funny?\"\n\nIt took a minute for me to settle down but when I finally told her she saw, the ironic humor and was laughing along with me, \"Ah, Claire you know that cute little school girl outfit you found so very interesting this afternoon?\" I asked.\n\nShe nodded and a smile of happy remembrance immediately wiped away her confused expression. \n\n\"It was given to me as a graduation present by my former math professor who promptly seduced me and spanked me silly,\" I could hardly choke it all out through my laughter.\n\nFinally gasping out, \"Care to guess what her name was?\" \n\n\"No fucking way,\" She said her eyes and mouth were both wide in complete astonishment. A second or two later she joined in with my giggles saying, \"Holy shit is right!\"\n\n\"She told me since I was no longer one of her students she thought it only \"appropriate\" that she actually got to give me one of the many spankings I had earned over the years as her student.\" I was laughing so hard I was having trouble speaking in complete sentences.\n\nAfter we both calmed down she added, \"Wow, small world isn't it?\" her shining eyes stared off distantly and then asked me, \"Do you think he knows she swings both ways?\"\n\nI answered her flatly stating, \"Don't you dare tell him, he'll find out if Liz decides to tell him,\" I admonished her. \"Your Dad is so sweet, besides I don't think it will matter a bit.\" I went on telling her, \"Liz is a remarkable woman viewed in any light.\" I thought for a moment and added, \"Besides babe your Dad is the charmer, now that I think about them together it seems like they might be a perfect fit.\"\n\n\"She really was something Claire,\" I said remembering being in her classes as well as our one special afternoon together, \"You'd like her she's smart, pretty and tough as nails too. She was a sly one too, always testing you when you least expected it.\"\n\nI paused framing the words in my mind before I continued, \"She managed to pack more number theory and advanced mathematics into my skull than I though would fit in there. Under it all she was always very sweet and so funny she was more than the best teacher I ever had, she was my friend.\" \n\n\"You loved her?\" Claire asked me after settling back to the bed.\n\nI thought the question over before answering her honestly, \"I suppose a little, I admired her more but yeah I'll admit there was some love there too.\"\n\nAbandoning my memories in favor of the warm, firm body beside me I asked her in a teasing inflection, \"You're jealous?\" as I asked her I planted a kiss on her upper breast and trailed my fingers down her smooth belly finally reaching my fingertips across to lightly stroke her inner thigh.\n\nHer answer came mixed in with a purr, \"Well a little...maybe.\"\n\nI raised my lips from her skin just enough to say, \"I can fix that for you,\" as I urged her legs apart and resumed sampling her delectable skin. ",
        "Her fingers languidly combed through my hair while she was surreptitiously trying to guide my ministrations to where they would offer her the greatest benefit. (So sorry baby, I really do enjoy a good tease.) I very deliberately avoided getting too near the swelling columns of her nipples. Using only my lips, I planted evasive kisses all over her breasts. I slowly worked my sucking kisses and adding little tender nips along the sides of their generous swells. Trailing along as I worked across each of her lovely breasts, I soaked up her delicate fragrance. Every time she would tilt trying to direct one of her swelling pink nipples toward my mouth I would relocate my lips to skin I hadn't previously sampled. I was already in heaven, but she was in a less happy place and whimpered to let me know about it. My fingers were similarly employed dancing along her soft inner thighs and across her downy mons carefully avoiding any contact with her heating crease. Using just my fingertips, I dragged them with a feather light touch along the sides of her rift touching only the soft swell at the union between her mound and thigh. I massaged my way upward unto the curl-covered surface of her trimmed bush. Once there I began tickling and worrying the little hairs that I could grasp just above the bulge of her excited clit still protected under its fleshy hood. Her hips were already making small urgent undulations trying to direct the confused wanderings of my hand. I was determined not to let things escalate until both she and I were very, very ready.\n\nI allowed the tips of my teeth to glance along the surface of her now heaving globes as my kisses tightened their focus drawing nearer her fully engorged nubs. I traced my lips softly skirting the edges of her areola feeling it crinkle tighter beneath my lips. In harmony with my slow deliberate oral attentions, I massaged the flesh above her pelvic bone drawing upward the flesh of her pussy before letting it slip downward to its original position. I still wouldn't give her the direct contact she craved but I could feel heat radiating from her on the back of my fingers. I could feel her body coiling with barely controlled muscular tension and decided, almost there. I was having a ball teasing and testing her patience but I'm sure she was less than enthralled with me. Capturing just the tip of her elastic nipple, I applied only enough pressure to hold it with my lips. Perfectly synchronized with this, I allowed just one fingertip to \"accidentally\" nudge her clit with my massaging as I slowly sucked the fleshy delicacy into my mouth Claire's sharp gasp told me \"oh yeah she's ready.\" A million thoughts swirled through my mind in the next few seconds but a question forced it way to the center of my consciousness. I asked myself, \"Can it get any better than this? Well maybe a little,\" the answer echoed back inside my head. I guess I was a little slow to realize it but I was very ready too. Shortly thereafter, all of my carefully measured restraint flew right the hell out the window. \n\nMy tongue tickled over the tip of her nipple still trapped between my lips before circling its full perimeter. It just happened to coincide with a final successful attempt by Claire to force my hand into firmer contact with her eager heated bush chasing after it with wild gyrations. It sparked the glowing embers of her heat into an all-consuming conflagration. Her sharply inhaled breath resounded in the room and spurred me into decisive action. My mouth began greedily nursing on her nipple and my fingers started sliding up and down along her hot moist folds. My hand was soon slick with her juices as I stroked along her labia from her clit to her musk-flooded perineum. When I inserted a finger into her crevice, her body came alive beneath me. I watched from close range as she began furiously pulling on the nipple my mouth hadn't yet attended. Her hips were thrashing against the single finger I had buried inside her. She seemed uncommonly eager, almost desperate to find her release. A light nip from my teeth and the addition of a second finger to my probing explorations seemed to push her urgency to another level in her fanatic pursuit of orgasm. Her breaths already coming in ragged gulps were punctuated with mewling whimpers that were positively musical to my ears. \n\n\"Ahhh...Ohhhh....Mmmm...Yes...Ohhhh....Yes... Yes...Oh baby... yes\" My brain reveled in the aural confirmation that my efforts to please her were meeting with success. I shifted my lips to attack her unprotected neck savoring every second of contact with her succulent skin. My fingers were beginning to feel her walls tensing in ripples as I plunged them in and out. I allowed myself to bask in the glow of my impending achievement until a tiny voice in the back of my mind shouted, \"Too Fast!\" \n\nI heeded the mental command instantly. Claire's rapidly approaching orgasm came to a screeching halt as I withdrew my fingers and lifted my mouth from her skin. Inclining my body away from her side, I rose to my knees. A loud frustrated groan exploded from her and echoed through the room. Before she could complain any further, I quickly nudged her hip and exhorted, \"Turn over for me baby.\"\n\nShe executed a snap roll onto her hands and knees that would have impressed a Blue Angles aerobatic pilot. Smiling at her eagerness, I recited my version of the old clich\u00e9 in my mind, \"all good things come to she who can wait.\" I moved back to her side reaching immediately for her pendulous breasts. I began kneading them enjoying their weight and firmness as they filled my hands. Soon I tugged and teased her tender nipples as I kissed my way along her sloping muscular back.\n\nFinally reaching her shoulder I lifted my lips and whispered into her ear with a barely restrained snicker, \"I love you Claire.\" \n\nShe smiled and nodded before releasing a pent up breath hoping I was about done screwing around now. Her flashing eyes communicated a slightly less delicate variation of that same message. I pressed her shoulders downward and when her head rested on the pillow, I moved quickly beside her upraised hips. Gazing at the magnificent twin spheres of her ass, I felt a shudder race down my spine as I caressed the flawless pale flesh. I felt almost unworthy touching such a divine creation. My lips where drawn to it, my kisses containing as much reverence as passion, my fingers reaching for the other side began caressing along the outer swell. I watched intently as the flesh briefly yielded beneath my fingertips. I felt so privileged just to be near her that a tear threatened to erupt from the corner of my eye. As my hands caressed her body trying to bring her a few moments pleasure, I wondered if I could communicate how much she meant to me through mere physical contact.\n\nStill moist my fingers quickly found where they had left off gliding back into her silky tunnel. My ears filled with the buzz of my own excitement and I only barely registered her distant \"Ahhh...\" With my vision blurring with happy tears, I though for a just a second I could see shimmering waves of heat emanating from her body. Moving my mouth closer to find a productive pursuit of its own my tongue zeroed in on her dusky rose and was soon bumping lightly across the ridged portal. Claire pushed back against my fingers while they pumped smoothly into her body. Her hips were soon trying to grind up and down against them covering the rest of my hand with her slick honey. I added a third finger to fill her pussy trying to satisfy her growing need. While flicking my tongue across her other tight opening I pumped into her seething pussy at an unhurried pace. Carefully uncurling my last finger, I slipped it inside her along with all the others. My tongue at last breached her restrictive entrance while her pussy took in the full breadth of all four of my fingers. It was a snug fit but still slid in and out of her smoothly. \n\nClaire shattered the quiet in the room breaking into unbound wails of pleasure. \n\n\"Oh my god...ahhhg...Ohhhh Yes!!!...Oh fuck...\"\n\nI threw my other arm around her thigh while my mouth and fingers continued their invasion of her most private passages. Reaching upward, I pressed my fingertips against her exposed clit moving in rapid little circles. Her reaction was instantaneous and explosive as her lower body churned and heaved beneath my three-pronged assault. Using my neck muscles in concert with my pumping hand, I began forcing my stiffened tongue deeper and deeper into her ass. Her body became a blur of frenzied twitching. Her motions where chaotic and urgent as thought she were trying to communicate something to me but just couldn't make me understand. I knew exactly what she was telling me and I did my best to comply with all of her naughtiest wishes. Her vocal chords suffered no such difficulty and wanted to tell the whole world her tale. \n\nShe howled her pleasure loud and clear, \"Oh Yess...Yes!...Oh...fuck me ...Ohhh...Oh...Jesus girl...Ohhhh...God damnit... Oh...Yes Ohhhh...God...Oh Yes...Fuck...\"\n\nJust before the flood of her hot cum inundated my fingers still pressing tightly on her clit her body stopped all of its voluntary motion. She stiffened suddenly her hands clutching at the sheets only her quivering hips and heaving sides showed any mobility as she trembled gasping for breath. The powerful clenching pulses against my fingers and tongue buried deep inside her body told me all I needed to know. After the most intense throbbing ebbed, I slipped my tongue and fingers from her body bringing the two together to taste the wonderful flavors of her passion. I wasn't satisfied with the small sample they provided I turned back to where she lay breathing fitfully. Her hips still high off the bed made it a simple matter for me to access the source of her wonderful musky flavor and I eagerly licked up every glistening drop. \n\nEven before her explosive release, I was engulfed in an overpowering sense of awe and gratitude just to be sharing a bed with her. Why fate had chosen to smile on me bringing me together with this incredible human being I did not know. Without really knowing why I suddenly began sobbing looking down at her beautiful body. The feeling that I was some how undeserving pressed down on me and I just couldn't shake it. I was so wrapped up in the jumble of my confused emotions I didn't even notice when Claire disappeared from beneath me. She had already reclaimed her supine pose near the head of the bed. When I finally did gather my wits, the tears still tumbling down my cheeks I looked up to find her watching me intently with a concerned look on her face. Her arms flew open beckoning to me and I dove into them burying my wet flushed face against her warm skin. \n\nConcern coloring every syllable she asked me, \"What's wrong baby?\"\n\nI still couldn't bring my roiling emotions under control enough to form a decent answer so I said weakly, \"I don't know.\"\n\nWith a gentle kiss on my forehead she said, \"I think I know what it is, Jane baby I love you too. Oh damn, how I love you girl!\"\n\nHearing her loving affirmation only made me cry harder.\n\nReaching down she titled my chin up so that she could look into my eyes she asked, \"Do you remember the envelope you saved from your birthday, what I wrote inside it?\n\nI nodded wordlessly against her shoulder.\n\nWith sweeping arm motions to emphasize her point she told me, \"Well I want it back. I'm going to have it made into giant billboards and have them plastered all over the damn city. Wherever you go my dear, wonderful, Jane I want you to always know just how much I love you and I don't give a flying fuck who else knows about it.\"\n\nLeaning over to me, began kissing away my tears, and before long had me giggling softly. I wished I could capture this moment saving it forever. I knew right then that I could spend the rest of my life in contented happiness with this woman. No further analysis required. It all just felt so damn right as she held me close looking deeply into my eyes. She picked up the hand I laid across her chest and began kissing my fingers. She suddenly stopped to lick and smell them before smiling down at me and saying, \"Mmmm...girl cum I want some too.\"\n\nShe prodded me into motion grabbing at my hips when they rose from the bed. She began guiding them toward her face saying, \"Bring that pretty pussy to me baby, I think it's my turn for a taste.\"\n\nCarefully straddling Claire's head, I held onto the massive carved headboard with both hands for support. She guided my pussy down onto her warm waiting mouth. \"Oh god...\" I gasped as her incredible tongue made its first flickering contact with my thickening labia. She explored the delicately wrinkled surface of my lips teasing along their length. Sucking them into her mouth, I could feel the tension increasing on my clit, which began swelling at her first touch. It wasn't long before it expanded to its full length to peek out from under its hood. Claire began battering it with her nimble tongue.\n\n\"Oh...Oh...Yes baby...Oh...so good...Oh!\" It was so unbelievably intense I almost couldn't take it. My hips began bucking briefly away from the wriggling tormentor only to return to the same position demanding more. Soon she began tickling at my inner lips and I lifted against my mound pulling my folds higher opening the way into my cave for her. She plunged her tongue into me, energetically thrusting into my tunnel. I looked down into her eyes captivated by the sight of my bush now pressed against her gorgeous mouth. Knowing that it was her tongue buried in my throbbing cunt sent chills up my spine. \n\nWhile that image became forever burned into my memory, it nearly sent me over the edge. My body trembled and shook in anticipation of flooding that lovely mouth with my juices. A pair of eager hands slipped up my sides cupping my breasts helping to distract me from achieving my orgasm too quickly. As her fingers closed around them kneading the firm fleshy mounds she soon zeroed in to focus on my aching nipples. They were tugged, pinched and rolled so skillfully I began building quickly toward a powerful explosion.\n\n\"Oh...Yes...God...Yes babe...Oh Fuck... Oh...Yes ...Harder...so good...Oh...\" Using her hold on my small breasts Claire began pulling me down harder against her mouth bouncing me rhythmically against her chin and that wonderful long tongue. Stretching my nipples almost to the point of pain, she continued forcing her stiffened probe deeper into me reaching for the roughened patch of my g-spot. My knuckles went white gripping the headboard trying to hold myself upright while my hips quivered and twitched. I was so close to bursting, that when the tip of her nose started bumping against my hypersensitive clit, my whole body stiffened and I flooded her face with a gush of hot creamy juice as I came. \"Ohhh...Oh God...Oh Claire I'm gonna...Ohhh...Fuck...Oh my God...Yes baby! Yes...Yes!!!\" \n\nIt was so utterly thrilling for me to know my cum was washing over and into her wide beautiful mouth as it pulsed hotly from body I couldn't help whimpering down at her wishing the sensations would never end. I slowly sagged to the bed facing away from her completely spent, satisfied and exhausted. Claire wasn't about to let me rest for long as she crawled up my body planting warm musky kisses all along her way. \n\nShe finally slithered overtop of my recumbent body and kissed me squarely on the lips my dew still covering her chin and cheeks she asked me brightly, \"High ya babe, how ya doing?\" \n\nI smiled so wide my cheeks hurt and answered, \"I'm spectacular...\"\n\nBefore I could say another word, she cut me off and said with a proud happy tone, \"Yes, you are,\" as she covered my lips with her own. \n\nWe lay together touching, tasting and gently exploring each other until pure exhaustion imposed itself to bring an end to our delightful, exciting, extraordinary day.\n\n\n\n\n\nChapter 9\n\nRewards Well Earned\n\nWednesday\n\n\n\nWednesday morning came much, much too quickly for me, heralded by a call from Claire's father at six bloody AM! He only called to ask us to meet with him in his office around ten thirty. I wanted to go back to sleep but Claire's boundless libido had the two of us awake and happily engaged in some very important business of our own as soon as she hung up the telephone. (Good lord the woman just loved her fucking!) Tuesday our day-off had started much the same way and what a day it was! We did manage to sleep in a little but as soon as we woke, we greeted the new day by having sex. For breakfast, we had hot coffee and some equally hot sex. Oddly enough, we were still very hungry and went out for brunch. After returning home we decided we should maybe go do some shopping but before we could leave we um...well you guessed it we had sex. We did finally make it to the mall and shopped like a couple of women possessed. What I most enjoyed was our little side trip to a very upscale lingerie boutique Claire wanted to visit. \n\nClaire seemed drawn to the lacey corsets and bustier while I gravitated toward the slinky body stockings finding several that were positively phenomenal. By the time, we had modeled each of our favorites for each other we were so worked up we ended up masturbating furiously watching each other a few feet apart in one of the cramped changing rooms. We sort of \"had\" to buy everything that we carried into the room with us because they somehow got...ah...moist. Back at home, we decided on an early dinner. Now I can't quite remember if there was any sex involved. Of course, I may have been preoccupied with having sex to recall having sex while I was having sex...\n\nYou get the drift, I couldn't get enough, and thankfully, Claire was every bit as randy as I was. What a body, what a tongue, and what an incredible, wonderfully insatiable woman I had found! My God, I was living a dream. A dream that seemed absurdly, impossibly, unattainable only a week ago was now my reality. I shuddered just thinking about it as I stood in front of the bathroom mirror putting on my eye makeup. My reverie was completely shattered when a warm soft hand gripped my ass. I only towel dried my hair and was trying to hurry and make way for Claire when she began to massage my happy rump. I steeled myself to apply some firm discipline and bring her naughty hands back into line. You might even call it a bit of \"tough love.\" I told her sternly that she had exactly twenty-five minutes to \"cut that out.\" We had to be in her father's office in a little over thirty minutes but I do hate to rush through the important things. When we arrived at work and I looked up at the monolithic facade of the home office building and was suddenly flooded with an unexpected mix of emotions. As we passed by it on our way to the executive garage, I tried to sort out what was troubling me. \n\nAfter all that had happened in this past week I was already certain that working here would never be quite the same. Sitting in my bare ten by thirteen office, crunching through an endless series of audits and research projects would be absolute torture. I'd just be marking time waiting for each day to end so I could go home to Claire. It just now dawned on me that she wouldn't even be close by in the accounting department any longer. Surely, they would have her doing something else now that Adams no longer needed a watchdog. Damn it, I wouldn't even get to fuel my fantasies watching her parade her fabulous body around the office any more! Work was gonna totally suck now!\n\nThat's when a strange idea popped into my head out of the blue. It was an idea that I would have considered completely absurd a week ago. Now it seemed reasonable, almost desirable to me. I asked myself what if I was to tell them all I just wanted to quit, today! Would Claire even want a full-time housewife staying home while she worked to support us. Hmmm... the idea seamed appealing on a number of levels. I smiled imagining myself doing all manner of domestic duties and started wondering if I could really handle it. It might be fun to try it for a while and if it turned out that it just wasn't \"my cup of tea,\" I could always find a job, later. Losing what little money I was making now probably wouldn't even be missed in light of Claire's considerable income.",
        "Feeling an unusual serenity at the prospect of staying home full-time, I decided that after we found out what this meeting was all about I would have to discuss it with her at home. I didn't have the slightest clue how she might react to such a huge change, for both of us. This was far too big a decision for me to make on my own and I smiled again when that thought struck me. For the first time in my life since leaving home, I had to consider how everything I did now affected someone else. That notion didn't leave me feeling oppressed or limited in fact quite the opposite was true. I felt as though I was part of something, something very special and wonderful.\n\nI had never seen the entrance for the executive garage from the outside or in the daylight for that matter and was impressed, it really was rather cool. The doorway was a big arch with two enormous bi-fold doors. Each half collapsed inward but without question, its best feature was the huge windows spanning the entire length of the garage. They made it appear more like a high-end showroom for exotic luxury cars. Claire's spectacular Mercedes fit right in with the crowd of impressive vehicles as it purred to a stop in her reserved space. After a second look around at the other cars inhabiting the coveted spaces I was forced to concede, \"Fit in my ass, it stole the show.\" One other car really caught my eye as we walked through the quiet garage. Parked on the far side of the garage over near the elevator, it drew my eye immediately because it was so cute and so well...red. \n\nSome lucky big shot upstairs was driving around in my dream car. The damn thing was so disgustingly new it still had the sticker in the window. I was turning green with jealousy as I walked up to look at the gorgeous little BMW Z4M roadster in its lustrous Imola red paintjob. Driving a hot a set of wheels like this through the countryside with the top down and the stereo cranked up was perhaps the only fantasy I'd had in the past four years that didn't include a certain executive assistant. (How I had any fantasies not involving her I still can't explain, go figure.)\n\nSlowing to peek in the window as we passed by I could see it had the Madeira wood interior accents around the electronic instrument panel simulating real analog gauges. In the glare from the sunlight streaming through the windows, I could just barely make out the premium Caver audio system with the factory installed satellite radio. I was sure it even had the full ten speaker system and twin sub woofers to pump out the sound. Hell, when I first saw one of these beauties on the street I ran right home and downloaded the sales brochure memorizing most of it. (Does it show?) This baby looked to have every option available including a satellite navigation system. Peering at the sticker backwards through the far side window, I could only make out the first digit of the price, a 6 Ouch, $60 grand plus. It didn't really compare to Claire's gleaming \"wonder car\" but even this little beauty was way out of my league.\n\nWhen I finally got to where she was patiently waiting for me to stop drooling I threw my lower lip out in an exaggerated pout and whimpered, \"Mommy I want one.\"\n\nShe laughed at my silly expression and answered, \"Maybe if you're an extra good girl Santa will bring one to you for Christmas.\" \n\nI answered her cheerful rebuff with a childlike whine, \"But I can't wait that loooooong.\"\n\nWhen we stepped onto the elevator laughing, she slipped an arm around my waist. As the doors slid closed, she began fondling and pinching my ass and chuckled lightly, \"Well maybe something can be worked out sooner.\"\n\nI turned a lascivious smile toward her and chirped, \"Lady, you just might have a deal!\" and planted a quick kiss on the corner her mouth flicking my tongue lightly across her very tasty lip-gloss. \n\nShe barked at me, \"Now don't make a mess of my make up, we have to look pretty when we get upstairs.\" \n\nI gave her ass a little grope of its own as the elevator began slowing and said happily, \"No worries there doll. In my eyes you could never be anything else,\" my chuckle brought a smile to her sweet glossy lips. \n\n\"Thank you dear, I love you too,\" she said watching the numbers change on the overhead display. She finally let go of my ass just as the doors began opening.\n\nEven in the flats I was wearing, the heavily padded carpet on the 40th floor was making me feel a bit unstable. Claire didn't seem to be having any trouble navigating the 3-inch thick padding in her heels so I quickly fell behind her. As consolation, I did have a wonderful view of her perfect bottom swinging beneath her conservative blue linen dress as she moved down the long hallway. (I've always been a complete sucker for a great pair of buns in case you haven't noticed yet.) She stopped at one of the wide wooden doors knocking twice sharply before stepping inside without waiting for an answer. \n\nI arrived just in time to hear her ask her father, \"Well?\"\n\nHe answered her calmly, \"It was unanimous, just like you said.\"\n\nBreathing a quick sigh, she asked further, \"The rest of it?\"\n\nWhen he smiled up at her and said, \"It's done,\" she pumped her fist like Tiger woods after sinking a forty footer for birdie.\n\nBart glanced over at me standing by the door waiting, with a warm smile he said, \"You'll have to pardon Katie's manners today Jane, she's just a little excited, come on in honey, have a seat.\"\n\n\"Claire honey why don't you go on in and them we'll be along shortly, as soon as these gents finish with Jane here,\" he said smiling at her antics. She squeezed my shoulder on her way through the connecting door. I was a little surprised to hear a lively meeting going on inside the adjoining room.\n\nThe door swinging closed again plunged Bart's office back into silence. That's when I finally noticed who the \"Gents\" that her father was referring to were. Sitting in the far corner of the room, I recognized the pair from the reception Tuesday evening. I took an empty chair adjacent to his impressive hand carved mahogany desk. They looked somewhat less out of place today, but just looking at their butt ugly shoes again made my feet start to ache. The older FBI agent sat silently on the leather sofa across from where I stood his stare boring into me. \n\nHis youthful counterpart looked almost as haggard and weary as he did two days ago. He stepped over to the door I had left open swinging it closed before approaching and offering his hand, \"Miss De Marco I'm special agent Gibbons and this gentleman is Deputy Director Walcott.\"\n\nI shook his soft hand nodding to the deputy director and said, \"Pleasure to meet you.\"\n\nPicking up on my uneasy expression Claire's father broke in saying in his easy manner, \"Jane honey, these gents would like to ask a favor of you, they did try asking me if you'd do it but I told 'em I wasn't about to answer for you.\"\n\nI smiled my thanks to him for his consideration before turning to Special Agent Gibbons and asking, \"All right gentlemen what is it can do for the two of you?\"\n\nMy uneasiness from Tuesday night returned when I feel the deputy director's eyes on me. I took an instant dislike to him and communicated it by returning a steely glare of my own. For Mr. Stillwell's benefit, I decided I would listen to what they had to say despite my gut reaction to the man.\n\nThe deputy director finally deigned to speak and said in his irritating snobbish sounding accent, \"Miss De Marco the Federal government would like to thank you for the assistance you provided in this case.\" \n\nLeaning toward me he explained, \"You see I was the original investigating officer when the people at Allied began suspecting that Adams was embezzling from them. There was little doubt that it was happening but we couldn't positively trace it back to him. If the evidence was there, we just couldn't make the connection. After a full year of pouring over their records everyday we still couldn't prove it.\"\n\nI could empathize with him on that, knowing exactly how frustrating that kind of work could be. His next words wiped away any kind thoughts I had for him.\n\n\"I told my superiors it would take an extensive computer search to ferret this guy out but the fools wouldn't listen and grant me the necessary resources.\" \n\nShifting in his seat and adjusting his tie I decided that he looked like a pitiful old turkey who fancied himself a peacock, trying to fluff his feathers. I smiled at the mental imagery and he mistook my grin was a friendly one.\n\nHe kept right on but the sound of his voice was really starting to bug me, \"You see miss De Marco, computers were relatively new back then and it seemed that I was one of the first to recognize their capabilities in this kind of investigating.\"\n\nI had heard just about enough of this guy and wanted him to shut up. I just wanted to find out what the hell they wanted me to do so I could tell them no and get on with my life. At this point, a familiar figure made her presence know inside my skull. My little clown for some reason decided that it just might be fun to mess with the FBI.\n\nI broke into the deputy director's self-aggrandizing and said, \"I hate to burst your bubble Director Walcott, but I didn't use a computer to figure out Clifton Adams.\"\n\nHe recoiled visibly stunned by my statement and I had to struggle to keep my expression neutral while grinning from ear to ear on the inside. Continuing after a lengthy pause I told him, \"All I needed to figure out what he was up to was a pencil and paper.\" I reached out plucking a pad and pen from Mr. Stillwell's desk and began writing as I finished my thought, \"in fact I don't even remember using the eraser.\"\n\nOn the paper, I scrawled from memory a simplified version of the algorithm I used to find out how Adams was diverting funds from the company. When I finished writing, I flipped the pad onto his lap and said, \"That,\" I pointed to the pad, \"and this,\" I tapped my temple with my finger, \"is all I needed to catch him in the act.\"\n\nI actually did have to build a simple computer application from the algorithm to make the searches faster but he didn't need to know that. I decided if I could needle this guy just a little more he might go away and leave me be.\n\nI casually pulled one of my business cards out of my pocket handing it to him stating flatly, \"If the Federal government really wants to be thankful they can send a check to that address.\"\n\nBoth the deputy director and special agent Gibbons exchanged stunned looks at my unexpected response. Walcott still held my card between his thumb and forefinger as if it might somehow soil him if he allowed it any closer.\n\nA deep raspy laugh from behind the desk broke the silence and Mr. Stilwell said, \"I told you two to watch out with her, she's feisty.\"\n\nBarely concealing his own mirth as the red-faced deputy director stared at him in smoldering silence, Agent Gibbons spoke up to explain.\n\n\"Miss De Marco,\" he paused shifting in his chair, \"This case has come to the attention of some people at the highest levels in the Department of Justice.\" He looked over at Walcott seeking permission to continue, \"They were very impressed with the level of cooperation throughout the entire period it took to resolve.\"\n\nI let my smile grow as I focused on the bright young agent, but could almost feel the deputy director's angry glare swing back too me.\n\nHe didn't miss the antagonism in Walcott's glare, but continued gamely, \"The Bureau has asked permission from Mr. Stilwell to use the data gathered here at Continental as well as our own case file for instructional purposes in our Quantico training center after Clifton Adams trial.\" \n\nI nodded my understanding still smiling warmly at agent Gibbons waiting for him to continue. I could see that my friendly treatment of the junior agent was really pissing off his snooty boss.\n\n\"What we would like from you is a thorough breakdown of how you spotted the duplicate funds transfers that Adams was making in your original audit three years ago. Since it was done before we had the data trap running on the computer system we know what you found but not how you did it,\" the affable young agent explained. \n\nHe tried to sweeten the deal adding, \"Perhaps we could even persuade you to address one of our training sessions in person at Quantico, all expenses paid of course,\" he was really working me with what little the government allowed him to offer and I was almost ready to say yes, when Walcott fucked it all up.\n\nA patronizing tone oozed from his every syllable when he said, \"You would be doing your country a great service young lady, and perhaps some time spent on the East coast might be good for you. Dealing with different kinds of people could broaden your experience, open up your world view, might benefit your career to see how different people view similar situations.\"\n\nThat did it! Now the fucker pissed me off! So now, I'm some kind of bassackward hick to this asshole!\n\nI wheeled toward him asking in an equally condescending a tone, \"If I may be so bold as to ask, where did you attend University Deputy Director?\"\n\nThough his expression betrayed that he was caught completely off guard by my question it didn't stop him from looking down his nose at me when he answered in his haughty accent, \"Havad.\"\n\nFighting the urge to snicker I said, \"Oh good,\" feigning relief I added, \" for a moment there I thought I might be dealing with a Yale man,\" I watched in silence as his confusion at my insult ebbed and the anger bloomed across the deepening wrinkles on his brow before I continued.\n\n\"You see Mr. Deputy Director I didn't go to some Ivory tower institution to perfect the social niceties of life. I attended a small University in Evanston Illinois. I learned what I know there. From excellent professors who knew their material and how to pass it on to their students. Perhaps you should consider sending your hopeful young agents to study there, instead of bothering me.\" I paused to let that sink into his thick elitist, skull. As a parting shot I threw in, \"Perhaps some time here in the Midwest would do them some good, broaden their experience, and open up their world view.\"\n\n\"I am no teacher Mr. Deputy Director I have too damn much work to do, and since the Federal Government isn't signing my paychecks I will have to respectfully decline your generous offer,\" my frosty glare never left Walcott through my entire diatribe. In the periphery of my vision, I could see agent Gibbons' trying to conceal a smile and Mr. Stilwell's shoulders were convulsing with his barely suppressed amusement.\n\nStill staring at the now very angry Deputy Director I summarily dismissed the pair, \"Good day Gentlemen.\"\n\nLooking for support from Bart Stilwell, they remained immobile. When it became obvious that none was forthcoming the pair rose slowly to leave. Before they were out the door, I decided to give the verbal knife in Walcott's back one last twist, \"Special Agent Gibbons?\" \n\nWhen he turned back to look at me I said, \"If you ever get tired of the Bureau you call me. We will always have a room here for a capable investigative auditor. It's honest work that probably pays a bit better than the government.\"\n\nWhen the door finally closed behind them, Bart Stilwell was howling and thumping his desk. His laughter was so infectious that just listening to the rumbling sound, I found my anger at the FBI agents easing. Without ever stopping his laughing, he managed to croak a few of his favorite excerpts from my outburst, \"respectfully decline,\" \"Yale Man,\" \"didn't even need the eraser.\" The two of us nearly laughed ourselves to tears, before either of us could get ourselves together and settle down.\n\nLooking across the wide desktop into his eyes, I said to him, \"God almighty that felt good.\"\n\nHe nodded appreciatively answering me, \"I 'm just glad I was here to see it. That I wouldn't have missed for all the money in the world,\" a brief fit of coughing took the wind out of him before he added, \"I've been wanting to tell that snotty sumbitch off for three years, but this was much better, Thank you sweetheart.\"\n\nSmiling warmly I answered him, \"It was my pleasure.\"\n\nThreatening to erupt into a fresh bout of laughter when he said, \"I loved that job offer bit at the end, it was perfect. I do hope you weren't just teasing that youngster he is a sharp one.\" His smile faded a bit and added, \"He's been a hell of a lot more useful around here than that windbag Walcott.\"\n\nTwo words were all I needed to allay his concern, \"Damn straight,\" I grinned and said, \"I'll call him in the morning and let him know that I'll help out with what he asked as long as his shithead boss has nothing to do with it.\"\n\nThis drew a nod from Mr. Stilwell and he said, \"Fair enough,\" he paused looking intently into my eyes his smile undiminished, \"I was going to suggest you do exactly that, but I should have known I wouldn't need to.\" \n\n\"They should've never let that smarmy prick out of his Washington office,\" I said still miffed, \"That way he looks down his nose at you, does tend to piss off us little people.\" \n\nI was more than happy to spend time chatting with Mr. Stilwell he was so funny and pleasant to talk to. What made me most happy was that Claire had family that was absolutely accepting of her. The fact that she was gay made no difference at all to Bart, she was his daughter, he loved her, and that was that. It was so unlike my own family, back in cornpone middle Iowa. My father, a devout Baptist and deacon of our church literally threw me out of the house without a word when I finally told my mother and him that I was gay. It put a hell of damper on the Christmas break of my sophomore year in college. In the ten years since, I hadn't heard from or spoken to either them or my older brother. Nothing, not so much as a card or letter, it was as though in a single moment, I ceased to exist to them all and it still hurt me. I thought my mother might at least protest how my father manhandled me off the front porch while he condemned me to hell for falling into the clutches of Satan himself, but she sat stoically by and let it all happen\n\nDabbing the corners of his eyes with his handkerchief he said smiling, \"Well, now that you've so skillfully dispensed with the wants and wishes of the government lets get down to our own business, shall we?\"\n\nI thought my only reason for being here was to meet with the two G-men and asked him, \"There's more?\" \n\nHis mischievous grin broadened at my question and asked, \"Now you don't think I would drag you all the way down here just to be insulted by that jackass did ya Jane?\" \n\nStill baffled, I said, \"Well I...\" \n\nRising quickly from behind the thirty acres of finely polished mahogany he motioned for me to follow him saying, \"C'mon let's take a little walk honey.\" \n\nI followed him past the huge wood leaves that made up the doors for the boardroom to another office door much like his own. \n\nHe stopped turning to me he said, \"By rights Jane, Clifton Adams should have had this office,\" opening the door he stepped inside motioning me to follow.\n\nThe large richly paneled space was completely empty except for a worn desk chair sitting near a telephone that rested on the wide windowsill. He indicated that I should take the chair while he leaned against the sill.\n\nHe explained in his soft raspy voice, \"You can see how impossible it would have been for Claire to keep an eye on him here, so we told him the executive suites were all filled and put him on nineteen with the accounting division. Lucky for us he didn't question it.\"\n\nI nodded having no idea at all what to say, why he was taking the time to explain this to me was a total mystery.\n\nHe smiled down at me and continued, \"He wasn't the only one bumped from his proper office though,\" Pulling a thin brass plate from his coat pocket glancing at it briefly before holding it out to me he said, \"This sign belongs on the door across the hall.\"",
        "I looked at the engraved letting and read \"K. C. Stilwell Vice President Sales\" my fingers traced over irregular surface of her name.\n\n\"You can keep that if you'd like,\" he said grinning, \"Claire won't be needing it anymore.\"\n\nMy quick gasp seemed impossibly loud in the empty chamber.\n\nHolding his hand up to stop me from jumping to any wild conclusions he said, \"Now don't you worry none Honey, she'll be taking over my office as president and C.E.O.\"\n\nStunned by the good news and thrilled for Claire I couldn't help feeling a touch of melancholy with the idea Bart might be leaving us soon. \n\nHe must have seen it in my expression and said, \"Don't you worry about me neither Jane, I'll be around, I'm still chairman of the board and those dipshits need some serious watching over, if you know what I mean.\"\n\nI opened my mouth to tell him I was happy to hear that, but he cut me off by saying, \"Your job is about to change too if you decide to accept the offer the board approved this morning.\"\n\nI couldn't imagine why the board members would bother discussing my puny little job or me.\n\nHis bushy white moustache couldn't conceal his smile when he saw my confused reaction. He chuckled quietly before he started explaining what he meant with that last remark. \"It'll be a whole lot more responsibility for you honey but comes with a corresponding increase in salary. The board approved something well into six figures. The position comes with this office and your own executive assistant. You'll also be getting the full benefits package, including retirement, there's an annual clothing and vehicle allowance, and a whole bunch more if you decide you want it. You'll be a participant in our EIC program, that's the Executive Incentive Compensation program. In English that means you might get a bonus at the end of the fiscal year Jane.\"\n\nI could hardly breathe even with my mouth gapping open.\n\nHe paused for a second sighing then added, \"There is one condition they all insisted on though, the other board members do want you to pursue a Masters Degree.\" \n\nHe grinned twitching his eyebrows, \"I did make them agree to pick up the tab on it though. They were all real impressed with your dual majors in Economics and Mathematics, but they're a bunch of snobby shits who think that without a Master's or P.H.D. you're not worthy to sit at the same table with them.\"\n\nMy brain reeled with what he had already told me and my mouth was getting dry from hanging open so long. When I finally felt like I could trust myself to speak I croaked, \"What's the position?\" my voice sounding high and thin inside the empty room.\n\nHe straightened and started for the door and said with the devilish smile still on his tanned face, \"C'mon Jane, I think I'll let them tell you.\"\n\nI followed him down the hall and as we walked, he asked me a question out of the blue that further befuddled my whirling brain, \"Before I forget to ask again, Jane honey do you happen to have an up to date passport?\"\n\nTrying to remember what I did with the damn thing after the one time I used it, I answered him a little uncertainly, \"Yeah, I think I have it in a safety deposit box at my bank.\" \n\nHe nodded and said, \"Good, Good you might want to pick it up, and soon,\" before he stopped in front of the boardroom doors where he flung them open roughly. \n\nHe walked inside quickly leaving me to stand framed in the empty opening alone. Staring like a deer caught in the headlights, I saw Claire standing inside the curve of the massive horseshoe shaped table smiling as her father made his way to its head. She beckoned me forward and I took a few tentative steps into the room but froze again when I saw all of the board members were staring, waiting for me to enter. Growing impatient with my hesitation Claire came over to where I stood frozen in place. Finally, with her hand pressing into the small of my back she propelled me toward the center of the room.\n\nStepping around in front of me smiling she addressed the entire room saying in a loud clear voice, \"Ladies and Gentlemen I would like to introduce to you our new Vice President of Finance and C. F. O. Miss Jane De Marco!\" \n\nWhen the normally subdued boardroom burst into loud applause I couldn't move, my breath was short, my limbs felt leaden, chills ran down my spine, I was a statue. \n\nClaire looked into my eyes and asked concern in her voice, \"Jane, are you alright?\"\n\nThe tears erupted from the corners of my wide-open eyes and I threw my arms around her pulling her into a fierce embrace. I needed the support just to remain standing as well wanting to share my joy with the one person who mattered most to me. \n\nWe stood hugging in front of the whole board for at least a minute. I cried, Claire chuckled quietly until her father broke the spell by saying to the assembled members, \"I think we can take that as a yes to the promotion.\"\n\nI nodded against Claire's shoulder in acknowledgement and he rose from his chair offering me his hand. Soon the whole room had risen from their chairs and the applause grew louder and more boisterous with each passing moment. I broke away from Claire and she gave me a quick kiss on the cheek before pushing me toward the end of the table where I began making a circuit accepting congratulatory handshakes from all the smiling board members. Just as I reached the far end of the table, a loud \"pop\" echoed through the room and I saw Mr. Stilwell busily filling Champagne flutes as Claire handed them around the table.\n\nWhen I had received one of my own Mr. Stilwell he shrugged and said looking at me with a grin, \"Sorry Jane, no beer today, this is a celebration that calls for Champagne!\"\n\nI raised my glass to him and said, \"To Continental Casualty and Insurance.\" \n\nThe room erupted into a chorus of happy \"Hear, Hears.\"\n\nClaire's father still beaming said, \"Jane dear, Claire would like to present you with a little token of our thanks for helping to rid the company of Clifton Adams as well as welcoming you to your new position.\"\n\nI glanced over at Claire and she held out one hand tightly closed. Her fingers slowly unfurled to reveal a set of car keys with the BMW logo emblazoned across them.\n\nShocked out my wits I gasped and said, \"You didn't!\"\n\nShe nodded with a huge grin, her eyes shining as I plucked them from her palm. \n\n\"Oh my god, you're not shitting me are you?\" I gulped out, \"The red one downstairs?\"\n\nShe never stopped nodding and I grabbed her into another long hug and blurted, \"Thank you, Thank you all so much, Oh my god this is all so wonderful!\"\n\nBart spoke up, \"It's all well deserved Jane, In fact the two of you have done more to keep this company from going tits-up in the past four years, than everyone sitting around this table has combined, ah pardon my French.\"\n\nThere were murmured agreements around the table and suddenly it hit me, I wasn't the only one in the room with something to celebrate today. I pulled back from my embrace with her and looking at Claire's surprised expression said, \"I was so wrapped up in all the excitement I almost forgot, Congratulations to you too Madame President!\"\n\nShe smiled humbly but when I gave her a quick peck on the lips and her eyes flew open and the whole room bubbled with laughter at her surprise.\n\nBart cleared his throat loudly and announced as left the head of the table, \"Well everyone, if we are finished here I think I'd like to take a couple of ladies out to lunch, Jane dear, where are we dining?\"\n\nI answered, \"Romero's,\" jingling the keys in my hand, \"I'll get to drive a little farther if we go there.\" \n\nSmiling at my logic he said, \"Fine then I'll meet there in half an hour.\"\n\nI said shaking the keys again, \"better make that at least an hour maybe two.\"\n\nHands on his hips he started laughing at my silliness and asked, \"How does two o'clock sound?\"\n\nClaire and I met his smile and said together, \"Perfect.\" \n\nHe laughed and waved as he left the room but I knew he understood completely. We waved our own goodbyes to the rest of the board members and I snatched Claire's hand and said, \"Come on lets go already,\" pulling her through the open door and down the hall toward the elevator.\n\nStanding inside the garage with Claire holding my hand I just stared at \"my\" new car in total disbelief. I was having trouble even making the decision to touch it for the first time. So instead I read the window sticker from the correct side this time. I had to do something to give my brain time to absorb what had happened in the past hour. The inner circuitry of my mind was too near complete overload I had to slow things down before smoke started rolling out of my ears. I wasn't sure what I hoped to read on the sticker that would help me in this situation, but it was all familiar to me. Hell, I knew all the specs. and sales brochure for this car better than I knew my own dress size. \n\nThe repressed motor head in me was ready to pop as my eyes feasted on the list of features catalogued on the sticker. It had the S54 3.2-liter 24-valve inline 6-cylinder pumping out 330hp and 262-foot lbs. of torque. The six-speed manual transmission put all of that horsepower to good use through the set of low profile Pirelli performance tires mounted on18 inch spoked aluminum wheels. I knew all about the other options and equipment but it was strangely calming to read them laid out logically. Electronic Stability control, twin-tube gas-pressure shocks, BMW nav. system, heated windshield washers, and side mirrors, it even had the 8-way power front seats, damn this was just too fucking cool!\n\nClaire nuzzled my ear and said softly, \"I picked it out just for you.\"\n\nI asked her in an awed tone, \"How, how did you know?\" \n\nShe chuckled and said dismissively, \"Shit that was the easy part you've only had a picture of it as your computer wallpaper for going on two year's. I only had to pick out the color, I hope you like red?\"\n\nI said seriously leaning into her embrace, \"It's perfect; just like you,\" and gave her a quick kiss.\"\n\nHer hand groped my ass as she pushed me toward the door and said, \"C'mon baby lets take it for a little spin.\" "
    ],
    "authorname": "J-Stroke",
    "tags": [
        "lesbian sex",
        "domination",
        "hot cars",
        "body stocking"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/warming-the-iceprincess-pt-02"
}