{
    "title": "Lost Empire Ch. 09",
    "pages": [
        "Laughing Derrick read all the reports that came in, the commander of the ship that had fired on them screaming that they were an ancient evil that needed to be destroyed. Leave it to be said that the man, was placed in a restrictive jacket and holding cell. After Shelby detected the change in scan designed to specifically to detect them, Derrick became very interested in the man responsible for it. \n\n\"Shelby,\" Derrick started, \"can you link with the Ranger computer, obtain onboard video files?\" \n\n\"Yes Derrick it shouldn't be too hard, considering it is just an advanced computer,\" she responded. \n\n\"Jump to hyper-space then I want all the feed during the time that we were scanned and the scan changed. I want to see just who we are dealing with.\" Derrick said, thinking it might be an older officer trying to make advancement. \n\nA few moments later Derrick watched as a young officer discovered them, then notified his commander, was brushed off, then continued on. Hmmm Derrick thought I like his work ethic, much like mine had I not been like that I'd have never developed the living metal detection system. Then a thought hit Derrick, I do need more human operators for the ships, hmmm nice idea just needed a way to implement it. \n\nShelby interrupted his musings a moment later, \"I also have his service record with the Rangers he is an exceptional young officer, he is ensign Mack Baron quite distinguished at the academy, very high marks, very intelligent,\" Shelby remarked. \n\n\"Good I want you to file his name away we need to keep an eye on this as he might prove a danger later on,\" Derrick told her. Really need to have Shelby go through all the files and see just who might be a danger to all of us. \"Status of trans-warp, re-gen,\" Derrick asked after they had successfully jumped to hyper-space. \n\n\"All systems are reporting green at the moment I need five minutes twenty five seconds for restart then we should be able to jump,\" Shelby reported. \n\nDerrick nodded he was more than anxious to get to the rest of the ships, as they had less than half their defensive capabilities. \"Alright Shelby, just make sure you have no more circuits that need replacing before you do jump. I don't want to stall out half way there and possibly become unstable unable to reintegrate into normal space.\" \n\n\"Yes Derrick, I have been running diagnostics on all the systems for almost an hour, I encountered a few problems but have had sufficient time to correct them. Three minutes ten seconds 'til safe trans-warp, as of yet Conner hasn't reported detection by any outside source. Though he is seriously limited only able to detect a half light year distance from his position. I am afraid they might be attacked without me there to help defend them.\" Shelby sadly stated. \"One minute thirty seconds to activation of trans-warp.\" \n\nDerrick was still looking over the readings for several plans and systems that existed on the ships and a few he wanted to add that would make them far more defensible. \n\n\"Trans-warp ready Derrick, tri-angling their position, commencing.\" Shelby stated. \n\nA now familiar whine started behind Derrick, hmm he thought still odd sounding, then they were across the galaxy within a few seconds. Derrick immediately recognized the old abandoned ship yard, as he'd been here on numerous occasions. \n\n\"Shelby stand down trans-warp, something isn't right. The wind up before transit sounds off, please check all your Critela particle emitters. I believe the problem may lie there.\" Derrick advised her. \n\n\"Yes Derrick, running diagnostic on that system now.\" She was silent for a few minutes then reported back to Derrick. \n\n\"Derrick!,\" she shouted excited, \"I found that using the Critela particles to accelerate the re-gen of the generators has seriously weakened the containment of the particles. Almost all of the particles being released are somewhat tainted and cause an adverse amount of strain on the trans-warp engines. It would be advisable to wait at least a day before I attempt to use my trans-warp again. This should allow sufficient time for the system to flush and replenish.\" \n\nDerrick was nodding the whole time going through this new information, he'd overlooked the possible dangers because of the urgency of the situation. \n\n\"Conner using this new information how long 'til your trans-warp capable? Derrick asked. \n\n\"Sadly Primary, it will be another day and twelve hours as the strain ruptured the Critela chamber most of that will be purge and re-gen. My hyper drive is still off-line for at least two days nineteen hours.\" Conner advised. \n\n\"Feel proud Conner you performed exceptionally well, your bothers, and sister are safe because of you.\" Derrick told him. \"Lucy?\" \n\n\"Yes Primary, I will require another two days, twenty one hours, thirty one minutes 'til I am hyper-drive and trans-warp-drive capable. Light shield at sixty five percent and holding steady,\" Lucy stated proudly. \n\n\"Thank you Lucy, don't try to rush, Shelby and I found that doing it right if far better than hurrying.\" Derrick said. \n\n\"I am afraid Primary that I am still without almost all power I still need four days twenty three hours, forty three minutes thirty four seconds of re-gen on my engines. The rest power wise, I have fifty five percent power from my generators my light shield is at forty five percent. Is it true that you have spoken to the palace A.I.?\" Zan asked. \n\nLooking over at Shelby he should have known that she wouldn't have been able to keep her mouth shut. Sighing Derrick decided that he might as well as get this over with. A moment later four holograms were staring at him. \n\n\"Yes, I have talked to Mary, the palace A.I. I have recited the first half of the royal code, as of a few hours ago I am at all access except imperial.\" Here all of the holograms smiled each bowing low to him. \n\n\"My lord we are all proud to serve you, the ideas you have incorporated in us will go far for us to protect the empire again.\" Zan stated after looking at Shelby and getting a nod from her. \n\nSighing Derrick thought it's going to be a while for that. \"I am glad that you are proud to serve me, but please remember at the moment there is no empire. I am working on a way to resurrect it, though it will take a lot more than I have right now, much more.\" \n\nAll the holograms again bowed, \"if you are the next emperor as it appears you are, we all pledge our lives to you. We live and die for you our lord, nothing will be too little for us to do.\" Zan and Lucy stated. \n\n\"You are the reason we were created, protecting and serving you is our duty,\" Conner stated. \n\n\"Thank you all but we have a hell of a lot of work before I can ascend the throne and rule.\" Derrick said though a great many ideas were starting to flood his mind. \"Alright, first order of business is to have all of you repaired. I want all systems that aren't in use to be shut down, I want all power reduced to almost non-existent levels. I know this area of space and know that there is a pirate nest not too far from here. I don't want to lose any of you to them, they would strip your A.I. programs along with the ship though I know most of them would die taking you.\" Derrick instructed them all. The care that he was showing them all had tears in the eyes of each hologram before they vanished back to their respective ships. \n\n\"Shelby I need status on 0001,\" Derrick said suddenly changing subjects. \n\n\"If I may,\" 0001 stated breaking into the conversation, \"I am at fifty percent growth, I have completed one energy producer and have a second coming on line in a matter of minutes. This should facilitate faster re-gen though I have need of at least one of the last five...\" \n\n\"Last five? Just how many do you have?\" Derrick asked. \n\n\"I'm sorry sire, I possess eight in total. It is essential for much of the equipment that I carry. I wish to tell you of them but 'til your status as imperial is clear I cannot. Though I can tell you that I still have a message for you no matter what.\" 0001 replied. \n\n\"Why can you not tell me now?\" Derrick asked thinking this was odd even for these ships. \n\n\"It was how I was instructed to do it,\" 0001 said. \n\n\"Do you know who left this message?\" Derrick asked getting a little annoyed that something for him was being with held. \n\n\"No, Primary all I know is this was ordered and the royal code was added. I was told not to give it to you 'til I am complete. I was also told to bring you on board under certain conditions, and only then deliver the message.\" 0001 answered. \n\nSighing Derrick could see that he wasn't going to get anywhere when they had an order they followed them to the letter. \"Alright, I want as much protection for ... 0001 do you have a name or were you destroyed before one was given?\" Derrick asked. \n\n\"For a very short time I was called Tempro, though I am not sure why.\" 0001 said. \n\n\"I like it.\" Derrick said, \"It is only fair that you also have a name, as do your brothers and sisters.\" \n\n\"I thank you sire, this is a gift I cannot begin to thank you enough.\" Tempro replied Derrick thought he could hear a tearful voice coming from the ship. \"I will endeavor to make you proud of me.\" This time Derrick was sure he could hear Tempro crying. \n\nDerrick just shook his head there were times that he really didn't get what the hell was going on with the ships. \n\nAgain Derrick looked over his headset project, sighing he knew that if he was going to bring the empire back he was going to need all the ships. Then again some were lost in other places and despite what they said there was no way to be absolutely certain that the brain cases really were indestructible. With the passing days Derrick had watched the new ship take shape. Christ this thing was a monster and here he'd thought that Shelby and the others were large. It was barely over half grown and it was already over three miles long, plus the fact that many of the now apparent differences were showing. Many of its stellar and astral fins were of a totally different configuration. \n\nThe next day Derrick had Shelby contact Mary in the Palace, tuning to the extremely high frequency Shelby opened communications, \"Palace A.I., this is EIG-0101F code alpha-339, beta-229, delta-119, gamma-009, omega-stop. Primary Derrick wishes to speak with you again.\" \n\nIt was only a moment later that Mary answered as she had been waiting for this call, \"EIG-0101F code alpha-339, beta-229, delta-119, gamma-009, omega-stop, confirmed, I am ready Shelby.\" \n\nDerrick again stepped up, \"Mary I was told to do this a specific way therefore let me repeat the first section before I recite the second.\" \n\n\"Please proceed,\" An excited Mary said. \n\n\"Mary, I am Derrick O'Toma descendant of Thomas Tomalley, Alpha-010A beta-020b, delta-030d, gamma-030ga, Omega-050oo2, confirm.\" Derrick said. \n\n\"Derrick O'Toma, Alpha-010A beta-020b, delta-030d, gamma-040ga, Omega-050oo2, confirmed. Section one complete, I await section two confirmation.\" \n\nDerrick took a deep breath this was going to be hard, this part of the code his grandfather had told him was obscenely long. \"Section two is as follows Omega-Delta-Delta, Mu-Alpha-Nu, Iota, Alpha-Mu, Alpha-010A, Gamma-020g, Epsilon-030e, Eta-040et, Iota050i, Lambda-060l, Nu-070n, Omicron-a, Omega-b, transfer confirm.\" Derrick breathed a sigh of relief he was sure he would screw up the code before he finished now he had to just wait for Mary to confirm it. \n\nA moment later a hologram of a petite slightly older woman, with slightly gray hair but a killer figure appeared in front of Derrick. The rest of the holograms appeared behind Derrick each of them awaiting the findings of Mary. \n\n\"Derrick O'Toma,\" Mary started, \"section 2, Omega-Delta-Delta, Mu-Alpha-Nu, Iota, Alpha-Mu, Alpha-010A, Gamma-020g, Epsilon-030e, Eta-040et, Iota050i, Lambda-060l, Nu-070n, Omicron-a, Omega-b, transfer confirmed.\" \n\nHere Mary and all four of the ship holograms bowed to Derrick, \"Please I feel uncomfortable,\" Derrick said. \n\nNodding Mary and the others stood, \"Derrick O'Toma, we the palace control now recognize you as the rightful ruler of the empire, such as it is.\" \n\n\"Sire,\" Zan said as he again bowed, \"might you give us missions that we may help you to reclaim the empire? We all realize that there is much work to do, we are eager to begin to restore you to your rightful place at the head of the empire.\" \n\n\"As will I, as your control, you have control over much of everything and can use it whenever you so choose. You simply have to ask and I can most probably make it so. Though you do control almost all currency through manipulation of many cleverly placed investments, you would still have to claim them. However, therein lies the problem. I have all the proof that is needed sire but getting others to believe is another thing. As I said you control a vast fortune many hundreds of times larger than your predecessors I am sure that it wouldn't be hard to hire an army to start taking the empire back.\" \n\nDerrick was nodding through all of this several plans forming in his mind. It just felt that he didn't have enough knowledge looking at his headset he knew what he had to do. \n\n\"Alright Mary, I want you to keep gathering all the evidence that you can against all the republic leaders we will move soon to take the Republic down. Now then did you find the sabotage?\" Derrick asked. \n\n\"Yes Sire. I found a total of 153 sections with both programs I had. Unfortunately I was only able to remove 142 the last 11 are in prime sections of my personality and planetary control.\" Mary sadly reported, \"I am sorry sire, I failed in the task you set for me.\" \n\nDerrick looked at Shelby and moments later a disc appeared in his hand, \"This is a program I developed years ago to help purge and remove any malicious programs I found within my computers. The new section is something I worked on to help the ships.\" \n\nA moment later the disc was in the palace, Mary lovingly looked at it before slipping it into her disc receptacle. Starting it she felt it start to wind its way through her programs, within minutes it had found all 11 of the problems. As she watched amazed the malicious programs were eradicated all but one, though she was now safe from almost any action she took this one was posed at her heart. \n\n\"Sire, I used the disc as you said to. It has cleared all but one of the dangers from me. This last seems to be far more complex and deeper rooted into my system than the others your disc is keeping it at bay but it is still slowly advancing. Before I only had a few weeks, now I'd say that I have at least six months\" Mary sadly said, though she was glad that he cared as much as he did she didn't think she was going to be able to be saved. \n\nAs the disc appeared again Derrick thought about the problem a bit. \"Mary I need a copy of what it looks like and what it does then I can work on a way of eliminating it.\" Derrick said after a bit. \n\nDerrick didn't see the tears that were forming and falling from Mary's eyes as he was now working on the disc. \n\nNodding to Shelby and the others Mary withdrew back to the palace, at least now she had a chance. \n\nFinally almost a week later all of the ships were repaired, Shelby and the others were monitoring all frequencies. Derrick was hoping to find out more about what the Rangers were doing in regards to him and the ships. \n\nThe morning of the seventh day there, Shelby picked up on some chatter from between apparent freighters, though to her it sounded strange. Derrick listened to it for a few moments and shouted to Shelby to have all the ships arm and apply their light shields. Quickly they all complied, Tempro now had light shield capabilities though only at forty five percent. \n\n\"Alright we're going to have company, we could jump away but I'm tired of dealing with these ass holes. Zan I want you and Conner at each end of the system, Lucy I want you to act as bait 'til it is too late, Shelby we are going to be here monitoring everything 'til we can intercede. Understand I want no destruction I want these bastards to be grateful that they are alive thanks to us. I want them to know we could have destroyed them but didn't.\" \n\n\"Derrick,\" Shelby interrupted, \"I am getting transmissions again it appears that they are close!\" \n\n\"Alright places, remember no destruction if they start to run when they see us, disable the engines and weapons.\" Derrick ordered. \"Let me hear them Shelby,\" Derrick told her. \n\n*\"Rag a Muffin, this is Hand Out, found those bastard ships that everyone is looking for though I only see two, don't see what the fuss is about.\"* \n\n*\"That's ok Hand out head back the entire clan is headed to your location. They might have gotten twenty ships before but this time the entire clan will be here. Let them two ships take out over a hundred ha, ha, ha! They don't stand a chance!\"* \n\nDerrick smiled maybe after they took out this whole clan the other clans would quit. Well one could only hope Derrick thought as he watched the other three ships get into position. \n\n\"I'm initiating neural link I will only correct if you are off course or powered up too far. The information that we just received it is believed that over a hundred ships will be coming to attack us. They only think that Shelby and Lucy are here, therefore we have a tactical advantage.\" Derrick advised all the ships as they awaited the fleet of pirates that were heading their way. \n\nThey'd only had to wait a few hours when Zan reported that he had a large number of ships approaching. Nodding Derrick contacted Conner, \"Have you detected any ships coming up on the system from your direction? Derrick asked. \n\n\"No Primary, nothing not even a signal in this direction.\" Conner reported. Hmmm thought Derrick and here he thought they were military he was expecting a classic pincher move to try and box them in coming from two or three directions. Holy shit! These guys really are idiots and their over confidence was about to be their undoing though it really hadn't mattered. \n\nThey were as good as caught any way as he told the last clan leader it was stupid to go against a ship a hundred times more powerful than they were. Hell they thought there were two ships even with the whole clan Derrick thought the clan leader knew they didn't have a chance. Especially after what had happened to the last fifteen ships that they had met. \n\nThey had just started to enter the system when Derrick finally ordered Conner to join Zan. \n\n\"Thank you sire I thought you were punishing me by making me miss the action.\" Conner replied.\n\n\"No Conner I had to make sure they weren't going to attack on two or more fronts.\" Derrick told him. \n\n\"Ah I see! Again thank you sire.\" Conner said as he flashed out and was with Zan within moments. \n\n\"Let them all into the system, then I want you to start to disable them as fast as you can, Shelby and Lucy will start from the front, with luck we'll get them all.\" Derrick ordered.\n\nA few minutes later the entire fleet was within the system, a minute later what can only describe as organized chaos ensured. Zan and Conner started to take five then ten ships at a time firing from several weapons at a time. Derrick was relieved to see that they weren't even using half power. \n\nThen total chaos ensued as Shelby and Lucy started from the front. They'd gotten nearly all of them when suddenly ten ships went to hyper-space. Shelby and the others jumped out returning moments later two ships apiece in tow. \n\n\"Shelby you still have a lock on them?\" Derrick asked. \n\n\"Yes Derrick, I estimate it would take me three minutes five seconds to catch them.\" Shelby replied. \n\n\"Watch these ships, but stay as far from them as you can, Shelby and I will be right back.\" Derrick ordered then they flashed out. Millions of miles from the ship yard Shelby entered hyper-space easily catching both ships and disabling them. Dropping to normal space Derrick was surprised when the clan leader contacted him. ",
        "\"To the crew of the strange ship, surely we can talk a deal. I have a vast amount of treasure I would be willing to split with you no muss no fuss.\" The clan leader said. \n\nShelby again distorted his voice as Derrick answered, \"As I told the last clan leader you really ought to wise up. Going against a ship far superior to all of your own, definitely shows a lack of practical experience. You guys are pirates? Please you guys are a joke, tell the other clan leader when you see him. I warned him when I took the first twenty ships. As I did you and the rest of the pirates.\" Derrick switched off as the clan leader started to scream and threaten. \n\nFinally they were all together, hell Derrick had to laugh only one ship had opened fire and really that was pathetic. \"Shelby call the Rangers to inform them that an entire clan is here well over a hundred ships. Tell them they're going to need a bigger prison.\" Derrick laughed at the joke, then withdrew all the ships well over 5000 miles away behind a nearby moon. They had been there maybe an hour and a half when the space in front of the pirate fleet began to waver. Suddenly the area began to fill with first, second, and third class Ranger craft. Then a huge almost like an ark appeared. \n\n\"Derrick why are we still here? Shelby asked. \"Aren't you afraid that we might be detected again?\" \n\n\"Yes I am even with the distance but I am also relying on the gravity well of the moon to disrupt any scans that they might direct towards us.\" Derrick explained. \n\n\"Yes, your idea does have merit but I am still afraid that with as many ships as they have here we might have trouble.\" Shelby stated. \n\nOn board the Flagship Capt. Joseph Hartwell could only shake his head he could see the way the entire fleet had been taken. This was a classic military move, though the pirates had obviously been far too stupid, that they were caught as soon as they entered the system. God he hated idiots when it came to battle, now Derrick O'Toma that had been a military mind, brilliant. The science officer a friend of Mack Baron noticed something odd, near a moon a little over 5000 miles away. Walking up to the Capt., he gained his attention. \n\n\"Sir, I am picking up an anomaly near the closest moon, shall we investigate?\" The young man backed up as the Capt. looked at the readings. \n\n\"No, we have been ordered to leave it alone, at least for now.\" The Capt. added. \n\nDerrick was about to have them all leave the system when Shelby spoke up. \n\n\"Derrick,\" she called, \"I am picking up a transmission I believe is intended for us.\" \n\n\"Let's hear it.\" Derrick said. \n\n\"To the ships that laid waste to this clan we wish a parley.\" Derrick heard Joseph's voice. \n\nIn a distorted voice Derrick answered, \"I am afraid that isn't possible, neither is coming to the capital. That place we will never go near. This was a gift as were the others, leave us alone for now, and we will leave you alone. The pirates thought to attack and take us, their mistake. Please don't make your organization an enemy I do not want to destroy the Rangers, but it will happen if they attack us again.\" With that they all flashed out. \n\nCapt. Joseph Hartwell was sweating bullets damn they were serious, with the power they wielded he had no doubt they could destroy the entire Ranger force with ease."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-09"
}