{
    "title": "Let's Be Batman Pt. 53",
    "pages": [
        "\"But why do you need me in your... what's it called... Suicide Squad?\" Tommy asked. His world was still reeling a little from the tranquilizer dart he had been shot with and he was still having trouble comprehending what he was being told. Apparently there was a secret government organization called the Suicide Squad and he was being pressed into service? The whole thing was bizarre.\n\nOf course, it might have been easier to comprehend if he wasn't cuffed to a metal chair in a cold interrogation room while STILL wearing a hospital gown. Tommy's nuts were in his stomach.\n\n\"Because you know what we're after, Mr. Naylor,\" Amanda Waller, Tommy's apparent kidnapper, told him. The frumpy, middle-aged woman was somehow intimidating without really trying to be. Tommy couldn't help but shirk when she set her gaze on him.\n\n\"I do?\" Tommy asked. How could he know what they were after? He'd spent the past couple weeks in either a parallel dimension or a secluded mountain shack. \"There's no way I-\" Tommy began.\n\n\"Do you remember what Poison Ivy was up to the last time you met?\" Amanda Waller asked.\n\nTommy thought.\n\n\"Oh,\" He said softly.\n\nHe had forgotten all about the fact that he had run into Poison Ivy right after she had created a new version of her mind-control compound and had sold it to the highest bidder. Tommy could have pumped Poison Ivy to find out who she had sold it to, but instead he had... well, he had certainly pumped Poison Ivy, at least. In all the commotion, Tommy had forgotten to pursue that little thread.\n\n\"Poison Ivy sold her formula to a group called the Science Squad,\" Waller told Tommy. \"With that formula in their hands, who knows what kind of terror they could wreak.\"\n\nTommy still had questions. \"But why do you need me?\" He asked. \"I don't know shit about science.\" And why is everything a squad now, Tommy wanted to ask.\n\n\"Because you have a certain immunity to the formula, through your time as... Him,\" Waller said. She let the word \"Batman\" remain unsaid. \"And besides, we figured you would be inclined to stop this since you failed to stop it once before.\"\n\nTommy nodded. She did have a point. He could have stopped this but let his dick get in the way, like he always did. Tommy needed to make amends for his mistakes as Batman; might as well start here.\n\n\"Okay,\" Tommy said. \"I'll do it.\"\n\n\"You were always going to do it, Mr. Naylor,\" Waller said. \"But it's good to know you're motivated.\"\n\nTommy rolled his eyes.\n\n\"So what's next?\" Tommy asked. \"Might as well get this over with.\"\n\n\"Not so fast,\" Waller said. \"You will be joining a group of hardened villains. They can't know your real identity or your past dalliance into superheroism.\" Waller held up her hand and a grunt immediately entered the small interrogation room, bringing with him a set of clothes. On top of the clothes was a confusing helmet that Tommy hadn't seen before.\n\n\"What's that?\" Tommy asked as the grunt placed the clothes on the table and left the room.\n\n\"This,\" Amanda Waller said while holding up the helmet, \"Was the helmet of a villain just a little before your time. Criminals in Gotham would often find a patsy to wear it so as to distract Batman from who the real power in the heist was. I thought it would be appropriate to be used as your new alias.\"\n\nTommy glanced at the helmet and frowned. It looked heavy and would probably be even hotter on his head than the Bat-cowl was. And he wasn't sure how useful it would be at protecting his head. And the shiny red color on it would only direct shots towards his head...\n\n\"So who am I supposed to be, the Red Helmet or something?\" Tommy asked.\n\nAmanda Waller got up and uncuffed Tommy. He rubbed his wrists and then picked up the helmet to inspect it.\n\n\"Close,\" Waller said. \"You'll go by the Red Hood.\"\n\n\"Red Hood,\" Tommy repeated. He frowned. \"That's dumb.\"\n\n\"You'll get used to it,\" Waller said without interest. \"And now, Mr. Naylor, there's one more thing you have to do for me.\"\n\n\"What's that?\" Tommy asked, looking up. He saw Amanda Waller undoing the buttons on her sports coat.\n\n\"Nothing big, just a small favor from you,\" She said, as she finished with the last button. She began to slide the coat off her, exposing her bulbous shoulders. Tommy gulped. Waller folded her coat neatly in half and held it out to Tommy.\n\n\"Take this to the 3rd door on the left and hand it to the person inside. They'll take it to my office. Then head to the changing room and put on your new suit.\"\n\n\"Oh,\" Tommy said. He had been expecting something else and, for some reason, felt a little disappointed.\n\n***\n\nTommy awoke slowly to the sound of whining engines and a rumbling in his seat. He groggily lifted his head and found it difficult with the extra weight. He came to the realization that he was wearing a helmet around his head. He had a sinking feeling it was red.\n\n'They seriously need to stop tranquilizing me,' Tommy thought. As soon as he had changed into his suit, Tommy had felt a sharp pain in his neck and then nothing. Now, as he woke, he was in a yet another new location, a very noisy one, and one that was randomly bouncing around.\n\nTommy shook his head and tried to get a sense of himself. At least he was wearing normal clothes this time, he figured. In fact, he was actually impressed with the threads Waller had provided him: jeans, a black tactical shirt with some built-in padding (he suspected it could stop a bullet but wasn't that thrilled to test it) and a sweet black leather jacket that wasn't tactical at all but simply cool.\n\nAnd the red helmet he had been provided wasn't all bad, either; Tommy found that it contoured to his face pretty well and he could breathe more or less easily enough. If they hadn't tranquilized him twice in the last few hours, Tommy would have actually liked Amanda Waller and her group.\n\nTommy once again shook his head of cobwebs. As he came to, he managed to take a look around. He soon realized why everything was so noisy and bumpy: he was in the hull of a small military-style airplane. He was up against one wall of the fuselage, in one of the many chairs that lined both sides of the plane's aisle.\n\nAnd, trying his best to focus through all the turbulence, Tommy noticed that some of the other seats were occupied.\n\nTommy heard a soft groan to his left and discovered that someone was sitting just a few seats down from him. It was a very pale woman dressed in a dark blue dress that slid tantalizingly up her thigh. She had a large dark blue mask on that was partially obscured by the long black hair falling in front of her face. The woman shook her head and then noticed Tommy staring at her.\n\n\"Always an adventure,\" She said with a small smile on her lips.\n\n\"Alright, you apes, listen up!\" Came a call from the front of the plane. Tommy glanced up groggily in the direction of the voice and was immediately annoyed. The man who was doing the yelling looked like a cartoon of a military man. He was tall and ridiculously broad-shouldered, with a blonde crew cut and a chin that could cut glass. He had ludicrous muscles all over his person and they were squeezed inside a yellow turtleneck. Tommy instantly disliked the man.\n\n\"Now we all know our mission!\" The man was yelling. Tommy imagined he would have yelled like that even if the plane hadn't been roaring. \"We're here for the reason we're always here: because the US fuckin' A need to stop some SCUM and you lowlifes are the only people expendable enough to get sent in for the job! Now mount up!\"\n\nTommy stifled a laugh. Was this guy serious? He was glad when the guy across from him piped up.\n\n\"Oy,\" The man said, because the man was apparently Australian and that's what Australians say, \"Put a fookin' cork in it, Flagg,\" The man said. He held his head and then reached inside his thick leather duster for something. As he did, Tommy could see that he had a ton of what looked like knives strapped to him. The man pulled out a pack of smokes and lit one up. He took a deep drag and then breathed it out slowly.\n\nThe military man glared at the ruffian and then directed his eyes towards the dark-haired woman near Tommy.\n\n\"Nightshade,\" The military man said, \"Get our fresh meat ready to go!\"\n\nThe woman, Nightshade, looked Tommy's direction. \"Welcome to Task Force-X!\" She yelled over the whine of the engine. \"I'm Nightshade and I'll be your attendant on this flight!\" She stuck out her hand and Tommy took it uncertainly.\n\nThe man across gave Tommy the once over and then spoke towards Nightshade. \"I wouldn't bothah, Nighty,\" He said, \"This one ain't gonna last long.\" He smirked and took a drag on his cigarette.\n\nNightshade rolled her eyes. \"Don't mind him,\" She said.\n\nThe man now spoke to Tommy. \"So what's your talent, son?\" He asked.\n\n\"My what?\" Tommy replied, confused.\n\nThe man looked at Tommy annoyed. He had a hard face and it was now set in stone. \"Your talent, son!\" He repeated. \"I'm a boomerang man, meself.\" He held open his coat and Tommy could now see that the knives were actually boomerangs, sharp metal boomerangs. It seemed like an odd talent to Tommy but he wasn't going to say anything. \"And Nightshade over here can do things with shadows. What about you?\"\n\n\"Oh,\" Tommy said, I'm, uh... really good at fucking.\"\n\nThe boomerang man looked at Tommy for a second and then his mouth split open wide in a disturbing smile.\n\n\"You're alright, son,\" He said, laughing at Tommy's joke. Tommy laughed tentatively, not realizing that he had made a joke.\n\nNightshade tugged at Tommy's arm, directing him towards the front of the cabin. \"That's Rick Flagg,\" She said as she pointed at the military man. He was cleaning a gun with the vigor Tommy only reserved for something else. \"He's in charge.\" The boomerang man snorted but Nightshade ignored him.\n\n\"Over there...\" Nightshade pointed towards a demure redhead that was sitting with her back arched and her legs crossed near Rick Flagg. She had a tight pink jumpsuit on and was absent-mindedly flicking her nails. \"That's Plastique. She's in charge of explosives.\"\n\nNightshade noticed Tommy's eyes looking Plastique up and down. \"I wouldn't think about it,\" She said to Tommy. \"Captain Boomerang over there made a pass at her once and she set off a small explosive between his legs.\"\n\n\"Nuthin' small about it,\" The good captain interjected while rubbing his groin.\n\nThe plane suddenly lurched downwards, almost throwing everyone out of their seats. Tommy held onto a strap above him for support. Captain Boomerang lost his cigarette and cursed loudly. And Nightshade looked towards the cabin with a touch of concern. She looked back towards Tommy and tried to smile.\n\n\"I'll be right back,\" She said, \"I have to go check on our pilot. I have a feeling he has an unwanted visitor.\"\n\nTommy nodded and watched Nightshade as she stumbled down the ramp towards the cabin. Tommy looked to his right and noticed for the first time a rather meek-looking blonde girl sitting a few seats away. She was dressed simply, in a pink sweater and blue jeans. Tommy smiled at her before remembering he was wearing a helmet. He then leaned towards her.\n\n\"Hi, I'm To... The Red Hood,\" Tommy said, extending a hand. The blonde girl reached a hand out and shook Tommy's hand timidly.\n\n\"I'm June,\" She said. The girl seemed young, no more than 22 or 23 years old. She looked very out of place among this cast of characters.\n\n\"I gotta admit, it's nice to know there's one other normal person in this unit,\" Tommy said to the girl. She blushed and tucked her hair behind her head.\n\n\"I'm possessed by a magical being that transforms me into a goddess whenever I say a certain word,\" She said.\n\n\"...Oh,\" Tommy said. He tried to think of something to say but couldn't come up with anything. Luckily, he felt the plane dropping and Flagg called out that they were close to landing.\n\nWell, \"land\" was probably the wrong word to use. \"Smash\" worked better. They crashed heavily against the ground two or three times before finally sticking the landing. Tommy managed to hold on but June was thrown to the ground. Tommy helped her up off the ground and she smiled at him appreciatively.\n\nThe plan finally taxied to a stop and the engines ceased their whining. Nightshade returned to the hold shaking her head.\n\n\"I knew we shouldn't let her sit up there,\" Rick Flagg grumbled.\n\n\"She does what she wants, anyway,\" Nightshade responded.\n\nTommy didn't know who they were talking about but it didn't take long for him to find out.\n\n\"Wow!\" Came a high-pitched voice from the cockpit.\n\n\"Fuck me,\" Tommy muttered to himself as the owner of the voice stepped into the hold.\n\n\"What a trip! We were all like VROOOOM and then VREEEOOOOWW and then SCREEECH!\" The woman held up her hand to simulate the plane's descent and bumpy landing.\n\n\"Quiet, Harley,\" Nightshade said.\n\nTommy was shocked to find that Harley Quinn was the final member of this Suicide Squad. She had once again changed her image; this time she had stark white skin over her entire body (Tommy couldn't tell if it was make-up or her actual skin) and her hair was now black and red, with no blonde. She wore tight black-and-red hot pants with a black-and-red bustier that accentuated her cleavage. Socks went over knees and then halfway up her thigh. She had her familar slightly crazy smile on her face and Tommy was unnerved by the thick baseball bat she was leaning on.\n\n\"Aww c'mon, Nighty,\" Harley was replying to Nightshade, reaching up to ruffle her hair, \"I'm just excited for the big mission!\"\n\n\"Quiet, everyone!\" Rick Flagg said. \"And form up so we can review our mission!\"\n\nNobody moved.\n\n\"Alright,\" Nightshade moved on, \"We're here to stop a bunch of scientists from releasing one of Poison Ivy's formulas on an unsuspecting public. We've landed on Oolong Island, their home base, and believe me, they know we're here.\"\n\n\"That's right!\" Flagg yelled. \"That means everyone needs to work as a unit and not as a ragtag group of lowlifes!\"\n\nHarley raised her hand. \"But we are a ragtag group of low-\"\n\n\"Nevertheless!\" Flagg interrupted. \"No hotdogging! (He looked at Captain Boomerang.) No mistakes! (He looked at Tommy.) No... (He looked at Harley.) ...Whatever the Hell it is you normally do.\" Harley giggled. \"We're going to work as a team! Yeah!\" Flagg pumped his fist. No one else did anything.\n\nNightshade took over. \"Plastique, you're in charge of disabling perimeter defenses. Harley & New Guy will stick with Rick. Boomerang, do your thing. June, you're with me.\"\n\n\"Hey, who is the new guy anyway?\" Harley asked. \"I've nevah seen 'im before.\"\n\nAll eyes turned towards Tommy. He shrank in his seat a little.\n\n\"I'm, uh...\" He cleared his throat and lowered his voice a little. \"I'm The Red Hood. Just another dirt bag like yourselves. I work mostly out of Gotham.\"\n\nEveryone nodded. Everyone, that is, except for Harley. Her eyes narrowed slightly. Tommy avoided her gaze.\n\n\"Red Hood has operational knowledge of Ivy's toxins,\" Flagg said. \"He's our point man once we find them.\"\n\n\"Alright, enough whinging about,\" Captain Boomerang interrupted. \"Let's get off our asses 'n get this over with.\"\n\nThe rest of the team seemed to agree. They headed off the plane and into Oolong Island.\n\n***\n\nAs the Suicide Squad approached the compound, Amanda Waller waited impatiently behind the technician as they hacked into Oolong Island's security system. It was delicate work but the technician moved quickly, desperate not to draw Waller's ire.\n\n\"In yet?\" Waller asked. The technician knew that Waller asked only once if you had completed a task and then you were done in her unit. The tech had only minutes. Thankfully, he wouldn't need them.\n\n\"All set,\" The technician said, breathing a sigh of relief as the screens in the surveillance room flickered to life. They came up just in time to see a perimeter guard take a boomerang to the back. Another was consumed in darkness and then was gone. A large explosion set off around the entrance to the facility that was the Squad's target, drawing a swarm of guards. They didn't even notice Flagg and his two squadmates sneak past them.\n\nEverything seemed to be going just as Flagg had planned. Except, on the far screen...\n\n\"Hey, what the... oh shit...\" The technician breathed as he pointed at a group of seven strangers entering the facility from behind. They were an eclectic group, much like the Suicide Squad, and the technician recognized them instantly. \"What's are they doing here?\"\n\nWaller glanced over his shoulder, eying the group as they walked into the facility.\n\n\"Right on time,\" Waller said to herself while checking her watch.\n\nThe tech looked confusedly behind him at his boss. \"You knew these people were coming?\" He asked. \"Does Flagg know? I can radio him an-\"\n\n\"You'll do nothing,\" Waller said. \"Just make sure you're recording the video.\"\n\nThe tech turned around and cast his eyes down on his keyboard.\n\n\"Yes, Ma'am,\" He mumbled.\n\n***\n\nTommy, Flagg and Harley quietly entered the facility and found themselves in a tight corridor. It was long and thin and without that much cover if they were discovered. The three worked quickly, anxious to find a safer spot.\n\n\"So you're from Gotham, huh?\" Harley whispered as they moved.\n\n\"Uh, yeah,\" Tommy replied.\n\n\"Never heard of ya,\" Harley said. She sounded nonchalant but Tommy could see her eying him suspiciously.\n\n\"Weren't listening in the right places, I guess,\" Tommy said. He wanted to sound tough but wasn't quite sure if he was hitting the mark. Luckily, Flagg saved him.\n\n\"Cut the chatter!\" Flagg whispered harshly. They were coming to a corner and Flagg peered around it carefully. He turned back around and began to give out orders while checking his gun.\n\n\"Two guards,\" He said softly. \"I'm going to go around and we're going to flank them at the same time. Hood, you'll take the one on the right with a judo chop. You know Judo, right? Harley, you'll-\"\n\n\"Uh, Flagg,\" Tommy interrupted.\n\n\"Not now!\" Flagg replied. He carefully chambered a round, making as little noise as he could. \"Harley, you'll... Harley?\" Flagg suddenly noticed Harley was gone. He looked at Tommy. \"Where's Harley?\"\n\n\"Uh...\" Tommy said, pointing around the corner. The two peeked just in time to see Harley rearing back on the unsuspecting guards with her bat.\n\n*CRACK\n\n*WHAM\n\n*SNAP\n\nHarley laid into one guard and then the other, hitting one sharply in the side and the other upside the head. The one hit in the head was knocked unconscious instantly but the other fell to the ground with a yelp of pain. Harley lifted the bat over her head and beat down on the man with blow after blow. She had gotten 5 or 6 good licks in before Flagg got by and lifted the bat from behind her.\n\n\"That's enough, Harley!\" Flagg said sharply. Harley looked down at the unconscious guard and then at Flagg & Tommy. She wiped a splatter of blood from her cheek.\n\n\"All set!\" She said cheerfully. She began to skip down the corridor. Flagg and Tommy looked at one another. Tommy shrugged.\n\nThe two followed Harley down the corridor, checking door after door. They finally came to one that was marked \"Research\" and it was thankfully unlocked. Flagg checked it and then opened it slowly while looking for tripwires. There were none and the three slipped inside.\n\n\"What the...?\" Flagg said. They hadn't entered any kind of research center any of them had seen. This looked more like... a sports arena? There was a large, empty court with padded floors. There were a series of human-sized pods on either side of the court made out of plexiglass. Tommy couldn't discern their purpose. Opposite Tommy and his crew, up on the 2nd or 3rd floor, was a clear glass window that led into some sort of viewing room.\n\nAnd, for some reason, there was a small hole in the uppermost corner of the room. It had a track running along the ceiling and, as Tommy looked up, he saw that the entire ceiling was on this track. Two large mechanical arms hung somewhat menacingly from above.",
        "\"This is weird,\" Tommy said softly. The three cautiously stepped deeper into the room. Flagg handed Harley her bat back and she held it at the ready. Flagg had his guns cocked and Tommy held his hands up in some sort of strange karate position. They stepped towards the edge of the court, waiting for a trap.\n\nSuddenly, a door directly ahead of them opened. Flagg trained his guns on the door but lowered them when he saw Nightshade, Plastique, Captain Boomerang and June enter the room. They looked as confused as the other Squad members did.\n\n\"This isn't supposed to be here,\" Nightshade said. \"On the blueprints this was the research roo-\"\n\n\"I know,\" Flagg said, grimacing. \"Something's not right.\"\n\n\"Not right\" was correct. Things further devolved when the entire Suicide Squad turned at the sound of another door opening from across the court. All of them took a deep breath when they saw who walked through the door.\n\n...Well, not all. Harley yelled out, \"Hello!\"\n\nThere was soon a lot of shouting and threatening and holding of weapons as 7 people walked through the door on the far side of the court and quickly began advancing towards the Suicide Squad. Tommy didn't particularly recognize any of them, although there was one huge man with tubes running out of his body that Tommy vaguely remembered causing some trouble in Gotham a few years ago.\n\n\"Put up your hands before I blow you away!\" Rick Flagg yelled at the rival group. None of them complied.\n\n\"Think you can make that shot, Flagg?\" A masked man with one red eye shot back. \"I doubt you'll be able to pull the trigger before I put one in your head. And I don't miss.\"\n\nTommy watched the scene get more and more tense. The gargantuan man was now standing in front of Tommy and he was terrifying. Tommy meekly put up his hands in a fighting position. The huge man just smirked.\n\nRight as a fight seemed imminent, a surprising noise seemed to break the tension: it was the sound of microphone feedback. All the villains on the ground began to look for the source of the noise.\n\n\"Erm, excuse me,\" Came an exceptionally nerdy voice over the speaker system. \"Hi, everybody. Up here.\" The villains continued to look until a man dressed almost like Batman (except the suit was orange) pointed up at the window overlooking the court. Everyone looked up to see 2 nerds and 1 nerdette looking down at them. (Harley waved and yelled out, \"Hello!\")\n\n\"Who the Hell are you?\" Rick Flagg asked.\n\nOne of the nerds, a tall, skinny man with a terrible hair cut, spoke first. \"Uh, my name is Irv Quimby, but I normally go by IQ. This is Bug Baron... (He pointed out a skinny, balding nerd with a lab coat on) ... and this is Lady Laminate (he pointed to a plastic-faced woman, also wearing a lab coat). We're the Science Squad.\"\n\n\"Yeah, we know that,\" The man with the red eye said. \"We are supposed to be here to buy the Poison Ivy's formula from you.\"\n\nA thin woman with a covered face and huge metal blades attached to her arms narrowed her eyes at the dorks above. \"We're supposed to be the only buyer, Ira, you little shit,\" She said. \"Are you trying to screw us, because if you are then-\"\n\n\"We're not here to buy Ivy's formula,\" Flagg interrupted. \"We're here to destroy it!\"\n\nThe massive man next to Tommy muttered a curse in Spanish and suddenly everyone was yelling and cursing and about to come to blows. The nerd up top called for calm.\n\n\"Wait, wait!\" He yelled out. \"Please don't fight, this room is very valuable! The truth is... you see, the thing is...\"\n\nLady Laminate grabbed the mic. \"There is no formula,\" She blurted out, which was a tough thing to do when she could barely move a muscle in her face. \"We accidentally, kinda... destroyed it.\"\n\n\"Destroyed it?!\" Nightshade yelled. \"But... weren't you supposed to want to use it?\"\n\nIra grabbed the mic back. \"Yeah, but while we were preparing more SOMEONE accidentally left it open around his bugs.\"\n\nBug Baron yanked the mic away. \"It's not my fault! Ivy had given us a vat of the stuff to replicate and I left it carefully sealed but when I came back the formula was gone and all my bugs were... they were...\"\n\n\"Fucking,\" Lady Laminate leaned over and said into the mic.\n\n\"...What?\" Tommy asked. \"We thought it was a poison.\"\n\n\"So did we,\" The clawed woman said.\n\n\"No, it was a love potion,\" Bug Baron said. \"Ivy had developed it based on a potion Ra's Al Ghul's developed not too long ago.\" Tommy gulped at this. \"This stuff would make anyone horny and ready to fuck. It was really cool.\" He suddenly reddened, aware of how he sounded.\n\n\"Rack off,\" Captain Boomerang said in disbelief.\n\n\"It's true!\" Ira said. \"You see... well, I'll just say it: we were going to use it on your two groups. You know, as a test.\"\n\nThere was a great murmur that came up from both sides of the court as the teams yelled out various exclamations of disbelief, anger, and in Harley's case, excitement.\n\n\"It was going to be awesome!\" Bug Baron said. \"We lured both of you here and we were going to test out the substance on you. Then we had this whole game figured out involving lotteries and mechanical arms and lots and lots of screwing. It was going to be amazing! But now it's ruined.\"\n\n\"Sorry about that,\" Lady Laminate piped in.\n\n\"Not as sorry as your going to be, pendeja,\" The massive man across from Tommy said threateningly. \"No one tricks the Secret Six!\"\n\nTommy interjected. \"Wait... Secret Six?\" He asked. \"There are seven of you.\"\n\n\"I joined later,\" A teenage punk girl with black hair said.\n\n\"Then... why not change it to Secret Seven?\" Tommy asked, still confused.\n\n\"We had already settled on Secret Six,\" A large redheaded woman said acidly.\n\n\"But...\" Tommy couldn't let it go. \"Just change it to Secret Seven. It's got the alliteration and everythi-\"\n\n\"IT'S SECRET SIX!!\" The massive man yelled, advancing towards Tommy.\n\n\"That's enough!\" Rick Flagg yelled. For once everyone actually listened to him.\n\n\"Wait,\" Plastique said in a light French accent. \"Why were you going to run your test on us?\"\n\nThe three nerds looked at each other somewhat ashamed. \"We' thought it'd be cool,\" Bug Baron said. \"You all are hot.\"\n\nFlagg looked at his troops. \"Look, we're here to destroy the formula and, well, it sounds like it's been destroyed,\" He said. He looked up towards the viewing area. \"You can't make any more of the formula, right?\" Flagg asked the nerds.\n\nThey shook their heads sadly. \"The formula was written down next to the vat,\" Ira said. \"Termites got it.\"\n\n\"Okay then,\" Flagg said. \"No formula, we're out of here. Secret Six, we have no beef with you right now.\"\n\nThe clawed girl considered this. \"Deadshot,\" She said, as if to indicate it was his decision.\n\nThe man with one red eye considered his options. \"Fuck it. No money in fighting any of these idiots.\" He lowered his gun. \"Let's move out.\"\n\nThe two teams began to move in opposite directions. The three nerds in the viewing area talked amongst themselves, unaware that the talk button was still on.\n\n\"Shoot!\" Bug Baron said despondently. \"I really wanted to see them play our sex game.\"\n\n\"Yeah,\" IQ lamented. \"Now we'll never know who would have won.\"\n\nThere was a pause.\n\nAnd a pause.\n\nAnd a longer pause.\n\n...\n\n...\n\n...\n\n\"We would have won, obviously,\" Harley Quinn said to no one in particular..\n\nBoth groups stopped in their tracks.\n\n\"You would have won?\" said the Batman-looking foe on the other side. The Secret Six slowly turned. \"...You think you're better at fucking than us?\"\n\nThe Suicide Squad slowly turned themselves.\n\n\"Well...\" Plastique piped up. \"Isn't it obvious?\"\n\nThe large redhead laughed. \"I could out-fuck you any day of the week, Sweetheart,\" She said. Plastique's jaw tightened.\n\n\"Now let's everyone just calm down,\" Nightshade said. \"We're both going to leave and-\"\n\n\"Oh, what a surprise,\" The white-haired vixen on the other side laughed. \"Of course the dour girl in all black doesn't want anyone to have sex.\"\n\n\"Hey,\" The goth teen whined. The white-haired girl tried to apologize.\n\n\"C'mon, guys,\" Deadshot said. \"Nightshade's right, let's all just leave. We don't want to embarrass them, anyway.\"\n\n\"Embarrass?\" Said Captain Boomerang. \"Your banger couldn't find a bum with a light globe.\"\n\nThere was a pause.\n\n\"What?\" 3 or 4 people said at once.\n\n\"...You can't fuck, mate,\" Captain Boomerang clarified.\n\n\"You're all just lucky they ruined that potion,\" The clawed girl said. \"Especially you,\" She directed towards Harley. Harley blew her a kiss in response.\n\n\"I'm really good at fucking,\" Tommy said to no one in particular.\n\n\"You know what?\" The massive man finally said. \"Let's do it.\"\n\n\"...Do what?\" Rick Flagg said with a smile. \"Their little sex competition? No way.\"\n\nThe massive man smirked. \"Of course an American would be afraid,\" He said.\n\nRick Flagg suddenly got very serious. \"...What did you just say?\" He said lowly.\n\nThe massive man flexed his muscles. \"I said of course a puny American pendejo would be afraid to show everyone how weak he really is,\" He said with an acid tongue.\n\nFlagg's face got very red and the veins on his neck bulged. He looked at the rest of his team and then exploded.\n\n\"YOU'RE ON!!\" He yelled. \"Hey, nerds! HEY, NERDS!!\" Flagg threw one of his guns at the glass, striking it. IQ turned around and flicked the switch to receive rather than talk. \"Yes?\" He asked.\n\n\"We're gonna play your little sex game and show these bastards how we fuck in America!\" He yelled.\n\n\"I'm Australian, mate,\" Boomerang said quietly.\n\nThe three nerds all looked at each other in confusion. \"Wait... seriously?\" Bug Baron asked.\n\n\"Yeah, that's right,\" Deadshot said. \"We're going to make these clowns wish they had committed suicide.\"\n\n\"Sex!\" Harley yelled with glee.\n\nThe three nerds almost fell over themselves to get things set up for their game. IQ immediately began plugging something into a computer while Bug Baron worked a series of levers. One each side of the court, the pods all opened at once.\n\n\"If you'll all step into a pod, please,\" Lady Laminate said, failing to hide her excitement.\n\nEveryone dutifully stepped into a pod, some more excited than others. The massive man across had to squeeze himself in. As Tommy prepared to enter his pod, he looked at the person next to him. It was Plastique.\n\n\"Are we seriously going to do this?\" Tommy asked.\n\n\"Why, do you not want to?\" Plastique asked in response.\n\n\"No, I very badly want to do this,\" Tommy clarified. \"It's just... I never thought I'd get this lucky.\"\n\n\"Okay, so here are the rules,\" Bug Baron said over the monitor. \"We will open certain pods for 10 minute intervals, during which you'll try to make your opponent orgasm. If you succeed, they'll be removed from the contest. The trick is to make them cum without cumming yourself. Understand?\"\n\n\"Sounds good,\" The clawed woman said.\n\n\"Agreed!\" Rick Flagg yelled out.\n\n\"Alright,\" IQ said. He pressed a button on his computer.\n\n\"From the Suicide Squad... Red Hood!\"\n\nThe door to Tommy's pod opened swiftly and he stepped out uncertainly. Other members of the Suicide Squad gave appreciative hoots and hollers as Tommy walked onto the padded court.\n\n\"And, from the Secret Six... Knockout!\"\n\nA door opened in front of the large redhead and she confidently stepped out of her pod. Tommy remarked at how big she was, similar in size to Wonder Woman; she stood a few inches above Tommy and her shoulders were incredibly broad. She had a nice curve to her, though, and a tight lime green suit that showed it. Her long legs were exposed and she had only one strap slung over her shoulder to keep her suit up.\n\nKnockout walked over to the pod of the clawed woman and put her hand up against it. The other woman did the same.\n\n\"You know this doesn't mean anything,\" Knockout said.\n\n\"Make him squirt,\" The clawed woman replied. The two both kissed the plexiglass pod that separated the two of them.\n\n'Hmm... lesbians...' Tommy thought to himself. He quickly cursed himself when he realized he was getting hard.\n\nKnockout walked out confidently onto the padded court and looked down at Tommy. She cracked her knuckles through green gloves gloves and smirked.\n\n\"I'm going to show you how we fuck on Apokolips,\" Knockout spoke down to Tommy.\n\n\"A-what-a-lips?\" He asked.\n\n\"And... go!\" IQ called out.\n\nInstantly, Tommy knew he was in trouble. It appeared Knockout had super-everything: super speed, super strength, and who knew what else. Before Tommy had even processed Ira's words, Knockout swiftly grabbed him and put him on the ground. She held his hands above his head, pinning them effortlessly with one hand, and with the other she began roughly yanking at his pants.\n\n\"Let's see what we have here... ooh!\" Knockout said as she dug her hand inside Tommy's pants and found his prick. She jerked it swiftly and, despite Tommy's ineffectual squirms, he could feel himself almost instantly hard in her hands.\n\nShe stopped for only a moment to pull down Tommy's pants. and then continued to jerk him furiously. There was a small murmur from the other women as they saw Tommy's big dick but he was hardly in a position to notice. All he could do was try to think about baseball and not the giant redhead tugging his dick.\n\nDespite himself, Tommy found that he was straining his hips while Knockout jerked him off. She spat down onto his dick, lubricating it, and then began jerking it once more. Her gloved hand slid easily over Tommy's dick and she pulled up as she neared the tip of his dick, as if trying to yank the cum out of his body. The sensation was almost more than Tommy and his still-recovering dick could bear.\n\n\"You like that?\" Knockout asked. \"You like being my little bitch?\" Tommy didn't like it but he was indeed Knockout's bitch at this moment. His hands pinned behind him, his dick being mercilessly yanked, Tommy was completely at her mercy. He was glad he was wearing this red helmet so no one could see his face.\n\n\"5 minutes!\" Ira yelled out. Tommy closed his eyes and tried to think of anything else. Baseball... balls... his aching balls, desperate for release... no! Bats... think about bats... bats probably have dicks... his dick wants to cum... fuck! His mom's breasts... ew, gross... hey, this was actually working...\n\nThen, without warning, Tommy felt something that made his heart drop.\n\n'Oh no,' He thought. 'She's going to fuck me.'\n\nWhile Tommy's eyes had been closed, Knockout had swiftly straddled him and pulled her green suit to the side of her pussy. Tommy had felt the first touches of her lips as she began to drop onto his cock. Tommy's eyes shot open and he watched with a whimper as Knockout dropped onto his dick.\n\n\"Oh, fuck,\" Knockout said softly. \"Been a long time since I had a dick in me.\"\n\nShe began to rock on Tommy while still pinning his hands over his head. \"Rock\" probably wasn't the best word to describe it, actually. \"Pound down\" was probably a better way of putting it. She was lifting herself and then dropping down on Tommy's dick with all her weight, crushing his hips. She did this over and over again, lifting and dropping, each time taking Tommy's whole cock effortlessly inside her.\n\nLuckily for Tommy, he had felt this at least a few times before, when he had fucked other super-powered women. Of course, the last time he had been inside a super-powerful woman she had broken his dick, so...\n\n(That thought actually helped Tommy keep from cumming.)\n\n\"You like my pussy?\" Knockout asked. Tommy tried to ignore her. \"What if I do this?\" She said, and then Tommy suddenly felt the muscles inside her contract and squeeze his dick. She held them tight and then lifted herself upwards, as if milking his dick. Tommy moaned despite himself. It came out as almost a whimper.\n\n\"That's what I thought,\" Knockout said bitterly to him. \"You're nothing to me. You're just a weak little toad and I'm going to make you cum.\"\n\nTommy could only moan. She was right, he thought; she was going to make him cum. His dick probably couldn't have withstood such an assault under the best of conditions and now, with it still overly sensitive from Katana's treatments, he was helpless.\n\n\"Cum for me, you little asshole!\" Knockout yelled. She slapped Tommy's helmet, knocking his head to the side. Tommy felt his balls boiling and his dick began to twitch inside Knockout.\n\n\"Cum for me!\" She yelled again. Tommy could hear his own teammates yell encouragement from their pods but, in this state, he couldn't actually make out what they were saying.\n\n\"Cum!\"\n\nTommy arched his hips as best he could underneath Knockout.\n\n\"Cum!\"\n\nHis leg began to twitch.\n\n\"Cum!\"\n\nTommy reared back and-\n\n\"Time!\" Irv shouted.\n\n\"Dammit!\" Knockout roared. She lifted one leg over Tommy and sat to the side of him, furious.\n\nTommy meanwhile, wasn't sure what was going on. Blood slowly went back to his brain, helping him understand what had happened.\n\nHe had survived.\n\n\"Asshole,\" Knockout muttered under her breath at Tommy. Then she stood and stomped towards her pod.\n\nTommy stood on shaky legs and looked around. The Secret Six pods were filled with angry faces and, as Tommy turned, he saw the Suicide Squad pods cheering. Tommy smiled ('You're wearing a mask, idiot,' He thought) and tried to pull up his pants to cover his throbbing, quivering dick. His dick had been so close to cumming, though, that Tommy worried that putting any type of cloth on it might send him over the edge. He simply held his underwear and pants just below his member and shuffled back towards his pod.\n\nAs Tommy entered his pod, it sealed and Irv again stepped up to the mic.\n\n\"From the Secret Six... Catman!\"\n\nThe orange-suited man who looked vaguely like Batman stepped out of his pod as it slid open. He was very similar to Batman, actually; same height, same weight, same dour look on his face. He swept his cape over his body haughtily as he stepped onto the court.\n\n\"And, from the Suicide Squad... Nightshade!\"\n\nNightshade's pod opened and she came out adjusting her small blue dress.\n\nCatman gave her a long look up and down and smiled.\n\n\"Piece of cake,\" Catman said.\n\nNightshade smiled back. \"You think so?\" She replied.\n\n\"Of course,\" Catman said. He held up his cape. \"Look at me,\" He told her. \"I'm a model of physical and mental perfection. Who could possibly stand up against me?\"\n\n\"I guess we'll see,\" Nightshade said.\n\n\"Alright,\" IQ told the crowd. \"And... go!\"\n\n\"Okay,\" Catman said, rubbing his hands together, \"Let's get star- WHOA!\"\n\nNightshade lifted her hands and suddenly the court got very dark. A great shadow filled the room and Tommy slowly realized it was beginning to envelop Catman.\n\n\"What the devil?!\" Catman cried out. He tried to run but it was no use; the shadow enveloped him, swirling around him like a dark cloud. Tommy had to strain his eyes through his mask to watch as the shadow picked him up and carried him towards Nightshade. \n\n\"Guess your agility isn't fast enough to dodge shadows,\" Nightshade said. Catman was too shocked to respond and he simply hung in the air, surrounded by darkness. Nightshade flicked a wrist and everyone in the pods gasped as Catman's suit was pulled down from his waist by an invisible force. His dick popped out from his suit. Catman strained to cover himself but his hands were being held out to his sides.\n\nCatman's dick was average-sized but it was stretched out to its maximum length. Even being pushed around by shadows didn't decrease his arousal. And it was only exacerbated when Nightshade conjured up some dark force to place a tube around Catman's dick. Tommy had trouble making out its exact shape through the shadow; it wasn't until it began to move around his dick that Tommy realized what it was.\n\n\"Is that... is that a fleshlight?\" Tommy muttered. Plastique, who was in the pod next to Tommy, looked over at him and nodded. Then she began to shout encouragement to Nightshade.",
        "\"D\u00e9p\u00eache-toi, Nightshade!\" Plastique yelled in her French accent. \"Make eem explode!\"\n\nNightshade was doing her best. The shadow fleshlight began to pump up and down on Catman's cock as he hung helpless in the air. It was a bizarre sight; Tommy could see through the shadow and could see the skin around Catman's dick being tugged towards the tip of his dick before being stretched back towards his base.\n\n\"Not so tough now, are you?\" Nightshade asked. She twisted her hand and the shadow-light began to twist as it pumped on Catman's dick. He seemed to be in agony, although Tommy knew from experience that he was feeling something quite different.\n\nNightshade seemed to redouble her efforts and the shadow-light began to move much quicker around Catman's dick. He groaned openly and grit his teeth.\n\n\"Must... resist...\" He groaned out.\n\n\"You can do it, Catman!\" The white-haired woman across the way yelled out. Tommy could see from her face that she didn't believe it.\n\nNightshade now turned the screws, causing the shadow-light to move incredibly fast over Catman's dick. He moaned weakly. It was only a matter of time.\n\n\"I am a princess of the land of Nightshades,\" The aptly-named Nightshade said. She pulled a hand back, causing Catman to drift towards her. \"I am ruler of the dark and a mistress of the black! And now you, Catman, will tremble before me! And also cum!\"\n\nCatman couldn't take any more. He made a face like he had to sneeze and then groaned deeply as cum began to spurt from his cock. The shadow-light squeezed him dry, tugging his dick of every last drop of cum.\n\nRight as Catman was about to cum, Nightshade swiftly held out a hand. Cupping it to stop Catman's streams, she began to collect his cum onto her hand. It pooled quickly in the center of her palm, a thick white deposit, and Nightshade stared down at it with satisfaction as Catman came again and again.\n\nAfter a time Catman seemed to be milked dry but Nightshade gave him 4 then 5 then 6 slow jerks with her power, causing the poor man horrible shivers and high-pitched moans. Finally, Nightshade showed mercy. She lowered her other hand and the shadow dissipated. Catman landed in a heap on the floor, breathing heavily.\n\n\"Catman: eliminated!\" Shouted an obviously aroused IQ. A large mechanical hand dropped down from the sky and picked up Catman like a fairground crane game. It lifted him up into the sky and carried him through a small hole high up in the corner of the room. Catman was gone.\n\nNightshade held up a hand in triumph. She then walked towards the Secret Six's territory with one hand outstretched and full of cum. She walked to Knockout's pod and then rubbed her hand against it. Cum dripped down it slowly while Knockout seethed.\n\nA great cheer went up from the Suicide Squad. Tommy, too, began to cheer. His earlier apprehension was eliminated; after all, how could they lose with someone like Nightshade on the team?\n\nIQ adjusted himself and spoke into the mic.\n\n\"From the Suicide Squad... Captain Boomerang!\"\n\nCaptain Boomerang stepped out of his pod, holding his hands up into the air. He took off his duster coat and tossed it to the ground. Tommy noticed that the man had even more boomerangs on his back, at least ten, bringing the total on his person up to over 20.\n\n'Guy really loves boomerangs,' Tommy thought.\n\n\"And, from the Secret Six... Jeannette!\"\n\nThe white-haired woman moved her hips as she walked out of her pod, shaking them from side to side seductively with every step. Her hair, aside from being white, was done up in and extravagant, with it done in two thick curls framing her face. She was wearing a thick velvet dress held together with large buckles running down her front; she had left all the buttons below her mid-thigh undone, offering an exciting glimpse underneath. She was dressed very old, Tommy thought, and he wondered just how old this woman might be.\n\n\"Oy,\" Captain Boomerang said with a smile, \"Hope ya ready for me to smash ya back out and make ya scream, Chickie.\" He unzipped his pants and swiftly pulled out his half-hard dick. He walked towards Jeannette, bouncing it slightly with his hand.\n\nJeannette just smiled at him. \"You want me to scream, monsieur? I can do that for you.\"\n\nJeannette suddenly lifted into the air. She hovered there while her face twisted into a horrible visage and her mouth opened impossibly wide.\n\n\"What in the...?\" Boomerang said, taking a step backwards in alarm. It was too late; Jeannette suddenly emitted a piercing scream and a rush of air threw Boomerang backwards. He landed with a thud on his back. Tommy could see he was barely conscious.\n\nTommy was thankful for his helmet, which apparently offered some protection to Jeannette's scream. Others were not so lucky; Tommy could see members of both squads covering their ears while their knees buckled. Meanwhile, Tommy was struck by the horrible realization that he had come into contact with someone like Jeannette before.\n\n\"She's a banshee,\" He said softly. Just like Silver Banshee, a foe Lex Luthor had sent after Tommy long ago. Except Jeannette obviously had the power to hide her appearance. She would be incredibly dangerous.\n\nJeannette glided over to Captain Boomerang, landing with one leg on either side of him. He lifted his head up and watched as Jeannette turned back to her human form.\n\n\"Well, mon ami,\" Jeannette said, \"It looks like it's your turn to do the screaming.\" Jeannette fell down onto her knees and then shuffled herself backwards so that his still-exposed dick was directly in front of her. Without so much as a word Jeannette leaned down and placed Captain Boomerang's dick in her mouth.\n\nBoomerang was revived almost instantly as he groaned and arched his back. If Jeannette was indeed old, she had most definitely used her long life to perfect the art of cocksucking. The banshee was facing Tommy and the Suicide Squad so they all got a good look at her skills while she pushed her hair to one side and began to deftly blow Captain Boomerang. (Ever the lady, Tommy noticed that the hand she was jerking Boomerang's dick with had the pinky extended outwards.)\n\n\"Who knew Capitaine Boomerang would have a straight dick, no?\" Jeannette said before wrapping her mouth tight around Captain Boomerang's unswerving member. She didn't bob on his rod; no, instead she kept her mouth firmly suckling on his tip while she jerked him furiously with her hand (...well, 4 fingers). She unsealed her mouth from around Captain Boomerang's dick and saliva fell around the cock; her hand quickly dispersed the saliva around Boomerang's dick.\n\nJeannette was busily sucking Captain Boomerang's dick while he... Tommy furrowed his brow. Captain Boomerang seemed like he had recovered from his earlier attack. He certainly looked aware of his surroundings, anyway. The blowjob had seemingly given him new life, but he wasn't doing anything. He was simply lying there, getting blown.\n\n\"Do something, Boomerang!\" Rick Flagg yelled. \"You need to make her cum!\" Boomerang responded by putting his hands behind his head.\n\nJeannette was oblivious to all this as she was obviously preoccupied with besting her opponent. She was so busy sucking Boomerang's dick to defeat him that she scarcely noticed when he began to buck his hips up into her mouth in time with her strokes.\n\nAfter about half her allotted time, Jeannette lifted her head up and looked back at the rest of the Secret Six.\n\n\"I do not think this chien has too much long to la- ahh!\" Jeannette felt Captain Boomerang move underneath her and she turned to find his dick directly in front of her face. The good captain had used her distraction to quickly hop up and he grabbed Jeannette by the head with both hands.\n\n\"I was quite enjoyin' that, if ya don't mind,\" He said, and then he shoved his dick back in Jeannette's mouth. Her eyes were wide with surprise as Boomerang's dick once again entered her mouth.\n\nThis time, though, it entered her mouth roughly and deep. Jeannette put her arms out to her sides as Captain Boomerang's dick moved straight along her tongue and touched the back of her throat. He threaded his fingers through her hair and began throwing her head on his dick again and again.\n\nBoth squads began to yell: the Secret Six because their squadmate had been suckered, and the Suicide Squad because Captain Boomerang didn't seem to care at all about winning the game. All he cared about was cumming himself.\n\n\"You're going to lose, esp\u00e8ce d'idiot!\" Plastique yelled out. Boomerang didn't seem to care at all. He continued pounding Jeannette's mouth with his dick. Jeannette had begun to lean backwards but Boomerang simply stepped forward and continued to fuck her mouth roughly. All leaning back did was allow the spit that was readily falling from Jeannette's mouth to fall onto her dress and between her breasts.\n\n\"That's it, sweetheart, almost there,\" Boomerang said. He released one hand from her head and reached down. Slipping his hand down her dress, Captain Boomerang placed a rough hand on Jeannette's tender breast. She squealed around his dick, her eyes now even wider. She squealed again when Captain Boomerang seemingly squeezed her nipple.\n\nTommy looked down at his squadmates to gauge their reaction. (He was rock hard so he didn't need to gauge himself.) Plastique had a hand on her forehead in exasperation. Nightshade and Rick Flagg, the next two down the line, were both yelling at Captain Boomerang to stop what he was doing before he got eliminated. The poor blonde girl, June, had wide eyes and a hand over her mouth. And, down at the end, Harley was leaning against the back of her pod with a hand down her shorts. She happened to glance over at Tommy as he gawked at her; she smiled bashfully and slowly pulled her hand out.\n\nCaptain Boomerang released Jeannette's breast and brought his meaty paw up to his dick. He stuffed his dick until it was halfway in Jeannette's mouth and then began to jerk himself off inside. It bounced in Jeannette's mouth, hitting her tongue and then the top of her mouth. Jeannette looked up at Boomerang angrily as small streaks of mascara began to run down her cheeks.\n\nCaptain Boomerang groaned mightily and pulled his dick out Jeannette's mouth. He muttered something incomprehensible (or at least incredibly Australian) and readied to cum wit his dick just inches from her face.\n\nJeannette realized what Boomerang was about to do and began to struggle mightily against the one hand on her head.\n\n\"I think not, vous sauvage!\" She yelled. She managed to wrench her head free from Captain Boomerang's grasp and turned her head away at the last moment.\n\nBut not quite the last possible moment, though. Captain Boomerang felt Jeannette face away from him and he smirked as he began to blow his load. He flicked his hips as the first blast of cum left his dick, causing it to shoot to the side of Jeannette.\n\nBut wait! Incredibly, the spin Boomerang had placed on his shot of cum caused it to arc around in mid-air; it passed Jeannette, spun, and then came roaring back towards her face. She hadn't been expecting it and yelped as it hit her directly on the tip of the nose. Another blast of cum left Captain Boomerang and again he flicked his hips and again it flew around Jeannette and hit her in the face. The way the cum flew forward and then came back was just like the flight pattern of a... something.\n\nShot after shot of cum rained onto Jeannette's face. She closed her eyes and mouth and waited for it to be over. Boomerang's unconventional facial soon ended and Jeannette turned back around. She tried to speak but at first nothing would come out. She coughed harshly and managed to eek out some speech.\n\n\"You bas- plech!\" She made a face as Captain Boomerang flicked his dick at her, giving her one last drop of cum on her tongue.\n\n\"Thanks for the gobby, babe,\" He said with a wink. Jeannette glared at him and wiped at her face. She made a face at the deposit of cum and then wiped it on her dress.\n\nCaptain Boomerang stuffed his dick back in his pants and then turned around for his duster jacket.\n\n\"You asshole,\" Nightshade cursed at him. \"You were supposed to make her cum.\"\n\nCaptain Boomerang shrugged and laughed. \"Why should I start making women cum now?\" He said. He was still smiling when the giant mechanical arm came and carried him off to the next room.\n\nIQ stepped up to the mic. He had a dark round splotch on his pleated pants now. To his left and right, both Bug Baron and Lady Laminate were panting heavily.\n\n\"Okay,\" IQ said, his voice squeaking. \"This next contest will be a tag-team bout! Our next contestants, from the Secret Six: Knockout and... Black Alice!\"\n\nKnockout returned to the court, still quietly fuming over her near miss with Tommy. A second pod opened and the small goth chick stepped out. She was young, maybe about 19, but she had a look on her face that showed she meant business.\n\nThe outfit to match, too; Tommy stared at Black Alice's outfit with a mix of wonder and confusion. She wore a tight black blouse that left her belly button exposed. Fishnets ran up her arms and an assortment of jewelry adorned her person. She had on a pleated green skirt with even more fishnets running down her legs into large black leather boots.\n\nThe strangest thing about her, though, was her hair. It was short, black and was clipped to extend out to each side of her head like miniature wings.\n\n'Maybe that's her power,' Tommy thought. 'Maybe she can fly.'\n\nKnockout and Black Alice moved to the center of the court and stood ready for the opponents. They were an odd duo: one tall, one short, one muscular, the other thin, one redhead, one raven-haired.\n\nTommy gulped as IQ began to read the names of the Suicide Squad combatants. His bout with Knockout had scared him; he didn't think he had what it took to hang with these women right now.\n\nLuckily, IQ didn't call his name. Instead he called out, \"Nightshade & Rick Flagg, Jr!\"\n\nThe pods of the two leaders of the Suicide Squad opened up and then nodded at each other knowingly before stepping out of their pods. Tommy was confident; he had already seen what Nightshade could do and Rick Flagg was strong and smart. If anyone could take down Knockout, he could.\n\n\"And... go!\"\n\n\"Alright, Red,\" Rick Flagg said, \"Let me show you how we fuck in the good ol' US of- hey!\"\n\nJust like Tommy, Knockout effortlessly threw Flagg down on the floor and shoved her hand down his pants. He struggled ineffectually but Knockout soon had his dick out of in the open and she began to jerk on it furiously.\n\nThat is, until the room darkened and Knockout soon found her hand being pulled away by shadow. She looked up in surprise and saw Nightshade once again using her magical powers against the Secret Six.\n\n\"Tut-tut-tut,\" Nightshade told Knockout. \"You shouldn't use your hand on my team, Knockout. Why don't we see how well that hand works on you.\"\n\nKnockout struggled but the invisible force in the shadow began to slowly move Knockout's hand away from Rick Flagg's cock and towards herself. It neared closer and closer and Knockout grunted, unaccustomed to being overpowered like this. Her hand reached the edge of her suit and her hand began to pull the fabric away to reach the treasure beneath.\n\nAnd then, as quickly as it had come, the shadow dissipated. Nightshade looked at her hands with confusion.\n\n\"My powers...\" She said slowly. \"They're gone!\"\n\n\"You magic users always think you're so tough until you can't lean on them anymore,\" Came another voice. Tommy looked and was shocked to see that it was Black Alice talking. Her old outfit was gone and now she was wearing a costume very similar to Nightshade's. A small black dress covered her, bound with a belt in the middle, and she wore a similar black mask on her face.\n\n\"But... how did you...?\" Nightshade said. She did seem much less confident without her powers.\n\n\"Aww, do you not like seeing someone else with your powers?\" Black Alice said mockingly. She held up her hands and shadow began to envelop Nightshade. \"Let's see how much you like it when someone else uses your own powers against you!\"\n\nA shadow quickly enveloped Nightshade, much as Nightshade had enveloped others before. Nightshade fought against it but it quickly surrounded her and lifted her up into the air. Black Alice twisted her hand and Nightshade was flipped upside-down, her dress flipping up and exposing dark blue panties.\n\n\"I don't think we'll be needing those anymore,\" Black Alice said, and the shadow took Nightshade's panties with a rip. She struggled to cover her exposed, pale pussy. But it was no use; she was utterly at Black Alice's mercy.\n\n\"Now, let's see...\" Black Alice said. \"How did you do that thing before with Catman...\" Black Alice concentrated and managed to get a shadow-based fleshlight to appear in the air.\n\n\"Not bad,\" She said. \"But I think you want something a little different...\" Black Alice waved in the air and the shadow-light vanished. It was soon replaced by two identical forms. Nightshade gasped when she saw them.\n\n\"No, please!\" She yelled. \"Not... not shadow-dicks!\" Black Alice had conjured up two cocks, both of them large in size, and the helpless Nightshade knew what was coming next.\n\n\"I'm tired of you talking,\" Black Alice said. She moved one of the shadow-dicks towards Nightshade's mouth and forced it into her mouth. Nightshade's eyes were wide as it began to pump in and out.\n\nThe other shadow-dick was quickly lifted into the air and then aimed downwards. Nightshade had been so focused on the dick in her mouth that she didn't even notice the dick aimed at her pussy until it began to enter her.\n\n\"Mmmmph!\" Nightshade said as the two shadow-dicks began to pump inside Nightshade's mouth and pussy simultaneously.\n\n\"That's better,\" Black Alice said. \"I guess now you're the Whore of the land of the Nightshades, huh?\"\n\nHelpless and hanging upside-down, Nightshade could only moan.\n\nNearby, Knockout had quickly resumed jerking Rick Flagg once Nightshade was out of her hair. Flagg's admittedly small dick was no match for the powerful hands of Knockout and he whimpered as she stroked his cock.\n\n\"Is this the best America has to offer?\" Knockout asked with malice. Flagg gritted his teeth and tried to respond, but all he could do was moan.\n\n\"That's what I thought,\" Knockout said. She transitioned and straddled Rick Flagg; much like Tommy before him, Flagg was helpless as Knockout placed his dick inside her and began to bounce on him.\n\n\"Oh God...\" Flagg said. \"Oh Founding Fathers...\"\n\n\"C'mon, Flagg!\" Tommy suddenly yelled. He couldn't bear to see another man in the same state he was just in. \"You can do it! You can make it! Just last another eight or so min-\"\n\n\"Unnnggghhh!!\" Flagg suddenly yelled. No one could tell he had cum but the triumphant cheer from Knockout told everyone what they needed to know. Knockout sat down on Flagg's hips, his whole dick inside her, and Flagg groaned as he shot his load inside her.\n\n\"That's more like it,\" Knockout said. She lifted herself off Flagg and quickly dipped her hand below to catch his cum. She let it pool in her hand and then walked off.\n\nFlagg, for his part, was despondent. \"Oh no,\" He moaned. \"I've failed. I've failed everyone. I've failed... America!\" He broke out into a small sob and covered his face with his hands.\n\n\"Jesus, Dude,\" Tommy muttered.\n\nThe mechanical arm dropped and picked up Flagg. He was at half-mast as it carried him away.\n\nKnockout, now with a hand full of the fallen American's jizz, turned and focused her attention on the other Suicide Squad left on the battlefield. Nightshade moaned around the dick in her mouth and her legs shivered with every thrust of the dick in her now wet pussy. Random shadows ran along her breasts, squeezing them, forcing them together. Nearby, Black Alice was having a wonderful time fondling the once-proud magic user.",
        "\"How's it going?\" Knockout asked.\n\n\"Why don't you ask her?\" Black Alice replied. She laughed as Nightshade moaned again.\n\nKnockout stepped towards Nightshade. They were about eye level, Nightshade being upside-down while Knockout was rightside-up.\n\n\"Just returning the favor,\" Knockout said, holding up Rick Flagg's cum. Nightshade's eyes widened. Knockout raised her hand and rubbed her hand along Nightshade's chin. The cum began to drip down Nightshade's face as the cock in her mouth continued to pump.\n\nThe Secret Six applauded this while the remaining members of the Suicide Squad booed the poor sportsmanship. Knockout only smiled as she walked back alongside Black Alice.\n\n\"You know,\" Knockout said mischievously, \"I think the princess here could use a few more cocks.\"\n\nKnockout moaned sharply.\n\n\"I think you're right,\" Black Alice agreed. \"I think 3 at least. Two for her hands, and one for...\" Alice's eyes trailed up, towards Nightshade's ass. Knockout laughed.\n\nBlack Alice waved her hands in the air, conjuring up 3 more shadow-cocks. These were even larger than the first two, black and menacing, and the Suicide Six squad cheered. Tommy glanced down at his team and saw that June was covering her eyes, unable to watch.\n\n\"Alright, cock,\" Black Alice said, \"Attack!\" She threw her arms forward but, strangely, nothing happened.\n\n\"What's wrong?\" Knockout asked.\n\n\"I... I'm not sure,\" Black Alice said. \"Her magic is... powerful. I'm having trouble holding it...\"\n\nAlice began to visibly struggle with the magic she was using. She gave one mighty shove with her hands but nothing happened. And then, slowly, the newly conjured shadow-cocks turned.\n\n\"No,\" Black Alice said in disbelief. \"What's happening? I can't... no!\"\n\nNightshade's powerful magic was no longer under Black Alice's control. The cocks inside Nightshade continued plugging away but the newly conjured cocks acted of their own volition. And their volition was to fuck Black Alice.\n\nKnockout backed away, uncertain of what exactly was going on, as the 3 shadow-cocks began to attack Black Alice. She was overtaken by shadow and lifted into the air. She hung in the air, her ass lifted up slightly higher than her face, and she kicked futilely into the air.\n\nThe shadow-cocks descended on her rapidly and without remorse. Black Alice yelled to Knockout for help but her shout was cut off as a dick rammed inside her mouth. She had barely processed this before a dick had slipped underneath her mock-Nightshade outfit and began to press against the folds of her pussy. And she had barely processed THAT before she felt a certain pressure against her asshole.\n\nBoth squads watched in a mix of horror and arousal as Nightshade and Black Alice were penetrated by the magical power that they had just previously shown so much control over. Without anyone in charge of this dark magic it went wild, pummeling both women with increased speed and ferocity. Nightshade had spit falling onto her face and Black Alice's cheeks were covered in streaks of her mascara.\n\nThe shadow-cocks were obviously penetrating the women but they strangely made no sound; all anyone could hear were the garbled moaning of the three women and-\n\n'Wait,' Tommy suddenly realized, 'Three women?' He looked over and saw Harley Quinn once again fondling herself. When she saw him she took her hand out of her shorts and crossed her arms. She seemed to be pouting.\n\nIt was Nightshade (who had been fucked for longer) who began to show signs of breaking first. Tommy thought he noticed that she began to press her hips into the cock in her pussy in time with its thrusts, and her mouth began to hang raggedly around the cock in her mouth. Her moans became strained and, when her legs began to tremble, Tommy closed his eyes to wait for the inevitable.\n\nNightshade's orgasm amounted to what sounded like a sneeze to Tommy. He opened his eyes and saw her somewhat silently enduring what appeared to be a powerful orgasm. It was oddly quiet, weirdly quiet, and almost a little unnerving. But Nightshade was undoubtedly cumming: her cheeks went from white to pink and her body was shaking uncontrollably.\n\nThe latter could probably chalked up to the fact that the cocks continued their merciless thrusting inside her and it only extended her orgasm. Even after it subsided and Nightshade looked completely spent, the shadow-cocks continued to pound her.\n\nBlack Alice's plight was not much better. She was breathing harshly through her nose and was otherwise airtight. The three cocks inside her all thrust in at different times; she seemed incapable of comprehending what could happen to her because as soon as one had pulled itself partially out of her, another thrust itself in.\n\nStill, Tommy thought, she just might make it. He figured there had to be only a minute or so left and if Black Alice could just hold on...\n\nAnd then her legs started shaking.\n\n'She's fucked,' Tommy thought.\n\nBlack Alice seemed to tilt forward in the air, her ass going even higher, as her throaty moans became higher and higher-pitched. The strange shadow-cocks took no notice and continued their ceaseless penetrations, driving Black Alice closer and closer to orgasm.\n\nTommy looked up and saw IQ at the podium, looking at a monitor. (His dick was now out of his pants and once again erect.) He seemed just about to call for time when Black Alice exploded in a torrential orgasm.\n\n\"Mmmmmpphhhh!!\" Black Alice moaned over and over around the cock in her mouth, so loudly and repeatedly that hardly anyone could hear IQ call for time. It was so loud that hardly anyone had noticed that Nightshade had began cumming as well; only when Tommy glanced over and saw her convulsing did he realize that she was again having a fierce orgasm. The two women came around the cocks in them, one wild while the other fought in vain for control.\n\nFinally, the sensation seemed to overpower the two women at the same time. Both of them cried out sharply and then it cut short; they had both passed out. The cocks almost immediately vanished without either of them awake and the shadow began to dissipate slowly into brightness. The two were lowered gently onto the ground and the shadow disappeared entirely.\n\n\"Um... time,\" IQ said again softly. The room was silent as the mechanical arms descended from the ceiling and moved both Nightshade and Black Alice to the next room.\n\nTommy was worried now. He looked down at his team: Plastique, Harley, and the poor girl June. He was the only man left and he wasn't sure how any of them could stand up to the formidable team the Secret Six had left: the massive man with tubes running through him, Knockout, the man with one red eye, Jeannette, or the intimidating woman with the claws on her hands. It seemed almost hopeless.\n\n\"Next round!\" IQ called out. He halfheartedly jerked at his dick. Tommy looked at the other two nerds and was surprised to see Lady Laminate slowly jerking Bug Baron. Her other hand was latched to one of her breasts.\n\n\"From the Secret Six... Deadshot!\"\n\nThe man with one red eye prepared himself for battle. He had on a thick vest and heavy tactical pants. (Tommy suddenly wished he had tactical pants.) He stepped out of his pod and towards the center of the court. He began to do calisthenics, stretching from one side to the other. Then he waved to his team and pulled down his pants. His cock was surprisingly soft, Tommy thought.\n\n\"And, from the Suicide Squad... Harley Quinn!\"\n\nHarley's pod opened and she ran out like a contestant on a game show, smiling and waving and blowing kisses. She faced up to Deadshot and looked him up at down.\n\n\"Geez, Mistah, that's a nice gun ya got there,\" Harley said as she glanced down at Deadshot's dick.\n\n\"You should see it when it's loaded,\" Deadshot replied.\n\nIQ began jerking his dick faster. \"And... go!\"\n\nFor a second, neither of them moved. Finally, Harley made the first move.\n\n\"Why aren't you hard, Deady?\" Harley asked with a mock pout. \"Don't see anything you like?\" She bit a lip and then slowly pulled down on her top. She exposed one breast and began to knead it with her hand. She brought her fingers to her nipple and squeezed it, eliciting a small squeak from her.\n\nDeadshot's dick betrayed him, growing slightly with a jump.\n\n\"That's better,\" Harley said. She took a step towards Deadshot. \"Let me just take care of dead dick for ya, Deadshot.\" She was close to him now and she reached out for his growing cock.\n\nDeadshot surprised her (and everyone else, really) by not falling for Harley's advances. Instead, he suddenly leaped into the air and did a flip over Harley. Harley was shocked, unable to move, and she was completely at a loss when Deadshot reached behind him and hip tossed Harley to the ground. She landed with an oomph on her back.\n\n\"Hey, what's the big ide-AHHH!!\" Harley shouted with surprise, but her words soon descended into a scream as Deadshot plunged a hand inside Harley's shorts, striking his mark instantly. Tommy couldn't quite see what was happening but he could guess: Deadshot had stuck at least a few fingers inside Harley.\n\nHarley screamed again but it devolved into kind of a laugh, almost as if Deadshot were tickling her instead of finger-fucking her. She barely pushed back against him or fought against his hand, instead just lying there and lifting her hips off the ground softly while Deadshot pulverized her pussy.\n\n'We're screwed,' Tommy thought. He knew from experience that Harley Quinn was a formidable fuck partner when she was focused but she seemed to focused on being pleasured to help the team. Without her, Tommy and the Suicide Squad were screwed.\n\nDeadshot yanked down Harley's top, now exposing both of her breasts. He began palming one with his hand while he continued fingering Harley. Harley, meanwhile, was still arching her hips and began to suck softly on one finger.\n\n\"Please, Deadshot,\" Harley moaned. \"Just give me that big dick of yours. I don't even care about winning, just give it to me.\"\n\nDeadshot looked down, for the first time becoming aware that he was incredibly hard now. He seemed to think better of Harley's offer but, as he looked down at her quivering body, he threw caution to the wind.\n\n\"What the Hell,\" He muttered. He yanked off Harley's shorts, exposing a red & black bush. He threw her legs apart and shuffled himself between them. He jerked his dick a few times and looked down at Harley's inflamed pussy. A red light shot down from his eye to her snatch, marking his target.\n\n\"Oh God, yes Mistah!\" Harley cried out, her eyes closed. \"Give me that fucking cock! I wanna cum all over it!\"\n\nPlastique yelled out, \"No!\" but it was too late. Deadshot lined up his target, reared his hips back, and pulled the trigger.\n\nAlmost immediately, Deadshot realized he had made a fatal mistake. As his dick sunk deep inside Harley's warm pussy, he groaned heavily and shivered. Harley's pussy gripped his cock tightly and Deadshot suddenly became aware that he had walked into a trap.\n\n\"Shit!\" He cried out. He tried to pull out of Harley's pussy but she wrapped her legs tightly around his hips, pulling him deeper inside her.\n\n\"What's the mattah, Deady?\" Harley asked with a smile. \"You gotta make me cum!\"\n\n\"Y-you tricked me!\" Deadshot said, almost in disbelief.\n\nHarley just smiled and began moving her hips up and down, forcing Deadshot's dick in and out of her.\n\n'Good ol' Harley Quinn,' He thought to himself. She had been playing possum until Deadshot was in her pussy, and now she was thoroughly fucking him. Harley leaned back and tugged on her black & red ponytails as she forced Deadshot in and out of her with her legs.\n\nDeadshot fought but only for a while; after that, he seemingly admitted defeat and allowed Harley to fuck his dick. He had a pained expression on his face but Tommy knew from prior experience that he was feeling intense pleasure right about now. Harley laughed to herself as she guided Deadshot in & out, in & out of her pussy. There was really nothing like it.\n\nDeadshot was sweating. Harley's legs drove him inside her again and again. Tommy knew the villain was sunk. And, it seemed, Deadshot knew it too.\n\n\"I've been beaten,\" Deadshot groaned out. \"I accept that. Will you at least let me go out on my terms?\"\n\nTommy wasn't quite sure what he meant by that but Harley seemed to; she smiled and slowly unwrapped her legs from around Deadshot. The sharpshooter barely had time to pull his dick out of Harley before he began to cum.\n\nDeadshot gripped his dick tightly and gave it one pump. His dick obediently began to cum and Deadshot lifted his cock up so it flew in a high arc over Harley Quinn. Incredibly, Deadshot had managed to aim his cum so that it landed directly in Harley's open, waiting mouth; the rest fell down in an arc between her exposed breasts and onto her yanked-down tube top.\n\nDeadshot came again, this time shooting a long stream of cum that landed over Harley's left eye. And then another stream, this time landing over Harley's right. Then he swiped his cock to the side as he came, this time sending a stream that managed to land on both of Harley's nipples at the same time. And then, amazingly, Deadshot squeezed his dick during his last shot of cum so that it dribbled out of his dick. It landed on top of Harley's multi-colored bush and spelled out, \"Haha.\"\n\nHarley lifted herself up, wiped her eyes, and looked down at her pussy. When she saw what Deadshot had written she laughed wildly.\n\n\"You're alright, Deady,\" She said. Deadshot saluted her and waited for the mechanical arm. Both sides applauded his elan as he was carried off into the next room.\n\nTommy looked up to wait for the next contestants. As he did so, he saw that IQ had jerked off onto the window (his 2nd cumshot of the night), while Bug Baron had his face buried in Lady Laminate's pussy. It was slightly revolting.\n\nA shaky IQ took the mic. \"Okay, our next contestants are... Harley? Harley, please, we need the floor.\"\n\nTommy saw that Harley was still lying in the center of the court. She was lazily scooping up Deadshot's cum and holding it above her mouth, letting it drip slowly down. She glanced up when IQ called out her name.\n\n\"Oops!\" She said sheepishly. She quickly licked her fingers clean. \"Sorry, everybody!\" She hopped up and grabbed her shorts, then ran back to her pod.\n\nTommy was suddenly feeling much more hopeful about their chances in this odd contest. Harley was on her game tonight and had managed to knock out a wily, smart opponent. If Tommy could just figure out how to eliminate Knockout, they might have a chance. Of course, he thought, first they'd have to figure out how to eliminate-\n\n\"Bane!\" IQ called out, bringing Tommy back to attention. The pod opened and the large, hulking man stepped out. He had on a luchador's mask and tight black clothes that seemed close to ripping with every step. Large tubes flowed in and out of him, leading to somewhere on his back. He was huge, well over 6 feet tall and almost as wide. Tommy cowered at the sight of the man.\n\n\"And, for the Suicide Squad... Plastique!\"\n\nThe tube next to Tommy opened but Plastique did not step out just yet. The beautiful French Canadian had seemed so tall and graceful on the plane but now she looked pitiably small against Bane. She sized Bane up and down, took a deep breath, and then stepped outside.\n\n\"Good luck,\" Tommy called out from his pod. Plastique turned and gave him a small smile.\n\n\"N'ai pas peur,\" Plastique said. \"I have tricks he does not know.\"\n\nPlastique turned and walked to face Bane. She came up to his neck. Bane looked down at her and smirked.\n\n\"Good luck, ni\u00f1a,\" He said to Plastique. Plastique adjusted her white gloves and tried to look unafraid.\n\n\"And... go!\" Cried IQ as he massaged his still-spent pecker.\n\nImmediately, Plastique threw her arms up into the air.\n\n\"Let's see how you like... this!\" She cried out. Her hands glowed orange and then a beam of energy shot towards Bane. He covered his face as it hit him and there was a tremendous explosion. Thick smoke filled the air, rendering the two invisible. Tommy heard a whirring kick in and the smoke was pulled towards the roof.\n\nAs it cleared, Tommy saw Plastique standing triumphantly. And Bane... was also standing, looking around in confusion.\n\n\"Is that it?\" He asked Plastique. The redhead looked shocked and then, out of options, shrugged.\n\nBane took two steps to close in on Plastique and grabbed her roughly by the shoulders. He threw her down on the court and stood over her menacingly.\n\n\"Now let me show you what I have in store, ni\u00f1a,\" Bane said. He reached into his pants and pulled out his cock.\n\n\"...Shit,\" Tommy said.\n\n\"...Merde,\" Plastique said.\n\nBane had an absolutely gargantuan cock. It was thick and long, with thick veins running through it. Tommy looked down at his own cock that he had once thought so impressive with a small amount of shame.\n\nBane reached down and grabbed Plastique's tight pink suit with his massive paw. He yanked his hand away and Plastique's suit came with it, leaving the French beauty completely exposed. She yelped and stared at Bane's cock as it bobbed in approval of Plastique's well-formed breasts and tight stomach.\n\nBane dropped to his knees, causing the ground to rumble slightly. He grabbed Plastique under each of her knees and yanked her towards him. He held her legs apart and placed his massive member at the entrance to Plastique's pussy.\n\nPlastique's eyes were wide with apprehension and maybe just a little excitement. She tried to think of a way to delay the inevitable.\n\n\"Umm... wait!\" She said. \"Don't you want me to give you, how you say... la pipe?\" She licked her lips seductively.\n\nBane seemed to consider this for a moment.\n\n\"No,\" He said. He thrust his cock forward and inside Plastique.\n\n\"Jesus Christ!\" Plastique yelled as Bane's dick shoved inside her. Her back arced heavily, with her ass and head on the ground but nothing in between. Bane seemed to only get the head of his cock in but Plastique reacted as if he had was all the way inside her.\n\nBane grunted and shoved in again, now putting a few inches of his shaft inside the poor Plastique. She moaned loudly again and arched her back even more. Her eyes were shut tightly and her mouth was open wide. Again Bane shoved, hardly pulling out beforehand, and again Plastique moaned. His dick stretched her, filled her completely, but still Tommy thought he could detect the faint sound of pleasure in Plastique's moan.\n\nBane leaned forward, his two large hands on either side of Plastique, and began thrusting his dick with regularity inside her. He didn't fuck smoothly or gently; no, the great villain seemed to rear back and throw himself forward each time. He grunted lowly and fucked her like an animal.\n\nAnd Plastique, despite herself, couldn't help but enjoy it. She gripped Bane's thick wrists with her hands to hold herself in place and moaned each time Bane threw himself into her. She seemed to mutter something in French occasionally but mostly she just moaned and tried to handle Bane's huge cock.\n\nBane towered over Tommy's teammate, fucking her without remorse. Bane's mates cheered him on (Knockout seemed to be eying his dick with a touch of lust), while Plastique's mates seemed to agonize over her pounding. Even Harley kept her hands out of her pants... well, mostly because she was still sucking bits of Deadshot's cum off her fingers, but still.\n\nPlastique was throttled by Bane over and over, the bombshell now completely lost to the world. She moaned from her throat, lifted her legs high in the air, and took Bane's dick as best she could.\n\nAnd took it Plastique did, over and over. She lasted maybe 7 minutes before she failed the challenge like so many before her: her voice heightened, her legs shook, her back arched, and before she knew it she was cumming on Bane's cock. She screamed and threw herself in the air and said many incomprehensible things, and through all of it Bane continued to punish her with his massive dick.",
        "Finally, Plastique's orgasmic cries quieted down and she collapsed on the ground. Bane pulled himself out of her slowly, his dick falling out of her pussy and hanging in the air.\n\nIQ, his cock now once again stiff, stepped to the microphone. \"And your winner is-\" He began to say, when suddenly Bane grabbed Plastique by the hips and roughly turned her over.\n\n\"Wha...?\" Plastique said lazily as Bane flipped her, but she soon woke up once she felt Bane's hands lift up her hips and felt his dick once again pushing against her lips.\n\nBane thrust himself inside Plastique once more, not to win this game, but as if to prove a point to the Suicide Squad. Plastique had her face buried in the ground and her hips high in the air and she continued her wailing moan and Bane pounded her.\n\nPlastique's first orgasm had barely subsided and a second seemed to piggyback onto it; she began to shake and soon the telltale signs of orgasm flew over her once more. She clawed at the floor of the court with her hands and then one suddenly shot up and shot off an explosive; it landed at the far side of the court and put a hole in the wall.\n\nPlastique was barely conscious as he second orgasm began to subside. Bane pulled out of Plastique and released her hips, causing her to slump to the floor. He stood up, stared dismissively down at his opponent, and then held his hands up in triumph.\n\n\"Bane! Bane! Bane!\" The remaining members of the Secret Six (Knockout, Jeannette, and the clawed girl) began to chant. The Suicide Squad was somewhat demoralized if not outright terrified; Bane pointed at poor June and Tommy thought she would pass out from fright. Bane then returned to his pod and squeezed himself in. He had to hold his cock straight up against him to allow the doors to close.\n\nTommy waited for the next call. He knew he was probably due (if not June, who had luckily escaped being called so far) and he examined his opponents. He wanted to avoid Knockout if at all possible but thought he could take the other two.\n\nIQ was once again jerking his dick as he got the next names from the computer. He turned on the microphone and had to shush Bug Baron & Lady Laminate, who were busy awkwardly rubbing their sensitive parts against each other. He began to speak.\n\n\"We have another tag team bout! For the Suicide Squad... Harley Quinn and the Red Hood!\"\n\nTommy's pod opened and he stepped out. He looked at Harley as they walked out. Harley hadn't bothered undressing and now strode out to battle with only socks riding up her legs. Tommy gave her an encouraging nod and a thumbs up. She laughed in a way that let him know she was laughing at him, not with him.\n\n\"And their opponents... Knockout and Scandal Savage!\"\n\n'Fuck!' Tommy thought. The tall redhead stepped confidently out onto the court, accompanied by her partner, the clawed woman. Tommy sized up Scandal Savage and liked what he saw: besides the claws, she wore tight black pants and a tight black shirt that left her belly exposed. Her mouth was covered but she had very pretty eyes. A plan formed in Tommy's mind.\n\n\"Hey, Harley,\" Tommy said, \"What say you take Knockout this time and I'll take-\"\n\n\"Whoa whoa whoa,\" Scandal suddenly broke in. \"We can't fuck.\"\n\nTommy looked offended. \"Why not?\" He asked.\n\n\"Because I'm a lesbian,\" Scandal Savage stated.\n\n\"Oh,\" Tommy said. \"But wait, she's a lesbian (he pointed to Knockout) and she fucked me.\"\n\n\"No, idiot,\" Knockout said. \"I'm bi.\"\n\n\"Oh,\" Tommy said. He wasn't defeated quite yet. \"But don't you think, just for the sake of the tournament, that you could...\"\n\nKnockout and Scandal both gave Tommy a look that made him trail off.\n\n\"You don't really *get* what being a lesbian means, do you?\" Scandal asked him.\n\n\"I really don't,\" Tommy admitted.\n\n\"And... go!\" IQ suddenly yelled.\n\nTommy had hoped he would be more prepared for his rematch against Knockout, but he was soon down on the ground just as before. Looking up, Tommy could see the mechanical claws above him before Knockout's leering face suddenly took up his view.\n\n\"Just like before, huh?\" She said as she snaked her hands into Tommy's pants. He groaned as he felt her tighten her hand around his dick and pull it into the light.\n\n\"Not going to waste any time with hand jobs,\" Knockout said as she straddled Tommy and pinned his hands to the ground. \"I know your pathetic cock is ready to cum.\"\n\nTommy tried to deny it but, as he felt his dick get enveloped by Knockout's powerful pussy, he knew she was right.\n\nNearby, Harley & Scandal had begun to size each other up.\n\n\"Guess I won't be needing these,\" Scandal said, removing the large blades from her hands, \"Unless you're into that sort of thing.\"\n\nHarley thought for a moment. \"Well now that you mention it...\" She began to say, when suddenly Scandal was on top of her. Scandal pushed Harley to the ground face-first, with Scandal straddled behind her. Scandal plunged her hand into Harley's pussy as she flattened Harley out against the ground. Scandal had the early advantage as Harley moaned into the floor.\n\nTommy could only hear his partner's progress faintly over his own moans as Knockout roughly rode him. He felt all the same things that had brought him so close to cumming before: Knockout throwing herself down onto his hips, her strong hands pinning him, her taunts from above. He thought for sure that he was doomed.\n\n\"You're doomed, you fucking weakling,\" Knockout said, stating the obvious. \"You probably can't even cum right. You're pathetic, you know that?\" She smacked Tommy's helmet. \"Tell me you're pathetic.\"\n\nTommy wasn't sure if an idea had suddenly popped into his mind over if Knockout's slap had given him a concussion but... wait, no, he had an idea.\n\n\"You're right,\" Tommy said weakly. \"I'm pathetic. You're so much stronger than me. I'm a worm.\"\n\n\"That's right,\" Knockout said. She squirmed a little on Tommy's dick and her downward thrusting faltered.\n\n\"I'm a little bitch,\" Tommy said, stating the obvious. \"I'm your bitch. Please, Knockout, make me cum. Squeeze my dick and it leak slowly out of my cock.\"\n\nKnockout closed her eyes and moaned softly. Tommy felt the grip on his hands slacken just a little bit.\n\n\"You are so much better than me,\" Tommy told his opponent. \"I'm fucking scum compared to you. Dominate my scummy cock, you fucking goddess.\"\n\nKnockout moaned again, loudly now, and a hand slapped the ground near Tommy's face. A dent was formed but Tommy continued, undeterred.\n\n\"I'll do whatever you want,\" Tommy said. \"Nothing is too degrading for me. I'm your slave. Treat me like dirt, please!\"\n\nKnockout's leaned upwards and brought both hands up to her breasts. Tommy, now freed, began to rub Knockout's clit with his hand.\n\n\"Is that good, mistress?\" Tommy asked. \"Is that what you want?\"\n\nKnockout groaned and mumbled something about Tommy being lower than dirt. He dug his thumb in harder and Knockout shouted in pleasure. She was barely focused on Tommy at all, now; all she cared about was the feeling in her pussy.\n\nToo late, Scandal Savage realized that her partner was in trouble.\n\n\"Knockout, what are you doing!\" Scandal yelled. Unfortunately, this meant taking her focus off Harley Quinn and Harley took the opportunity to flip Scandal off of her. Scandal landed on her back and Harley dove between her legs before Scandal could recover. Scandal cried out in pleasure as Harley buried her face into her snatch.\n\nKnockout had come back to reality a little when Scandal called out her name. She looked at her teammate in shock, and then down at Tommy.\n\n\"You little bastard, you-\" She started to say, but Tommy jammed his thumb into Knockout's clit and suddenly the great Apokoliptan roared and began to cum.\n\nTommy raised his free hand in triumph before suddenly remembering what it was like to be inside a superpowerful woman when she came. He reached below Knockout and contorted his body to pull his dick out of her just in time. He was still under her, though, and he had to dodge her hands as they slapped the ground all around him. Tommy hoped Knockout didn't kill him just after his moment of triumph.\n\nKnockout at last ended the throes of her orgasm and shook over top Tommy. She opened her eyes lazily and tried to muster up some anger.\n\n\"You're still a bitch,\" Knockout said.\n\n\"And you're still eliminated,\" Tommy replied. He watched the mechanical arm as it descended down and picked up a surprised Knockout.\n\nTommy lifted himself up and evaluated the progress of his partner. Harley had managed to slide Scandal's tight black pants to her knees and had then dove back into her pussy. Scandal's legs were tight around Harley's head but that didn't seem to bother her; she was busily and noisily tonguing Scandal's pussy.\n\nTommy watched with interest. Scandal seemed to be trying to muster up the courage to fight back the pleasure was overwhelming her, driving her flat onto her back. Harley had her perky little ass up in the air, Scandal was arching her hips into Harley's face, beads of sweat were forming on the Secret Six member's face, Tommy could feel her getting ready to cum...\n\nScandal rolled her head to the side and slightly opened her eyes. She was facing Tommy and her eyes shot open once she saw him.\n\n\"Gross,\" She muttered, and Tommy looked down to find that he had been staring at her while stroking his cock. Scandal's orgasm had died at the sight and she now kicked Harley out from between her legs. Harley, disappointed, looked up at Scandal. The two were about to pounce on one another when IQ's voice once again came out over the speaker.\n\n\"Time!\" He shouted. Tommy could hear pounding and he looked up to find Lady Laminate pressed up against the glass while Bug Baron stood behind her. IQ's dick was red and throbbing.\n\n\"Way to blow it,\" Harley told Tommy as they returned to their pods. He tried to protest but Harley just waved at him.\n\n\"Okay, next bout,\" IQ said. \"From the Secret Six, once again... Bane!\"\n\nThe pod opened and the South American supervillain stepped confidently onto the court.\n\n\"And, from the Suicide Squad... June Moon!\"\n\n'Oh no,' Tommy thought. June's pod opened and the timid blonde stepped slowly out of her pod. She had her hands down at her sides and she didn't dare look up at Bane. She walked to her place on the court and pushed her hair behind her head.\n\n\"Please don't hurt anyone,\" June said softly.\n\nBane chuckled. \"Don't worry, nina, I'll go easy on you,\" He said with a hint of malice.\n\nJune finally looked up at Bane. \"I wasn't talking to you,\" She said with lots of malice.\n\n\"And... go!\"\n\nJune flinched but Bane simply stood there. The behemoth looked down at his opponent without respect.\n\n\"Well?\" He asked.\n\n\"...What?\" June replied.\n\n\"Do you have some grand plan like your friend?\" He laughed, as did his teammates in their pods.\n\n\"Just one...\" June said. She took a step back from Bane.\n\n\"ENCHANTRESS!!\" She yelled, and everyone in their respective tubes had to shield their eyes from a blinding light that began to emanate from June. Tommy turned and closed his eyes and yet the light still felt like it was directly in front of him. It burned his retinas and gave off an intense heat that singed his nostrils. He could hear but couldn't see a startled shout coming from Bane.\n\nFinally, the light began to die down. Tommy turned back to the court but he could see nothing at first; all he could see were large white spots. He closed and opened his eyes repeatedly, fighting off the spots, and tried to see what on Earth had happened to June.\n\nBut... June was gone. Tommy thought his eyes were still playing tricks on him, but no: the timid blonde was no longer on the court. In her place was a tall, busty, raven-haired woman. She had on a pointed green hat and a long, flowing green robe. A black belt was placed around her waist, heightening her curves, and she had on a red scarf around her neck. The new woman stood confidently and gave Bane a withering look.\n\n\"What's the matter, Bane?\" She asked as she gazed on his confused face. \"Not so tough now, I fear?\"\n\nIt slowly dawned on Tommy that June hadn't disappeared but TRANSFORMED. The woman in front of him was June's possessor, the goddess she had spoken of. As Tommy looked on at her, he realized \"goddess\" wasn't quite the perfect word to describe her. A much better word would have been-\n\n\"Bruja!\" Bane said with fear, taking a small step backwards.\n\n\"Aww,\" June... rather, this Enchantress, said with mock-sadness. \"Do not fear, Bane. I will go easy on you, I promise.\"\n\nWith that, Enchantress raised her hands and began her attack. Her hands glowed green and she hit Bane with a blast of energy that dropped him to a knee. The big man grunted and tried to stand up, but Enchantress poured on more energy that seemed to hold him in place.\n\n\"Just relax and enjoy it,\" Enchantress told Bane as he struggled to stand. Enchantress began to utter a spell and her body began to float approximately a foot off the ground. She finished her incantation and Tommy seemed to glimpse an ethereal wisp come off of her body; it floated towards Bane and then down towards his crotch. Something invisible pulled down his pants, releasing his massive cock, and then the ethereal stuff enveloped Bane's dick. It seeped inside him and he began moaning instantly.\n\n\"Fighting it is only going to make it worse,\" Enchantress said. She cackled as Bane struggled against her magic. Tommy could see his dick straining, as if it were being aggressively stroked. But there was nothing around it. It was strange, scary magic, and it honestly made Tommy's dick shrivel a little.\n\nNot Bane's, though; his dick seemed to rage under Enchantress's influence, throbbing uncontrollably. It turned red and angry and the tip of his massive dick seemed at the verge of exploding.\n\nBane roared angrily at his predicament. He continued to struggle to stand but was unsuccessful. He then began to reach his hand behind him, pulling it backwards towards his back. His progress was slow and agonizing, with each inch of progress causing his dick to engorge even more.\n\nEnchantress didn't notice this, as she was too enamored with her own ability to pay much attention to what Bane was doing. She simply cackled as she hovered in the air, her scarf flowing behind her, so completely sure of her own abilities.\n\nBane finally had managed to pull his hand behind his body and with a last desperate exertion he managed to flick a switch on the contraption on his back. The tubes on his body began to fill with a strange liquid that seemed to flood into Bane. The two large tubes that went to his head stiffened as the liquid was delivered to Bane and the man screamed as the liquid was injected into his body.\n\n\"Huh...?\" Enchantress said as she looked down at her foe's agony. Her concentration was momentarily broken and the green energy around Bane flagged for a second. It would flag even more when she saw Bane's transformation.\n\nThe liquid going into Bane was not just giving him strength; it was changing his entire body. He seemingly grew even larger than his already massive size and he pushed out the green energy surrounding him as he increased in size.\n\nAnd he increased in size everywhere, even in his already large cock. Bane's dick slowly changed in color from red to green as the strange liquid began to pour into his dick. It got longer and thicker and somehow more engorged as the substance filled it. The room gasped at the raging member, almost in disbelief.\n\nEnchantress's eyes were filled with wonder but she tried to keep control of herself and her magic. She redoubled her efforts, forming an even larger boundary around her foe. Bane, now fully transformed, began to attempt to stand once more but this time he was nominally successful. He slowly began to pull himself up from his knees an inch at a time. Enchantress watched this with disbelief.\n\n\"No, this can not be...\" She said with growing dread. \"It's impossible! No one can...\"\n\nBane stood up fully against the power of Enchantress's magic. With his increased height he was now even with Enchantress's floating body and he looked at her with wild, bloodshot eyes.\n\n\"Me toca a m\u00ed, Bruja!\" Bane roared. He fought Enchantress off and grabbed her roughly by the waist. Then, with a roar, he brought her close to him and thrust his cock within the folds of her cloak. Enchantress squealed to indicate that Bane had struck the mark.\n\nBane began to fuck the witch with a ferocity that startled everyone watching. They couldn't see how much Enchantress was taking but her reaction indicated that she was taking quite a bit. She moaned uproariously with every thrust, her body hanging limply and convulsing every time Bane shoved himself inside her.\n\nBane was now more animal than man now (and he was already pretty animalistic), his thrusts fast and rough. He tore at Enchantress's belt and it flew off easily, opening the folds of Enchantress's cloak and exposing her body. Everyone could now see Bane shoving his impossibly dick inside Enchantress and another gasp flew up from the enclosed pods.\n\n(Harley laughed.)\n\nEnchantress seemed barely conscious as she endured Bane's dick repeatedly. Her moaning was dying down into more of a whimper and she barely reacted when Bane leaned down and began sucking on one of her ample breasts.\n\nAnd then, with one last burst of strength, Enchantress made one last desperate move. She threw one hand up and pressed it against Bane's masked forehead and a bright blast of green energy burst forth directly into the monster's head.\n\n\"Rrraaarrrrgghhh!!\" Bane yelled.\n\n\"Wooooaaaaaaaahhhhh!!\" Enchantress yelled.\n\nBane's brain was being psychically assaulted by Enchantress's hand while her pussy was being physically assaulted by Bane's cock. The two both screamed wildly and without abandon; no one was sure if it was in pleasure or pain.\n\nEnchantress showed sign of breaking first but Bane soon followed. As her breaths became ragged and her back began to bend, Bane's grunts became more frequent and his thrusts became more halting and less intense. Who would break first, though?\n\nNeither would, actually. Both Enchantress and Bane were thrust together and then both began to cum simultaneously. Bane roared and threw his head back and his dick began pumping cum inside Enchantress's pussy. Enchantress cried out and her body shook and one hand went to her hair and the other stayed firmly against Bane's forehead.\n\nThe two came loudly and ferociously as each of them succumbed to the raw power of the other. Bane's orgasm was so intense that it brought him back down to his knees and he pulled Enchantress down with him. The landing caused his dick to enter Enchantress one last time and she squeaked out a moan. Then the two fell to the side and onto the ground below.\n\nBane seemed unconscious: his muscular chest was moving softly but nothing else. Enchantress managed to crawl of Bane's dick and pull herself a foot or so backwards before she collapsed onto her back. She seemed to be fading fast and she had the strength to say only one word.\n\n\"Enchantress,\" She said softly. And then she closed her eyes and was asleep. As the mighty witch slumbered, her body slowly transformed into the small blonde girl Tommy had once known as June.\n\nBoth Bane and Enchantress were eliminated.\n\nThe mechanical arm reached down and gently lifted June up off the ground, sending her to the other room. The other arm dropped down to pick up Bane but struggled. It got him a foot off the ground but no farther and Tommy saw steam coming out of the mechanizations in the ceiling. Luckily, June's arm returned and both arms coordinated to lift the massive man to the next room.\n\nThe remaining combatants waited for the next round. There were only four of them now: Harley & Tommy on one side, Scandal Savage and the banshee Jeannette on the other. They eyed each other with determination and were eager to hear IQ's next call. Tommy in particular was eager; he was pretty sure he knew just how to handle the white-haired banshee across the way.",
        "But there was no announcement by IQ. Tommy looked up at the viewing area with confusion and found that IQ had deposited a second load onto the viewing area window and promptly fallen asleep. Bug Baron & Lady Laminate had seemingly disappeared as well.\n\nBut only seemingly. Tommy saw a hand reach up from behind the computer and then saw Bug Baron's red face come up with a smile. His monocle was gone and his scant hair was pulled in every direction. He pressed on the mic and tried to speak.\n\n\"Final round,\" He said. \"No holds barred, no time limit. Last one standing is the winner.\" A female hand reached up and pulled Baron back down to the floor.\n\nThe pods opened and the survivors stepped out of their pods. No one had to say go; as soon as the pod opened Scandal and Harley ran at each other and were soon rolling around on the floor.\n\nTommy stepped towards Jeannette, who was seemingly still upset over her treatment at the hands of Captain Boomerang earlier. She put a hand on her hip and looked at Tommy haughtily.\n\n\"First I'm going to dispose of you,\" She said in her French accent, \"And then I'm going to find that porc Captain Boomerang and feed him his 'eart.\" She coughed in remembrance of Captain Boomerang's face fuck.\n\n\"I guess we'll see,\" Tommy said with a knowing wink. \"But I think your little yelling power won't be so effective right now.\"\n\n\"Qui?\" Jeannette asked. She smiled blackly, as if Tommy had made the biggest mistake in the world. \"Maybe I just feed you your 'eart first.\" Jeannette took a deep breath, opened her mouth wide, and unleashed a terrible scream.\n\n...Or tried to, anyway. As she tried to scream, though, all that came out was a think squeak and then a hacking cough. Jeannette cleared her throat and tried again but still, nothing came out.\n\n\"See,\" Tommy said as he took a step towards Jeannette, \"I've dealt with banshees before and one thing I learned was that you all have very sensitive throats. Specifically, your power goes away if you've had something thick and meaty pressed against repeatedly.\"\n\nJeannette considered what Tommy said and her eyes went wide. \"You mean...\" She said.\n\n\"Yep,\" Tommy replied.\n\nTommy was on top of Jeannette before she had too much time to process this information. He wrestled her to the ground and deftly slipped his hand up her velvet dress. Yanking down her panties to her knees, Tommy kept Jeannette's legs together and lifted them up to his shoulder.\n\n\"Try not to scream too much,\" Tommy told Jeannette as she looked up at him from the flat of her back. \"It's not good for your throat.\"\n\nTommy entered Jeannette and she choked out a surprised yelp, then a faint cough. With her legs held together by her panties she was incredibly tight and Tommy had to remind himself that he couldn't cum quite yet.\n\nJeannette's back arched as Tommy began feeding her his well-sized dick and she had to bite her lip to keep from screaming. The thick white curls of her hair bounced as Tommy fucked her and the thick buckles on Jeannette's dress strained against her as she arched her back against them. When Tommy pressed his dick deep inside the banshee and held it there for a moment, Jeannette couldn't help herself and managed out a weak squeal of pleasure. Tommy smiled and began fucking Jeannette with vigor.\n\n\"Oui, oui, oui,\" Jeannette began to moan. She seemed largely indifferent to the game now, and Tommy noticed her undoing the buckles on her dress. She freed her breasts and kneaded them absent-mindedly as Tommy fucked her.\n\nTommy was enjoying his advantage at the moment but, as he looked across the court, he noticed that Harley was not so lucky. Scandal had her pinned to the ground and was viciously fingering the jester. Harley seemed to struggle but every time she tried to lift herself up Scandal simply shoved a few fingers inside her and Harley lost the will to fight back.\n\nTommy considered his team's position. He could defeat Jeannette, sure, but if Harley lost to Scandal then there would be no way to make Scandal cum while Scandal could at least give Tommy a hand job (the thought made his dick twitch). No, Tommy needed to figure out a way to help Harley.\n\n'But how?' Tommy thought as he watched Jeannette finish off all her buckles and expose her taut body. Suddenly, Tommy had an idea.\n\n\"C'mere,\" Tommy said to Jeannette, pulling out of her and grabbing her arm. The banshee pouted at having Tommy's dick pulled out of her but didn't fight as Tommy began walking them on their knees over to Scandal & Harley. He made eye contact with Harley and motioned with his hand what his plan was. Harley moaned but seemingly nodded in agreement.\n\nAs they neared, Tommy brought Jeannette next to him and grabbed her thick, white hair.\n\n\"Harley, now!\" Tommy yelled. Harley suddenly used her legs to throw Scandal off of her and onto Scandal's back. The villain gave a surprised shout and, before she could recover, Tommy thrusted Jeannette's head against Scandal Savage's snatch. Harley hopped up and took over, grabbing Jeannette's head and forcing her lips against Scandal's lips. Scandal moaned and then moaned even more when Harley's fingers hit her clit.\n\nTommy, now free to return to Jeannette, stepped behind her and lifted her hips up into the air. He gave her ass a nice slap and then once again slid his dick inside her.\n\nThe four formed an odd shape: Tommy on end, Jeannette on her hands and knees in front of him, her mouth against Scandal's pussy, and Harley had straddled Scandal's tits so that she could gain easy access to Scandal's clit. They looked like the world's most poorly constructed bridge.\n\nBut still, it was effective for what they needed to do. Jeannette began moaning (as best she could) into Scandal's pussy, which caused the villainess to shake and led her closer to orgasm. Jeannette's moaning only increased when Tommy leaned forward and snaked a finger around and down against Jeannette's clit. The two Suicide Squad members worked their fingers furiously against the Secret Six's clits.\n\nScandal Savage was down but not quite out. She slipped a finger of her own between her own breasts and began rubbing Harley Quinn's clit in revenge. Harley began to laugh but she only redoubled her own efforts against Scandal's clit and Scandal started shaking.\n\nTommy smiled as he fucked Jeannette. Them cumming was only a formality at this point and it was a formality that was rapidly approaching. Jeannette was lost in her own little world now and Tommy felt her back rounding as she ran away from her orgasm. It caught her, though, and Tommy felt her tighten around his dick as she began to cum.\n\nThe banshee's throat was sore but not quite dead and she began to scream inside Scandal's pussy as she came. Tiny shockwaves were formed, moving in waves against Scandal's parts, and the villainess was sent over the edge. She arched her back, lifting up against Harley's pussy, and began to cum.\n\nTommy pumped his fist as the final members of the Secret Six were defeated and Harley clapped her hands rapidly with excitement. Jeannette & Scandal Savage couldn't be too upset, however; there were worse consolation prizes than an Earth-shattering orgasm.\n\nJeannette's orgasm subsided and Tommy pulled his dick out of her. She fell onto her side and looked up at lazily.\n\n\"I guess...\" She said hoarsely. \"I guess I can let you live.\"\n\nTommy said thank you and then moved aside to allow the mechanical arm to pick up Jeannette.\n\nHarley, too, moved off of Scandal Savage. Scandal pulled down her mask and revealed a shockingly pretty face. ('Dammit!' Tommy thought.)\n\n\"Same time next year?\" Scandal asked Harley.\n\nHarley smiled with her tongue sticking slightly out. \"You're on,\" She replied. Scandal replaced her mask and allowed the arm to take her away.\n\nTommy glanced around the once pristine court. It was littered with clothes and weapons. Holes were made in the floor and a large one was in the wall, courtesy of Plastique. It looked like a war zone. It basically was a war zone, Tommy admitted.\n\n\"Hey!\" Harley yelled up at the viewing area. \"Hey, we won! HEEEEYYYY!!\"\n\nIQ was rustled out of his slumber. He glanced over and saw Bug Baron & Lady Laminate fast asleep on the floor. They were holding each other. It was oddly sweet.\n\nIQ flicked on the mic. \"Oh, sorry. And the winner is... The Suicide Squad!\"\n\nTommy turned to congratulate Harley and found her jumping into his arms. He held her there and they both celebrated, cheering loudly. Their cheers slowly died as they both realized that their privates were still exposed and pressed up against each other. They looked down and then at each other.\n\nIQ spoke again. \"Now if you'll both just wait a moment I'll-\"\n\nHarley reached down and slipped Tommy's dick inside her and Tommy quickly began fucking Harley while he held her in the air. Her breasts were pressed tightly against his shirt and Tommy gripped Harley's ass tightly with his hands.\n\nHarley began to laugh while she rode Tommy and began to bounce herself on his dick. Tommy had to take a step backwards to catch his balance. Harley and him began to come together with tremendous force and the slapping sound of their hips colliding began to fill the room.\n\nThere was no discussion of whether this was a final contest to see who the preeminent fucker truly was. It was simply two people fucking because they liked to fuck. Harley was laughing, Tommy was smiling (although no one could see behind his helmet), and they were simply having fun. No competition, no anger, just sex.\n\nHarley slowed her bouncing and tapped Tommy on the shoulder, indicating that she wanted to be let off his ride. He complied, lowering her down to the floor. Her feet hit the ground and she turned around so that she was facing away from Tommy. She up and over her shoulder at him.\n\n\"Tired yet?\" She asked.\n\n\"No way,\" Tommy replied. (He was actually exhausted but he wasn't going to stop now.)\n\nHarley smiled and lowered herself to the ground, getting on her hands and knees. Tommy followed her and positioned himself for doggy style. He pushed himself forward and his eyes rolled when his dick hit Harley's pussy lips.\n\n\"Nuh-uh,\" Harley said at this, surprising Tommy. He opened his eyes and looked down at her.\n\n\"Nuh-uh?\" He repeated.\n\n\"Nuh-uh,\" Harley said again and with a mischevious smile she reached around, grabbed Tommy's dick, and pulled it upwards. It rested lightly against the entrance to her ass.\n\n\"Isn't this how I normally make you cum?\" Harley asked.\n\n\"Huh?\" Tommy said. \"What're you... how did you... oh shit...\" Tommy groaned as Harley pushed backwards and pierced her own asshole with Tommy's cock.\n\nTommy stood still while Harley began to rock herself back and forth, impaling herself repeatedly with Tommy's big dick. Tommy could only grip Harley's ass with his hands to withstand her pushes backwards. Tommy marveled at Harley's ass and could scarcely believe how good it felt around his cock.\n\nHarley began to lean forward and Tommy instinctively followed. Harley laid flat on her stomach and Tommy laid on top of her, his dick never leaving her ass. Harley arched her back, presenting herself to him, and encouraged him.\n\n\"Fuck my ass,\" Was all Harley had to say.\n\nTommy put his elbows down on either side of Harley's head and began to thrust into her ass with vigor. Harley bucked her hips against him, allowing Tommy to thrust deeply inside Harley and then pull almost all the way out of her before thrusting deeply once more. Harley's ponytails were in Tommy's face and he grabbed one with each hand, pulling them upwards and lifting Harley's face from off the court.\n\n\"That's it, ride your Harley,\" Quinn said, making Tommy laugh. He fucked Harley harder and Harley seemed to love it. Tommy felt her lift up slightly and saw her hand disappear underneath her. A moan escaped her lips as Harley began rubbing her clit.\n\nTommy's balls ached heavily after such a thorough fucking session and he knew he didn't have long to last. It seemed like Harley Quinn was going to best him.\n\n\"I'm gonna cum,\" Tommy grunted out. Harley giggled.\n\n\"Cum in me,\" She responded. Tommy reared back and gave Harley all he had, tugging hard on her pigtails. His dick slammed against her ass, rippling it. Harley moaned loudly and the arm under her began to move furiously under her.\n\nTommy felt his dick twitching. He had planned to thrust deeply inside Harley when he came but his orgasm caught him by surprise and Tommy began to cum at the apex of pulling out. He began to shoot his rather large orgasm inside Harley, coating her walls with white spunk.\n\nTommy groaned. The feeling was so intense he couldn't thrust but could only hold himself inside Harley while he came repeatedly inside her. Harley didn't seem to mind; she moaned from her throat and continued furiously flicking her clit.\n\nAs Tommy's orgasm subsided, he began to gently pull out of Harley. She surprised him, though, by reaching back and holding him inside.\n\n\"Keep it there,\" She told Tommy. He complied, keeping his softening dick inside Harley's ass. Harley returned to her clit, almost mashing it with her hand now. Her back began to round and, loudly, she began to scream.\n\n\"AAAAAHHHHHH-AHAHAHAHA!!\" Harley screeched as she began to cum. She now pushed back against Tommy and he yelped as his still-sensitive dick was forced further inside Harley. Harley thrashed underneath Tommy, laughing wildly all the while. Her orgasm was intense and unrestrained; Tommy thought she would have hurt something if he hadn't been lying on top of her, holding her in place.\n\nFinally, Harley began to quiet and she suddenly seemed very tired. Tommy asked if he could pull out of her and she only nodded. Tommy slowly pulled out of Harley and rolled over onto his back beside her.\n\n\"Not bad, Harley Quinn,\" Tommy said. There was no response. Tommy looked over at his teammate and saw that she was fast asleep.\n\n***\n\nTommy awoke with a start on the floor of the court. He looked around and saw that he was alone. All except for a note lying next to him. He opened it and began to read:\n\n\"Dear Hoody,\n\nSorry, but Amanda Wallawalla Washington ordered us to leave you behind. Flagg argued but she then told us that she had us all on camera fucking. Couldn't exactly argue with her then. Anyway, sorry.\n\nThanks for cumming in my ass.\n\nSincerely,\n\nHarley Quinn\n\nP.S. I know who you really are but don't worry, I won't tell anyone. You were the only person that has ever been nice to me and that has to count for something, right? I'm not sure why you were here with us but I guess Batman has to have some secrets!\"\n\nTommy read the note and realized just how close Harley had come to the truth. He tucked the note into a pocket of his jacket as he stood.\n\n'Well, shit,' Tommy muttered. He was once again stuck in some random place without any idea where said random place was or how to find safety.\n\n'Ah, well,' Tommy thought as he adjusted his dick, 'At least I have a story.'\n\nTommy wandered through the seemingly abandoned research center, looking for a way out. He gradually became aware that the research center was ACTUALLY abandoned. The only signs of life were random streaks of blood on the walls. Was that from when they had broken in, or...?\n\nTommy finally found an exit door and pushed it open. It was morning now and the light shone harshly in Tommy's eyes. It took him a moment to regain his vision and see the 20 ninjas that were standing right outside the door.\n\nIt did not take them a moment to see him, though. By the time Tommy could actually see, he was staring down 20 different blades pointed directly towards his throat.\n\n\"Is it him?\" Tommy heard a voice say. The ninjas parted (though they still kept their blades trained on Tommy) and Tommy saw an older, greying man stomping towards him. The man wore a blue battle suit with pouches everywhere. He had a scarred, hard face and Tommy was more than a little bit intimidated. The man raised a sword of his own and pressed it against Tommy's throat.\n\n\"I should kill you right now,\" The older man told Tommy, \"But we must abide by our laws.\"\n\n\"...Good,\" Tommy said. He didn't know what laws but any law that kept someone from slicing his throat was a good one.\n\n\"I'm sure we will have much more effective deaths in store for you once you have been found guilty for your crimes, anyway,\" The man said. He lowered her sword and motioned to two young women behind him, who grabbed Tommy. One was tall with white hair (even though she was young) and an eye patch while the other was a smaller Asian woman with a placid face and, Tommy noticed, nice perky tits.\n\n\"But what did I do?\" Tommy asked, tearing his eyes away from said tits. He was having a hard time keeping up with all the different groups that wanted to kill him.\n\n\"You defied Ra's Al Ghul and aided in the capture of the Demon's Head, his two daughters, and Deathstroke the Terminator,\" The woman said. \"And you will answer to the League of Shadows, Tommy Naylor.\"\n\n\"Oh,\" Tommy said. He frowned.\n\n\"Goddammit,\" Tommy muttered, \"I just want to go back to Gotham.\"\n\nTommy was roughly pushed forward by the two young women and began to march. To where, he did not know."
    ],
    "authorname": "BatmansDick",
    "tags": [
        "parody",
        "harley quinn",
        "bane",
        "knockout",
        "scandal savage",
        "deadshot",
        "enchantress",
        "captain boomerang",
        "black alice",
        "nightshade"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/lets-be-batman-pt-53"
}