{
    "title": "The Girlfriend Experience Ch. 05",
    "pages": [
        "Author's Note: This story is a collaboration with my friend and editor, Harvey. We both contributed equally to its content and we hope you enjoy it. Additionally we'd like to thank Jim (Mojavejoe420) for his contributions to this chapter.\n\n* * * * *\n\nI walked toward the Old Homestead Steakhouse in Caesars Palace just before five o'clock. I was wearing what was for me a rather conservative knee-length Bodycon dress, with a neckline that showed just a hint of the tops of my breasts, and a pair of four-inch black ankle-strap pumps. I saw a young man standing in the outer corridor. He was tall, just like his father, and quite handsome, but he was underdressed for the occasion in just a polo, a pair of Dockers, and suede loafers. I stopped in front of him and said, \"Hello, E.J., I'm Elisa.\"\n\n\"I hate that nickname, only my father calls me that,\" he said disdainfully. \"Call me Ed.\"\n\n\"Okay, Ed, no problem,\" I said cheerfully.\n\nHe turned and sauntered toward the entrance to the restaurant, obviously expecting me to follow him. All right, I said to myself. I'm going to start this kid's education right now. He's got an hour and a half to convince me I can straighten him out. I stood there calmly. When he reached for the door, he noticed that I wasn't with him, and he strolled back to me.\n\n\"What are you waiting for?\" he asked in a patronizing tone.\n\n\"I'm waiting for you to behave like a gentleman and treat me like a lady,\" I told him.\n\nHe shot me a condescending look, then sneered, \"You're not a lady, you're a whore that my father purchased for me for my birthday.\"\n\nI inwardly cringed. Snide little fucking prick. Then I looked him straight in the eyes. \"Yes, I am a prostitute, but for the record I prefer the term escort. Despite that, for this date, in public you're going to treat me like a lady, and I expect you to show me proper respect.\"\n\nHe had the grace to look embarrassed. \"Sorry,\" he mumbled. His heart wasn't really in that apology, I thought, but it's a start. He extended his elbow, I put my arm into it, and we walked together toward the restaurant. When we got there, I waited until he figured out that he should open the door for me, and when he did I said \"Thank you\" and walked ahead of him to the ma\u00eetre d's stand.\n\n\"May I help you?\" the hostess asked.\n\n\"Reservation for Foster,\" Ed answered in an annoyed tone.\n\nShe hit a couple of keys on her iPad. \"Certainly, Sir, this way, please.\" She grabbed a couple of menus and led us to what could have been a four-top table but was set for two people next to one corner of it. He didn't assist me; he just pulled out a chair and sat down with a scowl on his face. A male server hustled over and pulled out my chair. I sat down and shot him a grateful smile, which didn't improve Ed's mood in the slightest.\n\n\"What's your problem?\" I asked him.\n\nThe server reappeared before he could reply. \"May I offer you a beverage?\"\n\n\"I wanna Coke,\" Ed said in a loud voice, much too loud given the quiet ambiance of the restaurant, and some of the other patrons looked over at us.\n\nThe server ignored him and looked at me. \"For you, Miss?\"\n\nIt's time for Ed to learn a bit more. \"I'll have a Virgin Mary, please.\"\n\n\"Of course, Miss, and the young gentleman will have a Coke.\" He bowed slightly in my direction, then turned and left us.\n\n\"What was that all about?\" he snickered. \"Virgin Mary, huh?\"\n\n\"Are you this way on all your dates?\" I asked sweetly.\n\n\"What way ... what are you talking about?\" The boorish tone in his voice wasn't lost on me.\n\n\"You're rude and arrogant, a little 18-year-old boy who's not even pretending to be a man,\" I said bluntly.\n\n\"I wasn't rude,\" he protested. \"That's his job, to get us drinks.\"\n\n\"That doesn't mean you have to be demeaning to him. A little courtesy goes a long way.\" He looked away from me. \"You deflected my questions, both of them.\"\n\n\"My problem,\" he said defiantly, \"is that this is a gigantic waste of time. We both know why you're here, we both know what's going to happen, so why are we wasting time having dinner when we should be upstairs fucking?\"\n\nI took a deep breath and attempted to get my temper under control. He was two seconds away from getting slapped. Only my promise to his father to give him a chance kept me from getting up and walking out of the restaurant.\n\n\"The reason we're having dinner,\" I responded coolly, \"is the same reason you can't get to first base on your dates. My drink order was a subtle dig at the fact that you're the only virgin sitting at this table, and if you don't begin the process of changing your behavior you're going to stay one for a long time.\"\n\n\"That's bullshit,\" he replied hotly, \"if you want the money we're going to be fucking and this is just a big waste of my time.\"\n\nMy blood was now boiling and I took another deep breath. \"Let me explain something to you. Your father is spending a lot of money for this date we're having, and he wants you to have a good time and learn some things. But nothing is guaranteed to happen, do you understand that?\" I said coolly. I stopped talking and waited for everything I'd said to sink in.\n\nA look of shock broke over his face. \"What ... ummm ... what do you mean?\" He thought for a moment, then added, \"Just how much money is he paying you?\"\n\n\"Your father told me how you were likely to act, and that he hoped I'd be able to change your behavior.\" I paused again so he could digest everything I was telling him. \"We also made an agreement concerning what I can do if I'm unsuccessful in getting you to modify your behavior.\" I paused a moment, creating a little dramatic effect. \"You're an intelligent young man, do I really need to spell that out for you?\" I said icily.\n\nI now had his complete attention. \"To answer your other question, how much I'm being paid is between me and your father. If you really want to know, you'll have to ask him.\" I hesitated, then added a little sweetener. \"If our date goes well, and I tell him how much I enjoyed being with you, he may just decide to tell you.\"\n\nOur drinks arrived, and we sipped in silence for a minute or so. Then he opened up to me a little. \"Every one of my dates has sucked,\" he admitted woefully, \"and I definitely haven't been successful, to use your word. I can't even get a second date with any of the girls I've taken out.\"\n\nThe tone of his voice had changed. He was being much more thoughtful and respectful now, and I knew what I'd said had made an impact. \"Do you have any idea why that's the case?\" I offered gently. He'd softened his tone and I wanted to do the same.\n\nAgain we were interrupted by the server who returned to our table, and our conversation was put on hold. \"Have you decided on your dinners?\" the server asked. Ed was looking at me, and I was pleased to see that he reacted much more appropriately than he had before. He said politely, \"What will you have, Elisa?\"\n\nI shot him a radiant smile. He's learning. \"I'd like a half Caesar salad followed by the Scottish salmon.\"\n\n\"Excellent choices, Miss. For you, Sir?\" There was a new note of respect in the server's tone, and I hoped my dinner companion noticed it also. He apparently did, because his tone was much more civil than it had been earlier. Despite all the succulent entr\u00e9es on the menu, though, his choice reflected that of a typical teenager. \"I'll have a shrimp cocktail and then the burger and fries.\"\n\n\"Thank you, Sir.\" The server maintained a steady facial expression, but I could see him holding back an eye roll. He collected the menus and scurried away to put in our order.\n\n\"Now where were we? Yes ... tell me about those dates,\" I prompted, and he winced.\n\n\"I don't get it,\" he whined. \"All my friends say girls let them make out with them, even on first dates, but they don't let me do shit or they walk out on me.\"\n\n\"Think back to how you treated me when we first met. You were rude, arrogant, and condescending, not only to me but to our server. If you treat the girls you date like you treated me when we first met, it's no wonder you can't get anywhere with them.\"\n\nAgain, I had his attention.\n\n\"You're a good-looking guy, and I'm sure the girls you take out know your father has money. Girls love to date a guy with money, but when you act entitled and expect things from them you're not going to get anywhere. Does that make sense?\"\n\nHe looked down into his drink. It was pretty obvious that what I was saying was getting through to him and I actually started to feel sorry for the poor kid. I reached down and gently rubbed his thigh under the table in an attempt to stroke his bruised ego.\n\n\"It's a game, and you have to learn how to play by the rules, and the girls make the rules.\" I'm certainly not going to tell him that sometimes the guys make the rules; that's the last thing he needs to hear right now. \"It's called seduction,\" I told him. \"You have to persuade your date that she's going to enjoy doing things with you.\"\n\nHe shook his head, obviously at a loss. \"I ... I don't know how to do that,\" he said softly. \"I saw how my dad treated my mom before they divorced, and I see how he treats his new wife now, and ... I ... I don't know how to be any other way.\"\n\nHis statement shocked me a little. Edward had been nothing but a perfect gentleman with me and I'd enjoyed my time with him immensely. But I put those somewhat disturbing thoughts out of my mind and concentrated on the task at hand. At least he's admitted he has a problem, I thought to myself. That's a really good first step. Let's see where we can go from here.\n\n\"Would you like to learn how to do things differently?\" I asked him quietly.\n\nHe hesitated, then our eyes met. \"Yes, I would, I really would,\" he whispered.\n\n\"Okay, I think I can give you some ideas, and you can practice with me. How does that sound?\"\n\nMy salad and his appetizer arrived, and we ate in silence for a few seconds before he answered my question. \"That sounds great,\" he said with a big grin. \"I'd really like that.\" But just as I thought I was getting somewhere with this young man he took a step backwards.\n\nInstead of engaging me in conversation, he pulled out his cell phone and started scrolling through it between bites of shrimp. I cleared my throat to get his attention, which brought his focus back on me. When he looked up, I glared at his phone.\n\n\"What?\" he said irritably.\n\n\"When you're out on a date, the girl likes to be the center of attention,\" I somewhat politely scolded. Time to appeal to his base instincts. \"Are you more likely to get laid by me or that cell phone?\"\n\n\"I ... ummm ... I didn't know what else to say to you,\" he said defensively.\n\nI thought for a moment. \"What did I choose to wear for you this evening?\"\n\n\"A very sexy little black dress,\" he admitted shyly.\n\nThat brought a smile to my face. \"Do you like the way it looks on me?\"\n\n\"You're ... you know ... you're beautiful.\"\n\nI gently rubbed his thigh again. \"That's an excellent start, and no more cell phones during dinner, okay?\"\n\n\"Okay,\" he said sheepishly.\n\n\"Complimenting me on how I look in this dress is the quickest way to get me out of it ... okay?\"\n\nA big smile broke over his face. \"Okay.\"\n\n* * * * *\n\nWhile we continued our meal I led our conversation into various subjects that were dinner-table appropriate. I asked him about school and I described my current classes at UNLV. He told me about a girl he wanted to ask out but was reluctant because of all the rejections he'd experienced.\n\n\"She looks a lot like you, actually,\" he said as we were finishing our entr\u00e9es. \"You're prettier, of course, but she's blonde with great tits.\"\n\n\"The first part of that last sentence was a lovely compliment, and I thank you for it.\" He beamed, so I quickly cut him down. \"The second part was rude, crude, and obnoxious.\"\n\n\"Oh,\" he said. \"I meant ... well, shit ... I mean, shoot ... I mean, damn it ... what should I have said, then?\"\n\nAt least he's asking for help, I told myself. I know how teens talk, but he's got to learn to be more sophisticated. \"I know you intended to say something nice about her, but you have to be careful how you describe a girl you'd like to be with.\" I paused for a moment. \"If you spoke about me that way and I found out about it, your chances of doing something with me would be non-existent.\"\n\nHe looked down, so I softened my tone. \"I know guys talk like that when they're with their friends, but that word had better not come out of your mouth again when you're describing a girl you'd like to be with. You could've said, 'she's blonde and she has a nice figure.' I know young boys don't talk like that, but men who want to get laid do.\"\n\n\"I ... ummm ... I'm sorry.\"\n\n\"I was very flattered when you said I'm pretty.\"\n\nHe looked surprised, so I elaborated. \"That's the kind of thing we like to hear. Telling a girl you think she's pretty and giving her lots of compliments makes her want to be with you.\"\n\n\"Really?\"\n\n\"Of course. You haven't talked that way with the girls you've taken out, have you?\"\n\nHe looked down sheepishly. \"Ummm ... no ... I haven't.\"\n\nI'd made my point. \"We definitely need to work on your game.\"\n\n\"Yes ... ummm ... I guess we do.\"\n\n\"Do you want dessert?\" I asked.\n\n\"No, I'm stuffed. Let's get the check and head upstairs.\"\n\nHe seemed to be unsure how to get the waiter's attention, so I gave him a hint. \"Raise your hand and the server will come over,\" I suggested.\n\nHe raised his arm and the server immediately appeared. \"We won't be having dessert, may I get the check, please?\"\n\nHearing the words 'may' and 'please' come out of his mouth was gratifying. He's learning and maybe this won't be as bad as I thought. \n\nThe server brought the check in a leather folder that also contained a pen. \"My dad said to charge dinner to the room, but I don't know how much I should tip.\"\n\n\"Subtract the tax, then figure twenty-five percent,\" I told him. \"That's a little generous, but he did a very good job taking care of us.\"\n\n\"Okay.\" He worked out the math, wrote in the room number, and signed the tab. Then he stood, walked around the table, and pulled back my chair so I could rise.\n\nI smiled, leaned in, and whispered in his ear, \"That was very nice, you've been paying attention, and I think that entitles you to a nice reward.\"\n\nHe extended his arm again for me to take and we headed out of the restaurant. After stopping at the bell stand to retrieve my overnight bag we strolled across the lobby to the large bank of elevators.\n\n* * * * *\n\nWhen we got to the room he opened the door, gestured for me to enter, and then followed me. I wasn't surprised to learn that his father had gotten another Octavious mini-suite with an open door that led to the bedroom; there was a couch, with a coffee table in front of it and a table at either end, and a matching wing chair next to one of the end tables. After he closed and locked the door, we turned to face each other. I tilted my face up to kiss him, and suddenly he was all over me. He put one hand on my ass to pull me closer, his other hand moved to my breast, which he roughly pawed, and then he leaned in and attempted to jab his tongue into my mouth.\n\nI put both of my hands on his chest and pushed him away, then took a step back. \"What the fuck was that?\"\n\n\"I ... ummm ...\"\n\n\"That is not how you treat a woman you're about to sleep with, I said angrily.\n\nIn all honesty, his clumsy attempt was turning me on, and I could feel the wetness begin to build between my legs, but that wasn't the lesson he needed to learn. \"Most girls, and especially young girls your age, feel like they're giving a guy they care about a gift when they have sex with them.\"\n\nHe shot me a dumbfounded look and I tried to think of another way to proceed. \"Let me put it another way: most women are like ovens, they need time to heat up. On the other hand, men are like microwaves, in thirty seconds they're ready to go. Does that make sense?\"\n\n\"Yeah ... ummm ... I think so.\"\n\n\"Think of it like this, patience is a virtue,\" I said sharply.\n\nI'd put him on the defensive, and he responded aggressively. \"You said most girls--\"\n\nI interrupted him. \"If a girl wants a guy to play rough with her she'll let him know that. I'm willing to bet you acted that way on your dates and that's why you got rejected; do you think I'm right?\"\n\n\"Yeah, you probably are,\" he said resignedly.\n\n\"You'll get a lot further by playing nice until a girl tells you she wants something different.\"\n\n\"Can you show me what you mean by playing nice?\"\n\nI thought for a moment. \"I'd love to teach you how to kiss; would you like that?\" I said seductively.\n\nThat brightened his disposition considerably. I took his hand and led him over to the couch. After we sat down, we turned and faced each other, and I put my hand on his cheek.\n\n\"Now remember, the key is to have patience and respect. Let the girl signal when she's ready to move forward. The more respect you show for her boundaries, the more likely she is to relax those boundaries and let you go further, okay?\"\n\nHe nodded and I put my closed lips against his. He pressed against them, but only lightly, and I was glad to see he kept his hands to himself. After about ten seconds, I parted my lips slightly.\n\n\"Was that a signal?\" he asked anxiously.\n\n\"Yes, it was,\" I replied. \"You can respond if you'd like to, and you can put your hands on me lightly, but only at my waist, not in any intimate areas.\"\n\n\"Okay,\" he whispered.\n\nI kissed him again, this time with my lips parted, and he responded by very gently sliding his tongue past them and into my mouth. When I let my tongue greet his, he became a little more assertive, but not in a bad way, and he put his hands on my back and began to gently rub. After about thirty seconds I pulled back.\n\n\"That was really nice.\"\n\n\"It was fuckin' awesome, I love kissing you,\" he said exuberantly.\n\n\"I'm glad you liked it, but remember to watch your language, okay?\" I said gently.\n\n\"Oh ... yeah ... I'm sorry.\"\n\n\"It's okay; are you ready for the next step?\"\n\n\"Oh, yeah,\" he said eagerly. \"What's next?\"\n\n\"You need to learn to read a girl's other signals. You let her lead and you respond, okay?\"\n\n\"I think so.\"\n\n\"Let's try,\" I said. \"Kiss me and we'll go from there.\"\n\nI let him initiate the next kiss, and he did well, waiting until I opened my lips before sliding his tongue forward. I reached up and put my hand behind his head to pull his mouth tighter against mine, and he responded by putting his hands directly on my hips and moving them around. I leaned forward and pressed my breasts against his chest, and he again responded appropriately, moving his hands from my hips to my butt and pulling me closer to him. By that time we were both breathing more heavily, but I waited until he ended the kiss.\n\n\"God, that was amazing,\" he exclaimed. \"Thanks, Elisa.\"\n\n\"You're welcome, and I liked that, you thanking me; a girl likes to be appreciated.\"\n\n\"So do I get another reward?\" he said with a devilish grin.\n\n\"Yes, you do; are you ready for the next signal?\"\n\n\"You bet.\"\n\nI loved how his confidence was building as we progressed. \"Okay, practice will help you remember what you've learned, so we're going to repeat what you've already done and then move on from there.\"\n\nHe initiated another kiss and we went through the initial motions we'd practiced together. Then I moved my other hand and started caressing his chest, first holding it still and then moving it in slow circles centered on the slight swelling around his nipple. He hesitated, then slowly moved one hand from my hip and put it on my breast. I felt his fingers close gently around it and he stayed in that position, not mimicking my hand's movements.",
        "Now he's nervous, I thought to myself, so I've got to help him. I brought my other hand down and placed it over his, then started pushing his hand around on my breast. It was an unusual situation, teaching a guy how to touch a girl. Nonetheless, my body reacted and my nipple hardened under my dress as his palm slid over it.\n\nI lifted my mouth away from him just far enough to whisper, \"Did you feel that?\"\n\n\"Oh, God, yes,\" he whispered back.\n\n\"You did great and my body responded to you. How do you feel right now?\"\n\n\"I feel like I've died and gone to heaven,\" he answered sincerely. \"I can't believe it; you feel so ... amazing ... you're beautiful, and you're a great teacher, and ... it's just ... the greatest feeling in the world.\"\n\nI had to smile at that. \"Thank you again, baby. You don't really know what amazing is yet, but if you keep progressing like this you're going to find out.\"\n\n\"I sure hope so,\" he said with a smile.\n\nHe really was a thoughtful kid when he made the effort, and I was beginning to have more difficulty keeping my own sexual desires under control as his lessons progressed. But I had to bring more reality into the conversation.\n\n\"Just understand we're moving fast here. Everything you're learning from me isn't going to happen on a first date, or even a second date. Remember what I said about needing to be patient. You have to build up a girl's confidence in your respect for her and also your discretion; you can't brag about how far you've gotten with a girl or you'll never get that far again, with her or any other girl she knows.\"\n\n\"Maybe so ... but the guys at school all talk about which girls put out and that kinda stuff.\"\n\nI knew he was right and I knew high-school guys talked like that about girls because I was one of the girls they used to talk about.\n\n\"That's true, but if you're smart you'll just listen to them and smile knowingly. Pay attention to how many of them actually have steady girlfriends, how long it takes them to start bragging about how far they got, and how many dates they have with that girl after they start revealing that personal information about her.\"\n\nThat got him to stop and think before he responded. \"I never paid any attention to any of that,\" he said slowly. \"But you're right; some of them start dating a different girl right after they brag about scoring.\"\n\n\"Now you know why,\" I told him. \"A girl finds out a guy's been talking behind her back and she stops going out with him.\"\n\n\"I see that now,\" he said.\n\n\"Along with patience, discretion is another virtue you should cultivate. If you do, you're going to be very happy with some girl after a few dates.\"\n\n\"I'm sure you're right about that,\" he replied with another grin. \"Now how about some more lessons?\"\n\n* * * * *\n\nI reached over and toyed with the first button on his polo that wasn't already open. I slowly opened it and ran my forefinger down the gap in his shirt until it hit the next button. I opened that one also, and then I leaned in and kissed his bare chest, letting my tongue slide lightly over his skin. Next I used my lips to push his shirt aside so I could lick his nipple, and he inhaled deeply. I pressed my lips to his and he kissed me back with enthusiasm.\n\n\"Did you get a new signal?\" I cooed.\n\n\"I think so,\" he whispered back. \"But I'm really nervous, I've never touched a girl's .... ummm ... breast before.\"\n\nHe's learning. It was refreshing to not hear him use the 'T' word again. \"There's a first time for everything,\" I said softly. \"Go ahead.\"\n\nHe slipped his hand inside the top of my dress and gently cupped my breast. Gradually, his fingers moved to my nipple, which produced a delicious little tingle when his palm slid across it. He stayed still, apparently just enjoying the sensation, and I decided to help him along. I dipped my shoulder and moved closer to him so the strap of my dress fell down my arm and my breast was exposed. He stayed in that position, so I put my hands on his chest and moved them around in circles, hoping he would take the hint, and after a few seconds he did. He moved his hand in slow circles on my breast and then pushed the other shoulder strap so the top of my dress fell around my waist and my breasts were fully exposed.\n\n\"God, you're beautiful,\" he gushed. \"You look just like a girl from one of my ... you know ... magazines.\"\n\nThat brought a little smile to my face. I moved in and sucked lightly on his nipple, and again he took the hint. When I backed away, he leaned forward, took one of my nipples between his lips, and played with the other one. I let out a little moan and put my hand behind his head, pulling his mouth into my breast to encourage him further. He swirled his tongue around my nipple and I let out another little moan. This extended foreplay was definitely turning me on. Even though I knew this was supposed to be all for his benefit I was starting to want things to move along more quickly. I moved my fingers along his thigh and up to the bulge in his pants and I gently began to rub.\n\n\"Well ... what have we here?\" I said playfully.\n\nHis face turned into a bright red ember. \"It's ... ummm ... my ... ummm ... \"\n\nI gave him another slow open-mouth kiss. \"Don't be embarrassed, baby, it's a natural reaction to everything we've been doing.\"\n\n\"This is the ... ummm .... the furthest I've ... ummm ... ever .... ummm ... gotten .... you know ... and it just feels so good.\"\n\n\"You're making me feel good too and you're reading my signals perfectly.\"\n\n\"Thank you, but it's ... ummm ... really hard to be patient.\"\n\n\"It's hard, all right,\" I said with a little giggle. \"Do you need relief? Do you masturbate?\"\n\nHe blushed again. \"I do ... you know ... jerk off sometimes, after a frustrating date, and yes, it's becoming pretty ... ummm ... uncomfortable.\"\n\nI felt sorry for the poor guy. He'd been really good about going slowly with me. \"Would you like me to help you relieve some of the stress?\"\n\nHis eyes got wide. \"What do you mean?\"\n\n\"I mean I'm offering to help relieve some of that pressure, if you want me to.\"\n\n\"Oh,\" he said, and suddenly he looked shy.\n\n\"When you've been polite and respectful to a girl she may want to do this for you.\" I unzipped his pants, reached into his boxers, and pulled out his cock. I noted that he wasn't quite as long and thick as his father, but he was still way above average. He had a nice big mushroom-shaped head that already had a little pre-cum coating oozing out of the tip. \"This is nice ... very nice,\" I cooed, which seemed to relax him a bit.\n\nI gripped him firmly at the base and stroked his length. Immediately, he tensed up. \"I'm kind of ... close, Elisa.\"\n\n\"Okay, let's not make a mess on your clothes,\" I replied. \"Lift your bottom up and let's get you out of these pants.\"\n\nOnce I got his pants and boxers off I began stroking him again. Instantly, his cocked twitched in my hand. Teaching him, kissing him, and feeling him was really turning me on. My pussy was already very wet and I knew I'd soaked my little thong all the way through. I stroked him with one hand and cupped his balls with my other hand, and that's all it took.\n\n\"Oh, God,\" he moaned, and then thick ropes of semen shot up like a fountain. Spurt after thick spurt landed all over his belly and a couple of shots at the end covered my hand. I really wanted to take his cock into my mouth, to taste his cum and swallow it, but I knew it was too soon for that. So when he finished coming I took my hands off of him and headed for the bathroom.\n\n\"I'll be right back,\" I said over my shoulder. \"Just relax and wait for me.\"\n\n\"Okay,\" he said meekly, and he slumped back into the cushions on the couch.\n\nIn the bathroom, I turned on the hot water, and then I couldn't resist; I licked some of his cum off my palm and then stuck my sticky fingers in my mouth so I could taste more of it. He tasted so good; my pussy tingled again and I knew I was going to have him come in my mouth before his training was over. Then I washed my hand and wet a washcloth to take back to the bedroom and clean him up.\n\nI knelt on the floor between his open legs. \"Did you like that?\" I asked as I wiped up the cum from his cock and balls.\n\n\"Oh, yeah,\" he said exuberantly. \"That was fantastic; it was great to not have to do it myself.\"\n\n\"I'm glad you enjoyed it.\" As I wiped the remaining semen from his chest, I said, \"Now it's time for you to learn how to give pleasure, not just get it, okay?\"\n\nHis face broke into a big smile. \"Okay.\"\n\nWhen I'd finished cleaning him up I told him to finish getting undressed. He quickly took off his shirt, shoes, and socks. Once he was naked, I took his hand and led him into the bedroom. When we got there, I took off my dress and lay on the bed face up wearing only my thong and my heels. His eyes lustfully roamed up and down my body.\n\n\"God ... you look ... just amazing,\" he gushed.\n\nI seductively ran my hand over my breasts, teasing him a little. \"Not too bad, huh?\" I said in my best sex-kitten voice.\n\n\"You look ... God ... I don't know ... like a model.\"\n\n\"Thank you, baby, now come here,\" I invited, patting the bed, and he stretched out on his side next to me. I took his middle finger and put it on the front of my thong. \"Do you feel how wet I am? This is what happens when a girl is turned on.\"\n\nHis eyes were glued between my legs. \"God, you feel so warm, this is just amazing.\"\n\n\"Pay attention, this is important,\" I said somewhat more sternly, and his eyes focused back on mine.\n\n\"Very gently, take off my thong and I'll show you a few things.\"\n\nHe slid his fingers underneath the tiny elastic bands and I lifted my bottom off the bed so he could slide it down my thighs and he tossed it on the floor. He was staring raptly at my smooth, bare pussy, and I touched it with both hands.\n\n\"These are my outer lips.\" I pulled them apart to expose the inside of my vulva. I pointed with my forefingers. \"These are my inner lips.\" I moved one finger. \"Can you tell me where my clitoris is?\"\n\nHe shot me a bewildered expression, which answered my question.\n\n\"See this little nub right here?\"\n\nHe lit up. \"Yes, I see it!\"\n\n\"When I'm aroused, it gets hard, just like a man's penis.\"\n\n\"I had no idea how any of this works,\" he whispered. \"Is this ... you know ... turning you on?\"\n\nI broke into a little smile. \"Do you see this?\" I ran the tip of my finger through the copious amount of liquid that was seeping out of my vagina.\n\n\"Yes ... I ... I ... see it.\"\n\nThe look on his face was priceless. \"That means I love what you're doing.\"\n\n\"God, this is just ... just ... incredible.\"\n\n\"Are you ready to do more?\" I was having a difficult time keeping my patience because I was more than ready to continue.\n\n\"Oh ... yes ... please ...\"\n\nI took his middle finger and rested it on my slit. \"Slide your finger, very gently, between my lips,\" I directed. \"Move it up and down and very slowly bring it between them.\" He followed my instructions and ran his finger through my sticky wetness.\n\n\"This is just so fuckin' cool.\"\n\nHe was so into it I decided to let his little faux pas slide and continued my instruction. \"That's right ... very gently ... only light pressure ... you're doing great.\"\n\n\"I think you're getting even wetter, it's seeping out of you now.\"\n\nLittle earthquakes were rumbling in the pit of my stomach and it was getting increasingly difficult to focus. \"Now slide a finger into me ... very gently.\" I was starting to feel dizzy and my breath was becoming short and ragged.\n\n\"My finger is soaked,\" he said in awe.\n\nIt felt like I was slipping in and out of consciousness. \"Now add another finger, open me up wider and push them further inside me.\"\n\nHis expression told me he was awestruck by what he was doing. \"Are you enjoying this?\" I asked between little sips of breath.\n\n\"It's amazing,\" he said softly. \"You're amazing.\"\n\nAgain I willed my hazy mind to focus. \"Now comes the best part. You remember what it felt like when I touched you and you came, right?\"\n\n\"Of course,\" he replied.\n\n\"Okay, it's time for you to return the favor. Slide your fingers up all the way inside me and then work them slowly in and out, use your thumb to lightly rub my clit, and watch what happens.\"\n\nDespite having been in a clinical teaching mode, I was more than ready to come. I didn't want to scare him, so I kept my lips tightly closed to prevent any cries of passion that he might misinterpret, but when he started rubbing my clit I went quickly to the very edge. \"Keep going,\" I whispered, \"I'm almost there ... a little harder now ... just like that ... keep going ...\" my body shook uncontrollably as I went over the cliff.\n\nWhen I started to come back around, he was grinning from ear to ear and was obviously very excited. \"Holy shit, that was incredible.\"\n\nWhen I'd caught my breath and my breathing had returned to normal, I complimented him because I wanted to continue building his confidence. \"It was really great, I loved it,\" I gushed. In reality, it wasn't the most powerful orgasm I'd ever had, not even close, but it obviously had a powerful effect on him.\n\n\"It was just amazing.\"\n\n\"In the future, I need you to remember,\" I said in a somewhat more forceful tone, \"a girl with less experience is probably going to be tighter than me, so you want to be very gentle and careful. Are you ready to take things a little further?\"\n\n\"Of course, I want to do everything with you.\"\n\nI slowly dipped my fingers inside my pussy lips and held them up in front of him. \"Taste me.\" I moved my fingers toward him and he opened his mouth to take them in. He moved his tongue around them and then started to suck my secretions.\n\n\"God ... you taste ... it's just amazing.\"\n\n\"Would you like more?\"\n\n\"I'd love that.\"\n\n\"C'mon, let's get more comfortable.\" I propped up a couple of pillows against the headboard, rested my head on them, and opened my long legs wide for him. He didn't need any more hints. He slid between my legs and extended his tongue.\n\n\"Remember, go slow, not too hard,\" I cautioned.\n\nHe looked up at my face and I smiled to encourage him, not that he really needed it. He used the tip of his tongue and licked up and down my swollen lips, which sent tingles through my body.\n\n\"Yeah, that feels really good, baby, just like that.\"\n\nHe seemed to be improvising, experimenting, and gauging my reaction to everything he did. \"Now put your tongue inside me,\" I moaned through little pants of breath.\n\nHe gently worked his tongue in and out of me, slowly licking the walls of my vagina. Instinctively, I began slowly rotating my hips on his mouth and grinding my pussy harder into his face.\n\n\"Yeah ... just like that ... keep your tongue long and flat ... that feels so good,\" I moaned. I ran my hand through his hair, pulled his mouth harder into me, and ground my pussy onto his tongue. I was gasping and moaning and my juices were flowing freely. There were loud slurping sounds emanating from between my legs as he pushed me closer to going over the edge.\n\n\"My clit ... now lick my clit, baby,\" I panted.\n\nI was grinding my pelvis so hard into him that he wrapped his hands around my thighs to hold me somewhat still and then he locked his lips around my clit. He flicked his tongue over it and I exploded. When I became too sensitive to continue and pushed his head away, I held it and caressed his cheek to let him know I wasn't upset.\n\n\"That was awesome,\" he whispered.\n\n\"You were great, that was wonderful,\" I assured him. \"But remember how I cleaned you up?\" He nodded. \"It's time for you to do the same for me.\"\n\n\"Oh ... ummm ... okay,\" he mumbled. Before I could stop him he got out of bed and went to the bathroom. He must have washed his face while he was in there, because I couldn't see any traces of my copious juices on him when he returned, but he'd brought back a warm cloth, presumably to clean me up.\n\n\"I'll tell you a secret,\" I said as he sat down beside me. \"It's a lot sexier to clean me up with your mouth; would you like to do that?\"\n\nHis face broke into a big smile. \"Oh, I'd love that.\" I opened my legs again and he spent the next minute or so licking the secretions from my pussy lips and the inside of my thighs. Once he'd completed his little task, my instruction continued.\n\n\"You're really great at that. A lot of guys won't go down on a girl and you did it very well for your first time.\" I paused, thinking of what I'd told myself in the bathroom only a few minutes earlier, and I decided he deserved an even bigger reward. \"When you give a girl that kind of pleasure she's going to want to do the same thing for you. Would you like me to do that?\" I said demurely.\n\n\"Oh, God, I'd love that,\" he answered. \"Is that what guys at school are talking about when they say they got a blow job from a girl?\"\n\n\"Yes, baby, and I want to do that for you.\"\n\nI honestly had no idea where that term came from but I knew guys always used it. I always found it odd because the term blow job actually refers to sucking rather than blowing.\n\n\"Now sit on the edge of the bed for me,\" I said playfully. I knew what would give him a great visual, so I knelt in front of him wearing only my heels.\n\nHe was a young boy, so even though he'd come only a few minutes ago I knew it would be easy for me to get him hard again. I took him into my hand and gave him a couple of strokes, and almost instantly he was fully erect. I looked up and our eyes met. I licked my lips and took the head of his cock into my mouth. I swirled my tongue around it and I heard him moan.\n\n\"Oh ... God ... that's ... that's ... unbelievable,\" he whispered.\n\nI moved forward until I had about half of his length in my mouth, then tightened my lips to create suction and slowly moved back until only the head was still inside. Then I started bobbing my head up and down, taking a little more of him in each time. I glanced up at him, and his eyes were tightly closed and his fists were white-knuckled in the covers. It was as if he was afraid of falling off the Earth. His breathing became more ragged and shallow, and I relaxed my throat and took him all the way down; after taking his father this was easy. I held him there for several seconds, lightly rubbing my nose against his bushy pubic hair. I took him out of my throat so the head of his cock was against the back of my mouth and I looked up at him again.\n\n\"I ...\" he croaked, \"I ... had no idea ... anything could feel ... this good ... I can't believe ... how great this feels ...\"\n\nI resumed bobbing on his cock and taking him all the way down to the root. I pushed down and pulled up, keeping my mouth warm, wet, and tight while increasing the suction for him. He was mumbling and muttering in rhythm with my movements, and then he shouted, \"Oh ... God ... I ... I ... I can't hold it back ...\"\n\nI quickly pulled back so only the head of his cock was between my lips and I waited. His first shot was a big one, and I swallowed that thick initial rope and then kept sucking and swallowing as spurt after spurt filled my mouth. He was moaning incoherently, and I kept sucking and swallowing until he was spent. I held the last small dribbles, looked up again and made eye contact, and opened my mouth to show him the last few drops on my tongue. I shot him a smile, took a little breath, and let him watch as I swallowed one last time.\n\nHe put his hands on my upper arms, and as he stood up he pulled me to my feet. Then, taking me by surprise, he pulled me to him. I kept my lips closed, but his probing tongue was insistent, so I put my arms around his neck, pressed my body against his, opened my mouth, and kissed him back enthusiastically. When he broke the kiss, I whispered, \"Thank you.\"\n\nIt was his turn to be surprised. \"Why are you thanking me? I should be thanking you, God, I loved that.\"",
        "\"A lot of guys won't kiss a girl ... you know ... after she ... they're not willing to--\"\n\n\"Willing?\" he interrupted. \"I'd be willing to spend the rest of my life kissing you.\"\n\n\"That's really sweet,\" I told him. \"Kissing me like that shows respect and appreciation, and it made me feel very good about being with you. If you treat your dates the way you've just treated me they're going to want to do, you know ... this ... with you.\n\nHe smiled at that, so I continued, \"Let's go sit on the couch, have something to drink, and take a little break. I have a few more things to teach you before the night is over.\"\n\n\"I'd really love that, Elisa.\"\n\nHe took the guest robes the hotel provided out of the closet and gallantly held one for me to slip into. After he put on his own, he took my hand and led me back to the living room of the suite.\n\n* * * * *\n\nWe sat, sipping bottled water. He was still very excited and couldn't stop praising me and thanking me for everything I'd been teaching him. I finally put my forefinger across his lips.\n\n\"Baby, it's okay. I love doing everything with you,\" I said gently.\n\n\"Oh ... I'm ... I'm ... sorry. I didn't mean to ... you know ...\"\n\n\"Really, it's fine.\"\n\nHe paused for a moment and I could tell he was thinking about something serious. \"Can I ask you something?\" he said hesitantly.\n\n\"You can ask me anything.\"\n\n\"I don't want to upset you ... but ... do you enjoy ... you know ... seeing different guys and ... you know ...\"\n\nI could see where he was going with this, and at first I wasn't sure how to reply. However, he was being polite and respectful, and I thought he deserved an answer.\n\n\"College is very expensive and not everyone has the money that your father does. Does that make sense?\"\n\n\"Yes, it does,\" he said solemnly.\n\n\"There are times when I wish there was another way for me to be able to afford school, but I'm making my way, being independent, and living life on my terms.\"\n\n\"You're ... you know ... special.\"\n\n\"Aww, thank you, baby,\" I purred. \"And this job also allows me to meet sweet guys like you.\"\n\nI leaned in and we exchanged a soft, gentle kiss. \"Now, are you ready to learn more?\" I said playfully.\n\n\"Oh, yeah, I sure am,\" he said enthusiastically.\n\n\"Why don't you go back into the bedroom and I'll go change into something I'm sure you'll like,\" I said seductively.\n\nA big smile broke over his face. \"Okay,\" he said, and he scurried off into the bedroom.\n\nI grabbed my overnight bag, went into the bathroom, took off my bathrobe, and took out a short, sexy, baby-doll-style nightie and put it on. He's sure to like this.\n\nWhen I entered the bedroom his hungry eyes drank me in. \"So, what do you think?\" I said playfully.\n\n\"It's ... you ... you look amazing,\" he gushed.\n\n\"I'm glad you like it, honey, are you ready for more?\"\n\n\"You know I am.\"\n\n\"Let's pretend we're just getting started and you need to warm me up,\" I said with a little grin. \"This is called foreplay and I want you to show me everything you've learned.\"\n\nI lay on my side and smiled up at him, and he took the hint. He quickly took off his robe, stretched out beside me, put one arm under my head, and leaned in to kiss me, lightly at first but then more assertively. I snuggled up into him and put my hand on his chest; he got the message and slipped his hand under my nightie to caress my breasts.\n\nWe exchanged a few deep kisses while he ran his hands over my breasts and it didn't take long before I was getting wet. My education was paying off and he was quickly becoming a competent lover, and my body was responding to him accordingly. I reached for his cock and he slid his fingers over the lips of my vagina. He was fully erect and ready to go, so I rolled onto my back, slipped off the nightie, spread my legs wide, and beckoned to him. When he moved on top of me, I started his next lesson.\n\n\"When a girl gets aroused she still wants to be able to breathe. So unless she tells you she wants to feel your weight on her, you should support your upper body on your hands, not on her, okay?\"\n\nHe immediately raised himself up, which took his weight off of me. \"Oh ... ummm ... okay ... I'm sorry.\n\n\"It's okay, baby,\" I said gently.\n\nI guided his erection to my aperture. \"Start slowly, and push gently. Read my facial expressions and keep going slow. Your lover will let you know when she's ready for more.\" We looked into each other's eyes as he slowly and carefully entered me. Once he was part-way in, he stopped to savor the sensations.\n\n\"Jesus, you feel so tight ... it feels so fuckin' good,\" he said huskily.\n\n\"Watch your language, baby,\" I said, gently chiding him again.\n\n\"Oh ... I'm ... I'm sorry. You're so wet but still hugging me, like a glove.\"\n\n\"When a girl is ready to take you inside her, this is what it'll feel like.\" I also wanted to add a word of caution. \"Just remember to be gentle and go slow at first; you're bigger than a lot of guys and you don't want to hurt who you're with, okay?\" Unless she wants you to, I didn't add.\n\n\"I'm bigger than some guys?\" he asked, and there was a hint of pride in his voice.\n\n\"You're bigger than a lot of the guys I've seen, and that's all the more reason to be careful, okay?\"\n\n\"Oh ... ummm ... okay.\"\n\n\"Keep going, baby, keep going inside me,\" I cooed.\n\nHe pulled back just a fraction of an inch and then eased himself forward. His cock felt really good and I could feel him simultaneously opening and filling me. I put my hands on his shoulders. \"Yeah, just like that, you're doing great,\" I said encouragingly.\n\nHe pushed forward, making slow and steady progress until our bodies rested together and his entire length was buried inside me. He remained motionless for several seconds while we both enjoyed the sensation. \"Now very slowly move in and out; you'll know when to go faster.\"\n\nJust as I'd instructed, he began to move his pelvis slowly back and then leisurely forward. After a few strokes his breathing was becoming increasingly ragged. \"God ... you're so tight ... I can't believe how good this feels.\"\n\nHis excitement was contagious. I'd never been a boy's 'first' before, and I was thrilled at his reactions. My pussy felt like a warm, wet swamp and my juices escaped and ran down to my ass crack when he pulled back, and the feel of that liquid evidence of my arousal inflamed my passion. \"Yeah, baby, just like that, nice and slow, let me feel it,\" I moaned.\n\nI pulled him down on top of me and we moved in perfect unison. I wrapped my long legs around him and moved underneath him, pushing my pelvis up to meet his thrusts.\n\n\"This is phenomenal, I've never felt anything like this ... do you really like what I'm doing?\"\n\n\"It's absolutely fantastic,\" I replied with only a little exaggeration. \"You're going to make me come, keep going.\"\n\nHis thick cock was perfectly rubbing my clit, and I put my hands on his shoulders and pulled him toward me as he pushed in. He took that as a signal and he began moving faster, and his belly slapped against mine as he picked up the pace. I crossed my ankles behind his back, and when he put one hand on my breast and then flicked his finger against my nipple I came. It was only a small one, but he noticed and he stopped moving.\n\n\"Don't stop,\" I whispered. \"A lot of girls can come more than once if you can hold off your orgasm.\"\n\nHe swelled up with obvious pride, grinning widely, and his thrusts resumed. I could feel my next orgasm begin to build, but I also heard his breathing begin to change and I knew he was getting close as well. I decided to slow things down and continue my instruction.\n\n\"Let's change positions,\" I said. \"Pull out and let me turn over.\"\n\nHe complied, and I got on my hands and knees. \"Now get yourself back into me, boy,\" I said playfully as I wiggled my ass at him. That's all it took. I felt his cock-head probing against the lips of my vagina and then he slipped back inside me. A few seconds later, he placed his hands on my hips and began slowly moving in and out of me.\n\n\"You're even tighter this way,\" he moaned, \"and it feels like I'm in even deeper.\"\n\n\"Do you like it this way?\" I knew that was a dumb question, but I wanted to hear his response.\n\n\"God, yes, it's fu--\"\n\n\"That's okay, after a girl has let you get this far it's probably okay to say whatever you're feeling.\"\n\nHe laughed. \"In that case, it's fucking unreal,\" he told me jubilantly.\n\nI had to admit, he did feel bigger in this position. His thick cock felt amazing and I wanted more of it. \"Okay, give it to me harder now, make me feel it.\"\n\nHe picked up the pace, but his enthusiasm got the best of him. He pulled back too far and slid out of me, and when he tried to push himself back in the head of his cock touched my asshole instead.\n\n\"Ummm ... no ...\" I teased, \"that's something for another time. Get back in my pussy, honey.\"\n\nI felt the head of his cock split my lips and he was back inside me again. Only a couple of strokes later he made another smart move. He reached around and rubbed my clit. I was already close, and my orgasm began to build.\n\n\"Oh, God, yeah, just like that,\" I moaned. \"Just a little more.\" I tightened the muscles in my vagina, squeezing and milking his cock.\n\n\"I can't ... I ... I can't hold it.\"\n\nHe was slamming into me at a fevered pace and I was pushing back against him, meeting each hard thrust. Just as I felt his thick spurts squirt inside me, my body convulsed and shook as my orgasm overwhelmed me. I collapsed onto the bed, still coming, and Ed fell on top of me, still spurting. We gradually slowed our breathing and he rolled off to lie on his back beside me. I slid over and lay on my side, my breast pressed against his rib cage, and I kissed his cheek.\n\n\"So your first time was okay?\" I said demurely.\n\n\"That was the most amazing thing I've ever done.\" he gushed. \"You really liked what I did?\"\n\n\"It was wonderful, baby, I loved it.\" I paused for a moment in reflection. \"When you rubbed my clit it really set me off.\" To be honest, it was an advanced move that I hadn't expected from a beginner like him.\n\n\"You get off so easily. I mean ... I can jerk off more than once, but are your orgasms real?\"\n\nI broke into a little smile. \"I haven't been faking anything; you're a great lover, and my body has been responding to everything you've done.\"\n\nHe looked even more pleased, and I silently congratulated myself on how far I'd brought him in the short time we'd been together.\n\n* * * * *\n\nMy body was sticky with our combined sweat, so a couple of minutes later I suggested another idea I was sure he'd like. \"We're both kinda stinky,\" I said playfully. \"How about taking a shower with me?\"\n\n\"Oh, I'd really like that.\"\n\nWe got out of the bed, and as he headed for the bathroom I unbuckled the ankle straps and set my shoes aside, grabbed my overnight bag, and followed him. He'd already turned on the water, gotten the temperature adjusted, and was waiting for me. I stepped into the shower and he seemed unsure whether I'd meant we would shower together, so I smiled and motioned for him to join me.\n\nWe were in the shower for quite a while, kissing and fondling as we soaped and rinsed each other's body. He was definitely getting the hang of things; I was very turned on by the time we finally shut off the water and then dried each other with the big, thick towels the hotel provided. The movements of the soft, lush material became increasingly erotic, and both he and I were flushed with increasing signs of arousal.\n\n\"Why don't you go get into bed, and I'll join you in a few minutes.\"\n\nOnce he'd left the bathroom, I grabbed an enema out of my overnight bag and repeated the clean-out routine I'd done before the date. What his father had paid for included teaching Ed about anal sex, but it had been several hours since my previous prep and it was always better to be squeaky clean down there.\n\nWhen I returned to the bedroom, he was sitting on the edge of the bed waiting for me. Judging by the erection that was standing proudly off his body he was clearly ready for more. I was fairly certain I knew the answer to my next question, but I decided to ask him anyway.\n\n\"Are you ready for one more lesson before we call it a night and get some sleep?\"\n\n\"Oh, yeah,\" he said enthusiastically. I grabbed my overnight bag and pulled out a bottle of Astroglide.\n\nHis eyes got wide. \"What's that for? You haven't had any trouble getting wet so far.\"\n\n\"Well, baby, I have one more opening for you to explore, and that one doesn't get wet like my vagina.\"\n\nHe looked puzzled for a few seconds, and then the flashbulb went off. \"Whoa, you mean ...\" he paused, not knowing how to say it, then blurted out, \"... wait, you mean ... like ... your ass?\"\n\n\"Yes, anal sex, baby, would you like that?\" I said seductively. I figured if we were going to do it, he'd better learn to say it properly.\n\n\"I've ... ummm ... you know ... heard my friends talk about wanting to try it, but none of their girlfriends were ... you know ... willing to do it.\"\n\n\"It's something I never did in high school,\" I admitted, \"and it has to be done correctly. Some girls who try it and have a bad experience never try it again,\" I said in a more forceful tone. \"Anal sex is about trust, a girl has to trust the guy she's with; does that make sense?\"\n\n\"Yes, it does,\" he said sheepishly.\n\n\"If you're lucky, you may find a girl who really likes it.\" I almost added, like me, because it turns me on to submit to a man's dominance, but I caught myself in time.\n\n\"I can understand that, about trust, I mean. That's a very private part of the body.\"\n\n\"So ... are you ready to try this?\"\n\n\"More than ready,\" he deadpanned back.\n\n\"You're going to love this, I promise.\"\n\n\"How do we get started?\"\n\nI got onto the center of the bed on my hands and knees and opened my legs wide. He quickly got behind me and I handed him the bottle of lube.\n\n\"Squirt some of that on your finger and on my bottom.\"\n\nHe followed my direction. His finger was coated with lube and he squirted so much on my asshole I could feel the cool, crisp liquid run down into my vagina. \"I think you got enough there,\" I said teasingly.\n\n\"I ... I ... I'm just afraid of hurting you.\"\n\n\"You won't, I promise, you're going to be great at this,\" I said encouragingly. I could tell my earlier speech on safety and trust had all but destroyed his confidence and I needed to build him back up again. \"Now very, very slowly, work the tip of your finger inside me.\"\n\nA little shiver coursed through my body when the tip of his finger entered me. I could also feel my pussy start to heat up and build a bit of moisture. \"Now just a little deeper.\" Another inch of his finger slipped inside me, past my tight little ring, and I let out a little moan.\n\nHe froze up and stopped. \"Are you okay?\"\n\n\"I'm fine, baby, it feels great, just a little more.\" He continued to make slow, steady progress opening me until his finger was buried inside me. \"Now work it in and out.\" He spent the next minute or so rotating his finger back and forth. My vagina was soaked and my secretions were running down the inside of my thighs. Taking me a bit by surprise, he ran his other finger through the little stream of liquid and then sucked it off his fingers. I looked back and gave him a little smile.\n\n\"I can't help it, I love how you taste.\"\n\nWe shared a big smile.\n\n\"Okay, let's try two fingers now, use some more of the lube.\"\n\nHe squirted another large dollop on two of his fingers and slowly began to work them in. \"Yeah, just like that, nice and slow.\" I could feel his fingers opening me up, getting me ready. My pussy felt like it was on fire and I needed a little relief. \"This is a bit of an advanced move, but use your other hand and rub my clit.\" My earlier training paid off; he instantly found my clit and used the tips of his fingers to gently manipulate it. \"Yeah, just like that, it feels so good,\" I moaned.\n\nAs he continued to work his fingers deeper inside my rectum, he simultaneously rubbed my clit and my body began to climb. \"Just a little bit more,\" I grunted. I felt his fingers bottom out in my asshole; he slowly worked them in and out a bit faster and my body convulsed as a powerful orgasm rocked my body. When he could tell I was there, he expertly withdrew his fingers from my clit just like I'd taught him, but he kept both of his fingers buried inside my tight little hole.\n\n\"God, that was amazing,\" I said while still attempting to catch my breath. I loved the look on his face. I knew he felt so proud, so accomplished.\n\n\"I love doing this with you,\" he said shyly.\n\n\"I love it too, are you ready for more?\"\n\n\"I am.\"\n\n\"Very slowly and very gently,\" I said more sternly. \"Remember what I said about how big you are.\"\n\nHe got behind me, and I took a deep breath and tried to relax. I felt the tip of his cock push against my asshole, and then he eased forward and his large mushroom head popped inside me. \"Yeah, just like, honey, it feels good.\" A few drops of his sweat dripped onto my back, which only added to the hedonistic moment.\n\nDisplaying a patience that was quite unexpected for someone so young, he gently eased forward at what felt like a millimeter at a time. Every few seconds he asked me if I was okay and I assured him I was. I could tell he was really afraid of hurting me, and my earlier lesson on safety must have really hit home. He was being careful, being patient, and putting my need for comfort ahead of his need for pleasure. He was a remarkable young man, and he was going to make some lucky young woman very happy.\n\n\"You're going to run into resistance when you get to the ring muscle,\" I told him. He kept pushing and then stopped when he hit my sphincter. \"This is the key moment. If it's her first time, it's probably going to hurt when you push past the sphincter. So you should be sure to talk to her, to be positive and reassuring and promising to stop if she wants you to.\"\n\nI felt the pressure increase, but his cock didn't move, and I figured he was afraid to really make the effort. \"Push harder,\" I said, and he did, and then the head of his cock popped through the ring. \"Oh, yeah ... that feels amazing,\" I whispered. \"Good job. Now just rest there for a bit so I can get used to it.\" There wasn't really any need for that, I was fine, but I wanted him to learn how to handle the situation with a girl who was less experienced.\n\nAfter a couple of minutes, he'd worked himself all the way inside me. He felt so good, and I felt so full. It was a delicious, naughty feeling because it felt as if the head of his cock was deep inside my stomach. \"Now just hold still,\" I whispered. \"Let me get used to it.\" This was always very important to me. I liked having just a bit of time to adjust and acclimate myself; it helped to let my body accommodate such a foreign invasion.\n\n\"This is amazing,\" he whispered. \"I thought you were tight before, but now, here, I feel like I'm inside a glove or something.\"\n\n\"I'll loosen up some as we get more into this,\" I told him. \"So go ahead and start slowly moving in and out. Be careful to not pull back through the ring.\" At a snail's pace he eased out of me and very gently worked his way back in. \"Yeah, that's perfect, it feels so good.\" I was getting those familiar little tingles in my stomach and it felt as if my pussy was on fire.\n\n\"Oh, God ... you feel so tight around me,\" he moaned.\n\n\"Just a little bit faster now, okay?\" I cooed.\n\n\"Okay,\" he said quietly. \"Is this going to hurt you?\"\n\n\"No, because I've done this a few times and I know how to relax and accept it,\" I replied. More than a few times, I thought to myself, and I've loved it from the very first time, and your cock is bigger than any I've taken this way, and I don't care if there is a little pain. But much as I'd like to, I can't tell you that.",
        "\"This is so cool,\" he said. \"I loved being in your pussy, but this is even better.\"\n\n\"I'm so glad you're enjoying this.\" Then I added, \"We're doing this correctly and you're learning to do it right so you don't mess up when you get the chance with some girl you're dating.\"\n\nI needed a hard, intense butt-fucking, so I decided to give him as much encouragement as I could without giving away my real desires. \"You'll have to be more careful with a girl who hasn't done this before, or one who's only tried it a couple times, but I can take as much as you can give me. I'm ready for you, so go ahead and fuck me hard, and then I want to feel you shoot deep inside me.\"\n\nI hoped my explicit language would give him the right signal, and it did. He pulled back and then eased himself deep inside me again. I was in submissive heaven even though I couldn't say so. I squealed in delight and pushed back into him, and he let out a low, deep moan.\n\nHe picked up the pace and lighting bolts were shooting through my body. I could feel his sweat drip onto my back and I was beginning to push back against him and meet his gentle thrusts. \"Okay, as hard as you want now, make me feel it.\"\n\n\"Okay, you asked for it,\" he said, and then he started increasing the momentum. \"Oh, Elisa, this is ... so fantastic ... so incredible ... so ...\" and then he did what he'd done before; he reached around and rubbed my clit. Instantly, a very powerful orgasm overwhelmed me.\n\n\"Yeah, baby, just like that, harder, keep going,\" I cried between panted breaths, and he responded.\n\nThe gloves came off. He put his hands on my hips for additional leverage and began pounding me out in earnest. Surges of electricity coursed through my body and I rapidly began to climb again. I knew at this frantic pace he wouldn't last much longer.\n\n\"Yeah, baby, give it to me, hard and deep, just like that,\" I whimpered, and he kept pounding and I just barely managed to stay in position. He continued to touch me and I was overwhelmed by ecstasy. My orgasms hit me one after the other and I found it almost impossible to keep oxygen in my lungs.\n\n\"Oh ... Jesus ... I'm ... I'm ...\"\n\nMy world went dark just as felt white-hot spurts of semen pulse into my bowels. When I began to come back around I was flat on the bed and he was lying on top of me. Both of us were struggling to catch our breath and our sweat sensually mixed together. I felt him soften inside me and he pulled out, rolled to my side, and then pulled me up against his body tight, just like he knew that I liked. We shared a soft, gentle kiss.\n\nIt was already after two in the morning and I could barely hold my eyes open, but my body was again sticky with our combined sweat, to say nothing of his semen oozing out of my asshole. When I suggested that we shower again, he was only too happy to agree. Both of us were tired so we made it a fairly quick one, with only a small amount of making out. After we dried off, we slipped back into bed under the cool, crisp sheets. We exchanged a few more little kisses and then I flipped over and he pulled me tight against him, spooning me. We were both exhausted from the hours of extended energetic sex play, and despite his youthful energy I heard his breathing change and I knew he was asleep.\n\nIt had been quite an eventful day, but I couldn't help feeling quite proud of myself. He wasn't all the way there yet, but he'd made huge advances since we'd met. Maybe I'm not such a bad teacher after all, I thought as I fell into a deep, dark sleep.\n\n* * * * *\n\nI awoke to find Ed still asleep with his hand cupping my breast from behind. I glanced at the bedside clock and saw that it was just a few minutes before eleven, so I reached back and stroked his cheek until he awakened.\n\n\"What a great way to wake up,\" he mumbled sleepily, tickling my nipple and making it stiffen.\n\n\"Yes, it is,\" I murmured back. \"But we should get up and at least brush our teeth.\"\n\n\"Not necessary,\" he whispered, and then he turned me over and kissed me. I was both shocked and pleased that he wanted to kiss me enough that he didn't care about morning breath, and I returned his kiss with increasing intensity. He ran his hands up and down my body, and my body responded like it always did; I started getting wet and my hands moved, almost of their own volition, to his rapidly inflating cock.\n\n\"I'm always ready for sex,\" I whispered, \"but I think it will be better if we at least brush our teeth and use the bathroom before we get started.\"\n\n\"Awww ... okay ... \" he said with a laugh. \"But you're probably right. Let's take care of that, and then we can ...\"\n\n\"We'll see,\" I giggled. \"I'm getting hungry, so maybe some brunch would be a good idea too.\"\n\n\"Yeah, I guess ... you know ... I'm hungry too,\" he said, but he couldn't hide his disappointment that we weren't going to immediately resume his lessons, which he really didn't need any more of. I knew he was probably feeling a little dejected, but he managed a smile and we headed for the bathroom together. I wasn't shy about peeing while he was watching, and I watched in turn as he stood over the commode and sent a strong stream into the toilet. Then we stood side by side and brushed our teeth using the complimentary brushes and toothpaste the hotel provided.\n\nAfter we returned to the bedroom, he put on the guest robe and went into the living room while I dug into my overnight bag. I opened my toiletries case to run a brush through my long hair and put on lipstick. I thought of putting on a thong and bra but decided against it. I knew he'd want sex again after we ate, so putting on underwear seemed kind of pointless. I rummaged through my overnight bag again and pulled out a short little jean skirt and a pink lace top. To complete my outfit I slipped into a pair of open-toed mules with four-inch heels.\n\nWhen I entered the living room he looked up from the room-service menu and shot me a big grin. \"You have a great body, Elisa, but I have to say I really like the way your legs look in high heels.\"\n\nI was startled by his interest and I broke into a little smile. \"Thank you, honey, that's a very sweet compliment. What are you going to order for us?\"\n\n\"I know it's late, but breakfast-type food sounds good,\" he replied. \"Do you drink coffee?\"\n\n\"I do in the morning.\"\n\n\"Okay, how do you like your eggs? I'm getting mine scrambled.\"\n\n\"Scrambled is fine.\"\n\n\"Got it.\"\n\nI sat on the couch while he picked up the room phone, got room service, and ordered orange juice, scrambled eggs with bacon, toast, and coffee. We sat on the couch together, talked, and made out for a bit. Just when things were starting to heat up we were interrupted by a knock on the door and he got up to answer it. The room service guy wheeled a cart into the room and placed it in front of the couch. Ed added a tip to the check, and just as he opened the door to let the server out his father appeared.\n\n\"Dad!\" he exclaimed. \"What are you doing here?\"\n\n\"I know you weren't expecting me,\" Edward replied, \"but I was really curious as to how things were going with you and Elisa so I decided to stop by and pay you both a little visit.\"\n\nEd hesitated, then said, \"Well, since you're here I guess you should come in; Elisa and I were just about to have a late brunch.\"\n\n\"Thank you, son, that's very kind of you.\"\n\nFather and son approached me and then Edward gave me a little bow. \"Good morning, Elisa, you look as beautiful as I remembered.\"\n\nI'm sure I blushed a little, and I chose to remain seated and not greet him the way I'd ordinarily greet a repeat client in a non-public setting because at the moment I was Ed's date, not his father's. \"Thank you, Edward, it's nice to see you again. I don't feel dressed for the occasion, but ...\"\n\n\"That's okay, I know I'm intruding on Ed's time with you. I just couldn't stand the suspense of not knowing how everything was going with the two of you.\"\n\nI was happy to hear Edward use Ed's preferred mode of address, and I saw Ed smile behind him. \"I completely understand,\" I said, \"and I'm sure Ed can fill you in.\"\n\n\"I already know things have gone well,\" Edward replied. \"The way he's been speaking to me has already told me volumes about how he's interacted with you.\"\n\n\"Please have a seat, Dad, I want us to eat before our food gets cold.\" He gestured to the chair next to the couch and Edward sat down.\n\nEd was putting on a really good show of gentlemanly behavior. While I uncovered both glasses of juice Ed removed the covers from the plates of food and then asked, \"May I pour for you, Elisa?\" I nodded, and he lifted the pot and filled one of the cups with coffee.\n\n\"Thanks, Ed,\" I said with a smile. After he and I sipped our juice we picked up our forks and started eating.\n\nHis father looked awestruck. \"What a wonderful change I see in you, Son.\"\n\n\"Elisa's a fabulous teacher, Dad,\" he said between bites. \"She's given me a lot of tips on how I can ... you know ... interact with the girls I take out, and I think everything will be a lot better now.\"\n\nEdward beamed. \"That's great, Son. I'm really proud of you.\"\n\n\"I don't drink coffee, Dad, and there's another cup here; would you like some?\"\n\n\"No, but thanks for asking.\"\n\nAfter we finished our brunch, I was savoring the delicious coffee. I felt invigorated after the great night's sleep and was feeling a little adventurous. \"Why don't you show your father some of the things I've been teaching you?\" I said saucily.\n\n\"That's a great idea; I'd love to see that,\" Edward commented.\n\n\"Ummm ... I ... ummm ... I'm not sure about that,\" Ed said hesitantly.\n\n\"C'mon, baby,\" I said playfully. \"Your Dad spent a lot of money so you could have a good time with me, what do you say?\"\n\nI reasoned that it might be a little embarrassing for him to show his father the fruits of some of our lessons. However, he was also a typical male, and I saw he was slowly coming around to my idea.\n\n\"I .... ummm ... I guess that would be okay.\"\n\nI slid closer to him on the couch, put my hand on his cheek, and turned his head so he faced me, and he didn't require any further urging. He leaned forward and kissed me, gently until I opened my mouth against his and invited him in. He pressed his lips harder into mine and subtly eased his tongue into my mouth. I slipped my hand inside his robe and ran my fingers over his chest, and he mimicked my action, sliding his hand under my top, cupping my breast, then running my nipple through his fingers, which caused it to instantly harden. I kissed him harder and felt myself becoming aroused again. After a minute or so I ended the kiss, moved my hand to open Ed's robe, and wrapped my fingers around his hard cock.\n\nIn that sensual moment his father just drifted off into the background and I opened my legs. \"Touch me, please touch me, baby,\" I begged softly. He responded perfectly by sliding his hand under my little skirt and running his fingers over the lips of my pussy. I was already moist, and the slickness made it easy for him to slip first one, then two fingers inside me. His thumb expertly found my clit while his fingers gently pushed in and out of me, and my body began to climb.\n\nTaking me by surprise, he withdrew his fingers and got down on his knees in front of me. I slid my top off, opened my legs to accommodate him, and pulled my little jean skirt up around my waist. I ran my hands through his hair and pulled his head towards me. He extended his tongue and sank it deep inside me, and my entire body tingled.\n\n\"Yes, honey, just like that,\" I moaned. \"Get me there, just like I taught you.\"\n\nI roughly closed my thighs around his head and he withdrew from me and began alternately lapping and flicking my clit with the tip of his tongue. \"Yeah, just a little bit more, baby,\" I cooed.\n\nThere were loud licking and slurping sounds emanating from between my legs and my body quickly climbed as he pushed me closer to going over the edge. He took my clit into his mouth and began to gently suck, and that was all it took. My body convulsed as a powerful orgasm overtook me.\n\nWhen I started to come around and my senses were back about me, I felt him lick my secretions from the lips of my vagina and my inner thighs. Just like I'd taught him, he avoided my clit, which made me proud. Under my expert tutelage he was becoming a great lover, and I just leaned back and continued to catch my breath.\n\nWhen he'd cleaned me to his satisfaction, I put my hands on his upper arms. He looked up, our eyes met, and he grabbed one of the napkins off the table and wiped my excess juices from his face. We both broke into big smiles, and he stood and then sat beside me. I looked between his open legs and noticed his cock, which stood fully erect and was oozing pre-cum. He'd done such a good job taking care of me, it was time for some reciprocation.\n\nI reached between his legs, took his cock in my hand, and slowly began to stroke it. \"I'm betting you'd like me to take care of this for you, huh?\"\n\n\"Would you?\" he asked hopefully.\n\n\"Of course I will, baby.\" I slid off the couch, got on my knees between his open legs, rested my butt cheeks on the tips of my stiletto heels, and took his cock back into my hand.\n\n\"I loved tasting you,\" he told me. \"I'm sure this won't take you very long.\"\n\n\"I just want you to enjoy it,\" I cooed sensually. I took the head of his cock in my mouth and closed my lips around his shaft. I started bobbing my head up and down, sliding my lips along his length, and then I relaxed my throat muscles and let him slide all the way in until my face was against his belly.\n\nHe was right; it didn't take long for his cock to twitch and pulse. I kept my mouth warm and wet, and after a few seconds a pool of my saliva had collected on his balls.\n\n\"God, it just feels so fuckin' good,\" he moaned.\n\nI continued to slowly work him in and out of my mouth and throat, and after a minute his breathing changed and I knew he was close. I pulled back to let the head of his cock rest on my tongue, and when I swirled the tip over his head rope after rope of thick cum spurted into my mouth. I held his load in my mouth until he'd somewhat recovered and our eyes met. I opened my mouth, showing him his voluminous output, gave him a little wink, took a little breath, and then swallowed.\n\nBeing the gentleman that I'd so patiently turned him into, he helped me to my feet and I sat beside him on the couch. When I looked over at my favorite pupil's father, his erection was straining painfully against the tight confines of his trousers. It was pretty obvious he'd enjoyed our little show. In all honesty, I was so into everything I'd been doing with his son I'd actually forgotten he was in the room with us.\n\n\"That was quite an impressive demonstration you just put on for me, Elisa,\" Edward said as a big smile broke across his face.\n\n\"You paid for the entire twenty-four hours and I wanted to make sure you and your son were getting your money's worth,\" I teased.\n\n\"So tell me, Dad,\" Ed said with a sly smile, \"how did you decide on Elisa for this date with me? Did you check out her ... ummm ... talents personally?\"\n\nOh, wow, I thought, he's asking whether his father cheated on his new wife with me. This should be interesting. \n\nIf Edward was upset by his son's question he didn't show it. \"I got to experience some of them,\" he admitted right away. \"I wanted to ensure you would get a good ... ummm ... education and it's pretty obvious that Elisa hasn't let either of us down.\"\n\n\"That's for sure,\" Ed replied with a laugh.\n\n\"So, Elisa,\" Edward began, \"I have to say that what I just watched was a real turn-on for me.\"\n\n\"I'm really glad you enjoyed it,\" I said shyly.\n\n\"I'd like to make a request.\"\n\nMy eyes got wide. \"What would that be?\"\n\n\"Watching you and my son brought back some very good memories. Is there any chance I could get in on the action?\"\n\nI wasn't exactly sure what he wanted. Was he suggesting that I have sex with him and then his son, or did he want me to do both of them at once? I'd never been with two guys at the same time, and I wasn't sure I wanted to. So I needed to find out just what Edward wanted to happen.\n\n\"I need you to be a little more explicit; what exactly do you have in mind?\"\n\n\"I'd love to watch you have sex with my son. Once you're done, I'd like an opportunity to be with you again as well.\"\n\nI thought for a moment before formulating my response. \"I really enjoyed being with you, Edward, and I'm open to this little change in plans. However, Dana has a very rigid fee structure and I don't want to get in trouble with my boss, so I'll need to call her and get her approval on all of this, okay?\"\n\n\"I know my little request caught you off guard, and I'm more than happy to give you the time to talk to her and get this worked out before we proceed.\"\n\n\"Thank you, can you excuse me for a moment?\"\n\n\"Of course.\"\n\nI rose from the couch, made my way over to my overnight bag, grabbed my cell phone, and proceeded to the bathroom so I had a little privacy. Once I'd shut the door, I dialed Dana.\n\n\"Hello?\"\n\n\"Hi, it's Elisa.\"\n\n\"Are you okay?\" There was an instant worried tone in her voice. Apparently she thought I was in some type of trouble.\n\n\"I'm doing great, but ... ummm ... a situation has come up and I need to talk to you about it.\"\n\n\"As long as you're doing okay.\" It gave me some comfort to hear that the tension had left her voice. \"What's going on?\"\n\n\"Edward showed up at the hotel room and he's asking if he could join me and his son.\"\n\nThere was a fifteen-second pause and I waited for her to respond. \"Is that even something you're willing to do?\"\n\n\"I like them, both of them, and yes, I'm willing.\"\n\n\"Does he want to have sex with you separately or does he want you to take them both on at once?\"\n\n\"At this point, separately, but I'm not sure how it will develop once we're in the bedroom,\" I said honestly.\n\n\"Have you ever taken on two men at once, Elisa?\"\n\nFor the first time in a long time, I was completely honest with her. \"No, I haven't.\"\n\nThere was another brief pause. \"He's one of my best clients. That being said, I don't want you to feel pressured into doing anything you're uncomfortable with.\"\n\n\"He's one of my best clients too, and I want to make him happy and give him what he wants.\" He's loaded, I also thought to myself, and if he gets what he wants and leaves happy this could be the start of something very lucrative for me.\n\nShe laughed. \"Good girl.\"\n\n\"Besides, the idea is exciting, and a father and his son together, well, that's really hot.\"\n\n\"Well, it's your call. The add-on fee for one hour with Edward would be 800, of which you'd get 475. It's up to you how you handle both of them. Is that okay?\"\n\n\"That sounds good, but what if he wants anal sex?\"\n\n\"Again, that's up to you. Edward knows my fee structure, and no matter what you decide to do with him we'll get our money; does that sound okay?\"\n\n\"That sounds perfect and I'll let Edward know that he'll need to pay you.\"\n\nThere was another brief silence. \"I know you have to get going, Elisa, and not keep them waiting, but I want to tell you again, you're one of my best girls and I really appreciate the way you handled this situation.\"\n\n\"Thank you, that means a lot to me, Dana.\"\n\n\"Now go have fun. Bye for now.\"\n\n\"Bye, Boss.\"\n\nWe hung up and I went back to the living room.\n\n* * * * *\n\n\"Everything's arranged,\" I announced. \"Edward, you can work out the finances with Dana tomorrow.\"\n\n\"I can handle that.\"\n\nI couldn't believe I was actually going to do this. Fucking a father and his son in the same room? Who woulda thunk it? What I was certain of was that I was turned on, wet, and more than ready to play. \"So are you guys ready to take our little party to the bedroom?\" I asked saucily.",
        "Ed took my hand and led me to the bedroom with his father in tow. I was glad to see he was stepping up and taking charge of the situation, just like I'd taught him. I quickly stripped out of my top and skirt, leaving my heels on, and I slid into the middle of the bed on my back and opened my legs wide. I also noticed that Edward had stripped off his shoes, socks, trousers, collared shirt, and boxers and was sitting in the large chair near the bed.\n\nEd slipped into bed and immediately got between my open legs. I was extremely wet and I could feel my secretions running down my inner thighs; I was more than ready for him.\n\n\"Do you want me to go down on you again?\" he asked.\n\n\"No, baby, I'm ready for you.\"\n\n\"Should I start out slow, or--\"\n\n\"Just take me, honey,\" I purred.\n\nHe took his cock in his hand and slid himself inside me with one long, powerful thrust. Then he did something that showed me just how good his instincts were now that I'd awakened them; he lifted my legs and put them on his shoulders and then he started pounding me, going as hard and deep as he could on every stroke.\n\n\"Oh, God, yes, that's so good, fuck me hard, make me yours,\" I moaned.\n\nEd slammed into me again and again. The angle was perfect and his thick cock was caressing my clit with each hard, powerful thrust, pushing me higher and higher each time. Then he surprised me. When I looked up, and while he was pumping away, he turned his head and looked directly at his father. In all honesty, I was so into everything I was doing with his son I'd forgotten he was there.\n\nI'd already come twice from Ed going down on me, and giving head always made me hot. But to my surprise, having Edward watch his son fuck me, knowing that Ed knew his father had also had sex with me, was bringing my excitement to a whole other level. In that hedonistic moment, the wicked idea of having both of them inside me at once re-entered my brain. My orgasm was only seconds away but I used my hand to signal to Ed to stop moving. I'd never been double-penetrated, and the idea of it being a father-and-son pair was incredibly erotic in my sex-addled brain. I looked over towards the chair and Edward had his big cock in his hand; he was slowly stroking it as he watched his son fuck me.\n\n\"Edward, I'm willing to bet that my pussy would feel a lot better than your hand; would you like to join your son and help him get me over the top?\"\n\n\"I'd love that,\" he responded huskily.\n\n\"C'mon, then, get into bed with us,\" I said blithely.\n\nWhile Edward was frantically coming towards me I whispered in Ed's ear. \"Go get the lube, baby. I'm going to try to take you both at the same time and I want you to be the one in my ass.\" I was still a little sore from teaching Ed about anal sex last night and I was a little apprehensive about taking his larger father back there. Additionally, the kid had really turned himself around and he deserved an ego boost.\n\nEd slid out of me, grinned, and retrieved the lube. Edward was on his back next to me, and I mounted him cowgirl-style. I reached behind me, took his thick cock at the base, rubbed the head up and down the lips of my vagina, coating it, and then slowly worked him deep inside me. Just like the last time, his big, thick cock felt amazing.\n\nI bent forward and reached back to pull my butt cheeks apart. Over the course of a couple of minutes Ed worked one and then two of his lubed fingers into my asshole, just like I'd taught him.\n\n\"Yeah, that feels really good, honey, I think I'm ready for you.\" I felt the head of his cock at my aperture and then he slowly and carefully pushed himself past my anal ring. Methodically, he continued to push forward until our bodies rested together and I knew he was all the way inside me. I'd never felt so completely full. It was a delicious feeling, taking both of them simultaneously.\n\n\"Okay, boys,\" I said playfully, \"let's give this a go.\"\n\nEdward cupped my breasts. \"I'm ready, Son, are you?\"\n\nEd put his hands on my hips and said, \"Ready when you are, Elisa, let's rock.\"\n\nI moved forward, and both of them slid partway out of me. Then I slammed my body backward and both of those long, thick cocks penetrated me to their full lengths. The feeling of fullness was overwhelming. I repeated the movements several times and immediately my body responded and started to climb. It felt as if I was center of an erotic, sensual sandwich. Both men were grunting and moaning and their sweat was sensually dripping onto my body. Without warning, my orgasms hit me hard, one after another in constant succession, and I found it almost impossible to keep air in my lungs.\n\nI felt like a rag doll between them; the two men took over the motions and continued to slam into both my openings with a reckless abandon while I stayed still in position and raced up the mountain of ecstasy.\n\n\"Jesus ... keep going,\" I hissed. \"Don't stop, keep going, this feels so fuckin' good, please don't stop ...\"\n\nI needn't have worried, because neither of them was slowing down, much less stopping. I quickly lost count of my orgasms; as one departed the next one was upon me, each more intense than the last.\n\nBoth men picked up the pace, hammering me harder and harder, and I reasoned that at this fevered pace both of them had to be close. I heard their breathing change and both men stiffened up at almost the same time. Then came the flood. Pulse after pulse of semen squirted into me and filled my body with warmth over and above the heat of my sexual passion.\n\nWhen they were both spent, I collapsed onto Edward's chest and Ed rested his body on my back while we gradually caught our breaths and came down from our three-way release.\n\nI felt their cocks lose rigidity inside me, and Ed slid back and collapsed on the mattress beside me and his father. I rolled over, Edward's cock slipped out of me, and I lay on my back between my two men.\n\n\"Fuck, boys, that was intense.\"\n\nWe all broke into a little laugh.\n\n\"So you'll be ready to do this again with me and my son tomorrow night?\" Edward joked.\n\nI giggled. \"You'll probably have to give me a few days to recover from this,\" I teased, \"but yeah, just let Dana know when you want to do this again and we can,\" I said in a more serious tone. Edward had money, and if he was willing to throw more of it my way I was more than happy to accept it.\n\n\"Think I'm going to need a shower, guys.\"\n\nI got up out of the bed and Ed helped me stand on wobbly legs beside it. I stepped out of my mules and gingerly made my way to the shower while both of the guys put on their boxers and sat on the couch. I took a long, hot shower, letting the water pour over my already aching body. After I scrubbed myself clean, I dried off and went into my suitcase for clean clothes. I decided on tight little jean shorts, a t-shirt, and matching blue silk thong and bra. While I was dressing the guys took turns in the shower.\n\nOnce we were all showered and dressed it was four-thirty in the afternoon, close enough to the end of the promised twenty-four hours of my date with Ed. The two men thanked me profusely, Ed for everything I'd taught him and Edward for allowing him to join us.\n\n\"I'd like a minute alone with Elisa,\" Ed told his father.\n\nEdward took out an envelope and handed it to his son. \"In that case, you give her the tip,\" he said. \"I'll be waiting for you by the main entrance.\" With that, he turned and left the suite.\n\nEd stood silently facing me for a few seconds, and then he kissed me one last time for almost a full minute. I finally broke the kiss, breathless and breathing hard. \"You're a great kid,\" I told him. \"Remember everything I taught you and things will work out fine, I promise.\"\n\n\"I don't know how I can ever thank you enough, Elisa.\"\n\n\"You've already thanked me and I loved spending this time with you.\" I paused for a moment to collect my thoughts. \"Just remember, you may get lucky and meet a real mynx, but realistically, most girls your age won't be as experienced, or as willing, as I was. Take your time, be patient, and good things will happen for you.\"\n\n\"I'm sure that's true,\" he replied with a big smile, \"and I will remember. Please take this as more appreciation for your patience with me.\" He paused, then added, \"And for your talents.\"\n\nWe both laughed at his choice of words. I took the envelope from him and kissed him on the cheek. Once he'd left the suite, I opened the thick envelope and counted twenty-five crisp new hundred-dollar bills. Wow, I thought. For what turned out to be a really enjoyable extended date I've earned more than twenty thousand dollars. Now I can definitely afford my own apartment for my senior year.\n\nI'd been doing this long enough to know that not every date would turn out as good as this one. Regardless, this had been a very enjoyable and lucrative twenty-fours hours, and I hoped that Edward was serious about wanting to see me again, with or without his son.\n\n* * * * *\n\nTo be continued ..."
    ],
    "authorname": "melanieatplay",
    "tags": [
        "escort",
        "las vegas",
        "younger woman",
        "younger man",
        "18-year-old"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-girlfriend-experience-ch-05-1"
}