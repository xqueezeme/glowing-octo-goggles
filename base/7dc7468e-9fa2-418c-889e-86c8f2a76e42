{
    "title": "Down at the Twist and Shout Ch. 04",
    "pages": [
        "My thanks once again to my editor and mentor GrandTeton for his patience and calm determination to teach me the error of my ways; that this story still makes sense at all is due mainly to him and his own highly developed narrative skills. All characters portrayed herein are over 18 years of age.\n\nIf you liked the story, please vote or comment if you feel moved to do so, and if you didn't like it, please tell me why. \n\nThis is not a depiction of the real world, it's my story universe, so the characters do or say things differently from how you think they would in the real world, please remember that this is just a story; it's just fun, something I hope will help you while away a quiet hour or so. I hope you enjoy sharing my world with me.\n\nbeachbum1958 \n\n*****\n\nJustine fanned herself languidly, ineffectively, as the temperature in the cab of the old blue Blazer rose steadily, even with the windows down. Their pace through the maze of tracks and dirt roads was of necessity slow, due in part to the large amount of log debris left over from Katrina, added to by Sandy, Harvey, and subsequent, less destructive, but still bothersome flooding. \n\nMost of it was heaped by the roadside in bleached mounds, but the occasional trunk still buried in the muddy, little-used tracks by the storms' fury was enough to make Johnny mindful of his Blazer's suspension. That, and the narrow roads and sharp, unexpected turns and turn-offs that could fool even the best driver, and Johnny was still the best, at least here where he knew every twist and turn. \n\n\"How much further, Johnny-Bear?\" she asked, \"I'm just about melting here. What's the temperature out there, baby?\"\n\nJohnny looked at the almost-reliable binnacle-mounted air temperature gauge and grinned.\n\n\"This thing says 80 degrees, but I'd say it got to be closer 95 degrees out there; we in the swamp country now, Minou, it get real hot an' humid out here this time o' year, sometimes up high as hundred degrees in the shade. Jes' think cool thoughts, Minou, we be at Lubin's place afore long, he got real icy aircon there, even got backup generator jes' fo' th' aircon fo' when they get browned-out.\"\n\nJustine slumped back in her seat, wriggling her shoulders uncomfortably at the feel of her sweat-damp T-shirt clammy and sticky against her back, but still managing to grin at her Johnny-Bear's exaggerated, bayou-boy accent.\n\n\"Just make it soon, please, otherwise you're gonna have to scrape me off this seat with a squeegee!\"\n\nJohnny laughed out loud even as he patted her thigh (her long, smooth, firm, round thigh, noted another part of his brain entirely...) \n\n\"Don' you worry Minou, we make bayou-folks outta you real soon; jes' remember, it get down to 'bout forty degrees hereabouts come winter; you be rememberin' this heat real nostalgic-like roun' 'bout then!\"\n\nJustine grinned and fanned herself some more, resigning herself to more of this wretched heat and humidity. Johnny never seemed to think in term of hours and minutes, especially when she tried to get a guesstimate of their arrival time out of him; his standard response always seemed to be 'time be time, li'l gal; we come there when we come there, don'cha-all fret now!\"\n\nThe drive through endless canebrakes and barely visible tracks, lined with huge, tangled honeysuckle bushes, their sweet, heady fragrance heavy in the hot, still air lulled her somewhat, but when they passed through a large stand of Live Oaks, she thought she could hear another engine, one with a different, harsher note than the Blazer's, echoing behind them through the long, winding ranks of hardwoods. She looked inquiringly at Johnny, but he seemed oblivious, his brow wrinkled in concentration as the Blazer bucked and bounced along the uneven surface.\n\n\"Johnny, there's someone behind us!\" she hissed, memories of the three armed men in New Iberia crowding in on her, but Johnny merely nodded.\n\n\"Likely so, Minou; this ain't no private road or nuthin'; prolly local folks, an' nuthin' to do with us, mos' likely 'shiners; pay no mind to them an' they do likewise; lotsa folks down thisaway got trucks an' this a useful way to 'void the ATF.\"\n\nJustine fretted nervously anyway; after almost running into the people looking for them she was understandably jumpy, so kept an eye behind them, hoping to catch a glimpse of whoever was back there. The more she listened, the more certain she was that there was another truck coming up behind them, and not making any attempt at concealment, either; whoever it was, they were gunning the motor, almost like they were trying to catch up.\n\nAs she strained to see anything in the light flickering between the trees, suddenly there it was: a flash of dark orange, no more than a glimpse, but it was out of place against the lush greenery and vivid pink slashes of the bunched honeysuckle blossoms. The flash was enough to confirm that there really was someone behind them, and trying hard to catch up. She looked worriedly at Johnny, but he still seemed completely unconcerned.\n\n\"Johnny...\" she murmured worriedly, but he just shook his head.\n\n\"Don' worry none, Minou; we almost there, jes' take it easy; I swear, ain't no reason to worry; you see me frettin'? Relax, Angel-May, t'ain't nuthin' to worry 'bout!\"\n\nThe track eventually widened out into a dusty rural road, then met a single lane blacktop. Justine gasped at the view: endless marshy flats, as far as the eye could see, the myriad pools and sloughs shimmering in the sun as light breezes ruffled their surfaces, reflecting imperfectly the cloudless blue above them, like abstract mirrors in the endless flat greenery of the marshes.\n\nJohnny pulled over to the side and rested his crossed arms on the wheel. His eyes were distant, far away, his whole posture one of almost complete relaxation. Justine leaned over to check him out, and he smiled at her, a small, almost wistful smile, like he was recalling something from long ago and far away.\n\n\"Johnny...\" she murmured once again, twisting around to scan their back-trail, searching for another glimpse of the vehicle following them, one that she could hear clearly now, but he didn't move, just gazed at the miles of low-lying, swampy marshland and glinting pools, his eyes soft and unfocused.\n\n\"This where I grew up, Minou...\" he murmured, ignoring her worried tone, \"this my back yard; me, an' Big Jean, Jean-N\u00f6el, Jean-Martin, Randy Broussard, Ofie LeGay, Mack 'n' Hoagie Doubilli\u00e9r, couple others, we all come out here catfishin', sticking bullfrogs an' dippin' blue crabs, mebbe a couple mute ducks if we real sneaky-like, an' have us camp-outs, fry up a mess o' legs an' tell ghost stories. Over that way, that where ole Papa Joubert store use to be; Maw-maw Lucianne, his wife, she make the best hot cinnamon candy in Terrebonne; li'l Mel an' Odie allus come on out here with me an' eat fried legs an' candy 'til they sick, then I got to explain to Tante Amice why they so sick an' sticky an' stained-up; boy, she whup me good, but they was still good days...\"\n\nJustine watched his face as his memory unreeled, seeing the years drop away and the naughty, adorable boy Amice had told her about emerging again; her expression softened at the sight of Johnny so lost in his memories, a side of him she'd only ever seen fleeting glimpses of before. \n\nBut still that truck coming up behind them worried her; it worried her that they were out here in the middle of nowhere, alone and in the open, that they were only one jump ahead of whoever was looking for them, and that Johnny wasn't in the least bit concerned. Even as she pondered how to snap him out of it, there came the sound she'd been dreading, loud and clear: the other truck had caught up with them, and then an old but immaculate stepside painted a dusky orange, the exact same shade as a ripe persimmon, bucketed around the corner concealing them and purred to a halt right behind them. \n\n\"Johnny, JOHNNY!!\" hissed Justine, punching his arm to wake him out of his reverie as the driver and passenger doors swung open. Johnny roused, looked around and behind him, and grinned.\n\n\"Stan' down, Justy; Welcome Wagon jes' 'rived!\" he grinned. Justine jumped when a pretty brunette girl poked her head into the cab of the Blazer and grinned at her. An equally pretty blonde girl did the same on the driver's side, and Johnny smiled and winked at both of them.\n\n\"Hi baby-girls, you-all took your time gettin' here; I saw you back up along Bayou Blue, what you do, stop fo' li'l catfishin'?\" \n\nThe blonde girl climbed up on the running-board, grabbed his head, and planted a big kiss on his cheek, then grinned happily.\n\n\"Well hello to you too, Li'l Jean! We been watchin' your back-trail last thirty mile or so, saw couple sneaky-lookin' trucks with blacked-out glass an' Noo Yawk plates gettin' theyselves lost in the cane; we stayed back a ways an' made sure they good an' lost, jus' in case, then double-back and play tag with you last twenty miles. Hi, my name M\u00e9lette,\" she beamed at Justine. \"Jean-Basti\u00e8nne here my cousin, that my twin sister Od\u00e9lie over there, this here Terrebonne Parish an' we the Welcome Wagon! You mus' be Johnny's gal we been hearin' 'bout; all the boys dyin' to meet you, watch them, some o' them kinda wild an' woodsy, they ain't been round anyplace much but they mean well. Tell you the truth, there ain't much to do here in the parish but we makes our own fun!\" \n\nJustine felt breathless just from listening to the girl rattle away nineteen to the dozen, but she smiled back when the cute little blonde grinned happily at her.\n\n\"So get yo' ass outta there, John-Boy, where your manners, ain't you-all gonna say 'hello' prop'ly?\"\n\nJohnny smiled back at her as he unclipped his seat-belt. Justine couldn't help but notice how his whole attitude had changed; now, instead of pensive and careful, he seemed almost boyish, young and happy again. The blonde girl stepped back as he swung the door open, and as he climbed out of the cab, she jumped on him, wrapping her legs around his waist as she hugged him in a neck-breaker. \n\n\"Whoa, easy there, li'l gal, you ain't no baby no more!\" he grinned, staggering back under her weight. \n\nAs he staggered, M\u00e9lette turned her head and winked at Justine, who grinned at Johnny spluttering as he tried to fend off the barrage of kisses she planted on his face and neck.\n\n\"Get offa me, what wrong with you, baby-girl, I ain't been gone that long, cut it out!\" he blustered, mindful of Justine sitting just five feet away, watching a very pretty girl kissing him frenziedly. \n\nM\u00e9lette smiled at Justine and slid off him, to be replaced by Od\u00e9lie, who went through the whole performance again, wrapping her legs around him and kissing him just as frenziedly.\n\nJohnny managed to untangle himself from the little brunette and kissed both girls on top of their heads as he circled them in his arms.\n\n\"Damn, it good to see you pair 'gain!\" he grinned. \"Tante Amice tole me you livin' part-time down near Bayou Boeuf, got yo' own fishin' guide business, coupla pirogues an' a huntin' lodge; I might need to be borrowin' some o' that 'fore long, less'n you-all objectin'?\"\n\nOd\u00e9lie hugged him and looked up into his eyes. \n\n\"Anythin' you need, jest ask; Maw-maw say you got bad trouble trailin' you, I'm guessin' it more than just them idjits we saw gittin' lost in the cane, so we dealin' ourselves in too; you know I can shoot the spots off of a zirondelle at fifty yards with papi's ole Remington, and Mel nasty good wi' that bow an' quiver o' hers; you got us along, I reckon we can make unwelcome comp'ny feel real unwelcome!\" \n\nJohnny nodded thoughtfully; what Od\u00e9lie said had merit; she had a true sharpshooter's eye, and M\u00e9lette was lethally expert with her compound bow, her favorite hunting weapon; they would indeed be useful to have around. Too bad he wasn't going to allow it; bad enough he and Justine had those people after them, but to drag his baby-girls into it as well? No way, no how, not in a million years.\n\n\"Lemme introduce you proper, like, to Justine,\" he hedged. \"She my girl, I think you like her. Wait here...\"\n\nWith that, he stepped around the Blazer and popped the passenger door, steadying Justine with his hands around her slim waist as she climbed down from the cab. When the two girls saw her close up for the first time, they smiled broadly.\n\n\"Li'l Jean-Basti\u00e8nne pick a real pretty one, no mistakin'!\" smiled Od\u00e9lie, making Justine blush prettily. \n\nM\u00e9lette looked closely at her, then reached out and smudged away the concealer under her eye before Justine could avoid her hand, revealing the purpled bruise underneath. Her lips tightened as she did the same on the left side of Justine's jaw, the bruising under the concealer vivid and ugly, clearly outlining the mark of a clenched fist. She spun around to look at Johnny, her eyes flashing with anger.\n\n\"What the hell this mean, boy? You do this? You gonna tell me she walk into a door, or she 'fell down', an' it was all a accident, cause if you do...!\"\n\nJustine stepped in front of Johnny, wrapping her arms around his waist even as she recoiled at the hot anger blazing in the blonde girl's eyes.\n\n\"NO! It wasn't Johnny, my Johnny's never laid a hand on me! It was my husband, ex-husband, I mean, he did this; he did it so he could steal my money, and those people after us, he owed them money, and now they say I owe it to them, and I have to...have to work it off; Johnny was defending me, he got rid of the men threatening me, and now they're after him because he tried to help me! Johnny's the most gentle man I've ever known, and he's never laid a hand on me in anger, I swear!\" \n\nM\u00e9lette looked at her for a long moment, then relaxed; she could see no lie in her eyes, she was telling the truth. Od\u00e9lie gently took Justine's arm and turned her so she could look at her injuries.\n\n\"I'm thinkin' John-boy show the men who wanna harm you the error o' their ways, 'm I right?\" she murmured, and smiled at the look Justine darted at Johnny.\n\n\"It OK, I know what Li'l John capable of when he get mad, I seen it once, long time ago...\" she shuddered at the memory. \n\n\"I can guess what he did, but way I see it, he was defendin' his boo'sha; anythin' he did was the right thing to do, so I wouldn't go losin' no sleep over it. We get you back to Noncle Lubin's place, I reckon Tante Maigrette know how to make them bruises go down some.\" \n\nJohnny looked curiously at M\u00e9lette, at her flushed face and neck.\n\n\"Why you so mad, li'l gal? Someone hurt you too?\" he asked softly, his eyes hardening when she avoided his gaze. Od\u00e9lie too looked away rather than meet his gaze.\n\n\"What happen? You tell me now or we ain't movin' from this spot; who did it?\" he asked once more, a hard, clipped edge to his voice even as he watched both girls closely.\n\nHis voice took on a softer, menacing edge.\n\n\"I ain't gonna ast no more. Don't be no t\u00eate dur, c'est moi, ton grande fr\u00e8re qui demande, alor' dis-moi maint'nent; je ne t'entends pas! (don't be hard-headed, this is me, your big brother, asking, so tell me now; I can't hear you!) You gonna tell me who was it, an' whut he do to you, et co faire (and why)? Tell me!\" \n\nJustine's eyes flicked from the girls to Johnny and back, not understanding the rippling, rapid-fire Creole French, but getting what he was saying from his tone. M\u00e9lette flushed bright scarlet under her golden tan.\n\n\"It OK, Li'l John, it been taken care of, we OK, nuthin' much happen, an' it a while back anyways, let's jes' get outta here,\" she mumbled, then started when Johnny took her arm, gently but firmly pulling her around to look up at him.\n\n\"Whut happen, baby-girl?\" he murmured.\n\nM\u00e9lette looked up at him, her gaze level and unflinching.\n\n\"Beginnin' las' summer, me an' Odie decide we gonna go do some dancin', mebbe have a beer or two, so we ask Rafe Guillory an' Hecky Lafontaine to go with us to new place up the bayou at Belle Fourche, place called Harpoon Louie's; it was 'sposed to be a good place, clean, no road-house goin's-on, good music, but we din't wanna go there alone, like, so we asked them two along; we even took Apache, 'cos you don' go to a place like Harpoon Louie's in no farm truck. We got there, we dance with the boys, couple other boys ask us to dance, we havin' fun, and Rafe don't like it too much; he get all in there, telling me I'm his girl an' what I doin' actin' all loose and ready for whatever, so I tell him to blow it out his butt, ain't no universe I knows of where I ever be his girl; walkin' into a bar with him don' give him no rights over me, he jus' my frien' an' escort an' nuthin' else, so back off, go get a beer, ask some girl fo' dance, there plenty to choose from, an' we be cool.\"\n\nShe paused, her eyes far away and dark with remembered fear.\n\n\"He drug me outside, Hecky try stop him, he punch him out an' come after me, gimme couple good licks, made me see stars for sure. When I see straight again, I see Rafe down on his back, his face all blood; Odie must a' had Papi's Remmy in back o' the truck the whole time, 'cause she standin' over him with that rifle stuck in his eye; she hit him with the butt while he whalin' on me, an' she had her finger on the trigger an' all; I really thought she gonna blow his brains out, I know how light that trigger is, an' I jes' knew I was gonna see murder done.\"\n\nShe looked fearfully at Johnny, at his set expression and icy gray eyes, and continued.\n\n\"Bartender must have called the police. Nex' thing I know Randy Broussard show up, I remember he yo' frien' when you young; he one a' his daddy's deputies now, he listen to us, Hecky bear me out, so Randy take Rafe away, an' Hecky take me to ER at Thibodaux Regional, then take us home. When I get home an' maw-maw see them bruises, she go crazy, roundin' on Hecky, even though he all busted-up too, blamin' him, start callin' ever'one an' tellin' them whut Rafe done, an' how they got to help her drag him off somewhere so's she can make gator-bait outta him; Odie got to take her twelve-gauge and hide it in the truck otherwise she gonna end up in jail too. When I saw Justine's face all bruised-up like that, it just brung it all back.\"\n\nJohnny stared at her, his lips compressed in a thin line, but his face otherwise expressionless. M\u00e9lette looked sideways at him, and her eyes widened.\n\n\"NO! You leave it be, John-Boy, it done and settled, don' go makin' things worse! I know that look, don' be stupid, Johnny, you got enough, an' bigger trouble on yo' ass!\" \n\nShe dimpled, her eyes dancing, \"'sides, Mack Doubilli\u00e9r an' Jean-Martin go an' remonstrate with him, an' his leg kinda got broke by accident...\"\n\nJohnny raised a quizzical eyebrow at her.\n\n\"How well you know Macky D?\"\n\nM\u00e9lette dimpled again.\n\n\"For shame, Johnny, you-all know ladies don' talk 'bout such things! Le's jes' say we been...close, an' leave it at that; he cute, he clean, an' he know how to behave hisself around ladies; 'sides, he know he get rough he gotta 'splain hisself to you, an' he never gonna be ready for that kinda trouble!\"\n\nJohnny suddenly realized the girl had expertly deflected him from forbidding her, both of them, from tagging along, something he remembered she was always good at. The little blonde stared at him challengingly, and with a sinking heart he realized they had both dealt themselves in, and there was nothing he could do about it. Od\u00e9lie grinned and slipped her arm through his, and pulled him down so she could plant a kiss on his cheek.\n\n\"Now that all settled, time we got headed outta here; them idjits following still ain't too far behind, so we best get movin', it still a fair way to Bayou Petit Gaillou.\"\n\n*\n\nJustine's first sight of Johnny's uncle Lubin was a shock; apart from the obvious age-difference, she could have been looking at his exact double, they looked that much alike. Lubin was gray, with a craggy brow, the only real sign of age, otherwise he seemed as hale and fit as Johnny; when he smiled, he had that same infectious, boyish grin, his voice was as soft and unobtrusive as Johnny's, and the same clear gray eyes that seemed to look right through her. ",
        "She remembered Johnny telling her that Lubin was his daddy's oldest brother, father of the three Jean's; Jean-N\u00f6el, Jean-Martin, and Johnny's namesake, Jean-Basti\u00e8nne, and she'd laughed out loud when he'd told her his uncle had given them all the same name so he could be sure at least one would come running if he ever needed a hand and yelled out \"Hey Jean, git over here, boy!\"\n\nWhen she'd stepped out of the Blazer, Lubin had looked hard at her, his grin slowly freezing as his eyes flicked from her to Johnny and back again. He started to say something, but seemed to think better of it, instead shaking hands with both of them, while giving Johnny a meaningful look and a quick nod toward the barn. Justine caught the by-play and wondered if he'd caught-on to who she was, because he certainly seemed to recognize her.\n\nHowever, Lubin's wife, Johnny's Aunt Maigrette, a sweet, motherly woman had shown no surprise or distaste, she'd just clucked sympathetically while gentle fingers explored her bruises. She led Justine into the house to make up some poultices and dressings from herbs and roots she guaranteed would take down the swelling and reduce the bruising; Justine fell in love with her almost at first sight, helped along by the obvious love and affection she had for Johnny. With the ladies out of the way, Lubin turned to Johnny.\n\n\"Li'l Jean, mebbe my eyes are getting' kinda old an' rheumy, but I gotta say, that there li'l gal sure look familiar; somethin' you-all wanna tell me, boy?\"\n\nJohnny met his gaze squarely.\n\n\"Her name Justine, sir, she my girl, an' she in trouble, that's all I gotta say; you already know who she is, sir, otherwise why you askin'?\"\n\nLubin grinned.\n\n\"Ever' time you do that I see your daddy standin' there; you only say what you need to say, when you need to say it, jes' like him. Okay, yeah, I know who she is, so I gotta ask: why? There gotta be million girls in New York, why her? I mean, I got nothing agin her, I remember her mama a sweet gal, your daddy did well to find a gal like her, an' she seems like she got the same nature as her mama, she certainly got her looks, but you gotta know there's other, safer gals to take up with. Why her, Li'l Jean?\" \n\nJohnny grinned, looking the spitting image of his daddy, that same twist of his lips as his daddy, something Lubin couldn't fail to see.\n\n\"Well sir, I don' rightly know, an' that's the truth; one day it struck me; she an' I, we got so much together, we fit together like we was supposed to be that way; we ain't never had no angry words between us, I don' know how to get mad at her, 'cos everything she do seems like it's the right thing to do, an' she know I ain't never gonna hurt her, mistreat her, or leave her regrettin' a single minute with me; we 'sposed to be together, I feel it deep down inside, an' she feel the same. Now, you can call it what you like, but it don' change the facts none; we together, an' we stayin' that way.\" \n\nLubin nodded, a faint smile playing on his lips.\n\n\"Well said, boy. I kinda knew you was gonna say somethin' like that, but I jes' wanted to hear you say it. If you come out with somethin' about how she no-one special, she hot so you goin' for it, an' she jus' there until the real one come along, you'd be over that rail an' I'd have whupped you with a plow-line! I dunno what you wanna call what you doin', and I dunno where it goin', but you seem certain in your mind, an' set in your way, so I guess you got to do this your way. I'll talk with Audh\u00e9mar, he prolly see things the same way, so we talk with his boys an' mine, an' mebbe we work out somethin'...appropriate to entertain them fellers follerin' you; Audh\u00e9mar got a real inventive mean-streak, lessee if'n we can tempt him an' his boys to get creative!\" \n\n*\n\nOnce dinner was out of the way, Justine and Maigrette chatted and did the washing up while Johnny and Lubin talked about what they were going to do next. Johnny was hopeful his contacts in the Orleans Parish Sheriff's Department could help him, but Lubin wasn't so sure.\n\n\"Li'l Jean, I got call this mornin' from Jacques Broussard over to Houma, telling me he got a slew o' so-called tourists drivin' rental cars with New York plates wanderin' aroun' town askin' questions 'bout the bayou country, and particular 'bout you; coupla real obvious gunnies tried to put the arm on your tante F\u00e9lice at the Stop 'n' Shop, tellin' her they was ole friends an' they wanna see you, asking 'bout where you are, where you live, who your frien's an' family is, and gettin' real insistent about it; she hit the button, time he got there they gone, but there's more, and seems like more arrivin' every day.\" \n\nHe paused to pour himself a glass of clear spirit, grinning when Johnny declined a glass; he knew what was in that glass alright, and he wanted to keep a clear head. Lubin threw back his drink, and continued.\n\n\"Jacques an' me had a think about where these New York boys gittin' their information, an' how they find out so quick that you from the Atchafalaya, an' mebbe you headin' back this way, 'cos accordin' to you it only been a few days, a week, give or take, since you blew outta New York, and yet they already here in the parish. How they get onto you so quick? Jacques think they got someone, maybe more'n one, in the Orleans Parish sheriff's department. That bein' so, I reckon contactin' anyone up there, even yo' oldes' frien', might be a real bad idea.\"\n\nJohnny chewed his lip, thinking about what they were going to do next.\n\n\"Noncle Lubin, way I see it, it's time to take the fight to them; this my home, everyone hereabouts my kin, Justine my girl, an' I'm damned if I gonna let bunch a hired guns an' no-good druggie button-men come down here an' take any o' that away. They wanna dance, let's give them a prom-night they ain't never gonna forget!\"\n\nLubin grinned wolfishly.\n\n\"Damn, boy, I jes' knew you was my kin! You took the words right out of my mouth! How you wanna do this?\"\n\nJohnny looked thoughtful for a moment, then grinned.\n\n\"My original plan was to take them down to Ghost Lake, no-one lives permanent-like down there, so they be easy to spot an' trail, an' kinda pick them off as they stick their heads up; it be like playin' 'Whack-A-Mole' at the fair, only this time we whack 'em, they go down permanently; all them swamps and sloughs 'round there, places no-one ever been before, a body could get lost real permanent, real quick. Ain't no-one gonna come lookin' for 'em, not in that country, so with any luck we gonna sack 'em an' rack 'em, an' the 'gators an' catfish gonna think Thanksgivin' come early!\" \n\nLubin's eyes gleamed happily.\n\n\"That just the kind a thing your daddy woulda said; he warn't one to take stuff like this lyin' down neither. I'm takin' Maigrette over to Audh\u00e9mar's place with me tonight, things bein' what they are, I'd feel a lot better if she was with me tonight, but them two young hellions is out there someplace close-by, they spends mos' their lives livin' wild in the boonies, so they be jes' fine campin' out, it a fine night, an' mebbe you and your gal c'n sleep easy tonight knowin' they keepin' a eye on your back-trail.\"\n\n*\n\nJustine stretched luxuriously, grinning happily all the while.\n\n\"You weren't lying about the air-con, baby; it's wonderful!\" she smiled. \"I'd just about forgotten what 'cool' meant, but this is so great!\"\n\nShe let the bathrobe slip from her shoulders and fall in a soft heap around her feet, posing artfully in all her nakedness for him.\n\n\"'Course, now I'm feeling a little chilled; can you think of a way to warm me up again, Big Bear?\" \n\nJohnny licked his lips; no-matter how many times he saw her naked, each time was like the first; her clear, creamy-pale skin seemed to glow with an inner light, making her jet-black hair seem almost blue-black against her white shoulders and her small, perfect breasts tipped with pert, stiff brown nipples danced enticingly, giving him a delicious tightness in his groin. Justine winked at him and pirouetted, turning through a complete 360, showing him the rest of her tight body. \n\nJohnny's mouth watered at the quiver of her taut, globular little bottom, each cheek calling out to him to cup and squeeze them as his drank her ruby lips and feasted on her beautiful little breasts. Justine had habitually kept herself waxed, but now her pubes were beginning to grow-out again, a sexy delta of soft, silky little hairs, dark like the hair on her head, pointing to her secret place, and Johnny wondered what it would be like, how it would feel to part those fine silken threads and probe her hidden lusciousness with his tongue.\n\n\"You getting any ideas yet, Johnny-Bear?\" she murmured, smiling happily as he reached for her and gently pulled her closer by clamping his hands around her bottom. Justine gasped softly as he carefully nipped her tense nipple with his lips even as he squeezed, lifted, and separated her buttocks, momentarily stretching her little balloon-knot open.\n\n\"That's fine and all, but you can do better, Big Bear; show me!\" she whispered, brushing her nipples against his face, enjoying the feel of the taut little nubs dragging across his faint stubble. As she teased him, her hands fumbled with the waistband of his shorts, but finally she hooked her thumbs in the sides and slid them down. His erect cock swung upright, smacking in the palm of her hand. Justine smiled and licked her lips as she slowly began to fist him.\n\n\"This looks interesting, Johnny-Bear; can you think of anything I could do with it?\" she drawled, grinning at his agonized expression. With that teasing expression still on her face, Justine dropped to her knees, to gently kiss the side of his tumescent shaft.\n\nJohnny's breath hissed between clenched teeth as she darted swift little kisses all over his erect cock as she gently fisted him. Justine looked up, her eyes big and innocent, something she knew he had no defences against, and slowly, deliberately slid her plump, naturally red lips over the purple head of his straining cock. \n\nJohnny shuddered as an almost electric thrill pulsed through him; his face reflected his agonized arousal as the soft, wet heat of her mouth slipped up and down on his shaft as she bobbed her head. His instinct was to meet her suckling with thrusts of his own and it took all his willpower to remain motionless, although his thighs and buttocks ached with the strain of not moving, not forcing himself further into that hot, wet succulence engulfing his manhood.\n\nJustine could feel him tensing, she could tell his climax was near, so she backed off; a quick nip with her fingernails to the base of his straining cock backed him off as well, taking him down a couple of notches; much as she loved and craved the taste of his spunk, that wasn't what she wanted this night; it had been too long since she and her man had played in complete safety, and knowing they were, for now, anyway, safe and protected had made her horny; she wanted her Johnny-Bear to take her to see the elephant...\n\nJohnny picked up almost subliminally on her need; her little glances, half smiles, teasing little looks, a million things too small or subtle to describe, these all added together to one thing; his Justy wanted to make love like before, the way they hadn't been able to since this madcap, helter-skelter flight from danger had begun. \n\nWith Johnny, to think was to do, and so he took her hand and raised her from her kneeling position, his hand gently squeezing her buttock as he pulled her close for a kiss. His hands roamed over her as they kissed, caressing, exciting, enticing, and suddenly she knew what she wanted, more than anything.\n\n\"Taste me, Big-Bear!\" she breathed, \"It's been so long, eat me, make me howl, you bad, bad man!\"\n\nJohnny needed no further encouragement, and when Justine drew him to the bed, he held her behind her knees as she lay back, spreading her thighs so he could gaze once more at the pink little jewel nestled in a bed of downy, silky black hairs, dewy and delicious. Justine closed her eyes as his big, warm hands held her legs wide open, her hips gently wriggling as she sensed rather than saw her man leaning over her, the knowledge he was staring at her pink jewel feeding her arousal. \n\nJohnny paused, letting her scent fill his nostrils and percolate through his brain. Knowing she was so aroused raised his own level of arousal; she wanted him to taste and eat her, but what he most wanted to do was to savagely plow into her, hold her down and ram himself into her again and again and fill her with his seed as she writhed and shuddered beneath him; only his basic nature, the things that made him her 'Johnny-Bear', kept him from treating her so, even as her scent drove him almost mad with need for her. Later, later, his mind told him; first things first, and her sweet, spicy, delicious aroma told him what she wanted.\n\nJustine gasped softly, shuddering with delight as his tongue gently lapped at her; Johnny ran the flat of his tongue from the tight little crease of her anus to the stiff little nub just beginning to poke out from its pink cloak. Justine cried out softly, a mewing little cat-cry of agonized delight as his tongue brushed her clitoris, a sharp jag of pleasure shooting through her to buzz in her stiff, throbbing nipples. \n\n\"Again...oh yes, again, Johnny!\" she gasped, and Johnny was only too happy to oblige, while Justine writhed in ecstasy as his lips and tongue sent bursts of pleasure bulleting through her. Johnny kept licking and nibbling her, because she tasted so good, so sweet, and tangy, and fresh, and a million other soft, subtle tastes, but also because the feel of the soft growth of silky hairs teased and tickled his tongue.\n\nJustine held his face against her, grinding her wet, succulence against his probing tongue and torturing lips, feeling the first stirrings of orgasm uncoil inside her. Johnny, so completely in-tune with her feeling and emotions, felt it too, and so he feasted on her, driving her onwards and upwards, never letting-up in his quest to pleasure his woman the way she wanted. Justine was gasping like a long-distance runner, she was close, so he rasped his tongue one last time over the stiff, juicy nub of her clitoris.\n\nJustine stiffened as her climax blazed through her, pleasure so extreme she couldn't even give voice to it, or so she thought; her hearing, eyesight, every sense she possessed shorted-out as all her circuits blew wide-open. Her body shuddered and trembled as wave after wave of pleasure verging almost on pain crashed and surfed through her, to break against the walls of her mind and blow in once again, battering her with pleasure only her Johnny had ever given her, and then everything went dark as she floated in a warm and peaceful somewhere, feeling like everything in her world was better than fine, it was perfect.\n\nJustine heard Johnny calling her, from what seemed a long way away, his voice faint and barely heard above the roaring in her head, but eventually his words began to make sense through the fog dulling her senses.\n\n\"What...? Johnny Bear, what happened? I was feeling so wonderful, then it all kind of went...I dunno, I mean, did I fall asleep, or something? How long...?\" she murmured a little muzzily.\n\nJohnny's face swam into focus above her, his worried frown giving way to a relieved smile.\n\n\"You OK now, Minou, I got you now. Girl, you scared me! One minute you humpin' like it's goin' out of fashion, nex' thing I knows you-all let out a scream like a bobcat in a snare an' pass out! I tho't I done sumthin' real bad, you laying there like dead thing, barely breathin', eyes all turned-up an' white, an' all I could think was whut in Hell I'm gonna tell tante Maigrette when she find you lookin' like you moonstruck!\"\n\nJustine smiled as she held out her arms to him.\n\n\"Special kind of bayou-magic you've got there, Johnny Bear! Now how about I show you some of mine?\"\n\nJohnny grinned as she fondled his aching erection.\n\n\"I thought you never ask, li'l gal!\"\n\n*\n\nAbout 200 yards upwind of the house, in their secluded campsite concealed in the angle of two huge Cottonwoods and hidden from the road, the twins smiled at each other. \n\n\"She kinda noisy...\" observed M\u00e9lette, her softly jealous tone making her sister grin.\n\n\"You a fine one to talk, Miss M\u00e9lette Ysabeau Gaudet de Cormier, spinster o' the parish,\" smiled Od\u00e9lie, \"considerin' the noises you an' Macky D. useta make; I swear, near on ever'one in the parish knew what you two was doin'!\" \n\nM\u00e9lette rose up on her elbow to throw her backpack at the grinning girl but then she paused, sniffing the air. Od\u00e9lie too froze, snuffing the air delicately, her nostrils flaring as she caught what her sister was scenting. The breeze had shifted, blowing now from the direction of the road, and the usual night scents had a new component, one that shouldn't be there.\n\n\"You gettin' this too, hun?\" breathed M\u00e9lette, and Od\u00e9lie nodded. \n\n\"Uh-huh, two, mebbe three, up high somewhere, prolly up on the knoll along White Oak trail, it the only place hereabouts high 'nuff see along the road on both directions; only city-boys gonna go huntin' smokin' cigars an' wearing cologne smellin' like a whore's boudoir; what they do, shower in the stuff? You reckon we should slide over there an' give them somethin' to sleep on, permanent, like?\" \n\nThe blonde girl shook her head.\n\n\"Nope; they ain't goin' nowhere tonight, not while it dark; they can't show lights, not up on the knoll, they know people gonna see them from miles away, so they gonna sit tight an' wait for first light; they prolly settin' up as spotters for the rest of them fellers we followed through the canebrakes, so they ain't goin' nowhere 'til them other fellers show up. Leave 'em be, we move in when they on the move, but they surely ain't goin' nowhere for now, so you get some sleep, hun; if nuthin' happen I'll wake you in four hours.\"\n\n*\n\nJohnny woke, as always going instantly from fast asleep to fully awake, no drowsy transition or warm half-awake state, to a world still gray in the pre-dawn light. He grinned as he looked around the familiar room, one he'd slept in so many times during his boyhood days; everything was the same; the same pile of dog-eared old Zane Grey and 'Sudden' paperbacks, Jean-N\u00f6el's stacks of baseball magazines, Sports Illustrated's, and National Geographic magazines, the same pile of batting helmets, mitts, and stack of bats in one corner, and the same small shelf with a row of sporting trophies. \n\nThe only difference between those happy days and now was his truly epic erection, and the svelte, creamy-skinned naked girl spooned fast asleep against him, hugging her pillow with her pert, beautiful little rump thrust up so provocatively. The image of innocent, yet smolderingly sexy young womanhood was almost more than he could bear; he had to almost pinch himself to remind himself that he was awake, not dreaming, and that this beautiful, sexy girl was his.\n\nHard on the heels of that thought came another, and, smiling at what he was doing, he slowly slid down the bed, to softly kiss the sexy, outthrust pair of buttocks. Justine stirred, the faintest \"Mmmm...\" escaping her lips as she smiled in her sleep. Johnny froze; waking her just yet wasn't part of his plan. \n\nWhen he was sure she was fast asleep again, he began gently kissing the soft, plush globes again, slowly urging her onto her stomach, kissing and licking more insistently in the cleft between her taut ass cheeks. Still fast asleep, Justine began pushing back against him, obviously feeling something as he kissed, then rimmed her gently, squirming in her sleep as his tongue-tip brushed and teased her taut, creased little pucker. \n\nJustine stirred, her thighs drifting apart, and Johnny smiled to himself; his plan had worked! Slowly, gently, with almost feather-like delicacy, his tongue tip probed the soft flesh exposed between her open legs. Justine squirmed, smiling her sleep-smile as whatever she was dreaming about jibed with the feel of Johnny's tongue and lips gently probing her most intimate parts. ",
        "Johnny lapped at her, enjoying the taste of her, dizzy with the scent of her arousal and horny beyond belief; his instincts were to yank her legs apart and jam himself into her, but he was in complete control of his instincts. They'd played this game before, and he wanted to pleasure his girl, to play with her, to tease and gently torment her, because when they did finally make love, it would be, like every time they did this, a truly next-level experience.\n\nLicking, kissing, probing deeper and longer with his tongue, he slowly worked-up the sleeping girl, her increasingly outthrust buttocks making it easier for him to probe and tease, while her hands clenched and unclenched as what he was doing to her worked its way through her and into her dreams. \n\nWhen he heard her gasp, he grinned happily as he bored in even more firmly, holding her smooth thighs apart while her pelvis writhed and danced. Her hands found her breasts, fast asleep though she was, tugging and squeezing her stiff nipples as dream-state merged with reality, her body telling her that dream sex was becoming real. Johnny saw this, how close she was, and slid two fingers into her damp and fragrant pussy. \n\nJustine's eyes snapped open as the shock of orgasm powered through her, a wail of purest ecstasy escaping her lips as she rode the crest, eyes squeezed tight-shut and tears like tiny crystals glimmering on her eyelashes as she tugged and squeezed her nipples even more frenziedly, rolling her climax on and on, while Johnny, all pretense of subtlety dropped, jammed his mouth against her damp and dewy pussy as hard as he could, rasping his tongue against her clitoris and jolting her into yet another wave of almost unbearable pleasure. Another wail, louder, harsher than the first burst from her lips as she shuddered and trembled, caught in the huge bow-wave of pleasure that crashed through her, swamping her senses with pulse after pulse of hot delight. \n\nAs the tremors and aftershocks of release trembled and swirled inside her, Justine became aware of Johnny still poised above her, his lips kissing her back, between her shoulder-blades, the curve of her neck where it joined her shoulder, soft, delicate nibbles that woke a storm of gooseflesh all over her skin, still sensitive as it was after such a massive climax. \n\nMore obvious even, was the feel of his thick cock pulsing in the cleft between her buttocks, the flesh hard and hot, ready for release of its own. Without thinking, Justine reached behind her to encircle his shaft with her fingers, squeezing and gently fisting him, rubbing the seeping, glossy tip of the shaft around her velvety anus, her movements becoming more insistent with every stroke of his cock.\n\n\"You-all sure you want to go there, Minou...?\" Johnny whispered, \"You don' have to baby girl, I'm jus' happy you wan' me 'tall! We c'n do this 'nother time, baby, ain't no rush!\" he breathed. Justine grinned at the concern in his voice.\n\n\"I know I don't have to Johnny-Bear, but I want to; every part of me owns every part of you, and everything I have is always only for you; I want this, baby, I want you to have me like this, I want you to always want me like this, and any other way you want; we're us now, Johnny-Bear, not just me and you!\"\n\nAs she spoke, Justine stuck her bottom out even as she pulled her buttocks apart, showing him her tightest hole, slicked and lubricated with his pre-cum as it winked at him.\n\nJohnny pushed forward, easing himself into her millimetre by millimetre, ready to pull back at the first sign he was hurting her, but if he was, Justine showed no sign of it, only her lip caught sexily between her teeth as his thick cock slid slowly, unstoppably into her most secret place, until he could go no further, buried to the hilt in her tight, hot anus.\n\n\"That wasn't so bad!\" she grinned, flexing her internal muscles and squeezing him for a second. Johnny's eyes almost popped out of his head at the sensation; his cock was already squeezed into her glove-tight behind, the velvet grip holding him more firmly than anything ever had before, and the added pressure almost made him shoot his load there and then.\n\n\"Don' do that, Minou...jes' please, don't...\" he murmured, lost in contemplation of the sight of his fat cock buried inside the taut, firm little bottom, her anal ring stretched obscenely tight and glistening around him; that sight alone was almost enough to make him lose it, and he didn't want that; if they were going to do this, like this, he wanted to savor the experience.\n\n\"Well, Bayou-Boy; you gonna fuck me or stare?\" taunted Justine, just loud enough to jar him out of his mesmerized gaze at the sight before him, followed by a gasp as he slid himself almost out of her, then pushed back in, watching her globular buttocks quiver as he reamed her tight ass. His hands slid up her waist, to cup and squeeze her small, perfect breasts, pulling her against him as he increased his pace, jamming himself into her harder and harder with each thrust while Justine moaned and squealed and gasped with each stroke of his cock inside her.\n\nHow long they strained and hammered together in such a primitive, primal, taboo way neither knew nor cared; the sex was all, two lovers coupling frenziedly as though their lives depended on it.\n\nAt some point they had risen up, and now Justine was sitting astride her kneeling man, his hands clamped firmly around her breasts as she rode him as hard as she could, her hands locked behind his neck to give herself greater leverage as she slammed herself up and down on his straining cock, slipping him almost out and then back into her as she rode him, both of them lost in their own world of sexual bliss. \n\nJustine could feel him shortening his stroke; her Johnny was almost there, just a little more, so she began muttering, demanding, telling him what she wanted.\n\n\"That's it, baby, give it to me, fill my ass, fill it up, make a baby in me, Johnny give me an ass-baby, breed me, Johnny-Bear, breed your little sister's ass, cum in me and fill me, do it, do it DO IT!!\"\n\nJohnny lost his last shreds of control at his sister's words, his body going rigid as every single muscle froze, locking him in place with his cock swelling to jam inside that impossibly tight place as spurt after spurt of sperm gushed and blasted out of him and deep into Justine's tight little ass, doing what she'd asked for, pumping his seed deep inside her ass, breeding her the way she'd demanded. \n\nAt the feel of his cock jamming and pulsing deep inside her, Justine too froze, orgasm once more blazing through her, blinding and deafening with its intensity, what felt like every muscle and tendon vibrating like harp-strings, each one tuned to a subtly different note, blending into one great, swelling chord, an upwelling of unbearable pleasure from deep in the bedrock of her.\n\nJustine slumped forward and would have collapsed bonelessly if Johnny hadn't had his arms around her, holding her to him as every last drop of his seed pulsed, and finally slowed to a trickle inside her. All he could do was hold her up, too dazed and mind-shattered by what had just happened to fully connect yet with the real world, only held upright by instinct. \n\nAs his head cleared he finally released his grip on her, allowing her to relax as he followed her down, his cock still tightly clasped in her anus. When he started to withdraw, Justine gasped and whined, her limbs twitching and shuddering in time to the mini-orgasms whirling through her again, curling and uncurling in a dance of pleasure and pain, bringing back to her some of the mind-searing intensity of what had just occurred.\n\nThey lay in silence for long minutes, hearts slowing and lungs working more and more normally as sense and cognition slowly returned, until Justine mustered enough energy to smile happily at him.\n\n\"Whooo, Johnny, what did you do to me?\" she quavered, still too mind-blown for anything smarter or sassier, and Johnny, his mind equally scattered, could only gather her closer and kiss her neck, her shoulders, the base of her throat, and the shallow valley between her small, firm breasts, his kisses calming her, and him, collecting his thoughts and feelings after such a cataclysmic orgasm.\n\nJohnny smiled happily, struggling to remain awake after such a huge expenditure of energy, his arm cuddling Justine to him even as the tiredness ebbed, and strength flowed back into him. He grinned at her, once more fast asleep, tired-out after such an energetic session, checked the time, and slid carefully out of bed; while Justine slept he wanted to think about their next move and a cool shower would help him gather his thoughts. Just as he stepped into the shower, Justine slipped in next to him.\n\n\"Hi Hot-shot, what's the plan for today?\" she grinned, pinching his ass and grinning at him.\n\nJohnny yanked her under the spray-head, grinning as she gasped at the torrent of cold water.\n\n\"Listen-up, li'l gal,\" he began. \"We cain't stay here too long; this place way too close to main road; one way or 'nother they gonna come down this way, an' I shore don't wanna wait 'round fo' when they do show up; I was gonna slide over Houma way, see Maw-maw, but they idjits been there 'ready, they think we gone there they gonna show up in force, so me an' Lubin and some o' the boys gonna let them trail us down to Ghost lake, an' jump them there; I reckon what we do there gonna make them goons think twice 'bout messin' with me an' my family!\" \n\nJohnny towelled off and pulled on his shorts; right now he needed some thinking-alone time, a habit of his Justine respected, so while she set about getting them some breakfast, Johnny wandered out onto the veranda to watch the sluggish bayou while he thought. He was deep in thought, thinking about what had happened this last week, where they'd been and what they'd learned, where they were going, when Justine, dressed in nothing but boy-shorts and a light robe, snapped him out of his reverie by handing him a coffee. He smiled to see her so innocent, yet so sexy, and took a sip of the bitter brew, completely unaware that even as they stood on the veranda in the morning sunshine and sipped their coffee, a professional killer with a high-powered sniper-rifle was lining-up a head shot on him.\n\n*\n\nM\u00e9lette and Od\u00e9lie broke camp silently, brushed down the area and hid all sign they'd been there, then flitted through the woods, heading for the wooded knoll on the White Oak Trail. A hundred yards from where the trail diverged from the main road, Od\u00e9lie froze, one foot in the air, her hand up to silence M\u00e9lette. Both girls listened intently, then Od\u00e9lie made a circling gesture with her raised hand, pointing first left then right,\n\nM\u00e9lette understood immediately; the men on the knoll were on the move, moving in closer to the house, so she would circle around to the left in front of them and Od\u00e9lie would do likewise to the right, and jump them before they reached the house. Both girls set off, Od\u00e9lie with her Remington cocked and the safety off, and M\u00e9lette with an arrow nocked ready. \n\nOd\u00e9lie made contact first; about two hundred yards from the house she spotted a city thug sneaking through the woods, the reek of tobacco and overpowering cologne confirming it was one of the men from the knoll, so she circled ahead of him, clambered up into a huge old Live Oak on the trail he'd have to use, and waited for him to come blundering by.\n\nWhen he showed up, she could see he was alert for trouble, constantly scanning the terrain around him. He should have looked up. As he walked under the big branch she was crouched on, Od\u00e9lie dropped square on him, her knee between his shoulder-blades sending him flying, while his own rifle flew off somewhere into the underbrush. Od\u00e9lie clubbed him on the back of the head with her rifle-butt as he went down, and shoved her rifle muzzle up under his chin when he rolled over on his back to see who had jumped him.\n\n\"Don't you-all move less'n y'all want a big hole in yo' favorite head, boy!\" she grinned. \"This my daddy's old Remington and she got a real sensitive trigger, so you be smart, or you be dead, you hear me, boy?\"\n\nSo saying, she gave the distinctive triple 'Kee-weet, Kee-weet, Kee-weet' call of the yellow-bellied flycatcher, repeating it twice.\n\nMeanwhile, M\u00e9lette had caught up with his partner, a young man no older than herself, with what looked like an expensive, high-end, high-tech sniper rifle. She watched him cast around for a place to rest the rifle bipod for a clear shot, but finding nowhere suitable, instead took a length of rope from his pack and tied it around a tree at about shoulder-height. M\u00e9lette frowned, unable to work out just what the hell he was doing, but when he pushed the muzzle of the rifle through a loop twisted in the rope, she suddenly understood what he was up to; he was giving himself a stable rest to take his shot. \n\nAs far as M\u00e9lette was concerned, it had already gone too far; this creep was setting up a kill-shot. She realized she could clearly see Johnny and Justine on the porch, about four hundred yards away, so that meant that paid killer could as well; it was time to act. \n\nAs the man started to line up his shot, she put a razor sharp, broad-head hunting arrow through his trigger-hand, pinning it to the tree he was leaning against. The killer screamed, and as he tried to yank the deeply embedded arrow out of the tree, she shot him again, this time in the buttock. The man gave another howl as he dropped to his knees, and squealed once more as the arrow through his hand kept him hanging against the tree.\n\nM\u00e9lette grinned and stood up; scratch one killer. The sniper's eyes bugged when he saw it was a pretty little blonde girl who'd shot him and tried to grab his rifle with his uninjured free hand. Before he could reach it, M\u00e9lette was standing in front of him. He froze when she pushed the razor-sharp tip of an arrow into his nostril just far enough for him to feel how sharp it was. \n\n\"I wouldn't boy; now just you lemme see what we got here...\"\n\nWithout taking her eyes off him, M\u00e9lette unhooked his rifle and looked it up and down, and worked the bolt to eject the round in the breech.\n\n\"This look real expensive; that right, boy?\" she murmured, and when he nodded, she smiled brightly at him.\n\n\"Bet it shoots real accurate too; looks like you c'n hit purty much what you wants from a ways out, 'm I right or am I right?\"\n\nThe thug nodded fearfully, wondering where she was going with all this.\n\n\"That's just too bad, hun; I 'spose I could give this to one of the boys, but it ain't no use to them. See, they hunters, they kill to put food on the table, an' when they kill, they thank th' Lord for his bounty in providin' for their family; they don' murder from concealment. This thing here made for murderin' folks, an' that's all it was made for; there ain't no other reason for it to be; none the boys gonna want nuthin' to do with it; it's dirty, an' it's evil, an' we don' need stuff like this down here, sooo... \" \n\nWith that, and before he could blink, she'd swung the rifle by the barrel and smashed it against the tree with all her might. ABS shattered and splintered as she repeatedly slammed the sinister-looking rifle against the tree until it was just a mass of plastic shards and bent metal components. \n\n\"There, now it's clean...\" she murmured, tossing the wreckage far out into the bayou. \"Nex' thing is, I gotta deal with you, so...\"\n\nShe pulled out her huge, custom-made Randall Bowie knife, the 'Confederate' model, with its eleven-inch, razor-sharp clip-pointed blade and brass knuckle-bow, one of a pair that Johnny had given the girls for their 18th birthday, intending to cut the arrow-shaft out of his hand, but he took one look at the huge blade and fainted dead away.\n\n\"What in Sam Hill...?\" she muttered, but then shrugged; if he was out cold he wasn't going to be all squirming and crying and telling her how much it hurt, so she set to. When he came around, he found she'd zip-cuffed him securely, with his hands behind his back, taken the rope he was going to use as a stable base for his shot and tied it around his neck, then around the tree, immobilizing him, strapped his ankles together with his own belt, dressed the arrow-wounds in his hand and backside, and thrown his pants, boots and socks away. \n\nAs he focused on her, they both heard a repeated squittering bird call, and, after a pause, the sound of a rifle-shot, and M\u00e9lette smiled.\n\n\"Who are you?\" he asked, terrified. \"I saw 'Southern Comfort', I know what you people are like, please don't let your clan have me, I'll do anything you want...\"\n\nM\u00e9lette frowned and prodded him with the alloy shaft of the arrow she'd taken out of his hand.\n\n\"You lucky I'm the shy, retirin' type, or I might take offense at that! That there birdsong an' shot mean yo' friend face down in the swamp, or he wish he wus. Now you tell me sumthin'; jes' whut kinda stupid city-boy idjit are you anyway? You an' yo' fancy guns come slitherin' around here bein' all sly an' thinkin' you all that, but these here swamplands is dangerous enough for you an' yore kind without you-all lookin' to go fussin' with my folks. You lucky I got you first, ain't no tellin' what else is a-trailin' you, or even sittin' right next to you this deep in, jes' waitin' for you to do somethin' all-fired stupid; look here...\"\n\nShe whirled and raised her bow, with an arrow already nocked, and in one quick release shot another of her razor-sharp, broad-head arrows right through the huge mottled snake lying coiled up in the mound of leaf litter a few feet away from him. The arrow pinned the huge snake to the tree it was lying under, entering its neck just behind the head, a perfect shot. He shrieked as the snake thrashed around violently, unable to wrench itself free from the deeply embedded hunting arrow. \n\nM\u00e9lette grinned at her shot, winked at the helpless killer, then, carefully approaching the coiling, thrashing monster, calmly drew her huge Bowie knife and, with a two handed grip, rammed the fearsome clip-point right through the snake's skull, killing the huge creature instantly.\n\n\"What the fuck was that!?\" he shrieked, and she grinned at him.\n\n\"That there's a Ree-tic-ulated python; them idjits up New Orleans way keep them as pets; why they do that only the good Lord knows, 'tain't like we don' got enough dangerous shit roamin' aroun' out here already, where they 'spose to be, but no, they got to bring in even more, an' worse than that, too. Then Katrina come along, these damned things get loose, now they breedin' faster'n hogs in a canebrake; ain't nothing to stop 'em, even daddy 'gators shy away from them, so they grow real big. This'n ain't but a young'un, only ten, mebbe twelve feet; I seen ones near-on twice as long an' thicker'n Fat Arno's leg. I hear tell they's even spotted some Nile crocodiles North and East o' here, too, more escapees after Katrina; I dunno 'bout that, but you lucky you never meet one o' them, they huge, an' they don't hide none, they just rear right up 'n' bite you clean in half; I read somewhere that a Nile croc bites with the same force as a truck fallin' off of a cliff; be grateful there ain't none of them down this way...not yet, anyway.\"\n\nShe nudged the still thrashing and shuddering dead snake with her trail boot and grinned at him, making him quail even further.\n\n\"You still lucky I got you afore that snake did, yes sir. See, he ain't gon' eat you, but mebbe he don' like you comin' too close, so he snap out an' bite you real deep; you get bit by one o' them, you be real sick afore long.\"\n\nShe hunkered down and tapped the twitching dead snake with the flat of her huge knife.\n\n\"Thing is, they ain't poisonous, not like cottonmouths , but they got real dirty mouths, and there ain't no-one out here for to clean you up, no ant-i-biotics, so you get bit, you gon' get sick, then real sick, mebbe lose your mind a little, go wanderin' 'round, an' this a real bad place to go wandering if you ain't in your right mind; you go fallin' in the swamp, then a big ole daddy 'gator gon' come along an' take you fo' a li'l swim, stick you under some log deep-down only he know 'bout, an' wait for you to go all sof' an' sweet an' ready to eat.\" ",
        "She paused, gauging the effect her words were having on the hired killer.\n\n\"Now, you ready to answer up good, or you wanna wait until nightfall an' mebbe have a rougarou, or some big ole 'gator come find you? 'cause that real likely right now; see them drag marks over to the bank? That where a real big mama 'gator, looks like mebbe a ten-footer, come up out the bayou regular like ever' night, prolly because she got a nest somewhere 'round hyah, mebbe that big ole mound o' leaves an' such over there, an' if that the case, then she ain't too far 'way t'all right now, watchin' an' waitin' for you to leave so she can check her nest. I reckon that there snake was lookin' for that nest, too; them things smell real good, so it prolly know there a nest hereabouts, jes' packed full a' eggs an' young, an' if the nest here, then mama-gator not too far away, neither. If you look over there a ways, see that log? See how it floatin' agin the current? That's 'cause it ain't no log; that's mos' likely mama-gator, watchin' her babies an' waitin' an' bidin' her time.\"\n\nThe killer began to sneer at her for trying to scare him with such a childish ruse when the floating 'log' swivelled an eyeball and looked straight at him; anything he might have said died in his throat. M\u00e9lette sat down Indian-fashion on a pile of leaves and began collecting her stuff together.\n\n\"Daddy-gators get up to sixteen feet hereabouts, mebbe more; one o' them come looking for a easy meal an' you toast boy. Then, o' course, there's that there mama-gator out there, she find you still here tonight, near her nest, where her eggs 'n young 'uns is, she ain't gonna question why, you just gon' be easy meat fo' her, so you wanna wait fo' her, or you wanna talk to me...?\"\n\nShe watched his expression of horror widen, while she grinned to herself, and prodded him again with the alloy shaft.\n\n\"Answer up, boy, an' don' you go an' try lyin' to me. What you doin' slinkin' around out here like a animal, aimin' guns all sneaky-like at innocent folks? Jes' remember; I don' know you, an' I already don' partic'larly like you; if'n I leave you out here for the 'gators, ain't no-one gon' know 'cept me, and I ain't losin' no sleep over you, so you better start, an' if you ain't real convincin' real quick, weeelll...\" she started nonchalantly tossing twigs and pebbles at the enormous drag-marks on the bank of the bayou.\n\n\"I reckon now's about time to start doin' your Christian duty an' confessin' all for the good o' your 'mortal soul...or, you could jes' keep your mouth shut, and, come nightfall, you-all can try and talk momma 'gator out o' tearin' you in half like a syrupy biscuit; good luck with that.\"\n\nShe stood, and brushed leaf litter off her jeans.\n\n\"Now you can talk to me, or I'm leavin', I got things to do...\" \n\nThe thug's mouth clamped shut, obviously terrified of his masters, in spite of the fact he was tied half-naked to a tree in alligator-country, something M\u00e9lette saw, so she changed her tack.\n\n\"Look at it this way, boy; whatever your bosses gonna do, it gonna be sometime in the future; me, I'm here an' now, and I'm real immediate when I do somethin'; way I see it, you can tell me ever'thin' an' save yo' skin, then run where no-one ever gon' find you, let them people you works for think you-all dead, or you c'n be loyal an' stay shut an' momma 'gator gonna be all fat 'n satisfied tonight after a real good meal; I be long-gone, and there ain't no-one for miles aroun' to hear you screamin'. Think 'bout it.\"\n\nM\u00e9lette grinned widely and chomped her teeth several times, the thug twitching in time to the clicking of her teeth, and when she had his full attention, she looked up at the sun.\n\n\"You got the rest o' the day to do some thinkin', boy; I mo leave now, I for real got things to do an', an' when I gone, I ain't a-coming' back this way, so I reckon it's time to make a choice; me or mommy-gator, 'cos come dark, you jus' a stain an' a coupla drag-marks.\" \n\nShe'd slung her pack and picked up her bow when the man decided to speak.\n\n\"Please...don't leave me out here; I'll tell you anything you want to know, I swear!\"\n\nM\u00e9lette listened in growing disquiet as the hired killer told her everything she needed to know, and more.\n\n\"There's four teams working this area,\" he told her, \"me and Rico were supposed to take our shot if we could, otherwise we were supposed to link-up with at least one of the other teams and hit wherever Bastine and the girl are hiding-out, take him out, grab the girl, and take Bastine's head. \"\n\nHe looked up in alarm when Od\u00e9lie appeared from behind a tree, her rifle pointed right at him and her finger quivering on the trigger, but he carried on at M\u00e9lette's nod.\n\n\"There's a bounty on the big guy, a million dollars; he musta really burned the Ribeiro's, they're a pair of crazy fucks and right now they're foamin' at the mouth; they're madder'n shit, and they got a real hard-on for John Bastine; they want him dead, now, and they want his head as proof of death; both brothers were real definite about that; John Bastine's gotta die. We have to bring the girl back alive, though; the brothers were just as definite about that, too; alive and unharmed; she's some kind of looker, and Joao Ribeiro's got plans for her; he likes 'em young.\"\n\nM\u00e9lette scowled angrily, jumping to her feet and unsheathing her huge Bowie knife.\n\n\"I was kinda feelin' almos' sorry for you, boy, I thought mebbe I could let you go and you jes' run, you ain't actually done nuthin' yet, but now I know for sure you a murdering scum-bag sonuvawhore, so now you bosses gonna get theyselves a head; I mo' carve you like a Halloween pumpkin, boy, an' them gators out there gettin' a free feed! You fucken' dead, boy, you-all just made my mind up for me...!\" \n\nThe man cowered back from the sheer venomous fury distorting the little blonde's face, but the brunette girl stepped in front of her, blocking her way, without once taking her bead off the hired killer's forehead.\n\n\"Back off Mel, this piece o' shit got more talkin' to do! An' you!\" she barked at the trembling man, \"the rest of it, start talkin' or I mo' put a .22 Accu-Tip slug through yo' face, jes' like I done with yo' frien'. You talk, or you die, now!\" \n\nThe thug's face paled at the fury glowing in the little brunette's eyes.\n\n\"Where...what...Rico...\" he stammered, making a spirited attempt to dig his way into the tree with his shoulder-blades when Od\u00e9lie pushed the rifle's muzzle up against his forehead.\n\n\"Yo' frien' tried goin' fo' his shoulder-holster, which was kinda stupid, what with me pointin' this big ole thing at him an' all, mebbe you Noo Yawk killers all stupid as that, so I guess I gave him what he knew was comin'. You wanna make a stab at doin' sumthin' stupid, boy?\" \n\nThe thug gulped.\n\n\"What did you do to him...?\" and Od\u00e9lie grinned bleakly at him.\n\n\"He face down in the bayou with a hole in back of his head you can shove your foot in; he takin' a slow trip to the Gulf, 'less the 'gators get to him first, an' you gonna join him if'n you-all don' start talking real fast an' detailed.\"\n\nThe man knew when to give up; these two girls might look like pretty little things, but they'd just proved how merciless they could be, and so he talked, because he wasn't stupid, and he wanted to live.\n\n*\n\nJohnny crouched behind the Cottonwood at the side of the house, Justine flat on the ground behind him as he scanned the area carefully; they'd both heard the sharp crack of a small calibre rifle several hundred yards away to the North and West, and his first thought was that Od\u00e9lie had fired that shot. If that was the case, trouble was up; she never wasted ammo, so she would have had a definite target in sight. \n\nNothing further had transpired, but caution had seemed in called-for, so now Justine and he were concealed away from the house, ready for whatever showed up. \n\nA movement away up in the underbrush caught his eye, followed by a glint of light reflected off a binocular lens, and a piercing whistle. Johnny grinned and straightened up, patting Justine on the shoulder as he did so.\n\n\"Let's go, Minou; looks like them two li'l gals got themselves a new friend! Let's go be neighborly, what you think?\"\n\nJustine smiled back bravely, but Johnny saw the white knuckles, the lines etching themselves at the corners of her mouth, the hunted look in her eyes, and realized just how frightened she was. His elation died away, and he cursed himself for bringing all this down on her, for dragging his baby sister halfway across the country because his rage and lack of self-control had broken through yet again.\n\n\"Baby,\" he drawled softly, \"I'm sorry for this, I'm sorry for ever'thin', for draggin' you 'round like all this your fault, mebbe I should jest get you to Dallas an' on a flight outta here, somewhere safe they can't find you, an' me an' my folks take care o' business here once't an' for all; this ain't your fault, honey, an' it ain't yo fight, I jes' drag you into it, and I'm purely sorry I did, but I can make it right, Minou, I can make you safe, and keep them scum a long way an' a painful road away from you. I 'pologize most sincerely for endangerin' you, if I send you somewhere I know you safe, I can clean this up for good, then I'll come get you, I swear on mama's heart.\"\n\nJustine smiled at his solemn expression, and reached out to prod him gently on the tip of his nose.\n\n\"Johnny-Bear, being with you, all of this, has been the best time of my life; I've never felt more alive; when any moment could be our last, that's when my life with you makes the most sense, and seems the most perfect of all. This IS my fight, because you're mine, and I'm not going anywhere without you; do you think I could live for a single minute not knowing if you were dead or alive? Do you really think I could scuttle away with my tail between my legs, and leave you to face this alone? We're a team, Johnny-Bear, you're my other half, and I won't live without you; I swear to God, I will fight alongside you, I will be there with you when the last man is standing, and I will go down fighting for you, because you'd do that for me. I love you, Jean-Basti\u00e8nne Doucette, and I'll never leave you.\" \n\nJohnny stared at her, taking her in, her sincerity, the set of her jaw, and swept her into his arms, his lips crushing hers even as her fingers twined in his hair, pulling him into her, kissing him as eagerly, as fervently as he kissed her. How long they stood like that they never knew, only breaking their kiss when a discreet throat-clearing jarred them back to reality.\n\nJohnny spun around, his face reddening at the sly smile on M\u00e9lette's pretty face.\n\n\"You folks need some time alone? I c'n come back some other time...\" she grinned, taking in their general state of undress, and her smile widened as Johnny slowly blushed a deep beetroot. Justine grinned back at her, totally unabashed.\n\n\"No, now's good, Johnny just needed to hear a couple things, so we're good now!\" she giggled, and M\u00e9lette's arch expression sent Johnny into a fresh fit of blushing.\n\n\"When you kids done playin' 'kissy-feelie', Odie 'n' me got someone stashed up by the ole hollow coon-stump you might wanna have a little heart-to-heart with; we bin eddicating him properly on whut happens to idjits come bargin' in where they ain't wanted an' try an' kill folks, we softened him up some, but you might wanna work some o' that ole Swamp-Thing magic on him, he 'bout ready to pee his pants at the thought o' meetin' my 'clan', so look scary John-boy, batter-up!\" \n\nJohnny looked closely at her.\n\n\"Only one? What was that shot we heard while back?\"\n\n\"Odie jumped th'other one, he got cute, now he swimmin' down to Lake Barre, 'course he doin' it kinda slow, on account o' havin' a big ole hole where the back o' his head useta be; serve him right thinking a hideaway gun a match for a loaded Remmy when Odie pointin' it at him. Way the current's runnin', he should be about down to Leeville by tomorrow, 'less the 'gators an' catfish get to him first...\" \n\nJohnny grinned at her innocent expression.\n\n\"Noncle Lubin sure was right 'bout both o' you; you a pair a hellions for sure! Get on the horn an' get a hold o' Randy Broussard; it's 'bout time the law get involved.\"\n\n*\n\nEulalie Deaucette, Johnny's grandmother, Maw-maw to rest of the family, frowned at the large, blacked-out SUV creeping down along Route 56, the Little Caillou Road. Somehow she knew they were heading for her home, and it didn't look like they were paying a neighbourly call either. A quick glance back at the porch to check her 12-guage was still stashed just inside the door, and she wiped her hands on her apron. Looked like that trouble \n\nJacques Broussard had told her about was here. \n\nWell, if they wanted trouble, she knew where a heap of it was laying around just waiting for people like them, so she stood on her porch and watched the large vehicle slow to a stop. The doors swung open and two men in brand new, tailored khakis, with fishing vests and new boonie-hats, with large, automatic pistols stuck in their waistbands, sauntered up to the porch.\n\n\"Hello the house!\" called out one of them, smirking at the sight of the little old woman glaring at them. \"Would you be Mrs. Deaucette, by any chance?\" \n\n\"Who wants to know?\" replied Maw-maw, her frown intensifying when one of the men grinned insolently at her.\n\n\"You are Mrs. Deaucette, old woman, don't bother denying it, we already know who you are, but hey, bein' polite don't cost nothing, right? We know who you are, we got no beef with you, we just wanna know where that big ugly fucking idiot John Bastine's hiding; you tell us, there'll be no unpleasantness, we'll just be on our way, no fussing, an' we won't trouble you again. 'Course, if you're gonna be difficult about things, well, we've got ways of dealing with that too. Answer up, old woman; where is he?\"  \n\nHe made as if to draw the pistol in his pant's waistband, but froze when a male voice rang out.\n\n\"Drop the weapons and put your hands on your heads!\" \n\nThe second thug whirled, tugging the handgun from his waistband as he spun; there was a sharp *pop!*, the sound of a suppressed rifle-shot, and he dropped to the ground clutching his arm, blood seeping between his fingers and pooling around him.\n\n\"Next one's a head-shot! Move those hands and it's yours, now DROP YOUR WEAPON!\"\n\nThe thug carefully laid the handgun on the ground, straightened up, and stared at the heavily armed soldier in full OCP battledress and IOTV body armor, complete with pushed-up night-vision goggles mounted on his helmet, who'd appeared seemingly out of nowhere, pointing an M4 carbine with an underslung grenade-launcher right at his face. \n\n\"On your knees; NOW!\" commanded the soldier, a sergeant, and when the thug complied, another soldier appeared out of the roadside foliage, planted his boot in the middle of the thug's back and pushed him flat on his face, yanked his arms up behind him, and zip-cuffed him several times. Another soldier did the same to the wounded man, and retrieved his dropped handgun before he got any ideas. \n\n\"Move a muscle and you're dead, you pair of fucks! Be good and you'll get to live, and if you think I'm joking, make a move...\" he muttered. The prone men gabbled their surrender, and the soldiers covering them hauled them to their feet. \n\n\"See, that was easy, wasn't it!\"\n\nThe sergeant tipped back his helmet, pulled off his Oakley sunglasses and grinned at Maw-maw, while his men ransacked the SUV and piled all the weapons they found in the yard.\n\n\"Sergeant Everett Jones, ma'am, USASOC out of Fort Benning; we're on manoeuvres with the Louisiana Army National Guard, ma'am; my colonel thought we needed to sharpen-up our training, and a couple of your Johnny's friends asked us to come make sure these animals left you in peace, so we linked-up with the local National Guard unit and came on down. If you need any further assistance, ma'am, we're in the vicinity, and we'll keep watch for any more of these dirtbags.\"\n\nMaw-maw stared at him.\n\n\"Jean-Basti\u00e8nne got friends in th'army? Who-all sent you?\"\n\nSergeant Jones grinned. \n\n\"Ma'am, it was Miss Angel Graves and Miss Cassandra Matthews; I think you already know Miss Cassie's husband, Robin, he said he'd spoken with you. They're friends of the regiment, and what they ask, we do; it was our pleasure, ma'am, and Miss Angel said we were to stay close by 'til this is all over and done, she was quite definite about that! I'll take these two hyenas into town and drop them off with Sheriff Broussard; the one I shot isn't as bad hurt as he thinks, he'll live long enough to face a judge, and a few of the boys will kinda lay-up here and there and see you safe. Any more of these dirtbags show up, we'll clean them out for you, I have my orders direct from Miss Angel, an' I intend to carry them out! Now, if you'll excuse me...\"\n\nWith that, a group of soldiers appeared out of the underbrush where Maw-maw would have sworn no-one was hiding, and a Humvee likewise appeared out of nowhere. The soldiers lifted the two prisoners into the vehicle, collected the pile of guns and magazines, and dumped them in the back of the vehicle. \n\n\"First bayou we come to, we'll drop this lot in there, somewhere nice and deep, ma'am!\" grinned Sergeant Jones, and with a last wave, climbed in the Humvee and drove away, while the remaining soldiers drifted back into the underbrush and disappeared.\n\nMaw-maw scratched her head in wonder. Did all that just happen? It must have done; one look at the bloodstain in the yard confirmed it. Maw-maw shook her head, grinning.\n\n\"Whut kinda frien's you-all got these days, John-Boy...?\" she mused as she went back inside to get a bucket and some lye to wash down the yard."
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brother",
        "sister",
        "incest",
        "anal",
        "sniper",
        "m\u00e9lette & od\u00e9lie",
        "twins"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/down-at-the-twist-and-shout-ch-04"
}