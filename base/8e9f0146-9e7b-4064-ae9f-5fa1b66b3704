{
    "title": "Becca XXX Ch. 16 - The Final Chapter",
    "pages": [
        "Authors note:- This is a follow on to the previous chapters of Becca Xxx. Please read them before reading this or you will not understand the plot or characters. \n\n\"Comms check.\" \n\n\"Becca checking in.\" \n\n\"Lexa checking in.\" \n\n\"Jock checking in.\" \n\n\"Virg checking in.\" \n\n\"Hayward checking in.\" \n\n\"Lance checking in.\" \n\n\"This is Tony. All received loud and clear. Mission is a go.\" \n\nI'd never have thought that an almost invisible piece of plastic stuffed in my ear would give such crystal clear clarity. It looked like a tiny in-ear hearing aid, but Hayward had explained that I would be able to hear the whole team and they would be able to hear me as if we were standing next to each other. He wasn't wrong. \n\nI stood with Lexa waiting to be picked up by the cleaners minibus for our infiltration into Sanchez's compound. This was make or break for the mission. If we got discovered trying to get in disguised as cleaners the mission would be over before it even began and Lexa and I would be killed or worse. Having been gang raped in Sanchez's cellar in Spain I knew what mission failure meant all too well. \n\nIt was roasting hot standing at the side of the road wearing a black robe and hijab. The loose fitting face veil also made it hotter, as my warm breath bounced off the sheer fabric and wet my face with steamy moisture. I was sweating buckets and I didn't know if it was from the heat or from fear. Lexa seemed cool on the outside and I guessed she'd done this hundreds of times. I was glad she was with me on this one. \n\nJock was on the lookout hill above the compound and was acting as a sniper if things went really wrong. He would also be our eyes and would warn of any potential threats once we were inside, from his higher vantage point. \n\nTony and the rest of the team were in the jeep ready to follow on as back up and get us out of there if we got detected at the main entrance. \n\nThe minibus approached in a cloud of dust down the main road, amongst the hustle and bustle of traffic and people. The other six cleaners moved towards the edge of the kerb, ready to board their work transportation. None of them spoke to each other which was good for us, as I would have stuck out a mile not speaking the local language well enough to hold a conversation. They all kept their heads held low like life was getting the better of them. Working for Sanchez and being abused by his guards was obviously not their idea of a great day out. \n\nWe all boarded the minibus and I heard Tony in my ear. \n\n\"Girls are on route Jock.\" \n\n\"Roger that.\" \n\nI looked round to see if anyone had heard the voice in my ear but there was no way they could have. I was being paranoid due to the fact I had never done something like this before. My heart was pounding like a jack hammer and I had to control my breathing and my mind to stop me from going into a panic. \n\n'You're a down trodden cleaner on your way to work,' I tried to convince myself. \n\nLexa put her hand on my thigh and squeezed gently, but kept looking straight ahead. She knew I was nervous and a friendly squeeze made all the difference. \n\nWe'd all spent the morning preparing for the mission and going through procedures and communication drills. Lexa and Tony had given me some extra combat training and explained how I could make someone unconscious a little more easily. Most of my previous training had been all about self-defence albeit quite advanced, but tonight I'd be needing to be on the offence. It was a welcome distraction and we role played some scenarios for taking out the two guards on the gate. \n\nThe Grey Ghosts had spent their time preparing weapons and I noticed they were using different sub machine guns to the one Tony had used at the villa in Spain. These looked more sophisticated and were all fitted with long cigar shaped silencers so they could remain stealthy. As always on a mission like this, surprise and concealment were our biggest weapons. If no one knew we were there, we wouldn't even need to fight. I hoped that would be the case, but I doubted it. \n\nAfter a mission briefing, food and water we had all got dressed into our local gear. Lexa and I had worn the cleaners uniforms and the Grey Ghosts had gotten dressed into grey combat gear and body armour and I guessed that's where they got their name from. They wore local robes and a turban over the top so they could go un-noticed until they assaulted the compound later that evening. \n\nIt took thirty minutes to get to the compounds main entrance and Tony hung back out of sight in the jeep. Only Jock could see what was going on from the hilltop. \n\n\"I've got eyes on the minibus,\" came Jocks voice in my ear. \"Stand by.\" \n\nOur transportation rolled to a halt and one the of guards looked in to the vehicle. I watched him visually count how many of us there were and he gestured for us to get out. We followed the lead of the other cleaners and copied their mannerisms and movements. \n\nThe guard banged on the roof and the minibus turned and left us in a cloud of dust and diesel fumes. \n\n\"This way,\" said the guard, in surprisingly good English. \n\nMost of the guards in Spain had spoken English and I wondered where Sanchez had done his recruiting. I counted six guards on the main entrance all heavily armed with Scorpion sub machine guns like they had been in Spain. We were ushered through into some sort of holding area so we could be searched. I braced myself for a groping like the cleaners we were impersonating, had warned us about and I hoped we wouldn't be taken away for fun and games with the guards. We needed to get a move on and find the girls. \n\nLexa and I were behind three other girls and we watched them get searched. The lecherous looks on the guards faces filled me with dread and it must have had the same effect on the rest of them. We all had our face veils on and heads down hoping we wouldn't be interfered with too much. \n\nThe first girl held her hands out to her sides like you do when you get frisked. She was patted down from head to toe and felt up around her breasts and ass. I watched the guard push his fingers into her ass crack and the girl squeaked in protest as he pushed against her asshole through her uniform. The guard laughed and passed her through security where she waited patiently for the rest of us. \n\nThe second girl was not quite so lucky. After a pat down the guard seemed to like the look of this one and called two of his friends over. I soon figured out why. As they turned her around I saw she had very big boobs and the guards took it in turns to feel them, squeezing them hard and jeering. She was young and pretty and didn't like the attention she was getting. Eventually they got bored and she was passed through. \n\nThe next girl got similar treatment with the addition of having a guard force a kiss onto her. She let him get on with it, probably fearing a beating if she didn't. Another guard slipped his hand up her robe and I guessed he was playing with her pussy from the look on her face. He pulled his hand back out and sniffed his fingers, smiling at the result. \n\nLexa was next. The assaults seemed to be getting worse as they went down the line and I feared we were about to be fucked or forced to suck them off. We didn't have time for any of that. She was frisked and fondled and had a hand up her robe like the previous girl, but that was all. She took it all in her stride. \n\nI stepped forward and was patted down. Three pairs of hands were on my tight young body and they smiled at each other. I felt hands on my tits and ass like a cow being examined at a fair to see what the meat quality was like. A hand slipped up my robe and started to worm its way into my panty crotch. I willed myself not to be wet, but I knew I already was. Another hand followed suit and they fought for who was going to finger me first inside my panties. In the end they both stuffed a finger inside me roughly and laughed at my humiliation. They started to tug my knickers down and I feared the worse. \n\nSuddenly there was a bark of orders from behind me and another guard appeared who seemed to be in charge. \n\nHe spoke in Algerian and I couldn't understand a word of what he said, but the guards let me go and I was pushed through to join the others. \n\nThe head guard gabbled away at the three assaulters and they quickly checked the next two women who were also put through with us. He looked the last one up and down and said something else which made the girl look up wide eyed and frightened. She was dragged off into the guard house and we were ushered away. \n\nI turned back briefly to see the head guard undoing his zipper as he followed her in. \n\n\"What did he say?\" I asked Lexa under my breath. \n\n\"You don't want to know,\" she whispered back. \n\n\"I do. Tell me.\" \n\n\"He said they only need one girl and to just pick the one at the back and stop messing about. He said all of our mouths do the same thing so it didn't make any difference. Then he asked the girl if she was thirsty because she was going to be drinking a six man milkshake,\" whispered Lexa, making sure no one could hear her. \n\n\"Sick mother fuckers,\" I said, turning back to see what was happening to her. \n\n\"Leave it Becca,\" whispered Lexa, trying to calm me down. \"Stay on mission.\" \n\nShe was right, there was nothing I could have done. We just had to prevent it from happening to anyone else by taking Sanchez out of the picture. If we removed the leader then the organisation would be over. \n\n\"They're in,\" said Jock in my ear. \n\n\"Roger that,\" said Tony. \n\nOnce we were into the compound there seemed to be less guards. I could see two on each of the four corner turrets and a few milling about the grounds. The sandstone walls towered above us, but the grounds inside were quite spacious. There were numerous small buildings and Sanchez's helicopter was visible on its landing pad near the beach, which meant he was still there. \n\nWe followed the rest of the cleaners to a cupboard and were each given a cleaners trolley fitted out with a brush, mop and cleaning products. The girls headed off in pairs to wherever they were allocated and I followed Lexa, adjusting my sodden knickers back into place. They were soaked with sweat and now my sex juices from the guards over amorous attentions. It didn't matter that I was in a dangerous situation, having two guys fight over my pussy had turned me on. \n\n\"Head for the inner wall into the pool area,\" said Jock. \n\nHe must have been able to see us from the hilltop. \n\n\"Roget that,\" I whispered. \n\nWe walked about fifty metres and were met by two more guys, guarding the entrance to the hareem area. They seemed less rapey than the ones on the main entrance and just let us in. \n\nOnce we were in we saw scantily clad bikini girls all around the pool. I saw Aggie and Sara sunbathing and it took all my inner strength not to run over to them and give them a hug. We didn't want to bring attention to ourselves. Ideally I needed to find Tammy who would be the most level headed about it all . I could hardly have Sara swearing away and getting excited at meeting a couple of cleaners even if there was an absence of guards in this area. \n\n\"We're in the hareem area,\" said Lexa, for the benefit of the rest of the team. \n\n\"Roger that.\" \n\nWe walked to the nearest building as though we were going in to clean the toilets. It was cooler in the plush air conditioned corridor and we walked along the terracotta stone flooring to find the dormitory. It didn't take long. \n\nThe third door on the left was open and we heard chatting and girlish laughter. We entered and some of the girls turned to see who it was. When they realised it was just the cleaners they turned back to what they were doing. Mostly it was hair and makeup or nails or just chatting and joking. Despite being held captive they seemed in good spirits. I suddenly understood the term \"smelling like a hareem or a brothel\", the whole room smelt of women. It was fragrant with perfume, lotions and potions and the undertone of female pheromones. It was instant hard-on territory for any man who entered. \n\nWe moved through the dormitory which was fitted out with twelve beds. I eventually found Tammy lying on hers wearing only her bikini bottoms. I slipped in next to her and quickly removed my hijab to show her my face. \n\n\"Tammy keep quiet, it's me Becca,\" I said softly. \n\n\"Becca? What the fuck? Master Sanchez told us you went home,\" she said, looking shocked. \n\n\"Home? Fucking dead more like.\" \n\n\"You should have stayed away Becca. Master Sanchez is keeping us here against our will. He wants to marry us like he did that girl, Alice. He's a psychopath,\" she said sounding frantic. \n\n\"Don't worry. It's going to be ok. I'm not who you think I am,\" I said, looking her in the eyes. \"I'm here to get you all out of here.\" \n\n\"What?...What do you mean?...Who are you then?\" she asked, looking over at Lexa who was keeping an eye out with her trolley. \n\nI gave her a brief hug. \n\n\"I'm an undercover operative trying to bring down a people trafficking network. Sanchez is the prime target.\" \n\n\"You're shitting me?\" she gasped. \n\n\"No. I'm deadly serious. He's a murderer, a rapist, a criminal and he's also linked to terrorism. We are here to get you out. Tonight, but we've got to keep everyone calm,\" I said in a normal tone. \n\nHer face went blank as she took it all in. \n\n\"I never suspected you were undercover, holy shit Becca, what the fuck?\" \n\n\"There's time to explain later, but I've got things I need you to help me with first. How many guards come in here and how often?\" \n\n\"They never come past the walled area, they're not allowed. Only master Sanchez is allowed in here unless there's a problem.\" \n\n\"That's good news. How well have you gotten to know the rest of the girls,\" I asked. \n\n\"Pretty well. It's like a permanent slumber party in here, with us all being in the same dormitory, but no-one wants to stay. Master Sanchez isn't a very nice person when it comes to sex.\" \n\n\"No shit. I've seen it and felt it first hand,\" I said. \"I need two trustworthy girls who want to get out of here dressed in our clothes. The rest of the cleaners will be leaving in about an hour and there needs to be eight of them in total. We're staying behind,\" I nodded in Lexa's direction. \n\nTammy thought for a moment. She seemed to have a level head about it all and wasn't panicking like some of the others might. \n\n\"I'd say Samantha and Louise. They can play it pretty cool and they're a similar build to the two of you,\" she replied. \n\n\"Excellent. Can you go and get them and we'll do the change now before the guards get suspicious.\" \n\nTammy walked over to a group of girls and started to chat to them. Lexa stood next to me. \n\n\"So far so good,\" she said. \n\n\"Yeah I knew I could count on Tammy. She showed me the ropes at the first G-spot club.\" \n\nTony and the rest of the team would have heard everything we said over the comms network. There was no need to report in and have unnecessary chatter over the airwaves even though our network was secure. \n\nThe room was spacious and the beds were laid out down both walls like a military barracks. Each girl had their own wardrobe and space , but not much of it. The bed covers matched their allocated colour. Mine would have been lime green if I'd made it this far. Tammy's was still blue. \n\nTammy came back with two girls side by side and sat on the bed. \n\n\"Becca this is Samantha and Louise,\" she said. \"And this is...sorry...I didn't get your name,\" she said to Lexa. \n\n\"I'm Lexa,\" she said. \n\n\"Nice to meet you.\" \n\n\"And you.\" \n\n\"We hate it here,\" said Samantha in a husky voice. \"I'm sure I've got a permanent throat injury from that bastard ramming his cock down my throat. If you can get us out of here tonight we're both up for it.\" \n\n\"The sooner the better,\" said Louise. \n\n\"How long have you been here?\" asked Lexa. \n\n\"I lose track of time, but I'd say about ten months,\" said Louise. \"We were the first ones he took for marriage.\" \n\n\"That you know of,\" I added. \"He's murdered god knows how many others and buried them in the hills at his villa in Spain.\" \n\n\"Oh my god,\" said Tammy. \n\n\"Can we swap clothes,\" interrupted Lexa. \"We've got work to do.\" \n\n\"Sorry yes,\" said Sammy. \n\nBoth girls stood up and took off what little clothing they were wearing. Lexa and I wriggled out of our robes and hijabs and stripped down to be completely naked. My knickers hit the floor with a wet slap and Sammy looked down at them. \n\n\"I think I'll put my own panties on, if that's ok,\" she giggled. \n\n\"Yeah. I don't blame you. It's mostly sweat, but the guards tried it on at the gate and got me a little aroused,\" I joked. \n\nI gave both girls a quick glance over seeming as I loved the female form. \n\nSammy was a similar build to me and had long black hair. Her eyes were deep and sexy and she had very plump lips. No wonder Sanchez liked fucking her face, she was very pretty. Her tits were small but nicely formed with small pink nipples. She had a cute ass, which wobbled slightly as she got undressed. She bent over in front of me to pick up her clothes and I got an eyeful of her puffy labia. If I'd had more time I'd have liked to spend the night with a her to see how she matched up, but we were pressed for time. \n\nLouise was similar but with bigger boobs and ass. She was a similar build and look to Lexa, but had a very hairy pussy. She'd trimmed her bikini line but had a large black bush covering the goods between her legs. It didn't look appealing to me, but maybe Sanchez liked a bit of variety in a modern world where all girls seemed to be bald down there, myself included. \n\nI briefly enjoyed the cool air around my naked skin before taking the clothing from Sammy. I slid on her red bikini bottoms and felt the warmth of her body on them as I adjusted them into place. They felt a little damp. The fact that they had been brushing against her pussy seconds before made my nipples hard. I put the bikini top on and then the beach skirt she'd been wearing. \n\nLexa followed suit and squeezed herself into Louise's yellow swim suit and shorts. \n\nThe girls put on our cleaner uniforms and looked less than pleased about it. \n\n\"I know. It's not the greatest fashion sense, but it will get you out of here,\" I gave them a knowing look. \n\n\"What do we do now?\" asked Sammy. \n\n\"Do some cleaning in the hareem block until just before six thirty and then head back to the cleaners cupboard. Do you know where it is?\" \n\n\"Yes. I've seen it before,\" she said. \n\n\"Great. Then keep you face veil on and follow the rest of the cleaners back to the minibus. Don't talk to anyone. When you get back to town they'll be a sand coloured jeep with three men inside ready to take you back to safety. Just do as they say. The rest of us will be out later tonight if all goes well. Do you understand?\" I asked. \n\nThey both nodded and headed for the cleaning trolleys. They walked off together to find something to clean. I only hoped they would make it out without being discovered and blowing our cover. \n\n\"Clothes exchange is complete Tony,\" I said. \n\n\"Roget that. We heard it all. Sammy and Louise will be picked up and taken to the boat. Stay safe and await further instructions,\" he replied on my ear. \n\n\"Roger that.\" \n\n\"Fucking hell Becca, you sound like a professional hitman or something,\" said Tammy. \n\n\"Not quite, but the guys coming in to rescue us are. We're waiting for it to get dark. What can we do until then? We need to stay out of sight of Sanchez in case he recognises me.\" \n\n\"We eat, drink, sleep, sunbath and chat. That's about all there is to do around here,\" she said. \n\nJust as she finished her sentence I heard a familiar voice behind me. \n\n\"Fucking hell. You dirty little bitch! What the fuck are you fucking doing here?\" ",
        "\"Sara,\" I said, without even seeing her. I'd recognise her potty mouth anywhere. \n\nI turned to see her launching herself at me with her arms out. She hugged me tightly and gave me a big kiss. \n\n\"Keep it down,\" I whispered. \"Sanchez cannot know I'm here.\" \n\nAggie was close behind her and we repeated the girly hugs. \n\nI introduced Lexa and explained the situation to both of them and they stood open mouthed. \n\n\"No fucking way,\" was Sara's response. \n\n\"Yes fucking way. Where's Chole?\" I asked. \n\n\"She's with Alice in the sitting area. Come on I'll show you,\" said Aggie looking a little concerned. \n\n\"What's wrong?\" I asked, picking up on something being wrong. \n\n\"You'll see,\" said Aggie. \n\nWe walked down the corridor to a common sitting area with bean bags and tv's. It looked modern and comfortable. Alice and Chloe were sitting on the bean bags and I immediately saw why Aggie had concern in her voice. \n\n\"Did Sanchez do that to you?\" I asked looking at Choles black eye and split lip. \n\n\"Becca? What are you doing here?\" she said though her swollen lips. \n\n\"I'll explain later. What happened to you?\" \n\n\"Yes it was master Sanchez. He hit me...a few times.\" \n\n\"Cunt. Why did he do that?\" said Lexa, with venom in her voice. \n\n\"Sorry...who's this?\" asked Chloe, looking puzzled at Lexa's presence. \n\n\"I'll explain later. Why did he hit you?\" \n\n\"When we were back in Spain he told us you'd changed your mind and that you'd gone back home. I didn't believe him and argued about it and he went berserk and punched me in the face a couple of times,\" she said, angrily. \n\nHer eye was badly swollen and deep purple and her lips were red and puffy. She looked a mess and I instantly saw red. \n\n\"Fucking girl beating bastard. He's going to get what's coming to him tonight,\" I spat. \n\n\"Best of it was he fucked me that same night. He constantly told me how ugly I looked the whole time he was fucking me. He kept saying no one would ever want to fuck me again after he was finished with me. I'd not felt that scared since...well you know.\" \n\nI did know. She'd once told me about her younger days and her bad experiences with men when she first became a hooker. \n\nAlice was comforting her and smiled at me. \n\n\"Tony says hi,\" I said to her. \n\n\"I knew he'd come for us,\" she smiled. \n\nAfter more explaining I finally began to relax. The word spread pretty quickly to the rest of the girls and I sat down with Tammy, Aggie, Chloe, Sara and Alice to brief them about what was going to happen that night. My girls listened intently and agreed to get all the others into the dormitory by nightfall, ready for extraction. \n\n\"Oh fuck!\" said Tammy, suddenly having a revelation. \n\n\"What is it?\" asked Lexa. \n\n\"There's a rota for master Sanchez. It tells us who he wants each night and tonight is supposed to be massage night. He's expecting Louise and Samantha on his special massage table,\" she said. \n\n\"What's your point?\" I asked. \n\n\"We've just let Samantha and Louise go and master Sanchez will be expecting them at nine o'clock in his quarters,\" said Tammy looking worried. \n\n\"Shit. He's going to wonder where they are!\" I said. \n\nWe were silent for a moment trying to think of a solution. \n\n\"It maybe ok if it's massage night,\" said Tammy. \n\n\"How So?\" \n\n\"His massage consists of him lying face down on a special table.\" \n\n\"What's special about it?\" I asked. \n\n\"It has a hole cut out of it for him to stick his cock through, like a glory hole but with him lying down. He has one girl give him a normal massage and the other goes under the table and sucks his cock. He says it's the most relaxing massage a man can get,\" she said. \n\n\"So if he's lying face down he may not know who is actually doing it to him,\" I picked up on where she was going with it. \n\nLexa and I looked at each other and she got straight on the comms network. \n\n\"Tony. Potential opportunity to take out Sanchez,\" she said into thin air. \n\n\"Go ahead,\" said Tony. \n\n\"The two girls we have just let go are expected in Sanchez's quarters tonight. I see an opportunity here.\" \n\n\"I know what you're thinking, but it's risky.\" \n\n\"I think me and Becca can subdue Sanchez before you get in here. It will make the escape a lot easier. The guards don't check anything inside the inner walled area so once we've got him knocked out, all we have to do is let you guys in to finish the job and get us to the transport without being compromised,\" she said. \n\n\"How confident are you that its possible?\" he asked. \n\nI butted in. \n\n\"She almost choked me out last night when we were...playing,\" I added, realising I'd probably given too much detail. \n\nThere was silence in my ear for a minute. \n\n\"I told you I liked these two,\" laughed Jock. \n\n\"Keep the chatter down,\" said Tony. \"Lexa, Becca if you can take him down quietly, do it.\" \n\n\"Roget that,\" I replied. \n\nI turned to the girls. \n\n\"Looks like I need to get ready to suck Sanchez's cock again,\" I giggled. \"What do Sammy and Louise usually wear?\" \n\n\"Check out their wardrobes,\" said Aggie. \"Master Sanchez likes us to dress like sluts, you should know that by now.\" \n\n\"Well we've got about four fucking hours until then,\" swore Sara. \"No-one's going to suspect you if you stay out of sight around the pool. Master Sanchez will be in his villa conducting his business until he wants you at nine. We might as well go and fucking sunbath and relax for a few hours.\" \n\nWe didn't need telling twice. Lexa and I both smiled at each other and followed the other girls out to the pool. It was like an oasis out there compared to the barren sand landscape surrounding the compound. We were soon stripped off down to our bikini bottoms and sprawled out on sun loungers. We had picked a secluded corner amongst the palm trees just in case Sanchez decided to walk through and recognised me. \n\nThere was a welcome breeze coming off the shimmering sea which stretched out in front of us. All the girls seemed to be sunbathing or swimming in the free form swimming pool to cool off. The place was idyllic, but there was an underlying atmosphere of discontent among the girls. In normal circumstances the place was paradise, but I could tell no one wanted to be there. It wasn't difficult to understand why knowing how violent and unpredictable Sanchez was. \n\nThere were about another dozen girls around the pool not including my four friends. Each one was stunning in their own way and I would have gone to bed with any of them given half a chance. Months of undercover work had turned me into a wanton slut and I craved sex all the time, whether it was with a man or a woman, forced or consensual, rough or loving, I didn't care as long as my desires were satisfied. The thought of sucking off Sanchez again was a bonus to me. I knew he had a big cock and after I'd teased him under the massage table I knew he'd give me the prize I so desperately craved. \n\n\"It's all relaxed and sexy in paradise,\" said Jock in my ear, over the network. \n\n\"Roger that,\" said Tony. \n\n\"My view is pretty spectacular,\" Jock continued. \n\nHe was enjoying the scene before him, probably zoomed in with binoculars or his sniper scope. Almost twenty gorgeous topless prostitutes for him to enjoy. \n\n\"Roger that. Keep the chatter down,\" said Tony. \n\n**** \n\nA few hours later I heard Lance and Hayward on the comms network. They had picked up the girls from the minibus and were taking them back to the boat. Lexa and I decided to take a shower and get ready for our liaison with Sanchez. We'd already discussed the plan and it was now just a matter of waiting to be called in to suck his cock and massage him on his special table. \n\nI wore red lace panties which let my ass cheeks hang out and a matching bra. I also wore a head dress with see though veil to try and hide my looks from him even though I was similar looking to Sammy. I looked like a middle eastern belly dancer and smelled shower fresh. It was nice to shower with soap for a change and wear slutty makeup to set off my eyes. \n\nLexa wore the same, but her colour was yellow and she looked absolutely gorgeous. We just hoped Sanchez wouldn't look at us too much during the massage. I doubted he'd even lift his head. We were there just to service his needs like fuck meat and that's all we were to him. He wouldn't know what hit him. \n\nIt was getting dark outside as we approached the most dangerous part of the mission. The Grey Ghosts would be on their way and would be stealing some large transport to pick us all up once we had escaped. \n\n\"Guard postings have decreased to one per tower,\" said Jock over the net. \n\n\"Same as last night then,\" said Tony. \n\nThey had both observed the guards movements while I'd been in bed licking Lexa's pussy the previous night. One guard per tower would make it easier for Jock to eliminate them prior to me and Lexa taking out the guards on the side gate. Everything was going according to plan. \n\n***** \n\nAt around nine o'clock a bell rang inside the hareem dormitory which signified that Sanchez was ready for his whores to come and service him. \n\n\"We're on,\" I said into the comms network. \n\n\"Roger that,\" said Tony. \n\n\"Make sure you get all the girls into the dormitory for extraction,\" I said to Tammy. \n\n\"Yes Becca. Of course,\" she replied. \"Good luck.\" \n\nI gave her a kiss on the cheek and a hug and walked hand in hand with Lexa down towards Sanchez's quarters. \n\nIt was a lavish villa attached to the hareem complex with ornate pictures and artwork. The whole place smelt of incense as we walked along the terracotta tiles to his master suite. \n\n\"Remember the plan and stick to it,\" said Lexa. \"You'll do fine.\" \n\n\"I know I will. I've sucked cocks before remember,\" I joked nervously. \n\nI was trying to come across as though I wasn't bothered, but just below the surface I was panicking. \n\nWhat if he recognised me and called his guards in before we silenced him? \n\nWe got to his door and I knocked twice making sure my veil was down. \n\nKnock. Knock. \n\n\"Enter,\" ordered Sanchez. I'd recognise his voice anywhere. \n\nWe pushed into his luxurious suite and saw him lying naked face down on a massage table. Normal massage tables have a hole cut out for your face, but the hole in this one was for his cock. It hung down under the table with his huge heavy ball sack. \n\nHe looked up briefly from the table and then back down. He would have just seen what he was expecting to see. A girl dressed in red and a girl dressed in yellow, Sammy and Louise coming in to massage him. \n\nI breathed a sigh of relief. \n\n\"Hello my beautiful wives. You know what to do. One up top for rubbing and one below for sucking,\" he said in his usual menacing tone. \n\n\"Yes master Sanchez,\" I giggled to mask my voice. \n\nWe gave each other a nod and I got under the table while Lexa poured massage oil onto his lower back and shoulders. I heard her sloshing it around his body to give him a good coating. \n\nOnce I got under the table I relaxed a little more. All I had to do was jerk and suck his cock to make him cum. At the point of ecstasy Lexa would jump onto his back and wrap her arm around his throat to choke him until he was unconscious. She wasn't trying to kill him, but starve him of oxygen long enough to make him pass out. \n\nHaving a long smooth shaft in my face felt second nature to me and despite him being a murdering rapist I wanted his seed all over me. It told me what I'd become over the last few months. I was a cum junkie for sure. I craved the texture and saltiness of it on my skin and in my mouth. I didn't have to fake my groans of pleasure as I gently pulled his foreskin back and sucked his head between my lips. \n\n\"Mmmmm good little slut Sammy. You always know how to get me hard. I've got a big load built up for you tonight.\" \n\n\"Mmmhhmmm,\" I whimpered as he got harder in my mouth. \n\nI was always fascinated how a penis went from soft to hard so quickly as his state of arousal heightened and his body forced blood to his manhood. \n\n\"More on the buttocks,\" he said to Lexa. \n\n\"Yes master Sanchez,\" she repeated my giggle to mask her voice. \n\n\"Mmmmm better,\" he sighed getting into the swing of things. \n\nHe was fully hard by now and I slid my hand up and down while using the other to massage his balls. They felt heavy and tight, ready to unleash a load of spunk into my eager mouth. As I wanked him off I stuck my tongue out and lapped at his glans to encourage him to get off quicker. Balls, tip and shaft never failed. \n\nLexa was doing a great job with the massage and she managed to glance down and wink at me, seeing me under the table with my mouth full of cock. I winked back and rolled my eyes back showing her what a whore I had become. \n\nAfter more teasing I finally pushed up and took his cock into my throat. I kept pushing until my nose, chin and forehead met the underside of the table. \n\nHe let out a long groan. \n\n\"You know I love that throat of yours,\" he said. \"Do that thing you do.\" \n\nThere were many techniques to throating a cock, but I wasn't sure which one he meant. I started by gulping with him still in my throat. My mouth acted like a milking machine as I sucked harder. \n\n\"Not that you dumb bitch. Throat it in and out hard. I want to hear you gagging.\" \n\nNo wonder Sammy complained about her sore throat. She must have had something I didn't. A gag reflex. I'd faked it before so it wasn't going to be a problem. \n\nI started to do as he said taking him in and out as deep as I could and faking a gagging noise. I spewed saliva all over myself and scooped it up in my fingers and spread it on his shaft. My spit was thick and stringy from the back of my throat as my body helped lubricate the passage to my stomach. \n\n\"Oooh fuck. That's it you fucking dirty little cunt,\" he gasped. \n\nHe liked it deep and sloppy. He liked to hear his sex slave choking on his cock. I wasn't the only one who'd be choking by the end of the night. \n\n\"Guh-guh-guh-guh.\" I whimpered. \n\nSlurp. Slobber. Spit. Drool. \n\nI was covered in my own mouth slime in no time and so was his cock and balls. \n\nLexa's massage got rougher as he approached his orgasm and she glanced at me again to see how far off he was. \n\nI held up three fingers to signify how many minutes he had left. My chin was drooling long strings of saliva all over my chest and it hung off me like glue. \n\nGuh-guh-guh-guh.\" I whimpered. \n\nSlurp. Slobber. Spit. Drool. \n\n\"Please cum for me master Sanchez,\" I murmured. \"I've been good girl.\" \n\nSuck. Stroke. Slobber. \n\n\"Harder,\" he demanded. \"I want to hear you choking on it you fucking skank. Make it hurt you!\" \n\nI pushed up and down on his cock faster and deeper feeling my throat start to get sore. I faked gagging and breathlessness and felt his balls tighten. My forehead and chin kept knocking against the underside of the table. If I kept it up much longer I'd have a headache. \n\n\"Mmmm... fucking whore...that's it...\" \n\nSlobber. Suck. Suck. Suck. \n\nI saw Lexa's bra hit the floor as she got her tits out in preparation. The table sagged under her weight as she straddled Sanchez across his lower back and rubbed her boobs against his shoulders. It was all part of our plan. \n\n\"Oh my god. That's a new move Louise. I like it. You have great tits,\" he moaned. \n\nThe table creaked as she rocked back and forth. I couldn't see what was happening up there, but she was in a prime position to wrap her arm around his neck and choke him just as I bought him to orgasm. \n\nLick. Stroke. Jerk. \n\nHis cock got even harder and his balls pulled up into his body. My knickers were soaked by now and I'd have gladly let him fuck me. My body ached for penetration. \n\nStroke. Stroke. Suck. Suck. \n\nI felt the first pulse and banged my free hand on the underside of the table as Sanchez started to fill my mouth with thick hot spunk. \n\nBang. Bang. \n\nThe table creaked with Lexa's movement and I knew she was wrapping her arm around his neck. His cock continued to pulse and it took all my mental strength to let his spurting cock leave my mouth as I gripped it hard to keep him on the table. Hot sperm rained down onto my face and tits as he suddenly realised what was happening. \n\nAn erotic massage had turned into him being strangled on his special table and held in place by his cock to prevent him escaping. \n\n\"What the fuck?\" he gasped. \"Get the fuck off me.\" \n\nI kept my grip and Lexa pulled him in tight to starve his brain of oxygen. \n\n\"Fucking traitorous bitches. Let me go.\" \n\nUnfortunately due to the amount of slippery spit all over his genitals I lost my grip as he struggled to escape. He was a big strong powerful man and managed to push himself up from the table with Lexa still choking him. \n\nI dived out from under the table to try and keep him pinned down, but I was too late. Lexa wrapped her legs around his torso still choking him with her arm as Sanchez got off the table and frantically thrashed about to try and free himself from her vice like grip. \n\nShe squeezed tighter as his face went crimson. He pushed back and slammed her into a wall trapping her between his back and the sand stone bricks. His eyes changed from anger to surprise when he saw my cum coated face. \n\n\"Becca?\" he croaked. \"You fucking bitch. You should be dead.\" \n\n\"So should you mother fucker!\" I replied. \n\nI moved closer and got a good footing just as Tony had taught me. I pulled my fist back and lurched forward pushing power from my back leg and from my centre mass. \n\n'Power comes from within Becca,' that's what Tony had told me all that time ago at the G-spot club in the gym. \n\nAll my anger and hatred were focused into one act. The act off punching him square in the face. \n\nTHWACK! \n\nI felt my fist connect with his face and his nose crumpled from my perfect aim. Blood and snot poured from his broken nose all over his face and Lexa's arm. The pressure in his head must have been immense to make it erupt like a spitting cock. Lexa kept her tight squeeze for another few pain staking seconds until his eyes rolled back in his head and he collapsed onto the floor taking Lexa with him. \n\nI bent down to check he wasn't going to get back up and then rolled back and sat on the floor panting and breathing hard. \n\nWe must have looked a mess. Sanchez's face was covered in blood from his misshapen nose. I had blood splattered on my face mixed with a huge amount of sticky cum. Lexa let go of him and rolled off, her body glistening with massage oil. Her face was also splattered with blood and her arm was bright red where it had poured from his face and onto her tanned skin. \n\n\"Sanchez down,\" panted Lexa on the comms network. \n\n\"Roger that. Are you both ok?\" asked Tony. \n\n\"Fine,\" I replied. \n\n\"We're in position for extraction,\" he said. \n\n\"Roger that. Let us secure Sanchez and we'll come and let you in. Wait out,\" said Lexa. \n\n\"Roger that.\" \n\nAlthough he was out cold we couldn't take any chances. I walked over to the curtains and pulled off one of the rope tie backs. Lexa's checked Sanchez's pulse. \n\n\"Is he dead?\" I asked. \n\n\"He's sleeping,\" she smirked. \n\nWe tied his hands and feet and Lexa found his boxer shorts and stuffed them into his mouth. She used the belt from his trousers as a gag to stop him calling for help if he woke up and then we left him where he lay. He was too heavy for us to carry. \n\n\"Nice punch,\" giggled Lexa. \n\n\"That was for Chloe. Now he knows what it feels like,\" I laughed. \n\nLexa put her bra back on and we checked the corridor. There shouldn't have been any guards in this part of the complex, but we had to be cautious. Luckily it was empty. \n\nWe made it back to the dormitory and checked on the girls. They were shocked when they saw us covered in blood and helped us to clean up. We still had to escape and being covered in blood wasn't the best idea when trying to seduce two guards. ",
        "\"Keep everyone here until we return,\" I said to Tammy. \n\n\"Yes Becca of course.\" \n\n\"Moving to the pool area,\" Lexa informed the team. \n\n\"Roger that.\" Tony replied. \"Jock you there?\" \n\n\"Affirmative,\" came back his deep Scottish accent. \n\n\"Eliminate the guards on the towers. The girls are moving to take the side gate.\" \n\n\"Roger that.\" \n\nAs we got to the gate of the pool area I heard four quiet 'phut' sounds as the silenced sniper rifle found its targets. \n\nPhut. \n\nPhut. \n\nPhut. \n\nPhut. \n\n\"Targets eliminated,\" said Jock, as cool as a cucumber. \"Girls are clear to cross the courtyard. There are two men guarding the side gate.\" \n\n\"Good work Jock. We're in position. Girls do your thing,\" said Tony. \n\nWe tentatively opened the gate into the dark courtyard and peeked through the gap. We saw two guards with guns next to our exit gate at the east side of the compound. I knew Tony, Lance, Hayward and Virg would be just the other side of the it waiting to be let in silently. I also knew Jock had eyes on us from the hill top. \n\n\"The girls are leaving the pool area and are heading for the gate,\" said Jock, informing the rest of the team what was going on. \n\nWe were still dressed in skimpy panties and bras, but without face veils as we approached the two guards. \n\nThey didn't seem threatened by us. Why would they? We were just two of Sanchez's wives out for a stroll. \n\n\"Hi guys,\" said Lexa, putting on a breathy voice. \n\n\"Good evening ladies,\" said one of the guards. \n\n\"Ladies? Ha! We're not ladies. We're sluts and you know it,\" I laughed. \n\n\"Please ladies, return to your quarters. We are not allowed to see you without you're faces covered,\" said the other guard. \n\n\"Oh come on guys. We've had a drink or two and we just want a bit of fun, we're bored,\" I played at being drunk. \n\nWe were right next to them now. \n\n\"Ladies please return to your quarters,\" the guard said again. \n\nLexa put her arms around the second guard from behind. I stood in front of the other one looking at his sub machine gun. \n\n\"That's a big weapon,\" I cooed giving it a double meaning. \"I like a big one don't you babe?\" \n\n\"The bigger the better,\" Lexa whispered in his ear. \n\nI playfully pulled at my bra straps making my tits bounce to distract them. Both guards couldn't help but look at my gorgeous boobs. \n\n\"Teehee look at them bounce guys,\" tittered Lexa. \"Get them out and show them how bouncy and pert they are.\" \n\n\"Ladies please. You must return to your quarters. If you get caught out here you'll be in big trouble. You know that,\" said the first guard. \n\nI whipped my bra off and threw it at the first guard. My perky breasts flashed before his eyes. \n\n\"Be aware there's two more guards coming your way from the main gate,\" said Jock in my ear. \n\nLexa heard it too. We had to be quick. She was still behind her guy with her arms draped around him from behind. I was right up close to the other guard and I reached down and pushed my thumbs into the waistband of my drenched knickers. \n\n\"Show them your bald little cunt,\" said Lexa. \n\nI started to push them down and my guard moved forwards to stop me. \n\nIt was now or never. \n\nAs they were distracted by my actions I dropped low, made a fist and burst upwards aiming my punch right under his chin. It connected perfectly and his head flipped back like a bucking donkey. He was knocked out instantly from his neck snapping back in a split second. Tony had taught me well. \n\nAt the same time Lexa put her left hand on the guards right shoulder and her right hand on his forehead. She twisted his head one way and his shoulders the other. \n\nCrack. \n\nHe dropped like liquid and she stood there smiling at me. \n\n\"Girls, the other guards will be coming around the south corner any second. Get the gate open now,\" said Jock still playing it calm. \n\nLexa searched them for keys and found them on the first guards belt loop. In seconds we had the gate unlocked and lifted off the huge bar which was across the back of the gate. Four men dressed in grey and armed to the teeth entered the compound.  \n\nThey spread out into all round defensive positions and I heard the same 'phut phut' sound as two of them opened fire on the approaching guards. \n\nPhut. Phut. \n\nPhut. Phut. \n\nTheir bullets whizzed past me before I could even blink. \n\n\"Targets down,\" said Virg. \n\n\"Proceeding to the inner compound,\" said Tony. \n\nTony and Lance went into the inner compound, while Virg and Hayward dragged the guards lifeless bodies into the shadows. They then moved to the inner gate to keep the exit clear whilst I followed Tony and Lance to guide them to Sanchez, putting my bra back on as we went. Somehow they seemed to already know where they were going. I tailed along behind them like a puppy as they breached into Sanchez's massage quarters with their weapons up in the aim. \n\nI was amazed at the fluidity and speed of their movements, they must have practiced them thousands of times. \n\nTony kept watch at the door as Lance produced a syringe from his body armour and injected a sedative into Sanchez's butt cheek. They weren't taking any chances about him waking up during our escape. \n\nHe picked him up into a fireman's lift over his shoulder, adjusted his weapon and made for the door. \n\n\"Sanchez secured. Moving to the dormitory,\" said Tony. \n\n\"Roger that.\" \n\nWe scooted down the corridor where I found Lexa organising the girls. She had them lined up one behind the other with their right hands on the girls shoulder in front of them. They all seemed very calm and glad to be leaving. They swooned a little when they saw Tony and Lance. They did look hot on their grey combat gear and body armour. \n\n\"Ok ladies, please stay calm and quiet. We're moving to the pool area and then across the courtyard to the side entrance. We'll then walk through the trees and board our bus. We'll have you safe and secure within the hour,\" said Tony. \"Understand?\" \n\nThey all nodded. \n\n\"Let's go. Move quickly but don't run.\" \n\nLance led the way with Tony bringing up, the rear. Me and Lexa kept with the girls to keep them quiet and reassured. We all made it to the inner gate where we met Virg and Hayward. I was once again amazed at their professionalism. With about twenty scantily glad beauties lined up behind them the Grey Ghosts never once looked at them in a sexual way. It was all business now. Maybe the fun would start later. \n\nThere was a crackle in my ear as we prepared to move across the courtyard. \n\n\"Be aware there are four more guards approaching from the north,\" said Jock. \n\n\"Roger that,\" said Tony. \"Virg and Hayward deal with the guards. We can't move until they are out of the picture.\" \n\n\"Roger that.\" \n\nThey both moved out into the courtyard crouching low and moving silently. I heard more silenced gun fire and they returned a couple of minutes later. \n\n\"Targets down,\" said Virg. \"We're good to go.\" \n\nFor a virgin he was full of confidence and seemed to be in his comfort zone when it came to this sort of thing. \n\n\"Moving,\" said Tony. \n\nHe pushed out into the courtyard with Lance. Hayward and Virg ushered the convoy of hookers out and told them to stay low and follow Tony to the bus. With them holding onto each other's shoulders they looked like a line of elephants moving across the Serengeti. \n\nLexa and I followed at the back of the group and Hayward and Virg followed on behind. \n\nWe made it to the side entrance and kept moving through the trees to the bus. I almost burst out laughing when I saw it. It was a bright yellow school bus that wouldn't have looked out of place on an episode of the Simpsons. \n\n\"Who picked this for our escape vehicle?\" I whispered to Virg. \n\n\"It was me and Hayward. It was all we could find at short notice,\" he shrugged. \n\nWe all boarded the Simpson bus and Lance started it up. After staying silent the noise of the bus sounded deafening in the still night air. I was sure the remaining guards would hear it. We pulled off slowly with the Grey Ghosts positioned at the front and rear of the bus checking all around for potential threats, but they saw none. \n\nI was just beginning to think how well the mission had gone when Jock came back on the net. \n\n\"Shit guys. I've got movement in the courtyard, it looks like they've found the four bodies. I'll stay and observe, but you need to get out of there now.\" \n\n\"Roger that. Keep us posted of any changes. Lance put your foot down and get us back on the main road as quickly as possible,\" said Tony. \n\n\"Roger that.\" \n\nWe bumped and bounced our way down the dirt road for about a mile until we finally made it back onto a tarmac main road which led back to the marina. The journey would take about half an hour. \n\n\"Be aware. Guards are entering the inner complex. I think they're onto us,\" said Jock, giving us a running commentary of what he could see. \n\nThe girls seemed a little panicked and I didn't blame them. Sanchez had a small army in there and chances were they would soon be chasing us down in much faster vehicles than the Simpson bus we were riding in. \n\n\"Lots of movement at the main entrance guys. I've got three vehicles leaving the compound and heading straight for you. Orders?\" asked Jock. \n\n\"Can you take out the lead vehicle? Shoot the driver or the tyres. Hopefully the other two will crash into the back of it,\" said Tony. \n\n\"Roger that. Standby.\" \n\nI heard the silenced sniper rifle go off in my ear piece. He fired three, two round bursts. \n\n\"Lead vehicle is down but the other two have managed to squeeze past it. They're out of my line of sight,\" said Jock \n\n\"Roger that. Get yourself back to the boat. We'll have to deal with them,\" replied Tony. \n\nTony turned to address everyone as the bus trundled on as fast as it could down the deserted main road. One side of us was desert and the other side was the sea as I looked out into the blackness. \n\n\"Right girls, listen in. We are about to have company. It would appear Sanchez's guards are loyal to him and want him back. They are on their way to intercept us, but me and my men will not allow that.\" \n\nThe girls murmured uneasily at the thought of being recaptured and punished for escaping. \n\n\"I need you all to move as far forward as you can and occupy the bus from the front seats. Do it now please,\" he remained so calm he could have been chatting to his grandma. \n\nThe girls quickly moved and occupied the seats at the front of the Simpson bus and the three Grey Ghosts moved to the back. It was a strategic move as we were about to be attacked from the rear, moving the girls forward gave them a better chance of avoiding being shot, plus Tony, Virg and Hayward could return fire from the back of the bus. \n\nA few minutes after we all got settled I saw two sets of headlights approaching on the main road. I was glad it was deserted, we didn't want innocent bystanders being caught in the cross fire. \n\n\"Stand by. Wait until they open fire and then we'll take them out,\" said Tony. \n\nJust as he finished his sentence a burst of loud automatic gunfire echoed in the darkness and bullets ripped through the back window of the bus. \n\nThud. Thud. Thud. \n\nCrash. Smash. Shatter. \n\n\"Keep down,\" yelled Hayward over the sound of shattering glass. \n\nThe girls shrieked and cowered behind their seats almost going into the brace position to escape the incoming fire. It was sporadic and seemed to lack direction unlike the Grey Ghosts as they returned fire into the headlights behind us. \n\nPhut. Phut. Phut. \n\nTheir shots were well aimed and I heard them tearing into the metal and glass of the van behind us. \n\nLance was going as fast as the bus could go, but it wasn't built for speed or manoeuvrability. He slewed the hulking mass back and forth across both lanes to prevent the vehicles from coming along side us. We all rocked from left to right as the bus skidded and groaned in protest. \n\nThud. Thud. Thud. \n\nCrack. Ping. Rip. \n\nThe steel work of the bus took more punishment as the follow up crew gave us another barrage or bullets. Sanchez's lifeless body rocked in his seat as the battle continued. \n\nI watched Tony pop up from behind the rear seat and fire three controlled bursts into the windscreen of the nearest vehicle. It swerved and then veered off the road crashing into a ditch and exploding in a fireball. \n\n\"First vehicle is down,\" said Hayward. \"Can't this heap of shit go any faster?\" \n\n\"My foots to the floor. We need to get rid of the second vehicle before we hit the town. We don't want any collateral damage,\" he replied. \n\nThud. Thud. Thud. \n\nThud. Thud. Thud. \n\nMuzzle flashes sang out in the darkness behind us as the second vehicle came in with more ferocity. \n\n\"Jock. Where the fuck are you?\" shouted Virg into the comms network. \n\n\"Don't worry laddie. You lot are making enough noise to wake the dead. I'm right behind you. Try not to shoot me,\" the strong Scottish accent replied. \n\nEven with all the commotion they still had time for banter. \n\nVirg reached for his body armour and picked off a round object about the size if an apple. He pulled the pin out of it and let it roll out behind the bus. Two seconds later there was a loud explosion as the grenade detonated right under the last vehicle. It leapt into the sky in an orange and white flash as the petrol tank blew up scattering debris in all directions. \n\n\"Fuck me,\" shouted jock. \"It's like driving through the council estate I grew up in,\" he laughed. \n\nThe road was alight with burning fuel and bits of the blown up vehicle. Suddenly a pair of headlights lit up the highway as it burst through the smoking debris. \n\n\"Don't shoot. It's only me, I'm right behind you,\" laughed Jock. \"It looks like I've missed out on all the fun.\" \n\n\"Jock. Nice of you to join us. Any sign of any more vehicles?\" asked Hayward. \n\n\"No. It looks all clear.\" \n\n\"Good. Can you get past us and get the boat ready for immediate departure. I don't think we've seen the last of them yet,\" added Tony. \n\n\"Roger that.\" \n\nLance kept the Simpson bus in its correct lane and Jock sped past in the faster saloon car, heading for the marina. \n\n\"It's all clear girls. Not long now,\" I tried to reassure them. \n\nThey were still squealing and cowering behind the seats. \n\n\"They'll be champagne and food on the boat. You're going to love it,\" added Lexa. \n\nThe remaining trip into the marina was uneventful with no further follow up from Sanchez's men. Maybe they hated him as much as we did and wanted him to be captured, but I doubted it. We left the bus on the jetty and boarded Serenity which was chugging away and waiting to leave. As soon as the last of us were aboard, Jock took off at high speed and we all breathed a sigh of relief. Sanchez was still unconscious and was tied up in the engine room below. He wouldn't be waking up anytime soon. \n\nThe semi naked young women sprawled out in the main lounge area and it looked like an orgy waiting to happen. Lexa and I found glasses and bottles of champagne and beer and placed them all on the table. \n\n\"Help yourselves girls. You're free from Sanchez. We'll be in Gibraltar soon and then you can all go home,\" I said. \n\nThey helped themselves to alcohol to calm their shredded nerves and I saw Alice hugging her uncle Tony. She was obviously thanking him for rescuing her. Corks popped and the girls began to relax and get merry, but it didn't last long. \n\nI heard a faint familiar noise coming from the mainland. \n\nWhop-whop. Whop-whop. Whop-whop. \n\nIt started off quietly and was soon deafening as the helicopter bore down on us in a cloud of wind and spray. \n\n\"Shit. You've got to be fucking kidding me!\" said Lance from the stern of the boat. \n\n\"INCOMING!\" shouted Tony \"GET DOWN!\" \n\nWe all hit the floor as a long blast of bullets stitched into the outside decking from the helicopter. \n\nIt must have took off and tracked us from the compound. They weren't giving up easily. It's searchlight shone a beam of blinding light onto Serenity as they continued their last ditch attempt to stop us from taking Sanchez and the girls. \n\nThe Grey Ghosts got into cover and returned fire from the patio doors. \n\nPhut. Phut. Phut. \n\nThe helicopter returned fire with more aggression and heavier weapons. \n\nThud. Thud. Thud. \n\nThud. Thud. Thud. \n\nThud. Thud. Thud. \n\nWood and glass splintered and shattered as the bullets stitched into the multi million pound super yacht. The hookers screamed and hid behind furniture hoping not to get hit by any stray bullets. \n\nPhut. Phut. Phut. \n\nThe boat turned left and right trying to shake off the helicopter, but it was useless. If they didn't take it down soon we'd be mincemeat under such overpowering weapons. \n\nThud. Thud. Thud. \n\nThud. Thud. Thud. \n\nSuddenly out of nowhere I heard a new sound. \n\nThere was a long 'Whooooooooosh' and I turned to see Virg standing at the patio doors with a spent rocket launcher on his shoulder. \n\nI watched the smoky trail of the rocket as it headed directly for the helicopter. \n\nSWWWSSSHHHHHHH...CABOOM! \n\nIt was a direct hit and the helicopter lit up the sky like a firework. It spun out of control for a few seconds before crashing into the Mediterranean sea and we left its burning wreckage in our wake. \n\nI looked through the lounge area past the screaming women and saw the eight foot long plastic case, which I'd tripped over the day before. It must have been where the rocket launcher was stored and had probably just saved our lives. \n\n\"Fucking hell, good work Virg,\" said Tony. \"That'll be the last of them. Jock get us back to the Spanish coast before heading for Gibraltar. Take a direct course north, we might have attracted the authorities.\" \n\n\"Roger that.\" \n\n\"Fucking hell you guys are incredible,\" I swooned. \"I thought we were dead when that chopper turned up.\" \n\n\"Fucking amateurs!\" laughed Tony. \"They couldn't hit water if they fell out of a boat.\" \n\n\"They had more chance of killing Sanchez down in the hold than killing any of us,\" joked Lance. \n\nThe boat headed north as we all went back inside. They had no other means of following us now the chopper was destroyed and the boat was radar invisible so we were home and dry. \n\n**** \n\nI clinked glasses with Lexa and slobbed out on the sofa surrounded by girls in an array of coloured lingerie. Hayward took over the helm with Tony and Alice who were now busy celebrating. The other three Grey Ghosts started to get acquainted with some world class prostitutes. I observed and chilled out, already seeing how things were about to pan out. \n\nSome of the young hookers were soon swooning over Lance, Jock and Virg as they told them some war stories. \n\nThe Grey Ghosts were loving the attention and I guessed it was stress relief after such an intense mission to rescue the girls. I could almost smell the testosterone and female pheromones emanating from them all as the sexual tension filled the room. I let them get on with it and turned back to Lexa. \n\n\"Pretty fucking intense, or what?\" I said. \n\n\"That's about as bad as it gets Becca,\" she replied. \"This has been a tough mission. Not many people could have done what you've done over the past few months. You should be proud of yourself.\" \n\n\"So what now? What happens to Sanchez?\" \n\n\"He'll be questioned and either disappeared or locked up.\" \n\n\"Disappeared?\" \n\n\"I think his terminology is 'Buried in the hills', like he wanted to do to you.\" \n\nHe deserved it. but I never said anymore about him. \n\n\"And the G-spot clubs back home?\" \n\n\"I'll make a phone call shortly and have them shut down and all responsible people will be arrested. It'll be a simultaneous strike against all the clubs at the same time,\" said Lexa. \n\n\"Any news on the diamonds?\" \n\n\"I'll check later. I doubt they've moved. Maybe Sanchez will shed some light onto it when he's interrogated.\" ",
        "I got up to get more drinks and wandered into the group around Tony's team. Jock had his arms around three girls and was leading them down to a lower deck. There were no prizes for guessing where they were going. The girls had taken a fancy to his rough persona and obviously wanted to say thank you to him personally the only way they knew how. No doubt he'd be balls deep in all three of them before the night was over. \n\nLance also headed off downstairs with Sammy and Louise. He had a big smile on his face at the thought of what was to come. \n\nI watched Sara walk over to Virg. \n\n\"You're the fucking virgin? Right?\" her potty mouth was switched on as usual. \n\n\"I'm not a virgin,\" he protested. \"Don't believe what those guys tell you.\" \n\nShe gave him a knowing look. \n\n\"You won't be a fucking virgin after I've finished with you,\" she laughed. \"You were incredibly brave coming to my rescue. Brave men make my pussy wet.\" \n\nVirg gulped. \n\nShe took his hand. \n\n\"Come on soldier boy. I want fucking and you're going to be the one to do it to me.\" \n\nShe led him by his hand, winking at me as she walked passed. Virg was about to have the time of his life with Sara, she was a filthy bitch when it came to sex. \n\nI looked back towards Lexa, but she was gone. She must have been making phone calls to report the mission a success. I then turned to the helm and noticed Tony had also disappeared. \n\nI supposed it solved the problem of which one I was going to sleep with. The answer seemed to be neither of them. I was exhausted, undercover work was hard and tiring both mentally and physically, so I decided to get my head down for a few hours. I finished my drink and headed down to the lower deck, leaving the remaining girls partying and Hayward at the helm. \n\nAs soon as I got to the lower deck I heard sex noises from the nearest bedroom. The door was closed and I leant up against it listening to Jock being serviced by his three whores. \n\n\"Ooh my god that feels so good,\" I heard his deep Scottish accent. \n\nI also heard his thighs slapping against buttocks as he gave one of them a good pounding. I couldn't help but feel jealous. My knickers were wet and my pussy was hungry for cock. Any of them would have done. Where the fuck was Tony when I needed him? \n\nI left them to it and heard similar noises in the next room where Lance was having a good time with Sammy and Louise. \n\nThe last door before the master bedroom was slightly ajar. In Sara's haste to pop Virg's cherry she hadn't closed it properly. \n\nI stopped in the plushly carpeted corridor and peeked through the gap in the door. Sara was on her knees in front of Virg who had his pants around his ankles. His cock looked big and angry as she wrapped her lips around it gently. I had a quick glance around to make sure no one was coming and then slipped my hand down the front of my knickers. I loved watching people fuck and I knew Sara was an expert. My clit was hard and excited and I soon had a rhythm going in time with Sara's head bobbing back and forth. \n\n\"I know you're going to cum pretty quick, but its ok,\" she said, spitting all over his cock and wanking him back and forth. \"You can spunk in my mouth and then you can lick my dirty cunt while you recover enough to fuck me.\" \n\nI liked her style and I'd done the same thing myself in the past. She sucked him back into her mouth, sliding her hand up and down it as she waited for the inevitable. My frantic fingers delved into my swollen gash as I tried to get myself off before I was discovered. \n\n\"Oh...uh...uh...oh shit...sorry...\" spluttered Virg as he started to cum prematurely. \n\nSara was well prepared for it and let him cum all over her face and tongue. She continued to stroke him as he gave her a cum shower much to her delight. She giggled and squealed like a child with a new toy. \n\n\"Oh what a dirty boy,\" she gasped. \"Look at the mess you've made.\" \n\nHer face was literally plastered in cum as she finished him off and then lay on the bed spreading her legs wide. \n\n\"Come on solider boy. It's supper time,\" she giggled. \"Lick my fucking cunt.\" \n\nVirg's cock bobbed and bounced as he got between his lovers legs and started to lick her sopping pussy. He had a good view of Sara who was now scooping the cum from her messy face and eating it hungrily. \n\nI felt my own orgasm building in my underwear and knew I wouldn't last much longer. If I wasn't going to get fucked, maybe I'd join these two instead. \n\nJust as that thought entered my head I heard a noise from the master bedroom next door. No one had come past me so they must have already been in there. It threw me off my rhythm and intrigue now got the better of me. \n\nI took my hand out of my panties and sucked my fingers clean as I walked nearer to the master bedroom door. I put my ear to it and heard two people whispering. One was male and one was female, there was no mistaking it. I listened further, but it had gone silent. I decided to just pretend I'd walked down the corridor and entered my room without knowing anyone was in there. \n\nI pushed the door open and walked in as though I owned the place. \n\n\"You took your fucking time,\" laughed Lexa. \n\n\"Where have you been?\" said Tony. \n\nI stood in genuine shock at Tony in bed with Lexa beneath the satin sheets and sitting upright against the headboard. \n\n\"I thought you two were making phone calls or something,\" I said, closing the door behind me and locking it. \n\n\"We need to celebrate you're first successful assignment,\" said Lexa. \n\nShe threw the covers back to reveal their naked bodies lying side by side. Tony was already standing to attention and Lexa's nipples were just as erect. \n\n\"How do propose we celebrate?\" I asked, playing the innocent young girl. \n\n\"Well... you've already fucked both of us separately...maybe we can share you,\" she said. \n\nTony may have been in charge during the mission, but Lexa had taken charge in the bedroom like the dominant slut she was. \n\n\"Tony doesn't play well with others. That's what he told me when we first met,\" I raised my eyebrows and looked at him like it was a question. \n\nHe looked at the Lexa's amazing body and then at mine. \n\n\"I think I can make an exception for you two gorgeous girls,\" he laughed. \n\n\"What am I? The spoils of war for you to take in celebration?\" I asked. \n\n\"No Becca it's quite the opposite. We're your reward and you can use us in any way you see fit. You've done an amazing job you sexy bitch and we're so proud of your journey,\" cooed Lexa. \n\nI moved to the foot of the bed feeling my labia rub against the wet gusset if my underwear. \n\n\"So it's all about me?\" I asked. \n\n\"Of course,\" they said in unison. \n\n\"Hhmmmmmmmm...in that case I want to watch you suck his cock,\" I said. \"Put it in your mouth.\" \n\nLexa smiled a wicked smile and shifted down the bed. She leaned over to Tony's manhood which was now throbbing away in anticipation. I slipped my bra and panties off and knelt on the bed to get a closer look. \n\nLexa grasped Tony's shaft and slowly pulled his foreskin back to reveal his shiny head. Her lips instantly wrapped around him to suck him in slowly. \n\n\"'Mmmmpph,\" she groaned. \n\n\"It's a tasty cock isn't it?\" I giggled. \n\n\"Mmhmm.\" \n\nTony watched in awe as my mentor and girlfriend slid her lips up and down his dick. \n\n\"Ffuucccckkk. I can see where Becca gets her skills from. You suck it just like she does,\" he gasped. \n\nThreesomes are always fun and the sexual positions you can get into are endless. Tony was still leaning against the headboard so I got on all fours and backed up onto his face. \n\n\"Lick it,\" I ordered. \n\nHe parted my cheeks and I felt his hot breath around my genitals. His wet tongue pushed into my sopping hole and he fucked me with his tongue. \n\n\"Oooh my god that feels good,\" I moaned. \n\nHis tongue flicked all over my labia and clit as he went to town on me. \n\nI bent my head down and pushed Lexa away from his cock. It popped out of her mouth and slapped against his toned belly with a wet slapping noise. \n\n\"Do you like the way she sucks it?\" I asked him. \n\n\"Oh fuck yeah.\" \n\nWith my ass in his face he could no longer see what was happening to his cock, so I thought I'd have some fun. \n\n\"Who sucks it better?\" I asked. \n\n\"I wouldn't like to say,\" he slurped from between my thighs. \n\n\"That's a good answer, but we're going to play a little game. One of us is going to suck it and you have to guess which one,\" I laughed. \n\nHe sucked my clit a little harder and nodded. \n\nI took him in my mouth for the first time that night and I could taste Lexa's slobber on him. I slid my lips down it slowly and felt him enter my throat with a long moan. He felt harder than ever and I felt my orgasm spark off in my belly just at the taste of his cock. I sucked him in and out for a few strokes and then spat him out. \n\n\"Who sucked it?\" I asked. \n\n\"You did.\" \n\n\"Fucker,\" I laughed. \"What about now?\" \n\nI licked his balls and up his shaft and then just allowed the tip in and out to stimulate his glans. \n\n\"Who was it that time?\" asked Lexa, loving the game. \n\n\"Lexa.\" \n\n\"Haha wrong,\" I laughed. \n\nI held his base and Lexa took it all the way down her throat in one hit. She held it there for a few seconds and then withdrew and wanked him into her mouth for a few strokes before stopping. \n\n\"And that time?\" I asked. \n\n\"Becca.\" \n\n\"Wrong again. You're not very good at this game are you?\" \n\n\"I don't care. It feels amazing and it doesn't matter which one of you is doing it,\" he laughed, in between flicking his tongue over my bean. \n\n\"If you get it right this time we'll give you a special treat,\" I said. \n\n\"Having my cock sucked by two beautiful women is treat enough,\" he said. \n\n\"Awww he's so sweet,\" cooed Lexa. \n\nWe both licked his shaft up and down flicking our tongues all over his soft skin. His cock twitched and bounced as we sucked him off together. We pursed our lips and pressed them against both sides of his shaft. Lexa chose the right hand side and I chose the left. In unison we moved our lips up and down, like we were licking a lollipop between us. \n\n\"Jesus fuck,\" moaned Tony. \"You're going to make me cum.\" \n\n\"Who's sucking it?\" I asked. \n\n\"Both of you...oh my god...stop...stop...stop...you'll make me cum,\" he begged. \n\nWe both release his dick and watched it twitch and bob as he tried to control himself. Having two trained hookers pleasure him had been too much. A bead of pre-cum appeared on his tip and ran down his shaft and I had to resist licking it up until he'd calmed down. \n\n\"Dirty boy,\" I said in a breathy voice. \"We nearly made him shoot his load babe,\" I said to Lexa, kissing her. \n\n\"I think he needs a rest, don't you,\" she said kissing me back. \n\n\"Make my girlfriend cum in your face,\" she ordered Tony. \n\nJust hearing her boss him about was driving me wild. \n\n\"Yes Ma'am,\" he acknowledged. \n\nI needed to cum so badly. He sucked my clit and used his tongue to stimulate my labia, feeling them yield around his lips. I was soaked and I knew I couldn't hold off much longer, especially with Lexa kissing my lovingly. \n\n\"Is he doing a good job?\" she asked. \n\n\"Amazing. You can try his tongue out when I'm done,\" I panted. \n\n\"Let it go babe. He's going to make you cum isn't he?\" she sighed. \n\nHer breath was on my lips she was so close. \n\n\"Yes...oh god yes.\" \n\nHe sucked harder and licked faster, knowing I was about to burst. I ground my pussy into his face and felt it build more strongly. \n\n\"Oh...uh...oh fuck...OH FUCK!\" \n\nAs I came Lexa pushed her lips onto mine and kissed my passionately, stifling my moans of ecstasy. \n\n\"Mmmmm...mmmppphhhh...fuuuuck,\" I squeaked into her mouth. \n\n\"That's it you little whore. Cum in his face,\" she laughed. \n\nI tried to pull away from Tony, but he had his hands wrapped around my thighs and held me in place. \n\n\"Fffffcuukkk...mmmmmmppphhhh...FUCK!\" \n\nI couldn't take anymore and he finally released me and I flopped forward with his cock brushing against my boobs. \n\n\"Haha there you go you sexy little slut. That's the first orgasm of the night,\" laughed Lexa. \n\n\"Dirty fucking perverts,\" I laughed. \n\nI lay there recovering and heard kissing noises behind me. \n\nAs I rolled off Tony I saw Lexa kissing my lover and slipping her tongue into his mouth. His face was shiny from licking my quim and I just lay there panting, enjoying the show. \n\n\"You two timing bitch,\" I said to Lexa. \n\nShe just looked over at me and smiled and then continued. \n\n\"And you. You cheating bastard,\" I said to Tony. \n\nHe laughed. \n\n\"You fucking love to watch people fuck Becca. Don't be such a jealous bitch,\" said Lexa. \n\nI pretended to be jealous, but she was right. I did love watching her kiss my lover. His hands started to wander and he felt her tits making her bite her bottom lip. She was on all fours smooching with him as he remained leaning back on the headboard. \n\nHer pussy glistened a few feet away and looked too inviting to ignore. I slipped in behind her and thrust three fingers into her wet twat. They slipped in with ease and I nibbled her ass cheeks getting a whiff of her overheated cunt. \n\n\"Oooh you dirty bitch,\" she cooed. \n\nThe sound of kissing and wet fingering filled the room. I bent lower and licked her asshole making her quiver. She continued to make out with Tony and arched her back to allow me better access. \n\n\"I forgot how delicious you taste babe,\" I said, as I licked lower and tasted her juicy snatch. \n\n\"I forgot how good you are at licking pussy,\" she replied in a breathy voice. \n\nI stopped licking and moved up towards them. I kissed each of them once and turned to Tony. \n\n\"I want to watch you fuck my girlfriend Anthony. Let me guide your dick into her,\" I whispered. \n\nHe didn't need telling twice. He had the opportunity to fuck two dirty bitches and he wasn't going to decline our offer. \n\n\"She's primed and ready for penetration,\" I said. \n\n\"I am pretty fucking wet,\" laughed Lexa. \"I'm gagging for a good hard fucking.\" \n\nShe pushed her ass back and high in the air as she lay her face down on the satin sheets. \n\n\"My god look how sexy she looks,\" I said to Tony. \"How do you feel about your first threesome with such a sexy little skank?\" \n\n\"I'm going to take both of you. I only wish I had two cocks,\" he laughed. \n\nI gripped the base of his erect member, feeling it pulse and throb in my hand. He was loving every second of it. \n\n\"Spread it open for him,\" I ordered Lexa. \n\nShe reached back and spread her long labia open, like an opening flower. It looked beautiful. Her lips were pink and soft as I pushed his cock against her opening. \n\n\"Slide into her slowly, the little bitch loves to be teased,\" I gasped. \n\n\"Just fuck me already,\" she spat, getting impatient. \n\nI slapped her ass cheek hard. \n\n\"You insolent little cunt,\" I said. \"Shut your whore mouth and wait.\" \n\nHer ass cheek went bright red in the shape of my hand and Tony slid into her slowly. I moved behind Tony and kissed behind his ear whispering dirty things to him. \n\n\"How's it feel to fuck my girlfriends tight wet cunt?\" I asked in a breathy voice. \n\n\"God she's as tight and wet as you are,\" he moaned. \n\nI reached my hand between his legs from behind as he started to slide in and out of her. She pushed back in time with his movements taking his long shaft to the hilt. I gently massaged his tight ball sack as they fucked in front of me. \n\n\"Feels like a huge load of sperm in his balls Lexa. I bet you'd love him to empty them into you, wouldn't you?\" I cooed. \n\n\"Only if you clean me up after darling,\" she panted. \n\n\"You know I will.\" \n\nTony changed his pace to go a little quicker. Hearing Lexa and me goad each other and talk dirty was bringing him closer. He wasn't going to last much longer even if he was stud in the bedroom. \n\nI continued to massage his balls. I could almost feel the sperm building up in them. \n\n\"Do you want to cum in her?\" I asked. \n\n\"She feels so tight. I want it to last longer,\" he sighed. \n\n\"I know baby. I love her pussy too, but don't worry you can cum in her again later.\" \n\nHe slowed down again as Lexa started to breath harder. Her fingers were rubbing her clit frantically and I knew she was close too. \n\n\"Ooooh Lexa...is his big hard cock going to make you cum?\" I asked. \n\n\"Fuck I'm close. Keep going just like that. Slow and deep Sargent Fox,\" she panted. \n\nI'd seen her cum many times and knew it was imminent. I also knew Tony was holding back until she came. \n\n\"As soon as she orgasms I want to see you unleash your semen into her pussy. Understand?\" \n\n\"Yes Ma'am,\" he panted, sweat forming on his brow. \n\n\"And then...when you've cum in her I'm going to lick it out of her tight little cunt,\" I egged him on. \n\n\"Oh fuck...you dirty bitches...I love it...\" he gasped. \n\nLexa started to moan. \n\n\"Oh...uh...oh...fuck...yeah...right there.\" \n\nI felt her legs tremble and knew it was time. \n\n\"Cum in the bitch...fill her cunt...\" I ordered. \n\nTony groaned loudly and pushed as deep as he could. Lexa came hard screaming and panting as his balls twitched over and over with strong intense pulses of sperm. I could feel it pumping into her from his ball sack. \n\nLexa screamed louder as she peaked and a little dribble of girl cum spurted onto the bed sheets. \n\n\"FUCK I'M CUMMING,\" she shouted. \n\n\"ME TOO,\" replied Tony. \"FUCK.\" \n\nSeeing two people I loved climaxing in front of me was an incredible sight. Lexa had tears in her eyes from pure pleasure and Tony threw his head back in ecstasy as he filled my girlfriends cunt with his warm seed. \n\nThey started to slow their pace and she flopped forward with Tony on top of her and still cumming inside her. His twitching balls subsided and I knew he was finished. They both were. My inner thighs were soaked from my own over hydrated pussy and I lay down with them. \n\n\"Make sure you drain every last drop into her,\" I said. \"I'm going to show you how a real slut acts during a threesome.\" \n\nWe lay still for several minutes giggling and cuddling like teenagers who had just lost their virginity. \n\nFinally I felt Tony start to move and I knew he was pulling his dick out of Lexa. I got lower and saw his cum coated cock shining and drooping as Lexa allowed him to leave her body. \n\n\"Want to see me eat it out of her twat?\" I asked. \n\n\"Holy fuck Becca. Just when I think you can't get any filthier you come up with this sordid act. Of course I want to see it.\" \n\nI sucked his shaft into my mouth and made sure the last drops were licked off with my tongue before swallowing it down. \n\nLexa rolled onto her side and lifted her leg so I could get to my creamy prize. Her petal like lips were swollen and engorged and still super sensitive. \n\n\"Squeeze your pussy and push it out,\" I begged. \n\nShe bore down to expel his seed with a cute little squelching noise. Creamy juice spilled out and onto the inside of her thigh and I wasted no time in lapping it up. It tasted like heaven. I moaned loudly and swallowed deeply. I saw Tony out the corner of my eye and noticed he was stoking himself hard again. He'd just cum and yet he was still semi hard. Seeing me lick up his load would have him erect again in seconds. \n\n\"That's the sexiest thing I've ever seen,\" he gasped. \n\nI made out with her pussy, licking and sucking at her clit and labia to make sure she was squeaky clean on the outside. My lips pushed against her vaginal opening and I sucked hard to remove the residue from inside her. Her velvet walls felt divine and more cum filled my eager mouth. This time I didn't swallow despite the overwhelming urge to do just that. \n\n\"Feed me,\" said Lexa, understanding what was about to happen. \n\nShe tilted her head back and opened her mouth to receive her share and I felt Tony's cock nudging at my anus. ",
        "\"Really? Already?\" I asked looking back, with cum dripping out the corner of my mouth. \n\nHe said nothing, he just pushed into my asshole and held it there with a look of ecstasy on his face. \n\nI turned back and spat cum into Lexa's mouth and then kissed her as we shared the prize. I loved kissing with cum, it was so messy and erotic and that coupled with Tony's huge cock in my ass soon had me on the way to another orgasm. \n\nWe both swallowed hard and kissed each other as a thank you. \n\n\"Delicious isn't he?\" I asked. \n\n\"Exquisite,\" she giggled. \n\nI lurched forwards and nearly head butted her as Tony started to fuck my ass. I couldn't believe he was still going strong after such a big climax. He started to piston in and out of me. \n\n\"He's a dirty cunt isn't he?\" said Lexa. \"Who said you could fuck my girlfriends ass?\" \n\n\"I've fucked it before. I know how much she loves it.\" \n\nLexa watched my eyes roll back in my head as I got into the rhythm of it. \n\n\"Maybe I should stick something in your asshole and see how you like it,\" she said. \n\nTony raised his eyebrows. \n\n\"Ooooh I think he likes the idea of that,\" she cooed. \n\n\"He was pretty straight laced until he met me,\" I laughed. \"Now he likes to try new and dirty things.\" \n\nLexa shuffled underneath me as Tony continued to assault my sphincter. She finished up in a sixty nine position with me on top and Tony in my ass. Her view would have been spectacular being so close to the action. \n\n\"How's it look down there?\" I asked. \n\n\"Holy shit you are so fucking wet Becca. No wonder he slipped into you asshole so easily. You've got girl juice everywhere. You smell amazing too. So musky.\" \n\nI felt her licking my thighs and then my pussy lips and clit. If she kept it up I'd be soaking her face in no time, but she didn't. \n\nI heard her sucking and slurping and looked down between my legs to see her sucking Tony's balls. \n\n\"Oh my god. You two are something else,\" panted Tony. \n\n\"Stick it in my pussy,\" I begged. \n\nTony swapped holes and I felt someone's fingers on my clit. I looked down again and saw it was Tony. I also saw Lexa had shuffled a little further down and was now licking his perineum and asshole. \n\n\"Jesus fuck,\" he gasped. \n\nI knew what she was planning. I think we all did. Now his ass was lubricated with her spit I watched Lexa move her hand up and extend a finger. Tony slipped in and out of me slowly and I felt him get harder in anticipation. \n\n\"Relax baby,\" I said. \n\nHe stopped moving as Lexa pushed a finger into his anus from underneath. He flinched for a second and then let out a long satisfied sigh before he started fucking me again. \n\n\"Holy shit that's different,\" he said. \n\n\"Different good or different bad?\" asked Lexa. \n\n\"Different amazing,\" he laughed. \n\nWe were now all in a pleasurable position. Tony was fucking my pussy like a dog with Lexa's finger in his ass. Lexa was sucking his balls and fingering his ass as she lay beneath us. She also licked my pussy lips and clit when she got the chance. Tony was also rubbing my throbbing bean and I went back to eating my girlfriends spunk filled cunt. \n\nHer arousal had allowed more of Tony's seed to leak out of her swollen gash from deep within, mixing with her own unique flavour. The saltiness of spunk mixed with her cunty undertones were intoxicating and I feasted in her like my life depended on it. \n\n\"God Lexa you taste so fucking good,\" I panted. \n\n\"You too baby. You should see this big cock stretching your little hole open. It looks amazing,\" she slurped. \n\nTony quickened his pace as he heard us talking dirty, varying his stroke like a true professional. First long deep strokes and then short and shallow. I felt him slip out of me and into Lexa's eager mouth. He had three holes to choose from in close proximity to one another and must have been in heaven. \n\n\"Cunt juice coated cock... sluuurrrp...my favourite,\" said Lexa. \n\n\"Oh god you two are so dirty,\" sighed Tony. \n\nBang. Bang. Bang. He pounded me like a whore. \n\n\"Oh fuck yeah.\" \n\nSlurp. Suck. Lick. I ate my girlfriends pussy. \n\n\"So fucking good.\" \n\nSuck. Lick. Gobble. She sucked his cock and balls. \n\n\"Oh my god. Yeah!\" \n\nMy tingly belly started to spread out. I would cum any second and I knew Tony and Lexa were close. Lexa's cunt started to twitch around my fingers as she approached her climax. \n\n\"Fuck my dirty wet pussy. I'm going to cum,\" I gasped. \"Right there...don't stop.\" \n\nLexa came just before I did. She clamped down tight around my fingers and squirmed beneath me as she climaxed hard. Her love piss erupted like a fountain coating my face. \n\n\"FUUUUCCCKKKK...\" she screamed. \n\nThe pussy eruption must have been contagious because mine went off like a sprinkler, soaking her hair, face and tits. \n\n\"UUUURRRGGHHH FUCK...\" I whimpered. \n\nSquirt. Squirt. Squirt. Our pussy's pumped out girl cum in unison as Tony fucked me into oblivion. \n\n\"I'm going cum any second,\" announced Tony. \"Where do you sexy sluts want it?\" \n\n\"On our faces,\" we both said together. \n\nHe pulled out of my well used hole and I slid down the bed and starting making out with Lexa. Our faces were soaked and the smell was incredible. Fresh slimy female ejaculate by the bucket load. \n\nTony pumped away at his cock watching with fascination and his balls sucked up into his body. At his point of no return Lexa shoved her middle finger back into his ass and he came like a fireman's hose. \n\nHot, thick, sticky ropes of sperm pulsed into the air before splattering all over our faces. \n\nTwitch. Twitch. Twitch. \n\nThere was so much man milk we were drowning in it. \n\nWe both opened our mouths trying to catch as much of it as we could before his balls were drained. \n\nSplat. Spray. Splat. \n\nIt rained down on us like droplets from heaven. \n\nI leaned upwards and took his throbbing tip in my mouth to suck the last of it from his balls and then we went into a frenzied clean-up of each other's faces. We licked and sucked and kissed for all we were worth savouring the precious creamy juice. \n\nFinally Tony flopped onto the bed on his back and we snuggled in either side of him and he put his arms around us. \n\nWe lay there in the afterglow of two huge orgasms to bring a perfect end to a perfect mission. \n\nI drifted off to sleep thinking what an amazing journey and adventure this had been. I had grown as a person and if I died at that very moment I would feel contented and happy... \n\nEpilogue \n\nLexa and I sat in my penthouse suite nearly four weeks after we'd rescued the girls. It seemed like only yesterday I was deep undercover and I was already missing it. \n\n\"It becomes like a drug,\" said Lexa. \"At first its terrifying, like when I first made you take five creampies, then it becomes interesting and finally you crave it.\" \n\n\"Like dirty sex, you mean?\" \n\n\"Exactly. Could you go back to a normal life after doing what you've done?\" \n\n\"I don't think so. I feel like I walk among these people who are going about their daily, mundane lives, but I'm not one of them anymore,\" I said. \n\n\"That's how it gets you.\" \n\nRain pinged against the glass and blurred the city lights below us. We were in my hot tub drinking cocktails and had been for most of the night. \n\nThe last four weeks had been hectic sorting out the debrief. All the G-spot clubs had been raided and shut down on Lexa's orders. It had been a simultaneous operation involving the police and our own team. The girls had all been released back into their home cities, but I couldn't help thinking some of them were better off as hookers with a secure environment and roof over their heads. I'd had had my eyes opened to the harsh reality of brothels and the men and women that used them, but they still seemed safer than working the streets. \n\nOn a more positive note, they had all been allowed to keep the money they had earned and were allowed to collect it from the world international bank, myself included. It wasn't declared and was classed as compensation for our ordeal. It would give many of them a good start back into real life, but I immediately moved mine into a separate safety deposit box away from prying eyes, thinking one day I might need it to build a new life of my own if this all went horribly wrong. \n\nMy famous four Tammy, Aggie, Sara and Chloe has decided to use their money to set up a tantric massage parlour, with optional extras of course. I knew they'd make a go of it and I'd already been to see them twice for a special massage involving all four of them. \n\nSanchez had been questioned and I never heard any more about him. His interrogation had tipped off Tony and the Grey Ghosts to a string of planned terror attacks which were foiled by his team. None of it was ever shown on any of the news channels, but Lexa had filled me in on the details. \n\nThe diamonds in Serbia were going to be used to buy weapons and explosives for use in those planned attacks and I felt pretty proud of myself for helping bring them down. Lexa had told me I had probably helped save hundreds of innocent people not to mention the girls from the brothels. \n\nI didn't see Tony again. We'd said our goodbyes on Serenity when we'd docked at Gibraltar. I had fallen for him there was no doubt about it, but as he'd once said to me he was married to his job and I could fully understand why. It wouldn't have worked between us and I was sure our paths would cross again in our line of work. \n\n\"So what now?\" I asked. \n\n\"Well... in a few minutes I'm going to put on a strap on and fuck your sweet little cunt with it...\" she laughed. \n\n\"No... I mean what's the next mission?\" I smiled at her dirtiness, she was such a fucking tease. \n\n\"Well...something has come up actually. An influential man has asked for our help. You already know him actually.\" \n\n\"What? Who is it?\" I swam across the hot tub to her and sat astride her with my boobs brushing against hers. \n\n\"I'll tell you in the morning babe,\" she whispered, kissing me. \n\nI kissed her back lovingly. She was my world and I loved her so much I'd die for her. \n\nI felt excited about another assignment so soon and started to wonder what it would be. \n\nLexa was right, I couldn't go back to a normal life after what id experienced. \n\nMy new assignment couldn't possibly be as dangerous as my last one. \n\nCould it...?"
    ],
    "authorname": "Naughtybecca",
    "tags": [
        "choking",
        "creampie eating",
        "cum",
        "forced",
        "glory hole",
        "lesbian",
        "milking table",
        "sixty nine",
        "threesome",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/becca-xxx-ch-16-the-final-chapter"
}