{
    "title": "A New Georgy-Girl Ch. 02 - Georgy and Me",
    "pages": [
        "This second part tells Georgy's story, what it was like for her growing up with Will, and then takes up their story going forward. The second half is entirely sequel, no back-story.\n\nAs always, I caution the reader this is just a story, in my made-up universe that sometimes looks like the real one but mostly doesn't, where things happen the way I want them to, not how they really do, so please just read and enjoy. If you liked it please vote, if you didn't then please tell me why, and if you want to email me feedback or a comment, I do reply to all email comments, just please leave a return email address if you want me to reply.\n\nAnd many thanks to ChloeTzang for keeping my head pointing generally 'due-reality' most of the time...\n\nBB1958\n\n_______________________________________________________\n\nPart One: There's Another Georgy Deep Inside\n\nGeorgy:\n\nSo where shall I start my story? The first time I recognised and managed to say Will's name? Or when I knew for real that Willie could keep the monsters away from me? Or when Willie first made me a secret den to hide in from the thunder-monsters that frightened the life out of me? Or when he left to do his duty (as he saw it) and I was deathly afraid I'd never see him again? They're all different kinds of beginnings, all different parts of the story of different parts of my life, but they all tell the same story; that the be-all and end-all of my world, the pivot on which my world turns, and the one part of my life that is mine and mine alone, is my sweet, brave, kind, gentle, generous, gorgeous Tyler Wilmot, the best and most adorable big brother in the world.\n\nWill was always there, the main focus of my life even if he didn't know it; all my very earliest memories are about him. I distinctly remember when I was a small child, not yet three years old, sitting on his lap and poking my fingers in his mouth while he tried to bite me, and laughing uproariously; it really was the best, funniest game I knew, and Will never tired of playing it with me. Willie and his pretend biting and funny faces were the most important thing I had, only mummy and daddy made me feel as good as he did.\n\nEvery time I felt blue, or needed a special hug, Will had it for me; his arms around me, my hand in his, the way he'd pat the seat and make room for me on the couch so I could cuddle against him, all special, enduring memories; when my friends came over to play, after we'd had enough Barbie fashion parades, and doll's-house picnics and dolly tea-parties, Will would be the bear (because I asked him, and he never said no to me) so he could chase us through the house and hunt us down. Mummy only had a couple of rules: no playing in the bedrooms and jumping on the beds, and no chasing up and down the secret stairs, and when the bear caught us, he was only allowed to tickle me, I made sure of that. Everyone else got tagged, but I got tickled; my rules, my Will, my bear, ergo my tickles!\n\nI was scared of thunder; it weakened my knees and rang alarm bells all through me, and only Will knew how to peel me off the ceiling and bring me back to reality. I won't lie to you; when a peal of thunder sounded, only his arms around me made me feel safe, not mummy, not daddy, not even Aunt Kay; only Willie could talk me down and put me back together. He even made me a den, a thunder-shelter to hide from the scary thunder-beasts when they came looking for me, a cave he made out of his blankets and bedclothes and his arms, and I knew when I ran and jumped in there I'be safe and protected because nothing could get me while my Will was protecting me in my secret thunder-shelter.\n\nMummy and daddy talked about sending Will away to school and I went bonkers-crazy; send him away? Not bloody likely, this was home, this was where he lived, with me, this was where he was staying, end of conversation! They didn't know I was playing under daddy's desk and listening in horror when they were talking about taking my Will, my big bear, away from me, how very dare they! Who was going to protect me if they sent him away? Nuh-uh, not happening, no way, no how! \n\nWill was kind of the same; he knew mummy and daddy were thinking about boarding school for him, and he wasn't at all on-board with the idea; all his friends were here, all his favourite things were here, all his favourite places he and his friends from the local farms liked to play, places where they could build campfires and dens and tree-houses in the woods and build fires to wrap potatoes in foil and bake them in the coals, and build rope-swings. He never knew I knew he'd sneak out after bed-time so he and his friends could go poaching trout, or scrumping, stealing apples, pears, and soft fruit from our neighbours' orchards (why, I don't know, we had plenty of the same fruit orchards on the estate right outside the front door) plus I was here, and I wasn't going to let him go anywhere, no chance...\n\nI made myself totally unbearable around mummy and daddy; crying, throwing tantrums, snapping and snarling, flouncing around and having fits of outright brattish disobedience. Oh I worked so hard at making the olds understand just how super pissed-off I was with them for even thinking about putting my Tyler-Bear somewhere I couldn't have him whenever I wanted him. Mummy would panic in the mornings because my bed hadn't been slept in, and then she'd look for me and find me asleep in bed with Will, my Pooh bear with me so I had all my special bears when I went to sleep, making double-sure they couldn't magic him away in the middle of the night. I was taking no chances...\n\nEventually they twigged that perhaps, just perhaps, sending my pet bear away might, possibly, be a really, really bad idea; chalk one up to the power of nuclear ground-zero level obnoxious brattery...\n\nThrough all this, Aunt Kay was my voice of reason; Will and I were used to being under her orders, she and mummy ruled the house and just ran everything, but when mummy wasn't available, Aunt Kay always had a soft lap, a bag of jelly-babies and a soothing word for me. Will deferred to her automatically, he'd had her long before I had and he was used to her dampening his handkerchief so she could wipe smuts and grime off him, just as he was used to her ordering him around, and cowering at that look she gave him when he didn't do things exactly the way she'd told him to.\n\nIt took me a long time to realise Aunt Kay wasn't actually my auntie, that she was, in fact, mummy's housekeeper; all through my childhood she was the one who, when mummy wasn't around because she had to work, cooked my lunch, made me jam sandwiches, wiped off my milk moustache, brought me treats if I'd had a blue day, made me the occasional fried-egg sandwich as a special treat, and watched cartoons with me sitting on her lap. She was the one who admired my drawings and taped them to the fridge. She was the one who made Will tidy his room, and told me off when I spilled blackcurrant on the study carpet then helped me blot it up, and she was the one who looked after the two of us while daddy was away overseas with the regiment and mummy was running the business-side of the estate. \n\nIt took me even longer to understand we lived on a large estate, mostly because I wasn't allowed to wander around the way Tyler was. Until I was maybe seven or eight all I'd ever seen of the estate was The Lodge, the old estate gatehouse where Aunt Kay lived, the Lodge garden, where I was allowed to play under Aunt Kay's eye because it was fenced off so I couldn't go wandering, the rear courtyard and loose-boxes if Will was with me, or the playroom next to my room. The house was big, but not spooky, just old, and there were lots and lots of places to explore. Apart from the three hidden back staircases and landings, I could go pretty much where I pleased, as long as mummy, Aunt Kay, or Will knew where I was. As far as I knew, that was it; the fact that the estate covered a vast area of farmland, orchards, and villages didn't percolate down to me until I was older.\n\nWill, of course, had scoped out the place many times, and he knew all the little nooks and crannies, the little hidden rooms and attics, and the huge grounds where all the fruit orchards and woodland were. I wasn't allowed to climb trees, so Will would scale one of Mummy's ornamental plum trees in her formal garden and get me a handful of lovely sweet, juicy golden plums, and then Aunt Kay would go off on him for getting me all sticky, and filling me up before dinner and ruining my appetite. When he did things like that for me, that's when I knew how much he loved me; he knew Aunt Kay would be mad but he did it anyway, because I liked them and I'd asked him, and he never refused me anything. \n\nAs I got older it began to seem more and more important to me that Will was where I could see him, hear him, feel him; if he wasn't around for any reason I'd get weirdly jumpy and scared, and everything would only back down when he showed up again. I didn't demand he spend all his time with me, he had his friends and I had mine, but if he was gone for a long time, and I don't mean school, then somehow Aunt Kay would know what was up with me and she'd take me with her to go find him, mostly to reassure myself that he was still around. Mummy and daddy talking about sending him to boarding school had set off all kinds of fears and suspicions inside me, and anytime I couldn't find him I started worrying mummy and daddy had sneaked him away when I wasn't looking.\n\nWillie had also changed; he was Tyler now, his real name, not Will, his family nickname, and it seemed to be important to him that we now called him Tyler. He also seemed to be shooting up like a weed, every day he looked taller, bigger built, less clumsy; I was still just a little squirt and he was looming over me. Aunt Kay told me he was becoming a big boy, and I really didn't like the idea at all; if he became a big boy like all my friends' big brothers then he'd stop doing stuff with me and go and do it with someone else, and I wasn't going to allow that. \n\nBut it was inevitable that he did; Ty still played with me, he still climbed trees and chased me up and down the stairs, and helped me search for the way into Narnia in the huge old wardrobes stored in the attics, and sat still while I practiced being a nurse on him and glued his hands together with Scotch tape because Mummy and Aunt Kay wouldn't let me play with sticking plasters, but it was changing, he was changing; now, when his big, ugly, smelly, noisy, flatfooted friends showed up and barged around like a herd of trolls he'd disappear with them and I'd be sitting in a disconsolate sulk because he'd picked his friends over me.\n\nWhen I reached my teens is when I really started to change; things were happening to me, to my body, yucky things; I itched all the time, my skin felt like it was too tight and looked like I'd been scrubbed with a cheese-grater. I erupted so badly I looked like an extra from 'Star Trek, all oily and blotchy with red-raw zits the size of match-heads bursting out all over me, but especially my face. I sweated at the least excuse (and Aunt Kay telling me when I complained that 'Horses sweat, men perspire, but ladies only glow' didn't help much, I just spent my time in the wettest glow possible feeling miserable about it...) and changing my clothes three times a day seemed like an awful lot of work, and it just never stopped. \n\nI kept away from Ty all through this time; if he'd taken a close look at me he'd have run screaming from the room, and I needed him to be on my side here, not repulsed because I'd exploded, and then the weird conversations with mummy and Aunt Kay started, stuff about how I was becoming a woman, which freaked me out because just what in the Hell were they talking about? If becoming a woman meant I'd have to live looking like some sideshow freak then I wasn't having any of it, and if it was all the same to them, I'd just go back to being a girl and stay there, thank you very much... \n\nThen they started telling us all about it in school, and showing us the most disgusting video-clips about what was going on with our bodies, oh ick! Barf! Gag-puke! Were they bloody serious? For the next forty years? I resolved to have nothing to do with it, not my problem, but it was, and it was really painful too. Eventually mummy took me to see a doctor with a waiting room full of teenage girls hugging cushions and looking miserable. She examined me, and we shall gloss over that, I'm trying to forget it, but the upshot was she gave me some pills, one a day, every day, read the instructions carefully, next!\n\nThe pills sort of worked, but the knowledge that this was my monthly fate forever didn't feel like a rite of passage, it felt like a curse, based on the cycle of the moon, just like a werewolf, only every month instead of going on a satisfying killing spree I get to bloat, cramp, crave chocolate, and cry a lot. Thank you, God...\n\nAt least my join-the-dots face cleared up, but that was a minor 'whoopee' compared to what was in store; it was like being told \"congratulations, we're not cutting your leg off; unfortunately, you now have leprosy...\" \n\nIn the midst of all this teen angst and turmoil, there was Will, looking more handsome and getting more distant every day. Okay, I got that he was a boy, he wasn't a playmate anymore, he was just my big brother now, and he wanted to do big-boy things with his friends, I got that; hated it, but I got it, which just made me feel even lower and more despondent, and to cap it all, daddy wasn't well; every time he came back from his regiment he looked thinner and more tired, and then one day he told me he wasn't going back, he'd retired from the regiment. \n\nI was so happy, I had my daddy where I needed him, not somewhere else in the world being a soldier, but he was... different, always tired, and he'd started using a walking stick, and the worst part was, every time Will showed up, daddy suddenly turned into 'Mr. Sunshine', joking and bantering with Will, being helpful and just being the perfect dad, and I know it was all a lie, that he was hiding something from me, but even more so from Will.\n\nAnd then I found out; they told me. Mummy and daddy cornered me one day when Willie was out with his friends and they told me how I was going to lie to Willie. It was no secret Will wanted to be an officer in daddy's regiment just like his daddy (and I'd had a minor freak-out when Mummy and Aunt Kay told me about Willie's daddy, that he'd been killed and mummy had remarried and that was why Willie was Tyler Wilmot and I was Georgina Lassiter; I never put it together, I'd always thought his name was different because that was just Will being Will...) \n\nI learned that my daddy and his daddy had studied and trained together, graduated together, served together, been the best of friends, and when his daddy was killed in an accident, daddy had helped mummy raise his best friend's little boy, and along the way he fell in love with mummy, and that's where I came from. Will wanted to be what his daddy was, an armoured vehicle crew commander in the Household Cavalry Regiment. Willie wanted more than anything in the world to be part of the Blues and Royals, like daddy, and like his daddy before him.\n\nWhat they told me shattered my world; daddy had cancer, it was bad, Mummy was trying to deal with it, and she and Aunt Kay were heartbroken, but they and daddy were adamant in one thing; Will wasn't to know, because if he knew he'd kick his dreams to the kerb in a heartbeat just to be with daddy and mummy, and neither of them wanted that. Will was his father's son, but he was daddy's son too, and if he knew daddy was so sick it would destroy him. And so I promised I'd help mummy and daddy and Aunt Kay lie to him and keep him from blowing his life and dreams apart over something he couldn't change. \n\nI was only fourteen, and I thought my world was ending; I was going to lose my daddy, Will was being prepared to go and learn how to be a soldier so he could go off and fight on the other side of the planet, and I was supposed to smile and lie to him and watch him do it, but I did, because I loved my Will, I loved and adored my favourite Bear, and so I allowed myself to hurt if it meant he didn't have to.\n\nThe day he left I nearly blurted it all out just to make him stay; when it came time to let him go I really, really didn't want to; the effort it took to bite my tongue nearly killed me, and I still broke and tried to stop him leaving, I actually tried to stop him getting in the car, I couldn't let him go, I needed my Will, he was MY Tyler Wilmot, not the bloody army's, the best thing I had and I wasn't about to let him go. I saw the look on Will's face when he got in the car, and I honestly believe if I'd had five more minutes I could have made him forget all that army nonsense and stay home where I needed him. \n\nBut he shut the car door and mummy and daddy drove away and I cried with Aunt Kay until the car disappeared in the distance. \n\n*****\n\nGeorgy-Girl, Bring Out All The Love You Hide:\n\nWhen mummy and daddy arrived back home I did what I do to all traitors who betray me, hurt me, or let me down: I ignored them, I cut them dead, and I looked right through them; if they thought I'd been a brat before they were in for an eye-opener or two; they let my Will go, they actually, no kidding, for God-damned real took him away, and they want me to play nice? So not happening, no way!\n\nMummy tried to cosy up to me but I wasn't having it; SHE let him go; SHE helped him leave; SHE made me lie so he'd go; SHE made me part of the lie, they all had, I couldn't bear to be around any of them, everyone had hurt me and cost me my Will, I was never going to forgive them!\n\nEventually Aunt Kay knocked on my door. I shouted at her to go away but she came in anyway, angering me even more; this was MY room, how dare she just barge in where she wasn't wanted! I started to tell her exactly what I thought of all of them but she shut me down with \"that\" look.\n\n\"Georgy, I know you're angry now, but please, listen; Will wanted to go, this was something he needed to do, would you have taken that away from him? Think before you answer, Georgy, think about Will, about what he wanted, not you. Your dear mother loves you, baby, and she loves Will too, and because she loves him she had to let him go so he could be what he always wanted to be. I know you hate that, I know you're lonely, but please, think of everything Willie ever meant to you, how much he cared for you, how much he adored his baby sister; how easy do you think it was for him to leave?\"\n\nMy jaw dropped as realisation struck; Willie going away was what he needed, but it didn't mean it was easy for him; all I'd thought about was me, how about him? Oh God!\n\nAunt Kay held her arms open as I collapsed in a storm of weeping, tears for me, for mummy, but mostly for Willie, alone far away, doing what he thought he needed to do, and how must mummy be feeling with him gone and me hating her like a spiteful baby? And daddy, sick and needing all of us and this was how I was behaving!\n\n\"It's okay, Georgy, it's okay to cry, sweetheart,\" she crooned, her eyes shining with unshed tears, \"I know how sad you are, I am too, I had Will before I had you, baby, I miss him as much as you do, but we had to let him go, it's what he needed, but I still need him, baby, he's my Will too. It will get better, sweetie, I promise, we'll make it better again.\"\n\n\"I'm sorry, I'm sorry...\" was all I could keep repeating, but Aunt Kay's arms around me let me know it was alright, we were alright, except for that hollow space inside me where my Will should have been; I missed him so much, and all I had was that empty space inside me, how was that ever going to get better?",
        "*****\n\nDays went by, then more days, then even more, and it still didn't get better. I kissed daddy and mummy and forgave them for letting go of Will, but it didn't make it better, he still wasn't there and it still hurt so much. There was so much bubbling around inside me over this; loss of my best friend and biggest cheerleader, a big, empty, echoing space in my life where Willie should have been, a feeling of dislocation and something deeply wrong, like the universe had taken a sidestep, and fear way down deep inside because Willie wasn't gone because he was at university; I could have lived with that. \n\nNo, my fears were circling around where he was, and what he was training for; he was going to be a soldier, an officer in the army, and he was getting ready to go to war far away, our soldiers were dying in that war because it wasn't a game, it was a real place, a death-place, and he was going there...\n\nHe'd always wanted to serve in both his and my daddy's regiment, The Blues and Royals and be a tank commander in the armoured regiment like his daddy. Willie was never going to wear that shiny breastplate and carry a sword and escort the queen on a black horse through London looking all romantic and historic like daddy had; no, he was going to drive a tin can in a killing-zone and wait to be attacked, or lead formations of tin cans and hope the Taliban didn't have sufficient firepower to knock them out. He was training to be a target, and my heart ached and shuddered at the thought of him fighting alone, so far from home, knowing he was the trophy scalp those crazy lunatics were looking for.\n\nAll of this bubbled around in me for days, keeping mummy a safe distance away from me because I was explosively outspoken, and mad as hell, and she didn't want to deal with my moods and my mouth while worrying about daddy. Daddy did the best he could, for a soldier he was a remarkably soft-spoken, gentle man, and he gave me some of what I needed, but there was so much I didn't understand going on with me, quite apart from the loss and anger, and anyway, he wasn't Will; only my big bear could make it better, I was sure of it. \n\nOn top of that, whenever I tried to visualise Will's face, his smile, his naughty grin when he was trying to put one over on me, the look on his face when one of my school friends (a boy, let's be honest) tried to hold my hand or put their arm around me, or even just touch me, that icy, narrow-eyed look that said \"get your grubby mitts off my sister or you will die...\" my heart literally lurched and thundered and I dissolved in tears. I didn't know his leaving would do this to me, how long and how much it would keep hurting, if I'd known I would have thrown myself in front of the car just to keep him with me... \n\nThe truth was I couldn't stand even a day without him, this enormous pain inside me because I needed him so much was eating me up and I couldn't stop it...\n\nTalking to mummy was pointless; she loved me but she wouldn't understand what I was feeling, daddy was even less help, he just wanted to baby me, so that left Aunt Kay, and I ended-up unburdening on her, telling her everything I was feeling, because she was the only \"No-Judgement\" zone I had.\n\nShe heard me out, all my angst and woe, and then she asked the real question, the one I wanted the answer to most of all.\n\n\"Georgy, what's this really all about? Why does Willie going to military college hurt so much? You knew he had to grow up and leave one day, but he'll be back, he has breaks and holidays, he can come back at any time, so tell me truthfully, what's this really all about?\"\n\nShe knew! She knew and she wanted me to say it, so I did, because I had nowhere left to go.\n\n\"I love him, Aunt Kay, and I want him back...\"\n\nAunt Kay smiled sadly at me.\n\n\"I know baby, we all love him, and...\" but I cut her short.\n\n\"No, I mean I LOVE him, really love him; I need him, I can't be without him, and it's burning me up inside!\"\n\nAunt Kay pulled me closer, blotting my tears and crooning at me, calming me down, before hugging me close, the way she did when I was tiny.\n\n\"Georgy-Girl, I know you think you're in love with Willie, it's natural, he's been part of you since you were a baby, he's always been there for you, he's your handsome big brother, your guardian angel and first call when you need help or a hug, and I know you think that means you love him, you should, but not in that way. Willie is your hero, he should be, but you'll find other boys as you get older, boys you'll start to like in... in that way, and you'll eventually find a boy that you really do fall in love with, one who'll make you feel like the way you do about Will right now, and you'll both be happy. Give it time, baby, and give yourself a chance, you're only young, you have plenty of time, believe me.\"\n\nSo I let her wipe my tears away and hold me, and rock me, and soothe me, but I knew she was wrong; Willie was mine, and one day I was going to show her how wrong she was!\n\n*****\n\nWatching Will at his passing-out parade was the hardest thing I'd ever done; I didn't think how dashing and martial he looked, I didn't think for one second how smart his cadet uniform was; all I could think was 'this is it; now he's a soldier, and he's going to that place and I may never see him again.' What had I ever done to be punished like this? I was going to lose daddy, and sometime soon, I was going to watch the news as they unloaded the coffins at RAF Lyneham and heard Willie's name listed among the dead, I just knew it, and all my dreams and hopes and plans for my life would be for nothing, just a life alone and another coffin in the family vault, and the final end of the Wilmot name after nearly nine hundred years.\n\n*****\n\nPart 2: Dreaming Of the Someone You Could Be\n\nWill:\n\nLeaving home, and leaving my baby sister Georgy behind, was the hardest, most heartbreaking thing I have ever done in my life; the look of loss and deep betrayal on her sweet little face literally ripped my heart in two; I actually came within a hairsbreadth of telling dad to 'stop! I'm not doing this, I can't!' but I didn't, and the last I saw of Georgy was her stricken face as she cried for me to come back. \n\nThe drive down to Camberley in Surrey was mostly in silence; mum and dad were excited at the thought I was going into the Royal Military Academy, but they weren't exactly jumping with joy at the thought of me leaving home, and I was missing Georgy with a sick intensity I'd never felt before. Part of me was missing, and I really didn't feel like filling the gap with trivial conversation, so any questions they asked me usually got a morose, monosyllabic reply. I didn't feel like chit-chatting, I was missing Georgy sitting in the back of the car with me playing 'Bug-Slug', where she punched me every time she saw a VW Beetle.\n\n*****\n\nSettling-in was a lot easier than I thought it would be; the 44-week officer's commissioning curriculum we studied ensured we received a well-rounded military education, with solid military training, and the option to continue with more academic pursuits post-commissioning existed. I wasn't going to do that; I was looking to complete pre-commissioning, go to regular army units for more specialised training, pass-out as a commissioned officer, and accept further academic training if my circumstances warranted it. \n\nThere was a lot (a lot...) of P.E., and obviously our curriculum was heavily biased toward military pursuits, so lots of martial history, from the Punic Wars to Korea, basic military skills and physical fitness, and leadership and academic training in various subjects and disciplines. This was also when I was able to definitively make my selection for my future regiment, the Household Armoured Cavalry, like my father before me.\n\nIn between terms we were sent on adventurous training exercises both in the UK and overseas; my enduring memory is visiting and training with the British Army Gurkha Selection Unit in Kathmandu, but there was also desert training in Bahrain with elements of the 7th Armoured ('The Desert Rats'), and jungle warfare training in Belize.\n\nDrill sergeants yelled at us a lot, made us practice formations and parade-ground manoeuvres until our legs were ready to drop off, then make us do it all over again the next day; they treated us like the sons they'd never wanted, so no hints of favouritism could ever reasonably be levelled their way. Lots of death-threats were levelled at us, and, bearing in mind we were all technically officers in Her Majesty's armed forces, screamed statements along the lines of \"You worthless fucking maggot, you drop that one more time and I will shove my boot up your arse, why are you here, do you like pissing me off, or do your parents just fucking hate you...sir?\" \n\nIt could get kind of surreal at times...\n\n*****\n\nWhenever I did get home, Georgy would literally pounce on me and bowl me over, laughing and gabbling and crying all at once and I'd hug her tightly because it felt so good to have my best bud back again, and she'd drag me off to go see her newest thing, usually another horse, and we'd groom her horse together and chat about Sandhurst, home, any and everything.\n\nDad seemed to not be doing too well, even though he swore up and down that he was fine, just old-age catching up with him which set my alarm bells ringing 'dead-slow'; dad was only 52, but he looked much older, thinner, and what was with the walking stick? Of course he laughed it off when I questioned him, so did mum, and Aunt Kay, even Georgy, so I had to leave it be, but I still couldn't figure out why everyone felt they had to lie to me every time I went home, and why dad looked older and more haggard and just beaten down...\n\nGeorgy was growing with a vengeance; every time I went home she was different, older, more poised, turning into a young woman, not the kid who chased up and down the back-stairs with me, and was convinced she'd find Narnia if she looked long enough. There weren't that many times if I'm honest, though, what with training then time with my regiment prior to passing-out and deployment, so getting home to mum and dad for Georgy's special birthday, just a few months before I passed out is the one that sticks in my memory, because she was going to be eighteen, not such a little girl anymore. Mum and dad had bought her a horse, and she and I spent my weekend at home grooming and mucking-out the thing, along with her other horse and the pony that had started this horsey obsession of hers, but it was time with my very best friend in the world, so it was time well spent.\n\nWhen I arrived back at barracks I had a stack of pictures of Georgy: Georgy and me, Georgy on her horse, Georgy eating the ice-cream cake I gave her for her birthday, Georgy sitting on my lap and laughing happily. As soon as I put her pictures out my squad-room mates homed in on the pretty girl with the mop of black hair and big grey eyes, and I had to deal with the barrage of questions about who she was, how long had we been going together, did she have any sisters, the usual guy stuff. It felt weird admitting the only girl I actually knew was my baby sister, so I kept my mouth shut and let them believe what they liked.\n\n*****\n\nPassing-out Parade was when it all finally came crashing down around me. Seeing dad huddled in his wheelchair, unable to even stand, finally drove home all the worries and suspicions that had been bubbling away deep inside me; he'd been so different last time I'd been home, and now all I could see was that my dad was seriously ill, he looked terrible, shrunken and huddled in on himself, his posture not that of the upright cavalryman I'd known all my life. My mind blanked, I was so shocked I could barely keep step as we wheeled and marched.\n\nGetting him home afterwards had been my priority, making the long journey home as easy on him as we could, and trying not to let the huge fear inside me take me over. Once we'd arrived back home, Georgy and I tried to make him rest, but dad had other things on his mind, things he felt he needed to tell me. It started with him telling me what was happening to him.\n\n\"It's Pancreatic Cancer, Will, we've been holding it off as long as we could, but it was never going to go away. It's at what they call 'Stage 4' now; no respite. I'm sorry, Will, I wanted to be here for you but it's not going to happen, so please listen to me. Georgy is going to need you, she and your mother are both going to need you to be there for them, and I don't mean here, in this house; you're supposed to be a soldier, son, you go and be what you're supposed to be, just remember one thing: this is your home, and your mother and sister will need you to be what I can't be for them.\"\n\nHe grinned, his old 'dad grin, and ruffled my hair.\n\n\"When I first met you, you were just a few days old; your father was here with your mother and you, he had to report back to Bulford Camp, so I came to pick him up, and that's when I got to hold you for the first time and tell you what a good soldier your father was. He was so proud of you, Will, and so was I.\"\n\n\"When your father was killed I brought him home to your mother. He was my best friend and you were all I had left of him, and you and your mother became my family too. I became what you needed for Jamie's sake, it's what he would have wanted; you know how that developed and what happened after that. I just wanted you to know that I'm as proud of raising you as my son as I am of you for being Jamie's son, there's so much of him in you, and he would have been so proud of how you turned out, always remember that.\"\n\nHe stopped, obviously almost at the end of his strength.\n\n\"Thank you for coming home with me, Will, it means so much to me that you're here now. Now go and find Georgy, I think she wants to talk to you, and ask your mother to please join me; I need to see her... \"\n\nI left him reluctantly; he was ready to go, even I could see that, and I really wanted to eke out however many precious minutes of time I had with him, but he and mum needed that time too. She and Georgy were waiting just outside dad's study; all I could do was nod, because I couldn't trust myself to speak as Georgy took my hand and led me into the parlour while mum joined dad in his study.\n\nGeorgy and I sat silently side by side on the couch, just as we'd done for years. I took her hand because I needed to feel physical contact with her, to try and recapture the carefree days of long ago when we didn't have this huge impending loss hanging over our heads. I was so wrapped up in my own grief that it took a while to realise she was crying silently, tears running down her cheeks and dripping heedlessly from her chin.\n\n\"How long have you known?\" I asked her, and saw the guilty little start from the corner of my eye.\n\n\"Wh... what Will, I mean... it's not... I didn't... oh Will!\" she wailed, and I couldn't be mad at her, she was my Georgy-Girl, and she needed me.\n\nI leaned over and wrapped my arm around her shoulders, pulling her to me as I blotted her tears the way I'd been doing since she was a toddler, and she grabbed my hand and held it to her cheek.\n\n\"What am I going to do, Willie? Daddy's going soon, what do I do next?\"\n\nI held her close, because I was damned if I knew; I didn't know how to deal with what was coming, this was all a first for me, I had no map, no manual, all I had was Georgy's grief and my own fear.\n\nWe were sitting in the gloom when mother came in and found us huddled together, Georgy all cried-out and me unable to process what was going on, the suddenness of it, the absolute hammer-blow that had fallen on me.\n\n\"Daddy has started taking the pain medications, darlings,\" she murmured, and, when I looked at her enquiringly she explained that he had been holding off on the palliative care medications so he'd have a clear head when he finally got to tell me what he needed me to know.\n\nGeorgy and I looked in on him one last time, but he was asleep and hopefully having some respite from the pain.\n\nDad passed away three days later with his family at his bedside, and four days after he was interred in the family vault in the estate cemetery. Georgy, mother, and Aunt Kay were managing as well as could be expected, dad's loss wasn't exactly unexpected, and I had to get back to my troop at Bulford Camp, Wiltshire. The British Army deployment of Operation Herrick was in full-swing in Afghanistan, and our troop, and several others, were finishing final shakedown training on Salisbury Plain prior to deployment. I, and the others of my graduating class, would be commanding FV107 Scimitar Armoured Reconnaissance Vehicles in support of the ground troops in Afghanistan.\n\n*****\n\nThe Wanderer Returns:\n\nEventually, even the most exciting adventures pall, and so it was for me. I'd believed we were going out to that place to fight a war that we would win because we were in the right, and we were better, but after four years I'd had enough, as had nearly everyone; it was sapping me, my men, even command echelon; we were getting nowhere, and losing men for what seemed no reason. My C.O. used to chide me for not riding the promotion trail, but frankly, the thought of bumping up to captain and another six years of this endless non-success we were relentlessly churning through filled me with a burning lack of enthusiasm and a strong desire to be somewhere else entirely. \n\nI requested an accelerated honourable discharge based on four extended operational front-line deployments in-theatre, and, after a series of 'what a waste of your training, we'll soon buck up your ideas, laddie-boy, go home on leave and come back a captain, you've earned the bump-up blah blah blah' lectures, they relented and handed me my papers. \n\nAfter having three Scimitars shot out from under my crew and me, and having to fight our way on foot back to the lines, then being offered what was left of our rapidly depleting mobile armour, a 1990's-issue refurbished and up-gunned Scorpion that made funny noises even standing stock still we'd all had enough, my men, our entire troop, and me; we kept on keeping-on, and it made no difference, it was just more of the same, forever. \n\nSpending my days dodging snipers as a matter of course, being endlessly locked in Osprey body armour and being so bored we were using the ceramic trauma plates as impromptu barbecues so we could try and make our rations a smidgeon more edible, and having no home leave, just Kuwait, which was even more depressing than Helmand, just added to the general air of fun and merriment. \n\nWhen we weren't sitting around tooled-up and waiting for movement orders, wondering what the real world was doing, and trying to remember what a pub felt like, smelt like, sounded like on a Saturday night out, telling lies about girls we hardly knew who'd mostly 'Dear John'd' us long ago, we were knee-deep in nightmarish hand-to-hand dust-ups with bands of screaming Jihadists and religious fucking loonies with grenade belts and great big swords and LAW rockets they'd fire like bazookas because they were mental. \n\nThis war was not at all like the heroic stands in 'Beau Geste' I'd read about as a boy, battling nobly and heroically against the alien hordes in defence of my Queen, no, it was kill, and kill, and kill some more. We were battling insane, pain-indifferent religious zealots who'd blindly charge our lines in fanatical, 'banzai' charges, or we'd end up in protracted, all night-long fire-fights that invariably descended into hand-to-hand 'stab, gouge, choke, and kick' fights with the ones who got through our lines and went kill-crazy.\n\nAfter four years I finally saw the writing on the wall and jacked it in; I was done. The place was a gigantic toilet plunger, sucking the life and will out of everyone there, it drained our spirits and made us careless, and careless soldiers are dead soldiers, apart from the one we didn't talk about, the ones who actually liked it and had turned into body-count obsessed, kill-crazy psychopaths, none of which any sane soldier wanted anywhere near them because they got men killed for nothing. They finally relented and rotated me out, Cyprus, Gibraltar, and Brize Norton, the long way round just to piss me off. ",
        "It was no surprise at all to me that none of my fellow troop commanders and their men were re-upping either; they were done too; the enlisted men had done their stint, they were sick of the army's 'hurry-up and wait' bullshit, and the long periods of dusty boredom interspersed with truly terrifying episodes of panicked combat against a fanatic rabble who didn't care if they were killed as long as they could get through our lines and kill us.\n\n*****\n\nArriving back home was a strange, almost surreal experience. For the first time in my life there was absolutely no sense of dad's presence; before, even if he was with the regiment, or home but out with the estate management people miles away, I always knew he was there, somewhere, I don't know how, I just did, the house just felt like him. Now, nothing, and it was weird, unsettling, wrong. Mother was expecting me, but not for a few more days, I'd told her I was going to spend some time in Gibraltar doing the tourist thing, maybe get around a few beers, and do what everyone does for entertainment and lob fruit at the apes just to watch the little bastards fight over them and knock the paste out of each other, but I changed my mind, so I was about a week early. \n\nGeorgy was due home from university that day, so I thought I'd ambush and surprise her, but she knew; somehow she knew I'd pulled a fast one because blow me down if she didn't barge in the door and call out \"Mum, Will's here, I know he is, where is he?\" So I had to jump out and surprise her and she did her usual frenzied leap on me.\n\n*****\n\nIt didn't take long to get bored; I love my home, I never tire of exploring it, but I needed to be doing something, something useful, not just a hobby, and maybe make some real money of my own, not depend on mother and the estate for handouts. I wondered what there was out there for someone who had basically been trained to drive a tank and kill people; not much, I suspected. The thought of managing the business-side of the estate left me entirely cold; we had employees with fancy degrees who liked that stuff and were actually good at it, I saw no reason to step on their toes. I could go and be a mercenary (apologies, 'specialist security contractor') but I have a deep-rooted aversion to killing people just because someone with an axe to grind asked me to, so what to do, what to do?\n\nAnd then it came to me; I was watching one of those 'fixing-up my perfect house' shows on TV and it struck me that I could do that; it looked kind of doable, and I had enough savings to buy a place, do it up, sell it on, and use the profits to do it again. So, I went looking for what I thought I could reasonably do up, something to get me into that world.\n\nWhat I found was not quite what I'd been looking for, but it was love at first sight, a beautiful listed Georgian mansion staggering on its last legs, but too beautiful and elegant to let go to waste, and literally going for a song; as soon as I saw it I knew I wanted it, and so, with a little help from Mother, and every last penny I'd saved, I bought the house that the council were shunning and hoping would fall down so they could sell the land in good conscience. \n\nI worked alone on the house; I had a shoestring budget, so I had to do everything myself; I literally taught myself, after much trial and error and outright fails, basic DIY skills like how to plaster and lime-putty, and how to use things like saw tables, chop-saws, milling routers and power-planers, and slowly, carefully worked my way, one room at a time through that magnificent but sadly decayed house, slowly defeating the ravages of time and gradually, carefully putting it back together again.\n\nGeorgy thought I was mad to saddle myself with such a huge task, but I really had nothing else to do, and no real-world skills, at least none I wanted to advertise. She couldn't bear to see me working away by myself, alone in that huge shell, so weekends when she was home from university she'd help me, fetch and carry, picnic with me in one of the empty rooms, and generally keep me company as often as she could.\n\nOther things were happening, too, things that were to directly impact on all our lives. It started innocuously enough, when I heard from Mother that she was feeling the strain of managing all the estate business, and she was thinking of engaging a business manager. \n\n\"Fair enough,\" I thought, Mother needed to start slowing down a little, the place wouldn't fall down if she wasn't everywhere at once. I never really wondered anymore about it, until one day I wandered up to the house to get a change of clothes and do some laundry, and there was a strange man sitting at my father's desk. He jumped when I cleared my throat.\n\n\"Who are you, and why are you in my father's study?\" I asked him, not exactly aggressively but letting him know aggression was an option.\n\nHe jumped up and walked around the desk, his face wreathed in smiles that didn't touch his eyes, and when I took his outstretched hand his handshake was the dreaded 'squishy wet-fish', limp and insincere.\n\n\"Hello, you must be Tyler; your mother told me you'd be around at some point. Mrs. Lassiter has engaged me to manage the day to day affairs of the estate, sort of take some of the business management burden from her; my name is Max, Max Preece...\" \n\n*****\n\nPart 2: A World of Our Own: \n\nGeorgy had some very definite ideas about how she wanted the nursery she planned to look, feel, and appear; she wanted a 'cosy' feel, which I didn't get but she knew what she meant, so I followed her lead. We hadn't really talked about children yet, not the nitty-gritty planning side at least, just the definite understanding that we were both on the same page; I wanted kids (note: plural; not one, some) we just hadn't had 'the talk' yet, but that was next. \n\nThe thought of Georgy pregnant made me feel very horny, I have to admit, and I wanted little girls who looked like her, black-haired, grey-eyed perfect little copies of my Georgy-Girl; the world could do with more people like her in it, and I intended to ensure it did, which is why we were making sketches of the old dressing room and taking measurements. Watching Georgy bend and shuffle around on all fours was also a sight worth seeing, especially the way her delightfully perfect bottom twinkled at me as she shuffled into corners on her hands and knees with the tape in her hand.\n\nGeorgy looked over her shoulder from her tape measuring and smiled at me.\n\n\"What are you smiling at, Mister Pop-Eyes?\" she teased, knowing full well I was contemplating her sleek bottom, and thinking pleasant thoughts about how it felt when I squeezed it, teased it, and jiggled it when we made out, not to mention bit it when the making-out got more serious. To tease me even further she stood up and shimmied her bottom at me, focusing me even more intently on her perfection. Georgy usually wore either yoga pants or skin-tight jodhpurs that moulded to her every curve and contour, and the sight of her in either was usually enough to get my motor revving.\n\n\"I was just thinking 'I wonder what that hot girl would look like all naked and stuff' and you derailed my train of thought, so now I'm going to have to come and see for myself...\"\n\nGeorgy giggled and dodged out of the way.\n\n\"No, bad boy! Down, Will, naughty monkey, don't make me use a rolled-up newspaper!\"\n\nIt wasn't that big a room, and I was faster than her, so I caught her easily and kissed her enough times to let her know I was serious; there's something about her, but one kiss just isn't enough, and the more I kiss her, the more I want to, and then naked things happen, so she finally sighed and surrendered.\n\n\"You are a very bad man, Tyler Wilmot, I hope you know that!\" she murmured, kissing me with those soft little butterfly soft kisses she does that drive me wild and always leads somewhere good.\n\nKissing her was good, and standing and holding her close while we snogged like horny teens was even better, but I wanted more, and by the way she ground against me, so did she; so why were we standing here? Luckily I knew a way to fix that, so over and above her token protests I carried her into our bedroom, handily right next door, wasn't that lucky?\n\n\"Willie, put me down no, I haven't finished yet, stop it, no!\" she gurgled, but I wasn't going to and she showed no inclination to take her arms from around my neck so she probably didn't mean it; besides I had my hands on her now, two very nice handfuls of soft, warm Georgy, and I was going to enjoy every second of it as I plumped down on the bed with her still in my arms...\n\n\"Will stop it, we need to talk, how can we talk when you keep...Oooohhh!\" (that was me sliding my hands down her inside her yoga pants and pulling her bottom cheeks apart)\n\n\"Naughty Will, bad boy!\" she giggled, so I stopped and she nipped the end of my nose with her lips.\n\n\"I didn't say I didn't like it, y'know...\" she grinned, wriggling on my lap so I did it again, making her sigh as she kissed me. When she'd decided she'd kissed me enough for now she pushed me over backwards and wriggled up to lie next to me.\n\n\"Can we talk now, Tyler?\" she smiled and I grinned right back at her; Georgy only calls me 'Tyler' when she wants something from me or needs me to do something; poor, simple, deluded thing, thinking she needed to do things like that; she should know by now that I'd give her anything she wanted even if she just gave me a vague hint. I did like it when she used my given name though; it was like a secret only we shared.\n\n\"So talk, baby girl, what's so important I have to give up my precious groping-time with you? This better be good.\"\n\n\"Shut up Will, I'm being serious!\" she responded, punching me lightly in the arm, then looked super-remorseful at my sudden gasp of agony.\n\n\"Owww, right on my war-wound! Georgy, why did you have to... \" I moaned theatrically.\n\n\"Willie I'm sorry I didn't mean it, show me, baby, I'm sorry!\" she gabbled, her eyes big and shiny. She gently slid my sleeve up while I did an Oscar winning turn of mute suffering, and watched her eyes narrow suspiciously as she scanned my arm for any sign of injury.\n\n\"Where's this so-called 'War Wound', Tyler Wilmot?\" she gritted and I looked innocently at her, all puppy eyes and sorrowful expression.\n\n\"I could have had one, the point is you just hitting me at random, after all I've been through, wasn't fair, supposing I'd really been injured, I bet you'd be feeling pretty bad about it round about now, after all...\"\n\nI got no further because she punched me lightly in the stomach and grabbed my crotch.\n\n\"Eight seconds to apologise, Wilmot, then you're a dead man and this is going in a jar on the mantelpiece!\" she murmured dangerously. \"One, two...\" \n\nI yanked her on top of me and kissed her. \n\n\"I apologise, Georgy-Girl, we're even now, so tell me, why did you drag me in here, much against my will, I might add, what do we need to talk about?\"\n\nShe stared at me open mouthed, lost for words, but I got in there with the tickles before she could go off on one. Georgy is super-ticklish, I know all her weak spots, and the best defence is always a good offence, and soon she was helpless, just beautiful putty in my hands.\n\nAfter I had her completely helpless I kissed her some more, and jiggled her bottom because A: I like doing it, and B: to focus her attention on me so we could talk.\n\n\"Right, Georgy, you enticed me into your den of licentious perversion and depraved sinfulness because you wanted to talk, so when you're ready...\"\n\nGeorgy pushed me off her so she could roll on top of me.\n\n\"I meant what I said about the jar, Will, just shut up and listen for a minute...\" she grumbled, so I parked my hands on her delectable bottom so I could hold her close, and assumed my expression of manic attentiveness, sort of like the social worker from Hell mixed with crazed, unfocused, wide-eyed staring that had driven my teachers to drink back in my school days.\n\n\"Will! Stop that and listen!\" she barked, so I stopped winding her up and squeezed her bottom; then I squeezed it some more because, damn, and just for good measure I squoozed it too, which is like squeezing but much dirtier, and paid attention. \n\n\"Finally!\" she huffed, \"I want to talk about where we're going, Willie, about what comes next...?\"\n\nI gave her the eyebrow.\n\n\"Floor's yours, Tinkerbelle; what's on your mind?\"\n\nShe looked pensive for a second, her patented 'Georgy getting her ducks in a row' look.\n\n\"It's about that room next door, what it means. I've wanted to have this talk properly for a while, we just had other things to get out of the way first, but now I think it's time. Willie, I love you, you know that, right?\"\n\nI nodded.\n\n\"And I love you too, Georgy-Girl, very much; I hope you know that.\"\n\n\"So Willie, we have something set aside from the sale of the house, much more than we thought we would, it's made a big difference to how well we can care for this place, a few more like that and we'll be out of the woods and sitting pretty until our trusts are all settled. You know I want that room to be a nursery, I want a baby with you so much, in fact I want babies, little girls I can buy stubby little ponies for, and noisy little boys to go sneaking out and go mad in the woods and go poaching and scrumping like their daddy used to-\" I stared at her, how the Hell did she know that?\n\n\"-but not right this minute; I want us to keep having our kind of fun just a little longer, please? Just one more time, okay Tyler? I know we said we would, but I wanted to make sure you were still on-board with it. Let's get another project house, do it up and sell it on, and the day we finish it we'll have a dirty weekend and do some serious baby-making, please?\" \n\nShe paused to check my eyes, and she must have liked what she saw there, because she continued.\n\n\"You know that if I thought you wanted it today I'd say let's go, because I so want to have your babies, but I want to have our kind of fun too, and I can't if I'm pregnant, I won't risk anything happening to me or our baby on a building-site, so please can we do it again just, one more time, just you and me, then start filling that nursery for real? Then, while I'm at home being Mummy-Goose you can keep going, get some people who know what they're doing in a team around you, I'll look over your shoulder and tell you how wrong you are, and maybe we can turn having fun into a real money-earner and keep the wolves from the door for real? Please?\"\n\nI pulled her to me so I could give her a long, meaningful kiss.\n\n\"Sweetheart, It's always been up to you, I'm not going to set you any deadlines or target dates, so we'll do what we said when we sold that place, that we'll find another one somewhere, we can start looking tomorrow if you like, you pick this time, you decide what we're going to do to it, how, and when, have a ton of fun, and when we're done we'll go and have a sexy weekend or ten on the coast and do lots of naked stuff, deal?\"\n\nGeorgy smiled her brilliant, sunshine smile and nodded.\n\n\"Deal!\"\n\n\"Good, glad that's settled, now come here, you shameless little hottie, I need to remove all this pointless clothing you're wearing, it is necessary to examine you closely, vis-a-vis the imminent lack of underwear situation we shall shortly be addressing...\"\n\n\"Oh sir, I'm afraid I left all my underwear somewhere else today, I appear to be wearing none; would you care to verify that this is indeed the case?\" laughed Georgy, wriggling enticingly.\n\nAs I slid her leggings down she giggled that rich tinkle that made the hairs on the back of my neck stand on-end. Georgy's bottom is irresistible, all toned and firm and delicious and begging for several large bites, which I duly helped myself to, before letting my tongue and lips wander over the rest of her, sampling as I went.\n\n\"Oh dearie, dearie-me, how careless of me, I appear to have been waylaid by a very naughty soldier, what shall I do, what shall I do, oh woe is me...oh yes, right there... like that, Willie...Oooohhh God, yesss...\"\n\nMy Georgy is such a fun-loving girl...\n\n*****\n\nThere were a surprising number of derelict, or semi-derelict mansions and decaying grand houses dotted around the region and begging for an update, from Georgian all the way through to a gigantic Art-Deco mansion that looked like just tons of creepy fun, and the best part was, none of them had been listed, so whatever we bought we would have a blank canvas. I left the selection entirely to Georgy, she wanted to break ground on a new project, and to be honest, if she hadn't joined me on the last one I'd still be staring at it and wondering what to do next and how the Hell I was going to do it when I worked it out, so this one was hers, I was just along for the comic relief...\n\nA local estate agent got wind of our search for something interesting, yet with development potential and renovation appeal, contacted us with a laundry list of candidate properties, and we were off to the races.\n\nI think we'd already gone through ten or so possibles before we walked into the one that made Georgy go 'Spunnngg!!' as soon as she walked in the door. It was a mid-Georgian stone-built Vicarage set in about three acres of what had once been kitchen gardens and flower gardens but was now just a mass of brambles and nettle patches. The village it was set in was mostly half-timbered seventeenth and early eighteenth-century thatched cottages and holdings with for-real picket fences and genuine cottage gardens, the perfect location, picturesque without being 'chocolate-box' twee and whimsical, atmospheric and pretty. It was exactly the kind of place the aspirational rich would see themselves as lords of the manor of, lording it over the archetypal English village in the posh mansion we intended to turn the house into. \n\nThe price was pretty low to begin with, the place had been empty and forgotten for decades, and the executors of the last owner's estate just wanted to get rid of it and realise some income instead of being lumbered with it forever, world without end, amen. As I said, the price was bottom-end anyway, but Georgy decided she wasn't even going to pay that much, not based on the amount of work we had to do and what it would cost, so she kind of got them in a headlock and squeezed until they saw the light and tapped-out.\n\nI was amazed and gratified at the rock-bottom price she negotiated, and awed at her negotiating skills; I had to remind myself not to piss her off too often, especially not after the way she put the vendor's arm up their back and squeezed mercilessly...\n\nHeading back home after signing the paperwork I noticed Georgy giving me some meaningful glances, which was good, I was hoping she'd caught some of the same from me, and luckily I was right; as we walked in the door she pounced on me, I was as a helpless rag doll in her ferocious grasp as she tried to ravage me fully clothed in the entrance atrium; only a discreet throat-clearing from Aunt Kay reminded me we weren't alone.\n\n\"I take it everything went well, children?\" she smiled, while I blushed like a beetroot. Georgy, of course, was completely unabashed.\n\n\"All according to plan, Aunt Kay; we have a new project to be going on with, and I was just telling Willie how we need to discuss things a little further...\"\n\n\"So I saw,\" smiled Aunt Kay, \"don't let me interrupt you, darlings, lunch is a little late today, it's at 1:30, I'm just keeping an eye on this new cleaning contract. They're going over the North end of the house today, so try and limit your 'discussions' to one of the guest rooms in the South end, they won't be cleaning there until tomorrow...\"\n\nGeorgy and I stared at each other and burst out laughing; I always knew Aunt Kay was completely unshockable, this was even more proof she was completely au-fait with what Georgy and I were doing, given that, when all was said and done, she was still my little sister...",
        "Never one to look a gift horse in the mouth, Georgy grabbed my hand and yanked me down the corridor to the guest suite, the 'Blue Room', so called because mother, as a joke, had once put Georgy's blue Donald Duck vase with a spray of silk roses in it on the mantelpiece and declared that \"we now have a 'Blue Room', just like Hampton Court!\", and the name stuck long after the joke had been forgotten. Guests were sometimes puzzled why it was 'The Blue Room', seeing as there wasn't any hint of blue in there, but it would have been impossible to explain, so we didn't. The name may have been a joke, but the huge, luxurious four-poster bed with the Damask drapes and lush brocade counterpane was anything but.\n\nGeorgy yanked me into the room and planted her lips against mine; I was trapped, what could I do? Of course I kissed her back as hard as I could, while Mister Hands explored her tight, sexy little bottom; I'm not daft, and I know the perfect set-up when I see it. Georgy wriggled against me, grinding against a part of me that really appreciated it.\n\n\"Oo-er, naughty soldier-boy wants to play, does he?\" she husked, grinding even harder, so I slipped my hands down the back of her jeans so I could cup her hot little bottom and squeeze it a little.\n\n\"Shall we be naughty, Ty? Shall we be naughty, dirty boys and girls, Ty? You wanna get naughty and dirty with me? You wanna show me what naughty squires do to naughty milkmaids, Tyler?\" she crooned, never once letting up with the wriggling and the grinding and the rubbing and torturing.\n\nMy cock was like an iron bar; Georgy does things to me that no other girl (and let's be honest, there were never that many, just weekend gropes in Camberley if we had a Saturday night free) had ever done, reached places no other girl had ever touched, not even my fantasy lays during my long days in the sandbox, and I needed to get her naked, because I had a large dose of ravishment to hand out...\n\n\"I've always wanted to be hammered in a four-poster bed, Ty, are you going to make my dreams come true, my hot soldier-man? C'mon, Tyler, show me how the naughty Tin Soldier likes to jig-a-jig!\" giggled Georgy, amusement and arousal fighting for control of her \n\nOh boy, that did it. Georgy shrieked with laughter as I picked her up and whirled her around, dumping her right in the centre of that sumptuous bed.\n\n\"You earned this, baby-girl, for real!\" I grinned, \"and when we do our thing I'm going to bring you back here and hammer you some more, got that?\"\n\nGeorgy grinned happily. \"Ooo, I love it when you talk property to me, tell me more, you dirty boy!\" \n\n\"Architraves!\" I drawled, leering at her, watching her pretend to shiver with lust. \"You filthy, dirty beast, how dare you... do it some more, now!\"\n\n\"Cornices and Crown mouldings!\" I snarled and she shuddered, jiggling most fetchingly, \"Oh you, you, you utter...MAN!\" She stammered, her hands clasped dramatically to her breast. \"How could you do this to me... more, I say, sirrah, more, now, damn you!\"\n\n\"Shuttering carpentry, there, how about that?\" I growled dangerously.\n\n\"Just take me now, I'm yours, you defeated me with all that dirty 'renovation-speak', you utter pervert!\" she giggled, posing theatrically. \"Come and get your reward you brazen man-hussy, you earned it!\"\n\nGeorgy was looking so damned appealing, and I couldn't take it anymore; playing silly buggers with her was all well and good, but I had the romantic setting, the hot girl, the perfect moment. \n\n\"I love you, Tyler Wilmot, did you know that?\" whispered Georgy, unbuttoning my shirt and tugging it off.\n\n\"And I love you too, Georgy Lassiter, I hope you know that?\" I replied. Georgy bit her lip and grinned as she nodded slowly.\n\n\" Course I do, silly man, now kiss me and show me how much!\"\n\nKissing Georgy is a real production, believe me; when we kiss she's tender, and yielding, and softly romantic, but she can be needy and demanding too, drawing our kisses out into more than just a prelude to lovemaking; kissing her is an experience, an achievement in itself, not just the start of something. I can kiss her for hours on end and never feel the same thing twice, because every moment is new and exciting, a different nuance of her in every kiss, all spread before me for me to feast on. I could have stayed there all day just wrapped in her arms, but I had something for her, and I had the perfect romantic setting, it was the perfect time for it.\n\nI slid off the bed and grabbed my jacket, fishing around in the pocket while Georgy (a very naked, very desirable Georgy...) watched in puzzlement. Finding what I was looking for, I sat on the edge of the bed and gently slid her toward me so I could look in her eyes. She still had that puzzled look, so I kissed her, then kissed her some more because, damn.\n\n\"Willie, what's wrong?\" she murmured, and I smiled at her worried face.\n\n\"Nothing at all Georgy, believe me, but there is something I need to ask you.\"\n\n\"Ask away, Willie, you know you can ask me anything, right?\" she smiled, so I kissed her again because it just felt so damned good. \n\n\"Willie...\" she prompted, so I stopped kissing her (dammit! I was enjoying that!) and pulled her onto my lap.\n\n\"Okay Georgy, here goes: there has been a Wilmot family here, in this place since before Magna Carta; they've always been landowners, lords of the manor, even, for nine-hundred years, and in all that time, certain... traditions have taken root. The family has always set great store in its past, its heritage, and its traditions and so now it's time to share one of the most enduring traditions with you...\"\n\nI pulled the little box out from behind me where I'd hidden it, and opened it. Georgy gasped at what was inside, a large, gold signet seal ring set with tiny rubies around a heraldic badge of a snarling leopard affront\u00e9 in high relief with its mouth open and a shield with the ancient Amboise-Wilmotte arms between its paws, with an ornate patt\u00e9e cross, a Templar emblem, entwined through the heraldic motifs. A dark, smoky, cabochon-cut ruby was set in each of the four angles made by the arms of the cross.\n\n\"Mummy's ring...\" she breathed, her eyes wide and wondering, and I nodded.\n\n\"Mummy's ring and a whole lot more, too. This ring has been worn by the lady of the house since the Third Crusade; the stones came from the hilt of the misericorde dagger my ancestor carried at the siege of Acre in Jerusalem. It broke when he was killed by Saladin's army, and his squire brought the hilts back to his wife, who had some of the stones set in this ring, and the rest in the cover of the breviary in the library. This ring also unlocks the family bible. It actually has a name: 'La Chatelaine', because only the lady of the house can keep it. Mother wore it, as did my grandmother before her, and her mother, and so on back.\" \n\nI buffed the ring with a corner of the bedclothes to admire the deep, dark sheen of the blood-red rubies before offering her the ring and watching her expression of wistful sadness at the memory of Mother wearing that ring on special occasions, and her playing with it when she was a little girl.\n\n\"For getting on for nine hundred years the lady of the house of Wilmot has worn this ring as the symbol of her duty to defend the family and this house in the name of the lord of the house in times of war, and as the emblem of her rank. Will you, Georgina Lassiter, marry me and be my wife, be the lady of the house of Wilmot, be my own chatelaine and wear my family's ring, and treasure the history and meaning that goes with it?\" \n\nGeorgy stared into my eyes, her eyes huge and shiny with unshed tears even as her sunny smile broke through.\n\n\"Yes Willie, I will marry you, I will be your wife, and wear your family's ring and treasure your family's history, and when we have a son and he brings home a wife to be mistress of this house, I will gladly honour your family custom and pass the ring to her when the time comes and teach her what the ring symbolises. I love you, Tyler Wilmot, and I so much want to be your wife.\" \n\nI slid the ring onto her finger and kissed her gently, not playfully like before; this was the most important moment of my life and I wasn't going to trivialise it in any way. Georgy, too, sensed that things had changed now, that we were no longer Georgy and Will, now we were us, a unit, the next part in our family story, and her returned kisses showed that she understood that.\n\n\"Finish undressing, Will, please, I want to make love to my husband...\" she whispered, and I wasted no time, because my mind was working in the exact same way; I wanted to make love to my wife, because that's who she was now, not just my Georgy-Girl, but my wife, the owner of my heart, and the lady of this house for real. Georgy kissed me as I slid my loafers off, and batted my hands away when I started unbuttoning my jeans.\n\n\"Nope, uh-uh, mine!\" she grinned, popping the stud and sliding down my zipper.\n\n\"Off, take them off...\" she murmured, so I obliged, kicking jeans and socks away to stand in just my shorts.\n\n\"Bob the Builder?\" she grinned as I posed for her.\n\n\"You gave them to me for my birthday, you wretched girl, so now suffer!\" I leered, \"I seem to remember you wearing 'Dora the Explorer' panties yesterday, as I recall I enjoyed exploring them, or have you forgotten that already?\"\n\n\"Oh pish, tosh, and pshaw, that was then, now come here, Ty, that's it, come closer baby...\" she crooned alluringly, so I obliged, and quick as lightning she grabbed the waistband and yanked them down.\n\n\"Much better,\" she smiled, \"now come here, I've got something for you...\"\n\nI made as if to grab her, but she dodged me and patted the bed beside her.\n\n\"Here, up here, Willie, let's do this properly, I only get one first chance at this, I want to do it properly.\"\n\nI looked at her quizzically, and she grinned that sexy, impish grin of hers.\n\n\"We were Tyler and Georgy before, but it's different now; now we're more; now we're going to be husband and wife. In every way that matters you're already my husband, that ring made it so, and as I'm your wife, I want our first time as us to be the first, best time ever. Come here and be my husband, Ty, please.\" \n\nWhen she put it that way I had no choice but to comply; no more banter, no more horseplay, this was serious, she'd never been more serious, and I'd never been more in love with her as I was right then. She was right, this was a special time, this was us making love as the new us.\n\nExploring Georgy's body was always going to be my first and favourite pastime; every inch of her was worth examining in minute detail, usually with a lot of giggling and a certain amount of tickling, but not now; now, I just wanted to make love to the most beautiful girl in the world, and she was right up there and on-board with that too, it didn't get any better than that. Until it did. \n\n\"No Tyler, let me...\" she murmured, when I went to pull her to me, eager as I was to once more make love to my girl. I relaxed as she kissed her way up my body, starting with teasing my navel with her tongue-tip, the feel of her sweet, gentle little kisses on my body, teasing, erotic, and agonisingly exquisite, fluttering against my skin like the softest touch of butterfly wings. She reached my throat, my neck, and goose-flesh erupted up and down my body as she gently kissed me in places I never knew could arouse me so much. My cock was straining for her, but she avoided even brushing against it, concentrating instead on driving me wild with just the brush of her lips against my overheated skin.\n\n\"Georgy...\" I croaked, lust and need for her almost overwhelming my senses.\n\n\"Please Tyler, just this once, let me...\" she breathed, never once letting up in her feather-light assault on my senses. \n\nNow she was lying next to me, her kisses decorating my chin, my cheek, the scent and feel of her the only things in my suddenly narrowed world; she was all there was in my world, all I needed, all I wanted. When her lips finally found mine I almost groaned at the exquisite torture, the mental anguish of her nearness, her kisses lighting up my brain and making my head spin. As her lips sealed to mine my hands found her, holding, squeezing, fondling her, and now she was lying on top of me, her hands holding my face as we kissed long and breathlessly, her body slowly wriggling against mine, grinding my hardness between our bellies, torturing me with what she knew I wanted to do. \n\nI felt her lips curve as she smiled, and her knees slip over my side, and then the pressure was gone, and loss crashed through me, no, I couldn't believe she'd take me there and then abandon me, until I felt her holding me, aiming me, and then the hot, damp, succulent pressure surrounding me as she slowly took me into herself, loving me the way she knew I wanted to love her. \n\nI gasped as I slid into her, echoing her hissing intake of breath. My hands slipped down to hold and caress her strong, sleek thighs as she rode me slowly, deliberately, taking her time to make this the most memorable ever.\n\n\"I love you so much... my husband!\" moaned Georgy, grinding and riding me, while I gritted my teeth and held back, wanting her to get as much from this as she was giving me. I never just have sex with Georgy; I make love to her, my whole heart is wrapped around hers when we join. It's never recreational or for fun, it's a re-affirmation of who we are and what she means to me, and she shows me in a thousand ways that's what it means to her too, and so it was now, me making love to the girl who was going to be the mother of my children, come Hell or high-water.\n\n\"I love you too, my darling wife!\" I gasped, holding her and marvelling at the sleek, muscular smoothness of her thighs as she redoubled her efforts, taking us to that place where ecstasy dwelt.\n\n\"Oh God, Georgy, what are you doing to me?\" I groaned as she clasped and released me, the rippling heat of her vagina taking me higher and higher even as she flushed, her eyes squeezed tight shut even as her mouth dropped open, gasping as she hammered herself against me, drawing me in, milking me, until: \n\n\"Ohh God! Yess, yess, yess, YEESSS!!\" she screamed as the thunderbolt of orgasm shot through her, electrifying her. I was right there with her, all my efforts to hold back, to pleasure her first paying off, but I couldn't hold back any longer as I to came like lightning, like molten iron, like molten lava, pulse after pulse of boiling hot spunk spraying out of me and deep into her, coming harder than I ever had before, filling my girl, my wife with my tribute.\n\nGeorgy slumped down on top of me, her heart thundering against mine, while her scent, sweet, sharp, a beguiling blend of arousal and fresh summer sweat mingled with the more subtle undertones of her own unique girl-scent in an exotic, intoxicating scent complex surrounded me and played hob with my nervous system. I was completely blown, my muscles twitching and trembling in reaction to the gigantic climax that had raged through me, and Georgy was no less exhausted, her body draped across mine, limp and unresponsive.\n\nI don't know how long we lay like that, lost in the afterglow of our mutual orgasm, until my softening cock slipped from her, drawing a soft hiss from her. \n\n\"Oh my God, Will, that was... oh my God...\" mumbled Georgy, kissing my chest and slowly slipping off me, to lie in the crook of my arm.\n\n\"We aim to please, Mrs. Wilmot, service with a smile, I hope it was to your satisfaction?\" I ad-libbed, and grinned as Georgy kissed my chin and patted my stomach.\n\n\"You did passably well, Mister Wilmot, I hope this is a taste of things to come?\"\n\nI pulled her into me so I could kiss her properly.\n\n\"Every day, and three times on Saturday, wife of mine!\" I grinned. \n\n*****\n\nAunt Kay showed no surprise when she spotted the ring on Georgy's finger, rather a tiny smile and an arch lift of her eyebrow as she first pecked Georgy on the cheek, then turned to me.\n\n\"Congratulations, children, I'm so pleased for you both, and Tyler? It's about time, I'm not getting any younger, you know! I expect you'll find a more suitable engagement ring soon, dear, there are so many fine rings to choose from in the family collection, or perhaps something more bespoke; 'La Chatelaine' is a beautiful, meaningful, very historic symbol but it's hardly suitable for daily wear, dear.\"\n\n*****\n\nWork soon commenced on our new project house. Georgy had a particular image of how the interiors should be presented, and while we were not hampered by any listing or grading requirements for the exterior, unlike the last place we'd renovated, we decided the classic Georgian fa\u00e7ade was something we wanted to preserve and inform the renovation of the interior. I'd had an in-depth structural survey done, and the architectural engineers were happy that the structure was stable and sound, just bare-arsed ragged, so we could begin the mammoth task of rebuilding the interior. \n\nAs before, the reclamation sites far and wide got wind of what we were doing, and what we'd probably need, and watching Georgy argue and bargain mercilessly over piles of timber, pallets of old Georgian Fletton brick, and crates of door furniture was a joy to behold. Because the brick was reclaimed, it was usually caked with old mortar and render, so Georgy would beat them over the head to get rock-bottom prices for them because we had to clean them up, and we'd spend whole days with hammers and bolster chisels doing nothing but chipping all that old crud off the bricks to get them clean and ready for reuse. My sweet girl was an absolute shark; I spent a lot of time with a huge grin on my face because of the way she bit suppliers' arms off if she thought they were pulling a fast one, and I was absolutely enchanted at the way she was taking the lead on this project.\n\nAs before, we began with the basics; the place had no connection to the electrical mains, no mains gas; the plumbing, what little there was, was 300-years old lead pipe, so it would all have to come out, and there was no sewage provision, not even earth-closets, just a collection of long-defunct outhouses. The roof and chimney stacks were close to collapsing, so new bracing, trusses, and slates, and new lead flashing around the rebuilt chimney stacks, and the damp in the cellar needed to be addressed before anything else happened. \n\nAn architect provided us with a set of drawings that allowed us to make changes to the inner fabric of the building, but the first task was getting experts to plumb and wire the house, and argue with the water-board over the price of clean water mains connection, a weeping tile and herringbone drainage network, and grey water and soil and sewage pipes trenched down to the main sewer and storm drains out under the main street of the village. \n\nWhile the licensed specialists were doing their thing, Georgy and I got down to restoring what we could of the original High-Georgian interior. The rooms were all grandly proportioned, with high ceilings and tall, elegant windows, and had once had tall, double-leaf doors, of which only the splintery, rotted-out jambs and sills remained, but it gave us a good idea of what they were supposed to look like. \n\nThe actual windows and doors would have been the kind of imposing, slightly over-scale appearance we'd come to expect of the period, so a large part of our time was spent in deciding what the door and window architraves, capping, and skirting boards should look like, and then reworking more of the stripped reclaimed doors and wood to make them fit our vision. \n\nGeorgy had another brilliant idea, one I should have expected from her; if we couldn't get genuine over-scale Georgian doors for the four grand reception rooms, and having them made to order was ridiculously expensive, then maybe we could take one of the smaller Victorian doors, they were readily available from the paint stripping places, pull it apart, and copy it. The style was exactly the same, they were just smaller, so maybe we could copy the door panelling, stiles, rails, and mullions, just proportionally wider and taller instead of filling and bodging those imposing over-sized doorways and installing smaller, clumsy-looking, out-of-scale doors; we already had routers, chop-saws and table saws, we knew how to measure and cut, we could probably do it ourselves. ",
        "The idea definitely resonated with me; my only caveat was if we remanufactured the doors then they had to be made out of old, seasoned, reclaimed wood; I wasn't prepared to go with things like MDF or modern resin particle board, either; I wanted these doors to be made of the kind of figured, stained, deeply-waxed and polished wood the eventual owners' great-great-grandchildren would be running their fingers over and treasuring 100 years from now, not modern, lashed-up phonies. Luckily Georgy was in complete agreement with me; a house this age and quality needed sympathetic restoration, not a quick lick of paint and temporary modern fixes. \n\nPeriod floorboards and wood panelling were readily available, we could make the doors out of that supply of aged, seasoned Oak, Deal, and Walnut for one-tenth of what it would cost to get them custom made from modern, newly felled and kiln-seasoned wood; it's almost impossible to fake a genuine-seeming aged appearance with new wood, no matter how meticulously one sands, fills, stains, and French-polishes it, and the market we were aiming at would know the difference.\n\nSame thing went for the wainscoting; Georgy was raring to make it, she knew how to do it now, and she had her own ideas how and where to install it to suggest the elegant Period grandeur of the house in its hey-day\n\nSeeing the mischievous pixie grin when she made any suggestions kind of made me forget about house renovations and concentrate on her. I know I've said it before but damn, in painter's overalls and safety goggles and her cute yellow safety helmet she was just about the most adorable thing I'd ever seen, and with power tools in the mix too? There's a reason tool manufacturers have pretty girls in big, clunky boots and safety goggles posing with demolition hammers and chop-saws at the trade shows, and if she persisted in being so bloody sexy then I was going to keep on downing-tools so I could partake of her, screw work in progress; my game, my rules, my Georgy. \n\nTaking her home each evening after a satisfying day of working with her and watching her create was just the perfect topping to my day; Georgy and I never worked at cross-purposes, never argued, everything we did was with the knowledge the other was completely on-board with it; it was strange, like we were joined together at the mind, whatever she liked, I liked, whatever she wanted to do, I already knew I wanted to do that too. As always, watching her diligently measuring, cutting, milling, routing, re-measuring and dry-fitting like she'd been doing it every day of her life enthralled me. She'd look up and see me admiring her and give me that smile, and suddenly the whole day came into focus, with her smile all I needed to make my day compete.\n\nLike the other day for instance, when we'd finally got the supply agreement from Severn Trent Water nailed down, and she'd spent the day with their groundworks people mapping and marking out the trenching for the soil and clean water mains and looking bloody sexy while she did it, too. Just watching her being so damned good at what she was doing, the only thing I could think of was her, how happy she looked with the work she was doing and the skills she'd acquired, but overriding all that was how much I wanted her. Keeping my hands off her all day was a major issue, and I mostly wasn't successful, but we managed to limit our trysts to the 'mostly not-naked' variety, just heated kissing, grinding, and some surreptitious groping. \n\nHowever, walking in the door back at home meant the time for restraint was gone, the gloves were off and we both knew it! Aunt Kay had gotten used to our shenanigans at day's end; we made sure we didn't disrespect her in any way, but damn, after a long day watching Georgy and wanting Georgy it was hard to not just grab some Georgy and start what I knew was going to end well, and Aunt Kay made allowance for that and discreetly made herself scarce.\n\nFirst came the chase; Georgy raced shrieking and giggling up the stairs with me in hot pursuit, followed by the tackle, where we somehow managed to land in the middle of that huge bed, followed by the tickle-battle. Georgy is incredibly ticklish, and I just love finding new places to touch, stroke, nuzzle, lick, kiss, or caress, and see how much it made her giggle and squirm, all of which ramped-up my libido to boiling point. After I'd thoroughly enjoyed exploring all her ticklish zones then I moved on to unbutton those sexy painter's overalls (okay, she made them sexy, but you know what I mean...) so I could slide my hands inside and squeeze her lovely firm, muscular little bum and jiggle those golden globes while she squirmed and wriggled and ground against me as we kissed like newlyweds. \n\nAfter that, sliding her out of her clothes so I could feast on her nakedness was all that was left to do, and I took my time, because peeling a peach like Georgy out of her clothes was never going to be a quick yank and off they come; oh no, I had to slowly, teasingly strip her, so I could kiss and lick and caress her some more and reduce her to a panting, giggling, mewling mass of Tyler-neediness so I could pounce on her properly. I'd like to say that at this point she should probably have been defending her honour against my ravages, but that would be untrue, because what she was really doing was undoing my jeans and grabbing my cock which, thanks to her nearness and just being Georgy-hot, was at full stretch and begging for her.\n\n\"OOHH, look what I found!\" she gasped, all wide-eyed and innocent, licking her lips and squeezing me, biting her lip as my cock pulsed in her hand. \"Wow, Willie, I do believe this thing's alive, what do you think I should do with it?\" squeezing and slowly fisting me while my eyes crossed with the effort of trying to back down from what she was doing to me.\n\n\"Use your imagination, Katy-May!\" I grinned, daring her to try something new. With Georgy, the way to get her to do something is to dare her, she can't resist a challenge, and from the look in her eyes I knew she was going to go all-out to pick up that gauntlet.\n\nHer eyes sparkled mischievously, and she lowered her head, kissing my chest, soft, delicate little brushes, before kissing further down, along my abs, and past my navel. She looked up at me and I just grinned, but inside I was praying 'please God, please, this time, eh? Just this one time...' and then I gasped as her tongue tip flicked over the swollen crown of my rampant cock and rasped ever so gently over the furrow in the end, making my whole nervous system light up like a Christmas tree.\n\n\"Yesss!\" I groaned as she slowly slipped her luscious lips over the end of my cock and sucked, just the merest suctioning, but it felt like nothing I'd ever experienced. I was in a daze; Georgy, my beautiful Georgy-Girl, was sucking my cock, a first for her, and doing a cracking good job of it too... \n\nShe got into her rhythm, head bobbing as she loved my cock, her lips sealed around me and her tongue lashing the tip and probing behind the crown, tasting and polishing me all at once, and I was in a seriously good place, getting the best head in the world from the hottest girl in the world, so much so that when she pulled away I actually cried out in disappointment.\n\n\"Nuh-uh, Tyler, your turn!\" she grinned, \"I showed you mine, now you show me yours! You ready for this soldier-boy?\"\n\nFuck was I ready! I pulled her over me, positioning her over my mouth, enjoying immensely the thrill and shudder that ran through her with my first gentle kiss on her sweet, succulent little muff, the luscious feel of her silky hairs against my tongue, and the smooth, sleek muscularity of her long thighs as I gently probed her with my tongue-tip, breathing her in as her arousal ramped-up, her sweet, tangy scent gusting over me.\n\nGeorgy gasped softly the first time I pushed my tongue between her labia, which flowered open beneath my probing, her scent growing stronger, sweet and earthy and musky and delicious as I worked her up, and when she took me in her mouth again I almost passed out from the shock of pleasure that zinged straight up my spinal cord and into the deepest core of my brain.\n\nWe played like this for I don't know how long, taking each other to the brink and backing down again and again, learning what the other liked and sneaking it in to enhance our love-play, until finally I pulled her closer to me and rubbed and lashed her clitoris with the flat of my tongue. Georgy screamed deep in her throat as she came like a freight train, her sweet, tangy juices surged, filling my mouth, my head with her perfume, and exciting me even further with the taste of her even as her powerful thighs clamped tightly around my head. \n\nI couldn't hold back any longer, it was finally too much for me, and I came with a guttural roar, my cock pulsing in her mouth as bolt after bolt of spunk flooded her mouth, while she sucked and swallowed and fisted me, milking every last drop out of me and polishing the head of my cock clean of every trace of my soul-shivering climax.\n\nGeorgy rolled off me, her muscles twitching in a surging tide of adrenaline, aftershocks quivering through her. I was in no better condition, shattered to the point of utter exhaustion by such a mind-blowing climax; it was all I could do to muster up enough strength to pull her to me, into the shelter of my arm, and that's all she wrote.\n\n*****\n\nI woke with a start, a momentary disorientation making me wonder what time it was; the sun didn't have that morning, white-golden quality, and when I looked at her, Georgy was wide awake, her eyes soft and gently amused.\n\n\"Georgy, what... \"I began and she smiled.\n\n\"It's just after seven, Will, you've been out like a light for almost two hours. Better get a shower, babe, Aunt Kay says dinner is in forty-five minutes, we need to clean up a little.\"\n\nI yawned and stretched mightily, before wrapping an arm around her.\n\n\"Cuddle first, then shower, okay? C'mere, you...\" Georgy smiled and huddled up against me, her arm around my waist and her lips in the hollow of my neck as I in turn grazed on her neck. I could have lain like that the rest of the night, but Aunt Kay was holding dinner on us so I had to get up, more than a little regretfully, get showered, and go down to dinner. Georgy showered with me, and while there were lots of opportunities and several blatant invitations to indulge in a little hanky-panky, my battery was flatter than a witch's tits; a large portion of steak, fried potatoes and greens, and steamed plum pudding with custard was the best way to recharge it, thankfully that was exactly what Aunt Kay had cooked.\n\nAll in all, we were as happy as we could be, doing something we loved, that was actually fun, and might even make us some money. Life was good, and getting better, until the day it became not a game, and reality bit us hard. Every bottle of Mezcal has a worm, to show it's real, ours had a poisonous fucking maggot, and it was about to show its teeth...\n\n*****\n\nIt began, as all these things do, innocently enough. Georgy had gone home ahead of me to go through some paint swatches from one of the specialist suppliers, and I was busy buttoning-up the house at end of day, checking the doors and windows were all locked, the power tools were unplugged, and the tool chests and vaults were locked and secured when I heard the rumble of thunder. My ears pricked up; Georgy was at home with Aunt Kay, but thunder; she was going to need me post-haste, this was the one thing she had no defences against. \n\nI went to unplug the battered old site radio, and switched it on to hear the national news headlines. I'd stopped switching it on while I was working, I'd only ever bought it to keep me company while I was working alone, and now Georgy was with me every day, I didn't need the background noise to break the silence. Anyway, I switched it on to catch the news headlines and my blood froze; the top story was about a jailbreak that morning at Long Lartin prison in Worcestershire, not that far from us, a category A prison where they stashed violent predators and murderers, and the names of the four men who'd managed to escape while being readied to transfer to another high-security prison in Yorkshire; Max Preece was one of the names, and there was no news of his whereabouts, or any of the others, just a note that they were considered extremely dangerous and were not under any circumstances to be approached if spotted.\n\nShit, he'd been out for a whole day now, he could be anywhere, all the more reason to hurry home, Georgy was alone with Aunt Kay, that fucker had a major axe to grind and he probably knew how to get into the house undetected. I rang Georgy's number and she answered almost immediately.\n\n\"Georgina here, hello Tyler, dinner will be ready soon, hurry home.\" she answered, her voice steady, but my heart sank; she was in trouble; \"Georgina\" was her duress-code, telling me that things were bad, and \"hurry home\" was code for 'be really careful when you come in.' Smart girl for keeping so cool and remembering our codes for trouble at home after the last time.\n\nI tried to drive into the main gates as unhurriedly as possible, even as more and louder peals of thunder rolled and crashed; I didn't know who might be watching, and I couldn't afford to tip them off, even as I worried how Georgy was coping with the terror of her thunder phobia and whatever else was going on in the house, so I parked in my usual slapdash manner and ran into the house. \n\n\"Georgina?\" I called, and I heard her replying from upstairs.\n\n\"We're all up here, Tyler, in the double bedroom.\"\n\nOK, we didn't have any double bedrooms on the first floor in that part of the house, so she was telling me there were two people up there with her and Aunt Kay. Bugger, two of them, maybe armed, and waiting for me. What's the betting one of them was that fat little rat-shit bastard Max? I had no option now but to go up there and spring their trap, they had my Georgy, and I knew what Max wanted to do to her. I couldn't let that happen; one way or another, that little puke was going to die.\n\nI bounded up the stairs as the thunder rolled and boomed even louder.\n\n\"Georgy? Are you okay? Hang on, I'm coming, where are you?\" I called out and \"I'm in here, Tyler\" came from our open bedroom door. I pushed the door open and paused in shock, caution forgotten, at the sight of Georgy with her arm held behind her back by a scruffy, unshaven little man in nondescript jeans and sweatshirt, and Aunt Kay lying unconscious on the floor, a huge bruise discolouring her cheek and eye-socket, and blood seeping from her split lip. Georgy's eyes flew wide open just as I sensed someone behind me, and then my world dissolved in a blinding purple flash of pain and the taste of brass, then darkness.\n\nSomeone was shaking me, I must have slept in, God, don't say I missed 'The Rouse', I thought disjointedly, I was in for the high jump now, while other scattered thoughts warred for my attention; I was due out on patrol, or I'd just come back in from patrol, time and events shuffling randomly, friends and other familiar voices echoed and buzzed in my head, a sudden, dreadful sense of loss when I thought of dad, a random thought that the big guns were really having a field day judging by the continuous loud rumbling, and over all of it a terrible pain in my head.\n\n\"Been shot...\" I remember thinking, and feeling nauseous, and when I opened my eyes my vision was blurred and doubled; I was home, how? The last thing I remembered with absolute clarity was bugging out after my Scimitar FV107 ARV got targeted and popped by a three-way RPG strike, one glanced off but the other two were bang on, the three of us bailing at warp-speed before we brewed up with it, ducking behind some rocks to weapons-check and count ammunition for the risky trek back to the Bastion, then suddenly Georgy, all grown-up and teary-eyed, rubbing my face and kissing my forehead.\n\n\"You didn't have to hit him so hard, you fucking piece of shit!\" she screamed, and stumbled back as a man's hand backhanded her, dropping her on top of me. Georgy scrambled around to glare with murderous hatred at someone standing out of my line of sight, her face pink where she'd been struck.\n\n\"Hit me all you want, you pathetic little turd, you'll never be a man, just a pointless, disgusting, fat little loser, you had to hit Will from behind because you're a cowardly little shit-stain who couldn't be a man with lessons and a lottery win! Watching Will kick shit out of you made my bloody day, you greasy little shitbag!\"\n\nA man hove into my line of sight, and it took a moment for me to realise through my blurred vision and the ringing in my head that it was indeed Max, and he looked dreadful, which cheered me no end; obviously being the prison's blow-up doll agreed with him. His face writhed with hate and fury as he loomed over Georgy.\n\n\"Your fucking brother deserved it, you little slut! He sent me to that place, he fucking owes me, this whole family owes me, so you pay up, NOW!\"\n\n\"Fuck you!\" screamed Georgy, \"no-one owes you anything, you're just a criminal scumbag, I hope you die of AIDS in prison, you fat little fuckup!\"\n\nI tried to struggle to my feet, but any slight movement set my head ringing like a fire-bell all over again and waves of nausea shuddered through me. In a detached sort of way I clocked the spreading puddle of blood on the rug under my face, and heard a snuffling sound that I realised was me, breathing through the blood pouring and bubbling from my nose, and a warm itchy tickle on my neck as blood dripped from my ear.\n\nMax reached down and grabbed Georgy's arm, yanking her to her feet.\n\n\"Come with me, you little slut, you're going to show me where the old bitch stashed the money or you're fucking dead! I know she took the money and jewels out of Coutt's, I saw the paperwork, it's all here somewhere, and you're going to show me where, or that idiot brother of yours dies, you listening?\" \n\nHe shook her like a terrier shakes a rat, and his accomplice, partner, whatever, kicked me in the ribs, setting off a whole new jangling cacophony in my head.\n\nMax dragged Georgy out of the room, I could hear him talking, ranting, and shouting at her getting fainter as they moved down the corridor toward the back stairs. I knew this was bad, Georgy was in danger, and I was injured, but I had to do something, anything. I'd been trained in one-on-one unarmed combat, but I didn't think my instructors were thinking about fighting off escaped convicts in a stately home, and I couldn't think straight, all I could concentrate on was dealing with the man watching me, straining against the noise in my head to think of some way to neutralise him. And then it came to me, so simple, one of the first things our instructors had shown us. I had to try it, and I'd only get one chance, so it had better work.\n\nTo think was to act, so I rolled on my back with a groan more heartfelt than phony, getting a good look at the skinny, spindly, shaven-headed scum bag who'd come uninvited into my house to hurt me and mine. As soon as I moved, he dropped to his knees, maybe he thought he was going to restrain me, but when he reached for me I grabbed his arm and yanked him closer, unbalancing him. The pain in my head was enormous, I really thought I was going to pass out, but I gritted my teeth; that fat fucker had injured me, but I wasn't dead yet, and his mate was going to pay.\n\nCatching him by surprise was the only reason it worked; as he sprawled across me, I wrapped my arms around his head and clamped hold; he barked in surprise and tried to struggle away, but I had tight hold of him. All I could concentrate on was what my instructor had drilled into me: 66 pounds, it only takes 66 pounds to snap a man's neck, more if he's struggling, so do it quickly, before he realises what you're doing.",
        "I think he thought I was trying to choke him, and he struggled to get away, but I hung on, I was much bigger than him, and I had no choice, this was it; if I failed we were all dead. With one final surge that felt like my head was exploding I wrapped my legs around him, pinning him against me, and twisted his head in a quick, snapping motion, just the way I'd been taught, crying out as the enormous bloom of pain in my head nearly blinded me. I felt something give, and he went limp, the effort leaving me wrung out like a wet dishrag with his dead weight motionless on me.\n\nPushing him off me and rolling to my knees took more effort than pushing a dump truck uphill, my vision blurred and doubled and danced, and the wave of nausea was so intense I vomited, retching again and again, but I somehow got to my feet, retching even more as the waves of nausea threatened to drive me to my knees again; Georgy, I had to get to Georgy, Max had her, and he was going to die.\n\nSomehow, I managed to stagger into the corridor, the dim coolness helping my vision and nausea a little, but my balance was shot to hell. I could hear voices coming from the secret stair landing, Max cursing and swearing and ranting, so I held onto the wall, staggering as the floor swooped and danced and shifted under my feet. The corridor in my family home, the upright in the 'E' shape the house was built in, is ninety yards end to end, my ancestors believed in big and impressive, but it felt a million miles long as I inched along it. I didn't know what I was going to do when I caught Max; my first thought was I was going to crush his fat throat and watch him strangle, but I had to get to him first, and I didn't know if I could even make it that far, not when I wasn't even sure where the floor was. \n\nStaggering along a million miles of corridor that swooped and tilted under my feet and spiralled away from me, fighting nausea and the deafening clamour in my head, I finally made it to the landing doorway. Max had left it open, which I thanked providence for, because I didn't know how I would find the hidden catch, let alone operate it, but when I lurched in the entrance, the look of terror on his face made it all worth it. He paused, frozen, he obviously thought I was too out of it to come after him, and that was all Georgy needed. Her face writhed in fury as she she shook his hand off and stepped up. Her foot lashed out, a hard, stamping kick, powered by all her hate and anger, right in the middle of his fat belly, knocking him over the low, slender balustrade. Georgy was an equestrian, and one of the benefits of riding her powerful horses every day was it toned and developed her thigh muscles and all that power and toning landed right in the middle of that disgusting fat fucker's bread-basket. \n\nA brief cry, a loud thud, and silence. Georgy jumped to grab me before I fell, but I had to see, I had to know. Looking down, there was Max at the foot of the stairwell, he'd dropped right through the middle of the spiral staircase to land on his head on the bottom tread and he wasn't going anywhere; no one with their head bent in that direction was going to get up and walk away from anything. I think I grinned at Georgy, but then I had to sleep, I was bone-weary and nauseous, and the blackness was rising faster than I could hold it off. \n\nGeorgy tried to hold me up, but I was falling, falling into deep, warm, velvety blackness and sounds of voices soft and far away, funny, they all sounded like Georgy, but I couldn't make out what she was saying, and then silence.\n\n*****\n\nI woke in an unfamiliar white painted room, in a bed shrouded with a thing like a plastic tent with something taped to my top lip and bags of clear fluid on wire racks with tubes connected to my arm and chest. I panicked, I couldn't move, and then I realised I was restrained, there was something around my waist, and my forehead, and my wrists were also restrained. Where was I, why was I here, where was Georgy, and what had happened; had I been injured? How? Where was everyone?\n\nA young-looking, pretty little Asian doctor dressed in scrubs, with a surgical mask hanging under her chin and a stethoscope around her neck came in and unzipped the plastic tent, and slipped a blood-pressure cuff around my upper arm.\n\n\"Excuse me, where am I? What happened?\" I asked; tried to ask, I should say; all that came out was a collection of hoarse, scratchy sounds, and my lips felt cracked and dry.\n\n\"Don't try to talk, Tyler, just rest, your throat's too dry but you can't drink anything just yet, you're Nil by Mouth for now, maybe tomorrow we can take the IV drip out and you can sit up; if you can, you can have some water then. You're not really thirsty, you just think you are, your electrolytes and hydration are normal, so just bear with us a little longer. Now, there's someone to see you, she's been waiting three days now, just don't try and talk, and please, just take it easy, you're doing well, the operation went well but we just need to keep you immobilised a little longer, so don't panic, everything's fine, you're fine.\"\n\nShe patted my hand, took the BP cuff off me, made some notes on the chart in the holder next to the bed, and moved the squiggly monitor thing with the big yellow flickering numbers out of the way. She pulled the door open and beckoned whoever was outside. \n\n\"No more than thirty minutes, okay? He's still very disoriented, and he may fall asleep while you're talking, if he does don't worry, that's normal, he's been through a lot. He's still Nil by Mouth, so please don't try to give him anything to drink, he might aspirate and choke, but you can wet his lips if you do it sparingly, there's a water-bottle and sterile gauze pads in the night-stand. Stop at the station on your way out, I need to go over some things with you.\"\n\nShe stepped aside and there was Georgy, my Georgy-Girl, looking impossibly beautiful, tears in her big, beautiful grey eyes and her smile huge and radiant.\n\n\"Oh Willie, it's so good to see you awake, I was so scared, but they said the operation was a success, another few days and you can come home!\"\n\nI tried to speak, to ask her what happened, but she put her finger on my lips, and looked around to check the door was closed.\n\n\"Shush, Willie, your surgeon, Doctor Can\u00eate, said no talking, so be quiet!\" she murmured, \"About the other thing, don't worry about it, it's all sorted; the police came and left, they're satisfied Max and his accomplice died through their own incompetence, so they've closed the case, and they're going to recommend their deaths are recorded as 'Death by Misadventure' by the coroner. As far as the police are concerned, those two argued over who got what in the robbery, Max murdered his partner and fell down the back stairs in his rush to escape, because you couldn't possibly have done anything while incapacitated with such a serious head injury, and they know I couldn't have snapped that man's neck, not while Max was restraining me, I still have the bruises on both arms, plus Aunt Kay's own injuries meant she was also incapacitated, so we're okay, I think they know what really happened, but they're not taking it any further; we're in the clear.\"\n\nI managed to breathe 'what injury, what did they do to me?' and Georgy's mood immediately sobered up.\n\n\"Max hit you with that bronze statue on the mantelpiece; it caused a depressed skull fracture, and made your brain swell. Willie, they had to cut a piece out of your skull to save your life!\" \n\nShe was crying now, huge tears racing down her cheeks. She picked up the chart and flicked through it.\n\n\"You had something called a, called a, here it is, a 'subdural haematoma', they said it was a blood clot on your brain and they had to take it out or you would die; I had to sign the consent forms, I was your only kin, and they took you away and they cut your head open! They shaved your head and took a big piece out of your skull, then they screwed it back in again, I was so scared, we had so many plans, and that nursery we were going to make for our babies, I was so scared I'd never need it, and seeing you lying there so pale, day after day, barely breathing, and I knew, I just knew I was losing you, I was so scared...\"\n\nHer fingers were twining with mine, the best I could do; I wanted to hug her, to tell her I felt fine, that I'd beaten it and I was coming home, and all I could do was make rusty, croaking noises. Georgy bowed her head down, resting her forehead on my hand as she cried, but I managed to squeeze her hand to let her know I was okay, that we were good, that it was over.\n\n\"Aunt Kay...\" I managed to whisper, and Georgy smiled through the tears streaming down her face.\n\n\"She's going to be fine, bad concussion and a fractured cheekbone but no other damage, they kept her in for observations too, she's next door; I'll try and bring her in tomorrow if they'll let her out of bed.\"\n\nI struggled weakly against my wrist restraints, and Georgy squeezed my hand, stopping me.\n\n\"I'm sorry about your hands, baby,\" she murmured, \"they don't want you turning around or touching your head yet, not until your sutures heal; they had to screw the piece of skull back in and it hasn't healed yet, so just a little longer, I promise.\"\n\nShe twinkled at me, her eyes flashing with mischief.\n\n\"When they asked my relationship to you on the form, I wrote 'spouse', so you, mister Tyler Courtenay De Morgan Giffard Amboise-Wilmot, are now officially my husband, got a legal paper that says so and everything, right here, look, so note to self: I shall be expecting an appropriate ring in the very near future!\"\n\nI grinned at her; incapacitated as I currently was, and distressed as she obviously was, I could still appreciate her piquant beauty and sweet, pixie sense of humour; when I got out of this place we were going to have that conversation about babies again; life was too short to make long-term plans, and after what we'd been through I knew I had to grab the brass ring while it was still in my reach.\n\n*****\n\nWhen I finally arrived home, in an ambulance, no less, because I wasn't allowed to walk or drive in case I jarred my rebuilt skull, I found the house a hive of activity; word had gotten around, and many of my old troop mates, enlisted as well as officers, had shown up to lend a hand and keep an eye on Georgy and Aunt Kay for me; the way those bastards had brutally attacked a nearly 80 year-old woman made them sick and very angry; if they weren't dead they would have sustained serious, maybe even fatal 'accidental' injuries. It brought a lump to my throat to think so many of our men, some of whom had known mum and been guests in this house, but also some I only vaguely remembered from my time in the sandbox, had thought so much of me that they'd come from far and wide to guard my home and family in my time of need. Those who weren't on protection duty had turned their hands to helping Georgy realise her dream house, and what they couldn't do they had mates who could, and the project house was galloping towards completion.\n\nI couldn't do much, not with a fractured skull, and I sweated at home, mostly confined to bed, while the injuries to my skull healed; the first time the consultant orthopaedic surgeon pressed on the bone flap site of the craniotomy and declared he couldn't feel any grating ('crepitus' he called it) of bone against bone, which meant the bone had remodelled so the titanium screws could finally come out made me both very pleased and slightly sick at the same time, because who wants to know their head is being held together with screws? Yuck, shades of Frankenstein...\n\nWhile I was lying around watching TV and wondering how the house was coming along, Georgy had enough free time to plot and plan with Aunt Kay as to how we could officially tie the knot, but Ah-hah! I'd already worked it out; my father was James de Morgan Giffard Amboise-Wilmot (which is why I only used the 'Wilmot tag, because damn, it was a bloody mouthful...), and my mother was \u00c9die Amboise-Wilmot n\u00e9e Blaise De Monts\u00e9gur; mother was from an old French aristocratic family, although you would never have known it from her complete lack of a French accent. Dad had met and wooed her when he was in Paris on leave. Georgy's father was Jerome Woodville-Lassiter, and her mother, according to her birth certificate, was \u00c9deline Woodville-Lassiter n\u00e9e Poitevant-B\u00e9rou. \n\nIt all worked out because, handily, my mother had three perfectly legal names due to her historic French family connections, which gave her different family names in different parts of France, so when she'd married Georgy's father, she'd dropped her original name she was married to my father with, her De Monts\u00e9gur family name, out of respect for her marriage to him, and used one of her other family surnames instead, all perfectly legal; new marriage, new name...\n\nIt would take more than a simple search at the registry office to turn up any connection between Georgy and me; I would have laid serious money on that.\n\nJust in case, though, we arranged to be married in the Guard's Chapel in Wellington Barracks, London, which I was entitled to request, as an honourably discharged former officer of Guards just so no-one local would be there and maybe put two and two together, although the risk of that was low; Georgy didn't know any of the people who leased the huge swathes of farmland on the estate, it was all major agro-industrial combines, not old-fashioned farmers and their wives who took on that all that land; they changed around every so often anyway; there was no-one currently working the estate who'd been there when I was a boy, so no-one there knew me from Adam. \n\nGeorgy got the white wedding she'd let slip she'd always wanted, my two former tank-crew were my Best Man and groomsman, and four of Georgy's friends from university were her bridesmaids, while my former C.O. when I'd been deployed gave her away, with Aunt Kay standing proxy for mother. We couldn't have the 'Cavalry Arch of Steel' sword guard because I was no longer a serving officer, even if my father, Georgy's father (and my stepfather) and I had all served as field officers with the Household Cavalry, but I don't think Georgy cared too much. \n\nShe got the ring I promised her, too, and not some long-dead ancestor's ring either; I wanted to give her something entirely her own, perfect and first worn by her alone, and Asprey of London were happy to indulge me and my cheque-book in my quest for the perfect pair for the perfect girl. I gave her a platinum engagement ring set with a 2-carat Banquette-cut flawless diamond in a brilliant-cut white diamond cluster, and the matching wedding band set with 1.5 carats alternating baguette and brilliant-cut diamonds, because I was only ever going to marry her once, and she deserved the very best.\n\nWe didn't go away on honeymoon, though; it turns out we had to get a move on creating that perfect nursery Georgy wanted, because we were pregnant, and Georgy refused to go anywhere until her baby was safely born and in the big old house his or her ancestors had gone through so much down through the centuries to build, preserve, and protect.\n\nOh, and we sold the project house, for a surprisingly large sum, too, much, much more than we ever dreamed we would. The two bidders were both after the house for the same reason: its Georgian authenticity, but the eventual winner was a rabid Jane Austen nut, and, while he obviously couldn't buy any of the properties historically known to have Jane Austen associations, he still wanted an authentic house of the period that truly looked the part, with a few modern touches to add some contemporary luxury, and he wasn't too fussed about the cost, he just kept upping his bid. \n\nHe raved about how much the house looked like his mental image of Catherine Morland's home in the 'Northanger Abbey' novel, so of course we played it up, about how we'd restored the house with our decisions informed and influenced by the descriptions in the book to suggest the period, blah, blah, waffle, waffle, bullshit, bullshit. We hadn't, it was sheer bloody luck that it actually looked like we'd tried for that look, mainly thanks to Georgy's perfect eye for period detail, because I don't think I'd ever willingly have read 'Northanger Abbey' to crib from it; not enough pictures...\n\n*****\n\nGeorgy is very reluctant to step away from the renovation game, even though she's pregnant; she's found something she's extraordinarily good at and she wants to keep going, but she made a promise to us both; job sites are dangerous places, there's all kinds of caustic, toxic chemicals and solvents lying around and getting spilled and haphazardly mopped up, and dangerous power tools, heavy machinery, and live cables all over the place. \n\nShe won't risk our unborn baby in that environment, so she's decided she's going to be my eyes in the sky for now, and she'll audit and correct the architectural drawings, order materials, and consult on finishes from home; she even had dad's old workshop turned into a home office/drawing office so she can work from there in a professional environment instead of spreading drawings and project paperwork all over Aunt Kay's dining tables. \n\nShe's not coming within a country mile of any job site any time soon, this baby is too precious to risk in any way, but she'll still get to choose the project houses we pick going forward, and I can live with that, because I definitely trust her practicality and judgement more than mine. I just fall hopelessly, starry-eyed in love with beautiful, faded old buildings as soon as I see them, while she actually looks into them and works out the problems they'll cause, and decides if we can live with it, or if we should walk away. \n\nShe's adamant about one thing though; future project houses were going to be more of the same, and I agreed with her; we'd gained a reputation as sympathetic, skilful restorers of period properties, due almost entirely to her instinctive feel for the elegance and proportions of Georgian houses, their scale and grandeur, and her eye for authentic period detail. Word of mouth got around quickly, and Georgy's name was already starting to make ears prick up and pay attention; I think the next project we do is going to generate a lot of interest precisely because of that. That we're a success at all is entirely down to her.\n\nJust this morning a heap of auctioneer's and estate-agents' catalogues came tumbling through the letterbox, so I guess Georgy's feeling in the mood to go and scout out some faded old ladies and see if we can't make them grand dowager duchesses again; apparently, it's what we do best...\n\nAnd Georgy's overcome her fear of thunder now; there's something about fighting for our lives against murderous, scumbag criminals that makes thunder seem irrelevant. It still makes her jump, but then memories of sending Max to his maker intrude, and she accepts there are enough real monsters in the world without making them up in her head too. I think we're going to be okay."
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brother and sister",
        "incest",
        "max returns",
        "oral sex",
        "serious injury",
        "tyler and georgy"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/a-new-georgy-girl-ch-02-georgy-and-me"
}