{
    "title": "The Choosing Ch. 05",
    "pages": [
        "I spent the day after his return preparing to leave. In equal parts I feared and craved seeing my own Dark Master. I did not think my resolve could withstand a meeting with the Dark Prince. Even as I knew his deception and betrayal I wanted him. Even as I was so sure I did not want to be Claimed I still felt his seductive pull. I craved him. I did not trust that I was strong enough to resist this desire.\n\nI should not have been so concerned. I was quite clearly not high on his list of priorities. The day passed as did the night and still he had not come to me. Relief and disappointment tainted with shame at the pulsing need for his presence that beat beneath my skin.\n\nUnlike his father, Nadar came. I heard his voice as he commanded my guards to open my chambers to him. They denied him entrance as they had been duly instructed. He called out my name, first pleading and then in anger, his fist thumping the heavy wooden door rattling it in its hinges.\n\nI almost succumbed. I was at the door with my hand reached out when Hatha pulled me back. \"I think it best if we avoid further complications Mistress Vessel,\" she said in a low and urgent tone.\n\nI nodded. She was right. Nadar could do nothing for me now. Only confuse me further. What I needed was knowledge and truth. I needed the Sarran Coven.\n\nWe left at Dawn. Hatha told me it was when the powers of the Masters were at their weakest. No doubt that was why Roth had not sensed me in the corridor outside his chambers. I had wondered why he had not felt me there. I felt glad to know there was a reason and then chided myself, caring to need one at all.\n\nWe carried few items, Hatha opting for speed rather than comfort. I did not mind so much. My lodgings at my Uncle's had been austere and as I had yet to become accustomed to the luxury of living at the Palace I was comfortable with very little. Happy in fact\u2014even with a stomach growling in hunger\u2014just to be free and to be finally taking each step forward at my own choosing rather than at the behest of my Uncle, or Bandar, or Roth, or Nadar.\n\nNadar.\n\nI felt a tug of wanting at the thought of him. While each step away from the Night Palace seemed to dull the seductive pull of Roth, it did little to ease my yearning for Nadar. The further away I was the clearer my feelings for him became. I missed him. Wanted him. I felt a bond of friendship that I had had with no other.\n\nWhich saddened me as I knew he was simply yet one more person in my life that I could neither trust or rely upon.\n\nI did not speak of the Dark Prince or his son to Hatha. I did not speak much at all. She did not seem to mind my reticence at conversation\u2014she did not talk either. All her energy seemed focused on one thing. Finding the Coven.\n\nHow exactly we were to do that I did not know. We had no map and by her own admission Hatha had no idea where the Sarran Coven now lay.\n\n\"My skin is my map,\" she said to me when I asked her how we would know where to go.\n\nShe traced a finger along her tattoos, the markings hidden under a long dark cape. She had spells she said, to hide the markings but they would drain her power and she could not risk that while we were exposed in the open.\n\nWe met few people on our travels. Hatha planned it that way. We moved on foot, avoiding the main travel routes. The few times we came across others on the same path we acted out the story that Hatha had concocted. We were sisters, heading south to family after the death of our mother. The travelers bought our story easily which I found quite surprising as we didn't look alike and were travelling through difficult and dangerous smuggler paths.\n\nHatha laughed when I told her I was surprised. \"Why do you think they travel the same paths as us Mistress?'\" she'd said, \"They hide like us na\u00efve girl. They likely lie too.\"\n\nWe rested in short bursts rather than sleep. We had to keep moving as we knew that Roth would be coming for us with all the forces he could muster. He would not risk losing the prize of The Vessel. The one thing in our favor was that he too would have to hide so as not to reveal the magnitude of his loss. A full scale search for a mere servant and a Pleasure Chosen would raise far too much attention from the Crown.\n\nHatha taught me as we trekked. She spoke of nature and magic and I soaked it in like a sponge. She carried a kohl stick and with it I drew simple spells on my arms. I felt the power burn with each stroke of the black stick on my flesh. It felt so right. So much a part of me that it was as if I had finally discovered I could see.\n\nAfter two and a half days the land changed from the Forests of Palace Shire to the marsh-like terrain of the Farsah Shire. Here, Hatha told me, we would find the Sarran, or rather they would find us.\n\n\"We need to create a beacon,\" Hatha told me as we set up a small camp.\n\n\"Won't that attract the attention of others?\" I worried about the logic of shining a light when Roth was so desperately searching for me.\n\n\"A magical beacon. Only the Sarran will see it,\" Hatha said, swiping at the air, brushing away a swarm of the nasty biting flies that abounded in the wetlands.\n\nThe patch of land we had chosen to use as camp sat like a small island in the swamp. To get to it we'd trudged through the brackish water. It had rimmed my skirts black with slime, as the foul stain dried it stiffened, scratching my legs as I moved. There was nowhere to clean my clothes, or myself. I thought of the copper bathing tub I had left behind and hoped that we would be found soon.\n\nHatha drew a circle on the ground as wide as the small patch of land would allow. She shook her head and muttered to herself, \"Not big enough.\"\n\nI did not question her as she seemed stressed enough without the added burden of my curiosity. She marked the ground, North, East, West and South and then set about filling the circle with lines and markings like those upon her skin. I watched and marveled at her steady and quick hand. The sky rumbled and the air crackled, cooling fast, becoming heavy with the damp metallic taste of coming rain. Hatha looked up at the darkening sky and slumped her shoulders.\n\n\"Should we wait until tomorrow?\" I asked her as she looked forlornly at the coming rain clouds.\n\n\"It must be now,\" she said.\n\nI nodded. \"Let it be now then, show me what to do.\"\n\n\"I haven't finished,\" she said, pointing down at the intricate markings of the circle.\n\n\"What can I do?\" I asked. \"Let me help, please.\"\n\nA fat drop of rain hit the earth at her feet. She shook her head. Frustrated, I just stood and watched as she stripped off, baring her skin to the cold rain. I stayed in the circle, not sure what I should do. As the rain began to sheet down she chanted and began to step around the inner edge of the circle. I moved to the middle, wrapping my arms around my body. My gown hung wet and heavy, I was cold. So cold.\n\nThe cold did not stop Hatha, she stepped around and around the circle, moving faster and faster. Through the filter of the rain I could see her mouth moving in chant. I could not hear her over the beat of the water but I knew that she shouted. Water streamed down her body, her hair was soaked, stuck to her cheeks and neck.\n\nI wanted to tell her to stop. I wanted to find shelter. I was tired. Oh so tired.\n\nThe rain let up, falling softly now rather than sheeting down in a curtain of icy needles. Hatha came down on her knees in the soft mud. I stumbled to her, the soaked skirts of my gown constricting my legs.\n\n\"Hatha, Hatha.\" I fell to my knees and brought her head into my lap.\n\n\"Di...did..n't work,\" she stuttered, shaking from the cold.\n\nI had no way to make her warm. What little we owned was wet. There was no way to make fire in the damp. What could I do?\n\nFear and worry so overwhelming hit me like a punch to my chest. Air sucked from my lungs. Panic became action. My vision blurred. I moved, but not with conscious effort. Instinct overcame logic. My hands came up to strip my wet gown away. The fabric peeled from my skin and landed in a heap at my feet. I stepped over it and Hatha.\n\nNaked, with deliberate steps I walked, the water dissolved line of the circle that Hatha had made. No markings remained, all washed away by the beat of the rain, but I saw them in my mind. They floated above the mud, so real I was sure that if I knelt down I could touch them. Once I had walked the circle three times I went back to the center, stepping over the prostrate form of Hatha. I did not even look down, too focused on completing my task.\n\nMy hands came before my face. Steepled fingers touched my lips, my chest and then my naked sex. I knelt, knees sinking into the cold green-black mud. My hands swept around me in the mud to create a smaller circle around my body. Within the marked circle I came up on my knees. Fingertips wet with mud encircled my naked body, drawing a black line at my hips, my waist and my neck. Between each circle I began to paint. Mark symbols I had never seen, but knew. Right down to the marrow of my bone I knew these markings. They were mine and mine alone. Their power sang on my skin and pulsed in my sex.\n\nDown to the mud and then back to my skin my fingers flew until I was all but covered in symbols and lines from neck to Mons.\n\nI was no longer cold. My skin crackled with the heat of the markings. I was on fire.\n\nNo! I was the fire.\n\nI was the heat of the earth, the burn of the sun.\n\nThe last symbol I painted on my forehead and down the bridge of my nose. Knowing I was complete, I raised my arms. Wide and high. My head I threw back and arched my spine. Through me from the earth came the surge of light and heat. My sex convulsed in orgasm as the light hit the sky.\n\nThe Beacon, was my last thought as darkness overcame me with a blanket of exhaustion.\n\n* * * *\n\n\"They should not be here,\" a low male voice spoke.\n\n\"So, we should have left them to die?\" The whispered words of a woman.\n\n\"Are they worth us dying Lena? Are they worth the children?\"\n\n\"Shut up Fa! What is done is done. I am not taking them back out there now. No one is.\"\n\nI carefully opened one eye a slit. It hurt to do even that. My body ached as if I had been pummeled with a shower of stones.\n\n\"No good will come of this. Mark my words. This will bring doom to us all.\"\n\nPeople were fighting. Whispered words of anger. Over me. One wanted to leave me to die. It may not have been the welcome I had hoped for, dreamed of, but it was familiar. I was, oddly, comforted by the disappointingly familiar sounds of rejection.\n\nThrough the blur of my eyelashes I saw two figures. One tall, one short. The tall one leaned over a figure in the cot opposite mine.\n\nHatha!\n\nI shot up in the cot, regretting my actions the moment I was upright. My vision blurred white and red and my stomach rolled in nausea. The tall one came forth. A woman. \"Shhhh,\" she crooned, \"lay back. Rest. You need time to recover after a setting a spell like that.\"\n\nSpell?\n\nAnd I remembered. The mud, the circle, the drawings, the heat, the light. The Beacon. I had raised a Beacon.\n\n\"Hatha,\" I said, in a voice I hardly recognized as my own, husky and brittle.\n\n\"Your companion?\" she asked.\n\nI nodded and then groaned at how my head throbbed at the movement. Cool fingers brushed my head and gently lowered me to the cot.\n\n\"Do not worry. Your companion is fine,\" she said. \"Better than you. I gave her a sleeping draught to aid her rest. She will awaken soon.\"\n\n\"And then you will leave,\" said the short one. A man appeared before me scowling. Brick-like, he stood square and squat with flaked red skin and an angry scowl.\n\n\"Hush Fa!\" the tall woman said, scowling over her shoulder at him, \"There will no talk of going anywhere for some time.\"\n\nShe looked back down at me with silver rimmed blue eyes. \"Rest,\" she said softly and ran a cool finger gently down the bridge of my nose.\n\nMy eyes fluttered closed and I fell into dreamless sleep.\n\nI awoke to the sound of laughter. Not close but echoing farther away. I opened my eyes tentatively, remembering the pain. I was slow and deliberate in my movements. My head did not ache and though I felt sore I did not feel as bruised as before. I wondered how long I had been asleep. There was no window in the room. Soft light came from a lamp hung in the corner of the room.\n\nI sat. The cot beside me was empty. Hatha was gone. I stretched out my arms and bowed my back until my spine cracked. I stood, and as I did realized that I was clothed. A simple, light blue chemise covered my body. I looked at my hands and then pulled the neckline of the chemise open to check my torso. I was clean. All the mud I had painted upon myself was gone. I brought my fingers to my hair and ran them through the length. There were no knots, my hair had been washed and dried.\n\nI sat back down on the cot and looked at my surrounds. The walls were stone, but not built, carved by nature or by hand. This was a cave, the room of a cave.\n\nOne wall was wooden. Smooth and painted light blue, evidence this was not a rush construction. This had been here for some time and had been built for comfort and longevity.\n\nAt the centre of the wooden wall was a door. I stood and was moving towards it as it opened.\n\n\"Hatha!\" I exclaimed and stepped forward to take her in my arms. The hug was awkward. I wasn't the kind to hug regularly and wasn't sure what to do with my hands.\n\nShe released me and dipped into a bow. \"Welcome to Sarran Vere Mistress Vessel.\" She was dressed in a tight sleeveless bodice, her tattooed arms bare. Probably for the first time in years. I smiled, reached forward and traced a finger at the band of ink on her right arm.\n\nShe shivered and released a low moan. Grabbing my finger she said, \"Careful who you touch here Mistress. Your power is getting stronger.\"\n\n\"Stronger. Since the Beacon?\"\n\nShe nodded and released my finger.\n\nI could not resist one more trace of her skin. The feel of the power radiating from the brief contact was too delicious. I sighed as I removed my hand.\n\n\"Your power is very sexual in nature,\" Hatha said, inclining her head and looking at me intently.\n\n\"Is that strange for a Vessel? I thought release was the source of Vessel power?\" I asked.\n\n\"Not strange as such,\" she said in that slow measured Hatha way, \"Just different. More potent. The people here are used to hiding. They are frightened. Your presence here could...\" She paused and frowned, searching for the right word.\n\n\"What? Could what?\"\n\nShe didn't get time to answer as the tall woman who had cared for me and the angry brick man entered the room.\n\n\"Good, you're awake,\" the woman smiled at me.\n\n\"Much sooner than was anticipated,\" the brick man growled. His words more of accusation than observation.\n\nI had a very infantile urge to stick out my tongue.\n\n\"She is young. And healthy. It is not so strange that she would recover fast,\" Hatha said, defending me quietly.\n\n\"True,\" the smiling tall woman said. Steepling her fingers at her chest she bowed and said, \"I am Lena of Sarran Coven Vere. We welcome you.\"\n\nMy body moved once more without thought, as it had in the rain of the circle. I stepped to her, raised my arms and took her steepled hands between my palms. I pushed them together and then slid my hands down her forearms to her elbows.\n\nShe dropped her head to her chest and let out a breathy gasp. She lifted her eyes, not to look at me, but Hatha. They exchanged a loaded look, Hatha nodded and Lena brought her fingers up to her mouth as if in shock.\n\n\"What?\" barked the angry little brick man. \"What's going on Lena?\"\n\n\"Fa, she is The Vessel,\" Lena breathed.\n\n\"The Vessel? The Vessel!\" Fa threw his arms up as if in disgust. \"She cannot be here. She has to go now! Right now!\"\n\nLena looked to answer Fa's outburst but did not get to as another couple entered the small room. Both Fa and Lena bowed their heads. I turned to Hatha and noticed that she too had bowed her head.\n\nI did not. For a brief moment I thought to but decided against it. At that very second I resolved to bow only to those who deserved my respect or submission. At my decision and my decision alone. I pulled back my shoulders and stared directly at the couple as they came to stand before me.\n\nThe woman was tall. Her hair silver, not the shining brilliance of Nadar but a softer color, almost white in appearance.\n\n\"This is her?\" she asked softly, looking at me but obviously directing her question to Fa and Lena.\n\n\"Yes Lady Vere,\" Lena answered raising her head slightly and bowing once more.\n\nThe woman watched me with curiosity but without an obvious emotion I could decipher. She seemed at once to be both interested and indifferent. As if I were an animal she was examining to purchase. Behind her stood a smiling blond man. Unlike the woman he did not hide his appraisal of me, or the sexual purpose behind it. His eyes filled with wicked promise, he had the look of a man who played and was used to winning. I could not determine his age, but he seemed to me more boy than man. A youth teetering on the precarious cusp of manhood.\n\nI liked him immediately. I could not say why, but the cheeky play he made with his eyes did not offend, it made want to grin.\n\n\"I am Talia,\" I said, \"Once of Hawthorne Shire and more recently of the Night Palace.\"\n\n\"Chosen of Roth. Dark Prince of Pleasure,\" Lady Vere said, more statement than question but I nodded in answer anyway.\n\n\"And you are now here. For what?\" she asked.\n\nI glanced at Hatha. Uncertain of what I should say. Could I just declare myself The Vessel? Hatha stepped forward, bowed deeply and to my relief answered for me, \"She is The Vessel, my lady.\"\n\n\"The Vessel,\" the Lady Vere murmured, \"You are certain?\"\n\n\"She called The Beacon,\" the youth behind Lady Vere said, \"Captain Farso found her in a self circle, marked with the light of The Beacon.\"\n\n\"You! You taught her?\" Lady Vere turned to Hatha and spat out the words in angry accusation.\n\nHatha held up her hand, cowering under the whip of the verbal attack. She stuttered out her defense so fast she stumbled over the words. \"No my Lady. No. I did not. She did it herself. In the rain I collapsed. My circle was destroyed by water, my power drained at the attempt to raise The Beacon. I did....\"\n\nI moved to Hatha, stepping between her and the Lady Vere cutting off her explanation. \"She did nothing wrong. You do not need to explain yourself Hatha.\"\n\nLady Vere met my eyes with a raised brow. Behind her the young blonde broke into a broad grin, biting his lip as if trying to stop himself from laughing. \"You are correct,\" she said to my surprise, \"There is no need for Hatha to explain herself further.\" She raised a finger bringing it close, but not touching my chest. \"But you Talia, once of Hawthorne Shire recently of the Night Palace, have very much to explain.\"\n\nShe turned on her heel, gave a slight nod to the young man who accompanied her and strode out the door. In a serious voice that did not match his playful grin he proclaimed, \"You will present yourself to the Council tonight, ten o'clock.\" After a quick check over his shoulder to make sure that Lady Vere had gone he added, \"Please, don't be late. I for one can't wait to see you in action.\"\n\nI smiled back at him. He winked and left the room with Lena and Fa following.\n\nHatha sighed, sank down to the cot and placed her head in her hands.\n\n\"This is not going well,\" she said.\n\nI sat down beside her, too weary to be concerned by the tide of events. Loosely draping an arm across her shoulders I gave a soft derisive laugh and said, \"Oh Hatha, when has it ever?\"\n\n* * * *\n\nHatha took it upon herself to prepare me for The Council meeting. I let her do whatever she wanted to my body without protest. She was frantic, muttering to herself as she dragged me along cave like hallways to an unknown destination. I was beyond the point of caring. I thought of myself as a raft cut free, adrift in the stream. I could not fight the flow. I would be carried wherever the flow took me no matter what I did. So I succumbed. Succumbed to the power of fate and let it carry me away.",
        "Our final destination pleased me to no end.\n\nA hot spring.\n\nPublic bathing rooms. I could have danced in delight at the sight. Hatha led me over to a flat rock in the corner, next to a small pool. She stripped me. There were three others in the bathing room at the same time as us. An older woman and two young women.\n\n\"I need to purify you,\" Hatha said.\n\n\"How?\" I questioned. Wondering if she was to once again come at me with a straight razor. She raised a brow at my distrustful tone. I matched her stare, refusing to back down. Hatha broke first with a rueful smile and a shake of her head. Motioning to the flat rock she gave an indulgent sigh and said, \"It's only a salt scrub Mistress. Lay down.\"\n\nSalt scrub. That sounded so good. I wanted to be scrubbed clean, soul deep, of all the events of the last few weeks, but as that wasn't possible a skin scrub would do for now. I lay flat on the rock. It did not occur to me that I had been standing naked in front of strangers until the cool smooth surface hit my breasts.\n\nWas it only last month I had never been naked in front of another? Even during my few and frantic couplings I had been clothed somehow\u2014a chemise, stockings or a loose corset had remained on at all times. I came up on my elbow, cradling my head in my hand and looked about the baths. There were five women now, all staring at me with curious eyes.\n\nHatha laid her hand between my shoulder blades and pushed me down. I submitted to the pressure and lay flat with my cheek flat to the rock. Warm hands rubbed gritty wet salt across my back. I sighed at the feel of the soft scrub. She worked with strong fingers digging into muscles still sore from the time in the swamp. Down my back, along the spine and dipping to the soft curves of my side she worked. My buttocks, my legs and finally my feet. Her strong hands pushed, rubbed and caressed.\n\nWhen her hands left my skin warm water soon followed, pouring across me in a steady beat washing away the residue of the salt. With eyes still closed I rolled over and let her do the same to the front. She hummed as she worked\u2014a tuneless sound of contentment. I found myself spellbound by the noise and the feel of her hands. I fell into a half sleep, an almost hypnotic state.\n\nAfter she had washed me clean she pulled me up to stand and urged me into the nearest pool. It was cold, not shockingly so but enough to wake me from my dream state. I dipped my head under the water and came out, smoothing the wet hair from my face as I broke the surface. There, in front of me was now a crowd of women. All silently watching me bathe. All young, they seemed to be in the range of child rearing age, but there were no children. All women. All watching. Me.\n\nI held up my hand and Hatha came forward to help me out of the water. I stepped out of the bathing pool and stood naked by the edge. \"What do they want?\" I asked, tilting my head closer to Hatha.\n\n\"You my Vessel,\" she murmured, \"They feel your presence and have come to see you.\"\n\n\"Do what? They have come to see me do what?\"\n\n\"Whatever you feel Vessel. Do not think. Feel. Only feel. \" As she spoke she brought her hand to my arm and with oily fingertips began to trace patterns on my skin.\n\n\"What are you doing?\" I gasped as the feeling of her light touch rocketed through my body, tightening my nipples and dampening my sex.\n\n\"Purifying you my Vessel. Preparing you for The Council.\"\n\nMy head fell back. I had to spread my feet to keep balance as an overwhelming surge of wanton need swept over me. Hatha knelt down at my feet before me, precariously close to the edge of the pool, her gown falling back into the water. I watched it billow, floating ice blue on the flat black of the rock colored water.\n\nHer fingers moved on my stomach. I looked down; she was painting me red with oily stain. Deep, brown red marked me in ochre symbols. Each touch like a lick to my sex, clenching my womb in wanting.\n\n\"Oooooh,\" I moaned and heard the sound echo in the crowd before me. I looked up at my watchers and met the eyes of a young woman in the front row. Long silver blonde hair fell across her shoulders, parted in the middle. She wore a simple white tunic, a modesty bathing gown. She looked pure, clean and virginal. Contrasting the innocence was a shocking desperate look of absolute sexual need that shone in her young eyes. She wanted me with a passion that matched my own. I could see it. I knew it right down to my throbbing sex.\n\nI want to see you naked.\n\nI wanted to see her pretty young body bared before me. I wanted to see her sex, wet and spread for my touch. I wanted.....\n\nTo my shock she nodded. Eyes on me she stripped her tunic over her head and stood before me bare. Skin pink and clean. She was not yet marked by the Sarran tattoo. Blond fuzz covered her sex and her nipples were rosy pale and beaded tight. Sweet. She looked so sweet. Did she taste it too?\n\nShe snaked a hand down the soft swell of her stomach into the blonde hair at the juncture of her thighs. I watched as she spread her thighs and slipped her fingers between her legs, wetting the tips with her juices.\n\nGlossy fingers she first showed me, offering her hand out over the water of the pool and then bringing them up to her mouth to slip them between her lips, sucking them clean.\n\nYou. Come to me.\n\nI did not speak the words but they sounded loudly in my head. She nodded and stepped into the pool, walking through the cool water to me.\n\nHatha shifted before the woman had stepped in the pool, as if she knew what was to come. She stood and helped the young woman out of the pool.\n\n\"An offering,\" Hatha said, \"for The Vessel. Given in pleasure, taken in pleasure. You shall take and share the power.\"\n\nShe led us back to the flat rock. I lay flat, my back flush to the cool stone. I pulled her down to me, rosy pink and young. Her skin was flushed and warm as she slid over my body until her young handful breasts were pressed to mine. Nipples connected and sharp delicious pleasure shot from breast to sex.\n\n\"Vessel,\" she whispered in a soft puff of breath that vibrated on my lips.\n\n\"Yes,\" I answered opening my mouth in an invitation she gladly took. The first time I had kissed a woman. Lips pillow soft, her taste divine. My tongue met hers in slow exquisite pleasure. Soft touches and flicks matching moans and gasps.\n\nI snaked my fingers into the soft curtain of her silver hair. Threading the fall through my hand and then grasping it into fists. She moaned, liking the soft and then sharp bite of pain.\n\nMy mouth moved down the curve of her neck as I pulled her head up with a vicious tug. I could see Hatha behind her, watching me, watching us.\n\nI bit down on the soft skin, marking the pulse point of her neck with my teeth. She writhed against me, pushing her sweet young sex against the bone of my pubis as she did. She straddled my hips, her wet slit rocking into the edge of the bone as she offered me her neck to mark once more. I bit down, my eyes on Hatha as I did, watching her flushed reaction to the moans.\n\nWith hands on her shoulders I pushed her to sit up with a shove. She did, looking down at me with intense desire. I rocked up and watched her moan and writhe as I connected with the pulse of her aching sex. Her cup full breasts swayed and bobbed as she moved. I reached up taking one in my hand, feeling the weight and then pinching the nipple between my finger and thumb. I twisted the nubbin until she wailed.\n\nReaching between her legs, I dipped my fingers into her drenched slit. Oily, warm and slippery I brought them out to paint across the soft swell of her stomach. The symbols rose from her skin in a map seen only by me. I worked fast, dipping into her sex over and over as I painted her breasts, nipples, stomach and thighs with powerful marks of magic. The room buzzed with each swipe of my fingers on her skin. Over and over I felt her sex clench in orgasm as I dipped inside the warmth of her slit.\n\nAround me I heard moans; desperate sounds of panting wailing orgasm filled the room. Power rocked across me. I was the center, the center of all pleasure. When I had coated her in my spell I pulled her down to take her mouth.\n\nGive and take. Take and receive. The cycle of pleasure. Take and share the power. The words looped in my brain as I kissed her sweet young lips. I knew then how to complete my spell.\n\nI smoothed a hand down the soft curves of her side until I reached her thigh. Understanding my wordless command as I tapped her leg, she dismounted me. I came up on my elbow smiled and then reached forward to cup her sodden sex. Fingers wet with her release I brought up to paint my lips and then crooked my finger for her to come to me.\n\nShe blushed and smiled, it pleased me that she was still bashful even after all we had just done. Her thighs straddled my face, soft skin brushing me as she did. The smell of her wanting enveloped me, her taste, her smell, her touch surrounded me in pleasure. My hands I brought up to cup her sweet arse. Skin like silk, warm and supple. I stroked with splayed fingers before gripping tight to pull her down to my mouth.\n\nI felt her face nestle between my thighs. I brought up my knees, spreading wide to give her room. Her mouth found my clitoris easily in the bare folds of flesh. She blew first, a hot puff of air that I reciprocated on her own swollen nubbin.\n\nAs she tentatively licked me I dug my fingers into her arse, spreading the cheeks wide and pulling her closer. I tasted her to my satisfaction, leaving no inch bare of the swipe of my tongue. Her clit I sucked and flicked. Her slit I entered as deep as my tongue would allow, tasting deep into the musky heat. Maneuvering her by changing my grip, I tilted her forward to lick back to the rosy pucker at her rear. She gasped, tightened her thighs and rocked into my tongue. I flicked across the rosette and then stiffened and pushed my tongue as she clamped her thighs over my face.\n\nMy own release was coming. I could feel it build, my stomach clenched and my thighs shook with the rising tension of unspent release. I paused in my pleasuring and lay back letting the feeling her mouth at my sex wash over me.\n\nGive and take. Take and receive. The cycle of pleasure. Take and share the power. I knew we had to come together. Complete the cycle with shared orgasm. I returned my mouth to her clit, flicking my tongue at the root of the swollen nubbin in a devastating rhythm, matching her.\n\nWe bowed. As one we became a circle of orgasm. A flowing round of endless pleasure. My sex to her mouth, her sex to my mouth, we came as one. My release pulsed into her mouth, spurting in shocking, almost painful bursts as her sweet musky cum seeped over my lips.\n\nHatha pulled her from me. I was glad of it because I had not the energy to move myself, let alone another. Through eyes slitted with pleasure I watched my young offering slip into the water of the pool. She looked back over her shoulder at me, a quick smiling shy glance, before dunking her head in the cool water.\n\nHatha returned to help me up. I sat first on the edge of the rock before standing. The watching crowd parted to reveal the Lady Vere.\n\nHow long had she been there? I wondered.\n\n\"The Council meets now,\" she said looking not at me but Hatha, \"Askel awaits outside the bathing chamber to take you and your Mistress. Come without delay.\"\n\nHeads bowed as she departed in the flurry of silver and royal blue. I watched, back straight and proud until she was out of sight, then I slumped and turned to Hatha.\n\n\"What now?\" I asked.\n\n\"She knows you are The Vessel. There is no doubt.\"\n\nI scoffed, a snort like sound. \"There is still doubt Hatha. Perhaps not that I am The Vessel, but of what they want from me.\"\n\n\"How do you know they want something from you Mistress?\"\n\n\"They always do Hatha. They always do.\"\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nOnce more reluctant but deserving thanks must go out to my favorite rat bastard PacoFear. In equal parts I love and loathe him for the very easy way he makes me sound so much better.\n\nMany commas died to bring you this work -- at the hand of my harsh but fair grammar dominatrix Mistress Red Pen. Thank you Mistress.\n\nThanks for the lovely feedback and comments. I really do enjoy hearing from you. Leave me some sugar and click on the stars please. I'm shallow and needy and desire proof of your affection.\n\ndarcysweet"
    ],
    "authorname": "darcysweet",
    "tags": [
        "vampire",
        "witch",
        "lesbian"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-choosing-ch-05"
}