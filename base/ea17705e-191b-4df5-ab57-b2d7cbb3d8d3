{
    "title": "Herman Ch. 03",
    "pages": [
        "I'd had a thought over the weekend concerning the money I'd found under mom's bed I'd had a thought over the weekend concerning the money I'd found under mom's bed. Figuring that some people are just naturally nosey and if the cleaning crew that came in on every Wednesday had someone like that I'd best move the money. \n\nJust before leaving the house to take Linda to the airport I'd stuffed what was in the metal box into a backpack. After dropping Linda at the airport I headed for a different bank than the one where mom had her safe deposit box and opened new checking and savings accounts and rented a safe deposit box. I felt relieved as I left the bank and headed for my first class of the day.\n\nI rang Sam's doorbell at six-ten and she greeted me wearing high heels and an apron. \"Just in case you wanted dessert first\" is what she said as I entered the house.\n\nI pulled her into my arms, kissed her and said, \"I'll have dessert after dinner, but I think I will have an appetizer before dinner\" and I picked her up and carried her into the bedroom. It was the start of a long night and Tuesday was another day when I had to run to make my first class on time.\n\nTuesday evening was a very tiring experience for me. I had to shoot three different scenes making love to Celia. The first time was on the desk in the home office so that it looked like we were making love at work. The next two were n the bedroom on the king size bed. There was a quick clothing change between scenes so it would look like different days.\n\nMaking love to Celia was hard work. There was concern on Sam and John's part that I wouldn't be able to fuck three times in just a couple of hours so I had to stop just before cumming and pull out while someone ran in and did the turkey baster thing. Believe you me it is hard -- damned hard -- to quit just as you are getting ready to bust your nut. Sam and John's strategy backfired on them. The third time Celia and I made love I was so ready that I came a minute after I slid into her. Then the call went out for a fluffer and that was another trip. Fran had taken the day off and so Ivy had to do the fluffing and she was not happy about it at all, but she had to suck it up (pun intended) and do her job. It took her a while before I got up again and got the shoot over with.\n\nSam wanted to stick around after every one left, but I was too exhausted to do her any good and I told her so. She understood.\n\n\"Making love under the hot lights isn't as easy as it looks is it\" she said. \"But I know that you can use a good morning wake up so I'll stay if you don't mind.\"\n\nHer good morning wake up consisted of waking me up with a blow job and then leaning against the shower wall while I took her from behind. She gave me a passionate kiss when she left after telling me that she would see me that night.\n\n++++++++++++++++++++++++++\n\nThat night I was sandbagged!\n\nThe way it was supposed to work was Celia, after falling madly in love with me, was going to confront Bonnie. They would get in a cat fight, Bonnie would subdue Celia and turn Celia into her bitch and then they would both laugh at me. I would make an impassioned speech about how wasn't going to put up with Bonnie's shit any longer, tell her that she was welcome to Celia, that I would be seeing an attorney the first thing the next day and then walk away.\n\nIn previous scenes we had established that Celia and I were falling in love and that we would both tell Bonnie that I was leaving her for Celia. Celia wanted to drive the message home so we decided that the confrontation would take place when Bonnie came home and found Celia and I making love on our bed.\n\nCelia and I made love only this time I didn't have to stop and pull out. I came in her and when I was limp and pulled out I fell next to her on the bed. She reached for my cock and was playing with it when Bonnie came into the room. She took in the scene and then yelled:\n\n\"What the hell is going on here?\"\n\n\"I knew from what Bobby told me that you were a stupid bitch, but I never thought that you were so stupid that you couldn't figure out what you are looking at.\"\n\n\"Who the fuck are you?\"\n\n\"I'm the woman who is going to take your husband away from you and treat him like the treasure he is.\"\n\n\"Over my dead body!\" Bonnie exclaimed.\n\n\"My pleasure\" Celia said as she jumped off the bed and went for Bonnie. The two put on a pretty good show, but then instead of Bonnie subduing Celia per the script I thought we were following Celia got Bonnie down on the floor in a hammerlock and said:\n\n\"You want more bitch? All I have to do is add a little more pressure and I'll end up breaking something.\"\n\n\"Enough. Enough!! Stop hurting me.\"\n\nCelia got up and left Bonnie lying on the floor and then said to me, \"Get dressed Bobby and lets get out of here. You can come back for your things later.\"\n\nWe both dressed and as we were heading for the door Bonnie cried out:\n\n\"Don't leave me Bobby; please don't leave me. I love you Bobby; please don't go.\"\n\nI had no idea why Sam had made the changes, but I did know that the episode was supposed to end with me showing some balls so I adlibbed.\n\n\"You don't love me Bonnie and I doubt that you ever did. What you loved was shitting all over me knowing that I would take it because I loved you and didn't want to lose you.\"\n\n\"No Bobby, you're wrong. I only did what I did because I thought it was what you wanted. If you would ever have just said \"Stop this Bonnie\" I would have done it in a heartbeat.\"\n\n\"Bullshit Bonnie. No way you could have believed that I wanted to be shamed and humiliated in front of my friends and the guys I work with. And if you really loved me there is no way that you could constantly deny me what you so freely gave to everyone else. I overheard your phone conversation with Abe the other day. I heard you tell him that if you ever found a \"real man\" you would put me out on the curb with the rest of the garbage on trash pickup day.\n\n\"I loved you Bonnie and you will never find anyone else who will love you more than I did, but you killed that love. You drove a stake through it and killed it and I'm out of here.\"\n\nI took Celia by the arm and we walked out of the room as Bonnie cried out:\n\n\"Please Bobby; please. Please don't leave me.\"\n\nI heard John call \"Cut and that's a wrap\" and I turned and walked back into the room.\n\n\"What happened here Sam?\"\n\n\"The series ends without you in it so I just decided to change the ending a little. This way you showed that you had some stones and you got the girl. A happy ending for you.\" We can always re-shoot it the other way if you want.\"\n\n\"No; I'm cool with it. I was just curious.\"\n\n\"Another reason is that it leaves open the possibility of your coming back if circumstances change. We can play it that you loved me so much that you couldn't stay away. I'll be all sweetness and light, but gradually get you back under my thumb. The difference will be that you are only a wimp with me. We can have you punch out a couple of guys to show that you are not a wuss except with me.\"\n\n\"Not likely Sam. Linda was pretty definite in her wanting me to quit and I have to agree with her thinking.\"\n\n\"I do too. I would have stopped when you first told me about it.\"\n\n\"I know, but I promised you I'd stay through the series and to me a promise made is a promise kept.\"\n\n\"Are you satisfied with the ending? We can change and have you punch out someone to make you appear more macho.\"\n\n\"No need. I'm good with it.\"\n\n\"The series ends with this episode, but I do hope I'm going to see you from time to time.\"\n\nI remembered what Linda had said and I decided to be a little bold.\n\nMy mom was forever telling me about a woman's intuition and that \"Women know these things.\" I've gotten the same from Linda. Especially the \"women know these things\" part. Just before she left she asked me if she was going to have to look for a new bed partner when she comes to town and when I asked her why she told me that she \"just knew, just immediately knew\" that when you were talking about your perfect mate that you were talking about me. I told her that she was crazy and she gave me the \"women know\" bit. Was she right?\"\n\nSam was silent for a bit and then she said, \"Would it be so bad if she were right?\"\n\n\"You mean that she is?\"\n\n\"Yes. She is right on the money.\"\n\n\"But why me? You could have your pick of guys who would kill to have you. Why me?\"\n\n\"I've already told you. I need someone who will accept me for not only who I am, but who can also accept me for who I was. I can accept you knowing that you were a male prostitute and I believe that with that background you can accept me. Am I wrong?\"\n\n\"No, but what about love? I like you Sam; I like you a lot, but I don't know that I love you.\"\n\n\"Bullshit Herman If you can make love to me the way you have been doing you can love me. I know that I'm falling in love with you.\"\n\n\"I don't know what to say.\"\n\n\"Don't say anything baby. We will just take it as it comes. You know my schedule and what nights I can date. I'm betting by the time I finish my program and have my degree that you and I will be what is called 'an item' and once I have that degree I am done with porn. I will be ready to live a normal life and I want to live that life with a guy who treats me the way you do. Let's just play it by ear, okay?\"\n\nNo way was I going to say no. Sam was a great bed buddy; she was smart, witty, was a damned good cook and I did like her. I liked her one hell of a lot and I knew I could do worse -- a lot worse -- when it came to picking a mate for life. I couldn't throw stones at her for what she did given what I'd done before I met her so I said:\n\n\"Okay Sam; one day at a time.\n\nOver the next two months I dated Sam between Linda's visits and we got along fine. I closed on the house and put the money in the bank. I had a year to do something with it to avoid having to pay capital gains on it.\n\nLinda invited Sam over every time she was in town and the two of them talked about me like I wasn't even there. Sam told Linda she was going to marry me as soon as she got her degree and Linda asked me if that was true and I just shrugged. Sam laughed and said:\n\n\"He just hasn't gotten used to the idea yet.\"\n\nEvery time the two of them got together they talked about gangbangs and I was beginning to believe that Linda was actually going to do it.\n\nSummer break came and I decided to work for Linda's company as an intern rather than take summer classes. The work was interesting and I got some real world experience to compliment the classes I took for my major.\n\nSam and I got together two or three nights a week and at least one of those nights ended up in a sleep-over at either Sam's place or mine. Sam was done with her degree program and all she had to do was submit her dissertation and defend it. I picked her up one Monday night and she told me that she could start seeing me every night of the week from then on.\n\n\"I posted my last film on Saturday. I'm all yours now baby.\"\n\nThat night's sleep-over lasted until Thursday and I did have to admit that waking up next to Sam every morning and then starting our day together was very nice. That night when I picked Linda up at the airport she asked me if I had missed her and I said:\n\n\"You know I have.\"\n\n\"Really? Sam hasn't been keeping you too busy to even think of me when I'm not here?\"\n\n\"I do spend a lot of time with Sam, but you are never far from my thoughts.\"\n\n\"That's a sweet thing to say, but I know that my time with you is short. Sam is determined to marry you and now that school is over for her she is going to put on a full court press. The two of you are perfect for each other.\"\n\n\"The problem is that even though I like her a lot I don't know that I love her.\"\n\n\"So what? There are more people out there than you realize who weren't really in love when they married, but love grew between them. Bob and I weren't in love when we got married. It was a marriage of convenience, but by the time he died I would have killed for the man. You and Sam have unique backgrounds that make you a perfect couple. I know it and Sam does too.\n\n\"Let me put your mind to rest on something. You dumping this old broad to marry Sam isn't going to change my plans for you. I'm still going to expect you to come work for me.\"\n\n\"What's with this 'old broad' crap? You are one hell of a sexy lady and what surprises me the most is that you are wasting your time on a young dude like me when you could have your pick of dozens of men who would like to put a ring on your finger.\"\n\n\"The problem is that most of those men who want to put a ring on my finger want to do it more for my money than for me. Oh I'm sure that there might be a couple who want me for me, but do you have any idea how many I would have to wade through to find those guys? And what happens if I choose wrong? No lover' I'll stick to you young dudes. You have fast recovery powers. More to the point I'll stick with you as long as you'll have me. I've grown real fond of you.\"\n\n\"As long as I'll have you? I've got news for you sexy lady. I'm yours until you tell me goodbye. I won't be the one who ends what we have.\"\n\n\"Oh? What about Sam?\"\n\n\"To be bluntly honest Linda; I can't choose between you. I want you both.\"\n\n\"Oh dear; this could get sticky.\"\n\nShe was silent the rest of the way to the house. When we got there Linda helped me make dinner and after we ate we sat on the patio and had margaritas while we watched the sunset. After a bit Linda said:\n\n\"I like Sam.\"\n\n\"So do I.\"\n\n\"I really do think the two of you make the perfect couple.\"\n\n\"I've heard it said by some who have seen us together that you and I look like the perfect couple.\"\n\nShe laughed and said, \"I know bullshit when I hear it, but thank you for the thought.\"\n\n\"It is not bullshit Linda. I look older than I am and you look years younger than you are and while we may be a May-December couple there doesn't appear to be all that many years between us.\"\n\n\"I'm older than your mother was.\"\n\n\"And I had the hots for her too.\"\n\n\"Oh Hermie; whatever am I going to do with you.\"\n\n\"Keep me around is what I am hoping for.\"\n\nShe reached over and patted my leg. \"Come on baby; I need to show you how much I like what you say.\"\n\nShe tore me up that night and I did not want to get out of bed in the morning, but she had put me to work at her company and I did need to carry my weight. We rode into work together and on the way she told me that we would be going out that night after work. \"Where\" I asked.\n\n\"It is a surprise sweetie. You get to spend the day trying to think of what it might be.\"\n\nWork was so busy that day that I didn't have time to think about it. At work our relationship was strictly business and I rarely saw her as she went from meeting to meeting. She had lunch with a client and I didn't see her again until quitting time. As we settled into the Escalade she asked:\n\n\"Ready for your surprise?\"\n\n\"I don't know. Is it a good surprise or a bad one?\"\n\n\"You haven't an idea of what it might be?\"\n\n\"Not a clue.\"\n\n\"Good. That means that no one spilled the beans.\"\n\nShe changed the subject to things from work and I was so busy talking that I wasn't paying attention to where I was going. \"We're here\" she said and I looked up and saw that we were in front of Sam's place. I looked at her questioningly and she said:\n\n\"Can you figure it out now?\" \n\nI looked at her blankly and she said, \"You have a choice. You can be the engineer who starts the train moving or just a passenger along for the ride however I do expect you to be the brakeman riding in the caboose.\"\n\nIt finally dawned on me. She was going to do a gangbang. \"Are you sure about this?\"\n\n\"I am. I've wanted to do it ever since I saw the films of Sam. I think about it all the time. The kinkiest thing I've ever done was make love to you while Bob watched and I decided that I wanted to do something really wild before I'm too old to enjoy it. You are going to be part of it right?\"\n\n\"Your wish is my command.\"\n\n\"Good. I want you to be the engineer and the brakeman.\"\n\n\"What does that mean?\"\n\n\"I want you to be the first and the last and as many times in between as you can manage.\"\n\nSam answered the door when we rang the bell and she gave Linda a big smile.\n\n\"Good. I was afraid you would chicken out and I'd end up having to take care of the guys.\"\n\n\"How many?\"\n\n\"You said six counting Herm so I have five here for you.\"\n\nWe went in and I was surprised to see John and Terry there behind all ready set up cameras. I turned to Linda and asked:\n\n\"Are you sure about this? What are your clients and customers gong to think if they see you on a porn site?\"\n\n\"This isn't going up on a porn site sweetie. Sam assures me that here will only be one copy and I'll have it. It will be something for me to look at when I'm old and gray and need to be reminded that once upon a time I had what it takes.\"\n\nShe turned to Sam and asked, \"How do we do this?\"\n\n\"Just get naked and get it on.\"\n\n\"No\" I said. \"We will take it slow. I'll undress you and when you get down to stockings and heels I'll go down on you. While I'm doing that one of the others will step up and present his cock to your mouth. When I think I've gotten you ready I'll make love to you and whenever I'm done whoever is in your mouth will take my place and from there things should take on a life of their own.\"\n\nI undressed Linda and she undressed me and then I went down on her. I knew what buttons to push and I ate her to an orgasm while she sucked Stan's cock. After she came I mounted her missionary and was able to give her another climax before I came. After I pulled out Stan moved to take my place and Ray moved to her mouth. As soon as Stan started banging away Sam pulled me into the living room and said:\n\n\"She wants you to be the first one in her ass and she wants you as many times as you can get it up tonight so tonight I'm your fluffer.\"\n\nShe went to her knees in front of me and took my cock in her mouth. As soon as she had me up she told me to go and tap Linda's ass so the three holing could start.\n\n\"That's what turned her on the most when she watched me. She wants to be 'airtight' so go do your duty sailor.\"\n\n\"Aye aye ma'am.\"\n\nWhen I walked back into the room Stan had finished and Roy had moved from Linda's mouth to her pussy and Mike had had taken over Linda's mouth. I had the guy's pull out of her and I had Roy lie down on his back and had Linda climb on his cock and lean forward to take Mike in her mouth. I walked over to the dresser where Sam kept her KY, got the tube and went back to Linda. I worked on her butt hole with KY on my thumbs and finger for a couple of minutes and then I eased my cock into her ass. Mike and I worked up a rhythm and I fucked Linda until I came. I pulled out of her ass and George moved into take my place.\n\nI went to the bathroom, washed my dick and then went into the living room and 'my fluffer' got me up again. I got Linda two more times before backing off to just watch. Sam wanted to get me up again, but I told her no.\n\n\"Linda wants me to be last so I have to save up enough to be able to do it.\"\n\nThen came the biggest surprise of the night. John put down his camera and joined in. I'd never seen him take part before. He actually went three times on Linda. The first time he took her ass and the second time he went in her pussy. I was watching him plow Linda's pussy when Sam came up to me.\n\n\"I don't believe it\" she said. \"In the three years I've worked with John he has never taken part before.\"\n\nJohn's third time was the shocker. The guys began to fade and they started to dress and leave. Soon there was only Sam, Linda, John and me. Linda called Sam and me over to the bed and said:\n\n\"I need a very big favor from you guys.\"\n",
        "\"Sure\" Sam said, \"What do you need?\"\n\n\"Can Herm stay here with you tonight?\"\n\n\"No problem; right Hermie?\"\n\nBefore I could answer Linda said, \"Please Herm? I know I said I wanted you to be first and last, but now I want John to be last and he wants to take me home. Please?\"\n\nI shrugged and said, \"You know I'll do whatever you want.\" I bent and kissed her and said, \"Take care and have fun. Call me when I can come home.\"\n\nAs Sam led me to her bedroom she said, \"I hope you have enough for me. I got real horny watching Linda live out her fantasy.\"\n\n\"I can give you once, but that's about all. I saved myself to be Linda's last, but that's all I have in the tank.\"\n\n\"Betcha I can get a little more out of you.\" \n\n\"I sincerely doubt it.\"\n\nNaturally she just had to prove me wrong, but it took her almost thirty minutes to do it.\n\nWhen I was lying exhausted next to her I said, \"Care to speculate on what happened tonight?\"\n\n\"I haven't a clue. Like I said, in the three years I've worked with John he has never taken part in anything we did.\"\n\nWe fell asleep shortly after that. At noon the next day Linda called and told me that I could come home.\n\n\"John drove me home so the car is still there.\"\n\nI told Sam I was going to leave and she said, \"Linda told you she would explain when you got home. You make damned sure you call me and clue me in. I'm dying of curiosity.\"\n\n\"I need to know something. Does John know who she is? I mean does John know about our relationship?\"\n\n\"As far as I know all he knows is that she is a very good friend of mine that I helped live out a fantasy. He knows she came with you and from hearing what she told you he knows that you expected to be going home with her. Why do you ask?\"\n\n\"Because Linda is extremely wealthy and she has men coming after her for her money and not her.\"\n\n\"I doubt that John knows that. He'd never seen her before last night at least as far as I know. What are you going to do?\"\n\n\"It isn't what I'm going to do; it is what is Linda going to do? Don't forget that all I am to her is her kept boy toy.\"\n\n\"You are more than that to her Herm.\"\n\n\"Another one of those \"Trust me, a woman knows these things?\"\n\n\"Precisely. Call me\" she said as she stood on her tip-toes and kissed me.\n\n+++++++++++++++++++\n\nWhen I got to the house I found Linda sitting at the kitchen table drinking coffee and working the New York Times crossword puzzle. I poured myself a cup and joined her at the table. She put down her pencil and said:\n\n\"I guess I owe you an explanation.\"\n\n\"No you don't. We both know what our relationship is.\"\n\n\"Oh? And just what is our relationship?\"\n\n\"I'm your every other weekend boy toy. We are friends with some damned good benefits.\"\n\n\"Is that what you really think?\"\n\nI shrugged and she said, \"You are much more than that to me Herm. You know that I used you exclusively up until you dropped out of site. I've used an escort service every weekend I've come to town and I've had dozens of escorts. Some of them more than a couple of times, but you are the only one I've ever offered to set up in an apartment. If you were fifteen or twenty years older I would have been trying to get you to marry me. To be absolutely honest there have been times when I thought seriously of putting the age thing aside and asking you to marry me anyway.\n\n\"Don't misunderstand me here Herm; it has nothing to do with love. I'm very fond of you and we fit well together and at my age that would usually be enough. At my age I never expected to find love again at least not like the love I had with Bob, but things changed last night.\"\n\nI didn't say anything. I just sat there, sipped my coffee and waited.\n\n\"Last night something happened that I've read and heard about, but never believed. Last night while you were buried in my ass I happened to look over at John; our eyes met and I swear to God that an electric spark jumped between us. He felt it too. When he came over to make love to me I felt it again. Something clicked between us Hermie. When he brought me home he made love to me two more times and it felt right Herm. That's the only way I can describe it. It just felt so right.\"\n\n\"So I guess I need to find another place to live.\"\n\n\"Oh no you don't baby. I need you to be here for me if things don't work out with John. No changes other than I'll probably be dating John when I come to town. And I need you to babysit the house until the market improves. If necessary I'll take a hotel room for when I'm dating John or ask you to stay with Sam. I have a strong feeling that Sam would like that. In fact I'll bet she would like you to move in with her permanently. If you do decide to do it give me enough notice so I can make arrangements to have the house taken care of.\"\n\n\"I'm here and I'm yours until you tell me to hit the road.\"\n\n\"I don't know if I could do that baby.\"\n\n\"Sure you can. What's more is that you will have to if the connection you feel to John stays with you.\"\n\n\"I don't know about that lover. After all, he did meet me at a gangbang.\"\n\n\"Speaking of which was it what you thought it would be?\"\n\n\"And more. I'll be doing more of them. Maybe one a year when I feel the need to give myself a special treat.\"\n\n\"And if your new man doesn't approve?\"\n\n\"I'll cross that bridge when I come to it. But again I'll point out that we did meet at a gangbang. I do want to show you how much I appreciate your giving up your place last night, but my little party and the rest of my evening with John has tired me out so you will have to wait until tonight for your reward. You want to go out to dinner or stay in?\"\n\n+++++++++++++++++++++++++++\n\nThe next two weeks slid by filled mostly with my job and some evenings with Sam. She would usually call and invite me over for dinner saying that made too much and hated eating alone. Dessert was always served in the bedroom and most nights I never made it home.\n\nSam's days were filled with mailing out resumes and going for interviews. She had successfully defended her dissertation and was now entitled to add the word \"Doctor\" in front of her name and in fact I did start calling her \"Doc\" and \"Doctor Sam\" even though she kept telling me not to.\n\nWednesday night I got a call from Linda telling me that John would be picking her up at the airport on Thursday and she would be spending the weekend with him. She said it would probably be at his place, but would I mind staying with Sam just in case? I told her I'd find some place to stay and then I told her to have fun and enjoy herself. I called Sam and she told me that I should know by now that I was welcome at her place anytime and then she said:\n\n\"You can move in if you want.\"\n\nI spent from Thursday to Sunday evening at Sam's and around six on Sunday I got a call from Linda telling me that I could come home.\n\nThat set the pattern for the rest of the summer. I basically house sat from Monday to Thursday and then stayed with Sam Thursday night to Sunday evening while Linda and John did their thing.\n\nAt one point I told Sam that I didn't think it was fair that I tied up her weekends.\n\n\"You need to get out and date.\"\n\n\"I don't need to date. I've already found my guy. I'm just waiting for him to get his head out of his ass.\"\n\n\"Do I know him?\"\n\nShe threw a dish towel at me and told me that I could be such an ass sometimes. Actually I didn't have my head up my ass. I knew what she wanted and I wasn't totally opposed, but I just didn't think I was ready to tie myself down. \n\nTwo things happened the week before school started back up and one of them was life changing. Linda was back in town for her weekend and I was staying with Sam. Doctor Sam had found a position that she liked at a local company and since I got off work and was at her place before she got home I fixed dinner. She was all bubbly and happy when she got home and she came up to me and gave me a scorcher of a kiss.\n\n\"I'm out of the porn business baby. I sold my site and all rights to the product today. Will you call Linda and ask her to have dinner with us tomorrow?\"\n\n\"Why?\"\n\n\"She is in the investment business and I want some advice on what to do with the money I got from the sale.\"\n\nI called Linda and she accepted the invitation saying, \"John and I have something to share with you so tomorrow works fine for us.\"\n\nWhen Linda and John arrived and after I'd fixed all of us drinks Linda said:\n\n\"Since you were both in on the beginning we wanted you guys to be the first to know. John has asked me to marry him and I've said yes.\"\n\nThat prompted Sam to give both Linda and John hugs as she congratulated them. Then Sam said:\n\n\"I just wish someone we all know would offer to make an honest woman out of me.\"\n\nThree sets of eyes looked at me as I lifted my glass and said, \"Here is to the two of you\" and then I took a large gulp of my drink.\n\nThe two women set off for the kitchen leaving me and John alone in the living room. \"Why haven't you asked her\" John wanted to know.\n\n\"Asked who what?\"\n\n\"Asked Sam to marry you. It has been plainly obvious to everyone from the start that from your first day on the set Sam has had eyes for only you. I'll admit that it took some time before she admitted it to herself, but that girl is yours Herm. All you have to do is be smart enough not to let her get away.\"\n\n\"Oh come on John. She is beautiful, smart, sexy and three years older than I am. All I am is a school boy with a year of school to finish. I don't have a thing to offer her. She can do so much better than me.\"\n\n\"The fact Herm is that she doesn't want to do better than you. Again, it is plainly obvious that she has set her sights on you.\"\n\nJust then Sam called us to dinner. Over dinner Sam said she had given Linda the proceeds from the sale of her porn business and that Linda was going to invest the money for her.\n\nWhen Linda and John were gone Sam handed me a fresh drink and then said:\n\n\"It is time to shit or get off the pot Herm. I've done everything but tie you down and brand you or get down on my knees and beg. Am I wasting my time? Should I just push you out the door, not let you back in and get on with my life? Come on Herm; talk to me.\"\n\n\"Truth time?\"\n\n\"Absolutely.\"\n\n\"You are one hell of a woman Sam. Sexy, beautiful, brainy -- you are the total package. That's the problem. I don't think I'm good enough for you. You have a PhD for Christ's sake and I'm barely holding a B average as a Business major. You started up and ran a successful business while still going to school and at best I'm just a flunkey where I work. I'm just a kid compared to you.\"\n\n\"That is absolute and utter bullshit Herman. You have the aptitude. I'm violating a confidence when I tell you this, but Linda told me that you took to your job like a baby duck takes to water. She told me that you would probably be her local manager within two years of your finishing school and going to work full time.\n\n\"You mention my successful business. It would probably have been even more successful if I'd had you from the beginning. You made the cuckold series Herm. I had the initial idea, but it was your feel for what should be done and your input that made the series as good as it turned out to be.\n\n\"You haven't even mentioned the important stuff Herm. I don't know how you feel when you are with me, but when I'm with you I don't want you to go. I want you to stay with me. I look forward to our weekends together. I want more than weekends Herm. You know that I'm no inexperienced virgin, but I've never met any other man who makes me feel the way you do. I want to feel like that twenty-four seven Herm. I want you Herman. I can't say it any stronger than that. I want you.\"\n\n\"That's the physical and emotional side of it Sam, but you aren't looking at the practical side. There is the age difference. You are out in the workforce and you will be wrapped up in your job and the people you work with and yes, maybe even meeting new and interesting men. I'm going to still be in school and doing the things that students do. I'll be spending my time in classes and at the library. I'll be in study groups that I'd be bring home with me so we could work together. I'll be working on projects and papers with kids even younger than I am; the kinds of people that you won't be able to relate to.\n\n\"Thankfully, due to the sale of the house I have enough to pay for school without having to work. The point being that I won't be able to play the part of the man of the house.\"\n\n\"You don't have to be the man of the house Herman; you only have to be the man in my life. It is silly to even bring up the age gap. The gap between you and Linda is even wider that the gap that you say exists between us, but that didn't stop you from setting up house with her.\"\n\n\"That's different.\"\n\n\"Bull! The only difference is that I would be twenty-four seven instead of every other weekend.\"\n\n\"You are serious? You really feel that strongly about it?\"\n\n\"I do Herm; I really, really do.\"\n\n\"I can't believe that you want to saddle yourself with me, but I guess I'd have to be a fool not to go along with it.\"\n\n\"You mean it? No bullshit, you really mean it?\"\n\n\"I do.\"\n\nShe grabbed me and hugged me and it occurred to me that the word \"love\" had never been mentioned. I really liked Sam, but I didn't know if I loved her and she had never said that she loved me, but what did I know about love? I remembered once as a kid and mom had put peas on my plate at dinner time and I kept pushing then to the side as I ate. When I asked to be excused from the table mom said:\n\n\"You aren't finished yet. You haven't eaten your peas.\"\n\n\"I hate peas.\"\n\n\"Eat your peas Herman. You can learn to love anything. You just have to work at it.\"\n\nCould it be that simple? Just work at it? Maybe I did love her, but just didn't know it because I didn't know what love was. I loved my mother; I knew that for sure and I had pretty much the same feeling of affection for Sam that I'd had for mom. Was that love?\n\nIn my mind I put Sam up against all of the other girls I had been interested in and Sam came out on top every time. Love? I didn't know. I had some pretty strong feeling for Linda, but even there if it had come to making a choice there was a better than average chance I'd have gone with Sam. \n\nI guess that it all came back to what Sam saw in me. I sure didn't think I was anything special, but I wasn't going to argue with her. We would just have to go with the flow and see what happened. There were some things that were going to have to be addressed and so I brought them up.\n\n\"Linda was counting on me to babysit the house and I'm going to have to let her know that I won't be able to. Then there is the money I got from the sale of the house. I need to put a good chunk of it into another place or I'll end up having to pay capital gains tax on the money.\"\n\n\"That's easy to take care of. I want to get rid of this house. I only bought it because it had five bedrooms and a full basement and I needed all the room for making my films. I'll sell it, put the money with yours and we can buy a house that we like. I'd like to get a house on a really large lot and with a swimming pool. How about you?\"\n\n\"It would have to have a room that I could use as a home office or a den and a full basement that I can use part of for an exercise room. And I suppose I'd like a two or three car garage.\"\n\n\"Why? You don't even have a car.\"\n\n\"Not yet, but when I turn the Escalade back over to Linda I plan on buying a Mustang convertible.\"\n\n\"Okay then, we have all of that covered and all that's left is a trip to the mall.\"\n\n\"Why a trip to the mall?\"\n\n\"Because there are three jewelry stores there and you need to buy me a ring.\"\n\n\"A ring?\"\n\nShe paused and looked at me for a couple of seconds before she said:\n\n\"You do understand that we have been talking about marriage here right?\"\n\nActually I hadn't. I was thinking 'live together' not marriage, but in for a penny in for a pound so I said:\n\n\"Oh yeah; sure. It is all happening so fast that my mind hasn't caught up with things. Trip to the mall tomorrow. Got it.\"\n\n\"Help me do the dishes and clean up and then we can head for bed and practice what we will be doing on our wedding night.\"\n\nOf course it was what we were already every night I stayed at her place, but I was going to complain?\n\nThere was a bit of a rough spot though. We had just finished our second go round of the night and I was lying beside her leaning on an elbow and looking down at her. She looked up at me and asked me what I was thinking. Insensitive of me to pick that moment and I knew it as soon as I opened my mouth, but you can't pull the words back once they are spoken.\n\n\"I was thinking about you. I've watched you in action and I've seen how you respond and I was just wondering f I'm going to be enough for you.\"\n\n\"What the hell does that mean?\"\n\n\"I've watched you doing more than one man at a time and even though you say you feel like all you are is a piece of meat to the men it is obvious to me that you were into it. So I wonder if just me is going to be enough for you.\"\n\n\"I ought to slap your face for that. I had sex with several men at one time and sex is enjoyable. Did I like it? Damned straight I did. Do I crave it? No I don't. It was just business to me. Enjoyable business, but just business. I put that business behind me when I got my degree. The only multiples I'm interested in now are babies. At least two and you will damned well be their daddy. The answer to your question is yes; you are going to be enough for me. More than enough.\"\n\nShe reached for my limp cock and started fondling it. \"I like this guy. I like him so much that I'll never do anything that might make him not want to be my very good friend.\"\n\n+++++++++++++++++++++\n\nAfter pancakes at the IHOP on Demming Place we hit the mall and she found the ring she wanted at Zales. It didn't need to be sized so in front of every one in the store I took a knee in front of Sam and asked:\n\n\"Samantha Marie Croakly will you do me the honor of becoming my wife?\"\n\nShe said \"I will\" and I slipped the ring on her finger as the rest of the people in the store clapped their hands and cheered. I stood up and Sam took me in her arms and gave me one hell of a scorcher on the lips.\n\nWe went back to her place and made slow leisurely love. Linda called at six and told me that I could come home. Sam told me that she wanted to go with me and when I asked her why she told me.\n\nLinda was surprised when I showed up with Sam not that Sam would be in the way of anything since Linda and I hadn't had sex since she took up with John. I guess the surprise was mostly because Sam had never come with me before. Sam kissed Linda on the cheek and said:\n\n\"I'm here to share some good news and deliver some not so good news. The good news is that I have a new decoration on my body\" and she flashed her ring at Linda. Linda looked at it and then over at me and Sam said:\n\n\"Yes; he finally got his head out of his ass.\"\n\nThat got Sam a hug and me a hug and a kiss on the cheek. Then Sam said:\n\n\"Maybe we should sit down for the not so goods news.\"\n\nWe moved to the kitchen and sat down and then Sam said, \"I thought long and hard over this and I had just about decided to mind my own business and then Herm told me about a conversation he had with you. The one where you told him why you preferred young studs instead of pussy hounds that might just be after you for your money. He didn't tell me this until after you and John were over for dinner and gave us your news.\n\n\"I've known John for a little over four years. How we hooked up is immaterial, but we have worked together on my porn business the entire time I've known him. John has money. Not serious money like you\" she said to Linda, \"but he has a lot. What he told me was that when his parents died he ended up with over five million in life insurance and money from a wrongful death suit against the company whose drug impaired driver had killed his parents. He didn't go out on a spending spree, but invested a good part of it.",
        "\"Two days after your gangbang I was in John's home office and I was working with him on the sale of my porn business. John was my partner and owned twenty-five percent of the business. I noticed a magazine on his desk. It was a two year old issue of Investment Digest and it had your picture on the cover. It could well be that he knew who you were when he joined in on the gangbang.\"\n\nLinda's face was showing the shock she was feeling over the news.\n\n\"Oh my God\" she said, \"I can't believe it. What am I going to do?\"\n\nI stuck my oak in the water at that point.\n\n\"What you do is be careful. You said that you felt a spark when your eyes met John's. You said that he said he felt it also. Maybe he did. Obviously on your side it has developed into something you feel great about and it could be that he feels the same way. He might have dug the magazine out after he saw you because he thought you looked familiar and he finally remembered the magazine. We don't know how it went down. What is the bottom line here is that we felt that you needed to know. Easy way to check out if John's 'spark' is real is tell him who you are and that you will need a pre-nup before you can get married. If he balks you will have your answer. Looking at it from a darker perspective he might just say it doesn't matter because he is not marrying you for your money and sign it while planning your accidental death so he can inherit. You can lie some and tell him that the money isn't actually yours, but a foundations that Bob set up and that when you die the money will go to a bunch of charities.\n\n\"The 'spark' you felt and what it grew into may be enough that you just don't give a damn about his motives and that you want him regardless. Sam just felt that you needed to know and remembering the conversation that you and I had I felt that she was right.\"\n\n\"It is a lot for me to think about, but you are right. It is something that I needed to know.\"\n\n\"There is one other thing. You are going to lose your house sitter. Now that I've gotten -- as Sam has so succinctly put it -- my head out of my ass I'll be moving in with her until she can sell the house and then we will be looking for a place.\"\n\n\"Not a problem. I'm sure that I can rent it. When are you guys going to tie the knot?\"\n\nBefore I could say anything Sam spoke up and said, \"As soon as we get the blood tests and license out of the way and find a justice of the peace.\"\n\n\"No big wedding?\"\n\n\"To me a big wedding is a colossal waste of money that can be put to better use buying new furniture and appliances for the new house.\"\n\nLinda looked at me and I shrugged and said, \"I'm with her on that.\"\n\nSam said, \"I will take him home to meet my family, but it will be more of a rub their faces in it kind of thing. They always told me that I wouldn't amount to much and that no good man would ever have me. It will do me a world of good to wave my PhD in their faces. That will be extremely rewarding since none of the rest of my family made it any farther than high school and my mom didn't even finish that. And there is my being able to show off my stud and a half to them.\n\nLinda laughed and said, \"Only a stud and a half? He must not be giving you all that he gave me. I'm going to miss him.\"\n\nSam snorted and said, \"Bullshit! You pushed him out of your bed to make room for John. Not that I'm complaining mind you since pushing him out of yours just pushed him into mine.\"\n\n\"Come on girls\" I said, \"Lighten up. You are embarrassing me.\"\n\n\"Horseshit!\" they both said in unison and then Linda said, \"Your ego is sucking it all in and you are loving it.\"\n\nSam looked at her watch and said, \"We need to go baby. I need a good nights sleep before I go to work and you have some business to take care of before I can go to sleep.\"\n\nWe stood up, gave Linda a hug and I told her I would start moving my stuff out during the week. She kissed me, gave me another hug and then whispered in my ear:\n\n\"I meant it lover; I will miss you.\"\n\nEpilog\n\nSam and I were married in front of a justice of the peace with John and Linda present as witnesses. Sam sold her place and we pooled our money and bought a five bedroom house on two acres. It has a detached four car garage, a swimming pool, hot tub and a tennis court.\n\nI bought a Mustang convertible and Sam, who loved Linda's Escalade, bought one for herself. We turned one of the bedrooms into a home office for Sam and one into a home office/den for me and we are busy decorating another one for Jessica Marie who will be joining us in another three months.\n\nI finished school and went to work for Linda's company full time and just a little over two years after going full time I was promoted to manager.\n\nLinda never did confront John. She didn't have to. One day he told her that he knew who she was and he wanted to turn all of his money over to her to invest and HE insisted on a prenuptial agreement. Sam was Linda's matron of honor and I was John's best man.\n\nIn John Linda had found another Bob in that John loved to watch her with other men the same as Bob had. Linda meant what she said following her first gangbang -- that she was going to do more of them -- and just recently she asked me if I wanted to take part in one and I do have to admit that I was giving it some thought when Sam said:\n\n\"No fucking way!!! That part of our life is behind us and behind us is where it is going to stay. Do you understand?\"\n\nAll I could do was shrug and say, \"Yes dear.\""
    ],
    "authorname": "Just Plain Bob",
    "tags": [
        "drama"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/herman-ch-03"
}