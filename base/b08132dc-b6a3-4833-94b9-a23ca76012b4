{
    "title": "The Shack: An Unreasonable Man",
    "pages": [
        "This story is one of a continuing series of connected stories known as \"Tales from the Shack.\" Normally these go into LW because the Shack series started here, and it is much easier for those that follow the stories to find them if I keep them all together. Even so, this one very much belongs in the LW category. This story stands on its own, though it is part of the series. It is also the second of the Needles & Delaney stories, so read \"An Angry Man\" first. I typically don't write graphic sex into this story line and that remains true here.  \n\nThanks to stev2244 and bebop03 for beta reads, blackrandi and sbrooks103x for amazing editing; they make these readable. There are other who help who prefer not to be credited. You know who you are and I appreciate the help. As always, special thanks to The Missus for her tolerance, her encouragement, and her brilliant plotting and characterization. \n\nAn Unreasonable Man:  \n\nNeedles & Delaney should come with fucking warning labels \n\n\"Asshole!\" \n\nDelaney ended her furious rant glaring up at me red-faced, fists clenched white-knuckle tight by her sides. \n\nI was still chuckling. \n\nDelaney had her days. Hell, we all did, I had days when it was hard to keep the lid screwed on, and I had a lot more experience at it than she did. Of course, my laughter hardly helped; it made her madder than hell.\n\nShe suddenly blinked and turned pale, a flash of fear on her face as she bolted past me, rushing towards the trailer. I turned to watch her just as Sheree stepped out the door and pulled her into a hug. She looked at me over the top of Delaney's head, and shot me a wink and a soft smile. \n\nI pointed to Delaney and then at the knuckles of my left hand. She nodded and gently ushered Delaney inside; she'd clean and bandage where Delaney'd caught her hand when the damn wrench slipped. That had to hurt; this late in the year it was always a little cold, and skinning your knuckles always hurts more when it's cold.\n\nI'd warned her twice about that nut; it was frozen and damn near rounded off. She had to try it her own way first, though. Cost her a little skin and a bit of blood. We both tested our tetanus shots on a regular basis. That just happens in a salvage yard. Maybe she'd learn from it. Delaney's hard head meant she was a slow learner, sometimes.\n\nI was sure it'd be okay, because Friday was always Movie Night at Dawes's Salvage. I shrugged and went back to work. Skinned my own fucking knuckles before I followed my own suggestion, heated the nut with a propane torch and removed it. I'm a slow learner, too.\n\nAt five-thirty, I headed up to the trailer to clean up. Delaney was nowhere to be seen, but Sheree was pulling bowls out for the stew I'd put in the slow cooker earlier. With Sheree working every weekday, I usually set up dinner during the week. Winter meals were easy, dump it all in a slow cooker, wait eight hours and eat.\n\nSheree gave me a little kiss and thumped me on the chest. \"No more sugar 'til you get scrubbed up.\" She shot a glance back towards the far bedroom where some kind of unrecognizable music was playing. \"She'll be okay. Just scared herself. She's always afraid she's gone too far. Worried t'death you're gonna send her back.\" \n\nI shook my head. \"Not gonna happen. Nobody deserves to have to live with that bitch. I'd send Delaney to Gitmo before I sent her back there.\"\n\nSheree smiled. \"She has to let that anger out and she knows she can do it to you because you can take it.\"\n\nI knew that was true, she'd never so much as raised her voice to Sheree, not once. \"Every time she does it, I see myself. Besides, it's karma; I missed most of Tara and Tiffany's teenage years, I probably have some teenage screaming coming.\" \n\nSheree stretched up and gave me another, more intense, kiss. \"Go get cleaned up. You deserve a few more of those, and I'd rather give 'em to ya when you smell better.\"\n\nAfter I cleaned up and came out for dinner, I found them already at the table, Delaney looking more than a little tense. Sheree talked about her day down at Big Ed's Quickmart convenience store, mostly dealing with a malfunctioning Slurpee machine and a lost beer truck. Her news that Shelley had to do community service again so she was stuck with the 10-to-2 shift the next day wasn't great, but I had some things to do, so it'd be okay. Still, I could just sit and listen to her talk all day. Delaney, fragile and shiny-eyed, was obviously thankful for the distraction. \n\nAs we got ready to clean up after dinner, Sheree nudged Delaney, and she took a deep breath. \"I'm making dessert tonight. It's a surprise.\"\n\nBefore I could even comment Sheree hustled me over to the couch, and we sat there while Delaney buzzed around the kitchen. A bit later, Delaney hesitantly presented me with a plate with what for all the world looked like a pizza crust with no cheese, sauce, or toppings. \n\nShe waited nervously until I picked it up and took a bite. \n\n\"Damn. I thought I was going to have to pretend to like it. This is actually really good. What the hell is it?\"\n\nShe lit up. \"Pie crust. Store bought pie crust with some sugar and cinnamon on it. And butter.\" \n\nSheree ate hers gleefully. \"Kinda like them things at the Mexican restaurant. Sopapillas. Kind of.\"\n\nDelaney was obviously delighted with the response and ran to get us all another piece. She topped hers and Sheree's with whipped cream and some chocolate syrup. She even turned up some chocolate sprinkles I didn't know we had. \n\nAfter we finished, Delaney looked expectantly at Sheree. \"Was there anything good left?\"\n\nSheree just pulled two movies out of her purse. \"One for us, one for Les.\" She held up a Disney adventure movie, and a copy of A Bridge Too Far.\n\nIt was Movie Night at Dawes' Salvage, just like every Friday night.\n\n***\n\nI woke up to a chorus of snores. Delaney's slightly squeaky soft snores and Sheree's decidedly more womanly snores. Delaney was curled up almost like a kitten against Sheree. Sheree was nestled into my side with one arm protectively over Delaney. \n\nJust like every Saturday morning for the last few months. Every Friday movie night, they'd get in their pajamas, bring blankets and pillows, and promptly fall asleep after the second movie started. After a month, I'd gone out and bought a much bigger, much more comfortable, couch. No point in having backaches all the time. It took up most of the living room, but it was worth it. \n\nIt'd started me thinking about the trailer. It'd been fine when it was just me, but I realized I wanted more for Sheree and Delaney. They both seemed happy, but maybe something other than a two bedroom singlewide in a salvage yard would be a little better. \n\nI looked around at the trailer, morning light pushing rudely in through the windows.\n\nNot much in the way of decoration and most of the furniture was secondhand even if it was pretty presentable, except the new couch, of course, and two new beds: one for me and Sheree, and one for Delaney. It wasn't even much of a bachelor pad, just a place to sleep and eat. That was all I'd ever needed, but maybe the three of us really needed a place to live. I had enough money, even after paying for Delaney to go to the Learning Center twice a week up in Charlottesville. That hadn't been cheap but it'd definitely been worth it. Unlike the classy private school that bitch ex-wife of mine had insisted she go to, it was one-on-one with a specialist in dyslexia who actually knew how to help her. She'd never be a great academic, but she was starting to find ways of dealing with her limitations. It showed in her schoolwork. \n\nWe'd decided to do the homeschool thing, at least for a year, so Delaney worked on her \"school stuff\" part of the morning and in the evenings, while spending as much time as she could with me in the salvage yard. She loved taking things apart, and she loved learning to drive all the vehicles in the yard. She was a natural on the stick shifts, and I took her to the old quarry and let her drive Sally around a little bit. For all her frustration and anger, I knew she was happier here with us than she'd ever been anywhere. After her father won his election to the State Senate, I'd been relieved when Charlotte didn't contact us at all. She'd obviously decided Delaney could be a problem when Charles ran for Governor and had decided I could keep her. That was fine with me. \n\nI could have just sat there all day, listening to them, but I knew Sheree would have to get up and start getting ready. I gently prodded her awake.\n\nShe made a purring sound. \"I wish I could stay here all day.\"\n\n\"Me, too.\"\n\n\"What are you and Delaney gonna be doin' while I'm at the Quickmart?\"\n\n\"I've got a coupla pickups to do and I think Delaney's gonna be workin' on her baby.\"\n\nSheree giggled. \"We're not gonna have to worry about boyfriends for a while. That car is her boyfriend.\"\n\nI chuckled along with her. Delaney worked obsessively on her project car, a 1958 Plymouth Fury. She insisted on doing everything herself. I could watch, explain, make suggestions, but that was it. Delaney was adamant about it. She was doing all the bodywork, and even rebuilding the special Golden Commando Dual-Quad 350 engine I'd traded a wrecked Porsche for. Delaney was a little unhappy about that; she'd wanted to use as much of her own money as possible, so she'd sworn to \"work off the engine\" in the salvage yard. She was making good on that promise; Delaney certainly had her faults, but she sure as hell wasn't afraid of hard work and dirt. The Fury was going to be her birthday gift to herself for her sixteenth birthday. Be a helluva gift too; even with a non-standard red and white \"Christine\" paint job, it'd be worth a good $80,000 dollars, at least.\n\nBesides, I wasn't too worried about boyfriends for a while; Delaney still had nightmares about what would have happened if I hadn't showed up the last time she thought she had a boyfriend. \n\nSheree shifted luxuriously and reached up for a kiss.\n\n\"Eeewwww, not in front of the kid!\" Delaney sat up suddenly wrinkling her nose at us. She looked over at the clock. \"Shit! I wanted to get started early today.\" She jumped up, dragging her blanket and pillow toward her room.\n\nSheree giggled again and Delaney stopped and looked back. \"Since he's gonna be doing pickups, can I come down at lunch for a hotdog or two?\"\n\n\"Or, more likely, three. I don't know where you put them.\" Sheree beamed at her over the back of the couch. \"Just be careful on that scooter of yours.\" \n\nDelaney had found an old Honda 50cc moped in the yard, and much to my surprise, we'd managed to get it running. She'd promptly cleaned it up and given it a \"Christine-ish\" red-and-white paint job and wheedled a promise from the Sheriff to treat it as a bicycle for her as long as she stayed off the roads and wore a helmet.\n\n\"I'll take the alley behind the Sheriff's department. I promise.\"\n\nBy the time I got back out to the kitchen, Delaney was already there in her oversize mechanics coveralls and steel-toed boots, putting the final touches on her cinnamon toast. I started eggs and hash-browns for me and Sheree.\n\nDelaney sat down. \"I'll soak the nut on that fender in penetrating oil and try it tonight.\"\n\nShe was trying to make a peace offering of sorts, wanting to be sure we were okay. She couldn't use power tools or the torch unless I was there, so she was thinking of something she could do. \n\nI shook my head. \"Nah, I got it last night. Got it off with the torch. Damn thing bit me first.\" I held my skinned knuckles up. \"I was a little slow.\"\n\nDelaney took a huge mouthful of her toast to stifle a smile. \"But you did learn something?\"\n\n\"Even short bus kids like us can learn eventually.\"\n\nShe giggled. \"Then I'm gonna get my front driver-side quarter-panel sanded down.\" \n\n\"Wear earplugs, goggles, and a 3M mask. Make sure you put the power sander back where you got it. Sneaking it out of there doesn't really work unless you put it back.\"\n\nShe flushed a little and hid a tiny smile. She wasn't allowed to use the power-tools when I wasn't around. I knew how she thought, and a sander isn't exactly the most dangerous power-tool on the planet. She kept leaving it on the bench instead of getting it back on the shelf where it belonged. Of course, I knew it was her way of trying to be honest with me. She resented the hell out of authority, and probably always would, but I was kinda okay with that. She was a lot like me. \n\nAfter Sheree and I finished breakfast, she headed for the Quickmart and I walked out to the rollback truck. I had to laugh, I could hear the soft buzz of the power sander already droning from the garage where Delaney had her baby set up. \n\n***\n\nAlmost two hours later, as I unstrapped another wreck to unload it, Delaney wheeled her little red-and-white mini-nightmare up to me. \n\n\"I'm headed up to the Quickmart to eat. Do you want me to save you a spot?\"\n\nI rolled the last strap. \"It'll take me about 20 minutes to get there, but I'll take one of those foot-long jalapeno dogs with extra hot peppers. Then I have to head out and get that last one picked up.\"\n\nShe pulled her helmet on; it was black with little fanged robot skulls all over it. \"Cool. I can get a head start! I'll have Sheree put one back for you.\"\n\nIt was almost 25 minutes later when I started out the gate, only to be interrupted by a call from John down at the tire and auto shop. I did lot of my own work on vehicles, but I had him do regular maintenance. I was pretty sure I didn't have anything down there, so it was a bit odd. And it got much odder very quickly.\n\n\"Hey, John.\"\n\n\"Hey...Bill.\" He said the name with enough finality that I paused in my answer; he damn well knew he was using the wrong name.\n\n\"John...\"\n\n\"Hold a second Bill. There's a guy down here looking for a kid. Says her name is 'Delaney' something or other. Thought you might know about it.\"\n\nThis was no misdial. I turned towards the auto shop. \"I'm on my way over.\"\n\n\"Yeah, park around back, got a load of tires coming in, don't need you blocking the entrance.\"\n\nHis shop was only a few minutes from the yard and I pulled in the back like he asked, sliding my 1911 out of the glove box and into my belt at the back of my pants.\n\nJohn was at the counter facing a big guy with tattoos that flowed up his neck out of his t-shirt collar. As soon as I walked in, John started talking. \"Hey, Bill. This guy's looking for that kid that hangs out with Needles.\"\n\nHe turned towards me. Blocky looking Asshole, with a nasty cast to him. As he turned I recognized some of the gang tattoos and knew why he was looking for Delaney. I shrugged. \"Probably down at the salvage yard, like they always are. Couple blocks south of here. Why you looking for her?\"\n\n\"That's my fucking business.\"\n\nI held my hands up. \"Just asking.\"\n\nHe brushed past me, heading out toward a black SUV, looked like it might be an Escalade, in the parking lot. John looked at me wide-eyed. \"You just told him where she is.\"\n\n\"Nah, she's with Sheree, eatin' lunch.\" I headed out the back. \"Think I'm gonna have a little talk with this fucker.\"\n\nJohn just nodded and picked up his coffee. \n\nI followed down the road behind him, let him get into the salvage yard and then put the rollback into low gear and steered it right into the driver's side door, shoving the SUV up against the wall of truck tires on the other side of the parking area. \n\nI already had the door open and swung out with the .45 leveled at him before he could figure out what happened. He started to reach into his jacket but stopped as soon as he looked up the barrel.\n\n\"Go for it, Asshole. Give me a fuckin' excuse.\"\n\nI heard the front door of the trailer open and glanced over as Delaney stepped out, looking around warily. \n\n\"What the fuck are you doing here? You're supposed to be with Sheree.\"\n\nShe held up a bag. \"Sheree asked me to run back here and get her a clean shirt and bra. The damn Slurpee machine spewed all down her shirt.\"\n\n\"Shit.\"\n\nDelaney stepped forward and looked at the Asshole. As soon as she saw the tattoos, her expression changed from confusion to raw hatred. \"What the fuck!?\"\n\n\"That's what I'm trying to find out.\"\n\n\"He was looking for me, wasn't he?\"\n\nI nodded. \n\nShe glared at him. \"Are you going to kill him?\" \n\n\"Jesus. We need to cut down on your sugar intake. I haven't even talked to him yet.\"\n\nShe dropped the bag and crossed her arms in front of her. \"So what about it, shithead? What are you here for?\n\nI considered telling her I'd ask the questions, but frankly I didn't have any better ones.\n\nHe scowled at her. \"Fuck off.\"\n\nDelaney shook her head. \"Wait, wait, wait. You came out here to grab me or kill me? How fucking stupid are you?\" She threw her hands up. \"Seriously. The last time some of you fucking asswipes tried that, everybody died. Like, fucking-dead-in-a-ball-of-fire, died.\" She leaned forward a little like she was studying him. \"I mean, are they trying to get rid of you or something? 'Hey! Let's send shithead out to get killed.' Are you banging somebody's fucking sister or something? Jesus.\"\n\nHis hand twitched toward his jacket as he looked daggers at her, but the muzzle of the .45 was a very convincing argument to stay still.\n\nI had to chuckle a little. \"You actually have to let the goat-felching strap-faggot answer questions for this to work.\"\n\nShe looked at me puzzled. \"What's a goat...\"\n\n\"Don't ask. And don't look it up on the internet either.\"\n\n\"I'm not old enough?\"\n\n\"Hell, I'm not old enough.\"\n\nShe shrugged. \"He's probably too stupid to answer. We're using words that are too long for him. Probably talking too fast for him, too.\" She looked at him wide-eyed with mock sympathy. \"Does...This...Help?\"\n\nThe Asshole turned a brilliant shade of red, I could almost see steam coming out his ears. Out of the corner of my eye I could see a car jerk to a sudden stop, the woman in it staring at us while animatedly talking into a cell phone. \"Shit, Delaney, get in there and call 9-1-1. Tell them we caught an intruder at the salvage yard.\"\n\n\"Why...\" She noticed the woman on the on the phone. \"Shit.\"\n\nShe dashed inside, tripping over the bag on her way, knocking everything out.\n\nI looked at the Asshole. \"We're gonna talk later.\"\n\nIt took the Sheriff and two of his deputies all of ninety seconds to come blazing into the yard, just as Delaney stepped back out.\n\n\"Needles.\" The Sheriff walked toward me cautiously.\n\n\"Careful, Asshole here has a gun in his jacket.\"\n\nAs soon as the deputies had him covered, I cleared my .45 and offered it to the Sheriff. He waved me off. \"I know you have a permit for that. I had to sign the damn thing.\" He looked at the SUV. \"Think you could back the truck off enough for us to get him out?\"\n\nI stuck the .45 in my belt, backed the rollback off a bit and slid back out to watch them get his gun and get him out.\n\nThe Sheriff watched as his deputies managed to pry the door open and pull the tattooed guy out of his SUV. \"So what's goin' on, Needles?\"\n\n\"He's some kind of pervert. He exposed himself to Delaney.\"\n\n\"Seriously? You're going with that? You know he was trapped in his SUV, she's not even tall enough to see in the window of that thing. Kinda tough to do that from there.\" \n\nDelaney broke in, nodding exaggeratedly, eyes wide in obvious mock-fear. \"It's true Sheriff! He did. It was horrible... I saw it!\" She narrowed her eyes, then held her hand up, thumb and forefinger half an inch apart. \"It was like a penis, but smaller...\" \n\nThe guy snarled and shoved the deputies away suddenly, lunging towards Delaney, snarling. \"Bitch!\" \n\nExactly like I'd expected him to do. With the Sheriff on the wrong side, I had just the right angle to step in and drive my fist into his temple with every bit of my weight behind it; he fell to the ground clutching weakly at his head.",
        "Before I could follow up, the two deputies piled onto him like an avalanche of bricks. Delaney just stood watching with a barely suppressed smirk. She hadn't so much as shifted an inch.\n\nThe Sheriff looked back and forth between me and Delaney. \"What the hell were you thinking, girl? He could have hurt you.\"\n\n\"With Needles here? Do you really think he'd ever let that shithead touch me?\" Delaney moved out of the way to let them finish cuffing and searching him. I noticed her reach quickly into the SUV and tuck something into her pocket.\n\nThe Sheriff shook his head. \"Jesus. Now I have to process him for assaulting law enforcement officers.\" He nodded to his deputies. \"Get him the fuck out of here. Process him and run him for warrants.\"\n\nI nodded. \"That's good, you can book him on that. At least Delaney won't have to relive that horrible experience.\"\n\nShe giggled. \n\nWe watched as the deputies stuffed him ungently into one of their cruisers. The Sheriff shifted his stare to me after they drove off. \"We need to talk, Needles. I recognize those tattoos. I saw some like them in a report about the same time you made your little trip to Durham to pick up Delaney here. North County Wild Boyz gang members who got themselves very dead in some kind of car chase and shoot out.\" \n\nFor a fraction of a second Delaney looked like a scared little girl again, but it was gone in a flash. \n\nThe Sheriff was much smarter than his \"Good 'Ol Boy\" demeanor would ever suggest, and he knew my background better than most. I shrugged. \"Odd coincidence.\"\n\n\"Seriously, there's more to this. I can't help much if I don't know what the hell's going on.\"\n\nI nodded. \"I didn't think there would be, thought it was all over. Until the shithead showed up.\"\n\n\"That gang was tied in with South American gangs, and it was involved in drugs and...\" He paused looking over at Delaney.\n\nShe stared right back and finished for him. \"And underage prostitution? I heard gangs like that grab runaways and street kids then break them. With gang rape. Then they turn them out as whores.\" Her voice was mostly steady with just barely a quaver in it. \n\nThe Sheriff blinked twice. \"Yeah. That's what I heard, too.\"\n\nI nodded to her and Delaney took a deep breath. \"Sometimes karma catches up to them just in time. Sometimes they fucking die screaming before they can hurt someone. That's what I heard, anyway.\" She shot me a glassy sidelong glance. \n\nHe shook his head, looking at the gravel under his feet. \"Shit. But I kinda figured it was something like that.\" He looked up thoughtfully. \"How'd they find you this time?\" \n\nDelaney looked up at me, desperate. \"I swear to God, it wasn't me. I haven't been on the internet or anything.\"\n\n\"They already had your real name from before. Maybe somebody decided they needed to tie up loose ends.\" Even as I said it, it didn't sound right, I was sure there was more to it. Most gangs lose eight guys they keep their fucking fingers out of the buzzsaw if they can.\n\nDelaney looked down. \"I can't believe I was that fucking stupid.\"\n\nI touched her shoulder. \"It's okay to fuck up once in a while, everybody does.\"\n\n\"I know, 'as long as we learn from it.' I remember.\" She looked up me with a weak smile. \"Even short bus kids like us can get by.\"\n\n\"We can, can't we?\"\n\nThe Sheriff keyed his mike and told his men to be extra cautious with their prisoner. Then pointed to the bag on the ground. \"Is that his?\"\n\nDelaney walked over and held up Sheree's bra. \"Not unless he wears a Double D cup. I was here to get clothes for Sheree.\"\n\nA thought suddenly struck me. \"Goddammit to Fuck.\"\n\nThe intensity of my tone caught the Sheriff off balance. \"What?\"\n\n\"These are the kind of assholes who might go after family. We have to warn Tiffany, Tara, and...\" I couldn't say it.\n\n\"Shit. Shit. Shit.\" Delaney sounded as disgusted as I felt. Her head dropped forward and she closed her eyes. \"My mother.\" \n\nMy phone started buzzing and Sheree's number popped up. I answered as calmly as possible. \"Hey, Babe.\"\n\n\"Is Delaney with you?\"\n\n\"Yeah, we got held up, sorry for not calling, it was a little hectic. But we'll be up there in a few minutes.\"\n\nAs soon as I was off the phone, I nodded to the Sheriff. \"I'll be by to talk, but I need to get Delaney up to Sheree.\"\n\n\"Anytime this afternoon is fine. I assume you aren't pressing charges?\"\n\n\"You should have plenty without me. Especially if that gun is unregistered or he doesn't have a license for it.\" \n\n\"There is that. Then I won't need you to come by at all.\"\n\nI had Delaney ride with me in the truck to the Quickmart. She didn't even argue about it; she had to be really upset. \n\nI waited until we were out of sight of the yard and the Sheriff. \"Let's see his phone.\"\n\nShe sighed and wordlessly pulled it out.\n\n\"Is it locked?\"\n\nShe checked. \"Nope. He's a dumb-ass. It's got Facebook and everything on it...Instagram...Tinder...Jesus who'd wanna hook up with him? Swipe left for fuck's sake.\"\n\n\"We'll go through it later. The Sheriff's cool, but I don't need him sticking his neck out for us any more than he has to.\" \n\nDelaney shot me a look. \"You're going after them, aren't you?\"\n\n\"I have to do something.\"\n\n\"I want to help.\"\n\n\"You already did.\"\n\n\"No, I mean when you go after them.\"\n\n\"It's too damn dangerous.\"\n\nShe fell silent for a minute. \"Are you going to tell Sheree?\"\n\n\"I don't hide things from Sheree. I trust her.\" I did. More than anyone. I'd told her about my divorce, my drug problem, and my anger. She'd just smiled and told me about her past, with three months in jail for destroying a cheating boyfriend's truck when she was 20, and almost a year dancing topless under the name \"Candi\" at the Kitty Kat Lounge in Norfolk to make ends meet a couple decades ago. Neither of us was perfect, but so the fuck what? \n\nWhen I told her what happened when I went to get Delaney, she had no problem with it.\n\nDelaney smiled. \"I trust her, too. I...\" She stopped suddenly.\n\n\"What?\"\n\n\"She's just great, that's all.\"\n\n\"She is.\" I parked the truck behind the Quickmart and we climbed out.\n\nSheree walked straight out, with her head cocked to one side, staring fixedly at us. \"I'll clean up after we eat. Got yer food all laid out on the counter already. Whatcha all been up to?\" \n\n\"One of the gang that grabbed Delany showed up in town. Sheriff has him.\"\n\nShe looked over Delaney. \"Are you okay, Baby?\"\n\nIf anyone else in the world had called Delaney \"Baby,\" she'd have gone ballistic, but she just stepped forward and hugged Sheree. \"I'm fine, I didn't even know what was happening until Needles got him.\"\n\n\"Got him?\" Sheree raised an eyebrow as we sat down at the little table. \n\n\"I pinned him in his car with the truck, and just held him till the Sheriff got there.\"\n\n\"Oh, I thought she meant, like, beat him up. Or shoot him.\"\n\nDelaney giggled around a mouthful of hotdog. \"He did hit him once. Right in the head. Really hard. Right in front of the Sheriff.\" \n\nSheree nodded. \"That sounds more like it. I 'spose since you ain't callin' for bail, the Sheriff was okay with that.\"\n\n\"Yeah, the asshole broke away from the deputies.\"\n\nSheree looked out the window for a bit. \"You think there'll be more?\"\n\n\"Maybe. Can't be sure, but maybe. No way to keep him from telling anyone else what happened.\"\n\nSheree took a sip of her soda. \"I don't know what kind of shape it's in, 'cause it's been a couple years, but I still have Pop's cabin down at the river. Two bedrooms, a living room and a kitchen. No electricity, and it may be a mess, but nobody'd know to look for us there.\"\n\nDelaney looked up from her rapidly disappearing hot dog. \"Sort of like camping. I've never been camping.\"\n\nSheree smiled. \"I let Big Ed use it to go fishing last April, so it should be all right. He said the hand pump worked and the camp stove just needed a propane bottle.\"\n\n\"What kind of heat?\"\n\n\"Big brick wood furnace to heat, a woodstove for more serious cooking and a fireplace.\" \n\n\"I can get John's son to drop a coupla of seasoned cords out there by this evening. Maybe a good idea to move out there tomorrow.\"\n\nSheree looked relieved. \"We'll have to get some kerosene, some camp lamps and lime for the outhouse.\"\n\nThat was pretty much that. \n\nExcept for a phone call to Delaney's mother. I'd rather have had a root canal without anesthetic, but I'd just managed to get my two daughters to start talking to me after almost two decades, so if I didn't warn her, I might lose that.\n\n\"Les.\" She was wary when she answered the phone; she'd probably peeked out the curtains to make sure I wasn't parked out front. I had promised to kill her once or twice, so I could understand the sentiment.\n\n\"Listen, Charli, one of the assholes that grabbed Delaney showed up at the yard today. Not sure why, but I'm pretty fucking sure it wasn't to offer an apology.\"\n\n\"Jesus, Les. I thought this was over.\" She managed to sound as if she were blaming me for the problem.\n\nI bit back a comment. \"Look, just make damn sure your security system is on. If they can find us, they can find you. I don't need the girls blaming me if you fuck up and get yourself killed. Make sure they know to be extra careful.\"\n\n\"Just how do I explain that?\"\n\n\"I don't give a fuck. Act like a concerned mother for once and find a way to get them on their toes. Or do you want me to explain things to them in detail?\"\n\nShe went silent for a bit. I knew her relationship with Tiffany and Tara had gotten pretty strained when they found out how thoroughly they'd been lied to about the reasons for our divorce. They'd also figured out how ruthlessly Charlotte and Charles had worked to destroy me. Tara must have dug up the old court filings. I suspected they might have even had a hand in forcing Charlotte to give me guardianship of Delaney.\n\nShe sighed. \"I'll take care of it.\"\n\n\"You better, Charli. If I something happens to either of them and I find out you didn't, there'll be hell to pay.\"\n\n\"I said I have it, Les. Is there anything else?\"\n\n\"Nope...\"\n\nShe hung up before I could say anything else. \n\nBitch.\n\n***\n\nSheree, Delaney and I had everything packed up into one flatbed truck and headed out to Sheree's cabin on Sunday.\n\nThe four room cabin was made of squared off logs and had a metal roof. It'd had been battened down tight. Solid shutters were locked over the windows and the place looked surprisingly clean and uninhabited by wildlife. Sheree seemed embarrassed until she saw Delaney's reaction. She was walking the entire place, touching every surface she could reach. \n\n\"Your Grandfather built this?\"\n\n\"No, his father did.\"\n\nDelaney touched a window sill almost reverently. \"That's like a hundred years ago. All by hand, right?\"\n\nSheree nodded with a slight smile. \"Some of it's had to be fixed over the years, but all built by hand.\"\n\nDelaney was obviously awestruck. \"This is amazing.\" \n\nI sensed moving back to the trailer would be a very hard sell. Hell, the cabin was twice the size of the trailer. Delaney wouldn't have been impressed by a mansion, she'd grown up with money, but the cabin overwhelmed her. She must have made six cups of hot chocolate on the woodstove, and just sat in front of the fireplace most of the evening.\n\nWhen Delaney had finally spun down and went to bed, Sheree and I sat on the couch watching the fireplace.\n\n\"Why'd you have an apartment in town?\"\n\nShe shrugged. \"I don't know. Electricity, heat. Didn't have to worry about bein' snowed in. Us'ta be the power lines were farther away, cost too much to run it out here.\"\n\n\"I bet it isn't that much now. Those new lines back at the main road aren't that far away. I could cover that. If it's too much we'll get some damn solar panels or some shit.\"\n\nShe nestled in a bit more. \"It felt too empty before. But with the three of us...\" She trailed off.\n\n\"It'd be nicer than the trailer.\"\n\n\"The trailer was always fine.\"\n\n\"This would be better.\"\n\nI could feel her smile. \n\n***\n\nThe next morning I pulled out Asshole's phone. We had to start somewhere and if he hadn't bothered to put a lock on his phone, he was either careful enough not to have anything useful on it or he was a complete idiot.\n\nHe was a nearly complete idiot. \n\nFriends, check in locations, every fucking social media platform ever designed. Fucker probably still had a MySpace account. It wasn't hard to tell the gang members from casual friends, either. Massive \"NCWB\" neck tattoos made it pretty obvious. So did all the pictures of Glock handguns being waved idiotically around over piles of cash. I wondered how many of the idiots had managed to shoot their own houses up on accident. \n\nI had to have Delaney decode the fucking slang though. Even with her help I didn't understand what the fuck \"Yeet\" meant. \n\nI also had to stop Delaney from changing his Tinder profile to say he was a \"goat-felching strap faggot with a My Little Pony fetish.\" Twice. I finally gave the phone to Sheree at that point, while Delaney giggled almost uncontrollably from the couch.\n\nSheree looked over the messages and posts on the phone. \"When's the next Tar Heels game?\"\n\n\"Saturday, I think.\"\n\nShe pulled up some messages. \"It looks like they have 'Boyz Only' night at 'the Pad,' wherever that is. They do it whenever there's a game.\" \n\nFinding \"the pad\" wasn't difficult, either. He hadn't turned off the GPS so it wasn't a challenge to map out all his travels for the last 60 days. Every game day, it was the same trip to a place outside Durham. \n\nSheree looked at me. \"Whatcha gonna do?\"\n\n\"Depends on what the Sheriff gets out of the Asshole. If he doesn't get anywhere I'll just look into things over there.\"\n\nShe looked over at Delaney who'd wandered off to fix herself another hot chocolate. \"I don't like this, Les. I can't remember ever being this happy in my life. Now this happens.\"\n\n\"Nobody's gonna take this away from us. I won't let them.\"\n\n*****\n\nMonday morning the Sheriff was at the yard before I was, sipping a cup of coffee.\n\n\"Morning, Needles.\"\n\n\"Morning. What's up?\"\n\n\"Just a heads up. Your Asshole came up hot on the system with gang affiliation and stack of Failure-To-Appear on traffic charges. Durham County isn't interested in extradition on those FTAs, so it's catch and release on that. But there's no way Judge Warner is going to grant bail to an out-of-state gang member with a stack of FTAs.\"\n\n\"What next?\"\n\n\"The gun was registered and the Escalade isn't his, but it wasn't reported stolen. Prosecutor is kind of on the fence about it, but I think he's going to offer him a plea deal this afternoon. Thirty days for simple assault.\"\n\n\"Really? Think he'll take it?\"\n\n\"He'd be an idiot not to take the plea; any lawyer on the planet will tell him that. The prosecutor could nail him for resisting arrest and attempted assault on a minor, but he reviewed the body cams and he'd rather not take a chance. Your Delaney's got a mouth on her. It shouldn't matter, but the wrong jury and they'd cut him free. Took him a half-hour to stop laughing, though.\"\n\n\"Glad we could provide some entertainment.\"\n\n\"Look, this is reality. Trials are expensive and if he ends up with jail time instead of prison, well, that costs money, too.\"\n\n\"Yeah, I fucking get it.\"\n\nHe got up and glanced down at his feet for a second, then looked up at me. \"Needles, seriously. I know you. Not in my house. I don't want any blood on the ground here unless it's self-defense.\"\n\n\"Got it.\" \n\nHe looked at me suspiciously. \"I mean it. I got no problem with a man defending what's his. But I've heard rumors about why Ronnie Pelton is walking with a cane and working for free down at Big Ed's hog farm. That was pushing it, you shoulda come to me about that.\"\n\nI nodded. \"Got it. \n\nThirty days was almost exactly the wrong number, just long enough for the gang to get antsy and decide to send someone else. It'd be all too easy for the gang to decide to try to cap me in a drive-by shooting to get a clear path to Delaney.\n\nHis prediction came true, Asshole took the thirty days as a guest of the county rather than risk hard time. \n\nOn Friday, Delaney and I took Sally out of her garage and took her to the cabin. \n\nDelaney looked back at the Mustang as we got out. 'You're going after those assholes tomorrow, aren't you?\"\n\n\"I'm just taking a look, that's all.\"\n\nShe shivered, but there was more to it than fear. \"I hate them.\"\n\n\"We don't know if all of them were in on what was going to happen to you.\"\n\nWe did our Movie Night with no movie, just staring into the fireplace, Delaney was strangely quiet, but slept restlessly. \n\nLate the next afternoon, Delaney retreated quietly to her room when I got ready to head out. \n\nSheree watched her. \"Maybe she'll get some sleep.\" She turned to me. \"You be damn careful, Les. I just got you and I'm plannin' on getting old with you.\"\n\n\"I'm just planning on taking a look and maybe grab one to talk to. I'll be back in no time. You gonna be okay?\"\n\nShe smiled. \"I have the 12 gauge with the plug out, seven rounds of double ought in it and two whole boxes of shells. You jest make sure you don't startle me coming in.\"\n\nI chuckled as I fired Sally up and punched up \"Black Magic Woman\" on the CD player, earning a smile from Sheree.\n\n***\n\nTwo hours later, just as it was getting dark, I shut the engine down and sat for second, checking my .45. All I had to do was grab one of them and get out, but I'd still grabbed four extra magazines. Nobody ever regretted having too much ammunition in a shootout. \n\nThis needed done. Delaney was my responsibility.\n\nDelaney was...I stopped, thinking for a second. Goddammit. \n\nI slid out of the car, walked back to the trunk and popped it open.\n\n\"Goddammit.\"\n\nDelaney stared at me from inside with a stubborn set to her jaw, clutching a two-foot-long wrench. \"Shit. How'd you know I was here?\"\n\n\"You didn't cause any trouble when I left. You fucking had to be up to something. How were you planning on getting out if I didn't open the trunk?\"\n\nShe pulled a pair of needle nose pliers and a screwdriver out of her pocket and held them up. \"Just like you showed me\"\n\n\"You shouldn't be here.\"\n\n\"This is my fault.\" She sat up. \"You taught me that. If I break things, I have to fix them.\"\n\nI caught my breath, choking off my response. \"Damn it. Some things need to be dealt with by someone else. This isn't like a dropped socket in an engine.\"\n\nShe crossed her arms. \"It's my responsibility. Even when I can't fix something, you always make me watch and help.\" \n\n\"You're too damn young for this. You're still a kid.\"\n\n\"Girls used to fight in wars at my age. I listen to all those audio history books you know.\"\n\n\"Damn history books.\"\n\n\"You got them for me.\"\n\n\"Shut up.\"\n\nShe slung her skinny legs around and pulled herself out of the trunk. \"So what are we going to do?\"\n\n\"We aren't going to do anything. You're going to sit in the car until I get back. I should have sent you somewhere safe.\"\n\n\"Safer than with you? You're not going to fucking send me off to some...convent or something!\"\n\n\"Convent? Hell, I hadn't thought of that. You could become a nun, like Sister Mary Thugbunny or something.\"\n\nShe glared, but I could see a glint of humor. \"It's not fucking gonna happen.\"\n\n\"The Pope would excommunicate me and I'm not even Catholic.\" I shook my head. \"Christ. How long does this teenage shit last?\"\n\nDelaney suppressed a smirk. \"I think Sheree said about seven more years.\"\n\n\"Dammit. Just get in the car and stay there.\"\n\n***\n\nA small wooden house stood in front of a metal workshop labeled \"Bailey's Welding.\" I moved as quietly as I could toward a corner made blind by aging stacks of lumber and a couple of old couches that sat oddly on the front porch. I slid toward the house, past a rusted, smoking kettle barbeque standing awkwardly on an uneven platform of cinderblock on the side of the house. As tall and dry as the uncut grass was, I still didn't have to worry about being heard. I could hear laughter and shouting over the blasting sound of a television.",
        "If anyone walked out and saw me, I'd ask if I could bring a hay rake by for a weld. If that didn't work, I'd start shooting and hope I ran out of assholes before I ran out of bullets. That had worked for me a few times before. Though that plan did get me stabbed in the face once.\n\nFuck 'em if they can't take a joke.\n\nThe house had apparently been built with two bedrooms, but one had been taken out to expand the living room. It was a sea of armchairs, mismatched and wedged in arm-to-arm. Guys were passing food around while they watched the start of the second half, rather than get up and try to move around. They had to have jammed the chairs in there for the game, which was probably why the couches were on the porch. \n\nAt least I was in the right place. Every neck had an NCWB tattoo. I sat against the house next to the crawlspace door, listening.\n\nMost of the talk was standard macho bullshit, but one conversation caught my attention. Two of them were talking about the \"after-game entertainment.\" The words \"fresh meat\" caught my attention. A lot of the guys near them joined in, laughing about \"Cody softening them up.\" \n\nThat couldn't be anything good.\n\nA sound caught my attention; Delaney was skittering towards me. In a second she was clutching at my arm, yanking hard. I stared at her for a half second. \"What the holy fuck? You need to get your butt back in the goddamn...\"\n\nI stopped as soon as I saw her face. She was shock-white pale with tear-filled eyes. Her lower lip was quivering spasmodically. \"We have to... to... help.\"\n\nI let her pull me away, glancing back towards the crowded house. The game had a long ways to go anyway. It'd fucking keep for a bit. She pulled me around back, to the welding shop. She pointed wordlessly towards a side window, but cringed away from it.\n\nI pulled myself up, listening to the noise from the football fans in the house. As soon as I looked in, I knew why Delaney was struggling to keep herself together.\n\nThree cramped wire dog kennels sat in the middle of the concrete floor, naked figures cowering in them. A pig of a man walked almost carelessly around the cages. The women recoiled, as much from him as from the cattle prod he using to tap the cages.\n\nHe was laughing as they scrambled to keep away from the jolt of the prod.\n\nI looked over at Delaney, then slid along the wall to the door. Unlocked. Once he had his back to me, I rushed him and slammed the .45 against his temple as hard as I could. Something gave in his skull and he folded to the ground. From the blown pupils and spasmodic twitching, \"Cody\" wasn't going to be torturing anyone again.\n\nI stood over him and glanced out towards the house. No movement at all. Delaney was struggling with a small padlock on the kennel. \"We need the keys. Does he have the keys?\"\n\nI managed to find his cell phones and a set of car and house keys, but that was all. Delaney stared at me with tears running down her face. I shook my head then pointed to the work bench. \"We don't need them anyway. Bring your wrench, and grab another open-end off that bench. Maybe 11/16ths or so.\"\n\nShe came back with them and I quietly showed her how to slip one jaw of each wrench through the shackle of the lock and use them against each other to leverage the lock open. The woman inside shrunk away from me when I opened the door. I backed off. \"You open the others and get them out.\"\n\nDelaney forced herself forward, face almost green. While they flinched from me, they had no problems with her and came out quickly and quietly as she popped the other two locks. \n\n\"Get them to the car. If I don't show up in thirty minutes, or if you hear a bunch of noise or shooting, you get back to Sheree's. If I don't call by morning, call the police.\"\n\nHer eyes were hard-bright and the tears had stopped as she looked over the burn marks and whip scars on the women. She stared back at the house for a long second. \"Fuck them.\" She wasn't green anymore; her face was a mask of ice-white rage.\n\nI nodded slowly. \"Yeah. Fuck them.\" \n\nWe both knew what that meant: what was going to happen now.\n\nAfter they slipped out, I looked around. I couldn't stop myself from smiling when I saw the wheeled rack of green k-bottles, the tall gas cylinders used in welding. I'm sure it was more like bared teeth than a real smile, but it was close enough.\n\nQuietly moving the k-bottles over to side of the house took several minutes, and through it all, I could hear the assholes joking and laughing about the game. With all the noise they didn't have a chance of hearing the hissing of the oxy bottles emptying, one after another into the enclosed crawlspace under the house. Bags of shop rags and old clothing from the welding shop back room went in as well, but I left the tiny access door open. \n\nI slipped around the house, checking the bedroom, but it was empty. Only the NCWB assholes were in the house, and from what I could hear, I was sure all of them knew what had been happening in the welding shop.\n\nI opened a couple more k-bottles of oxy and two of acetylene in the shop, stepping over the still twitching body of the fuckhead on the floor on my way out. \n\nThe hardest part was quietly sliding one of the couches to block the front storm door. It wasn't perfect, but I was pretty sure it wouldn't have to hold very long. \n\nI tilted the barbeque grill on its side and watched for a second as the coals spilled out. The overgrown yard caught almost instantly from the smoldering charcoal, racing towards the house with insane speed. The orange flames flared nearly white as they found the oxygen streaming from the crawlspace, leaping after it hungrily along the dry grass. There was an audible \"thump\" as flames shot out from the foundation on every side of the house at once.\n\nThe oxygen had seeped up into the house through the floorboards, flooding the floor of the house. Oxygen by itself isn't terribly dangerous; it doesn't burn or explode on its own. If you enrich the atmosphere even a couple percentage points with it, though, things change. Fire, in that kind of atmosphere, moves like a living thing, something huge, ravenous and unstoppable. Old wooden flooring, foam in furniture, clothing, hair, all become nearly explosively flammable. Overstuffed easy chairs burn nightmarishly fast and hot, even without the added oxygen. With it, they became instant incinerators for anything near them.\n\nPanicked shouts erupted from the house, rapidly turning to screams as I jogged up the hill. I paused to glance back, but nobody even reached the front door before the old wooden house was a towering pyre of living flame. \n\nOne window broke out, and a blackened hand reached out for a second, but that was all. I'd nearly reached the road when the flames reached the workshop.\n\nOxygen isn't explosive. \n\nAcetylene mixed with oxygen in an enclosed space is.\n\nThe concussion of the explosion knocked me forward and I rolled, ears ringing, to my feet. Through the forty-foot flames, I could see that what had been a house was an enormous crumpled bonfire. It looked like all that was left of the workshop was a blasted cracked foundation.\n\nA few seconds later, Sally pulled around the bend and slid to a smooth stop in front of me. Delaney hopped out of the driver's seat. \"I figured that had to mean you were done. Jesus.\" She stared down into the inferno. \"None of those fuckwads could live through that, could they?\"\n\nThe three women, huddled under a blanket in the back seat kept looking between me and the fire, caught between fear and hope. \"I don't think so. Let's un-ass this place before the cops show up.\"\n\nDelaney watched for a second longer, then gave a tight, grim smile. \"Fuck them.\"\n\nWe were nearly five miles down the road before the first police car blazed past us.\n\nI let several miles pass in silence. \"You have to start listening to me Delaney. You aren't trained for this shit.\"\n\nShe never took her eyes off the road. \"I know. I just...\" Her eyes squeezed shut for second. \"Pretending it was some kind of game and sneaking around was easier than waiting.\" I could see her suppress tears. \"I'm sorry.\"\n\n\"It's alright, just listen next time.\" I glanced in the mirror and looked at our charges huddled in the back. \"You did good, anyway.\"\n\nShe turned in her seat and looked at them. \"We did good, didn't we? Like real hero shit.\"\n\n\"I'm no hero, Delaney.\"\n\n\"Whatever you are, I want to be like you.\"\n\n\"A fucked-up drug-addicted junk-yard owner?\"\n\n\"You forgot 'with serious anger issues.' Besides you don't use drugs anymore.\"\n\n\"Doesn't mean I'm not an addict; that just means I've got control for now.\"\n\n\"Whatever. You rescue people. I want to do that.\"\n\n\"Tara's a lawyer or...\"\n\n\"No. I want to do it your way. You don't just talk about shit.\" I could hear it in her voice; she meant it. \"I'd never get though all the schools, anyway.\"\n\nThat was true. Delaney had all the will and drive in the world, but there's no cure for dyslexia, and that would stop any traditional route to success. College and the military were out, but there were other ways.\n\n\"Maybe, if you prove you can listen, maybe you can go to Texas.\"\n\n\"Where we send all those beater cars?\"\n\n\"Those cars are for a driving course for bodyguard training. It's called a 'crash-bang' course.\"\n\nDelaney's eyes shot open and she stared at me. \"Really?\"\n\n\"A friend of mine, Kurt, and his wife own a security company down there and they owe me some favors. But I have to talk to them first. He may say you have to wait a while.\"\n\nShe sat back. \"Like driving and shooting?\"\n\n\"And first aid and a bunch of other stuff, but only when you're ready. You have to prove you're ready.\" \n\nShe grinned up at me. \"That'd be so cool.\"\n\n\"It's more work than you think, but I think you can do it. As much of a pain in the ass as you are, I know you work hard.\"\n\nShe sat silently for almost a half-hour before I handed her my cell phone. \"Call Sheree and apologize.\"\n\n*****\n\nSheree was definitely not delighted that Delaney had stowed away, and her disappointment was far more devastating to Delaney than anything I could have done. Delaney was downcast for the rest of the drive despite the idea of Texas.\n\nAs we pulled up, Sheree walked out of the shadows to the side of the house, with her shotgun in her hand.\n\n\"Had to make sure it was you.\" She frowned a little. \"Delaney, you're gonna have to fix that screen to your bedroom. And if you're anything like Shelley, we may have to put bars up there.\"\n\nI pointed wordlessly to the back seat where the three women seemed reluctant to get out. \"They need help.\"\n\nSheree shoved the shotgun into my hand and began helping Delaney with them. \"Sweet Jesus. What in God's name happened?\"\n\n\"Delaney found them.\"\n\nI let Delaney tell her story, peppered with profuse apologies to Sheree for her stunt. By the time she was done, it was pretty clear that Sheree was giving her a one-time pass on her antics.\n\nThe women were still leery, but Sheree and Delaney managed to convince them of our good intentions, or at least theirs. They were still, obviously, terrified of me. \n\nSheree gave them some of her sleeping shirts while Delaney dealt with it in a remarkably thirteen-year-old, but remarkably effective way. She made mugs of hot chocolate and got out boxes of cookies.\n\nNothing I could do was going to be as effective in convincing them of good intentions as hot chocolate and cookies.\n\nSheree watched the three of them for a second. \"They're in bad shape, they need a doctor to look them over.\"\n\nI shook my head. \"I don't think they'd do well if I tried to examine them right now.\"\n\nDelaney stopped and picked up Sheree's cell phone. \"Tiffany could help.\"\n\n\"You have her number?\"\n\nShe nodded and dialed. \"Tiffany? You said you wanted to make things right?\"\n\nAfter a couple minutes of discussion she offered the phone to Sheree. \"Can you give her directions here?\"\n\nSheree gave Delaney a smile then took the phone. She laid out the directions carefully. After she hung up she looked at us. \"Tiffany will be here in about a half hour if she doesn't get lost on the way.\"\n\nIt was closer to 45 minutes before a small SUV picked its way down the lane and two not-quite identical figures got out. \n\nI opened the door to Tiffany and Tara standing next to each other. Tiffany shifted her medical bag and took a deep breath. \"Delaney said it was important, and since Tara is her sister, too, I thought, maybe I should bring her.\"\n\nThe awkwardness that seemed to be around whenever we talked was obviously still there. Even though they knew I hadn't done the shit Charlotte had accused me of, a decade and more of constant belief is damn hard to get past. I sure as fuck didn't like it, but they were trying hard and that was all anyone could ask. I waved them in. \"We found three kidnap victims and they've been abused pretty badly. Nothing life threatening from what I can see, but they need checked.\"\n\nTiffany arrowed on them instantly; all at once she was the emergency room doctor my little toy-stethoscope-wearing moppet had turned into. The women shrank back towards Sheree.\n\nTiffany jolted to a stop in shock. I reached over and touched her shoulder. \"Wait, Tiffany. Put your stethoscope on, that way they know what's going on. They'll know you're a doctor.\"\n\nShe paused and pulled her stethoscope out of her bag. The tension drained from them and they followed her into the bedroom. Tara looked over at me and I shrugged. \"Do a few hundred MEDCAPS, you pick up a few tricks.\"\n\n\"MEDCAPS?\" Delaney shook her head in confusion.\n\n\"Medical Civilian Action Programs. Kind of a free clinic in unstable areas to gain the trust of locals; standard Special Forces program.\"\n\nTara stared at the door to the bedroom where Tiffany was examining the women. \"Where did they come from?\" \n\n\"I'd guess South or maybe Central America. None of them speak English and we didn't exactly have a chance to have a discussion with the assholes that did this.\"\n\nTiffany stalked out of the bedroom, fury etched starkly on her face. \"If we get a chance to talk them, I want in. I spent a lot of time and effort learning about the human nervous system and I'd like to see how much of it I can find on one of those... animals.\"\n\nI shook my head. \"That's not an option.\"\n\n\"They got away?\"\n\n\"They're not going anywhere.\"\n\nTiffany looked at me with dawning suspicion. \"What did you do?\"\n\nI shrugged. \"I wasn't going to leave them to do this again.\"\n\nDelaney stood up and locked eyes with her half-sister. \"They were going to do that to me. When I ran away and Mom wouldn't call the police, those fuckers had me.\" Her eyes glassed over. \"That would have been me. Except for him. They deserved everything they fucking got.\"\n\nTiffany looked at her in disbelief, but I could see Tara nod slowly and she turned toward me. \"How?\"\n\n\"There was a very large, uncontrolled house-fire sparked by poor equipment storage.\"\n\nTiffany still had a hard time getting it. \"Did you kill someone?\"\n\nI didn't answer. Delaney stepped over and grabbed my arm, looking silently at the two of them.\n\nTara spoke quietly. \"How many?\"\n\n\"Fourteen. This time.\"\n\n\"This time?\"\n\nDelaney stepped towards her, chin thrust out. \"Did you think they just let him quietly pick me up when he got me away from them? Fuck them.\" \n\nI sighed. \"Another eight, that time.\" Sheree came up on my other side and slid her hand into mine, almost daring them to say something. \n\nTiffany stared at her toes. \"Jesus.\"\n\n\"We sure as hell can't bring the police into this.\" Tara was switching into lawyer mode. \"Any witnesses?\"\n\n\"Just the girls back there.\"\n\nTara glanced at the door to the other room. \"We need to know more about them.\" She got up and walked into the bedroom.\n\nTiffany studied me as if she'd suddenly found a rattlesnake in front of her. \"Twenty-two people. Jesus.\" She suddenly fixated. \"Why didn't you call the police instead of...doing that?\"\n\n\"Your... mother wouldn't let me get the police involved the first time. If I called this time, they'd connect it to the first time, and this time is different. We didn't just stumble across this on a picnic. They came looking for Delaney.\"\n\nShe sat heavily on the couch. \"Still... I became a doctor because of what you taught me. All the people you helped\"\n\n\"I'm not like you, Tiffany. You believe in it, you believe in 'primum non nocere.' It's what you are, I can tell. But that's not me.\"\n\nShe looked to the bedroom, fighting to get her head around it. \"First Do No Harm. But... somebody had to do something, right?\"\n\nI tried to think of something to say. She was trying, she really was.\n\nSheree walked over to her and sat next to her, taking her hand gently. \"Sometimes people have to do hard things 'cause doing nothing is worse. That's for people like Les. All you have to do is help these girls. Nobody's askin' you to do nothing else.\"\n\nTiffany looked all of nine years old for moment, confused and a little scared. \"I know, I mean I understand, but...\" Her voice trailed off and she let her head hang in misery. \n\n\"You're trying figure your way through this. You been taught you can talk to people, solve problems that way.\" Sheree shook her head slowly. \"But some people, you can't do that with them. Some people, you see them, you just need to pick up a big rock. That's for Les to do. You let him do that, you do what you can do.\" \n\nTiffany looked at her hands. \"A woman I went to school with runs a group to help victims of sex trafficking. They won't ask any questions and they can help. Get them treatment, get them home or whatever.\"\n\nTara walked back out. \"Two from El Salvador and one from Honduras. I don't think we have to worry about them telling the police anything. Emely, the oldest one, said as far as they're concerned they won't be able to remember anything about how they got away.\"\n\n\"You speak Spanish?\"\n\n\"They kind of require a language in college, and I did a year with our office in Colombia.\"\n\nIt took Tiffany a half hour to get in touch with the right woman and make arrangements. Sadly, it was apparent that situations like this weren't uncommon. They pretty much had a \"normal routine\" for what they called \"no questions asked\" rescues. They also had safe houses all over the place and gave directions to Tiffany. Tara explained it to the women, promising that she and Tiffany were going to take them somewhere safe. \n\nAfter they pulled away with their three charges, we sat back down. Sheree looked out the window. \"You know this ain't finished.\"\n\n\"I know. There's more to this shit. We'll have to wait a bit, though.\"\n\nDelaney stared into her hot chocolate. \"How long?\"\n\n\"About three more weeks, then the asshole who came looking for you gets out of jail.\"\n\n\"I'm helping this time.\" Delaney looked at Sheree. \"I'm really sorry about slipping out, but I couldn't stay. This is about me, I have to do something.\"\n\nSheree nodded towards me. \"That's up to Les.\"\n\n\"I'll have to think about it. This isn't a game.\"\n\nDelaney looked between me and Sheree. \"I'll listen. I promise. You let me help and I'll do exactly what you say.\"\n\nLater that night, after when Sheree and I got in bed, she laid her head on my shoulder. \"Les. I know you have to do this, or I feel like they'll jest keep comin' and comin' til you make a mistake, but...\" She went silent. \"She's thirteen, ya know? She's the toughest little thirteen-year-old I've ever met, but...she's thirteen.\"\n\n\"We could put her somewhere. Lock her up 'til it's over. Maybe the Sheriff.\"\n\n\"She'd hate us forever. You know she would. She's like you, Les. More'n your own girls, I think. She wants to be like you, but she already is. I know she's yours, not mine, but you just have to promise me you'll bring her back. Promise me she'll be okay.\" \n\nI ran my fingers through her hair. \"She needs you as much as I do. We're both coming back to you in one piece. I promise.\" ",
        "***\n\nI'd planned on following his car, but Sheree had a better idea. \"Why follow him? Didn't you say Delaney's mother put some kind of GPS thing in her phone? Don't they sell things like that?\"\n\n\"Okay. I probably shoulda thought of that. Shit. You're good at this.\"\n\nSheree grinned. \"I saw Shelley's ankle bracelet this morning. They're monitoring her again. Made me think of that GPS thing.\" \n\nIt cost four hundred dollars, but it made things a lot easier. Delaney easily slipped into the impound lot and put it on his SUV. \n\nIt even came with a tracking app that could alert me when the SUV moved.\n\nI also bought a surveillance system for the trailer at the yard. I really couldn't see us moving back there, and if Ronnie Pelton or his jackass friends got any ideas about stealing from me again, I wanted them on video. \n\nOver the weeks, I felt more and more like we belonged in the cabin; it just fit us. I managed to get a couple of solar panels put up to keep our cells phones charged up until the co-op could run lines out the place, and Delaney just did her school work at the trailer. I had to run the slow cooker at the trailer and just bring it to the cabin with us, but that was fine. We didn't miss electricity that much; we could wait for the lines to get to us. Movie Night had never actually been about the movies anyway.\n\nThe day the SUV finally moved, I rounded up Delaney and gave Sheree a call. She was working late shift again, due to the usual Shelley-induced schedule changes. I watched Delaney dash back into the garage where she kept her project car for a backpack while I talked to Sheree.\n\n\"We'll be home before you are, Babe.\"\n\n\"You take of her, Les.\" We'd talked it over for weeks. Sheree felt Delaney needed to be part of this, needed to feel like she could do something. She was nervous for her, but Sheree's faith in me was way stronger than I thought it should be.\n\nDelaney was remarkably calm, all things considered. \"So what's the plan?\"\n\n\"We're going to do a B&B.\"\n\n\"Okaaaayyyy... what the fuck is that?\"\n\nI started laughing. \"It's a home invasion technique; it stands for 'bait and bitch'.\"\n\n\"I must be the bait, but my mother isn't here, so I guess you're...\"\n\n\"Shut up.\"\n\nTwo hours later, Delany rang the doorbell of a skeezy apartment.\n\nAsshole opened the door and stared at her in shock.\n\nDelaney smirked. \"You lookin' for me?\"\n\n\"What are you, Di Niro all of a sudden?\" While he stood frozen, I stepped up from the side and leveled the .45. I shook my head at the Asshole. \"I have got to start her on some different movies, you know?\" I nodded towards Delaney. \"Besides, it's 'You talkin' to me?'\"\n\nHe held very still, looking from her to the .45 pointed at his head.\n\nWe had him tied into a chair in just a couple minutes.\n\nHe glared at us. \"This is bullshit. You're gonna try some \"good cop, bad cop\" shit. Ain't gonna fucking work. Hell, she's a fucking kid.\"\n\nI gestured helplessly. \"Work with what you got, you know? But teenage girls don't have much in the way of empathy, and she knows exactly what you fuckheads were planning on doing to her, so...\"\n\nDelaney looked dead at him. \"You think it was an accident, shithead? An accident that the fucking welding shop and house outside Durham burned down? With everybody in them?\" She threw the paper on the table in front of him. The article headline \"Fourteen Dead in House Fire\" blared out him. \n\nHe looked over it disbelievingly. \n\n\"You notice anything missing, Asshole? Like the three girls you fuckers kept in cages?\"\n\nI could see him realize what Delaney meant.\n\nI kicked his leg to get his attention. \"We have a few questions we want answered.\"\n\n\"Wait.\" Delaney rummaged through her backpack. \"I have... lineman's pliers. A propane torch... this...\" She pulled a bizarre kludge of auto parts wired to a short plank and put it on the table. \n\n\"What the hell is that?\"\n\nShe twisted her mouth doubtfully. \"An electrical shock thingy. If it works. I took an alternator and...\"\n\n\"Where the fuck did you learn how to do that?\"\n\n\"You have a book with a brown cover in Sally's garage.\"\n\n\"Jesus. That's a Spetsnatz field interrogation manual. It's in Russian. You don't even read English very well.\"\n\n\"I said 'if it works.' Shit. There were a lot of pictures. They had a littler battery on theirs, though.\"\n\nI shrugged. \"I guess we'll find out.\" \n\nThe Asshole stared at me from the chair. \"Look I know you're not gonna...\" He was cut off by his own scream as Delaney jammed her electric nightmare into the side of his head with a sharp crackling sound.\n\nI shoved her back. \"Jesus, Delaney.\"\n\nShe thrust her chin out defiantly, eyes flashing, ready for an argument. \n\nHe turned to look at her disbelievingly and I could see a scorch mark on his scalp. \"You bitch...\" \n\nI cuffed him hard across the back of the head. \"Shut the fuck up.\" I shook my head at Delaney. \"Not in the head. You'll scramble whatever Asswipe uses instead of brains and he won't be able to answer any questions. Kidneys, liver, arms, legs, testicles, the sciatic nerve, maybe the soles of his feet, just not his head. He has to be able to talk.\"\n\n\"Oh. Sorry. I didn't think of that. At least we know it works, though.\"\n\nI shrugged at the Asshole. \"See, no empathy at all.\"\n\nDelaney studied him like she was looking at a bug. \"Where's this, sy... sy... the nerve thingy?\"\n\n\"The back of his thigh, it's kinda hard to get to, but we can...\"\n\n\"Wait! Jesus. You're fucking crazy!\"\n\nI backhanded him hard. \"Watch your fucking language, Asshole, there's a kid here.\"\n\nHe shook his head to clear it. \"What do you want?\"\n\n\"Why are you coming after Delaney?\"\n\n\"I don't know, Manny set it up. We were supposed to just kill her and dump her, but Manny had a... a customer who wanted a girl like her. Really young. He likes them fresh but broken in and scared. I never met him or heard his name but he wanted them messed up; the more terrified, the better. We've done it before, but this time I was just supposed to cap her ass and get gone.\"\n\nDelaney lunged and drove her prod into his side. Maybe I let that happen that time. I waved her back.\n\n\"Who the fuck is Manny?\"\n\n\"Manuel Ortiz.\" He caught his breath and nodded toward the newspaper. \"Third from the top on the second column of pictures.\"\n\n\"Shit. And you don't know anything? Like who or why?\"\n\nHe shook his head.\n\n\"Fuck it then. He's all yours Delaney.\"\n\nHe looked up in panic. \"Whoa, whoa, whoa. Wait goddammit! I was supposed to call a number and tell them when it was done so we could get the other half of the money.\"\n\n\"Not Manny?\"\n\n\"No, just some guy.\"\n\n\"Okay, here's the deal then. You call and set up a meeting. Tell him you got the girl, but Manny is dead and you want the other half of the money.\" \n\n\"What if he won't meet?\"\n\n\"Then I step out to get lunch for an hour and leave you with a girl your crew tried to rape, torture and murder. I have no fucking idea what she'll do, but I'm betting you won't enjoy it. I'd be really fucking convincing if I were you.\"\n\nI untied one hand and let him use his phone. \n\nThe conversation was very short, and the guy on the other end agreed to meet him without any argument in one of the smaller, less frequented state parks in a few hours.\n\nAsshole didn't seem to realize what a bad sign that was and I didn't bother explaining that he might have been better off taking his chances with Delaney. Might.\n\nI ordered pizza while we waited; Delaney looked at me like I was crazy when I asked what type he liked and got him one of his own.\n\nAfter we got to the park, I took his phone and put it in the inside chest pocket of his jacket with an unopened Allen wrench box.\n\nI let him out of the trunk and held the .45 on him. \"Put the jacket on and zip it up.\"\n\nHe eyed me suspiciously while he did it. \"What now?\"\n\n\"Here's the deal. Feel that thing in your jacket pocket? There's not much explosive in that thing, but more than enough to kill you. You give us any trouble and one of us will push the button. Try to run, try to take off the jacket, try to talk to a cop. Boom. We will be watching.\"\n\nWe watched with binoculars from an overlook while he waited near the trail. Joggers went past him infrequently, but it was quiet for a long while. I'm sure most of the joggers who went by him were convinced he was there for a drug deal, but that's hardly rare in the parks anymore. \n\nI finally saw what I was looking for. A jogger who'd come by earlier passed him from behind.\n\nWe heard the flat snap of the small handgun as Asshole crumpled to the ground. \n\n\"Let's go, we need to follow him from the parking lot.\"\n\nDelaney moved sluggishly to her feet, almost in shock. \"No. We don't. That was Dave something or other. He worked on my Dad's campaign. He still works for him.\"\n\nI stopped. I knew she was thinking the same thing I was. \"Let's get back to the cabin then.\"\n\nShe dragged down to the parking lot, head down, listless and dragging her feet. \n\nAs we pulled out, she looked up. \"You knew he'd be killed, didn't you? That's why you let him have the kind of pizza he wanted. That 'last meal' thing.\"\n\n\"I thought it might happen, it was too easy to set up the meeting.\"\n\n\"Fuck him. He deserved it.\" I could hear a little of her spirit coming back.\n\n\"He deserved a lot worse.\" \n\nA quick, painless death was better than the Asshole should have had after what he'd done, but nobody ever said life was supposed to be fair. That wasn't what Delaney was brooding over as she sat quietly for the whole two hours back to the cabin. \n\nWhen we got back to the cabin, she went to her room wordlessly, and I just waited for Sheree to get back from work. As Sheree came in, she started to ask what had happened but I shook my head and silently mouthed, \"Later.\" \n\nWhen she heard Sheree arrive, Delaney trudged out in pajamas, red-eyed and sniffing, dragging her blanket and a pillow. \"I know it isn't Friday, but... can we have a Movie Night tonight?\" \n\nSheree took one look and nodded. \"Get a fire started, Les. I'm getting my pajamas on and grabbin' a blanket.\"\n\nAfter Delaney had finally fallen asleep on the couch next to us, I explained to Sheree what had happened. \n\nSheree pushed a little hair out of Delaney's face. \"This isn't going to stop, is it?\"\n\n\"Not if I'm right. Not until I make it stop. I've got some guesses but I'm not sure exactly why. I'm damn sure going to find out.\"\n\nShe watched Delaney sleep for a minute. \"The cops won't be any help, not on this. They might sort it out after, but that'd be too late for her.\"\n\nI kissed the top of Sheree's head. \"She needs to stay here with you this time. You were right she had to have a chance to really fight back, it's in her nature. She needed that. But this part... this part isn't for her to do. This is my job.\"\n\n\"I think she knows that. This is the first time I've ever seen her like this.\"\n\nI nodded, running my fingers through Sheree's hair. \n\nWe just sat for a while. Sheree studied Delaney's sleeping face, then looked up at me with a steady gaze. \"You do what you gotta do, Les. Nobody comes after our little girl.\"\n\n***** \n\nIt wasn't hard to find him at all.\n\nThe office building Dave Cunningham worked in had security guards, cameras and too many people to count going in and out at all hours.\n\nHis sleek new apartment building had a great view, very nice amenities, like a weight room, a pool and a sauna. What it didn't have was good security or very many tenants, yet. \n\nI gave Dave a couple days to relax, then grabbed a clipboard, some plain blue coveralls and a jacket.\n\nI knocked on his thirtieth-floor apartment door.\n\n\"Yeah, what is it?\"\n\nI looked at my clipboard. \"David, um, Cunningham?\"\n\n\"Yes.\"\n\nI'm with Mark's Glass, gotta see if we have to replace one of your windows.\"\n\n\"It's a brand-new building.\n\n\"Yeah, well, code says one window has to be tempered glass. The code required tempered or laminate glass for floor to ceiling windows like yours. Builder screwed it up all over the place, used only laminate. We're just going to swap some of them out. Safety requirements, you know?\"\n\nDave looked back at his windows. \"Safety?\"\n\n\"Yeah, Laminate is really hard for fire fighters to break out, so the tempered glass is used to allow them entry. They have special hammers or something with hard ceramic tips. Metal hammers don't do so well on tempered glass; the ceramic ones shatter it right out.\"\n\nI pulled my sunglasses out of my pocket and held them up, then rotated them sideways until black bars appeared on the widow to the right. \"See those lines? Temper marks, you can see them with polarized glass. I just need to get the specs on that window and I'll be out of your hair.\"\n\nHe stepped back and let me in. \"I didn't know that.\"\n\n\"Yeah, nobody does. Teenagers figured out the ceramic thing, though. Break the ceramic off spark plugs to bust out the side windows on cars. Call 'em ninja rocks. Some kind of physics thing.\"\n\nHe blinked. \"That's actually kind of interesting.\"\n\n\"Yeah, it is, isn't it? Let me show you something really cool.\" I pulled the .45 out of my jacket and leveled it at him. He gawped in shock. \"Hands where I can see them, Jackass. Keep quiet.\"\n\nI sat him down at his desk. \"You and I are going to have long talk about why the fuck you're trying to have Delaney killed.\"\n\nHe wasn't particularly brave. I promised him if he cooperated I wouldn't hold him for the police. He just wanted a head start to get away. Dave Cunningham explained everything. Little of it was surprising or particularly original.\n\nI had him take thorough notes on his computer.\n\nAfter we were done, I felt the ceramic shards in my pocket. \"Let me show you a cool trick, Dave.\"\n\n*****\n\nState Senator Charles Morris stormed in, flicked his desk lamp on and threw his briefcase down in obvious annoyance at a really long day. I let him sit down at his desk and waited while he arranged the few things on it \"just so.\"\n\n\"Having a bad day, Chuck?\" \n\nHe face went pale as soon as he saw me sitting in the wingback chair in the corner of his office. He yanked the top drawer open instantly and I could hear his manicured fingernails scrabble against bare wood. \n\n\"It's not there.\" I held the handgun up. \"Springfield XD-S. In .45. Not a bad little gun.\" I pulled the magazine and cleared it. \"You really should keep a round in the chute if you plan to use in for self-defense in the office. Don't worry, I'll give it back. I promise.\"\n\n\"What do you want, Lester?\"\n\n\"We need to talk, Chuck.\" I leaned back. \"This is really kind of fucked up. I mean, you took my wife and my daughters, but we've never even been in the same room at the same time. Until now.\"\n\nI could see him decide to play it cool. \"What could we have to talk about? Charlotte dropped you and moved up, your kids dropped you and moved up.\" \n\n\"I don't know, 'up' is kind of relative.\" I studied him, watching tiny beads of sweat form on his upper lip. \"You're gonna hate prison, Chucky.\" As he recoiled from the thought, I drove on. \"Soft hands, soft mouth, soft, well, probably everything. They're gonna fuckin' love you there. I'll bet you're gonna be wearing a mop-head wig and Kool-Aid make-up in a week. You'll be awful pretty. I hear they like to knock all the teeth out of the pretty ones so they can't bite down.\"\n\nHe turned a bit green and started to reach for the phone. \"I...\"\n\n\"Don't bother. Cops are already on the way. Dave is dead. Poor man couldn't handle the guilt. Did a thirty-story dive out his apartment window. Looked like a fucking full-gainer to me, but I never really watched the Olympics much. Except for women's beach volleyball.\" I shrugged. \"Who wouldn't watch that? Dave hit that rain grate walkway outside his building. The one women keep catching their high heels in? Looked like he went through a food processor. Morgue team probably had to use a sponge-mop to pick him up.\" \n\nI could see him calculating and a hint of a smile signaled that he'd reached an obvious conclusion. \"Too bad. He must have been up to no good.\"\n\n\"Oh, he was. He thought that maybe if Delaney died at the hands of a fucking gang in a failed kidnapping, you'd get a massive surge in sympathy votes. The election would be a walk-over.\" I thumbed rounds out of magazine and dropped them in my shirt pocket; there were little metallic clinking noises each time I dropped a bullet in. \"The gang just thought they could find a way to make money off of her instead. Getting paid twice for the same shit. That's the problem with amateurs, no focus, ya know? It all went wrong when Charlotte put a tracker in her phone and sent me after her. But her death could still be milked for political capital, so he pushed the gang to finish the job. They'd already taken half the money, anyway.\"\n\nCharles stared at me evenly. \"If he's dead, then that's that, isn't it, Lester? It's over.\"\n\n\"You'd think so, wouldn't you? But Dave sent an email just before he jumped. To you, talking about how murdering Delaney was a bad idea and that both of you were wrong about it. He went on and on about how guilty he felt about it. How you'd come up with the idea when you learned he had a friend who was a gang member. That might not have been so bad, but he accidently sent it to Tara, too. Same last name, it's an easy mistake.\" I held the last bullet up and studied it.\n\n\"You son of a bitch. You sent that email.\"\n\nI shrugged. \"Doesn't really matter, does it? They'll look into it and everything, and I mean every-fucking-thing, will come out.\" I put that last bullet back in the magazine. \"What I don't understand is how you can just fucking decide to kill her.\"\n\nHis eyes reflected nothing but hate. \"She isn't mine, I had a vasectomy. Charlotte and I 'entertained' a lot with the Senior Partners, and she ended up pregnant.\"\n\n\"Dave told me. He talked a lot before he jumped. Had a lot to get off his chest. Nice little firm you've got there, Shitweasel. And you brought Tara into it? I ought to fucking kill you just for that.\"\n\nHe held his hands up defensively. \"Nothing like that has happened with her, she isn't senior enough yet.\"\n\n\"You mean that your little crew of fucksticks aren't sure Tara wouldn't lodge a complaint or sue the firm yet.\" I shook my head. \"I can eat fuckin' roadkill, but breathing the same air with you turns my stomach. I know why you convinced Charlotte not to abort Delaney. I think Dave called it 'optics.' Nice happy family pictures make you more electable. Only she wasn't the daughter you needed, was she?\"\n\n\"She was embarrassing. Stupid, undisciplined. She spent more time in suspension than in school. She was a goddamn nightmare. She's no daughter of mine.\"\n\nI felt rage boil up. \"You really think it's all about blood and who donated sperm? But you're fuckin' right about that, after all. She isn't your daughter. She's mine now.\"\n\nI tossed the empty gun down on the desk in front of him and held the magazine up. \"One bullet, Chuck. That's what I'm offering you. One. Fucking. Bullet. The police are probably on their way here already. Once they get here, it's all over. You can't run. Tara's here and she knows everything, right down to how you promised a couple senior partners you'd pave the way for her to 'entertain' them. She's already with Charlotte. By now, they have your money locked down so fucking tight you'll have to blow a drunk for a quarter to make a phone call.\"\n\nHe looked down the hall with dawning horror. \n\nI grinned and leaned over him. \"So here's your fucking choice, you piece of shit. Shoot me in the back when I walk out and spend the rest of your life warming some giant Aryan Nation lifer motherfucker's bed until you die of AIDS. Or, maybe whatever is left of the NCWB catches up to you first. Your shit got a fuckload of them killed. I'm pretty sure I've taught them not to fuck with me, so they'll want to make an example of you. They'll do it real slow.\"",
        "I tapped the magazine on the desk. \"Or, you can do the right thing for once in your fucking life.\" \n\nWe stared at each other for a long moment, until a distant sound started to build. Sirens.\n\n\"Sounds like time's just 'bout up, Shitstain. I almost hope you shoot me. I'd die with a smile, happy knowin' what's gonna happen to your soft, pretty ass in prison.\"\n\nI let the magazine drop in front of him with a clatter and walked slowly out the door. I was halfway down the hall when I heard the single shot.\n\nThe door to the sitting room opened slowly, Charlotte framed in the doorway. \"I didn't know, Les.\"\n\n\"Didn't know or didn't want to know, Charli? You had to realize something was up.\" \n\nShe dropped her gaze to the floor and stood silent until Tara pulled her back to let me through. Tara had her lawyer face on. \"You need to leave before they get here... Dad.\" At that last word, a sad, hesitant smile crossed her face, but it was gone in an instant. Charlotte noticed, and she closed her eyes for a second as I walked out. \n\n***\n\nOne month later \n\n***\n\nThe Sheriff stared at me. \"Are we doing this the easy way or the hard way?\"\n\n\"What's the easy way?\"\n\n\"Get in the car and we drive over.\"\n\n\"What's the hard way?\"\n\nHe held up his radio mike. \"I call for back up. We Taser your ass, handcuff you. You end up in the car anyway.\"\n\nI sighed, put the wrench down, and walked over. \n\nWe drove in silence for a couple minutes before he asked.\n\n\"Is this over, Needles?\"\n\n\"Is what over?\"\n\n\"I can read the papers, asshole.\"\n\n\"Still looking for the centerfold in the Wall Street Journal?\"\n\n\"A house full of gang members blows up. A gang member we just released gets shot in a park in North Carolina. Guys high-diving out of windows, and politicians trying to suck-start handguns. But it's been quiet for over a month. Just tell me it's over.\"\n\nDamn, he was good at putting shit together. \"I didn't fucking start it.\" \n\n\"I know.\" He rubbed his forehead. \"Jesus. Somebody needs to slap a warning label on your ass. 'Do Not Touch, High Explosive.'\"\n\n\"As far as I know, it's fucking over.\"\n\n\"As far as you know?\"\n\nI shrugged. \"I think everybody involved is dead. Except my bitch ex-wife, and I don't know how much she knew.\"\n\nHe pulled up in front of the steak house. \"Let's go. Or do I need to call back up.\"\n\nAs soon as we walked in, I seriously considered that I'd hit my head on something. I didn't even recognize Delaney, at first. She was wearing a black dress, looking uncertain and nervous.\n\nThe fucking \"Happy Birthday\" banner over the table was excruciatingly cheerful. \n\nSheree was sitting with a smug smile. She'd warned me I was having a birthday party whether I wanted one or not. I just didn't expect her to play quite that fucking dirty. At least she was wearing a pretty low-cut blouse as an unspoken apology for being so under-handed. Women.\n\nStill, the steak was great and she'd even managed to get Tiffany and Tara there. \n\nAfter we ate the cake, Delaney stood up nervously. \"I got you a present. Sort of. It's kind of ratty and a little fucked up. Nobody else seems to want it, but I thought, maybe, you could figure out what to do with it.\"\n\nI eyed her suspiciously she handed me a flat package with shaking hands.\n\nI carefully opened it to find a stack of papers, the top one labeled \"Petition for Adoption.\" I carefully paged through it and saw Charlotte's signature agreeing to the adoption already in place.\n\nDelaney was pale as a ghost when I looked up. \"This is pretty much the perfect gift. It's exactly what I've always wanted.\"\n\nShe rushed forward, latched on to me and started bawling into my shirt. I looked around, Sheree was crying, Tiffany was crying, even Tara, steely-eyed lawyer that she was, had glassy eyes.\n\nIt took Delaney a while to calm down, Sheree pulled chair between us and Delaney parked herself on it. She took a deep breath. \"It's part of a set though.\"\n\nTara handed me two more sheaves of paper, a bit of her lawyer face in place. Tiffany reached over and gripped her sister's hand. \"We know it's kind of late, but...\"\n\nI looked at the two sets of adult adoption papers. \"Is this legal?\"\n\nTara nodded. \"Special circumstances. It's a little unusual, but it is legal.\"\n\n\"I was just curious, I'd have taken them even it was completely illegal.\"\n\nTiffany gave a weak smile. \n\n*****\n\nI watched the embers of the fire, listening to the late winter wind against the cabin; Sheree shifted a little against me, tugged her blanket a little higher and put her arm back over Delaney. On the other end of the huge couch, Tiffany and Tara were out cold, lying against each other in a mound of blankets just like they had when they were five. \n\nI could just see an empty cookie tray, covered in piecrust crumbs and stacked with empty hot chocolate mugs on the kitchen counter. \n\nThey wouldn't be able to do it every Friday. Tiffany had a fianc\u00e9 and emergency-room shifts to deal with, and Tara's new job required a lot of travel, but for now everything was good. \n\nIt was Movie Night.\n\nPost Production Notes:  \n\nThanks again to everyone - writing these, is to some degree, easy. Making them readable is not. More thanks than I can express. The Missus is, of course, already figuring out pieces and parts the next adventure of Needles & Delaney. \n\nBoth the trick with the spark plug fragments and the polarized sunglasses to find the tempered glass are real. Next time you have a chance, rotate your polarized sunglasses and look at the side windows of your car. I don't recommend trying the spark plug fragment trick, it works quite well, but you'll have to figure out how to explain that to your car insurance company. Your windshield is likely laminated and won't work the same way, but you will create some nasty chips in it."
    ],
    "authorname": "Todd172",
    "tags": [
        "needles",
        "delaney",
        "the shack",
        "angry man",
        "salvage",
        "ncwb",
        "medic",
        "anger",
        "sheree"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-shack-an-unreasonable-man"
}