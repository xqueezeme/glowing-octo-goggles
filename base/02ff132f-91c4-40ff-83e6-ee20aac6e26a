{
    "title": "Secrets and Surrender",
    "pages": [
        "Thanks to LizHaze for beta reads and suggestions.\n\n****\n\nGoing to a new school for my last year of high school pretty much sucked. It was all the tribulation of switching schools, which was never great at the best of time, plus the knowledge that any friends or acquaintances I might happen to make would all be going off in different directions at the end of the year anyway.\n\nAdmittedly, it wasn't all bad. Not what I'd call good either, but not as terrible as it could possibly have been. Within a few months I'd somehow insinuated myself into a circle of people who at least tolerated my presence, and maybe occasionally enjoyed it. Toward the end of the year, a couple of them were practically friends. Not close friends, not like I used to have, but enough to keep loneliness at bay.\n\nThere was also a girl. Not a girl in the sense of being someone I really liked, or who was into me, or indeed who was even aware I existed. She was more an 'across the room' kind of crush. A 'we shared one class and worked together on an assignment that one time' kind of relationship. I wouldn't put money on her even remembering my name.\n\nFor my part, her name was one of the few things I knew. Kylie. I wasn't even sure about her last name.\n\nThere were a few small things other than that. I thought she was cute. Superficial of me, maybe, but it was true. I liked her outfits that always looked slightly more complicated than necessary for day to day life, and the way she did her makeup to echo that. She seemed to read a lot when not in class, and I even recognized a few of her books.\n\nAlso, maybe the main thing in a weird way, she seemed to be even lonelier than me. Which might not have been fair to either of us. I didn't know her well enough to judge, and I was technically doing alright as far as having people to hang out with at school. It made for an imaginary bond between us in my head, regardless of what the truth was. Two people who didn't quite belong.\n\nI watched Kylie from afar when I caught sight of her sometimes, not yet having made up my mind to do anything more than that. Apparently I wasn't quite as subtle about it as I thought. People in the group started to notice. Little jokes got made about it. I assumed it was playful teasing because I was crushing on a girl. Slowly, I began to suspect it was something else.\n\nI dared to bring it up one day at lunch. The group at our table was only about half the size it sometimes was, which made it a bit easier.\n\nMy question brought a brief silence, and I almost thought I'd fucked up even broaching the subject, but I still had no idea why.\n\n\"Has no one told you yet?\" Jess asked. She was across the table from me and looked at me rather intently as though searching for clues that I was making a joke of my own.\n\n\"Told me what?\" I asked.\n\n\"I really don't think Carter knows,\" Ben smirked from the end of the table. Probably one of the people I was least happy to be having the conversation with. He always smiled the widest at any little joke about Kylie. He made my lack of understanding that much worse. \"He still stares.\"\n\n\"Well can someone please tell the poor boy?\" Jess asked.\n\n\"Why don't you?\" Andrea retorted. \"S'not like you don't know as well as any of us.\"\n\nJess sighed. \"I just... it's not my place.\"\n\n\"As much yours as anybody's.\"\n\nThe bickering went on a bit. Rob, sitting beside me, nudged me with his elbow. I raised an eyebrow at him, tuning out the other voices.\n\n\"She's outside,\" he said. \"I saw her. Maybe just go talk to her, hm?\"\n\nHe had such a mixture of earnestness and amusement on his face that I honestly couldn't figure out what the right answer was.\n\n\"You think?\" I asked carefully.\n\n\"Why not? What's the worst that could happen?\"\n\n\"Until I figure out what you all keep going on about, I honestly don't know.\"\n\n\"It's... probably not as bad as you think. Well, depending on how you feel about certain things, I guess.\"\n\nI rolled my eyes. \"Way to not clear anything up at all.\"\n\n\"Just saying. Worst case, you probably get teased some.\"\n\n\"And that's already happening.\" I stood up, my mind momentarily settled. \"Might as well find out why, I guess.\"\n\n\"That's the spirit!\"\n\nI had to wander a bit to find Kylie. She was sitting on an old picnic table outside, perched on the top with her shoes on one of the benches. She was hunched over with a book in her hands, reading in the warm, late spring sun. She'd picked a spot with no one else in the immediate vicinity, which only made me more self-conscious about deliberately approaching her. I knew she saw me coming, but she didn't react even when I was right next to her.\n\n\"Uh, hey,\" I said.\n\n\"Hey.\"\n\n\"I'm, uh, Carter. We have history together? We--\"\n\n\"I know. I remember.\"\n\nThere was no venom in her terse words, but neither was there any warmth. There wasn't really anything.\n\nI cleared my throat uncomfortably. \"Can I sit?\"\n\n\"Maybe.\"\n\n\"Maybe?\"\n\nShe looked at me, finally. \"You're new, right?\"\n\n\"This year, yeah.\"\n\n\"Thought so. Don't remember you from before that.\"\n\n\"Is that a problem?\"\n\n\"Have people told you about me?\"\n\nI sighed heavily. \"I know there's something, 'cause people won't shut up about it, but damned if I know what.\"\n\n\"So you're curious,\" Kylie said, with a tone of some finality about it.\n\n\"Kinda. But, like, if you don't want to tell me, that's fine. No one else does either, so I'm kinda used to it.\"\n\n\"Isn't that what you came over for?\"\n\n\"Partly.\" I shifted uncomfortably. \"Partly I also just wanted to.\"\n\n\"Wanted to what?\"\n\n\"Introduce myself. Talk. I don't know. Something.\" I kicked at the ground miserably. \"I almost kinda made some friends, sort of, but that's not really what they are. Not like what I used to have.\"\n\n\"So you're lonely?\"\n\n\"Yeah.\"\n\n\"And you think I am too?\"\n\n\"Aren't you?\"\n\n\"Sure. Who isn't, underneath it all?\" Kylie inserted a bookmark and laid her book aside, taking a moment to study me properly. \"I'm not a good choice if you want to make friends.\"\n\n\"You're not?\"\n\n\"It'll just make everyone else pick on you. You don't need that.\"\n\n\"Everyone? But--\"\n\n\"Ok, ok. Not everyone. Enough of them, though.\"\n\nI thought of Ben's smug grin. \"I can see that.\" I shrugged. \"But they already pick on me for it, so whatever.\"\n\nKylie arched an eyebrow. \"Over me? Why?\"\n\nI looked away, anywhere but her for a moment, then bit the bullet. \"'Cause I think you're cute, I think.\"\n\nShe stared a moment, then broke out giggling.\n\n\"Yeah,\" I said, face getting warmer. \"Kinda like that.\"\n\n\"Sorry, it's not really funny.\" Kylie let out another little giggle. \"But honestly, you transfer to this school, and I'm the one you crush on? Some god has it in for you.\"\n\n\"You know I don't know what that means, right?\"\n\n\"I do.\" Kylie patted the table top beside her. \"Stay if you want. I think you're right, it's not going to get much worse for you.\"\n\n\"But you're not going to tell me why, are you?\"\n\n\"Nope.\"\n\n\"Thought not.\"\n\nI grumbled a little as I sat down, but I was honestly feeling ok about things so far. I was still apprehensive about what Kylie's goddamn irritating secret was, but that was background noise.\n\nKylie sat up straighter, unfurling herself somewhat. She fiddled with the strings on her light hoodie, which drew my attention to the choker she seemed to always wear, and which was now visible as her hair fell partly out of the way.\n\n\"I know it's annoying,\" she said, \"but I don't often meet someone who doesn't know. Not here, anyway. Other places, I'm not quite so famous. It's nice.\"\n\n\"You know I'm still gonna wonder.\"\n\n\"Of course. But you don't know. So that's something.\"\n\n\"I guess.\"\n\nThere was a momentary silence, then Kylie tossed her hair over her shoulder and gave me another appraising look. I wasn't sure what she expected to find.\n\n\"So, you moved here last year?\" she asked.\n\n\"Last summer, yeah.\"\n\n\"Do that a lot?\"\n\n\"No. Just the once. Parents couldn't wait another year and make things easier for me, I guess.\"\n\nKylie snorted. \"Yeah. I get that. It's all about them sometimes.\"\n\n\"No kidding.\"\n\nI felt like I'd at least been accepted into Kylie's circle of solitude, though the reason for its existence still eluded me. We talked a while longer, not about much of any substance, but just talked. It was nice. Different from so many other conversations where it half felt like a constant audition to keep being allowed to hang around. Not that it was really that bad, but I didn't feel comfortable and relaxed too often with other people either. With Kylie, knowing she was the only one listening, I felt like there were possibilities of working up to some true casual chatting at some point.\n\nI returned to my regular group just before lunch ended. Ben had that shit-eating grin that I'd been dreading, and there was a decided mix of curiousity and amusement from most of the rest.\n\n\"Got a date?\" Ben asked.\n\n\"Goddammit, Ben,\" Andrea said. \"Shut the hell up.\"\n\n\"Just asking. You never know.\"\n\n\"Did she at least tell you?\" Andrea asked, ignoring Ben's further attempts at antagonizing.\n\nI sighed. \"No. Not yet.\"\n\n\"Well... at least she will eventually, right?\" Andrea said, talking more to herself than me. She didn't seem to want to tell me the secret, but at least in her case it wasn't because she thought it was funny, so that was something.\n\n\"I mean, probably,\" Rob agreed. \"Not really our place.\"\n\n\"No. Of course not,\" I said. \"Everyone knows but me, but not really anyone's place.\"\n\n\"We only know 'cause we were around for it. It's, like... it's complicated.\"\n\n\"Complicated,\" Andrea echoed.\n\n\"Of course it is,\" I muttered.\n\n****\n\nBut I had to admit, in hindsight, they weren't wrong. It was complicated. I'd hung out with Kylie at lunch all week, eventually not even bothering a token visit with my group first. They just made me feel awkward anyway.\n\nFriday lunch period found me walking up to what I'd already started thinking of as 'our' picnic table, finding Kylie there as usual, but being mildly surprised to see she had a cigarette between her fingers. She put it to her lips as I approached as though daring me to say something.\n\nI sat next to her for a moment before speaking. \"I didn't know you smoked.\"\n\n\"I usually don't. It helps, sometimes. Not sure if it's the crap in these things, or if it just makes me feel better to rebel in a stupid and pointless way.\"\n\n\"Yeah, I, uh, don't know that one either.\" I scratched my head and looked around. \"You don't get in trouble for smoking out here?\"\n\n\"I don't do it often. And I'm careful.\"\n\n\"Oh.\"\n\nKylie took another puff, then carefully ground out the end while preserving the remainder. \"Just need it sometimes.\"\n\n\"That's not the big secret, is it?\"\n\nShe snorted. \"Not hardly.\"\n\n\"Good. Would have been a let down.\"\n\n\"Wouldn't it just.\" Kylie leaned back on her arms, staring up at the clouds. \"No. There's more to it than that.\"\n\n\"Such as?\" I prompted.\n\n\"Well, interestingly, it might be a good day to tell you.\"\n\n\"It is?\"\n\n\"Don't look so surprised. It makes sense to get it out of the way. If you're going to be weird about it, better to find out now than after I get attached.\"\n\n\"Oh. Uh, I guess?\"\n\n\"Plus my morning sucked, so if this goes badly then the whole thing's a wash already.\"\n\n\"It might go well,\" I suggested.\n\n\"Maybe. Hopefully.\"\n\nI waited. Kylie didn't say anything. I shrugged and lay back, getting comfortable on the table top and trying not to look too anticipatory.\n\n\"I'm ready if you want to,\" I said. \"But you don't--\"\n\n\"I grew up as a boy.\"\n\n\"... what?\"\n\n\"I'm trans.\"\n\nThe momentary silence after her brief couple of words hung disproportionately heavy, but I needed that time to process.\n\n\"Oh.\"\n\n\"Oh good, or oh bad?\"\n\n\"Just... oh. I didn't see that one coming.\"\n\n\"No?\"\n\n\"No. I kept dreaming up, like, you burnt down your last school. Or murdered a teacher and got away with it. Or sold drugs on the side. Or had naked photos of you floating around. Or--\"\n\n\"That's enough, thanks.\"\n\n\"Sorry. Just... I mean, the way people were talking, I thought it was something bad, you know?\"\n\n\"Depends on who you talk to. To some, it is.\"\n\n\"Oh. Yeah. I guess, huh?\" I sat back up, needing some feedback from her facial expression. She was keeping it altogether too neutral to help much. \"Surely not everyone's a dick about it?\"\n\nA faint smile graced her lips. \"No, not everyone. Not by a long shot, really. But enough.\" She groaned and rubbed her face. \"Enough to be a pain. And so few of the rest know what the hell to do with me.\"\n\n\"Yeah, that kinda tracks.\"\n\n\"I mean, I get it. It's hard to forget who I was. Or who they thought I was. But I'm so over this shit. Can't wait to get out of here, go somewhere nobody knows me.\"\n\n\"That's, uh, not all it's cracked up to be.\"\n\nKylie gave me a sideways glance, then smiled ruefully. \"Yeah, I guess you got the opposite problem, huh? In a sense.\"\n\n\"In a sense, yes. Goddamn I miss people who actually knew me. And liked me.\"\n\n\"I would imagine.\"\n\nAnother silence. I was still thinking, processing.\n\n\"So, uh, thanks for telling me, anyway,\" I said.\n\n\"So you can stop being so curious?\"\n\n\"That too. I meant, like, 'cause--\"\n\n\"Yeah, no, I know what you meant. Thanks for not being a dick about it. So far.\"\n\n\"Doing my best.\"\n\n****\n\nKylie and I started sitting together in history, our shared class. We got some looks when it became obvious it was a deliberate choice, but nothing much more than that. I hadn't been quite sure what kind of reaction I'd get, but I was fine with whatever. It's not like anyone's opinion carried much weight with me.\n\nI had trouble picturing her as ever being boy-shaped, which was kind of the point, I supposed. I didn't have the reference of her past life the way most everyone else did, and I think it worked well that way for both of us.\n\nOur picnic table outside had become our default lunchtime spot, weather permitting. I was so much happier hanging with her than trying to fit in with my circle of people who tolerated me. All the more so with the smirks Ben kept giving me, the questions Jess sometimes asked, thinking she was being subtle even when she wasn't, and just the general awkwardness. Mostly everyone dropped the subject as soon as it was no longer a novelty, but I knew it was still lurking there somewhere. I could only imagine how Kylie handled it, having to deal with it all the time whether she wanted to or not.\n\nShe was in a particularly intense mood one lunch. She'd beaten me to our spot, as happened more often than not. She was also working a cigarette like she needed to get through the whole pack before next period. This was only about the third or fourth I'd ever seen her with, making her unlikely to be a habitual chain-smoker, and leading me to believe something was wrong.\n\n\"Kylie?\"\n\nShe barely glanced at me. \"Hey.\"\n\n\"Something up?\"\n\n\"No. Yeah. Kinda. No, it's stupid.\"\n\n\"Kinda seems like it isn't.\"\n\nKylie stabbed out the last of her cigarette on the table top. \"Somebody called me Lee.\"\n\n\"As in... not short for Kylie?\"\n\n\"No. As in my old nickname. For Liam. I halfway thought I wouldn't mind when I picked Kylie, 'cause at least it still kinda works. Except they definitely aren't using it that way, and it doesn't bug me any less.\"\n\n\"Oh.\"\n\n\"Stupid, right?\"\n\n\"Not if it's important to you.\"\n\n\"I don't want it to be.\"\n\n\"That doesn't always matter.\"\n\n\"No. You're right about that one.\" Kylie fidgeted. \"Shit, now I want another smoke.\"\n\n\"One didn't cut it?\"\n\nShe turned to me with a massive roll of her eyes. \"It never 'cuts it.' It just helps.\"\n\n\"Sorry.\" I shrugged. \"I'm pretty useless with some of this stuff.\"\n\n\"No, it's fine. I'm cranky and anxious and snappy.\" Kylie rubbed her face. \"And the end of the year just won't get its ass in gear and get here.\"\n\n\"Almost,\" I said.\n\n\"Almost. It's been almost for forever now.\"\n\n\"Doesn't make it untrue.\"\n\n\"No. Maybe not.\"\n\nShe was still fidgety. She hadn't yet reached for her pack, but it was coming. I felt like I should distract her somehow, but had no idea what to do. I wasn't overly entertaining at the best of times.\n\n\"Crazy idea,\" I said slowly.\n\n\"What's that?\"\n\n\"Wanna go do something?\"\n\nShe frowned. \"In what sense?\"\n\n\"Any sense. What do you want to do right now?\"\n\n\"Smoke.\"\n\n\"Besides that.\"\n\n\"Go home and curl up and wish for armageddon.\"\n\n\"Besides that.\"\n\n\"You can't just keep vetoing me.\"\n\n\"Watch me.\"\n\n\"Fine. You suggest something and I'll shoot it down. See how you like it.\"\n\nI shrugged. \"Go grab food?\"\n\nKylie made a face. \"At the cafeteria? No thanks.\"\n\n\"No, I mean. Somewhere. Anywhere. Preferably within walking distance. So not really anywhere.\"\n\n\"Don't have time. And not allowed.\"\n\n\"So?\"\n\n\"What do you mean 'so'?\"\n\n\"Weren't you just praying for the end of the world a moment ago?\"\n\n\"Thinking about it. Hadn't actually done any praying.\"\n\n\"Why the hell you letting rules stop you then? Breaking a few has to be less bad than ending all life on the planet.\"\n\n\"Arguably, sure.\" Kylie's lips twitched in the barest glimmer of a smile. \"What about you? You don't need to be getting in trouble.\"\n\n\"Who gives a shit, really? I'm not crucial to goddamn anything that happens around here. Or anywhere.\"\n\n\"Ooh, someone's even more existential than I am. Interesting.\"\n\n\"No, just... well, maybe. I dunno.\"\n\nKylie stood up and grabbed her things. \"You'll have to tell me all about it.\"\n\n\"Later?\"\n\n\"No, now.\"\n\n\"Where are we going?\"\n\n\"You forget already? We're off to break rules and be idiots. Or the other way around, maybe.\"\n\n\"Be rules and break idiots?\"\n\n\"Something like that.\"\n\nSo we went off to be rules and break idiots.\n\nIt wasn't all that exciting, really. We literally just walked toward the road, then kept walking. No one was watching or making sure we didn't leave. We just left. There'd be hell to pay later, presumably, but in the moment it was a very casual thing.\n\nOnce out of immediate sight of the grounds, our pace slowed. We hadn't been walking all that quickly anyway, now we practically dawdled.\n\n\"So,\" Kylie said, \"wanna tell me about this crisis of yours?\"\n\nI flushed. \"I wouldn't put it like that.\"\n\n\"No?\"\n\n\"No. It's not a crisis, existential or otherwise. It's just... frustration? Anger? Maybe some loneliness?\"\n\n\"Sounds crisis-ish.\"\n\n\"Well... maybe.\" I shrugged. \"I miss people. People from my old school. My friends. My old house. Everything and everyone I knew. I've got basically none of them anymore. 'Cept my parents, and I'm still quietly bitter and resentful that they put me through this.\"\n\n\"But you woulda been leaving next year anyway, wouldn't you?\"\n\n\"Hey, don't you bring logic into this. You asked.\"\n\n\"I did ask. Sorry.\"\n\n\"It's fine. It's just life, I guess. These things happen.\" I sighed. \"S'not easy, though.\"\n\n\"No. I get that.\"\n\nWe ended up at a local diner. It was busier than I wanted, but it was lunch time so anywhere we went would be. Somehow we still managed to snag a booth in corner with some relative privacy.\n\n\"I'm getting a milkshake,\" Kylie said without even looking at other options.\n\n\"That's it?\"\n\n\"Yep. Who's gonna stop me?\"\n\n\"No one, I guess.\" I was conditioned to feel like I couldn't just have a milkshake for lunch, but for the life of me I couldn't see a good reason not to. \"I used to dip fries in mine when I was a kid.\"\n\n\"Ooh, that sounds good. Wanna split a fries too then?\"\n\nI shrugged. \"Sure. Why not?\"\n\nSo we sat and dipped fries in milkshakes like kids while the lunch rush slowly trickled out.\n\n\"This is nice, you know,\" Kylie said.\n\n\"Yeah?\"\n\n\"Yeah. No one here knows me. Haven't had a funny look since we walked in.\"\n\n\"You still get funny looks all the time?\"\n\n\"No. Not usually.\" Kylie looked me in the eye. \"But I can only imagine what kind of looks we'd get if kids from school were trying to figure out if we were on a date.\"",
        "I paused uncertainly. Kylie watched me, her expression only mildly amused.\n\n\"I guess maybe it looks almost like one, huh?\"\n\n\"Almost,\" Kylie agreed. \"Not where I would have picked, necessarily.\" She shrugged. \"Though there's something to be said for keeping it casual.\"\n\nI studied her a moment, trying to figure out where her head was at. \"So what if this was a date?\"\n\n\"You didn't ask me out.\"\n\n\"No. But if I had?\"\n\nKylie tilted her head, eyes half-focused on me in thought. \"That's an interesting question,\" she murmured. \"I think I'd have said yes, but--\"\n\n\"Yeah?\"\n\n\"Yeah. But I don't know that I should.\"\n\n\"Why not?\"\n\n\"Because maybe it'd be for the wrong reasons.\"\n\n\"So are lots of dates.\"\n\nKylie's lips twitched in a crooked smile. \"True enough.\"\n\nI chewed my lip, considering for a moment. \"I'll have to ask you out for real one of these days.\"\n\n\"We just established that I'd only say yes for the wrong reasons.\"\n\n\"Only the wrong ones?\"\n\n\"Well... no. But some wrong ones. Like... maybe I think you're the only good option I've got, until I move somewhere else.\"\n\n\"Sure, yeah, maybe. But at least you think I'm a good option.\"\n\n\"Maybe I should have said decent option.\"\n\n\"Maybe.\"\n\n\"Or what if it goes badly? I'm s'posed to go back to not having you to hang with a school?\"\n\nI tilted my head. \"So you don't want to risk not liking me because you like me?\"\n\n\"Not at all what I said.\"\n\n\"No, but not too far off either, I think.\" I shrugged. \"I won't ask if you really don't want me to. But I don't think that's what it is. I just think you're nervous.\"\n\n\"Of course I am! You make me feel almost normal sometimes, and I don't know what the fuck to do with that.\"\n\n\"Oh. Oh wow.\"\n\n\"Too heavy?\"\n\n\"No, it's good. It's... intense. But I appreciate where you're coming from.\"\n\nKylie took a long drink to avoid speaking or making eye contact for a moment. \"I mean it,\" she said softly. \"I sometimes feel normal with you. And I don't want to lose that.\"\n\n\"Dates are normal.\"\n\n\"Not with me.\"\n\n\"Why not?\"\n\n\"Because... because.\"\n\n\"Oh. Well when you put it so eloquently...\"\n\nKylie snorted. \"Shut up. I'm trying.\"\n\nI nodded. \"Ok, well, what about this?\"\n\n\"This?\"\n\n\"Right now. This is almost like a date. This is fine, isn't it?\"\n\n\"But it's not a date.\"\n\n\"No. But it's like what one would be.\" I shrugged. \"Disappointing as it may be, I probably wouldn't be any more inventive than grabbing food somewhere.\"\n\n\"Not even a movie first?\"\n\n\"Well... maybe. But I just feel weird about that. Like, go on a date with someone, then just sit next to each other for two hours without speaking? I'm not convinced.\"\n\n\"Huh. Yeah. When you put it that way...\"\n\n\"It's mostly just about excuses to chill and talk, right?\"\n\n\"That's already what we do.\"\n\n\"Yeah, but... differently. Somehow.\"\n\nKylie chewed another fry. \"You sure it's not about trying to get into each other's pants?\"\n\nI coughed, nearly choking on the mouthful of milkshake I'd been in the midst of swallowing. \"I mean, in a sense. Kinda. Maybe.\"\n\n\"I'm pretty sure it's the pants thing.\"\n\n\"I, uh...\"\n\n\"And you probably don't really want in my pants.\"\n\nMy face was painfully warm and I kind of wanted to just hit the ejector seat on the conversation. I summoned all my foolish determination and ventured forward anyway.\n\n\"Why don't I?\" I asked.\n\n\"You can't guess?\"\n\n\"Well...\"\n\n\"Not even gonna try?\"\n\nI swallowed hard. \"Do you still have...\"\n\n\"A dick? Yeah. Haven't fixed that yet.\"\n\n\"Ah.\"\n\nI felt like Kylie had remained altogether too calm, considering. Her even stare made my own awkwardness and red face all the more embarrassing for me.\n\n\"So you probably don't, am I right?\" she asked.\n\n\"What if I'm ok with it?\"\n\n\"Then I'd be worried.\"\n\n\"Why?\"\n\n\"'Cause you're probably fetishizing me.\"\n\n\"I... what? No. Just, like, I like you.\"\n\n\"Sure. I like you too. But you're probably in over your head here.\"\n\n\"And you're being overly defensive here.\"\n\nKylie sipped her milkshake, giving me quite the crooked look. I thought she might tear into me for a second, but then the moment passed.\n\n\"I am,\" she admitted. \"It's a bit of a sore point for me.\"\n\n\"I get that.\"\n\n\"To an extent, maybe.\"\n\n\"As best I can without living with a vagina for a while, I imagine.\"\n\nKylie's lips flicked into what was almost a smile, just for a second, then went neutral again. \"Either way, it's probably not happening.\"\n\n\"Give it time. Think about it.\"\n\n\"You think I haven't?\"\n\n\"... have you?\"\n\n\"Of course.\"\n\n\"And?\"\n\n\"Exactly what I just said.\"\n\n\"No, Kylie. What do you think of it? Nevermind what you think I think.\"\n\nKylie went quiet for a while. Uncomfortably long, really, but I was determined at this point to get a straight answer. Speaking for me was only a way of deflecting from that. I assumed. If it wasn't, then she was just guessing, and she was wrong. Probably. I couldn't actually say totally for certain based on experiences I hadn't had yet, but to the best of my knowledge, I meant everything I'd told her.\n\n\"I don't want to lose you yet,\" she said quietly.\n\n\"I--\"\n\n\"Shut up for a second. Let me finish. If... if it was a little closer to the end of the year, fine. I'd go for it. See what happened. But it's not close enough yet, and I don't want to risk ruining this... whatever it is we have.\"\n\n\"Friends, Kylie. We're friends.\"\n\n\"Yeah. That.\"\n\nI shrugged. \"I mean, I think that's a fair answer.\"\n\n\"Thanks so much for your approval.\"\n\n\"Don't be shitty. You were putting words in my mouth. Speaking for future me. Risking friendship for maybe getting something more... that's more legit.\"\n\nKylie slumped in her seat. \"Shit, I'm ruining things anyway, aren't I?\"\n\n\"No. Hell no. This is good.\"\n\n\"Fighting?\"\n\n\"Not hardly. Skirmishing, maybe. You should have seen the blowup I had with my parents when they told me we were moving. That was a fight.\"\n\nA ghost of a smirk appeared on Kylie's face. \"Maybe this is a fight, and that was a war.\"\n\n\"Maybe. I stand by my analysis.\"\n\nKylie reached for her milkshake, pulled it closer to her mouth, then stopped and shook her head. \"I need something more substantial to eat, I think. You want anything?\"\n\n\"No. I'm good for now, thanks.\"\n\nKylie ordered a burger while I toyed with the remnants of our fries. Disaster had been averted, to some extent. I wasn't quite sure where we were at anymore, but it was probably going to be ok.\n\n\"You shoulda got something,\" Kylie said once she had her burger. \"Now I'ma feel weird eating while you stare at me.\"\n\n\"Maybe I won't stare.\"\n\n\"You're staring now.\"\n\n\"We're talking. That's what people do when they talk.\"\n\n\"So stop, then.\"\n\n\"Fine.\"\n\n\"Fine.\" Kylie took a bite, chewed, and swallowed. \"You're still staring.\"\n\n\"What else am I s'posed to do? Stare at the ceiling like an idiot?\"\n\n\"Maybe. I dunno. Just not at me.\"\n\n\"Maybe you're the only thing worth staring at.\"\n\n\"Thing?\"\n\n\"You know. As opposed to the ceiling. Or the wall. Or whatever.\"\n\n\"Uh huh.\" Kylie took another bite while arching her eyebrow and waiting for me to dig myself deeper.\n\n\"I mean,\" I said carefully, \"that I like looking at you.\"\n\n\"Weird.\"\n\n\"Not weird. You're beautiful, you know.\"\n\n\"Ha, right.\"\n\n\"You are. That's what drew me to you in the first place.\"\n\n\"Before you knew.\"\n\n\"Before I knew. It didn't change anything.\"\n\nKylie chewed slowly, eyeing me thoughtfully. \"I accept the compliment,\" she finally said.\n\n\"So glad to hear it.\"\n\n\"But are you sure it's worth hanging with me just 'cause of that?\"\n\n\"Who the hell said that was the only reason? That was just the initial one. You're also kind of alone, like me, if for different reasons. You get what it's like. And you're fun to hang with. So much less pressure on stuff. We can just chill.\"\n\n\"I'm pretty, I'm an outcast, and I'm easy?\"\n\n\"Er... I don't think that's quite what I said.\"\n\n\"Pretty close, dude.\"\n\n\"Ok, fine, so you don't think there's any good reason we hang out?\"\n\n\"Well... you kinda just keep showing up.\"\n\n\"Hey!\"\n\n\"Nah, for real though, you're easy to hang with too. Low pressure, like you say.\" Kylie tilted her head. \"Plus you're kinda cute too.\"\n\nI flushed just a little warmer than before. \"Thanks.\"\n\n\"But don't get the wrong idea. We're still not dating.\"\n\n\"I'm too out of your league, huh?\"\n\n\"Other way around, more like.\"\n\n\"I dunno. You've got ketchup on your chin. Pretty sloppy.\"\n\nKylie grabbed a napkin and wiped her chin with impressive speed, and only a small but adorable squeak of surprise and indignation. \"Don't look so smug about that,\" she warned darkly.\n\n\"Wouldn't dream of it.\"\n\n\"This is why I didn't want you to look.\"\n\n\"Ah, but if I hadn't looked, you wouldn't have know. It would have been more embarrassing in the long run.\"\n\n\"I'd take my chances.\"\n\nKylie slowly made her way through the rest of her burger while eating all the more carefully and daintily. I felt nervous butterflies take a firmer hold of me the closer she got to finishing, and only getting worse as we left the diner. She gave me a curious look for walking so slowly, but I had other things on my mind.\n\nWe didn't go very far before I felt like we weren't being directly observed, and that the moment was right. I reached over for her hand, felt her tense at the contact, watched her turn, confused frown on her face.\n\n\"What are you doing?\" she asked. \"Holding my hand?\"\n\n\"Briefly,\" I said.\n\nI stepped closer, staring into her eyes. She didn't know what to do. I only barely did.\n\nI raised my free hand to Kylie's cheek, brushing it tenderly with my fingertips. I made my movements slow and gentle, as though reassuring a timid puppy. Kylie stared back at me, frozen, unsure, anxious, and waiting.\n\nI kissed her, only softly, delicately. I waited for her to tense again, or pull away. She didn't. She didn't push forward either. Just stood there, still unsure.\n\n\"Now it's a date,\" I whispered.\n\n\"Cheating,\" she replied faintly.\n\n\"It's in the rules.\"\n\n\"I called no date. That's cheating.\"\n\n\"So you agree it's a date now?\"\n\n\"Yes, dammit.\"\n\n\"Would you say it's going well?\"\n\n\"Makes the top ten for me anyway.\"\n\n\"Could be worse, I guess.\"\n\n\"Sure could. If you hadn't made the top ten, it'd be worrisome.\"\n\n\"You haven't been on ten?\" I hazarded.\n\n\"Correct.\"\n\nI kissed Kylie again. She pulled her hand away from mine, but only so she could press back against me and lift her arms to my shoulders. It was a much better kiss all round.\n\nI slipped my arms around her in a gentle embrace, straddling the line between loose and tight. This was uncertain territory, even if she was now kissing me just as firmly as I was her.\n\n\"We should keep moving,\" Kylie said.\n\n\"Do we have to?\"\n\n\"Yes. People are gonna stare.\"\n\n\"So?\"\n\n\"I don't like being stared at, Carter. You should know that.\"\n\n\"I dunno. I stared at you and it got you to kiss me.\"\n\n\"That is not at all how that went.\" She slipped from my arms, but took my hand as we headed away. \"What do you think? Keep going, or turn around and catch the bus home?\"\n\n\"It's still early for the busses.\" I shrugged. \"We could walk for a bit, then go back? We probably should go back eventually, at least, 'cause otherwise I don't know how I'm getting home.\"\n\n\"Yeah. Me either.\"\n\nSo we walked, fingers intertwined, sometimes talking, sometimes silent.\n\nI had very little idea what I was doing, but it felt good, and I was pretty sure Kylie wasn't any more certain than I was, so at least we were even.\n\nI didn't dare kiss her back at school as we split up to our respective busses. I didn't care about anyone seeing, not much anyway, but I was quite certain she'd be pissed about it. I settled for giving her hand a last squeeze before separating. She half turned and gave me a quick smile before we parted and went our own ways.\n\n****\n\nThings went pretty great for a little while. I got some shit for cutting a whole afternoon, as did Kylie, but it honestly wasn't a big deal. I was getting to the point of realizing just how unimportant high school was, how powerless the jackass administrators were, and how irrelevant all the bullshit was.\n\nMaybe it had taken being swept from my comfort zone to see it. I was pretty sure I'd have been happy staying in my familiar world-view bubble, believing that it all mattered, that I needed to respect the principal and my teachers and all the rules, and that it would pay off someday.\n\nThe main downside to staying in such a bubble was that I probably wouldn't have met Kylie. Not in the same way, at least. Not so that we'd get so close and start spending most of our free time at school together, and even some time outside it as well.\n\nWe hadn't done anything more than kiss and hold hands, and that was fine. I loved just getting some light makeouts in, and she was responding with more interest and enthusiasm all the time. She'd even initiated a few times, though she was more hesitant about it a lot of the time. Possibly due to her notion of the gender roles she was expected to fill. I didn't feel like they were super important, but I recognized they mattered more to her, and she had to figure out her own path.\n\nI got suspended about a week after our afternoon adventure. It was unrelated, mostly, but there was a chain of events leading to it. I planned on telling anyone who asked that it was, in fact, because I'd buggered off halfway through the day. Getting temporarily kicked out of class for missing class had a deliciously ironic flavour to it that I appreciated, even if it wasn't the truth in this case.\n\nI evaded Kylie's questions over text, though I was happy to talk to her about most anything else. It'd only be a couple days anyway, then I'd be back.\n\nNevertheless, she must have decided that wasn't good enough. I was lying in bed one afternoon, fully clothed, on my back, hands back under my head. Bored to shit, essentially. I'd had some privileges revoked at home as a result of my suspension, though I was pretty sure that was only because I'd refused to explain my line of thought to my parents. They knew why I'd been suspended, and they were pretty sure there was more to it than they'd been told, but I sure as hell wasn't explaining it. Even for the sake of leniency.\n\nMom knocked on my door, waited a moment, then came in without waiting for me to answer. To be fair, I wasn't sure I would have answered.\n\n\"There's someone here to see you,\" she said.\n\n\"Oh?\"\n\n\"She says she brought classwork for you.\"\n\n\"Ah. Good. My education is very important to me.\"\n\nMom frowned. \"I wish you wouldn't say things like that. Like you mean the exact opposite.\"\n\n\"I do, in fact, mean the exact opposite.\" I sat up and smiled winsomely. \"But what the hell, maybe I'll look at it anyway.\"\n\n\"Carter...\"\n\n\"Yeah, Mom. I'll actually look at it. Ok?\"\n\nShe nodded tersely, concern still evident in her eyes. \"Can I send her up?\"\n\n\"I'm not going anywhere.\"\n\nMom left. Moments later she was replaced by Kylie. I'd been hoping it would be her. I wasn't even sure who else it would be, but I hadn't wanted to get my hopes up too high.\n\n\"Hey there, rebel boy.\"\n\n\"That's me. Nice of you to bring school to me, since my rebellious ways have taken it away.\"\n\nKylie snorted and stepped into the room. \"I didn't bring anything.\"\n\n\"Oh? Coming to see me under false pretenses, huh?\"\n\n\"You know it.\"\n\nI patted my bed. She slipped her bag to the ground and sat next to me.\n\n\"I'll be back the day after tomorrow,\" I said. \"It won't be that long.\"\n\n\"I know. But I missed you, you stupid trouble-making goofball. You know I was perfectly happy spending breaks by myself before you go and get me feeling like a regular human being again?\"\n\n\"My bad.\"\n\n\"Damn straight.\"\n\nI hesitated. \"So you heard why I got suspended?\"\n\n\"Duh. Everyone did, sooner or later. It wasn't subtle.\"\n\n\"No. I guess not. I'd hoped, though.\"\n\nKylie toyed with a few strands of her hair. \"So you know I need to ask.\"\n\n\"You don't have to.\"\n\n\"I do.\" She looked straight at me. \"Why'd you kick Ben in the balls?\"\n\nI sighed. \"He was being a dick.\"\n\n\"So what's new?\"\n\n\"More than usual.\"\n\n\"There's something specific, isn't there?\"\n\n\"Maybe.\"\n\n\"And you don't want to tell me?\"\n\n\"Correct.\"\n\n\"So it's about me?\"\n\n\"... maybe.\"\n\n\"Dude, Andrea told me.\"\n\n\"Oh.\"\n\n\"He was picking on you about your 'boyfriend.'\"\n\n\"... yeah.\"\n\n\"I've heard worse. You didn't have to do that.\"\n\n\"Yeah, well, it felt right.\" I shrugged. \"And Rob texted me earlier. Apparently Ben's been less of an asshole since. So maybe he just needed a good kick in the dick.\"\n\n\"He's got issues,\" Kylie said. \"He's not just an asshole.\"\n\n\"You're gonna be standing up for that shit now?\"\n\n\"No. Just... I don't want you kicking everyone in the dick. Your foot would get tired.\"\n\nI laughed. \"Don't worry. Lots of 'em don't have bits to kick. So that helps.\"\n\n\"You can still kick people in the pussy, dude. It's a similar motion.\"\n\n\"True.\"\n\n\"Give 'em the old cunt punt, if you will.\"\n\nI laughed harder, and it only got worse when Kylie started giggling too.\n\n\"That's so horrible,\" I said.\n\n\"Hey, you started it.\"\n\n\"I know. But still.\" I wiped a few errant tears from my eyes. \"Dick kicks and cunt punts.\"\n\n\"Both getting you equally suspended, I imagine.\"\n\n\"Yeah. I'm lucky I didn't get worse, really.\" I sighed. \"And you're right, I shouldn't have done it. Ben'll grow up on his own eventually. Hopefully. I think he's starting to realize no one else thinks it's funny anymore. Maybe he's just slow.\"\n\n\"Lots of people are.\"\n\n\"If too many people are slow, doesn't that just make them average?\"\n\n\"I dunno. Maybe.\"\n\nI grinned at Kylie. \"Still, enough about that. Seems like I got you in my room, huh?\"\n\n\"Don't you look at me like that. I just wanted to see you. You happened to be in your room, is all.\"\n\n\"Yeah, but you're here now anyway.\"\n\n\"I said stop looking at me like that!\"\n\nI ignored her and leaned in. In spite of her protests, she met me halfway, bringing our lips together in what was becoming a comfortable prelude to making out for us. The first kiss of many.\n\nI pushed against Kylie more aggressively, getting closer and closer, kissing her deeper. She giggled and nearly fell over a few times as her space was crowded out. I kept pushing. She tried to force me back again, to crowd me out instead, but was already at a disadvantage, and wasn't really trying that hard.\n\nKylie giggled even harder as I gave her a particularly well calculated shove and she went sprawling on her back. I crawled atop her even as she tried to sit back up.\n\n\"Stop,\" she said, playfully swatting at me. \"I didn't come over for this.\"\n\n\"But it would be such a shame not to make use of the opportunity now that you're here.\"\n\n\"Is that all this is? Convenience?\"\n\n\"Hell no. This is you being sexy and alluring and in my bed.\"\n\nKylie flushed. \"M'not those things. 'Cept in your bed. I can't really deny that one.\"\n\n\"You are all three,\" I insisted.\n\n\"Well you're just a horny boy--\"\n\n\"True.\"\n\n\"--taking advantage--\"\n\n\"Somewhat true.\"\n\n\"--of poor little me.\"\n\n\"Not hardly true.\"\n\n\"Very true! I came over just to see you, just 'cause I miss you, and here you are trying to... trying to...\"\n\n\"Trying to what? Go ahead. Say it.\"\n\nKylie had gone bright red. \"You know.\"\n\n\"I know I wanted to make out with you. You look like you're thinking of something else.\"\n\n\"No. M'not. Just...\"\n\n\"Just what?\" I danced my fingers up her side, over her layered tops, nearly to her breast before sliding away. \"I think maybe your mind's going place mine hasn't yet.\"\n\n\"Well good. 'Cause I'm not ready for those places.\"\n\n\"Me either. I wasn't even thinking them.\" I booped her nose. \"That was all you.\"\n\nKylie squirmed beneath me. \"Well you're on top of me. On your bed. Being all... all...\"",
        "\"All?\"\n\n\"All warm and sexy and stuff,\" she mumbled.\n\nI grinned. \"Well I'm very sorry for being all warm and sexy and stuff.\"\n\n\"No you're not.\"\n\n\"No I'm not,\" I agreed.\n\nI kissed her again, softly but holding it for as long as my breath allowed. Her hands went to my chest. I thought she'd push me away, and she seemed to think about it, but then slipped them up to my shoulders instead, and eventually wrapped her arms around my neck, drawing me in.\n\nAs we kissed deeper, letting our tongues duel and our lungs struggle, I sank lower. I let my weight come down so very slowly, pressing into her a little more at a time. I wanted to feel her. As much as I could. I wanted that contact.\n\nInitially I wasn't sure how close she'd let me get, but it turned out not to be a worry. She only got more intense as we pressed together, chest to chest, hip to hip, legs intertwining.\n\n\"You're so heavy,\" she breathed.\n\n\"Sorry.\"\n\n\"No. In a good way. Like, not painful. Just... comforting? I guess?\"\n\n\"Yeah?\"\n\n\"Yeah. I like it.\"\n\n\"Good.\"\n\nI stopped worrying about leaning too much on her. Just let myself rest wherever was comfortable.\n\nKylie's lips and tongue were ever moving, ever searching. Her hips were all wiggly beneath me. I wanted to grind back against her so badly. I held back some, but she felt so good it was nearly impossibly not to let myself go.\n\nI found the gap between her shirts and jeans. My hand slid easily beneath her bottommost shirt and across her warm skin. I crept up higher and higher, locating her bra by touch. I waited a moment to see if I'd get a reaction, then fully cupped her breast in one smooth motion.\n\nKylie gasped and broke away to look in my eyes for a second, then went back to kissing me. \"They're only small,\" she said between kisses. \"They're not--\"\n\n\"Feels good to me.\"\n\n\"But they're--\"\n\n\"I like your boobies.\"\n\n\"Even if--\"\n\nI silenced Kylie with another kiss. I had the sense that arguing with her would be a losing proposition. How was I supposed to convincingly explain that I didn't care how big her tits were or how she got them, and that they felt good in my hand and I was having a lot of fun playing with them? There was no way at all if she didn't want to be convinced.\n\nIt wasn't clear to me whether she had two shirts on, or if there was a third smaller one in the mix. Either way, I struggled to push them higher up and get better access. I wasn't sure how far she would have let me go anyway, but it never became an issue since I could only get them partway up her tummy. That made things a little easier for me, but not as much as I'd hoped.\n\nKylie didn't have any further complaints once she got into it and accepted that I was genuinely having a good time fondling her tits. She tried running her hands over my chest, but only had limited access and didn't have the same freedom I did to shift around as needed. She changed course up to my shoulders, kept them there for a moment, then went further upward to play with my hair. I liked that better anyway.\n\nI ducked down some to make sure she could reach, not that that was really an issue. It gave me an excuse to kiss my way down her neck, though. Her choker made an interesting divider between her chin and collarbone. I kissed on both sides of it, then nuzzled against her lower cheek.\n\n\"I don't like my neck,\" Kylie said, as though some explanation were necessary.\n\n\"I like it. And your tits.\"\n\n\"So I gathered.\" She sighed. \"There's lots about me that's almost right, but not quite. It's just--\"\n\n\"I think that's how everyone feels. I know I'm not perfect.\"\n\n\"That's different.\"\n\n\"No it's not.\"\n\n\"Yes it is! You never had to try and make yours something totally different.\"\n\n\"True, I s'pose.\" I grinned at Kylie. \"But I like what you've done with the place.\"\n\nShe flushed. \"Don't look at me like that.\"\n\n\"Like what?\"\n\n\"Like... like you wanna do stuff to me.\"\n\n\"I do wanna do stuff to you though.\"\n\n\"I know. I can feel your boner.\" She pressed her thigh against my trapped cock, making me groan. \"It's not subtle.\"\n\n\"Then why do you care how I look at you?\"\n\n\"Just, like, I'm insecure. About lots of stuff. You know this.\"\n\n\"You only sometimes are.\"\n\n\"I am now.\"\n\n\"Yeah, well... don't be?\"\n\n\"Ha, right.\"\n\n\"I mean it. I'm getting all horny over you, and I still don't think you really believe it. Even though you can feel it.\"\n\nKylie flushed redder. \"No, I believe it,\" she said quietly. \"I'm just waiting for you to find something you don't like.\"\n\n\"You say that like it would be a dealbreaker.\"\n\n\"Well--\"\n\n\"What, are you worried I'll go too low, find your dick, and suddenly realize I don't actually love the rest of you?\"\n\n\"... yes?\"\n\n\"Well... well don't, then. I basically know what to expect.\"\n\n\"Basically isn't the same as actually.\"\n\n\"No, but... dammit, Kylie. I wanna do stuff. With you.\"\n\n\"I know!\"\n\n\"And I want you to want to.\"\n\n\"I do!\"\n\n\"Then stop looking for reasons not to enjoy yourself.\"\n\nKylie looked at me, chewing hard on her lip. \"You're super, super hard,\" she whispered.\n\n\"So I am.\"\n\n\"For me.\"\n\nI nodded. \"For you.\"\n\nShe smiled tentatively. \"Thank you.\"\n\n\"What? I, uh...\" I shrugged. \"Ok. You're welcome. I guess.\"\n\nKylie pulled me in for more kisses. Some of her gathered tension eased as we made out and I resumed groping at her. I kind of understood where she was coming from with insecurities and whatnot, but they were unnecessary, and I was much happier making out and grinding on her than trying to solve them all. Partly that was because of how damn horny she had me. It was harder to appreciate the intricacies of the mind when I was all turned on and shit.\n\nI was worked up and grinding harder and harder on Kylie's thigh. She pressed back against me and grabbed my butt, encouraging me and urging me on. Once she let go and let herself get into it, her enthusiasm for feeling my pinned erection sliding up and down was a match for my own. In theory she was getting quite a bit less out of it than I was, but you wouldn't have known it.\n\nI liked it so much better seeing her like that. Free and unconcerned, enjoying the moment.\n\nHer lips and tongue were an aggressive force to contend with as her hormones and my reassurance overwhelmed her anxiety and restraint. She wiggled and squirmed beneath me, unable to help how she felt or how she reacted.\n\nA stupid, stupid knock on my door ruined the whole sexy, liberated moment. Even stupider, Mom once again didn't wait for a response before coming in. She froze upon seeing me atop Kylie, the two of us clearly caught in the middle of some intense makeoutery.\n\n\"It does no good knocking if you just come in anyway,\" I said.\n\nI stayed where I was. It wouldn't help to get off Kylie now, and would probably hurt given how obvious my hard on would be.\n\nKylie turned her head away and covered her face with her hands. I saw the blush anyway. There was no missing it. It was cute, but it would have been nice if it hadn't come at the expense of getting caught like this.\n\n\"I just wanted... I was going to... um...\" Mom coughed. \"So she's your... girlfriend?\"\n\n\"That's what you wanted to ask?\"\n\n\"No. I mean, supper's going to be about half an hour. Is, uh, is Kylie staying?\"\n\nI looked down at Kylie. She didn't make a sound, nor look at me.\n\n\"Probably?\" I hazarded.\n\nKylie squeaked and tried to shift, forgetting perhaps just how pinned beneath me she was. \"I should go.\"\n\n\"No you shouldn't.\"\n\nMom backed away, hand on the doorknob. \"I'll, uh... there'll be enough if you want to stay. It, um... I'll call you. Later.\"\n\n\"Yeah,\" I said as the door closed. \"Later, please.\"\n\nOnce we were alone, I rolled off Kylie and sighed heavily at the ceiling. It was another long moment before she dared to budge.\n\n\"Goddammit,\" she muttered.\n\n\"Sorry,\" I said.\n\n\"Not your fault.\"\n\n\"No, but... I dunno. She's my mom. I feel responsible.\"\n\n\"She always walk in like that?\"\n\n\"Sometimes. Sure. It's a parental thing. I think.\"\n\nKylie sat up and shrugged. \"Not so much with mine these days.\"\n\n\"No? Why-- oh. Oh, right.\"\n\n\"Yeah. It's a bit awkward.\"\n\n\"I could see that.\"\n\n\"So you get why I get insecure?\"\n\n\"I was never unclear about that. I just don't want you to feel like you have to be.\"\n\nKylie tilted her head. \"I'm having a hard time believing you really don't care.\"\n\n\"It's not that I don't care. Just, like, it doesn't bother me. And it's not really the most important thing about you, you know?\"\n\n\"Oh? And what is?\"\n\nI grinned. \"That way you smile when you're embarrassed and red and all cute about it.\"\n\n\"Ugh. You goof.\"\n\nI laughed. \"Ok, maybe not. But I do like that.\"\n\n\"And here I thought it was gonna be my tits or something, the way you were grabbing them.\"\n\n\"Too rough?\"\n\n\"Uh... actually no. It was... nice.\"\n\n\"Oh really?\"\n\n\"I dunno. Just 'cause, like... you wanted them. I guess.\"\n\n\"Yeah I did. Still do.\"\n\nKylie gave a crooked smile. \"Feels nice being wanted that way. Validating, maybe. Something like that.\"\n\n\"Come here. Let me validate you some more.\"\n\nShe giggled. \"You goof.\"\n\nI sat up and reached for her, but she caught my wrists in her hands. I let her hold me still, watching the wheels turning in her head.\n\n\"Do you think, maybe, we actually have some time before your mom comes back?\" she asked.\n\n\"Yeah. And hopefully she'll knock for real if she returns.\"\n\n\"'Cause... you're still hard.\"\n\n\"I am.\" I quirked an eyebrow at Kylie. I wasn't sure where she was headed, but my tummy was already getting excited and fluttery at the possibilities. I didn't dare guess, just in case I was disappointingly wrong.\n\n\"You want some help with that?\" she asked softly.\n\nI grinned. \"Yes please.\"\n\n\"Don't take much convincing, do you?\"\n\n\"Nope.\"\n\nI watched in fascination as Kylie dropped to her knees on the floor. I sat at the edge of my bed and stared dumbly while she carefully undid my jeans and tugged them down. I helped a little, but mostly just let her strip my pants and underwear, freeing my cock that was so painfully hard for her.\n\nHer expression was initially one of wide-eyed shock and wonder, though faded almost immediately in favour of something more like curious excitement. She reached out and brushed my cock with her fingertips, making me shiver at the faint contact.\n\n\"So hard,\" Kylie breathed.\n\n\"You knew that already.\"\n\n\"I didn't feel it. Not like this. Not directly.\" She looked up at me, deceptively innocent. \"And all for me. I'm not used to that.\"\n\n\"It's not like I'm much used to this either.\"\n\n\"No. Sure. But, like, that's a different thing.\"\n\n\"Boys wanting you to play with their cocks?\"\n\n\"Well... not that specifically. But yes.\"\n\n\"I'll have to make up for that.\"\n\n\"Off to a good start,\" Kylie said absently as she closed her fingers around me.\n\nI groaned at the feel of her grip tightening around my cock, and the way it slipped up and down experimentally. Just the sensation of her soft, warm hand toying with me like that sent little thrills up my body, and pulses of pleasure through my shaft. It was pretty great.\n\nKylie was absolutely enamored with my cock. She couldn't take her eyes or her hand off it. Her pink tongue flicked out over her lips a couple times, and she wiggled forward on her knees until she was as close as she could physically get.\n\n\"You want to lick it?\" I asked.\n\nShe bit her lip. \"Kinda. Is that too slutty?\"\n\n\"I wouldn't say so. But then, I'm biased.\"\n\n\"Ha, yeah. I guess you would be.\" She looked up at me with big, curious eyes. \"You really want me to?\"\n\nI reached out and caressed her cheek. \"I want you to do anything you want to me.\"\n\n\"Anything?\"\n\n\"Anything. You're my girl. It's your prerogative.\"\n\nKylie's eyes went wider for a second and rolled back slightly. Her grip tightened. \"Say that again,\" she whispered.\n\n\"You're my girl?\"\n\n\"Yeah I am.\"\n\nShe shivered, then abruptly dove forward and licked the tip of my cock, swiping up the precum that had accumulated. She licked again and again, aggressively tonguing me while shifting her hand lower and out of the way.\n\n\"Good girl,\" I breathed.\n\nKylie moaned, wiggled, and licked even more frantically. It somewhat confirmed that she was, in fact, specifically responding to being referred to as a girl, or my girl, or whatever. Which I kind of got, even though it seemed a little too obvious. But then, while I wasn't super bothered by gender in most respects, it was certainly a bigger deal for her. It was something she had her own issues and perceptions about, and I didn't mind playing into them if she enjoyed it. If I couldn't reassure her through logic, maybe I could through repetition.\n\n\"Good girl,\" I repeated, stroking her hair while she licked and suck on my shaft.\n\nKylie squirmed some more, her face flushing pink. \"Your very good girl?\" she asked between licks.\n\n\"Very good girl,\" I confirmed.\n\n\"Do you... do you want to be in my mouth?\" she asked breathlessly.\n\n\"So badly.\"\n\nShe nodded. \"Then do it,\" she said quietly. \"Use me like I'm your good girl.\"\n\nI hesitated, conflicted about the conflation between submission and girlishness. I wasn't quite sure I was hearing exactly what she meant. \"That's not really--\"\n\n\"Please?\"\n\n\"I--\"\n\n\"Pweeeaase?\"\n\nKylie knew exactly what she was doing. I still wasn't totally happy with it, but her big, hopeful eyes and cute little pout were impossible to resist, horny as I was. As long as she was happy with what she was asking for, there was no reason to let my doubts stop me. Not that they ever had much of a chance when I was all worked up.\n\nI stood up and took a gentle hold of Kylie's head in both hands, tangling my fingers in her hair. \"This is what you want?\"\n\nShe nodded, still looking at me with an intense gaze. \"Yes.\"\n\nI nodded back. \"Then open up.\"\n\nKylie smiled, then let her mouth fall open as big as she could manage. She held it like that as I pulled her closer, while simultaneously pushing my hips forward. My cock slid in nice and easy. She closed her lips around me when I was about halfway in, increasing the pleasure I felt at invading her mouth.\n\nConflicted as I may have been to start with, using Kylie's mouth like she wanted turned out to be kind of amazing. I slid in and out, taking advantage of her soft lips gripping my shaft, all the while staring down at intense, shining eyes.\n\nI pushed deeper, testing her limits. She gagged a bit as I hit the back of her throat, but then frowned at me when I didn't try going further. She pressed at my thighs and pulled herself off my cock, a small line of spit falling from my cock to her chin.\n\n\"Deeper,\" she said.\n\n\"I can't.\"\n\n\"You can. Just push a little.\"\n\n\"I don't want to choke you.\"\n\nKylie bit the corner of her lip. \"You can choke me a little,\" she said in a small voice.\n\n\"Kylie...\"\n\n\"I know, I know. But, like, I'm so into this. I can do it. I've practiced. I have a toy I use.\"\n\nMy eyebrow rose, curiousity aroused. \"You do, do you?\"\n\n\"Mmhm. Maybe I'll show you sometime.\"\n\n\"You're kinda showing me now.\"\n\n\"True. But you gotta push harder if you want to see.\"\n\n\"I don't want to hurt you.\"\n\n\"I'm not delicate, Carter.\" Kylie paused. \"At least, not in that sense.\"\n\nShe opened wide for me again. I couldn't say no to such an invitation.\n\nI pushed back inside Kylie's waiting mouth. Her lips closed around me quicker this time, more sure of themselves as they embraced my cock. I still stalled out at her throat, but I gave some gentle thrusts, slowly increasing the pressure, and didn't back away entirely from trying to go further.\n\nKylie's hands rested on my hips, not really holding, pushing, or grasping. Just being there. She kept her head compliant, letting it move at my every whim. She was getting pretty wiggly, and her eyes shone as bright as ever, but her mouth was firmly mine to control and use as I wished. There was no wiggle or attempt at independence with it.\n\nMy next few attempts still made Kylie choke, which in turn made her mouth all the sloppier. But it really didn't take long before I felt her open up and let me the rest of the way in. Her throat was so much tighter than her mouth, and just as warm and wet. Not to mention the thrill every time she swallowed or gagged a bit, and those sensations were passed directly to me, up my cock in an electric massage.\n\nKylie took over some at that point, bobbing her head to alternate breathing with sucking me balls deep. I kept my hands on her head, holding on loosely, but mostly enjoying getting her excited enough that she couldn't help herself.\n\nFor the next few minutes I got a nice, sloppy deep throat from Kylie, before she remembered I was supposed to be using her mouth. I enjoyed the moment while it lasted, then smiled crookedly as Kylie got herself under control and put her hands over mine to remind me what I supposed to be doing.\n\nI was such a horny boy for her. She had me all worked up, even before she'd initially pulled my cock out. Now, after all the teasing, licking, and deep sucking, I wanted to give her exactly what she wanted. Not even just for her, but also because of how good it would feel.\n\nThose adorable, eager eyes staring up at me were too much. I met them at first as I rocked my hips, thrusting in and out of Kylie's mouth, but couldn't maintain my gaze on them. They did things to me. Things that made me all fluttery and excited inside. Things that distracted me from my goal.\n\nWe didn't have a super lot of time to spare. We needed to be done before supper was ready, after all. Even knowing that, I still wanted to take my time and make it last. I wanted to savour the feel of her tight throat around my cock, the adoring look in her eyes, the amazing sense of just how much freedom I had to do whatever I wanted.\n\nAll of which were rather opposed to my deeper, more primal need just to cum. Because I wanted that pretty badly too. I wanted to blow my load in Kylie's pretty mouth. Straight down her throat. Or maybe on her tongue so she could taste it first. Or maybe even all over her face to make a sexy mess of her. She'd probably like that, but it was risky since I wasn't totally sure.\n\nKylie moaned around my cock, tongue dancing across the underside of it. Her eyes were getting more pleading by the second. Asking me to finish, to cum for her.\n\nI groaned deep in my throat and took a firmer grip on Kylie's hair. I fucked her mouth harder, in longer, fuller strokes. Using it as a toy to push myself the last little bit toward completion.\n\nAs I got closer and closer, Kylie sensed the end coming and once again abandoned her position of neutral acceptance. She bobbed her head, forcing me balls deep into her on every thrust, and pulling back enough to sneak in a breath in between. She helped me impale her face over and over until I burst.\n\nKylie squealed happily and wiggled her butt so much I thought she might fall over. My cum flooded her mouth, coating her tongue, filling her with a salty, creamy mess. Her eyes rolled back and she kept her mouth tight around me, gently suckling me dry until there was nothing left to give her.\n\nHer lips parted wide as I pulled out. She made sure I saw the extent of the cummy mess I'd made before closing and swallowing. She looked so self-satisfied afterward as she carefully climbed to her feet, taking my hand for a boost up.\n\nI fell backward onto my bed. Kylie giggled and followed me down slower and more gracefully.\n\n\"Your mouth is amazing,\" I said.\n\n\"Why thank you.\"\n\n\"How much did you practice on that toy of yours?\"\n\n\"Probably too much.\" Kylie shrugged. \"I get bored. And I never had anyone to help me out with my experimenting. Until now.\"\n\n\"That was an experiment?\"\n\n\"Of course. I can't very well simulate getting my face fucked now can I?\"\n\n\"I mean... I guess not.\"\n\nShe giggled softer and stroked my hair. \"Don't look so disappointed. It wasn't just an experiment. I wanted to make you feel good too.\"",
        "\"I'm not disappointed. Far from it.\"\n\n\"But it wasn't quite what you wanted, was it?\"\n\n\"Well... no. I'm not sure I like the idea of you equating being a girl and being a sex toy.\"\n\n\"That's kinda my choice though, isn't it?\" Kylie asked lightly.\n\n\"Kinda. I guess.\"\n\nShe kissed me on the cheek. \"Don't worry so much about me. I'm just trying things. I've never had someone to try them with before.\" She looked at me seriously. \"Carter, there's still lots about being a girl I don't know or don't understand.\"\n\n\"That's fair.\"\n\n\"So I might do things that don't seem right. But I need to do stuff like that.\"\n\n\"Like getting your face fucked?\"\n\nHer crooked smile matched mine. \"Yeah. Like that.\" She wagged a finger, mock-chiding me. \"Which you didn't fully commit to, by the way. We'll have to try it again sometime.\"\n\n\"I tried.\"\n\n\"You did. And it's kind of adorable that you didn't want to hurt me.\"\n\n\"Hey, now.\"\n\n\"I mean that in a good way.\"\n\n\"M'not adorable just 'cause I don't wanna choke you,\" I mumbled sulkily.\n\n\"You don't get to decide, unfortunately.\"\n\nKylie lay next to me, cuddled close but not fully pressed up against me. I felt her warmth, her softness, and wanted more. But now wasn't the time.\n\nI took a moment to go over things in my head. The way she felt right now, the way her mouth had felt only minutes ago, how nice it was basking with her in the aftermath. I was conflicted about some things still, but she was right that it was kind of her call as to what she experimented with.\n\n\"I don't want you to feel like you need to be objectified to be a girl,\" I said aloud.\n\n\"Ah, but I do. At least a little.\"\n\n\"You don't.\"\n\n\"I do, actually. I have to find the right balance still.\"\n\n\"But--\"\n\n\"Carter, for real, I felt some things when you let go and actually fucked my mouth. And especially when you came in it. Good things. Things I've been struggling to find. And probably once I sort myself out in a few years... or more... I won't need to seek mildly unhealthy solutions. But right now... a little objectification could help more than you know.\"\n\n\"You confuse the hell out of me sometimes.\"\n\nKylie snorted. \"Welcome to everyone else's world.\"\n\n\"Oof.\"\n\n\"Right?\"\n\nWe lay together a few minutes longer before I had to sit up and get moving again. \"Should get pants on, I guess,\" I mumbled, absently scanning the room to locate my discarded bottoms as I spoke.\n\n\"I guess. Could leave 'em off, though.\"\n\n\"Yeah, you'd like that, huh?\"\n\n\"Maaaybe.\"\n\n\"Well I gotta dress. Supper's gonna be soon.\"\n\nKylie jerked upright. \"Shit!\"\n\n\"What?\"\n\n\"I forgot about that.\"\n\nI shrugged. \"No biggie.\"\n\n\"Yes biggie! I don't have any cum on my face, do I? Do I smell like blowjob? Shit. Fuck.\"\n\n\"You're fine. I--\"\n\nBut Kylie was already on her feet. \"Where's the bathroom?\"\n\nI nodded my head. \"Down the hall. Second door.\"\n\n\"Fuck. Shit!\"\n\nI snorted and finished dressing. I opted to let Kylie sort herself out. It's not like I'd be much help anyway. And there was no point in me being in the bathroom with her on the off chance one of my parents caught us. Not that it'd necessarily be any worse than getting caught making out.\n\nKylie eventually returned much calmer and a little sheepish. She blushed and shrugged at my questioning look.\n\n\"All better?\" I asked.\n\n\"Yeah, it's fine. Just... goddamn, Carter, I don't want your parents knowing that I sucked you off just now.\"\n\n\"Even better,\" I said with a teasing grin, \"you made me face fuck you.\"\n\n\"Shut up.\"\n\n\"Well you did.\"\n\n\"The point is, I don't want them to know.\"\n\n\"You think I do?\"\n\n\"Well... probably not, no.\"\n\n\"Damn straight. A very solid probably not.\"\n\nKylie shrugged again. \"So I had to make sure they wouldn't know.\"\n\n\"You were quite panicked about it.\"\n\n\"Of course I was!\"\n\n\"It was kinda funny. That's all.\"\n\nShe stuck out her tongue. \"Maybe next time I'll drool your cum back all over your face. See how you like it.\"\n\n\"Ooh, next time, you say?\"\n\nKylie quirked her head. \"I... yeah. Next time. There's gonna be a next time, isn't there?\"\n\n\"I certainly hope so.\" I stepped to Kylie, tilted her chin, and kissed her softly. She'd gone a little overboard with the mouthwash, but she'd probably be happy to know there was no detectable trace of cum left. \"It's hard to say no to a girl who wants my cock in her mouth.\"\n\n\"Gee. So romantic.\"\n\n\"I do my best.\"\n\nWe got called down for dinner before we could get any snugglier and work ourselves up again. I introduced Kylie to Mom and Dad, despite her having technically met Mom already, perhaps a little more than either of them wanted. I wasn't sure whether Kylie or Mom blushed redder. It was a close contest.\n\nDad, at least, seemed happy for me. He didn't really say anything, but I sensed the relief and pride that I'd brought home a pretty girl. Maybe he'd even heard that we'd been intensely making out. I had no way of knowing. My mind dwelled harder on what he'd think if he knew everything about Kylie. I didn't want to go there just yet.\n\nConversation was a bit forced on everyone's part. Kylie didn't know my parents, and they didn't know her. They all tried. I probably didn't help as much as I could have. Too many other things on my mind.\n\nDad drove Kylie home shortly after supper. She was ready to leave, and I didn't feel the need to prolong her agony. I went with, sitting in the back seat with her for the ride. We didn't do anything more than sneakily hold hands for part of the trip.\n\nI walked Kylie right to her door, partly because it seemed like the 'proper thing' to do. Mostly because it got us out of Dad's line of sight for a moment.\n\n\"Thanks for coming over,\" I said, giving her a lingering farewell kiss.\n\n\"Thanks for cumming,\" she replied, turning the nice moment into a mutual fit of hushed giggling.\n\n\"Any time.\"\n\n\"Uh huh.\" Kylie fidgeted, but held tight to my hands, preventing me from leaving yet. \"Seriously though, thank you. For... for making me feel like a girl. And stuff.\"\n\n\"Ky, we're really gonna have to work on that. We need something less demeaning to be your 'girly' moments. Like... like flowers... and fancy dresses and dates... and candles and ponies and shit.\"\n\n\"S'not demeaning if I want it.\" She shrugged and nodded. \"But I know what you mean. Trust me, I really do.\" She made a face. \"But we'll have to workshop it, 'cause that all sounds like it'd be trying too hard to fit someone else's script. Plus, you know, fancy dresses wouldn't fit me right, and I still can't wear heels for shit. And I've got nowhere to keep a pony.\"\n\n\"We'll work on it.\"\n\n\"Ok.\"\n\nA last kiss, then I had to go. We couldn't linger forever, much as I might want to.\n\nI sat quietly next to Dad on the ride home. I saw him glancing at me, but I didn't acknowledge his curiousity until I had to.\n\n\"She seems like a nice girl,\" he said.\n\n\"She is.\"\n\n\"Have you, uh, been seeing her long?\"\n\n\"Not that long, really. But I guess it's getting there.\"\n\nThere was another lengthy silence between us before he spoke again.\n\n\"If you ever need money or anything. To take her out...\"\n\n\"Thanks, Dad.\"\n\n\"And, uh...\" He coughed. \"I want you two to be safe.\"\n\n\"Dad!\"\n\n\"I'm not saying you're anywhere near there yet. But I--\"\n\n\"Please stop.\"\n\n\"--don't want any unexpected surprises. That's all.\"\n\n\"Please, please stop.\"\n\n\"There's--\"\n\n\"I'm begging you!\"\n\nDad cleared his throat, sounding as uncomfortable as I felt, and mercifully let the subject drop. \"Just let me know if you need anything,\" he said as we got out of the car. \"Not even about that. But, like, anything.\"\n\n\"Yeah. Sure. Thanks. I'm, uh, gonna go try to forget this conversation happened.\"\n\nHe nodded. \"Yeah. Me too, I think.\"\n\nLater, lying in bed, I toyed with the idea that Kylie might well be thrilled that my dad was worried about her getting pregnant by accident. There was an almost equal chance she'd be as horrified as I was. Maybe both, for that matter.\n\n****\n\nI got to see Kylie again at school a couple days later. She was, rather adorably, waiting for me at my locker. The way her face lit up as I approached made me all tingly inside.\n\n\"Well hello,\" I said.\n\n\"Hey.\" Kylie squirmed a bit in anticipation, then darted in for a kiss when I didn't immediately provide one. It dragged out longer than either of us meant it to, but we had to break it off pretty quickly anyway. We didn't have much for privacy. As it was, we'd already attracted some looks. \"Missed you,\" she whispered, hiding behind me as best she could as a shelter from prying eyes.\n\n\"Me too. Actually got excited to be back to school. Which is kinda crazy.\"\n\n\"Isn't it though?\"\n\n\"Pretty much, yeah.\"\n\nShe grinned at me and leaned back against the neighbouring locker while I opened mine up and figured out what I needed for the morning.\n\nWe dawdled on our way to first period, but still got the point where we needed to split up too soon. There were too many people going by for anything terribly intimate, but we managed to sneak a quick kiss around a corner before parting. I was getting kind of addicted to her lips.\n\nI'd only just started walking again, after admiring the sight of Kylie walking away, when I felt a hand on my shoulder. I jumped, but whirled only to find the smirking face of Andrea beside me. Jess was on her far side, looking somewhat amused, but not as obviously so.\n\n\"Look at you go,\" Andrea said.\n\n\"Go where?\" I asked, trying to ignore their stares.\n\n\"She's so into you,\" Andrea continued.\n\n\"He's into her too,\" Jess added.\n\n\"Well yeah, of course,\" Andrea said. \"It's kind of adorable.\"\n\n\"I'm not really in the mood for being teased,\" I said.\n\n\"Who's teasing?\" Andrea asked. \"I think it's great.\"\n\n\"It's fine,\" Jess added, quite a bit less enthusiastically.\n\n\"That's nice,\" I said. \"Now can I--\"\n\n\"You two a couple now?\" Andrea interrupted as though I hadn't even been speaking. \"You really looked like you were just now.\"\n\n\"Does it matter?\"\n\n\"I'm curious. That's all.\"\n\n\"Uh huh. Well we are, ok? Can we drop it now, please?\"\n\nAndrea nodded. \"Sure. I gotta go this way anyway,\" she said, nodding down a side hall. \"Catch you later.\"\n\n\"Sure,\" I muttered. \"Later.\"\n\nJess kept tagging along with me, presumably still headed in the same direction. She was quiet at first, which I appreciated, but that didn't last.\n\n\"So it really doesn't bother you?\" she asked in a low voice.\n\n\"What doesn't?\" I asked, fearing I knew exactly what already.\n\n\"Who Kylie used to be?\"\n\n\"I never knew her from before I moved here. You know that.\"\n\n\"Yeah, but... you know.\"\n\n\"Does it bother you?\"\n\nJess flinched. \"A little. Sometimes. I don't want it to. But I dunno.\"\n\n\"You know it's been harder on Kylie than anyone else, right?\"\n\n\"Yeah. I do.\" Jess shrugged. \"But I don't know what to do about any of it.\"\n\n\"It's not really about doing anything. In a sense.\"\n\n\"Maybe. I guess.\" Jess gave me a faint, crooked smile. \"Ben's been less of an asshole since you kicked his balls in. That was kinda funny.\"\n\n\"Glad to hear it. I think.\"\n\n\"Just saying. They say violence never solves anything, buuuttt...\"\n\n\"I could give you a good swift kick if that would help.\"\n\nJess took a quick step away from me. \"No thanks. But... I appreciate the offer?\" She shook her head. \"Actually no. No I don't.\"\n\n\"It's a proven tactic.\"\n\n\"Yeah, still no.\"\n\n\"'K then.\"\n\n\"'K.\"\n\n\"I'll, uh, see you around?\"\n\n\"Yeah. Sure.\"\n\n****\n\nKylie was equal parts horrified and amused. Possibly leaning slightly toward the amused side, thankfully.\n\n\"Dude! That was a joke. You can't just go around threatening to kick girls in the pussy!\" The smile on her lips belied her attempt at chastisement.\n\n\"I didn't. It was just... it was the way the conversation went.\"\n\n\"Uh huh. Sure.\"\n\n\"Besides, things are fine. If anything, people are being more cool about everything since I got suspended.\"\n\n\"People respect a cause worth kicking someone in the dick over, I guess,\" Kylie said almost sincerely.\n\n\"Ah. So that's the solution after all.\"\n\n\"Well... I wouldn't say that.\"\n\n\"No. No, probably not.\" I leaned back on the table we were sitting on. Our usual one. \"I might have to go sit with the group again. See how things are. I kinda half thought I was done with them, generally. But I dunno.\"\n\n\"They're your friends, dude. You should.\"\n\n\"I mean, close as I got, anyway. I'd still rather be hanging out with you, given the choice.\"\n\n\"'Course you would. I sucked you off. Only makes sense to stick close.\"\n\nI laughed. \"Ha, yeah. That does bias me. Though you didn't do much sucking. Made me fuck your face, mostly.\"\n\n\"You complaining?\"\n\n\"Not hardly. Just saying.\"\n\n\"Well... maybe next time I'll let you take it easy.\"\n\nI perked up. \"And when do you think next time is going to be?\"\n\n\"Depends. What you doing after school?\"\n\nI groaned. \"Don't say that.\"\n\n\"What?\"\n\n\"I gotta go home right after. Still kinda in trouble. Sorta.\"\n\n\"Oh. Parents home too?\"\n\n\"Mom probably will be.\"\n\n\"Oh.\"\n\n\"Yeah.\"\n\nKylie pushed her hair back behind her ear. She appeared deep in thought, concentrating hard. I kinda liked that look on her. Particularly given the subject matter of her thoughts.\n\n\"Doesn't make it easy,\" she mused.\n\n\"We could maybe make it work, I guess. Technically, we didn't really have a great situation last time, and that went ok.\"\n\n\"Your mom saw us making out!\"\n\nI nodded. \"True. And I'm not totally sure if they'd let us be, or insist on interfering in some way. Still, though. Options.\"\n\n\"Yeah. I'll have to think about it some more.\"\n\n\"Can't wait to get at my dick again, huh?\"\n\nKylie punched me lightly on the shoulder. \"Don't tease. I actually do wanna, like, do more stuff. S'not like you don't.\"\n\n\"No, I definitely do.\"\n\n\"Then you should be more polite.\"\n\n\"Should I? I kinda feel like I'd have even better results just, like, dropping my pants and grabbing a handful of your hair.\"\n\nKylie bit her lip and shook her head. \"I hate that you're not wrong,\" she said softly.\n\nI snorted. \"See, I'm figuring you out.\"\n\n\"But you'd still feel too guilty to actually act on it, wouldn't you?\"\n\n\"Probably, yeah. Doesn't mean I don't know.\"\n\n\"Yeah.\"\n\n\"Yeah.\"\n\n****\n\nWe took the first chance that presented itself. We were horny and impatient, and ready to jump at opportunities.\n\nIt was a flimsy pretext. Kylie came over to my place to study for a history test together, so our story went. It was a valid enough excuse, even if our intentions were less than noble.\n\nMom kind of headed us off at first by cheerfully offering the dining table for us to work at. She knew what she was doing. There was no way she didn't. But I couldn't insist that we wanted to go to my room for makeouts and possible sexy times. Not without totally embarrassing Kylie and risking a flat rejection from Mom.\n\nSo we waited and actually got some studying in, which wasn't the worst thing. Mom did her best to pretend she wasn't keeping a close eye on us, but wasn't nearly so subtle as she thought. Or, perhaps, it was just super obvious to me because I was waiting for an opening that just wasn't coming.\n\nOnly after supper did we get some freedom to play with. We'd had to move our school stuff to get it out of the way for serving food, which allowed a perfect excuse for ditching it in my room and then returning afterward. Somehow, in spite of her earlier watchfulness, Mom didn't seem to catch on to our passingly cunning plan.\n\n\"Was it just me, or did your mom really not want us sneaking off for alone time?\" Kylie asked as we barricaded ourselves in my bedroom.\n\n\"Not just you,\" I assured her. \"Don't know why she'd have a problem with it though.\"\n\n\"Contractually obligated, I think. Not s'posed to let your kids discover sexuality in a healthy and stress-free way.\"\n\n\"Oh yeah. That sounds about right.\"\n\n\"It does, doesn't it?\"\n\nI nodded and followed Kylie to my bed. \"Luckily she slipped up.\"\n\n\"Mmhm. Lucky.\"\n\nWe giggled and fell into bed together. Our lips locked, our legs tangled together, and our hands sought out fun places to grope and fondle. I'd been anticipating this moment for a while, and it didn't take me long to get painfully, needily hard.\n\nKylie gave more and more attention to my cock. She rubbed the bulge in my pants, pressing her hand firmly against it as I rubbed back against her. I knew she wanted it, and I so wanted to let her have it.\n\nBetween the two of us, we managed a chaotic, disorganized team effort of undoing my jeans and getting them down my legs, where I could eventually kick them off.\n\nMy boxers were easier. Kylie followed them down, tearing them past my ankles and releasing them so they landed behind her in the middle of the floor. Her eyes locked onto my erection as soon as it was visible, only flicking up to meet my gaze for a brief second as she positioned herself between my legs.\n\nI sat up and scooted to the edge of my bed, delivering my cock to Kylie's hungry mouth. She didn't dive straight on it, though I'd halfway expected she would. All she did at first was give it a kiss, then wrap her fingers lightly around my pulsing shaft.\n\n\"You're so hard for me,\" she cooed happily.\n\n\"Yeah I am.\"\n\nKylie softly licked from the middle of my cock right to the tip. \"Are you too excited? I was gonna take care of you, but you could fuck my mouth again if you want.\"\n\nI groaned. \"I'm actually tempted. But, uh, I'd kinda like you to. Please?\"\n\nShe grinned. \"Of course. I've wanted to try this too, you know.\"\n\nShe licked me again, holding impressive eye contact as her tongue caressed me. She manipulated her fingers carefully to stay out of the way as she experimented with different tongue strokes and areas of contact. In between licks she'd give occasional little strokes of her fist, but mainly she just wanted to lick me for a while.\n\nI got all squirmy under her teasing affections. Precum leaked freely from my cock, and Kylie was very attentive about cleaning it up as it appeared. She was driving me kind of crazy with her attention to detail, and the certain knowledge that she was enjoying herself as much as I was. Maybe more than I was, somehow. Her eyes were happy, full, and going somewhat glazed the longer she played with me.\n\nIt only got better when she finally took me in her mouth. She still only teased, just barely popping me in and sucking a bit, then releasing and giving me a few strokes, alternating licks and kisses with further oral penetration.\n\nKylie's technique refined somewhat as she figured out what I liked, what made me moan or wiggle, or sometimes thrust involuntarily toward her mouth. She liked getting reactions from me. I played them up a little for her benefit, but I didn't need to do much. She would have gotten the responses she wanted whether I gave them deliberately or not.\n\nI was completely at her mercy. She worked me with her mouth, her soft lips and wet tongue utterly enthralling me. It was a hold I couldn't break, nor indeed did I have any desire to do so.\n\nMy cock sank gradually deeper inside her. I knew how deep she could take me. All the way, if she wanted. But she was in no hurry to show off again. I was getting antsy, wanting her to do it, to take me in her throat, to embrace the entire length of my cock within her. She was taking her own sweet time about it.\n\n\"Deeper,\" I urged.\n\nKylie pulled away, a trail of spit connecting us for a moment after her lips left my cock. \"You wanna be in charge, we can go as deep as you want,\" she offered.\n\n\"Uh, no, that's ok.\"\n\n\"You sure? I don't mind.\"\n\n\"I like you doing your thing.\"\n\n\"Me too. It's fun. But you're gonna just have to deal with me doing it how I want. And it's gonna be slooowww.\"\n\n\"Tease.\"\n\n\"Ingrate.\"\n\nI ran my fingers through Kylie's hair as she resumed sucking on me. \"I'm very grateful,\" I assured her. \"You feel so amazing.\"",
        "Her cheeks flushed and she took me deeper, nearly throat-depth. She bobbed her head faster as an excuse not to look directly at me for a moment.\n\n\"So amazing,\" I repeated softer.\n\n\"Like a slutty girl?\" Kylie asked, pausing briefly to nuzzle my cock while she spoke.\n\n\"Is that what you want to be?\"\n\n\"Kinda. For right now.\"\n\n\"Then yeah. Like a slutty, cute, great-at-blowjobs girl.\"\n\nThe eyes Kylie made at me while sliding her face down my cock once again just about made me melt.\n\n\"Your slutty little mouth feels so good,\" I continued. \"Way too good. Like this is what it was meant for.\"\n\nKylie growled deep in her throat, then proceeded to try and stuff me just as deep as the sound had come from. She tried to go too fast, however, and choked herself on me a bit. Her follow up, somewhat slower attempt was more successful.\n\nMy eyes rolled back and a happy sigh slipped from my lips as I felt the comforting embrace of Kylie's throat around me. It was a feeling unlike any other. Unique even when compared to her other oral techniques. So tight, so snug and warm, and she was clearly proud of her ability to take me like that. To deepthroat me like a porn star.\n\nKylie pulled back slowly, letting suction stall her out before she released my cock entirely. She throated me again a few times, up and down, using a smooth bob of her head, then worked the head again while stroking the base.\n\n\"Goddamn, Kylie,\" I breathed.\n\n\"Still good?\" she whispered before sliding all the way back down my cock, impaling herself balls deep on me.\n\n\"You have no idea.\"\n\n\"Hm mm?\" she moaned around the length of my cock, holding it totally inside.\n\n\"So fucking good,\" I said. \"How are you so good at this?\"\n\nKylie wiggled her hips while beaming with pride, partly translating the movement to her head. She bobbed back and forth some more, getting more aggressive in her attack on my cock.\n\n\"You're gonna make me cum,\" I said.\n\nHer tongue danced along the underside of my cock. Her eyes somehow seemed to get bigger and more intense.\n\n\"I'm gonna cum in you,\" I said. \"Right down your throat.\"\n\nKylie nodded, or tried her best to anyway. Her tightly suctioning lips slid back and forth on my cock, milking it, waiting for the final payoff. She was so eager for it. Again, rivaling my own interest, which should have been the more obviously immediate between the two of us.\n\nShe went wild on me toward the end, knowing I was close, sensing victory. She gagged a few times from going so hard and fast, but didn't let that stop her. My cum was going to be hers, and no amount of choking and drooling was going to stop her now.\n\nI tensed, grunted, then exploded in Kylie's mouth. My cum flooded her tongue while she jerked me and swallowed everything I gave her. In spite of the spit running between her lips and down her chin, she didn't spill any cum at all.\n\nA final kiss and little lick of the tip of my cock, cleaning the last of my mess, then Kylie sat back on her heels. She was panting and disheveled, but also glowing and contented with herself.\n\n\"Goddamn you do that well,\" I said, fighting the urge to fall backward and just lie there.\n\n\"Practice,\" Kylie said. \"Just imagine when I get experience with you, not just my toy.\"\n\nI groaned. \"I'll never last.\"\n\n\"Don't act like you wouldn't enjoy every second.\"\n\nI grinned. \"You're damn right I would.\"\n\nShe crawled up beside me. I lay back while she curled up next to me. We just watched each other for a moment.\n\n\"I like seeing you like that,\" Kylie said softly.\n\n\"Like what?\"\n\n\"Helpless. Feeling good. Looking at me like you never want me to stop sucking you.\"\n\n\"Still feeling slutty?\"\n\n\"Maybe. Kinda.\" Kylie squirmed. \"Maybe like your good little slut.\"\n\n\"My good girl.\"\n\n\"Or bad girl.\"\n\n\"Both. Either.\"\n\nShe stretched out. \"I know you don't like it, but it helps me feel right.\"\n\n\"It's not that I don't like it. I'm just not convinced it's the healthiest way to feel like you're expressing yourself.\"\n\n\"Probably isn't. Still like it though.\"\n\nI nodded. \"Me too. Mostly.\"\n\n\"I bet. If I got you thinking with your dick more, we'd be all set.\"\n\nI snorted. \"Yeah. That's the solution.\" I studied Kylie. She was lying on her back, not looking at me anymore, just lounging and basking in the aftermath of a job well done. More at ease than she often was, unfettered by usual concerns. And yet, I couldn't help wondering if she really was as relaxed as she appeared. \"Hey, Kylie?\"\n\n\"Yeah?\"\n\n\"Like, that was great--\"\n\n\"Thanks.\"\n\n\"--but do you still need... some attention?\"\n\nShe tensed, relaxation fading away. \"Don't ask that.\"\n\n\"Why not? I don't want this to be all one-sided and shit.\"\n\n\"It's not.\"\n\n\"It kind of is. I could, you know...\"\n\n\"No. You know I still don't have the right parts.\"\n\n\"Yeah, I know.\"\n\n\"So you can't do stuff for me,\" she said matter-of-factly. \"That would turn you gay.\"\n\n\"Kylie!\"\n\n\"Sorry, sorry. Bad joke.\" She sighed heavily. \"But for real. No.\"\n\n\"You're not horny at all?\"\n\n\"Of course I am. But first of all, it's much trickier to deal with than you are.\"\n\n\"I--\"\n\n\"Secondly, I'm not ready for you to see that part of me.\"\n\n\"Even if--\"\n\n\"I know you know, Carter. But, like, that's different from letting you down there.\"\n\n\"Yeah. I guess.\"\n\n\"You're getting a good deal here. Don't complain.\"\n\n\"I know that's another joke, but for real, I'd like to make you feel good sometime. It's not really about what, uh, parts you have.\"\n\n\"Ideally, sure. But I'm not there yet. Maybe never will be. And can you even imagine if it turns out you aren't either, and then it's all you can think about?\" Kylie shook her head. \"No. Not happening.\"\n\nI nodded acceptance and rolled toward her, wrapping my arms around her, helping the tension I'd caused to melt away again. \"I guess it's not such a bad deal getting blowjobs in exchange for cuddles.\"\n\n\"You're making out alright, here,\" Kylie said. \"Trust me.\" She snuggled closer against me, nuzzling her face to my shoulder. \"And don't think I'm not either,\" she added near silently.\n\n****\n\nIt was tricky finding times and places for being naughty. Sneaking around at my house was often our best bet, and even that depended pretty heavily on some luck to provide us a good opportunity.\n\nEverything else was much easier. Hanging out, sitting close, walking together and holding hands, talking, cuddling, whatever. It was all good. We didn't have much for exciting dates, but we found plenty of time for ourselves when we wanted it. Just not the sexy stuff so much.\n\nIt wasn't the worst thing in the world to have to wait. It might have felt like it was at times, but having to be patient had its upsides. Mainly in adding to the excitement when we did have our secret chances. There was nothing quite like the thrill building up to being alone with Kylie, and knowing exactly what she was going to do to me once we made it.\n\nI still felt bad that I couldn't reciprocate Kylie's oral pleasures. It was her choice, of course, but I felt a little greedy about it even so. Not that it was a chore for her. She was happy to do it, and probably initiated it more often than I did. Not to mention the devious enjoyment she got from getting me right where she wanted me, and doing basically whatever she wanted. There was no question who was in control once her mouth was wrapped around my cock. Even on those instances where she wanted me to face fuck her again, even when she was a sloppy, panting mess, it was all very much at her own whims.\n\nWe didn't often get quite so aggressive as that. Mostly that seemed to just be so Kylie could prove something to herself. Something not entirely logical, from my perspective. I'd noted something of a correlation between high emotions and wanting some rougher action. It was an odd form of calming exercise, but whatever worked, I supposed.\n\nPerhaps the culmination of our stupid, sneaky, sexy times came when Kylie started sucking me off in the middle of movie night. Which was to say, we'd been cuddling on the couch in my living room, mostly being good since parental oversight was a bit of an issue. But neither of us really wanted to be good.\n\nKylie was bolder than I was. I assumed we'd have to get to my room undetected somehow. She recognized the opportunity of my mom taking a phone call for what it was. Dad, as per usual, was taking a more hands off approach anyway.\n\nKylie attacked my pants before I was even aware what she was thinking. I whirled my head around to make sure we were alone, torn between fending her off and really, really wanting her to keep going.\n\n\"What are you doing?\" I hissed.\n\n\"What does it look like?\" Kylie answered without looking away from her task. \"I wanna suck you off.\"\n\n\"Not here.\"\n\n\"Why not?\"\n\n\"We might get caught.\"\n\n\"So? We always might get caught. It's not like we have a place of our own to go to.\"\n\n\"I mean, more so than usual.\"\n\nShe shrugged. \"Enh. It'll be fine.\"\n\nOnce she had my cock in her grasp, giving it little licks to get it all stiffened up, I found it hard to argue.\n\nKylie managed to lie down in an only slightly awkward position, head in my lap, gently licking and sucking on my erection while still keeping an eye on the movie. I was far too engrossed in watching her to pay much of any attention at all to the scenes on screen.\n\nIt was going to be one of those times where Kylie was in no hurry at all. I could sense it already. She had her mouth positioned so that she could lick and suck it from the side, but not actually dive on top of it, and didn't seem to want to change that yet. She was happy just using me as a toy, something to keep her mouth idly busy.\n\nI stroked Kylie's hair, sometimes drifting my hand down to her tits to play with them for a while. I tried to relax and enjoy it, since it was genuinely a pretty good time, so long as I didn't get too horny and impatient. There was no way to help myself from feeling some general apprehension about Mom or Dad stumbling upon us in such a compromising position, though.\n\n\"Maybe we should have a place of our own,\" I mused.\n\nKylie hesitated. \"Like what?\"\n\n\"Like a place. You know. An apartment. Or something.\"\n\n\"We can't afford that.\"\n\n\"No, but we're gonna have to get jobs sooner or later anyway.\"\n\n\"Hm. Maybe.\" Kylie sucked thoughtfully on the side of my cock for a moment. \"I kinda like the thought, I guess. But you know you're, like, low-key asking me to move in with you.\"\n\n\"I am essentially aware, sure. I'm not saying we're ready. But it's maybe something to think about. Eventually.\"\n\n\"Yeah. Eventually.\" More thoughtful sucking. \"I know I'm not ready for it yet.\"\n\n\"No worries. Pretty sure I'm not either.\"\n\n\"Good.\"\n\n\"Good.\" I shrugged. \"But we're stuck doing stupid shit like this until we have a better solution.\"\n\n\"Hey, they're your parents. It's more of a problem for you, really.\"\n\n\"Oh is it? Who was the one all embarrassed that one time Mom caught us making out?\"\n\n\"... both of us?\"\n\n\"You more than me, I believe. And you're only just getting to the point of not panicking about them being able to tell you just blew me afterward.\"\n\n\"Well... yeah.\" Kylie squirmed. \"But how else am I s'posed to get your dick without being a little risky?\"\n\n\"I don't know. That's the point.\" I tickled her ear. \"And aside from that, how come we haven't done stuff at your house yet, hm? Why are we always risking my parents?\"\n\n\"You saying you want to meet mine?\"\n\n\"Well... kinda?\"\n\n\"You can if you want. But it's not gonna solve anything. They wouldn't know what to do with me bringing home a boy.\"\n\n\"Oh, but, like...\"\n\n\"I mean, maybe it'd be fine. Maybe they'd cheerfully send us up to my room for sexy times. Just doubt it somehow.\"\n\n\"Sure. I guess.\"\n\n\"It's complicated, you know?\"\n\n\"Yeah. I get that.\"\n\nWe had to scramble a bit at approaching footsteps. We got a blanket over my lap and Kylie cuddled up with her head on my shoulder instead of strategically next to my cock. Dad walked in, rummaged around on his bookshelf for a moment, then left again without more than a casual glance our way. Which was good because Kylie had her hand wrapped around me under the blanket that so flimsily covered my partial nudity, and I didn't feel like I was maintaining a particularly good facade.\n\nKylie waited and checked over her shoulder a few times to make sure we were alone again before throwing the blanket off my lap and jerking me slowly, watching her hand's movement with an odd fascination.\n\n\"I really don't know what they'd think about me bringing you home,\" she said.\n\n\"So you said.\"\n\n\"I halfway think they'd still expect you to be a girl.\"\n\n\"Uh...\"\n\n\"Not you specifically. But, like, whoever it was.\"\n\n\"Oh.\"\n\n\"Yeah.\"\n\n\"Because--\"\n\n\"Because as hard as they try, I don't think they're quite over me being their little boy.\"\n\n\"Shit.\"\n\n\"Yep.\" Kylie sighed and put more energy into her handjob for a moment, distracting herself by sliding her grip and up and down on my rather bemused cock. \"They do try,\" she said softly. \"But they're the older generation. Some things don't come as easy to them.\"\n\n\"Sorry.\"\n\n\"Nah, it's fine. Coulda been a lot, lot worse.\" She shrugged. \"But I'm not ready to try introducing you. I guess that's the point, really.\"\n\n\"Could just say I'm a friend.\"\n\n\"For the purposes of sneaking you to my room? I can't help feeling like that would create more problems than it solves.\"\n\n\"Maybe. I guess.\"\n\nKylie grinned and leaned in to kiss my cheek. \"Worried you're not gonna get enough alone time with my mouth?\" she murmured into my ear.\n\n\"I wouldn't say that.\"\n\n\"I think you would. You want more places we can sneak off together, don't you?\"\n\n\"Kinda. But, like, it's just getting awkward always coming to my place. Mom and Dad gotta be figuring out there's a reason we aren't hanging out in more public places.\"\n\n\"Maybe. Maybe not. You never can tell with parents.\"\n\n\"No. That's true.\"\n\nKylie ruffled my hair. I slipped my hand up her shirt in response. She squealed, cutting herself off as soon as she realized how loud it was, and how likely to attract attention. It didn't stop me from getting a good feel of her tits before she lowered herself back to my lap.\n\nShe wasn't entirely wrong about me wanting more time with her soft lips wrapped around my cock, suckling gently but persistently at me. Or her throat snugly and somewhat messily enfolding me. Any form of oral attention, really. They were all fun.\n\nI wanted to do more than that, too. But I was pretty severely limited by what Kylie was ok with. I was pretty sure she'd drop to her knees for me at the merest request, but letting me play with her was still a whole other thing. Anything lower than her tummy was risky.\n\nAlthough...\n\nIt occurred to me that I hadn't really tried playing with Kylie's butt all that much. I'd grabbed it a bit, but had always been hesitant to push too hard. In a sense, there shouldn't be any reason she wouldn't want more attention there. But that was only theoretical.\n\nI dragged my fingers past Kylie's shoulder and down her back. My nails skimmed across her shirt, up and down her spine, getting a feel for her reaction to my touch. There wasn't really much of anything yet.\n\nMy palm flattened out until I was giving her a slow back rub. Nothing too fast or hard to distract from her sucking me off, but straying ever nearer to her butt.\n\nEventually, I moved my hand to Kylie's ass in one smooth motion, cupping it through her jeans. She gave just the smallest little moan, but didn't let it interrupt the way she was sucking on my cock. That was a good sign. I'd gone this far before, gotten some sneaky feels in, so I hadn't been expecting much reaction yet either way.\n\nIt was more a question of whether she'd let me keep playing, squeezing, and exploring. I grabbed a handful of Kylie's bum, massaged it gently, then rubbed a different area. I ran my hand everywhere, even down between her thighs just as far as I dared, as far as I could safely expect to get before hitting the danger zone.\n\nKylie tensed when I ventured too close to her unwanted cock, but otherwise seemed quite happy to have me groping her ass. I learned where the borderline was, and as long as I stayed on the right side of it, I pretty much had all the leeway in the world. Rubbing, squeezing, groping, massaging, it was all good. I even got some excited growls from deep in Kylie's throat when I tried lightly spanking her butt. The harder the slaps got, the more she wiggled and made noises, and even got more aggressive with her cock sucking.\n\nShe looked up at me, taking a quick break from her blowjob. Her eyes were shining and full, and she was panting softly through lips streaked with saliva that she hadn't cleaned up.\n\n\"Careful,\" she said. \"You make too much noise, we're gonna get caught.\"\n\n\"Hm, you're right. Maybe I shouldn't spank you.\"\n\n\"Well... I didn't say that.\"\n\n\"But you didn't want us to get caught, right?\" I punctuated the question with another slap of her ass.\n\nKylie bit her lip, said nothing, then went back to work, taking half my cock inside her mouth in one calculated bob of her head. Clearly the risk was not so great that she was going to let it stop the fun.\n\nWe both just got hornier the longer we played our stupid, sexy game. I didn't want to stop playing with Kylie's butt, and I definitely didn't want her to stop sucking me. Even though I couldn't see inside her head, she pretty obviously was on the same page. Her ass was all wiggly under my rubbing and caressing, and she was making some very aroused noises deep in her throat.\n\nSomehow, we both had enough resistance to last until almost the end of the movie, to which I'd paid almost zero attention. Kylie got her patiently earned mouthfuls of cum, and I got the sweet release she'd built me toward and which I so desperately needed by that point. I sighed and let myself flow into her, to be swallowed down sensually and maybe just a little sluttily.\n\nWe had some time to cuddle just as we were before the credits rolled, at which point we either had to move or put on another movie, else it'd be way too obvious that we had no interest at all in what we were ostensibly watching.\n\n\"You all horny?\" I whispered.\n\n\"It's pretty fucking bad,\" Kylie answered.\n\n\"And you're not gonna let me--\"\n\n\"Definitely not.\"\n\n\"Didn't think so.\"\n\nKylie sat up and kissed my cheek. \"Maybe someday.\"\n\n\"Yeah. Maybe.\"\n\n\"I probably should, uh, hit the bathroom though.\"\n\n\"Ooh, hornier than usual.\"\n\n\"I told you it was bad. You and your groping me that whole time.\"\n\n\"That's what does it for you, huh?\"\n\n\"One of the things, sure.\"\n\nKylie left, moving somewhat awkwardly. It was the same kind of weird motion I'd used more than once. I couldn't see the reason for it, but I knew precisely what it was.\n\nI sighed and lay down while awaiting her return. It was weird to me to think that Kylie was probably--almost certainly--jerking off in my bathroom. I knew she had a cock still, but I couldn't properly picture it. It didn't seem to fit. Which was, I supposed, the whole point.\n\nShe didn't want me to be able to imagine it. Didn't want me to really, viscerally know. And maybe I didn't actually want to either. But it kind of hurt that she might never want to share all of herself with me. It was her decision to make, and might be the right one, but that didn't mean I had to like it.\n\n****\n\nIt poured rain a few days later, practically all day. It made for one of those rare lunch periods where Kylie and I couldn't hang in our usual outdoor spot. That wasn't overly unusual by itself.\n\nSomehow, though, without ever consciously intending to, Kylie and I spent most of lunch with Andrea, Rob, Jess, and a few others. They just kind of kept trickling over to the table Kylie and I had tried to pick off in a corner away from anyone's attention. It didn't work overly well.",
        "Ben showed up for a while, staying at the far end of the table and not settling in overly long before heading off again. We didn't really talk at all while he was there, and Kylie studiously ignored him, but it was something. Awkward, but at least not overtly hostile or aggressive on anyone's part.\n\nI could sense Kylie getting kind of restless next to me, and I couldn't blame her. Neither of us had been expecting company. Holding her hand under the table seemed to help some.\n\nToward the end of lunch, Kylie excused herself to hit the bathroom. I nodded and watched her slip away, then turned back to find Andrea giving me a concerned look from across the table.\n\n\"Kinda freaked her out, didn't we?\" Andrea said.\n\n\"I think so, yeah,\" I said.\n\n\"Sorry. That wasn't the intent.\"\n\n\"No, I know. But, uh, what was the intent?\"\n\nAndrea shrugged. \"I don't know. I can't speak for everyone, but a few of us have been missing you. You won't hardly sit with us anymore.\"\n\n\"Yeah, I've, uh--\"\n\n\"Been busy. I get it.\"\n\n\"That and I honestly didn't think anyone was gonna care.\"\n\nAndrea tilted her head and raised an eyebrow.\n\nI winced. \"Sorry, that kinda sounded harsh.\"\n\n\"Just a little.\"\n\n\"I might have issues.\"\n\n\"Don't we all?\" Andrea murmured thoughtfully. She nodded in the direction Kylie had left. \"Better go catch up. She clearly just wanted an excuse to leave.\"\n\n\"Yeah, uh... yeah. I should.\"\n\n\"You two can both hang anytime,\" Andrea said as I pushed to my feet. \"Don't be a stranger.\"\n\n\"I'll keep that in mind.\" I forced a smile. \"Thanks.\"\n\n\"Seriously. Go.\"\n\n\"Right.\"\n\nI didn't know exactly where Kylie had gone, but I got kind of lucky and stumbled on her just coming out of the nearest bathroom. I took her hand and kept walking with her in a gesture smooth enough to even surprise me at the execution of it.\n\n\"Goddamn I need a smoke,\" Kylie muttered. \"Fucking rain.\"\n\n\"Fucking rain,\" I echoed. \"Sorry about the ambush.\"\n\n\"No. It's fine. It was kinda nice of them. I think. It's just me being a mess.\"\n\n\"A sexy mess?\"\n\n\"Stop that.\"\n\n\"Sorry.\"\n\n\"They were mostly there for you anyway. 'Cause I stole you away and all.\"\n\nI snorted. \"Yeah, right. That's what happened. Still, it actually was kinda nice that anyone cared.\"\n\n\"You've been hanging with them all year. Bound to make an impact.\"\n\nI sighed. \"Maybe. I guess. It's all so confusing sometimes.\"\n\n\"Isn't it just.\"\n\nWe happened upon a secluded stretch of hallway, no one immediately in sight. Kylie pulled me in, trapping herself against the wall with my body, and wrapped her arms around my neck for a kiss. Our lips lingered in their comforting embrace.\n\n\"Woulda been so much easier if we both coulda finished the year with no one giving a shit, huh?\" Kylie whispered.\n\n\"Easier, sure. Not better though.\"\n\n\"No. Not better.\" Kylie pulled back, an enigmatic smile teasing her lips. \"Got some fun news, though. Was saving it for later, but...\"\n\n\"What is it?\"\n\n\"Well... my parents are kinda, like, out of town this weekend.\"\n\nIt took me a second to process the implication, but the mischievous look Kylie was giving me left no doubt as to the correctness of my final assumption.\n\n\"Are they really?\" I asked while sliding a hand down to Kylie's butt.\n\n\"They are.\"\n\n\"That must be... lonely for you.\"\n\n\"Very.\"\n\n\"I'll have to come keep you company.\"\n\n\"Yes,\" Kylie said decisively while wiggling her ass beneath my sneaky groping. \"Yes you will.\"\n\n****\n\nI got embarrassingly nervous and excited as the weekend approached. Some proper alone time with Kylie. Something we hadn't had basically ever. Not for real.\n\nAlong with the possibility of true privacy came my imagination running wild and thinking of what we could do with such power. My thoughts were almost universally dirty, of course, but there were a few more platonic ideas in there occasionally. Even if we didn't really get any sexier than we usually did, it'd be nice just to chill by ourselves for a while.\n\nI sensed disaster just before leaving for Kylie's house that Saturday. I'd tried not to give anything away, nothing about how we'd be left unsupervised for an indeterminate amount of time, but I worried I must have failed somehow when I walked downstairs and ran into my parents before I could make it out the door.\n\nMom had a frown of concern on her face. Dad just looked super duper uncomfortable.\n\n\"Are you about to tell me I can't have a car for the weekend?\" I hazarded, trying my best not to let my excited optimism falter. \"You said I could.\"\n\nMom and Dad exchanged glances. My heart sunk further at the lack of immediate response. I had other options even if I couldn't have one of their cars for sneakily driving myself over to see Kylie, but it was unlikely that such a scenario happened in a vacuum of no other consequences.\n\n\"You're going to see... Kylie?\" Mom asked hesitantly.\n\nI sighed. \"Yeah. That was the plan.\"\n\nMom looked at Dad again, but he shook his head. \"Don't look at me,\" he said. \"This is your conversation.\"\n\n\"What is?\" I asked, even as I dreaded whatever answer might follow.\n\nMom took a moment to steel herself. \"Carter, sweetie, I've, uh, learned something about Kylie. From a friend. Something I think you should know.\"\n\nA moment of confusion and continued anxiety flashed through me, then a sudden calm. I almost felt amused, except that my tummy was still kind of fluttery and nauseous.\n\n\"She's trans,\" I said calmly.\n\n\"She used to be...\" Mom stopped, only belatedly processing what I'd said.\n\n\"I know,\" I said. \"You thought I didn't?\"\n\n\"Well... you never said anything.\"\n\n\"Why would I?\" I shrugged. \"Wasn't relevant.\"\n\n\"But... but... she's... you...\"\n\n\"Use your words, Mom.\"\n\nShe hesitated, folding her arms in a gesture nearly as uncomfortable as Dad still looked. \"If you're happy--\"\n\n\"I am. Thanks for worrying. I guess.\" I nodded toward the door. \"Can I go?\"\n\nMom didn't answer. I looked toward Dad. He clenched his jaw, then took a deep breath and relaxed it.\n\n\"She seems like a nice girl,\" he said.\n\n\"She is,\" I agreed.\n\n\"Keys are on the hook where they always are.\"\n\nI smiled, small and cautious, but genuine. \"Thanks, Dad.\"\n\nMom stepped aside for me, clearly not totally happy with the way the conversation had gone, but I wasn't sure there even was a good way for it to have happened.\n\n\"Don't stay out too late,\" Mom said softly as I passed.\n\n\"Oh, I almost certainly will,\" I replied cheerfully. \"See you tomorrow!\"\n\n\"That's not funny.\"\n\n\"Wasn't a joke.\"\n\nI grabbed the keys to Dad's car and scooted out the door before I could be called back to account for my glib exit.\n\n****\n\nKylie met me at the front door to her place. I was momentarily taken aback by her outfit, though very appreciative of it at the same time.\n\n\"Ooh, a skirt, huh? Don't see you in one of those very often. Or ever.\"\n\nKylie smiled shyly and did a small spin back and forth. \"I'm not usually brave enough. Does it look ok?\"\n\n\"Looks great to me. But why don't you take it off so I have something to compare it to.\"\n\nShe put her hands on her hips and cocked her head while giving me A Look. \"You goof. That's about the worst seducing you've ever tried.\"\n\n\"Yes, but imagine if it had worked.\"\n\n\"No thanks.\"\n\nKylie beckoned me inside and started showing me around. It was a somewhat wasted effort because I was still mostly watching her. Her skirt wasn't indecent by any means, but it was new on her, and somehow the way she moved in it attracted my gaze quite effectively.\n\nHer legs were bare beneath the skirt, excepting a pair of cute socks on her feet. Her top, while again not indecent, was tighter and less covering than I was used to on her, showing off more of her arms, shoulder, and neckline. I couldn't be sure about her choker, but it seemed like it might be new too.\n\nIt wasn't clear whether it was an outfit donned for my viewing pleasure, or whether Kylie was just trying something new while there wasn't going to be anyone else around. Maybe both, I supposed.\n\nOnce Kylie realized I wasn't paying any attention to the tour, she gave it up and led me to the living room. She sat me on the couch, then turned the tv on and got a show playing. I continued to mostly watch her. That skirt was oddly captivating, every twitch of it sparking interest in what lay beneath.\n\nShe sat down next to me, slipping under my arm for some close snuggles. It took us both less than five minutes for the show she'd put on to be made irrelevant background noise.\n\nWe feel easily into our practiced routine of making out and feeling each other up. It was exciting and liberating both to be somewhere new to me, fearing that we'd be caught, but knowing that actually had the space entirely to ourselves. I loved it.\n\nThe new thing for me was getting to slip my hand up Kylie's skirt. She'd never given me a chance to get into her pants before, but this time I technically didn't have to.\n\nGrabbing her butt through her panties was a whole different game to feeling it through her jeans. So much less in the way, such a warmer, closer, softer feel under my palm.\n\nKylie seemed totally fine with me getting just as obsessed as I wanted with my newfound access. She still didn't want me straying too far front, though. Not that I would have expected otherwise.\n\n\"You've kinda got a thing for my ass, huh?\" Kylie breathed in between kisses.\n\n\"I'm fond of it, yes.\"\n\n\"Mmhm. Fond. Right.\"\n\n\"I might... like it.\"\n\n\"Just like?\"\n\n\"... love? I love your ass?\"\n\n\"You don't sound sure.\"\n\n\"Well... I can't really be sure. This is the first time I've gotten to your panties, and I still haven't been under them.\"\n\nKylie kissed me again, softly biting my lip and tugging at it before releasing. \"You want more?\"\n\n\"Basically always.\"\n\nKylie repositioned herself and sat down firmly in my lap. I groaned as her body weight settled partly atop my cock. I could feel hers pressing against me too, but decided not to mention it.\n\n\"How's that?\" she asked.\n\n\"Better.\" I got both hands under her skirt, grabbing and massaging her ass from both sides. \"Definitely better.\"\n\n\"Good.\"\n\nAs I kept fondling Kylie, she started rocking back and forth, grinding in my lap. I moaned into her mouth as she found just the right spot to rub against me, and I used my grip on her bum to guide her back when she strayed from it.\n\nI managed to pull Kylie's panties down past her butt, exposing her bare cheeks to my continued explorations. I squeezed and caressed her ass to my heart's content, getting us both hornier and hornier in the process. Once I felt brave enough, I dipped a finger between her ass cheeks and felt out her butthole, pressing softly and drawing little circles around it. That more so than any fondling seemed to excite Kylie and get her all wiggly the way I loved.\n\n\"Bad boy,\" she chided softly.\n\n\"That's me.\"\n\n\"That's my bumhole.\"\n\n\"Sure is.\"\n\n\"You're not supposed to touch me there.\"\n\nI grinned. \"You don't seem to mind.\"\n\nKylie bit her lip. \"Maybe I don't.\"\n\n\"I think you want me to touch you there.\"\n\n\"Maybe I do.\" Kylie looked away for a moment while continuing to squirm as I anally teased her with my finger. \"Maybe I want more, too.\"\n\nMy eyebrows went up. \"More?\"\n\nShe nodded. \"More.\"\n\n\"Like...\"\n\n\"We're all alone, you know,\" Kylie said quietly. \"We could try it.\"\n\n\"And by 'it' you mean...\"\n\n\"You know what I mean.\"\n\n\"I think I do. I hope I do.\" My pulse was pounding hard and excited. \"But I don't want to guess wrong.\"\n\nKylie put her hand on my cheek, brushing her thumb across it. \"It'd be my first time,\" she said. \"And... and I think I really want it. Today. With you.\"\n\nI kissed her thumb as it passed my lips. \"Me too,\" I said breathlessly. \"To all of that.\"\n\nShe smiled, slow and shy at first, then blossoming quickly into something full and beautiful. She kissed me fiercely, but without lingering. \"You ready now?\"\n\n\"Hell yeah I am.\"\n\nKylie bounced off my lap and took my hand as soon as I stood up after her. She led me away at an impatient clip, her skirt falling back to cover her butt after an all-too-brief flash of her backside with panties pulled partway down.\n\nHer skirt was discarded almost immediately upon reaching her bedroom. She watched eagerly as my pants followed a similar path.\n\nI wanted to take a moment and survey the scene, but she was more compelling than anything else in the room. Especially with her skirt pooling down her legs to the floor, and her panties still not adjusted. She caught me staring back at her the same way she was looking at me, and quickly spun around to display her ass instead of her barely covered erection.\n\n\"You've got such a nice butt,\" I said.\n\n\"Thanks.\"\n\n\"It gives me... ideas.\"\n\nKylie giggled and slowly crawled onto her bed, exaggerating every movement. \"Good.\"\n\nHer panties bulged at the front. Her wanton pose--head lowered, butt sticking out toward me--didn't hide much. I was pretty sure there was even some precum leaking through.\n\nLuckily, her ass was still the most enticing thing in the room. It just simply wouldn't do to ruin the moment by focusing on the wrong area. She wiggled her bottom at me, drawing me in closer and closer until I was right on top of her.\n\nI reached for Kylie's panties and gave them a small adjustment, tugging them down just a little more to better frame her bum.\n\n\"Leave them,\" she said.\n\n\"I know. I'm not taking them off. Yet.\"\n\n\"Ever!\"\n\n\"We'll see.\" I discarded my shirt, then gently swatted Kylie's butt. \"Make some room.\"\n\nKylie shifted and positioned herself so I could get on the bed behind her. I grabbed her ass, kneading and spreading it much as I had before, only this time it was right in front of me and I could see what I was doing. Her cute little butthole actually twitched in nervous and excited anticipation. It was oddly hypnotizing just to watch it react to my caresses.\n\nI bent down and kissed Kylie's butt cheek. I had to hold her more firmly as she got all squirmy. It still wasn't enough when I swiped my tongue across her butthole and she moaned and wiggled even harder.\n\n\"Hold still,\" I said gently.\n\n\"I'm trying.\"\n\n\"I really don't think you are.\"\n\nKylie bit her lip and looked at me over her shoulder. Her hips settled down. \"It's hard.\"\n\n\"I bet.\"\n\nI licked Kylie some more, getting comfortable with tonguing her bum. Never having eaten anyone's ass before, I hadn't been totally sure I'd like it, but I really, really did. It tasted nice, and I loved the way she overreacted to every little thing. There was something delightfully fun and naughty about the whole thing, not to mention the promise of more yet to come.\n\n\"There's lube under the pillow,\" Kylie said softly.\n\nI frowned. \"Under your pillow? That's where you keep it?\"\n\n\"No. I keep it with my toys. I just... wanted it to be handy.\"\n\n\"Planning on seducing me this whole time, huh?\"\n\n\"Kinda, yeah.\"\n\n\"Well... I'm ok with that.\"\n\n\"Thought you might be.\"\n\nThere was, indeed, a half-full bottle of lube under Kylie's pillow. I hadn't given it much thought before, that she might have played with her butt quite a bit, but it took some of the pressure off anyway. I was pretty sure it'd be ok, but I wasn't overly familiar with butt play, outside of porn. Kylie already having experience was reassuring.\n\nAnd indeed, she very easily took a lubed finger. I was more hesitant about pushing it in than she was. It was tighter around my second finger, but again she took it nicely, and moaned as I delicately pushed my twinned fingers deeper inside her tight little bum.\n\n\"You're taking these pretty easy,\" I said.\n\n\"Is that bad?\"\n\n\"Not at all. I like it.\"\n\n\"I've kinda played with myself a bunch.\"\n\n\"Mmhm.\"\n\n\"But it woulda been nice if it was you all those times.\"\n\n\"Well it's gonna be now.\" I kissed just above where my fingers slowly thrust in and out. \"You're definitely ready for me.\"\n\n\"Hope so. I wanna be a good girl for you.\"\n\nA thrill ran up my spine. \"Kylie...\"\n\n\"Well I do. I want you inside me. And... and I want to be able to take you. I want it to be a good first time.\"\n\n\"Understandable.\" I pulled my fingers back, marveling at the feel of them sliding free from Kylie's lube-slicked hole. \"It'll be my first too, you know.\"\n\nKylie grinned shyly over her shoulder at me. \"Nervous?\"\n\n\"A little.\"\n\n\"Good. Not just me then.\"\n\n\"No. Definitely not.\"\n\n\"It'll be good,\" she assured me. She turned her head forward, arched her back, and wiggled her butt. The gesture was purely for seductive reasons this time. \"I'll be a good girl for you.\"\n\n\"Hard to say no to that,\" I said, eyes locked on her cute butthole as it swayed back and forth.\n\n\"I should hope so.\"\n\nI lubed my cock without taking my eyes off Kylie. Her wiggling hips became impatient instead of seductive, even in that brief period of waiting for me. She settled immediately as soon as I pressed my cock to her asshole.\n\n\"Ready?\" I asked, probably unnecessarily.\n\nKylie flashed me the biggest, most pleading eyes I'd ever seen on her. \"Please?\"\n\n\"Goddamn,\" I whispered.\n\nMy cock didn't want to go in quite as easily as my fingers. Not at first. Once I pushed just right and popped past Kylie's outer ring, it went much easier.\n\n\"Yesss,\" Kylie hissed happily.\n\nShe was so tight around me, even just the first little bit of my cock as it entered her. Somehow, though, she wasn't so tight that I felt I had to stop, or that I might hurt her. She opened up just enough for me to keep working forward, to go deeper inside her bum.\n\n\"That's ok?\" I asked.\n\n\"So good.\"\n\n\"Doesn't hurt?\"\n\n\"Just a little. But that'll go away. I've done way worse when I was learning.\"\n\nI stopped moving. \"Do you want to wait a moment? I can--\"\n\n\"Keep going!\"\n\n\"I--\"\n\n\"Please!\"\n\nI snorted and shook my head, then gave another thrust into Kylie's ass. She wanted more. So did I. It was a heavenly embrace around my hard cock, and it only got fuller and more all-encompassing the deeper I got.\n\nKylie took everything, right down to my balls. She cooed and moaned as she was filled up as much as I could give her.\n\n\"Mmm, yesss.\" Kylie gave me a heavy-lidded look of sexual contentment before burying her face in her sheets. She rocked her hips, bouncing slightly back and forth on my cock. \"Make me your slutty girl.\"\n\n\"Isn't that who you already are?\"\n\n\"Make me!\" she insisted.\n\nI smiled and squeezed Kylie's ass. She squeezed my cock with her inner muscles in return.\n\nI knew what she meant. What she wanted. I was getting to understand her thinking about some of these things. Sex as a rite of passage wasn't exactly a new concept, even if it was generally questionable. If that was what Kylie felt she needed... well, that's what she was going to get anyway. And admittedly, there was a part of me that really got into the idea of claiming her ass and 'making her my slutty girl,' as she put it.\n\nIt wasn't easy or smooth to fuck her at first, since her ass didn't really want to let me go, but once I started thrusting and getting a rhythm going, her body cooperated better.\n\nKylie gripped her sheets and alternated arching her neck and keeping her face down. She didn't help much when I was pulling out, but she pushed back and gave my thrusts an extra oomph every time I buried myself back inside her. I tried slowing and down and making her fuck herself on me a bit, but she started whining and wiggling, and really couldn't do everything from her position anyway.\n\nHer ass relaxed more as it got used to me, making my strokes nice and smooth after a while. I was able to fuck her in longer, harder thrusts, which she continued to encourage and assist.\n\n\"Fuck me good,\" Kylie moaned softly.\n\n\"I am.\"\n\n\"Make me your girl.\"\n\n\"You already are.\"\n\n\"I know. But make me.\"\n\nI slapped Kylie's ass, assuming she'd like it. She did. I spanked her some more, whenever I felt like it, or whenever I felt she wanted it.",
        "The rest of my inhibitions slowly fell away and I didn't hold anything back. I didn't go as hard as I could have, but I did whatever felt good to me, not worrying about hurting Kylie. I didn't think I could. It was what she wanted. A nice, hard ass fuck. It was more a mental and emotional thrill for her than physical, I assumed, though it was possible that she actually, genuinely loved getting her ass pounded purely for the feel of it. I didn't think that was it, though, and was pretty sure it had more to do with her continued fight against her own gender insecurities.\n\nWhatever the case, she took my cock like a pro. She was a good little butt slut, taking a pounding, squealing happily at every smack of my hand on her ass, and grunting deliriously at every slap of our hips coming together.\n\nShe was so hard in her panties that were struggling to stay on. My hands were groping and grabbing, and I got a few accidental feels in. Nothing that upset her or spoiled the mood. If anything, she might have been horny enough to enjoy those brief seconds of contact. I knew I did, for not so physical reasons. I knew she was already enjoying herself, to just a ridiculous extent, really, but I maintained an urge to be able to better reciprocate the things she did for me sometimes. The hornier and more excited we both got, the stronger my desire to play with her cock and make her cum.\n\nI kept pounding Kylie's ass, finding rhythms and thrusts that got the best squeals, wiggles, and internal flexing from her. I knew I'd found something really good when I got a long string of similar, happy gasps from her, combined with her legs giving way beneath her and slowly letting her fall flat on her tummy on her bed. She nearly dislodged me in the process, but I managed to adjust and follow her without ever slipping out of her butt.\n\nIt took a different stance and movements on my end to accommodate Kylie lying prone beneath me. She was looking a bit dazed and didn't seem to mind a few moments of awkwardly regaining some form of rhythm.\n\nKylie lying flat didn't make for the easiest position, but it was new and kind of fun in its own way. I got to feel like I was pounding her into the bed, just absolutely dominating her amazing, hungry little ass.\n\n\"Cum in me,\" Kylie hissed. She raised her butt some, giving me a better angle and getting back into the action after her brief zone out.\n\nI groaned and fucked Kylie harder.\n\n\"Do it,\" she urged.\n\n\"You really want it?\"\n\n\"Yes. Right now. Inside me.\"\n\n\"You bad girl.\"\n\nKylie giggled softly. \"That's right. I'm your bad girl. Your slutty girl. I want your cum all inside me. Marking me. Making me your slut.\"\n\n\"Goddamn, Ky.\"\n\n\"You don't want that?\"\n\n\"I do. But holy fuck you get slutty sometimes.\"\n\nKylie wiggled happily beneath me, nearly throwing off my pace as her ass refused to stay still for a moment. \"That I do. I love it. I love that I can be slutty with you. And that you like it.\"\n\n\"I like anything with you.\"\n\n\"Don't act like I can't feel how hard you are. Or how close you are to exploding in me.\"\n\n\"Fuck. So close.\"\n\n\"Mmhm. Give it to me.\"\n\nI reached up and put a hand over Kylie's mouth, muffling her to keep her from distracting me. She loved that too, of course. Slutty, horny little thing that she was playing at.\n\nI fucked Kylie hard, hand covering her mouth, body lying heavier on her all the time as I ran out of energy to focus on everything at once. Her ass was the only thing front and center in my mind. Her ass taking my cock, milking it, trying to get me to finish. Her ass that she wanted me to claim, to play into her little fantasy.\n\n\"You're my good girl,\" I whispered into her ear.\n\nKylie grunted into my hand, and shook her head a bit.\n\n\"My good slutty girl.\"\n\nThat got a nod and a happier sounding moan.\n\n\"I'm gonna cum in you.\"\n\nAnother nod, another moan.\n\n\"Fill you up.\"\n\nKylie's back arched, her butt pressed more firmly toward me.\n\n\"Make you mine.\"\n\nShe managed to pull her mouth free for a second. \"Do it.\"\n\nI came harder than ever before. It was almost painful. So much cum inside me, pulsing out, flooding Kylie's ass, making such a naughty mess in her. It felt good on a whole other level. Different, more intense, and meaning something far beyond what I imagined it could.\n\nKylie mewled and wriggled as my weight settled firmly on her, and the last of my cum emptied into her bum. She held onto my arm, holding me in place afterward, making sure I couldn't easily roll off. I stayed right where I was, cock slowly softening, but still buried in her for the moment. She was so warm and soft beneath me, so happy to have me so close in the afterglow.\n\n\"Thank you,\" she said quietly.\n\n\"That was amazing,\" I said.\n\n\"Wasn't it?\"\n\n\"But you know your ass is mine now, right? You're gonna have to let me play with it whenever I want.\"\n\nKylie giggled and finally pushed me off her. \"Is that what you think?\"\n\n\"Consequences of making me claim it.\" I shrugged. \"I don't make the rules.\"\n\nShe slipped her hand behind my neck and kissed me delicately. \"You've claimed all of me. I'm your good slutty girl, aren't I?\"\n\n\"Sounds good.\"\n\n\"I bet.\"\n\n\"Or maybe you're mine, now.\"\n\n\"How do you figure?\"\n\nKylie looked at me with big, serious eyes. \"'Cause I can get you to do basically anything I want.\"\n\n\"I don't know if that counts. What you want seems to involve a lot of my cock going inside you somehow. You're not really making me do anything I don't want to.\"\n\nKylie pushed me onto my back, then rested her head on my chest. \"I know you don't like the way I talk about myself sometimes,\" she murmured. \"But you usually play along anyway.\"\n\n\"I'm getting used to it. It's easier now. I know it's more a game than your actual self-image.\"\n\n\"Little of both, Carter. And it helps whether you believe it or not.\"\n\nI nodded. \"Ok.\"\n\n\"And it's pretty fun too.\"\n\nI smirked. \"Yeah. Kind of is.\"\n\n\"I knew you'd like it once you loosened up.\"\n\n\"No you didn't.\"\n\n\"Did. I could tell.\"\n\n\"Pff, whatever.\"\n\nI rolled Kylie off of me and onto her back. I pinned her down when she tried to roll right back where she'd been all snug and settled. She struggled a little just for show, but her eyes gleamed at being held down by me.\n\nI very calmly waited for her to behave herself, then went for her shirt. I tugged at it, intending to remove it entirely and free up her tits, but stopped when I felt unexpected slickness.\n\nThere was a moment of confusion as I tried to process why Kylie's shirt and tummy felt like they'd been cummed on, since mine was all cozily resting inside her bum. The answer was so obvious that it didn't occur to me at all until I looked lower and noted her cock sticking out of the waistband of her panties, which I'd previously pulled down low enough to leave them in an awkward position.\n\n\"Did you cum?\" I asked, even though the pieces had fallen into place and I knew she had.\n\nKylie nodded, cheeks flushing as a result of my visual inspection. \"I did.\"\n\n\"From being fucked in the butt?\"\n\nShe grinned crookedly. \"Like a good slutty girl,\" she said in a soft voice.\n\nI grinned back. \"A good little butt slut.\"\n\n\"Mmhm. That's me.\"\n\nI left her messy shirt pushed halfway up her tummy. I slipped downward, moving my whole body so that my head was more in line with her panties.\n\n\"These are kind of a mess now,\" I said. \"They should come off.\"\n\nKylie grabbed her panties as I started to pull them down. Our eyes met. \"You don't have to,\" she whispered.\n\n\"Can I, though?\"\n\nShe hesitated, then nodded. \"If you really want to.\"\n\n\"I really do.\"\n\nKylie pulled her hand away and toward her chest. I pulled her panties in the opposite direction.\n\nDespite having made a mess all over herself already, Kylie's cock popped almost straight up as soon as it was released. She was still hard, or maybe hard again. I couldn't tell which.\n\n\"You need cleaned up,\" I said in a bit of a dazed tone. I finished removing Kylie's panties, then settled in with my face closer to a hard cock than it ever had been before.\n\n\"I'm a mess,\" she agreed, not really committing verbally.\n\n\"I better help.\"\n\n\"Yeah. Maybe.\"\n\nI'd been secretly nervous that playing with someone else's penis would be a much scarier thing than my own, that all the memes and jokes about accidental 'gay stuff' had some basis in reality. I was pretty quickly comforted that they didn't. Kylie's cock wasn't much different from mine, in many respects, except that I could easily reach it with my mouth, and that it belonged to her, which made it interesting and a way to provide her pleasure.\n\nMy grasp of Kylie's erection was tentative at first, as were my initial licks at small streaks of her cum. The first soft moan from her lips was all it took to start breaking down those artificial walls of uncertainty.\n\nHer cum didn't taste amazing on its own merits, but it wasn't bad either, and more importantly it belonged to her. The sensuality of cleaning her up made up for the slightly bitter taste of her mess.\n\n\"Sorry I don't have a pussy for you to lick,\" Kylie said with an uncomfortable squirm.\n\n\"Who says I even want one?\"\n\n\"It'd be better, wouldn't it?\"\n\n\"Maybe.\" I kissed the tip of Kylie's dick. \"This is who you are right now. I care about you way more than what you've got down here. I've been trying my best to explain that.\"\n\n\"It's not something I listen very well to.\"\n\n\"No. I got that.\"\n\nKylie squirmed again. \"You can keep licking. If you want.\"\n\n\"What about sucking?\"\n\nShe closed her eyes. \"If you want,\" she repeated.\n\nI went back to licking, growing more comfortable with it as my licks got longer and fuller. The taste of her cum got better, somehow, though that might have been partly due to me already getting the more obvious streaks, and only smaller, subtler tastes remaining to me.\n\n\"How do you get rid of all your hair down here?\" I asked, taking a quick break to gently stroke Kylie's shaft with my hand.\n\n\"The normal way?\"\n\n\"I mean, around the balls and stuff. I tried it once. It's a nightmare.\"\n\n\"It is. Takes patience.\" She shrugged. \"And an unhealthy dislike for certain facets of your own body.\"\n\n\"Ah. Ouch.\"\n\n\"Yep.\"\n\n\"Well, if it helps, everything looks that much... girlier? I guess? In a weird way.\"\n\n\"No, I know what you mean. That's the idea.\"\n\n\"Makes sense.\"\n\nKylie's balls somehow drew me in. I hadn't been planning on it, but I found myself kissing one, then slowly parting my lips and sucking it into my mouth. She let out a sharp gasp. Her hand went to my head, but only to grab a tangled handful of my hair, not to push me away.\n\nI switched balls a few times, sucking oh so delicately on them while jerking Kylie off all the while. It was kind of fun, and got some interesting reactions from her, but it wasn't quite what I wanted.\n\nActually sucking Kylie's cock wasn't that big a step up, physically speaking. Mentally, it was still kind of a thing. It felt far more intense than it actually was to press my lips to the head of Kylie's firm erection, give her a quick, nervous glance, then slide my mouth down over her, parting my lips just enough to accommodate her.\n\nIt took a conscious effort to keep my teeth out of the way. Luckily Kylie wasn't scary big the way a lot of cocks in porn seemed. She was pretty manageable, and I was able to get most of her inside my mouth, even with no previous training.\n\n\"That feels nice,\" Kylie said in a breathy tone.\n\nI was pretty sure it didn't feel as good as when she sucked me, given her superior skills, but it was encouraging all the same. The soft little moans coming from her and the way she played with my hair drove me to keep going.\n\nI bobbed my head up and down at a fairly slow pace at first, concentrating on getting the motion down, keeping my lips pressed to her and my tongue dragging along her shaft. As I got better and faster at it, so too did Kylie's reactions become more obvious and more of a turn on for me. The way she acted when sucking me off sometimes started to make a lot more sense. It was fun making her feel good in such an intimate way.\n\nMy confidence and skill grew quite a bit in a short time. I at least felt like I had the basics down. I was working Kylie's cock smoothly and lovingly, lavishing attention on it in a way that was new and amazing to both of us. Her little gasps and moans were attaining a higher and less controlled pitch, hopefully indicating I was doing as well as I thought I was, and that I could get her to finish.\n\n\"Shiiit,\" Kylie moaned, \"I'm gonna cum.\"\n\nI bobbed my head faster, deeper, gagging slightly as I impaled my throat.\n\n\"Is that ok?\" she asked. \"In your mouth?\"\n\nI flashed a thumb's up and kept sucking her off. I had no idea if I'd actually like it, but fucked if I wasn't going to try it. It needed to happen at least once. Just to see. And if it wasn't so bad, maybe it'd happen again.\n\nKylie's hand pressed against the back of my head, not forcing me down on her cock, but holding me there and preventing me from backing off too far. A splash of hot liquid caught my mouth, the salty and slightly bitter taste hitting me a second later. More cum was already pouring in, accumulating on my tongue, filling my mouth.\n\nI wasn't sure what to do. Actually dealing with a mouthful of cum was a whole different prospect to simply being vaguely aware that it was coming. I took no immediate action, and instead held it in my mouth as I pulled off of Kylie's softening cock.\n\nShe grinned lazily, stretching out in post-orgasm relaxation. \"Don't wanna swallow?\" she asked.\n\nI shrugged.\n\n\"Lemme see.\"\n\nI opened my mouth, careful not to let the cum all drip out.\n\n\"Good boy.\" Kylie tilted her head and examined me for a moment, seeming to enjoy the sight I made. \"If you don't want to swallow, you better hit the bathroom before you spit that everywhere.\"\n\nI considered, then shut my mouth and tried swallowing. It wasn't the greatest flavour, in a sense, but much the same as licking Kylie clean previously, it came from her, which made it sexy enough that I didn't mind.\n\n\"Good boy,\" she repeated.\n\nI flushed warmly, but still crawled over to her and cuddled up. \"So you liked it, huh?\"\n\n\"It was very nice. Very, very nice.\" Kylie hesitated. \"I don't know if I want to do it too often.\"\n\n\"But not never?\"\n\n\"Maybe not never. Buuuttt... you're gonna have to make sure you make me feel like a girl again.\"\n\n\"You're always my good slutty girl,\" I assured her. \"Even if I'm sucking you off at the time.\"\n\n\"Thanks.\" She kissed my cheek. \"But seriously, I'ma need some more cock in me.\"\n\nI giggled and kissed her back properly, lingering on her lips. \"We can make that happen.\"\n\n\"I know. I can feel you all hard again down there.\"\n\n\"You have that effect on me.\"\n\n\"Good.\"\n\nI kissed her again. \"Can we just cuddle for a bit first? I don't want to get all worn out so soon.\"\n\n\"Sure. I'm not in a hurry. Just as long as I get what I need.\"\n\n\"No worries there.\"\n\n\"Mmhm.\"\n\nWe lay together for a while. Kylie rolled over and little-spooned herself against me. I groaned as she pressed her butt firmly against my returned erection, but she didn't wiggle around and try to get me even more excited, so she probably meant it about taking a breather with me.\n\nI pushed her shirt up higher, the only clothing still separating us, and got it out of the way of her tits. I casually stroked and cupped them as we snuggled together.\n\n\"You know the problem, though?\" Kylie asked.\n\n\"What's that?\"\n\n\"Well, you know how I just wanted to leave? To get out of this town once I graduated?\"\n\n\"I remember something about that, sure.\"\n\n\"You kinda make me want to hold off a bit. I had plans. Now they seem, like, too hasty. Or whatever.\"\n\nI kissed her shoulder. \"You liiike me,\" I teased softly.\n\n\"I do. S'not fair.\"\n\n\"That's ok. I like you too. Maybe... maybe more than that.\"\n\n\"The L word?\"\n\n\"Maybe. I don't think I'm there yet. Saying it. But... I dunno.\"\n\nKylie nodded. \"I'm not ready to hear it either. So that's good.\" She covered my hand with hers, the one exploring her boobs. She just held it there a moment. \"But I guess if I ended up staying, it's nice to know that... that I might hear it.\"\n\n\"I'd like it if you stayed. Or if we made plans together. Or whatever.\"\n\n\"Maybe we should.\" Kylie let go of my hand and let me get back to lazily playing with her chest. \"That's too much for me right now, though.\"\n\n\"No kidding. I'm struggling to hold much of any thought in my head. You being all naked and stuff makes that tricky.\"\n\n\"M'not quite nakey.\"\n\n\"Not quite. But close enough to cause problems.\"\n\n\"Mmhm.\" Kylie gave the smallest of wiggles against my cock. \"Anytime you want to take care of those 'problems', lemme know.\"\n\nI lifted myself and pulled on her shoulder, rolling her onto her back. She giggled and immediately lifted her legs, wrapping her arms around them to hold them back and display her butt.\n\n\"How 'bout right now?\"\n\nKylie bit her lip and gave me sultry eyes. \"Now's good.\"\n\n\"Yeah?\"\n\n\"Yeah. Please?\"\n\nI found the lube and reapplied it, getting us ready to go again. I didn't spend much time on it, nor on warming Kylie up. Spreading her legs, pinning them out of the way, then slipping back inside her felt easy and natural, like I'd never left. Except this time I could watch her, stare into her expressive eyes, watch her lips twitch and curl. And I could kiss her, even while buried fully inside.\n\nI went slow. Slow and smooth. A gentle connection between us. The edge had been taken off for both of us. We had all the time in the world.\n\nKylie reached up to my hair, letting me take care of her legs. She pulled me in and kissed me deeply, then held me further away, chewing her bottom lip and staring intently back into my hypnotized gaze.\n\nA soft moan made her mouth open, small and adorable. A cat-like grin replaced the expression soon after.\n\n\"I want this every day,\" Kylie purred.\n\n\"If you're a good girl, maybe you'll get it.\"\n\n\"Aw. But I'm so bad sometimes.\"\n\n\"That'll work too.\"\n\n\"Oh. Good.\"\n\n****\n\nWe hardly wore clothes all weekend. They would only have gotten in the way anyway. We only occasionally remembered to take care of anything that didn't involve fucking or cuddling. Even eating was an unwelcome distraction.\n\nKylie got so much of my cum in a relatively short time. Everywhere. In her butt, in her mouth, on her face or tits or tummy. I had no idea how I kept having more to give her, but she kept coaxing it out regardless.\n\nI didn't get to play with Kylie's cock much more, except for when we watched a movie together on the couch. She sat on my lap, my cock snugly buried in her ass, while I fondled her naked body to my heart's content. I was a little surprised at how easily she let me feel up her cock, alternating between it, her balls, her tits, and other areas on occasion. I eventually made her cum all over her own tummy, which was kinda fun.\n\nWe didn't really talk much more about plans for the future, not that we had much time to think about them. It was mainly just copious, gratuitous sex. It was pretty awesome.\n\nWhat was less awesome was losing track of time on Sunday and not realizing when Kylie's parents were going to be home. It was a bit awkward when they walked in and found us both naked, with my cock pretty firmly down Kylie's throat. At least she was the one gagging herself on me. It would have been worse if I'd been throat fucking her at the time. Close call there.\n\nKylie slowly pulled herself off me. A thick strand of spit dangled between my cock and her bottom lip for a second before breaking and adding to the sloppy mess. She swiped at her chin with the back of her hand, which only helped a little.\n\n\"Uh, hey. You guys are back early,\" Kylie said meekly.\n\n\"Not really,\" her mom said.\n\n\"Oh.\"\n\n\"Who's this?\"",
        "Kylie looked at me, then back to her parents. \"Carter. I told you about him.\"\n\n\"Not enough about him apparently,\" her dad said.\n\nHer mom and dad were both staying quite calm under the circumstances. I attributed that to shock and uncertainty. That would only last so long. I did not, however, have a good exit strategy. They were blocking the only way out, and trying to sprint past seemed terrible for a few different reasons.\n\n\"He usually wears clothes, I assume,\" Kylie's mom said, her tone conversational, but laced thickly with the hint that I ought not to still be sitting there naked with my cock pointed at her daughter.\n\n\"Well we gotta go get them and you guys are still just standing there,\" Kylie said. \"What do you want from us?\"\n\n\"Not to come home to this,\" her dad in an attempt at light humour that didn't really come off that way.\n\nFortunately, they did finally drag each other away and give Kylie and I a chance to head back to her room. My erection wouldn't go down in spite of everything. I'd become used to being naked in the house and around Kylie, but with her parents now lurking, it was a whole other thing. For some reason my cock decided that staying firmly out was the correct reaction.\n\n\"Well that fucking sucked,\" I said once we were alone in her room.\n\n\"Yeah. Sorry. Lost track of time.\"\n\n\"Still, they didn't murder me. So that's something.\"\n\n\"I guess the upside to them raising a son for so many years is Dad doesn't have quite the usual set of instincts when it comes to finding me with a boy.\"\n\n\"That's not funny.\"\n\n\"Is a little.\" Kylie shrugged as she put on a bra. \"In a fucked up way. And I'm not totally kidding.\"\n\n\"No. Maybe. I don't know.\" I sighed. \"You think I can sneak out now, or will they be watching.\"\n\n\"You could, probably, but then it'll only be worse when you come over again.\"\n\n\"You think that's gonna happen?\"\n\n\"It better.\"\n\n\"Oh?\"\n\nKylie flushed. \"You're my boyfriend. And you've met my parents now. Sort of. You should come over more.\"\n\n\"If we don't all die of embarrassment today, then I guess we can make that happen.\"\n\n\"Deal.\"\n\nI tried to appreciate the sight of Kylie dressing, but my mind was elsewhere. My erection shrank away, thankfully, though at the cost of increasing panic and anxiety about the near future.\n\n\"It honestly wasn't that bad though,\" she said while adjusting her panties.\n\n\"No?\"\n\n\"Nah. It was way worse, like, the first time Mom took me bra shopping, for instance. Or they've both walked in on me a few times during... awkward moments.\"\n\n\"Masturbating?\"\n\n\"Not that, thankfully.\" Kylie shrugged. \"Though maybe that wouldn't have been so bad either. Considering.\"\n\n\"Yeah, maybe. I feel like it would be. But then, getting caught with my dick in your mouth kinda buries that. So I dunno.\"\n\nKylie, still missing her bottoms, paused to pat me on the cheek. \"You came through ok. You didn't hardly panic and do something stupid at all.\"\n\n\"There was nothing to do. Just... sit tight. Hope for the apocalypse.\"\n\n\"Pff, whatever. Drama queen.\"\n\n\"Ok, maybe not.\" I took a deep breath. \"We doing this?\"\n\n\"Sure are.\"\n\nThere were softly red faces all around as I was more formally introduced to Kylie's mom and dad. The tension didn't get too bad, somehow, and slowly faded the longer we made forced small talk. What really helped was getting a sense that in spite of how they'd walked in on us, Kylie's mom at least seemed tentatively happy that she'd found someone. Her dad was harder to read and might still have been struggling with some of those confused instincts Kylie had mentioned.\n\nAll in all, it could have been a lot worse. And being real, I would have put up a much larger disaster for the sake of such an amazing, sexy weekend with Kylie.\n\n****\n\nIt was kind of awkward being around either set of our parents for a while, for their own unique reasons. That didn't stop us. Not much did.\n\nKylie was even getting comfortable in more public places, school in particular. She just didn't seem to give a fuck anymore what people might think. If she wanted to hold my hand, she did. If she wanted to engage in ill-advised makeouts in the hallway, she did. It was a little crazy, but I loved it.\n\nWhatever her plans for escaping town may have been, I seem to have well and truly interrupted them. Kylie didn't leave after graduation, nor did she bring the subject up. When I did, she gave some vague answer and said we could worry about it later.\n\nFurther confirmation of her feelings for me, not that it was needed, came a few weeks after graduation. My parents had gone away for a few nights, and that was the sort of opportunity we were all over. We didn't even bother being subtle about it anymore. Our families knew what was up. They must have. And still, we had the luxury of a house to ourselves for a while\n\nSomehow, Kylie and I ended up cuddling naked on the canopy swing out back, watching the sun slowly slip away. It wasn't totally private, but there was a reasonable chance no neighbours would see us. Not that we much cared. We were too self-absorbed for any such concerns.\n\n\"I love you,\" Kylie whispered, somewhat out of nowhere, though really we were basking in the aftermath of copious sex, and the current romance of sunsets and sexy snuggles.\n\nI smiled and pulled her tighter to me. \"Love you too.\"\n\n\"Feels so good being with you,\" she purred, accepting my embrace and melting into it.\n\n\"Right now? Or generally?\"\n\n\"Both. 'Specially when we got no clothes on.\"\n\n\"Agreed.\" I casually slipped my hand to her chest and cupped one of her tits. \"And even more especially when I'm inside you, I suspect.\"\n\n\"Mmm, definitely that too. Or when I got your cum all filling up my ass.\"\n\n\"Not your tummy?\"\n\n\"And my tummy. Both is best.\" Kylie batted her eyes at me, but then giggled and marred the effect somewhat. I found it adorable. \"That's when I feel like the naughtiest, sluttiest girl. Never felt that way before you.\"\n\n\"Happy to help.\" I pinched her nipple lightly. \"Doesn't hurt that you make me feel like a sex god.\"\n\n\"Ooh, someone's full of themselves.\"\n\n\"Not hardly. You're always so busy being full of me, I never get a chance.\"\n\nKylie giggled again and countered my feeling of her tits by toying with my soft cock, slowly bringing it back to life the way she did so expertly. \"Guess I can't argue with that.\"\n\nThe sun continued to sink in the sky, casting pretty colours in long swathes as it slipped away. Admiring it while feeling Kylie up and getting a handjob from her made for quite a fun and relaxing time.\n\n\"I don't know what I want to do anymore,\" Kylie said quietly.\n\n\"Hm?\"\n\n\"Like, I used to want to leave. Get out of here. Go somewhere.\"\n\n\"You don't anymore?\"\n\n\"I don't know! It's all complicated now.\"\n\n\"I'd go with you.\"\n\n\"You probably would, too.\" Kylie sighed. \"But I don't even know if I want to go. It was so easy when I was alone and miserable. Now I'm not. And now I don't know.\"\n\n\"Sorry for complicating things.\"\n\n\"You should be.\" Kylie maneuvered herself around to give me a soft, lingering kiss. \"But also thank you for everything.\"\n\n\"My pleasure.\"\n\n\"Yeah, I bet.\"\n\nI waited for Kylie to settle cozily back against me and resume playing with my cock. \"I mean, you don't have to decide right now.\"\n\n\"Good, 'cause I don't want to.\" She shrugged. \"I just wanna chill, and hang out with you, and do stuff, and... and... I don't even know what else.\"\n\n\"So let's. Let's just do that. Even for the whole summer if we want. See where it goes.\"\n\n\"Sounds nice. I could be convinced.\"\n\nI reached down and grabbed a handful of Kylie's ass. \"Oh I'll convince you.\"\n\nShe squealed and wiggled in my grasp. \"Stop. I wanna finish watching the sunset. After that, you can take me to bed and pound me into the mattress. Or whatever.\"\n\n\"Deal.\"\n\nI moved my hand back up to Kylie's head, gently stroking her hair in the dimming evening light. As had become a recurring theme in my life, I kind of didn't even care what we did, so long as it was together.\n\n\"Love you,\" I whispered, enjoying the sound of it, and the liberating feeling of finally being able to say it aloud.\n\nKylie smiled. \"Love you too.\""
    ],
    "authorname": "Xarth",
    "tags": [
        "transgender",
        "alone",
        "transsexual",
        "blowjob",
        "butt sex",
        "face fuck",
        "friends",
        "high school",
        "trans girl"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/secrets-and-surrender"
}